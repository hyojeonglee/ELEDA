cscope 15 /home/dcslab/charlie/shore-kits               0003607717
	@debug-shore.cpp

1 
	#¥iv©e
 
public


	)

2 
	#¥Ÿe˘ed
 
public


	)

4 
	~"w_deföes.h
"

5 
	~"w_ba£.h
"

6 
	~"w_rc.h
"

8 
	~"°hªad.h
"

10 
	~"œtch.h
"

11 
	~"basics.h
"

12 
	~"°id_t.h
"

14 
	~"sm_ba£.h
"

15 
	~"sm_öt_0.h
"

16 
	~"lid_t.h
"

17 
	~"sm_s.h
"

18 
	~"bf.h
"

19 
	~"bf_s.h
"

20 
	~"bf_c‹e.h
"

21 
	~"∑ge_s.h
"

23 
	~"∑ge.h
"

24 
	~"∑ge_h.h
"

25 
	~"sm_öt_1.h
"

26 
	~"lock.h
"

27 
	~"lock_s.h
"

29 
	~"pm≠.h
"

30 
	~"sm_io.h
"

31 
	~"log.h
"

32 
	~"logªc.h
"

33 
	~"x˘.h
"

34 
	~"x˘_im∂.h
"

35 
	~"x˘_dïídít.h
"

36 
	~"lock_x.h
"

37 
	~"lock_c‹e.h
"

38 
	~"kvl_t.h
"

39 
	~<s°ªam
>

40 
	~<m≠
>

41 
	~<°dio.h
>

48 ˛as†
	cbuckë_t
 {

49 
	mpublic
:

51 #i‚de‡
NOT_PREEMPTIVE


52 #i‚de‡
ONE_MUTEX


53 
DEF_LOCK_X
;

54 
lock_x
 
	mmuãx
;

57 
	mw_li°_t
<
	mlock_hód_t
> 
	mchaö
;

59 
NORET
 
	$buckë_t
() :

60 #i‚de‡
NOT_PREEMPTIVE


61 #i‚de‡
ONE_MUTEX


65 
	`chaö
(
	$W_LIST_ARG
(
lock_hód_t
, 
chaö
)) {

68 
¥iv©e
:

70 
NORET
 
	`buckë_t
(c⁄° 
buckë_t
&);

71 
buckë_t
& 
›î©‹
=(const bucket_t&);

72 
	}
};

74 ˛as†
	c∑ge_m¨k_t
 {

75 
	mpublic
:

76 
öt2_t
 
idx
;

77 
uöt2_t
 
	mÀn
;

80 c⁄°* 
	$∑ge_èg_to_°r
(
∑ge_èg
) {

81 
∑ge_èg
) {

82 
∑ge_p
::
t_exéök_p
:

84 
∑ge_p
::
t_°node_p
:

86 
∑ge_p
::
t_keyed_p
:

88 
∑ge_p
::
t_båì_p
:

90 
∑ge_p
::
t_πªe_p
:

92 
∑ge_p
::
t_fûe_p
:

97 
	}
}

99 c⁄°* 
	$¥ëty_¥öt
(
logªc_t
 c⁄°* 
ªc
, 
i
=0, c⁄°* 
s
=0) {

100 
tmp_d©a
[1024];

101 
ty≥_d©a
[1024];

103 
ªc
->
	`ty≥
()) {

104 
logªc_t
::
t_∑ge_m¨k
:

105 
logªc_t
::
t_∑ge_ª˛aim
:

107 
∑ge_m¨k_t
* 
pm
 = (∑ge_m¨k_t*Ë
ªc
->
_d©a
;

108 
	`¢¥ötf
(
ty≥_d©a
, (type_data),

111 
pm
->
idx
,Öm->
Àn
);

115 
	`¢¥ötf
(
ty≥_d©a
, (type_data), "");

119 c⁄°* 
	t°r
;

120 
°r
 
undo
=(
ªc
->
	`is_undo
()? "undo " : ""),

121 
ªdo
=(
ªc
->
	`is_ªdo
()? "redo " : ""),

122 
˝¢
=(
ªc
->
	`is_˝¢
()? "cpsn " : ""),

123 
logiˇl
=(
ªc
->
	`is_logiˇl
()? "logical " : "");

124 
	`¢¥ötf
(
tmp_d©a
, (tmp_data),

136 
ªc
->
	`Àngth
(),

137 
ªc
->
	`ty≥_°r
(), 
ty≥_d©a
,

138 
logiˇl
, 
undo
, 
ªdo
, 
˝¢
,

139 
ªc
->
	`tid
().
	`gë_hi
(),Ñec->tid().
	`gë_lo
(),

140 
ªc
->
	`c⁄°ru˘_pid
().
	`vﬁ
().
vﬁ
,Ñec->c⁄°ru˘_pid().
	`°‹e
(),Ñec->c⁄°ru˘_pid().
∑ge
,

141 
	`∑ge_èg_to_°r
(
ªc
->
	`èg
()),

142 
ªc
->
	`¥ev
().
	`hi
(),Ñec->¥ev().
	`lo
(),

143 
ªc
->
	`gë_l¢_ck
().
	`hi
(),Ñec->gë_l¢_ck().
	`lo
()

145  
tmp_d©a
;

146 
	}
}

150 
	$sˇn_lock_poﬁ
() {

151 
°d
::
	tm≠
<, > 
	tlm≠
;

152 
lm≠
 
Àngths
;

153 
lock_c‹e_m
* 
c‹e
 = 
smÀvñ_0
::
lm
->
_c‹e
;

154 
i
=0; i < 
c‹e
->
_hèbsz
; i++)

155 
Àngths
[
c‹e
->
_hèb
[
i
].
chaö
.
	`num_membîs
()]++;

157 
	`¥ötf
("Bucket density histogram:\n");

158 
lm≠
::
ôî©‹
 
ô
=
Àngths
.
	`begö
(); ià!Àngths.
	`íd
(); ++it)

159 
	`¥ötf
("\t%d: %d\n", 
ô
->
fú°
, it->
£c⁄d
);

160 
	`¥ötf
("\n");

161 
	}
}

163 
debug_dump_waôs_f‹
(
w_des˚nd_li°_t
<
x˘_t
, 
tid_t
>* 
xli°
=&x˘_t::
_xli°
, 
boﬁ
 
acquúe
=
Ál£
) {

164 if(
acquúe
Ë
W_COERCE
(
x˘_t
::
acquúe_xli°_muãx
());

165 
	g°d
::
m≠
<
lock_hód_t
*, > 
	glockm≠
;

166 
	gw_li°_i
<
	gx˘_t
> 
i
(*
xli°
);

167  
x˘_t
* 
	gme
 = 
i
.
√xt
() ) {

168 if–
lock_ªque°_t
* 
möe
 = 
me
->
lock_öfo
()->
waô
 ) {

169 
lock_hód_t
* 
lock
 = 
möe
->
gë_lock_hód
();

170 
o°rög°ªam
 
	gos
;

171 
	gos
 << 
	glock
->
	g«me
 << 
	gíds
 << 
	g°d
::
Êush
;

172 
	g°d
::
°rög
 
°r
 = 
os
.str();

173 c⁄°* 
	g ame
 = 
°r
.
c_°r
();

174 
¥ötf
("\"0x%p\" -> \"%s\"\n", 
möe
->
thªad
, 
 ame
);

176 if(++
	glockm≠
[
lock
] == 1) {

181 
w_li°_i
<
lock_ªque°_t
> 
i2
(
lock
->
queue
);

182 
lock_ªque°_t
* 
	gtheús
 = 
i2
.
√xt
()) {

183 if(
möe
->
°©us
(Ë=
lock_m
::
t_c⁄vîtög
 && 
theús
->°©us(Ë=lock_m::
t_waôög
)

185 if(
	gmöe
->
°©us
(Ë=
lock_m
::
t_waôög
 && 
theús
 =
möe
)

188 
°hªad_t
* 
	gthªad
 = 
theús
->
thªad
;

189 
¥ötf
("\"%s\" -> \"0x%p\" [ color=%s style=%s]\n",

190 
 ame
, 
thªad
?Åhread : 0,

191 
theús
->
mode
 =
EX
? "red" : "blue",

192 
theús
->
°©us
(Ë=
lock_m
::
t_waôög
? "dotted" : "solid");

198 if(
	gacquúe
Ë
	gx˘_t
::
ªÀa£_xli°_muãx
();

202 
bfcb_t
* 
	$vîify_∑ge_l¢
() {

203 
i
=0; i < 
bf_m
::
_c‹e
->
_num_bufs
; i++) {

204 
bfcb_t
 &
b
 = 
bf_m
::
_c‹e
->
_bu·ab
[
i
];

205 if(
b
.
pid
.
∑ge
 && b.
dúty
) {

206 if(
b
.
ªc_l¢
 > b.
‰ame
->
l¢1
)

207  &
b
;

211 
	}
}

212 c⁄°* 
db_¥ëty_¥öt
(
logªc_t
 c⁄°* 
ªc
, 
i
=0, c⁄°* 
s
=0);

214 
	gvnum_to_m©ch
 = 1;

215 
	g¢um_to_m©ch
;

216 
	g≤um_to_m©ch
;

217 
	$m©ch_∑ge
(
logªc_t
* 
Ω
) {

218 
Õid_t
 
log_pid
 = 
Ω
->
	`c⁄°ru˘_pid
();

219 
Õid_t
 
	`ã°_pid
(
vnum_to_m©ch
, 
¢um_to_m©ch
, 
≤um_to_m©ch
);

220 if(
log_pid
 =
ã°_pid
) {

221 
	`Ârötf
(
°dîr
, "%s\n", 
	`¥ëty_¥öt
(
Ω
));

223 
	}
}

225 
	gtidhi_to_m©ch
 = 0;

226 
	gtidlo_to_m©ch
;

227 
	$m©ch_åx
(
logªc_t
* 
Ω
) {

228 
tid_t
 
log_tid
 = 
Ω
->
	`tid
();

229 
tid_t
 
	`ã°_tid
(
tidlo_to_m©ch
, 
tidhi_to_m©ch
);

230 if(
log_tid
 =
ã°_tid
) {

231 
	`Ârötf
(
°dîr
, "%s\n", 
	`¥ëty_¥öt
(
Ω
));

233 
	}
}

234 
	$m©ch_Æl
(
logªc_t
* 
Ω
) {

235 
	`Ârötf
(
°dîr
, "%s\n", 
	`¥ëty_¥öt
(
Ω
));

236 
	}
}

237 
	$m©ch_n
(
logªc_t
* 
Ω
) {

238 
	}
}

240 
	g°d
::
m≠
<
Õid_t
, 
	gl¢_t
> 
	g∑ge_dïs
;

241 
	g°d
::
m≠
<
tid_t
, 
	gl¢_t
> 
	gtid_dïs
;

243 
boﬁ
 
	gÕid_t
::
›î©‹
<(
Õid_t
 c⁄° &
Ÿhî
) const {

244  
∑ge
 < 
Ÿhî
.page;

247 
	slog_dump_fûe
 {

248 
FILE
* 
	m_f
;

249 
log_dump_fûe
(Ë: 
_f
(
f›í
("logdump.dot", "w")) {

250 
Ârötf
(
_f
,

258 ~
log_dump_fûe
(Ë{ 
f˛o£
(
_f
); }

259 
›î©‹
 
	mFILE
*(Ë{  
	m_f
; }

260 } 
	g__log_dump_fûe
;

262 
	$m©ch_Æl_™d_dump
(
logªc_t
* 
Ω
) {

263 
l¢_t
 
l¢
 = 
Ω
->
	`gë_l¢_ck
();

264 
tid_t
 
tid
 = 
Ω
->
	`tid
();

265 
Õid_t
 
pid
 = 
Ω
->
	`c⁄°ru˘_pid
();

266 if(!
pid
.
	`vÆid
(Ë|| 
tid
.
	`övÆid
())

269 
	`Ârötf
(
__log_dump_fûe
,

271 
l¢
.
_d©a
,Ü¢.
	`hi
(),Ü¢.
	`lo
(), 
tid
.
	`gë_hi
(),Åid.
	`gë_lo
(),

272 
pid
.
	`vﬁ
().
vﬁ
,Öid.
	`°‹e
(),Öid.
∑ge
,

273 
l¢
.
_d©a
, 
Ω
->
	`¥ev
()._data);

275 
l¢_t
 &
tid_¥ev
 = 
tid_dïs
[
tid
];

276 if(
tid_¥ev
.
	`vÆid
()) {

277 
	`Ârötf
(
__log_dump_fûe
,

279 
l¢
.
_d©a
, 
tid_¥ev
._d©a, 
tid
.
	`gë_hi
(),Åid.
	`gë_lo
());

282 
l¢_t
 &
∑ge_¥ev
 = 
∑ge_dïs
[
pid
];

283 if(
∑ge_¥ev
.
	`vÆid
()) {

284 
	`Ârötf
(
__log_dump_fûe
,

286 
l¢
.
_d©a
, 
∑ge_¥ev
._d©a, 
pid
.
	`vﬁ
().
vﬁ
,Öid.
	`°‹e
(),Öid.
∑ge
);

289 
tid_¥ev
 = 
∑ge_¥ev
 = 
l¢
;

290 
	}
}

292 
	$m©ch_n⁄_å™ß˘i⁄Æ
(
logªc_t
* 
Ω
) {

293 
Ω
->
_ty≥
) {

294 
logªc_t
::
t_skù
:

295 
logªc_t
::
t_chk±_begö
:

296 
logªc_t
::
t_chk±_bf_èb
:

297 
logªc_t
::
t_chk±_x˘_èb
:

298 
logªc_t
::
t_chk±_dev_èb
:

299 
logªc_t
::
t_chk±_íd
:

300 
logªc_t
::
t_mou¡_vﬁ
:

301 
logªc_t
::
t_dismou¡_vﬁ
:

302 
	`Ârötf
(
°dîr
, "%s\n", 
	`¥ëty_¥öt
(
Ω
));

307 
	}
}

308 
	~<m≠
>

310 
	s∑ge_hi°‹y
 {

311 
Õid_t
 
	mpid
;

312 
boﬁ
 
	mfound_f‹m©
;

313 
	mœ°_¶Ÿ
;

314 
∑ge_hi°‹y
(
Õid_t
 c⁄° &
p
ˆpid_t(), 
boﬁ
 
f
=
Ál£
, 
l
=-1Ë: 
pid
’), 
found_f‹m©
(f), 
œ°_¶Ÿ
(l) { }

316 
	g°d
::
	tm≠
<, 
	t∑ge_hi°‹y
> 
	tphi°_m≠
;

318 
phi°_m≠
 
	g∑ge_hi°‹õs
;

320 
	g°d
::
	tm≠
<, > 
	tsize_di°_m≠
;

321 
size_di°_m≠
 
	gsize_di°
;

323 
	$¥öt_size_di°
() {

325 
size_di°_m≠
::
ôî©‹
 
ô
=
size_di°
.
	`begö
();

326 
	`Ârötf
(
°dîr
, "LogÑec‹d sizêdi°ributi⁄ (%ldÅŸÆ):\n", 
ô
->
£c⁄d
);

327 ++
ô
 !
size_di°
.
	`íd
())

328 
	`Ârötf
(
°dîr
, " %ld %ld\n", 
ô
->
fú°
, it->
£c⁄d
);

330 
size_di°
.
	`˛ór
();

331 
	}
}

333 
	$m©ch_Æl_mósuª_size_di°
(
logªc_t
* 
Ω
) {

334 
size_di°
[0]++;

335 
size_di°
[
Ω
->
	`Àngth
()]++;

336 
	}
}

338 
	$m©ch_¶Ÿãd_∑ges
(
logªc_t
* 
Ω
, c⁄°* 
«me
=0) {

339 if(
Ω
->
	`èg
(Ë!
∑ge_p
::
t_fûe_p
)

342 if(!
«me
)Çame = "";

343 
Õid_t
 
pid
 = 
Ω
->
	`c⁄°ru˘_pid
();

344 
phi°_m≠
::
ôî©‹
 
ô
 = 
∑ge_hi°‹õs
.
	`föd
(
pid
.
∑ge
);

345 
Ω
->
	`ty≥
()) {

346 
logªc_t
::
t_∑ge_f‹m©
: {

347 if(
ô
 !
∑ge_hi°‹õs
.
	`íd
()) {

348 
	`Ârötf
(
°dîr
,

350 
«me
, 
pid
.
	`vﬁ
().
vﬁ
,Öid.
	`°‹e
(),Öid.
∑ge
,

351 
ô
->
£c⁄d
.
pid
.
	`vﬁ
().
vﬁ
, it->£c⁄d.pid.
	`°‹e
(), it->£c⁄d.pid.
∑ge
, it->£c⁄d.
œ°_¶Ÿ
);

353 
∑ge_hi°‹õs
[
pid
.
∑ge
] = 
	`∑ge_hi°‹y
’id, 
åue
, 0);

355 
logªc_t
::
t_∑ge_ª˛aim
: {

356 
idx
 = *(*Ë
Ω
->
	`d©a
();

357 if(
ô
 =
∑ge_hi°‹õs
.
	`íd
()) {

359 
∑ge_hi°‹õs
[
pid
.
∑ge
] = 
	`∑ge_hi°‹y
’id, 
Ál£
, 
idx
);

363 if(
idx
 !
ô
->
£c⁄d
.
œ°_¶Ÿ
 + 1) {

364 
	`Ârötf
(
°dîr
,

366 
«me
, 
pid
.
	`vﬁ
().
vﬁ
,Öid.
	`°‹e
(),Öid.
∑ge
, 
ô
->
£c⁄d
.
œ°_¶Ÿ
, 
idx
);

368 
ô
->
£c⁄d
.
œ°_¶Ÿ
 = 
idx
;

374 
	}
}

	@debug_locks.cpp

54 
	#¥iv©e
 
public


	)

55 
	#¥Ÿe˘ed
 
public


	)

58 
	~"w_deföes.h
"

59 
	~"°_îr‹_íum_gí.h
"

60 
	~"sm_öt_4.h
"

61 
	~"kvl_t.h
"

62 
	~"pm≠.h
"

63 
	~"sm_s.h
"

64 
	~"∑ge_s.h
"

65 
	~"bf.h
"

66 
	~"∑ge.h
"

67 
	~"sm_io.h
"

68 
	~"exã¡.h
"

69 
	~"lock.h
"

70 
	~"lock_s.h
"

71 
	~"lock_x.h
"

72 
	~"lock_c‹e.h
"

73 
	~"és.h
"

76 ˛as†
	cbuckë_t
 {

77 
	mpublic
:

79 
DEF_LOCK_X_TYPE
(3);

81 
lock_x
 
	mmuãx
;

83 
	mlock_c‹e_m
::
chaö_li°_t
 
chaö
;

85 
NORET
 
	$buckë_t
() :

86 
	`chaö
(
	`W_LIST_ARG
(
lock_hód_t
, 
chaö
),

87 &
muãx
.mutex) {

90 
¥iv©e
:

92 
NORET
 
	`buckë_t
(c⁄° 
buckë_t
&);

93 
buckë_t
& 
›î©‹
=(const bucket_t&);

94 
	}
};

98 
	~<m≠
>

99 
	~<s°ªam
>

102 
	$sˇn_lock_poﬁ
() {

103 
°d
::
	tm≠
<, > 
	tlm≠
;

104 
lm≠
 
Àngths
;

105 
lock_c‹e_m
* 
c‹e
 = 
smÀvñ_0
::
lm
->
_c‹e
;

106 
i
=0; i < 
c‹e
->
_hèbsz
; i++)

107 
Àngths
[
c‹e
->
_hèb
[
i
].
chaö
.
	`num_membîs
()]++;

109 
	`¥ötf
("Bucket density histogram:\n");

110 
lm≠
::
ôî©‹
 
ô
=
Àngths
.
	`begö
(); ià!Àngths.
	`íd
(); ++it)

111 
	`¥ötf
("\t%d: %d\n", 
ô
->
fú°
, it->
£c⁄d
);

112 
	`¥ötf
("\n");

113 
	}
}

116 
	$lock_waôîs
(
boﬁ
 
show_Æl
) {

117 
°d
::
	tm≠
<, > 
	tlm≠
;

118 
lm≠
 
Àngths
;

119 
lock_c‹e_m
* 
c‹e
 = 
smÀvñ_0
::
lm
->
_c‹e
;

120 
i
=0; i < 
c‹e
->
_hèbsz
; i++) {

121 
lock_c‹e_m
::
chaö_li°_i
 
	`ô
(
c‹e
->
_hèb
[
i
].
chaö
);

122 
lock_hód_t
 *
lock
=
ô
.
	`√xt
() ) {

123 i‡(
nŸ
 
show_Æl
 
™d
ÇŸ 
lock
->
waôög
)

126 
°d
::
o°rög°ªam
 
os
;

127 
os
 << 
lock
->
«me
 << 
°d
::
íds
 << std::
Êush
;

128 c⁄°* 
lm
 = 
lock_ba£_t
::
mode_°r
[
lock
->
gø¡ed_mode
];

129 
	`¥ötf
("Lock %p: %†%s:\n", 
lock
, 
os
.
	`°r
().
	`c_°r
(), 
lm
);

130 
lock_hód_t
::
unß„_queue_ôî©‹_t
 
	`ô
(*
lock
);

131 
lock_ªque°_t
 *
ªq
=
ô
.
	`√xt
()) {

132 c⁄°* 
°
 = "";

133 c⁄°* 
cm
 = "";

134 
ªq
->
_°©e
) {

135 
lock_m
::
t_waôög
:

136 
°
 = "*";

138 
lock_m
::
t_c⁄vîtög
:

139 
°
 = "/";

140 
cm
 = 
lock_ba£_t
::
mode_°r
[
ªq
->
	`c⁄vît_mode
()];

145 
tid_t
 
tid
 = 
ªq
->
	`gë_lock_öfo
()->
	`tid
();

146 c⁄°* 
m
 = 
lock_ba£_t
::
mode_°r
[
ªq
->
	`mode
()];

147 
	`¥ötf
("\t%p: %d.%d %s%s%s\n", 
ªq
, 
tid
.
	`gë_hi
(),Åid.
	`gë_lo
(), 
m
, 
°
, 
cm
);

152 
	}
}

155 
	$debug_ã°
() {

156  
	`Ârötf
(
°dîr
, "Hi! Thêaddªs†o‡thêlock m™agî is: %p\n", &
smÀvñ_4
::
lm
);

157 
	}
}

	@include/dora.h

24 #i‚de‡
__DORA_H


25 
	#__DORA_H


	)

27 
	~"d‹a/d‹a_îr‹.h
"

28 
	~"d‹a/comm⁄.h
"

30 
	~"d‹a/key.h
"

31 
	~"d‹a/rvp.h
"

32 
	~"d‹a/ba£_a˘i⁄.h
"

33 
	~"d‹a/logiˇl_lock.h
"

34 
	~"d‹a/a˘i⁄.h
"

35 
	~"d‹a/lockm™.h
"

37 
	~"d‹a/∑πôi⁄.h
"

38 
	~"d‹a/∑π_èbÀ.h
"

40 
	~"d‹a/w‹kî.h
"

42 
	~"d‹a/ønge_a˘i⁄.h
"

43 
	~"d‹a/ønge_∑π_èbÀ.h
"

45 
	~"d‹a/dÊushî.h
"

	@include/dora/action.h

32 #i‚de‡
__DORA_ACTION_H


33 
	#__DORA_ACTION_H


	)

35 
	~<c°dio
>

37 
	~"utû.h
"

39 
	~"d‹a/ba£_a˘i⁄.h
"

40 
	~"d‹a/logiˇl_lock.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

45 
ENTER_NAMESPACE
(
d‹a
);

47 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
> 
˛ass
 
	g∑πôi⁄_t
;

61 
	gãm∂©e
 <
ty≥«me
 
	gD©aTy≥
>

62 ˛as†
	ca˘i⁄_t
 : 
public
 
ba£_a˘i⁄_t


64 
public
:

66 
key_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

68 
	m°d
::
	tve˘‹
<
	tKey
*> 
	tKeyPåVec
;

70 
	m∑πôi⁄_t
<
	tD©aTy≥
> 
	tP¨tôi⁄
;

72 
	mKALReq_t
<
	tD©aTy≥
> 
	tKALReq
;

74 
	m°d
::
	tve˘‹
<
	tKALReq_t
<
	tD©aTy≥
> > 
	tKALReqVec
;

76 
	m¥Ÿe˘ed
:

79 
KeyPåVec
 
_keys
;

82 
KALReqVec
 
	m_ªque°s
;

85 
P¨tôi⁄
* 
	m_∑πôi⁄
;

87 
ölöe
 
	$_a˘_£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
,

88 c⁄° 
numkeys
,

89 c⁄° 
boﬁ
 
ro
=
Ál£
)

91 
	`_ba£_£t
(
ax˘
,
©id
,
¥vp
,
numkeys
,
ro
);

93 
	`as£π
 (
numkeys
);

94 
_keys
.
	`ª£rve
(
numkeys
);

95 
_ªque°s
.
	`ª£rve
(1);

99 
public
:

101 
	$a˘i⁄_t
() :

102 
	`ba£_a˘i⁄_t
(), 
	$_∑πôi⁄
(
NULL
)

103 { 
	}
}

105 
	gvútuÆ
 ~
	$a˘i⁄_t
(Ë{ 
	}
}

109 
	$a˘i⁄_t
(
a˘i⁄_t
 c⁄°& 
rhs
)

110 : 
	`ba£_a˘i⁄_t
(
rhs
),

111 
	`_keys
(
rhs
.
_keys
), 
	`_ªque°s
‘hs.
_ªque°s
), 
	$_∑πôi⁄
(
rhs
.
_∑πôi⁄
)

112 { 
	`as£π
 (0); 
	}
}

114 
	ga˘i⁄_t
& 
	g›î©‹
=(
a˘i⁄_t
 c⁄°& 
rhs
) {

115 i‡(
this
 !&
rhs
) {

116 
as£π
 (0);

117 
	gba£_a˘i⁄_t
::
›î©‹
=(
rhs
);

118 
	g_keys
 = 
rhs
.
_keys
;

119 
	g_ªque°s
 = 
rhs
.
_ªque°s
;

120 
	g_∑πôi⁄
 = 
rhs
.
_∑πôi⁄
;

122  (*
	gthis
);

128 
KeyPåVec
* 
	$keys
(Ë{  (&
_keys
); 
	}
}

129 
KALReqVec
* 
	$ªque°s
(Ë{  (&
_ªque°s
); 
	}
}

131 
ölöe
 
P¨tôi⁄
* 
	$gë_∑πôi⁄
(Ëc⁄° {  (
_∑πôi⁄
); 
	}
}

132 
ölöe
 
	$£t_∑πôi⁄
(
P¨tôi⁄
* 
≠
) {

133 
	`as£π
 (
≠
); 
_∑πôi⁄
 =áp;

134 
	}
}

139 
vútuÆ
 
w_rc_t
 
åx_exec
()=0;

141 
boﬁ
 
	$åx_acq_locks
()

143 
	`as£π
 (
_∑πôi⁄
);

144 
	`åx_upd_keys
();

145  (
_∑πôi⁄
->
	`acquúe
(
_ªque°s
));

146 
	}
}

148 
	$åx_ªl_locks
(
Ba£A˘i⁄PåLi°
& 
ªadyLi°
,

149 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)

151 
	`as£π
 (
_∑πôi⁄
);

152 
	`as£π
 (
_keys_£t
);

154  (
_∑πôi⁄
->
	`ªÀa£
(
this
,
ªadyLi°
,
¥omŸedLi°
));

155 
	}
}

158 
vútuÆ
 
åx_upd_keys
()=0;

160 
	$nŸify_own_∑πôi⁄
()

162 
	`as£π
 (
_∑πôi⁄
);

163 
_∑πôi⁄
->
	`íqueue_commô
(
this
);

164 
	}
}

166 
vútuÆ
 
giveback
()=0;

169 
vútuÆ
 
	$£tup
()

171 
	}
}

173 
vútuÆ
 
	$ª£t
()

176 
_keys
.
	`îa£
(_keys.
	`begö
(),_keys.
	`íd
());

177 
_ªque°s
.
	`îa£
(_ªque°s.
	`begö
(),_ªque°s.
	`íd
());

178 
	}
}

184 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/base_action.h

32 #i‚de‡
__DORA_BASE_ACTION_H


33 
	#__DORA_BASE_ACTION_H


	)

35 
	~<c°dio
>

37 
	~"utû.h
"

39 
	~"d‹a/key.h
"

43 
ENTER_NAMESPACE
(
d‹a
);

46 
	grvp_t
;

56 ˛as†
	cba£_a˘i⁄_t


58 
	mpublic
:

60 
°d
::
	tve˘‹
<
	tba£_a˘i⁄_t
*> 
	tBa£A˘i⁄PåLi°
;

61 
	mBa£A˘i⁄PåLi°
::
	tôî©‹
 
	tBa£A˘i⁄PåIt
;

63 
	m¥Ÿe˘ed
:

66 
rvp_t
* 
_¥vp
;

69 
x˘_t
* 
	m_x˘
;

70 
tid_t
 
	m_tid
;

72 
	m_keys_√eded
;

75 
boﬁ
 
	m_ªad_⁄ly
;

78 
boﬁ
 
	m_keys_£t
;

81 
boﬁ
 
	m_£c⁄d¨y
;

84 #ifde‡
WORKER_VERBOSE_STATS


85 
°›w©ch_t
 
	m_sö˚_íqueue
;

89 
ölöe
 
	$_ba£_£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
,

90 c⁄° 
numkeys
, c⁄° 
boﬁ
 
ro
)

92 
_tid
 = 
©id
;

93 
_x˘
 = 
ax˘
;

94 
_¥vp
 = 
¥vp
;

95 
_keys_√eded
 = 
numkeys
;

96 
_ªad_⁄ly
 = 
ro
;

97 
_keys_£t
 = 
Ál£
;

98 
_£c⁄d¨y
 =
Ál£
;

101 
public
:

103 
	$ba£_a˘i⁄_t
() :

104 
	`_¥vp
(
NULL
), 
	`_x˘
(NULL), 
	`_keys_√eded
(0),

105 
	`_ªad_⁄ly
(
Ál£
), 
	`_keys_£t
(0), 
	$_£c⁄d¨y
(
Ál£
)

106 { 
	}
}

108 
	gvútuÆ
 ~
	$ba£_a˘i⁄_t
(Ë{ 
	}
}

112 
ölöe
 
rvp_t
* 
	$rvp
(Ë{  (
_¥vp
); 
	}
}

113 
ölöe
 
x˘_t
* 
	$x˘
(Ë{  (
_x˘
); 
	}
}

114 
ölöe
 
tid_t
 
	$tid
(Ë{  (
_tid
); 
	}
}

115 
ölöe
 
tid_t
 
	$tid
(Ëc⁄° {  (
_tid
); 
	}
}

118 
ölöe
 
boﬁ
 
	$is_ªad_⁄ly
(Ë{  (
_ªad_⁄ly
); 
	}
}

119 
ölöe
 
	$£t_ªad_⁄ly
() {

120 
	`as£π
 (!
_keys_£t
);

121 
_ªad_⁄ly
 = 
åue
;

122 
	}
}

127 
ölöe
 
boﬁ
 
	$is_£c⁄d¨y
(Ë{  (
_£c⁄d¨y
); 
	}
}

128 
ölöe
 
	$£t_£c⁄d¨y
(Ë{ 
_£c⁄d¨y
 = 
åue
; 
	}
}

133 
ölöe
 
boﬁ
 
	$is_ªady
() {

136  (
_keys_√eded
==0);

137 
	}
}

139 
ölöe
 
	$£tkeys
(c⁄° 
numLocks
 = 1) {

140 
	`as£π
 (
numLocks
);

141 
_keys_√eded
 = 
numLocks
;

142  (
_keys_√eded
);

143 
	}
}

145 
ölöe
 
boﬁ
 
	$gŸkeys
(c⁄° 
numLocks
 = 1) {

151 
	`as£π
 ((
_keys_√eded
-
numLocks
)>=0);

152 
_keys_√eded
 -
numLocks
;

153  (
_keys_√eded
==0);

154 
	}
}

156 
ölöe
 
boﬁ
 
	$¨e_keys_£t
(Ë{  (
_keys_£t
); 
	}
}

157 
ölöe
 
	$keys_£t
(c⁄° 
boﬁ
 
¨e_£t
 = 
åue
Ë{ 
_keys_£t
 =áª_£t; 
	}
}

161 
	$ba£_a˘i⁄_t
(
ba£_a˘i⁄_t
 c⁄°& 
rhs
)

162 : 
	`_¥vp
(
rhs
.
_¥vp
), 
	`_x˘
‘hs.
_x˘
),

163 
	`_tid
(
rhs
.
_tid
), 
	`_keys_√eded
‘hs.
_keys_√eded
),

164 
	`_ªad_⁄ly
(
rhs
.
_ªad_⁄ly
),

165 
	`_keys_£t
(
rhs
.
_keys_£t
),

166 
	$_£c⁄d¨y
(
rhs
.
_£c⁄d¨y
)

167 { 
	}
}

169 
	gba£_a˘i⁄_t
& 
	g›î©‹
=(
ba£_a˘i⁄_t
 c⁄°& 
rhs
);

175 
vútuÆ
 
w_rc_t
 
åx_exec
()=0;

178 
vútuÆ
 
boﬁ
 
åx_acq_locks
()=0;

181 
vútuÆ
 
åx_ªl_locks
(
Ba£A˘i⁄PåLi°
& 
ªadyLi°
,

182 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)=0;

185 
vútuÆ
 
åx_upd_keys
()=0;

188 
vútuÆ
 
nŸify_own_∑πôi⁄
()=0;

191 
vútuÆ
 
giveback
()=0;

193 #ifde‡
WORKER_VERBOSE_STATS


194 
m¨k_íqueue
();

195 
waôed
();

201 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/base_partition.h

31 #i‚de‡
__DORA_BASE_PARTITION_H


32 
	#__DORA_BASE_PARTITION_H


	)

35 
	~<c°dio
>

37 
	~"utû.h
"

39 
	~"d‹a/comm⁄.h
"

40 
	~"d‹a/ba£_a˘i⁄.h
"

42 
	~"sm/sh‹e/sh‹e_ív.h
"

43 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

44 
	~"sm/sh‹e/§mwqueue.h
"

46 
usög
 
«me•a˚
 
	gsh‹e
;

49 
ENTER_NAMESPACE
(
d‹a
);

61 ˛as†
	cba£_∑πôi⁄_t


63 
	m¥Ÿe˘ed
:

65 
Sh‹eEnv
* 
_ív
;

66 
èbÀ_desc_t
* 
	m_èbÀ
;

68 
uöt
 
	m_∑π_id
;

69 
eP¨tôi⁄Pﬁicy
 
	m_∑π_pﬁicy
;

72 
èès_lock
 
	m_ow√r_lock
;

75 
¥o˚ss‹id_t
 
	m_¥s_id
;

77 
	mpublic
:

79 
ba£_∑πôi⁄_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

80 c⁄° 
uöt
 
≠¨tid
,

81 c⁄° 
¥o˚ss‹id_t
 
≠rsid
);

83 
	mvútuÆ
 ~
ba£_∑πôi⁄_t
();

85 
uöt
 
	$∑π_id
(Ëc⁄° {  (
_∑π_id
); }

86 
	`£t_∑π_id
(c⁄° 
uöt
 
pid
);

87 
èbÀ_desc_t
* 
	$èbÀ
(Ëc⁄° {  (
_èbÀ
); 
	}
}

90 
eP¨tôi⁄Pﬁicy
 
gë_∑π_pﬁicy
();

91 
£t_∑π_pﬁicy
(c⁄° 
eP¨tôi⁄Pﬁicy
 
aP¨tPﬁicy
);

96 
mcs_lock
 
	g_íqueue_lock
;

99 
vútuÆ
 
	$has_öput
() const=0;

100 
vútuÆ
 
	$has_commôãd
() const=0;

103 
vútuÆ
 
ba£_a˘i⁄_t
* 
	`dequeue
()=0;

104 
vútuÆ
 
ba£_a˘i⁄_t
* 
	`dequeue_commô
()=0;

107 
vútuÆ
 
	`ª£t
(c⁄° 
¥o˚ss‹id_t
 
≠rsid
)=0;

110 
vútuÆ
 
	`ab‹t_Æl_íqueued
()=0;

113 
vútuÆ
 
	`°›
()=0;

116 
vútuÆ
 
w_rc_t
 
	`¥ï¨eNewRun
()=0;

119 
vútuÆ
 
	`°©i°ics
(
w‹kî_°©s_t
& 
g©hî
)=0;

120 
vútuÆ
 
	`°lsize
(
uöt
& 
g©hî
)=0;

123 
vútuÆ
 
	`dump
();

125 
	}
};

127 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/common.h

32 #i‚de‡
__DORA_COMMON_H


33 
	#__DORA_COMMON_H


	)

35 
	~"utû.h
"

37 
	~"és.h
"

39 
	~<ve˘‹
>

43 
ENTER_NAMESPACE
(
d‹a
);

46 
usög
 
	g°d
::
ve˘‹
;

47 
usög
 
	g°d
::
∑ú
;

55 c⁄° 
uöt
 
	gD_MIN_KEYS_TOUCHED
 = 10000;

58 c⁄° 
uöt
 
	gDF_CPU_RANGE
 = 8;

59 c⁄° 
uöt
 
	gDF_CPU_STARTING
 = 2;

60 c⁄° 
uöt
 
	gDF_CPU_STEP_TABLES
 = 16;

61 c⁄° 
uöt
 
	gDF_CPU_STEP_PARTITIONS
 = 2;

63 c⁄° 
uöt
 
	gDF_NUM_OF_PARTITIONS_PER_TABLE
 = 1;

80 
	eeD‹aLockMode
 {

81 
	mDL_CC_NOLOCK
 = 0,

82 
	mDL_CC_SHARED
 = 1,

83 
	mDL_CC_EXCL
 = 2,

85 
	mDL_CC_MODES
 = 3

99 
D‹aLockModeM©rix
[
DL_CC_MODES
][DL_CC_MODES];

123 
	eeA˘i⁄Decisi⁄
 { 
	mAD_UNDECIDED
 = 0x1,

124 
	mAD_ABORT
 = 0x2,

125 
	mAD_DEADLOCK
 = 0x4,

126 
	mAD_COMMIT
 = 0x8,

127 
	mAD_DIE
 = 0x10,

128 
	mAD_PROPAGATE
 = 0x20}

143 
	ed‹a_ty≥s_t
 { 
	mDT_PLAIN
 = 0x1,

144 
	mDT_PLP
 = 0x2

162 
	eeP¨tôi⁄Pﬁicy
 { 
	mPP_UNDEF
 = 0x1,

163 
	mPP_RANGE
 = 0x2,

164 
	mPP_HASH
 = 0x4,

165 
	mPP_PREFIX
 = 0x8

171 c⁄° 
	gKEYPTR_PER_ACTION_POOL_SZ
 = 60;

172 c⁄° 
	gKALREQ_PER_ACTION_POOL_SZ
 = 30;

173 c⁄° 
	gDT_PER_ACTION_POOL_SZ
 = 360;

176 
Poﬁ
* 
	tPoﬁPå
;

178 c⁄° 
	gACTIONS_PER_RVP_POOL_SZ
 = 30;

184 
	#DECLARE_RVP_CACHE
(
Ty≥
) \

185 
Ty≥
##
_ˇche
 { \

186 
gu¨d
< 
obje˘_ˇche_t
<
Ty≥
> > 
_ˇche
; \

187 
Ty≥
##
	`_ˇche
() { \

188 
_ˇche
 = 
√w
 
obje˘_ˇche_t
<
Ty≥
>(); } \

189 ~
Ty≥
##
	`_ˇche
(Ë{ 
_ˇche
.
	`d⁄e
(); } };

	)

192 
	#DECLARE_TLS_RVP_CACHE
(
Ty≥
) \

193 
	`DECLARE_RVP_CACHE
(
Ty≥
); \

194 
	`DECLARE_TLS
(
Ty≥
##
_ˇche
,
my_
##Ty≥##_ˇche);

	)

199 
	#DECLARE_ACTION_CACHE
(
Ty≥
,
D©©y≥
) \

200 
Ty≥
##
_ˇche
 { \

201 
gu¨d
<
obje˘_ˇche_t
<
Ty≥
> > 
_ˇche
; \

202 
gu¨d
<
Poﬁ
> 
_keyPåPoﬁ
; \

203 
gu¨d
<
Poﬁ
> 
_kÆReqPoﬁ
; \

204 
gu¨d
<
Poﬁ
> 
_dtPoﬁ
; \

205 
Ty≥
##
	`_ˇche
() { \

206 
_ˇche
 = 
√w
 
obje˘_ˇche_t
<
Ty≥
>(); } \

207 ~
Ty≥
##
	`_ˇche
(Ë{ 
_ˇche
.
	`d⁄e
(); } };

	)

211 
	#DECLARE_TLS_ACTION_CACHE
(
Ty≥
,
D©©y≥
) \

212 
	`DECLARE_ACTION_CACHE
(
Ty≥
,
D©©y≥
); \

213 
	`DECLARE_TLS
(
Ty≥
##
_ˇche
,
my_
##Ty≥##_ˇche);

	)

220 
	#DECLARE_DORA_PARTS
(
abbrv
) \

221 
gu¨d
<
úpTabÀIm∂
> 
_
##
abbrv
##
_ú±
; \

222 
uöt
 
_∑πs_
##
abbrv
; \

223 
ölöe
 
úpTabÀIm∂
* 
	`abbrv
(Ë{  (
_
##
abbrv
##
_ú±
.
	`gë
()); }

	)

226 
	#GENERATE_DORA_PARTS
(
abbrv
,
èbÀ«me
) \

227 { 
_
##
abbrv
##
_ú±
 = 
√w
 
	`úpTabÀIm∂
(
this
, 
èbÀ«me
##
	`_desc
(), 
	`dty≥
(), 
i˝u
, 
_˝u_ønge
,ábbrv##
_KEY_EST
); \

228 i‡(!
_
##
abbrv
##
_ú±
) { \

229 
	`TRACE
–
TRACE_ALWAYS
, "Problem in creating irp-table\n"); \

230 
	`as£π
 (0);  (
de_GEN_TABLE
); } \

231 
_ú±p_vec
.
	`push_back
(
_
##
abbrv
##
_ú±
.
	`gë
()); \

232 
i˝u
 = 
	`_√xt_˝u
(i˝u, 
_
##
abbrv
##
_ú±
, 
_˝u_èbÀ_°ï
);}

	)

243 
	#DECLARE_DORA_TRX
(
åx
) \

244 
w_rc_t
 
d‹a_
##
	`åx
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

245 
åx
##
_öput_t
& 
ö
, c⁄° 
boﬁ
 
bWake
); \

246 
w_rc_t
 
d‹a_
##
	`åx
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

247 c⁄° 
•ecificID
, c⁄° 
boﬁ
 
bWake
)

	)

250 
	#DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
˙ame
,
åx
) \

251 
w_rc_t
 
˙ame
::
d‹a_
##
	`åx
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

252 c⁄° 
•ecificID
, c⁄° 
boﬁ
 
bWake
) { \

253 
åx
##
_öput_t
 
ö
 = 
¸óã_
##åx##
	`_öput
(
_sˇlög_Á˘‹
, 
•ecificID
); \

254  (
d‹a_
##
	`åx
(
x˘_id
, 
©π
, 
ö
, 
bWake
)); }

	)

259 
	#DECLARE_ALTER_DORA_TRX
(
åxlid
,
åxim∂
) \

260 
w_rc_t
 
d‹a_
##
	`åxim∂
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

261 
åxlid
##
_öput_t
& 
ö
, c⁄° 
boﬁ
 
bWake
); \

262 
w_rc_t
 
d‹a_
##
	`åxim∂
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

263 c⁄° 
•ecificID
, c⁄° 
boﬁ
 
bWake
)

	)

265 
	#DEFINE_ALTER_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
åxim∂
) \

266 
w_rc_t
 
˙ame
::
d‹a_
##
	`åxim∂
(c⁄° 
x˘_id
, 
åx_ªsu…_tu∂e_t
& 
©π
, \

267 c⁄° 
•ecificID
, c⁄° 
boﬁ
 
bWake
) { \

268 
åxlid
##
_öput_t
 
ö
 = 
¸óã_
##åxlid##
	`_öput
(
_sˇlög_Á˘‹
, 
•ecificID
); \

269  (
d‹a_
##
	`åxim∂
(
x˘_id
, 
©π
, 
ö
, 
bWake
)); }

	)

287 
	#DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
rv≤ame
,
öpuäame
) \

288 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

289 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, c⁄° 
boﬁ
 
bWake
)

	)

292 
	#DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
rv≤ame
,
öpuäame
,
˛as¢ame
) \

293 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

294 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

295 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, \

296 c⁄° 
boﬁ
 
bWake
) { \

297 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

298 
	`as£π
 (
myrvp
); \

299 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
ö
,
bWake
,
this
,
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
()); \

300  (
myrvp
); }

	)

306 
	#DECLARE_DORA_MIDWAY_DYNAMIC_RVP_GEN_FUNC
(
rv≤ame
,
öpuäame
) \

307 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

308 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, \

309 c⁄° 
öå©rx
, c⁄° 
tŸÆ
, c⁄° 
boﬁ
 
bWake
)

	)

312 
	#DEFINE_DORA_MIDWAY_DYNAMIC_RVP_GEN_FUNC
(
rv≤ame
,
öpuäame
,
˛as¢ame
) \

313 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

314 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

315 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, \

316 c⁄° 
öå©rx
, c⁄° 
tŸÆ
, \

317 c⁄° 
boﬁ
 
bWake
) { \

318 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

319 
	`as£π
 (
myrvp
); \

320 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
ö
,
bWake
,
this
, \

321 
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
(), \

322 
öå©rx
,
tŸÆ
); \

323  (
myrvp
); }

	)

329 
	#DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
,
öpuäame
) \

330 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

331 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, \

332 
ba£A˘i⁄sLi°
& 
a˘i⁄s
, c⁄° 
boﬁ
 
bWake
)

	)

334 
	#DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
,
öpuäame
,
˛as¢ame
) \

335 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

336 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

337 
åx_ªsu…_tu∂e_t
& 
¥esu…
, c⁄° 
öpuäame
& 
ö
, \

338 
ba£A˘i⁄sLi°
& 
a˘i⁄s
, c⁄° 
boﬁ
 
bWake
) { \

339 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

340 
	`as£π
 (
myrvp
); \

341 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
ö
,
bWake
,
this
,
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
()); \

342 
myrvp
->
	`c›y_a˘i⁄s
(
a˘i⁄s
); \

343  (
myrvp
); }

	)

351 
	#DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
rv≤ame
) \

352 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, \

353 c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

354 
åx_ªsu…_tu∂e_t
& 
¥esu…
)

	)

357 
	#DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
rv≤ame
,
˛as¢ame
) \

358 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

359 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

360 
åx_ªsu…_tu∂e_t
& 
¥esu…
) { \

361 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

362 
	`as£π
 (
myrvp
); \

363 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
this
,
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
()); \

364  (
myrvp
); }

	)

370 
	#DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
) \

371 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, \

372 c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

373 
åx_ªsu…_tu∂e_t
& 
¥esu…
, 
ba£A˘i⁄sLi°
& 
a˘i⁄s
)

	)

376 
	#DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
,
˛as¢ame
) \

377 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

378 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

379 
åx_ªsu…_tu∂e_t
& 
¥esu…
, 
ba£A˘i⁄sLi°
& 
a˘i⁄s
) { \

380 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

381 
	`as£π
 (
myrvp
); \

382 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
this
,
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
()); \

383 
myrvp
->
	`c›y_a˘i⁄s
(
a˘i⁄s
); \

384  (
myrvp
); }

	)

390 
	#DECLARE_DORA_FINAL_DYNAMIC_RVP_GEN_FUNC
(
rv≤ame
) \

391 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, \

392 c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

393 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

394 c⁄° 
öå©rx
)

	)

397 
	#DEFINE_DORA_FINAL_DYNAMIC_RVP_GEN_FUNC
(
rv≤ame
,
˛as¢ame
) \

398 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

399 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

400 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

401 c⁄° 
öå©rx
) { \

402 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

403 
	`as£π
 (
myrvp
); \

404 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
this
, \

405 
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
(), \

406 
öå©rx
,intratrx); \

407  (
myrvp
); }

	)

413 
	#DECLARE_DORA_FINAL_DYNAMIC_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
) \

414 
rv≤ame
* 
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

415 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

416 c⁄° 
öå©rx
, c⁄° 
tŸÆ
, \

417 
ba£A˘i⁄sLi°
& 
a˘i⁄s
)

	)

420 
	#DEFINE_DORA_FINAL_DYNAMIC_RVP_WITH_PREV_GEN_FUNC
(
rv≤ame
,
˛as¢ame
) \

421 
	`DECLARE_TLS_RVP_CACHE
(
rv≤ame
); \

422 
rv≤ame
* 
˛as¢ame
::
√w_
##
	`rv≤ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

423 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

424 c⁄° 
öå©rx
, c⁄° 
tŸÆ
, \

425 
ba£A˘i⁄sLi°
& 
a˘i⁄s
) { \

426 
rv≤ame
* 
myrvp
 = 
my_
##rv≤ame##
_ˇche
->_ˇche->
	`b‹row
(); \

427 
	`as£π
 (
myrvp
); \

428 
myrvp
->
	`£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
this
, \

429 
my_
##
rv≤ame
##
_ˇche
->_ˇche.
	`gë
(), \

430 
öå©rx
,
tŸÆ
); \

431 
myrvp
->
	`c›y_a˘i⁄s
(
a˘i⁄s
); \

432  (
myrvp
); }

	)

439 
	#DECLARE_DORA_ACTION_GEN_FUNC
(
a˘i⁄ame
,
rv≤ame
,
öpuäame
) \

440 
a˘i⁄ame
* 
√w_
##
	`a˘i⁄ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rv≤ame
* 
¥vp
, c⁄° 
öpuäame
& 
ö
)

	)

443 
	#DEFINE_DORA_ACTION_GEN_FUNC
(
a˘i⁄ame
,
rv≤ame
,
öpuäame
,
a˘i⁄ty≥
,
˛as¢ame
) \

444 
	`DECLARE_TLS_ACTION_CACHE
(
a˘i⁄ame
,
a˘i⁄ty≥
); \

445 
a˘i⁄ame
* 
˛as¢ame
::
√w_
##
	`a˘i⁄ame
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rv≤ame
* 
¥vp
, c⁄° 
öpuäame
& 
ö
) { \

446 
a˘i⁄ame
* 
mya˘i⁄
 = 
my_
##a˘i⁄ame##
_ˇche
->_ˇche->
	`b‹row
(); \

447 
	`as£π
 (
mya˘i⁄
); \

448 
mya˘i⁄
->
	`£t
(
ax˘
,
©id
,
¥vp
,
ö
,
this
,
my_
##
a˘i⁄ame
##
_ˇche
->_ˇche.
	`gë
()); \

449 
¥vp
->
	`add_a˘i⁄
(
mya˘i⁄
); \

450  (
mya˘i⁄
); }

	)

466 
	#DECLARE_DORA_FINAL_RVP_CLASS
(
˙ame
,
ív«me
,
öå©rx
,
tŸÆ
) \

467 ˛as†
	c˙ame
 : 
public
 
ãrmöÆ_rvp_t
 { \

468 
¥iv©e
: \

469 
obje˘_ˇche_t
<
	t˙ame
> 
	trvp_ˇche
; \

470 
ív«me
* 
_≥nv
; \

471 
rvp_ˇche
* 
_ˇche
; \

472 
public
: \

473 
	$˙ame
(Ë: 
	`ãrmöÆ_rvp_t
(), 
	`_≥nv
(
NULL
), 
	$_ˇche
(
NULL
) { } \

474 ~
	$˙ame
(Ë{ 
_ˇche
=
NULL
; 
_≥nv
=NULL; 
	}
} \

475 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, \

476 c⁄° 
ax˘id
, \

477 
åx_ªsu…_tu∂e_t
& 
¥esu…
, 
ív«me
* 
≥nv
, 
rvp_ˇche
* 
pc
) { \

478 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

479 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

480 
	`_£t
(
≥nv
->
	`db
(),≥nv,
ax˘
,
©id
,
ax˘id
,
¥esu…
,
öå©rx
,
tŸÆ
); } \

481 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
} \

482 
	`upd_commôãd_°©s
(); \

483 
	`upd_ab‹ãd_°©s
(); }

	)

487 
	#DECLARE_DORA_FINAL_DYNAMIC_RVP_CLASS
(
˙ame
,
ív«me
) \

488 ˛as†
	c˙ame
 : 
public
 
ãrmöÆ_rvp_t
 { \

489 
¥iv©e
: \

490 
obje˘_ˇche_t
<
	t˙ame
> 
	trvp_ˇche
; \

491 
ív«me
* 
_≥nv
; \

492 
rvp_ˇche
* 
_ˇche
; \

493 
public
: \

494 
	$˙ame
(Ë: 
	`ãrmöÆ_rvp_t
(), 
	`_≥nv
(
NULL
), 
	$_ˇche
(
NULL
) { } \

495 ~
	$˙ame
(Ë{ 
_ˇche
=
NULL
; 
_≥nv
=NULL; 
	}
} \

496 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, \

497 c⁄° 
ax˘id
, \

498 
åx_ªsu…_tu∂e_t
& 
¥esu…
, 
ív«me
* 
≥nv
, 
rvp_ˇche
* 
pc
, \

499 c⁄° 
öå©rx
, c⁄° 
tŸÆ
) { \

500 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

501 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

502 
	`_£t
(
≥nv
->
	`db
(),≥nv,
ax˘
,
©id
,
ax˘id
,
¥esu…
,
öå©rx
,
tŸÆ
); } \

503 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
} \

504 
	`upd_commôãd_°©s
(); \

505 
	`upd_ab‹ãd_°©s
(); }

	)

508 
	#DEFINE_DORA_FINAL_RVP_CLASS
(
˙ame
,
åx
) \

509 
˙ame
::
	`upd_commôãd_°©s
() { \

510 
_≥nv
->
_öc_
##
åx
##
	`_©t
(); _≥nv->
	`öc_åx_com
(); } \

511 
˙ame
::
	`upd_ab‹ãd_°©s
() { \

512 
_≥nv
->
_öc_
##
åx
##
	`_©t
(); _≥nv->_öc_##åx##
	`_Áûed
(); \

513 
_≥nv
->
	`öc_åx_©t
(); }

	)

517 
	#DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
˙ame
,
ív«me
,
öpuäame
,
öå©rx
,
tŸÆ
) \

518 ˛as†
	c˙ame
 : 
public
 
rvp_t
 { \

519 
¥iv©e
: \

520 
obje˘_ˇche_t
<
	t˙ame
> 
	trvp_ˇche
; \

521 
ív«me
* 
_≥nv
; \

522 
rvp_ˇche
* 
_ˇche
; \

523 
boﬁ
 
_bWake
; \

524 
public
: \

525 
	$˙ame
(Ë: 
	`rvp_t
(), 
	`_≥nv
(
NULL
), 
	$_ˇche
(
NULL
) { } \

526 ~
	$˙ame
(Ë{ 
_ˇche
=
NULL
; 
_≥nv
=NULL; 
	}
} \

527 
öpuäame
 
_ö
; \

528 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

529 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

530 c⁄° 
öpuäame
& 
ö
, c⁄° 
boﬁ
 
bWake
, \

531 
ív«me
* 
≥nv
, 
rvp_ˇche
* 
pc
) { \

532 
_ö
 = 
ö
; \

533 
_bWake
 = 
bWake
; \

534 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

535 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

536 
	`_£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
öå©rx
,
tŸÆ
); } \

537 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
} \

538 
w_rc_t
 
	`_run
(); }

	)

542 
	#DECLARE_DORA_EMPTY_MIDWAY_DYNAMIC_RVP_CLASS
(
˙ame
,
ív«me
,
öpuäame
) \

543 ˛as†
	c˙ame
 : 
public
 
rvp_t
 { \

544 
¥iv©e
: \

545 
obje˘_ˇche_t
<
	t˙ame
> 
	trvp_ˇche
; \

546 
ív«me
* 
_≥nv
; \

547 
rvp_ˇche
* 
_ˇche
; \

548 
boﬁ
 
_bWake
; \

549 
public
: \

550 
	$˙ame
(Ë: 
	`rvp_t
(), 
	`_≥nv
(
NULL
), 
	$_ˇche
(
NULL
) { } \

551 ~
	$˙ame
(Ë{ 
_ˇche
=
NULL
; 
_≥nv
=NULL; 
	}
} \

552 
öpuäame
 
_ö
; \

553 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
, \

554 
åx_ªsu…_tu∂e_t
& 
¥esu…
, \

555 c⁄° 
öpuäame
& 
ö
, c⁄° 
boﬁ
 
bWake
, \

556 
ív«me
* 
≥nv
, 
rvp_ˇche
* 
pc
, \

557 c⁄° 
öå©rx
, c⁄° 
tŸÆ
) { \

558 
_ö
 = 
ö
; \

559 
_bWake
 = 
bWake
; \

560 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

561 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

562 
	`_£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,
öå©rx
,
tŸÆ
); } \

563 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
} \

564 
w_rc_t
 
	`_run
(); }

	)

570 
	#DECLARE_DORA_ACTION_NO_RVP_CLASS
(
™ame
,
d©©y≥
,
ív«me
,
öpuäame
,
keyÀn
) \

571 
˛ass
 
™ame
 : 
public
 
ønge_a˘i⁄_im∂
<
d©©y≥
> { \

572 
¥iv©e
: \

573 
obje˘_ˇche_t
<
	t™ame
> 
	ta˘_ˇche
; \

574 
ív«me
* 
_≥nv
; \

575 
a˘_ˇche
* 
_ˇche
; \

576 
public
: \

577 
	`™ame
(Ë: 
ønge_a˘i⁄_im∂
<
d©©y≥
>(), 
	`_≥nv
(
NULL
) { } \

578 ~
	`™ame
() { } \

579 
öpuäame
 
_ö
; \

580 
ölöe
 
	`giveback
(Ë{ 
_ˇche
->giveback(
this
); } \

581 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
, \

582 c⁄° 
öpuäame
& 
ö
, 
ív«me
* 
≥nv
, 
a˘_ˇche
* 
pc
) { \

583 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

584 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

585 
_ö
 = 
ö
; \

586 
	`_ønge_a˘_£t
(
ax˘
,
©id
,
¥vp
,
keyÀn
); } \

587 
w_rc_t
 
	`åx_exec
(); \

588 
	`ˇlc_keys
(); }

	)

591 
	#DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
™ame
,
d©©y≥
,
ív«me
,
rv≤ame
,
öpuäame
,
keyÀn
) \

592 
˛ass
 
™ame
 : 
public
 
ønge_a˘i⁄_im∂
<
d©©y≥
> { \

593 
¥iv©e
: \

594 
obje˘_ˇche_t
<
	t™ame
> 
	ta˘_ˇche
; \

595 
ív«me
* 
_≥nv
; \

596 
rv≤ame
* 
_¥vp
; \

597 
a˘_ˇche
* 
_ˇche
; \

598 
public
: \

599 
	`™ame
(Ë: 
ønge_a˘i⁄_im∂
<
d©©y≥
>(), 
	`_≥nv
(
NULL
) { } \

600 ~
	`™ame
() { } \

601 
öpuäame
 
_ö
; \

602 
ölöe
 
	`giveback
(Ë{ 
_ˇche
->giveback(
this
); } \

603 
ölöe
 
	`£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rv≤ame
* 
¥vp
, \

604 c⁄° 
öpuäame
& 
ö
, 
ív«me
* 
≥nv
, 
a˘_ˇche
* 
pc
) { \

605 
	`as£π
 (
pc
); 
_ˇche
 =Öc; \

606 
	`as£π
 (
¥vp
); 
_¥vp
 =Örvp; \

607 
	`as£π
 (
≥nv
); 
_≥nv
 =Öenv; \

608 
_ö
 = 
ö
; \

609 
	`_ønge_a˘_£t
(
ax˘
,
©id
,
¥vp
,
keyÀn
); } \

610 
w_rc_t
 
	`åx_exec
(); \

611 
	`ˇlc_keys
(); }

	)

623 
	#CHECK_MIDWAY_RVP_ABORTED
(
√xåvp
) \

624 i‡(
	`isAb‹ãd
()) { \

625 
√xåvp
->
	`ab‹t
(); \

626 
w_rc_t
 
e
 = 
√xåvp
->
	`run
(); \

627 i‡(
e
.
	`is_îr‹
()) { \

628 
	`TRACE
–
TRACE_ALWAYS
, \

630 
_tid
.
	`gë_lo
(), 
e
.
	`îr_num
()); } \

631 
√xåvp
 = 
NULL
; \

632  (
e
); }

	)

635 c⁄° 
	gDF_ACTION_CACHE_SZ
 = 100;

638 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/dflusher.h

88 #i‚de‡
__DORA_FLUSHER_H


89 
	#__DORA_FLUSHER_H


	)

91 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

92 
	~"sm/sh‹e/sh‹e_Êushî.h
"

94 
	~"d‹a/rvp.h
"

96 
usög
 
«me•a˚
 
	gsh‹e
;

98 
ENTER_NAMESPACE
(
d‹a
);

101 
˛ass
 
	gd‹a_nŸifõr_t
;

114 ˛as†
	cd‹a_Êushî_t
 : 
public
 
Êushî_t


116 
public
:

117 
§mwqueue
<
	tãrmöÆ_rvp_t
> 
	tD‹aQueue
;

119 
	m¥iv©e
:

121 
gu¨d
<
d‹a_nŸifõr_t
> 
_nŸifõr
;

123 
	mgu¨d
<
	mD‹aQueue
> 
	m_d‹a_toÊush
;

124 
	mgu¨d
<
	mD‹aQueue
> 
	m_d‹a_Êushög
;

126 
	m¥Ÿe˘ed
:

128 
vútuÆ
 
_¥e_STOP_im∂
();

129 
vútuÆ
 
_check_waôög
(
boﬁ
& 
bSÀïNext
,

130 c⁄° 
l¢_t
& 
duøbÀl¢
,

131 
l¢_t
& 
maxl¢
,

132 
uöt
& 
waôög
);

133 
vútuÆ
 
_move_‰om_Êushög
(c⁄° 
l¢_t
& 
duøbÀl¢
);

135 
	mpublic
:

137 
d‹a_Êushî_t
(
Sh‹eEnv
* 
≥nv
, 
c_°r
 
äame
,

138 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
,

139 c⁄° 
u£_¶i
 = 0);

140 
	mvútuÆ
 ~
d‹a_Êushî_t
();

142 
ölöe
 
	$íqueue_toÊush
(
ãrmöÆ_rvp_t
* 
¨vp
)

144 
_d‹a_toÊush
->
	`push
(
¨vp
,
åue
);

147 
	}
};

160 ˛as†
	cd‹a_nŸifõr_t
 : 
public
 
ba£_w‹kî_t


162 
public
:

163 
§mwqueue
<
	tãrmöÆ_rvp_t
> 
	tD‹aQueue
;

165 
	m¥iv©e
:

167 
gu¨d
<
D‹aQueue
> 
_t⁄Ÿify
;

168 
	mgu¨d
<
	mPoﬁ
> 
	m_px˘_t⁄Ÿify_poﬁ
;

170 
_¥e_STOP_im∂
();

171 
_w‹k_ACTIVE_im∂
();

173 
	mpublic
:

175 
d‹a_nŸifõr_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
,

176 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
,

177 c⁄° 
u£_¶i
 = 0);

178 ~
d‹a_nŸifõr_t
();

180 
ölöe
 
	$íqueue_t⁄Ÿify
(
ãrmöÆ_rvp_t
* 
¨vp
Ë{ 
_t⁄Ÿify
->
	`push
◊rvp,
åue
); }

182 
	}
};

185 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/dkey_ranges_map.h

36 #i‚de‡
__DORA_DKEY_RANGES_MAP_H


37 
	#__DORA_DKEY_RANGES_MAP_H


	)

39 
	~"sm_vas.h
"

40 
	~"utû.h
"

42 
	~"d‹a/d‹a_îr‹.h
"

43 
	~"d‹a/comm⁄.h
"

45 
	~"sm/sh‹e/sh‹e_ív.h
"

46 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

48 
usög
 
«me•a˚
 
	g°d
;

49 
usög
 
«me•a˚
 
	gsh‹e
;

52 
ENTER_NAMESPACE
(
d‹a
);

66 ˛as†
	cdkey_ønges_m≠


68 
	m¥iv©e
:

70 
boﬁ
 
_i•Õ
;

71 
key_ønges_m≠
* 
	m_rm≠
;

72 
söfo_s
 
	m_söfo
;

74 
	mpublic
:

79 
dkey_ønges_m≠
(c⁄° 
°id_t
& 
°id
,

80 c⁄° 
cvec_t
& 
möKeyCV
,

81 c⁄° 
cvec_t
& 
maxKeyCV
,

82 c⁄° 
uöt
 
numP¨ts
);

83 
dkey_ønges_m≠
(c⁄° 
°id_t
& 
°id
,
key_ønges_m≠
* 
pkrm
);

84 ~
dkey_ønges_m≠
();

88 
ölöe
 
w_rc_t
 
	$gë_∑πôi⁄
(c⁄° 
cvec_t
& 
cvkey
, 
Õid_t
& 
Õid
) {

89 (
_rm≠
->
	`gëP¨tôi⁄ByUns¸ambÀdKey
(
_söfo
,
cvkey
,
Õid
));

92 
w_rc_t
 
	`gë_Æl_∑πôi⁄s
(
ve˘‹
<
Õid_t
>& 
pidVec
);

96 
w_rc_t
 
	`add_∑πôi⁄
(c⁄° 
cvec_t
& 
key
, 
Õid_t
& 
Õid
);

97 
w_rc_t
 
	`dñëe_∑πôi⁄
(c⁄° 
Õid_t
& 
Õid
);

100 
boﬁ
 
	`is_ßme
(c⁄° 
dkey_ønges_m≠
& 
drm
);

102 
¥iv©e
:

105 
	`dkey_ønges_m≠
();

107 
	}
};

121 ˛as†
	cøngem≠_smt_t
 : 
public
 
thªad_t


123 
¥iv©e
:

125 
Sh‹eEnv
* 
_ív
;

126 
èbÀ_desc_t
* 
	m_èbÀ
;

127 
uöt
 
	m_dty≥
;

129 
	mpublic
:

131 
dkey_ønges_m≠
* 
_drm
;

132 
w_rc_t
 
	m_rc
;

134 
øngem≠_smt_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
èbÀdesc
, 
uöt
 
dty≥
);

135 ~
øngem≠_smt_t
();

136 
w‹k
();

144 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/dora_env.h

34 #i‚de‡
__DORA_ENV_H


35 
	#__DORA_ENV_H


	)

38 
	~<c°dio
>

40 
	~"és.h
"

41 
	~"utû.h
"

42 
	~"sh‹e.h
"

44 
	~"d‹a/ønge_èbÀ_i.h
"

46 
	~"d‹a/dÊushî.h
"

48 
usög
 
«me•a˚
 
	gsh‹e
;

50 
ENTER_NAMESPACE
(
d‹a
);

69 ˛as†
	cD‹aEnv


71 
	mpublic
:

73 
ønge_èbÀ_i
<> 
	túpTabÀIm∂
;

74 
	m°d
::
	tve˘‹
<
	túpTabÀIm∂
*> 
	túpTabÀPåVe˘‹
;

75 
	múpTabÀPåVe˘‹
::
	tôî©‹
 
	túpTabÀPåVe˘‹It
;

77 
	m∑πôi⁄_t
<> 
	túpIm∂
;

78 
	ma˘i⁄_t
<> 
	túpA˘i⁄
;

79 
	mve˘‹
<
	tba£_a˘i⁄_t
*> 
	tba£A˘i⁄sLi°
;

81 
	m¥Ÿe˘ed
:

85 
uöt
 
_dty≥
;

88 
úpTabÀPåVe˘‹
 
	m_ú±p_vec
;

91 
	m_°¨tög_˝u
;

92 
	m_˝u_èbÀ_°ï
;

93 
	m_˝u_ønge
;

96 
uöt_t
 
	m_num_Êushîs
;

99 
	m°d
::
ve˘‹
<
d‹a_Êushî_t
*> 
_vec_Êushî
;

101 
	mpublic
:

103 
D‹aEnv
();

105 
	mvútuÆ
 ~
D‹aEnv
();

108 
uöt
 
	$dty≥
() const;

109 
boﬁ
 
	$is_d‹a
() const;

110 
boﬁ
 
	$is_∂p
() const;

116 
ölöe
 
úpIm∂
* 
	$decide_∑π
(
úpTabÀIm∂
* 
©abÀ
, c⁄° 
aid
) {

117 
cvec_t
 
	`key
((*)&
aid
,());

118 
Õid_t
 
pid
;

119 
w_rc_t
 
r
 = 
©abÀ
->
	`gëP¨tIdxByKey
(
key
,
pid
);

120 i‡(
r
.
	`is_îr‹
()Ë{ 
	`as£π
(
Ál£
);  (
NULL
); }

121  (
©abÀ
->
	`gë
(
pid
.
∑ge
));

125 
ölöe
 
	$íqueue_toÊush
(
ãrmöÆ_rvp_t
* 
¨vp
)

127 
	`w_as£π2
 (
¨vp
);

128 
uöt_t
 
ÊushîIdx
 = (
¨vp
->
	`x˘_id
(Ë% 
_num_Êushîs
);

129 
	`w_as£π0
 (
_vec_Êushî
[
ÊushîIdx
]);

130 
_vec_Êushî
[
ÊushîIdx
]->
	`íqueue_toÊush
(
¨vp
);

131 
	}
}

133 
uöt_t
 
dëîmöeNumFlushîs
();

135 
ölöe
 
uöt_t
 
	$gëNumFlushîs
()

137  (
_num_Êushîs
);

138 
	}
}

141 
	g¥Ÿe˘ed
:

143 
uöt
 
_check_ty≥
();

144 
uöt
 
upd©e_pd
(
Sh‹eEnv
* 
≥nv
);

146 
_po°_°¨t
(
Sh‹eEnv
* 
≥nv
);

147 
_po°_°›
(
Sh‹eEnv
* 
≥nv
);

148 
w_rc_t
 
_√wrun
(
Sh‹eEnv
* 
≥nv
);

149 
_dump
(
Sh‹eEnv
* 
≥nv
);

150 
	$_öfo
(c⁄° 
Sh‹eEnv
* 
≥nv
) const;

151 
	`_°©i°ics
(
Sh‹eEnv
* 
≥nv
);

154 
¥o˚ss‹id_t
 
	`_√xt_˝u
(c⁄°Öro˚ss‹id_t& 
≠rd
,

155 c⁄° 
úpTabÀIm∂
* 
©abÀ
,

156 c⁄° 
°ï
=
DF_CPU_STEP_TABLES
);

158 
	}
};

162 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/dora_error.h

32 #i‚de‡
__DORA_ERROR_H


33 
	#__DORA_ERROR_H


	)

35 
	~"utû/«me•a˚.h
"

37 
ENTER_NAMESPACE
(
d‹a
);

45 
	mde_GEN_WORKER
 = 0x820001,

46 
	mde_GEN_PRIMARY_WORKER
 = 0x820002,

47 
	mde_GEN_STANDBY_POOL
 = 0x820003,

48 
	mde_GEN_PARTITION
 = 0x820004,

49 
	mde_GEN_TABLE
 = 0x820005,

52 
	mde_PROBLEM_ENQUEUE
 = 0x820011,

53 
	mde_WRONG_ACTION
 = 0x820011,

54 
	mde_WRONG_PARTITION
 = 0x820012,

55 
	mde_WRONG_WORKER
 = 0x820013,

57 
	mde_WORKER_ATTACH_XCT
 = 0x820021,

58 
	mde_WORKER_DETACH_XCT
 = 0x820022,

59 
	mde_WORKER_RUN_XCT
 = 0x820023,

60 
	mde_WORKER_RUN_RVP
 = 0x820024,

62 
	mde_INTERMEDIATE_XCT
 = 0x820025,

63 
	mde_TERMINAL_XCT
 = 0x820026,

64 
	mde_NOTIFY_COMMITTED
 = 0x820028,

66 
	mde_INCOMPATIBLE_LOCKS
 = 0x820031,

67 
	mde_WRONG_IDX_DATA
 = 0x820032,

69 
	mde_EARLY_ABORT
 = 0x820041,

70 
	mde_MIDWAY_ABORT
 = 0x820042,

73 
	mde_PLP_NOT_FOUND
 = 0x820051,

74 
	mde_LPID_NOT_FOUND
 = 0x820052,

75 
	mde_PARTID_NOT_FOUND
 = 0x820053

80 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/key.h

31 #i‚de‡
__DORA_KEY_H


32 
	#__DORA_KEY_H


	)

34 
	~"k_deföes.h
"

36 
	~<io°ªam
>

37 
	~<s°ªam
>

38 
	~<ve˘‹
>

40 
	~"sm/sh‹e/sh‹e_ív.h
"

43 
ENTER_NAMESPACE
(
d‹a
);

45 
usög
 
	g°d
::
ve˘‹
;

47 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
> 
	gkey_wøµî_t
;

48 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
> 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam& 
os
,

49 c⁄° 
	gkey_wøµî_t
<
	gD©aTy≥
>& 
	grhs
);

53 c⁄° 
uöt
 
	gMAX_KEY_SIZE
 = 5;

67 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

68 
	skey_wøµî_t


71 
	m°d
::
	tve˘‹
<
	tD©aTy≥
> 
	tD©aVec
;

72 
ty≥«me
 
	tD©aVec
::
	tôî©‹
 
	tD©aVecIt
;

73 
ty≥«me
 
	tD©aVec
::
	tc⁄°_ôî©‹
 
	tD©aVecCô
;

76 
D©aVec
 
	m_key_v
;

79 
key_wøµî_t
() { }

82 
key_wøµî_t
(c⁄° key_wøµî_t<
D©aTy≥
>& 
rhs
)

86 
c›y_ve˘‹
(
rhs
.
_key_v
);

90 
	mkey_wøµî_t
<
	mD©aTy≥
>& 
	m›î©‹
=(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
)

93 
c›y_ve˘‹
(
rhs
.
_key_v
);

94  (*
	mthis
);

98 ~
key_wøµî_t
() { }

101 
ölöe
 
push_back
(
D©aTy≥
& 
™ôem
) {

102 
	m_key_v
.
push_back
(
™ôem
);

106 
ölöe
 
ª£rve
(c⁄° 
uöt
 
keysz
) {

107 
	m_key_v
.
ª£rve
(
keysz
);

113 
ölöe
 
c›y
(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) {

114 
c›y_ve˘‹
(
rhs
.
_key_v
);

119 
ölöe
 
c›y_ve˘‹
(c⁄° 
D©aVec
& 
aVec
) {

120 
as£π
 (
_key_v
.
em±y
());

121 
	m_key_v
.
ª£rve
(
aVec
.
size
());

122 
	m_key_v
.
assign
(
aVec
.
begö
(),aVec.
íd
());

126 
cvec_t
 
toCVec
() const {

127 
cvec_t
 
	macv
;

128 
uöt
 
	mi
=0; i<
	m_key_v
.
size
(); ++i) {

129 
	macv
.
put
(&
_key_v
[
i
],(
D©aTy≥
));

131  (
	macv
);

136 
uöt
 
ªadCVec
(c⁄° 
cvec_t
& 
acv
) {

138 
ª£t
();

141 
uöt
 
	msz
 = 
MAX_KEY_SIZE
 * (
D©aTy≥
);

142 * 
	mco
 = (*)
mÆloc
(
sz
);

143 
size_t
 
	mbwrôí
 = 
acv
.
c›y_to
(
co
,
sz
);

144 
size_t
 
	mbªad
 = 0;

147 
uöt
 
	mdåód
 = 0;

148 
	mbªad
 < 
	mbwrôí
) {

149 
D©aTy≥
 
	madt
 = *(D©aTy≥*)(
co
[
bªad
]);

150 
	m_key_v
.
push_back
(
adt
);

153 
	mbªad
 +(
D©aTy≥
);

154 ++
	mdåód
;

156 
‰ì
 (
co
);

157  (
	mdåód
);

161 
boﬁ
 
	m›î©‹
<(c⁄° 
	mkey_wøµî_t
<
	mD©aTy≥
>& 
	mrhs
) const;

162 
boﬁ
 
	m›î©‹
==(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) const;

163 
boﬁ
 
	m›î©‹
<=(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) const;

168 
öô
() { }

171 
ª£t
() {

172 
	m_key_v
.
îa£
(
_key_v
.
begö
(),_key_v.
íd
());

175 
°rög
 
toSåög
() {

176 
	m°d
::
o°rög°ªam
 
out
 = 
°rög
("");

177 
D©aVecIt
 
	mô
=
_key_v
.
begö
(); it!=_key_v.
íd
(); ++it)

178 
	mout
 << ouà<< (*
	mô
) << "|";

179  (
	mout
.
°r
());

183 
	mãm∂©e
<
˛ass
 
	mT
> 
‰õnd
 
	m°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam& 
os
,

184 c⁄° 
	mkey_wøµî_t
<
	mT
>& 
	mrhs
);

189 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

190 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam& 
os
,

191 c⁄° 
	gkey_wøµî_t
<
	gD©aTy≥
>& 
	grhs
)

193 
ty≥«me
 
	tkey_wøµî_t
<
	tD©aTy≥
>::
	tD©aVecCô
 
	tKeyD©aIt
;

194 
KeyD©aIt
 
	gô
 = 
rhs
.
_key_v
.
begö
(); ià!rhs._key_v.
íd
(); ++it) {

195 
	gos
 << (*
	gô
) << "|";

197  (
	gos
);

217 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

218 
ölöe
 
boﬁ
 
	gkey_wøµî_t
<
	gD©aTy≥
>::
›î©‹
<(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) const

220 
as£π
 (
_key_v
.
size
()<=
rhs
._key_v.size());

221 
uöt
 
	gi
 = 0; i <
	g_key_v
.
size
(); ++i) {

223 i‡(
	g_key_v
[
i
]==
rhs
.
_key_v
[i])

225  (
	g_key_v
[
i
]<
	grhs
._key_v[i]);

227  (
	gÁl£
);

231 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

232 
ölöe
 
boﬁ
 
	gkey_wøµî_t
<
	gD©aTy≥
>::
›î©‹
==(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) const

234 
as£π
 (
_key_v
.
size
()<=
rhs
._key_v.size());

235 
uöt
 
	gi
=0; i<
	g_key_v
.
size
(); i++) {

237 i‡(
	g_key_v
[
i
]==
rhs
.
_key_v
[i])

239  (
	gÁl£
);

241  (
	gåue
);

245 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

246 
ölöe
 
boﬁ
 
	gkey_wøµî_t
<
	gD©aTy≥
>::
›î©‹
<=(c⁄° 
key_wøµî_t
<
D©aTy≥
>& 
rhs
) const

248 
as£π
 (
_key_v
.
size
()<=
rhs
._key_v.size());

249 
uöt
 
	gi
=0; i<
	g_key_v
.
size
(); i++) {

251 i‡(
	g_key_v
[
i
]==
rhs
.
_key_v
[i])

253  (
	g_key_v
[
i
]<
	grhs
._key_v[i]);

256  (
	gåue
);

261 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/lockman.h

31 #i‚de‡
__DORA_LOCK_MAN_H


32 
	#__DORA_LOCK_MAN_H


	)

34 
	~<c°dio
>

35 
	~<m≠
>

36 
	~<ve˘‹
>

37 
	~<deque
>

39 
	~"utû/°l_poﬁed_Æloc.h
"

41 
	~"d‹a/d‹a_îr‹.h
"

42 
	~"d‹a/logiˇl_lock.h
"

43 
	~"d‹a/a˘i⁄.h
"

46 
usög
 
	g°d
::
ve˘‹
;

48 
ENTER_NAMESPACE
(
d‹a
);

50 
ba£_a˘i⁄_t
* 
	tBa£A˘i⁄På
;

51 
	g°d
::
	tve˘‹
<
	tba£_a˘i⁄_t
*> 
	tBa£A˘i⁄PåLi°
;

52 
	gBa£A˘i⁄PåLi°
::
	tôî©‹
 
	tBa£A˘i⁄PåIt
;

68 
	gãm∂©e
<
˛ass
 
	gD©aTy≥
>

69 
	slock_m™_t


71 
	mpublic
:

73 
a˘i⁄_t
<
	tD©aTy≥
> 
	tA˘i⁄
;

75 
	mkey_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

77 
	mKeyLockM≠
<
	tD©aTy≥
> 
	tKeyLLM≠
;

78 
	m°d
::
	t∑ú
<
	tKey
,
	tLogiˇlLock
> 
	tKeyLLPaú
;

80 
	m°d
::
	t_Rb_åì_node
<
	tKeyLLPaú
> 
	tKeyLLM≠Node
;

82 
	mKALReq_t
<
	tD©aTy≥
> 
	tKALReq
;

84 
	m°d
::
	tve˘‹
<
	tKALReq
> 
	tKALReqVec
;

85 
ty≥«me
 
	tKALReqVec
::
	tôî©‹
 
	tKALReqIt
;

87 
	m¥iv©e
:

90 
gu¨d
<
KeyLLM≠
> 
_key_Œ_m
;

92 
	mpublic
:

94 
lock_m™_t
(c⁄° 
keyE°im©i⁄
)

96 
_key_Œ_m
 = 
√w
 
KeyLLM≠
(
keyE°im©i⁄
);

99 ~
lock_m™_t
() { }

105 
ölöe
 
boﬁ
 
acquúe_Æl
(
KALReqVec
& 
akÆrvec
)

107 
boﬁ
 
	mbResu…
 = 
åue
;

108 
	mi
=0;

109 
KALReqIt
 
	mô
=
akÆrvec
.
begö
(); it!˜kÆrvec.
íd
(); ++it) {

111 ++
	mi
;

112 i‡(!
	m_key_Œ_m
->
acquúe
(*
ô
)) {

130 
TRACE
–
TRACE_TRX_FLOW
, "Cannotácquire for (%d)\n",

131 ((*
ô
).
tid
()->
gë_lo
()));

132 
	mbResu…
 = 
Ál£
;

135 
as£π
(
i
);

136  (
	mbResu…
);

143 
ölöe
 
ªÀa£_Æl
(
A˘i⁄
* 
∑˘i⁄
,

144 
Ba£A˘i⁄PåLi°
& 
ªadyLi°
,

145 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)

147 
as£π
 (
∑˘i⁄
);

148 
as£π
 (
ªadyLi°
.
em±y
(Ë&& 
¥omŸedLi°
.empty());

149 
TRACE
–
TRACE_TRX_FLOW
, "Rñósög (%d)\n", 
∑˘i⁄
->
tid
().
gë_lo
());

152 
KALReqIt
 
	mô
=
∑˘i⁄
->
ªque°s
()->
begö
(); it!ıa˘i⁄->ªque°s()->
íd
(); ++it) {

153 
Key
* 
	mpkey
 = (*
ô
).
key
();

154 
	m_key_Œ_m
->
ªÀa£
(*
pkey
,
∑˘i⁄
,
¥omŸedLi°
);

158 
Ba£A˘i⁄På
 
	m≠
 = 
NULL
;

159 
uöt
 
	mi
=0; i<
	m¥omŸedLi°
.
size
(); ++i) {

162 
	m≠
 = 
¥omŸedLi°
[
i
];

163 
	m≠
->
gŸkeys
(1);

164 i‡(
	m≠
->
is_ªady
()) {

165 
TRACE
–
TRACE_TRX_FLOW
, "(%d)Ñeady (%d)\n",

166 
∑˘i⁄
->
tid
().
gë_lo
(), 
≠
->tid().get_lo());

167 
	mªadyLi°
.
push_back
(
≠
);

177 
uöt
 
key°ouched
(Ëc⁄° {  (
	m_key_Œ_m
->keystouched()); }

179 
ª£t
(Ë{ 
	m_key_Œ_m
->reset(); }

180 
dump
(Ë{ 
	m_key_Œ_m
->dump(); }

182 
boﬁ
 
is_˛ón
(
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
) {

183  (
	m_key_Œ_m
->
is_˛ón
(
tﬂb‹t
));

189 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/logical_lock.h

32 #i‚de‡
__DORA_LOGICAL_LOCK_H


33 
	#__DORA_LOGICAL_LOCK_H


	)

35 
	~<c°dio
>

36 
	~<m≠
>

37 
	~<ve˘‹
>

38 
	~<deque
>

40 
	~"utû/°l_poﬁed_Æloc.h
"

41 
	~"utû/°l_block_Æloc.h
"

43 
	~"d‹a/comm⁄.h
"

44 
	~"d‹a/d‹a_îr‹.h
"

45 
	~"d‹a/key.h
"

46 
	~"d‹a/ba£_a˘i⁄.h
"

49 
usög
 
	g°d
::
m≠
;

50 
usög
 
	g°d
::
mu…im≠
;

51 
usög
 
	g°d
::
ve˘‹
;

52 
usög
 
	g°d
::
deque
;

54 
ENTER_NAMESPACE
(
d‹a
);

56 
ba£_a˘i⁄_t
* 
	tBa£A˘i⁄På
;

57 
	g°d
::
	tve˘‹
<
	tba£_a˘i⁄_t
*> 
	tBa£A˘i⁄PåLi°
;

58 
	gBa£A˘i⁄PåLi°
::
	tôî©‹
 
	tBa£A˘i⁄PåIt
;

60 
	ga˘i⁄LLE¡ry
;

61 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, c⁄° 
	ga˘i⁄LLE¡ry
& 
	grhs
);

63 
	gLogiˇlLock
;

64 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, 
	gLogiˇlLock
& 
	grhs
);

76 
	sA˘i⁄LockReq


78 
A˘i⁄LockReq
()

79 : 
_a˘i⁄
(
NULL
)

82 
A˘i⁄LockReq
(
ba£_a˘i⁄_t
* 
a˘i⁄
, c⁄° 
tid_t
& 
©id
,

83 c⁄° 
eD‹aLockMode
 
adlm
 = 
DL_CC_NOLOCK
)

84 : 
_a˘i⁄
(
a˘i⁄
), 
_tid
(
©id
), 
_dlm
(
adlm
)

87 ~
A˘i⁄LockReq
()

89 
	m_a˘i⁄
 = 
NULL
;

93 
A˘i⁄LockReq
(c⁄° A˘i⁄LockReq& 
rhs
)

94 : 
_a˘i⁄
(
rhs
._a˘i⁄), 
_tid
‘hs._tid), 
_dlm
(rhs._dlm)

97 
	mA˘i⁄LockReq
& 
	m›î©‹
=(c⁄° 
A˘i⁄LockReq
& 
rhs
)

99 
_a˘i⁄
 = 
rhs
._action;

100 
	m_tid
 = 
rhs
.
_tid
;

101 
	m_dlm
 = 
rhs
.
_dlm
;

102  (*
	mthis
);

106 
ölöe
 
eD‹aLockMode
 
dlm
(Ë{  (
	m_dlm
); }

107 
ölöe
 
ba£_a˘i⁄_t
* 
a˘i⁄
(Ë{  (
	m_a˘i⁄
); }

108 
ölöe
 
tid_t
* 
tid
(Ë{  (&
	m_tid
); }

110 
ölöe
 
boﬁ
 
isSame
(c⁄° 
A˘i⁄LockReq
& 
Ær
Ë{  (
	m_tid
=˜Ã.
_tid
); }

113 
‰õnd
 
	m°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, c⁄° 
	mA˘i⁄LockReq
& 
	mrhs
);

116 
	m¥Ÿe˘ed
:

119 
ba£_a˘i⁄_t
* 
_a˘i⁄
;

120 
tid_t
 
	m_tid
;

121 
eD‹aLockMode
 
	m_dlm
;

138 
	gãm∂©e
<
˛ass
 
	gD©aTy≥
>

139 
	gKALReq_t
 : 
public
 
A˘i⁄LockReq


141 
key_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

143 
KALReq_t
(c⁄° 
A˘i⁄LockReq
& 
Ær
, 
Key
* 
akey
)

144 : 
A˘i⁄LockReq
(
Ær
), 
_key
(
akey
)

147 
KALReq_t
(
ba£_a˘i⁄_t
* 
a˘i⁄
, c⁄° 
eD‹aLockMode
 
adlm
, 
Key
* 
akey
)

148 : 
A˘i⁄LockReq
(
a˘i⁄
,a˘i⁄->
tid
(),
adlm
), 
_key
(
akey
)

150 ~
KALReq_t
() { }

154 
KALReq_t
(c⁄° KALReq_t& 
rhs
)

155 : 
A˘i⁄LockReq
(
rhs
), 
_key
(rhs._key)

158 
	gKALReq_t
& 
	g›î©‹
=(c⁄° 
KALReq_t
& 
rhs
) {

159 i‡(
this
!=&
rhs
) {

160 
A˘i⁄LockReq
::
›î©‹
=(
rhs
);

161 
	g_key
 = 
rhs
.
_key
;

163  (*
	gthis
);

168 
Key
* 
key
(Ë{  (
	g_key
); }

171 
Key
* 
	g_key
;

191 
	sLogiˇlLock


193 
	m°d
::
	tve˘‹
<
	tA˘i⁄LockReq
> 
	tA˘i⁄LockReqVec
;

194 
	mA˘i⁄LockReqVec
::
	tôî©‹
 
	tA˘i⁄LockReqVecIt
;

195 
	mPoﬁedLi°
<
	tA˘i⁄LockReq
>::
	tTy≥
 
	tA˘i⁄LockReqLi°
;

196 
	mA˘i⁄LockReqLi°
::
	tôî©‹
 
	tA˘i⁄LockReqLi°It
;

197 
	mA˘i⁄LockReqLi°
::
	tc⁄°_ôî©‹
 
	tA˘i⁄LockReqLi°Cô
;

203 
LogiˇlLock
(
A˘i⁄LockReq
& 
™ow√r
);

204 ~
LogiˇlLock
() { }

207 
eD‹aLockMode
 
dlm
(Ëc⁄° {  (
	m_dlm
); }

208 
	mA˘i⁄LockReqVec
& 
ow√rs
(Ë{  (
	m_ow√rs
); }

209 
	mA˘i⁄LockReqLi°
& 
waôîs
(Ë{  (
	m_waôîs
); }

215 
boﬁ
 
acquúe
(
A˘i⁄LockReq
& 
Ær
);

222 
ªÀa£
(
Ba£A˘i⁄På
 
™ow√r
, 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
);

227 
boﬁ
 
is_˛ón
() const;

228 
boﬁ
 
has_ow√rs
(Ëc⁄° {  (!
	m_ow√rs
.
em±y
()); }

229 
boﬁ
 
has_waôîs
(Ëc⁄° {  (!
	m_waôîs
.
em±y
()); }

232 
ab‹t_™d_ª£t
(
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
);

234 
	m¥iv©e
:

237 
eD‹aLockMode
 
_dlm
;

238 
A˘i⁄LockReqVec
 
	m_ow√rs
;

239 
A˘i⁄LockReqLi°
 
	m_waôîs
;

242 
boﬁ
 
_hód_ˇn_acquúe
();

245 
boﬁ
 
_upd_dlm
();

269 
	#BLOCK_ALLOC_LLMAP


	)

271 c⁄° 
	gENTRIES_PER_KEY_LL_MAP
 = 6000;

273 
	gãm∂©e
<
˛ass
 
	gD©aTy≥
>

274 
	sKeyLockM≠


276 
	mpublic
:

278 
key_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

280 
	m°d
::
	tve˘‹
<
	tKey
> 
	tKeyLi°
;

282 
	mKALReq_t
<
	tD©aTy≥
> 
	tKALReq
;

284 #ifde‡
BLOCK_ALLOC_LLMAP


285 
ty≥«me
 
	tm≠__block_Æloc
<
	tKey
,
	tLogiˇlLock
>::
	tTy≥
 
	tLLM≠
;

287 
ty≥«me
 
	tPoﬁedM≠
<
	tKey
,
	tLogiˇlLock
>::
	tTy≥
 
	tLLM≠
;

290 
ty≥«me
 
	tLLM≠
::
	tôî©‹
 
	tLLM≠It
;

291 
ty≥«me
 
	tLLM≠
::
	tc⁄°_ôî©‹
 
	tLLM≠Cô
;

293 
ty≥«me
 
	tLLM≠
::
	tvÆue_ty≥
 
	tLLM≠VT
;

294 #i‚de‡
BLOCK_ALLOC_LLMAP


295 
	m_Rb_åì_node
<
	tLLM≠VT
> 
	tLLM≠Node
;

298 
	m¥Ÿe˘ed
:

301 
gu¨d
<
LLM≠
> 
_Œ_m≠
;

302 
LLM≠It
 
	m_Œ_m≠_ô
;

305 
	mgu¨d
<
	mPoﬁ
> 
	m_keyŒ_poﬁ
;

308 
	mgu¨d
< 
	mobje˘_ˇche_t
<
	mKey
> > 
	m_key_ˇche
;

310 
	mpublic
:

312 
KeyLockM≠
(c⁄° 
keyE°im©i⁄
)

315 
as£π
 (
keyE°im©i⁄
);

316 #ifde‡
BLOCK_ALLOC_LLMAP


317 
	m_Œ_m≠
 = 
√w
 
LLM≠
;

319 
	m_keyŒ_poﬁ
 = 
√w
 
Poﬁ
((
LLM≠Node
), 
keyE°im©i⁄
);

320 
as£π
 (
_keyŒ_poﬁ
);

321 
	m_Œ_m≠
 = 
√w
 
LLM≠
(
°d
::
Àss
<
Key
>(),
_keyŒ_poﬁ
.
gë
());

324 
	m_key_ˇche
 = 
√w
 
obje˘_ˇche_t
<
Key
>();

325 
as£π
 (
_key_ˇche
);

328 ~
KeyLockM≠
()

331 
ª£t
();

334 
	m_key_ˇche
.
d⁄e
();

336 
	m_Œ_m≠
.
d⁄e
();

337 
	m_keyŒ_poﬁ
.
d⁄e
();

343 
ölöe
 
boﬁ
 
acquúe
(
KALReq
& 
akÆr
)

345 
boﬁ
 
	mbAcquúe
 = 
Ál£
;

348 
	m_Œ_m≠_ô
 = 
_Œ_m≠
->
lowî_bound
(*
akÆr
.
_key
);

350 i‡(
	m_Œ_m≠_ô
!=
_Œ_m≠
->
íd
() &&

351 !(
_Œ_m≠
->
key_comp
()(*
akÆr
.
_key
,
	m_Œ_m≠_ô
->
	mfú°
))) {

354 
	mbAcquúe
 = 
_Œ_m≠_ô
->
£c⁄d
.
acquúe
(
akÆr
);

360 
Key
* 
	makey
 = 
_key_ˇche
->
b‹row
();

361 
	makey
->
c›y
(*
akÆr
.
_key
);

363 
	m_Œ_m≠
->
ö£π
(
_Œ_m≠_ô
,
LLM≠VT
(*
akey
,
akÆr
));

364 
	m_key_ˇche
->
giveback
(
akey
);

365 
	mbAcquúe
 = 
åue
;

368 i‡(
	mbAcquúe
Ë
	makÆr
.
a˘i⁄
()->
gŸkeys
(1);

369  (
	mbAcquúe
);

373 
ölöe
 
ªÀa£
(c⁄° 
Key
& 
aKey
,

374 
Ba£A˘i⁄På
 
∑˘i⁄
,

375 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)

383 
	m_Œ_m≠_ô
 = 
_Œ_m≠
->
föd
(
aKey
);

384 
LogiˇlLock
* 
	mŒ
 = &
_Œ_m≠_ô
->
£c⁄d
;

385 
as£π
 (
Œ
);

387 
	mrhs
 = 
Œ
->
ªÀa£
(
∑˘i⁄
,
¥omŸedLi°
);

389  (
	mrhs
);

396 
˛ór
(Ë{ 
	m_Œ_m≠
->clear(); }

399 
ª£t
() {

401 
	mve˘‹
<
	mx˘_t
*> 
	mtﬂb‹t
;

402 
LLM≠It
 
	mô
=
_Œ_m≠
->
begö
(); it!=_Œ_m≠->
íd
(); ++it) {

403 
	mô
->
	m£c⁄d
.
ab‹t_™d_ª£t
(
tﬂb‹t
);

406 
	m_Œ_m≠
->
˛ór
();

410 
uöt
 
key°ouched
(Ëc⁄° {  (
	m_Œ_m≠
->
size
()); }

413 
boﬁ
 
is_˛ón
(
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
) {

415 
boﬁ
 
	misCÀ™
 = 
åue
;

416 
uöt
 
	mdútyCou¡
 = 0;

417 
LLM≠It
 
	mô
=
_Œ_m≠
->
begö
(); it!=_Œ_m≠->
íd
(); ++it) {

418 i‡(!
	mô
->
	m£c⁄d
.
is_˛ón
()) {

419 ++
	mdútyCou¡
;

422 
	mô
->
	m£c⁄d
.
ab‹t_™d_ª£t
(
tﬂb‹t
);

425 i‡(
	mdútyCou¡
) {

426 
TRACE
–
TRACE_ALWAYS
, "(%dËdútyÜocks\n", 
dútyCou¡
);

428  (
	misCÀ™
);

431 
dump
() {

432 
	msz
 = 
_Œ_m≠
->
size
();

433 
TRACE
–
TRACE_DEBUG
, "Key†(%d)\n", 
sz
);

434 
LLM≠It
 
	mô
=
_Œ_m≠
->
begö
(); it!=_Œ_m≠->
íd
(); ++it) {

435 
	mcout
 << "K (" << 
	mô
->
	mfú°
 << ")\nL\n";

436 
	mcout
 << 
	mô
->
	m£c⁄d
 << "\n";

442 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/part_table.h

36 #i‚de‡
__DORA_PART_TABLE_H


37 
	#__DORA_PART_TABLE_H


	)

40 
	~<c°dio
>

42 
	~"utû.h
"

44 
	~"sm/sh‹e/sh‹e_ív.h
"

45 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

47 
	~"d‹a/ba£_∑πôi⁄.h
"

49 
usög
 
«me•a˚
 
	gsh‹e
;

52 
ENTER_NAMESPACE
(
d‹a
);

63 ˛as†
	c∑π_èbÀ_t


65 
	mpublic
:

67 
m≠
<
	tshpid_t
, 
	tba£_∑πôi⁄_t
*> 
	tBa£P¨tôi⁄PåM≠
;

68 
	mm≠
<
	tshpid_t
, 
	tba£_∑πôi⁄_t
*>::
	tôî©‹
 
	tBPPM≠It
;

69 
	mm≠
<
	tshpid_t
, 
	tba£_∑πôi⁄_t
*>::
	tc⁄°_ôî©‹
 
	tBPPM≠CIt
;

71 
	m¥Ÿe˘ed
:

73 
Sh‹eEnv
* 
_ív
;

74 
èbÀ_desc_t
* 
	m_èbÀ
;

77 
èès_lock
 
	m_lock
;

80 
Ba£P¨tôi⁄PåM≠
 
	m_bµm≠
;

83 
¥o˚ss‹id_t
 
	m_°¨t_¥s_id
;

84 
¥o˚ss‹id_t
 
	m_√xt_¥s_id
;

85 
uöt
 
	m_¥s_ønge
;

88 
uöt
 
	m_key_e°im©i⁄
;

90 
	mpublic
:

92 
∑π_èbÀ_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

93 c⁄° 
¥o˚ss‹id_t
 
≠rs
,

94 c⁄° 
uöt
 
a˝uønge
,

95 c⁄° 
uöt
 
keyE°im©i⁄
);

97 
	mvútuÆ
 ~
∑π_èbÀ_t
();

103 
vútuÆ
 
w_rc_t
 
°›
();

106 
vútuÆ
 
w_rc_t
 
¥ï¨eNewRun
();

110 
vútuÆ
 
w_rc_t
 
gëP¨tIdxByKey
(c⁄° 
cvec_t
& 
cvkey
, 
Õid_t
& 
pid
)=0;

115 
vútuÆ
 
w_rc_t
 
ª∑πôi⁄
()=0;

120 
vútuÆ
 
w_rc_t
 
ª£t
();

123 
w_rc_t
 
move
(c⁄° 
¥o˚ss‹id_t
 
≠rs
, c⁄° 
uöt
 
a˝uønge
);

126 
vútuÆ
 
¥o˚ss‹id_t
 
√xt_˝u
(c⁄°Öro˚ss‹id_t& 
≠rd
);

128 
èbÀ_desc_t
* 
	$èbÀ
() const;

133 
	$°©i°ics
() const;

136 
	$öfo
() const;

139 
	$dump
() const;

143 
	`EXIT_NAMESPACE
(
d‹a
);

	@include/dora/partition.h

31 #i‚de‡
__DORA_PARTITION_H


32 
	#__DORA_PARTITION_H


	)

35 
	~"d‹a/ba£_∑πôi⁄.h
"

37 
	~"sm/sh‹e/§mwqueue.h
"

39 
	~"d‹a/lockm™.h
"

40 
	~"d‹a/w‹kî.h
"

42 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

48 
ENTER_NAMESPACE
(
d‹a
);

50 c⁄° 
	gACTIONS_PER_INPUT_QUEUE_POOL_SZ
 = 60;

51 c⁄° 
	gACTIONS_PER_COMMIT_QUEUE_POOL_SZ
 = 60;

62 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

63 ˛as†
	c∑πôi⁄_t
 : 
public
 
ba£_∑πôi⁄_t


65 
public
:

67 
a˘i⁄_t
<
	tD©aTy≥
> 
	tA˘i⁄
;

68 
d‹a_w‹kî_t
 
	tW‹kî
;

69 
	m§mwqueue
<
	tA˘i⁄
> 
	tQueue
;

70 
	mkey_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

71 
	mlock_m™_t
<
	tD©aTy≥
> 
	tLockM™agî
;

73 
	mKALReq_t
<
	tD©aTy≥
> 
	tKALReq
;

74 
	m°d
::
	tve˘‹
<
	tKALReq
> 
	tKALReqVec
;

77 
	m¥Ÿe˘ed
:

80 
W‹kî
* 
_ow√r
;

83 
	mgu¨d
<
	mLockM™agî
> 
	m_∂m
;

110 
	mgu¨d
<
	mQueue
> 
	m_öput_queue
;

114 
	mgu¨d
<
	mQueue
> 
	m_commôãd_queue
;

117 
	mgu¨d
<
	mPoﬁ
> 
	m_a˘i⁄±r_öput_poﬁ
;

118 
	mgu¨d
<
	mPoﬁ
> 
	m_a˘i⁄±r_commô_poﬁ
;

123 
	mpublic
:

125 
∑πôi⁄_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

126 c⁄° 
uöt
 
≠¨tid
,

127 c⁄° 
¥o˚ss‹id_t
 
≠rsid
,

128 c⁄° 
uöt
 
keyE°im©i⁄
);

130 
	mvútuÆ
 ~
	$∑πôi⁄_t
()

132 
_öput_queue
.
	`d⁄e
();

133 
_a˘i⁄±r_öput_poﬁ
.
	`d⁄e
();

135 
_commôãd_queue
.
	`d⁄e
();

136 
_a˘i⁄±r_commô_poﬁ
.
	`d⁄e
();

140 
ölöe
 
LockM™agî
* 
	$∂m
(Ë{  (
_∂m
); 
	}
}

143 
W‹kî
* 
	$ow√r
(Ë{  (
_ow√r
); 
	}
}

149 
ölöe
 
	$ªÀa£
(
A˘i⁄
* 
a˘i⁄
,

150 
Ba£A˘i⁄PåLi°
& 
ªadyLi°
,

151 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)

153  (
_∂m
->
	`ªÀa£_Æl
(
a˘i⁄
,
ªadyLi°
,
¥omŸedLi°
));

154 
	}
}

156 
ölöe
 
boﬁ
 
	$acquúe
(
KALReqVec
& 
akÆvec
)

158  (
_∂m
->
	`acquúe_Æl
(
akÆvec
));

159 
	}
}

166 
vútuÆ
 
boﬁ
 
	$vîify
(
A˘i⁄
& )

170 
	`w_as£π1
(
Ál£
);

171  (
åue
);

172 
	}
}

176 
íqueue
(
A˘i⁄
* 
pA˘i⁄
, c⁄° 
boﬁ
 
bWake
);

177 
vútuÆ
 
ba£_a˘i⁄_t
* 
dequeue
();

178 
ölöe
 
	$has_öput
() const {

179  (!
_öput_queue
->
	`is_em±y
());

180 
	}
}

181 
boﬁ
 
	$is_öput_ow√r
(
ba£_w‹kî_t
* 
aw‹kî
) {

182  (
_öput_queue
->
	`is_c⁄åﬁ
(
aw‹kî
));

183 
	}
}

186 
íqueue_commô
(
A˘i⁄
* 
≠a
, c⁄° 
boﬁ
 
bWake
=
åue
);

187 
vútuÆ
 
ba£_a˘i⁄_t
* 
dequeue_commô
();

188 
ölöe
 
	$has_commôãd
() const {

189  (!
_commôãd_queue
->
	`is_em±y
());

190 
	}
}

191 
boﬁ
 
	$is_commôãd_ow√r
(
ba£_w‹kî_t
* 
aw‹kî
) {

192  (
_commôãd_queue
->
	`is_c⁄åﬁ
(
aw‹kî
));

193 
	}
}

197 
vútuÆ
 
ª£t
(c⁄° 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
);

200 
vútuÆ
 
ab‹t_Æl_íqueued
();

203 
vútuÆ
 
°›
();

206 
vútuÆ
 
w_rc_t
 
¥ï¨eNewRun
();

209 
vútuÆ
 
°©i°ics
(
w‹kî_°©s_t
& 
g©hî
);

211 
vútuÆ
 
dump
();

213 
°lsize
(
uöt
& 
g©hî
);

215 
	g¥iv©e
:

218 
_°¨t_ow√r
();

219 
_°›_thªads
();

220 
_gíî©e_¥im¨y
();

221 
W‹kî
* 
_gíî©e_w‹kî
(c⁄° 
¥o˚ss‹id_t
 
≠rsid
, 
c_°r
 
w«me
, c⁄° 
u£_¶i
);

223 
	g¥Ÿe˘ed
:

225 
isFªe
(
Key
 
akey
, 
eD‹aLockMode
 
lmode
);

239 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

240 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$∑πôi⁄_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

241 c⁄° 
uöt
 
≠¨tid
,

242 c⁄° 
¥o˚ss‹id_t
 
≠rsid
,

243 c⁄° 
uöt
 
keyE°im©i⁄
)

244 : 
	`ba£_∑πôi⁄_t
(
ív
,
±abÀ
,
≠¨tid
,
≠rsid
),

245 
	$_ow√r
(
NULL
)

247 
_∂m
 = 
√w
 
	`LockM™agî
(
keyE°im©i⁄
);

249 
_a˘i⁄±r_öput_poﬁ
 = 
√w
 
	`Poﬁ
((
A˘i⁄
*),
ACTIONS_PER_INPUT_QUEUE_POOL_SZ
);

250 
_öput_queue
 = 
√w
 
	`Queue
(
_a˘i⁄±r_öput_poﬁ
.
	`gë
());

252 
_a˘i⁄±r_commô_poﬁ
 = 
√w
 
	`Poﬁ
((
A˘i⁄
*),
ACTIONS_PER_COMMIT_QUEUE_POOL_SZ
);

253 
_commôãd_queue
 = 
√w
 
	`Queue
(
_a˘i⁄±r_commô_poﬁ
.
	`gë
());

254 
	}
}

268 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

269 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$íqueue
(
A˘i⁄
* 
pA˘i⁄
, c⁄° 
boﬁ
 
bWake
)

272 i‡(!
	`vîify
(*
pA˘i⁄
))

274 
	`TRACE
–
TRACE_DEBUG
, "TryÅoÉnqueueÅoÅhe wrongÖartition...\n");

275  (
de_WRONG_PARTITION
);

279 #ifde‡
WORKER_VERBOSE_STATS


280 
pA˘i⁄
->
	`m¨k_íqueue
();

283 
pA˘i⁄
->
	`£t_∑πôi⁄
(
this
);

284 
_öput_queue
->
	`push
(
pA˘i⁄
,
bWake
);

286 
	}
}

298 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

299 
ölöe
 
ba£_a˘i⁄_t
* 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$dequeue
()

301  (
_öput_queue
->
	`p›
());

302 
	}
}

315 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

316 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$íqueue_commô
(
A˘i⁄
* 
pA˘i⁄
, c⁄° 
boﬁ
 
bWake
)

318 
	`w_as£π1
(
pA˘i⁄
->
	`gë_∑πôi⁄
()==
this
);

319 
	`TRACE
–
TRACE_TRX_FLOW
, "Enq committed (%d)Åo (%s-%d)\n",

320 
pA˘i⁄
->
	`tid
().
	`gë_lo
(), 
_èbÀ
->
	`«me
(), 
_∑π_id
);

321 
_commôãd_queue
->
	`push
(
pA˘i⁄
,
bWake
);

323 
	}
}

335 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

336 
ölöe
 
ba£_a˘i⁄_t
* 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$dequeue_commô
()

338 
	`w_as£π2
 (
nŸ
 
_commôãd_queue
->
	`is_ªÆly_em±y
());

339  (
_commôãd_queue
->
	`p›
());

340 
	}
}

354 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

355 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$°›
()

358 
	`_°›_thªads
();

361 
_öput_queue
->
	`˛ór
();

362 
_commôãd_queue
->
	`˛ór
();

365 
_∂m
->
	`ª£t
();

366 
	}
}

384 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

385 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$ª£t
(c⁄° 
¥o˚ss‹id_t
 
≠rsid
)

387 
	`TRACE
–
TRACE_DEBUG
, "part (%s-%d) - cpu (%d)\n",

388 
_èbÀ
->
	`«me
(), 
_∑π_id
, 
≠rsid
);

391 
	`_°›_thªads
();

394 
_öput_queue
->
	`˛ór
();

395 
_commôãd_queue
->
	`˛ór
();

398 
_∂m
->
	`ª£t
();

402 
	`CRITICAL_SECTION
(
ow√r_cs
, 
_ow√r_lock
);

404 
_¥s_id
 = 
≠rsid
;

407 i‡(
	`_gíî©e_¥im¨y
())

409 
	`TRACE
 (
TRACE_ALWAYS
,

411 
_èbÀ
->
	`«me
(), 
_∑π_id
);

412 
	`w_as£π0
(
Ál£
);

413  (
de_GEN_PRIMARY_WORKER
);

417 
	`_°¨t_ow√r
();

419 
	}
}

433 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

434 
w_rc_t
 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$¥ï¨eNewRun
()

438 
	`as£π
 (
_ow√r
);

439 !
_ow√r
->
	`is_¶ìpög
()) {

441 
	`TRACE
–
TRACE_ALWAYS
, "Waiting for (%s-%d)Åo sleep\n",

442 
_èbÀ
->
	`«me
(), 
_∑π_id
);

443 
uöt
 
HALF_MILLION
 = 500000;

444 
	`u¶ìp
(
HALF_MILLION
);

453 !
_commôãd_queue
->
	`is_ªÆly_em±y
()) {

454 
	`TRACE
–
TRACE_ALWAYS
, "CommittedQueue of (%s-%d)ÇotÉmpty\n");

455 
_ow√r
->
	`doRecovîy
();

457 
_commôãd_queue
->
	`˛ór
(
Ál£
);

459 !
_öput_queue
->
	`is_ªÆly_em±y
()) {

460 
	`TRACE
–
TRACE_ALWAYS
, "InputQueue of (%s-%d)ÇotÉmpty\n");

461 
_ow√r
->
	`doRecovîy
();

463 
_öput_queue
->
	`˛ór
(
Ál£
);

473 
ve˘‹
<
x˘_t
*> 
tﬂb‹t
;

474 
_∂m
->
	`is_˛ón
(
tﬂb‹t
);

475 i‡(!
tﬂb‹t
.
	`em±y
()) {

477 
ab‹t_smt_t
* 
asmt
 = 
√w
 
	`ab‹t_smt_t
(
	`c_°r
(
_èbÀ
->
	`«me
()),
_ív
,
tﬂb‹t
);

478 
	`as£π
(
asmt
);

479 
asmt
->
	`f‹k
();

480 
asmt
->
	`joö
();

481 
uöt
 
ab‹ãd
 = 
asmt
->
_ab‹ãd
;

482 
	`TRACE
–
TRACE_ALWAYS
, "(%dËx˘†ab‹ãd\n", 
ab‹ãd
);

483 
	`dñëe
(
asmt
);

484 
asmt
 = 
NULL
;

490 i‡(
_∂m
->
	`key°ouched
(Ë> 
D_MIN_KEYS_TOUCHED
) {

491 
	`TRACE
–
TRACE_DEBUG
, "Cleaning LockMap (%s-%d) with (%d) keys\n",

492 
_èbÀ
->
	`«me
(), 
_∑π_id
, 
_∂m
->
	`key°ouched
());

493 
_∂m
->
	`ª£t
();

499  (
RCOK
);

500 
	}
}

513 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

514 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$_°¨t_ow√r
()

516 
	`as£π
 (
_ow√r
);

517 
_ow√r
->
	`°¨t
();

519 
	}
}

530 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

531 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$_°›_thªads
()

533 
i
 = 0;

536 
	`CRITICAL_SECTION
(
ow√r_cs
, 
_ow√r_lock
);

537 i‡(
_ow√r
) {

538 
_ow√r
->
	`°›
();

539 
_ow√r
->
	`joö
();

540 
	`dñëe
 (
_ow√r
);

541 ++
i
;

543 
_ow√r
 = 
NULL
;

546 
_öput_queue
->
	`£tqueue
(
WS_UNDEF
,
NULL
,0,0);

547 
_commôãd_queue
->
	`£tqueue
(
WS_UNDEF
,
NULL
,0,0);

550 
	}
}

567 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

568 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$_gíî©e_¥im¨y
()

570 
	`w_as£π1
(
_ow√r
==
NULL
);

572 
ívV¨
* 
≥
 =ÉnvV¨::
	`ö°™˚
();

574 
u£_¶i
 = 
≥
->
	`gëV¨I¡
("db-worker-sli",0);

576 
W‹kî
* 
pw‹kî
 = 
	`_gíî©e_w‹kî
(
_¥s_id
,

577 
	`c_°r
("%s-P-%d-PRI",
_èbÀ
->
	`«me
(), 
_∑π_id
),

578 
u£_¶i
);

579 i‡(!
pw‹kî
) {

580 
	`TRACE
–
TRACE_ALWAYS
, "Problem generating workerÅhread\n");

581  (
de_GEN_WORKER
);

584 
_ow√r
 = 
pw‹kî
;

585 
_ow√r
->
	`£t_d©a_ow√r_°©e
(
DOS_ALONE
);

587 
lc
 = 
≥
->
	`gëV¨I¡
("db-worker-queueloops",0);

588 
thªs_öp_q
 = 
≥
->
	`gëV¨I¡
("dora-worker-inp-q-sz",0);

589 
thªs_com_q
 = 
≥
->
	`gëV¨I¡
("dora-worker-com-q-sz",0);

592 
b©ch_sz
 = 
≥
->
	`gëV¨I¡
("db-cl-batchsz",0);

593 i‡(
b©ch_sz
 < 
thªs_öp_q
)Åhres_inp_q = batch_sz;

594 i‡(
b©ch_sz
 < 
thªs_com_q
)Åhres_com_q = batch_sz;

597 
_öput_queue
->
	`£tqueue
(
WS_INPUT_Q
,
_ow√r
,
lc
,
thªs_öp_q
);

598 
_commôãd_queue
->
	`£tqueue
(
WS_COMMIT_Q
,
_ow√r
,
lc
,
thªs_com_q
);

600 
_ow√r
->
	`f‹k
();

602 
	}
}

615 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

616 
d‹a_w‹kî_t
* 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$_gíî©e_w‹kî
(c⁄° 
¥o˚ss‹id_t
 
¥sid
,

617 
c_°r
 
°∫ame
,

618 c⁄° 
u£_¶i
)

622 
W‹kî
* 
pw‹kî
 = 
√w
 
	`W‹kî
(
_ív
, 
this
, 
°∫ame
, 
¥sid
, 
u£_¶i
);

623  (
pw‹kî
);

624 
	}
}

635 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

636 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$ab‹t_Æl_íqueued
()

639 
A˘i⁄
* 
∑
;

640 
ªqs_ªad
 = 0;

641 
ªqs_wrôe
 = 0;

642 
ªqs_abt
 = 0;

644 
	`as£π
 (
_ow√r
);

647 
_öput_queue
->
_ªad_pos
 !_öput_queue->
_f‹_ªadîs
->
	`íd
()) {

648 
∑
 = *(
_öput_queue
->
_ªad_pos
++);

649 ++
ªqs_ªad
;

650 i‡(
_ow√r
->
	`ab‹t_⁄e_åx
(
∑
->
	`x˘
()))

651 ++
ªqs_abt
;

656 
	`CRITICAL_SECTION
(
q_cs
, 
_öput_queue
->
_lock
);

657 
_öput_queue
->
_ªad_pos
 = _öput_queue->
_f‹_wrôîs
->
	`begö
();

658 
_öput_queue
->
_ªad_pos
 !_öput_queue->
_f‹_wrôîs
->
	`íd
();

659 
_öput_queue
->
_ªad_pos
++)

661 
∑
 = *(
_öput_queue
->
_ªad_pos
);

662 ++
ªqs_wrôe
;

663 i‡(
_ow√r
->
	`ab‹t_⁄e_åx
(
∑
->
	`x˘
()))

664 ++
ªqs_abt
;

668 i‡((
ªqs_ªad
 + 
ªqs_wrôe
) > 0) {

669 
	`TRACE
–
TRACE_ALWAYS
, "(%d)áborted before stopping. (%d) (%d)\n",

670 
ªqs_abt
, 
ªqs_ªad
, 
ªqs_wrôe
);

672  (
ªqs_abt
);

673 
	}
}

683 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

684 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$°©i°ics
(
w‹kî_°©s_t
& 
g©hî
)

686 i‡(
_ow√r
) {

687 
g©hî
 +
_ow√r
->
	`gë_°©s
();

688 
_ow√r
->
	`ª£t_°©s
();

690 
	}
}

701 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

702 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$°lsize
(
uöt
& 
g©hî
)

704 
	`as£π
 (
_∂m
);

705 
g©hî
 +
_∂m
->
	`key°ouched
();

706 
	}
}

716 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

717 
	g∑πôi⁄_t
<
	gD©aTy≥
>::
	$dump
()

719 
ba£_∑πôi⁄_t
::
	`dump
();

720 
_∂m
->
	`dump
();

721 
	}
}

724 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/range_action.h

32 #i‚de‡
__DORA_RANGE_ACTION_H


33 
	#__DORA_RANGE_ACTION_H


	)

36 
	~"d‹a/a˘i⁄.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
d‹a
);

55 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

56 
˛ass
 
	gønge_a˘i⁄_im∂
 : 
public
 
a˘i⁄_t
<
D©aTy≥
>

58 
public
:

59 
key_wøµî_t
<
	tD©aTy≥
> 
	tKey
;

60 
	ga˘i⁄_t
<
	tD©aTy≥
> 
	tA˘i⁄
;

61 
	gKALReq_t
<
	tD©aTy≥
> 
	tKALReq
;

63 
	g¥Ÿe˘ed
:

66 
boﬁ
 
_isR™ge
;

67 
£t_is_ønge
(Ë{ 
	g_isR™ge
 = 
åue
; }

69 
Key
 
	g_down
;

70 
	gve˘‹
<
	gKey
> 
	g_key_li°
;

72 
ölöe
 
_ønge_a˘_£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
,

73 c⁄° 
keyÀn
)

77 
	gA˘i⁄
::
_a˘_£t
(
ax˘
,
©id
,
¥vp
,2);

78 
as£π
 (
keyÀn
);

79 
	g_down
.
ª£rve
(
keyÀn
);

82 
	gpublic
:

86 
ønge_a˘i⁄_im∂
()

87 : 
A˘i⁄
(), 
_isR™ge
(
Ál£
)

90 
ønge_a˘i⁄_im∂
(c⁄°Ñ™ge_a˘i⁄_im∂& 
rhs
)

91 : 
A˘i⁄
(
rhs
), 
_isR™ge
(rhs._isRange),

92 
_down
(
rhs
._down), 
_key_li°
(rhs._key_list)

93 { 
as£π
 (0); }

95 
	gønge_a˘i⁄_im∂
 &
	g›î©‹
=(c⁄° 
ønge_a˘i⁄_im∂
& 
rhs
)

97 i‡(
this
 !&
rhs
) {

98 
as£π
 (0);

99 
	gA˘i⁄
::
›î©‹
=(
rhs
);

100 
	g_isR™ge
 = 
rhs
.
_isR™ge
;

101 
	g_down
 = 
rhs
.
_down
;

102 
	g_key_li°
 = 
rhs
.
_key_li°
;

104  (*
	gthis
);

107 
	gvútuÆ
 ~
ønge_a˘i⁄_im∂
() { }

111 
vútuÆ
 
ˇlc_keys
()=0;

113 
vútuÆ
 
w_rc_t
 
åx_exec
()=0;

123 
vútuÆ
 
åx_upd_keys
()

125 i‡(
	gba£_a˘i⁄_t
::
¨e_keys_£t
())  (1);

128 
ˇlc_keys
();

130 
eD‹aLockMode
 
	gªq_lm
 = 
DL_CC_EXCL
;

131 i‡(
	gba£_a˘i⁄_t
::
is_ªad_⁄ly
()Ë
ªq_lm
 = 
DL_CC_SHARED
;

133 i‡(
	g_isR™ge
) {

145 
uöt
 
	gønge
 = 
_key_li°
.
size
();

146 
	gba£_a˘i⁄_t
::
£tkeys
(
ønge
);

147 
uöt
 
	gi
=0; i<
	gønge
; i++) {

148 
KALReq
 
akr
(
this
,
ªq_lm
,&
_key_li°
[
i
]);

149 
	gA˘i⁄
::
_ªque°s
.
push_back
(
akr
);

151 
	gba£_a˘i⁄_t
::
keys_£t
(
ønge
);

155 
	gA˘i⁄
::
_keys
.
push_back
(&
_down
);

156 
	gba£_a˘i⁄_t
::
£tkeys
(1);

157 
KALReq
 
akr
(
this
,
ªq_lm
,&
_down
);

158 
	gA˘i⁄
::
_ªque°s
.
push_back
(
akr
);

159 
	gba£_a˘i⁄_t
::
keys_£t
(
åue
);

164 
vútuÆ
 
giveback
()=0;

166 
vútuÆ
 
öô
() { }

168 
vútuÆ
 
ª£t
()

170 
	gA˘i⁄
::
ª£t
();

173 
	g_down
.
ª£t
();

174 
	g_key_li°
.
˛ór
();

181 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/range_part_table.h

34 #i‚de‡
__DORA_RANGE_PART_TABLE_H


35 
	#__DORA_RANGE_PART_TABLE_H


	)

37 
	~"d‹a/dkey_ønges_m≠.h
"

39 
	~"d‹a/∑π_èbÀ.h
"

40 
	~"d‹a/ba£_∑πôi⁄.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

45 
ENTER_NAMESPACE
(
d‹a
);

56 ˛as†
	cønge_èbÀ_t
 : 
public
 
∑π_èbÀ_t


58 
public
:

60 
∑π_èbÀ_t
 
	tP¨tTabÀ
;

62 
	m¥Ÿe˘ed
:

65 
uöt
 
_dty≥
;

68 
	mgu¨d
<
	mdkey_ønges_m≠
> 
	m_¥M≠
;

70 
	mpublic
:

72 
ønge_èbÀ_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
, c⁄° 
uöt
 
dty≥
,

73 c⁄° 
¥o˚ss‹id_t
 
≠rs
,

74 c⁄° 
uöt
 
a˝uønge
,

75 c⁄° 
uöt
 
keyE°im©i⁄
);

77 ~
ønge_èbÀ_t
();

79 
vútuÆ
 
w_rc_t
 
¸óã_⁄e_∑π
(c⁄° 
shpid_t
& 
pid
, 
ba£_∑πôi⁄_t
*& 
abp
);

85 
ölöe
 
w_rc_t
 
	$gëP¨tIdxByKey
(c⁄° 
cvec_t
& 
cvkey
, 
Õid_t
& 
pid
) {

86  (
_¥M≠
->
	`gë_∑πôi⁄
(
cvkey
,
pid
));

92 
w_rc_t
 
	`ª∑πôi⁄
();

94 
¥iv©e
:

96 
w_rc_t
 
	`_gë_upd©ed_m≠
(
dkey_ønges_m≠
*& 
drm
);

98 
¥Ÿe˘ed
:

100 
vútuÆ
 
w_rc_t
 
	`_¸óã_⁄e_∑π
(c⁄° 
shpid_t
& 
pid
, 
ba£_∑πôi⁄_t
*& 
abp
)=0;

102 
	}
};

105 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/range_table_i.h

34 #i‚de‡
__DORA_RANGE_TABLE_I_H


35 
	#__DORA_RANGE_TABLE_I_H


	)

37 
	~"d‹a/key.h
"

38 
	~"d‹a/∑πôi⁄.h
"

39 
	~"d‹a/a˘i⁄.h
"

40 
	~"d‹a/ønge_∑π_èbÀ.h
"

42 
usög
 
«me•a˚
 
	gsh‹e
;

45 
ENTER_NAMESPACE
(
d‹a
);

56 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

57 ˛as†
	cønge_èbÀ_i
 : 
public
 
ønge_èbÀ_t


59 
public
:

61 
key_wøµî_t
<
	tD©aTy≥
> 
	tDKey
;

62 
	ma˘i⁄_t
<
	tD©aTy≥
> 
	tA˘i⁄
;

63 
	m∑πôi⁄_t
<
	tD©aTy≥
> 
	tΩIm∂
;

65 
	mm≠
< 
	tshpid_t
, 
	t∑πôi⁄_t
<
	tD©aTy≥
>* > 
	tΩIm∂PåM≠
;

67 
	m¥Ÿe˘ed
:

70 
ΩIm∂PåM≠
 
_pm≠
;

72 
	mpublic
:

74 
	$ønge_èbÀ_i
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
, c⁄° 
uöt
 
dty≥
,

75 c⁄° 
¥o˚ss‹id_t
 
≠rs
,

76 c⁄° 
uöt
 
a˝uønge
,

77 c⁄° 
uöt
 
keyE°im©i⁄
)

78 : 
	$ønge_èbÀ_t
(
ív
,
±abÀ
,
dty≥
,
≠rs
,
a˝uønge
,
keyE°im©i⁄
)

82 ~
	$ønge_èbÀ_i
(Ë{ 
	}
}

84 
ΩIm∂
* 
	$gë
(c⁄° 
shpid_t
& 
pid
Ë{  (
_pm≠
[pid]); 
	}
}

86 
	g¥Ÿe˘ed
:

88 
w_rc_t
 
_¸óã_⁄e_∑π
(c⁄° 
shpid_t
& 
pid
, 
ba£_∑πôi⁄_t
*& 
abp
);

104 
	gãm∂©e
 <
˛ass
 
	gD©aTy≥
>

105 
w_rc_t
 
	gønge_èbÀ_i
<
	gD©aTy≥
>::
	$_¸óã_⁄e_∑π
(c⁄° 
shpid_t
& 
pid
,

106 
ba£_∑πôi⁄_t
*& 
abp
)

109 
ΩIm∂
* 
¥p
 = 
√w
 
	`ΩIm∂
(
P¨tTabÀ
::
_ív
, P¨tTabÀ::
_èbÀ
, 
pid
,

110 
P¨tTabÀ
::
_√xt_¥s_id
,

111 
P¨tTabÀ
::
_key_e°im©i⁄
);

112 i‡(!
¥p
) {

113 
	`TRACE
–
TRACE_ALWAYS
, "ProbÀm i¿¸ótögÖ¨tôi⁄ (%d)\n", 
pid
);

114  (
	`RC
(
de_GEN_PARTITION
));

118 
abp
 = 
¥p
;

121 
_pm≠
[
pid
] = 
¥p
;

124 
¥p
->
	`ª£t
();

125  (
RCOK
);

126 
	}
}

128 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/rvp.h

32 #i‚de‡
__DORA_RVP_H


33 
	#__DORA_RVP_H


	)

36 
	~"sm/sh‹e/sh‹e_ªqs.h
"

37 
	~"sm/sh‹e/sh‹e_ív.h
"

38 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

40 
	~"utû/cou¡down.h
"

42 
	~"d‹a/comm⁄.h
"

43 
	~"d‹a/ba£_a˘i⁄.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

47 
ENTER_NAMESPACE
(
d‹a
);

49 
˛ass
 
	gD‹aEnv
;

63 
	grvp_t
 : 
public
 
ba£_ªque°_t


65 
public
:

68 
°d
::
	tve˘‹
<
	td‹a
::
	tba£_a˘i⁄_t
*> 
	tba£A˘i⁄sLi°
;

69 
	gba£A˘i⁄sLi°
::
	tôî©‹
 
	tba£A˘i⁄sIt
;

71 
	g¥Ÿe˘ed
:

74 
cou¡down_t
 
_cou¡down
;

75 
ush‹t_t
 vﬁ©ûê
	g_decisi⁄
;

78 
ba£A˘i⁄sLi°
 
	g_a˘i⁄s
;

79 
èès_lock
 
	g_a˘i⁄s_lock
;

81 
_£t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

82 c⁄° 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

83 c⁄° 
uöt
 
öåa_åx_˙t
, c⁄° uöà
tŸÆ_a˘i⁄s
)

85 
	gba£_ªque°_t
::
£t
(
px˘
,
©id
,
ax˘id
,
¥esu…
);

87 
as£π
 (
px˘
);

88 
as£π
 (
tŸÆ_a˘i⁄s
>=
öåa_åx_˙t
);

89 
	g_cou¡down
.
ª£t
(
öåa_åx_˙t
);

90 
	g_decisi⁄
 = 
AD_UNDECIDED
;

91 
	g_a˘i⁄s
.
ª£rve
(
tŸÆ_a˘i⁄s
);

94 
	gpublic
:

96 
rvp_t
();

98 
rvp_t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

99 c⁄° 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

100 c⁄° 
uöt
 
öåa_åx_˙t
, c⁄° uöà
tŸÆ_a˘i⁄s
);

102 
	gvútuÆ
 ~
rvp_t
() { }

105 
rvp_t
(c⁄°Ñvp_t& 
rhs
);

106 
	grvp_t
& 
	g›î©‹
=(c⁄° 
rvp_t
& 
rhs
);

108 
åx_ªsu…_tu∂e_t
 
ªsu…
(Ë{  (
	g_ªsu…
); }

111 
c›y_a˘i⁄s
(c⁄° 
ba£A˘i⁄sLi°
& 
a˘i⁄Li°
);

112 
≠≥nd_a˘i⁄s
(c⁄° 
ba£A˘i⁄sLi°
& 
a˘i⁄Li°
);

113 
add_a˘i⁄
(
d‹a
::
ba£_a˘i⁄_t
* 
∑˘i⁄
);

115 
ölöe
 
boﬁ
 
po°
(boﬁ 
is_îr‹
=
Ál£
) {

116 i‡(
is_îr‹
Ë
ab‹t
();

117  (
	g_cou¡down
.
po°
(
Ál£
));

121 
ölöe
 
ush‹t_t
 
ab‹t
() {

122 
	g_decisi⁄
 = 
AD_ABORT
;

123  (*&
	g_decisi⁄
);

126 
ölöe
 
boﬁ
 
isAb‹ãd
() {

127  (*&
	g_decisi⁄
 =
AD_ABORT
);

131 
ölöe
 
ªsize
(c⁄° 
uöt
 
öåa_åx_˙t
, c⁄° uöà
tŸÆ_a˘i⁄s
) {

133 
	g_cou¡down
.
ª£t
(
öåa_åx_˙t
);

134 
	g_a˘i⁄s
.
ª£rve
(
tŸÆ_a˘i⁄s
);

140 
vútuÆ
 
w_rc_t
 
run
();

143 
vútuÆ
 
giveback
()=0;

148 
öô
()

152 
ª£t
()

155 
	g_a˘i⁄s
.
îa£
(
_a˘i⁄s
.
begö
(),_a˘i⁄s.
íd
());

156 
	g_x˘
 = 
NULL
;

159 
	g¥Ÿe˘ed
:

161 
vútuÆ
 
w_rc_t
 
_run
()=0;

177 ˛as†
	cãrmöÆ_rvp_t
 : 
public
 
rvp_t


179 
¥Ÿe˘ed
:

181 
ss_m
* 
_db
;

182 
D‹aEnv
* 
	m_dív
;

184 
	mpublic
:

186 
ãrmöÆ_rvp_t
();

188 
ãrmöÆ_rvp_t
(c⁄°ÅîmöÆ_rvp_t& 
rhs
);

189 
	mãrmöÆ_rvp_t
& 
	m›î©‹
=(c⁄° 
ãrmöÆ_rvp_t
& 
rhs
);

191 
	mvútuÆ
 ~
ãrmöÆ_rvp_t
();

194 
	$_£t
(
ss_m
* 
db
, 
D‹aEnv
* 
dív
,

195 
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

196 c⁄° 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

197 c⁄° 
uöt
 
öåa_åx_˙t
, c⁄° uöà
tŸÆ_a˘i⁄s
)

199 
rvp_t
::
	`_£t
(
px˘
,
©id
,
ax˘id
,
¥esu…
,
öåa_åx_˙t
,
tŸÆ_a˘i⁄s
);

200 
_db
 = 
db
;

201 
_dív
 = 
dív
;

204 
w_rc_t
 
	`run
();

206 
	`nŸify_⁄_ab‹t
();

208 
	`nŸify_∑πôi⁄s
();

210 
vútuÆ
 
	`upd_commôãd_°©s
()=0;

211 
vútuÆ
 
	`upd_ab‹ãd_°©s
()=0;

213 
¥Ÿe˘ed
:

215 
w_rc_t
 
	`_run
();

217 
	}
};

221 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tm1/dora_tm1.h

32 #i‚de‡
__DORA_TM1_H


33 
	#__DORA_TM1_H


	)

36 
	~<c°dio
>

38 
	~"és.h
"

40 
	~"utû.h
"

41 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

42 
	~"d‹a/d‹a_ív.h
"

43 
	~"d‹a.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gtm1
;

49 
ENTER_NAMESPACE
(
d‹a
);

56 
˛ass
 
	gföÆ_gsd_rvp
;

57 
˛ass
 
	gr_sub_gsd_a˘i⁄
;

61 
	#TM1GND2


	)

62 #ifde‡
TM1GND2


63 
˛ass
 
	gföÆ_gnd_rvp
;

64 
˛ass
 
	gmid_gnd_rvp
;

65 
˛ass
 
	gr_sf_gnd_a˘i⁄
;

66 
˛ass
 
	gr_cf_gnd_a˘i⁄
;

68 
˛ass
 
	gföÆ_gnd_rvp
;

69 
˛ass
 
	gr_sf_gnd_a˘i⁄
;

70 
˛ass
 
	gr_cf_gnd_a˘i⁄
;

74 
˛ass
 
	gföÆ_gad_rvp
;

75 
˛ass
 
	gr_ai_gad_a˘i⁄
;

79 
	#TM1USD2


	)

80 #ifde‡
TM1USD2


81 
˛ass
 
	gföÆ_usd_rvp
;

82 
˛ass
 
	gmid_usd_rvp
;

83 
˛ass
 
	gupd_sub_usd_a˘i⁄
;

84 
˛ass
 
	gupd_sf_usd_a˘i⁄
;

86 
˛ass
 
	gföÆ_usd_rvp
;

87 
˛ass
 
	gupd_sub_usd_a˘i⁄
;

88 
˛ass
 
	gupd_sf_usd_a˘i⁄
;

92 
˛ass
 
	gföÆ_usdmix_rvp
;

93 
˛ass
 
	gmid_usdmix_rvp
;

94 
˛ass
 
	gupd_sub_usdmix_a˘i⁄
;

95 
˛ass
 
	gupd_sf_usdmix_a˘i⁄
;

98 
˛ass
 
	gföÆ_ul_rvp
;

99 
˛ass
 
	gupd_sub_ul_a˘i⁄
;

103 
	#TM1ICF2


	)

104 #ifde‡
TM1ICF2


105 
˛ass
 
	gföÆ_icf_rvp
;

106 
˛ass
 
	gmid1_icf_rvp
;

107 
˛ass
 
	gmid2_icf_rvp
;

108 
˛ass
 
	gr_sub_icf_a˘i⁄
;

109 
˛ass
 
	gr_sf_icf_a˘i⁄
;

110 
˛ass
 
	gös_cf_icf_a˘i⁄
;

112 
˛ass
 
	gföÆ_icf_rvp
;

113 
˛ass
 
	gmid_icf_rvp
;

114 
˛ass
 
	gr_sub_icf_a˘i⁄
;

115 
˛ass
 
	gr_sf_icf_a˘i⁄
;

116 
˛ass
 
	gös_cf_icf_a˘i⁄
;

120 
˛ass
 
	gföÆ_icfb_rvp
;

121 
˛ass
 
	gr_sub_icfb_a˘i⁄
;

122 
˛ass
 
	gi_cf_icfb_a˘i⁄
;

127 
˛ass
 
	gföÆ_dcf_rvp
;

128 
˛ass
 
	gmid_dcf_rvp
;

129 
˛ass
 
	gr_sub_dcf_a˘i⁄
;

130 
˛ass
 
	gdñ_cf_dcf_a˘i⁄
;

133 
˛ass
 
	gföÆ_g¢_rvp
;

134 #i‚de‡
USE_DORA_EXT_IDX


135 
˛ass
 
	gr_sub_g¢_a˘i⁄
;

137 
˛ass
 
	gr_sub_g¢_acc_a˘i⁄
;

149 
˛ass
 
	gD‹aTM1Env
 : 
public
 
Sh‹eTM1Env
,Öubli¯
	gD‹aEnv


151 
	gpublic
:

153 
D‹aTM1Env
();

154 
	gvútuÆ
 ~
D‹aTM1Env
();

160 
°¨t
();

161 
°›
();

162 
ªsume
();

163 
∑u£
();

164 
w_rc_t
 
√wrun
();

165 
£t
(
ívV¨M≠
* ) { (0); };

166 
dump
();

167 
öfo
() const;

168 
°©i°ics
();

169 
c⁄f
();

173 
w_rc_t
 
upd©e_∑πôi⁄ög
();

178 
DECLARE_DORA_PARTS
(
sub
);

179 
DECLARE_DORA_PARTS
(
ai
);

180 
DECLARE_DORA_PARTS
(
sf
);

181 
DECLARE_DORA_PARTS
(
cf
);

192 
DECLARE_DORA_TRX
(
gë_sub_d©a
);

194 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gsd_rvp
);

196 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_gsd_a˘i⁄
,
rvp_t
,
gë_sub_d©a_öput_t
);

204 
DECLARE_DORA_TRX
(
gë_√w_de°
);

206 #ifde‡
TM1GND2


207 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_gnd_rvp
,
gë_√w_de°_öput_t
);

208 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_gnd_rvp
);

210 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sf_gnd_a˘i⁄
,
mid_gnd_rvp
,
gë_√w_de°_öput_t
);

211 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_cf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
);

213 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gnd_rvp
);

215 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
);

216 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_cf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
);

224 
DECLARE_DORA_TRX
(
gë_acc_d©a
);

226 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gad_rvp
);

228 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_ai_gad_a˘i⁄
,
rvp_t
,
gë_acc_d©a_öput_t
);

236 
DECLARE_DORA_TRX
(
upd_sub_d©a
);

238 #ifde‡
TM1USD2


239 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_usd_rvp
,
upd_sub_d©a_öput_t
);

240 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_usd_rvp
);

242 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sf_usd_a˘i⁄
,
mid_usd_rvp
,
upd_sub_d©a_öput_t
);

243 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sub_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
);

245 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_usd_rvp
);

247 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sub_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
);

248 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sf_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
);

259 
DECLARE_ALTER_DORA_TRX
(
upd_sub_d©a
,
upd_sub_d©a_mix
);

261 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_usdmix_rvp
,
upd_sub_d©a_öput_t
);

262 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_usdmix_rvp
);

264 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sub_usdmix_a˘i⁄
,
mid_usdmix_rvp
,
upd_sub_d©a_öput_t
);

265 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sf_usdmix_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
);

272 
DECLARE_DORA_TRX
(
upd_loc
);

274 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_ul_rvp
);

276 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_sub_ul_a˘i⁄
,
rvp_t
,
upd_loc_öput_t
);

284 
DECLARE_DORA_TRX
(
ös_ˇŒ_fwd
);

286 #ifde‡
TM1ICF2


287 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

288 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

289 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_icf_rvp
);

291 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_icf_a˘i⁄
,
mid1_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

292 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sf_icf_a˘i⁄
,
mid2_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

293 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_cf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
);

295 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

296 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_icf_rvp
);

298 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_icf_a˘i⁄
,
mid_icf_rvp
,
ös_ˇŒ_fwd_öput_t
);

299 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
);

300 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_cf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
);

309 
DECLARE_DORA_TRX
(
ös_ˇŒ_fwd_bích
);

311 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_icfb_rvp
);

313 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_icfb_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_bích_öput_t
);

314 
DECLARE_DORA_ACTION_GEN_FUNC
(
i_cf_icfb_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_bích_öput_t
);

323 
DECLARE_DORA_TRX
(
dñ_ˇŒ_fwd
);

325 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_dcf_rvp
,
dñ_ˇŒ_fwd_öput_t
);

326 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_dcf_rvp
);

328 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_dcf_a˘i⁄
,
mid_dcf_rvp
,
dñ_ˇŒ_fwd_öput_t
);

329 
DECLARE_DORA_ACTION_GEN_FUNC
(
dñ_cf_dcf_a˘i⁄
,
rvp_t
,
dñ_ˇŒ_fwd_öput_t
);

337 
DECLARE_DORA_TRX
(
gë_sub_nbr
);

339 
DECLARE_DORA_FINAL_DYNAMIC_RVP_GEN_FUNC
(
föÆ_g¢_rvp
);

340 #i‚de‡
USE_DORA_EXT_IDX


341 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_g¢_a˘i⁄
,
rvp_t
,
gë_sub_nbr_öput_t
);

343 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_sub_g¢_acc_a˘i⁄
,
rvp_t
,
gë_sub_nbr_öput_t
);

350 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tm1/dora_tm1_client.h

31 #i‚de‡
__DORA_TM1_CLIENT_H


32 
	#__DORA_TM1_CLIENT_H


	)

35 
	~"w‹klﬂd/tm1/tm1_c⁄°.h
"

36 
	~"d‹a/tm1/d‹a_tm1.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
d‹a
);

53 ˛as†
	cd‹a_tm1_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


55 
¥iv©e
:

57 
D‹aTM1Env
* 
_tm1db
;

58 
	m_£lid
;

59 
	m_qf
;

61 
	mpublic
:

63 
	$d‹a_tm1_˛õ¡_t
() { }

65 
	$d‹a_tm1_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
D‹aTM1Env
* 
ív
,

66 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

67 c⁄° 
numOfTrxs
,

68 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
)

69 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

70 
	`_tm1db
(
ív
), 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

72 
	`as£π
 (
ív
);

73 
	`as£π
 (
_id
>=0 && 
_qf
>0);

74 
	}
}

76 ~
	$d‹a_tm1_˛õ¡_t
(Ë{ 
	}
}

79 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

83 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

88 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tm1/dora_tm1_impl.h

35 #i‚de‡
__DORA_TM1_IMPL_H


36 
	#__DORA_TM1_IMPL_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

41 
	~"d‹a/tm1/d‹a_tm1.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gtm1
;

47 
ENTER_NAMESPACE
(
d‹a
);

57 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_gsd_rvp
,
D‹aTM1Env
,1,1);

59 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sub_gsd_a˘i⁄
,,
D‹aTM1Env
,
gë_sub_d©a_öput_t
,1);

68 #ifde‡
TM1GND2


69 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid_gnd_rvp
,
D‹aTM1Env
,
gë_√w_de°_öput_t
,1,1);

70 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_gnd_rvp
,
D‹aTM1Env
,1,2);

72 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_sf_gnd_a˘i⁄
,,
D‹aTM1Env
,
mid_gnd_rvp
,
gë_√w_de°_öput_t
,2);

74 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_cf_gnd_a˘i⁄
,,
D‹aTM1Env
,
gë_√w_de°_öput_t
,3);

76 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_gnd_rvp
,
D‹aTM1Env
,2,2);

78 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sf_gnd_a˘i⁄
,,
D‹aTM1Env
,
gë_√w_de°_öput_t
,2);

79 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_cf_gnd_a˘i⁄
,,
D‹aTM1Env
,
gë_√w_de°_öput_t
,3);

89 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_gad_rvp
,
D‹aTM1Env
,1,1);

91 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_ai_gad_a˘i⁄
,,
D‹aTM1Env
,
gë_acc_d©a_öput_t
,2);

100 #ifde‡
TM1USD2


101 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid_usd_rvp
,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,1,1);

102 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_usd_rvp
,
D‹aTM1Env
,1,2);

104 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
upd_sf_usd_a˘i⁄
,,
D‹aTM1Env
,
mid_usd_rvp
,
upd_sub_d©a_öput_t
,2);

106 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_sub_usd_a˘i⁄
,,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,1);

108 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_usd_rvp
,
D‹aTM1Env
,2,2);

110 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_sub_usd_a˘i⁄
,,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,1);

111 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_sf_usd_a˘i⁄
,,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,2);

120 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid_usdmix_rvp
,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,1,1);

121 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_usdmix_rvp
,
D‹aTM1Env
,1,2);

123 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
upd_sub_usdmix_a˘i⁄
,,
D‹aTM1Env
,
mid_usdmix_rvp
,
upd_sub_d©a_öput_t
,1);

125 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_sf_usdmix_a˘i⁄
,,
D‹aTM1Env
,
upd_sub_d©a_öput_t
,2);

134 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_ul_rvp
,
D‹aTM1Env
,1,1);

136 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_sub_ul_a˘i⁄
,,
D‹aTM1Env
,
upd_loc_öput_t
,1);

145 #ifde‡
TM1ICF2


146 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid1_icf_rvp
,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,1,1);

147 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid2_icf_rvp
,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,1,2);

148 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_icf_rvp
,
D‹aTM1Env
,1,3);

150 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_sub_icf_a˘i⁄
,,
D‹aTM1Env
,
mid1_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,1);

151 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_sf_icf_a˘i⁄
,,
D‹aTM1Env
,
mid2_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,2);

152 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
ös_cf_icf_a˘i⁄
,,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,3);

154 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid_icf_rvp
,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,1,1);

155 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_icf_rvp
,
D‹aTM1Env
,2,3);

157 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_sub_icf_a˘i⁄
,,
D‹aTM1Env
,
mid_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,1);

158 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sf_icf_a˘i⁄
,,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,2);

159 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
ös_cf_icf_a˘i⁄
,,
D‹aTM1Env
,
ös_ˇŒ_fwd_öput_t
,3);

170 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_icfb_rvp
,
D‹aTM1Env
,2,2);

172 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sub_icfb_a˘i⁄
,,
D‹aTM1Env
,
ös_ˇŒ_fwd_bích_öput_t
,1);

173 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
i_cf_icfb_a˘i⁄
,,
D‹aTM1Env
,
ös_ˇŒ_fwd_bích_öput_t
,3);

182 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid_dcf_rvp
,
D‹aTM1Env
,
dñ_ˇŒ_fwd_öput_t
,1,1);

183 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_dcf_rvp
,
D‹aTM1Env
,1,2);

185 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_sub_dcf_a˘i⁄
,,
D‹aTM1Env
,
mid_dcf_rvp
,
dñ_ˇŒ_fwd_öput_t
,1);

186 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
dñ_cf_dcf_a˘i⁄
,,
D‹aTM1Env
,
dñ_ˇŒ_fwd_öput_t
,3);

196 
DECLARE_DORA_FINAL_DYNAMIC_RVP_CLASS
(
föÆ_g¢_rvp
,
D‹aTM1Env
);

197 #i‚de‡
USE_DORA_EXT_IDX


198 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sub_g¢_a˘i⁄
,,
D‹aTM1Env
,
gë_sub_nbr_öput_t
,1);

200 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_sub_g¢_acc_a˘i⁄
,,
D‹aTM1Env
,
gë_sub_nbr_öput_t
,1);

204 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcb/dora_tpcb.h

32 #i‚de‡
__DORA_TPCB_H


33 
	#__DORA_TPCB_H


	)

36 
	~<c°dio
>

38 
	~"és.h
"

40 
	~"utû.h
"

41 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

42 
	~"d‹a/d‹a_ív.h
"

43 
	~"d‹a.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gçcb
;

49 
ENTER_NAMESPACE
(
d‹a
);

56 
˛ass
 
	gföÆ_au_rvp
;

57 
˛ass
 
	gupd_br_a˘i⁄
;

58 
˛ass
 
	gupd_ac_a˘i⁄
;

59 
˛ass
 
	gupd_ã_a˘i⁄
;

60 
˛ass
 
	gös_hi_a˘i⁄
;

71 
˛ass
 
	gD‹aTPCBEnv
 : 
public
 
Sh‹eTPCBEnv
,Öubli¯
	gD‹aEnv


73 
	gpublic
:

75 
D‹aTPCBEnv
();

76 
	gvútuÆ
 ~
D‹aTPCBEnv
();

81 
°¨t
();

82 
°›
();

83 
ªsume
();

84 
∑u£
();

85 
w_rc_t
 
√wrun
();

86 
£t
(
ívV¨M≠
* ) { (0); };

87 
dump
();

88 
öfo
() const;

89 
°©i°ics
();

90 
c⁄f
();

94 
w_rc_t
 
upd©e_∑πôi⁄ög
();

99 
DECLARE_DORA_PARTS
(
br
);

100 
DECLARE_DORA_PARTS
(
ã
);

101 
DECLARE_DORA_PARTS
(
ac
);

102 
DECLARE_DORA_PARTS
(
hi
);

112 
DECLARE_DORA_TRX
(
ac˘_upd©e
);

114 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_au_rvp
);

116 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_br_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
);

117 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_ã_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
);

118 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_ac_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
);

119 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_hi_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
);

124 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcb/dora_tpcb_client.h

31 #i‚de‡
__DORA_TPCB_CLIENT_H


32 
	#__DORA_TPCB_CLIENT_H


	)

35 
	~"d‹a/çcb/d‹a_çcb.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
d‹a
);

52 ˛as†
	cd‹a_çcb_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


54 
¥iv©e
:

56 
D‹aTPCBEnv
* 
_çcbdb
;

57 
	m_£lid
;

58 
	m_qf
;

60 
	mpublic
:

62 
	$d‹a_çcb_˛õ¡_t
() { }

64 
	$d‹a_çcb_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
D‹aTPCBEnv
* 
ív
,

65 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

66 c⁄° 
numOfTrxs
,

67 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
)

68 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

69 
	`_çcbdb
(
ív
), 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

71 
	`as£π
 (
ív
);

72 
	`as£π
 (
_id
>=0 && 
_qf
>0);

73 
	}
}

75 ~
	$d‹a_çcb_˛õ¡_t
(Ë{ 
	}
}

78 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

82 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

87 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcb/dora_tpcb_impl.h

36 #i‚de‡
__DORA_TPCB_IMPL_H


37 
	#__DORA_TPCB_IMPL_H


	)

40 
	~"d‹a.h
"

41 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

42 
	~"d‹a/çcb/d‹a_çcb.h
"

44 
usög
 
«me•a˚
 
	gsh‹e
;

45 
usög
 
«me•a˚
 
	gçcb
;

48 
ENTER_NAMESPACE
(
d‹a
);

58 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_au_rvp
,
D‹aTPCBEnv
,4,4);

60 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_br_a˘i⁄
,,
D‹aTPCBEnv
,
ac˘_upd©e_öput_t
,1);

61 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_ã_a˘i⁄
,,
D‹aTPCBEnv
,
ac˘_upd©e_öput_t
,1);

62 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_ac_a˘i⁄
,,
D‹aTPCBEnv
,
ac˘_upd©e_öput_t
,1);

63 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
ös_hi_a˘i⁄
,,
D‹aTPCBEnv
,
ac˘_upd©e_öput_t
,1);

65 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_delivery.h

35 #i‚de‡
__DORA_TPCC_DELIVERY_H


36 
	#__DORA_TPCC_DELIVERY_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

41 
	~"d‹a/çcc/d‹a_çcc.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gçcc
;

47 
ENTER_NAMESPACE
(
d‹a
);

69 ˛as†
	cföÆ_dñ_rvp
 : 
public
 
ãrmöÆ_rvp_t


71 
¥iv©e
:

72 
obje˘_ˇche_t
<
	tföÆ_dñ_rvp
> 
	trvp_ˇche
;

73 
D‹aTPCCEnv
* 
	m_±pc˚nv
;

74 
rvp_ˇche
* 
	m_ˇche
;

75 
	mpublic
:

76 
	$föÆ_dñ_rvp
(Ë: 
	`ãrmöÆ_rvp_t
(), 
	`_±pc˚nv
(
NULL
), 
	$_ˇche
(
NULL
) { }

77 ~
	$föÆ_dñ_rvp
(Ë{ 
_ˇche
=
NULL
; 
_±pc˚nv
=NULL; 
	}
}

80 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

81 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

82 
D‹aTPCCEnv
* 
≥nv
, 
rvp_ˇche
* 
pc
)

84 
	`as£π
 (
≥nv
);

85 
_±pc˚nv
 = 
≥nv
;

86 
	`as£π
 (
pc
);

87 
_ˇche
 = 
pc
;

88 
	`_£t
(
≥nv
->
	`db
(),≥nv,
ax˘
,
©id
,
ax˘id
,
¥esu…
,

89 
DISTRICTS_PER_WAREHOUSE
,4*DISTRICTS_PER_WAREHOUSE);

90 
	}
}

91 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

94 
w_rc_t
 
run
();

95 
upd_commôãd_°©s
();

96 
upd_ab‹ãd_°©s
();

111 ˛as†
	cmid1_dñ_rvp
 : 
public
 
rvp_t


113 
¥iv©e
:

114 
obje˘_ˇche_t
<
	tmid1_dñ_rvp
> 
	trvp_ˇche
;

115 
rvp_ˇche
* 
	m_ˇche
;

116 
D‹aTPCCEnv
* 
	m_±pc˚nv
;

117 
boﬁ
 
	m_bWake
;

119 
dñivîy_öput_t
 
	m_dö
;

120 
	m_d_id
;

121 
	m_o_id
;

122 
föÆ_dñ_rvp
* 
	m_föÆ_rvp
;

123 
	mpublic
:

124 
	$mid1_dñ_rvp
(Ë: 
	`rvp_t
(), 
	`_ˇche
(
NULL
), 
	`_±pc˚nv
(NULL),

125 
	`_o_id
(-1) { }

126 ~
	$mid1_dñ_rvp
(Ë{ 
_ˇche
=
NULL
; 
_±pc˚nv
=NULL;

127 
_o_id
 = -1; 
	}
}

130 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° & 
ax˘id
,

131 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

132 c⁄° 
dñivîy_öput_t
& 
dö
, c⁄° 
boﬁ
 
bWake
,

133 
D‹aTPCCEnv
* 
≥nv
, 
rvp_ˇche
* 
pc
)

135 
_dö
 = 
dö
;

136 
_bWake
 = 
bWake
;

137 
	`as£π
 (
≥nv
);

138 
_±pc˚nv
 = 
≥nv
;

139 
	`as£π
 (
pc
);

140 
_ˇche
 = 
pc
;

141 
	`_£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,1,1);

142 
	}
}

143 
ölöe
 
	$po°£t
(
föÆ_dñ_rvp
* 
¥vp
, c⁄° 
d_id
)

145 
_d_id
 = 
d_id
;

147 
	`as£π
 (
¥vp
);

148 
_föÆ_rvp
 = 
¥vp
;

149 
	}
}

151 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

153 
	$£t_o_id
(c⁄° 
aoid
Ë{ 
_o_id
 =áoid; 
	}
}

156 
w_rc_t
 
_run
();

172 ˛as†
	cmid2_dñ_rvp
 : 
public
 
rvp_t


174 
¥iv©e
:

175 
obje˘_ˇche_t
<
	tmid2_dñ_rvp
> 
	trvp_ˇche
;

176 
rvp_ˇche
* 
	m_ˇche
;

177 
D‹aTPCCEnv
* 
	m_±pc˚nv
;

178 
boﬁ
 
	m_bWake
;

180 
dñivîy_öput_t
 
	m_dö
;

181 
	m_d_id
;

182 
	m_c_id
;

183 
	m_amou¡
;

184 
èès_lock
 
	m_amou¡_lock
;

185 
föÆ_dñ_rvp
* 
	m_föÆ_rvp
;

187 
	mpublic
:

188 
	$mid2_dñ_rvp
(Ë: 
	`rvp_t
(), 
	`_ˇche
(
NULL
), 
	`_±pc˚nv
(NULL),

189 
	`_c_id
(-1), 
	`_amou¡
(-1) { }

190 ~
	$mid2_dñ_rvp
(Ë{ 
_ˇche
=
NULL
; 
_±pc˚nv
=NULL;

191 
_c_id
 = -1; 
_amou¡
 = -1; 
	}
}

194 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° & 
ax˘id
,

195 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

196 c⁄° 
dñivîy_öput_t
& 
dö
, c⁄° 
boﬁ
 
bWake
,

197 
D‹aTPCCEnv
* 
≥nv
, 
rvp_ˇche
* 
pc
)

199 
_dö
 = 
dö
;

200 
_bWake
 = 
bWake
;

201 
_±pc˚nv
 = 
≥nv
;

202 
	`as£π
 (
pc
);

203 
_ˇche
 = 
pc
;

204 
	`_£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,2,3);

205 
	}
}

206 
ölöe
 
	$po°£t
(c⁄° 
d_id
,
föÆ_dñ_rvp
* 
¥vp
)

208 
_d_id
 = 
d_id
;

209 
_föÆ_rvp
 = 
¥vp
;

210 
	}
}

211 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

213 
	$add_amou¡
(c⁄° 
™amou¡
) {

214 
	`CRITICAL_SECTION
(
amou¡_cs
, 
_amou¡_lock
);

215 
_amou¡
 +
™amou¡
;

216 
	}
}

218 
	$£t_c_id
(c⁄° 
c_id
Ë{ 
_c_id
 = c_id; 
	}
}

221 
w_rc_t
 
_run
();

248 
˛ass
 
	gdñ_a˘i⁄
 : 
public
 
ønge_a˘i⁄_im∂
<>

250 
¥Ÿe˘ed
:

251 
D‹aTPCCEnv
* 
_±pc˚nv
;

252 
dñivîy_öput_t
 
	g_dö
;

253 
	g_d_id
;

255 
ölöe
 
_dñ_a˘_£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
,

256 c⁄° 
keyÀn
, c⁄° 
dñivîy_öput_t
& 
dö
,

257 c⁄° 
did
,

258 
D‹aTPCCEnv
* 
≥nv
)

260 
_ønge_a˘_£t
(
ax˘
,
©id
,
¥vp
,
keyÀn
);

261 
	g_dö
 = 
dö
;

262 
	g_d_id
 = 
did
;

263 
as£π
 (
≥nv
);

264 
	g_±pc˚nv
 = 
≥nv
;

267 
	gpublic
:

268 
dñ_a˘i⁄
(Ë: 
ønge_a˘i⁄_im∂
<>(), 
_±pc˚nv
(
NULL
) { }

269 
	gvútuÆ
 ~
dñ_a˘i⁄
() { }

271 
vútuÆ
 
w_rc_t
 
åx_exec
()=0;

272 
vútuÆ
 
ˇlc_keys
()=0;

278 ˛as†
	cdñ_n‹d_dñ_a˘i⁄
 : 
public
 
dñ_a˘i⁄


280 
¥iv©e
:

281 
obje˘_ˇche_t
<
	tdñ_n‹d_dñ_a˘i⁄
> 
	ta˘_ˇche
;

282 
a˘_ˇche
* 
	m_ˇche
;

283 
mid1_dñ_rvp
* 
	m_pmid1_rvp
;

284 
	mpublic
:

285 
	$dñ_n‹d_dñ_a˘i⁄
(Ë: 
	$dñ_a˘i⁄
() { }

286 ~
	$dñ_n‹d_dñ_a˘i⁄
(Ë{ 
	}
}

287 
w_rc_t
 
åx_exec
();

288 
	$ˇlc_keys
() {

289 
_down
.
	`push_back
(
_dö
.
_wh_id
);

290 
_down
.
	`push_back
(
_d_id
);

291 
	}
}

292 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

293 
mid1_dñ_rvp
* 
pmid1_rvp
,

294 c⁄° 
dñivîy_öput_t
& 
dö
,

295 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

297 
	`as£π
 (
pmid1_rvp
);

298 
_pmid1_rvp
 = 
pmid1_rvp
;

299 
	`as£π
 (
pc
);

300 
_ˇche
 = 
pc
;

301 
	`_dñ_a˘_£t
(
ax˘
,
©id
,
pmid1_rvp
,2,
dö
,0,
≥nv
);

302 
	}
}

303 
ölöe
 
	$po°£t
(c⁄° 
d_id
)

305 
_d_id
 = 
d_id
;

306 
	}
}

307 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

314 ˛as†
	cupd_‹d_dñ_a˘i⁄
 : 
public
 
dñ_a˘i⁄


316 
¥iv©e
:

317 
obje˘_ˇche_t
<
	tupd_‹d_dñ_a˘i⁄
> 
	ta˘_ˇche
;

318 
a˘_ˇche
* 
	m_ˇche
;

319 
mid2_dñ_rvp
* 
	m_pmid2_rvp
;

320 
	m_o_id
;

321 
	mpublic
:

322 
	$upd_‹d_dñ_a˘i⁄
(Ë: 
	$dñ_a˘i⁄
() { }

323 ~
	$upd_‹d_dñ_a˘i⁄
(Ë{ 
	}
}

324 
w_rc_t
 
åx_exec
();

325 
	$ˇlc_keys
() {

326 
_down
.
	`push_back
(
_dö
.
_wh_id
);

327 
_down
.
	`push_back
(
_d_id
);

328 
_down
.
	`push_back
(
_o_id
);

329 
_down
.
	`push_back
(
_o_id
);

330 
	}
}

331 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

332 
mid2_dñ_rvp
* 
pmid2_rvp
,

333 c⁄° 
dñivîy_öput_t
& 
dö
,

334 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

336 
	`as£π
 (
pmid2_rvp
);

337 
_pmid2_rvp
 = 
pmid2_rvp
;

338 
	`as£π
 (
pc
);

339 
_ˇche
 = 
pc
;

340 
	`_dñ_a˘_£t
(
ax˘
,
©id
,
pmid2_rvp
,3,
dö
,0,
≥nv
);

341 
	}
}

342 
ölöe
 
	$po°£t
(c⁄° 
d_id
, c⁄° 
o_id
)

344 
_d_id
 = 
d_id
;

345 
_o_id
 = 
o_id
;

346 
	}
}

347 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

354 ˛as†
	cupd_ﬁöe_dñ_a˘i⁄
 : 
public
 
dñ_a˘i⁄


356 
¥iv©e
:

357 
obje˘_ˇche_t
<
	tupd_ﬁöe_dñ_a˘i⁄
> 
	ta˘_ˇche
;

358 
a˘_ˇche
* 
	m_ˇche
;

359 
mid2_dñ_rvp
* 
	m_pmid2_rvp
;

360 
	m_o_id
;

361 
	mpublic
:

362 
	$upd_ﬁöe_dñ_a˘i⁄
(Ë: 
	$dñ_a˘i⁄
() { }

363 ~
	$upd_ﬁöe_dñ_a˘i⁄
(Ë{ 
	}
}

364 
w_rc_t
 
åx_exec
();

365 
	$ˇlc_keys
() {

366 
_down
.
	`push_back
(
_dö
.
_wh_id
);

367 
_down
.
	`push_back
(
_d_id
);

368 
_down
.
	`push_back
(
_o_id
);

369 
	}
}

370 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

371 
mid2_dñ_rvp
* 
pmid2_rvp
,

372 c⁄° 
dñivîy_öput_t
& 
dö
,

373 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

375 
	`as£π
 (
pmid2_rvp
);

376 
_pmid2_rvp
 = 
pmid2_rvp
;

377 
	`as£π
 (
pc
);

378 
_ˇche
 = 
pc
;

379 
	`_dñ_a˘_£t
(
ax˘
,
©id
,
pmid2_rvp
,3,
dö
,0,
≥nv
);

380 
	}
}

381 
ölöe
 
	$po°£t
(c⁄° 
d_id
, c⁄° 
o_id
)

383 
_d_id
 = 
d_id
;

384 
_o_id
 = 
o_id
;

385 
	}
}

386 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

393 ˛as†
	cupd_cu°_dñ_a˘i⁄
 : 
public
 
dñ_a˘i⁄


395 
¥iv©e
:

396 
obje˘_ˇche_t
<
	tupd_cu°_dñ_a˘i⁄
> 
	ta˘_ˇche
;

397 
a˘_ˇche
* 
	m_ˇche
;

398 
	m_c_id
;

399 
	m_amou¡
;

400 
	mpublic
:

401 
	$upd_cu°_dñ_a˘i⁄
(Ë: 
	`dñ_a˘i⁄
(), 
	`_c_id
(-1), 
	`_amou¡
(-1) { }

402 ~
	$upd_cu°_dñ_a˘i⁄
(Ë{ 
_c_id
=-1; 
_amou¡
=-1; 
	}
}

403 
w_rc_t
 
åx_exec
();

404 
	$ˇlc_keys
() {

405 
_down
.
	`push_back
(
_dö
.
_wh_id
);

406 
_down
.
	`push_back
(
_d_id
);

407 
_down
.
	`push_back
(
_c_id
);

408 
	}
}

409 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

410 
rvp_t
* 
¥vp
,

411 c⁄° 
dñivîy_öput_t
& 
dö
,

412 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

414 
	`as£π
 (
pc
);

415 
_ˇche
 = 
pc
;

416 
	`_dñ_a˘_£t
(
ax˘
,
©id
,
¥vp
,3,
dö
,0,
≥nv
);

417 
	}
}

418 
ölöe
 
	$po°£t
(c⁄° 
d_id
, c⁄° 
c_id
, c⁄° 
amou¡
)

420 
_d_id
 = 
d_id
;

421 
_c_id
 = 
c_id
;

422 
_amou¡
 = 
amou¡
;

423 
	}
}

425 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

431 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_mbench.h

35 #i‚de‡
__DORA_MBENCHES_H


36 
	#__DORA_MBENCHES_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

41 
	~"d‹a/çcc/d‹a_çcc.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gçcc
;

47 
ENTER_NAMESPACE
(
d‹a
);

58 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_mb_rvp
,
D‹aTPCCEnv
,1,1);

60 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_wh_mb_a˘i⁄
,,
D‹aTPCCEnv
,
mbích_wh_öput_t
,1);

62 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_cu°_mb_a˘i⁄
,,
D‹aTPCCEnv
,
mbích_cu°_öput_t
,1);

65 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_new_order.h

35 #i‚de‡
__DORA_TPCC_NEW_ORDER_H


36 
	#__DORA_TPCC_NEW_ORDER_H


	)

39 
	~"d‹a/çcc/d‹a_çcc.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

42 
usög
 
«me•a˚
 
	gsh‹e
;

43 
usög
 
«me•a˚
 
	gçcc
;

46 
ENTER_NAMESPACE
(
d‹a
);

61 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid1_n‹d_rvp
,
D‹aTPCCEnv
,
√w_‹dî_öput_t
,4,4);

62 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid2_n‹d_rvp
,
D‹aTPCCEnv
,
√w_‹dî_öput_t
,2,6);

63 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid3_n‹d_rvp
,
D‹aTPCCEnv
,
√w_‹dî_öput_t
,1,7);

64 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_n‹d_rvp
,
D‹aTPCCEnv
,1,8);

82 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_wh_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,1);

84 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
upd_di°_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,2);

87 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_cu°_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,2);

91 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_ôem_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_n‹d_rvp
,
√w_‹dî_öput_t
,1);

102 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
ös_‹d_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
,2);

105 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
ös_n‹d_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
,2);

114 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
ös_ﬁ_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
mid3_n‹d_rvp
,
√w_‹dî_öput_t
,2);

125 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
upd_°o_n‹d_a˘i⁄
,,
D‹aTPCCEnv
,
√w_‹dî_öput_t
,1);

129 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_order_status.h

35 #i‚de‡
__DORA_TPCC_ORDER_STATUS_H


36 
	#__DORA_TPCC_ORDER_STATUS_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

41 
	~"d‹a/çcc/d‹a_çcc.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gçcc
;

47 
ENTER_NAMESPACE
(
d‹a
);

60 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid1_‹d°_rvp
,
D‹aTPCCEnv
,
‹dî_°©us_öput_t
,1,1);

61 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid2_‹d°_rvp
,
D‹aTPCCEnv
,
‹dî_°©us_öput_t
,1,2);

62 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_‹d°_rvp
,
D‹aTPCCEnv
,1,3);

75 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_cu°_‹d°_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_‹d°_rvp
,
‹dî_°©us_öput_t
,2);

78 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_‹d_‹d°_a˘i⁄
,,
D‹aTPCCEnv
,
mid2_‹d°_rvp
,
‹dî_°©us_öput_t
,2);

81 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_ﬁ_‹d°_a˘i⁄
,,
D‹aTPCCEnv
,
‹dî_°©us_öput_t
,2);

85 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_payment.h

35 #i‚de‡
__DORA_TPCC_PAYMENT_H


36 
	#__DORA_TPCC_PAYMENT_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

41 
	~"d‹a/çcc/d‹a_çcc.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gçcc
;

47 
ENTER_NAMESPACE
(
d‹a
);

68 ˛as†
	cmidway_∑y_rvp
 : 
public
 
rvp_t


70 
¥iv©e
:

71 
obje˘_ˇche_t
<
	tmidway_∑y_rvp
> 
	trvp_ˇche
;

72 
rvp_ˇche
* 
	m_ˇche
;

73 
D‹aTPCCEnv
* 
	m_±pc˚nv
;

74 
boﬁ
 
	m_bWake
;

76 
çcc_w¨ehou£_tu∂e
 
	m_awh
;

77 
çcc_di°ri˘_tu∂e
 
	m_adi°
;

78 
	mpublic
:

79 
	$midway_∑y_rvp
(Ë: 
	`rvp_t
(), 
	`_ˇche
(
NULL
), 
	$_±pc˚nv
(
NULL
) { }

80 ~
	$midway_∑y_rvp
(Ë{ 
_ˇche
=
NULL
; 
_±pc˚nv
=NULL; 
	}
}

83 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° & 
ax˘id
,

84 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

85 c⁄° 
∑ymít_öput_t
& 
µö
, c⁄° 
boﬁ
 
bWake
,

86 
D‹aTPCCEnv
* 
≥nv
, 
rvp_ˇche
* 
pc
)

88 
_pö
 = 
µö
;

89 
_bWake
 = 
bWake
;

90 
	`as£π
 (
≥nv
);

91 
_±pc˚nv
 = 
≥nv
;

92 
	`as£π
 (
pc
);

93 
_ˇche
 = 
pc
;

94 
	`_£t
(
ax˘
,
©id
,
ax˘id
,
¥esu…
,3,3);

95 
	}
}

96 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

98 
∑ymít_öput_t
 
	g_pö
;

99 
çcc_w¨ehou£_tu∂e
* 
	$wh
(Ë{  (&
_awh
); 
	}
}

100 
çcc_di°ri˘_tu∂e
* 
	$di°
(Ë{  (&
_adi°
); 
	}
}

103 
w_rc_t
 
_run
();

117 ˛as†
	cföÆ_∑y_rvp
 : 
public
 
ãrmöÆ_rvp_t


119 
¥iv©e
:

120 
obje˘_ˇche_t
<
	tföÆ_∑y_rvp
> 
	trvp_ˇche
;

121 
D‹aTPCCEnv
* 
	m_±pc˚nv
;

122 
rvp_ˇche
* 
	m_ˇche
;

123 
	mpublic
:

124 
	$föÆ_∑y_rvp
(Ë: 
	`ãrmöÆ_rvp_t
(), 
	`_±pc˚nv
(
NULL
), 
	$_ˇche
(
NULL
) { }

125 ~
	$föÆ_∑y_rvp
(Ë{ 
_ˇche
=
NULL
; 
_±pc˚nv
=NULL; 
	}
}

128 
ölöe
 
	$£t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

129 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

130 
D‹aTPCCEnv
* 
≥nv
, 
rvp_ˇche
* 
pc
)

132 
	`as£π
 (
≥nv
);

133 
_±pc˚nv
 = 
≥nv
;

134 
	`as£π
 (
pc
);

135 
_ˇche
 = 
pc
;

136 
	`_£t
(
≥nv
->
	`db
(),≥nv,
px˘
,
©id
,
ax˘id
,
¥esu…
,1,4);

137 
	}
}

138 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

141 
w_rc_t
 
run
();

142 
upd_commôãd_°©s
();

143 
upd_ab‹ãd_°©s
();

168 
˛ass
 
	g∑y_a˘i⁄
 : 
public
 
ønge_a˘i⁄_im∂
<>

170 
¥Ÿe˘ed
:

171 
D‹aTPCCEnv
* 
_±pc˚nv
;

172 
∑ymít_öput_t
 
	g_pö
;

174 
ölöe
 
_∑y_a˘_£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
rvp_t
* 
¥vp
,

175 c⁄° 
keyÀn
, c⁄° 
∑ymít_öput_t
& 
pö
,

176 
D‹aTPCCEnv
* 
≥nv
)

178 
_ønge_a˘_£t
(
ax˘
,
©id
,
¥vp
,
keyÀn
);

179 
	g_pö
 = 
pö
;

180 
as£π
 (
≥nv
);

181 
	g_±pc˚nv
 = 
≥nv
;

184 
	gpublic
:

185 
∑y_a˘i⁄
(Ë: 
ønge_a˘i⁄_im∂
<>(), 
_±pc˚nv
(
NULL
) { }

186 
	gvútuÆ
 ~
∑y_a˘i⁄
() { }

188 
vútuÆ
 
w_rc_t
 
åx_exec
()=0;

189 
vútuÆ
 
ˇlc_keys
()=0;

195 ˛as†
	cupd_wh_∑y_a˘i⁄
 : 
public
 
∑y_a˘i⁄


197 
¥iv©e
:

198 
obje˘_ˇche_t
<
	tupd_wh_∑y_a˘i⁄
> 
	ta˘_ˇche
;

199 
a˘_ˇche
* 
	m_ˇche
;

200 
	mpublic
:

201 
	$upd_wh_∑y_a˘i⁄
(Ë: 
	$∑y_a˘i⁄
() { }

202 ~
	$upd_wh_∑y_a˘i⁄
(Ë{ 
	}
}

203 
w_rc_t
 
åx_exec
();

204 
midway_∑y_rvp
* 
	g_m_rvp
;

205 
ˇlc_keys
();

206 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

207 
midway_∑y_rvp
* 
¥vp
,

208 c⁄° 
∑ymít_öput_t
& 
pö
,

209 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

211 
	`as£π
 (
¥vp
);

212 
_m_rvp
 = 
¥vp
;

213 
	`as£π
 (
pc
);

214 
_ˇche
 = 
pc
;

215 
	`_∑y_a˘_£t
(
ax˘
,
©id
,
¥vp
,1,
pö
,
≥nv
);

216 
	}
}

217 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

223 ˛as†
	cupd_di°_∑y_a˘i⁄
 : 
public
 
∑y_a˘i⁄


225 
¥iv©e
:

226 
obje˘_ˇche_t
<
	tupd_di°_∑y_a˘i⁄
> 
	ta˘_ˇche
;

227 
a˘_ˇche
* 
	m_ˇche
;

228 
	mpublic
:

229 
	$upd_di°_∑y_a˘i⁄
(Ë: 
	$∑y_a˘i⁄
() { }

230 ~
	$upd_di°_∑y_a˘i⁄
(Ë{ 
	}
}

231 
w_rc_t
 
åx_exec
();

232 
midway_∑y_rvp
* 
	g_m_rvp
;

233 
ˇlc_keys
();

234 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, 
midway_∑y_rvp
* 
amrvp
,

235 c⁄° 
∑ymít_öput_t
& 
pö
,

236 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

238 
	`as£π
 (
amrvp
);

239 
_m_rvp
 = 
amrvp
;

240 
	`as£π
 (
pc
);

241 
_ˇche
 = 
pc
;

242 
	`_∑y_a˘_£t
(
ax˘
,
©id
,
amrvp
,2,
pö
,
≥nv
);

243 
	}
}

244 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

250 ˛as†
	cupd_cu°_∑y_a˘i⁄
 : 
public
 
∑y_a˘i⁄


252 
¥iv©e
:

253 
obje˘_ˇche_t
<
	tupd_cu°_∑y_a˘i⁄
> 
	ta˘_ˇche
;

254 
a˘_ˇche
* 
	m_ˇche
;

255 
	mpublic
:

256 
	$upd_cu°_∑y_a˘i⁄
(Ë: 
	$∑y_a˘i⁄
() { }

257 ~
	$upd_cu°_∑y_a˘i⁄
(Ë{ 
	}
}

258 
w_rc_t
 
åx_exec
();

259 
midway_∑y_rvp
* 
	g_m_rvp
;

260 
ˇlc_keys
();

261 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

262 
midway_∑y_rvp
* 
¥vp
,

263 c⁄° 
∑ymít_öput_t
& 
pö
,

264 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

266 
	`as£π
 (
¥vp
);

267 
_m_rvp
 = 
¥vp
;

268 
	`as£π
 (
pc
);

269 
_ˇche
 = 
pc
;

270 
	`_∑y_a˘_£t
(
ax˘
,
©id
,
¥vp
,2,
pö
,
≥nv
);

271 
	}
}

272 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

278 ˛as†
	cös_hi°_∑y_a˘i⁄
 : 
public
 
∑y_a˘i⁄


280 
¥iv©e
:

281 
obje˘_ˇche_t
<
	tös_hi°_∑y_a˘i⁄
> 
	ta˘_ˇche
;

282 
a˘_ˇche
* 
	m_ˇche
;

283 
	mpublic
:

284 
	$ös_hi°_∑y_a˘i⁄
(Ë: 
	$∑y_a˘i⁄
() { }

285 ~
	$ös_hi°_∑y_a˘i⁄
(Ë{ 
	}
}

286 
w_rc_t
 
åx_exec
();

287 
çcc_w¨ehou£_tu∂e
 
	g_awh
;

288 
çcc_di°ri˘_tu∂e
 
	g_adi°
;

289 
ˇlc_keys
();

290 
ölöe
 
	$£t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
,

291 
rvp_t
* 
¥vp
,

292 c⁄° 
∑ymít_öput_t
& 
pö
,

293 
D‹aTPCCEnv
* 
≥nv
, 
a˘_ˇche
* 
pc
)

295 
	`as£π
 (
pc
);

296 
_ˇche
 = 
pc
;

297 
	`_∑y_a˘_£t
(
ax˘
,
©id
,
¥vp
,1,
pö
,
≥nv
);

298 
	}
}

299 
ölöe
 
	$po°£t
(c⁄° 
çcc_w¨ehou£_tu∂e
& 
awh
,

300 c⁄° 
çcc_di°ri˘_tu∂e
& 
adi°
)

302 
_awh
 = 
awh
;

303 
_adi°
 = 
adi°
;

304 
	}
}

305 
ölöe
 
	$giveback
(Ë{ 
_ˇche
->
	`giveback
(
this
); 
	}
}

311 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_stock_level.h

35 #i‚de‡
__DORA_TPCC_STOCK_LEVEL_H


36 
	#__DORA_TPCC_STOCK_LEVEL_H


	)

39 
	~"d‹a.h
"

40 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

41 
	~"d‹a/çcc/d‹a_çcc.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

44 
usög
 
«me•a˚
 
	gçcc
;

47 
ENTER_NAMESPACE
(
d‹a
);

60 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid1_°ock_rvp
,
D‹aTPCCEnv
,
°ock_Àvñ_öput_t
,1,1);

63 
DECLARE_DORA_EMPTY_MIDWAY_RVP_CLASS
(
mid2_°ock_rvp
,
D‹aTPCCEnv
,
°ock_Àvñ_öput_t
,1,2);

65 
DECLARE_DORA_FINAL_RVP_CLASS
(
föÆ_°ock_rvp
,
D‹aTPCCEnv
,1,3);

76 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_di°_°ock_a˘i⁄
,,
D‹aTPCCEnv
,
mid1_°ock_rvp
,
°ock_Àvñ_öput_t
,2);

79 
DECLARE_DORA_ACTION_WITH_RVP_CLASS
(
r_ﬁ_°ock_a˘i⁄
,,
D‹aTPCCEnv
,
mid2_°ock_rvp
,
°ock_Àvñ_öput_t
,2);

82 
DECLARE_DORA_ACTION_NO_RVP_CLASS
(
r_°_°ock_a˘i⁄
,,
D‹aTPCCEnv
,
°ock_Àvñ_öput_t
,2);

85 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_tpcc.h

32 #i‚de‡
__DORA_TPCC_H


33 
	#__DORA_TPCC_H


	)

36 
	~<c°dio
>

38 
	~"és.h
"

40 
	~"utû.h
"

41 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

42 
	~"d‹a/d‹a_ív.h
"

43 
	~"d‹a.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gçcc
;

49 
ENTER_NAMESPACE
(
d‹a
);

55 
˛ass
 
	gföÆ_mb_rvp
;

56 
˛ass
 
	gupd_wh_mb_a˘i⁄
;

57 
˛ass
 
	gupd_cu°_mb_a˘i⁄
;

60 
˛ass
 
	gföÆ_∑y_rvp
;

61 
˛ass
 
	gmidway_∑y_rvp
;

62 
˛ass
 
	gupd_wh_∑y_a˘i⁄
;

63 
˛ass
 
	gupd_di°_∑y_a˘i⁄
;

64 
˛ass
 
	gupd_cu°_∑y_a˘i⁄
;

65 
˛ass
 
	gös_hi°_∑y_a˘i⁄
;

68 
˛ass
 
	gföÆ_‹d°_rvp
;

69 
˛ass
 
	gmid1_‹d°_rvp
;

70 
˛ass
 
	gmid2_‹d°_rvp
;

71 
˛ass
 
	gr_cu°_‹d°_a˘i⁄
;

72 
˛ass
 
	gr_‹d_‹d°_a˘i⁄
;

73 
˛ass
 
	gr_ﬁ_‹d°_a˘i⁄
;

77 
˛ass
 
	gmid1_°ock_rvp
;

78 
˛ass
 
	gmid2_°ock_rvp
;

79 
˛ass
 
	gföÆ_°ock_rvp
;

80 
˛ass
 
	gr_di°_°ock_a˘i⁄
;

81 
˛ass
 
	gr_ﬁ_°ock_a˘i⁄
;

82 
˛ass
 
	gr_°_°ock_a˘i⁄
;

85 
˛ass
 
	gmid1_dñ_rvp
;

86 
˛ass
 
	gmid2_dñ_rvp
;

87 
˛ass
 
	gföÆ_dñ_rvp
;

88 
˛ass
 
	gdñ_n‹d_dñ_a˘i⁄
;

89 
˛ass
 
	gupd_‹d_dñ_a˘i⁄
;

90 
˛ass
 
	gupd_ﬁöe_dñ_a˘i⁄
;

91 
˛ass
 
	gupd_cu°_dñ_a˘i⁄
;

94 
˛ass
 
	gmid1_n‹d_rvp
;

95 
˛ass
 
	gmid2_n‹d_rvp
;

96 
˛ass
 
	gmid3_n‹d_rvp
;

97 
˛ass
 
	gföÆ_n‹d_rvp
;

98 
˛ass
 
	gr_wh_n‹d_a˘i⁄
;

99 
˛ass
 
	gr_cu°_n‹d_a˘i⁄
;

100 
˛ass
 
	gupd_di°_n‹d_a˘i⁄
;

101 
˛ass
 
	gr_ôem_n‹d_a˘i⁄
;

102 
˛ass
 
	gupd_°o_n‹d_a˘i⁄
;

103 
˛ass
 
	gös_‹d_n‹d_a˘i⁄
;

104 
˛ass
 
	gös_n‹d_n‹d_a˘i⁄
;

105 
˛ass
 
	gös_ﬁ_n‹d_a˘i⁄
;

117 
˛ass
 
	gD‹aTPCCEnv
 : 
public
 
Sh‹eTPCCEnv
,Öubli¯
	gD‹aEnv


119 
	gpublic
:

121 
D‹aTPCCEnv
();

122 
	gvútuÆ
 ~
D‹aTPCCEnv
();

127 
°¨t
();

128 
°›
();

129 
ªsume
();

130 
∑u£
();

131 
w_rc_t
 
√wrun
();

132 
£t
(
ívV¨M≠
* ) { (0); };

133 
dump
();

134 
öfo
() const;

135 
°©i°ics
();

136 
c⁄f
();

139 
w_rc_t
 
upd©e_∑πôi⁄ög
();

142 
DECLARE_DORA_PARTS
(
whs
);

143 
DECLARE_DORA_PARTS
(
dis
);

144 
DECLARE_DORA_PARTS
(
cus
);

145 
DECLARE_DORA_PARTS
(
his
);

146 
DECLARE_DORA_PARTS
(
n‹
);

147 
DECLARE_DORA_PARTS
(
‹d
);

148 
DECLARE_DORA_PARTS
(
ôe
);

149 
DECLARE_DORA_PARTS
(
ﬁi
);

150 
DECLARE_DORA_PARTS
(
°o
);

155 
DECLARE_DORA_TRX
(
√w_‹dî
);

156 
DECLARE_DORA_TRX
(
∑ymít
);

157 
DECLARE_DORA_TRX
(
‹dî_°©us
);

158 
DECLARE_DORA_TRX
(
dñivîy
);

159 
DECLARE_DORA_TRX
(
°ock_Àvñ
);

161 
DECLARE_DORA_TRX
(
mbích_wh
);

162 
DECLARE_DORA_TRX
(
mbích_cu°
);

170 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_mb_rvp
);

173 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_wh_mb_a˘i⁄
,
rvp_t
,
mbích_wh_öput_t
);

175 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_cu°_mb_a˘i⁄
,
rvp_t
,
mbích_cu°_öput_t
);

183 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
midway_∑y_rvp
,
∑ymít_öput_t
);

185 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_∑y_rvp
);

188 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_wh_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
);

189 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_di°_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
);

190 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_cu°_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
);

192 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_hi°_∑y_a˘i⁄
,
rvp_t
,
∑ymít_öput_t
);

200 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_‹d°_rvp
,
‹dî_°©us_öput_t
);

202 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_‹d°_rvp
,
‹dî_°©us_öput_t
);

204 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_‹d°_rvp
);

206 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_cu°_‹d°_a˘i⁄
,
mid1_‹d°_rvp
,
‹dî_°©us_öput_t
);

207 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_‹d_‹d°_a˘i⁄
,
mid2_‹d°_rvp
,
‹dî_°©us_öput_t
);

209 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_ﬁ_‹d°_a˘i⁄
,
rvp_t
,
‹dî_°©us_öput_t
);

216 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_°ock_rvp
,
°ock_Àvñ_öput_t
);

217 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_°ock_rvp
,
°ock_Àvñ_öput_t
);

219 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_°ock_rvp
);

221 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_di°_°ock_a˘i⁄
,
mid1_°ock_rvp
,
°ock_Àvñ_öput_t
);

222 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_ﬁ_°ock_a˘i⁄
,
mid2_°ock_rvp
,
°ock_Àvñ_öput_t
);

224 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_°_°ock_a˘i⁄
,
rvp_t
,
°ock_Àvñ_öput_t
);

233 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_dñ_rvp
,
dñivîy_öput_t
);

237 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_dñ_rvp
,
dñivîy_öput_t
);

242 
DECLARE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_dñ_rvp
);

245 
DECLARE_DORA_ACTION_GEN_FUNC
(
dñ_n‹d_dñ_a˘i⁄
,
mid1_dñ_rvp
,
dñivîy_öput_t
);

248 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_‹d_dñ_a˘i⁄
,
mid2_dñ_rvp
,
dñivîy_öput_t
);

252 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_ﬁöe_dñ_a˘i⁄
,
mid2_dñ_rvp
,
dñivîy_öput_t
);

256 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_cu°_dñ_a˘i⁄
,
rvp_t
,
dñivîy_öput_t
);

269 
DECLARE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_n‹d_rvp
,
√w_‹dî_öput_t
);

271 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_n‹d_rvp
,
√w_‹dî_öput_t
);

273 
DECLARE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid3_n‹d_rvp
,
√w_‹dî_öput_t
);

275 
DECLARE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_n‹d_rvp
);

279 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_wh_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
);

281 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_di°_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
);

283 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_cu°_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
);

285 
DECLARE_DORA_ACTION_GEN_FUNC
(
r_ôem_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
√w_‹dî_öput_t
);

289 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_‹d_n‹d_a˘i⁄
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
);

291 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_n‹d_n‹d_a˘i⁄
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
);

295 
DECLARE_DORA_ACTION_GEN_FUNC
(
ös_ﬁ_n‹d_a˘i⁄
,
mid3_n‹d_rvp
,
√w_‹dî_öput_t
);

299 
DECLARE_DORA_ACTION_GEN_FUNC
(
upd_°o_n‹d_a˘i⁄
,
rvp_t
,
√w_‹dî_öput_t
);

306 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/tpcc/dora_tpcc_client.h

31 #i‚de‡
__DORA_TPCC_CLIENT_H


32 
	#__DORA_TPCC_CLIENT_H


	)

35 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

36 
	~"d‹a/çcc/d‹a_çcc.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
d‹a
);

53 ˛as†
	cd‹a_çcc_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


55 
¥iv©e
:

57 
D‹aTPCCEnv
* 
_çccdb
;

58 
	m_wh
;

59 
	m_qf
;

61 
	mpublic
:

63 
	$d‹a_çcc_˛õ¡_t
() { }

65 
	$d‹a_çcc_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
D‹aTPCCEnv
* 
ív
,

66 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

67 c⁄° 
numOfTrxs
,

68 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
sWH
, c⁄° 
qf
)

69 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

70 
	`_çccdb
(
ív
), 
	`_wh
(
sWH
), 
	$_qf
(
qf
)

72 
	`as£π
 (
ív
);

73 
	`as£π
 (
_wh
>=0 && 
_qf
>0);

74 
	}
}

76 ~
	$d‹a_çcc_˛õ¡_t
(Ë{ 
	}
}

79 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

83 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

89 
EXIT_NAMESPACE
(
d‹a
);

	@include/dora/worker.h

32 #i‚de‡
__DORA_WORKER_H


33 
	#__DORA_WORKER_H


	)

35 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

37 
	~"d‹a/ba£_∑πôi⁄.h
"

38 
	~"d‹a/ba£_a˘i⁄.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

43 
ENTER_NAMESPACE
(
d‹a
);

55 ˛as†
	cd‹a_w‹kî_t
 : 
public
 
ba£_w‹kî_t


57 
¥iv©e
:

59 
ba£_∑πôi⁄_t
* 
_∑πôi⁄
;

62 
_w‹k_ACTIVE_im∂
();

64 
_¥e_STOP_im∂
();

67 
_£rve_a˘i⁄
(
ba£_a˘i⁄_t
* 
∑˘i⁄
);

69 
	mpublic
:

71 
d‹a_w‹kî_t
(
Sh‹eEnv
* 
ív
, 
ba£_∑πôi⁄_t
* 
≠¨t
, 
c_°r
 
äame
,

72 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
, c⁄° 
u£_¶i
 = 0);

74 ~
d‹a_w‹kî_t
();

80 
£t_∑πôi⁄
(
ba£_∑πôi⁄_t
* 
≠¨t
);

81 
ba£_∑πôi⁄_t
* 
gë_∑πôi⁄
();

82 
doRecovîy
();

87 
EXIT_NAMESPACE
(
d‹a
);

	@include/k_defines.h

34 #i‚de‡
__KITS_DEFINES_H


35 
	#__KITS_DEFINES_H


	)

40 
	~<w_deföes.h
>

41 
	~<©omic_ãm∂©es.h
>

43 
	~"sm_vas.h
"

44 
queue_ba£d_lock_t
 
	tmcs_lock
;

46 
	~"block_Æloc.h
"

48 #ifde‡
PACKAGE


49 #unde‡
PACKAGE


51 #ifde‡
PACKAGE_NAME


52 #unde‡
PACKAGE_NAME


54 #ifde‡
PACKAGE_STRING


55 #unde‡
PACKAGE_STRING


57 #ifde‡
PACKAGE_BUGREPORT


58 #unde‡
PACKAGE_BUGREPORT


60 #ifde‡
PACKAGE_TARNAME


61 #unde‡
PACKAGE_TARNAME


63 #ifde‡
PACKAGE_VERSION


64 #unde‡
PACKAGE_VERSION


66 #ifde‡
VERSION


67 #unde‡
VERSION


69 
	~"kôs-c⁄fig.h
"

71 #ifde‡
__SUNPRO_CC


72 
	~<°dlib.h
>

73 
	~<°dio.h
>

74 
	~<°rög.h
>

75 
	~<°d¨g.h
>

77 
	~<c°dlib
>

78 
	~<c°dio
>

79 
	~<c°rög
>

80 
	~<c°d¨g
>

84 #i‚de‡
__•¨cv9


86 
	t¥o˚ss‹id_t
;

87 c⁄° 
	gPBIND_NONE
 = -1;

97 
	~<sys/ty≥s.h
>

98 
	~<sys/¥o˚ss‹.h
>

99 
	~<sys/¥oc£t.h
>

	@include/kits-config.h

8 
	#CFG_CACHES
 1

	)

32 
	#HAVE_INTTYPES_H
 1

	)

38 
	#HAVE_MEMORY_H
 1

	)

47 
	#HAVE_PTHREAD
 1

	)

50 
	#HAVE_PTHREAD_PRIO_INHERIT
 1

	)

59 
	#HAVE_STDINT_H
 1

	)

62 
	#HAVE_STDLIB_H
 1

	)

65 
	#HAVE_STRINGS_H
 1

	)

68 
	#HAVE_STRING_H
 1

	)

71 
	#HAVE_SYS_STAT_H
 1

	)

74 
	#HAVE_SYS_TYPES_H
 1

	)

77 
	#HAVE_UNISTD_H
 1

	)

80 
	#PACKAGE
 "this_is_sh‹e_kôs"

	)

83 
	#PACKAGE_BUGREPORT
 ""

	)

86 
	#PACKAGE_NAME
 "THIS_IS_SHORE_KITS"

	)

89 
	#PACKAGE_STRING
 "THIS_IS_SHORE_KITS 2.1"

	)

92 
	#PACKAGE_TARNAME
 "this_is_sh‹e_kôs"

	)

95 
	#PACKAGE_URL
 ""

	)

98 
	#PACKAGE_VERSION
 "2.1"

	)

105 
	#STDC_HEADERS
 1

	)

108 
	#VERSION
 "2.1"

	)

	@include/qpipe.h

24 #i‚de‡
__QPIPE_H


25 
	#__QPIPE_H


	)

27 
	~"qpùe/scheduÀr.h
"

28 
	~"qpùe/c‹e.h
"

29 
	~"qpùe/°ages.h
"

30 
	~"qpùe/qcomm⁄.h
"

	@include/qpipe/common/int_comparator.h

24 #i‚de‡
__QPIPE_INT_COMPARATOR_H


25 
	#__QPIPE_INT_COMPARATOR_H


	)

27 
	~"qpùe/c‹e.h
"

29 
ENTER_NAMESPACE
(
qpùe
);

31 
	göt_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

32 
vútuÆ
 
›î©‹
()(const *, const *) const {

33 
uƒóchabÀ
();

35 
vútuÆ
 
key_com∑ª_t
* 
˛⁄e
() const {

36  
√w
 
öt_key_com∑ª_t
(*
this
);

40 
deÁu…_key_exåa˘‹_t
 
	töt_key_exåa˘‹_t
;

42 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/common/predicates.h

2 #i‚de‡
__QPIPE_PREDICATES_H


3 
	#__QPIPE_PREDICATES_H


	)

5 
	~"utû.h
"

6 
	~"qpùe/c‹e/tu∂e.h
"

7 
	~<ve˘‹
>

8 
	~<Æg‹ôhm
>

9 
	~<fun˘i⁄Æ
>

10 
	~<°rög
>

11 
	~<cm©h
>

12 
	~<ˇs£π
>

14 
usög
 
	g°d
::
ve˘‹
;

15 
usög
 
	g°d
::
°rög
;

16 
usög
 
	g°d
::
Àss
;

17 
usög
 
	g°d
::
gª©î
;

18 
usög
 
	g°d
::
Àss_equÆ
;

19 
usög
 
	g°d
::
gª©î_equÆ
;

20 
usög
 
	g°d
::
equÆ_to
;

21 
usög
 
	g°d
::
nŸ_equÆ_to
;

24 
ENTER_NAMESPACE
(
qpùe
);

31 
	s¥ediˇã_t
 {

32 
vútuÆ
 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
)=0;

34 
vútuÆ
 
¥ediˇã_t
* 
˛⁄e
() const=0;

36 
	mvútuÆ
 ~
¥ediˇã_t
() { }

49 
	gãm∂©e
 <
ty≥«me
 
	gV
,Åem∂©e<
	g˛ass
> 
˛ass
 
	gT
=
equÆ_to
>

50 ˛as†
	csˇœr_¥ediˇã_t
 : 
public
 
¥ediˇã_t
 {

51 
V
 
_vÆue
;

52 
size_t
 
	m_off£t
;

53 
	mpublic
:

54 
	$sˇœr_¥ediˇã_t
(
V
 
vÆue
, 
size_t
 
off£t
)

55 : 
	`_vÆue
(
vÆue
), 
	$_off£t
(
off£t
)

58 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
) {

59 
V
* 
fõld
 = 
Æig√d_ˇ°
<V>(
tu∂e
.
d©a
 + 
_off£t
);

60  
T
<
V
>()(*
fõld
, 
_vÆue
);

61 
	}
}

62 
vútuÆ
 
sˇœr_¥ediˇã_t
* 
	$˛⁄e
() const {

63  
√w
 
	`sˇœr_¥ediˇã_t
(*
this
);

64 
	}
}

75 
	gãm∂©e
 <ãm∂©e<
	g˛ass
> 
˛ass
 
	gT
=
equÆ_to
>

76 ˛as†
	c°rög_¥ediˇã_t
 : 
public
 
¥ediˇã_t
 {

77 
°rög
 
_vÆue
;

78 
size_t
 
	m_off£t
;

79 
	mpublic
:

80 
	$°rög_¥ediˇã_t
(c⁄° 
°rög
 &
vÆue
, 
size_t
 
off£t
)

81 : 
	`_vÆue
(
vÆue
), 
	$_off£t
(
off£t
)

84 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
) {

85 c⁄° * 
fõld
 = 
tu∂e
.
d©a
 + 
_off£t
;

86  
T
<>()(
	`°rcmp
(
fõld
, 
_vÆue
.
	`c_°r
()), 0);

87 
	}
}

88 
vútuÆ
 
°rög_¥ediˇã_t
* 
	$˛⁄e
() const {

89  
√w
 
	`°rög_¥ediˇã_t
(*
this
);

90 
	}
}

97 
	gãm∂©e
 <
boﬁ
 
	gINVERTED
=
Ál£
>

98 ˛as†
	clike_¥ediˇã
 : 
public
 
¥ediˇã_t
 {

99 
size_t
 
_off£t
;

102 
°rög
 
	m_bﬁ
;

104 
°rög
 
	m_eﬁ
;

106 
	mve˘‹
<
	t°rög
> 
	t‰agmít_li°
;

107 
‰agmít_li°
 
	m_‰agmíts
;

108 
	$öô
(c⁄° 
°rög
 &
vÆue
) {

109 
size_t
 
beg
 = 0;

110 
size_t
 
íd
 = 
vÆue
.
	`föd
('%');

113 if(
beg
 !
íd
)

114 
_bﬁ
 = 
vÆue
.
	`sub°r
(
beg
, 
íd
);

118 
beg
 = 
íd
;

119 
íd
 = 
vÆue
.
	`föd
('%',Énd+1);

120 if(
íd
 =
°rög
::
≈os
)

123 
_‰agmíts
.
	`push_back
(
vÆue
.
	`sub°r
(
beg
, 
íd
));

127 if((
beg
 + 1Ë!
vÆue
.
	`size
())

128 
_eﬁ
 = 
vÆue
.
	`sub°r
(
beg
, vÆue.
	`size
());

130 
public
:

131 
	$like_¥ediˇã
(c⁄° 
°rög
 &
vÆue
, 
size_t
 
off£t
)

132 : 
	$_off£t
(
off£t
)

134 
	`as£π
(
vÆue
.
	`size
());

135 
	`öô
(
vÆue
);

136 
	}
}

137 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
) {

138 c⁄° * 
fõld
 = 
tu∂e
.
d©a
 + 
_off£t
;

139 c⁄° * 
m¨k
;

142 if(
_bﬁ
.
	`size
()) {

143 
m¨k
 = 
	`°r°r
(
fõld
, 
_bﬁ
.
	`c_°r
());

144 if(
m¨k
 !
fõld
)

145  
INVERTED
;

148 
fõld
 = 
m¨k
 + 
_bﬁ
.
	`size
();

152 
‰agmít_li°
::
ôî©‹
 
ô
=
_‰agmíts
.
	`begö
(); ià!_‰agmíts.
	`íd
(); ++it) {

153 
m¨k
 = 
	`°r°r
(
fõld
, 
ô
->
	`c_°r
());

154 if(!
m¨k
)

155  
INVERTED
;

157 
fõld
 = 
m¨k
 + 
ô
->
	`size
();

161 if(
_eﬁ
.
	`size
()) {

162 
m¨k
 = 
	`°r°r
(
fõld
, 
_eﬁ
.
	`c_°r
());

164 if(!
m¨k
 || m¨k[
_eﬁ
.
	`size
()])

165  
INVERTED
;

169  !
INVERTED
;

170 
	}
}

171 
vútuÆ
 
like_¥ediˇã
* 
	$˛⁄e
() const {

172  
√w
 
	`like_¥ediˇã
(*
this
);

173 
	}
}

178 
	glike_¥ediˇã
<
	tÁl£
> 
	tlike_¥ediˇã_t
;

179 
	glike_¥ediˇã
<
	tåue
> 
	tnŸ_like_¥ediˇã_t
;

183 
	gãm∂©e
 <
ty≥«me
 
	gV
,Åem∂©e<
	g˛ass
> 
˛ass
 
	gT
=
equÆ_to
>

184 ˛as†
	cfõld_¥ediˇã_t
 : 
public
 
¥ediˇã_t
 {

185 
size_t
 
_off£t1
;

186 
size_t
 
	m_off£t2
;

187 
	mpublic
:

188 
	$fõld_¥ediˇã_t
(
size_t
 
off£t1
, size_à
off£t2
)

189 : 
	`_off£t1
(
off£t1
), 
	$_off£t2
(
off£t2
)

192 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
) {

193 
V
* 
fõld1
 = 
Æig√d_ˇ°
<V>(
tu∂e
.
d©a
 + 
_off£t1
);

194 
V
* 
fõld2
 = 
Æig√d_ˇ°
<V>(
tu∂e
.
d©a
 + 
_off£t2
);

195  
T
<
V
>()(*
fõld1
, *
fõld2
);

196 
	}
}

197 
vútuÆ
 
fõld_¥ediˇã_t
* 
	$˛⁄e
() const {

198  
√w
 
	`fõld_¥ediˇã_t
(*
this
);

199 
	}
}

208 
	gãm∂©e
<
boﬁ
 
	gDISJUNCTION
>

209 ˛as†
	ccompound_¥ediˇã_t
 : 
public
 
¥ediˇã_t
 {

210 
public
:

211 
°d
::
	tve˘‹
<
	t¥ediˇã_t
*> 
	t¥ediˇã_li°_t
;

213 
	m¥iv©e
:

214 
¥ediˇã_li°_t
 
_li°
;

219 
	sã°_t
 {

220 c⁄° 
	mtu∂e_t
 &
	m_t
;

221 
ã°_t
(c⁄° 
tu∂e_t
 &
t
Ë: 
_t
(t) { }

222 
boﬁ
 
›î©‹
()(
¥ediˇã_t
* 
p
) {

223  
p
->
£À˘
(
_t
Ë=
DISJUNCTION
;

228 
	s˛⁄e_t
 {

229 
¥ediˇã_t
* 
›î©‹
()’ªdiˇã_t* 
	gp
) {

230  
	gp
->
˛⁄e
();

235 
	sdñëe_t
 {

236 
›î©‹
()(
¥ediˇã_t
* 
	gp
) {

237 
dñëe
 
	gp
;

240 
	$˛⁄e_li°
() {

242 
°d
::
	`å™sf‹m
(
_li°
.
	`begö
(), _li°.
	`íd
(), _li°.begö(), 
	`˛⁄e_t
());

243 
	}
}

245 
	gpublic
:

246 
	$add
(
¥ediˇã_t
* 
p
) {

247 
_li°
.
	`push_back
(
p
);

248 
	}
}

249 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
t
) {

251 
¥ediˇã_li°_t
::
ôî©‹
 
ªsu…
;

252 
ªsu…
 = 
°d
::
	`föd_if
(
_li°
.
	`begö
(), _li°.
	`íd
(), 
	`ã°_t
(
t
));

256  
DISJUNCTION
? 
ªsu…
 !
_li°
.
	`íd
() :Ñesult == _list.end();

257 
	}
}

258 
vútuÆ
 
compound_¥ediˇã_t
* 
	$˛⁄e
() const {

259  
√w
 
	`compound_¥ediˇã_t
(*
this
);

260 
	}
}

261 
	$compound_¥ediˇã_t
(c⁄° 
compound_¥ediˇã_t
 &
Ÿhî
)

262 : 
	`¥ediˇã_t
(
Ÿhî
), 
	$_li°
(
Ÿhî
.
_li°
)

264 
	`˛⁄e_li°
();

265 
	}
}

266 
	$compound_¥ediˇã_t
(Ë{ 
	}
}

267 
	gcompound_¥ediˇã_t
 &
	g›î©‹
=(c⁄° 
compound_¥ediˇã_t
 &
Ÿhî
) {

268 
_li°
 = 
Ÿhî
._list;

269 
˛⁄e_li°
();

271 
	gvútuÆ
 ~
	$compound_¥ediˇã_t
() {

272 
°d
::
	`f‹_óch
(
_li°
.
	`begö
(), _li°.
	`íd
(), 
	`dñëe_t
());

273 
	}
}

278 
	gcompound_¥ediˇã_t
<
	tÁl£
> 
	t™d_¥ediˇã_t
;

279 
	gcompound_¥ediˇã_t
<
	tåue
> 
	t‹_¥ediˇã_t
;

288 ˛as†
	c¥ediˇã_øndgí_t
 {

291 
	mINVALID
,

292 
	mUSE_THREAD_LOCAL
,

293 
	mUSE_CALLER


294 } 
	g_ty≥
;

295 
øndgí_t
 
	g_ˇŒî_øndgí
;

296 
øndgí_t
* 
	g_thªad_loˇl_øndgí
;

300 
	$¥ediˇã_øndgí_t
 ()

301 : 
	`_ty≥
(
INVALID
),

302 
	`_ˇŒî_øndgí
(),

303 
	$_thªad_loˇl_øndgí
(
NULL
)

305 
	}
}

307 
	$¥ediˇã_øndgí_t
 (
øndgí_t
* 
øndgí
)

308 : 
	`_ty≥
(
USE_THREAD_LOCAL
),

309 
	`_ˇŒî_øndgí
(),

310 
	$_thªad_loˇl_øndgí
(
øndgí
)

312 
	}
}

314 
	$¥ediˇã_øndgí_t
 (c⁄° * 
ˇŒî_èg
)

315 : 
	`_ty≥
(
USE_CALLER
),

316 
	`_ˇŒî_øndgí
(
	`RSHash
(
ˇŒî_èg
, 
	`°æí
(caller_tag))),

317 
	$_thªad_loˇl_øndgí
(
NULL
)

319 
	}
}

321 
	gpublic
:

323 
øndgí_t
* 
	$øndgí
() {

324 
_ty≥
) {

325 
USE_THREAD_LOCAL
:

326 
	`as£π
(
_thªad_loˇl_øndgí
 !
NULL
);

327  
_thªad_loˇl_øndgí
;

328 
USE_CALLER
:

329  &
_ˇŒî_øndgí
;

331 
	`as£π
(0);

333 
	}
}

335 
	$ønd
() {

336  
	`øndgí
()->
	`ønd
();

337 
	}
}

339 
	$ønd
(
n
) {

340  
	`øndgí
()->
	`ønd
(
n
);

341 
	}
}

343 
¥ediˇã_øndgí_t
 
acquúe
(c⁄° * 
ˇŒî_èg
);

353 
	#ACQUIRE_PREDICATE_RANDGEN
(
lvÆ
) \

354 
¥ediˇã_øndgí_t
 
lvÆ
ıªdiˇã_øndgí_t::
	`acquúe
(
__FUNCTION__
)

	)

358 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/common/process_query.h

24 #i‚de‡
__QPIPE_PROCESS_QUERY_H


25 
	#__QPIPE_PROCESS_QUERY_H


	)

27 
	~"qpùe/comm⁄/¥o˚ss_tu∂e.h
"

29 
ENTER_NAMESPACE
(
qpùe
);

31 
¥o˚ss_quîy
(
∑ckë_t
* 
roŸ
, 
¥o˚ss_tu∂e_t
& 
±
);

33 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/common/process_tuple.h

32 #i‚de‡
__QPIPE_PROCESS_TUPLE_H


33 
	#__QPIPE_PROCESS_TUPLE_H


	)

35 
	~"qpùe/c‹e/tu∂e.h
"

36 
	~"qpùe/c‹e/∑ckë.h
"

39 
ENTER_NAMESPACE
(
qpùe
);

42 ˛as†
	c¥o˚ss_tu∂e_t
 {

43 
	mpublic
:

44 
vútuÆ
 
	$begö
() { }

45 
vútuÆ
 
	`¥o˚ss
(c⁄° 
tu∂e_t
&)=0;

46 
vútuÆ
 
	$íd
(Ë{ 
	}
}

47 
	gvútuÆ
 ~
	$¥o˚ss_tu∂e_t
(Ë{ 
	}
}

51 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core.h

24 #i‚de‡
__QPIPE_CORE_H


25 
	#__QPIPE_CORE_H


	)

27 
	~"qpùe/c‹e/˝u_böd.h
"

28 
	~"qpùe/c‹e/di•©chî.h
"

29 
	~"qpùe/c‹e/fun˘‹s.h
"

30 
	~"qpùe/c‹e/∑ckë.h
"

31 
	~"qpùe/c‹e/°age.h
"

32 
	~"qpùe/c‹e/°age_c⁄èöî.h
"

33 
	~"qpùe/c‹e/tu∂e.h
"

34 
	~"qpùe/c‹e/tu∂e_fifo.h
"

	@include/qpipe/core/cpu_bind.h

24 #i‚de‡
__CPU_BIND_H


25 
	#__CPU_BIND_H


	)

27 
	~"utû.h
"

29 
ENTER_NAMESPACE
(
qpùe
);

31 
˛ass
 
	g∑ckë_t
;

33 
	s˝u_böd
 {

34 
	mn›
;

35 
	mpublic
:

38 
vútuÆ
 
böd
(
∑ckë_t
* 
∑ckë
)=0;

39 
	mvútuÆ
 ~
˝u_böd
() { }

42 
	g˝u_böd
::
n›
 : 
˝u_böd
 {

43 
vútuÆ
 
böd
(
∑ckë_t
*) {

48 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/dispatcher.h

24 #i‚de‡
__QPIPE_DISPATCHER_H


25 
	#__QPIPE_DISPATCHER_H


	)

27 
	~"qpùe/c‹e/tu∂e.h
"

28 
	~"qpùe/c‹e/∑ckë.h
"

29 
	~"qpùe/c‹e/°age_c⁄èöî.h
"

30 
	~"utû/ªsour˚_de˛¨e.h
"

31 
	~"utû/ªsour˚_ªÀa£r.h
"

32 
	~<m≠
>

34 
usög
 
	g°d
::
m≠
;

37 
ENTER_NAMESPACE
(
qpùe
);

40 
DEFINE_EXCEPTION
(
Di•©chîEx˚±i⁄
);

45 
	#TRACE_RESOURCE_RELEASE
 0

	)

46 c⁄° 
	gDISPATCHER_NUM_STATIC_HASH_MAP_BUCKETS
 = 64;

62 ˛as†
	cdi•©chî_t
 {

64 
	m¥Ÿe˘ed
:

68 
m≠
<
c_°r
, 
	m°age_c⁄èöî_t
*> 
	m_scdú
;

69 
	mm≠
<
	mc_°r
, 
	mboﬁ
> 
	m_o•dú
;

72 
di•©chî_t
();

73 ~
di•©chî_t
();

77 
_ªgi°î_°age_c⁄èöî
(c⁄° 
c_°r
& 
∑ckë_ty≥
,

78 
°age_c⁄èöî_t
* 
sc
, 
boﬁ
 
o•
);

79 
_di•©ch_∑ckë
(
∑ckë_t
* 
∑ckë
);

80 
_ª£rve_w‹kîs
(c⁄° 
c_°r
& 
ty≥
, 
n
);

81 
_uƒe£rve_w‹kîs
(c⁄° 
c_°r
& 
ty≥
, 
n
);

82 
boﬁ
 
_is_o•_íabÀd_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
);

85 
_£t_o•_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
, 
boﬁ
 
o•_swôch
);

88 
±hªad_muãx_t
 
	m_ö°™˚_lock
;

89 
di•©chî_t
* 
	m_ö°™˚
;

92 
di•©chî_t
* 
	$ö°™˚
() {

94 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_ö°™˚_lock
);

95 i‡–
_ö°™˚
 =
NULL
 )

96 
_ö°™˚
 = 
√w
 
	`di•©chî_t
();

102  
_ö°™˚
;

106 
public
:

110 
˛ass
 
w‹kî_ª£rvî_t
;

111 
˛ass
 
w‹kî_ªÀa£r_t
;

115 
	$öô
() {

116 
_ö°™˚
 = 
√w
 
	`di•©chî_t
();

117 
	}
}

120 
	$ªgi°î_°age_c⁄èöî
(c⁄° 
c_°r
 &
∑ckë_ty≥
,

121 
°age_c⁄èöî_t
* 
sc
, 
boﬁ
 
o•_íabÀd
) {

122 
	`ö°™˚
()->
	`_ªgi°î_°age_c⁄èöî
(
∑ckë_ty≥
, 
sc
, 
o•_íabÀd
);

123 
	}
}

125 
boﬁ
 
	$is_o•_íabÀd_f‹_ty≥
(c⁄° 
c_°r
 &
∑ckë_ty≥
) {

126  
	`ö°™˚
()->
	`_is_o•_íabÀd_f‹_ty≥
(
∑ckë_ty≥
);

127 
	}
}

132 
	gãm∂©e
<ãm∂©e<
	g˛ass
> 
˛ass
 
	gGu¨d
>

133 
di•©ch_∑ckë
(
Gu¨d
<
∑ckë_t
> &
∑ckë
) {

134 
di•©ch_∑ckë
(
∑ckë
.
ªÀa£
());

136 
	$di•©ch_∑ckë
(
∑ckë_t
* 
∑ckë
) {

137 
	`ö°™˚
()->
	`_di•©ch_∑ckë
(
∑ckë
);

138 
	}
}

141 
	$£t_o•_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
, 
boﬁ
 
o•_swôch
) {

142  
	`ö°™˚
()->
	`_£t_o•_f‹_ty≥
(
∑ckë_ty≥
, 
o•_swôch
);

143 
	}
}

146 
w‹kî_ª£rvî_t
* 
ª£rvî_acquúe
();

147 
ª£rvî_ªÀa£
(
w‹kî_ª£rvî_t
* 
wr
);

148 
w‹kî_ªÀa£r_t
* 
ªÀa£r_acquúe
();

149 
ªÀa£r_ªÀa£
(
w‹kî_ªÀa£r_t
* 
wr
);

154 ˛as†
	cdi•©chî_t
::
w‹kî_ª£rvî_t
 : 
public
 
ªsour˚_de˛¨e_t


157 
¥iv©e
:

159 
di•©chî_t
* 
_di•©chî
;

160 
	mm≠
<
	mc_°r
, > 
	m_w‹kî_√eds
;

162 
	mpublic
:

164 
	$w‹kî_ª£rvî_t
 (
di•©chî_t
* 
di•©chî
)

165 : 
	$_di•©chî
(
di•©chî
)

169 
vútuÆ
 
	$de˛¨e
(c⁄° 
c_°r
& 
«me
, 
cou¡
) {

170 
cuº_√eds
 = 
_w‹kî_√eds
[
«me
];

171 
_w‹kî_√eds
[
«me
] = 
cuº_√eds
 + 
cou¡
;

172 
	}
}

174 
acquúe_ªsour˚s
();

179 
˛ass
 
	gdi•©chî_t
::
w‹kî_ªÀa£r_t
 : 
public
 
ªsour˚_de˛¨e_t
,Öubli¯
	gªsour˚_ªÀa£r_t


182 
	g¥iv©e
:

184 
di•©chî_t
* 
_di•©chî
;

185 
	gm≠
<
	gc_°r
, > 
	g_w‹kî_√eds
;

187 
	gpublic
:

189 
w‹kî_ªÀa£r_t
 (
di•©chî_t
* 
di•©chî
)

190 : 
_di•©chî
(
di•©chî
)

194 
vútuÆ
 
de˛¨e
(c⁄° 
c_°r
& 
«me
, 
cou¡
) {

195 
	gcuº_√eds
 = 
_w‹kî_√eds
[
«me
];

196 
	g_w‹kî_√eds
[
«me
] = 
cuº_√eds
 + 
cou¡
;

199 
ªÀa£_ªsour˚s
() {

200 
	gm≠
<
	gc_°r
, >::
ôî©‹
 
ô
;

201 
	gô
 = 
_w‹kî_√eds
.
begö
(); ià!_w‹kî_√eds.
íd
(); ++it) {

202 
	gn
 = 
ô
->
£c⁄d
;

203 i‡(
	gn
 > 0) {

204 
TRACE
(
TRACE_RESOURCE_RELEASE
 & 
TRACE_ALWAYS
,

205 "Rñósög %d %†w‹kîs\n", 
n
, 
ô
->
fú°
.
d©a
());

206 
	g_di•©chî
->
_uƒe£rve_w‹kîs
(
ô
->
fú°
, 
n
);

213 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/functors.h

24 #i‚de‡
__QPIPE_FUNCTORS_H


25 
	#__QPIPE_FUNCTORS_H


	)

27 
	~"qpùe/c‹e/tu∂e.h
"

28 
	~<Æg‹ôhm
>

32 
ENTER_NAMESPACE
(
qpùe
);

35 
	#ALIGNED
 
	`__©åibuã__
 ((
Æig√d
))

	)

44 ˛as†
	ctu∂e_fûãr_t
 {

46 
	m¥iv©e
:

48 
size_t
 
_tu∂e_size
;

50 
	mpublic
:

53 
size_t
 
	$öput_tu∂e_size
(Ë{  
_tu∂e_size
; }

71 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &) {

72  
åue
;

73 
	}
}

92 
vútuÆ
 
	$¥oje˘
(
tu∂e_t
 &
de°
, c⁄°Åu∂e_à&
§c
) {

93 
de°
.
	`assign
(
§c
);

94 
	}
}

98 
vútuÆ
 
tu∂e_fûãr_t
* 
	$˛⁄e
() const=0;

101 
vútuÆ
 
c_°r
 
	$to_°rög
() const=0;

104 
	$tu∂e_fûãr_t
(
size_t
 
öput_tu∂e_size
)

105 : 
	$_tu∂e_size
(
öput_tu∂e_size
)

107 
	}
}

110 
vútuÆ
 ~
	$tu∂e_fûãr_t
(Ë{ 
	}
}

116 
	gåivül_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

118 
vútuÆ
 
tu∂e_fûãr_t
* 
˛⁄e
() const {

119  
√w
 
åivül_fûãr_t
(*
this
);

122 
vútuÆ
 
c_°r
 
to_°rög
() const {

124  
	gc_°r
::
EMPTY_STRING
;

127 
åivül_fûãr_t
(
size_t
 
öput_tu∂e_size
)

128 : 
tu∂e_fûãr_t
(
öput_tu∂e_size
)

143 
	shöt_tu∂e_∑ú_t
 {

144 
	mhöt
;

145 *
	md©a
;

147 
höt_tu∂e_∑ú_t
()

148 : 
höt
(0), 
d©a
(
NULL
)

151 
höt_tu∂e_∑ú_t
(
h
, *
d
)

152 : 
höt
(
h
), 
d©a
(
d
)

164 
	skey_com∑ª_t
 {

175 
vútuÆ
 
›î©‹
()(c⁄° * 
	mkey1
, c⁄° * 
	mkey2
) const=0;

176 
vútuÆ
 
key_com∑ª_t
* 
˛⁄e
() const=0;

178 
	mvútuÆ
 ~
key_com∑ª_t
() { }

188 ˛as†
	ckey_exåa˘‹_t
 {

190 
	m¥iv©e
:

192 
size_t
 
_key_size
;

193 
size_t
 
	m_key_off£t
;

194 
	mpublic
:

195 
key_exåa˘‹_t
(
size_t
 
key_size
=(), size_à
key_off£t
=0)

196 : 
_key_size
(
key_size
), 
	$_key_off£t
(
key_off£t
)

199 
size_t
 
	$key_size
(Ëc⁄° {  
_key_size
; 
	}
}

200 
size_t
 
	$key_off£t
(Ëc⁄° {  
_key_off£t
; 
	}
}

206 c⁄° * 
	$exåa˘_key
(c⁄° 
tu∂e_t
 &
tu∂e
) const {

207  
	`exåa˘_key
(
tu∂e
.
d©a
);

208 
	}
}

209 * 
	$exåa˘_key
(
tu∂e_t
 &
tu∂e
) {

210  
	`exåa˘_key
(
tu∂e
.
d©a
);

211 
	}
}

220 c⁄° * 
	$exåa˘_key
(c⁄° * 
tu∂e_d©a
) const {

221  
tu∂e_d©a
 + 
	`key_off£t
();

222 
	}
}

224 * 
	$exåa˘_key
(* 
tu∂e_d©a
) {

225  
tu∂e_d©a
 + 
	`key_off£t
();

226 
	}
}

234 
	$exåa˘_höt
(c⁄° 
tu∂e_t
 &
tu∂e
) const {

235  
	`exåa˘_höt
(
	`exåa˘_key
(
tu∂e
));

236 
	}
}

255 
vútuÆ
 
	$exåa˘_höt
(c⁄° * 
key
) const {

257 if(
	`key_size
() > ())

261 
höt
 = 0;

262 
	`mem˝y
(&
höt
, 
key
, 
	`key_size
());

263  
höt
;

264 
	}
}

268 
vútuÆ
 
key_exåa˘‹_t
* 
	$˛⁄e
() const=0;

271 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

272  
	`c_°r
("key(%zd, %zd)", 
	`key_size
(), 
	`key_off£t
());

273 
	}
}

276 
	gvútuÆ
 ~
	$key_exåa˘‹_t
(Ë{ 
	}
}

285 
	gdeÁu…_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

286 
deÁu…_key_exåa˘‹_t
(
size_t
 
key_size
=(), size_à
key_off£t
=0)

287 : 
key_exåa˘‹_t
(
key_size
, 
key_off£t
)

290 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

291 
	gªsu…
 = 0;

292 
mem˝y
(&
ªsu…
, 
key
, 
°d
::
mö
((), 
key_size
()));

293  
	gªsu…
;

296 
vútuÆ
 
deÁu…_key_exåa˘‹_t
* 
˛⁄e
() const {

297  
√w
 
deÁu…_key_exåa˘‹_t
(*
this
);

304 
	stu∂e_com∑øt‹_t
 {

306 
key_exåa˘‹_t
* 
	m_exåa˘
;

307 
key_com∑ª_t
* 
	m_com∑ª
;

310 
tu∂e_com∑øt‹_t
(
key_exåa˘‹_t
* 
exåa˘
, 
key_com∑ª_t
* 
com∑ª
)

311 : 
_exåa˘
(
exåa˘
), 
_com∑ª
(
com∑ª
)

316 
›î©‹
()(c⁄° 
	mhöt_tu∂e_∑ú_t
 &
	ma
, c⁄° höt_tu∂e_∑ú_à&
	mb
) const {

317 
	mdiff
 = 
a
.
höt
 - 
b
.hint;

318 if(
	m_exåa˘
->
key_size
(Ë<(Ë|| 
diff
)

319  
diff
;

321 c⁄° * 
	makey
 = 
_exåa˘
->
exåa˘_key
(
a
.
d©a
);

322 c⁄° * 
	mbkey
 = 
_exåa˘
->
exåa˘_key
(
b
.
d©a
);

323  (*
	m_com∑ª
)(
	makey
, 
	mbkey
);

329 
	stu∂e_Àss_t
 {

331 
tu∂e_com∑øt‹_t
 
	m_com∑ª
;

333 
tu∂e_Àss_t
(
key_exåa˘‹_t
* 
e
, 
key_com∑ª_t
 *
c
)

334 : 
_com∑ª
(
e
, 
c
)

338 
boﬁ
 
›î©‹
()(c⁄° 
	mhöt_tu∂e_∑ú_t
 &
	ma
, c⁄° höt_tu∂e_∑ú_à&
	mb
) const {

339  
_com∑ª
(
a
, 
b
) < 0;

351 ˛as†
	ctu∂e_joö_t
 {

356 
size_t
 
	m_…_tu∂e_size
;

357 
size_t
 
	m_…_key_off£t
;

358 
size_t
 
	m_π_tu∂e_size
;

359 
size_t
 
	m_π_key_off£t
;

361 
size_t
 
	m_key_size
;

364 
size_t
 
	m_out_tu∂e_size
;

370 
	mpublic
:

372 
size_t
 
	$À·_tu∂e_size
(Ë{  
_…_tu∂e_size
; }

373 
size_t
 
	$À·_key_off£t
(Ë{  
_…_key_off£t
; 
	}
}

374 
size_t
 
	$right_tu∂e_size
(Ë{  
_π_tu∂e_size
; 
	}
}

375 
size_t
 
	$right_key_off£t
(Ë{  
_π_key_off£t
; 
	}
}

376 
size_t
 
	$key_size
(Ë{  
_key_size
; 
	}
}

377 
size_t
 
	$ouçut_tu∂e_size
(Ë{  
_out_tu∂e_size
; 
	}
}

379 
	$tu∂e_joö_t
(
size_t
 
…_tu∂e_size
,

380 
size_t
 
…_key_off£t
,

381 
size_t
 
π_tu∂e_size
,

382 
size_t
 
π_key_off£t
,

383 
size_t
 
k_size
,

384 
size_t
 
out_tu∂e_size
)

385 : 
	`_…_tu∂e_size
(
…_tu∂e_size
)

386 , 
	`_…_key_off£t
(
…_key_off£t
)

387 , 
	`_π_tu∂e_size
(
π_tu∂e_size
)

388 , 
	`_π_key_off£t
(
π_key_off£t
)

389 , 
	`_key_size
(
k_size
)

390 , 
	$_out_tu∂e_size
(
out_tu∂e_size
)

392 
	}
}

394 
	$tu∂e_joö_t
(
tu∂e_joö_t
 c⁄° &
Ÿhî
)

395 : 
	`_…_tu∂e_size
(
Ÿhî
.
_…_tu∂e_size
)

396 , 
	`_…_key_off£t
(
Ÿhî
.
_…_key_off£t
)

397 , 
	`_π_tu∂e_size
(
Ÿhî
.
_π_tu∂e_size
)

398 , 
	`_π_key_off£t
(
Ÿhî
.
_π_key_off£t
)

399 , 
	`_key_size
(
Ÿhî
.
_key_size
)

400 , 
	$_out_tu∂e_size
(
Ÿhî
.
_out_tu∂e_size
)

402 
	}
}

404 c⁄° * 
	$À·_key_byãs
(c⁄° * 
tup_d©a
) {

405  &
tup_d©a
[
	`À·_key_off£t
()];

406 
	}
}

408 c⁄° * 
	$right_key_byãs
(c⁄° * 
tup_d©a
) {

409  &
tup_d©a
[
	`right_key_off£t
()];

410 
	}
}

412 c⁄° * 
	$À·_key
(c⁄° 
tu∂e_t
& 
tup
) {

413  
	`À·_key_byãs
((c⁄° *)
tup
.
d©a
);

414 
	}
}

416 c⁄° * 
	$right_key
(c⁄° 
tu∂e_t
& 
tup
) {

417  
	`right_key_byãs
((c⁄° *)
tup
.
d©a
);

418 
	}
}

434 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

435 c⁄° 
tu∂e_t
 &
À·
,

436 c⁄° 
tu∂e_t
 &
right
)=0;

453 
vútuÆ
 
	$À·_ouãr_joö
(
tu∂e_t
 &,

454 c⁄° 
tu∂e_t
 &) {

457 
	`as£π
(
Ál£
);

458 
	}
}

460 
vútuÆ
 
c_°r
 
	$to_°rög
() const=0;

463 
vútuÆ
 ~
	$tu∂e_joö_t
(Ë{ 
	}
}

472 ˛as†
	ctu∂e_aggªg©e_t
 {

473 
size_t
 
	m_tu∂e_size
;

474 
	mpublic
:

475 
	$tu∂e_aggªg©e_t
(
size_t
 
tu∂e_size
)

476 : 
	$_tu∂e_size
(
tu∂e_size
)

485 
size_t
 
	$tu∂e_size
(Ë{  
_tu∂e_size
; 
	}
}

487 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
()=0;

497 
vútuÆ
 
	$öô
(* 
agg_d©a
) {

498 
	`mem£t
(
agg_d©a
, 0, 
	`tu∂e_size
());

499 
	}
}

507 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
tu∂e
)=0;

517 
vútuÆ
 
	$mîge
(*, const *) {

518 
	`as£π
(
Ál£
);

519 
	}
}

530 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
)=0;

533 
vútuÆ
 
tu∂e_aggªg©e_t
* 
	$˛⁄e
() const=0;

535 
vútuÆ
 
c_°r
 
	$to_°rög
() const=0;

537 
vútuÆ
 ~
	$tu∂e_aggªg©e_t
(Ë{ 
	}
}

551 ˛as†
	ctu∂e_sõve_t
 {

553 
size_t
 
	m_tu∂e_size
;

555 
	mpublic
:

556 
	$tu∂e_sõve_t
(
size_t
 
tu∂e_size
)

557 : 
	$_tu∂e_size
(
tu∂e_size
)

565 
size_t
 
	$tu∂e_size
(Ë{  
_tu∂e_size
; 
	}
}

571 
vútuÆ
 
boﬁ
 
∑ss
(
tu∂e_t
& 
de°
, c⁄°Åu∂e_à&
§c
)=0;

577 
vútuÆ
 
boﬁ
 
	$Êush
(
tu∂e_t
&) {

578  
Ál£
;

579 
	}
}

581 
vútuÆ
 
tu∂e_sõve_t
* 
	$˛⁄e
() const=0;

583 
vútuÆ
 
c_°r
 
	$to_°rög
() const=0;

585 
vútuÆ
 ~
	$tu∂e_sõve_t
(Ë{ 
	}
}

590 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/packet.h

24 #i‚de‡
__QPIPE_PACKET_H


25 
	#__QPIPE_PACKET_H


	)

27 
	~<li°
>

28 
	~"qpùe/c‹e/tu∂e.h
"

29 
	~"qpùe/c‹e/tu∂e_fifo.h
"

30 
	~"qpùe/c‹e/fun˘‹s.h
"

31 
	~"qpùe/c‹e/quîy_°©e.h
"

32 
	~"utû/ªsour˚_de˛¨e.h
"

34 
usög
 
	g°d
::
li°
;

37 
ENTER_NAMESPACE
(
qpùe
);

40 íum {
	mOSP_NONE
, 
	mOSP_FULL
} 
	to•_pﬁicy_t
;

41 
o•_pﬁicy_t
 
o•_globÆ_pﬁicy
;

44 
boﬁ
 
is_o•_íabÀd_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
);

47 
£t_o•_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
, 
boﬁ
 
o•_swôch
);

53 
˛ass
 
	g∑ckë_t
;

54 
	gli°
<
	t∑ckë_t
*> 
	t∑ckë_li°_t
;

56 
	squîy_∂™
 {

57 
c_°r
 
	ma˘i⁄
;

58 
c_°r
 
	mfûãr
;

59 
quîy_∂™
 c⁄°** 
	mchûd_∂™s
;

60 
	mchûd_cou¡
;

62 
quîy_∂™
(c⁄° 
c_°r
 &
a
, c⁄° c_°∏&
f
, quîy_∂™ c⁄°** 
chûdªn
, 
cou¡
)

63 : 
a˘i⁄
(
a
), 
fûãr
(
f
), 
chûd_∂™s
(
chûdªn
), 
chûd_cou¡
(
cou¡
)

83 ˛as†
	c∑ckë_t


86 
	m¥Ÿe˘ed
:

89 
quîy_∂™
* 
_∂™
;

92 
quîy_°©e_t
* 
	m_q°©e
;

95 
boﬁ
 
	m_mîge_íabÀd
;

99 
boﬁ
 
	m_uƒe£rve_⁄_com∂ëi⁄
;

102 
boﬁ
 
	$is_com∑tibÀ
(
quîy_∂™
 c⁄°* 
a
, quîy_∂™ c⁄°* 
b
) {

103 if(!
a
 || !
b
 || 
	`°rcmp
◊->
a˘i⁄
, b->action))

104  
Ál£
;

106 
	`as£π
(
a
->
chûd_cou¡
 =
b
->child_count);

107 
i
=0; i < 
a
->
chûd_cou¡
; i++) {

108 
quîy_∂™
 c⁄°* 
ˇ
 = 
a
->
chûd_∂™s
[
i
];

109 
quîy_∂™
 c⁄°* 
cb
 = 
b
->
chûd_∂™s
[
i
];

110 if(!
ˇ
 || !
cb
)

111  
Ál£
;

112 if(
	`°rcmp
(
ˇ
->
fûãr
, 
cb
->fûãrË|| !
	`is_com∑tibÀ
(ca, cb))

113  
Ál£
;

116  
åue
;

119 
boﬁ
 
	$is_com∑tibÀ
(
∑ckë_t
* 
Ÿhî
) {

121 i‡(
o•_globÆ_pﬁicy
 =
OSP_NONE
)

122  
Ál£
;

127 i‡(!
	`is_o•_íabÀd_f‹_ty≥
(
_∑ckë_ty≥
))

128  
Ál£
;

130  
	`is_com∑tibÀ
(
	`∂™
(), 
Ÿhî
->plan());

131 
	}
}

134 
	gpublic
:

136 
c_°r
 
_∑ckë_id
;

137 
c_°r
 
	g_∑ckë_ty≥
;

139 
	g¥iv©e
:

140 
gu¨d
<
tu∂e_fifo
> 
_ouçut_buf„r
;

142 
	gpublic
:

145 
tu∂e_fûãr_t
* 
_ouçut_fûãr
;

151 
	g_√xt_tu∂e_⁄_mîge
;

159 
	g_√xt_tu∂e_√eded
;

163 
∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

164 c⁄° 
c_°r
 &
∑ckë_ty≥
,

165 
tu∂e_fifo
* 
ouçut_buf„r
,

166 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

167 
quîy_∂™
* 
∂™
,

168 
boﬁ
 
mîge_íabÀd
,

169 
boﬁ
 
uƒe£rve_⁄_com∂ëi⁄
);

172 
	gvútuÆ
 ~
∑ckë_t
();

174 
tu∂e_fifo
* 
	$ªÀa£_ouçut_buf„r
() {

175  
_ouçut_buf„r
.
	`ªÀa£
();

176 
	}
}

178 
tu∂e_fifo
* 
	$ouçut_buf„r
() {

179  
_ouçut_buf„r
;

180 
	}
}

189 
boﬁ
 
	$is_mîge_íabÀd
() {

191 i‡(
o•_globÆ_pﬁicy
 =
OSP_NONE
)

192  
Ál£
;

197 i‡(!
	`is_o•_íabÀd_f‹_ty≥
(
_∑ckë_ty≥
))

198  
Ál£
;

200  
_mîge_íabÀd
;

201 
	}
}

203 
quîy_∂™
 c⁄°* 
	$∂™
() const {

204  
_∂™
;

205 
	}
}

214 
boﬁ
 
	$is_mîgóbÀ
(
∑ckë_t
* 
Ÿhî
) {

215  
	`is_mîge_íabÀd
(Ë&& 
	`is_com∑tibÀ
(
Ÿhî
);

216 
	}
}

219 
	$dißbÀ_mîgög
() {

220 
_mîge_íabÀd
 = 
Ál£
;

221 
	}
}

224 
	$assign_quîy_°©e
(
quîy_°©e_t
* 
q°©e
) {

225 
_q°©e
 = 
q°©e
;

226 
	}
}

228 
quîy_°©e_t
* 
	$gë_quîy_°©e
() {

229  
_q°©e
;

230 
	}
}

232 
boﬁ
 
	$uƒe£rve_w‹kî_⁄_com∂ëi⁄
() {

233  
_uƒe£rve_⁄_com∂ëi⁄
;

234 
	}
}

236 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
)=0;

240 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/query_state.h

24 #i‚de‡
__QUERY_STATE_H


25 
	#__QUERY_STATE_H


	)

27 
	~"utû.h
"

30 
ENTER_NAMESPACE
(
qpùe
);

33 
˛ass
 
	g∑ckë_t
;

34 
	squîy_°©e_t
 {

38 
	m¥Ÿe˘ed
:

39 
quîy_°©e_t
() { }

40 
vútuÆ
 ~
quîy_°©e_t
() { }

42 
public
:

48 
vútuÆ
 
ªböd_£lf
(
∑ckë_t
*)=0;

53 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/stage.h

24 #i‚de‡
__QPIPE_STAGE_H


25 
	#__QPIPE_STAGE_H


	)

27 
	~"qpùe/c‹e/tu∂e.h
"

28 
	~"qpùe/c‹e/∑ckë.h
"

29 
	~"utû.h
"

32 
ENTER_NAMESPACE
(
qpùe
);

42 ˛as†
	c°age_t
 {

45 
	mpublic
:

53 
	sad≠t‹_t
 {

55 
¥iv©e
:

57 
gu¨d
<
∑ge
> 
_∑ge
;

59 
	mpublic
:

61 
vútuÆ
 c⁄° 
c_°r
 &
gë_c⁄èöî_«me
()=0;

62 
vútuÆ
 
∑ckë_t
* 
gë_∑ckë
()=0;

63 
vútuÆ
 
ouçut
(
∑ge
* 
p
)=0;

64 
vútuÆ
 
°›_ac˚±ög_∑ckës
()=0;

65 
vútuÆ
 
boﬁ
 
check_f‹_ˇn˚Œ©i⁄
()=0;

78 
ouçut
(c⁄° 
tu∂e_t
 &
tu∂e
) {

79 
as£π
(!
_∑ge
->
fuŒ
());

80 
	m_∑ge
->
≠≥nd_tu∂e
(
tu∂e
);

81 if(
	m_∑ge
->
fuŒ
()) {

82 
ouçut
(
_∑ge
);

83 
	m_∑ge
->
˛ór
();

87 
ad≠t‹_t
(
∑ge
* 
p
)

88 : 
_∑ge
(
p
)

90 
as£π
(
_∑ge
);

93 
	mvútuÆ
 ~
ad≠t‹_t
() { }

95 
	m¥Ÿe˘ed
:

102 
Êush
() {

103 if(!
_∑ge
->
em±y
())

104 
ouçut
(
_∑ge
);

110 
	g¥Ÿe˘ed
:

112 
ad≠t‹_t
* 
_ad≠t‹
;

114 
vútuÆ
 
¥o˚ss_∑ckë
()=0;

116 
	gpublic
:

118 
	$°age_t
()

119 : 
	$_ad≠t‹
(
NULL
)

122 
	}
}

124 
vútuÆ
 ~
	$°age_t
(Ë{ 
	}
}

127 
	$öô
(
ad≠t‹_t
* 
ad≠t‹
) {

128 
_ad≠t‹
 = 
ad≠t‹
;

129 
	}
}

141 
	$¥o˚ss
() {

142 
	`as£π
(
_ad≠t‹
 !
NULL
);

146 
∑ckë_t
* 
∑ckë
 = 
_ad≠t‹
->
	`gë_∑ckë
();

147 
quîy_°©e_t
* 
q°©e
 = 
∑ckë
->
	`gë_quîy_°©e
();

148 i‡(
q°©e
 !
NULL
)

150 
q°©e
->
	`ªböd_£lf
(
∑ckë
);

152 
	`¥o˚ss_∑ckë
();

153 
	}
}

158 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/stage_container.h

24 #i‚de‡
__QPIPE_STAGE_CONTAINTER_H


25 
	#__QPIPE_STAGE_CONTAINTER_H


	)

27 
	~"utû.h
"

28 
	~"qpùe/c‹e/∑ckë.h
"

29 
	~"qpùe/c‹e/°age.h
"

31 
usög
 
	g°d
::
li°
;

33 
ENTER_NAMESPACE
(
qpùe
);

38 
	g°age_Á˘‹y_t
;

40 ˛as†
	c°age_c⁄èöî_t
 {

42 
	mpublic
:

44 c⁄° 
NEXT_TUPLE_UNINITIALIZED
;

45 c⁄° 
	mNEXT_TUPLE_INITIAL_VALUE
;

47 
	emîge_t
 {

48 
	mMERGE_FAILED
,

49 
	mMERGE_SUCCESS_HOLD_RESOURCES
,

50 
	mMERGE_SUCCESS_RELEASE_RESOURCES


53 
	g¥Ÿe˘ed
:

55 
˛ass
 
°age_ad≠t‹_t
;

56 
	gli°
 <
	t∑ckë_li°_t
*> 
	tC⁄èöîQueue
;

60 
debug_muãx_t
 
	g_c⁄èöî_lock
;

61 
±hªad_c⁄d_t
 
	g_c⁄èöî_queue_n⁄em±y
;

63 
c_°r
 
	g_c⁄èöî_«me
;

64 
C⁄èöîQueue
 
	g_c⁄èöî_queue
;

65 
	gli°
 <
	g°age_ad≠t‹_t
*> 
	g_c⁄èöî_cuºít_°ages
;

67 
°age_Á˘‹y_t
* 
	g_°age_makî
;

71 
c⁄èöî_queue_íqueue_no_mîge
(
∑ckë_li°_t
* 
∑ckës
);

72 
c⁄èöî_queue_íqueue_no_mîge
(
∑ckë_t
* 
∑ckë
);

73 
∑ckë_li°_t
* 
c⁄èöî_queue_dequeue
();

74 
¸óã_w‹kî
();

77 
	gpublic
:

80 * 
°©ic_run_°age_wøµî
(
°age_t
* 
°age
,

81 
°age_ad≠t‹_t
* 
ad≠t‹
);

83 
°age_c⁄èöî_t
(c⁄° 
c_°r
 &
c⁄èöî_«me
, 
°age_Á˘‹y_t
* 
°age_makî
,

84 
a˘ive_cou¡
, 
max_cou¡
=-1);

86 ~
°age_c⁄èöî_t
();

88 c⁄° 
	gc_°r
 &
	$gë_«me
(){  
_c⁄èöî_«me
; 
	}
}

90 
íqueue
(
∑ckë_t
* 
∑ckë
);

92 
ª£rve
(
n
);

93 
uƒe£rve
(
n
);

95 
run
();

97 
	g¥iv©e
:

99 
_ª£rve
(
n
);

105 
thªad_poﬁ
 
	g_poﬁ
;

111 
	g_max_thªads
;

115 
	g_√xt_thªad
;

128 
ªsour˚_poﬁ_t
 
	g_Ω
;

133 ˛as†
	c°age_c⁄èöî_t
::
°age_ad≠t‹_t
 : 
public
 
°age_t
::
ad≠t‹_t
 {

135 
¥Ÿe˘ed
:

138 
±hªad_muãx_t
 
_°age_ad≠t‹_lock
;

140 
°age_c⁄èöî_t
* 
	m_c⁄èöî
;

142 
∑ckë_t
* 
	m_∑ckë
;

143 
∑ckë_li°_t
* 
	m_∑ckë_li°
;

145 
	m_√xt_tu∂e
;

146 
boﬁ
 
	m_°ûl_ac˚±ög_∑ckës
;

147 
boﬁ
 
	m_c⁄èös_œã_mîgî
;

151 
	mgu¨d
<
	m∑ge
> 
	mout_∑ge
;

155 vﬁ©ûê
boﬁ
 
	m_ˇn˚Œed
;

158 
	mpublic
:

160 
°age_ad≠t‹_t
(
°age_c⁄èöî_t
* 
c⁄èöî
,

161 
∑ckë_li°_t
* 
∑ckë_li°
,

162 
size_t
 
tu∂e_size
);

165 ~
	$°age_ad≠t‹_t
() {

167 
	`as£π
–
_∑ckë
 =
NULL
 );

170 
	`as£π
–
_∑ckë_li°
 =
NULL
 );

174 
vútuÆ
 c⁄° 
c_°r
 &
	$gë_c⁄èöî_«me
() {

175  
_c⁄èöî
->
	`gë_«me
();

176 
	}
}

179 
vútuÆ
 
∑ckë_t
* 
	$gë_∑ckë
() {

180  
_∑ckë
;

181 
	}
}

190 
vútuÆ
 
	$ouçut
(
∑ge
* 
p
) {

191 
	`ouçut_∑ge
(
p
);

192 
	}
}

195 
vútuÆ
 
	$°›_ac˚±ög_∑ckës
() {

196 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_°age_ad≠t‹_lock
);

197 
_°ûl_ac˚±ög_∑ckës
 = 
Ál£
;

198 
	}
}

201 
vútuÆ
 
boﬁ
 
	$check_f‹_ˇn˚Œ©i⁄
() {

202  
_ˇn˚Œed
;

203 
	}
}

206 
	g°age_c⁄èöî_t
::
mîge_t
 
åy_mîge
(
∑ckë_t
* 
∑ckë
);

207 
run_°age
(
°age_t
* 
°age
);

209 
	g¥Ÿe˘ed
:

211 
föish_∑ckë
(
∑ckë_t
* 
∑ckë
);

212 
˛ónup
();

213 
ab‹t_quîõs
();

215 
	g¥iv©e
:

217 
ouçut_∑ge
(
∑ge
* 
p
);

220 
	s°age_Á˘‹y_t
 {

221 
vútuÆ
 
°age_t
* 
¸óã_°age
()=0;

222 
	mvútuÆ
 ~
°age_Á˘‹y_t
() { }

239 
	gãm∂©e
<
˛ass
 
	gSTAGE
>

240 
	g°age_Á˘‹y
 : 
public
 
°age_Á˘‹y_t
 {

242 
vútuÆ
 
°age_t
* 
¸óã_°age
() {

243  
√w
 
STAGE
();

246 
	gvútuÆ
 ~
°age_Á˘‹y
() { }

249 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/tuple.h

32 #i‚de‡
__QPIPE_TUPLE_H


33 
	#__QPIPE_TUPLE_H


	)

36 
	~<ˇs£π
>

37 
	~<√w
>

39 
	~"utû.h
"

43 
ENTER_NAMESPACE
(
qpùe
);

49 c⁄° 
	gDEFAULT_BUFFER_PAGES
 = 100;

54 
£t_deÁu…_∑ge_size
(
size_t
 
∑ge_size
);

55 
size_t
 
gë_deÁu…_∑ge_size
();

72 ˛as†
	ctu∂e_t


74 
	mpublic
:

75 * 
d©a
;

76 
size_t
 
	msize
;

78 
	$tu∂e_t
() {

80 
	`öô
(
NULL
, 0);

83 
	$tu∂e_t
(* 
d
, 
size_t
 
s
) {

84 
	`öô
(
d
, 
s
);

85 
	}
}

98 
	$assign
(c⁄° 
tu∂e_t
 &
§c
) {

99 
	`as£π
(
size
 =
§c
.size);

100 
	`mem˝y
(
d©a
, 
§c
.d©a, 
size
);

101 
	}
}

103 
	g¥iv©e
:

113 
	$öô
(* 
d
, 
size_t
 
s
) {

114 
d©a
 = 
d
;

115 
size
 = 
s
;

116 
	}
}

121 ˛as†
	c∑ge_poﬁ


123 
size_t
 
	m_∑ge_size
;

125 
	mpublic
:

126 
	$∑ge_poﬁ
(
size_t
 
∑ge_size
)

127 : 
	$_∑ge_size
(
∑ge_size
)

131 
size_t
 
	$∑ge_size
() const {

132  
_∑ge_size
;

133 
	}
}

138 
vútuÆ
 * 
Æloc
()=0;

144 
vútuÆ
 
‰ì
(* 
∑ge
)=0;

147 
	gvútuÆ
 ~
	$∑ge_poﬁ
(Ë{ 
	}
}

156 
	gmÆloc_∑ge_poﬁ
 : 
∑ge_poﬁ


158 
¥iv©e
:

159 
mÆloc_∑ge_poﬁ
 
_ö°™˚
;

161 
	gpublic
:

162 
mÆloc_∑ge_poﬁ
 *
ö°™˚
() {

163  &
_ö°™˚
;

166 
mÆloc_∑ge_poﬁ
(
size_t
 
∑ge_size
 = 
gë_deÁu…_∑ge_size
())

167 : 
∑ge_poﬁ
(
∑ge_size
)

170 
vútuÆ
 * 
Æloc
() {

171 * 
±r
 = 
mÆloc
(
∑ge_size
());

172 if(!
	g±r
)

173 
throw
 
	g°d
::
bad_Æloc
();

175  
	g±r
;

177 
vútuÆ
 
‰ì
(* 
±r
) {

178 ::
‰ì
(
±r
);

183 
˛ass
 
	gtu∂e_fifo
;

193 ˛as†
	c∑ge


195 
∑ge_poﬁ
* 
	m_poﬁ
;

196 
size_t
 
	m_tu∂e_size
;

197 
size_t
 
	m_∑dded_size
;

198 
size_t
 
	m_‰ì_cou¡
;

199 
size_t
 
	m_íd_off£t
;

200 
	mpublic
:

201 
∑ge
* 
√xt
;

203 
	m¥iv©e
:

205 #ifde‡
__GCC


206 
_d©a_¨øy
[0];

207 * 
	$_d©a
(Ë{  
_d©a_¨øy
; }

209 * 
	$_d©a
(Ë{  (
∑ge
)+(*)
this
; 
	}
}

211 
	gpublic
:

217 
size_t
 
	$ˇ∑côy
(
size_t
 
∑ge_size
, size_à
tu∂e_size
) {

218  (
∑ge_size
 - (
∑ge
))/
tu∂e_size
;

219 
	}
}

221 
∑ge
* 
Æloc
(
size_t
 
tu∂e_size
, 
∑ge_poﬁ
* 
poﬁ
=
mÆloc_∑ge_poﬁ
::
	$ö°™˚
()) {

222  
	`√w
 (
poﬁ
->
	`Æloc
()Ë
	`∑ge
’oﬁ, 
tu∂e_size
);

223 
	}
}

225 
	$‰ì
() {

227 
_poﬁ
->
	`‰ì
(
this
);

228 
	}
}

230 
size_t
 
	$∑ge_size
() const {

231  
_poﬁ
->
	`∑ge_size
();

232 
	}
}

234 
size_t
 
	$tu∂e_size
() const {

235  
_tu∂e_size
;

236 
	}
}

245 
size_t
 
	$ˇ∑côy
() const {

246  
	`ˇ∑côy
(
	`∑ge_size
(), 
	`tu∂e_size
());

247 
	}
}

249 
size_t
 
	$tu∂e_cou¡
() const {

250  
_íd_off£t
/
	`tu∂e_size
();

251 
	}
}

257 
	$˛ór
() {

258 
_‰ì_cou¡
 = 
	`ˇ∑côy
();

259 
_íd_off£t
 = 0;

260 
	}
}

267 
boﬁ
 
	$em±y
() const {

268  
_íd_off£t
 == 0;

269 
	}
}

276 
boﬁ
 
	$fuŒ
() const {

277  
_‰ì_cou¡
 == 0;

278 
	}
}

286 
tu∂e_t
 
	$gë_tu∂e
(
size_t
 
ödex
) {

287  
	`tu∂e_t
(&
	`_d©a
()[
ödex
*
	`tu∂e_size
()],Åuple_size());

288 
	}
}

303 
boﬁ
 
ªad_fuŒ_∑ge
(
fd
);

316 
wrôe_fuŒ_∑ge
(
fd
);

331 
boﬁ
 
‰ód_fuŒ_∑ge
(
FILE
* 
fûe
);

344 
fwrôe_fuŒ_∑ge
(
FILE
 *
fûe
);

353 * 
	$Æloˇã
() {

354 
	`as£π
(!
	`fuŒ
());

355 *
ªsu…
 = &
	`_d©a
()[
_íd_off£t
];

356 
_íd_off£t
 +
	`tu∂e_size
();

357 
_‰ì_cou¡
--;

358  
ªsu…
;

359 
	}
}

373 
tu∂e_t
 
	$Æloˇã_tu∂e
() {

374  
	`tu∂e_t
(
	`Æloˇã
(), 
	`tu∂e_size
());

375 
	}
}

390 
	$≠≥nd_tu∂e
(c⁄° 
tu∂e_t
 &
tu∂e
) {

392 
	`Æloˇã_tu∂e
().
	`assign
(
tu∂e
);

393 
	}
}

400 ˛as†
	côî©‹
 {

402 
	g¥iv©e
:

403 
tu∂e_t
 
_cuºít
;

405 
	gpublic
:

407 
ôî©‹
()

408 : 
_cuºít
(
NULL
, 0)

412 
ôî©‹
(
∑ge
*Öage, 
size_t
 
off£t
)

413 : 
_cuºít
(
∑ge
->
_d©a
(Ë+ 
off£t
,

414 
∑ge
->
tu∂e_size
())

418 
ôî©‹
(
size_t
 
size
, * 
d©a
)

419 : 
_cuºít
(
d©a
, 
size
)

423 
boﬁ
 
	g›î©‹
 ==(c⁄° 
ôî©‹
& 
Ÿhî
) const {

424  
_cuºít
.
d©a
 =
Ÿhî
._current.data;

427 
boﬁ
 
	g›î©‹
 !=(c⁄° 
ôî©‹
& 
Ÿhî
) const {

428  !(*
this
 =
Ÿhî
);

431 
tu∂e_t
 
	g›î©‹
 *() {

432  
	g_cuºít
;

435 
tu∂e_t
 *
	g›î©‹
 ->() {

436  &
	g_cuºít
;

443 
tu∂e_t
 
adv™˚
() {

444 
tu∂e_t
 
	gªsu…
 = **
this
;

445 ++*
	gthis
;

446  
	gªsu…
;

449 
	gôî©‹
 &
	g›î©‹
 ++() {

450 
	g_cuºít
.
	gd©a
 +
_cuºít
.
size
;

451  *
	gthis
;

454 
ôî©‹
 
	g›î©‹
 ++() {

455 
ôî©‹
 
	gﬁd
 = *
this
;

456 ++*
	gthis
;

457  
	gﬁd
;

461 
ôî©‹
 
	$begö
() {

462  
	`ôî©‹
(
this
, 0);

463 
	}
}

465 
ôî©‹
 
	$íd
() {

466  
	`ôî©‹
(
this
, 
_íd_off£t
);

467 
	}
}

470 
	g¥iv©e
:

471 
	$∑ge
(
∑ge_poﬁ
* 
poﬁ
, 
size_t
 
tu∂e_size
)

472 : 
	`_poﬁ
(
poﬁ
),

473 
	`_tu∂e_size
(
tu∂e_size
),

474 
	$√xt
(
NULL
)

477 
	`ã°_Æignmít
(
	`_d©a
(), ());

478 
	`˛ór
();

479 
	}
}

484 
∑ge
(c⁄°Öagê&
Ÿhî
);

486 
	g∑ge
 &
	g›î©‹
 =(c⁄° 
∑ge
 &
Ÿhî
);

490 ~
∑ge
();

495 
EXIT_NAMESPACE
(
qpùe
);

504 
	gãm∂©e
 <>

505 
ölöe
 
	ggu¨d
<
	gqpùe
::
∑ge
>::
	$a˘i⁄
(
qpùe
::
∑ge
* 
±r
) {

506 
±r
->
	`‰ì
();

507 
	}
}

511 
ENTER_NAMESPACE
(
qpùe
);

521 ˛as†
	c∑ge_åash_°ack
 {

523 
	mgu¨d
<
	mqpùe
::
∑ge
> 
_hód
;

524 
	m_size
;

525 
	mpublic
:

526 
	$∑ge_åash_°ack
()

527 : 
	$_size
(0)

530 
	$add
(
qpùe
::
∑ge
* 
p
) {

531 
p
->
√xt
 = 
_hód
.
	`ªÀa£
();

532 
_hód
 = 
p
;

533 ++
_size
;

534 
	}
}

535 
	$˛ór
() {

537  ; 
_hód
; _hód = _hód->
√xt
);

538 
_size
 = 0;

539 
	}
}

540 
	$size
(Ë{  
_size
; 
	}
}

541 ~
	$∑ge_åash_°ack
() {

542 
	`˛ór
();

543 
	}
}

547 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/core/tuple_fifo.h

24 #i‚de‡
__QPIPE_TUPLE_FIFO_H


25 
	#__QPIPE_TUPLE_FIFO_H


	)

27 
	~"qpùe/c‹e/tu∂e.h
"

28 
	~<c°dio
>

29 
	~<ve˘‹
>

30 
	~<li°
>

31 
	~<uc⁄ãxt.h
>

33 
ENTER_NAMESPACE
(
qpùe
);

36 
DEFINE_EXCEPTION
(
Tîmö©edBuf„rEx˚±i⁄
);

39 
tu∂e_fifo_gíî©e_id
();

41 
	g°d
::
	tli°
<
	t∑ge
*> 
	t∑ge_li°
;

52 ˛as†
	ctu∂e_fifo
 {

54 
	m¥iv©e
:

58 ˛as†
	ctu∂e_fifo_°©e_t
 {

59 
public
:

60 
	e_tu∂e_fifo_°©e_t
 {

61 
INVALID
 = 0,

62 
	mIN_MEMORY
,

63 
	mIN_MEMORY_DONE_WRITING
,

64 
	mON_DISK
,

65 
	mON_DISK_DONE_WRITING
,

66 
	mTERMINATED


69 
	m¥iv©e
:

70 vﬁ©ûê
_tu∂e_fifo_°©e_t
 
_vÆue
;

72 
	mpublic
:

74 
tu∂e_fifo_°©e_t
 ()

75 : 
_vÆue
(
INVALID
)

79 
c_°r
 
°©e_to_°rög
(c⁄° 
_tu∂e_fifo_°©e_t
 
vÆue
) {

80 
vÆue
) {

81 
	#TF_STATE
(
x
Ëx:  #x;

	)

82 
TF_STATE
(
INVALID
);

83 
TF_STATE
(
IN_MEMORY
);

84 
TF_STATE
(
IN_MEMORY_DONE_WRITING
);

85 
TF_STATE
(
ON_DISK
);

86 
TF_STATE
(
ON_DISK_DONE_WRITING
);

87 
TF_STATE
(
TERMINATED
);

89 
as£π
(0);

93 
c_°r
 
to_°rög
() {

94  
°©e_to_°rög
(
cuºít
());

97 
_tu∂e_fifo_°©e_t
 
cuºít
() {

98  
	m_vÆue
;

101 
å™sôi⁄
(c⁄° 
_tu∂e_fifo_°©e_t
 
√xt
);

103 
	m¥iv©e
:

105 
boﬁ
 
_å™sôi⁄_ok
(c⁄° 
_tu∂e_fifo_°©e_t
 
√xt
);

110 
	g_fifo_id
;

113 
tu∂e_fifo_°©e_t
 
	g_°©e
;

116 
∑ge_li°
 
	g_∑ges
;

117 
∑ge_li°
 
	g_‰ì_∑ges
;

118 
size_t
 
	g_∑ges_ö_fifo
;

119 
size_t
 
	g_∑ges_ö_mem‹y
;

120 
size_t
 
	g_mem‹y_ˇ∑côy
;

121 
size_t
 
	g_thªshﬁd
;

124 
FILE
* 
	g_∑ge_fûe
;

125 
size_t
 
	g_√xt_∑ge
;

126 
size_t
 
	g_fûe_hód_∑ge
;

129 
size_t
 
	g_tu∂e_size
;

130 
size_t
 
	g_∑ge_size
;

133 
size_t
 
	g_num_ö£πed
;

134 
size_t
 
	g_num_ªmoved
;

135 
size_t
 
	g_num_waôs_⁄_ö£π
;

136 
size_t
 
	g_num_waôs_⁄_ªmove
;

139 * 
	g_ªad_íd
;

140 
	ggu¨d
<
	g∑ge
> 
	g_ªad_∑ge
;

141 
	g∑ge
::
ôî©‹
 
_ªad_ôî©‹
;

142 
	ggu¨d
<
	g∑ge
> 
	g_wrôe_∑ge
;

145 
±hªad_muãx_t
 
	g_lock
;

146 
±hªad_c⁄d_t
 
	g_ªadî_nŸify
;

147 
±hªad_c⁄d_t
 
	g_wrôî_nŸify
;

150 
±hªad_t
 
	g_ªadî_tid
;

151 
±hªad_t
 
	g_wrôî_tid
;

153 
	gpublic
:

174 
tu∂e_fifo
(
size_t
 
tu∂e_size
,

175 
size_t
 
ˇ∑côy
=
DEFAULT_BUFFER_PAGES
,

176 
size_t
 
thªshﬁd
=64,

177 
size_t
 
∑ge_size
=
	$gë_deÁu…_∑ge_size
())

178 : 
	`_fifo_id
(
	`tu∂e_fifo_gíî©e_id
()),

179 
	`_∑ges_ö_fifo
(0),

180 
	`_∑ges_ö_mem‹y
(0),

181 
	`_mem‹y_ˇ∑côy
(
ˇ∑côy
),

182 
	`_thªshﬁd
(
thªshﬁd
),

183 
	`_√xt_∑ge
(0),

184 
	`_fûe_hód_∑ge
(0),

185 
	`_tu∂e_size
(
tu∂e_size
),

186 
	`_∑ge_size
(
∑ge_size
),

187 
	`_num_ö£πed
(0),

188 
	`_num_ªmoved
(0),

189 
	`_num_waôs_⁄_ö£π
(0),

190 
	`_num_waôs_⁄_ªmove
(0),

191 
	`_lock
(
	`thªad_muãx_¸óã
()),

192 
	`_ªadî_nŸify
(
	`thªad_c⁄d_¸óã
()),

193 
	`_wrôî_nŸify
(
	`thªad_c⁄d_¸óã
()),

194 
	`_ªadî_tid
(0),

195 
	$_wrôî_tid
(0)

197 
	`öô
();

198 
	}
}

200 ~
	$tu∂e_fifo
() {

201 
	`de°roy
();

202 
	}
}

206 
›í_fifos
();

207 
˛ór_°©s
();

208 
åa˚_°©s
();

211 
size_t
 
	$tu∂e_size
() const {

212  
_tu∂e_size
;

213 
	}
}

216 
size_t
 
	$∑ge_size
() const {

217  
_∑ge_size
;

218 
	}
}

221 
wrôî_öô
();

237 
	$≠≥nd
(c⁄° 
tu∂e_t
 &
tu∂e
) {

238 
	`ísuª_wrôe_ªady
();

239 
_num_ö£πed
++;

240 
_wrôe_∑ge
->
	`≠≥nd_tu∂e
(
tu∂e
);

241 
	}
}

259 
tu∂e_t
 
	$Æloˇã
() {

260 
	`ísuª_wrôe_ªady
();

261 
_num_ö£πed
++;

262  
_wrôe_∑ge
->
	`Æloˇã_tu∂e
();

263 
	}
};

275 
boﬁ
 
	$gë_tu∂e
(
tu∂e_t
 &
tu∂e
) {

276 i‡(!
	`ísuª_ªad_ªady
())

277  
Ál£
;

278 
tu∂e
 = *
_ªad_ôî©‹
++;

279 
_num_ªmoved
++;

280  
åue
;

281 
	}
}

284 
boﬁ
 
c›y_∑ge
(
∑ge
* 
d°
, 
timeout_ms
=0);

293 
	$ísuª_wrôe_ªady
() {

294 if(
_wrôe_∑ge
->
	`fuŒ
())

295 
	`_Êush_wrôe_∑ge
(
Ál£
);

296 
	}
}

307 
boﬁ
 
	$ísuª_ªad_ªady
(
timeout_ms
=0) {

309  (
_ªad_ôî©‹
->
d©a
 !
_ªad_íd
)

310 || (
	`_gë_ªad_∑ge
(
timeout_ms
) == 1);

311 
	}
}

315 
	$check_ªad_ªady
() {

316 if(
_ªad_ôî©‹
->
d©a
 !
_ªad_íd
)

318  
	`_gë_ªad_∑ge
(-1);

319 
	}
}

322 
boﬁ
 
ãrmö©e
();

325 
boﬁ
 
£nd_eof
();

335 
boﬁ
 
	$eof
() {

336  
	`check_ªad_ªady
() < 0;

337 
	}
}

340 
	g¥iv©e
:

342 
size_t
 
	$_avaûabÀ_ö_mem‹y_wrôes
() {

343 
	`as£π
(
	`is_ö_mem‹y
());

344  
_mem‹y_ˇ∑côy
 - 
	`_avaûabÀ_ö_mem‹y_ªads
();

345 
	}
}

347 
size_t
 
	$_avaûabÀ_ö_mem‹y_ªads
() {

348 
	`as£π
(
	`is_ö_mem‹y
());

349  
_∑ges_ö_mem‹y
;

350 
	}
}

352 
size_t
 
	$_avaûabÀ_fifo_ªads
() {

353  
_∑ges_ö_fifo
;

354 
	}
}

356 
	$_ãrmö©i⁄_check
() {

357 if(
	`is_ãrmö©ed
())

358 
	`THROW1
(
Tîmö©edBuf„rEx˚±i⁄
, "Buffer closed unexpectedly");

359 
	}
}

361 
	$_£t_ªad_∑ge
(
∑ge
* 
p
) {

362 
_ªad_∑ge
 = 
p
;

363 
_ªad_ôî©‹
 = 
_ªad_∑ge
->
	`begö
();

364 
_ªad_íd
 = 
_ªad_∑ge
->
	`íd
()->
d©a
;

365 
	}
}

367 
∑ge
* 
	$_Æloc_∑ge
() {

369 i‡(
_‰ì_∑ges
.
	`em±y
())

371  
∑ge
::
	`Æloc
(
	`tu∂e_size
());

374 
∑ge
* 
p
 = 
_‰ì_∑ges
.
	`‰⁄t
();

375 
_‰ì_∑ges
.
	`p›_‰⁄t
();

376 
p
->
	`˛ór
();

377  
p
;

378 
	}
}

380 
öô
();

381 
de°roy
();

384 
_gë_ªad_∑ge
(
timeout
);

385 
_Êush_wrôe_∑ge
(
boﬁ
 
d⁄e_wrôög
);

388 
boﬁ
 
	$is_ö_mem‹y
() {

390 
_°©e
.
	`cuºít
(Ë=
tu∂e_fifo_°©e_t
::
IN_MEMORY
 ||

391 
_°©e
.
	`cuºít
(Ë=
tu∂e_fifo_°©e_t
::
IN_MEMORY_DONE_WRITING
;

392 
	}
}

394 
boﬁ
 
	$is_d⁄e_wrôög
() {

396 
_°©e
.
	`cuºít
(Ë=
tu∂e_fifo_°©e_t
::
IN_MEMORY_DONE_WRITING
 ||

397 
_°©e
.
	`cuºít
(Ë=
tu∂e_fifo_°©e_t
::
ON_DISK_DONE_WRITING
;

398 
	}
}

400 
boﬁ
 
	$is_ãrmö©ed
() {

401  
_°©e
.
	`cuºít
(Ë=
tu∂e_fifo_°©e_t
::
TERMINATED
;

402 
	}
}

405 
waô_f‹_ªadî
();

406 
ísuª_ªadî_ru¬ög
();

408 
boﬁ
 
waô_f‹_wrôî
(
timeout
);

409 
ísuª_wrôî_ru¬ög
();

415 
EXIT_NAMESPACE
(
qpùe
);

419 
	gãm∂©e
<>

420 
ölöe
 
	ggu¨d
<
	gqpùe
::
tu∂e_fifo
>::
	$a˘i⁄
(
qpùe
::
tu∂e_fifo
* 
±r
) {

421 if(!
±r
->
	`ãrmö©e
()) {

422 
dñëe
 
±r
;

424 
	}
}

	@include/qpipe/core/tuple_fifo_directory.h

24 #i‚de‡
__TUPLE_FIFO_DIRECTORY_H


25 
	#__TUPLE_FIFO_DIRECTORY_H


	)

27 
	~"utû.h
"

30 
ENTER_NAMESPACE
(
qpùe
);

33 
DEFINE_EXCEPTION
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
);

36 ˛as†
	ctu∂e_fifo_dúe˘‹y_t
 {

38 
	m¥iv©e
:

40 
	edú_°©e_t
 {

41 
TUPLE_FIFO_DIRECTORY_FIRST
,

42 
	mTUPLE_FIFO_DIRECTORY_OPEN
,

43 
	mTUPLE_FIFO_DIRECTORY_CLOSED


46 
c_°r
 
	g_dú_∑th
;

48 
±hªad_muãx_t
 
	g_dú_muãx
;

50 
dú_°©e_t
 
	g_dú_°©e
;

52 
	gpublic
:

54 c⁄° 
c_°r
& 
dú_∑th
();

55 
›í_⁄˚
();

56 
˛o£
();

57 
c_°r
 
gíî©e_fûï©h
(
id
);

59 
	g¥iv©e
:

61 
boﬁ
 
fûíame_fûãr
(c⁄° * 
∑th
);

62 
˛ón_dú
();

67 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/qcommon.h

31 #i‚de‡
__QPIPE_COMMON_H


32 
	#__QPIPE_COMMON_H


	)

34 
	~"sm/sh‹e/sh‹e_ív.h
"

36 
	~"qpùe/comm⁄/¥o˚ss_tu∂e.h
"

37 
	~"qpùe/comm⁄/¥o˚ss_quîy.h
"

38 
	~"qpùe/comm⁄/öt_com∑øt‹.h
"

42 
	#DECLARE_QPIPE_TRX
(
åxlid
) \

43 
w_rc_t
 
run_qpùe_
##
	`åxlid
(
Reque°
* 
¥eque°
, 
åxlid
##
_öput_t
& 
ö
); \

44 
w_rc_t
 
run_qpùe_
##
	`åxlid
(
Reque°
* 
¥eque°
); \

45 
w_rc_t
 
x˘_qpùe_
##
	`åxlid
(c⁄° 
x˘_id
, 
åxlid
##
_öput_t
& 
ö
)

	)

48 
	#DEFINE_QPIPE_TRX
(
˙ame
,
åxlid
) \

49 
	`DEFINE_RUN_WITHOUT_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
qpùe_
##trxlid); \

50 
	`DEFINE_RUN_WITH_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
qpùe_
##åxlid)

	)

	@include/qpipe/scheduler.h

31 #i‚de‡
__QPIPE_CPU_SCHED_H


32 
	#__QPIPE_CPU_SCHED_H


	)

34 
	~"qpùe/scheduÀr/˝u.h
"

35 
	~"qpùe/scheduÀr/˝u_£t.h
"

36 
	~"qpùe/scheduÀr/pﬁicy.h
"

37 
	~"qpùe/scheduÀr/pﬁicy_os.h
"

38 
	~"qpùe/scheduÀr/pﬁicy_quîy_˝u.h
"

39 
	~"qpùe/scheduÀr/pﬁicy_º_˝u.h
"

40 
	~"qpùe/scheduÀr/pﬁicy_º_moduÀ.h
"

	@include/qpipe/scheduler/cpu.h

33 #i‚de‡
__QPIPE_CPU_H


34 
	#__QPIPE_CPU_H


	)

36 
	~"utû/«me•a˚.h
"

38 
ENTER_NAMESPACE
(
qpùe
);

42 
˝u_s
* 
	t˝u_t
;

47 
˝u_böd_£lf
(
˝u_t
 
˝u
);

48 
˝u_gë_unique_id
(
˝u_t
 
˝u
);

50 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/cpu_set.h

31 #i‚de‡
__QPIPE_CPU_SET_H


32 
	#__QPIPE_CPU_SET_H


	)

34 
	~"utû/«me•a˚.h
"

35 
	~"qpùe/scheduÀr/os_suµ‹t.h
"

36 
	~"qpùe/scheduÀr/˝u.h
"

38 
ENTER_NAMESPACE
(
qpùe
);

42 
˝u_£t_s
* 
	t˝u_£t_p
;

46 
˝u_£t_öô
(
˝u_£t_p
 
˝u_£t
);

47 
˝u_£t_gë_num_˝us
(
˝u_£t_p
 
˝u_£t
);

48 
˝u_t
 
˝u_£t_gë_˝u
(
˝u_£t_p
 
˝u_£t
, 
ödex
);

49 
˝u_£t_föish
(
˝u_£t_p
 
˝u_£t
);

51 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/cpu_set_struct.h

35 #i‚de‡
__SCHEDULER_CPU_SET_STRUCT_H


36 
	#__SCHEDULER_CPU_SET_STRUCT_H


	)

38 
	~"utû/«me•a˚.h
"

39 
	~"qpùe/scheduÀr/os_suµ‹t.h
"

40 
	~"qpùe/scheduÀr/˝u_°ru˘.h
"

42 
ENTER_NAMESPACE
(
qpùe
);

50 
	s˝u_£t_s


53 
	m˝u£t_num_˝us
;

56 
˝u_s
* 
	m˝u£t_˝us
;

60 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/cpu_struct.h

34 #i‚de‡
__QPIPE_CPU_STRUCT_H


35 
	#__QPIPE_CPU_STRUCT_H


	)

37 
	~"utû/«me•a˚.h
"

38 
	~"qpùe/scheduÀr/os_suµ‹t.h
"

45 
ENTER_NAMESPACE
(
qpùe
);

52 
	s˝u_s


57 
	m˝u_unique_id
;

59 #ifde‡
FOUND_LINUX


68 
os_˝u_£t_t
 
	m˝u_£t
;

79 
¥o˚ss‹id_t
 
	m˝u_id
;

84 
¥o˚ss‹_öfo_t
 
	m˝u_¥oc_öfo
;

90 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/os_support.h

24 #i‚de‡
_OS_SUPPORT_H


25 
	#_OS_SUPPORT_H


	)

27 #ifde‡ 
UNSUPPORTED_OS


28 
	#UNSUPPORTED_OS
 1

	)

33 #i‡
deföed
(
löux
Ë|| deföed(
__löux
)

34 
	#FOUND_LINUX


	)

36 #unde‡
UNSUPPORTED_OS


37 
	#UNSUPPORTED_OS
 0

	)

39 #i‚de‡
__USE_GNU


40 
	#__USE_GNU


	)

43 
	~<sched.h
>

45 
˝u_£t_t
 
	tos_˝u_£t_t
;

50 #i‡
deföed
(
sun
Ë|| deföed(
__sun
)

51 #i‡
deföed
(
__SVR4
Ë|| deföed(
__svr4__
)

53 #unde‡
UNSUPPORTED_OS


54 
	#UNSUPPORTED_OS
 0

	)

57 
	~<sys/ty≥s.h
>

58 
	~<sys/¥o˚ss‹.h
>

68 #i‡
UNSUPPORTED_OS


	@include/qpipe/scheduler/policy.h

25 #i‚de‡
__SCHEDULER_POLICY_H


26 
	#__SCHEDULER_POLICY_H


	)

28 
	~"qpùe/c‹e/∑ckë.h
"

29 
	~"qpùe/c‹e/quîy_°©e.h
"

30 
	~"qpùe/scheduÀr/˝u.h
"

34 
ENTER_NAMESPACE
(
qpùe
);

37 
usög
 
	gqpùe
::
∑ckë_t
;

38 
usög
 
	gqpùe
::
quîy_°©e_t
;

41 ˛as†
	cpﬁicy_t
 {

43 
	mpublic
:

45 
vútuÆ
 
quîy_°©e_t
* 
quîy_°©e_¸óã
()=0;

46 
vútuÆ
 
quîy_°©e_de°roy
(
quîy_°©e_t
* 
q°©e
)=0;

47 
	mvútuÆ
 ~
	$pﬁicy_t
() { }

48 
	}
};

52 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/policy_os.h

24 #i‚de‡
__QPIPE_POLICY_OS_H


25 
	#__QPIPE_POLICY_OS_H


	)

27 
	~"qpùe/scheduÀr/pﬁicy.h
"

28 
	~<c°dlib
>

31 
ENTER_NAMESPACE
(
qpùe
);

37 ˛as†
	cpﬁicy_os_t
 : 
public
 
pﬁicy_t
 {

39 
¥Ÿe˘ed
:

41 ˛as†
	cos_quîy_°©e_t
 : 
public
 
qpùe
::
quîy_°©e_t
 {

42 
public
:

43 
os_quîy_°©e_t
() { }

44 
vútuÆ
 ~
os_quîy_°©e_t
() { }

46 
vútuÆ
 
ªböd_£lf
(
∑ckë_t
*) {

52 
	gpublic
:

54 
	$pﬁicy_os_t
(Ë{ 
	}
}

55 
vútuÆ
 ~
	$pﬁicy_os_t
(Ë{
	}
}

58 
vútuÆ
 
quîy_°©e_t
* 
	$quîy_°©e_¸óã
() {

59  
√w
 
	`os_quîy_°©e_t
();

60 
	}
}

63 
vútuÆ
 
	$quîy_°©e_de°roy
(
quîy_°©e_t
* 
qs
) {

64 
os_quîy_°©e_t
* 
q°©e
 = 
dy«mic_ˇ°
<os_quîy_°©e_t*>(
qs
);

65 
dñëe
 
q°©e
;

66 
	}
}

70 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/policy_query_cpu.h

24 #i‚de‡
__QPIPE_POLICY_QUERY_CPU_H


25 
	#__QPIPE_POLICY_QUERY_CPU_H


	)

27 
	~"utû.h
"

28 
	~"qpùe/scheduÀr/pﬁicy.h
"

29 
	~"qpùe/scheduÀr/˝u_£t_°ru˘.h
"

30 
	~"qpùe/scheduÀr/˝u_£t.h
"

34 
ENTER_NAMESPACE
(
qpùe
);

40 ˛as†
	cpﬁicy_quîy_˝u_t
 : 
public
 
pﬁicy_t
 {

42 
¥Ÿe˘ed
:

44 
±hªad_muãx_t
 
_˝u_√xt_muãx
;

45 
˝u_£t_s
 
	m_˝u_£t
;

46 
	m_˝u_√xt
;

47 
	m_˝u_num
;

50 ˛as†
	cquîy_˝u_quîy_°©e_t
 : 
public
 
qpùe
::
quîy_°©e_t
 {

52 
public
:

55 
˝u_t
 
_q˝u
;

57 
quîy_˝u_quîy_°©e_t
(
˝u_t
 
q˝u
)

58 : 
_q˝u
(
q˝u
)

62 
vútuÆ
 ~
quîy_˝u_quîy_°©e_t
() { }

64 
vútuÆ
 
ªböd_£lf
(
∑ckë_t
*) {

66 
˝u_böd_£lf
(
_q˝u
);

71 
	gpublic
:

73 
	$pﬁicy_quîy_˝u_t
()

74 : 
	`_˝u_√xt_muãx
(
	$thªad_muãx_¸óã
())

76 
	`˝u_£t_öô
(&
_˝u_£t
);

77 
_˝u_√xt
 = 0;

78 
_˝u_num
 = 
	`˝u_£t_gë_num_˝us
(&
_˝u_£t
);

79 
	}
}

82 
	gvútuÆ
 ~
	$pﬁicy_quîy_˝u_t
() {

83 
	`˝u_£t_föish
(&
_˝u_£t
);

84 
	`thªad_muãx_de°roy
(
_˝u_√xt_muãx
);

85 
	}
}

88 
vútuÆ
 
quîy_°©e_t
* 
	$quîy_°©e_¸óã
() {

90 
√xt_˝u
;

92 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_˝u_√xt_muãx
);

97 
√xt_˝u
 = 
_˝u_√xt
;

98 
_˝u_√xt
 = (_˝u_√xà+ 1Ë% 
_˝u_num
;

100 
cs
.
	`exô
();

102  
√w
 
	`quîy_˝u_quîy_°©e_t
–
	`˝u_£t_gë_˝u
(&
_˝u_£t
, 
√xt_˝u
) );

103 
	}
}

106 
vútuÆ
 
	$quîy_°©e_de°roy
(
quîy_°©e_t
* 
qs
) {

108 
quîy_˝u_quîy_°©e_t
* 
q°©e
 = 
dy«mic_ˇ°
<quîy_˝u_quîy_°©e_t*>(
qs
);

109 
dñëe
 
q°©e
;

110 
	}
}

117 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/policy_rr_cpu.h

24 #i‚de‡
__QPIPE_POLICY_RR_CPU_H


25 
	#__QPIPE_POLICY_RR_CPU_H


	)

27 
	~"utû.h
"

28 
	~"qpùe/scheduÀr/pﬁicy.h
"

29 
	~"qpùe/scheduÀr/˝u_£t_°ru˘.h
"

30 
	~"qpùe/scheduÀr/˝u_£t.h
"

34 
ENTER_NAMESPACE
(
qpùe
);

40 ˛as†
	cpﬁicy_º_˝u_t
 : 
public
 
pﬁicy_t
 {

42 
¥Ÿe˘ed
:

44 ˛as†
	cº_˝u_°©e_t
 : 
public
 
qpùe
::
quîy_°©e_t
 {

46 
¥iv©e
:

47 
pﬁicy_º_˝u_t
* 
_pﬁicy
;

49 
	mpublic
:

50 
º_˝u_°©e_t
(
pﬁicy_º_˝u_t
* 
pﬁicy
)

51 : 
_pﬁicy
(
pﬁicy
)

55 
vútuÆ
 ~
º_˝u_°©e_t
() { }

57 
vútuÆ
 
ªböd_£lf
(
∑ckë_t
* 
∑ckë
) {

59 
˝u_t
 
böd_˝u
 = 
_pﬁicy
->
assign
(
∑ckë
, 
this
);

60 
˝u_böd_£lf
(
böd_˝u
);

61 
TRACE
(
TRACE_CPU_BINDING
, "BödögÅÿCPU %p\n", 
böd_˝u
);

66 
±hªad_muãx_t
 
	g_˝u_√xt_muãx
;

67 
˝u_£t_s
 
	g_˝u_£t
;

68 
	g_˝u_√xt
;

69 
	g_˝u_num
;

71 
vútuÆ
 
˝u_t
 
	$assign
(
∑ckë_t
*, 
quîy_°©e_t
*) {

73 
√xt_˝u
;

75 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_˝u_√xt_muãx
);

80 
√xt_˝u
 = 
_˝u_√xt
;

81 
_˝u_√xt
 = (_˝u_√xà+ 1Ë% 
_˝u_num
;

83 
cs
.
	`exô
();

85  
	`˝u_£t_gë_˝u
–&
_˝u_£t
, 
√xt_˝u
 );

86 
	}
}

89 
	gpublic
:

91 
	$pﬁicy_º_˝u_t
()

92 : 
	`_˝u_√xt_muãx
(
	$thªad_muãx_¸óã
())

94 
	`˝u_£t_öô
(&
_˝u_£t
);

95 
_˝u_√xt
 = 0;

96 
_˝u_num
 = 
	`˝u_£t_gë_num_˝us
(&
_˝u_£t
);

97 
	}
}

100 
	gvútuÆ
 ~
	$pﬁicy_º_˝u_t
() {

101 
	`˝u_£t_föish
(&
_˝u_£t
);

102 
	`thªad_muãx_de°roy
(
_˝u_√xt_muãx
);

103 
	}
}

106 
vútuÆ
 
quîy_°©e_t
* 
	$quîy_°©e_¸óã
() {

107  
√w
 
	`º_˝u_°©e_t
(
this
);

108 
	}
}

111 
vútuÆ
 
	$quîy_°©e_de°roy
(
quîy_°©e_t
* 
qs
) {

112 
º_˝u_°©e_t
* 
q°©e
 = 
dy«mic_ˇ°
<º_˝u_°©e_t*>(
qs
);

113 
dñëe
 
q°©e
;

114 
	}
}

121 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/scheduler/policy_rr_module.h

24 #i‚de‡
__QPIPE_POLICY_RR_MODULE_H


25 
	#__QPIPE_POLICY_RR_MODULE_H


	)

27 
	~"utû.h
"

28 
	~"qpùe/scheduÀr/pﬁicy.h
"

29 
	~"qpùe/scheduÀr/˝u_£t_°ru˘.h
"

30 
	~"qpùe/scheduÀr/˝u_£t.h
"

34 
ENTER_NAMESPACE
(
qpùe
);

38 
	#NUM_MODULES
 2

	)

43 ˛as†
	cpﬁicy_º_moduÀ_t
 : 
public
 
pﬁicy_t
 {

45 
¥Ÿe˘ed
:

47 
	smoduÀ_t
 {

48 
±hªad_muãx_t
 
_moduÀ_muãx
;

49 
	m_√xt_moduÀ_˝u
;

50 
moduÀ_t
()

51 : 
_moduÀ_muãx
(
thªad_muãx_¸óã
())

56 
±hªad_muãx_t
 
	g_√xt_moduÀ_muãx
;

57 
	g_√xt_moduÀ
;

59 
˝u_£t_s
 
	g_˝u_£t
;

60 
moduÀ_t
 
	g_moduÀs
[
NUM_MODULES
];

61 
	g_˝us_≥r_moduÀ
;

63 ˛as†
	cº_moduÀ_quîy_°©e_t
 : 
public
 
qpùe
::
quîy_°©e_t
 {

65 
¥iv©e
:

67 
pﬁicy_º_moduÀ_t
* 
_pﬁicy
;

69 
	gpublic
:

71 
_moduÀ_ödex
;

73 
º_moduÀ_quîy_°©e_t
(
pﬁicy_º_moduÀ_t
* 
pﬁicy
, 
moduÀ_ödex
)

74 : 
_pﬁicy
(
pﬁicy
),

75 
_moduÀ_ödex
(
moduÀ_ödex
)

79 
	gvútuÆ
 ~
º_moduÀ_quîy_°©e_t
() { }

81 
vútuÆ
 
ªböd_£lf
(
∑ckë_t
* 
∑ckë
) {

83 
˝u_böd_£lf
–
_pﬁicy
->
assign
(
∑ckë
, 
this
) );

88 
vútuÆ
 
˝u_t
 
	$assign
(
∑ckë_t
*, 
quîy_°©e_t
* 
qs
) {

91 
º_moduÀ_quîy_°©e_t
* 
q°©e
 = 
dy«mic_ˇ°
<º_moduÀ_quîy_°©e_t*>(
qs
);

92 
moduÀ_ödex
 = 
q°©e
->
_moduÀ_ödex
;

93 
moduÀ_t
* 
moduÀ
 = &
_moduÀs
[
moduÀ_ödex
];

95 
√xt_˝u
;

96 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
moduÀ
->
_moduÀ_muãx
);

101 
√xt_˝u
 = 
moduÀ
->
_√xt_moduÀ_˝u
;

102 
moduÀ
->
_√xt_moduÀ_˝u
 = (
√xt_˝u
 + 1Ë% 
_˝us_≥r_moduÀ
;

104 
cs
.
	`exô
();

107 
	`˝u_£t_gë_˝u
–&
_˝u_£t
, 
moduÀ_ödex
 * 
_˝us_≥r_moduÀ
 + 
√xt_˝u
 );

108 
	}
}

111 
	gpublic
:

113 
	$pﬁicy_º_moduÀ_t
()

114 : 
	`_√xt_moduÀ_muãx
(
	$thªad_muãx_¸óã
())

117 
_√xt_moduÀ
 = 0;

119 
	`˝u_£t_öô
(&
_˝u_£t
);

120 
i
 = 0; i < 
NUM_MODULES
; i++)

121 
_moduÀs
[
i
].
_√xt_moduÀ_˝u
 = 0;

126 
_˝us_≥r_moduÀ
 = 
	`˝u_£t_gë_num_˝us
(&
_˝u_£t
Ë/ 
NUM_MODULES
;

127 
	}
}

130 
	gvútuÆ
 ~
	$pﬁicy_º_moduÀ_t
() {

131 
	`˝u_£t_föish
(&
_˝u_£t
);

132 
	`thªad_muãx_de°roy
(
_√xt_moduÀ_muãx
);

134 
i
 = 0; i < 
NUM_MODULES
; i++) {

135 
	`thªad_muãx_de°roy
(
_moduÀs
[
i
].
_moduÀ_muãx
);

137 
	}
}

140 
vútuÆ
 
quîy_°©e_t
* 
	$quîy_°©e_¸óã
() {

141 
√xt_moduÀ
;

143 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_√xt_moduÀ_muãx
);

147 
√xt_moduÀ
 = 
_√xt_moduÀ
;

148 
_√xt_moduÀ
 = (_√xt_moduÀ + 1Ë% 
NUM_MODULES
;

150 
cs
.
	`exô
();

152  
√w
 
	`º_moduÀ_quîy_°©e_t
–
this
, 
√xt_moduÀ
 );

153 
	}
}

156 
vútuÆ
 
	$quîy_°©e_de°roy
(
quîy_°©e_t
* 
qs
) {

158 
º_moduÀ_quîy_°©e_t
* 
q°©e
 = 
dy«mic_ˇ°
<º_moduÀ_quîy_°©e_t*>(
qs
);

159 
dñëe
 
q°©e
;

160 
	}
}

166 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages.h

24 #i‚de‡
__QPIPE_STAGES_H


25 
	#__QPIPE_STAGES_H


	)

27 
	~"qpùe/°ages/aggªg©e.h
"

28 
	~"qpùe/°ages/b∆_ö.h
"

29 
	~"qpùe/°ages/b∆_joö.h
"

30 
	~"qpùe/°ages/fdump.h
"

31 
	~"qpùe/°ages/fsˇn.h
"

32 
	~"qpùe/°ages/func_ˇŒ.h
"

33 
	~"qpùe/°ages/hash_joö.h
"

34 
	~"qpùe/°ages/s‹t_mîge_joö.h
"

35 
	~"qpùe/°ages/pùe_hash_joö.h
"

36 
	~"qpùe/°ages/mîge.h
"

37 
	~"qpùe/°ages/∑πül_aggªg©e.h
"

38 
	~"qpùe/°ages/hash_aggªg©e.h
"

39 
	~"qpùe/°ages/s‹t.h
"

40 
	~"qpùe/°ages/s‹ãd_ö.h
"

41 
	~"qpùe/°ages/tsˇn.h
"

42 
	~"qpùe/°ages/echo.h
"

43 
	~"qpùe/°ages/sõve.h
"

44 
	~"qpùe/°ages/dñay_wrôî.h
"

45 
	~"qpùe/°ages/tu∂e_sour˚.h
"

47 
	~"qpùe/°ages/ªgi°î_°age_c⁄èöîs.h
"

	@include/qpipe/stages/aggregate.h

24 #i‚de‡
__QPIPE_AGGREGATE_H


25 
	#__QPIPE_AGGREGATE_H


	)

27 
	~<c°dio
>

28 
	~"qpùe/c‹e.h
"

31 
ENTER_NAMESPACE
(
qpùe
);

38 
	gaggªg©e_∑ckë_t
 : 
public
 
∑ckë_t


40 c⁄° 
c_°r
 
PACKET_TYPE
;

42 
	ggu¨d
<
	gtu∂e_aggªg©e_t
> 
	g_aggªg©‹
;

43 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘
;

44 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

45 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

77 
aggªg©e_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

78 
tu∂e_fifo
* 
ouçut_buf„r
,

79 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

80 
tu∂e_aggªg©e_t
* 
aggªg©‹
,

81 
key_exåa˘‹_t
* 
exåa˘
,

82 
∑ckë_t
* 
öput
)

83 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

84 
¸óã_∂™
(
ouçut_fûãr
, 
aggªg©‹
, 
exåa˘
, 
öput
->
∂™
()),

85 
åue
,

86 
åue


88 
_aggªg©‹
(
aggªg©‹
), 
_exåa˘
(
exåa˘
),

89 
_öput
(
öput
),

90 
_öput_buf„r
(
öput
->
ouçut_buf„r
())

92 
as£π
(
_öput
 !
NULL
);

93 
as£π
(
_öput_buf„r
 !
NULL
);

96 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_aggªg©e_t
* 
agg
,

97 
key_exåa˘‹_t
* 
key
, 
quîy_∂™
 c⁄°* 
chûd
)

99 
c_°r
 
a˘i⁄
("%s:%s:%s", 
PACKET_TYPE
.
d©a
(),

100 
agg
->
to_°rög
().
d©a
(), 
key
->to_string().data());

102 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

103 
	gchûdªn
[0] = 
chûd
;

104  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

107 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

108 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

109 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

120 ˛as†
	caggªg©e_°age_t
 : 
public
 
°age_t


122 
public
:

124 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

125 
aggªg©e_∑ckë_t
 
	t°age_∑ckë_t
;

127 
	$aggªg©e_°age_t
() { }

129 ~
	$aggªg©e_°age_t
(Ë{ 
	}
}

132 
	g¥Ÿe˘ed
:

134 
vútuÆ
 
¥o˚ss_∑ckë
();

138 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/bnl_in.h

24 #i‚de‡
__QPIPE_BNL_IN_H


25 
	#__QPIPE_BNL_IN_H


	)

27 
	~<c°dio
>

28 
	~<°rög
>

30 
	~"qpùe/c‹e.h
"

31 
	~"qpùe/°ages/tu∂e_sour˚.h
"

33 
usög
 
«me•a˚
 
	g°d
;

34 
usög
 
«me•a˚
 
	gqpùe
;

44 
	gb∆_ö_∑ckë_t
 : 
public
 
∑ckë_t
 {

46 c⁄° 
c_°r
 
PACKET_TYPE
;

48 
	ggu¨d
<
	g∑ckë_t
> 
	g_À·
;

49 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_À·_buf„r
;

52 
	ggu¨d
<
	gtu∂e_sour˚_t
> 
	g_right_sour˚
;

53 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘
;

54 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

55 
boﬁ
 
	g_ouçut_⁄_m©ch
;

76 
b∆_ö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

77 
tu∂e_fifo
* 
ouçut_buf„r
,

78 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

79 
∑ckë_t
* 
À·
,

80 
tu∂e_sour˚_t
* 
right_sour˚
,

81 
key_exåa˘‹_t
* 
exåa˘
,

82 
key_com∑ª_t
* 
com∑ª
,

83 
boﬁ
 
ouçut_⁄_m©ch
)

84 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
, 
NULL
,

85 
Ál£
,

86 
åue


88 
_À·
(
À·
),

89 
_À·_buf„r
(
À·
->
ouçut_buf„r
()),

90 
_right_sour˚
(
right_sour˚
),

91 
_exåa˘
(
exåa˘
),

92 
_com∑ª
(
com∑ª
),

93 
_ouçut_⁄_m©ch
(
ouçut_⁄_m©ch
)

97 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
*) {

98 
TRACE
(
TRACE_ALWAYS
, "UNIMPLEMENTED! Whyáre youÇot using sorted_in?\n");

99 
as£π
(0);

109 ˛as†
	cb∆_ö_°age_t
 : 
public
 
°age_t
 {

111 
public
:

113 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

114 
b∆_ö_∑ckë_t
 
	t°age_∑ckë_t
;

116 
	$b∆_ö_°age_t
() { }

118 
vútuÆ
 ~
	$b∆_ö_°age_t
(Ë{ 
	}
}

120 
	g¥Ÿe˘ed
:

122 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/bnl_join.h

24 #i‚de‡
__QPIPE_BNL_JOIN_H


25 
	#__QPIPE_BNL_JOIN_H


	)

27 
	~<c°dio
>

28 
	~<°rög
>

30 
	~"qpùe/c‹e.h
"

31 
	~"qpùe/°ages/tu∂e_sour˚.h
"

35 
usög
 
«me•a˚
 
	g°d
;

36 
usög
 
«me•a˚
 
	gqpùe
;

46 
	gb∆_joö_∑ckë_t
 : 
public
 
∑ckë_t
 {

48 c⁄° 
c_°r
 
PACKET_TYPE
;

50 
	ggu¨d
<
	g∑ckë_t
> 
	g_À·
;

51 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_À·_buf„r
;

52 
	ggu¨d
<
	gtu∂e_sour˚_t
> 
	g_right_sour˚
;

53 
	ggu¨d
<
	gtu∂e_joö_t
> 
	g_joö
;

73 
b∆_joö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

74 
tu∂e_fifo
* 
ouçut_buf„r
,

75 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

76 
∑ckë_t
* 
À·
,

77 
tu∂e_sour˚_t
* 
right_sour˚
,

78 
tu∂e_joö_t
* 
joö
)

79 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
, 
NULL
,

80 
Ál£
,

81 
åue


83 
_À·
(
À·
),

84 
_À·_buf„r
(
À·
->
ouçut_buf„r
()),

85 
_right_sour˚
(
right_sour˚
),

86 
_joö
(
joö
)

90 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
*) {

91 
TRACE
(
TRACE_ALWAYS
, "UNIMPLEMENTED! Whyáre youÇot using hash join?\n");

92 
as£π
(0);

101 ˛as†
	cb∆_joö_°age_t
 : 
public
 
°age_t
 {

103 
public
:

105 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

106 
b∆_joö_∑ckë_t
 
	t°age_∑ckë_t
;

108 
	$b∆_joö_°age_t
() { }

110 
vútuÆ
 ~
	$b∆_joö_°age_t
(Ë{ 
	}
}

112 
	g¥Ÿe˘ed
:

114 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/delay_writer.h

24 #i‚de‡
__QPIPE_DELAY_WRITER_H


25 
	#__QPIPE_DELAY_WRITER_H


	)

27 
	~"qpùe/c‹e.h
"

30 
ENTER_NAMESPACE
(
qpùe
);

37 
	gdñay_wrôî_∑ckë_t
 : 
public
 
∑ckë_t
 {

39 
public
:

41 c⁄° 
c_°r
 
PACKET_TYPE
;

44 c⁄° 
size_t
 
	g_ouçut_tu∂e_size
;

45 c⁄° 
	g_dñay_us
;

46 c⁄° 
	g_num_tu∂es
;

52 
dñay_wrôî_∑ckë_t
(c⁄° 
c_°r
& 
∑ckë_id
,

53 
tu∂e_fifo
* 
ouçut_buf„r
,

54 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

55 
dñay_us
,

56 
num_tu∂es
)

57 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

58 
NULL
,

59 
Ál£
,

60 
åue


62 
_ouçut_tu∂e_size
(
ouçut_buf„r
->
tu∂e_size
()),

63 
_dñay_us
(
dñay_us
),

64 
_num_tu∂es
(
num_tu∂es
)

68 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

69 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

80 ˛as†
	cdñay_wrôî_°age_t
 : 
public
 
°age_t
 {

82 
public
:

84 
dñay_wrôî_∑ckë_t
 
	t°age_∑ckë_t
;

85 c⁄° 
c_°r
 
	mDEFAULT_STAGE_NAME
;

87 c⁄° 
size_t
 
	mDELAY_WRITER_BULK_READ_BUFFER_SIZE
;

89 
	$dñay_wrôî_°age_t
() { }

91 
vútuÆ
 ~
	$dñay_wrôî_°age_t
(Ë{ 
	}
}

93 
	g¥Ÿe˘ed
:

95 
vútuÆ
 
¥o˚ss_∑ckë
();

99 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/echo.h

24 #i‚de‡
__QPIPE_ECHO_H


25 
	#__QPIPE_ECHO_H


	)

27 
	~<c°dio
>

28 
	~"utû.h
"

29 
	~"qpùe/c‹e.h
"

32 
usög
 
«me•a˚
 
	gqpùe
;

36 
	gecho_∑ckë_t
 : 
public
 
∑ckë_t
 {

38 c⁄° 
c_°r
 
PACKET_TYPE
;

40 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

41 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

43 
echo_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

44 
tu∂e_fifo
* 
ouçut_buf„r
,

45 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

46 
∑ckë_t
* 
öput
)

47 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

48 
¸óã_∂™
(
ouçut_fûãr
, 
öput
->
∂™
()),

49 
åue
,

50 
åue


52 
_öput
(
öput
),

53 
_öput_buf„r
(
öput
->
ouçut_buf„r
())

55 
as£π
(
_öput
 !
NULL
);

56 
as£π
(
_öput_buf„r
 !
NULL
);

59 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, quîy_∂™ c⁄°* 
chûd
)

61 
c_°r
 
a˘i⁄
("%s", 
PACKET_TYPE
.
d©a
());

62 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

63 
	gchûdªn
[0] = 
chûd
;

64  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

67 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

68 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

69 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

75 ˛as†
	cecho_°age_t
 : 
public
 
°age_t
 {

77 
public
:

79 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

80 
echo_∑ckë_t
 
	t°age_∑ckë_t
;

82 
	$echo_°age_t
() { }

83 ~
	$echo_°age_t
(Ë{ 
	}
}

86 
	g¥Ÿe˘ed
:

88 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/fdump.h

24 #i‚de‡
__QPIPE_FDUMP_H


25 
	#__QPIPE_FDUMP_H


	)

27 
	~<c°dio
>

29 
	~"qpùe/c‹e.h
"

32 
usög
 
«me•a˚
 
	gqpùe
;

42 
	gfdump_∑ckë_t
 : 
public
 
∑ckë_t
 {

44 
public
:

46 c⁄° 
c_°r
 
PACKET_TYPE
;

48 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

50 
c_°r
 
	g_fûíame
;

52 
nŸify_t
* 
	g_nŸifõr
;

54 c⁄° 
	gc_°r
* (*
	g_tu∂e_to_c_°r
)(
	gtu∂e_t
*);

56 
	ggu¨d
<
	g∑ckë_t
> 
	g_chûd
;

113 
fdump_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

114 
tu∂e_fifo
* 
ouçut_buf„r
,

115 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

116 
tu∂e_fifo
* 
öput_buf„r
,

117 c⁄° 
c_°r
 &
fûíame
,

118 
nŸify_t
* 
nŸifõr
=
NULL
,

119 
∑ckë_t
* 
chûd
=
NULL
,

120 c⁄° 
c_°r
* (*
tu∂e_to_c_°r
)(
tu∂e_t
*)=
NULL
)

121 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

122 
¸óã_∂™
(
ouçut_fûãr
, 
chûd
),

123 
Ál£
,

124 
Ál£


126 
_öput_buf„r
(
öput_buf„r
),

127 
_fûíame
(
fûíame
),

128 
_nŸifõr
(
nŸifõr
),

129 
_chûd
(
chûd
),

130 
_tu∂e_to_c_°r
(
tu∂e_to_c_°r
)

132 i‡(
	g_chûd
) {

133 
	g_öput_buf„r
 = 
_chûd
.
gë
()->
ouçut_buf„r
();

137 
quîy_∂™
 * 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
∑ckë_t
* 
chûd
) {

138 
c_°r
 
a˘i⁄
("%s:%s", 
PACKET_TYPE
.
d©a
(), 
chûd
->
_∑ckë_ty≥
.data());

139 i‡(
	gchûd
) {

140 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

141 
	gchûdªn
[0] = 
chûd
->
∂™
();

142  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

144  
	gNULL
;

148 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
 * 
de˛¨e
) {

149 i‡(
	g_chûd
) {

150 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

151 
	g_chûd
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

165 ˛as†
	cfdump_°age_t
 : 
public
 
°age_t
 {

167 
public
:

169 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

170 
fdump_∑ckë_t
 
	t°age_∑ckë_t
;

172 
	$fdump_°age_t
() { }

174 
vútuÆ
 ~
	$fdump_°age_t
(Ë{ 
	}
}

176 
	g¥Ÿe˘ed
:

178 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/fscan.h

24 #i‚de‡
__QPIPE_FSCAN_H


25 
	#__QPIPE_FSCAN_H


	)

27 
	~<c°dio
>

29 
	~"qpùe/c‹e.h
"

33 
usög
 
«me•a˚
 
	gqpùe
;

40 ˛as†
	cfsˇn_∑ckë_t
 : 
public
 
∑ckë_t
 {

42 
public
:

44 c⁄° 
c_°r
 
PACKET_TYPE
;

47 
c_°r
 
	m_fûíame
;

75 
	$fsˇn_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

76 
tu∂e_fifo
* 
ouçut_buf„r
,

77 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

78 c⁄° 
c_°r
 &
fûíame
)

79 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

80 
	`¸óã_∂™
(
ouçut_fûãr
, 
fûíame
),

81 
Ál£
,

82 
Ál£


84 
	$_fûíame
(
fûíame
)

88 
quîy_∂™
* 
	$¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, c⁄° 
c_°r
 &
fûe_«me
) {

89 
c_°r
 
	`a˘i⁄
("%s:%s", 
PACKET_TYPE
.
	`d©a
(), 
fûe_«me
.data());

90  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
NULL
, 0);

91 
	}
}

93 
vútuÆ
 
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
*) {

96 
	}
}

105 ˛as†
	cfsˇn_°age_t
 : 
public
 
°age_t
 {

107 
public
:

109 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

110 
fsˇn_∑ckë_t
 
	t°age_∑ckë_t
;

112 
	$fsˇn_°age_t
() { }

114 
vútuÆ
 ~
	$fsˇn_°age_t
(Ë{ 
	}
}

116 
	g¥Ÿe˘ed
:

118 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/func_call.h

24 #i‚de‡
__QPIPE_FUNC_CALL_H


25 
	#__QPIPE_FUNC_CALL_H


	)

27 
	~<c°dio
>

29 
	~"qpùe/c‹e.h
"

33 
usög
 
«me•a˚
 
	gqpùe
;

40 ˛as†
	cfunc_ˇŒ_∑ckë_t
 : 
public
 
∑ckë_t
 {

42 
public
:

44 c⁄° 
c_°r
 
PACKET_TYPE
;

47 (*
_func
) (*, *);

50 * 
_func_¨g
;

53 (*
_de°ru˘‹
) (*);

82 
	`func_ˇŒ_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

83 
tu∂e_fifo
* 
ouçut_buf„r
,

84 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

85 (*
func
) (*, *),

86 * 
func_¨g
,

87 (*
de°ru˘‹
Ë(*Ë
NULL
,

88 
boﬁ
 
_mîge
=
Ál£
,

89 
boﬁ
 
_uƒe£rve
=
åue
)

90 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

91 
_mîge
 ? 
	$¸óã_∂™
(
ouçut_fûãr
, 
func
Ë: 
NULL
,

92 
_mîge
,

93 
_uƒe£rve


95 
	`_func
(
func
),

96 
	`_func_¨g
(
func_¨g
),

97 
	$_de°ru˘‹
(
de°ru˘‹
)

100 
	`as£π
(
func
 !
NULL
);

101 i‡(
_mîge
 && !
_uƒe£rve
) {

102 
	`TRACE
(
TRACE_ALWAYS
,

109 
vútuÆ
 ~
	$func_ˇŒ_∑ckë_t
() {

111 i‡–
_de°ru˘‹
 !
NULL
 )

112 
	`_de°ru˘‹
(
_func_¨g
);

113 
	}
}

115 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, (*
func
) (*, *)) {

116 
c_°r
 
	`a˘i⁄
("%p", 
func
);

117  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
NULL
, 0);

118 
	}
}

120 
vútuÆ
 
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
*) {

123 
	}
}

132 ˛as†
	cfunc_ˇŒ_°age_t
 : 
public
 
°age_t
 {

134 
public
:

136 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

137 
func_ˇŒ_∑ckë_t
 
	t°age_∑ckë_t
;

139 
	$func_ˇŒ_°age_t
() { }

141 
vútuÆ
 ~
	$func_ˇŒ_°age_t
(Ë{ 
	}
}

143 
	g¥Ÿe˘ed
:

145 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/hash_aggregate.h

24 #i‚de‡
__QPIPE_HASH_AGGREGATE_H


25 
	#__QPIPE_HASH_AGGREGATE_H


	)

27 
	~"qpùe/c‹e.h
"

28 
	~"utû/ªsour˚_de˛¨e.h
"

30 
usög
 
«me•a˚
 
	gqpùe
;

33 
	ghash_aggªg©e_∑ckë_t
 : 
public
 
∑ckë_t
 {

34 c⁄° 
c_°r
 
PACKET_TYPE
;

35 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

36 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

37 
	ggu¨d
<
	gtu∂e_aggªg©e_t
> 
	g_aggªg©e
;

38 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘‹
;

39 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

41 
hash_aggªg©e_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

42 
tu∂e_fifo
* 
out_buf„r
,

43 
tu∂e_fûãr_t
* 
out_fûãr
,

44 
∑ckë_t
* 
öput
,

45 
tu∂e_aggªg©e_t
 *
aggªg©e
,

46 
key_exåa˘‹_t
* 
exåa˘‹
,

47 
key_com∑ª_t
* 
com∑ª
)

48 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
out_fûãr
,

49 
¸óã_∂™
(
out_fûãr
, 
aggªg©e
, 
exåa˘‹
, 
öput
->
∂™
()),

50 
åue
,

51 
åue


53 
_öput
(
öput
), 
_öput_buf„r
(öput->
ouçut_buf„r
()),

54 
_aggªg©e
(
aggªg©e
), 
_exåa˘‹
(
exåa˘‹
), 
_com∑ª
(
com∑ª
)

59 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_aggªg©e_t
* 
agg
,

60 
key_exåa˘‹_t
* 
key
, 
quîy_∂™
 c⁄°* 
chûd
)

62 
c_°r
 
a˘i⁄
("%s:%s:%s", 
PACKET_TYPE
.
d©a
(),

63 
agg
->
to_°rög
().
d©a
(), 
key
->to_string().data());

65 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

66 
	gchûdªn
[0] = 
chûd
;

67  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

70 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

71 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

72 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

78 ˛as†
	chash_aggªg©e_°age_t
 : 
public
 
°age_t
 {

80 
∑ge_åash_°ack
 
_∑ge_li°
;

81 
size_t
 
	m_∑ge_cou¡
;

82 
tu∂e_aggªg©e_t
* 
	m_aggªg©e
;

83 
	mqpùe
::
∑ge
* 
_agg_∑ge
;

84 
size_t
 
	m_tu∂e_Æign
;

85 
	mpublic
:

86 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

87 
hash_aggªg©e_∑ckë_t
 
	t°age_∑ckë_t
;

89 
	m¥Ÿe˘ed
:

90 
vútuÆ
 
¥o˚ss_∑ckë
();

91 
Æloc_agg
(
tu∂e_t
 &
agg
, c⁄° * 
key
);

	@include/qpipe/stages/hash_join.h

31 #i‚de‡
__QPIPE_HASH_JOIN_STAGE_H


32 
	#__QPIPE_HASH_JOIN_STAGE_H


	)

34 
	~"qpùe/c‹e.h
"

35 
	~"utû/hashèbÀ.h
"

37 #i‡
deföed
(
löux
Ë|| deföed(
__löux
)

38 
	~<ext/hash_£t
>

41 
	~<°rög
>

43 
usög
 
	g°d
::
°rög
;

44 
usög
 
	g°d
::
ve˘‹
;

47 
ENTER_NAMESPACE
(
qpùe
);

50 
	#HASH_JOIN_STAGE_NAME
 "HASH_JOIN"

	)

51 
	#HASH_JOIN_PACKET_TYPE
 "HASH_JOIN"

	)

60 ˛as†
	chash_joö_∑ckë_t
 : 
public
 
∑ckë_t
 {

62 
public
:

63 c⁄° 
c_°r
 
PACKET_TYPE
;

65 
	mgu¨d
<
	m∑ckë_t
> 
	m_À·
;

66 
	mgu¨d
<
	m∑ckë_t
> 
	m_right
;

67 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_À·_buf„r
;

68 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_right_buf„r
;

70 
	mgu¨d
<
	mtu∂e_joö_t
> 
	m_joö
;

71 
boﬁ
 
	m_ouãr
;

72 
boﬁ
 
	m_di°ö˘
;

74 
	mcou¡_out
;

75 
	mcou¡_À·
;

76 
	mcou¡_right
;

108 
	$hash_joö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

109 
tu∂e_fifo
* 
out_buf„r
,

110 
tu∂e_fûãr_t
 *
ouçut_fûãr
,

111 
∑ckë_t
* 
À·
,

112 
∑ckë_t
* 
right
,

113 
tu∂e_joö_t
 *
joö
,

114 
boﬁ
 
ouãr
=
Ál£
,

115 
boﬁ
 
di°ö˘
=
Ál£
)

116 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
ouçut_fûãr
,

117 
	`¸óã_∂™
(
ouçut_fûãr
, 
joö
, 
ouãr
, 
di°ö˘
, 
À·
, 
right
),

118 
åue
,

119 
åue


121 
	`_À·
(
À·
),

122 
	`_right
(
right
),

123 
	`_À·_buf„r
(
À·
->
	`ouçut_buf„r
()),

124 
	`_right_buf„r
(
right
->
	`ouçut_buf„r
()),

125 
	`_joö
(
joö
),

126 
	`_ouãr
(
ouãr
), 
	$_di°ö˘
(
di°ö˘
)

130 
quîy_∂™
* 
	$¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_joö_t
* 
joö
,

131 
boﬁ
 
ouãr
, boﬁ 
di°ö˘
,

132 
∑ckë_t
* 
À·
,Öackë_t* 
right
)

134 
c_°r
 
	`a˘i⁄
("%s:%s:%d:%d", 
PACKET_TYPE
.
	`d©a
(),

135 
joö
->
	`to_°rög
().
	`d©a
(), 
ouãr
, 
di°ö˘
);

137 
quîy_∂™
 c⁄°** 
chûdªn
 = 
√w
 query_plan const*[2];

138 
chûdªn
[0] = 
À·
->
	`∂™
();

139 
chûdªn
[1] = 
right
->
	`∂™
();

140  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
chûdªn
, 2);

141 
	}
}

143 
vútuÆ
 
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

144 
de˛¨e
->
	`de˛¨e
(
_∑ckë_ty≥
, 1);

145 
_À·
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

146 
_right
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

147 
	}
}

156 ˛as†
	chash_joö_°age_t
 : 
public
 
°age_t
 {

159 
¥iv©e
:

168 
	sexåa˘key_t
 {

170 
tu∂e_joö_t
 *
_joö
;

171 
boﬁ
 
	m_right
;

173 
exåa˘key_t
(
tu∂e_joö_t
 *
joö
, 
boﬁ
 
right
)

174 : 
_joö
(
joö
)

175 , 
_right
(
right
)

179 c⁄° * c⁄° 
›î©‹
()(c⁄° * 
	mvÆue
) const {

180  
	m_right
 ? 
	m_joö
->
right_key_byãs
(
vÆue
Ë: 
_joö
->
À·_key_byãs
(value);

187 
	sequÆbyãs_t
 {

189 
size_t
 
	g_Àn
;

190 
equÆbyãs_t
(
size_t
 
Àn
)

191 : 
_Àn
(
Àn
)

195 
boﬁ
 
›î©‹
()(c⁄° *
k1
, c⁄° *
	gk2
) const {

196  !
memcmp
(
k1
, 
k2
, 
_Àn
);

201 
	shashf˙_t
 {

203 
size_t
 
	g_Àn
;

204 
hashf˙_t
(
size_t
 
Àn
)

205 : 
_Àn
(
Àn
)

209 
size_t
 
›î©‹
()(c⁄° *
key
) const {

210  
‚v_hash
(
key
, 
_Àn
);

214 
	ghashèbÀ
<*,

216 
	texåa˘key_t
,

217 
	tequÆbyãs_t
,

218 
	tequÆbyãs_t
,

219 
	thashf˙_t
> 
	ttu∂e_hash_t
;

224 
	s∑πôi⁄_t
 {

226 
∑ge
* 
	g_∑ge
;

227 
	gsize
;

228 
FILE
 *
	gfûe
;

229 
c_°r
 
	gfûe_«me1
;

230 
c_°r
 
	gfûe_«me2
;

232 
∑πôi⁄_t
()

233 : 
_∑ge
(
NULL
), 
size
(0), 
fûe
(NULL)

239 
	g°d
::
	tve˘‹
<
	t∑πôi⁄_t
> 
	t∑πôi⁄_li°_t
;

242 
	sÀ·_a˘i⁄_t
 {

243 
›î©‹
 ()(
	g∑πôi⁄_li°_t
::
ôî©‹
 
ô
) {

244 
ô
->
fûe
 = 
NULL
;

249 
	sright_a˘i⁄_t
 {

250 
size_t
 
	g_À·_tu∂e_size
;

251 
right_a˘i⁄_t
(
size_t
 
À·_tu∂e_size
)

252 : 
_À·_tu∂e_size
(
À·_tu∂e_size
)

255 
›î©‹
()(
∑πôi⁄_li°_t
::
ôî©‹
 
ô
) {

257 
ô
->
fûe
 = 
¸óã_tmp_fûe
(ô->
fûe_«me2
, "hash-join-left");

260 
	gô
->
	g_∑ge
 = 
∑ge
::
Æloc
(
_À·_tu∂e_size
);

268 
	g∑ge_quŸa
;

269 
	g∑ge_cou¡
;

270 
tu∂e_joö_t
 *
	g_joö
;

271 
∑πôi⁄_li°_t
 
	g∑πôi⁄s
;

276 
ã°_ovîÊow
(
∑πôi⁄
);

278 
	gãm∂©e
<
˛ass
 
	gA˘i⁄
>

279 
˛o£_fûe
(
∑πôi⁄_li°_t
::
ôî©‹
 
ô
, 
A˘i⁄
 
a
);

283 
	gpublic
:

285 
hash_joö_∑ckë_t
 
	t°age_∑ckë_t
;

287 c⁄° 
c_°r
 
	gDEFAULT_STAGE_NAME
;

290 
vútuÆ
 
¥o˚ss_∑ckë
();

294 
	$hash_joö_°age_t
()

295 : 
	`∑ge_quŸa
(10000)

296 , 
	`∑ge_cou¡
(0)

297 , 
	$∑πôi⁄s
(512)

299 
	}
}

301 ~
	$hash_joö_°age_t
() {

302 
	}
}

307 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/merge.h

24 #i‚de‡
__QPIPE_MERGE_H


25 
	#__QPIPE_MERGE_H


	)

27 
	~"qpùe/c‹e.h
"

29 
	~<ve˘‹
>

31 
usög
 
	g°d
::
ve˘‹
;

35 
usög
 
«me•a˚
 
	gqpùe
;

42 
	gmîge_∑ckë_t
 : 
public
 
∑ckë_t
 {

44 c⁄° 
c_°r
 
PACKET_TYPE
;

45 
	g°d
::
	tve˘‹
<
	ttu∂e_fifo
*> 
	tbuf„r_li°_t
;

47 
buf„r_li°_t
 
	g_öput_buf„rs
;

48 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘
;

49 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

82 
mîge_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

83 
tu∂e_fifo
* 
ouçut_buf„r
,

84 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

85 c⁄° 
buf„r_li°_t
& 
öput_buf„rs
,

86 
key_exåa˘‹_t
* 
exåa˘
,

87 
key_com∑ª_t
* 
com∑ª
)

88 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
, 
NULL
,

89 
Ál£
,

90 
Ál£


92 
_öput_buf„rs
(
öput_buf„rs
),

93 
_exåa˘
(
exåa˘
),

94 
_com∑ª
(
com∑ª
)

98 ~
mîge_∑ckë_t
() {

99 
	gbuf„r_li°_t
::
ôî©‹
 
ô
=
_öput_buf„rs
.
begö
();

100 
	gô
 !
_öput_buf„rs
.
íd
())

101 
dñëe
 *
ô
++;

104 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
*) {

116 ˛as†
	cmîge_°age_t
 : 
public
 
°age_t
 {

118 
¥iv©e
:

120 
	sbuf„r_hód_t
 {

122 
buf„r_hód_t
* 
√xt
;

123 
tu∂e_fifo
* 
	mbuf„r
;

124 
key_exåa˘‹_t
* 
	m_exåa˘
;

125 
	m¨øy_gu¨d_t
<> 
	md©a
;

126 
tu∂e_t
 
	mtu∂e
;

127 
höt_tu∂e_∑ú_t
 
	môem
;

128 
buf„r_hód_t
() { }

129 
boﬁ
 
öô
(
tu∂e_fifo
* 
buf
, 
key_exåa˘‹_t
* 
c
);

130 
boﬁ
 
has_tu∂e
();

133 
buf„r_hód_t
* 
	g_hód_li°
;

134 
key_com∑ª_t
* 
	g_com∑ª
;

135 
key_exåa˘‹_t
* 
	g_exåa˘
;

137 
	gpublic
:

139 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

140 
mîge_∑ckë_t
 
	t°age_∑ckë_t
;

142 
	$mîge_°age_t
()

143 : 
	$_hód_li°
(
NULL
)

145 
	}
}

147 
¥Ÿe˘ed
:

149 
vútuÆ
 
¥o˚ss_∑ckë
();

151 
	g¥iv©e
:

153 
ö£π_s‹ãd
(
buf„r_hód_t
* 
hód
);

154 
com∑ª
(c⁄° 
höt_tu∂e_∑ú_t
 &
a
, c⁄° höt_tu∂e_∑ú_à&
b
);

	@include/qpipe/stages/partial_aggregate.h

24 #i‚de‡
__QPIPE_PARTIAL_AGGREGATE_H


25 
	#__QPIPE_PARTIAL_AGGREGATE_H


	)

27 
	~"qpùe/c‹e.h
"

29 
	~<£t
>

31 
usög
 
«me•a˚
 
	gqpùe
;

33 
	g∑πül_aggªg©e_∑ckë_t
 : 
public
 
∑ckë_t
 {

34 c⁄° 
c_°r
 
PACKET_TYPE
;

35 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

36 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

37 
	ggu¨d
<
	gtu∂e_aggªg©e_t
> 
	g_aggªg©e
;

38 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘‹
;

39 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

41 
∑πül_aggªg©e_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

42 
tu∂e_fifo
* 
out_buf„r
,

43 
tu∂e_fûãr_t
* 
out_fûãr
,

44 
∑ckë_t
* 
öput
,

45 
tu∂e_aggªg©e_t
 *
aggªg©e
,

46 
key_exåa˘‹_t
* 
exåa˘‹
,

47 
key_com∑ª_t
* 
com∑ª
)

48 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
out_fûãr
,

49 
¸óã_∂™
(
out_fûãr
, 
aggªg©e
, 
exåa˘‹
, 
öput
->
∂™
()),

50 
åue
,

51 
åue


53 
_öput
(
öput
), 
_öput_buf„r
(öput->
ouçut_buf„r
()),

54 
_aggªg©e
(
aggªg©e
), 
_exåa˘‹
(
exåa˘‹
), 
_com∑ª
(
com∑ª
)

59 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_aggªg©e_t
* 
agg
,

60 
key_exåa˘‹_t
* 
key
, 
quîy_∂™
 c⁄°* 
chûd
)

62 
c_°r
 
a˘i⁄
("%s:%s:%s", 
PACKET_TYPE
.
d©a
(),

63 
agg
->
to_°rög
().
d©a
(), 
key
->to_string().data());

65 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

66 
	gchûdªn
[0] = 
chûd
;

67  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

70 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

71 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

72 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

78 ˛as†
	c∑πül_aggªg©e_°age_t
 : 
public
 
°age_t
 {

79 
°d
::
	t£t
<
	thöt_tu∂e_∑ú_t
, 
	ttu∂e_Àss_t
> 
	ttu∂e_£t_t
;

81 
∑ge_åash_°ack
 
	m_∑ge_li°
;

82 
size_t
 
	m_∑ge_cou¡
;

83 
tu∂e_aggªg©e_t
* 
	m_aggªg©e
;

84 
	mqpùe
::
∑ge
* 
_agg_∑ge
;

85 
size_t
 
	m_tu∂e_Æign
;

86 
	mpublic
:

87 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

88 
∑πül_aggªg©e_∑ckë_t
 
	t°age_∑ckë_t
;

90 
	m¥Ÿe˘ed
:

91 
vútuÆ
 
¥o˚ss_∑ckë
();

92 
Æloc_agg
(
höt_tu∂e_∑ú_t
 &
agg
, c⁄° * 
key
);

	@include/qpipe/stages/pipe_hash_join.h

31 #i‚de‡
__QPIPE_PIPE_HASH_JOIN_STAGE_H


32 
	#__QPIPE_PIPE_HASH_JOIN_STAGE_H


	)

34 
	~"qpùe/c‹e.h
"

36 
	~<°rög
>

38 
usög
 
	g°d
::
°rög
;

39 
usög
 
	g°d
::
ve˘‹
;

42 
ENTER_NAMESPACE
(
qpùe
);

44 
	#PIPE_HASH_JOIN_STAGE_NAME
 "PIPE_HASH_JOIN"

	)

45 
	#PIPE_HASH_JOIN_PACKET_TYPE
 "PIPE_HASH_JOIN"

	)

53 ˛as†
	cpùe_hash_joö_∑ckë_t
 : 
public
 
∑ckë_t
 {

55 
public
:

56 c⁄° 
c_°r
 
PACKET_TYPE
;

58 
	mgu¨d
<
	m∑ckë_t
> 
	m_À·
;

59 
	mgu¨d
<
	m∑ckë_t
> 
	m_right
;

60 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_À·_buf„r
;

61 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_right_buf„r
;

63 
	mgu¨d
<
	mtu∂e_joö_t
> 
	m_joö
;

65 
	mcou¡_out
;

66 
	mcou¡_À·
;

67 
	mcou¡_right
;

99 
	$pùe_hash_joö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

100 
tu∂e_fifo
* 
out_buf„r
,

101 
tu∂e_fûãr_t
 *
ouçut_fûãr
,

102 
∑ckë_t
* 
À·
,

103 
∑ckë_t
* 
right
,

104 
tu∂e_joö_t
 *
joö
)

106 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
ouçut_fûãr
,

107 
	`¸óã_∂™
(
ouçut_fûãr
, 
joö
, 
À·
, 
right
),

108 
åue
,

109 
åue


111 
	`_À·
(
À·
),

112 
	`_right
(
right
),

113 
	`_À·_buf„r
(
À·
->
	`ouçut_buf„r
()),

114 
	`_right_buf„r
(
right
->
	`ouçut_buf„r
()),

115 
	$_joö
(
joö
)

119 
quîy_∂™
* 
	$¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_joö_t
* 
joö
,

120 
∑ckë_t
* 
À·
,Öackë_t* 
right
)

122 
c_°r
 
	`a˘i⁄
("%s:%s", 
PACKET_TYPE
.
	`d©a
(),

123 
joö
->
	`to_°rög
().
	`d©a
());

125 
quîy_∂™
 c⁄°** 
chûdªn
 = 
√w
 query_plan const*[2];

126 
chûdªn
[0] = 
À·
->
	`∂™
();

127 
chûdªn
[1] = 
right
->
	`∂™
();

128  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
chûdªn
, 2);

129 
	}
}

131 
vútuÆ
 
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

132 
de˛¨e
->
	`de˛¨e
(
_∑ckë_ty≥
, 1);

133 
_À·
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

134 
_right
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

135 
	}
}

144 ˛as†
	cpùe_hash_joö_°age_t
 : 
public
 
°age_t
 {

147 
¥iv©e
:

153 
tu∂e_joö_t
 *
_joö
;

157 
	mpublic
:

159 
pùe_hash_joö_∑ckë_t
 
	t°age_∑ckë_t
;

161 c⁄° 
c_°r
 
	mDEFAULT_STAGE_NAME
;

164 
vútuÆ
 
¥o˚ss_∑ckë
();

170 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/register_stage_containers.h

30 #i‚de‡
__QPIPE_REGISTER_STAGE_CONTAINERS_H


31 
	#__QPIPE_REGISTER_STAGE_CONTAINERS_H


	)

33 
	~"qpùe/c‹e.h
"

35 
ENTER_NAMESPACE
(
qpùe
);

37 
	gãm∂©e
 <
˛ass
 
	gSège
>

38 
	$ªgi°î_°age
(
w‹kî_thªads
=10, 
boﬁ
 
o•
=
åue
)

40 
°age_c⁄èöî_t
* 
sc
;

41 
c_°r
 
	`«me
("%s_CONTAINER", 
Sège
::
DEFAULT_STAGE_NAME
.
	`d©a
());

42 
sc
 = 
√w
 
	`°age_c⁄èöî_t
(
«me
,Çew 
°age_Á˘‹y
<
Sège
>, 
w‹kî_thªads
);

43 
di•©chî_t
::
	`ªgi°î_°age_c⁄èöî
(
Sège
::
°age_∑ckë_t
::
PACKET_TYPE
.
	`d©a
(), 
sc
, 
o•
);

44 
	}
}

46 
ªgi°î_°age_c⁄èöîs
();

49 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/sieve.h

24 #i‚de‡
__QPIPE_SIEVE_H


25 
	#__QPIPE_SIEVE_H


	)

27 
	~<c°dio
>

28 
	~"utû.h
"

29 
	~"qpùe/c‹e.h
"

31 
usög
 
«me•a˚
 
	gqpùe
;

35 
	gsõve_∑ckë_t
 : 
public
 
∑ckë_t
 {

37 c⁄° 
c_°r
 
PACKET_TYPE
;

39 
	ggu¨d
<
	gtu∂e_sõve_t
> 
	g_sõve
;

40 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

41 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

43 
sõve_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

44 
tu∂e_fifo
* 
ouçut_buf„r
,

45 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

46 
tu∂e_sõve_t
* 
sõve
,

47 
∑ckë_t
* 
öput
)

48 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

49 
¸óã_∂™
(
ouçut_fûãr
, 
sõve
, 
öput
->
∂™
()),

50 
åue
,

51 
åue


53 
_sõve
(
sõve
),

54 
_öput
(
öput
),

55 
_öput_buf„r
(
öput
->
ouçut_buf„r
())

57 
as£π
(
_öput
 !
NULL
);

58 
as£π
(
_öput_buf„r
 !
NULL
);

61 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_sõve_t
* 
sõve
,

62 
quîy_∂™
 c⁄°* 
chûd
)

64 
c_°r
 
a˘i⁄
("%s:%s", 
PACKET_TYPE
.
d©a
(), 
sõve
->
to_°rög
().data());

65 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

66 
	gchûdªn
[0] = 
chûd
;

67  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

70 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

71 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

72 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

78 ˛as†
	csõve_°age_t
 : 
public
 
°age_t
 {

80 
public
:

82 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

83 
sõve_∑ckë_t
 
	t°age_∑ckë_t
;

85 
	$sõve_°age_t
() { }

86 ~
	$sõve_°age_t
(Ë{ 
	}
}

88 
	g¥Ÿe˘ed
:

90 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/sort.h

24 #i‚de‡
__QPIPE_SORT_H


25 
	#__QPIPE_SORT_H


	)

27 
	~"qpùe/°ages/mîge.h
"

28 
	~"qpùe/c‹e.h
"

30 
	~<li°
>

31 
	~<m≠
>

32 
	~<deque
>

36 
usög
 
«me•a˚
 
	gqpùe
;

37 
usög
 
«me•a˚
 
	g°d
;

48 
	gs‹t_∑ckë_t
 : 
public
 
∑ckë_t
 {

50 
public
:

52 c⁄° 
c_°r
 
PACKET_TYPE
;

55 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_exåa˘
;

56 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

57 
	ggu¨d
<
	g∑ckë_t
> 
	g_öput
;

58 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_öput_buf„r
;

90 
s‹t_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

91 
tu∂e_fifo
* 
ouçut_buf„r
,

92 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

93 
key_exåa˘‹_t
* 
exåa˘
,

94 
key_com∑ª_t
* 
com∑ª
,

95 
∑ckë_t
* 
öput
)

96 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

97 
¸óã_∂™
(
ouçut_fûãr
, 
exåa˘
, 
öput
),

98 
åue
,

99 
åue


101 
_exåa˘
(
exåa˘
), 
_com∑ª
(
com∑ª
),

102 
_öput
(
öput
),

103 
_öput_buf„r
(
öput
->
ouçut_buf„r
())

105 
as£π
(
_öput
 !
NULL
);

106 
as£π
(
_öput_buf„r
 !
NULL
);

109 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
,

110 
key_exåa˘‹_t
* 
key
, 
∑ckë_t
* 
öput
)

112 
c_°r
 
a˘i⁄
("%s:%s", 
PACKET_TYPE
.
d©a
(), 
key
->
to_°rög
().data());

114 
quîy_∂™
 c⁄°** 
	gchûdªn
 = 
√w
 query_plan const*[1];

115 
	gchûdªn
[0] = 
öput
->
∂™
();

116  
√w
 
quîy_∂™
(
a˘i⁄
, 
fûãr
->
to_°rög
(), 
chûdªn
, 1);

119 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

122 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

124 
	g_öput
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

134 ˛as†
	cs‹t_°age_t
 : 
public
 
°age_t
 {

136 
¥iv©e
:

139 c⁄° 
MERGE_FACTOR
;

140 c⁄° 
	mPAGES_PER_INITIAL_SORTED_RUN
;

144 
tu∂e_fifo
* 
	m_öput_buf„r
;

145 
key_exåa˘‹_t
* 
	m_exåa˘
;

146 
key_com∑ª_t
* 
	m_com∑ª
;

147 
size_t
 
	m_tu∂e_size
;

150 
	mli°
<
	tc_°r
> 
	trun_li°_t
;

154 
	smîge_t
 {

155 
c_°r
 
	m_ouçut
;

156 
run_li°_t
 
	m_öputs
;

157 
tu∂e_fifo
* 
	m_sig«l_buf„r
;

159 
mîge_t
 () { }

160 
mîge_t
(c⁄° 
c_°r
 &
ouçut
, c⁄° 
run_li°_t
 &
öputs
, 
tu∂e_fifo
 * 
sig«l_buf„r
)

161 : 
_ouçut
(
ouçut
),

162 
_öputs
(
öputs
),

163 
_sig«l_buf„r
(
sig«l_buf„r
)

169 
	g°d
::
	tm≠
<, 
	trun_li°_t
> 
	trun_m≠_t
;

170 
	g°d
::
	tli°
<
	tmîge_t
> 
	tmîge_li°_t
;

171 
	g°d
::
	tm≠
<, 
	tmîge_li°_t
> 
	tmîge_m≠_t
;

172 
	gmîge_∑ckë_t
::
	tbuf„r_li°_t
 buffer_list_t;

173 
	g°d
::
	tve˘‹
<
	thöt_tu∂e_∑ú_t
> 
	thöt_ve˘‹_t
;

177 
±hªad_t
 
	g_m⁄ô‹_thªad
;

178 
nŸify_t
 
	g_m⁄ô‹
;

181 vﬁ©ûê
boﬁ
 
	g_s‹tög_föished
;

185 
run_m≠_t
 
	g_run_m≠
;

186 
mîge_m≠_t
 
	g_mîge_m≠
;

188 
	gpublic
:

190 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

191 
s‹t_∑ckë_t
 
	t°age_∑ckë_t
;

194 
	$s‹t_°age_t
()

195 : 
	`_öput_buf„r
(
NULL
), 
	`_exåa˘
(NULL), 
	`_com∑ª
(NULL),

196 
	`_tu∂e_size
(0), 
	$_m⁄ô‹_thªad
(0)

198 
	}
}

201 ~
	$s‹t_°age_t
() {

206 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_m⁄ô‹
.
_lock
);

207 if(
_m⁄ô‹_thªad
) {

208 
thªad_joö
<>(
_m⁄ô‹_thªad
);

214 
mîge_m≠_t
::
ôî©‹
 
Àvñ_ô
=
_mîge_m≠
.
	`begö
();

215 
Àvñ_ô
 !
_mîge_m≠
.
	`íd
()) {

216 
mîge_li°_t
::
ôî©‹
 
ô
 = 
Àvñ_ô
->
£c⁄d
.
	`begö
();

217 
ô
 !
Àvñ_ô
->
£c⁄d
.
	`íd
()) {

218 
	`ªmove_öput_fûes
(
ô
->
_öputs
);

219 ++
ô
;

221 ++
Àvñ_ô
;

223 
	}
}

225 
	g¥Ÿe˘ed
:

227 
vútuÆ
 
¥o˚ss_∑ckë
();

229 
	g¥iv©e
:

231 
boﬁ
 
föÆ_mîge_ªady
();

232 
¸óã_s‹ãd_run
(
∑ge_cou¡
);

234 
tu∂e_fifo
* 
m⁄ô‹_mîge_∑ckës
();

236 
check_föished_mîges
();

237 
°¨t_√w_mîges
();

238 
°¨t_mîge
(
√w_Àvñ
, 
run_li°_t
& 
runs
, 
mîge_Á˘‹
);

239 
ªmove_öput_fûes
(
run_li°_t
& 
fûes
);

242 
¥öt_runs
();

243 
¥öt_mîges
();

	@include/qpipe/stages/sort_merge_join.h

28 #i‚de‡
__QPIPE_SORT_MERGE_JOIN_STAGE_H


29 
	#__QPIPE_SORT_MERGE_JOIN_STAGE_H


	)

31 
	~"qpùe/c‹e.h
"

33 
	~<°rög
>

35 
usög
 
	g°d
::
°rög
;

36 
usög
 
	g°d
::
ve˘‹
;

39 
ENTER_NAMESPACE
(
qpùe
);

42 
	#HASH_JOIN_STAGE_NAME
 "SORT_MERGE_JOIN"

	)

43 
	#HASH_JOIN_PACKET_TYPE
 "SORT_MERGE_JOIN"

	)

52 ˛as†
	cs‹t_mîge_joö_∑ckë_t
 : 
public
 
∑ckë_t
 {

54 
public
:

55 c⁄° 
c_°r
 
PACKET_TYPE
;

57 
	mgu¨d
<
	m∑ckë_t
> 
	m_À·
;

58 
	mgu¨d
<
	m∑ckë_t
> 
	m_right
;

59 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_À·_buf„r
;

60 
	mgu¨d
<
	mtu∂e_fifo
> 
	m_right_buf„r
;

61 
	mgu¨d
<
	mkey_com∑ª_t
> 
	m_com∑ª
;

62 
	mgu¨d
<
	mtu∂e_joö_t
> 
	m_joö
;

103 
	$s‹t_mîge_joö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

104 
tu∂e_fifo
* 
out_buf„r
,

105 
tu∂e_fûãr_t
 *
ouçut_fûãr
,

106 
∑ckë_t
* 
À·
,

107 
∑ckë_t
* 
right
,

108 
tu∂e_joö_t
 *
joö
,

109 
key_com∑ª_t
* 
com∑ª
)

110 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
ouçut_fûãr
,

111 
	`¸óã_∂™
(
ouçut_fûãr
, 
joö
, 
Ál£
, fÆ£, 
À·
, 
right
),

112 
åue
,

113 
åue


115 
	`_À·
(
À·
),

116 
	`_right
(
right
),

117 
	`_À·_buf„r
(
À·
->
	`ouçut_buf„r
()),

118 
	`_right_buf„r
(
right
->
	`ouçut_buf„r
()),

119 
	`_joö
(
joö
),

120 
	$_com∑ª
(
com∑ª
)

124 
quîy_∂™
* 
	$¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
tu∂e_joö_t
* 
joö
,

125 
boﬁ
 
ouãr
, boﬁ 
di°ö˘
,

126 
∑ckë_t
* 
À·
,Öackë_t* 
right
)

128 
c_°r
 
	`a˘i⁄
("%s:%s:%d:%d", 
PACKET_TYPE
.
	`d©a
(),

129 
joö
->
	`to_°rög
().
	`d©a
(), 
ouãr
, 
di°ö˘
);

131 
quîy_∂™
 c⁄°** 
chûdªn
 = 
√w
 query_plan const*[2];

132 
chûdªn
[0] = 
À·
->
	`∂™
();

133 
chûdªn
[1] = 
right
->
	`∂™
();

134  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
chûdªn
, 2);

135 
	}
}

137 
vútuÆ
 
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

138 
de˛¨e
->
	`de˛¨e
(
_∑ckë_ty≥
, 1);

139 
_À·
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

140 
_right
->
	`de˛¨e_w‹kî_√eds
(
de˛¨e
);

141 
	}
}

150 ˛as†
	cs‹t_mîge_joö_°age_t
 : 
public
 
°age_t
 {

153 
¥iv©e
:

157 
tu∂e_joö_t
* 
_joö
;

158 
key_com∑ª_t
* 
	m_com∑ª
;

161 
	mpublic
:

163 
s‹t_mîge_joö_∑ckë_t
 
	t°age_∑ckë_t
;

165 c⁄° 
c_°r
 
	mDEFAULT_STAGE_NAME
;

168 
vútuÆ
 
¥o˚ss_∑ckë
();

172 
	$s‹t_mîge_joö_°age_t
()

176 ~
	$s‹t_mîge_joö_°age_t
() {

177 
	}
}

182 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/sorted_in.h

24 #i‚de‡
__QPIPE_SORTED_IN_H


25 
	#__QPIPE_SORTED_IN_H


	)

27 
	~"qpùe/c‹e.h
"

29 
usög
 
«me•a˚
 
	gqpùe
;

31 
	gs‹ãd_ö_∑ckë_t
 : 
public
 
∑ckë_t
 {

32 c⁄° 
c_°r
 
PACKET_TYPE
;

33 
	ggu¨d
<
	g∑ckë_t
> 
	g_À·
;

34 
	ggu¨d
<
	g∑ckë_t
> 
	g_right
;

35 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_À·_öput
;

36 
	ggu¨d
<
	gtu∂e_fifo
> 
	g_right_öput
;

37 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_À·_exåa˘‹
;

38 
	ggu¨d
<
	gkey_exåa˘‹_t
> 
	g_right_exåa˘‹
;

39 
	ggu¨d
<
	gkey_com∑ª_t
> 
	g_com∑ª
;

40 
boﬁ
 
	g_ªje˘_m©ches
;

42 
s‹ãd_ö_∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

43 
tu∂e_fifo
* 
out_buf„r
,

44 
tu∂e_fûãr_t
* 
out_fûãr
,

45 
∑ckë_t
* 
À·
,Öackë_t* 
right
,

46 
key_exåa˘‹_t
* 
À·_exåa˘‹
,

47 
key_exåa˘‹_t
* 
right_exåa˘‹
,

48 
key_com∑ª_t
* 
com∑ª
, 
boﬁ
 
ªje˘_m©ches
)

49 : 
∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
out_buf„r
, 
out_fûãr
, 
NULL
,

50 
Ál£
,

51 
åue


53 
_À·
(
À·
), 
_right
(
right
),

54 
_À·_öput
(
À·
->
ouçut_buf„r
()),

55 
_right_öput
(
right
->
ouçut_buf„r
()),

56 
_À·_exåa˘‹
(
À·_exåa˘‹
),

57 
_right_exåa˘‹
(
right_exåa˘‹
),

58 
_com∑ª
(
com∑ª
), 
_ªje˘_m©ches
(
ªje˘_m©ches
)

62 
vútuÆ
 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
) {

63 
	gde˛¨e
->
de˛¨e
(
_∑ckë_ty≥
, 1);

64 
	g_À·
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

65 
	g_right
->
de˛¨e_w‹kî_√eds
(
de˛¨e
);

69 
	gs‹ãd_ö_°age_t
 : 
public
 
°age_t
 {

70 c⁄° 
c_°r
 
DEFAULT_STAGE_NAME
;

71 
s‹ãd_ö_∑ckë_t
 
	t°age_∑ckë_t
;

72 
	g¥Ÿe˘ed
:

73 
vútuÆ
 
¥o˚ss_∑ckë
();

	@include/qpipe/stages/tscan.h

32 #i‚de‡
__QPIPE_TSCAN_H


33 
	#__QPIPE_TSCAN_H


	)

35 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

37 
	~"qpùe/c‹e/tu∂e_fifo.h
"

38 
	~"qpùe/c‹e.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
qpùe
);

51 
	gtsˇn_∑ckë_t
 : 
public
 
∑ckë_t


53 
ss_m
* 
_db
;

54 
èbÀ_desc_t
* 
	g_èbÀ
;

55 
x˘_t
* 
	g_x˘
;

56 
lock_mode_t
 
	g_lm
;

58 c⁄° 
c_°r
 
	gPACKET_TYPE
;

86 
tsˇn_∑ckë_t
(c⁄° 
c_°r
& 
∑ckë_id
,

87 
tu∂e_fifo
* 
ouçut_buf„r
,

88 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

89 
ss_m
* 
db
,

90 
èbÀ_desc_t
* 
èbÀ
,

91 
x˘_t
* 
px˘
,

92 
lock_mode_t
 
lm
=
SH
);

94 
quîy_∂™
* 
¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
, 
èbÀ_desc_t
* 
fûe
);

95 
de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
);

107 ˛as†
	ctsˇn_°age_t
 : 
public
 
°age_t


109 
public
:

111 
tsˇn_∑ckë_t
 
	t°age_∑ckë_t
;

112 c⁄° 
c_°r
 
	mDEFAULT_STAGE_NAME
;

114 c⁄° 
size_t
 
	mTSCAN_BULK_READ_BUFFER_SIZE
;

116 
	$tsˇn_°age_t
() { }

117 ~
	$tsˇn_°age_t
(Ë{ 
	}
}

119 
	g¥Ÿe˘ed
:

121 
vútuÆ
 
¥o˚ss_∑ckë
();

126 
EXIT_NAMESPACE
(
qpùe
);

	@include/qpipe/stages/tuple_source.h

24 #i‚de‡
__QPIPE_TUPLE_SOURCE_H


25 
	#__QPIPE_TUPLE_SOURCE_H


	)

27 
	~"qpùe/c‹e.h
"

28 
	~<c°dlib
>

31 
usög
 
«me•a˚
 
	gqpùe
;

33 ˛as†
	ctu∂e_sour˚_t
 {

35 
	mpublic
:

43 
vútuÆ
 
∑ckë_t
* 
ª£t
()=0;

45 
vútuÆ
 
size_t
 
tu∂e_size
()=0;

47 
	mvútuÆ
 ~
	$tu∂e_sour˚_t
() { }

48 
	}
};

	@include/shore.h

32 #i‚de‡
__SHORE_H


33 
	#__SHORE_H


	)

35 
	~"sm/sh‹e/comm⁄.h
"

36 
	~"sm/sh‹e/sh‹e_ªqs.h
"

37 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

38 
	~"sm/sh‹e/§mwqueue.h
"

40 
	~"sm/sh‹e/sh‹e_îr‹.h
"

41 
	~"sm/sh‹e/sh‹e_toﬁs.h
"

42 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

43 
	~"sm/sh‹e/sh‹e_fõld.h
"

44 
	~"sm/sh‹e/sh‹e_ödex.h
"

45 
	~"sm/sh‹e/sh‹e_ôî.h
"

46 
	~"sm/sh‹e/sh‹e_msg.h
"

47 
	~"sm/sh‹e/sh‹e_row.h
"

48 
	~"sm/sh‹e/sh‹e_row_ˇche.h
"

49 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

50 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

51 
	~"sm/sh‹e/sh‹e_desc_s‹t_buf.h
"

52 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

53 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

54 
	~"sm/sh‹e/sh‹e_ív.h
"

56 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

57 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

58 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

59 
	~"sm/sh‹e/sh‹e_shñl.h
"

	@include/sm/shore/common.h

32 #i‚de‡
__SHORE_COMMON_H


33 
	#__SHORE_COMMON_H


	)

35 
	~"sm_vas.h
"

37 
	~"utû/«me•a˚.h
"

41 
ENTER_NAMESPACE
(
sh‹e
);

46 
˛ass
 
	gba£_w‹kî_t
;

47 
˛ass
 
	gba£_a˘i⁄_t
;

65 
	eeW‹kîC⁄åﬁ
 { 
	mWC_PAUSED
 = 0x1,

66 
	mWC_ACTIVE
 = 0x2,

67 
	mWC_STOPPED
 = 0x4,

68 
	mWC_RECOVERY
 = 0x8

89 
	eeW‹kögSèã
 { 
	mWS_UNDEF
 = 0x1,

90 
	mWS_LOOP
 = 0x2,

91 
	mWS_SLEEP
 = 0x4,

92 
	mWS_COMMIT_Q
 = 0x8,

93 
	mWS_INPUT_Q
 = 0x10,

94 
	mWS_FINISHED
 = 0x20

106 
	eeD©aOw√rSèã
 { 
	mDOS_UNDEF
 = 0x1,

107 
	mDOS_ALONE
 = 0x2,

108 
	mDOS_MULTIPLE
 = 0x4

113 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_asc_sort_buf.h

33 #i‚de‡ 
__SHORE_ASC_SORT_BUF_H


34 
	#__SHORE_ASC_SORT_BUF_H


	)

36 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

39 
ENTER_NAMESPACE
(
sh‹e
);

58 
˛ass
 
	gasc_s‹t_ôî_im∂
;

69 ˛as†
	casc_s‹t_buf„r_t
 : 
public
 
èbÀ_desc_t


71 
public
:

73 
	$asc_s‹t_buf„r_t
(c⁄° 
uöt_t
 
fõld_cou¡
)

74 : 
	`èbÀ_desc_t
("ASC_SORT_BUF", 
fõld_cou¡
, 
PD_NORMAL
)

78 ~
	$asc_s‹t_buf„r_t
()

80 
	}
}

83 
	$£tup
(c⁄° 
uöt_t
 
ödex
, 
sq…y≥_t
 
ty≥
, c⁄° 
Àn
 = 0)

85 
	`as£π
(
ödex
<
_fõld_cou¡
);

86 
_desc
[
ödex
].
	`£tup
(
ty≥
, "", 
Àn
);

87 
	`as£π
(!
_desc
[
ödex
].
	`is_v¨übÀ_Àngth
());

88 
	`as£π
(!
_desc
[
ödex
].
	`Ælow_nuŒ
());

89 
	}
}

104 
˛ass
 
	gasc_s‹t_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
asc_s‹t_buf„r_t
>

106 
èbÀ_row_t
 
	ts‹ãr_tu∂e
;

107 
‰õnd
 
˛ass
 
	gasc_s‹t_ôî_im∂
;

109 
	g¥Ÿe˘ed
:

111 * 
_s‹t_buf
;

112 
	g_tu∂e_size
;

113 
	g_tu∂e_cou¡
;

114 
	g_buf_size
;

115 
boﬁ
 
	g_is_s‹ãd
;

116 
èès_lock
 
	g_s‹ãd_lock
;

118 
ªp_row_t
* 
	g_¥ïrow
;

121 
öô
();

124 
boﬁ
 
gë_s‹ãd
(c⁄° 
ödex
, 
s‹ãr_tu∂e
* 
±u∂e
);

126 
	gpublic
:

128 
asc_s‹t_m™_im∂
(
asc_s‹t_buf„r_t
* 
aS‹tBuf„rAsc
, 
ªp_row_t
* 
≠row
)

129 : 
èbÀ_m™_im∂
<
asc_s‹t_buf„r_t
>(
aS‹tBuf„rAsc
, 
	gÁl£
),

130 
_s‹t_buf
(
NULL
), 
_tu∂e_size
(0), 
_tu∂e_cou¡
(0), 
_buf_size
(0),

131 
_is_s‹ãd
(
Ál£
), 
_¥ïrow
(
≠row
)

135 ~
asc_s‹t_m™_im∂
()

137 i‡(
	g_s‹t_buf
)

138 
	gdñëe
 [] 
	g_s‹t_buf
;

143 
add_tu∂e
(
s‹ãr_tu∂e
& 
©u∂e
);

146 
w_rc_t
 
gë_asc_s‹t_ôî
(
ss_m
* 
db
, 
asc_s‹t_ôî_im∂
* &
asc_s‹t_ôî
);

147 
w_rc_t
 
gë_s‹t_ôî
(
ss_m
* 
db
, 
asc_s‹t_ôî_im∂
* &
s‹t_ôî
);

150 
s‹t
();

152 
ölöe
 
cou¡
(Ë{  (
	g_tu∂e_cou¡
); }

154 
ª£t
();

170 
	gtu∂e_ôî_t
<
	tasc_s‹t_buf„r_t
, , 
	tèbÀ_row_t
 > 
	tasc_s‹t_sˇn_t
;

172 ˛as†
	casc_s‹t_ôî_im∂
 : 
public
 
asc_s‹t_sˇn_t


174 
public
:

175 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

177 
	m¥iv©e
:

179 
asc_s‹t_m™_im∂
* 
_m™agî
;

180 
	m_ödex
;

182 
	mpublic
:

184 
	$asc_s‹t_ôî_im∂
(
ss_m
* 
db
, 
asc_s‹t_buf„r_t
* 
ps‹tbuf
, 
asc_s‹t_m™_im∂
* 
ps‹tm™
)

185 : 
tu∂e_ôî_t
<
asc_s‹t_buf„r_t
, , 
èbÀ_row_t
 >(
db
, 
ps‹tbuf
, 
NL
, 
Ál£
),

186 
	`_m™agî
(
ps‹tm™
), 
	$_ödex
(0)

188 
	`as£π
 (
_m™agî
);

189 
	`as£π
 (
_fûe
);

190 
	`W_COERCE
(
	`›í_sˇn
());

198 
w_rc_t
 
	`›í_sˇn
();

199 
w_rc_t
 
	$˛o£_sˇn
(Ë{  (
RCOK
); 
	}
};

200 
w_rc_t
 
√xt
(
ss_m
* 
db
, 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
);

202 
ª£t
();

225 
ölöe
 
w_rc_t
 
	gasc_s‹t_ôî_im∂
::
	$›í_sˇn
()

227 
	`as£π
 (
_fûe
);

228 
	`as£π
 (
_fûe
->
	`fõld_cou¡
()>0);

230 
_m™agî
->
	`s‹t
();

232 
_ödex
 = 0;

233 
_›íed
 = 
åue
;

234  (
RCOK
);

235 
	}
}

246 
ölöe
 
w_rc_t
 
	gasc_s‹t_ôî_im∂
::
	$√xt
(
ss_m
* , 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
)

248 
	`as£π
(
_›íed
);

250 
_m™agî
->
	`gë_s‹ãd
(
_ödex
, &
tu∂e
);

251 
eof
 = (++
_ödex
 > 
_m™agî
->
_tu∂e_cou¡
);

252  (
RCOK
);

253 
	}
}

264 
ölöe
 
	gasc_s‹t_ôî_im∂
::
	$ª£t
()

267 
	`as£π
 (
_m™agî
);

268 
_ödex
=0;

269 
	}
}

272 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_client.h

32 #i‚de‡
__SHORE_CLIENT_H


33 
	#__SHORE_CLIENT_H


	)

35 
	~"k_deföes.h
"

37 
	~"sm/sh‹e/sh‹e_ív.h
"

38 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

41 
ENTER_NAMESPACE
(
sh‹e
);

45 
	eeBödögTy≥
 { 
	mBT_NONE
=0, 
	mBT_NEXT
=1, 
	mBT_SPREAD
=2 };

55 c⁄° 
	gDF_SPREAD_THREADS
 = 1;

58 c⁄° 
	gDF_NUM_OF_THR
 = 5;

61 c⁄° 
	gMAX_NUM_OF_THR
 = 1000;

64 c⁄° 
	gDF_TRX_PER_THR
 = 100;

67 c⁄° 
	gDF_DURATION
 = 20;

70 c⁄° 
	gDF_NUM_OF_ITERS
 = 5;

73 c⁄° 
eBödögTy≥
 
	gDF_BINDING_TYPE
 = 
BT_NONE
;

79 c⁄° 
	gDF_WARMUP_TRX_PER_THR
 = 1000;

82 c⁄° 
	gDF_WARMUP_DURATION
 = 20;

85 c⁄° 
	gDF_WARMUP_ITERS
 = 3;

90 c⁄° 
	gBATCH_SIZE
 = 10;

93 c⁄° 
	gTHINK_TIME
 = 0;

97 
ö°_ã°_ív
(
¨gc
, * 
¨gv
[]);

98 
˛o£_ã°_ív
();

109 c⁄° 
	gDF_WARMUP_INTERVAL
 = 2;

111 
	eMósuªmítTy≥
 { 
	mMT_UNDEF
, 
	mMT_NUM_OF_TRXS
, 
	mMT_TIME_DUR
 };

122 ˛as†
	cba£_˛õ¡_t
 : 
public
 
thªad_t


124 
public
:

127 
m≠
<,
	t°rög
> 
	tm≠SupTrxs
;

128 
	mm≠SupTrxs
::
	tôî©‹
 
	tm≠SupTrxsIt
;

129 
	mm≠SupTrxs
::
	tc⁄°_ôî©‹
 
	tm≠SupTrxsC⁄°It
;

131 
	m¥Ÿe˘ed
:

134 
Sh‹eEnv
* 
_ív
;

137 
MósuªmítTy≥
 
	m_mósuª_ty≥
;

138 
	m_åxid
;

139 
	m_nŸrxs
;

141 
	m_thök_time
;

144 
	mgu¨d
<
	mc⁄dex_∑ú
> 
	m_˝
;

147 
boﬁ
 
	m_is_bound
;

148 
¥o˚ss‹id_t
 
	m_¥s_id
;

150 
	m_id
;

151 
	m_rv
;

153 
	mpublic
:

155 
	$ba£_˛õ¡_t
()

156 : 
	`thªad_t
("n⁄e"), 
	`_ív
(
NULL
), 
	`_mósuª_ty≥
(
MT_UNDEF
),

157 
	`_åxid
(-1), 
	`_nŸrxs
(-1), 
	`_thök_time
(0),

158 
	`_is_bound
(
Ál£
), 
	`_¥s_id
(
PBIND_NONE
),

159 
	$_rv
(1)

162 
	$ba£_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eEnv
* 
ív
,

163 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

164 c⁄° 
numOfTrxs
,

165 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
)

166 : 
	`thªad_t
(
äame
), 
	`_ív
(
ív
), 
	`_mósuª_ty≥
(
aTy≥
),

167 
	`_åxid
(
åxid
), 
	`_nŸrxs
(
numOfTrxs
), 
	`_thök_time
(0),

168 
	`_is_bound
(
Ál£
), 
	`_¥s_id
(
≠rsid
), 
	`_id
(
id
), 
	$_rv
(0)

170 
	`as£π
 (
_ív
);

171 
	`as£π
 (
_mósuª_ty≥
 !
MT_UNDEF
);

172 
	`as£π
 (
_nŸrxs
 || (
_mósuª_ty≥
 =
MT_TIME_DUR
));

173 
_˝
 = 
√w
 
	`c⁄dex_∑ú
();

174 
	}
}

176 
	gvútuÆ
 ~
	$ba£_˛õ¡_t
(Ë{ 
	}
}

180 
	$w‹k
() {

182 
	`TRY_TO_BIND
(
_¥s_id
,
_is_bound
);

185 i‡(!
_ív
->
	`is_öôülized
()) {

186 i‡(
_ív
->
	`öô
()) {

189 
	`TRACE
–
TRACE_ALWAYS
, "Couldn't initialize Shore...\n");

190 
_rv
 = 1;

196 
	`powîrun
();

197 
	}
}

200 
	$id
(Ë{  (
_id
); 
	}
}

201 
boﬁ
 
	$is_bound
(Ëc⁄° {  (
_is_bound
); 
	}
}

202 
ölöe
 
	$rv
(Ë{  (
_rv
); 
	}
}

205 
w_rc_t
 
run_x˘s
(
x˘_ty≥
, 
num_x˘
);

206 
	$powîrun
() {

207 
w_rc_t
 
rc
 = 
_ív
->
	`lﬂdd©a
();

208 if(
rc
.
	`is_îr‹
()ËÑc.
	`îr_num
();

209  (
	`run_x˘s
(
_åxid
, 
_nŸrxs
).
	`îr_num
());

210 
	}
}

212 
w_rc_t
 
submô_b©ch
(
x˘_ty≥
, & 
åx_˙t
, c⁄° 
b©ch_size
);

214 
ab‹t_ã°
();

215 
ªsume_ã°
();

216 
boﬁ
 
is_ã°_ab‹ãd
();

219 
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
) {

220 
m≠
.
	`˛ór
();  (m≠.
	`size
());

221 
	}
}

225 
vútuÆ
 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
num_x˘
)=0;

230 
	$¥öt_èbÀs
(Ë{ 
	`as£π
 (
_ív
); _ív->
	`dump
(); 
	}
}

233 
	g¥iv©e
:

236 
ba£_˛õ¡_t
(base_client_t const &);

237 
	g›î©‹
=(
ba£_˛õ¡_t
 const &);

243 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_desc_sort_buf.h

33 #i‚de‡ 
__SHORE_DESC_SORT_BUF_H


34 
	#__SHORE_DESC_SORT_BUF_H


	)

36 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

39 
ENTER_NAMESPACE
(
sh‹e
);

58 
˛ass
 
	gdesc_s‹t_ôî_im∂
;

69 ˛as†
	cdesc_s‹t_buf„r_t
 : 
public
 
èbÀ_desc_t


71 
public
:

73 
	$desc_s‹t_buf„r_t
(c⁄° 
uöt_t
 
fõld_cou¡
)

74 : 
	`èbÀ_desc_t
("DESC_SORT_BUF", 
fõld_cou¡
, 
PD_NORMAL
)

78 ~
	$desc_s‹t_buf„r_t
()

80 
	}
}

83 
	$£tup
(c⁄° 
uöt_t
 
ödex
, 
sq…y≥_t
 
ty≥
, c⁄° 
Àn
 = 0)

85 
	`as£π
(
ödex
<
_fõld_cou¡
);

86 
_desc
[
ödex
].
	`£tup
(
ty≥
, "", 
Àn
);

87 
	`as£π
(!
_desc
[
ödex
].
	`is_v¨übÀ_Àngth
());

88 
	`as£π
(!
_desc
[
ödex
].
	`Ælow_nuŒ
());

89 
	}
}

104 
˛ass
 
	gdesc_s‹t_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
desc_s‹t_buf„r_t
>

106 
èbÀ_row_t
 
	ts‹ãr_tu∂e
;

107 
‰õnd
 
˛ass
 
	gdesc_s‹t_ôî_im∂
;

109 
	g¥Ÿe˘ed
:

111 * 
_s‹t_buf
;

112 
	g_tu∂e_size
;

113 
	g_tu∂e_cou¡
;

114 
	g_buf_size
;

115 
boﬁ
 
	g_is_s‹ãd
;

116 
èès_lock
 
	g_s‹ãd_lock
;

118 
ªp_row_t
* 
	g_¥ïrow
;

121 
öô
();

124 
boﬁ
 
gë_s‹ãd
(c⁄° 
ödex
, 
s‹ãr_tu∂e
* 
±u∂e
);

126 
	gpublic
:

128 
desc_s‹t_m™_im∂
(
desc_s‹t_buf„r_t
* 
aS‹tBuf„rAsc
, 
ªp_row_t
* 
≠row
)

129 : 
èbÀ_m™_im∂
<
desc_s‹t_buf„r_t
>(
aS‹tBuf„rAsc
, 
	gÁl£
),

130 
_s‹t_buf
(
NULL
), 
_tu∂e_size
(0), 
_tu∂e_cou¡
(0), 
_buf_size
(0),

131 
_is_s‹ãd
(
Ál£
), 
_¥ïrow
(
≠row
)

135 ~
desc_s‹t_m™_im∂
()

137 i‡(
	g_s‹t_buf
)

138 
	gdñëe
 [] 
	g_s‹t_buf
;

143 
add_tu∂e
(
s‹ãr_tu∂e
& 
©u∂e
);

146 
w_rc_t
 
gë_desc_s‹t_ôî
(
ss_m
* 
db
, 
desc_s‹t_ôî_im∂
* &
desc_s‹t_ôî
);

147 
w_rc_t
 
gë_s‹t_ôî
(
ss_m
* 
db
, 
desc_s‹t_ôî_im∂
* &
s‹t_ôî
);

150 
s‹t
();

152 
ölöe
 
cou¡
(Ë{  (
	g_tu∂e_cou¡
); }

154 
ª£t
();

170 
	gtu∂e_ôî_t
<
	tdesc_s‹t_buf„r_t
, , 
	tèbÀ_row_t
 > 
	tdesc_s‹t_sˇn_t
;

172 ˛as†
	cdesc_s‹t_ôî_im∂
 : 
public
 
desc_s‹t_sˇn_t


174 
public
:

175 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

177 
	m¥iv©e
:

179 
desc_s‹t_m™_im∂
* 
_m™agî
;

180 
	m_ödex
;

182 
	mpublic
:

184 
	$desc_s‹t_ôî_im∂
(
ss_m
* 
db
, 
desc_s‹t_buf„r_t
* 
ps‹tbuf
, 
desc_s‹t_m™_im∂
* 
ps‹tm™
)

185 : 
tu∂e_ôî_t
<
desc_s‹t_buf„r_t
, , 
èbÀ_row_t
 >(
db
, 
ps‹tbuf
, 
NL
, 
Ál£
),

186 
	`_m™agî
(
ps‹tm™
), 
	$_ödex
(0)

188 
	`as£π
 (
_m™agî
);

189 
	`as£π
 (
_fûe
);

190 
	`W_COERCE
(
	`›í_sˇn
());

198 
w_rc_t
 
	`›í_sˇn
();

199 
w_rc_t
 
	$˛o£_sˇn
(Ë{  (
RCOK
); 
	}
};

200 
w_rc_t
 
√xt
(
ss_m
* 
db
, 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
);

202 
ª£t
();

225 
ölöe
 
w_rc_t
 
	gdesc_s‹t_ôî_im∂
::
	$›í_sˇn
()

227 
	`as£π
 (
_fûe
);

228 
	`as£π
 (
_fûe
->
	`fõld_cou¡
()>0);

230 
_m™agî
->
	`s‹t
();

232 
_ödex
 = 0;

233 
_›íed
 = 
åue
;

234  (
RCOK
);

235 
	}
}

246 
ölöe
 
w_rc_t
 
	gdesc_s‹t_ôî_im∂
::
	$√xt
(
ss_m
* , 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
)

248 
	`as£π
(
_›íed
);

250 
_m™agî
->
	`gë_s‹ãd
(
_ödex
, &
tu∂e
);

251 
eof
 = (++
_ödex
 > 
_m™agî
->
_tu∂e_cou¡
);

252  (
RCOK
);

253 
	}
}

264 
ölöe
 
	gdesc_s‹t_ôî_im∂
::
	$ª£t
()

267 
	`as£π
 (
_m™agî
);

268 
_ödex
=0;

269 
	}
}

272 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_env.h

31 #i‚de‡
__SHORE_ENV_H


32 
	#__SHORE_ENV_H


	)

34 
	~"k_deföes.h
"

35 
	~"sm_vas.h
"

37 
	~<m≠
>

39 
	~"utû.h
"

41 
	~"sh‹e_ªqs.h
"

42 
	~"sh‹e_fûe_desc.h
"

45 
ENTER_NAMESPACE
(
sh‹e
);

48 
usög
 
	g°d
::
m≠
;

53 c⁄° 
	gSHORE_NUM_OF_RETRIES
 = 3;

55 
	#SHORE_TABLE_DATA_DIR
 "d©aba£s"

	)

56 
	#SHORE_CONF_FILE
 "sh‹e.c⁄f"

	)

58 c⁄° 
°rög
 
	gCONFIG_PARAM
 = "db-config";

59 c⁄° 
°rög
 
	gCONFIG_PARAM_VALUE
 = "invalid";

70 c⁄° 
°rög
 
	gSHORE_SYS_OPTIONS
[][2] = {

78 c⁄° 
	gSHORE_NUM_SYS_OPTIONS
 = 5;

84 c⁄° 
°rög
 
	gSHORE_SYS_SM_OPTIONS
[][3] = {

92 c⁄° 
	gSHORE_NUM_SYS_SM_OPTIONS
 = 5;

98 c⁄° 
°rög
 
	gSHORE_DB_SM_OPTIONS
[][3] = {

106 c⁄° 
	gSHORE_NUM_DB_SM_OPTIONS
 = 5;

111 c⁄° 
°rög
 
	gSHORE_DB_OPTIONS
[][2] = {

114 { "lﬂd©adú", 
SHORE_TABLE_DATA_DIR
 },

119 c⁄° 
	gSHORE_NUM_DB_OPTIONS
 = 5;

130 
	#DECLARE_TRX
(
åxlid
) \

131 
w_rc_t
 
run_
##
	`åxlid
(
Reque°
* 
¥eque°
, 
åxlid
##
_öput_t
& 
ö
); \

132 
w_rc_t
 
run_
##
	`åxlid
(
Reque°
* 
¥eque°
); \

133 
w_rc_t
 
x˘_
##
	`åxlid
(c⁄° 
x˘_id
, 
åxlid
##
_öput_t
& 
ö
); \

134 
_öc_
##
åxlid
##
	`_©t
(); \

135 
_öc_
##
åxlid
##
	`_Áûed
(); \

136 
_öc_
##
åxlid
##
	`_dld
()

	)

139 
	#DECLARE_TABLE
(
èbÀ
,
m™im∂
,
abbrv
) \

140 
gu¨d
<
m™im∂
> 
_p
##
abbrv
##
_m™
; \

141 
ölöe
 
m™im∂
* 
abbrv
##
	`_m™
(Ë{  (
_p
##abbrv##
_m™
); } \

142 
gu¨d
<
èbÀ
> 
_p
##
abbrv
##
_desc
; \

143 
ölöe
 
èbÀ
* 
abbrv
##
	`_desc
(Ë{  (
_p
##abbrv##
_desc
.
	`gë
()); }

	)

158 #ifde‡
CFG_FLUSHER


161 
	#DEFINE_RUN_WITH_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
åxim∂
) \

162 
w_rc_t
 
˙ame
::
run_
##
	`åxim∂
(
Reque°
* 
¥eque°
, 
åxlid
##
_öput_t
& 
ö
) { \

163 
x˘_id
 = 
¥eque°
->
	`x˘_id
(); \

164 
	`TRACE
–
TRACE_TRX_FLOW
, "%d. %†...\n", 
x˘_id
, #trximpl); \

165 
_öc_
##
åxlid
##
	`_©t
(); \

166 
w_rc_t
 
e
 = 
x˘_
##
	`åxim∂
(
x˘_id
, 
ö
); \

167 i‡(!
e
.
	`is_îr‹
()) { \

168 
l¢_t
 
x˘La°L¢
; \

169 
e
 = 
_pssm
->
	`commô_x˘
(
åue
,&
x˘La°L¢
); \

170 
¥eque°
->
	`£t_œ°_l¢
(
x˘La°L¢
); } \

171 i‡(
e
.
	`is_îr‹
()) { \

172 i‡(
e
.
	`îr_num
(Ë!
smÀvñ_0
::
eDEADLOCK
) \

173 
_öc_
##
åxlid
##
	`_Áûed
(); \

174 
_öc_
##
åxlid
##
	`_dld
(); \

175 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dËab‹ãd [0x%x]\n", 
x˘_id
, 
e
.
	`îr_num
()); \

176 
w_rc_t
 
e2
 = 
_pssm
->
	`ab‹t_x˘
(); \

177 if(
e2
.
	`is_îr‹
()Ë
	`TRACE
–
TRACE_ALWAYS
, "X˘ (%dËab‹àÁûed [0x%x]\n", 
x˘_id
,É2.
	`îr_num
()); \

178 
¥eque°
->
	`nŸify_˛õ¡
(); \

179 
_ªque°_poﬁ
.
	`de°roy
(
¥eque°
); \

180 i‡((*&
_mósuª
)!=
MST_MEASURE
Ë (
e
); \

181 
_ív_°©s
.
	`öc_åx_©t
(); \

182  (
e
); } \

183 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dË(%dËtÿÊush\n", 
x˘_id
, 
¥eque°
->
	`tid
().
	`gë_lo
()); \

184 
	`to_ba£_Êushî
(
¥eque°
); \

185  (
RCOK
); }

	)

189 
	#DEFINE_RUN_WITH_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
åxim∂
) \

190 
w_rc_t
 
˙ame
::
run_
##
	`åxim∂
(
Reque°
* 
¥eque°
, 
åxlid
##
_öput_t
& 
ö
) { \

191 
x˘_id
 = 
¥eque°
->
	`x˘_id
(); \

192 
	`TRACE
–
TRACE_TRX_FLOW
, "%d. %†...\n", 
x˘_id
, #trximpl); \

193 
_öc_
##
åxlid
##
	`_©t
(); \

194 
w_rc_t
 
e
 = 
x˘_
##
	`åxim∂
(
x˘_id
, 
ö
); \

195 i‡(!
e
.
	`is_îr‹
()) { \

196 i‡(
	`isAsynchCommô
()Ë
e
 = 
_pssm
->
	`commô_x˘
(
åue
); \

197 
e
 = 
_pssm
->
	`commô_x˘
(); } \

198 i‡(
e
.
	`is_îr‹
()) { \

199 i‡(
e
.
	`îr_num
(Ë!
smÀvñ_0
::
eDEADLOCK
) \

200 
_öc_
##
åxlid
##
	`_Áûed
(); \

201 
_öc_
##
åxlid
##
	`_dld
(); \

202 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dËab‹ãd [0x%x]\n", 
x˘_id
, 
e
.
	`îr_num
()); \

203 
w_rc_t
 
e2
 = 
_pssm
->
	`ab‹t_x˘
(); \

204 if(
e2
.
	`is_îr‹
()Ë
	`TRACE
–
TRACE_ALWAYS
, "X˘ (%dËab‹àÁûed [0x%x]\n", 
x˘_id
,É2.
	`îr_num
()); \

205 
¥eque°
->
	`nŸify_˛õ¡
(); \

206 i‡((*&
_mósuª
)!=
MST_MEASURE
Ë (
e
); \

207 
_ív_°©s
.
	`öc_åx_©t
(); \

208  (
e
); } \

209 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dËcom∂ëed\n", 
x˘_id
); \

210 
¥eque°
->
	`nŸify_˛õ¡
(); \

211 i‡((*&
_mósuª
)!=
MST_MEASURE
Ë (
RCOK
); \

212 
_ív_°©s
.
	`öc_åx_com
(); \

213  (
RCOK
); }

	)

218 
	#DEFINE_RUN_WITHOUT_INPUT_TRX_WRAPPER
(
˙ame
,
åxlid
,
åxim∂
) \

219 
w_rc_t
 
˙ame
::
run_
##
	`åxim∂
(
Reque°
* 
¥eque°
) { \

220 
åxlid
##
_öput_t
 
ö
 = 
¸óã_
##åxlid##
	`_öput
(
_quîõd_Á˘‹
, 
¥eque°
->
	`£À˘edID
()); \

221  (
run_
##
	`åxim∂
(
¥eque°
, 
ö
)); }

	)

224 
	#DEFINE_TRX_STATS
(
˙ame
,
åxlid
) \

225 
˙ame
::
_öc_
##
åxlid
##
	`_©t
(Ë{ ++
my_°©s
.
©ãm±ed
.trxlid; } \

226 
˙ame
::
_öc_
##
åxlid
##
	`_Áûed
(Ë{ ++
my_°©s
.
Áûed
.trxlid; } \

227 
˙ame
::
_öc_
##
åxlid
##
	`_dld
(Ë{ ++
my_°©s
.
dódlocked
.åxlid; }

	)

231 
	#DEFINE_TRX
(
˙ame
,
åx
) \

232 
	`DEFINE_RUN_WITHOUT_INPUT_TRX_WRAPPER
(
˙ame
,
åx
,trx); \

233 
	`DEFINE_RUN_WITH_INPUT_TRX_WRAPPER
(
˙ame
,
åx
,trx); \

234 
	`DEFINE_TRX_STATS
(
˙ame
,
åx
)

	)

237 #ifde‡
USE_SHORE_6


239 
	#CHECK_XCT_RETURN
(
rc
,
√eded_√xt_time
,
ªåy
,
ENV
) \

240 i‡(
rc
.
	`is_îr‹
()) { \

241 
	`TRACE
–
TRACE_ALWAYS
, "Eº‹ %x\n", 
rc
.
	`îr_num
()); \

242 
u£d
 = 
ENV
->
	`db
()->
	`x˘_log_•a˚_√eded
(); \

243 
	`W_COERCE
(
ENV
->
	`db
()->
	`ab‹t_x˘
()); \

244 
rc
.
	`îr_num
()) { \

245 
smÀvñ_0
::
eDEADLOCK
: \

246 
ªåy
; \

247 
smÀvñ_0
::
eOUTOFLOGSPACE
: \

248 
√eded_√xt_time
 = 
u£d
; \

249 
ªåy
; \

251 
°rög°ªam
 
os
; o†<< 
rc
 << 
íds
; \

252 
°rög
 
°r
 = 
os
.
	`°r
(); \

253 
	`TRACE
–
TRACE_ALWAYS
, \

255 
°r
.
	`c_°r
()); \

256 
	`W_FATAL
(
rc
.
	`îr_num
()); \

258 }

	)

262 
	#CHECK_XCT_RETURN
(
rc
,
√eded_√xt_time
,
ªåy
,
ENV
) \

263 i‡(
rc
.
	`is_îr‹
()) { \

264 
	`TRACE
–
TRACE_ALWAYS
, "Eº‹ %x\n", 
rc
.
	`îr_num
()); \

265 
u£d
 = 0; \

266 
	`W_COERCE
(
ENV
->
	`db
()->
	`ab‹t_x˘
()); \

267 
rc
.
	`îr_num
()) { \

268 
smÀvñ_0
::
eDEADLOCK
: \

269 
ªåy
; \

270 
smÀvñ_0
::
eOUTOFLOGSPACE
: \

271 
√eded_√xt_time
 = 
u£d
; \

272 
ªåy
; \

274 
°rög°ªam
 
os
; o†<< 
rc
 << 
íds
; \

275 
°rög
 
°r
 = 
os
.
	`°r
(); \

276 
	`TRACE
–
TRACE_ALWAYS
, \

278 
°r
.
	`c_°r
()); \

279 
	`W_FATAL
(
rc
.
	`îr_num
()); \

281 }

	)

295 
	sív_°©s_t


297 vﬁ©ûê
uöt_t
 
	m_¡rx_©t
;

298 vﬁ©ûê
uöt_t
 
	m_¡rx_com
;

300 
ív_°©s_t
()

301 : 
_¡rx_©t
(0), 
_¡rx_com
(0)

304 ~
ív_°©s_t
() { }

306 
¥öt_ív_°©s
() const;

308 
ölöe
 
uöt_t
 
öc_åx_©t
(Ë{  (
©omic_öc_uöt_nv
(&
_¡rx_©t
)); }

309 
ölöe
 
uöt_t
 
öc_åx_com
() {

310 
©omic_öc_uöt
(&
_¡rx_©t
);

311  (
©omic_öc_uöt_nv
(&
_¡rx_com
));

326 
	eeDBC⁄åﬁ
 { 
	mDBC_UNDEF
 = 0x1,

327 
	mDBC_PAUSED
 = 0x2,

328 
	mDBC_ACTIVE
 = 0x4,

329 
	mDBC_STOPPED
 = 0x8

344 ˛as†
	cdb_iÁ˚


346 
	mpublic
:

347 
m≠
<
	t°rög
,°rög> 
	tívV¨M≠
;

348 
	mívV¨M≠
::
	tôî©‹
 
	tívV¨It
;

349 
	mívV¨M≠
::
	tc⁄°_ôî©‹
 
	tívV¨C⁄°It
;

351 
	m¥iv©e
:

352 vﬁ©ûê
_dbc
;

354 
	mpublic
:

356 
	$db_iÁ˚
()

357 : 
	$_dbc
(
DBC_UNDEF
)

359 
vútuÆ
 ~
	$db_iÁ˚
(Ë{ 
	}
}

363 
eDBC⁄åﬁ
 
	$dbc
(Ë{  (
	`eDBC⁄åﬁ
(*&
_dbc
)); 
	}
}

365 
	$£t_dbc
(c⁄° 
eDBC⁄åﬁ
 
adbc
) {

366 
	`as£π
 (
adbc
!=
DBC_UNDEF
);

367 
tmp
 = 
adbc
;

368 
	`©omic_sw≠_uöt
(&
_dbc
, 
tmp
);

369 
	}
}

374 
vútuÆ
 
c⁄f
()=0;

375 
vútuÆ
 
£t
(
ívV¨M≠
* 
v¨s
)=0;

376 
vútuÆ
 
w_rc_t
 
lﬂd_schema
()=0;

377 
vútuÆ
 
öô
()=0;

378 
vútuÆ
 
›í
()=0;

379 
vútuÆ
 
˛o£
()=0;

380 
vútuÆ
 
°¨t
()=0;

381 
vútuÆ
 
°›
()=0;

382 
vútuÆ
 
ª°¨t
()=0;

383 
vútuÆ
 
∑u£
()=0;

384 
vútuÆ
 
ªsume
()=0;

385 
vútuÆ
 
w_rc_t
 
√wrun
()=0;

386 
vútuÆ
 
°©i°ics
()=0;

387 
vútuÆ
 
dump
()=0;

388 
vútuÆ
 
	$öfo
() const=0;

390 
	}
};

395 
˛ass
 
	gba£_w‹kî_t
;

396 
˛ass
 
	gåx_w‹kî_t
;

397 
˛ass
 
	gÊushî_t
;

398 
˛ass
 
	gSh‹eEnv
;

403 
Sh‹eEnv
* 
_g_sh‹e_ív
;

405 
¥ocm⁄ô‹_t
* 
_g_m⁄
;

407 
ssm_max_smÆl_ªc
;

418 
	eMósuªmítSèã
 { 
	mMST_UNDEF
 = 0x0,

419 
	mMST_WARMUP
 = 0x1,

420 
	mMST_MEASURE
 = 0x2,

421 
	mMST_DONE
 = 0x4,

422 
	mMST_PAUSE
 = 0x8

435 ˛as†
	cSh‹eEnv
 : 
public
 
db_iÁ˚


437 
public
:

438 
°d
::
	tm≠
<
	t°rög
,°rög> 
	tP¨amM≠
;

440 
åx_ªque°_t
 
	tReque°
;

441 
blob_poﬁ
 
	tReque°Sèck
;

442 
åx_w‹kî_t
 
	tW‹kî
;

443 
åx_w‹kî_t
* 
	tW‹kîPå
;

444 
	m°d
::
	tve˘‹
<
	tW‹kîPå
> 
	tW‹kîPoﬁ
;

445 
	m°d
::
	tve˘‹
<
	tW‹kîPå
>::
	tôî©‹
 
	tW‹kîIt
;

447 
˛ass
 
	mfid_lﬂdî_t
;

449 
	m¥Ÿe˘ed
:

451 
ss_m
* 
_pssm
;

454 
boﬁ
 
	m_öôülized
;

455 
±hªad_muãx_t
 
	m_öô_muãx
;

456 
boﬁ
 
	m_lﬂded
;

457 
±hªad_muãx_t
 
	m_lﬂd_muãx
;

459 
±hªad_muãx_t
 
	m_°©m≠_muãx
;

460 
±hªad_muãx_t
 
	m_œ°_°©s_muãx
;

464 
devid_t
 
	m_devid
;

465 
	mgu¨d
<
	mvid_t
> 
	m_pvid
;

466 
°id_t
 
	m_roŸ_iid
;

467 
±hªad_muãx_t
 
	m_vﬁ_muãx
;

468 
lvid_t
 
	m_lvid
;

469 
	m_vﬁ_˙t
;

472 
	mgu¨d
<
	m›ti⁄_group_t
> 
	m_p›ts
;

474 
P¨amM≠
 
	m_sys_›ts
;

475 
P¨amM≠
 
	m_sm_›ts
;

476 
P¨amM≠
 
	m_dev_›ts
;

479 
uöt
 
	m_max_˝u_cou¡
;

480 
uöt
 
	m_a˘ive_˝u_cou¡
;

484 
W‹kîPoﬁ
 
	m_w‹kîs
;

485 
uöt
 
	m_w‹kî_˙t
;

500 
	m_sˇlög_Á˘‹
;

501 
±hªad_muãx_t
 
	m_sˇlög_muãx
;

502 
	m_quîõd_Á˘‹
;

503 
±hªad_muãx_t
 
	m_quîõd_muãx
;

507 
ív_°©s_t
 
	m_ív_°©s
;

508 
sm_°©s_öfo_t
 
	m_œ°_sm_°©s
;

511 vﬁ©ûê
uöt
 
	m_mósuª
;

514 
°rög
 
	m_sy¢ame
;

517 
uöt4_t
 
	m_pd
;

518 
boﬁ
 
	m_íabÀ_hacks
;

522 
ußge
(
›ti⁄_group_t
& 
›ti⁄s
);

523 
ªadc⁄fig
();

526 vﬁ©ûê
uöt
 
	m_ªc_to_acc
;

529 
	m_ö£π_‰eq
;

530 
	m_dñëe_‰eq
;

531 
	m_¥obe_‰eq
;

534 
c⁄figuª_sm
();

535 
°¨t_sm
();

536 
˛o£_sm
();

539 vﬁ©ûê
boﬁ
 
	m_bAœrmSë
;

540 
èès_lock
 
	m_Æ¨m_lock
;

541 
	m_°¨t_imbÆ™˚
;

542 
skew_ty≥_t
 
	m_skew_ty≥
;

544 
	mpublic
:

546 
Sh‹eEnv
();

547 
	mvútuÆ
 ~
Sh‹eEnv
();

552 
vútuÆ
 
c⁄f
();

553 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

554 
vútuÆ
 
	`öô
();

555 
vútuÆ
 
	$po°_öô
(Ë{  (0); 
	}
};

556 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

557 
vútuÆ
 
˛o£
();

558 
vútuÆ
 
°¨t
();

559 
vútuÆ
 
°›
();

560 
vútuÆ
 
ª°¨t
();

561 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

562 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

563 
vútuÆ
 
w_rc_t
 
√wrun
()=0;

564 
vútuÆ
 
°©i°ics
();

565 
vútuÆ
 
dump
();

566 
vútuÆ
 
	$öfo
() const=0;

572 
vútuÆ
 
w_rc_t
 
	`lﬂd_schema
()=0;

574 
vútuÆ
 
w_rc_t
 
	`w¨mup
()=0;

575 
vútuÆ
 
w_rc_t
 
	`lﬂdd©a
()=0;

576 
vútuÆ
 
w_rc_t
 
	`check_c⁄si°ícy
()=0;

580 
vútuÆ
 
w_rc_t
 
	`lﬂd_™d_ªgi°î_fids
()=0;

583 
ölöe
 
ss_m
* 
	$db
(Ë{ (
_pssm
); 
	}
}

584 
ölöe
 
vid_t
* 
	$vid
(Ë{ (
_pvid
); 
	}
}

586 
boﬁ
 
is_öôülized
();

587 
boﬁ
 
is_lﬂded
();

589 
	$£t_mósuª
(c⁄° 
MósuªmítSèã
 
aMósuªmítSèã
) {

591 
tmp
 = 
aMósuªmítSèã
;

592 
	`©omic_sw≠_uöt
(&
_mósuª
, 
tmp
);

593 
	}
}

594 
ölöe
 
MósuªmítSèã
 
	$gë_mósuª
(Ë{  (
	`MósuªmítSèã
(*&
_mósuª
)); 
	}
}

597 
±hªad_muãx_t
* 
	$gë_öô_muãx
(Ë{  (&
_öô_muãx
); 
	}
}

598 
±hªad_muãx_t
* 
	$gë_vﬁ_muãx
(Ë{  (&
_vﬁ_muãx
); 
	}
}

599 
±hªad_muãx_t
* 
	$gë_lﬂd_muãx
(Ë{  (&
_lﬂd_muãx
); 
	}
}

600 
boﬁ
 
	$gë_öô_no_cs
(Ë{  (
_öôülized
); 
	}
}

601 
boﬁ
 
	$gë_lﬂded_no_cs
(Ë{  (
_lﬂded
); 
	}
}

602 
	$£t_öô_no_cs
(c⁄° 
boﬁ
 
b_is_öô
Ë{ 
_öôülized
 = b_is_öô; 
	}
}

603 
	$£t_lﬂded_no_cs
(c⁄° 
boﬁ
 
b_is_lﬂded
Ë{ 
_lﬂded
 = b_is_lﬂded; 
	}
}

606 
	$¥öt_˝us
() const;

607 
uöt
 
	$gë_max_˝u_cou¡
() const;

608 
	`£t_max_˝u_cou¡
(c⁄° 
uöt
 
˝u˙t
);

609 
uöt
 
	$gë_a˘ive_˝u_cou¡
() const;

610 
	`£t_a˘ive_˝u_cou¡
(c⁄° 
uöt
 
a˘˝u˙t
);

615 
	`£t_qf
(c⁄° 
aQF
);

616 
	$gë_qf
() const;

617 
	`£t_sf
(c⁄° 
aSF
);

618 
	$gë_sf
() const;

619 
	`upd_sf
();

620 
	$¥öt_sf
() const;

623 
uöt4_t
 
	$gë_pd
() const;

624 
uöt4_t
 
	`£t_pd
(c⁄° 
physiˇl_design_t
& 
≠d
);

625 
uöt4_t
 
	`add_pd
(c⁄° 
physiˇl_design_t
& 
≠d
);

626 
boﬁ
 
	`check_hacks_íabÀd
();

627 
boﬁ
 
	$is_hacks_íabÀd
() const;

628 
vútuÆ
 
w_rc_t
 
	$upd©e_∑πôi⁄ög
(Ë{  (
RCOK
); 
	}
}

631 
£t_‰eqs
(
ö£π_‰eq
 = 0, 
dñëe_‰eq
 = 0, 
¥obe_‰eq
 = 0);

634 
vútuÆ
 
£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

635 
vútuÆ
 
ª£t_skew
();

636 
vútuÆ
 
°¨t_lﬂd_imbÆ™˚
();

639 
vútuÆ
 
db_¥öt_öô
(
num_löes
);

640 
vútuÆ
 
w_rc_t
 
	$db_¥öt
(
num_löes
Ë{ (
RCOK
); 
	}
}

643 
vútuÆ
 
db_„tch_öô
();

644 
vútuÆ
 
w_rc_t
 
	$db_„tch
(Ë{ (
RCOK
); 
	}
}

647 
uöt
 
upd_w‹kî_˙t
();

648 
åx_w‹kî_t
* 
w‹kî
(c⁄° 
uöt
 
idx
);

651 
Reque°Sèck
 
	g_ªque°_poﬁ
;

654 
vútuÆ
 
ív_thªad_öô
()=0;

655 
vútuÆ
 
ív_thªad_föi
()=0;

658 
dißbÀ_Áke_disk_œãncy
();

659 
íabÀ_Áke_disk_œãncy
(c⁄° 
adñay
);

662 
g©hî°©s_sm
();

665 
checkpoöt
();

667 
°rög
 
	$sy¢ame
(Ë{  (
_sy¢ame
); 
	}
}

669 
ív_°©s_t
* 
	$gë_ív_°©s
(Ë{  (&
_ív_°©s
); 
	}
}

672 
uöt_t
 
	$gë_åx_©t
() const;

673 
uöt_t
 
	$gë_åx_com
() const;

675 
ölöe
 
	$öc_åx_©t
(Ë{ 
_ív_°©s
.
	`öc_åx_©t
(); 
	}
}

676 
ölöe
 
	$öc_åx_com
(Ë{ 
_ív_°©s
.
	`öc_åx_com
(); 
	}
}

679 
vútuÆ
 
¥öt_throughput
(c⁄° 
iQuîõdSF
,

680 c⁄° 
iS¥ód
,

681 c⁄° 
iNumOfThªads
,

682 c⁄° 
dñay
,

683 c⁄° 
ul⁄g_t
 
mioch
,

684 c⁄° 
avg˝uußge
)=0;

686 
vútuÆ
 
ª£t_°©s
()=0;

688 
ölöe
 
uöt
 
	$gë_ªc_to_ac˚ss
(Ë{  *&
_ªc_to_acc
; 
	}
}

692 
vútuÆ
 
w_rc_t
 
run_⁄e_x˘
(
Reque°
* 
¥eque°
)=0;

697 
ölöe
 
boﬁ
 
	$isAsynchCommô
(Ëc⁄° {  (
_asynch_commô
); 
	}
}

698 
£tAsynchCommô
(c⁄° 
boﬁ
 
bAsynch
);

702 
	gpublic
:

703 
boﬁ
 
	$isSLIE«bÀd
(Ëc⁄° {  (
_bU£SLI
); 
	}
}

704 
	$£tSLIE«bÀd
(c⁄° 
boﬁ
 
bU£SLI
Ë{ 
_bU£SLI
 = bU£SLI; 
	}
}

705 
	g¥Ÿe˘ed
:

706 
boﬁ
 
_bU£SLI
;

710 
	gpublic
:

711 
boﬁ
 
	$isELRE«bÀd
(Ëc⁄° {  (
_bU£ELR
); 
	}
}

712 
	$£tELRE«bÀd
(c⁄° 
boﬁ
 
bU£ELR
Ë{ 
_bU£ELR
 = bU£ELR; 
	}
}

713 
	g¥Ÿe˘ed
:

714 
boﬁ
 
_bU£ELR
;

718 
	gpublic
:

719 
boﬁ
 
	$isFlushîE«bÀd
(Ëc⁄° {  (
_bU£Flushî
); 
	}
}

720 
	$£tFlushîE«bÀd
(c⁄° 
boﬁ
 
bU£Flushî
Ë{ 
_bU£Flushî
 = bU£Flushî; 
	}
}

722 
	g¥Ÿe˘ed
:

723 
boﬁ
 
_bU£Flushî
;

724 
	ggu¨d
<
	gÊushî_t
> 
	g_ba£_Êushî
;

725 
vútuÆ
 
_°¨t_Êushî
();

726 
vútuÆ
 
_°›_Êushî
();

727 
to_ba£_Êushî
(
Reque°
* 
¨
);

730 
	g¥Ÿe˘ed
:

733 
_£t_sys_∑øms
();

734 
boﬁ
 
	g_asynch_commô
;

740 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_error.h

33 #i‚de‡
__SHORE_ERROR_H


34 
	#__SHORE_ERROR_H


	)

36 
	~"utû/«me•a˚.h
"

39 
ENTER_NAMESPACE
(
sh‹e
);

44 
	m£_NOT_FOUND
 = 0x810001,

45 
	m£_VOLUME_NOT_FOUND
 = 0X810002,

46 
	m£_INDEX_NOT_FOUND
 = 0x810003,

47 
	m£_TABLE_NOT_FOUND
 = 0x810004,

48 
	m£_TUPLE_NOT_FOUND
 = 0x810005,

49 
	m£_NO_CURRENT_TUPLE
 = 0x810006,

50 
	m£_CANNOT_INSERT_TUPLE
 = 0x810007,

52 
	m£_SCAN_OPEN_ERROR
 = 0x810010,

53 
	m£_INCONSISTENT_INDEX
 = 0x810012,

54 
	m£_OPEN_SCAN_ERROR
 = 0x810020,

56 
	m£_LOAD_NOT_EXCLUSIVE
 = 0x810040,

57 
	m£_ERROR_IN_LOAD
 = 0x810041,

58 
	m£_ERROR_IN_IDX_LOAD
 = 0x810042,

60 
	m£_WRONG_DISK_DATA
 = 0x810050,

62 
	m£_INVALID_INPUT
 = 0x810060

67 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_field.h

42 #i‚de‡
__SHORE_FIELD_H


43 
	#__SHORE_FIELD_H


	)

45 
	~"utû.h
"

47 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

50 
ENTER_NAMESPACE
(
sh‹e
);

63 ˛as†
	ctime°amp_t


65 
	m¥iv©e
:

66 
time_t
 
_time
;

68 
	mpublic
:

70 
	$time°amp_t
(Ë{ 
_time
 = 
	`time
(
NULL
); }

71 ~
	$time°amp_t
(Ë{ 
	}
}

73 
	$size
(Ë{  (
time_t
); 
	}
}

74 
	$°rög
(* 
de°
, c⁄° 
Àn
) const {

75 #ifde‡
_POSIX_PTHREAD_SEMANTICS


76 
	`˘ime_r
(&
_time
, 
de°
);

77 #ñi‡
	`deföed
(
SOLARIS2
)

78 
	`˘ime_r
(&
_time
, 
de°
, 
Àn
);

80 
	`˘ime_r
(&
_time
, 
de°
);

82 
de°
[
Àn
-1] = '\0';

83 
	}
}

97 
	esq…y≥_t


99 
	mSQL_BIT
,

100 
	mSQL_SMALLINT
,

101 
	mSQL_INT
,

102 
	mSQL_FLOAT
,

103 
	mSQL_LONG
,

104 
	mSQL_CHAR
,

105 
	mSQL_FIXCHAR
,

106 
	mSQL_VARCHAR
,

107 
	mSQL_TIME
,

109 
	mSQL_NUMERIC
,

110 
	mSQL_SNUMERIC


124 ˛as†
	cfõld_desc_t
 {

125 
	m¥iv©e
:

127 
èès_lock
 
_fõlddesc_lock
;

128 
	m_«me
[
MAX_FIELDNAME_LEN
];

129 
	m_keydesc
[
MAX_KEYDESC_LEN
];

131 
sq…y≥_t
 
	m_ty≥
;

132 
	m_size
;

133 
boﬁ
 
	m_Ælow_nuŒ
;

134 
boﬁ
 
	m_is_£tup
;

136 c⁄° * 
_£t_keydesc
();

138 
	mpublic
:

144 
	$fõld_desc_t
()

145 : 
	`_ty≥
(
SQL_SMALLINT
), 
	`_size
(0),

146 
	`_Ælow_nuŒ
(
åue
), 
	$_is_£tup
(
Ál£
)

148 
	`mem£t
(
_«me
, 0, 
MAX_FIELDNAME_LEN
);

149 
	`mem£t
(
_keydesc
, 0, 
MAX_KEYDESC_LEN
);

152 ~
	$fõld_desc_t
()

154 
	}
}

161 c⁄° * 
	$«me
() const {

163  (
_«me
);

164 
	}
}

166 
ölöe
 
boﬁ
 
	$is_v¨übÀ_Àngth
(
sq…y≥_t
 
ty≥
) const {

168  (
ty≥
 =
SQL_VARCHAR
);

169 
	}
}

171 
ölöe
 
boﬁ
 
	$is_v¨übÀ_Àngth
() const {

172  (
	`is_v¨übÀ_Àngth
(
_ty≥
));

173 
	}
}

175 
ölöe
 
uöt_t
 
	$fõldmaxsize
() const {

177  (
_size
);

178 
	}
}

180 
ölöe
 
sq…y≥_t
 
	$ty≥
() const {

182  (
_ty≥
);

183 
	}
}

185 
ölöe
 
boﬁ
 
	$Ælow_nuŒ
() const {

187  (
_Ælow_nuŒ
);

188 
	}
}

191 c⁄° * 
	$keydesc
() {

193 
	`CRITICAL_SECTION
(
fkd_cs
, 
_fõlddesc_lock
);

194  (
	`_£t_keydesc
());

195 
	}
}

198 
£tup
(c⁄° 
sq…y≥_t
 
ty≥
,

199 c⁄° * 
«me
,

200 c⁄° 
size
 = 0,

201 c⁄° 
boﬁ
 
Ælow_nuŒ
 = 
Ál£
);

204 
¥öt_desc
(
o°ªam
& 
os
 = 
cout
);

220 
	sfõld_vÆue_t


223 
fõld_desc_t
* 
	m_pfõld_desc
;

224 
boﬁ
 
	m_nuŒ_Êag
;

227 
	us_fõld_vÆue_t
 {

228 
boﬁ
 
	m_bô
;

229 
	m_smÆlöt
;

230 
	m_ch¨
;

231 
	m_öt
;

232 
	m_Êﬂt
;

233 
	m_l⁄g
;

234 
time°amp_t
* 
	m_time
;

235 * 
	m_°rög
;

236 } 
	m_vÆue
;

238 * 
	m_d©a
;

239 
uöt_t
 
	m_d©a_size
;

240 
uöt_t
 
	m_ªÆ_size
;

241 
uöt_t
 
	m_max_size
;

248 
fõld_vÆue_t
()

249 : 
_pfõld_desc
(
NULL
), 
_nuŒ_Êag
(
åue
), 
_d©a
(NULL),

250 
_d©a_size
(0), 
_ªÆ_size
(0), 
_max_size
(0)

255 
fõld_vÆue_t
(
fõld_desc_t
* 
pfd
)

256 : 
_pfõld_desc
(
pfd
), 
_nuŒ_Êag
(
åue
), 
_d©a
(
NULL
),

257 
_d©a_size
(0), 
_ªÆ_size
(0), 
_max_size
(0)

259 
£tup
(
pfd
);

263 ~
fõld_vÆue_t
() {

264 i‡(
	m_d©a
) {

265 
‰ì
 (
_d©a
);

266 
	m_d©a
 = 
NULL
;

276 
£tup
(
fõld_desc_t
* 
pfd
);

279 
ª£t
();

281 
ölöe
 
boﬁ
 
is_£tup
(Ë{  ( 
	m_pfõld_desc
 ? 
	måue
 : 
Ál£
); }

284 
ölöe
 
fõld_desc_t
* 
fõld_desc
(Ë{  (
	m_pfõld_desc
); }

285 
ölöe
 
£t_fõld_desc
(
fõld_desc_t
* 
fd
) {

286 
as£π
 (
fd
);

287 
	m_pfõld_desc
 = 
fd
;

291 
ölöe
 
uöt_t
 
ªÆsize
() const {

292 
as£π
 (
_pfõld_desc
);

293  (
	m_ªÆ_size
);

297 
ölöe
 
uöt_t
 
maxsize
() const {

298 
as£π
 (
_pfõld_desc
);

299  (
	m_max_size
);

309 
Æloc_•a˚
(c⁄° 
uöt_t
 
size
);

312 
£t_mö_vÆue
();

313 
£t_max_vÆue
();

316 
ölöe
 
boﬁ
 
is_nuŒ
() const {

317 
as£π
 (
_pfõld_desc
);

318  (
	m_nuŒ_Êag
);

321 
ölöe
 
£t_nuŒ
() {

322 
as£π
 (
_pfõld_desc
);

323 
as£π
 (
_pfõld_desc
->
Ælow_nuŒ
());

324 
	m_nuŒ_Êag
 = 
åue
;

328 
ölöe
 
boﬁ
 
is_v¨übÀ_Àngth
() {

329 
as£π
 (
_pfõld_desc
);

330  (
	m_pfõld_desc
->
is_v¨übÀ_Àngth
());

334 
boﬁ
 
c›y_vÆue
(* 
d©a
) const;

338 
£t_vÆue
(c⁄° * 
d©a
, c⁄° 
uöt
 
Àngth
);

339 
£t_öt_vÆue
(c⁄° 
d©a
);

340 
£t_bô_vÆue
(c⁄° 
boﬁ
 
d©a
);

341 
£t_smÆlöt_vÆue
(c⁄° 
d©a
);

342 
£t_Êﬂt_vÆue
(c⁄° 
d©a
);

343 
£t_l⁄g_vÆue
(c⁄° 
d©a
);

344 
£t_decimÆ_vÆue
(c⁄° 
decimÆ
 
d©a
);

345 
£t_time_vÆue
(c⁄° 
time_t
 
d©a
);

346 
£t_t°amp_vÆue
(c⁄° 
time°amp_t
& 
d©a
);

347 
£t_ch¨_vÆue
(c⁄° 
d©a
);

348 
£t_fixed_°rög_vÆue
(c⁄° * 
°rög
, c⁄° 
uöt
 
Àn
);

349 
£t_v¨_°rög_vÆue
(c⁄° * 
°rög
, c⁄° 
uöt
 
Àn
);

353 
gë_öt_vÆue
() const;

354 
gë_smÆlöt_vÆue
() const;

355 
boﬁ
 
gë_bô_vÆue
() const;

356 
gë_ch¨_vÆue
() const;

357 
gë_°rög_vÆue
(* 
°rög
, c⁄° 
uöt
 
bufsize
) const;

358 
gë_Êﬂt_vÆue
() const;

359 
gë_l⁄g_vÆue
() const;

360 
decimÆ
 
gë_decimÆ_vÆue
() const;

361 
time_t
 
gë_time_vÆue
() const;

362 
	mtime°amp_t
& 
gë_t°amp_vÆue
() const;

364 
boﬁ
 
lﬂd_vÆue_‰om_fûe
(
if°ªam
& 
is
, c⁄° 
dñim
);

371 
¥öt_vÆue
(
o°ªam
& 
os
 = 
cout
);

372 
gë_debug_°r
(* &
buf
);

393 
ölöe
 
	gfõld_desc_t
::
	$£tup
(
sq…y≥_t
 
ty≥
,

394 c⁄° * 
«me
,

395 
size
,

396 
boﬁ
 
Ælow_nuŒ
)

398 
	`CRITICAL_SECTION
(
£tup_cs
, 
_fõlddesc_lock
);

401 
	`°∫˝y
(
_«me
, 
«me
, 
MAX_FIELDNAME_LEN
);

402 
_ty≥
 = 
ty≥
;

405 
_ty≥
) {

406 
SQL_BIT
:

407 
_size
 = (
boﬁ
);

409 
SQL_SMALLINT
:

410 
_size
 = ();

412 
SQL_CHAR
:

413 
_size
 = ();

415 
SQL_INT
:

416 
_size
 = ();

418 
SQL_FLOAT
:

419 
_size
 = ();

421 
SQL_LONG
:

422 
_size
 = ();

424 
SQL_TIME
:

425 
_size
 = (
time°amp_t
);

427 
SQL_FIXCHAR
:

428 
SQL_NUMERIC
:

429 
SQL_SNUMERIC
:

430 
SQL_VARCHAR
:

431 
_size
 = 
size
 * ();

436 
	`_£t_keydesc
();

439 
_Ælow_nuŒ
 = 
Ælow_nuŒ
;

442 
_is_£tup
 = 
åue
;

443 
	}
}

458 
ölöe
 c⁄° * 
	gfõld_desc_t
::
	$_£t_keydesc
()

460 i‡(
	`°æí
(
_keydesc
)>1)

461  (&
_keydesc
[0]);

466 
_ty≥
) {

467 
SQL_BIT
:

468 
SQL_SMALLINT
:

469 
SQL_CHAR
:

470 
SQL_INT
:

471 
	`•rötf
(
_keydesc
, "i%d", 
_size
); ;

473 
SQL_FLOAT
:

474 
SQL_LONG
:

475 
	`•rötf
(
_keydesc
, "f%d", 
_size
); ;

477 
SQL_VARCHAR
:

478 
	`•rötf
(
_keydesc
, "b*%d", 
_size
); ;

480 
SQL_TIME
:

481 
SQL_FIXCHAR
:

482 
SQL_NUMERIC
:

483 
SQL_SNUMERIC
:

484 
	`•rötf
(
_keydesc
, "b%d", 
_size
); ;

486  (&
_keydesc
[0]);

487 
	}
}

506 
ölöe
 
	gfõld_vÆue_t
::
	$£tup
(
fõld_desc_t
* 
pfd
)

508 
	`as£π
 (
pfd
);

511 i‡(
_pfõld_desc
 =
pfd
)

514 
_pfõld_desc
 = 
pfd
;

515 
uöt_t
 
sz
 = 0;

517 
_pfõld_desc
->
	`ty≥
()) {

518 
SQL_BIT
:

519 
_max_size
 = (
boﬁ
);

521 
SQL_SMALLINT
:

522 
_max_size
 = ();

524 
SQL_CHAR
:

525 
_max_size
 = ();

527 
SQL_INT
:

528 
_max_size
 = ();

530 
SQL_FLOAT
:

531 
_max_size
 = ();

533 
SQL_LONG
:

534 
_max_size
 = ();

536 
SQL_TIME
:

537 
sz
 = (
time°amp_t
);

538 
_d©a_size
 = 
sz
;

539 
_ªÆ_size
 = 
sz
;

540 
_max_size
 = 
sz
;

541 i‡(
_d©a
)

542 
	`‰ì
 (
_d©a
);

543 
_d©a
 = (*)
	`mÆloc
(
sz
);

544 
_vÆue
.
_time
 = (
time°amp_t
*)
_d©a
;

546 
SQL_VARCHAR
:

547 
_max_size
 = 
_pfõld_desc
->
	`fõldmaxsize
();

549 
_ªÆ_size
 = 0;

553 
_vÆue
.
_°rög
 = 
_d©a
;

555 
SQL_FIXCHAR
:

556 
SQL_NUMERIC
:

557 
SQL_SNUMERIC
:

558 
sz
 = 
_pfõld_desc
->
	`fõldmaxsize
();

559 
_ªÆ_size
 = 
sz
;

560 
_max_size
 = 
sz
;

562 i‡((
_d©a_size
>=
sz
Ë&& (
_d©a
)) {

565 
	`mem£t
(
_d©a
, 0, 
_d©a_size
);

569 i‡(
_d©a
)

570 
	`‰ì
 (
_d©a
);

571 
_d©a
 = (*)
	`mÆloc
(
sz
);

572 
	`mem£t
(
_d©a
, 0, 
sz
);

573 
_d©a_size
 = 
sz
;

576 
_vÆue
.
_°rög
 = 
_d©a
;

579 
	}
}

591 
ölöe
 
	gfõld_vÆue_t
::
	$ª£t
()

595 
_nuŒ_Êag
 = 
åue
;

596 
_pfõld_desc
->
	`ty≥
()) {

597 
SQL_BIT
:

598 
_vÆue
.
_bô
 = 
Ál£
;

600 
SQL_SMALLINT
:

601 
_vÆue
.
_smÆlöt
 = 0;

603 
SQL_CHAR
:

604 
_vÆue
.
_ch¨
 = 0;

606 
SQL_INT
:

607 
_vÆue
.
_öt
 = 0;

609 
SQL_FLOAT
:

610 
_vÆue
.
_Êﬂt
 = 0;

612 
SQL_LONG
:

613 
_vÆue
.
_l⁄g
 = 0;

615 
SQL_TIME
:

616 
SQL_VARCHAR
:

617 
SQL_FIXCHAR
:

618 
SQL_NUMERIC
:

619 
SQL_SNUMERIC
:

620 i‡(
_d©a
 && 
_d©a_size
Ë
	`mem£t
(_data, 0, _data_size);

622 
	}
}

638 
ölöe
 
	gfõld_vÆue_t
::
	$Æloc_•a˚
(c⁄° 
uöt_t
 
Àn
)

640 
	`as£π
 (
_pfõld_desc
);

641 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_VARCHAR
);

642 
	`as£π
 (
Àn
 <
_ªÆ_size
);

645 i‡(
_d©a_size
 >
Àn
)

649 i‡(
_d©a
) {

650 
	`‰ì
(
_d©a
);

652 
_d©a
 = (*)
	`mÆloc
(
Àn
);

653 
_d©a_size
 = 
Àn
;

656 
	`mem£t
(
_d©a
, 0, 
_d©a_size
);

659 
_vÆue
.
_°rög
 = 
_d©a
;

660 
	}
}

672 
ölöe
 
	gfõld_vÆue_t
::
	$£t_vÆue
(c⁄° * 
d©a
,

673 c⁄° 
uöt
 
Àngth
)

675 
	`as£π
 (
_pfõld_desc
);

676 
_nuŒ_Êag
 = 
Ál£
;

678 
_pfõld_desc
->
	`ty≥
()) {

679 
SQL_BIT
:

680 
SQL_SMALLINT
:

681 
SQL_CHAR
:

682 
SQL_INT
:

683 
SQL_FLOAT
:

684 
SQL_LONG
:

685 
	`mem˝y
(&
_vÆue
, 
d©a
, 
_max_size
);

687 
SQL_TIME
:

688 
	`mem˝y
(
_vÆue
.
_time
, 
d©a
, 
	`MIN
(
Àngth
, 
_ªÆ_size
));

690 
SQL_VARCHAR
:

691 
	`£t_v¨_°rög_vÆue
((c⁄° *)
d©a
, 
Àngth
);

693 
SQL_FIXCHAR
:

694 
SQL_NUMERIC
:

695 
SQL_SNUMERIC
:

696 
_ªÆ_size
 = 
	`MIN
(
Àngth
, 
_max_size
);

697 
	`as£π
(
_d©a_size
 >
_ªÆ_size
);

699 
	`mem˝y
(
_vÆue
.
_°rög
, 
d©a
, 
_ªÆ_size
);

702 
	}
}

714 
ölöe
 
	gfõld_vÆue_t
::
	$£t_mö_vÆue
()

716 
	`as£π
 (
_pfõld_desc
);

717 
_nuŒ_Êag
 = 
Ál£
;

719 
_pfõld_desc
->
	`ty≥
()) {

720 
SQL_BIT
:

721 
_vÆue
.
_bô
 = 
Ál£
;

723 
SQL_SMALLINT
:

724 
_vÆue
.
_smÆlöt
 = 
MIN_SMALLINT
;

726 
SQL_CHAR
:

727 
_vÆue
.
_ch¨
 = 
MIN_SMALLINT
;

729 
SQL_INT
:

730 
_vÆue
.
_öt
 = 
MIN_INT
;

732 
SQL_FLOAT
:

733 
_vÆue
.
_Êﬂt
 = 
MIN_FLOAT
;

735 
SQL_LONG
:

736 
_vÆue
.
_l⁄g
 = 
MIN_FLOAT
;

738 
SQL_VARCHAR
:

739 
SQL_FIXCHAR
:

740 
SQL_NUMERIC
:

741 
SQL_SNUMERIC
:

742 
_d©a
[0] = '\0';

743 
_vÆue
.
_°rög
 = 
_d©a
;

745 
SQL_TIME
:

748 
	}
}

751 
ölöe
 
	gfõld_vÆue_t
::
	$£t_max_vÆue
()

753 
	`as£π
 (
_pfõld_desc
);

755 
_nuŒ_Êag
 = 
Ál£
;

757 
_pfõld_desc
->
	`ty≥
()) {

758 
SQL_BIT
:

759 
_vÆue
.
_bô
 = 
åue
;

761 
SQL_SMALLINT
:

762 
_vÆue
.
_smÆlöt
 = 
MAX_SMALLINT
;

764 
SQL_CHAR
:

765 
_vÆue
.
_ch¨
 = 'z';

767 
SQL_INT
:

768 
_vÆue
.
_öt
 = 
MAX_INT
;

770 
SQL_FLOAT
:

771 
_vÆue
.
_Êﬂt
 = 
MAX_FLOAT
;

773 
SQL_LONG
:

774 
_vÆue
.
_l⁄g
 = 
MAX_FLOAT
;

776 
SQL_VARCHAR
:

777 
SQL_FIXCHAR
:

778 
	`mem£t
(
_d©a
, 'z', 
_d©a_size
);

779 
_vÆue
.
_°rög
 = 
_d©a
;

781 
SQL_NUMERIC
:

782 
SQL_SNUMERIC
:

783 
	`mem£t
(
_d©a
, '9', 
_d©a_size
);

784 
_vÆue
.
_°rög
 = 
_d©a
;

786 
SQL_TIME
:

789 
	}
}

801 
ölöe
 
boﬁ
 
	gfõld_vÆue_t
::
	$c›y_vÆue
(* 
d©a
) const

803 
	`as£π
 (
_pfõld_desc
);

804 
	`as£π
 (!
_nuŒ_Êag
);

806 
_pfõld_desc
->
	`ty≥
()) {

807 
SQL_BIT
:

808 
	`mem˝y
(
d©a
, &
_vÆue
.
_bô
, 
_max_size
);

810 
SQL_SMALLINT
:

811 
	`mem˝y
(
d©a
, &
_vÆue
.
_smÆlöt
, 
_max_size
);

813 
SQL_CHAR
:

814 
	`mem˝y
(
d©a
, &
_vÆue
.
_ch¨
, 
_max_size
);

816 
SQL_INT
:

817 
	`mem˝y
(
d©a
, &
_vÆue
.
_öt
, 
_max_size
);

819 
SQL_FLOAT
:

820 
	`mem˝y
(
d©a
, &
_vÆue
.
_Êﬂt
, 
_max_size
);

822 
SQL_LONG
:

823 
	`mem˝y
(
d©a
, &
_vÆue
.
_l⁄g
, 
_max_size
);

825 
SQL_TIME
:

826 
	`mem˝y
(
d©a
, 
_vÆue
.
_time
, 
_ªÆ_size
);

828 
SQL_VARCHAR
:

829 
	`mem˝y
(
d©a
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

831 
SQL_FIXCHAR
:

832 
SQL_NUMERIC
:

833 
SQL_SNUMERIC
:

834 
	`mem˝y
(
d©a
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

838  (
åue
);

839 
	}
}

851 
ölöe
 
	gfõld_vÆue_t
::
	$£t_öt_vÆue
(c⁄° 
d©a
)

853 
	`as£π
 (
_pfõld_desc
);

854 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_INT
);

855 
_nuŒ_Êag
 = 
Ál£
;

856 
_vÆue
.
_öt
 = 
d©a
;

857 
	}
}

860 
ölöe
 
	gfõld_vÆue_t
::
	$£t_bô_vÆue
(c⁄° 
boﬁ
 
d©a
)

862 
	`as£π
 (
_pfõld_desc
);

863 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_BIT
);

864 
_nuŒ_Êag
 = 
Ál£
;

865 
_vÆue
.
_bô
 = 
d©a
;

866 
	}
}

868 
ölöe
 
	gfõld_vÆue_t
::
	$£t_smÆlöt_vÆue
(c⁄° 
d©a
)

870 
	`as£π
 (
_pfõld_desc
);

871 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_SMALLINT
);

872 
_nuŒ_Êag
 = 
Ál£
;

873 
_vÆue
.
_smÆlöt
 = 
d©a
;

874 
	}
}

876 
ölöe
 
	gfõld_vÆue_t
::
	$£t_ch¨_vÆue
(c⁄° 
d©a
)

878 
	`as£π
 (
_pfõld_desc
);

879 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_CHAR
);

880 
_nuŒ_Êag
 = 
Ál£
;

881 
_vÆue
.
_ch¨
 = 
d©a
;

882 
	}
}

884 
ölöe
 
	gfõld_vÆue_t
::
	$£t_Êﬂt_vÆue
(c⁄° 
d©a
)

886 
	`as£π
 (
_pfõld_desc
);

887 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

888 
_nuŒ_Êag
 = 
Ál£
;

889 
_vÆue
.
_Êﬂt
 = 
d©a
;

890 
	}
}

892 
ölöe
 
	gfõld_vÆue_t
::
	$£t_l⁄g_vÆue
(c⁄° 
d©a
)

894 
	`as£π
 (
_pfõld_desc
);

895 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_LONG
);

896 
_nuŒ_Êag
 = 
Ál£
;

897 
_vÆue
.
_l⁄g
 = 
d©a
;

898 
	}
}

900 
ölöe
 
	gfõld_vÆue_t
::
	$£t_decimÆ_vÆue
(c⁄° 
decimÆ
 
d©a
)

902 
	`as£π
 (
_pfõld_desc
);

903 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

904 
_nuŒ_Êag
 = 
Ál£
;

905 
_vÆue
.
_Êﬂt
 = 
d©a
.
	`to_doubÀ
();

906 
	}
}

908 
ölöe
 
	gfõld_vÆue_t
::
	$£t_time_vÆue
(c⁄° 
time_t
 
d©a
)

910 
	`as£π
 (
_pfõld_desc
);

911 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

912 
_nuŒ_Êag
 = 
Ál£
;

913 
_vÆue
.
_Êﬂt
 = 
d©a
;

914 
	}
}

916 
ölöe
 
	gfõld_vÆue_t
::
	$£t_t°amp_vÆue
(c⁄° 
time°amp_t
& 
d©a
)

918 
	`as£π
 (
_pfõld_desc
);

919 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_TIME
);

920 
_nuŒ_Êag
 = 
Ál£
;

921 
	`mem˝y
(
_vÆue
.
_time
, &
d©a
, 
_ªÆ_size
);

922 
	}
}

933 
ölöe
 
	gfõld_vÆue_t
::
	$£t_fixed_°rög_vÆue
(c⁄° * 
°rög
,

934 c⁄° 
uöt
 
Àn
)

936 
	`as£π
 (
_pfõld_desc
);

937 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FIXCHAR
 ||

938 
_pfõld_desc
->
	`ty≥
(Ë=
SQL_NUMERIC
 ||

939 
_pfõld_desc
->
	`ty≥
(Ë=
SQL_SNUMERIC
);

942 
_ªÆ_size
 = 
	`MIN
(
Àn
, 
_max_size
);

943 
	`as£π
 (
_d©a_size
 >
_ªÆ_size
);

944 
_nuŒ_Êag
 = 
Ál£
;

946 
	`mem˝y
(
_vÆue
.
_°rög
, 
°rög
, 
_ªÆ_size
);

947 
	}
}

961 
ölöe
 
	gfõld_vÆue_t
::
	$£t_v¨_°rög_vÆue
(c⁄° * 
°rög
,

962 c⁄° 
uöt
 
Àn
)

964 
	`as£π
 (
_pfõld_desc
);

965 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_VARCHAR
);

966 
_ªÆ_size
 = 
	`MIN
(
Àn
, 
_max_size
);

967 
	`Æloc_•a˚
(
_ªÆ_size
);

968 
	`as£π
 (
_d©a_size
 >
_ªÆ_size
);

969 
_nuŒ_Êag
 = 
Ál£
;

970 
	`mem˝y
(
_vÆue
.
_°rög
, 
°rög
, 
_ªÆ_size
);

971 
	}
}

984 
ölöe
 
	gfõld_vÆue_t
::
	$gë_öt_vÆue
() const

986 
	`as£π
 (
_pfõld_desc
);

987 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_INT
);

988  (
_vÆue
.
_öt
);

989 
	}
}

991 
ölöe
 
boﬁ
 
	gfõld_vÆue_t
::
	$gë_bô_vÆue
() const

993 
	`as£π
 (
_pfõld_desc
);

994 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_BIT
);

995  (
_vÆue
.
_bô
);

996 
	}
}

998 
ölöe
 
	gfõld_vÆue_t
::
	$gë_smÆlöt_vÆue
() const

1000 
	`as£π
 (
_pfõld_desc
);

1001 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_SMALLINT
);

1002  (
_vÆue
.
_smÆlöt
);

1003 
	}
}

1005 
ölöe
 
	gfõld_vÆue_t
::
	$gë_ch¨_vÆue
() const

1007 
	`as£π
 (
_pfõld_desc
);

1008 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_CHAR
);

1009  (
_vÆue
.
_ch¨
);

1010 
	}
}

1012 
ölöe
 
	gfõld_vÆue_t
::
	$gë_°rög_vÆue
(* 
buf„r
,

1013 c⁄° 
uöt
 
bufsize
) const

1015 
	`as£π
 (
_pfõld_desc
);

1016 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FIXCHAR
 ||

1017 
_pfõld_desc
->
	`ty≥
(Ë=
SQL_VARCHAR
 ||

1018 
_pfõld_desc
->
	`ty≥
(Ë=
SQL_NUMERIC
 ||

1019 
_pfõld_desc
->
	`ty≥
(Ë=
SQL_SNUMERIC
);

1020 
	`mem£t
(
buf„r
, '\0', 
bufsize
);

1021 
	`mem˝y
(
buf„r
, 
_vÆue
.
_°rög
, 
	`MIN
(
bufsize
, 
_ªÆ_size
));

1022 
	}
}

1024 
ölöe
 
	gfõld_vÆue_t
::
	$gë_Êﬂt_vÆue
() const

1026 
	`as£π
 (
_pfõld_desc
);

1027 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

1028  (
_vÆue
.
_Êﬂt
);

1029 
	}
}

1031 
ölöe
 
	gfõld_vÆue_t
::
	$gë_l⁄g_vÆue
() const

1033 
	`as£π
 (
_pfõld_desc
);

1034 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_LONG
);

1035  (
_vÆue
.
_l⁄g
);

1036 
	}
}

1038 
ölöe
 
decimÆ
 
	gfõld_vÆue_t
::
	$gë_decimÆ_vÆue
() const

1040 
	`as£π
 (
_pfõld_desc
);

1041 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

1042  (
	`decimÆ
(
_vÆue
.
_Êﬂt
));

1043 
	}
}

1045 
ölöe
 
time_t
 
	gfõld_vÆue_t
::
	$gë_time_vÆue
() const

1047 
	`as£π
 (
_pfõld_desc
);

1048 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_FLOAT
);

1049  ((
time_t
)
_vÆue
.
_Êﬂt
);

1050 
	}
}

1052 
ölöe
 
	gtime°amp_t
& 
	gfõld_vÆue_t
::
	$gë_t°amp_vÆue
() const

1054 
	`as£π
 (
_pfõld_desc
);

1055 
	`as£π
 (
_pfõld_desc
->
	`ty≥
(Ë=
SQL_TIME
);

1056  *(
_vÆue
.
_time
);

1057 
	}
}

1061 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_file_desc.h

33 #i‚de‡
__SHORE_FILE_DESC_H


34 
	#__SHORE_FILE_DESC_H


	)

36 
	~"sm_vas.h
"

37 
	~"utû.h
"

38 
	~"sm/sh‹e/sh‹e_îr‹.h
"

41 
	~<li°
>

43 
usög
 
	g°d
::
li°
;

46 
ENTER_NAMESPACE
(
sh‹e
);

51 c⁄° 
	gMAX_FNAME_LEN
 = 40;

52 c⁄° 
	gMAX_TABLENAME_LEN
 = 40;

53 c⁄° 
	gMAX_FIELDNAME_LEN
 = 40;

55 c⁄° 
	gMAX_KEYDESC_LEN
 = 40;

56 c⁄° 
	gMAX_FILENAME_LEN
 = 100;

58 c⁄° 
	gMAX_BODY_SIZE
 = 1024;

60 
	#DELIM_CHAR
 '|'

	)

61 
	#ROWEND_CHAR
 '\r'

	)

63 c⁄° 
	gCOMMIT_ACTION_COUNT
 = 2000;

64 c⁄° 
	gCOMMIT_ACTION_COUNT_WITH_ITER
 = 500000;

66 
	#MIN_SMALLINT
 0

	)

67 
	#MAX_SMALLINT
 1<<15

	)

68 
	#MIN_INT
 0

	)

69 
	#MAX_INT
 1<<31

	)

70 
	#MIN_FLOAT
 0

	)

71 
	#MAX_FLOAT
 1<<10

	)

84 
	efûe_ty≥_t
 { 
	mFT_HEAP
 = 0x1,

85 
	mFT_PRIMARY_IDX
 = 0x2,

86 
	mFT_IDX
 = 0x4,

87 
	mFT_NONE
 = 0x8

109 
	ephysiˇl_design_t
 { 
	mPD_NORMAL
 = 0x1,

110 
	mPD_PADDED
 = 0x2,

111 
	mPD_MRBT_NORMAL
 = 0x4,

112 
	mPD_MRBT_PART
 = 0x8,

113 
	mPD_MRBT_LEAF
 = 0x10,

114 
	mPD_NOLOCK
 = 0x20,

115 
	mPD_NOLATCH
 = 0x40

129 ˛as†
	cfûe_desc_t


131 
‰õnd
 
˛ass
 
	mödex_desc_t
;

132 
	m¥Ÿe˘ed
:

134 
±hªad_muãx_t
 
_fschema_muãx
;

135 
	m_«me
[
MAX_FNAME_LEN
];

136 
uöt_t
 
	m_fõld_cou¡
;

138 
vid_t
 
	m_vid
;

139 
°id_t
 
	m_roŸ_iid
;

141 
uöt4_t
 
	m_pd
;

144 
	mpublic
:

146 
°id_t
 
_fid
;

153 
fûe_desc_t
(c⁄° * 
«me
,

154 c⁄° 
uöt_t
 
f˙t
,

155 c⁄° 
uöt4_t
& 
≠d
 = 
PD_NORMAL
);

156 
	mvútuÆ
 ~
fûe_desc_t
();

163 c⁄° * 
	$«me
(Ëc⁄° {  
_«me
; }

164 
ölöe
 
°id_t
& 
	$fid
(Ë{  (
_fid
); 
	}
}

165 
	$£t_fid
(
°id_t
 
fid
Ë{ 
_fid
 = fid; 
	}
}

166 
vid_t
 
	$vid
(Ë{  
_vid
; 
	}
}

167 
°id_t
 
	$roŸ_iid
(Ë{  
_roŸ_iid
; 
	}
}

168 
uöt_t
 
	$fõld_cou¡
(Ëc⁄° {  
_fõld_cou¡
; 
	}
}

170 
uöt4_t
 
	$gë_pd
(Ëc⁄° {  
_pd
; 
	}
}

172 
boﬁ
 
	$is_fid_vÆid
(Ëc⁄° {  (
_fid
 !
°id_t
::
nuŒ
); 
	}
}

173 
boﬁ
 
	$is_vid_vÆid
(Ë{  (
_vid
 !
vid_t
::
nuŒ
); 
	}
}

174 
boﬁ
 
	$is_roŸ_vÆid
(Ë{  (
_roŸ_iid
 !
°id_t
::
nuŒ
); 
	}
}

176 
w_rc_t
 
föd_fid
(
ss_m
* 
db
);

177 
w_rc_t
 
föd_roŸ_iid
(
ss_m
* 
db
);

179 
ölöe
 
w_rc_t
 
	$check_fid
(
ss_m
* 
db
) {

180 i‡(!
	`is_fid_vÆid
()) {

181 i‡(!
	`is_roŸ_vÆid
())

182 
	`W_DO
(
	`föd_roŸ_iid
(
db
));

183 
	`W_DO
(
	`föd_fid
(
db
));

185  (
RCOK
);

186 
	}
}

202 ˛as†
	cfûe_öfo_t


204 
	m¥iv©e
:

205 
_‚ame
[
MAX_FNAME_LEN
];

206 
fûe_ty≥_t
 
	m_·y≥
;

207 
	m°d
::
∑ú
<,> 
	m_ªc‹d_size
;

209 
rid_t
 
	m_fú°_rid
;

210 
rid_t
 
	m_cur_rid
;

212 
	mpublic
:

214 
°id_t
 
_fid
;

217 
fûe_öfo_t
(c⁄° 
°id_t
& 
fid
,

218 c⁄° * 
‚ame
,

219 c⁄° 
fûe_ty≥_t
 
·y≥
 = 
FT_HEAP
);

220 
fûe_öfo_t
();

221 ~
	$fûe_öfo_t
() { }

224 
	$£t_fid
(c⁄° 
°id_t
& 
fid
Ë{ 
_fid
 = fid; 
	}
}

225 
	g°id_t
& 
	$fid
(Ë{  (
_fid
); 
	}
}

226 
	$£t_·y≥
(c⁄° 
fûe_ty≥_t
& 
·y≥
Ë{ 
_·y≥
 = fty≥; 
	}
}

227 
	gfûe_ty≥_t
& 
	$·y≥
(Ë{  (
_·y≥
); 
	}
}

228 
	$£t_fú°_rid
(c⁄° 
rid_t
 
¨id
Ë{ 
_fú°_rid
 =árid; 
	}
}

229 
	grid_t
& 
	$fú°_rid
(Ë{  (
_fú°_rid
); 
	}
}

230 
	$£t_cuº_rid
(c⁄° 
rid_t
 
¨id
Ë{ 
_cur_rid
 =árid; 
	}
}

231 
	grid_t
& 
	$cuº_rid
(Ë{  (
_cur_rid
); 
	}
}

232 
£t_ªc‹d_size
(c⁄° 
°d
::
∑ú
<,> 
≠aú
Ë{ 
	g_ªc‹d_size
 =ápair; }

233 
	g°d
::
∑ú
<,> 
	$ªc‹d_size
(Ë{  (
_ªc‹d_size
); 
	}
}

238 
	g°d
::
	tli°
<
	tfûe_öfo_t
> 
	tfûe_li°
;

242 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_flusher.h

71 #i‚de‡
__SHORE_FLUSHER_H


72 
	#__SHORE_FLUSHER_H


	)

75 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

78 
ENTER_NAMESPACE
(
sh‹e
);

89 
	sÊushî_°©s_t


91 
uöt
 
	m£rved
;

92 
uöt
 
	mÊushes
;

94 
	mlogsize
;

95 
uöt
 
	mÆªadyFlushed
;

96 
uöt
 
	mwaôög
;

98 
uöt
 
	måigByX˘s
;

99 
uöt
 
	måigBySize
;

100 
uöt
 
	måigByTimeout
;

102 
Êushî_°©s_t
();

103 ~
Êushî_°©s_t
();

105 
¥öt
() const;

106 
ª£t
();

113 
Êo‹
(
off£t
, 
block_size
Ë{  (
	moff£t
/
	mblock_size
)*block_size; }

114 
˚û
(
off£t
, 
block_size
Ë{  
Êo‹
(offset + block_size - 1, block_size); }

116 
	m_log∑π_sz
;

117 
_log_diff
(c⁄° 
l¢_t
& 
hód
, c⁄°Ü¢_t& 
èû
);

134 c⁄° 
	gFLUSHER_BUFFER_EXPECTED_SZ
 = 3000;

135 c⁄° 
	gFLUSHER_GROUP_SIZE_THRESHOLD
 = 100;

136 c⁄° 
	gFLUSHER_LOG_SIZE_THRESHOLD
 = 200000;

137 c⁄° 
	gFLUSHER_TIME_THRESHOLD
 = 1000;

140 ˛as†
	cÊushî_t
 : 
public
 
ba£_w‹kî_t


142 
public
:

143 
§mwqueue
<
	tåx_ªque°_t
> 
	tBa£Queue
;

145 
	m¥iv©e
:

149 
gu¨d
<
Ba£Queue
> 
_ba£_toÊush
;

150 
	mgu¨d
<
	mBa£Queue
> 
	m_ba£_Êushög
;

152 
	m¥Ÿe˘ed
:

154 
gu¨d
<
Poﬁ
> 
_px˘_toÊush_poﬁ
;

155 
	mgu¨d
<
	mPoﬁ
> 
	m_px˘_Êushög_poﬁ
;

157 
Êushî_°©s_t
 
	m_°©s
;

159 
vútuÆ
 
_¥e_STOP_im∂
();

160 
_w‹k_ACTIVE_im∂
();

161 
vútuÆ
 
_check_waôög
(
boﬁ
& 
bSÀïNext
,

162 c⁄° 
l¢_t
& 
duøbÀl¢
,

163 
l¢_t
& 
maxl¢
,

164 
uöt
& 
waôög
);

165 
vútuÆ
 
_move_‰om_Êushög
(c⁄° 
l¢_t
& 
duøbÀl¢
);

167 
	mpublic
:

169 
Êushî_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
,

170 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
,

171 c⁄° 
u£_¶i
 = 0);

172 
	mvútuÆ
 ~
Êushî_t
();

174 
ölöe
 
	$íqueue_toÊush
(
åx_ªque°_t
* 
¨eq
)

176 
_ba£_toÊush
->
	`push
(
¨eq
,
åue
);

179 
	`°©i°ics
();

181 
	}
};

185 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_helper_loader.h

31 #i‚de‡
__SHORE_HELPER_LOADER_H


32 
	#__SHORE_HELPER_LOADER_H


	)

34 
	~"sm_vas.h
"

35 
	~"utû.h
"

37 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

40 
ENTER_NAMESPACE
(
sh‹e
);

43 
˛ass
 
	gSh‹eEnv
;

55 ˛as†
	cdb_öô_smt_t
 : 
public
 
thªad_t


57 
¥iv©e
:

58 
Sh‹eEnv
* 
_ív
;

59 
	m_rv
;

61 
	mpublic
:

63 
db_öô_smt_t
(
c_°r
 
äame
, 
Sh‹eEnv
* 
db
);

64 ~
db_öô_smt_t
();

65 
w‹k
();

66 
rv
();

80 ˛as†
	cdb_log_smt_t
 : 
public
 
thªad_t


82 
¥iv©e
:

83 
Sh‹eEnv
* 
_ív
;

84 
	m_rv
;

86 
	mpublic
:

88 
	$db_log_smt_t
(
c_°r
 
äame
, 
Sh‹eEnv
* 
db
)

89 : 
	`thªad_t
(
äame
), 
	$_ív
(
db
)

91 
	`as£π
 (
_ív
);

94 ~
	$db_log_smt_t
(Ë{ 
	}
}

97 
w‹k
();

99 
ölöe
 
	$rv
(Ë{  (
_rv
); 
	}
}

114 ˛as†
	cdb_lﬂd_smt_t
 : 
public
 
thªad_t


116 
¥iv©e
:

117 
Sh‹eEnv
* 
_ív
;

118 
	m_rv
;

120 
	mpublic
:

122 
	$db_lﬂd_smt_t
(
c_°r
 
äame
, 
Sh‹eEnv
* 
db
)

123 : 
	`thªad_t
(
äame
), 
	$_ív
(
db
)

125 
	`as£π
 (
_ív
);

128 ~
	$db_lﬂd_smt_t
(Ë{ 
	}
}

131 
w‹k
();

132 
ölöe
 
	$rv
(Ë{  (
_rv
); 
	}
}

133 
w_rc_t
 
	g_rc
;

148 ˛as†
	cèbÀ_lﬂdög_smt_t
 : 
public
 
thªad_t


150 
¥Ÿe˘ed
:

152 
ss_m
* 
_pssm
;

153 
èbÀ_desc_t
* 
	m_±abÀ
;

154 c⁄° 
	m_sf
;

155 c⁄° * 
	m_d©adú
;

156 
	m_rv
;

158 
	mpublic
:

160 
	$èbÀ_lﬂdög_smt_t
(
c_°r
 
äame
, 
ss_m
* 
assm
,

161 
èbÀ_desc_t
* 
©abÀ
,

162 c⁄° 
asf
, c⁄° * 
ad©adú
)

163 : 
	`thªad_t
(
äame
), 
	`_pssm
(
assm
), 
	`_±abÀ
(
©abÀ
),

164 
	`_sf
(
asf
), 
	$_d©adú
(
ad©adú
)

166 
	`as£π
 (
_pssm
);

167 
	`as£π
 (
_±abÀ
);

168 
	`as£π
 (
_sf
);

169 
	`as£π
 (
_d©adú
);

172 
vútuÆ
 ~
	$èbÀ_lﬂdög_smt_t
(Ë{ 
	}
}

175 
vútuÆ
 
w‹k
()=0;

176 
ölöe
 
	$rv
(Ë{  (
_rv
); 
	}
}

177 
ölöe
 
èbÀ_desc_t
* 
	$èbÀ
(Ë{  (
_±abÀ
); 
	}
}

196 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

197 ˛as†
	cödex_lﬂdög_smt_t
 : 
public
 
thªad_t


199 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

200 
	mèbÀ_m™_im∂
<
	tTabÀDesc
> 
	tèbÀ_m™agî
;

202 
	m¥iv©e
:

204 
ss_m
* 
_pssm
;

205 
èbÀ_m™agî
* 
	m_pm™agî
;

206 
ödex_desc_t
* 
	m_pödex
;

207 
	m_t_cou¡
;

208 
	m_rv
;

211 
	mpublic
:

213 
èbÀ_tu∂e
* 
_±u∂e
;

214 
mcs_lock
 
	m_cs_muãx
;

216 
boﬁ
 
	m_has_to_c⁄sume
;

217 
boﬁ
 
	m_°¨t
;

218 
boﬁ
 
	m_föish
;

221 
	$ödex_lﬂdög_smt_t
(
c_°r
 
äame
, 
ss_m
* 
assm
, 
èbÀ_m™agî
* 
≠èbÀ_m™agî
,

222 
ödex_desc_t
* 
≠ödex
, 
èbÀ_tu∂e
* 
≠tu∂e
)

223 : 
	`thªad_t
(
äame
), 
	`_pssm
(
assm
), 
	`_pm™agî
(
≠èbÀ_m™agî
),

224 
	`_pödex
(
≠ödex
), 
	`_t_cou¡
(0), 
	`_±u∂e
(
≠tu∂e
),

225 
	`_has_to_c⁄sume
(
Ál£
), 
	`_°¨t
(Ál£), 
	$_föish
(
Ál£
)

227 
	`as£π
 (
_pssm
);

228 
	`as£π
 (
_pm™agî
);

229 
	`as£π
 (
_pödex
);

230 
	`as£π
 (
_±u∂e
);

233 ~
	$ödex_lﬂdög_smt_t
()

235 
	}
}

237 
ölöe
 
	$rv
(Ë{  (
_rv
); 
	}
}

239 
w_rc_t
 
	$do_hñp
()

241 
	`as£π
 (
_pm™agî
);

242 
	`as£π
 (
_pödex
);

244 * 
pde°
 = 
NULL
;

245 
bufsz
 = 0;

246 
key_sz
 = 0;

247 
m¨k
 = 
COMMIT_ACTION_COUNT
;

248 
boﬁ
 
c⁄s_h≠≥√d
 = 
Ál£
;

249 
i•ö
 = 0;

251 
	`CRITICAL_SECTION
(
hcs
, &
_cs_muãx
);

252 
hcs
.
	`∑u£
();

254 !
_°¨t
) {

255 
i•ö
++;

258 
	`W_DO
(
_pssm
->
	`begö_x˘
());

260 
åue
) {

263 
hcs
.
	`ªsume
();

265 i‡(
_has_to_c⁄sume
) {

269 i‡(
_föish
)

274 
key_sz
 = 
_pm™agî
->
	`f‹m©_key
(
_pödex
, 
_±u∂e
, *_±u∂e->
_ªp
);

275 
	`as£π
 (
pde°
);

277 
≤um
 = 
_pm™agî
->
	`gë_≤um
(
_pödex
, 
_±u∂e
);

278 
	`W_DO
(
_pssm
->
	`¸óã_assoc
(
_pödex
->
	`fid
(
≤um
),

279 
	`vec_t
(
pde°
, 
key_sz
),

280 
	`vec_t
(&(
_±u∂e
->
_rid
), (
rid_t
))));

282 
_has_to_c⁄sume
 = 
Ál£
;

283 
c⁄s_h≠≥√d
 = 
åue
;

286 
hcs
.
	`∑u£
();

289 i‡(
c⁄s_h≠≥√d
) {

291 
_t_cou¡
++;

293 i‡(
_t_cou¡
 >
m¨k
) {

294 
	`W_DO
(
_pssm
->
	`commô_x˘
());

296 i‡((
_t_cou¡
 % 100000) == 0) {

297 
	`TRACE
–
TRACE_ALWAYS
, "index(%s): %d\n",

298 
_pödex
->
	`«me
(), 
_t_cou¡
);

301 
	`TRACE
–
TRACE_TRX_FLOW
, "index(%s): %d\n",

302 
_pödex
->
	`«me
(), 
_t_cou¡
);

305 
	`W_DO
(
_pssm
->
	`begö_x˘
());

306 
m¨k
 +
COMMIT_ACTION_COUNT
;

308 
c⁄s_h≠≥√d
 = 
Ál£
;

312 
	`W_DO
(
_pssm
->
	`commô_x˘
());

315  (
RCOK
);

316 
	}
}

320 
	$w‹k
() {

321 
w_rc_t
 
e
 = 
	`do_hñp
();

322 i‡(
e
.
	`is_îr‹
()) {

323 
	`TRACE
–
TRACE_ALWAYS
, "Index (%s)Üoadingáborted [0x%x]\n",

324 
_pödex
->
	`«me
(), 
e
.
	`îr_num
());

326 
úërõs
 = 0;

327 
w_rc_t
 
abπ_rc
 = 
_pssm
->
	`ab‹t_x˘
();

329 !
abπ_rc
.
	`is_îr‹
()) {

330 
úërõs
++;

331 
abπ_rc
 = 
_pssm
->
	`ab‹t_x˘
();

332 i‡(
úërõs
 > 
SHORE_NUM_OF_RETRIES
)

336 
_rv
 = 1;

341 
	`as£π
 (
_föish
);

344 
_rv
 = 0;

345 
	}
}

347 
	$cou¡
(Ë{  (
_t_cou¡
); 
	}
}

362 ˛as†
	cèbÀ_checkög_smt_t
 : 
public
 
thªad_t


364 
¥Ÿe˘ed
:

366 
ss_m
* 
_pssm
;

367 
èbÀ_desc_t
* 
	m_±abÀ
;

369 
	mpublic
:

371 
	$èbÀ_checkög_smt_t
(
c_°r
 
äame
, 
ss_m
* 
pssm
,

372 
èbÀ_desc_t
* 
©abÀ
)

373 : 
	`thªad_t
(
äame
), 
	`_pssm
(
pssm
), 
	$_±abÀ
(
©abÀ
)

375 
	`as£π
 (
_pssm
);

376 
	`as£π
 (
_±abÀ
);

379 
vútuÆ
 ~
	$èbÀ_checkög_smt_t
(Ë{ 
	}
}

382 
vútuÆ
 
w‹k
()=0;

387 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

388 ˛as†
	cèbÀ_checkög_smt_im∂
 : 
public
 
èbÀ_checkög_smt_t


390 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

391 
	mèbÀ_m™_im∂
<
	tTabÀDesc
> 
	tèbÀ_m™agî
;

393 
	m¥iv©e
:

395 
èbÀ_m™agî
* 
_pm™agî
;

397 
	mpublic
:

399 
èbÀ_checkög_smt_im∂
(
c_°r
 
äame
, 
ss_m
* 
pssm
,

400 
èbÀ_m™_im∂
<
TabÀDesc
>* 
am™agî
,

401 
èbÀ_desc_t
* 
©abÀ
)

402 : 
èbÀ_checkög_smt_t
(
äame
, 
pssm
, 
©abÀ
), 
	$_pm™agî
(
am™agî
)

404 
	`as£π
 (
_pm™agî
);

407 ~
	$èbÀ_checkög_smt_im∂
(Ë{ 
	}
}

410 
	$w‹k
() {

411 
	`TRACE
–
TRACE_DEBUG
, "Checkög (%s)\n", 
_±abÀ
->
	`«me
());

414 
w_rc_t
 
e
 = 
_pm™agî
->
	`check_Æl_ödexes_togëhî
(
_pssm
);

415 i‡(
e
.
	`is_îr‹
()) {

416 
	`TRACE
–
TRACE_DEBUG
, "Inc⁄si°ícy i¿(%s)\n", 
_±abÀ
->
	`«me
());

419 
	`TRACE
–
TRACE_DEBUG
, "(%sËOK...\n", 
_±abÀ
->
	`«me
());

421 
	}
}

436 ˛as†
	c˛o£_smt_t
 : 
public
 
thªad_t
 {

437 
¥iv©e
:

438 
Sh‹eEnv
* 
_ív
;

440 
	mpublic
:

441 
_rv
;

443 
	$˛o£_smt_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
)

444 : 
	`thªad_t
(
äame
),

445 
	`_ív
(
ív
), 
	$_rv
(0)

449 ~
	$˛o£_smt_t
() {

450 
	}
}

452 
w‹k
();

457 
ölöe
 
	$ªtvÆ
(Ë{  (
_rv
); 
	}
}

472 ˛as†
	cdump_smt_t
 : 
public
 
thªad_t


474 
¥iv©e
:

475 
Sh‹eEnv
* 
_ív
;

477 
	mpublic
:

478 
_rv
;

480 
	$dump_smt_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
)

481 : 
	`thªad_t
(
äame
),

482 
	`_ív
(
ív
), 
	$_rv
(0)

486 ~
	$dump_smt_t
() {

487 
	}
}

489 
w‹k
();

494 
ölöe
 
	$ªtvÆ
(Ë{  (
_rv
); 
	}
}

509 ˛as†
	cab‹t_smt_t
 : 
public
 
thªad_t


511 
¥iv©e
:

512 
Sh‹eEnv
* 
_ív
;

514 
	mpublic
:

516 
ve˘‹
<
x˘_t
*>* 
_tﬂb‹t
;

517 
uöt
 
	m_ab‹ãd
;

519 
ab‹t_smt_t
(
c_°r
 
äame
, 
Sh‹eEnv
* 
ív
, 
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
);

520 ~
ab‹t_smt_t
();

521 
w‹k
();

527 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_index.h

36 #i‚de‡
__SHORE_INDEX_H


37 
	#__SHORE_INDEX_H


	)

39 
	~"sm_vas.h
"

40 
	~"utû.h
"

42 
	~"sm/sh‹e/sh‹e_îr‹.h
"

43 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

44 
	~"sm/sh‹e/sh‹e_ôî.h
"

47 
ENTER_NAMESPACE
(
sh‹e
);

50 
˛ass
 
	gèbÀ_desc_t
;

64 ˛as†
	cödex_desc_t


66 
‰õnd
 
˛ass
 
	mèbÀ_desc_t
;

68 
	m¥iv©e
:

69 
fûe_desc_t
 
_ba£
;

71 
uöt
* 
	m_key
;

72 
boﬁ
 
	m_unique
;

73 
boﬁ
 
	m_¥im¨y
;

74 
boﬁ
 
	m_nﬁock
;

75 
uöt
 
	m_mr
;

76 
boﬁ
 
	m_œtchÀss
;

77 
boﬁ
 
	m_rm≠hﬁdî
;

79 
ödex_desc_t
* 
	m_√xt
;

81 
	m_keydesc
[
MAX_KEYDESC_LEN
];

82 
èès_lock
 
	m_keydesc_lock
;

83 vﬁ©ûê
uöt_t
 
	m_maxkeysize
;

88 
	m_∑πôi⁄_cou¡
;

89 
°id_t
* 
	m_∑πôi⁄_°ids
;

91 
	mpublic
:

97 
ödex_desc_t
(c⁄° * 
«me
, c⁄° 
fõld˙t
,

98 
∑πôi⁄s
, c⁄° 
uöt
* 
fõlds
,

99 
boﬁ
 
unique
=
åue
, boﬁ 
¥im¨y
=
Ál£
,

100 c⁄° 
uöt4_t
& 
pd
=
PD_NORMAL
,

101 
boﬁ
 
rm≠hﬁdî
=
Ál£
);

103 ~
ödex_desc_t
();

110 c⁄° * 
	$«me
(Ëc⁄° {  
_ba£
.
	`«me
(); }

111 
uöt_t
 
	$fõld_cou¡
(Ëc⁄° {  
_ba£
.
	`fõld_cou¡
(); 
	}
}

119 
ölöe
 
w_rc_t
 
	$check_fid
(
ss_m
* 
db
) {

120 if(!
	`is_∑πôi⁄ed
())

121  
_ba£
.
	`check_fid
(
db
);

124 
i
=0; i < 
_∑πôi⁄_cou¡
; i++) {

125 i‡(!
	`is_fid_vÆid
(
i
)) {

126 i‡(!
_ba£
.
	`is_roŸ_vÆid
())

127 
	`W_DO
(
_ba£
.
	`föd_roŸ_iid
(
db
));

128 
	`W_DO
(
	`föd_fid
(
db
, 
i
));

131  (
RCOK
);

132 
	}
}

134 
	g°id_t
& 
	$fid
(c⁄° 
≤um
) {

135 
	`as£π
(
≤um
 >0 &&Önum < 
_∑πôi⁄_cou¡
);

136  
	`is_∑πôi⁄ed
()? 
_∑πôi⁄_°ids
[
≤um
] : 
_ba£
.
	`fid
();

137 
	}
}

138 
w_rc_t
 
föd_fid
(
ss_m
* 
db
, 
≤um
);

140 
boﬁ
 
	$is_fid_vÆid
(
≤um
) const {

141 
	`as£π
(
≤um
 >0 &&Önum < 
_∑πôi⁄_cou¡
);

142  
	`is_∑πôi⁄ed
()? 
_∑πôi⁄_°ids
[
≤um
] !
°id_t
::
nuŒ
 : 
_ba£
.
	`is_fid_vÆid
();

143 
	}
}

144 
£t_fid
(c⁄° 
≤um
, 
°id_t
 c⁄° &
fid
);

150 
uöt4_t
 
	$gë_pd
(Ëc⁄° {  (
_ba£
.
	`gë_pd
()); 
	}
}

151 
ölöe
 
boﬁ
 
	$is_unique
(Ëc⁄° {  (
_unique
); 
	}
}

152 
ölöe
 
boﬁ
 
	$is_¥im¨y
(Ëc⁄° {  (
_¥im¨y
); 
	}
}

153 
ölöe
 
boﬁ
 
	$is_ªœxed
(Ëc⁄° {  (
_nﬁock
); 
	}
}

154 
ölöe
 
boﬁ
 
	$is_mr
(Ëc⁄° {  (
_mr
); 
	}
}

155 
ölöe
 
boﬁ
 
	$is_œtchÀss
(Ëc⁄° {  (
_œtchÀss
); 
	}
}

156 
ölöe
 
boﬁ
 
	$is_rm≠hﬁdî
(Ëc⁄° {  (
_rm≠hﬁdî
); 
	}
}

157 
ölöe
 
boﬁ
 
	$is_∑πôi⁄ed
(Ëc⁄° {  
_∑πôi⁄_cou¡
 > 1; 
	}
}

159 
ölöe
 
	$gë_∑πôi⁄_cou¡
(Ëc⁄° {  
_∑πôi⁄_cou¡
; 
	}
}

160 
ölöe
 
	$gë_keysize
(Ë{  (*&
_maxkeysize
); 
	}
}

161 
ölöe
 
	$£t_keysize
(c⁄° 
uöt_t
 
sz
Ë{ 
	`©omic_sw≠_uöt
(&
_maxkeysize
, sz); 
	}
}

168 
ödex_desc_t
* 
	$√xt
() const;

171 
	$ödex_cou¡
() const;

174 
	`ö£π
(
ödex_desc_t
* 
√w_node
);

177 
ödex_desc_t
* 
	`föd_by_«me
(c⁄° * 
«me
);

179 
	$key_ödex
(c⁄° 
uöt_t
 
ödex
) const;

186 
	`¥öt_desc
(
o°ªam
& 
os
);

188 
	}
};

192 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_iter.h

33 #i‚de‡
__SHORE_ITER_H


34 
	#__SHORE_ITER_H


	)

36 
	~"sm_vas.h
"

37 
	~"utû.h
"

39 
	~"sm/sh‹e/sh‹e_îr‹.h
"

40 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

41 
	~"sm/sh‹e/sh‹e_ödex.h
"

44 
ENTER_NAMESPACE
(
sh‹e
);

55 ˛as†
	csim∂e_èbÀ_ôî_t


57 
	m¥Ÿe˘ed
:

58 
ss_m
* 
_db
;

59 
boﬁ
 
	m_›íed
;

60 
fûe_desc_t
* 
	m_fûe
;

61 
lock_mode_t
 
	m_lm
;

63 
	mgu¨d
<
	msˇn_fûe_i
> 
	m_sˇ¬î
;

65 
	mpublic
:

67 
sim∂e_èbÀ_ôî_t
(
ss_m
* 
db
, 
fûe_desc_t
* 
fûe
, 
lock_mode_t
 
Æm
);

68 ~
sim∂e_èbÀ_ôî_t
();

70 
boﬁ
 
	$›íed
(Ëc⁄° {  (
_›íed
); }

72 
w_rc_t
 
	`›í_sˇn
();

74 
w_rc_t
 
	`√xt
(
boﬁ
& 
eof
, 
pö_i
*& 
h™dÀ
);

76 
w_rc_t
 
	`˛o£_sˇn
();

78 
pö_i
* 
	`curs‹
();

80 
	}
};

92 
˛ass
 
	gödex_desc_t
;

94 ˛as†
	csim∂e_ödex_ôî_t


96 
	m¥Ÿe˘ed
:

97 
ss_m
* 
_db
;

98 
boﬁ
 
	m_›íed
;

99 
ödex_desc_t
* 
	m_idx
;

100 
lock_mode_t
 
	m_lm
;

102 
uöt
 
	m_≤um
;

104 
	mgu¨d
<
	msˇn_ödex_i
> 
	m_sˇ¬î
;

106 
	mpublic
:

108 
sim∂e_ödex_ôî_t
(
ss_m
* 
db
, 
ödex_desc_t
* 
fûe
, 
lock_mode_t
 
Æm
);

109 ~
sim∂e_ödex_ôî_t
();

111 
boﬁ
 
	$›íed
(Ëc⁄° {  (
_›íed
); }

113 
w_rc_t
 
	`›í_sˇn
(
uöt
 
≤um
,

114 
sˇn_ödex_i
::
cmp_t
 
c1
, c⁄° 
cvec_t
& 
bound1
,

115 
sˇn_ödex_i
::
cmp_t
 
c2
, c⁄° 
cvec_t
& 
bound2
);

117 
w_rc_t
 
	`√xt
(
boﬁ
& 
eof
, 
rid_t
& 
rid
);

119 
w_rc_t
 
	`˛o£_sˇn
();

121 
	}
};

134 
	gãm∂©e
 <
˛ass
 
	gfûe_desc
, cœs†
	gfûe_sˇ¬î
, cœs†
	growpoöãr
>

135 ˛as†
	ctu∂e_ôî_t


137 
	m¥Ÿe˘ed
:

138 
ss_m
* 
_db
;

139 
boﬁ
 
	m_›íed
;

140 
fûe_desc
* 
	m_fûe
;

141 
fûe_sˇ¬î
* 
	m_sˇn
;

143 
lock_mode_t
 
	m_lm
;

144 
boﬁ
 
	m_shoulddñëe
;

146 
	mpublic
:

148 
	$tu∂e_ôî_t
(
ss_m
* 
db
, 
fûe_desc
* 
fûe
,

149 
lock_mode_t
 
Æm
, 
boﬁ
 
shoulddñëe
)

151 : 
	`_db
(
db
), 
	`_›íed
(
Ál£
), 
	`_fûe
(
fûe
), 
	`_sˇn
(
NULL
),

152 
	`_lm
(
Æm
), 
	$_shoulddñëe
(
shoulddñëe
)

154 
	`as£π
 (
_db
);

157 
vútuÆ
 ~
	$tu∂e_ôî_t
(Ë{ 
	`˛o£_sˇn
(); 
	}
}

160 
boﬁ
 
	$›íed
(Ëc⁄° {  (
_›íed
); 
	}
}

169 
vútuÆ
 
w_rc_t
 
√xt
(
ss_m
* 
db
, 
boﬁ
& 
eof
, 
rowpoöãr
& 
tu∂e
)=0;

171 
w_rc_t
 
	$˛o£_sˇn
() {

172 i‡((
_›íed
Ë&& (
_shoulddñëe
)) {

174 
	`as£π
 (
_sˇn
);

175 
	`dñëe
 (
_sˇn
);

176 
_sˇn
 = 
NULL
;

178 
_›íed
 = 
Ál£
;

179  (
RCOK
);

180 
	}
}

186 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_msg.h

33 #i‚de‡
__SHORE_MSG_H


34 
	#__SHORE_MSG_H


	)

36 
	~"utû.h
"

38 
ENTER_NAMESPACE
(
sh‹e
);

43 
	sMesßge
 {

44 
Mesßge
–c⁄° * 
s
 ) {

45 
	mcout
 << "SHORE: " << 
	ms
 << 
	mídl
;

47 
Mesßge
–c⁄° * 
pfx
, c⁄° * 
s
 ) {

48 
	mcout
 << "SHORE: " << 
	mpfx
 << 
	ms
 << 
	mídl
;

52 
	#PFX_MESSAGE
(
pfx
,
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 (’fx),(s)); }

	)

53 
	#MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ((s)); }

	)

54 
	#NEWO_MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ("APP:NO: ",(s)); }

	)

55 
	#PAY_MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ("APP:PAY: ",(s)); }

	)

56 
	#SLEV_MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ("APP:SL: ",(s)); }

	)

57 
	#DELV_MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ("APP:DEL: ",(s)); }

	)

58 
	#ORDS_MESSAGE
(
s
Ë{ 
Mesßge
 
msg
 ## 
	`__LINE__
 ("APP:OS: ",(s)); }

	)

61 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_reqs.h

32 #i‚de‡
__SHORE_REQS_H


33 
	#__SHORE_REQS_H


	)

36 
	~"sm_vas.h
"

37 
	~"utû.h
"

40 
ENTER_NAMESPACE
(
sh‹e
);

43 c⁄° 
	gNO_VALID_TRX_ID
 = -1;

53 
	eTrxSèã
 { 
	mUNDEF
 = 0x0,

54 
	mUNSUBMITTED
 = 0x1,

55 
	mSUBMITTED
 = 0x2,

56 
	mPOISSONED
 = 0x4,

57 
	mCOMMITTED
 = 0x8,

58 
	mROLLBACKED
 = 0x10

70 ˛as†
	cåx_ªsu…_tu∂e_t


72 
	m¥iv©e
:

74 
TrxSèã
 
R_STATE
;

75 
	mR_ID
;

76 
c⁄dex
* 
	m_nŸify
;

78 
	mpublic
:

80 
	$åx_ªsu…_tu∂e_t
(Ë{ 
	`ª£t
(
UNDEF
, -1, 
NULL
); }

82 
	$åx_ªsu…_tu∂e_t
(
TrxSèã
 
aTrxSèã
, 
™ID
, 
c⁄dex
* 
≠cx
 = 
NULL
) {

83 
	`ª£t
(
aTrxSèã
, 
™ID
, 
≠cx
);

84 
	}
}

86 ~
	$åx_ªsu…_tu∂e_t
(Ë{ 
	}
}

89 
	$åx_ªsu…_tu∂e_t
(c⁄° 
åx_ªsu…_tu∂e_t
& 
t
) {

90 
	`ª£t
(
t
.
R_STATE
,Å.
R_ID
,Å.
_nŸify
);

91 
	}
}

94 
	gåx_ªsu…_tu∂e_t
& 
	g›î©‹
=(c⁄° 
åx_ªsu…_tu∂e_t
& 
t
) {

95 
ª£t
(
t
.
R_STATE
,Å.
R_ID
,Å.
_nŸify
);

96  (*
	gthis
);

100 
‰õnd
 
boﬁ
 
	g›î©‹
==(c⁄° 
åx_ªsu…_tu∂e_t
& 
t
,

101 c⁄° 
	gåx_ªsu…_tu∂e_t
& 
	gs
)

103  ((
	gt
.
	gR_STATE
 =
s
.
R_STATE
Ë&& (
t
.
R_ID
 == s.R_ID));

108 
c⁄dex
* 
	$gë_nŸify
(Ëc⁄° {  (
_nŸify
); 
	}
}

109 
	$£t_nŸify
(
c⁄dex
* 
nŸify
Ë{ 
_nŸify
 =ÇŸify; 
	}
}

111 
	$gë_id
(Ëc⁄° {  (
R_ID
); 
	}
}

112 
	$£t_id
(c⁄° 
aID
Ë{ 
R_ID
 =áID; 
	}
}

114 
TrxSèã
 
	$gë_°©e
(Ë{  (
R_STATE
); 
	}
}

115 
	$£t_°©e
(
TrxSèã
 
aSèã
) {

116 
	`as£π
 ((
aSèã
 >
UNDEF
Ë&& (aSèã <
ROLLBACKED
));

117 
R_STATE
 = 
aSèã
;

118 
	}
}

120 
	$ª£t
(
TrxSèã
 
aTrxSèã
, 
™ID
, 
c⁄dex
* 
nŸify
) {

122 
	`as£π
 ((
aTrxSèã
 >
UNDEF
Ë&& (aTrxSèã <
ROLLBACKED
));

123 
	`as£π
 (
™ID
 >
NO_VALID_TRX_ID
);

125 
R_STATE
 = 
aTrxSèã
;

126 
R_ID
 = 
™ID
;

127 
_nŸify
 = 
nŸify
;

128 
	}
}

142 
	sba£_ªque°_t


145 
x˘_t
* 
	m_x˘
;

146 
tid_t
 
	m_tid
;

147 
	m_x˘_id
;

148 
åx_ªsu…_tu∂e_t
 
	m_ªsu…
;

150 
ba£_ªque°_t
()

151 : 
_x˘
(
NULL
),
_x˘_id
(-1)

154 
ba£_ªque°_t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

155 c⁄° 
åx_ªsu…_tu∂e_t
& 
¨esu…
)

156 : 
_x˘
(
px˘
),
_tid
(
©id
),
_x˘_id
(
ax˘id
),
_ªsu…
(
¨esu…
)

158 
as£π
 (
px˘
);

161 ~
ba£_ªque°_t
()

163 
	m_x˘
 = 
NULL
;

167 
ölöe
 
£t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

168 c⁄° 
åx_ªsu…_tu∂e_t
& 
¨esu…
)

170 
	m_x˘
 = 
px˘
;

171 
	m_tid
 = 
©id
;

172 
	m_x˘_id
 = 
ax˘id
;

173 
	m_ªsu…
 = 
¨esu…
;

176 
ölöe
 
x˘_t
* 
x˘
(Ë{  (
	m_x˘
); }

177 
ölöe
 
tid_t
 
tid
(Ëc⁄° {  (
	m_tid
); }

178 
ölöe
 
x˘_id
(Ëc⁄° {  (
	m_x˘_id
); }

180 
nŸify_˛õ¡
();

182 
l¢_t
 
	m_my_œ°_l¢
;

183 
ölöe
 
£t_œ°_l¢
(c⁄° 
l¢_t
& 
Æ¢
Ë{ 
	m_my_œ°_l¢
 =álsn; }

184 
ölöe
 
l¢_t
 
my_œ°_l¢
(Ë{  (
	m_my_œ°_l¢
); }

198 
	gåx_ªque°_t
 : 
public
 
ba£_ªque°_t


200 
_x˘_ty≥
;

201 
	g_•ec_id
;

203 
åx_ªque°_t
()

204 : 
ba£_ªque°_t
(), 
_x˘_ty≥
(-1),
_•ec_id
(0)

207 
åx_ªque°_t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

208 c⁄° 
åx_ªsu…_tu∂e_t
& 
¨esu…
,

209 c⁄° 
ax˘ty≥
, c⁄° 
a•ecid
)

210 : 
ba£_ªque°_t
(
px˘
,
©id
,
ax˘id
,
¨esu…
),

211 
_x˘_ty≥
(
ax˘ty≥
), 
_•ec_id
(
a•ecid
)

215 ~
åx_ªque°_t
() { }

217 
£t
(
x˘_t
* 
px˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

218 c⁄° 
åx_ªsu…_tu∂e_t
& 
¨esu…
,

219 c⁄° 
ax˘ty≥
, c⁄° 
a•ecid
)

221 
	gba£_ªque°_t
::
£t
(
px˘
,
©id
,
ax˘id
,
¨esu…
);

222 
	g_x˘_ty≥
 = 
ax˘ty≥
;

223 
	g_•ec_id
 = 
a•ecid
;

226 
ölöe
 
ty≥
(Ëc⁄° {  (
	g_x˘_ty≥
); }

227 
ölöe
 
£t_ty≥
(c⁄° 
©y≥
Ë{ 
	g_x˘_ty≥
 =átype; }

228 
ölöe
 
£À˘edID
(Ë{  (
	g_•ec_id
); }

234 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_row.h

85 #i‚de‡
__SHORE_ROW_H


86 
	#__SHORE_ROW_H


	)

89 
	~"k_deföes.h
"

90 
	~"utû.h
"

92 
	~"sh‹e_fõld.h
"

96 
ENTER_NAMESPACE
(
sh‹e
);

110 
blob_poﬁ
 
	t©s_ch¨_t
;

111 
öçå_t
 
	toff£t_t
;

122 
	sªp_row_t


124 * 
	m_de°
;

125 
uöt
 
	m_bufsz
;

126 
©s_ch¨_t
* 
	m_±s
;

129 
ªp_row_t
();

130 
ªp_row_t
(
©s_ch¨_t
* 
≠ts
);

131 ~
ªp_row_t
();

133 
£t
(c⁄° 
uöt
 
nsz
);

135 
£t_ts
(
©s_ch¨_t
* 
≠ts
, c⁄° 
uöt
 
nsz
);

150 
˛ass
 
	gèbÀ_desc_t
;

152 
	sèbÀ_row_t


154 
èbÀ_desc_t
* 
	m_±abÀ
;

156 
uöt
 
	m_fõld_˙t
;

157 
boﬁ
 
	m_is_£tup
;

159 
rid_t
 
	m_rid
;

160 
fõld_vÆue_t
* 
	m_pvÆues
;

163 
off£t_t
 
	m_fixed_off£t
;

164 
off£t_t
 
	m_v¨_¶Ÿ_off£t
;

165 
off£t_t
 
	m_v¨_off£t
;

166 
uöt
 
	m_nuŒ_cou¡
;

168 
ªp_row_t
* 
	m_ªp
;

169 
ªp_row_t
* 
	m_ªp_key
;

176 
èbÀ_row_t
();

177 
èbÀ_row_t
(
èbÀ_desc_t
* 
±d
)

178 : 
_±abÀ
(
NULL
),

179 
_fõld_˙t
(0), 
_is_£tup
(
Ál£
),

180 
_rid
(
rid_t
::
nuŒ
), 
_pvÆues
(
NULL
),

181 
_fixed_off£t
(0),
_v¨_¶Ÿ_off£t
(0),
_v¨_off£t
(0),
_nuŒ_cou¡
(0),

182 
_ªp
(
NULL
), 
_ªp_key
(NULL)

184 
as£π
 (
±d
);

185 
£tup
(
±d
);

188 
	mvútuÆ
 ~
èbÀ_row_t
();

198 
£tup
(
èbÀ_desc_t
* 
±d
);

205 
ölöe
 
rid_t
 
rid
(Ëc⁄° {  (
	m_rid
); }

206 
ölöe
 
£t_rid
(c⁄° 
rid_t
& 
rid
Ë{ 
	m_rid
 =Ñid; }

207 
ölöe
 
boﬁ
 
is_rid_vÆid
(Ëc⁄° {  (
	m_rid
 !
rid_t
::
nuŒ
); }

209 
ölöe
 
off£t_t
 
gë_fixed_off£t
(Ëc⁄° {  (
	m_fixed_off£t
); }

210 
ölöe
 
off£t_t
 
gë_v¨_¶Ÿ_off£t
(Ëc⁄° {  (
	m_v¨_¶Ÿ_off£t
); }

211 
ölöe
 
off£t_t
 
gë_v¨_off£t
(Ëc⁄° {  (
	m_v¨_off£t
); }

212 
ölöe
 
uöt
 
gë_nuŒ_cou¡
(Ëc⁄° {  (
	m_nuŒ_cou¡
); }

214 
uöt
 
size
() const;

221 
£t_nuŒ
(c⁄° 
uöt
 
idx
);

222 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
);

223 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
boﬁ
 
v
);

224 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
);

225 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
);

226 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
);

227 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
decimÆ
 
v
);

228 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
time_t
 
v
);

229 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
);

230 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° * 
°rög
);

231 
£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
time°amp_t
& 
time
);

238 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, & 
de°
) const;

239 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, boﬁ& 
de°
) const;

240 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, & 
de°
) const;

241 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, & 
de°
) const;

242 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, * 
de°buf
, c⁄° uöà
bufsize
) const;

243 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, & 
de°
) const;

244 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, & 
de°
) const;

245 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, 
decimÆ
& 
de°
) const;

246 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, 
time_t
& 
de°
) const;

247 
boﬁ
 
gë_vÆue
(c⁄° 
uöt
 
idx
, 
time°amp_t
& 
de°
) const;

254 
¥öt_vÆues
(
o°ªam
& 
os
 = 
cout
);

255 
¥öt_tu∂e
();

256 
¥öt_tu∂e_no_åacög
();

266 
ª£t
() {

267 
as£π
 (
_is_£tup
);

268 
uöt_t
 
	mi
=0; i<
	m_fõld_˙t
; i++)

269 
	m_pvÆues
[
i
].
ª£t
();

272 
‰ìvÆues
()

274 i‡(
	m_pvÆues
) {

275 
	mdñëe
 [] 
	m_pvÆues
;

276 
	m_pvÆues
 = 
NULL
;

291 
	gãm∂©e
<
˛ass
 
	gM
, cœs†
	gT
=
èbÀ_row_t
>

292 
	stu∂e_gu¨d
 {

293 
T
* 
±r
;

294 
M
* 
	mm™agî
;

295 
tu∂e_gu¨d
(
M
* 
m
)

296 : 
±r
(
m
->
gë_tu∂e
()), 
m™agî
(mË{ 
as£π
(ptr); }

297 ~
tu∂e_gu¨d
(Ë{ 
	mm™agî
->
give_tu∂e
(
±r
); }

298 
T
* 
	m›î©‹
->(Ë{  
	m±r
; }

299 
›î©‹
 
	mT
*(Ë{  
	m±r
; }

300 
	m¥iv©e
:

302 
tu∂e_gu¨d
(tuple_guard&);

303 
	m›î©‹
=(
tu∂e_gu¨d
&);

323 
ölöe
 
	gèbÀ_row_t
::
	$£t_nuŒ
(c⁄° 
uöt
 
idx
)

325 
	`as£π
 (
_is_£tup
);

326 
	`as£π
 (
idx
 < 
_fõld_˙t
);

327 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

328 
_pvÆues
[
idx
].
	`£t_nuŒ
();

329 
	}
}

331 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
)

333 
	`as£π
 (
_is_£tup
);

334 
	`as£π
 (
idx
 < 
_fõld_˙t
);

335 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

336 
_pvÆues
[
idx
].
	`£t_öt_vÆue
(
v
);

337 
	}
}

339 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
boﬁ
 
v
)

341 
	`as£π
 (
_is_£tup
);

342 
	`as£π
 (
idx
 < 
_fõld_˙t
);

343 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

344 
_pvÆues
[
idx
].
	`£t_bô_vÆue
(
v
);

345 
	}
}

347 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
)

349 
	`as£π
 (
_is_£tup
);

350 
	`as£π
 (
idx
 < 
_fõld_˙t
);

351 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

352 
_pvÆues
[
idx
].
	`£t_smÆlöt_vÆue
(
v
);

353 
	}
}

355 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
)

357 
	`as£π
 (
_is_£tup
);

358 
	`as£π
 (
idx
 < 
_fõld_˙t
);

359 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

360 
_pvÆues
[
idx
].
	`£t_Êﬂt_vÆue
(
v
);

361 
	}
}

363 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
)

365 
	`as£π
 (
_is_£tup
);

366 
	`as£π
 (
idx
 < 
_fõld_˙t
);

367 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

368 
_pvÆues
[
idx
].
	`£t_l⁄g_vÆue
(
v
);

369 
	}
}

371 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
decimÆ
 
v
)

373 
	`as£π
 (
_is_£tup
);

374 
	`as£π
 (
idx
 < 
_fõld_˙t
);

375 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

376 
_pvÆues
[
idx
].
	`£t_decimÆ_vÆue
(
v
);

377 
	}
}

379 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
time_t
 
v
)

381 
	`as£π
 (
_is_£tup
);

382 
	`as£π
 (
idx
 < 
_fõld_˙t
);

383 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

384 
_pvÆues
[
idx
].
	`£t_time_vÆue
(
v
);

385 
	}
}

387 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
v
)

389 
	`as£π
 (
_is_£tup
);

390 
	`as£π
 (
idx
 < 
_fõld_˙t
);

391 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

392 
_pvÆues
[
idx
].
	`£t_ch¨_vÆue
(
v
);

393 
	}
}

395 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° * 
°rög
)

397 
	`as£π
 (
_is_£tup
);

398 
	`as£π
 (
idx
 < 
_fõld_˙t
);

399 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

401 
sq…y≥_t
 
sq…
 = 
_pvÆues
[
idx
].
	`fõld_desc
()->
	`ty≥
();

402 
	`as£π
 (
sq…
 =
SQL_VARCHAR
 || sq… =
SQL_FIXCHAR
 );

404 
Àn
 = 
	`°æí
(
°rög
);

405 i‡–
sq…
 =
SQL_VARCHAR
 ) {

407 
_pvÆues
[
idx
].
	`£t_v¨_°rög_vÆue
(
°rög
, 
Àn
);

411 
_pvÆues
[
idx
].
	`£t_fixed_°rög_vÆue
(
°rög
, 
Àn
);

413 
	}
}

415 
ölöe
 
	gèbÀ_row_t
::
	$£t_vÆue
(c⁄° 
uöt
 
idx
, c⁄° 
time°amp_t
& 
time
)

417 
	`as£π
 (
_is_£tup
);

418 
	`as£π
 (
idx
 < 
_fõld_˙t
);

419 
	`as£π
 (
_pvÆues
[
idx
].
	`is_£tup
());

420 
_pvÆues
[
idx
].
	`£t_vÆue
(&
time
, 0);

421 
	}
}

431 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

432 & 
de°
) const

434 
	`as£π
 (
_is_£tup
);

435 
	`as£π
(
idx
 < 
_fõld_˙t
);

436 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

437 
de°
 = 0;

438  
Ál£
;

440 
de°
 = 
_pvÆues
[
idx
].
	`gë_öt_vÆue
();

441  
åue
;

442 
	}
}

444 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

445 
boﬁ
& 
de°
) const

447 
	`as£π
 (
_is_£tup
);

448 
	`as£π
(
idx
 < 
_fõld_˙t
);

449 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

450 
de°
 = 
Ál£
;

451  
Ál£
;

453 
de°
 = 
_pvÆues
[
idx
].
	`gë_bô_vÆue
();

454  
åue
;

455 
	}
}

457 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

458 & 
de°
) const

460 
	`as£π
 (
_is_£tup
);

461 
	`as£π
(
idx
 < 
_fõld_˙t
);

462 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

463 
de°
 = 0;

464  
Ál£
;

466 
de°
 = 
_pvÆues
[
idx
].
	`gë_smÆlöt_vÆue
();

467  
åue
;

468 
	}
}

470 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

471 & 
de°
) const

473 
	`as£π
 (
_is_£tup
);

474 
	`as£π
(
idx
 < 
_fõld_˙t
);

475 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

476 
de°
 = 0;

477  
Ál£
;

479 
de°
 = 
_pvÆues
[
idx
].
	`gë_ch¨_vÆue
();

480  
åue
;

481 
	}
}

483 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

484 * 
de°buf
,

485 c⁄° 
uöt
 
bufsize
) const

487 
	`as£π
 (
_is_£tup
);

488 
	`as£π
(
idx
 < 
_fõld_˙t
);

489 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

490 
de°buf
[0] = '\0';

491  (
Ál£
);

494 
uöt_t
 
sz
 = 
	`MIN
(
bufsize
-1, 
_pvÆues
[
idx
].
_max_size
);

495 
_pvÆues
[
idx
].
	`gë_°rög_vÆue
(
de°buf
, 
sz
);

496 
de°buf
[
sz
] ='\0';

497  (
åue
);

498 
	}
}

500 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

501 & 
de°
) const

503 
	`as£π
 (
_is_£tup
);

504 
	`as£π
(
idx
 < 
_fõld_˙t
);

505 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

506 
de°
 = 0;

507  
Ál£
;

509 
de°
 = 
_pvÆues
[
idx
].
	`gë_Êﬂt_vÆue
();

510  
åue
;

511 
	}
}

513 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

514 & 
de°
) const

516 
	`as£π
 (
_is_£tup
);

517 
	`as£π
(
idx
 < 
_fõld_˙t
);

518 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

519 
de°
 = 0;

520  
Ál£
;

522 
de°
 = 
_pvÆues
[
idx
].
	`gë_l⁄g_vÆue
();

523  
åue
;

524 
	}
}

526 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

527 
decimÆ
& 
de°
) const

529 
	`as£π
 (
_is_£tup
);

530 
	`as£π
(
idx
 < 
_fõld_˙t
);

531 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

532 
de°
 = 
	`decimÆ
(0);

533  
Ál£
;

535 
de°
 = 
_pvÆues
[
idx
].
	`gë_decimÆ_vÆue
();

536  
åue
;

537 
	}
}

539 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

540 
time_t
& 
de°
) const

542 
	`as£π
 (
_is_£tup
);

543 
	`as£π
(
idx
 < 
_fõld_˙t
);

544 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

545  
Ál£
;

547 
de°
 = 
_pvÆues
[
idx
].
	`gë_time_vÆue
();

548  
åue
;

549 
	}
}

551 
ölöe
 
boﬁ
 
	gèbÀ_row_t
::
	$gë_vÆue
(c⁄° 
uöt
 
idx
,

552 
time°amp_t
& 
de°
) const

554 
	`as£π
 (
_is_£tup
);

555 
	`as£π
(
idx
 < 
_fõld_˙t
);

556 i‡(
_pvÆues
[
idx
].
	`is_nuŒ
()) {

557  
Ál£
;

559 
de°
 = 
_pvÆues
[
idx
].
	`gë_t°amp_vÆue
();

560  
åue
;

561 
	}
}

565 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_row_cache.h

34 #i‚de‡
__SHORE_ROW_CACHE_H


35 
	#__SHORE_ROW_CACHE_H


	)

37 
	~"k_deföes.h
"

38 
	~"block_Æloc.h
"

39 
	~"sm/sh‹e/sh‹e_row.h
"

41 
ENTER_NAMESPACE
(
sh‹e
);

43 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

44 ˛as†
	crow_ˇche_t


46 
	mpublic
:

47 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

49 
	stu∂e_Á˘‹y
 {

51 
	mTabÀDesc
* &
±abÀ
() {

52 
TabÀDesc
* 
	m_±abÀ
;

53  
	m_±abÀ
;

55 
èbÀ_tu∂e
* 
c⁄°ru˘
(* 
±r
) {

56  
√w
(
±r
Ë
èbÀ_tu∂e
(
±abÀ
());

58 
de°roy
(
èbÀ_tu∂e
* 
t
Ë{ 
	mt
->~table_tuple(); }

60 
ª£t
(
èbÀ_tu∂e
* 
t
) {

61 
as£π
 (
t
->
_±abÀ
 =
±abÀ
());

62 
	mt
->
ª£t
();

67 
èbÀ_tu∂e
* 
öô
—abÀ_tu∂e* 
t
Ë{  
	mt
; }

70 
	g¥iv©e
:

71 
obje˘_ˇche
<
	tèbÀ_tu∂e
, 
	ttu∂e_Á˘‹y
> 
	tCache
;

72 
Cache
 
	g_ˇche
;

74 
	gpublic
:

78 
èbÀ_tu∂e
* 
	$b‹row
(Ë{  
_ˇche
.
	`acquúe
(); 
	}
}

84 
	$giveback
(
èbÀ_tu∂e
* 
±n
)

86 
	`as£π
 (
±n
);

87 
Cache
::
	`ªÀa£
(
±n
);

88 
	}
}

93 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_shell.h

31 #i‚de‡
__SHORE_SHELL_H


32 
	#__SHORE_SHELL_H


	)

34 
	~"k_deföes.h
"

36 
	~"utû/shñl.h
"

38 
	~"sm/sh‹e/sh‹e_ív.h
"

39 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

40 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

43 
ENTER_NAMESPACE
(
sh‹e
);

48 
usög
 
	g°d
::
m≠
;

50 "C" 
Æ¨m_h™dÀr
(
sig
);

52 
boﬁ
 vﬁ©ûê
_g_ˇn˚Àd
;

54 
˛ass
 
	gsh‹e_shñl_t
;

58 c⁄° 
	gDF_SF
 = 10;

59 
_theSF
;

64 c⁄° 
	gDF_NUM_OF_QUERIED_SF
 = 10;

67 c⁄° 
	gDF_TRX_ID
 = -1;

74 
	#DECLARE_ENV_CMD
(
«me
) \

75 
«me
##
_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 { \

76 
Sh‹eEnv
* 
_ív
; \

77 
«me
##
	`_cmd_t
(
Sh‹eEnv
* 
aEnv
Ë: 
	`_ív
(aEnv) { }; \

78 ~
«me
##
	`_cmd_t
() { } \

79 
	`£èlü£s
(); \

80 
	`h™dÀ
(c⁄° * 
cmd
); \

81 
	`ußge
(); \

82 
°rög
 
	`desc
(Ëc⁄°; }

	)

85 
DECLARE_ENV_CMD
(
ª°¨t
);

86 
DECLARE_ENV_CMD
(
öfo
);

87 
DECLARE_ENV_CMD
(
°©s
);

88 
DECLARE_ENV_CMD
(
sm°©s
);

89 
DECLARE_ENV_CMD
(
dump
);

90 
DECLARE_ENV_CMD
(
Áke_iodñay
);

91 
DECLARE_ENV_CMD
(
‰eq
);

92 
DECLARE_ENV_CMD
(
skew
);

93 
DECLARE_ENV_CMD
(
db_¥öt
);

94 
DECLARE_ENV_CMD
(
db_„tch
);

95 
DECLARE_ENV_CMD
(
°©s_vîbo£
);

96 
DECLARE_ENV_CMD
(
log
);

105 
	#DECLARE_ENV_ONOFF_CMD
(
«me
) \

106 
«me
##
_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 { \

107 
Sh‹eEnv
* 
_ív
; \

108 
boﬁ
 
_íabÀd
; \

109 
«me
##
	`_cmd_t
(
Sh‹eEnv
* 
aEnv
); \

110 ~
«me
##
	`_cmd_t
() { } \

111 
	`£èlü£s
(); \

112 
	`h™dÀ
(c⁄° * 
cmd
); \

113 
	`ußge
(); \

114 
°rög
 
	`desc
(Ëc⁄°; }

	)

117 
DECLARE_ENV_ONOFF_CMD
(
asynch
);

119 
DECLARE_ENV_ONOFF_CMD
(
¶i
);

120 
DECLARE_ENV_ONOFF_CMD
(
ñr
);

122 #ifde‡
CFG_BT


123 
DECLARE_ENV_ONOFF_CMD
(
bt
);

130 
	#DECLARE_ENV_VAR_CMD
(
«me
,
v¨ty≥
) \

131 
«me
##
_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 { \

132 
Sh‹eEnv
* 
_ív
; \

133 
v¨ty≥
 
_°©e
; \

134 
«me
##
	`_cmd_t
(
Sh‹eEnv
* 
aEnv
, c⁄° 
v¨ty≥
 
aSèã
); \

135 ~
«me
##
	`_cmd_t
() { } \

136 
	`£èlü£s
(); \

137 
	`h™dÀ
(c⁄° * 
cmd
); \

138 
	`ußge
(); \

139 
°rög
 
	`desc
(Ëc⁄°; }

	)

145 
	#DECLARE_KIT_CMD
(
«me
) \

146 
«me
##
_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 { \

147 
sh‹e_shñl_t
* 
_kô
; \

148 
«me
##
	`_cmd_t
(
sh‹e_shñl_t
* 
aKô
Ë: 
	`_kô
(aKit) { }; \

149 ~
«me
##
	`_cmd_t
() { } \

150 
	`£èlü£s
(); \

151 
	`h™dÀ
(c⁄° * 
cmd
); \

152 
	`ußge
(); \

153 
°rög
 
	`desc
(Ëc⁄°; }

	)

156 
DECLARE_KIT_CMD
(
mósuª
);

157 
DECLARE_KIT_CMD
(
ã°
);

158 
DECLARE_KIT_CMD
(
w¨mup
);

159 
DECLARE_KIT_CMD
(
lﬂd
);

160 
DECLARE_KIT_CMD
(
åxs
);

182 ˛as†
	csh‹e_shñl_t
 : 
public
 
shñl_t


184 
¥Ÿe˘ed
:

186 
Sh‹eEnv
* 
_ív
;

188 
¥o˚ss‹id_t
 
	m_°¨t_¥s_id
;

189 
¥o˚ss‹id_t
 
	m_cuºít_¥s_id
;

192 
	mm≠
<,
	t°rög
> 
	tm≠SupTrxs
;

193 
	mm≠SupTrxs
::
	tôî©‹
 
	tm≠SupTrxsIt
;

194 
	mm≠SupTrxs
::
	tc⁄°_ôî©‹
 
	tm≠SupTrxsC⁄°It
;

196 
m≠SupTrxs
 
	m_sup_åxs
;

199 
	mm≠
<
	teBödögTy≥
,
	t°rög
> 
	tm≠BödPﬁs
;

200 
	mm≠BödPﬁs
::
	tôî©‹
 
	tm≠BödPﬁsIt
;

201 
m≠BödPﬁs
 
	m_sup_bps
;

205 
	mgu¨d
<
	mª°¨t_cmd_t
> 
	m_ª°¨ãr
;

206 
	mgu¨d
<
	möfo_cmd_t
> 
	m_öf‹mî
;

207 
	mgu¨d
<
	m°©s_cmd_t
> 
	m_°©î
;

208 
	mgu¨d
<
	msm°©s_cmd_t
> 
	m_sm°©î
;

209 
	mgu¨d
<
	mdump_cmd_t
> 
	m_dum≥r
;

210 
	mgu¨d
<
	mÁke_iodñay_cmd_t
> 
	m_Ákei€r
;

211 
	mgu¨d
<
	m‰eq_cmd_t
> 
	m_‰eqî
;

212 
	mgu¨d
<
	mskew_cmd_t
> 
	m_skewî
;

213 
	mgu¨d
<
	m°©s_vîbo£_cmd_t
> 
	m_°©s_vîbo£r
;

214 
	mgu¨d
<
	mdb_¥öt_cmd_t
> 
	m_db_¥öãr
;

215 
	mgu¨d
<
	mdb_„tch_cmd_t
> 
	m_db_„tch
;

217 
	mgu¨d
<
	mlog_cmd_t
> 
	m_loggî
;

218 
	mgu¨d
<
	masynch_cmd_t
> 
	m_asynchî
;

220 
	mgu¨d
<
	m¶i_cmd_t
> 
	m_¶õr
;

221 
	mgu¨d
<
	mñr_cmd_t
> 
	m_ñªr
;

223 #ifde‡
CFG_BT


224 
	mgu¨d
<
	mbt_cmd_t
> 
	m_bãr
;

227 
	mgu¨d
<
	mmósuª_cmd_t
> 
	m_mósuªr
;

228 
	mgu¨d
<
	mã°_cmd_t
> 
	m_ã°î
;

229 
	mgu¨d
<
	mw¨mup_cmd_t
> 
	m_w¨mu≥r
;

230 
	mgu¨d
<
	mlﬂd_cmd_t
> 
	m_lﬂdî
;

231 
	mgu¨d
<
	måxs_cmd_t
> 
	m_åx£r
;

233 
	mpublic
:

235 
sh‹e_shñl_t
(c⁄° * 
¥om±
,

236 c⁄° 
boﬁ
 
√tmode
,

237 c⁄° 
√ç‹t
,

238 c⁄° 
boﬁ
 
öputfûemode
,

239 c⁄° 
°rög
 
öputfûe
,

240 
¥o˚ss‹id_t
 
a˝u°¨t
 = 
PBIND_NONE
);

241 
	mvútuÆ
 ~
sh‹e_shñl_t
();

244 
ölöe
 
Sh‹eEnv
* 
	$db
(Ë{ (
_ív
); }

247 
vútuÆ
 
	`¥e_¥o˚ss_cmd
();

248 
vútuÆ
 
	`¥öt_ußge
(c⁄° * 
comm™d
);

249 
vútuÆ
 
	`SIGINT_h™dÀr
();

251 
vútuÆ
 
	`ªgi°î_comm™ds
();

255 
vútuÆ
 
	`ö°_ã°_ív
(
¨gc
, * 
¨gv
[])=0;

258 
vútuÆ
 
	`lﬂd_åxs_m≠
()=0;

259 
vútuÆ
 
	`lﬂd_bp_m≠
()=0;

260 
	$¥öt_sup_åxs
() const;

261 
	`¥öt_sup_bp
();

262 c⁄° * 
	$å™¶©e_åx
(c⁄° 
iSñe˘edTrx
) const;

263 c⁄° * 
	`å™¶©e_bp
(c⁄° 
eBödögTy≥
 
abt
);

267 
vútuÆ
 
	`¥o˚ss_cmd_MEASURE
(c⁄° * 
comm™d
);

268 
vútuÆ
 
	`¥o˚ss_cmd_TEST
(c⁄° * 
comm™d
);

269 
vútuÆ
 
	`¥o˚ss_cmd_WARMUP
(c⁄° * 
comm™d
);

270 
vútuÆ
 
	`¥o˚ss_cmd_LOAD
(c⁄° * 
comm™d
);

276 
vútuÆ
 
	`_cmd_WARMUP_im∂
(c⁄° 
iQuîõdSF
, c⁄° 
iTrxs
,

277 c⁄° 
iDuøti⁄
, c⁄° 
iIãøti⁄s
);

278 
vútuÆ
 
	`_cmd_LOAD_im∂
();

280 
vútuÆ
 
	`_cmd_TEST_im∂
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

281 c⁄° 
iNumOfThªads
, c⁄° 
iNumOfTrxs
,

282 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

283 c⁄° 
eBödögTy≥
 
abt
)=0;

284 
vútuÆ
 
	`_cmd_MEASURE_im∂
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

285 c⁄° 
iNumOfThªads
, c⁄° 
iDuøti⁄
,

286 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

287 c⁄° 
eBödögTy≥
 
abt
)=0;

289 
vútuÆ
 
w_rc_t
 
	$¥ï¨eNewRun
(Ë{  (
RCOK
); 
	}
}

292 
vútuÆ
 
¥o˚ss‹id_t
 
√xt_˝u
(c⁄° 
eBödögTy≥
 
abt
,

293 c⁄° 
¥o˚ss‹id_t
 
≠rd
);

296 
	g¥Ÿe˘ed
:

298 
¥öt_MEASURE_öfo
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

299 c⁄° 
iNumOfThªads
, c⁄° 
iDuøti⁄
,

300 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

301 c⁄° 
eBödögTy≥
 
abt
);

303 
¥öt_TEST_öfo
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

304 c⁄° 
iNumOfThªads
, c⁄° 
iNumOfTrxs
,

305 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

306 c⁄° 
eBödögTy≥
 
abt
);

311 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_table.h

91 #i‚de‡
__SHORE_TABLE_H


92 
	#__SHORE_TABLE_H


	)

95 
	~"utû.h
"

96 
	~"sm_vas.h
"

98 
	~"sh‹e_msg.h
"

99 
	~"sh‹e_îr‹.h
"

100 
	~"sh‹e_fûe_desc.h
"

101 
	~"sh‹e_toﬁs.h
"

102 
	~"sh‹e_fõld.h
"

103 
	~"sh‹e_ödex.h
"

104 
	~"sh‹e_row.h
"

107 
ENTER_NAMESPACE
(
sh‹e
);

120 ˛as†
	cèbÀ_desc_t
 : 
public
 
fûe_desc_t


122 
¥Ÿe˘ed
:

128 
ss_m
* 
_db
;

130 
fõld_desc_t
* 
	m_desc
;

132 
ödex_desc_t
* 
	m_ödexes
;

133 
ödex_desc_t
* 
	m_¥im¨y_idx
;

135 vﬁ©ûê
uöt_t
 
	m_maxsize
;

138 * 
	m_sMöKey
;

139 
uöt
 
	m_sMöKeyLí
;

140 * 
	m_sMaxKey
;

141 
uöt
 
	m_sMaxKeyLí
;

142 
uöt
 
	m_numP¨ts
;

144 
	$föd_fõld_by_«me
(c⁄° * 
fõld_«me
) const;

146 
public
:

152 
	`èbÀ_desc_t
(c⁄° * 
«me
, 
fõld˙t
, 
uöt4_t
 
pd
);

153 
vútuÆ
 ~
	`èbÀ_desc_t
();

164 
w_rc_t
 
	`£t_∑πôi⁄ög
(c⁄° * 
sMöKey
, 
uöt
 
Àn1
,

165 c⁄° * 
sMaxKey
, 
uöt
 
Àn2
,

166 
uöt
 
numP¨ts
);

169 
uöt
 
	$p˙t
() const;

170 * 
	$gëMöKey
() const;

171 
uöt
 
	$gëMöKeyLí
() const;

172 * 
	$gëMaxKey
() const;

173 
uöt
 
	$gëMaxKeyLí
() const;

175 
w_rc_t
 
	`gë_maö_øngem≠
(
key_ønges_m≠
*& 
¥™gem≠
);

182 
w_rc_t
 
	`¸óã_physiˇl_èbÀ
(
ss_m
* 
db
);

184 
w_rc_t
 
	`¸óã_physiˇl_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
ödex
);

186 
w_rc_t
 
	`¸óã_physiˇl_em±y_¥im¨y_idx
();

194 
boﬁ
 
	`¸óã_ödex_desc
(c⁄° * 
«me
,

195 
∑πôi⁄s
,

196 c⁄° 
uöt
* 
fõlds
,

197 c⁄° 
uöt
 
num
,

198 c⁄° 
boﬁ
 
unique
=
åue
,

199 c⁄° 
boﬁ
 
¥im¨y
=
Ál£
,

200 c⁄° 
uöt4_t
& 
pd
=
PD_NORMAL
);

202 
boﬁ
 
	`¸óã_¥im¨y_idx_desc
(c⁄° * 
«me
,

203 
∑πôi⁄s
,

204 c⁄° 
uöt
* 
fõlds
,

205 c⁄° 
uöt
 
num
,

206 c⁄° 
uöt4_t
& 
pd
=
PD_NORMAL
);

214 
ödex_desc_t
* 
	$ödexes
(Ë{  (
_ödexes
); }

217 
ödex_desc_t
* 
	$föd_ödex
(c⁄° * 
ödex_«me
) {

218  (
_ödexes
 ? _ödexes->
	`föd_by_«me
(
ödex_«me
Ë: 
NULL
);

219 
	}
}

222 
	$ödex_cou¡
(Ë{  (
_ödexes
->
	`ödex_cou¡
()); 
	}
}

224 
ödex_desc_t
* 
	$¥im¨y_idx
(Ë{  (
_¥im¨y_idx
); 
	}
}

225 
°id_t
 
gë_¥im¨y_°id
();

230 
	$£t_¥im¨y
(
ödex_desc_t
* 
idx
) {

231 
	`as£π
 (
idx
->
	`is_¥im¨y
(Ë&& idx->
	`is_unique
());

232 
_¥im¨y_idx
 = 
idx
;

233 
	}
}

235 * 
ödex_keydesc
(
ödex_desc_t
* 
idx
);

236 
	$ödex_maxkeysize
(
ödex_desc_t
* 
ödex
) const;

242 
uöt_t
 
	`maxsize
();

244 
ölöe
 
fõld_desc_t
* 
	$desc
(c⁄° 
uöt_t
 
descidx
) {

245 
	`as£π
 (
descidx
<
_fõld_cou¡
);

246 
	`as£π
 (
_desc
);

247  (&(
_desc
[
descidx
]));

248 
	}
}

253 
	$£t_db
(
ss_m
* 
db
Ë{ 
_db
 = db; 
	}
}

254 
ss_m
* 
	$db
(Ë{  (
_db
); 
	}
}

260 
¥öt_desc
(
o°ªam
 & 
os
 = 
cout
);

265 
	g°d
::
	tli°
<
	tèbÀ_desc_t
*> 
	tèbÀ_li°_t
;

277 ˛as†
	cèbÀ_m™_t


279 
	m¥Ÿe˘ed
:

281 
èbÀ_desc_t
* 
_±abÀ
;

283 
	mgu¨d
<
	m©s_ch¨_t
> 
	m_±s
;

285 
	mpublic
:

287 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

289 
	$èbÀ_m™_t
(
èbÀ_desc_t
* 
aTabÀDesc
,

290 
boﬁ
 
c⁄°ru˘_ˇche
=
åue
)

291 : 
	$_±abÀ
(
aTabÀDesc
)

294 i‡(
c⁄°ru˘_ˇche
) {

296 
_±s
 = 
√w
 
	`©s_ch¨_t
(
_±abÀ
->
	`maxsize
());

300 
vútuÆ
 ~
	$èbÀ_m™_t
(Ë{
	}
}

302 
mcs_lock
 
	gªgi°î_èbÀ_lock
;

303 
ªgi°î_èbÀ_m™
();

304 
	g°d
::
m≠
<
°id_t
, 
	gèbÀ_m™_t
*> 
	g°id_to_èbÀm™
;

306 
èbÀ_desc_t
* 
	$èbÀ
(Ë{  (
_±abÀ
); 
	}
}

308 
	$gë_≤um
(
ödex_desc_t
* 
pödex
, 
èbÀ_tu∂e
 c⁄°* 
±u∂e
) const;

311 
w_rc_t
 
	`lﬂd_™d_ªgi°î_fid
(
ss_m
* 
db
);

317 
©s_ch¨_t
* 
	$ts
(Ë{ 
	`as£π
 (
_±s
);  (_±s); 
	}
}

325 
w_rc_t
 
ödex_¥obe
(
ss_m
* 
db
,

326 
ödex_desc_t
* 
pidx
,

327 
èbÀ_tu∂e
* 
±u∂e
,

328 c⁄° 
lock_mode_t
 
lock_mode
 = 
SH
,

329 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

332 
ölöe
 
w_rc_t
 
	$ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

333 
ödex_desc_t
* 
pidx
,

334 
èbÀ_tu∂e
* 
±u∂e
,

335 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

337  (
	`ödex_¥obe
(
db
, 
pidx
, 
±u∂e
, 
EX
, 
roŸ
));

338 
	}
}

341 
ölöe
 
w_rc_t
 
	$ödex_¥obe_∆
(
ss_m
* 
db
,

342 
ödex_desc_t
* 
pidx
,

343 
èbÀ_tu∂e
* 
±u∂e
,

344 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

346  (
	`ödex_¥obe
(
db
, 
pidx
, 
±u∂e
, 
NL
, 
roŸ
));

347 
	}
}

350 
ölöe
 
w_rc_t
 
	$ödex_¥obe_¥im¨y
(
ss_m
* 
db
,

351 
èbÀ_tu∂e
* 
±u∂e
,

352 
lock_mode_t
 
lock_mode
 = 
SH
,

353 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

355 
	`as£π
 (
_±abÀ
 && _±abÀ->
	`¥im¨y_idx
());

356  (
	`ödex_¥obe
(
db
, 
_±abÀ
->
	`¥im¨y_idx
(), 
±u∂e
, 
lock_mode
, 
roŸ
));

357 
	}
}

364 
ölöe
 
w_rc_t
 
	$ödex_¥obe_by_«me
(
ss_m
* 
db
,

365 c⁄° * 
idx_«me
,

366 
èbÀ_tu∂e
* 
±u∂e
,

367 
lock_mode_t
 
lock_mode
 = 
SH
,

368 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

370 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
(
idx_«me
);

371  (
	`ödex_¥obe
(
db
, 
pödex
, 
±u∂e
, 
lock_mode
, 
roŸ
));

372 
	}
}

375 
ölöe
 
w_rc_t
 
	$ödex_¥obe_f‹upd©e_by_«me
(
ss_m
* 
db
,

376 c⁄° * 
idx_«me
,

377 
èbÀ_tu∂e
* 
±u∂e
,

378 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

380 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
(
idx_«me
);

381  (
	`ödex_¥obe_f‹upd©e
(
db
, 
pödex
, 
±u∂e
, 
roŸ
));

382 
	}
}

385 
ölöe
 
w_rc_t
 
	$ödex_¥obe_∆_by_«me
(
ss_m
* 
db
,

386 c⁄° * 
idx_«me
,

387 
èbÀ_tu∂e
* 
±u∂e
,

388 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
)

390 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
(
idx_«me
);

391  (
	`ödex_¥obe_∆
(
db
, 
pödex
, 
±u∂e
, 
roŸ
));

392 
	}
}

399 
w_rc_t
 
add_tu∂e
(
ss_m
* 
db
,

400 
èbÀ_tu∂e
* 
±u∂e
,

401 c⁄° 
lock_mode_t
 
lock_mode
 = 
EX
,

402 c⁄° 
Õid_t
& 
¥im¨y_roŸ
 =Üpid_t::
nuŒ
);

404 
w_rc_t
 
add_ödex_íåy
(
ss_m
* 
db
,

405 c⁄° * 
idx_«me
,

406 
èbÀ_tu∂e
* 
±u∂e
,

407 c⁄° 
lock_mode_t
 
lock_mode
 = 
EX
,

408 c⁄° 
Õid_t
& 
¥im¨y_roŸ
 =Üpid_t::
nuŒ
);

410 
w_rc_t
 
add_∂p_tu∂e
(
ss_m
* 
db
,

411 
èbÀ_tu∂e
* 
±u∂e
,

412 c⁄° 
lock_mode_t
 
lock_mode
,

413 c⁄° 
uöt
 
sy°em_mode
,

414 c⁄° 
Õid_t
& 
¥im¨y_roŸ
 =Üpid_t::
nuŒ
);

416 
w_rc_t
 
dñëe_tu∂e
(
ss_m
* 
db
,

417 
èbÀ_tu∂e
* 
±u∂e
,

418 c⁄° 
lock_mode_t
 
lock_mode
 = 
EX
,

419 c⁄° 
Õid_t
& 
¥im¨y_roŸ
 =Üpid_t::
nuŒ
);

421 
w_rc_t
 
dñëe_ödex_íåy
(
ss_m
* 
db
,

422 c⁄° * 
idx_«me
,

423 
èbÀ_tu∂e
* 
±u∂e
,

424 c⁄° 
lock_mode_t
 
lock_mode
 = 
EX
,

425 c⁄° 
Õid_t
& 
¥im¨y_roŸ
 =Üpid_t::
nuŒ
);

429 
w_rc_t
 
upd©e_tu∂e
(
ss_m
* 
db
,

430 
èbÀ_tu∂e
* 
±u∂e
,

431 c⁄° 
lock_mode_t
 
lock_mode
 = 
EX
);

434 
w_rc_t
 
ªad_tu∂e
(
èbÀ_tu∂e
* 
±u∂e
,

435 
lock_mode_t
 
lock_mode
 = 
SH
,

436 
œtch_mode_t
 
hóp_œtch_mode
 = 
LATCH_SH
);

445 
f‹m©
(
èbÀ_tu∂e
* 
±u∂e
, 
ªp_row_t
 &
¨ï
);

448 
boﬁ
 
lﬂd
(
èbÀ_tu∂e
* 
±u∂e
, c⁄° * 
°rög
);

451 
	$size
(
èbÀ_tu∂e
* 
±u∂e
) const;

454 
	`f‹m©_key
(
ödex_desc_t
* 
pödex
,

455 
èbÀ_tu∂e
* 
±u∂e
,

456 
ªp_row_t
 &
¨ï
);

459 
boﬁ
 
	`lﬂd_key
(c⁄° * 
°rög
,

460 
ödex_desc_t
* 
pödex
,

461 
èbÀ_tu∂e
* 
±u∂e
);

464 
	`mö_key
(
ödex_desc_t
* 
pödex
,

465 
èbÀ_tu∂e
* 
±u∂e
,

466 
ªp_row_t
 &
¨ï
);

469 
	`max_key
(
ödex_desc_t
* 
pödex
,

470 
èbÀ_tu∂e
* 
±u∂e
,

471 
ªp_row_t
 &
¨ï
);

474 
	$key_size
(
ödex_desc_t
* 
pödex
,

475 c⁄° 
èbÀ_tu∂e
* 
±u∂e
) const;

485 
vútuÆ
 
w_rc_t
 
	`check_Æl_ödexes_togëhî
(
ss_m
* 
db
)=0;

486 
vútuÆ
 
boﬁ
 
	`check_Æl_ödexes
(
ss_m
* 
db
)=0;

487 
vútuÆ
 
w_rc_t
 
	`check_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
pidx
)=0;

488 
vútuÆ
 
w_rc_t
 
	`sˇn_Æl_ödexes
(
ss_m
* 
db
)=0;

489 
vútuÆ
 
w_rc_t
 
	`sˇn_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
pidx
)=0;

495 
vútuÆ
 
w_rc_t
 
	$p›uœã
(
ss_m
* 
db
, 
boﬁ
& 
hasNext
Ë{  (
RCOK
); 
	}
}

507 
vútuÆ
 
w_rc_t
 
¥öt_èbÀ
(
ss_m
* 
db
, 
num_löes
)=0;

515 
vútuÆ
 
w_rc_t
 
„tch_èbÀ
(
ss_m
* 
db
, 
lock_mode_t
 
Æm
 = 
SH
);

527 
w_rc_t
 
ªloˇã_ªc‹ds
(
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

528 
ve˘‹
<
rid_t
>& 
√w_rids
);

545 
	gñ_fûÀr_∑π
 : 
public
 
ñ_fûÀr


547 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

549 
ñ_fûÀr_∑π
(
size_t
 
ödexíåysz
,

550 
ss_m
* 
db
,

551 
èbÀ_m™_t
* 
±abÀ
,

552 
èbÀ_tu∂e
* 
±u∂e
,

553 
ödex_desc_t
* 
pödex
,

554 
boﬁ
 
bIgn‹eLocks
);

555 
ss_m
* 
	g_db
;

556 
èbÀ_m™_t
* 
	g_±abÀm™
;

557 
èbÀ_tu∂e
* 
	g_±u∂e
;

558 
ödex_desc_t
* 
	g_pödex
;

559 
boﬁ
 
	g_bIgn‹eLocks
;

560 
rc_t
 
fûl_ñ
(
vec_t
& 
ñ
, c⁄° 
Õid_t
& 
Àaf
);

581 
ölöe
 
	gèbÀ_desc_t
::
	$föd_fõld_by_«me
(c⁄° * 
fõld_«me
) const

583 
uöt_t
 
i
=0; i<
_fõld_cou¡
; i++) {

584 i‡(
	`°rcmp
(
fõld_«me
, 
_desc
[
i
].
	`«me
())==0)

585  (
i
);

588 
	}
}

601 
ölöe
 * 
	gèbÀ_desc_t
::
	$ödex_keydesc
(
ödex_desc_t
* 
idx
)

603 
	`CRITICAL_SECTION
(
idx_kd_cs
, 
idx
->
_keydesc_lock
);

604 i‡(
	`°æí
(
idx
->
_keydesc
)>1)

605  (
idx
->
_keydesc
);

608 
uöt_t
 
i
=0; i<
idx
->
	`fõld_cou¡
(); i++) {

609 
	`°rˇt
(
idx
->
_keydesc
, 
_desc
[idx->
	`key_ödex
(
i
)].
	`keydesc
());

611  (
idx
->
_keydesc
);

612 
	}
}

627 
ölöe
 
	gèbÀ_desc_t
::
	$ödex_maxkeysize
(
ödex_desc_t
* 
idx
) const

629 
uöt_t
 
size
 = 0;

630 i‡((
size
 = 
idx
->
	`gë_keysize
()) > 0) {

633  (
size
);

637 
uöt_t
 
ix
 = 0;

638 
uöt_t
 
i
=0; i<
idx
->
	`fõld_cou¡
(); i++) {

639 
ix
 = 
idx
->
	`key_ödex
(
i
);

640 
size
 +
_desc
[
ix
].
	`fõldmaxsize
();

643 
idx
->
	`£t_keysize
(
size
);

644 (
size
);

645 
	}
}

658 
ölöe
 
uöt_t
 
	gèbÀ_desc_t
::
	$maxsize
()

661 i‡(*&
_maxsize
)

662  (*&
_maxsize
);

665 
uöt_t
 
size
 = 0;

666 
uöt_t
 
v¨_cou¡
 = 0;

667 
uöt_t
 
nuŒ_cou¡
 = 0;

668 
uöt_t
 
i
=0; i<
_fõld_cou¡
; i++) {

669 
size
 +
_desc
[
i
].
	`fõldmaxsize
();

670 i‡(
_desc
[
i
].
	`Ælow_nuŒ
()Ë
nuŒ_cou¡
++;

671 i‡(
_desc
[
i
].
	`is_v¨übÀ_Àngth
()Ë
v¨_cou¡
++;

674 
size
 +(
v¨_cou¡
*(
off£t_t
)Ë+ (
nuŒ_cou¡
>>3) + 1;

681 
	`as£π
 ((*&
_maxsize
==0Ë|| (*&_maxsize==
size
));

683 
	`©omic_sw≠_uöt
(&
_maxsize
, 
size
);

684  (*&
_maxsize
);

685 
	}
}

701 ˛as†
	cèbÀ_¥öãr_t
 : 
public
 
thªad_t


703 
¥iv©e
:

705 
Sh‹eEnv
* 
_ív
;

706 
	m_löes
;

708 
	mpublic
:

710 
èbÀ_¥öãr_t
(
Sh‹eEnv
* 
_ív
, 
löes
);

711 ~
èbÀ_¥öãr_t
();

712 
w‹k
();

730 ˛as†
	cèbÀ_„tchî_t
 : 
public
 
thªad_t


732 
¥iv©e
:

734 
Sh‹eEnv
* 
_ív
;

736 
	mpublic
:

738 
èbÀ_„tchî_t
(
Sh‹eEnv
* 
_ív
);

739 ~
èbÀ_„tchî_t
();

740 
w‹k
();

745 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_table_man.h

49 #i‚de‡
__SHORE_TABLE_MANAGER_H


50 
	#__SHORE_TABLE_MANAGER_H


	)

53 
	~"sm_vas.h
"

54 
	~"utû.h
"

56 
	~"sh‹e_èbÀ.h
"

57 
	~"sh‹e_row_ˇche.h
"

60 
ENTER_NAMESPACE
(
sh‹e
);

64 
	#DECLARE_TABLE_SCHEMA
(
èbÀ«me
) \

65 ˛as†
	cèbÀ«me
 : 
public
 
èbÀ_desc_t
 { \

66 
public
: 
	`èbÀ«me
(
°rög
 
sy¢ame
); }

	)

69 
	#DECLARE_TABLE_SCHEMA_PD
(
èbÀ«me
) \

70 ˛as†
	cèbÀ«me
 : 
public
 
èbÀ_desc_t
 { \

71 
public
: 
	`èbÀ«me
(c⁄° 
uöt4_t
& 
pd
); }

	)

80 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

81 
˛ass
 
	gèbÀ_sˇn_ôî_im∂
;

83 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

84 
˛ass
 
	gödex_sˇn_ôî_im∂
;

96 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

97 ˛as†
	cèbÀ_m™_im∂
 : 
public
 
èbÀ_m™_t


99 
public
:

100 
èbÀ_sˇn_ôî_im∂
<
	tTabÀDesc
> 
	tèbÀ_ôî
;

101 
	mödex_sˇn_ôî_im∂
<
	tTabÀDesc
> 
	tödex_ôî
;

102 
	mrow_ˇche_t
<
	tTabÀDesc
> 
	trow_ˇche
;

104 
	m¥Ÿe˘ed
:

111 
	spˇche_lök
 {

112 
row_ˇche
* 
és_gë
();

113 
›î©‹
 
	mrow_ˇche
*(Ë{  
és_gë
(); }

114 
row_ˇche
* 
	m›î©‹
->(Ë{  
és_gë
(); }

118 
	#_DEFINE_ROW_CACHE_TLS
(
èbÀ_m™
, 
és_«me
) \

119 
	`DECLARE_TLS
(
èbÀ_m™
::
row_ˇche
, 
és_«me
); \

120 
ãm∂©e
<> 
èbÀ_m™
::
row_ˇche
*ÅabÀ_m™::
pˇche_lök
::
	$és_gë
(Ë{  
és_«me
; 
	}

	)
}

121 
	#DEFINE_ROW_CACHE_TLS
(
ns
, 
«me
) \

122 
	`_DEFINE_ROW_CACHE_TLS
(
ns
::
«me
##
_m™_im∂
,Çs##«me##
_ˇche
)

	)

124 
TabÀDesc
* 
	g_p•ecifi˘abÀ
;

125 
pˇche_lök
 
	g_pˇche
;

128 
	gpublic
:

134 
	$èbÀ_m™_im∂
(
TabÀDesc
* 
aTabÀDesc
,

135 
boﬁ
 
c⁄°ru˘_ˇche
=
åue
)

136 : 
	`èbÀ_m™_t
(
aTabÀDesc
, 
c⁄°ru˘_ˇche
),

137 
	$_p•ecifi˘abÀ
(
aTabÀDesc
)

139 
	`as£π
 (
_±abÀ
);

140 
row_ˇche
::
tu∂e_Á˘‹y
::
	`±abÀ
(Ë
aTabÀDesc
;

141 
	}
}

148 
w_rc_t
 
gë_ôî_f‹_fûe_sˇn
(
ss_m
* 
db
,

149 
èbÀ_ôî
* &
ôî
,

150 
lock_mode_t
 
Æm
 = 
SH
);

152 
w_rc_t
 
gë_ôî_f‹_ödex_sˇn
(
ss_m
* 
db
,

153 
ödex_desc_t
* 
pödex
,

154 
ödex_ôî
* &
ôî
,

155 
lock_mode_t
 
Æm
,

156 
boﬁ
 
√ed_tu∂e
,

157 
sˇn_ödex_i
::
cmp_t
 
c1
,

158 c⁄° 
cvec_t
 & 
bound1
,

159 
sˇn_ödex_i
::
cmp_t
 
c2
,

160 c⁄° 
cvec_t
 & 
bound2
);

169 
w_rc_t
 
check_Æl_ödexes_togëhî
(
ss_m
* 
db
);

170 
boﬁ
 
check_Æl_ödexes
(
ss_m
* 
db
);

171 
w_rc_t
 
check_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
pidx
);

172 
w_rc_t
 
sˇn_Æl_ödexes
(
ss_m
* 
db
);

173 
w_rc_t
 
sˇn_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
pidx
);

180 
row_ˇche
* 
	$gë_ˇche
(Ë{ 
	`as£π
 (
_pˇche
);  (_pˇche); 
	}
}

182 
ölöe
 
èbÀ_tu∂e
* 
	$gë_tu∂e
()

184  (
_pˇche
->
	`b‹row
());

185 
	}
}

188 
ölöe
 
	$give_tu∂e
(
èbÀ_tu∂e
* 
±t
)

190 
_pˇche
->
	`giveback
(
±t
);

191 
	}
}

198 
w_rc_t
 
¥öt_èbÀ
(
ss_m
* 
db
, 
num_löes
);

213 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

214 
˛ass
 
	gèbÀ_sˇn_ôî_im∂
 :

215 
public
 
tu∂e_ôî_t
<
TabÀDesc
, 
	gsˇn_fûe_i
, 
	gèbÀ_row_t
 >

217 
	gpublic
:

218 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

219 
	gèbÀ_m™_im∂
<
	tTabÀDesc
> 
	tèbÀ_m™agî
;

220 
	gtu∂e_ôî_t
<
	tTabÀDesc
, 
	tsˇn_fûe_i
, 
	tèbÀ_row_t
 > 
	tèbÀ_ôî
;

222 
	g¥iv©e
:

224 
èbÀ_m™agî
* 
_pm™agî
;

226 
	gpublic
:

232 
èbÀ_sˇn_ôî_im∂
(
ss_m
* 
db
,

233 
TabÀDesc
* 
±abÀ
,

234 
èbÀ_m™agî
* 
pm™agî
,

235 
lock_mode_t
 
Æm
)

236 : 
èbÀ_ôî
(
db
, 
±abÀ
, 
Æm
, 
åue
), 
_pm™agî
(
pm™agî
)

238 
as£π
 (
_pm™agî
);

239 
W_COERCE
(
›í_sˇn
(
db
));

242 ~
èbÀ_sˇn_ôî_im∂
() {

243 
	gtu∂e_ôî_t
<
	gTabÀDesc
, 
	gsˇn_fûe_i
, 
	gèbÀ_row_t
 >::
˛o£_sˇn
();

251 
w_rc_t
 
›í_sˇn
(
ss_m
* 
db
) {

252 i‡(!
	gèbÀ_ôî
::
_›íed
) {

253 
as£π
 (
db
);

254 
boﬁ
 
	gbIgn‹eL©ches
 = (
èbÀ_ôî
::
_fûe
->
gë_pd
(Ë& (
PD_MRBT_LEAF
 | 
PD_MRBT_PART
Ë? 
åue
 : 
Ál£
);

255 
	gèbÀ_ôî
::
_sˇn
 = 
√w
 
sˇn_fûe_i
(
èbÀ_ôî
::
_fûe
->
fid
(),

256 
ss_m
::
t_cc_ªc‹d
,

257 
Ál£
,

258 
èbÀ_ôî
::
_lm
,

259 
bIgn‹eL©ches
);

260 
	gèbÀ_ôî
::
_›íed
 = 
åue
;

262  (
	gRCOK
);

266 
pö_i
* 
curs‹
() {

267 
pö_i
 *
	grvÆ
;

268 
boﬁ
 
	geof
;

269 
	gèbÀ_ôî
::
_sˇn
->
curs‹
(
rvÆ
, 
eof
);

270  (
	geof
? 
	gNULL
 : 
rvÆ
);

274 
w_rc_t
 
√xt
(
ss_m
* 
db
, 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
) {

275 
as£π
 (
_pm™agî
);

276 i‡(!
	gèbÀ_ôî
::
_›íed
Ë
›í_sˇn
(
db
);

277 
pö_i
* 
	gh™dÀ
;

278 
W_DO
(
èbÀ_ôî
::
_sˇn
->
√xt
(
h™dÀ
, 0, 
eof
));

279 i‡(!
	geof
) {

280 i‡(!
	g_pm™agî
->
lﬂd
(&
tu∂e
, 
h™dÀ
->
body
()))

281  
RC
(
£_WRONG_DISK_DATA
);

282 
	gtu∂e
.
£t_rid
(
h™dÀ
->
rid
());

284  (
	gRCOK
);

300 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

301 
˛ass
 
	gödex_sˇn_ôî_im∂
 :

302 
public
 
tu∂e_ôî_t
<
ödex_desc_t
, 
	gsˇn_ödex_i
, 
	gèbÀ_row_t
 >

304 
	gpublic
:

305 
èbÀ_row_t
 
	tèbÀ_tu∂e
;

306 
	gèbÀ_m™_im∂
<
	tTabÀDesc
> 
	tèbÀ_m™agî
;

307 
	gtu∂e_ôî_t
<
	tödex_desc_t
, 
	tsˇn_ödex_i
, 
	tèbÀ_row_t
 > 
	tödex_ôî
;

309 
	g¥iv©e
:

310 
èbÀ_m™agî
* 
_pm™agî
;

311 
boﬁ
 
	g_√ed_tu∂e
;

313 
	gpublic
:

319 
ödex_sˇn_ôî_im∂
(
ss_m
* 
db
,

320 
ödex_desc_t
* 
pödex
,

321 
èbÀ_m™agî
* 
pm™agî
,

322 
lock_mode_t
 
Æm
,

323 
boﬁ
 
√ed_tu∂e
)

324 : 
ödex_ôî
(
db
, 
pödex
, 
Æm
, 
åue
),

325 
_pm™agî
(
pm™agî
), 
_√ed_tu∂e
(
√ed_tu∂e
)

327 
as£π
 (
_pm™agî
);

335 ~
ödex_sˇn_ôî_im∂
() {

336 
	gödex_ôî
::
˛o£_sˇn
();

344 
w_rc_t
 
›í_sˇn
(
ss_m
* 
db
, 
≤um
,

345 
sˇn_ödex_i
::
cmp_t
 
c1
, c⁄° 
cvec_t
& 
bound1
,

346 
sˇn_ödex_i
::
cmp_t
 
c2
, c⁄° 
cvec_t
& 
bound2
)

348 i‡(!
	gödex_ôî
::
_›íed
) {

354 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_im
;

355 i‡(
	gödex_ôî
::
_lm
==
NL
Ë
cc
 = 
ss_m
::
t_cc_n⁄e
;

358 
	gödex_ôî
::
_sˇn
 = 
√w
 
sˇn_ödex_i
(
ödex_ôî
::
_fûe
->
fid
(
≤um
),

359 
c1
, 
bound1
, 
c2
, 
bound2
,

360 
Ál£
, 
cc
,

361 
ödex_ôî
::
_lm
,

362 
ödex_ôî
::
_fûe
->
is_œtchÀss
());

363 
	gödex_ôî
::
_›íed
 = 
åue
;

366  (
	gRCOK
);

369 
w_rc_t
 
√xt
(
ss_m
* , 
boﬁ
& 
eof
, 
èbÀ_tu∂e
& 
tu∂e
)

371 
as£π
 (
ödex_ôî
::
_›íed
);

372 
as£π
 (
_pm™agî
);

373 
as£π
 (
tu∂e
.
_ªp
);

375 
W_DO
(
ödex_ôî
::
_sˇn
->
√xt
(
eof
));

377 i‡(!
	geof
) {

378 
	gkey_sz
 = 
_pm™agî
->
f‹m©_key
(
ödex_ôî
::
_fûe
,

379 &
tu∂e
, *tu∂e.
_ªp
);

380 
as£π
 (
tu∂e
.
_ªp
->
_de°
);

382 
vec_t
 
key
(
tu∂e
.
_ªp
->
_de°
, 
key_sz
);

384 
rid_t
 
	grid
;

385 
vec_t
 
ªc‹d
(&
rid
, (
rid_t
));

386 
smsize_t
 
	gkÀn
 = 0;

387 
smsize_t
 
	gñí
 = (
rid_t
);

389 
W_DO
(
ödex_ôî
::
_sˇn
->
cuº
(&
key
, 
kÀn
, &
ªc‹d
, 
ñí
));

390 
	gtu∂e
.
£t_rid
(
rid
);

392 
	g_pm™agî
->
lﬂd_key
((c⁄° *)
key
.
±r
(0),

393 
ödex_ôî
::
_fûe
, &
tu∂e
);

396 i‡(
	g_√ed_tu∂e
) {

397 
pö_i
 
	gpö
;

398 
W_DO
(
pö
.pö(
rid
, 0, 
ödex_ôî
::
_lm
, index_ôî::
_fûe
->
is_œtchÀss
()));

399 i‡(!
	g_pm™agî
->
lﬂd
(&
tu∂e
, 
pö
.
body
())) {

400 
	gpö
.
u≈ö
();

401  
RC
(
£_WRONG_DISK_DATA
);

403 
	gpö
.
u≈ö
();

406  (
	gRCOK
);

429 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

430 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$gë_ôî_f‹_fûe_sˇn
(
ss_m
* 
db
,

431 
èbÀ_ôî
* &
ôî
,

432 
lock_mode_t
 
Æm
)

434 
	`as£π
 (
_±abÀ
);

435 
ôî
 = 
√w
 
èbÀ_sˇn_ôî_im∂
<
TabÀDesc
>(
db
, 
_p•ecifi˘abÀ
, 
this
, 
Æm
);

436 i‡(
ôî
->
	`›íed
()Ë (
RCOK
);

437  
	`RC
(
£_OPEN_SCAN_ERROR
);

438 
	}
}

441 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

442 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$gë_ôî_f‹_ödex_sˇn
(
ss_m
* 
db
,

443 
ödex_desc_t
* 
ödex
,

444 
ödex_ôî
* &
ôî
,

445 
lock_mode_t
 
Æm
,

446 
boﬁ
 
√ed_tu∂e
,

447 
sˇn_ödex_i
::
cmp_t
 
c1
,

448 c⁄° 
cvec_t
& 
bound1
,

449 
sˇn_ödex_i
::
cmp_t
 
c2
,

450 c⁄° 
cvec_t
& 
bound2
)

452 
	`as£π
 (
_±abÀ
);

453 
≤um
 = 0;

454 if(
ödex
->
	`is_∑πôi⁄ed
()) {

455 
key0
 = 0;

456 
˙t
 = 
bound1
.
	`c›y_to
(&
key0
, ());

457 
	`as£π
(
˙t
 == ());

458 
Ÿhî_key0
;

459 
˙t
 = 
bound2
.
	`c›y_to
(&
Ÿhî_key0
, ());

460 
	`as£π
(
˙t
 == ());

461 
	`as£π
(
key0
 =
Ÿhî_key0
);

462 
≤um
 = 
key0
 % 
ödex
->
	`gë_∑πôi⁄_cou¡
();

464 
ôî
 = 
√w
 
ödex_sˇn_ôî_im∂
<
TabÀDesc
>(
db
, 
ödex
, 
this
, 
Æm
, 
√ed_tu∂e
);

465 
	`W_DO
(
ôî
->
	`›í_sˇn
(
db
, 
≤um
, 
c1
, 
bound1
, 
c2
, 
bound2
));

466 i‡(
ôî
->
	`›íed
()Ë (
RCOK
);

467  
	`RC
(
£_OPEN_SCAN_ERROR
);

468 
	}
}

472 
	#CHECK_FOR_DEADLOCK
(
a˘i⁄
, 
⁄_dódlock
) \

474 
w_rc_t
 
rc
 = 
a˘i⁄
; \

475 if(
rc
.
	`is_îr‹
()) { \

476 
	`W_COERCE
(
db
->
	`ab‹t_x˘
()); \

477 if(
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eDEADLOCK
) { \

478 
	`TRACE
–
TRACE_ALWAYS
, "lﬂd(%s): %d: dódlock dëe˘ed. Rëryög.n", 
_±abÀ
->
	`«me
(), 
tu∂e_cou¡
); \

479 
	`W_DO
(
db
->
	`begö_x˘
()); \

480 
⁄_dódlock
; \

482 
	`W_DO
(
rc
); \

487 } 1)

	)

489 
	sèbÀ_¸óti⁄_lock
 {

490 
±hªad_muãx_t
* 
gë_lock
() {

491 
±hªad_muãx_t
 
	mlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

492  &
	mlock
;

498 
EXIT_NAMESPACE
(
sh‹e
);

499 
	~"sh‹e_hñ≥r_lﬂdî.h
"

500 
ENTER_NAMESPACE
(
sh‹e
);

513 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

514 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$check_Æl_ödexes_togëhî
(
ss_m
* 
db
)

516 
	`as£π
 (
_±abÀ
);

518 
	`TRACE
–
TRACE_DEBUG
, "Checking consistency ofÅhe indexes onÅable (%s)\n",

519 
_±abÀ
->
	`«me
());

521 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

523 
	`W_DO
(
db
->
	`begö_x˘
());

524 
ödex_desc_t
* 
pödex
 = 
NULL
;

527 
èbÀ_ôî
* 
ôî
;

528 
	`W_DO
(
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
ôî
));

531 
boﬁ
 
eof
 = 
Ál£
;

532 
èbÀ_tu∂e
 
	`tu∂e
(
_±abÀ
);

533 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
tu∂e
));

535 
ôu∂e_˙t
=0;

536 
idx_˙t
=0;

538 !
eof
) {

540 
rid_t
 
èbÀrid
 = 
tu∂e
.
	`rid
();

542 
ôu∂e_˙t
++;

545 
pödex
 = 
_±abÀ
->
	`ödexes
();

546 
pödex
) {

548 
idx_˙t
++;

550 
w_rc_t
 
rc
 = 
	`ödex_¥obe
(
db
, 
pödex
, &
tu∂e
);

552 i‡(
rc
.
	`is_îr‹
()) {

553 
	`TRACE
–
TRACE_ALWAYS
, "IndexÖrobeÉrror in (%s) (%s) (%d)\n",

554 
_±abÀ
->
	`«me
(), 
pödex
->«me(), 
idx_˙t
);

555 
˚º
 << "Duêtÿ" << 
rc
 << 
ídl
;

556  
	`RC
(
£_INCONSISTENT_INDEX
);

559 i‡(
èbÀrid
 !
tu∂e
.
	`rid
()) {

560 
	`TRACE
–
TRACE_ALWAYS
, "Inconsistent index... (%d)",

561 
idx_˙t
);

562  
	`RC
(
£_INCONSISTENT_INDEX
);

564 
pödex
 =Öödex->
	`√xt
();

567 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
tu∂e
));

569 
	`dñëe
 (
ôî
);

571 
	`W_DO
(
db
->
	`commô_x˘
());

572 
time_t
 
t°›
 = 
	`time
(
NULL
);

574 
	`TRACE
–
TRACE_DEBUG
, "Indexes onÅable (%s) found consistent in (%d) secs...\n",

575 
_±abÀ
->
	`«me
(), 
t°›
-
t°¨t
);

577  (
RCOK
);

579 
	}
}

590 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

591 
boﬁ
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$check_Æl_ödexes
(
ss_m
* 
db
)

593 
	`as£π
 (
_±abÀ
);

595 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`ödexes
();

597 
	`TRACE
–
TRACE_DEBUG
, "Checking consistency ofÅhe indexes onÅable (%s)\n",

598 
_±abÀ
->
	`«me
());

600 
pödex
) {

601 
w_rc_t
 
rc
 = 
	`check_ödex
(
db
, 
pödex
);

602 i‡(
rc
.
	`is_îr‹
()) {

603 
	`TRACE
–
TRACE_ALWAYS
, "Index checkingÉrror in (%s) (%s)\n",

604 
_±abÀ
->
	`«me
(), 
pödex
->name());

605 
˚º
 << "Duêtÿ" << 
rc
 << 
ídl
;

606  (
Ál£
);

608 
pödex
 =Öödex->
	`√xt
();

610  (
åue
);

611 
	}
}

624 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

625 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$check_ödex
(
ss_m
* 
db
,

626 
ödex_desc_t
* 
pödex
)

628 
	`as£π
 (
_±abÀ
);

630 
	`TRACE
–
TRACE_DEBUG
, "SèπÅÿcheck index (%s)\n", 
pödex
->
	`«me
());

632 
	`W_DO
(
db
->
	`begö_x˘
());

634 
èbÀ_ôî
* 
ôî
;

635 
	`W_DO
(
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
ôî
));

637 
boﬁ
 
eof
 = 
Ál£
;

638 
èbÀ_tu∂e
 
	`tu∂e
(
_±abÀ
);

639 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
tu∂e
));

640 
uöt_t
 
tcou¡
=0;

641 !
eof
) {

643 
rid_t
 
èbÀrid
 = 
tu∂e
.
	`rid
();

644 
	`W_DO
(
	`ödex_¥obe
(
db
, 
pödex
, &
tu∂e
));

645 ++
tcou¡
;

646 i‡(
èbÀrid
 !
tu∂e
.
	`rid
()) {

647 
	`TRACE
–
TRACE_ALWAYS
, "Inconsistent index... (%d)",

648 
tcou¡
);

649  
	`RC
(
£_INCONSISTENT_INDEX
);

651 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
tu∂e
));

653 
	`dñëe
 (
ôî
);

655 
	`W_DO
(
db
->
	`commô_x˘
());

656  (
RCOK
);

657 
	}
}

674 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

675 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$sˇn_Æl_ödexes
(
ss_m
* 
db
)

677 
	`as£π
 (
_±abÀ
);

679 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`ödexes
();

680 
pödex
) {

681 
	`W_DO
(
	`sˇn_ödex
(
db
, 
pödex
));

682 
pödex
 =Öödex->
	`√xt
();

684  (
RCOK
);

685 
	}
}

696 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

697 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$sˇn_ödex
(
ss_m
* 
db
,

698 
ödex_desc_t
* 
pödex
)

700 
	`as£π
 (
_±abÀ
);

701 
	`as£π
 (
pödex
);

702 
	`as£π
 (!
pödex
->
	`is_∑πôi⁄ed
());

704 
	`TRACE
–
TRACE_DEBUG
, "Scanning index (%s) forÅable (%s)\n",

705 
pödex
->
	`«me
(), 
_±abÀ
->name());

708 
ödex_ôî
* 
ôî
;

710 
èbÀ_tu∂e
 
	`lowtu∂e
(
_±abÀ
);

711 
ªp_row_t
 
	`lowªp
(
_±s
);

712 
lowsz
 = 
	`mö_key
(
pödex
, &
lowtu∂e
, 
lowªp
);

713 
	`as£π
 (
lowªp
.
_de°
);

715 
èbÀ_tu∂e
 
	`hightu∂e
(
_±abÀ
);

716 
ªp_row_t
 
	`highªp
(
_±s
);

717 
highsz
 = 
	`max_key
(
pödex
, &
hightu∂e
, 
highªp
);

718 
	`as£π
 (
highªp
.
_de°
);

720 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

721 
SH
,

722 
Ál£
,

723 
sˇn_ödex_i
::
ge
,

724 
	`vec_t
(
lowªp
.
_de°
, 
lowsz
),

725 
sˇn_ödex_i
::
À
,

726 
	`vec_t
(
highªp
.
_de°
, 
highsz
)));

729 
boﬁ
 
eof
;

730 
cou¡
 = 0;

731 
èbÀ_tu∂e
 
	`row
(
_±abÀ
);

733 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

734 !
eof
) {

735 
pö_i
 
pö
;

736 
	`W_DO
(
pö
.
	`pö
(
row
.
	`rid
(), 0));

737 i‡(!
	`lﬂd
(&
row
, 
pö
.
	`body
())) {

738 
pö
.
	`u≈ö
();

739  
	`RC
(
£_WRONG_DISK_DATA
);

741 
pö
.
	`u≈ö
();

742 
row
.
	`¥öt_vÆues
();

744 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

745 
cou¡
++;

747 
dñëe
 
ôî
;

750 
	`TRACE
–
TRACE_DEBUG
, "%dÅu∂e†found!\n", 
cou¡
);

751 
	`TRACE
–
TRACE_DEBUG
, "Scan finished!\n");

753  (
RCOK
);

754 
	}
}

774 
	gãm∂©e
 <
˛ass
 
	gTabÀDesc
>

775 
w_rc_t
 
	gèbÀ_m™_im∂
<
	gTabÀDesc
>::
	$¥öt_èbÀ
(
ss_m
* 
db
, 
num_löes
)

777 
	`as£π
 (
_±abÀ
);

779 
fûíame
[
MAX_FILENAME_LEN
];

780 
	`°r˝y
(
fûíame
, 
_±abÀ
->
	`«me
());

781 if(
num_löes
 > 0) {

782 
	`°rˇt
(
fûíame
, 
	`c_°r
("_%d",0));

784 
	`°rˇt
(
fûíame
, ".tbl");

785 
of°ªam
 
	`fout
(
fûíame
);

787 
	`W_DO
(
db
->
	`begö_x˘
());

789 
èbÀ_ôî
* 
ôî
;

790 
ˇrdöÆôy
 = 0;

791 
löes
 = 0;

792 
num_fûes
 = 1;

793 
	`W_DO
(
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
ôî
));

795 
boﬁ
 
eof
 = 
Ál£
;

796 
èbÀ_tu∂e
 
	`row
(
_±abÀ
);

797 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

798 !
eof
) {

799 if(
num_löes
 !0 && 
löes
 ==Çum_lines) {

800 
fout
.
	`Êush
();

801 
fout
.
	`˛o£
();

802 
	`TRACE
–
TRACE_ALWAYS
, "%†˛o£d!\n", 
fûíame
);

803 * 
pos
 = 
	`°ºchr
(
fûíame
, '_');

804 
pos
++;

805 
	`°r˝y
(
pos
, 
	`c_°r
("%d.tbl",
num_fûes
));

806 
fout
.
	`›í
(
fûíame
);

807 
num_fûes
++;

808 
löes
 = 0;

810 
row
.
	`¥öt_vÆues
(
fout
);

812 
ˇrdöÆôy
++;

813 
löes
++;

814 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

816 
dñëe
 
ôî
;

818 
	`W_DO
(
db
->
	`commô_x˘
());

820 
	`TRACE
–
TRACE_ALWAYS
, "%†˛o£d!\n", 
fûíame
);

825 
	`TRACE
–
TRACE_ALWAYS
, "Table (%s)Örinted (%d)Åuples\n",

826 
_±abÀ
->
	`«me
(), 
ˇrdöÆôy
);

828 
fout
.
	`Êush
();

829 
fout
.
	`˛o£
();

831  (
RCOK
);

832 
	}
}

838 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_tools.h

31 #i‚de‡
__SHORE_TOOLS_H


32 
	#__SHORE_TOOLS_H


	)

35 
	~"sm_vas.h
"

36 
	~"utû/«me•a˚.h
"

38 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

40 
	~"sm/sh‹e/sh‹e_ív.h
"

43 
ENTER_NAMESPACE
(
sh‹e
);

54 
	gãm∂©e
<
˛ass
 
	gI≈utCœss
>

55 ˛as†
	cåx_smthªad_t
 : 
public
 
smthªad_t
 {

56 
¥iv©e
:

57 
	$åx_ªsu…_tu∂e_t
 (*
	tåx‚
)(
	tI≈utCœss
*, c⁄° , 
	tSh‹eEnv
*);

59 
¥iv©e
:

60 
åx‚
 
_‚
;

61 
I≈utCœss
* 
_öput
;

62 
Sh‹eEnv
* 
_ív
;

63 
_id
;

64 
c_°r
 
_äame
;

66 
public
:

67 
åx_ªsu…_tu∂e_t
 
_rv
;

69 
	$åx_smthªad_t
(
åx‚
 
‚
, 
I≈utCœss
* 
‚öput
, 
Sh‹eEnv
* 
ív
,

70 c⁄° 
id
, 
c_°r
 
äame
)

71 : 
	`smthªad_t
(
t_ªguœr
, 
äame
.
	`d©a
()), 
	`_‚
(
‚
), 
	`_öput
(
‚öput
),

72 
	`_ív
(
ív
), 
	`_id
(
id
), 
	`_äame
(
äame
), 
	`_rv
(
	$åx_ªsu…_tu∂e_t
(
UNDEF
, 
id
))

76 ~
	$åx_smthªad_t
(Ë{ 
	}
}

79 
	$run
()

83 
	`as£π
 (
_‚
!=
NULL
);

84 
	`as£π
 (
_öput
!=
NULL
);

85 
	`as£π
 (
_ív
!=
NULL
);

86 
_rv
 = (*
_‚
)(
_öput
, 
_id
, 
_ív
);

87 
	}
}

93 
ölöe
 
åx_ªsu…_tu∂e_t
 
	$ªtvÆ
(Ë{  (
_rv
); 
	}
}

94 
ölöe
 
c_°r
 
	$äame
(Ë{  (
_äame
); 
	}
}

113 
	gãm∂©e
<
˛ass
 
	gSMThªad
, cœs†
	gSMTRëu∫
>

114 
	$run_smthªad
(
SMThªad
* 
t
, 
SMTRëu∫
* &
r
)

116 i‡(!
t
)

117 
	`W_FATAL
(
fcOUTOFMEMORY
);

119 
w_rc_t
 
e
 = 
t
->
	`f‹k
();

120 if(
e
.
	`is_îr‹
()) {

121 
	`TRACE
–
TRACE_ALWAYS
, "Error forkingÅhread (%s)...\n",

122 
t
->
	`«me
());

126 
e
 = 
t
->
	`joö
();

127 i‡(
e
.
	`is_îr‹
()) {

128 
	`TRACE
–
TRACE_ALWAYS
, "Error joiningÅhread (%s)...\n",

129 
t
->
	`«me
());

133 
r
 = 
√w
 
	`SMTRëu∫
(
t
->
	`ªtvÆ
());

134 
	`as£π
 (
r
);

138 
	}
}

151 
	gãm∂©e
<
˛ass
 
	gTønß˘i⁄
>

152 
w_rc_t
 
	$run_x˘
(
ss_m
* 
ssm
, 
Tønß˘i⁄
 &
t
) {

153 
w_rc_t
 
e
;

155 
e
 = 
ssm
->
	`begö_x˘
();

156 if(
e
.
	`is_îr‹
())

158 
e
 = 
	`t
(
ssm
);

159 if(
e
.
	`is_îr‹
())

160 
e
 = 
ssm
->
	`ab‹t_x˘
();

162 
e
 = 
ssm
->
	`commô_x˘
();

163 } 
e
.
	`is_îr‹
(Ë&&É.
	`îr_num
(Ë=
smÀvñ_0
::
eDEADLOCK
);

164  
e
;

165 
	}
}

174 
	gãm∂©e
<
˛ass
 
	gP¨£r
>

175 
	s¸óã_vﬁume_x˘


179 
Sh‹eEnv
* 
	m_≥nv
;

181 c⁄°* 
	m_èbÀ_«me
;

182 
	mfûe_öfo_t
 &
	m_öfo
;

183 
size_t
 
	m_byãs
;

185 
¸óã_vﬁume_x˘
(c⁄°* 
äame
, 
fûe_öfo_t
 &
öfo
,

186 
size_t
 
byãs
, 
Sh‹eEnv
* 
ív


188 : 
_èbÀ_«me
(
äame
), 
_öfo
(
öfo
), 
_byãs
(
byãs
), 
_≥nv
(
ív
)

192 
w_rc_t
 
›î©‹
()(
ss_m
* 
	mssm
) {

194 
CRITICAL_SECTION
(
cs
, *(
_≥nv
->
gë_vﬁ_muãx
()));

196 
°id_t
 
	mroŸ_iid
;

197 
vec_t
 
èbÀ_«me
(
_èbÀ_«me
, 
°æí
(_table_name));

198 
	msize
 = (
_öfo
);

199 
vec_t
 
èbÀ_öfo
(&
_öfo
, 
size
);

200 
boﬁ
 
	mfound
;

202 
W_DO
(
ss_m
::
vﬁ_roŸ_ödex
(*(
_≥nv
->
vid
()), 
roŸ_iid
));

203 
W_DO
(
ss_m
::
föd_assoc
(
roŸ_iid
, 
èbÀ_«me
, &
_öfo
, 
size
, 
found
));

205 if(
	mfound
) {

206 
	mcout
 << "RemovögÖªviou†ö°™˚ o‡" << 
	m_èbÀ_«me
 << 
	mídl
;

207 
W_DO
(
ss_m
::
de°roy_fûe
(
_öfo
.
fid
()));

208 
W_DO
(
ss_m
::
de°roy_assoc
(
roŸ_iid
, 
èbÀ_«me
, 
èbÀ_öfo
));

212 
	mcout
 << "Cª©ögÅabÀ ``" << 
	m_èbÀ_«me


213 << "'' wôh " << 
	m_byãs
 << " byã†≥∏ªc‹d" << 
	mídl
;

214 
W_DO
(
ssm
->
¸óã_fûe
(*(
_≥nv
->
vid
()), 
_öfo
.
_fid
, 
smÀvñ_3
::
t_ªguœr
));

215 
W_DO
(
ss_m
::
vﬁ_roŸ_ödex
(*(
_≥nv
->
vid
()), 
roŸ_iid
));

216 
W_DO
(
ss_m
::
¸óã_assoc
(
roŸ_iid
, 
èbÀ_«me
, 
èbÀ_öfo
));

218  (
	mRCOK
);

226 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_trx_worker.h

33 #i‚de‡
__SHORE_TRX_WORKER_H


34 
	#__SHORE_TRX_WORKER_H


	)

37 
	~"sm/sh‹e/§mwqueue.h
"

38 
	~"sm/sh‹e/sh‹e_ªqs.h
"

39 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

42 
ENTER_NAMESPACE
(
sh‹e
);

53 c⁄° 
	gREQUESTS_PER_WORKER_POOL_SZ
 = 60;

55 ˛as†
	cåx_w‹kî_t
 : 
public
 
ba£_w‹kî_t


57 
public
:

58 
åx_ªque°_t
 
	tReque°
;

59 
	m§mwqueue
<
	tReque°
> 
	tQueue
;

61 
	m¥iv©e
:

63 
gu¨d
<
Queue
> 
_pqueue
;

64 
	mgu¨d
<
	mPoﬁ
> 
	m_a˘i⁄poﬁ
;

67 
_w‹k_ACTIVE_im∂
();

69 
_¥e_STOP_im∂
();

72 
_£rve_a˘i⁄
(
Reque°
* 
¥eque°
);

74 
	mpublic
:

76 
åx_w‹kî_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
,

77 
¥o˚ss‹id_t
 
≠rsid
 = 
PBIND_NONE
,

78 c⁄° 
u£_¶i
 = 0);

79 ~
åx_w‹kî_t
();

82 
ölöe
 
	$íqueue
(
Reque°
* 
¨eque°
, c⁄° 
boﬁ
 
bWake
=
åue
) {

83 
_pqueue
->
	`push
(
¨eque°
,
bWake
);

86 
	`öô
(c⁄° 
lc
);

88 
	}
};

90 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/shore_worker.h

32 #i‚de‡
__SHORE_WORKER_H


33 
	#__SHORE_WORKER_H


	)

35 
	~<c°dio
>

38 
	~"k_deföes.h
"

40 
	~"utû.h
"

41 
	~"sm/sh‹e/comm⁄.h
"

43 
ENTER_NAMESPACE
(
sh‹e
);

47 #unde‡
WORKER_VERBOSE_STATS


51 #unde‡
WORKER_VERY_VERBOSE_STATS


56 #unde‡
ACCESS_RECORD_TRACE


59 c⁄° 
	gWAITING_WINDOW
 = 5;

62 c⁄° 
uöt
 
	gMINIMUM_PROCESSED
 = 10;

76 
	sw‹kî_°©s_t


78 
uöt
 
	m_¥o˚s£d
;

79 
uöt
 
	m_¥obÀms
;

81 
uöt
 
	m_£rved_öput
;

82 
uöt
 
	m_£rved_waôög
;

84 
uöt
 
	m_c⁄dex_¶ìp
;

85 
uöt
 
	m_Áûed_¶ìp
;

87 
uöt
 
	m_óæy_ab‹ts
;

88 
uöt
 
	m_mid_ab‹ts
;

90 #ifde‡
WORKER_VERBOSE_STATS


91 
upd©e_£rved
(c⁄° 
£rve_time_ms
);

92 
	m_£rvög_tŸÆ
;

94 
upd©e_rvp_exec_time
(c⁄° 
rvp_exec_time
);

95 
upd©e_rvp_nŸify_time
(c⁄° 
rvp_nŸify_time
);

96 
uöt
 
	m_rvp_exec
;

97 
	m_rvp_exec_time
;

98 
	m_rvp_nŸify_time
;

100 
upd©e_waôed
(c⁄° 
queue_time
);

101 
	m_waôög_tŸÆ
;

103 #ifde‡
WORKER_VERY_VERBOSE_STATS


104 
	m_ww
[
WAITING_WINDOW
];

105 
uöt
 
	m_ww_idx
;

106 
	m_œ°_ch™ge
;

107 
°›w©ch_t
 
	m_f‹_œ°_ch™ge
;

111 
w‹kî_°©s_t
()

112 : 
_¥o˚s£d
(0), 
_¥obÀms
(0),

113 
_£rved_öput
(0), 
_£rved_waôög
(0),

114 
_c⁄dex_¶ìp
(0), 
_Áûed_¶ìp
(0),

115 
_óæy_ab‹ts
(0), 
_mid_ab‹ts
(0)

116 #ifde‡
WORKER_VERBOSE_STATS


117 , 
_£rvög_tŸÆ
(0),

118 
_rvp_exec
(0), 
_rvp_exec_time
(0), 
_rvp_nŸify_time
(0),

119 
_waôög_tŸÆ
(0)

120 #ifde‡
WORKER_VERY_VERBOSE_STATS


121 , 
_ww_idx
(0), 
_œ°_ch™ge
(0)

126 ~
w‹kî_°©s_t
() { }

128 
¥öt_°©s
() const;

130 
ª£t
();

132 
¥öt_™d_ª£t
(Ë{ 
¥öt_°©s
(); 
ª£t
(); }

134 
	mw‹kî_°©s_t
& 
	m›î©‹
+=(
w‹kî_°©s_t
 c⁄°& 
rhs
);

154 
˛ass
 
	gSh‹eEnv
;

156 ˛as†
	cba£_w‹kî_t
 : 
public
 
thªad_t


158 
¥Ÿe˘ed
:

161 vﬁ©ûê
uöt_t
 
_c⁄åﬁ
;

162 vﬁ©ûê
eD©aOw√rSèã
 
	m_d©a_ow√r
;

163 
uöt_t
 vﬁ©ûê
	m_ws
;

166 
c⁄dex
 
	m_nŸify
;

169 
Sh‹eEnv
* 
	m_ív
;

172 
ba£_w‹kî_t
* 
	m_√xt
;

173 
èès_lock
 
	m_√xt_lock
;

176 
w‹kî_°©s_t
 
	m_°©s
;

179 
boﬁ
 
	m_is_bound
;

180 
¥o˚ss‹id_t
 
	m_¥s_id
;

183 
	m_u£_¶i
;

186 
vútuÆ
 
_w‹k_PAUSED_im∂
();

187 
vútuÆ
 
_w‹k_ACTIVE_im∂
()=0;

188 
vútuÆ
 
_w‹k_STOPPED_im∂
();

189 
vútuÆ
 
_¥e_STOP_im∂
()=0;

192 
	$_¥öt_°©s_im∂
() const;

194 
public
:

196 
	$ba£_w‹kî_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
, 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
u£_¶i
)

197 : 
	`thªad_t
(
äame
),

198 
	`_c⁄åﬁ
(
WC_PAUSED
), 
	`_d©a_ow√r
(
DOS_UNDEF
), 
	`_ws
(
WS_UNDEF
),

199 
	`_ív
(
ív
),

200 
	`_√xt
(
NULL
), 
	`_is_bound
(
Ál£
), 
	`_¥s_id
(
≠rsid
), 
	$_u£_¶i
(
u£_¶i
)

204 
vútuÆ
 ~
	$ba£_w‹kî_t
(Ë{ 
	}
}

209 
	$£t_√xt
(
ba£_w‹kî_t
* 
≠w‹kî
) {

210 
	`as£π
 (
≠w‹kî
);

211 
	`CRITICAL_SECTION
(
√xt_cs
, 
_√xt_lock
);

212 
_√xt
 = 
≠w‹kî
;

213 
	}
}

215 
ba£_w‹kî_t
* 
	$gë_√xt
(Ë{  (
_√xt
); 
	}
}

218 
	$£t_d©a_ow√r_°©e
(c⁄° 
eD©aOw√rSèã
 
ados
) {

219 
	`as£π
 ((
ados
==
DOS_ALONE
)||◊dos==
DOS_MULTIPLE
));

220 
	`©omic_sw≠
(&
_d©a_ow√r
, 
ados
);

221 
	}
}

223 
boﬁ
 
	$is_Æ⁄e_ow√r
(Ë{  (*&
_d©a_ow√r
==
DOS_ALONE
); 
	}
}

228 
ölöe
 
uöt_t
 
	$£t_ws
(c⁄° 
uöt_t
 
√w_ws
) {

229 
uöt_t
 
ﬁd_ws
 = *&
_ws
;

230 
ﬁd_ws
!=
√w_ws
) {

233 i‡((
ﬁd_ws
==
WS_COMMIT_Q
)&&(
√w_ws
!=
WS_LOOP
)) {  (old_ws); }

236 
uöt_t
 
cur_ws
 = 
	`©omic_ˇs
(&
_ws
,
ﬁd_ws
,
√w_ws
);

237 i‡(
cur_ws
 =
ﬁd_ws
) {

239 i‡((
ﬁd_ws
==
WS_SLEEP
)&&(
√w_ws
!=WS_SLEEP)Ë{ 
	`c⁄dex_wakeup
(); }

240  (
ﬁd_ws
);

246 
ﬁd_ws
 = 
cur_ws
;

248  (
ﬁd_ws
);

249 
	}
}

251 
ölöe
 
uöt_t
 
	$gë_ws
(Ë{  (*&
_ws
); 
	}
}

254 
ölöe
 
boﬁ
 
	$ˇn_c⁄töue
(c⁄° 
uöt_t
 
my_ws
) {

255  ((*&
_ws
==
my_ws
)||(*&_ws==
WS_LOOP
));

256 
	}
}

258 
ölöe
 
boﬁ
 
	$is_¶ìpög
() {

259  (*&
_ws
==
WS_SLEEP
);

260 
	}
}

267 
ölöe
 
	$c⁄dex_¶ìp
() {

272 
uöt_t
 
ﬁd_ws
 = *&
_ws
;

273 
ﬁd_ws
==
WS_LOOP
) {

274 
uöt_t
 
cur_ws
 = 
	`©omic_ˇs_uöt
(&
_ws
,
ﬁd_ws
,(uöt_t)
WS_SLEEP
);

275 i‡(
cur_ws
 =
ﬁd_ws
) {

277 
_nŸify
.
	`waô
();

278 ++
_°©s
.
_c⁄dex_¶ìp
;

283 
ﬁd_ws
 = 
cur_ws
;

285 ++
_°©s
.
_Áûed_¶ìp
;

287 
	}
}

292 
ölöe
 
	$c⁄dex_wakeup
() {

294 
_nŸify
.
	`sig«l
();

295 
	}
}

303 
ölöe
 
uöt_t
 
	$gë_c⁄åﬁ
(Ë{  (*&
_c⁄åﬁ
); 
	}
}

305 
ölöe
 
boﬁ
 
	$£t_c⁄åﬁ
(c⁄° 
uöt_t
 
awc
) {

320 i‡((*&
_c⁄åﬁ
 =
WC_PAUSED
) &&

321 ((
awc
 =
WC_ACTIVE
Ë|| (aw¯=
WC_STOPPED
))) {

322 
	`©omic_sw≠
(&
_c⁄åﬁ
, 
awc
);

323  (
åue
);

326 i‡((*&
_c⁄åﬁ
 =
WC_ACTIVE
) &&

327 ((
awc
 =
WC_PAUSED
Ë|| (aw¯=
WC_STOPPED
))) {

328 
	`©omic_sw≠
(&
_c⁄åﬁ
, 
awc
);

329  (
åue
);

333 i‡((*&
_c⁄åﬁ
 =
WC_RECOVERY
Ë|| (
awc
 == WC_RECOVERY)) {

334 
	`©omic_sw≠
(&
_c⁄åﬁ
, 
awc
);

335  (
åue
);

338 
	`TRACE
–
TRACE_DEBUG
, "NotállowedÅransition (%d)-->(%d)\n",

339 
_c⁄åﬁ
, 
awc
);

340  (
Ál£
);

341 
	}
}

344 
	$°›
() {

345 
	`£t_c⁄åﬁ
(
WC_STOPPED
);

346 i‡(
	`is_¶ìpög
()Ë
_nŸify
.
	`sig«l
();

347 
	}
}

349 
	$°¨t
() {

350 
	`£t_c⁄åﬁ
(
WC_ACTIVE
);

351 i‡(
	`is_¶ìpög
()Ë
_nŸify
.
	`sig«l
();

352 
	}
}

354 
	$∑u£
() {

355 
	`£t_c⁄åﬁ
(
WC_PAUSED
);

356 i‡(
	`is_¶ìpög
()Ë
_nŸify
.
	`sig«l
();

357 
	}
}

360 
ölöe
 
	$w‹k_PAUSED
(Ë{  (
	`_w‹k_PAUSED_im∂
()); 
	}
}

361 
ölöe
 
	$w‹k_ACTIVE
(Ë{  (
	`_w‹k_ACTIVE_im∂
()); 
	}
}

362 
ölöe
 
	$w‹k_STOPPED
(Ë{  (
	`_w‹k_STOPPED_im∂
()); 
	}
}

365 
w‹k
();

369 
boﬁ
 
ab‹t_⁄e_åx
(
x˘_t
* 
ax˘
);

371 
°©s
();

373 
w‹kî_°©s_t
 
gë_°©s
();

375 
	$ª£t_°©s
(Ë{ 
_°©s
.
	`ª£t
(); 
	}
}

378 #ifde‡
ACCESS_RECORD_TRACE


379 
of°ªam
 
	g_åa˚_fûe
;

380 
	gve˘‹
<
	g°rög
> 
	g_evíts
;

381 
¸óã_åa˚_dú
(
°rög
 
dú
);

382 
›í_åa˚_fûe
();

383 
˛o£_åa˚_fûe
();

386 
	g¥iv©e
:

389 
ba£_w‹kî_t
(base_worker_t const &);

390 
	g›î©‹
=(
ba£_w‹kî_t
 const &);

394 
EXIT_NAMESPACE
(
sh‹e
);

	@include/sm/shore/srmwqueue.h

35 #i‚de‡
__SHORE_SRMW_QUEUE_H


36 
	#__SHORE_SRMW_QUEUE_H


	)

38 
	~<°hªad.h
>

39 
	~<ve˘‹
>

41 
	~"utû.h
"

42 
	~"sm/sh‹e/comm⁄.h
"

43 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

46 
ENTER_NAMESPACE
(
sh‹e
);

49 
	gãm∂©e
<
˛ass
 
	gA˘i⁄
>

50 
	s§mwqueue


52 
ty≥«me
 
	tPoﬁedVec
<
	tA˘i⁄
*>::
	tTy≥
 
	tA˘i⁄Vec
;

53 
ty≥«me
 
	tA˘i⁄Vec
::
	tôî©‹
 
	tA˘i⁄VecIt
;

56 
ba£_w‹kî_t
* 
	m_ow√r
;

58 
	mgu¨d
<
	mA˘i⁄Vec
> 
	m_f‹_wrôîs
;

59 
	mgu¨d
<
	mA˘i⁄Vec
> 
	m_f‹_ªadîs
;

60 
A˘i⁄VecIt
 
	m_ªad_pos
;

61 
mcs_lock
 
	m_lock
;

62 vﬁ©ûê
	m_em±y
;

64 
eW‹kögSèã
 
	m_my_ws
;

66 
	m_lo›s
;

67 
	m_thªs
;

69 
§mwqueue
(
Poﬁ
* 
a˘i⁄PåPoﬁ
)

70 : 
_ow√r
(
NULL
), 
_em±y
(
åue
), 
_my_ws
(
WS_UNDEF
),

71 
_lo›s
(0), 
_thªs
(0)

73 
as£π
 (
a˘i⁄PåPoﬁ
);

74 
	m_f‹_wrôîs
 = 
√w
 
A˘i⁄Vec
(
a˘i⁄PåPoﬁ
);

75 
	m_f‹_ªadîs
 = 
√w
 
A˘i⁄Vec
(
a˘i⁄PåPoﬁ
);

76 
	m_ªad_pos
 = 
_f‹_ªadîs
->
begö
();

78 ~
§mwqueue
() { }

82 
£tqueue
(
eW‹kögSèã
 
aws
, 
ba£_w‹kî_t
* 
ow√r
, c⁄° & 
lo›s
, c⁄° & 
thªs
)

84 
CRITICAL_SECTION
(
q_cs
, 
_lock
);

85 
	m_my_ws
 = 
aws
;

86 
	m_ow√r
 = 
ow√r
;

87 
	m_lo›s
 = 
lo›s
;

88 
	m_thªs
 = 
thªs
;

92 
boﬁ
 
is_c⁄åﬁ
(
ba£_w‹kî_t
* 
©hªad
Ëc⁄° {  (
	m_ow√r
==athread); }

95 
ölöe
 
is_em±y
() const {

96  ((
	m_ªad_pos
 =
_f‹_ªadîs
->
íd
()Ë&& (*&
_em±y
));

100 
boﬁ
 
is_ªÆly_em±y
()

102 
CRITICAL_SECTION
(
cs
, 
_lock
);

103 
boﬁ
 
	misEm±y
 = ((
_ªad_pos
 =
_f‹_ªadîs
->
íd
()Ë&& (*&
_em±y
));

104 i‡(
	misEm±y
Ë{ 
as£π
 (
_f‹_wrôîs
->
em±y
()); }

105  (
	misEm±y
);

109 
boﬁ
 
waô_f‹_öput
()

111 
as£π
 (
_ow√r
);

112 
	mlo›˙t
 = 0;

113 
uöt_t
 
	mwc
 = 
WC_ACTIVE
;

116 *&
	m_em±y
) {

118 
	mwc
 = 
_ow√r
->
gë_c⁄åﬁ
();

122 i‡(
	mwc
 !
WC_ACTIVE
) {

123 
_ow√r
->
£t_ws
(
WS_FINISHED
);

124  (
	mÁl£
);

128 i‡(!
	m_ow√r
->
ˇn_c⁄töue
(
_my_ws
)Ë (
	mÁl£
);

131 i‡(++
	mlo›˙t
 > 
	m_lo›s
) {

132 
	mlo›˙t
 = 0;

136 
	mlo›˙t
 = 
_ow√r
->
c⁄dex_¶ìp
();

150 
CRITICAL_SECTION
(
cs
, 
_lock
);

151 
	m_f‹_ªadîs
->
îa£
(
_f‹_ªadîs
->
begö
(),_f‹_ªadîs->
íd
());

152 
	m_f‹_wrôîs
->
sw≠
(*
_f‹_ªadîs
);

153 
	m_em±y
 = 
åue
;

156 
	m_ªad_pos
 = 
_f‹_ªadîs
->
begö
();

157  (
	måue
);

160 
ölöe
 
A˘i⁄
* 
p›
() {

162 i‡((
	m_ªad_pos
 =
_f‹_ªadîs
->
íd
()Ë&& (!
waô_f‹_öput
()))

163  (
NULL
);

164  (*(
	m_ªad_pos
++));

167 
ölöe
 
push
(
A˘i⁄
* 
a
, c⁄° 
boﬁ
 
bWake
) {

169 
	mqueue_sz
;

173 
CRITICAL_SECTION
(
cs
, 
_lock
);

174 
	m_f‹_wrôîs
->
push_back
(
a
);

175 
	m_em±y
 = 
Ál£
;

176 
	mqueue_sz
 = 
_f‹_wrôîs
->
size
();

180 i‡((
	mqueue_sz
 >
_thªs
Ë|| 
bWake
) {

182 
_ow√r
->
£t_ws
(
_my_ws
);

187 
˛ór
(c⁄° 
boﬁ
 
ªmoveOw√r
=
åue
) {

188 
CRITICAL_SECTION
(
q_cs
, 
_lock
);

191 i‡(
	mªmoveOw√r
Ë
	m_ow√r
 = 
NULL
;

194 
	m_f‹_wrôîs
->
îa£
(
_f‹_wrôîs
->
begö
(),_f‹_wrôîs->
íd
());

195 
	m_f‹_ªadîs
->
îa£
(
_f‹_ªadîs
->
begö
(),_f‹_ªadîs->
íd
());

198 
	m_ªad_pos
 = 
_f‹_ªadîs
->
begö
();

201 
	m_em±y
 = 
åue
;

207 
EXIT_NAMESPACE
(
sh‹e
);

	@include/trace/trace_force.h

32 #i‚de‡
_TRACE_FORCE_H


33 
	#_TRACE_FORCE_H


	)

35 
	~<c°d¨g
>

41 
	$åa˚_f‹˚_
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

42 * 
f‹m©
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 4, 5)));;

63 
	#TRACE_FORCE
(
f‹m©
, 
ª°
...Ë
	`åa˚_f‹˚_
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, f‹m©, ##ª°)

	)

	@include/trace/trace_print_pthread.h

30 #i‚de‡
_TRACE_PRINT_PTHREAD_H


31 
	#_TRACE_PRINT_PTHREAD_H


	)

33 
	~<±hªad.h
>

34 
	~<c°dio
>

40 
åa˚_¥öt_±hªad
(
FILE
* 
out_°ªam
, 
±hªad_t
 
thªad
);

	@include/trace/trace_stream.h

30 #i‚de‡
_TRACE_STREAM_H


31 
	#_TRACE_STREAM_H


	)

33 
	~<c°dio
>

34 
	~<c°d¨g
>

40 
åa˚_°ªam
(
FILE
* 
out_°ªam
,

41 c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

42 * 
f‹m©
, 
va_li°
 
≠
);

	@include/trace/trace_types.h

31 #i‚de‡
__TRACE_TYPES_H


32 
	#__TRACE_TYPES_H


	)

38 
	#TRACE_COMPONENT_MASK_ALL
 (~0)

	)

39 
	#TRACE_COMPONENT_MASK_NONE
 0

	)

41 
	#TRACE_ALWAYS
 ()(1 << 0)

	)

42 
	#TRACE_TUPLE_FLOW
 ()(1 << 1)

	)

43 
	#TRACE_PACKET_FLOW
 ()(1 << 2)

	)

44 
	#TRACE_SYNC_COND
 ()(1 << 3)

	)

45 
	#TRACE_SYNC_LOCK
 ()(1 << 4)

	)

46 
	#TRACE_THREAD_LIFE_CYCLE
 ()(1 << 5)

	)

47 
	#TRACE_TEMP_FILE
 ()(1 << 6)

	)

48 
	#TRACE_CPU_BINDING
 ()(1 << 7)

	)

49 
	#TRACE_QUERY_RESULTS
 ()(1 << 8)

	)

50 
	#TRACE_QUERY_PROGRESS
 ()(1 << 9)

	)

51 
	#TRACE_STATISTICS
 ()(1 << 10)

	)

52 
	#TRACE_NETWORK
 ()(1 << 11)

	)

53 
	#TRACE_RESPONSE_TIME
 ()(1 << 12)

	)

54 
	#TRACE_WORK_SHARING
 ()(1 << 13)

	)

55 
	#TRACE_TRX_FLOW
 ()(1 << 14)

	)

56 
	#TRACE_KEY_COMP
 ()(1 << 15)

	)

57 
	#TRACE_RECORD_FLOW
 ()(1 << 16)

	)

58 
	#TRACE_DEBUG
 ()(1 << 31)

	)

	@include/util.h

24 #i‚de‡
__UTIL_H


25 
	#__UTIL_H


	)

27 
	~"k_deföes.h
"

28 
	~"kôs-c⁄fig.h
"

30 
	~"utû/«me•a˚.h
"

31 
	~"utû/com∑t.h
"

32 
	~"utû/c_°r.h
"

33 
	~"utû/decimÆ.h
"

34 
	~"utû/ex˚±i⁄.h
"

35 
	~"utû/gu¨d.h
"

36 
	~"utû/°›w©ch.h
"

37 
	~"utû/sync.h
"

38 
	~"utû/thªad.h
"

39 
	~"utû/time_utû.h
"

40 
	~"utû/åa˚.h
"

41 
	~"utû/ès£π.h
"

42 
	~"utû/øndgí.h
"

43 
	~"utû/°‹e_°rög.h
"

44 
	~"utû/poﬁ_Æloc.h
"

45 
	~"utû/fûe.h
"

46 
	~"utû/¥ogªss.h
"

47 
	~"utû/cou¡down.h
"

48 
	~"utû/c⁄Â¨£r.h
"

49 
	~"utû/ívv¨.h
"

50 
	~"utû/c⁄dex.h
"

51 
	~"utû/°l_poﬁed_Æloc.h
"

52 
	~"utû/°l_poﬁ.h
"

53 
	~"utû/ˇche.h
"

54 
	~"utû/øndom_öput.h
"

55 
	~"utû/©omic_›s.h
"

56 
	~"utû/w_°æ˝y.h
"

57 
	~"utû/¥oc°©.h
"

58 
	~"utû/skewî.h
"

60 #ifde‡
HAVE_CPUMON


61 #ifde‡
HAVE_GLIBTOP


62 
	~"utû/löux_¥oc°©.h
"

63 
	~"utû/t›öfo.h
"

64 #ñi‡
deföed
 (
HAVE_PROCFS
)

65 
	~"utû/sunos_¥oc°©.h
"

66 
	~"utû/¥cöfo.h
"

70 
	~"utû/shñl.h
"

73 #ifde‡
CFG_QPIPE


74 
	~"utû/ex˚±i⁄.h
"

75 
	~"utû/ªsour˚_poﬁ.h
"

76 
	~"utû/ªsour˚_ªÀa£r.h
"

77 
	~"utû/ªsour˚_de˛¨e.h
"

78 
	~"utû/hash_fun˘i⁄s.h
"

79 
	~"utû/acou¡î.h
"

80 
	~"utû/°©ic_li°.h
"

81 
	~"utû/rio.h
"

82 
	~"utû/‚v.h
"

83 
	~"utû/tmpfûe.h
"

84 
	~"utû/busy_dñay.h
"

	@include/util/acounter.h

33 #i‚de‡
_ACOUNTER_H


34 
	#_ACOUNTER_H


	)

36 
	~"utû/thªad.h
"

37 
	~"utû/sync.h
"

43 ˛as†
	cacou¡î_t
 {

45 
	m¥iv©e
:

47 
±hªad_muãx_t
 
_muãx
;

48 
	m_vÆue
;

50 
	mpublic
:

52 
	$acou¡î_t
(
vÆue
=0)

53 : 
	`_muãx
(
	`thªad_muãx_¸óã
()),

54 
	$_vÆue
(
vÆue
)

58 ~
	$acou¡î_t
() {

59 
	`thªad_muãx_de°roy
(
_muãx
);

60 
	}
}

62 
	$„tch_™d_öc
() {

63 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_muãx
);

64  
_vÆue
++;

65 
	}
}

	@include/util/atomic_ops.h

32 #i‚de‡
__ATOMIC_OPS_H


33 
	#__ATOMIC_OPS_H


	)

35 
	~"k_deföes.h
"

38 
	gãm∂©e
<
˛ass
 
	gT
, 
	gsize
=(
T
)>

39 
	s©omic_ˇs_hñ≥r
 {

40 
T
 
›î©‹
()(T vﬁ©ûe* 
èrgë
, T 
ﬁd_vÆue
, T 
√w_vÆue
);

44 
	gãm∂©e
<
˛ass
 
	gT
>

45 
	g©omic_ˇs_hñ≥r
<
	gT
, (
	guöt32_t
)> {

46 
T
 
›î©‹
()(T vﬁ©ûe* 
	gèrgë
, T 
	gﬁd_vÆue
, T 
	g√w_vÆue
) {

47 
T
 
	gªsu…
;

49 
T
* 
	g_t
;

50 
uöt32_t
* 
	g_i
;

51 } 
	gov
={&
ﬁd_vÆue
}, 
	gnv
={&
√w_vÆue
}, 
	gde°
={&
ªsu…
};

52 uni⁄ { 
T
 vﬁ©ûe* 
	g_t
; 
uöt32_t
 vﬁ©ûe* 
	g_i
; } 
	gx
={
èrgë
};

53 #i‡
deföed
(
__•¨cv9
)

54 *
	gde°
.
	g_i
 = 
©omic_ˇs_32
(
x
.
_i
, *
ov
._i, *
nv
._i);

56 *
	gde°
.
	g_i
 = 
__sync_vÆ_com∑ª_™d_sw≠
(
x
.
_i
, *
ov
._i, *
nv
._i);

58  *
	gde°
.
	g_t
;

63 
	gãm∂©e
<
˛ass
 
	gT
>

64 
	g©omic_ˇs_hñ≥r
<
	gT
, (
	guöt64_t
)> {

65 
T
 
›î©‹
()(T vﬁ©ûe* 
	gèrgë
, T 
	gﬁd_vÆue
, T 
	g√w_vÆue
) {

66 
T
 
	gªsu…
;

68 
T
* 
	g_t
;

69 
uöt64_t
* 
	g_i
;

70 } 
	gov
={&
ﬁd_vÆue
}, 
	gnv
={&
√w_vÆue
}, 
	gde°
={&
ªsu…
};

71 uni⁄ { 
T
 vﬁ©ûe* 
	g_t
; 
uöt64_t
 vﬁ©ûe* 
	g_i
; } 
	gx
={
èrgë
};

72 #ifde‡
__•¨cv9


73 *
	gde°
.
	g_i
 = 
©omic_ˇs_64
(
x
.
_i
, *
ov
._i, *
nv
._i);

75 *
	gde°
.
	g_i
 = 
__sync_vÆ_com∑ª_™d_sw≠
(
x
.
_i
, *
ov
._i, *
nv
._i);

77  *
	gde°
.
	g_t
;

81 
	gãm∂©e
<
˛ass
 
	gT
>

82 
T
 
	$©omic_ˇs
(
T
 vﬁ©ûe* 
èrgë
, T 
ﬁd_vÆue
, T 
√w_vÆue
) {

83  
©omic_ˇs_hñ≥r
<
T
>()(
èrgë
, 
ﬁd_vÆue
, 
√w_vÆue
);

84 
	}
}

96 
	gãm∂©e
<
˛ass
 
	gT
, 
	gsize
=(
T
)>

97 
	s©omic_sw≠_hñ≥r
 {

98 
T
 
›î©‹
()(T vﬁ©ûe* 
èrgë
, T 
√w_vÆue
);

102 
	gãm∂©e
<
˛ass
 
	gT
>

103 
	g©omic_sw≠_hñ≥r
<
	gT
, (
	guöt32_t
)> {

104 
T
 
›î©‹
()(T vﬁ©ûe* 
	gèrgë
, T 
	g√w_vÆue
) {

105 
T
 
	gªsu…
;

107 
T
* 
	g_t
;

108 
uöt32_t
* 
	g_i
;

109 } 
	gnv
={&
√w_vÆue
}, 
	gde°
={&
ªsu…
};

110 uni⁄ { 
T
 vﬁ©ûe* 
	g_t
; 
uöt32_t
 vﬁ©ûe* 
	g_i
; } 
	gx
={
èrgë
};

111 #ifde‡
__•¨cv9


112 *
	gde°
.
	g_i
 = 
©omic_sw≠_32
(
x
.
_i
, *
nv
._i);

114 *
	gde°
.
	g_i
 = 
__sync_lock_ã°_™d_£t
(
x
.
_i
, *
nv
._i);

116  *
	gde°
.
	g_t
;

121 
	gãm∂©e
<
˛ass
 
	gT
>

122 
	g©omic_sw≠_hñ≥r
<
	gT
, (
	guöt64_t
)> {

123 
T
 
›î©‹
()(T vﬁ©ûe* 
	gèrgë
, T 
	g√w_vÆue
) {

124 
T
 
	gªsu…
;

126 
T
* 
	g_t
;

127 
uöt64_t
* 
	g_i
;

128 } 
	gnv
={&
√w_vÆue
}, 
	gde°
={&
ªsu…
};

129 uni⁄ { 
T
 vﬁ©ûe* 
	g_t
; 
uöt64_t
 vﬁ©ûe* 
	g_i
; } 
	gx
={
èrgë
};

130 #ifde‡
__•¨cv9


131 *
	gde°
.
	g_i
 = 
©omic_sw≠_64
(
x
.
_i
, *
nv
._i);

133 *
	gde°
.
	g_i
 = 
__sync_lock_ã°_™d_£t
(
x
.
_i
, *
nv
._i);

135  *
	gde°
.
	g_t
;

139 
	gãm∂©e
<
˛ass
 
	gT
>

140 
T
 
	$©omic_sw≠
(
T
 vﬁ©ûe* 
èrgë
, T 
√w_vÆue
) {

141  
©omic_sw≠_hñ≥r
<
T
>()(
èrgë
, 
√w_vÆue
);

142 
	}
};

	@include/util/busy_delay.h

10 #i‚de‡
_BUSY_DELAY_H


11 
	#_BUSY_DELAY_H


	)

16 
busy_dñay_öô
();

17 
busy_dñay_ms
(
ms
);

18 
busy_dñay_us
(
us
);

	@include/util/c_str.h

24 #i‚de‡
__C_STR_H


25 
	#__C_STR_H


	)

28 #i‚de‡
_GNU_SOURCE


29 
	#_GNU_SOURCE


	)

32 
	~"k_deföes.h
"

33 
	~"utû/«me•a˚.h
"

35 
	~"com∑t.h
"

37 
	#DEBUG_C_STR
 0

	)

39 
usög
 
«me•a˚
 
	g°d
;

57 
	söôülize_Æloˇt‹
 {

58 
öôülize_Æloˇt‹
();

60 
öôülize_Æloˇt‹
 
	gc_°r_sw©chz
;

62 ˛as†
	cc_°r
 {

64 
	mc_°r_d©a
;

65 
c_°r_d©a
* 
	m_d©a
;

71 
ªÀa£
();

79 
assign
(c⁄° 
c_°r
 &
Ÿhî
);

81 
	mpublic
:

83 c⁄° 
c_°r
 
EMPTY_STRING
;

86 
	$c_°r
 (c⁄° 
c_°r
 &
Ÿhî
=
EMPTY_STRING
) {

87 i‡(
DEBUG_C_STR
)

88 
	`¥ötf
("c›y c⁄°ru˘‹ wôh othî = %s\n", 
Ÿhî
.
	`d©a
());

89 
	`assign
(
Ÿhî
);

94 
	$c_°r
(c⁄° * 
°r
, ...Ë
	`ATTRIBUTE
(
	`f‹m©
(
¥ötf
, 2, 3));

97 
›î©‹
 const *() const {

98  
	`d©a
();

99 
	}
}

102 c⁄° * 
	$d©a
() const;

105 ~
	$c_°r
() {

106 i‡(
DEBUG_C_STR
)

107 
	`¥ötf
("ö c_°∏de°ru˘‹ f‹ %s\n", 
	`d©a
());

108 
	`ªÀa£
();

109 
	}
}

112 
	gc_°r
 &
	g›î©‹
=(c⁄° 
c_°r
 &
Ÿhî
) {

113 i‡(
DEBUG_C_STR
)

114 
¥ötf
("ö c_°∏›î©‹,Åhi†%s, othî = %s\n", 
d©a
(), 
Ÿhî
.data());

115 if(
	g_d©a
 !
Ÿhî
.
_d©a
) {

116 
ªÀa£
();

117 
assign
(
Ÿhî
);

119  *
	gthis
;

123 
boﬁ
 
	g›î©‹
<(c⁄° 
	gc_°r
 &
	gŸhî
) const {

124  
°rcmp
(
d©a
(), 
Ÿhî
.data()) < 0;

128 
boﬁ
 
	g›î©‹
>(c⁄° 
	gc_°r
 &
	gŸhî
) const {

129  
°rcmp
(
d©a
(), 
Ÿhî
.data()) > 0;

133 
boﬁ
 
	g›î©‹
==(c⁄° 
c_°r
 &
Ÿhî
) const {

134  
°rcmp
(
d©a
(), 
Ÿhî
.data()) == 0;

	@include/util/cache.h

31 #i‚de‡
__UTIL_OBJECT_CACHE_H


32 
	#__UTIL_OBJECT_CACHE_H


	)

34 
	~"k_deföes.h
"

35 
	~"block_Æloc.h
"

49 
	gãm∂©e
 <
ty≥«me
 
	gObje˘
>

50 
˛ass
 
	gobje˘_ˇche_t
 : 
public
 
obje˘_ˇche
<
Obje˘
, 
	gobje˘_ˇche_öôülizög_Á˘‹y
<
	gObje˘
> >

52 
	gpublic
:

55 
Obje˘
* 
b‹row
()

57 (
this
->
acquúe
());

62 
giveback
(
Obje˘
* 
pObj
)

64 
	gthis
->
ªÀa£
(
pObj
);

	@include/util/chomp.h

24 #i‚de‡
__UTIL_CHOMP_H


25 
	#__UTIL_CHOMP_H


	)

27 
chomp_√wlöe
(* 
°r
);

28 
chomp_ˇºüge_ªtu∫
(* 
°r
);

	@include/util/command/command_handler.h

32 #i‚de‡
__CMD_HANDLER_H


33 
	#__CMD_HANDLER_H


	)

35 
	~"k_deföes.h
"

37 
	~<ve˘‹
>

39 
	~"utû.h
"

41 
usög
 
«me•a˚
 
	g°d
;

46 c⁄° 
	gSHELL_COMMAND_BUFFER_SIZE
 = 64;

47 c⁄° 
	gSHELL_NEXT_CONTINUE
 = 1;

48 c⁄° 
	gSHELL_NEXT_DISCONNECT
 = 2;

49 c⁄° 
	gSHELL_NEXT_QUIT
 = 3;

52 ˛as†
	ccomm™d_h™dÀr_t


54 
	mpublic
:

55 
ve˘‹
<
	t°rög
> 
	tÆüsLi°
;

56 
	mÆüsLi°
::
	tôî©‹
 
	tÆüsIt
;

58 
	m¥Ÿe˘ed
:

59 
ÆüsLi°
 
_Æü£s
;

60 
°rög
 
	m_«me
;

62 
	mpublic
:

64 
	$comm™d_h™dÀr_t
() { }

65 
vútuÆ
 ~
	$comm™d_h™dÀr_t
(Ë{ 
	}
}

71 
vútuÆ
 
	$öô
(Ë{ 
	}
};

72 
vútuÆ
 
	$˛o£
(Ë{ 
	}
};

75 
vútuÆ
 
h™dÀ
(c⁄° * 
cmd
)=0;

79 
vútuÆ
 
£èlü£s
()=0;

80 
°rög
 
	$«me
(Ëc⁄° {  (
_«me
); 
	}
}

81 
ÆüsLi°
* 
	$Æü£s
(Ë{  (&
_Æü£s
); 
	}
}

84 
vútuÆ
 
	$ußge
(Ë{ 
	}
};

87 
vútuÆ
 
°rög
 
	$desc
() const=0;

89 
	}
};

	@include/util/command/printer.h

24 #i‚de‡
__UTIL_CMD_PRINTER_H


25 
	#__UTIL_CMD_PRINTER_H


	)

28 
	~"utû/comm™d/comm™d_h™dÀr.h
"

31 ˛as†
	c¥öãr_t
 : 
public
 
comm™d_h™dÀr_t


33 
public
:

34 
	$¥öãr_t
() { }

35 
vútuÆ
 ~
	$¥öãr_t
(Ë{ 
	}
}

37 
vútuÆ
 
h™dÀ_comm™d
(c⁄° * 
comm™d
);

39 
	$öô
(Ë{ 
	`as£π
(0); 
	}
}

40 
	$˛o£
(Ë{ 
	`as£π
(0); 
	}
}

41 
	$h™dÀ
(c⁄° * ) {  (
SHELL_NEXT_CONTINUE
); 
	}
}

42 
	$£èlü£s
(Ë{ 
	`as£π
(0); 
	}
}

43 
	$ußge
(Ë{ 
	`as£π
(0); 
	}
}

44 
°rög
 
	$desc
(Ëc⁄° {  (
	`°rög
("")); 
	}
}

	@include/util/command/tracer.h

24 #i‚de‡
__UTIL_CMD_TRACE_H


25 
	#__UTIL_CMD_TRACE_H


	)

28 
	~<m≠
>

29 
	~"utû/comm™d/comm™d_h™dÀr.h
"

30 
	~"utû.h
"

32 
usög
 
	g°d
::
m≠
;

35 ˛as†
	cåa˚_cmd_t
 : 
public
 
comm™d_h™dÀr_t


37 
m≠
<
c_°r
, > 
	m_known_ty≥s
;

39 
	mpublic
:

41 
	$åa˚_cmd_t
(Ë{ 
	`öô
(); }

42 ~
	$åa˚_cmd_t
(Ë{ 
	}
}

44 
öô
();

45 
	$˛o£
(Ë{ 
	}
}

47 
h™dÀ
(c⁄° * 
cmd
);

49 
£èlü£s
();

50 
ußge
();

51 
°rög
 
	$desc
(Ëc⁄° {  (
	`°rög
("M™ùuœã†åacögÜevñ")); 
	}
}

53 
	g¥iv©e
:

55 
íabÀ
(c⁄° * 
ty≥
);

56 
dißbÀ
(c⁄° * 
ty≥
);

57 
¥öt_íabÀd_ty≥s
();

58 
¥öt_known_ty≥s
();

	@include/util/compat.h

24 #i‚de‡
__COMPAT_H


25 
	#__COMPAT_H


	)

27 #ifde‡
__GCC


29 
	#ATTRIBUTE
(
x
Ë
	`__©åibuã__
((x))

	)

33 
	#ATTRIBUTE
(
x
)

	)

34 
	#__PRETTY_FUNCTION__
 
__func__


	)

35 
	#__FUNCTION__
 
__func__


	)

	@include/util/condex.h

24 #i‚de‡
__UTIL_CONDEX_H


25 
	#__UTIL_CONDEX_H


	)

27 
	~<c°dlib
>

38 
	sc⁄dex


40 
±hªad_c⁄d_t
 
	m_c⁄d
;

41 
±hªad_muãx_t
 
	m_lock
;

42 
	m_sig«ls
;

43 
	m_waôs
;

45 
c⁄dex
(Ë: 
_sig«ls
(0), 
_waôs
(0) {

46 i‡(
±hªad_c⁄d_öô
(&
_c⁄d
,
NULL
)) {

47 
as£π
 (0);

49 i‡(
±hªad_muãx_öô
(&
_lock
,
NULL
)) {

50 
as£π
 (0);

54 ~
c⁄dex
() {

55 
±hªad_c⁄d_de°roy
(&
_c⁄d
);

56 
±hªad_muãx_de°roy
(&
_lock
);

59 
sig«l
() {

60 
CRITICAL_SECTION
(
cs
, 
_lock
);

61 
	m_sig«ls
++;

62 
±hªad_c⁄d_sig«l
(&
_c⁄d
);

65 
waô
() {

66 
CRITICAL_SECTION
(
cs
, 
_lock
);

67 
	m_waôs
++;

68 
	m_waôs
 > 
	m_sig«ls
)

69 
±hªad_c⁄d_waô
(&
_c⁄d
,&
_lock
);

85 
	sc⁄dex_∑ú


87 
c⁄dex
 
	m_waô
[2];

88 
	m_ªque°ed
;

89 
	m_w™ãd
;

90 
	m_waôed
;

92 
c⁄dex_∑ú
(Ë: 
_ªque°ed
(0), 
_w™ãd
(0), 
_waôed
(0) { }

94 ~
c⁄dex_∑ú
() { }

96 
∂ó£_èke_⁄e
() {

97 ++
	m_w™ãd
;

99 
c⁄dex
* 
èke_⁄e
() {

100 if(
	m_w™ãd
 > 
	m_ªque°ed
) {

101  &
	m_waô
[
_ªque°ed
++ % 2];

103  
	mNULL
;

105 
waô
() {

106 
w_as£π1
(
_waôed
 < 
_ªque°ed
);

107 
	m_waô
[
_waôed
++ %2].
waô
();

	@include/util/config.h

24 #i‚de‡
__UTIL_SERVER_CONFIG_H


25 
	#__UTIL_SERVER_CONFIG_H


	)

27 
	~"kôs-c⁄fig.h
"

29 
	#SERVER_COMMAND_BUFFER_SIZE
 1024

	)

32 
	#SCLIENT_VERSION
 "v2.1"

	)

33 
	#SCLIENT_PROMPT
 "(•¨èË"

	)

37 
	#SCLIENT_DIRECTORY_NAME
 ".sh‹ekôs"

	)

38 
	#SCLIENT_HISTORY_FILE
 "hi°‹y"

	)

40 
	#SCLIENT_NET_MODE_LISTEN_PORT
 10000

	)

	@include/util/confparser.h

68 #i‚de‡
__UTIL_CONFPARSER_H


69 
	#__UTIL_CONFPARSER_H


	)

71 
	~"utû/«me•a˚.h
"

73 
	~"k_deföes.h
"

75 
	~<m≠
>

76 
	~<io°ªam
>

77 
	~<f°ªam
>

78 
	~<s°ªam
>

81 
usög
 
	g°d
::
°rög
;

83 
	sC⁄figO±i⁄


85 
°rög
 
	m_›t_«me
;

86 
°rög
 
	m_›t_c⁄fig_íåy
;

87 
°rög
 
	m_›t_deÁu…_vÆue
;

89 
C⁄figO±i⁄
(
°rög
 
«me
, såög 
íåy
, såög 
vÆue
) {

90 
	m_›t_«me
 = 
«me
;

91 
	m_›t_c⁄fig_íåy
 = 
íåy
;

92 
	m_›t_deÁu…_vÆue
 = 
vÆue
;

98 ˛as†
	cC⁄figFûe


101 
	m¥Ÿe˘ed
:

102 
°rög
 
myDñimôî
;

103 
°rög
 
	mmyCommít
;

104 
°rög
 
	mmySíåy
;

106 
	m°d
::
m≠
<
°rög
,
	m°rög
> 
	mmyC⁄ã¡s
;

107 
°rög
 
	m_‚ame
;

109 
	m°d
::
	tm≠
<
	t°rög
,°rög>::
	tôî©‹
 
	tm≠i
;

110 
	m°d
::
	tm≠
<
	t°rög
,°rög>::
	tc⁄°_ôî©‹
 
	tm≠ci
;

113 
	mpublic
:

114 
C⁄figFûe
–
°rög
 
fûíame
,

115 
°rög
 
dñimôî
 = "=",

116 
°rög
 
commít
 = "#",

117 
°rög
 
£¡ry
 = "EndConfigFile" );

118 
C⁄figFûe
();

121 
	mãm∂©e
<
˛ass
 
	mT
> 
T
 
	$ªad
–c⁄° 
°rög
& 
key
 ) const;

122 
ãm∂©e
<
˛ass
 
T
> T 
	$ªad
–c⁄° 
°rög
& 
key
, c⁄° 
T
& 
vÆue
 ) const;

123 
ãm∂©e
<
˛ass
 
T
> 
boﬁ
 
	$ªadI¡o
–
T
& 
v¨
, c⁄° 
°rög
& 
key
 ) const;

124 
ãm∂©e
<
˛ass
 
T
>

125 
boﬁ
 
	$ªadI¡o
–
T
& 
v¨
, c⁄° 
°rög
& 
key
, c⁄° T& 
vÆue
 ) const;

128 
ãm∂©e
<
˛ass
 
T
> 
	`add
–
°rög
 
key
, c⁄° T& 
vÆue
 );

129 
	`ªmove
–c⁄° 
°rög
& 
key
 );

132 
boﬁ
 
	$keyExi°s
–c⁄° 
°rög
& 
key
 ) const;

135 
°rög
 
	$gëDñimôî
(Ëc⁄° {  
myDñimôî
; }

136 
°rög
 
	$gëCommít
(Ëc⁄° {  
myCommít
; 
	}
}

137 
°rög
 
	$gëSíåy
(Ëc⁄° {  
mySíåy
; 
	}
}

139 
°rög
 
	$£tDñimôî
–c⁄° 
°rög
& 
s
 ) {

140 
°rög
 
ﬁd
 = 
myDñimôî
;

141 
myDñimôî
 = 
s
;

142  
ﬁd
;

143 
	}
}

145 
°rög
 
	$£tCommít
–c⁄° 
°rög
& 
s
 ) {

146 
°rög
 
ﬁd
 = 
myCommít
;

147 
myCommít
 = 
s
;

148  
ﬁd
;

149 
	}
}

152 
ßveCuºítC⁄fig
();

155 
‰õnd
 
	g°d
::
o°ªam
& 
›î©‹
<<–
°d
::o°ªam& 
os
, c⁄° 
	gC⁄figFûe
& 
	gcf
 );

156 
‰õnd
 
	g°d
::
i°ªam
& 
›î©‹
>>–
°d
::i°ªam& 
is
, 
	gC⁄figFûe
& 
	gcf
 );

158 
	g¥Ÿe˘ed
:

159 
ãm∂©e
<
˛ass
 
T
> 
°rög
 
T_as_°rög
–c⁄° T& 
t
 );

160 
	gãm∂©e
<
˛ass
 
	gT
> 
T
 
°rög_as_T
–c⁄° 
°rög
& 
s
 );

161 
åim
–
°rög
& 
s
 );

165 
	gpublic
:

166 
	sfûe_nŸ_found
 {

167 
°rög
 
fûíame
;

168 
fûe_nŸ_found
–c⁄° 
°rög
& 
fûíame_
 = string() )

169 : 
fûíame
(
fûíame_
) {} };

170 
	skey_nŸ_found
 {

171 
°rög
 
	gkey
;

172 
key_nŸ_found
–c⁄° 
°rög
& 
key_
 = string() )

173 : 
key
(
key_
) {} };

179 
	gãm∂©e
<
˛ass
 
	gT
>

180 
°rög
 
	gC⁄figFûe
::
	$T_as_°rög
–c⁄° 
T
& 
t
 )

184 
°d
::
o°rög°ªam
 
o°
;

185 
o°
 << 
t
;

186  
o°
.
	`°r
();

187 
	}
}

191 
	gãm∂©e
<
˛ass
 
	gT
>

192 
T
 
	gC⁄figFûe
::
	$°rög_as_T
–c⁄° 
°rög
& 
s
 )

196 
T
 
t
;

197 
°d
::
i°rög°ªam
 
	`i°
(
s
);

198 
i°
 >> 
t
;

199  
t
;

200 
	}
}

204 
	gãm∂©e
<>

205 
ölöe
 
°rög
 
	gC⁄figFûe
::
°rög_as_T
<°rög>–c⁄° såög& 
s
 )

209  
s
;

214 
	gãm∂©e
<>

215 
ölöe
 
boﬁ
 
	gC⁄figFûe
::
°rög_as_T
<boﬁ>–c⁄° 
°rög
& 
s
 )

220 
boﬁ
 
b
 = 
åue
;

221 
°rög
 
	gsup
 = 
s
;

222  
	g°rög
::
ôî©‹
 
p
 = 
sup
.
begö
(); 
	gp
 !sup.
íd
(); ++p )

223 *
	gp
 = 
touµî
(*
p
);

224 if–
	gsup
==
°rög
("FALSE"Ë|| 
sup
==string("F") ||

225 
sup
==
°rög
("NO") || sup==string("N") ||

226 
sup
==
°rög
("0") || sup==string("NONE") )

227 
b
 = 
Ál£
;

228  
	gb
;

232 
	gãm∂©e
<
˛ass
 
	gT
>

233 
T
 
	gC⁄figFûe
::
	$ªad
–c⁄° 
°rög
& 
key
 ) const

236 
m≠ci
 
p
 = 
myC⁄ã¡s
.
	`föd
(
key
);

237 if–
p
 =
myC⁄ã¡s
.
	`íd
(ËË
throw
 
	`key_nŸ_found
(
key
);

238  
°rög_as_T
<
T
>–
p
->
£c⁄d
 );

239 
	}
}

242 
	gãm∂©e
<
˛ass
 
	gT
>

243 
T
 
	gC⁄figFûe
::
	$ªad
–c⁄° 
°rög
& 
key
, c⁄° 
T
& 
vÆue
 ) const

247 
m≠ci
 
p
 = 
myC⁄ã¡s
.
	`föd
(
key
);

248 if–
p
 =
myC⁄ã¡s
.
	`íd
(ËË 
vÆue
;

249  
°rög_as_T
<
T
>–
p
->
£c⁄d
 );

250 
	}
}

253 
	gãm∂©e
<
˛ass
 
	gT
>

254 
boﬁ
 
	gC⁄figFûe
::
	$ªadI¡o
–
T
& 
v¨
, c⁄° 
°rög
& 
key
 ) const

259 
m≠ci
 
p
 = 
myC⁄ã¡s
.
	`föd
(
key
);

260 
boﬁ
 
found
 = ( 
p
 !
myC⁄ã¡s
.
	`íd
() );

261 if–
found
 ) 
v¨
 = 
°rög_as_T
<
T
>–
p
->
£c⁄d
 );

262  
found
;

263 
	}
}

266 
	gãm∂©e
<
˛ass
 
	gT
>

267 
boﬁ
 
	gC⁄figFûe
::
	$ªadI¡o
–
T
& 
v¨
, c⁄° 
°rög
& 
key
, c⁄° T& 
vÆue
 ) const

272 
m≠ci
 
p
 = 
myC⁄ã¡s
.
	`föd
(
key
);

273 
boﬁ
 
found
 = ( 
p
 !
myC⁄ã¡s
.
	`íd
() );

274 if–
found
 )

275 
v¨
 = 
°rög_as_T
<
T
>–
p
->
£c⁄d
 );

277 
v¨
 = 
vÆue
;

278  
found
;

279 
	}
}

282 
	gãm∂©e
<
˛ass
 
	gT
>

283 
	gC⁄figFûe
::
	$add
–
°rög
 
key
, c⁄° 
T
& 
vÆue
 )

286 
°rög
 
v
 = 
	`T_as_°rög
–
vÆue
 );

287 
	`åim
(
key
);

288 
	`åim
(
v
);

289 
myC⁄ã¡s
[
key
] = 
v
;

291 
	}
}

	@include/util/countdown.h

32 #i‚de‡
__UTIL_COUNTDOWN_H


33 
	#__UTIL_COUNTDOWN_H


	)

35 
	~<ˇs£π
>

37 
	~"k_deföes.h
"

39 
	scou¡down_t


41 
	mpublic
:

44 
cou¡down_t
(
cou¡
=0Ë: 
_°©e
(cou¡*
CD_NUMBER
) { }

48 
boﬁ
 
po°
(boﬁ 
is_îr‹
=
Ál£
);

51 
ªmaöög
() const;

54 
ª£t
(c⁄° 
√wcou¡
);

56 
	m¥iv©e
:

58 íum { 
CD_ERROR
=0x1, 
	mCD_NUMBER
=0x2 };

59 vﬁ©ûê
	m_°©e
;

62 
cou¡down_t
(countdown_t const &);

63 
	m›î©‹
=(
cou¡down_t
 const &);

68 
cou¡down_t
* 
	tcou¡downPå
;

	@include/util/decimal.h

24 #i‚de‡
__DECIMAL_H


25 
	#__DECIMAL_H


	)

27 
	~<°döt.h
>

32 ˛as†
	cdecimÆ
 {

33 
öt64_t
 
	m_vÆue
;

34 
ex∂icô
 
	$decimÆ
(
öt64_t
 
vÆue
)

35 : 
	$_vÆue
(
vÆue
)

38 
public
:

39 
	$decimÆ
()

40 : 
	$_vÆue
(0)

42 
	}
}

43 
	$decimÆ
(
vÆue
)

44 : 
	`_vÆue
((
öt64_t
Ë(
vÆue
*100))

46 
	}
}

47 
	$decimÆ
(
vÆue
)

48 : 
	`_vÆue
((
öt64_t
Ë(
vÆue
*100))

50 
	}
}

51 
decimÆ
 &
›î©‹
+=(decimÆ c⁄° &
Ÿhî
) {

52 
_vÆue
 +
Ÿhî
._value;

53  *
	gthis
;

55 
	gdecimÆ
 &
	g›î©‹
-=(
decimÆ
 c⁄° &
Ÿhî
) {

56 
_vÆue
 -
Ÿhî
._value;

57  *
	gthis
;

59 
decimÆ
 
	g›î©‹
*=(decimÆ c⁄° &
Ÿhî
) {

60 
_vÆue
 = (_vÆue*
Ÿhî
._value+50)/100;

61  *
	gthis
;

63 
decimÆ
 
	g›î©‹
/=(decimÆ c⁄° &
Ÿhî
) {

64 
_vÆue
 = (100*_vÆue+50)/
Ÿhî
._value;

65  *
	gthis
;

68 
decimÆ
 
	g›î©‹
+(decimÆ c⁄° &
	gŸhî
) const {

69  
decimÆ
(*
this
Ë+
Ÿhî
;

71 
decimÆ
 
	g›î©‹
-(decimÆ c⁄° &
	gŸhî
) const {

72  
decimÆ
(*
this
Ë-
Ÿhî
;

74 
decimÆ
 
	g›î©‹
*(decimÆ c⁄° &
	gŸhî
) const {

75  
decimÆ
(*
this
Ë*
Ÿhî
;

77 
decimÆ
 
	g›î©‹
/(decimÆ c⁄° &
	gŸhî
) const {

78  
decimÆ
(*
this
Ë/
Ÿhî
;

81 
	gdecimÆ
 &
	g›î©‹
++() {

82 
	g_vÆue
 += 100;

83  *
	gthis
;

85 
decimÆ
 
	g›î©‹
++() {

86 
decimÆ
 
	gﬁd
 = *
this
;

87 ++*
	gthis
;

88  
	gﬁd
;

90 
	gdecimÆ
 &
	g›î©‹
--() {

91 
	g_vÆue
 -= 100;

92  *
	gthis
;

94 
decimÆ
 
	g›î©‹
--() {

95 
decimÆ
 
	gﬁd
 = *
this
;

96 --*
	gthis
;

97  
	gﬁd
;

101 
	$to_doubÀ
() const {

102  (()
_vÆue
/()100);

103 
	}
}

104 
	$to_l⁄g
() const {

105  (
_vÆue
+50)/100;

106 
	}
}

107 
	$to_öt
() const {

108  (Ë
	`to_l⁄g
();

109 
	}
}

111 
boﬁ
 
	g›î©‹
 <(
decimÆ
 c⁄° &
	gŸhî
) const {

112  
	g_vÆue
 < 
	gŸhî
._value;

114 
boﬁ
 
	g›î©‹
 >(
decimÆ
 c⁄° &
	gŸhî
) const {

115  
	g_vÆue
 > 
	gŸhî
._value;

117 
boﬁ
 
	g›î©‹
 ==(
decimÆ
 c⁄° &
Ÿhî
) const {

118  
_vÆue
 =
Ÿhî
._value;

120 
boﬁ
 
	g›î©‹
 <=(
decimÆ
 c⁄° &
Ÿhî
) const {

121  
_vÆue
 <
Ÿhî
._value;

123 
boﬁ
 
	g›î©‹
 >=(
decimÆ
 c⁄° &
Ÿhî
) const {

124  
_vÆue
 >
Ÿhî
._value;

126 
boﬁ
 
	g›î©‹
 !=(
decimÆ
 c⁄° &
Ÿhî
) const {

127  
_vÆue
 !
Ÿhî
._value;

132 
ölöe
 
decimÆ
 
	g›î©‹
+(
	ga
, decimÆ c⁄° &
	gb
) {

133  
decimÆ
(
a
Ë+ 
	gb
;

135 
ölöe
 
decimÆ
 
	g›î©‹
-(
	ga
, decimÆ c⁄° &
	gb
) {

136  
decimÆ
(
a
Ë- 
	gb
;

138 
ölöe
 
decimÆ
 
	g›î©‹
*(
	ga
, decimÆ c⁄° &
	gb
) {

139  
decimÆ
(
a
Ë* 
	gb
;

141 
ölöe
 
decimÆ
 
	g›î©‹
/(
	ga
, decimÆ c⁄° &
	gb
) {

142  
decimÆ
(
a
Ë/ 
	gb
;

145 
ölöe
 
decimÆ
 
	g›î©‹
+(
	ga
, decimÆ c⁄° &
	gb
) {

146  
decimÆ
(
a
Ë+ 
	gb
;

148 
ölöe
 
decimÆ
 
	g›î©‹
-(
	ga
, decimÆ c⁄° &
	gb
) {

149  
decimÆ
(
a
Ë- 
	gb
;

151 
ölöe
 
decimÆ
 
	g›î©‹
*(
	ga
, decimÆ c⁄° &
	gb
) {

152  
decimÆ
(
a
Ë* 
	gb
;

154 
ölöe
 
decimÆ
 
	g›î©‹
/(
	ga
, decimÆ c⁄° &
	gb
) {

155  
decimÆ
(
a
Ë/ 
	gb
;

	@include/util/envvar.h

31 #i‚de‡
__UTIL_ENVVAR_H


32 
	#__UTIL_ENVVAR_H


	)

34 
	~"k_deföes.h
"

36 
	~<io°ªam
>

38 
	~<m≠
>

40 #ifde‡
HAVE_READLINE


41 
	~<ªadlöe/ªadlöe.h
>

42 
	~<ªadlöe/hi°‹y.h
>

45 
	~<as£π.h
>

46 
	~<sig«l.h
>

47 
	~<î∫o.h
>

49 
	~"sm_vas.h
"

51 
	~"utû/åa˚.h
"

52 
	~"utû/gu¨d.h
"

53 
	~"utû/c⁄Â¨£r.h
"

55 
	~"utû.h
"

57 
usög
 
«me•a˚
 
	g°d
;

81 c⁄° 
°rög
 
	gENVCONFFILE
 = "shore.conf";

82 c⁄° 
°rög
 
	gDEFAULTCONFIG
 = "tm1-1";

84 ˛as†
	cívV¨


86 
	m¥iv©e
:

88 
m≠
<
	t°rög
,°rög> 
	tívV¨M≠
;

89 
	mívV¨M≠
::
	tôî©‹
 
	tívV¨It
;

90 
	mívV¨M≠
::
	tc⁄°_ôî©‹
 
	tívV¨C⁄°It
;

92 
ívV¨M≠
 
	m_evm
;

93 
°rög
 
	m_c‚ame
;

94 
mcs_lock
 
	m_lock
;

95 
	mgu¨d
<
	mC⁄figFûe
> 
	m_pÂ¨£r
;

97 
	$ívV¨
(c⁄° 
°rög
 
sC⁄fFûe
=
ENVCONFFILE
)

98 : 
	$_c‚ame
(
sC⁄fFûe
)

100 
	`w_as£π0
 (!
_c‚ame
.
	`em±y
());

101 
_pÂ¨£r
 = 
√w
 
	`C⁄figFûe
(
_c‚ame
);

102 
	`w_as£π0
 (
_pÂ¨£r
);

104 ~
	$ívV¨
(Ë{ 
	}
}

108 
	gãm∂©e
 <
˛ass
 
	gT
>

109 
°rög
 
	$_toSåög
(c⁄° 
T
& 
¨g
)

111 
o°rög°ªam
 
out
;

112 
out
 << 
¨g
;

113  (
out
.
	`°r
());

114 
	}
}

118 
°rög
 
_ªadC⁄fV¨
(c⁄° såög& 
sP¨am
, c⁄° såög& 
sDefVÆue
);

120 
	gpublic
:

122 
ívV¨
* 
	$ö°™˚
(Ë{ 
ívV¨
 
_ö°™˚
;  (&_ö°™˚); 
	}
}

125 
ª‰eshV¨s
();

128 
£tV¨
(c⁄° 
°rög
& 
sP¨am
, c⁄° såög& 
sVÆue
);

129 
£tV¨I¡
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iVÆue
);

134 
°rög
 
gëV¨
(c⁄° såög& 
sP¨am
, c⁄° såög& 
sDefVÆue
);

135 
gëV¨I¡
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iDefVÆue
);

136 
gëV¨DoubÀ
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iDefVÆue
);

140 
checkV¨
(c⁄° 
°rög
& 
sP¨am
);

143 
£tC⁄fFûe
(c⁄° 
°rög
& 
sC⁄fFûe
);

144 
°rög
 
	$gëC⁄fFûe
() const;

147 
	`¥ötV¨s
();

150 
	`∑r£O√SëReq
(c⁄° 
°rög
& 
ö
);

153 
	`∑r£SëReq
(c⁄° 
°rög
& 
ö
);

156 
	`£tC⁄figuøti⁄
(
°rög
 
sC⁄figuøti⁄
);

157 
°rög
 
	`gëSysName
();

158 
	`£tSysName
(c⁄° 
°rög
& 
sysName
);

159 
°rög
 
	`gëSysDesign
();

160 
	`£tSysDesign
(c⁄° 
°rög
& 
sysDesign
);

162 
°rög
 
	`gëSysV¨
(°rög 
sP¨am
);

163 
	`gëSysV¨I¡
(
°rög
 
sP¨am
);

164 
	`gëSysV¨DoubÀ
(
°rög
 
sP¨am
);

166 
	}
};

	@include/util/exception.h

2 #i‚de‡
__EXCEPTION_H


3 
	#__EXCEPTION_H


	)

5 
	~<ex˚±i⁄
>

6 
	~<c°rög
>

7 
	~<˚ºno
>

8 
	~<ˇs£π
>

9 
	~<c°dlib
>

10 
	~<c°dio
>

12 
	~"utû/c_°r.h
"

20 
	#EXCEPTION
(
ty≥
,
__VA_ARGS__
) \

21 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
__VA_ARGS__
))

	)

23 
	#THROW
(
ty≥
, 
__VA_ARGS__
) \

24 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
__VA_ARGS__
)

	)

27 
	#THROW_IF
(
Ex˚±i⁄
, 
îr
) \

28 dÿ{ if(
îr
Ë
throw
 
	`EXCEPTION
(
Ex˚±i⁄
, 
	`î∫o_to_°r
”º)); } 0)

	)

37 
	#EXCEPTION
(
ty≥
) \

38 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
)

	)

39 
	#EXCEPTION1
(
ty≥
, 
¨g
) \

40 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g
))

	)

41 
	#EXCEPTION2
(
ty≥
, 
¨g1
, 
¨g2
) \

42 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g1
, 
¨g2
))

	)

45 
	#THROW
(
ty≥
) \

47 
	`as£π
(
Ál£
); \

48 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, ""); \

49 } 
Ál£
)

	)

50 
	#THROW1
(
ty≥
, 
¨g
) \

52 
	`Ârötf
(
°dîr
, 
¨g
); \

53 
	`fÊush
(
°dîr
); \

54 
	`as£π
(
Ál£
); \

55 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g
)); \

56 } 
Ál£
)

	)

58 
	#THROW2
(
ty≥
, 
¨g1
, 
¨g2
) \

60 
	`Ârötf
(
°dîr
, 
¨g1
, 
¨g2
); \

61 
	`fÊush
(
°dîr
); \

62 
	`as£π
(
Ál£
); \

63 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g1
, 
¨g2
)); \

64 } 
Ál£
)

	)

67 
	#THROW3
(
ty≥
, 
¨g1
, 
¨g2
, 
¨g3
) \

69 
	`Ârötf
(
°dîr
, 
¨g1
, 
¨g2
, 
¨g3
); \

70 
	`fÊush
(
°dîr
); \

71 
	`as£π
(
Ál£
); \

72 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g1
, 
¨g2
, 
¨g3
)); \

73 } 
Ál£
)

	)

75 
	#THROW4
(
ty≥
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
) \

77 
	`Ârötf
(
°dîr
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
); \

78 
	`fÊush
(
°dîr
); \

79 
	`as£π
(
Ál£
); \

80 
throw
 
	`ty≥
(
__FILE__
, 
__LINE__
, 
__PRETTY_FUNCTION__
, 
	`c_°r
(
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
)); \

81 } 
Ál£
)

	)

84 
	#THROW_IF
(
Ex˚±i⁄
, 
îr
) \

86 
	`as£π
(!
îr
); \

87 if(
îr
) { \

88 
	`THROW1
(
Ex˚±i⁄
, 
	`î∫o_to_°r
(
îr
)); \

90 } 
Ál£
)

	)

97 ˛as†
	cQPùeEx˚±i⁄
 : 
public
 
°d
::
ex˚±i⁄


100 
¥iv©e
:

102 
c_°r
 
_mesßge
;

104 
	mpublic
:

106 
	$QPùeEx˚±i⁄
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

107 
c_°r
 c⁄° &
m
)

108 : 
	`_mesßge
(
	`c_°r
("%s:%d (%s):%s", 
fûíame
, 
löe_num
, 
fun˘i⁄_«me
, 
m
.
	$d©a
()))

112 
vútuÆ
 c⁄° * 
	$wh©
(Ëc⁄° 
	$throw
() {

113  
_mesßge
.
	`d©a
();

114 
	}
}

116 
	gvútuÆ
 ~
	$QPùeEx˚±i⁄
(Ë
	$throw
(Ë{ 
	}
}

119 
	#DEFINE_EXCEPTION
(
Name
) \

120 ˛as†
	cName
 : 
public
 
QPùeEx˚±i⁄
 { \

121 
public
: \

122 
	`Name
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
, \

123 c⁄° * 
m
) \

124 : 
	`QPùeEx˚±i⁄
(
fûíame
, 
löe_num
, 
fun˘i⁄_«me
, 
m
) \

127 }

	)

129 
ölöe
 
c_°r
 
	$î∫o_to_°r
(
îr
=
î∫o
) {

130  
	`°ªº‹
(
îr
);

131 
	}
}

133 
DEFINE_EXCEPTION
(
UƒóchabÀ
);

134 
DEFINE_EXCEPTION
(
BadAŒoc
);

135 
DEFINE_EXCEPTION
(
OutOfR™ge
);

136 
DEFINE_EXCEPTION
(
FûeEx˚±i⁄
);

137 
DEFINE_EXCEPTION
(
BdbEx˚±i⁄
);

139 #ifde‡
__GCC


140 
ölöe
 
	$uƒóchabÀ
(Ë
	`ATTRIBUTE
(
n‹ëu∫
);

141 
ölöe
 
	$uƒóchabÀ
() {

142 
	`as£π
(
Ál£
);

143 
	`exô
(-1);

144 
	}
}

146 
	#uƒóchabÀ
(Ë
	`THROW
(
UƒóchabÀ
)

	)

	@include/util/file.h

31 #i‚de‡
__RAII_FILE_H


32 
	#__RAII_FILE_H


	)

35 
	~<c°dlib
>

37 
	~<io°ªam
>

38 
	~<°dex˚±
>

39 
	~<sys/ty≥s.h
>

42 ˛as†
	cfûe
 {

43 
	m¥iv©e
:

44 
°d
::
FILE
* 
_fûe_h™dÀ
 ;

48 
fûe
( const file & ) ;

49 
	mfûe
 & 
	m›î©‹
=–c⁄° 
fûe
 & ) ;

51 
	mpublic
:

52 
fûe
–c⁄° * 
fûíame
, c⁄° * 
mode
 = "r+" ) :

53 
_fûe_h™dÀ
(
°d
::
	$f›í
(
fûíame
, 
mode
))

55 if–!
_fûe_h™dÀ
 )

56 
throw
 
°d
::
	`ru¡ime_îr‹
("file open failure") ;

59 ~
	$fûe
() {

60 if–
°d
::
	`f˛o£
(
_fûe_h™dÀ
) != 0 ) {

63 
	}
}

65 
	$wrôe
(c⁄° * 
°r
) {

66 if–
°d
::
	`Âuts
(
°r
, 
_fûe_h™dÀ
Ë=
EOF
 )

67 
throw
 
°d
::
	`ru¡ime_îr‹
("file write failure") ;

68 
	}
}

70 * 
	$ªad
(* 
de°
, 
size_t
 
Àngth
) {

71  (
°d
::
	`fgës
(
de°
, 
Àngth
, 
_fûe_h™dÀ
));

73 
	}
}

75 
	$Êush
() {

76 
°d
::
cout
 << "Êushög" << std::
ídl
;

77 
°d
::
	`fÊush
(
_fûe_h™dÀ
);

78 
	}
}

	@include/util/fileops.h

33 #i‚de‡
__UTIL_FILEOPS_H


34 
	#__UTIL_FILEOPS_H


	)

39 
	#FILEOPS_MAX_PATH_SIZE
 1024

	)

40 
	#FILEOPS_ERROR_NOT_FOUND
 -1

	)

41 
	#FILEOPS_ERROR_NOT_DIRECTORY
 -2

	)

42 
	#FILEOPS_ERROR_PATH_TOO_LONG
 -3

	)

43 
	#FILEOPS_ERROR_PERMISSION_DENIED
 -4

	)

48 
fûe›s_check_fûe_exi°s
 (c⁄° * 
∑th
);

49 
fûe›s_check_fûe_dúe˘‹y
 (c⁄° * 
∑th
);

50 
fûe›s_check_fûe_ªadabÀ
 (c⁄° * 
∑th
);

51 
fûe›s_check_fûe_wrôóbÀ
 (c⁄° * 
∑th
);

52 
fûe›s_check_fûe_execuèbÀ
(c⁄° * 
∑th
);

54 
fûe›s_check_dúe˘‹y_ac˚ssibÀ
(c⁄° * 
∑th
);

55 
fûe›s_check_fûe_¸óèbÀ
 (c⁄° * 
∑th
);

57 
fûe›s_∑r£_∑ª¡_dúe˘‹y
(* 
d°
, 
d°_size
, c⁄° * 
§c
);

	@include/util/fnv.h

76 #i‡!
deföed
(
__FNV_H__
)

77 
	#__FNV_H__


	)

79 
	~<°dlib.h
>

80 
	~<°döt.h
>

81 
	~<c°ddef
>

95 c⁄° 
uöt32_t
 
	gFNV_INIT
 = (uint32_t) 0x811c9dc5;

98 
uöt32_t
 
‚v_hash
(c⁄° *
buf
, 
size_t
 
Àn
, uöt32_à
hashvÆ
=
FNV_INIT
);

	@include/util/guard.h

24 #i‚de‡
__UTIL_GUARD_H


25 
	#__UTIL_GUARD_H


	)

27 
	~<c°dio
>

28 
	~<ˇs£π
>

29 
	~<c°ddef
>

30 
	~<uni°d.h
>

31 
	~"utû/åa˚.h
"

32 
	~"utû/ex˚±i⁄.h
"

36 
	#Æignmítof
(
ty≥
Ë(
Æignmít_of
<ty≥>())

	)

37 
	gãm∂©e
<
ty≥«me
 
	gT
>

38 
ölöe
 
size_t
 
	$Æignmít_of
() {

39 
	sS
 {

40 
c
;

41 
T
 
t
;

43  
	`off£tof
(
S
, 
t
);

44 
	}
}

46 
ölöe
 
	$ã°_Æignmít
(c⁄°* 
±r
, 
Æign
) {

48 c⁄°* 
p
;

49 
size_t
 
i
;

50 } 
u
;

51 
u
.
p
 = 
±r
;

54 
	`as£π
((
Æign
 & -align) ==álign);

57 
	`as£π
(((
Æign
-1Ë& 
u
.
i
) == 0);

58 
	}
}

60 
	gãm∂©e
<
˛ass
 
	gT
>

61 
ölöe
 
T
* 
	$Æig√d_ˇ°
(c⁄°* 
±r
) {

63 c⁄°* 
p
;

64 
T
* 
t
;

65 
size_t
 
i
;

66 } 
u
;

67 
u
.
p
 = 
±r
;

70 
	`as£π
(((
	`Æignmítof
(
T
)-1Ë& 
u
.
i
) == 0);

71  
u
.
t
;

72 
	}
}

90 
	gãm∂©e
 <
ty≥«me
 
	gT
>

91 ˛as†
	cgu¨d
 {

92 
	m¥iv©e
:

93 
T
* 
_±r
;

95 
	m¥iv©e
:

98 
	$a˘i⁄
(
T
* 
±r
) {

99 
dñëe
 
±r
;

110 
public
:

112 
	$gu¨d
(
T
* 
±r
=
NULL
)

113 : 
	$_±r
(
±r
)

115 
	}
}

116 
	$gu¨d
(
gu¨d
 &
Ÿhî
)

117 : 
	`_±r
(
Ÿhî
.
	$ªÀa£
())

119 
	}
}

137 
gu¨d
(guard const &);

138 
	ggu¨d
 &
	g›î©‹
 =(c⁄° 
gu¨d
 &);

141 
	ggu¨d
 &
	g›î©‹
 =(
gu¨d
 &
Ÿhî
) {

142 
assign
(
Ÿhî
.
ªÀa£
());

143  *
	gthis
;

145 
	ggu¨d
 &
	g›î©‹
 =(
T
* 
±r
) {

146 
assign
(
±r
);

147  *
	gthis
;

150 
›î©‹
 
	gT
*() {

151  
gë
();

153 
›î©‹
 
T
 const*() const {

154  
gë
();

157 
	gT
 &
	g›î©‹
 *() {

158  *
gë
();

160 
T
 c⁄° &
	g›î©‹
 *() const {

161  *
gë
();

164 
T
* 
	g›î©‹
 ->() {

165  
gë
();

167 
T
 c⁄°* 
	g›î©‹
 ->() const {

168  
gë
();

171 
T
* 
	$gë
() {

172  
_±r
;

173 
	}
}

174 
T
 c⁄°* 
	$gë
() const {

175  
_±r
;

176 
	}
}

186 
T
* 
	$ªÀa£
() {

187 
T
* 
±r
 = 
_±r
;

188 
_±r
 = 
NULL
;

189  
±r
;

190 
	}
}

196 
	$d⁄e
() {

197 
	`assign
(
NULL
);

198 
	}
}

200 ~
	$gu¨d
() {

201 
	`d⁄e
();

202 
	}
}

204 
	g¥iv©e
:

205 
	$assign
(
T
* 
±r
) {

206 if(
_±r
 && _±∏!
±r
)

207 
	`a˘i⁄
(
_±r
);

208 
_±r
 = 
±r
;

209 
	}
}

213 
	gãm∂©e
<>

214 
ölöe
 
	ggu¨d
<
	gFILE
>::
	$a˘i⁄
(
FILE
* 
±r
) {

215 if(
	`f˛o£
(
±r
))

216 
	`TRACE
(
TRACE_ALWAYS
, "fclose failed");

217 
	}
}

241 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gIm∂
>

242 ˛as†
	cgu¨d_ba£_t
 {

243 
	m¥Ÿe˘ed
:

244 
muèbÀ
 
T
 
_obj
;

246 
	mpublic
:

247 
gu¨d_ba£_t
<
	tT
, 
	tIm∂
> 
	tBa£
;

252 
T
 
	$nuŒ_vÆue
() {

253  
NULL
;

255 
boﬁ
 
	$dif„ª¡
(c⁄° 
T
 &
a
, c⁄° T &
b
) {

256  
a
 !
b
;

257 
	}
}

259 
	$gu¨d_ba£_t
(
T
 
obj
)

260 : 
	$_obj
(
obj
)

262 
	}
}

263 
	$gu¨d_ba£_t
(c⁄° 
gu¨d_ba£_t
 &
Ÿhî
)

264 : 
	`_obj
(
Ÿhî
.
	$ªÀa£
())

266 
	}
}

267 
gu¨d_ba£_t
 &
›î©‹
 =(c⁄° gu¨d_ba£_à&
Ÿhî
) {

268 
assign
(
Ÿhî
.
ªÀa£
());

269  *
	gthis
;

272 
›î©‹
 
	$T
() const {

273  
	`gë
();

274 
	}
}

276 
T
 
	$gë
() const {

277  
_obj
;

278 
	}
}

288 
T
 
	$ªÀa£
() const {

289 
T
 
obj
 = 
_obj
;

290 
_obj
 = 
Im∂
::
	`nuŒ_vÆue
();

291  
obj
;

292 
	}
}

298 
	$d⁄e
() const {

299 
	`assign
(
Im∂
::
	`nuŒ_vÆue
());

300 
	}
}

302 ~
	$gu¨d_ba£_t
() {

303 
	`d⁄e
();

304 
	}
}

306 
	g¥Ÿe˘ed
:

307 
	$assign
(
T
 
obj
) const {

308 if(
Im∂
::
	`dif„ª¡
(
_obj
, 
obj
)) {

310 
Im∂
::
	`gu¨d_a˘i⁄
(
_obj
);

311 
_obj
 = 
obj
;

313 
	}
}

317 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gIm∂
>

318 
	gpoöãr_gu¨d_ba£_t
 : 
gu¨d_ba£_t
<
T
*, 
	gIm∂
> {

319 
	ggu¨d_ba£_t
<
	tT
*, 
	tIm∂
> 
	tBa£
;

320 
poöãr_gu¨d_ba£_t
(
T
* 
±r
)

321 : 
Ba£
(
±r
)

324 
T
 &
›î©‹
 *() const {

325  *
Ba£
::
gë
();

327 
›î©‹
 
	gT
*() const {

328  
	gBa£
::
gë
();

330 
T
* 
	g›î©‹
 ->() const {

331  
	gBa£
::
gë
();

340 
	gãm∂©e
 <
˛ass
 
	gT
>

341 
	gpoöãr_gu¨d_t
 : 
poöãr_gu¨d_ba£_t
<
T
,Öoöãr_gu¨d_t<
	gT
> > {

342 
poöãr_gu¨d_t
(
T
* 
±r
=
NULL
)

343 : 
poöãr_gu¨d_ba£_t
<
T
, 
	gpoöãr_gu¨d_t
<
	gT
> >(
	g±r
)

346 
gu¨d_a˘i⁄
(
T
* 
±r
) {

347 
dñëe
 
	g±r
;

357 
	gãm∂©e
 <
˛ass
 
	gT
>

358 
	g¨øy_gu¨d_t
 : 
poöãr_gu¨d_ba£_t
<
T
,áºay_gu¨d_t<
	gT
> > {

359 
¨øy_gu¨d_t
(
T
 *
±r
=
NULL
)

360 : 
poöãr_gu¨d_ba£_t
<
T
, 
	g¨øy_gu¨d_t
<
	gT
> >(
	g±r
)

363 
gu¨d_a˘i⁄
(
T
 *
±r
) {

364 
	gdñëe
 [] 
	g±r
;

373 
	gfûe_gu¨d_t
 : 
poöãr_gu¨d_ba£_t
<
FILE
, file_guard_t> {

374 
fûe_gu¨d_t
(
FILE
 *
±r
=
NULL
)

375 : 
poöãr_gu¨d_ba£_t
<
FILE
, 
	gfûe_gu¨d_t
>(
	g±r
)

378 
gu¨d_a˘i⁄
(
FILE
 *
±r
) {

379 if(
	g±r
 && 
f˛o£
(
±r
)) {

380 
TRACE
(
TRACE_ALWAYS
,

389 
	gfd_gu¨d_t
 : 
gu¨d_ba£_t
<, fd_guard_t> {

390 
fd_gu¨d_t
(
fd
)

391 : 
gu¨d_ba£_t
<, 
	gfd_gu¨d_t
>(
	gfd
)

394 
gu¨d_a˘i⁄
(
fd
) {

395 if(
	gfd
 >0 && 
˛o£
(
fd
))

396 
TRACE
(
TRACE_ALWAYS
, "close() failed in guard destructor");

398 
nuŒ_vÆue
() {

	@include/util/hash_functions.h

2 #i‚de‡
__HASH_FUNCTION_H


3 
	#__HASH_FUNCTION_H


	)

8 
RSHash
 (c⁄° * 
°r
, 
Àn
);

9 
JSHash
 (c⁄° * 
°r
, 
Àn
);

10 
PJWHash
 (c⁄° * 
°r
, 
Àn
);

11 
ELFHash
 (c⁄° * 
°r
, 
Àn
);

12 
BKDRHash
(c⁄° * 
°r
, 
Àn
);

13 
SDBMHash
(c⁄° * 
°r
, 
Àn
);

14 
DJBHash
 (c⁄° * 
°r
, 
Àn
);

15 
DEKHash
 (c⁄° * 
°r
, 
Àn
);

16 
APHash
 (c⁄° * 
°r
, 
Àn
);

	@include/util/hashtable.h

24 #i‚de‡
__UTIL_HASHTABLE_H


25 
	#__UTIL_HASHTABLE_H


	)

27 
	~<c°dlib
>

28 
	~<utûôy
>

29 
	~"utû/gu¨d.h
"

31 
usög
 
	g°d
::
∑ú
;

51 
	gãm∂©e
 <
˛ass
 
	gD©a
, cœs†
	gKey
, cœs†
	gExåa˘Key
, cœs†
	gEquÆKey
, cœs†
	gEquÆD©a
, cœs†
	gHashF˙
>

52 ˛as†
	chashèbÀ
 {

54 
	m¥iv©e
:

57 
_ˇ∑côy
;

58 
	m_size
;

59 
	m¨øy_gu¨d_t
<
	mD©a
> 
	m_d©a
;

60 
	m¨øy_gu¨d_t
<
	mboﬁ
> 
	m_exi°s
;

63 
Exåa˘Key
 
	m_exåa˘key
;

64 
EquÆKey
 
	m_equÆkey
;

65 
EquÆD©a
 
	m_equÆd©a
;

66 
HashF˙
 
	m_hashf˙
;

69 
	mpublic
:

72 
	$hashèbÀ
(
ˇ∑côy
, 
Exåa˘Key
 
exåa˘key
,

73 
EquÆKey
 
equÆkey
, 
EquÆD©a
 
equÆd©a
, 
HashF˙
 
hashf˙
)

74 : 
	`_ˇ∑côy
(
ˇ∑côy
)

75 , 
	`_size
(0)

76 , 
	`_d©a
(
√w
 
D©a
[
ˇ∑côy
])

77 , 
	`_exi°s
(
√w
 
boﬁ
[
ˇ∑côy
])

78 , 
	`_exåa˘key
(
exåa˘key
)

79 , 
	`_equÆkey
(
equÆkey
)

80 , 
	`_equÆd©a
(
equÆd©a
)

81 , 
	$_hashf˙
(
hashf˙
)

84 
i
 = 0; i < 
ˇ∑côy
; i++) {

85 
_exi°s
[
i
] = 
Ál£
;

93 
	$ö£π_n‹esize
(
D©a
 
d
) {

96 
	`as£π
(
_size
 < 
_ˇ∑côy
);

97 
size_t
 
hash_code
 = 
	`_hashf˙
(
	`_exåa˘key
(
d
));

98 
hash_pos
 = ()(
hash_code
 % (
size_t
)
_ˇ∑côy
);

101 
pos
;

104 
pos
 = 
hash_pos
;

105 (
pos
 < 
_ˇ∑côy
Ë&& 
_exi°s
[pos];Öos++);

106 i‡(
pos
 =
_ˇ∑côy
) {

109 
pos
 = 0;

110 (
pos
 < 
_ˇ∑côy
Ë&& 
_exi°s
[pos];Öos++);

115 
	`as£π
(
pos
 !
_ˇ∑côy
);

116 
	`as£π
(! 
_exi°s
[
pos
] );

118 
_d©a
[
pos
] = 
d
;

119 
_exi°s
[
pos
] = 
åue
;

120 
_size
++;

121 
	}
}

127 
boﬁ
 
	$ö£π_unique_n‹esize
(
D©a
 
d
) {

130 
size_t
 
hash_code
 = 
	`_hashf˙
(
	`_exåa˘key
(
d
));

131 
hash_pos
 = ()(
hash_code
 % (
size_t
)
_ˇ∑côy
);

133 
pos
;

137 
pos
 = 
hash_pos
;

138 (
pos
 < 
_ˇ∑côy
)

139 && 
_exi°s
[
pos
]

140 && !
	`_equÆd©a
(
_d©a
[
pos
],
d
);Öos++);

141 i‡(
pos
 =
_ˇ∑côy
) {

144 
pos
 = 
hash_pos
;

145 (
pos
 < 
_ˇ∑côy
)

146 && 
_exi°s
[
pos
]

147 && !
	`_equÆd©a
(
_d©a
[
pos
],
d
);Öos++);

154 
	`as£π
(
pos
 !
_ˇ∑côy
);

156 i‡(!
_exi°s
[
pos
]) {

158 
_d©a
[
pos
] = 
d
;

159 
_exi°s
[
pos
] = 
åue
;

160 
_size
++;

161  
åue
;

166 
	`as£π
–
	`_equÆd©a
(
_d©a
[
pos
],
d
) );

167  
Ál£
;

168 
	}
}

174 
boﬁ
 
	$c⁄èös
(
D©a
 
d
) {

177 
size_t
 
hash_code
 = 
	`_hashf˙
(
	`_exåa˘key
(
d
));

178 
hash_pos
 = ()(
hash_code
 % (
size_t
)
_ˇ∑côy
);

180 
pos
;

184 
pos
 = 
hash_pos
;

185 (
pos
 < 
_ˇ∑côy
)

186 && 
_exi°s
[
pos
]

187 && !
	`_equÆd©a
(
_d©a
[
pos
],
d
);Öos++);

188 i‡(
pos
 =
_ˇ∑côy
) {

191 
pos
 = 
hash_pos
;

192 (
pos
 < 
_ˇ∑côy
)

193 && 
_exi°s
[
pos
]

194 && !
	`_equÆd©a
(
_d©a
[
pos
],
d
);Öos++);

197 i‡(
pos
 =
_ˇ∑côy
) {

199  
Ál£
;

202 i‡(!
_exi°s
[
pos
]) {

204  
Ál£
;

208 
	`as£π
(
	`_equÆd©a
(
_d©a
[
pos
],
d
));

209  
åue
;

210 
	}
}

213 
	$˛ór
() {

214 
i
 = 0; i < 
_ˇ∑côy
; i++)

215 
_exi°s
[
i
] = 
Ál£
;

216 
_size
 = 0;

217 
	}
}

225 ˛as†
	côî©‹
 {

227 
	g¥iv©e
:

230 
hashèbÀ
* 
_∑ª¡
;

233 
Key
 
	g_key
;

236 
	g_°¨t_ödex
;

237 
	g_cuº_ödex
;

241 
boﬁ
 
	g_is_íd
;

244 
	gpublic
:

246 
ôî©‹
()

247 : 
_∑ª¡
(
NULL
)

248 , 
_is_íd
(
åue
)

252 
ôî©‹
(
hashèbÀ
* 
∑ª¡
)

253 : 
_∑ª¡
(
∑ª¡
)

254 , 
_is_íd
(
åue
)

258 
ôî©‹
(
hashèbÀ
* 
∑ª¡
, 
Key
 c⁄°& 
key
, 
°¨t_ödex
)

259 : 
_∑ª¡
(
∑ª¡
)

260 , 
_key
(
key
)

261 , 
_°¨t_ödex
(
°¨t_ödex
)

262 , 
_cuº_ödex
(
°¨t_ödex
)

263 , 
_is_íd
(
Ál£
)

266 i‡(!
	g∑ª¡
->
	g_exi°s
[
°¨t_ödex
]) {

267 
	g_is_íd
 = 
åue
;

273 i‡(
	g∑ª¡
->
_equÆkey
(
key
, 
∑ª¡
->
_exåa˘key
’¨ít->
_d©a
[
°¨t_ödex
])))

278 ++*
	gthis
;

281 
boﬁ
 
	g›î©‹
 ==(c⁄° 
ôî©‹
 &
Ÿhî
) const {

284 i‡(
_is_íd
)

285  
Ÿhî
.
_is_íd
;

286 i‡(
	gŸhî
.
	g_is_íd
)

287  
	g_is_íd
;

291 
as£π
(
_∑ª¡
 =
Ÿhî
._parent);

296 
	g_°¨t_ödex
 =
Ÿhî
.
_°¨t_ödex


297 && 
_cuº_ödex
 =
Ÿhî
._curr_index

298 && 
_∑ª¡
->
_equÆkey
(
_key
, 
Ÿhî
._key)

302 
boﬁ
 
	g›î©‹
 !=(c⁄° 
ôî©‹
 &
Ÿhî
) const {

303  !(*
this
 =
Ÿhî
);

306 
	gD©a
& 
	g›î©‹
*() {

307  *
gë
();

310 
D©a
* 
	g›î©‹
 ->() {

311  
gë
();

314 
D©a
* 
gë
() {

316 
as£π
(!
_is_íd
);

319 
TRACE
(
TRACE_ALWAYS
, "Lookingát data %s storedátÖosition %d\n",

320 
_∑ª¡
->
_d©a
[
_cuº_ödex
],

321 
_cuº_ödex
);

324  &
	g_∑ª¡
->
	g_d©a
[
_cuº_ödex
];

327 
	gôî©‹
 &
	g›î©‹
 ++() {

329 
as£π
(!
_is_íd
);

331 
	gcuº
 = 
_cuº_ödex
;

339 if(++
	gcuº
 =
_∑ª¡
->
_ˇ∑côy
)

340 
cuº
 = 0;

343 i‡(!
	g_∑ª¡
->
	g_exi°s
[
cuº
]) {

344 
	g_is_íd
 = 
åue
;

345  *
	gthis
;

348 i‡(
	gcuº
 =
_°¨t_ödex
) {

350 
_is_íd
 = 
åue
;

351  *
	gthis
;

354 i‡(
	g_∑ª¡
->
_equÆkey
(
_key
, 
_∑ª¡
->
_exåa˘key
(_∑ª¡->
_d©a
[
cuº
]))) {

355 
	g_cuº_ödex
 = 
cuº
;

356  *
	gthis
;

361 
ôî©‹
 
	g›î©‹
 ++() {

362 
ôî©‹
 
	gﬁd
 = *
this
;

363 ++*
	gthis
;

364  
	gﬁd
;

369 
	g°d
::
∑ú
<
ôî©‹
, 
	gôî©‹
> 
	$equÆ_ønge
(
Key
 c⁄°& 
k
) {

370 
size_t
 
hash_code
 = 
	`_hashf˙
(
k
);

371 
hash_pos
 = ()(
hash_code
 % (
size_t
)
_ˇ∑côy
);

372  
°d
::
	`make_∑ú
(
	`ôî©‹
(
this
, 
k
, 
hash_pos
), iterator(this));

373 
	}
}

	@include/util/history.h

24 #i‚de‡
__UTIL_HISTORY_H


25 
	#__UTIL_HISTORY_H


	)

27 
	~"utû/c⁄fig.h
"

30 #i‡
HAVE_READLINE


32 
boﬁ
 
hi°‹y_›í
();

33 
boﬁ
 
hi°‹y_˛o£
();

	@include/util/linux_procstat.h

31 #i‚de‡
__UTIL_LINUX_PROCSTAT_H


32 
	#__UTIL_LINUX_PROCSTAT_H


	)

34 
	~"utû/¥oc°©.h
"

35 
	~"utû/t›öfo.h
"

37 
	~"k_deföes.h
"

41 ˛as†
	clöux_¥ocm⁄ô‹_t
 : 
public
 
¥ocm⁄ô‹_t


43 
¥iv©e
:

44 
t›öfo_t
 
_t›öfo
;

46 
	m¥Ÿe˘ed
:

47 
_£tup
(c⁄° 
öãrvÆ_£c
);

49 
	mpublic
:

51 
löux_¥ocm⁄ô‹_t
(
sh‹e
::
Sh‹eEnv
* 
ív
,

52 c⁄° 
öãrvÆ_£c
 = 1);

53 ~
löux_¥ocm⁄ô‹_t
();

57 
°©_ª£t
();

59 
gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
=
åue
);

60 
¥öt_avg_ußge
();

61 
¥öt_ext_°©s
();

62 
ul⁄g_t
 
ioch¨s
();

63 
uöt
 
gë_num_of_˝us
();

65 
˝u_lﬂd_vÆues_t
 
gë_lﬂd
();

	@include/util/namespace.h

24 #i‚de‡
__NAMESPACE_H


25 
	#__NAMESPACE_H


	)

27 
	#ENTER_NAMESPACE
(
ns
Ë
«me•a˚
Ç†{

	)

29 
	#EXIT_NAMESPACE
(
ns
Ë}

	)

	@include/util/pool_alloc.h

24 #i‚de‡
__POOL_ALLOC_H


25 
	#__POOL_ALLOC_H


	)

27 
	~<ˇs£π
>

28 
	~<c°dlib
>

29 
	~"utû/thªad_loˇl.h
"

31 ˛as†
	cpoﬁ_Æloc
 {

32 
	mpublic
:

33 
poﬁ_Æloc
(c⁄°* 
«me
, 
dñè
=8);

34 ~
poﬁ_Æloc
();

35 * 
Æloc
(
size
);

36 
‰ì
(* 
±r
);

39 
	tbôm≠
;

40 
	ec⁄°™ts
 {
	mBLOCK_UNITS
=64};

42 
	ghódî
;

45 
	gblock_m≠_sync
;

46 
	sblock
 {

47 
bôm≠
 
	g_bôm≠
;

50 c⁄° * 
	g_«me
;

53 
block_m≠_sync
* 
	g_live_blocks
;

55 
	g_d©a
[0];

58 
block
(c⁄°* 
«me
)

59 : 
_bôm≠
(~0ul), 
_«me
(
«me
)

62 
hódî
* 
gë_hódî
(
ödex
, 
bôm≠
 
ønge
);

63 
cut_loo£
();

67 
	shódî
 {

68 
bôm≠
 
	g_ønge
;

69 
block
* 
	g_block
;

70 
	g_d©a
[0];

71 
ªÀa£
();

74 
	gpublic
:

76 
ãm∂©e
<
˛ass
 
T
>

77 
poﬁ_Æloc
* 
	$poﬁ
(c⁄°* 
«me
) {

78 
__thªad
 
poﬁ_Æloc
* 
_poﬁ
 = 
NULL
;

79  
_poﬁ
? _poﬁ : _poﬁ = 
√w
 
	`poﬁ_Æloc
(
«me
);

80 
	}
}

82 
	g¥iv©e
:

83 c⁄°* 
_«me
;

84 
block
* 
	g_block
;

85 
bôm≠
 
	g_√xt_unô
;

86 
	g_dñè
;

87 
	g_off£t
;

88 
	g_Æloc_cou¡
;

89 
	g_huge_cou¡
;

90 
	g_Æloc_sizes
[
BLOCK_UNITS
];

91 
	g_huge_sizes
[
BLOCK_UNITS
];

92 
block_m≠_sync
* 
	g_live_blocks
;

94 
√w_block
();

95 
hódî
* 
Æloˇã
(
size
);

96 
hódî
* 
Æloˇã_n‹mÆ
(
size
);

97 
hódî
* 
Æloˇã_huge
(
size
);

98 
disˇrd_block
();

102 
	#DECLARE_POOL_ALLOC_POOL
(
˛s
) \

103 
poﬁ_Æloc
* 
	`poﬁ
(Ë{ Öoﬁ_Æloc::
poﬁ
<
˛s
>(#cls); } \

104 
dummy_°ru˘


	)

106 
	#DECLARE_POOL_ALLOC_NEW_AND_DELETE
(
˛s
) \

107 * 
›î©‹
 
	`√w
(
size_t
 
size
Ë{  
	`poﬁ
()->
	`Æloc
(size); } \

108 
›î©‹
 
	`dñëe
(* 
±r
Ë{ 
	`poﬁ
()->
	`‰ì
(ptr); } \

109 
	`DECLARE_POOL_ALLOC_POOL
(
˛s
)

	)

111 
	#DECLARE_POOL_ALLOC_NEW_AND_DELETE
(
˛s
Ë
dummy_°ru˘


	)

115 
	s°©ic_öôülize_poﬁ_Æloc
 { 
°©ic_öôülize_poﬁ_Æloc
(); };

116 
°©ic_öôülize_poﬁ_Æloc
 
	gpoﬁ_Æloc_sw©chz
;

	@include/util/prcinfo.h

36 #i‚de‡
__UTIL_PRCINFO_H


37 
	#__UTIL_PRCINFO_H


	)

39 
	~<sys/ty≥s.h
>

40 
	~<sys/time.h
>

42 
	~<¥ocfs.h
>

44 
	~<°dio.h
>

45 
	~<uni°d.h
>

46 
	~<f˙é.h
>

47 
	~<î∫o.h
>

48 
	~<m©h.h
>

50 
	~"utû/°›w©ch.h
"

51 
	~"utû/¥oc°©.h
"

53 
	~"k_deföes.h
"

55 
	~<io°ªam
>

57 
usög
 
«me•a˚
 
	g°d
;

59 
	s¥o˚ssöfo_t


61 
	m_fd
;

63 
¥ußge_t
 
	m_ﬁd_¥ußge
;

64 
¥ußge_t
 
	m_¥ußge
;

65 
°›w©ch_t
 
	m_timî
;

67 
boﬁ
 
	m_¥öt_©_exô
;

68 
	m_is_ok
;

70 
uöt
 
	m_n˝us
;

72 
¥o˚ssöfo_t
(c⁄° 
boﬁ
 
¥öèãxô
 = 
Ál£
);

73 ~
¥o˚ssöfo_t
();

76 
ª£t
();

77 
¥öt
();

78 
ul⁄g_t
 
ioch¨s
();

80 
uöt
 
gë_num_of_˝us
();

82 
˝u_lﬂd_vÆues_t
 
gë_lﬂd
();

84 
å™s
(
time°ruc_t
 
©s
);

86 
hr_mö_£c
(*, );

87 
¥time
(
°rög
 
œbñ
, 
time°ruc_t
* 
ts
);

88 
¥time
(
°rög
 
œbñ
, & 
dñay
);

90 
tßdd
(
time°ruc_t
* 
ªsu…
,Åime°ruc_t* 
a
,Åime°ruc_t* 
b
);

91 
tssub
(
time°ruc_t
* 
ªsu…
,Åime°ruc_t* 
a
,Åime°ruc_t* 
b
);

	@include/util/procstat.h

44 #i‚de‡
__UTIL_PROCSTAT_H


45 
	#__UTIL_PROCSTAT_H


	)

47 
	~<°dio.h
>

48 
	~<°rög.h
>

50 
	~<uni°d.h
>

51 
	~<ve˘‹
>

52 
	~<±hªad.h
>

54 
	~"utû/thªad.h
"

55 
	~"k_deföes.h
"

67 
	s˝u_lﬂd_vÆues_t


69 
	mrun_tm
;

70 
	mwaô_tm
;

71 
˝u_lﬂd_vÆues_t
(Ë: 
run_tm
(0), 
waô_tm
(0) { }

72 ~
˝u_lﬂd_vÆues_t
() { }

86 
	s˝u_mósuªmít


88 
uöt64_t
 
	mtime°amp
;

89 
uöt64_t
 
	m˝u_n£c_idÀ
;

91 
	m˝u_mósuªmít
 &
	m›î©‹
+=(
˝u_mósuªmít
 c⁄° &
Ÿhî
);

92 
	m˝u_mósuªmít
 &
	m›î©‹
-=(
˝u_mósuªmít
 c⁄° &
Ÿhî
);

93 
˛ór
();

94 
£t
(
uöt64_t
 
¢≠time
, uöt64_à
n£c_idÀ
);

109 
ENTER_NAMESPACE
(
sh‹e
);

110 
˛ass
 
	gSh‹eEnv
;

111 
EXIT_NAMESPACE
(
sh‹e
);

114 
	eeCPS
 { 
	mCPS_NOTSET
, 
	mCPS_RESET
, 
	mCPS_RUNNING
, 
	mCPS_PAUSE
, 
	mCPS_STOP
 };

117 ˛as†
	c¥ocm⁄ô‹_t
 : 
public
 
thªad_t


119 
¥Ÿe˘ed
:

121 
_öãrvÆ_u£c
;

122 
	m_öãrvÆ_£c
;

124 
	m_tŸÆ_ußge
;

126 vﬁ©ûê
	m_num_ußge_ªadögs
;

127 vﬁ©ûê
	m_avg_ußge
;

129 
±hªad_muãx_t
 
	m_muãx
;

130 
±hªad_c⁄d_t
 
	m_c⁄d
;

132 
eCPS
 vﬁ©ûê
	m_°©e
;

133 
vútuÆ
 
_£tup
(c⁄° 
öãrvÆ_£c
);

135 
	msh‹e
::
Sh‹eEnv
* 
_ív
;

136 
uöt_t
 
	m_œ°_ªadög
;

138 
boﬁ
 
	m_¥öt_vîbo£
;

140 
	mpublic
:

142 
¥ocm⁄ô‹_t
(c⁄° * 
«me
,

143 
sh‹e
::
Sh‹eEnv
* 
ív
 = 
NULL
,

144 c⁄° 
öãrvÆ_£c
 = 1);

145 
	mvútuÆ
 ~
¥ocm⁄ô‹_t
();

148 
w‹k
();

151 
˙å_ª£t
();

152 
˙å_∑u£
();

153 
˙å_ªsume
();

154 
˙å_°›
();

156 
vútuÆ
 
w_rc_t
 
ˇ£_£tup
();

157 
vútuÆ
 
w_rc_t
 
ˇ£_ª£t
();

158 
vútuÆ
 
w_rc_t
 
ˇ£_°›
();

159 
vútuÆ
 
w_rc_t
 
ˇ£_tick
();

161 
£tEnv
(
sh‹e
::
Sh‹eEnv
* 
ív
);

165 
vútuÆ
 
°©_ª£t
()=0;

167 
vútuÆ
 
gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
)=0;

168 
vútuÆ
 
¥öt_avg_ußge
()=0;

169 
vútuÆ
 
¥öt_ext_°©s
()=0;

170 
vútuÆ
 
ul⁄g_t
 
ioch¨s
()=0;

171 
vútuÆ
 
uöt
 
gë_num_of_˝us
()=0;

174 
vútuÆ
 
˝u_lﬂd_vÆues_t
 
gë_lﬂd
()=0;

175 
¥öt_lﬂd
(c⁄° 
dñay
);

178 
¥öt_öãrvÆ
();

181 
£t_¥öt_vîbo£
(
boﬁ
 
¥öt_vîbo£
);

182 
¥öt_vîbo£
();

	@include/util/progress.h

31 #i‚de‡
__UTIL_PROGRESS_H


32 
	#__UTIL_PROGRESS_H


	)

35 
	#PROGRESS_INTERVAL
 100000

	)

37 
	#MAX_LINE_LENGTH
 1024

	)

42 
¥ogªss_ª£t
(* 
ödiˇt‹
);

43 
¥ogªss_upd©e
(* 
ödiˇt‹
);

44 
¥ogªss_d⁄e
(c⁄° * 
èbÀ«me
);

	@include/util/randgen.h

24 #i‚de‡
__RANDGEN_H


25 
	#__RANDGEN_H


	)

27 
	~"sm_vas.h
"

29 ˛as†
	cøndgí_t


31 
	mpublic
:

33 
	$øndgí_t
() {

38 
	$ª£t
(
£ed
) {

39 
°hªad_t
::
	`és_∫g
()->
	`£ed
(&
£ed
, 1);

40 
	}
}

42 
	$ønd
() {

43  
°hªad_t
::
	`me
()->
	`ønd
() & 0x7fffffff;

44 
	}
}

50 
	$ønd
(
n
) {

51 
	`as£π
(
n
 > 0);

52  
°hªad_t
::
	`me
()->
	`øndn
(
n
);

53 
	}
}

	@include/util/random_input.h

33 #i‚de‡
__UTIL_RANDOM_INPUT_H


34 
	#__UTIL_RANDOM_INPUT_H


	)

37 
	~"utû.h
"

38 
	~"zùfün.h
"

40 
UR™d
(c⁄° 
low
, c⁄° 
high
);

41 
boﬁ
 
UR™dBoﬁ
();

42 
UR™dSh‹t
(c⁄° 
low
, c⁄° 
high
);

43 
UZR™d
(c⁄° 
low
, c⁄° 
high
);

44 
ZR™d
(c⁄° 
low
, c⁄° 
high
);

46 c⁄° 
	gCAPS_CHAR_ARRAY
[] = { "ABCDEFGHIJKLMNOPQRSTUVWXYZ" };

47 c⁄° 
	gNUMBERS_CHAR_ARRAY
[] = { "012345789" };

49 
UR™dFûlSåC≠s
(* 
de°
, c⁄° 
sz
);

50 
UR™dFûlSåNumbx
(* 
de°
, c⁄° 
sz
);

53 
	#STRSIZE
(
x
Ë(x+1)

	)

57 
boﬁ
 
_g_íabÀZùf
;

58 
_g_ZùfS
;

61 
£tZùf
(c⁄° 
boﬁ
 
isE«bÀd
, c⁄° 
s
);

	@include/util/resource_declare.h

24 #i‚de‡
__RESOURCE_DECLARE_H


25 
	#__RESOURCE_DECLARE_H


	)

27 
	~"utû/c_°r.h
"

39 ˛as†
	cªsour˚_de˛¨e_t


41 
	mpublic
:

42 
vútuÆ
 
de˛¨e
(c⁄° 
c_°r
& 
«me
, 
cou¡
)=0;

43 
	mvútuÆ
 ~
	$ªsour˚_de˛¨e_t
() { }

44 
	}
};

	@include/util/resource_pool.h

43 #i‚de‡
__UTIL_RESOURCE_POOL_H


44 
	#__UTIL_RESOURCE_POOL_H


	)

46 
	~"utû/thªad.h
"

47 
	~"utû/c_°r.h
"

48 
	~"utû/°©ic_li°.h
"

49 
	~"utû/°©ic_li°_°ru˘.h
"

59 ˛as†
	cªsour˚_poﬁ_t


61 
	m¥iv©e
:

63 
±hªad_muãx_t
* 
_muãxp
;

65 
	m_ˇ∑côy
;

66 
	m_ª£rved
;

67 
	m_n⁄_idÀ
;

69 
c_°r
 
	m_«me
;

71 
°©ic_li°_s
 
	m_waôîs
;

73 
	mpublic
:

75 
	$ªsour˚_poﬁ_t
(
±hªad_muãx_t
* 
muãxp
, 
ˇ∑côy
, c⁄° 
c_°r
& 
«me
)

76 : 
	`_muãxp
(
muãxp
)

77 , 
	`_ˇ∑côy
(
ˇ∑côy
)

78 , 
	`_ª£rved
(0)

79 , 
	`_n⁄_idÀ
(0)

80 , 
	$_«me
(
«me
)

82 
	`°©ic_li°_öô
(&
_waôîs
);

85 
	`ª£rve
(
n
);

86 
	`uƒe£rve
(
n
);

87 
	`nŸify_ˇ∑côy_ö¸ó£
(
diff
);

88 
	`nŸify_idÀ
();

89 
	`nŸify_n⁄_idÀ
();

90 
	`gë_ˇ∑côy
();

91 
	`gë_ª£rved
();

92 
	`gë_n⁄_idÀ
();

94 
¥iv©e
:

96 
	`waô_f‹_tu∫
(
ªq_ª£rve_cou¡
);

97 
	`waôî_wake
();

98 
	}
};

	@include/util/resource_releaser.h

24 #i‚de‡
__RESOURCE_RELEASER_H


25 
	#__RESOURCE_RELEASER_H


	)

35 ˛as†
	cªsour˚_ªÀa£r_t


37 
	mpublic
:

38 
vútuÆ
 
ªÀa£_ªsour˚s
()=0;

39 
	mvútuÆ
 ~
	$ªsour˚_ªÀa£r_t
() { }

40 
	}
};

	@include/util/rio.h

11 #i‚de‡
_RIO_H


12 
	#_RIO_H


	)

14 
	~<sys/ty≥s.h
>

25 
	#RIO_BUFSIZE
 8192

	)

38 
	mrio_fd
;

39 
ssize_t
 
	mrio_˙t
;

40 *
	mrio_buÂå
;

41 
	mrio_buf
[
RIO_BUFSIZE
];

43 } 
	trio_t
;

50 
ssize_t
 
rio_ªadn
 (
fd
, * 
u§buf
, 
size_t
 
n
);

51 
ssize_t
 
rio_wrôí
(
fd
, c⁄° * 
u§buf
, 
size_t
 
n
);

52 
rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
);

53 
ssize_t
 
rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
);

54 
ssize_t
 
rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
);

	@include/util/shell.h

31 #i‚de‡
__UTIL_SHELL_H


32 
	#__UTIL_SHELL_H


	)

34 
	~"k_deföes.h
"

36 
	~<m≠
>

39 
	~<as£π.h
>

40 
	~<sig«l.h
>

41 
	~<î∫o.h
>

44 #ifde‡
HAVE_READLINE


45 
	~<ªadlöe/ªadlöe.h
>

46 
	~<ªadlöe/hi°‹y.h
>

50 
	~<sys/ty≥s.h
>

51 
	~<sys/sockë.h
>

52 
	~<√tdb.h
>

55 
	~<io°ªam
>

56 
	~<f°ªam
>

57 
	~<°rög
>

59 
	~"utû/comm™d/comm™d_h™dÀr.h
"

60 
	~"utû/comm™d/åa˚r.h
"

62 
	~"utû.h
"

63 
	~"utû/c⁄fig.h
"

65 
usög
 
«me•a˚
 
	g°d
;

69 "C" 
sig_h™dÀr_fwd
(
sig
);

72 
	gm≠
<
	t°rög
,
	tcomm™d_h™dÀr_t
*> 
	tcmdM≠
;

73 
	gcmdM≠
::
	tôî©‹
 
	tcmdM≠It
;

83 
˛ass
 
	gívV¨
;

87 
	#REGISTER_CMD
(
cmdty≥
,
cmd«me
) \

88 
cmd«me
 = 
√w
 
	`cmdty≥
(); \

89 
cmd«me
->
	`£èlü£s
(); \

90 
	`add_cmd
(
cmd«me
.
	`gë
())

	)

92 
	#REGISTER_CMD_PARAM
(
cmdty≥
,
cmd«me
,
∑øm«me
) \

93 
cmd«me
 = 
√w
 
	`cmdty≥
(
∑øm«me
); \

94 
cmd«me
->
	`£èlü£s
(); \

95 
	`add_cmd
(
cmd«me
.
	`gë
())

	)

99 
	gquô_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 {

100 
£èlü£s
();

101 
h™dÀ
(c⁄° * ) {  (
	gSHELL_NEXT_QUIT
); }

102 
°rög
 
desc
() const {  (string("Quit")); }

106 
	gdisc⁄√˘_cmd_t
 : 
public
 
comm™d_h™dÀr_t


108 
£èlü£s
();

109 
h™dÀ
(c⁄° * ) {  (
	gSHELL_NEXT_DISCONNECT
); }

110 
°rög
 
desc
() const {  (string("Disconnect client")); }

114 
	ghñp_cmd_t
 : 
public
 
comm™d_h™dÀr_t


116 
cmdM≠
* 
_pcmds
;

117 
hñp_cmd_t
(
cmdM≠
* 
pcmds
Ë: 
_pcmds
’cmdsË{ 
as£π
(pcmds); }

118 ~
hñp_cmd_t
() { }

119 
£èlü£s
();

120 
h™dÀ
(c⁄° * 
cmd
);

121 
ußge
() {

122 
TRACE
–
TRACE_ALWAYS
, "HELP -Örints usage\n");

123 
TRACE
–
TRACE_ALWAYS
, "HELP <cmd> -Örints detailed help for <cmd>\n");

125 
°rög
 
desc
() const {  (string("Help - Use 'help <cmd>' for usage of specific cmd")); }

126 
li°_cmds
();

130 
	g£t_cmd_t
 : 
public
 
comm™d_h™dÀr_t


132 
ívV¨
* 
ev
;

133 
öô
();

134 
£èlü£s
();

135 
h™dÀ
(c⁄° * 
cmd
);

136 
ußge
();

137 
°rög
 
desc
() const {  (string("SetsÉnv vars")); }

141 
	gív_cmd_t
 : 
public
 
comm™d_h™dÀr_t


143 
ívV¨
* 
ev
;

144 
öô
();

145 
£èlü£s
();

146 
h™dÀ
(c⁄° * 
cmd
);

147 
ußge
();

148 
°rög
 
desc
() const {  (string("PrintsÉnv vars")); }

152 
	gc⁄f_cmd_t
 : 
public
 
comm™d_h™dÀr_t


154 
ívV¨
* 
ev
;

155 
öô
();

156 
£èlü£s
();

157 
h™dÀ
(c⁄° * 
cmd
);

158 
ußge
();

159 
°rög
 
desc
() const {  (string("RereadsÉnv vars")); }

163 
	gecho_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 {

164 
£èlü£s
(Ë{ 
_«me
 = 
°rög
("echo"); 
	g_Æü£s
.
push_back
("echo"); }

165 
h™dÀ
(c⁄° * 
cmd
) {

166 
¥ötf
("%s\n", 
cmd
+
°æí
("echo "));

167  (
	gSHELL_NEXT_CONTINUE
);

169 
ußge
(Ë{ 
TRACE
–
TRACE_ALWAYS
, "usage:Écho <string>\n"); }

170 
°rög
 
desc
() const {  string("Echoes its inputárgumentsÅoÅhe screen"); }

174 
	gbªak_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 {

175 
£èlü£s
(Ë{ 
_«me
 = 
°rög
("bªak"); 
	g_Æü£s
.
push_back
("break"); }

176 
h™dÀ
(const * ) {

177 
øi£
(
SIGINT
);

178  (
	gSHELL_NEXT_CONTINUE
);

180 
ußge
(Ë{ 
TRACE
–
TRACE_ALWAYS
, "usage: break\n"); }

181 
°rög
 
desc
() const {  string("Breaks intoá debugger byÑaising ^C " \

186 
	gzùf_cmd_t
 : 
public
 
comm™d_h™dÀr_t
 {

187 
_s
;

188 
boﬁ
 
	g_is_íabÀd
;

189 
zùf_cmd_t
(Ë: 
_s
(0.0), 
_is_íabÀd
(
Ál£
) { };

190 ~
zùf_cmd_t
() { };

191 
£èlü£s
();

192 
h™dÀ
(c⁄° * 
cmd
);

193 
ußge
();

194 
°rög
 
desc
() const;

214 ˛as†
	cshñl_t


216 
	m¥Ÿe˘ed
:

218 
¨øy_gu¨d_t
<> 
_cmd_¥om±
;

219 
	m_cmd_cou¡î
;

221 
boﬁ
 
	m_ßve_hi°‹y
;

222 
	m_°©e
;

224 
mcs_lock
 
	m_lock
;

225 
cmdM≠
 
	m_cmds
;

226 
cmdM≠
 
	m_Æü£s
;

227 
boﬁ
 
	m_¥o˚ssög_comm™d
;

230 
boﬁ
 
	m_√t_mode
;

231 
uöt_t
 
	m_√t_p‹t
;

234 
boﬁ
 
	m_öputfûe_mode
;

235 
°rög
 
	m_öputfûe
;

236 
if°ªam
 
	m_öputfûe°ªam
;

238 
fûe_gu¨d_t
 
	m_ö_°ªam
;

239 
	m_li°í_fd
;

241 
sockaddr_ö
 
	m_˛õ¡_addr
;

242 
	m_˛õ¡_Àn
;

243 
	m_c⁄n_fd
;

245 
	m_√t_c⁄n_˙t
;

249 
	mgu¨d
<
	mquô_cmd_t
> 
	m_quôî
;

250 
	mgu¨d
<
	mdisc⁄√˘_cmd_t
> 
	m_disc⁄√˘î
;

251 
	mgu¨d
<
	mhñp_cmd_t
> 
	m_hñ≥r
;

252 
	mgu¨d
<
	m£t_cmd_t
> 
	m_£ãr
;

253 
	mgu¨d
<
	mív_cmd_t
> 
	m_ívî
;

254 
	mgu¨d
<
	mc⁄f_cmd_t
> 
	m_c⁄„r
;

255 
	mgu¨d
<
	måa˚_cmd_t
> 
	m_åa˚r
;

257 
	mgu¨d
<
	mecho_cmd_t
> 
	m_ech€r
;

258 
	mgu¨d
<
	mbªak_cmd_t
> 
	m_bªakî
;

259 
	mgu¨d
<
	mzùf_cmd_t
> 
	m_zù„r
;

261 
_ªgi°î_comm™ds
();

263 
	mpublic
:

265 
shñl_t
(c⁄° * 
¥om±
 = 
SCLIENT_PROMPT
,

266 c⁄° 
boﬁ
 
ßve_hi°‹y
 = 
åue
,

267 c⁄° 
boﬁ
 
√t_mode
 = 
Ál£
,

268 c⁄° 
uöt_t
 
√t_p‹t
 = 
SCLIENT_NET_MODE_LISTEN_PORT
,

269 c⁄° 
boﬁ
 
öputfûe_mode
 = 
Ál£
,

270 c⁄° 
°rög
 
öputfûe
 = "");

272 
	mvútuÆ
 ~
shñl_t
();

274 
	mshñl_t
* &
	$ö°™˚
() {

275 
shñl_t
* 
_ö°™˚
;  _instance;

278 
	$gë_comm™d_˙t
() {

279  (
_cmd_cou¡î
);

280 
	}
}

282 
	$sig_h™dÀr
(
sig
) {

283 
	`as£π
(
sig
 =
SIGINT
 && 
	`ö°™˚
());

284 if–
rvÆ
=
	`ö°™˚
()->
	`SIGINT_h™dÀr
() )

285 
	`exô
(
rvÆ
);

286 
	}
}

289 
vútuÆ
 
ªgi°î_comm™ds
()=0;

290 
add_cmd
(
comm™d_h™dÀr_t
* 
acmd
);

291 
öô_cmds
();

292 
˛o£_cmds
();

295 
vútuÆ
 
	$SIGINT_h™dÀr
(Ë{  (
ECANCELED
); 
	}
}

296 
°¨t
();

299 
¥o˚ss_ªadlöe
();

302 
¥o˚ss_√tw‹k
();

305 
¥o˚ss_fûñöe
();

308 
¥o˚ss_⁄e
(c⁄° * 
cmd
);

	@include/util/simics-magic-instruction.h

24 #i‚de‡
_SIMICS_SIMICS_MAGIC_INSTRUCTION_H


25 
	#_SIMICS_SIMICS_MAGIC_INSTRUCTION_H


	)

28 
	#__MAGIC_CASSERT
(
p
) do { \

29 
	t__check_magic_¨gumít
[(
p
) ? 1 : -1]; \

30 } 0)

	)

32 #i‡
deföed
(
__GNUC__
)

34 #i‡
deföed
(
__Æpha
)

36 
	#MAGIC
(
n
) do { \

37 
	`__MAGIC_CASSERT
(!(
n
)); \

38 
__asm__
 
	`__vﬁ©ûe__
 (".long 0x70000000"); \

39 } 0)

	)

41 #ñi‡
deföed
(
__•¨c
)

43 
	#MAGIC
(
n
) do { \

44 
	`__MAGIC_CASSERT
((
n
) > 0 && (n) < (1U << 22)); \

45 
__asm__
 
	`__vﬁ©ûe__
 ("sethi " #n ", %g0"); \

46 } 0)

	)

48 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0x40000)

	)

50 #ñi‡(
deföed
(
__i386
Ë|| deföed(
__x86_64
))

52 
	#MAGIC
(
n
) do { \

53 
	`__MAGIC_CASSERT
(!(
n
)); \

54 
__asm__
 
	`__vﬁ©ûe__
 ("xchg %bx,%bx"); \

55 } 0)

	)

57 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0)

	)

59 #ñi‡
deföed
(
__ü64
)

61 
	#MAGIC
(
n
) do { \

62 
	`__MAGIC_CASSERT
((
n
) >= 0 && (n) < 0x100000); \

63 
__asm__
 
	`__vﬁ©ûe__
 ("nop (0x100000 + " #n ");;"); \

64 } 0)

	)

66 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0x40000)

	)

68 #ñi‡
deföed
(
__powîpc__
)

70 
	#MAGIC
(
n
) do { \

71 
	`__MAGIC_CASSERT
((
n
) >= 0 && (n) < 32); \

72 
__asm__
 
	`__vﬁ©ûe__
 ("fmr " #n ", " #n); \

73 } 0)

	)

75 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0)

	)

77 #ñi‡
deföed
(
__¨m__
)

79 
	#MAGIC
(
n
) do { \

80 
	`__MAGIC_CASSERT
((
n
) == 0); \

81 
__asm__
 
	`__vﬁ©ûe__
 ("orreqÑ0,Ñ0,Ñ0"); \

82 } 0)

	)

84 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0)

	)

86 #ñi‡
deföed
(
__mùs__
)

88 
	#MAGIC
(
n
) do { \

89 
	`__MAGIC_CASSERT
((
n
) >= 0 && (n) <= 0xffff); \

90 
__asm__
 
	`__vﬁ©ûe__
 (".word 0x24000000+" #n); \

91 } 0)

	)

93 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0)

	)

99 #ñi‡
deföed
(
__SUNPRO_C
Ë|| deföed(
__SUNPRO_CC
)

101 #i‡
deföed
(
__•¨c
)

103 
	#MAGIC
(
n
) do { \

104 
	`__MAGIC_CASSERT
((
n
) > 0 && (n) < (1U << 22)); \

105 
	`asm
 ("sethi " #n ", %g0"); \

106 } 0)

	)

108 
	#MAGIC_BREAKPOINT
 
	`MAGIC
(0x40000)

	)

114 #ñi‡
deföed
(
__DECC
)

116 #i‡
deföed
(
__Æpha
)

118 
	#MAGIC
(
n
) do { \

119 
	`__MAGIC_CASSERT
(!(
n
)); \

120 
	`asm
 (".long 0x70000000"); \

121 } 0)

	)

129 #ifde‡
_MSC_VER


130 
	#MAGIC
(
n
)

	)

131 
	#MAGIC_BREAKPOINT


	)

132 #¥agm®
mesßge
("MAGIC() macroÇeedsáttention!")

	@include/util/skewer.h

31 #i‚de‡
__UTIL_SKEWER_H


32 
	#__UTIL_SKEWER_H


	)

34 
	~<io°ªam
>

35 
	~<ve˘‹
>

49 
	eskew_ty≥_t
 {

50 
	mSKEW_NONE
 = 0x0,

51 
	mSKEW_NORMAL
 = 0x1,

52 
	mSKEW_DYNAMIC
 = 0x2,

53 
	mSKEW_CHAOTIC
 = 0x4

56 
usög
 
«me•a˚
 
	g°d
;

67 ˛as†
	cskewî_t
 {

69 
	m¥iv©e
:

72 
_¨ó
;

75 
	m_lﬂd
;

78 
	m_lowî
;

79 
	m_uµî
;

83 
	mve˘‹
<> 
	m_öãrvÆ_l
;

84 
	mve˘‹
<> 
	m_öãrvÆ_u
;

88 
	mve˘‹
<> 
	m_n⁄_öãrvÆ_l
;

89 
	mve˘‹
<> 
	m_n⁄_öãrvÆ_u
;

92 
boﬁ
 
	m_is_u£d
;

94 
	mpublic
:

97 
	$skewî_t
(Ë{ 
_is_u£d
 = 
Ál£
; }

100 
	`£t
(
¨ó
, 
lowî
, 
uµî
, 
lﬂd
);

103 
	`˛ór
();

106 
	`ª£t
(
skew_ty≥_t
 
ty≥
);

109 
	`gë_öput
();

112 
boﬁ
 
	`is_u£d
();

115 
	`¥öt_öãrvÆs
();

117 
¥iv©e
:

119 
	`_£t_öãrvÆs
();

121 
	`_add_öãrvÆ
(
öãrvÆ_lowî
, 
öãrvÆ_uµî
);

123 
	}
};

	@include/util/static_hash_map.h

20 #i‚de‡
_STATIC_HASH_MAP_H


21 
	#_STATIC_HASH_MAP_H


	)

23 
	~<sys/ty≥s.h
>

36 
	s°©ic_hash_m≠_s
 {

38 
°©ic_hash_node_s
* 
	mèbÀ_íåõs
;

39 
size_t
 
	mèbÀ_size
;

41 
size_t
 (*
hf
Ë(c⁄° * 
	mkey
);

42 (*
	mcom∑øt‹
Ë(c⁄° * 
	mkey1
, c⁄° * 
	mkey2
);

58 
	s°©ic_hash_node_s
 {

61 
°©ic_hash_node_s
* 
	m¥ev
;

64 
°©ic_hash_node_s
* 
	m√xt
;

67 c⁄° * 
	mkey
;

70 c⁄° * 
	mvÆue
;

82 
°©ic_hash_m≠_s
* 
	t°©ic_hash_m≠_t
;

90 
°©ic_hash_node_s
* 
	t°©ic_hash_node_t
;

102 
°©ic_hash_node_öô
–
°©ic_hash_node_t
 
node
, c⁄° * 
key
, c⁄° * 
vÆue
 );

104 
°©ic_hash_m≠_öô
(
°©ic_hash_m≠_t
 
ht
,

105 
°©ic_hash_node_s
* 
èbÀ_íåõs
,

106 
size_t
 
èbÀ_size
,

107 
	$size_t
 (*
hf
Ë(c⁄° * 
key
),

108 (*
com∑øt‹
Ë(c⁄° * 
key1
, c⁄° * 
key2
) );

110 
	`°©ic_hash_m≠_ö£π
(
°©ic_hash_m≠_t
 
ht
,

111 c⁄° * 
key
,

112 c⁄° * 
vÆue
,

113 
°©ic_hash_node_t
 
node
);

115 
	`°©ic_hash_m≠_föd
(
°©ic_hash_m≠_t
 
ht
,

116 c⁄° * 
key
,

117 ** 
vÆue
,

118 
°©ic_hash_node_t
* 
node
);

120 
	`°©ic_hash_m≠_ªmove
(
°©ic_hash_m≠_t
 
ht
,

121 c⁄° * 
key
,

122 ** 
vÆue
,

123 
°©ic_hash_node_t
* 
node
);

125 
	`°©ic_hash_m≠_cut
(
°©ic_hash_m≠_t
 
ht
, 
°©ic_hash_node_t
 
node
);

	@include/util/static_hash_map_struct.h

19 #i‚de‡
_STATIC_HASH_MAP_STRUCT_H


20 
	#_STATIC_HASH_MAP_STRUCT_H


	)

22 
	~<sys/ty≥s.h
>

	@include/util/static_list.h

21 #i‚de‡
_STATIC_LIST_H


22 
	#_STATIC_LIST_H


	)

24 
	~"utû/°©ic_li°_node.h
"

37 
°©ic_li°_s
* 
	t°©ic_li°_t
;

51 
°©ic_li°_öô
 (
°©ic_li°_t
 
li°
);

56 
°©ic_li°_¥ïíd
 (
°©ic_li°_t
 
li°
, * 
vÆue
, 
°©ic_li°_node_t
 
node
);

57 
°©ic_li°_≠≥nd
 (
°©ic_li°_t
 
li°
, * 
vÆue
, 
°©ic_li°_node_t
 
node
);

62 
°©ic_li°_ªmove_node
 (
°©ic_li°_t
 
li°
, 
°©ic_li°_node_t
 
node
);

63 
°©ic_li°_ªmove_hód
 (
°©ic_li°_t
 
li°
, ** 
ªsu…
, 
°©ic_li°_node_t
* 
node
);

64 
°©ic_li°_ªmove_èû
 (
°©ic_li°_t
 
li°
, ** 
ªsu…
, 
°©ic_li°_node_t
* 
node
);

69 
°©ic_li°_gë_hód
 (
°©ic_li°_t
 
li°
, ** 
ªsu…
);

70 
°©ic_li°_gë_èû
 (
°©ic_li°_t
 
li°
, ** 
ªsu…
);

71 
°©ic_li°_is_em±y
 (
°©ic_li°_t
 
li°
);

76 
°©ic_li°_m≠
 (
°©ic_li°_t
 
li°
, * (*
m≠
Ë(*,*), * 
m≠_°©e
);

77 
°©ic_li°_m≠_ªvî£
 (
°©ic_li°_t
 
li°
, * (*
m≠
Ë(*,*), * 
m≠_°©e
);

78 
°©ic_li°_¥o˚ss
 (
°©ic_li°_t
 
li°
, (*
¥o˚ss
Ë(*,*), * 
¥o˚ssög_°©e
);

79 
	`°©ic_li°_¥o˚ss_ªvî£
(
°©ic_li°_t
 
li°
, (*
¥o˚ss
Ë(*,*), * 
¥o˚ssög_°©e
);

	@include/util/static_list_node.h

24 #i‚de‡
_STATIC_LIST_NODE_H


25 
	#_STATIC_LIST_NODE_H


	)

38 
°©ic_li°_node_s
* 
	t°©ic_li°_node_t
;

45 
°©ic_li°_node_öô_em±y
(
°©ic_li°_node_t
 
node
);

46 
°©ic_li°_node_öô
(
°©ic_li°_node_t
 
node
, * 
∑ylﬂd
);

47 * 
°©ic_li°_node_gë_∑ylﬂd
(
°©ic_li°_node_t
 
node
);

48 
°©ic_li°_node_t
 
°©ic_li°_node_gë_¥ev
(°©ic_li°_node_à
node
);

49 
°©ic_li°_node_t
 
°©ic_li°_node_gë_√xt
(°©ic_li°_node_à
node
);

50 
°©ic_li°_node_£t_∑ylﬂd
(
°©ic_li°_node_t
 
node
, * 
∑ylﬂd
);

51 
°©ic_li°_node_ö£π_a·î
(
°©ic_li°_node_t
 
ö£π_a·î_this
,

52 
°©ic_li°_node_t
 
node_to_ö£π
);

53 
°©ic_li°_node_ö£π_bef‹e
(
°©ic_li°_node_t
 
ö£π_bef‹e_this
,

54 
°©ic_li°_node_t
 
node_to_ö£π
);

55 
°©ic_li°_node_is_sögÀt⁄
(
°©ic_li°_node_t
 
node
);

56 
°©ic_li°_node_cut
(
°©ic_li°_node_t
 
node
);

	@include/util/static_list_node_struct.h

23 #i‚de‡
_STATIC_LIST_NODE_STRUCT_H


24 
	#_STATIC_LIST_NODE_STRUCT_H


	)

39 
	s°©ic_li°_node_s


42 
°©ic_li°_node_s
* 
	m¥ev
;

45 
°©ic_li°_node_s
* 
	m√xt
;

48 * 
	m∑ylﬂd
;

69 
	#STATIC_LIST_NODE_INITIALIZER
(
this
,
∑ylﬂd
Ë{ (this), (this), (∑ylﬂdË}

	)

	@include/util/static_list_struct.h

24 #i‚de‡
_STATIC_LIST_STRUCT_H


25 
	#_STATIC_LIST_STRUCT_H


	)

27 
	~"utû/°©ic_li°_node_°ru˘.h
"

43 
	s°©ic_li°_s


47 
°©ic_li°_node_s
 
	mdummy
;

68 
	#STATIC_LIST_INITIALIZER
(
this
Ë{ 
	`STATIC_LIST_NODE_INITIALIZER
(&—his)->
dummy
,
NULL
Ë}

	)

	@include/util/stl_block_alloc.h

24 #i‚de‡
__STL_BLOCK_ALLOC


25 
	#__STL_BLOCK_ALLOC


	)

27 
	~"block_Æloc.h
"

30 
	gãm∂©e
<
ty≥«me
 
	gT
, 
˛ass
 
	gPoﬁ
=
dy≈oﬁ
, 
size_t
 
	gMaxByãs
=0>

31 ˛as†
	c°l_block_Æloc


33 
public
:

35 
block_poﬁ
<
	tT
,
	tPoﬁ
,
	tMaxByãs
> 
	tpoﬁ_ty≥
;

37 
size_t
 
	tsize_ty≥
;

38 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

40 
T
 
	tvÆue_ty≥
;

41 
T
* 
	tpoöãr
;

42 
T
 c⁄°* 
	tc⁄°_poöãr
;

43 
	mT
& 
	tª„ªn˚
;

44 
T
 c⁄°& 
	tc⁄°_ª„ªn˚
;

47 
	mãm∂©e
<
ty≥«me
 
	mU
>

48 
	sªböd
 { 
	m°l_block_Æloc
<
	tU
,
	tPoﬁ
,
	tMaxByãs
> 
	tŸhî
; };

50 
	$°l_block_Æloc
(Ë{ 
	}
}

52 
	gãm∂©e
<
ty≥«me
 
	gU
,Åy≥«mê
	gP
, 
size_t
 
	gM
>

53 
°l_block_Æloc
(°l_block_Æloc<
U
,
P
,
M
> const& ) { }

57 
size_ty≥
 
	$max_size
(Ëc⁄° {  1; 
	}
}

59 
poöãr
 
Æloˇã
–
size_ty≥
 , 
°d
::
Æloˇt‹
<>::
c⁄°_poöãr
 = 0 )

61  
ªöãΩªt_ˇ°
<
poöãr
>(
_poﬁ
.
acquúe
());

64 
	$dóŒoˇã
–
poöãr
 
block
, 
size_ty≥
 ) 
	$throw
()

66 
_poﬁ
.
	`ªÀa£
(
block
);

67 
	}
}

72 
	$c⁄°ru˘
–
poöãr
 
ñemít
, 
T
 c⁄°& 
¨g
 )

74 
	`√w
–
ñemít
 ) 
	`T
–
¨g
 );

75 
	}
}

80 
	$de°roy
–
poöãr
 
ñemít
 )

82 
ñemít
->~
	`T
();

83 
	}
}

86 
poöãr
 
	$addªss
–
ª„ªn˚
 
ñemít
 ) const

88  &
ñemít
;

89 
	}
}

92 
c⁄°_poöãr
 
	$addªss
–
c⁄°_ª„ªn˚
 
ñemít
 ) const

94  &
ñemít
;

95 
	}
}

98 
poﬁ_ty≥
 
	g_poﬁ
;

101 
	~<m≠
>

102 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
, 
˛ass
 
	gTøôs
=
°d
::
Àss
<
Key
> >

103 
	sm≠__block_Æloc
 {

104 
°d
::
	tm≠
<
	tKey
, 
	tVÆue
, 
	tTøôs
, 
	t°l_block_Æloc
<
	t°d
::
	t∑ú
<Key, VÆue> > > 
	tTy≥
;

106 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
, 
˛ass
 
	gTøôs
=
°d
::
Àss
<
Key
> >

107 
	smu…im≠__block_Æloc
 {

108 
°d
::
	tmu…im≠
<
	tKey
, 
	tVÆue
, 
	tTøôs
, 
	t°l_block_Æloc
<
	t°d
::
	t∑ú
<Key, VÆue> > > 
	tTy≥
;

111 
	~<li°
>

112 
	gãm∂©e
<
ty≥«me
 
	gVÆue
>

113 
	sli°__block_Æloc
 {

114 
	m°d
::
	tli°
<
	tVÆue
, 
	t°l_block_Æloc
<VÆue> > 
	tTy≥
;

117 
	~<£t
>

118 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gTøôs
 = 
°d
::
Àss
<
VÆue
> >

119 
	s£t__block_Æloc
 {

120 
°d
::
	t£t
<
	tVÆue
, 
	tTøôs
, 
	t°l_block_Æloc
<VÆue> > 
	tTy≥
;

123 
	~<ve˘‹
>

124 
	gãm∂©e
<
ty≥«me
 
	gVÆue
>

125 
	sve˘‹__block_Æloc
 {

126 
	m°d
::
	tve˘‹
<
	tVÆue
, 
	t°l_block_Æloc
<VÆue> > 
	tTy≥
;

	@include/util/stl_pool.h

33 #i‚de‡
__UTIL_STL_POOL


34 
	#__UTIL_STL_POOL


	)

36 
	~<io°ªam
>

37 
	~"utû/gu¨d.h
"

40 ˛as†
	cPoﬁ


42 
	mpublic
:

44 
Poﬁ
–
size_t
 
gønuœrôy
, size_à
size
 );

47 ~
Poﬁ
();

50 
size_t
 
	$GëGønuœrôy
(Ëc⁄° {  
m_gønuœrôy
; }

53 
size_t
 
	$GëSize
(Ëc⁄° {  
m_size
; 
	}
}

56 
size_t
 
	$GëU£d
(Ëc⁄° {  
m_u£d
; 
	}
}

59 
size_t
 
	$GëOvîÊow
(Ëc⁄° {  
m_ovîÊow
; 
	}
}

63 * 
AŒoˇã
();

66 
DóŒoˇã
–* 
block
 );

70 
	gãm∂©e
<
ty≥«me
 
	gT
>

71 
T
* 
	$C⁄°ru˘
()

73 
	`as£π
––
T
 ) <
m_gønuœrôy
 );

74 
T
* 
block
 = 
ªöãΩªt_ˇ°
<T*>–
	`AŒoˇã
() );

75  
	`√w
–
block
 ) 
T
;

76 
	}
}

79 
	gãm∂©e
<
ty≥«me
 
	gT
>

80 
	$De°roy
–
T
* 
ö°™˚
 )

82 
	`as£π
––
T
 ) <
m_gønuœrôy
 );

83 
ö°™˚
->~
	`T
();

84 
	`DóŒoˇã
–
ö°™˚
 );

85 
	}
}

87 
	g¥iv©e
:

89 
boﬁ
 
	$IsFromPoﬁ
–c⁄°* 
ö°™˚
 ) const

91 c⁄°* 
block
 = 
ªöãΩªt_ˇ°
<c⁄°*>–
ö°™˚
 );

92  
m_°‹age
.
	`gë
(Ë<
block
 && block < ( m_°‹age.gë(Ë+ 
m_size
*
m_gønuœrôy
 );

93 
	}
}

95 
size_t
 
	gm_gønuœrôy
;

96 
size_t
 
	gm_size
;

97 
size_t
 vﬁ©ûê
	gm_u£d
;

98 
size_t
 vﬁ©ûê
	gm_ovîÊow
;

100 
	g¨øy_gu¨d_t
<> 
	gm_°‹age
;

101 
	g¨øy_gu¨d_t
<*> 
	gm_¶Ÿs
;

	@include/util/stl_pooled_alloc.h

34 #i‚de‡
__UTIL_STL_POOLED_ALLOC


35 
	#__UTIL_STL_POOLED_ALLOC


	)

38 
	~"°l_poﬁ.h
"

39 
	~<ˇs£π
>

40 
	~<ve˘‹
>

41 
	~<li°
>

42 
	~<£t
>

43 
	~<m≠
>

47 
	gãm∂©e
<
ty≥«me
 
	gT
>

48 ˛as†
	cPoﬁedAŒoˇt‹


50 
	mpublic
:

51 
size_t
 
	tsize_ty≥
;

52 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

54 
T
 
	tvÆue_ty≥
;

55 
T
* 
	tpoöãr
;

56 
T
 c⁄°* 
	tc⁄°_poöãr
;

57 
	mT
& 
	tª„ªn˚
;

58 
T
 c⁄°& 
	tc⁄°_ª„ªn˚
;

61 
	mãm∂©e
<
ty≥«me
 
	mU
>

62 
	sªböd
 { 
	mPoﬁedAŒoˇt‹
<
	tU
> 
	tŸhî
; };

67 
	$PoﬁedAŒoˇt‹
–
Poﬁ
* 
poﬁ
 = 0 ) : 
	$m_poﬁ
–
poﬁ
 )

69 
	`as£π
–!
m_poﬁ
 || –
T
 ) <m_poﬁ->
	`GëGønuœrôy
() );

70 
	}
}

75 
	gãm∂©e
<
ty≥«me
 
	gU
>

76 
PoﬁedAŒoˇt‹
–PoﬁedAŒoˇt‹<
U
> c⁄°& 
¨g
 ) : 
	$m_poﬁ
–
¨g
.
m_poﬁ
 )

78 
	`as£π
–!
m_poﬁ
 || –
T
 ) <m_poﬁ->
	`GëGønuœrôy
() );

79 
	}
}

82 
size_ty≥
 
	$max_size
(Ëc⁄° {  0xffffffff; 
	}
}

87 
poöãr
 
Æloˇã
–
size_ty≥
 
cou¡
, 
°d
::
Æloˇt‹
<>::
c⁄°_poöãr
 = 0 ) const

89 if–
cou¡
 =1 && 
m_poﬁ
 )

91  
ªöãΩªt_ˇ°
<
T
*>–
m_poﬁ
->
AŒoˇã
() );

95  
	gªöãΩªt_ˇ°
<
	gT
*>–
√w
 [ 
cou¡
*–
T
 ) ] );

104 
	$dóŒoˇã
–
poöãr
 
block
, 
size_ty≥
 
cou¡
 ) c⁄° 
	$throw
()

106 i‡(!
block
) ;

108 
	`as£π
–
block
 && "nullÖointerárgument" );

109 if–
cou¡
 =1 && 
m_poﬁ
 )

111 
m_poﬁ
->
	`DóŒoˇã
–
block
 );

115 
dñëe
[] 
ªöãΩªt_ˇ°
<*>–
block
 );

117 
	}
}

122 
	$c⁄°ru˘
–
poöãr
 
ñemít
, 
T
 c⁄°& 
¨g
 )

124 
	`√w
–
ñemít
 ) 
	`T
–
¨g
 );

125 
	}
}

130 
	$de°roy
–
poöãr
 
ñemít
 )

132 
ñemít
->~
	`T
();

134 
	}
}

137 
poöãr
 
	$addªss
–
ª„ªn˚
 
ñemít
 ) const

139  &
ñemít
;

140 
	}
}

143 
c⁄°_poöãr
 
	$addªss
–
c⁄°_ª„ªn˚
 
ñemít
 ) const

145  &
ñemít
;

146 
	}
}

149 
Poﬁ
* 
	gm_poﬁ
;

153 
	gãm∂©e
<>

154 
˛ass
 
	gPoﬁedAŒoˇt‹
<>

156 
	gpublic
:

157 
size_t
 
	tsize_ty≥
;

158 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

160 
	tvÆue_ty≥
;

161 * 
	tpoöãr
;

162 c⁄°* 
	tc⁄°_poöãr
;

165 
	gãm∂©e
<
ty≥«me
 
	gU
>

166 
	sªböd
 { 
	gPoﬁedAŒoˇt‹
<
	tU
> 
	tŸhî
; };

171 
PoﬁedAŒoˇt‹
(Ë: 
m_poﬁ
( 0 ) {}

174 
PoﬁedAŒoˇt‹
–
Poﬁ
* 
poﬁ
 ) : 
m_poﬁ
(Öool ) {}

177 
Poﬁ
* 
m_poﬁ
;

182 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

183 
boﬁ
 
	g›î©‹
==–
PoﬁedAŒoˇt‹
<
T
> c⁄°& 
À·
, 
	gPoﬁedAŒoˇt‹
<
	gU
> c⁄°& 
	gright
 )

185  
	gÀ·
.
	gm_poﬁ
 =
right
.
m_poﬁ
;

190 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

191 
boﬁ
 
	g›î©‹
!=–
PoﬁedAŒoˇt‹
<
T
> c⁄°& 
À·
, 
	gPoﬁedAŒoˇt‹
<
	gU
> c⁄°& 
	gright
 )

193  
	gÀ·
.
	gm_poﬁ
 !
right
.
m_poﬁ
;

202 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
, 
˛ass
 
	gTøôs
 = 
°d
::
Àss
<
Key
> >

203 
	sPoﬁedM≠


205 
°d
::
	tm≠
<
	tKey
, 
	tVÆue
, 
	tTøôs
, 
	tPoﬁedAŒoˇt‹
<
	t°d
::
	t∑ú
<Key, VÆue> > > 
	tTy≥
;

210 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
, 
˛ass
 
	gTøôs
 = 
°d
::
Àss
<
Key
> >

211 
	sPoﬁedMu…iM≠


213 
°d
::
	tmu…im≠
<
	tKey
, 
	tVÆue
, 
	tTøôs
, 
	tPoﬁedAŒoˇt‹
<
	t°d
::
	t∑ú
<Key, VÆue> > > 
	tTy≥
;

218 
	gãm∂©e
<
ty≥«me
 
	gVÆue
>

219 
	sPoﬁedLi°


221 
	m°d
::
	tli°
<
	tVÆue
, 
	tPoﬁedAŒoˇt‹
<VÆue> > 
	tTy≥
;

225 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gTøôs
 = 
°d
::
Àss
<
VÆue
> >

226 
	sPoﬁedSë


228 
°d
::
	t£t
<
	tVÆue
, 
	tTøôs
, 
	tPoﬁedAŒoˇt‹
<VÆue> > 
	tTy≥
;

232 
	gãm∂©e
<
ty≥«me
 
	gVÆue
>

233 
	sPoﬁedVec


235 
	m°d
::
	tve˘‹
<
	tVÆue
, 
	tPoﬁedAŒoˇt‹
<VÆue> > 
	tTy≥
;

	@include/util/stopwatch.h

24 #i‚de‡
__UTIL_STOPWATCH_H


25 
	#__UTIL_STOPWATCH_H


	)

27 
	~<sys/time.h
>

34 ˛as†
	c°›w©ch_t
 {

35 
	m¥iv©e
:

36 
timevÆ
 
tv
;

37 
	mm¨k
;

38 
	mpublic
:

39 
	$°›w©ch_t
() {

40 
	`ª£t
();

42 
	$time_us
() {

43 
ﬁd_m¨k
 = 
m¨k
;

44 
	`ª£t
();

45  
m¨k
 - 
ﬁd_m¨k
;

46 
	}
}

47 
	$time_ms
() {

48  (()(
	`time_us
()*1e-3));

49 
	}
}

50 
	$time
() {

51  (()(
	`time_us
()*1e-6));

52 
	}
}

53 
	$now
() {

54 
	`gëtimeofday
(&
tv
, 
NULL
);

55  
tv
.
tv_u£c
 +Åv.
tv_£c
*1000000ll;

56 
	}
}

57 
	$ª£t
() {

58 
m¨k
 = 
	`now
();

59 
	}
}

	@include/util/store_string.h

31 #i‚de‡
__UTIL_STORE_STRING_H


32 
	#__UTIL_STORE_STRING_H


	)

34 
	~"k_deföes.h
"

36 
	#FILL_STRING
(
de°
, 
§c
Ë
	`°∫˝y
(de°, src, (de°))

	)

38 
°‹e_°rög
(* 
de°
, * 
§c
);

40 
°‹e_°rög
(* 
de°
, c⁄° * 
§c
);

	@include/util/sunos_procstat.h

34 #i‚de‡
__UTIL_SUNOS_PROCSTAT_H


35 
	#__UTIL_SUNOS_PROCSTAT_H


	)

37 
	~"utû/¥oc°©.h
"

38 
	~"utû/¥cöfo.h
"

40 
	~<k°©.h
>

42 
	sk°©_íåy


44 
k°©_t
* 
	mk•
;

46 
	moff£t
;

47 
˝u_mósuªmít
 
	mmósuªd
[2];

52 ˛as†
	csunos_¥ocm⁄ô‹_t
 : 
public
 
¥ocm⁄ô‹_t


54 
¥iv©e
:

56 
¥o˚ssöfo_t
 
_¥cöfo
;

58 
k°©_˘l_t
* 
	m_pkc
;

60 
	m°d
::
ve˘‹
<
k°©_íåy
> 
_íåõs
;

61 
	m_íåõs_sz
;

62 
boﬁ
 
	m_fú°_time
;

63 
	m_œ°_mósuªmít
;

64 
	m_√w_mósuªmít
;

65 
˝u_mósuªmít
 
	m_tŸÆs
;

66 
˝u_mósuªmít
 
	m_m
;

67 
	m_öu£
;

68 
k°©_íåy
* 
	m_k£
;

69 
	m_kid
;

70 
k°©_«med_t
* 
	m_kn
;

73 
	m¥Ÿe˘ed
:

74 
_£tup
(c⁄° 
öãrvÆ_£c
);

76 
	mpublic
:

78 
sunos_¥ocm⁄ô‹_t
(
sh‹e
::
Sh‹eEnv
* 
ív
,

79 c⁄° 
öãrvÆ_£c
 = 1);

80 ~
sunos_¥ocm⁄ô‹_t
();

83 
w_rc_t
 
ˇ£_£tup
();

84 
w_rc_t
 
ˇ£_tick
();

85 
w_rc_t
 
ˇ£_ª£t
();

88 
¥öt_°©s
();

92 
°©_ª£t
();

94 
gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
=
åue
);

95 
¥öt_avg_ußge
();

96 
¥öt_ext_°©s
();

97 
ul⁄g_t
 
ioch¨s
();

98 
uöt
 
gë_num_of_˝us
();

101 
˝u_lﬂd_vÆues_t
 
gë_lﬂd
();

	@include/util/sync.h

24 #i‚de‡
__UTIL_SYNC_H


25 
	#__UTIL_SYNC_H


	)

27 
	~"utû/thªad.h
"

31 
	sdebug_muãx_t
 {

32 
±hªad_muãx_t
 
	m_lock
;

33 
±hªad_t
 
	m_œ°_ow√r_tid
;

34 
debug_muãx_t
(
±hªad_muãx_t
 c⁄° &
lock
)

35 : 
_lock
(
lock
), 
_œ°_ow√r_tid
(0)

38 
›î©‹
 
	m±hªad_muãx_t
&() {

39  
	m_lock
;

49 
	s¸ôiˇl_£˘i⁄_t
 {

51 
±hªad_muãx_t
* 
	m_muãx
;

53 
¸ôiˇl_£˘i⁄_t
(
±hªad_muãx_t
 &
muãx
)

54 : 
_muãx
(&
muãx
)

56 
thªad_muãx_lock
(*
_muãx
);

59 
¸ôiˇl_£˘i⁄_t
(
debug_muãx_t
 &
muãx
)

60 : 
_muãx
(&
muãx
.
_lock
)

62 
thªad_muãx_lock
(*
_muãx
);

63 
	mmuãx
.
	m_œ°_ow√r_tid
 = 
±hªad_£lf
();

67 
íãr
(
±hªad_muãx_t
 &
muãx
) {

68 
exô
();

69 
	m_muãx
 = &
muãx
;

70 
thªad_muãx_lock
(*
_muãx
);

73 
íãr
(
debug_muãx_t
 &
muãx
) {

74 
exô
();

75 
	m_muãx
 = &
muãx
.
_lock
;

76 
thªad_muãx_lock
(*
_muãx
);

77 
	mmuãx
.
	m_œ°_ow√r_tid
 = 
±hªad_£lf
();

80 
exô
() {

81 if(
	m_muãx
) {

82 
thªad_muãx_u∆ock
(*
_muãx
);

83 
	m_muãx
 = 
NULL
;

87 ~
¸ôiˇl_£˘i⁄_t
() {

88 
exô
();

91 
	m¥iv©e
:

92 
¸ôiˇl_£˘i⁄_t
(critical_section_t const &);

93 
	m¸ôiˇl_£˘i⁄_t
 &
	m›î©‹
 =(
¸ôiˇl_£˘i⁄_t
 const &);

104 
	snŸify_t
 {

106 vﬁ©ûê
boﬁ
 
	m_nŸifõd
;

107 vﬁ©ûê
boﬁ
 
	m_ˇn˚Œed
;

108 
±hªad_muãx_t
 
	m_lock
;

109 
±hªad_c⁄d_t
 
	m_nŸify
;

111 
nŸify_t
()

112 : 
_nŸifõd
(
Ál£
),

113 
_ˇn˚Œed
(
Ál£
),

114 
_lock
(
thªad_muãx_¸óã
()),

115 
_nŸify
(
thªad_c⁄d_¸óã
())

128 
waô
() {

129 
¸ôiˇl_£˘i⁄_t
 
cs
(
_lock
);

130  
waô_hﬁdög_lock
();

139 
waô_hﬁdög_lock
() {

140 !
	m_nŸifõd
 && !
	m_ˇn˚Œed
)

141 
thªad_c⁄d_waô
(
_nŸify
, 
_lock
);

143 
boﬁ
 
	mªsu…
 = 
_ˇn˚Œed
;

144 
	m_nŸifõd
 = 
_ˇn˚Œed
 = 
Ál£
;

145  
	mªsu…
;

154 
nŸify
() {

155 
¸ôiˇl_£˘i⁄_t
 
cs
(
_lock
);

156 
nŸify_hﬁdög_lock
();

168 
nŸify_hﬁdög_lock
() {

169 
sig«l
(
_nŸifõd
);

172 
ˇn˚l
() {

173 
¸ôiˇl_£˘i⁄_t
 
cs
(
_lock
);

174 
ˇn˚l_hﬁdög_lock
();

177 
ˇn˚l_hﬁdög_lock
() {

178 
sig«l
(
_ˇn˚Œed
);

181 
	m¥Ÿe˘ed
:

183 
sig«l
(vﬁ©ûê
boﬁ
 &
vÆ
) {

184 
vÆ
 = 
åue
;

185 
thªad_c⁄d_sig«l
(
_nŸify
);

	@include/util/tassert.h

24 #i‚de‡
__UTIL_TASSERT_H


25 
	#__UTIL_TASSERT_H


	)

27 
	~<c°dlib
>

28 
	~"utû/åa˚.h
"

33 
	#TASSERT
(
c⁄d
) { \

34 i‡(!(
c⁄d
)) { \

35 
	`TRACE
(
TRACE_ALWAYS
, \

38 
	`ab‹t
(); \

40 }

	)

	@include/util/tcp.h

32 #i‚de‡
__UTIL_TCP_H


33 
	#__UTIL_TCP_H


	)

35 
›í_li°ífd
(
p‹t
);

36 
›í_˛õ¡fd
(c⁄° * 
ho°«me
, 
p‹t
);

	@include/util/thread.h

24 #i‚de‡
__THREAD_H


25 
	#__THREAD_H


	)

29 
	~<±hªad.h
>

30 
	~<c°dio
>

32 
	~"k_deföes.h
"

34 
	~<˚ºno
>

35 
	~<ˇs£π
>

36 
	~<fun˘i⁄Æ
>

37 
	~<c°d¨g
>

38 
	~<°döt.h
>

39 
	~<time.h
>

41 
	~"utû/c_°r.h
"

42 
	~"utû/ex˚±i⁄.h
"

43 
	~"utû/øndgí.h
"

46 
DEFINE_EXCEPTION
(
ThªadEx˚±i⁄
);

49 #ifde‡
__•a¸v9


51 
	#TRY_TO_BIND
(
˝u
,
boundÊag
) \

52 i‡(
	`¥o˚ss‹_böd
(
P_LWPID
, 
P_MYID
, 
˝u
, 
NULL
)) { \

53 
	`TRACE
–
TRACE_CPU_BINDING
, "C™nŸ bödÅÿ¥o˚ss‹ (%d)\n", 
˝u
); \

54 
boundÊag
 = 
Ál£
; } \

56 
	`TRACE
–
TRACE_CPU_BINDING
, "BödedÅÿ¥o˚ss‹ (%d)\n", 
˝u
); \

57 
boundÊag
 = 
åue
; }

	)

62 
	#TRY_TO_BIND
(
˝u
,
boundÊag
) \

63 
	`TRACE
–
TRACE_DEBUG
, "Should böd mêtÿ(%d)\n", 
_¥s_id
);

	)

67 #i‚de‡
__GCC


71 
±hªad_muãx_t
 
thªad_muãx_¸óã
(c⁄° 
±hªad_muãx©å_t
* 
©å
=
NULL
);

72 
thªad_muãx_lock
(
±hªad_muãx_t
 &
muãx
);

73 
thªad_muãx_u∆ock
(
±hªad_muãx_t
 &
muãx
);

74 
thªad_muãx_de°roy
(
±hªad_muãx_t
 &
muãx
);

77 
±hªad_c⁄d_t
 
thªad_c⁄d_¸óã
(c⁄° 
±hªad_c⁄d©å_t
* 
©å
=
NULL
);

78 
thªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 &
c⁄d
);

79 
thªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 &
c⁄d
);

80 
thªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 &
c⁄d
);

81 
thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
);

82 
boﬁ
 
thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
,

83 
time•ec
 &
timeout
);

84 
boﬁ
 
thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
,

85 
timeout_ms
);

87 
	gãm∂©e
 <
˛ass
 
	gT
>

88 
T
* 
	$thªad_joö
(
±hªad_t
 
tid
)

93 *
p
;

94 
T
 *
v
;

95 } 
u
;

97 if(
	`±hªad_joö
(
tid
, &
u
.
p
))

98 
	`THROW
(
ThªadEx˚±i⁄
);

100  
u
.
v
;

101 
	}
}

117 
	sthªad_poﬁ


119 
±hªad_muãx_t
 
	m_lock
;

120 
±hªad_c⁄d_t
 
	m_c⁄d
;

121 
	m_max_a˘ive
;

122 
	m_a˘ive
;

124 
thªad_poﬁ
(
max_a˘ive
)

125 : 
_lock
(
thªad_muãx_¸óã
()),

126 
_c⁄d
(
thªad_c⁄d_¸óã
()),

127 
_max_a˘ive
(
max_a˘ive
), 
_a˘ive
(0)

131 
°¨t
();

132 
°›
();

140 
	#USE_SMTHREAD_AS_BASE


	)

142 #ifde‡
USE_SMTHREAD_AS_BASE


143 
	~"sm_vas.h
"

159 #ifde‡
USE_SMTHREAD_AS_BASE


160 
˛ass
 
	gthªad_t
 : 
public
 
smthªad_t


162 
˛ass
 
thªad_t


165 
¥iv©e
:

166 
c_°r
 
_thªad_«me
;

167 
øndgí_t
 
	g_øndgí
;

169 #ifde‡
USE_SMTHREAD_AS_BASE


170 
run
();

171 
thªad_poﬁ
* 
	g_µoﬁ
;

172 
£tuµoﬁ
(
thªad_poﬁ
* 
≠oﬁ
Ë{ 
	g_µoﬁ
 =ápool; }

173 
£tu±hr
();

176 
	g¥Ÿe˘ed
:

177 
boﬁ
 
_dñëe_me
;

179 
	gpublic
:

186 
vútuÆ
 
w‹k
()=0;

188 
boﬁ
 
dñëe_me
(Ë{  
	g_dñëe_me
; }

190 
c_°r
 
thªad_«me
() {

191  
	g_thªad_«me
;

198 
øndgí_t
* 
øndgí
() {

199  &
	g_øndgí
;

206 
ønd
() {

207  
	g_øndgí
.
ønd
();

217 
ønd
(
n
) {

218  
	g_øndgí
.
ønd
(
n
);

221 
	gvútuÆ
 ~
thªad_t
() { }

224 
	g¥Ÿe˘ed
:

225 
thªad_t
(c⁄° 
c_°r
 &
«me
);

230 #ifde‡
USE_SMTHREAD_AS_BASE


231 
waô_f‹_°hªad_˛õ¡s
(
°hªad_t
** 
thªads
, 
num_thªad_ids
);

241 
	gãm∂©e
 <
˛ass
 
	gCœss
, cœs†
	gFun˘‹
>

242 ˛as†
	cmembî_func_thªad_t
 : 
public
 
thªad_t
 {

243 
Cœss
 *
_ö°™˚
;

244 
Fun˘‹
 
	m_func
;

245 
	mpublic
:

246 
	$membî_func_thªad_t
(
Cœss
 *
ö°™˚
, 
Fun˘‹
 
func
, c⁄° 
c_°r
 &
thªad_«me
)

247 : 
	`thªad_t
(
thªad_«me
),

248 
	`_ö°™˚
(
ö°™˚
),

249 
	$_func
(
func
)

253 
vútuÆ
 
	$w‹k
() {

254 
	`_func
(
_ö°™˚
);

255 
	}
}

266 
	gãm∂©e
 <
˛ass
 
	gRëu∫
, cœs†
	gCœss
>

267 
thªad_t
* 
membî_func_thªad
(
Cœss
* 
ö°™˚
,

268 
Rëu∫
 (
Cœss
::*
mem_func
)(),

269 c⁄° 
c_°r
& 
thªad_«me
)

271 
	g°d
::
	tmem_fun_t
<
	tRëu∫
, 
	tCœss
> 
	tFun˘‹
;

272  
√w
 
	gmembî_func_thªad_t
<
	gCœss
, 
	gFun˘‹
>(
	gö°™˚
,

273 
Fun˘‹
(
mem_func
),

274 
	gthªad_«me
);

281 
thªad_öô
();

282 
thªad_t
* 
thªad_gë_£lf
();

283 
±hªad_t
 
thªad_¸óã
(
thªad_t
* 
t
, 
thªad_poﬁ
* 
p
=
NULL
);

286 
	gãm∂©e
<
ty≥«me
 
	gT
>

287 
	sthªad_loˇl
 {

288 
±hªad_key_t
 
	m_key
;

296 
	mãm∂©e
<
˛ass
 
	mDe°ru˘‹
>

297 
thªad_loˇl
(
De°ru˘‹
 
d
) {

298 
±hªad_key_¸óã
(&
_key
, 
d
);

300 
thªad_loˇl
() {

301 
±hªad_key_¸óã
(&
_key
, 
NULL
);

303 ~
thªad_loˇl
() {

304 
±hªad_key_dñëe
(
_key
);

307 
T
* 
gë
() {

308  
	mªöãΩªt_ˇ°
<
	mT
*>(
±hªad_gë•ecific
(
_key
));

310 
£t
(
T
* 
vÆ
) {

311 
	mªsu…
 = 
±hªad_£t•ecific
(
_key
, 
vÆ
);

312 
THROW_IF
(
ThªadEx˚±i⁄
, 
ªsu…
);

316 
	mthªad_loˇl
 &
	m›î©‹
=(
T
* 
vÆ
) {

317 
£t
(
vÆ
);

318  *
	mthis
;

320 
›î©‹
 
	mT
*() {

321  
gë
();

325 
__thªad
 
thªad_poﬁ
* 
THREAD_POOL
;

	@include/util/thread_local.h

24 #i‚de‡
__THREAD_LOCAL_H


25 
	#__THREAD_LOCAL_H


	)

28 
	sthªad_loˇl_ba£
 {

29 (*
	mdñëî
)(*);

31 
	m¥iv©e
:

32 
ªgi°î_obje˘
(* 
±r
, 
dñëî
 
d
);

36 
	gãm∂©e
<
˛ass
 
	gT
>

37 ˛as†
	cthªad_loˇl
 : 
thªad_loˇl_ba£
 {

38 
public
:

43 
	sc⁄°ru˘‹
 {

44 
vútuÆ
 
T
* 
c⁄°ru˘
()=0;

45 
	mvútuÆ
 ~
c⁄°ru˘‹
() { }

48 
	gc⁄°ru˘‹0
 : 
c⁄°ru˘‹
 {

49 
vútuÆ
 
T
* 
c⁄°ru˘
(Ë{  
√w
 T; }

52 
	gãm∂©e
<
˛ass
 
	gT1
>

53 
	gc⁄°ru˘‹1
 : 
c⁄°ru˘‹
 {

54 
T1
 
_p1
;

55 
c⁄°ru˘‹1
(
T1
 
p1
Ë: 
_p1
(p1) { }

56 
vútuÆ
 
T
* 
c⁄°ru˘
(Ë{  
√w
 T(
_p1
); }

58 
	gãm∂©e
<
˛ass
 
	gT1
, cœs†
	gT2
>

59 
	gc⁄°ru˘‹2
 : 
c⁄°ru˘‹
 {

60 
T1
 
_p1
;

61 
T2
 
	g_p2
;

62 
c⁄°ru˘‹2
(
T1
 
p1
, 
T2
 
p2
Ë: 
_p1
’1), 
_p2
(p2) { }

63 
vútuÆ
 
T
* 
c⁄°ru˘
(Ë{  
√w
 T(
_p1
, 
_p2
); }

65 
	gãm∂©e
<
˛ass
 
	gT1
, cœs†
	gT2
, cœs†
	gT3
>

66 
	gc⁄°ru˘‹3
 : 
c⁄°ru˘‹
 {

67 
T1
 
_p1
;

68 
T2
 
	g_p2
;

69 
T3
 
	g_p3
;

70 
c⁄°ru˘‹3
(
T1
 
p1
, 
T2
 
p2
, 
T3
 
p3
Ë: 
_p1
’1), 
_p2
’2), 
_p3
(p3) { }

71 
vútuÆ
 
T
* 
c⁄°ru˘
(Ë{  
√w
 T(
_p1
, 
_p2
, 
_p3
); }

75 
	$dñëe_±r
(* 
±r
Ë{ 
	`dñëe
 (
T
*Ë±r; 
	}
}

77 
c⁄°ru˘‹
* 
	g_c
;

80 
	g›î©‹
=(
thªad_loˇl
 &
Ÿhî
);

81 
thªad_loˇl
—hªad_loˇ»&
Ÿhî
);

83 
	gpublic
:

108 
	$thªad_loˇl
(Ë: 
	`_c
(
√w
 
c⁄°ru˘‹0
<
T
>Ë{ 
	}
}

110 
ãm∂©e
<
˛ass
 
T1
>

111 
	$thªad_loˇl
(
T1
 
p1
Ë: 
	`_c
(
√w
 
c⁄°ru˘‹1
<
T
, T1>’1)Ë{ 
	}
}

113 
	gãm∂©e
<
˛ass
 
	gT1
, cœs†
	gT2
>

114 
	$thªad_loˇl
(
T1
 
p1
, 
T2
 
p2
Ë: 
	`_c
(
√w
 
c⁄°ru˘‹2
<
T
, T1, T2>’1,Ö2)Ë{ 
	}
}

116 
	gãm∂©e
<
˛ass
 
	gT1
, cœs†
	gT2
, cœs†
	gT3
>

117 
	$thªad_loˇl
(
T1
 
p1
, 
T2
 
p2
, 
T3
 
p3
Ë: 
	`_c
(
√w
 
c⁄°ru˘‹3
<
T
, T1, T2, T3>’1,Ö2,Ö3)Ë{ 
	}
}

123 
T
* 
	$gë
() {

125 
__thªad
 
T
* 
_és
 = 
NULL
;

126 if(
_és
)

127  
_és
;

129 
T
* 
±r
 = 
_c
->
	`c⁄°ru˘
();

130 
	`ªgi°î_obje˘
(
±r
, &
dñëe_±r
);

131  
_és
 = 
±r
;

132 
	}
}

133 
	gT
 &
	g›î©‹
=(
T
 c⁄° &
Ÿhî
Ë{  *
gë
() = other; }

134 
›î©‹
 
	gT
&(Ë{  *
gë
(); }

	@include/util/time_util.h

31 #i‚de‡
__TIME_UTIL_H


32 
	#__TIME_UTIL_H


	)

34 
	~<time.h
>

36 
	~"k_deföes.h
"

38 
	~<˘y≥.h
>

43 
d©ï¨t
(c⁄°* 
°r
, c⁄° 
time_t
 *
±
);

44 
time_t
 
°r_to_timë
(c⁄°* 
°r
);

45 
timë_to_°r
(* 
d°
, 
time_t
 
time
);

56 
time_t
 
time_add_day
—ime_à
time
, 
days
);

57 
time_t
 
time_add_wìk
—ime_à
time
, 
wìks
);

58 
time_t
 
time_add_m⁄th
—ime_à
time
, 
m⁄ths
);

59 
time_t
 
time_add_yór
—ime_à
time
, 
yórs
);

62 
time_t
 
time_day_begö
—ime_à
t
);

63 
time_t
 
time_day_íd
—ime_à
t
);

	@include/util/tmpfile.h

32 #i‚de‡
__UTIL_TMPFILE_H


33 
	#__UTIL_TMPFILE_H


	)

35 
	~<c°dio
>

36 
	~"utû/c_°r.h
"

38 
FILE
* 
¸óã_tmp_fûe
(
c_°r
 &
«me
, c⁄° c_°∏&
¥efix
);

	@include/util/topinfo.h

38 #i‚de‡
__UTIL_TOPINFO_H


39 
	#__UTIL_TOPINFO_H


	)

42 
	~<sys/ty≥s.h
>

43 
	~<sys/time.h
>

44 
	~<uni°d.h
>

45 
	~<î∫o.h
>

46 
	~<m©h.h
>

48 
	~"utû/°›w©ch.h
"

49 
	~"utû/¥oc°©.h
"

51 
	~<io°ªam
>

52 
	~<ve˘‹
>

63 
	~<glibt›.h
>

64 
	~<glibt›/˝u.h
>

65 
	~<glibt›/mem.h
>

66 
	~<glibt›/¥o˛i°.h
>

67 
	~<glibt›/fsußge.h
>

68 
	~<glibt›/mou¡li°.h
>

70 
usög
 
«me•a˚
 
	g°d
;

73 
	st›öfo_t


75 
	m¥iv©e
:

77 
glibt›
* 
_c⁄f
;

79 
glibt›_˝u
 
	m_˝u
;

80 
glibt›_mem
 
	m_mem
;

81 
glibt›_¥o˛i°
 
	m_¥o˛i°
;

83 
glibt›_˝u
 
	m_ﬁd_˝u
;

84 
glibt›_mem
 
	m_ﬁd_mem
;

85 
glibt›_¥o˛i°
 
	m_ﬁd_¥o˛i°
;

87 
glibt›_mou¡li°
 
	m_mou¡_li°
;

88 
glibt›_mou¡íåy
* 
	m_mou¡_íåõs
;

91 
uöt
 
	m_ªg_fs
;

92 
	mve˘‹
<
	m°rög
> 
	m_v_ªg_mou¡
;

93 
	mve˘‹
<
	mglibt›_fsußge
> 
	m_v_fs
;

94 
	mve˘‹
<
	mglibt›_fsußge
> 
	m_v_ﬁd_fs
;

96 
	mve˘‹
<
	t°rög
>::
	tôî©‹
 
	tmou¡_ô
;

97 
	mve˘‹
<
	tglibt›_fsußge
>::
	tôî©‹
 
	tfsußge_ô
;

99 
	mpublic
:

101 
t›öfo_t
();

102 ~
t›öfo_t
();

104 
¥öt_°©s
();

107 
upd©e_˝u
();

108 
gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
=
åue
);

109 
¥öt_avg_ußge
();

110 
uöt
 
gë_num_of_˝us
();

112 
˝u_lﬂd_vÆues_t
 
gë_lﬂd
();

116 
upd©e_mem
();

117 
¥öt_mem
();

120 
upd©e_¥o˛i°
();

121 
¥öt_¥o˛i°
();

124 
ªgi°î_fs
(c⁄° 
°rög
& 
mou¡∑th
);

125 
upd©e_fs
();

126 
¥öt_fs
(c⁄° 
dñay
);

128 
ul⁄g_t
 
ioch¨s
();

131 
ª£t
();

	@include/util/trace.h

31 #i‚de‡
__UTIL_TRACE_H


32 
	#__UTIL_TRACE_H


	)

34 
	~<c°d¨g
>

35 
	~<°döt.h
>

37 
	~"utû/com∑t.h
"

38 
	~"åa˚/åa˚_ty≥s.h
"

43 
	såa˚r
 {

44 c⁄°* 
	m_fûe
;

45 
	m_löe
;

46 c⁄°* 
	m_fun˘i⁄
;

47 
åa˚r
(c⁄°* 
fûe
, 
löe
, c⁄°* 
fun˘i⁄
)

48 : 
_fûe
(
fûe
), 
_löe
(
löe
), 
_fun˘i⁄
(
fun˘i⁄
)

51 
›î©‹
()(
	mty≥
, c⁄°* 
	mf‹m©
, ...Ë
ATTRIBUTE
(
f‹m©
(
¥ötf
, 3, 4));

54 
åa˚_
(
åa˚_ty≥
,

55 c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

56 c⁄°* 
f‹m©
, ...) ;

57 
åa˚_£t
(
åa˚_ty≥_mask
);

58 
åa˚_gë
();

86 
	#TRACE
 
	`åa˚r
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
)

	)

100 
	#TRACE_SET
(
ty≥s
Ë
	`åa˚_£t
—y≥s)

	)

114 
	#TRACE_GET
(Ë
	`åa˚_gë
()

	)

	@include/util/w_strlcpy.h

47 
	~<sys/ty≥s.h
>

49 #ifde‡
__SUNPRO_CC


50 
	~<°rög.h
>

52 
	~<c°rög
>

55 
size_t


56 
w_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
siz
);

	@include/util/zipfian.h

24 #i‚de‡
__UTIL_ZIPFIAN_H


25 
	#__UTIL_ZIPFIAN_H


	)

28 
	~<cm©h
>

54 
	szùfün


57 
	m_k
;

58 
	m_mk_öv
;

59 
	m_cutoff
;

60 
	m_1mcutoff
;

63 
zùfün
(
n
, 
s
)

65 : 
_k
(1.1*
s
-1), 
_mk_öv
(-1./_k)

66 , 
_cutoff
(
pow
(
n
, -
_k
)), 
_1mcutoff
(1-_cutoff)

70 
›î©‹
()(
	mu
Ë{  
√xt
(
u
); }

72 
√xt
(
unif‹m_öput
) {

74 
	munif‹m_öput
 *
_1mcutoff
;

75 
	munif‹m_öput
 +
_cutoff
;

76  (Ë
pow
(
unif‹m_öput
, 
_mk_öv
);

	@include/workload/ssb/dbgen/bcd2.h

5 #i‚de‡
SSB_DBGEN_BCD2_H


6 
	#SSB_DBGEN_BCD2_H


	)

8 
	~"utû/«me•a˚.h
"

10 
ENTER_NAMESPACE
(
dbgíssb
);

12 
bö_bcd2
(
bö¨y
, *
low_ªs
, *
high_ªs
);

13 
bcd2_bö
(*
de°
, 
bcd
);

14 
bcd2_add
(*
bcd_low
, *
bcd_high
, 
addíd
);

15 
bcd2_sub
(*
bcd_low
, *
bcd_high
, 
subíd
);

16 
bcd2_mul
(*
bcd_low
, *
bcd_high
, 
mu…ùlõr
);

17 
bcd2_div
(*
bcd_low
, *
bcd_high
, 
divis‹
);

18 
bcd2_mod
(*
bcd_low
, *
bcd_high
, 
modulo
);

19 
bcd2_cmp
(*
bcd_low
, *
bcd_high
, 
com∑ª
);

21 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/config.h

51 #i‚de‡
SSB_DBGEN_CONFIG_H


52 
	#SSB_DBGEN_CONFIG_H


	)

54 
	~"utû/«me•a˚.h
"

56 
ENTER_NAMESPACE
(
dbgíssb
);

59 
	#SSBM


	)

61 #ifde‡
DOS


62 
	#DSS_PROC
 1

	)

63 
	#PATH_SEP
 '\\'

	)

67 #ifde‡
ATT


68 
	#STDLIB_HAS_GETOPT


	)

69 #ifde‡
SQLSERVER


70 
	#WIN32


	)

73 
	#SUPPORT_64BITS


	)

74 
	#DSS_HUGE
 

	)

75 
	#HUGE_COUNT
 1

	)

76 
	#HUGE_FORMAT
 "%LLd"

	)

80 #ifde‡
DIGITAL


81 
	#DOUBLE_CAST
 ()()

	)

84 #ifde‡
HP


85 
	#_INCLUDE_POSIX_SOURCE


	)

86 
	#STDLIB_HAS_GETOPT


	)

89 #ifde‡
IBM


90 
	#_POSIX_SOURCE


	)

98 
	#STDLIB_HAS_GETOPT


	)

101 #ifde‡
ICL


102 
	#STDLIB_HAS_GETOPT


	)

105 #ifde‡
SUN


106 
	#STDLIB_HAS_GETOPT


	)

109 #ifde‡
LINUX


110 
	#STDLIB_HAS_GETOPT


	)

113 #ifde‡
SGI


114 
	#STDLIB_HAS_GETOPT


	)

115 
	#SUPPORT_64BITS


	)

116 
	#DSS_HUGE
 
__uöt64_t


	)

117 
	#HUGE_COUNT
 1

	)

120 #ifde‡
TANDEM


121 
	#EOL_HANDLING


	)

124 #ifde‡
VMS


125 
	#SPAWN
 
vf‹k


	)

126 
	#KILL
(
pid
Ë
	`kûl
(
SIGQUIT
,Öid)

	)

127 
	#SET_HANDLER
(
¥oc
Ë
	`sig«l
(
SIGQUIT
,Öroc)

	)

128 
	#WAIT
(
ªs
, 
pid
Ë
	`waô
‘es)

	)

129 
	#SIGS_DEFINED


	)

132 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

133 
	#pid_t
 

	)

134 
	#SET_HANDLER
(
¥oc
Ë
	`sig«l
(
SIGINT
,Öroc)

	)

135 
	#KILL
(
pid
) \

136 
	`Tîmö©ePro˚ss
(
	`O≥nPro˚ss
(
PROCESS_TERMINATE
,
FALSE
,
pid
),3)

	)

137 #i‡(
deföed
 (
__WATCOMC__
))

138 
	#SPAWN
(Ë
	`•awnv
(
P_NOWAIT
, 
•awn_¨gs
[0], s∑wn_¨gs)

	)

139 
	#WAIT
(
ªs
, 
pid
Ë
	`cwaô
‘es,Öid, 
WAIT_CHILD
)

	)

141 
	#SPAWN
(Ë
	`_•awnv
(
_P_NOWAIT
, 
•awn_¨gs
[0], s∑wn_¨gs)

	)

142 
	#WAIT
(
ªs
, 
pid
Ë
	`_cwaô
‘es,Öid, 
_WAIT_CHILD
)

	)

143 
	#gëpid
 
_gëpid


	)

145 
	#SIGS_DEFINED


	)

146 
	#PATH_SEP
 '\\'

	)

147 #i‚de‡
TEST_32B


148 
	#SUPPORT_64BITS


	)

149 
	#DSS_HUGE
 
__öt64


	)

150 
	#HUGE_COUNT
 1

	)

151 
	#HUGE_FORMAT
 "%I64d"

	)

156 
	#WIFEXITED
(
s
Ë((†& 0xFFË=0)

	)

157 
	#WIFSIGNALED
(
s
Ë((()((
°©us
)-1Ë& 0xFFFFË< 0xFF)

	)

158 
	#WIFSTOPPED
(
s
Ë(((sË& 0xffË=0x7f)

	)

159 
	#WTERMSIG
(
s
Ë((sË& 0x7f)

	)

160 
	#WSTOPSIG
(
s
Ë(((sË& 0xff00Ë>> 8)

	)

163 #i‚de‡
SIGS_DEFINED


164 
	#KILL
(
pid
Ë
	`kûl
(
SIGUSR1
,Öid)

	)

165 
	#SET_HANDLER
(
¥oc
Ë
	`sig«l
(
SIGUSR1
,Öroc)

	)

166 
	#SPAWN
 
f‹k


	)

167 
	#WAIT
(
ªs
, 
pid
Ë
	`waô
‘es)

	)

170 
	#DSS_PROC
 
	`gëpid
()

	)

173 #i‚de‡
DBNAME


174 
	#DBNAME
 "dss"

	)

177 #i‚de‡
PATH_SEP


178 
	#PATH_SEP
 '/'

	)

181 #i‚de‡
DSS_HUGE


182 
	#DSS_HUGE
 

	)

183 
	#HUGE_COUNT
 2

	)

186 #i‚de‡
DOUBLE_CAST


187 
	#DOUBLE_CAST
 ()

	)

190 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/dss.h

7 #i‚de‡
SSB_DBGEN_DSS_H


8 
	#SSB_DBGEN_DSS_H


	)

10 
	~"utû/«me•a˚.h
"

11 
	~"utû/åa˚.h
"

13 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

15 #ifde‡
SSBM


16 
	#NAME
 "SSBM (Sè∏Schem®Bíchm¨k)"

	)

17 #unde‡
VERSION


18 
	#VERSION
 1

	)

19 
	#RELEASE
 0

	)

20 
	#MODIFICATION
 0

	)

21 
	#PATCH
 ""

	)

24 
	#DATE
 4

	)

26 
	#L_SKEY_MIN
 1

	)

27 
	#L_SKEY_MAX
 (
tdefs
[
SUPP
].
ba£
 * 
sˇÀ
)

	)

30 #ifde‡
TPCH


31 
	#NAME
 "TPC-H"

	)

32 
	#VERSION
 1

	)

33 
	#RELEASE
 3

	)

34 
	#MODIFICATION
 0

	)

35 
	#PATCH
 ""

	)

38 #ifde‡
TPCR


39 
	#NAME
 "TPC-R"

	)

40 
	#VERSION
 1

	)

41 
	#RELEASE
 3

	)

42 
	#MODIFICATION
 0

	)

43 
	#PATCH
 ""

	)

46 #i‚de‡
NAME


47 #îr‹ 
Bíchm¨k
 
vîsi⁄
 
mu°
 
be
 
deföed
 
ö
 
c⁄fig
.
h


49 
	#TPC
 "Tønß˘i⁄ Pro˚ssög Pîf‹m™˚ Councû"

	)

50 
	#C_DATES
 "1994 - 2000"

	)

52 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

53 
	~"w‹klﬂd/ssb/dbgí/sh¨ed.h
"

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 #ifde‡
SSBM


58 
	~<m©h.h
>

62 
	#NONE
 -1

	)

63 
	#PART
 0

	)

64 
	#PSUPP
 1

	)

65 
	#SUPP
 2

	)

66 
	#CUST
 3

	)

67 
	#ORDER
 4

	)

68 
	#LINE
 5

	)

69 
	#ORDER_LINE
 6

	)

70 
	#PART_PSUPP
 7

	)

71 
	#NATION
 8

	)

72 
	#REGION
 9

	)

73 
	#UPDATE
 10

	)

74 
	#MAX_TABLE
 11

	)

75 
	#ONE_STREAM
 1

	)

76 
	#ADD_AT_END
 2

	)

78 #ifde‡
MAX


79 #unde‡
MAX


81 #ifde‡
MIN


82 #unde‡
MIN


84 
	#MAX
(
a
,
b
Ë(◊ > b )?a:b)

	)

85 
	#MIN
(
A
,
B
Ë–(AË< (BË? (AË: (B))

	)

87 
	#INTERNAL_ERROR
(
p
Ë{
	`Ârötf
(
°dîr
,"%s",Ö);
	`ab‹t
();}

	)

88 
	#LN_CNT
 4

	)

89 
	g oi£
[4] = {'|', '/', '-', '\\' };

90 
	#LIFENOISE
(
n
, 
v¨
) \

91 i‡(
vîbo£
 > 0Ë
	`Ârötf
(
°dîr
, "%c\b", 
 oi£
[(
v¨
%
LN_CNT
)])

	)

93 
	#MALLOC_CHECK
(
v¨
) \

94 i‡((
v¨
Ë=
NULL
) \

96 
	`Ârötf
(
°dîr
, "Malloc failedát %s:%d\n", \

97 
__FILE__
, 
__LINE__
); \

98 
	`exô
(1);\

99 }

	)

100 
	#OPEN_CHECK
(
v¨
, 
∑th
) \

101 i‡((
v¨
Ë=
NULL
) \

103 
	`Ârötf
(
°dîr
, "Open failed for %sát %s:%d\n", \

104 
∑th
, 
__FILE__
, 
__LINE__
); \

105 
	`exô
(1);\

106 }

	)

107 #i‚de‡
MAX_CHILDREN


108 
	#MAX_CHILDREN
 1000

	)

116 #i‚de‡
BITS_PER_LONG


117 
	#BITS_PER_LONG
 32

	)

118 
	#MAX_LONG
 0x7FFFFFFF

	)

120 
	#SPARSE_BITS
 2

	)

121 
	#SPARSE_KEEP
 3

	)

122 
	#MK_SPARSE
(
key
, 
£q
) \

123 (((((
key
>>3)<<2)|(
£q
 & 0x0003))<<3)|(key & 0x0007))

	)

125 
	#RANDOM
(
tgt
, 
lowî
, 
uµî
, 
°ªam
Ë
	`dss_øndom
(&tgt,Üowî, uµî, såóm)

	)

128 
ENTER_NAMESPACE
(
dbgíssb
);

130 
ssb_dbgí_öô
();

131 
‰ì_asc_d©e
();

133 #ifde‡
SSBM


135 c⁄° * 
	m«me
;

136 
	m°¨t_day
;

137 
	m°¨t_m⁄th
;

138 
	míd_day
;

139 
	míd_m⁄th
;

140 } 
	t£as⁄
;

142 c⁄° * 
	m«me
;

143 
	mm⁄th
;

144 
	mday
;

145 } 
	thﬁiday
;

153 
	mweight
;

154 *
	mãxt
;

155 } 
	t£t_membî
;

159 
	mcou¡
;

160 
	mmax
;

161 
£t_membî
 *
	mli°
;

162 *
	m≥rmuã
;

163 } 
	tdi°ributi⁄
;

168 
	#DIST_SIZE
(
d
Ëd->
cou¡


	)

169 
	#DIST_MEMBER
(
d
, 
i
Ë((
£t_membî
 *)((d)->
li°
 + i))->
ãxt


	)

173 c⁄° *
	m«me
;

174 c⁄° *
	mcommít
;

175 
	mba£
;

176 (*
	mhódî
Ë(
FILE
 *
	mf
);

177 (*
	mlﬂdî
[2]) (*, );

178 (*
	mgí_£ed
)(, );

179 (*
	mvîify
) (*, );

180 
	mchûd
;

181 
	mvtŸÆ
;

182 } 
	ttdef
;

184 
	sSEED_T
 {

185 
	mèbÀ
;

186 
	mvÆue
;

187 
	mußge
;

188 
	mbound¨y
;

189 } 
	t£ed_t
;

192 #i‡
deföed
(
__STDC__
)

193 
	#PROTO
(
s
Ë
	)
s

195 
	#PROTO
(
s
Ë()

	)

199 *
ív_c⁄fig
 
PROTO
((*
v¨
, *
dÊt
));

200 
yes_no
 
PROTO
((*
¥om±
));

201 
a_∫d
 
PROTO
((
mö
, 
max
, 
cﬁumn
, *
de°
));

202 
tx_∫d
 
PROTO
((
mö
, 
max
, 
cﬁumn
, *
tgt
));

203 
julün
 
PROTO
((
d©e
));

204 
unjulün
 
PROTO
((
d©e
));

205 
FILE
 *
tbl_›í
 
PROTO
((
tbl
, *
mode
));

206 
ds¢ˇ£cmp
 
PROTO
((*
s1
, *
s2
, 
n
));

207 
dssˇ£cmp
 
PROTO
((*
s1
, *
s2
));

208 
pick_°r
 
PROTO
((
di°ributi⁄
 * 
s
, 
c
, *
èrgë
));

209 
agg_°r
 
PROTO
((
di°ributi⁄
 *
£t
, 
cou¡
, 
cﬁ
, *
de°
));

210 
ªad_di°
 
PROTO
((*
∑th
, *
«me
, 
di°ributi⁄
 * 
èrgë
));

211 
embed_°r
 
PROTO
((
di°ributi⁄
 *
d
, 
mö
, 
max
, 
°ªam
, *
de°
));

212 #i‚de‡
STDLIB_HAS_GETOPT


213 
gë›t
 
PROTO
((
¨g_˙t
, **
¨g_ve˘
, *
›ri⁄s
));

215 
£t_°©e
 
PROTO
((
t
, 
sˇÀ
, 
¥ocs
, 
°ï
, *
e
));

218 
NextR™d
 
PROTO
((
nSìd
));

219 
UnifI¡
 
PROTO
((
nLow
, 
nHigh
, 
nSåóm
));

220 
UnifRól
 
PROTO
((
dLow
, 
dHigh
, 
nSåóm
));

221 
Exp⁄ítül
 
PROTO
((
dMón
, 
nSåóm
));

222 
dss_øndom
(*
tgt
, 
mö
, 
max
, 
£ed
);

223 
row_°¨t
(
t
);

224 
row_°›
(
t
);

225 
dump_£eds
(
t
);

228 
	#MAX_GRAMMAR_LEN
 12

	)

229 
	#MAX_SENT_LEN
 256

	)

230 
	#RNG_PER_SENT
 27

	)

232 
dbg_ãxt
 
PROTO
((* 
t
, 
mö
, 
max
, 
s
));

234 #ifde‡
DECLARER


235 
	#EXTERN


	)

237 
	#EXTERN
 

	)

241 
EXTERN
 
di°ributi⁄
 
«ti⁄s
;

242 
EXTERN
 
di°ributi⁄
 
	g«ti⁄s2
;

243 
EXTERN
 
di°ributi⁄
 
	gªgi⁄s
;

244 
EXTERN
 
di°ributi⁄
 
	go_¥i‹ôy_£t
;

245 
EXTERN
 
di°ributi⁄
 
	gl_ö°ru˘_£t
;

246 
EXTERN
 
di°ributi⁄
 
	gl_smode_£t
;

247 
EXTERN
 
di°ributi⁄
 
	gl_ˇãg‹y_£t
;

248 
EXTERN
 
di°ributi⁄
 
	gl_rÊag_£t
;

249 
EXTERN
 
di°ributi⁄
 
	gc_m£g_£t
;

250 
EXTERN
 
di°ributi⁄
 
	gcﬁ‹s
;

251 
EXTERN
 
di°ributi⁄
 
	gp_ty≥s_£t
;

252 
EXTERN
 
di°ributi⁄
 
	gp_˙å_£t
;

255 
EXTERN
 
di°ributi⁄
 
	g¨ti˛es
;

256 
EXTERN
 
di°ributi⁄
 
	gnouns
;

257 
EXTERN
 
di°ributi⁄
 
	gadje˘ives
;

258 
EXTERN
 
di°ributi⁄
 
	gadvîbs
;

259 
EXTERN
 
di°ributi⁄
 
	g¥ïosôi⁄s
;

260 
EXTERN
 
di°ributi⁄
 
	gvîbs
;

261 
EXTERN
 
di°ributi⁄
 
	gãrmö©‹s
;

262 
EXTERN
 
di°ributi⁄
 
	gauxûœrõs
;

263 
EXTERN
 
di°ributi⁄
 
	g≈
;

264 
EXTERN
 
di°ributi⁄
 
	gvp
;

265 
EXTERN
 
di°ributi⁄
 
	ggømm¨
;

268 
EXTERN
 
	gsˇÀ
;

269 
EXTERN
 
	gª‰esh
;

270 
EXTERN
 
	gªsume
;

271 
EXTERN
 
	gvîbo£
;

272 
EXTERN
 
	gf‹˚
;

273 
EXTERN
 
	ghódî
;

274 
EXTERN
 
	gcﬁum«r
;

275 
EXTERN
 
	gdúe˘
;

276 
EXTERN
 
	gupd©es
;

277 
EXTERN
 
	gèbÀ
;

278 
EXTERN
 
	gchûdªn
;

279 
EXTERN
 
	g‚ames
;

280 
EXTERN
 
	ggí_sql
;

281 
EXTERN
 
	ggí_∫g
;

282 
EXTERN
 *
	gdb_«me
;

283 
EXTERN
 
	g°ï
;

284 
EXTERN
 
	g£t_£eds
;

285 
EXTERN
 
	gvÆid©e
;

286 
EXTERN
 *
	gd_∑th
;

289 
EXTERN
 
	gö£π_£gmíts
;

290 
EXTERN
 
	gdñëe_£gmíts
;

291 
EXTERN
 
	gö£π_‹dîs_£gmít
;

292 
EXTERN
 
	gö£π_löeôem_£gmít
;

293 
EXTERN
 
	gdñëe_£gmít
;

296 #i‚de‡
DECLARER


297 
tdef
 
tdefs
[];

313 
	#P_SIZE
 126

	)

314 #ifde‡
SSBM


315 
	#P_NAME_SCL
 3

	)

317 
	#P_NAME_SCL
 5

	)

319 
	#P_MFG_TAG
 "M™uÁ˘uªr#"

	)

320 
	#P_MFG_FMT
 "%s%01d"

	)

321 
	#P_MFG_MIN
 1

	)

322 
	#P_MFG_MAX
 5

	)

323 
	#P_BRND_TAG
 "Bønd#"

	)

324 
	#P_BRND_FMT
 "%s%02d"

	)

325 
	#P_BRND_MIN
 1

	)

330 
	#P_BRND_MAX
 40

	)

333 
	#P_SIZE_MIN
 1

	)

334 
	#P_SIZE_MAX
 50

	)

335 
	#P_MCST_MIN
 100

	)

336 
	#P_MCST_MAX
 99900

	)

337 
	#P_MCST_SCL
 100.0

	)

338 
	#P_RCST_MIN
 90000

	)

339 
	#P_RCST_MAX
 200000

	)

340 
	#P_RCST_SCL
 100.0

	)

344 
	#S_SIZE
 145

	)

345 
	#S_NAME_TAG
 "Suµlõr#"

	)

346 
	#S_NAME_FMT
 "%s%09ld"

	)

347 
	#S_ABAL_MIN
 -99999

	)

348 
	#S_ABAL_MAX
 999999

	)

349 
	#S_CMNT_MAX
 101

	)

350 
	#S_CMNT_BBB
 10

	)

351 
	#BBB_DEADBEATS
 50

	)

352 
	#BBB_BASE
 "Cu°omî "

	)

353 
	#BBB_COMPLAIN
 "Com∂aöts"

	)

354 
	#BBB_COMMEND
 "Recommíds"

	)

355 
	#BBB_CMNT_LEN
 19

	)

356 
	#BBB_BASE_LEN
 9

	)

357 
	#BBB_TYPE_LEN
 10

	)

362 
	#PS_SIZE
 145

	)

363 
	#PS_SKEY_MIN
 0

	)

364 
	#PS_SKEY_MAX
 ((
tdefs
[
SUPP
].
ba£
 - 1Ë* 
sˇÀ
)

	)

365 
	#PS_SCST_MIN
 100

	)

366 
	#PS_SCST_MAX
 100000

	)

367 
	#PS_QTY_MIN
 1

	)

368 
	#PS_QTY_MAX
 9999

	)

372 
	#C_SIZE
 165

	)

373 
	#C_NAME_TAG
 "Cu°omî#"

	)

374 
	#C_NAME_FMT
 "%s%09ld"

	)

375 
	#C_MSEG_MAX
 5

	)

376 
	#C_ABAL_MIN
 -99999

	)

377 
	#C_ABAL_MAX
 999999

	)

381 
	#O_SIZE
 109

	)

382 
	#O_CKEY_MIN
 1

	)

383 
	#O_CKEY_MAX
 ()(
tdefs
[
CUST
].
ba£
 * 
sˇÀ
)

	)

384 
	#O_ODATE_MIN
 
STARTDATE


	)

385 
	#O_ODATE_MAX
 (
STARTDATE
 + 
TOTDATE
 - \

386 (
L_SDTE_MAX
 + 
L_RDTE_MAX
Ë- 1)

	)

387 
	#O_CLRK_TAG
 "CÀrk#"

	)

388 
	#O_CLRK_FMT
 "%s%09d"

	)

389 
	#O_CLRK_SCL
 1000

	)

390 
	#O_LCNT_MIN
 1

	)

391 
	#O_LCNT_MAX
 7

	)

396 
	#L_SIZE
 144L

	)

397 
	#L_QTY_MIN
 1

	)

398 
	#L_QTY_MAX
 50

	)

399 
	#L_TAX_MIN
 0

	)

400 
	#L_TAX_MAX
 8

	)

401 
	#L_DCNT_MIN
 0

	)

402 
	#L_DCNT_MAX
 10

	)

403 
	#L_PKEY_MIN
 1

	)

405 #ifde‡
SSBM


407 
	#L_PKEY_MAX
 (
tdefs
[
PART
].
ba£
 * (
	`Êo‹
(
	`log
(()
sˇÀ
))+1))

	)

409 
	#L_PKEY_MAX
 (
tdefs
[
PART
].
ba£
 * 
sˇÀ
)

	)

412 
	#L_SDTE_MIN
 1

	)

413 
	#L_SDTE_MAX
 121

	)

414 
	#L_CDTE_MIN
 30

	)

415 
	#L_CDTE_MAX
 90

	)

416 
	#L_RDTE_MIN
 1

	)

417 
	#L_RDTE_MAX
 30

	)

421 
	#T_SIZE
 30

	)

422 
	#T_START_DAY
 3

	)

423 
	#LEAP
(
y
Ë((!(y % 4Ë&& (y % 100))?1:0)

	)

432 
	#SUPP_PER_PART
 4

	)

433 
	#ORDERS_PER_CUST
 10

	)

434 
	#CUST_MORTALITY
 3

	)

435 
	#NATIONS_MAX
 90

	)

436 
	#PHONE_FMT
 "%02d-%03d-%03d-%04d"

	)

437 
	#STARTDATE
 92001

	)

438 
	#CURRENTDATE
 95168

	)

439 
	#ENDDATE
 98365

	)

440 
	#TOTDATE
 2557

	)

441 
	#UPD_PCT
 10

	)

442 
	#MAX_STREAM
 47

	)

443 
	#V_STR_LOW
 0.4

	)

444 
	#PENNIES
 100

	)

445 
	#Q11_FRACTION
 ()0.0001

	)

449 
	#MIN_SCALE
 1.0

	)

450 
	#MAX_SCALE
 1000.0

	)

454 
	#MAX_32B_SCALE
 1000.0

	)

455 
	#INIT_HUGE
(
v
) { \

456 
v
 = (
DSS_HUGE
 *)
	`mÆloc
((DSS_HUGEË* 
HUGE_COUNT
); \

457 
	`MALLOC_CHECK
(
v
); \

458 }

	)

459 
	#FREE_HUGE
(
v
Ë
	`‰ì
(v)

	)

460 #ifde‡
SUPPORT_64BITS


461 
	#LONG2HUGE
(
§c
, 
d°
Ë*d° = (
DSS_HUGE
)
	)
src

462 
	#HUGE2LONG
(
§c
, 
d°
Ë*d° = ()
	)
src

463 
	#HUGE_SET
(
§c
, 
d°
Ë*d° = *
	)
src

464 
	#HUGE_MUL
(
›1
, 
›2
Ë*›1 *
	)
op2

465 
	#HUGE_DIV
(
›1
, 
›2
Ë*›1 /
	)
op2

466 
	#HUGE_ADD
(
›1
, 
›2
, 
d°
Ë*d° = *›1 + 
	)
op2

467 
	#HUGE_SUB
(
›1
, 
›2
, 
d°
Ë*d° = *›1 - 
	)
op2

468 
	#HUGE_MOD
(
›1
, 
›2
Ë*›1 % 
	)
op2

469 
	#HUGE_CMP
(
›1
, 
›2
Ë(*›1 =*›2)?0:(*›1 < *›2)-1:1

	)

471 
	#LONG2HUGE
(
§c
, 
d°
Ë{*d° = src; *(d° + 1Ë0;}

	)

472 
	#HUGE2LONG
(
§c
, 
d°
) { dst=0 ; \

473 
	`bcd2_bö
(
d°
, (
§c
 + 1)); \

474 
	`bcd2_bö
(
d°
, 
§c
); }

	)

475 
	#HUGE_SET
(
§c
, 
d°
Ë{ *d° = *§¯; *(d° + 1Ë*(§¯+ 1); }

	)

476 
	#HUGE_MUL
(
›1
,
›2
Ë
	`bcd2_mul
(›1, (›1 + 1), op2)

	)

477 
	#HUGE_DIV
(
›1
,
›2
Ë
	`bcd2_div
(›1, (›1 + 1), op2)

	)

478 
	#HUGE_ADD
(
›1
,
›2
,
d
) { \

479 
	`HUGE_SET
(
›1
, 
d
); \

480 
	`bcd2_add
(
d
, (d + 1), 
›2
); \

481 }

	)

482 
	#HUGE_SUB
(
›1
,
›2
,
d
) { \

483 
	`HUGE_SET
(
›1
, 
d
); \

484 
	`bcd2_sub
(
d
, (d + 1), 
›2
); \

485 }

	)

486 
	#HUGE_MOD
(
›1
, 
›2
Ë
	`bcd2_mod
(›1, (›1 + 1), op2)

	)

487 
	#HUGE_CMP
(
›1
, 
›2
Ë(
	`bcd2_cmp
(op1, (op1 + 1), op2) == 0)?0:\

488 ((
	`bcd2_cmp
(
›1
, (›1 + 1), 
›2
Ë< 0)?-1:1)

	)

492 
	#DIST_TAG
 "DSS_DIST"

	)

493 
	#DIST_DFLT
 "di°s.dss"

	)

494 
	#PATH_TAG
 "DSS_PATH"

	)

495 
	#PATH_DFLT
 "."

	)

496 
	#CONFIG_TAG
 "DSS_CONFIG"

	)

497 
	#CONFIG_DFLT
 "ö˛ude/w‹klﬂd/ssb/dbgí"

	)

498 
	#ADHOC_TAG
 "DSS_ADHOC"

	)

499 
	#ADHOC_DFLT
 "adhoc.dss"

	)

502 #i‚de‡
SEPARATOR


503 
	#SEPARATOR
 '|'

	)

506 
	#DT_STR
 0

	)

507 #i‚de‡
MVS


508 
	#DT_VSTR
 
DT_STR


	)

510 
	#DT_VSTR
 1

	)

512 
	#DT_INT
 2

	)

513 
	#DT_HUGE
 3

	)

514 
	#DT_KEY
 4

	)

515 
	#DT_MONEY
 5

	)

517 #unde‡
DT_CHR


518 
	#DT_CHR
 6

	)

520 
dbg_¥öt
(
dt
, 
FILE
 *
tgt
, *
d©a
, 
Àn
, 
eﬁ
);

521 
	#PR_STR
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_STR
, f, (*)°r,Üí, 1)

	)

522 
	#PR_VSTR
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_VSTR
, f, (*)°r,Üí, 1)

	)

523 
	#PR_VSTR_LAST
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_VSTR
, f, (*)°r,Üí, 0)

	)

524 
	#PR_INT
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_INT
, f, (*)°r, 0, 1)

	)

525 
	#PR_HUGE
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_HUGE
, f, (*)°r, 0, 1)

	)

526 
	#PR_KEY
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_KEY
, f, (*)°r, 0, -1)

	)

527 
	#PR_MONEY
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_MONEY
, f, (*)°r, 0, 1)

	)

528 
	#PR_CHR
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_CHR
, f, (*)°r, 0, 1)

	)

529 
	#PR_STRT
(
Â
Ë

	)

530 
	#PR_END
(
Â
Ë
	`Ârötf
(Â, "\n"Ë

	)

532 #ifde‡
SSBM


533 
	#PR_DATE
(
tgt
, 
yr
, 
mn
, 
dy
) \

534 
	`•rötf
(
tgt
, "19%02ld%02ld%02ld", 
yr
, 
mn
, 
dy
)

	)

536 #ifde‡
MDY_DATE


537 
	#PR_DATE
(
tgt
, 
yr
, 
mn
, 
dy
) \

538 
	`•rötf
(
tgt
, "%02ld-%02ld-19%02ld", 
mn
, 
dy
, 
yr
)

	)

540 
	#PR_DATE
(
tgt
, 
yr
, 
mn
, 
dy
) \

541 
	`•rötf
(
tgt
, "19%02ld-%02ld-%02ld", 
yr
, 
mn
, 
dy
)

	)

547 
	#VRF_STR
(
t
, 
d
Ë{*
xx
 = d; *xxË
tdefs
[t].
vtŸÆ
 +*xx++;}

	)

548 
	#VRF_INT
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 +
	)
d

549 #ifde‡
SUPPORT_64BITS


550 
	#VRF_HUGE
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 = *((*)&dË+ *((*)(&d + 1))

	)

552 
	#VRF_HUGE
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 +d[0] + d[1]

	)

555 
	#VRF_MONEY
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 = *((*)&dË+ *((*)(&d + 1))

	)

556 
	#VRF_CHR
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 +
	)
d

557 
	#VRF_STRT
(
t
)

	)

558 
	#VRF_END
(
t
)

	)

561 
	#UNIFORM
 0

	)

566 
	#P_MFG_SD
 0

	)

567 
	#P_BRND_SD
 1

	)

568 
	#P_TYPE_SD
 2

	)

569 
	#P_SIZE_SD
 3

	)

570 
	#P_CNTR_SD
 4

	)

571 
	#P_RCST_SD
 5

	)

572 
	#PS_QTY_SD
 7

	)

573 
	#PS_SCST_SD
 8

	)

574 
	#O_SUPP_SD
 10

	)

575 
	#O_CLRK_SD
 11

	)

576 
	#O_ODATE_SD
 13

	)

577 
	#L_QTY_SD
 14

	)

578 
	#L_DCNT_SD
 15

	)

579 
	#L_TAX_SD
 16

	)

580 
	#L_SHIP_SD
 17

	)

581 
	#L_SMODE_SD
 18

	)

582 
	#L_PKEY_SD
 19

	)

583 
	#L_SKEY_SD
 20

	)

584 
	#L_SDTE_SD
 21

	)

585 
	#L_CDTE_SD
 22

	)

586 
	#L_RDTE_SD
 23

	)

587 
	#L_RFLG_SD
 24

	)

588 
	#C_NTRG_SD
 27

	)

589 
	#C_PHNE_SD
 28

	)

590 
	#C_ABAL_SD
 29

	)

591 
	#C_MSEG_SD
 30

	)

592 
	#S_NTRG_SD
 33

	)

593 
	#S_PHNE_SD
 34

	)

594 
	#S_ABAL_SD
 35

	)

595 
	#P_NAME_SD
 37

	)

596 
	#O_PRIO_SD
 38

	)

597 
	#HVAR_SD
 39

	)

598 
	#O_CKEY_SD
 40

	)

599 
	#N_CMNT_SD
 41

	)

600 
	#R_CMNT_SD
 42

	)

601 
	#O_LCNT_SD
 43

	)

602 
	#BBB_JNK_SD
 44

	)

603 
	#BBB_TYPE_SD
 45

	)

604 
	#BBB_CMNT_SD
 46

	)

605 
	#BBB_OFFSET_SD
 47

	)

609 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/dsstypes.h

9 #i‚de‡
SSB_DBGEN_DSSTYPES_H


10 
	#SSB_DBGEN_DSSTYPES_H


	)

12 
	~"utû/«me•a˚.h
"

14 
ENTER_NAMESPACE
(
dbgíssb
);

19 #ifde‡
SSBM


22 
	mcu°key
;

23 
	m«me
[
C_NAME_LEN
 + 1];

24 
	m∆í
;

25 
	maddªss
[
C_ADDR_MAX
 + 1];

26 
	mÆí
;

27 
	mcôy
[
CITY_FIX
+1];

28 
	m«ti⁄_«me
[
C_NATION_NAME_LEN
+1];

29 
	mªgi⁄_key
;

30 
	mªgi⁄_«me
[
C_REGION_NAME_LEN
+1];

31 
	mph⁄e
[
PHONE_LEN
 + 1];

32 
	mmkt£gmít
[
MAXAGG_LEN
 + 1];

33 } 
	tcu°omî_t
;

37 
	mcu°key
;

38 
	m«me
[
C_NAME_LEN
 + 1];

39 
	maddªss
[
C_ADDR_MAX
 + 1];

40 
	mÆí
;

41 
	m«ti⁄_code
;

42 
	mph⁄e
[
PHONE_LEN
 + 1];

43 
	mac˘bÆ
;

44 
	mmkt£gmít
[
MAXAGG_LEN
 + 1];

45 
	mcommít
[
C_CMNT_MAX
 + 1];

46 
	m˛í
;

47 } 
	tcu°omî_t
;

51 
mk_cu°
 
PROTO
((
n_cu°
, 
cu°omî_t
 * 
c
));

52 
¥_cu°
 
PROTO
((
cu°omî_t
 * 
c
, 
mode
));

53 
ld_cu°
 
PROTO
((
cu°omî_t
 * 
c
, 
mode
));

55 #ifde‡
SSBM


59 
DSS_HUGE
 *
	mokey
;

60 
	mlöíumbî
;

61 
	mcu°key
;

62 
	m∑πkey
;

63 
	msuµkey
;

64 
	m‹dîd©e
[
DATE_LEN
];

65 
	m›ri‹ôy
[
MAXAGG_LEN
 + 1];

66 
	mshù_¥i‹ôy
;

67 
	mqu™tôy
;

68 
	mexãnded_¥i˚
;

69 
	m‹dî_tŸÆ¥i˚
;

70 
	mdiscou¡
;

71 
	mªvíue
;

72 
	msuµ_co°
;

73 
	mèx
;

74 
	mcommô_d©e
[
DATE_LEN
] ;

75 
	mshùmode
[
O_SHIP_MODE_LEN
 + 1];

76 } 
	tlöe‹dî_t
;

80 
DSS_HUGE
 *
	mokey
;

81 
	m∑πkey
;

82 
	msuµkey
;

83 
	ml˙t
;

84 
	mqu™tôy
;

85 
	mïri˚
;

86 
	mdiscou¡
;

87 
	mèx
;

88 
	mrÊag
[1];

89 
	ml°©us
[1];

90 
	mcd©e
[
DATE_LEN
];

91 
	msd©e
[
DATE_LEN
];

92 
	mrd©e
[
DATE_LEN
];

93 
	mshùö°ru˘
[
MAXAGG_LEN
 + 1];

94 
	mshùmode
[
MAXAGG_LEN
 + 1];

95 
	mcommít
[
L_CMNT_MAX
 + 1];

96 
	m˛í
;

97 } 
	tlöe_t
;

100 #ifde‡
SSBM


103 
DSS_HUGE
 *
	mokey
;

104 
	mcu°key
;

105 
	mtŸÆ¥i˚
;

106 
	mod©e
[
DATE_LEN
];

107 
	m›ri‹ôy
[
MAXAGG_LEN
 + 1];

108 
	m˛îk
[
O_CLRK_LEN
 + 1];

109 
	m•ri‹ôy
;

110 
	mlöes
;

111 
löe‹dî_t
 
	mlöe‹dîs
[
O_LCNT_MAX
];

112 } 
	t‹dî_t
;

116 
DSS_HUGE
 *
	mokey
;

117 
	mcu°key
;

118 
	m‹dî°©us
;

119 
	mtŸÆ¥i˚
;

120 
	mod©e
[
DATE_LEN
];

121 
	m›ri‹ôy
[
MAXAGG_LEN
 + 1];

122 
	m˛îk
[
O_CLRK_LEN
 + 1];

123 
	m•ri‹ôy
;

124 
	mlöes
;

125 
	mcommít
[
O_CMNT_MAX
 + 1];

126 
	m˛í
;

127 
löe_t
 
	ml
[
O_LCNT_MAX
];

128 } 
	t‹dî_t
;

132 
mk_‹dî
 
PROTO
((
ödex
, 
‹dî_t
 * 
o
, 
upd_num
));

133 
¥_‹dî
 
PROTO
((
‹dî_t
 * 
o
, 
mode
));

134 
ld_‹dî
 
PROTO
((
‹dî_t
 * 
o
, 
mode
));

135 
ez_•¨£
 
PROTO
((
ödex
, 
DSS_HUGE
 *
ok
, 
£q
));

136 #i‚de‡
SUPPORT_64BITS


137 
hd_•¨£
 
PROTO
((
ödex
, 
DSS_HUGE
 *
ok
, 
£q
));

140 #ifde‡
SSBM


145 
	m∑πkey
;

146 
	msuµkey
;

147 
	mqty
;

148 
	msco°
;

149 
	mcommít
[
PS_CMNT_MAX
 + 1];

150 
	m˛í
;

151 } 
	t∑πsuµ_t
;

154 #ifde‡
SSBM


157 
	m∑πkey
;

158 
	m«me
[
P_NAME_LEN
 + 1];

159 
	m∆í
;

160 
	mmfgr
[
P_MFG_LEN
 + 1];

161 
	mˇãg‹y
[
P_CAT_LEN
 + 1];

162 
	mbønd
[
P_BRND_LEN
 + 1];

163 
	mcﬁ‹
[
P_COLOR_MAX
 + 1];

164 
	m˛í
;

165 
	mty≥
[
P_TYPE_MAX
 + 1];

166 
	méí
;

167 
	msize
;

168 
	mc⁄èöî
[
P_CNTR_LEN
 + 1];

169 } 
	t∑π_t
;

173 
	m∑πkey
;

174 
	m«me
[
P_NAME_LEN
 + 1];

175 
	m∆í
;

176 
	mmfgr
[
P_MFG_LEN
 + 1];

177 
	mbønd
[
P_BRND_LEN
 + 1];

178 
	mty≥
[
P_TYPE_LEN
 + 1];

179 
	méí
;

180 
	msize
;

181 
	mc⁄èöî
[
P_CNTR_LEN
 + 1];

182 
	mªèû¥i˚
;

183 
	mcommít
[
P_CMNT_MAX
 + 1];

184 
	m˛í
;

185 
∑πsuµ_t
 
	ms
[
SUPP_PER_PART
];

186 } 
	t∑π_t
;

190 
mk_∑π
 
PROTO
((
ödex
, 
∑π_t
 * 
p
));

191 
¥_∑π
 
PROTO
((
∑π_t
 * 
∑π
, 
mode
));

192 
ld_∑π
 
PROTO
((
∑π_t
 * 
∑π
, 
mode
));

194 #ifde‡
SSBM


197 
	msuµkey
;

198 
	m«me
[
S_NAME_LEN
 + 1];

199 
	maddªss
[
S_ADDR_MAX
 + 1];

200 
	mÆí
;

201 
	mcôy
[
CITY_FIX
 +1];

202 
	m«ti⁄_«me
[
S_NATION_NAME_LEN
+1];

203 
	mªgi⁄_key
;

204 
	mªgi⁄_«me
[
S_REGION_NAME_LEN
+1];

205 
	mph⁄e
[
PHONE_LEN
 + 1];

206 } 
	tsuµlõr_t
;

210 
	msuµkey
;

211 
	m«me
[
S_NAME_LEN
 + 1];

212 
	maddªss
[
S_ADDR_MAX
 + 1];

213 
	mÆí
;

214 
	m«ti⁄_code
;

215 
	mph⁄e
[
PHONE_LEN
 + 1];

216 
	mac˘bÆ
;

217 
	mcommít
[
S_CMNT_MAX
 + 1];

218 
	m˛í
;

219 } 
	tsuµlõr_t
;

223 
mk_suµ
 
PROTO
((
ödex
, 
suµlõr_t
 * 
s
));

224 
¥_suµ
 
PROTO
((
suµlõr_t
 * 
suµ
, 
mode
));

225 
ld_suµ
 
PROTO
((
suµlõr_t
 * 
suµ
, 
mode
));

227 #ifde‡
SSBM


232 
	md©ekey
;

233 
	md©e
[
D_DATE_LEN
+1];

234 
	mdayofwìk
[
D_DAYWEEK_LEN
+1] ;

235 
	mm⁄th
[
D_MONTH_LEN
+1];

236 
	myór
;

237 
	myórm⁄thnum
;

238 
	myórm⁄th
[
D_YEARMONTH_LEN
+1];

239 
	mdaynumöwìk
;

240 
	mdaynumöm⁄th
;

241 
	mdaynumöyór
;

242 
	mm⁄thnumöyór
;

243 
	mwìknumöyór
;

244 
	m£Œög£as⁄
[
D_SEASON_LEN
 + 1];

245 
	m¶í
;

246 
	mœ°dayöwìkÊ
[2];

247 
	mœ°dayöm⁄thÊ
[2];

248 
	mhﬁidayÊ
[2];

249 
	mwìkdayÊ
[2];

250 } 
	td©e_t
;

254 
mk_d©e
 
PROTO
((
ödex
, 
d©e_t
 * 
d
));

255 
¥_d©e
 
PROTO
((* 
d©e
, 
mode
));

256 
ld_d©e
 
PROTO
((* 
d©e
, 
mode
));

262 
	mtimekey
;

263 
	mÆpha
[
DATE_LEN
];

264 
	myór
;

265 
	mm⁄th
;

266 
	mwìk
;

267 
	mday
;

268 } 
	tdss_time_t
;

271 
mk_time
 
PROTO
((
ödex
, 
dss_time_t
 * 
t
));

280 
	mcode
;

281 *
	mãxt
;

282 
	mjoö
;

283 
	mcommít
[
N_CMNT_MAX
 + 1];

284 
	m˛í
;

285 } 
	tcode_t
;

288 
mk_«ti⁄
 
PROTO
((
i
, 
code_t
 * 
c
));

289 
¥_«ti⁄
 
PROTO
((
code_t
 * 
c
, 
mode
));

290 
ld_«ti⁄
 
PROTO
((
code_t
 * 
c
, 
mode
));

291 
mk_ªgi⁄
 
PROTO
((
i
, 
code_t
 * 
c
));

292 
¥_ªgi⁄
 
PROTO
((
code_t
 * 
c
, 
mode
));

293 
ld_ªgi⁄
 
PROTO
((
code_t
 * 
c
, 
mode
));

295 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/permute.h

4 #i‚de‡
SSB_DBGEN_PERMUTE_H


5 
	#SSB_DBGEN_PERMUTE_H


	)

7 
	~"utû/«me•a˚.h
"

9 
ENTER_NAMESPACE
(
dbgíssb
);

11 
	g≥rmuèti⁄
[41][22] =

56 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/rnd.h

8 #i‚de‡
SSB_DBGEN_RND_H


9 
	#SSB_DBGEN_RND_H


	)

11 
	~"utû/«me•a˚.h
"

13 
ENTER_NAMESPACE
(
dbgíssb
);

16 
NextR™d
 
PROTO
(());

17 
UnifI¡
 
PROTO
((, , ));

18 
UnifRól
 
PROTO
((, , ));

19 
Exp⁄ítül
 
PROTO
((, ));

21 
	gnA
 = 16807;

22 
	gnM
 = 2147483647;

23 
	gnQ
 = 127773;

24 
	gnR
 = 2836;

26 
	gdM
 = 2147483647.0;

36 
	#VSTR_MAX
(
Àn
Ë()÷í / 5 + (À¿% 5 =0)?0:1 + 1)

	)

37 
£ed_t
 
	gSìd
[
MAX_STREAM
 + 1] =

39 {
PART
, 1, 0, 1},

40 {
PART
, 46831694, 0, 1},

41 {
PART
, 1841581359, 0, 1},

42 {
PART
, 1193163244, 0, 1},

43 {
PART
, 727633698, 0, 1},

44 {
NONE
, 933588178, 0, 1},

45 {
PART
, 804159733, 0, 
RNG_PER_SENT
 * 3},

46 {
PSUPP
, 1671059989, 0, 
SUPP_PER_PART
},

47 {
PSUPP
, 1051288424, 0, 
SUPP_PER_PART
},

48 {
PSUPP
, 1961692154, 0, 
SUPP_PER_PART
 * 
RNG_PER_SENT
 * 20},

49 {
ORDER
, 1227283347, 0, 1},

50 {
ORDER
, 1171034773, 0, 1},

51 {
ORDER
, 276090261, 0, 
RNG_PER_SENT
 * 8},

52 {
ORDER
, 1066728069, 0, 1},

53 {
LINE
, 209208115, 0, 
O_LCNT_MAX
},

54 {
LINE
, 554590007, 0, 
O_LCNT_MAX
},

55 {
LINE
, 721958466, 0, 
O_LCNT_MAX
},

56 {
LINE
, 1371272478, 0, 
O_LCNT_MAX
},

57 {
LINE
, 675466456, 0, 
O_LCNT_MAX
},

58 {
LINE
, 1808217256, 0, 
O_LCNT_MAX
},

59 {
LINE
, 2095021727, 0, 
O_LCNT_MAX
},

60 {
LINE
, 1769349045, 0, 
O_LCNT_MAX
},

61 {
LINE
, 904914315, 0, 
O_LCNT_MAX
},

62 {
LINE
, 373135028, 0, 
O_LCNT_MAX
},

63 {
LINE
, 717419739, 0, 
O_LCNT_MAX
},

64 {
LINE
, 1095462486, 0, 
O_LCNT_MAX
 * 
RNG_PER_SENT
 * 5},

65 {
CUST
, 881155353, 0, 9},

66 {
CUST
, 1489529863, 0, 1},

67 {
CUST
, 1521138112, 0, 3},

68 {
CUST
, 298370230, 0, 1},

69 {
CUST
, 1140279430, 0, 1},

70 {
CUST
, 1335826707, 0, 
RNG_PER_SENT
 * 12},

71 {
SUPP
, 706178559, 0, 9},

72 {
SUPP
, 110356601, 0, 1},

73 {
SUPP
, 884434366, 0, 3},

74 {
SUPP
, 962338209, 0, 1},

75 {
SUPP
, 1341315363, 0, 
RNG_PER_SENT
 * 11},

76 {
PART
, 709314158, 0, 92},

77 {
ORDER
, 591449447, 0, 1},

78 {
LINE
, 431918286, 0, 1},

79 {
ORDER
, 851767375, 0, 1},

80 {
NATION
, 606179079, 0, 
RNG_PER_SENT
 * 16},

81 {
REGION
, 1500869201, 0, 
RNG_PER_SENT
 * 16},

82 {
ORDER
, 1434868289, 0, 1},

83 {
SUPP
, 263032577, 0, 1},

84 {
SUPP
, 753643799, 0, 1},

85 {
SUPP
, 202794285, 0, 1},

86 {
SUPP
, 715851524, 0, 1}

89 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/shared.h

6 #i‚de‡
SSB_DBGEN_SHARED_H


7 
	#SSB_DBGEN_SHARED_H


	)

9 
	~"utû/«me•a˚.h
"

11 
ENTER_NAMESPACE
(
dbgíssb
);

13 
	#N_CMNT_LEN
 72

	)

14 
	#N_CMNT_MAX
 152

	)

15 
	#R_CMNT_LEN
 72

	)

16 
	#R_CMNT_MAX
 152

	)

17 
	#MONEY_SCL
 0.01

	)

18 
	#V_STR_HGH
 1.6

	)

20 #ifde‡
SSBM


21 
	#P_NAME_LEN
 22

	)

22 
	#P_MFG_LEN
 6

	)

23 
	#P_COLOR_LEN
 3

	)

24 
	#P_COLOR_MAX
 11

	)

25 
	#P_TYPE_MAX
 25

	)

26 
	#P_CAT_LEN
 7

	)

27 
	#P_CAT_MIN
 1

	)

28 
	#P_CAT_MAX
 5

	)

29 
	#P_CAT_SD
 97

	)

30 
	#S_NATION_NAME_LEN
 15

	)

31 
	#S_REGION_NAME_LEN
 12

	)

32 
	#C_NATION_NAME_LEN
 15

	)

33 
	#C_REGION_NAME_LEN
 12

	)

34 
	#C_NAT_SD
 16

	)

35 
	#C_REG_SD
 3

	)

36 
	#O_SHIP_STRU_LEN
 25

	)

37 
	#O_SHIP_MODE_LEN
 10

	)

38 
	#O_SHIP_PRIO_LEN
 1

	)

39 
	#D_DATE_LEN
 18

	)

40 
	#D_DAYWEEK_LEN
 9

	)

41 
	#D_YEARMONTH_LEN
 7

	)

42 
	#D_SEASON_LEN
 12

	)

43 
	#D_MONTH_LEN
 9

	)

44 
	#D_STARTDATE
 694245661

	)

45 
	#NAMTION_BRIEF_LEN
 9

	)

46 
	#CITY_CODE_SEED
 15

	)

47 
	#NUM_DAYS
 2556

	)

48 
	#NUM_SEASONS
 5

	)

49 
	#NUM_HOLIDAYS
 10

	)

50 
	#CITY_FIX
 10

	)

53 
	#P_NAME_LEN
 55

	)

54 
	#P_MFG_LEN
 25

	)

58 
	#P_BRND_LEN
 10

	)

60 #ifde‡
SSBM


61 
	#P_TYPE_LEN
 12

	)

65 
	#P_TYPE_LEN
 25

	)

69 
	#P_CNTR_LEN
 10

	)

70 
	#P_CMNT_LEN
 14

	)

71 
	#P_CMNT_MAX
 23

	)

72 
	#P_CAT_SEED
 25

	)

74 
	#S_NAME_LEN
 25

	)

76 #ifde‡
SSBM


77 
	#S_ADDR_LEN
 15

	)

78 
	#S_ADDR_MAX
 25

	)

81 
	#S_ADDR_LEN
 25

	)

82 
	#S_ADDR_MAX
 40

	)

85 
	#S_CMNT_LEN
 63

	)

86 
	#S_CMNT_MAX
 101

	)

87 
	#PS_CMNT_LEN
 124

	)

88 
	#PS_CMNT_MAX
 199

	)

90 #ifde‡
SSBM


91 
	#C_NAME_LEN
 25

	)

92 
	#C_MSEG_MIN
 1

	)

93 
	#C_MSEG_MAX
 5

	)

94 
	#C_ADDR_LEN
 15

	)

95 
	#C_ADDR_MAX
 25

	)

97 
	#C_NAME_LEN
 18

	)

98 
	#C_ADDR_LEN
 25

	)

99 
	#C_ADDR_MAX
 40

	)

102 
	#C_MSEG_LEN
 10

	)

103 
	#C_CMNT_LEN
 73

	)

104 
	#C_CMNT_MAX
 117

	)

106 #ifde‡
SSBM


107 
	#O_OPRIO_LEN
 8

	)

110 
	#O_OPRIO_LEN
 15

	)

114 
	#O_CLRK_LEN
 15

	)

115 
	#O_CMNT_LEN
 49

	)

116 
	#O_CMNT_MAX
 79

	)

117 
	#L_CMNT_LEN
 27

	)

118 
	#L_CMNT_MAX
 44

	)

119 
	#L_INST_LEN
 25

	)

120 
	#L_SMODE_LEN
 10

	)

121 
	#T_ALPHA_LEN
 10

	)

122 
	#DATE_LEN
 13

	)

123 
	#NATION_LEN
 25

	)

124 
	#REGION_LEN
 25

	)

125 
	#PHONE_LEN
 15

	)

127 #ifde‡
SSBM


128 
	#MAXAGG_LEN
 10

	)

131 
	#MAXAGG_LEN
 20

	)

135 
	#P_CMNT_SD
 6

	)

136 
	#PS_CMNT_SD
 9

	)

137 
	#O_CMNT_SD
 12

	)

138 
	#C_ADDR_SD
 26

	)

139 
	#C_CMNT_SD
 31

	)

140 
	#S_ADDR_SD
 32

	)

141 
	#S_CMNT_SD
 36

	)

142 
	#L_CMNT_SD
 25

	)

147 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/dbgen/tpcd.h

10 #i‚de‡
SSB_DBGEN_TPCD_H


11 
	#SSB_DBGEN_TPCD_H


	)

13 
	~"utû/«me•a˚.h
"

15 
ENTER_NAMESPACE
(
dbgíssb
);

17 
	#DFLT
 0x0001

	)

18 
	#OUTPUT
 0x0002

	)

19 
	#EXPLAIN
 0x0004

	)

20 
	#DBASE
 0x0008

	)

21 
	#VERBOSE
 0x0010

	)

22 
	#TIMING
 0x0020

	)

23 
	#LOG
 0x0040

	)

24 
	#QUERY
 0x0080

	)

25 
	#REFRESH
 0x0100

	)

26 
	#ANSI
 0x0200

	)

27 
	#SEED
 0x0400

	)

28 
	#COMMENT
 0x0800

	)

29 
	#INIT
 0x1000

	)

30 
	#TERMINATE
 0x2000

	)

31 
	#DFLT_NUM
 0x4000

	)

36 
	#VTAG
 ':'

	)

37 
	#oÂ
 
°dout


	)

38 
	#QDIR_TAG
 "DSS_QUERY"

	)

39 
	#QDIR_DFLT
 "."

	)

44 #ifde‡
DB2


45 
	#GEN_QUERY_PLAN
 "SET CURRENT EXPLAIN SNAPSHOT ON;"

	)

46 
	#START_TRAN
 ""

	)

47 
	#END_TRAN
 "COMMIT WORK;"

	)

48 
	#SET_OUTPUT
 ""

	)

49 
	#SET_ROWCOUNT
 "--#SET ROWS_FETCH %d\n"

	)

50 
	#SET_DBASE
 "CONNECT TO %†;\n"

	)

53 #ifde‡
INFORMIX


54 
	#GEN_QUERY_PLAN
 "SET EXPLAIN ON;"

	)

55 
	#START_TRAN
 "BEGIN WORK;"

	)

56 
	#END_TRAN
 "COMMIT WORK;"

	)

57 
	#SET_OUTPUT
 "OUTPUT TO "

	)

58 
	#SET_ROWCOUNT
 "FIRST %d"

	)

59 
	#SET_DBASE
 "d©aba£ %†;\n"

	)

62 #ifde‡ 
SQLSERVER


63 
	#GEN_QUERY_PLAN
 "£àshow∂™ on\n£àn€xe¯⁄\ngo\n"

	)

64 
	#START_TRAN
 "begöÅønß˘i⁄\ngo\n"

	)

65 
	#END_TRAN
 "commôÅønß˘i⁄\ngo\n"

	)

66 
	#SET_OUTPUT
 ""

	)

67 
	#SET_ROWCOUNT
 "£àrowcou¡ %d\ngo\n\n"

	)

68 
	#SET_DBASE
 "u£ %s\ngo\n"

	)

71 #ifde‡ 
SYBASE


72 
	#GEN_QUERY_PLAN
 "£àshow∂™ on\n£àn€xe¯⁄\ngo\n"

	)

73 
	#START_TRAN
 "begöÅønß˘i⁄\ngo\n"

	)

74 
	#END_TRAN
 "commôÅønß˘i⁄\ngo\n"

	)

75 
	#SET_OUTPUT
 ""

	)

76 
	#SET_ROWCOUNT
 "£àrowcou¡ %d\ngo\n\n"

	)

77 
	#SET_DBASE
 "u£ %s\ngo\n"

	)

80 #ifde‡
TDAT


81 
	#GEN_QUERY_PLAN
 "EXPLAIN"

	)

82 
	#START_TRAN
 "BEGIN TRANSACTION"

	)

83 
	#END_TRAN
 "END TRANSACTION"

	)

84 
	#SET_OUTPUT
 ".SET FORMAT OFF\n.EXPORT REPORT fûe="

	)

85 
	#SET_ROWCOUNT
 ".SET RETCANCEL ON\n.SET RETLIMIT %d\n"

	)

86 
	#SET_DBASE
 ".LOGON %s\n"

	)

89 
	#MAX_VARS
 8

	)

90 
	#QLEN_MAX
 2048

	)

91 
	#QUERIES_PER_SET
 22

	)

92 
	#MAX_PIDS
 50

	)

94 
EXTERN
 
	gÊags
;

95 
EXTERN
 
	gs_˙t
;

96 
EXTERN
 *
	gosuff
;

97 
EXTERN
 
	g°ªam
;

98 
EXTERN
 *
	glfûe
;

99 
EXTERN
 *
	gifûe
;

100 
EXTERN
 *
	gtfûe
;

102 
	#MAX_PERMUTE
 41

	)

103 #ifde‡
DECLARER


104 
	grow˙t_dÊt
[
QUERIES_PER_SET
 + 1] =

106 
	grow˙t
;

107 
	#SEQUENCE
(
°ªam
, 
quîy
Ë
≥rmuèti⁄
[°ªam % 
MAX_PERMUTE
][quîy - 1]

	)

109 
row˙t_dÊt
[];

110 
row˙t
;

113 
EXIT_NAMESPACE
(
dbgíssb
);

	@include/workload/ssb/shore_ssb_client.h

31 #i‚de‡
__SHORE_SSB_CLIENT_H


32 
	#__SHORE_SSB_CLIENT_H


	)

34 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

36 
	~"w‹klﬂd/ssb/ssb_c⁄°.h
"

37 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

40 
ENTER_NAMESPACE
(
ssb
);

42 
usög
 
«me•a˚
 
	gsh‹e
;

53 ˛as†
	cba£löe_ssb_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


55 
¥iv©e
:

56 
_£lid
;

57 
åx_w‹kî_t
* 
	m_w‹kî
;

58 
	m_qf
;

60 
	mpublic
:

62 
	$ba£löe_ssb_˛õ¡_t
() { }

64 
	`ba£löe_ssb_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eSSBEnv
* 
ív
,

65 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

66 c⁄° 
numOfTrxs
,

67 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
);

69 ~
	$ba£löe_ssb_˛õ¡_t
(Ë{ 
	}
}

72 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

76 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

81 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/shore_ssb_env.h

31 #i‚de‡
__SHORE_SSB_ENV_H


32 
	#__SHORE_SSB_ENV_H


	)

34 
	~"sm_vas.h
"

35 
	~"utû.h
"

37 
	~"sm/sh‹e/sh‹e_ív.h
"

38 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

39 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

41 
	~"w‹klﬂd/ssb/ssb_c⁄°.h
"

43 
	~"w‹klﬂd/ssb/sh‹e_ssb_schema_m™.h
"

44 
	~"w‹klﬂd/ssb/ssb_öput.h
"

46 #ifde‡
CFG_QPIPE


47 
	~"qpùe.h
"

50 
	~<m≠
>

52 
usög
 
«me•a˚
 
	gsh‹e
;

55 
ENTER_NAMESPACE
(
ssb
);

58 
usög
 
	g°d
::
m≠
;

65 c⁄° 
	gSSB_SCALING_FACTOR
 = 1;

71 c⁄° 
	gLO_POP_UNIT
 = 10;

81 
	sSh‹eSSBTrxCou¡


83 
uöt
 
	mqd©e
;

84 
uöt
 
	mq∑π
;

85 
uöt
 
	mqsuµlõr
;

86 
uöt
 
	mqcu°omî
;

87 
uöt
 
	mqlöe‹dî
;

88 
uöt
 
	mqã°
;

89 
uöt
 
	mq1_1
;

90 
uöt
 
	mq1_2
;

91 
uöt
 
	mq1_3
;

92 
uöt
 
	mq2_1
;

93 
uöt
 
	mq2_2
;

94 
uöt
 
	mq2_3
;

95 
uöt
 
	mq3_1
;

96 
uöt
 
	mq3_2
;

97 
uöt
 
	mq3_3
;

98 
uöt
 
	mq3_4
;

99 
uöt
 
	mq4_1
;

100 
uöt
 
	mq4_2
;

101 
uöt
 
	mq4_3
;

103 
uöt
 
	mqNP
;

106 
	mSh‹eSSBTrxCou¡
& 
	m›î©‹
+=(
Sh‹eSSBTrxCou¡
 c⁄°& 
rhs
) {

107 
qd©e
 +
rhs
.qdate;

108 
	mq∑π
 +
rhs
.
q∑π
;

109 
	mqsuµlõr
 +
rhs
.
qsuµlõr
;

110 
	mqcu°omî
 +
rhs
.
qcu°omî
;

111 
	mqlöe‹dî
 +
rhs
.
qlöe‹dî
;

112 
	mqã°
 +
rhs
.
qã°
;

113 
	mq1_1
 +
rhs
.
q1_1
;

114 
	mq1_2
 +
rhs
.
q1_2
;

115 
	mq1_3
 +
rhs
.
q1_3
;

116 
	mq2_1
 +
rhs
.
q2_1
;

117 
	mq2_2
 +
rhs
.
q2_2
;

118 
	mq2_3
 +
rhs
.
q2_3
;

119 
	mq3_1
 +
rhs
.
q3_1
;

120 
	mq3_2
 +
rhs
.
q3_2
;

121 
	mq3_3
 +
rhs
.
q3_3
;

122 
	mq3_4
 +
rhs
.
q3_4
;

123 
	mq4_1
 +
rhs
.
q4_1
;

124 
	mq4_2
 +
rhs
.
q4_2
;

125 
	mq4_3
 +
rhs
.
q4_3
;

127 
	mqNP
 +
rhs
.
qNP
;

129  (*
	mthis
);

132 
	mSh‹eSSBTrxCou¡
& 
	m›î©‹
-=(
Sh‹eSSBTrxCou¡
 c⁄°& 
rhs
) {

133 
qd©e
 -
rhs
.qdate;

134 
	mq∑π
 -
rhs
.
q∑π
;

135 
	mqsuµlõr
 -
rhs
.
qsuµlõr
;

136 
	mqcu°omî
 -
rhs
.
qcu°omî
;

137 
	mqlöe‹dî
 -
rhs
.
qlöe‹dî
;

138 
	mqã°
 -
rhs
.
qã°
;

139 
	mq1_1
 -
rhs
.
q1_1
;

140 
	mq1_2
 -
rhs
.
q1_2
;

141 
	mq1_3
 -
rhs
.
q1_3
;

142 
	mq2_1
 -
rhs
.
q2_1
;

143 
	mq2_2
 -
rhs
.
q2_2
;

144 
	mq2_3
 -
rhs
.
q2_3
;

145 
	mq3_1
 -
rhs
.
q3_1
;

146 
	mq3_2
 -
rhs
.
q3_2
;

147 
	mq3_3
 -
rhs
.
q3_3
;

148 
	mq3_4
 -
rhs
.
q3_4
;

149 
	mq4_1
 -
rhs
.
q4_1
;

150 
	mq4_2
 -
rhs
.
q4_2
;

151 
	mq4_3
 -
rhs
.
q4_3
;

153 
	mqNP
 -
rhs
.
qNP
;

155  (*
	mthis
);

160 
uöt
 
tŸÆ
() const {

162 (
	mqlöe‹dî
+
	mqcu°omî
+
	mqsuµlõr
+
	mq∑π
+
	mqd©e
+
	mqã°
+

163 
	mq1_1
+
	mq1_2
+
	mq1_3
+
	mq2_1
+
	mq2_2
+
	mq2_3
+
	mq3_1
+
	mq3_2
+
	mq3_3
+
	mq3_4
+
	mq4_1
+
	mq4_2
+
	mq4_3
+
	mqNP
);

169 
	sSh‹eSSBTrxSèts


171 
Sh‹eSSBTrxCou¡
 
	m©ãm±ed
;

172 
Sh‹eSSBTrxCou¡
 
	mÁûed
;

173 
Sh‹eSSBTrxCou¡
 
	mdódlocked
;

175 
	mSh‹eSSBTrxSèts
& 
	m›î©‹
+=(
Sh‹eSSBTrxSèts
 c⁄°& 
Ÿhî
) {

176 
©ãm±ed
 +
Ÿhî
.attempted;

177 
	mÁûed
 +
Ÿhî
.
Áûed
;

178 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

179  (*
	mthis
);

182 
	mSh‹eSSBTrxSèts
& 
	m›î©‹
-=(
Sh‹eSSBTrxSèts
 c⁄°& 
Ÿhî
) {

183 
©ãm±ed
 -
Ÿhî
.attempted;

184 
	mÁûed
 -
Ÿhî
.
Áûed
;

185 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

186  (*
	mthis
);

200 ˛as†
	cSh‹eSSBEnv
 : 
public
 
Sh‹eEnv


202 
public
:

203 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eSSBTrxSèts
*> 
	t°©m≠_t
;

205 
˛ass
 
	mèbÀ_buûdî_t
;

206 
˛ass
 
	mèbÀ_¸ót‹_t
;

207 
	mcheckpoöãr_t
;

209 
	m¥iv©e
:

211 
w_rc_t
 
_po°_öô_im∂
();

216 
w_rc_t
 
_gí_⁄e_suµlõr
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

217 
w_rc_t
 
_gí_⁄e_d©e
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

218 
w_rc_t
 
_gí_⁄e_∑π
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

219 
w_rc_t
 
_gí_⁄e_cu°omî
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

220 
w_rc_t
 
_gí_⁄e_löe‹dî
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

225 
	mpublic
:

227 
Sh‹eSSBEnv
();

228 
	mvútuÆ
 ~
Sh‹eSSBEnv
();

232 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

233 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

234 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

235 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

236 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

238 
vútuÆ
 
po°_öô
();

239 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

241 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

243 
vútuÆ
 
c⁄f
();

244 
vútuÆ
 
°¨t
();

245 
vútuÆ
 
°›
();

246 
vútuÆ
 
	$öfo
() const;

247 
vútuÆ
 
	`°©i°ics
();

249 
w_rc_t
 
	`w¨mup
();

250 
w_rc_t
 
	`check_c⁄si°ícy
();

252 
	`dump
();

254 
vútuÆ
 
	`¥öt_throughput
(c⁄° 
iQuîõdSF
,

255 c⁄° 
iS¥ód
,

256 c⁄° 
iNumOfThªads
,

257 c⁄° 
dñay
,

258 c⁄° 
ul⁄g_t
 
mioch
,

259 c⁄° 
avg˝uußge
);

264 
w_rc_t
 
	`lﬂdd©a
();

267 
	`DECLARE_TABLE
(
∑π_t
,
∑π_m™_im∂
,
∑π
);

268 
	`DECLARE_TABLE
(
suµlõr_t
,
suµlõr_m™_im∂
,
suµlõr
);

269 
	`DECLARE_TABLE
(
d©e_t
,
d©e_m™_im∂
,
d©e
);

270 
	`DECLARE_TABLE
(
cu°omî_t
,
cu°omî_m™_im∂
,
cu°omî
);

271 
	`DECLARE_TABLE
(
löe‹dî_t
,
löe‹dî_m™_im∂
,
löe‹dî
);

276 
w_rc_t
 
	`run_⁄e_x˘
(
Reque°
* 
¥eque°
);

279 
	`DECLARE_TRX
(
q∑π
);

280 
	`DECLARE_TRX
(
qd©e
);

281 
	`DECLARE_TRX
(
qsuµlõr
);

282 
	`DECLARE_TRX
(
qcu°omî
);

283 
	`DECLARE_TRX
(
qlöe‹dî
);

284 
	`DECLARE_TRX
(
qã°
);

285 
	`DECLARE_TRX
(
q1_1
);

286 
	`DECLARE_TRX
(
q1_2
);

287 
	`DECLARE_TRX
(
q1_3
);

288 
	`DECLARE_TRX
(
q2_1
);

289 
	`DECLARE_TRX
(
q2_2
);

290 
	`DECLARE_TRX
(
q2_3
);

291 
	`DECLARE_TRX
(
q3_1
);

292 
	`DECLARE_TRX
(
q3_2
);

293 
	`DECLARE_TRX
(
q3_3
);

294 
	`DECLARE_TRX
(
q3_4
);

295 
	`DECLARE_TRX
(
q4_1
);

296 
	`DECLARE_TRX
(
q4_2
);

297 
	`DECLARE_TRX
(
q4_3
);

300 
	`DECLARE_TRX
(
qNP
);

303 
	`DECLARE_TRX
(
p›uœã_ba£löe
);

304 
	`DECLARE_TRX
(
p›uœã_some_löe‹dîs
);

309 #ifde‡
CFG_QPIPE


310 
¥iv©e
:

311 
gu¨d
<
pﬁicy_t
> 
_sched_pﬁicy
;

313 
public
:

314 
pﬁicy_t
* 
	`gë_sched_pﬁicy
();

315 
pﬁicy_t
* 
	`£t_sched_pﬁicy
(c⁄° * 
•ﬁicy
);

316 
w_rc_t
 
	`run_⁄e_qpùe_x˘
(
Reque°
* 
¥eque°
);

319 
	`DECLARE_QPIPE_TRX
(
q∑π
);

320 
	`DECLARE_QPIPE_TRX
(
qd©e
);

321 
	`DECLARE_QPIPE_TRX
(
qsuµlõr
);

322 
	`DECLARE_QPIPE_TRX
(
qcu°omî
);

323 
	`DECLARE_QPIPE_TRX
(
qlöe‹dî
);

324 
	`DECLARE_QPIPE_TRX
(
qã°
);

325 
	`DECLARE_QPIPE_TRX
(
q1_1
);

326 
	`DECLARE_QPIPE_TRX
(
q1_2
);

327 
	`DECLARE_QPIPE_TRX
(
q1_3
);

328 
	`DECLARE_QPIPE_TRX
(
q2_1
);

329 
	`DECLARE_QPIPE_TRX
(
q2_2
);

330 
	`DECLARE_QPIPE_TRX
(
q2_3
);

331 
	`DECLARE_QPIPE_TRX
(
q3_1
);

332 
	`DECLARE_QPIPE_TRX
(
q3_2
);

333 
	`DECLARE_QPIPE_TRX
(
q3_3
);

334 
	`DECLARE_QPIPE_TRX
(
q3_4
);

335 
	`DECLARE_QPIPE_TRX
(
q4_1
);

336 
	`DECLARE_QPIPE_TRX
(
q4_2
);

337 
	`DECLARE_QPIPE_TRX
(
q4_3
);

342 
vútuÆ
 
	`ív_thªad_öô
();

343 
vútuÆ
 
	`ív_thªad_föi
();

346 
°©m≠_t
 
_°©m≠
;

349 
Sh‹eSSBTrxSèts
 
_œ°_°©s
;

350 
vútuÆ
 
	`ª£t_°©s
();

351 
Sh‹eSSBTrxSèts
 
	`_gë_°©s
();

353 
	}
};

356 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/shore_ssb_schema.h

32 #i‚de‡
__SHORE_SSB_SCHEMA_H


33 
	#__SHORE_SSB_SCHEMA_H


	)

35 
	~<m©h.h
>

37 
	~"sm_vas.h
"

38 
	~"utû.h
"

40 
	~"w‹klﬂd/ssb/ssb_c⁄°.h
"

41 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

46 
ENTER_NAMESPACE
(
ssb
);

57 
DECLARE_TABLE_SCHEMA_PD
(
suµlõr_t
);

58 
DECLARE_TABLE_SCHEMA_PD
(
∑π_t
);

59 
DECLARE_TABLE_SCHEMA_PD
(
d©e_t
);

60 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_t
);

61 
DECLARE_TABLE_SCHEMA_PD
(
löe‹dî_t
);

64 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/shore_ssb_schema_man.h

32 #i‚de‡
__SHORE_SSB_SCHEMA_MANAGER_H


33 
	#__SHORE_SSB_SCHEMA_MANAGER_H


	)

35 
	~"w‹klﬂd/ssb/ssb_°ru˘.h
"

36 
	~"w‹klﬂd/ssb/sh‹e_ssb_schema.h
"

39 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
ssb
);

53 
˛ass
 
	g∑π_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
∑π_t
>

55 
èbÀ_row_t
 
	t∑π_tu∂e
;

57 
	gpublic
:

59 
∑π_m™_im∂
(
∑π_t
* 
aP¨tDesc
)

60 : 
èbÀ_m™_im∂
<
∑π_t
>(
aP¨tDesc
)

63 ~
∑π_m™_im∂
() { }

65 
w_rc_t
 
p_ödex_¥obe
(
ss_m
* 
db
,

66 
∑π_tu∂e
* 
±u∂e
,

67 c⁄° 
p_∑πkey
);

72 
˛ass
 
	gd©e_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
d©e_t
>

74 
èbÀ_row_t
 
	td©e_tu∂e
;

76 
	gpublic
:

78 
d©e_m™_im∂
(
d©e_t
* 
aP¨tDesc
)

79 : 
èbÀ_m™_im∂
<
d©e_t
>(
aP¨tDesc
)

82 ~
d©e_m™_im∂
() { }

84 
w_rc_t
 
d_ödex_¥obe
(
ss_m
* 
db
,

85 
d©e_tu∂e
* 
±u∂e
,

86 c⁄° 
d_d©ekey
);

92 
˛ass
 
	gsuµlõr_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
suµlõr_t
>

94 
èbÀ_row_t
 
	tsuµlõr_tu∂e
;

96 
	gpublic
:

98 
suµlõr_m™_im∂
(
suµlõr_t
* 
aSuµlõrDesc
)

99 : 
èbÀ_m™_im∂
<
suµlõr_t
>(
aSuµlõrDesc
)

103 ~
suµlõr_m™_im∂
()

108 
w_rc_t
 
s_ödex_¥obe
(
ss_m
* 
db
,

109 
suµlõr_tu∂e
* 
±u∂e
,

110 c⁄° 
s_suµkey
);

117 
˛ass
 
	gcu°omî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_t
>

119 
èbÀ_row_t
 
	tcu°omî_tu∂e
;

121 
	gpublic
:

123 
cu°omî_m™_im∂
(
cu°omî_t
* 
aCu°omîDesc
)

124 : 
èbÀ_m™_im∂
<
cu°omî_t
>(
aCu°omîDesc
)

127 ~
cu°omî_m™_im∂
() { }

140 
w_rc_t
 
c_ödex_¥obe
(
ss_m
* 
db
,

141 
cu°omî_tu∂e
* 
±u∂e
,

142 c⁄° 
c_cu°key
);

157 
˛ass
 
	glöe‹dî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
löe‹dî_t
>

159 
èbÀ_row_t
 
	tlöe‹dî_tu∂e
;

161 
	gpublic
:

163 
löe‹dî_m™_im∂
(
löe‹dî_t
* 
aLöe‹dîDesc
)

164 : 
èbÀ_m™_im∂
<
löe‹dî_t
>(
aLöe‹dîDesc
)

168 ~
löe‹dî_m™_im∂
()

173 
w_rc_t
 
lo_ödex_¥obe
(
ss_m
* 
db
,

174 
löe‹dî_tu∂e
* 
±u∂e
,

175 c⁄° 
lo_‹dîkey
,

176 c⁄° 
lo_löíumbî
);

207 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/ssb_const.h

31 #i‚de‡
__SSB_CONST_H


32 
	#__SSB_CONST_H


	)

35 
	~"utû/«me•a˚.h
"

38 
ENTER_NAMESPACE
(
ssb
);

56 c⁄° 
	gSSB_PART_FCOUNT
 = 9;

57 c⁄° 
	gSSB_SUPPLIER_FCOUNT
 = 7;

58 c⁄° 
	gSSB_DATE_FCOUNT
 = 17;

59 c⁄° 
	gSSB_CUSTOMER_FCOUNT
 = 8;

60 c⁄° 
	gSSB_LINEORDER_FCOUNT
 = 17;

64 c⁄° 
	gSHORE_SSB_TABLES
 = 5;

70 c⁄° 
	gXCT_SSB_MIX
 = 80;

71 c⁄° 
	gXCT_SSB_Q1_1
 = 81;

72 c⁄° 
	gXCT_SSB_Q1_2
 = 82;

73 c⁄° 
	gXCT_SSB_Q1_3
 = 83;

74 c⁄° 
	gXCT_SSB_Q2_1
 = 84;

75 c⁄° 
	gXCT_SSB_Q2_2
 = 85;

76 c⁄° 
	gXCT_SSB_Q2_3
 = 86;

77 c⁄° 
	gXCT_SSB_Q3_1
 = 87;

78 c⁄° 
	gXCT_SSB_Q3_2
 = 88;

79 c⁄° 
	gXCT_SSB_Q3_3
 = 89;

80 c⁄° 
	gXCT_SSB_Q3_4
 = 90;

81 c⁄° 
	gXCT_SSB_Q4_1
 = 91;

82 c⁄° 
	gXCT_SSB_Q4_2
 = 92;

83 c⁄° 
	gXCT_SSB_Q4_3
 = 93;

84 c⁄° 
	gXCT_SSB_QPART
 = 94;

85 c⁄° 
	gXCT_SSB_QDATE
 = 95;

86 c⁄° 
	gXCT_SSB_QSUPPLIER
 = 96;

87 c⁄° 
	gXCT_SSB_QCUSTOMER
 = 97;

88 c⁄° 
	gXCT_SSB_QLINEORDER
 = 98;

89 c⁄° 
	gXCT_SSB_QTEST
 = 99;

92 c⁄° 
	gXCT_QPIPE_SSB_MIX
 = 1080;

95 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/ssb_input.h

32 #i‚de‡
__SSB_INPUT_H


33 
	#__SSB_INPUT_H


	)

35 
	~"w‹klﬂd/ssb/ssb_c⁄°.h
"

36 
	~"w‹klﬂd/ssb/ssb_°ru˘.h
"

39 
ENTER_NAMESPACE
(
ssb
);

43 
	sqcu°omî_öput_t
 { };

44 
	sqsuµlõr_öput_t
 { };

45 
	sq∑π_öput_t
 { };

46 
	sqd©e_öput_t
 { };

47 
	sqlöe‹dî_öput_t
 { };

48 
	sqã°_öput_t
 { };

63 
qcu°omî_öput_t
 
¸óã_qcu°omî_öput
 (c⁄° 
sf
, c⁄° 
•ecificWH
);

64 
qsuµlõr_öput_t
 
¸óã_qsuµlõr_öput
 (c⁄° 
sf
, c⁄° 
•ecificWH
);

65 
qd©e_öput_t
 
¸óã_qd©e_öput
 (c⁄° 
sf
, c⁄° 
•ecificWH
);

66 
q∑π_öput_t
 
¸óã_q∑π_öput
 (c⁄° 
sf
, c⁄° 
•ecificWH
);

67 
qlöe‹dî_öput_t
 
¸óã_qlöe‹dî_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

68 
qã°_öput_t
 
¸óã_qã°_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

111 
	sq1_1_öput_t


113 
	md_yór
;

114 
	mlo_discou¡_lo
;

115 
	mlo_discou¡_hi
;

116 
	mlo_qu™tôy
;

118 
	mq1_1_öput_t
& 
	m›î©‹
=(c⁄° 
q1_1_öput_t
& 
rhs
);

121 
q1_1_öput_t
 
¸óã_q1_1_öput
(c⁄° 
sf
,

122 c⁄° 
•ecificWH
 = 0);

130 
	sq1_2_öput_t


132 
	md_yórm⁄thnum
;

133 
	mlo_discou¡_lo
;

134 
	mlo_discou¡_hi
;

135 
	mlo_qu™tôy_lo
;

136 
	mlo_qu™tôy_hi
;

138 
	mq1_2_öput_t
& 
	m›î©‹
=(c⁄° 
q1_2_öput_t
& 
rhs
);

141 
q1_2_öput_t
 
¸óã_q1_2_öput
(c⁄° 
sf
,

142 c⁄° 
•ecificWH
 = 0);

150 
	sq1_3_öput_t


152 
	md_wìknumöyór
;

153 
	md_yór
;

154 
	mlo_discou¡_lo
;

155 
	mlo_discou¡_hi
;

156 
	mlo_qu™tôy_lo
;

157 
	mlo_qu™tôy_hi
;

159 
	mq1_3_öput_t
& 
	m›î©‹
=(c⁄° 
q1_3_öput_t
& 
rhs
);

162 
q1_3_öput_t
 
¸óã_q1_3_öput
(c⁄° 
sf
,

163 c⁄° 
•ecificWH
 = 0);

171 
	sq2_1_öput_t


173 
	mp_ˇãg‹y
[8];

174 
	ms_ªgi⁄
[13];

176 
	mq2_1_öput_t
& 
	m›î©‹
=(c⁄° 
q2_1_öput_t
& 
rhs
);

179 
q2_1_öput_t
 
¸óã_q2_1_öput
(c⁄° 
sf
,

180 c⁄° 
•ecificWH
 = 0);

188 
	sq2_2_öput_t


190 
	mp_bønd_1
[10];

191 
	mp_bønd_2
[10];

192 
	ms_ªgi⁄
[13];

194 
	mq2_2_öput_t
& 
	m›î©‹
=(c⁄° 
q2_2_öput_t
& 
rhs
);

197 
q2_2_öput_t
 
¸óã_q2_2_öput
(c⁄° 
sf
,

198 c⁄° 
•ecificWH
 = 0);

206 
	sq2_3_öput_t


208 
	mp_bønd
[10];

209 
	ms_ªgi⁄
[13];

211 
	mq2_3_öput_t
& 
	m›î©‹
=(c⁄° 
q2_3_öput_t
& 
rhs
);

214 
q2_3_öput_t
 
¸óã_q2_3_öput
(c⁄° 
sf
,

215 c⁄° 
•ecificWH
 = 0);

223 
	sq3_1_öput_t


225 
	m_yór_lo
;

226 
	m_yór_hi
;

227 
	mc_ªgi⁄
[13];

228 
	ms_ªgi⁄
[13];

230 
	mq3_1_öput_t
& 
	m›î©‹
=(c⁄° 
q3_1_öput_t
& 
rhs
);

233 
q3_1_öput_t
 
¸óã_q3_1_öput
(c⁄° 
sf
,

234 c⁄° 
•ecificWH
 = 0);

242 
	sq3_2_öput_t


244 
	m_yór_lo
;

245 
	m_yór_hi
;

246 
	m_«ti⁄
[16];

248 
	mq3_2_öput_t
& 
	m›î©‹
=(c⁄° 
q3_2_öput_t
& 
rhs
);

251 
q3_2_öput_t
 
¸óã_q3_2_öput
(c⁄° 
sf
,

252 c⁄° 
•ecificWH
 = 0);

261 
	sq3_3_öput_t


263 
	m_yór_lo
;

264 
	m_yór_hi
;

265 
	mc_côy_1
[11];

266 
	mc_côy_2
[11];

267 
	ms_côy_1
[11];

268 
	ms_côy_2
[11];

271 
	mq3_3_öput_t
& 
	m›î©‹
=(c⁄° 
q3_3_öput_t
& 
rhs
);

274 
q3_3_öput_t
 
¸óã_q3_3_öput
(c⁄° 
sf
,

275 c⁄° 
•ecificWH
 = 0);

283 
	sq3_4_öput_t


285 
	mc_côy_1
[11];

286 
	mc_côy_2
[11];

287 
	ms_côy_1
[11];

288 
	ms_côy_2
[11];

289 
	md_yórm⁄th
[8];

292 
	mq3_4_öput_t
& 
	m›î©‹
=(c⁄° 
q3_4_öput_t
& 
rhs
);

295 
q3_4_öput_t
 
¸óã_q3_4_öput
(c⁄° 
sf
,

296 c⁄° 
•ecificWH
 = 0);

304 
	sq4_1_öput_t


306 
	mc_ªgi⁄
[13];

307 
	ms_ªgi⁄
[13];

308 
	mp_mfgr_1
[7];

309 
	mp_mfgr_2
[7];

312 
	mq4_1_öput_t
& 
	m›î©‹
=(c⁄° 
q4_1_öput_t
& 
rhs
);

315 
q4_1_öput_t
 
¸óã_q4_1_öput
(c⁄° 
sf
,

316 c⁄° 
•ecificWH
 = 0);

324 
	sq4_2_öput_t


326 
	md_yór_1
;

327 
	md_yór_2
;

328 
	mc_ªgi⁄
[13];

329 
	ms_ªgi⁄
[13];

330 
	mp_mfgr_1
[7];

331 
	mp_mfgr_2
[7];

334 
	mq4_2_öput_t
& 
	m›î©‹
=(c⁄° 
q4_2_öput_t
& 
rhs
);

337 
q4_2_öput_t
 
¸óã_q4_2_öput
(c⁄° 
sf
,

338 c⁄° 
•ecificWH
 = 0);

346 
	sq4_3_öput_t


348 
	md_yór_1
;

349 
	md_yór_2
;

350 
	ms_«ti⁄
[16];

351 
	mp_ˇãg‹y
[8];

354 
	mq4_3_öput_t
& 
	m›î©‹
=(c⁄° 
q4_3_öput_t
& 
rhs
);

357 
q4_3_öput_t
 
¸óã_q4_3_öput
(c⁄° 
sf
,

358 c⁄° 
•ecificWH
 = 0);

367 
	sqNP_öput_t


369 
	m_cu°id
;

371 
	mqNP_öput_t
& 
	m›î©‹
=(c⁄° 
qNP_öput_t
& 
rhs
);

374 
qNP_öput_t
 
¸óã_qNP_öput
(c⁄° 
sf
,

375 c⁄° 
•ecificWH
 = 0);

386 
	sp›uœã_ba£löe_öput_t


388 
	m_sf
;

389 
	m_lﬂdî_cou¡
;

390 
	m_divis‹
;

391 
	m_löe‹dî_≥r_thªad
;

396 
	sp›uœã_some_löe‹dîs_öput_t


398 
	m_‹dîid
;

401 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/ssb_random.h

34 #i‚de‡
__SSB_COMMON_H


35 
	#__SSB_COMMON_H


	)

37 
	~"utû.h
"

40 
ENTER_NAMESPACE
(
ssb
);

54 
NUR™d
(
A
, 
low
, 
high
);

56 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/ssb_struct.h

34 #i‚de‡
__SSB_STRUCT_H


35 
	#__SSB_STRUCT_H


	)

37 
	~<c°dlib
>

38 
	~<uni°d.h
>

39 
	~<sys/time.h
>

40 
	~"utû.h
"

43 
ENTER_NAMESPACE
(
ssb
);

47 
	#STRSIZE
(
x
Ë(x+1)

	)

52 
	essb_l_shùmode
 {

53 
	mREG_AIR
,

54 
	mAIR
,

55 
	mRAIL
,

56 
	mTRUCK
,

57 
	mMAIL
,

58 
	mFOB
,

59 
	mSHIP
,

60 
	mEND_SHIPMODE


63 
	essb_«ti⁄
{

64 
	mALGERIA
,

65 
	mARGENTINA
,

66 
	mBRAZIL
,

67 
	mCANADA
,

68 
	mCHINA
,

69 
	mEGYPT
,

70 
	mETHIOPIA
,

71 
	mFRANCE
,

72 
	mGERMANY
,

73 
	mINDIA
,

74 
	mINDONESIA
,

75 
	mIRAN
,

76 
	mIRAQ
,

77 
	mJAPAN
,

78 
	mJORDAN
,

79 
	mKENYA
,

80 
	mMOROCCO
,

81 
	mMOZAMBIQUE
,

82 
	mPERU
,

83 
	mROMANIA
,

84 
	mRUSSIA
,

85 
	mSAUDI_ARABIA
,

86 
	mUNITED_KINGDOM
,

87 
	mUNITED_STATES
,

88 
	mVIETNAM


94 c⁄° 
	gSUPPLIER_PER_SF
 = 2000;

95 c⁄° 
	gCUSTOMER_PER_SF
 = 30000;

96 c⁄° 
	gPART_PER_SF
 = 200000;

97 c⁄° 
	gLINEORDER_PER_SF
 = 1500000;

98 c⁄° 
	gNO_DATE
 = 2556;

107 
	sssb_∑π_tu∂e


109 
	mP_PARTKEY
;

110 
	mP_NAME
 [
STRSIZE
(22)];

111 
	mP_MFGR
 [
STRSIZE
(6)];

112 
	mP_CATEGORY
 [
STRSIZE
(7)];

113 
	mP_BRAND
 [
STRSIZE
(9)];

114 
	mP_COLOR
 [
STRSIZE
(11)];

115 
	mP_TYPE
 [
STRSIZE
(25)];

116 
	mP_SIZE
;

117 
	mP_CONTAINER
 [
STRSIZE
(10)];

122 
	sssb_∑π_tu∂e_key
 {

123 
	mP_PARTKEY
;

125 
boﬁ
 
	m›î©‹
==(c⁄° 
ssb_∑π_tu∂e_key
& 
rhs
) const {

126  
P_PARTKEY
 =
rhs
.P_PARTKEY;

129 
boﬁ
 
	m›î©‹
<(c⁄° 
	mssb_∑π_tu∂e_key
& 
	mrhs
) const {

130  
	mP_PARTKEY
 < 
	mrhs
.P_PARTKEY;

134 
	sssb_∑π_tu∂e_body


136 
	mS_SUPPKEY
;

137 
	mS_NAME
 [
STRSIZE
(25)];

138 
	mS_ADDRESS
 [
STRSIZE
(40)];

139 
	mS_PHONE
 [
STRSIZE
(15)];

140 
decimÆ
 
	mS_ACCTBAL
;

141 
	mS_COMMENT
 [
STRSIZE
(101)];

149 
	sssb_suµlõr_tu∂e


151 
	mS_SUPPKEY
;

152 
	mS_NAME
 [
STRSIZE
(25)];

153 
	mS_ADDRESS
 [
STRSIZE
(25)];

154 
	mS_CITY
 [
STRSIZE
(10)];

155 
	mS_NATION
 [
STRSIZE
(15)];

156 
	mS_REGION
 [
STRSIZE
(12)];

157 
	mS_PHONE
 [
STRSIZE
(15)];

160 
	sssb_suµlõr_tu∂e_key


162 
	mS_SUPPKEY
;

164 
boﬁ
 
	m›î©‹
==(c⁄° 
ssb_suµlõr_tu∂e_key
& 
rhs
) const {

165  
S_SUPPKEY
 =
rhs
.S_SUPPKEY;

168 
boﬁ
 
	m›î©‹
<(c⁄° 
	mssb_suµlõr_tu∂e_key
& 
	mrhs
) const {

169  
	mS_SUPPKEY
 < 
	mrhs
.S_SUPPKEY;

174 
	sssb_suµlõr_tu∂e_body


176 
	mS_SUPPKEY
;

177 
	mS_NAME
 [
STRSIZE
(25)];

178 
	mS_ADDRESS
 [
STRSIZE
(25)];

179 
	mS_CITY
 [
STRSIZE
(10)];

180 
	mS_NATION
 [
STRSIZE
(15)];

181 
	mS_REGION
 [
STRSIZE
(12)];

182 
	mS_PHONE
 [
STRSIZE
(15)];

188 
	sssb_d©e_tu∂e


190 
	mD_DATEKEY
;

191 
	mD_DATE
 [
STRSIZE
(18)];

192 
	mD_DAYOFWEEK
 [
STRSIZE
(9)];

193 
	mD_MONTH
 [
STRSIZE
(9)];

194 
	mD_YEAR
;

195 
	mD_YEARMONTHNUM
;

196 
	mD_YEARMONTH
 [
STRSIZE
(7)];

197 
	mD_DAYNUMINWEEK
;

198 
	mD_DAYNUMINMONTH
;

199 
	mD_DAYNUMINYEAR
;

200 
	mD_MONTHNUMINYEAR
;

201 
	mD_WEEKNUMINYEAR
;

202 
	mD_SELLINGSEASON
 [
STRSIZE
(12)];

203 
	mD_LASTDAYINWEEKFL
[2];

204 
	mD_LASTDAYINMONTHFL
[2];

205 
	mD_HOLIDAYFL
[2];

206 
	mD_WEEKDAYFL
[2];

210 
	sssb_d©e_tu∂e_key


212 
	mD_DATEKEY
;

214 
boﬁ
 
	m›î©‹
==(c⁄° 
ssb_d©e_tu∂e_key
& 
rhs
) const {

215  (
D_DATEKEY
 =
rhs
.D_DATEKEY);

219 
boﬁ
 
	m›î©‹
<(c⁄° 
	mssb_d©e_tu∂e_key
& 
	mrhs
) const {

220  (
	mD_DATEKEY
 < 
	mrhs
.D_DATEKEY);

233 
	sssb_cu°omî_tu∂e


235 
	mC_CUSTKEY
;

236 
	mC_NAME
 [
STRSIZE
(25)];

237 
	mC_ADDRESS
 [
STRSIZE
(25)];

238 
	mC_CITY
 [
STRSIZE
(10)];

239 
	mC_NATION
 [
STRSIZE
(15)];

240 
	mC_REGION
 [
STRSIZE
(12)];

241 
	mC_PHONE
 [
STRSIZE
(15)];

242 
	mC_MKTSEGMENT
 [
STRSIZE
(10)];

245 
c_°r
 
tu∂e_to_°r
() {

246  (
c_°r
("CUST = %d|%s|%s|%s|%s|%s|%s -",

247 
C_CUSTKEY
, 
C_NAME
, 
C_ADDRESS
,

248 
C_NATION
, 
C_REGION
, 
C_PHONE
, 
C_MKTSEGMENT
));

255 
	sssb_cu°omî_tu∂e_key
 {

256 
	mC_CUSTKEY
;

258 
boﬁ
 
	m›î©‹
==(c⁄° 
ssb_cu°omî_tu∂e_key
& 
rhs
) const {

259  ((
C_CUSTKEY
 =
rhs
.C_CUSTKEY));

262 
boﬁ
 
	m›î©‹
<(c⁄° 
	mssb_cu°omî_tu∂e_key
& 
	mrhs
) const {

263 i‡((
	mC_CUSTKEY
 < 
	mrhs
.C_CUSTKEY))

264  (
	måue
);

266  (
	mÁl£
);

271 
	sssb_cu°omî_tu∂e_body


273 
	mC_NAME
 [
STRSIZE
(25)];

274 
	mC_ADDRESS
 [
STRSIZE
(40)];

275 
	mC_PHONE
 [
STRSIZE
(15)];

276 
decimÆ
 
	mC_ACCTBAL
;

277 
	mC_MKTSEGMENT
 [
STRSIZE
(10)];

278 
	mC_COMMENT
 [
STRSIZE
(117)];

287 
	sssb_löe‹dî_tu∂e


289 
	mLO_ORDERKEY
;

290 
	mLO_LINENUMBER
;

291 
	mLO_CUSTKEY
;

292 
	mLO_PARTKEY
;

293 
	mLO_SUPPKEY
;

294 
	mLO_ORDERDATE
;

295 
	mLO_ORDERPRIORITY
 [
STRSIZE
(15)];

296 
	mLO_SHIPPRIORITY
;

297 
	mLO_QUANTITY
;

298 
	mLO_EXTENDEDPRICE
;

299 
	mLO_ORDTOTALPRICE
;

300 
	mLO_DISCOUNT
;

301 
	mLO_REVENUE
;

302 
	mLO_SUPPLYCOST
;

303 
	mLO_TAX
;

304 
	mLO_COMMIDATE
;

305 
	mLO_SHIPMODE
 [
STRSIZE
(10)];

307 
c_°r
 
tu∂e_to_°r
() {

308 (
c_°r
("LO = %d|%d|%d|%d|%d|%d|%s -",

309 
LO_ORDERKEY
, 
LO_LINENUMBER
, 
LO_CUSTKEY
, 
LO_PARTKEY
,

310 
LO_SUPPKEY
, 
LO_ORDERDATE
, 
LO_ORDERPRIORITY
));

313 
c_°r
 
key_to_°r
() {

314 (
c_°r
("LO = %d|%d -",

315 
LO_ORDERKEY
, 
LO_LINENUMBER
));

321 
	sssb_löeôem_tu∂e_key


323 
	mLO_ORDERKEY
;

324 
	mLO_LINENUMBER
;

326 
boﬁ
 
	m›î©‹
==(c⁄° 
ssb_löeôem_tu∂e_key
& 
rhs
) const {

327  (
LO_ORDERKEY
 =
rhs
.LO_ORDERKEY) &&

328 (
LO_LINENUMBER
 =
rhs
.LO_LINENUMBER);

331 
boﬁ
 
	m›î©‹
<(c⁄° 
	mssb_löeôem_tu∂e_key
& 
	mrhs
) const {

332  (
	mLO_ORDERKEY
 < 
	mrhs
.LO_ORDERKEY) ||

333 ((
	mLO_ORDERKEY
 =
rhs
.
LO_ORDERKEY
) &&

334 (
LO_LINENUMBER
 =
rhs
.LO_LINENUMBER));

339 
	sssb_löeôem_tu∂e_body


341 
	mLO_ORDERKEY
;

342 
	mLO_LINENUMBER
;

343 
	mLO_CUSTKEY
;

344 
	mLO_PARTKEY
;

345 
	mLO_SUPPKEY
;

346 
	mLO_ORDERDATE
;

347 
	mLO_ORDERPRIORITY
 [
STRSIZE
(15)];

348 
	mLO_SHIPPRIORITY
;

349 
	mLO_QUANTITY
;

350 
	mLO_EXTENDEDPRICE
;

351 
	mLO_ORDTOTALPRICE
;

352 
	mLO_DISCOUNT
;

353 
	mLO_REVENUE
;

354 
	mLO_SUPPLYCOST
;

355 
	mLO_TAX
;

356 
	mLO_COMMIDATE
;

357 
	mLO_SHIPMODE
 [
STRSIZE
(10)];

360 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/ssb/ssb_util.h

1 #i‚de‡
__SSB_UTIL_H


2 
	#__SSB_UTIL_H


	)

4 
	~"w‹klﬂd/ssb/ssb_°ru˘.h
"

6 
ENTER_NAMESPACE
(
ssb
);

8 
ssb_l_shùmode
 
°r_to_shùmode
(* 
shùmode
);

9 
shùmode_to_°r
(* 
°r
, 
ssb_l_shùmode
 
shùmode
);

10 
gë_«ti⁄
(* 
«ti⁄_«me
, 
ssb_«ti⁄
 
«ti⁄_id
);

12 
EXIT_NAMESPACE
(
ssb
);

	@include/workload/tm1/shore_tm1_client.h

31 #i‚de‡
__SHORE_TM1_CLIENT_H


32 
	#__SHORE_TM1_CLIENT_H


	)

35 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

37 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

39 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
tm1
);

54 ˛as†
	cba£löe_tm1_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


56 
¥iv©e
:

57 
_£lid
;

58 
åx_w‹kî_t
* 
	m_w‹kî
;

59 
	m_qf
;

61 
	mpublic
:

63 
	$ba£löe_tm1_˛õ¡_t
() { }

65 
	`ba£löe_tm1_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eTM1Env
* 
ív
,

66 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

67 c⁄° 
numOfTrxs
,

68 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
);

70 ~
	$ba£löe_tm1_˛õ¡_t
(Ë{ 
	}
}

73 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

77 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

83 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tm1/shore_tm1_env.h

31 #i‚de‡
__SHORE_TM1_ENV_H


32 
	#__SHORE_TM1_ENV_H


	)

35 
	~"sm_vas.h
"

36 
	~"utû.h
"

38 
	~"w‹klﬂd/tm1/tm1_c⁄°.h
"

39 
	~"w‹klﬂd/tm1/tm1_öput.h
"

41 
	~"sm/sh‹e/sh‹e_ív.h
"

42 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

44 
	~"w‹klﬂd/tm1/sh‹e_tm1_schema_m™.h
"

46 
	~<m≠
>

48 
usög
 
	g°d
::
m≠
;

49 
usög
 
«me•a˚
 
	gsh‹e
;

52 
ENTER_NAMESPACE
(
tm1
);

64 
	sSh‹eTM1TrxCou¡


66 
uöt
 
	mgë_sub_d©a
;

67 
uöt
 
	mgë_√w_de°
;

68 
uöt
 
	mgë_acc_d©a
;

69 
uöt
 
	mupd_sub_d©a
;

70 
uöt
 
	mupd_loc
;

71 
uöt
 
	mös_ˇŒ_fwd
;

72 
uöt
 
	mdñ_ˇŒ_fwd
;

74 
uöt
 
	mgë_sub_nbr
;

76 
uöt
 
	mös_ˇŒ_fwd_bích
;

77 
uöt
 
	mdñ_ˇŒ_fwd_bích
;

79 
	mSh‹eTM1TrxCou¡
& 
	m›î©‹
+=(
Sh‹eTM1TrxCou¡
 c⁄°& 
rhs
) {

80 
gë_sub_d©a
 +
rhs
.get_sub_data;

81 
	mgë_√w_de°
 +
rhs
.
gë_√w_de°
;

82 
	mgë_acc_d©a
 +
rhs
.
gë_acc_d©a
;

83 
	mupd_sub_d©a
 +
rhs
.
upd_sub_d©a
;

84 
	mupd_loc
 +
rhs
.
upd_loc
;

85 
	mös_ˇŒ_fwd
 +
rhs
.
ös_ˇŒ_fwd
;

86 
	mdñ_ˇŒ_fwd
 +
rhs
.
dñ_ˇŒ_fwd
;

88 
	mgë_sub_nbr
 +
rhs
.
gë_sub_nbr
;

90 
	mös_ˇŒ_fwd_bích
 +
rhs
.
ös_ˇŒ_fwd_bích
;

91 
	mdñ_ˇŒ_fwd_bích
 +
rhs
.
dñ_ˇŒ_fwd_bích
;

93  (*
	mthis
);

96 
	mSh‹eTM1TrxCou¡
& 
	m›î©‹
-=(
Sh‹eTM1TrxCou¡
 c⁄°& 
rhs
) {

97 
gë_sub_d©a
 -
rhs
.get_sub_data;

98 
	mgë_√w_de°
 -
rhs
.
gë_√w_de°
;

99 
	mgë_acc_d©a
 -
rhs
.
gë_acc_d©a
;

100 
	mupd_sub_d©a
 -
rhs
.
upd_sub_d©a
;

101 
	mupd_loc
 -
rhs
.
upd_loc
;

102 
	mös_ˇŒ_fwd
 -
rhs
.
ös_ˇŒ_fwd
;

103 
	mdñ_ˇŒ_fwd
 -
rhs
.
dñ_ˇŒ_fwd
;

105 
	mgë_sub_nbr
 -
rhs
.
gë_sub_nbr
;

107 
	mös_ˇŒ_fwd_bích
 -
rhs
.
ös_ˇŒ_fwd_bích
;

108 
	mdñ_ˇŒ_fwd_bích
 -
rhs
.
dñ_ˇŒ_fwd_bích
;

110  (*
	mthis
);

113 
uöt
 
tŸÆ
() const {

114  (
	mgë_sub_d©a
+
	mgë_√w_de°
+
	mgë_acc_d©a
+

115 
	mupd_sub_d©a
+
	mupd_loc
+
	mös_ˇŒ_fwd
+
	mdñ_ˇŒ_fwd
+

116 
	mgë_sub_nbr
+
	mös_ˇŒ_fwd_bích
+
	mdñ_ˇŒ_fwd_bích
);

122 
	sSh‹eTM1TrxSèts


124 
Sh‹eTM1TrxCou¡
 
	m©ãm±ed
;

125 
Sh‹eTM1TrxCou¡
 
	mÁûed
;

126 
Sh‹eTM1TrxCou¡
 
	mdódlocked
;

128 
	mSh‹eTM1TrxSèts
& 
	m›î©‹
+=(
Sh‹eTM1TrxSèts
 c⁄°& 
Ÿhî
) {

129 
©ãm±ed
 +
Ÿhî
.attempted;

130 
	mÁûed
 +
Ÿhî
.
Áûed
;

131 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

132  (*
	mthis
);

135 
	mSh‹eTM1TrxSèts
& 
	m›î©‹
-=(
Sh‹eTM1TrxSèts
 c⁄°& 
Ÿhî
) {

136 
©ãm±ed
 -
Ÿhî
.attempted;

137 
	mÁûed
 -
Ÿhî
.
Áûed
;

138 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

139  (*
	mthis
);

155 ˛as†
	cSh‹eTM1Env
 : 
public
 
Sh‹eEnv


157 
public
:

159 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eTM1TrxSèts
*> 
	t°©m≠_t
;

161 
˛ass
 
	mèbÀ_buûdî_t
;

162 
˛ass
 
	mèbÀ_¸ót‹_t
;

164 
	m¥iv©e
:

165 
w_rc_t
 
_po°_öô_im∂
();

167 
	mpublic
:

169 
Sh‹eTM1Env
();

170 
	mvútuÆ
 ~
Sh‹eTM1Env
();

174 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

175 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

176 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

177 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

178 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

180 
vútuÆ
 
po°_öô
();

181 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

183 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

185 
vútuÆ
 
c⁄f
();

186 
vútuÆ
 
°¨t
();

187 
vútuÆ
 
°›
();

188 
vútuÆ
 
	$öfo
() const;

189 
vútuÆ
 
	`°©i°ics
();

191 
vútuÆ
 
w_rc_t
 
	$w¨mup
(Ë{ (
RCOK
); 
	}
};

192 
vútuÆ
 
w_rc_t
 
	$check_c⁄si°ícy
(Ë{ (
RCOK
); 
	}
};

194 
vútuÆ
 
¥öt_throughput
(c⁄° 
iQuîõdSF
,

195 c⁄° 
iS¥ód
,

196 c⁄° 
iNumOfThªads
,

197 c⁄° 
dñay
,

198 c⁄° 
ul⁄g_t
 
mioch
,

199 c⁄° 
avg˝uußge
);

204 
vútuÆ
 
w_rc_t
 
lﬂdd©a
();

205 
w_rc_t
 
x˘_p›uœã_⁄e
(c⁄° 
sub_id
);

208 
DECLARE_TABLE
(
subs¸ibî_t
,
sub_m™_im∂
,
sub
);

209 
DECLARE_TABLE
(
ac˚ss_öfo_t
,
ai_m™_im∂
,
ai
);

210 
DECLARE_TABLE
(
•ecül_Ácûôy_t
,
sf_m™_im∂
,
sf
);

211 
DECLARE_TABLE
(
ˇŒ_f‹w¨dög_t
,
cf_m™_im∂
,
cf
);

216 
w_rc_t
 
run_⁄e_x˘
(
Reque°
* 
¥eque°
);

218 
DECLARE_TRX
(
gë_sub_d©a
);

219 
DECLARE_TRX
(
gë_√w_de°
);

220 
DECLARE_TRX
(
gë_acc_d©a
);

221 
DECLARE_TRX
(
upd_sub_d©a
);

222 
DECLARE_TRX
(
upd_loc
);

223 
DECLARE_TRX
(
ös_ˇŒ_fwd
);

224 
DECLARE_TRX
(
dñ_ˇŒ_fwd
);

226 
DECLARE_TRX
(
gë_sub_nbr
);

228 
DECLARE_TRX
(
ös_ˇŒ_fwd_bích
);

229 
DECLARE_TRX
(
dñ_ˇŒ_fwd_bích
);

232 
vútuÆ
 
w_rc_t
 
upd©e_∑πôi⁄ög
();

235 
vútuÆ
 
ív_thªad_öô
();

236 
vútuÆ
 
ív_thªad_föi
();

239 
°©m≠_t
 
	g_°©m≠
;

242 
Sh‹eTM1TrxSèts
 
	g_œ°_°©s
;

243 
vútuÆ
 
ª£t_°©s
();

244 
Sh‹eTM1TrxSèts
 
_gë_°©s
();

247 
£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

248 
°¨t_lﬂd_imbÆ™˚
();

249 
ª£t_skew
();

252 
w_rc_t
 
db_¥öt
(
löes
);

255 
w_rc_t
 
db_„tch
();

261 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tm1/shore_tm1_schema.h

31 #i‚de‡
__SHORE_TM1_SCHEMA_H


32 
	#__SHORE_TM1_SCHEMA_H


	)

35 
	~<m©h.h
>

37 
	~"sm_vas.h
"

38 
	~"utû.h
"

40 
	~"w‹klﬂd/tm1/tm1_c⁄°.h
"

42 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

44 
usög
 
«me•a˚
 
	gsh‹e
;

47 
ENTER_NAMESPACE
(
tm1
);

58 
DECLARE_TABLE_SCHEMA_PD
(
subs¸ibî_t
);

59 
DECLARE_TABLE_SCHEMA_PD
(
ac˚ss_öfo_t
);

60 
DECLARE_TABLE_SCHEMA_PD
(
•ecül_Ácûôy_t
);

61 
DECLARE_TABLE_SCHEMA_PD
(
ˇŒ_f‹w¨dög_t
);

64 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tm1/shore_tm1_schema_man.h

32 #i‚de‡
__SHORE_TM1_SCHEMA_MANAGER_H


33 
	#__SHORE_TM1_SCHEMA_MANAGER_H


	)

36 
	~"w‹klﬂd/tm1/sh‹e_tm1_schema.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
tm1
);

50 
˛ass
 
	gsub_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
subs¸ibî_t
>

52 
èbÀ_row_t
 
	tsub_tu∂e
;

53 
	gödex_sˇn_ôî_im∂
<
	tsubs¸ibî_t
> 
	tsub_idx_ôî
;

55 
	gpublic
:

57 
sub_m™_im∂
(
subs¸ibî_t
* 
aSubs¸ibîDesc
)

58 : 
èbÀ_m™_im∂
<
subs¸ibî_t
>(
aSubs¸ibîDesc
)

60 ~
sub_m™_im∂
() { }

63 
w_rc_t
 
sub_idx_¥obe
(
ss_m
* 
db
,

64 
sub_tu∂e
* 
±u∂e
,

65 c⁄° 
s_id
);

67 
w_rc_t
 
sub_idx_upd
(
ss_m
* 
db
,

68 
sub_tu∂e
* 
±u∂e
,

69 c⁄° 
s_id
);

71 
w_rc_t
 
sub_idx_∆
(
ss_m
* 
db
,

72 
sub_tu∂e
* 
±u∂e
,

73 c⁄° 
s_id
);

76 
w_rc_t
 
sub_nbr_idx_¥obe
(
ss_m
* 
db
,

77 
sub_tu∂e
* 
±u∂e
,

78 c⁄° * 
s_nbr
);

80 
w_rc_t
 
sub_nbr_idx_upd
(
ss_m
* 
db
,

81 
sub_tu∂e
* 
±u∂e
,

82 c⁄° * 
s_nbr
);

84 
w_rc_t
 
sub_nbr_idx_∆
(
ss_m
* 
db
,

85 
sub_tu∂e
* 
±u∂e
,

86 c⁄° * 
s_nbr
);

91 
w_rc_t
 
sub_gë_idx_ôî
(
ss_m
* 
db
,

92 
sub_idx_ôî
* &
ôî
,

93 
sub_tu∂e
* 
±u∂e
,

94 
ªp_row_t
 &
ª∂ow
,

95 
ªp_row_t
 &
ªphigh
,

96 c⁄° 
sub_id
,

97 c⁄° 
uöt
 
ønge
,

98 
lock_mode_t
 
Æm
 = 
SH
,

99 
boﬁ
 
√ed_tu∂e
 = 
åue
);

106 
˛ass
 
	gai_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ac˚ss_öfo_t
>

108 
èbÀ_row_t
 
	tai_tu∂e
;

110 
	gpublic
:

112 
ai_m™_im∂
(
ac˚ss_öfo_t
* 
aAIDesc
)

113 : 
èbÀ_m™_im∂
<
ac˚ss_öfo_t
>(
aAIDesc
)

115 ~
ai_m™_im∂
() { }

118 
w_rc_t
 
ai_idx_¥obe
(
ss_m
* 
db
,

119 
ai_tu∂e
* 
±u∂e
,

120 c⁄° 
s_id
, c⁄° 
ai_ty≥
);

122 
w_rc_t
 
ai_idx_upd
(
ss_m
* 
db
,

123 
ai_tu∂e
* 
±u∂e
,

124 c⁄° 
s_id
, c⁄° 
ai_ty≥
);

126 
w_rc_t
 
ai_idx_∆
(
ss_m
* 
db
,

127 
ai_tu∂e
* 
±u∂e
,

128 c⁄° 
s_id
, c⁄° 
ai_ty≥
);

134 
˛ass
 
	gsf_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
•ecül_Ácûôy_t
>

136 
èbÀ_row_t
 
	tsf_tu∂e
;

137 
	gödex_sˇn_ôî_im∂
<
	t•ecül_Ácûôy_t
> 
	tsf_idx_ôî
;

139 
	gpublic
:

141 
sf_m™_im∂
(
•ecül_Ácûôy_t
* 
aSFDesc
)

142 : 
èbÀ_m™_im∂
<
•ecül_Ácûôy_t
>(
aSFDesc
)

144 ~
sf_m™_im∂
() { }

148 
w_rc_t
 
sf_idx_¥obe
(
ss_m
* 
db
,

149 
sf_tu∂e
* 
±u∂e
,

150 c⁄° 
s_id
, c⁄° 
sf_ty≥
);

152 
w_rc_t
 
sf_idx_upd
(
ss_m
* 
db
,

153 
sf_tu∂e
* 
±u∂e
,

154 c⁄° 
s_id
, c⁄° 
sf_ty≥
);

156 
w_rc_t
 
sf_idx_∆
(
ss_m
* 
db
,

157 
sf_tu∂e
* 
±u∂e
,

158 c⁄° 
s_id
, c⁄° 
sf_ty≥
);

162 
w_rc_t
 
sf_gë_idx_ôî
(
ss_m
* 
db
,

163 
sf_idx_ôî
* &
ôî
,

164 
sf_tu∂e
* 
±u∂e
,

165 
ªp_row_t
 &
ª∂ow
,

166 
ªp_row_t
 &
ªphigh
,

167 c⁄° 
sub_id
,

168 
lock_mode_t
 
Æm
 = 
SH
,

169 
boﬁ
 
√ed_tu∂e
 = 
åue
);

171 
w_rc_t
 
sf_gë_idx_ôî_∆
(
ss_m
* 
db
,

172 
sf_idx_ôî
* &
ôî
,

173 
sf_tu∂e
* 
±u∂e
,

174 
ªp_row_t
 &
ª∂ow
,

175 
ªp_row_t
 &
ªphigh
,

176 c⁄° 
sub_id
,

177 
boﬁ
 
√ed_tu∂e
 = 
åue
);

183 
˛ass
 
	gcf_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ˇŒ_f‹w¨dög_t
>

185 
èbÀ_row_t
 
	tcf_tu∂e
;

186 
	gödex_sˇn_ôî_im∂
<
	tˇŒ_f‹w¨dög_t
> 
	tcf_idx_ôî
;

188 
	gpublic
:

190 
cf_m™_im∂
(
ˇŒ_f‹w¨dög_t
* 
aCFDesc
)

191 : 
èbÀ_m™_im∂
<
ˇŒ_f‹w¨dög_t
>(
aCFDesc
)

193 ~
cf_m™_im∂
() { }

197 
w_rc_t
 
cf_idx_¥obe
(
ss_m
* 
db
,

198 
cf_tu∂e
* 
±u∂e
,

199 c⁄° 
s_id
, c⁄° 
sf_ty≥
, c⁄° 
°ime
);

201 
w_rc_t
 
cf_idx_upd
(
ss_m
* 
db
,

202 
cf_tu∂e
* 
±u∂e
,

203 c⁄° 
s_id
, c⁄° 
sf_ty≥
, c⁄° 
°ime
);

205 
w_rc_t
 
cf_idx_∆
(
ss_m
* 
db
,

206 
cf_tu∂e
* 
±u∂e
,

207 c⁄° 
s_id
, c⁄° 
sf_ty≥
, c⁄° 
°ime
);

211 
w_rc_t
 
cf_gë_idx_ôî
(
ss_m
* 
db
,

212 
cf_idx_ôî
* &
ôî
,

213 
cf_tu∂e
* 
±u∂e
,

214 
ªp_row_t
 &
ª∂ow
,

215 
ªp_row_t
 &
ªphigh
,

216 c⁄° 
sub_id
,

217 c⁄° 
sf_ty≥
,

218 c⁄° 
s_time
,

219 
lock_mode_t
 
Æm
 = 
SH
,

220 
boﬁ
 
√ed_tu∂e
 = 
åue
);

222 
w_rc_t
 
cf_gë_idx_ôî_∆
(
ss_m
* 
db
,

223 
cf_idx_ôî
* &
ôî
,

224 
cf_tu∂e
* 
±u∂e
,

225 
ªp_row_t
 &
ª∂ow
,

226 
ªp_row_t
 &
ªphigh
,

227 c⁄° 
sub_id
,

228 c⁄° 
sf_ty≥
,

229 c⁄° 
s_time
,

230 
boﬁ
 
√ed_tu∂e
 = 
åue
);

237 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tm1/tm1_const.h

31 #i‚de‡
__TM1_CONST_H


32 
	#__TM1_CONST_H


	)

35 
	~"utû/«me•a˚.h
"

38 
ENTER_NAMESPACE
(
tm1
);

42 #unde‡
USE_DORA_EXT_IDX


49 c⁄° 
	gTM1_SUBS_PER_SF
 = 10000;

51 c⁄° 
	gTM1_DEF_SF
 = 10;

52 c⁄° 
	gTM1_DEF_QF
 = 10;

56 c⁄° 
	gTM1_LOADING_COMMIT_INTERVAL
 = 1000;

57 c⁄° 
	gTM1_LOADING_TRACE_INTERVAL
 = 10000;

62 c⁄° 
	gTM1_LOADERS_TO_USE
 = 1;

63 c⁄° 
	gTM1_MAX_NUM_OF_LOADERS
 = 128;

64 c⁄° 
	gTM1_SUBS_TO_PRELOAD
 = 2000;

69 c⁄° 
	gTM1_MIN_AI_PER_SUBSCR
 = 1;

70 c⁄° 
	gTM1_MAX_AI_PER_SUBSCR
 = 4;

72 c⁄° 
	gTM1_MIN_SF_PER_SUBSCR
 = 1;

73 c⁄° 
	gTM1_MAX_SF_PER_SUBSCR
 = 4;

75 c⁄° 
	gTM1_MIN_CF_PER_SF
 = 0;

76 c⁄° 
	gTM1_MAX_CF_PER_SF
 = 3;

78 c⁄° 
	gTM1_PROB_ACTIVE_SF_YES
 = 85;

79 c⁄° 
	gTM1_PROB_ACTIVE_SF_NO
 = 15;

87 c⁄° 
	gTM1_SUB_FCOUNT
 = 34;

88 c⁄° 
	gTM1_AI_FCOUNT
 = 6;

89 c⁄° 
	gTM1_SF_FCOUNT
 = 6;

90 c⁄° 
	gTM1_CF_FCOUNT
 = 5;

94 c⁄° 
	gTM1_SUB_NBR_SZ
 = 16;

95 c⁄° 
	gTM1_AI_DATA3_SZ
 = 3;

96 c⁄° 
	gTM1_AI_DATA4_SZ
 = 5;

97 c⁄° 
	gTM1_SF_DATA_B_SZ
 = 5;

98 c⁄° 
	gTM1_CF_NUMBERX_SZ
 = 15;

107 c⁄° 
	gXCT_TM1_MIX
 = 20;

108 c⁄° 
	gXCT_TM1_GET_SUB_DATA
 = 21;

109 c⁄° 
	gXCT_TM1_GET_NEW_DEST
 = 22;

110 c⁄° 
	gXCT_TM1_GET_ACC_DATA
 = 23;

111 c⁄° 
	gXCT_TM1_UPD_SUB_DATA
 = 24;

112 c⁄° 
	gXCT_TM1_UPD_LOCATION
 = 25;

113 c⁄° 
	gXCT_TM1_CALL_FWD_MIX
 = 26;

115 c⁄° 
	gXCT_TM1_INS_CALL_FWD
 = 27;

116 c⁄° 
	gXCT_TM1_DEL_CALL_FWD
 = 28;

118 c⁄° 
	gXCT_TM1_GET_SUB_NBR
 = 29;

120 c⁄° 
	gXCT_TM1_CALL_FWD_MIX_BENCH
 = 30;

121 c⁄° 
	gXCT_TM1_INS_CALL_FWD_BENCH
 = 31;

122 c⁄° 
	gXCT_TM1_DEL_CALL_FWD_BENCH
 = 32;

130 c⁄° 
	gPROB_TM1_GET_SUB_DATA
 = 35;

131 c⁄° 
	gPROB_TM1_GET_NEW_DEST
 = 10;

132 c⁄° 
	gPROB_TM1_GET_ACC_DATA
 = 35;

135 c⁄° 
	gPROB_TM1_UPD_SUB_DATA
 = 2;

136 c⁄° 
	gPROB_TM1_UPD_LOCATION
 = 14;

137 c⁄° 
	gPROB_TM1_INS_CALL_FWD
 = 2;

138 c⁄° 
	gPROB_TM1_DEL_CALL_FWD
 = 2;

142 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tm1/tm1_input.h

32 #i‚de‡
__TM1_INPUT_H


33 
	#__TM1_INPUT_H


	)

35 
	~"utû/øndom_öput.h
"

37 
	~"w‹klﬂd/tm1/tm1_c⁄°.h
"

41 
ENTER_NAMESPACE
(
tm1
);

45 
skewî_t
 
s_skewî
;

46 
boﬁ
 
_ch™ge_lﬂd
;

50 
	stm1_sub_t


52 
	mS_ID
;

53 
	mSUB_NBR
[
STRSIZE
(
TM1_SUB_NBR_SZ
)];

54 
boﬁ
 
	mBIT_XX
[10];

55 
	mHEX_XX
[10];

56 
	mBYTE2_XX
[10];

57 
	mMSC_LOCATION
;

58 
	mVLR_LOCATION
;

62 
	stm1_ai_t


64 
	mS_ID
;

65 
	mAI_TYPE
;

66 
	mDATA1
;

67 
	mDATA2
;

68 
	mDATA3
[
STRSIZE
(
TM1_AI_DATA3_SZ
)];

69 
	mDATA4
[
STRSIZE
(
TM1_AI_DATA4_SZ
)];

73 
	stm1_sf_t


75 
	mS_ID
;

76 
	mSF_TYPE
;

77 
boﬁ
 
	mIS_ACTIVE
;

78 
	mERROR_CNTRL
;

79 
	mDATA_A
;

80 
	mDATA_B
[
STRSIZE
(
TM1_SF_DATA_B_SZ
)];

84 
	stm1_cf_t


86 
	mS_ID
;

87 
	mSF_TYPE
;

88 
	mSTART_TIME
;

89 
	mEND_TIME
;

90 
	mNUMBERX
[
STRSIZE
(
TM1_CF_NUMBERX_SZ
)];

102 
	sgë_sub_d©a_öput_t


110 
	m_s_id
;

112 
	mgë_sub_d©a_öput_t
& 
	m›î©‹
(c⁄° 
gë_sub_d©a_öput_t
& 
rhs
);

126 
	sgë_√w_de°_öput_t


137 
	m_s_id
;

138 
	m_sf_ty≥
;

139 
	m_s_time
;

140 
	m_e_time
;

142 
	mgë_√w_de°_öput_t
& 
	m›î©‹
(c⁄° 
gë_√w_de°_öput_t
& 
rhs
);

156 
	sgë_acc_d©a_öput_t


165 
	m_s_id
;

166 
	m_ai_ty≥
;

168 
	mgë_acc_d©a_öput_t
& 
	m›î©‹
(c⁄° 
gë_acc_d©a_öput_t
& 
rhs
);

182 
	supd_sub_d©a_öput_t


193 
	m_s_id
;

194 
	m_sf_ty≥
;

195 
boﬁ
 
	m_a_bô
;

196 
	m_a_d©a
;

198 
	mupd_sub_d©a_öput_t
& 
	m›î©‹
(c⁄° 
upd_sub_d©a_öput_t
& 
rhs
);

212 
	supd_loc_öput_t


222 
	m_s_id
;

223 
	m_sub_nbr
[16];

224 
	m_vÃ_loc
;

226 
	mupd_loc_öput_t
& 
	m›î©‹
(c⁄° 
upd_loc_öput_t
& 
rhs
);

240 
	sös_ˇŒ_fwd_öput_t


253 
	m_s_id
;

254 
	m_sub_nbr
[16];

255 
	m_sf_ty≥
;

256 
	m_s_time
;

257 
	m_e_time
;

258 
	m_numbîx
[16];

260 
	mös_ˇŒ_fwd_öput_t
& 
	m›î©‹
(c⁄° 
ös_ˇŒ_fwd_öput_t
& 
rhs
);

274 
	sdñ_ˇŒ_fwd_öput_t


285 
	m_s_id
;

286 
	m_sub_nbr
[16];

287 
	m_sf_ty≥
;

288 
	m_s_time
;

290 
	mdñ_ˇŒ_fwd_öput_t
& 
	m›î©‹
(c⁄° 
dñ_ˇŒ_fwd_öput_t
& 
rhs
);

304 
	sgë_sub_nbr_öput_t


312 
	m_s_id
;

313 
uöt
 
	m_ønge
;

315 #ifde‡
USE_DORA_EXT_IDX


317 
	mve˘‹
< 
	m∑ú
<,
	mrid_t
> > 
	m_∑ús
;

320 
	mgë_sub_nbr_öput_t
& 
	m›î©‹
(c⁄° 
gë_sub_nbr_öput_t
& 
rhs
);

334 
	sös_ˇŒ_fwd_bích_öput_t


347 
	m_s_id
;

348 
	m_sub_nbr
[16];

349 
	m_sf_ty≥
;

350 
	m_s_time
;

351 
	m_e_time
;

352 
	m_numbîx
[16];

354 
	mös_ˇŒ_fwd_bích_öput_t
& 
	m›î©‹
(c⁄° 
ös_ˇŒ_fwd_bích_öput_t
& 
rhs
);

368 
	sdñ_ˇŒ_fwd_bích_öput_t


379 
	m_s_id
;

380 
	m_sub_nbr
[16];

381 
	m_sf_ty≥
;

382 
	m_s_time
;

384 
	mdñ_ˇŒ_fwd_bích_öput_t
& 
	m›î©‹
(c⁄° 
dñ_ˇŒ_fwd_bích_öput_t
& 
rhs
);

398 
gë_sub_d©a_öput_t
 
¸óã_gë_sub_d©a_öput
(
SF
,

399 
•ecificSub
 = 0);

402 
gë_√w_de°_öput_t
 
¸óã_gë_√w_de°_öput
(
SF
,

403 
•ecificSub
 = 0);

406 
gë_acc_d©a_öput_t
 
¸óã_gë_acc_d©a_öput
(
SF
,

407 
•ecificSub
 = 0);

410 
upd_sub_d©a_öput_t
 
¸óã_upd_sub_d©a_öput
(
SF
,

411 
•ecificSub
 = 0);

414 
upd_loc_öput_t
 
¸óã_upd_loc_öput
(
SF
,

415 
•ecificSub
 = 0);

418 
ös_ˇŒ_fwd_öput_t
 
¸óã_ös_ˇŒ_fwd_öput
(
SF
,

419 
•ecificSub
 = 0);

422 
dñ_ˇŒ_fwd_öput_t
 
¸óã_dñ_ˇŒ_fwd_öput
(
SF
,

423 
•ecificSub
 = 0);

425 
gë_sub_nbr_öput_t
 
¸óã_gë_sub_nbr_öput
(
SF
,

426 
•ecificSub
 = 0);

429 
ös_ˇŒ_fwd_bích_öput_t
 
¸óã_ös_ˇŒ_fwd_bích_öput
(
SF
,

430 
•ecificSub
 = 0);

433 
dñ_ˇŒ_fwd_bích_öput_t
 
¸óã_dñ_ˇŒ_fwd_bích_öput
(
SF
,

434 
•ecificSub
 = 0);

440 
øndom_tm1_x˘_ty≥
(c⁄° 
£À˘ed
);

443 
EXIT_NAMESPACE
(
tm1
);

	@include/workload/tpcb/shore_tpcb_client.h

31 #i‚de‡
__SHORE_TPCB_CLIENT_H


32 
	#__SHORE_TPCB_CLIENT_H


	)

35 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

37 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

39 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
çcb
);

52 ˛as†
	cba£löe_çcb_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


54 
¥iv©e
:

55 
_£lid
;

56 
åx_w‹kî_t
* 
	m_w‹kî
;

57 
	m_qf
;

59 
	mpublic
:

61 
	$ba£löe_çcb_˛õ¡_t
() { }

63 
	`ba£löe_çcb_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eTPCBEnv
* 
ív
,

64 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

65 c⁄° 
numOfTrxs
,

66 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
);

68 ~
	$ba£löe_çcb_˛õ¡_t
(Ë{ 
	}
}

71 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

75 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

80 
EXIT_NAMESPACE
(
çcb
);

	@include/workload/tpcb/shore_tpcb_env.h

33 #i‚de‡
__SHORE_TPCB_ENV_H


34 
	#__SHORE_TPCB_ENV_H


	)

37 
	~"sm_vas.h
"

38 
	~"utû.h
"

40 
	~"w‹klﬂd/çcb/çcb_öput.h
"

42 
	~"sm/sh‹e/sh‹e_ív.h
"

43 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

45 
	~"w‹klﬂd/çcb/sh‹e_çcb_schema_m™.h
"

47 
	~<m≠
>

49 
usög
 
«me•a˚
 
	gsh‹e
;

52 
ENTER_NAMESPACE
(
çcb
);

55 
usög
 
	g°d
::
m≠
;

68 
	sSh‹eTPCBTrxCou¡


70 
uöt
 
	mac˘_upd©e
;

71 
uöt
 
	mp›uœã_db
;

73 
uöt
 
	mmbích_ö£π_⁄ly
;

74 
uöt
 
	mmbích_dñëe_⁄ly
;

75 
uöt
 
	mmbích_¥obe_⁄ly
;

76 
uöt
 
	mmbích_ö£π_dñëe
;

77 
uöt
 
	mmbích_ö£π_¥obe
;

78 
uöt
 
	mmbích_dñëe_¥obe
;

79 
uöt
 
	mmbích_mix
;

81 
	mSh‹eTPCBTrxCou¡
& 
	m›î©‹
+=(
Sh‹eTPCBTrxCou¡
 c⁄°& 
rhs
) {

82 
ac˘_upd©e
 +
rhs
.acct_update;

84 
	mmbích_ö£π_⁄ly
 +
rhs
.
mbích_ö£π_⁄ly
;

85 
	mmbích_dñëe_⁄ly
 +
rhs
.
mbích_dñëe_⁄ly
;

86 
	mmbích_¥obe_⁄ly
 +
rhs
.
mbích_¥obe_⁄ly
;

87 
	mmbích_ö£π_dñëe
 +
rhs
.
mbích_ö£π_dñëe
;

88 
	mmbích_ö£π_¥obe
 +
rhs
.
mbích_ö£π_¥obe
;

89 
	mmbích_dñëe_¥obe
 +
rhs
.
mbích_dñëe_¥obe
;

90 
	mmbích_mix
 +
rhs
.
mbích_mix
;

92  (*
	mthis
);

95 
	mSh‹eTPCBTrxCou¡
& 
	m›î©‹
-=(
Sh‹eTPCBTrxCou¡
 c⁄°& 
rhs
) {

96 
ac˘_upd©e
 -
rhs
.acct_update;

98 
	mmbích_ö£π_⁄ly
 -
rhs
.
mbích_ö£π_⁄ly
;

99 
	mmbích_dñëe_⁄ly
 -
rhs
.
mbích_dñëe_⁄ly
;

100 
	mmbích_¥obe_⁄ly
 -
rhs
.
mbích_¥obe_⁄ly
;

101 
	mmbích_ö£π_dñëe
 -
rhs
.
mbích_ö£π_dñëe
;

102 
	mmbích_ö£π_¥obe
 -
rhs
.
mbích_ö£π_¥obe
;

103 
	mmbích_dñëe_¥obe
 -
rhs
.
mbích_dñëe_¥obe
;

104 
	mmbích_mix
 -
rhs
.
mbích_mix
;

106  (*
	mthis
);

109 
uöt
 
tŸÆ
() const {

110  (
	mac˘_upd©e
+

111 
	mmbích_ö£π_⁄ly
+
	mmbích_dñëe_⁄ly
+
	mmbích_¥obe_⁄ly
+

112 
	mmbích_ö£π_dñëe
+
	mmbích_ö£π_¥obe
+
	mmbích_dñëe_¥obe
+
	mmbích_mix
);

118 
	sSh‹eTPCBTrxSèts


120 
Sh‹eTPCBTrxCou¡
 
	m©ãm±ed
;

121 
Sh‹eTPCBTrxCou¡
 
	mÁûed
;

122 
Sh‹eTPCBTrxCou¡
 
	mdódlocked
;

124 
	mSh‹eTPCBTrxSèts
& 
	m›î©‹
+=(
Sh‹eTPCBTrxSèts
 c⁄°& 
Ÿhî
) {

125 
©ãm±ed
 +
Ÿhî
.attempted;

126 
	mÁûed
 +
Ÿhî
.
Áûed
;

127 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

128  (*
	mthis
);

131 
	mSh‹eTPCBTrxSèts
& 
	m›î©‹
-=(
Sh‹eTPCBTrxSèts
 c⁄°& 
Ÿhî
) {

132 
©ãm±ed
 -
Ÿhî
.attempted;

133 
	mÁûed
 -
Ÿhî
.
Áûed
;

134 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

135  (*
	mthis
);

150 ˛as†
	cSh‹eTPCBEnv
 : 
public
 
Sh‹eEnv


152 
public
:

154 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eTPCBTrxSèts
*> 
	t°©m≠_t
;

156 
˛ass
 
	mèbÀ_buûdî_t
;

157 
˛ass
 
	mèbÀ_¸ót‹_t
;

158 
	mcheckpoöãr_t
;

159 
˛ass
 
	mfid_lﬂdî_t
;

161 
	m¥iv©e
:

163 
w_rc_t
 
_po°_öô_im∂
();

165 
w_rc_t
 
_∑d_BRANCHES
();

166 
w_rc_t
 
_∑d_TELLERS
();

168 
	mpublic
:

170 
Sh‹eTPCBEnv
();

171 
	mvútuÆ
 ~
Sh‹eTPCBEnv
();

176 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

177 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

178 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

179 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

180 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

182 
vútuÆ
 
po°_öô
();

183 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

185 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

187 
vútuÆ
 
c⁄f
();

188 
vútuÆ
 
°¨t
();

189 
vútuÆ
 
°›
();

190 
vútuÆ
 
	$öfo
() const;

191 
vútuÆ
 
	`°©i°ics
();

193 
	`dump
();

195 
vútuÆ
 
	`¥öt_throughput
(c⁄° 
iQuîõdSF
,

196 c⁄° 
iS¥ód
,

197 c⁄° 
iNumOfThªads
,

198 c⁄° 
dñay
,

199 c⁄° 
ul⁄g_t
 
mioch
,

200 c⁄° 
avg˝uußge
);

206 
w_rc_t
 
	`lﬂdd©a
();

207 
w_rc_t
 
	`w¨mup
();

208 
w_rc_t
 
	`check_c⁄si°ícy
();

212 
	`DECLARE_TABLE
(
bønch_t
,
bønch_m™_im∂
,
bønch
);

213 
	`DECLARE_TABLE
(
ãŒî_t
,
ãŒî_m™_im∂
,
ãŒî
);

214 
	`DECLARE_TABLE
(
accou¡_t
,
accou¡_m™_im∂
,
accou¡
);

215 
	`DECLARE_TABLE
(
hi°‹y_t
,
hi°‹y_m™_im∂
,
hi°‹y
);

220 
w_rc_t
 
	`run_⁄e_x˘
(
Reque°
* 
¥eque°
);

223 
	`DECLARE_TRX
(
ac˘_upd©e
);

226 
	`DECLARE_TRX
(
mbích_ö£π_⁄ly
);

227 
	`DECLARE_TRX
(
mbích_dñëe_⁄ly
);

228 
	`DECLARE_TRX
(
mbích_¥obe_⁄ly
);

229 
	`DECLARE_TRX
(
mbích_ö£π_dñëe
);

230 
	`DECLARE_TRX
(
mbích_ö£π_¥obe
);

231 
	`DECLARE_TRX
(
mbích_dñëe_¥obe
);

232 
	`DECLARE_TRX
(
mbích_mix
);

235 
	`DECLARE_TRX
(
p›uœã_db
);

238 
vútuÆ
 
w_rc_t
 
	`upd©e_∑πôi⁄ög
();

241 
vútuÆ
 
	`ív_thªad_öô
();

242 
vútuÆ
 
	`ív_thªad_föi
();

245 
°©m≠_t
 
_°©m≠
;

248 
Sh‹eTPCBTrxSèts
 
_œ°_°©s
;

249 
vútuÆ
 
	`ª£t_°©s
();

250 
Sh‹eTPCBTrxSèts
 
	`_gë_°©s
();

253 
	`£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

254 
	`°¨t_lﬂd_imbÆ™˚
();

255 
	`ª£t_skew
();

258 
w_rc_t
 
	`db_¥öt
(
löes
);

261 
w_rc_t
 
	`db_„tch
();

263 
	}
};

267 
EXIT_NAMESPACE
(
çcb
);

	@include/workload/tpcb/shore_tpcb_schema.h

33 #i‚de‡
__SHORE_TPCB_SCHEMA_H


34 
	#__SHORE_TPCB_SCHEMA_H


	)

37 
	~<m©h.h
>

39 
	~"sm_vas.h
"

40 
	~"utû.h
"

42 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

44 
usög
 
«me•a˚
 
	gsh‹e
;

47 
ENTER_NAMESPACE
(
çcb
);

58 
DECLARE_TABLE_SCHEMA_PD
(
bønch_t
);

59 
DECLARE_TABLE_SCHEMA_PD
(
ãŒî_t
);

60 
DECLARE_TABLE_SCHEMA_PD
(
accou¡_t
);

61 
DECLARE_TABLE_SCHEMA_PD
(
hi°‹y_t
);

64 
EXIT_NAMESPACE
(
çcb
);

	@include/workload/tpcb/shore_tpcb_schema_man.h

32 #i‚de‡
__SHORE_TPCB_SCHEMA_MANAGER_H


33 
	#__SHORE_TPCB_SCHEMA_MANAGER_H


	)

36 
	~"w‹klﬂd/çcb/sh‹e_çcb_schema.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
çcb
);

50 
˛ass
 
	gbønch_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
bønch_t
>

52 
èbÀ_row_t
 
	tbønch_tu∂e
;

54 
	gpublic
:

56 
bønch_m™_im∂
(
bønch_t
* 
aBønchDesc
)

57 : 
èbÀ_m™_im∂
<
bønch_t
>(
aBønchDesc
)

60 ~
bønch_m™_im∂
() { }

63 
w_rc_t
 
b_ödex_¥obe
(
ss_m
* 
db
,

64 
bønch_tu∂e
* 
±u∂e
,

65 c⁄° 
b_id
);

67 
w_rc_t
 
b_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

68 
bønch_tu∂e
* 
±u∂e
,

69 c⁄° 
b_id
);

71 
w_rc_t
 
b_idx_∆
(
ss_m
* 
db
,

72 
bønch_tu∂e
* 
±u∂e
,

73 c⁄° 
b_id
);

79 
˛ass
 
	gãŒî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ãŒî_t
>

81 
èbÀ_row_t
 
	tãŒî_tu∂e
;

83 
	gpublic
:

85 
ãŒî_m™_im∂
(
ãŒî_t
* 
aTñÀrDesc
)

86 : 
èbÀ_m™_im∂
<
ãŒî_t
>(
aTñÀrDesc
)

89 ~
ãŒî_m™_im∂
() { }

92 
w_rc_t
 
t_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

93 
ãŒî_tu∂e
* 
±u∂e
,

94 c⁄° 
t_id
);

96 
w_rc_t
 
t_idx_∆
(
ss_m
* 
db
,

97 
ãŒî_tu∂e
* 
±u∂e
,

98 c⁄° 
t_id
);

104 
˛ass
 
	gaccou¡_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
accou¡_t
>

106 
èbÀ_row_t
 
	taccou¡_tu∂e
;

107 
	gèbÀ_sˇn_ôî_im∂
<
	taccou¡_t
> 
	taccou¡_èbÀ_ôî
;

108 
	gödex_sˇn_ôî_im∂
<
	taccou¡_t
> 
	taccou¡_ödex_ôî
;

110 
	gpublic
:

112 
accou¡_m™_im∂
(
accou¡_t
* 
aAccou¡Desc
)

113 : 
èbÀ_m™_im∂
<
accou¡_t
>(
aAccou¡Desc
)

116 ~
accou¡_m™_im∂
() { }

119 
w_rc_t
 
a_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

120 
accou¡_tu∂e
* 
±u∂e
,

121 c⁄° 
a_id
,

122 c⁄° 
b_id
 = 0,

123 c⁄° 
bÆ™˚
 = 0);

125 
w_rc_t
 
a_dñëe_by_ödex
(
ss_m
* 
db
,

126 
accou¡_tu∂e
* 
±u∂e
,

127 c⁄° 
a_id
,

128 c⁄° 
b_id
 = 0,

129 c⁄° 
bÆ™˚
 = 0);

131 
w_rc_t
 
a_ödex_¥obe
(
ss_m
* 
db
,

132 
accou¡_tu∂e
* 
±u∂e
,

133 c⁄° 
a_id
,

134 c⁄° 
b_id
 = 0,

135 c⁄° 
bÆ™˚
 = 0);

137 
w_rc_t
 
a_idx_∆
(
ss_m
* 
db
,

138 
accou¡_tu∂e
* 
±u∂e
,

139 c⁄° 
a_id
,

140 c⁄° 
b_id
 = 0,

141 c⁄° 
bÆ™˚
 = 0);

148 
˛ass
 
	ghi°‹y_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
hi°‹y_t
>

150 
èbÀ_row_t
 
	thi°‹y_tu∂e
;

152 
	gpublic
:

154 
hi°‹y_m™_im∂
(
hi°‹y_t
* 
aHi°‹yDesc
)

155 : 
èbÀ_m™_im∂
<
hi°‹y_t
>(
aHi°‹yDesc
)

158 ~
hi°‹y_m™_im∂
() { }

164 
EXIT_NAMESPACE
(
çcb
);

	@include/workload/tpcb/tpcb_input.h

32 #i‚de‡
__TPCB_INPUT_H


33 
	#__TPCB_INPUT_H


	)

35 
	~"utû.h
"

38 
ENTER_NAMESPACE
(
çcb
);

42 c⁄° 
	gXCT_TPCB_ACCT_UPDATE
 = 31;

43 c⁄° 
	gXCT_TPCB_POPULATE_DB
 = 39;

46 c⁄° 
	gXCT_TPCB_MBENCH_INSERT_ONLY
 = 41;

47 c⁄° 
	gXCT_TPCB_MBENCH_DELETE_ONLY
 = 42;

48 c⁄° 
	gXCT_TPCB_MBENCH_PROBE_ONLY
 = 43;

49 c⁄° 
	gXCT_TPCB_MBENCH_INSERT_DELETE
 = 44;

50 c⁄° 
	gXCT_TPCB_MBENCH_INSERT_PROBE
 = 45;

51 c⁄° 
	gXCT_TPCB_MBENCH_DELETE_PROBE
 = 46;

52 c⁄° 
	gXCT_TPCB_MBENCH_MIX
 = 47;

55 íum { 
	mTPCB_TELLERS_PER_BRANCH
=10 };

56 íum { 
	mTPCB_ACCOUNTS_PER_BRANCH
=100000 };

57 íum { 
	mTPCB_ACCOUNTS_CREATED_PER_POP_XCT
=10000 };

62 
skewî_t
 
b_skewî
;

63 
skewî_t
 
t_skewî
;

64 
skewî_t
 
a_skewî
;

65 
boﬁ
 
_ch™ge_lﬂd
;

79 
	sac˘_upd©e_öput_t


81 
	mb_id
;

82 
	mt_id
;

83 
	ma_id
;

84 
	mdñè
;

86 
ac˘_upd©e_öput_t
() { }

90 
	sp›uœã_db_öput_t


92 
	m_sf
;

93 
	m_fú°_a_id
;

95 
p›uœã_db_öput_t
(
sf
, 
a_id
Ë: 
_sf
(sf), 
_fú°_a_id
(a_id) { }

99 
	smbích_ö£π_⁄ly_öput_t


101 
	mb_id
;

102 
	ma_id
;

103 
	mbÆ™˚
;

105 
mbích_ö£π_⁄ly_öput_t
() { }

107 
¥öt
();

110 
	smbích_dñëe_⁄ly_öput_t


112 
	mb_id
;

113 
	ma_id
;

114 
	mbÆ™˚
;

116 
mbích_dñëe_⁄ly_öput_t
() { }

118 
¥öt
();

121 
	smbích_¥obe_⁄ly_öput_t


123 
	mb_id
;

124 
	ma_id
;

125 
	mbÆ™˚
;

127 
mbích_¥obe_⁄ly_öput_t
() { }

129 
¥öt
();

132 
	smbích_ö£π_dñëe_öput_t


134 
	mb_id
;

135 
	ma_id
;

136 
	mbÆ™˚
;

138 
mbích_ö£π_dñëe_öput_t
() { }

141 
	smbích_ö£π_¥obe_öput_t


143 
	mb_id
;

144 
	ma_id
;

145 
	mbÆ™˚
;

147 
mbích_ö£π_¥obe_öput_t
() { }

150 
	smbích_dñëe_¥obe_öput_t


152 
	mb_id
;

153 
	ma_id
;

154 
	mbÆ™˚
;

156 
mbích_dñëe_¥obe_öput_t
() { }

159 
	smbích_mix_öput_t


161 
	mb_id
;

162 
	ma_id
;

163 
	mbÆ™˚
;

165 
mbích_mix_öput_t
() { }

177 
ac˘_upd©e_öput_t
 
¸óã_ac˘_upd©e_öput
(
SF
,

178 
•ecificBr
 = 0);

181 
p›uœã_db_öput_t
 
¸óã_p›uœã_db_öput
(
SF
,

182 
•ecificBr
 = 0);

185 
mbích_ö£π_⁄ly_öput_t
 
¸óã_mbích_ö£π_⁄ly_öput
(
SF
,

186 
•ecificBr
 = 0);

189 
mbích_dñëe_⁄ly_öput_t
 
¸óã_mbích_dñëe_⁄ly_öput
(
SF
,

190 
•ecificBr
 = 0);

193 
mbích_¥obe_⁄ly_öput_t
 
¸óã_mbích_¥obe_⁄ly_öput
(
SF
,

194 
•ecificBr
 = 0);

197 
mbích_ö£π_dñëe_öput_t
 
¸óã_mbích_ö£π_dñëe_öput
(
SF
,

198 
•ecificBr
 = 0);

201 
mbích_ö£π_¥obe_öput_t
 
¸óã_mbích_ö£π_¥obe_öput
(
SF
,

202 
•ecificBr
 = 0);

205 
mbích_dñëe_¥obe_öput_t
 
¸óã_mbích_dñëe_¥obe_öput
(
SF
,

206 
•ecificBr
 = 0);

209 
mbích_mix_öput_t
 
¸óã_mbích_mix_öput
(
SF
,

210 
•ecificBr
 = 0);

213 
EXIT_NAMESPACE
(
çcb
);

	@include/workload/tpcc/shore_tpcc_client.h

31 #i‚de‡
__SHORE_TPCC_CLIENT_H


32 
	#__SHORE_TPCC_CLIENT_H


	)

35 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

37 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

38 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
çcc
);

53 ˛as†
	cba£löe_çcc_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


55 
¥iv©e
:

57 
_wh
;

58 
åx_w‹kî_t
* 
	m_w‹kî
;

59 
	m_qf
;

62 
	mpublic
:

64 
	$ba£löe_çcc_˛õ¡_t
() { }

66 
	`ba£löe_çcc_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eTPCCEnv
* 
ív
,

67 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

68 c⁄° 
numOfTrxs
,

69 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
sWH
, c⁄° 
qf
);

71 ~
	$ba£löe_çcc_˛õ¡_t
(Ë{ 
	}
}

74 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

78 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

83 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/shore_tpcc_env.h

31 #i‚de‡
__SHORE_TPCC_ENV_H


32 
	#__SHORE_TPCC_ENV_H


	)

35 
	~"sm_vas.h
"

36 
	~"utû.h
"

38 
	~"sm/sh‹e/sh‹e_ív.h
"

39 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

40 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

42 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

44 
	~"w‹klﬂd/çcc/sh‹e_çcc_schema_m™.h
"

45 
	~"w‹klﬂd/çcc/çcc_öput.h
"

47 
	~<m≠
>

49 
usög
 
	g°d
::
m≠
;

50 
usög
 
«me•a˚
 
	gsh‹e
;

53 
ENTER_NAMESPACE
(
çcc
);

56 
	#TPCC_SCALING_FACTOR
 100

	)

57 
	#QUERIED_TPCC_SCALING_FACTOR
 100

	)

69 
	sSh‹eTPCCTrxCou¡


71 
uöt
 
	m√w_‹dî
;

72 
uöt
 
	m∑ymít
;

73 
uöt
 
	m‹dî_°©us
;

74 
uöt
 
	mdñivîy
;

75 
uöt
 
	m°ock_Àvñ
;

77 
uöt
 
	mmbích_wh
;

78 
uöt
 
	mmbích_cu°
;

80 
	mSh‹eTPCCTrxCou¡
& 
	m›î©‹
+=(
Sh‹eTPCCTrxCou¡
 c⁄°& 
rhs
) {

81 
√w_‹dî
 +
rhs
.new_order;

82 
	m∑ymít
 +
rhs
.
∑ymít
;

83 
	m‹dî_°©us
 +
rhs
.
‹dî_°©us
;

84 
	mdñivîy
 +
rhs
.
dñivîy
;

85 
	m°ock_Àvñ
 +
rhs
.
°ock_Àvñ
;

86 
	mmbích_wh
 +
rhs
.
mbích_wh
;

87 
	mmbích_cu°
 +
rhs
.
mbích_cu°
;

88  (*
	mthis
);

91 
	mSh‹eTPCCTrxCou¡
& 
	m›î©‹
-=(
Sh‹eTPCCTrxCou¡
 c⁄°& 
rhs
) {

92 
√w_‹dî
 -
rhs
.new_order;

93 
	m∑ymít
 -
rhs
.
∑ymít
;

94 
	m‹dî_°©us
 -
rhs
.
‹dî_°©us
;

95 
	mdñivîy
 -
rhs
.
dñivîy
;

96 
	m°ock_Àvñ
 -
rhs
.
°ock_Àvñ
;

97 
	mmbích_wh
 -
rhs
.
mbích_wh
;

98 
	mmbích_cu°
 -
rhs
.
mbích_cu°
;

99  (*
	mthis
);

102 
uöt
 
tŸÆ
() const {

103  (
	m√w_‹dî
+
	m∑ymít
+
	m‹dî_°©us
+
	mdñivîy
+
	m°ock_Àvñ
+

104 
	mmbích_wh
+
	mmbích_cu°
);

111 
	sSh‹eTPCCTrxSèts


113 
Sh‹eTPCCTrxCou¡
 
	m©ãm±ed
;

114 
Sh‹eTPCCTrxCou¡
 
	mÁûed
;

115 
Sh‹eTPCCTrxCou¡
 
	mdódlocked
;

117 
	mSh‹eTPCCTrxSèts
& 
	m›î©‹
+=(
Sh‹eTPCCTrxSèts
 c⁄°& 
Ÿhî
) {

118 
©ãm±ed
 +
Ÿhî
.attempted;

119 
	mÁûed
 +
Ÿhî
.
Áûed
;

120 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

121  (*
	mthis
);

124 
	mSh‹eTPCCTrxSèts
& 
	m›î©‹
-=(
Sh‹eTPCCTrxSèts
 c⁄°& 
Ÿhî
) {

125 
©ãm±ed
 -
Ÿhî
.attempted;

126 
	mÁûed
 -
Ÿhî
.
Áûed
;

127 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

128  (*
	mthis
);

144 c⁄° 
	gNORD_PER_UNIT
 = 9;

145 c⁄° 
	gCUST_PER_UNIT
 = 30;

146 c⁄° 
	gHIST_PER_UNIT
 = 30;

147 c⁄° 
	gORDERS_PER_UNIT
 = 30;

148 c⁄° 
	gSTOCK_PER_UNIT
 = 100;

149 c⁄° 
	gUNIT_PER_WH
 = 1000;

150 c⁄° 
	gUNIT_PER_DIST
 = 100;

151 c⁄° 
	gORDERS_PER_DIST
 = 3000;

154 ˛as†
	cSh‹eTPCCEnv
 : 
public
 
Sh‹eEnv


156 
public
:

158 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eTPCCTrxSèts
*> 
	t°©m≠_t
;

160 
˛ass
 
	mèbÀ_buûdî_t
;

161 
˛ass
 
	mèbÀ_¸ót‹_t
;

162 
˛ass
 
	mcheckpoöãr_t
;

164 
	m¥iv©e
:

165 
w_rc_t
 
_po°_öô_im∂
();

167 
	mpublic
:

169 
Sh‹eTPCCEnv
();

170 
	mvútuÆ
 ~
Sh‹eTPCCEnv
();

175 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

176 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

177 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

178 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

179 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

181 
vútuÆ
 
po°_öô
();

182 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

184 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

186 
vútuÆ
 
c⁄f
();

187 
vútuÆ
 
°¨t
();

188 
vútuÆ
 
°›
();

189 
vútuÆ
 
	$öfo
() const;

190 
vútuÆ
 
	`°©i°ics
();

192 
	`dump
();

194 
vútuÆ
 
	`¥öt_throughput
(c⁄° 
iQuîõdSF
,

195 c⁄° 
iS¥ód
,

196 c⁄° 
iNumOfThªads
,

197 c⁄° 
dñay
,

198 c⁄° 
ul⁄g_t
 
mioch
,

199 c⁄° 
avg˝uußge
);

206 
w_rc_t
 
	`lﬂdd©a
();

207 
w_rc_t
 
	`w¨mup
();

208 
w_rc_t
 
	`check_c⁄si°ícy
();

212 
	`DECLARE_TABLE
(
w¨ehou£_t
,
w¨ehou£_m™_im∂
,
w¨ehou£
);

213 
	`DECLARE_TABLE
(
di°ri˘_t
,
di°ri˘_m™_im∂
,
di°ri˘
);

214 
	`DECLARE_TABLE
(
cu°omî_t
,
cu°omî_m™_im∂
,
cu°omî
);

215 
	`DECLARE_TABLE
(
hi°‹y_t
,
hi°‹y_m™_im∂
,
hi°‹y
);

216 
	`DECLARE_TABLE
(
√w_‹dî_t
,
√w_‹dî_m™_im∂
,
√w_‹dî
);

217 
	`DECLARE_TABLE
(
‹dî_t
,
‹dî_m™_im∂
,
‹dî
);

218 
	`DECLARE_TABLE
(
‹dî_löe_t
,
‹dî_löe_m™_im∂
,
‹dî_löe
);

219 
	`DECLARE_TABLE
(
ôem_t
,
ôem_m™_im∂
,
ôem
);

220 
	`DECLARE_TABLE
(
°ock_t
,
°ock_m™_im∂
,
°ock
);

225 
w_rc_t
 
	`run_⁄e_x˘
(
Reque°
* 
¥eque°
);

227 
	`DECLARE_TRX
(
√w_‹dî
);

228 
	`DECLARE_TRX
(
∑ymít
);

229 
	`DECLARE_TRX
(
‹dî_°©us
);

230 
	`DECLARE_TRX
(
dñivîy
);

231 
	`DECLARE_TRX
(
°ock_Àvñ
);

233 
	`DECLARE_TRX
(
mbích_wh
);

234 
	`DECLARE_TRX
(
mbích_cu°
);

237 
	`DECLARE_TRX
(
p›uœã_ba£löe
);

238 
	`DECLARE_TRX
(
p›uœã_⁄e_unô
);

241 
w_rc_t
 
	`_x˘_dñivîy_hñ≥r
(c⁄° 
x˘_id
, 
dñivîy_öput_t
& 
pdö
,

242 
°d
::
ve˘‹
<>& 
dli°
, & 
d_id
,

243 c⁄° 
boﬁ
 
SPLIT_TRX
);

246 
vútuÆ
 
w_rc_t
 
	`upd©e_∑πôi⁄ög
();

249 
vútuÆ
 
	`ív_thªad_öô
();

250 
vútuÆ
 
	`ív_thªad_föi
();

253 
°©m≠_t
 
_°©m≠
;

256 
Sh‹eTPCCTrxSèts
 
_œ°_°©s
;

257 
vútuÆ
 
	`ª£t_°©s
();

258 
Sh‹eTPCCTrxSèts
 
	`_gë_°©s
();

261 
	`£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

262 
	`°¨t_lﬂd_imbÆ™˚
();

263 
	`ª£t_skew
();

266 
w_rc_t
 
	`db_¥öt
(
löes
);

269 
w_rc_t
 
	`db_„tch
();

271 
	}
};

275 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/shore_tpcc_schema.h

32 #i‚de‡
__SHORE_TPCC_SCHEMA_H


33 
	#__SHORE_TPCC_SCHEMA_H


	)

36 
	~<m©h.h
>

38 
	~"sm_vas.h
"

39 
	~"utû.h
"

41 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

42 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

44 
usög
 
«me•a˚
 
	gsh‹e
;

47 
ENTER_NAMESPACE
(
çcc
);

59 
DECLARE_TABLE_SCHEMA_PD
(
w¨ehou£_t
);

60 
DECLARE_TABLE_SCHEMA_PD
(
di°ri˘_t
);

61 
DECLARE_TABLE_SCHEMA_PD
(
°ock_t
);

62 
DECLARE_TABLE_SCHEMA_PD
(
‹dî_löe_t
);

63 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_t
);

64 
DECLARE_TABLE_SCHEMA_PD
(
hi°‹y_t
);

65 
DECLARE_TABLE_SCHEMA_PD
(
‹dî_t
);

66 
DECLARE_TABLE_SCHEMA_PD
(
√w_‹dî_t
);

67 
DECLARE_TABLE_SCHEMA_PD
(
ôem_t
);

70 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/shore_tpcc_schema_man.h

32 #i‚de‡
__SHORE_TPCC_SCHEMA_MANAGER_H


33 
	#__SHORE_TPCC_SCHEMA_MANAGER_H


	)

36 
	~"w‹klﬂd/çcc/çcc_°ru˘.h
"

37 
	~"w‹klﬂd/çcc/sh‹e_çcc_schema.h
"

39 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
çcc
);

51 
˛ass
 
	gw¨ehou£_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
w¨ehou£_t
>

53 
èbÀ_row_t
 
	tw¨ehou£_tu∂e
;

55 
	gpublic
:

57 
w¨ehou£_m™_im∂
(
w¨ehou£_t
* 
aW¨ehou£Desc
)

58 : 
èbÀ_m™_im∂
<
w¨ehou£_t
>(
aW¨ehou£Desc
)

61 ~
w¨ehou£_m™_im∂
() { }

64 
w_rc_t
 
wh_ödex_¥obe
(
ss_m
* 
db
,

65 
w¨ehou£_tu∂e
* 
±u∂e
,

66 c⁄° 
w_id
);

68 
w_rc_t
 
wh_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

69 
w¨ehou£_tu∂e
* 
±u∂e
,

70 c⁄° 
w_id
);

72 
w_rc_t
 
wh_ödex_¥obe_∆
(
ss_m
* 
db
,

73 
w¨ehou£_tu∂e
* 
±u∂e
,

74 c⁄° 
w_id
);

78 
w_rc_t
 
wh_upd©e_ytd
(
ss_m
* 
db
,

79 
w¨ehou£_tu∂e
* 
±u∂e
,

80 c⁄° 
h_amou¡
,

81 
lock_mode_t
 
lm
 = 
EX
);

83 
w_rc_t
 
wh_upd©e_ytd_∆
(
ss_m
* 
db
,

84 
w¨ehou£_tu∂e
* 
±u∂e
,

85 c⁄° 
h_amou¡
);

91 
˛ass
 
	gdi°ri˘_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
di°ri˘_t
>

93 
èbÀ_row_t
 
	tdi°ri˘_tu∂e
;

95 
	gpublic
:

97 
di°ri˘_m™_im∂
(
di°ri˘_t
* 
aDi°ri˘Desc
)

98 : 
èbÀ_m™_im∂
<
di°ri˘_t
>(
aDi°ri˘Desc
)

101 ~
di°ri˘_m™_im∂
() { }

104 
w_rc_t
 
di°_ödex_¥obe
(
ss_m
* 
db
,

105 
di°ri˘_tu∂e
* 
±u∂e
,

106 c⁄° 
w_id
,

107 c⁄° 
d_id
);

109 
w_rc_t
 
di°_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

110 
di°ri˘_tu∂e
* 
±u∂e
,

111 c⁄° 
w_id
,

112 c⁄° 
d_id
);

114 
w_rc_t
 
di°_ödex_¥obe_∆
(
ss_m
* 
db
,

115 
di°ri˘_tu∂e
* 
±u∂e
,

116 c⁄° 
w_id
,

117 c⁄° 
d_id
);

121 
w_rc_t
 
di°_upd©e_ytd
(
ss_m
* 
db
,

122 
di°ri˘_tu∂e
* 
±u∂e
,

123 c⁄° 
h_amou¡
,

124 
lock_mode_t
 
lm
 = 
EX
);

126 
w_rc_t
 
di°_upd©e_ytd_∆
(
ss_m
* 
db
,

127 
di°ri˘_tu∂e
* 
±u∂e
,

128 c⁄° 
h_amou¡
);

131 
w_rc_t
 
di°_upd©e_√xt_o_id
(
ss_m
* 
db
,

132 
di°ri˘_tu∂e
* 
±u∂e
,

133 c⁄° 
√xt_o_id
,

134 
lock_mode_t
 
lm
 = 
EX
);

136 
w_rc_t
 
di°_upd©e_√xt_o_id_∆
(
ss_m
* 
db
,

137 
di°ri˘_tu∂e
* 
±u∂e
,

138 c⁄° 
√xt_o_id
);

144 
˛ass
 
	gcu°omî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_t
>

146 
èbÀ_row_t
 
	tcu°omî_tu∂e
;

147 
	gèbÀ_sˇn_ôî_im∂
<
	tcu°omî_t
> 
	tcu°omî_èbÀ_ôî
;

148 
	gödex_sˇn_ôî_im∂
<
	tcu°omî_t
> 
	tcu°omî_ödex_ôî
;

150 
	gpublic
:

152 
cu°omî_m™_im∂
(
cu°omî_t
* 
aCu°omîDesc
)

153 : 
èbÀ_m™_im∂
<
cu°omî_t
>(
aCu°omîDesc
)

156 ~
cu°omî_m™_im∂
() { }

159 
w_rc_t
 
cu°_gë_ôî_by_ödex
(
ss_m
* 
db
,

160 
cu°omî_ödex_ôî
* &
ôî
,

161 
cu°omî_tu∂e
* 
±u∂e
,

162 
ªp_row_t
 &
ª∂ow
,

163 
ªp_row_t
 &
ªphigh
,

164 c⁄° 
w_id
,

165 c⁄° 
d_id
,

166 c⁄° * 
c_œ°
,

167 
lock_mode_t
 
Æm
 = 
SH
,

168 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

170 
w_rc_t
 
cu°_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

171 
cu°omî_ödex_ôî
* &
ôî
,

172 
cu°omî_tu∂e
* 
±u∂e
,

173 
ªp_row_t
 &
ª∂ow
,

174 
ªp_row_t
 &
ªphigh
,

175 c⁄° 
w_id
,

176 c⁄° 
d_id
,

177 c⁄° * 
c_œ°
,

178 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

181 
w_rc_t
 
cu°_ödex_¥obe
(
ss_m
* 
db
,

182 
cu°omî_tu∂e
* 
±u∂e
,

183 c⁄° 
w_id
,

184 c⁄° 
d_id
,

185 c⁄° 
c_id
);

187 
w_rc_t
 
cu°_ödex_¥obe_by_«me
(
ss_m
* 
db
,

188 c⁄° * 
idx_«me
,

189 
cu°omî_tu∂e
* 
±u∂e
,

190 c⁄° 
w_id
,

191 c⁄° 
d_id
,

192 c⁄° 
c_id
);

194 
w_rc_t
 
cu°_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

195 
cu°omî_tu∂e
* 
±u∂e
,

196 c⁄° 
w_id
,

197 c⁄° 
d_id
,

198 c⁄° 
c_id
);

199 
w_rc_t
 
cu°_ödex_¥obe_∆
(
ss_m
* 
db
,

200 
cu°omî_tu∂e
* 
±u∂e
,

201 c⁄° 
w_id
,

202 c⁄° 
d_id
,

203 c⁄° 
c_id
);

207 
w_rc_t
 
cu°_upd©e_tu∂e
(
ss_m
* 
db
,

208 
cu°omî_tu∂e
* 
±u∂e
,

209 c⁄° 
çcc_cu°omî_tu∂e
& 
acu°omî
,

210 c⁄° * 
ad©a1
 = 
NULL
,

211 c⁄° * 
ad©a2
 = 
NULL
,

212 
lock_mode_t
 
lm
 = 
EX
);

214 
w_rc_t
 
cu°_upd©e_tu∂e_∆
(
ss_m
* 
db
,

215 
cu°omî_tu∂e
* 
±u∂e
,

216 c⁄° 
çcc_cu°omî_tu∂e
& 
acu°omî
,

217 c⁄° * 
ad©a1
 = 
NULL
,

218 c⁄° * 
ad©a2
 = 
NULL
);

221 
w_rc_t
 
cu°_upd©e_discou¡_bÆ™˚
(
ss_m
* 
db
,

222 
cu°omî_tu∂e
* 
±u∂e
,

223 c⁄° 
decimÆ
 
discou¡
,

224 c⁄° 
decimÆ
 
bÆ™˚
,

225 
lock_mode_t
 
lm
 = 
EX
);

227 
w_rc_t
 
cu°_upd©e_discou¡_bÆ™˚_∆
(
ss_m
* 
db
,

228 
cu°omî_tu∂e
* 
±u∂e
,

229 c⁄° 
decimÆ
 
discou¡
,

230 c⁄° 
decimÆ
 
bÆ™˚
);

237 
˛ass
 
	ghi°‹y_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
hi°‹y_t
>

239 
èbÀ_row_t
 
	thi°‹y_tu∂e
;

241 
	gpublic
:

243 
hi°‹y_m™_im∂
(
hi°‹y_t
* 
aHi°‹yDesc
)

244 : 
èbÀ_m™_im∂
<
hi°‹y_t
>(
aHi°‹yDesc
)

247 ~
hi°‹y_m™_im∂
() { }

252 
˛ass
 
	g√w_‹dî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
√w_‹dî_t
>

254 
èbÀ_row_t
 
	t√w_‹dî_tu∂e
;

255 
	gèbÀ_sˇn_ôî_im∂
<
	t√w_‹dî_t
> 
	t√w_‹dî_èbÀ_ôî
;

256 
	gödex_sˇn_ôî_im∂
<
	t√w_‹dî_t
> 
	t√w_‹dî_ödex_ôî
;

258 
	gpublic
:

260 
√w_‹dî_m™_im∂
(
√w_‹dî_t
* 
aNewOrdîDesc
)

261 : 
èbÀ_m™_im∂
<
√w_‹dî_t
>(
aNewOrdîDesc
)

265 ~
√w_‹dî_m™_im∂
()

270 
w_rc_t
 
no_gë_ôî_by_ödex
(
ss_m
* 
db
,

271 
√w_‹dî_ödex_ôî
* &
ôî
,

272 
√w_‹dî_tu∂e
* 
±u∂e
,

273 
ªp_row_t
 &
ª∂ow
,

274 
ªp_row_t
 &
ªphigh
,

275 c⁄° 
w_id
,

276 c⁄° 
d_id
,

277 
lock_mode_t
 
Æm
 = 
SH
,

278 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

280 
w_rc_t
 
no_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

281 
√w_‹dî_ödex_ôî
* &
ôî
,

282 
√w_‹dî_tu∂e
* 
±u∂e
,

283 
ªp_row_t
 &
ª∂ow
,

284 
ªp_row_t
 &
ªphigh
,

285 c⁄° 
w_id
,

286 c⁄° 
d_id
,

287 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

290 
w_rc_t
 
no_dñëe_by_ödex
(
ss_m
* 
db
,

291 
√w_‹dî_tu∂e
* 
±u∂e
,

292 c⁄° 
w_id
,

293 c⁄° 
d_id
,

294 c⁄° 
o_id
);

296 
w_rc_t
 
no_dñëe_by_ödex_∆
(
ss_m
* 
db
,

297 
√w_‹dî_tu∂e
* 
±u∂e
,

298 c⁄° 
w_id
,

299 c⁄° 
d_id
,

300 c⁄° 
o_id
);

305 
˛ass
 
	g‹dî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
‹dî_t
>

307 
èbÀ_row_t
 
	t‹dî_tu∂e
;

308 
	gèbÀ_sˇn_ôî_im∂
<
	t‹dî_t
> 
	t‹dî_èbÀ_ôî
;

309 
	gödex_sˇn_ôî_im∂
<
	t‹dî_t
> 
	t‹dî_ödex_ôî
;

311 
	gpublic
:

313 
‹dî_m™_im∂
(
‹dî_t
* 
aOrdîDesc
)

314 : 
èbÀ_m™_im∂
<
‹dî_t
>(
aOrdîDesc
)

318 ~
‹dî_m™_im∂
()

323 
w_rc_t
 
‹d_gë_ôî_by_ödex
(
ss_m
* 
db
,

324 
‹dî_ödex_ôî
* &
ôî
,

325 
‹dî_tu∂e
* 
±u∂e
,

326 
ªp_row_t
 &
ª∂ow
,

327 
ªp_row_t
 &
ªphigh
,

328 c⁄° 
w_id
,

329 c⁄° 
d_id
,

330 c⁄° 
c_id
,

331 
lock_mode_t
 
Æm
 = 
SH
,

332 
boﬁ
 
√ed_tu∂e
 = 
åue
);

334 
w_rc_t
 
‹d_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

335 
‹dî_ödex_ôî
* &
ôî
,

336 
‹dî_tu∂e
* 
±u∂e
,

337 
ªp_row_t
 &
ª∂ow
,

338 
ªp_row_t
 &
ªphigh
,

339 c⁄° 
w_id
,

340 c⁄° 
d_id
,

341 c⁄° 
c_id
,

342 
boﬁ
 
√ed_tu∂e
 = 
åue
);

345 
w_rc_t
 
‹d_upd©e_ˇºõr_by_ödex
(
ss_m
* 
db
,

346 
‹dî_tu∂e
* 
±u∂e
,

347 c⁄° 
ˇºõr_id
);

349 
w_rc_t
 
‹d_upd©e_ˇºõr_by_ödex_∆
(
ss_m
* 
db
,

350 
‹dî_tu∂e
* 
±u∂e
,

351 c⁄° 
ˇºõr_id
);

357 
˛ass
 
	g‹dî_löe_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
‹dî_löe_t
>

359 
èbÀ_row_t
 
	t‹dî_löe_tu∂e
;

360 
	gèbÀ_sˇn_ôî_im∂
<
	t‹dî_löe_t
> 
	t‹dî_löe_èbÀ_ôî
;

361 
	gödex_sˇn_ôî_im∂
<
	t‹dî_löe_t
> 
	t‹dî_löe_ödex_ôî
;

363 
	gpublic
:

365 
‹dî_löe_m™_im∂
(
‹dî_löe_t
* 
aOrdîLöeDesc
)

366 : 
èbÀ_m™_im∂
<
‹dî_löe_t
>(
aOrdîLöeDesc
)

370 ~
‹dî_löe_m™_im∂
()

375 
w_rc_t
 
ﬁ_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

376 
‹dî_löe_ödex_ôî
* &
ôî
,

377 
‹dî_löe_tu∂e
* 
±u∂e
,

378 
ªp_row_t
 &
ª∂ow
,

379 
ªp_row_t
 &
ªphigh
,

380 c⁄° 
w_id
,

381 c⁄° 
d_id
,

382 c⁄° 
low_o_id
,

383 c⁄° 
high_o_id
,

384 
lock_mode_t
 
Æm
 = 
SH
,

385 
boﬁ
 
√ed_tu∂e
 = 
åue
);

387 
w_rc_t
 
ﬁ_gë_ønge_ôî_by_ödex_∆
(
ss_m
* 
db
,

388 
‹dî_löe_ödex_ôî
* &
ôî
,

389 
‹dî_löe_tu∂e
* 
±u∂e
,

390 
ªp_row_t
 &
ª∂ow
,

391 
ªp_row_t
 &
ªphigh
,

392 c⁄° 
w_id
,

393 c⁄° 
d_id
,

394 c⁄° 
low_o_id
,

395 c⁄° 
high_o_id
,

396 
boﬁ
 
√ed_tu∂e
 = 
åue
);

398 
w_rc_t
 
ﬁ_gë_¥obe_ôî_by_ödex
(
ss_m
* 
db
,

399 
‹dî_löe_ödex_ôî
* &
ôî
,

400 
‹dî_löe_tu∂e
* 
±u∂e
,

401 
ªp_row_t
 &
ª∂ow
,

402 
ªp_row_t
 &
ªphigh
,

403 c⁄° 
w_id
,

404 c⁄° 
d_id
,

405 c⁄° 
o_id
,

406 
lock_mode_t
 
Æm
 = 
SH
,

407 
boﬁ
 
√ed_tu∂e
 = 
åue
);

409 
w_rc_t
 
ﬁ_gë_¥obe_ôî_by_ödex_∆
(
ss_m
* 
db
,

410 
‹dî_löe_ödex_ôî
* &
ôî
,

411 
‹dî_löe_tu∂e
* 
±u∂e
,

412 
ªp_row_t
 &
ª∂ow
,

413 
ªp_row_t
 &
ªphigh
,

414 c⁄° 
w_id
,

415 c⁄° 
d_id
,

416 c⁄° 
o_id
,

417 
boﬁ
 
√ed_tu∂e
 = 
åue
);

423 
˛ass
 
	gôem_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ôem_t
>

425 
èbÀ_row_t
 
	tôem_tu∂e
;

426 
	gèbÀ_sˇn_ôî_im∂
<
	tôem_t
> 
	tôem_èbÀ_ôî
;

427 
	gödex_sˇn_ôî_im∂
<
	tôem_t
> 
	tôem_ödex_ôî
;

429 
	gpublic
:

431 
ôem_m™_im∂
(
ôem_t
* 
aIãmDesc
)

432 : 
èbÀ_m™_im∂
<
ôem_t
>(
aIãmDesc
)

436 ~
ôem_m™_im∂
()

441 
w_rc_t
 
ô_ödex_¥obe
(
ss_m
* 
ddb
,

442 
ôem_tu∂e
* 
±u∂e
,

443 c⁄° 
i_id
);

445 
w_rc_t
 
ô_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

446 
ôem_tu∂e
* 
±u∂e
,

447 c⁄° 
i_id
);

449 
w_rc_t
 
ô_ödex_¥obe_∆
(
ss_m
* 
db
,

450 
ôem_tu∂e
* 
±u∂e
,

451 c⁄° 
i_id
);

457 
˛ass
 
	g°ock_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
°ock_t
>

459 
èbÀ_row_t
 
	t°ock_tu∂e
;

460 
	gèbÀ_sˇn_ôî_im∂
<
	t°ock_t
> 
	t°ock_èbÀ_ôî
;

461 
	gödex_sˇn_ôî_im∂
<
	t°ock_t
> 
	t°ock_ödex_ôî
;

463 
	gpublic
:

465 
°ock_m™_im∂
(
°ock_t
* 
aStockDesc
)

466 : 
èbÀ_m™_im∂
<
°ock_t
>(
aStockDesc
)

470 ~
°ock_m™_im∂
()

475 
w_rc_t
 
°_ödex_¥obe
(
ss_m
* 
db
,

476 
°ock_tu∂e
* 
±u∂e
,

477 c⁄° 
w_id
,

478 c⁄° 
i_id
);

480 
w_rc_t
 
°_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

481 
°ock_tu∂e
* 
±u∂e
,

482 c⁄° 
w_id
,

483 c⁄° 
i_id
);

485 
w_rc_t
 
°_ödex_¥obe_∆
(
ss_m
* 
db
,

486 
°ock_tu∂e
* 
±u∂e
,

487 c⁄° 
w_id
,

488 c⁄° 
i_id
);

491 
w_rc_t
 
°_upd©e_tu∂e
(
ss_m
* 
db
,

492 
°ock_tu∂e
* 
±u∂e
,

493 c⁄° 
çcc_°ock_tu∂e
* 
p°ock
,

494 
lock_mode_t
 
lm
 = 
EX
);

496 
w_rc_t
 
°_upd©e_tu∂e_∆
(
ss_m
* 
db
,

497 
°ock_tu∂e
* 
±u∂e
,

498 c⁄° 
çcc_°ock_tu∂e
* 
p°ock
);

503 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/tpcc_const.h

32 #i‚de‡
__TPCC_CONST_H


33 
	#__TPCC_CONST_H


	)

36 
	~"utû/«me•a˚.h
"

39 
ENTER_NAMESPACE
(
çcc
);

42 c⁄° 
	gTPCC_C_LAST_SZ
 = 16;

43 c⁄° 
	gTPCC_C_FIRST_SZ
 = 16;

49 c⁄° 
	gDISTRICTS_PER_WAREHOUSE
 = 10;

50 c⁄° 
	gCUSTOMERS_PER_DISTRICT
 = 3000;

51 c⁄° 
	gITEMS
 = 100000;

52 c⁄° 
	gSTOCK_PER_WAREHOUSE
 = 
ITEMS
;

53 c⁄° 
	gMIN_OL_PER_ORDER
 = 5;

54 c⁄° 
	gMAX_OL_PER_ORDER
 = 15;

55 c⁄° 
	gNU_ORDERS_PER_DISTRICT
 = 900;

57 c⁄° 
	gMAX_TABLENAM_LENGTH
 = 20;

58 c⁄° 
	gMAX_RECORD_LENGTH
 = 512;

63 c⁄° 
	gTPCC_WAREHOUSE_FCOUNT
 = 9;

64 c⁄° 
	gTPCC_DISTRICT_FCOUNT
 = 11;

65 c⁄° 
	gTPCC_CUSTOMER_FCOUNT
 = 22;

66 c⁄° 
	gTPCC_HISTORY_FCOUNT
 = 8;

67 c⁄° 
	gTPCC_NEW_ORDER_FCOUNT
 = 3;

68 c⁄° 
	gTPCC_ORDER_FCOUNT
 = 8;

69 c⁄° 
	gTPCC_ORDER_LINE_FCOUNT
 = 10;

70 c⁄° 
	gTPCC_ITEM_FCOUNT
 = 5;

71 c⁄° 
	gTPCC_STOCK_FCOUNT
 = 17;

75 c⁄° 
	gSHORE_TPCC_TABLES
 = 9;

83 c⁄° 
	gXCT_MIX
 = 0;

84 c⁄° 
	gXCT_NEW_ORDER
 = 1;

85 c⁄° 
	gXCT_PAYMENT
 = 2;

86 c⁄° 
	gXCT_ORDER_STATUS
 = 3;

87 c⁄° 
	gXCT_DELIVERY
 = 4;

88 c⁄° 
	gXCT_STOCK_LEVEL
 = 5;

90 c⁄° 
	gXCT_LITTLE_MIX
 = 9;

93 c⁄° 
	gXCT_MBENCH_WH
 = 11;

94 c⁄° 
	gXCT_MBENCH_CUST
 = 12;

99 c⁄° 
	gPROB_NEWORDER
 = 45;

100 c⁄° 
	gPROB_PAYMENT
 = 43;

101 c⁄° 
	gPROB_ORDER_STATUS
 = 4;

102 c⁄° 
	gPROB_DELIVERY
 = 4;

103 c⁄° 
	gPROB_STOCK_LEVEL
 = 4;

110 
øndom_x˘_ty≥
(
£À˘ed
);

113 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/tpcc_input.h

32 #i‚de‡
__TPCC_INPUT_H


33 
	#__TPCC_INPUT_H


	)

35 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

36 
	~"w‹klﬂd/çcc/çcc_°ru˘.h
"

39 
ENTER_NAMESPACE
(
çcc
);

43 
skewî_t
 
w_skewî
;

44 
boﬁ
 
_ch™ge_lﬂd
;

58 
	gno_ôem_n‹d_öput_t
;

59 
	gwôh_ôem_n‹d_öput_t
;

61 
	sﬁ_ôem_öfo


63 
	m_ﬁ_i_id
;

64 
	m_ﬁ_suµly_wh_£À˘
;

65 
	m_ﬁ_suµly_wh_id
;

66 
	m_ﬁ_qu™tôy
;

68 
	m_ôem_amou¡
;

70 
çcc_°ock_tu∂e
 
	m_a°ock
;

71 
çcc_ôem_tu∂e
 
	m_aôem
;

74 
	mﬁ_ôem_öfo
& 
	m›î©‹
(c⁄° 
ﬁ_ôem_öfo
& 
rhs
);

79 
	s√w_‹dî_öput_t


81 
	m_wh_id
;

82 
	m_d_id
;

83 
	m_c_id
;

84 
	m_ﬁ_˙t
;

85 
	m_rbk
;

87 
time_t
 
	m_t°amp
;

88 
	m_Æl_loˇl
;

89 
	m_d_√xt_o_id
;

91 
çcc_w¨ehou£_tu∂e
 
	m_awh
;

92 
çcc_cu°omî_tu∂e
 
	m_acu°
;

93 
çcc_di°ri˘_tu∂e
 
	m_adi°
;

95 
ﬁ_ôem_öfo
 
	môems
[
MAX_OL_PER_ORDER
];

100 
√w_‹dî_öput_t
()

101 : 
_wh_id
(0), 
_d_id
(0), 
_c_id
(0), 
_ﬁ_˙t
(0), 
_rbk
(0), 
_t°amp
(0), 
_Æl_loˇl
(1), 
_d_√xt_o_id
(-1)

104 ~
√w_‹dî_öput_t
() { };

107 
	m√w_‹dî_öput_t
& 
	m›î©‹
(c⁄° 
√w_‹dî_öput_t
& 
rhs
);

110 
gë_no_ôem_öput
(
no_ôem_n‹d_öput_t
& 
™oö
);

111 
gë_wôh_ôem_öput
(
wôh_ôem_n‹d_öput_t
& 
awö
, c⁄° 
idx
);

123 
	sno_ôem_n‹d_öput_t


125 
	m_wh_id
;

126 
	m_d_id
;

127 
	m_c_id
;

128 
	m_ﬁ_˙t
;

129 
	m_rbk
;

131 
time_t
 
	m_t°amp
;

132 
	m_Æl_loˇl
;

133 
	m_d_√xt_o_id
;

136 
	mno_ôem_n‹d_öput_t
& 
	m›î©‹
(c⁄° 
no_ôem_n‹d_öput_t
& 
rhs
);

141 
	swôh_ôem_n‹d_öput_t


143 
	m_wh_id
;

144 
	m_d_id
;

145 
	m_c_id
;

146 
	m_ﬁ_˙t
;

147 
	m_rbk
;

149 
time_t
 
	m_t°amp
;

150 
	m_Æl_loˇl
;

151 
	m_d_√xt_o_id
;

153 
	m_ﬁ_idx
;

155 
ﬁ_ôem_öfo
 
	môem
;

158 
	mwôh_ôem_n‹d_öput_t
& 
	m›î©‹
(c⁄° 
wôh_ôem_n‹d_öput_t
& 
rhs
);

171 
	s∑ymít_öput_t


188 
	m_home_wh_id
;

189 
	m_home_d_id
;

190 
	m_v_cu°_wh_£À˘i⁄
;

191 
	m_ªmŸe_wh_id
;

192 
	m_ªmŸe_d_id
;

193 
	m_v_cu°_idít_£À˘i⁄
;

194 
	m_c_id
;

195 
	m_c_œ°
[16];

196 
	m_h_amou¡
;

197 
	m_h_d©e
;

200 
∑ymít_öput_t
()

201 : 
_home_wh_id
(0), 
_home_d_id
(0), 
_v_cu°_wh_£À˘i⁄
(0),

202 
_ªmŸe_wh_id
(0), 
_ªmŸe_d_id
(0), 
_v_cu°_idít_£À˘i⁄
(0),

203 
_c_id
(0), 
_h_amou¡
(0), 
_h_d©e
(0)

205 
mem£t
(
_c_œ°
, '\0', 16);

208 ~
∑ymít_öput_t
() { };

210 
	m∑ymít_öput_t
& 
	m›î©‹
(c⁄° 
∑ymít_öput_t
& 
rhs
);

224 
	s‹dî_°©us_öput_t


226 
	m_wh_id
;

227 
	m_d_id
;

228 
	m_c_£À˘
;

229 
	m_c_id
;

230 
	m_c_œ°
[16];

233 
	m_o_id
;

234 
	m_o_ﬁ_˙t
;

238 
‹dî_°©us_öput_t
()

239 : 
_wh_id
(0), 
_d_id
(0), 
_c_£À˘
(0), 
_c_id
(0),

240 
_o_id
(0), 
_o_ﬁ_˙t
(0)

242 
mem£t
(
_c_œ°
, '\0', 16);

245 ~
‹dî_°©us_öput_t
() { };

248 
	m‹dî_°©us_öput_t
& 
	m›î©‹
(c⁄° 
‹dî_°©us_öput_t
& 
rhs
);

262 
	sdñivîy_öput_t


264 
	m_wh_id
;

265 
	m_ˇºõr_id
;

269 
dñivîy_öput_t
()

270 : 
_wh_id
(0),
_ˇºõr_id
(0)

273 ~
dñivîy_öput_t
() { };

277 
	mdñivîy_öput_t
& 
	m›î©‹
(c⁄° 
dñivîy_öput_t
& 
rhs
);

291 
	gve˘‹
<
	t∑ú
<,> > 
	tTwoI¡Vec
;

292 
	gTwoI¡Vec
::
	tôî©‹
 
	tTwoI¡VecIt
;

294 
	s°ock_Àvñ_öput_t


296 
	m_wh_id
;

297 
	m_d_id
;

298 
	m_thªshﬁd
;

301 
	m_√xt_o_id
;

302 
	m_o_ﬁ_˙t
;

303 
TwoI¡Vec
* 
	m_pvwi
;

307 
°ock_Àvñ_öput_t
()

308 : 
_wh_id
(0), 
_d_id
(0), 
_thªshﬁd
(0),

309 
_o_ﬁ_˙t
(0), 
_pvwi
(
NULL
)

313 ~
°ock_Àvñ_öput_t
() { };

317 
	m°ock_Àvñ_öput_t
& 
	m›î©‹
(c⁄° 
°ock_Àvñ_öput_t
& 
rhs
);

331 
	smbích_wh_öput_t


333 
	m_wh_id
;

334 
	m_amou¡
;

337 
mbích_wh_öput_t
()

338 : 
_wh_id
(0), 
_amou¡
(0)

341 ~
mbích_wh_öput_t
() { };

344 
	mmbích_wh_öput_t
& 
	m›î©‹
(c⁄° 
mbích_wh_öput_t
& 
rhs
);

358 
	smbích_cu°_öput_t


360 
	m_wh_id
;

361 
	m_d_id
;

362 
	m_c_id
;

363 
	m_amou¡
;

366 
mbích_cu°_öput_t
()

367 : 
_wh_id
(0), 
_d_id
(0), 
_c_id
(0), 
_amou¡
(0)

370 ~
mbích_cu°_öput_t
() { };

373 
	mmbích_cu°_öput_t
& 
	m›î©‹
(c⁄° 
mbích_cu°_öput_t
& 
rhs
);

387 
	sp›uœã_ba£löe_öput_t


389 
	m_wh
;

392 
	sp›uœã_⁄e_unô_öput_t


394 
	m_unô
;

395 * 
	m_cids
;

411 
∑ymít_öput_t
 
¸óã_∑ymít_öput
(
sf
,

412 
•ecificWH
 = 0);

414 
√w_‹dî_öput_t
 
¸óã_√w_‹dî_öput
(
sf
,

415 
•ecificWH
 = 0);

417 
‹dî_°©us_öput_t
 
¸óã_‹dî_°©us_öput
(
sf
,

418 
•ecificWH
 = 0);

420 
dñivîy_öput_t
 
¸óã_dñivîy_öput
(
sf
,

421 
•ecificWH
 = 0);

423 
°ock_Àvñ_öput_t
 
¸óã_°ock_Àvñ_öput
(
sf
,

424 
•ecificWH
 = 0);

426 
mbích_wh_öput_t
 
¸óã_mbích_wh_öput
(
sf
,

427 
•ecificWH
 = 0);

429 
mbích_cu°_öput_t
 
¸óã_mbích_cu°_öput
(
sf
,

430 
•ecificWH
 = 0);

437 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/tpcc_random.h

32 #i‚de‡
__TPCC_COMMON_H


33 
	#__TPCC_COMMON_H


	)

35 
	~"utû.h
"

38 
ENTER_NAMESPACE
(
çcc
);

52 
NUR™d
(
A
, 
low
, 
high
);

54 
gíî©e_cu°_œ°
(
£À˘
, * 
de°
);

56 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpcc/tpcc_struct.h

32 #i‚de‡
__TPCC_STRUCT_H


33 
	#__TPCC_STRUCT_H


	)

35 
	~<c°dlib
>

36 
	~<uni°d.h
>

37 
	~<sys/time.h
>

38 
	~"utû.h
"

41 
ENTER_NAMESPACE
(
çcc
);

45 
	#STRSIZE
(
x
)(x+1)

	)

54 
	sçcc_cu°omî_tu∂e
 {

55 
	mC_C_ID
;

56 
	mC_D_ID
;

57 
	mC_W_ID
;

58 
	mC_FIRST
 [
STRSIZE
(16)];

59 
	mC_MIDDLE
 [
STRSIZE
(2)];

60 
	mC_LAST
 [
STRSIZE
(16)];

61 
	mC_STREET_1
 [
STRSIZE
(20)];

62 
	mC_STREET_2
 [
STRSIZE
(20)];

63 
	mC_CITY
 [
STRSIZE
(20)];

64 
	mC_STATE
 [
STRSIZE
(2)];

65 
	mC_ZIP
 [
STRSIZE
(9)];

66 
	mC_PHONE
 [
STRSIZE
(16)];

67 
time_t
 
	mC_SINCE
;

68 
	mC_CREDIT
 [
STRSIZE
(2)];

69 
decimÆ
 
	mC_CREDIT_LIM
;

70 
decimÆ
 
	mC_DISCOUNT
;

71 
decimÆ
 
	mC_BALANCE
;

72 
decimÆ
 
	mC_YTD_PAYMENT
;

73 
decimÆ
 
	mC_LAST_PAYMENT
;

74 
	mC_PAYMENT_CNT
;

75 
	mC_DATA_1
 [
STRSIZE
(250)];

76 
	mC_DATA_2
 [
STRSIZE
(250)];

78 
c_°r
 
tu∂e_to_°r
() {

79 (
c_°r
("CUST = %d|%d|%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%.2f|%s -",

80 
C_C_ID
, 
C_D_ID
, 
C_W_ID
, 
C_FIRST
, 
C_MIDDLE
, 
C_LAST
,

81 
C_STREET_1
, 
C_STREET_2
, 
C_CITY
, 
C_STATE
, 
C_ZIP
,

82 
C_PHONE
, 
C_SINCE
, 
C_CREDIT
));

89 
	sçcc_cu°omî_tu∂e_key
 {

90 
	mC_C_ID
;

91 
	mC_D_ID
;

92 
	mC_W_ID
;

94 
boﬁ
 
	m›î©‹
==(c⁄° 
çcc_cu°omî_tu∂e_key
& 
rhs
) const {

95  ((
C_C_ID
 =
rhs
.C_C_ID) &&

96 (
C_D_ID
 =
rhs
.C_D_ID) &&

97 (
C_W_ID
 =
rhs
.C_W_ID));

100 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçcc_cu°omî_tu∂e_key
& 
	mrhs
) const {

101 i‡((
	mC_C_ID
 < 
	mrhs
.C_C_ID) ||

102 ((
	mC_C_ID
 =
rhs
.
C_C_ID
Ë&& (
C_D_ID
 <Ñhs.C_D_ID)) ||

103 ((
C_C_ID
 =
rhs
.C_C_IDË&& (
C_D_ID
 =rhs.C_D_IDË&& (
C_W_ID
 <Ñhs.C_W_ID)))

104  (
åue
);

106  (
	mÁl£
);

111 
	sçcc_cu°omî_tu∂e_body
 {

112 
	mC_FIRST
 [
STRSIZE
(16)];

113 
	mC_MIDDLE
 [
STRSIZE
(2)];

114 
	mC_LAST
 [
STRSIZE
(16)];

115 
	mC_STREET_1
 [
STRSIZE
(20)];

116 
	mC_STREET_2
 [
STRSIZE
(20)];

117 
	mC_CITY
 [
STRSIZE
(20)];

118 
	mC_STATE
 [
STRSIZE
(2)];

119 
	mC_ZIP
 [
STRSIZE
(9)];

120 
	mC_PHONE
 [
STRSIZE
(16)];

121 
time_t
 
	mC_SINCE
;

122 
	mC_CREDIT
 [
STRSIZE
(2)];

123 
decimÆ
 
	mC_CREDIT_LIM
;

124 
decimÆ
 
	mC_DISCOUNT
;

125 
decimÆ
 
	mC_BALANCE
;

126 
decimÆ
 
	mC_YTD_PAYMENT
;

127 
decimÆ
 
	mC_LAST_PAYMENT
;

128 
	mC_PAYMENT_CNT
;

129 
	mC_DATA_1
 [
STRSIZE
(250)];

130 
	mC_DATA_2
 [
STRSIZE
(250)];

136 
	sçcc_di°ri˘_tu∂e
 {

137 
	mD_ID
;

138 
	mD_W_ID
;

139 
	mD_NAME
 [
STRSIZE
(10)];

140 
	mD_STREET_1
 [
STRSIZE
(20)];

141 
	mD_STREET_2
 [
STRSIZE
(20)];

142 
	mD_CITY
 [
STRSIZE
(20)];

143 
	mD_STATE
 [
STRSIZE
(2)];

144 
	mD_ZIP
 [
STRSIZE
(9)];

145 
decimÆ
 
	mD_TAX
;

146 
decimÆ
 
	mD_YTD
;

147 
	mD_NEXT_O_ID
;

150 
c_°r
 
tu∂e_to_°r
() {

151 (
c_°r
("DISTR = %d|%d|%s|%s|%s|%s|%s|%s|%.2f|%.2f|%d",

152 
D_ID
, 
D_W_ID
, 
D_NAME
, 
D_STREET_1
, 
D_STREET_2
,

153 
D_CITY
, 
D_STATE
, 
D_ZIP
,

154 
D_TAX
.
to_doubÀ
(), 
D_YTD
.to_doubÀ(), 
D_NEXT_O_ID
));

160 
	sçcc_di°ri˘_tu∂e_key
 {

161 
	mD_ID
;

162 
	mD_W_ID
;

169 
	sçcc_hi°‹y_tu∂e
 {

170 
	mH_C_ID
;

171 
	mH_C_D_ID
;

172 
	mH_C_W_ID
;

173 
	mH_D_ID
;

174 
	mH_W_ID
;

175 
time_t
 
	mH_DATE
;

176 
decimÆ
 
	mH_AMOUNT
;

177 
	mH_DATA
 [
STRSIZE
(25)];

179 
c_°r
 
tu∂e_to_°r
() {

180 (
c_°r
("HIST = %d|%d|%d|%d|%d|%.2f|%.2f|%s",

181 
H_C_ID
, 
H_C_D_ID
, 
H_C_W_ID
, 
H_D_ID
,

182 
H_W_ID
, 
H_DATE
, 
H_AMOUNT
.
to_doubÀ
(),

183 
H_DATA
));

189 
	sçcc_hi°‹y_tu∂e_key
 {

190 
	mH_C_ID
;

191 
	mH_C_D_ID
;

192 
	mH_C_W_ID
;

193 
	mH_D_ID
;

194 
	mH_W_ID
;

195 
time_t
 
	mH_DATE
;

197 
boﬁ
 
	m›î©‹
==(c⁄° 
çcc_hi°‹y_tu∂e_key
& 
rhs
) const {

198  ((
H_C_ID
 =
rhs
.H_C_ID) &&

199 (
H_C_D_ID
 =
rhs
.H_C_D_ID) &&

200 (
H_C_W_ID
 =
rhs
.H_C_W_ID) &&

201 (
H_D_ID
 =
rhs
.H_D_ID) &&

202 (
H_W_ID
 =
rhs
.H_W_ID) &&

203 (
H_DATE
 =
rhs
.H_DATE));

206 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçcc_hi°‹y_tu∂e_key
& 
	mrhs
) const {

207 i‡((
	mH_C_ID
 < 
	mrhs
.H_C_ID) ||

208 ((
	mH_C_ID
 =
rhs
.
H_C_ID
Ë&& (
H_C_D_ID
 <Ñhs.H_C_D_ID)) ||

209 ((
H_C_ID
 =
rhs
.H_C_IDË&& (
H_C_D_ID
 ==Ñhs.H_C_D_ID) &&

210 (
H_C_W_ID
 < 
rhs
.H_C_W_ID)) ||

211 ((
H_C_ID
 =
rhs
.H_C_IDË&& (
H_C_D_ID
 ==Ñhs.H_C_D_ID) &&

212 (
H_C_W_ID
 =
rhs
.H_C_W_IDË&& (
H_D_ID
 <Ñhs.H_D_ID)) ||

213 ((
H_C_ID
 =
rhs
.H_C_IDË&& (
H_C_D_ID
 ==Ñhs.H_C_D_ID) &&

214 (
H_C_W_ID
 =
rhs
.H_C_W_IDË&& (
H_D_ID
 ==Ñhs.H_D_ID) &&

215 (
H_W_ID
 < 
rhs
.H_W_ID)) ||

216 ((
H_C_ID
 =
rhs
.H_C_IDË&& (
H_C_D_ID
 ==Ñhs.H_C_D_ID) &&

217 (
H_C_W_ID
 =
rhs
.H_C_W_IDË&& (
H_D_ID
 ==Ñhs.H_D_ID) &&

218 (
H_W_ID
 =
rhs
.H_W_IDË&& (
H_DATE
 ==Ñhs.H_DATE))

220  (
åue
);

222  (
	mÁl£
);

227 
	sçcc_hi°‹y_tu∂e_body
 {

228 
decimÆ
 
	mH_AMOUNT
;

229 
	mH_DATA
 [
STRSIZE
(25)];

235 
	sçcc_ôem_tu∂e
 {

236 
	mI_ID
;

237 
	mI_IM_ID
;

238 
	mI_NAME
 [
STRSIZE
(24)];

239 
	mI_PRICE
;

240 
	mI_DATA
 [
STRSIZE
(50)];

245 
	sçcc_ôem_tu∂e_key
 {

246 
	mI_ID
;

253 
	sçcc_√w_‹dî_tu∂e
 {

254 
	mNO_O_ID
;

255 
	mNO_D_ID
;

256 
	mNO_W_ID
;

262 
	sçcc_‹dî_tu∂e
 {

263 
	mO_ID
;

264 
	mO_C_ID
;

265 
	mO_D_ID
;

266 
	mO_W_ID
;

267 
time_t
 
	mO_ENTRY_D
;

268 
	mO_CARRIER_ID
;

269 
	mO_OL_CNT
;

270 
	mO_ALL_LOCAL
;

274 
	sçcc_‹dî_tu∂e_key
 {

275 
	mO_ID
;

276 
	mO_C_ID
;

277 
	mO_D_ID
;

278 
	mO_W_ID
;

282 
	sçcc_‹dî_tu∂e_body
 {

283 
time_t
 
	mO_ENTRY_D
;

284 
	mO_CARRIER_ID
;

285 
	mO_OL_CNT
;

286 
	mO_ALL_LOCAL
;

294 
	sçcc_‹dîlöe_tu∂e
 {

295 
	mOL_O_ID
;

296 
	mOL_D_ID
;

297 
	mOL_W_ID
;

298 
	mOL_NUMBER
;

299 
	mOL_I_ID
;

300 
	mOL_SUPPLY_W_ID
;

301 
time_t
 
	mOL_DELIVERY_D
;

302 
	mOL_QUANTITY
;

303 
	mOL_AMOUNT
;

304 
	mOL_DIST_INFO
 [
STRSIZE
(25)];

308 
	sçcc_‹dîlöe_tu∂e_key
 {

309 
	mOL_O_ID
;

310 
	mOL_D_ID
;

311 
	mOL_W_ID
;

312 
	mOL_NUMBER
;

316 
	sçcc_‹dîlöe_tu∂e_body
 {

317 
	mOL_I_ID
;

318 
	mOL_SUPPLY_W_ID
;

319 
time_t
 
	mOL_DELIVERY_D
;

320 
	mOL_QUANTITY
;

321 
	mOL_AMOUNT
;

322 
	mOL_DIST_INFO
 [
STRSIZE
(25)];

329 
	sçcc_°ock_tu∂e
 {

330 
	mS_I_ID
;

331 
	mS_W_ID
;

332 
	mS_REMOTE_CNT
;

333 
	mS_QUANTITY
;

334 
	mS_ORDER_CNT
;

335 
	mS_YTD
;

337 
	mS_DIST
[10][
STRSIZE
(24)];

340 
	mS_DIST_01
 [
STRSIZE
(24)];

341 
	mS_DIST_02
 [
STRSIZE
(24)];

342 
	mS_DIST_03
 [
STRSIZE
(24)];

343 
	mS_DIST_04
 [
STRSIZE
(24)];

344 
	mS_DIST_05
 [
STRSIZE
(24)];

345 
	mS_DIST_06
 [
STRSIZE
(24)];

346 
	mS_DIST_07
 [
STRSIZE
(24)];

347 
	mS_DIST_08
 [
STRSIZE
(24)];

348 
	mS_DIST_09
 [
STRSIZE
(24)];

349 
	mS_DIST_10
 [
STRSIZE
(24)];

352 
	mS_DATA
 [
STRSIZE
(50)];

356 
	sçcc_°ock_tu∂e_key
 {

357 
	mS_I_ID
;

358 
	mS_W_ID
;

364 
	sçcc_w¨ehou£_tu∂e
 {

365 
	mW_ID
;

366 
	mW_NAME
 [
STRSIZE
(10)];

367 
	mW_STREET_1
 [
STRSIZE
(20)];

368 
	mW_STREET_2
 [
STRSIZE
(20)];

369 
	mW_CITY
 [
STRSIZE
(20)];

370 
	mW_STATE
 [
STRSIZE
(2)];

371 
	mW_ZIP
 [
STRSIZE
(9)];

372 
decimÆ
 
	mW_TAX
;

373 
decimÆ
 
	mW_YTD
;

375 
c_°r
 
tu∂e_to_°r
() {

376 (
c_°r
("WH= %d|%s|%s|%s|%s|%s|%s|%.2f|%.2f",

377 
W_ID
, 
W_NAME
, 
W_STREET_1
, 
W_STREET_2
,

378 
W_CITY
, 
W_STATE
, 
W_ZIP
,

379 
W_TAX
.
to_doubÀ
(), 
W_YTD
.to_double()));

383 
	sçcc_w¨ehou£_tu∂e_key
 {

384 
	mW_ID
;

387 
EXIT_NAMESPACE
(
çcc
);

	@include/workload/tpce/MEESUT.h

32 #i‚de‡
MEE_SUT_H


33 
	#MEE_SUT_H


	)

35 
	~"sm/sh‹e/sh‹e_ív.h
"

36 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

37 
	~"w‹klﬂd/ç˚/egí/MEESUTI¡îÁ˚.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 
ENTER_NAMESPACE
(
ç˚
);

42 c⁄° 
	gmax_buf„r
 = 512000;

44 
	gãm∂©e
 <
ty≥«me
 
	gT
>

45 ˛as†
	cI≈utBuf„r


47 
mcs_lock
 
	ma_lock
;

48 
T
* 
	mbuf„r
[
max_buf„r
];

49 
	msize
, 
	mfú°
, 
	mœ°
;

51 
	mpublic
:

52 
	$I≈utBuf„r
():
	`size
(0), 
	`fú°
(0), 
	$œ°
(0)

54 
boﬁ
 
	$isEm±y
(){

56 
	`CRITICAL_SECTION
(
cs
, 
a_lock
);

58 if(
size
==0Ë 
åue
;

61  
Ál£
;

64 
	}
}

65 
T
* 
	$gë
(){

67 
	`CRITICAL_SECTION
(
cs
, 
a_lock
);

68 i‡(
size
==0Ë 
NULL
;

69 
T
* 
tmp
=
buf„r
[
fú°
];

70 
size
--;

71 
fú°
=(fú°+1)%
max_buf„r
;

73  
tmp
;

75 
	}
}

77 
	$put
(
T
* 
tmp
){

79 
	`CRITICAL_SECTION
(
cs
, 
a_lock
);

81 if(
size
 < 
max_buf„r
) {

82 
buf„r
[
œ°
]=
tmp
;

83 
œ°
=÷a°+1)%
max_buf„r
;

84 
size
++;

87 
	}
}

90 
˛ass
 
	gMFBuf„r
: 
public
 
I≈utBuf„r
<
TM¨këFìdTxnI≈ut
>{

93 
˛ass
 
	gTRBuf„r
: 
public
 
I≈utBuf„r
<
TTødeResu…TxnI≈ut
>{

96 
MFBuf„r
* 
M¨këFìdI≈utBuf„r
;

97 
TRBuf„r
* 
TødeResu…I≈utBuf„r
;

100 ˛as†
	cCMEESUT
: 
public
 
CMEESUTI¡îÁ˚


102 
MFBuf„r
* 
MFQueue
;

103 
TRBuf„r
* 
	mTRQueue
;

105 
	mpublic
:

106 
	$£tMFQueue
(
MFBuf„r
* 
p
){ 
MFQueue
 =Ö;}

107 
	$£tTRQueue
(
TRBuf„r
* 
p
){ 
TRQueue
 =Ö;
	}
}

109 
boﬁ
 
	$TødeResu…
–
PTødeResu…TxnI≈ut
 
pTxnI≈ut
 ) {

110 
PTødeResu…TxnI≈ut
 
åI≈ut

√w
 
	`TTødeResu…TxnI≈ut
();

111 
	`mem˝y
(
åI≈ut
, 
pTxnI≈ut
, (
TTødeResu…TxnI≈ut
));

112 
TRQueue
->
	`put
(
åI≈ut
);

113  
åue
;

114 
	}
}

116 
boﬁ
 
	$M¨këFìd
–
PM¨këFìdTxnI≈ut
 
pTxnI≈ut
 ){

117 
PM¨këFìdTxnI≈ut
 
mfI≈ut

√w
 
	`TM¨këFìdTxnI≈ut
();

118 
	`mem˝y
(
mfI≈ut
, 
pTxnI≈ut
, (
TM¨këFìdTxnI≈ut
));

119 
MFQueue
->
	`put
(
mfI≈ut
);

120  
åue
;

121 
	}
}

125 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/egen/AddressTable.h

41 #i‚de‡
ADDRESS_TABLE_H


42 
	#ADDRESS_TABLE_H


	)

44 
	~"EGíTabÀs_comm⁄.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCAddªssTabÀ
 : 
public
 
TabÀTem∂©e
<
ADDRESS_ROW
>

51 
¥iv©e
:

52 
CD©eTime
 
m_d©e_time
;

53 
CCom∑nyFûe
* 
	gm_com∑nõs
;

54 
TSåìtNamesFûe
* 
	gm_Såìt
;

55 
TSåìtSuffixFûe
* 
	gm_SåìtSuffix
;

56 
TZùCodeFûe
* 
	gm_ZùCode
;

57 
TIdít
 
	gm_iSèπFromCu°omî
;

58 
TIdít
 
	gm_iCu°omîCou¡
;

59 
boﬁ
 
	gm_bCu°omîAddªs£sO∆y
;

60 
boﬁ
 
	gm_bCu°omîAddªss
;

61 
TIdít
 
	gm_iCom∑nyCou¡
;

62 
UINT
 
	gm_iExch™geCou¡
;

63 
TIdít
 
	gm_iTŸÆAddªssCou¡
;

64 
boﬁ
 
	gm_bCacheE«bÀd
;

65 
	gm_iCacheSize
;

66 
TIdít
 
	gm_iCacheOff£t
;

67 c⁄° 
TZùCodeI≈utRow
** 
	gm_CacheZùCode
;

79 
Gíî©eAD_LINE_1
();

90 
Gíî©eAD_LINE_2
();

102 
GëTownDivisi⁄ZùCodeThªshﬁd
(
TIdít
 
ADID
);

112 
UINT
 
GëCou¡ryCode
–c⁄° *
pZùCode
 );

124 
Gíî©eAD_ZC_CODE_CTRY
();

126 
	gpublic
:

142 
CAddªssTabÀ
(
CI≈utFûes
 
öputFûes
,

143 
TIdít
 
iCu°omîCou¡
,

144 
TIdít
 
iSèπFromCu°omî
,

145 
boﬁ
 
bCu°omîAddªs£sO∆y
 = 
Ál£
,

146 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


158 ~
CAddªssTabÀ
();

169 
InôNextLﬂdUnô
();

183 
TIdít
 
Gíî©eNextAD_ID
();

194 
TIdít
 
GëAD_IDF‹Cu°omî
(TIdíà
C_ID
);

208 
GëDivisi⁄AndCou¡ryCodesF‹Addªss
(
TIdít
 
AD_ID
, 
UINT
 &
iDivCode
, UINT &
iCåyCode
);

221 
GëDivisi⁄AndCou¡ryCodes
(
UINT
 &
iDivCode
, UINT &
iCåyCode
)

223 
GëDivisi⁄AndCou¡ryCodesF‹Addªss
(
m_row
.
AD_ID
, 
iDivCode
, 
iCåyCode
);

237 
boﬁ
 
Gíî©eNextRec‹d
();

	@include/workload/tpce/egen/BaseLoader.h

41 #i‚de‡
BASE_LOADER_H


42 
	#BASE_LOADER_H


	)

44 
«me•a˚
 
	gTPCE


47 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cCBa£Lﬂdî


50 
	gpublic
:

51 c⁄° 
	tT
* 
	tPT
;

63 
	gvútuÆ
 ~
CBa£Lﬂdî
() {};

77 
vútuÆ
 
Inô
() {};

94 
vútuÆ
 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
) = 0;

107 
vútuÆ
 
Commô
() {};

121 
vútuÆ
 
FöishLﬂd
() = 0;

	@include/workload/tpce/egen/BaseLoaderFactory.h

42 #i‚de‡
BASE_LOADER_FACTORY_H


43 
	#BASE_LOADER_FACTORY_H


	)

45 
	~"Ba£Lﬂdî.h
"

46 
	~"TabÀ_Defs.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCBa£LﬂdîFa˘‹y


54 
	gpublic
:

66 
vútuÆ
 ~
CBa£LﬂdîFa˘‹y
() {};

78 
vútuÆ
 
	gCBa£Lﬂdî
<
	gACCOUNT_PERMISSION_ROW
>* 
Cª©eAccou¡Pîmissi⁄Lﬂdî
() = 0;

90 
vútuÆ
 
	gCBa£Lﬂdî
<
	gADDRESS_ROW
>* 
Cª©eAddªssLﬂdî
() = 0;

102 
vútuÆ
 
	gCBa£Lﬂdî
<
	gBROKER_ROW
>* 
Cª©eBrokîLﬂdî
() = 0;

114 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCASH_TRANSACTION_ROW
>* 
Cª©eCashTønß˘i⁄Lﬂdî
() = 0;

126 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCHARGE_ROW
>* 
Cª©eCh¨geLﬂdî
() = 0;

138 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMMISSION_RATE_ROW
>* 
Cª©eCommissi⁄R©eLﬂdî
() = 0;

150 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_COMPETITOR_ROW
>* 
Cª©eCom∑nyCom≥tô‹Lﬂdî
() = 0;

162 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_ROW
>* 
Cª©eCom∑nyLﬂdî
() = 0;

174 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ACCOUNT_ROW
>* 
Cª©eCu°omîAccou¡Lﬂdî
() = 0;

186 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ROW
>* 
Cª©eCu°omîLﬂdî
() = 0;

198 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_TAXRATE_ROW
>* 
Cª©eCu°omîTaxøãLﬂdî
() = 0;

210 
vútuÆ
 
	gCBa£Lﬂdî
<
	gDAILY_MARKET_ROW
>* 
Cª©eDaûyM¨këLﬂdî
() = 0;

222 
vútuÆ
 
	gCBa£Lﬂdî
<
	gEXCHANGE_ROW
>* 
Cª©eExch™geLﬂdî
() = 0;

234 
vútuÆ
 
	gCBa£Lﬂdî
<
	gFINANCIAL_ROW
>* 
Cª©eFö™cülLﬂdî
() = 0;

246 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_ROW
>* 
Cª©eHﬁdögLﬂdî
() = 0;

258 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_HISTORY_ROW
>* 
Cª©eHﬁdögHi°‹yLﬂdî
() = 0;

270 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_SUMMARY_ROW
>* 
Cª©eHﬁdögSumm¨yLﬂdî
() = 0;

282 
vútuÆ
 
	gCBa£Lﬂdî
<
	gINDUSTRY_ROW
>* 
Cª©eIndu°ryLﬂdî
() = 0;

294 
vútuÆ
 
	gCBa£Lﬂdî
<
	gLAST_TRADE_ROW
>* 
Cª©eLa°TødeLﬂdî
() = 0;

306 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_ITEM_ROW
>* 
Cª©eNewsIãmLﬂdî
() = 0;

318 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_XREF_ROW
>* 
Cª©eNewsXRefLﬂdî
() = 0;

330 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECTOR_ROW
>* 
Cª©eSe˘‹Lﬂdî
() = 0;

342 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECURITY_ROW
>* 
Cª©eSecurôyLﬂdî
() = 0;

354 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSETTLEMENT_ROW
>* 
Cª©eSëéemítLﬂdî
() = 0;

366 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSTATUS_TYPE_ROW
>* 
Cª©eSètusTy≥Lﬂdî
() = 0;

378 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTAXRATE_ROW
>* 
Cª©eTaxøãLﬂdî
() = 0;

390 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_HISTORY_ROW
>* 
Cª©eTødeHi°‹yLﬂdî
() = 0;

402 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_ROW
>* 
Cª©eTødeLﬂdî
() = 0;

414 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_REQUEST_ROW
>* 
Cª©eTødeReque°Lﬂdî
() = 0;

426 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_TYPE_ROW
>* 
Cª©eTødeTy≥Lﬂdî
() = 0;

438 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_ITEM_ROW
>* 
Cª©eW©chIãmLﬂdî
() = 0;

450 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_LIST_ROW
>* 
Cª©eW©chLi°Lﬂdî
() = 0;

462 
vútuÆ
 
	gCBa£Lﬂdî
<
	gZIP_CODE_ROW
>* 
Cª©eZùCodeLﬂdî
() = 0;

	@include/workload/tpce/egen/BaseLogFormatter.h

42 #i‚de‡
BASE_LOG_FORMATTER_H


43 
	#BASE_LOG_FORMATTER_H


	)

45 
	~<°rög
>

46 
	~"DrivîP¨amSëtögs.h
"

48 
«me•a˚
 
	gTPCE


51 
	eeLogF‹m©


53 
	geLogTab
,

54 
	geLogCu°om


57 ˛as†
	cCBa£LogF‹m©ãr


59 
	gpublic
:

70 
vútuÆ
 ~
CBa£LogF‹m©ãr
() {};

72 
vútuÆ
 
°rög
 
GëLogOuçut
(
CBrokîVﬁumeSëtögs
& 
∑rms
) = 0;

73 
vútuÆ
 
°rög
 
GëLogOuçut
(
CCu°omîPosôi⁄Sëtögs
& 
∑rms
) = 0;

74 
vútuÆ
 
°rög
 
GëLogOuçut
(
CM¨këW©chSëtögs
& 
∑rms
) = 0;

75 
vútuÆ
 
°rög
 
GëLogOuçut
(
CSecurôyDëaûSëtögs
& 
∑rms
) = 0;

76 
vútuÆ
 
°rög
 
GëLogOuçut
(
CTødeLookupSëtögs
& 
∑rms
) = 0;

77 
vútuÆ
 
°rög
 
GëLogOuçut
(
CTødeOrdîSëtögs
& 
∑rms
) = 0;

78 
vútuÆ
 
°rög
 
GëLogOuçut
(
CTødeUpd©eSëtögs
& 
∑rms
) = 0;

79 
vútuÆ
 
°rög
 
GëLogOuçut
(
CTxnMixGíî©‹Sëtögs
& 
∑rms
) = 0;

80 
vútuÆ
 
°rög
 
GëLogOuçut
(
CLﬂdîSëtögs
& 
∑rms
) = 0;

81 
vútuÆ
 
°rög
 
GëLogOuçut
(
CDrivîGlobÆSëtögs
& 
∑rms
) = 0;

82 
vútuÆ
 
°rög
 
GëLogOuçut
(
CDrivîCESëtögs
& 
∑rms
) = 0;

83 
vútuÆ
 
°rög
 
GëLogOuçut
(
CDrivîCEP¨tôi⁄Sëtögs
& 
∑rms
) = 0;

84 
vútuÆ
 
°rög
 
GëLogOuçut
(
CDrivîMEESëtögs
& 
∑rms
) = 0;

85 
vútuÆ
 
°rög
 
GëLogOuçut
(
CDrivîDMSëtögs
& 
∑rms
) = 0;

	@include/workload/tpce/egen/BaseLogger.h

41 #i‚de‡
BASE_LOGGER_H


42 
	#BASE_LOGGER_H


	)

44 
	~"EGíSènd¨dTy≥s.h
"

45 
	~"DrivîTy≥s.h
"

46 
	~"DrivîP¨amSëtögs.h
"

47 
	~"Ba£LogF‹m©ãr.h
"

49 
«me•a˚
 
	gTPCE


54 ˛as†
	cCBa£Loggî


56 
	g¥iv©e
:

57 
m_Pªfix
[64];

58 
CBa£LogF‹m©ãr
* 
	gm_pLogF‹m©ãr
;

60 
boﬁ
 
SídToLoggî
(c⁄° *
szPªfix
, c⁄° *
szMsg
);

62 
	g¥Ÿe˘ed
:

63 
CBa£Loggî
(
eDrivîTy≥
 
drvTy≥
, 
INT32
 
UniqueId
, 
CBa£LogF‹m©ãr
* 
pF‹m©ãr
);

64 
vútuÆ
 
boﬁ
 
SídToLoggîIm∂
(c⁄° *
szPªfix
, c⁄° *
szTime°amp
, c⁄° *
szMsg
) = 0;

66 
	gpublic
:

68 
vútuÆ
 ~
CBa£Loggî
() {}

71 
boﬁ
 
SídToLoggî
(c⁄° *
°r
);

72 
boﬁ
 
SídToLoggî
(
°rög
 
°r
);

75 
boﬁ
 
SídToLoggî
(
CLﬂdîSëtögs
& 
∑rms
);

76 
boﬁ
 
SídToLoggî
(
CDrivîGlobÆSëtögs
& 
∑rms
);

77 
boﬁ
 
SídToLoggî
(
CDrivîCESëtögs
& 
∑rms
);

78 
boﬁ
 
SídToLoggî
(
CDrivîCEP¨tôi⁄Sëtögs
& 
∑rms
);

79 
boﬁ
 
SídToLoggî
(
CDrivîMEESëtögs
& 
∑rms
);

80 
boﬁ
 
SídToLoggî
(
CDrivîDMSëtögs
& 
∑rms
);

81 
boﬁ
 
SídToLoggî
(
CBrokîVﬁumeSëtögs
& 
∑rms
);

82 
boﬁ
 
SídToLoggî
(
CCu°omîPosôi⁄Sëtögs
& 
∑rms
);

83 
boﬁ
 
SídToLoggî
(
CM¨këW©chSëtögs
& 
∑rms
);

84 
boﬁ
 
SídToLoggî
(
CSecurôyDëaûSëtögs
& 
∑rms
);

85 
boﬁ
 
SídToLoggî
(
CTødeLookupSëtögs
& 
∑rms
);

86 
boﬁ
 
SídToLoggî
(
CTødeOrdîSëtögs
& 
∑rms
);

87 
boﬁ
 
SídToLoggî
(
CTødeUpd©eSëtögs
& 
∑rms
);

88 
boﬁ
 
SídToLoggî
(
CTxnMixGíî©‹Sëtögs
& 
∑rms
);

89 
boﬁ
 
SídToLoggî
(
TDrivîCETxnSëtögs
& 
∑rms
);

	@include/workload/tpce/egen/BigMath.h

37 #i‚de‡
BIGMATH_H


38 
	#BIGMATH_H


	)

40 
	~"EGíSènd¨dTy≥s.h
"

42 
«me•a˚
 
	gTPCE


46 
	#BIT63
 
	`UINT64_CONST
(0x8000000000000000)

	)

47 
	#CARRY32
 
	`UINT64_CONST
(0x100000000)

	)

48 
	#MASK32
 
	`UINT64_CONST
(0xFFFFFFFF)

	)

49 
	#UPPER32
 32

	)

53 
ölöe
 
UINT
 
Mul6432WôhShi·Right64
(
UINT64
 
£ed
, UINT 
ønge
)

55 
UINT64
 
	gSL
 = (
£ed
 & 
MASK32
),

56 
	gSU
 = (
£ed
 >> 
UPPER32
),

57 
	gRL
 = 
ønge
;

59 
UINT64
 
	gp0
 = (
SL
 * 
RL
),

60 
	gp1
 = (
SU
 * 
RL
),

61 
	gs
;

63 
	gs
 = 
p0
;

64 
	gs
 >>
UPPER32
;

65 
	gs
 +
p1
;

66 
	gs
 >>
UPPER32
;

68  (
	gUINT
)
	gs
;

73 
ölöe
 
UINT64
 
Mul6464WôhShi·Right64
(UINT64 
£ed
, UINT64 
ønge
)

75 
UINT64
 
	gSL
 = (
£ed
 & 
MASK32
),

76 
	gSU
 = (
£ed
 >> 
UPPER32
),

77 
	gRL
 = (
ønge
 & 
MASK32
),

78 
	gRU
 = (
ønge
 >> 
UPPER32
);

80 
UINT64
 
	gp0
 = (
SL
 * 
RL
),

81 
	gp1
 = (
SU
 * 
RL
),

82 
	gp2
 = (
SL
 * 
RU
),

83 
	gp3
 = (
SU
 * 
RU
),

84 
	gp12_ˇºy
 = 0,

85 
	gs
;

87 
	gs
 = 
p0
;

88 
	gs
 >>
UPPER32
;

89 
	gs
 +
p1
;

90 
	gp12_ˇºy
 = ( ( ( (
p1
 & 
BIT63
Ë|| (
s
 & BIT63ËË&& (
p2
 & BIT63ËË? 
CARRY32
 : 0 );

91 
	gs
 +
p2
;

92 
	gs
 >>
UPPER32
;

93 
	gs
 +
p12_ˇºy
;

94 
	gs
 +
p3
;

96  
	gs
;

	@include/workload/tpce/egen/Brokers.h

40 #i‚de‡
BROKERS_H


41 
	#BROKERS_H


	)

43 
	~<°dio.h
>

44 
	~"EGíTabÀs_comm⁄.h
"

45 
	~"Cu°omîAccou¡sAndPîmissi⁄sTabÀ.h
"

47 
«me•a˚
 
	gTPCE


50 c⁄° 
TIdít
 
	giBrokîNameIDShi·
 = 1000*1000;

52 c⁄° 
	giBrokîInôülTødesYTDMö
 = 10000;

53 c⁄° 
	giBrokîInôülTødesYTDMax
 = 100000;

55 c⁄° 
	gfBrokîInôülCommissi⁄YTDMö
 = 10000.0;

56 c⁄° 
	gfBrokîInôülCommissi⁄YTDMax
 = 100000.0;

58 
˛ass
 
	gCBrokîsTabÀ
 : 
public
 
TabÀTem∂©e
<
BROKER_ROW
>

60 
TIdít
 
m_iTŸÆBrokîs
;

61 
TIdít
 
	gm_iSèπFromBrokî
;

62 
TIdít
 
	gm_iSèπFromCu°omî
;

63 
CPîs⁄
 
	gm_≥rs⁄
;

64 
TSètusTy≥Fûe
* 
	gm_SètusTy≥Fûe
;

65 * 
	gm_pNumTødes
;

66 * 
	gm_pCommTŸÆ
;

69 
	gpublic
:

81 
CBrokîsTabÀ
(
CI≈utFûes
 
öputFûes
, 
TIdít
 
iCu°omîCou¡
, TIdíà
iSèπFromCu°omî
)

82 : 
TabÀTem∂©e
<
BROKER_ROW
>()

83 , 
m_iTŸÆBrokîs
(
iCu°omîCou¡
 / 
iBrokîsDiv
)

84 , 
m_iSèπFromBrokî
((
iSèπFromCu°omî
 / 
iBrokîsDiv
Ë+ 
iSèπögBrokîID
 + 
iTIdítShi·
)

85 , 
m_iSèπFromCu°omî
(
iSèπFromCu°omî
)

86 , 
m_≥rs⁄
(
öputFûes
, 
iBrokîNameIDShi·
, 
åue
)

87 , 
m_SètusTy≥Fûe
(
öputFûes
.
SètusTy≥
)

88 , 
m_pNumTødes
(
NULL
)

89 , 
m_pCommTŸÆ
(
NULL
)

102 ~
CBrokîsTabÀ
()

104 i‡(
	gm_pNumTødes
 !
NULL
)

106 
dñëe
[] 
m_pNumTødes
;

109 i‡(
	gm_pCommTŸÆ
 !
NULL
)

111 
dñëe
[] 
m_pCommTŸÆ
;

127 
InôF‹Gí
(
TIdít
 
iCu°omîCou¡
, TIdíà
iSèπFromCu°omî
)

129 
TIdít
 
	gi
;

131 i‡(
	gm_iTŸÆBrokîs
 !
iCu°omîCou¡
 / 
iBrokîsDiv
 ||

132 
m_pNumTødes
 =
NULL
 ||

133 
m_pCommTŸÆ
 =
NULL


140 
m_iTŸÆBrokîs
 = 
iCu°omîCou¡
 / 
iBrokîsDiv
;

142 i‡(
	gm_pNumTødes
 !
NULL
)

144 
dñëe
[] 
m_pNumTødes
;

147 
	gm_pNumTødes
 = 
√w
 [(
size_t
)
m_iTŸÆBrokîs
];

149 i‡(
	gm_pCommTŸÆ
 !
NULL
)

151 
dñëe
[] 
m_pCommTŸÆ
;

154 
	gm_pCommTŸÆ
 = 
√w
 [(
size_t
)
m_iTŸÆBrokîs
];

159 i‡(
	gm_pNumTødes
 !
NULL
)

161 
i
 = 0; 
	gi
 < 
	gm_iTŸÆBrokîs
; ++i)

163 
	gm_pNumTødes
[
i
] = 0;

169 i‡(
	gm_pCommTŸÆ
 !
NULL
)

171 
i
 = 0; 
	gi
 < 
	gm_iTŸÆBrokîs
; ++i)

173 
	gm_pCommTŸÆ
[
i
] = 0.0;

177 i‡(
	gm_iSèπFromBrokî
 !((
iSèπFromCu°omî
 / 
iBrokîsDiv
Ë+ 
iSèπögBrokîID
 + 
iTIdítShi·
))

185 
m_iSèπFromBrokî
 = (
iSèπFromCu°omî
 / 
iBrokîsDiv
Ë+ 
iSèπögBrokîID
 + 
iTIdítShi·
;

188 
	gm_iLa°RowNumbî
 = 0;

190 
CÀ¨Rec‹d
();

193 i‡(
	gm_iSèπFromCu°omî
 !
iSèπFromCu°omî
)

195 
m_≥rs⁄
.
InôNextLﬂdUnô
(
iDeÁu…LﬂdUnôSize
/
iBrokîsDiv
);

211 
Upd©eTødeAndCommissi⁄YTD
(
TIdít
 
B_ID
, 
iTødeIn¸emít
, 
fCommissi⁄In¸emít
)

213 i‡–(
	gB_ID
 >
m_iSèπFromBrokî
)

214 && (
B_ID
 < (
m_iSèπFromBrokî
 + 
m_iTŸÆBrokîs
)))

216 
m_pNumTødes
[
B_ID
 - 
m_iSèπFromBrokî
] +
iTødeIn¸emít
;

217 
	gm_pCommTŸÆ
[
B_ID
 - 
m_iSèπFromBrokî
] +
fCommissi⁄In¸emít
;

233 
TIdít
 
Gíî©eR™domBrokîId
(
CR™dom
* 
pRnd
)

235  
	gpRnd
->
RndI¡64R™ge
(
m_iSèπFromBrokî
, m_iSèπFromBrokî + 
m_iTŸÆBrokîs
 - 1);

250 
Gíî©eBrokîName
(
TIdít
 
B_ID
, *
B_NAME
, 
size_t
 
B_NAME_Àn
)

252 
¢¥ötf
(
B_NAME
, 
B_NAME_Àn
, "%s %c. %s",

253 
m_≥rs⁄
.
GëFú°Name
(
B_ID
 + 
iBrokîNameIDShi·
),

254 
m_≥rs⁄
.
GëMiddÀName
(
B_ID
 + 
iBrokîNameIDShi·
),

255 
m_≥rs⁄
.
GëLa°Name
(
B_ID
 + 
iBrokîNameIDShi·
));

268 
TIdít
 
GëBrokîCou¡
()

270  
	gm_iTŸÆBrokîs
;

284 
boﬁ
 
Gíî©eNextRec‹d
()

286 
	gm_row
.
	gB_ID
 = 
m_iSèπFromBrokî
 + 
m_iLa°RowNumbî
;

287 
°∫˝y
(
m_row
.
B_ST_ID
, 
m_SètusTy≥Fûe
->
GëRec‹d
(
eA˘ive
)->
ST_ID
, (m_row.B_ST_ID));

289 
Gíî©eBrokîName
(
m_row
.
B_ID
, m_row.
B_NAME
, 
°©ic_ˇ°
<>((m_row.B_NAME)));

291 
	gm_row
.
	gB_NUM_TRADES
 = 
m_pNumTødes
[
m_row
.
B_ID
 - 
m_iSèπFromBrokî
];

292 
	gm_row
.
	gB_COMM_TOTAL
 = 
m_pCommTŸÆ
[
m_row
.
B_ID
 - 
m_iSèπFromBrokî
];

296 ++
	gm_iLa°RowNumbî
;

297 
	gm_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < 
m_iTŸÆBrokîs
;

300  (
M‹eRec‹ds
());

	@include/workload/tpce/egen/CE.h

106 #i‚de‡
CE_H


107 
	#CE_H


	)

109 
	~"EGíUtûôõs_°dafx.h
"

110 
	~"CETxnI≈utGíî©‹.h
"

111 
	~"CETxnMixGíî©‹.h
"

112 
	~"CESUTI¡îÁ˚.h
"

113 
	~"Ba£Loggî.h
"

114 
	~"DrivîP¨amSëtögs.h
"

116 
«me•a˚
 
	gTPCE


119 ˛as†
	cCCE


121 
	g¥iv©e
:

123 
CDrivîGlobÆSëtögs
 
m_DrivîGlobÆSëtögs
;

124 
CDrivîCESëtögs
 
	gm_DrivîCESëtögs
;

125 
CDrivîCEP¨tôi⁄Sëtögs
 
	gm_DrivîCEP¨tôi⁄Sëtögs
;

126 
TDrivîCETxnSëtögs
 
	gm_DrivîCETxnSëtögs
;

128 
CCESUTI¡îÁ˚
* 
	gm_pSUT
;

129 
CBa£Loggî
* 
	gm_pLoggî
;

130 
CCETxnMixGíî©‹
 
	gm_TxnMixGíî©‹
;

131 
CCETxnI≈utGíî©‹
 
	gm_TxnI≈utGíî©‹
;

133 
TBrokîVﬁumeTxnI≈ut
 
	gm_BrokîVﬁumeTxnI≈ut
;

134 
TCu°omîPosôi⁄TxnI≈ut
 
	gm_Cu°omîPosôi⁄TxnI≈ut
;

135 
TM¨këW©chTxnI≈ut
 
	gm_M¨këW©chTxnI≈ut
;

136 
TSecurôyDëaûTxnI≈ut
 
	gm_SecurôyDëaûTxnI≈ut
;

137 
TTødeLookupTxnI≈ut
 
	gm_TødeLookupTxnI≈ut
;

138 
TTødeOrdîTxnI≈ut
 
	gm_TødeOrdîTxnI≈ut
;

139 
TTødeSètusTxnI≈ut
 
	gm_TødeSètusTxnI≈ut
;

140 
TTødeUpd©eTxnI≈ut
 
	gm_TødeUpd©eTxnI≈ut
;

143 
boﬁ
 
	gm_bCÀ¨Buf„rBef‹eGíî©i⁄
;

146 
Inôülize
–
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
 );

149 
AutoSëRNGSìds
–
UINT32
 
UniqueId
 );

160 
ZîoI≈utBuf„r
(
iTxnTy≥
);

162 
	gpublic
:

163 c⁄° 
INT32
 
INVALID_TRANSACTION_TYPE
 = 
CCETxnMixGíî©‹
::INVALID_TRANSACTION_TYPE;

164 c⁄° 
INT32
 
	gSECURITY_DETAIL
 = 
CCETxnMixGíî©‹
::
SECURITY_DETAIL
;

165 c⁄° 
INT32
 
	gBROKER_VOLUME
 = 
CCETxnMixGíî©‹
::
BROKER_VOLUME
;

166 c⁄° 
INT32
 
	gCUSTOMER_POSITION
 = 
CCETxnMixGíî©‹
::
CUSTOMER_POSITION
;

167 c⁄° 
INT32
 
	gMARKET_WATCH
 = 
CCETxnMixGíî©‹
::
MARKET_WATCH
;

168 c⁄° 
INT32
 
	gTRADE_STATUS
 = 
CCETxnMixGíî©‹
::
TRADE_STATUS
;

169 c⁄° 
INT32
 
	gTRADE_LOOKUP
 = 
CCETxnMixGíî©‹
::
TRADE_LOOKUP
;

170 c⁄° 
INT32
 
	gTRADE_ORDER
 = 
CCETxnMixGíî©‹
::
TRADE_ORDER
;

171 c⁄° 
INT32
 
	gTRADE_UPDATE
 = 
CCETxnMixGíî©‹
::
TRADE_UPDATE
;

173 c⁄° 
INT32
 
	gMARKET_FEED
 = 
CCETxnMixGíî©‹
::
MARKET_FEED
;

174 c⁄° 
INT32
 
	gTRADE_RESULT
 = 
CCETxnMixGíî©‹
::
TRADE_RESULT
;

177 
CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

178 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

179 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

180 
UINT32
 
UniqueId
,

181 c⁄° 
PDrivîCETxnSëtögs
 
pP¨amëîSëtögs
 = 
NULL
 );

184 
CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

185 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

186 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

187 
UINT32
 
UniqueId
,

188 
RNGSEED
 
TxnMixRNGSìd
,

189 
RNGSEED
 
TxnI≈utRNGSìd
,

190 c⁄° 
PDrivîCETxnSëtögs
 
pP¨amëîSëtögs
 = 
NULL
 );

193 
CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

194 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

195 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

196 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

197 
UINT32
 
UniqueId
,

198 c⁄° 
PDrivîCETxnSëtögs
 
pP¨amëîSëtögs
 = 
NULL
 );

201 
CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

202 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

203 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

204 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

205 
UINT32
 
UniqueId
,

206 
RNGSEED
 
TxnMixRNGSìd
,

207 
RNGSEED
 
TxnI≈utRNGSìd
,

208 c⁄° 
PDrivîCETxnSëtögs
 
pP¨amëîSëtögs
 = 
NULL
 );

210 ~
CCE
( );

212 
RNGSEED
 
GëTxnI≈utGíî©‹RNGSìd
( );

213 
RNGSEED
 
GëTxnMixGíî©‹RNGSìd
( );

214 
boﬁ
 
SëTxnTu«bÀs
–c⁄° 
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
 );

216 
DoTxn
( );

230 
SëCÀ¨Buf„rO±i⁄
(
boﬁ
 
bCÀ¨Buf„rBef‹eGíî©i⁄
);

	@include/workload/tpce/egen/CESUTInterface.h

43 #i‚de‡
CE_SUT_INTERFACE_H


44 
	#CE_SUT_INTERFACE_H


	)

46 
	~"TxnH¨√ssSåu˘s.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCCESUTI¡îÁ˚


53 
	gpublic
:

64 
vútuÆ
 ~
CCESUTI¡îÁ˚
() {};

66 
vútuÆ
 
boﬁ
 
BrokîVﬁume
–
PBrokîVﬁumeTxnI≈ut
 
pTxnI≈ut
 ) = 0;

67 
vútuÆ
 
boﬁ
 
Cu°omîPosôi⁄
–
PCu°omîPosôi⁄TxnI≈ut
 
pTxnI≈ut
 ) = 0;

68 
vútuÆ
 
boﬁ
 
M¨këW©ch
–
PM¨këW©chTxnI≈ut
 
pTxnI≈ut
 ) = 0;

69 
vútuÆ
 
boﬁ
 
SecurôyDëaû
–
PSecurôyDëaûTxnI≈ut
 
pTxnI≈ut
 ) = 0;

70 
vútuÆ
 
boﬁ
 
TødeLookup
–
PTødeLookupTxnI≈ut
 
pTxnI≈ut
 ) = 0;

71 
vútuÆ
 
boﬁ
 
TødeOrdî
–
PTødeOrdîTxnI≈ut
 
pTxnI≈ut
, 
INT32
 
iTødeTy≥
, boﬁ 
bExecut‹IsAccou¡Ow√r
 ) = 0;

72 
vútuÆ
 
boﬁ
 
TødeSètus
–
PTødeSètusTxnI≈ut
 
pTxnI≈ut
 ) = 0;

73 
vútuÆ
 
boﬁ
 
TødeUpd©e
–
PTødeUpd©eTxnI≈ut
 
pTxnI≈ut
 ) = 0;

	@include/workload/tpce/egen/CETxnInputGenerator.h

41 #i‚de‡
CE_TXN_INPUT_GENERATOR_H


42 
	#CE_TXN_INPUT_GENERATOR_H


	)

44 
	~"EGíLﬂdî_°dafx.h
"

45 
	~"EGíUtûôõs_°dafx.h
"

46 
	~"TxnH¨√ssSåu˘s.h
"

47 
	~"DrivîP¨amSëtögs.h
"

48 
	~"EGíLoggî.h
"

50 
«me•a˚
 
	gTPCE


53 ˛as†
	cCCETxnI≈utGíî©‹


55 
CR™dom
 
	gm_∫d
;

56 
CPîs⁄
 
	gm_Pîs⁄
;

57 
CCu°omîSñe˘i⁄
 
	gm_Cu°omîSñe˘i⁄
;

58 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
 
	gm_AccsAndPîms
;

59 
CHﬁdögsAndTødesTabÀ
 
	gm_Hﬁdögs
;

60 
CBrokîsTabÀ
 
	gm_Brokîs
;

61 
CCom∑nyFûe
* 
	gm_pCom∑nõs
;

62 
CSecurôyFûe
* 
	gm_pSecurôõs
;

63 
TIndu°ryFûe
* 
	gm_pIndu°rõs
;

64 
TSe˘‹Fûe
* 
	gm_pSe˘‹s
;

65 
TSètusTy≥Fûe
* 
	gm_pSètusTy≥
;

66 
TTødeTy≥Fûe
* 
	gm_pTødeTy≥
;

67 
PDrivîCETxnSëtögs
 
	gm_pDrivîCETxnSëtögs
;

68 
CBa£Loggî
* 
	gm_pLoggî
;

70 
TIdít
 
	gm_iC⁄figuªdCu°omîCou¡
;

71 
TIdít
 
	gm_iA˘iveCu°omîCou¡
;

73 
TIdít
 
	gm_iMySèπögCu°omîId
;

74 
TIdít
 
	gm_iMyCu°omîCou¡
;

75 
INT32
 
	gm_iP¨tôi⁄Pî˚¡
;

77 
INT32
 
	gm_iSˇÀFa˘‹
;

78 
INT32
 
	gm_iHoursOfInôülTødes
;

79 
INT64
 
	gm_iMaxA˘ivePªP›uœãdTødeID
;

81 
INT64
 
	gm_iTødeLookupFøme2MaxTimeInMûliSec⁄ds
;

82 
INT64
 
	gm_iTødeLookupFøme3MaxTimeInMûliSec⁄ds
;

83 
INT64
 
	gm_iTødeLookupFøme4MaxTimeInMûliSec⁄ds
;

85 
INT64
 
	gm_iTødeUpd©eFøme2MaxTimeInMûliSec⁄ds
;

86 
INT64
 
	gm_iTødeUpd©eFøme3MaxTimeInMûliSec⁄ds
;

89 
TIdít
 
	gm_iA˘iveSecurôyCou¡
;

90 
TIdít
 
	gm_iA˘iveCom∑nyCou¡
;

92 
INT32
 
	gm_iIndu°ryCou¡
;

94 
INT32
 
	gm_iSe˘‹Cou¡
;

96 
TIdít
 
	gm_iSèπFromCom∑ny
;

97 
CD©eTime
 
	gm_SèπTime
;

98 
CD©eTime
 
	gm_EndTime
;

101 
INT32
 
	gm_iTødeOrdîRﬁlbackLimô
;

102 
INT32
 
	gm_iTødeOrdîRﬁlbackLevñ
;

113 
Inôülize
();

125 
Gíî©eN⁄Unif‹mR™domCu°omîId
(
TIdít
 &
iCu°omîId
, 
eCu°omîTõr
 &
iCu°omîTõr
);

136 
TIdít
 
Gíî©eR™domCu°omîAccou¡Id
();

148 
TTøde
 
Gíî©eN⁄Unif‹mTødeID
(
INT32
 
AVÆue
, INT32 
SVÆue
);

162 
Gíî©eN⁄Unif‹mTødeDTS
(
TIMESTAMP_STRUCT
 &
dts
, 
INT64
 
MaxTimeInMûliSec⁄ds
, 
INT32
 
AVÆue
, INT32 
SVÆue
);

164 
	gpublic
:

180 
CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

181 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

182 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

183 
CBa£Loggî
 *
pLoggî
,

184 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnTu«bÀs
 );

205 
CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

206 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

207 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

208 
RNGSEED
 
RNGSìd
,

209 
CBa£Loggî
 *
pLoggî
,

210 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnTu«bÀs
 );

230 
CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

231 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

232 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

233 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

234 
CBa£Loggî
 *
pLoggî
,

235 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnTu«bÀs
 );

258 
CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

259 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

260 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

261 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

262 
RNGSEED
 
RNGSìd
,

263 
CBa£Loggî
 *
pLoggî
,

264 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnTu«bÀs
 );

275 
RNGSEED
 
GëRNGSìd
( );

286 
SëRNGSìd
–
RNGSEED
 
RNGSìd
 );

299 
Upd©eTu«bÀs
();

310 
Gíî©eBrokîVﬁumeI≈ut
(
TBrokîVﬁumeTxnI≈ut
 &
TxnReq
);

321 
Gíî©eCu°omîPosôi⁄I≈ut
(
TCu°omîPosôi⁄TxnI≈ut
 &
TxnReq
);

332 
Gíî©eM¨këW©chI≈ut
(
TM¨këW©chTxnI≈ut
 &
TxnReq
);

343 
Gíî©eSecurôyDëaûI≈ut
(
TSecurôyDëaûTxnI≈ut
 &
TxnReq
);

354 
Gíî©eTødeLookupI≈ut
(
TTødeLookupTxnI≈ut
 &
TxnReq
);

367 
Gíî©eTødeOrdîI≈ut
(
TTødeOrdîTxnI≈ut
 &
TxnReq
, 
INT32
 &
iTødeTy≥
, 
boﬁ
 &
bExecut‹IsAccou¡Ow√r
);

378 
Gíî©eTødeSètusI≈ut
(
TTødeSètusTxnI≈ut
 &
TxnReq
);

389 
Gíî©eTødeUpd©eI≈ut
(
TTødeUpd©eTxnI≈ut
 &
TxnReq
);

	@include/workload/tpce/egen/CETxnMixGenerator.h

42 #i‚de‡
CE_TXN_MIX_GENERATOR_H


43 
	#CE_TXN_MIX_GENERATOR_H


	)

45 
	~"EGíUtûôõs_°dafx.h
"

46 
	~"DrivîP¨amSëtögs.h
"

47 
	~"EGíLoggî.h
"

49 
«me•a˚
 
	gTPCE


52 ˛as†
	cCCETxnMixGíî©‹


54 
	g¥iv©e
:

55 c⁄° 
PDrivîCETxnSëtögs
 
m_pDrivîCETxnSëtögs
;

56 
CR™dom
 
	gm_∫d
;

57 
CBa£Loggî
* 
	gm_pLoggî
;

65 
INT32
 
	gm_CETønß˘i⁄MixTŸÆ
;

79 
INT32
 
	gm_iTxnAºayCuºítIndex
;

80 * 
	gm_pTxnAºay
;

82 
	gpublic
:

83 c⁄° 
INT32
 
INVALID_TRANSACTION_TYPE
 = -1;

84 c⁄° 
INT32
 
	gSECURITY_DETAIL
 = 0;

85 c⁄° 
INT32
 
	gBROKER_VOLUME
 = 1;

86 c⁄° 
INT32
 
	gCUSTOMER_POSITION
 = 2;

87 c⁄° 
INT32
 
	gMARKET_WATCH
 = 3;

88 c⁄° 
INT32
 
	gTRADE_STATUS
 = 4;

89 c⁄° 
INT32
 
	gTRADE_LOOKUP
 = 5;

90 c⁄° 
INT32
 
	gTRADE_ORDER
 = 6;

91 c⁄° 
INT32
 
	gTRADE_UPDATE
 = 7;

93 c⁄° 
INT32
 
	gMARKET_FEED
 = 8;

94 c⁄° 
INT32
 
	gTRADE_RESULT
 = 9;

96 
CCETxnMixGíî©‹
–c⁄° 
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
, 
CBa£Loggî
 *
pLoggî
 );

97 
CCETxnMixGíî©‹
–c⁄° 
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
, 
RNGSEED
 
RNGSìd
, 
CBa£Loggî
 *
pLoggî
);

98 ~
CCETxnMixGíî©‹
();

100 
RNGSEED
 
GëRNGSìd
( );

101 
SëRNGSìd
–
RNGSEED
 
RNGSìd
 );

103 
Upd©eTu«bÀs
( );

104 
Gíî©eNextTxnTy≥
( );

	@include/workload/tpce/egen/ChargeTable.h

40 #i‚de‡
CHARGE_TABLE_H


41 
	#CHARGE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCCh¨geTabÀ
 : 
public
 
TabÀTem∂©e
<
CHARGE_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CCh¨geTabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
CHARGE_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "Ch¨ge.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CCh¨geTabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/CommissionRateTable.h

40 #i‚de‡
COMMISSION_RATE_TABLE_H


41 
	#COMMISSION_RATE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCCommissi⁄R©eTabÀ
 : 
public
 
TabÀTem∂©e
<
COMMISSION_RATE_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CCommissi⁄R©eTabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
COMMISSION_RATE_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "Commissi⁄R©e.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CCommissi⁄R©eTabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/CompanyCompetitorFile.h

42 #i‚de‡
COMPANY_COMPETITOR_FILE_H


43 
	#COMPANY_COMPETITOR_FILE_H


	)

45 
	~<°rög
>

46 
	~"EGíSènd¨dTy≥s.h
"

47 
	~"TabÀC⁄°s.h
"

48 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

49 
	~"FœtFûe.h
"

51 
usög
 
«me•a˚
 
	g°d
;

53 
«me•a˚
 
	gTPCE


56 
˛ass
 
	gCCom∑nyCom≥tô‹Fûe
 : 
public
 
CFœtFûe
<
TCom∑nyCom≥tô‹I≈utRow
, 
	gTCom∑nyCom≥tô‹Limôs
>

61 
TIdít
 
	gm_iC⁄figuªdCom∑nyCom≥tô‹Cou¡
;

62 
TIdít
 
	gm_iA˘iveCom∑nyCom≥tô‹Cou¡
;

66 
UINT
 
	gm_iBa£Com∑nyCou¡
;

68 
	gpublic
:

81 
CCom∑nyCom≥tô‹Fûe
(c⁄° *
szLi°Fûe
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

82 : 
CFœtFûe
<
TCom∑nyCom≥tô‹I≈utRow
, 
	gTCom∑nyCom≥tô‹Limôs
>(
	gszLi°Fûe
)

84 
TCom∑nyLimôs
 
	gCom∑nyI≈utFûeLimôs
;

86 
SëC⁄figuªdCom∑nyCom≥tô‹Cou¡
(
iC⁄figuªdCu°omîCou¡
);

87 
SëA˘iveCom∑nyCom≥tô‹Cou¡
(
iA˘iveCu°omîCou¡
);

89 
	gm_iBa£Com∑nyCou¡
 = 
Com∑nyI≈utFûeLimôs
.
m_iTŸÆEÀmíts
;

103 
CCom∑nyCom≥tô‹Fûe
(c⁄° 
°rög
 &
°r
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

104 : 
CFœtFûe
<
TCom∑nyCom≥tô‹I≈utRow
, 
	gTCom∑nyCom≥tô‹Limôs
>(
	g°r
)

106 
TCom∑nyLimôs
 
	gCom∑nyI≈utFûeLimôs
;

108 
SëC⁄figuªdCom∑nyCom≥tô‹Cou¡
(
iC⁄figuªdCu°omîCou¡
);

109 
SëA˘iveCom∑nyCom≥tô‹Cou¡
(
iA˘iveCu°omîCou¡
);

111 
	gm_iBa£Com∑nyCou¡
 = 
Com∑nyI≈utFûeLimôs
.
m_iTŸÆEÀmíts
;

125 
SëC⁄figuªdCom∑nyCom≥tô‹Cou¡
(
TIdít
 
iC⁄figuªdCu°omîCou¡
)

127 
	gm_iC⁄figuªdCom∑nyCom≥tô‹Cou¡
 = 
CÆcuœãCom∑nyCom≥tô‹Cou¡
(
iC⁄figuªdCu°omîCou¡
);

141 
SëA˘iveCom∑nyCom≥tô‹Cou¡
(
TIdít
 
iA˘iveCu°omîCou¡
)

143 
	gm_iA˘iveCom∑nyCom≥tô‹Cou¡
 = 
CÆcuœãCom∑nyCom≥tô‹Cou¡
(
iA˘iveCu°omîCou¡
);

156 
TIdít
 
CÆcuœãCom∑nyCom≥tô‹Cou¡
(TIdíà
iCu°omîCou¡
)

158  
	giCu°omîCou¡
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôCom∑nyCom≥tô‹Cou¡
;

170 
TIdít
 
CÆcuœãSèπFromCom∑nyCom≥tô‹
(TIdíà
iSèπFromCu°omî
)

172  
	giSèπFromCu°omî
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôCom∑nyCom≥tô‹Cou¡
;

185 
TIdít
 
GëCom∑nyId
(TIdíà
iIndex
)

189  
	gm_li°
[ ()(
iIndex
 % 
m_li°
.
size
()Ë].
	gCP_CO_ID
 + 
	giTIdítShi·


190 + 
	giIndex
 / 
	gm_li°
.
size
(Ë* 
	gm_iBa£Com∑nyCou¡
;

203 
TIdít
 
GëCom∑nyCom≥tô‹Id
(TIdíà
iIndex
)

207  
	gm_li°
[ ()(
iIndex
 % 
m_li°
.
size
()Ë].
	gCP_COMP_CO_ID
 + 
	giTIdítShi·


208 + 
	giIndex
 / 
	gm_li°
.
size
(Ë* 
	gm_iBa£Com∑nyCou¡
;

221 * 
GëIndu°ryId
(
TIdít
 
iIndex
)

225  
	gm_li°
[ ()(
iIndex
 % 
m_li°
.
size
()Ë].
	gCP_IN_ID
;

238 
TIdít
 
GëC⁄figuªdCom∑nyCom≥tô‹Cou¡
()

240  
	gm_iC⁄figuªdCom∑nyCom≥tô‹Cou¡
;

253 
TIdít
 
GëA˘iveCom∑nyCom≥tô‹Cou¡
()

255  
	gm_iA˘iveCom∑nyCom≥tô‹Cou¡
;

268 
TCom∑nyCom≥tô‹I≈utRow
* 
GëRec‹d
(
TIdít
 
ödex
Ë{  &
	gm_li°
[()(ödex % 
m_li°
.
size
())]; };

	@include/workload/tpce/egen/CompanyCompetitorTable.h

40 #i‚de‡
COMPANY_COMPETITOR_TABLE_H


41 
	#COMPANY_COMPETITOR_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Com∑nyCom≥tô‹Fûe.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCCom∑nyCom≥tô‹TabÀ
 : 
public
 
TabÀTem∂©e
<
COMPANY_COMPETITOR_ROW
>

51 
CCom∑nyCom≥tô‹Fûe
* 
m_pCom∑nyCom≥tô‹Fûe
;

52 
TIdít
 
	gm_iCom∑nyCom≥tô‹Cou¡
;

53 
TIdít
 
	gm_iSèπFromCom∑nyCom≥tô‹
;

54 
TIdít
 
	gm_iCom∑nyCom≥tô‹Cou¡F‹O√LﬂdUnô
;

65 
InôNextLﬂdUnô
()

69 
CÀ¨Rec‹d
();

72 
	gpublic
:

73 
CCom∑nyCom≥tô‹TabÀ
(
CI≈utFûes
 
öputFûes
,

74 
TIdít
 
iCu°omîCou¡
,

75 
TIdít
 
iSèπFromCu°omî
)

76 : 
TabÀTem∂©e
<
COMPANY_COMPETITOR_ROW
>()

77 , 
m_pCom∑nyCom≥tô‹Fûe
(
öputFûes
.
Com∑nyCom≥tô‹
)

79 
	gm_iCom∑nyCom≥tô‹Cou¡
 = 
m_pCom∑nyCom≥tô‹Fûe
->
CÆcuœãCom∑nyCom≥tô‹Cou¡
(
iCu°omîCou¡
);

80 
	gm_iSèπFromCom∑nyCom≥tô‹
 = 
m_pCom∑nyCom≥tô‹Fûe
->
CÆcuœãSèπFromCom∑nyCom≥tô‹
(
iSèπFromCu°omî
);

82 
	gm_iLa°RowNumbî
 = 
m_iSèπFromCom∑nyCom≥tô‹
;

84 
	gm_iCom∑nyCom≥tô‹Cou¡F‹O√LﬂdUnô
 = 
m_pCom∑nyCom≥tô‹Fûe
->
CÆcuœãCom∑nyCom≥tô‹Cou¡
(
iDeÁu…LﬂdUnôSize
);

90 
boﬁ
 
Gíî©eNextRec‹d
()

92 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iCom∑nyCom≥tô‹Cou¡F‹O√LﬂdUnô
 == 0)

94 
InôNextLﬂdUnô
();

97 
	gm_row
.
	gCP_CO_ID
 = 
m_pCom∑nyCom≥tô‹Fûe
->
GëCom∑nyId
(
m_iLa°RowNumbî
);

99 
	gm_row
.
	gCP_COMP_CO_ID
 = 
m_pCom∑nyCom≥tô‹Fûe
->
GëCom∑nyCom≥tô‹Id
(
m_iLa°RowNumbî
);

101 
°∫˝y
(
m_row
.
CP_IN_ID
,

102 
m_pCom∑nyCom≥tô‹Fûe
->
GëIndu°ryId
(
m_iLa°RowNumbî
),

103 (
m_row
.
CP_IN_ID
));

105 ++
	gm_iLa°RowNumbî
;

107 
	gm_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < 
m_iSèπFromCom∑nyCom≥tô‹
 + 
m_iCom∑nyCom≥tô‹Cou¡
;

109  (
M‹eRec‹ds
());

	@include/workload/tpce/egen/CompanyFile.h

42 #i‚de‡
COMPANY_FILE_H


43 
	#COMPANY_FILE_H


	)

45 
	~<°rög
>

46 
	~"EGíSènd¨dTy≥s.h
"

47 
	~"TabÀC⁄°s.h
"

48 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

49 
	~"FœtFûe.h
"

51 
usög
 
«me•a˚
 
	g°d
;

53 
«me•a˚
 
	gTPCE


56 
˛ass
 
	gCCom∑nyFûe
 : 
public
 
CFœtFûe
<
TCom∑nyI≈utRow
, 
	gTCom∑nyLimôs
>

61 
TIdít
 
	gm_iC⁄figuªdCom∑nyCou¡
;

62 
TIdít
 
	gm_iA˘iveCom∑nyCou¡
;

64 
	gpublic
:

77 
CCom∑nyFûe
(c⁄° *
szLi°Fûe
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

78 : 
CFœtFûe
<
TCom∑nyI≈utRow
, 
	gTCom∑nyLimôs
>(
	gszLi°Fûe
)

80 
SëC⁄figuªdCom∑nyCou¡
(
iC⁄figuªdCu°omîCou¡
);

81 
SëA˘iveCom∑nyCou¡
(
iA˘iveCu°omîCou¡
);

95 
CCom∑nyFûe
(c⁄° 
°rög
 &
°r
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

96 : 
CFœtFûe
<
TCom∑nyI≈utRow
, 
	gTCom∑nyLimôs
>(
	g°r
)

98 
SëC⁄figuªdCom∑nyCou¡
(
iC⁄figuªdCu°omîCou¡
);

99 
SëA˘iveCom∑nyCou¡
(
iA˘iveCu°omîCou¡
);

113 
SëC⁄figuªdCom∑nyCou¡
(
TIdít
 
iC⁄figuªdCu°omîCou¡
)

115 
	gm_iC⁄figuªdCom∑nyCou¡
 = 
CÆcuœãCom∑nyCou¡
(
iC⁄figuªdCu°omîCou¡
);

129 
SëA˘iveCom∑nyCou¡
(
TIdít
 
iA˘iveCu°omîCou¡
)

131 
	gm_iA˘iveCom∑nyCou¡
 = 
CÆcuœãCom∑nyCou¡
(
iA˘iveCu°omîCou¡
);

144 
TIdít
 
CÆcuœãCom∑nyCou¡
(TIdíà
iCu°omîCou¡
)

146  
	giCu°omîCou¡
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôCom∑nyCou¡
;

158 
TIdít
 
CÆcuœãSèπFromCom∑ny
(TIdíà
iSèπFromCu°omî
)

160  
	giSèπFromCu°omî
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôCom∑nyCou¡
;

175 
Cª©eName
(
TIdít
 
iIndex
,

176 * 
szOuçut
,

177 
size_t
 
iOuçutLí
)

179 
TIdít
 
	giFûeIndex
 = 
iIndex
 % 
CFœtFûe
<
TCom∑nyI≈utRow
, 
	gTCom∑nyLimôs
>::
GëSize
();

180 
TIdít
 
	giAdd
 = 
iIndex
 / 
CFœtFûe
<
TCom∑nyI≈utRow
, 
	gTCom∑nyLimôs
>::
GëSize
();

182 i‡(
	giAdd
 > 0)

184 
¢¥ötf
–
szOuçut
, 
iOuçutLí
, "%†#%Œd", 
GëRec‹d
(
iFûeIndex
)->
CO_NAME
, 
iAdd
 );

188 
°∫˝y
(
szOuçut
, 
GëRec‹d
(
iFûeIndex
)->
CO_NAME
, 
iOuçutLí
);

202 
TIdít
 
GëCom∑nyId
(TIdíà
iIndex
)

206  
	gm_li°
[ ()(
iIndex
 % 
m_li°
.
size
()Ë].
	gCO_ID
 + 
	giTIdítShi·


207 + 
	giIndex
 / 
	gm_li°
.
size
() * m_list.size();

220 
TIdít
 
GëSize
()

222  
	gm_iC⁄figuªdCom∑nyCou¡
;

235 
TIdít
 
GëC⁄figuªdCom∑nyCou¡
()

237  
	gm_iC⁄figuªdCom∑nyCou¡
;

250 
TIdít
 
GëA˘iveCom∑nyCou¡
()

252  
	gm_iA˘iveCom∑nyCou¡
;

265 
TCom∑nyI≈utRow
* 
GëRec‹d
(
TIdít
 
ödex
Ë{  &
	gm_li°
[()(ödex % 
m_li°
.
size
())]; };

	@include/workload/tpce/egen/CompanyTable.h

40 #i‚de‡
COMPANY_TABLE_H


41 
	#COMPANY_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Com∑nyFûe.h
"

46 
«me•a˚
 
	gTPCE


49 c⁄° 
	giCEOMu…
=1000;

54 c⁄° 
	giRNGSkùO√RowCom∑ny
 = 2;

56 
˛ass
 
	gCCom∑nyTabÀ
 : 
public
 
TabÀTem∂©e
<
COMPANY_ROW
>

58 
CCom∑nyFûe
* 
m_Com∑nyFûe
;

59 
TCom∑nySPR©eFûe
* 
	gm_Com∑nySPR©eFûe
;

60 
CPîs⁄
 
	gm_≥rs⁄
;

61 
CD©eTime
 
	gm_d©e
;

62 
TIdít
 
	gm_iCO_AD_ID_START
;

63 
	gm_iJ™1_1800_DayNo
;

64 
	gm_iJ™2_2000_DayNo
;

65 
	gm_iCuºítDayNo
;

66 
TIdít
 
	gm_iCom∑nyCou¡F‹O√LﬂdUnô
;

67 
TIdít
 
	gm_iCom∑nyCou¡
;

68 
TIdít
 
	gm_iSèπFromCom∑ny
;

79 
GëCom∑nySPR©eThªshﬁd
()

81 
RNGSEED
 
	gOldSìd
;

82 
	giCom∑nySPR©eThªshﬁd
;

84 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

85 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
–
RNGSìdBa£SPR©e
,

86 (
RNGSEED
Ë
m_row
.
CO_ID
 ));

87 
	giCom∑nySPR©eThªshﬁd
 = 
m_∫d
.
RndI¡R™ge
(0, 
m_Com∑nySPR©eFûe
->
GëGª©e°Key
()-1);

88 
	gm_∫d
.
SëSìd
–
OldSìd
 );

89 –
	giCom∑nySPR©eThªshﬁd
 );

102 
Gíî©eCom∑nySPR©e
()

104 
	giThªshﬁd
 = 
GëCom∑nySPR©eThªshﬁd
();

107 c⁄° 
TCom∑nySPR©eI≈utRow
* 
	gpCom∑nySPR©eI≈utRow
 = 
m_Com∑nySPR©eFûe
->
GëRec‹d
(
iThªshﬁd
);

108 
°∫˝y
–
m_row
.
CO_SP_RATE
, 
pCom∑nySPR©eI≈utRow
->CO_SP_RATE, (m_row.CO_SP_RATE));

120 
InôNextLﬂdUnô
()

122 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

123 (
RNGSEED
Ë
m_iLa°RowNumbî
 * 
iRNGSkùO√RowCom∑ny
));

125 
CÀ¨Rec‹d
();

128 
	gpublic
:

140 
CCom∑nyTabÀ
–
CI≈utFûes
 
öputFûes
,

141 
TIdít
 
iCu°omîCou¡
,

142 
TIdít
 
iSèπFromCu°omî
)

143 : 
TabÀTem∂©e
<
COMPANY_ROW
>()

144 , 
m_Com∑nyFûe
(
öputFûes
.
Com∑ny
)

145 , 
m_Com∑nySPR©eFûe
(
öputFûes
.
Com∑nySPR©e
)

146 , 
m_≥rs⁄
(
öputFûes
, 0, 
Ál£
)

148 
	gm_iJ™1_1800_DayNo
 = 
CD©eTime
::
YMDtoDayno
(1800, 1, 1);

149 
	gm_iJ™2_2000_DayNo
 = 
CD©eTime
::
YMDtoDayno
(2000, 1, 2);

150 
	gm_iCuºítDayNo
 = 
m_d©e
.
DayNo
();

152 
	gm_iCom∑nyCou¡F‹O√LﬂdUnô
 = 
m_Com∑nyFûe
->
CÆcuœãCom∑nyCou¡
(
iDeÁu…LﬂdUnôSize
);

154 
	gm_iCom∑nyCou¡
 = 
m_Com∑nyFûe
->
CÆcuœãCom∑nyCou¡
(
iCu°omîCou¡
);

155 
	gm_iSèπFromCom∑ny
 = 
m_Com∑nyFûe
->
CÆcuœãSèπFromCom∑ny
(
iSèπFromCu°omî
);

157 
	gm_iLa°RowNumbî
 = 
m_iSèπFromCom∑ny
;

160 
	gm_iCO_AD_ID_START
 = 
öputFûes
.
Exch™ge
->
GëSize
(Ë+ 
m_iSèπFromCom∑ny
 + 
iTIdítShi·
;

174 
boﬁ
 
Gíî©eNextCO_ID
()

176 ++
	gm_iLa°RowNumbî
;

177 
	gm_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < (
m_iSèπFromCom∑ny
 + 
m_iCom∑nyCou¡
);

179  (
M‹eRec‹ds
());

192 
TIdít
 
GëCuºítCO_ID
()

194  (
	gm_Com∑nyFûe
->
GëCom∑nyId
(
m_iLa°RowNumbî
));

208 
boﬁ
 
Gíî©eNextRec‹d
()

210 
	giFoundDayNo
;

214 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iCom∑nyCou¡F‹O√LﬂdUnô
 == 0)

216 
InôNextLﬂdUnô
();

219 
	gm_row
.
	gCO_ID
 = 
GëCuºítCO_ID
();

221 
°∫˝y
(
m_row
.
CO_ST_ID
,

222 
m_Com∑nyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->
CO_ST_ID
,

223 (
m_row
.
CO_ST_ID
));

225 
	gm_Com∑nyFûe
->
Cª©eName
–
m_iLa°RowNumbî
,

226 
m_row
.
CO_NAME
,

227 
°©ic_ˇ°
<>((
m_row
.
CO_NAME
)));

229 
°∫˝y
(
m_row
.
CO_IN_ID
,

230 
m_Com∑nyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->
CO_IN_ID
,

231 (
m_row
.
CO_IN_ID
));

233 
Gíî©eCom∑nySPR©e
();

235 
¢¥ötf
(
m_row
.
CO_CEO
, (m_row.CO_CEO), "%s %s",

236 
m_≥rs⁄
.
GëFú°Name
(
iCEOMu…
*
m_row
.
CO_ID
),

237 
m_≥rs⁄
.
GëLa°Name
(
iCEOMu…
*
m_row
.
CO_ID
));

239 
°∫˝y
(
m_row
.
CO_DESC
,

240 
m_Com∑nyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->
CO_DESC
,

241 (
m_row
.
CO_DESC
));

243 
	gm_row
.
	gCO_AD_ID
 = ++
m_iCO_AD_ID_START
;

245 
	giFoundDayNo
 = 
m_∫d
.
RndI¡R™ge
(
m_iJ™1_1800_DayNo
, 
m_iJ™2_2000_DayNo
);

247 
	gm_row
.
	gCO_OPEN_DATE
.
Së
(
iFoundDayNo
);

250  
Gíî©eNextCO_ID
();

	@include/workload/tpce/egen/CustomerAccountsAndPermissionsTable.h

40 #i‚de‡
CUSTOMER_ACCOUNTS_AND_PERMISSIONS_TABLE_H


41 
	#CUSTOMER_ACCOUNTS_AND_PERMISSIONS_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Cu°omîTabÀ.h
"

45 
	~"AddªssTabÀ.h
"

47 
«me•a˚
 
	gTPCE


49 c⁄° 
UINT
 
	giMaxCAPîms
=3;

50 c⁄° 
UINT
 
	giMöAccou¡sPîCu°R™ge
[3] = {1, 2, 5};

51 c⁄° 
UINT
 
	giMaxAccou¡sPîCu°R™ge
[3] = {4, 8, 10};

52 c⁄° 
UINT
 
	giMaxAccou¡sPîCu°
 = 10;

53 c⁄° 
TIdít
 
	giSèπögBrokîID
 = 1;

63 c⁄° 
TIdít
 
	giAccou¡Pîmissi⁄IDR™ge
 = 
INT64_CONST
(4024Ë* 1024 * 1024 - 
iDeÁu…SèπFromCu°omî
;

65 c⁄° 
UINT
 
	giPî˚¡Accou¡sWôhPosôiveInôülBÆ™˚
 = 80;

67 c⁄° 
	gfAccou¡InôülPosôiveBÆ™˚Max
 = 9999999.99;

68 c⁄° 
	gfAccou¡InôülNeg©iveBÆ™˚Mö
 = -9999999.99;

70 c⁄° 
UINT
 
	giPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_0
 = 60;

71 c⁄° 
UINT
 
	giPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_1
 = 38;

72 c⁄° 
UINT
 
	giPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_2
 = 2;

74 c⁄° 
UINT
 
	giPî˚¡Accou¡TaxSètusN⁄TaxabÀ
 = 20;

75 c⁄° 
UINT
 
	giPî˚¡Accou¡TaxSètusTaxabÀAndWôhhﬁd
 = 50;

76 c⁄° 
UINT
 
	giPî˚¡Accou¡TaxSètusTaxabÀAndD⁄tWôhhﬁd
 = 30;

80 c⁄° 
UINT
 
	giRNGSkùO√RowCu°omîAccou¡
 = 10;

82 
	eeTaxSètus


84 
	geN⁄e
 = -1,

85 
	geN⁄TaxabÀ
 = 0,

86 
	geTaxabÀAndWôhhﬁd
,

87 
	geTaxabÀAndD⁄tWôhhﬁd


90 
	sCUSTOMER_ACCOUNT_AND_PERMISSION_ROW


92 
CUSTOMER_ACCOUNT_ROW
 
	gm_ˇ
;

93 
ACCOUNT_PERMISSION_ROW
 
	gm_≥rm
[
iMaxCAPîms
+1];

94 } *
	tPCUSTOMER_ACCOUNT_AND_PERMISSION_ROW
;

96 
˛ass
 
	gCCu°omîAccou¡sAndPîmissi⁄sTabÀ
 : 
public
 
TabÀTem∂©e
<
CUSTOMER_ACCOUNT_AND_PERMISSION_ROW
>

98 
TTaxabÀAccou¡NameFûe
* 
m_pTaxabÀAccou¡Name
;

99 
TN⁄TaxabÀAccou¡NameFûe
* 
	gm_pN⁄TaxabÀAccou¡Name
;

100 
TIdít
 
	gm_iSèπFromCu°omî
;

101 
TIdít
 
	gm_iCu°omîCou¡
;

102 
TIdít
 
	gm_iSèπögCA_ID
;

103 
UINT
 
	gm_iRowsToGíF‹Cu°
;

104 
UINT
 
	gm_iRowsGíî©edF‹Cu°
;

105 
CCu°omîTabÀ
 
	gm_cu°
;

106 
CPîs⁄
 
	gm_≥rs⁄
;

107 
UINT
 
	gm_iPîmsF‹CA
;

108 
TIdít
 
	gm_iBrokîsCou¡
;

109 
CAddªssTabÀ
 
	gm_addr
;

110 
UINT
 
	gm_iLﬂdUnôSize
;

111 
CCu°omîSñe˘i⁄
 
	gm_Cu°omîSñe˘i⁄
;

112 
boﬁ
 
	gm_bCacheE«bÀd
;

113 
	gm_iCacheSizeNA
;

114 
TIdít
 
	gm_iCacheOff£tNA
;

115 
UINT
* 
	gm_CacheNA
;

116 
	gm_iCacheSizeTS
;

117 
TIdít
 
	gm_iCacheOff£tTS
;

118 
eTaxSètus
* 
	gm_CacheTS
;

129 
Gíî©eCARow
()

131 
	giAc˘Ty≥
;

135 
Gíî©eNextCA_AD
();

137 
	gm_row
.
	gm_ˇ
.
	gCA_C_ID
 = 
GëCuºítC_ID
();

140 
	gm_row
.
	gm_ˇ
.
	gCA_B_ID
 = 
Gíî©eBrokîIdF‹Accou¡
(
m_row
.
m_ˇ
.
CA_ID
);

143 i‡((
	gm_row
.
	gm_ˇ
.
	gCA_TAX_ST
 = ()
GëAccou¡TaxSètus
(
m_row
.
m_ˇ
.
CA_ID
)Ë=
eN⁄TaxabÀ
)

145 
iAc˘Ty≥
 = (Ë
m_row
.
m_ˇ
.
CA_ID
 % 
m_pN⁄TaxabÀAccou¡Name
->
GëSize
();

147 
¢¥ötf
(
m_row
.
m_ˇ
.
CA_NAME
,

148 (
m_row
.
m_ˇ
.
CA_NAME
),

150 
m_≥rs⁄
.
GëFú°Name
(
m_row
.
m_ˇ
.
CA_C_ID
),

151 
m_≥rs⁄
.
GëLa°Name
(
m_row
.
m_ˇ
.
CA_C_ID
),

152 (
m_pN⁄TaxabÀAccou¡Name
->
GëRec‹d
(
iAc˘Ty≥
))->
NAME
);

156 
	giAc˘Ty≥
 = (Ë
m_row
.
m_ˇ
.
CA_ID
 % 
m_pTaxabÀAccou¡Name
->
GëSize
();

158 
¢¥ötf
(
m_row
.
m_ˇ
.
CA_NAME
,

159 (
m_row
.
m_ˇ
.
CA_NAME
),

161 
m_≥rs⁄
.
GëFú°Name
(
m_row
.
m_ˇ
.
CA_C_ID
),

162 
m_≥rs⁄
.
GëLa°Name
(
m_row
.
m_ˇ
.
CA_C_ID
),

163 (
m_pTaxabÀAccou¡Name
->
GëRec‹d
(
iAc˘Ty≥
))->
NAME
);

166 i‡(
	gm_∫d
.
RndPî˚¡
–
iPî˚¡Accou¡sWôhPosôiveInôülBÆ™˚
 ))

168 
	gm_row
.
	gm_ˇ
.
	gCA_BAL
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(0.00, 
fAccou¡InôülPosôiveBÆ™˚Max
, 0.01);

172 
	gm_row
.
	gm_ˇ
.
	gCA_BAL
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(
fAccou¡InôülNeg©iveBÆ™˚Mö
, 0.00, 0.01);

188 
FûlAPRow
(
TIdít
 
CA_ID
, TIdíà
C_ID
, c⁄° *
szACL
, 
ACCOUNT_PERMISSION_ROW
 &
row
)

190 
	grow
.
	gAP_CA_ID
 = 
CA_ID
;

191 
	gm_cu°
.
GëC_TAX_ID
(
C_ID
, 
row
.
AP_TAX_ID
);

192 
°∫˝y
(
row
.
AP_L_NAME
, 
m_≥rs⁄
.
GëLa°Name
(
C_ID
), (row.AP_L_NAME));

193 
°∫˝y
(
row
.
AP_F_NAME
, 
m_≥rs⁄
.
GëFú°Name
(
C_ID
), (row.AP_F_NAME));

194 
°∫˝y
(
row
.
AP_ACL
, 
szACL
, (row.AP_ACL));

206 
Gíî©eAPRows
()

208 
	giAddôi⁄ÆPîms
;

209 
TIdít
 
	gCID_1
, 
	gCID_2
;

214 
FûlAPRow
(
m_row
.
m_ˇ
.
CA_ID
, m_row.m_ˇ.
CA_C_ID
, "0000", m_row.
m_≥rm
[0]);

216 
	giAddôi⁄ÆPîms
 = 
GëNumPîmsF‹CA
(
m_row
.
m_ˇ
.
CA_ID
);

217 
	giAddôi⁄ÆPîms
)

220 
m_iPîmsF‹CA
 = 1;

223 
GëCIDsF‹Pîmissi⁄s
(
m_row
.
m_ˇ
.
CA_ID
, m_row.m_ˇ.
CA_C_ID
, &
CID_1
, 
NULL
);

224 
	gm_iPîmsF‹CA
 = 2;

226 
FûlAPRow
(
m_row
.
m_ˇ
.
CA_ID
, 
CID_1
, "0001", m_row.
m_≥rm
[1]);

229 
GëCIDsF‹Pîmissi⁄s
(
m_row
.
m_ˇ
.
CA_ID
, m_row.m_ˇ.
CA_C_ID
, &
CID_1
, &
CID_2
);

230 
	gm_iPîmsF‹CA
 = 3;

232 
FûlAPRow
(
m_row
.
m_ˇ
.
CA_ID
, 
CID_1
, "0001", m_row.
m_≥rm
[1]);

234 
FûlAPRow
(
m_row
.
m_ˇ
.
CA_ID
, 
CID_2
, "0011", m_row.
m_≥rm
[2]);

240 
	gpublic
:

253 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
(
CI≈utFûes
 
öputFûes
,

254 
UINT
 
iLﬂdUnôSize
,

255 
TIdít
 
iCu°omîCou¡
,

256 
TIdít
 
iSèπFromCu°omî
,

257 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


259 : 
TabÀTem∂©e
<
CUSTOMER_ACCOUNT_AND_PERMISSION_ROW
>()

260 , 
m_pTaxabÀAccou¡Name
(
öputFûes
.
TaxabÀAccou¡Name
)

261 , 
m_pN⁄TaxabÀAccou¡Name
(
öputFûes
.
N⁄TaxabÀAccou¡Name
)

262 , 
m_iSèπFromCu°omî
(
iSèπFromCu°omî
)

263 , 
m_iCu°omîCou¡
(
iCu°omîCou¡
)

264 , 
m_iRowsToGíF‹Cu°
(0), 
m_iRowsGíî©edF‹Cu°
(0)

265 , 
m_cu°
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

266 , 
m_≥rs⁄
(
öputFûes
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

267 , 
m_iPîmsF‹CA
(0)

268 , 
m_iBrokîsCou¡
(
iLﬂdUnôSize
 / 
iBrokîsDiv
)

269 , 
m_addr
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

270 , 
m_iLﬂdUnôSize
(
iLﬂdUnôSize
)

271 , 
m_bCacheE«bÀd
(
bCacheE«bÀd
)

273 i‡(
	gm_bCacheE«bÀd
)

275 
	gm_iCacheSizeNA
 = 
iDeÁu…LﬂdUnôSize
;

276 
	gm_iCacheOff£tNA
 = 
iSèπFromCu°omî
 + 
iTIdítShi·
;

277 
	gm_CacheNA
 = 
√w
 
UINT
[
m_iCacheSizeNA
];

278 
	gi
=0; i<
	gm_iCacheSizeNA
; i++)

280 
	gm_CacheNA
[
i
] = 0;

283 
	gm_iCacheSizeTS
 = 
iDeÁu…LﬂdUnôSize
 * 
iMaxAccou¡sPîCu°
;

284 
	gm_iCacheOff£tTS
 = ((
iSèπFromCu°omî
-1Ë+ 
iTIdítShi·
Ë* 
iMaxAccou¡sPîCu°
;

285 
	gm_CacheTS
 = 
√w
 
eTaxSètus
[
m_iCacheSizeTS
];

286 
	gi
=0; i<
	gm_iCacheSizeTS
; i++)

288 
	gm_CacheTS
[
i
] = 
eN⁄e
;

296 ~
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
()

298 i‡(
	gm_bCacheE«bÀd
)

300 
	gdñëe
[] 
	gm_CacheNA
;

301 
	gdñëe
[] 
	gm_CacheTS
;

314 
InôNextLﬂdUnô
()

316 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

317 (
RNGSEED
)(
GëCuºítC_ID
(Ë* 
iMaxAccou¡sPîCu°
 *

318 
iRNGSkùO√RowCu°omîAccou¡
)));

320 
CÀ¨Rec‹d
();

322 i‡(
	gm_bCacheE«bÀd
)

324 
	gm_iCacheOff£tNA
 +
iDeÁu…LﬂdUnôSize
;

325 
	gi
=0; i<
	gm_iCacheSizeNA
; i++)

327 
	gm_CacheNA
[
i
] = 0;

329 
	gm_iCacheOff£tTS
 +
iDeÁu…LﬂdUnôSize
 * 
iMaxAccou¡sPîCu°
;

330 
	gi
=0; i<
	gm_iCacheSizeTS
; i++)

332 
	gm_CacheTS
[
i
] = 
eN⁄e
;

347 
UINT
 
GëNumbîOfAccou¡s
(
TIdít
 
CID
, 
eCu°omîTõr
 
iCu°omîTõr
)

349 
UINT
 
	giNumAccou¡s
 = 0;

354 
TIdít
 
	gödex
 = 
CID
 - 
m_iCacheOff£tNA
;

355 
boﬁ
 
	gbCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSizeNA
);

356 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

358 
	giNumAccou¡s
 = 
m_CacheNA
[
ödex
];

361 i‡(
	giNumAccou¡s
 == 0)

363 
UINT
 
iMöAccou¡Cou¡
;

364 
UINT
 
	giMod
;

365 
UINT
 
	giInvî£CID
;

367 
	giMöAccou¡Cou¡
 = 
iMöAccou¡sPîCu°R™ge
[
iCu°omîTõr
 - 
eCu°omîTõrO√
];

368 
	giMod
 = 
iMaxAccou¡sPîCu°R™ge
[
iCu°omîTõr
 - 
eCu°omîTõrO√
] - 
iMöAccou¡Cou¡
 + 1;

369 
	giInvî£CID
 = 
m_Cu°omîSñe˘i⁄
.
GëInvî£CID
(
CID
);

373 i‡(
	giInvî£CID
 < 200)

375 
	giNumAccou¡s
 = (
iInvî£CID
 % 
iMod
Ë+ 
iMöAccou¡Cou¡
;

379 i‡(
	giInvî£CID
 < 800)

381 
	giNumAccou¡s
 = ((
iInvî£CID
 - 200 + 1Ë% 
iMod
Ë+ 
iMöAccou¡Cou¡
;

385 
	giNumAccou¡s
 = ((
iInvî£CID
 - 800 + 2Ë% 
iMod
Ë+ 
iMöAccou¡Cou¡
;

389 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

391 
	gm_CacheNA
[
ödex
] = 
iNumAccou¡s
;

394  
	giNumAccou¡s
;

411 
Gíî©eR™domAccou¡Id
(
CR™dom
& 
RND
,

412 
TIdít
 
iCu°omîId
,

413 
eCu°omîTõr
 
iCu°omîTõr
,

414 
TIdít
* 
piCu°omîAccou¡
,

415 * 
piAccou¡Cou¡
)

417 
TIdít
 
	giCu°omîAccou¡
;

418 
	giAccou¡Cou¡
;

419 
TIdít
 
	giSèπögAccou¡
;

421 
	giAccou¡Cou¡
 = 
GëNumbîOfAccou¡s
(
iCu°omîId
, 
iCu°omîTõr
);

423 
	giSèπögAccou¡
 = 
GëSèπögCA_ID
(
iCu°omîId
);

427 
	giCu°omîAccou¡
 = 
RND
.
RndI¡64R™ge
(
iSèπögAccou¡
,

428 
iSèπögAccou¡
 + 
iAccou¡Cou¡
 - 1);

430 i‡(
	gpiCu°omîAccou¡
 !
NULL
)

432 *
piCu°omîAccou¡
 = 
iCu°omîAccou¡
;

435 i‡(
	gpiAccou¡Cou¡
 !
NULL
)

437 *
piAccou¡Cou¡
 = 
iAccou¡Cou¡
;

452 
TIdít
 
Gíî©eR™domAccou¡Id
–
CR™dom
& 
RND
, TIdíà
iCu°omîId
,

453 
eCu°omîTõr
 
iCu°omîTõr
)

455 
TIdít
 
	giAccou¡Off£t
;

456 
INT32
 
	giAccou¡Cou¡
;

457 
TIdít
 
	giSèπögAccou¡
;

459 
	giAccou¡Cou¡
 = 
GëNumbîOfAccou¡s
(
iCu°omîId
, 
iCu°omîTõr
);

461 
	giSèπögAccou¡
 = 
GëSèπögCA_ID
(
iCu°omîId
);

463 
	giAccou¡Off£t
 = (
TIdít
Ë
RND
.
RndI¡64R™ge
( 0,

464 (
INT64
Ë
iAccou¡Cou¡
 - 1 );

466 –
	giSèπögAccou¡
 + 
	giAccou¡Off£t
 );

479 
TIdít
 
GëSèπögCA_ID
(TIdíà
CID
)

482  ((
	gCID
-1Ë* 
	giMaxAccou¡sPîCu°
 + 1);

495 
TIdít
 
GëEndögCA_ID
(TIdíà
CID
)

497  (
	gCID
 + 
	giTIdítShi·
Ë* 
	giMaxAccou¡sPîCu°
;

512 
TIdít
 
Gíî©eNextCA_AD
()

514 i‡(
GëCuºítC_ID
(Ë% 
	giDeÁu…LﬂdUnôSize
 == 0)

516 
InôNextLﬂdUnô
();

519 ++
	gm_iLa°RowNumbî
;

521 i‡(
	gm_iRowsGíî©edF‹Cu°
 =
m_iRowsToGíF‹Cu°
)

523 
m_cu°
.
Gíî©eNextC_ID
();

524 
	gm_addr
.
Gíî©eNextAD_ID
();

525 
	gm_iRowsGíî©edF‹Cu°
 = 0;

527 
	gm_iRowsToGíF‹Cu°
 = 
GëNumbîOfAccou¡s
(
m_cu°
.
GëCuºítC_ID
(),

528 
m_cu°
.
GëC_TIER
(m_cu°.
GëCuºítC_ID
()));

530 
	gm_iSèπögCA_ID
 = 
GëSèπögCA_ID
(
m_cu°
.
GëCuºítC_ID
());

533 
	gm_row
.
	gm_ˇ
.
	gCA_ID
 = 
m_iSèπögCA_ID
 + 
m_iRowsGíî©edF‹Cu°
;

535 ++
	gm_iRowsGíî©edF‹Cu°
;

538 
	gm_bM‹eRec‹ds
 = 
m_cu°
.
M‹eRec‹ds
(Ë|| 
m_iRowsGíî©edF‹Cu°
 < 
m_iRowsToGíF‹Cu°
;

540  
	gm_row
.
	gm_ˇ
.
	gCA_ID
;

553 
GëNumPîmsF‹CA
(
TIdít
 
CA_ID
)

555 
RNGSEED
 
	gOldSìd
;

556 
UINT
 
	giThªshﬁd
;

557 
UINT
 
	giNumbîOfPîmissi⁄s
;

559 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

561 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
(

562 
RNGSìdBa£NumbîOfAccou¡Pîmissi⁄s
, (
RNGSEED
)
CA_ID
 ));

564 
	giThªshﬁd
 = 
m_∫d
.
RndGíî©eI¡egîPî˚¡age
();

566 i‡(
	giThªshﬁd
 <
iPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_0
)

568 
iNumbîOfPîmissi⁄s
 = 0;

572 i‡(
	giThªshﬁd
 <
iPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_0
 +

573 
iPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_1
)

575 
iNumbîOfPîmissi⁄s
 = 1;

579 
	giNumbîOfPîmissi⁄s
 = 2;

583 
	gm_∫d
.
SëSìd
–
OldSìd
 );

584 –
	giNumbîOfPîmissi⁄s
 );

600 
GëCIDsF‹Pîmissi⁄s
(
TIdít
 
CA_ID
, TIdíà
Ow√r_CID
, TIdíà*
CID_1
, TIdíà*
CID_2
)

602 
RNGSEED
 
	gOldSìd
;

604 i‡(
	gCID_1
 =
NULL
)

607 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

608 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
–
RNGSìdBa£CIDF‹Pîmissi⁄1
, (
RNGSEED
Ë
CA_ID
 ));

614 *
	gCID_1
 = 
m_∫d
.
RndI¡64R™geEx˛ude
(
iDeÁu…SèπFromCu°omî
,

615 
iDeÁu…SèπFromCu°omî
 + 
iAccou¡Pîmissi⁄IDR™ge
,

616 
Ow√r_CID
);

618 i‡(
	gCID_2
 !
NULL
)

625 
m_∫d
.
SëSìd
–m_∫d.
RndNthEÀmít
–
RNGSìdBa£CIDF‹Pîmissi⁄2
, (
RNGSEED
Ë
CA_ID
 ));

628 *
	gCID_2
 = 
m_∫d
.
RndI¡64R™geEx˛ude
(
iDeÁu…SèπFromCu°omî
,

629 
iDeÁu…SèπFromCu°omî
 + 
iAccou¡Pîmissi⁄IDR™ge
,

630 
Ow√r_CID
);

632 *
	gCID_2
 =*
CID_1
);

635 
	gm_∫d
.
SëSìd
–
OldSìd
 );

648 
eTaxSètus
 
GëAccou¡TaxSètus
(
TIdít
 
iCA_ID
)

650 
eTaxSètus
 
	geCATaxSètus
 = 
eN⁄e
;

655 
TIdít
 
	gödex
 = 
iCA_ID
 - 
m_iCacheOff£tTS
;

656 
boﬁ
 
	gbCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSizeTS
);

657 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

659 
	geCATaxSètus
 = 
m_CacheTS
[
ödex
];

662 i‡(
	geCATaxSètus
 =
eN⁄e
)

664 
RNGSEED
 
OldSìd
;

665 
UINT
 
	giThªshﬁd
;

667 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

669 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
–
RNGSìdBa£Accou¡TaxSètus
, (
RNGSEED
Ë
iCA_ID
 ));

671 
	giThªshﬁd
 = 
m_∫d
.
RndGíî©eI¡egîPî˚¡age
();

672 i‡(
	giThªshﬁd
 <
iPî˚¡Accou¡TaxSètusN⁄TaxabÀ
)

674 
eCATaxSètus
 = 
eN⁄TaxabÀ
;

678 i‡(
	giThªshﬁd
 <
iPî˚¡Accou¡TaxSètusN⁄TaxabÀ
 + 
iPî˚¡Accou¡TaxSètusTaxabÀAndWôhhﬁd
)

680 
eCATaxSètus
 = 
eTaxabÀAndWôhhﬁd
;

684 
	geCATaxSètus
 = 
eTaxabÀAndD⁄tWôhhﬁd
;

687 
	gm_∫d
.
SëSìd
–
OldSìd
 );

689 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

691 
	gm_CacheTS
[
ödex
] = 
eCATaxSètus
;

694  
	geCATaxSètus
;

710 
GëDivisi⁄AndCou¡ryCodesF‹CuºítAccou¡
(
UINT
 &
iDivCode
, UINT &
iCåyCode
)

712 
	gm_addr
.
GëDivisi⁄AndCou¡ryCodes
(
iDivCode
, 
iCåyCode
);

725 
TIdít
 
Gíî©eBrokîIdF‹Accou¡
(TIdíà
iCA_ID
)

729 
TIdít
 
	giCu°omîId
 = ((
iCA_ID
 - 1Ë/ 
iMaxAccou¡sPîCu°
Ë- 
iTIdítShi·
;

733 
TIdít
 
	giSèπFromBrokî
 = (
iCu°omîId
 / 
m_iLﬂdUnôSize
Ë* 
m_iBrokîsCou¡
 + 
iSèπögBrokîID
 + 
iTIdítShi·
;

737  
	gm_∫d
.
RndNthI¡64R™ge
(
RNGSìdBa£BrokîId
, (
RNGSEED
Ë
iCA_ID
 - (10 * 
iTIdítShi·
),

738 
iSèπFromBrokî
,

739 
iSèπFromBrokî
 + 
m_iBrokîsCou¡
 - 1);

753 
boﬁ
 
Gíî©eNextRec‹d
()

755 
Gíî©eCARow
();

756 
Gíî©eAPRows
();

759  (
M‹eRec‹ds
());

771 
PCUSTOMER_ACCOUNT_ROW
 
GëCARow
(Ë{ &
	gm_row
.
	gm_ˇ
;}

781 
PACCOUNT_PERMISSION_ROW
 
GëAPRow
(
UINT
 
i
)

783 i‡(
	gi
<
	gm_iPîmsF‹CA
)

784  &
	gm_row
.
	gm_≥rm
[
i
];

786  
	gNULL
;

798 
UINT
 
GëCAPîmsCou¡
(Ë{ 
	gm_iPîmsF‹CA
;}

809 
TIdít
 
GëCuºítC_ID
(Ë{ 
	gm_cu°
.GetCurrentC_ID();}

819 
eCu°omîTõr
 
GëCuºítC_TIER
(Ë{ 
	gm_cu°
.
GëC_TIER
(
m_cu°
.
GëCuºítC_ID
());}

	@include/workload/tpce/egen/CustomerSelection.h

47 #i‚de‡
CUSTOMER_SELECTION_H


48 
	#CUSTOMER_SELECTION_H


	)

50 
	~"R™dom.h
"

52 
«me•a˚
 
	gTPCE


58 
	eeCu°omîTõr


60 
	geCu°omîTõrO√
 = 1,

61 
	geCu°omîTõrTwo
,

62 
	geCu°omîTõrThªe


65 ˛as†
	cCCu°omîSñe˘i⁄


67 
CR™dom
* 
	gm_pRND
;

69 
TIdít
 
	gm_iSèπFromCu°omî
;

70 
TIdít
 
	gm_iCu°omîCou¡
;

75 
boﬁ
 
	gm_bP¨tôi⁄ByCID
;

76 
	gm_iP¨tôi⁄Pî˚¡
;

77 
TIdít
 
	gm_iMySèπFromCu°omî
;

78 
TIdít
 
	gm_iMyCu°omîCou¡
;

83 
TIdít
 
Pîmuã
(TIdíà
iLow
, TIdíà
iHigh
);

88 
TIdít
 
Invî£Pîmuã
(TIdíà
iLow
, TIdíà
iHigh
);

93 
ölöe
 
TIdít
 
CLow
(TIdíà
C_ID
Ë{  ((
	gC_ID
 - 1) % 1000); }

98 
ölöe
 
TIdít
 
CHigh
(TIdíà
C_ID
Ë{  ((
	gC_ID
 - 1) / 1000); }

100 
	gpublic
:

105 
CCu°omîSñe˘i⁄
();

110 
CCu°omîSñe˘i⁄
–
CR™dom
* 
pRND
,

111 
TIdít
 
iSèπFromCu°omî
,

112 
TIdít
 
iCu°omîCou¡
);

117 
CCu°omîSñe˘i⁄
–
CR™dom
* 
pRND
,

118 
TIdít
 
iSèπFromCu°omî
,

119 
TIdít
 
iCu°omîCou¡
,

120 
iP¨tôi⁄Pî˚¡
,

121 
TIdít
 
iMySèπFromCu°omî
,

122 
TIdít
 
iMyCu°omîCou¡
);

127 
SëP¨tôi⁄R™ge
(
TIdít
 
iSèπFromCu°omî
, TIdíà
iCu°omîCou¡
);

132 
UINT
 
GëInvî£CID
(
TIdít
 
C_ID
);

137 
eCu°omîTõr
 
GëTõr
(
TIdít
 
C_ID
);

142 
Gíî©eR™domCu°omî
(
TIdít
 &
C_ID
, 
eCu°omîTõr
 &
C_TIER
);

	@include/workload/tpce/egen/CustomerTable.h

40 #i‚de‡
CUSTOMER_TABLE_H


41 
	#CUSTOMER_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


47 c⁄° 
	giNumEMAIL_DOMAINs
 = 6;

49 
˛ass
 
	gCCu°omîTabÀ
 : 
public
 
TabÀTem∂©e
<
CUSTOMER_ROW
>

51 
¥iv©e
:

52 
TIdít
 
m_iRowsToGíî©e
;

53 
CPîs⁄
 
	gm_≥rs⁄
;

54 
TAªaCodeFûe
* 
	gm_Ph⁄es
;

55 
TIdít
 
	gm_iSèπFromCu°omî
;

56 
TIdít
 
	gm_iCu°omîCou¡
;

57 
TIdít
 
	gm_iCom∑nyCou¡
;

58 
	gm_iExch™geCou¡
;

59 
TSètusTy≥Fûe
* 
	gm_SètusTy≥Fûe
;

60 
CCu°omîSñe˘i⁄
 
	gm_Cu°omîSñe˘i⁄
;

62 
Gíî©eC_ST_ID
();

63 
Gíî©ePîs⁄Info
();

64 
Gíî©eC_DOB
();

65 
Gíî©eC_AD_ID
();

66 
Gíî©eC_CTRY_1
();

67 
Gíî©eC_LOCAL_1
();

68 
Gíî©eC_AREA_1
();

69 
Gíî©eC_EXT_1
();

70 
Gíî©eC_CTRY_2
();

71 
Gíî©eC_LOCAL_2
();

72 
Gíî©eC_AREA_2
();

73 
Gíî©eC_EXT_2
();

74 
Gíî©eC_CTRY_3
();

75 
Gíî©eC_LOCAL_3
();

76 
Gíî©eC_AREA_3
();

77 
Gíî©eC_EXT_3
();

78 
Gíî©eC_EMAIL_1_™d_C_EMAIL_2
();

83 
InôNextLﬂdUnô
();

85 
	gpublic
:

94 
CCu°omîTabÀ
(
CI≈utFûes
 
öputFûes
, 
TIdít
 
iCu°omîCou¡
, TIdíà
iSèπFromCu°omî
);

96 
TIdít
 
Gíî©eNextC_ID
();

97 
TIdít
 
GëCuºítC_ID
();

99 
GëC_TAX_ID
(
TIdít
 
C_ID
, *
szOuçut
);

100 
eCu°omîTõr
 
GëC_TIER
(
TIdít
 
C_ID
);

102 
boﬁ
 
Gíî©eNextRec‹d
();

	@include/workload/tpce/egen/CustomerTaxratesTable.h

40 #i‚de‡
CUSTOMER_TAXRATES_TABLE_H


41 
	#CUSTOMER_TAXRATES_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Cu°omîTabÀ.h
"

45 
	~"AddªssTabÀ.h
"

47 
«me•a˚
 
	gTPCE


50 c⁄° 
UINT
 
	giTaxR©esPîCu°
 = 2;

51 c⁄° 
	giMaxDivOrCåyName
 = 6;

55 c⁄° 
	giRNGSkùO√RowCu°omîTaxøã
 = 5;

57 
	sCUSTOMER_TAXRATE_ROWS


59 
CUSTOMER_TAXRATE_ROW
 
	gm_row
[
iTaxR©esPîCu°
];

60 } *
	tPCUSTOMER_TAXRATE_ROWS
;

62 
˛ass
 
	gCCu°omîTaxøãsTabÀ
 : 
public
 
TabÀTem∂©e
<
CUSTOMER_TAXRATE_ROWS
>

64 
CCu°omîTabÀ
 
m_cu°
;

65 
CAddªssTabÀ
 
	gm_addr
;

66 
	gCI≈utFûeNoWeight
<
	gTTaxR©eI≈utRow
> *
	gm_divisi⁄_øãs
;

67 
	gCI≈utFûeNoWeight
<
	gTTaxR©eI≈utRow
> *
	gm_cou¡ry_øãs
;

72 
InôNextLﬂdUnô
()

74 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

75 (
RNGSEED
Ë
m_cu°
.
GëCuºítC_ID
() *

76 
iRNGSkùO√RowCu°omîTaxøã
));

78 
CÀ¨Rec‹d
();

82 
TTaxR©eI≈utRow
 
GëTaxRow
(
TIdít
 
C_ID
, 
UINT
 
iCode
, 
boﬁ
 
bCåy
)

84 
RNGSEED
 
	gOldSìd
;

85 
UINT
 
	giThªshﬁd
;

86 c⁄° 
	gve˘‹
<
	gTTaxR©eI≈utRow
> *
	gpR©es
;

88 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

90 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
–
RNGSìdBa£TaxR©eRow
,

91 (
RNGSEED
)
C_ID
 ));

93 i‡(
	gbCåy
)

94 
	gpR©es
 = 
m_cou¡ry_øãs
->
GëRec‹d
(
iCode
-1);

96 
	gpR©es
 = 
m_divisi⁄_øãs
->
GëRec‹d
(
iCode
-1);

98 
	giThªshﬁd
 = (
UINT
Ë
m_∫d
.
RndI¡R™ge
(0, ()
pR©es
->
size
()-1);

100 
	gm_∫d
.
SëSìd
–
OldSìd
 );

102  (*
	gpR©es
)[
iThªshﬁd
];

105 
	gpublic
:

106 
CCu°omîTaxøãsTabÀ
(
CI≈utFûes
 
öputFûes
,

107 
TIdít
 
iCu°omîCou¡
,

108 
TIdít
 
iSèπFromCu°omî
,

109 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


111 : 
TabÀTem∂©e
<
CUSTOMER_TAXRATE_ROWS
>(),

112 
m_cu°
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
),

113 
m_addr
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
åue
, 
bCacheE«bÀd
),

114 
m_divisi⁄_øãs
(
öputFûes
.
TaxR©esDivisi⁄
),

115 
m_cou¡ry_øãs
(
öputFûes
.
TaxR©esCou¡ry
)

122 
boﬁ
 
Gíî©eNextRec‹d
()

124 
UINT
 
	giDivCode
, 
	giCåyCode
;

126 i‡(
	gm_cu°
.
GëCuºítC_ID
(Ë% 
	giDeÁu…LﬂdUnôSize
 == 0)

128 
InôNextLﬂdUnô
();

131 ++
	gm_iLa°RowNumbî
;

133 
	gm_cu°
.
Gíî©eNextC_ID
();

134 
	gm_addr
.
Gíî©eNextAD_ID
();

135 
	gm_addr
.
GëDivisi⁄AndCou¡ryCodes
(
iDivCode
, 
iCåyCode
);

137 
	gm_row
.m_row[0].
	gCX_C_ID
 = 
m_cu°
.
GëCuºítC_ID
();

139 
°∫˝y
(
m_row
.m_row[0].
CX_TX_ID
, 
GëCou¡ryTaxRow
(
m_cu°
.
GëCuºítC_ID
(), 
iCåyCode
).
TAX_ID
,

140 (
m_row
.m_row[0].
CX_TX_ID
));

143 
	gm_row
.m_row[1].
	gCX_C_ID
 = 
m_cu°
.
GëCuºítC_ID
();

145 
°∫˝y
(
m_row
.m_row[1].
CX_TX_ID
, 
GëDivisi⁄TaxRow
(
m_cu°
.
GëCuºítC_ID
(), 
iDivCode
).
TAX_ID
,

146 (
m_row
.m_row[0].
CX_TX_ID
));

148 
	gm_bM‹eRec‹ds
 = 
m_cu°
.
M‹eRec‹ds
();

150  (
M‹eRec‹ds
());

153 
PCUSTOMER_TAXRATE_ROW
 
GëRowByIndex
(
UINT
 
i
) {

154 i‡(
	gi
<
	giTaxR©esPîCu°
)

155  &
	gm_row
.m_row[
i
];

157  
	gNULL
;

160 
UINT
 
GëTaxR©esCou¡
(Ë{ 
	giTaxR©esPîCu°
;}

163 
TTaxR©eI≈utRow
 
GëCou¡ryTaxRow
(
TIdít
 
C_ID
, 
UINT
 
iCåyCode
)

165  
GëTaxRow
(
C_ID
, 
iCåyCode
, 
åue
);

169 
TTaxR©eI≈utRow
 
GëDivisi⁄TaxRow
(
TIdít
 
C_ID
, 
UINT
 
iDivCode
)

171  
GëTaxRow
(
C_ID
, 
iDivCode
, 
Ál£
);

	@include/workload/tpce/egen/DM.h

69 #i‚de‡
DM_H


70 
	#DM_H


	)

72 
	~"EGíLﬂdî_°dafx.h
"

73 
	~"EGíUtûôõs_°dafx.h
"

74 
	~"TxnH¨√ssSåu˘s.h
"

75 
	~"DMSUTI¡îÁ˚.h
"

76 
	~"Ba£Loggî.h
"

77 
	~"DrivîP¨amSëtögs.h
"

79 
«me•a˚
 
	gTPCE


82 ˛as†
	cCDM


84 
	g¥iv©e
:

85 
CDrivîGlobÆSëtögs
 
m_DrivîGlobÆSëtögs
;

86 
CDrivîDMSëtögs
 
	gm_DrivîDMSëtögs
;

88 
CR™dom
 
	gm_∫d
;

89 
CCu°omîSñe˘i⁄
 
	gm_Cu°omîSñe˘i⁄
;

90 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
 
	gm_AccsAndPîms
;

91 
CSecurôyFûe
* 
	gm_pSecurôõs
;

92 
CCom∑nyFûe
* 
	gm_pCom∑nõs
;

93 
TTaxR©esDivisi⁄Fûe
* 
	gm_pTaxR©esDivisi⁄
;

94 
TSètusTy≥Fûe
* 
	gm_pSètusTy≥
;

95 
TIdít
 
	gm_iSecurôyCou¡
;

96 
TIdít
 
	gm_iCom∑nyCou¡
;

97 
TIdít
 
	gm_iSèπFromCom∑ny
;

98 
INT32
 
	gm_iDivisi⁄TaxCou¡
;

99 
TIdít
 
	gm_iSèπFromCu°omî
;

101 
INT32
 
	gm_D©aMaöã«n˚TabÀNum
;

103 
TD©aMaöã«n˚TxnI≈ut
 
	gm_TxnI≈ut
;

104 
TTødeCÀ™upTxnI≈ut
 
	gm_CÀ™upTxnI≈ut
;

105 
CDMSUTI¡îÁ˚
* 
	gm_pSUT
;

106 
CBa£Loggî
* 
	gm_pLoggî
;

109 
AutoSëRNGSìds
–
UINT32
 
UniqueId
 );

111 
TIdít
 
Gíî©eR™domCu°omîId
();

113 
TIdít
 
Gíî©eR™domCu°omîAccou¡Id
();

115 
TIdít
 
Gíî©eR™domCom∑nyId
();

117 
TIdít
 
Gíî©eR™domSecurôyId
();

120 
Inôülize
();

122 
	gpublic
:

124 
CDM
–
CDMSUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, 
CI≈utFûes
 &
öputFûes
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
, 
UINT32
 
UniqueId
 );

127 
CDM
–
CDMSUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, 
CI≈utFûes
 &
öputFûes
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
, 
UINT32
 
UniqueId
, 
RNGSEED
 
RNGSìd
 );

129 ~
CDM
( );

131 
RNGSEED
 
GëRNGSìd
( );

132 
DoTxn
( );

133 
DoCÀ™upTxn
( );

134 
TD©aMaöã«n˚TxnI≈ut
* 
¸óãDMI≈ut
();

135 
TTødeCÀ™upTxnI≈ut
* 
¸óãTCI≈ut
();

	@include/workload/tpce/egen/DMSUTInterface.h

42 #i‚de‡
DM_SUT_INTERFACE_H


43 
	#DM_SUT_INTERFACE_H


	)

45 
	~"TxnH¨√ssSåu˘s.h
"

47 
«me•a˚
 
	gTPCE


50 ˛as†
	cCDMSUTI¡îÁ˚


52 
	gpublic
:

63 
vútuÆ
 ~
CDMSUTI¡îÁ˚
() {};

65 
vútuÆ
 
boﬁ
 
D©aMaöã«n˚
–
PD©aMaöã«n˚TxnI≈ut
 
pTxnI≈ut
 ) = 0;

66 
vútuÆ
 
boﬁ
 
TødeCÀ™up
–
PTødeCÀ™upTxnI≈ut
 
pTxnI≈ut
 ) = 0;

	@include/workload/tpce/egen/DailyMarketTable.h

40 #i‚de‡
DAILY_MARKET_TABLE_H


41 
	#DAILY_MARKET_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"SecurôyFûe.h
"

45 
	~"SecurôyPri˚R™ge.h
"

47 
«me•a˚
 
	gTPCE


50 c⁄° 
	giTødeDaysInYór
 = 261;

51 c⁄° 
	giDaûyM¨këYórs
 = 5;

52 c⁄° 
	giDaûyM¨këTŸÆRows
 = 
iDaûyM¨këYórs
 * 
iTødeDaysInYór
;

54 c⁄° 
	gfDaûyM¨këClo£Mö
 = 
fMöSecPri˚
;

55 c⁄° 
	gfDaûyM¨këClo£Max
 = 
fMaxSecPri˚
;

57 c⁄° 
	gfDaûyM¨këHighRñ©iveToClo£
 = 1.05;

58 c⁄° 
	gfDaûyM¨këLowRñ©iveToClo£
 = 0.92;

60 c⁄° 
INT64
 
	giDaûyM¨këVﬁumeMax
 = 10000;

61 c⁄° 
INT64
 
	giDaûyM¨këVﬁumeMö
 = 1000;

63 c⁄° 
	giRNGSkùO√RowDaûyM¨kë
 = 2;

65 
	sDAILY_MARKET_GEN_ROW


68 
DAILY_MARKET_ROW
 
	gm_daûy_m¨kë
[
iDaûyM¨këTŸÆRows
];

69 } *
	tPDAILY_MARKET_GEN_ROW
;

71 
˛ass
 
	gCDaûyM¨këTabÀ
 : 
public
 
TabÀTem∂©e
<
DAILY_MARKET_GEN_ROW
>

73 
TIdít
 
m_iSèπFromSecurôy
;

74 
TIdít
 
	gm_iSecurôyCou¡
;

75 
CSecurôyFûe
* 
	gm_SecurôyFûe
;

76 
CD©eTime
 
	gm_SèπFromD©e
;

77 
	gm_iDaûyM¨këTŸÆRows
;

80 
	gm_iRowsGíî©edPîSecurôy
;

83 
boﬁ
 
	gm_bM‹eSecurôõs
;

84 
TIdít
 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
;

89 
Gíî©eDaûyM¨këRows
()

91 
	gi
;

92 
	giDayNo
 = 0;

93 
	gszSymbﬁ
[
cSYMBOL_Àn
 + 1];

97 
	gm_SecurôyFûe
->
Cª©eSymbﬁ
(
m_iLa°RowNumbî
, 
szSymbﬁ
, 
°©ic_ˇ°
<>((szSymbol)));

99 
	gi
 = 0; i < 
	gm_iDaûyM¨këTŸÆRows
; ++i)

102 
°∫˝y
(
m_row
.
m_daûy_m¨kë
[
i
].
DM_S_SYMB
, 
szSymbﬁ
, (m_row.m_daily_market[i].DM_S_SYMB));

105 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_DATE
 = 
m_SèπFromD©e
;

106 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_DATE
.
Add
(
iDayNo
, 0);

109 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_CLOSE
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(
fDaûyM¨këClo£Mö
, 
fDaûyM¨këClo£Max
, 0.01);

110 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_HIGH
 = 
m_row
.
m_daûy_m¨kë
[i].
DM_CLOSE
 * 
fDaûyM¨këHighRñ©iveToClo£
;

111 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_LOW
 = 
m_row
.
m_daûy_m¨kë
[i].
DM_CLOSE
 * 
fDaûyM¨këLowRñ©iveToClo£
;

114 
	gm_row
.
	gm_daûy_m¨kë
[
i
].
	gDM_VOL
 = 
m_∫d
.
RndI¡64R™ge
(
iDaûyM¨këVﬁumeMö
, 
iDaûyM¨këVﬁumeMax
);

116 ++
	giDayNo
;

118 i‡((
	giDayNo
 % 
	gDaysPîWìk
Ë=
DaysPîW‹kWìk
Ë
iDayNo
 += 2;

131 
InôNextLﬂdUnô
()

133 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

134 (
RNGSEED
)
m_iLa°RowNumbî
 * 
iRNGSkùO√RowDaûyM¨kë
));

136 
CÀ¨Rec‹d
();

139 
	gpublic
:

143 
CDaûyM¨këTabÀ
–
CI≈utFûes
 
öputFûes
,

144 
TIdít
 
iCu°omîCou¡
,

145 
TIdít
 
iSèπFromCu°omî
)

146 : 
TabÀTem∂©e
<
DAILY_MARKET_GEN_ROW
>()

147 , 
m_SecurôyFûe
(
öputFûes
.
Securôõs
)

148 , 
m_iDaûyM¨këTŸÆRows
((
m_row
.
m_daûy_m¨kë
)/(m_row.m_daily_market[0]))

149 , 
m_iRowsGíî©edPîSecurôy
((
m_row
.
m_daûy_m¨kë
)/(m_row.m_daily_market[0]))

150 , 
m_bM‹eSecurôõs
(
åue
)

154 
	gm_SèπFromD©e
.
Së
(
iDaûyM¨këBa£Yór
, 
iDaûyM¨këBa£M⁄th
,

155 
iDaûyM¨këBa£Day
, 
iDaûyM¨këBa£Hour
,

156 
iDaûyM¨këBa£Möuã
, 
iDaûyM¨këBa£Sec⁄d
, 
iDaûyM¨këBa£M£c
);

158 
	gm_bM‹eRec‹ds
 = 
åue
;

160 
	gm_iSecurôyCou¡
 = 
m_SecurôyFûe
->
CÆcuœãSecurôyCou¡
(
iCu°omîCou¡
);

161 
	gm_iSèπFromSecurôy
 = 
m_SecurôyFûe
->
CÆcuœãSèπFromSecurôy
(
iSèπFromCu°omî
);

163 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
 = 
öputFûes
.
Securôõs
->
CÆcuœãSecurôyCou¡
(
iDeÁu…LﬂdUnôSize
);

165 
	gm_iLa°RowNumbî
 = 
m_iSèπFromSecurôy
;

168 
boﬁ
 
Gíî©eNextRec‹d
()

170 ++
	gm_iRowsGíî©edPîSecurôy
;

172 i‡(
	gm_iRowsGíî©edPîSecurôy
 >
m_iDaûyM¨këTŸÆRows
)

174 i‡(
m_bM‹eSecurôõs
)

178 i‡(
m_iLa°RowNumbî
 % 
m_iSecurôyCou¡F‹O√LﬂdUnô
 == 0)

180 
InôNextLﬂdUnô
();

183 
Gíî©eDaûyM¨këRows
();

185 ++
	gm_iLa°RowNumbî
;

188 
	gm_bM‹eSecurôõs
 = 
m_iLa°RowNumbî
 < (
m_iSèπFromSecurôy
 + 
m_iSecurôyCou¡
);

190 
	gm_iRowsGíî©edPîSecurôy
 = 0;

195 i‡(!
	gm_bM‹eSecurôõs
 && (
	gm_iRowsGíî©edPîSecurôy
 =
m_iDaûyM¨këTŸÆRows
 - 1))

197 
m_bM‹eRec‹ds
 = 
Ál£
;

200  (
M‹eRec‹ds
());

203 
PDAILY_MARKET_ROW
 
GëRow
()

205  &
	gm_row
.
	gm_daûy_m¨kë
[
m_iRowsGíî©edPîSecurôy
];

	@include/workload/tpce/egen/DateTime.h

37 #i‚de‡
DATE_TIME_H


38 
	#DATE_TIME_H


	)

40 #ifde‡
COMPILE_ODBC_LOAD


42 
	~<sql.h
>

43 
	~<sqÀxt.h
>

44 
	~<odbcss.h
>

47 
	~"EGíSènd¨dTy≥s.h
"

49 
«me•a˚
 
	gTPCE


55 
	sègTIMESTAMP_STRUCT


57 
INT16
 
	gyór
;

58 
UINT16
 
	gm⁄th
;

59 
UINT16
 
	gday
;

60 
UINT16
 
	ghour
;

61 
UINT16
 
	gmöuã
;

62 
UINT16
 
	g£c⁄d
;

63 
UINT32
 
	g‰a˘i⁄
;

64 } 
	tTIMESTAMP_STRUCT
;

67 c⁄° 
	gNsPîSec⁄dDivis‹
 = 1000000000.0;

68 c⁄° 
INT32
 
	gNsPîSec⁄d
 = 1000000000;

69 c⁄° 
	gMsPîSec⁄dDivis‹
 = 1000.000;

70 c⁄° 
INT32
 
	gMsPîSec⁄d
 = 1000;

71 c⁄° 
INT32
 
	gSec⁄dsPîMöuã
 = 60;

72 c⁄° 
INT32
 
	gMöuãsPîHour
 = 60;

73 c⁄° 
INT32
 
	gHoursPîDay
 = 24;

74 c⁄° 
INT32
 
	gHoursPîW‹kDay
 = 8;

75 c⁄° 
INT32
 
	gDaysPîW‹kWìk
 = 5;

76 c⁄° 
INT32
 
	gDaysPîWìk
 = 7;

78 c⁄° 
INT32
 
	gSec⁄dsPîHour
 = 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
;

79 c⁄° 
INT32
 
	gSec⁄dsPîDay
 = 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
 * 
HoursPîDay
;

80 c⁄° 
INT32
 
	gSec⁄dsPîW‹kDay
 = 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
 * 
HoursPîW‹kDay
;

81 c⁄° 
INT32
 
	gMsPîDay
 = 
Sec⁄dsPîDay
 * 
MsPîSec⁄d
;

82 c⁄° 
INT32
 
	gMsPîW‹kDay
 = 
Sec⁄dsPîW‹kDay
 * 
MsPîSec⁄d
;

84 
	#RoundToNóª°N£c
(
d_Sec⁄ds
Ë(–(
INT64
)––(d_Sec⁄dsË* 
NsPîSec⁄d
Ë+ 0.5)Ë/ 
NsPîSec⁄dDivis‹
)

	)

86 ˛as†
	cCD©eTime


88 
	g¥iv©e
:

89 
INT32
 
m_dayno
;

90 
INT32
 
	gm_m£c
;

91 * 
	gm_szText
;

93 
‰õnd
 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gCD©eTime
& 
	gl_dt
, c⁄° CD©eTime& 
	gr_dt
);

95 
	gpublic
:

96 
CD©eTime
();

97 
CD©eTime
(
INT32
 
dayno
);

98 
CD©eTime
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
);

99 
CD©eTime
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
);

101 
CD©eTime
(
TIMESTAMP_STRUCT
 *
ts
);

103 
CD©eTime
(c⁄° CD©eTime& 
dt
);

104 ~
CD©eTime
();

106 
SëToCuºít
();

107 
Së
(
INT32
 
dayno
);

108 
Së
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
);

109 
Së
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
);

110 
SëHMS
(
INT32
 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
);

112 
ölöe
 
UINT32
 
DayNo
(Ë{  (
	gUINT32
)
	gm_dayno
; };

113 
ölöe
 
UINT32
 
MSec
(Ë{  (
	gUINT32
)
	gm_m£c
; };

114 
GëYMD
(
INT32
* 
yór
, INT32* 
m⁄th
, INT32* 
day
);

115 
GëYMDHMS
(
INT32
* 
yór
, INT32* 
m⁄th
, INT32* 
day
, INT32* 
hour
, INT32* 
möuã
, INT32* 
£c⁄d
, INT32* 
m£c
);

116 
GëHMS
(
INT32
* 
hour
, INT32* 
möuã
, INT32* 
£c⁄d
, INT32* 
m£c
);

118 
GëTimeSèmp
(
TIMESTAMP_STRUCT
* 
ts
);

120 #ifde‡
COMPILE_ODBC_LOAD


121 
GëDBDATETIME
(
DBDATETIME
* 
dt
);

124 
INT32
 
YMDtoDayno
–INT32 
yr
, INT32 
mm
, INT32 
dd
 );

125 * 
ToSå
–
INT32
 
°yÀ
 );

127 
Add
(
INT32
 
days
, INT32 
m£c
, 
boﬁ
 
adju°_wìkíd
 = 
Ál£
);

128 
AddMöuãs
(
INT32
 
Möuãs
);

129 
AddW‹kMs
(
INT64
 
W‹kMs
);

131 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gCD©eTime
&);

132 
boﬁ
 
	g›î©‹
 <=(c⁄° 
CD©eTime
&);

134 
boﬁ
 
	g›î©‹
 >=(c⁄° 
CD©eTime
&);

135 
boﬁ
 
	g›î©‹
 ==(c⁄° 
CD©eTime
&);

139 
	g›î©‹
 -(c⁄° 
	gCD©eTime
& 
	gdt
);

140 
INT32
 
DiffInMûliSec⁄ds
–c⁄° 
CD©eTime
& 
Ba£Time
 );

141 
INT32
 
DiffInMûliSec⁄ds
–
CD©eTime
* 
pBa£Time
 );

143 
	gCD©eTime
& 
	g›î©‹
 +(c⁄° 
CD©eTime
& 
dt
);

145 
	gCD©eTime
& 
	g›î©‹
 = (c⁄° 
CD©eTime
& 
dt
);

147 
boﬁ
 
IsVÆid
–
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
 );

	@include/workload/tpce/egen/DriverParamSettings.h

44 #i‚de‡
DRIVER_PARAM_SETTINGS_H


45 
	#DRIVER_PARAM_SETTINGS_H


	)

47 
	~<io°ªam
>

48 
	~<iom™ù
>

49 
	~<s°ªam
>

51 
	~"EGíUtûôõs_°dafx.h
"

53 
«me•a˚
 
	gTPCE


59 
	#DRIVERPARAM_CHECK_EQUAL
(
«me
, 
lhs
, 
rhs
) \

60 i‡((
lhs
Ë!(
rhs
)) { \

61 
°d
::
o°rög°ªam
 
°rm
; \

62 
°rm
 << #lh†<< "(" << (
lhs
Ë<< "Ë!" << #rh†<< "(" << (
rhs
) << ")"; \

63 
throw
 
	`CCheckEº
(
«me
, 
°rm
.
	`°r
()); \

64 }

	)

66 
	#DRIVERPARAM_CHECK_GE
(
«me
, 
lhs
, 
rhs
) \

67 i‡((
lhs
Ë< (
rhs
)) { \

68 
°d
::
o°rög°ªam
 
°rm
; \

69 
°rm
 << #lh†<< "(" << (
lhs
Ë<< "Ë< " << #rh†<< "(" << (
rhs
) << ")"; \

70 
throw
 
	`CCheckEº
(
«me
, 
°rm
.
	`°r
()); \

71 }

	)

73 
	#DRIVERPARAM_CHECK_LE
(
«me
, 
lhs
, 
rhs
 ) \

74 i‡((
lhs
Ë> (
rhs
)) { \

75 
°d
::
o°rög°ªam
 
°rm
; \

76 
°rm
 << #lh†<< "(" << (
lhs
Ë<< "Ë> " << #rh†<< "(" << (
rhs
) << ")"; \

77 
throw
 
	`CCheckEº
(
«me
, 
°rm
.
	`°r
()); \

78 }

	)

80 
	#DRIVERPARAM_CHECK_BETWEEN
(
«me
, 
lhs
, 
mövÆ
, 
maxvÆ
 ) \

81 
	`DRIVERPARAM_CHECK_GE
(
«me
, 
lhs
, 
mövÆ
 ) \

82 
	`DRIVERPARAM_CHECK_LE
(
«me
, 
lhs
, 
maxvÆ
 )

	)

84 
	#DRIVERPARAM_CHECK_DEFAULT
(
«me
) \

85 i‡(
cur
.
«me
 !
d·
.name) { \

86 
°d
::
o°rög°ªam
 
°rm
; \

87 
°rm
 << #«mê<< "(" << 
cur
.
«me
 << "Ë!" << 
d·
.name; \

88 
throw
 
	`CCheckEº
(#«me, 
°rm
.
	`°r
()); \

89 }

	)

95 
	gãm∂©e
 < 
ty≥«me
 
	gT
 > cœs†
	cCP¨amëîsWôhoutDeÁu…s


97 
	gpublic
:

98 
T
 
cur
;

100 
CP¨amëîsWôhoutDeÁu…s
() {}

111 
	gvútuÆ
 ~
CP¨amëîsWôhoutDeÁu…s
() {};

113 
vútuÆ
 
CheckVÆid
() = 0;

114 
vútuÆ
 
CheckCom∂ü¡
() = 0;

115 
boﬁ
 
IsVÆid
() {

116 
	gåy
 {

117 
CheckVÆid
();

118  
	gåue
;

119 } 
ˇtch
(...) {

120  
	gÁl£
;

124 
boﬁ
 
IsCom∂ü¡
() {

126 
	gåy
 {

127 
CheckCom∂ü¡
();

128  
	gåue
;

129 } 
ˇtch
(...) {

130  
	gÁl£
;

136 
	gãm∂©e
 < 
ty≥«me
 
	gT
,Åy≥«mê
	gT2
 > cœs†
	cCP¨amëîsWôhDeÁu…s


139 
	gpublic
:

140 
T
 
d·
;

141 
T2
 
	g°©e
;

143 
	gpublic
:

144 
T
 
cur
;

146 
CP¨amëîsWôhDeÁu…s
() {}

157 
	gvútuÆ
 ~
CP¨amëîsWôhDeÁu…s
() {};

159 
Inôülize
()

161 
InôülizeDeÁu…s
();

162 
SëToDeÁu…s
();

165 
SëToDeÁu…s
()

167 
	gcur
 = 
d·
;

168 
CheckDeÁu…s
();

171 
vútuÆ
 
InôülizeDeÁu…s
() {}

172 
vútuÆ
 
CheckDeÁu…s
() {}

173 
vútuÆ
 
CheckVÆid
() = 0;

174 
vútuÆ
 
CheckCom∂ü¡
() = 0;

175 
boﬁ
 
IsVÆid
() {

176 
	gåy
 {

177 
CheckVÆid
();

178  
	gåue
;

179 } 
ˇtch
(...) {

180  
	gÁl£
;

184 
boﬁ
 
IsCom∂ü¡
() {

185 
	gåy
 {

186 
CheckCom∂ü¡
();

187  
	gåue
;

188 } 
ˇtch
(...) {

189  
	gÁl£
;

197 
	sTBrokîVﬁumeSëtögs


199 } *
	gPBrokîVﬁumeSëtögs
;

201 
	sTCu°omîPosôi⁄Sëtögs


203 
INT32
 
	gby_cu°_id
;

204 
INT32
 
	gby_èx_id
;

205 
INT32
 
	ggë_hi°‹y
;

206 } *
	tPCu°omîPosôi⁄Sëtögs
;

208 
	sTM¨këW©chSëtögs


210 
INT32
 
	gby_ac˘_id
;

211 
INT32
 
	gby_ödu°ry
;

212 
INT32
 
	gby_w©ch_li°
;

213 } *
	tPM¨këW©chSëtögs
;

215 
	sTSecurôyDëaûSëtögs


217 
INT32
 
	gLOBAc˚ssPî˚¡age
;

218 } *
	tPSecurôyDëaûSëtögs
;

220 
	sTTødeLookupSëtögs


222 
INT32
 
	gdo_‰ame1
;

223 
INT32
 
	gdo_‰ame2
;

224 
INT32
 
	gdo_‰ame3
;

225 
INT32
 
	gdo_‰ame4
;

227 
INT32
 
	gMaxRowsFøme1
;

229 
INT32
 
	gBackOffFromEndTimeFøme2
;

230 
INT32
 
	gMaxRowsFøme2
;

232 
INT32
 
	gBackOffFromEndTimeFøme3
;

233 
INT32
 
	gMaxRowsFøme3
;

235 
INT32
 
	gBackOffFromEndTimeFøme4
;

236 
INT32
 
	gMaxRowsFøme4
;

237 } *
	tPTødeLookupSëtögs
;

239 
	sTTødeOrdîSëtögs


241 
INT32
 
	gm¨kë
;

242 
INT32
 
	glimô
;

243 
INT32
 
	g°›_loss
;

244 
INT32
 
	g£curôy_by_«me
;

245 
INT32
 
	g£curôy_by_symbﬁ
;

246 
INT32
 
	gbuy_‹dîs
;

247 
INT32
 
	g£Œ_‹dîs
;

248 
INT32
 
	glifo
;

249 
INT32
 
	gexec_is_ow√r
;

250 
INT32
 
	grﬁlback
;

251 
INT32
 
	gty≥_is_m¨gö
;

252 } *
	tPTødeOrdîSëtögs
;

254 
	sTTødeUpd©eSëtögs


256 
INT32
 
	gdo_‰ame1
;

257 
INT32
 
	gdo_‰ame2
;

258 
INT32
 
	gdo_‰ame3
;

260 
INT32
 
	gMaxRowsFøme1
;

261 
INT32
 
	gMaxRowsToUpd©eFøme1
;

263 
INT32
 
	gBackOffFromEndTimeFøme2
;

264 
INT32
 
	gMaxRowsFøme2
;

265 
INT32
 
	gMaxRowsToUpd©eFøme2
;

267 
INT32
 
	gBackOffFromEndTimeFøme3
;

268 
INT32
 
	gMaxRowsFøme3
;

269 
INT32
 
	gMaxRowsToUpd©eFøme3
;

270 } *
	tPTødeUpd©eSëtögs
;

272 
	sTTxnMixGíî©‹Sëtögs


278 
INT32
 
	gBrokîVﬁumeMixLevñ
;

279 
INT32
 
	gCu°omîPosôi⁄MixLevñ
;

280 
INT32
 
	gM¨këFìdMixLevñ
;

281 
INT32
 
	gM¨këW©chMixLevñ
;

282 
INT32
 
	gSecurôyDëaûMixLevñ
;

283 
INT32
 
	gTødeLookupMixLevñ
;

284 
INT32
 
	gTødeOrdîMixLevñ
;

285 
INT32
 
	gTødeResu…MixLevñ
;

286 
INT32
 
	gTødeSètusMixLevñ
;

287 
INT32
 
	gTødeUpd©eMixLevñ
;

290 
INT32
 
	gTønß˘i⁄MixTŸÆ
;

291 } *
	tPTxnMixGíî©‹Sëtögs
;

293 
	sTLﬂdîSëtögs


295 
TIdít
 
	giC⁄figuªdCu°omîCou¡
;

296 
TIdít
 
	giA˘iveCu°omîCou¡
;

297 
INT32
 
	giSˇÀFa˘‹
;

298 
INT32
 
	giDaysOfInôülTødes
;

299 
TIdít
 
	giSèπögCu°omî
;

300 
TIdít
 
	giCu°omîCou¡
;

301 } *
	tpLﬂdîSëtögs
;

303 
	sTDrivîGlobÆSëtögs


305 
TIdít
 
	giC⁄figuªdCu°omîCou¡
;

306 
TIdít
 
	giA˘iveCu°omîCou¡
;

307 
INT32
 
	giSˇÀFa˘‹
;

308 
INT32
 
	giDaysOfInôülTødes
;

309 } *
	tPDrivîGlobÆSëtögs
;

311 
	sTDrivîCESëtögs


313 
UINT32
 
	gUniqueId
;

314 
RNGSEED
 
	gTxnMixRNGSìd
;

315 
RNGSEED
 
	gTxnI≈utRNGSìd
;

316 } *
	tPDrivîCESëtögs
;

318 
	sTDrivîCEP¨tôi⁄Sëtögs


320 
TIdít
 
	giMySèπögCu°omîId
;

321 
TIdít
 
	giMyCu°omîCou¡
;

322 
INT32
 
	giP¨tôi⁄Pî˚¡
;

323 } *
	tPDrivîCEP¨tôi⁄Sëtögs
;

325 
	sTDrivîMEESëtögs


327 
UINT32
 
	gUniqueId
;

328 
RNGSEED
 
	gRNGSìd
;

329 
RNGSEED
 
	gTickîT≠eRNGSìd
;

330 
RNGSEED
 
	gTødögFlo‹RNGSìd
;

331 } *
	tPDrivîMEESëtögs
;

333 
	sTDrivîDMSëtögs


335 
UINT32
 
	gUniqueId
;

336 
RNGSEED
 
	gRNGSìd
;

337 } *
	tPDrivîDMSëtögs
;

342 
	sTBrokîVﬁumeSëtögsSèã


346 
	sTCu°omîPosôi⁄SëtögsSèã


348 
boﬁ
 
	gby_cu°_id
;

349 
boﬁ
 
	gby_èx_id
;

350 
boﬁ
 
	ggë_hi°‹y
;

353 
	sTM¨këW©chSëtögsSèã


355 
boﬁ
 
	gby_ac˘_id
;

356 
boﬁ
 
	gby_ödu°ry
;

357 
boﬁ
 
	gby_w©ch_li°
;

360 
	sTSecurôyDëaûSëtögsSèã


362 
boﬁ
 
	gLOBAc˚ssPî˚¡age
;

365 
	sTTødeLookupSëtögsSèã


367 
boﬁ
 
	gdo_‰ame1
;

368 
boﬁ
 
	gdo_‰ame2
;

369 
boﬁ
 
	gdo_‰ame3
;

370 
boﬁ
 
	gdo_‰ame4
;

372 
boﬁ
 
	gMaxRowsFøme1
;

374 
boﬁ
 
	gBackOffFromEndTimeFøme2
;

375 
boﬁ
 
	gMaxRowsFøme2
;

377 
boﬁ
 
	gBackOffFromEndTimeFøme3
;

378 
boﬁ
 
	gMaxRowsFøme3
;

380 
boﬁ
 
	gBackOffFromEndTimeFøme4
;

381 
boﬁ
 
	gMaxRowsFøme4
;

384 
	sTTødeOrdîSëtögsSèã


386 
boﬁ
 
	gm¨kë
;

387 
boﬁ
 
	glimô
;

388 
boﬁ
 
	g°›_loss
;

389 
boﬁ
 
	g£curôy_by_«me
;

390 
boﬁ
 
	g£curôy_by_symbﬁ
;

391 
boﬁ
 
	gbuy_‹dîs
;

392 
boﬁ
 
	g£Œ_‹dîs
;

393 
boﬁ
 
	glifo
;

394 
boﬁ
 
	gexec_is_ow√r
;

395 
boﬁ
 
	grﬁlback
;

396 
boﬁ
 
	gty≥_is_m¨gö
;

399 
	sTTødeUpd©eSëtögsSèã


401 
boﬁ
 
	gdo_‰ame1
;

402 
boﬁ
 
	gdo_‰ame2
;

403 
boﬁ
 
	gdo_‰ame3
;

405 
boﬁ
 
	gMaxRowsFøme1
;

406 
boﬁ
 
	gMaxRowsToUpd©eFøme1
;

408 
boﬁ
 
	gBackOffFromEndTimeFøme2
;

409 
boﬁ
 
	gMaxRowsFøme2
;

410 
boﬁ
 
	gMaxRowsToUpd©eFøme2
;

412 
boﬁ
 
	gBackOffFromEndTimeFøme3
;

413 
boﬁ
 
	gMaxRowsFøme3
;

414 
boﬁ
 
	gMaxRowsToUpd©eFøme3
;

417 
	sTTxnMixGíî©‹SëtögsSèã


419 
boﬁ
 
	gBrokîVﬁumeMixLevñ
;

420 
boﬁ
 
	gCu°omîPosôi⁄MixLevñ
;

421 
boﬁ
 
	gM¨këW©chMixLevñ
;

422 
boﬁ
 
	gSecurôyDëaûMixLevñ
;

423 
boﬁ
 
	gTødeLookupMixLevñ
;

424 
boﬁ
 
	gTødeOrdîMixLevñ
;

425 
boﬁ
 
	gTødeSètusMixLevñ
;

426 
boﬁ
 
	gTødeUpd©eMixLevñ
;

427 
boﬁ
 
	gTønß˘i⁄MixTŸÆ
;

430 
	sTLﬂdîSëtögsSèã


432 
boﬁ
 
	giC⁄figuªdCu°omîCou¡
;

433 
boﬁ
 
	giA˘iveCu°omîCou¡
;

434 
boﬁ
 
	giSˇÀFa˘‹
;

435 
boﬁ
 
	giDaysOfInôülTødes
;

436 
boﬁ
 
	giSèπögCu°omî
;

437 
boﬁ
 
	giCu°omîCou¡
;

440 
	sTDrivîCEP¨tôi⁄SëtögsSèã


442 
boﬁ
 
	giP¨tôi⁄Pî˚¡
;

445 
	sTDrivîGlobÆSëtögsSèã


447 
boﬁ
 
	giC⁄figuªdCu°omîCou¡
;

448 
boﬁ
 
	giA˘iveCu°omîCou¡
;

449 
boﬁ
 
	giSˇÀFa˘‹
;

450 
boﬁ
 
	giDaysOfInôülTødes
;

456 
˛ass
 
	gCBrokîVﬁumeSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TBrokîVﬁumeSëtögs
, 
	gTBrokîVﬁumeSëtögsSèã
 >

458 
	gpublic
:

460 
CBrokîVﬁumeSëtögs
()

462 
Inôülize
();

465 
InôülizeDeÁu…s
()

469 
CheckDeÁu…s
()

473 
CheckVÆid
()

477 
CheckCom∂ü¡
()

482 
˛ass
 
	gCCu°omîPosôi⁄Sëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TCu°omîPosôi⁄Sëtögs
, 
	gTCu°omîPosôi⁄SëtögsSèã
 >

484 
	gpublic
:

485 
CCu°omîPosôi⁄Sëtögs
()

487 
Inôülize
();

490 
InôülizeDeÁu…s
()

492 
	gd·
.
	gby_cu°_id
 = 50;

493 
	gd·
.
	gby_èx_id
 = 50;

494 
	gd·
.
	ggë_hi°‹y
 = 50;

497 
CheckDeÁu…s
()

499 
	g°©e
.
	gby_cu°_id
 = (
cur
.
by_cu°_id
 =
d·
.by_cust_id);

500 
	g°©e
.
	gby_èx_id
 = (
cur
.
by_èx_id
 =
d·
.by_tax_id);

501 
	g°©e
.
	ggë_hi°‹y
 = (
cur
.
gë_hi°‹y
 =
d·
.get_history);

504 
CheckVÆid
() {

505 
DRIVERPARAM_CHECK_BETWEEN
–"by_cu°_id", 
cur
.
by_cu°_id
, 0, 100);

506 
DRIVERPARAM_CHECK_BETWEEN
–"by_èx_id", 
cur
.
by_èx_id
, 0, 100);

507 
DRIVERPARAM_CHECK_EQUAL
–"by_*_idÅŸÆ", 
cur
.
by_cu°_id
 + cur.
by_èx_id
, 100);

508 
DRIVERPARAM_CHECK_BETWEEN
–"gë_hi°‹y", 
cur
.
gë_hi°‹y
, 0, 100);

511 
CheckCom∂ü¡
() {

512 
CheckVÆid
();

513 
DRIVERPARAM_CHECK_DEFAULT
–
by_cu°_id
 );

514 
DRIVERPARAM_CHECK_DEFAULT
–
by_èx_id
 );

515 
DRIVERPARAM_CHECK_DEFAULT
–
gë_hi°‹y
 );

519 
˛ass
 
	gCM¨këW©chSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TM¨këW©chSëtögs
, 
	gTM¨këW©chSëtögsSèã
 >

521 
	gpublic
:

522 
CM¨këW©chSëtögs
()

524 
Inôülize
();

527 
InôülizeDeÁu…s
()

529 
	gd·
.
	gby_ac˘_id
 = 35;

530 
	gd·
.
	gby_ödu°ry
 = 5;

531 
	gd·
.
	gby_w©ch_li°
 = 60;

534 
CheckDeÁu…s
()

536 
	g°©e
.
	gby_ac˘_id
 = (
cur
.
by_ac˘_id
 =
d·
.by_acct_id);

537 
	g°©e
.
	gby_ödu°ry
 = (
cur
.
by_ödu°ry
 =
d·
.by_industry);

538 
	g°©e
.
	gby_w©ch_li°
 = (
cur
.
by_w©ch_li°
 =
d·
.by_watch_list);

541 
CheckVÆid
() {

542 
DRIVERPARAM_CHECK_BETWEEN
–"by_ac˘_id", 
cur
.
by_ac˘_id
, 0, 100);

543 
DRIVERPARAM_CHECK_BETWEEN
–"by_ödu°ry", 
cur
.
by_ödu°ry
, 0, 100);

544 
DRIVERPARAM_CHECK_BETWEEN
–"by_w©ch_li°", 
cur
.
by_w©ch_li°
, 0, 100);

545 
DRIVERPARAM_CHECK_EQUAL
–"by_*ÅŸÆ", 
cur
.
by_ac˘_id
 + cur.
by_ödu°ry
 + cur.
by_w©ch_li°
, 100);

548 
CheckCom∂ü¡
() {

549 
CheckVÆid
();

550 
DRIVERPARAM_CHECK_DEFAULT
–
by_ac˘_id
 );

551 
DRIVERPARAM_CHECK_DEFAULT
–
by_ödu°ry
 );

552 
DRIVERPARAM_CHECK_DEFAULT
–
by_w©ch_li°
 );

556 
˛ass
 
	gCSecurôyDëaûSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TSecurôyDëaûSëtögs
, 
	gTSecurôyDëaûSëtögsSèã
 >

558 
	gpublic
:

559 
CSecurôyDëaûSëtögs
()

561 
Inôülize
();

564 
InôülizeDeÁu…s
()

566 
	gd·
.
	gLOBAc˚ssPî˚¡age
 = 1;

569 
CheckDeÁu…s
()

571 
	g°©e
.
	gLOBAc˚ssPî˚¡age
 = (
cur
.
LOBAc˚ssPî˚¡age
 =
d·
.LOBAccessPercentage);

574 
CheckVÆid
() {

575 
DRIVERPARAM_CHECK_BETWEEN
–"LOBAc˚ssPî˚¡age", 
cur
.
LOBAc˚ssPî˚¡age
, 0, 100);

578 
CheckCom∂ü¡
() {

579 
CheckVÆid
();

580 
DRIVERPARAM_CHECK_DEFAULT
–
LOBAc˚ssPî˚¡age
 );

584 
˛ass
 
	gCTødeLookupSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TTødeLookupSëtögs
, 
	gTTødeLookupSëtögsSèã
 >

586 
	gpublic
:

587 
CTødeLookupSëtögs
()

589 
Inôülize
();

592 
InôülizeDeÁu…s
()

594 
	gd·
.
	gdo_‰ame1
 = 30;

595 
	gd·
.
	gdo_‰ame2
 = 30;

596 
	gd·
.
	gdo_‰ame3
 = 30;

597 
	gd·
.
	gdo_‰ame4
 = 10;

598 
	gd·
.
	gMaxRowsFøme1
 = 20;

599 
	gd·
.
	gBackOffFromEndTimeFøme2
 = 4 * 8 * 3600;

600 
	gd·
.
	gMaxRowsFøme2
 = 20;

601 
	gd·
.
	gBackOffFromEndTimeFøme3
 = 200 * 60;

602 
	gd·
.
	gMaxRowsFøme3
 = 20;

603 
	gd·
.
	gBackOffFromEndTimeFøme4
 = 500 * 60;

604 
	gd·
.
	gMaxRowsFøme4
 = 20;

607 
CheckDeÁu…s
()

609 
	g°©e
.
	gdo_‰ame1
 = (
cur
.
do_‰ame1
 =
d·
.do_frame1);

610 
	g°©e
.
	gdo_‰ame2
 = (
cur
.
do_‰ame2
 =
d·
.do_frame2);

611 
	g°©e
.
	gdo_‰ame3
 = (
cur
.
do_‰ame3
 =
d·
.do_frame3);

612 
	g°©e
.
	gdo_‰ame4
 = (
cur
.
do_‰ame4
 =
d·
.do_frame4);

613 
	g°©e
.
	gMaxRowsFøme1
 = (
cur
.
MaxRowsFøme1
 =
d·
.MaxRowsFrame1);

614 
	g°©e
.
	gBackOffFromEndTimeFøme2
 = (
cur
.
BackOffFromEndTimeFøme2
 =
d·
.BackOffFromEndTimeFrame2);

615 
	g°©e
.
	gMaxRowsFøme2
 = (
cur
.
MaxRowsFøme2
 =
d·
.MaxRowsFrame2);

616 
	g°©e
.
	gBackOffFromEndTimeFøme3
 = (
cur
.
BackOffFromEndTimeFøme3
 =
d·
.BackOffFromEndTimeFrame3);

617 
	g°©e
.
	gMaxRowsFøme3
 = (
cur
.
MaxRowsFøme3
 =
d·
.MaxRowsFrame3);

618 
	g°©e
.
	gBackOffFromEndTimeFøme4
 = (
cur
.
BackOffFromEndTimeFøme4
 =
d·
.BackOffFromEndTimeFrame4);

619 
	g°©e
.
	gMaxRowsFøme4
 = (
cur
.
MaxRowsFøme4
 =
d·
.MaxRowsFrame4);

622 
CheckVÆid
() {

623 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame1", 
cur
.
do_‰ame1
, 0, 100);

624 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame2", 
cur
.
do_‰ame2
, 0, 100);

625 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame3", 
cur
.
do_‰ame3
, 0, 100);

626 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame4", 
cur
.
do_‰ame4
, 0, 100);

627 
DRIVERPARAM_CHECK_EQUAL
–"do_‰ame*ÅŸÆ", 
cur
.
do_‰ame1
 + cur.
do_‰ame2
 + cur.
do_‰ame3
 + cur.
do_‰ame4
, 100);

628 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme1", 
cur
.
MaxRowsFøme1
, 
TødeLookupFøme1MaxRows
);

629 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme2", 
cur
.
MaxRowsFøme2
, 
TødeLookupFøme2MaxRows
);

630 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme3", 
cur
.
MaxRowsFøme3
, 
TødeLookupFøme3MaxRows
);

631 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme4", 
cur
.
MaxRowsFøme4
, 
TødeLookupFøme4MaxRows
);

634 
CheckCom∂ü¡
() {

635 
CheckVÆid
();

636 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame1
 );

637 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame2
 );

638 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame3
 );

639 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame4
 );

640 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme1
 );

641 
DRIVERPARAM_CHECK_DEFAULT
–
BackOffFromEndTimeFøme2
 );

642 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme2
 );

643 
DRIVERPARAM_CHECK_DEFAULT
–
BackOffFromEndTimeFøme3
 );

644 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme3
 );

645 
DRIVERPARAM_CHECK_DEFAULT
–
BackOffFromEndTimeFøme4
 );

646 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme4
 );

650 
˛ass
 
	gCTødeOrdîSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TTødeOrdîSëtögs
, 
	gTTødeOrdîSëtögsSèã
 >

652 
	gpublic
:

653 
CTødeOrdîSëtögs
()

655 
Inôülize
();

658 
InôülizeDeÁu…s
()

660 
	gd·
.
	gm¨kë
 = 60;

661 
	gd·
.
	glimô
 = 40;

662 
	gd·
.
	g°›_loss
 = 50;

663 
	gd·
.
	g£curôy_by_«me
 = 40;

664 
	gd·
.
	g£curôy_by_symbﬁ
 = 60;

665 
	gd·
.
	gbuy_‹dîs
 = 50;

666 
	gd·
.
	g£Œ_‹dîs
 = 50;

667 
	gd·
.
	glifo
 = 35;

668 
	gd·
.
	gexec_is_ow√r
 = 90;

669 
	gd·
.
	grﬁlback
 = 1;

670 
	gd·
.
	gty≥_is_m¨gö
 = 8;

673 
CheckDeÁu…s
()

675 
	g°©e
.
	gm¨kë
 = (
cur
.
m¨kë
 =
d·
.market);

676 
	g°©e
.
	glimô
 = (
cur
.
limô
 =
d·
.limit);

677 
	g°©e
.
	g°›_loss
 = (
cur
.
°›_loss
 =
d·
.stop_loss);

678 
	g°©e
.
	g£curôy_by_«me
 = (
cur
.
£curôy_by_«me
 =
d·
.security_by_name);

679 
	g°©e
.
	g£curôy_by_symbﬁ
 = (
cur
.
£curôy_by_symbﬁ
 =
d·
.security_by_symbol);

680 
	g°©e
.
	gbuy_‹dîs
 = (
cur
.
buy_‹dîs
 =
d·
.buy_orders);

681 
	g°©e
.
	g£Œ_‹dîs
 = (
cur
.
£Œ_‹dîs
 =
d·
.sell_orders);

682 
	g°©e
.
	glifo
 = (
cur
.
lifo
 =
d·
.lifo);

683 
	g°©e
.
	gexec_is_ow√r
 = (
cur
.
exec_is_ow√r
 =
d·
.exec_is_owner);

684 
	g°©e
.
	grﬁlback
 = (
cur
.
rﬁlback
 =
d·
.rollback);

685 
	g°©e
.
	gty≥_is_m¨gö
 = (
cur
.
ty≥_is_m¨gö
 =
d·
.type_is_margin);

688 
CheckVÆid
() {

689 
DRIVERPARAM_CHECK_BETWEEN
–"m¨kë", 
cur
.
m¨kë
, 0, 100);

690 
DRIVERPARAM_CHECK_BETWEEN
–"limô", 
cur
.
limô
, 0, 100);

691 
DRIVERPARAM_CHECK_EQUAL
–"m¨kë o∏limôÅŸÆ", 
cur
.
m¨kë
 + cur.
limô
, 100);

692 
DRIVERPARAM_CHECK_BETWEEN
–"°›_loss", 
cur
.
°›_loss
, 0, 100);

693 
DRIVERPARAM_CHECK_BETWEEN
–"£curôy_by_«me", 
cur
.
£curôy_by_«me
, 0, 100);

694 
DRIVERPARAM_CHECK_BETWEEN
–"£curôy_by_symbﬁ", 
cur
.
£curôy_by_symbﬁ
, 0, 100);

695 
DRIVERPARAM_CHECK_EQUAL
–"£curôy_by_*ÅŸÆ", 
cur
.
£curôy_by_«me
 + cur.
£curôy_by_symbﬁ
, 100);

696 
DRIVERPARAM_CHECK_BETWEEN
–"buy_‹dîs", 
cur
.
buy_‹dîs
, 0, 100);

697 
DRIVERPARAM_CHECK_BETWEEN
–"£Œ_‹dîs", 
cur
.
£Œ_‹dîs
, 0, 100);

698 
DRIVERPARAM_CHECK_EQUAL
–"*_‹dî†tŸÆ", 
cur
.
buy_‹dîs
 + cur.
£Œ_‹dîs
, 100);

699 
DRIVERPARAM_CHECK_BETWEEN
–"lifo", 
cur
.
lifo
, 0, 100);

700 
DRIVERPARAM_CHECK_BETWEEN
–"exec_is_ow√r", 
cur
.
exec_is_ow√r
, 0, 100);

701 
DRIVERPARAM_CHECK_BETWEEN
–"rﬁlback", 
cur
.
rﬁlback
, 0, 100);

702 
DRIVERPARAM_CHECK_BETWEEN
–"ty≥_is_m¨gö", 
cur
.
ty≥_is_m¨gö
, 0, 100);

705 
CheckCom∂ü¡
() {

706 
CheckVÆid
();

707 
DRIVERPARAM_CHECK_BETWEEN
–"exec_is_ow√r", 
cur
.
exec_is_ow√r
, 60, 100);

708 
DRIVERPARAM_CHECK_DEFAULT
–
m¨kë
 );

709 
DRIVERPARAM_CHECK_DEFAULT
–
limô
 );

710 
DRIVERPARAM_CHECK_DEFAULT
–
°›_loss
 );

711 
DRIVERPARAM_CHECK_DEFAULT
–
£curôy_by_«me
 );

712 
DRIVERPARAM_CHECK_DEFAULT
–
£curôy_by_symbﬁ
 );

713 
DRIVERPARAM_CHECK_DEFAULT
–
buy_‹dîs
 );

714 
DRIVERPARAM_CHECK_DEFAULT
–
£Œ_‹dîs
 );

715 
DRIVERPARAM_CHECK_DEFAULT
–
lifo
 );

716 
DRIVERPARAM_CHECK_DEFAULT
–
exec_is_ow√r
 );

717 
DRIVERPARAM_CHECK_DEFAULT
–
rﬁlback
 );

718 
DRIVERPARAM_CHECK_DEFAULT
–
ty≥_is_m¨gö
 );

722 
˛ass
 
	gCTødeUpd©eSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TTødeUpd©eSëtögs
, 
	gTTødeUpd©eSëtögsSèã
 >

724 
	gpublic
:

725 
CTødeUpd©eSëtögs
()

727 
Inôülize
();

730 
InôülizeDeÁu…s
()

732 
	gd·
.
	gdo_‰ame1
 = 33;

733 
	gd·
.
	gdo_‰ame2
 = 33;

734 
	gd·
.
	gdo_‰ame3
 = 34;

735 
	gd·
.
	gMaxRowsFøme1
 = 20;

736 
	gd·
.
	gMaxRowsToUpd©eFøme1
 = 20;

737 
	gd·
.
	gMaxRowsFøme2
 = 20;

738 
	gd·
.
	gMaxRowsToUpd©eFøme2
 = 20;

739 
	gd·
.
	gBackOffFromEndTimeFøme2
 = 4 * 8 * 3600;

740 
	gd·
.
	gMaxRowsFøme3
 = 20;

741 
	gd·
.
	gMaxRowsToUpd©eFøme3
 = 20;

742 
	gd·
.
	gBackOffFromEndTimeFøme3
 = 200 * 60;

745 
CheckDeÁu…s
()

747 
	g°©e
.
	gdo_‰ame1
 = (
cur
.
do_‰ame1
 =
d·
.do_frame1);

748 
	g°©e
.
	gdo_‰ame2
 = (
cur
.
do_‰ame2
 =
d·
.do_frame2);

749 
	g°©e
.
	gdo_‰ame3
 = (
cur
.
do_‰ame3
 =
d·
.do_frame3);

750 
	g°©e
.
	gMaxRowsFøme1
 = (
cur
.
MaxRowsFøme1
 =
d·
.MaxRowsFrame1);

751 
	g°©e
.
	gMaxRowsToUpd©eFøme1
 = (
cur
.
MaxRowsToUpd©eFøme1
 =
d·
.MaxRowsToUpdateFrame1);

752 
	g°©e
.
	gMaxRowsFøme2
 = (
cur
.
MaxRowsFøme2
 =
d·
.MaxRowsFrame2);

753 
	g°©e
.
	gMaxRowsToUpd©eFøme2
 = (
cur
.
MaxRowsToUpd©eFøme2
 =
d·
.MaxRowsToUpdateFrame2);

754 
	g°©e
.
	gBackOffFromEndTimeFøme2
 = (
cur
.
BackOffFromEndTimeFøme2
 =
d·
.BackOffFromEndTimeFrame2);

755 
	g°©e
.
	gMaxRowsFøme3
 = (
cur
.
MaxRowsFøme3
 =
d·
.MaxRowsFrame3);

756 
	g°©e
.
	gMaxRowsToUpd©eFøme3
 = (
cur
.
MaxRowsToUpd©eFøme3
 =
d·
.MaxRowsToUpdateFrame3);

757 
	g°©e
.
	gBackOffFromEndTimeFøme3
 = (
cur
.
BackOffFromEndTimeFøme3
 =
d·
.BackOffFromEndTimeFrame3);

760 
CheckVÆid
() {

761 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame1", 
cur
.
do_‰ame1
, 0, 100);

762 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame2", 
cur
.
do_‰ame2
, 0, 100);

763 
DRIVERPARAM_CHECK_BETWEEN
–"do_‰ame3", 
cur
.
do_‰ame3
, 0, 100);

764 
DRIVERPARAM_CHECK_EQUAL
–"do_‰ame*ÅŸÆ", 
cur
.
do_‰ame1
 + cur.
do_‰ame2
 + cur.
do_‰ame3
, 100);

765 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme1", 
cur
.
MaxRowsFøme1
, 
TødeUpd©eFøme1MaxRows
);

766 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme2", 
cur
.
MaxRowsFøme2
, 
TødeUpd©eFøme2MaxRows
);

767 
DRIVERPARAM_CHECK_LE
–"MaxRowsFøme3", 
cur
.
MaxRowsFøme3
, 
TødeUpd©eFøme3MaxRows
);

768 
DRIVERPARAM_CHECK_LE
–"MaxRowsToUpd©eFøme1", 
cur
.
MaxRowsToUpd©eFøme1
, 
TødeUpd©eFøme1MaxRows
);

769 
DRIVERPARAM_CHECK_LE
–"MaxRowsToUpd©eFøme2", 
cur
.
MaxRowsToUpd©eFøme2
, 
TødeUpd©eFøme2MaxRows
);

770 
DRIVERPARAM_CHECK_LE
–"MaxRowsToUpd©eFøme3", 
cur
.
MaxRowsToUpd©eFøme3
, 
TødeUpd©eFøme3MaxRows
);

773 
CheckCom∂ü¡
() {

774 
CheckVÆid
();

776 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame1
 );

777 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame2
 );

778 
DRIVERPARAM_CHECK_DEFAULT
–
do_‰ame3
 );

779 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme1
 );

780 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsToUpd©eFøme1
 );

781 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme2
 );

782 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsToUpd©eFøme2
 );

783 
DRIVERPARAM_CHECK_DEFAULT
–
BackOffFromEndTimeFøme2
 );

784 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsFøme3
 );

785 
DRIVERPARAM_CHECK_DEFAULT
–
MaxRowsToUpd©eFøme3
 );

786 
DRIVERPARAM_CHECK_DEFAULT
–
BackOffFromEndTimeFøme3
 );

790 
˛ass
 
	gCTxnMixGíî©‹Sëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TTxnMixGíî©‹Sëtögs
, 
	gTTxnMixGíî©‹SëtögsSèã
 >

792 
	gpublic
:

793 
CTxnMixGíî©‹Sëtögs
()

795 
Inôülize
();

798 
InôülizeDeÁu…s
()

800 
	gd·
.
	gBrokîVﬁumeMixLevñ
 = 49;

801 
	gd·
.
	gCu°omîPosôi⁄MixLevñ
 = 130;

802 
	gd·
.
	gM¨këW©chMixLevñ
 = 180;

803 
	gd·
.
	gSecurôyDëaûMixLevñ
 = 140;

804 
	gd·
.
	gTødeLookupMixLevñ
 = 80;

805 
	gd·
.
	gTødeOrdîMixLevñ
 = 101;

806 
	gd·
.
	gTødeSètusMixLevñ
 = 190;

807 
	gd·
.
	gTødeUpd©eMixLevñ
 = 20;

810 
CheckDeÁu…s
()

812 
	g°©e
.
	gBrokîVﬁumeMixLevñ
 = (
cur
.
BrokîVﬁumeMixLevñ
 =
d·
.BrokerVolumeMixLevel);

813 
	g°©e
.
	gCu°omîPosôi⁄MixLevñ
 = (
cur
.
Cu°omîPosôi⁄MixLevñ
 =
d·
.CustomerPositionMixLevel);

814 
	g°©e
.
	gM¨këW©chMixLevñ
 = (
cur
.
M¨këW©chMixLevñ
 =
d·
.MarketWatchMixLevel);

815 
	g°©e
.
	gSecurôyDëaûMixLevñ
 = (
cur
.
SecurôyDëaûMixLevñ
 =
d·
.SecurityDetailMixLevel);

816 
	g°©e
.
	gTødeLookupMixLevñ
 = (
cur
.
TødeLookupMixLevñ
 =
d·
.TradeLookupMixLevel);

817 
	g°©e
.
	gTødeOrdîMixLevñ
 = (
cur
.
TødeOrdîMixLevñ
 =
d·
.TradeOrderMixLevel);

818 
	g°©e
.
	gTødeSètusMixLevñ
 = (
cur
.
TødeSètusMixLevñ
 =
d·
.TradeStatusMixLevel);

819 
	g°©e
.
	gTødeUpd©eMixLevñ
 = (
cur
.
TødeUpd©eMixLevñ
 =
d·
.TradeUpdateMixLevel);

822 
CheckVÆid
() {

823 
DRIVERPARAM_CHECK_GE
–"BrokîVﬁumeMixLevñ", 
cur
.
BrokîVﬁumeMixLevñ
, 0 );

824 
DRIVERPARAM_CHECK_GE
–"Cu°omîPosôi⁄MixLevñ", 
cur
.
Cu°omîPosôi⁄MixLevñ
, 0 );

825 
DRIVERPARAM_CHECK_GE
–"M¨këW©chMixLevñ", 
cur
.
M¨këW©chMixLevñ
, 0 );

826 
DRIVERPARAM_CHECK_GE
–"SecurôyDëaûMixLevñ", 
cur
.
SecurôyDëaûMixLevñ
, 0 );

827 
DRIVERPARAM_CHECK_GE
–"TødeLookupMixLevñ", 
cur
.
TødeLookupMixLevñ
, 0 );

828 
DRIVERPARAM_CHECK_GE
–"TødeOrdîMixLevñ", 
cur
.
TødeOrdîMixLevñ
, 0 );

829 
DRIVERPARAM_CHECK_GE
–"TødeSètusMixLevñ", 
cur
.
TødeSètusMixLevñ
, 0 );

830 
DRIVERPARAM_CHECK_GE
–"TødeUpd©eMixLevñ", 
cur
.
TødeUpd©eMixLevñ
, 0 );

833 
CheckCom∂ü¡
() {

834 
CheckVÆid
();

835 
DRIVERPARAM_CHECK_DEFAULT
–
BrokîVﬁumeMixLevñ
 );

836 
DRIVERPARAM_CHECK_DEFAULT
–
Cu°omîPosôi⁄MixLevñ
 );

837 
DRIVERPARAM_CHECK_DEFAULT
–
M¨këW©chMixLevñ
 );

838 
DRIVERPARAM_CHECK_DEFAULT
–
SecurôyDëaûMixLevñ
 );

839 
DRIVERPARAM_CHECK_DEFAULT
–
TødeLookupMixLevñ
 );

840 
DRIVERPARAM_CHECK_DEFAULT
–
TødeOrdîMixLevñ
 );

841 
DRIVERPARAM_CHECK_DEFAULT
–
TødeSètusMixLevñ
 );

842 
DRIVERPARAM_CHECK_DEFAULT
–
TødeUpd©eMixLevñ
 );

846 
˛ass
 
	gCLﬂdîSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TLﬂdîSëtögs
, 
	gTLﬂdîSëtögsSèã
 >

848 
	gpublic
:

849 
CLﬂdîSëtögs
–
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

850 
TIdít
 
iSèπögCu°omî
, TIdíà
iCu°omîCou¡
,

851 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
 )

853 
Inôülize
();

855 
	gcur
.
	giC⁄figuªdCu°omîCou¡
 = 
iC⁄figuªdCu°omîCou¡
;

856 
	gcur
.
	giA˘iveCu°omîCou¡
 = 
iA˘iveCu°omîCou¡
;

857 
	gcur
.
	giSèπögCu°omî
 = 
iSèπögCu°omî
;

858 
	gcur
.
	giCu°omîCou¡
 = 
iCu°omîCou¡
;

859 
	gcur
.
	giSˇÀFa˘‹
 = 
iSˇÀFa˘‹
;

860 
	gcur
.
	giDaysOfInôülTødes
 = 
iDaysOfInôülTødes
;

862 
CheckDeÁu…s
();

865 
CLﬂdîSëtögs
()

867 
Inôülize
();

870 
InôülizeDeÁu…s
()

874 
	gd·
.
	giC⁄figuªdCu°omîCou¡
 = 5000;

875 
	gd·
.
	giA˘iveCu°omîCou¡
 = 5000;

876 
	gd·
.
	giSèπögCu°omî
 = 1;

877 
	gd·
.
	giCu°omîCou¡
 = 5000;

878 
	gd·
.
	giSˇÀFa˘‹
 = 500;

879 
	gd·
.
	giDaysOfInôülTødes
 = 300;

882 
CheckDeÁu…s
()

884 
	g°©e
.
	giC⁄figuªdCu°omîCou¡
 = 
åue
;

885 
	g°©e
.
	giA˘iveCu°omîCou¡
 = 
åue
;

886 
	g°©e
.
	giSèπögCu°omî
 = 
åue
;

887 
	g°©e
.
	giCu°omîCou¡
 = 
åue
;

888 
	g°©e
.
	giSˇÀFa˘‹
 = (
cur
.
iSˇÀFa˘‹
 =
d·
.iScaleFactor);

889 
	g°©e
.
	giDaysOfInôülTødes
 = (
cur
.
iDaysOfInôülTødes
 =
d·
.iDaysOfInitialTrades);

892 
CheckVÆid
() {

893 
DRIVERPARAM_CHECK_GE
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
, 1000);

894 
DRIVERPARAM_CHECK_GE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, 1000);

895 
DRIVERPARAM_CHECK_LE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, cur.
iC⁄figuªdCu°omîCou¡
);

896 
DRIVERPARAM_CHECK_EQUAL
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
 % 1000, 0);

897 
DRIVERPARAM_CHECK_GE
–"iSèπögCu°omî", 
cur
.
iSèπögCu°omî
, 1)

898 
DRIVERPARAM_CHECK_EQUAL
–"iSèπögCu°omî", 
cur
.
iSèπögCu°omî
 % 1000, 1);

899 
DRIVERPARAM_CHECK_EQUAL
–"iCu°omîCou¡", 
cur
.
iCu°omîCou¡
 % 1000, 0);

900 
DRIVERPARAM_CHECK_LE
–"iCu°omîCou¡", 
cur
.
iCu°omîCou¡
 + cur.
iSèπögCu°omî
 - 1, cur.
iC⁄figuªdCu°omîCou¡
);

903 
CheckCom∂ü¡
() {

904 
CheckVÆid
();

905 
DRIVERPARAM_CHECK_GE
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
, 5000);

906 
DRIVERPARAM_CHECK_GE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, 5000);

907 
DRIVERPARAM_CHECK_EQUAL
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, cur.
iC⁄figuªdCu°omîCou¡
);

908 
DRIVERPARAM_CHECK_DEFAULT
–
iSˇÀFa˘‹
 );

909 
DRIVERPARAM_CHECK_DEFAULT
–
iDaysOfInôülTødes
 );

913 
˛ass
 
	gCDrivîGlobÆSëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TDrivîGlobÆSëtögs
, 
	gTDrivîGlobÆSëtögsSèã
 >

915 
	gpublic
:

916 
CDrivîGlobÆSëtögs
–
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
 )

918 
Inôülize
();

920 
	gcur
.
	giC⁄figuªdCu°omîCou¡
 = 
iC⁄figuªdCu°omîCou¡
;

921 
	gcur
.
	giA˘iveCu°omîCou¡
 = 
iA˘iveCu°omîCou¡
;

922 
	gcur
.
	giSˇÀFa˘‹
 = 
iSˇÀFa˘‹
;

923 
	gcur
.
	giDaysOfInôülTødes
 = 
iDaysOfInôülTødes
;

925 
CheckDeÁu…s
();

928 
CDrivîGlobÆSëtögs
()

930 
Inôülize
();

933 
InôülizeDeÁu…s
()

938 
	gd·
.
	giC⁄figuªdCu°omîCou¡
 = 5000;

939 
	gd·
.
	giA˘iveCu°omîCou¡
 = 5000;

940 
	gd·
.
	giSˇÀFa˘‹
 = 500;

941 
	gd·
.
	giDaysOfInôülTødes
 = 300;

944 
CheckDeÁu…s
()

946 
	g°©e
.
	giC⁄figuªdCu°omîCou¡
 = 
åue
;

947 
	g°©e
.
	giA˘iveCu°omîCou¡
 = 
åue
;

948 
	g°©e
.
	giSˇÀFa˘‹
 = (
cur
.
iSˇÀFa˘‹
 =
d·
.iScaleFactor);

949 
	g°©e
.
	giDaysOfInôülTødes
 = (
cur
.
iDaysOfInôülTødes
 =
d·
.iDaysOfInitialTrades);

953 
CheckVÆid
() {

954 
DRIVERPARAM_CHECK_GE
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
, 1000);

955 
DRIVERPARAM_CHECK_GE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, 1000);

956 
DRIVERPARAM_CHECK_LE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, cur.
iC⁄figuªdCu°omîCou¡
);

957 
DRIVERPARAM_CHECK_EQUAL
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
 % 1000, 0);

960 
CheckCom∂ü¡
() {

961 
CheckVÆid
();

962 
DRIVERPARAM_CHECK_GE
–"iC⁄figuªdCu°omîCou¡", 
cur
.
iC⁄figuªdCu°omîCou¡
, 5000);

963 
DRIVERPARAM_CHECK_GE
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, 5000);

964 
DRIVERPARAM_CHECK_EQUAL
–"iA˘iveCu°omîCou¡", 
cur
.
iA˘iveCu°omîCou¡
, cur.
iC⁄figuªdCu°omîCou¡
);

965 
DRIVERPARAM_CHECK_DEFAULT
–
iSˇÀFa˘‹
 );

966 
DRIVERPARAM_CHECK_DEFAULT
–
iDaysOfInôülTødes
 );

970 
˛ass
 
	gCDrivîCESëtögs
 : 
public
 
CP¨amëîsWôhoutDeÁu…s
< 
TDrivîCESëtögs
 >

972 
public
:

973 
CDrivîCESëtögs
–
UINT32
 
UniqueId
, 
RNGSEED
 
TxnMixRNGSìd
, RNGSEED 
TxnI≈utRNGSìd
 )

975 
	gcur
.
	gUniqueId
 = 
UniqueId
;

976 
	gcur
.
	gTxnMixRNGSìd
 = 
TxnMixRNGSìd
;

977 
	gcur
.
	gTxnI≈utRNGSìd
 = 
TxnI≈utRNGSìd
;

980 
CDrivîCESëtögs
() {} ;

982 
CheckVÆid
()

986 
CheckCom∂ü¡
()

991 
˛ass
 
	gCDrivîCEP¨tôi⁄Sëtögs
 : 
public
 
CP¨amëîsWôhDeÁu…s
< 
TDrivîCEP¨tôi⁄Sëtögs
, 
	gTDrivîCEP¨tôi⁄SëtögsSèã
 >

993 
	gpublic
:

994 
CDrivîCEP¨tôi⁄Sëtögs
–
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
 )

996 
Inôülize
();

998 
	gcur
.
	giMySèπögCu°omîId
 = 
iMySèπögCu°omîId
;

999 
	gcur
.
	giMyCu°omîCou¡
 = 
iMyCu°omîCou¡
;

1000 
	gcur
.
	giP¨tôi⁄Pî˚¡
 = 
iP¨tôi⁄Pî˚¡
;

1002 
CheckDeÁu…s
();

1007 
CDrivîCEP¨tôi⁄Sëtögs
( )

1009 
Inôülize
();

1011 
	gcur
.
	giMySèπögCu°omîId
 = 0;

1012 
	gcur
.
	giMyCu°omîCou¡
 = 0;

1013 
	gcur
.
	giP¨tôi⁄Pî˚¡
 = 0;

1015 
CheckDeÁu…s
();

1018 
InôülizeDeÁu…s
()

1020 
	gd·
.
	giMySèπögCu°omîId
 = 1;

1021 
	gd·
.
	giMyCu°omîCou¡
 = 5000;

1022 
	gd·
.
	giP¨tôi⁄Pî˚¡
 = 50;

1025 
CheckDeÁu…s
()

1027 
	g°©e
.
	giP¨tôi⁄Pî˚¡
 = (
cur
.
iP¨tôi⁄Pî˚¡
 =
d·
.iPartitionPercent);

1030 
CheckVÆid
() {

1031 
DRIVERPARAM_CHECK_BETWEEN
–"iP¨tôi⁄Pî˚¡", 
cur
.
iP¨tôi⁄Pî˚¡
, 0, 100);

1032 i‡–
	gcur
.
	giMySèπögCu°omîId
 =0 && 
cur
.
iMyCu°omîCou¡
 =0 && cur.
iP¨tôi⁄Pî˚¡
 == 0 ) {

1042 
DRIVERPARAM_CHECK_EQUAL
–"iMySèπögCu°omîId", 
cur
.
iMySèπögCu°omîId
 % 1000, 1 );

1043 
DRIVERPARAM_CHECK_GE
–"iMyCu°omîCou¡", 
cur
.
iMyCu°omîCou¡
, 1000 );

1044 
DRIVERPARAM_CHECK_EQUAL
–"iMyCu°omîCou¡", 
cur
.
iMyCu°omîCou¡
 % 1000, 0 );

1048 
CheckCom∂ü¡
() {

1049 
CheckVÆid
();

1051 i‡–
	gcur
.
	giMySèπögCu°omîId
 =0 && 
cur
.
iMyCu°omîCou¡
 =0 && cur.
iP¨tôi⁄Pî˚¡
 == 0 ) {

1055 
DRIVERPARAM_CHECK_DEFAULT
–
iP¨tôi⁄Pî˚¡
 );

1060 
˛ass
 
	gCDrivîMEESëtögs
 : 
public
 
CP¨amëîsWôhoutDeÁu…s
< 
TDrivîMEESëtögs
 >

1062 
public
:

1063 
CDrivîMEESëtögs
–
UINT32
 
UniqueId
, 
RNGSEED
 
RNGSìd
, RNGSEED 
TickîT≠eRNGSìd
, RNGSEED 
TødögFlo‹RNGSìd
 )

1065 
	gcur
.
	gUniqueId
 = 
UniqueId
;

1066 
	gcur
.
	gRNGSìd
 = 
RNGSìd
;

1067 
	gcur
.
	gTickîT≠eRNGSìd
 = 
TickîT≠eRNGSìd
;

1068 
	gcur
.
	gTødögFlo‹RNGSìd
 = 
TødögFlo‹RNGSìd
;

1071 
CDrivîMEESëtögs
() {} ;

1073 
CheckVÆid
()

1077 
CheckCom∂ü¡
()

1082 
˛ass
 
	gCDrivîDMSëtögs
 : 
public
 
CP¨amëîsWôhoutDeÁu…s
< 
TDrivîDMSëtögs
 >

1084 
public
:

1085 
CDrivîDMSëtögs
–
UINT32
 
UniqueId
, 
RNGSEED
 
RNGSìd
 )

1087 
	gcur
.
	gUniqueId
 = 
UniqueId
;

1088 
	gcur
.
	gRNGSìd
 = 
RNGSìd
;

1091 
CDrivîDMSëtögs
() {};

1093 
CheckVÆid
()

1097 
CheckCom∂ü¡
()

1102 
	sTDrivîCETxnSëtögs


1104 
CBrokîVﬁumeSëtögs
 
	gBV_£âögs
;

1105 
CCu°omîPosôi⁄Sëtögs
 
	gCP_£âögs
;

1106 
CM¨këW©chSëtögs
 
	gMW_£âögs
;

1107 
CSecurôyDëaûSëtögs
 
	gSD_£âögs
;

1108 
CTødeLookupSëtögs
 
	gTL_£âögs
;

1109 
CTødeOrdîSëtögs
 
	gTO_£âögs
;

1110 
CTødeUpd©eSëtögs
 
	gTU_£âögs
;

1112 
CTxnMixGíî©‹Sëtögs
 
	gTxnMixGíî©‹_£âögs
;

1114 
boﬁ
 
IsVÆid
() {

1115 
	gåy
 {

1116 
CheckVÆid
();

1117  
	gåue
;

1118 } 
ˇtch
(...) {

1119  
	gÁl£
;

1123 
boﬁ
 
IsCom∂ü¡
() {

1124 
	gåy
 {

1125 
CheckCom∂ü¡
();

1126  
	gåue
;

1127 } 
ˇtch
(...) {

1128  
	gÁl£
;

1132 
CheckVÆid
()

1134 
	gBV_£âögs
.
CheckVÆid
();

1135 
	gCP_£âögs
.
CheckVÆid
();

1136 
	gMW_£âögs
.
CheckVÆid
();

1137 
	gSD_£âögs
.
CheckVÆid
();

1138 
	gTL_£âögs
.
CheckVÆid
();

1139 
	gTO_£âögs
.
CheckVÆid
();

1140 
	gTU_£âögs
.
CheckVÆid
();

1141 
	gTxnMixGíî©‹_£âögs
.
CheckVÆid
();

1144 
CheckCom∂ü¡
()

1146 
	gBV_£âögs
.
CheckCom∂ü¡
();

1147 
	gCP_£âögs
.
CheckCom∂ü¡
();

1148 
	gMW_£âögs
.
CheckCom∂ü¡
();

1149 
	gSD_£âögs
.
CheckCom∂ü¡
();

1150 
	gTL_£âögs
.
CheckCom∂ü¡
();

1151 
	gTO_£âögs
.
CheckCom∂ü¡
();

1152 
	gTU_£âögs
.
CheckCom∂ü¡
();

1153 
	gTxnMixGíî©‹_£âögs
.
CheckCom∂ü¡
();

1155 } *
	tPDrivîCETxnSëtögs
;

	@include/workload/tpce/egen/DriverTypes.h

41 #i‚de‡
DRIVER_TYPES_H


42 
	#DRIVER_TYPES_H


	)

44 
«me•a˚
 
	gTPCE


47 
	eeDrivîTy≥


49 
	geDrivîEGíLﬂdî
,

50 
	geDrivîAŒ
,

51 
	geDrivîCE
,

52 
	geDrivîMEE
,

53 
	geDrivîDM
,

54 
	geDrivîMax


57 
szDrivîTy≥Names
[
eDrivîMax
][14];

	@include/workload/tpce/egen/EGenBaseLoader_stdafx.h

37 #i‚de‡
EGEN_BASELOADER_STDAFX_H


38 
	#EGEN_BASELOADER_STDAFX_H


	)

40 
	~"Ba£Lﬂdî.h
"

41 
	~"Ba£LﬂdîFa˘‹y.h
"

	@include/workload/tpce/egen/EGenError.h

41 #i‚de‡
EGEN_ERROR_H


42 
	#EGEN_ERROR_H


	)

44 
	~<°rög
>

46 
usög
 
«me•a˚
 
	g°d
;

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCEGíEº‹Mesßges


53 
	g¥iv©e
:

54 
public
:

57 ˛as†
	cCEGíEº‹Ex˚±i⁄


59 
	g¥iv©e
:

60 
°rög
 
m_Msg
;

62 
	gpublic
:

63 
CEGíEº‹Ex˚±i⁄
–
°rög
 
Msg
 )

65 
m_Msg
 = 
Msg
;

68 ~
CEGíEº‹Ex˚±i⁄
( )

72 
AddMsg
–
°rög
 
Msg
 )

74 
	gm_Msg
 +
Msg
;

77 
°rög
 
Msg
( )

79 –
	gm_Msg
 );

	@include/workload/tpce/egen/EGenGenerateAndLoad.h

43 #i‚de‡
EGEN_GENERATE_AND_LOAD_H


44 
	#EGEN_GENERATE_AND_LOAD_H


	)

46 
	~"EGíSènd¨dTy≥s.h
"

47 
	~"EGíGíî©eAndLﬂdBa£Ouçut.h
"

48 
	~"MiscC⁄°s.h
"

49 
	~"I≈utFœtFûesSåu˘uª.h
"

50 
	~"Ba£LﬂdîFa˘‹y.h
"

51 
	~"Ba£Loggî.h
"

53 
«me•a˚
 
	gTPCE


58 ˛as†
	cCGíî©eAndLﬂd


61 
CI≈utFûes
 
	gm_öputFûes
;

63 
TIdít
 
	gm_iSèπFromCu°omî
;

65 
TIdít
 
	gm_iCu°omîCou¡
;

67 
TIdít
 
	gm_iTŸÆCu°omîs
;

69 
UINT
 
	gm_iLﬂdUnôSize
;

71 
UINT
 
	gm_iSˇÀFa˘‹
;

73 
UINT
 
	gm_iHoursOfInôülTødes
;

75 
CBa£LﬂdîFa˘‹y
* 
	gm_pLﬂdîFa˘‹y
;

77 
CGíî©eAndLﬂdBa£Ouçut
* 
	gm_pOuçut
;

79 
	gm_szInDú
[
iMaxP©h
];

81 
CBa£Loggî
* 
	gm_pLoggî
;

83 
CLﬂdîSëtögs
 
	gm_LﬂdîSëtögs
;

85 
boﬁ
 
	gm_bCacheE«bÀd
;

90 
CAddªssTabÀ
* 
	gaddªssTabÀ
;

91 
CCh¨geTabÀ
* 
	gch¨geTabÀ
;

92 
CCommissi⁄R©eTabÀ
* 
	gcommissi⁄R©eTabÀ
;

93 
CCom∑nyTabÀ
* 
	gcom∑nyTabÀ
;

94 
CCom∑nyCom≥tô‹TabÀ
* 
	gcom∑nyCom≥tô‹TabÀ
;

95 
CCu°omîTabÀ
* 
	gcu°omîTabÀ
;

96 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
* 
	gcu°omîAccou¡sAndPîmissi⁄sTabÀ
;

97 
CCu°omîTaxøãsTabÀ
* 
	gcu°omîTaxøãsTabÀ
;

98 
CDaûyM¨këTabÀ
* 
	gdaûyM¨këTabÀ
;

99 
CExch™geTabÀ
* 
	gexch™geTabÀ
;

100 
CFö™cülTabÀ
* 
	gfö™cülTabÀ
;

102 
CIndu°ryTabÀ
* 
	gödu°ryTabÀ
;

103 
CLa°TødeTabÀ
* 
	gœ°TødeTabÀ
;

104 
CNewsIãmAndXRefTabÀ
* 
	g√wsIãmAndXRefTabÀ
;

105 
CSe˘‹TabÀ
* 
	g£˘‹TabÀ
;

106 
CSecurôyTabÀ
* 
	g£curôyTabÀ
;

107 
CSètusTy≥TabÀ
* 
	g°©usTy≥TabÀ
;

108 
CTaxøãTabÀ
* 
	gèxøãTabÀ
;

109 
CTødeTy≥TabÀ
* 
	gåadeTy≥TabÀ
;

110 
CW©chLi°sAndIãmsTabÀ
* 
	gw©chLi°sAndIãmsTabÀ
;

111 
CZùCodeTabÀ
* 
	gzùCodeTabÀ
;

114 
CTødeGí
* 
	gpTødeGí
;

118 
	gpublic
:

139 
CGíî©eAndLﬂd
(
CI≈utFûes
 
öputFûes
,

140 
TIdít
 
iCu°omîCou¡
,

141 
TIdít
 
iSèπFromCu°omî
,

142 
TIdít
 
iTŸÆCu°omîs
,

143 
UINT
 
iLﬂdUnôSize
,

144 
UINT
 
iSˇÀFa˘‹
,

145 
UINT
 
iDaysOfInôülTødes
,

146 
CBa£LﬂdîFa˘‹y
* 
pLﬂdîFa˘‹y
,

147 
CBa£Loggî
* 
pLoggî
,

148 
CGíî©eAndLﬂdBa£Ouçut
* 
pOuçut
,

149 * 
szInDú
,

150 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


162 
Gíî©eAndLﬂdAddªss
();

172 
Gíî©eAndLﬂdCh¨ge
();

182 
Gíî©eAndLﬂdCommissi⁄R©e
();

192 
Gíî©eAndLﬂdCom∑nyCom≥tô‹
();

202 
Gíî©eAndLﬂdCom∑ny
();

212 
Gíî©eAndLﬂdCu°omîAccou¡AndAccou¡Pîmissi⁄
();

222 
Gíî©eAndLﬂdCu°omî
();

232 
Gíî©eAndLﬂdCu°omîTaxøã
();

242 
Gíî©eAndLﬂdDaûyM¨kë
();

252 
Gíî©eAndLﬂdExch™ge
();

262 
Gíî©eAndLﬂdFö™cül
();

272 
Gíî©eAndLﬂdHﬁdögAndTøde
();

282 
Gíî©eAndLﬂdIndu°ry
();

292 
Gíî©eAndLﬂdLa°Tøde
();

302 
Gíî©eAndLﬂdNewsIãmAndNewsXRef
();

312 
Gíî©eAndLﬂdSe˘‹
();

322 
Gíî©eAndLﬂdSecurôy
();

332 
Gíî©eAndLﬂdSètusTy≥
();

342 
Gíî©eAndLﬂdTaxøã
();

352 
Gíî©eAndLﬂdTødeTy≥
();

362 
Gíî©eAndLﬂdW©chLi°AndW©chIãm
();

372 
Gíî©eAndLﬂdZùCode
();

385 
Gíî©eAndLﬂdFixedTabÀs
();

399 
Gíî©eAndLﬂdSˇlögTabÀs
();

413 
Gíî©eAndLﬂdGrowögTabÀs
();

418 
InôAddªss
();

419 
InôCh¨ge
();

420 
InôCommissi⁄R©e
();

421 
InôCom∑nyCom≥tô‹
();

422 
InôCom∑ny
();

423 
InôCu°omîAccou¡AndAccou¡Pîmissi⁄
();

424 
InôCu°omî
();

425 
InôCu°omîTaxøã
();

426 
InôDaûyM¨kë
();

427 
InôExch™ge
();

428 
InôFö™cül
();

429 
InôHﬁdögAndTøde
();

430 
InôIndu°ry
();

431 
InôLa°Tøde
();

432 
InôNewsIãmAndNewsXRef
();

433 
InôSe˘‹
();

434 
InôSecurôy
();

435 
InôSètusTy≥
();

436 
InôTaxøã
();

437 
InôTødeTy≥
();

438 
InôW©chLi°AndW©chIãm
();

439 
InôZùCode
();

441 
Rñó£Addªss
();

442 
Rñó£Ch¨ge
();

443 
Rñó£Commissi⁄R©e
();

444 
Rñó£Com∑nyCom≥tô‹
();

445 
Rñó£Com∑ny
();

446 
Rñó£Cu°omîAccou¡AndAccou¡Pîmissi⁄
();

447 
Rñó£Cu°omî
();

448 
Rñó£Cu°omîTaxøã
();

449 
Rñó£DaûyM¨kë
();

450 
Rñó£Exch™ge
();

451 
Rñó£Fö™cül
();

452 
Rñó£HﬁdögAndTøde
();

453 
Rñó£Indu°ry
();

454 
Rñó£La°Tøde
();

455 
Rñó£NewsIãmAndNewsXRef
();

456 
Rñó£Se˘‹
();

457 
Rñó£Securôy
();

458 
Rñó£SètusTy≥
();

459 
Rñó£Taxøã
();

460 
Rñó£TødeTy≥
();

461 
Rñó£W©chLi°AndW©chIãm
();

462 
Rñó£ZùCode
();

464 
PADDRESS_ROW
 
gëAddªssRow
();

465 
PCHARGE_ROW
 
gëCh¨geRow
();

466 
PCOMMISSION_RATE_ROW
 
gëCommissi⁄R©eRow
();

467 
PCOMPANY_ROW
 
gëCom∑nyRow
();

468 
PCOMPANY_COMPETITOR_ROW
 
gëCom∑nyCom≥tô‹Row
();

469 
PCUSTOMER_ROW
 
gëCu°omîRow
();

470 
PCUSTOMER_ACCOUNT_ROW
 
gëCu°omîAccou¡Row
();

471 
PACCOUNT_PERMISSION_ROW
 
gëAccou¡Pîmissi⁄Row
(
i
);

472 
PCUSTOMER_TAXRATE_ROW
 
gëCu°omîTaxøãRow
(
i
);

473 
PDAILY_MARKET_ROW
 
gëDaûyM¨këRow
();

474 
PEXCHANGE_ROW
 
gëExch™geRow
();

475 
PFINANCIAL_ROW
 
gëFö™cülRow
();

476 
PINDUSTRY_ROW
 
gëIndu°ryRow
();

477 
PLAST_TRADE_ROW
 
gëLa°TødeRow
();

478 
PNEWS_ITEM_ROW
 
gëNewsIãmRow
();

479 
PNEWS_XREF_ROW
 
gëNewsXRefRow
();

480 
PSECTOR_ROW
 
gëSe˘‹Row
();

481 
PSECURITY_ROW
 
gëSecurôyRow
();

482 
PSTATUS_TYPE_ROW
 
gëSètusTy≥Row
();

483 
PTAXRATE_ROW
 
gëTaxøãRow
();

484 
PTRADE_TYPE_ROW
 
gëTødeTy≥Row
();

485 
PWATCH_LIST_ROW
 
gëW©chLi°Row
();

486 
PWATCH_ITEM_ROW
 
gëW©chIãmRow
(
i
);

487 
PZIP_CODE_ROW
 
gëZùCodeRow
();

491 
PTRADE_ROW
 
gëTødeRow
();

492 
PTRADE_REQUEST_ROW
 
gëTødeReque°Row
();

493 
PTRADE_HISTORY_ROW
 
gëTødeHi°‹yRow
(
i
);

494 
PCASH_TRANSACTION_ROW
 
gëCashTønß˘i⁄Row
();

495 
PSETTLEMENT_ROW
 
gëSëéemítRow
 ();

496 
PHOLDING_HISTORY_ROW
 
gëHﬁdögHi°‹yRow
(
i
);

497 
PHOLDING_SUMMARY_ROW
 
gëHﬁdögSumm¨yRow
();

498 
PBROKER_ROW
 
gëBrokîRow
();

499 
PHOLDING_ROW
 
gëHﬁdögRow
();

503 
boﬁ
 
hasNextAddªss
();

504 
boﬁ
 
isLa°Ch¨ge
();

505 
boﬁ
 
isLa°Commissi⁄R©e
();

506 
boﬁ
 
hasNextCom∑nyCom≥tô‹
();

507 
boﬁ
 
hasNextCom∑ny
();

508 
boﬁ
 
hasNextCu°omîAccou¡
();

509 
Pîmissi⁄sPîCu°omî
();

510 
boﬁ
 
hasNextCu°omî
();

511 
boﬁ
 
hasNextCu°omîTaxøã
();

512 
gëTaxøãsCou¡
();

513 
boﬁ
 
hasNextDaûyM¨kë
();

514 
boﬁ
 
isLa°Exch™ge
();

515 
boﬁ
 
hasNextFö™cül
();

516 
boﬁ
 
isLa°Indu°ry
();

517 
boﬁ
 
hasNextLa°Tøde
();

518 
boﬁ
 
hasNextNewsIãmAndNewsXRef
();

519 
boﬁ
 
isLa°Se˘‹
();

520 
boﬁ
 
hasNextSecurôy
();

521 
boﬁ
 
isLa°SètusTy≥
();

522 
boﬁ
 
hasNextTaxøã
();

523 
boﬁ
 
isLa°TødeTy≥
();

524 
boﬁ
 
hasNextW©chLi°
();

525 
IãmsPîW©chLi°
();

526 
boﬁ
 
hasNextZùCode
();

528 
boﬁ
 
hasNextLﬂdUnô
();

529 
boﬁ
 
hasNextTøde
();

530 
boﬁ
 
shouldPro˚ssTødeReque°Row
();

531 
gëTødeHi°‹yRowCou¡
();

532 
boﬁ
 
shouldPro˚ssCashTønß˘i⁄Row
();

533 
boﬁ
 
shouldPro˚ssSëéemítRow
();

534 
boﬁ
 
hasNextHﬁdög
();

535 
gëHﬁdögHi°‹yRowCou¡
();

536 
boﬁ
 
hasNextHﬁdögSumm¨y
();

537 
boﬁ
 
hasNextBrokî
();

541 
InôFixedTabÀs
();

545 
InôSˇlögTabÀs
();

548 
InôGrowögTabÀs
();

	@include/workload/tpce/egen/EGenGenerateAndLoadBaseOutput.h

42 #i‚de‡
EGEN_GENERATE_AND_LOAD_BASE_OUTPUT_H


43 
	#EGEN_GENERATE_AND_LOAD_BASE_OUTPUT_H


	)

45 
	~<°rög
>

47 
usög
 
«me•a˚
 
	g°d
;

49 
«me•a˚
 
	gTPCE


52 ˛as†
	cCGíî©eAndLﬂdBa£Ouçut


54 
	gpublic
:

65 
vútuÆ
 ~
CGíî©eAndLﬂdBa£Ouçut
() {};

76 
vútuÆ
 
OuçutSèπ
(
°rög
 
szMsg
) = 0;

87 
vútuÆ
 
OuçutProgªss
(
°rög
 
szMsg
) = 0;

98 
vútuÆ
 
OuçutCom∂ëe
(
°rög
 
szMsg
) = 0;

109 
vútuÆ
 
OuçutNewlöe
() = 0;

	@include/workload/tpce/egen/EGenGenerateAndLoadStandardOutput.h

41 #i‚de‡
EGEN_GENERATE_AND_LOAD_STANDARD_OUTPUT_H


42 
	#EGEN_GENERATE_AND_LOAD_STANDARD_OUTPUT_H


	)

44 
	~<c°dio
>

45 
	~<°rög
>

46 
	~"EGíGíî©eAndLﬂdBa£Ouçut.h
"

48 
usög
 
«me•a˚
 
	g°d
;

50 
«me•a˚
 
	gTPCE


53 * 
≠≥ndZîo
(
°rög
 &
s
);

55 ˛as†
	cCGíî©eAndLﬂdSènd¨dOuçut
 : 
public
 
CGíî©eAndLﬂdBa£Ouçut


57 
public
:

68 
OuçutSèπ
(
°rög
 
szMsg
)

70 * 
c

√w
 [
szMsg
.
size
()+1];

71 
mem˝y
(
c
,&
szMsg
,szMsg.
size
());

72 
	gc
[
szMsg
.
size
()]=0;

73 
	gcout
<<
	gc
;

74 
fÊush
(
°dout
);

86 
OuçutProgªss
(
°rög
 
szMsg
)

88 * 
	gc

√w
 [
szMsg
.
size
()+1];

89 
mem˝y
(
c
,&
szMsg
,szMsg.
size
());

90 
	gc
[
szMsg
.
size
()]=0;

91 
	gcout
<<
	gc
;

92 
fÊush
(
°dout
);

104 
OuçutCom∂ëe
(
°rög
 
szMsg
)

106 * 
	gc

√w
 [
szMsg
.
size
()+1];

107 
mem˝y
(
c
,&
szMsg
,szMsg.
size
());

108 
	gc
[
szMsg
.
size
()]=0;

109 
	gcout
<<
	gc
;

110 
fÊush
(
°dout
);

122 
OuçutNewlöe
()

124 
¥ötf
("\n");

	@include/workload/tpce/egen/EGenGenerateAndLoad_stdafx.h

37 #i‚de‡
EGEN_GENERATE_AND_LOAD_STDAFX_H


38 
	#EGEN_GENERATE_AND_LOAD_STDAFX_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 
	~<c°dio
>

	)

42 
	~<ˇs£π
>

43 
	~<f°ªam
>

44 
	~<£t
>

45 
	~<m≠
>

46 
	~<io°ªam
>

47 
	~<Æg‹ôhm
>

48 
	~<°rög
>

49 
	~<ve˘‹
>

51 
usög
 
«me•a˚
 
	g°d
;

53 
	~"EGíTabÀs_°dafx.h
"

54 
	~"EGíBa£Lﬂdî_°dafx.h
"

55 
	~"EGíGíî©eAndLﬂdBa£Ouçut.h
"

56 
	~"EGíGíî©eAndLﬂdSènd¨dOuçut.h
"

57 
	~"DrivîP¨amSëtögs.h
"

58 
	~"EGíLoggî.h
"

59 
	~"EGíGíî©eAndLﬂd.h
"

	@include/workload/tpce/egen/EGenLoader_stdafx.h

37 #i‚de‡
EGEN_LOADER_STDAFX_H


38 
	#EGEN_LOADER_STDAFX_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<c°dio
>

43 
	~<ˇs£π
>

44 
	~<f°ªam
>

45 
	~<£t
>

46 
	~<m≠
>

47 
	~<io°ªam
>

48 
	~<Æg‹ôhm
>

49 
	~<°rög
>

50 
	~<ve˘‹
>

52 #ifde‡
COMPILE_ODBC_LOAD


53 #ifde‡
WIN32


54 
	~<wödows.h
>

57 
	~<sql.h
>

58 
	~<sqÀxt.h
>

59 
	~<odbcss.h
>

63 
usög
 
«me•a˚
 
	g°d
;

65 
	~"EGíTabÀs_°dafx.h
"

66 
	~"EGíBa£Lﬂdî_°dafx.h
"

67 
	~"EGíGíî©eAndLﬂd_°dafx.h
"

70 
	~"NuŒLﬂd_°dafx.h
"

71 #ifde‡
COMPILE_FLAT_FILE_LOAD


72 
	~"FœtFûeLﬂd_°dafx.h
"

74 #ifde‡
COMPILE_ODBC_LOAD


75 
	~"wö/ODBCLﬂd_°dafx.h
"

77 #ifde‡
COMPILE_CUSTOM_LOAD


78 
	~"cu°om/Cu°omLﬂd_°dafx.h
"

80 #ifde‡
CUSTOM_LOAD_INCLUDE


81 
	#COMPILE_CUSTOM_LOAD


	)

82 #ö˛udê
CUSTOM_LOAD_INCLUDE


86 
	#ERROR_BAD_OPTION
 1

	)

87 
	#ERROR_INPUT_FILE
 2

	)

88 
	#ERROR_INVALID_OPTION_VALUE
 3

	)

	@include/workload/tpce/egen/EGenLogFormatterTab.h

42 #i‚de‡
EGEN_LOG_FORMATTER_H


43 
	#EGEN_LOG_FORMATTER_H


	)

45 
	~<io°ªam
>

46 
	~<iom™ù
>

47 
	~<s°ªam
>

49 
	~"EGíUtûôõs_°dafx.h
"

50 
	~"DrivîP¨amSëtögs.h
"

51 
	~"Ba£LogF‹m©ãr.h
"

53 
«me•a˚
 
	gTPCE


56 ˛as†
	cCLogF‹m©Tab
 : 
public
 
CBa£LogF‹m©ãr


58 
‰õnd
 
˛ass
 
EGíLoggî
;

60 
	g¥iv©e
:

61 
o°rög°ªam
 
logmsg
;

63 
	gpublic
:

69 
°rög
 
GëLogOuçut
(
CBrokîVﬁumeSëtögs
& 
∑rms
);

71 
°rög
 
GëLogOuçut
(
CCu°omîPosôi⁄Sëtögs
& 
∑rms
);

73 
°rög
 
GëLogOuçut
(
CM¨këW©chSëtögs
& 
∑rms
);

75 
°rög
 
GëLogOuçut
(
CSecurôyDëaûSëtögs
& 
∑rms
);

77 
°rög
 
GëLogOuçut
(
CTødeLookupSëtögs
& 
∑rms
);

79 
°rög
 
GëLogOuçut
(
CTødeOrdîSëtögs
& 
∑rms
);

81 
°rög
 
GëLogOuçut
(
CTødeUpd©eSëtögs
& 
∑rms
);

87 
°rög
 
GëLogOuçut
(
CTxnMixGíî©‹Sëtögs
& 
∑rms
);

93 
°rög
 
GëLogOuçut
(
CLﬂdîSëtögs
& 
∑rms
);

99 
°rög
 
GëLogOuçut
(
CDrivîGlobÆSëtögs
& 
∑rms
);

101 
°rög
 
GëLogOuçut
(
CDrivîCESëtögs
& 
∑rms
);

103 
°rög
 
GëLogOuçut
(
CDrivîCEP¨tôi⁄Sëtögs
& 
∑rms
);

105 
°rög
 
GëLogOuçut
(
CDrivîMEESëtögs
& 
∑rms
);

107 
°rög
 
GëLogOuçut
(
CDrivîDMSëtögs
& 
∑rms
);

	@include/workload/tpce/egen/EGenLogger.h

41 #i‚de‡
EGEN_LOGGER_H


42 
	#EGEN_LOGGER_H


	)

44 
	~<s°ªam
>

45 
	~<f°ªam
>

47 
	~"EGíSènd¨dTy≥s.h
"

48 
	~"DrivîP¨amSëtögs.h
"

49 
	~"EGíVîsi⁄.h
"

50 
	~"Ba£Loggî.h
"

51 
	~"EGíLogF‹m©ãrTab.h
"

53 
«me•a˚
 
	gTPCE


56 ˛as†
	cCEGíLoggî
 : 
public
 
CBa£Loggî


58 
¥iv©e
:

59 
m_Fûíame
[
iMaxP©h
];

60 
of°ªam
 
	gm_Log
;

61 
CMuãx
 
	gm_LogLock
;

63 
boﬁ
 
SídToLoggîIm∂
(c⁄° *
szPªfix
, c⁄° *
szTime°amp
, c⁄° *
szMsg
)

65 
	gm_LogLock
.
lock
();

66 
	gm_Log
 << 
	gszPªfix
 << " " << 
	gszTime°amp
 << " " << 
	gszMsg
 << 
	gídl
;

67 
	gm_Log
.
Êush
();

68 i‡(!
	gm_Log
)

70 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CEGenLogger::SendToLoggerImpl");

72 
	gm_LogLock
.
u∆ock
();

73  
	gåue
;

76 
	gpublic
:

77 
CEGíLoggî
(
eDrivîTy≥
 
drvTy≥
, 
UINT32
 
UniqueId
, c⁄° *
szFûíame
, 
CBa£LogF‹m©ãr
* 
pLogF‹m©ãr
)

78 : 
CBa£Loggî
(
drvTy≥
, 
UniqueId
, 
pLogF‹m©ãr
)

81 
°∫˝y
(
m_Fûíame
, 
szFûíame
, (m_Filename));

84 
	gm_Log
.
›í
(
m_Fûíame
);

85 i‡(!
	gm_Log
)

87 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CEGenLogger::CEGenLogger");

	@include/workload/tpce/egen/EGenNullLoader_stdafx.h

42 #i‚de‡
EGEN_NULLLOADER_STDAFX_H


43 
	#EGEN_NULLLOADER_STDAFX_H


	)

45 
	~"NuŒLﬂdî.h
"

46 
	~"NuŒLﬂdîFa˘‹y.h
"

	@include/workload/tpce/egen/EGenStandardTypes.h

43 #i‚de‡
EGEN_STANDARD_TYPES_H


44 
	#EGEN_STANDARD_TYPES_H


	)

47 
	~<c°rög
>

49 
usög
 
«me•a˚
 
	g°d
;

55 
	tUINT
;

78 #ifde‡
WIN32


79 
	~<wödows.h
>

100 
	#PRId64
 "I64d"

	)

105 
	#INT64_CONST
(
x
Ëx ## 
I64


	)

106 
	#UINT64_CONST
(
x
Ëx ## 
uI64


	)

112 
HANDLE
 
	tTThªad
;

113 
CRITICAL_SECTION
 
	tTMuãx
;

118 
	#¢¥ötf
 
_¢¥ötf


	)

122 #i‡
deföed
 (
__unix
Ë|| (
_AIX
)

124 
	~<öây≥s.h
>

126 
öt8_t
 
	tINT8
, *
	tPINT8
;

127 
öt16_t
 
	tINT16
, *
	tPINT16
;

128 
öt32_t
 
	tINT32
, *
	tPINT32
;

129 
öt64_t
 
	tINT64
, *
	tPINT64
;

131 
uöt8_t
 
	tUINT8
, *
	tPUINT8
;

132 
uöt16_t
 
	tUINT16
, *
	tPUINT16
;

133 
uöt32_t
 
	tUINT32
, *
	tPUINT32
;

134 
uöt64_t
 
	tUINT64
, *
	tPUINT64
;

145 
	#INT64_CONST
(
x
Ë
	`INT64_C
(x)

	)

146 
	#UINT64_CONST
(
x
Ë
	`UINT64_C
(x)

	)

152 
	~<±hªad.h
>

154 
±hªad_t
 
	tTThªad
;

155 
±hªad_©å_t
 
	tTThªadAâr
;

156 
±hªad_muãx_t
 
	tTMuãx
;

164 #i‡
deföed
(
DB2
)

167 
UINT16
 
	tDB_INDICATOR
;

169 #ñi‡
deföed
(
MSSQL
)

172 
	tDB_INDICATOR
;

174 #ñi‡
deföed
(
ORACLE
)

177 
sb2
 
	tDB_INDICATOR
;

182 
INT32
 
	tDB_INDICATOR
;

189 
	tTIdít
;

195 
	tTTøde
;

	@include/workload/tpce/egen/EGenTables_common.h

37 #i‚de‡
EGEN_TABLES_COMMON_H


38 
	#EGEN_TABLES_COMMON_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<ˇs£π
>

43 
	~<cm©h
>

44 
	~<f°ªam
>

45 
	~<s°ªam
>

46 
	~<£t
>

47 
	~<m≠
>

48 
	~<io°ªam
>

49 
	~<Æg‹ôhm
>

50 
	~<°rög
>

51 
	~<ve˘‹
>

52 
	~<queue
>

54 
usög
 
«me•a˚
 
	g°d
;

56 
	~"EGíSènd¨dTy≥s.h
"

57 
	~"EGíUtûôõs_°dafx.h
"

58 
	~"TabÀ_Defs.h
"

59 
	~"TabÀTem∂©e.h
"

60 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

61 
	~"I≈utFœtFûesSåu˘uª.h
"

62 
	~"I≈utFûeNoWeight.h
"

63 
	~"Pîs⁄.h
"

64 
	~"Cu°omîSñe˘i⁄.h
"

	@include/workload/tpce/egen/EGenTables_stdafx.h

37 #i‚de‡
EGEN_TABLES_STDAFX_H


38 
	#EGEN_TABLES_STDAFX_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<ˇs£π
>

43 
	~<cm©h
>

44 
	~<f°ªam
>

45 
	~<£t
>

46 
	~<m≠
>

47 
	~<io°ªam
>

48 
	~<Æg‹ôhm
>

49 
	~<°rög
>

50 
	~<ve˘‹
>

51 
	~<queue
>

54 
usög
 
«me•a˚
 
	g°d
;

56 
	~"EGíSènd¨dTy≥s.h
"

57 
	~"EGíUtûôõs_°dafx.h
"

58 
	~"I≈utFûe.h
"

59 
	~"I≈utFûeNoWeight.h
"

60 
	~"FœtFûe.h
"

61 
	~"TabÀ_Defs.h
"

62 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

63 
	~"SecurôyFûe.h
"

64 
	~"Com∑nyFûe.h
"

65 
	~"Com∑nyCom≥tô‹Fûe.h
"

66 
	~"I≈utFœtFûesSåu˘uª.h
"

67 
	~"TabÀTem∂©e.h
"

68 
	~"Pîs⁄.h
"

69 
	~"Cu°omîSñe˘i⁄.h
"

70 
	~"Cu°omîTabÀ.h
"

71 
	~"Com∑nyTabÀ.h
"

72 
	~"Fö™cülTabÀ.h
"

73 
	~"AddªssTabÀ.h
"

74 
	~"Cu°omîAccou¡sAndPîmissi⁄sTabÀ.h
"

75 
	~"Cu°omîTaxøãsTabÀ.h
"

76 
	~"HﬁdögsAndTødesTabÀ.h
"

77 
	~"W©chLi°sAndIãmsTabÀ.h
"

78 
	~"SecurôyTabÀ.h
"

79 
	~"DaûyM¨këTabÀ.h
"

80 
	~"Brokîs.h
"

81 
	~"Se˘‹TabÀ.h
"

82 
	~"Ch¨geTabÀ.h
"

83 
	~"Exch™geTabÀ.h
"

84 
	~"Commissi⁄R©eTabÀ.h
"

85 
	~"Indu°ryTabÀ.h
"

86 
	~"SètusTy≥TabÀ.h
"

87 
	~"TaxøãTabÀ.h
"

88 
	~"TødeTy≥TabÀ.h
"

89 
	~"Com∑nyCom≥tô‹TabÀ.h
"

90 
	~"ZùCodeTabÀ.h
"

91 
	~"NewsIãmAndXRefTabÀ.h
"

92 
	~"MEESecurôy.h
"

93 
	~"La°TødeTabÀ.h
"

94 
	~"TødeGí.h
"

	@include/workload/tpce/egen/EGenUtilities_stdafx.h

37 #i‚de‡
EGEN_UTILITIES_STDAFX_H


38 
	#EGEN_UTILITIES_STDAFX_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<c°ddef
>

43 
	~<c°dio
>

44 #ifde‡
WIN32


45 
	~<wödows.h
>

47 
	~<˚ºno
>

48 
	~<sys/time.h
>

50 
	~<˘ime
>

51 
	~<ˇs£π
>

52 
	~<li°
>

53 
	~<io°ªam
>

54 
	~<s°ªam
>

55 
	~<f°ªam
>

56 
	~<°rög
>

57 
	~<ve˘‹
>

59 #ifde‡
NEED_STDIO_H


60 
	~<°dio.h
>

63 #ifde‡
__SUNPRO_CC


64 
	~<°dio.h
>

67 
usög
 
«me•a˚
 
	g°d
;

70 
	~"EGíSènd¨dTy≥s.h
"

71 
	~"D©eTime.h
"

72 
	~"R™dom.h
"

73 
	~"îr‹.h
"

74 
	~"TabÀC⁄°s.h
"

75 
	~"MiscC⁄°s.h
"

76 
	~"FixedM≠.h
"

77 
	~"FixedAºay.h
"

79 
	~"lockög.h
"

80 
	~"RNGSìds.h
"

81 
	~"EGíVîsi⁄.h
"

82 
	~"M⁄ey.h
"

	@include/workload/tpce/egen/EGenVersion.h

42 #i‚de‡
EGEN_VERSION_H


43 
	#EGEN_VERSION_H


	)

45 
	~"EGíSènd¨dTy≥s.h
"

47 
«me•a˚
 
	gTPCE


52 
GëEGíVîsi⁄_C
(
INT32
 &
iMaj‹Vîsi⁄
, INT32 &
iMö‹Vîsi⁄
, INT32 &
iRevisi⁄Numbî
, INT32 &
iBëaLevñ
);

53 
GëEGíVîsi⁄Såög_C
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
);

54 
PrötEGíVîsi⁄_C
();

55 
GëEGíVîsi⁄Upd©eTime°amp_C
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
);

70 
GëEGíVîsi⁄
(
INT32
 &
iMaj‹Vîsi⁄
, INT32 &
iMö‹Vîsi⁄
, INT32 &
iRevisi⁄Numbî
, INT32 &
iBëaLevñ
);

76 
GëEGíVîsi⁄Såög
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
);

80 
PrötEGíVîsi⁄
();

84 
GëEGíVîsi⁄Upd©eTime°amp
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
);

	@include/workload/tpce/egen/ExchangeTable.h

40 #i‚de‡
EXCHANGE_TABLE_H


41 
	#EXCHANGE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 c⁄° 
	giSecurôyCou¡s
[4][11] = { { 0, 153, 307, 491, 688, 859, 1028, 1203, 1360, 1532, 1704 },

53 
˛ass
 
	gCExch™geTabÀ
 : 
public
 
TabÀTem∂©e
<
EXCHANGE_ROW
>

55 
if°ªam
 
InFûe
;

56 
TIdít
 
	gm_iCurExch™ge
;

57 
INT32
 
	gm_iNumSecurôõs
[4];

64 
CompuãNumSecurôõs
–
TIdít
 
iCu°omîCou¡
 )

66 
INT32
 
	gnumLU
 = 
°©ic_ˇ°
<INT32>(
iCu°omîCou¡
 / 1000);

67 
INT32
 
	gnumLU_Tís
 = 
numLU
 / 10;

68 
INT32
 
	gnumLU_O√s
 = 
numLU
 % 10;

70 
	gi
=0; i<4; i++)

72 
	gm_iNumSecurôõs
[
i
] = 
iSecurôyCou¡s
[i][10] * 
numLU_Tís
 + iSecurôyCou¡s[i][
numLU_O√s
];

76 
	gpublic
:

77 
CExch™geTabÀ
–*
szDúName
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
 )

78 : 
TabÀTem∂©e
<
EXCHANGE_ROW
>()

80 
szFûeName
[
iMaxP©h
];

82 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

83 
°∫ˇt
(
szFûeName
, "Exch™ge.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

85 
	gInFûe
.
›í
–
szFûeName
 );

87 
CompuãNumSecurôõs
(
iC⁄figuªdCu°omîCou¡
);

89 
	gm_iCurExch™ge
 = 1;

92 ~
CExch™geTabÀ
( )

94 
	gInFûe
.
˛o£
();

100 
boﬁ
 
Gíî©eNextRec‹d
()

102 if–
	gInFûe
.
good
() )

104 
	gm_row
.
Lﬂd
(
InFûe
);

105 
	gm_row
.
	gEX_AD_ID
 +
iTIdítShi·
;

106 
	gm_row
.
	gEX_NUM_SYMB
 = 
m_iNumSecurôõs
[
m_iCurExch™ge
-1];

108 
	gm_iCurExch™ge
++;

111 
boﬁ
 
	gxx
 =
InFûe
.
eof
();

112  ( 
	gxx
 );

	@include/workload/tpce/egen/FinalTransform.h

45 #i‚de‡
FINAL_TRANSFORM_H


46 
	#FINAL_TRANSFORM_H


	)

48 
	~"EGíTabÀs_°dafx.h
"

50 
«me•a˚
 
	gTPCE


53 ˛as†
	cCFöÆTønsf‹m


55 
	gpublic
:

57 
Tønsf‹m
(
PACCOUNT_PERMISSION_ROW
 
pRow
)

59 
pRow
->
AP_CA_ID
 +
iTIdítShi·
;

62 
Tønsf‹m
(
PADDRESS_ROW
 
pRow
)

64 
	gpRow
->
	gAD_ID
 +
iTIdítShi·
;

67 
Tønsf‹m
(
PBROKER_ROW
 
pRow
)

69 
	gpRow
->
	gB_ID
 +
iTIdítShi·
;

72 
Tønsf‹m
(
PCASH_TRANSACTION_ROW
 
pRow
)

74 
	gpRow
->
	gCT_T_ID
 +
iTTødeShi·
;

77 
Tønsf‹m
(
PCHARGE_ROW
 
pRow
)

82 
Tønsf‹m
(
PCOMMISSION_RATE_ROW
 
pRow
)

87 
Tønsf‹m
(
PCOMPANY_ROW
 
pRow
)

89 
	gpRow
->
	gCO_ID
 +
iTIdítShi·
;

90 
	gpRow
->
	gCO_AD_ID
 +
iTIdítShi·
;

93 
Tønsf‹m
(
PCOMPANY_COMPETITOR_ROW
 
pRow
)

95 
	gpRow
->
	gCP_CO_ID
 +
iTIdítShi·
;

96 
	gpRow
->
	gCP_COMP_CO_ID
 +
iTIdítShi·
;

99 
Tønsf‹m
(
PCUSTOMER_ROW
 
pRow
)

101 
	gpRow
->
	gC_ID
 +
iTIdítShi·
;

102 
	gpRow
->
	gC_AD_ID
 +
iTIdítShi·
;

105 
Tønsf‹m
(
PCUSTOMER_ACCOUNT_ROW
 
pRow
)

107 
	gpRow
->
	gCA_ID
 +
iTIdítShi·
;

108 
	gpRow
->
	gCA_B_ID
 +
iTIdítShi·
;

109 
	gpRow
->
	gCA_C_ID
 +
iTIdítShi·
;

112 
Tønsf‹m
(
PCUSTOMER_TAXRATE_ROW
 
pRow
)

114 
	gpRow
->
	gCX_C_ID
 +
iTIdítShi·
;

117 
Tønsf‹m
(
PDAILY_MARKET_ROW
 
pRow
)

122 
Tønsf‹m
(
PEXCHANGE_ROW
 
pRow
)

124 
	gpRow
->
	gEX_AD_ID
 +
iTIdítShi·
;

127 
Tønsf‹m
(
PFINANCIAL_ROW
 
pRow
)

129 
	gpRow
->
	gFI_CO_ID
 +
iTIdítShi·
;

132 
Tønsf‹m
(
PHOLDING_ROW
 
pRow
)

134 
	gpRow
->
	gH_T_ID
 +
iTTødeShi·
;

135 
	gpRow
->
	gH_CA_ID
 +
iTIdítShi·
;

138 
Tønsf‹m
(
PHOLDING_HISTORY_ROW
 
pRow
)

140 
	gpRow
->
	gHH_H_T_ID
 +
iTTødeShi·
;

141 
	gpRow
->
	gHH_T_ID
 +
iTTødeShi·
;

144 
Tønsf‹m
(
PHOLDING_SUMMARY_ROW
 
pRow
)

146 
	gpRow
->
	gHS_CA_ID
 +
iTIdítShi·
;

149 
Tønsf‹m
(
PINDUSTRY_ROW
 
pRow
)

154 
Tønsf‹m
(
PLAST_TRADE_ROW
 
pRow
)

159 
Tønsf‹m
(
PNEWS_ITEM_ROW
 
pRow
)

161 
	gpRow
->
	gNI_ID
 +
iTIdítShi·
;

164 
Tønsf‹m
(
PNEWS_XREF_ROW
 
pRow
)

166 
	gpRow
->
	gNX_NI_ID
 +
iTIdítShi·
;

167 
	gpRow
->
	gNX_CO_ID
 +
iTIdítShi·
;

170 
Tønsf‹m
(
PSECTOR_ROW
 
pRow
)

175 
Tønsf‹m
(
PSECURITY_ROW
 
pRow
)

177 
	gpRow
->
	gS_CO_ID
 +
iTIdítShi·
;

180 
Tønsf‹m
(
PSETTLEMENT_ROW
 
pRow
)

182 
	gpRow
->
	gSE_T_ID
 +
iTTødeShi·
;

185 
Tønsf‹m
(
PSTATUS_TYPE_ROW
 
pRow
)

190 
Tønsf‹m
(
PTAXRATE_ROW
 
pRow
)

195 
Tønsf‹m
(
PTRADE_ROW
 
pRow
)

197 
	gpRow
->
	gT_ID
 +
iTTødeShi·
;

198 
	gpRow
->
	gT_CA_ID
 +
iTIdítShi·
;

201 
Tønsf‹m
(
PTRADE_HISTORY_ROW
 
pRow
)

203 
	gpRow
->
	gTH_T_ID
 +
iTTødeShi·
;

206 
Tønsf‹m
(
PTRADE_REQUEST_ROW
 
pRow
)

208 
	gpRow
->
	gTR_T_ID
 +
iTTødeShi·
;

209 
	gpRow
->
	gTR_B_ID
 +
iTIdítShi·
;

212 
Tønsf‹m
(
PTRADE_TYPE_ROW
 
pRow
)

217 
Tønsf‹m
(
PWATCH_ITEM_ROW
 
pRow
)

219 
	gpRow
->
	gWI_WL_ID
 +
iTIdítShi·
;

222 
Tønsf‹m
(
PWATCH_LIST_ROW
 
pRow
)

224 
	gpRow
->
	gWL_ID
 +
iTIdítShi·
;

225 
	gpRow
->
	gWL_C_ID
 +
iTIdítShi·
;

228 
Tønsf‹m
(
PZIP_CODE_ROW
 
pRow
)

235 
Tønsf‹mCu°omîId
(
TIdít
* 
pC_ID
)

237 *
	gpC_ID
 +
iTIdítShi·
;

240 
Tønsf‹mCu°omîAccou¡Id
(
TIdít
* 
pCA_ID
)

242 *
	gpCA_ID
 +
iTIdítShi·
;

245 
Tønsf‹mTødeId
(
TTøde
* 
pT_ID
)

247 *
	gpT_ID
 +
iTTødeShi·
;

	@include/workload/tpce/egen/FinancialTable.h

40 #i‚de‡
FINANCIAL_TABLE_H


41 
	#FINANCIAL_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Com∑nyTabÀ.h
"

45 
	~"M⁄ey.h
"

47 
«me•a˚
 
	gTPCE


50 c⁄° 
	giYórsF‹Fös
 = 5;

51 c⁄° 
	giQu¨ãrsInYór
 = 4;

52 c⁄° 
	giFösPîCom∑ny
 = 
iYórsF‹Fös
 * 
iQu¨ãrsInYór
;

55 c⁄° 
	gfDûuãdSh¨esMu…ùlõr
 = 1.1;

58 c⁄° 
	gfFöD©aDownMu…
 = 0.9;

59 c⁄° 
	gfFöD©aUpMu…
 = 1.15;

60 c⁄° 
	gfFöD©aIn¸
 = 0.00000000000001;

62 c⁄° 
	gfFö™cülRevíueMö
 = 100000.00;

63 c⁄° 
	gfFö™cülRevíueMax
 = 16000000000.00;

65 c⁄° 
	gfFö™cülE¨nögsMö
 = -300000000.00;

66 c⁄° 
	gfFö™cülE¨nögsMax
 = 3000000000.00;

68 c⁄° 
INT64
 
	giFö™cülOutBasicMö
 = 400000;

69 c⁄° 
INT64
 
	giFö™cülOutBasicMax
 = 9500000000;

71 c⁄° 
	gfFö™cülInvítMö
 = 0.00;

72 c⁄° 
	gfFö™cülInvítMax
 = 2000000000.00;

74 c⁄° 
	gfFö™cülAs£tsMö
 = 100000.00;

75 c⁄° 
	gfFö™cülAs£tsMax
 = 65000000000.00;

77 c⁄° 
	gfFö™cülLübMö
 = 100000.00;

78 c⁄° 
	gfFö™cülLübMax
 = 35000000000.00;

83 c⁄° 
	giRNGSkùO√RowFö™cül
 = 6 + 
iFösPîCom∑ny
 * 6;

85 
	sFINANCIAL_GEN_ROW


87 
FINANCIAL_ROW
 
	gm_fö™cüls
[ 
iFösPîCom∑ny
 ];

88 } *
	tPFINANCIAL_GEN_ROW
;

90 
˛ass
 
	gCFö™cülTabÀ
 : 
public
 
TabÀTem∂©e
<
FINANCIAL_GEN_ROW
>

92 
CCom∑nyTabÀ
 
m_Com∑nyTabÀ
;

93 
	gm_iFöYór
;

94 
	gm_iFöQu¨ãr
;

97 
	gm_iRowsGíî©edPîCom∑ny
;

100 
boﬁ
 
	gm_bM‹eCom∑nõs
;

101 
TIdít
 
	gm_iFö™cülCou¡F‹O√LﬂdUnô
;

108 
boﬁ
 
Gíî©eFö™cülRows
()

110 
TIdít
 
	gFI_CO_ID
;

111 
	giFöYór
, 
	giFöQu¨ãr
;

112 
	gi
;

113 
CM⁄ey
 
	gfRev
, 
	gfE¨n
, 
	gfInvít
, 
	gfAs£ts
, 
	gfLüb
, 
	gfBasicEPS
, 
	gfDûutEPS
, 
	gfM¨gö
;

114 
INT64
 
	giOutBasic
, 
	giOutDûut
;

117 
	gFI_CO_ID
 = 
m_Com∑nyTabÀ
.
GëCuºítCO_ID
();

118 
	giFöYór
 = 
m_iFöYór
;

119 
	giFöQu¨ãr
 = 
m_iFöQu¨ãr
;

121 
	gfRev
 = 
m_∫d
.
RndDoubÀIn¸R™ge
–
fFö™cülRevíueMö
, 
fFö™cülRevíueMax
, 0.01 );

122 
	gfE¨n
 = 
m_∫d
.
RndDoubÀIn¸R™ge
–
fFö™cülE¨nögsMö
,

123 
fRev
 < 
fFö™cülE¨nögsMax
 ? fRev.
DﬁœrAmou¡
() : fFinancialEarningsMax,

125 
	giOutBasic
 = 
m_∫d
.
RndI¡64R™ge
–
iFö™cülOutBasicMö
, 
iFö™cülOutBasicMax
 );

126 
	giOutDûut
 = 0;

127 
	gfInvít
 = 
m_∫d
.
RndDoubÀIn¸R™ge
–
fFö™cülInvítMö
, 
fFö™cülInvítMax
, 0.01 );

128 
	gfAs£ts
 = 
m_∫d
.
RndDoubÀIn¸R™ge
–
fFö™cülAs£tsMö
, 
fFö™cülAs£tsMax
, 0.01 );

129 
	gfLüb
 = 
m_∫d
.
RndDoubÀIn¸R™ge
–
fFö™cülLübMö
, 
fFö™cülLübMax
, 0.01 );

130 
	gfBasicEPS
 = 0.00;

131 
	gfDûutEPS
 = 0.00;

132 
	gfM¨gö
 = 0.00;

134 
	gi
 = 0; i<
	giFösPîCom∑ny
; ++i)

137 
	gfRev
 = 
fRev
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
);

138 
	gfE¨n
 = 
fE¨n
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
);

139 i‡(
	gfE¨n
 >
fRev
)

141 
fE¨n
 = fE¨¿* 
fFöD©aDownMu…
;

143 
	giOutBasic
 = (
INT64
)(()
iOutBasic
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
));

144 
	giOutDûut
 = (
INT64
)(()
iOutBasic
 * 
fDûuãdSh¨esMu…ùlõr
);

145 
	gfInvít
 = 
fInvít
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
);

146 
	gfAs£ts
 = 
fAs£ts
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
);

147 
	gfLüb
 = 
fLüb
 * 
m_∫d
.
RndDoubÀIn¸R™ge
(
fFöD©aDownMu…
, 
fFöD©aUpMu…
, 
fFöD©aIn¸
);

148 
	gfBasicEPS
 = 
fE¨n
 / ()
iOutBasic
;

149 
	gfDûutEPS
 = 
fE¨n
 / ()
iOutDûut
;

150 
	gfM¨gö
 = 
fE¨n
 / 
fRev
.
DﬁœrAmou¡
();

153 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_CO_ID
 = 
FI_CO_ID
;

154 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_YEAR
 = 
iFöYór
;

155 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_QTR
 = 
iFöQu¨ãr
 + 1;

156 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_QTR_START_DATE
.
Së
(
iFöYór
, 
iFöQu¨ãr
 * 3 + 1, 1);

157 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_REVENUE
 = 
fRev
.
DﬁœrAmou¡
();

158 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_NET_EARN
 = 
fE¨n
.
DﬁœrAmou¡
();

159 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_OUT_BASIC
 = 
iOutBasic
;

160 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_OUT_DILUT
 = 
iOutDûut
;

161 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_INVENTORY
 = 
fInvít
.
DﬁœrAmou¡
();

162 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_ASSETS
 = 
fAs£ts
.
DﬁœrAmou¡
();

163 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_LIABILITY
 = 
fLüb
.
DﬁœrAmou¡
();

164 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_BASIC_EPS
 = 
fBasicEPS
.
DﬁœrAmou¡
();

165 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_DILUT_EPS
 = 
fDûutEPS
.
DﬁœrAmou¡
();

166 
	gm_row
.
	gm_fö™cüls
[
i
].
	gFI_MARGIN
 = 
fM¨gö
.
DﬁœrAmou¡
();

169 
	giFöQu¨ãr
++;

170 i‡(
	giFöQu¨ãr
 =
iQu¨ãrsInYór
)

172 
iFöQu¨ãr
 = 0;

173 ++
	giFöYór
;

177  
	gm_Com∑nyTabÀ
.
Gíî©eNextCO_ID
();

189 
InôNextLﬂdUnô
()

191 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

192 (
RNGSEED
)
m_iLa°RowNumbî
 * 
iRNGSkùO√RowFö™cül
));

194 
CÀ¨Rec‹d
();

197 
	gpublic
:

198 
CFö™cülTabÀ
(
CI≈utFûes
 
öputFûes
,

199 
TIdít
 
iCu°omîCou¡
,

200 
TIdít
 
iSèπFromCu°omî
)

201 : 
TabÀTem∂©e
<
FINANCIAL_GEN_ROW
>()

202 , 
m_Com∑nyTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

203 , 
m_iRowsGíî©edPîCom∑ny
(
iFösPîCom∑ny
)

204 , 
m_bM‹eCom∑nõs
(
åue
)

208 
	gm_iFöYór
 = 
iDaûyM¨këBa£Yór
;

209 
	gm_iFöQu¨ãr
 = 
iDaûyM¨këBa£M⁄th
 / 3;

211 
	gm_bM‹eRec‹ds
 = 
åue
;

213 
	gm_iFö™cülCou¡F‹O√LﬂdUnô
 = 
öputFûes
.
Com∑ny
->
CÆcuœãCom∑nyCou¡
(
iDeÁu…LﬂdUnôSize
Ë* 
iFösPîCom∑ny
;

215 
	gm_iLa°RowNumbî
 = 
öputFûes
.
Com∑ny
->
CÆcuœãSèπFromCom∑ny
(
iSèπFromCu°omî
Ë* 
iFösPîCom∑ny
;

218 
boﬁ
 
Gíî©eNextRec‹d
()

222 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iFö™cülCou¡F‹O√LﬂdUnô
 == 0)

224 
InôNextLﬂdUnô
();

227 ++
	gm_iLa°RowNumbî
;

229 ++
	gm_iRowsGíî©edPîCom∑ny
;

231 i‡(
	gm_iRowsGíî©edPîCom∑ny
 >
iFösPîCom∑ny
)

233 i‡(
m_bM‹eCom∑nõs
)

237 
m_bM‹eCom∑nõs
 = 
Gíî©eFö™cülRows
();

239 
	gm_iRowsGíî©edPîCom∑ny
 = 0;

244 i‡(!
	gm_bM‹eCom∑nõs
 && (
	gm_iRowsGíî©edPîCom∑ny
 =
iFösPîCom∑ny
 - 1))

246 
m_bM‹eRec‹ds
 = 
Ál£
;

249  
M‹eRec‹ds
();

252 
PFINANCIAL_ROW
 
GëRow
()

254  &
	gm_row
.
	gm_fö™cüls
[
m_iRowsGíî©edPîCom∑ny
];

	@include/workload/tpce/egen/FixedArray.h

41 #i‚de‡
FIXED_ARRAY_H


42 
	#FIXED_ARRAY_H


	)

44 
	~"EGíUtûôõs_°dafx.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCFixedAºayEº
 : 
public
 
CBa£Eº


51 
public
:

52 
	eeFixedAºayEºs


54 
eNŸEnoughMem‹y
,

55 
	geIndexOutOfR™ge
,

56 
	geOvîÊow


59 
CFixedAºayEº
–
eFixedAºayEºs
 
iEº
, c⁄° *
szLoc
Ë: 
CBa£Eº
(iErr, szLoc) {};

60 
Eº‹Ty≥
(Ë{ 
	gERR_TYPE_FIXED_ARRAY
;};

62 c⁄° *
Eº‹Text
() const

64 
	gi
;

65 c⁄° * 
	gszEºs
[] = {

72 
	gi
 = 0; 
	gszEºs
[
i
][0]; i++)

75 i‡–
	gi
 =
m_idMsg
 )

79 (
	gszEºs
[
i
][0] ? szEºs[i] : 
ERR_UNKNOWN
);

91 
	gãm∂©e
 <
ty≥«me
 
	gTD©a
,Åy≥«mê
	gTEÀmítsLimôs
>

92 ˛as†
	cCFixedAºay


95 
TEÀmítsLimôs
 
	gm_sLimôs
;

96 
	gm_iTŸÆEÀmíts
;

97 
	gm_iCuºítEÀmíts
;

98 
TD©a
 *
	gm_pD©a
;

100 
	gpublic
:

101 
TD©a
* 
	tPD©a
;

104 
CFixedAºay
()

105 : 
m_iCuºítEÀmíts
(0)

107 
m_iTŸÆEÀmíts
 = 
m_sLimôs
.
TŸÆEÀmíts
();

109 
	gm_pD©a
 = 
√w
 
TD©a
[
m_iTŸÆEÀmíts
];

112 ~
CFixedAºay
()

114 i‡(
	gm_pD©a
 !
NULL
)

115 
dñëe
 [] 
m_pD©a
;

120 
Add
(
TD©a
 *
pD©a
)

122 i‡(
	gm_iCuºítEÀmíts
 < 
	gm_iTŸÆEÀmíts
)

125 
	gm_pD©a
[
m_iCuºítEÀmíts
] = *
pD©a
;

127 ++
	gm_iCuºítEÀmíts
;

132 
throw
 
CFixedAºayEº
(CFixedAºayEº::
eOvîÊow
, "CFixedArray::Add");

137 
	gTD©a
& 
	g›î©‹
[](
	giIndex
)

139 
as£π
(
iIndex
>=0 && iIndex < 
m_iTŸÆEÀmíts
);

141  
	gm_pD©a
[
iIndex
];

145 
size
(Ë{ 
	gm_iTŸÆEÀmíts
;}

	@include/workload/tpce/egen/FixedMap.h

43 #i‚de‡
FIXED_MAP_H


44 
	#FIXED_MAP_H


	)

46 
	~"EGíUtûôõs_°dafx.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCFixedM≠Eº
 : 
public
 
CBa£Eº


53 
public
:

54 
	eeFixedM≠Eºs


56 
eNŸEnoughMem‹y
,

57 
	geKeyOutOfR™ge
,

58 
	geOvîÊow


61 
CFixedM≠Eº
–
eFixedM≠Eºs
 
iEº
, c⁄° *
szLoc
Ë: 
CBa£Eº
(iErr, szLoc) {};

62 
Eº‹Ty≥
(Ë{ 
	gERR_TYPE_FIXED_MAP
;};

64 c⁄° *
Eº‹Text
() const

66 
	gi
;

67 c⁄° * 
	gszEºs
[] = {

74 
	gi
 = 0; 
	gszEºs
[
i
][0]; i++)

77 i‡–
	gi
 =
m_idMsg
 )

81 (
	gszEºs
[
i
][0] ? szEºs[i] : 
ERR_UNKNOWN
);

96 
	gãm∂©e
 <
ty≥«me
 
	gTD©a
,Åy≥«mê
	gTKeyAndEÀmítsLimôs
>

97 ˛as†
	cCFixedM≠


102 
TKeyAndEÀmítsLimôs
 
	gm_sLimôs
;

103 
	gm_iHighe°Key
;

104 
UINT
 
	gm_iCuºítEÀmíts
;

105 
TD©a
 *
	gm_pD©a
;

106 
UINT
 *
	gm_keys
;

111 
	gpublic
:

112 
TD©a
* 
	tPD©a
;

115 
CFixedM≠
()

116 : 
m_iCuºítEÀmíts
(0)

118 
m_iHighe°Key
 = 
m_sLimôs
.
Highe°Key
();

120 
	gm_keys
 = 
√w
 
UINT
[
m_iHighe°Key
];

122 
	gm_pD©a
 = 
√w
 
TD©a
[
m_sLimôs
.
TŸÆEÀmíts
()];

125 ~
CFixedM≠
()

127 i‡(
	gm_keys
 !
NULL
)

128 
dñëe
 [] 
m_keys
;

130 i‡(
	gm_pD©a
 !
NULL
)

131 
dñëe
 [] 
m_pD©a
;

138 
Add
(
iKey
, 
TD©a
 *
pD©a
, 
iPªvKeysToFûl
 = 1)

140 i‡(
m_iCuºítEÀmíts
 < 
m_sLimôs
.
TŸÆEÀmíts
())

142 i‡(
iKey
>=0 && iKey < 
m_iHighe°Key
)

145 
j
 = 0; 
	gj
 < 
	giPªvKeysToFûl
 && (
	giKey
 - j)>=0; ++j)

146 
	gm_keys
[
iKey
 - 
j
] = 
m_iCuºítEÀmíts
;

148 
	gm_pD©a
[
m_iCuºítEÀmíts
] = *
pD©a
;

150 ++
	gm_iCuºítEÀmíts
;

154 
throw
 
CFixedM≠Eº
(CFixedM≠Eº::
eKeyOutOfR™ge
, "CFixedMap::Add");

160 
throw
 
CFixedM≠Eº
(CFixedM≠Eº::
eOvîÊow
, "CFixedMap::Add");

166 
TD©a
* 
GëEÀmít
(
iKey
)

168 
as£π
(
iKey
>=0 && iKey < 
m_iHighe°Key
);

170  &
	gm_pD©a
[
m_keys
[
iKey
]];

174 
TD©a
* 
GëEÀmítByPassKey
–
UINT
 
EÀmítID
 )

176 
as£π
–
EÀmítID
 < 
m_iCuºítEÀmíts
 );

177 –&
	gm_pD©a
[
EÀmítID
] );

181 
UINT
 
EÀmítCou¡
( )

183  
	gm_iCuºítEÀmíts
;

187 
GëHighe°Key
(Ë{ 
	gm_iHighe°Key
;}

	@include/workload/tpce/egen/FlatAccountPermissionLoad.h

41 #i‚de‡
FLAT_ACCOUNT_PERMISSION_LOAD_H


42 
	#FLAT_ACCOUNT_PERMISSION_LOAD_H


	)

44 
	~"FœtFûeLﬂd_comm⁄.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCFœtAccou¡Pîmissi⁄Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
ACCOUNT_PERMISSION_ROW
>

51 
public
:

52 
CFœtAccou¡Pîmissi⁄Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
Ë: 
CFœtFûeLﬂdî
<
ACCOUNT_PERMISSION_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

57 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

59 
	grc
 = 
Ârötf
–
hOutFûe
, 
Accou¡Pîmissi⁄RowFmt
,

60 
√xt_ªc‹d
->
AP_CA_ID
,

61 
√xt_ªc‹d
->
AP_ACL
,

62 
√xt_ªc‹d
->
AP_TAX_ID
,

63 
√xt_ªc‹d
->
AP_L_NAME
,

64 
√xt_ªc‹d
->
AP_F_NAME


67 i‡(
	grc
 < 0) {

68 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatAccountPermissionLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatAddressLoad.h

41 #i‚de‡
FLAT_ADDRESS_LOAD_H


42 
	#FLAT_ADDRESS_LOAD_H


	)

44 
	~"FœtFûeLﬂd_comm⁄.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCFœtAddªssLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
ADDRESS_ROW
>

51 
public
:

52 
CFœtAddªssLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
ADDRESS_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

57 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

59 
	grc
 = 
Ârötf
–
hOutFûe
, 
AddªssRowFmt
,

60 
√xt_ªc‹d
->
AD_ID
,

61 
√xt_ªc‹d
->
AD_LINE1
,

62 
√xt_ªc‹d
->
AD_LINE2
,

63 
√xt_ªc‹d
->
AD_ZC_CODE
,

64 
√xt_ªc‹d
->
AD_CTRY


67 i‡(
	grc
 < 0) {

68 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatAddressLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatBrokerLoad.h

41 #i‚de‡
FLAT_BROKER_LOAD_H


42 
	#FLAT_BROKER_LOAD_H


	)

44 
	~"FœtFûeLﬂd_comm⁄.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCFœtBrokîLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
BROKER_ROW
>

51 
public
:

52 
CFœtBrokîLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
BROKER_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

57 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

59 
	grc
 = 
Ârötf
–
hOutFûe
, 
BrokîRowFmt
,

60 
√xt_ªc‹d
->
B_ID
,

61 
√xt_ªc‹d
->
B_ST_ID
,

62 
√xt_ªc‹d
->
B_NAME
,

63 
√xt_ªc‹d
->
B_NUM_TRADES
,

64 
√xt_ªc‹d
->
B_COMM_TOTAL


67 i‡(
	grc
 < 0) {

68 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatBrokerLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCashTransactionLoad.h

40 #i‚de‡
FLAT_CASH_TRANSACTION_LOAD_H


41 
	#FLAT_CASH_TRANSACTION_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCashTønß˘i⁄Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
CASH_TRANSACTION_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_CT_DTS
;

52 
	gpublic
:

53 
CFœtCashTønß˘i⁄Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
CASH_TRANSACTION_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_CT_DTS
 = 
√xt_ªc‹d
->
CT_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
CashTønß˘i⁄RowFmt
,

62 
√xt_ªc‹d
->
CT_T_ID
,

63 
Fœt_CT_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

64 
√xt_ªc‹d
->
CT_AMT
,

65 
√xt_ªc‹d
->
CT_NAME


68 i‡(
	grc
 < 0) {

69 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCashTransactionLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatChargeLoad.h

40 #i‚de‡
FLAT_CHARGE_LOAD_H


41 
	#FLAT_CHARGE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCh¨geLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
CHARGE_ROW
>

50 
public
:

51 
CFœtCh¨geLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
CHARGE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Ch¨geRowFmt
,

59 
√xt_ªc‹d
->
CH_TT_ID
,

60 
√xt_ªc‹d
->
CH_C_TIER
,

61 
√xt_ªc‹d
->
CH_CHRG


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatChargeLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCommissionRateLoad.h

40 #i‚de‡
FLAT_COMMISSION_RATE_LOAD_H


41 
	#FLAT_COMMISSION_RATE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCommissi⁄R©eLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
COMMISSION_RATE_ROW
>

50 
public
:

51 
CFœtCommissi⁄R©eLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
COMMISSION_RATE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Commissi⁄R©eRowFmt
,

59 
√xt_ªc‹d
->
CR_C_TIER
,

60 
√xt_ªc‹d
->
CR_TT_ID
,

61 
√xt_ªc‹d
->
CR_EX_ID
,

62 
√xt_ªc‹d
->
CR_FROM_QTY
,

63 
√xt_ªc‹d
->
CR_TO_QTY
,

64 
√xt_ªc‹d
->
CR_RATE


66 i‡(
	grc
 < 0) {

67 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCommissionRateLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCompanyCompetitorLoad.h

40 #i‚de‡
FLAT_COMPANY_COMPETITOR_LOAD_H


41 
	#FLAT_COMPANY_COMPETITOR_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCom∑nyCom≥tô‹Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
COMPANY_COMPETITOR_ROW
>

50 
public
:

51 
CFœtCom∑nyCom≥tô‹Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
COMPANY_COMPETITOR_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Com∑nyCom≥tô‹RowFmt
,

59 
√xt_ªc‹d
->
CP_CO_ID
,

60 
√xt_ªc‹d
->
CP_COMP_CO_ID
,

61 
√xt_ªc‹d
->
CP_IN_ID


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCompanyCompetitorLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCompanyLoad.h

40 #i‚de‡
FLAT_COMPANY_LOAD_H


41 
	#FLAT_COMPANY_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCom∑nyLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
COMPANY_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_CO_OPEN_DATE
;

52 
	gpublic
:

53 
CFœtCom∑nyLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
COMPANY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_CO_OPEN_DATE
 = 
√xt_ªc‹d
->
CO_OPEN_DATE
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
Com∑nyRowFmt
,

62 
√xt_ªc‹d
->
CO_ID
,

63 
√xt_ªc‹d
->
CO_ST_ID
,

64 
√xt_ªc‹d
->
CO_NAME
,

65 
√xt_ªc‹d
->
CO_IN_ID
,

66 
√xt_ªc‹d
->
CO_SP_RATE
,

67 
√xt_ªc‹d
->
CO_CEO
,

68 
√xt_ªc‹d
->
CO_AD_ID
,

69 
√xt_ªc‹d
->
CO_DESC
,

70 
Fœt_CO_OPEN_DATE
.
ToSå
(
FœtFûeD©eF‹m©
)

72 i‡(
	grc
 < 0) {

73 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCompanyLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCustomerAccountLoad.h

40 #i‚de‡
FLAT_CUSTOMER_ACCOUNT_LOAD_H


41 
	#FLAT_CUSTOMER_ACCOUNT_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCu°omîAccou¡Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
CUSTOMER_ACCOUNT_ROW
>

50 
public
:

51 
CFœtCu°omîAccou¡Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
CUSTOMER_ACCOUNT_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Cu°omîAccou¡RowFmt
,

59 
√xt_ªc‹d
->
CA_ID
,

60 
√xt_ªc‹d
->
CA_B_ID
,

61 
√xt_ªc‹d
->
CA_C_ID
,

62 
√xt_ªc‹d
->
CA_NAME
,

63 ()
√xt_ªc‹d
->
CA_TAX_ST
,

64 
√xt_ªc‹d
->
CA_BAL


66 i‡(
	grc
 < 0) {

67 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCustomerAccountLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCustomerLoad.h

41 #i‚de‡
FLAT_CUSTOMER_LOAD_H


42 
	#FLAT_CUSTOMER_LOAD_H


	)

44 
	~"FœtFûeLﬂd_comm⁄.h
"

46 
«me•a˚
 
	gTPCE


49 
˛ass
 
	gCFœtCu°omîLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
CUSTOMER_ROW
>

51 
¥iv©e
:

52 
CD©eTime
 
Fœt_C_DOB
;

53 
	gpublic
:

54 
CFœtCu°omîLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
CUSTOMER_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
) {};

59 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

61 
	gFœt_C_DOB
 = 
√xt_ªc‹d
->
C_DOB
;

62 
	grc
 = 
Ârötf
–
hOutFûe
, 
Cu°omîRowFmt
,

63 
√xt_ªc‹d
->
C_ID
,

64 
√xt_ªc‹d
->
C_TAX_ID
,

65 
√xt_ªc‹d
->
C_ST_ID
,

66 
√xt_ªc‹d
->
C_L_NAME
,

67 
√xt_ªc‹d
->
C_F_NAME
,

68 
√xt_ªc‹d
->
C_M_NAME
,

69 
√xt_ªc‹d
->
C_GNDR
,

70 ()
√xt_ªc‹d
->
C_TIER
,

71 
Fœt_C_DOB
.
ToSå
(
FœtFûeD©eF‹m©
),

72 
√xt_ªc‹d
->
C_AD_ID
,

73 
√xt_ªc‹d
->
C_CTRY_1
,

74 
√xt_ªc‹d
->
C_AREA_1
,

75 
√xt_ªc‹d
->
C_LOCAL_1
,

76 
√xt_ªc‹d
->
C_EXT_1
,

77 
√xt_ªc‹d
->
C_CTRY_2
,

78 
√xt_ªc‹d
->
C_AREA_2
,

79 
√xt_ªc‹d
->
C_LOCAL_2
,

80 
√xt_ªc‹d
->
C_EXT_2
,

81 
√xt_ªc‹d
->
C_CTRY_3
,

82 
√xt_ªc‹d
->
C_AREA_3
,

83 
√xt_ªc‹d
->
C_LOCAL_3
,

84 
√xt_ªc‹d
->
C_EXT_3
,

85 
√xt_ªc‹d
->
C_EMAIL_1
,

86 
√xt_ªc‹d
->
C_EMAIL_2


88 i‡(
	grc
 < 0) {

89 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCustomerLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatCustomerTaxrateLoad.h

40 #i‚de‡
FLAT_CUSTOMER_TAXRATE_LOAD_H


41 
	#FLAT_CUSTOMER_TAXRATE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtCu°omîTaxøãLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
CUSTOMER_TAXRATE_ROW
>

50 
public
:

51 
CFœtCu°omîTaxøãLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
CUSTOMER_TAXRATE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Cu°omîTaxøãRowFmt
,

59 
√xt_ªc‹d
->
CX_TX_ID
,

60 
√xt_ªc‹d
->
CX_C_ID


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatCustomerTaxrateLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatDailyMarketLoad.h

40 #i‚de‡
FLAT_DAILY_MARKET_LOAD_H


41 
	#FLAT_DAILY_MARKET_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtDaûyM¨këLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
DAILY_MARKET_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_DM_DATE
;

52 
	gpublic
:

53 
CFœtDaûyM¨këLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
DAILY_MARKET_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_DM_DATE
 = 
√xt_ªc‹d
->
DM_DATE
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
DaûyM¨këRowFmt
,

62 
Fœt_DM_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

63 
√xt_ªc‹d
->
DM_S_SYMB
,

64 
√xt_ªc‹d
->
DM_CLOSE
,

65 
√xt_ªc‹d
->
DM_HIGH
,

66 
√xt_ªc‹d
->
DM_LOW
,

67 
√xt_ªc‹d
->
DM_VOL


70 i‡(
	grc
 < 0) {

71 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatDailyMarketLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatExchangeLoad.h

40 #i‚de‡
FLAT_EXCHANGE_LOAD_H


41 
	#FLAT_EXCHANGE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtExch™geLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
EXCHANGE_ROW
>

50 
public
:

51 
CFœtExch™geLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
EXCHANGE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Exch™geRowFmt
,

59 
√xt_ªc‹d
->
EX_ID
,

60 
√xt_ªc‹d
->
EX_NAME
,

61 
√xt_ªc‹d
->
EX_NUM_SYMB
,

62 
√xt_ªc‹d
->
EX_OPEN
,

63 
√xt_ªc‹d
->
EX_CLOSE
,

64 
√xt_ªc‹d
->
EX_DESC
,

65 
√xt_ªc‹d
->
EX_AD_ID


68 i‡(
	grc
 < 0) {

69 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatExchangeLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatFile.h

40 #i‚de‡
FLAT_FILE_H


41 
	#FLAT_FILE_H


	)

43 
	~"EGíUtûôõs_°dafx.h
"

45 
«me•a˚
 
	gTPCE


48 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gTKeyAndEÀmítsLimôs
> cœs†
	cCFœtFûe


50 
	g¥Ÿe˘ed
:

52 
CFixedAºay
<
	tT
, 
	tTKeyAndEÀmítsLimôs
> 
	tCFûeInMem‹yLi°
;

54 
CFûeInMem‹yLi°
 
	gm_li°
;

56 
RódLi°
(c⁄° *
szLi°Fûe
)

58 
if°ªam
 
	gtmpFûe
;

60 i‡(
	gszLi°Fûe
)

62 
	gtmpFûe
.
›í
(
szLi°Fûe
, 
ios_ba£
::
ö
);

63 i‡(
	gtmpFûe
)

65 
RódLi°
(
tmpFûe
);

66 
	gtmpFûe
.
˛o£
();

70 
	gtmpFûe
.
˛o£
();

71 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CFlatFile::ReadList");

76 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CFlatFile::ReadList");

80 
RódLi°
(c⁄° 
°rög
 &
°r
)

82 
i°rög°ªam
 
tmpFûe
(
°r
);

83 
RódLi°
(
tmpFûe
);

86 
RódLi°
(
i°ªam
 &
tmpFûe
)

88 
T
 
	grow
;

89 
mem£t
(&
row
, 0, (row));

91 
	gtmpFûe
.
good
())

93 
	grow
.
Lﬂd
(
tmpFûe
);

96 if–! 
	gtmpFûe
.
eof
() )

98 
	gm_li°
.
Add
(&
row
);

105 
	gpublic
:

108 
CFœtFûe
(c⁄° *
szLi°Fûe
)

110 
RódLi°
(
szLi°Fûe
);

113 
CFœtFûe
(c⁄° 
°rög
 &
°r
)

115 
RódLi°
(
°r
);

117 
	gvútuÆ
 ~
CFœtFûe
() {}

120 
T
* 
GëRec‹d
(
ödex
Ë{  &
	gm_li°
[index]; };

123 
UINT
 
GëSize
(Ë{ (
	gUINT
)
	gm_li°
.
size
();}

	@include/workload/tpce/egen/FlatFileLoad_common.h

37 #i‚de‡
FLAT_FILE_LOAD_COMMON_H


38 
	#FLAT_FILE_LOAD_COMMON_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<io°ªam
>

43 
	~<f°ªam
>

44 
	~<c°dio
>

46 
	~"FœtFûeLﬂdî.h
"

47 
	~"TabÀ_Defs.h
"

48 
	~"D©eTime.h
"

49 
	~"îr‹.h
"

	@include/workload/tpce/egen/FlatFileLoad_stdafx.h

37 #i‚de‡
FLAT_FILE_LOAD_STDAFX_H


38 
	#FLAT_FILE_LOAD_STDAFX_H


	)

40 
	#WIN32_LEAN_AND_MEAN


41 

	)

42 
	~<io°ªam
>

43 
	~<f°ªam
>

44 
	~<c°dio
>

46 
	~"EGíUtûôõs_°dafx.h
"

47 
	~"TabÀ_Defs.h
"

48 
	~"EGíBa£Lﬂdî_°dafx.h
"

49 
	~"FœtFûeLﬂdî.h
"

50 
	~"FœtAccou¡Pîmissi⁄Lﬂd.h
"

51 
	~"FœtAddªssLﬂd.h
"

52 
	~"FœtBrokîLﬂd.h
"

53 
	~"FœtCashTønß˘i⁄Lﬂd.h
"

54 
	~"FœtCh¨geLﬂd.h
"

55 
	~"FœtCommissi⁄R©eLﬂd.h
"

56 
	~"FœtCom∑nyLﬂd.h
"

57 
	~"FœtCom∑nyCom≥tô‹Lﬂd.h
"

58 
	~"FœtCu°omîLﬂd.h
"

59 
	~"FœtCu°omîAccou¡Lﬂd.h
"

60 
	~"FœtCu°omîTaxøãLﬂd.h
"

61 
	~"FœtDaûyM¨këLﬂd.h
"

62 
	~"FœtExch™geLﬂd.h
"

63 
	~"FœtFö™cülLﬂd.h
"

64 
	~"FœtHﬁdögLﬂd.h
"

65 
	~"FœtHﬁdögHi°‹yLﬂd.h
"

66 
	~"FœtHﬁdögSumm¨yLﬂd.h
"

67 
	~"FœtIndu°ryLﬂd.h
"

68 
	~"FœtLa°TødeLﬂd.h
"

69 
	~"FœtNewsIãmLﬂd.h
"

70 
	~"FœtNewsXRefLﬂd.h
"

71 
	~"FœtSe˘‹Lﬂd.h
"

72 
	~"FœtSecurôyLﬂd.h
"

73 
	~"FœtSëéemítLﬂd.h
"

74 
	~"FœtSètusTy≥Lﬂd.h
"

75 
	~"FœtTaxøãLﬂd.h
"

76 
	~"FœtTødeLﬂd.h
"

77 
	~"FœtTødeHi°‹yLﬂd.h
"

78 
	~"FœtTødeReque°Lﬂd.h
"

79 
	~"FœtTødeTy≥Lﬂd.h
"

80 
	~"FœtW©chIãmLﬂd.h
"

81 
	~"FœtW©chLi°Lﬂd.h
"

82 
	~"FœtZùCodeLﬂd.h
"

83 
	~"FœtLﬂdîFa˘‹y.h
"

	@include/workload/tpce/egen/FlatFileLoader.h

40 #i‚de‡
FLAT_FILE_LOADER_H


41 
	#FLAT_FILE_LOADER_H


	)

43 
	~<c°dio
>

44 
	~"Ba£Lﬂdî.h
"

45 
	~"unu£dÊag.h
"

47 
usög
 
«me•a˚
 
	g°d
;

49 
«me•a˚
 
	gTPCE


53 #i‚de‡
DATETIME_FORMAT


54 
	#DATETIME_FORMAT
 12

56 

	)

57 #i‚de‡
TIME_FORMAT


58 
	#TIME_FORMAT
 01

60 

	)

61 #i‚de‡
DATE_FORMAT


62 
	#DATE_FORMAT
 10

64 

	)

65 #i‚de‡
BOOLEAN_TRUE


66 
	#BOOLEAN_TRUE
 "1"

	)

69 #i‚de‡
BOOLEAN_FALSE


70 
	#BOOLEAN_FALSE
 "0"

	)

73 #i‚de‡
BUFFER_SIZE


74 
	#BUFFER_SIZE
 0

	)

78 c⁄° 
	gFœtFûeD©eTimeF‹m©
 = 
DATETIME_FORMAT
;

79 c⁄° 
	gFœtFûeTimeF‹m©
 = 
TIME_FORMAT
;

80 c⁄° 
	gFœtFûeD©eF‹m©
 = 
DATE_FORMAT
;

81 c⁄° * c⁄° 
	gFœtFûeBoﬁTrue
 = 
BOOLEAN_TRUE
;

82 c⁄° * c⁄° 
	gFœtFûeBoﬁFÆ£
 = 
BOOLEAN_FALSE
;

85 c⁄° 
	gFœtFûeBuf„rSize
 = 
BUFFER_SIZE
;

88 
	eFœtFûeOuçutModes
 {

89 
	gFLAT_FILE_OUTPUT_APPEND
 = 0,

90 
	gFLAT_FILE_OUTPUT_OVERWRITE


96 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
˛ass
 
	gCFœtFûeLﬂdî
 : 
public
 
CBa£Lﬂdî
<
T
>

98 
¥Ÿe˘ed
:

99 
FILE
 *
hOutFûe
;

101 
	gpublic
:

103 
CFœtFûeLﬂdî
(*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
);

104 ~
CFœtFûeLﬂdî
();

106 
vútuÆ
 
WrôeNextRec‹d
(c⁄° 
T
* 
√xt_ªc‹d
 
UNUSED
) = 0;

107 
FöishLﬂd
();

114 
	gãm∂©e
 <
ty≥«me
 
	gT
>

115 
	gCFœtFûeLﬂdî
<
	gT
>::
CFœtFûeLﬂdî
(*
szFûeName
, 
FœtFûeOuçutModes
 
Ê©FûeOuçutMode
)

117 if–
	gFLAT_FILE_OUTPUT_APPEND
 =
Ê©FûeOuçutMode
 )

119 
hOutFûe
 = 
f›í
–
szFûeName
, "a" );

121 if–
	gFLAT_FILE_OUTPUT_OVERWRITE
 =
Ê©FûeOuçutMode
 )

123 
hOutFûe
 = 
f›í
–
szFûeName
, "w" );

126 i‡(!
	ghOutFûe
)

128 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CFlatFileLoader<T>::CFlatFileLoader");

131 i‡(
	gFœtFûeBuf„rSize
 > 0)

133 i‡(
£tvbuf
(
hOutFûe
, 
NULL
, 
_IOFBF
, 
FœtFûeBuf„rSize
))

135 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CFlatFileLoader<T>::CFlatFileLoader");

143 
	gãm∂©e
 <
ty≥«me
 
	gT
>

144 
	gCFœtFûeLﬂdî
<
	gT
>::~
CFœtFûeLﬂdî
()

146 
f˛o£
(
hOutFûe
);

153 
	gãm∂©e
 <
ty≥«me
 
	gT
>

154 
	gCFœtFûeLﬂdî
<
	gT
>::
FöishLﬂd
()

156 
fÊush
(
hOutFûe
);

	@include/workload/tpce/egen/FlatFinancialLoad.h

40 #i‚de‡
FLAT_FINANCIAL_LOAD_H


41 
	#FLAT_FINANCIAL_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtFö™cülLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
FINANCIAL_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_FI_QTR_START_DATE
;

52 
	gpublic
:

53 
CFœtFö™cülLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
FINANCIAL_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_FI_QTR_START_DATE
 = 
√xt_ªc‹d
->
FI_QTR_START_DATE
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
Fö™cülRowFmt
,

62 
√xt_ªc‹d
->
FI_CO_ID
,

63 
√xt_ªc‹d
->
FI_YEAR
,

64 
√xt_ªc‹d
->
FI_QTR
,

65 
Fœt_FI_QTR_START_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

66 
√xt_ªc‹d
->
FI_REVENUE
,

67 
√xt_ªc‹d
->
FI_NET_EARN
,

68 
√xt_ªc‹d
->
FI_BASIC_EPS
,

69 
√xt_ªc‹d
->
FI_DILUT_EPS
,

70 
√xt_ªc‹d
->
FI_MARGIN
,

71 
√xt_ªc‹d
->
FI_INVENTORY
,

72 
√xt_ªc‹d
->
FI_ASSETS
,

73 
√xt_ªc‹d
->
FI_LIABILITY
,

74 
√xt_ªc‹d
->
FI_OUT_BASIC
,

75 
√xt_ªc‹d
->
FI_OUT_DILUT


77 i‡(
	grc
 < 0) {

78 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatFinancialLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatHoldingHistoryLoad.h

40 #i‚de‡
FLAT_HOLDING_HISTORY_LOAD_H


41 
	#FLAT_HOLDING_HISTORY_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtHﬁdögHi°‹yLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
HOLDING_HISTORY_ROW
>

50 
public
:

51 
CFœtHﬁdögHi°‹yLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
HOLDING_HISTORY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
HﬁdögHi°‹yRowFmt
,

59 
√xt_ªc‹d
->
HH_H_T_ID
,

60 
√xt_ªc‹d
->
HH_T_ID
,

61 
√xt_ªc‹d
->
HH_BEFORE_QTY
,

62 
√xt_ªc‹d
->
HH_AFTER_QTY


64 i‡(
	grc
 < 0) {

65 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatHoldingHistoryLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatHoldingLoad.h

40 #i‚de‡
FLAT_HOLDING_LOAD_H


41 
	#FLAT_HOLDING_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtHﬁdögLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
HOLDING_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_H_DTS
;

52 
	gpublic
:

53 
CFœtHﬁdögLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
HOLDING_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_H_DTS
 = 
√xt_ªc‹d
->
H_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
HﬁdögRowFmt
,

62 
√xt_ªc‹d
->
H_T_ID
,

63 
√xt_ªc‹d
->
H_CA_ID
,

64 
√xt_ªc‹d
->
H_S_SYMB
,

65 
Fœt_H_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

66 
√xt_ªc‹d
->
H_PRICE
,

67 
√xt_ªc‹d
->
H_QTY


69 i‡(
	grc
 < 0) {

70 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatHoldingLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatHoldingSummaryLoad.h

40 #i‚de‡
FLAT_HOLDING_SUMMARY_LOAD_H


41 
	#FLAT_HOLDING_SUMMARY_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtHﬁdögSumm¨yLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
HOLDING_SUMMARY_ROW
>

50 
public
:

51 
CFœtHﬁdögSumm¨yLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
HOLDING_SUMMARY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
HﬁdögSumm¨yRowFmt
,

59 
√xt_ªc‹d
->
HS_CA_ID
,

60 
√xt_ªc‹d
->
HS_S_SYMB
,

61 
√xt_ªc‹d
->
HS_QTY


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatHoldingSummaryLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatIndustryLoad.h

40 #i‚de‡
FLAT_INDUSTRY_LOAD_H


41 
	#FLAT_INDUSTRY_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtIndu°ryLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
INDUSTRY_ROW
>

50 
public
:

51 
CFœtIndu°ryLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
INDUSTRY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Indu°ryRowFmt
,

59 
√xt_ªc‹d
->
IN_ID
,

60 
√xt_ªc‹d
->
IN_NAME
,

61 
√xt_ªc‹d
->
IN_SC_ID


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatIndustryLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatLastTradeLoad.h

40 #i‚de‡
FLAT_LAST_TRADE_LOAD_H


41 
	#FLAT_LAST_TRADE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtLa°TødeLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
LAST_TRADE_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_LT_DTS
;

52 
	gpublic
:

53 
CFœtLa°TødeLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
LAST_TRADE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_LT_DTS
 = 
√xt_ªc‹d
->
LT_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
La°TødeRowFmt
,

62 
√xt_ªc‹d
->
LT_S_SYMB
,

63 
Fœt_LT_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

64 
√xt_ªc‹d
->
LT_PRICE
,

65 
√xt_ªc‹d
->
LT_OPEN_PRICE
,

66 
√xt_ªc‹d
->
LT_VOL


68 i‡(
	grc
 < 0) {

69 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatLastTradeLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatLoaderFactory.h

41 #i‚de‡
FLAT_LOADER_FACTORY_H


42 
	#FLAT_LOADER_FACTORY_H


	)

44 
	~"FœtFûeLﬂd_°dafx.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCFœtLﬂdîFa˘‹y
 : 
public
 
CBa£LﬂdîFa˘‹y


51 
m_szOutDú
[
iMaxP©h
];

52 
	gm_szFuŒFûeName
[
iMaxP©h
];

53 
FœtFûeOuçutModes
 
	gm_eOuçutMode
;

55 
SëFûeName
(c⁄° * 
szFûeName
)

57 
¢¥ötf
(
m_szFuŒFûeName
, (m_szFuŒFûeName), "%s%s", 
m_szOutDú
, 
szFûeName
);

60 
	gpublic
:

62 
CFœtLﬂdîFa˘‹y
(*
szOutDú
, 
FœtFûeOuçutModes
 
eOuçutMode
)

63 : 
m_eOuçutMode
(
eOuçutMode
)

65 
as£π
(
szOutDú
);

67 
°∫˝y
(
m_szOutDú
, 
szOutDú
, (m_szOutDir));

72 
vútuÆ
 
	gCBa£Lﬂdî
<
	gACCOUNT_PERMISSION_ROW
>* 
Cª©eAccou¡Pîmissi⁄Lﬂdî
()

74 
SëFûeName
("AccountPermission.txt");

76  
√w
 
CFœtAccou¡Pîmissi⁄Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

78 
vútuÆ
 
	gCBa£Lﬂdî
<
	gADDRESS_ROW
>* 
Cª©eAddªssLﬂdî
()

80 
SëFûeName
("Address.txt");

82  
√w
 
CFœtAddªssLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

84 
vútuÆ
 
	gCBa£Lﬂdî
<
	gBROKER_ROW
>* 
Cª©eBrokîLﬂdî
()

86 
SëFûeName
("Broker.txt");

88  
√w
 
CFœtBrokîLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

90 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCASH_TRANSACTION_ROW
>* 
Cª©eCashTønß˘i⁄Lﬂdî
()

92 
SëFûeName
("CashTransaction.txt");

94  
√w
 
CFœtCashTønß˘i⁄Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

96 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCHARGE_ROW
>* 
Cª©eCh¨geLﬂdî
()

98 
SëFûeName
("Charge.txt");

100  
√w
 
CFœtCh¨geLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

103 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMMISSION_RATE_ROW
>* 
Cª©eCommissi⁄R©eLﬂdî
()

105 
SëFûeName
("CommissionRate.txt");

107  
√w
 
CFœtCommissi⁄R©eLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

110 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_COMPETITOR_ROW
>* 
Cª©eCom∑nyCom≥tô‹Lﬂdî
()

112 
SëFûeName
("CompanyCompetitor.txt");

114  
√w
 
CFœtCom∑nyCom≥tô‹Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

117 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_ROW
>* 
Cª©eCom∑nyLﬂdî
()

119 
SëFûeName
("Company.txt");

121  
√w
 
CFœtCom∑nyLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

124 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ACCOUNT_ROW
>* 
Cª©eCu°omîAccou¡Lﬂdî
()

126 
SëFûeName
("CustomerAccount.txt");

128  
√w
 
CFœtCu°omîAccou¡Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

131 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ROW
>* 
Cª©eCu°omîLﬂdî
()

133 
SëFûeName
("Customer.txt");

135  
√w
 
CFœtCu°omîLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

137 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_TAXRATE_ROW
>* 
Cª©eCu°omîTaxøãLﬂdî
()

139 
SëFûeName
("CustomerTaxrate.txt");

141  
√w
 
CFœtCu°omîTaxøãLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

143 
vútuÆ
 
	gCBa£Lﬂdî
<
	gDAILY_MARKET_ROW
>* 
Cª©eDaûyM¨këLﬂdî
()

145 
SëFûeName
("DailyMarket.txt");

147  
√w
 
CFœtDaûyM¨këLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

149 
vútuÆ
 
	gCBa£Lﬂdî
<
	gEXCHANGE_ROW
>* 
Cª©eExch™geLﬂdî
()

151 
SëFûeName
("Exchange.txt");

153  
√w
 
CFœtExch™geLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

155 
vútuÆ
 
	gCBa£Lﬂdî
<
	gFINANCIAL_ROW
>* 
Cª©eFö™cülLﬂdî
()

157 
SëFûeName
("Financial.txt");

159  
√w
 
CFœtFö™cülLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

161 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_ROW
>* 
Cª©eHﬁdögLﬂdî
()

163 
SëFûeName
("Holding.txt");

165  
√w
 
CFœtHﬁdögLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

167 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_HISTORY_ROW
>* 
Cª©eHﬁdögHi°‹yLﬂdî
()

169 
SëFûeName
("HoldingHistory.txt");

171  
√w
 
CFœtHﬁdögHi°‹yLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

173 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_SUMMARY_ROW
>* 
Cª©eHﬁdögSumm¨yLﬂdî
()

175 
SëFûeName
("HoldingSummary.txt");

177  
√w
 
CFœtHﬁdögSumm¨yLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

179 
vútuÆ
 
	gCBa£Lﬂdî
<
	gINDUSTRY_ROW
>* 
Cª©eIndu°ryLﬂdî
()

181 
SëFûeName
("Industry.txt");

183  
√w
 
CFœtIndu°ryLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

185 
vútuÆ
 
	gCBa£Lﬂdî
<
	gLAST_TRADE_ROW
>* 
Cª©eLa°TødeLﬂdî
()

187 
SëFûeName
("LastTrade.txt");

189  
√w
 
CFœtLa°TødeLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

191 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_ITEM_ROW
>* 
Cª©eNewsIãmLﬂdî
()

193 
SëFûeName
("NewsItem.txt");

195  
√w
 
CFœtNewsIãmLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

197 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_XREF_ROW
>* 
Cª©eNewsXRefLﬂdî
()

199 
SëFûeName
("NewsXRef.txt");

201  
√w
 
CFœtNewsXRefLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

203 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECTOR_ROW
>* 
Cª©eSe˘‹Lﬂdî
()

205 
SëFûeName
("Sector.txt");

207  
√w
 
CFœtSe˘‹Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

209 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECURITY_ROW
>* 
Cª©eSecurôyLﬂdî
()

211 
SëFûeName
("Security.txt");

213  
√w
 
CFœtSecurôyLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

215 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSETTLEMENT_ROW
>* 
Cª©eSëéemítLﬂdî
()

217 
SëFûeName
("Settlement.txt");

219  
√w
 
CFœtSëéemítLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

221 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSTATUS_TYPE_ROW
>* 
Cª©eSètusTy≥Lﬂdî
()

223 
SëFûeName
("StatusType.txt");

225  
√w
 
CFœtSètusTy≥Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

227 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTAXRATE_ROW
>* 
Cª©eTaxøãLﬂdî
()

229 
SëFûeName
("Taxrate.txt");

231  
√w
 
CFœtTaxøãLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

233 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_HISTORY_ROW
>* 
Cª©eTødeHi°‹yLﬂdî
()

235 
SëFûeName
("TradeHistory.txt");

237  
√w
 
CFœtTødeHi°‹yLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

239 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_ROW
>* 
Cª©eTødeLﬂdî
()

241 
SëFûeName
("Trade.txt");

243  
√w
 
CFœtTødeLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

245 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_REQUEST_ROW
>* 
Cª©eTødeReque°Lﬂdî
()

247 
SëFûeName
("TradeRequest.txt");

249  
√w
 
CFœtTødeReque°Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

251 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_TYPE_ROW
>* 
Cª©eTødeTy≥Lﬂdî
()

253 
SëFûeName
("TradeType.txt");

255  
√w
 
CFœtTødeTy≥Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

257 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_ITEM_ROW
>* 
Cª©eW©chIãmLﬂdî
()

259 
SëFûeName
("WatchItem.txt");

261  
√w
 
CFœtW©chIãmLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

264 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_LIST_ROW
>* 
Cª©eW©chLi°Lﬂdî
()

266 
SëFûeName
("WatchList.txt");

268  
√w
 
CFœtW©chLi°Lﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

271 
vútuÆ
 
	gCBa£Lﬂdî
<
	gZIP_CODE_ROW
>* 
Cª©eZùCodeLﬂdî
()

273 
SëFûeName
("ZipCode.txt");

275  
√w
 
CFœtZùCodeLﬂd
(
m_szFuŒFûeName
, 
m_eOuçutMode
);

	@include/workload/tpce/egen/FlatNewsItemLoad.h

40 #i‚de‡
FLAT_NEWS_ITEM_LOAD_H


41 
	#FLAT_NEWS_ITEM_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtNewsIãmLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
NEWS_ITEM_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_NI_DTS
;

52 
	gpublic
:

53 
CFœtNewsIãmLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
NEWS_ITEM_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
) {};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_NI_DTS
 = 
√xt_ªc‹d
->
NI_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
NewsIãmRowFmt
,

62 
√xt_ªc‹d
->
NI_ID
,

63 
√xt_ªc‹d
->
NI_HEADLINE
,

64 
√xt_ªc‹d
->
NI_SUMMARY
,

65 
√xt_ªc‹d
->
NI_ITEM
,

66 
Fœt_NI_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

67 
√xt_ªc‹d
->
NI_SOURCE
,

68 
√xt_ªc‹d
->
NI_AUTHOR


70 i‡(
	grc
 < 0) {

71 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatNewsItemLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatNewsXRefLoad.h

40 #i‚de‡
FLAT_NEWS_XREF_LOAD_H


41 
	#FLAT_NEWS_XREF_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtNewsXRefLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
NEWS_XREF_ROW
>

50 
public
:

51 
CFœtNewsXRefLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
NEWS_XREF_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
) {};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
NewsXRefRowFmt
,

59 
√xt_ªc‹d
->
NX_NI_ID
,

60 
√xt_ªc‹d
->
NX_CO_ID


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatNewsXRefLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatSectorLoad.h

40 #i‚de‡
FLAT_SECTOR_LOAD_H


41 
	#FLAT_SECTOR_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtSe˘‹Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
SECTOR_ROW
>

50 
public
:

51 
CFœtSe˘‹Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
SECTOR_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
Se˘‹RowFmt
,

59 
√xt_ªc‹d
->
SC_ID
,

60 
√xt_ªc‹d
->
SC_NAME


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatSectorLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatSecurityLoad.h

40 #i‚de‡
FLAT_SECURITY_LOAD_H


41 
	#FLAT_SECURITY_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtSecurôyLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
SECURITY_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_S_START_DATE
;

52 
CD©eTime
 
	gFœt_S_EXCH_DATE
;

53 
CD©eTime
 
	gFœt_S_52WK_HIGH_DATE
;

54 
CD©eTime
 
	gFœt_S_52WK_LOW_DATE
;

55 
	gpublic
:

56 
CFœtSecurôyLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
SECURITY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

61 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

63 
	gFœt_S_START_DATE
 = 
√xt_ªc‹d
->
S_START_DATE
;

64 
	gFœt_S_EXCH_DATE
 = 
√xt_ªc‹d
->
S_EXCH_DATE
;

65 
	gFœt_S_52WK_HIGH_DATE
 = 
√xt_ªc‹d
->
S_52WK_HIGH_DATE
;

66 
	gFœt_S_52WK_LOW_DATE
 = 
√xt_ªc‹d
->
S_52WK_LOW_DATE
;

67 
	grc
 = 
Ârötf
–
hOutFûe
, 
SecurôyRowFmt
,

68 
√xt_ªc‹d
->
S_SYMB
,

69 
√xt_ªc‹d
->
S_ISSUE
,

70 
√xt_ªc‹d
->
S_ST_ID
,

71 
√xt_ªc‹d
->
S_NAME
,

72 
√xt_ªc‹d
->
S_EX_ID
,

73 
√xt_ªc‹d
->
S_CO_ID
,

74 
√xt_ªc‹d
->
S_NUM_OUT
,

75 
Fœt_S_START_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

76 
Fœt_S_EXCH_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

77 
√xt_ªc‹d
->
S_PE
,

78 
√xt_ªc‹d
->
S_52WK_HIGH
,

79 
Fœt_S_52WK_HIGH_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

80 
√xt_ªc‹d
->
S_52WK_LOW
,

81 
Fœt_S_52WK_LOW_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

82 
√xt_ªc‹d
->
S_DIVIDEND
,

83 
√xt_ªc‹d
->
S_YIELD


86 i‡(
	grc
 < 0) {

87 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatSecurityLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatSettlementLoad.h

40 #i‚de‡
FLAT_SETTLEMENT_LOAD_H


41 
	#FLAT_SETTLEMENT_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtSëéemítLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
SETTLEMENT_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_SE_CASH_DUE_DATE
;

52 
	gpublic
:

53 
CFœtSëéemítLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
SETTLEMENT_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_SE_CASH_DUE_DATE
 = 
√xt_ªc‹d
->
SE_CASH_DUE_DATE
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
SëéemítRowFmt
,

62 
√xt_ªc‹d
->
SE_T_ID
,

63 
√xt_ªc‹d
->
SE_CASH_TYPE
,

64 
Fœt_SE_CASH_DUE_DATE
.
ToSå
(
FœtFûeD©eF‹m©
),

65 
√xt_ªc‹d
->
SE_AMT


67 i‡(
	grc
 < 0) {

68 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatSettlementLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatStatusTypeLoad.h

40 #i‚de‡
FLAT_STATUS_TYPE_LOAD_H


41 
	#FLAT_STATUS_TYPE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtSètusTy≥Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
STATUS_TYPE_ROW
>

50 
public
:

51 
CFœtSètusTy≥Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
STATUS_TYPE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
SètusTy≥RowFmt
,

59 
√xt_ªc‹d
->
ST_ID
,

60 
√xt_ªc‹d
->
ST_NAME


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatStatusType::WriteNextRecord");

	@include/workload/tpce/egen/FlatTaxrateLoad.h

40 #i‚de‡
FLAT_TAXRATE_LOAD_H


41 
	#FLAT_TAXRATE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtTaxøãLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
TAXRATE_ROW
>

50 
public
:

51 
CFœtTaxøãLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
TAXRATE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
TaxøãRowFmt
,

59 
√xt_ªc‹d
->
TX_ID
,

60 
√xt_ªc‹d
->
TX_NAME
,

61 
√xt_ªc‹d
->
TX_RATE


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatTaxrateLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatTradeHistoryLoad.h

40 #i‚de‡
FLAT_TRADE_HISTORY_H


41 
	#FLAT_TRADE_HISTORY_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtTødeHi°‹yLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
TRADE_HISTORY_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_TH_DTS
;

52 
	gpublic
:

53 
CFœtTødeHi°‹yLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
TRADE_HISTORY_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_TH_DTS
 = 
√xt_ªc‹d
->
TH_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
TødeHi°‹yRowFmt
,

62 
√xt_ªc‹d
->
TH_T_ID
,

63 
Fœt_TH_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

64 
√xt_ªc‹d
->
TH_ST_ID


66 i‡(
	grc
 < 0) {

67 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatTradeHistory::WriteNextRecord");

	@include/workload/tpce/egen/FlatTradeLoad.h

40 #i‚de‡
FLAT_TRADE_LOAD_H


41 
	#FLAT_TRADE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtTødeLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
TRADE_ROW
>

50 
¥iv©e
:

51 
CD©eTime
 
Fœt_T_DTS
;

52 
	gpublic
:

53 
CFœtTødeLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
TRADE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

58 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

60 
	gFœt_T_DTS
 = 
√xt_ªc‹d
->
T_DTS
;

61 
	grc
 = 
Ârötf
–
hOutFûe
, 
TødeRowFmt
,

62 
√xt_ªc‹d
->
T_ID
,

63 
Fœt_T_DTS
.
ToSå
(
FœtFûeD©eTimeF‹m©
),

64 
√xt_ªc‹d
->
T_ST_ID
,

65 
√xt_ªc‹d
->
T_TT_ID
,

66 (
√xt_ªc‹d
->
T_IS_CASH
 ? 
FœtFûeBoﬁTrue
 : 
FœtFûeBoﬁFÆ£
),

67 
√xt_ªc‹d
->
T_S_SYMB
,

68 
√xt_ªc‹d
->
T_QTY
,

69 
√xt_ªc‹d
->
T_BID_PRICE
,

70 
√xt_ªc‹d
->
T_CA_ID
,

71 
√xt_ªc‹d
->
T_EXEC_NAME
,

72 
√xt_ªc‹d
->
T_TRADE_PRICE
,

73 
√xt_ªc‹d
->
T_CHRG
,

74 
√xt_ªc‹d
->
T_COMM
,

75 
√xt_ªc‹d
->
T_TAX
,

76 (
√xt_ªc‹d
->
T_LIFO
 ? 
FœtFûeBoﬁTrue
 : 
FœtFûeBoﬁFÆ£
)

78 i‡(
	grc
 < 0) {

79 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatTradeLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatTradeRequestLoad.h

40 #i‚de‡
FLAT_TRADE_REQUEST_LOAD_H


41 
	#FLAT_TRADE_REQUEST_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtTødeReque°Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
TRADE_REQUEST_ROW
>

50 
public
:

51 
CFœtTødeReque°Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
TRADE_REQUEST_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
TødeReque°RowFmt
,

59 
√xt_ªc‹d
->
TR_T_ID
,

60 
√xt_ªc‹d
->
TR_TT_ID
,

61 
√xt_ªc‹d
->
TR_S_SYMB
,

62 
√xt_ªc‹d
->
TR_QTY
,

63 
√xt_ªc‹d
->
TR_BID_PRICE
,

64 
√xt_ªc‹d
->
TR_B_ID


66 i‡(
	grc
 < 0) {

67 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatTradeRequestLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatTradeTypeLoad.h

40 #i‚de‡
FLAT_TRADE_TYPE_LOAD_H


41 
	#FLAT_TRADE_TYPE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtTødeTy≥Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
TRADE_TYPE_ROW
>

50 
public
:

51 
CFœtTødeTy≥Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
TRADE_TYPE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
TødeTy≥RowFmt
,

59 
√xt_ªc‹d
->
TT_ID
,

60 
√xt_ªc‹d
->
TT_NAME
,

61 (
√xt_ªc‹d
->
TT_IS_SELL
 ? 
FœtFûeBoﬁTrue
 : 
FœtFûeBoﬁFÆ£
),

62 (
√xt_ªc‹d
->
TT_IS_MRKT
 ? 
FœtFûeBoﬁTrue
 : 
FœtFûeBoﬁFÆ£
)

64 i‡(
	grc
 < 0) {

65 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatTradeTypeLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatWatchItemLoad.h

40 #i‚de‡
FLAT_WATCH_ITEM_LOAD_H


41 
	#FLAT_WATCH_ITEM_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtW©chIãmLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
WATCH_ITEM_ROW
>

50 
public
:

51 
CFœtW©chIãmLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
WATCH_ITEM_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
W©chIãmRowFmt
,

59 
√xt_ªc‹d
->
WI_WL_ID
,

60 
√xt_ªc‹d
->
WI_S_SYMB


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatWatchItemLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatWatchListLoad.h

40 #i‚de‡
FLAT_WATCH_LIST_LOAD_H


41 
	#FLAT_WATCH_LIST_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtW©chLi°Lﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
WATCH_LIST_ROW
>

50 
public
:

51 
CFœtW©chLi°Lﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
WATCH_LIST_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
W©chLi°RowFmt
,

59 
√xt_ªc‹d
->
WL_ID
,

60 
√xt_ªc‹d
->
WL_C_ID


62 i‡(
	grc
 < 0) {

63 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatWatchListLoad::WriteNextRecord");

	@include/workload/tpce/egen/FlatZipCodeLoad.h

40 #i‚de‡
FLAT_ZIP_CODE_LOAD_H


41 
	#FLAT_ZIP_CODE_LOAD_H


	)

43 
	~"FœtFûeLﬂd_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCFœtZùCodeLﬂd
 : 
public
 
CFœtFûeLﬂdî
 <
ZIP_CODE_ROW
>

50 
public
:

51 
CFœtZùCodeLﬂd
–*
szFûeName
, 
FœtFûeOuçutModes
 
FœtFûeOuçutMode
 ) : 
CFœtFûeLﬂdî
<
ZIP_CODE_ROW
>(szFûeName, 
	gFœtFûeOuçutMode
){};

56 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
)

58 
	grc
 = 
Ârötf
–
hOutFûe
, 
ZùCodeRowFmt
,

59 
√xt_ªc‹d
->
ZC_CODE
,

60 
√xt_ªc‹d
->
ZC_TOWN
,

61 
√xt_ªc‹d
->
ZC_DIV


63 i‡(
	grc
 < 0) {

64 
throw
 
CSy°emEº
(CSy°emEº::
eWrôeFûe
, "CFlatZipCodeLoad::WriteNextRecord");

	@include/workload/tpce/egen/HoldingsAndTradesTable.h

40 #i‚de‡
HOLDINGS_AND_TRADES_TABLE_H


41 
	#HOLDINGS_AND_TRADES_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Cu°omîAccou¡sAndPîmissi⁄sTabÀ.h
"

45 
	~"SecurôyPri˚R™ge.h
"

47 
«me•a˚
 
	gTPCE


56 c⁄° 
	giMöSecurôõsPîAccou¡R™ge
[3][10] =

60 c⁄° 
	giMaxSecurôõsPîAccou¡R™ge
[3][10] =

64 c⁄° 
	giMaxSecurôõsPîAccou¡
 = 18;

71 c⁄° 
	gcM¨këBuyLﬂdThªshﬁd
 = 30;

72 c⁄° 
	gcM¨këSñlLﬂdThªshﬁd
 = 
cM¨këBuyLﬂdThªshﬁd
 + 30;

73 c⁄° 
	gcLimôBuyLﬂdThªshﬁd
 = 
cM¨këSñlLﬂdThªshﬁd
 + 20;

74 c⁄° 
	gcLimôSñlLﬂdThªshﬁd
 = 
cLimôBuyLﬂdThªshﬁd
 + 10;

75 c⁄° 
	gcSt›LossLﬂdThªshﬁd
 = 
cLimôSñlLﬂdThªshﬁd
 + 10;

77 c⁄° 
	giPî˚¡BuysOnM¨gö
 = 16;

80 c⁄° 
	gcNUM_TRADE_QTY_SIZES
 = 4;

81 c⁄° 
	gcTRADE_QTY_SIZES
[
cNUM_TRADE_QTY_SIZES
] = {100, 200, 400, 800};

85 c⁄° 
	giPî˚¡TødeIsLIFO
 = 35;

88 c⁄° 
	giRNGSkùO√Tøde
 = 11;

90 ˛as†
	cCHﬁdögsAndTødesTabÀ


92 
CR™dom
 
	gm_∫d
;

93 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
 
	gm_Cu°omîAccou¡TabÀ
;

95 
TIdít
 
	gm_iSecCou¡
;

96 
UINT
 
	gm_iMaxSecurôõsPîCA
;

97 
TIdít
 
	gm_SecurôyIds
[
iMaxSecurôõsPîAccou¡
];

98 
boﬁ
 
	gm_bCacheE«bÀd
;

99 
TIdít
 
	gm_iCacheOff£tNS
;

100 
	gm_iCacheSizeNS
;

101 * 
	gm_CacheNS
;

102 
TIdít
 
	gm_iCacheOff£tSFFI
;

103 
	gm_iCacheSizeSFFI
;

104 
TIdít
* 
	gm_CacheSFFI
;

106 
	gpublic
:

108 
CHﬁdögsAndTødesTabÀ
(
CI≈utFûes
 
öputFûes
,

109 
UINT
 
iLﬂdUnôSize
,

110 
TIdít
 
iCu°omîCou¡
,

111 
TIdít
 
iSèπFromCu°omî
 = 
iDeÁu…SèπFromCu°omî
,

112 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


114 : 
m_∫d
(
RNGSìdTabÀDeÁu…
)

115 , 
m_Cu°omîAccou¡TabÀ
(
öputFûes
, 
iLﬂdUnôSize
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

116 , 
m_bCacheE«bÀd
(
bCacheE«bÀd
)

118 
	gm_iSecCou¡
 = 
öputFûes
.
Securôõs
->
GëC⁄figuªdSecurôyCou¡
();

122 
	gm_iMaxSecurôõsPîCA
 = 
iMaxSecurôõsPîAccou¡
;

124 i‡(
	gm_bCacheE«bÀd
)

126 
	gm_iCacheSizeNS
 = 
iDeÁu…LﬂdUnôSize
 * 
iMaxAccou¡sPîCu°
;

127 
	gm_iCacheOff£tNS
 = 
m_Cu°omîAccou¡TabÀ
.
GëSèπögCA_ID
(
iSèπFromCu°omî
Ë+ (
iTIdítShi·
 * 
iMaxAccou¡sPîCu°
);

128 
	gm_CacheNS
 = 
√w
 [
m_iCacheSizeNS
];

129 
	gi
=0; i<
	gm_iCacheSizeNS
; i++)

131 
	gm_CacheNS
[
i
] = 0;

134 
	gm_iCacheSizeSFFI
 = 
iDeÁu…LﬂdUnôSize
 * 
iMaxAccou¡sPîCu°
 * 
iMaxSecurôõsPîAccou¡
;

135 
	gm_iCacheOff£tSFFI
 = 
m_Cu°omîAccou¡TabÀ
.
GëSèπögCA_ID
(
iSèπFromCu°omî
Ë+ (
iTIdítShi·
 * 
iMaxAccou¡sPîCu°
);

136 
	gm_CacheSFFI
 = 
√w
 
TIdít
[
m_iCacheSizeSFFI
];

137 
	gi
=0; i<
	gm_iCacheSizeSFFI
; i++)

139 
	gm_CacheSFFI
[
i
] = -1;

145 ~
CHﬁdögsAndTødesTabÀ
()

147 i‡(
	gm_bCacheE«bÀd
)

149 
	gdñëe
[] 
	gm_CacheNS
;

150 
	gdñëe
[] 
	gm_CacheSFFI
;

158 
InôNextLﬂdUnô
(
INT64
 
TødesToSkù
, 
TIdít
 
iSèπögAccou¡ID
)

160 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

162 (
RNGSEED
Ë
TødesToSkù
));

163 i‡(
	gm_bCacheE«bÀd
)

165 
	gm_iCacheOff£tNS
 = 
iSèπögAccou¡ID
;

166 
	gi
=0; i<
	gm_iCacheSizeNS
; i++)

168 
	gm_CacheNS
[
i
] = 0;

171 
	gm_iCacheOff£tSFFI
 = 
iSèπögAccou¡ID
;

172 
	gi
=0; i<
	gm_iCacheSizeSFFI
; i++)

174 
	gm_CacheSFFI
[
i
] = -1;

178 
	gm_Cu°omîAccou¡TabÀ
.
InôNextLﬂdUnô
();

184 
GëNumbîOfSecurôõs
(
TIdít
 
iCA_ID
, 
eCu°omîTõr
 
iTõr
, 
iAccou¡Cou¡
)

186 
	giNumbîOfSecurôõs
 = 0;

191 
TIdít
 
	gödex
 = 
iCA_ID
 - 
m_iCacheOff£tNS
;

192 
boﬁ
 
	gbCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSizeNS
);

193 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

195 
	giNumbîOfSecurôõs
 = 
m_CacheNS
[
ödex
];

198 i‡(
	giNumbîOfSecurôõs
 == 0)

200 
RNGSEED
 
OldSìd
;

201 
	giMöR™ge
, 
	giMaxR™ge
;

203 
	giMöR™ge
 = 
iMöSecurôõsPîAccou¡R™ge
[
iTõr
 - 
eCu°omîTõrO√
][
iAccou¡Cou¡
 - 1];

204 
	giMaxR™ge
 = 
iMaxSecurôõsPîAccou¡R™ge
[
iTõr
 - 
eCu°omîTõrO√
][
iAccou¡Cou¡
 - 1];

206 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

207 
	gm_∫d
.
SëSìd
–
m_∫d
.
RndNthEÀmít
–
RNGSìdBa£NumbîOfSecurôõs
, (
RNGSEED
Ë
iCA_ID
 ));

208 
	giNumbîOfSecurôõs
 = 
m_∫d
.
RndI¡R™ge
(
iMöR™ge
, 
iMaxR™ge
);

209 
	gm_∫d
.
SëSìd
–
OldSìd
 );

211 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

213 
	gm_CacheNS
[
ödex
] = 
iNumbîOfSecurôõs
;

216  
	giNumbîOfSecurôõs
;

222 
RNGSEED
 
GëSèπögSecIDSìd
(
TIdít
 
iCA_ID
)

224 –
	gm_∫d
.
RndNthEÀmít
–
RNGSìdBa£SèπögSecurôyID
, (
RNGSEED
Ë
iCA_ID
 * 
m_iMaxSecurôõsPîCA
 ));

238 
TIdít
 
GëSecurôyFœtFûeIndex
(

239 
TIdít
 
iCu°omîAccou¡
,

240 
UINT
 
iSecurôyAccou¡Index
)

242 
TIdít
 
	giSecurôyFœtFûeIndex
 = -1;

247 
TIdít
 
	gödex
 = (
iCu°omîAccou¡
 - 
m_iCacheOff£tSFFI
Ë* 
iMaxSecurôõsPîAccou¡
 + 
iSecurôyAccou¡Index
 - 1;

248 
boﬁ
 
	gbCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSizeSFFI
);

249 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

251 
	giSecurôyFœtFûeIndex
 = 
m_CacheSFFI
[
ödex
];

254 i‡(
	giSecurôyFœtFûeIndex
 == -1)

256 
RNGSEED
 
OldSìd
;

257 
UINT
 
	giGíî©edIndexCou¡
 = 0;

258 
UINT
 
	gi
;

260 
	gOldSìd
 = 
m_∫d
.
GëSìd
();

261 
	gm_∫d
.
SëSìd
–
GëSèπögSecIDSìd
–
iCu°omîAccou¡
 ));

263 
	giGíî©edIndexCou¡
 = 0;

265 
	giGíî©edIndexCou¡
 < 
	giSecurôyAccou¡Index
)

267 
	giSecurôyFœtFûeIndex
 = 
m_∫d
.
RndI¡64R™ge
(0, 
m_iSecCou¡
-1);

269 
	gi
 = 0; i < 
	giGíî©edIndexCou¡
; ++i)

271 i‡(
	gm_SecurôyIds
[
i
] =
iSecurôyFœtFûeIndex
)

278 
	gm_SecurôyIds
[
i
] = 
iSecurôyFœtFûeIndex
;

282 i‡(
	gi
 =
iGíî©edIndexCou¡
)

284 ++
iGíî©edIndexCou¡
;

288 
	gm_∫d
.
SëSìd
–
OldSìd
 );

290 i‡(
	gm_bCacheE«bÀd
 && 
	gbCheckCache
)

292 
	gm_CacheSFFI
[
ödex
] = 
iSecurôyFœtFûeIndex
;

295  
	giSecurôyFœtFûeIndex
;

304 
Gíî©eR™domAccou¡Securôy
(

305 
TIdít
 
iCu°omî
,

306 
eCu°omîTõr
 
iTõr
,

307 
TIdít
* 
piCu°omîAccou¡
,

308 
TIdít
* 
piSecurôyFœtFûeIndex
,

309 
UINT
* 
piSecurôyAccou¡Index
)

311 
TIdít
 
	giCu°omîAccou¡
;

312 
	giAccou¡Cou¡
;

313 
	giTŸÆAccou¡Securôõs
;

314 
UINT
 
	giSecurôyAccou¡Index
;

315 
TIdít
 
	giSecurôyFœtFûeIndex
;

319 
	gm_Cu°omîAccou¡TabÀ
.
Gíî©eR™domAccou¡Id
–
m_∫d
, 
iCu°omî
, 
iTõr
,

320 &
iCu°omîAccou¡
, &
iAccou¡Cou¡
);

322 
	giTŸÆAccou¡Securôõs
 = 
GëNumbîOfSecurôõs
(
iCu°omîAccou¡
, 
iTõr
, 
iAccou¡Cou¡
);

326 
	giSecurôyAccou¡Index
 = (
UINT
Ë
m_∫d
.
RndI¡R™ge
(1, 
iTŸÆAccou¡Securôõs
);

328 
	giSecurôyFœtFûeIndex
 = 
GëSecurôyFœtFûeIndex
(
iCu°omîAccou¡
, 
iSecurôyAccou¡Index
);

332 *
	gpiCu°omîAccou¡
 = 
iCu°omîAccou¡
;

333 *
	gpiSecurôyFœtFûeIndex
 = 
iSecurôyFœtFûeIndex
;

334 i‡(
	gpiSecurôyAccou¡Index
 !
NULL
)

336 *
piSecurôyAccou¡Index
 = 
iSecurôyAccou¡Index
;

340 
boﬁ
 
IsAb‹ãdTøde
(
TIdít
 
TødeId
)

342 
boﬁ
 
	gbResu…
 = 
Ál£
;

343 if–
	giAb‹ãdTødeModFa˘‹
 =
TødeId
 % 
iAb‹tTøde
 )

345 
bResu…
 = 
åue
;

347  
	gbResu…
;

	@include/workload/tpce/egen/IndustryTable.h

40 #i‚de‡
INDUSTRY_TABLE_H


41 
	#INDUSTRY_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCIndu°ryTabÀ
 : 
public
 
TabÀTem∂©e
<
INDUSTRY_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CIndu°ryTabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
INDUSTRY_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "Indu°ry.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CIndu°ryTabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/InputFile.h

41 #i‚de‡
INPUT_FILE_H


42 
	#INPUT_FILE_H


	)

44 
	~"EGíUtûôõs_°dafx.h
"

46 
«me•a˚
 
	gTPCE


49 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gTKeyAndEÀmítsLimôs
> cœs†
	cCI≈utFûe


52 
	gCFixedM≠
<
	tT
, 
	tTKeyAndEÀmítsLimôs
> 
	tCFûeInMem‹yLi°
;

54 
CFûeInMem‹yLi°
 
	gm_li°
;

56 
RódLi°
(c⁄° *
szLi°Fûe
)

58 
if°ªam
 
	gtmpFûe
;

60 i‡(
	gszLi°Fûe
)

62 
	gtmpFûe
.
›í
(
szLi°Fûe
, 
ios_ba£
::
ö
);

63 i‡(
	gtmpFûe
)

65 
RódLi°
(
tmpFûe
);

66 
	gtmpFûe
.
˛o£
();

70 
	gtmpFûe
.
˛o£
();

71 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CInputFile::ReadList");

76 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CInputFile::ReadList");

80 
RódLi°
(c⁄° 
°rög
 &
°r
)

82 
i°rög°ªam
 
tmpFûe
(
°r
);

83 
RódLi°
(
tmpFûe
);

86 
RódLi°
(
i°ªam
 &
tmpFûe
) {

87 
T
 
	grow
;

88 
mem£t
(&
row
, 0, (row));

89 
	giThªshﬁd
 = 0, 
	giWeight
;

90 
	gtmpFûe
.
good
())

92 
	gtmpFûe
>>
	giWeight
;

95 if–! 
	gtmpFûe
.
eof
() )

97 
	grow
.
Lﬂd
(
tmpFûe
);

98 
	giThªshﬁd
 +
iWeight
;

99 
	gm_li°
.
Add
(
iThªshﬁd
-1 , &
row
, 
iWeight
);

104 
	gpublic
:

111 
CI≈utFûe
(c⁄° *
szLi°Fûe
)

113 
RódLi°
(
szLi°Fûe
);

116 
CI≈utFûe
(c⁄° 
°rög
 &
°r
)

118 
RódLi°
(
°r
);

123 
T
* 
GëRec‹d
(
key
Ë{  
	gm_li°
.
GëEÀmít
(key); }

126 
T
* 
GëRec‹dByPassKey
–
UINT
 
iEÀmítID
 )

128 –
	gm_li°
.
GëEÀmítByPassKey
–
iEÀmítID
 ));

132 
UINT
 
Rec‹dCou¡
( )

134  
	gm_li°
.
EÀmítCou¡
();

138 
GëGª©e°Key
(Ë{  
	gm_li°
.
GëHighe°Key
(); }

	@include/workload/tpce/egen/InputFileNoWeight.h

41 #i‚de‡
INPUT_FILE_NO_WEIGHT_H


42 
	#INPUT_FILE_NO_WEIGHT_H


	)

44 
	~"EGíUtûôõs_°dafx.h
"

46 
«me•a˚
 
	gTPCE


49 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cCI≈utFûeNoWeight


51 
	gve˘‹
<
	tT
>* 
	tPVe˘‹T
;

53 
	gve˘‹
<
	tPVe˘‹T
> 
	tCFûeInMem‹yLi°
;

55 
CFûeInMem‹yLi°
 
	gm_li°
;

57 
RódLi°
(c⁄° *
szLi°Fûe
)

59 
if°ªam
 
	gtmpFûe
;

61 i‡(
	gszLi°Fûe
)

63 
	gtmpFûe
.
›í
(
szLi°Fûe
, 
ios_ba£
::
ö
);

64 i‡(
	gtmpFûe
)

66 
RódLi°
(
tmpFûe
);

67 
	gtmpFûe
.
˛o£
();

71 
	gtmpFûe
.
˛o£
();

72 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CInputFileNoWeight::ReadList");

77 
throw
 
CSy°emEº
(CSy°emEº::
eCª©eFûe
, "CInputFileNoWeight::ReadList");

81 
RódLi°
(c⁄° 
°rög
 &
°r
)

83 
i°rög°ªam
 
tmpFûe
(
°r
);

84 
RódLi°
(
tmpFûe
);

87 
RódLi°
(
i°ªam
 &
tmpFûe
)

89 
T
 
	grow
;

90 
mem£t
(&
row
, 0, (row));

91 
	giIndex
;

92 
	giLa°Index
 = -1;

94 
	gtmpFûe
.
good
())

96 
	gtmpFûe
>>
	giIndex
;

97 if–! 
	gtmpFûe
.
eof
() )

99 
	grow
.
Lﬂd
(
tmpFûe
);

100 i‡(
	giIndex
!=
iLa°Index
)

102 
PVe˘‹T
 
∑ºay_row
 = 
√w
 
ve˘‹
<
T
>;

103 i‡(
	g∑ºay_row
!=
NULL
)

104 
m_li°
.
push_back
(
∑ºay_row
);

106 
throw
 
CMem‹yEº
("CInputFileNoWeight::ReadFile");

107 
	giLa°Index
 = 
iIndex
;

110 
	gm_li°
[(
UINT
)(
iIndex
-1)]->
push_back
(
row
);

115 
	gpublic
:

118 
CI≈utFûeNoWeight
(c⁄° *
szLi°Fûe
)

120 
RódLi°
(
szLi°Fûe
);

123 
CI≈utFûeNoWeight
(c⁄° 
°rög
 &
°r
)

125 
RódLi°
(
°r
);

129 ~
CI≈utFûeNoWeight
()

131 
size_t
 
	gi
=0; i<
	gm_li°
.
size
(); ++i)

132 
dñëe
 
	gm_li°
[
i
];

136 
PVe˘‹T
 
GëRec‹d
(
UINT
 
ödex
Ë{  
	gm_li°
[index]; };

139 
UINT
 
GëSize
(Ë{  (
	gUINT
)
	gm_li°
.
size
(); }

	@include/workload/tpce/egen/InputFlatFilesDeclarations.h

41 #i‚de‡
INPUT_FLAT_FILE_DECLARATIONS_H


42 
	#INPUT_FLAT_FILE_DECLARATIONS_H


	)

44 
	~<io°ªam
>

45 
	~"TabÀC⁄°s.h
"

46 
	~"TabÀ_Defs.h
"

47 
	~"TødeTy≥IDs.h
"

48 
	~"FœtFûe.h
"

49 
	~"I≈utFûe.h
"

50 
	~"I≈utFûeNoWeight.h
"

52 
usög
 
«me•a˚
 
	g°d
;

56 
«me•a˚
 
	gTPCE


58 c⁄° 
	gcWORD_Àn
 = 30;

61 
	gTAccou¡NameI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


63 
NAME
[ 
cCA_NAME_Àn
+1 ];

65 
Lﬂd
(
i°ªam
 &
fûe
);

66 } *
	tPAccou¡NameI≈utRow
;

69 
	gTAªaCodeI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


72 
AREA_CODE
[ 
cAREA_Àn
+1 ];

74 
Lﬂd
(
i°ªam
 &
fûe
);

75 } *
	tPAªaCodeI≈utRow
;

78 
	gTCom∑nyI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


80 
TIdít
 
CO_ID
;

81 
	gCO_ST_ID
[ 
cST_ID_Àn
+1 ];

82 
	gCO_NAME
[ 
cCO_NAME_Àn
+1 ];

83 
	gCO_IN_ID
[ 
cIN_ID_Àn
+1 ];

84 
	gCO_DESC
[ 
cCO_DESC_Àn
+1 ];

86 
Lﬂd
(
i°ªam
 &
fûe
);

87 } *
	tPCom∑nyI≈utRow
;

90 
	gTCom∑nyCom≥tô‹I≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


92 
TIdít
 
CP_CO_ID
;

93 
TIdít
 
	gCP_COMP_CO_ID
;

94 
	gCP_IN_ID
[
cIN_ID_Àn
+1];

96 
Lﬂd
(
i°ªam
 &
fûe
);

97 } *
	tPCom∑nyCom≥tô‹I≈utRow
;

100 
	gTCom∑nySPR©eI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


103 
CO_SP_RATE
[ 
cCO_SP_RATE_Àn
+1 ];

105 
Lﬂd
(
i°ªam
 &
fûe
);

106 } *
	tPCom∑nySPR©eI≈utRow
;

109 
	gTFú°NameI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


111 
FIRST_NAME
[
cF_NAME_Àn
+1];

113 
Lﬂd
(
i°ªam
 &
fûe
);

114 } *
	tPFú°NameI≈utRow
;

118 
	gTLa°NameI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


120 
LAST_NAME
[
cL_NAME_Àn
+1];

122 
Lﬂd
(
i°ªam
 &
fûe
);

123 } *
	tPLa°NameI≈utRow
;

126 
	gTNewsI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


128 
WORD
[
cWORD_Àn
+1];

130 
Lﬂd
(
i°ªam
 &
fûe
);

131 } *
	tPNewsI≈utRow
;

134 
	gTSåìtNameI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


136 
STREET
[ 
cAD_LINE_Àn
+1 ];

138 
Lﬂd
(
i°ªam
 &
fûe
);

139 } *
	tPSåìtNameI≈utRow
;

142 
	gTSåìtSuffixI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


144 
SUFFIX
[ 
cAD_LINE_Àn
+1 ];

146 
Lﬂd
(
i°ªam
 &
fûe
);

147 } *
	tPSåìtSuffixI≈utRow
;

150 
	gTSecurôyI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


152 
TIdít
 
S_ID
;

153 
	gS_ISSUE
[ 
cS_ISSUE_Àn
+1 ];

154 
	gS_ST_ID
[ 
cST_ID_Àn
+1 ];

155 
	gS_SYMB
[ 
cSYMBOL_Àn
+1 ];

156 
	gS_EX_ID
[ 
cEX_ID_Àn
+1];

157 
TIdít
 
	gS_CO_ID
;

159 
Lﬂd
(
i°ªam
 &
fûe
);

160 } *
	tPSecurôõsI≈utRow
;

163 
	gTTaxR©eI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


165 
TAX_ID
[ 
cTX_ID_Àn
+1 ];

166 
	gTAX_NAME
[ 
cTX_NAME_Àn
+1 ];

167 
	gTAX_RATE
;

169 
Lﬂd
(
i°ªam
 &
fûe
);

170 } *
	tPTaxR©eI≈utRow
;

173 
	gTZùCodeI≈utRow
 : 
	tpublic
 
	tTBa£I≈utRow


175 
UINT
 
iDivisi⁄TaxKey
;

176 
	gZC_CODE
[
cZC_CODE_Àn
+1];

177 
	gZC_TOWN
[
cZC_TOWN_Àn
+1];

178 
	gZC_DIV
[
cZC_DIV_Àn
+1];

180 
Lﬂd
(
i°ªam
 &
fûe
);

181 } *
	tPZùCodeI≈utRow
;

193 
	sTBa£EÀmítsLimôs


195 
UINT
 
	gm_iTŸÆEÀmíts
;

198 
TBa£EÀmítsLimôs
()

199 : 
m_iTŸÆEÀmíts
(0)

203 
UINT
 
TŸÆEÀmíts
(Ë{ 
	gm_iTŸÆEÀmíts
;}

204 
	gvútuÆ
 ~
TBa£EÀmítsLimôs
() {}

205 } *
	tPBa£EÀmítsLimôs
;

207 
	gTBa£KeyEÀmítsLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


209 
m_iHighe°Key
;

212 
TBa£KeyEÀmítsLimôs
()

213 : 
TBa£EÀmítsLimôs
(), 
m_iHighe°Key
(0)

217 
Highe°Key
(Ë{ 
	gm_iHighe°Key
;}

218 } *
	tPBa£KeyEÀmítsLimôs
;

221 
	gTAªaCodesLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


223 
TAªaCodesLimôs
()

225 
m_iHighe°Key
 = 306;

226 
	gm_iTŸÆEÀmíts
 = 284;

228 } *
	tPAªaCodesLimôs
;

231 
	gTCh¨geLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


233 
TCh¨geLimôs
()

235 
m_iTŸÆEÀmíts
 = 15;

237 } *
	tPCh¨geLimôs
;

240 
	gTCommissi⁄R©eLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


242 
TCommissi⁄R©eLimôs
()

244 
m_iTŸÆEÀmíts
 = 240;

246 } *
	tPCommissi⁄R©eLimôs
;

249 
	gTCom∑nyLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


251 
TCom∑nyLimôs
()

253 
m_iTŸÆEÀmíts
 = 5000;

255 } *
	tPCom∑nyLimôs
;

258 
	gTCom∑nyCom≥tô‹Limôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


260 
TCom∑nyCom≥tô‹Limôs
()

262 
m_iTŸÆEÀmíts
 = 15000;

264 } *
	tPCom∑nyCom≥tô‹Limôs
;

267 
	gTCom∑nySPR©eLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


269 
TCom∑nySPR©eLimôs
()

271 
m_iHighe°Key
 = 39;

272 
	gm_iTŸÆEÀmíts
 = 39;

274 } *
	tPCom∑nySPR©eLimôs
;

277 
	gTExch™geLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


279 
TExch™geLimôs
()

281 
m_iTŸÆEÀmíts
 = 4;

283 } *
	tPExch™geLimôs
;

286 
	gTFemÆeFú°NamesLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


288 
TFemÆeFú°NamesLimôs
()

290 
m_iHighe°Key
 = 11890;

291 
	gm_iTŸÆEÀmíts
 = 4275;

293 } *
	tPFemÆeFú°NamesLimôs
;

296 
	gTIndu°ryLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


298 
TIndu°ryLimôs
()

300 
m_iTŸÆEÀmíts
 = 102;

302 } *
	tPIndu°ryLimôs
;

305 
	gTLa°NamesLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


307 
TLa°NamesLimôs
()

309 
m_iHighe°Key
 = 69195;

310 
	gm_iTŸÆEÀmíts
 = 65000;

312 } *
	tPLa°NamesLimôs
;

315 
	gTMÆeFú°NamesLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


317 
TMÆeFú°NamesLimôs
()

319 
m_iHighe°Key
 = 9554;

320 
	gm_iTŸÆEÀmíts
 = 1220;

322 } *
	tPMÆeFú°NamesLimôs
;

325 
	gTNewsLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


327 
TNewsLimôs
()

329 
m_iHighe°Key
 = 69195;

330 
	gm_iTŸÆEÀmíts
 = 65000;

332 } *
	tPNewsLimôs
;

335 
	gTSe˘‹Limôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


337 
TSe˘‹Limôs
()

339 
m_iTŸÆEÀmíts
 = 12;

341 } *
	tPSe˘‹Limôs
;

344 
	gTSecurôyLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


346 
TSecurôyLimôs
()

348 
m_iTŸÆEÀmíts
 = 6850;

350 } *
	tPSecurôyLimôs
;

353 
	gTSètusTy≥Limôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


355 
TSètusTy≥Limôs
()

357 
m_iTŸÆEÀmíts
 = 5;

359 } *
	tPSètusTy≥Limôs
;

363 
	gTSåìtNamesLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


365 
TSåìtNamesLimôs
()

367 
m_iHighe°Key
 = 1000;

368 
	gm_iTŸÆEÀmíts
 = 1000;

370 } *
	tPSåìtNamesLimôs
;

373 
	gTSåìtSuffixLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


375 
TSåìtSuffixLimôs
()

377 
m_iHighe°Key
 = 17;

378 
	gm_iTŸÆEÀmíts
 = 17;

380 } *
	tPSåìtSuffixLimôs
;

383 
	gTTaxabÀAccou¡NameLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


385 
TTaxabÀAccou¡NameLimôs
()

387 
m_iTŸÆEÀmíts
 = 13;

389 } *
	tPTaxabÀAccou¡NameLimôs
;

392 
	gTN⁄TaxabÀAccou¡NameLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


394 
TN⁄TaxabÀAccou¡NameLimôs
()

396 
m_iTŸÆEÀmíts
 = 11;

398 } *
	tPN⁄TaxabÀAccou¡NameLimôs
;

401 
	gTTaxøãLimôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


403 
TTaxøãLimôs
()

405 
m_iTŸÆEÀmíts
 = 320;

407 } *
	tPTaxøãLimôs
;

410 
	gTTødeTy≥Limôs
 : 
	tpublic
 
	tTBa£EÀmítsLimôs


412 
TTødeTy≥Limôs
()

414 
m_iTŸÆEÀmíts
 = 5;

416 } *
	tPTødeTy≥Limôs
;

419 
	gTZùCodeLimôs
 : 
	tpublic
 
	tTBa£KeyEÀmítsLimôs


421 
TZùCodeLimôs
()

423 
m_iHighe°Key
 = 23121;

424 
	gm_iTŸÆEÀmíts
 = 14741;

426 } *
	tPZùCodeLimôs
;

434 
	eeSètusTy≥ID


436 
	geCom∂ëed
 = 0,

437 
	geA˘ive
,

438 
	geSubmôãd
,

439 
	gePídög
,

440 
	geC™˚Àd
,

442 
	geMaxSètusTy≥ID


448 
	eeExch™geID


450 
	geNYSE
 = 0,

451 
	geNASDAQ
,

452 
	geAMEX
,

453 
	gePCX


458 c⁄° 
	giBa£Com∑nyCou¡
 = 5000;

459 c⁄° 
	giBa£Com∑nyCom≥tô‹Cou¡
 = 3 * 
iBa£Com∑nyCou¡
;

460 c⁄° 
	giO√LﬂdUnôCom∑nyCou¡
 = 500;

461 c⁄° 
	giO√LﬂdUnôSecurôyCou¡
 = 685;

462 c⁄° 
	giO√LﬂdUnôCom∑nyCom≥tô‹Cou¡
 = 3 * 
iO√LﬂdUnôCom∑nyCou¡
;

470 
	gCI≈utFûe
<
	tTAªaCodeI≈utRow
, 
	tTAªaCodesLimôs
> 
	tTAªaCodeFûe
;

471 
	gCI≈utFûe
<
	tTCom∑nySPR©eI≈utRow
, 
	tTCom∑nySPR©eLimôs
> 
	tTCom∑nySPR©eFûe
;

472 
	gCI≈utFûe
<
	tTFú°NameI≈utRow
, 
	tTFemÆeFú°NamesLimôs
> 
	tTFemÆeFú°NamesFûe
;

473 
	gCI≈utFûe
<
	tTLa°NameI≈utRow
, 
	tTLa°NamesLimôs
> 
	tTLa°NamesFûe
;

474 
	gCI≈utFûe
<
	tTFú°NameI≈utRow
, 
	tTMÆeFú°NamesLimôs
> 
	tTMÆeFú°NamesFûe
;

475 
	gCI≈utFûe
<
	tTNewsI≈utRow
, 
	tTNewsLimôs
> 
	tTNewsFûe
;

476 
	gCI≈utFûe
<
	tTSåìtNameI≈utRow
, 
	tTSåìtNamesLimôs
> 
	tTSåìtNamesFûe
;

477 
	gCI≈utFûe
<
	tTSåìtSuffixI≈utRow
, 
	tTSåìtSuffixLimôs
> 
	tTSåìtSuffixFûe
;

478 
	gCI≈utFûe
<
	tTZùCodeI≈utRow
, 
	tTZùCodeLimôs
> 
	tTZùCodeFûe
;

480 
	gCI≈utFûeNoWeight
<
	tTTaxR©eI≈utRow
> 
	tTTaxR©esCou¡ryFûe
;

481 
	gCI≈utFûeNoWeight
<
	tTTaxR©eI≈utRow
> 
	tTTaxR©esDivisi⁄Fûe
;

483 
	gCFœtFûe
<
	tCHARGE_ROW
, 
	tTCh¨geLimôs
> 
	tTCh¨geFûe
;

484 
	gCFœtFûe
<
	tCOMMISSION_RATE_ROW
, 
	tTCommissi⁄R©eLimôs
> 
	tTCommissi⁄R©eFûe
;

485 
	gCFœtFûe
<
	tEXCHANGE_ROW
, 
	tTExch™geLimôs
> 
	tTExch™geFûe
;

486 
	gCFœtFûe
<
	tINDUSTRY_ROW
, 
	tTIndu°ryLimôs
> 
	tTIndu°ryFûe
;

487 
	gCFœtFûe
<
	tSECTOR_ROW
, 
	tTSe˘‹Limôs
> 
	tTSe˘‹Fûe
;

488 
	gCFœtFûe
<
	tSTATUS_TYPE_ROW
, 
	tTSètusTy≥Limôs
> 
	tTSètusTy≥Fûe
;

489 
	gCFœtFûe
<
	tTAccou¡NameI≈utRow
, 
	tTTaxabÀAccou¡NameLimôs
> 
	tTTaxabÀAccou¡NameFûe
;

490 
	gCFœtFûe
<
	tTAccou¡NameI≈utRow
, 
	tTN⁄TaxabÀAccou¡NameLimôs
> 
	tTN⁄TaxabÀAccou¡NameFûe
;

491 
	gCFœtFûe
<
	tTAXRATE_ROW
, 
	tTTaxøãLimôs
> 
	tTTaxøãFûe
;

492 
	gCFœtFûe
<
	tTRADE_TYPE_ROW
, 
	tTTødeTy≥Limôs
> 
	tTTødeTy≥Fûe
;

	@include/workload/tpce/egen/InputFlatFilesStructure.h

42 #i‚de‡
INPUT_FLAT_FILE_STRUCTURE_H


43 
	#INPUT_FLAT_FILE_STRUCTURE_H


	)

45 
	~"EGíSènd¨dTy≥s.h
"

46 
	~"DrivîTy≥s.h
"

47 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

48 
	~"Com∑nyFûe.h
"

49 
	~"Com∑nyCom≥tô‹Fûe.h
"

50 
	~"SecurôyFûe.h
"

52 
«me•a˚
 
	gTPCE


55 
	eeOuçutVîbosôy


57 
	geOuçutQuõt
,

58 
	geOuçutVîbo£


62 ˛as†
	cCI≈utFûes


64 
	gpublic
:

65 
TAªaCodeFûe
 *
AªaCodes
;

66 
TCh¨geFûe
 *
	gCh¨ge
;

67 
TCommissi⁄R©eFûe
 *
	gCommissi⁄R©e
;

68 
CCom∑nyFûe
 *
	gCom∑ny
;

69 
CCom∑nyCom≥tô‹Fûe
 *
	gCom∑nyCom≥tô‹
;

70 
TCom∑nySPR©eFûe
 *
	gCom∑nySPR©e
;

71 
TExch™geFûe
 *
	gExch™ge
;

72 
TFemÆeFú°NamesFûe
 *
	gFemÆeFú°Names
;

73 
TIndu°ryFûe
 *
	gIndu°ry
;

74 
TLa°NamesFûe
 *
	gLa°Names
;

75 
TMÆeFú°NamesFûe
 *
	gMÆeFú°Names
;

76 
TNewsFûe
 *
	gNews
;

77 
TSe˘‹Fûe
 *
	gSe˘‹s
;

78 
CSecurôyFûe
 *
	gSecurôõs
;

79 
TSètusTy≥Fûe
 *
	gSètusTy≥
;

80 
TSåìtNamesFûe
 *
	gSåìt
;

81 
TSåìtSuffixFûe
 *
	gSåìtSuffix
;

82 
TTaxabÀAccou¡NameFûe
 *
	gTaxabÀAccou¡Name
;

83 
TN⁄TaxabÀAccou¡NameFûe
 *
	gN⁄TaxabÀAccou¡Name
;

84 
TTaxR©esCou¡ryFûe
 *
	gTaxR©esCou¡ry
;

85 
TTaxR©esDivisi⁄Fûe
 *
	gTaxR©esDivisi⁄
;

86 
TTødeTy≥Fûe
 *
	gTødeTy≥
;

87 
TZùCodeFûe
 *
	gZùCode
;

89 
CI≈utFûes
()

90 : 
AªaCodes
(
NULL
)

91 , 
Ch¨ge
(
NULL
)

92 , 
Commissi⁄R©e
(
NULL
)

93 , 
Com∑ny
(
NULL
)

94 , 
Com∑nyCom≥tô‹
(
NULL
)

95 , 
Com∑nySPR©e
(
NULL
)

96 , 
Exch™ge
(
NULL
)

97 , 
FemÆeFú°Names
(
NULL
)

98 , 
Indu°ry
(
NULL
)

99 , 
La°Names
(
NULL
)

100 , 
MÆeFú°Names
(
NULL
)

101 , 
News
(
NULL
)

102 , 
Se˘‹s
(
NULL
)

103 , 
Securôõs
(
NULL
)

104 , 
SètusTy≥
(
NULL
)

105 , 
Såìt
(
NULL
)

106 , 
SåìtSuffix
(
NULL
)

107 , 
TaxabÀAccou¡Name
(
NULL
)

108 , 
N⁄TaxabÀAccou¡Name
(
NULL
)

109 , 
TaxR©esCou¡ry
(
NULL
)

110 , 
TaxR©esDivisi⁄
(
NULL
)

111 , 
TødeTy≥
(
NULL
)

112 , 
ZùCode
(
NULL
)

114 ~
CI≈utFûes
() {};

116 
boﬁ
 
Inôülize
(
eDrivîTy≥
 
eTy≥
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, c⁄° *
szP©hName
);

	@include/workload/tpce/egen/LastTradeTable.h

40 #i‚de‡
LAST_TRADE_TABLE_H


41 
	#LAST_TRADE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"SecurôyFûe.h
"

45 
	~"MEESecurôy.h
"

47 
«me•a˚
 
	gTPCE


50 
˛ass
 
	gCLa°TødeTabÀ
 : 
public
 
TabÀTem∂©e
<
LAST_TRADE_ROW
>

52 
TIdít
 
m_iSecurôyCou¡
;

53 
TIdít
 
	gm_iSèπFromSecurôy
;

54 
CSecurôyFûe
* 
	gm_SecurôyFûe
;

55 
CD©eTime
 
	gm_d©e
;

56 
CMEESecurôy
 
	gm_MEESecurôy
;

57 
	gm_iHoursOfInôülTødes
;

58 
TIdít
 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
;

63 
Gíî©eLa°TødeRow
()

65 
	gm_SecurôyFûe
->
Cª©eSymbﬁ
(
m_iLa°RowNumbî
, 
m_row
.
LT_S_SYMB
, 
°©ic_ˇ°
<>((m_row.LT_S_SYMB)));

67 
	gm_row
.
	gLT_DTS
 = 
m_d©e
;

69 
	gm_MEESecurôy
.
Inô
(
m_iHoursOfInôülTødes
 * 
Sec⁄dsPîHour
, 
NULL
, NULL, 0);

71 
	gm_row
.
	gLT_PRICE
 = 
m_MEESecurôy
.
CÆcuœãPri˚
(
m_iLa°RowNumbî
, 0).
DﬁœrAmou¡
();

73 
	gm_row
.
	gLT_OPEN_PRICE
 = 
m_MEESecurôy
.
CÆcuœãPri˚
(
m_iLa°RowNumbî
, 0).
DﬁœrAmou¡
();

77 
	gm_row
.
	gLT_VOL
 = 0;

89 
InôNextLﬂdUnô
()

93 
CÀ¨Rec‹d
();

96 
	gpublic
:

100 
CLa°TødeTabÀ
(
CI≈utFûes
 
öputFûes
,

101 
TIdít
 
iCu°omîCou¡
,

102 
TIdít
 
iSèπFromCu°omî
,

103 
INT32
 
iHoursOfInôülTødes
)

104 : 
TabÀTem∂©e
<
LAST_TRADE_ROW
>()

105 , 
m_SecurôyFûe
(
öputFûes
.
Securôõs
)

106 , 
m_iHoursOfInôülTødes
–
iHoursOfInôülTødes
 )

108 
	gm_iSecurôyCou¡
 = 
m_SecurôyFûe
->
CÆcuœãSecurôyCou¡
(
iCu°omîCou¡
);

109 
	gm_iSèπFromSecurôy
 = 
m_SecurôyFûe
->
CÆcuœãSèπFromSecurôy
(
iSèπFromCu°omî
);

111 
	gm_iLa°RowNumbî
 = 
m_iSèπFromSecurôy
;

115 
	gm_d©e
.
Së
–
InôülTødeP›uœti⁄Ba£Yór
, 
InôülTødeP›uœti⁄Ba£M⁄th
,

116 
InôülTødeP›uœti⁄Ba£Day
, 
InôülTødeP›uœti⁄Ba£Hour
,

117 
InôülTødeP›uœti⁄Ba£Möuã
, 
InôülTødeP›uœti⁄Ba£Sec⁄d
,

118 
InôülTødeP›uœti⁄Ba£Fø˘i⁄
);

119 
	gm_d©e
.
Add
(
m_iHoursOfInôülTødes
 / 
HoursPîW‹kDay
, 0, 
åue
);

121 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
 = 
m_SecurôyFûe
->
CÆcuœãSecurôyCou¡
(
iDeÁu…LﬂdUnôSize
);

125 
boﬁ
 
Gíî©eNextRec‹d
()

127 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
 == 0)

129 
InôNextLﬂdUnô
();

132 
Gíî©eLa°TødeRow
();

134 ++
	gm_iLa°RowNumbî
;

137 
	gm_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < (
m_iSèπFromSecurôy
 + 
m_iSecurôyCou¡
);

139  (
M‹eRec‹ds
());

	@include/workload/tpce/egen/MEE.h

87 #i‚de‡
MEE_H


88 
	#MEE_H


	)

90 
	~"EGíUtûôõs_°dafx.h
"

91 
	~"MEETødeReque°A˘i⁄s.h
"

92 
	~"TxnH¨√ssSåu˘s.h
"

93 
	~"MEEPri˚Bﬂrd.h
"

94 
	~"MEETickîT≠e.h
"

95 
	~"MEETødögFlo‹.h
"

96 
	~"MEESUTI¡îÁ˚.h
"

97 
	~"Ba£Loggî.h
"

98 
	~"DrivîP¨amSëtögs.h
"

100 
«me•a˚
 
	gTPCE


103 ˛as†
	cCMEE


105 
	g¥iv©e
:

107 
CDrivîMEESëtögs
 
m_DrivîMEESëtögs
;

109 
CMEESUTI¡îÁ˚
* 
	gm_pSUT
;

110 
CBa£Loggî
* 
	gm_pLoggî
;

111 
CMEEPri˚Bﬂrd
 
	gm_Pri˚Bﬂrd
;

112 
CMEETickîT≠e
 
	gm_TickîT≠e
;

113 
CMEETødögFlo‹
 
	gm_TødögFlo‹
;

114 
CD©eTime
 
	gm_Ba£Time
;

115 
CD©eTime
 
	gm_CuºítTime
;

117 
CMuãx
 
	gm_MEELock
;

120 
AutoSëRNGSìds
–
UINT32
 
UniqueId
 );

122 
	gpublic
:

123 c⁄° 
INT32
 
NO_OUTSTANDING_TRADES
 = 
CMEETødögFlo‹
::NO_OUTSTANDING_TRADES;

126 
CMEE
–
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
, 
UINT32
 
UniqueId
 );

129 
CMEE
–
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
, 
UINT32
 
UniqueId
, 
RNGSEED
 
TickîT≠eRNGSìd
, RNGSEED 
TødögFlo‹RNGSìd
 );

131 ~
CMEE
();

133 
RNGSEED
 
GëTickîT≠eRNGSìd
( );

134 
RNGSEED
 
GëTødögFlo‹RNGSìd
( );

136 
SëBa£Time
( );

138 
INT32
 
SubmôTødeReque°
–
PTødeReque°
 
pTødeReque°
 );

139 
INT32
 
Gíî©eTødeResu…
( );

141 
boﬁ
 
E«bÀTickîT≠e
( );

142 
boﬁ
 
DißbÀTickîT≠e
( );

	@include/workload/tpce/egen/MEEPriceBoard.h

43 #i‚de‡
MEE_PRICE_BOARD_H


44 
	#MEE_PRICE_BOARD_H


	)

46 
	~"EGíUtûôõs_°dafx.h
"

47 
	~"EGíTabÀs_°dafx.h
"

48 
	~"MEESecurôy.h
"

50 
«me•a˚
 
	gTPCE


53 ˛as†
	cCMEEPri˚Bﬂrd


56 
	g¥iv©e
:

61 
m_fMónInTheM⁄eySubmissi⁄Dñay
;

62 
CMEESecurôy
 
	gm_Securôy
;

63 
CSecurôyFûe
* 
	gm_pSecurôyFûe
;

65 
	gpublic
:

66 
TIdít
 
m_iNumbîOfSecurôõs
;

68 
CMEEPri˚Bﬂrd
–
INT32
 
TødögTimeSoF¨
,

69 
CD©eTime
* 
pBa£Time
,

70 
CD©eTime
* 
pCuºítTime
,

71 c⁄° 
CI≈utFûes
& 
öputFûes


73 ~
CMEEPri˚Bﬂrd
( );

75 
GëSymbﬁ
–
TIdít
 
SecurôyIndex
,

76 * 
szOuçut
,

77 
size_t
 
iOuçutLí
);

79 
CM⁄ey
 
GëMöPri˚
();

81 
CM⁄ey
 
GëMaxPri˚
();

83 
CM⁄ey
 
GëCuºítPri˚
–
TIdít
 
SecurôyIndex
 );

84 
CM⁄ey
 
GëCuºítPri˚
–* 
pSecurôySymbﬁ
 );

86 
CM⁄ey
 
CÆcuœãPri˚
–* 
pSecurôySymbﬁ
, 
fTime
 );

88 
GëSubmissi⁄Time
(

89 * 
pSecurôySymbﬁ
,

90 
fPídögTime
,

91 
CM⁄ey
 
fLimôPri˚
,

92 
eTødeTy≥ID
 
TødeTy≥


94 
GëSubmissi⁄Time
(

95 
TIdít
 
SecurôyIndex
,

96 
fPídögTime
,

97 
CM⁄ey
 
fLimôPri˚
,

98 
eTødeTy≥ID
 
TødeTy≥


100 
GëCom∂ëi⁄Time
(

101 
TIdít
 
SecurôyIndex
,

102 
fSubmissi⁄Time
,

103 
CM⁄ey
* 
pCom∂ëi⁄Pri˚


	@include/workload/tpce/egen/MEESUTInterface.h

48 #i‚de‡
MEE_SUT_INTERFACE_H


49 
	#MEE_SUT_INTERFACE_H


	)

51 
	~"TxnH¨√ssSåu˘s.h
"

53 
«me•a˚
 
	gTPCE


56 ˛as†
	cCMEESUTI¡îÁ˚


58 
	gpublic
:

69 
vútuÆ
 ~
CMEESUTI¡îÁ˚
() {};

71 
vútuÆ
 
boﬁ
 
TødeResu…
–
PTødeResu…TxnI≈ut
 
pTxnI≈ut
 ) = 0;

72 
vútuÆ
 
boﬁ
 
M¨këFìd
–
PM¨këFìdTxnI≈ut
 
pTxnI≈ut
 ) = 0;

	@include/workload/tpce/egen/MEESecurity.h

48 #i‚de‡
MEE_SECURITY_H


49 
	#MEE_SECURITY_H


	)

51 
	~"EGíUtûôõs_°dafx.h
"

52 
	~"TødeTy≥IDs.h
"

53 
	~"SecurôyPri˚R™ge.h
"

55 
«me•a˚
 
	gTPCE


58 ˛as†
	cCMEESecurôy


60 
	g¥iv©e
:

61 
CR™dom
 
m_∫d
;

62 
CM⁄ey
 
	gm_fR™geLow
;

63 
CM⁄ey
 
	gm_fR™geHigh
;

64 
CM⁄ey
 
	gm_fR™ge
;

65 
	gm_iPîiod
;

66 
INT32
 
	gm_TødögTimeSoF¨
;

69 
CD©eTime
* 
	gm_pBa£Time
;

70 
CD©eTime
* 
	gm_pCuºítTime
;

80 
	gm_fMónInTheM⁄eySubmissi⁄Dñay
;

95 
ölöe
 
InôülTime
–
TIdít
 
SecurôyIndex
 );

107 
ölöe
 
NegExp
(
fMón
);

121 
CÆcuœãTime
–
CM⁄ey
 
fSèπPri˚
,

122 
CM⁄ey
 
fEndPri˚
,

123 
iSèπDúe˘i⁄
);

125 
	gpublic
:

136 
CMEESecurôy
();

152 
Inô
(
INT32
 
TødögTimeSoF¨
, 
CD©eTime
 *
pBa£Time
, CD©eTimê*
pCuºítTime
, 
fMónInTheM⁄eySubmissi⁄Dñay
);

165 
CM⁄ey
 
CÆcuœãPri˚
(
TIdít
 
SecurôyIndex
, 
fTime
);

176 
CM⁄ey
 
GëCuºítPri˚
–
TIdít
 
SecurôyIndex
 );

187 
CM⁄ey
 
GëMöPri˚
( );

198 
CM⁄ey
 
GëMaxPri˚
( );

212 
GëSubmissi⁄Time
–
TIdít
 
SecurôyIndex
,

213 
fPídögTime
,

214 
CM⁄ey
 
fLimôPri˚
,

215 
eTødeTy≥ID
 
TødeTy≥


239 
GëCom∂ëi⁄Time
–
TIdít
 
SecurôyIndex
,

240 
fSubmissi⁄Time
,

241 
CM⁄ey
* 
pCom∂ëi⁄Pri˚


	@include/workload/tpce/egen/MEETickerTape.h

46 #i‚de‡
MEE_TICKER_TAPE_H


47 
	#MEE_TICKER_TAPE_H


	)

49 
	~"EGíUtûôõs_°dafx.h
"

50 
	~"TxnH¨√ssSåu˘s.h
"

51 
	~"TimîWhìl.h
"

52 
	~"MEESUTI¡îÁ˚.h
"

53 
	~"MEEPri˚Bﬂrd.h
"

55 
«me•a˚
 
	gTPCE


58 ˛as†
	cCMEETickîT≠e


60 
	g¥iv©e
:

61 
CMEESUTI¡îÁ˚
* 
m_pSUT
;

62 
CMEEPri˚Bﬂrd
* 
	gm_pPri˚Bﬂrd
;

63 
TM¨këFìdTxnI≈ut
 
	gm_TxnI≈ut
;

64 
INT32
 
	gm_B©chIndex
;

65 
INT32
 
	gm_B©chDu∂iˇãs
;

66 
CR™dom
 
	gm_∫d
;

67 
boﬁ
 
	gm_E«bÀd
;

68 
TSètusTy≥Fûe
* 
	gm_pSètusTy≥
;

69 
TTødeTy≥Fûe
* 
	gm_pTødeTy≥
;

71 c⁄° 
	gLIMIT_TRIGGER_TRADE_QTY
;

72 c⁄° 
	gRANDOM_TRADE_QTY_1
;

73 c⁄° 
	gRANDOM_TRADE_QTY_2
;

75 
	gCTimîWhìl
< 
	gTTickîE¡ry
, 
	gCMEETickîT≠e
, 900, 1000 > 
	gm_LimôOrdîTimîs
;

76 
	gqueue
<
	gPTickîE¡ry
> 
	gm_InTheM⁄eyLimôOrdîQ
;

78 
CD©eTime
* 
	gm_pBa£Time
;

79 
CD©eTime
* 
	gm_pCuºítTime
;

81 
AddToB©ch
–
PTickîE¡ry
 
pTickîE¡ry
 );

82 
AddAπificülE¡rõs
( );

83 
AddLimôTriggî
–
PTickîE¡ry
 
pTickîE¡ry
 );

86 
Inôülize
( );

88 
	gpublic
:

90 
CMEETickîT≠e
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, c⁄° 
CI≈utFûes
 &
öputFûes
 );

93 
CMEETickîT≠e
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, 
RNGSEED
 
RNGSìd
, c⁄° 
CI≈utFûes
 &
öputFûes
 );

95 ~
CMEETickîT≠e
( );

97 
AddE¡ry
–
PTickîE¡ry
 
pTickîE¡ry
 );

98 
Po°LimôOrdî
–
PTødeReque°
 
pTødeReque°
 );

99 
boﬁ
 
DißbÀTickî
( );

100 
boﬁ
 
E«bÀTickî
( );

101 
eTødeTy≥ID
 
C⁄vîtTødeTy≥IdToEnum
–* 
pTødeTy≥
 );

103 
RNGSEED
 
GëRNGSìd
( );

104 
SëRNGSìd
–
RNGSEED
 
RNGSìd
 );

	@include/workload/tpce/egen/MEETradeRequestActions.h

42 #i‚de‡
MEE_TRADE_REQUEST_ACTIONS_H


43 
	#MEE_TRADE_REQUEST_ACTIONS_H


	)

45 
«me•a˚
 
	gTPCE


48 
	eeMEETødeReque°A˘i⁄


50 
	geMEEPro˚ssOrdî
 = 0,

51 
	geMEESëLimôOrdîTriggî


	@include/workload/tpce/egen/MEETradingFloor.h

46 #i‚de‡
MEE_TRADING_FLOOR_H


47 
	#MEE_TRADING_FLOOR_H


	)

49 
	~"EGíUtûôõs_°dafx.h
"

50 
	~"TxnH¨√ssSåu˘s.h
"

51 
	~"TimîWhìl.h
"

52 
	~"MEESUTI¡îÁ˚.h
"

53 
	~"MEEPri˚Bﬂrd.h
"

54 
	~"MEETickîT≠e.h
"

56 
«me•a˚
 
	gTPCE


59 ˛as†
	cCMEETødögFlo‹


61 
	g¥iv©e
:

62 
CMEESUTI¡îÁ˚
* 
m_pSUT
;

63 
CMEEPri˚Bﬂrd
* 
	gm_pPri˚Bﬂrd
;

64 
CMEETickîT≠e
* 
	gm_pTickîT≠e
;

66 
CD©eTime
* 
	gm_pBa£Time
;

67 
CD©eTime
* 
	gm_pCuºítTime
;

69 
	gCTimîWhìl
< 
	gTTødeReque°
, 
	gCMEETødögFlo‹
, 5, 1 > 
	gm_OrdîTimîs
;

70 
CR™dom
 
	gm_∫d
;

71 
	gm_OrdîPro˚ssögDñayMón
;

72 c⁄° 
INT32
 
	gm_MaxOrdîPro˚ssögDñay
 = 5;

74 
GíPro˚ssögDñay
–
fMón
 );

75 
SídTødeResu…
–
PTødeReque°
 
pTødeReque°
 );

77 
	gpublic
:

78 c⁄° 
INT32
 
NO_OUTSTANDING_TRADES
 = 
CTimîWhìl
< 
TTødeReque°
, 
	gCMEETødögFlo‹
, 5, 1 >::
NO_OUTSTANDING_TIMERS
;

81 
CMEETødögFlo‹
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CMEETickîT≠e
* 
pTickîT≠e
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
 );

84 
CMEETødögFlo‹
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CMEETickîT≠e
* 
pTickîT≠e
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, 
RNGSEED
 
RNGSìd
 );

86 ~
CMEETødögFlo‹
( );

88 
INT32
 
SubmôTødeReque°
–
PTødeReque°
 
pTødeReque°
 );

89 
INT32
 
Gíî©eTødeResu…
( );

91 
RNGSEED
 
GëRNGSìd
( );

92 
SëRNGSìd
–
RNGSEED
 
RNGSìd
 );

	@include/workload/tpce/egen/MiscConsts.h

40 #i‚de‡
MISC_CONSTS_H


41 
	#MISC_CONSTS_H


	)

43 
	~"EGíSènd¨dTy≥s.h
"

45 
«me•a˚
 
	gTPCE


48 c⁄° 
TIdít
 
	giDeÁu…SèπFromCu°omî
 = 1;

54 c⁄° 
TIdít
 
	giDeÁu…Cu°omîCou¡
 = 5000;

56 c⁄° 
TIdít
 
	giBrokîsDiv
 = 100;

62 c⁄° 
TIdít
 
	giDeÁu…LﬂdUnôSize
 = 1000;

66 c⁄° 
TIdít
 
	giTIdítShi·
 = 
INT64_CONST
(4300000000);

70 c⁄° 
TTøde
 
	giTTødeShi·
 = 
INT64_CONST
(200000000000000);

72 c⁄° 
	giMaxHo°«me
 = 64;

73 c⁄° 
	giMaxDBName
 = 64;

74 c⁄° 
	giMaxP©h
 = 512;

79 c⁄° 
INT16
 
	gInôülTødeP›uœti⁄Ba£Yór
 = 2005;

80 c⁄° 
UINT16
 
	gInôülTødeP›uœti⁄Ba£M⁄th
 = 1;

81 c⁄° 
UINT16
 
	gInôülTødeP›uœti⁄Ba£Day
 = 3;

82 c⁄° 
UINT16
 
	gInôülTødeP›uœti⁄Ba£Hour
 = 9;

83 c⁄° 
UINT16
 
	gInôülTødeP›uœti⁄Ba£Möuã
 = 0;

84 c⁄° 
UINT16
 
	gInôülTødeP›uœti⁄Ba£Sec⁄d
 = 0;

85 c⁄° 
UINT32
 
	gInôülTødeP›uœti⁄Ba£Fø˘i⁄
 = 0;

91 c⁄° 
	giAb‹tTøde
 = 101;

96 c⁄° 
	giAb‹ãdTødeModFa˘‹
 = 51;

100 c⁄° 
	giDaûyM¨këBa£Yór
 = 2000;

101 c⁄° 
	giDaûyM¨këBa£M⁄th
 = 1;

102 c⁄° 
	giDaûyM¨këBa£Day
 = 3;

103 c⁄° 
	giDaûyM¨këBa£Hour
 = 0;

104 c⁄° 
	giDaûyM¨këBa£Möuã
 = 0;

105 c⁄° 
	giDaûyM¨këBa£Sec⁄d
 = 0;

106 c⁄° 
	giDaûyM¨këBa£M£c
 = 0;

109 c⁄° 
	giSecurôyDëaûMöRows
 = 5;

110 c⁄° 
	giSecurôyDëaûMaxRows
 = 20;

113 c⁄° 
INT32
 
	gTødeLookupMaxTødeHi°‹yRowsRëu∫ed
 = 3;

114 c⁄° 
INT32
 
	gTødeLookupMaxRows
 = 20;

115 c⁄° 
INT32
 
	gTødeLookupFøme1MaxRows
 = 
TødeLookupMaxRows
;

116 c⁄° 
INT32
 
	gTødeLookupFøme2MaxRows
 = 
TødeLookupMaxRows
;

117 c⁄° 
INT32
 
	gTødeLookupFøme3MaxRows
 = 
TødeLookupMaxRows
;

118 c⁄° 
INT32
 
	gTødeLookupFøme4MaxRows
 = 
TødeLookupMaxRows
;

121 c⁄° 
INT32
 
	gTødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
 = 3;

122 c⁄° 
INT32
 
	gTødeUpd©eMaxRows
 = 20;

123 c⁄° 
INT32
 
	gTødeUpd©eFøme1MaxRows
 = 
TødeUpd©eMaxRows
;

124 c⁄° 
INT32
 
	gTødeUpd©eFøme2MaxRows
 = 
TødeUpd©eMaxRows
;

125 c⁄° 
INT32
 
	gTødeUpd©eFøme3MaxRows
 = 
TødeUpd©eMaxRows
;

128 c⁄° 
	gUµîCa£Lëãrs
[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

129 c⁄° 
	gLowîCa£Lëãrs
[] = "abcdefghijklmnopqrstuvwxyz";

130 c⁄° 
	gNumîÆs
[] = "0123456789";

131 c⁄° 
	gMaxLowîCa£Lëãrs
 = (
LowîCa£Lëãrs
) - 1;

138 c⁄° 
INT32
 
	gTødeLookupAVÆueF‹TødeIDGíFøme1
 = 65535;

139 c⁄° 
INT32
 
	gTødeLookupSVÆueF‹TødeIDGíFøme1
 = 7;

140 c⁄° 
INT32
 
	gTødeLookupAVÆueF‹TimeGíFøme2
 = 4095;

141 c⁄° 
INT32
 
	gTødeLookupSVÆueF‹TimeGíFøme2
 = 16;

142 c⁄° 
INT32
 
	gTødeLookupAVÆueF‹SymbﬁFøme3
 = 0;

143 c⁄° 
INT32
 
	gTødeLookupSVÆueF‹SymbﬁFøme3
 = 0;

144 c⁄° 
INT32
 
	gTødeLookupAVÆueF‹TimeGíFøme3
 = 4095;

145 c⁄° 
INT32
 
	gTødeLookupSVÆueF‹TimeGíFøme3
 = 16;

146 c⁄° 
INT32
 
	gTødeLookupAVÆueF‹TimeGíFøme4
 = 4095;

147 c⁄° 
INT32
 
	gTødeLookupSVÆueF‹TimeGíFøme4
 = 16;

149 c⁄° 
INT32
 
	gTødeUpd©eAVÆueF‹TødeIDGíFøme1
 = 65535;

150 c⁄° 
INT32
 
	gTødeUpd©eSVÆueF‹TødeIDGíFøme1
 = 7;

151 c⁄° 
INT32
 
	gTødeUpd©eAVÆueF‹TimeGíFøme2
 = 4095;

152 c⁄° 
INT32
 
	gTødeUpd©eSVÆueF‹TimeGíFøme2
 = 16;

153 c⁄° 
INT32
 
	gTødeUpd©eAVÆueF‹SymbﬁFøme3
 = 0;

154 c⁄° 
INT32
 
	gTødeUpd©eSVÆueF‹SymbﬁFøme3
 = 0;

155 c⁄° 
INT32
 
	gTødeUpd©eAVÆueF‹TimeGíFøme3
 = 4095;

156 c⁄° 
INT32
 
	gTødeUpd©eSVÆueF‹TimeGíFøme3
 = 16;

	@include/workload/tpce/egen/Money.h

43 #i‚de‡
MONEY_H


44 
	#MONEY_H


	)

46 
	~"EGíSènd¨dTy≥s.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCM⁄ey


53 
INT64
 
	gm_iAmou¡InCíts
;

57 
‰õnd
 
CM⁄ey
 
	g›î©‹
 *(
	gl_i
, CM⁄ey 
	gr_m
);

58 
‰õnd
 
CM⁄ey
 
	g›î©‹
 *(
	gl_f
, CM⁄ey 
	gr_m
);

59 
‰õnd
 
	g›î©‹
 /(
	gl_f
, 
CM⁄ey
 
	gr_m
);

61 
	gpublic
:

64 
CM⁄ey
()

65 : 
m_iAmou¡InCíts
(0)

71 
CM⁄ey
(CM⁄ey* 
m
)

72 : 
m_iAmou¡InCíts
(
m
->m_iAmountInCents)

78 
CM⁄ey
(
fAmou¡
)

79 : 
m_iAmou¡InCíts
((
INT64
)(100.0 * 
fAmou¡
 + 0.5))

85 
DﬁœrAmou¡
()

87  
m_iAmou¡InCíts
 / 100.0;

91 
INT64
 
CítsAmou¡
()

93  
	gm_iAmou¡InCíts
;

98 
CM⁄ey
 
	g›î©‹
 +(c⁄° 
	gCM⁄ey
& 
	gm
)

100 
CM⁄ey
 
ªt
(
this
);

102 
	gªt
.
	gm_iAmou¡InCíts
 +
m
.
m_iAmou¡InCíts
;

104  
	gªt
;

107 
	gCM⁄ey
& 
	g›î©‹
 +=(c⁄° 
CM⁄ey
& 
m
)

109 
m_iAmou¡InCíts
 +
m
.m_iAmountInCents;

111  *
	gthis
;

114 
CM⁄ey
 
	g›î©‹
 -(c⁄° 
	gCM⁄ey
& 
	gm
)

116 
CM⁄ey
 
ªt
(
this
);

118 
	gªt
.
	gm_iAmou¡InCíts
 -
m
.
m_iAmou¡InCíts
;

120  
	gªt
;

123 
	gCM⁄ey
& 
	g›î©‹
 -=(c⁄° 
CM⁄ey
& 
m
)

125 
m_iAmou¡InCíts
 -
m
.m_iAmountInCents;

127  *
	gthis
;

130 
CM⁄ey
 
	g›î©‹
 *(c⁄° 
	gCM⁄ey
& 
	gm
)

132 
CM⁄ey
 
ªt
(
this
);

134 
	gªt
.
	gm_iAmou¡InCíts
 *
m
.
m_iAmou¡InCíts
;

136  
	gªt
;

139 
CM⁄ey
 
	g›î©‹
 /(c⁄° 
	gCM⁄ey
& 
	gm
)

141 
CM⁄ey
 
ªt
(
this
);

143 
	gªt
.
	gm_iAmou¡InCíts
 /
m
.
m_iAmou¡InCíts
;

145  
	gªt
;

150 
CM⁄ey
 
	g›î©‹
 *(
	gi
)

152 
CM⁄ey
 
ªt
(
this
);

154 
	gªt
.
	gm_iAmou¡InCíts
 *
i
;

156  
	gªt
;

161 
CM⁄ey
 
	g›î©‹
 +(
	gf
)

163 
CM⁄ey
 
ªt
(
this
);

165 
	gªt
.
	gm_iAmou¡InCíts
 +(
INT64
)(100.0 * 
f
 + 0.5);

167  
	gªt
;

170 
CM⁄ey
 
	g›î©‹
 -(
	gf
)

172 
CM⁄ey
 
ªt
(
this
);

174 
	gªt
.
	gm_iAmou¡InCíts
 -(
INT64
)(100.0 * 
f
 + 0.5);

176  
	gªt
;

179 
	gCM⁄ey
& 
	g›î©‹
 -=(
f
)

181 
m_iAmou¡InCíts
 -(
INT64
)(100.0 * 
f
 + 0.5);

183  *
	gthis
;

186 
CM⁄ey
 
	g›î©‹
 *(
	gf
)

188 
CM⁄ey
 
ªt
(
this
);

193 i‡(
	gªt
.
	gm_iAmou¡InCíts
 > 0)

195 
	gªt
.
	gm_iAmou¡InCíts
 = (
INT64
)(
ªt
.
m_iAmou¡InCíts
 * 
f
 + 0.5);

199 
	gªt
.
	gm_iAmou¡InCíts
 = (
INT64
)(
ªt
.
m_iAmou¡InCíts
 * 
f
 - 0.5);

202  
	gªt
;

205 
CM⁄ey
 
	g›î©‹
 /(
	gf
)

207 
CM⁄ey
 
ªt
(
this
);

209 i‡(
	gªt
.
	gm_iAmou¡InCíts
 > 0)

211 
	gªt
.
	gm_iAmou¡InCíts
 = (
INT64
)(
ªt
.
m_iAmou¡InCíts
 / 
f
 + 0.5);

215 
	gªt
.
	gm_iAmou¡InCíts
 = (
INT64
)(
ªt
.
m_iAmou¡InCíts
 / 
f
 - 0.5);

218  
	gªt
;

223 
	gCM⁄ey
& 
	g›î©‹
=(
f
)

225 
m_iAmou¡InCíts
 = (
INT64
)(100.0 * 
f
 + 0.5);

227  *
	gthis
;

232 
boﬁ
 
	g›î©‹
==(c⁄° 
CM⁄ey
& 
m
)

234  
m_iAmou¡InCíts
 =
m
.m_iAmountInCents;

237 
boﬁ
 
	g›î©‹
>(c⁄° 
	gCM⁄ey
& 
	gm
)

239  
	gm_iAmou¡InCíts
 > 
	gm
.m_iAmountInCents;

241 
boﬁ
 
	g›î©‹
>=(c⁄° 
CM⁄ey
& 
m
)

243  
m_iAmou¡InCíts
 >
m
.m_iAmountInCents;

247 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCM⁄ey
& 
	gm
)

249  
	gm_iAmou¡InCíts
 < 
	gm
.m_iAmountInCents;

251 
boﬁ
 
	g›î©‹
<=(c⁄° 
CM⁄ey
& 
m
)

253  
m_iAmou¡InCíts
 <
m
.m_iAmountInCents;

	@include/workload/tpce/egen/NewsItemAndXRefTable.h

40 #i‚de‡
NEWS_ITEM_AND_XREG_TABLE_H


41 
	#NEWS_ITEM_AND_XREG_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Com∑nyTabÀ.h
"

46 
«me•a˚
 
	gTPCE


49 c⁄° 
	giNewsIãmsPîCom∑ny
 = 2;

50 c⁄° 
	giNewsIãmMaxDaysAgo
 = 50;

52 c⁄° 
	giRNGSkùO√RowNews
 = 4 + 
cNI_ITEM_Àn
;

54 
	sNEWS_ITEM_AND_XREF_ROW


56 
NEWS_ITEM_ROW
 
	g√ws_ôem
;

57 
NEWS_XREF_ROW
 
	g√ws_xªf
;

58 } *
	tPNEWS_ITEM_AND_XREF_ROW
;

60 
˛ass
 
	gCNewsIãmAndXRefTabÀ
 : 
public
 
TabÀTem∂©e
<
NEWS_ITEM_AND_XREF_ROW
>

62 
CCom∑nyTabÀ
 
m_Com∑nyTabÀ
;

63 
TNewsFûe
* 
	gm_pNews
;

64 
TLa°NamesFûe
* 
	gm_pLa°Names
;

65 
CD©eTime
 
	gm_NewsBa£D©e
;

66 
	gm_iNewsIãmsGíî©edF‹Com∑ny
;

67 
TIdít
 
	gm_iNewsCou¡F‹O√LﬂdUnô
;

69 
Gíî©eNewsIãmHódlöeAndSumm¨y
(
NEWS_ITEM_ROW
 &
√ws_ôem
)

71 
	giThªshﬁd
;

72 
	giLí
 = 0;

73 *
	gszW‹d
;

75 
	giLí
 < (
	g√ws_ôem
.
	gNI_ITEM
) - 1)

77 
	giThªshﬁd
 = 
m_∫d
.
RndI¡R™ge
(0, 
m_pNews
->
GëGª©e°Key
() - 1);

79 
	gszW‹d
 = (
m_pNews
->
GëRec‹d
(
iThªshﬁd
))->
WORD
;

81 
	gszW‹d
 && *szW‹d && (
	giLí
 < (
	g√ws_ôem
.
	gNI_ITEM
) - 1))

83 
	g√ws_ôem
.
	gNI_ITEM
[
iLí
++] = *
szW‹d
++;

86 i‡(
	giLí
 < (
	g√ws_ôem
.
	gNI_ITEM
) - 1)

88 
	g√ws_ôem
.
	gNI_ITEM
[
iLí
++] = ' ';

92 
	g√ws_ôem
.
	gNI_ITEM
[
iLí
] = '\0';

95 
mem˝y
(
√ws_ôem
.
NI_HEADLINE
,Çews_ôem.
NI_ITEM
, (news_item.NI_HEADLINE)-1);

100 
mem˝y
(
√ws_ôem
.
NI_SUMMARY
,Çews_ôem.
NI_ITEM
, (news_item.NI_SUMMARY)-1);

114 
InôNextLﬂdUnô
()

116 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

117 (
RNGSEED
)
m_iLa°RowNumbî
 * 
iRNGSkùO√RowNews
));

119 
CÀ¨Rec‹d
();

122 
	gpublic
:

123 
CNewsIãmAndXRefTabÀ
–
CI≈utFûes
 
öputFûes
,

124 
TIdít
 
iCu°omîCou¡
,

125 
TIdít
 
iSèπFromCu°omî
,

126 
INT32
 
iHoursOfInôülTødes
)

127 : 
m_Com∑nyTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

128 , 
m_pNews
(
öputFûes
.
News
)

129 , 
m_pLa°Names
(
öputFûes
.
La°Names
)

130 , 
m_iNewsIãmsGíî©edF‹Com∑ny
(0)

132 
	gm_iLa°RowNumbî
 = 
iNewsIãmsPîCom∑ny
 * 
öputFûes
.
Com∑ny
->
CÆcuœãSèπFromCom∑ny
(
iSèπFromCu°omî
);

137 
	gm_NewsBa£D©e
.
Së
–
InôülTødeP›uœti⁄Ba£Yór
, 
InôülTødeP›uœti⁄Ba£M⁄th
,

138 
InôülTødeP›uœti⁄Ba£Day
, 
InôülTødeP›uœti⁄Ba£Hour
,

139 
InôülTødeP›uœti⁄Ba£Möuã
, 
InôülTødeP›uœti⁄Ba£Sec⁄d
,

140 
InôülTødeP›uœti⁄Ba£Fø˘i⁄
);

141 
	gm_NewsBa£D©e
.
Add
(
iHoursOfInôülTødes
 / 
HoursPîW‹kDay
, 0, 
åue
);

143 
	gm_iNewsCou¡F‹O√LﬂdUnô
 = 
öputFûes
.
Com∑ny
->
CÆcuœãCom∑nyCou¡
(
iDeÁu…LﬂdUnôSize
Ë* 
iNewsIãmsPîCom∑ny
;

149 
boﬁ
 
Gíî©eNextRec‹d
()

151 
	giAddDayNo
, 
	giAddMSec
, 
	giThªshﬁd
;

155 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iNewsCou¡F‹O√LﬂdUnô
 == 0)

157 
InôNextLﬂdUnô
();

161 
	gm_row
.
	g√ws_ôem
.
	gNI_ID
 = 
m_iLa°RowNumbî
 + 1;

162 
Gíî©eNewsIãmHódlöeAndSumm¨y
(
m_row
.
√ws_ôem
);

163 
	giAddDayNo
 = 
m_∫d
.
RndI¡R™ge
(0, 
iNewsIãmMaxDaysAgo
);

164 
	giAddMSec
 = 
m_∫d
.
RndI¡R™ge
(0, 
MsPîDay
);

165 
	gm_row
.
	g√ws_ôem
.
	gNI_DTS
 = 
m_NewsBa£D©e
;

166 
	gm_row
.
	g√ws_ôem
.
	gNI_DTS
.
Add
((-1Ë* 
iAddDayNo
, (-1Ë* 
iAddMSec
);

168 
	giThªshﬁd
 = 
m_∫d
.
RndI¡R™ge
(0, 
m_pLa°Names
->
GëGª©e°Key
() - 1);

169 
°∫˝y
(
m_row
.
√ws_ôem
.
NI_AUTHOR
, (
m_pLa°Names
->
GëRec‹d
(
iThªshﬁd
))->
LAST_NAME
,

170 (
m_row
.
√ws_ôem
.
NI_AUTHOR
));

172 
	giThªshﬁd
 = 
m_∫d
.
RndI¡R™ge
(0, 
m_pLa°Names
->
GëGª©e°Key
() - 1);

173 
°∫˝y
(
m_row
.
√ws_ôem
.
NI_SOURCE
, (
m_pLa°Names
->
GëRec‹d
(
iThªshﬁd
))->
LAST_NAME
,

174 (
m_row
.
√ws_ôem
.
NI_SOURCE
));

177 
	gm_row
.
	g√ws_xªf
.
	gNX_NI_ID
 = 
m_row
.
√ws_ôem
.
NI_ID
;

178 
	gm_row
.
	g√ws_xªf
.
	gNX_CO_ID
 = 
m_Com∑nyTabÀ
.
GëCuºítCO_ID
();

180 ++
	gm_iNewsIãmsGíî©edF‹Com∑ny
;

182 ++
	gm_iLa°RowNumbî
;

184 i‡(
	gm_iNewsIãmsGíî©edF‹Com∑ny
 >
iNewsIãmsPîCom∑ny
)

186 
m_bM‹eRec‹ds
 = 
m_Com∑nyTabÀ
.
Gíî©eNextCO_ID
();

187 
	gm_iNewsIãmsGíî©edF‹Com∑ny
 = 0;

191 
	gm_bM‹eRec‹ds
 = 
åue
;

194  (
M‹eRec‹ds
());

199 
PNEWS_ITEM_ROW
 
GëNewsIãmRow
(Ë{  &
	gm_row
.
	g√ws_ôem
; }

200 
PNEWS_XREF_ROW
 
GëNewsXRefRow
(Ë{  &
	gm_row
.
	g√ws_xªf
; }

	@include/workload/tpce/egen/NullLoad_stdafx.h

37 #i‚de‡
EGEN_NULLLOADER_STDAFX_H


38 
	#EGEN_NULLLOADER_STDAFX_H


	)

40 
	~"NuŒLﬂdî.h
"

41 
	~"NuŒLﬂdîFa˘‹y.h
"

	@include/workload/tpce/egen/NullLoader.h

42 #i‚de‡
NULL_LOADER_H


43 
	#NULL_LOADER_H


	)

45 
	~"Ba£Lﬂdî.h
"

46 
	~"unu£dÊag.h
"

48 
«me•a˚
 
	gTPCE


51 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
˛ass
 
	gCNuŒLﬂdî
 : 
public
 
CBa£Lﬂdî
<
T
>

54 
public
:

55 c⁄° 
	tT
* 
	tPT
;

67 
vútuÆ
 
WrôeNextRec‹d
(
PT
 
√xt_ªc‹d
 
UNUSED
) {};

79 
vútuÆ
 
FöishLﬂd
() {};

	@include/workload/tpce/egen/NullLoaderFactory.h

41 #i‚de‡
NULL_LOADER_FACTORY_H


42 
	#NULL_LOADER_FACTORY_H


	)

44 
	~"Ba£Lﬂdî.h
"

45 
	~"Ba£LﬂdîFa˘‹y.h
"

46 
	~"NuŒLﬂdî.h
"

47 
	~"TabÀ_Defs.h
"

49 
«me•a˚
 
	gTPCE


52 ˛as†
	cCNuŒLﬂdîFa˘‹y
 : 
public
 
CBa£LﬂdîFa˘‹y


55 
public
:

59 
vútuÆ
 
CBa£Lﬂdî
<
ACCOUNT_PERMISSION_ROW
>* 
Cª©eAccou¡Pîmissi⁄Lﬂdî
()

61  
√w
 
CNuŒLﬂdî
<
ACCOUNT_PERMISSION_ROW
>();

64 
vútuÆ
 
	gCBa£Lﬂdî
<
	gADDRESS_ROW
>* 
Cª©eAddªssLﬂdî
()

66  
√w
 
	gCNuŒLﬂdî
<
	gADDRESS_ROW
>();

69 
vútuÆ
 
	gCBa£Lﬂdî
<
	gBROKER_ROW
>* 
Cª©eBrokîLﬂdî
()

71  
√w
 
	gCNuŒLﬂdî
<
	gBROKER_ROW
>();

74 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCASH_TRANSACTION_ROW
>* 
Cª©eCashTønß˘i⁄Lﬂdî
()

76  
√w
 
	gCNuŒLﬂdî
<
	gCASH_TRANSACTION_ROW
>();

79 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCHARGE_ROW
>* 
Cª©eCh¨geLﬂdî
()

81  
√w
 
	gCNuŒLﬂdî
<
	gCHARGE_ROW
>();

84 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMMISSION_RATE_ROW
>* 
Cª©eCommissi⁄R©eLﬂdî
()

86  
√w
 
	gCNuŒLﬂdî
<
	gCOMMISSION_RATE_ROW
>();

89 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_COMPETITOR_ROW
>* 
Cª©eCom∑nyCom≥tô‹Lﬂdî
()

91  
√w
 
	gCNuŒLﬂdî
<
	gCOMPANY_COMPETITOR_ROW
>();

94 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCOMPANY_ROW
>* 
Cª©eCom∑nyLﬂdî
()

96  
√w
 
	gCNuŒLﬂdî
<
	gCOMPANY_ROW
>();

99 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ACCOUNT_ROW
>* 
Cª©eCu°omîAccou¡Lﬂdî
()

101  
√w
 
	gCNuŒLﬂdî
<
	gCUSTOMER_ACCOUNT_ROW
>();

104 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_ROW
>* 
Cª©eCu°omîLﬂdî
()

106  
√w
 
	gCNuŒLﬂdî
<
	gCUSTOMER_ROW
>();

108 
vútuÆ
 
	gCBa£Lﬂdî
<
	gCUSTOMER_TAXRATE_ROW
>* 
Cª©eCu°omîTaxøãLﬂdî
()

110  
√w
 
	gCNuŒLﬂdî
<
	gCUSTOMER_TAXRATE_ROW
>();

112 
vútuÆ
 
	gCBa£Lﬂdî
<
	gDAILY_MARKET_ROW
>* 
Cª©eDaûyM¨këLﬂdî
()

114  
√w
 
	gCNuŒLﬂdî
<
	gDAILY_MARKET_ROW
>();

116 
vútuÆ
 
	gCBa£Lﬂdî
<
	gEXCHANGE_ROW
>* 
Cª©eExch™geLﬂdî
()

118  
√w
 
	gCNuŒLﬂdî
<
	gEXCHANGE_ROW
>();

120 
vútuÆ
 
	gCBa£Lﬂdî
<
	gFINANCIAL_ROW
>* 
Cª©eFö™cülLﬂdî
()

122  
√w
 
	gCNuŒLﬂdî
<
	gFINANCIAL_ROW
>();

124 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_ROW
>* 
Cª©eHﬁdögLﬂdî
()

126  
√w
 
	gCNuŒLﬂdî
<
	gHOLDING_ROW
>();

128 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_HISTORY_ROW
>* 
Cª©eHﬁdögHi°‹yLﬂdî
()

130  
√w
 
	gCNuŒLﬂdî
<
	gHOLDING_HISTORY_ROW
>();

132 
vútuÆ
 
	gCBa£Lﬂdî
<
	gHOLDING_SUMMARY_ROW
>* 
Cª©eHﬁdögSumm¨yLﬂdî
()

134  
√w
 
	gCNuŒLﬂdî
<
	gHOLDING_SUMMARY_ROW
>();

136 
vútuÆ
 
	gCBa£Lﬂdî
<
	gINDUSTRY_ROW
>* 
Cª©eIndu°ryLﬂdî
()

138  
√w
 
	gCNuŒLﬂdî
<
	gINDUSTRY_ROW
>();

140 
vútuÆ
 
	gCBa£Lﬂdî
<
	gLAST_TRADE_ROW
>* 
Cª©eLa°TødeLﬂdî
()

142  
√w
 
	gCNuŒLﬂdî
<
	gLAST_TRADE_ROW
>();

144 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_ITEM_ROW
>* 
Cª©eNewsIãmLﬂdî
()

146  
√w
 
	gCNuŒLﬂdî
<
	gNEWS_ITEM_ROW
>();

148 
vútuÆ
 
	gCBa£Lﬂdî
<
	gNEWS_XREF_ROW
>* 
Cª©eNewsXRefLﬂdî
()

150  
√w
 
	gCNuŒLﬂdî
<
	gNEWS_XREF_ROW
>();

152 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECTOR_ROW
>* 
Cª©eSe˘‹Lﬂdî
()

154  
√w
 
	gCNuŒLﬂdî
<
	gSECTOR_ROW
>();

156 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSECURITY_ROW
>* 
Cª©eSecurôyLﬂdî
()

158  
√w
 
	gCNuŒLﬂdî
<
	gSECURITY_ROW
>();

160 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSETTLEMENT_ROW
>* 
Cª©eSëéemítLﬂdî
()

162  
√w
 
	gCNuŒLﬂdî
<
	gSETTLEMENT_ROW
>();

164 
vútuÆ
 
	gCBa£Lﬂdî
<
	gSTATUS_TYPE_ROW
>* 
Cª©eSètusTy≥Lﬂdî
()

166  
√w
 
	gCNuŒLﬂdî
<
	gSTATUS_TYPE_ROW
>();

168 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTAXRATE_ROW
>* 
Cª©eTaxøãLﬂdî
()

170  
√w
 
	gCNuŒLﬂdî
<
	gTAXRATE_ROW
>();

172 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_HISTORY_ROW
>* 
Cª©eTødeHi°‹yLﬂdî
()

174  
√w
 
	gCNuŒLﬂdî
<
	gTRADE_HISTORY_ROW
>();

176 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_ROW
>* 
Cª©eTødeLﬂdî
()

178  
√w
 
	gCNuŒLﬂdî
<
	gTRADE_ROW
>();

180 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_REQUEST_ROW
>* 
Cª©eTødeReque°Lﬂdî
()

182  
√w
 
	gCNuŒLﬂdî
<
	gTRADE_REQUEST_ROW
>();

184 
vútuÆ
 
	gCBa£Lﬂdî
<
	gTRADE_TYPE_ROW
>* 
Cª©eTødeTy≥Lﬂdî
()

186  
√w
 
	gCNuŒLﬂdî
<
	gTRADE_TYPE_ROW
>();

188 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_ITEM_ROW
>* 
Cª©eW©chIãmLﬂdî
()

190  
√w
 
	gCNuŒLﬂdî
<
	gWATCH_ITEM_ROW
>();

193 
vútuÆ
 
	gCBa£Lﬂdî
<
	gWATCH_LIST_ROW
>* 
Cª©eW©chLi°Lﬂdî
()

195  
√w
 
	gCNuŒLﬂdî
<
	gWATCH_LIST_ROW
>();

198 
vútuÆ
 
	gCBa£Lﬂdî
<
	gZIP_CODE_ROW
>* 
Cª©eZùCodeLﬂdî
()

200  
√w
 
	gCNuŒLﬂdî
<
	gZIP_CODE_ROW
>();

	@include/workload/tpce/egen/Person.h

40 #i‚de‡
PERSON_H


41 
	#PERSON_H


	)

43 
	~"EGíSènd¨dTy≥s.h
"

44 
	~"R™dom.h
"

45 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

46 
	~"I≈utFœtFûesSåu˘uª.h
"

48 
«me•a˚
 
	gTPCE


52 c⁄° 
	gTaxIDFmt_Àn
 = 14;

53 c⁄° 
	gTaxIDFmt
[
TaxIDFmt_Àn
+1] = "nnnaannnnaannn";

55 ˛as†
	cCPîs⁄


57 
	g¥iv©e
:

59 
TLa°NamesFûe
 *
m_La°Names
;

60 
TMÆeFú°NamesFûe
 *
	gm_MÆeFú°Names
;

61 
TFemÆeFú°NamesFûe
 *
	gm_FemÆeFú°Names
;

63 
CR™dom
 
	gm_∫d
;

64 
boﬁ
 
	gm_bCacheE«bÀd
;

65 
	gm_iCacheSize
;

66 
TIdít
 
	gm_iCacheOff£t
;

67 ** 
	gm_CacheFú°Name
;

68 ** 
	gm_CacheLa°Name
;

70 
	gpublic
:

71 
CPîs⁄
(
CI≈utFûes
 
öputFûes
, 
TIdít
 
iSèπFromCu°omî
, 
boﬁ
 
bCacheE«bÀd
 = 
Ál£
);

73 ~
CPîs⁄
();

74 
InôNextLﬂdUnô
(
TIdít
 
iCacheOff£tIn¸emít
 = 
iDeÁu…LﬂdUnôSize
);

76 * 
GëLa°Name
(
TIdít
 
CID
);

77 * 
GëFú°Name
(
TIdít
 
CID
);

78 
GëMiddÀName
(
TIdít
 
CID
);

79 
GëGídî
(
TIdít
 
CID
);

80 
boﬁ
 
IsMÆeGídî
(
TIdít
 
CID
);

81 
GëTaxID
(
TIdít
 
CID
, *
buf
);

84 
GëFú°La°AndTaxID
(
TIdít
 
C_ID
, *
szFú°Name
, *
szLa°Name
, *
szTaxID
);

	@include/workload/tpce/egen/RNGSeeds.h

41 #i‚de‡
RNGSEEDS_H


42 
	#RNGSEEDS_H


	)

44 
	~"R™dom.h
"

46 
«me•a˚
 
	gTPCE


49 c⁄° 
RNGSEED
 
	gRNGSìdTabÀDeÁu…
 = 37039940;

53 c⁄° 
RNGSEED
 
	gRNGSìdBa£TownDivZù
 = 26778071;

56 c⁄° 
RNGSEED
 
	gRNGSìdBa£C_TIER
 = 16225173;

59 c⁄° 
RNGSEED
 
	gRNGSìdBa£C_AREA_1
 = 97905013;

60 c⁄° 
RNGSEED
 
	gRNGSìdBa£C_AREA_2
 = 68856487;

61 c⁄° 
RNGSEED
 
	gRNGSìdBa£C_AREA_3
 = 67142295;

64 c⁄° 
RNGSEED
 
	gRNGSìdBa£Fú°Name
 = 95066470;

65 c⁄° 
RNGSEED
 
	gRNGSìdBa£MiddÀInôül
 = 71434514;

66 c⁄° 
RNGSEED
 
	gRNGSìdBa£La°Name
 = 35846049;

69 c⁄° 
RNGSEED
 
	gRNGSìdBa£Gídî
 = 9568922;

72 c⁄° 
RNGSEED
 
	gRNGSìdBa£TaxID
 = 8731255;

78 c⁄° 
RNGSEED
 
	gRNGSìdBa£NumbîOfAccou¡Pîmissi⁄s
 = 27794203;

81 c⁄° 
RNGSEED
 
	gRNGSìdBa£CIDF‹Pîmissi⁄1
 = 76103629;

82 c⁄° 
RNGSEED
 
	gRNGSìdBa£CIDF‹Pîmissi⁄2
 = 103275149;

85 c⁄° 
RNGSEED
 
	gRNGSìdBa£Accou¡TaxSètus
 = 34376701;

88 c⁄° 
RNGSEED
 
	gRNGSìdBa£BrokîId
 = 75607774;

91 c⁄° 
RNGSEED
 
	gRNGSìdBa£TaxR©eRow
 = 92740731;

94 c⁄° 
RNGSEED
 
	gRNGSìdBa£NumbîOfSecurôõs
 = 23361736;

98 c⁄° 
RNGSEED
 
	gRNGSìdBa£SèπögSecurôyID
 = 12020070;

101 c⁄° 
RNGSEED
 
	gRNGSìdBa£SPR©e
 = 56593330;

104 c⁄° 
RNGSEED
 
	gRNGSìdTødeGí
 = 32900134;

107 c⁄° 
RNGSEED
 
	gRNGSìdBa£MEESecurôy
 = 75791232;

110 c⁄° 
RNGSEED
 
	gRNGSìdCu°omîSñe˘i⁄
 = 9270899;

113 c⁄° 
RNGSEED
 
	gRNGSìdBa£MEETickîT≠e
 = 42065035;

116 c⁄° 
RNGSEED
 
	gRNGSìdBa£MEETødögFlo‹
 = 25730774;

119 c⁄° 
RNGSEED
 
	gRNGSìdBa£TxnMixGíî©‹
 = 87944308;

122 c⁄° 
RNGSEED
 
	gRNGSìdBa£TxnI≈utGíî©‹
 = 80534927;

	@include/workload/tpce/egen/Random.h

37 #i‚de‡
RANDOM_H


38 
	#RANDOM_H


	)

40 
	~"EGíSènd¨dTy≥s.h
"

41 
	~"BigM©h.h
"

42 
	~<cm©h
>

74 
«me•a˚
 
	gTPCE


78 
	#UI¡64R™d_A_MULTIPLIER
 
	`UINT64_CONST
(6364136223846793005)

	)

79 
	#UI¡64R™d_C_INCREMENT
 
	`UINT64_CONST
(1)

	)

80 
	#UI¡64R™d_ONE
 
	`UINT64_CONST
(1)

	)

83 
UINT64
 
	tRNGSEED
;

85 #ifde‡
EGEN_USE_DEPRECATED_CODE


88 
	#UI¡64R™d_RECIPROCAL_2_POWER_64
 (5.421010862427522e-20)

	)

92 ˛as†
	cCR™dom


94 
	g¥iv©e
:

95 
RNGSEED
 
m_£ed
;

96 
ölöe
 
RNGSEED
 
UI¡64R™d
();

98 
	gpublic
:

99 
CR™dom
();

100 
CR™dom
(
RNGSEED
 
£ed
);

101 ~
CR™dom
() { };

103 
SëSìd
(
RNGSEED
 
£ed
);

104 
ölöe
 
RNGSEED
 
GëSìd
(Ë{  
	gm_£ed
; };

105 
RNGSEED
 
RndNthEÀmít
–RNGSEED 
nSìd
, RNGSEED 
nCou¡
);

108 
RndI¡R™ge
(
mö
, 
max
);

111 
INT64
 
RndI¡64R™ge
(INT64 
mö
, INT64 
max
);

114 
INT64
 
RndI¡64R™geEx˛ude
(INT64 
low
, INT64 
high
, INT64 
ex˛ude
);

117 
RndNthI¡R™ge
(
RNGSEED
 
Sìd
, RNGSEED 
N
, 
mö
, 
max
);

120 
INT64
 
RndNthI¡64R™ge
(
RNGSEED
 
Sìd
, RNGSEED 
N
, INT64 
mö
, INT64 
max
);

123 
RndI¡R™geEx˛ude
(
low
, 
high
, 
ex˛ude
);

125 #ifde‡
EGEN_USE_DEPRECATED_CODE


130 
RndDoubÀ
();

133 
RndNthDoubÀ
(
RNGSEED
 
Sìd
, RNGSEED 
N
);

138 
RndDoubÀR™ge
(
mö
, 
max
);

141 
RndDoubÀIn¸R™ge
(
mö
, 
max
, 
ö¸
);

144 
RndDoubÀNegExp
(
món
);

147 
ölöe
 
boﬁ
 
RndPî˚¡
(
≥r˚¡
)

148 {  (
RndI¡R™ge
(1, 100Ë<
≥r˚¡
); };

151 
ölöe
 
UINT
 
RndGíî©eI¡egîPî˚¡age
( )

153 –(
	gUINT
Ë
RndI¡R™ge
( 1, 100 ));

177 
INT64
 
NURnd
–INT64 
P
, INT64 
Q
, 
INT32
 
A
, INT32 
s
 );

183 
RndAÕhaNumF‹m©ãd
(*
szRëu∫Såög
, c⁄° *
szF‹m©
);

	@include/workload/tpce/egen/SectorTable.h

40 #i‚de‡
SECTOR_TABLE_H


41 
	#SECTOR_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCSe˘‹TabÀ
 : 
public
 
TabÀTem∂©e
<
SECTOR_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CSe˘‹TabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
SECTOR_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "Se˘‹.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CSe˘‹TabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/SecurityFile.h

42 #i‚de‡
SECURITY_FILE_H


43 
	#SECURITY_FILE_H


	)

45 
	~<m≠
>

46 
	~"Com∑nyFûe.h
"

48 
usög
 
«me•a˚
 
	g°d
;

50 
«me•a˚
 
	gTPCE


55 c⁄° 
UINT
 
	gPowî26
[] = { 1, 26, 676, 17576, 456976, 11881376, 308915776 };

58 c⁄° 
UINT64
 
	gPowî26Sum
[] = { 0, 1, 27, 703, 18279, 475255, 12356631, 321272407, 
UINT64_CONST
(8353082583) };

60 
˛ass
 
	gCSecurôyFûe
 : 
public
 
CFœtFûe
<
TSecurôyI≈utRow
, 
	gTSecurôyLimôs
>

65 
TIdít
 
	gm_iC⁄figuªdSecurôyCou¡
;

66 
TIdít
 
	gm_iA˘iveSecurôyCou¡
;

70 
UINT
 
	gm_iBa£Com∑nyCou¡
;

73 
boﬁ
 
	gm_SymbﬁToIdM≠IsLﬂded
;

74 
	gm≠
< 
	g°rög
, 
	gTIdít
 > 
	gm_SymbﬁToIdM≠
;

75 
	gm≠
< , > 
	gm_LowîCa£LëãrToI¡M≠
;

76 
	gm_SUFFIX_SEPARATOR
;

78 
Cª©eSuffix
–
TIdít
 
Mu…ùlõr
, * 
pBuf
, 
size_t
 
BufSize
 )

80 
size_t
 
Ch¨Cou¡
( 0 );

81 
INT64
 
Off£t
( 0 );

82 
INT64
 
LCLIndex
( 0 );

84  (
	gUINT64
)
	gMu…ùlõr
 >
Powî26Sum
[
Ch¨Cou¡
+1] )

86 
Ch¨Cou¡
++;

89 if–
	gCh¨Cou¡
 + 2 <
BufSize
 )

91 *
pBuf
 = 
m_SUFFIX_SEPARATOR
;

92 
	gpBuf
++;

98 
	gOff£t
 = 
Mu…ùlõr
 - 
Powî26Sum
[
Ch¨Cou¡
];

100  
	gCh¨Cou¡
 > 0 )

102 
	gLCLIndex
 = 
Off£t
 / 
Powî26
[ 
Ch¨Cou¡
-1 ];

103 *
	gpBuf
 = 
LowîCa£Lëãrs
[ 
LCLIndex
 ];

104 
	gpBuf
++;

105 
	gOff£t
 -–
LCLIndex
 * 
Powî26
[ 
Ch¨Cou¡
-1 ] );

106 
	gCh¨Cou¡
--;

108 *
	gpBuf
 = '\0';

113 
	gCh¨Cou¡
 = 
BufSize
 - 1;

114  
	gCh¨Cou¡
 > 0 )

116 *
	gpBuf
 = 
m_SUFFIX_SEPARATOR
;

117 
	gpBuf
++;

118 
	gCh¨Cou¡
--;

120 *
	gpBuf
 = '\0';

124 
INT64
 
P¨£Suffix
–c⁄° * 
pSymbﬁ
 )

126 
Ch¨Cou¡
( 0 );

127 
INT64
 
Mu…ùlõr
( 0 );

129 
	gCh¨Cou¡
 = (Ë
°æí
–
pSymbﬁ
 );

131 
	gMu…ùlõr
 = 
Powî26Sum
[
Ch¨Cou¡
];

133  
	gCh¨Cou¡
 > 0 )

135 
	gMu…ùlõr
 +(
INT64
)
Powî26
[ 
Ch¨Cou¡
-1 ] *

136 
m_LowîCa£LëãrToI¡M≠
[ *
pSymbﬁ
 ];

137 
	gCh¨Cou¡
--;

138 
	gpSymbﬁ
++;

140 –
	gMu…ùlõr
 );

143 
	gpublic
:

147 
CSecurôyFûe
(c⁄° *
szLi°Fûe
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

148 : 
CFœtFûe
<
TSecurôyI≈utRow
, 
	gTSecurôyLimôs
>(
	gszLi°Fûe
)

149 , 
m_SymbﬁToIdM≠IsLﬂded
–
Ál£
 )

151 
TCom∑nyLimôs
 
	gCom∑nyI≈utFûeLimôs
;

153 
	gm_SUFFIX_SEPARATOR
 = '-';

154 
SëC⁄figuªdSecurôyCou¡
(
iC⁄figuªdCu°omîCou¡
);

155 
SëA˘iveSecurôyCou¡
(
iA˘iveCu°omîCou¡
);

157 
	gm_iBa£Com∑nyCou¡
 = 
Com∑nyI≈utFûeLimôs
.
m_iTŸÆEÀmíts
;

162 
CSecurôyFûe
(c⁄° 
°rög
 &
°r
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
)

163 : 
CFœtFûe
<
TSecurôyI≈utRow
, 
	gTSecurôyLimôs
>(
	g°r
)

164 , 
m_SymbﬁToIdM≠IsLﬂded
–
Ál£
 )

166 
TCom∑nyLimôs
 
	gCom∑nyI≈utFûeLimôs
;

168 
	gm_SUFFIX_SEPARATOR
 = '-';

169 
SëC⁄figuªdSecurôyCou¡
(
iC⁄figuªdCu°omîCou¡
);

170 
SëA˘iveSecurôyCou¡
(
iA˘iveCu°omîCou¡
);

172 
	gm_iBa£Com∑nyCou¡
 = 
Com∑nyI≈utFûeLimôs
.
m_iTŸÆEÀmíts
;

179 
SëC⁄figuªdSecurôyCou¡
(
TIdít
 
iC⁄figuªdCu°omîCou¡
)

181 
	gm_iC⁄figuªdSecurôyCou¡
 = 
CÆcuœãSecurôyCou¡
(
iC⁄figuªdCu°omîCou¡
);

188 
SëA˘iveSecurôyCou¡
(
TIdít
 
iA˘iveCu°omîCou¡
)

190 
	gm_iA˘iveSecurôyCou¡
 = 
CÆcuœãSecurôyCou¡
(
iA˘iveCu°omîCou¡
);

196 
TIdít
 
CÆcuœãSecurôyCou¡
(TIdíà
iCu°omîCou¡
)

198  
	giCu°omîCou¡
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôSecurôyCou¡
;

203 
TIdít
 
CÆcuœãSèπFromSecurôy
(TIdíà
iSèπFromCu°omî
)

205  
	giSèπFromCu°omî
 / 
iDeÁu…LﬂdUnôSize
 * 
	giO√LﬂdUnôSecurôyCou¡
;

213 
Cª©eSymbﬁ
–
TIdít
 
iIndex
,

214 * 
szOuçut
,

215 
size_t
 
iOuçutLí
)

217 
TIdít
 
	giFûeIndex
 = 
iIndex
 % 
CFœtFûe
<
TSecurôyI≈utRow
, 
	gTSecurôyLimôs
>::
GëSize
();

218 
TIdít
 
	giAdd
 = 
iIndex
 / 
CFœtFûe
<
TSecurôyI≈utRow
, 
	gTSecurôyLimôs
>::
GëSize
();

219 
size_t
 
	giNewLí
;

222 
°∫˝y
(
szOuçut
, 
GëRec‹d
(
iFûeIndex
)->
S_SYMB
, 
iOuçutLí
);

224 
	gszOuçut
[
iOuçutLí
 - 1] = '\0';

227 i‡(
	giAdd
 > 0)

229 
	giNewLí
 = 
°æí
–
szOuçut
 );

230 
Cª©eSuffix
–
iAdd
, &
szOuçut
[
iNewLí
], 
iOuçutLí
 - iNewLen );

237 
TIdít
 
GëCom∑nyId
(TIdíà
iIndex
)

241  
	gm_li°
[ ()(
iIndex
 % 
m_li°
.
size
()Ë].
	gS_CO_ID
 + 
	giTIdítShi·


242 + 
	giIndex
 / 
	gm_li°
.
size
(Ë* 
	gm_iBa£Com∑nyCou¡
;

245 
TIdít
 
GëCom∑nyIndex
–TIdíà
Index
 )

248 –
GëCom∑nyId
–
Index
 ) - 1 - 
	giTIdítShi·
);

254 
TIdít
 
GëSize
()

256  
	gm_iC⁄figuªdSecurôyCou¡
;

262 
TIdít
 
GëC⁄figuªdSecurôyCou¡
()

264  
	gm_iC⁄figuªdSecurôyCou¡
;

270 
TIdít
 
GëA˘iveSecurôyCou¡
()

272  
	gm_iA˘iveSecurôyCou¡
;

278 
TSecurôyI≈utRow
* 
GëRec‹d
(
TIdít
 
ödex
Ë{  &
	gm_li°
[()(ödex % 
m_li°
.
size
())]; };

281 
boﬁ
 
LﬂdSymbﬁToIdM≠
( )

283 if–! 
	gm_SymbﬁToIdM≠IsLﬂded
 )

285 
	gii
;

287  
	gii
 = 0; iò< 
	gm_li°
.
size
(); ii++ )

289 
°rög
 
sSymbﬁ
–
m_li°
[
ii
].
S_SYMB
 );

290 
	gm_SymbﬁToIdM≠
[ 
sSymbﬁ
 ] = 
m_li°
[
ii
].
S_ID
;

292 
	gm_SymbﬁToIdM≠IsLﬂded
 = 
åue
;

294  
	gii
 = 0; iò< 
	gMaxLowîCa£Lëãrs
; ii++ )

296 
	gm_LowîCa£LëãrToI¡M≠
[ 
LowîCa£Lëãrs
[
ii
] ] = ii;

299 –
	gm_SymbﬁToIdM≠IsLﬂded
 );

302 
TIdít
 
GëId
–* 
pSymbﬁ
 )

304 * 
pSï¨©‹
–
NULL
 );

306 if–!
	gm_SymbﬁToIdM≠IsLﬂded
 )

308 
LﬂdSymbﬁToIdM≠
();

310 if–
	gNULL
 =–
pSï¨©‹
 = 
°rchr
–
pSymbﬁ
, 
m_SUFFIX_SEPARATOR
 )))

313 
°rög
 
sSymbﬁ
(
pSymbﬁ
);

314 –
	gm_SymbﬁToIdM≠
[ 
sSymbﬁ
 ] );

319 * 
pSuffix
–
NULL
 );

320 
TIdít
 
Ba£Id
( 0 );

321 
TIdít
 
Mu…ùlõr
( 0 );

323 
°rög
 
sSymbﬁ
(
pSymbﬁ
, 
°©ic_ˇ°
<
size_t
>(
pSï¨©‹
-pSymbol));

324 
	gBa£Id
 = 
m_SymbﬁToIdM≠
[ 
sSymbﬁ
 ];

326 
	gpSuffix
 = 
pSï¨©‹
 + 1;

327 
	gMu…ùlõr
 = ()
P¨£Suffix
–
pSuffix
 );

329 (–
Mu…ùlõr
 * 
	gm_li°
.
size
(ËË+ 
	gBa£Id
 );

333 
TIdít
 
GëIndex
–* 
pSymbﬁ
 )

336 –
GëId
–
pSymbﬁ
 ) - 1 );

339 
eExch™geID
 
GëExch™geIndex
–
TIdít
 
ödex
 )

342 *
	gpExch™ge
 = 
m_li°
[()(
ödex
 % m_li°.
size
())].
S_EX_ID
;

343 
eExch™geID
 
	geExch™geIndex
;

345 i‡(!
°rcmp
(
pExch™ge
, "NYSE"))

347 
	geExch™geIndex
 = 
eNYSE
;

349 i‡(!
°rcmp
(
pExch™ge
, "NASDAQ"))

351 
	geExch™geIndex
 = 
eNASDAQ
;

353 i‡(!
°rcmp
(
pExch™ge
, "AMEX"))

355 
	geExch™geIndex
 = 
eAMEX
;

357 i‡(!
°rcmp
(
pExch™ge
, "PCX"))

359 
	geExch™geIndex
 = 
ePCX
;

363 
as£π
(
Ál£
);

366  
	geExch™geIndex
;

	@include/workload/tpce/egen/SecurityPriceRange.h

41 #i‚de‡
SECURITY_PRICE_RANGE_H


42 
	#SECURITY_PRICE_RANGE_H


	)

44 
«me•a˚
 
	gTPCE


47 c⁄° 
	gfMöSecPri˚
 = 20.00;

48 c⁄° 
	gfMaxSecPri˚
 = 30.00;

	@include/workload/tpce/egen/SecurityTable.h

40 #i‚de‡
SECURITY_TABLE_H


41 
	#SECURITY_TABLE_H


	)

43 
	~<°dio.h
>

44 
	~"EGíTabÀs_comm⁄.h
"

45 
	~"Com∑nyFûe.h
"

46 
	~"SecurôyFûe.h
"

47 
	~"SecurôyPri˚R™ge.h
"

49 
«me•a˚
 
	gTPCE


52 c⁄° 
INT64
 
	giS_NUM_OUTMö
 = 
INT64_CONST
(4000000);

53 c⁄° 
INT64
 
	giS_NUM_OUTMax
 = 
INT64_CONST
(9500000000);

55 c⁄° 
	gfS_PEMö
 = 1.0;

56 c⁄° 
	gfS_PEMax
 = 120.0;

58 c⁄° 
	gfS_DIVIDN⁄ZîoMö
 = 0.01;

59 c⁄° 
	gfS_DIVIDMax
 = 10.0;

61 c⁄° 
	gfS_YIELDN⁄ZîoMö
 = 0.01;

62 c⁄° 
	gfS_YIELDMax
 = 120.0;

64 c⁄° 
	giWìksPîYór
 = 52;

65 c⁄° 
	giDaysPîWìk
 = 7;

67 c⁄° 
	giPî˚¡Com∑nõsWôhN⁄ZîoDividíd
 = 60;

69 c⁄° 
	giRNGSkùO√RowSecurôy
 = 11;

71 
˛ass
 
	gCSecurôyTabÀ
 : 
public
 
TabÀTem∂©e
<
SECURITY_ROW
>

73 
TIdít
 
m_iSecurôyCou¡
;

74 
TIdít
 
	gm_iSèπFromSecurôy
;

75 
CCom∑nyFûe
* 
	gm_Com∑nyFûe
;

76 
CSecurôyFûe
* 
	gm_SecurôyFûe
;

77 
CD©eTime
 
	gm_d©e
;

78 
	gm_iCuºítDayNo
;

79 
	gm_iJ™1_1900DayNo
;

80 
	gm_iJ™2_2000DayNo
;

81 
TIdít
 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
;

86 
Gíî©eSecurôyRow
()

88 
	giSèπDayNo
, 
	giExch™geDayNo
, 
	gi52HighDayNo
, 
	gi52LowDayNo
;

90 
°∫˝y
(
m_row
.
S_ST_ID
, 
m_SecurôyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->S_ST_ID, (m_row.S_ST_ID));

91 
°∫˝y
(
m_row
.
S_ISSUE
, 
m_SecurôyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->S_ISSUE, (m_row.S_ISSUE));

93 
Cª©eName
(
m_iLa°RowNumbî
, 
m_row
.
S_NAME
, 
°©ic_ˇ°
<>((m_row.S_NAME)));

95 
	gm_SecurôyFûe
->
Cª©eSymbﬁ
(
m_iLa°RowNumbî
, 
m_row
.
S_SYMB
, 
°©ic_ˇ°
<>((m_row.S_SYMB)));

96 
°∫˝y
(
m_row
.
S_EX_ID
, 
m_SecurôyFûe
->
GëRec‹d
(
m_iLa°RowNumbî
)->S_EX_ID, (m_row.S_EX_ID));

97 
	gm_row
.
	gS_CO_ID
 = 
m_SecurôyFûe
->
GëCom∑nyId
(
m_iLa°RowNumbî
);

98 
	gm_row
.
	gS_NUM_OUT
 = 
m_∫d
.
RndI¡64R™ge
(
iS_NUM_OUTMö
, 
iS_NUM_OUTMax
);

100 
	giSèπDayNo
 = 
m_∫d
.
RndI¡R™ge
(
m_iJ™1_1900DayNo
, 
m_iJ™2_2000DayNo
);

101 
	gm_row
.
	gS_START_DATE
.
Së
(
iSèπDayNo
);

102 
	giExch™geDayNo
 = 
m_∫d
.
RndI¡R™ge
(
iSèπDayNo
, 
m_iJ™2_2000DayNo
);

103 
	gm_row
.
	gS_EXCH_DATE
.
Së
(
iExch™geDayNo
);

104 
	gm_row
.
	gS_PE
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(
fS_PEMö
, 
fS_PEMax
, 0.01);

108 
	gm_row
.
	gS_52WK_HIGH
 = ()
m_∫d
.
RndDoubÀIn¸R™ge
–
fMöSecPri˚
 + (–
fMaxSecPri˚
 - fMinSecPrice) / 2 ), fMaxSecPrice, 0.01);

109 
	gi52HighDayNo
 = 
m_∫d
.
RndI¡R™ge
(
m_iCuºítDayNo
 - 
iDaysPîWìk
 * 
iWìksPîYór
, m_iCurrentDayNo);

110 
	gm_row
.
	gS_52WK_HIGH_DATE
.
Së
(
i52HighDayNo
);

113 
	gm_row
.
	gS_52WK_LOW
 = ()
m_∫d
.
RndDoubÀIn¸R™ge
–
fMöSecPri˚
, 
m_row
.
S_52WK_HIGH
, 0.01 );

114 
	gi52LowDayNo
 = 
m_∫d
.
RndI¡R™ge
(
m_iCuºítDayNo
 - 
iDaysPîWìk
 * 
iWìksPîYór
, m_iCurrentDayNo);

115 
	gm_row
.
	gS_52WK_LOW_DATE
.
Së
(
i52LowDayNo
);

117 i‡(
	gm_∫d
.
RndPî˚¡
–
iPî˚¡Com∑nõsWôhN⁄ZîoDividíd
 ))

119 
	gm_row
.
	gS_YIELD
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(
fS_YIELDN⁄ZîoMö
, 
fS_YIELDMax
, 0.01);

120 
	gm_row
.
	gS_DIVIDEND
 = 
m_∫d
.
RndDoubÀIn¸R™ge
(–
m_row
.
S_YIELD
 * 0.20 ), ( m_row.S_YIELD * 0.30 ), 0.01);

124 
	gm_row
.
	gS_DIVIDEND
 = 0.0;

125 
	gm_row
.
	gS_YIELD
 = 0.0;

138 
InôNextLﬂdUnô
()

140 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

141 (
RNGSEED
)
m_iLa°RowNumbî
 * 
iRNGSkùO√RowSecurôy
));

143 
CÀ¨Rec‹d
();

146 
	gpublic
:

147 
CSecurôyTabÀ
–
CI≈utFûes
 
öputFûes
,

148 
TIdít
 
iCu°omîCou¡
,

149 
TIdít
 
iSèπFromCu°omî
)

150 : 
TabÀTem∂©e
<
SECURITY_ROW
>()

151 , 
m_Com∑nyFûe
(
öputFûes
.
Com∑ny
)

152 , 
m_SecurôyFûe
(
öputFûes
.
Securôõs
)

154 
	gm_iCuºítDayNo
 = 
CD©eTime
::
YMDtoDayno
(
InôülTødeP›uœti⁄Ba£Yór
,

155 
InôülTødeP›uœti⁄Ba£M⁄th
,

156 
InôülTødeP›uœti⁄Ba£Day
);

157 
	gm_iJ™1_1900DayNo
 = 
CD©eTime
::
YMDtoDayno
(1900, 1, 1);

158 
	gm_iJ™2_2000DayNo
 = 
CD©eTime
::
YMDtoDayno
(2000, 1, 2);

160 
	gm_iSecurôyCou¡
 = 
m_SecurôyFûe
->
CÆcuœãSecurôyCou¡
(
iCu°omîCou¡
);

161 
	gm_iSèπFromSecurôy
 = 
m_SecurôyFûe
->
CÆcuœãSèπFromSecurôy
(
iSèπFromCu°omî
);

163 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
 = 
öputFûes
.
Securôõs
->
CÆcuœãSecurôyCou¡
(
iDeÁu…LﬂdUnôSize
);

165 
	gm_iLa°RowNumbî
 = 
m_iSèπFromSecurôy
;

168 
boﬁ
 
Gíî©eNextRec‹d
()

172 i‡(
	gm_iLa°RowNumbî
 % 
	gm_iSecurôyCou¡F‹O√LﬂdUnô
 == 0)

174 
InôNextLﬂdUnô
();

177 
Gíî©eSecurôyRow
();

179 ++
	gm_iLa°RowNumbî
;

182 
	gm_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < (
m_iSèπFromSecurôy
 + 
m_iSecurôyCou¡
);

184  (
M‹eRec‹ds
());

187 
Cª©eName
–
TIdít
 
iIndex
,

188 * 
szOuçut
,

189 
size_t
 
iOuçutLí
)

191 
	gCom∑nyName
[
cCO_NAME_Àn
+1];

193 
	gm_Com∑nyFûe
->
Cª©eName
–
m_SecurôyFûe
->
GëCom∑nyIndex
–
iIndex
 ), 
Com∑nyName
, 
°©ic_ˇ°
<>(( CompanyName )));

194 
¢¥ötf
–
szOuçut
, 
iOuçutLí
, "%†o‡%s", 
m_SecurôyFûe
->
GëRec‹d
(
iIndex
)->
S_ISSUE
, 
Com∑nyName
 );

	@include/workload/tpce/egen/StatusTypeTable.h

40 #i‚de‡
STATUS_TYPE_H


41 
	#STATUS_TYPE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCSètusTy≥TabÀ
 : 
public
 
TabÀTem∂©e
<
STATUS_TYPE_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CSètusTy≥TabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
STATUS_TYPE_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "SètusTy≥.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CSètusTy≥TabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/SyncLockInterface.h

37 #i‚de‡
SYNCLOCK_H


38 
	#SYNCLOCK_H


	)

40 
	~<±hªad.h
>

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCSyncLock


51 
±hªad_muãx_t
 
	gmuãx
;

52 
	gpublic
:

53 
CSyncLock
() {

54 
±hªad_muãx_öô
(&
muãx
, 
NULL
);

56 ~
CSyncLock
() {

57 
±hªad_muãx_de°roy
(&
muãx
);

61 
CœimLock
() {

62 
±hªad_muãx_lock
(&
muãx
);

66 
Rñó£Lock
() {

67 
±hªad_muãx_u∆ock
(&
muãx
);

	@include/workload/tpce/egen/TableConsts.h

41 #i‚de‡
TABLE_CONSTS_H


42 
	#TABLE_CONSTS_H


	)

44 
	~"EGíSènd¨dTy≥s.h
"

46 
«me•a˚
 
	gTPCE


50 c⁄° 
	gcTOWN_Àn
 = 80;

51 c⁄° 
	gcDIV_Àn
 = 80;

52 c⁄° 
	gcCODE_Àn
 = 12;

55 c⁄° 
	gcACL_Àn
 = 4;

58 c⁄° 
	gcAD_NAME_Àn
 = 80;

59 c⁄° 
	gcAD_LINE_Àn
 = 80;

60 c⁄° 
	gcAD_TOWN_Àn
 = 
cTOWN_Àn
;

61 c⁄° 
	gcAD_DIV_Àn
 = 
cDIV_Àn
;

62 c⁄° 
	gcAD_ZIP_Àn
 = 
cCODE_Àn
;

63 c⁄° 
	gcAD_CTRY_Àn
 = 80;

66 c⁄° 
	gcCT_NAME_Àn
 = 100;

69 c⁄° 
	gcL_NAME_Àn
 = 25;

70 c⁄° 
	gcF_NAME_Àn
 = 20;

71 c⁄° 
	gcM_NAME_Àn
 = 1;

72 c⁄° 
	gcDOB_Àn
 = 30;

73 c⁄° 
	gcTAX_ID_Àn
 = 20;

74 c⁄° 
	gcGNDR_Àn
 = 1;

75 c⁄° 
	gcCTRY_Àn
 = 3;

76 c⁄° 
	gcAREA_Àn
 = 3;

77 c⁄° 
	gcLOCAL_Àn
 = 10;

78 c⁄° 
	gcEXT_Àn
 = 5;

79 c⁄° 
	gcEMAIL_Àn
 = 50;

82 c⁄° 
	gcB_NAME_Àn
 = 
cF_NAME_Àn
 + 
cM_NAME_Àn
 + 
cL_NAME_Àn
 + 3;

85 c⁄° 
	gcCO_NAME_Àn
 = 60;

86 c⁄° 
	gcSP_RATE_Àn
 = 4;

87 c⁄° 
	gcCEO_NAME_Àn
 = 
cF_NAME_Àn
 + 
cL_NAME_Àn
 + 1;

88 c⁄° 
	gcCO_DESC_Àn
 = 150;

89 c⁄° 
	gcCO_SP_RATE_Àn
 = 4;

92 c⁄° 
	gcCA_NAME_Àn
 = 50;

95 c⁄° 
	gcEX_ID_Àn
 = 6;

96 c⁄° 
	gcEX_NAME_Àn
 = 100;

97 c⁄° 
	gcEX_DESC_Àn
 = 150;

102 c⁄° 
	gcH_BUY_DTS_Àn
 = 30;

105 c⁄° 
	gcIN_ID_Àn
 = 2;

106 c⁄° 
	gcIN_NAME_Àn
 = 50;

109 c⁄° 
	gcNI_HEADLINE_Àn
 = 80;

110 c⁄° 
	gcNI_SUMMARY_Àn
 = 255;

111 c⁄° 
	gcNI_ITEM_Àn
 = 100 * 1000;

112 c⁄° 
	gcNI_SOURCE_Àn
 = 30;

113 c⁄° 
	gcNI_AUTHOR_Àn
 = 30;

116 c⁄° 
	gcS_NAME_Àn
 = 70;

117 c⁄° 
	gcSYMBOL_Àn
 = 7 + 1 + 7;

118 c⁄° 
	gcS_ISSUE_Àn
 = 6;

121 c⁄° 
	gcSE_CASH_TYPE_Àn
 = 40;

124 c⁄° 
	gcSC_NAME_Àn
 = 30;

125 c⁄° 
	gcSC_ID_Àn
 = 2;

128 c⁄° 
	gcST_ID_Àn
 = 4;

129 c⁄° 
	gcST_NAME_Àn
 = 10;

132 c⁄° 
	gcTX_ID_Àn
 = 4;

133 c⁄° 
	gcTX_NAME_Àn
 = 50;

136 c⁄° 
	gcEXEC_NAME_Àn
 = 
cF_NAME_Àn
 + 
cM_NAME_Àn
 + 
cL_NAME_Àn
 + 3;

139 c⁄° 
	gcTH_ST_ID_Àn
 = 
cST_ID_Àn
;

142 c⁄° 
	gcTT_ID_Àn
 = 3;

143 c⁄° 
	gcTT_NAME_Àn
 = 12;

146 c⁄° 
	gcZC_TOWN_Àn
 = 
cTOWN_Àn
;

147 c⁄° 
	gcZC_DIV_Àn
 = 
cDIV_Àn
;

148 c⁄° 
	gcZC_CODE_Àn
 = 
cCODE_Àn
;

	@include/workload/tpce/egen/TableTemplate.h

41 #i‚de‡
TABLE_TEMPLATE_H


42 
	#TABLE_TEMPLATE_H


	)

44 
	~"EGíSènd¨dTy≥s.h
"

45 
	~"R™dom.h
"

46 
	~"RNGSìds.h
"

48 
«me•a˚
 
	gTPCE


51 
	gãm∂©e
 <
ty≥«me
 
	gT
>

52 ˛as†
	cTabÀTem∂©e


54 
	g¥Ÿe˘ed
:

55 
T
 
m_row
;

56 
TIdít
 
	gm_iLa°RowNumbî
;

57 
boﬁ
 
	gm_bM‹eRec‹ds
;

58 
CR™dom
 
	gm_∫d
;

59 
	gpublic
:

69 
TabÀTem∂©e
()

70 : 
m_iLa°RowNumbî
(0)

71 , 
m_bM‹eRec‹ds
(
Ál£
)

73 
CÀ¨Rec‹d
();

75 
	gm_∫d
.
SëSìd
(
RNGSìdTabÀDeÁu…
);

88 
	gvútuÆ
 ~
TabÀTem∂©e
() {};

100 
vútuÆ
 
boﬁ
 
Gíî©eNextRec‹d
() = 0;

112 
boﬁ
 
M‹eRec‹ds
(Ë{ 
	gm_bM‹eRec‹ds
;}

123 
T
 c⁄° * 
GëRow
(Ë{  &
	gm_row
; }

141 
CÀ¨Rec‹d
(Ë{ 
mem£t
(&
m_row
, 0, (m_row)); }

	@include/workload/tpce/egen/Table_Defs.h

41 #i‚de‡
TABLE_DEFS_H


42 
	#TABLE_DEFS_H


	)

44 
	~<io°ªam
>

45 
	~"EGíSènd¨dTy≥s.h
"

46 
	~"TabÀC⁄°s.h
"

47 
	~"D©eTime.h
"

49 
usög
 
«me•a˚
 
	g°d
;

51 
«me•a˚
 
	gTPCE


56 
	sTBa£I≈utRow


58 
Lﬂd
(
i°ªam
 &
fûe
);

59 
	gvútuÆ
 ~
TBa£I≈utRow
() {}

60 } *
	tPBa£I≈utRow
;

63 
	sACCOUNT_PERMISSION_ROW


65 
TIdít
 
	gAP_CA_ID
;

66 
	gAP_ACL
[ 
cACL_Àn
+1 ];

67 
	gAP_TAX_ID
[ 
cTAX_ID_Àn
+1 ];

68 
	gAP_L_NAME
[ 
cL_NAME_Àn
+1 ];

69 
	gAP_F_NAME
[ 
cF_NAME_Àn
+1 ];

70 } *
	tPACCOUNT_PERMISSION_ROW
;

71 c⁄° 
	gAccou¡Pîmissi⁄RowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s\n";

74 
	sADDRESS_ROW


76 
TIdít
 
	gAD_ID
;

77 
	gAD_LINE1
[ 
cAD_LINE_Àn
+1];

78 
	gAD_LINE2
[ 
cAD_LINE_Àn
+1];

79 
	gAD_ZC_CODE
[ 
cAD_ZIP_Àn
+1 ];

80 
	gAD_CTRY
[ 
cAD_CTRY_Àn
+1 ];

81 } *
	tPADDRESS_ROW
;

82 c⁄° 
	gAddªssRowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s\n";

85 
	sBROKER_ROW


87 
TIdít
 
	gB_ID
;

88 
	gB_ST_ID
[ 
cST_ID_Àn
+1 ];

89 
	gB_NAME
[ 
cB_NAME_Àn
+1 ];

90 
	gB_NUM_TRADES
;

91 
	gB_COMM_TOTAL
;

92 } *
	tPBROKER_ROW
;

93 c⁄° 
	gBrokîRowFmt
[] = "%" 
PRId64
 "|%s|%s|%d|%.2f\n";

96 
	sCASH_TRANSACTION_ROW


98 
TTøde
 
	gCT_T_ID
;

99 
CD©eTime
 
	gCT_DTS
;

100 
	gCT_AMT
;

101 
	gCT_NAME
[
cCT_NAME_Àn
+1];

102 } *
	tPCASH_TRANSACTION_ROW
;

103 c⁄° 
	gCashTønß˘i⁄RowFmt
[] = "%" 
PRId64
 "|%s|%.2f|%s\n";

106 
	gCHARGE_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


108 
CH_TT_ID
[
cTT_ID_Àn
+1];

109 
	gCH_C_TIER
;

110 
	gCH_CHRG
;

112 
Lﬂd
(
i°ªam
 &
fûe
);

113 } *
	tPCHARGE_ROW
;

114 c⁄° 
	gCh¨geRowFmt
[] = "%s|%d|%.2f\n";

117 
	gCOMMISSION_RATE_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


119 
CR_C_TIER
;

120 
	gCR_TT_ID
[
cTT_ID_Àn
+1];

121 
	gCR_EX_ID
[
cEX_ID_Àn
+1];

122 
	gCR_FROM_QTY
;

123 
	gCR_TO_QTY
;

124 
	gCR_RATE
;

126 
Lﬂd
(
i°ªam
 &
fûe
);

127 } *
	tPCOMMISSION_RATE_ROW
;

128 c⁄° 
	gCommissi⁄R©eRowFmt
[] = "%d|%s|%s|%.0f|%.0f|%.2f\n";

131 
	sCOMPANY_ROW


133 
TIdít
 
	gCO_ID
;

134 
	gCO_ST_ID
[ 
cST_ID_Àn
+1 ];

135 
	gCO_NAME
[ 
cCO_NAME_Àn
+1 ];

136 
	gCO_IN_ID
[ 
cIN_ID_Àn
+1 ];

137 
	gCO_SP_RATE
[ 
cSP_RATE_Àn
+1 ];

138 
	gCO_CEO
[ 
cCEO_NAME_Àn
+1 ];

139 
TIdít
 
	gCO_AD_ID
;

140 
	gCO_DESC
[ 
cCO_DESC_Àn
+1 ];

141 
CD©eTime
 
	gCO_OPEN_DATE
;

142 } *
	tPCOMPANY_ROW
;

143 c⁄° 
	gCom∑nyRowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s|%s|%" PRId64 "|%s|%s\n";

146 
	gCOMPANY_COMPETITOR_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


148 
TIdít
 
CP_CO_ID
;

149 
TIdít
 
	gCP_COMP_CO_ID
;

150 
	gCP_IN_ID
[
cIN_ID_Àn
+1];

151 } *
	tPCOMPANY_COMPETITOR_ROW
;

152 c⁄° 
	gCom∑nyCom≥tô‹RowFmt
[] = "%" 
PRId64
 "|%" PRId64 "|%s\n";

155 
	sCUSTOMER_ROW


157 
TIdít
 
	gC_ID
;

158 
	gC_TAX_ID
[ 
cTAX_ID_Àn
+1 ];

159 
	gC_ST_ID
[ 
cST_ID_Àn
+1 ];

160 
	gC_L_NAME
[ 
cL_NAME_Àn
+1 ];

161 
	gC_F_NAME
[ 
cF_NAME_Àn
+1 ];

162 
	gC_M_NAME
[ 
cM_NAME_Àn
+1 ];

163 
	gC_GNDR
;

164 
	gC_TIER
;

165 
CD©eTime
 
	gC_DOB
;

166 
TIdít
 
	gC_AD_ID
;

167 
	gC_CTRY_1
[ 
cCTRY_Àn
+1 ];

168 
	gC_AREA_1
[ 
cAREA_Àn
+1 ];

169 
	gC_LOCAL_1
[ 
cLOCAL_Àn
+1 ];

170 
	gC_EXT_1
[ 
cEXT_Àn
+1 ];

171 
	gC_CTRY_2
[ 
cCTRY_Àn
+1 ];

172 
	gC_AREA_2
[ 
cAREA_Àn
+1 ];

173 
	gC_LOCAL_2
[ 
cLOCAL_Àn
+1 ];

174 
	gC_EXT_2
[ 
cEXT_Àn
+1 ];

175 
	gC_CTRY_3
[ 
cCTRY_Àn
+1 ];

176 
	gC_AREA_3
[ 
cAREA_Àn
+1 ];

177 
	gC_LOCAL_3
[ 
cLOCAL_Àn
+1 ];

178 
	gC_EXT_3
[ 
cEXT_Àn
+1 ];

179 
	gC_EMAIL_1
[ 
cEMAIL_Àn
+1 ];

180 
	gC_EMAIL_2
[ 
cEMAIL_Àn
+1 ];

182 
CUSTOMER_ROW
()

183 : 
C_ID
(0)

186 } *
	tPCUSTOMER_ROW
;

187 c⁄° 
	gCu°omîRowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s|%s|%c|%d|%s|%" PRId64 "|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n";

190 
	sCUSTOMER_ACCOUNT_ROW


192 
TIdít
 
	gCA_ID
;

193 
TIdít
 
	gCA_B_ID
;

194 
TIdít
 
	gCA_C_ID
;

195 
	gCA_NAME
[ 
cCA_NAME_Àn
+1 ];

196 
	gCA_TAX_ST
;

197 
	gCA_BAL
;

198 } *
	tPCUSTOMER_ACCOUNT_ROW
;

199 c⁄° 
	gCu°omîAccou¡RowFmt
[] = "%" 
PRId64
 "|%" PRId64 "|%" PRId64 "|%s|%d|%.2f\n";

202 
	sCUSTOMER_TAXRATE_ROW


204 
	gCX_TX_ID
[ 
cTX_ID_Àn
+1 ];

205 
TIdít
 
	gCX_C_ID
;

206 } *
	tPCUSTOMER_TAXRATE_ROW
;

207 c⁄° 
	gCu°omîTaxøãRowFmt
[] = "%s|%" 
PRId64
 "\n";

210 
	sDAILY_MARKET_ROW


212 
CD©eTime
 
	gDM_DATE
;

213 
	gDM_S_SYMB
[
cSYMBOL_Àn
+1];

214 
	gDM_CLOSE
;

215 
	gDM_HIGH
;

216 
	gDM_LOW
;

217 
INT64
 
	gDM_VOL
;

218 } *
	tPDAILY_MARKET_ROW
;

219 c⁄° 
	gDaûyM¨këRowFmt
[] = "%s|%s|%.2f|%.2f|%.2f|%" 
PRId64
 "\n";

222 
	sEXCHANGE_ROW


224 
	gEX_ID
[ 
cEX_ID_Àn
+1 ];

225 
	gEX_NAME
[ 
cEX_NAME_Àn
+1 ];

226 
	gEX_NUM_SYMB
;

227 
	gEX_OPEN
;

228 
	gEX_CLOSE
;

229 
	gEX_DESC
[ 
cEX_DESC_Àn
+1 ];

230 
TIdít
 
	gEX_AD_ID
;

232 
Lﬂd
(
i°ªam
 &
fûe
);

233 } *
	tPEXCHANGE_ROW
;

234 c⁄° 
	gExch™geRowFmt
[] = "%s|%s|%d|%d|%d|%s|%" 
PRId64
 "\n";

237 
	sFINANCIAL_ROW


239 
TIdít
 
	gFI_CO_ID
;

240 
	gFI_YEAR
;

241 
	gFI_QTR
;

242 
CD©eTime
 
	gFI_QTR_START_DATE
;

243 
	gFI_REVENUE
;

244 
	gFI_NET_EARN
;

245 
	gFI_BASIC_EPS
;

246 
	gFI_DILUT_EPS
;

247 
	gFI_MARGIN
;

248 
	gFI_INVENTORY
;

249 
	gFI_ASSETS
;

250 
	gFI_LIABILITY
;

251 
INT64
 
	gFI_OUT_BASIC
;

252 
INT64
 
	gFI_OUT_DILUT
;

253 } *
	tPFINANCIAL_ROW
;

254 c⁄° 
	gFö™cülRowFmt
[] = "%" 
PRId64
 "|%d|%d|%s|%.2f|%.2f|%.2f|%.2f|%.2f|%.2f|%.2f|%.2f|%" PRId64 "|%" PRId64 "\n";

257 
	sHOLDING_ROW


259 
TTøde
 
	gH_T_ID
;

260 
TIdít
 
	gH_CA_ID
;

261 
	gH_S_SYMB
[ 
cSYMBOL_Àn
+1 ];

262 
CD©eTime
 
	gH_DTS
;

263 
	gH_PRICE
;

264 
	gH_QTY
;

265 } *
	tPHOLDING_ROW
;

266 c⁄° 
	gHﬁdögRowFmt
[] = "%" 
PRId64
 "|%" PRId64 "|%s|%s|%.2f|%d\n";

269 
	sHOLDING_HISTORY_ROW


271 
TTøde
 
	gHH_H_T_ID
;

272 
TTøde
 
	gHH_T_ID
;

273 
	gHH_BEFORE_QTY
;

274 
	gHH_AFTER_QTY
;

275 } *
	tPHOLDING_HISTORY_ROW
;

276 c⁄° 
	gHﬁdögHi°‹yRowFmt
[] = "%" 
PRId64
 "|%" PRId64 "|%d|%d\n";

279 
	sHOLDING_SUMMARY_ROW


281 
TIdít
 
	gHS_CA_ID
;

282 
	gHS_S_SYMB
[ 
cSYMBOL_Àn
+1 ];

283 
	gHS_QTY
;

284 } *
	tPHOLDING_SUMMARY_ROW
;

285 c⁄° 
	gHﬁdögSumm¨yRowFmt
[] = "%" 
PRId64
 "|%s|%d\n";

288 
	gINDUSTRY_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


290 
IN_ID
[
cIN_ID_Àn
+1];

291 
	gIN_NAME
[
cIN_NAME_Àn
+1];

292 
	gIN_SC_ID
[
cSC_ID_Àn
+1];

294 
Lﬂd
(
i°ªam
 &
fûe
);

295 } *
	tPINDUSTRY_ROW
;

296 c⁄° 
	gIndu°ryRowFmt
[] = "%s|%s|%s\n";

299 
	sLAST_TRADE_ROW


301 
	gLT_S_SYMB
[
cSYMBOL_Àn
+1];

302 
CD©eTime
 
	gLT_DTS
;

303 
	gLT_PRICE
;

304 
	gLT_OPEN_PRICE
;

305 
INT64
 
	gLT_VOL
;

306 } *
	tPLAST_TRADE_ROW
;

307 c⁄° 
	gLa°TødeRowFmt
[] = "%s|%s|%.2f|%.2f|%" 
PRId64
 "\n";

310 
	sNEWS_ITEM_ROW


312 
TIdít
 
	gNI_ID
;

313 
	gNI_HEADLINE
[
cNI_HEADLINE_Àn
+1];

314 
	gNI_SUMMARY
[
cNI_SUMMARY_Àn
+1];

315 
	gNI_ITEM
[
cNI_ITEM_Àn
+1];

316 
CD©eTime
 
	gNI_DTS
;

317 
	gNI_SOURCE
[
cNI_SOURCE_Àn
+1];

318 
	gNI_AUTHOR
[
cNI_AUTHOR_Àn
+1];

319 } *
	tPNEWS_ITEM_ROW
;

320 c⁄° 
	gNewsIãmRowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s|%s|%s\n";

323 
	sNEWS_XREF_ROW


325 
TIdít
 
	gNX_NI_ID
;

326 
TIdít
 
	gNX_CO_ID
;

327 } *
	tPNEWS_XREF_ROW
;

328 c⁄° 
	gNewsXRefRowFmt
[] = "%" 
PRId64
 "|%" PRId64 "\n";

331 
	gSECTOR_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


333 
SC_ID
[
cSC_ID_Àn
+1];

334 
	gSC_NAME
[
cSC_NAME_Àn
+1];

336 
Lﬂd
(
i°ªam
 &
fûe
);

337 } *
	tPSECTOR_ROW
;

338 c⁄° 
	gSe˘‹RowFmt
[] = "%s|%s\n";

341 
	sSECURITY_ROW


343 
	gS_SYMB
[ 
cSYMBOL_Àn
+1 ];

344 
	gS_ISSUE
[ 
cS_ISSUE_Àn
+1 ];

345 
	gS_ST_ID
[ 
cST_ID_Àn
+1 ];

346 
	gS_NAME
[ 
cS_NAME_Àn
+1 ];

347 
	gS_EX_ID
[ 
cEX_ID_Àn
+1 ];

348 
TIdít
 
	gS_CO_ID
;

349 
INT64
 
	gS_NUM_OUT
;

350 
CD©eTime
 
	gS_START_DATE
;

351 
CD©eTime
 
	gS_EXCH_DATE
;

352 
	gS_PE
;

353 
	gS_52WK_HIGH
;

354 
CD©eTime
 
	gS_52WK_HIGH_DATE
;

355 
	gS_52WK_LOW
;

356 
CD©eTime
 
	gS_52WK_LOW_DATE
;

357 
	gS_DIVIDEND
;

358 
	gS_YIELD
;

359 } *
	tPSECURITY_ROW
;

360 c⁄° 
	gSecurôyRowFmt
[] = "%s|%s|%s|%s|%s|%" 
PRId64
 "|%" PRId64 "|%s|%s|%.2f|%.2f|%s|%.2f|%s|%.2f|%.2f\n";

363 
	sSETTLEMENT_ROW


365 
TTøde
 
	gSE_T_ID
;

366 
	gSE_CASH_TYPE
[
cSE_CASH_TYPE_Àn
+1];

367 
CD©eTime
 
	gSE_CASH_DUE_DATE
;

368 
	gSE_AMT
;

369 } *
	tPSETTLEMENT_ROW
;

370 c⁄° 
	gSëéemítRowFmt
[] = "%" 
PRId64
 "|%s|%s|%.2f\n";

373 
	gSTATUS_TYPE_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


375 
ST_ID
[
cST_ID_Àn
+1];

376 
	gST_NAME
[
cST_NAME_Àn
+1];

378 
Lﬂd
(
i°ªam
 &
fûe
);

379 } *
	tPSTATUS_TYPE_ROW
;

380 c⁄° 
	gSètusTy≥RowFmt
[] = "%s|%s\n";

383 
	sTAXRATE_ROW


385 
	gTX_ID
[ 
cTX_ID_Àn
+1 ];

386 
	gTX_NAME
[ 
cTX_NAME_Àn
+1 ];

387 
	gTX_RATE
;

388 } *
	tPTAXRATE_ROW
;

389 c⁄° 
	gTaxøãRowFmt
[] = "%s|%s|%.5f\n";

392 
	sTRADE_ROW


394 
TTøde
 
	gT_ID
;

395 
CD©eTime
 
	gT_DTS
;

396 
	gT_ST_ID
[ 
cST_ID_Àn
+1 ];

397 
	gT_TT_ID
[ 
cTT_ID_Àn
+1 ];

398 
boﬁ
 
	gT_IS_CASH
;

399 
	gT_S_SYMB
[ 
cSYMBOL_Àn
+1 ];

400 
	gT_QTY
;

401 
	gT_BID_PRICE
;

402 
TIdít
 
	gT_CA_ID
;

403 
	gT_EXEC_NAME
[ 
cEXEC_NAME_Àn
+1 ];

404 
	gT_TRADE_PRICE
;

405 
	gT_CHRG
;

406 
	gT_COMM
;

407 
	gT_TAX
;

408 
boﬁ
 
	gT_LIFO
;

409 } *
	tPTRADE_ROW
;

410 c⁄° 
	gTødeRowFmt
[] = "%" 
PRId64
 "|%s|%s|%s|%s|%s|%d|%.2f|%" PRId64 "|%s|%.2f|%.2f|%.2f|%.2f|%s\n";

413 
	sTRADE_HISTORY_ROW


415 
TTøde
 
	gTH_T_ID
;

416 
CD©eTime
 
	gTH_DTS
;

417 
	gTH_ST_ID
[
cST_ID_Àn
+1];

418 } *
	tPTRADE_HISTORY_ROW
;

419 c⁄° 
	gTødeHi°‹yRowFmt
[] = "%" 
PRId64
 "|%s|%s\n";

422 
	sTRADE_REQUEST_ROW


424 
TTøde
 
	gTR_T_ID
;

425 
	gTR_TT_ID
[ 
cTT_ID_Àn
+1 ];

426 
	gTR_S_SYMB
[ 
cSYMBOL_Àn
+1 ];

427 
	gTR_QTY
;

428 
	gTR_BID_PRICE
;

429 
TIdít
 
	gTR_B_ID
;

430 } *
	tPTRADE_REQUEST_ROW
;

431 c⁄° 
	gTødeReque°RowFmt
[] = "%" 
PRId64
 "|%s|%s|%d|%.2f|%" PRId64 "\n";

434 
	sTRADE_TYPE_ROW


436 
	gTT_ID
[ 
cTT_ID_Àn
+1 ];

437 
	gTT_NAME
[ 
cTT_NAME_Àn
+1 ];

438 
boﬁ
 
	gTT_IS_SELL
;

439 
boﬁ
 
	gTT_IS_MRKT
;

441 
Lﬂd
(
i°ªam
 &
fûe
);

442 } *
	tPTRADE_TYPE_ROW
;

443 c⁄° 
	gTødeTy≥RowFmt
[] = "%s|%s|%s|%s\n";

446 
	sWATCH_ITEM_ROW


448 
TIdít
 
	gWI_WL_ID
;

449 
	gWI_S_SYMB
[ 
cSYMBOL_Àn
+1 ];

450 } *
	tPWATCH_ITEM_ROW
;

451 c⁄° 
	gW©chIãmRowFmt
[] = "%" 
PRId64
 "|%s\n";

454 
	sWATCH_LIST_ROW


456 
TIdít
 
	gWL_ID
;

457 
TIdít
 
	gWL_C_ID
;

458 } *
	tPWATCH_LIST_ROW
;

459 c⁄° 
	gW©chLi°RowFmt
[] = "%" 
PRId64
 "|%" PRId64 "\n";

462 
	gZIP_CODE_ROW
 : 
	tpublic
 
	tTBa£I≈utRow


464 
ZC_CODE
[
cZC_CODE_Àn
+1];

465 
	gZC_TOWN
[
cZC_TOWN_Àn
+1];

466 
	gZC_DIV
[
cZC_DIV_Àn
+1];

468 
Lﬂd
(
i°ªam
 &
fûe
);

469 } *
	tPZIP_CODE_ROW
;

470 c⁄° 
	gZùCodeRowFmt
[] = "%s|%s|%s\n";

	@include/workload/tpce/egen/TaxrateTable.h

40 #i‚de‡
TAXRATE_TABLE_H


41 
	#TAXRATE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCTaxøãTabÀ
 : 
public
 
TabÀTem∂©e
<
TAXRATE_ROW
>

50 
TTaxR©esCou¡ryFûe
 *
m_pCou¡ry
;

51 
TTaxR©esDivisi⁄Fûe
 *
	gm_pDivisi⁄
;

52 
UINT
 
	gm_iCou¡ryIndex
;

53 
UINT
 
	gm_iDivisi⁄Index
;

54 
UINT
 
	gm_iCou¡rySubIndex
;

55 
UINT
 
	gm_iDivisi⁄SubIndex
;

57 
	gpublic
:

58 
CTaxøãTabÀ
–
CI≈utFûes
 
öputFûes
 )

59 : 
TabÀTem∂©e
<
TAXRATE_ROW
>(),

60 
m_pCou¡ry
(
öputFûes
.
TaxR©esCou¡ry
),

61 
m_pDivisi⁄
(
öputFûes
.
TaxR©esDivisi⁄
),

62 
m_iCou¡ryIndex
(0),

63 
m_iDivisi⁄Index
(0),

64 
m_iCou¡rySubIndex
(0),

65 
m_iDivisi⁄SubIndex
(0)

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 c⁄° 
	gve˘‹
<
	gTTaxR©eI≈utRow
> *
	gpR©esRec‹d
;

76 ++
	gm_iLa°RowNumbî
;

79 i‡(
	gm_iCou¡ryIndex
 < 
	gm_pCou¡ry
->
GëSize
())

81 
	gpR©esRec‹d
 = 
m_pCou¡ry
->
GëRec‹d
(
m_iCou¡ryIndex
);

84 
°∫˝y
(
m_row
.
TX_ID
, (*
pR©esRec‹d
)[
m_iCou¡rySubIndex
].
TAX_ID
, (m_row.TX_ID));

85 
°∫˝y
(
m_row
.
TX_NAME
, (*
pR©esRec‹d
)[
m_iCou¡rySubIndex
].
TAX_NAME
, (m_row.TX_NAME));

86 
	gm_row
.
	gTX_RATE
 = (*
pR©esRec‹d
)[
m_iCou¡rySubIndex
].
TAX_RATE
;

88 ++
	gm_iCou¡rySubIndex
;

90 i‡(
	gm_iCou¡rySubIndex
 >
m_pCou¡ry
->
GëRec‹d
(
m_iCou¡ryIndex
)->
size
())

93 ++
m_iCou¡ryIndex
;

94 
	gm_iCou¡rySubIndex
 = 0;

99 i‡(
	gm_iDivisi⁄Index
 < 
	gm_pDivisi⁄
->
GëSize
())

101 
	gpR©esRec‹d
 = 
m_pDivisi⁄
->
GëRec‹d
(
m_iDivisi⁄Index
);

104 
°∫˝y
(
m_row
.
TX_ID
, (*
pR©esRec‹d
)[
m_iDivisi⁄SubIndex
].
TAX_ID
, (m_row.TX_ID));

105 
°∫˝y
(
m_row
.
TX_NAME
, (*
pR©esRec‹d
)[
m_iDivisi⁄SubIndex
].
TAX_NAME
, (m_row.TX_NAME));

106 
	gm_row
.
	gTX_RATE
 = (*
pR©esRec‹d
)[
m_iDivisi⁄SubIndex
].
TAX_RATE
;

108 ++
	gm_iDivisi⁄SubIndex
;

110 i‡(
	gm_iDivisi⁄SubIndex
 >
m_pDivisi⁄
->
GëRec‹d
(
m_iDivisi⁄Index
)->
size
())

113 ++
m_iDivisi⁄Index
;

114 
	gm_iDivisi⁄SubIndex
 = 0;

120 
	gm_bM‹eRec‹ds
 = (
m_iCou¡ryIndex
 < 
m_pCou¡ry
->
GëSize
()Ë|| (
m_iDivisi⁄Index
 < 
m_pDivisi⁄
->GetSize());

122  ( 
M‹eRec‹ds
() );

	@include/workload/tpce/egen/TimerWheel.h

42 #i‚de‡
TIMER_WHEEL_H


43 
	#TIMER_WHEEL_H


	)

45 
	~"EGíUtûôõs_°dafx.h
"

46 
	~"MiscC⁄°s.h
"

47 
	~"Whìl.h
"

48 
	~"WhìlTime.h
"

49 
	~"TimîWhìlTimî.h
"

51 
«me•a˚
 
	gTPCE


54 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

55 ˛as†
	cCTimîWhìl


58 
	g¥iv©e
:

59 
CD©eTime
 
m_Ba£Time
;

61 
CWhìlTime
 
	gm_La°Time
;

62 
CWhìlTime
 
	gm_CuºítTime
;

63 
CWhìlTime
 
	gm_NextTime
;

65 
TWhìlC⁄fig
 
	gm_WhìlC⁄fig
;

67 
	gli°
< 
	gCTimîWhìlTimî
< 
	gT
, 
	gT2
 >* > 
	gm_TimîWhìl
[ ( 
Pîiod
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )) ];

69 
INT32
 
	gm_NumbîOfTimîs
;

71 
INT32
 
ExpúyPro˚ssög
( );

72 
Pro˚ssTimîLi°
–
li°
< 
CTimîWhìlTimî
< 
T
, 
T2
 >* >* 
pLi°
 );

73 
INT32
 
SëNextTime
( );

75 
	gpublic
:

76 c⁄° 
INT32
 
NO_OUTSTANDING_TIMERS
 = -1;

78 
CTimîWhìl
( );

79 ~
CTimîWhìl
( );

81 
boﬁ
 
Em±y
( );

82 
INT32
 
Pro˚ssExpúedTimîs
( );

83 
INT32
 
SèπTimî
–
Off£t
, 
T2
* 
pExpúyObje˘
, (T2::* 
pExpúyFun˘i⁄
Ë–
T
* ), T* 
pExpúyD©a
 );

87 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

88 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
	$CTimîWhìl
( )

89 : 
	`m_Ba£Time
()

90 , 
	`m_La°Time
–&
m_WhìlC⁄fig
, 0, 0 )

91 , 
	`m_CuºítTime
–&
m_WhìlC⁄fig
, 0, 0 )

92 , 
	`m_NextTime
–&
m_WhìlC⁄fig
, 
MaxWhìlCy˛es
, ( 
Pîiod
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )) - 1 )

93 , 
	`m_WhìlC⁄fig
(–
Pîiod
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )), Resolution )

94 , 
	$m_NumbîOfTimîs
( 0 )

96 
m_Ba£Time
.
	`SëToCuºít
();

97 
	}
}

99 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

100 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::~
	$CTimîWhìl
( )

102 
ty≥«me
 
li°
< 
CTimîWhìlTimî
<
T
, 
T2
>* >::
ôî©‹
 
ExpúedTimî
;

104  
INT32
 
ii
=0; iò< ( 
Pîiod
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )); ii++ )

106 if–! 
m_TimîWhìl
[
ii
].
	`em±y
() )

108 
ExpúedTimî
 = 
m_TimîWhìl
[
ii
].
	`begö
();

109  
ExpúedTimî
 !
m_TimîWhìl
[
ii
].
	`íd
() )

111 
dñëe
 *
ExpúedTimî
;

112 
m_NumbîOfTimîs
--;

113 
ExpúedTimî
++;

115 
m_TimîWhìl
[
ii
].
	`˛ór
();

118 
	}
}

120 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

121 
boﬁ
 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
	$Em±y
( )

123 –
m_NumbîOfTimîs
 =0 ? 
åue
 : 
Ál£
 );

124 
	}
}

126 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

127 
INT32
 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
SèπTimî
–
Off£t
, 
T2
* 
pExpúyObje˘
, (T2::* 
pExpúyFun˘i⁄
Ë–
T
* ), T* 
pExpúyD©a
 )

129 
CD©eTime
 
Now
;

130 
CWhìlTime
 
	`Reque°edTime
–&
m_WhìlC⁄fig
 , 
m_Ba£Time
, 
Now
, (
INT32
Ë(
Off£t
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )));

131 
CTimîWhìlTimî
<
T
, 
T2
>* 
pNewTimî
 = 
√w
 CTimîWhìlTimî<T, T2>–
pExpúyObje˘
, 
pExpúyFun˘i⁄
, 
pExpúyD©a
 );

134 
m_CuºítTime
.
	`Së
–
m_Ba£Time
, 
Now
 );

138 
	`ExpúyPro˚ssög
();

140 
m_TimîWhìl
[ 
Reque°edTime
.
	`Index
(Ë].
	`push_back
–
pNewTimî
 );

141 
m_NumbîOfTimîs
++;

143 if–
Reque°edTime
 < 
m_NextTime
 )

145 
m_NextTime
 = 
Reque°edTime
;

148 –
m_NextTime
.
	`Off£t
–
m_CuºítTime
 ));

149 
	}
}

151 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

152 
INT32
 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
	$Pro˚ssExpúedTimîs
( )

154 
CD©eTime
 
Now
;

157 
m_CuºítTime
.
	`Së
–
m_Ba£Time
, 
Now
 );

159 –
	`ExpúyPro˚ssög
() );

160 
	}
}

162 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

163 
INT32
 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
	$ExpúyPro˚ssög
( )

165  
m_La°Time
 < 
m_CuºítTime
 )

167 
m_La°Time
++;

168 if–! 
m_TimîWhìl
[ 
m_La°Time
.
	`Index
(Ë].
	`em±y
() )

170 
	`Pro˚ssTimîLi°
–&
m_TimîWhìl
[ 
m_La°Time
.
	`Index
() ] );

173 –
	`SëNextTime
() );

174 
	}
}

176 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

177 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
Pro˚ssTimîLi°
–
li°
< 
CTimîWhìlTimî
<
T
,
T2
>* >* 
pLi°
 )

179 
ty≥«me
 
	gli°
< 
	gCTimîWhìlTimî
<
	gT
,
	gT2
>* >::
ôî©‹
 
ExpúedTimî
;

182 
	gExpúedTimî
 = 
pLi°
->
begö
();

183  
	gExpúedTimî
 !
pLi°
->
íd
() )

185 (((*
ExpúedTimî
)->
m_pExpúyObje˘
)->*((*ExpúedTimî)->
m_pExpúyFun˘i⁄
)Ë–(*ExpúedTimî)->
m_pExpúyD©a
 );

186 
dñëe
 *
	gExpúedTimî
;

187 
	gm_NumbîOfTimîs
--;

188 
	gExpúedTimî
++;

190 
	gpLi°
->
˛ór
();

193 
	gãm∂©e
 < 
˛ass
 
	gT
, cœs†
	gT2
, 
INT32
 
	gPîiod
, INT32 
	gResﬁuti⁄
 >

194 
INT32
 
	gCTimîWhìl
< 
	gT
, 
	gT2
, 
	gPîiod
, 
	gResﬁuti⁄
 >::
	$SëNextTime
( )

196 if–0 =
m_NumbîOfTimîs
 )

198 
m_NextTime
.
	`Së
–
MaxWhìlCy˛es
, ( 
Pîiod
 * ( 
MsPîSec⁄d
 / 
Resﬁuti⁄
 )) - 1 );

199 –
NO_OUTSTANDING_TIMERS
 );

203 
m_NextTime
 = 
m_CuºítTime
;

204  
m_TimîWhìl
[ 
m_NextTime
.
	`Index
(Ë].
	`em±y
() )

206 
m_NextTime
++;

208 –
m_NextTime
.
	`Off£t
–
m_CuºítTime
 ));

210 
	}
}

	@include/workload/tpce/egen/TimerWheelTimer.h

41 #i‚de‡
TIMER_WHEEL_TIMER_H


42 
	#TIMER_WHEEL_TIMER_H


	)

44 
«me•a˚
 
	gTPCE


47 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gT2
>

48 ˛as†
	cCTimîWhìlTimî


51 
	g¥iv©e
:

53 
public
:

55 
T
* 
m_pExpúyD©a
;

56 
T2
* 
	gm_pExpúyObje˘
;

57 (
	gT2
::* 
m_pExpúyFun˘i⁄
Ë–
T
* );

59 
CTimîWhìlTimî
–
T2
* 
pExpúyObje˘
, (T2::* 
pExpúyFun˘i⁄
Ë–
T
* ), T* 
pExpúyD©a
 );

61 ~
CTimîWhìlTimî
();

65 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gT2
>

66 
	gCTimîWhìlTimî
<
	gT
,
	gT2
>::
CTimîWhìlTimî
–
T2
* 
pExpúyObje˘
, (T2::* 
pExpúyFun˘i⁄
Ë–
T
* ), T* 
pExpúyD©a
 )

68 
m_pExpúyD©a
 = 
pExpúyD©a
;

69 
m_pExpúyObje˘
 = 
pExpúyObje˘
;

70 
m_pExpúyFun˘i⁄
 = 
pExpúyFun˘i⁄
;

71 
	}
}

73 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gT2
>

74 
	gCTimîWhìlTimî
<
	gT
,
	gT2
>::~
	$CTimîWhìlTimî
()

76 
	}
}

	@include/workload/tpce/egen/TradeGen.h

47 #i‚de‡
TRADE_GEN_H


48 
	#TRADE_GEN_H


	)

50 
	~<queue
>

51 
	~"EGíSènd¨dTy≥s.h
"

52 
	~"M⁄ey.h
"

53 
	~"I≈utFœtFûesDe˛¨©i⁄s.h
"

54 
	~"I≈utFœtFûesSåu˘uª.h
"

55 
	~"MEESecurôy.h
"

56 
	~"Cu°omîAccou¡sAndPîmissi⁄sTabÀ.h
"

57 
	~"AddªssTabÀ.h
"

58 
	~"Cu°omîTabÀ.h
"

59 
	~"Cu°omîTaxøãsTabÀ.h
"

60 
	~"Cu°omîSñe˘i⁄.h
"

61 
	~"HﬁdögsAndTødesTabÀ.h
"

62 
	~"Brokîs.h
"

63 
	~"SecurôyTabÀ.h
"

64 
	~"Pîs⁄.h
"

65 
	~"Com∑nyFûe.h
"

66 
	~"SecurôyFûe.h
"

68 
usög
 
«me•a˚
 
	g°d
;

70 
«me•a˚
 
	gTPCE


80 c⁄° 
	giMaxHﬁdögHi°‹yRowsPîTøde
 = 800 / 100;

85 
	sTTødeInfo


87 
TTøde
 
	giTødeId
;

88 
eTødeTy≥ID
 
	geTødeTy≥
;

89 
eSètusTy≥ID
 
	geTødeSètus
;

90 
	gPídögTime
;

91 
	gSubmissi⁄Time
;

92 
	gCom∂ëi⁄Time
;

93 
TIdít
 
	giSymbﬁIndex
;

94 
UINT
 
	giSymbﬁIndexInAccou¡
;

95 
	giTødeQty
;

96 
CM⁄ey
 
	gfBidPri˚
;

97 
CM⁄ey
 
	gfTødePri˚
;

98 
TIdít
 
	giCu°omî
;

99 
eCu°omîTõr
 
	giCu°omîTõr
;

100 
TIdít
 
	giCu°omîAccou¡
;

101 
boﬁ
 
	gbIsLifo
;

102 } *
	tPTødeInfo
;

106 
	sTAddôi⁄ÆTødeInfo


110 
CM⁄ey
 
	gfBuyVÆue
;

113 
CM⁄ey
 
	gfSñlVÆue
;

117 
TIdít
 
	giCuºítBrokîId
;

119 
eTaxSètus
 
	geAccou¡TaxSètus
;

125 
CM⁄ey
 
	gCommissi⁄
;

126 
CM⁄ey
 
	gCh¨ge
;

127 
CM⁄ey
 
	gTax
;

128 
CM⁄ey
 
	gSëéemítAmou¡
;

129 } *
	tPAddôi⁄ÆTødeInfo
;

135 
	sTHﬁdögInfo


137 
TTøde
 
	giTødeId
;

138 
	giTødeQty
;

139 
CM⁄ey
 
	gfTødePri˚
;

140 
CD©eTime
 
	gBuyDTS
;

141 
TIdít
 
	giSymbﬁIndex
;

142 } *
	tPHﬁdögInfo
;

148 
	sTTødeRow


150 
TRADE_ROW
 
	gm_Tøde
;

151 
TRADE_REQUEST_ROW
 
	gm_TødeReque°
;

152 
TRADE_HISTORY_ROW
 
	gm_TødeHi°‹y
[3];

153 
SETTLEMENT_ROW
 
	gm_Sëéemít
;

154 
CASH_TRANSACTION_ROW
 
	gm_CashTønß˘i⁄
;

155 
HOLDING_HISTORY_ROW
 
	gm_HﬁdögHi°‹y
[
iMaxHﬁdögHi°‹yRowsPîTøde
];

156 } *
	tPTødeRow
;

160 
	gli°
<
	tTHﬁdögInfo
> 
	tTHﬁdögLi°
;

161 
THﬁdögLi°
 
	tTCu°omîHﬁdögAºay
[
iMaxSecurôõsPîAccou¡
];

163 ˛as†
	cCTødeGí


167 
CR™dom
 
	gm_∫d
;

172 
CAddªssTabÀ
 
	gm_AddªssTabÀ
;

176 
CCu°omîSñe˘i⁄
 
	gm_Cu°omîSñe˘i⁄
;

180 
CCu°omîTabÀ
 
	gm_Cu°omîTabÀ
;

184 
CCu°omîTaxøãsTabÀ
 
	gm_Cu°TaxøãTabÀ
;

188 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
 
	gm_Cu°omîAccou¡TabÀ
;

192 
CHﬁdögsAndTødesTabÀ
 
	gm_HﬁdögTabÀ
;

196 
CBrokîsTabÀ
 
	gm_BrokîTabÀ
;

200 
CSecurôyTabÀ
 
	gm_SecurôyTabÀ
;

204 
CPîs⁄
 
	gm_Pîs⁄
;

208 
CCom∑nyFûe
* 
	gm_Com∑nyFûe
;

209 
CSecurôyFûe
* 
	gm_SecurôyFûe
;

210 
TCh¨geFûe
* 
	gm_Ch¨geFûe
;

211 
TCommissi⁄R©eFûe
* 
	gm_Commissi⁄R©eFûe
;

212 
TSètusTy≥Fûe
* 
	gm_SètusTy≥Fûe
;

213 
TTødeTy≥Fûe
* 
	gm_TødeTy≥Fûe
;

214 
TExch™geFûe
* 
	gm_Exch™geFûe
;

218 
TIdít
 
	gm_iSèπFromCu°omî
;

221 
TIdít
 
	gm_iSèπFromAccou¡
;

224 
TIdít
 
	gm_iCu°omîCou¡
;

227 
TIdít
 
	gm_iTŸÆCu°omîs
;

230 
	gm_iLﬂdUnôSize
;

233 
	gm_iLﬂdUnôAccou¡Cou¡
;

236 
	gm_iSˇÀFa˘‹
;

239 
	gm_iHoursOfInôülTødes
;

243 
	gm_fMónTimeBëwìnTødes
;

248 
	gm_fMónInTheM⁄eySubmissi⁄Dñay
;

255 
CD©eTime
 
	gm_SèπTime
;

268 
	gm_CuºítSimuœãdTime
;

279 
	g¥i‹ôy_queue
< 
	gTTødeInfo
,

280 
	gve˘‹
<
	gTTødeInfo
>,

281 
	ggª©î
<
	gTTødeInfo
> > 
	gm_CuºítTødes
;

286 
TTøde
 
	gm_iCuºítCom∂ëedTødes
;

291 
TTøde
 
	gm_iTŸÆTødes
;

297 
TTøde
 
	gm_iCuºítInôüãdTødes
;

302 
	gm_iTødesPîW‹kDay
;

314 
TCu°omîHﬁdögAºay
* 
	gm_pCu°omîHﬁdögs
;

319 
TTødeInfo
 
	gm_NewTøde
;

324 
TAddôi⁄ÆTødeInfo
 
	gm_Com∂ëedTødeInfo
;

332 
TTødeRow
 
	gm_TødeRow
;

333 
HOLDING_ROW
 
	gm_HﬁdögRow
;

337 
HOLDING_SUMMARY_ROW
 
	gm_HﬁdögSumm¨yRow
;

341 
	gm_iTødeHi°‹yRowCou¡
;

345 
	gm_iCashTønß˘i⁄RowCou¡
;

349 
	gm_iSëéemítRowCou¡
;

354 
	gm_iHﬁdögHi°‹yRowCou¡
;

357 
CMEESecurôy
 
	gm_MEESecurôy
;

362 
	gm_iCuºítAccou¡F‹Hﬁdög
;

363 
	gm_iCuºítSecurôyF‹Hﬁdög
;

364 
	gli°
<
	gTHﬁdögInfo
>::
ôî©‹
 
m_pCuºítSecurôyHﬁdög
;

369 
	gm_iCuºítAccou¡F‹HﬁdögSumm¨y
;

370 
	gm_iCuºítSecurôyF‹HﬁdögSumm¨y
;

375 
TTøde
 
	gm_iCuºítTødeId
;

379 
	gm_iCuºítLﬂdUnô
;

389 
Gíî©eNewTøde
();

395 
Gíî©eCom∂ëeTøde
();

400 
ölöe
 
Gíî©eDñayBëwìnTødes
();

405 
ölöe
 
THﬁdögLi°
* 
GëHﬁdögLi°F‹CuºítTøde
();

410 
	gli°
<
	gTHﬁdögInfo
>::
ôî©‹
 
Posôi⁄AtHﬁdögLi°
(

411 
THﬁdögLi°
* 
pHﬁdögLi°
,

412 
IsLifo
);

417 
Upd©eHﬁdögs
();

424 
boﬁ
 
FödNextHﬁdög
();

429 
boﬁ
 
FödNextHﬁdögLi°
();

434 
TTøde
 
Gíî©eNextTødeId
();

438 
eTødeTy≥ID
 
Gíî©eTødeTy≥
();

444 
Gíî©eCom∂ëedTødeInfo
();

448 
Gíî©eTødeRow
();

450 
Gíî©eTødeCh¨ge
();

452 
Gíî©eTødeCommissi⁄
();

454 
Gíî©eTødeTax
();

458 
Gíî©eSëéemítAmou¡
();

462 
Gíî©eTødeHi°‹yRow
();

466 
Gíî©eCashTønß˘i⁄Row
();

470 
Gíî©eSëéemítRow
();

474 
Gíî©eHﬁdögHi°‹yRow
(
TTøde
 
iHﬁdögTødeID
,

475 
TTøde
 
iTødeTødeID
,

476 
iBef‹eQty
,

477 
iA·îQty
);

480 
TIdít
 
GëCuºítCu°ID
(Ë{  
	gm_NewTøde
.
	giCu°omî
; }

482 
GëCuºítCu°Tõr
(Ë{  
	gm_NewTøde
.
	giCu°omîTõr
; }

484 
TIdít
 
GëCuºítAccID
(Ë{  
	gm_NewTøde
.
	giCu°omîAccou¡
; }

486 
TTøde
 
GëCuºítTødeID
(Ë{  
	gm_NewTøde
.
	giTødeId
; }

488 
CM⁄ey
 
GëCuºítBidPri˚
(Ë{  
	gm_NewTøde
.
	gfBidPri˚
; }

490 
CM⁄ey
 
GëCuºítTødePri˚
(Ë{  
	gm_NewTøde
.
	gfTødePri˚
; }

492 
GëCuºítTødeQty
(Ë{  
	gm_NewTøde
.
	giTødeQty
; }

494 
eTødeTy≥ID
 
GëCuºítTødeTy≥
(Ë{  
	gm_NewTøde
.
	geTødeTy≥
; }

496 
eSètusTy≥ID
 
GëCuºítTødeSètus
(Ë{  
	gm_NewTøde
.
	geTødeSètus
; }

498 
GëCuºítTødeIsCash
(Ë{  
	gm_TødeRow
.
	gm_Tøde
.
	gT_IS_CASH
; }

500 
TIdít
 
GëCuºítSecurôyIndex
(Ë{  
	gm_NewTøde
.
	giSymbﬁIndex
; }

502 
UINT
 
GëCuºítSecurôyAccou¡Index
(Ë{  
	gm_NewTøde
.
	giSymbﬁIndexInAccou¡
; }

504 
CD©eTime
 
GëCuºítTødePídögTime
() {

505 
CD©eTime
 
	gRëu∫Time
 = 
m_SèπTime
;

506 
	giDays
, 
	giMs
;

510 
	giDays
 = ()(
m_NewTøde
.
PídögTime
 / 
Sec⁄dsPîDay
);

511 
	giMs
 = ()((
m_NewTøde
.
PídögTime
 - 
iDays
 * 
Sec⁄dsPîDay
Ë* 
MsPîSec⁄d
);

512 
	gRëu∫Time
.
Add
(
iDays
, 
iMs
, 
åue
);

514  
	gRëu∫Time
;

517 
CD©eTime
 
GëCuºítTødeSubmissi⁄Time
() {

518 
CD©eTime
 
	gRëu∫Time
 = 
m_SèπTime
;

519 
	giDays
, 
	giMs
;

523 
	giDays
 = ()(
m_NewTøde
.
Submissi⁄Time
 / 
Sec⁄dsPîDay
);

524 
	giMs
 = ()((
m_NewTøde
.
Submissi⁄Time
 - 
iDays
 * 
Sec⁄dsPîDay
Ë* 
MsPîSec⁄d
);

525 
	gRëu∫Time
.
Add
(
iDays
, 
iMs
, 
åue
);

527  
	gRëu∫Time
;

530 
CD©eTime
 
GëCuºítTødeCom∂ëi⁄Time
() {

531 
CD©eTime
 
	gRëu∫Time
 = 
m_SèπTime
;

533 
	giDays
, 
	giMs
;

537 
	giDays
 = ()(
m_NewTøde
.
Com∂ëi⁄Time
 / 
Sec⁄dsPîDay
);

538 
	giMs
 = ()((
m_NewTøde
.
Com∂ëi⁄Time
 - 
iDays
 * 
Sec⁄dsPîDay
Ë* 
MsPîSec⁄d
);

539 
	gRëu∫Time
.
Add
(
iDays
, 
iMs
, 
åue
);

541  
	gRëu∫Time
;

544 
boﬁ
 
GëCuºítTødeIsLifo
(Ë{  
	gm_NewTøde
.
	gbIsLifo
; }

546 
CM⁄ey
 
GëCuºítTødeSñlVÆue
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gfSñlVÆue
; }

548 
CM⁄ey
 
GëCuºítTødeBuyVÆue
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gfBuyVÆue
; }

550 
TIdít
 
GëCuºítBrokîId
(Ë{  
	gm_Com∂ëedTødeInfo
.
	giCuºítBrokîId
; }

552 
eTaxSètus
 
GëCuºítTaxSètus
(Ë{  
	gm_Com∂ëedTødeInfo
.
	geAccou¡TaxSètus
; }

554 
CM⁄ey
 
GëCuºítTødeCh¨ge
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gCh¨ge
; }

556 
CM⁄ey
 
GëCuºítTødeCommissi⁄
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gCommissi⁄
; }

558 
CM⁄ey
 
GëCuºítTødeTax
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gTax
; }

560 
CM⁄ey
 
GëCuºítSëéemítAmou¡
(Ë{  
	gm_Com∂ëedTødeInfo
.
	gSëéemítAmou¡
; }

562 
	gpublic
:

565 
CTødeGí
(

566 
CI≈utFûes
 
öputFûes
,

567 
TIdít
 
iCu°omîCou¡
,

568 
TIdít
 
iSèπFromCu°omî
,

569 
TIdít
 
iTŸÆCu°omîs
,

570 
UINT
 
iLﬂdUnôSize
,

571 
UINT
 
iSˇÀFa˘‹
,

572 
UINT
 
iHoursOfInôülTødes
,

573 
boﬁ
 
bCacheE«bÀd
 = 
Ál£


578 ~
CTødeGí
();

589 
boﬁ
 
Gíî©eNextTøde
();

594 
boﬁ
 
Gíî©eNextHﬁdögSumm¨yRow
();

603 
boﬁ
 
Gíî©eNextHﬁdög
();

611 
boﬁ
 
InôNextLﬂdUnô
();

615 
PTRADE_ROW
 
GëTødeRow
(Ë{  &
	gm_TødeRow
.
	gm_Tøde
; }

616 
GëTødeHi°‹yRowCou¡
(Ë{  
	gm_iTødeHi°‹yRowCou¡
; }

617 
PTRADE_HISTORY_ROW
 
GëTødeHi°‹yRow
(
i
Ë{  &
	gm_TødeRow
.
	gm_TødeHi°‹y
[i]; }

618 
GëSëéemítRowCou¡
(Ë{  
	gm_iSëéemítRowCou¡
; }

619 
PSETTLEMENT_ROW
 
GëSëéemítRow
(Ë{  &
	gm_TødeRow
.
	gm_Sëéemít
; }

620 
GëCashTønß˘i⁄RowCou¡
(Ë{  
	gm_iCashTønß˘i⁄RowCou¡
; }

621 
PCASH_TRANSACTION_ROW
 
GëCashTønß˘i⁄Row
(Ë{  &
	gm_TødeRow
.
	gm_CashTønß˘i⁄
; }

622 
HOLDING_ROW
 c⁄° *
GëHﬁdögRow
(Ë{  &
	gm_HﬁdögRow
; }

623 
GëHﬁdögHi°‹yRowCou¡
(Ë{  
	gm_iHﬁdögHi°‹yRowCou¡
; }

624 
PHOLDING_HISTORY_ROW
 
GëHﬁdögHi°‹yRow
(
i
Ë{  &
	gm_TødeRow
.
	gm_HﬁdögHi°‹y
[i]; }

625 
HOLDING_SUMMARY_ROW
 c⁄° *
GëHﬁdögSumm¨yRow
(Ë{  &
	gm_HﬁdögSumm¨yRow
; }

627 
boﬁ
 
Gíî©eNextBrokîRec‹d
(Ë{  
	gm_BrokîTabÀ
.
Gíî©eNextRec‹d
(); }

628 
BROKER_ROW
 c⁄° * 
GëBrokîRow
(Ë{  
	gm_BrokîTabÀ
.
GëRow
(); }

	@include/workload/tpce/egen/TradeTypeIDs.h

44 #i‚de‡
TRADE_TYPE_IDS_H


45 
	#TRADE_TYPE_IDS_H


	)

47 
«me•a˚
 
	gTPCE


50 
	eeTødeTy≥ID


52 
	geM¨këBuy
 = 0,

53 
	geM¨këSñl
,

54 
	geSt›Loss
,

55 
	geLimôSñl
,

56 
	geLimôBuy
,

58 
	geMaxTødeTy≥ID


	@include/workload/tpce/egen/TradeTypeTable.h

40 #i‚de‡
TRADE_TYPE_TABLE_H


41 
	#TRADE_TYPE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCTødeTy≥TabÀ
 : 
public
 
TabÀTem∂©e
<
TRADE_TYPE_ROW
>

50 
if°ªam
 
InFûe
;

52 
	gpublic
:

53 
CTødeTy≥TabÀ
–*
szDúName
 )

54 : 
TabÀTem∂©e
<
TRADE_TYPE_ROW
>()

56 
szFûeName
[
iMaxP©h
];

58 
°∫˝y
(
szFûeName
, 
szDúName
, (szFileName));

59 
°∫ˇt
(
szFûeName
, "TødeTy≥.txt", (szFûeNameË- 
°æí
(
szDúName
) - 1);

61 
	gInFûe
.
›í
–
szFûeName
 );

64 ~
CTødeTy≥TabÀ
( )

66 
	gInFûe
.
˛o£
();

72 
boﬁ
 
Gíî©eNextRec‹d
()

74 if–
	gInFûe
.
good
() )

76 
	gm_row
.
Lﬂd
(
InFûe
);

79  ( 
	gInFûe
.
eof
() );

	@include/workload/tpce/egen/TxnHarnessBrokerVolume.h

37 #i‚de‡
TXN_HARNESS_BROKER_VOLUME_H


38 
	#TXN_HARNESS_BROKER_VOLUME_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCBrokîVﬁume


47 
CBrokîVﬁumeDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CBrokîVﬁume
(
CBrokîVﬁumeDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PBrokîVﬁumeTxnI≈ut
 
pTxnI≈ut
, 
PBrokîVﬁumeTxnOuçut
 
pTxnOuçut
 )

58 
TBrokîVﬁumeFøme1Ouçut
 
	gFøme1Ouçut
;

59 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

61 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

64 
	gm_db
->
DoBrokîVﬁumeFøme1
–
pTxnI≈ut
, &
Føme1Ouçut
 );

67 i‡(
	gFøme1Ouçut
.
	gli°_Àn
 < 0 || Føme1Ouçut.li°_À¿> 
	gmax_brokî_li°_Àn
)

69 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
BVF1_ERROR1
);

73 
	gpTxnOuçut
->
	gli°_Àn
 = 
Føme1Ouçut
.
li°_Àn
;

74 
	gi
=0; i < 
	gFøme1Ouçut
.
	gli°_Àn
 && i < 
	gmax_brokî_li°_Àn
; i++)

76 
	gpTxnOuçut
->
	gvﬁume
[
i
] = 
Føme1Ouçut
.
vﬁume
[i];

	@include/workload/tpce/egen/TxnHarnessCustomerPosition.h

41 #i‚de‡
TXN_HARNESS_CUSTOMER_POSITION_H


42 
	#TXN_HARNESS_CUSTOMER_POSITION_H


	)

44 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCCu°omîPosôi⁄


51 
CCu°omîPosôi⁄DBI¡îÁ˚
* 
	gm_db
;

53 
	gpublic
:

54 
CCu°omîPosôi⁄
(
CCu°omîPosôi⁄DBI¡îÁ˚
 *
pDB
)

55 : 
m_db
(
pDB
)

59 
DoTxn
–
PCu°omîPosôi⁄TxnI≈ut
 
pTxnI≈ut
, 
PCu°omîPosôi⁄TxnOuçut
 
pTxnOuçut
)

62 
TCu°omîPosôi⁄Føme1I≈ut
 
	gFøme1I≈ut
;

63 
TCu°omîPosôi⁄Føme1Ouçut
 
	gFøme1Ouçut
;

64 
TCu°omîPosôi⁄Føme2I≈ut
 
	gFøme2I≈ut
;

65 
TCu°omîPosôi⁄Føme2Ouçut
 
	gFøme2Ouçut
;

67 
mem£t
(&
Føme1I≈ut
, 0, (Frame1Input));

68 
mem£t
(&
Føme1Ouçut
, 0, (Frame1Output));

69 
mem£t
(&
Føme2I≈ut
, 0, (Frame2Input));

70 
mem£t
(&
Føme2Ouçut
, 0, (Frame2Output));

72 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

75 
	gFøme1I≈ut
.
	gcu°_id
 = 
pTxnI≈ut
->
cu°_id
;

76 
°∫˝y
(
Føme1I≈ut
.
èx_id
, 
pTxnI≈ut
->tax_id, (Frame1Input.tax_id));

79 
	gm_db
->
DoCu°omîPosôi⁄Føme1
(&
Føme1I≈ut
, &
Føme1Ouçut
);

82 i‡((
	gFøme1Ouçut
.
	gac˘_Àn
 < 1) ||

83 (
	gFøme1Ouçut
.
	gac˘_Àn
 > 
	gmax_ac˘_Àn
))

85 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
CPF1_ERROR1
);

89 
	gpTxnOuçut
->
	gac˘_Àn
 = 
Føme1Ouçut
.
ac˘_Àn
;

90 
	gpTxnOuçut
->
	gc_ad_id
 = 
Føme1Ouçut
.
c_ad_id
;

91 
°∫˝y
(
pTxnOuçut
->
c_¨ó_1
, 
Føme1Ouçut
.c_area_1, (pTxnOutput->c_area_1));

92 
°∫˝y
(
pTxnOuçut
->
c_¨ó_2
, 
Føme1Ouçut
.c_area_2, (pTxnOutput->c_area_2));

93 
°∫˝y
(
pTxnOuçut
->
c_¨ó_3
, 
Føme1Ouçut
.c_area_3, (pTxnOutput->c_area_3));

94 
°∫˝y
(
pTxnOuçut
->
c_˘ry_1
, 
Føme1Ouçut
.c_ctry_1, (pTxnOutput->c_ctry_1));

95 
°∫˝y
(
pTxnOuçut
->
c_˘ry_2
, 
Føme1Ouçut
.c_ctry_2, (pTxnOutput->c_ctry_2));

96 
°∫˝y
(
pTxnOuçut
->
c_˘ry_3
, 
Føme1Ouçut
.c_ctry_3, (pTxnOutput->c_ctry_3));

97 
	gpTxnOuçut
->
	gc_dob
 = 
Føme1Ouçut
.
c_dob
;

98 
°∫˝y
(
pTxnOuçut
->
c_emaû_1
, 
Føme1Ouçut
.c_email_1, (pTxnOutput->c_email_1));

99 
°∫˝y
(
pTxnOuçut
->
c_emaû_2
, 
Føme1Ouçut
.c_email_2, (pTxnOutput->c_email_2));

100 
°∫˝y
(
pTxnOuçut
->
c_ext_1
, 
Føme1Ouçut
.c_ext_1, (pTxnOutput->c_ext_1));

101 
°∫˝y
(
pTxnOuçut
->
c_ext_2
, 
Føme1Ouçut
.c_ext_2, (pTxnOutput->c_ext_2));

102 
°∫˝y
(
pTxnOuçut
->
c_ext_3
, 
Føme1Ouçut
.c_ext_3, (pTxnOutput->c_ext_3));

103 
°∫˝y
(
pTxnOuçut
->
c_f_«me
, 
Føme1Ouçut
.c_f_name, (pTxnOutput->c_f_name));

104 
°∫˝y
(
pTxnOuçut
->
c_gndr
, 
Føme1Ouçut
.c_gndr, (pTxnOutput->c_gndr));

105 
°∫˝y
(
pTxnOuçut
->
c_l_«me
, 
Føme1Ouçut
.c_l_name, (pTxnOutput->c_l_name));

106 
°∫˝y
(
pTxnOuçut
->
c_loˇl_1
, 
Føme1Ouçut
.c_local_1, (pTxnOutput->c_local_1));

107 
°∫˝y
(
pTxnOuçut
->
c_loˇl_2
, 
Føme1Ouçut
.c_local_2, (pTxnOutput->c_local_2));

108 
°∫˝y
(
pTxnOuçut
->
c_loˇl_3
, 
Føme1Ouçut
.c_local_3, (pTxnOutput->c_local_3));

109 
°∫˝y
(
pTxnOuçut
->
c_m_«me
, 
Føme1Ouçut
.c_m_name, (pTxnOutput->c_m_name));

110 
°∫˝y
(
pTxnOuçut
->
c_°_id
, 
Føme1Ouçut
.c_st_id, (pTxnOutput->c_st_id));

111 
	gpTxnOuçut
->
	gc_tõr
 = 
Føme1Ouçut
.
c_tõr
;

114 
	gi
=0; i < 
	gFøme1Ouçut
.
	gac˘_Àn
 && i < 
	gmax_ac˘_Àn
; i++)

116 
	gpTxnOuçut
->
	gac˘_id
[
i
] = 
Føme1Ouçut
.
ac˘_id
[i];

117 
	gpTxnOuçut
->
	gas£t_tŸÆ
[
i
] = 
Føme1Ouçut
.
as£t_tŸÆ
[i];

118 
	gpTxnOuçut
->
	gˇsh_bÆ
[
i
] = 
Føme1Ouçut
.
ˇsh_bÆ
[i];

121 i‡(
	gpTxnI≈ut
->
	ggë_hi°‹y
)

124 
	gFøme2I≈ut
.
	gac˘_id
 = 
Føme1Ouçut
.
ac˘_id
[ 
pTxnI≈ut
->
ac˘_id_idx
 ];

127 
	gm_db
->
DoCu°omîPosôi⁄Føme2
(&
Føme2I≈ut
, &
Føme2Ouçut
);

130 i‡((
	gFøme2Ouçut
.
	ghi°_Àn
 < 
	gmö_hi°_Àn
) ||

131 (
	gFøme2Ouçut
.
	ghi°_Àn
 > 
	gmax_hi°_Àn
))

133 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
CPF2_ERROR1
);

137 
	gpTxnOuçut
->
	ghi°_Àn
 = 
Føme2Ouçut
.
hi°_Àn
;

138 
	gi
=0; i < 
	gFøme2Ouçut
.
	ghi°_Àn
 && i < 
	gmax_hi°_Àn
; i++)

140 
	gpTxnOuçut
->
	ghi°_dts
[
i
] = 
Føme2Ouçut
.
hi°_dts
[i];

141 
	gpTxnOuçut
->
	gqty
[
i
] = 
Føme2Ouçut
.
qty
[i];

142 
°∫˝y
(
pTxnOuçut
->
symbﬁ
[
i
], 
Føme2Ouçut
.symbol[i], (pTxnOutput->symbol[i]));

143 
	gpTxnOuçut
->
	gåade_id
[
i
] = 
Føme2Ouçut
.
åade_id
[i];

144 
°∫˝y
(
pTxnOuçut
->
åade_°©us
[
i
], 
Føme2Ouçut
.trade_status[i], (pTxnOutput->trade_status[i]));

150 
	gm_db
->
DoCu°omîPosôi⁄Føme3
();

153 
	gpTxnOuçut
->
	ghi°_Àn
 = 0;

	@include/workload/tpce/egen/TxnHarnessDBInterface.h

41 #i‚de‡
DBINTERFACE_H_INCLUDED


42 
	#DBINTERFACE_H_INCLUDED


	)

44 
	~<°rög
>

45 
	~<ˇs£π
>

46 
	~<c°dio
>

47 
	~"TxnH¨√ssSåu˘s.h
"

48 
	~"TxnH¨√ssSídToM¨këI¡îÁ˚.h
"

49 
	~"îr‹.h
"

51 
usög
 
«me•a˚
 
	g°d
;

53 
«me•a˚
 
	gTPCE
 {

55 ˛as†
	cCTødeOrdîDBI¡îÁ˚
 {

56 
	gpublic
:

57 
vútuÆ
 
DoTødeOrdîFøme1
(c⁄° 
TTødeOrdîFøme1I≈ut
 *
pIn
, 
TTødeOrdîFøme1Ouçut
 *
pOut
) = 0;

58 
vútuÆ
 
DoTødeOrdîFøme2
(c⁄° 
TTødeOrdîFøme2I≈ut
 *
pIn
, 
TTødeOrdîFøme2Ouçut
 *
pOut
) = 0;

59 
vútuÆ
 
DoTødeOrdîFøme3
(c⁄° 
TTødeOrdîFøme3I≈ut
 *
pIn
, 
TTødeOrdîFøme3Ouçut
 *
pOut
) = 0;

60 
vútuÆ
 
DoTødeOrdîFøme4
(c⁄° 
TTødeOrdîFøme4I≈ut
 *
pIn
, 
TTødeOrdîFøme4Ouçut
 *
pOut
) = 0;

61 
vútuÆ
 
DoTødeOrdîFøme5
() = 0;

62 
vútuÆ
 
DoTødeOrdîFøme6
() = 0;

63 
	gvútuÆ
 ~
CTødeOrdîDBI¡îÁ˚
 () { }

66 ˛as†
	cCTødeSètusDBI¡îÁ˚
 {

67 
	gpublic
:

68 
vútuÆ
 
DoTødeSètusFøme1
(c⁄° 
TTødeSètusFøme1I≈ut
 *
pIn
, 
TTødeSètusFøme1Ouçut
 *
pOut
) = 0;

69 
	gvútuÆ
 ~
CTødeSètusDBI¡îÁ˚
 () { }

72 ˛as†
	cCCu°omîPosôi⁄DBI¡îÁ˚
 {

73 
	gpublic
:

74 
vútuÆ
 
DoCu°omîPosôi⁄Føme1
(c⁄° 
TCu°omîPosôi⁄Føme1I≈ut
 *
pIn
, 
TCu°omîPosôi⁄Føme1Ouçut
 *
pOut
) = 0;

75 
vútuÆ
 
DoCu°omîPosôi⁄Føme2
(c⁄° 
TCu°omîPosôi⁄Føme2I≈ut
 *
pIn
, 
TCu°omîPosôi⁄Føme2Ouçut
 *
pOut
) = 0;

76 
vútuÆ
 
DoCu°omîPosôi⁄Føme3
() = 0;

77 
	gvútuÆ
 ~
CCu°omîPosôi⁄DBI¡îÁ˚
 () { }

80 ˛as†
	cCBrokîVﬁumeDBI¡îÁ˚
 {

81 
	gpublic
:

82 
vútuÆ
 
DoBrokîVﬁumeFøme1
(c⁄° 
TBrokîVﬁumeFøme1I≈ut
 *
pIn
, 
TBrokîVﬁumeFøme1Ouçut
 *
pOut
) = 0;

83 
	gvútuÆ
 ~
CBrokîVﬁumeDBI¡îÁ˚
 () { }

86 ˛as†
	cCSecurôyDëaûDBI¡îÁ˚
 {

87 
	gpublic
:

88 
vútuÆ
 
DoSecurôyDëaûFøme1
(c⁄° 
TSecurôyDëaûFøme1I≈ut
 *
pIn
, 
TSecurôyDëaûFøme1Ouçut
 *
pOut
) = 0;

89 
	gvútuÆ
 ~
CSecurôyDëaûDBI¡îÁ˚
 () { }

92 ˛as†
	cCM¨këW©chDBI¡îÁ˚
 {

93 
	gpublic
:

94 
vútuÆ
 
DoM¨këW©chFøme1
 (c⁄° 
TM¨këW©chFøme1I≈ut
 *
pIn
, 
TM¨këW©chFøme1Ouçut
 *
pOut
) = 0;

95 
	gvútuÆ
 ~
CM¨këW©chDBI¡îÁ˚
 () { }

98 ˛as†
	cCTødeLookupDBI¡îÁ˚
 {

99 
	gpublic
:

100 
vútuÆ
 
DoTødeLookupFøme1
(c⁄° 
TTødeLookupFøme1I≈ut
 *
pIn
, 
TTødeLookupFøme1Ouçut
 *
pOut
) = 0;

101 
vútuÆ
 
DoTødeLookupFøme2
(c⁄° 
TTødeLookupFøme2I≈ut
 *
pIn
, 
TTødeLookupFøme2Ouçut
 *
pOut
) = 0;

102 
vútuÆ
 
DoTødeLookupFøme3
(c⁄° 
TTødeLookupFøme3I≈ut
 *
pIn
, 
TTødeLookupFøme3Ouçut
 *
pOut
) = 0;

103 
vútuÆ
 
DoTødeLookupFøme4
(c⁄° 
TTødeLookupFøme4I≈ut
 *
pIn
, 
TTødeLookupFøme4Ouçut
 *
pOut
) = 0;

104 
	gvútuÆ
 ~
CTødeLookupDBI¡îÁ˚
 () { }

107 ˛as†
	cCTødeUpd©eDBI¡îÁ˚
 {

108 
	gpublic
:

109 
vútuÆ
 
DoTødeUpd©eFøme1
(c⁄° 
TTødeUpd©eFøme1I≈ut
 *
pIn
, 
TTødeUpd©eFøme1Ouçut
 *
pOut
) = 0;

110 
vútuÆ
 
DoTødeUpd©eFøme2
(c⁄° 
TTødeUpd©eFøme2I≈ut
 *
pIn
, 
TTødeUpd©eFøme2Ouçut
 *
pOut
) = 0;

111 
vútuÆ
 
DoTødeUpd©eFøme3
(c⁄° 
TTødeUpd©eFøme3I≈ut
 *
pIn
, 
TTødeUpd©eFøme3Ouçut
 *
pOut
) = 0;

112 
	gvútuÆ
 ~
CTødeUpd©eDBI¡îÁ˚
 () { }

115 ˛as†
	cCTødeResu…DBI¡îÁ˚
 {

116 
	gpublic
:

117 
vútuÆ
 
DoTødeResu…Føme1
(c⁄° 
TTødeResu…Føme1I≈ut
 *
pIn
, 
TTødeResu…Føme1Ouçut
 *
pOut
) = 0;

118 
vútuÆ
 
DoTødeResu…Føme2
(c⁄° 
TTødeResu…Føme2I≈ut
 *
pIn
, 
TTødeResu…Føme2Ouçut
 *
pOut
) = 0;

119 
vútuÆ
 
DoTødeResu…Føme3
(c⁄° 
TTødeResu…Føme3I≈ut
 *
pIn
, 
TTødeResu…Føme3Ouçut
 *
pOut
) = 0;

120 
vútuÆ
 
DoTødeResu…Føme4
(c⁄° 
TTødeResu…Føme4I≈ut
 *
pIn
, 
TTødeResu…Føme4Ouçut
 *
pOut
) = 0;

121 
vútuÆ
 
DoTødeResu…Føme5
(c⁄° 
TTødeResu…Føme5I≈ut
 *
pIn
 ) = 0;

122 
vútuÆ
 
DoTødeResu…Føme6
(c⁄° 
TTødeResu…Føme6I≈ut
 *
pIn
, 
TTødeResu…Føme6Ouçut
 *
pOut
) = 0;

123 
	gvútuÆ
 ~
CTødeResu…DBI¡îÁ˚
 () { }

126 ˛as†
	cCM¨këFìdDBI¡îÁ˚
 {

127 
	gpublic
:

128 
vútuÆ
 
DoM¨këFìdFøme1
(c⁄° 
TM¨këFìdFøme1I≈ut
 *
pIn
, 
TM¨këFìdFøme1Ouçut
 *
pOut
, 
CSídToM¨këI¡îÁ˚
 *
pSídToM¨kë
) = 0;

129 
	gvútuÆ
 ~
CM¨këFìdDBI¡îÁ˚
 () { }

132 ˛as†
	cCD©aMaöã«n˚DBI¡îÁ˚
 {

133 
	gpublic
:

134 
vútuÆ
 
DoD©aMaöã«n˚Føme1
(c⁄° 
TD©aMaöã«n˚Føme1I≈ut
 *
pIn
) = 0;

135 
	gvútuÆ
 ~
CD©aMaöã«n˚DBI¡îÁ˚
 () { }

138 ˛as†
	cCTødeCÀ™upDBI¡îÁ˚
 {

139 
	gpublic
:

140 
vútuÆ
 
DoTødeCÀ™upFøme1
(c⁄° 
TTødeCÀ™upFøme1I≈ut
 *
pIn
) = 0;

141 
	gvútuÆ
 ~
CTødeCÀ™upDBI¡îÁ˚
 () { }

	@include/workload/tpce/egen/TxnHarnessDataMaintenance.h

37 #i‚de‡
TXN_HARNESS_DATA_MAINTENANCE_H


38 
	#TXN_HARNESS_DATA_MAINTENANCE_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCD©aMaöã«n˚


47 
CD©aMaöã«n˚DBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CD©aMaöã«n˚
(
CD©aMaöã«n˚DBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PD©aMaöã«n˚TxnI≈ut
 
pTxnI≈ut
, 
PD©aMaöã«n˚TxnOuçut
 
pTxnOuçut
 )

57 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

60 
	gm_db
->
DoD©aMaöã«n˚Føme1
(
pTxnI≈ut
);

	@include/workload/tpce/egen/TxnHarnessMarketFeed.h

37 #i‚de‡
TXN_HARNESS_MARKET_FEED_H


38 
	#TXN_HARNESS_MARKET_FEED_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCM¨këFìd


47 
CM¨këFìdDBI¡îÁ˚
* 
	gm_db
;

48 
CSídToM¨këI¡îÁ˚
* 
	gm_pSídToM¨kë
;

50 
	gpublic
:

51 
CM¨këFìd
(
CM¨këFìdDBI¡îÁ˚
 *
pDB
, 
CSídToM¨këI¡îÁ˚
 *
pSídToM¨kë
)

52 : 
m_db
(
pDB
)

53 , 
m_pSídToM¨kë
(
pSídToM¨kë
)

57 
DoTxn
–
PM¨këFìdTxnI≈ut
 
pTxnI≈ut
, 
PM¨këFìdTxnOuçut
 
pTxnOuçut
 )

60 
TM¨këFìdFøme1I≈ut
 
	gFøme1I≈ut
;

61 
TM¨këFìdFøme1Ouçut
 
	gFøme1Ouçut
;

63 
mem£t
(&
Føme1I≈ut
, 0, ( Frame1Input ));

64 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

66 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

69 
	gFøme1I≈ut
.
	gSètusAndTødeTy≥
 = 
pTxnI≈ut
->
SètusAndTødeTy≥
;

70 
	gi
=0; i<
	gmax_„ed_Àn
; i++)

72 
	gFøme1I≈ut
.
	gE¡rõs
[0] = 
pTxnI≈ut
->
E¡rõs
[0];

76 
	gm_db
->
DoM¨këFìdFøme1
(&
Føme1I≈ut
, &
Føme1Ouçut
, 
m_pSídToM¨kë
);

79 i‡(
	gFøme1Ouçut
.
	gnum_upd©ed
 < 
	gpTxnI≈ut
->
	gunique_symbﬁs
)

81 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
MFF1_ERROR1
);

85 
	gpTxnOuçut
->
	g£nd_Àn
 = 
Føme1Ouçut
.
£nd_Àn
;

	@include/workload/tpce/egen/TxnHarnessMarketWatch.h

37 #i‚de‡
TXN_HARNESS_MARKET_WATCH_H


38 
	#TXN_HARNESS_MARKET_WATCH_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCM¨këW©ch


47 
CM¨këW©chDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CM¨këW©ch
(
CM¨këW©chDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
(
PM¨këW©chTxnI≈ut
 
pTxnI≈ut
, 
PM¨këW©chTxnOuçut
 
pTxnOuçut
)

57 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

59 i‡–
	gpTxnI≈ut
->
	gac˘_id
 != 0 ||

60 
pTxnI≈ut
->
c_id
 != 0 ||

61 
pTxnI≈ut
->
ödu°ry_«me
[0] != '\0')

64 
TM¨këW©chFøme1Ouçut
 
Føme1Ouçut
;

65 
mem£t
(&
Føme1Ouçut
, 0, (Frame1Output));

68 
	gm_db
->
DoM¨këW©chFøme1
(
pTxnI≈ut
, &
Føme1Ouçut
);

71 
	gpTxnOuçut
->
	gp˘_ch™ge
 = 
Føme1Ouçut
.
p˘_ch™ge
;

75 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
MWF1_ERROR1
);

	@include/workload/tpce/egen/TxnHarnessSecurityDetail.h

37 #i‚de‡
TXN_HARNESS_SECURITY_DETAIL_H


38 
	#TXN_HARNESS_SECURITY_DETAIL_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCSecurôyDëaû


47 
CSecurôyDëaûDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CSecurôyDëaû
(
CSecurôyDëaûDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PSecurôyDëaûTxnI≈ut
 
pTxnI≈ut
, 
PSecurôyDëaûTxnOuçut
 
pTxnOuçut
 )

58 
TSecurôyDëaûFøme1Ouçut
 
	gFøme1Ouçut
;

63 
	gpTxnOuçut
->
	gœ°_vﬁ
 = 0;

64 
	gpTxnOuçut
->
	g√ws_Àn
 = 0;

65 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

68 
	gm_db
->
DoSecurôyDëaûFøme1
(
pTxnI≈ut
, &
Føme1Ouçut
);

71 i‡((
	gFøme1Ouçut
.
	gday_Àn
 < 
	gmö_day_Àn
) ||

72 (
	gFøme1Ouçut
.
	gday_Àn
 > 
	gmax_day_Àn
))

74 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
SDF1_ERROR1
);

76 i‡(
	gFøme1Ouçut
.
	gfö_Àn
 !
max_fö_Àn
)

78 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
SDF1_ERROR2
);

80 i‡(
	gFøme1Ouçut
.
	g√ws_Àn
 !
max_√ws_Àn
)

82 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
SDF1_ERROR3
);

86 
	gpTxnOuçut
->
	gœ°_vﬁ
 = 
Føme1Ouçut
.
œ°_vﬁ
;

87 
	gpTxnOuçut
->
	g√ws_Àn
 = 
Føme1Ouçut
.
√ws_Àn
;

	@include/workload/tpce/egen/TxnHarnessSendToMarketInterface.h

42 #i‚de‡
TXN_HARNESS_SEND_TO_MARKET_INTERFACE_H


43 
	#TXN_HARNESS_SEND_TO_MARKET_INTERFACE_H


	)

45 
	~"TxnH¨√ssSåu˘s.h
"

46 
	~"MEETødeReque°A˘i⁄s.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCSídToM¨këI¡îÁ˚


53 
	gpublic
:

64 
vútuÆ
 ~
CSídToM¨këI¡îÁ˚
() {};

66 
boﬁ
 
SídToM¨këFromFøme
(
TTødeReque°
 &
åade_mes
)

68 
	gåade_mes
.
	geA˘i⁄
 = 
eMEEPro˚ssOrdî
;

69  
SídToM¨kë
(
åade_mes
);

72 
boﬁ
 
SídToM¨këFromH¨√ss
(
TTødeReque°
 &
åade_mes
)

74  
SídToM¨kë
(
åade_mes
);

77 
	g¥Ÿe˘ed
:

78 
vútuÆ
 
boﬁ
 
SídToM¨kë
(
TTødeReque°
 &
åade_mes
) = 0;

	@include/workload/tpce/egen/TxnHarnessStructs.h

40 #i‚de‡
TXN_HARNESS_STRUCTS_H


41 
	#TXN_HARNESS_STRUCTS_H


	)

43 
	~"EGíSènd¨dTy≥s.h
"

44 
	~"D©eTime.h
"

45 
	~"MiscC⁄°s.h
"

46 
	~"TabÀC⁄°s.h
"

47 
	~"MEETødeReque°A˘i⁄s.h
"

48 
	~"Cu°omîAccou¡sAndPîmissi⁄sTabÀ.h
"

50 
«me•a˚
 
	gTPCE


54 
boﬁ
 
	g›î©‹
< (c⁄° 
	gTIMESTAMP_STRUCT
& 
	gts1
, c⁄° TIMESTAMP_STRUCT& 
	gts2
);

56 c⁄° 
INT32
 
	giFöYórs
 = 5;

57 c⁄° 
INT32
 
	giFöQåPîYór
 = 4;

58 c⁄° 
INT32
 
	giMaxDaûyHi°‹y
 = 10;

59 c⁄° 
INT32
 
	giMaxNews
 = 10;

62 c⁄° 
INT32
 
	gmö_brokî_li°_Àn
 = 20;

63 c⁄° 
INT32
 
	gmax_brokî_li°_Àn
 = 40;

66 c⁄° 
INT32
 
	gmax_ac˘_Àn
 = 
iMaxAccou¡sPîCu°
;

67 c⁄° 
INT32
 
	gmö_hi°_Àn
 = 10 * 1;

68 c⁄° 
INT32
 
	gmax_hi°_Àn
 = 10 * 3;

71 c⁄° 
INT32
 
	gmax_„ed_Àn
 = 20;

74 c⁄° 
INT32
 
	gmö_day_Àn
 = 5;

75 c⁄° 
INT32
 
	gmax_day_Àn
 = 20;

76 c⁄° 
INT32
 
	gmax_fö_Àn
 = 20;

77 c⁄° 
INT32
 
	gmax_√ws_Àn
 = 2;

78 c⁄° 
INT32
 
	gmax_comp_Àn
 = 3;

81 c⁄° 
INT32
 
	gmax_åade_°©us_Àn
 = 50;

84 c⁄° 
INT32
 
	gmax_èbÀ_«me
 = 30;

90 
	#TXN_HARNESS_PROPAGATE_STATUS
(
code
) \

91 i‡((
pTxnOuçut
->
°©us
 >0Ë&& ((
code
) < 0)) \

94 
pTxnOuçut
->
°©us
 = (
code
); \

96 i‡((
pTxnOuçut
->
°©us
 =0Ë&& ((
code
) > 0)) \

99 
pTxnOuçut
->
°©us
 = (
code
); \

100 }

	)

102 
	#TXN_HARNESS_SET_STATUS_SUCCESS
 \

103 
pTxnOuçut
->
°©us
 = 
CBa£TxnEº
::
SUCCESS
;

	)

108 
	sTBrokîVﬁumeTxnI≈ut


111 
	gbrokî_li°
[
max_brokî_li°_Àn
][
cB_NAME_Àn
+1];

112 
	g£˘‹_«me
[
cSC_NAME_Àn
+1];

113 } *
	tPBrokîVﬁumeTxnI≈ut
,

114 
	tTBrokîVﬁumeFøme1I≈ut
,

115 *
	tPBrokîVﬁumeFøme1I≈ut
;

117 
	sTBrokîVﬁumeTxnOuçut


120 
	gvﬁume
[
max_brokî_li°_Àn
];

121 
INT32
 
	gli°_Àn
;

122 
INT32
 
	g°©us
;

123 } *
	tPBrokîVﬁumeTxnOuçut
;

125 
	sTBrokîVﬁumeFøme1Ouçut


128 
	gvﬁume
[
max_brokî_li°_Àn
];

129 
INT32
 
	gli°_Àn
;

130 
	gbrokî_«me
[
max_brokî_li°_Àn
][
cB_NAME_Àn
+1];

131 } *
	tPBrokîVﬁumeFøme1Ouçut
;

135 
	sTCu°omîPosôi⁄TxnI≈ut


137 
TIdít
 
	gac˘_id_idx
;

138 
TIdít
 
	gcu°_id
;

139 
boﬁ
 
	ggë_hi°‹y
;

140 
	gèx_id
[
cTAX_ID_Àn
+1];

141 } *
	tPCu°omîPosôi⁄TxnI≈ut
;

143 
	sTCu°omîPosôi⁄TxnOuçut


145 
	gas£t_tŸÆ
[
max_ac˘_Àn
];

146 
	gˇsh_bÆ
[
max_ac˘_Àn
];

147 
TIdít
 
	gac˘_id
[
max_ac˘_Àn
];

148 
TTøde
 
	gåade_id
[
max_hi°_Àn
];

149 
TIdít
 
	gc_ad_id
;

150 
INT32
 
	gqty
[
max_hi°_Àn
];

151 
INT32
 
	gac˘_Àn
;

152 
INT32
 
	ghi°_Àn
;

153 
INT32
 
	g°©us
;

154 
TIMESTAMP_STRUCT
 
	ghi°_dts
[
max_hi°_Àn
];

155 
TIMESTAMP_STRUCT
 
	gc_dob
;

156 
	gsymbﬁ
[
max_hi°_Àn
][
cSYMBOL_Àn
+1];

157 
	gåade_°©us
[
max_hi°_Àn
][
cST_NAME_Àn
+1];

158 
	gc_¨ó_1
[
cAREA_Àn
+1];

159 
	gc_¨ó_2
[
cAREA_Àn
+1];

160 
	gc_¨ó_3
[
cAREA_Àn
+1];

161 
	gc_˘ry_1
[
cCTRY_Àn
+1];

162 
	gc_˘ry_2
[
cCTRY_Àn
+1];

163 
	gc_˘ry_3
[
cCTRY_Àn
+1];

164 
	gc_emaû_1
[
cEMAIL_Àn
+1];

165 
	gc_emaû_2
[
cEMAIL_Àn
+1];

166 
	gc_ext_1
[
cEXT_Àn
+1];

167 
	gc_ext_2
[
cEXT_Àn
+1];

168 
	gc_ext_3
[
cEXT_Àn
+1];

169 
	gc_f_«me
[
cF_NAME_Àn
+1];

170 
	gc_gndr
[
cGNDR_Àn
+1];

171 
	gc_l_«me
[
cL_NAME_Àn
+1];

172 
	gc_loˇl_1
[
cLOCAL_Àn
+1];

173 
	gc_loˇl_2
[
cLOCAL_Àn
+1];

174 
	gc_loˇl_3
[
cLOCAL_Àn
+1];

175 
	gc_m_«me
[
cM_NAME_Àn
+1];

176 
	gc_°_id
[
cST_ID_Àn
+1];

177 
	gc_tõr
;

178 } *
	tPCu°omîPosôi⁄TxnOuçut
;

180 
	sTCu°omîPosôi⁄Føme1I≈ut


182 
TIdít
 
	gcu°_id
;

183 
	gèx_id
[
cTAX_ID_Àn
+1];

184 } *
	tPCu°omîPosôi⁄Føme1I≈ut
;

186 
	sTCu°omîPosôi⁄Føme1Ouçut


188 
	gas£t_tŸÆ
[
max_ac˘_Àn
];

189 
	gˇsh_bÆ
[
max_ac˘_Àn
];

190 
TIdít
 
	gac˘_id
[
max_ac˘_Àn
];

191 
TIdít
 
	gc_ad_id
;

192 
TIdít
 
	gcu°_id
;

193 
INT32
 
	gac˘_Àn
;

194 
TIMESTAMP_STRUCT
 
	gc_dob
;

195 
	gc_¨ó_1
[
cAREA_Àn
+1];

196 
	gc_¨ó_2
[
cAREA_Àn
+1];

197 
	gc_¨ó_3
[
cAREA_Àn
+1];

198 
	gc_˘ry_1
[
cCTRY_Àn
+1];

199 
	gc_˘ry_2
[
cCTRY_Àn
+1];

200 
	gc_˘ry_3
[
cCTRY_Àn
+1];

201 
	gc_emaû_1
[
cEMAIL_Àn
+1];

202 
	gc_emaû_2
[
cEMAIL_Àn
+1];

203 
	gc_ext_1
[
cEXT_Àn
+1];

204 
	gc_ext_2
[
cEXT_Àn
+1];

205 
	gc_ext_3
[
cEXT_Àn
+1];

206 
	gc_f_«me
[
cF_NAME_Àn
+1];

207 
	gc_gndr
[
cGNDR_Àn
+1];

208 
	gc_l_«me
[
cL_NAME_Àn
+1];

209 
	gc_loˇl_1
[
cLOCAL_Àn
+1];

210 
	gc_loˇl_2
[
cLOCAL_Àn
+1];

211 
	gc_loˇl_3
[
cLOCAL_Àn
+1];

212 
	gc_m_«me
[
cM_NAME_Àn
+1];

213 
	gc_°_id
[
cST_ID_Àn
+1];

214 
	gc_tõr
;

215 } *
	tPCu°omîPosôi⁄Føme1Ouçut
;

217 
	sTCu°omîPosôi⁄Føme2I≈ut


219 
TIdít
 
	gac˘_id
;

220 } *
	tPCu°omîPosôi⁄Føme2I≈ut
;

222 
	sTCu°omîPosôi⁄Føme2Ouçut


224 
TTøde
 
	gåade_id
[
max_hi°_Àn
];

225 
INT32
 
	gqty
[
max_hi°_Àn
];

226 
INT32
 
	ghi°_Àn
;

227 
TIMESTAMP_STRUCT
 
	ghi°_dts
[
max_hi°_Àn
];

228 
	gsymbﬁ
[
max_hi°_Àn
][
cSYMBOL_Àn
+1];

229 
	gåade_°©us
[
max_hi°_Àn
][
cST_NAME_Àn
+1];

230 } *
	tPCu°omîPosôi⁄Føme2Ouçut
;

237 
	sTD©aMaöã«n˚TxnI≈ut


239 
TIdít
 
	gac˘_id
;

240 
TIdít
 
	gc_id
;

241 
TIdít
 
	gco_id
;

242 
INT32
 
	gday_of_m⁄th
;

243 
INT32
 
	gvﬁ_ö¸
;

244 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

245 
	gèbÀ_«me
[
max_èbÀ_«me
+1];

246 
	gtx_id
[
cTX_ID_Àn
+1];

247 } *
	tPD©aMaöã«n˚TxnI≈ut
,

248 
	tTD©aMaöã«n˚Føme1I≈ut
,

249 *
	tPD©aMaöã«n˚Føme1I≈ut
;

251 
	sTD©aMaöã«n˚TxnOuçut


253 
INT32
 
	g°©us
;

254 } *
	tPD©aMaöã«n˚TxnOuçut
;

260 
	sTSètusAndTødeTy≥


262 
	g°©us_submôãd
[
cST_ID_Àn
+1];

263 
	gty≥_limô_buy
[
cTT_ID_Àn
+1];

264 
	gty≥_limô_£Œ
[
cTT_ID_Àn
+1];

265 
	gty≥_°›_loss
[
cTT_ID_Àn
+1];

266 } *
	tPTSètusAndTødeTy≥
;

269 
	sTTødeReque°


271 
	g¥i˚_quŸe
;

272 
TTøde
 
	gåade_id
;

273 
INT32
 
	gåade_qty
;

274 
eMEETødeReque°A˘i⁄
 
	geA˘i⁄
;

275 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

276 
	gåade_ty≥_id
[
cTT_ID_Àn
+1];

277 } *
	tPTødeReque°
;

280 
	sTTickîE¡ry


282 
	g¥i˚_quŸe
;

283 
INT32
 
	gåade_qty
;

284 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

285 } *
	tPTickîE¡ry
;

288 
	sTM¨këFìdTxnI≈ut


290 
INT32
 
	gunique_symbﬁs
;

291 
	gzz_∑ddög1
[4];

292 
TSètusAndTødeTy≥
 
	gSètusAndTødeTy≥
;

293 
	gzz_∑ddög2
[4];

294 
TTickîE¡ry
 
	gE¡rõs
[
max_„ed_Àn
];

295 } *
	tPM¨këFìdTxnI≈ut
;

297 
	sTM¨këFìdTxnOuçut


299 
INT32
 
	g£nd_Àn
;

300 
INT32
 
	g°©us
;

301 } *
	tPM¨këFìdTxnOuçut
;

303 
	sTM¨këFìdFøme1I≈ut


305 
TSètusAndTødeTy≥
 
	gSètusAndTødeTy≥
;

306 
	gzz_∑ddög
[4];

307 
TTickîE¡ry
 
	gE¡rõs
[
max_„ed_Àn
];

308 } *
	tPM¨këFìdFøme1I≈ut
;

310 
	sTM¨këFìdFøme1Ouçut


312 
INT32
 
	gnum_upd©ed
;

313 
INT32
 
	g£nd_Àn
;

314 } *
	tPM¨këFìdFøme1Ouçut
;

320 
	sTM¨këW©chTxnI≈ut


322 
TIdít
 
	gac˘_id
;

323 
TIdít
 
	gc_id
;

324 
TIdít
 
	gídög_co_id
;

325 
TIdít
 
	g°¨tög_co_id
;

326 
TIMESTAMP_STRUCT
 
	g°¨t_day
;

327 
	gödu°ry_«me
[
cIN_NAME_Àn
+1];

328 } *
	tPM¨këW©chTxnI≈ut
,

329 
	tTM¨këW©chFøme1I≈ut
,

330 *
	tPM¨këW©chFøme1I≈ut
;

332 
	sTM¨këW©chTxnOuçut


334 
	gp˘_ch™ge
;

335 
INT32
 
	g°©us
;

336 } *
	tPM¨këW©chTxnOuçut
;

338 
	sTM¨këW©chFøme1Ouçut


340 
	gp˘_ch™ge
;

341 } *
	tPM¨këW©chFøme1Ouçut
;

347 
	sTFöInfo


349 
	gas£ts
;

350 
	gbasic_ïs
;

351 
	gdûut_ïs
;

352 
	gövít
;

353 
	glüb
;

354 
	gm¨gö
;

355 
	g√t_ó∫
;

356 
	gout_basic
;

357 
	gout_dûut
;

358 
	gªv
;

359 
INT32
 
	gqå
;

360 
INT32
 
	gyór
;

361 
TIMESTAMP_STRUCT
 
	g°¨t_d©e
;

362 
DB_INDICATOR
 
	gas£ts_öd
;

363 
DB_INDICATOR
 
	gbasic_ïs_öd
;

364 
DB_INDICATOR
 
	gdûut_ïs_öd
;

365 
DB_INDICATOR
 
	gövít_öd
;

366 
DB_INDICATOR
 
	glüb_öd
;

367 
DB_INDICATOR
 
	gm¨gö_öd
;

368 
DB_INDICATOR
 
	g√t_ó∫_öd
;

369 
DB_INDICATOR
 
	gout_basic_öd
;

370 
DB_INDICATOR
 
	gout_dûut_öd
;

371 
DB_INDICATOR
 
	gqå_öd
;

372 
DB_INDICATOR
 
	gªv_öd
;

373 
DB_INDICATOR
 
	g°¨t_d©e_öd
;

374 
DB_INDICATOR
 
	gyór_öd
;

375 } *
	tPFöInfo
;

377 
	sTDaûyHi°‹y


379 
	g˛o£
;

380 
	ghigh
;

381 
	glow
;

382 
INT64
 
	gvﬁ
;

383 
TIMESTAMP_STRUCT
 
	gd©e
;

384 
DB_INDICATOR
 
	g˛o£_öd
;

385 
DB_INDICATOR
 
	gd©e_öd
;

386 
DB_INDICATOR
 
	ghigh_öd
;

387 
DB_INDICATOR
 
	glow_öd
;

388 
DB_INDICATOR
 
	gvﬁ_öd
;

389 } *
	tPDaûyHi°‹y
;

391 
	sTNews


393 
TIMESTAMP_STRUCT
 
	gdts
;

394 
	gauth
[
cNI_AUTHOR_Àn
+1];

395 
	ghódlöe
[
cNI_HEADLINE_Àn
+1];

396 
	gôem
[
cNI_ITEM_Àn
+1];

397 
	g§c
[
cNI_SOURCE_Àn
+1];

398 
	gsumm¨y
[
cNI_SUMMARY_Àn
+1];

399 
DB_INDICATOR
 
	gauth_öd
;

400 } *
	tPNews
;

402 
	sTSecurôyDëaûTxnI≈ut


404 
INT32
 
	gmax_rows_to_ªtu∫
;

405 
boﬁ
 
	gac˚ss_lob_Êag
;

406 
TIMESTAMP_STRUCT
 
	g°¨t_day
;

407 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

408 } *
	tPSecurôyDëaûTxnI≈ut
,

409 
	tTSecurôyDëaûFøme1I≈ut
,

410 *
	tPSecurôyDëaûFøme1I≈ut
;

412 
	sTSecurôyDëaûTxnOuçut


414 
INT64
 
	gœ°_vﬁ
;

415 
INT32
 
	g√ws_Àn
;

416 
INT32
 
	g°©us
;

417 } *
	tPSecurôyDëaûTxnOuçut
;

419 
	sTSecurôyDëaûFøme1Ouçut


421 
	gdivid
;

422 
	gœ°_›í
;

423 
	gœ°_¥i˚
;

424 
	g≥_øtio
;

425 
	gs52_wk_high
;

426 
	gs52_wk_low
;

427 
	gyõld
;

428 
INT64
 
	gœ°_vﬁ
;

429 
INT64
 
	gnum_out
;

430 
INT32
 
	gday_Àn
;

431 
INT32
 
	gex_˛o£
;

432 
INT32
 
	gex_num_symb
;

433 
INT32
 
	gex_›í
;

434 
INT32
 
	gfö_Àn
;

435 
INT32
 
	g√ws_Àn
;

436 
TIMESTAMP_STRUCT
 
	gex_d©e
;

437 
TIMESTAMP_STRUCT
 
	g›í_d©e
;

438 
TIMESTAMP_STRUCT
 
	gs52_wk_high_d©e
;

439 
TIMESTAMP_STRUCT
 
	gs52_wk_low_d©e
;

440 
TIMESTAMP_STRUCT
 
	g°¨t_d©e
;

441 
TDaûyHi°‹y
 
	gday
[
max_day_Àn
];

442 
TFöInfo
 
	gfö
[
max_fö_Àn
];

443 
TNews
 
	g√ws
[
max_√ws_Àn
];

444 
	g˝_co_«me
[
max_comp_Àn
][
cCO_NAME_Àn
+1];

445 
	g˝_ö_«me
[
max_comp_Àn
][
cIN_NAME_Àn
+1];

446 
	g˚o_«me
[
cCEO_NAME_Àn
+1];

447 
	gco_ad_˘y
[
cAD_CTRY_Àn
+1];

448 
	gco_ad_div
[
cAD_DIV_Àn
+1];

449 
	gco_ad_löe1
[
cAD_LINE_Àn
+1];

450 
	gco_ad_löe2
[
cAD_LINE_Àn
+1];

451 
	gco_ad_town
[
cAD_TOWN_Àn
+1];

452 
	gco_ad_zù
[
cAD_ZIP_Àn
+1];

453 
	gco_desc
[
cCO_DESC_Àn
+1];

454 
	gco_«me
[
cCO_NAME_Àn
+1];

455 
	gco_°_id
[
cST_ID_Àn
+1];

456 
	gex_ad_˘y
[
cAD_CTRY_Àn
+1];

457 
	gex_ad_div
[
cAD_DIV_Àn
+1];

458 
	gex_ad_löe1
[
cAD_LINE_Àn
+1];

459 
	gex_ad_löe2
[
cAD_LINE_Àn
+1];

460 
	gex_ad_town
[
cAD_TOWN_Àn
+1];

461 
	gex_ad_zù
[
cAD_ZIP_Àn
+1];

462 
	gex_desc
[
cEX_DESC_Àn
+1];

463 
	gex_«me
[
cEX_NAME_Àn
+1];

464 
	gs_«me
[
cS_NAME_Àn
+1];

465 
	g•_øã
[
cSP_RATE_Àn
+1];

466 } *
	tPSecurôyDëaûFøme1Ouçut
;

472 
	sTTødeLookupTxnI≈ut


474 
TTøde
 
	gåade_id
[
TødeLookupFøme1MaxRows
];

475 
TIdít
 
	gac˘_id
;

476 
TIdít
 
	gmax_ac˘_id
;

477 
INT32
 
	g‰ame_to_execuã
;

478 
INT32
 
	gmax_åades
;

479 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

480 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

481 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

482 } *
	tPTødeLookupTxnI≈ut
;

483 
	sTTødeLookupTxnOuçut


485 
TTøde
 
	gåade_li°
[
TødeLookupMaxRows
];

486 
INT32
 
	g‰ame_execuãd
;

487 
INT32
 
	gnum_found
;

488 
INT32
 
	g°©us
;

489 
boﬁ
 
	gis_ˇsh
[
TødeLookupMaxRows
];

490 
boﬁ
 
	gis_m¨kë
[
TødeLookupMaxRows
];

491 } *
	tPTødeLookupTxnOuçut
;

493 
	sTTødeLookupFøme1I≈ut


495 
TTøde
 
	gåade_id
[
TødeLookupFøme1MaxRows
];

496 
INT32
 
	gmax_åades
;

497 } *
	tPTødeLookupFøme1I≈ut
;

501 
	sTTødeLookupFøme1TødeInfo


503 
	gbid_¥i˚
;

504 
	gˇsh_å™ß˘i⁄_amou¡
;

505 
	g£âÀmít_amou¡
;

506 
	gåade_¥i˚
;

507 
boﬁ
 
	gis_ˇsh
;

508 
boﬁ
 
	gis_m¨kë
;

509 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

510 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

511 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

512 
	gåade_hi°‹y_°©us_id
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

513 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

514 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

515 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

516 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

517 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

518 
DB_INDICATOR
 
	gbid_¥i˚_öd
;

519 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

520 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

521 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

522 
DB_INDICATOR
 
	gexec_«me_öd
;

523 
DB_INDICATOR
 
	gis_ˇsh_öd
;

524 
DB_INDICATOR
 
	gis_m¨kë_öd
;

525 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

526 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

527 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

528 
DB_INDICATOR
 
	gåade_¥i˚_öd
;

529 } *
	tPTødeLookupFøme1TødeInfo
;

531 
	sTTødeLookupFøme1Ouçut


533 
INT32
 
	gnum_found
;

534 
TTødeLookupFøme1TødeInfo
 
	gåade_öfo
[
TødeLookupFøme1MaxRows
];

535 } *
	tPTødeLookupFøme1Ouçut
;

537 
	sTTødeLookupFøme2I≈ut


539 
TIdít
 
	gac˘_id
;

540 
INT32
 
	gmax_åades
;

541 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

542 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

543 } *
	tPTødeLookupFøme2I≈ut
;

547 
	sTTødeLookupFøme2TødeInfo


549 
	gbid_¥i˚
;

550 
	gˇsh_å™ß˘i⁄_amou¡
;

551 
	g£âÀmít_amou¡
;

552 
	gåade_¥i˚
;

553 
TTøde
 
	gåade_id
;

554 
boﬁ
 
	gis_ˇsh
;

555 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

556 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

557 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

558 
	gåade_hi°‹y_°©us_id
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

559 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

560 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

561 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

562 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

563 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

564 
DB_INDICATOR
 
	gbid_¥i˚_öd
;

565 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

566 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

567 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

568 
DB_INDICATOR
 
	gexec_«me_öd
;

569 
DB_INDICATOR
 
	gis_ˇsh_öd
;

570 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

571 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

572 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

573 
DB_INDICATOR
 
	gåade_id_öd
;

574 
DB_INDICATOR
 
	gåade_¥i˚_öd
;

575 } *
	tPTødeLookupFøme2TødeInfo
;

577 
	sTTødeLookupFøme2Ouçut


579 
INT32
 
	gnum_found
;

580 
TTødeLookupFøme2TødeInfo
 
	gåade_öfo
[
TødeLookupFøme2MaxRows
];

581 } *
	tPTødeLookupFøme2Ouçut
;

583 
	sTTødeLookupFøme3I≈ut


585 
TIdít
 
	gmax_ac˘_id
;

586 
INT32
 
	gmax_åades
;

587 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

588 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

589 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

590 } *
	tPTødeLookupFøme3I≈ut
;

594 
	sTTødeLookupFøme3TødeInfo


596 
	gˇsh_å™ß˘i⁄_amou¡
;

597 
	g¥i˚
;

598 
	g£âÀmít_amou¡
;

599 
TIdít
 
	gac˘_id
;

600 
TTøde
 
	gåade_id
;

601 
INT32
 
	gqu™tôy
;

602 
boﬁ
 
	gis_ˇsh
;

603 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

604 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

605 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

606 
TIMESTAMP_STRUCT
 
	gåade_dts
;

607 
	gåade_hi°‹y_°©us_id
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

608 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

609 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

610 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

611 
	gåade_ty≥
[
cTT_ID_Àn
+1];

612 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

613 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeLookupMaxTødeHi°‹yRowsRëu∫ed
];

614 
DB_INDICATOR
 
	gac˘_id_öd
;

615 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

616 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

617 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

618 
DB_INDICATOR
 
	gexec_«me_öd
;

619 
DB_INDICATOR
 
	gis_ˇsh_öd
;

620 
DB_INDICATOR
 
	g¥i˚_öd
;

621 
DB_INDICATOR
 
	gqu™tôy_öd
;

622 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

623 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

624 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

625 
DB_INDICATOR
 
	gåade_dts_öd
;

626 
DB_INDICATOR
 
	gåade_id_öd
;

627 
DB_INDICATOR
 
	gåade_ty≥_öd
;

628 } *
	tPTødeLookupFøme3TødeInfo
;

630 
	sTTødeLookupFøme3Ouçut


632 
INT32
 
	gnum_found
;

633 
TTødeLookupFøme3TødeInfo
 
	gåade_öfo
[
TødeLookupFøme3MaxRows
];

634 } *
	tPTødeLookupFøme3Ouçut
;

636 
	sTTødeLookupFøme4I≈ut


638 
TIdít
 
	gac˘_id
;

639 
TIMESTAMP_STRUCT
 
	gåade_dts
;

640 } *
	tPTødeLookupFøme4I≈ut
;

644 
	sTTødeLookupFøme4TødeInfo


646 
TTøde
 
	ghﬁdög_hi°‹y_id
;

647 
TTøde
 
	ghﬁdög_hi°‹y_åade_id
;

648 
INT32
 
	gqu™tôy_a·î
;

649 
INT32
 
	gqu™tôy_bef‹e
;

650 
DB_INDICATOR
 
	ghﬁdög_hi°‹y_id_öd
;

651 
DB_INDICATOR
 
	ghﬁdög_hi°‹y_åade_id_öd
;

652 
DB_INDICATOR
 
	gqu™tôy_a·î_öd
;

653 
DB_INDICATOR
 
	gqu™tôy_bef‹e_öd
;

654 } *
	tPTødeLookupFøme4TødeInfo
;

656 
	sTTødeLookupFøme4Ouçut


658 
TTøde
 
	gåade_id
;

659 
INT32
 
	gnum_found
;

660 
INT32
 
	gnum_åades_found
;

661 
TTødeLookupFøme4TødeInfo
 
	gåade_öfo
[
TødeLookupFøme4MaxRows
];

662 } *
	tPTødeLookupFøme4Ouçut
;

669 
	sTTødeOrdîTxnI≈ut


671 
	gªque°ed_¥i˚
;

672 
TIdít
 
	gac˘_id
;

673 
INT32
 
	gis_lifo
;

674 
INT32
 
	grﬁl_ô_back
;

675 
INT32
 
	gåade_qty
;

676 
INT32
 
	gty≥_is_m¨gö
;

677 
	gco_«me
[
cCO_NAME_Àn
+1];

678 
	gexec_f_«me
[
cF_NAME_Àn
+1];

679 
	gexec_l_«me
[
cL_NAME_Àn
+1];

680 
	gexec_èx_id
[
cTAX_ID_Àn
+1];

681 
	gissue
[
cS_ISSUE_Àn
+1];

682 
	g°_≥ndög_id
[
cST_ID_Àn
+1];

683 
	g°_submôãd_id
[
cST_ID_Àn
+1];

684 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

685 
	gåade_ty≥_id
[
cTT_ID_Àn
+1];

686 } *
	tPTødeOrdîTxnI≈ut
;

687 
	sTTødeOrdîTxnOuçut


689 
	gbuy_vÆue
;

690 
	g£Œ_vÆue
;

691 
	gèx_amou¡
;

692 
TTøde
 
	gåade_id
;

693 
INT32
 
	g°©us
;

694 } *
	tPTødeOrdîTxnOuçut
;

696 
	sTTødeOrdîFøme1I≈ut


698 
TIdít
 
	gac˘_id
;

699 } *
	tPTødeOrdîFøme1I≈ut
;

701 
	sTTødeOrdîFøme1Ouçut


703 
TIdít
 
	gbrokî_id
;

704 
TIdít
 
	gcu°_id
;

705 
INT32
 
	gcu°_tõr
;

706 
INT32
 
	gnum_found
;

707 
INT32
 
	gèx_°©us
;

708 
	gac˘_«me
[
cCA_NAME_Àn
+1];

709 
	gbrokî_«me
[
cB_NAME_Àn
+1];

710 
	gcu°_f_«me
[
cF_NAME_Àn
+1];

711 
	gcu°_l_«me
[
cL_NAME_Àn
+1];

712 
	gèx_id
[
cTAX_ID_Àn
+1];

713 } *
	tPTødeOrdîFøme1Ouçut
;

715 
	sTTødeOrdîFøme2I≈ut


717 
TIdít
 
	gac˘_id
;

718 
	gexec_f_«me
[
cF_NAME_Àn
+1];

719 
	gexec_l_«me
[
cL_NAME_Àn
+1];

720 
	gexec_èx_id
[
cTAX_ID_Àn
+1];

721 } *
	tPTødeOrdîFøme2I≈ut
;

723 
	sTTødeOrdîFøme2Ouçut


725 
	g≠_a˛
[
cACL_Àn
+1];

726 } *
	tPTødeOrdîFøme2Ouçut
;

728 
	sTTødeOrdîFøme3I≈ut


730 
	gªque°ed_¥i˚
;

731 
TIdít
 
	gac˘_id
;

732 
TIdít
 
	gcu°_id
;

733 
INT32
 
	gcu°_tõr
;

734 
INT32
 
	gis_lifo
;

735 
INT32
 
	gèx_°©us
;

736 
INT32
 
	gåade_qty
;

737 
INT32
 
	gty≥_is_m¨gö
;

738 
	gco_«me
[
cCO_NAME_Àn
+1];

739 
	gissue
[
cS_ISSUE_Àn
+1];

740 
	g°_≥ndög_id
[
cST_ID_Àn
+1];

741 
	g°_submôãd_id
[
cST_ID_Àn
+1];

742 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

743 
	gåade_ty≥_id
[
cTT_ID_Àn
+1];

744 } *
	tPTødeOrdîFøme3I≈ut
;

746 
	sTTødeOrdîFøme3Ouçut


748 
	gac˘_as£ts
;

749 
	gbuy_vÆue
;

750 
	gch¨ge_amou¡
;

751 
	gcomm_øã
;

752 
	gm¨kë_¥i˚
;

753 
	gªque°ed_¥i˚
;

754 
	g£Œ_vÆue
;

755 
	gèx_amou¡
;

756 
INT32
 
	gty≥_is_m¨kë
;

757 
INT32
 
	gty≥_is_£Œ
;

758 
	gco_«me
[
cCO_NAME_Àn
+1];

759 
	gs_«me
[
cS_NAME_Àn
+1];

760 
	g°©us_id
[
cST_ID_Àn
+1];

761 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

762 } *
	tPTødeOrdîFøme3Ouçut
;

764 
	sTTødeOrdîFøme4I≈ut


766 
	gch¨ge_amou¡
;

767 
	gcomm_amou¡
;

768 
	gªque°ed_¥i˚
;

769 
TIdít
 
	gac˘_id
;

770 
TIdít
 
	gbrokî_id
;

771 
INT32
 
	gis_ˇsh
;

772 
INT32
 
	gis_lifo
;

773 
INT32
 
	gåade_qty
;

774 
INT32
 
	gty≥_is_m¨kë
;

775 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

776 
	g°©us_id
[
cST_ID_Àn
+1];

777 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

778 
	gåade_ty≥_id
[
cTT_ID_Àn
+1];

779 } *
	tPTødeOrdîFøme4I≈ut
;

781 
	sTTødeOrdîFøme4Ouçut


783 
TTøde
 
	gåade_id
;

784 } *
	tPTødeOrdîFøme4Ouçut
;

791 
	sTTødeResu…TxnI≈ut


793 
	gåade_¥i˚
;

794 
TTøde
 
	gåade_id
;

795 } *
	tPTødeResu…TxnI≈ut
;

797 
	sTTødeResu…TxnOuçut


799 
	gac˘_bÆ
;

800 
TIdít
 
	gac˘_id
;

801 
INT32
 
	glﬂd_unô
;

802 
INT32
 
	g°©us
;

803 } *
	tPTødeResu…TxnOuçut
;

805 
	sTTødeResu…Føme1I≈ut


807 
TTøde
 
	gåade_id
;

808 } *
	tPTødeResu…Føme1I≈ut
;

810 
	sTTødeResu…Føme1Ouçut


812 
	gch¨ge
;

813 
TIdít
 
	gac˘_id
;

814 
INT32
 
	ghs_qty
;

815 
INT32
 
	gis_lifo
;

816 
INT32
 
	gnum_found
;

817 
INT32
 
	gåade_is_ˇsh
;

818 
INT32
 
	gåade_qty
;

819 
INT32
 
	gty≥_is_m¨kë
;

820 
INT32
 
	gty≥_is_£Œ
;

821 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

822 
	gty≥_id
[
cTT_ID_Àn
+1];

823 
	gty≥_«me
[
cTT_NAME_Àn
+1];

824 } *
	tPTødeResu…Føme1Ouçut
;

826 
	sTTødeResu…Føme2I≈ut


828 
	gåade_¥i˚
;

829 
TIdít
 
	gac˘_id
;

830 
TTøde
 
	gåade_id
;

831 
INT32
 
	ghs_qty
;

832 
INT32
 
	gis_lifo
;

833 
INT32
 
	gåade_qty
;

834 
INT32
 
	gty≥_is_£Œ
;

835 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

836 } *
	tPTødeResu…Føme2I≈ut
;

838 
	sTTødeResu…Føme2Ouçut


840 
	gbuy_vÆue
;

841 
	g£Œ_vÆue
;

842 
TIdít
 
	gbrokî_id
;

843 
TIdít
 
	gcu°_id
;

844 
INT32
 
	gèx_°©us
;

845 
TIMESTAMP_STRUCT
 
	gåade_dts
;

846 } *
	tPTødeResu…Føme2Ouçut
;

848 
	sTTødeResu…Føme3I≈ut


850 
	gbuy_vÆue
;

851 
	g£Œ_vÆue
;

852 
TIdít
 
	gcu°_id
;

853 
TTøde
 
	gåade_id
;

854 } *
	tPTødeResu…Føme3I≈ut
;

856 
	sTTødeResu…Føme3Ouçut


858 
	gèx_amou¡
;

859 } *
	tPTødeResu…Føme3Ouçut
;

861 
	sTTødeResu…Føme4I≈ut


863 
TIdít
 
	gcu°_id
;

864 
INT32
 
	gåade_qty
;

865 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

866 
	gty≥_id
[
cTT_ID_Àn
+1];

867 } *
	tPTødeResu…Føme4I≈ut
;

869 
	sTTødeResu…Føme4Ouçut


871 
	gcomm_øã
;

872 
	gs_«me
[
cS_NAME_Àn
+1];

873 } *
	tPTødeResu…Føme4Ouçut
;

875 
	sTTødeResu…Føme5I≈ut


877 
	gcomm_amou¡
;

878 
	gåade_¥i˚
;

879 
TIdít
 
	gbrokî_id
;

880 
TTøde
 
	gåade_id
;

881 
TIMESTAMP_STRUCT
 
	gåade_dts
;

882 
	g°_com∂ëed_id
[
cST_ID_Àn
+1];

883 } *
	tPTødeResu…Føme5I≈ut
;

885 
	sTTødeResu…Føme6I≈ut


887 
	g£_amou¡
;

888 
TIdít
 
	gac˘_id
;

889 
TTøde
 
	gåade_id
;

890 
INT32
 
	gåade_is_ˇsh
;

891 
INT32
 
	gåade_qty
;

892 
TIMESTAMP_STRUCT
 
	gdue_d©e
;

893 
TIMESTAMP_STRUCT
 
	gåade_dts
;

894 
	gs_«me
[
cS_NAME_Àn
+1];

895 
	gty≥_«me
[
cTT_NAME_Àn
+1];

896 } *
	tPTødeResu…Føme6I≈ut
;

898 
	sTTødeResu…Føme6Ouçut


900 
	gac˘_bÆ
;

901 } *
	tPTødeResu…Føme6Ouçut
;

907 
	sTTødeSètusTxnI≈ut


909 
TIdít
 
	gac˘_id
;

910 } *
	tPTødeSètusTxnI≈ut
,

911 
	tTTødeSètusFøme1I≈ut
,

912 *
	tPTødeSètusFøme1I≈ut
;

914 
	sTTødeSètusTxnOuçut


916 
TTøde
 
	gåade_id
[
max_åade_°©us_Àn
];

917 
INT32
 
	g°©us
;

918 
	g°©us_«me
[
max_åade_°©us_Àn
][
cST_NAME_Àn
+1];

919 } *
	tPTødeSètusTxnOuçut
;

921 
	sTTødeSètusFøme1Ouçut


923 
	gch¨ge
[
max_åade_°©us_Àn
];

924 
TTøde
 
	gåade_id
[
max_åade_°©us_Àn
];

925 
INT32
 
	gåade_qty
[
max_åade_°©us_Àn
];

926 
INT32
 
	gnum_found
;

927 
TIMESTAMP_STRUCT
 
	gåade_dts
[
max_åade_°©us_Àn
];

928 
	gex_«me
[
max_åade_°©us_Àn
][
cEX_NAME_Àn
+1];

929 
	gexec_«me
[
max_åade_°©us_Àn
][
cEXEC_NAME_Àn
+1];

930 
	gs_«me
[
max_åade_°©us_Àn
][
cS_NAME_Àn
+1];

931 
	g°©us_«me
[
max_åade_°©us_Àn
][
cST_NAME_Àn
+1];

932 
	gsymbﬁ
[
max_åade_°©us_Àn
][
cSYMBOL_Àn
+1];

933 
	gty≥_«me
[
max_åade_°©us_Àn
][
cTT_NAME_Àn
+1];

934 
	gbrokî_«me
[
cB_NAME_Àn
+1];

935 
	gcu°_f_«me
[
cF_NAME_Àn
+1];

936 
	gcu°_l_«me
[
cL_NAME_Àn
+1];

937 } *
	tPTødeSètusFøme1Ouçut
;

943 
	sTTødeUpd©eTxnI≈ut


945 
TTøde
 
	gåade_id
[
TødeUpd©eFøme1MaxRows
];

946 
TIdít
 
	gac˘_id
;

947 
TIdít
 
	gmax_ac˘_id
;

948 
INT32
 
	g‰ame_to_execuã
;

949 
INT32
 
	gmax_åades
;

950 
INT32
 
	gmax_upd©es
;

951 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

952 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

953 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

954 } *
	tPTødeUpd©eTxnI≈ut
;

955 
	sTTødeUpd©eTxnOuçut


957 
TTøde
 
	gåade_li°
[
TødeUpd©eMaxRows
];

958 
INT32
 
	g‰ame_execuãd
;

959 
INT32
 
	gnum_found
;

960 
INT32
 
	gnum_upd©ed
;

961 
INT32
 
	g°©us
;

962 
boﬁ
 
	gis_ˇsh
[
TødeUpd©eMaxRows
];

963 
boﬁ
 
	gis_m¨kë
[
TødeUpd©eMaxRows
];

964 } *
	tPTødeUpd©eTxnOuçut
;

966 
	sTTødeUpd©eFøme1I≈ut


968 
TTøde
 
	gåade_id
[
TødeUpd©eFøme1MaxRows
];

969 
INT32
 
	gmax_åades
;

970 
INT32
 
	gmax_upd©es
;

971 } *
	tPTødeUpd©eFøme1I≈ut
;

973 
	sTTødeUpd©eFøme1TødeInfo


975 
	gbid_¥i˚
;

976 
	gˇsh_å™ß˘i⁄_amou¡
;

977 
	g£âÀmít_amou¡
;

978 
	gåade_¥i˚
;

979 
boﬁ
 
	gis_ˇsh
;

980 
boﬁ
 
	gis_m¨kë
;

981 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

982 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

983 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

984 
	gåade_hi°‹y_°©us_id
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

985 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

986 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

987 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

988 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

989 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

990 
DB_INDICATOR
 
	gbid_¥i˚_öd
;

991 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

992 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

993 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

994 
DB_INDICATOR
 
	gexec_«me_öd
;

995 
DB_INDICATOR
 
	gis_ˇsh_öd
;

996 
DB_INDICATOR
 
	gis_m¨kë_öd
;

997 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

998 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

999 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

1000 
DB_INDICATOR
 
	gåade_¥i˚_öd
;

1001 } *
	tPTødeUpd©eFøme1TødeInfo
;

1003 
	sTTødeUpd©eFøme1Ouçut


1005 
INT32
 
	gnum_found
;

1006 
INT32
 
	gnum_upd©ed
;

1007 
TTødeUpd©eFøme1TødeInfo
 
	gåade_öfo
[
TødeUpd©eFøme1MaxRows
];

1008 } *
	tPTødeUpd©eFøme1Ouçut
;

1010 
	sTTødeUpd©eFøme2I≈ut


1012 
TIdít
 
	gac˘_id
;

1013 
INT32
 
	gmax_åades
;

1014 
INT32
 
	gmax_upd©es
;

1015 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

1016 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

1017 } *
	tPTødeUpd©eFøme2I≈ut
;

1019 
	sTTødeUpd©eFøme2TødeInfo


1021 
	gbid_¥i˚
;

1022 
	gˇsh_å™ß˘i⁄_amou¡
;

1023 
	g£âÀmít_amou¡
;

1024 
	gåade_¥i˚
;

1025 
TTøde
 
	gåade_id
;

1026 
boﬁ
 
	gis_ˇsh
;

1027 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1028 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

1029 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

1030 
	gåade_hi°‹y_°©us_id
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

1031 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

1032 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

1033 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

1034 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1035 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1036 
DB_INDICATOR
 
	gbid_¥i˚_öd
;

1037 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

1038 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

1039 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

1040 
DB_INDICATOR
 
	gexec_«me_öd
;

1041 
DB_INDICATOR
 
	gis_ˇsh_öd
;

1042 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

1043 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

1044 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

1045 
DB_INDICATOR
 
	gåade_id_öd
;

1046 
DB_INDICATOR
 
	gåade_¥i˚_öd
;

1047 } *
	tPTødeUpd©eFøme2TødeInfo
;

1049 
	sTTødeUpd©eFøme2Ouçut


1051 
INT32
 
	gnum_found
;

1052 
INT32
 
	gnum_upd©ed
;

1053 
TTødeUpd©eFøme2TødeInfo
 
	gåade_öfo
[
TødeUpd©eFøme2MaxRows
];

1054 } *
	tPTødeUpd©eFøme2Ouçut
;

1056 
	sTTødeUpd©eFøme3I≈ut


1058 
TIdít
 
	gmax_ac˘_id
;

1059 
INT32
 
	gmax_åades
;

1060 
INT32
 
	gmax_upd©es
;

1061 
TIMESTAMP_STRUCT
 
	gíd_åade_dts
;

1062 
TIMESTAMP_STRUCT
 
	g°¨t_åade_dts
;

1063 
	gsymbﬁ
[
cSYMBOL_Àn
+1];

1064 } *
	tPTødeUpd©eFøme3I≈ut
;

1066 
	sTTødeUpd©eFøme3TødeInfo


1068 
	gˇsh_å™ß˘i⁄_amou¡
;

1069 
	g¥i˚
;

1070 
	g£âÀmít_amou¡
;

1071 
TIdít
 
	gac˘_id
;

1072 
TTøde
 
	gåade_id
;

1073 
INT32
 
	gqu™tôy
;

1074 
boﬁ
 
	gis_ˇsh
;

1075 
TIMESTAMP_STRUCT
 
	gåade_hi°‹y_dts
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1076 
TIMESTAMP_STRUCT
 
	gˇsh_å™ß˘i⁄_dts
;

1077 
TIMESTAMP_STRUCT
 
	g£âÀmít_ˇsh_due_d©e
;

1078 
TIMESTAMP_STRUCT
 
	gåade_dts
;

1079 
	gåade_hi°‹y_°©us_id
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
][
cTH_ST_ID_Àn
+1];

1080 
	gˇsh_å™ß˘i⁄_«me
[
cCT_NAME_Àn
+1];

1081 
	gexec_«me
[
cEXEC_NAME_Àn
+1];

1082 
	gs_«me
[
cS_NAME_Àn
+1];

1083 
	g£âÀmít_ˇsh_ty≥
[
cSE_CASH_TYPE_Àn
+1];

1084 
	gåade_ty≥
[
cTT_ID_Àn
+1];

1085 
	gty≥_«me
[
cTT_NAME_Àn
+1];

1086 
DB_INDICATOR
 
	gåade_hi°‹y_dts_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1087 
DB_INDICATOR
 
	gåade_hi°‹y_°©us_id_öd
[
TødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
];

1088 
DB_INDICATOR
 
	gac˘_id_öd
;

1089 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_amou¡_öd
;

1090 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_dts_öd
;

1091 
DB_INDICATOR
 
	gˇsh_å™ß˘i⁄_«me_öd
;

1092 
DB_INDICATOR
 
	gexec_«me_öd
;

1093 
DB_INDICATOR
 
	gis_ˇsh_öd
;

1094 
DB_INDICATOR
 
	g¥i˚_öd
;

1095 
DB_INDICATOR
 
	gqu™tôy_öd
;

1096 
DB_INDICATOR
 
	gs_«me_öd
;

1097 
DB_INDICATOR
 
	g£âÀmít_amou¡_öd
;

1098 
DB_INDICATOR
 
	g£âÀmít_ˇsh_due_d©e_öd
;

1099 
DB_INDICATOR
 
	g£âÀmít_ˇsh_ty≥_öd
;

1100 
DB_INDICATOR
 
	gåade_dts_öd
;

1101 
DB_INDICATOR
 
	gåade_id_öd
;

1102 
DB_INDICATOR
 
	gåade_ty≥_öd
;

1103 
DB_INDICATOR
 
	gty≥_«me_öd
;

1104 } *
	tPTødeUpd©eFøme3TødeInfo
;

1106 
	sTTødeUpd©eFøme3Ouçut


1108 
INT32
 
	gnum_found
;

1109 
INT32
 
	gnum_upd©ed
;

1110 
TTødeUpd©eFøme3TødeInfo
 
	gåade_öfo
[
TødeUpd©eFøme3MaxRows
];

1111 } *
	tPTødeUpd©eFøme3Ouçut
;

1116 
	sTTødeCÀ™upTxnI≈ut


1118 
TTøde
 
	g°¨t_åade_id
;

1119 
	g°_ˇn˚Àd_id
[
cST_ID_Àn
+1];

1120 
	g°_≥ndög_id
[
cST_ID_Àn
+1];

1121 
	g°_submôãd_id
[
cST_ID_Àn
+1];

1122 } *
	tPTødeCÀ™upTxnI≈ut
,

1123 
	tTTødeCÀ™upFøme1I≈ut
,

1124 *
	tPTødeCÀ™upFøme1I≈ut
;

1126 
	sTTødeCÀ™upTxnOuçut


1128 
INT32
 
	g°©us
;

1129 } *
	tPTødeCÀ™upTxnOuçut
;

	@include/workload/tpce/egen/TxnHarnessTradeCleanup.h

37 #i‚de‡
TXN_HARNESS_TRADE_CLEANUP_H


38 
	#TXN_HARNESS_TRADE_CLEANUP_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCTødeCÀ™up


47 
CTødeCÀ™upDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CTødeCÀ™up
(
CTødeCÀ™upDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PTødeCÀ™upTxnI≈ut
 
pTxnI≈ut
, 
PTødeCÀ™upTxnOuçut
 
pTxnOuçut
)

57 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

59 
	gm_db
->
DoTødeCÀ™upFøme1
(
pTxnI≈ut
);

	@include/workload/tpce/egen/TxnHarnessTradeLookup.h

37 #i‚de‡
TXN_HARNESS_TRADE_LOOKUP_H


38 
	#TXN_HARNESS_TRADE_LOOKUP_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCTødeLookup


47 
CTødeLookupDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CTødeLookup
(
CTødeLookupDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PTødeLookupTxnI≈ut
 
pTxnI≈ut
, 
PTødeLookupTxnOuçut
 
pTxnOuçut
 )

57 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

59  
	gpTxnI≈ut
->
	g‰ame_to_execuã
 )

63 
TTødeLookupFøme1I≈ut
 
Føme1I≈ut
;

64 
TTødeLookupFøme1Ouçut
 
	gFøme1Ouçut
;

65 
mem£t
(&
Føme1I≈ut
, 0, ( Frame1Input ));

66 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

69 
	gFøme1I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

70 
mem˝y
–
Føme1I≈ut
.
åade_id
, 
pTxnI≈ut
->trade_id, ( Frame1Input.trade_id ));

73 
	gm_db
->
DoTødeLookupFøme1
–&
Føme1I≈ut
, &
Føme1Ouçut
 );

76 i‡(
	gFøme1Ouçut
.
	gnum_found
 !
pTxnI≈ut
->
max_åades
)

78 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF1_ERROR1
);

82 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 1;

83 
	gi
=0; i < 
	gFøme1Ouçut
.
	gnum_found
 && i < 
	gTødeLookupFøme1MaxRows
; i++)

85 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme1Ouçut
.
åade_öfo
[i].
is_ˇsh
;

86 
	gpTxnOuçut
->
	gis_m¨kë
[
i
] = 
Føme1Ouçut
.
åade_öfo
[i].
is_m¨kë
;

88 
	gpTxnOuçut
->
	gnum_found
 = 
Føme1Ouçut
.
num_found
;

94 
TTødeLookupFøme2I≈ut
 
Føme2I≈ut
;

95 
TTødeLookupFøme2Ouçut
 
	gFøme2Ouçut
;

96 
mem£t
(&
Føme2I≈ut
, 0, ( Frame2Input ));

97 
mem£t
(&
Føme2Ouçut
, 0, ( Frame2Output ));

100 
	gFøme2I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

101 
	gFøme2I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

102 
	gFøme2I≈ut
.
	g°¨t_åade_dts
 = 
pTxnI≈ut
->
°¨t_åade_dts
;

103 
	gFøme2I≈ut
.
	gíd_åade_dts
 = 
pTxnI≈ut
->
íd_åade_dts
;

106 
	gm_db
->
DoTødeLookupFøme2
–&
Føme2I≈ut
, &
Føme2Ouçut
 );

109 i‡(
	gFøme2Ouçut
.
	gnum_found
 < 0 || Føme2Ouçut.num_found > 
	gFøme2I≈ut
.
	gmax_åades
)

111 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF2_ERROR1
);

113 i‡(
	gFøme2Ouçut
.
	gnum_found
 == 0)

115 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF2_WARN1
);

119 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 2;

120 
	gi
=0; i < 
	gFøme2Ouçut
.
	gnum_found
 && i < 
	gTødeLookupFøme2MaxRows
; i++)

122 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme2Ouçut
.
åade_öfo
[i].
is_ˇsh
;

123 
	gpTxnOuçut
->
	gåade_li°
[
i
] = 
Føme2Ouçut
.
åade_öfo
[i].
åade_id
;

125 
	gpTxnOuçut
->
	gnum_found
 = 
Føme2Ouçut
.
num_found
;

131 
TTødeLookupFøme3I≈ut
 
Føme3I≈ut
;

132 
TTødeLookupFøme3Ouçut
 
	gFøme3Ouçut
;

133 
mem£t
(&
Føme3I≈ut
, 0, ( Frame3Input ));

134 
mem£t
(&
Føme3Ouçut
, 0, ( Frame3Output ));

137 
	gFøme3I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

138 
°∫˝y
–
Føme3I≈ut
.
symbﬁ
, 
pTxnI≈ut
->symbol, ( Frame3Input.symbol ));

139 
	gFøme3I≈ut
.
	g°¨t_åade_dts
 = 
pTxnI≈ut
->
°¨t_åade_dts
;

140 
	gFøme3I≈ut
.
	gíd_åade_dts
 = 
pTxnI≈ut
->
íd_åade_dts
;

141 
	gFøme3I≈ut
.
	gmax_ac˘_id
 = 
pTxnI≈ut
->
max_ac˘_id
;

144 
	gm_db
->
DoTødeLookupFøme3
–&
Føme3I≈ut
, &
Føme3Ouçut
 );

147 i‡(
	gFøme3Ouçut
.
	gnum_found
 < 0 || Føme3Ouçut.num_found > 
	gFøme3I≈ut
.
	gmax_åades
)

149 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF3_ERROR1
);

151 i‡(
	gFøme3Ouçut
.
	gnum_found
 == 0)

153 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF3_WARN1
);

157 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 3;

158 
	gpTxnOuçut
->
	gnum_found
 = 
Føme3Ouçut
.
num_found
;

159 
	gi
=0; i < 
	gFøme3Ouçut
.
	gnum_found
 && i < 
	gTødeLookupFøme3MaxRows
; i++)

161 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme3Ouçut
.
åade_öfo
[i].
is_ˇsh
;

162 
	gpTxnOuçut
->
	gåade_li°
[
i
] = 
Føme3Ouçut
.
åade_öfo
[i].
åade_id
;

169 
TTødeLookupFøme4I≈ut
 
Føme4I≈ut
;

170 
TTødeLookupFøme4Ouçut
 
	gFøme4Ouçut
;

171 
mem£t
(&
Føme4I≈ut
, 0, ( Frame4Input ));

172 
mem£t
(&
Føme4Ouçut
, 0, ( Frame4Output ));

175 
	gFøme4I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

176 
	gFøme4I≈ut
.
	gåade_dts
 = 
pTxnI≈ut
->
°¨t_åade_dts
;

179 
	gm_db
->
DoTødeLookupFøme4
–&
Føme4I≈ut
, &
Føme4Ouçut
 );

184 i‡(
	gFøme4Ouçut
.
	gnum_åades_found
 < 0 || Frame4Output.num_trades_found > 1)

186 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF4_ERROR1
);

188 i‡(
	gFøme4Ouçut
.
	gnum_åades_found
 == 0)

190 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF4_WARN1
);

192 i‡(
	gFøme4Ouçut
.
	gnum_found
 < 1 || Føme4Ouçut.num_found > 
	gTødeLookupFøme4MaxRows
)

194 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TLF4_ERROR2
);

198 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 4;

199 
	gpTxnOuçut
->
	gnum_found
 = 
Føme4Ouçut
.
num_found
;

200 
	gpTxnOuçut
->
	gåade_li°
[0] = 
Føme4Ouçut
.
åade_id
;

206 
as£π
–
Ál£
 );

	@include/workload/tpce/egen/TxnHarnessTradeOrder.h

41 #i‚de‡
TXN_HARNESS_TRADE_ORDER_H


42 
	#TXN_HARNESS_TRADE_ORDER_H


	)

44 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCTødeOrdî


51 
CTødeOrdîDBI¡îÁ˚
* 
	gm_db
;

52 
CSídToM¨këI¡îÁ˚
* 
	gm_pSídToM¨kë
;

54 
	gpublic
:

55 
CTødeOrdî
(
CTødeOrdîDBI¡îÁ˚
 *
pDB
, 
CSídToM¨këI¡îÁ˚
 *
pSídToM¨kë
)

56 : 
m_db
(
pDB
),

57 
m_pSídToM¨kë
(
pSídToM¨kë
)

61 
DoTxn
–
PTødeOrdîTxnI≈ut
 
pTxnI≈ut
, 
PTødeOrdîTxnOuçut
 
pTxnOuçut
 )

64 
TTødeOrdîFøme1I≈ut
 
	gFøme1I≈ut
;

65 
TTødeOrdîFøme1Ouçut
 
	gFøme1Ouçut
;

66 
mem£t
(&
Føme1I≈ut
, 0, ( Frame1Input ));

67 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

69 
TTødeOrdîFøme2I≈ut
 
	gFøme2I≈ut
;

70 
TTødeOrdîFøme2Ouçut
 
	gFøme2Ouçut
;

71 
mem£t
(&
Føme2I≈ut
, 0, ( Frame2Input ));

72 
mem£t
(&
Føme2Ouçut
, 0, ( Frame2Output ));

74 
TTødeOrdîFøme3I≈ut
 
	gFøme3I≈ut
;

75 
TTødeOrdîFøme3Ouçut
 
	gFøme3Ouçut
;

76 
mem£t
(&
Føme3I≈ut
, 0, ( Frame3Input ));

77 
mem£t
(&
Føme3Ouçut
, 0, ( Frame3Output ));

79 
TTødeOrdîFøme4I≈ut
 
	gFøme4I≈ut
;

80 
TTødeOrdîFøme4Ouçut
 
	gFøme4Ouçut
;

81 
mem£t
(&
Føme4I≈ut
, 0, ( Frame4Input ));

82 
mem£t
(&
Føme4Ouçut
, 0, ( Frame4Output ));

84 
TTødeReque°
 
	gTødeReque°F‹MEE
;

86 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

93 
	gFøme1I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

96 
	gm_db
->
DoTødeOrdîFøme1
(&
Føme1I≈ut
, &
Føme1Ouçut
 );

99 i‡(
	gFøme1Ouçut
.
	gnum_found
 != 1)

101 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TOF1_ERROR1
);

108 i‡(
°rcmp
(
pTxnI≈ut
->
exec_l_«me
, 
Føme1Ouçut
.
cu°_l_«me
)

109 || 
°rcmp
(
pTxnI≈ut
->
exec_f_«me
, 
Føme1Ouçut
.
cu°_f_«me
)

110 || 
°rcmp
(
pTxnI≈ut
->
exec_èx_id
, 
Føme1Ouçut
.
èx_id
))

113 
	gFøme2Ouçut
.
	g≠_a˛
[0] = '\0';

114 
	gFøme2I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

115 
°∫˝y
(
Føme2I≈ut
.
exec_f_«me
, 
pTxnI≈ut
->exec_f_name, (Frame2Input.exec_f_name));

116 
°∫˝y
(
Føme2I≈ut
.
exec_l_«me
, 
pTxnI≈ut
->exec_l_name, (Frame2Input.exec_l_name));

117 
°∫˝y
(
Føme2I≈ut
.
exec_èx_id
, 
pTxnI≈ut
->exec_tax_id, (Frame2Input.exec_tax_id));

120 
	gm_db
->
DoTødeOrdîFøme2
(&
Føme2I≈ut
, &
Føme2Ouçut
);

123 i‡(
	gFøme2Ouçut
.
	g≠_a˛
[0] == '\0')

125 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TOF2_ERROR1
);

128 
	gm_db
->
DoTødeOrdîFøme5
();

138 
	gFøme3I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

139 
	gFøme3I≈ut
.
	gcu°_id
 = 
Føme1Ouçut
.
cu°_id
;

140 
	gFøme3I≈ut
.
	gcu°_tõr
 = 
Føme1Ouçut
.
cu°_tõr
;

141 
	gFøme3I≈ut
.
	gis_lifo
 = 
pTxnI≈ut
->
is_lifo
;

142 
°∫˝y
(
Føme3I≈ut
.
issue
, 
pTxnI≈ut
->issue, (Frame3Input.issue));

143 
°∫˝y
(
Føme3I≈ut
.
°_≥ndög_id
, 
pTxnI≈ut
->st_pending_id, (Frame3Input.st_pending_id));

144 
°∫˝y
(
Føme3I≈ut
.
°_submôãd_id
, 
pTxnI≈ut
->st_submitted_id, (Frame3Input.st_submitted_id));

145 
	gFøme3I≈ut
.
	gèx_°©us
 = 
Føme1Ouçut
.
èx_°©us
;

146 
	gFøme3I≈ut
.
	gåade_qty
 = 
pTxnI≈ut
->
åade_qty
;

147 
°∫˝y
(
Føme3I≈ut
.
åade_ty≥_id
, 
pTxnI≈ut
->trade_type_id, (Frame3Input.trade_type_id));

148 
	gFøme3I≈ut
.
	gty≥_is_m¨gö
 = 
pTxnI≈ut
->
ty≥_is_m¨gö
;

149 
°∫˝y
(
Føme3I≈ut
.
co_«me
, 
pTxnI≈ut
->co_name, (Frame3Input.co_name));

150 
	gFøme3I≈ut
.
	gªque°ed_¥i˚
 = 
pTxnI≈ut
->
ªque°ed_¥i˚
;

151 
°∫˝y
(
Føme3I≈ut
.
symbﬁ
, 
pTxnI≈ut
->symbol, (Frame3Input.symbol));

154 
	gm_db
->
DoTødeOrdîFøme3
(&
Føme3I≈ut
, &
Føme3Ouçut
);

157 i‡–
	gFøme3Ouçut
.
	g£Œ_vÆue
 > Føme3Ouçut.
	gbuy_vÆue


158 && ((
	gFøme3I≈ut
.
	gèx_°©us
 =1Ë|| (
Føme3I≈ut
.
èx_°©us
 == 2))

159 && 
Føme3Ouçut
.
èx_amou¡
 == 0.00)

161 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TOF3_ERROR1
);

163 i‡(
	gFøme3Ouçut
.
	gcomm_øã
 == 0.0000)

165 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TOF3_ERROR2
);

167 i‡(
	gFøme3Ouçut
.
	gch¨ge_amou¡
 == 0.00)

169 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TOF3_ERROR3
);

173 
	gpTxnOuçut
->
	gbuy_vÆue
 = 
Føme3Ouçut
.
buy_vÆue
;

174 
	gpTxnOuçut
->
	g£Œ_vÆue
 = 
Føme3Ouçut
.
£Œ_vÆue
;

175 
	gpTxnOuçut
->
	gèx_amou¡
 = 
Føme3Ouçut
.
èx_amou¡
;

182 
	gFøme4I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

183 
	gFøme4I≈ut
.
	gbrokî_id
 = 
Føme1Ouçut
.
brokî_id
;

184 
	gFøme4I≈ut
.
	gch¨ge_amou¡
 = 
Føme3Ouçut
.
ch¨ge_amou¡
;

185 
	gFøme4I≈ut
.
	gcomm_amou¡
 = 
Føme3Ouçut
.
comm_øã
 / 100

186 * 
pTxnI≈ut
->
åade_qty


187 * 
Føme3Ouçut
.
ªque°ed_¥i˚
;

189 
	gFøme4I≈ut
.
	gcomm_amou¡
 = ()(()(100.00 * 
Føme4I≈ut
.
comm_amou¡
 + 0.5)) / 100.00;

191 
¢¥ötf
(
Føme4I≈ut
.
exec_«me
, (Føme4I≈ut.exec_«me), "%†%s", 
pTxnI≈ut
->
exec_f_«me
,ÖTxnI≈ut->
exec_l_«me
);

192 
	gFøme4I≈ut
.
	gis_ˇsh
 = !
Føme3I≈ut
.
ty≥_is_m¨gö
;

193 
	gFøme4I≈ut
.
	gis_lifo
 = 
pTxnI≈ut
->
is_lifo
;

194 
	gFøme4I≈ut
.
	gªque°ed_¥i˚
 = 
Føme3Ouçut
.
ªque°ed_¥i˚
;

195 
°∫˝y
(
Føme4I≈ut
.
°©us_id
, 
Føme3Ouçut
.status_id, (Frame4Input.status_id));

196 
°∫˝y
(
Føme4I≈ut
.
symbﬁ
, 
Føme3Ouçut
.symbol, (Frame4Input.symbol));

197 
	gFøme4I≈ut
.
	gåade_qty
 = 
pTxnI≈ut
->
åade_qty
;

198 
°∫˝y
(
Føme4I≈ut
.
åade_ty≥_id
, 
pTxnI≈ut
->trade_type_id, (Frame4Input.trade_type_id));

199 
	gFøme4I≈ut
.
	gty≥_is_m¨kë
 = 
Føme3Ouçut
.
ty≥_is_m¨kë
;

202 
	gm_db
->
DoTødeOrdîFøme4
(&
Føme4I≈ut
, &
Føme4Ouçut
);

205 
	gpTxnOuçut
->
	gåade_id
 = 
Føme4Ouçut
.
åade_id
;

211 i‡(
	gpTxnI≈ut
->
	grﬁl_ô_back
)

214 
	gm_db
->
DoTødeOrdîFøme5
();

216 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
EXPECTED_ROLLBACK
);

221 
	gm_db
->
DoTødeOrdîFøme6
();

226 
	gTødeReque°F‹MEE
.
	g¥i˚_quŸe
 = 
Føme4I≈ut
.
ªque°ed_¥i˚
;

227 
°∫˝y
(
TødeReque°F‹MEE
.
symbﬁ
, 
Føme4I≈ut
.symbol, (TradeRequestForMEE.symbol));

228 
	gTødeReque°F‹MEE
.
	gåade_id
 = 
Føme4Ouçut
.
åade_id
;

229 
	gTødeReque°F‹MEE
.
	gåade_qty
 = 
Føme4I≈ut
.
åade_qty
;

230 
°∫˝y
–
TødeReque°F‹MEE
.
åade_ty≥_id
, 
pTxnI≈ut
->trade_type_id, ( TradeRequestForMEE.trade_type_id ));

232 if–
	gFøme4I≈ut
.
	gty≥_is_m¨kë
 )

234 
	gTødeReque°F‹MEE
.
	geA˘i⁄
 = 
eMEEPro˚ssOrdî
;

238 
	gTødeReque°F‹MEE
.
	geA˘i⁄
 = 
eMEESëLimôOrdîTriggî
;

241 
	gm_pSídToM¨kë
->
SídToM¨këFromH¨√ss
(
TødeReque°F‹MEE
);

	@include/workload/tpce/egen/TxnHarnessTradeResult.h

41 #i‚de‡
TXN_HARNESS_TRADE_RESULT_H


42 
	#TXN_HARNESS_TRADE_RESULT_H


	)

44 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCTødeResu…


51 
CTødeResu…DBI¡îÁ˚
* 
	gm_db
;

53 
	gpublic
:

54 
CTødeResu…
(
CTødeResu…DBI¡îÁ˚
 *
pDB
)

55 : 
m_db
(
pDB
)

59 
DoTxn
–
PTødeResu…TxnI≈ut
 
pTxnI≈ut
, 
PTødeResu…TxnOuçut
 
pTxnOuçut
 )

62 
TTødeResu…Føme1I≈ut
 
	gFøme1I≈ut
;

63 
TTødeResu…Føme1Ouçut
 
	gFøme1Ouçut
;

64 
mem£t
(&
Føme1I≈ut
, 0, ( Frame1Input ));

65 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

67 
TTødeResu…Føme2I≈ut
 
	gFøme2I≈ut
;

68 
TTødeResu…Føme2Ouçut
 
	gFøme2Ouçut
;

69 
mem£t
(&
Føme2I≈ut
, 0, ( Frame2Input ));

70 
mem£t
(&
Føme2Ouçut
, 0, ( Frame2Output ));

72 
TTødeResu…Føme3I≈ut
 
	gFøme3I≈ut
;

73 
TTødeResu…Føme3Ouçut
 
	gFøme3Ouçut
;

74 
mem£t
(&
Føme3I≈ut
, 0, ( Frame3Input ));

75 
mem£t
(&
Føme3Ouçut
, 0, ( Frame3Output ));

77 
TTødeResu…Føme4I≈ut
 
	gFøme4I≈ut
;

78 
TTødeResu…Føme4Ouçut
 
	gFøme4Ouçut
;

79 
mem£t
(&
Føme4I≈ut
, 0, ( Frame4Input ));

80 
mem£t
(&
Føme4Ouçut
, 0, ( Frame4Output ));

82 
TTødeResu…Føme5I≈ut
 
	gFøme5I≈ut
;

83 
mem£t
(&
Føme5I≈ut
, 0, ( Frame5Input ));

85 
TTødeResu…Føme6I≈ut
 
	gFøme6I≈ut
;

86 
TTødeResu…Føme6Ouçut
 
	gFøme6Ouçut
;

87 
mem£t
(&
Føme6I≈ut
, 0, ( Frame6Input ));

88 
mem£t
(&
Føme6Ouçut
, 0, ( Frame6Output ));

90 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

97 
	gFøme1I≈ut
.
	gåade_id
 = 
pTxnI≈ut
->
åade_id
;

100 
	gm_db
->
DoTødeResu…Føme1
(&
Føme1I≈ut
, &
Føme1Ouçut
);

103 i‡(
	gFøme1Ouçut
.
	gnum_found
 != 1)

105 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TRF1_ERROR1
);

113 
	gFøme2I≈ut
.
	gac˘_id
 = 
Føme1Ouçut
.
ac˘_id
;

114 
	gFøme2I≈ut
.
	ghs_qty
 = 
Føme1Ouçut
.
hs_qty
;

115 
	gFøme2I≈ut
.
	gis_lifo
 = 
Føme1Ouçut
.
is_lifo
;

116 
°∫˝y
(
Føme2I≈ut
.
symbﬁ
, 
Føme1Ouçut
.symbol, (Frame2Input.symbol));

117 
	gFøme2I≈ut
.
	gåade_id
 = 
pTxnI≈ut
->
åade_id
;

118 
	gFøme2I≈ut
.
	gåade_¥i˚
 = 
pTxnI≈ut
->
åade_¥i˚
;

119 
	gFøme2I≈ut
.
	gåade_qty
 = 
Føme1Ouçut
.
åade_qty
;

120 
	gFøme2I≈ut
.
	gty≥_is_£Œ
 = 
Føme1Ouçut
.
ty≥_is_£Œ
;

123 
	gm_db
->
DoTødeResu…Føme2
(&
Føme2I≈ut
, &
Føme2Ouçut
);

129 
	gFøme3Ouçut
.
	gèx_amou¡
 = 0.0;

130 i‡(–
	gFøme2Ouçut
.
	gèx_°©us
 =1 || 
Føme2Ouçut
.
èx_°©us
 == 2 ) &&

131 –
Føme2Ouçut
.
£Œ_vÆue
 > Føme2Ouçut.
buy_vÆue
 ))

134 
Føme3I≈ut
.
buy_vÆue
 = 
Føme2Ouçut
.buy_value;

135 
	gFøme3I≈ut
.
	gcu°_id
 = 
Føme2Ouçut
.
cu°_id
;

136 
	gFøme3I≈ut
.
	g£Œ_vÆue
 = 
Føme2Ouçut
.
£Œ_vÆue
;

137 
	gFøme3I≈ut
.
	gåade_id
 = 
pTxnI≈ut
->
åade_id
;

140 
	gm_db
->
DoTødeResu…Føme3
(&
Føme3I≈ut
, &
Føme3Ouçut
);

143 i‡(
	gFøme3Ouçut
.
	gèx_amou¡
 < 0.00)

145 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TRF3_ERROR1
);

154 
	gFøme4I≈ut
.
	gcu°_id
 = 
Føme2Ouçut
.
cu°_id
;

155 
°∫˝y
(
Føme4I≈ut
.
symbﬁ
, 
Føme1Ouçut
.symbol, (Frame4Input.symbol));

156 
	gFøme4I≈ut
.
	gåade_qty
 = 
Føme1Ouçut
.
åade_qty
;

157 
°∫˝y
(
Føme4I≈ut
.
ty≥_id
, 
Føme1Ouçut
.type_id, (Frame4Input.type_id));

160 
	gm_db
->
DoTødeResu…Føme4
(&
Føme4I≈ut
, &
Føme4Ouçut
);

163 i‡(
	gFøme4Ouçut
.
	gcomm_øã
 <= 0.0000)

165 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TRF4_ERROR1
);

173 
	gFøme5I≈ut
.
	gbrokî_id
 = 
Føme2Ouçut
.
brokî_id
;

174 
	gFøme5I≈ut
.
	gcomm_amou¡
 = ( 
Føme4Ouçut
.
comm_øã
 / 100.00 ) * ( 
Føme1Ouçut
.
åade_qty
 * 
pTxnI≈ut
->
åade_¥i˚
 );

176 
	gFøme5I≈ut
.
	gcomm_amou¡
 = ()(()(100.00 * 
Føme5I≈ut
.
comm_amou¡
 + 0.5)) / 100.00;

178 
°∫˝y
–
Føme5I≈ut
.
°_com∂ëed_id
, "CMPT", ( Frame5Input.st_completed_id ));

179 
	gFøme5I≈ut
.
	gåade_dts
 = 
Føme2Ouçut
.
åade_dts
;

180 
	gFøme5I≈ut
.
	gåade_id
 = 
pTxnI≈ut
->
åade_id
;

181 
	gFøme5I≈ut
.
	gåade_¥i˚
 = 
pTxnI≈ut
->
åade_¥i˚
;

184 
	gm_db
->
DoTødeResu…Føme5
(&
Føme5I≈ut
);

191 
CD©eTime
 
due_d©e_time
–&
Føme2Ouçut
.
åade_dts
 );

192 
	gdue_d©e_time
.
Add
(2, 0);

193 
	gdue_d©e_time
.
SëHMS
(0,0,0,0);

195 i‡(
	gFøme1Ouçut
.
	gty≥_is_£Œ
)

197 
	gFøme6I≈ut
.
	g£_amou¡
 = 
Føme1Ouçut
.
åade_qty
 * 
pTxnI≈ut
->
åade_¥i˚


198 - 
Føme1Ouçut
.
ch¨ge


199 - 
Føme5I≈ut
.
comm_amou¡
;

203 
	gFøme6I≈ut
.
	g£_amou¡
 = -1 * ( 
Føme1Ouçut
.
åade_qty
 * 
pTxnI≈ut
->
åade_¥i˚


204 + 
Føme1Ouçut
.
ch¨ge


205 + 
Føme5I≈ut
.
comm_amou¡
);

209 i‡(
	gFøme2Ouçut
.
	gèx_°©us
 == 1)

211 
Føme6I≈ut
.
£_amou¡
 -
Føme3Ouçut
.
èx_amou¡
;

215 
	gFøme6I≈ut
.
	gac˘_id
 = 
Føme1Ouçut
.
ac˘_id
;

216 
	gdue_d©e_time
.
GëTimeSèmp
(&
Føme6I≈ut
.
due_d©e
);

217 
°∫˝y
(
Føme6I≈ut
.
s_«me
, 
Føme4Ouçut
.s_name, (Frame6Input.s_name));

218 
	gFøme6I≈ut
.
	gåade_dts
 = 
Føme2Ouçut
.
åade_dts
;

219 
	gFøme6I≈ut
.
	gåade_id
 = 
pTxnI≈ut
->
åade_id
;

220 
	gFøme6I≈ut
.
	gåade_is_ˇsh
 = 
Føme1Ouçut
.
åade_is_ˇsh
;

221 
	gFøme6I≈ut
.
	gåade_qty
 = 
Føme1Ouçut
.
åade_qty
;

222 
°∫˝y
(
Føme6I≈ut
.
ty≥_«me
, 
Føme1Ouçut
.type_name, (Frame6Input.type_name));

225 
	gm_db
->
DoTødeResu…Føme6
(&
Føme6I≈ut
, &
Føme6Ouçut
);

228 
	gpTxnOuçut
->
	gac˘_id
 = 
Føme1Ouçut
.
ac˘_id
;

229 
	gpTxnOuçut
->
	gac˘_bÆ
 = 
Føme6Ouçut
.
ac˘_bÆ
;

230 
	gpTxnOuçut
->
	glﬂd_unô
 = (
INT32
)((
Føme2Ouçut
.
cu°_id
 - 
iTIdítShi·
 - 1Ë/ 
iDeÁu…LﬂdUnôSize
) + 1;

	@include/workload/tpce/egen/TxnHarnessTradeStatus.h

37 #i‚de‡
TXN_HARNESS_TRADE_STATUS_H


38 
	#TXN_HARNESS_TRADE_STATUS_H


	)

40 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

42 
«me•a˚
 
	gTPCE


45 ˛as†
	cCTødeSètus


47 
CTødeSètusDBI¡îÁ˚
* 
	gm_db
;

49 
	gpublic
:

50 
CTødeSètus
(
CTødeSètusDBI¡îÁ˚
 *
pDB
)

51 : 
m_db
(
pDB
)

55 
DoTxn
–
PTødeSètusTxnI≈ut
 
pTxnI≈ut
, 
PTødeSètusTxnOuçut
 
pTxnOuçut
)

58 
TTødeSètusFøme1Ouçut
 
	gFøme1Ouçut
;

59 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

61 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

64 
	gm_db
->
DoTødeSètusFøme1
(
pTxnI≈ut
, &
Føme1Ouçut
);

67 i‡(
	gFøme1Ouçut
.
	gnum_found
 !
max_åade_°©us_Àn
)

69 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TSF1_ERROR1
);

73 
	gi
=0; i < 
	gFøme1Ouçut
.
	gnum_found
 && i < 
	gmax_åade_°©us_Àn
; i++)

75 
°∫˝y
–
pTxnOuçut
->
°©us_«me
[
i
], 
Føme1Ouçut
.status_name[i], (ÖTxnOutput->status_name[i] ));

76 
	gpTxnOuçut
->
	gåade_id
[
i
] = 
Føme1Ouçut
.
åade_id
[i];

	@include/workload/tpce/egen/TxnHarnessTradeUpdate.h

41 #i‚de‡
TXN_HARNESS_TRADE_UPDATE_H


42 
	#TXN_HARNESS_TRADE_UPDATE_H


	)

44 
	~"TxnH¨√ssDBI¡îÁ˚.h
"

46 
«me•a˚
 
	gTPCE


49 ˛as†
	cCTødeUpd©e


51 
CTødeUpd©eDBI¡îÁ˚
* 
	gm_db
;

53 
	gpublic
:

54 
CTødeUpd©e
(
CTødeUpd©eDBI¡îÁ˚
 *
pDB
)

55 : 
m_db
(
pDB
)

59 
DoTxn
–
PTødeUpd©eTxnI≈ut
 
pTxnI≈ut
, 
PTødeUpd©eTxnOuçut
 
pTxnOuçut
 )

61 
	gTXN_HARNESS_SET_STATUS_SUCCESS
;

63  
	gpTxnI≈ut
->
	g‰ame_to_execuã
 )

67 
TTødeUpd©eFøme1I≈ut
 
Føme1I≈ut
;

68 
TTødeUpd©eFøme1Ouçut
 
	gFøme1Ouçut
;

69 
mem£t
(&
Føme1I≈ut
, 0, ( Frame1Input ));

70 
mem£t
(&
Føme1Ouçut
, 0, ( Frame1Output ));

73 
	gFøme1I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

74 
	gFøme1I≈ut
.
	gmax_upd©es
 = 
pTxnI≈ut
->
max_upd©es
;

75 
mem˝y
–
Føme1I≈ut
.
åade_id
, 
pTxnI≈ut
->trade_id, ( Frame1Input.trade_id ));

78 
	gm_db
->
DoTødeUpd©eFøme1
–&
Føme1I≈ut
, &
Føme1Ouçut
 );

81 i‡–
	gFøme1Ouçut
.
	gnum_found
 !
pTxnI≈ut
->
max_åades


82 || 
Føme1Ouçut
.
num_upd©ed
 !
pTxnI≈ut
->
max_upd©es
)

84 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TUF1_ERROR1
);

88 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 1;

89 
	gi
=0; i < 
	gFøme1Ouçut
.
	gnum_found
 && i < 
	gTødeUpd©eFøme1MaxRows
; i++)

91 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme1Ouçut
.
åade_öfo
[i].
is_ˇsh
;

92 
	gpTxnOuçut
->
	gis_m¨kë
[
i
] = 
Føme1Ouçut
.
åade_öfo
[i].
is_m¨kë
;

94 
	gpTxnOuçut
->
	gnum_found
 = 
Føme1Ouçut
.
num_found
;

95 
	gpTxnOuçut
->
	gnum_upd©ed
 = 
Føme1Ouçut
.
num_upd©ed
;

101 
TTødeUpd©eFøme2I≈ut
 
Føme2I≈ut
;

102 
TTødeUpd©eFøme2Ouçut
 
	gFøme2Ouçut
;

103 
mem£t
(&
Føme2I≈ut
, 0, ( Frame2Input ));

104 
mem£t
(&
Føme2Ouçut
, 0, ( Frame2Output ));

107 
	gFøme2I≈ut
.
	gac˘_id
 = 
pTxnI≈ut
->
ac˘_id
;

108 
	gFøme2I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

109 
	gFøme2I≈ut
.
	gmax_upd©es
 = 
pTxnI≈ut
->
max_upd©es
;

110 
	gFøme2I≈ut
.
	g°¨t_åade_dts
 = 
pTxnI≈ut
->
°¨t_åade_dts
;

111 
	gFøme2I≈ut
.
	gíd_åade_dts
 = 
pTxnI≈ut
->
íd_åade_dts
;

114 
	gm_db
->
DoTødeUpd©eFøme2
–&
Føme2I≈ut
, &
Føme2Ouçut
 );

127 i‡–
	gFøme2Ouçut
.
	gnum_upd©ed
 !
Føme2Ouçut
.
num_found


128 || 
Føme2Ouçut
.
num_found
 < 0 || Føme2Ouçut.num_found > 
Føme2I≈ut
.
max_åades
)

130 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TUF2_ERROR1
);

132 i‡(
	gFøme2Ouçut
.
	gnum_upd©ed
 == 0)

134 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TUF2_WARN1
);

138 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 2;

139 
	gi
=0; i < 
	gFøme2Ouçut
.
	gnum_found
 && i < 
	gTødeUpd©eFøme2MaxRows
; i++)

141 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme2Ouçut
.
åade_öfo
[i].
is_ˇsh
;

142 
	gpTxnOuçut
->
	gåade_li°
[
i
] = 
Føme2Ouçut
.
åade_öfo
[i].
åade_id
;

144 
	gpTxnOuçut
->
	gnum_found
 = 
Føme2Ouçut
.
num_found
;

145 
	gpTxnOuçut
->
	gnum_upd©ed
 = 
Føme2Ouçut
.
num_upd©ed
;

150 
TTødeUpd©eFøme3I≈ut
 
Føme3I≈ut
;

151 
TTødeUpd©eFøme3Ouçut
 
	gFøme3Ouçut
;

152 
mem£t
(&
Føme3I≈ut
, 0, ( Frame3Input ));

153 
mem£t
(&
Føme3Ouçut
, 0, ( Frame3Output ));

156 
	gFøme3I≈ut
.
	gmax_åades
 = 
pTxnI≈ut
->
max_åades
;

157 
	gFøme3I≈ut
.
	gmax_upd©es
 = 
pTxnI≈ut
->
max_upd©es
;

158 
°∫˝y
–
Føme3I≈ut
.
symbﬁ
, 
pTxnI≈ut
->symbol, ( Frame3Input.symbol ));

159 
	gFøme3I≈ut
.
	g°¨t_åade_dts
 = 
pTxnI≈ut
->
°¨t_åade_dts
;

160 
	gFøme3I≈ut
.
	gíd_åade_dts
 = 
pTxnI≈ut
->
íd_åade_dts
;

161 
	gFøme3I≈ut
.
	gmax_ac˘_id
 = 
pTxnI≈ut
->
max_ac˘_id
;

164 
	gm_db
->
DoTødeUpd©eFøme3
–&
Føme3I≈ut
, &
Føme3Ouçut
 );

178 i‡((
	gFøme3Ouçut
.
	gnum_found
 < 0 || Føme3Ouçut.num_found > 
	gFøme3I≈ut
.
	gmax_åades
) ||

179 
	gFøme3Ouçut
.
	gnum_upd©ed
 > Føme3Ouçut.
	gnum_found
)

181 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TUF3_ERROR1
);

183 i‡(
	gFøme3Ouçut
.
	gnum_upd©ed
 == 0)

185 
TXN_HARNESS_PROPAGATE_STATUS
(
CBa£TxnEº
::
TUF3_WARN1
);

189 
	gpTxnOuçut
->
	g‰ame_execuãd
 = 3;

190 
	gpTxnOuçut
->
	gnum_found
 = 
Føme3Ouçut
.
num_found
;

191 
	gpTxnOuçut
->
	gnum_upd©ed
 = 
Føme3Ouçut
.
num_upd©ed
;

192 
	gi
=0; i < 
	gFøme3Ouçut
.
	gnum_found
 && i < 
	gTødeUpd©eFøme3MaxRows
; i++)

194 
	gpTxnOuçut
->
	gis_ˇsh
[
i
] = 
Føme3Ouçut
.
åade_öfo
[i].
is_ˇsh
;

195 
	gpTxnOuçut
->
	gåade_li°
[
i
] = 
Føme3Ouçut
.
åade_öfo
[i].
åade_id
;

202 
as£π
–
Ál£
 );

	@include/workload/tpce/egen/WatchListsAndItemsTable.h

40 #i‚de‡
WATCH_LIST_AND_ITEMS_TABLE_H


41 
	#WATCH_LIST_AND_ITEMS_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

44 
	~"Cu°omîTabÀ.h
"

45 
	~"SecurôyFûe.h
"

47 
«me•a˚
 
	gTPCE


51 c⁄° 
UINT
 
	giMöSecIdx
 = 0;

54 c⁄° 
UINT
 
	giMöIãmsInWL
 = 50;

57 c⁄° 
UINT
 
	giMaxIãmsInWL
 = 150;

60 c⁄° 
UINT
 
	giPî˚¡W©chLi°
 = 100;

63 c⁄° 
UINT
 
	giW©chLi°IdPrime
 = 631;

64 c⁄° 
UINT
 
	giW©chLi°IdOff£t
 = 97;

68 c⁄° 
UINT
 
	giRNGSkùO√RowW©chLi°AndW©chIãm
 = 15;

71 
	sWATCH_LIST_AND_ITEM_ROW


73 
WATCH_LIST_ROW
 
	gm_w©ch_li°
;

74 
WATCH_ITEM_ROW
 
	gm_w©ch_ôems
[
iMaxIãmsInWL
+1];

75 } *
	tPWATCH_LIST_AND_ITEM_ROW
;

77 
	g£t
<
	tTIdít
> 
	tI¡Së
;

79 
˛ass
 
	gCW©chLi°sAndIãmsTabÀ
 : 
public
 
TabÀTem∂©e
<
WATCH_LIST_AND_ITEM_ROW
>

81 
UINT
 
m_iRowsToGíF‹WL
;

82 
UINT
 
	gm_iRowsGíî©edF‹WL
;

83 
CCu°omîTabÀ
 
	gm_cu°
;

84 
I¡Së
 
	gm_£t
;

85 
UINT
 
	gm_iWICou¡
;

86 
TIdít
 
	gm_iMöSecIdx
;

87 
TIdít
 
	gm_iMaxSecIdx
;

88 
CSecurôyFûe
* 
	gm_SecurôyFûe
;

89 
boﬁ
 
	gm_bInôNextLﬂdUnô
;

94 
Gíî©eNextWL_ID
()

96 
TIdít
 
	giCu°omîIdF‹CÆc
 = 
m_cu°
.
GëCuºítC_ID
(Ë- 
iDeÁu…SèπFromCu°omî
;

98 
	gm_row
.
	gm_w©ch_li°
.
	gWL_ID
 =

99 (
iCu°omîIdF‹CÆc
 / 
iDeÁu…LﬂdUnôSize
) * iDefaultLoadUnitSize +

100 (
iCu°omîIdF‹CÆc
 * 
iW©chLi°IdPrime
 + 
iW©chLi°IdOff£t
)

101 % 
iDeÁu…LﬂdUnôSize
 + 
iDeÁu…SèπFromCu°omî
;

107 
InôNextLﬂdUnô
()

109 
	gm_∫d
.
SëSìd
(
m_∫d
.
RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

110 (
RNGSEED
)
m_cu°
.
GëCuºítC_ID
()

111 * 
iRNGSkùO√RowW©chLi°AndW©chIãm
));

113 
CÀ¨Rec‹d
();

116 
	gpublic
:

117 
CW©chLi°sAndIãmsTabÀ
(
CI≈utFûes
 
öputFûes
,

118 
TIdít
 
iCu°omîCou¡
,

119 
TIdít
 
iSèπFromCu°omî
)

120 : 
TabÀTem∂©e
<
WATCH_LIST_AND_ITEM_ROW
>()

121 , 
m_iRowsToGíF‹WL
(0)

122 , 
m_iRowsGíî©edF‹WL
(0)

123 , 
m_cu°
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

124 , 
m_iWICou¡
(0)

125 , 
m_iMöSecIdx
(
iMöSecIdx
)

126 , 
m_SecurôyFûe
(
öputFûes
.
Securôõs
)

127 , 
m_bInôNextLﬂdUnô
(
Ál£
)

129 
	gm_iMaxSecIdx
 = 
m_SecurôyFûe
->
GëC⁄figuªdSecurôyCou¡
()-1;

135 i‡(
	gm_cu°
.
GëCuºítC_ID
(Ë% 
	giDeÁu…LﬂdUnôSize
 == 0)

137 
m_bInôNextLﬂdUnô
 = 
åue
;

140 
	gm_cu°
.
Gíî©eNextC_ID
();

142 } !
	gm_∫d
.
RndPî˚¡
(
iPî˚¡W©chLi°
Ë&& 
	gm_cu°
.
M‹eRec‹ds
());

149 
boﬁ
 
Gíî©eNextRec‹d
()

151 
TIdít
 
	giCu°omîId
;

152 
boﬁ
 
	gbRë
 = 
Ál£
;

154 i‡(
	gm_bInôNextLﬂdUnô
)

156 
InôNextLﬂdUnô
();

158 
	gm_bInôNextLﬂdUnô
 = 
Ál£
;

161 ++
	gm_iLa°RowNumbî
;

163 
	giCu°omîId
 = 
m_cu°
.
GëCuºítC_ID
();

165 
Gíî©eNextWL_ID
();

168 
	gm_row
.
	gm_w©ch_li°
.
	gWL_C_ID
 = 
iCu°omîId
;

171 
	gm_iWICou¡
 = (
UINT
Ë
m_∫d
.
RndI¡R™ge
(
iMöIãmsInWL
,

172 
iMaxIãmsInWL
);

173 
	gm_£t
.
˛ór
(); m_£t.
size
(Ë< 
	gm_iWICou¡
; )

176 
TIdít
 
	giSecurôyIndex
 = 
m_∫d
.
RndI¡64R™ge
(
m_iMöSecIdx
, 
m_iMaxSecIdx
);

177 
	gm_£t
.
ö£π
(
iSecurôyIndex
);

180 
	gi
;

181 
	gI¡Së
::
ôî©‹
 
pos
;

183 
	gi
=0, 
	gpos
=
m_£t
.
begö
();Öos!=m_£t.
íd
(); ++i, ++pos)

185 
	gm_row
.
	gm_w©ch_ôems
[
i
].
	gWI_WL_ID
 = 
m_row
.
m_w©ch_li°
.
WL_ID
;

187 
	gm_SecurôyFûe
->
Cª©eSymbﬁ
–*
pos
, 
m_row
.
m_w©ch_ôems
[
i
].
WI_S_SYMB
, 
°©ic_ˇ°
<>((m_row.m_watch_items[i].WI_S_SYMB)));

190 
	gbRë
 = 
Ál£
;

193 !
	gbRë
 && 
	gm_cu°
.
M‹eRec‹ds
())

195 i‡(
	gm_cu°
.
GëCuºítC_ID
(Ë% 
	giDeÁu…LﬂdUnôSize
 == 0)

197 
m_bInôNextLﬂdUnô
 = 
åue
;

200 
	gm_cu°
.
Gíî©eNextC_ID
();

202 
	gbRë
 = 
m_∫d
.
RndPî˚¡
(
iPî˚¡W©chLi°
);

207 i‡(
	gbRë
)

209 
	gm_bM‹eRec‹ds
 = 
åue
;

213 
	gm_bM‹eRec‹ds
 = 
Ál£
;

217  (
M‹eRec‹ds
());

220 
PWATCH_LIST_ROW
 
GëWLRow
(Ë{ &
	gm_row
.
	gm_w©ch_li°
;}

221 
PWATCH_ITEM_ROW
 
GëWIRow
(
UINT
 
i
)

223 i‡(
	gi
<
	gm_iWICou¡
)

224 (&
	gm_row
.
	gm_w©ch_ôems
[
i
]);

226 (
	gNULL
);

228 
UINT
 
GëWICou¡
(Ë{ 
	gm_iWICou¡
;}

	@include/workload/tpce/egen/Wheel.h

42 #i‚de‡
WHEEL_H


43 
	#WHEEL_H


	)

46 
	~"EGíSènd¨dTy≥s.h
"

48 
«me•a˚
 
	gTPCE


53 c⁄° 
INT32
 
	gMaxWhìlCy˛es
 = 999999999;

55 
	sTWhìlC⁄fig


57 
INT32
 
	gWhìlSize
;

58 
INT32
 
	gWhìlResﬁuti⁄
;

60 
TWhìlC⁄fig
–
INT32
 
Size
, INT32 
Resﬁuti⁄
 )

61 : 
WhìlSize
–
Size
 )

62 , 
WhìlResﬁuti⁄
–
Resﬁuti⁄
 )

65 } *
	tPWhìlC⁄fig
;

	@include/workload/tpce/egen/WheelTime.h

42 #i‚de‡
WHEEL_TIME_H


43 
	#WHEEL_TIME_H


	)

45 
	~"EGíUtûôõs_°dafx.h
"

46 
	~"Whìl.h
"

48 
«me•a˚
 
	gTPCE


51 ˛as†
	cCWhìlTime


54 
	g¥iv©e
:

55 
PWhìlC⁄fig
 
m_pWhìlC⁄fig
;

56 
INT32
 
	gm_Cy˛es
;

57 
INT32
 
	gm_Index
;

59 
	gpublic
:

60 
CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
 );

61 
CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
, 
INT32
 
cy˛es
, INT32 
ödex
 );

62 
CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
, 
CD©eTime
& 
Ba£
, CD©eTime& 
Now
, 
INT32
 
Off£t
 );

63 ~
CWhìlTime
( );

65 
ölöe
 
INT32
 
Cy˛es
–Ë{  
	gm_Cy˛es
; };

66 
ölöe
 
INT32
 
Index
–Ë{  
	gm_Index
; };

68 
Add
–
INT32
 
I¡îvÆ
 );

70 
INT32
 
Off£t
–c⁄° 
CWhìlTime
& 
Time
 );

72 
Së
–
INT32
 
cy˛es
, INT32 
ödex
 );

73 
Së
–
CD©eTime
& 
Ba£
, CD©eTime& 
Now
 );

74 
Së
–
CD©eTime
* 
pBa£
, CD©eTime* 
pNow
 );

76 
	gCWhìlTime
& 
	g›î©‹
 = (c⁄° 
CWhìlTime
& 
Time
);

77 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gCWhìlTime
& 
	gTime
);

78 
	gCWhìlTime
& 
	g›î©‹
 +–c⁄° 
INT32
& 
I¡îvÆ
 );

79 
CWhìlTime
 
	g›î©‹
 ++ ( 
	gINT32
 );

	@include/workload/tpce/egen/ZipCodeTable.h

40 #i‚de‡
ZIP_CODE_TABLE_H


41 
	#ZIP_CODE_TABLE_H


	)

43 
	~"EGíTabÀs_comm⁄.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCZùCodeTabÀ
 : 
public
 
TabÀTem∂©e
<
ZIP_CODE_ROW
>

50 
¥iv©e
:

51 
TZùCodeFûe
* 
m_ZùCode
;

52 
TZùCodeI≈utRow
* 
	gm_NextRow
;

53 
UINT32
 
	gm_NextUniqueRec‹dID
;

55 
	gpublic
:

56 
CZùCodeTabÀ
–
CI≈utFûes
 
öputFûes
 )

57 : 
TabÀTem∂©e
<
ZIP_CODE_ROW
>()

58 , 
m_ZùCode
–
öputFûes
.
ZùCode
 )

59 , 
m_NextUniqueRec‹dID
( 0 )

68 
boﬁ
 
Gíî©eNextRec‹d
()

70 if–
	gm_NextUniqueRec‹dID
 < 
	gm_ZùCode
->
Rec‹dCou¡
( ))

72 
°∫˝y
–
m_row
.
ZC_CODE
, (
m_ZùCode
->
GëRec‹dByPassKey
–
m_NextUniqueRec‹dID
 ))->ZC_CODE, ( m_row.ZC_CODE ) );

73 
°∫˝y
–
m_row
.
ZC_TOWN
, (
m_ZùCode
->
GëRec‹dByPassKey
–
m_NextUniqueRec‹dID
 ))->ZC_TOWN, ( m_row.ZC_TOWN ) );

74 
°∫˝y
–
m_row
.
ZC_DIV
, (
m_ZùCode
->
GëRec‹dByPassKey
–
m_NextUniqueRec‹dID
 ))->ZC_DIV, ( m_row.ZC_DIV ) );

75 
	gm_NextUniqueRec‹dID
++;

76 –
	gåue
 );

80  ( 
	gÁl£
 );

	@include/workload/tpce/egen/bucketsimulator.h

37 #i‚de‡
BUCKETSIM_H_INCLUDED


38 
	#BUCKETSIM_H_INCLUDED


	)

40 
	~"EGíTabÀs_°dafx.h
"

41 
	~"Cu°omîSñe˘i⁄.h
"

43 
	~"¥ogªssmëî.h
"

45 
«me•a˚
 
	gTPCE


48 
˛ass
 
	gCR™dom
;

50 ˛as†
	cBuckëProgªss
 : 
public
 
ProgªssMëî


52 
¥iv©e
:

53 
ac˚±abÀ_°ddev_
;

54 
	gmax_°ddev_
;

56 
	gpublic
:

57 
BuckëProgªss
(
ac˚±abÀ_°ddev
, 
tŸÆ
, 
vîbosôy
 = 0, 
°d
::
o°ªam
* 
ouçut
=&°d::
cout
);

58 
vútuÆ
 
di•œy_mesßge
(
°d
::
o°ªam
& 
out
) const;

59 
boﬁ
 
ªp‹t
(
°ddev
);

60 
max_°ddev
();

67 ˛as†
	cBuckëSimuœt‹
 {

68 
	g¥iv©e
:

69 
CR™dom
 
m_∫d
;

70 
INT64
* 
	gm_buckës
;

71 
TIdít
 
	gm_cu°cou¡
;

72 
	gm_ôî°¨t
;

73 
	gm_ôîcou¡
;

74 
	gTPCE
::
RNGSEED
 
m_ba££ed
;

75 
TTøde
 
	gm_sim‹dîs
;

76 
	gm_maxbuckë
;

77 
	gBuckëProgªss
& 
	gm_¥ogªss
;

79 c⁄° 
UINT
 
	gRND_STEP_PER_ORDER
 = 1;

81 
	gpublic
:

86 
BuckëSimuœt‹
(

87 
ôî°¨t
,

88 
ôîcou¡
,

89 
TIdít
 
iCu°omîCou¡
,

90 
TTøde
 
m_sim‹dîs
,

91 
TPCE
::
RNGSEED
 
ba£_£ed
,

92 
BuckëProgªss
& 
¥og
);

93 ~
BuckëSimuœt‹
();

95 
ˇlc_°ddev
();

99 
simuœã_⁄îun
(
INT64
 
ôî©i⁄s
);

100 
simuœã
();

102 
run
(* 
thªad
);

	@include/workload/tpce/egen/error.h

37 #i‚de‡
ERROR_H


38 
	#ERROR_H


	)

40 
	~<°rög
>

42 
«me•a˚
 
	gTPCE


45 
	#ERR_TYPE_LOGIC
 -1

46 
	#ERR_SUCCESS
 0

47 
	#ERR_TYPE_OS
 11

48 
	#ERR_TYPE_MEMORY
 12

49 
	#ERR_TYPE_FIXED_MAP
 27

50 
	#ERR_TYPE_FIXED_ARRAY
 28

51 
	#ERR_TYPE_CHECK
 29

52 

	)

53 
	#ERR_INS_MEMORY
 "Insufficõ¡ Mem‹yÅÿc⁄töue."

	)

54 
	#ERR_UNKNOWN
 "Unknow¿îr‹."

	)

55 
	#ERR_MSG_BUF_SIZE
 512

	)

56 
	#INV_ERROR_CODE
 -1

	)

58 ˛as†
	cCBa£Eº
 : 
public
 
°d
::
ex˚±i⁄


60 
¥Ÿe˘ed
:

61 
°d
::
°rög
 
m_loˇti⁄
;

62 
	gm_idMsg
;

64 
	gpublic
:

65 
CBa£Eº
()

66 : 
m_loˇti⁄
()

67 , 
m_idMsg
(
INV_ERROR_CODE
)

71 
CBa£Eº
(c⁄° * 
szLoc
)

72 : 
m_loˇti⁄
(
szLoc
)

73 , 
m_idMsg
(
INV_ERROR_CODE
)

77 
CBa£Eº
(
idMsg
)

78 : 
m_loˇti⁄
()

79 , 
m_idMsg
(
idMsg
)

83 
CBa£Eº
(
idMsg
, c⁄° * 
szLoc
)

84 : 
m_loˇti⁄
(
szLoc
)

85 , 
m_idMsg
(
idMsg
)

89 ~
CBa£Eº
(Ë
throw
()

93 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
() {

94  
Eº‹Text
();

97 
vútuÆ
 
Eº‹Num
(Ë{  
	gm_idMsg
; }

98 
vútuÆ
 
Eº‹Ty≥
() = 0;

100 
vútuÆ
 c⁄° *
Eº‹Text
() const = 0;

101 
vútuÆ
 c⁄° *
Eº‹Loc
(Ë{  
	gm_loˇti⁄
.
c_°r
(); }

104 ˛as†
	cCMem‹yEº
 : 
public
 
CBa£Eº


106 
public
:

107 
CMem‹yEº
()

108 : 
CBa£Eº
()

112 
CMem‹yEº
(c⁄° * 
szLoc
)

113 : 
CBa£Eº
(
szLoc
)

117 
Eº‹Ty≥
(Ë{ 
ERR_TYPE_MEMORY
;}

118 c⁄° *
Eº‹Text
(Ëc⁄° { 
	gERR_INS_MEMORY
;}

121 ˛as†
	cCSy°emEº
 : 
public
 
CBa£Eº


123 
public
:

124 
	eA˘i⁄


126 
eN⁄e
 = 0,

127 
	geTønß˘NamedPùe
,

128 
	geWaôNamedPùe
,

129 
	geSëNamedPùeH™dÀSèã
,

130 
	geCª©eFûe
,

131 
	geCª©ePro˚ss
,

132 
	geCÆlNamedPùe
,

133 
	geCª©eEvít
,

134 
	geCª©eThªad
,

135 
	geVútuÆAŒoc
,

136 
	geRódFûe
 = 10,

137 
	geWrôeFûe
,

138 
	geM≠VõwOfFûe
,

139 
	geCª©eFûeM≠pög
,

140 
	geInôülizeSecurôyDes¸ùt‹
,

141 
	geSëSecurôyDes¸ùt‹Da˛
,

142 
	geCª©eNamedPùe
,

143 
	geC⁄√˘NamedPùe
,

144 
	geWaôF‹SögÀObje˘
,

145 
	geRegO≥nKeyEx
,

146 
	geRegQuîyVÆueEx
 = 20,

147 
	gebegöthªad
,

148 
	geRegEnumVÆue
,

149 
	geRegSëVÆueEx
,

150 
	geRegCª©eKeyEx
,

151 
	geWaôF‹Mu…ùÀObje˘s
,

152 
	geRegi°îCœssEx
,

153 
	geCª©eWödow
,

154 
	geCª©eSem≠h‹e
,

155 
	geRñó£Sem≠h‹e
,

156 
	geFSìk
,

157 
	geFRód
,

158 
	geFWrôe
,

159 
	geTmpFûe
,

160 
	geSëFûePoöãr
,

161 
	geNew
,

162 
	geClo£H™dÀ
,

163 
	geCª©eMuãx
,

164 
	geRñó£Muãx


167 
CSy°emEº
(
A˘i⁄
 
eA˘i⁄
, c⁄° * 
szLoˇti⁄
);

168 
CSy°emEº
(
iEº‹
, 
A˘i⁄
 
eA˘i⁄
, c⁄° * 
szLoˇti⁄
);

169 
Eº‹Ty≥
(Ë{  
	gERR_TYPE_OS
;};

170 c⁄° *
Eº‹Text
() const;

172 
A˘i⁄
 
	gm_eA˘i⁄
;

174 ~
CSy°emEº
(Ë
throw
()

180 ˛as†
	cCBa£TxnEº


182 
	gpublic
:

186 
SUCCESS
 = 0,

187 
	gEXPECTED_ROLLBACK
 = 1,

193 
	gBVF1_ERROR1
 = -111,

195 
	gCPF1_ERROR1
 = -211,

196 
	gCPF2_ERROR1
 = -221,

198 
	gMFF1_ERROR1
 = -311,

200 
	gMWF1_ERROR1
 = -411,

202 
	gSDF1_ERROR1
 = -511,

203 
	gSDF1_ERROR2
 = -512,

204 
	gSDF1_ERROR3
 = -513,

206 
	gTLF1_ERROR1
 = -611,

207 
	gTLF2_ERROR1
 = -621,

208 
	gTLF2_WARN1
 = +621,

209 
	gTLF3_ERROR1
 = -631,

210 
	gTLF3_WARN1
 = +631,

211 
	gTLF4_ERROR1
 = -641,

212 
	gTLF4_WARN1
 = +641,

213 
	gTLF4_ERROR2
 = -642,

215 
	gTOF1_ERROR1
 = -711,

216 
	gTOF2_ERROR1
 = -721,

217 
	gTOF3_ERROR1
 = -731,

218 
	gTOF3_ERROR2
 = -732,

219 
	gTOF3_ERROR3
 = -733,

221 
	gTRF1_ERROR1
 = -811,

222 
	gTRF3_ERROR1
 = -831,

223 
	gTRF4_ERROR1
 = -841,

225 
	gTSF1_ERROR1
 = -911,

227 
	gTUF1_ERROR1
 = -1011,

228 
	gTUF2_ERROR1
 = -1021,

229 
	gTUF2_WARN1
 = +1021,

230 
	gTUF3_ERROR1
 = -1031,

231 
	gTUF3_WARN1
 = +1031,

233 } 
	gmEºCode
;

236 ˛as†
	cCCheckEº
 : 
public
 
CBa£Eº


238 
¥iv©e
:

239 
°d
::
°rög
 
«me_
;

240 
	g°d
::
°rög
 
msg_
;

241 
	gpublic
:

242 
CCheckEº
()

243 : 
CBa£Eº
()

247 ~
CCheckEº
(Ë
throw
()

251 
CCheckEº
(c⁄° *
«me
, c⁄° 
°d
::
°rög
& 
msg
)

252 : 
CBa£Eº
(
«me
)

253 , 
msg_
(
msg
)

257 
Eº‹Ty≥
(Ë{ 
	gERR_TYPE_CHECK
;}

258 c⁄° *
Eº‹Text
() const {

259  
	gmsg_
.
c_°r
();

	@include/workload/tpce/egen/locking.h

37 #i‚de‡
LOCKING_H_INCLUDED


38 
	#LOCKING_H_INCLUDED


	)

40 
	~"EGíSènd¨dTy≥s.h
"

42 
«me•a˚
 
	gTPCE


46 ˛as†
	cCMuãx


48 
	g¥iv©e
:

49 
TMuãx
 
muãx_
;

50 
TMuãx
* 
muãx
();

51 
	gpublic
:

52 
CMuãx
();

53 ~
CMuãx
();

54 
lock
();

55 
u∆ock
();

60 
	gãm∂©e
<
ty≥«me
 
	gT
>

61 ˛as†
	cLockî


63 
	g¥iv©e
:

64 
T
& 
muãx_
;

66 
	gpublic
:

67 
ex∂icô
 
Lockî
<
T
>(T& 
muãx
)

68 : 
muãx_
(
muãx
)

70 
muãx_
.
lock
();

73 ~
	gLockî
<
	gT
>() {

74 
	gmuãx_
.
u∆ock
();

	@include/workload/tpce/egen/progressmeter.h

41 #i‚de‡
PROGRESSMETER_H_INCLUDED


42 
	#PROGRESSMETER_H_INCLUDED


	)

44 
	~<io°ªam
>

46 
	~"D©eTime.h
"

47 
	~"¥ogªssmëîöãrÁ˚.h
"

48 
	~"lockög.h
"

50 
«me•a˚
 
	gTPCE


53 ˛as†
	cProgªssMëî
 : 
public
 
ProgªssMëîI¡îÁ˚


55 
¥iv©e
:

56 
m_tŸÆ
;

57 
	gm_cuºít
;

58 
	gm_di•œy_öãrvÆ
;

59 
CD©eTime
 
	gm_°¨t_time
;

60 
CD©eTime
 
	gm_œ°_time
;

61 
	g°d
::
o°ªam
* 
m_ouçut
;

62 
	gm_vîbosôy
;

63 
muèbÀ
 
CMuãx
 
	gm_muãx
;

65 
	gpublic
:

67 
ProgªssMëî
(
tŸÆ
, 
vîbosôy
 = 0, 
°d
::
o°ªam
* 
ouçut
=&°d::
cout
);

71 
£t_di•œy_öãrvÆ
(
vÆ
);

72 
di•œy_öãrvÆ
() const;

76 
vútuÆ
 
di•œy
() const;

81 
vútuÆ
 
di•œy_mesßge
(
°d
::
o°ªam
& 
out
) const;

89 
öc
(
cou¡
=1);

92 
cuºít
() const;

95 
tŸÆ
() const;

97 
lock
() const;

98 
u∆ock
() const;

104 
vútuÆ
 
mesßge
(c⁄° 
°d
::
°rög
& 
mesg
, 
Àvñ
=0);

	@include/workload/tpce/egen/progressmeterinterface.h

37 #i‚de‡
PROGRESSMETERINTERFACE_H_INCLUDED


38 
	#PROGRESSMETERINTERFACE_H_INCLUDED


	)

40 
	~<°rög
>

42 
«me•a˚
 
	gTPCE


47 ˛as†
	cProgªssMëîI¡îÁ˚


49 
	gpublic
:

50 
vútuÆ
 ~
ProgªssMëîI¡îÁ˚
();

53 
vútuÆ
 
di•œy
() const;

57 
vútuÆ
 
öc
(
cou¡
=1);

62 
vútuÆ
 
mesßge
(c⁄° 
°d
::
°rög
& 
mesg
, 
Àvñ
=0);

	@include/workload/tpce/egen/strutil.h

41 #i‚de‡
STRUTIL_H_INCLUDED


42 
	#STRUTIL_H_INCLUDED


	)

44 
	~<°rög
>

45 
	~"EGíSènd¨dTy≥s.h
"

47 
usög
 
«me•a˚
 
	g°d
;

49 
«me•a˚
 
	gTPCE


54 
INT64
 
°πoöt64
 (c⁄° *
±r
);

58 
°πodbl
 (c⁄° *
±r
);

63 
INT64
 
time°πoöt64
 (c⁄° *
±r
);

67 
°d
::
°rög
 
öt64tŸime°r
 (
INT64
 
vÆ
);

	@include/workload/tpce/egen/threading.h

37 #i‚de‡
THREADING_H_INCLUDED


38 
	#THREADING_H_INCLUDED


	)

40 
	~<mem‹y
>

41 
	~<s°ªam
>

42 
	~<°dex˚±
>

44 
	~"EGíSènd¨dTy≥s.h
"

46 
«me•a˚
 
	gTPCE


52 ˛as†
	cThªadBa£


54 
	gpublic
:

55 
vútuÆ
 ~
ThªadBa£
();

56 
vútuÆ
 
övoke
() = 0;

60 #ifde‡
WIN32


61 
DWORD
 
WINAPI
 
°¨t_thªad
(
LPVOID
 
¨g
);

64 * 
°¨t_thªad
(*
¨g
);

69 
	gãm∂©e
<
ty≥«me
 
	gT
>

70 ˛as†
	cThªad
 : 
public
 
ThªadBa£


72 
¥iv©e
:

73 
°d
::
auto_±r
<
T
> 
obj_
;

74 
TThªad
 
	gtid_
;

75 #i‚de‡
WIN32


76 
TThªadAâr
 
	g©å_
;

78 
	g°acksize_
;

79 
	gpublic
:

80 
Thªad
(
°d
::
auto_±r
<
T
> 
throbj
)

81 : 
obj_
(
throbj
)

82 , 
tid_
()

83 #i‚de‡
WIN32


84 , 
©å_
()

86 , 
°acksize_
(0)

88 #i‚de‡
WIN32


89 
±hªad_©å_öô
(&
©å_
);

92 
Thªad
(
°d
::
auto_±r
<
T
> 
throbj
, 
°acksize
)

93 : 
obj_
(
throbj
)

94 , 
tid_
()

95 #i‚de‡
WIN32


96 , 
©å_
()

98 , 
°acksize_
(
°acksize
)

100 #i‚de‡
WIN32


101 
±hªad_©å_öô
(&
©å_
);

104 
T
* 
obj
() {

105  
	gobj_
.
gë
();

107 
övoke
() {

108 
	gobj_
->
run
(
this
);

110 
°¨t
();

111 
°›
();

118 #ifde‡
WIN32


120 
	gãm∂©e
<
ty≥«me
 
	gT
>

121 
	gThªad
<
	gT
>::
	$°¨t
()

123 
tid_
 = 
	`Cª©eThªad
(
NULL
, 
°acksize_
, 
°¨t_thªad
, 
this
, NULL, NULL);

124 i‡(
tid_
 =
NULL
) {

125 
°d
::
o°rög°ªam
 
°rm
;

126 
°rm
 << "Cª©eThªadÉº‹: " << 
	`GëLa°Eº‹
();

127 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

129 
	}
}

131 
	gãm∂©e
<
ty≥«me
 
	gT
>

132 
	gThªad
<
	gT
>::
	$°›
()

134 
DWORD
 
rc
 = 
	`WaôF‹SögÀObje˘
(
tid_
, 
INFINITE
);

135 i‡(
rc
 != 0) {

136 
°d
::
o°rög°ªam
 
°rm
;

137 
°rm
 << "WaôF‹SögÀObje˘Éº‹: " << 
	`GëLa°Eº‹
();

138 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

140 
	}
}

148 
	gãm∂©e
<
ty≥«me
 
	gT
>

149 
	gThªad
<
	gT
>::
	$°¨t
()

151 
rc
 = 0;

153 i‡(
°acksize_
 > 0)

155 
rc
 = 
	`±hªad_©å_£t°acksize
(&
©å_
, 
°acksize_
);

156 i‡(
rc
 != 0) {

157 
°d
::
o°rög°ªam
 
°rm
;

158 
°rm
 << "±hªad_©å_£t°acksizêîr‹: " << 
	`°ªº‹
(
rc
) << "(" <<Ñc << ")";

159 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

163 
rc
 = 
	`±hªad_¸óã
(&
tid_
, &
©å_
, 
°¨t_thªad
, 
this
);

164 i‡(
rc
 != 0) {

165 
°d
::
o°rög°ªam
 
°rm
;

166 
°rm
 << "±hªad_¸óãÉº‹: " << 
	`°ªº‹
(
rc
) << "(" <<Ñc << ")";

167 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

169 
	}
}

171 
	gãm∂©e
<
ty≥«me
 
	gT
>

172 
	gThªad
<
	gT
>::
	$°›
()

174 
rc
 = 
	`±hªad_joö
(
tid_
, 
NULL
);

175 i‡(
rc
 != 0) {

176 
°d
::
o°rög°ªam
 
°rm
;

177 
°rm
 << "±hªad_joöÉº‹: " << 
	`°ªº‹
(
rc
) << "(" <<Ñc << ")";

178 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

180 
	}
}

	@include/workload/tpce/egen/threading_pthread.h

44 #i‚de‡
THREADING_PTHREAD_H_INCLUDED


45 
	#THREADING_PTHREAD_H_INCLUDED


	)

47 
	~<±hªad.h
>

48 
	~<mem‹y
>

49 
	~<s°ªam
>

50 
	~<°dex˚±
>

52 
«me•a˚
 
	gTPCE


55 
˛ass
 
	gCC⁄dôi⁄
;

58 ˛as†
	cCMuãx


60 
	g¥iv©e
:

61 
±hªad_muãx_t
 
muãx_
;

62 
±hªad_muãx_t
* 
muãx
();

63 
	gpublic
:

64 
CMuãx
();

65 
lock
();

66 
u∆ock
();

68 
‰õnd
 
˛ass
 
	gCC⁄dôi⁄
;

72 ˛as†
	cCC⁄dôi⁄


74 
	g¥iv©e
:

75 
CMuãx
& 
muãx_
;

76 
muèbÀ
 
±hªad_c⁄d_t
 
	gc⁄d_
;

77 
	g¥Ÿe˘ed
:

78 
CMuãx
& 
muãx
();

79 
	gpublic
:

80 
CC⁄dôi⁄
(
CMuãx
& 
muãx
);

81 
waô
() const;

82 
lock
();

83 
u∆ock
();

84 
boﬁ
 
timedwaô
(c⁄° 
time•ec
& 
timeout
) const;

85 
boﬁ
 
timedwaô
(
timeout
=-1 ) const;

86 
sig«l
();

87 
brﬂdˇ°
();

92 
	gãm∂©e
<
ty≥«me
 
	gT
>

93 ˛as†
	cLockî


95 
	g¥iv©e
:

96 
T
& 
muãx_
;

98 
	gpublic
:

99 
ex∂icô
 
Lockî
<
T
>(T& 
muãx
)

100 : 
muãx_
(
muãx
)

102 
muãx_
.
lock
();

105 ~
	gLockî
<
	gT
>() {

106 
	gmuãx_
.
u∆ock
();

113 ˛as†
	cThªadBa£


115 
	gpublic
:

116 
vútuÆ
 ~
ThªadBa£
();

117 
vútuÆ
 
övoke
() = 0;

121 "C" * 
°¨t_thªad
(*
¨g
);

125 
	gãm∂©e
<
ty≥«me
 
	gT
>

126 ˛as†
	cThªad
 : 
public
 
ThªadBa£


128 
¥iv©e
:

129 
°d
::
auto_±r
<
T
> 
obj_
;

130 
±hªad_t
 
	gtid_
;

131 
	gpublic
:

132 
Thªad
(
°d
::
auto_±r
<
T
> 
throbj
)

133 : 
obj_
(
throbj
)

134 , 
tid_
()

137 
°¨t
() {

138 
	grc
 = 
±hªad_¸óã
(&
tid_
, 
NULL
, 
°¨t_thªad
, 
this
);

139 i‡(
	grc
 != 0) {

140 
°d
::
o°rög°ªam
 
°rm
;

141 
	g°rm
 << "±hªad_¸óãÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

142 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

145 
°›
() {

146 
	grc
 = 
±hªad_joö
(
tid_
, 
NULL
);

147 i‡(
	grc
 != 0) {

148 
°d
::
o°rög°ªam
 
°rm
;

149 
	g°rm
 << "±hªad_joöÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

150 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

153 
övoke
() {

154 
	gobj_
->
run
(
this
);

156 
T
* 
obj
() {

157  
	gobj_
.
gë
();

	@include/workload/tpce/egen/threading_single.h

42 #i‚de‡
THREADING_SINGLE_H_INCLUDED


43 
	#THREADING_SINGLE_H_INCLUDED


	)

45 
	~<mem‹y
>

47 
«me•a˚
 
	gTPCE


52 
˛ass
 
	gCC⁄dôi⁄
;

53 ˛as†
	cCMuãx


55 
	gpublic
:

56 
CMuãx
();

57 
lock
();

58 
u∆ock
();

60 
‰õnd
 
˛ass
 
	gCC⁄dôi⁄
;

63 ˛as†
	cCC⁄dôi⁄


65 
	g¥iv©e
:

66 
CMuãx
& 
muãx_
;

67 
	g¥Ÿe˘ed
:

68 
CMuãx
& 
muãx
();

69 
	gpublic
:

70 
CC⁄dôi⁄
(
CMuãx
& 
muãx
);

71 
lock
();

72 
u∆ock
();

73 
waô
() const;

74 
boﬁ
 
timedwaô
(c⁄° 
time•ec
& 
timeout
) const;

75 
boﬁ
 
timedwaô
(
timeout
=-1 ) const;

76 
sig«l
();

77 
brﬂdˇ°
();

82 
	gãm∂©e
<
ty≥«me
 
	gT
>

83 ˛as†
	cLockî


85 
	g¥iv©e
:

86 
T
& 
muãx_
;

88 
	gpublic
:

89 
ex∂icô
 
Lockî
<
T
>(T& 
muãx
)

90 : 
muãx_
(
muãx
)

92 
muãx_
.
lock
();

95 ~
	gLockî
<
	gT
>() {

96 
	gmuãx_
.
u∆ock
();

103 ˛as†
	cThªadBa£


105 
	gpublic
:

106 
vútuÆ
 ~
ThªadBa£
();

107 
vútuÆ
 
run
() = 0;

112 
	gãm∂©e
<
ty≥«me
 
	gT
>

113 ˛as†
	cThªad
 : 
public
 
ThªadBa£


115 
¥iv©e
:

116 
°d
::
auto_±r
<
T
> 
obj_
;

117 
	gpublic
:

118 
Thªad
(
°d
::
auto_±r
<
T
> 
obj
)

119 : 
obj_
(
obj
)

122 
°¨t
() {

123 
obj_
->
run
(
this
);

125 
°›
() {

127 
run
() {

129 
T
* 
obj
() {

130  
	gobj_
.
gë
();

	@include/workload/tpce/egen/unusedflag.h

40 #i‚de‡
UNUSEDFLAG_H_INCLUDED


41 
	#UNUSEDFLAG_H_INCLUDED


	)

42 #ifde‡
__GNUC__


43 
	#UNUSED
 
	`__©åibuã__
((
unu£d
))

	)

45 
	#UNUSED


	)

	@include/workload/tpce/shore_tpce_client.h

31 #i‚de‡
__SHORE_TPCE_CLIENT_H


32 
	#__SHORE_TPCE_CLIENT_H


	)

34 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

36 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
ç˚
);

51 ˛as†
	cba£löe_ç˚_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


53 
¥iv©e
:

55 
_£lid
;

56 
åx_w‹kî_t
* 
	m_w‹kî
;

57 
	m_qf
;

60 
	mpublic
:

62 
	$ba£löe_ç˚_˛õ¡_t
() { }

64 
	`ba£löe_ç˚_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eTPCEEnv
* 
ív
,

65 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

66 c⁄° 
numOfTrxs
,

67 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
);

69 ~
	$ba£löe_ç˚_˛õ¡_t
(Ë{ 
	}
}

72 c⁄° 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

76 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

81 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/shore_tpce_egen.h

31 #i‚de‡
__SHORE_TPCE_EGEN_H


32 
	#__SHORE_TPCE_EGEN_H


	)

34 
	~"w‹klﬂd/ç˚/egí/EGíLﬂdî_°dafx.h
"

35 
	~"w‹klﬂd/ç˚/egí/EGíSènd¨dTy≥s.h
"

36 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

37 
	~"w‹klﬂd/ç˚/egí/TabÀ_Defs.h
"

40 
usög
 
«me•a˚
 
	gTPCE
;

42 
ENTER_NAMESPACE
(
ç˚
);

44 
	gãm∂©e
 <
ty≥«me
 
	gT
>

45 ˛as†
	cEgíTu∂eC⁄èöî


47 
	msize
;

48 
	mˇ∑côy
;

49 
	m˙t
;

50 
T
* 
	mbuf„r
;

51 
boﬁ
 
	mm‹eToRód
;

54 
	mpublic
:

55 
	$gëSize
(Ë{ 
size
;}

56 
	$£tSize
(
k
Ë{
size
 = k;
	}
}

57 
	$gëC≠acôy
(Ë{ 
ˇ∑côy
;
	}
}

58 
	$gëRowSize
(Ë{ (
T
);
	}
}

59 
	$gëC¡
(Ë{ 
˙t
;
	}
}

61 
	$EgíTu∂eC⁄èöî
 (
ˇp
): 
	`size
(0), 
	$ˇ∑côy
(
ˇp
){

62 
buf„r
 = 
√w
 
T
 [
ˇ∑côy
];

63 
m‹eToRód
=
åue
;

64 
˙t
 = 0;

65 
	}
}

66 
T
* 
	$gë
(
i
){
˙t
++;  &
buf„r
[i]; 
	}
}

67 
	$≠≥nd
(
T
* 
row
Ë{
	`mem˝y
(&
buf„r
[
size
++],row, (T)); 
	}
}

68 
boﬁ
 
	$hasS∑˚
(){ (
size
<
ˇ∑côy
-2);
	}
}

69 
boﬁ
 
	$hasM‹eToRód
(Ë{ 
m‹eToRód
;
	}
}

70 
	$£tM‹eToRód
(
boﬁ
 
x
Ë{
m‹eToRód
 = x;
	}
}

71 
	$ª£t
(Ë{
size
=0;
	}
}

72 
	$ªÀa£
(Ë{ 
	}
}

73 
	$√wLﬂdUnô
(){
size
=0; 
m‹eToRód
=
åue
;
	}
}

76 
˛ass
 
	gAccou¡Pîmissi⁄Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
ACCOUNT_PERMISSION_ROW
>{

77 
public
:

78 
Accou¡Pîmissi⁄Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
ACCOUNT_PERMISSION_ROW
>(c){}

80 
˛ass
 
	gCu°omîBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
CUSTOMER_ROW
>{

81 
public
:

82 
Cu°omîBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
CUSTOMER_ROW
>(c){}

84 
˛ass
 
	gCu°omîAccou¡Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
CUSTOMER_ACCOUNT_ROW
>{

85 
public
:

86 
Cu°omîAccou¡Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
CUSTOMER_ACCOUNT_ROW
>(c){}

88 
˛ass
 
	gCu°omîTaxøãBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
CUSTOMER_TAXRATE_ROW
>{

89 
public
:

90 
Cu°omîTaxøãBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
CUSTOMER_TAXRATE_ROW
>(c){}

92 
˛ass
 
	gHﬁdögBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
HOLDING_ROW
>{

93 
public
:

94 
HﬁdögBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
HOLDING_ROW
>(c){}

96 
˛ass
 
	gHﬁdögHi°‹yBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
HOLDING_HISTORY_ROW
>{

97 
public
:

98 
HﬁdögHi°‹yBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
HOLDING_HISTORY_ROW
>(c){}

100 
˛ass
 
	gHﬁdögSumm¨yBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
HOLDING_SUMMARY_ROW
>{

101 
public
:

102 
HﬁdögSumm¨yBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
HOLDING_SUMMARY_ROW
>(c){}

104 
˛ass
 
	gW©chIãmBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
WATCH_ITEM_ROW
>{

105 
public
:

106 
W©chIãmBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
WATCH_ITEM_ROW
>(c){}

108 
˛ass
 
	gW©chLi°Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
WATCH_LIST_ROW
>{

109 
public
:

110 
W©chLi°Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
WATCH_LIST_ROW
>(c){}

113 
˛ass
 
	gBrokîBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
BROKER_ROW
>{

114 
public
:

115 
BrokîBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
BROKER_ROW
>(c){}

117 
˛ass
 
	gCashTønß˘i⁄Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
CASH_TRANSACTION_ROW
>{

118 
public
:

119 
CashTønß˘i⁄Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
CASH_TRANSACTION_ROW
>(c){}

121 
˛ass
 
	gCh¨geBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
CHARGE_ROW
>{

122 
public
:

123 
Ch¨geBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
CHARGE_ROW
>(c){}

125 
˛ass
 
	gCommissi⁄R©eBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
COMMISSION_RATE_ROW
>{

126 
public
:

127 
Commissi⁄R©eBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
COMMISSION_RATE_ROW
>(c){}

129 
˛ass
 
	gSëéemítBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
SETTLEMENT_ROW
>{

130 
public
:

131 
SëéemítBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
SETTLEMENT_ROW
>(c){}

133 
˛ass
 
	gTødeBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
TRADE_ROW
>{

134 
public
:

135 
TødeBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
TRADE_ROW
>(c){}

137 
˛ass
 
	gTødeHi°‹yBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
TRADE_HISTORY_ROW
>{

138 
public
:

139 
TødeHi°‹yBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
TRADE_HISTORY_ROW
>(c){}

141 
˛ass
 
	gTødeReque°Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
TRADE_REQUEST_ROW
>{

142 
public
:

143 
TødeReque°Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
TRADE_REQUEST_ROW
>(c){}

145 
˛ass
 
	gTødeTy≥Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
TRADE_TYPE_ROW
>{

146 
public
:

147 
TødeTy≥Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
TRADE_TYPE_ROW
>(c){}

149 
˛ass
 
	gCom∑nyBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
COMPANY_ROW
>{

150 
public
:

151 
Com∑nyBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
COMPANY_ROW
>(c){}

153 
˛ass
 
	gCom∑nyCom≥tô‹Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
COMPANY_COMPETITOR_ROW
>{

154 
public
:

155 
Com∑nyCom≥tô‹Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
COMPANY_COMPETITOR_ROW
>(c){}

157 
˛ass
 
	gDaûyM¨këBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
DAILY_MARKET_ROW
>{

158 
public
:

159 
DaûyM¨këBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
DAILY_MARKET_ROW
>(c){}

161 
˛ass
 
	gExch™geBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
EXCHANGE_ROW
>{

162 
public
:

163 
Exch™geBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
EXCHANGE_ROW
>(c){}

165 
˛ass
 
	gFö™cülBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
FINANCIAL_ROW
>{

166 
public
:

167 
Fö™cülBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
FINANCIAL_ROW
>(c){}

169 
˛ass
 
	gIndu°ryBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
INDUSTRY_ROW
>{

170 
public
:

171 
Indu°ryBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
INDUSTRY_ROW
>(c){}

173 
˛ass
 
	gLa°TødeBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
LAST_TRADE_ROW
>{

174 
public
:

175 
La°TødeBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
LAST_TRADE_ROW
>(c){}

178 
˛ass
 
	gNewsIãmBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
NEWS_ITEM_ROW
>{

179 
public
:

180 
NewsIãmBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
NEWS_ITEM_ROW
>(c){}

183 
˛ass
 
	gNewsXRefBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
NEWS_XREF_ROW
>{

184 
public
:

185 
NewsXRefBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
NEWS_XREF_ROW
>(c){}

188 
˛ass
 
	gSe˘‹Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
SECTOR_ROW
>{

189 
public
:

190 
Se˘‹Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
SECTOR_ROW
>(c){}

193 
˛ass
 
	gSecurôyBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
SECURITY_ROW
>{

194 
public
:

195 
SecurôyBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
SECURITY_ROW
>(c){}

199 
˛ass
 
	gAddªssBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
ADDRESS_ROW
>{

200 
public
:

201 
AddªssBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
ADDRESS_ROW
>(c){}

203 
˛ass
 
	gSètusTy≥Buf„r
: 
public
 
EgíTu∂eC⁄èöî
<
STATUS_TYPE_ROW
>{

204 
public
:

205 
SètusTy≥Buf„r
(
c
): 
EgíTu∂eC⁄èöî
<
STATUS_TYPE_ROW
>(c){}

208 
˛ass
 
	gTaxøãBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
TAXRATE_ROW
>{

209 
public
:

210 
TaxøãBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
TAXRATE_ROW
>(c){}

213 
˛ass
 
	gZùCodeBuf„r
: 
public
 
EgíTu∂eC⁄èöî
<
ZIP_CODE_ROW
>{

214 
public
:

215 
ZùCodeBuf„r
(
c
): 
EgíTu∂eC⁄èöî
<
ZIP_CODE_ROW
>(c){}

219 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/shore_tpce_env.h

32 #i‚de‡
__SHORE_TPCE_ENV_H


33 
	#__SHORE_TPCE_ENV_H


	)

36 
	~"sm_vas.h
"

37 
	~"utû.h
"

39 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

41 
	~"sm/sh‹e/sh‹e_ív.h
"

42 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

43 
	~"sm/sh‹e/sh‹e_desc_s‹t_buf.h
"

44 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

46 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_schema_m™.h
"

47 
	~"w‹klﬂd/ç˚/egí/EGíLﬂdî_°dafx.h
"

48 
	~"w‹klﬂd/ç˚/egí/EGíSènd¨dTy≥s.h
"

49 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

50 
	~"w‹klﬂd/ç˚/egí/TabÀ_Defs.h
"

51 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

52 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

53 
	~"w‹klﬂd/ç˚/egí/DM.h
"

55 
	~<m≠
>

57 
usög
 
«me•a˚
 
	gsh‹e
;

58 
usög
 
«me•a˚
 
	gTPCE
;

63 
egí_öô
(
¨gc
, * 
¨gv
[]);

64 
egí_ªÀa£
();

65 
CGíî©eAndLﬂd
* 
pGíî©eAndLﬂd
;

67 
ENTER_NAMESPACE
(
ç˚
);

69 
usög
 
	g°d
::
m≠
;

71 
Accou¡Pîmissi⁄Buf„r
 
accou¡Pîmissi⁄Buf„r
;

72 
Cu°omîBuf„r
 
cu°omîBuf„r
 ;

73 
Cu°omîAccou¡Buf„r
 
cu°omîAccou¡Buf„r
 ;

74 
Cu°omîTaxøãBuf„r
 
cu°omîTaxøãBuf„r
 ;

75 
HﬁdögBuf„r
 
hﬁdögBuf„r
;

76 
HﬁdögHi°‹yBuf„r
 
hﬁdögHi°‹yBuf„r
;

77 
HﬁdögSumm¨yBuf„r
 
hﬁdögSumm¨yBuf„r
;

78 
W©chIãmBuf„r
 
w©chIãmBuf„r
 ;

79 
W©chLi°Buf„r
 
w©chLi°Buf„r
;

81 
BrokîBuf„r
 
brokîBuf„r
;

82 
CashTønß˘i⁄Buf„r
 
ˇshTønß˘i⁄Buf„r
;

83 
Ch¨geBuf„r
 
ch¨geBuf„r
;

84 
Commissi⁄R©eBuf„r
 
commissi⁄R©eBuf„r
;

85 
SëéemítBuf„r
 
£âÀmítBuf„r
;

86 
TødeBuf„r
 
åadeBuf„r
;

87 
TødeHi°‹yBuf„r
 
åadeHi°‹yBuf„r
;

88 
TødeTy≥Buf„r
 
åadeTy≥Buf„r
;

91 
Com∑nyBuf„r
 
com∑nyBuf„r
 ;

92 
Com∑nyCom≥tô‹Buf„r
 
com∑nyCom≥tô‹Buf„r
;

93 
DaûyM¨këBuf„r
 
daûyM¨këBuf„r
;

94 
Exch™geBuf„r
 
exch™geBuf„r
;

95 
Fö™cülBuf„r
 
fö™cülBuf„r
;

96 
Indu°ryBuf„r
 
ödu°ryBuf„r
;

97 
La°TødeBuf„r
 
œ°TødeBuf„r
;

98 
NewsIãmBuf„r
 
√wsIãmBuf„r
;

99 
NewsXRefBuf„r
 
√wsXRefBuf„r
;

100 
Se˘‹Buf„r
 
£˘‹Buf„r
;

101 
SecurôyBuf„r
 
£curôyBuf„r
;

104 
AddªssBuf„r
 
addªssBuf„r
;

105 
SètusTy≥Buf„r
 
°©usTy≥Buf„r
;

106 
TaxøãBuf„r
 
èxøãBuf„r
 ;

107 
ZùCodeBuf„r
 
zùCodeBuf„r
 ;

110 #ifde‡
TESTING_TPCE


111 
åxs_˙t_execuãd
[];

112 
åxs_˙t_Áûed
[];

115 
TødeOrdîC¡
;

126 
	sSh‹eTPCETrxCou¡


128 
uöt
 
	mbrokî_vﬁume
;

129 
uöt
 
	mcu°omî_posôi⁄
;

130 
uöt
 
	mm¨kë_„ed
;

131 
uöt
 
	mm¨kë_w©ch
;

132 
uöt
 
	m£curôy_dëaû
;

133 
uöt
 
	måade_lookup
;

134 
uöt
 
	måade_‹dî
;

135 
uöt
 
	måade_ªsu…
;

136 
uöt
 
	måade_°©us
;

137 
uöt
 
	måade_upd©e
;

138 
uöt
 
	md©a_maöã«n˚
;

139 
uöt
 
	måade_˛ónup
;

141 
	mSh‹eTPCETrxCou¡
& 
	m›î©‹
+=(
Sh‹eTPCETrxCou¡
 c⁄°& 
rhs
) {

142 
brokî_vﬁume
 +
rhs
.broker_volume;

143 
	mcu°omî_posôi⁄
 +
rhs
.
cu°omî_posôi⁄
;

144 
	mm¨kë_„ed
 +
rhs
.
m¨kë_„ed
;

145 
	mm¨kë_w©ch
 +
rhs
.
m¨kë_w©ch
;

146 
	m£curôy_dëaû
 +
rhs
.
£curôy_dëaû
;

147 
	måade_lookup
 +
rhs
.
åade_lookup
;

148 
	måade_‹dî
 +
rhs
.
åade_‹dî
;

149 
	måade_ªsu…
 +
rhs
.
åade_ªsu…
;

150 
	måade_°©us
 +
rhs
.
åade_°©us
;

151 
	måade_upd©e
 +
rhs
.
åade_upd©e
;

152 
	md©a_maöã«n˚
 +
rhs
.
d©a_maöã«n˚
;

153 
	måade_˛ónup
 +
rhs
.
åade_˛ónup
;

155  (*
	mthis
);

158 
	mSh‹eTPCETrxCou¡
& 
	m›î©‹
-=(
Sh‹eTPCETrxCou¡
 c⁄°& 
rhs
) {

159 
brokî_vﬁume
 -
rhs
.broker_volume;

160 
	mcu°omî_posôi⁄
 -
rhs
.
cu°omî_posôi⁄
;

161 
	mm¨kë_„ed
 -
rhs
.
m¨kë_„ed
;

162 
	mm¨kë_w©ch
 -
rhs
.
m¨kë_w©ch
;

163 
	m£curôy_dëaû
 -
rhs
.
£curôy_dëaû
;

164 
	måade_lookup
 -
rhs
.
åade_lookup
;

165 
	måade_‹dî
 -
rhs
.
åade_‹dî
;

166 
	måade_ªsu…
 -
rhs
.
åade_ªsu…
;

167 
	måade_°©us
 -
rhs
.
åade_°©us
;

168 
	måade_upd©e
 -
rhs
.
åade_upd©e
;

169 
	md©a_maöã«n˚
 -
rhs
.
d©a_maöã«n˚
;

170 
	måade_˛ónup
 -
rhs
.
åade_˛ónup
;

172  (*
	mthis
);

175 c⁄° 
tŸÆ
() const {

176  (
	mbrokî_vﬁume
 + 
	mcu°omî_posôi⁄
 + 
	mm¨kë_„ed
 +

177 
	mm¨kë_w©ch
 + 
	m£curôy_dëaû
 + 
	måade_lookup
 +

178 
	måade_‹dî
 + 
	måade_ªsu…
 + 
	måade_°©us
 +

179 
	måade_upd©e
 + 
	md©a_maöã«n˚
 + 
	måade_˛ónup
);

185 
	sSh‹eTPCETrxSèts


187 
Sh‹eTPCETrxCou¡
 
	m©ãm±ed
;

188 
Sh‹eTPCETrxCou¡
 
	mÁûed
;

189 
Sh‹eTPCETrxCou¡
 
	mdódlocked
;

191 
	mSh‹eTPCETrxSèts
& 
	m›î©‹
+=(
Sh‹eTPCETrxSèts
 c⁄°& 
Ÿhî
) {

192 
©ãm±ed
 +
Ÿhî
.attempted;

193 
	mÁûed
 +
Ÿhî
.
Áûed
;

194 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

195  (*
	mthis
);

198 
	mSh‹eTPCETrxSèts
& 
	m›î©‹
-=(
Sh‹eTPCETrxSèts
 c⁄°& 
Ÿhî
) {

199 
©ãm±ed
 -
Ÿhî
.attempted;

200 
	mÁûed
 -
Ÿhî
.
Áûed
;

201 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

202  (*
	mthis
);

217 ˛as†
	cSh‹eTPCEEnv
 : 
public
 
Sh‹eEnv


219 
public
:

220 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eTPCETrxSèts
*> 
	t°©m≠_t
;

222 
˛ass
 
	mèbÀ_buûdî_t
;

223 
˛ass
 
	mèbÀ_¸ót‹_t
;

224 
	mcheckpoöãr_t
;

226 
	m¥Ÿe˘ed
:

235 
_cu°omîs
;

236 
	m_w‹kög_days
;

237 
	m_sˇlög_Á˘‹_ç˚
;

239 
	m¥iv©e
:

240 
w_rc_t
 
_po°_öô_im∂
();

243 
w_rc_t
 
_lﬂd_⁄e_£˘‹
(
ªp_row_t
& 
¨ïrow
, 
PSECTOR_ROW
 
ªc‹d
);

244 
w_rc_t
 
_lﬂd_⁄e_ch¨ge
–
ªp_row_t
& 
¨ïrow
, 
PCHARGE_ROW
 
ªc‹d
);

245 
w_rc_t
 
_lﬂd_⁄e_commissi⁄_øã
(
ªp_row_t
& 
¨ïrow
, 
PCOMMISSION_RATE_ROW
 
ªc‹d
);

246 
w_rc_t
 
_lﬂd_⁄e_exch™ge
(
ªp_row_t
& 
¨ïrow
, 
PEXCHANGE_ROW
 
ªc‹d
);

247 
w_rc_t
 
_lﬂd_⁄e_ödu°ry
(
ªp_row_t
& 
¨ïrow
, 
PINDUSTRY_ROW
 
ªc‹d
);

248 
w_rc_t
 
_lﬂd_⁄e_°©us_ty≥
(
ªp_row_t
& 
¨ïrow
, 
PSTATUS_TYPE_ROW
 
ªc‹d
);

249 
w_rc_t
 
_lﬂd_⁄e_èxøã
(
ªp_row_t
& 
¨ïrow
, 
PTAXRATE_ROW
 
ªc‹d
);

250 
w_rc_t
 
_lﬂd_⁄e_åade_ty≥
(
ªp_row_t
& 
¨ïrow
, 
PTRADE_TYPE_ROW
 
ªc‹d
);

251 
w_rc_t
 
_lﬂd_⁄e_zù_code
(
ªp_row_t
& 
¨ïrow
, 
PZIP_CODE_ROW
 
ªc‹d
);

253 
w_rc_t
 
_lﬂd_⁄e_ˇsh_å™ß˘i⁄
(
ªp_row_t
& 
¨ïrow
, 
PCASH_TRANSACTION_ROW
 
ªc‹d
);

254 
w_rc_t
 
_lﬂd_⁄e_£âÀmít
(
ªp_row_t
& 
¨ïrow
, 
PSETTLEMENT_ROW
 
ªc‹d
);

255 
w_rc_t
 
_lﬂd_⁄e_åade
(
ªp_row_t
& 
¨ïrow
, 
PTRADE_ROW
 
ªc‹d
);

256 
w_rc_t
 
_lﬂd_⁄e_åade_hi°‹y
(
ªp_row_t
& 
¨ïrow
, 
PTRADE_HISTORY_ROW
 
ªc‹d
);

257 
w_rc_t
 
_lﬂd_⁄e_åade_ªque°
(
ªp_row_t
& 
¨ïrow
, 
PTRADE_REQUEST_ROW
 
ªc‹d
);

259 
w_rc_t
 
_lﬂd_⁄e_accou¡_≥rmissi⁄
(
ªp_row_t
& 
¨ïrow
, 
PACCOUNT_PERMISSION_ROW
 
ªc‹d
);

260 
w_rc_t
 
_lﬂd_⁄e_brokî
(
ªp_row_t
& 
¨ïrow
, 
PBROKER_ROW
 
ªc‹d
);

261 
w_rc_t
 
_lﬂd_⁄e_com∑ny
(
ªp_row_t
& 
¨ïrow
, 
PCOMPANY_ROW
 
ªc‹d
);

262 
w_rc_t
 
_lﬂd_⁄e_cu°omî
(
ªp_row_t
& 
¨ïrow
, 
PCUSTOMER_ROW
 
ªc‹d
);

263 
w_rc_t
 
_lﬂd_⁄e_com∑ny_com≥tô‹
(
ªp_row_t
& 
¨ïrow
, 
PCOMPANY_COMPETITOR_ROW
 
ªc‹d
);

264 
w_rc_t
 
_lﬂd_⁄e_£curôy
(
ªp_row_t
& 
¨ïrow
, 
PSECURITY_ROW
 
ªc‹d
);

265 
w_rc_t
 
_lﬂd_⁄e_cu°omî_accou¡
(
ªp_row_t
& 
¨ïrow
, 
PCUSTOMER_ACCOUNT_ROW
 
ªc‹d
);

266 
w_rc_t
 
_lﬂd_⁄e_daûy_m¨kë
(
ªp_row_t
& 
¨ïrow
, 
PDAILY_MARKET_ROW
 
ªc‹d
);

267 
w_rc_t
 
_lﬂd_⁄e_cu°omî_èxøã
(
ªp_row_t
& 
¨ïrow
, 
PCUSTOMER_TAXRATE_ROW
 
ªc‹d
);

268 
w_rc_t
 
_lﬂd_⁄e_hﬁdög
(
ªp_row_t
& 
¨ïrow
, 
PHOLDING_ROW
 
ªc‹d
);

269 
w_rc_t
 
_lﬂd_⁄e_fö™cül
(
ªp_row_t
& 
¨ïrow
, 
PFINANCIAL_ROW
 
ªc‹d
);

270 
w_rc_t
 
_lﬂd_⁄e_hﬁdög_hi°‹y
(
ªp_row_t
& 
¨ïrow
, 
PHOLDING_HISTORY_ROW
 
ªc‹d
);

271 
w_rc_t
 
_lﬂd_⁄e_addªss
(
ªp_row_t
& 
¨ïrow
, 
PADDRESS_ROW
 
ªc‹d
);

272 
w_rc_t
 
_lﬂd_⁄e_hﬁdög_summ¨y
(
ªp_row_t
& 
¨ïrow
, 
PHOLDING_SUMMARY_ROW
 
ªc‹d
);

273 
w_rc_t
 
_lﬂd_⁄e_œ°_åade
(
ªp_row_t
& 
¨ïrow
, 
PLAST_TRADE_ROW
 
ªc‹d
);

274 
w_rc_t
 
_lﬂd_⁄e_w©ch_ôem
(
ªp_row_t
& 
¨ïrow
, 
PWATCH_ITEM_ROW
 
ªc‹d
);

275 
w_rc_t
 
_lﬂd_⁄e_√ws_ôem
(
ªp_row_t
& 
¨ïrow
, 
PNEWS_ITEM_ROW
 
ªc‹d
);

276 
w_rc_t
 
_lﬂd_⁄e_w©ch_li°
(
ªp_row_t
& 
¨ïrow
, 
PWATCH_LIST_ROW
 
ªc‹d
);

277 
w_rc_t
 
_lﬂd_⁄e_√ws_xªf
(
ªp_row_t
& 
¨ïrow
, 
PNEWS_XREF_ROW
 
ªc‹d
);

280 
_ªad_£˘‹
();

281 
_ªad_ch¨ge
();

282 
_ªad_commissi⁄_øã
();

283 
_ªad_exch™ge
();

284 
_ªad_ödu°ry
();

285 
_ªad_°©us_ty≥
();

286 
_ªad_èxøã
();

287 
_ªad_åade_ty≥
();

288 
_ªad_zù_code
();

290 
_ªad_ˇsh_å™ß˘i⁄
();

291 
_ªad_£âÀmít
();

292 
_ªad_åade
();

293 
_ªad_åade_hi°‹y
();

295 
_ªad_ˇ_™d_≠
();

296 
_ªad_brokî
();

297 
_ªad_com∑ny
();

298 
_ªad_cu°omî
();

299 
_ªad_com∑ny_com≥tô‹
();

300 
_ªad_£curôy
();

301 
_ªad_daûy_m¨kë
();

302 
_ªad_cu°omî_èxøã
();

303 
_ªad_hﬁdög
();

304 
_ªad_fö™cül
();

305 
_ªad_hﬁdög_hi°‹y
();

306 
_ªad_addªss
();

307 
_ªad_hﬁdög_summ¨y
();

308 
_ªad_œ°_åade
();

309 
_ªad_wl_™d_wi
();

310 
_ªad_ni_™d_nx
();

311 
_ªad_åade_unô
();

314 
	mpublic
:

317 
Sh‹eTPCEEnv
();

319 
	mvútuÆ
 ~
Sh‹eTPCEEnv
();

323 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

324 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

325 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

326 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

327 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

329 
vútuÆ
 
po°_öô
();

330 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

332 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

334 
vútuÆ
 
c⁄f
();

335 
vútuÆ
 
°¨t
();

336 
vútuÆ
 
°›
();

337 
vútuÆ
 
	$öfo
() const;

338 
vútuÆ
 
	`°©i°ics
();

340 
	`dump
();

343 
	`£t_cu°
(c⁄° 
aC
);

344 
ölöe
 
	$gë_cu°
(Ë{  (
_cu°omîs
); 
	}
}

346 
£t_wd
(c⁄° 
awd
);

347 
ölöe
 
	$gë_wd
(Ë{  (
_w‹kög_days
); 
	}
}

349 
£t_s„
(c⁄° 
asf
);

350 
ölöe
 
	$gë_s„
(Ë{  (
_sˇlög_Á˘‹_ç˚
); 
	}
}

355 
uöt
 
	g_num_övÆid_öput
;

356 
vútuÆ
 
¥öt_throughput
(c⁄° 
iQuîõdSF
,

357 c⁄° 
iS¥ód
,

358 c⁄° 
iNumOfThªads
,

359 c⁄° 
dñay
,

360 c⁄° 
ul⁄g_t
 
mioch
,

361 c⁄° 
avg˝uußge
);

363 
	$ªad_smÆl
(){

364 
pGíî©eAndLﬂd
->
	`InôCh¨ge
();

365 
	`_ªad_ch¨ge
();

366 
pGíî©eAndLﬂd
->
	`InôCommissi⁄R©e
();

367 
	`_ªad_commissi⁄_øã
();

368 
pGíî©eAndLﬂd
->
	`InôExch™ge
();

369 
	`_ªad_exch™ge
();

370 
pGíî©eAndLﬂd
->
	`InôIndu°ry
();

371 
	`_ªad_ödu°ry
();

372 
pGíî©eAndLﬂd
->
	`InôSe˘‹
();

373 
	`_ªad_£˘‹
();

374 
pGíî©eAndLﬂd
->
	`InôSètusTy≥
();

375 
	`_ªad_°©us_ty≥
();

376 
pGíî©eAndLﬂd
->
	`InôTaxøã
();

377 
	`_ªad_èxøã
();

378 
pGíî©eAndLﬂd
->
	`InôTødeTy≥
();

379 
	`_ªad_åade_ty≥
();

380 
pGíî©eAndLﬂd
->
	`InôZùCode
();

381 
	`_ªad_zù_code
();

382 
	}
}

384 
	$ªÀa£_smÆl
(){

385 
ch¨geBuf„r
.
	`ªÀa£
();

386 
commissi⁄R©eBuf„r
.
	`ªÀa£
();

387 
exch™geBuf„r
.
	`ªÀa£
();

388 
ödu°ryBuf„r
.
	`ªÀa£
();

389 
£˘‹Buf„r
.
	`ªÀa£
();

390 
°©usTy≥Buf„r
.
	`ªÀa£
();

391 
èxøãBuf„r
.
	`ªÀa£
();

392 
åadeTy≥Buf„r
.
	`ªÀa£
();

393 
zùCodeBuf„r
.
	`ªÀa£
();

394 
	}
}

396 
p›uœã_cu°omî
();

397 
p›uœã_addªss
();

398 
p›uœã_ˇ_™d_≠
();

399 
p›uœã_wl_™d_wi
();

400 
p›uœã_ni_™d_nx
();

401 
p›uœã_œ°_åade
();

402 
p›uœã_com∑ny
();

403 
p›uœã_com∑ny_com≥tô‹
();

404 
p›uœã_daûy_m¨kë
();

405 
p›uœã_fö™cül
();

406 
p›uœã_£curôy
();

407 
p›uœã_cu°omî_èxøã
();

408 
p›uœã_brokî
();

409 
p›uœã_hﬁdög
();

410 
p›uœã_hﬁdög_summ¨y
();

411 
p›uœã_unô_åade
();

412 
p›uœã_growög
();

413 
föd_maxåade_id
();

417 
w_rc_t
 
lﬂdd©a
();

418 
w_rc_t
 
w¨mup
();

419 
w_rc_t
 
check_c⁄si°ícy
();

425 
DECLARE_TABLE
(
£˘‹_t
,
£˘‹_m™_im∂
,
£˘‹
);

426 
DECLARE_TABLE
(
ch¨ge_t
,
ch¨ge_m™_im∂
,
ch¨ge
);

427 
DECLARE_TABLE
(
commissi⁄_øã_t
,
commissi⁄_øã_m™_im∂
,
commissi⁄_øã
);

428 
DECLARE_TABLE
(
exch™ge_t
,
exch™ge_m™_im∂
,
exch™ge
);

429 
DECLARE_TABLE
(
ödu°ry_t
,
ödu°ry_m™_im∂
,
ödu°ry
);

430 
DECLARE_TABLE
(
°©us_ty≥_t
,
°©us_ty≥_m™_im∂
,
°©us_ty≥
);

431 
DECLARE_TABLE
(
èxøã_t
,
èxøã_m™_im∂
,
èxøã
);

432 
DECLARE_TABLE
(
åade_ty≥_t
,
åade_ty≥_m™_im∂
,
åade_ty≥
);

433 
DECLARE_TABLE
(
zù_code_t
,
zù_code_m™_im∂
,
zù_code
);

436 
DECLARE_TABLE
(
ˇsh_å™ß˘i⁄_t
,
ˇsh_å™ß˘i⁄_m™_im∂
,
ˇsh_å™ß˘i⁄
);

437 
DECLARE_TABLE
(
£âÀmít_t
,
£âÀmít_m™_im∂
,
£âÀmít
);

438 
DECLARE_TABLE
(
åade_t
,
åade_m™_im∂
,
åade
);

439 
DECLARE_TABLE
(
åade_hi°‹y_t
,
åade_hi°‹y_m™_im∂
,
åade_hi°‹y
);

440 
DECLARE_TABLE
(
åade_ªque°_t
,
åade_ªque°_m™_im∂
,
åade_ªque°
);

443 
DECLARE_TABLE
(
accou¡_≥rmissi⁄_t
,
accou¡_≥rmissi⁄_m™_im∂
,
accou¡_≥rmissi⁄
);

444 
DECLARE_TABLE
(
brokî_t
,
brokî_m™_im∂
,
brokî
);

445 
DECLARE_TABLE
(
com∑ny_t
,
com∑ny_m™_im∂
,
com∑ny
);

446 
DECLARE_TABLE
(
cu°omî_t
,
cu°omî_m™_im∂
,
cu°omî
);

447 
DECLARE_TABLE
(
com∑ny_com≥tô‹_t
,
com∑ny_com≥tô‹_m™_im∂
,
com∑ny_com≥tô‹
);

448 
DECLARE_TABLE
(
£curôy_t
,
£curôy_m™_im∂
,
£curôy
);

449 
DECLARE_TABLE
(
cu°omî_accou¡_t
,
cu°omî_accou¡_m™_im∂
,
cu°omî_accou¡
);

450 
DECLARE_TABLE
(
daûy_m¨kë_t
,
daûy_m¨kë_m™_im∂
,
daûy_m¨kë
);

451 
DECLARE_TABLE
(
cu°omî_èxøã_t
,
cu°omî_èxøã_m™_im∂
,
cu°omî_èxøã
);

452 
DECLARE_TABLE
(
hﬁdög_t
,
hﬁdög_m™_im∂
,
hﬁdög
);

453 
DECLARE_TABLE
(
fö™cül_t
,
fö™cül_m™_im∂
,
fö™cül
);

454 
DECLARE_TABLE
(
hﬁdög_hi°‹y_t
,
hﬁdög_hi°‹y_m™_im∂
,
hﬁdög_hi°‹y
);

455 
DECLARE_TABLE
(
addªss_t
,
addªss_m™_im∂
,
addªss
);

456 
DECLARE_TABLE
(
hﬁdög_summ¨y_t
,
hﬁdög_summ¨y_m™_im∂
,
hﬁdög_summ¨y
);

457 
DECLARE_TABLE
(
œ°_åade_t
,
œ°_åade_m™_im∂
,
œ°_åade
);

458 
DECLARE_TABLE
(
w©ch_li°_t
,
w©ch_li°_m™_im∂
,
w©ch_li°
);

459 
DECLARE_TABLE
(
w©ch_ôem_t
,
w©ch_ôem_m™_im∂
,
w©ch_ôem
);

460 
DECLARE_TABLE
(
√ws_ôem_t
,
√ws_ôem_m™_im∂
,
√ws_ôem
);

461 
DECLARE_TABLE
(
√ws_xªf_t
,
√ws_xªf_m™_im∂
,
√ws_xªf
);

466 
w_rc_t
 
run_⁄e_x˘
(
Reque°
* 
¥eque°
);

469 
DECLARE_TRX
(
brokî_vﬁume
);

470 
DECLARE_TRX
(
cu°omî_posôi⁄
);

471 
DECLARE_TRX
(
m¨kë_„ed
);

472 
DECLARE_TRX
(
m¨kë_w©ch
);

473 
DECLARE_TRX
(
£curôy_dëaû
);

474 
DECLARE_TRX
(
åade_lookup
);

475 
DECLARE_TRX
(
åade_‹dî
);

476 
DECLARE_TRX
(
åade_ªsu…
);

477 
DECLARE_TRX
(
åade_°©us
);

478 
DECLARE_TRX
(
åade_upd©e
);

479 
DECLARE_TRX
(
d©a_maöã«n˚
);

480 
DECLARE_TRX
(
åade_˛ónup
);

484 
DECLARE_TRX
(
p›uœã_smÆl
);

485 
DECLARE_TRX
(
p›uœã_cu°omî
);

486 
DECLARE_TRX
(
p›uœã_addªss
);

487 
DECLARE_TRX
(
p›uœã_ˇ_™d_≠
);

488 
DECLARE_TRX
(
p›uœã_wl_™d_wi
);

489 
DECLARE_TRX
(
p›uœã_com∑ny
);

490 
DECLARE_TRX
(
p›uœã_com∑ny_com≥tô‹
);

491 
DECLARE_TRX
(
p›uœã_daûy_m¨kë
);

492 
DECLARE_TRX
(
p›uœã_fö™cül
);

493 
DECLARE_TRX
(
p›uœã_œ°_åade
);

494 
DECLARE_TRX
(
p›uœã_ni_™d_nx
);

495 
DECLARE_TRX
(
p›uœã_£curôy
);

496 
DECLARE_TRX
(
p›uœã_cu°omî_èxøã
);

497 
DECLARE_TRX
(
p›uœã_brokî
);

498 
DECLARE_TRX
(
p›uœã_hﬁdög
);

499 
DECLARE_TRX
(
p›uœã_hﬁdög_summ¨y
);

500 
DECLARE_TRX
(
p›uœã_unô_åade
);

503 
DECLARE_TRX
(
föd_maxåade_id
);

506 
vútuÆ
 
ív_thªad_öô
();

507 
vútuÆ
 
ív_thªad_föi
();

510 
°©m≠_t
 
	g_°©m≠
;

513 
Sh‹eTPCETrxSèts
 
	g_œ°_°©s
;

514 
vútuÆ
 
ª£t_°©s
();

515 
Sh‹eTPCETrxSèts
 
_gë_°©s
();

518 
w_rc_t
 
db_¥öt
(
löes
);

521 
w_rc_t
 
db_„tch
();

527 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/shore_tpce_schema.h

32 #i‚de‡
__SHORE_TPCE_SCHEMA_H


33 
	#__SHORE_TPCE_SCHEMA_H


	)

35 
	~<m©h.h
>

37 
	~"sm_vas.h
"

38 
	~"utû.h
"

40 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

41 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

46 
ENTER_NAMESPACE
(
ç˚
);

64 
DECLARE_TABLE_SCHEMA_PD
(
£˘‹_t
);

66 
DECLARE_TABLE_SCHEMA_PD
(
ch¨ge_t
);

67 
DECLARE_TABLE_SCHEMA_PD
(
commissi⁄_øã_t
);

68 
DECLARE_TABLE_SCHEMA_PD
(
exch™ge_t
);

69 
DECLARE_TABLE_SCHEMA_PD
(
ödu°ry_t
);

70 
DECLARE_TABLE_SCHEMA_PD
(
°©us_ty≥_t
);

71 
DECLARE_TABLE_SCHEMA_PD
(
èxøã_t
);

72 
DECLARE_TABLE_SCHEMA_PD
(
åade_ty≥_t
);

73 
DECLARE_TABLE_SCHEMA_PD
(
zù_code_t
);

76 
DECLARE_TABLE_SCHEMA_PD
(
ˇsh_å™ß˘i⁄_t
);

77 
DECLARE_TABLE_SCHEMA_PD
(
£âÀmít_t
);

78 
DECLARE_TABLE_SCHEMA_PD
(
åade_t
);

79 
DECLARE_TABLE_SCHEMA_PD
(
åade_hi°‹y_t
);

80 
DECLARE_TABLE_SCHEMA_PD
(
åade_ªque°_t
);

83 
DECLARE_TABLE_SCHEMA_PD
(
accou¡_≥rmissi⁄_t
);

84 
DECLARE_TABLE_SCHEMA_PD
(
brokî_t
);

85 
DECLARE_TABLE_SCHEMA_PD
(
com∑ny_t
);

86 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_t
);

87 
DECLARE_TABLE_SCHEMA_PD
(
com∑ny_com≥tô‹_t
);

88 
DECLARE_TABLE_SCHEMA_PD
(
£curôy_t
);

89 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_accou¡_t
);

90 
DECLARE_TABLE_SCHEMA_PD
(
daûy_m¨kë_t
);

91 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_èxøã_t
);

92 
DECLARE_TABLE_SCHEMA_PD
(
hﬁdög_t
);

93 
DECLARE_TABLE_SCHEMA_PD
(
fö™cül_t
);

94 
DECLARE_TABLE_SCHEMA_PD
(
hﬁdög_hi°‹y_t
);

95 
DECLARE_TABLE_SCHEMA_PD
(
addªss_t
);

96 
DECLARE_TABLE_SCHEMA_PD
(
hﬁdög_summ¨y_t
);

97 
DECLARE_TABLE_SCHEMA_PD
(
œ°_åade_t
);

98 
DECLARE_TABLE_SCHEMA_PD
(
w©ch_ôem_t
);

99 
DECLARE_TABLE_SCHEMA_PD
(
√ws_ôem_t
);

100 
DECLARE_TABLE_SCHEMA_PD
(
w©ch_li°_t
);

101 
DECLARE_TABLE_SCHEMA_PD
(
√ws_xªf_t
);

104 
DECLARE_TABLE_SCHEMA_PD
(
dimísi⁄_t
);

106 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/shore_tpce_schema_man.h

35 #i‚de‡
__SHORE_TPCE_SCHEMA_MANAGER_H


36 
	#__SHORE_TPCE_SCHEMA_MANAGER_H


	)

38 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_schema.h
"

39 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

41 
usög
 
«me•a˚
 
	gTPCE
;

42 
usög
 
«me•a˚
 
	gsh‹e
;

45 
ENTER_NAMESPACE
(
ç˚
);

56 
˛ass
 
	gaccou¡_≥rmissi⁄_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
accou¡_≥rmissi⁄_t
>

58 
èbÀ_row_t
 
	taccou¡_≥rmissi⁄_tu∂e
;

59 
	gödex_sˇn_ôî_im∂
 <
	taccou¡_≥rmissi⁄_t
> 
	taccou¡_≥rmissi⁄_ödex_ôî
;

61 
	gpublic
:

63 
accou¡_≥rmissi⁄_m™_im∂
(
accou¡_≥rmissi⁄_t
* 
aAccou¡_Pîmissi⁄Desc
)

64 : 
èbÀ_m™_im∂
<
accou¡_≥rmissi⁄_t
>(
aAccou¡_Pîmissi⁄Desc
) { }

66 ~
accou¡_≥rmissi⁄_m™_im∂
() { }

68 
w_rc_t
 
≠_ödex_¥obe
(
ss_m
* 
db
, 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
,

69 c⁄° 
TIdít
 
ac˘_id
,

70 c⁄° * 
exec_èx_id
);

72 
w_rc_t
 
≠_gë_ôî_by_ödex
(
ss_m
* 
db
,

73 
accou¡_≥rmissi⁄_ödex_ôî
* &
ôî
,

74 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
,

75 
ªp_row_t
 &
ª∂ow
,

76 
ªp_row_t
 &
ªphigh
,

77 c⁄° 
TIdít
 
ac˘_id
,

78 
lock_mode_t
 
Æm
 = 
SH
,

79 
boﬁ
 
√ed_tu∂e
 = 
åue
);

81 
w_rc_t
 
≠_upd©e_a˛
(
ss_m
* 
db
, 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
, c⁄° * 
a˛
, 
lock_mode_t
 
lm
 = 
EX
);

89 
˛ass
 
	gbrokî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
brokî_t
>

91 
èbÀ_row_t
 
	tbrokî_tu∂e
;

92 
	gödex_sˇn_ôî_im∂
 <
	tbrokî_t
> 
	tbrokî_ödex_ôî
;

94 
	gpublic
:

96 
brokî_m™_im∂
(
brokî_t
* 
aBrokîDesc
)

97 : 
èbÀ_m™_im∂
<
brokî_t
>(
aBrokîDesc
)

100 ~
brokî_m™_im∂
() { }

102 
w_rc_t
 
brokî_upd©e_ˇ_¡_by_ödex
(
ss_m
* 
db
, 
brokî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
brokî_id
,

103 c⁄° 
comm_amou¡
, 
lock_mode_t
 
lm
 = 
EX
);

105 
w_rc_t
 
b_gë_ôî_by_ödex2
(
ss_m
* 
db
,

106 
brokî_ödex_ôî
* &
ôî
,

107 
brokî_tu∂e
* 
±u∂e
,

108 
ªp_row_t
 &
ª∂ow
,

109 
ªp_row_t
 &
ªphigh
,

110 c⁄° 
TIdít
 
b_id
,

111 
lock_mode_t
 
Æm
 = 
SH
,

112 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

114 
w_rc_t
 
b_gë_ôî_by_ödex3
(
ss_m
* 
db
,

115 
brokî_ödex_ôî
* &
ôî
,

116 
brokî_tu∂e
* 
±u∂e
,

117 
ªp_row_t
 &
ª∂ow
,

118 
ªp_row_t
 &
ªphigh
,

119 c⁄° * 
b_«me
,

120 
lock_mode_t
 
Æm
 = 
SH
,

121 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

129 
˛ass
 
	gˇsh_å™ß˘i⁄_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ˇsh_å™ß˘i⁄_t
>

131 
èbÀ_row_t
 
	tˇsh_å™ß˘i⁄_tu∂e
;

133 
	gpublic
:

135 
ˇsh_å™ß˘i⁄_m™_im∂
(
ˇsh_å™ß˘i⁄_t
* 
aCash_Tønß˘i⁄Desc
)

136 : 
èbÀ_m™_im∂
<
ˇsh_å™ß˘i⁄_t
>(
aCash_Tønß˘i⁄Desc
) { }

138 ~
ˇsh_å™ß˘i⁄_m™_im∂
() { }

140 
w_rc_t
 
˘_ödex_¥obe
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
å_id
);

142 
w_rc_t
 
˘_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
t_id
);

144 
w_rc_t
 
˘_upd©e_«me
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° * 
˘_«me
, 
lock_mode_t
 
lm
 = 
EX
);

152 
˛ass
 
	gch¨ge_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ch¨ge_t
>

154 
èbÀ_row_t
 
	tch¨ge_tu∂e
;

155 
	gödex_sˇn_ôî_im∂
 <
	tch¨ge_t
> 
	tch¨ge_ödex_ôî
;

157 
	gpublic
:

159 
ch¨ge_m™_im∂
(
ch¨ge_t
* 
aCh¨geDesc
)

160 : 
èbÀ_m™_im∂
<
ch¨ge_t
>(
aCh¨geDesc
) { }

162 ~
ch¨ge_m™_im∂
() { }

164 
w_rc_t
 
ch_ödex_¥obe
(
ss_m
* 
db
, 
ch¨ge_tu∂e
* 
±u∂e
, c⁄° 
cu°_tõr
, c⁄° * 
åade_ty≥_id
);

173 
˛ass
 
	gcommissi⁄_øã_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
commissi⁄_øã_t
>

175 
èbÀ_row_t
 
	tcommissi⁄_øã_tu∂e
;

176 
	gödex_sˇn_ôî_im∂
 <
	tcommissi⁄_øã_t
> 
	tcommissi⁄_øã_ödex_ôî
;

178 
	gpublic
:

180 
commissi⁄_øã_m™_im∂
(
commissi⁄_øã_t
* 
aCommissi⁄_R©eDesc
)

181 : 
èbÀ_m™_im∂
<
commissi⁄_øã_t
>(
aCommissi⁄_R©eDesc
) { }

183 ~
commissi⁄_øã_m™_im∂
() { }

185 
w_rc_t
 
¸_gë_ôî_by_ödex
(
ss_m
* 
db
,

186 
commissi⁄_øã_ödex_ôî
* &
ôî
,

187 
commissi⁄_øã_tu∂e
* 
±u∂e
,

188 
ªp_row_t
 &
ª∂ow
,

189 
ªp_row_t
 &
ªphigh
,

190 c⁄° 
c_tõr
,

191 c⁄° * 
ty≥_id
,

192 c⁄° * 
s_ex_id
,

193 c⁄° 
åade_qty
,

194 
lock_mode_t
 
Æm
 = 
SH
,

195 
boﬁ
 
√ed_tu∂e
 = 
åue
);

204 
˛ass
 
	gcom∑ny_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
com∑ny_t
>

206 
èbÀ_row_t
 
	tcom∑ny_tu∂e
;

207 
	gödex_sˇn_ôî_im∂
 <
	tcom∑ny_t
> 
	tcom∑ny_ödex_ôî
;

209 
	gpublic
:

211 
com∑ny_m™_im∂
(
com∑ny_t
* 
aCom∑nyDesc
)

212 : 
èbÀ_m™_im∂
<
com∑ny_t
>(
aCom∑nyDesc
) { }

214 ~
com∑ny_m™_im∂
() { }

216 
w_rc_t
 
co_gë_ôî_by_ödex2
(
ss_m
* 
db
, 
com∑ny_ödex_ôî
* &
ôî
, 
com∑ny_tu∂e
* 
±u∂e
, 
ªp_row_t
 &
ª∂ow
,Ñï_row_à&
ªphigh
,

217 c⁄° * 
co_«me
, 
lock_mode_t
 
Æm
 = 
SH
, 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

219 
w_rc_t
 
co_ödex_¥obe
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
co_id
);

221 
w_rc_t
 
co_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
co_id
);

223 
w_rc_t
 
co_upd©e_•øã
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° * 
•øã
, 
lock_mode_t
 
lm
 = 
EX
);

225 
w_rc_t
 
co_gë_ôî_by_ödex3
(
ss_m
* 
db
, 
com∑ny_ödex_ôî
* &
ôî
, 
com∑ny_tu∂e
* 
±u∂e
, 
ªp_row_t
 &
ª∂ow
,Ñï_row_à&
ªphigh
,

226 c⁄° * 
ö_id
, 
lock_mode_t
 
Æm
 = 
SH
, 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

235 
˛ass
 
	gcu°omî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_t
>

237 
èbÀ_row_t
 
	tcu°omî_tu∂e
;

238 
	gödex_sˇn_ôî_im∂
 <
	tcu°omî_t
> 
	tcu°omî_ödex_ôî
;

239 
	gpublic
:

241 
cu°omî_m™_im∂
(
cu°omî_t
* 
aCu°omîDesc
)

242 : 
èbÀ_m™_im∂
<
cu°omî_t
>(
aCu°omîDesc
) { }

244 ~
cu°omî_m™_im∂
() { }

246 
w_rc_t
 
c_ödex_¥obe
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
cu°_id
);

248 
w_rc_t
 
c_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
cu°_id
);

250 
w_rc_t
 
c_upd©e_emaû2
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° * 
emaû2
, 
lock_mode_t
 
Æm
 = 
EX
);

252 
w_rc_t
 
c_gë_ôî_by_ödex2
(
ss_m
* 
db
,

253 
cu°omî_ödex_ôî
* &
ôî
,

254 
cu°omî_tu∂e
* 
±u∂e
,

255 
ªp_row_t
 &
ª∂ow
,

256 
ªp_row_t
 &
ªphigh
,

257 c⁄° * 
èx_id
,

258 
lock_mode_t
 
Æm
 = 
SH
,

259 
boﬁ
 
√ed_tu∂e
 = 
åue
);

261 
w_rc_t
 
c_gë_ôî_by_ödex3
(
ss_m
* 
db
,

262 
cu°omî_ödex_ôî
* &
ôî
,

263 
cu°omî_tu∂e
* 
±u∂e
,

264 
ªp_row_t
 &
ª∂ow
,

265 
ªp_row_t
 &
ªphigh
,

266 c⁄° 
TIdít
 
cu°_id
,

267 
lock_mode_t
 
Æm
 = 
SH
,

268 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

277 
˛ass
 
	gcu°omî_accou¡_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_accou¡_t
>

279 
èbÀ_row_t
 
	tcu°omî_accou¡_tu∂e
;

280 
	gödex_sˇn_ôî_im∂
 <
	tcu°omî_accou¡_t
> 
	tcu°omî_accou¡_ödex_ôî
;

282 
	gpublic
:

284 
cu°omî_accou¡_m™_im∂
(
cu°omî_accou¡_t
* 
aCu°omî_Accou¡Desc
)

285 : 
èbÀ_m™_im∂
<
cu°omî_accou¡_t
>(
aCu°omî_Accou¡Desc
) { }

287 ~
cu°omî_accou¡_m™_im∂
() { }

289 
w_rc_t
 
ˇ_ödex_¥obe
(
ss_m
* 
db
, 
cu°omî_accou¡_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ac˘_id
);

291 
w_rc_t
 
ˇ_upd©e_bÆ
(
ss_m
* 
db
, 
cu°omî_accou¡_tu∂e
* 
±u∂e
,

292 c⁄° 
TIdít
 
ac˘_id
, c⁄° 
£_amou¡
,

293 
lock_mode_t
 
Æm
 = 
EX
);

295 
w_rc_t
 
ˇ_gë_ôî_by_ödex2
(
ss_m
* 
db
,

296 
cu°omî_accou¡_ödex_ôî
* &
ôî
,

297 
cu°omî_accou¡_tu∂e
* 
±u∂e
,

298 
ªp_row_t
 &
ª∂ow
,

299 
ªp_row_t
 &
ªphigh
,

300 c⁄° 
TIdít
 
cu°_id
,

301 
lock_mode_t
 
Æm
 = 
SH
,

302 
boﬁ
 
√ed_tu∂e
 = 
åue
);

311 
˛ass
 
	gcu°omî_èxøã_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_èxøã_t
>

313 
èbÀ_row_t
 
	tcu°omî_èxøã_tu∂e
;

314 
	gödex_sˇn_ôî_im∂
 <
	tcu°omî_èxøã_t
> 
	tcu°omî_èxøã_ödex_ôî
;

316 
	gpublic
:

318 
cu°omî_èxøã_m™_im∂
(
cu°omî_èxøã_t
* 
aCu°omî_TaxøãDesc
)

319 : 
èbÀ_m™_im∂
<
cu°omî_èxøã_t
>(
aCu°omî_TaxøãDesc
) { }

321 ~
cu°omî_èxøã_m™_im∂
() { }

323 
w_rc_t
 
cx_gë_ôî_by_ödex
(
ss_m
* 
db
,

324 
cu°omî_èxøã_ödex_ôî
* &
ôî
,

325 
cu°omî_èxøã_tu∂e
* 
±u∂e
,

326 
ªp_row_t
 &
ª∂ow
,

327 
ªp_row_t
 &
ªphigh
,

328 c⁄° 
TIdít
 
cu°_id
,

329 
lock_mode_t
 
Æm
 = 
SH
,

330 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

332 
w_rc_t
 
cx_upd©e_txid
(
ss_m
* 
db
, 
cu°omî_èxøã_tu∂e
* 
±u∂e
, c⁄° * 
√w_èx_øã
, 
lock_mode_t
 
lm
 = 
EX
);

341 
˛ass
 
	ghﬁdög_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
hﬁdög_t
>

343 
èbÀ_row_t
 
	thﬁdög_tu∂e
;

344 
	gödex_sˇn_ôî_im∂
 <
	thﬁdög_t
> 
	thﬁdög_ödex_ôî
;

345 
	gpublic
:

347 
hﬁdög_m™_im∂
(
hﬁdög_t
* 
aHﬁdögDesc
)

348 : 
èbÀ_m™_im∂
<
hﬁdög_t
>(
aHﬁdögDesc
)

351 ~
hﬁdög_m™_im∂
() { }

353 
w_rc_t
 
h_gë_ôî_by_ödex2
(
ss_m
* 
db
,

354 
hﬁdög_ödex_ôî
* &
ôî
,

355 
hﬁdög_tu∂e
* 
±u∂e
,

356 
ªp_row_t
 &
ª∂ow
,

357 
ªp_row_t
 &
ªphigh
,

358 c⁄° 
TIdít
 
ac˘_id
,

359 c⁄° * 
symbﬁ
,

360 
boﬁ
 
is_backw¨d
 = 
Ál£
,

361 
lock_mode_t
 
Æm
 = 
SH
,

362 
boﬁ
 
√ed_tu∂e
 = 
åue
);

364 
w_rc_t
 
h_upd©e_qty
(
ss_m
* 
db
, 
hﬁdög_tu∂e
* 
±u∂e
, c⁄° 
qty
, 
lock_mode_t
 
lm
 = 
EX
);

366 
w_rc_t
 
h_dñëe_tu∂e
(
ss_m
* 
db
, 
hﬁdög_tu∂e
* 
±u∂e
, 
rid_t
 
rid
);

375 
˛ass
 
	ghﬁdög_hi°‹y_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
hﬁdög_hi°‹y_t
>

377 
èbÀ_row_t
 
	thﬁdög_hi°‹y_tu∂e
;

378 
	gödex_sˇn_ôî_im∂
 <
	thﬁdög_hi°‹y_t
> 
	thﬁdög_hi°‹y_ödex_ôî
;

380 
	gpublic
:

382 
hﬁdög_hi°‹y_m™_im∂
(
hﬁdög_hi°‹y_t
* 
aHﬁdög_Hi°‹yDesc
)

383 : 
èbÀ_m™_im∂
<
hﬁdög_hi°‹y_t
>(
aHﬁdög_Hi°‹yDesc
)

386 ~
hﬁdög_hi°‹y_m™_im∂
() { }

388 
w_rc_t
 
hh_gë_ôî_by_ödex2
(
ss_m
* 
db
,

389 
hﬁdög_hi°‹y_ödex_ôî
* &
ôî
,

390 
hﬁdög_hi°‹y_tu∂e
* 
±u∂e
,

391 
ªp_row_t
 &
ª∂ow
,

392 
ªp_row_t
 &
ªphigh
,

393 
TIdít
 
åade_id
,

394 
lock_mode_t
 
Æm
 = 
SH
,

395 
boﬁ
 
√ed_tu∂e
 = 
åue
);

404 
˛ass
 
	ghﬁdög_summ¨y_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
hﬁdög_summ¨y_t
>

406 
èbÀ_row_t
 
	thﬁdög_summ¨y_tu∂e
;

407 
	gödex_sˇn_ôî_im∂
 <
	thﬁdög_summ¨y_t
> 
	thﬁdög_summ¨y_ödex_ôî
;

409 
	gpublic
:

411 
hﬁdög_summ¨y_m™_im∂
(
hﬁdög_summ¨y_t
* 
aHﬁdög_Summ¨yDesc
)

412 : 
èbÀ_m™_im∂
<
hﬁdög_summ¨y_t
>(
aHﬁdög_Summ¨yDesc
) { }

414 ~
hﬁdög_summ¨y_m™_im∂
() { }

416 
w_rc_t
 
hs_ödex_¥obe
(
ss_m
* 
db
,

417 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

418 c⁄° 
TIdít
 
ac˘_id
,

419 c⁄° * 
symbﬁ
);

421 
w_rc_t
 
hs_upd©e_qty
(
ss_m
* 
db
,

422 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

423 c⁄° 
TIdít
 
ac˘_id
,

424 c⁄° * 
symbﬁ
,

425 c⁄° 
qty
,

426 
lock_mode_t
 
lm
 = 
EX
);

428 
w_rc_t
 
hs_gë_ôî_by_ödex
(
ss_m
* 
db
,

429 
hﬁdög_summ¨y_ödex_ôî
* &
ôî
,

430 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

431 
ªp_row_t
 &
ª∂ow
,

432 
ªp_row_t
 &
ªphigh
,

433 c⁄° 
TIdít
 
ac˘_id
,

434 
boﬁ
 
√ed_tu∂e
 = 
åue
,

435 
lock_mode_t
 
Æm
 = 
SH
);

444 
˛ass
 
	gœ°_åade_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
œ°_åade_t
>

446 
èbÀ_row_t
 
	tœ°_åade_tu∂e
;

448 
	gpublic
:

450 
œ°_åade_m™_im∂
(
œ°_åade_t
* 
aLa°_TødeDesc
)

451 : 
èbÀ_m™_im∂
<
œ°_åade_t
>(
aLa°_TødeDesc
) { }

453 ~
œ°_åade_m™_im∂
() { }

455 
w_rc_t
 
…_ödex_¥obe
(
ss_m
* 
db
, 
œ°_åade_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
);

457 
w_rc_t
 
…_upd©e_by_ödex
(
ss_m
* 
db
, 
œ°_åade_tu∂e
* 
±u∂e
,

458 c⁄° * 
symbﬁ
,

459 c⁄° 
¥i˚_quŸe
,

460 c⁄° 
åade_qty
,

461 c⁄° 
myTime
 
now_dts
,

462 
lock_mode_t
 
lm
 = 
EX
);

471 
˛ass
 
	g£curôy_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
£curôy_t
>

473 
èbÀ_row_t
 
	t£curôy_tu∂e
;

474 
	gödex_sˇn_ôî_im∂
 <
	t£curôy_t
> 
	t£curôy_ödex_ôî
;

476 
	gpublic
:

478 
£curôy_m™_im∂
(
£curôy_t
* 
aSecurôyDesc
)

479 : 
èbÀ_m™_im∂
<
£curôy_t
>(
aSecurôyDesc
) { }

481 ~
£curôy_m™_im∂
() { }

483 
w_rc_t
 
s_ödex_¥obe
(
ss_m
* 
db
, 
£curôy_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
);

485 
w_rc_t
 
s_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
£curôy_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
);

487 
w_rc_t
 
s_upd©e_ed
(
ss_m
* 
db
, 
£curôy_tu∂e
* 
±u∂e
, c⁄° 
myTime
 
exch_d©e
, 
lock_mode_t
 
lm
 = 
EX
);

489 
w_rc_t
 
s_gë_ôî_by_ödex
(
ss_m
* 
db
,

490 
£curôy_ödex_ôî
* &
ôî
,

491 
£curôy_tu∂e
* 
±u∂e
,

492 
ªp_row_t
 &
ª∂ow
,

493 
ªp_row_t
 &
ªphigh
,

494 c⁄° * 
symbﬁ
,

495 
lock_mode_t
 
Æm
 = 
SH
,

496 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

498 
w_rc_t
 
s_gë_ôî_by_ödex4
(
ss_m
* 
db
,

499 
£curôy_ödex_ôî
* &
ôî
,

500 
£curôy_tu∂e
* 
±u∂e
,

501 
ªp_row_t
 &
ª∂ow
,

502 
ªp_row_t
 &
ªphigh
,

503 c⁄° 
TIdít
 
co_id
,

504 
lock_mode_t
 
Æm
 = 
SH
,

505 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

507 
w_rc_t
 
s_gë_ôî_by_ödex4
(
ss_m
* 
db
,

508 
£curôy_ödex_ôî
* &
ôî
,

509 
£curôy_tu∂e
* 
±u∂e
,

510 
ªp_row_t
 &
ª∂ow
,

511 
ªp_row_t
 &
ªphigh
,

512 c⁄° 
TIdít
 
co_id
,

513 c⁄° * 
issue
,

514 
lock_mode_t
 
Æm
 = 
SH
,

515 
boﬁ
 
√ed_tu∂e
 = 
åue
);

524 
˛ass
 
	g£âÀmít_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
£âÀmít_t
>

526 
èbÀ_row_t
 
	t£âÀmít_tu∂e
;

528 
	gpublic
:

530 
£âÀmít_m™_im∂
(
£âÀmít_t
* 
aSëéemítDesc
)

531 : 
èbÀ_m™_im∂
<
£âÀmít_t
>(
aSëéemítDesc
) { }

533 ~
£âÀmít_m™_im∂
() { }

535 
w_rc_t
 
£_ödex_¥obe
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
å_id
);

537 
w_rc_t
 
£_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
å_id
);

539 
w_rc_t
 
£_upd©e_«me
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
, c⁄° * 
ˇsh_ty≥
, 
lock_mode_t
 
lm
 = 
EX
);

548 
˛ass
 
	gèxøã_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
èxøã_t
>

550 
èbÀ_row_t
 
	tèxøã_tu∂e
;

552 
	gpublic
:

554 
èxøã_m™_im∂
(
èxøã_t
* 
aTaxøãDesc
)

555 : 
èbÀ_m™_im∂
<
èxøã_t
>(
aTaxøãDesc
)

558 ~
èxøã_m™_im∂
() { }

560 
w_rc_t
 
tx_ödex_¥obe
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_id
);

562 
w_rc_t
 
tx_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_id
);

564 
w_rc_t
 
tx_upd©e_«me
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_«me
, 
lock_mode_t
 
lm
 = 
EX
);

573 
˛ass
 
	gåade_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
åade_t
>

575 
èbÀ_row_t
 
	tåade_tu∂e
;

576 
	gödex_sˇn_ôî_im∂
 <
	tåade_t
> 
	tåade_ödex_ôî
;

577 
	gpublic
:

579 
åade_m™_im∂
(
åade_t
* 
aTødeDesc
)

580 : 
èbÀ_m™_im∂
<
åade_t
>(
aTødeDesc
) { }

582 ~
åade_m™_im∂
() { }

584 
w_rc_t
 
t_ödex_¥obe
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
åade_id
);

586 
w_rc_t
 
t_upd©e_èx_by_ödex
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
t_id
,

587 c⁄° 
èx_amou¡
, 
lock_mode_t
 
lm
 = 
EX
);

589 
w_rc_t
 
t_upd©e_ˇ_td_sci_ç_by_ödex
(
ss_m
* 
db
,

590 
åade_tu∂e
* 
±u∂e
,

591 c⁄° 
TIdít
 
åade_id
,

592 c⁄° 
comm_amou¡
,

593 c⁄° 
myTime
 
åade_dts
,

594 c⁄° * 
°_com∂ëed_id
,

595 c⁄° 
åade_¥i˚
,

596 
lock_mode_t
 
lm
 = 
EX
);

598 
w_rc_t
 
t_gë_ôî_by_ödex
(
ss_m
* 
db
,

599 
åade_ödex_ôî
* &
ôî
,

600 
åade_tu∂e
* 
±u∂e
,

601 
ªp_row_t
 &
ª∂ow
,

602 
ªp_row_t
 &
ªphigh
,

603 c⁄° 
TIdít
 
t_id
,

604 
lock_mode_t
 
Æm
 = 
SH
,

605 
boﬁ
 
√ed_tu∂e
 = 
åue
);

607 
w_rc_t
 
t_gë_ôî_by_ödex2
(
ss_m
* 
db
,

608 
åade_ödex_ôî
* &
ôî
,

609 
åade_tu∂e
* 
±u∂e
,

610 
ªp_row_t
 &
ª∂ow
,

611 
ªp_row_t
 &
ªphigh
,

612 c⁄° 
TIdít
 
ac˘_id
,

613 c⁄° 
myTime
 
°¨t_dts
,

614 c⁄° 
myTime
 
íd_dts
,

615 
boﬁ
 
is_backw¨d
 = 
Ál£
,

616 
boﬁ
 
√ed_tu∂e
 = 
åue
,

617 
lock_mode_t
 
Æm
 = 
SH
);

619 
w_rc_t
 
t_gë_ôî_by_ödex3
(
ss_m
* 
db
,

620 
åade_ödex_ôî
* &
ôî
,

621 
åade_tu∂e
* 
±u∂e
,

622 
ªp_row_t
 &
ª∂ow
,

623 
ªp_row_t
 &
ªphigh
,

624 c⁄° * 
symbﬁ
,

625 c⁄° 
myTime
 
°¨t_dts
,

626 c⁄° 
myTime
 
íd_dts
,

627 
lock_mode_t
 
Æm
 = 
SH
,

628 
boﬁ
 
√ed_tu∂e
 = 
åue
);

630 
w_rc_t
 
t_upd©e_dts_°did_by_ödex
(
ss_m
* 
db
,

631 
åade_tu∂e
* 
±u∂e
,

632 c⁄° 
TIdít
 
ªq_åade_id
,

633 c⁄° 
myTime
 
now_dts
,

634 c⁄° * 
°©us_submôãd
,

635 
lock_mode_t
 
lm
 = 
EX
);

637 
w_rc_t
 
t_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
t_id
);

639 
w_rc_t
 
t_upd©e_«me
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° * 
exec_«me
, 
lock_mode_t
 
lm
 = 
EX
);

648 
˛ass
 
	gåade_hi°‹y_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
åade_hi°‹y_t
>

650 
èbÀ_row_t
 
	tåade_hi°‹y_tu∂e
;

651 
	gödex_sˇn_ôî_im∂
 <
	tåade_hi°‹y_t
> 
	tåade_hi°‹y_ödex_ôî
;

652 
	gpublic
:

654 
åade_hi°‹y_m™_im∂
(
åade_hi°‹y_t
* 
aTøde_Hi°‹yDesc
)

655 : 
èbÀ_m™_im∂
<
åade_hi°‹y_t
>(
aTøde_Hi°‹yDesc
)

658 ~
åade_hi°‹y_m™_im∂
() { }

660 
w_rc_t
 
th_gë_ôî_by_ödex
(
ss_m
* 
db
,

661 
åade_hi°‹y_ödex_ôî
* &
ôî
,

662 
åade_hi°‹y_tu∂e
* 
±u∂e
,

663 
ªp_row_t
 &
ª∂ow
,

664 
ªp_row_t
 &
ªphigh
,

665 c⁄° 
TIdít
 
t_id
,

666 
lock_mode_t
 
Æm
 = 
SH
,

667 
boﬁ
 
√ed_tu∂e
 = 
åue
);

676 
˛ass
 
	gåade_ty≥_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
åade_ty≥_t
>

678 
èbÀ_row_t
 
	tåade_ty≥_tu∂e
;

680 
	gpublic
:

682 
åade_ty≥_m™_im∂
(
åade_ty≥_t
* 
aTøde_Ty≥Desc
)

683 : 
èbÀ_m™_im∂
<
åade_ty≥_t
>(
aTøde_Ty≥Desc
)

686 ~
åade_ty≥_m™_im∂
() { }

688 
w_rc_t
 
â_ödex_¥obe
(
ss_m
* 
db
, 
åade_ty≥_tu∂e
* 
±u∂e
, c⁄° * 
åade_ty≥_id
);

697 
˛ass
 
	g°©us_ty≥_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
°©us_ty≥_t
>

699 
èbÀ_row_t
 
	t°©us_ty≥_tu∂e
;

701 
	gpublic
:

703 
°©us_ty≥_m™_im∂
(
°©us_ty≥_t
* 
aSètus_Ty≥Desc
)

704 : 
èbÀ_m™_im∂
<
°©us_ty≥_t
>(
aSètus_Ty≥Desc
)

707 ~
°©us_ty≥_m™_im∂
() { }

709 
w_rc_t
 
°_ödex_¥obe
(
ss_m
* 
db
, 
°©us_ty≥_tu∂e
* 
±u∂e
, c⁄° * 
°_id
);

718 
˛ass
 
	g£˘‹_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
£˘‹_t
>

720 
èbÀ_row_t
 
	t£˘‹_tu∂e
;

721 
	gödex_sˇn_ôî_im∂
 <
	t£˘‹_t
> 
	t£˘‹_ödex_ôî
;

723 
	gpublic
:

725 
£˘‹_m™_im∂
(
£˘‹_t
* 
aSe˘‹Desc
)

726 : 
èbÀ_m™_im∂
<
£˘‹_t
>(
aSe˘‹Desc
)

729 ~
£˘‹_m™_im∂
() { }

731 
w_rc_t
 
sc_gë_ôî_by_ödex2
(
ss_m
* 
db
,

732 
£˘‹_ödex_ôî
* &
ôî
,

733 
£˘‹_tu∂e
* 
±u∂e
,

734 
ªp_row_t
 &
ª∂ow
,

735 
ªp_row_t
 &
ªphigh
,

736 c⁄° * 
sc_«me
,

737 
lock_mode_t
 
Æm
 = 
SH
,

738 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

747 
˛ass
 
	gexch™ge_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
exch™ge_t
>

749 
èbÀ_row_t
 
	texch™ge_tu∂e
;

750 
	gödex_sˇn_ôî_im∂
 <
	texch™ge_t
> 
	texch™ge_ödex_ôî
;

752 
	gpublic
:

754 
exch™ge_m™_im∂
(
exch™ge_t
* 
aExch™geDesc
)

755 : 
èbÀ_m™_im∂
<
exch™ge_t
>(
aExch™geDesc
)

758 ~
exch™ge_m™_im∂
() { }

760 
w_rc_t
 
ex_upd©e_desc
(
ss_m
* 
db
, 
exch™ge_tu∂e
* 
±u∂e
, c⁄° * 
√w_desc
, 
lock_mode_t
 
Æm
 = 
EX
);

762 
w_rc_t
 
ex_ödex_¥obe
(
ss_m
* 
db
, 
exch™ge_tu∂e
* 
±u∂e
, c⁄° * 
id
);

771 
˛ass
 
	gödu°ry_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ödu°ry_t
>

773 
èbÀ_row_t
 
	tödu°ry_tu∂e
;

774 
	gödex_sˇn_ôî_im∂
 <
	tödu°ry_t
> 
	tödu°ry_ödex_ôî
;

776 
	gpublic
:

778 
ödu°ry_m™_im∂
(
ödu°ry_t
* 
aIndu°ryDesc
)

779 : 
èbÀ_m™_im∂
<
ödu°ry_t
>(
aIndu°ryDesc
)

782 ~
ödu°ry_m™_im∂
() { }

784 
w_rc_t
 
ö_ödex_¥obe
(
ss_m
* 
db
, 
ödu°ry_tu∂e
* 
±u∂e
, c⁄° * 
id
);

786 
w_rc_t
 
ö_gë_ôî_by_ödex2
(
ss_m
* 
db
,

787 
ödu°ry_ödex_ôî
* &
ôî
,

788 
ödu°ry_tu∂e
* 
±u∂e
,

789 
ªp_row_t
 &
ª∂ow
,

790 
ªp_row_t
 &
ªphigh
,

791 c⁄° * 
ö_«me
,

792 
lock_mode_t
 
Æm
 = 
SH
,

793 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

795 
w_rc_t
 
ö_gë_ôî_by_ödex3
(
ss_m
* 
db
,

796 
ödu°ry_ödex_ôî
* &
ôî
,

797 
ödu°ry_tu∂e
* 
±u∂e
,

798 
ªp_row_t
 &
ª∂ow
,

799 
ªp_row_t
 &
ªphigh
,

800 c⁄° * 
sc_id
,

801 
lock_mode_t
 
Æm
 = 
SH
,

802 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

811 
˛ass
 
	gzù_code_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
zù_code_t
>

813 
èbÀ_row_t
 
	tzù_code_tu∂e
;

814 
	gödex_sˇn_ôî_im∂
 <
	tzù_code_t
> 
	tzù_code_ödex_ôî
;

815 
	gpublic
:

817 
zù_code_m™_im∂
(
zù_code_t
* 
aZù_CodeDesc
)

818 : 
èbÀ_m™_im∂
<
zù_code_t
>(
aZù_CodeDesc
) { }

820 ~
zù_code_m™_im∂
() { }

822 
w_rc_t
 
zc_ödex_¥obe
(
ss_m
* 
db
, 
zù_code_tu∂e
* 
±u∂e
, c⁄° * 
zc_code
);

831 
˛ass
 
	gåade_ªque°_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
åade_ªque°_t
>

833 
èbÀ_row_t
 
	tåade_ªque°_tu∂e
;

834 
	gödex_sˇn_ôî_im∂
 <
	tåade_ªque°_t
> 
	tåade_ªque°_ödex_ôî
;

835 
	gpublic
:

837 
åade_ªque°_m™_im∂
(
åade_ªque°_t
* 
aTøde_Reque°Desc
)

838 : 
èbÀ_m™_im∂
<
åade_ªque°_t
>(
aTøde_Reque°Desc
)

841 ~
åade_ªque°_m™_im∂
() { }

843 
w_rc_t
 
å_dñëe_tu∂e
(
ss_m
* 
db
, 
åade_ªque°_tu∂e
* 
±u∂e
, 
rid_t
 
rid
);

845 
w_rc_t
 
å_gë_ôî_by_ödex4
(
ss_m
* 
db
,

846 
åade_ªque°_ödex_ôî
* &
ôî
,

847 
åade_ªque°_tu∂e
* 
±u∂e
,

848 
ªp_row_t
 &
ª∂ow
,

849 
ªp_row_t
 &
ªphigh
,

850 c⁄° * 
å_s_symb
,

851 c⁄° 
TIdít
 
å_b_id
,

852 
lock_mode_t
 
Æm
 = 
SH
,

853 
boﬁ
 
√ed_tu∂e
 = 
åue
);

855 
w_rc_t
 
å_gë_ôî_by_ödex4
(
ss_m
* 
db
,

856 
åade_ªque°_ödex_ôî
* &
ôî
,

857 
åade_ªque°_tu∂e
* 
±u∂e
,

858 
ªp_row_t
 &
ª∂ow
,

859 
ªp_row_t
 &
ªphigh
,

860 c⁄° * 
å_s_symb
,

861 
lock_mode_t
 
Æm
 = 
SH
,

862 
boﬁ
 
√ed_tu∂e
 = 
åue
);

871 
˛ass
 
	gcom∑ny_com≥tô‹_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
com∑ny_com≥tô‹_t
>

873 
èbÀ_row_t
 
	tcom∑ny_com≥tô‹_tu∂e
;

874 
	gödex_sˇn_ôî_im∂
 <
	tcom∑ny_com≥tô‹_t
> 
	tcom∑ny_com≥tô‹_ödex_ôî
;

876 
	gpublic
:

878 
com∑ny_com≥tô‹_m™_im∂
(
com∑ny_com≥tô‹_t
* 
aCom∑ny_Com≥tô‹Desc
)

879 : 
èbÀ_m™_im∂
<
com∑ny_com≥tô‹_t
>(
aCom∑ny_Com≥tô‹Desc
)

882 ~
com∑ny_com≥tô‹_m™_im∂
() { }

884 
w_rc_t
 
cc_gë_ôî_by_ödex
(
ss_m
* 
db
,

885 
com∑ny_com≥tô‹_ödex_ôî
* &
ôî
,

886 
com∑ny_com≥tô‹_tu∂e
* 
±u∂e
,

887 
ªp_row_t
 &
ª∂ow
,

888 
ªp_row_t
 &
ªphigh
,

889 c⁄° 
TIdít
 
co_id
,

890 
boﬁ
 
√ed_tu∂e
 = 
Ál£
,

891 
lock_mode_t
 
Æm
 = 
SH
);

900 
˛ass
 
	gdaûy_m¨kë_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
daûy_m¨kë_t
>

902 
èbÀ_row_t
 
	tdaûy_m¨kë_tu∂e
;

903 
	gödex_sˇn_ôî_im∂
 <
	tdaûy_m¨kë_t
> 
	tdaûy_m¨kë_ödex_ôî
;

904 
	gpublic
:

906 
daûy_m¨kë_m™_im∂
(
daûy_m¨kë_t
* 
aDaûy_M¨këDesc
)

907 : 
èbÀ_m™_im∂
<
daûy_m¨kë_t
>(
aDaûy_M¨këDesc
)

910 ~
daûy_m¨kë_m™_im∂
() { }

912 
w_rc_t
 
dm_ödex_¥obe
(
ss_m
* 
db
, 
daûy_m¨kë_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
, c⁄° 
myTime
 
°¨t_d©e
);

914 
w_rc_t
 
dm_upd©e_vﬁ
(
ss_m
* 
db
, 
daûy_m¨kë_tu∂e
* 
±u∂e
, c⁄° 
vﬁ_ö¸
, 
lock_mode_t
 
lm
 = 
EX
);

916 
w_rc_t
 
dm_gë_ôî_by_ödex
(
ss_m
* 
db
,

917 
daûy_m¨kë_ödex_ôî
* &
ôî
,

918 
daûy_m¨kë_tu∂e
* 
±u∂e
,

919 
ªp_row_t
 &
ª∂ow
,

920 
ªp_row_t
 &
ªphigh
,

921 c⁄° * 
symbﬁ
,

922 c⁄° 
myTime
 
°¨t_day
 = 0,

923 
lock_mode_t
 
Æm
 = 
SH
,

924 
boﬁ
 
√ed_tu∂e
 = 
åue
);

933 
˛ass
 
	gfö™cül_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
fö™cül_t
>

935 
èbÀ_row_t
 
	tfö™cül_tu∂e
;

936 
	gödex_sˇn_ôî_im∂
 <
	tfö™cül_t
> 
	tfö™cül_ödex_ôî
;

937 
	gpublic
:

939 
fö™cül_m™_im∂
(
fö™cül_t
* 
aFö™cülDesc
)

940 : 
èbÀ_m™_im∂
<
fö™cül_t
>(
aFö™cülDesc
)

943 ~
fö™cül_m™_im∂
() { }

945 
w_rc_t
 
fi_upd©e_desc
(
ss_m
* 
db
, 
fö™cül_tu∂e
* 
±u∂e
, c⁄° 
myTime
 
√w_qå_°¨t_d©e
, 
lock_mode_t
 
Æm
 = 
EX
);

947 
w_rc_t
 
fi_gë_ôî_by_ödex
(
ss_m
* 
db
,

948 
fö™cül_ödex_ôî
* &
ôî
,

949 
fö™cül_tu∂e
* 
±u∂e
,

950 
ªp_row_t
 &
ª∂ow
,

951 
ªp_row_t
 &
ªphigh
,

952 c⁄° 
TIdít
 
co_id
,

953 
lock_mode_t
 
Æm
 = 
SH
,

954 
boﬁ
 
√ed_tu∂e
 = 
åue
);

963 
˛ass
 
	gaddªss_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
addªss_t
>

965 
èbÀ_row_t
 
	taddªss_tu∂e
;

967 
	gpublic
:

969 
addªss_m™_im∂
(
addªss_t
* 
aAddªssDesc
)

970 : 
èbÀ_m™_im∂
<
addªss_t
>(
aAddªssDesc
)

973 ~
addªss_m™_im∂
() { }

975 
w_rc_t
 
ad_gë_èbÀ_ôî
(
ss_m
* 
db
, 
èbÀ_ôî
* &
ôî
);

977 
w_rc_t
 
ad_ödex_¥obe
(
ss_m
* 
db
, 
addªss_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ad_id
);

979 
w_rc_t
 
ad_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
addªss_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ad_id
);

981 
w_rc_t
 
ad_upd©e_löe2
(
ss_m
* 
db
, 
addªss_tu∂e
* 
±u∂e
, c⁄° * 
löe2
, 
lock_mode_t
 = 
EX
);

990 
˛ass
 
	gw©ch_ôem_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
w©ch_ôem_t
>

992 
èbÀ_row_t
 
	tw©ch_ôem_tu∂e
;

993 
	gödex_sˇn_ôî_im∂
 <
	tw©ch_ôem_t
> 
	tw©ch_ôem_ödex_ôî
;

994 
	gpublic
:

996 
w©ch_ôem_m™_im∂
(
w©ch_ôem_t
* 
aW©ch_IãmDesc
)

997 : 
èbÀ_m™_im∂
<
w©ch_ôem_t
>(
aW©ch_IãmDesc
)

1000 ~
w©ch_ôem_m™_im∂
() { }

1002 
w_rc_t
 
wi_upd©e_symb
(
ss_m
* 
db
, 
w©ch_ôem_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
wl_id
,

1003 c⁄° * 
ﬁd_symbﬁ
, c⁄° * 
√w_symbﬁ
, 
lock_mode_t
 
lm
 = 
EX
);

1005 
w_rc_t
 
wi_gë_ôî_by_ödex
(
ss_m
* 
db
,

1006 
w©ch_ôem_ödex_ôî
* &
ôî
,

1007 
w©ch_ôem_tu∂e
* 
±u∂e
,

1008 
ªp_row_t
 &
ª∂ow
,

1009 
ªp_row_t
 &
ªphigh
,

1010 c⁄° 
TIdít
 
wl_id
,

1011 
lock_mode_t
 
Æm
 = 
SH
,

1012 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

1021 
˛ass
 
	gw©ch_li°_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
w©ch_li°_t
>

1023 
èbÀ_row_t
 
	tw©ch_li°_tu∂e
;

1024 
	gödex_sˇn_ôî_im∂
 <
	tw©ch_li°_t
> 
	tw©ch_li°_ödex_ôî
;

1026 
	gpublic
:

1028 
w©ch_li°_m™_im∂
(
w©ch_li°_t
* 
aW©ch_Li°Desc
)

1029 : 
èbÀ_m™_im∂
<
w©ch_li°_t
>(
aW©ch_Li°Desc
)

1032 ~
w©ch_li°_m™_im∂
() { }

1034 
w_rc_t
 
wl_gë_ôî_by_ödex2
(
ss_m
* 
db
,

1035 
w©ch_li°_ödex_ôî
* &
ôî
,

1036 
w©ch_li°_tu∂e
* 
±u∂e
,

1037 
ªp_row_t
 &
ª∂ow
,

1038 
ªp_row_t
 &
ªphigh
,

1039 c⁄° 
TIdít
 
c_id
,

1040 
lock_mode_t
 
Æm
 = 
SH
,

1041 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

1050 
˛ass
 
	g√ws_ôem_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
√ws_ôem_t
>

1052 
èbÀ_row_t
 
	t√ws_ôem_tu∂e
;

1054 
	gpublic
:

1056 
√ws_ôem_m™_im∂
(
√ws_ôem_t
* 
aNews_IãmDesc
)

1057 : 
èbÀ_m™_im∂
<
√ws_ôem_t
>(
aNews_IãmDesc
)

1060 ~
√ws_ôem_m™_im∂
() { }

1062 
w_rc_t
 
ni_ödex_¥obe
(
ss_m
* 
db
, 
√ws_ôem_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ni_id
);

1064 
w_rc_t
 
ni_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
√ws_ôem_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ni_id
);

1066 
w_rc_t
 
ni_upd©e_dts_by_ödex
(
ss_m
* 
db
, 
√ws_ôem_tu∂e
* 
±u∂e
, c⁄° 
myTime
 
ni_dts
, 
lock_mode_t
 
Æm
 = 
EX
);

1075 
˛ass
 
	g√ws_xªf_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
√ws_xªf_t
>

1077 
èbÀ_row_t
 
	t√ws_xªf_tu∂e
;

1078 
	gödex_sˇn_ôî_im∂
 <
	t√ws_xªf_t
> 
	t√ws_xªf_ödex_ôî
;

1080 
	gpublic
:

1082 
√ws_xªf_m™_im∂
(
√ws_xªf_t
* 
aNews_XªfDesc
)

1083 : 
èbÀ_m™_im∂
<
√ws_xªf_t
>(
aNews_XªfDesc
) { }

1085 ~
√ws_xªf_m™_im∂
() {}

1087 
w_rc_t
 
nx_gë_èbÀ_ôî
(
ss_m
* 
db
, 
èbÀ_ôî
* &
ôî
);

1089 
w_rc_t
 
nx_gë_ôî_by_ödex
(
ss_m
* 
db
,

1090 
√ws_xªf_ödex_ôî
* &
ôî
,

1091 
√ws_xªf_tu∂e
* 
±u∂e
,

1092 
ªp_row_t
 &
ª∂ow
,

1093 
ªp_row_t
 &
ªphigh
,

1094 c⁄° 
TIdít
 
co_id
,

1095 
lock_mode_t
 
Æm
 = 
SH
,

1096 
boﬁ
 
√ed_tu∂e
 = 
Ál£
);

1101 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/tpce_const.h

9 #i‚de‡
__TPCE_CONST_H


10 
	#__TPCE_CONST_H


	)

13 
	~"utû/«me•a˚.h
"

14 
	~"w‹klﬂd/ç˚/egí/CE.h
"

15 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

17 
	tmyTime
;

19 
ENTER_NAMESPACE
(
ç˚
);

23 c⁄° 
	gTPCE_CUSTS_PER_LU
 = 1000;

27 c⁄° 
TIdít
 
	gMAX_ID
 = 
UINT64
(-1)/2;

28 c⁄° 
myTime
 
	gMAX_DTS
 = 
UINT64
(-1)/2;

29 c⁄° 
	gMAX_VAL
 = 
UINT32
(-1)/2;

30 c⁄° 
	gMAX_SHORT
 = 
UINT16
(-1)/2;

32 c⁄° 
	gmö_brokî_li°_Àn
 = 20;

33 c⁄° 
	gmax_brokî_li°_Àn
 = 40;

35 c⁄° 
	gmax_ac˘_Àn
 = 10;

36 c⁄° 
	gmax_hi°_Àn
 = 30;

38 c⁄° 
	gmax_„ed_Àn
 = 20;

40 c⁄° 
	gmö_day_Àn
 = 5;

41 c⁄° 
	gmax_day_Àn
 = 20;

42 c⁄° 
	gmax_fö_Àn
 = 20;

43 c⁄° 
	gmax_√ws_Àn
 = 2;

44 c⁄° 
	gmax_comp_Àn
 = 3;

47 c⁄° 
	gmax_√ws_ôem_size
 = 10000;

49 c⁄° 
	gTødeLookupMaxRows
 = 20;

50 c⁄° 
	gTødeLookupFøme1MaxRows
 = 20;

51 c⁄° 
	gTødeLookupFøme2MaxRows
 = 20;

52 c⁄° 
	gTødeLookupFøme3MaxRows
 = 20;

53 c⁄° 
	gTødeLookupMaxTødeHi°‹yRowsRëu∫ed
 = 20;

55 c⁄° 
	gmax_åade_°©us_Àn
 = 50;

57 c⁄° 
	gTødeUpd©eMaxRows
 = 20;

58 c⁄° 
	gTødeUpd©eFøme1MaxRows
 = 20;

59 c⁄° 
	gTødeUpd©eFøme2MaxRows
 = 20;

60 c⁄° 
	gTødeUpd©eFøme3MaxRows
 = 20;

61 c⁄° 
	gTødeUpd©eMaxTødeHi°‹yRowsRëu∫ed
 = 3;

65 c⁄° 
	gTPCE_ACCOUNT_PERMISSION_FCOUNT
 = 5;

66 c⁄° 
	gTPCE_CUSTOMER_FCOUNT
 = 24;

67 c⁄° 
	gTPCE_CUSTOMER_ACCOUNT_FCOUNT
 = 6;

68 c⁄° 
	gTPCE_CUSTOMER_TAXRATE_FCOUNT
 = 2;

69 c⁄° 
	gTPCE_HOLDING_FCOUNT
 = 6;

70 c⁄° 
	gTPCE_HOLDING_HISTORY_FCOUNT
 = 4;

71 c⁄° 
	gTPCE_HOLDING_SUMMARY_FCOUNT
 = 3;

72 c⁄° 
	gTPCE_WATCH_ITEM_FCOUNT
 = 2;

73 c⁄° 
	gTPCE_WATCH_LIST_FCOUNT
 = 2;

75 c⁄° 
	gTPCE_BROKER_FCOUNT
 = 5;

76 c⁄° 
	gTPCE_CASH_TRANSACTION_FCOUNT
 = 4;

77 c⁄° 
	gTPCE_CHARGE_FCOUNT
 = 3;

78 c⁄° 
	gTPCE_COMMISSION_RATE_FCOUNT
 = 6;

79 c⁄° 
	gTPCE_SETTLEMENT_FCOUNT
 = 4;

80 c⁄° 
	gTPCE_TRADE_FCOUNT
 = 15;

81 c⁄° 
	gTPCE_TRADE_HISTORY_FCOUNT
 = 3;

82 c⁄° 
	gTPCE_TRADE_REQUEST_FCOUNT
 = 6;

83 c⁄° 
	gTPCE_TRADE_TYPE_FCOUNT
 = 4;

85 c⁄° 
	gTPCE_COMPANY_FCOUNT
 = 9;

86 c⁄° 
	gTPCE_COMPANY_COMPETITOR_FCOUNT
 = 3;

87 c⁄° 
	gTPCE_DAILY_MARKET_FCOUNT
 = 6;

88 c⁄° 
	gTPCE_EXCHANGE_FCOUNT
 = 7;

89 c⁄° 
	gTPCE_FINANCIAL_FCOUNT
 = 14;

90 c⁄° 
	gTPCE_INDUSTRY_FCOUNT
 = 3;

91 c⁄° 
	gTPCE_LAST_TRADE_FCOUNT
 = 5;

92 c⁄° 
	gTPCE_NEWS_ITEM_FCOUNT
 = 7;

93 c⁄° 
	gTPCE_NEWS_XREF_FCOUNT
 = 2;

94 c⁄° 
	gTPCE_SECTOR_FCOUNT
 = 2;

95 c⁄° 
	gTPCE_SECURITY_FCOUNT
 = 16;

97 c⁄° 
	gTPCE_ADDRESS_FCOUNT
 = 5;

98 c⁄° 
	gTPCE_STATUS_TYPE_FCOUNT
 = 2;

99 c⁄° 
	gTPCE_TAXRATE_FCOUNT
 = 3;

100 c⁄° 
	gTPCE_ZIP_CODE_FCOUNT
 = 3;

105 c⁄° 
	gSHORE_TPCE_TABLES
 = 33;

112 c⁄° 
	gXCT_TPCE_MIX
 = 70;

113 c⁄° 
	gXCT_TPCE_BROKER_VOLUME
 = 71;

114 c⁄° 
	gXCT_TPCE_CUSTOMER_POSITION
 = 72;

115 c⁄° 
	gXCT_TPCE_MARKET_FEED
 = 73;

116 c⁄° 
	gXCT_TPCE_MARKET_WATCH
 = 74;

117 c⁄° 
	gXCT_TPCE_SECURITY_DETAIL
 = 75;

118 c⁄° 
	gXCT_TPCE_TRADE_LOOKUP
 = 76;

119 c⁄° 
	gXCT_TPCE_TRADE_ORDER
 = 77;

120 c⁄° 
	gXCT_TPCE_TRADE_RESULT
 = 78;

121 c⁄° 
	gXCT_TPCE_TRADE_STATUS
 = 79;

122 c⁄° 
	gXCT_TPCE_TRADE_UPDATE
 = 80;

123 c⁄° 
	gXCT_TPCE_DATA_MAINTENANCE
 = 81;

124 c⁄° 
	gXCT_TPCE_TRADE_CLEANUP
 = 82;

129 c⁄° 
	gPROB_TPCE_DATA_MAINTENANCE
 = 0;

130 c⁄° 
	gPROB_TPCE_TRADE_CLEANUP
 = 0;

131 c⁄° 
	gPROB_TPCE_MARKET_FEED
 = 1.0;

132 c⁄° 
	gPROB_TPCE_TRADE_UPDATE
 = 2.0;

133 c⁄° 
	gPROB_TPCE_BROKER_VOLUME
 = 4.9;

134 c⁄° 
	gPROB_TPCE_TRADE_LOOKUP
 = 8.0;

135 c⁄° 
	gPROB_TPCE_TRADE_RESULT
 = 10.0;

136 c⁄° 
	gPROB_TPCE_TRADE_ORDER
 = 10.1;

137 c⁄° 
	gPROB_TPCE_CUSTOMER_POSITION
 = 13.0;

138 c⁄° 
	gPROB_TPCE_SECURITY_DETAIL
 = 14.0;

139 c⁄° 
	gPROB_TPCE_MARKET_WATCH
 = 18.0;

140 c⁄° 
	gPROB_TPCE_TRADE_STATUS
 = 19.0;

147 
øndom_x˘_ty≥
(c⁄° 
idx
);

149 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/tpce_input.h

33 #i‚de‡
__TPCE_INPUT_H


34 
	#__TPCE_INPUT_H


	)

36 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

37 
	~"w‹klﬂd/ç˚/ç˚_°ru˘.h
"

38 
	~"utû.h
"

39 
	~"w‹klﬂd/ç˚/egí/CE.h
"

40 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

41 
	~"w‹klﬂd/ç˚/egí/DM.h
"

42 
	~"w‹klﬂd/ç˚/egí/MEE.h
"

43 
	~"w‹klﬂd/ç˚/MEESUT.h
"

45 
usög
 
«me•a˚
 
	gTPCE
;

47 
CCETxnI≈utGíî©‹
* 
å™ß˘i⁄s_öput_öô
(
cu°omîs
, 
sf
, 
wdays
);

48 
CDM
* 
d©a_maöã«n˚_öô
(
cu°omîs
, 
sf
, 
wdays
);

49 
CMEE
* 
m¨kë_öô
–
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
UINT32
 
UniqueId
);

51 
ENTER_NAMESPACE
(
ç˚
);

53 
CCETxnI≈utGíî©‹
* 
m_TxnI≈utGíî©‹
;

54 
CDM
* 
m_CDM
;

55 
CMEESUT
* 
mìsut
;

56 
CMEE
* 
mì
;

59 
myTime
 
EgíTimeToTimeT
(
CD©eTime
 &
cdt
);

63 
myTime
 
EgíTimeSèmpToTimeT
(
TIMESTAMP_STRUCT
 &
tss
);

66 
dayOfM⁄th
(
myTime
& 
t
);

76 
	sbrokî_vﬁume_öput_t


78 
	m_brokî_li°
[40][
STRSIZE
(49)];

79 
	m_£˘‹_«me
[
STRSIZE
(30)];

82 
brokî_vﬁume_öput_t
()

84 
mem£t
(
_£˘‹_«me
, '\0', 
STRSIZE
(30));

87 ~
brokî_vﬁume_öput_t
() { };

88 
¥öt
 ();

90 
	mbrokî_vﬁume_öput_t
& 
	m›î©‹
(c⁄° 
brokî_vﬁume_öput_t
& 
rhs
);

103 
	scu°omî_posôi⁄_öput_t


105 
TIdít
 
	m_ac˘_id_idx
;

106 
TIdít
 
	m_cu°_id
;

107 
boﬁ
 
	m_gë_hi°‹y
;

108 
	m_èx_id
[
STRSIZE
(20)];

111 
cu°omî_posôi⁄_öput_t
()

112 :
_ac˘_id_idx
(0), 
_cu°_id
(0),

113 
_gë_hi°‹y
(
Ál£
)

115 
mem£t
(
_èx_id
, '\0', 21);

118 
¥öt
();

120 ~
cu°omî_posôi⁄_öput_t
() { };

123 
	mcu°omî_posôi⁄_öput_t
& 
	m›î©‹
(c⁄° 
cu°omî_posôi⁄_öput_t
& 
rhs
);

137 
	såade_‹dî_öput_t


139 
TIdít
 
	m_ac˘_id
;

140 
	m_co_«me
[61];

141 
	m_exec_f_«me
[21];

142 
	m_exec_l_«me
[26];

143 
	m_exec_èx_id
[21];

144 
boﬁ
 
	m_is_lifo
;

145 
	m_issue
[7];

146 
	m_ªque°ed_¥i˚
;

147 
boﬁ
 
	m_rﬁl_ô_back
;

148 
	m_°_≥ndög_id
[5];

149 
	m_°_submôãd_id
[5];

150 
	m_symbﬁ
[16];

151 
	m_åade_qty
;

152 
	m_åade_ty≥_id
[4];

153 
boﬁ
 
	m_ty≥_is_m¨gö
;

155 
¥öt
();

158 
åade_‹dî_öput_t
()

159 :
_ac˘_id
(0), 
_is_lifo
(
Ál£
), 
_ªque°ed_¥i˚
(0),

160 
_rﬁl_ô_back
(
Ál£
), 
_åade_qty
(0), 
_ty≥_is_m¨gö
(false)

162 
mem£t
(
_co_«me
, '\0', 61);

163 
mem£t
(
_exec_f_«me
, '\0', 21);

164 
mem£t
(
_exec_l_«me
, '\0', 26);

165 
mem£t
(
_exec_èx_id
, '\0', 21);

166 
mem£t
(
_issue
, '\0', 7);

167 
mem£t
(
_°_≥ndög_id
, '\0', 5);

168 
mem£t
(
_°_submôãd_id
, '\0', 5);

169 
mem£t
(
_symbﬁ
, '\0', 16);

170 
mem£t
(
_åade_ty≥_id
, '\0', 4);

173 ~
åade_‹dî_öput_t
() { };

176 
	måade_‹dî_öput_t
& 
	m›î©‹
(c⁄° 
åade_‹dî_öput_t
& 
rhs
);

189 
	såade_lookup_öput_t


191 
TIdít
 
	m_ac˘_id
;

192 
	m_‰ame_to_execuã
;

193 
TIdít
 
	m_max_ac˘_id
;

194 
	m_max_åades
;

195 
myTime
 
	m_°¨t_åade_dts
;

196 
myTime
 
	m_íd_åade_dts
;

197 
	m_symbﬁ
[16];

198 
TIdít
 
	m_åade_id
[20];

200 
¥öt
();

202 
åade_lookup_öput_t
()

203 :
_ac˘_id
(0), 
_íd_åade_dts
(0), 
_‰ame_to_execuã
(0),

204 
_max_ac˘_id
(0), 
_max_åades
(0), 
_°¨t_åade_dts
(0)

206 
mem£t
(
_symbﬁ
, '\0', 16);

209 ~
åade_lookup_öput_t
() { };

212 
	måade_lookup_öput_t
& 
	m›î©‹
(c⁄° 
åade_lookup_öput_t
& 
rhs
);

224 
	såade_ªsu…_öput_t


228 
rid_t
 
	m_hﬁdög_rid
[10];

230 
TIdít
 
	m_åade_id
;

231 
	m_åade_¥i˚
;

234 
åade_ªsu…_öput_t
()

235 :
_åade_id
(0), 
_åade_¥i˚
(0)

237 
¥öt
();

238 ~
åade_ªsu…_öput_t
() { };

241 
	måade_ªsu…_öput_t
& 
	m›î©‹
(c⁄° 
åade_ªsu…_öput_t
& 
rhs
);

251 
	sm¨kë_w©ch_öput_t


253 
TIdít
 
	m_ac˘_id
;

254 
TIdít
 
	m_cu°_id
;

255 
TIdít
 
	m_°¨tög_co_id
;

256 
TIdít
 
	m_ídög_co_id
;

257 
	m_ödu°ry_«me
[51];

258 
myTime
 
	m_°¨t_d©e
;

260 
¥öt
();

263 
m¨kë_w©ch_öput_t
():

264 
_ac˘_id
(0), 
_cu°_id
(0), 
_ídög_co_id
(0),

265 
_°¨t_d©e
(0), 
_°¨tög_co_id
(0)

267 
mem£t
(
_ödu°ry_«me
, '\0', 51);

270 ~
m¨kë_w©ch_öput_t
() { };

273 
	mm¨kë_w©ch_öput_t
& 
	m›î©‹
(c⁄° 
m¨kë_w©ch_öput_t
& 
rhs
);

284 
	s£curôy_dëaû_öput_t


286 
boﬁ
 
	m_ac˚ss_lob_Êag
;

287 
	m_symbﬁ
[16];

288 
myTime
 
	m_°¨t_day
;

289 
	m_max_rows_to_ªtu∫
;

293 
£curôy_dëaû_öput_t
():

294 
_ac˚ss_lob_Êag
(
Ál£
), 
_max_rows_to_ªtu∫
(0),

295 
_°¨t_day
(0)

297 
mem£t
(
_symbﬁ
, '\0', 16);

299 
¥öt
();

300 ~
£curôy_dëaû_öput_t
() { };

303 
	m£curôy_dëaû_öput_t
& 
	m›î©‹
(c⁄° 
£curôy_dëaû_öput_t
& 
rhs
);

313 
	såade_°©us_öput_t


315 
TIdít
 
	m_ac˘_id
;

317 
åade_°©us_öput_t
()

318 :
_ac˘_id
(0)

320 
¥öt
();

321 ~
åade_°©us_öput_t
() { };

324 
	måade_°©us_öput_t
& 
	m›î©‹
(c⁄° 
åade_°©us_öput_t
& 
rhs
);

334 
	såade_upd©e_öput_t


336 
TIdít
 
	m_ac˘_id
;

337 
	m_‰ame_to_execuã
;

338 
	m_max_åades
;

339 
	m_max_upd©es
;

340 
	m_symbﬁ
[
cSYMBOL_Àn
+1];

341 
myTime
 
	m_°¨t_åade_dts
;

342 
myTime
 
	m_íd_åade_dts
;

343 
TIdít
 
	m_åade_id
[
TødeUpd©eFøme1MaxRows
];

344 
TIdít
 
	m_max_ac˘_id
;

347 
¥öt
();

348 
åade_upd©e_öput_t
():

349 
_ac˘_id
(0), 
_‰ame_to_execuã
(0), 
_max_åades
(0), 
_max_upd©es
(0), 
_max_ac˘_id
(0)

351 
mem£t
(
_symbﬁ
, '\0', 16);

353 ~
åade_upd©e_öput_t
(){}

363 
	sd©a_maöã«n˚_öput_t


365 
TIdít
 
	m_ac˘_id
;

366 
TIdít
 
	m_c_id
;

367 
TIdít
 
	m_co_id
;

368 
	m_day_of_m⁄th
;

369 
	m_symbﬁ
[16];

370 
	m_èbÀ_«me
[31];

371 
	m_tx_id
[21];

372 
	m_vﬁ_ö¸
;

374 
¥öt
();

376 
d©a_maöã«n˚_öput_t
 ():

377 
_ac˘_id
(0), 
_c_id
(0), 
_co_id
(0),

378 
_vﬁ_ö¸
(0), 
_day_of_m⁄th
(0)

381 
mem£t
(
_symbﬁ
, '\0', 16);

382 
mem£t
(
_èbÀ_«me
, '\0', 31);

383 
mem£t
(
_tx_id
, '\0', 21);

386 ~
d©a_maöã«n˚_öput_t
() { };

389 
	md©a_maöã«n˚_öput_t
& 
	m›î©‹
(c⁄° 
d©a_maöã«n˚_öput_t
& 
rhs
);

400 
	sm¨kë_„ed_öput_t


404 
rid_t
 
	m_åade_rid
[10];

406 
	m_¥i˚_quŸe
[
max_„ed_Àn
];

407 
	m_°©us_submôãd
[5];

408 
	m_symbﬁ
[
max_„ed_Àn
][16];

409 
	m_åade_qty
[
max_„ed_Àn
];

410 
	m_ty≥_limô_buy
[4];

411 
	m_ty≥_limô_£Œ
[4];

412 
	m_ty≥_°›_loss
[4];

414 
¥öt
();

416 
m¨kë_„ed_öput_t
()

418 
mem£t
(
_°©us_submôãd
, '\0', 5);

419 
mem£t
(
_ty≥_limô_buy
, '\0', 4);

420 
mem£t
(
_ty≥_limô_£Œ
, '\0', 4);

421 
mem£t
(
_ty≥_°›_loss
, '\0', 4);

424 ~
m¨kë_„ed_öput_t
() { };

427 
	mm¨kë_„ed_öput_t
& 
	m›î©‹
(c⁄° 
m¨kë_„ed_öput_t
& 
rhs
);

437 
	såade_˛ónup_öput_t


439 
	m_°_ˇn˚Àd_id
[5];

440 
	m_°_≥ndög_id
[5];

441 
	m_°_submôãd_id
[5];

442 
TIdít
 
	m_åade_id
;

445 
åade_˛ónup_öput_t
():
_åade_id
(0)

447 
mem£t
(
_°_ˇn˚Àd_id
, '\0', 5);

448 
mem£t
(
_°_≥ndög_id
, '\0', 5);

449 
mem£t
(
_°_submôãd_id
, '\0', 5);

452 
¥öt
();

453 ~
åade_˛ónup_öput_t
() { };

456 
	måade_˛ónup_öput_t
& 
	m›î©‹
(c⁄° 
åade_˛ónup_öput_t
& 
rhs
);

460 
brokî_vﬁume_öput_t
 
¸óã_brokî_vﬁume_öput
(
sf
, 
•ecificIdx
);

461 
cu°omî_posôi⁄_öput_t
 
¸óã_cu°omî_posôi⁄_öput
(
sf
, 
•ecificIdx
);

462 
m¨kë_„ed_öput_t
 
¸óã_m¨kë_„ed_öput
(
sf
, 
•ecificIdx
);

463 
m¨kë_w©ch_öput_t
 
¸óã_m¨kë_w©ch_öput
(
sf
, 
•ecificIdx
);

464 
£curôy_dëaû_öput_t
 
¸óã_£curôy_dëaû_öput
(
sf
, 
•ecificIdx
);

465 
åade_lookup_öput_t
 
¸óã_åade_lookup_öput
(
sf
, 
•ecificIdx
);

466 
åade_‹dî_öput_t
 
¸óã_åade_‹dî_öput
(
sf
, 
•ecificIdx
);

467 
åade_ªsu…_öput_t
 
¸óã_åade_ªsu…_öput
(
sf
, 
•ecificIdx
);

468 
åade_°©us_öput_t
 
¸óã_åade_°©us_öput
(
sf
, 
•ecificIdx
);

469 
åade_upd©e_öput_t
 
¸óã_åade_upd©e_öput
(
sf
, 
•ecificIdx
);

470 
d©a_maöã«n˚_öput_t
 
¸óã_d©a_maöã«n˚_öput
(
sf
, 
•ecificIdx
);

471 
åade_˛ónup_öput_t
 
¸óã_åade_˛ónup_öput
(
sf
, 
•ecificIdx
);

474 
	sp›uœã_smÆl_öput_t
{};

475 
	sp›uœã_cu°omî_öput_t
{};

476 
	sp›uœã_addªss_öput_t
{};

477 
	sp›uœã_ˇ_™d_≠_öput_t
{};

478 
	sp›uœã_wl_™d_wi_öput_t
{};

479 
	sp›uœã_com∑ny_öput_t
{};

480 
	sp›uœã_com∑ny_com≥tô‹_öput_t
{};

481 
	sp›uœã_daûy_m¨kë_öput_t
{};

482 
	sp›uœã_fö™cül_öput_t
{};

483 
	sp›uœã_œ°_åade_öput_t
{};

484 
	sp›uœã_ni_™d_nx_öput_t
{};

485 
	sp›uœã_£curôy_öput_t
{};

486 
	sp›uœã_cu°omî_èxøã_öput_t
{};

487 
	sp›uœã_brokî_öput_t
{};

488 
	sp›uœã_hﬁdög_öput_t
{};

489 
	sp›uœã_hﬁdög_summ¨y_öput_t
{};

490 
	sp›uœã_unô_åade_öput_t
{};

492 
	sföd_maxåade_id_öput_t
{};

496 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpce/tpce_struct.h

9 #i‚de‡
__TPCE_STRUCT_H


10 
	#__TPCE_STRUCT_H


	)

12 
	~<c°dlib
>

13 
	~<uni°d.h
>

14 
	~<sys/time.h
>

15 
	~"utû.h
"

16 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

18 
usög
 
«me•a˚
 
	gTPCE
;

20 
ENTER_NAMESPACE
(
ç˚
);

24 
	#STRSIZE
(
x
)(x+1)

	)

34 
	sç˚_accou¡_≥rmissi⁄_tu∂e
{

35 
TIdít
 
	mAP_CA_ID
;

36 
	mAP_ACL
 [
STRSIZE
(4)];

37 
	mAP_TAX_ID
 [
STRSIZE
(20)];

38 
	mAP_L_NAME
 [
STRSIZE
(25)];

39 
	mAP_F_NAME
 [
STRSIZE
(20)];

43 
	sç˚_accou¡_≥rmissi⁄_key
{

44 
TIdít
 
	mAP_CA_ID
;

45 
	mAP_ACL
 [
STRSIZE
(4)];

49 
	sç˚_cu°omî_tu∂e
{

50 
TIdít
 
	mC_ID
;

51 
	mC_TAX_ID
 [
STRSIZE
(20)];

52 
	mC_ST_ID
 [
STRSIZE
(4)];

53 
	mC_L_NAME
 [
STRSIZE
(25)];

54 
	mC_F_NAME
 [
STRSIZE
(20)];

55 
	mC_M_NAME
;

56 
	mC_GNDR
;

57 
	mC_TIER
;

58 
time_t
 
	mC_DOB
;

59 
TIdít
 
	mC_AD_ID
;

60 
	mC_CTRY_1
 [
STRSIZE
(3)];

61 
	mC_AREA_1
 [
STRSIZE
(3)];

62 
	mC_LOCAL_1
 [
STRSIZE
(10)];

63 
	mC_EXT_1
 [
STRSIZE
(5)];

64 
	mC_CTRY_2
 [
STRSIZE
(3)];

65 
	mC_AREA_2
 [
STRSIZE
(3)];

66 
	mC_LOCAL_2
 [
STRSIZE
(10)];

67 
	mC_EXT_2
 [
STRSIZE
(5)];

68 
	mC_CTRY_3
 [
STRSIZE
(3)];

69 
	mC_AREA_3
 [
STRSIZE
(3)];

70 
	mC_LOCAL_3
 [
STRSIZE
(10)];

71 
	mC_EXT_3
 [
STRSIZE
(5)];

72 
	mC_EMAIL_1
 [
STRSIZE
(50)];

73 
	mC_EMAIL_2
 [
STRSIZE
(50)];

76 
	sç˚_cu°omî_key
{

78 
	mTIdít
;

83 
	sç˚_cu°omî_accou¡_tu∂e
{

84 
TIdít
 
	mCA_ID
;

85 
TIdít
 
	mCA_B_ID
;

86 
TIdít
 
	mCA_C_ID
;

87 
	mCA_NAME
 [
STRSIZE
(50)];

88 
	mCA_TAX_ST
;

89 
	mCA_BAL
;

93 
	sç˚_cu°omî_accou¡_key
{

94 
TIdít
 
	mCA_ID
;

99 
	sç˚_cu°omî_èxøã_tu∂e


101 
	mCX_TX_ID
 [
STRSIZE
(4)];

102 
TIdít
 
	mCX_C_ID
;

105 
	sç˚_cu°omî_èxøã_key
{

106 
TIdít
 
	mCA_ID
;

107 
	mCX_TX_ID
 [
STRSIZE
(4)];

112 
	sç˚_hﬁdög_tu∂e
{

113 
TIdít
 
	mH_T_ID
;

114 
TIdít
 
	mH_CA_ID
;

115 
	mH_S_SYMB
 [
STRSIZE
(4)];

116 
time_t
 
	mH_DTS
;

117 
	mH_PRICE
;

118 
	mH_QTY
;

121 
	sç˚_hﬁdög_key
{

122 
TIdít
 
	mH_T_ID
;

126 
	sç˚_hﬁdög_hi°‹y_tu∂e
{

127 
TIdít
 
	mHH_H_T_ID
;

128 
TIdít
 
	mHH_T_ID
;

129 
	mHH_BEFORE_QTY
;

130 
	mHH_AFTER_QTY
;

133 
	sç˚_hﬁdög_hi°‹y_key
{

134 
TIdít
 
	mHH_H_T_ID
;

135 
TIdít
 
	mHH_T_ID
;

140 
	sç˚_hﬁdög_summ¨y_tu∂e
{

141 
TIdít
 
	mHS_CA_ID
;

142 
	mHS_S_SYMB
 [
STRSIZE
(15)];

143 
	mHS_QTY
;

146 
	sç˚_hﬁdög_summ¨y_key
{

147 
TIdít
 
	mHS_CA_ID
;

148 
	mHS_S_SYMB
 [
STRSIZE
(15)];

152 
	sç˚_w©ch_ôem_tu∂e
{

153 
TIdít
 
	mWI_WL_ID
;

154 
	mWI_S_SYMB
 [
STRSIZE
(15)];

157 
	sç˚_w©ch_ôem_key
{

158 
TIdít
 
	mWI_WL_ID
;

159 
	mWI_S_SYMB
 [
STRSIZE
(15)];

165 
	sç˚_w©ch_li°_tu∂e
{

166 
TIdít
 
	mWL_ID
;

167 
TIdít
 
	mWL_C_ID
;

170 
	sç˚_w©ch_li°_key
{

171 
TIdít
 
	mWL_ID
;

180 
	sç˚_brokî_tu∂e
{

181 
TIdít
 
	mB_ID
;

182 
	mB_ST_ID
 [
STRSIZE
(4)];

183 
	mB_NAME
 [
STRSIZE
(49)];

184 
	mB_NUM_TRADES
 [
STRSIZE
(9)];

185 
	mB_COMM_TOTAL
;

188 
	sç˚_brokî_key
{

189 
TIdít
 
	mB_ID
;

194 
	sç˚_ˇsh_å™ß˘i⁄_tu∂e
{

195 
TIdít
 
	mCT_T_ID
;

196 
time_t
 
	mCT_DTS
;

197 
	mCT_AMT
;

198 
	mCT_NAME
 [
STRSIZE
(100)];

201 
	sç˚_ˇsh_å™ß˘i⁄_key
{

202 
TIdít
 
	mCT_T_ID
;

207 
	sç˚_ch¨ge_tu∂e
{

208 
	mCH_TT_ID
 [
STRSIZE
(3)] ;

209 
	mCH_C_TIER
;

210 
	mCH_CHRG
;

213 
	sç˚_ch¨ge_key
{

214 
	mCH_TT_ID
 [
STRSIZE
(3)] ;

215 
	mCH_C_TIER
;

221 
	sç˚_commissi⁄_øã_tu∂e
{

222 
	mCR_C_TIER
;

223 
	mCR_TT_ID
 [
STRSIZE
(3)];

224 
	mCR_EX_ID
 [
STRSIZE
(6)];

225 
	mCR_FROM_QTY
;

226 
	mCR_TO_QTY
;

227 
	mCR_RATE
;

231 
	sç˚_commissi⁄_øã_key
{

232 
	mCR_C_TIER
;

233 
	mCR_TT_ID
 [
STRSIZE
(3)];

234 
	mCR_EX_ID
 [
STRSIZE
(6)];

235 
	mCR_FROM_QTY
;

240 
	sç˚_£âÀmít_tu∂e
{

241 
TIdít
 
	mSE_T_ID
;

242 
	mSE_CASH_TYPE
 [
STRSIZE
(40)];

243 
time_t
 
	mSE_CASH_DUE_DATE
;

244 
	mSE_AMT
;

247 
	sç˚_£âÀmít_key
{

248 
	mSE_T_ID
;

254 
	sç˚_åade_tu∂e
{

255 
TIdít
 
	mT_ID
;

256 
time_t
 
	mT_DTS
;

257 
	mT_ST_ID
 [
STRSIZE
(4)];

258 
	mT_TT_ID
 [
STRSIZE
(3)];

259 
boﬁ
 
	mT_IS_CASH
;

260 
	mT_S_SYMB
 [
STRSIZE
(15)];

261 
	mT_QTY
;

262 
	mT_BID_PRICE
;

263 
TIdít
 
	mT_CA_ID
;

264 
	mT_EXEC_NAME
 [
STRSIZE
(49)];

265 
	mT_TRADE_PRICE
;

266 
	mT_CHRG
;

267 
	mT_COMM
;

268 
	mT_TAX
;

269 
boﬁ
 
	mT_LIFO
;

272 
	sç˚_åade_key
{

273 
TIdít
 
	mT_ID
;

277 
	sç˚_åade_hi°‹y_tu∂e
{

278 
TIdít
 
	mTH_T_ID
;

279 
time_t
 
	mTH_DTS
;

280 
	mTH_ST_ID
 [
STRSIZE
(4)];

283 
	sç˚_åade_hi°‹y_key
{

284 
TIdít
 
	mTH_T_ID
;

285 
	mTH_ST_ID
 [
STRSIZE
(4)];

290 
	sç˚_åade_ªque°_tu∂e
{

291 
TIdít
 
	mTR_T_ID
;

292 
	mTR_TT_ID
 [
STRSIZE
(3)];

293 
	mTR_S_SYMB
 [
STRSIZE
(15)];

294 
	mTR_QTY
;

295 
	mTR_BID_PRICE
;

296 
TIdít
 
	mTR_B_ID
;

300 
	sç˚_åade_ªque°_key
{

301 
TIdít
 
	mTR_T_ID
;

306 
	sç˚_åade_ty≥_tu∂e
{

307 
	mTT_ID
 [
STRSIZE
(3)];

308 
	mTT_NAME
 [
STRSIZE
(12)];

309 
boﬁ
 
	mTT_IS_SELL
;

310 
boﬁ
 
	mTT_IS_MRKT
;

313 
	sç˚_åade_ty≥_key
{

314 
	mTT_ID
 [
STRSIZE
(3)];

323 
	sç˚_com∑ny_tu∂e
{

324 
TIdít
 
	mCO_ID
;

325 
	mCO_ST_ID
 [
STRSIZE
(4)];

326 
	mCO_NAME
 [
STRSIZE
(60)];

327 
	mCO_IN_ID
 [
STRSIZE
(2)];

328 
	mCO_SP_RATE
 [
STRSIZE
(4)];

329 
	mCO_CEO
 [
STRSIZE
(46)];

330 
TIdít
 
	mCO_AD_ID
;

331 
	mCO_DESC
 [
STRSIZE
(150)];

332 
time_t
 
	mCO_OPENDATE
;

336 
	sç˚_com∑ny_tu∂e_key
{

337 
TIdít
 
	mCO_ID
;

341 
	sç˚_com∑ny_com≥tô‹_tu∂e
{

342 
TIdít
 
	mCP_CO_ID
;

343 
TIdít
 
	mCP_COMP_CO_ID
;

344 
	mCP_IN_ID
 [
STRSIZE
(2)];

348 
	sç˚_com∑ny_com≥tô‹_tu∂e_key
{

349 
TIdít
 
	mCP_CO_ID
;

350 
TIdít
 
	mCP_COMP_CO_ID
;

351 
	mCP_IN_ID
 [
STRSIZE
(2)];

356 
	sç˚_daûy_m¨kë_tu∂e
{

357 
time_t
 
	mDM_DATE
;

358 
	mDM_S_SYMB
 [
STRSIZE
(15)];

359 
	mDM_CLOSE
;

360 
	mDM_HIGH
;

361 
	mDM_LOW
;

362 
TIdít
 
	mDM_VOL
;

366 
	sç˚_daûy_m¨kë_tu∂e_key
{

367 
time_t
 
	mDM_DATE
;

368 
	mDM_S_SYMB
 [
STRSIZE
(15)];

372 
	sç˚_exch™ge_tu∂e
{

373 
	mEX_ID
 [
STRSIZE
(6)];

374 
	mEX_NAME
 [
STRSIZE
(100)];

375 
	mEX_NUM_SYMB
;

376 
	mEX_OPEN
;

377 
	mEX_CLOSE
;

378 
	mEX_DESC
 [
STRSIZE
(150)];

379 
TIdít
 
	mEX_AD_ID
;

384 
	sç˚_exch™ge_tu∂e_key
{

385 
	mEX_ID
 [
STRSIZE
(6)];

389 
	sç˚_fö™cül_tu∂e
{

390 
TIdít
 
	mFI_CO_ID
;

391 
	mFI_YEAR
;

392 
	mFI_QTR
;

393 
time_t
 
	mFI_QTR_START_DATE
;

394 
	mFI_QTR_REVENUE
;

395 
	mFI_NET_EARN
;

396 
	mFI_BASIC_EPS
;

397 
	mFI_DILUT_EPS
 [
STRSIZE
(150)];

398 
	mFI_MARGIN
;

399 
	mFI_INVENTORY
;

400 
	mFI_ASSETS
;

401 
	mFI_LIABILITY
;

402 
TIdít
 
	mFI_OUT_BASIC
;

403 
TIdít
 
	mFI_OUT_DILUT
;

407 
	sç˚_fö™cül_tu∂e_key
{

408 
TIdít
 
	mFI_CO_ID
;

409 
	mFI_YEAR
;

410 
	mFI_QTR
;

415 
	sç˚_ödu°ry_tu∂e
{

416 
	mIN_ID
 [
STRSIZE
(2)];

417 
	mIN_NAME
 [
STRSIZE
(50)];

418 
	mIN_SC_ID
 [
STRSIZE
(2)];

421 
	sç˚_ödu°ry_tu∂e_key
{

422 
	mIN_ID
 [
STRSIZE
(2)];

426 
	sç˚_œ°_åade_tu∂e
{

427 
	mLT_S_SYMB
 [
STRSIZE
(15)];

428 
time_t
 
	mLT_DTS
;

429 
	mLT_PRICE
;

430 
	mLT_OPEN_PRICE
;

431 
TIdít
 
	mLT_VOL
;

434 
	sç˚_œ°_åade_tu∂e_key
{

435 
	mLT_S_SYMB
 [
STRSIZE
(15)];

439 
	sç˚_√ws_ôem_tu∂e
{

440 
TIdít
 
	mNI_ID
;

441 
	mNI_HEADLINE
 [
STRSIZE
(80)];

442 
	mNI_SUMMARY
 [
STRSIZE
(255)];

443 
	mNI_ITEM
 [
STRSIZE
(100000)];

444 
time_t
 
	mNI_DTS
;

445 
	mNI_SOURCE
 [
STRSIZE
(30)];

446 
	mNI_AUTHOR
 [
STRSIZE
(30)];

449 
	sç˚_√ws_ôem_tu∂e_key
{

450 
TIdít
 
	mNI_ID
;

454 
	sç˚_√ws_xªf_tu∂e
{

455 
TIdít
 
	mNX_NI_ID
;

456 
TIdít
 
	mNX_CO_ID
;

459 
	sç˚_√ws_xªf_tu∂e_key
{

460 
TIdít
 
	mNX_NI_ID
;

461 
TIdít
 
	mNX_CO_ID
;

465 
	sç˚_£˘‹_tu∂e
{

466 
	mSC_ID
 [
STRSIZE
(2)];

467 
	mSC_NAME
 [
STRSIZE
(30)];

470 
	sç˚_£˘‹_tu∂e_key
{

471 
	mSC_ID
 [
STRSIZE
(2)];

475 
	sç˚_£curôy_tu∂e
{

476 
	mS_SYMB
 [
STRSIZE
(15)];

477 
	mS_ISSUE
 [
STRSIZE
(6)];

478 
	mS_ST_ID
 [
STRSIZE
(4)];

479 
	mS_NAME
 [
STRSIZE
(70)];

480 
	mS_EX_ID
 [
STRSIZE
(6)];

481 
TIdít
 
	mS_CO_ID
;

482 
TIdít
 
	mS_NUM_OUT
;

483 
time_t
 
	mS_START_DATE
;

484 
time_t
 
	mS_EXCH_DATE
;

485 
	mS_PE
;

486 
	mS_52WK_HIGH
;

487 
time_t
 
	mS_52WK_HIGH_DATE
;

488 
	mS_52WK_LOW
;

489 
time_t
 
	mS_52WK_LOW_DATE
;

490 
	mS_DIVIDEND
;

491 
	mS_YIELD
;

494 
	sç˚_£curôy_tu∂e_key
{

495 
	mS_SYMB
 [
STRSIZE
(15)];

504 
	sç˚_addªss_tu∂e
{

505 
TIdít
 
	mAD_ID
;

506 
	mAD_LINE1
 [
STRSIZE
(80)];

507 
	mAD_LINE2
 [
STRSIZE
(80)];

508 
	mAD_ZC_CODE
 [
STRSIZE
(12)];

509 
	mAD_CTRY
 [
STRSIZE
(80)];

512 
	sç˚_addªss_tu∂e_key
{

513 
TIdít
 
	mAD_ID
;

517 
	sç˚_°©us_ty≥_tu∂e
{

518 
	mST_ID
 [
STRSIZE
(4)];

519 
	mST_NAME
 [
STRSIZE
(10)];

522 
	sç˚_°©us_ty≥_tu∂e_key
{

523 
	mST_ID
 [
STRSIZE
(4)];

527 
	sç˚_èx_øã_tu∂e
{

528 
	mTX_ID
 [
STRSIZE
(4)];

529 
	mTX_NAME
 [
STRSIZE
(50)];

530 
	mTX_RATE
;

533 
	sç˚_èx_øã_tu∂e_key
{

534 
	mTX_ID
 [
STRSIZE
(4)];

538 
	sç˚_zù_code_tu∂e
{

539 
	mZC_CODE
 [
STRSIZE
(12)];

540 
	mZC_TOWN
 [
STRSIZE
(80)];

541 
	mZC_DIV
 [
STRSIZE
(80)];

544 
	sç˚_zù_code_tu∂e_key
{

545 
	mZC_CODE
 [
STRSIZE
(12)];

548 
EXIT_NAMESPACE
(
ç˚
);

	@include/workload/tpch/dbgen/bcd2.h

22 #i‚de‡
DBGEN_TPCH_BCD2_H


23 
	#DBGEN_TPCH_BCD2_H


	)

25 
	~"utû/«me•a˚.h
"

27 
ENTER_NAMESPACE
(
dbgíçch
);

29 
bö_bcd2
(
bö¨y
, *
low_ªs
, *
high_ªs
);

30 
bcd2_bö
(*
de°
, 
bcd
);

31 
bcd2_add
(*
bcd_low
, *
bcd_high
, 
addíd
);

32 
bcd2_sub
(*
bcd_low
, *
bcd_high
, 
subíd
);

33 
bcd2_mul
(*
bcd_low
, *
bcd_high
, 
mu…ùlõr
);

34 
bcd2_div
(*
bcd_low
, *
bcd_high
, 
divis‹
);

35 
bcd2_mod
(*
bcd_low
, *
bcd_high
, 
modulo
);

36 
bcd2_cmp
(*
bcd_low
, *
bcd_high
, 
com∑ª
);

38 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/config.h

101 #i‚de‡
DBGEN_TPCH_CONFIG_H


102 
	#DBGEN_TPCH_CONFIG_H


	)

104 
	~"utû/«me•a˚.h
"

106 
ENTER_NAMESPACE
(
dbgíçch
);

110 
	#TPCH


	)

112 #ifde‡
DOS


113 
	#DSS_PROC
 1

	)

114 
	#PATH_SEP
 '\\'

	)

118 #ifde‡
LINUX


119 
	#STDLIB_HAS_GETOPT


	)

120 
	#SUPPORT_64BITS


	)

121 
	#DSS_HUGE
 

	)

122 
	#HUGE_FORMAT
 "%Œd"

	)

123 
	#HUGE_DATE_FORMAT
 "%02Œd"

	)

124 
	#RNG_A
 6364136223846793005uŒ

	)

125 
	#RNG_C
 1uŒ

	)

128 #i‡
deföed
(
SUN
Ë|| deföed(
SOLARIS2
)

129 
	#STDLIB_HAS_GETOPT


	)

130 
	#RNG_A
 6364136223846793005uŒ

	)

131 
	#RNG_C
 1uŒ

	)

132 
	#SUPPORT_64BITS


	)

133 
	#DSS_HUGE
 

	)

134 
	#HUGE_FORMAT
 "%Œd"

	)

135 
	#HUGE_DATE_FORMAT
 "%02Œd"

	)

138 #ifde‡
SGI


139 
	#STDLIB_HAS_GETOPT


	)

140 
	#SUPPORT_64BITS


	)

141 
	#DSS_HUGE
 
__öt64_t


	)

144 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

145 
	#pid_t
 

	)

146 
	#SET_HANDLER
(
¥oc
Ë
	`sig«l
(
SIGINT
,Öroc)

	)

147 
	#KILL
(
pid
) \

148 
	`Tîmö©ePro˚ss
(
	`O≥nPro˚ss
(
PROCESS_TERMINATE
,
FALSE
,
pid
),3)

	)

149 #i‡(
deföed
 (
__WATCOMC__
))

150 
	#SPAWN
(Ë
	`•awnv
(
P_NOWAIT
, 
•awn_¨gs
[0], s∑wn_¨gs)

	)

151 
	#WAIT
(
ªs
, 
pid
Ë
	`cwaô
‘es,Öid, 
WAIT_CHILD
)

	)

153 
	#SPAWN
(Ë
	`_•awnv
(
_P_NOWAIT
, 
•awn_¨gs
[0], s∑wn_¨gs)

	)

154 
	#WAIT
(
ªs
, 
pid
Ë
	`_cwaô
‘es,Öid, 
_WAIT_CHILD
)

	)

155 
	#gëpid
 
_gëpid


	)

157 
	#SIGS_DEFINED


	)

158 
	#PATH_SEP
 '\\'

	)

159 
	#SUPPORT_64BITS


	)

160 
	#DSS_HUGE
 
__öt64


	)

161 
	#RNG_A
 6364136223846793005u
I64


	)

162 
	#RNG_C
 1u
I64


	)

163 
	#HUGE_FORMAT
 "%I64d"

	)

164 
	#HUGE_DATE_FORMAT
 "%02I64d"

	)

168 
	#WIFEXITED
(
s
Ë((†& 0xFFË=0)

	)

169 
	#WIFSIGNALED
(
s
Ë((()((
°©us
)-1Ë& 0xFFFFË< 0xFF)

	)

170 
	#WIFSTOPPED
(
s
Ë(((sË& 0xffË=0x7f)

	)

171 
	#WTERMSIG
(
s
Ë((sË& 0x7f)

	)

172 
	#WSTOPSIG
(
s
Ë(((sË& 0xff00Ë>> 8)

	)

174 
	#°rdup
(
x
Ë
	`_°rdup
(x)

	)

177 #i‚de‡
SIGS_DEFINED


178 
	#KILL
(
pid
Ë
	`kûl
(
SIGUSR1
,Öid)

	)

179 
	#SET_HANDLER
(
¥oc
Ë
	`sig«l
(
SIGUSR1
,Öroc)

	)

180 
	#SPAWN
 
f‹k


	)

181 
	#WAIT
(
ªs
, 
pid
Ë
	`waô
‘es)

	)

184 
	#DSS_PROC
 
	`gëpid
()

	)

187 #i‚de‡
DBNAME


188 
	#DBNAME
 "dss"

	)

191 #i‚de‡
PATH_SEP


192 
	#PATH_SEP
 '/'

	)

195 #i‚de‡
DSS_HUGE


196 #îr‹ 
Suµ‹t
 
a
 64-
bô
 
d©©y≥
 
is
 
ªquúed
 
ö
 
this
 
ªÀa£


199 #i‚de‡
DOUBLE_CAST


200 
	#DOUBLE_CAST
 ()

	)

204 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/dss.h

69 #i‚de‡
DBGEN_TPCH_DSS_H


70 
	#DBGEN_TPCH_DSS_H


	)

72 
	~"utû/«me•a˚.h
"

73 
	~"utû/åa˚.h
"

76 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

77 
	~"w‹klﬂd/çch/dbgí/sh¨ed.h
"

79 #ifde‡
TPCH


80 
	#NAME
 "TPC-H"

	)

82 #ifde‡
TPCR


83 
	#NAME
 "TPC-R"

	)

85 #i‚de‡
NAME


86 #îr‹ 
Bíchm¨k
 
vîsi⁄
 
mu°
 
be
 
deföed
 
ö
 
c⁄fig
.
h


88 
	#TPC
 "Tønß˘i⁄ Pro˚ssög Pîf‹m™˚ Councû"

	)

89 
	#C_DATES
 "1994 - 2008"

	)

91 
	~<°dio.h
>

92 
	~<°dlib.h
>

93 
	~<as£π.h
>

96 
ENTER_NAMESPACE
(
dbgíçch
);

98 
dbgí_öô
();

101 
	#NONE
 -1

	)

102 
	#PART
 0

	)

103 
	#PSUPP
 1

	)

104 
	#SUPP
 2

	)

105 
	#CUST
 3

	)

106 
	#ORDER
 4

	)

107 
	#LINE
 5

	)

108 
	#ORDER_LINE
 6

	)

109 
	#PART_PSUPP
 7

	)

110 
	#NATION
 8

	)

111 
	#REGION
 9

	)

112 
	#UPDATE
 10

	)

113 
	#MAX_TABLE
 11

	)

114 
	#ONE_STREAM
 1

	)

115 
	#ADD_AT_END
 2

	)

117 #ifde‡
MAX


118 #unde‡
MAX


120 #ifde‡
MIN


121 #unde‡
MIN


123 
	#MAX
(
a
,
b
Ë(◊ > b )?a:b)

	)

124 
	#MIN
(
A
,
B
Ë–(AË< (BË? (AË: (B))

	)

126 
	#INTERNAL_ERROR
(
p
Ë{
	`Ârötf
(
°dîr
,"%s",Ö); 
	`as£π
(0);}

	)

127 
	#LN_CNT
 4

	)

129 
 oi£
[4];

132 
	#LIFENOISE
(
n
, 
v¨
) \

133 i‡(
vîbo£
 > 0Ë
	`Ârötf
(
°dîr
, "%c\b", 
 oi£
[(
v¨
%
LN_CNT
)])

	)

135 
	#MALLOC_CHECK
(
v¨
) \

136 i‡((
v¨
Ë=
NULL
) \

138 
	`Ârötf
(
°dîr
, "Malloc failedát %s:%d\n", \

139 
__FILE__
, 
__LINE__
); \

140 
	`exô
(1); \

141 }

	)

142 
	#OPEN_CHECK
(
v¨
, 
∑th
) \

143 i‡((
v¨
Ë=
NULL
) \

145 
	`Ârötf
(
°dîr
, "Open failed for %s\n", \

146 
∑th
); \

147 
	`as£π
(0); \

148 }

	)

149 #i‚de‡
MAX_CHILDREN


150 
	#MAX_CHILDREN
 1000

	)

158 #i‚de‡
BITS_PER_LONG


159 
	#BITS_PER_LONG
 32

	)

160 
	#MAX_LONG
 0x7FFFFFFF

	)

162 
	#SPARSE_BITS
 2

	)

163 
	#SPARSE_KEEP
 3

	)

164 
	#MK_SPARSE
(
key
, 
£q
) \

165 (((((
key
>>3)<<2)|(
£q
 & 0x0003))<<3)|(key & 0x0007))

	)

167 
	#RANDOM
(
tgt
, 
lowî
, 
uµî
, 
°ªam
Ë
	`dss_øndom
(&tgt,Üowî, uµî, såóm)

	)

168 
	#RANDOM64
(
tgt
, 
lowî
, 
uµî
, 
°ªam
Ë
	`dss_øndom64
(&tgt,Üowî, uµî, såóm)

	)

174 
	mweight
;

175 *
	mãxt
;

176 } 
	t£t_membî
;

180 
	mcou¡
;

181 
	mmax
;

182 
£t_membî
 *
	mli°
;

183 *
	m≥rmuã
;

184 } 
	tdi°ributi⁄
;

188 
	#DIST_SIZE
(
d
Ëd->
cou¡


	)

189 
	#DIST_MEMBER
(
d
, 
i
Ë((
£t_membî
 *)((d)->
li°
 + i))->
ãxt


	)

193 c⁄° *
	m«me
;

194 c⁄° *
	mcommít
;

195 
DSS_HUGE
 
	mba£
;

196 (*
	mhódî
Ë(
FILE
* 
	mf
);

197 (*
	mlﬂdî
[2]Ë(* 
	mo
, 
	mmode
);

198 (*
	mgí_£ed
)(
	mchûd
, 
DSS_HUGE
 
	mskù_cou¡
);

199 (*
	mvîify
Ë(* 
	mvo
, 
	mmode
);

200 
	mchûd
;

201 
DSS_HUGE
 
	mvtŸÆ
;

202 } 
	ttdef
;

204 
	sSEED_T
 {

205 
	mèbÀ
;

206 
DSS_HUGE
 
	mvÆue
;

207 
DSS_HUGE
 
	mußge
;

208 
DSS_HUGE
 
	mbound¨y
;

209 #ifde‡
RNG_TEST


210 
DSS_HUGE
 
	mnCÆls
;

212 } 
	t£ed_t
;

215 #i‡
deföed
(
__STDC__
)

216 
	#PROTO
(
s
Ë
	)
s

218 
	#PROTO
(
s
Ë()

	)

222 c⁄° *
ív_c⁄fig
 
PROTO
((c⁄° *
v¨
, c⁄° *
dÊt
));

223 
yes_no
 
PROTO
((*
¥om±
));

224 
a_∫d
 
PROTO
((
mö
, 
max
, 
cﬁumn
, *
de°
));

225 
tx_∫d
 
PROTO
((
mö
, 
max
, 
cﬁumn
, *
tgt
));

226 
julün
 
PROTO
((
d©e
));

227 
unjulün
 
PROTO
((
d©e
));

228 
FILE
 *
tbl_›í
 
PROTO
((
tbl
, c⁄° *
mode
));

229 
ds¢ˇ£cmp
 
PROTO
((c⁄° *
s1
, c⁄° *
s2
, 
n
));

230 
dssˇ£cmp
 
PROTO
((c⁄° *
s1
, c⁄° *
s2
));

231 
pick_°r
 
PROTO
((
di°ributi⁄
 * 
s
, 
c
, *
èrgë
));

232 
agg_°r
 
PROTO
((
di°ributi⁄
 *
£t
, 
cou¡
, 
cﬁ
, *
de°
));

233 
ªad_di°
 
PROTO
((c⁄° *
∑th
, c⁄° *
«me
, 
di°ributi⁄
 * 
èrgë
));

234 
embed_°r
 
PROTO
((
di°ributi⁄
 *
d
, 
mö
, 
max
, 
°ªam
, *
de°
));

235 #i‚de‡
STDLIB_HAS_GETOPT


236 
gë›t
 
PROTO
((
¨g_˙t
, **
¨g_ve˘
, *
›ri⁄s
));

238 
DSS_HUGE
 
£t_°©e
 
PROTO
((
t
, 
sˇÀ
, 
¥ocs
, 
°ï
, DSS_HUGE *
e
));

241 
DSS_HUGE
 
NextR™d
 
PROTO
((DSS_HUGE 
nSìd
));

242 
DSS_HUGE
 
UnifI¡
 
PROTO
((DSS_HUGE 
nLow
, DSS_HUGE 
nHigh
, 
nSåóm
));

243 
dss_øndom
(
DSS_HUGE
 *
tgt
, DSS_HUGE 
mö
, DSS_HUGE 
max
, 
£ed
);

244 
row_°¨t
(
t
);

245 
row_°›
(
t
);

246 
dump_£eds
(
t
);

249 
	#MAX_GRAMMAR_LEN
 12

	)

250 
	#MAX_SENT_LEN
 256

	)

251 
	#RNG_PER_SENT
 27

	)

253 
dbg_ãxt
 
PROTO
((* 
t
, 
mö
, 
max
, 
s
));

255 #unde‡
EXTERN


256 #ifde‡
DECLARER


257 
	#EXTERN


	)

259 
	#EXTERN
 

	)

263 
EXTERN
 
di°ributi⁄
 
«ti⁄s
;

264 
EXTERN
 
di°ributi⁄
 
	g«ti⁄s2
;

265 
EXTERN
 
di°ributi⁄
 
	gªgi⁄s
;

266 
EXTERN
 
di°ributi⁄
 
	go_¥i‹ôy_£t
;

267 
EXTERN
 
di°ributi⁄
 
	gl_ö°ru˘_£t
;

268 
EXTERN
 
di°ributi⁄
 
	gl_smode_£t
;

269 
EXTERN
 
di°ributi⁄
 
	gl_ˇãg‹y_£t
;

270 
EXTERN
 
di°ributi⁄
 
	gl_rÊag_£t
;

271 
EXTERN
 
di°ributi⁄
 
	gc_m£g_£t
;

272 
EXTERN
 
di°ributi⁄
 
	gcﬁ‹s
;

273 
EXTERN
 
di°ributi⁄
 
	gp_ty≥s_£t
;

274 
EXTERN
 
di°ributi⁄
 
	gp_˙å_£t
;

277 
EXTERN
 
di°ributi⁄
 
	g¨ti˛es
;

278 
EXTERN
 
di°ributi⁄
 
	gnouns
;

279 
EXTERN
 
di°ributi⁄
 
	gadje˘ives
;

280 
EXTERN
 
di°ributi⁄
 
	gadvîbs
;

281 
EXTERN
 
di°ributi⁄
 
	g¥ïosôi⁄s
;

282 
EXTERN
 
di°ributi⁄
 
	gvîbs
;

283 
EXTERN
 
di°ributi⁄
 
	gãrmö©‹s
;

284 
EXTERN
 
di°ributi⁄
 
	gauxûœrõs
;

285 
EXTERN
 
di°ributi⁄
 
	g≈
;

286 
EXTERN
 
di°ributi⁄
 
	gvp
;

287 
EXTERN
 
di°ributi⁄
 
	ggømm¨
;

290 
EXTERN
 
	gsˇÀ
;

291 
EXTERN
 
	g¨e‰esh
;

292 
EXTERN
 
	gªsume
;

293 
EXTERN
 
	gvîbo£
;

294 
EXTERN
 
	gf‹˚
;

295 
EXTERN
 
	ghódî
;

296 
EXTERN
 
	gcﬁum«r
;

297 
EXTERN
 
	gdúe˘
;

298 
EXTERN
 
	gupd©es
;

299 
EXTERN
 
	gèbÀ
;

300 
EXTERN
 
	gchûdªn
;

301 
EXTERN
 
	g‚ames
;

302 
EXTERN
 
	ggí_sql
;

303 
EXTERN
 
	ggí_∫g
;

304 
EXTERN
 *
	gdb_«me
;

305 
EXTERN
 
	g°ï
;

306 
EXTERN
 
	g£t_£eds
;

307 
EXTERN
 
	gvÆid©e
;

308 
EXTERN
 *
	gd_∑th
;

311 
EXTERN
 
	gö£π_£gmíts
;

312 
EXTERN
 
	gdñëe_£gmíts
;

313 
EXTERN
 
	gö£π_‹dîs_£gmít
;

314 
EXTERN
 
	gö£π_löeôem_£gmít
;

315 
EXTERN
 
	gdñëe_£gmít
;

318 #i‚de‡
DECLARER


319 
tdef
 
tdefs
[];

335 
	#P_SIZE
 126

	)

336 
	#P_NAME_SCL
 5

	)

337 
	#P_MFG_TAG
 "M™uÁ˘uªr#"

	)

338 
	#P_MFG_FMT
 "%%s%%0%d%s"

	)

339 
	#P_MFG_MIN
 1

	)

340 
	#P_MFG_MAX
 5

	)

341 
	#P_BRND_TAG
 "Bønd#"

	)

342 
	#P_BRND_FMT
 "%%s%%0%d%s"

	)

343 
	#P_BRND_MIN
 1

	)

344 
	#P_BRND_MAX
 5

	)

345 
	#P_SIZE_MIN
 1

	)

346 
	#P_SIZE_MAX
 50

	)

347 
	#P_MCST_MIN
 100

	)

348 
	#P_MCST_MAX
 99900

	)

349 
	#P_MCST_SCL
 100.0

	)

350 
	#P_RCST_MIN
 90000

	)

351 
	#P_RCST_MAX
 200000

	)

352 
	#P_RCST_SCL
 100.0

	)

356 
	#S_SIZE
 145

	)

357 
	#S_NAME_TAG
 "Suµlõr#"

	)

358 
	#S_NAME_FMT
 "%%s%%0%d%s"

	)

359 
	#S_ABAL_MIN
 -99999

	)

360 
	#S_ABAL_MAX
 999999

	)

361 
	#S_CMNT_MAX
 101

	)

362 
	#S_CMNT_BBB
 10

	)

363 
	#BBB_DEADBEATS
 50

	)

364 
	#BBB_BASE
 "Cu°omî "

	)

365 
	#BBB_COMPLAIN
 "Com∂aöts"

	)

366 
	#BBB_COMMEND
 "Recommíds"

	)

367 
	#BBB_CMNT_LEN
 19

	)

368 
	#BBB_BASE_LEN
 9

	)

369 
	#BBB_TYPE_LEN
 10

	)

374 
	#PS_SIZE
 145

	)

375 
	#PS_SKEY_MIN
 0

	)

376 
	#PS_SKEY_MAX
 ((
tdefs
[
SUPP
].
ba£
 - 1Ë* 
sˇÀ
)

	)

377 
	#PS_SCST_MIN
 100

	)

378 
	#PS_SCST_MAX
 100000

	)

379 
	#PS_QTY_MIN
 1

	)

380 
	#PS_QTY_MAX
 9999

	)

384 
	#C_SIZE
 165

	)

385 
	#C_NAME_TAG
 "Cu°omî#"

	)

386 
	#C_NAME_FMT
 "%%s%%0%d%s"

	)

387 
	#C_MSEG_MAX
 5

	)

388 
	#C_ABAL_MIN
 -99999

	)

389 
	#C_ABAL_MAX
 999999

	)

393 
	#O_SIZE
 109

	)

394 
	#O_CKEY_MIN
 1

	)

395 
	#O_CKEY_MAX
 (
tdefs
[
CUST
].
ba£
 * 
sˇÀ
)

	)

396 
	#O_ODATE_MIN
 
STARTDATE


	)

397 
	#O_ODATE_MAX
 (
STARTDATE
 + 
TOTDATE
 - \

398 (
L_SDTE_MAX
 + 
L_RDTE_MAX
Ë- 1)

	)

399 
	#O_CLRK_TAG
 "CÀrk#"

	)

400 
	#O_CLRK_FMT
 "%%s%%0%d%s"

	)

401 
	#O_CLRK_SCL
 1000

	)

402 
	#O_LCNT_MIN
 1

	)

403 
	#O_LCNT_MAX
 7

	)

408 
	#L_SIZE
 144L

	)

409 
	#L_QTY_MIN
 1

	)

410 
	#L_QTY_MAX
 50

	)

411 
	#L_TAX_MIN
 0

	)

412 
	#L_TAX_MAX
 8

	)

413 
	#L_DCNT_MIN
 0

	)

414 
	#L_DCNT_MAX
 10

	)

415 
	#L_PKEY_MIN
 1

	)

416 
	#L_PKEY_MAX
 (
tdefs
[
PART
].
ba£
 * 
sˇÀ
)

	)

417 
	#L_SDTE_MIN
 1

	)

418 
	#L_SDTE_MAX
 121

	)

419 
	#L_CDTE_MIN
 30

	)

420 
	#L_CDTE_MAX
 90

	)

421 
	#L_RDTE_MIN
 1

	)

422 
	#L_RDTE_MAX
 30

	)

426 
	#T_SIZE
 30

	)

427 
	#T_START_DAY
 3

	)

428 
	#LEAP
(
y
Ë((!(y % 4Ë&& (y % 100))?1:0)

	)

437 
	#SUPP_PER_PART
 4

	)

438 
	#ORDERS_PER_CUST
 10

	)

439 
	#CUST_MORTALITY
 3

	)

440 
	#NATIONS_MAX
 90

	)

441 
	#PHONE_FMT
 "%02d-%03d-%03d-%04d"

	)

442 
	#STARTDATE
 92001

	)

443 
	#CURRENTDATE
 95168

	)

444 
	#ENDDATE
 98365

	)

445 
	#TOTDATE
 2557

	)

446 
	#UPD_PCT
 10

	)

447 
	#MAX_STREAM
 47

	)

448 
	#V_STR_LOW
 0.4

	)

449 
	#PENNIES
 100

	)

450 
	#Q11_FRACTION
 ()0.0001

	)

454 
	#MIN_SCALE
 1.0

	)

455 
	#MAX_SCALE
 100000.0

	)

459 
	#MAX_32B_SCALE
 1000.0

	)

460 
	#LONG2HUGE
(
§c
, 
d°
Ë*d° = (
DSS_HUGE
)
	)
src

461 
	#HUGE2LONG
(
§c
, 
d°
Ë*d° = ()
	)
src

462 
	#HUGE_SET
(
§c
, 
d°
Ë*d° = *
	)
src

463 
	#HUGE_MUL
(
›1
, 
›2
Ë*›1 *
	)
op2

464 
	#HUGE_DIV
(
›1
, 
›2
Ë*›1 /
	)
op2

465 
	#HUGE_ADD
(
›1
, 
›2
, 
d°
Ë*d° = *›1 + 
	)
op2

466 
	#HUGE_SUB
(
›1
, 
›2
, 
d°
Ë*d° = *›1 - 
	)
op2

467 
	#HUGE_MOD
(
›1
, 
›2
Ë*›1 % 
	)
op2

468 
	#HUGE_CMP
(
›1
, 
›2
Ë(*›1 =*›2)?0:(*›1 < *›2)-1:1

	)

472 
	#DIST_TAG
 "DSS_DIST"

	)

473 
	#DIST_DFLT
 "di°s.dss"

	)

474 
	#PATH_TAG
 "DSS_PATH"

	)

475 
	#PATH_DFLT
 "."

	)

476 
	#CONFIG_TAG
 "DSS_CONFIG"

	)

477 
	#CONFIG_DFLT
 "ö˛ude/w‹klﬂd/çch/dbgí"

	)

478 
	#ADHOC_TAG
 "DSS_ADHOC"

	)

479 
	#ADHOC_DFLT
 "adhoc.dss"

	)

482 #i‚de‡
SEPARATOR


483 
	#SEPARATOR
 '|'

	)

486 
	#DT_STR
 0

	)

487 #i‚de‡
MVS


488 
	#DT_VSTR
 
DT_STR


	)

490 
	#DT_VSTR
 1

	)

492 
	#DT_INT
 2

	)

493 
	#DT_HUGE
 3

	)

494 
	#DT_KEY
 4

	)

495 
	#DT_MONEY
 5

	)

497 #unde‡
DT_CHR


498 
	#DT_CHR
 6

	)

500 
dbg_¥öt
(
dt
, 
FILE
 *
tgt
, *
d©a
, 
Àn
, 
eﬁ
);

501 
	#PR_STR
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_STR
, f, (*)°r,Üí, 1)

	)

502 
	#PR_VSTR
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_VSTR
, f, (*)°r,Üí, 1)

	)

503 
	#PR_VSTR_LAST
(
f
, 
°r
, 
Àn
Ë
	`dbg_¥öt
(
DT_VSTR
, f, (*)°r,Üí, 0)

	)

504 
	#PR_INT
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_INT
, f, (*)°r, 0, 1)

	)

505 
	#PR_HUGE
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_HUGE
, f, (*)°r, 0, 1)

	)

506 
	#PR_KEY
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_KEY
, f, (*)°r, 0, -1)

	)

507 
	#PR_MONEY
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_MONEY
, f, (*)°r, 0, 1)

	)

508 
	#PR_CHR
(
f
, 
°r
Ë
	`dbg_¥öt
(
DT_CHR
, f, (*)°r, 0, 1)

	)

509 
	#PR_STRT
(
Â
Ë

	)

510 
	#PR_END
(
Â
Ë
	`Ârötf
(Â, "\n"Ë

	)

511 #ifde‡
MDY_DATE


512 
	#PR_DATE
(
tgt
, 
yr
, 
mn
, 
dy
) \

513 
	`•rötf
(
tgt
, "%02ld-%02ld-19%02ld", 
mn
, 
dy
, 
yr
)

	)

515 
	#PR_DATE
(
tgt
, 
yr
, 
mn
, 
dy
) \

516 
	`•rötf
(
tgt
, "19%02ld-%02ld-%02ld", 
yr
, 
mn
, 
dy
)

	)

522 
	#VRF_STR
(
t
, 
d
Ë{*
xx
 = d; *xxË
tdefs
[t].
vtŸÆ
 +*xx++;}

	)

523 
	#VRF_INT
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 +
	)
d

524 
	#VRF_HUGE
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 = *((*)&dË+ *((*)(&d + 1))

	)

526 
	#VRF_MONEY
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 = *((*)&dË+ *((*)(&d + 1))

	)

527 
	#VRF_CHR
(
t
,
d
Ë
tdefs
[t].
vtŸÆ
 +
	)
d

528 
	#VRF_STRT
(
t
)

	)

529 
	#VRF_END
(
t
)

	)

532 
	#UNIFORM
 0

	)

537 
	#P_MFG_SD
 0

	)

538 
	#P_BRND_SD
 1

	)

539 
	#P_TYPE_SD
 2

	)

540 
	#P_SIZE_SD
 3

	)

541 
	#P_CNTR_SD
 4

	)

542 
	#P_RCST_SD
 5

	)

543 
	#PS_QTY_SD
 7

	)

544 
	#PS_SCST_SD
 8

	)

545 
	#O_SUPP_SD
 10

	)

546 
	#O_CLRK_SD
 11

	)

547 
	#O_ODATE_SD
 13

	)

548 
	#L_QTY_SD
 14

	)

549 
	#L_DCNT_SD
 15

	)

550 
	#L_TAX_SD
 16

	)

551 
	#L_SHIP_SD
 17

	)

552 
	#L_SMODE_SD
 18

	)

553 
	#L_PKEY_SD
 19

	)

554 
	#L_SKEY_SD
 20

	)

555 
	#L_SDTE_SD
 21

	)

556 
	#L_CDTE_SD
 22

	)

557 
	#L_RDTE_SD
 23

	)

558 
	#L_RFLG_SD
 24

	)

559 
	#C_NTRG_SD
 27

	)

560 
	#C_PHNE_SD
 28

	)

561 
	#C_ABAL_SD
 29

	)

562 
	#C_MSEG_SD
 30

	)

563 
	#S_NTRG_SD
 33

	)

564 
	#S_PHNE_SD
 34

	)

565 
	#S_ABAL_SD
 35

	)

566 
	#P_NAME_SD
 37

	)

567 
	#O_PRIO_SD
 38

	)

568 
	#HVAR_SD
 39

	)

569 
	#O_CKEY_SD
 40

	)

570 
	#N_CMNT_SD
 41

	)

571 
	#R_CMNT_SD
 42

	)

572 
	#O_LCNT_SD
 43

	)

573 
	#BBB_JNK_SD
 44

	)

574 
	#BBB_TYPE_SD
 45

	)

575 
	#BBB_CMNT_SD
 46

	)

576 
	#BBB_OFFSET_SD
 47

	)

579 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/dsstypes.h

39 #i‚de‡
DBGEN_TPCH_DSSTYPES_H


40 
	#DBGEN_TPCH_DSSTYPES_H


	)

42 
	~"utû/«me•a˚.h
"

44 
ENTER_NAMESPACE
(
dbgíçch
);

51 
DSS_HUGE
 
	mcu°key
;

52 
	m«me
[
C_NAME_LEN
 + 3];

53 
	maddªss
[
C_ADDR_MAX
 + 1];

54 
	mÆí
;

55 
DSS_HUGE
 
	m«ti⁄_code
;

56 
	mph⁄e
[
PHONE_LEN
 + 1];

57 
DSS_HUGE
 
	mac˘bÆ
;

58 
	mmkt£gmít
[
MAXAGG_LEN
 + 1];

59 
	mcommít
[
C_CMNT_MAX
 + 1];

60 
	m˛í
;

61 } 
	tcu°omî_t
;

64 
mk_cu°
 
PROTO
((
DSS_HUGE
 
n_cu°
, 
cu°omî_t
 * 
c
));

65 
¥_cu°
 
PROTO
((* 
c
, 
mode
));

66 
ld_cu°
 
PROTO
((* 
c
, 
mode
));

70 
DSS_HUGE
 
	mokey
;

71 
DSS_HUGE
 
	m∑πkey
;

72 
DSS_HUGE
 
	msuµkey
;

73 
DSS_HUGE
 
	ml˙t
;

74 
DSS_HUGE
 
	mqu™tôy
;

75 
DSS_HUGE
 
	mïri˚
;

76 
DSS_HUGE
 
	mdiscou¡
;

77 
DSS_HUGE
 
	mèx
;

78 
	mrÊag
;

79 
	ml°©us
;

80 
	mcd©e
[
DATE_LEN
];

81 
	msd©e
[
DATE_LEN
];

82 
	mrd©e
[
DATE_LEN
];

83 
	mshùö°ru˘
[
MAXAGG_LEN
 + 1];

84 
	mshùmode
[
MAXAGG_LEN
 + 1];

85 
	mcommít
[
L_CMNT_MAX
 + 1];

86 
	m˛í
;

87 } 
	tlöe_t
;

91 
DSS_HUGE
 
	mokey
;

92 
DSS_HUGE
 
	mcu°key
;

93 
	m‹dî°©us
;

94 
DSS_HUGE
 
	mtŸÆ¥i˚
;

95 
	mod©e
[
DATE_LEN
];

96 
	m›ri‹ôy
[
MAXAGG_LEN
 + 1];

97 
	m˛îk
[
O_CLRK_LEN
 + 1];

98 
	m•ri‹ôy
;

99 
DSS_HUGE
 
	mlöes
;

100 
	mcommít
[
O_CMNT_MAX
 + 1];

101 
	m˛í
;

102 
löe_t
 
	ml
[
O_LCNT_MAX
];

103 } 
	t‹dî_t
;

106 
mk_‹dî
 
PROTO
((
DSS_HUGE
 
ödex
, 
‹dî_t
 * 
o
, 
upd_num
));

107 
¥_‹dî
 
PROTO
((* 
o
, 
mode
));

108 
ld_‹dî
 
PROTO
((* 
o
, 
mode
));

109 
mk_•¨£
 
PROTO
((
DSS_HUGE
 
ödex
, DSS_HUGE *
ok
, 
£q
));

113 
DSS_HUGE
 
	m∑πkey
;

114 
DSS_HUGE
 
	msuµkey
;

115 
DSS_HUGE
 
	mqty
;

116 
DSS_HUGE
 
	msco°
;

117 
	mcommít
[
PS_CMNT_MAX
 + 1];

118 
	m˛í
;

119 } 
	t∑πsuµ_t
;

123 
DSS_HUGE
 
	m∑πkey
;

124 
	m«me
[
P_NAME_LEN
 + 1];

125 
	m∆í
;

126 
	mmfgr
[
P_MFG_LEN
 + 1];

127 
	mbønd
[
P_BRND_LEN
 + 1];

128 
	mty≥
[
P_TYPE_LEN
 + 1];

129 
	méí
;

130 
DSS_HUGE
 
	msize
;

131 
	mc⁄èöî
[
P_CNTR_LEN
 + 1];

132 
DSS_HUGE
 
	mªèû¥i˚
;

133 
	mcommít
[
P_CMNT_MAX
 + 1];

134 
	m˛í
;

135 
∑πsuµ_t
 
	ms
[
SUPP_PER_PART
];

136 } 
	t∑π_t
;

139 
mk_∑π
 
PROTO
((
DSS_HUGE
 
ödex
, 
∑π_t
 * 
p
));

140 
¥_∑π
 
PROTO
((* 
∑π
, 
mode
));

141 
ld_∑π
 
PROTO
((* 
∑π
, 
mode
));

145 
DSS_HUGE
 
	msuµkey
;

146 
	m«me
[
S_NAME_LEN
 + 1];

147 
	maddªss
[
S_ADDR_MAX
 + 1];

148 
	mÆí
;

149 
DSS_HUGE
 
	m«ti⁄_code
;

150 
	mph⁄e
[
PHONE_LEN
 + 1];

151 
DSS_HUGE
 
	mac˘bÆ
;

152 
	mcommít
[
S_CMNT_MAX
 + 1];

153 
	m˛í
;

154 } 
	tsuµlõr_t
;

157 
mk_suµ
 
PROTO
((
DSS_HUGE
 
ödex
, 
suµlõr_t
 * 
s
));

158 
¥_suµ
 
PROTO
((* 
suµ
, 
mode
));

159 
ld_suµ
 
PROTO
((* 
suµ
, 
mode
));

163 
DSS_HUGE
 
	mtimekey
;

164 
	mÆpha
[
DATE_LEN
];

165 
	myór
;

166 
	mm⁄th
;

167 
	mwìk
;

168 
	mday
;

169 } 
	tdss_time_t
;

172 
mk_time
 
PROTO
((
DSS_HUGE
 
h
, 
dss_time_t
 * 
t
));

179 
DSS_HUGE
 
	mcode
;

180 *
	mãxt
;

181 
	mjoö
;

182 
	mcommít
[
N_CMNT_MAX
 + 1];

183 
	m˛í
;

184 } 
	tcode_t
;

187 
mk_«ti⁄
 
PROTO
((
DSS_HUGE
 
i
, 
code_t
 * 
c
));

188 
¥_«ti⁄
 
PROTO
((* 
c
, 
mode
));

189 
ld_«ti⁄
 
PROTO
((* 
c
, 
mode
));

190 
mk_ªgi⁄
 
PROTO
((
DSS_HUGE
 
i
, 
code_t
 * 
c
));

191 
¥_ªgi⁄
 
PROTO
((* 
c
, 
mode
));

192 
ld_ªgi⁄
 
PROTO
((* 
c
, 
mode
));

195 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/permute.h

22 #i‚de‡
DBGEN_TPCH_PERMUTE_H


23 
	#DBGEN_TPCH_PERMUTE_H


	)

25 
	~"utû/«me•a˚.h
"

27 
ENTER_NAMESPACE
(
dbgíçch
);

30 
	g≥rmuèti⁄
[41][22] =

76 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/release.h

4 
	#DBGENVERSION
 2

	)

5 
	#RELEASE
 8

	)

6 
	#PATCH
 0

	)

7 
	#BUILD
 10

	)

	@include/workload/tpch/dbgen/rnd.h

40 #i‚de‡
DBGEN_TPCH_RND_H


41 
	#DBGEN_TPCH_RND_H


	)

43 
	~"utû/«me•a˚.h
"

45 
ENTER_NAMESPACE
(
dbgíçch
);

49 
DSS_HUGE
 
NextR™d
 
PROTO
((DSS_HUGE));

50 
DSS_HUGE
 
UnifI¡
 
PROTO
((DSS_HUGE, DSS_HUGE, ));

52 
nA
;

53 
nM
;

54 
nQ
;

55 
nR
;

57 
	gdM
 = 2147483647.0;

67 
	#VSTR_MAX
(
Àn
Ë()÷í / 5 + (À¿% 5 =0)?0:1 + 1)

	)

68 
£ed_t
 
	gSìd
[
MAX_STREAM
 + 1] =

70 {
PART
, 1, 0, 1},

71 {
PART
, 46831694, 0, 1},

72 {
PART
, 1841581359, 0, 1},

73 {
PART
, 1193163244, 0, 1},

74 {
PART
, 727633698, 0, 1},

75 {
NONE
, 933588178, 0, 1},

76 {
PART
, 804159733, 0, 2},

77 {
PSUPP
, 1671059989, 0, 
SUPP_PER_PART
},

78 {
PSUPP
, 1051288424, 0, 
SUPP_PER_PART
},

79 {
PSUPP
, 1961692154, 0, 
SUPP_PER_PART
 * 2},

80 {
ORDER
, 1227283347, 0, 1},

81 {
ORDER
, 1171034773, 0, 1},

82 {
ORDER
, 276090261, 0, 2},

83 {
ORDER
, 1066728069, 0, 1},

84 {
LINE
, 209208115, 0, 
O_LCNT_MAX
},

85 {
LINE
, 554590007, 0, 
O_LCNT_MAX
},

86 {
LINE
, 721958466, 0, 
O_LCNT_MAX
},

87 {
LINE
, 1371272478, 0, 
O_LCNT_MAX
},

88 {
LINE
, 675466456, 0, 
O_LCNT_MAX
},

89 {
LINE
, 1808217256, 0, 
O_LCNT_MAX
},

90 {
LINE
, 2095021727, 0, 
O_LCNT_MAX
},

91 {
LINE
, 1769349045, 0, 
O_LCNT_MAX
},

92 {
LINE
, 904914315, 0, 
O_LCNT_MAX
},

93 {
LINE
, 373135028, 0, 
O_LCNT_MAX
},

94 {
LINE
, 717419739, 0, 
O_LCNT_MAX
},

95 {
LINE
, 1095462486, 0, 
O_LCNT_MAX
 * 2},

96 {
CUST
, 881155353, 0, 9},

97 {
CUST
, 1489529863, 0, 1},

98 {
CUST
, 1521138112, 0, 3},

99 {
CUST
, 298370230, 0, 1},

100 {
CUST
, 1140279430, 0, 1},

101 {
CUST
, 1335826707, 0, 2},

102 {
SUPP
, 706178559, 0, 9},

103 {
SUPP
, 110356601, 0, 1},

104 {
SUPP
, 884434366, 0, 3},

105 {
SUPP
, 962338209, 0, 1},

106 {
SUPP
, 1341315363, 0, 2},

107 {
PART
, 709314158, 0, 92},

108 {
ORDER
, 591449447, 0, 1},

109 {
LINE
, 431918286, 0, 1},

110 {
ORDER
, 851767375, 0, 1},

111 {
NATION
, 606179079, 0, 2},

112 {
REGION
, 1500869201, 0, 2},

113 {
ORDER
, 1434868289, 0, 1},

114 {
SUPP
, 263032577, 0, 1},

115 {
SUPP
, 753643799, 0, 1},

116 {
SUPP
, 202794285, 0, 1},

117 {
SUPP
, 715851524, 0, 1}

121 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/rng64.h

22 #i‚de‡
DBGEN_TPCH_RNG64_H


23 
	#DBGEN_TPCH_RNG64_H


	)

25 
	~"utû/«me•a˚.h
"

27 
ENTER_NAMESPACE
(
dbgíçch
);

30 
DSS_HUGE
 
Adv™˚R™d64
–DSS_HUGE 
nSìd
, DSS_HUGE 
nCou¡
);

31 
dss_øndom64
(
DSS_HUGE
 *
tgt
, DSS_HUGE 
nLow
, DSS_HUGE 
nHigh
, 
°ªam
);

32 
DSS_HUGE
 
NextR™d64
(DSS_HUGE 
nSìd
);

35 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/shared.h

22 #i‚de‡
DBGEN_TPCH_SHARED_H


23 
	#DBGEN_TPCH_SHARED_H


	)

25 
	~"utû/«me•a˚.h
"

27 
ENTER_NAMESPACE
(
dbgíçch
);

30 
	#N_CMNT_LEN
 72

	)

31 
	#N_CMNT_MAX
 152

	)

32 
	#R_CMNT_LEN
 72

	)

33 
	#R_CMNT_MAX
 152

	)

34 
	#MONEY_SCL
 0.01

	)

35 
	#V_STR_HGH
 1.6

	)

36 
	#P_NAME_LEN
 55

	)

37 
	#P_MFG_LEN
 25

	)

38 
	#P_BRND_LEN
 10

	)

39 
	#P_TYPE_LEN
 25

	)

40 
	#P_CNTR_LEN
 10

	)

41 
	#P_CMNT_LEN
 14

	)

42 
	#P_CMNT_MAX
 23

	)

43 
	#S_NAME_LEN
 25

	)

44 
	#S_ADDR_LEN
 25

	)

45 
	#S_ADDR_MAX
 40

	)

46 
	#S_CMNT_LEN
 63

	)

47 
	#S_CMNT_MAX
 101

	)

48 
	#PS_CMNT_LEN
 124

	)

49 
	#PS_CMNT_MAX
 199

	)

50 
	#C_NAME_LEN
 18

	)

51 
	#C_ADDR_LEN
 25

	)

52 
	#C_ADDR_MAX
 40

	)

53 
	#C_MSEG_LEN
 10

	)

54 
	#C_CMNT_LEN
 73

	)

55 
	#C_CMNT_MAX
 117

	)

56 
	#O_OPRIO_LEN
 15

	)

57 
	#O_CLRK_LEN
 15

	)

58 
	#O_CMNT_LEN
 49

	)

59 
	#O_CMNT_MAX
 79

	)

60 
	#L_CMNT_LEN
 27

	)

61 
	#L_CMNT_MAX
 44

	)

62 
	#L_INST_LEN
 25

	)

63 
	#L_SMODE_LEN
 10

	)

64 
	#T_ALPHA_LEN
 10

	)

65 
	#DATE_LEN
 13

	)

66 
	#NATION_LEN
 25

	)

67 
	#REGION_LEN
 25

	)

68 
	#PHONE_LEN
 15

	)

69 
	#MAXAGG_LEN
 20

	)

70 
	#P_CMNT_SD
 6

	)

71 
	#PS_CMNT_SD
 9

	)

72 
	#O_CMNT_SD
 12

	)

73 
	#C_ADDR_SD
 26

	)

74 
	#C_CMNT_SD
 31

	)

75 
	#S_ADDR_SD
 32

	)

76 
	#S_CMNT_SD
 36

	)

77 
	#L_CMNT_SD
 25

	)

80 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/dbgen/tpcd.h

28 #i‚de‡
DBGEN_TPCH_TPCD_H


29 
	#DBGEN_TPCH_TPCD_H


	)

31 
	~"utû/«me•a˚.h
"

33 
ENTER_NAMESPACE
(
dbgíçch
);

36 
	#DFLT
 0x0001

	)

37 
	#OUTPUT
 0x0002

	)

38 
	#EXPLAIN
 0x0004

	)

39 
	#DBASE
 0x0008

	)

40 
	#VERBOSE
 0x0010

	)

41 
	#TIMING
 0x0020

	)

42 
	#LOG
 0x0040

	)

43 
	#QUERY
 0x0080

	)

44 
	#REFRESH
 0x0100

	)

45 
	#ANSI
 0x0200

	)

46 
	#SEED
 0x0400

	)

47 
	#COMMENT
 0x0800

	)

48 
	#INIT
 0x1000

	)

49 
	#TERMINATE
 0x2000

	)

50 
	#DFLT_NUM
 0x4000

	)

55 
	#VTAG
 ':'

	)

56 
	#oÂ
 
°dout


	)

57 
	#QDIR_TAG
 "DSS_QUERY"

	)

58 
	#QDIR_DFLT
 "."

	)

63 #ifde‡
DB2


64 
	#GEN_QUERY_PLAN
 "SET CURRENT EXPLAIN SNAPSHOT ON;"

	)

65 
	#START_TRAN
 ""

	)

66 
	#END_TRAN
 "COMMIT WORK;"

	)

67 
	#SET_OUTPUT
 ""

	)

68 
	#SET_ROWCOUNT
 "--#SET ROWS_FETCH %d\n"

	)

69 
	#SET_DBASE
 "CONNECT TO %†;\n"

	)

72 #ifde‡
INFORMIX


73 
	#GEN_QUERY_PLAN
 "SET EXPLAIN ON;"

	)

74 
	#START_TRAN
 "BEGIN WORK;"

	)

75 
	#END_TRAN
 "COMMIT WORK;"

	)

76 
	#SET_OUTPUT
 "OUTPUT TO "

	)

77 
	#SET_ROWCOUNT
 "FIRST %d"

	)

78 
	#SET_DBASE
 "d©aba£ %†;\n"

	)

81 #ifde‡ 
SQLSERVER


82 
	#GEN_QUERY_PLAN
 "£àshow∂™ on\n£àn€xe¯⁄\ngo\n"

	)

83 
	#START_TRAN
 "begöÅønß˘i⁄\ngo\n"

	)

84 
	#END_TRAN
 "commôÅønß˘i⁄\ngo\n"

	)

85 
	#SET_OUTPUT
 ""

	)

86 
	#SET_ROWCOUNT
 "£àrowcou¡ %d\ngo\n\n"

	)

87 
	#SET_DBASE
 "u£ %s\ngo\n"

	)

90 #ifde‡ 
SYBASE


91 
	#GEN_QUERY_PLAN
 "£àshow∂™ on\n£àn€xe¯⁄\ngo\n"

	)

92 
	#START_TRAN
 "begöÅønß˘i⁄\ngo\n"

	)

93 
	#END_TRAN
 "commôÅønß˘i⁄\ngo\n"

	)

94 
	#SET_OUTPUT
 ""

	)

95 
	#SET_ROWCOUNT
 "£àrowcou¡ %d\ngo\n\n"

	)

96 
	#SET_DBASE
 "u£ %s\ngo\n"

	)

99 #ifde‡
TDAT


100 
	#GEN_QUERY_PLAN
 "EXPLAIN"

	)

101 
	#START_TRAN
 "BEGIN TRANSACTION"

	)

102 
	#END_TRAN
 "END TRANSACTION"

	)

103 
	#SET_OUTPUT
 ".SET FORMAT OFF\n.EXPORT REPORT fûe="

	)

104 
	#SET_ROWCOUNT
 ".SET RETCANCEL ON\n.SET RETLIMIT %d\n"

	)

105 
	#SET_DBASE
 ".LOGON %s\n"

	)

108 
	#MAX_VARS
 8

	)

109 
	#QLEN_MAX
 2048

	)

110 
	#QUERIES_PER_SET
 22

	)

111 
	#MAX_PIDS
 50

	)

113 
EXTERN
 
	gÊags
;

114 
EXTERN
 
	gs_˙t
;

115 
EXTERN
 *
	gosuff
;

116 
EXTERN
 
	g°ªam
;

117 
EXTERN
 *
	glfûe
;

118 
EXTERN
 *
	gifûe
;

119 
EXTERN
 *
	gtfûe
;

121 
	#MAX_PERMUTE
 41

	)

122 #ifde‡
DECLARER


123 
	grow˙t_dÊt
[
QUERIES_PER_SET
 + 1] =

125 
	grow˙t
;

126 
	#SEQUENCE
(
°ªam
, 
quîy
Ë
≥rmuèti⁄
[°ªam % 
MAX_PERMUTE
][quîy - 1]

	)

128 
row˙t_dÊt
[];

129 
row˙t
;

133 
EXIT_NAMESPACE
(
dbgíçch
);

	@include/workload/tpch/shore_tpch_client.h

31 #i‚de‡
__SHORE_TPCH_CLIENT_H


32 
	#__SHORE_TPCH_CLIENT_H


	)

34 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

36 
	~"w‹klﬂd/çch/çch_c⁄°.h
"

37 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

40 
ENTER_NAMESPACE
(
çch
);

42 
usög
 
«me•a˚
 
	gsh‹e
;

53 ˛as†
	cba£löe_çch_˛õ¡_t
 : 
public
 
ba£_˛õ¡_t


55 
¥iv©e
:

56 
_£lid
;

57 
åx_w‹kî_t
* 
	m_w‹kî
;

58 
	m_qf
;

60 
	mpublic
:

62 
	$ba£löe_çch_˛õ¡_t
() { }

64 
	`ba£löe_çch_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
, 
Sh‹eTPCHEnv
* 
ív
,

65 c⁄° 
MósuªmítTy≥
 
aTy≥
, c⁄° 
åxid
,

66 c⁄° 
numOfTrxs
,

67 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
£lID
, c⁄° 
qf
);

69 ~
	$ba£löe_çch_˛õ¡_t
(Ë{ 
	}
}

72 
lﬂd_sup_x˘
(
m≠SupTrxs
& 
m≠
);

76 
w_rc_t
 
submô_⁄e
(
x˘_ty≥
, 
x˘id
);

81 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/shore_tpch_env.h

32 #i‚de‡
__SHORE_TPCH_ENV_H


33 
	#__SHORE_TPCH_ENV_H


	)

35 
	~"sm_vas.h
"

36 
	~"utû.h
"

38 
	~"sm/sh‹e/sh‹e_ív.h
"

39 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

40 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

42 
	~"w‹klﬂd/çch/çch_c⁄°.h
"

44 
	~"w‹klﬂd/çch/sh‹e_çch_schema_m™.h
"

45 
	~"w‹klﬂd/çch/çch_öput.h
"

47 #ifde‡
CFG_QPIPE


48 
	~"qpùe.h
"

51 
	~<m≠
>

53 
usög
 
«me•a˚
 
	gsh‹e
;

56 
ENTER_NAMESPACE
(
çch
);

59 
usög
 
	g°d
::
m≠
;

66 c⁄° 
	gTPCH_SCALING_FACTOR
 = 1;

70 c⁄° 
	gCUST_POP_UNIT
 = 10;

71 c⁄° 
	gPART_POP_UNIT
 = 10;

81 ˛as†
	crow_d©a_t


83 
	mpublic
:

84 
ve˘‹
<
èbÀ_row_t
 *> 
rows
;

95 
	sSh‹eTPCHTrxCou¡


97 
uöt
 
	mq1
;

98 
uöt
 
	mq2
;

99 
uöt
 
	mq3
;

100 
uöt
 
	mq4
;

101 
uöt
 
	mq5
;

102 
uöt
 
	mq6
;

103 
uöt
 
	mq7
;

104 
uöt
 
	mq8
;

105 
uöt
 
	mq9
;

106 
uöt
 
	mq10
;

107 
uöt
 
	mq11
;

108 
uöt
 
	mq12
;

109 
uöt
 
	mq13
;

110 
uöt
 
	mq14
;

111 
uöt
 
	mq15
;

112 
uöt
 
	mq16
;

113 
uöt
 
	mq17
;

114 
uöt
 
	mq18
;

115 
uöt
 
	mq19
;

116 
uöt
 
	mq20
;

117 
uöt
 
	mq21
;

118 
uöt
 
	mq22
;

119 
uöt
 
	mqlöeôem
;

120 
uöt
 
	mq«ti⁄
;

121 
uöt
 
	mqªgi⁄
;

122 
uöt
 
	mq‹dîs
;

123 
uöt
 
	mq∑π
;

124 
uöt
 
	mq∑πsuµ
;

125 
uöt
 
	mqsuµlõr
;

126 
uöt
 
	mqcu°omî
;

128 
uöt
 
	mqNP
;

131 
	mSh‹eTPCHTrxCou¡
& 
	m›î©‹
+=(
Sh‹eTPCHTrxCou¡
 c⁄°& 
rhs
) {

132 
q1
 +
rhs
.q1;

133 
	mq2
 +
rhs
.
q2
;

134 
	mq3
 +
rhs
.
q3
;

135 
	mq4
 +
rhs
.
q4
;

136 
	mq5
 +
rhs
.
q5
;

137 
	mq6
 +
rhs
.
q6
;

138 
	mq7
 +
rhs
.
q7
;

139 
	mq8
 +
rhs
.
q8
;

140 
	mq9
 +
rhs
.
q9
;

141 
	mq10
 +
rhs
.
q10
;

142 
	mq11
 +
rhs
.
q11
;

143 
	mq12
 +
rhs
.
q12
;

144 
	mq13
 +
rhs
.
q13
;

145 
	mq14
 +
rhs
.
q14
;

146 
	mq15
 +
rhs
.
q15
;

147 
	mq16
 +
rhs
.
q16
;

148 
	mq17
 +
rhs
.
q17
;

149 
	mq18
 +
rhs
.
q18
;

150 
	mq19
 +
rhs
.
q19
;

151 
	mq20
 +
rhs
.
q20
;

152 
	mq21
 +
rhs
.
q21
;

153 
	mq22
 +
rhs
.
q22
;

154 
	mqlöeôem
 +
rhs
.
qlöeôem
;

155 
	mq«ti⁄
 +
rhs
.
q«ti⁄
;

156 
	mqªgi⁄
 +
rhs
.
qªgi⁄
;

157 
	mq‹dîs
 +
rhs
.
q‹dîs
;

158 
	mq∑π
 +
rhs
.
q∑π
;

159 
	mq∑πsuµ
 +
rhs
.
q∑πsuµ
;

160 
	mqsuµlõr
 +
rhs
.
qsuµlõr
;

161 
	mqcu°omî
 +
rhs
.
qcu°omî
;

163 
	mqNP
 +
rhs
.
qNP
;

165  (*
	mthis
);

168 
	mSh‹eTPCHTrxCou¡
& 
	m›î©‹
-=(
Sh‹eTPCHTrxCou¡
 c⁄°& 
rhs
) {

169 
q1
 -
rhs
.q1;

170 
	mq2
 -
rhs
.
q2
;

171 
	mq3
 -
rhs
.
q3
;

172 
	mq4
 -
rhs
.
q4
;

173 
	mq5
 -
rhs
.
q5
;

174 
	mq6
 -
rhs
.
q6
;

175 
	mq7
 -
rhs
.
q7
;

176 
	mq8
 -
rhs
.
q8
;

177 
	mq9
 -
rhs
.
q9
;

178 
	mq10
 -
rhs
.
q10
;

179 
	mq11
 -
rhs
.
q11
;

180 
	mq12
 -
rhs
.
q12
;

181 
	mq13
 -
rhs
.
q13
;

182 
	mq14
 -
rhs
.
q14
;

183 
	mq15
 -
rhs
.
q15
;

184 
	mq16
 -
rhs
.
q16
;

185 
	mq17
 -
rhs
.
q17
;

186 
	mq18
 -
rhs
.
q18
;

187 
	mq19
 -
rhs
.
q19
;

188 
	mq20
 -
rhs
.
q20
;

189 
	mq21
 -
rhs
.
q21
;

190 
	mq22
 -
rhs
.
q22
;

191 
	mqlöeôem
 -
rhs
.
qlöeôem
;

192 
	mq«ti⁄
 -
rhs
.
q«ti⁄
;

193 
	mqªgi⁄
 -
rhs
.
qªgi⁄
;

194 
	mq‹dîs
 -
rhs
.
q‹dîs
;

195 
	mq∑π
 -
rhs
.
q∑π
;

196 
	mq∑πsuµ
 -
rhs
.
q∑πsuµ
;

197 
	mqsuµlõr
 -
rhs
.
qsuµlõr
;

198 
	mqcu°omî
 -
rhs
.
qcu°omî
;

200 
	mqNP
 -
rhs
.
qNP
;

202  (*
	mthis
);

205 
uöt
 
tŸÆ
() const {

206  (
	mq1
+
	mq2
+
	mq3
+
	mq4
+
	mq5
+
	mq6
+
	mq7
+
	mq8
+
	mq9
+
	mq10
+

207 
	mq11
+
	mq12
+
	mq13
+
	mq14
+
	mq15
+
	mq16
+
	mq17
+
	mq18
+
	mq19
+
	mq20
+

208 
	mq21
+
	mq22
+
	mqlöeôem
+
	mq«ti⁄
+
	mqªgi⁄
+
	mq‹dîs
+
	mq∑π
+
	mq∑πsuµ
+
	mqsuµlõr
+
	mqcu°omî
+

209 
	mqNP
);

215 
	sSh‹eTPCHTrxSèts


217 
Sh‹eTPCHTrxCou¡
 
	m©ãm±ed
;

218 
Sh‹eTPCHTrxCou¡
 
	mÁûed
;

219 
Sh‹eTPCHTrxCou¡
 
	mdódlocked
;

221 
	mSh‹eTPCHTrxSèts
& 
	m›î©‹
+=(
Sh‹eTPCHTrxSèts
 c⁄°& 
Ÿhî
) {

222 
©ãm±ed
 +
Ÿhî
.attempted;

223 
	mÁûed
 +
Ÿhî
.
Áûed
;

224 
	mdódlocked
 +
Ÿhî
.
dódlocked
;

225  (*
	mthis
);

228 
	mSh‹eTPCHTrxSèts
& 
	m›î©‹
-=(
Sh‹eTPCHTrxSèts
 c⁄°& 
Ÿhî
) {

229 
©ãm±ed
 -
Ÿhî
.attempted;

230 
	mÁûed
 -
Ÿhî
.
Áûed
;

231 
	mdódlocked
 -
Ÿhî
.
dódlocked
;

232  (*
	mthis
);

246 ˛as†
	cSh‹eTPCHEnv
 : 
public
 
Sh‹eEnv


248 
public
:

249 
°d
::
	tm≠
<
	t±hªad_t
, 
	tSh‹eTPCHTrxSèts
*> 
	t°©m≠_t
;

251 
˛ass
 
	mèbÀ_buûdî_t
;

252 
˛ass
 
	mèbÀ_¸ót‹_t
;

253 
	mcheckpoöãr_t
;

255 
	m¥iv©e
:

257 
w_rc_t
 
_po°_öô_im∂
();

260 
w_rc_t
 
_gí_⁄e_«ti⁄
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

261 
w_rc_t
 
_gí_⁄e_ªgi⁄
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

262 
w_rc_t
 
_gí_⁄e_suµlõr
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

263 
w_rc_t
 
_gí_⁄e_∑π_ba£d
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

264 
w_rc_t
 
_gí_⁄e_cu°_ba£d
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
);

266 
	mpublic
:

267 
Sh‹eTPCHEnv
();

268 
	mvútuÆ
 ~
Sh‹eTPCHEnv
();

272 
vútuÆ
 
	$£t
(
ívV¨M≠
* ) { (0); };

273 
vútuÆ
 
	$›í
(Ë{ (0); 
	}
};

274 
vútuÆ
 
	$∑u£
(Ë{ (0); 
	}
};

275 
vútuÆ
 
	$ªsume
(Ë{ (0); 
	}
};

276 
vútuÆ
 
w_rc_t
 
	$√wrun
(Ë{ (
RCOK
); 
	}
};

278 
vútuÆ
 
po°_öô
();

279 
vútuÆ
 
w_rc_t
 
lﬂd_schema
();

281 
vútuÆ
 
w_rc_t
 
lﬂd_™d_ªgi°î_fids
();

283 
vútuÆ
 
c⁄f
();

284 
vútuÆ
 
°¨t
();

285 
vútuÆ
 
°›
();

286 
vútuÆ
 
	$öfo
() const;

287 
vútuÆ
 
	`°©i°ics
();

289 
w_rc_t
 
	`w¨mup
();

290 
w_rc_t
 
	`check_c⁄si°ícy
();

292 
	`dump
();

294 
vútuÆ
 
	`¥öt_throughput
(c⁄° 
iQuîõdSF
,

295 c⁄° 
iS¥ód
,

296 c⁄° 
iNumOfThªads
,

297 c⁄° 
dñay
,

298 c⁄° 
ul⁄g_t
 
mioch
,

299 c⁄° 
avg˝uußge
);

304 
w_rc_t
 
	`lﬂdd©a
();

307 
	`DECLARE_TABLE
(
«ti⁄_t
,
«ti⁄_m™_im∂
,
«ti⁄
);

308 
	`DECLARE_TABLE
(
ªgi⁄_t
,
ªgi⁄_m™_im∂
,
ªgi⁄
);

309 
	`DECLARE_TABLE
(
∑π_t
,
∑π_m™_im∂
,
∑π
);

310 
	`DECLARE_TABLE
(
suµlõr_t
,
suµlõr_m™_im∂
,
suµlõr
);

311 
	`DECLARE_TABLE
(
∑πsuµ_t
,
∑πsuµ_m™_im∂
,
∑πsuµ
);

312 
	`DECLARE_TABLE
(
cu°omî_t
,
cu°omî_m™_im∂
,
cu°omî
);

313 
	`DECLARE_TABLE
(
‹dîs_t
,
‹dîs_m™_im∂
,
‹dîs
);

314 
	`DECLARE_TABLE
(
löeôem_t
,
löeôem_m™_im∂
,
löeôem
);

319 
w_rc_t
 
	`run_⁄e_x˘
(
Reque°
* 
¥eque°
);

322 
	`DECLARE_TRX
(
q1
);

323 
	`DECLARE_TRX
(
q2
);

324 
	`DECLARE_TRX
(
q3
);

325 
	`DECLARE_TRX
(
q4
);

326 
	`DECLARE_TRX
(
q5
);

327 
	`DECLARE_TRX
(
q6
);

328 
	`DECLARE_TRX
(
q7
);

329 
	`DECLARE_TRX
(
q8
);

330 
	`DECLARE_TRX
(
q9
);

331 
	`DECLARE_TRX
(
q10
);

332 
	`DECLARE_TRX
(
q11
);

333 
	`DECLARE_TRX
(
q12
);

334 
	`DECLARE_TRX
(
q13
);

335 
	`DECLARE_TRX
(
q14
);

336 
	`DECLARE_TRX
(
q15
);

337 
	`DECLARE_TRX
(
q16
);

338 
	`DECLARE_TRX
(
q17
);

339 
	`DECLARE_TRX
(
q18
);

340 
	`DECLARE_TRX
(
q19
);

341 
	`DECLARE_TRX
(
q20
);

342 
	`DECLARE_TRX
(
q21
);

343 
	`DECLARE_TRX
(
q22
);

344 
	`DECLARE_TRX
(
qlöeôem
);

345 
	`DECLARE_TRX
(
q‹dîs
);

346 
	`DECLARE_TRX
(
q«ti⁄
);

347 
	`DECLARE_TRX
(
qªgi⁄
);

348 
	`DECLARE_TRX
(
q∑π
);

349 
	`DECLARE_TRX
(
qsuµlõr
);

350 
	`DECLARE_TRX
(
q∑πsuµ
);

351 
	`DECLARE_TRX
(
qcu°omî
);

354 
	`DECLARE_TRX
(
qNP
);

357 
	`DECLARE_TRX
(
p›uœã_ba£löe
);

358 
	`DECLARE_TRX
(
p›uœã_some_∑πs
);

359 
	`DECLARE_TRX
(
p›uœã_some_cu°s
);

363 
ãm∂©e
<
˛ass
 
T1_m™
, cœs†
T2_m™
, cœs†
T1_desc
, cœs†
T2_desc
>

364 
w_rc_t


365 
	`joö_1_èbÀ
(
gu¨d
<
T1_m™
> , gu¨d<
T2_m™
> ,

366 
gu¨d
<
T1_desc
>, gu¨d<
T2_desc
>,

367 
ve˘‹
<
row_d©a_t
*>& );

370 
ãm∂©e
<
˛ass
 
T_m™
, cœs†
T_desc
>

371 
w_rc_t


372 
	`joö_2_èbÀ
(
gu¨d
<
T_m™
> , gu¨d<
T_desc
> ,

373 
ve˘‹
<
row_d©a_t
 *> ,

374 
ve˘‹
<
row_d©a_t
*> );

376 
ãm∂©e
<
˛ass
 
T
> 
	$f
(Ë{
	}
}

379 #ifde‡
CFG_QPIPE


380 
	g¥iv©e
:

381 
gu¨d
<
pﬁicy_t
> 
_sched_pﬁicy
;

383 
	gpublic
:

384 
pﬁicy_t
* 
gë_sched_pﬁicy
();

385 
pﬁicy_t
* 
£t_sched_pﬁicy
(c⁄° * 
•ﬁicy
);

386 
w_rc_t
 
run_⁄e_qpùe_x˘
(
Reque°
* 
¥eque°
);

389 
DECLARE_QPIPE_TRX
(
q1
);

390 
DECLARE_QPIPE_TRX
(
q2
);

391 
DECLARE_QPIPE_TRX
(
q3
);

392 
DECLARE_QPIPE_TRX
(
q4
);

393 
DECLARE_QPIPE_TRX
(
q5
);

394 
DECLARE_QPIPE_TRX
(
q6
);

395 
DECLARE_QPIPE_TRX
(
q7
);

396 
DECLARE_QPIPE_TRX
(
q8
);

397 
DECLARE_QPIPE_TRX
(
q9
);

398 
DECLARE_QPIPE_TRX
(
q10
);

399 
DECLARE_QPIPE_TRX
(
q11
);

400 
DECLARE_QPIPE_TRX
(
q12
);

401 
DECLARE_QPIPE_TRX
(
q13
);

402 
DECLARE_QPIPE_TRX
(
q14
);

403 
DECLARE_QPIPE_TRX
(
q15
);

404 
DECLARE_QPIPE_TRX
(
q16
);

405 
DECLARE_QPIPE_TRX
(
q17
);

406 
DECLARE_QPIPE_TRX
(
q18
);

407 
DECLARE_QPIPE_TRX
(
q19
);

408 
DECLARE_QPIPE_TRX
(
q20
);

409 
DECLARE_QPIPE_TRX
(
q21
);

410 
DECLARE_QPIPE_TRX
(
q22
);

411 
DECLARE_QPIPE_TRX
(
qlöeôem
);

412 
DECLARE_QPIPE_TRX
(
q‹dîs
);

413 
DECLARE_QPIPE_TRX
(
q«ti⁄
);

414 
DECLARE_QPIPE_TRX
(
qªgi⁄
);

415 
DECLARE_QPIPE_TRX
(
q∑π
);

416 
DECLARE_QPIPE_TRX
(
qsuµlõr
);

417 
DECLARE_QPIPE_TRX
(
q∑πsuµ
);

418 
DECLARE_QPIPE_TRX
(
qcu°omî
);

423 
vútuÆ
 
ív_thªad_öô
();

424 
vútuÆ
 
ív_thªad_föi
();

427 
°©m≠_t
 
	g_°©m≠
;

430 
Sh‹eTPCHTrxSèts
 
	g_œ°_°©s
;

431 
vútuÆ
 
ª£t_°©s
();

432 
Sh‹eTPCHTrxSèts
 
_gë_°©s
();

437 
	gãm∂©e
<
˛ass
 
	gT_m™
, cœs†
	gT_desc
>

438 
w_rc_t


439 
	gSh‹eTPCHEnv
::
joö_2_èbÀ
(
gu¨d
<
T_m™
> 
_t_m
, gu¨d<
T_desc
> 
_t_d
, 
ve˘‹
<
row_d©a_t
 *> 
£tOfRow
, ve˘‹<row_d©a_à*> 
ªsu…
)

442 
as£π
 (
_pssm
);

443 
as£π
 (
_öôülized
);

444 
as£π
 (
_lﬂded
);

448 
èbÀ_row_t
* 
	gt_r
 = 
_t_m
->
gë_tu∂e
();

449 
as£π
(
t_r
);

451 
w_rc_t
 
	ge
 =
RCOK
;

454 
ªp_row_t
 
¨ïrow
(
_t_m
->
ts
());

455 
	g¨ïrow
.
£t
(
_t_d
->
maxsize
());

457 
	gt_r
->
	g_ªp
 = &
¨ïrow
;

458 
	ggu¨d
< 
	gèbÀ_sˇn_ôî_im∂
<
	gT_desc
> > 
	gl_ôî
;

460 
	gèbÀ_sˇn_ôî_im∂
<
	gT_desc
>* 
	gt
;

461 
	ge
 = 
_t_m
->
gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
t
);

462 
	gl_ôî
 = 
t
;

463 i‡(
	ge
.
is_îr‹
()Ë{ 
	gd⁄e
; }

465 
boﬁ
 
	geof
;

467 
	ge
 = 
l_ôî
->
√xt
(
_pssm
, 
eof
, *
t_r
);

469 !
	geof
){

470 
	gr
 = 0;Ñ < 
	g£tOfRow
.
size
();Ñ++){

473 
row_d©a_t
 * 
	gjoöed_row
 = 
√w
Ñow_d©a_t(*
£tOfRow
[
r
]);

474 
	gjoöed_row
->
	grows
.
push_back
(
t_r
);

475 
	gªsu…
.
push_back
(
joöed_row
);

478 
	ge
 = 
l_ôî
->
√xt
(
_pssm
, 
eof
, *
t_r
);

479 i‡(
	ge
.
is_îr‹
()Ë{
	gd⁄e
;}

483  (
	gRCOK
);

486 
	gãm∂©e
<
˛ass
 
	gT1_m™
, cœs†
	gT2_m™
, cœs†
	gT1_desc
, cœs†
	gT2_desc
>

487 
w_rc_t


488 
	gSh‹eTPCHEnv
::
joö_1_èbÀ
(
gu¨d
<
T1_m™
> 
_t1_m
, gu¨d<
T2_m™
> 
_t2_m
, gu¨d<
T1_desc
>
_t1_d
, gu¨d<
T2_desc
>
_t2_d
, 
ve˘‹
<
row_d©a_t
*>& 
ªsu…
)

493 
as£π
 (
_pssm
);

494 
as£π
 (
_öôülized
);

495 
as£π
 (
_lﬂded
);

498 
èbÀ_row_t
* 
	gt1_r
 = 
_t1_m
->
gë_tu∂e
();

499 
as£π
(
t1_r
);

501 
w_rc_t
 
	ge1
 =
RCOK
;

504 
ªp_row_t
 
¨ïrow1
(
_t1_m
->
ts
());

505 
	g¨ïrow1
.
£t
(
_t1_d
->
maxsize
());

507 
	gt1_r
->
	g_ªp
 = &
¨ïrow1
;

510 
èbÀ_row_t
* 
	gt2_r
 = 
_t2_m
->
gë_tu∂e
();

511 
as£π
(
t2_r
);

512 
w_rc_t
 
	ge2
 =
RCOK
;

515 
ªp_row_t
 
¨ïrow2
(
_t2_m
->
ts
());

516 
	g¨ïrow2
.
£t
(
_t2_d
->
maxsize
());

518 
	gt2_r
->
	g_ªp
 = &
¨ïrow2
;

519 
	gc
 =0;

520 
	ggu¨d
< 
	gèbÀ_sˇn_ôî_im∂
<
	gT1_desc
> > 
	gl_ôî1
;

522 
	gèbÀ_sˇn_ôî_im∂
<
	gT1_desc
>* 
	gt1
;

523 
	ge1
 = 
_t1_m
->
gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
t1
);

524 
	gl_ôî1
 = 
t1
;

525 i‡(
	ge1
.
is_îr‹
()Ë{ 
	gd⁄e
; }

527 
boﬁ
 
	geof1
;

529 
	ge1
 = 
l_ôî1
->
√xt
(
_pssm
, 
eof1
, *
t1_r
);

531 !
	geof1
){

533 
	ggu¨d
< 
	gèbÀ_sˇn_ôî_im∂
<
	gT2_desc
> > 
	gl_ôî2
;

535 
	gèbÀ_sˇn_ôî_im∂
<
	gT2_desc
>* 
	gt2
;

536 
	ge2
 = 
_t2_m
->
gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
t2
);

537 
	gl_ôî2
 = 
t2
;

538 i‡(
	ge2
.
is_îr‹
()Ë{ 
	gd⁄e
; }

540 
boﬁ
 
	geof2
;

542 
	ge2
 = 
l_ôî2
->
√xt
(
_pssm
, 
eof2
, *
t2_r
);

544 !
	geof2
){

547 
	gc
++;

548 
èbÀ_row_t
* 
	gr1
 = 
√w
ÅabÀ_row_t(*
t1_r
);

549 
èbÀ_row_t
* 
	gr2
 = 
√w
ÅabÀ_row_t(*
t2_r
);

551 
row_d©a_t
* 
	gj
 = 
√w
Ñow_data_t;

552 
	gj
->
	grows
.
push_back
(
r1
);

553 
	gj
->
	grows
.
push_back
(
r2
);

555 
	gªsu…
.
push_back
(
j
);

557 
	ge2
 = 
l_ôî2
->
√xt
(
_pssm
, 
eof2
, *
t2_r
);

558 i‡(
	ge2
.
is_îr‹
()Ë{
	gd⁄e
;}

561 
	ge1
 = 
l_ôî1
->
√xt
(
_pssm
, 
eof1
, *
t1_r
);

562 i‡(
	ge1
.
is_îr‹
()Ë{
	gd⁄e
;}

565 
	gd⁄e
:

566 
cout
<<"*******num o‡tu∂ê: "<<
c
<<
ídl
;

567 
	g_t1_m
->
give_tu∂e
(
t1_r
);

568 
	g_t2_m
->
give_tu∂e
(
t2_r
);

569  (
	gRCOK
);

574 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/shore_tpch_schema.h

32 #i‚de‡
__SHORE_TPCH_SCHEMA_H


33 
	#__SHORE_TPCH_SCHEMA_H


	)

35 
	~<m©h.h
>

37 
	~"sm_vas.h
"

38 
	~"utû.h
"

40 
	~"w‹klﬂd/çch/çch_c⁄°.h
"

41 
	~"sm/sh‹e/sh‹e_èbÀ_m™.h
"

43 
usög
 
«me•a˚
 
	gsh‹e
;

46 
ENTER_NAMESPACE
(
çch
);

57 
DECLARE_TABLE_SCHEMA_PD
(
«ti⁄_t
);

58 
DECLARE_TABLE_SCHEMA_PD
(
ªgi⁄_t
);

59 
DECLARE_TABLE_SCHEMA_PD
(
suµlõr_t
);

60 
DECLARE_TABLE_SCHEMA_PD
(
∑π_t
);

61 
DECLARE_TABLE_SCHEMA_PD
(
∑πsuµ_t
);

62 
DECLARE_TABLE_SCHEMA_PD
(
cu°omî_t
);

63 
DECLARE_TABLE_SCHEMA_PD
(
‹dîs_t
);

64 
DECLARE_TABLE_SCHEMA_PD
(
löeôem_t
);

67 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/shore_tpch_schema_man.h

33 #i‚de‡
__SHORE_TPCH_SCHEMA_MANAGER_H


34 
	#__SHORE_TPCH_SCHEMA_MANAGER_H


	)

36 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

37 
	~"w‹klﬂd/çch/sh‹e_çch_schema.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

43 
ENTER_NAMESPACE
(
çch
);

52 
˛ass
 
	g«ti⁄_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
«ti⁄_t
>

54 
èbÀ_row_t
 
	t«ti⁄_tu∂e
;

56 
	gpublic
:

58 
«ti⁄_m™_im∂
(
«ti⁄_t
* 
aN©i⁄Desc
)

59 : 
èbÀ_m™_im∂
<
«ti⁄_t
>(
aN©i⁄Desc
)

62 ~
«ti⁄_m™_im∂
() { }

65 
w_rc_t
 
n_ödex_¥obe
(
ss_m
* 
db
,

66 
«ti⁄_tu∂e
* 
±u∂e
,

67 c⁄° 
n_«ti⁄key
);

72 
˛ass
 
	gªgi⁄_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
ªgi⁄_t
>

74 
èbÀ_row_t
 
	tªgi⁄_tu∂e
;

76 
	gpublic
:

78 
ªgi⁄_m™_im∂
(
ªgi⁄_t
* 
aRegi⁄Desc
)

79 : 
èbÀ_m™_im∂
<
ªgi⁄_t
>(
aRegi⁄Desc
)

82 ~
ªgi⁄_m™_im∂
() { }

85 
w_rc_t
 
r_ödex_¥obe
(
ss_m
* 
db
,

86 
ªgi⁄_tu∂e
* 
±u∂e
,

87 c⁄° 
r_ªgi⁄key
);

91 
˛ass
 
	g∑π_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
∑π_t
>

93 
èbÀ_row_t
 
	t∑π_tu∂e
;

95 
	gpublic
:

97 
∑π_m™_im∂
(
∑π_t
* 
aP¨tDesc
)

98 : 
èbÀ_m™_im∂
<
∑π_t
>(
aP¨tDesc
)

101 ~
∑π_m™_im∂
() { }

103 
w_rc_t
 
p_ödex_¥obe
(
ss_m
* 
db
,

104 
∑π_tu∂e
* 
±u∂e
,

105 c⁄° 
p_∑πkey
);

110 
˛ass
 
	gsuµlõr_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
suµlõr_t
>

112 
èbÀ_row_t
 
	tsuµlõr_tu∂e
;

113 
	gèbÀ_sˇn_ôî_im∂
<
	tsuµlõr_t
> 
	tsuµlõr_èbÀ_ôî
;

114 
	gödex_sˇn_ôî_im∂
<
	tsuµlõr_t
> 
	tsuµlõr_ödex_ôî
;

116 
	gpublic
:

118 
suµlõr_m™_im∂
(
suµlõr_t
* 
aSuµlõrDesc
)

119 : 
èbÀ_m™_im∂
<
suµlõr_t
>(
aSuµlõrDesc
)

123 ~
suµlõr_m™_im∂
()

128 
w_rc_t
 
s_ödex_¥obe
(
ss_m
* 
db
,

129 
suµlõr_tu∂e
* 
±u∂e
,

130 c⁄° 
s_suµkey
);

135 
˛ass
 
	g∑πsuµ_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
∑πsuµ_t
>

137 
èbÀ_row_t
 
	t∑πsuµ_tu∂e
;

138 
	gèbÀ_sˇn_ôî_im∂
<
	t∑πsuµ_t
> 
	t∑πsuµ_èbÀ_ôî
;

139 
	gödex_sˇn_ôî_im∂
<
	t∑πsuµ_t
> 
	t∑πsuµ_ödex_ôî
;

141 
	gpublic
:

143 
∑πsuµ_m™_im∂
(
∑πsuµ_t
* 
aP¨tsuµDesc
)

144 : 
èbÀ_m™_im∂
<
∑πsuµ_t
>(
aP¨tsuµDesc
)

148 ~
∑πsuµ_m™_im∂
()

152 
w_rc_t
 
ps_ödex_¥obe
(
ss_m
* 
db
,

153 
∑πsuµ_tu∂e
* 
±u∂e
,

154 c⁄° 
ps_∑πkey
,

155 c⁄° 
ps_suµkey
);

160 
˛ass
 
	gcu°omî_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
cu°omî_t
>

162 
èbÀ_row_t
 
	tcu°omî_tu∂e
;

163 
	gèbÀ_sˇn_ôî_im∂
<
	tcu°omî_t
> 
	tcu°omî_èbÀ_ôî
;

164 
	gödex_sˇn_ôî_im∂
<
	tcu°omî_t
> 
	tcu°omî_ödex_ôî
;

166 
	gpublic
:

168 
cu°omî_m™_im∂
(
cu°omî_t
* 
aCu°omîDesc
)

169 : 
èbÀ_m™_im∂
<
cu°omî_t
>(
aCu°omîDesc
)

172 ~
cu°omî_m™_im∂
() { }

185 
w_rc_t
 
c_ödex_¥obe
(
ss_m
* 
db
,

186 
cu°omî_tu∂e
* 
±u∂e
,

187 c⁄° 
c_cu°key
);

189 
w_rc_t
 
c_ödex_¥obe_by_«me
(
ss_m
* 
db
,

190 c⁄° * 
idx_«me
,

191 
cu°omî_tu∂e
* 
±u∂e
,

192 c⁄° 
c_cu°key
);

197 
˛ass
 
	g‹dîs_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
‹dîs_t
>

199 
èbÀ_row_t
 
	t‹dîs_tu∂e
;

200 
	gèbÀ_sˇn_ôî_im∂
<
	t‹dîs_t
> 
	t‹dîs_èbÀ_ôî
;

201 
	gödex_sˇn_ôî_im∂
<
	t‹dîs_t
> 
	t‹dîs_ödex_ôî
;

203 
	gpublic
:

205 
‹dîs_m™_im∂
(
‹dîs_t
* 
aOrdîsDesc
)

206 : 
èbÀ_m™_im∂
<
‹dîs_t
>(
aOrdîsDesc
)

210 ~
‹dîs_m™_im∂
()

215 
w_rc_t
 
o_gë_ôî_by_ödex
(
ss_m
* 
db
,

216 
‹dîs_ödex_ôî
* &
ôî
,

217 
‹dîs_tu∂e
* 
±u∂e
,

218 
ªp_row_t
 &
ª∂ow
,

219 
ªp_row_t
 &
ªphigh
,

220 c⁄° 
c_‹dîkey
,

221 
lock_mode_t
 
Æm
 = 
SH
,

222 
boﬁ
 
√ed_tu∂e
 = 
åue
);

224 
w_rc_t
 
o_gë_ôî_by_födex
(
ss_m
* 
db
,

225 
‹dîs_ödex_ôî
* &
ôî
,

226 
‹dîs_tu∂e
* 
±u∂e
,

227 
ªp_row_t
 &
ª∂ow
,

228 
ªp_row_t
 &
ªphigh
,

229 c⁄° 
o_cu°key
,

230 
lock_mode_t
 
Æm
 = 
SH
,

231 
boﬁ
 
√ed_tu∂e
 = 
åue
);

233 
w_rc_t
 
o_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

234 
‹dîs_ödex_ôî
* &
ôî
,

235 
‹dîs_tu∂e
* 
±u∂e
,

236 
ªp_row_t
 &
ª∂ow
,

237 
ªp_row_t
 &
ªphigh
,

238 c⁄° 
time_t
 
low_o_‹dîd©e
,

239 c⁄° 
time_t
 
high_o_‹dîd©e
,

240 
lock_mode_t
 
Æm
 = 
SH
,

241 
boﬁ
 
√ed_tu∂e
 = 
åue
);

247 
˛ass
 
	glöeôem_m™_im∂
 : 
public
 
èbÀ_m™_im∂
<
löeôem_t
>

249 
èbÀ_row_t
 
	tlöeôem_tu∂e
;

250 
	gèbÀ_sˇn_ôî_im∂
<
	tlöeôem_t
> 
	tlöeôem_èbÀ_ôî
;

251 
	gödex_sˇn_ôî_im∂
<
	tlöeôem_t
> 
	tlöeôem_ödex_ôî
;

253 
	gpublic
:

255 
löeôem_m™_im∂
(
löeôem_t
* 
aLöeôemDesc
)

256 : 
èbÀ_m™_im∂
<
löeôem_t
>(
aLöeôemDesc
)

260 ~
löeôem_m™_im∂
()

265 
w_rc_t
 
l_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

266 
löeôem_ödex_ôî
* &
ôî
,

267 
löeôem_tu∂e
* 
±u∂e
,

268 
ªp_row_t
 &
ª∂ow
,

269 
ªp_row_t
 &
ªphigh
,

270 c⁄° 
time_t
 
low_l_shùd©e
,

271 c⁄° 
time_t
 
high_l_shùd©e
,

272 
lock_mode_t
 
Æm
 = 
SH
,

273 
boﬁ
 
√ed_tu∂e
 = 
åue
);

286 
w_rc_t
 
l_gë_ønge_ôî_by_ª˚ùtd©e_ödex
(
ss_m
* 
db
,

287 
löeôem_ödex_ôî
* &
ôî
,

288 
löeôem_tu∂e
* 
±u∂e
,

289 
ªp_row_t
 &
ª∂ow
,

290 
ªp_row_t
 &
ªphigh
,

291 c⁄° 
time_t
 
low_l_ª˚ùtd©e
,

292 c⁄° 
time_t
 
high_l_ª˚ùtd©e
,

293 
lock_mode_t
 
Æm
 = 
SH
,

294 
boﬁ
 
√ed_tu∂e
 = 
åue
);

297 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/tpch_const.h

31 #i‚de‡
__TPCH_CONST_H


32 
	#__TPCH_CONST_H


	)

35 
	~"utû/«me•a˚.h
"

38 
ENTER_NAMESPACE
(
çch
);

43 c⁄° 
	gNATIONS
 = 25;

44 c⁄° 
	gREGIONS
 = 5;

45 c⁄° 
	gPARTS
 = 200000;

46 c⁄° 
	gSUPPLIERS
 = 10000;

47 c⁄° 
	gPARTSUPPS
 = 800000;

48 c⁄° 
	gCUSTOMERS
 = 150000;

49 c⁄° 
	gORDERS
 = 1500000;

51 c⁄° 
	gLINEITEMS_1
 = 6001215;

52 c⁄° 
	gLINEITEMS_10
 = 59986052;

53 c⁄° 
	gLINEITEMS_30
 = 179998372;

54 c⁄° 
	gLINEITEMS_100
 = 600037902;

56 c⁄° 
	gMAX_TABLENAM_LENGTH
 = 8;

57 c⁄° 
	gMAX_RECORD_LENGTH
 = 234;

62 c⁄° 
	gTPCH_NATION_FCOUNT
 = 4;

63 c⁄° 
	gTPCH_REGION_FCOUNT
 = 3;

64 c⁄° 
	gTPCH_PART_FCOUNT
 = 9;

65 c⁄° 
	gTPCH_SUPPLIER_FCOUNT
 = 7;

66 c⁄° 
	gTPCH_PARTSUPP_FCOUNT
 = 5;

67 c⁄° 
	gTPCH_CUSTOMER_FCOUNT
 = 8;

68 c⁄° 
	gTPCH_ORDERS_FCOUNT
 = 9;

69 c⁄° 
	gTPCH_LINEITEM_FCOUNT
 = 16;

73 c⁄° 
	gSHORE_TPCH_TABLES
 = 8;

79 c⁄° 
	gXCT_TPCH_MIX
 = 40;

80 c⁄° 
	gXCT_TPCH_Q1
 = 41;

81 c⁄° 
	gXCT_TPCH_Q2
 = 42;

82 c⁄° 
	gXCT_TPCH_Q3
 = 43;

83 c⁄° 
	gXCT_TPCH_Q4
 = 44;

84 c⁄° 
	gXCT_TPCH_Q5
 = 45;

85 c⁄° 
	gXCT_TPCH_Q6
 = 46;

86 c⁄° 
	gXCT_TPCH_Q7
 = 47;

87 c⁄° 
	gXCT_TPCH_Q8
 = 48;

88 c⁄° 
	gXCT_TPCH_Q9
 = 49;

89 c⁄° 
	gXCT_TPCH_Q10
 = 50;

90 c⁄° 
	gXCT_TPCH_Q11
 = 51;

91 c⁄° 
	gXCT_TPCH_Q12
 = 52;

92 c⁄° 
	gXCT_TPCH_Q13
 = 53;

93 c⁄° 
	gXCT_TPCH_Q14
 = 54;

94 c⁄° 
	gXCT_TPCH_Q15
 = 55;

95 c⁄° 
	gXCT_TPCH_Q16
 = 56;

96 c⁄° 
	gXCT_TPCH_Q17
 = 57;

97 c⁄° 
	gXCT_TPCH_Q18
 = 58;

98 c⁄° 
	gXCT_TPCH_Q19
 = 59;

99 c⁄° 
	gXCT_TPCH_Q20
 = 60;

100 c⁄° 
	gXCT_TPCH_Q21
 = 61;

101 c⁄° 
	gXCT_TPCH_Q22
 = 62;

103 c⁄° 
	gXCT_TPCH_QLINEITEM
 = 70;

104 c⁄° 
	gXCT_TPCH_QORDERS
 = 71;

105 c⁄° 
	gXCT_TPCH_QREGION
 = 72;

106 c⁄° 
	gXCT_TPCH_QNATION
 = 73;

107 c⁄° 
	gXCT_TPCH_QSUPPLIER
 = 74;

108 c⁄° 
	gXCT_TPCH_QPART
 = 75;

109 c⁄° 
	gXCT_TPCH_QPARTSUPP
 = 76;

110 c⁄° 
	gXCT_TPCH_QCUSTOMER
 = 77;

112 c⁄° 
	gXCT_QPIPE_TPCH_MIX
 = 1040;

115 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/tpch_input.h

33 #i‚de‡
__TPCH_INPUT_H


34 
	#__TPCH_INPUT_H


	)

36 
	~"w‹klﬂd/çch/çch_c⁄°.h
"

37 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

40 
ENTER_NAMESPACE
(
çch
);

45 
	sqlöeôem_öput_t


47 
	mdummy
;

48 
	mqlöeôem_öput_t
& 
	m›î©‹
=(c⁄° 
qlöeôem_öput_t
& 
rhs
);

51 
qlöeôem_öput_t
 
¸óã_qlöeôem_öput
(c⁄° 
sf
,

52 c⁄° 
•ecificWH
 = 0);

54 
	sq‹dîs_öput_t


56 
	mdummy
;

57 
	mq‹dîs_öput_t
& 
	m›î©‹
=(c⁄° 
q‹dîs_öput_t
& 
rhs
);

60 
q‹dîs_öput_t
 
¸óã_q‹dîs_öput
(c⁄° 
sf
,

61 c⁄° 
•ecificWH
 = 0);

63 
	sq«ti⁄_öput_t


65 
	mdummy
;

66 
	mq«ti⁄_öput_t
& 
	m›î©‹
=(c⁄° 
q«ti⁄_öput_t
& 
rhs
);

69 
q«ti⁄_öput_t
 
¸óã_q«ti⁄_öput
(c⁄° 
sf
,

70 c⁄° 
•ecificWH
 = 0);

72 
	sqªgi⁄_öput_t


74 
	mdummy
;

75 
	mqªgi⁄_öput_t
& 
	m›î©‹
=(c⁄° 
qªgi⁄_öput_t
& 
rhs
);

78 
qªgi⁄_öput_t
 
¸óã_qªgi⁄_öput
(c⁄° 
sf
,

79 c⁄° 
•ecificWH
 = 0);

81 
	sqsuµlõr_öput_t


83 
	mdummy
;

84 
	mqsuµlõr_öput_t
& 
	m›î©‹
=(c⁄° 
qsuµlõr_öput_t
& 
rhs
);

87 
qsuµlõr_öput_t
 
¸óã_qsuµlõr_öput
(c⁄° 
sf
,

88 c⁄° 
•ecificWH
 = 0);

90 
	sq∑π_öput_t


92 
	mdummy
;

93 
	mq∑π_öput_t
& 
	m›î©‹
=(c⁄° 
q∑π_öput_t
& 
rhs
);

96 
q∑π_öput_t
 
¸óã_q∑π_öput
(c⁄° 
sf
,

97 c⁄° 
•ecificWH
 = 0);

99 
	sq∑πsuµ_öput_t


101 
	mdummy
;

102 
	mq∑πsuµ_öput_t
& 
	m›î©‹
=(c⁄° 
q∑πsuµ_öput_t
& 
rhs
);

105 
q∑πsuµ_öput_t
 
¸óã_q∑πsuµ_öput
(c⁄° 
sf
,

106 c⁄° 
•ecificWH
 = 0);

108 
	sqcu°omî_öput_t


110 
	mdummy
;

111 
	mqcu°omî_öput_t
& 
	m›î©‹
=(c⁄° 
qcu°omî_öput_t
& 
rhs
);

114 
qcu°omî_öput_t
 
¸óã_qcu°omî_öput
(c⁄° 
sf
,

115 c⁄° 
•ecificWH
 = 0);

123 
	sq1_öput_t


125 
time_t
 
	ml_shùd©e
;

126 
	mq1_öput_t
& 
	m›î©‹
=(c⁄° 
q1_öput_t
& 
rhs
);

129 
q1_öput_t
 
¸óã_q1_öput
(c⁄° 
sf
,

130 c⁄° 
•ecificWH
 = 0);

138 
	sq2_öput_t
 {

139 
	mp_size
;

140 
	mp_ty≥s3
;

141 
	mr_«me
;

143 
	mq2_öput_t
& 
	m›î©‹
=(c⁄° 
q2_öput_t
& 
rhs
);

145 
q2_öput_t
 
¸óã_q2_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

153 
	sq3_öput_t
 {

155 
time_t
 
	mcuºít_d©e
;

156 
	mc_£gmít
;

157 
	mq3_öput_t
& 
	m›î©‹
=(c⁄° 
q3_öput_t
& 
rhs
);

159 
q3_öput_t
 
¸óã_q3_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

167 
	sq4_öput_t


169 
time_t
 
	mo_‹dîd©e
;

170 
	mq4_öput_t
& 
	m›î©‹
=(c⁄° 
q4_öput_t
& 
rhs
);

173 
q4_öput_t
 
¸óã_q4_öput
(c⁄° 
sf
,

174 c⁄° 
•ecificWH
 = 0);

181 
	sq5_öput_t
 {

182 
	mr_«me
;

183 
time_t
 
	mo_‹dîd©e
;

184 
	mq5_öput_t
& 
	m›î©‹
=(c⁄° 
q5_öput_t
& 
rhs
);

186 
q5_öput_t
 
¸óã_q5_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

194 
	sq6_öput_t


196 
time_t
 
	ml_shùd©e
;

197 
	ml_qu™tôy
;

198 
	ml_discou¡
;

200 
	mq6_öput_t
& 
	m›î©‹
=(c⁄° 
q6_öput_t
& 
rhs
);

203 
q6_öput_t
 
¸óã_q6_öput
(c⁄° 
sf
,

204 c⁄° 
•ecificWH
 = 0);

213 
	sq7_öput_t
 {

214 
	mn_«me1
;

215 
	mn_«me2
;

216 
	mq7_öput_t
& 
	m›î©‹
=(c⁄° 
q7_öput_t
& 
rhs
);

218 
q7_öput_t
 
¸óã_q7_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

225 
	sq8_öput_t
 {

226 
	mn_«me
;

227 
	mr_«me
;

229 
çch_p_ty≥
 
	mp_ty≥
;

231 
	mq8_öput_t
& 
	m›î©‹
=(c⁄° 
q8_öput_t
& 
rhs
);

233 
q8_öput_t
 
¸óã_q8_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

241 
	sq9_öput_t
 {

242 
	mp_«me
;

244 
	mq9_öput_t
& 
	m›î©‹
=(c⁄° 
q9_öput_t
& 
rhs
);

246 
q9_öput_t
 
¸óã_q9_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

254 
	sq10_öput_t
 {

255 
time_t
 
	mo_‹dîd©e
;

256 
	mq10_öput_t
& 
	m›î©‹
=(c⁄° 
q10_öput_t
& 
rhs
);

258 
q10_öput_t
 
¸óã_q10_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

266 
	sq11_öput_t
 {

267 
	mn_«me
;

268 
	m‰a˘i⁄
;

270 
	mq11_öput_t
& 
	m›î©‹
=(c⁄° 
q11_öput_t
& 
rhs
);

272 
q11_öput_t
 
¸óã_q11_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

282 
	sq12_öput_t


284 
	ml_shùmode1
;

285 
	ml_shùmode2
;

286 
time_t
 
	ml_ª˚ùtd©e
;

288 
	mq12_öput_t
& 
	m›î©‹
=(c⁄° 
q12_öput_t
& 
rhs
);

291 
q12_öput_t
 
¸óã_q12_öput
(c⁄° 
sf
,

292 c⁄° 
•ecificWH
 = 0);

301 
	sq13_öput_t


303 
	mWORD1
[15];

304 
	mWORD2
[15];

306 
	mq13_öput_t
& 
	m›î©‹
=(c⁄° 
q13_öput_t
& 
rhs
);

309 
q13_öput_t
 
¸óã_q13_öput
(c⁄° 
sf
,

310 c⁄° 
•ecificWH
 = 0);

321 
	sq14_öput_t


323 
time_t
 
	ml_shùd©e
;

325 
	mq14_öput_t
& 
	m›î©‹
=(c⁄° 
q14_öput_t
& 
rhs
);

328 
q14_öput_t
 
¸óã_q14_öput
(c⁄° 
sf
,

329 c⁄° 
•ecificWH
 = 0);

336 
	sq15_öput_t
 {

338 
time_t
 
	ml_shùd©e
;

339 
	mq15_öput_t
& 
	m›î©‹
=(c⁄° 
q15_öput_t
& 
rhs
);

341 
q15_öput_t
 
¸óã_q15_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

349 
	sq16_öput_t
 {

350 
	mp_bønd
;

351 
	mp_ty≥
;

353 
	mp_size
[8];

354 
	mq16_öput_t
& 
	m›î©‹
=(c⁄° 
q16_öput_t
& 
rhs
);

356 
q16_öput_t
 
¸óã_q16_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

363 
	sq17_öput_t
 {

364 
	mp_bønd
;

365 
	mp_c⁄èöî
;

366 
	mq17_öput_t
& 
	m›î©‹
=(c⁄° 
q17_öput_t
& 
rhs
);

368 
q17_öput_t
 
¸óã_q17_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

375 
	sq18_öput_t
 {

376 
	ml_qu™tôy
;

377 
	mq18_öput_t
& 
	m›î©‹
=(c⁄° 
q18_öput_t
& 
rhs
);

379 
q18_öput_t
 
¸óã_q18_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

386 
	sq19_öput_t
 {

388 
	ml_qu™tôy
[3];

389 
	mp_bønd
[3];

391 
	mq19_öput_t
& 
	m›î©‹
=(c⁄° 
q19_öput_t
& 
rhs
);

393 
q19_öput_t
 
¸óã_q19_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

400 
	sq20_öput_t
 {

401 
	mn_«me
;

402 
	mp_cﬁ‹
;

403 
time_t
 
	ml_shùd©e
;

405 
	mq20_öput_t
& 
	m›î©‹
=(c⁄° 
q20_öput_t
& 
rhs
);

407 
q20_öput_t
 
¸óã_q20_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

414 
	sq21_öput_t
 {

415 
	mn_«me
;

416 
	mq21_öput_t
& 
	m›î©‹
=(c⁄° 
q21_öput_t
& 
rhs
);

418 
q21_öput_t
 
¸óã_q21_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

425 
	sq22_öput_t
 {

426 
	m˙åycode
[7];

428 
	mq22_öput_t
& 
	m›î©‹
=(c⁄° 
q22_öput_t
& 
rhs
);

430 
q22_öput_t
 
¸óã_q22_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
);

438 
	sqNP_öput_t


440 
	m_cu°id
;

442 
	mqNP_öput_t
& 
	m›î©‹
=(c⁄° 
qNP_öput_t
& 
rhs
);

445 
qNP_öput_t
 
¸óã_qNP_öput
(c⁄° 
sf
,

446 c⁄° 
•ecificWH
 = 0);

457 
	sp›uœã_ba£löe_öput_t


459 
	m_sf
;

460 
	m_lﬂdî_cou¡
;

461 
	m_divis‹
;

462 
	m_∑πs_≥r_thªad
;

463 
	m_cu°s_≥r_thªad
;

467 
	sp›uœã_some_∑πs_öput_t


469 
	m_∑πid
;

473 
	sp›uœã_some_cu°s_öput_t


475 
	m_cu°id
;

479 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/tpch_random.h

32 #i‚de‡
__TPCH_COMMON_H


33 
	#__TPCH_COMMON_H


	)

35 
	~"utû.h
"

38 
ENTER_NAMESPACE
(
çch
);

52 
NUR™d
(
A
, 
low
, 
high
);

54 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/tpch_struct.h

33 #i‚de‡
__TPCH_STRUCT_H


34 
	#__TPCH_STRUCT_H


	)

36 
	~<c°dlib
>

37 
	~<uni°d.h
>

38 
	~<sys/time.h
>

39 
	~"utû.h
"

42 
ENTER_NAMESPACE
(
çch
);

46 
	#STRSIZE
(
x
Ë(x+1)

	)

51 
	eçch_l_shùmode
 {

52 
	mREG_AIR
,

53 
	mAIR
,

54 
	mRAIL
,

55 
	mTRUCK
,

56 
	mMAIL
,

57 
	mFOB
,

58 
	mSHIP
,

59 
	mEND_SHIPMODE


62 
	eçch_r_«me
{

63 
	mAFRICA
,

64 
	mAMERICA
,

65 
	mASIA
,

66 
	mEUROPE
,

67 
	mMIDDLE_EAST
,

68 
	mEND_R_NAME


71 
	eçch_n_«me
{

72 
	mALGERIA
,

73 
	mARGENTINA
,

74 
	mBRAZIL
,

75 
	mCANADA
,

76 
	mEGYPT
,

77 
	mETHIOPIA
,

78 
	mFRANCE
,

79 
	mGERMANY
,

80 
	mINDIA
,

81 
	mINDONESIA
,

82 
	mIRAN
,

83 
	mIRAQ
,

84 
	mJAPAN
,

85 
	mJORDAN
,

86 
	mKENYA
,

87 
	mMOROCCO
,

88 
	mMOZAMBIQUE
,

89 
	mPERU
,

90 
	mCHINA
,

91 
	mROMANIA
,

92 
	mSAUDI_ARABIA
,

93 
	mVIETNAM
,

94 
	mRUSSIA
,

95 
	mUNITED_KINGDOM
,

96 
	mUNITED_STATES
,

97 
	mEND_N_NAME


100 
	eçch_p_ty≥_s1
{

101 
	mSTANDARD
,

102 
	mSMALL
,

103 
	mMEDIUM
,

104 
	mLARGE
,

105 
	mECONOMY
,

106 
	mPROMO
,

107 
	mEND_TYPE_S1


110 
	eçch_p_ty≥_s2
{

111 
	mANODIZED
,

112 
	mBURNISHED
,

113 
	mPLATED
,

114 
	mPOLISHED
,

115 
	mBRUSHED
,

116 
	mEND_TYPE_S2


119 
	eçch_p_ty≥_s3
{

120 
	mTIN
,

121 
	mNICKEL
,

122 
	mBRASS
,

123 
	mSTEEL
,

124 
	mCOPPER
,

125 
	mEND_TYPE_S3


128 
	eçch_p_c⁄èöî_s1
{

129 
	mSM
,

130 
	mLG
,

131 
	mMED
,

132 
	mJUMBO
,

133 
	mWRAP
,

134 
	mEND_P_CONTAINER_S1


137 
	eçch_p_c⁄èöî_s2
{

139 
	mCASE
,

140 
	mBOX
,

141 
	mBAG
,

142 
	mJAR
,

143 
	mPKG
,

144 
	mPACK
,

145 
	mCAN
,

146 
	mDRUM
,

147 
	mEND_P_c⁄tAINER_S2


150 
	eçch_o_¥i‹ôy
{

152 
	mO_URGENT
,

153 
	mO_HIGH
,

154 
	mO_MEDIUM
,

155 
	mO_NOT_SPECIFIED
,

156 
	mO_LOW
,

157 
	mEND_O_PRIORITY


160 
	eçch_c_£gmít
{

161 
	mAUTOMOBILE
,

162 
	mBUILDING
,

163 
	mFURNITURE
,

164 
	mMACHINERY
,

165 
	mHOUSEHOLD
,

166 
	mEND_SEGMENT


169 
	sçch_p_ty≥
{

170 
	ms1
;

171 
	ms2
;

172 
	ms3
;

175 
	eçch_≤ame
{

176 
	mÆm⁄d
, 
	m™tique
, 
	maquam¨öe
, 
	mazuª
, 
	mbeige
, 
	mbisque
, 
	mbœck
, 
	mbœnched
, 
	mblue
, 
	mblush
, 
	mbrown
, 
	mbuæywood
, 
	mbu∫ished
, 
	mch¨åeu£
, 
	mchiff⁄
, 
	mchocﬁ©e
, 
	mc‹Æ
, 
	mc‹nÊowî
, 
	mc‹nsûk
, 
	m¸óm
, 
	mcy™
, 
	md¨k
, 
	mdìp
, 
	mdim
, 
	mdodgî
, 
	mdøb
, 
	mfúebrick
, 
	mÊ‹Æ
, 
	mf‹e°
, 
	m‰o°ed
, 
	mgaösb‹o
, 
	mgho°
, 
	mgﬁdírod
, 
	mgªí
, 
	mgªy
, 
	mh⁄eydew
, 
	mhŸ
, 
	mödün
, 
	miv‹y
, 
	mkhaki
, 
	mœ˚
, 
	mœvídî
, 
	mœwn
, 
	mÀm⁄
, 
	mlight
, 
	mlime
, 
	mlöí
, 
	mmagíè
, 
	mm¨o⁄
, 
	mmedium
, 
	mmëÆlic
, 
	mmidnight
, 
	mmöt
, 
	mmi°y
, 
	mmocˇsö
, 
	m«vajo
, 
	m«vy
, 
	mﬁive
, 
	m‹™ge
, 
	m‹chid
, 
	m∑À
, 
	m∑∑ya
, 
	m≥ach
, 
	m≥ru
, 
	mpök
, 
	m∂um
, 
	mpowdî
, 
	mpuff
, 
	mpuΩÀ
, 
	mªd
, 
	mro£
, 
	mrosy
, 
	mroyÆ
, 
	mßddÀ
, 
	mßlm⁄
, 
	mßndy
, 
	m£ashñl
, 
	msõ¬a
, 
	msky
, 
	m¶©e
, 
	msmoke
, 
	m¢ow
, 
	m•rög
, 
	m°ìl
, 
	mèn
, 
	mthi°À
, 
	mtom©o
, 
	mturquoi£
, 
	mviﬁë
, 
	mwhót
, 
	mwhôe
, 
	myñlow
, 
	mEND_P_NAME
};

181 c⁄° 
	gNO_NATIONS
 = 25;

182 c⁄° 
	gNO_REGIONS
 = 5;

183 c⁄° 
	gSUPPLIER_PER_SF
 = 10000;

184 c⁄° 
	gPART_PER_SF
 = 200000;

185 c⁄° 
	gCUSTOMER_PER_SF
 = 150000;

186 c⁄° 
	gORDERS_PER_CUSTOMER
 = 10;

187 c⁄° 
	gLINEITEM_PER_ORDER
 = 7;

195 
	sçch_«ti⁄_tu∂e


197 
	mN_NATIONKEY
;

198 
	mN_NAME
 [
STRSIZE
(25)];

199 
	mN_REGIONKEY
;

200 
	mN_COMMENT
 [
STRSIZE
(152)];

202 
c_°r
 
tu∂e_to_°r
() {

203 (
c_°r
("NATI = %d|%s|%d|%s",

204 
N_NATIONKEY
, 
N_NAME
, 
N_REGIONKEY
, 
N_COMMENT
));

210 
	sçch_«ti⁄_tu∂e_key


212 
	mN_NATIONKEY
;

214 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_«ti⁄_tu∂e_key
& 
rhs
) const {

215  (
N_NATIONKEY
 =
rhs
.N_NATIONKEY);

218 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_«ti⁄_tu∂e_key
& 
	mrhs
) const {

219  (
	mN_NATIONKEY
 < 
	mrhs
.N_NATIONKEY);

223 
	sçch_«ti⁄_tu∂e_body


225 
	mN_NAME
 [
STRSIZE
(25)];

226 
	mN_REGIONKEY
;

227 
	mN_COMMENT
 [
STRSIZE
(152)];

232 
	sçch_ªgi⁄_tu∂e


234 
	mR_REGIONKEY
;

235 
	mR_NAME
 [
STRSIZE
(25)];

236 
	mR_COMMENT
 [
STRSIZE
(25)];

238 
c_°r
 
tu∂e_to_°r
() {

239 (
c_°r
("REGN = %d|%s|%s",

240 
R_REGIONKEY
, 
R_NAME
, 
R_COMMENT
));

246 
	sçch_ªgi⁄_tu∂e_key


248 
	mR_REGIONKEY
;

250 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_ªgi⁄_tu∂e_key
& 
rhs
) const {

251  ((
R_REGIONKEY
 =
rhs
.R_REGIONKEY));

254 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_ªgi⁄_tu∂e_key
& 
	mrhs
) const {

255 i‡((
	mR_REGIONKEY
 < 
	mrhs
.R_REGIONKEY))

256  (
	måue
);

258  (
	mÁl£
);

263 
	sçch_ªgi⁄_tu∂e_body


265 
	mR_NAME
 [
STRSIZE
(25)];

266 
	mR_COMMENT
 [
STRSIZE
(25)];

272 
	sçch_∑π_tu∂e


274 
	mP_PARTKEY
;

275 
	mP_NAME
 [
STRSIZE
(55)];

276 
	mP_MFGR
 [
STRSIZE
(25)];

277 
	mP_BRAND
 [
STRSIZE
(10)];

278 
	mP_TYPE
 [
STRSIZE
(25)];

279 
	mP_SIZE
;

280 
	mP_CONTAINER
 [
STRSIZE
(10)];

281 
decimÆ
 
	mP_RETAILPRICE
;

282 
	mP_COMMENT
 [
STRSIZE
(23)];

287 
	sçch_∑π_tu∂e_key
 {

288 
	mP_PARTKEY
;

290 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_∑π_tu∂e_key
& 
rhs
) const {

291  
P_PARTKEY
 =
rhs
.P_PARTKEY;

294 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_∑π_tu∂e_key
& 
	mrhs
) const {

295  
	mP_PARTKEY
 < 
	mrhs
.P_PARTKEY;

299 
	sçch_∑π_tu∂e_body


301 
	mP_NAME
 [
STRSIZE
(55)];

302 
	mP_MFGR
 [
STRSIZE
(25)];

303 
	mP_BRAND
 [
STRSIZE
(10)];

304 
	mP_TYPE
 [
STRSIZE
(25)];

305 
	mP_SIZE
;

306 
	mP_CONTAINER
 [
STRSIZE
(10)];

307 
decimÆ
 
	mP_RETAILPRICE
;

308 
	mP_COMMENT
 [
STRSIZE
(23)];

314 
	sçch_suµlõr_tu∂e


316 
	mS_SUPPKEY
;

317 
	mS_NAME
 [
STRSIZE
(25)];

318 
	mS_ADDRESS
 [
STRSIZE
(40)];

319 
	mS_NATIONKEY
;

320 
	mS_PHONE
 [
STRSIZE
(15)];

321 
decimÆ
 
	mS_ACCTBAL
;

322 
	mS_COMMENT
 [
STRSIZE
(101)];

325 
	sçch_suµlõr_tu∂e_key


327 
	mS_SUPPKEY
;

329 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_suµlõr_tu∂e_key
& 
rhs
) const {

330  
S_SUPPKEY
 =
rhs
.S_SUPPKEY;

333 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_suµlõr_tu∂e_key
& 
	mrhs
) const {

334  
	mS_SUPPKEY
 < 
	mrhs
.S_SUPPKEY;

339 
	sçch_suµlõr_tu∂e_body


341 
	mS_NAME
 [
STRSIZE
(25)];

342 
	mS_ADDRESS
 [
STRSIZE
(40)];

343 
	mS_NATIONKEY
;

344 
	mS_PHONE
 [
STRSIZE
(15)];

345 
decimÆ
 
	mS_ACCTBAL
;

346 
	mS_COMMENT
 [
STRSIZE
(101)];

352 
	sçch_∑πsuµ_tu∂e


354 
	mPS_PARTKEY
;

355 
	mPS_SUPPKEY
;

356 
	mPS_AVAILQTY
;

357 
decimÆ
 
	mPS_SUPPLYCOST
;

358 
	mPS_COMMENT
 [
STRSIZE
(199)];

362 
	sçch_∑πsuµ_tu∂e_key


364 
	mPS_PARTKEY
;

365 
	mPS_SUPPKEY
;

367 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_∑πsuµ_tu∂e_key
& 
rhs
) const {

368  (
PS_PARTKEY
 =
rhs
.PS_PARTKEY) &&

369 (
PS_SUPPKEY
 =
rhs
.PS_SUPPKEY);

372 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_∑πsuµ_tu∂e_key
& 
	mrhs
) const {

373  (
	mPS_PARTKEY
 < 
	mrhs
.PS_PARTKEY) ||

374 ((
	mPS_PARTKEY
 =
rhs
.
PS_PARTKEY
) &&

375 (
PS_SUPPKEY
 < 
rhs
.PS_SUPPKEY)) ||

376 ((
PS_PARTKEY
 < 
rhs
.PS_PARTKEY) &&

377 (
PS_SUPPKEY
 =
rhs
.PS_SUPPKEY));

382 
	sçch_∑πsuµ_tu∂e_body


384 
	mPS_AVAILQTY
;

385 
decimÆ
 
	mPS_SUPPLYCOST
;

386 
	mPS_COMMENT
 [
STRSIZE
(199)];

391 
	sçch_cu°omî_tu∂e


393 
	mC_CUSTKEY
;

394 
	mC_NAME
 [
STRSIZE
(25)];

395 
	mC_ADDRESS
 [
STRSIZE
(40)];

396 
	mC_NATIONKEY
;

397 
	mC_PHONE
 [
STRSIZE
(15)];

398 
decimÆ
 
	mC_ACCTBAL
;

399 
	mC_MKTSEGMENT
 [
STRSIZE
(10)];

400 
	mC_COMMENT
 [
STRSIZE
(117)];

402 
c_°r
 
tu∂e_to_°r
() {

403 (
c_°r
("CUST = %d|%s|%s|%d|%s|%.2f|%s|%s -",

404 
C_CUSTKEY
, 
C_NAME
, 
C_ADDRESS
, 
C_NATIONKEY
,

405 
C_PHONE
, 
C_ACCTBAL
.
to_doubÀ
(), 
C_MKTSEGMENT
, 
C_COMMENT
));

412 
	sçch_cu°omî_tu∂e_key
 {

413 
	mC_CUSTKEY
;

415 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_cu°omî_tu∂e_key
& 
rhs
) const {

416  ((
C_CUSTKEY
 =
rhs
.C_CUSTKEY));

419 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_cu°omî_tu∂e_key
& 
	mrhs
) const {

420 i‡((
	mC_CUSTKEY
 < 
	mrhs
.C_CUSTKEY))

421  (
	måue
);

423  (
	mÁl£
);

428 
	sçch_cu°omî_tu∂e_body


430 
	mC_NAME
 [
STRSIZE
(25)];

431 
	mC_ADDRESS
 [
STRSIZE
(40)];

432 
	mC_NATIONKEY
;

433 
	mC_PHONE
 [
STRSIZE
(15)];

434 
decimÆ
 
	mC_ACCTBAL
;

435 
	mC_MKTSEGMENT
 [
STRSIZE
(10)];

436 
	mC_COMMENT
 [
STRSIZE
(117)];

442 
	sçch_‹dîs_tu∂e


444 
	mO_ORDERKEY
;

445 
	mO_CUSTKEY
;

446 
	mO_ORDERSTATUS
;

447 
decimÆ
 
	mO_TOTALPRICE
;

450 
	mO_ORDERDATE
 [
STRSIZE
(15)];

452 
	mO_ORDERPRIORITY
 [
STRSIZE
(15)];

453 
	mO_CLERK
 [
STRSIZE
(15)];

454 
	mO_SHIPPRIORITY
;

455 
	mO_COMMENT
 [
STRSIZE
(79)];

459 
	sçch_‹dîs_tu∂e_key


461 
	mO_ORDERKEY
;

465 
	sçch_‹dîs_tu∂e_body


467 
	mO_CUSTKEY
;

468 
	mO_ORDERSTATUS
;

469 
decimÆ
 
	mO_TOTALPRICE
;

472 
	mO_ORDERDATE
 [
STRSIZE
(15)];

474 
	mO_ORDERPRIORITY
 [
STRSIZE
(15)];

475 
	mO_CLERK
 [
STRSIZE
(15)];

476 
	mO_SHIPPRIORITY
;

477 
	mO_COMMENT
 [
STRSIZE
(79)];

484 
	sçch_löeôem_tu∂e


486 
	mL_ORDERKEY
;

487 
	mL_PARTKEY
;

488 
	mL_SUPPKEY
;

489 
	mL_LINENUMBER
;

490 
	mL_QUANTITY
;

491 
	mL_EXTENDEDPRICE
;

492 
	mL_DISCOUNT
;

493 
	mL_TAX
;

494 
	mL_RETURNFLAG
;

495 
	mL_LINESTATUS
;

500 
	mL_SHIPDATE
 [
STRSIZE
(15)];

501 
	mL_COMMITDATE
 [
STRSIZE
(15)];

502 
	mL_RECEIPTDATE
 [
STRSIZE
(15)];

504 
	mL_SHIPINSTRUCT
 [
STRSIZE
(25)];

505 
	mL_SHIPMODE
 [
STRSIZE
(10)];

506 
	mL_COMMENT
 [
STRSIZE
(44)];

510 
	sçch_löeôem_tu∂e_key


512 
	mL_ORDERKEY
;

513 
	mL_LINENUMBER
;

515 
boﬁ
 
	m›î©‹
==(c⁄° 
çch_löeôem_tu∂e_key
& 
rhs
) const {

516  (
L_ORDERKEY
 =
rhs
.L_ORDERKEY) &&

517 (
L_LINENUMBER
 =
rhs
.L_LINENUMBER);

520 
boﬁ
 
	m›î©‹
<(c⁄° 
	mçch_löeôem_tu∂e_key
& 
	mrhs
) const {

521  (
	mL_ORDERKEY
 < 
	mrhs
.L_ORDERKEY) ||

522 ((
	mL_ORDERKEY
 =
rhs
.
L_ORDERKEY
) &&

523 (
L_LINENUMBER
 =
rhs
.L_LINENUMBER));

528 
	sçch_löeôem_tu∂e_body


530 
	mL_PARTKEY
;

531 
	mL_SUPPKEY
;

532 
	mL_QUANTITY
;

533 
	mL_EXTENDEDPRICE
;

534 
	mL_DISCOUNT
;

535 
	mL_TAX
;

536 
	mL_RETURNFLAG
;

537 
	mL_LINESTATUS
;

542 
	mL_SHIPDATE
 [
STRSIZE
(15)];

543 
	mL_COMMITDATE
 [
STRSIZE
(15)];

544 
	mL_RECEIPTDATE
 [
STRSIZE
(15)];

546 
	mL_SHIPINSTRUCT
 [
STRSIZE
(25)];

547 
	mL_SHIPMODE
 [
STRSIZE
(10)];

548 
	mL_COMMENT
 [
STRSIZE
(44)];

551 
EXIT_NAMESPACE
(
çch
);

	@include/workload/tpch/tpch_util.h

33 #i‚de‡
__TPCH_UTIL_H


34 
	#__TPCH_UTIL_H


	)

36 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

38 
ENTER_NAMESPACE
(
çch
);

40 
çch_l_shùmode
 
°r_to_shùmode
(* 
shùmode
);

41 
shùmode_to_°r
(* 
°r
, 
çch_l_shùmode
 
shùmode
);

43 
Bønd_to_§t
(* 
°r
, 
bønd
);

44 
°r_to_Bønd
(* 
Bønd
 );

46 
ty≥s1_to_°r
(*
°r
 , 
s1
);

47 
çch_p_ty≥_s1
 
°r_to_ty≥s1
(*
s1
);

50 
ty≥s2_to_°r
(* 
°r
 , 
s2
);

51 
çch_p_ty≥_s2
 
°r_to_ty≥s2
(* 
s2
);

53 
ty≥s3_to_°r
(* 
°r
 , 
s3
);

54 
çch_p_ty≥_s3
 
°r_to_ty≥s3
(* 
s3
);

56 
ty≥_to_°r
(
çch_p_ty≥
 
t
, * 
°r
);

58 
çch_p_c⁄èöî_s1
 
°r_to_c⁄èöîs1
(* 
s1
);

59 
c⁄èöîs1_to_°r
–
çch_p_c⁄èöî_s1
 
s1
, * 
°r
);

61 
çch_p_c⁄èöî_s2
 
°r_to_c⁄èöîs2
(* 
s2
);

62 
c⁄èöîs2_to_°r
–
çch_p_c⁄èöî_s2
 
s2
, * 
°r
);

64 
c⁄èöî_to_°r
(
p_c⁄èöî
, * 
°r
);

66 
≤ame_to_°r
(
p
, * 
§t
);

68 
çch_o_¥i‹ôy
 
°r_to_¥i‹ôy
(* 
°r
 );

70 
£gmít_to_°r
(* 
°r
, 
£g
);

71 
çch_c_£gmít
 
°r_to_£gmít
(*
°r
);

73 
çch_n_«me
 
°r_to_«ti⁄
(* 
°r
 );

74 
«ti⁄_to_°r
–
n_«ti⁄
 , * 
°r
 );

76 
çch_r_«me
 
°r_to_ªgi⁄
(* 
°r
);

77 
ªgi⁄_to_°r
(
r_«me
, * 
°r
);

79 
EXIT_NAMESPACE
(
çch
);

	@src/dora/base_action.cpp

32 
	~"d‹a/ba£_a˘i⁄.h
"

35 
ENTER_NAMESPACE
(
d‹a
);

39 
	gba£_a˘i⁄_t
& ba£_a˘i⁄_t::
›î©‹
=(c⁄° 
ba£_a˘i⁄_t
& 
rhs
)

41 i‡(
this
 !&
rhs
) {

42 
_¥vp
 = 
rhs
._prvp;

43 
	g_x˘
 = 
rhs
.
_x˘
;

44 
	g_tid
 = 
rhs
.
_tid
;

45 
	g_keys_√eded
 = 
rhs
.
_keys_√eded
;

46 
	g_keys_£t
 = 
rhs
.
_keys_£t
;

48  (*
	gthis
);

53 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/base_partition.cpp

32 
	~"d‹a/ba£_∑πôi⁄.h
"

35 
ENTER_NAMESPACE
(
d‹a
);

38 
	gba£_∑πôi⁄_t
::
	$ba£_∑πôi⁄_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

39 c⁄° 
uöt
 
≠¨tid
,

40 c⁄° 
¥o˚ss‹id_t
 
≠rsid
)

41 : 
	`_ív
(
ív
), 
	`_èbÀ
(
±abÀ
),

42 
	`_∑π_id
(
≠¨tid
), 
	`_∑π_pﬁicy
(
PP_UNDEF
),

43 
	$_¥s_id
(
≠rsid
)

45 
	`as£π
 (
_ív
);

46 
	`as£π
 (
_èbÀ
);

47 
	}
}

50 
	gba£_∑πôi⁄_t
::~
	$ba£_∑πôi⁄_t
()

52 
	}
}

55 
ba£_∑πôi⁄_t
::
	$£t_∑π_id
(c⁄° 
uöt
 
pid
)

57 
_∑π_id
 = 
pid
;

58 
	}
}

61 
eP¨tôi⁄Pﬁicy
 
	gba£_∑πôi⁄_t
::
	$gë_∑π_pﬁicy
()

63  (
_∑π_pﬁicy
);

64 
	}
}

66 
	gba£_∑πôi⁄_t
::
	$£t_∑π_pﬁicy
(c⁄° 
eP¨tôi⁄Pﬁicy
 
aP¨tPﬁicy
)

68 
	`as£π
 (
aP¨tPﬁicy
!=
PP_UNDEF
);

69 
_∑π_pﬁicy
 = 
aP¨tPﬁicy
;

70 
	}
}

74 
	gba£_∑πôi⁄_t
::
	$dump
()

76 
	`TRACE
–
TRACE_DEBUG
, "Pﬁicy (%d)\n", 
_∑π_pﬁicy
);

77 
	}
}

80 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/dflusher.cpp

31 
	~"d‹a/dÊushî.h
"

32 
	~"x˘.h
"

34 
ENTER_NAMESPACE
(
d‹a
);

43 
	gd‹a_Êushî_t
::
	$d‹a_Êushî_t
(
Sh‹eEnv
* 
≥nv
,

44 
c_°r
 
äame
,

45 
¥o˚ss‹id_t
 
≠rsid
,

46 c⁄° 
u£_¶i
)

47 : 
	$Êushî_t
(
≥nv
, 
äame
, 
≠rsid
, 
u£_¶i
)

49 
_d‹a_toÊush
 = 
√w
 
	`D‹aQueue
(
_px˘_toÊush_poﬁ
.
	`gë
());

50 
	`as£π
 (
_d‹a_toÊush
.
	`gë
());

51 
_d‹a_toÊush
->
	`£tqueue
(
WS_COMMIT_Q
,
this
,2000,0);

53 
_d‹a_Êushög
 = 
√w
 
	`D‹aQueue
(
_px˘_Êushög_poﬁ
.
	`gë
());

54 
	`as£π
 (
_d‹a_Êushög
.
	`gë
());

55 
_d‹a_Êushög
->
	`£tqueue
(
WS_COMMIT_Q
,
this
,0,0);

58 
	`Ârötf
(
°dout
, "Starting dora-notifier...\n");

59 
_nŸifõr
 = 
√w
 
	`d‹a_nŸifõr_t
(
_ív
, 
	`c_°r
("DNotifier"));

60 
	`as£π
(
_nŸifõr
.
	`gë
());

61 
_nŸifõr
->
	`f‹k
();

62 
_nŸifõr
->
	`°¨t
();

63 
	}
}

65 
	gd‹a_Êushî_t
::~
	$d‹a_Êushî_t
()

69 
	`as£π
 (
_d‹a_toÊush
->
	`is_em±y
());

70 
_d‹a_toÊush
.
	`d⁄e
();

72 
	`as£π
 (
_d‹a_Êushög
->
	`is_em±y
());

73 
_d‹a_Êushög
.
	`d⁄e
();

74 
	}
}

88 
	gd‹a_Êushî_t
::
	$_check_waôög
(
boﬁ
& 
bSÀïNext
,

89 c⁄° 
l¢_t
& 
duøbÀl¢
,

90 
l¢_t
& 
maxl¢
,

91 
uöt
& 
waôög
)

93 
ãrmöÆ_rvp_t
* 
¥vp
 = 
NULL
;

94 
l¢_t
 
x˘l¢
;

97 (!
_d‹a_toÊush
->
	`is_em±y
()Ë|| (
bSÀïNext
)) {

100 
¥vp
 = 
_d‹a_toÊush
->
	`p›
();

103 i‡(
¥vp
) {

104 
x˘l¢
 = 
¥vp
->
	`my_œ°_l¢
();

106 
	`TRACE
–
TRACE_TRX_FLOW
,

108 
¥vp
->
	`tid
().
	`gë_lo
(), 
x˘l¢
.
	`lo
(), 
maxl¢
.lo());

112 i‡(
duøbÀl¢
 > 
x˘l¢
) {

114 
_nŸifõr
->
	`íqueue_t⁄Ÿify
(
¥vp
);

115 
_°©s
.
ÆªadyFlushed
++;

120 
maxl¢
 = 
°d
::
	`max
(maxl¢,
x˘l¢
);

121 
_d‹a_Êushög
->
	`push
(
¥vp
,
Ál£
);

122 
waôög
++;

126 
bSÀïNext
 = 
Ál£
;

127 
_°©s
.
£rved
++;

131 
	}
}

145 
	gd‹a_Êushî_t
::
	$_move_‰om_Êushög
(c⁄° 
l¢_t
& 
duøbÀl¢
)

147 
ãrmöÆ_rvp_t
* 
¥vp
 = 
NULL
;

148 
l¢_t
 
x˘l¢
;

150 !
_d‹a_Êushög
->
	`is_em±y
()) {

151 
¥vp
 = 
_d‹a_Êushög
->
	`p›
();

152 
x˘l¢
 = 
¥vp
->
	`my_œ°_l¢
();

153 
	`as£π
 (
x˘l¢
 < 
duøbÀl¢
);

155 
_nŸifõr
->
	`íqueue_t⁄Ÿify
(
¥vp
);

159 
	}
}

173 
	gd‹a_Êushî_t
::
	$_¥e_STOP_im∂
()

175 
uöt
 
a·îSt›
 = 0;

176 
ãrmöÆ_rvp_t
* 
¥vp
 = 
NULL
;

179 
_nŸifõr
->
	`°›
();

180 
_nŸifõr
->
	`joö
();

187 !
_d‹a_Êushög
->
	`is_em±y
()) {

188 ++
a·îSt›
;

189 
¥vp
 = 
_d‹a_Êushög
->
	`p›
();

190 
¥vp
->
	`nŸify_˛õ¡
();

191 
¥vp
->
	`giveback
();

194 !
_d‹a_toÊush
->
	`is_em±y
()) {

195 ++
a·îSt›
;

196 
¥vp
 = 
_d‹a_toÊush
->
	`p›
();

197 
¥vp
->
	`nŸify_˛õ¡
();

198 
¥vp
->
	`giveback
();

201 i‡(
a·îSt›
>0) {

202 
	`TRACE
–
TRACE_ALWAYS
,

204 
a·îSt›
);

208 
	}
}

218 
	gd‹a_nŸifõr_t
::
	$d‹a_nŸifõr_t
(
Sh‹eEnv
* 
ív
,

219 
c_°r
 
äame
,

220 
¥o˚ss‹id_t
 
≠rsid
,

221 c⁄° 
u£_¶i
)

222 : 
	$ba£_w‹kî_t
(
ív
, 
äame
, 
≠rsid
, 
u£_¶i
)

224 
_px˘_t⁄Ÿify_poﬁ
 = 
√w
 
	`Poﬁ
((
x˘_t
*),
FLUSHER_BUFFER_EXPECTED_SZ
);

225 
_t⁄Ÿify
 = 
√w
 
	`D‹aQueue
(
_px˘_t⁄Ÿify_poﬁ
.
	`gë
());

226 
	`as£π
 (
_t⁄Ÿify
.
	`gë
());

227 
_t⁄Ÿify
->
	`£tqueue
(
WS_COMMIT_Q
,
this
,0,0);

228 
	}
}

230 
	gd‹a_nŸifõr_t
::~
	$d‹a_nŸifõr_t
()

234 
	`as£π
 (
_t⁄Ÿify
->
	`is_em±y
());

235 
_t⁄Ÿify
.
	`d⁄e
();

236 
_px˘_t⁄Ÿify_poﬁ
.
	`d⁄e
();

237 
	}
}

249 
	gd‹a_nŸifõr_t
::
	$_w‹k_ACTIVE_im∂
()

251 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

252 
bödög
 = 
ev
->
	`gëV¨I¡
("dora-cpu-binding",0);

253 i‡(
bödög
==0Ë
_¥s_id
 = 
PBIND_NONE
;

254 
	`TRY_TO_BIND
(
_¥s_id
,
_is_bound
);

256 
ãrmöÆ_rvp_t
* 
¥vp
 = 
NULL
;

259 
	`gë_c⁄åﬁ
(Ë=
WC_ACTIVE
) {

262 
	`£t_ws
(
WS_LOOP
);

265 
¥vp
 = 
_t⁄Ÿify
->
	`p›
();

267 i‡(
¥vp
) {

268 
¥vp
->
	`upd_commôãd_°©s
();

269 
¥vp
->
	`nŸify_∑πôi⁄s
();

270 
¥vp
->
	`nŸify_˛õ¡
();

271 
¥vp
->
	`giveback
();

272 
¥vp
 = 
NULL
;

276 
	}
}

290 
	gd‹a_nŸifõr_t
::
	$_¥e_STOP_im∂
()

292 
uöt
 
a·îSt›
 = 0;

293 
ãrmöÆ_rvp_t
* 
¥vp
 = 
NULL
;

294 !
_t⁄Ÿify
->
	`is_em±y
()) {

295 ++
a·îSt›
;

297 
¥vp
 = 
_t⁄Ÿify
->
	`p›
();

298 
¥vp
->
	`upd_commôãd_°©s
();

300 
¥vp
->
	`nŸify_˛õ¡
();

301 
¥vp
->
	`giveback
();

302 
¥vp
 = 
NULL
;

305 i‡(
a·îSt›
>0)

306 
	`TRACE
–
TRACE_ALWAYS
,

308 
a·îSt›
);

310 
	}
}

313 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/dkey_ranges_map.cpp

39 
	~"d‹a/dkey_ønges_m≠.h
"

41 
	~"sm/sh‹e/sh‹e_ív.h
"

44 
ENTER_NAMESPACE
(
d‹a
);

54 
	gdkey_ønges_m≠
::
	$dkey_ønges_m≠
(c⁄° 
°id_t
& 
°id
,

55 c⁄° 
cvec_t
& 
möKey
,

56 c⁄° 
cvec_t
& 
maxKey
,

57 c⁄° 
uöt
 
numP¨ts
)

58 : 
	$_i•Õ
(
Ál£
)

60 
w_rc_t
 
e
 = 
ss_m
::
	`gë_°‹e_öfo
(
°id
,
_söfo
);

61 i‡(
e
.
	`is_îr‹
()Ë{ 
	`as£π
(0); }

62 
_rm≠
 = 
√w
 
	`key_ønges_m≠
(
_söfo
,
möKey
,
maxKey
,
numP¨ts
,
Ál£
);

63 
	}
}

67 
	gdkey_ønges_m≠
::
	$dkey_ønges_m≠
(c⁄° 
°id_t
& 
°id
,

68 
key_ønges_m≠
* 
krm
)

69 : 
	$_i•Õ
(
åue
)

71 
_rm≠
 = 
√w
 
	`key_ønges_m≠
();

72 *(
_rm≠
Ë*(
krm
);

74 
w_rc_t
 
e
 = 
ss_m
::
	`gë_°‹e_öfo
(
°id
,
_söfo
);

75 i‡(
e
.
	`is_îr‹
()Ë{ 
	`as£π
(0); }

76 
	}
}

78 
	gdkey_ønges_m≠
::~
	$dkey_ønges_m≠
()

80 i‡((!
_i•Õ
Ë&& (
_rm≠
)) {

81 
	`dñëe
 (
_rm≠
);

82 
_rm≠
 = 
NULL
;

84 
	}
}

95 
w_rc_t
 
	gdkey_ønges_m≠
::
gë_Æl_∑πôi⁄s
(
ve˘‹
<
Õid_t
>& 
pidVec
)

97 (
_rm≠
->
gëAŒP¨tôi⁄s
(
pidVec
));

110 
w_rc_t
 
	gdkey_ønges_m≠
::
	$add_∑πôi⁄
(c⁄° 
cvec_t
& 
key
, 
Õid_t
& 
Õid
)

112 (
_rm≠
->
	`addP¨tôi⁄
(
key
,
Õid
));

113 
	}
}

128 
w_rc_t
 
	gdkey_ønges_m≠
::
	$dñëe_∑πôi⁄
(c⁄° 
Õid_t
& )

130 
	`as£π
 (0);

132  (
RCOK
);

133 
	}
}

142 
boﬁ
 
	gdkey_ønges_m≠
::
	$is_ßme
(c⁄° 
dkey_ønges_m≠
& 
drm
)

144 #w¨nög 
IP
: 
F‹
 
now
, 
	`is_ßme
(Ë
checks
 
⁄ly
 
the
 
numbî
 
of
 
∑πôi⁄s


145  (
_rm≠
->
	`gëNumP¨tôi⁄s
(Ë=
drm
._rmap->getNumPartitions());

146 
	}
}

162 
	gøngem≠_smt_t
::
	$øngem≠_smt_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
èbÀdesc
, 
uöt
 
dty≥
)

163 : 
	`thªad_t
(
	`c_°r
("RMS")),

164 
	`_ív
(
ív
), 
	`_èbÀ
(
èbÀdesc
), 
	`_dty≥
(
dty≥
),

165 
	`_drm
(
NULL
), 
	$_rc
(
RCOK
)

167 
	}
}

169 
	gøngem≠_smt_t
::~
	$øngem≠_smt_t
()

171 
	}
}

173 
øngem≠_smt_t
::
	$w‹k
()

175 
	`as£π
 (
_ív
);

177 
tid_t
 
©id
;

178 
_rc
 = 
_ív
->
	`db
()->
	`begö_x˘
(
©id
);

180 i‡(!
_rc
.
	`is_îr‹
()) {

182 i‡(
_dty≥
 & 
DT_PLAIN
) {

186 
°id_t
 
°id
 = 
_èbÀ
->
	`gë_¥im¨y_°id
();

187 
cvec_t
 
	`möcv
(
_èbÀ
->
	`gëMöKey
(),_èbÀ->
	`gëMöKeyLí
());

188 
cvec_t
 
	`maxcv
(
_èbÀ
->
	`gëMaxKey
(),_èbÀ->
	`gëMaxKeyLí
());

189 
uöt
 
p˙t
 = 
_èbÀ
->
	`p˙t
();

191 
_drm
 = 
√w
 
	`dkey_ønges_m≠
(
°id
,
möcv
,
maxcv
,
p˙t
);

194 i‡(
_dty≥
 & 
DT_PLP
) {

198 
key_ønges_m≠
* 
¨m
;

199 
_rc
 = 
_èbÀ
->
	`gë_maö_øngem≠
(
¨m
);

200 
°id_t
 
°id
 = 
_èbÀ
->
	`gë_¥im¨y_°id
();

202 
_drm
 = 
√w
 
	`dkey_ønges_m≠
(
°id
,
¨m
);

207 i‡(
_rc
.
	`is_îr‹
()) {

208 
_rc
 = 
_ív
->
	`db
()->
	`ab‹t_x˘
();

211 
_rc
 = 
_ív
->
	`db
()->
	`commô_x˘
();

213 
	}
}

218 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/dora_env.cpp

32 
	~"d‹a/comm⁄.h
"

33 
	~"d‹a/d‹a_ív.h
"

35 
	~"˝u_öfo.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

39 
ENTER_NAMESPACE
(
d‹a
);

41 
	g∑πôi⁄_t
<> 
	túpIm∂
;

53 
	gD‹aEnv
::
	$D‹aEnv
()

55 
	`_check_ty≥
();

56 
	}
}

59 
	gD‹aEnv
::~
	$D‹aEnv
()

61 
	}
}

72 
uöt
 
D‹aEnv
::
	$dty≥
() const

74  (
_dty≥
);

75 
	}
}

77 
boﬁ
 
	gD‹aEnv
::
	$is_d‹a
() const

79  (
_dty≥
 & 
DT_PLAIN
);

80 
	}
}

82 
boﬁ
 
	gD‹aEnv
::
	$is_∂p
() const

84  (
_dty≥
 & 
DT_PLP
);

85 
	}
}

87 
uöt
 
	gD‹aEnv
::
	$upd©e_pd
(
Sh‹eEnv
* 
≥nv
)

89 
	`as£π
 (
≥nv
);

92 
	`_check_ty≥
();

95 
≥nv
->
	`add_pd
(
PD_NOLOCK
);

97 i‡(
_dty≥
 & 
DT_PLP
) {

98 
≥nv
->
	`add_pd
(
PD_NOLATCH
);

101  (
_dty≥
);

102 
	}
}

114 
	gD‹aEnv
::
	$_°©i°ics
(
Sh‹eEnv
* )

117 
	`TRACE
–
TRACE_STATISTICS
, "----- DORA -----\n");

118 
uöt
 
sz
=
_ú±p_vec
.
	`size
();

119 
	`TRACE
–
TRACE_STATISTICS
, "TabÀ† = (%d)\n", 
sz
);

120 
uöt
 
i
=0;i<
sz
;++i) {

121 
_ú±p_vec
[
i
]->
	`°©i°ics
();

124 #ifde‡
CFG_FLUSHER


125 
	`TRACE
–
TRACE_STATISTICS
, "Flushîs: (%d)\n", 
_num_Êushîs
);

127 
uöt_t
 
i
=0; i<
_num_Êushîs
; i++)

129 
_vec_Êushî
[
i
]->
	`°©i°ics
();

133 
	}
}

146 
uöt
 
	gD‹aEnv
::
	$_check_ty≥
()

149 
°rög
 
sy¢ame
 = 
ívV¨
::
	`ö°™˚
()->
	`gëSysName
();

151 i‡(
sy¢ame
.
	`com∑ª
("baseline")==0) {

152 
	`as£π
(0);

155 i‡(
sy¢ame
.
	`com∑ª
("dora")==0) {

156 
_dty≥
 = 
DT_PLAIN
;

159 i‡(
sy¢ame
.
	`com∑ª
("plp")==0) {

160 
_dty≥
 = 
DT_PLP
;

163  (
_dty≥
);

164 
	}
}

177 
	gD‹aEnv
::
	$_po°_°¨t
(
Sh‹eEnv
* 
≥nv
)

179 #ifde‡
CFG_FLUSHER


181 
	`TRACE
–
TRACE_ALWAYS
, "Creating dora-flusher...\n");

184 
_num_Êushîs
 = 
	`dëîmöeNumFlushîs
();

185 
_vec_Êushî
.
	`ª£rve
(
_num_Êushîs
);

189 
uöt_t
 
i
=0; i<
_num_Êushîs
; i++)

191 
d‹a_Êushî_t
* 
aFlushî
 = 
√w
 
	`d‹a_Êushî_t
(
≥nv
, 
	`c_°r
("DFlushî-%d",
i
));

192 
	`w_as£π0
(
aFlushî
);

194 
_vec_Êushî
[
i
] = 
aFlushî
;

196 
aFlushî
->
	`f‹k
();

197 
aFlushî
->
	`°¨t
();

203 
uöt_t
 
i
=0; i<
_ú±p_vec
.
	`size
(); i++) {

204 
_ú±p_vec
[
i
]->
	`ª£t
();

207 
≥nv
->
	`£t_dbc
(
DBC_ACTIVE
);

209 
	}
}

223 
	gD‹aEnv
::
	$_po°_°›
(
Sh‹eEnv
* 
≥nv
)

226 
	`TRACE
–
TRACE_ALWAYS
, "Stopping...\n");

228 
uöt
 
i
=0; i<
_ú±p_vec
.
	`size
(); i++)

230 i‡(
_ú±p_vec
[
i
] !
NULL
)

232 
	`TRACE
–
TRACE_ALWAYS
, "StoppingÅable (%s)...\n",

233 
_ú±p_vec
[
i
]->
	`èbÀ
()->
	`«me
());

235 
_ú±p_vec
[
i
]->
	`°›
();

236 
_ú±p_vec
[
i
] = 
NULL
;

239 
_ú±p_vec
.
	`˛ór
();

241 #ifde‡
CFG_FLUSHER


243 
uöt_t
 
i
=0; i<
_num_Êushîs
; i++)

245 i‡(
_vec_Êushî
[
i
] !
NULL
)

247 
	`TRACE
–
TRACE_ALWAYS
, "St›pög d‹a-Êushî-(%d)...\n",
i
);

249 
_vec_Êushî
[
i
]->
	`°›
();

250 
_vec_Êushî
[
i
]->
	`joö
();

252 
	`dñëe
 (
_vec_Êushî
[
i
]);

253 
_vec_Êushî
[
i
] = 
NULL
;

258 
≥nv
->
	`£t_dbc
(
DBC_STOPPED
);

260 
	}
}

272 
w_rc_t
 
	gD‹aEnv
::
	$_√wrun
(
Sh‹eEnv
* )

274 
	`TRACE
–
TRACE_DEBUG
, "Preparing forÇewÑun...\n");

275 
uöt
 
i
=0; i<
_ú±p_vec
.
	`size
(); i++) {

276 
	`W_DO
(
_ú±p_vec
[
i
]->
	`¥ï¨eNewRun
());

278  (
RCOK
);

279 
	}
}

291 
	gD‹aEnv
::
	$_dump
(
Sh‹eEnv
* )

293 
uöt
 
sz
=
_ú±p_vec
.
	`size
();

294 
	`TRACE
–
TRACE_ALWAYS
, "TabÀ† = (%d)\n", 
sz
);

295 
uöt
 
i
=0; i<
sz
; i++) {

296 
_ú±p_vec
[
i
]->
	`dump
();

299 
	}
}

310 
	gD‹aEnv
::
	$_öfo
(c⁄° 
Sh‹eEnv
* 
≥nv
) const

312 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
≥nv
->
	`gë_sf
());

313 
uöt
 
sz
=
_ú±p_vec
.
	`size
();

314 
	`TRACE
–
TRACE_ALWAYS
, "TabÀ† = (%d)\n", 
sz
);

315 
uöt
 
i
=0;i<
sz
;++i) {

316 
_ú±p_vec
[
i
]->
	`öfo
();

319 
	}
}

344 
¥o˚ss‹id_t
 
	gD‹aEnv
::
	$_√xt_˝u
(c⁄° 
¥o˚ss‹id_t
& 
≠rd
,

345 c⁄° 
úpTabÀIm∂
* ,

346 c⁄° 
°ï
)

348 
bödög
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("dora-cpu-binding",0);

349 i‡(
bödög
==0)

350  (
PBIND_NONE
);

352 
a˘ive˝u
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("active-cpu-count",64);

353 
¥o˚ss‹id_t
 
√xçrs
 = ((
≠rd
+
°ï
Ë% 
a˘ive˝u
);

354 
	`TRACE
–
TRACE_DEBUG
, "(%dË-> (%d)\n", 
≠rd
, 
√xçrs
);

355  (
√xçrs
);

356 
	}
}

371 
uöt_t
 
	gD‹aEnv
::
	$dëîmöeNumFlushîs
()

373 
numbîOfFlushîs
 = 1;

376 
sockëCou¡
 = 
˝u_öfo
::
	`sockë_cou¡
();

377 i‡(
sockëCou¡
 > 0)

379 
numbîOfFlushîs
 = 
sockëCou¡
;

380 
	`TRACE
–
TRACE_STATISTICS
,

382 
numbîOfFlushîs
);

387 
numbîOfFlushîs
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("num-flushers",1);

388 i‡(
numbîOfFlushîs
<=0)

390 
	`TRACE
–
TRACE_ALWAYS
,

392 
numbîOfFlushîs
);

393 
numbîOfFlushîs
 = 1;

395 
	`TRACE
–
TRACE_STATISTICS
,

397 
numbîOfFlushîs
);

399  ((
uöt_t
)
numbîOfFlushîs
);

400 
	}
}

406 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/logical_lock.cpp

32 
	~"d‹a/logiˇl_lock.h
"

35 
ENTER_NAMESPACE
(
d‹a
);

47 
	gD‹aLockModeM©rix
[
DL_CC_MODES
][DL_CC_MODES] = { {1, 1, 1},

52 #unde‡
LOCKDEBUG


53 
	#LOCKDEBUG


	)

55 
	gPoﬁedLi°
<
	tA˘i⁄LockReq
>::
	tTy≥
 
	tA˘i⁄LockReqLi°
;

56 
	gA˘i⁄LockReqLi°
::
	tôî©‹
 
	tA˘i⁄LockReqLi°It
;

57 
	gA˘i⁄LockReqLi°
::
	tc⁄°_ôî©‹
 
	tA˘i⁄LockReqLi°Cô
;

69 
	g°d
::
o°ªam
&

70 
›î©‹
<<(
°d
::
o°ªam
& 
os
, c⁄° 
	gA˘i⁄LockReq
& 
	grhs
)

72 
	gos
 << "(" << 
	grhs
.
	g_tid
 << "Ë(" <<Ñhs.
	g_dlm
 << "Ë(" <<Ñhs.
	g_a˘i⁄
 << ")";

73  (
	gos
);

79 
	s¥ëty_¥öãr


81 
o°rög°ªam
 
	m_out
;

82 
°rög
 
	m_tmp
;

83 
›î©‹
 
	mo°ªam
&(Ë{  
	m_out
; }

84 
›î©‹
 c⁄°*(Ë{ 
	m_tmp
 = 
_out
.
°r
(); 
	m_out
.°r("");  _tmp.
c_°r
(); }

89 
	$_¥öt_logiˇl_lock_m≠s
(
°d
::
o°ªam
 &
out
, 
LogiˇlLock
& 
Œ
)

91 
o
 = 
Œ
.
	`ow√rs
().
	`size
();

93 
out
 << "Ow√r†" << 
o
 << 
ídl
;

94 
i
=0;

95 
i
=0; i<
o
; ++i) {

96 
out
 << 
i
 << ". " << 
Œ
.
	`ow√rs
()[i] << 
ídl
;

98 
out
 << "Waôî†" << 
o
 << 
ídl
;

99 
i
=0;

100 
A˘i⁄LockReqLi°Cô
 
ô
=
Œ
.
	`waôîs
().
	`begö
(); it!ˆl.waôîs().
	`íd
(); ++it) {

102 
out
 << ++
i
 << ". " << (*
ô
Ë<< 
ídl
;

104 
	}
}

107 c⁄°* 
	$db_¥ëty_¥öt
(
LogiˇlLock
* 
Œ
, , const* )

109 
¥ëty_¥öãr
 
µ
;

110 
	`_¥öt_logiˇl_lock_m≠s
(
µ
, *
Œ
);

111  
µ
;

112 
	}
}

115 
_¥öt_key
(
°d
::
o°ªam
 &
out
, 
key_wøµî_t
<> c⁄° &
key
)

117 
uöt
 
	gi
=0; i<
	gkey
.
	g_key_v
.
size
(); ++i) {

118 
	gout
 << 
	gkey
.
	g_key_v
.
©
(
i
Ë<< 
	gídl
;

123 c⁄°* 
db_¥ëty_¥öt
(
key_wøµî_t
<> c⁄°* 
key
, , const* )

125 
¥ëty_¥öãr
 
	gµ
;

126 
_¥öt_key
(
µ
, *
key
);

127  
	gµ
;

139 
	gLogiˇlLock
::
	$LogiˇlLock
(
A˘i⁄LockReq
& 
™ow√r
)

140 : 
	`_dlm
(
™ow√r
.
	$dlm
())

143 
_ow√rs
.
	`ª£rve
(1);

144 
_ow√rs
.
	`push_back
(
™ow√r
);

145 
	}
}

164 
	gLogiˇlLock
::
	$ªÀa£
(
Ba£A˘i⁄På
 
™ow√r
,

165 
Ba£A˘i⁄PåLi°
& 
¥omŸedLi°
)

167 
	`as£π
 (
™ow√r
);

168 
boﬁ
 
found
 = 
Ál£
;

169 
tid_t
 
©id
 = 
™ow√r
->
	`tid
();

170 
ùromŸed
 = 0;

174 
A˘i⁄LockReqVecIt
 
ô
=
_ow√rs
.
	`begö
(); it!=_ow√rs.
	`íd
(); ++it) {

175 
tid_t
* 
ow√πid
 = (*
ô
).
	`tid
();

176 
	`w_as£π1
 (
ow√πid
);

177 
	`TRACE
–
TRACE_TRX_FLOW
, "Checking (%d) - Owner (%d)\n",

178 
©id
.
	`gë_lo
(), 
ow√πid
->get_lo());

181 i‡(
©id
==*
ow√πid
) {

182 
found
 = 
åue
;

185 
_ow√rs
.
	`îa£
(
ô
);

188 i‡(
	`_upd_dlm
()) {

192 
	`TRACE
–
TRACE_TRX_FLOW
,

194 
©id
.
	`gë_lo
(), 
_ow√rs
.
	`size
(), 
_dlm
);

195 
Ba£A˘i⁄På
 
a˘i⁄
 = 
NULL
;

199 
	`_hód_ˇn_acquúe
()) {

201 
A˘i⁄LockReq
 
hód
 = 
_waôîs
.
	`‰⁄t
();

202 
a˘i⁄
 = 
hód
.
	`a˘i⁄
();

206 
	`TRACE
–
TRACE_TRX_FLOW
, "(%d)Öromoting (%d)\n",

207 
©id
.
	`gë_lo
(), 
a˘i⁄
->
	`tid
().get_lo());

208 
¥omŸedLi°
.
	`push_back
(
a˘i⁄
);

211 
_ow√rs
.
	`push_back
(
hód
);

212 ++
ùromŸed
;

215 
_waôîs
.
	`p›_‰⁄t
();

218 
	`_upd_dlm
();

219 
	`TRACE
–
TRACE_TRX_FLOW
,

221 
©id
.
	`gë_lo
(), 
_ow√rs
.
	`size
(), 
ùromŸed
, 
_dlm
);

225 
	`TRACE
–
TRACE_TRX_FLOW
,

227 
©id
.
	`gë_lo
(), 
_ow√rs
.
	`size
(), 
ùromŸed
, 
_dlm
);

233 i‡–!
found
 )

235 i‡(
_dlm
 =
DL_CC_NOLOCK
)

237 
	`TRACE
–
TRACE_ALWAYS
,

239 
©id
.
	`gë_lo
(), 
_waôîs
.
	`size
() );

241 
Ba£A˘i⁄På
 
a˘i⁄
 = 
NULL
;

245 
	`_hód_ˇn_acquúe
())

248 
A˘i⁄LockReq
 
hód
 = 
_waôîs
.
	`‰⁄t
();

249 
a˘i⁄
 = 
hód
.
	`a˘i⁄
();

253 
	`TRACE
–
TRACE_TRX_FLOW
, "(%d)Öromoting (%d)\n",

254 
©id
.
	`gë_lo
(), 
a˘i⁄
->
	`tid
().get_lo());

255 
¥omŸedLi°
.
	`push_back
(
a˘i⁄
);

258 
_ow√rs
.
	`push_back
(
hód
);

259 ++
ùromŸed
;

262 
_waôîs
.
	`p›_‰⁄t
();

265 
	`_upd_dlm
();

266 
	`TRACE
–
TRACE_TRX_FLOW
,

268 
©id
.
	`gë_lo
(), 
_ow√rs
.
	`size
(), 
ùromŸed
, 
_dlm
);

275 
	`w_as£π0
 (
found
 && (
_dlm
 !
DL_CC_NOLOCK
) );

279  (
ùromŸed
);

280 
	}
}

295 
boﬁ
 
	gLogiˇlLock
::
	$acquúe
(
A˘i⁄LockReq
& 
Ær
)

297 
	`as£π
 (
Ær
.
	`a˘i⁄
());

300 
A˘i⁄LockReqVecIt
 
ô
=
_ow√rs
.
	`begö
(); it!=_ow√rs.
	`íd
(); ++it) {

301 i‡(
Ær
.
	`isSame
((*
ô
))) {

304 i‡(
_dlm
 =
Ær
.
	`dlm
()) {

306  (
åue
);

310 i‡(
_ow√rs
.
	`size
()==1) {

312 i‡(
_dlm
 < 
Ær
.
	`dlm
()) _dlm =álr.dlm();

314  (
åue
);

318 
	`TRACE
 (
TRACE_ALWAYS
,

320 
_dlm
, 
Ær
.
	`dlm
());

321 
	`as£π
 (0);

322  (
Ál£
);

334 i‡(!
D‹aLockModeM©rix
[
_dlm
][
Ær
.
	`dlm
()]) {

335 
	`as£π
 (
_ow√rs
.
	`size
());

336 
_waôîs
.
	`push_back
(
Ær
);

337  (
Ál£
);

348 
A˘i⁄LockReqLi°It
 
ô
=
_waôîs
.
	`begö
(); it!=_waôîs.
	`íd
(); ++it) {

353 
eD‹aLockMode
 
wdlm
 = (*
ô
).
	`dlm
();

354 i‡(!
D‹aLockModeM©rix
[
wdlm
][
Ær
.
	`dlm
()]) {

355 
	`TRACE
–
TRACE_TRX_FLOW
,

357 
Ær
.
	`tid
()->
	`gë_lo
(), 
wdlm
,áÃ.
	`dlm
());

360 
_waôîs
.
	`push_back
(
Ær
);

361  (
Ál£
);

369 
_ow√rs
.
	`push_back
(
Ær
);

372 i‡(
Ær
.
	`dlm
(Ë!
DL_CC_NOLOCK
Ë
_dlm
 =álr.dlm();

374 
	`TRACE
–
TRACE_TRX_FLOW
,

376 
Ær
.
	`tid
()->
	`gë_lo
(), 
_ow√rs
.
	`size
(), 
_dlm
);

378  (
åue
);

379 
	}
}

392 
boﬁ
 
	gLogiˇlLock
::
	$_hód_ˇn_acquúe
()

394 i‡(
_waôîs
.
	`em±y
()Ë (
Ál£
);

395  (
D‹aLockModeM©rix
[
_dlm
][
_waôîs
.
	`‰⁄t
().
	`dlm
()]);

396 
	}
}

410 
boﬁ
 
	gLogiˇlLock
::
	$_upd_dlm
()

413 i‡(
_ow√rs
.
	`em±y
()) {

415 i‡(
_dlm
!=
DL_CC_NOLOCK
) {

417 
_dlm
=
DL_CC_NOLOCK
;

418  (
åue
);

421  (
Ál£
);

425 
eD‹aLockMode
 
√w_dlm
 = 
DL_CC_NOLOCK
;

426 
eD‹aLockMode
 
odlm
 = 
DL_CC_NOLOCK
;

427 
boﬁ
 
ch™ged
 = 
Ál£
;

430 
A˘i⁄LockReqVecIt
 
ô
=
_ow√rs
.
	`begö
(); it!=_ow√rs.
	`íd
(); ++it) {

431 
odlm
 = (*
ô
).
	`dlm
();

434 i‡(!
D‹aLockModeM©rix
[
√w_dlm
][
odlm
]) {

435 
	`as£π
 (0);

439 i‡(
odlm
!=
DL_CC_NOLOCK
) {

440 
√w_dlm
 = 
odlm
;

446 
ch™ged
 = (
_dlm
 !
√w_dlm
);

447 
_dlm
 = 
√w_dlm
;

450  (
ch™ged
);

451 
	}
}

463 
boﬁ
 
	gLogiˇlLock
::
	$is_˛ón
() const

465 
boﬁ
 
isCÀ™
 = (
_ow√rs
.
	`em±y
()Ë&& (
_waôîs
.em±y()Ë&& (
_dlm
 =
DL_CC_NOLOCK
);

466  (
isCÀ™
);

467 
	}
}

480 
	gLogiˇlLock
::
ab‹t_™d_ª£t
(
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
)

485 
A˘i⁄LockReqVecIt
 
ô
=
_ow√rs
.
begö
(); 
	gô
!=_ow√rs.
íd
(); ++it) {

486 
x˘_t
* 
	gvi˘im
 = (*
ô
).
a˘i⁄
()->
x˘
();

487 
	gcout
 << (*
	gô
Ë<< 
	gídl
;

488 
	gtﬂb‹t
.
push_back
(
vi˘im
);

492 
	g_ow√rs
.
˛ór
();

493 
	g_waôîs
.
˛ór
();

494 
	g_dlm
 = 
DL_CC_NOLOCK
;

502 
	g°d
::
o°ªam
&

503 
›î©‹
<<(
°d
::
o°ªam
& 
os
, 
	gLogiˇlLock
& 
	grhs
)

505 
	gos
 << "lock: " << 
	grhs
.
dlm
(Ë<< 
	gídl
;

506 
	gos
 << "ow√rs: " << 
	grhs
.
ow√rs
().
size
(Ë<< 
	gídl
;

507 
uöt
 
	gi
=0; i<
	grhs
.
ow√rs
().
size
(); ++i) {

508 
	gos
 << 
	grhs
.
ow√rs
()[
i
] << 
	gídl
;

511 
	gos
 << "waôîs: " << 
	grhs
.
waôîs
().
size
(Ë<< 
	gídl
;

512 
A˘i⁄LockReqLi°Cô
 
	gô
=
rhs
.
waôîs
().
begö
(); it!Ùhs.waôîs().
íd
(); ++it) {

513 
	gos
 << (*
	gô
Ë<< 
	gídl
;

515  (
	gos
);

519 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/part_table.cpp

33 
	~<c°dio
>

35 
	~"d‹a/∑π_èbÀ.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
d‹a
);

49 
	g∑π_èbÀ_t
::
	$∑π_èbÀ_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
,

50 c⁄° 
¥o˚ss‹id_t
 
≠rs
,

51 c⁄° 
uöt
 
a˝uønge
,

52 c⁄° 
uöt
 
keyE°im©i⁄
)

53 : 
	`_ív
(
ív
), 
	`_èbÀ
(
±abÀ
),

54 
	`_°¨t_¥s_id
(
≠rs
), 
	`_√xt_¥s_id
◊¥s), 
	`_¥s_ønge
(
a˝uønge
),

55 
	$_key_e°im©i⁄
(
keyE°im©i⁄
)

57 
	`as£π
 (
_ív
);

58 
	`as£π
 (
_èbÀ
);

59 
_bµm≠
.
	`˛ór
();

60 
	}
}

63 
	g∑π_èbÀ_t
::~
	$∑π_èbÀ_t
()

65 
	}
}

68 
èbÀ_desc_t
* 
∑π_èbÀ_t
::
	$èbÀ
() const

70  (
_èbÀ
);

71 
	}
}

81 
w_rc_t
 
	g∑π_èbÀ_t
::
	$°›
()

83 
	`CRITICAL_SECTION
(
±cs
, 
_lock
);

85 
BPPM≠It
 
ô
=
_bµm≠
.
	`begö
(); ià!_bµm≠.
	`íd
(); it++) {

86 (*
ô
).
£c⁄d
->
	`°›
();

87 
	`dñëe
 (*
ô
).
£c⁄d
;

89 
_bµm≠
.
	`˛ór
();

90  (
RCOK
);

91 
	}
}

106 
w_rc_t
 
	g∑π_èbÀ_t
::
	$¥ï¨eNewRun
()

108 
	`CRITICAL_SECTION
(
±cs
, 
_lock
);

111 
BPPM≠It
 
ô
=
_bµm≠
.
	`begö
(); ià!_bµm≠.
	`íd
(); it++) {

112 
	`W_DO
((*
ô
).
£c⁄d
->
	`¥ï¨eNewRun
());

116 
	`W_DO
(
	`ª∑πôi⁄
());

117  (
RCOK
);

118 
	}
}

131 
w_rc_t
 
	g∑π_èbÀ_t
::
	$ª£t
()

133 
	`CRITICAL_SECTION
(
±cs
, 
_lock
);

135 
	`TRACE
–
TRACE_DEBUG
, "Re£tög (%s)...\n", 
_èbÀ
->
	`«me
());

136 
_√xt_¥s_id
 = 
_°¨t_¥s_id
;

138 
BPPM≠It
 
ô
=
_bµm≠
.
	`begö
(); ià!_bµm≠.
	`íd
(); it++) {

139 (*
ô
).
£c⁄d
->
	`ª£t
(
_√xt_¥s_id
);

140 
_√xt_¥s_id
 = 
	`√xt_˝u
(_next_prs_id);

142  (
RCOK
);

143 
	}
}

157 
w_rc_t
 
	g∑π_èbÀ_t
::
	$move
(c⁄° 
¥o˚ss‹id_t
 
≠rs
, c⁄° 
uöt
 
¨™ge
)

161 
	`CRITICAL_SECTION
(
±cs
, 
_lock
);

162 
_°¨t_¥s_id
 = 
≠rs
;

163 
_¥s_ønge
 = 
¨™ge
;

166  (
	`ª£t
());

167 
	}
}

188 
¥o˚ss‹id_t
 
	g∑π_èbÀ_t
::
	$√xt_˝u
(c⁄° 
¥o˚ss‹id_t
& 
≠rd
)

190 
bödög
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("dora-cpu-binding",0);

191 i‡(
bödög
==0) {

192  (
PBIND_NONE
);

195 
∑πôi⁄_°ï
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("dora-cpu-partition-step",

196 
DF_CPU_STEP_PARTITIONS
);

197 
¥o˚ss‹id_t
 
√xçrs
 = ((
≠rd
+
∑πôi⁄_°ï
Ë% 
_ív
->
	`gë_a˘ive_˝u_cou¡
());

198  (
√xçrs
);

199 
	}
}

210 
	g∑π_èbÀ_t
::
	$°©i°ics
() const

212 
	`TRACE
–
TRACE_STATISTICS
, "TabÀ (%s)\n", 
_èbÀ
->
	`«me
());

214 
w‹kî_°©s_t
 
ws_g©hîed
;

215 
uöt
 
°l_sz
 = 0;

217 
BPPM≠CIt
 
ô
=
_bµm≠
.
	`begö
(); ià!_bµm≠.
	`íd
(); it++) {

219 (*
ô
).
£c⁄d
->
	`°©i°ics
(
ws_g©hîed
);

222 (*
ô
).
£c⁄d
->
	`°lsize
(
°l_sz
);

225 i‡(
ws_g©hîed
.
_¥o˚s£d
 > 
MINIMUM_PROCESSED
) {

226 
	`TRACE
–
TRACE_STATISTICS
, "P¨t†(%d)\n", 
_èbÀ
->
	`p˙t
());

229 
ws_g©hîed
.
	`¥öt_™d_ª£t
();

231 
	`TRACE
–
TRACE_STATISTICS
, "°l.íåõ†(%d)\n", 
°l_sz
);

233 
	}
}

236 
	g∑π_èbÀ_t
::
	$öfo
() const

238 
	`TRACE
–
TRACE_STATISTICS
, "TabÀ (%s)\n", 
_èbÀ
->
	`«me
());

239 
	`TRACE
–
TRACE_STATISTICS
, "P¨t†(%d)\n", 
_èbÀ
->
	`p˙t
());

240 
	}
}

243 
	g∑π_èbÀ_t
::
	$dump
() const

245 
	`TRACE
–
TRACE_DEBUG
, "TabÀ (%s)\n", 
_èbÀ
->
	`«me
());

246 
	`TRACE
–
TRACE_DEBUG
, "P¨t†(%d)\n", 
_èbÀ
->
	`p˙t
());

248 
BPPM≠CIt
 
ô
=
_bµm≠
.
	`begö
(); ià!_bµm≠.
	`íd
(); it++) {

249 (*
ô
).
£c⁄d
->
	`dump
();

251 
	}
}

254 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/partition.cpp

33 
	~"d‹a/∑πôi⁄.h
"

34 
	~"d‹a/a˘i⁄.h
"

37 
ENTER_NAMESPACE
(
d‹a
);

40 
	s¥ëty_¥öãr


42 
o°rög°ªam
 
	m_out
;

43 
°rög
 
	m_tmp
;

44 
›î©‹
 
	mo°ªam
&(Ë{  
	m_out
; }

45 
›î©‹
 const*()

47 
	m_tmp
 = 
_out
.
°r
();

48 
	m_out
.
°r
("");

49  
	m_tmp
.
c_°r
();

54 
_¥öt_∑πôi⁄
(
°d
::
o°ªam
 &
out
, c⁄° 
∑πôi⁄_t
<> &
∑π
)

56 
	gout
 << "P¨tôi⁄: " << 
	g∑π
.
èbÀ
()->
«me
(Ë<< "-" <<Ö¨t.
∑π_id
(Ë<< 
	gídl
;

57 
	gout
 << "I≈ut: " << !
	g∑π
.
has_öput
(Ë<< 
	gídl
;

58 
	gout
 << "Commô: " << !
	g∑π
.
has_commôãd
(Ë<< 
	gídl
;

61 c⁄°* 
db_¥ëty_¥öt
(c⁄° 
∑πôi⁄_t
<>* 
∑π
,

65 
¥ëty_¥öãr
 
	gµ
;

66 
_¥öt_∑πôi⁄
(
µ
, *
∑π
);

67  
	gµ
;

71 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/range_part_table.cpp

33 
	~"d‹a/ønge_∑π_èbÀ.h
"

34 
	~"d‹a/d‹a_îr‹.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

39 
ENTER_NAMESPACE
(
d‹a
);

50 
	gønge_èbÀ_t
::
	$ønge_èbÀ_t
(
Sh‹eEnv
* 
ív
, 
èbÀ_desc_t
* 
±abÀ
, c⁄° 
uöt
 
dty≥
,

51 c⁄° 
¥o˚ss‹id_t
 
≠rs
,

52 c⁄° 
uöt
 
a˝uønge
,

53 c⁄° 
uöt
 
keyE°im©i⁄
)

54 : 
	`∑π_èbÀ_t
(
ív
,
±abÀ
,
≠rs
,
a˝uønge
,
keyE°im©i⁄
), 
	$_dty≥
(
dty≥
)

56 
_¥M≠
 = 
NULL
;

57 
	}
}

60 
	gønge_èbÀ_t
::~
	$ønge_èbÀ_t
()

62 
	}
}

81 
w_rc_t
 
ønge_èbÀ_t
::
	$ª∑πôi⁄
()

85 
dkey_ønges_m≠
* 
drm
 = 
NULL
;

86 
	`W_DO
(
	`_gë_upd©ed_m≠
(
drm
));

87 
	`as£π
(
drm
);

88 i‡((
_¥M≠
 !
NULL
Ë&& (_¥M≠->
	`is_ßme
(*
drm
))) {

89 
	`TRACE
–
TRACE_STATISTICS
, "NotÖartitioning changes in (%s)\n",

90 
_èbÀ
->
	`«me
());

91 
	`dñëe
 (
drm
);

92  (
RCOK
);

97 
_¥M≠
 = 
drm
;

98 
	`as£π
 (
_¥M≠
);

101 
Ba£P¨tôi⁄PåM≠
 
tmpm≠
 = 
_bµm≠
;

104 
_bµm≠
.
	`˛ór
();

107 
ve˘‹
<
Õid_t
> 
pidVec
;

108 
	`W_DO
(
_¥M≠
->
	`gë_Æl_∑πôi⁄s
(
pidVec
));

112 
ve˘‹
<
Õid_t
>::
ôî©‹
 
pidIt
 = 
pidVec
.
	`begö
();

113 
BPPM≠It
 
ﬁdP¨tIt
 = 
tmpm≠
.
	`begö
();

114 
uöt
 
˙t
=0;

116 (
pidIt
 !
pidVec
.
	`íd
()Ë&& (
ﬁdP¨tIt
 !
tmpm≠
.end())) {

120 
_bµm≠
[(*
pidIt
).
∑ge
] = (*
ﬁdP¨tIt
).
£c⁄d
;

121 
pidIt
++;

122 
ﬁdP¨tIt
++;

123 
˙t
++;

126 i‡(
˙t
>0) {

127 
	`TRACE
–
TRACE_STATISTICS
, "Repositioned (%d) (%s)Öartitions\n",

128 
˙t
, 
_èbÀ
->
	`«me
());

129 
˙t
=0;

133 
ﬁdP¨tIt
 !
tmpm≠
.
	`íd
()) {

135 (*
ﬁdP¨tIt
).
£c⁄d
->
	`°›
();

136 
	`dñëe
 ((*
ﬁdP¨tIt
).
£c⁄d
);

137 
ﬁdP¨tIt
++;

138 
˙t
++;

141 i‡(
˙t
>0) {

142 
	`TRACE
–
TRACE_STATISTICS
, "Deleted (%d) (%s)Öartitions\n",

143 
˙t
, 
_èbÀ
->
	`«me
());

144 
˙t
=0;

148 
pidIt
 !
pidVec
.
	`íd
()) {

153 
ba£_∑πôi⁄_t
* 
abp
 = 
NULL
;

154 
	`W_DO
(
	`¸óã_⁄e_∑π
((*
pidIt
).
∑ge
,
abp
));

155 
	`as£π
 (
abp
);

156 
_bµm≠
[(*
pidIt
).
∑ge
] = 
abp
;

157 
pidIt
++;

158 
˙t
++;

161 i‡(
˙t
>0) {

162 
	`TRACE
–
TRACE_STATISTICS
, "Created (%d) (%s)Öartitions\n",

163 
˙t
, 
_èbÀ
->
	`«me
());

164 
˙t
=0;

166  (
RCOK
);

167 
	}
}

182 
w_rc_t
 
	gønge_èbÀ_t
::
	$_gë_upd©ed_m≠
(
dkey_ønges_m≠
*& 
drm
)

184 
w_rc_t
 
r
 = 
RCOK
;

186 
øngem≠_smt_t
* 
rsm
 = 
√w
 
	`øngem≠_smt_t
(
_ív
,
_èbÀ
,
_dty≥
);

187 
	`as£π
 (
rsm
);

188 
rsm
->
	`f‹k
();

189 
rsm
->
	`joö
();

191 
r
 = 
rsm
->
_rc
;

192 i‡(!
r
.
	`is_îr‹
()Ë{ 
drm
 = 
rsm
->
_drm
; }

194 
	`dñëe
(
rsm
);

195 
rsm
 = 
NULL
;

197  (
r
);

198 
	}
}

212 
w_rc_t
 
	gønge_èbÀ_t
::
	$¸óã_⁄e_∑π
(c⁄° 
shpid_t
& 
pid
, 
ba£_∑πôi⁄_t
*& 
abp
)

215 
w_rc_t
 
r
 = 
	`_¸óã_⁄e_∑π
(
pid
,
abp
);

217 i‡(
r
.
	`is_îr‹
()) {

218 
	`TRACE
–
TRACE_ALWAYS
, "Problem in creatingÖartition for (%s)\n",

219 
_èbÀ
->
	`«me
());

220  (
	`RC
(
de_GEN_PARTITION
));

224 
P¨tTabÀ
::
_√xt_¥s_id
 = P¨tTabÀ::
	`√xt_˝u
(PartTable::_next_prs_id);

225  (
r
);

226 
	}
}

229 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/rvp.cpp

31 
	~"d‹a/rvp.h
"

32 
	~"d‹a/d‹a_ív.h
"

34 
ENTER_NAMESPACE
(
d‹a
);

43 
	grvp_t
::
	$rvp_t
()

44 : 
	$ba£_ªque°_t
()

45 { 
	}
}

47 
rvp_t
::
	$rvp_t
(
x˘_t
* 
ax˘
, c⁄° 
tid_t
& 
©id
, c⁄° 
ax˘id
,

48 c⁄° 
åx_ªsu…_tu∂e_t
& 
¥esu…
,

49 c⁄° 
uöt
 
öåa_åx_˙t
, c⁄° uöà
tŸÆ_a˘i⁄s
)

51 
	`_£t
(
ax˘
, 
©id
, 
ax˘id
,

52 
¥esu…
, 
öåa_åx_˙t
, 
tŸÆ_a˘i⁄s
);

53 
	}
}

62 
	grvp_t
::
	$rvp_t
(c⁄° 
rvp_t
& 
rhs
)

63 : 
	$ba£_ªque°_t
()

65 
	`_£t
(
rhs
.
_x˘
,Ñhs.
_tid
,Ñhs.
_x˘_id
,Ñhs.
_ªsu…
,

66 
rhs
.
_cou¡down
.
	`ªmaöög
(),Ñhs.
_a˘i⁄s
.
	`size
());

67 
	`c›y_a˘i⁄s
(
rhs
.
_a˘i⁄s
);

68 
	}
}

70 
	grvp_t
&Ñvp_t::
›î©‹
=(c⁄° 
rvp_t
& 
rhs
)

72 i‡(
this
 !&
rhs
) {

73 
_£t
(
rhs
.
_x˘
,rhs.
_tid
,rhs.
_x˘_id
,rhs.
_ªsu…
,

74 
rhs
.
_cou¡down
.
ªmaöög
(),rhs.
_a˘i⁄s
.
size
());

75 
c›y_a˘i⁄s
(
rhs
.
_a˘i⁄s
);

77  (*
	gthis
);

88 
	grvp_t
::
	$c›y_a˘i⁄s
(c⁄° 
ba£A˘i⁄sLi°
& 
a˘i⁄Li°
)

90 
_a˘i⁄s
.
	`ª£rve
(
a˘i⁄Li°
.
	`size
());

91 
_a˘i⁄s
.
	`assign
(
a˘i⁄Li°
.
	`begö
(),a˘i⁄Li°.
	`íd
());

93 
	}
}

106 
	grvp_t
::
	$≠≥nd_a˘i⁄s
(c⁄° 
ba£A˘i⁄sLi°
& 
a˘i⁄Li°
)

108 
	`CRITICAL_SECTION
(
a˘i⁄_cs
, 
_a˘i⁄s_lock
);

110 
_a˘i⁄s
.
	`ö£π
(_a˘i⁄s.
	`íd
(), 
a˘i⁄Li°
.
	`begö
(),actionList.end());

112 
	}
}

123 
	grvp_t
::
	$add_a˘i⁄
(
ba£_a˘i⁄_t
* 
∑˘i⁄
)

125 
	`as£π
 (
∑˘i⁄
);

126 
	`as£π
 (
this
==
∑˘i⁄
->
	`rvp
());

127 
_a˘i⁄s
.
	`push_back
(
∑˘i⁄
);

129 
	}
}

141 
w_rc_t
 
	grvp_t
::
	$run
()

143 
w_rc_t
 
e
 = 
	`_run
();

144 
	`giveback
();

145  (
e
);

146 
	}
}

155 
	gãrmöÆ_rvp_t
::
	$ãrmöÆ_rvp_t
()

156 : 
	`rvp_t
(), 
	`_db
(
NULL
), 
	$_dív
(
NULL
)

158 
	}
}

174 
	gãrmöÆ_rvp_t
::
	$ãrmöÆ_rvp_t
(c⁄° 
ãrmöÆ_rvp_t
& 
rhs
)

175 : 
	$rvp_t
(
rhs
)

177 
_db
 = 
rhs
._db;

178 
_dív
 = 
rhs
._denv;

179 
	}
}

181 
	gãrmöÆ_rvp_t
&ÅîmöÆ_rvp_t::
›î©‹
=(c⁄° 
ãrmöÆ_rvp_t
& 
rhs
)

183 
rvp_t
::
›î©‹
=(
rhs
);

184 
	g_db
 = 
rhs
.
_db
;

185 
	g_dív
 = 
rhs
.
_dív
;

186  (*
	gthis
);

189 
	gãrmöÆ_rvp_t
::~
	$ãrmöÆ_rvp_t
()

191 
	}
}

202 
ãrmöÆ_rvp_t
::
	$nŸify_∑πôi⁄s
()

204 #w¨nög (
IP
Ë
Pîf
. 
›timiz©i⁄
 --> 
Do
 
nŸ
 
íqueue_commôãd
 
your
 
own
 
a˘i⁄
!

206 
ba£A˘i⁄sIt
 
ô
=
_a˘i⁄s
.
	`begö
(); it!=_a˘i⁄s.
	`íd
(); ++it) {

207 (*
ô
)->
	`nŸify_own_∑πôi⁄
();

209  (
_a˘i⁄s
.
	`size
());

210 
	}
}

220 
w_rc_t
 
	gãrmöÆ_rvp_t
::
	$run
()

222 (
	`_run
());

223 
	}
}

237 
w_rc_t
 
	gãrmöÆ_rvp_t
::
	$_run
()

239 
	`w_as£π4
 (
_db
);

240 
	`w_as£π4
 (
_dív
);

243 
	`w_as£π1
 (
_x˘
);

244 
smthªad_t
::
	`me
()->
	`©èch_x˘
(
_x˘
);

247 
w_rc_t
 
rcdec
;

248 i‡(
_decisi⁄
 =
AD_ABORT
)

252 
rcdec
 = 
_db
->
	`ab‹t_x˘
();

254 i‡(
rcdec
.
	`is_îr‹
())

256 
	`TRACE
–
TRACE_ALWAYS
, "Xct (%d)ábort failed [0x%x]\n",

257 
_tid
.
	`gë_lo
(), 
rcdec
.
	`îr_num
());

261 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dËab‹ãd\n", 
_tid
.
	`gë_lo
());

262 
	`upd_ab‹ãd_°©s
();

265 #ifde‡
CFG_FLUSHER


266 
	`nŸify_⁄_ab‹t
();

271 #ifde‡
CFG_FLUSHER


273 
l¢_t
 
x˘La°L¢
;

274 
rcdec
 = 
_db
->
	`commô_x˘
(
åue
,&
x˘La°L¢
);

275 
	`£t_œ°_l¢
(
x˘La°L¢
);

277 
rcdec
 = 
_db
->
	`commô_x˘
();

280 i‡(
rcdec
.
	`is_îr‹
()) {

281 
	`TRACE
–
TRACE_ALWAYS
, "Xct (%d) commit failed [0x%x]\n",

282 
_tid
.
	`gë_lo
(), 
rcdec
.
	`îr_num
());

283 
	`upd_ab‹ãd_°©s
();

284 
w_rc_t
 
ób‹t
 = 
_db
->
	`ab‹t_x˘
();

286 i‡(
ób‹t
.
	`is_îr‹
()) {

287 
	`TRACE
–
TRACE_ALWAYS
, "Xct (%d)ábort failed [0x%x]\n",

288 
_tid
.
	`gë_lo
(), 
ób‹t
.
	`îr_num
());

291 #ifde‡
CFG_FLUSHER


292 
	`nŸify_⁄_ab‹t
();

296 #ifde‡
CFG_FLUSHER


298 
_dív
->
	`íqueue_toÊush
(
this
);

300 ()
_dív
;

301 
	`TRACE
–
TRACE_TRX_FLOW
, "X˘ (%dËcommôãd\n", 
_tid
.
	`gë_lo
());

302 
	`upd_commôãd_°©s
();

307 #i‚de‡
CFG_FLUSHER


311 
	`nŸify_˛õ¡
();

315 
	`nŸify_∑πôi⁄s
();

316 
	`giveback
();

319  (
rcdec
);

320 
	}
}

337 
	gãrmöÆ_rvp_t
::
	$nŸify_⁄_ab‹t
()

346 
	`nŸify_∑πôi⁄s
();

347 
	`nŸify_˛õ¡
();

349 
	`TRACE
–
TRACE_TRX_FLOW
, "Givög backáb‹ãd (%d)\n", 
_tid
.
	`gë_lo
());

351 
	`giveback
();

352 
	}
}

354 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tm1/dora_tm1.cpp

31 
	~"és.h
"

33 
	~"d‹a/tm1/d‹a_tm1.h
"

34 
	~"d‹a/tm1/d‹a_tm1_im∂.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gtm1
;

40 
ENTER_NAMESPACE
(
d‹a
);

45 c⁄° 
uöt
 
	gsub_IRP_KEY
 = 1;

46 c⁄° 
uöt
 
	gai_IRP_KEY
 = 2;

47 c⁄° 
uöt
 
	gsf_IRP_KEY
 = 2;

48 c⁄° 
uöt
 
	gcf_IRP_KEY
 = 3;

51 c⁄° 
uöt
 
	gsub_KEY_EST
 = 1000;

52 c⁄° 
uöt
 
	gai_KEY_EST
 = 2500;

53 c⁄° 
uöt
 
	gsf_KEY_EST
 = 2500;

54 c⁄° 
uöt
 
	gcf_KEY_EST
 = 3750;

64 
	gD‹aTM1Env
::
	$D‹aTM1Env
()

65 : 
	`Sh‹eTM1Env
(), 
	$D‹aEnv
()

67 
	`upd©e_pd
(
this
);

68 
	}
}

70 
	gD‹aTM1Env
::~
	$D‹aTM1Env
()

72 
	`°›
();

73 
	}
}

91 
	gD‹aTM1Env
::
	$°¨t
()

99 
	`c⁄f
();

100 
¥o˚ss‹id_t
 
	`i˝u
(
_°¨tög_˝u
);

103 
	`GENERATE_DORA_PARTS
(
sub
,sub);

106 
	`GENERATE_DORA_PARTS
(
ai
,ai);

109 
	`GENERATE_DORA_PARTS
(
sf
,sf);

112 
	`GENERATE_DORA_PARTS
(
cf
,cf);

115 
D‹aEnv
::
	`_po°_°¨t
(
this
);

117 
	}
}

129 
w_rc_t
 
	gD‹aTM1Env
::
	$upd©e_∑πôi⁄ög
()

134 
	`c⁄f
();

138 
möKeyVÆ
 = 1;

139 
maxKeyVÆ
 = (
	`gë_sf
()*
TM1_SUBS_PER_SF
)+1;

144 * 
möKey
 = (*)
	`mÆloc
(());

145 
	`mem£t
(
möKey
,0,());

146 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

148 * 
maxKey
 = (*)
	`mÆloc
(());

149 
	`mem£t
(
maxKey
,0,());

150 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

153 
_psub_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_sub
);

154 
_∑i_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_ai
);

155 
_psf_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_sf
);

156 
_pcf_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_cf
);

158 
	`‰ì
 (
möKey
);

159 
	`‰ì
 (
maxKey
);

161  (
RCOK
);

162 
	}
}

174 
	gD‹aTM1Env
::
	$°›
()

177  (
D‹aEnv
::
	`_po°_°›
(
this
));

178 
	}
}

189 
	gD‹aTM1Env
::
	$ªsume
()

191 
	`as£π
 (0);

192 
	`£t_dbc
(
DBC_ACTIVE
);

194 
	}
}

205 
	gD‹aTM1Env
::
	$∑u£
()

207 
	`as£π
 (0);

208 
	`£t_dbc
(
DBC_PAUSED
);

210 
	}
}

221 
	gD‹aTM1Env
::
	$c⁄f
()

223 
Sh‹eTM1Env
::
	`c⁄f
();

225 
	`_check_ty≥
();

227 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

230 
_˝u_ønge
 = 
	`gë_a˘ive_˝u_cou¡
();

231 
_°¨tög_˝u
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-°¨tög",
DF_CPU_STEP_PARTITIONS
);

232 
_˝u_èbÀ_°ï
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-èbÀ-°ï",
DF_CPU_STEP_TABLES
);

244 
uöt
 
ªc‹dE°im©i⁄
 = 
	`gë_sf
()*
TM1_SUBS_PER_SF
;

246 
sub_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tm1-sub",0);

247 
_∑πs_sub
 = ( 
sub_PîCPU
>0 ? 
	`˚û
(
_˝u_ønge
 * sub_PerCPU) : 1);

248 
_∑πs_sub
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_sub);

251 
ai_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tm1-ai",0);

252 
_∑πs_ai
 = ( 
ai_PîCPU
>0 ? (
_˝u_ønge
 *ái_PerCPU) : 1);

253 
_∑πs_ai
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_ai);

256 
sf_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tm1-sf",0);

257 
_∑πs_sf
 = ( 
sf_PîCPU
>0 ? (
_˝u_ønge
 * sf_PerCPU) : 1);

258 
_∑πs_sf
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_sf);

261 
cf_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tm1-cf",0);

262 
_∑πs_cf
 = ( 
cf_PîCPU
>0 ? (
_˝u_ønge
 * cf_PerCPU) : 1);

263 
_∑πs_cf
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_cf);

265 
	`TRACE
–
TRACE_STATISTICS
,"TotalÇumber ofÖartitions (%d)\n",

266 (
_∑πs_sub
+
_∑πs_ai
+
_∑πs_sf
+
_∑πs_cf
));

269 
	}
}

280 
w_rc_t
 
	gD‹aTM1Env
::
	$√wrun
()

282  (
D‹aEnv
::
	`_√wrun
(
this
));

283 
	}
}

294 
	gD‹aTM1Env
::
	$dump
()

296  (
D‹aEnv
::
	`_dump
(
this
));

297 
	}
}

308 
	gD‹aTM1Env
::
	$öfo
() const

310  (
D‹aEnv
::
	`_öfo
(
this
));

311 
	}
}

322 
	gD‹aTM1Env
::
	$°©i°ics
()

324 
D‹aEnv
::
	`_°©i°ics
(
this
);

329 
	`TRACE
–
TRACE_STATISTICS
, "----- TM1 -----\n");

330 
Sh‹eTM1Env
::
	`°©i°ics
();

332 
	}
}

348 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gsd_rvp
,
D‹aTM1Env
);

350 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_gsd_a˘i⁄
,
rvp_t
,
gë_sub_d©a_öput_t
,,
D‹aTM1Env
);

357 #ifde‡
TM1GND2


358 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_gnd_rvp
,
gë_√w_de°_öput_t
,
D‹aTM1Env
);

359 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_gnd_rvp
,
D‹aTM1Env
);

361 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sf_gnd_a˘i⁄
,
mid_gnd_rvp
,
gë_√w_de°_öput_t
,,
D‹aTM1Env
);

363 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_cf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
,,
D‹aTM1Env
);

366 #w¨nög 
OLD
-
GëNewDe°
 !!

367 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gnd_rvp
,
D‹aTM1Env
);

369 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
,,
D‹aTM1Env
);

370 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_cf_gnd_a˘i⁄
,
rvp_t
,
gë_√w_de°_öput_t
,,
D‹aTM1Env
);

378 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_gad_rvp
,
D‹aTM1Env
);

380 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_ai_gad_a˘i⁄
,
rvp_t
,
gë_acc_d©a_öput_t
,,
D‹aTM1Env
);

387 #ifde‡
TM1USD2


388 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_usd_rvp
,
upd_sub_d©a_öput_t
,
D‹aTM1Env
);

389 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_usd_rvp
,
D‹aTM1Env
);

391 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sf_usd_a˘i⁄
,
mid_usd_rvp
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

393 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sub_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

396 #w¨nög 
OLD
-
UpdSubD©a
 !!

397 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_usd_rvp
,
D‹aTM1Env
);

399 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sub_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

400 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sf_usd_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

407 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_usdmix_rvp
,
upd_sub_d©a_öput_t
,
D‹aTM1Env
);

408 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_usdmix_rvp
,
D‹aTM1Env
);

410 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sub_usdmix_a˘i⁄
,
mid_usdmix_rvp
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

411 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sf_usdmix_a˘i⁄
,
rvp_t
,
upd_sub_d©a_öput_t
,,
D‹aTM1Env
);

418 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_ul_rvp
,
D‹aTM1Env
);

420 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_sub_ul_a˘i⁄
,
rvp_t
,
upd_loc_öput_t
,,
D‹aTM1Env
);

427 #ifde‡
TM1ICF2


428 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,
D‹aTM1Env
);

429 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,
D‹aTM1Env
);

430 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_icf_rvp
,
D‹aTM1Env
);

432 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_icf_a˘i⁄
,
mid1_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

433 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sf_icf_a˘i⁄
,
mid2_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

435 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_cf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

439 #w¨nög 
OLD
-
InsCÆlFwd
 !!

440 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,
D‹aTM1Env
);

441 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_icf_rvp
,
D‹aTM1Env
);

443 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_icf_a˘i⁄
,
mid_icf_rvp
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

445 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

446 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_cf_icf_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

455 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_icfb_rvp
,
D‹aTM1Env
);

457 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_icfb_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_bích_öput_t
,,
D‹aTM1Env
);

458 
DEFINE_DORA_ACTION_GEN_FUNC
(
i_cf_icfb_a˘i⁄
,
rvp_t
,
ös_ˇŒ_fwd_bích_öput_t
,,
D‹aTM1Env
);

466 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid_dcf_rvp
,
dñ_ˇŒ_fwd_öput_t
,
D‹aTM1Env
);

467 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_dcf_rvp
,
D‹aTM1Env
);

469 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_dcf_a˘i⁄
,
mid_dcf_rvp
,
dñ_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

471 
DEFINE_DORA_ACTION_GEN_FUNC
(
dñ_cf_dcf_a˘i⁄
,
rvp_t
,
dñ_ˇŒ_fwd_öput_t
,,
D‹aTM1Env
);

479 
DEFINE_DORA_FINAL_DYNAMIC_RVP_GEN_FUNC
(
föÆ_g¢_rvp
,
D‹aTM1Env
);

480 #i‚de‡
USE_DORA_EXT_IDX


481 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_g¢_a˘i⁄
,
rvp_t
,
gë_sub_nbr_öput_t
,,
D‹aTM1Env
);

483 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_sub_g¢_acc_a˘i⁄
,
rvp_t
,
gë_sub_nbr_öput_t
,,
D‹aTM1Env
);

488 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tm1/dora_tm1_client.cpp

31 
	~"d‹a/tm1/d‹a_tm1_˛õ¡.h
"

34 
ENTER_NAMESPACE
(
d‹a
);

39 c⁄° 
	gXCT_TM1_DORA_MIX
 = 200;

40 c⁄° 
	gXCT_TM1_DORA_GET_SUB_DATA
 = 221;

41 c⁄° 
	gXCT_TM1_DORA_GET_NEW_DEST
 = 222;

42 c⁄° 
	gXCT_TM1_DORA_GET_ACC_DATA
 = 223;

43 c⁄° 
	gXCT_TM1_DORA_UPD_SUB_DATA
 = 224;

44 c⁄° 
	gXCT_TM1_DORA_UPD_LOCATION
 = 225;

45 c⁄° 
	gXCT_TM1_DORA_CALL_FWD_MIX
 = 226;

47 c⁄° 
	gXCT_TM1_DORA_INS_CALL_FWD
 = 227;

48 c⁄° 
	gXCT_TM1_DORA_DEL_CALL_FWD
 = 228;

50 c⁄° 
	gXCT_TM1_DORA_GET_SUB_NBR
 = 229;

52 c⁄° 
	gXCT_TM1_DORA_CALL_FWD_MIX_BENCH
 = 230;

53 c⁄° 
	gXCT_TM1_DORA_INS_CALL_FWD_BENCH
 = 231;

54 c⁄° 
	gXCT_TM1_DORA_DEL_CALL_FWD_BENCH
 = 232;

56 c⁄° 
	gXCT_TM1_DORA_UPD_SUB_DATA_MIX
 = 234;

64 
	gd‹a_tm1_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

67 
°m≠
.
	`˛ór
();

70 
°m≠
[
XCT_TM1_DORA_MIX
] = "DORA-TM1-Mix";

71 
°m≠
[
XCT_TM1_DORA_GET_SUB_DATA
] = "DORA-TM1-GetSubData";

72 
°m≠
[
XCT_TM1_DORA_GET_NEW_DEST
] = "DORA-TM1-GetNewDest";

73 
°m≠
[
XCT_TM1_DORA_GET_ACC_DATA
] = "DORA-TM1-GetAccData";

74 
°m≠
[
XCT_TM1_DORA_UPD_SUB_DATA
] = "DORA-TM1-UpdSubData";

75 
°m≠
[
XCT_TM1_DORA_UPD_LOCATION
] = "DORA-TM1-UpdLocation";

76 
°m≠
[
XCT_TM1_DORA_CALL_FWD_MIX
] = "DORA-TM1-CallFwd-Mix";

77 
°m≠
[
XCT_TM1_DORA_INS_CALL_FWD
] = "DORA-TM1-InsCallFwd";

78 
°m≠
[
XCT_TM1_DORA_DEL_CALL_FWD
] = "DORA-TM1-DelCallFwd";

80 #i‚de‡
USE_DORA_EXT_IDX


81 
°m≠
[
XCT_TM1_DORA_GET_SUB_NBR
] = "DORA-TM1-GetSubNbr";

83 
°m≠
[
XCT_TM1_DORA_GET_SUB_NBR
] = "DORA-TM1-GetSubNbr-Ext";

86 
°m≠
[
XCT_TM1_DORA_CALL_FWD_MIX_BENCH
] = "DORA-TM1-CallFwdMixBench";

87 
°m≠
[
XCT_TM1_DORA_INS_CALL_FWD_BENCH
] = "DORA-TM1-InsCallFwdBench";

88 
°m≠
[
XCT_TM1_DORA_DEL_CALL_FWD_BENCH
] = "DORA-TM1-DelCallFwdBench";

90  (
°m≠
.
	`size
());

91 
	}
}

104 
w_rc_t
 
	gd‹a_tm1_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

107 
boﬁ
 
bWake
 = 
Ál£
;

108 i‡(
x˘_ty≥
 =
XCT_TM1_DORA_MIX
) {

109 
x˘_ty≥
 = 
XCT_TM1_DORA_MIX
 + 
	`øndom_tm1_x˘_ty≥
(
	`ønd
(100));

110 if(
x˘_ty≥
 =
XCT_TM1_DORA_UPD_SUB_DATA
) {

111 
x˘_ty≥
 = 
XCT_TM1_DORA_UPD_SUB_DATA_MIX
;

113 
bWake
 = 
åue
;

117 
£lsf
 = 
_£lid
;

120 i‡(
_£lid
==0) {

121 
£lsf
 = 
	`UR™d
(1,
_qf
);

122 
bWake
 = 
åue
;

126 
£lid
 = (
£lsf
-1)*
TM1_SUBS_PER_SF
 + 
	`UR™d
(1,TM1_SUBS_PER_SF);

128 
åx_ªsu…_tu∂e_t
 
©π
;

129 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

130 
©π
.
	`£t_nŸify
(
c
);

131 
bWake
 = 
åue
;

134 
x˘_ty≥
) {

137 
XCT_TM1_DORA_GET_SUB_DATA
:

138  (
_tm1db
->
	`d‹a_gë_sub_d©a
(
x˘id
,
©π
,
£lid
,
bWake
));

139 
XCT_TM1_DORA_GET_NEW_DEST
:

140  (
_tm1db
->
	`d‹a_gë_√w_de°
(
x˘id
,
©π
,
£lid
,
bWake
));

141 
XCT_TM1_DORA_GET_ACC_DATA
:

142  (
_tm1db
->
	`d‹a_gë_acc_d©a
(
x˘id
,
©π
,
£lid
,
bWake
));

143 
XCT_TM1_DORA_UPD_SUB_DATA
:

144  (
_tm1db
->
	`d‹a_upd_sub_d©a
(
x˘id
,
©π
,
£lid
,
bWake
));

145 
XCT_TM1_DORA_UPD_LOCATION
:

146  (
_tm1db
->
	`d‹a_upd_loc
(
x˘id
,
©π
,
£lid
,
bWake
));

147 
XCT_TM1_DORA_INS_CALL_FWD
:

148  (
_tm1db
->
	`d‹a_ös_ˇŒ_fwd
(
x˘id
,
©π
,
£lid
,
bWake
));

149 
XCT_TM1_DORA_DEL_CALL_FWD
:

150  (
_tm1db
->
	`d‹a_dñ_ˇŒ_fwd
(
x˘id
,
©π
,
£lid
,
bWake
));

153 
XCT_TM1_DORA_CALL_FWD_MIX
:

155 i‡(
	`UR™d
(1,100)>50)

156  (
_tm1db
->
	`d‹a_ös_ˇŒ_fwd
(
x˘id
,
©π
,
£lid
,
åue
));

158  (
_tm1db
->
	`d‹a_dñ_ˇŒ_fwd
(
x˘id
,
©π
,
£lid
,
åue
));

160 
XCT_TM1_DORA_GET_SUB_NBR
:

161  (
_tm1db
->
	`d‹a_gë_sub_nbr
(
x˘id
,
©π
,
£lid
,
bWake
));

163 
XCT_TM1_DORA_INS_CALL_FWD_BENCH
:

164  (
_tm1db
->
	`d‹a_ös_ˇŒ_fwd_bích
(
x˘id
,
©π
,
£lid
,
åue
));

166 
XCT_TM1_DORA_UPD_SUB_DATA_MIX
:

167  (
_tm1db
->
	`d‹a_upd_sub_d©a_mix
(
x˘id
,
©π
,
£lid
,
bWake
));

170 
	`as£π
 (0);

172  (
RCOK
);

173 
	}
}

176 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tm1/dora_tm1_impl.cpp

34 
	~"d‹a/tm1/d‹a_tm1_im∂.h
"

35 
	~"d‹a/tm1/d‹a_tm1.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gtm1
;

41 
ENTER_NAMESPACE
(
d‹a
);

43 
	g∑πôi⁄_t
<> 
	túpIm∂
;

52 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_gsd_rvp
,
gë_sub_d©a
);

64 
	gr_sub_gsd_a˘i⁄
::
	$ˇlc_keys
()

66 
	`£t_ªad_⁄ly
();

67 
_down
.
	`push_back
(
_ö
.
_s_id
);

68 
	}
}

72 
w_rc_t
 
	gr_sub_gsd_a˘i⁄
::
	$åx_exec
()

74 
	`as£π
 (
_≥nv
);

78 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

79 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

80 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

81 
¥sub
->
_ªp
 = &
¨ïrow
;

93 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSD:sub-idx-nl (%d)\n",

94 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

95 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_s_id
));

97 
tm1_sub_t
 
asub
;

101 
¥sub
->
	`gë_vÆue
(0, 
asub
.
S_ID
);

102 
¥sub
->
	`gë_vÆue
(1, 
asub
.
SUB_NBR
, 17);

105 
¥sub
->
	`gë_vÆue
(2, 
asub
.
BIT_XX
[0]);

106 
¥sub
->
	`gë_vÆue
(3, 
asub
.
BIT_XX
[1]);

107 
¥sub
->
	`gë_vÆue
(4, 
asub
.
BIT_XX
[2]);

108 
¥sub
->
	`gë_vÆue
(5, 
asub
.
BIT_XX
[3]);

109 
¥sub
->
	`gë_vÆue
(6, 
asub
.
BIT_XX
[4]);

110 
¥sub
->
	`gë_vÆue
(7, 
asub
.
BIT_XX
[5]);

111 
¥sub
->
	`gë_vÆue
(8, 
asub
.
BIT_XX
[6]);

112 
¥sub
->
	`gë_vÆue
(9, 
asub
.
BIT_XX
[7]);

113 
¥sub
->
	`gë_vÆue
(10, 
asub
.
BIT_XX
[8]);

114 
¥sub
->
	`gë_vÆue
(11, 
asub
.
BIT_XX
[9]);

117 
¥sub
->
	`gë_vÆue
(12, 
asub
.
HEX_XX
[0]);

118 
¥sub
->
	`gë_vÆue
(13, 
asub
.
HEX_XX
[1]);

119 
¥sub
->
	`gë_vÆue
(14, 
asub
.
HEX_XX
[2]);

120 
¥sub
->
	`gë_vÆue
(15, 
asub
.
HEX_XX
[3]);

121 
¥sub
->
	`gë_vÆue
(16, 
asub
.
HEX_XX
[4]);

122 
¥sub
->
	`gë_vÆue
(17, 
asub
.
HEX_XX
[5]);

123 
¥sub
->
	`gë_vÆue
(18, 
asub
.
HEX_XX
[6]);

124 
¥sub
->
	`gë_vÆue
(19, 
asub
.
HEX_XX
[7]);

125 
¥sub
->
	`gë_vÆue
(20, 
asub
.
HEX_XX
[8]);

126 
¥sub
->
	`gë_vÆue
(21, 
asub
.
HEX_XX
[9]);

129 
¥sub
->
	`gë_vÆue
(22, 
asub
.
BYTE2_XX
[0]);

130 
¥sub
->
	`gë_vÆue
(23, 
asub
.
BYTE2_XX
[1]);

131 
¥sub
->
	`gë_vÆue
(24, 
asub
.
BYTE2_XX
[2]);

132 
¥sub
->
	`gë_vÆue
(25, 
asub
.
BYTE2_XX
[3]);

133 
¥sub
->
	`gë_vÆue
(26, 
asub
.
BYTE2_XX
[4]);

134 
¥sub
->
	`gë_vÆue
(27, 
asub
.
BYTE2_XX
[5]);

135 
¥sub
->
	`gë_vÆue
(28, 
asub
.
BYTE2_XX
[6]);

136 
¥sub
->
	`gë_vÆue
(29, 
asub
.
BYTE2_XX
[7]);

137 
¥sub
->
	`gë_vÆue
(30, 
asub
.
BYTE2_XX
[8]);

138 
¥sub
->
	`gë_vÆue
(31, 
asub
.
BYTE2_XX
[9]);

140 
¥sub
->
	`gë_vÆue
(32, 
asub
.
MSC_LOCATION
);

141 
¥sub
->
	`gë_vÆue
(33, 
asub
.
VLR_LOCATION
);

143 #ifde‡
PRINT_TRX_RESULTS


145 
¥sub
->
	`¥öt_tu∂e
();

148  
RCOK
;

149 
	}
}

159 #ifde‡
TM1GND2


161 
w_rc_t
 
	gmid_gnd_rvp
::
	$_run
()

164 
föÆ_gnd_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_gnd_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

167 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

170 
r_cf_gnd_a˘i⁄
* 
r_cf
 = 
_≥nv
->
	`√w_r_cf_gnd_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

172 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

178 
úpIm∂
* 
my_cf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`cf
(),
_ö
.
_s_id
);

181 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

182 i‡(
my_cf_∑π
->
	`íqueue
(
r_cf
,
_bWake
)) {

183 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_CF_GND\n");

184 
	`as£π
 (0);

185  (
	`RC
(
de_PROBLEM_ENQUEUE
));

188  (
RCOK
);

189 
	}
}

193 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_gnd_rvp
,
gë_√w_de°
);

207 
	gr_sf_gnd_a˘i⁄
::
	$ˇlc_keys
()

209 
	`£t_ªad_⁄ly
();

210 
s·y≥
 = 
_ö
.
_sf_ty≥
;

211 
_down
.
	`push_back
(
_ö
.
_s_id
);

212 
_down
.
	`push_back
(
s·y≥
);

213 
	}
}

217 
w_rc_t
 
	gr_sf_gnd_a˘i⁄
::
	$åx_exec
()

219 
	`as£π
 (
_≥nv
);

223 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_≥nv
->
	`sf_m™
());

224 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sf_m™
()->
	`ts
());

225 
¨ïrow
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

226 
¥sf
->
_ªp
 = &
¨ïrow
;

228 
tm1_sf_t
 
asf
;

231 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GND:sf-idx-nl (%d) (%d)\n",

232 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
);

233 #i‚de‡
TM1GND2


234 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

236 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`sf_idx_∆
(_≥nv->
	`db
(), 
¥sf
, 
_ö
.
_s_id
, _ö.
_sf_ty≥
));

237 
¥sf
->
	`gë_vÆue
(2, 
asf
.
IS_ACTIVE
);

238 i‡(!
asf
.
IS_ACTIVE
) {

240 
	`W_DO
(
	`RC
(
£_NO_CURRENT_TUPLE
));

243 #ifde‡
PRINT_TRX_RESULTS


245 
¥sf
->
	`¥öt_tu∂e
();

248  
RCOK
;

249 
	}
}

254 
	gr_cf_gnd_a˘i⁄
::
	$ˇlc_keys
()

256 
	`£t_ªad_⁄ly
();

257 
s·y≥
 = 
_ö
.
_sf_ty≥
;

258 
°ime
 = 
_ö
.
_s_time
;

259 
_down
.
	`push_back
(
_ö
.
_s_id
);

260 
_down
.
	`push_back
(
s·y≥
);

261 
_down
.
	`push_back
(
°ime
);

262 
	}
}

266 
w_rc_t
 
	gr_cf_gnd_a˘i⁄
::
	$åx_exec
()

268 
	`as£π
 (
_≥nv
);

272 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_≥nv
->
	`cf_m™
());

273 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cf_m™
()->
	`ts
());

274 
¨ïrow
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

275 
¥cf
->
_ªp
 = &
¨ïrow
;

277 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`cf_m™
()->
	`ts
());

278 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`cf_m™
()->
	`ts
());

279 
lowªp
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

280 
highªp
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

282 
tm1_cf_t
 
acf
;

283 
boﬁ
 
eof
;

284 
boﬁ
 
bFound
 = 
Ál£
;

286 #i‚de‡
TM1GND2


287 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

291 
gu¨d
<
ödex_sˇn_ôî_im∂
<
ˇŒ_f‹w¨dög_t
> > 
cf_ôî
;

293 
ödex_sˇn_ôî_im∂
<
ˇŒ_f‹w¨dög_t
>* 
tmp_cf_ôî
;

294 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d GND:cf-idx-ôî-∆\n", 
_tid
.
	`gë_lo
());

295 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`cf_gë_idx_ôî_∆
(_≥nv->
	`db
(), 
tmp_cf_ôî
, 
¥cf
,

296 
lowªp
, 
highªp
, 
_ö
.
_s_id
,

297 
_ö
.
_sf_ty≥
, _ö.
_s_time
));

298 
cf_ôî
 = 
tmp_cf_ôî
;

300 
	`W_DO
(
cf_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥cf
));

302 !
eof
) {

303 #i‚de‡
TM1GND2


304 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

307 
¥cf
->
	`gë_vÆue
(3, 
acf
.
END_TIME
);

308 i‡(
acf
.
END_TIME
 > 
_ö
.
_e_time
) {

309 
¥cf
->
	`gë_vÆue
(4, 
acf
.
NUMBERX
, 17);

310 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GND: found (%d) (%d) (%s)\n",

311 
_tid
.
	`gë_lo
(), 
_ö
.
_e_time
, 
acf
.
END_TIME
,ácf.
NUMBERX
);

312 
bFound
 = 
åue
;

314 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d GND:cf-idx-ôî-√xt\n", 
_tid
.
	`gë_lo
());

315 
	`W_DO
(
cf_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥cf
));

318 i‡(!
bFound
) {

319 
	`W_DO
(
	`RC
(
£_NO_CURRENT_TUPLE
));

322 #ifde‡
PRINT_TRX_RESULTS


324 
¥cf
->
	`¥öt_tu∂e
();

327  
RCOK
;

328 
	}
}

339 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_gad_rvp
,
gë_acc_d©a
);

351 
	gr_ai_gad_a˘i⁄
::
	$ˇlc_keys
()

353 
	`£t_ªad_⁄ly
();

354 
aôy≥
 = 
_ö
.
_ai_ty≥
;

355 
_down
.
	`push_back
(
_ö
.
_s_id
);

356 
_down
.
	`push_back
(
aôy≥
);

357 
	}
}

361 
w_rc_t
 
	gr_ai_gad_a˘i⁄
::
	$åx_exec
()

363 
	`as£π
 (
_≥nv
);

367 
tu∂e_gu¨d
<
ai_m™_im∂
> 
	`¥ai
(
_≥nv
->
	`ai_m™
());

368 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`ai_m™
()->
	`ts
());

369 
¨ïrow
.
	`£t
(
_≥nv
->
	`ai_desc
()->
	`maxsize
());

370 
¥ai
->
_ªp
 = &
¨ïrow
;

381 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GAD:ai-idx-nl (%d) (%d)\n",

382 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_ai_ty≥
);

383 
	`W_DO
(
_≥nv
->
	`ai_m™
()->
	`ai_idx_∆
(_≥nv->
	`db
(), 
¥ai
, 
_ö
.
_s_id
, _ö.
_ai_ty≥
));

386 
tm1_ai_t
 
Øi
;

387 
¥ai
->
	`gë_vÆue
(2, 
Øi
.
DATA1
);

388 
¥ai
->
	`gë_vÆue
(3, 
Øi
.
DATA2
);

389 
¥ai
->
	`gë_vÆue
(4, 
Øi
.
DATA3
, 5);

390 
¥ai
->
	`gë_vÆue
(5, 
Øi
.
DATA4
, 9);

392 #ifde‡
PRINT_TRX_RESULTS


394 
¥ai
->
	`¥öt_tu∂e
();

397  
RCOK
;

398 
	}
}

409 #ifde‡
TM1USD2


411 
w_rc_t
 
	gmid_usd_rvp
::
	$_run
()

414 
föÆ_usd_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_usd_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

417 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

420 
upd_sub_usd_a˘i⁄
* 
upd_sub
 = 
_≥nv
->
	`√w_upd_sub_usd_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

422 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

427 
úpIm∂
* 
my_sub_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`sub
(),
_ö
.
_s_id
);

430 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

431 i‡(
my_sub_∑π
->
	`íqueue
(
upd_sub
,
_bWake
)) {

432 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SUB_USD\n");

433 
	`as£π
 (0);

434  (
	`RC
(
de_PROBLEM_ENQUEUE
));

437  (
RCOK
);

438 
	}
}

442 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_usd_rvp
,
upd_sub_d©a
);

455 
	gupd_sub_usd_a˘i⁄
::
	$ˇlc_keys
()

457 
_down
.
	`push_back
(
_ö
.
_s_id
);

458 
	}
}

461 
w_rc_t
 
	gupd_sub_usd_a˘i⁄
::
	$åx_exec
()

463 
	`as£π
 (
_≥nv
);

467 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

468 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

469 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

470 
¥sub
->
_ªp
 = &
¨ïrow
;

480 
	`TRACE
–
TRACE_TRX_FLOW
,

481 "Aµ: %d USD:sub-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

482 #i‚de‡
TM1USD2


483 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

485 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_s_id
));

486 
¥sub
->
	`£t_vÆue
(2, 
_ö
.
_a_bô
);

487 #i‚de‡
TM1USD2


488 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

490 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥sub
, 
NL
));

492 #ifde‡
PRINT_TRX_RESULTS


494 
¥sub
->
	`¥öt_tu∂e
();

497  
RCOK
;

498 
	}
}

502 
	gupd_sf_usd_a˘i⁄
::
	$ˇlc_keys
()

504 
s·y≥
 = 
_ö
.
_sf_ty≥
;

505 
_down
.
	`push_back
(
_ö
.
_s_id
);

506 
_down
.
	`push_back
(
s·y≥
);

507 
	}
}

510 
w_rc_t
 
	gupd_sf_usd_a˘i⁄
::
	$åx_exec
()

512 
	`as£π
 (
_≥nv
);

516 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_≥nv
->
	`sf_m™
());

517 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sf_m™
()->
	`ts
());

518 
¨ïrow
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

519 
¥sf
->
_ªp
 = &
¨ïrow
;

530 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d USD:sf-idx-nl (%d) (%d)\n",

531 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
);

532 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`sf_idx_∆
(_≥nv->
	`db
(), 
¥sf
, 
_ö
.
_s_id
, _ö.
_sf_ty≥
));

533 
¥sf
->
	`£t_vÆue
(4, 
_ö
.
_a_d©a
);

534 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥sf
, 
NL
));

536 #ifde‡
PRINT_TRX_RESULTS


538 
¥sf
->
	`¥öt_tu∂e
();

541  
RCOK
;

542 
	}
}

551 
w_rc_t
 
	gmid_usdmix_rvp
::
	$_run
()

554 
föÆ_usdmix_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_usdmix_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

557 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

560 
upd_sf_usdmix_a˘i⁄
* 
upd_sf
 = 
_≥nv
->
	`√w_upd_sf_usdmix_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

562 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

567 
úpIm∂
* 
my_sf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`sf
(),
_ö
.
_s_id
);

570 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

571 i‡(
my_sf_∑π
->
	`íqueue
(
upd_sf
,
_bWake
)) {

572 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SF_USD\n");

573 
	`as£π
 (0);

574  (
	`RC
(
de_PROBLEM_ENQUEUE
));

577  (
RCOK
);

578 
	}
}

580 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_usdmix_rvp
,
upd_sub_d©a
);

593 
	gupd_sub_usdmix_a˘i⁄
::
	$ˇlc_keys
()

595 
_down
.
	`push_back
(
_ö
.
_s_id
);

596 
	}
}

599 
w_rc_t
 
	gupd_sub_usdmix_a˘i⁄
::
	$åx_exec
()

601 
	`as£π
 (
_≥nv
);

605 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

606 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

607 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

608 
¥sub
->
_ªp
 = &
¨ïrow
;

618 
	`TRACE
–
TRACE_TRX_FLOW
,

619 "Aµ: %d USD:sub-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

620 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_s_id
));

621 
¥sub
->
	`£t_vÆue
(2, 
_ö
.
_a_bô
);

622 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥sub
, 
NL
));

624 #ifde‡
PRINT_TRX_RESULTS


626 
¥sub
->
	`¥öt_tu∂e
();

629  
RCOK
;

630 
	}
}

634 
	gupd_sf_usdmix_a˘i⁄
::
	$ˇlc_keys
()

636 
s·y≥
 = 
_ö
.
_sf_ty≥
;

637 
_down
.
	`push_back
(
_ö
.
_s_id
);

638 
_down
.
	`push_back
(
s·y≥
);

639 
	}
}

642 
w_rc_t
 
	gupd_sf_usdmix_a˘i⁄
::
	$åx_exec
()

644 
	`as£π
 (
_≥nv
);

648 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_≥nv
->
	`sf_m™
());

649 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sf_m™
()->
	`ts
());

650 
¨ïrow
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

651 
¥sf
->
_ªp
 = &
¨ïrow
;

662 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d USD:sf-idx-nl (%d) (%d)\n",

663 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
);

664 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`sf_idx_∆
(_≥nv->
	`db
(), 
¥sf
, 
_ö
.
_s_id
, _ö.
_sf_ty≥
));

665 
¥sf
->
	`£t_vÆue
(4, 
_ö
.
_a_d©a
);

666 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥sf
, 
NL
));

668 #ifde‡
PRINT_TRX_RESULTS


670 
¥sf
->
	`¥öt_tu∂e
();

673  
RCOK
;

674 
	}
}

683 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_ul_rvp
,
upd_loc
);

695 
	gupd_sub_ul_a˘i⁄
::
	$ˇlc_keys
()

697 
_down
.
	`push_back
(
_ö
.
_s_id
);

698 
	}
}

701 
w_rc_t
 
	gupd_sub_ul_a˘i⁄
::
	$åx_exec
()

703 
	`as£π
 (
_≥nv
);

707 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

708 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

709 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

710 
¥sub
->
_ªp
 = &
¨ïrow
;

720 
	`TRACE
–
TRACE_TRX_FLOW
,

721 "Aµ: %d UL:sub-nbr-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

722 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_nbr_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_sub_nbr
));

723 
¥obed_sid
;

724 
¥sub
->
	`gë_vÆue
(0, 
¥obed_sid
);

725 i‡(
¥obed_sid
 !
_ö
.
_s_id
) {

726 
	`TRACE
–
TRACE_ALWAYS
, "Probed sidÇot matching sid (%d) (%d) ***\n",

727 
¥obed_sid
, 
_ö
.
_s_id
);

728 
	`W_DO
(
	`RC
(
de_WRONG_IDX_DATA
));

730 
¥sub
->
	`£t_vÆue
(33, 
_ö
.
_vÃ_loc
);

733 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥sub
, 
NL
));

735 #ifde‡
PRINT_TRX_RESULTS


737 
¥sub
->
	`¥öt_tu∂e
();

740  
RCOK
;

741 
	}
}

756 #ifde‡
TM1ICF2


758 
w_rc_t
 
	gmid1_icf_rvp
::
	$_run
()

762 
mid2_icf_rvp
* 
rvp
 = 
_≥nv
->
	`√w_mid2_icf_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_ö
,
_a˘i⁄s
,
_bWake
);

765 
	`CHECK_MIDWAY_RVP_ABORTED
(
rvp
);

768 
r_sf_icf_a˘i⁄
* 
r_sf
 = 
_≥nv
->
	`√w_r_sf_icf_a˘i⁄
(
_x˘
,
_tid
,
rvp
,
_ö
);

770 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

775 
úpIm∂
* 
my_sf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`sf
(),
_ö
.
_s_id
);

778 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

779 i‡(
my_sf_∑π
->
	`íqueue
(
r_sf
,
_bWake
)) {

780 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SF_ICF\n");

781 
	`as£π
 (0);

782  (
	`RC
(
de_PROBLEM_ENQUEUE
));

785  (
RCOK
);

786 
	}
}

789 
w_rc_t
 
	gmid2_icf_rvp
::
	$_run
()

793 
föÆ_icf_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_icf_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

796 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

799 
ös_cf_icf_a˘i⁄
* 
ös_cf
 = 
_≥nv
->
	`√w_ös_cf_icf_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

801 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

806 
úpIm∂
* 
my_cf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`cf
(),
_ö
.
_s_id
);

809 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

810 i‡(
my_cf_∑π
->
	`íqueue
(
ös_cf
,
_bWake
)) {

811 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_CF_ICF\n");

812 
	`as£π
 (0);

813  (
	`RC
(
de_PROBLEM_ENQUEUE
));

816  (
RCOK
);

817 
	}
}

821 
w_rc_t
 
	gmid_icf_rvp
::
	$_run
()

824 
föÆ_icf_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_icf_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

827 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

830 
r_sf_icf_a˘i⁄
* 
r_sf
 = 
_≥nv
->
	`√w_r_sf_icf_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

831 
ös_cf_icf_a˘i⁄
* 
ös_cf
 = 
_≥nv
->
	`√w_ös_cf_icf_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

833 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

838 
úpIm∂
* 
my_sf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`sf
(),
_ö
.
_s_id
);

839 
úpIm∂
* 
my_cf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`cf
(),
_ö
.
_s_id
);

842 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

843 i‡(
my_sf_∑π
->
	`íqueue
(
r_sf
,
_bWake
)) {

844 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SF_ICF\n");

845 
	`as£π
 (0);

846  (
	`RC
(
de_PROBLEM_ENQUEUE
));

850 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

851 
sf_∑π_cs
.
	`exô
();

852 i‡(
my_cf_∑π
->
	`íqueue
(
ös_cf
,
_bWake
)) {

853 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_CF_ICF\n");

854 
	`as£π
 (0);

855  (
	`RC
(
de_PROBLEM_ENQUEUE
));

859  (
RCOK
);

860 
	}
}

864 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_icf_rvp
,
ös_ˇŒ_fwd
);

878 
	gr_sub_icf_a˘i⁄
::
	$ˇlc_keys
()

880 
	`£t_ªad_⁄ly
();

881 
_down
.
	`push_back
(
_ö
.
_s_id
);

882 
	}
}

885 
w_rc_t
 
	gr_sub_icf_a˘i⁄
::
	$åx_exec
()

887 
	`as£π
 (
_≥nv
);

891 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

892 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

893 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

894 
¥sub
->
_ªp
 = &
¨ïrow
;

897 
	`TRACE
–
TRACE_TRX_FLOW
,

898 "Aµ: %d ICF:sub-nbr-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

899 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_nbr_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_sub_nbr
));

900 
¥obed_sid
;

901 
¥sub
->
	`gë_vÆue
(0, 
¥obed_sid
);

902 i‡(
¥obed_sid
 !
_ö
.
_s_id
) {

903 
	`TRACE
–
TRACE_ALWAYS
, "Probed sidÇot matching sid (%d) (%d) ***\n",

904 
¥obed_sid
, 
_ö
.
_s_id
);

905 
	`W_DO
(
	`RC
(
de_WRONG_IDX_DATA
));

908 #ifde‡
PRINT_TRX_RESULTS


910 
¥sub
->
	`¥öt_tu∂e
();

913  
RCOK
;

914 
	}
}

918 
	gr_sf_icf_a˘i⁄
::
	$ˇlc_keys
()

920 
	`£t_ªad_⁄ly
();

921 
s·y≥
 = 
_ö
.
_sf_ty≥
;

922 
_down
.
	`push_back
(
_ö
.
_s_id
);

923 
_down
.
	`push_back
(
s·y≥
);

924 
	}
}

927 
w_rc_t
 
	gr_sf_icf_a˘i⁄
::
	$åx_exec
()

929 
	`as£π
 (
_≥nv
);

933 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_≥nv
->
	`sf_m™
());

934 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sf_m™
()->
	`ts
());

935 
¨ïrow
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

936 
¥sf
->
_ªp
 = &
¨ïrow
;

938 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`sf_m™
()->
	`ts
());

939 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`sf_m™
()->
	`ts
());

940 
lowªp
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

941 
highªp
.
	`£t
(
_≥nv
->
	`sf_desc
()->
	`maxsize
());

943 
tm1_sf_t
 
asf
;

944 
boﬁ
 
bFound
 = 
Ál£
;

945 
boﬁ
 
eof
;

953 #i‚de‡
TM1ICF2


954 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

958 
gu¨d
<
ödex_sˇn_ôî_im∂
<
•ecül_Ácûôy_t
> > 
sf_ôî
;

960 
ödex_sˇn_ôî_im∂
<
•ecül_Ácûôy_t
>* 
tmp_sf_ôî
;

961 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ICF:sf-idx-ôî-∆\n", 
_tid
.
	`gë_lo
());

962 
	`W_DO
(
_≥nv
->
	`sf_m™
()->
	`sf_gë_idx_ôî_∆
(_≥nv->
	`db
(), 
tmp_sf_ôî
, 
¥sf
,

963 
lowªp
, 
highªp
, 
_ö
.
_s_id
));

964 
sf_ôî
 = 
tmp_sf_ôî
;

966 
	`W_DO
(
sf_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥sf
));

968 !
eof
) {

969 #i‚de‡
TM1ICF2


970 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

973 
¥sf
->
	`gë_vÆue
(1, 
asf
.
SF_TYPE
);

975 i‡(
asf
.
SF_TYPE
 =
_ö
.
_sf_ty≥
) {

976 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICF: found (%d) (%d)\n",

977 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, 
asf
.
SF_TYPE
);

978 
bFound
 = 
åue
;

982 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ICF:sf-idx-ôî-√xt\n", 
_tid
.
	`gë_lo
());

983 
	`W_DO
(
sf_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥sf
));

986 i‡(!
bFound
) {

987 
	`W_DO
(
	`RC
(
£_NO_CURRENT_TUPLE
));

990 #ifde‡
PRINT_TRX_RESULTS


992 
¥sf
->
	`¥öt_tu∂e
();

995  
RCOK
;

996 
	}
}

1000 
	gös_cf_icf_a˘i⁄
::
	$ˇlc_keys
()

1002 
s·y≥
 = 
_ö
.
_sf_ty≥
;

1003 
°ime
 = 
_ö
.
_s_time
;

1004 
_down
.
	`push_back
(
_ö
.
_s_id
);

1005 
_down
.
	`push_back
(
s·y≥
);

1006 
_down
.
	`push_back
(
°ime
);

1007 
	}
}

1010 
w_rc_t
 
	gös_cf_icf_a˘i⁄
::
	$åx_exec
()

1012 
	`as£π
 (
_≥nv
);

1016 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_≥nv
->
	`cf_m™
());

1017 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cf_m™
()->
	`ts
());

1018 
¨ïrow
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

1019 
¥cf
->
_ªp
 = &
¨ïrow
;

1020 
ªp_row_t
 
	`¨ïrow_key
(
_≥nv
->
	`cf_m™
()->
	`ts
());

1021 
¨ïrow_key
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

1022 
¥cf
->
_ªp_key
 = &
¨ïrow_key
;

1025 
w_rc_t
 
e
;

1026 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICF:cf-idx-nl (%d) (%d) (%d)\n",

1027 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
, _ö.
_s_time
);

1028 #i‚de‡
TM1ICF2


1029 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

1031 
e
 = 
_≥nv
->
	`cf_m™
()->
	`cf_idx_∆
(_≥nv->
	`db
(), 
¥cf
, 
_ö
.
_s_id
,

1032 
_ö
.
_sf_ty≥
, _ö.
_s_time
);

1035 i‡(
e
.
	`is_îr‹
(Ë&&É.
	`îr_num
(Ë=
£_TUPLE_NOT_FOUND
) {

1037 
¥cf
->
	`£t_vÆue
(0, 
_ö
.
_s_id
);

1038 
¥cf
->
	`£t_vÆue
(1, 
_ö
.
_sf_ty≥
);

1039 
¥cf
->
	`£t_vÆue
(2, 
_ö
.
_s_time
);

1040 
¥cf
->
	`£t_vÆue
(3, 
_ö
.
_e_time
);

1041 
¥cf
->
	`£t_vÆue
(4, 
_ö
.
_numbîx
);

1042 #ifde‡
CFG_HACK


1043 
¥cf
->
	`£t_vÆue
(5, "padding");

1045 
	`TRACE
 (
TRACE_TRX_FLOW
, "Aµ: %d ICF:ös-cf\n", 
_tid
.
	`gë_lo
());

1046 #i‚de‡
TM1ICF2


1047 i‡(
_¥vp
->
	`isAb‹ãd
()Ë{ 
	`W_DO
(
	`RC
(
de_MIDWAY_ABORT
)); }

1049 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥cf
, 
NL
));

1052 
	`W_DO
(
	`RC
(
£_CANNOT_INSERT_TUPLE
));

1055 #ifde‡
PRINT_TRX_RESULTS


1057 
¥cf
->
	`¥öt_tu∂e
();

1060  
RCOK
;

1061 
	}
}

1075 
w_rc_t
 
	gmid_dcf_rvp
::
	$_run
()

1078 
föÆ_dcf_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_dcf_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

1081 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

1084 
dñ_cf_dcf_a˘i⁄
* 
dñ_cf
 = 
_≥nv
->
	`√w_dñ_cf_dcf_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

1086 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

1091 
úpIm∂
* 
my_cf_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`cf
(),
_ö
.
_s_id
);

1094 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

1095 i‡(
my_cf_∑π
->
	`íqueue
(
dñ_cf
,
_bWake
)) {

1096 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing DEL_CF_ICF\n");

1097 
	`as£π
 (0);

1098  (
	`RC
(
de_PROBLEM_ENQUEUE
));

1102  (
RCOK
);

1103 
	}
}

1106 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_dcf_rvp
,
dñ_ˇŒ_fwd
);

1119 
	gr_sub_dcf_a˘i⁄
::
	$ˇlc_keys
()

1121 
	`£t_ªad_⁄ly
();

1122 
_down
.
	`push_back
(
_ö
.
_s_id
);

1123 
	}
}

1126 
w_rc_t
 
	gr_sub_dcf_a˘i⁄
::
	$åx_exec
()

1128 
	`as£π
 (
_≥nv
);

1132 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

1133 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1134 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1135 
¥sub
->
_ªp
 = &
¨ïrow
;

1138 
	`TRACE
–
TRACE_TRX_FLOW
,

1139 "Aµ: %d DCF:sub-nbr-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

1140 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_nbr_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_sub_nbr
));

1141 
¥obed_sid
;

1142 
¥sub
->
	`gë_vÆue
(0, 
¥obed_sid
);

1143 i‡(
¥obed_sid
 !
_ö
.
_s_id
) {

1144 
	`TRACE
–
TRACE_ALWAYS
, "Probed sidÇot matching sid (%d) (%d) ***\n",

1145 
¥obed_sid
, 
_ö
.
_s_id
);

1146 
	`W_DO
(
	`RC
(
de_WRONG_IDX_DATA
));

1149 #ifde‡
PRINT_TRX_RESULTS


1151 
¥sub
->
	`¥öt_tu∂e
();

1154  
RCOK
;

1155 
	}
}

1159 
	gdñ_cf_dcf_a˘i⁄
::
	$ˇlc_keys
()

1161 
s·y≥
 = 
_ö
.
_sf_ty≥
;

1162 
°ime
 = 
_ö
.
_s_time
;

1163 
_down
.
	`push_back
(
_ö
.
_s_id
);

1164 
_down
.
	`push_back
(
s·y≥
);

1165 
_down
.
	`push_back
(
°ime
);

1166 
	}
}

1170 
w_rc_t
 
	gdñ_cf_dcf_a˘i⁄
::
	$åx_exec
()

1172 
	`as£π
 (
_≥nv
);

1176 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_≥nv
->
	`cf_m™
());

1177 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cf_m™
()->
	`ts
());

1178 
¨ïrow
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

1179 
¥cf
->
_ªp
 = &
¨ïrow
;

1190 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DCF:cf-idx-upd (%d) (%d) (%d)\n",

1191 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
, _ö.
_s_time
);

1192 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`cf_idx_∆
(_≥nv->
	`db
(), 
¥cf
,

1193 
_ö
.
_s_id
, _ö.
_sf_ty≥
, _ö.
_s_time
));

1194 
	`TRACE
 (
TRACE_TRX_FLOW
, "Aµ: %d DCF:dñ-cf\n", 
_tid
.
	`gë_lo
());

1195 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`dñëe_tu∂e
(_≥nv->
	`db
(), 
¥cf
, 
NL
));

1197 #ifde‡
PRINT_TRX_RESULTS


1199 
¥cf
->
	`¥öt_tu∂e
();

1202  
RCOK
;

1203 
	}
}

1216 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_icfb_rvp
,
ös_ˇŒ_fwd_bích
);

1229 
	gr_sub_icfb_a˘i⁄
::
	$ˇlc_keys
()

1231 
	`£t_ªad_⁄ly
();

1232 
_down
.
	`push_back
(
_ö
.
_s_id
);

1233 
	}
}

1236 
w_rc_t
 
	gr_sub_icfb_a˘i⁄
::
	$åx_exec
()

1238 
	`as£π
 (
_≥nv
);

1242 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

1243 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1244 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1245 
¥sub
->
_ªp
 = &
¨ïrow
;

1248 
	`TRACE
–
TRACE_TRX_FLOW
,

1249 "Aµ: %d ICF:sub-nbr-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
);

1250 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_nbr_idx_∆
(_≥nv->
	`db
(), 
¥sub
, 
_ö
.
_sub_nbr
));

1251 
¥sub
->
	`gë_vÆue
(0, 
_ö
.
_s_id
);

1253 #ifde‡
PRINT_TRX_RESULTS


1255 
¥sub
->
	`¥öt_tu∂e
();

1258  
RCOK
;

1259 
	}
}

1263 
	gi_cf_icfb_a˘i⁄
::
	$ˇlc_keys
()

1265 
s·y≥
 = 
_ö
.
_sf_ty≥
;

1266 
°ime
 = 
_ö
.
_s_time
;

1267 
_down
.
	`push_back
(
_ö
.
_s_id
);

1268 
_down
.
	`push_back
(
s·y≥
);

1269 
_down
.
	`push_back
(
°ime
);

1270 
	}
}

1273 
w_rc_t
 
	gi_cf_icfb_a˘i⁄
::
	$åx_exec
()

1275 
	`as£π
 (
_≥nv
);

1279 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_≥nv
->
	`cf_m™
());

1280 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cf_m™
()->
	`ts
());

1281 
¨ïrow
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

1282 
¥cf
->
_ªp
 = &
¨ïrow
;

1283 
ªp_row_t
 
	`¨ïrow_key
(
_≥nv
->
	`cf_m™
()->
	`ts
());

1284 
¨ïrow_key
.
	`£t
(
_≥nv
->
	`cf_desc
()->
	`maxsize
());

1285 
¥cf
->
_ªp_key
 = &
¨ïrow_key
;

1288 
w_rc_t
 
e
;

1289 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICFB:cf-idx-nl (%d) (%d) (%d)\n",

1290 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_sf_ty≥
, _ö.
_s_time
);

1291 
e
 = 
_≥nv
->
	`cf_m™
()->
	`cf_idx_∆
(_≥nv->
	`db
(), 
¥cf
,

1292 
_ö
.
_s_id
, _ö.
_sf_ty≥
, _ö.
_s_time
);

1294 i‡(
e
.
	`is_îr‹
(Ë&&É.
	`îr_num
(Ë=
£_TUPLE_NOT_FOUND
) {

1296 
¥cf
->
	`£t_vÆue
(0, 
_ö
.
_s_id
);

1297 
¥cf
->
	`£t_vÆue
(1, 
_ö
.
_sf_ty≥
);

1298 
¥cf
->
	`£t_vÆue
(2, 
_ö
.
_s_time
);

1299 
¥cf
->
	`£t_vÆue
(3, 
_ö
.
_e_time
);

1300 
¥cf
->
	`£t_vÆue
(4, 
_ö
.
_numbîx
);

1301 #ifde‡
CFG_HACK


1302 
¥cf
->
	`£t_vÆue
(5, "padding");

1304 
	`TRACE
 (
TRACE_TRX_FLOW
, "Aµ: %d ICFB:ös-cf\n", 
_tid
.
	`gë_lo
());

1305 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥cf
, 
NL
));

1307 if(
e
.
	`is_îr‹
()Ë{ 
	`W_DO
(e); }

1308 
	`TRACE
 (
TRACE_TRX_FLOW
, "Aµ: %d ICFB:dñ-cf\n", 
_tid
.
	`gë_lo
());

1309 
	`W_DO
(
_≥nv
->
	`cf_m™
()->
	`dñëe_tu∂e
(_≥nv->
	`db
(), 
¥cf
, 
NL
));

1312 #ifde‡
PRINT_TRX_RESULTS


1314 
¥cf
->
	`¥öt_tu∂e
();

1317  
RCOK
;

1318 
	}
}

1332 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_g¢_rvp
,
gë_sub_nbr
);

1348 #i‚de‡
USE_DORA_EXT_IDX


1349 
	gr_sub_g¢_a˘i⁄
::
	$ˇlc_keys
()

1352 
	`£t_ªad_⁄ly
();

1355 
	`£t_is_ønge
();

1358 
_key_li°
.
	`ª£rve
(
_ö
.
_ønge
);

1359 
sid
;

1360 
uöt
 
i
=0; i<
_ö
.
_ønge
; i++) {

1361 
ønge_a˘i⁄_im∂
<>::
Key
 
aKey
;

1362 
sid
 = 
_ö
.
_s_id
 + 
i
;

1363 
aKey
.
	`push_back
(
sid
);

1364 
ønge_a˘i⁄_im∂
<>::
_key_li°
.
	`push_back
(
aKey
);

1371 #w¨nög 
Look
 
©
 
lock_m™_t
::
	`acquúe_Æl
() !!!

1372 
	}
}

1374 
w_rc_t
 
	gr_sub_g¢_a˘i⁄
::
	$åx_exec
()

1376 
	`as£π
 (
_≥nv
);

1380 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

1381 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1382 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1383 
¥sub
->
_ªp
 = &
¨ïrow
;

1384 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1385 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1386 
lowªp
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1387 
highªp
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1389 
boﬁ
 
eof
;

1390 
sid
, 
vÃloc
;

1401 
gu¨d
<
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
> > 
sub_ôî
;

1403 
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
>* 
tmp_sub_ôî
;

1404 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:sub-nbr-idx-iter (%d) (%d)\n",

1405 
_tid
.
	`gë_lo
(), 
_ö
.
_s_id
, _ö.
_ønge
);

1406 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`sub_gë_idx_ôî
(_≥nv->
	`db
(), 
tmp_sub_ôî
, 
¥sub
,

1407 
lowªp
,
highªp
, 
_ö
.
_s_id
,

1408 
_ö
.
_ønge
, 
NL
, 
åue
));

1409 
sub_ôî
 = 
tmp_sub_ôî
;

1413 
	`W_DO
(
sub_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥sub
));

1414 !
eof
) {

1415 
¥sub
->
	`gë_vÆue
(0, 
sid
);

1416 
¥sub
->
	`gë_vÆue
(33, 
vÃloc
);

1417 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:Ñead (%d) (%d)\n",

1418 
_tid
.
	`gë_lo
(), 
sid
, 
vÃloc
);

1419 
	`W_DO
(
sub_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥sub
));

1422  
RCOK
;

1423 
	}
}

1427 
	gr_sub_g¢_acc_a˘i⁄
::
	$ˇlc_keys
()

1429 
	`£t_ªad_⁄ly
();

1430 
	`£t_£c⁄d¨y
();

1434 
	`£t_is_ønge
();

1435 
_key_li°
.
	`ª£rve
(
_ö
.
_∑ús
.
	`size
());

1436 
ve˘‹
< 
	t∑ú
<,
	trid_t
> >::
	tôî©‹
 
	t∑ú_ôî©‹
;

1437 
∑ú_ôî©‹
 
ô
=
_ö
.
_∑ús
.
	`begö
(); it!=_ö._∑ús.
	`íd
(); it++) {

1438 
ønge_a˘i⁄_im∂
<>::
Key
 
aKey
;

1439 
aKey
.
	`push_back
((*
ô
).
fú°
);

1440 
ønge_a˘i⁄_im∂
<>::
_key_li°
.
	`push_back
(
aKey
);

1442 
	}
}

1445 
w_rc_t
 
	gr_sub_g¢_acc_a˘i⁄
::
	$åx_exec
()

1447 
	`as£π
 (
_≥nv
);

1451 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_≥nv
->
	`sub_m™
());

1452 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`sub_m™
()->
	`ts
());

1453 
¨ïrow
.
	`£t
(
_≥nv
->
	`sub_desc
()->
	`maxsize
());

1454 
¥sub
->
_ªp
 = &
¨ïrow
;

1455 
vÃloc
;

1457 
ve˘‹
< 
	t∑ú
<,
	trid_t
> >::
	tôî©‹
 
	t∑ú_ôî©‹
;

1458 
rid_t
 
¨id
;

1459 
∑ú_ôî©‹
 
ô
=
_ö
.
_∑ús
.
	`begö
(); it!=_ö._∑ús.
	`íd
(); it++) {

1460 
¨id
 = (*
ô
).
£c⁄d
;

1463 
¥sub
->
	`£t_rid
(
¨id
);

1464 
	`W_DO
(
_≥nv
->
	`sub_m™
()->
	`ªad_tu∂e
(
¥sub
,
NL
));

1465 
¥sub
->
	`gë_vÆue
(33, 
vÃloc
);

1467 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:Ñead (%d) (%d)\n",

1468 
_tid
.
	`gë_lo
(), (*
ô
).
fú°
, 
vÃloc
);

1471  
RCOK
;

1472 
	}
}

1477 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tm1/dora_tm1_xct.cpp

32 
	~"d‹a/tm1/d‹a_tm1_im∂.h
"

33 
	~"d‹a/tm1/d‹a_tm1.h
"

35 
	~<Æg‹ôhm
>

36 
	~<li°
>

37 
	~<utûôy
>

39 
usög
 
«me•a˚
 
	gsh‹e
;

40 
usög
 
«me•a˚
 
	gtm1
;

42 
usög
 
«me•a˚
 
	g°d
;

44 
ENTER_NAMESPACE
(
d‹a
);

46 
	g∑πôi⁄_t
<> 
	túpIm∂
;

82 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
gë_sub_d©a
);

83 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
gë_√w_de°
);

84 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
gë_acc_d©a
);

85 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
upd_sub_d©a
);

86 
DEFINE_ALTER_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
upd_sub_d©a
,
upd_sub_d©a_mix
);

87 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
upd_loc
);

88 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
ös_ˇŒ_fwd
);

89 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
dñ_ˇŒ_fwd
);

91 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
gë_sub_nbr
);

93 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTM1Env
,
ös_ˇŒ_fwd_bích
);

104 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_sub_d©a
(c⁄° 
x˘_id
,

105 
åx_ªsu…_tu∂e_t
& 
©π
,

106 
gë_sub_d©a_öput_t
& 
ö
,

107 c⁄° 
boﬁ
 
bWake
)

109 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

110 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

111 if(!
_bAœrmSë
) {

112 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

113 
_bAœrmSë
 = 
åue
;

118 
tid_t
 
©id
;

120 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

121 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

123 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

126 
	`as£π
 (
px˘
);

127 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

128 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

131 
föÆ_gsd_rvp
* 
‰vp
 = 
	`√w_föÆ_gsd_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

134 
r_sub_gsd_a˘i⁄
* 
r_sub
 = 
	`√w_r_sub_gsd_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

140 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

141 
	`as£π
 (
my_sub_∑π
);

144 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

145 i‡(
my_sub_∑π
->
	`íqueue
(
r_sub
,
bWake
)) {

146 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_GSD\n");

147 
	`as£π
 (0);

148  (
	`RC
(
de_PROBLEM_ENQUEUE
));

152  (
RCOK
);

153 
	}
}

162 #ifde‡
TM1GND2


164 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_√w_de°
(c⁄° 
x˘_id
,

165 
åx_ªsu…_tu∂e_t
& 
©π
,

166 
gë_√w_de°_öput_t
& 
ö
,

167 c⁄° 
boﬁ
 
bWake
)

169 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

170 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

171 if(!
_bAœrmSë
) {

172 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

173 
_bAœrmSë
 = 
åue
;

178 
tid_t
 
©id
;

180 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

181 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

183 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

186 
	`as£π
 (
px˘
);

187 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

188 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

192 
mid_gnd_rvp
* 
rvp
 = 
	`√w_mid_gnd_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

195 
r_sf_gnd_a˘i⁄
* 
r_sf
 = 
	`√w_r_sf_gnd_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

200 
úpIm∂
* 
my_sf_∑π
 = 
	`decide_∑π
(
	`sf
(),
ö
.
_s_id
);

203 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

204 i‡(
my_sf_∑π
->
	`íqueue
(
r_sf
,
bWake
)) {

205 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SF\n");

206 
	`as£π
 (0);

207  (
	`RC
(
de_PROBLEM_ENQUEUE
));

210  (
RCOK
);

211 
	}
}

215 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_√w_de°
(c⁄° 
x˘_id
,

216 
åx_ªsu…_tu∂e_t
& 
©π
,

217 
gë_√w_de°_öput_t
& 
ö
,

218 c⁄° 
boﬁ
 
bWake
)

220 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

221 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

222 if(!
_bAœrmSë
) {

223 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

224 
_bAœrmSë
 = 
åue
;

229 
tid_t
 
©id
;

231 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

232 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
);

234 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

237 
	`as£π
 (
px˘
);

238 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

239 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
);

242 
föÆ_gnd_rvp
* 
‰vp
 = 
	`√w_föÆ_gnd_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

245 
r_sf_gnd_a˘i⁄
* 
r_sf
 = 
	`√w_r_sf_gnd_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

246 
r_cf_gnd_a˘i⁄
* 
r_cf
 = 
	`√w_r_cf_gnd_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

252 
úpIm∂
* 
my_sf_∑π
 = 
	`decide_∑π
(
	`sf
(),
ö
.
_s_id
);

253 
úpIm∂
* 
my_cf_∑π
 = 
	`decide_∑π
(
	`cf
(),
ö
.
_s_id
);

256 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

257 i‡(
my_sf_∑π
->
	`íqueue
(
r_sf
,
bWake
)) {

258 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SF\n");

259 
	`as£π
 (0);

260  (
	`RC
(
de_PROBLEM_ENQUEUE
));

264 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

265 
sf_∑π_cs
.
	`exô
();

266 i‡(
my_cf_∑π
->
	`íqueue
(
r_cf
,
bWake
)) {

267 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_CF\n");

268 
	`as£π
 (0);

269  (
	`RC
(
de_PROBLEM_ENQUEUE
));

273  (
RCOK
);

274 
	}
}

285 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_acc_d©a
(c⁄° 
x˘_id
,

286 
åx_ªsu…_tu∂e_t
& 
©π
,

287 
gë_acc_d©a_öput_t
& 
ö
,

288 c⁄° 
boﬁ
 
bWake
)

290 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

291 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

292 if(!
_bAœrmSë
) {

293 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

294 
_bAœrmSë
 = 
åue
;

299 
tid_t
 
©id
;

301 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

302 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

304 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

307 
	`as£π
 (
px˘
);

308 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

309 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

312 
föÆ_gad_rvp
* 
‰vp
 = 
	`√w_föÆ_gad_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

315 
r_ai_gad_a˘i⁄
* 
r_ai
 = 
	`√w_r_ai_gad_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

321 
úpIm∂
* 
my_ai_∑π
 = 
	`decide_∑π
(
	`ai
(),
ö
.
_s_id
);

324 
	`CRITICAL_SECTION
(
ai_∑π_cs
, 
my_ai_∑π
->
_íqueue_lock
);

325 i‡(
my_ai_∑π
->
	`íqueue
(
r_ai
,
bWake
)) {

326 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_AI_GAD\n");

327 
	`as£π
 (0);

328  (
	`RC
(
de_PROBLEM_ENQUEUE
));

332  (
RCOK
);

333 
	}
}

342 #ifde‡
TM1USD2


344 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_upd_sub_d©a
(c⁄° 
x˘_id
,

345 
åx_ªsu…_tu∂e_t
& 
©π
,

346 
upd_sub_d©a_öput_t
& 
ö
,

347 c⁄° 
boﬁ
 
bWake
)

349 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

350 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

351 if(!
_bAœrmSë
) {

352 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

353 
_bAœrmSë
 = 
åue
;

358 
tid_t
 
©id
;

360 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

361 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

363 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

366 
	`as£π
 (
px˘
);

367 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

368 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

372 
mid_usd_rvp
* 
rvp
 = 
	`√w_mid_usd_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

375 
upd_sf_usd_a˘i⁄
* 
upd_sf
 = 
	`√w_upd_sf_usd_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

380 
úpIm∂
* 
my_sf_∑π
 = 
	`decide_∑π
(
	`sf
(),
ö
.
_s_id
);

383 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

384 i‡(
my_sf_∑π
->
	`íqueue
(
upd_sf
,
bWake
)) {

385 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SF\n");

386 
	`as£π
 (0);

387  (
	`RC
(
de_PROBLEM_ENQUEUE
));

390  (
RCOK
);

391 
	}
}

396 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_upd_sub_d©a
(c⁄° 
x˘_id
,

397 
åx_ªsu…_tu∂e_t
& 
©π
,

398 
upd_sub_d©a_öput_t
& 
ö
,

399 c⁄° 
boﬁ
 
bWake
)

401 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

402 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

403 if(!
_bAœrmSë
) {

404 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

405 
_bAœrmSë
 = 
åue
;

410 
tid_t
 
©id
;

412 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

413 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
);

415 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

418 
	`as£π
 (
px˘
);

419 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

420 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
);

423 
föÆ_usd_rvp
* 
‰vp
 = 
	`√w_föÆ_usd_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

426 
upd_sub_usd_a˘i⁄
* 
upd_sub
 = 
	`√w_upd_sub_usd_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

427 
upd_sf_usd_a˘i⁄
* 
upd_sf
 = 
	`√w_upd_sf_usd_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

433 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

434 
úpIm∂
* 
my_sf_∑π
 = 
	`decide_∑π
(
	`sf
(),
ö
.
_s_id
);

437 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

438 i‡(
my_sub_∑π
->
	`íqueue
(
upd_sub
,
bWake
)) {

439 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SUB\n");

440 
	`as£π
 (0);

441  (
	`RC
(
de_PROBLEM_ENQUEUE
));

445 
	`CRITICAL_SECTION
(
sf_∑π_cs
, 
my_sf_∑π
->
_íqueue_lock
);

446 
sub_∑π_cs
.
	`exô
();

447 i‡(
my_sf_∑π
->
	`íqueue
(
upd_sf
,
bWake
)) {

448 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SF\n");

449 
	`as£π
 (0);

450  (
	`RC
(
de_PROBLEM_ENQUEUE
));

454  (
RCOK
);

455 
	}
}

466 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_upd_sub_d©a_mix
(c⁄° 
x˘_id
,

467 
åx_ªsu…_tu∂e_t
& 
©π
,

468 
upd_sub_d©a_öput_t
& 
ö
,

469 c⁄° 
boﬁ
 
bWake
)

471 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

472 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

473 if(!
_bAœrmSë
) {

474 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

475 
_bAœrmSë
 = 
åue
;

480 
tid_t
 
©id
;

482 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

483 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

485 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

488 
	`as£π
 (
px˘
);

489 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

490 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

494 
mid_usdmix_rvp
* 
rvp
 = 
	`√w_mid_usdmix_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

497 
upd_sub_usdmix_a˘i⁄
* 
upd_sub
 = 
	`√w_upd_sub_usdmix_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

502 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

505 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

506 i‡(
my_sub_∑π
->
	`íqueue
(
upd_sub
,
bWake
)) {

507 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SUB\n");

508 
	`as£π
 (0);

509  (
	`RC
(
de_PROBLEM_ENQUEUE
));

512  (
RCOK
);

513 
	}
}

522 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_upd_loc
(c⁄° 
x˘_id
,

523 
åx_ªsu…_tu∂e_t
& 
©π
,

524 
upd_loc_öput_t
& 
ö
,

525 c⁄° 
boﬁ
 
bWake
)

527 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

528 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

529 if(!
_bAœrmSë
) {

530 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

531 
_bAœrmSë
 = 
åue
;

536 
tid_t
 
©id
;

538 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

539 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

541 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

544 
	`as£π
 (
px˘
);

545 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

546 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

549 
föÆ_ul_rvp
* 
‰vp
 = 
	`√w_föÆ_ul_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

552 
upd_sub_ul_a˘i⁄
* 
upd_sub
 = 
	`√w_upd_sub_ul_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

558 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

561 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

562 i‡(
my_sub_∑π
->
	`íqueue
(
upd_sub
,
bWake
)) {

563 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_SUB_UL\n");

564 
	`as£π
 (0);

565  (
	`RC
(
de_PROBLEM_ENQUEUE
));

569  (
RCOK
);

570 
	}
}

580 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_ös_ˇŒ_fwd
(c⁄° 
x˘_id
,

581 
åx_ªsu…_tu∂e_t
& 
©π
,

582 
ös_ˇŒ_fwd_öput_t
& 
ö
,

583 c⁄° 
boﬁ
 
bWake
)

585 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

586 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

587 if(!
_bAœrmSë
) {

588 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

589 
_bAœrmSë
 = 
åue
;

594 
tid_t
 
©id
;

596 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

597 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

599 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

602 
	`as£π
 (
px˘
);

603 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

604 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

608 #ifde‡
TM1ICF2


609 
mid1_icf_rvp
* 
rvp
 = 
	`√w_mid1_icf_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

611 
mid_icf_rvp
* 
rvp
 = 
	`√w_mid_icf_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

615 
r_sub_icf_a˘i⁄
* 
r_sub
 = 
	`√w_r_sub_icf_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

620 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

623 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

624 i‡(
my_sub_∑π
->
	`íqueue
(
r_sub
,
bWake
)) {

625 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_ICF\n");

626 
	`as£π
 (0);

627  (
	`RC
(
de_PROBLEM_ENQUEUE
));

630  (
RCOK
);

631 
	}
}

640 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_dñ_ˇŒ_fwd
(c⁄° 
x˘_id
,

641 
åx_ªsu…_tu∂e_t
& 
©π
,

642 
dñ_ˇŒ_fwd_öput_t
& 
ö
,

643 c⁄° 
boﬁ
 
bWake
)

645 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

646 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

647 if(!
_bAœrmSë
) {

648 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

649 
_bAœrmSë
 = 
åue
;

654 
tid_t
 
©id
;

656 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

657 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

659 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

662 
	`as£π
 (
px˘
);

663 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

664 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

668 
mid_dcf_rvp
* 
rvp
 = 
	`√w_mid_dcf_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
ö
,
bWake
);

671 
r_sub_dcf_a˘i⁄
* 
r_sub
 = 
	`√w_r_sub_dcf_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

676 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

679 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

680 i‡(
my_sub_∑π
->
	`íqueue
(
r_sub
,
bWake
)) {

681 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_DCF\n");

682 
	`as£π
 (0);

683  (
	`RC
(
de_PROBLEM_ENQUEUE
));

687  (
RCOK
);

688 
	}
}

698 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_ös_ˇŒ_fwd_bích
(c⁄° 
x˘_id
,

699 
åx_ªsu…_tu∂e_t
& 
©π
,

700 
ös_ˇŒ_fwd_bích_öput_t
& 
ö
,

701 c⁄° 
boﬁ
 
bWake
)

704 
tid_t
 
©id
;

706 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

707 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

709 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

712 
	`as£π
 (
px˘
);

713 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

714 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

718 
föÆ_icfb_rvp
* 
rvp
 = 
	`√w_föÆ_icfb_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

721 
r_sub_icfb_a˘i⁄
* 
r_sub
 = 
	`√w_r_sub_icfb_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

722 
i_cf_icfb_a˘i⁄
* 
i_cf
 = 
	`√w_i_cf_icfb_a˘i⁄
(
px˘
,
©id
,
rvp
,
ö
);

727 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

728 
úpIm∂
* 
my_cf_∑π
 = 
	`decide_∑π
(
	`cf
(),
ö
.
_s_id
);

731 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

732 i‡(
my_sub_∑π
->
	`íqueue
(
r_sub
,
bWake
)) {

733 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_ICFB\n");

734 
	`as£π
 (0);

735  (
	`RC
(
de_PROBLEM_ENQUEUE
));

739 
	`CRITICAL_SECTION
(
cf_∑π_cs
, 
my_cf_∑π
->
_íqueue_lock
);

740 
sub_∑π_cs
.
	`exô
();

741 i‡(
my_cf_∑π
->
	`íqueue
(
i_cf
,
bWake
)) {

742 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing I_CF_ICFB\n");

743 
	`as£π
 (0);

744  (
	`RC
(
de_PROBLEM_ENQUEUE
));

748  (
RCOK
);

749 
	}
}

772 #i‚de‡
USE_DORA_EXT_IDX


776 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_sub_nbr
(c⁄° 
x˘_id
,

777 
åx_ªsu…_tu∂e_t
& 
©π
,

778 
gë_sub_nbr_öput_t
& 
ö
,

779 c⁄° 
boﬁ
 
bWake
)

781 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

782 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

783 if(!
_bAœrmSë
) {

784 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

785 
_bAœrmSë
 = 
åue
;

790 
tid_t
 
©id
;

792 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

793 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

795 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

798 
	`as£π
 (
px˘
);

799 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

800 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

804 
uöt
 
öå©rx
 = 1;

805 
öR™ge
 = 
	`gë_ªc_to_ac˚ss
();

806 
À·
 = 
TM1_SUBS_PER_SF
 - (
ö
.
_s_id
 % TM1_SUBS_PER_SF);

807 
ve˘‹
<
uöt
> 
øngeVec
;

809 
øngeVec
.
	`push_back
(
°d
::
	`mö
(
À·
,
öR™ge
));

810 
öR™ge
 -
À·
;

812 
uöt
 
°¨t
 = 
ö
.
_s_id
 + 
À·
;

813 
uöt
 
°ï
 = 0;

815 (
öR™ge
 > 0Ë&& (
°¨t
<
TM1_SUBS_PER_SF
*
_sˇlög_Á˘‹
)) {

816 
°ï
 = 
°d
::
	`mö
(
öR™ge
,
TM1_SUBS_PER_SF
);

817 
øngeVec
.
	`push_back
(
°ï
);

818 
öå©rx
++;

819 
öR™ge
 -
TM1_SUBS_PER_SF
;

820 
°¨t
 +
°ï
;

824 
föÆ_g¢_rvp
* 
‰vp
 = 
	`√w_föÆ_g¢_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
öå©rx
);

827 
ve˘‹
<
uöt
>::
ôî©‹
 
vô
 = 
øngeVec
.
	`begö
(); vô <Ñ™geVec.
	`íd
(); vit++) {

828 
ö
.
_ønge
 = *
vô
;

829 
r_sub_g¢_a˘i⁄
* 
r_sub
 = 
	`√w_r_sub_g¢_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

833 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
ö
.
_s_id
);

836 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

837 i‡(
my_sub_∑π
->
	`íqueue
(
r_sub
,
bWake
)) {

838 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_GSN\n");

839 
	`as£π
 (0);

840  (
	`RC
(
de_PROBLEM_ENQUEUE
));

846 
ö
.
_s_id
 +*
vô
;

853  (
RCOK
);

854 
	}
}

858 
boﬁ
 
com∑ª_∑ús
–
∑ú
<,
rid_t
> 
fú°
,Öaú<,rid_t> 
£c⁄d
 )

860  (
	gfú°
.fú° < 
	g£c⁄d
.first);

863 
¥öt_∑ú
(c⁄° 
∑ú
<,
rid_t
>& 
aPaú
)

865 
	gcout
 << 
	gaPaú
.
	gfú°
 << " - " <<áPaú.
	g£c⁄d
 << 
	gídl
;

871 
w_rc_t
 
	gD‹aTM1Env
::
	$d‹a_gë_sub_nbr
(c⁄° 
x˘_id
,

872 
åx_ªsu…_tu∂e_t
& 
©π
,

873 
gë_sub_nbr_öput_t
& 
ö
,

874 c⁄° 
boﬁ
 
bWake
)

876 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

877 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

878 if(!
_bAœrmSë
) {

879 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

880 
_bAœrmSë
 = 
åue
;

885 
w_rc_t
 
e
 = 
RCOK
;

886 
tid_t
 
©id
;

887 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

888 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

889 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

893 
ö
.
_ønge
 = 
	`gë_ªc_to_ac˚ss
();

894 
li°
< 
∑ú
<,
rid_t
> > 
subsFound
;

895 
sid
;

896 
rid_t
 
rid
;

900 
èbÀ_row_t
* 
¥sub
 = 
_psub_m™
->
	`gë_tu∂e
();

901 
	`as£π
 (
¥sub
);

903 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

904 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

905 
¥sub
->
_ªp
 = &
¨ïrow
;

907 
ªp_row_t
 
	`lowªp
(
_psub_m™
->
	`ts
());

908 
ªp_row_t
 
	`highªp
(
_psub_m™
->
	`ts
());

909 
lowªp
.
	`£t
(
_psub_desc
->
	`maxsize
());

910 
highªp
.
	`£t
(
_psub_desc
->
	`maxsize
());

912 
boﬁ
 
eof
;

926 
gu¨d
<
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
> > 
sub_ôî
;

928 
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
>* 
tmp_sub_ôî
;

929 
	`TRACE
–
TRACE_TRX_FLOW
,

931 
©id
.
	`gë_lo
(), 
ö
.
_s_id
, in.
_ønge
);

934 
e
 = 
_psub_m™
->
	`sub_gë_idx_ôî
(
_pssm
, 
tmp_sub_ôî
, 
¥sub
,

935 
lowªp
,
highªp
,

936 
ö
.
_s_id
, in.
_ønge
,

937 
SH
, 
Ál£
);

938 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

939 
sub_ôî
 = 
tmp_sub_ôî
;

943 
e
 = 
sub_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sub
);

944 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

946 !
eof
) {

950 
¥sub
->
	`gë_vÆue
(0, 
sid
);

951 
rid
 = 
¥sub
->
	`rid
();

952 
subsFound
.
	`push_back
–
	`make_∑ú
–
sid
, 
rid
 ) );

954 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:Ñead (%d)\n",

955 
©id
.
	`gë_lo
(), 
sid
);

957 
e
 = 
sub_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sub
);

958 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

962 
d⁄e
:

964 
_psub_m™
->
	`give_tu∂e
(
¥sub
);

965 i‡(
e
.
	`is_îr‹
()) {  (e); }

970 
	`as£π
 (
px˘
);

971 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

972 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

977 i‡(
subsFound
.
	`em±y
()) {

978 
	`TRACE
–
TRACE_DEBUG
, "IndexÖrobe didn'tÑeturnányÑecord\n");

979  (
	`RC
(
£_NO_CURRENT_TUPLE
));

984 
subsFound
.
	`s‹t
(
com∑ª_∑ús
);

989 
°¨t
 = 
subsFound
.
	`‰⁄t
().
fú°
;

990 
uöt
 
öå©rx
 = 1;

991 
√xtBound
 = 
°¨t
 + (
TM1_SUBS_PER_SF
 - (start % TM1_SUBS_PER_SF));

992 
ö
.
_∑ús
.
	`˛ór
();

994 
föÆ_g¢_rvp
* 
‰vp
 = 
	`√w_föÆ_g¢_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
öå©rx
);

995 
ve˘‹
<
r_sub_g¢_acc_a˘i⁄
*> 
vecA˘i⁄s
;

997 
li°
< 
	t∑ú
<,
	trid_t
> >::
	tôî©‹
 
	t∑ú_ôî©‹
;

998 
∑ú_ôî©‹
 
ô
=
subsFound
.
	`begö
(); it!=subsFound.
	`íd
(); it++) {

999 
sid
 = (*
ô
).
fú°
;

1000 
rid
 = (*
ô
).
£c⁄d
;

1004 i‡–
sid
 >
√xtBound
 ) {

1005 
√xtBound
 +
TM1_SUBS_PER_SF
;

1006 
vecA˘i⁄s
.
	`push_back
–
	`√w_r_sub_g¢_acc_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
) );

1007 
ö
.
_∑ús
.
	`˛ór
();

1008 ++
öå©rx
;

1011 
ö
.
_∑ús
.
	`push_back
–
	`make_∑ú
(
sid
, 
rid
) );

1015 i‡(!
ö
.
_∑ús
.
	`em±y
()) {

1016 
vecA˘i⁄s
.
	`push_back
–
	`√w_r_sub_g¢_acc_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
) );

1020 
‰vp
->
	`ªsize
(
öå©rx
,intratrx);

1023 
ve˘‹
<
	tr_sub_g¢_acc_a˘i⁄
*>::
	tôî©‹
 
	ta˘i⁄_ôî©‹
;

1024 
r_sub_g¢_acc_a˘i⁄
* 
∑
 = 
NULL
;

1025 
a˘i⁄_ôî©‹
 
aô
=
vecA˘i⁄s
.
	`begö
();áô!=vecA˘i⁄s.
	`íd
();áit++) {

1026 
∑
 = *
aô
;

1027 
sid
 = 
∑
->
_ö
.
_∑ús
.
	`back
().
fú°
;

1031 
úpIm∂
* 
my_sub_∑π
 = 
	`decide_∑π
(
	`sub
(),
sid
);

1034 
	`CRITICAL_SECTION
(
sub_∑π_cs
, 
my_sub_∑π
->
_íqueue_lock
);

1035 i‡(
my_sub_∑π
->
	`íqueue
(
∑
,
bWake
)) {

1036 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_SUB_GSN\n");

1037 
	`as£π
 (0);

1038  (
	`RC
(
de_PROBLEM_ENQUEUE
));

1043  (
e
);

1044 
	}
}

1047 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcb/dora_tpcb.cpp

32 
	~"és.h
"

34 
	~"d‹a/çcb/d‹a_çcb.h
"

35 
	~"d‹a/çcb/d‹a_çcb_im∂.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gçcb
;

41 
ENTER_NAMESPACE
(
d‹a
);

46 c⁄° 
uöt
 
	gbr_IRP_KEY
 = 1;

47 c⁄° 
uöt
 
	gã_IRP_KEY
 = 1;

48 c⁄° 
uöt
 
	gac_IRP_KEY
 = 1;

49 c⁄° 
uöt
 
	ghi_IRP_KEY
 = 1;

52 c⁄° 
uöt
 
	gbr_KEY_EST
 = 100;

53 c⁄° 
uöt
 
	gã_KEY_EST
 = 100;

54 c⁄° 
uöt
 
	gac_KEY_EST
 = 100;

55 c⁄° 
uöt
 
	ghi_KEY_EST
 = 100;

68 
	gD‹aTPCBEnv
::
	$D‹aTPCBEnv
()

69 : 
	$Sh‹eTPCBEnv
()

71 
	`upd©e_pd
(
this
);

72 
	}
}

74 
	gD‹aTPCBEnv
::~
	$D‹aTPCBEnv
()

76 
	`°›
();

77 
	}
}

94 
	gD‹aTPCBEnv
::
	$°¨t
()

100 
	`c⁄f
();

101 
¥o˚ss‹id_t
 
	`i˝u
(
_°¨tög_˝u
);

104 
	`GENERATE_DORA_PARTS
(
br
,
bønch
);

107 
	`GENERATE_DORA_PARTS
(
ã
,
ãŒî
);

110 
	`GENERATE_DORA_PARTS
(
ac
,
accou¡
);

113 
	`GENERATE_DORA_PARTS
(
hi
,
hi°‹y
);

116 
D‹aEnv
::
	`_po°_°¨t
(
this
);

118 
	}
}

130 
w_rc_t
 
	gD‹aTPCBEnv
::
	$upd©e_∑πôi⁄ög
()

135 
	`c⁄f
();

138 
möKeyVÆ
 = 0;

139 
maxKeyVÆ
 = 
	`gë_sf
();

141 * 
möKey
 = (*)
	`mÆloc
(());

142 
	`mem£t
(
möKey
,0,());

143 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

145 * 
maxKey
 = (*)
	`mÆloc
(());

146 
	`mem£t
(
maxKey
,0,());

147 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

150 
_pbønch_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_br
);

154 
maxKeyVÆ
 = (
	`gë_sf
()*
TPCB_TELLERS_PER_BRANCH
);

155 
	`mem£t
(
maxKey
,0,());

156 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

157 
_±ñÀr_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_ã
);

160 
_phi°‹y_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_hi
);

163 
maxKeyVÆ
 = (
	`gë_sf
()*
TPCB_ACCOUNTS_PER_BRANCH
);

164 
	`mem£t
(
maxKey
,0,());

165 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

166 
_∑ccou¡_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_ac
);

168 
	`‰ì
 (
möKey
);

169 
	`‰ì
 (
maxKey
);

171  (
RCOK
);

172 
	}
}

186 
	gD‹aTPCBEnv
::
	$°›
()

189  (
D‹aEnv
::
	`_po°_°›
(
this
));

190 
	}
}

201 
	gD‹aTPCBEnv
::
	$ªsume
()

203 
	`as£π
 (0);

204 
	`£t_dbc
(
DBC_ACTIVE
);

206 
	}
}

218 
	gD‹aTPCBEnv
::
	$∑u£
()

220 
	`as£π
 (0);

221 
	`£t_dbc
(
DBC_PAUSED
);

223 
	}
}

235 
	gD‹aTPCBEnv
::
	$c⁄f
()

237 
Sh‹eTPCBEnv
::
	`c⁄f
();

238 
	`_check_ty≥
();

239 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

242 
_˝u_ønge
 = 
	`gë_a˘ive_˝u_cou¡
();

243 
_°¨tög_˝u
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-°¨tög",
DF_CPU_STEP_PARTITIONS
);

244 
_˝u_èbÀ_°ï
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-èbÀ-°ï",
DF_CPU_STEP_TABLES
);

255 
uöt
 
ªc‹dE°im©i⁄
 = 
	`gë_sf
();

256 
br_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcb-br",1);

257 
_∑πs_br
 = ( 
br_PîCPU
>0 ? 
	`˚û
(
_˝u_ønge
 * br_PerCPU) : 1);

258 
_∑πs_br
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_br);

261 
ªc‹dE°im©i⁄
 = 
	`gë_sf
()*
TPCB_TELLERS_PER_BRANCH
;

262 
ã_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcb-te",1);

263 
_∑πs_ã
 = ( 
ã_PîCPU
>0 ? 
	`˚û
(
_˝u_ønge
 *Åe_PerCPU) : 1);

264 
_∑πs_ã
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_te);

267 
ªc‹dE°im©i⁄
 = 
	`gë_sf
()*
TPCB_ACCOUNTS_PER_BRANCH
;

268 
ac_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcb-ac",1);

269 
_∑πs_ac
 = ( 
ac_PîCPU
>0 ? 
	`˚û
(
_˝u_ønge
 *ác_PerCPU) : 1);

270 
_∑πs_ac
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_ac);

274 
ªc‹dE°im©i⁄
 = 
	`gë_sf
()*
TPCB_TELLERS_PER_BRANCH
;

275 
hi_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcb-hi",1);

276 
_∑πs_hi
 = ( 
hi_PîCPU
>0 ? 
	`˚û
(
_˝u_ønge
 * hi_PerCPU) : 1);

278 
	`TRACE
–
TRACE_STATISTICS
,"TotalÇumber ofÖartitions (%d)\n",

279 (
_∑πs_br
+
_∑πs_ã
+
_∑πs_ac
+
_∑πs_hi
));

282 
	}
}

296 
w_rc_t
 
	gD‹aTPCBEnv
::
	$√wrun
()

298  (
D‹aEnv
::
	`_√wrun
(
this
));

299 
	}
}

310 
	gD‹aTPCBEnv
::
	$dump
()

312  (
D‹aEnv
::
	`_dump
(
this
));

313 
	}
}

324 
	gD‹aTPCBEnv
::
	$öfo
() const

326  (
D‹aEnv
::
	`_öfo
(
this
));

327 
	}
}

338 
	gD‹aTPCBEnv
::
	$°©i°ics
()

340 
D‹aEnv
::
	`_°©i°ics
(
this
);

344 
	`TRACE
–
TRACE_STATISTICS
, "----- TPCB -----\n");

345 
Sh‹eTPCBEnv
::
	`°©i°ics
();

347 
	}
}

363 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_au_rvp
,
D‹aTPCBEnv
);

365 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_br_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
,,
D‹aTPCBEnv
);

366 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_ã_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
,,
D‹aTPCBEnv
);

367 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_ac_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
,,
D‹aTPCBEnv
);

368 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_hi_a˘i⁄
,
rvp_t
,
ac˘_upd©e_öput_t
,,
D‹aTPCBEnv
);

372 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcb/dora_tpcb_client.cpp

31 
	~"d‹a/çcb/d‹a_çcb_˛õ¡.h
"

34 
ENTER_NAMESPACE
(
d‹a
);

38 c⁄° 
	gXCT_TPCB_DORA_ACCT_UPDATE
 = 331;

48 
	gd‹a_çcb_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

51 
°m≠
.
	`˛ór
();

54 
°m≠
[
XCT_TPCB_DORA_ACCT_UPDATE
] = "DORA-TPCB-AcctUpd";

55  (
°m≠
.
	`size
());

56 
	}
}

70 
w_rc_t
 
	gd‹a_çcb_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

73 
boﬁ
 
bWake
 = 
Ál£
;

76 
£lid
 = 
_£lid
;

81 
åx_ªsu…_tu∂e_t
 
©π
;

82 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

83 
©π
.
	`£t_nŸify
(
c
);

84 
bWake
 = 
åue
;

87 
x˘_ty≥
) {

90 
XCT_TPCB_DORA_ACCT_UPDATE
:

91  (
_çcbdb
->
	`d‹a_ac˘_upd©e
(
x˘id
,
©π
,
£lid
,
bWake
));

94 
	`as£π
 (0);

96  (
RCOK
);

97 
	}
}

101 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcb/dora_tpcb_impl.cpp

35 
	~"d‹a/çcb/d‹a_çcb_im∂.h
"

36 
	~"d‹a/çcb/d‹a_çcb.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

39 
usög
 
«me•a˚
 
	gçcb
;

42 
ENTER_NAMESPACE
(
d‹a
);

51 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_au_rvp
,
ac˘_upd©e
);

66 
	gupd_br_a˘i⁄
::
	$ˇlc_keys
()

68 
_down
.
	`push_back
(
_ö
.
b_id
);

69 
	}
}

72 
w_rc_t
 
	gupd_br_a˘i⁄
::
	$åx_exec
()

74 
	`as£π
 (
_≥nv
);

78 
tu∂e_gu¨d
<
bønch_m™_im∂
> 
	`¥b
(
_≥nv
->
	`bønch_m™
());

79 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`bønch_m™
()->
	`ts
());

80 
¨ïrow
.
	`£t
(
_≥nv
->
	`bønch_desc
()->
	`maxsize
());

81 
¥b
->
_ªp
 = &
¨ïrow
;

92 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d UA:b-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
b_id
);

93 
	`W_DO
(
_≥nv
->
	`bønch_m™
()->
	`b_idx_∆
(_≥nv->
	`db
(), 
¥b
, 
_ö
.
b_id
));

95 
tŸÆ
;

96 
¥b
->
	`gë_vÆue
(1, 
tŸÆ
);

97 
¥b
->
	`£t_vÆue
(1, 
tŸÆ
 + 
_ö
.
dñè
);

100 
	`W_DO
(
_≥nv
->
	`bønch_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥b
, 
NL
));

102 #ifde‡
PRINT_TRX_RESULTS


104 
¥b
->
	`¥öt_tu∂e
();

107  
RCOK
;

108 
	}
}

112 
	gupd_ã_a˘i⁄
::
	$ˇlc_keys
()

114 
_down
.
	`push_back
(
_ö
.
t_id
);

115 
	}
}

119 
w_rc_t
 
	gupd_ã_a˘i⁄
::
	$åx_exec
()

121 
	`as£π
 (
_≥nv
);

125 
tu∂e_gu¨d
<
ãŒî_m™_im∂
> 
	`¥t
(
_≥nv
->
	`ãŒî_m™
());

126 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`ãŒî_m™
()->
	`ts
());

127 
¨ïrow
.
	`£t
(
_≥nv
->
	`ãŒî_desc
()->
	`maxsize
());

128 
¥t
->
_ªp
 = &
¨ïrow
;

138 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d UA:t-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
t_id
);

139 
	`W_DO
(
_≥nv
->
	`ãŒî_m™
()->
	`t_idx_∆
(_≥nv->
	`db
(), 
¥t
, 
_ö
.
t_id
));

141 
tŸÆ
;

142 
¥t
->
	`gë_vÆue
(2, 
tŸÆ
);

143 
¥t
->
	`£t_vÆue
(2, 
tŸÆ
 + 
_ö
.
dñè
);

146 
	`W_DO
(
_≥nv
->
	`ãŒî_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥t
, 
NL
));

148 #ifde‡
PRINT_TRX_RESULTS


150 
¥t
->
	`¥öt_tu∂e
();

153  
RCOK
;

154 
	}
}

158 
	gupd_ac_a˘i⁄
::
	$ˇlc_keys
()

160 
_down
.
	`push_back
(
_ö
.
a_id
);

161 
	}
}

165 
w_rc_t
 
	gupd_ac_a˘i⁄
::
	$åx_exec
()

167 
	`as£π
 (
_≥nv
);

171 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥a
(
_≥nv
->
	`accou¡_m™
());

172 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`accou¡_m™
()->
	`ts
());

173 
¨ïrow
.
	`£t
(
_≥nv
->
	`accou¡_desc
()->
	`maxsize
());

174 
¥a
->
_ªp
 = &
¨ïrow
;

184 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d UA:a-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
a_id
);

185 
	`W_DO
(
_≥nv
->
	`accou¡_m™
()->
	`a_idx_∆
(_≥nv->
	`db
(), 
¥a
, 
_ö
.
a_id
));

187 
tŸÆ
;

188 
¥a
->
	`gë_vÆue
(2, 
tŸÆ
);

189 
¥a
->
	`£t_vÆue
(2, 
tŸÆ
 + 
_ö
.
dñè
);

192 
	`W_DO
(
_≥nv
->
	`accou¡_m™
()->
	`upd©e_tu∂e
(_≥nv->
	`db
(), 
¥a
, 
NL
));

194 #ifde‡
PRINT_TRX_RESULTS


196 
¥a
->
	`¥öt_tu∂e
();

199  
RCOK
;

200 
	}
}

204 
	gös_hi_a˘i⁄
::
	$ˇlc_keys
()

206 
_down
.
	`push_back
(
_ö
.
a_id
);

207 
	}
}

211 
w_rc_t
 
	gös_hi_a˘i⁄
::
	$åx_exec
()

213 
	`as£π
 (
_≥nv
);

217 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥h
(
_≥nv
->
	`hi°‹y_m™
());

218 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`accou¡_m™
()->
	`ts
());

219 
¨ïrow
.
	`£t
(
_≥nv
->
	`accou¡_desc
()->
	`maxsize
());

220 
¥h
->
_ªp
 = &
¨ïrow
;

227 
¥h
->
	`£t_vÆue
(0, 
_ö
.
b_id
);

228 
¥h
->
	`£t_vÆue
(1, 
_ö
.
t_id
);

229 
¥h
->
	`£t_vÆue
(2, 
_ö
.
a_id
);

230 
¥h
->
	`£t_vÆue
(3, 
_ö
.
dñè
);

231 
¥h
->
	`£t_vÆue
(4, 
	`time
(
NULL
));

232 #ifde‡
CFG_HACK


233 
¥h
->
	`£t_vÆue
(5, "padding");

236 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d UA:ös-hi\n", 
_tid
.
	`gë_lo
());

237 
	`W_DO
(
_≥nv
->
	`hi°‹y_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥h
, 
NL
));

239 #ifde‡
PRINT_TRX_RESULTS


241 
¥h
->
	`¥öt_tu∂e
();

244  
RCOK
;

245 
	}
}

250 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcb/dora_tpcb_xct.cpp

32 
	~"d‹a/çcb/d‹a_çcb_im∂.h
"

33 
	~"d‹a/çcb/d‹a_çcb.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gçcb
;

39 
ENTER_NAMESPACE
(
d‹a
);

42 
	g∑πôi⁄_t
<> 
	túpIm∂
;

81 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCBEnv
,
ac˘_upd©e
);

93 
w_rc_t
 
	gD‹aTPCBEnv
::
	$d‹a_ac˘_upd©e
(c⁄° 
x˘_id
,

94 
åx_ªsu…_tu∂e_t
& 
©π
,

95 
ac˘_upd©e_öput_t
& 
ö
,

96 c⁄° 
boﬁ
 
bWake
)

98 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

99 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

100 if(!
_bAœrmSë
) {

101 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

102 
_bAœrmSë
 = 
åue
;

107 
tid_t
 
©id
;

109 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

110 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

112 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

115 
	`as£π
 (
px˘
);

116 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

117 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

120 
föÆ_au_rvp
* 
‰vp
 = 
	`√w_föÆ_au_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

123 
upd_br_a˘i⁄
* 
upd_br
 = 
	`√w_upd_br_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

124 
upd_ã_a˘i⁄
* 
upd_ã
 = 
	`√w_upd_ã_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

125 
upd_ac_a˘i⁄
* 
upd_ac
 = 
	`√w_upd_ac_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

126 
ös_hi_a˘i⁄
* 
ös_hi
 = 
	`√w_ös_hi_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

132 
úpIm∂
* 
my_br_∑π
 = 
	`decide_∑π
(
	`br
(),
ö
.
b_id
);

133 
	`as£π
 (
my_br_∑π
);

136 
úpIm∂
* 
my_ã_∑π
 = 
	`decide_∑π
(
	`ã
(),
ö
.
t_id
);

137 
	`as£π
 (
my_ã_∑π
);

140 
úpIm∂
* 
my_ac_∑π
 = 
	`decide_∑π
(
	`ac
(),
ö
.
a_id
);

141 
	`as£π
 (
my_ac_∑π
);

144 
úpIm∂
* 
my_hi_∑π
 = 
	`decide_∑π
(
	`hi
(),
ö
.
t_id
);

145 
	`as£π
 (
my_hi_∑π
);

150 
	`CRITICAL_SECTION
(
br_∑π_cs
, 
my_br_∑π
->
_íqueue_lock
);

151 i‡(
my_br_∑π
->
	`íqueue
(
upd_br
,
bWake
)) {

152 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_BR\n");

153 
	`as£π
 (0);

154  (
	`RC
(
de_PROBLEM_ENQUEUE
));

158 
	`CRITICAL_SECTION
(
ã_∑π_cs
, 
my_ã_∑π
->
_íqueue_lock
);

159 
br_∑π_cs
.
	`exô
();

160 i‡(
my_ã_∑π
->
	`íqueue
(
upd_ã
,
bWake
)) {

161 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_TE\n");

162 
	`as£π
 (0);

163  (
	`RC
(
de_PROBLEM_ENQUEUE
));

167 
	`CRITICAL_SECTION
(
ac_∑π_cs
, 
my_ac_∑π
->
_íqueue_lock
);

168 
ã_∑π_cs
.
	`exô
();

169 i‡(
my_ac_∑π
->
	`íqueue
(
upd_ac
,
bWake
)) {

170 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_AC\n");

171 
	`as£π
 (0);

172  (
	`RC
(
de_PROBLEM_ENQUEUE
));

176 
	`CRITICAL_SECTION
(
hi_∑π_cs
, 
my_hi_∑π
->
_íqueue_lock
);

177 
ac_∑π_cs
.
	`exô
();

178 i‡(
my_hi_∑π
->
	`íqueue
(
ös_hi
,
bWake
)) {

179 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_HI\n");

180 
	`as£π
 (0);

181  (
	`RC
(
de_PROBLEM_ENQUEUE
));

185  (
RCOK
);

186 
	}
}

189 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_delivery.cpp

34 
	~"d‹a/çcc/d‹a_dñivîy.h
"

35 
	~"d‹a/çcc/d‹a_çcc.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gçcc
;

41 
ENTER_NAMESPACE
(
d‹a
);

59 
w_rc_t
 
	gmid1_dñ_rvp
::
	$_run
()

64 
mid2_dñ_rvp
* 
rvp2
 = 
NULL
;

65 
	`as£π
 (0);

67 
rvp2
->
	`po°£t
(
_d_id
,
_föÆ_rvp
);

70 
	`CHECK_MIDWAY_RVP_ABORTED
(
rvp2
);

73 
upd_‹d_dñ_a˘i⁄
* 
dñ_upd_‹d
 = 
_±pc˚nv
->
	`√w_upd_‹d_dñ_a˘i⁄
(
_x˘
,
_tid
,
rvp2
,
_dö
);

74 
dñ_upd_‹d
->
	`po°£t
(
_d_id
,
_o_id
);

76 
upd_ﬁöe_dñ_a˘i⁄
* 
dñ_upd_ﬁöe
 = 
_±pc˚nv
->
	`√w_upd_ﬁöe_dñ_a˘i⁄
(
_x˘
,
_tid
,
rvp2
,
_dö
);

77 
dñ_upd_ﬁöe
->
	`po°£t
(
_d_id
,
_o_id
);

79 
∑πôi⁄_t
<> 
	túpIm∂
;

82 
wh
 = 
_dö
.
_wh_id
;

83 
úpIm∂
* 
my_‹d_∑π
 = 
_±pc˚nv
->
	`decide_∑π
(_±pc˚nv->
	`‹d
(),
wh
);

84 
úpIm∂
* 
my_ﬁöe_∑π
 = 
_±pc˚nv
->
	`decide_∑π
(_±pc˚nv->
	`ﬁi
(),
wh
);

86 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d-%d)\n", 
_tid
.
	`gë_lo
(), 
_d_id
);

89 
	`CRITICAL_SECTION
(
‹d_∑π_cs
, 
my_‹d_∑π
->
_íqueue_lock
);

90 i‡(
my_‹d_∑π
->
	`íqueue
(
dñ_upd_‹d
,
_bWake
)) {

91 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing DEL_UPD_ORD\n");

92 
	`as£π
 (0);

93  (
	`RC
(
de_PROBLEM_ENQUEUE
));

97 
	`CRITICAL_SECTION
(
ﬁ_∑π_cs
, 
my_ﬁöe_∑π
->
_íqueue_lock
);

98 
‹d_∑π_cs
.
	`exô
();

99 i‡(
my_ﬁöe_∑π
->
	`íqueue
(
dñ_upd_ﬁöe
,
_bWake
)) {

100 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing DEL_UPD_OL\n");

101 
	`as£π
 (0);

102  (
	`RC
(
de_PROBLEM_ENQUEUE
));

106  (
RCOK
);

107 
	}
}

127 
w_rc_t
 
	gmid2_dñ_rvp
::
	$_run
()

131 
	`as£π
 (
_föÆ_rvp
);

132 
_föÆ_rvp
->
	`≠≥nd_a˘i⁄s
(
_a˘i⁄s
);

135 
	`CHECK_MIDWAY_RVP_ABORTED
(
_föÆ_rvp
);

138 
upd_cu°_dñ_a˘i⁄
* 
dñ_upd_cu°
 = 
_±pc˚nv
->
	`√w_upd_cu°_dñ_a˘i⁄
(
_x˘
,
_tid
,
_föÆ_rvp
,
_dö
);

139 
dñ_upd_cu°
->
	`po°£t
(
_d_id
,
_c_id
,
_amou¡
);

141 
∑πôi⁄_t
<> 
	túpIm∂
;

144 
wh
 = 
_dö
.
_wh_id
;

145 
úpIm∂
* 
my_cu°_∑π
 = 
_±pc˚nv
->
	`decide_∑π
(_±pc˚nv->
	`cus
(),
wh
);

147 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d-%d)\n", 
_tid
.
	`gë_lo
(), 
_d_id
);

149 #w¨nög 
IP
: 
Nìd
 
to
 
move
 
CUST
 
bef‹e
 
N‹d
, 
Ord
, 
™d
 
Ol
 
ö
 
Dñivîy
Åÿ
avoid
 
dódlock
 
wôh
 
NewOrdî


152 
	`CRITICAL_SECTION
(
cu°_∑π_cs
, 
my_cu°_∑π
->
_íqueue_lock
);

153 i‡(
my_cu°_∑π
->
	`íqueue
(
dñ_upd_cu°
,
_bWake
)) {

154 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing DEL_UPD_CUST\n");

155 
	`as£π
 (0);

156  (
	`RC
(
de_PROBLEM_ENQUEUE
));

160  (
RCOK
);

161 
	}
}

172 
w_rc_t
 
	gföÆ_dñ_rvp
::
	$run
()

174  (
	`_run
());

175 
	}
}

177 
	gföÆ_dñ_rvp
::
	$upd_commôãd_°©s
()

179 
_±pc˚nv
->
	`_öc_dñivîy_©t
();

180 
	}
}

182 
	gföÆ_dñ_rvp
::
	$upd_ab‹ãd_°©s
()

184 
_±pc˚nv
->
	`_öc_dñivîy_Áûed
();

185 
	}
}

200 
w_rc_t
 
	gdñ_n‹d_dñ_a˘i⁄
::
	$åx_exec
()

202 
	`as£π
 (
_±pc˚nv
);

205 
tu∂e_gu¨d
<
√w_‹dî_m™_im∂
> 
	`¥no
(
_±pc˚nv
->
	`√w_‹dî_m™
());

207 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`√w_‹dî_m™
()->
	`ts
());

208 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`√w_‹dî_desc
()->
	`maxsize
());

209 
¥no
->
_ªp
 = &
¨ïrow
;

211 
ªp_row_t
 
	`lowªp
(
_±pc˚nv
->
	`√w_‹dî_m™
()->
	`ts
());

212 
ªp_row_t
 
	`highªp
(
_±pc˚nv
->
	`√w_‹dî_m™
()->
	`ts
());

216 
lowªp
.
	`£t
(
_±pc˚nv
->
	`√w_‹dî_desc
()->
	`maxsize
());

217 
highªp
.
	`£t
(
_±pc˚nv
->
	`√w_‹dî_desc
()->
	`maxsize
());

227 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:nord-iter-by-idx-nl (%d) (%d)\n",

228 
_tid
.
	`gë_lo
(), 
_dö
.
_wh_id
, 
_d_id
);

230 
gu¨d
<
ödex_sˇn_ôî_im∂
<
√w_‹dî_t
> > 
no_ôî
;

232 
ödex_sˇn_ôî_im∂
<
√w_‹dî_t
>* 
tmp_no_ôî
;

233 
	`W_DO
(
_±pc˚nv
->
	`√w_‹dî_m™
()->
	`no_gë_ôî_by_ödex_∆
(_±pc˚nv->
	`db
(),

234 
tmp_no_ôî
,

235 
¥no
,

236 
lowªp
, 
highªp
,

237 
_dö
.
_wh_id
,

238 
_d_id
));

239 
no_ôî
 = 
tmp_no_ôî
;

242 
boﬁ
 
eof
;

245 
	`W_DO
(
no_ôî
->
	`√xt
(
_±pc˚nv
->
	`db
(), 
eof
, *
¥no
));

247 i‡(
eof
Ë{  
RCOK
; }

249 
no_o_id
;

250 
¥no
->
	`gë_vÆue
(0, 
no_o_id
);

251 
	`as£π
 (
no_o_id
);

252 
_pmid1_rvp
->
	`£t_o_id
(
no_o_id
);

261 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:nord-delete-by-index-nl (%d) (%d) (%d)\n",

262 
_tid
.
	`gë_lo
(), 
_dö
.
_wh_id
, 
_d_id
, 
no_o_id
);

263 
	`W_DO
(
_±pc˚nv
->
	`√w_‹dî_m™
()->
	`no_dñëe_by_ödex_∆
(_±pc˚nv->
	`db
(), 
¥no
,

264 
_dö
.
_wh_id
, 
_d_id
,

265 
no_o_id
));

267 #ifde‡
PRINT_TRX_RESULTS


270 
¥no
->
	`¥öt_tu∂e
();

273  
RCOK
;

274 
	}
}

278 
w_rc_t
 
	gupd_‹d_dñ_a˘i⁄
::
	$åx_exec
()

280 
	`as£π
 (
_±pc˚nv
);

283 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_±pc˚nv
->
	`‹dî_m™
());

285 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`‹dî_m™
()->
	`ts
());

286 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`‹dî_desc
()->
	`maxsize
());

287 
¥‹d
->
_ªp
 = &
¨ïrow
;

289 i‡(
_o_id
<0Ë{  
RCOK
; }

301 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:ord-idx-probe-upd (%d) (%d) (%d)\n",

302 
_tid
.
	`gë_lo
(), 
_dö
.
_wh_id
, 
_d_id
, 
_o_id
);

303 
¥‹d
->
	`£t_vÆue
(0, 
_o_id
);

304 
¥‹d
->
	`£t_vÆue
(2, 
_d_id
);

305 
¥‹d
->
	`£t_vÆue
(3, 
_dö
.
_wh_id
);

306 
	`W_DO
(
_±pc˚nv
->
	`‹dî_m™
()->
	`‹d_upd©e_ˇºõr_by_ödex_∆
(_±pc˚nv->
	`db
(),

307 
¥‹d
,

308 
_dö
.
_ˇºõr_id
));

310 
c_id
;

311 
¥‹d
->
	`gë_vÆue
(1, 
c_id
);

312 
_pmid2_rvp
->
	`£t_c_id
(
c_id
);

314 #ifde‡
PRINT_TRX_RESULTS


317 
¥‹d
->
	`¥öt_tu∂e
();

320  
RCOK
;

321 
	}
}

325 
w_rc_t
 
	gupd_ﬁöe_dñ_a˘i⁄
::
	$åx_exec
()

327 
	`as£π
 (
_±pc˚nv
);

330 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_±pc˚nv
->
	`‹dî_löe_m™
());

332 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`‹dî_löe_m™
()->
	`ts
());

333 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

334 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

336 
ªp_row_t
 
	`lowªp
(
_±pc˚nv
->
	`‹dî_löe_m™
()->
	`ts
());

337 
ªp_row_t
 
	`highªp
(
_±pc˚nv
->
	`‹dî_löe_m™
()->
	`ts
());

341 
lowªp
.
	`£t
(
_±pc˚nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

342 
highªp
.
	`£t
(
_±pc˚nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

344 
time_t
 
ts_°¨t
 = 
	`time
(
NULL
);

346 i‡(
_o_id
<0Ë{  
RCOK
; }

358 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:ol-iter-probe-by-idx-nl (%d) (%d) (%d)\n",

359 
_tid
.
	`gë_lo
(), 
_dö
.
_wh_id
, 
_d_id
, 
_o_id
);

361 
tŸÆ_amou¡
 = 0;

363 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
> > 
ﬁ_ôî
;

365 
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
>* 
tmp_ﬁ_ôî
;

366 
	`W_DO
(
_±pc˚nv
->
	`‹dî_löe_m™
()->

367 
	`ﬁ_gë_¥obe_ôî_by_ödex_∆
(
_±pc˚nv
->
	`db
(), 
tmp_ﬁ_ôî
, 
¥ﬁ
,

368 
lowªp
, 
highªp
, 
_dö
.
_wh_id
, 
_d_id
,

369 
_o_id
));

370 
ﬁ_ôî
 = 
tmp_ﬁ_ôî
;

374 
boﬁ
 
eof
;

375 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_±pc˚nv
->
	`db
(), 
eof
, *
¥ﬁ
));

376 !
eof
) {

378 
cuºít_amou¡
;

379 
¥ﬁ
->
	`gë_vÆue
(8, 
cuºít_amou¡
);

380 
tŸÆ_amou¡
 +
cuºít_amou¡
;

383 
¥ﬁ
->
	`£t_vÆue
(6, 
ts_°¨t
);

384 
	`W_DO
(
_±pc˚nv
->
	`‹dî_löe_m™
()->
	`upd©e_tu∂e
(_±pc˚nv->
	`db
(),

385 
¥ﬁ
, 
NL
));

388 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_±pc˚nv
->
	`db
(), 
eof
, *
¥ﬁ
));

391 
_pmid2_rvp
->
	`add_amou¡
(
tŸÆ_amou¡
);

393 #ifde‡
PRINT_TRX_RESULTS


396 
¥ﬁ
->
	`¥öt_tu∂e
();

399  
RCOK
;

400 
	}
}

405 
w_rc_t
 
	gupd_cu°_dñ_a˘i⁄
::
	$åx_exec
()

407 
	`as£π
 (
_±pc˚nv
);

410 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_±pc˚nv
->
	`cu°omî_m™
());

412 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`ts
());

413 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`cu°omî_desc
()->
	`maxsize
());

414 
¥cu°
->
_ªp
 = &
¨ïrow
;

416 i‡(
_c_id
<0Ë{  
RCOK
; }

426 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:cust-idx-probe-upd-nl (%d) (%d) (%d)\n",

427 
_tid
.
	`gë_lo
(), 
_dö
.
_wh_id
, 
_d_id
, 
_c_id
);

428 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`cu°_ödex_¥obe_∆
(_±pc˚nv->
	`db
(), 
¥cu°
,

429 
_dö
.
_wh_id
, 
_d_id
,

430 
_c_id
));

431 
bÆ™˚
;

432 
¥cu°
->
	`gë_vÆue
(16, 
bÆ™˚
);

433 
¥cu°
->
	`£t_vÆue
(16, 
bÆ™˚
+
_amou¡
);

434 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`upd©e_tu∂e
(_±pc˚nv->
	`db
(), 
¥cu°
, 
NL
));

436 #ifde‡
PRINT_TRX_RESULTS


439 
¥cu°
->
	`¥öt_tu∂e
();

442  
RCOK
;

443 
	}
}

447 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_mbench.cpp

34 
	~"d‹a/çcc/d‹a_mbích.h
"

35 
	~"d‹a/çcc/d‹a_çcc.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gçcc
;

41 
ENTER_NAMESPACE
(
d‹a
);

50 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_mb_rvp
,
mbích_wh
);

62 
	gupd_wh_mb_a˘i⁄
::
	$ˇlc_keys
()

64 
_down
.
	`push_back
(
_ö
.
_wh_id
);

65 
	}
}

68 
w_rc_t
 
	gupd_wh_mb_a˘i⁄
::
	$åx_exec
()

70 
	`as£π
 (
_≥nv
);

76 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_≥nv
->
	`w¨ehou£_m™
());

77 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`w¨ehou£_m™
()->
	`ts
());

78 
¨ïrow
.
	`£t
(
_≥nv
->
	`w¨ehou£_desc
()->
	`maxsize
());

79 
¥wh
->
_ªp
 = &
¨ïrow
;

82 
	`TRACE
–
TRACE_TRX_FLOW
,

83 "Aµ: %d PAY:wh-idx-∆ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
);

84 
	`W_DO
(
_≥nv
->
	`w¨ehou£_m™
()->
	`wh_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥wh
,

85 
_ö
.
_wh_id
));

96 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:wh-update-ytd-nl (%d)\n",

97 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
);

98 
	`W_DO
(
_≥nv
->
	`w¨ehou£_m™
()->
	`wh_upd©e_ytd_∆
(_≥nv->
	`db
(), 
¥wh
,

99 
_ö
.
_amou¡
));

100 
çcc_w¨ehou£_tu∂e
 
awh
;

101 
¥wh
->
	`gë_vÆue
(1, 
awh
.
W_NAME
, 11);

102 
¥wh
->
	`gë_vÆue
(2, 
awh
.
W_STREET_1
, 21);

103 
¥wh
->
	`gë_vÆue
(3, 
awh
.
W_STREET_2
, 21);

104 
¥wh
->
	`gë_vÆue
(4, 
awh
.
W_CITY
, 21);

105 
¥wh
->
	`gë_vÆue
(5, 
awh
.
W_STATE
, 3);

106 
¥wh
->
	`gë_vÆue
(6, 
awh
.
W_ZIP
, 10);

108 #ifde‡
PRINT_TRX_RESULTS


111 
¥wh
->
	`¥öt_tu∂e
();

114  
RCOK
;

115 
	}
}

126 
	gupd_cu°_mb_a˘i⁄
::
	$ˇlc_keys
()

128 
_down
.
	`push_back
(
_ö
.
_wh_id
);

129 
_down
.
	`push_back
(
_ö
.
_d_id
);

130 
_down
.
	`push_back
(
_ö
.
_c_id
);

131 
	}
}

134 
w_rc_t
 
	gupd_cu°_mb_a˘i⁄
::
	$åx_exec
()

136 
	`as£π
 (
_≥nv
);

141 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_≥nv
->
	`cu°omî_m™
());

142 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cu°omî_m™
()->
	`ts
());

143 
¨ïrow
.
	`£t
(
_≥nv
->
	`cu°omî_desc
()->
	`maxsize
());

144 
¥cu°
->
_ªp
 = &
¨ïrow
;

157 
	`TRACE
–
TRACE_TRX_FLOW
,

159 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
, _ö.
_d_id
, _ö.
_c_id
);

160 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥cu°
,

161 
_ö
.
_wh_id
, _ö.
_d_id
,

162 
_ö
.
_c_id
));

165 
çcc_cu°omî_tu∂e
 
acu°
;

166 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

167 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

168 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

169 
¥cu°
->
	`gë_vÆue
(6, 
acu°
.
C_STREET_1
, 21);

170 
¥cu°
->
	`gë_vÆue
(7, 
acu°
.
C_STREET_2
, 21);

171 
¥cu°
->
	`gë_vÆue
(8, 
acu°
.
C_CITY
, 21);

172 
¥cu°
->
	`gë_vÆue
(9, 
acu°
.
C_STATE
, 3);

173 
¥cu°
->
	`gë_vÆue
(10, 
acu°
.
C_ZIP
, 10);

174 
¥cu°
->
	`gë_vÆue
(11, 
acu°
.
C_PHONE
, 17);

175 
¥cu°
->
	`gë_vÆue
(12, 
acu°
.
C_SINCE
);

176 
¥cu°
->
	`gë_vÆue
(13, 
acu°
.
C_CREDIT
, 3);

177 
¥cu°
->
	`gë_vÆue
(14, 
acu°
.
C_CREDIT_LIM
);

178 
¥cu°
->
	`gë_vÆue
(15, 
acu°
.
C_DISCOUNT
);

179 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

180 
¥cu°
->
	`gë_vÆue
(17, 
acu°
.
C_YTD_PAYMENT
);

181 
¥cu°
->
	`gë_vÆue
(18, 
acu°
.
C_LAST_PAYMENT
);

182 
¥cu°
->
	`gë_vÆue
(19, 
acu°
.
C_PAYMENT_CNT
);

183 
¥cu°
->
	`gë_vÆue
(20, 
acu°
.
C_DATA_1
, 251);

184 
¥cu°
->
	`gë_vÆue
(21, 
acu°
.
C_DATA_2
, 251);

187 
acu°
.
C_BALANCE
 -
_ö
.
_amou¡
;

188 
acu°
.
C_YTD_PAYMENT
 +
_ö
.
_amou¡
;

189 
acu°
.
C_PAYMENT_CNT
++;

192 i‡((
acu°
.
C_CREDIT
[0] == 'B') && (acust.C_CREDIT[1] == 'C')) {

204 
c_√w_d©a_1
[251];

205 
c_√w_d©a_2
[251];

206 
	`•rötf
(
c_√w_d©a_1
, "%d,%d,%d,%d,%d,%1.2f", 
_ö
.
_c_id
, _ö.
_d_id
,

207 
_ö
.
_wh_id
, _ö.
_d_id
, _ö._wh_id, _ö.
_amou¡
);

208 
Àn
 = 
	`°æí
(
c_√w_d©a_1
);

209 
	`°∫ˇt
(
c_√w_d©a_1
, 
acu°
.
C_DATA_1
, 250-
Àn
);

210 
	`°∫˝y
(
c_√w_d©a_2
, &
acu°
.
C_DATA_1
[250-
Àn
],Üen);

211 
	`°∫˝y
(
c_√w_d©a_2
, 
acu°
.
C_DATA_2
, 250-
Àn
);

213 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:bad-cust-update-tuple-nl\n",

214 
_tid
.
	`gë_lo
());

215 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_upd©e_tu∂e_∆
(_≥nv->
	`db
(), 
¥cu°
,

216 
acu°
, 
c_√w_d©a_1
,

217 
c_√w_d©a_2
));

219 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:good-cust-update-tuple-nl\n",

220 
_tid
.
	`gë_lo
());

221 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_upd©e_tu∂e_∆
(_≥nv->
	`db
(), 
¥cu°
,

222 
acu°
, 
NULL
, NULL));

225 #ifde‡
PRINT_TRX_RESULTS


228 
¥cu°
->
	`¥öt_tu∂e
();

231  
RCOK
;

232 
	}
}

235 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_new_order.cpp

34 
	~"d‹a/çcc/d‹a_√w_‹dî.h
"

36 
usög
 
«me•a˚
 
	gd‹a
;

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gçcc
;

41 
ENTER_NAMESPACE
(
d‹a
);

53 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_n‹d_rvp
,
√w_‹dî
);

63 
w_rc_t
 
	gmid1_n‹d_rvp
::
	$_run
()

69 
whid
 = 
_ö
.
_wh_id
;

72 
mid2_n‹d_rvp
* 
mid2_rvp
 = 
_≥nv
->
	`√w_mid2_n‹d_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_ö
,
_a˘i⁄s
,
_bWake
);

75 
	`CHECK_MIDWAY_RVP_ABORTED
(
mid2_rvp
);

78 
	`as£π
 (
_ö
.
_d_√xt_o_id
!=-1);

81 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

82 
∑πôi⁄_t
<> 
	túpIm∂
;

91 
no_ôem_n‹d_öput_t
 
™oôö
;

92 
_ö
.
	`gë_no_ôem_öput
(
™oôö
);

95 
ös_n‹d_n‹d_a˘i⁄
* 
ös_n‹d_n‹d
 = 
_≥nv
->
	`√w_ös_n‹d_n‹d_a˘i⁄
(
_x˘
,
_tid
,
mid2_rvp
,
™oôö
);

96 
úpIm∂
* 
my_n‹d_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`n‹
(),
whid
);

100 
ös_‹d_n‹d_a˘i⁄
* 
ös_‹d_n‹d
 = 
_≥nv
->
	`√w_ös_‹d_n‹d_a˘i⁄
(
_x˘
,
_tid
,
mid2_rvp
,
™oôö
);

101 
úpIm∂
* 
my_‹d_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`‹d
(),
whid
);

107 
	`CRITICAL_SECTION
(
n‹d_∑π_cs
, 
my_n‹d_∑π
->
_íqueue_lock
);

108 i‡(
my_n‹d_∑π
->
	`íqueue
(
ös_n‹d_n‹d
,
_bWake
))

110 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_NORD_NORD\n");

111 
	`as£π
 (0);

112  (
	`RC
(
de_PROBLEM_ENQUEUE
));

116 
	`CRITICAL_SECTION
(
‹d_∑π_cs
, 
my_‹d_∑π
->
_íqueue_lock
);

117 
n‹d_∑π_cs
.
	`exô
();

118 i‡(
my_‹d_∑π
->
	`íqueue
(
ös_‹d_n‹d
,
_bWake
))

120 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_ORD_NORD\n");

121 
	`as£π
 (0);

122  (
	`RC
(
de_PROBLEM_ENQUEUE
));

127  (
RCOK
);

128 
	}
}

138 
w_rc_t
 
	gmid2_n‹d_rvp
::
	$_run
()

140 
whid
 = 
_ö
.
_wh_id
;

143 
mid3_n‹d_rvp
* 
mid3_rvp
 = 
_≥nv
->
	`√w_mid3_n‹d_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_ö
,
_a˘i⁄s
,
_bWake
);

146 
	`CHECK_MIDWAY_RVP_ABORTED
(
mid3_rvp
);

149 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

150 
∑πôi⁄_t
<> 
	túpIm∂
;

158 
ös_ﬁ_n‹d_a˘i⁄
* 
ös_ﬁ_n‹d
 = 
_≥nv
->
	`√w_ös_ﬁ_n‹d_a˘i⁄
(
_x˘
,
_tid
,
mid3_rvp
,
_ö
);

159 
úpIm∂
* 
my_ﬁ_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`ﬁi
(),
whid
);

163 
	`CRITICAL_SECTION
(
ﬁi_∑π_cs
, 
my_ﬁ_∑π
->
_íqueue_lock
);

164 i‡(
my_ﬁ_∑π
->
	`íqueue
(
ös_ﬁ_n‹d
,
_bWake
)) {

165 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_OL_NORD\n");

166 
	`as£π
 (0);

167  (
	`RC
(
de_PROBLEM_ENQUEUE
));

171  (
RCOK
);

172 
	}
}

183 
w_rc_t
 
	gmid3_n‹d_rvp
::
	$_run
()

185 
whid
 = 
_ö
.
_wh_id
;

188 
föÆ_n‹d_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_n‹d_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

191 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

194 
	`as£π
 (
_ö
.
_d_√xt_o_id
!=-1);

197 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

198 
∑πôi⁄_t
<> 
	túpIm∂
;

206 
upd_°o_n‹d_a˘i⁄
* 
upd_°o_n‹d
 = 
_≥nv
->
	`√w_upd_°o_n‹d_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

207 
úpIm∂
* 
my_°o_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`°o
(),
whid
);

211 
	`CRITICAL_SECTION
(
°o_∑π_cs
, 
my_°o_∑π
->
_íqueue_lock
);

213 i‡(
my_°o_∑π
->
	`íqueue
(
upd_°o_n‹d
,
_bWake
)) {

214 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_STO_NORD\n");

215 
	`as£π
 (0);

216  (
	`RC
(
de_PROBLEM_ENQUEUE
));

220  (
RCOK
);

221 
	}
}

252 
	gr_wh_n‹d_a˘i⁄
::
	$ˇlc_keys
()

254 
	`£t_ªad_⁄ly
();

255 
_down
.
	`push_back
(
_ö
.
_wh_id
);

256 
	}
}

259 
w_rc_t
 
	gr_wh_n‹d_a˘i⁄
::
	$åx_exec
()

261 
	`as£π
 (
_≥nv
);

264 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_≥nv
->
	`w¨ehou£_m™
());

266 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`w¨ehou£_m™
()->
	`ts
());

267 
¨ïrow
.
	`£t
(
_≥nv
->
	`w¨ehou£_desc
()->
	`maxsize
());

268 
¥wh
->
_ªp
 = &
¨ïrow
;

278 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:wh-idx-nl (%d)\n",

279 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
);

280 
	`W_DO
(
_≥nv
->
	`w¨ehou£_m™
()->
	`wh_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥wh
,

281 
_ö
.
_wh_id
));

282 
¥wh
->
	`gë_vÆue
(7, 
_¥vp
->
_ö
.
_awh
.
W_TAX
);

284 #ifde‡
PRINT_TRX_RESULTS


287 
¥wh
->
	`¥öt_tu∂e
();

290  
RCOK
;

291 
	}
}

297 
	gr_cu°_n‹d_a˘i⁄
::
	$ˇlc_keys
()

299 
	`£t_ªad_⁄ly
();

300 
_down
.
	`push_back
(
_ö
.
_wh_id
);

301 
_down
.
	`push_back
(
_ö
.
_d_id
);

302 
	}
}

305 
w_rc_t
 
	gr_cu°_n‹d_a˘i⁄
::
	$åx_exec
()

307 
	`as£π
 (
_≥nv
);

310 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_≥nv
->
	`cu°omî_m™
());

312 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cu°omî_m™
()->
	`ts
());

313 
¨ïrow
.
	`£t
(
_≥nv
->
	`cu°omî_desc
()->
	`maxsize
());

314 
¥cu°
->
_ªp
 = &
¨ïrow
;

324 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:cust-idx-nl (%d) (%d) (%d)\n",

325 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
, _ö.
_d_id
, _ö.
_c_id
);

326 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥cu°
,

327 
_ö
.
_wh_id
, _ö.
_d_id
,

328 
_ö
.
_c_id
));

329 
¥cu°
->
	`gë_vÆue
(15, 
_¥vp
->
_ö
.
_acu°
.
C_DISCOUNT
);

330 
¥cu°
->
	`gë_vÆue
(13, 
_¥vp
->
_ö
.
_acu°
.
C_CREDIT
, 3);

331 
¥cu°
->
	`gë_vÆue
(5, 
_¥vp
->
_ö
.
_acu°
.
C_LAST
, 17);

333 #ifde‡
PRINT_TRX_RESULTS


336 
¥cu°
->
	`¥öt_tu∂e
();

339  
RCOK
;

340 
	}
}

347 
	gupd_di°_n‹d_a˘i⁄
::
	$ˇlc_keys
()

349 
_down
.
	`push_back
(
_ö
.
_wh_id
);

350 
_down
.
	`push_back
(
_ö
.
_d_id
);

351 
	}
}

353 
w_rc_t
 
	gupd_di°_n‹d_a˘i⁄
::
	$åx_exec
()

355 
	`as£π
 (
_≥nv
);

358 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_≥nv
->
	`di°ri˘_m™
());

360 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`di°ri˘_m™
()->
	`ts
());

361 
¨ïrow
.
	`£t
(
_≥nv
->
	`di°ri˘_desc
()->
	`maxsize
());

362 
¥di°
->
_ªp
 = &
¨ïrow
;

372 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:dist-idx-nl (%d) (%d)\n",

373 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
, _ö.
_d_id
);

374 
	`W_DO
(
_≥nv
->
	`di°ri˘_m™
()->
	`di°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥di°
,

375 
_ö
.
_wh_id
, _ö.
_d_id
));

376 
¥di°
->
	`gë_vÆue
(8, 
_¥vp
->
_ö
.
_adi°
.
D_TAX
);

377 
¥di°
->
	`gë_vÆue
(10, 
_¥vp
->
_ö
.
_adi°
.
D_NEXT_O_ID
);

378 
_¥vp
->
_ö
.
_adi°
.
D_NEXT_O_ID
++;

386 c⁄° 
√xt_o_id
 = 
_¥vp
->
_ö
.
_adi°
.
D_NEXT_O_ID
;

387 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:dist-upd-next-o-id-nl (%d)\n",

388 
_tid
.
	`gë_lo
(), 
√xt_o_id
);

389 
	`W_DO
(
_≥nv
->
	`di°ri˘_m™
()->
	`di°_upd©e_√xt_o_id_∆
(_≥nv->
	`db
(), 
¥di°
,

390 
√xt_o_id
));

393 
_¥vp
->
_ö
.
_d_√xt_o_id
 = 
√xt_o_id
;

395 #ifde‡
PRINT_TRX_RESULTS


398 
¥di°
->
	`¥öt_tu∂e
();

401  
RCOK
;

402 
	}
}

408 
	gr_ôem_n‹d_a˘i⁄
::
	$ˇlc_keys
()

411 
	`£t_ªad_⁄ly
();

412 
_down
.
	`push_back
(
_ö
.
_wh_id
);

413 
	}
}

415 
w_rc_t
 
	gr_ôem_n‹d_a˘i⁄
::
	$åx_exec
()

417 
	`as£π
 (
_≥nv
);

420 
tu∂e_gu¨d
<
ôem_m™_im∂
> 
	`¥ôem
(
_≥nv
->
	`ôem_m™
());

422 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`ôem_m™
()->
	`ts
());

423 
¨ïrow
.
	`£t
(
_≥nv
->
	`ôem_desc
()->
	`maxsize
());

424 
¥ôem
->
_ªp
 = &
¨ïrow
;

427 
idx
=0;

429 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ: %d NO:r-ôem (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_ﬁ_˙t
);

432 
idx
=0; idx<
_ö
.
_ﬁ_˙t
; idx++) {

434 
ﬁ_i_id
 = 
_ö
.
ôems
[
idx
].
_ﬁ_i_id
;

435 
ﬁ_suµly_w_id
 = 
_ö
.
ôems
[
idx
].
_ﬁ_suµly_wh_id
;

436 
	`as£π
 (
_ö
.
_wh_id
==
ﬁ_suµly_w_id
);

444 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:item-idx-nl-%d (%d)\n",

445 
_tid
.
	`gë_lo
(), 
idx
, 
ﬁ_i_id
);

446 
	`W_DO
(
_≥nv
->
	`ôem_m™
()->
	`ô_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥ôem
, 
ﬁ_i_id
));

449 
¥ôem
->
	`gë_vÆue
(4, 
_ö
.
ôems
[
idx
].
_aôem
.
I_DATA
, 51);

450 
¥ôem
->
	`gë_vÆue
(3, 
_ö
.
ôems
[
idx
].
_aôem
.
I_PRICE
);

451 
¥ôem
->
	`gë_vÆue
(2, 
_ö
.
ôems
[
idx
].
_aôem
.
I_NAME
, 25);

452 
_ö
.
ôems
[
idx
].
_ôem_amou¡
 = _ö.ôems[idx].
_aôem
.
I_PRICE
 *

453 
_ö
.
ôems
[
idx
].
_ﬁ_qu™tôy
;

456 
_¥vp
->
_ö
.
ôems
[
idx
].
_ôem_amou¡
 = _in.items[idx]._item_amount;

459 #ifde‡
PRINT_TRX_RESULTS


462 
¥ôem
->
	`¥öt_tu∂e
();

465  
RCOK
;

466 
	}
}

485 
	gös_‹d_n‹d_a˘i⁄
::
	$ˇlc_keys
()

487 
_down
.
	`push_back
(
_ö
.
_wh_id
);

488 
_down
.
	`push_back
(
_ö
.
_d_id
);

489 
	}
}

491 
w_rc_t
 
	gös_‹d_n‹d_a˘i⁄
::
	$åx_exec
()

493 
	`as£π
 (
_≥nv
);

496 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_≥nv
->
	`‹dî_m™
());

498 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`‹dî_m™
()->
	`ts
());

499 
¨ïrow
.
	`£t
(
_≥nv
->
	`‹dî_desc
()->
	`maxsize
());

500 
¥‹d
->
_ªp
 = &
¨ïrow
;

502 
ªp_row_t
 
	`¨ïrow_key
(
_≥nv
->
	`‹dî_m™
()->
	`ts
());

503 
¨ïrow_key
.
	`£t
(
_≥nv
->
	`‹dî_desc
()->
	`maxsize
());

504 
¥‹d
->
_ªp_key
 = &
¨ïrow_key
;

511 
¥‹d
->
	`£t_vÆue
(0, 
_ö
.
_d_√xt_o_id
);

512 
¥‹d
->
	`£t_vÆue
(1, 
_ö
.
_c_id
);

513 
¥‹d
->
	`£t_vÆue
(2, 
_ö
.
_d_id
);

514 
¥‹d
->
	`£t_vÆue
(3, 
_ö
.
_wh_id
);

515 
¥‹d
->
	`£t_vÆue
(4, 
_ö
.
_t°amp
);

516 
¥‹d
->
	`£t_vÆue
(5, 0);

517 
¥‹d
->
	`£t_vÆue
(6, 
_ö
.
_ﬁ_˙t
);

518 
¥‹d
->
	`£t_vÆue
(7, 
_ö
.
_Æl_loˇl
);

520 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:ord-add-tuple-nl (%d)\n",

521 
_tid
.
	`gë_lo
(), 
_ö
.
_d_√xt_o_id
);

522 
	`W_DO
(
_≥nv
->
	`‹dî_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥‹d
, 
NL
));

524 #ifde‡
PRINT_TRX_RESULTS


527 
¥‹d
->
	`¥öt_tu∂e
();

530  
RCOK
;

531 
	}
}

538 
	gös_n‹d_n‹d_a˘i⁄
::
	$ˇlc_keys
()

540 
_down
.
	`push_back
(
_ö
.
_wh_id
);

541 
_down
.
	`push_back
(
_ö
.
_d_id
);

542 
	}
}

544 
w_rc_t
 
	gös_n‹d_n‹d_a˘i⁄
::
	$åx_exec
()

546 
	`as£π
 (
_≥nv
);

549 
tu∂e_gu¨d
<
√w_‹dî_m™_im∂
> 
	`¥no
(
_≥nv
->
	`√w_‹dî_m™
());

551 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`√w_‹dî_m™
()->
	`ts
());

552 
¨ïrow
.
	`£t
(
_≥nv
->
	`√w_‹dî_desc
()->
	`maxsize
());

553 
¥no
->
_ªp
 = &
¨ïrow
;

555 
ªp_row_t
 
	`¨ïrow_key
(
_≥nv
->
	`√w_‹dî_m™
()->
	`ts
());

556 
¨ïrow_key
.
	`£t
(
_≥nv
->
	`√w_‹dî_desc
()->
	`maxsize
());

557 
¥no
->
_ªp_key
 = &
¨ïrow_key
;

563 
¥no
->
	`£t_vÆue
(0, 
_ö
.
_d_√xt_o_id
);

564 
¥no
->
	`£t_vÆue
(1, 
_ö
.
_d_id
);

565 
¥no
->
	`£t_vÆue
(2, 
_ö
.
_wh_id
);

567 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:nord-add-tuple (%d) (%d) (%d)\n",

568 
_tid
.
	`gë_lo
(), 
_ö
.
_wh_id
, _ö.
_d_id
, _ö.
_d_√xt_o_id
);

569 
	`W_DO
(
_≥nv
->
	`√w_‹dî_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥no
, 
NL
));

571 #ifde‡
PRINT_TRX_RESULTS


574 
¥no
->
	`¥öt_tu∂e
();

577  
RCOK
;

578 
	}
}

595 
	gös_ﬁ_n‹d_a˘i⁄
::
	$ˇlc_keys
()

597 
_down
.
	`push_back
(
_ö
.
_wh_id
);

598 
_down
.
	`push_back
(
_ö
.
_d_id
);

599 
	}
}

602 
w_rc_t
 
	gös_ﬁ_n‹d_a˘i⁄
::
	$åx_exec
()

604 
	`as£π
 (
_≥nv
);

607 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_≥nv
->
	`‹dî_löe_m™
());

609 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

610 
¨ïrow
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

611 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

613 
ªp_row_t
 
	`¨ïrow_key
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

614 
¨ïrow_key
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

615 
¥ﬁ
->
_ªp_key
 = &
¨ïrow_key
;

618 
idx
 = 0;

620 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ: %d NO:ös-ﬁ (%d)\n", 
_tid
.
	`gë_lo
(), 
_ö
.
_ﬁ_˙t
);

622 
idx
=0; idx<
_ö
.
_ﬁ_˙t
; idx++) {

628 
¥ﬁ
->
	`£t_vÆue
(0, 
_ö
.
_d_√xt_o_id
);

629 
¥ﬁ
->
	`£t_vÆue
(1, 
_ö
.
_d_id
);

630 
¥ﬁ
->
	`£t_vÆue
(2, 
_ö
.
_wh_id
);

631 
¥ﬁ
->
	`£t_vÆue
(3, 
idx
+1);

632 
¥ﬁ
->
	`£t_vÆue
(4, 
_ö
.
ôems
[
idx
].
_ﬁ_i_id
);

633 
¥ﬁ
->
	`£t_vÆue
(5, 
_ö
.
ôems
[
idx
].
_ﬁ_suµly_wh_id
);

634 
¥ﬁ
->
	`£t_vÆue
(6, 
_ö
.
_t°amp
);

635 
¥ﬁ
->
	`£t_vÆue
(7, 
_ö
.
ôems
[
idx
].
_ﬁ_qu™tôy
);

636 
¥ﬁ
->
	`£t_vÆue
(8, 
_ö
.
ôems
[
idx
].
_ôem_amou¡
);

637 
¥ﬁ
->
	`£t_vÆue
(9, 
_ö
.
ôems
[
idx
].
_a°ock
.
S_DIST
[_ö.
_d_id
]);

639 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:ol-add-tuple-%d (%d) (%d) (%d) (%d)\n",

640 
_tid
.
	`gë_lo
(), 
idx
, 
_ö
.
_wh_id
, _ö.
_d_id
, _ö.
_d_√xt_o_id
,

641 
_ö
.
ôems
[
idx
].
_ﬁ_i_id
);

642 
	`W_DO
(
_≥nv
->
	`‹dî_löe_m™
()->
	`add_tu∂e
(_≥nv->
	`db
(), 
¥ﬁ
, 
NL
));

645 #ifde‡
PRINT_TRX_RESULTS


648 
¥ﬁ
->
	`¥öt_tu∂e
();

651  
RCOK
;

652 
	}
}

668 
	gupd_°o_n‹d_a˘i⁄
::
	$ˇlc_keys
()

671 
_down
.
	`push_back
(
_ö
.
_wh_id
);

672 
	}
}

674 
w_rc_t
 
	gupd_°o_n‹d_a˘i⁄
::
	$åx_exec
()

676 
	`as£π
 (
_≥nv
);

679 
tu∂e_gu¨d
<
°ock_m™_im∂
> 
	`¥°
(
_≥nv
->
	`°ock_m™
());

681 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`°ock_m™
()->
	`ts
());

682 
¨ïrow
.
	`£t
(
_≥nv
->
	`°ock_desc
()->
	`maxsize
());

683 
¥°
->
_ªp
 = &
¨ïrow
;

685 
idx
=0;

686 
ﬁ_i_id
=0;

687 
ﬁ_suµly_w_id
=0;

689 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:upd-stock (%d)\n",

690 
_tid
.
	`gë_lo
(), 
_ö
.
_ﬁ_˙t
);

693 
idx
=0; idx<
_ö
.
_ﬁ_˙t
; idx++) {

696 
ﬁ_i_id
 = 
_ö
.
ôems
[
idx
].
_ﬁ_i_id
;

697 
ﬁ_suµly_w_id
 = 
_ö
.
ôems
[
idx
].
_ﬁ_suµly_wh_id
;

706 
çcc_°ock_tu∂e
* 
p°ock
 = &
_ö
.
ôems
[
idx
].
_a°ock
;

707 
çcc_ôem_tu∂e
* 
pôem
 = &
_ö
.
ôems
[
idx
].
_aôem
;

708 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:stock-idx-nl-%d (%d) (%d)\n",

709 
_tid
.
	`gë_lo
(), 
idx
, 
ﬁ_suµly_w_id
, 
ﬁ_i_id
);

710 
	`W_DO
(
_≥nv
->
	`°ock_m™
()->
	`°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥°
,

711 
ﬁ_suµly_w_id
, 
ﬁ_i_id
));

713 
¥°
->
	`gë_vÆue
(0, 
p°ock
->
S_I_ID
);

714 
¥°
->
	`gë_vÆue
(1, 
p°ock
->
S_W_ID
);

715 
¥°
->
	`gë_vÆue
(5, 
p°ock
->
S_YTD
);

716 
p°ock
->
S_YTD
 +
_ö
.
ôems
[
idx
].
_ﬁ_qu™tôy
;

717 
¥°
->
	`gë_vÆue
(2, 
p°ock
->
S_REMOTE_CNT
);

718 
¥°
->
	`gë_vÆue
(3, 
p°ock
->
S_QUANTITY
);

719 
p°ock
->
S_QUANTITY
 -
_ö
.
ôems
[
idx
].
_ﬁ_qu™tôy
;

720 i‡(
p°ock
->
S_QUANTITY
 < 10) {

721 
p°ock
->
S_QUANTITY
 += 91;

723 
¥°
->
	`gë_vÆue
(6+
_ö
.
_d_id
, 
p°ock
->
S_DIST
[_in._d_id], 25);

724 
¥°
->
	`gë_vÆue
(16, 
p°ock
->
S_DATA
, 51);

725 
c_s_bønd_gíîic
;

726 i‡(
	`°r°r
(
pôem
->
I_DATA
, "ORIGINAL"Ë!
NULL
 &&

727 
	`°r°r
(
p°ock
->
S_DATA
, "ORIGINAL"Ë!
NULL
) {

728 
c_s_bønd_gíîic
 = 'B';

730 
c_s_bønd_gíîic
 = 'G';

732 
¥°
->
	`gë_vÆue
(4, 
p°ock
->
S_ORDER_CNT
);

733 
p°ock
->
S_ORDER_CNT
++;

735 i‡(
_ö
.
_wh_id
 !_ö.
ôems
[
idx
].
_ﬁ_suµly_wh_id
) {

736 
p°ock
->
S_REMOTE_CNT
++;

738 
	`as£π
 (0);

746 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:stock-upd-tuple-nl-%d (%d) (%d)\n",

747 
_tid
.
	`gë_lo
(), 
idx
, 
p°ock
->
S_W_ID
,Ö°ock->
S_I_ID
);

748 
	`W_DO
(
_≥nv
->
	`°ock_m™
()->
	`°_upd©e_tu∂e_∆
(_≥nv->
	`db
(), 
¥°
, 
p°ock
));

754 #ifde‡
PRINT_TRX_RESULTS


757 
¥°
->
	`¥öt_tu∂e
();

760  
RCOK
;

761 
	}
}

767 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_order_status.cpp

34 
	~"d‹a/çcc/d‹a_‹dî_°©us.h
"

35 
	~"d‹a/çcc/d‹a_çcc.h
"

37 
usög
 
«me•a˚
 
	gd‹a
;

38 
usög
 
«me•a˚
 
	gsh‹e
;

39 
usög
 
«me•a˚
 
	gçcc
;

42 
ENTER_NAMESPACE
(
d‹a
);

56 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_‹d°_rvp
,
‹dî_°©us
);

67 
w_rc_t
 
	gmid1_‹d°_rvp
::
	$_run
()

70 
mid2_‹d°_rvp
* 
mid2_rvp
 = 
_≥nv
->
	`√w_mid2_‹d°_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_ö
,
_a˘i⁄s
,
_bWake
);

73 
	`CHECK_MIDWAY_RVP_ABORTED
(
mid2_rvp
);

76 
r_‹d_‹d°_a˘i⁄
* 
r_‹d
 = 
_≥nv
->
	`√w_r_‹d_‹d°_a˘i⁄
(
_x˘
,
_tid
,
mid2_rvp
,
_ö
);

78 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

79 
∑πôi⁄_t
<> 
	túpIm∂
;

85 
wh
 = 
_ö
.
_wh_id
;

86 
úpIm∂
* 
my_‹d_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`‹d
(),
wh
);

89 
	`CRITICAL_SECTION
(
‹d_∑π_cs
, 
my_‹d_∑π
->
_íqueue_lock
);

90 i‡(
my_‹d_∑π
->
	`íqueue
(
r_‹d
,
_bWake
)) {

91 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing ORDST_R_ORD\n");

92 
	`as£π
 (0);

93  (
	`RC
(
de_PROBLEM_ENQUEUE
));

96  (
RCOK
);

97 
	}
}

109 
w_rc_t
 
	gmid2_‹d°_rvp
::
	$_run
()

112 
föÆ_‹d°_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_‹d°_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

115 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

118 
r_ﬁ_‹d°_a˘i⁄
* 
r_ﬁ
 = 
_≥nv
->
	`√w_r_ﬁ_‹d°_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

120 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

121 
∑πôi⁄_t
<> 
	túpIm∂
;

127 
wh
 = 
_ö
.
_wh_id
 ;

128 
úpIm∂
* 
my_ﬁi_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`ﬁi
(),
wh
);

131 
	`CRITICAL_SECTION
(
ﬁi_∑π_cs
, 
my_ﬁi_∑π
->
_íqueue_lock
);

132 i‡(
my_ﬁi_∑π
->
	`íqueue
(
r_ﬁ
,
_bWake
)) {

133 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing ORDST_R_OL\n");

134 
	`as£π
 (0);

135  (
	`RC
(
de_PROBLEM_ENQUEUE
));

138  (
RCOK
);

139 
	}
}

154 
	gr_cu°_‹d°_a˘i⁄
::
	$ˇlc_keys
()

156 
	`£t_ªad_⁄ly
();

157 
_down
.
	`push_back
(
_ö
.
_wh_id
);

158 
_down
.
	`push_back
(
_ö
.
_d_id
);

159 
	}
}

161 
w_rc_t
 
	gr_cu°_‹d°_a˘i⁄
::
	$åx_exec
()

163 
	`as£π
 (
_≥nv
);

166 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_≥nv
->
	`cu°omî_m™
());

168 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`cu°omî_m™
()->
	`ts
());

169 
¨ïrow
.
	`£t
(
_≥nv
->
	`cu°omî_desc
()->
	`maxsize
());

170 
¥cu°
->
_ªp
 = &
¨ïrow
;

172 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`cu°omî_m™
()->
	`ts
());

173 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`cu°omî_m™
()->
	`ts
());

174 
lowªp
.
	`£t
(
_≥nv
->
	`cu°omî_desc
()->
	`maxsize
());

175 
highªp
.
	`£t
(
_≥nv
->
	`cu°omî_desc
()->
	`maxsize
());

177 
w_id
 = 
_ö
.
_wh_id
;

178 
d_id
 = 
_ö
.
_d_id
;

179 
c_id
 = 
_ö
.
_c_id
;

185 i‡(
_ö
.
_c_id
 == 0) {

195 
	`as£π
 (
_ö
.
_c_£À˘
 <= 60);

196 
	`as£π
 (
_ö
.
_c_œ°
);

198 
gu¨d
<
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

200 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

201 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST:cust-iter-by-name-idx-nl\n",

202 
_tid
.
	`gë_lo
());

203 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_gë_ôî_by_ödex_∆
(_≥nv->
	`db
(),

204 
tmp_c_ôî
,

205 
¥cu°
, 
lowªp
,

206 
highªp
, 
w_id
,

207 
d_id
,

208 
_ö
.
_c_œ°
));

209 
c_ôî
 = 
tmp_c_ôî
;

212 
ve˘‹
<> 
v_c_id
;

213 
a_c_id
 = 0;

214 
cou¡
 = 0;

215 
boﬁ
 
eof
;

217 
	`W_DO
(
c_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥cu°
));

218 !
eof
) {

220 ++
cou¡
;

221 
¥cu°
->
	`gë_vÆue
(0, 
a_c_id
);

222 
v_c_id
.
	`push_back
(
a_c_id
);

224 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST:cust-iter-next\n",

225 
_tid
.
	`gë_lo
());

226 
	`W_DO
(
c_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥cu°
));

228 
	`as£π
 (
cou¡
);

231 
_ö
.
_c_id
 = 
v_c_id
[(
cou¡
+1)/2-1];

232 
c_id
 = 
_ö
.
_c_id
;

234 
	`as£π
 (
_ö
.
_c_id
>0);

245 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST:cust-idx-nl (%d) (%d) (%d)\n",

246 
_tid
.
	`gë_lo
(), 
w_id
, 
d_id
, 
c_id
);

247 
	`W_DO
(
_≥nv
->
	`cu°omî_m™
()->
	`cu°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥cu°
,

248 
w_id
, 
d_id
, 
c_id
));

250 
çcc_cu°omî_tu∂e
 
acu°
;

251 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

252 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

253 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

254 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

257 
_¥vp
->
_ö
.
_c_id
 = _in._c_id;

259 #ifde‡
PRINT_TRX_RESULTS


262 
¥cu°
->
	`¥öt_tu∂e
();

265  
RCOK
;

266 
	}
}

269 
	gr_‹d_‹d°_a˘i⁄
::
	$ˇlc_keys
()

271 
	`£t_ªad_⁄ly
();

272 
_down
.
	`push_back
(
_ö
.
_wh_id
);

273 
_down
.
	`push_back
(
_ö
.
_d_id
);

274 
	}
}

277 
w_rc_t
 
	gr_‹d_‹d°_a˘i⁄
::
	$åx_exec
()

279 
	`as£π
 (
_≥nv
);

282 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_≥nv
->
	`‹dî_m™
());

284 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`‹dî_m™
()->
	`ts
());

285 
¨ïrow
.
	`£t
(
_≥nv
->
	`‹dî_desc
()->
	`maxsize
());

286 
¥‹d
->
_ªp
 = &
¨ïrow
;

288 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`‹dî_m™
()->
	`ts
());

289 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`‹dî_m™
()->
	`ts
());

290 
lowªp
.
	`£t
(
_≥nv
->
	`‹dî_desc
()->
	`maxsize
());

291 
highªp
.
	`£t
(
_≥nv
->
	`‹dî_desc
()->
	`maxsize
());

293 
w_id
 = 
_ö
.
_wh_id
;

294 
d_id
 = 
_ö
.
_d_id
;

295 
c_id
 = 
_ö
.
_c_id
;

307 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_t
> > 
o_ôî
;

309 
ödex_sˇn_ôî_im∂
<
‹dî_t
>* 
tmp_o_ôî
;

310 
	`TRACE
(
TRACE_TRX_FLOW
,"Aµ: %d ORDST:‹d-ôî-by-idx-∆\n",
_tid
.
	`gë_lo
());

311 
	`W_DO
(
_≥nv
->
	`‹dî_m™
()->
	`‹d_gë_ôî_by_ödex_∆
(_≥nv->
	`db
(), 
tmp_o_ôî
,

312 
¥‹d
, 
lowªp
, 
highªp
,

313 
w_id
, 
d_id
, 
c_id
));

314 
o_ôî
 = 
tmp_o_ôî
;

317 
çcc_‹dî_tu∂e
 
a‹dî
;

318 
boﬁ
 
eof
;

319 
uöt
 
˙t
 = 0;

321 
	`W_DO
(
o_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥‹d
));

322 !
eof
) {

323 ++
˙t
;

324 
¥‹d
->
	`gë_vÆue
(0, 
a‹dî
.
O_ID
);

325 
¥‹d
->
	`gë_vÆue
(4, 
a‹dî
.
O_ENTRY_D
);

326 
¥‹d
->
	`gë_vÆue
(5, 
a‹dî
.
O_CARRIER_ID
);

327 
¥‹d
->
	`gë_vÆue
(6, 
a‹dî
.
O_OL_CNT
);

328 
	`W_DO
(
o_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥‹d
));

330 
	`as£π
 (
˙t
);

333 
	`as£π
 (
a‹dî
.
O_ID
);

334 
	`as£π
 (
a‹dî
.
O_OL_CNT
);

336 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST: (%d) (%d)\n",

337 
_tid
.
	`gë_lo
(), 
a‹dî
.
O_ID
,á‹dî.
O_OL_CNT
);

340 
_¥vp
->
_ö
.
_o_id
 = 
a‹dî
.
O_ID
;

341 
_¥vp
->
_ö
.
_o_ﬁ_˙t
 = 
a‹dî
.
O_OL_CNT
;

343 #ifde‡
PRINT_TRX_RESULTS


346 
¥‹d
->
	`¥öt_tu∂e
();

349  
RCOK
;

350 
	}
}

353 
	gr_ﬁ_‹d°_a˘i⁄
::
	$ˇlc_keys
()

355 
	`£t_ªad_⁄ly
();

356 
_down
.
	`push_back
(
_ö
.
_wh_id
);

357 
_down
.
	`push_back
(
_ö
.
_d_id
);

358 
	}
}

360 
w_rc_t
 
	gr_ﬁ_‹d°_a˘i⁄
::
	$åx_exec
()

362 
	`as£π
 (
_≥nv
);

365 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_≥nv
->
	`‹dî_löe_m™
());

367 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

368 
¨ïrow
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

369 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

371 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

372 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

374 
çcc_‹dîlöe_tu∂e
* 
p‹dîlöes
 = 
NULL
;

376 
w_id
 = 
_ö
.
_wh_id
;

377 
d_id
 = 
_ö
.
_d_id
;

378 
o_id
 = 
_ö
.
_o_id
;

389 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
> > 
ﬁ_ôî
;

391 
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
>* 
tmp_ﬁ_ôî
;

392 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ: %d ORDST:ﬁ-ôî-by-idx-∆\n", 
_tid
.
	`gë_lo
());

393 
	`W_DO
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ﬁ_gë_¥obe_ôî_by_ödex_∆
(_≥nv->
	`db
(),

394 
tmp_ﬁ_ôî
,

395 
¥ﬁ
, 
lowªp
,

396 
highªp
, 
w_id
,

397 
d_id
, 
o_id
));

398 
ﬁ_ôî
 = 
tmp_ﬁ_ôî
;

401 
p‹dîlöes
 = 
√w
 
çcc_‹dîlöe_tu∂e
[
_ö
.
_o_ﬁ_˙t
];

402 
i
=0;

403 
boﬁ
 
eof
;

405 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥ﬁ
));

406 !
eof
) {

407 
¥ﬁ
->
	`gë_vÆue
(4, 
p‹dîlöes
[
i
].
OL_I_ID
);

408 
¥ﬁ
->
	`gë_vÆue
(5, 
p‹dîlöes
[
i
].
OL_SUPPLY_W_ID
);

409 
¥ﬁ
->
	`gë_vÆue
(6, 
p‹dîlöes
[
i
].
OL_DELIVERY_D
);

410 
¥ﬁ
->
	`gë_vÆue
(7, 
p‹dîlöes
[
i
].
OL_QUANTITY
);

411 
¥ﬁ
->
	`gë_vÆue
(8, 
p‹dîlöes
[
i
].
OL_AMOUNT
);

413 #ifde‡
PRINT_TRX_RESULTS


414 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST: (%d) %d - %d - %d - %d\n",

415 
_tid
.
	`gë_lo
(),

416 
i
, 
p‹dîlöes
[i].
OL_I_ID
,Ö‹dîlöes[i].
OL_SUPPLY_W_ID
,

417 
p‹dîlöes
[
i
].
OL_QUANTITY
,Ö‹dîlöes[i].
OL_AMOUNT
);

420 
i
++;

421 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥ﬁ
));

423 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ORDST: found (%d)\n", 
_tid
.
	`gë_lo
(), 
i
);

425 #ifde‡
PRINT_TRX_RESULTS


428 
¥ﬁ
->
	`¥öt_tu∂e
();

431 i‡(
p‹dîlöes
Ë
dñëe
 []Öorderlines;

432  
RCOK
;

433 
	}
}

436 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_payment.cpp

34 
	~"d‹a/çcc/d‹a_∑ymít.h
"

35 
	~"d‹a/çcc/d‹a_çcc.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gçcc
;

41 
ENTER_NAMESPACE
(
d‹a
);

58 
w_rc_t
 
	gmidway_∑y_rvp
::
	$_run
()

61 
föÆ_∑y_rvp
* 
‰vp
 = 
_±pc˚nv
->
	`√w_föÆ_∑y_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

64 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

67 
ös_hi°_∑y_a˘i⁄
* 
ös_hi°_∑y
 = 
_±pc˚nv
->
	`√w_ös_hi°_∑y_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_pö
);

68 
ös_hi°_∑y
->
	`po°£t
(
_awh
,
_adi°
);

69 
∑πôi⁄_t
<> 
	túpIm∂
;

70 
úpIm∂
* 
hi°_∑π
 = 
_±pc˚nv
->
	`decide_∑π
(_±pc˚nv->
	`his
(),
_pö
.
_home_wh_id
);

72 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

75 
	`CRITICAL_SECTION
(
his_∑π_cs
, 
hi°_∑π
->
_íqueue_lock
);

76 i‡(
hi°_∑π
->
	`íqueue
(
ös_hi°_∑y
,
_bWake
)) {

77 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing INS_HIST_PAY\n");

78 
	`as£π
 (0);

79  (
	`RC
(
de_PROBLEM_ENQUEUE
));

82  (
RCOK
);

83 
	}
}

94 
w_rc_t
 
	gföÆ_∑y_rvp
::
	$run
()

96  (
	`_run
());

97 
	}
}

99 
	gföÆ_∑y_rvp
::
	$upd_commôãd_°©s
()

101 
_±pc˚nv
->
	`_öc_∑ymít_©t
();

102 
	}
}

104 
	gföÆ_∑y_rvp
::
	$upd_ab‹ãd_°©s
()

106 
_±pc˚nv
->
	`_öc_∑ymít_Áûed
();

107 
	}
}

122 
	gupd_wh_∑y_a˘i⁄
::
	$ˇlc_keys
()

124 
_down
.
	`push_back
(
_pö
.
_home_wh_id
);

125 
	}
}

127 
w_rc_t
 
	gupd_wh_∑y_a˘i⁄
::
	$åx_exec
()

129 
	`as£π
 (
_±pc˚nv
);

132 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_±pc˚nv
->
	`w¨ehou£_m™
());

133 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`w¨ehou£_m™
()->
	`ts
());

134 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`w¨ehou£_desc
()->
	`maxsize
());

135 
¥wh
->
_ªp
 = &
¨ïrow
;

138 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:wh-idx-nl (%d)\n",

139 
_tid
.
	`gë_lo
(), 
_pö
.
_home_wh_id
);

140 
	`W_DO
(
_±pc˚nv
->
	`w¨ehou£_m™
()->
	`wh_ödex_¥obe_∆
(_±pc˚nv->
	`db
(), 
¥wh
,

141 
_pö
.
_home_wh_id
));

153 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:wh-update-ytd-nl (%d)\n",

154 
_tid
.
	`gë_lo
(), 
_pö
.
_home_wh_id
);

155 
	`W_DO
(
_±pc˚nv
->
	`w¨ehou£_m™
()->
	`wh_upd©e_ytd_∆
(_±pc˚nv->
	`db
(),

156 
¥wh
, 
_pö
.
_h_amou¡
));

158 
çcc_w¨ehou£_tu∂e
* 
awh
 = 
_m_rvp
->
	`wh
();

159 
¥wh
->
	`gë_vÆue
(1, 
awh
->
W_NAME
, 11);

160 
¥wh
->
	`gë_vÆue
(2, 
awh
->
W_STREET_1
, 21);

161 
¥wh
->
	`gë_vÆue
(3, 
awh
->
W_STREET_2
, 21);

162 
¥wh
->
	`gë_vÆue
(4, 
awh
->
W_CITY
, 21);

163 
¥wh
->
	`gë_vÆue
(5, 
awh
->
W_STATE
, 3);

164 
¥wh
->
	`gë_vÆue
(6, 
awh
->
W_ZIP
, 10);

166 #ifde‡
PRINT_TRX_RESULTS


169 
¥wh
->
	`¥öt_tu∂e
();

172  
RCOK
;

173 
	}
}

176 
	gupd_di°_∑y_a˘i⁄
::
	$ˇlc_keys
()

178 
_down
.
	`push_back
(
_pö
.
_home_wh_id
);

179 
_down
.
	`push_back
(
_pö
.
_home_d_id
);

180 
	}
}

182 
w_rc_t
 
	gupd_di°_∑y_a˘i⁄
::
	$åx_exec
()

184 
	`as£π
 (
_±pc˚nv
);

187 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_±pc˚nv
->
	`di°ri˘_m™
());

188 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`di°ri˘_m™
()->
	`ts
());

189 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`di°ri˘_desc
()->
	`maxsize
());

190 
¥di°
->
_ªp
 = &
¨ïrow
;

193 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:dist-idx-nl (%d) (%d)\n",

194 
_tid
.
	`gë_lo
(), 
_pö
.
_home_wh_id
, _pö.
_home_d_id
);

195 
	`W_DO
(
_±pc˚nv
->
	`di°ri˘_m™
()->
	`di°_ödex_¥obe_∆
(_±pc˚nv->
	`db
(), 
¥di°
,

196 
_pö
.
_home_wh_id
,

197 
_pö
.
_home_d_id
));

199 #ifde‡
ACCESS_RECORD_TRACE


200 
°rög°ªam
 
°
;

201 
di
 = 10*(
_pö
.
_home_wh_id
 - 1Ë+ _pö.
_home_d_id
;

202 
°
 << 
di
;

203 
_±pc˚nv
->
	`add_øt
(
°
.
	`°r
());

216 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:distr-upd-ytd-nl (%d) (%d)\n",

217 
_tid
.
	`gë_lo
(), 
_pö
.
_home_wh_id
, _pö.
_home_d_id
);

218 
	`W_DO
(
_±pc˚nv
->
	`di°ri˘_m™
()->
	`di°_upd©e_ytd_∆
(_±pc˚nv->
	`db
(),

219 
¥di°
, 
_pö
.
_h_amou¡
));

221 
çcc_di°ri˘_tu∂e
* 
adi°r
 = 
_m_rvp
->
	`di°
();

222 
¥di°
->
	`gë_vÆue
(2, 
adi°r
->
D_NAME
, 11);

223 
¥di°
->
	`gë_vÆue
(3, 
adi°r
->
D_STREET_1
, 21);

224 
¥di°
->
	`gë_vÆue
(4, 
adi°r
->
D_STREET_2
, 21);

225 
¥di°
->
	`gë_vÆue
(5, 
adi°r
->
D_CITY
, 21);

226 
¥di°
->
	`gë_vÆue
(6, 
adi°r
->
D_STATE
, 3);

227 
¥di°
->
	`gë_vÆue
(7, 
adi°r
->
D_ZIP
, 10);

229 #ifde‡
PRINT_TRX_RESULTS


232 
¥di°
->
	`¥öt_tu∂e
();

235  
RCOK
;

236 
	}
}

240 
	gupd_cu°_∑y_a˘i⁄
::
	$ˇlc_keys
()

242 
_down
.
	`push_back
(
_pö
.
_home_wh_id
);

243 
_down
.
	`push_back
(
_pö
.
_home_d_id
);

244 
	}
}

246 
w_rc_t
 
	gupd_cu°_∑y_a˘i⁄
::
	$åx_exec
()

248 
	`as£π
 (
_±pc˚nv
);

251 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_±pc˚nv
->
	`cu°omî_m™
());

252 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`ts
());

253 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`cu°omî_desc
()->
	`maxsize
());

254 
¥cu°
->
_ªp
 = &
¨ïrow
;

257 
c_w
 = 
_pö
.
_v_cu°_wh_£À˘i⁄
>85 ? _pö.
_home_wh_id
 : _pö.
_ªmŸe_wh_id
;

258 
c_d
 = 
_pö
.
_v_cu°_wh_£À˘i⁄
>85 ? _pö.
_home_d_id
 : _pö.
_ªmŸe_d_id
;

260 i‡(
_pö
.
_v_cu°_idít_£À˘i⁄
 <= 60) {

271 
	`as£π
 (
_pö
.
_v_cu°_idít_£À˘i⁄
 <= 60);

272 
	`as£π
 (
_pö
.
_c_id
 == 0);

274 
ªp_row_t
 
	`lowªp
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`ts
());

275 
ªp_row_t
 
	`highªp
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`ts
());

277 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-get-iter-by-name-index (%s)\n",

278 
_tid
.
	`gë_lo
(), 
_pö
.
_c_œ°
);

280 
gu¨d
<
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

282 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

283 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->

284 
	`cu°_gë_ôî_by_ödex_∆
(
_±pc˚nv
->
	`db
(), 
tmp_c_ôî
, 
¥cu°
,

285 
lowªp
, 
highªp
, 
c_w
, 
c_d
,

286 
_pö
.
_c_œ°
));

287 
c_ôî
 = 
tmp_c_ôî
;

290 
ve˘‹
<> 
v_c_id
;

291 
a_c_id
 = 0;

292 
cou¡
 = 0;

293 
boﬁ
 
eof
;

295 
	`W_DO
(
c_ôî
->
	`√xt
(
_±pc˚nv
->
	`db
(), 
eof
, *
¥cu°
));

296 !
eof
) {

297 
cou¡
++;

298 
¥cu°
->
	`gë_vÆue
(0, 
a_c_id
);

299 
v_c_id
.
	`push_back
(
a_c_id
);

301 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-iter-next (%d)\n",

302 
_tid
.
	`gë_lo
(), 
a_c_id
);

303 
	`W_DO
(
c_ôî
->
	`√xt
(
_±pc˚nv
->
	`db
(), 
eof
, *
¥cu°
));

305 
	`as£π
 (
cou¡
);

308 
_pö
.
_c_id
 = 
v_c_id
[(
cou¡
+1)/2-1];

310 
	`as£π
 (
_pö
.
_c_id
>0);

324 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-idx-probe-upd-nl (%d) (%d) (%d)\n",

325 
_tid
.
	`gë_lo
(), 
c_w
, 
c_d
, 
_pö
.
_c_id
);

326 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`cu°_ödex_¥obe_∆
(_±pc˚nv->
	`db
(), 
¥cu°
,

327 
c_w
, 
c_d
, 
_pö
.
_c_id
));

330 
çcc_cu°omî_tu∂e
 
acu°
;

331 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

332 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

333 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

334 
¥cu°
->
	`gë_vÆue
(6, 
acu°
.
C_STREET_1
, 21);

335 
¥cu°
->
	`gë_vÆue
(7, 
acu°
.
C_STREET_2
, 21);

336 
¥cu°
->
	`gë_vÆue
(8, 
acu°
.
C_CITY
, 21);

337 
¥cu°
->
	`gë_vÆue
(9, 
acu°
.
C_STATE
, 3);

338 
¥cu°
->
	`gë_vÆue
(10, 
acu°
.
C_ZIP
, 10);

339 
¥cu°
->
	`gë_vÆue
(11, 
acu°
.
C_PHONE
, 17);

340 
¥cu°
->
	`gë_vÆue
(12, 
acu°
.
C_SINCE
);

341 
¥cu°
->
	`gë_vÆue
(13, 
acu°
.
C_CREDIT
, 3);

342 
¥cu°
->
	`gë_vÆue
(14, 
acu°
.
C_CREDIT_LIM
);

343 
¥cu°
->
	`gë_vÆue
(15, 
acu°
.
C_DISCOUNT
);

344 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

345 
¥cu°
->
	`gë_vÆue
(17, 
acu°
.
C_YTD_PAYMENT
);

346 
¥cu°
->
	`gë_vÆue
(18, 
acu°
.
C_LAST_PAYMENT
);

347 
¥cu°
->
	`gë_vÆue
(19, 
acu°
.
C_PAYMENT_CNT
);

348 
¥cu°
->
	`gë_vÆue
(20, 
acu°
.
C_DATA_1
, 251);

349 
¥cu°
->
	`gë_vÆue
(21, 
acu°
.
C_DATA_2
, 251);

352 
acu°
.
C_BALANCE
 -
_pö
.
_h_amou¡
;

353 
acu°
.
C_YTD_PAYMENT
 +
_pö
.
_h_amou¡
;

354 
acu°
.
C_PAYMENT_CNT
++;

357 i‡(
acu°
.
C_CREDIT
[0] == 'B' &&ácust.C_CREDIT[1] == 'C') {

369 
c_√w_d©a_1
[251];

370 
c_√w_d©a_2
[251];

371 
	`•rötf
(
c_√w_d©a_1
, "%d,%d,%d,%d,%d,%1.2f",

372 
_pö
.
_c_id
, 
c_d
, 
c_w
, _pö.
_home_d_id
,

373 
_pö
.
_home_wh_id
, _pö.
_h_amou¡
);

375 
Àn
 = 
	`°æí
(
c_√w_d©a_1
);

376 
	`°∫ˇt
(
c_√w_d©a_1
, 
acu°
.
C_DATA_1
, 250-
Àn
);

377 
	`°∫˝y
(
c_√w_d©a_2
, &
acu°
.
C_DATA_1
[250-
Àn
],Üen);

378 
	`°∫˝y
(
c_√w_d©a_2
, 
acu°
.
C_DATA_2
, 250-
Àn
);

380 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:cu°-upd©e-tu∂e-∆\n",
_tid
.
	`gë_lo
());

381 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`cu°_upd©e_tu∂e_∆
(_±pc˚nv->
	`db
(),

382 
¥cu°
, 
acu°
,

383 
c_√w_d©a_1
,

384 
c_√w_d©a_2
));

386 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:cu°-upd©e-tu∂e-∆\n",
_tid
.
	`gë_lo
());

387 
	`W_DO
(
_±pc˚nv
->
	`cu°omî_m™
()->
	`cu°_upd©e_tu∂e_∆
(_±pc˚nv->
	`db
(),

388 
¥cu°
, 
acu°
, 
NULL
,

389 
NULL
));

392 
_m_rvp
->
_pö
.
_c_id
 = _pin._c_id;

395 #ifde‡
PRINT_TRX_RESULTS


398 
¥cu°
->
	`¥öt_tu∂e
();

401  
RCOK
;

402 
	}
}

406 
	gös_hi°_∑y_a˘i⁄
::
	$ˇlc_keys
()

408 
_down
.
	`push_back
(
_pö
.
_home_wh_id
);

409 
	}
}

411 
w_rc_t
 
	gös_hi°_∑y_a˘i⁄
::
	$åx_exec
()

413 
	`as£π
 (
_±pc˚nv
);

416 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥hi°
(
_±pc˚nv
->
	`hi°‹y_m™
());

417 
ªp_row_t
 
	`¨ïrow
(
_±pc˚nv
->
	`hi°‹y_m™
()->
	`ts
());

418 
¨ïrow
.
	`£t
(
_±pc˚nv
->
	`hi°‹y_desc
()->
	`maxsize
());

419 
¥hi°
->
_ªp
 = &
¨ïrow
;

422 
c_w
 = 
_pö
.
_v_cu°_wh_£À˘i⁄
>85 ? _pö.
_home_wh_id
 : _pö.
_ªmŸe_wh_id
;

423 
c_d
 = 
_pö
.
_v_cu°_wh_£À˘i⁄
>85 ? _pö.
_home_d_id
 : _pö.
_ªmŸe_d_id
;

430 
çcc_hi°‹y_tu∂e
 
ahi°
;

431 
	`•rötf
(
ahi°
.
H_DATA
, "%† %s", 
_awh
.
W_NAME
, 
_adi°
.
D_NAME
);

432 
ahi°
.
H_DATE
 = 
	`time
(
NULL
);

434 
¥hi°
->
	`£t_vÆue
(0, 
_pö
.
_c_id
);

435 
¥hi°
->
	`£t_vÆue
(1, 
c_d
);

436 
¥hi°
->
	`£t_vÆue
(2, 
c_w
);

437 
¥hi°
->
	`£t_vÆue
(3, 
_pö
.
_home_d_id
);

438 
¥hi°
->
	`£t_vÆue
(4, 
_pö
.
_home_wh_id
);

439 
¥hi°
->
	`£t_vÆue
(5, 
ahi°
.
H_DATE
);

440 
¥hi°
->
	`£t_vÆue
(6, 
_pö
.
_h_amou¡
 * 100.0);

441 
¥hi°
->
	`£t_vÆue
(7, 
ahi°
.
H_DATA
);

443 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:hi°-add-tu∂e\n", 
_tid
.
	`gë_lo
());

444 
	`W_DO
(
_±pc˚nv
->
	`hi°‹y_m™
()->
	`add_tu∂e
(_±pc˚nv->
	`db
(), 
¥hi°
, 
NL
));

446 #ifde‡
PRINT_TRX_RESULTS


449 
¥hi°
->
	`¥öt_tu∂e
();

452  
RCOK
;

453 
	}
}

456 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_stock_level.cpp

34 
	~"d‹a/çcc/d‹a_°ock_Àvñ.h
"

35 
	~"d‹a/çcc/d‹a_çcc.h
"

37 
usög
 
«me•a˚
 
	gd‹a
;

38 
usög
 
«me•a˚
 
	gsh‹e
;

39 
usög
 
«me•a˚
 
	gçcc
;

42 
ENTER_NAMESPACE
(
d‹a
);

56 
DEFINE_DORA_FINAL_RVP_CLASS
(
föÆ_°ock_rvp
,
°ock_Àvñ
);

66 
w_rc_t
 
	gmid1_°ock_rvp
::
	$_run
()

69 
mid2_°ock_rvp
* 
rvp2
 = 
_≥nv
->
	`√w_mid2_°ock_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_ö
,
_a˘i⁄s
,
_bWake
);

72 
	`CHECK_MIDWAY_RVP_ABORTED
(
rvp2
);

75 
r_ﬁ_°ock_a˘i⁄
* 
r_ﬁ_°ock
 = 
_≥nv
->
	`√w_r_ﬁ_°ock_a˘i⁄
(
_x˘
,
_tid
,
rvp2
,
_ö
);

77 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

78 
∑πôi⁄_t
<> 
	túpIm∂
;

81 
úpIm∂
* 
ﬁ_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`ﬁi
(),
_ö
.
_wh_id
);

84 
	`CRITICAL_SECTION
(
ﬁi_∑π_cs
, 
ﬁ_∑π
->
_íqueue_lock
);

85 i‡(
ﬁ_∑π
->
	`íqueue
(
r_ﬁ_°ock
,
_bWake
)) {

86 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_OL_STOCK\n");

87 
	`as£π
 (0);

88  (
	`RC
(
de_PROBLEM_ENQUEUE
));

90  (
RCOK
);

92 
	}
}

102 
w_rc_t
 
	gmid2_°ock_rvp
::
	$_run
()

105 
föÆ_°ock_rvp
* 
‰vp
 = 
_≥nv
->
	`√w_föÆ_°ock_rvp
(
_x˘
,
_tid
,
_x˘_id
,
_ªsu…
,
_a˘i⁄s
);

108 
	`CHECK_MIDWAY_RVP_ABORTED
(
‰vp
);

111 
r_°_°ock_a˘i⁄
* 
r_°
 = 
_≥nv
->
	`√w_r_°_°ock_a˘i⁄
(
_x˘
,
_tid
,
‰vp
,
_ö
);

113 
	`TRACE
–
TRACE_TRX_FLOW
, "Nexàpha£ (%d)\n", 
_tid
.
	`gë_lo
());

114 
∑πôi⁄_t
<> 
	túpIm∂
;

117 
úpIm∂
* 
my_°_∑π
 = 
_≥nv
->
	`decide_∑π
(_≥nv->
	`°o
(),
_ö
.
_wh_id
);

120 
	`CRITICAL_SECTION
(
°o_∑π_cs
, 
my_°_∑π
->
_íqueue_lock
);

121 i‡(
my_°_∑π
->
	`íqueue
(
r_°
,
_bWake
)) {

122 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_ST_STOCK\n");

123 
	`as£π
 (0);

124  (
	`RC
(
de_PROBLEM_ENQUEUE
));

127  (
RCOK
);

128 
	}
}

141 
	gr_di°_°ock_a˘i⁄
::
	$ˇlc_keys
()

143 
	`£t_ªad_⁄ly
();

144 
_down
.
	`push_back
(
_ö
.
_wh_id
);

145 
_down
.
	`push_back
(
_ö
.
_d_id
);

146 
	}
}

148 
w_rc_t
 
	gr_di°_°ock_a˘i⁄
::
	$åx_exec
()

150 
	`as£π
 (
_≥nv
);

153 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_≥nv
->
	`di°ri˘_m™
());

155 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`di°ri˘_m™
()->
	`ts
());

156 
¨ïrow
.
	`£t
(
_≥nv
->
	`di°ri˘_desc
()->
	`maxsize
());

157 
¥di°
->
_ªp
 = &
¨ïrow
;

159 
w_id
 = 
_ö
.
_wh_id
;

160 
d_id
 = 
_ö
.
_d_id
;

171 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:dist-idx-probe (%d) (%d)\n",

172 
_tid
.
	`gë_lo
(), 
w_id
, 
d_id
);

173 
	`W_DO
(
_≥nv
->
	`di°ri˘_m™
()->
	`di°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥di°
,

174 
w_id
, 
d_id
));

177 
√xt_o_id
 = 0;

178 
¥di°
->
	`gë_vÆue
(10, 
√xt_o_id
);

180 
_¥vp
->
_ö
.
_√xt_o_id
 = 
√xt_o_id
;

182 #ifde‡
PRINT_TRX_RESULTS


185 
¥di°
->
	`¥öt_tu∂e
();

188  
RCOK
;

189 
	}
}

193 
	gr_ﬁ_°ock_a˘i⁄
::
	$ˇlc_keys
()

195 
	`£t_ªad_⁄ly
();

196 
_down
.
	`push_back
(
_ö
.
_wh_id
);

197 
_down
.
	`push_back
(
_ö
.
_d_id
);

198 
	}
}

200 
w_rc_t
 
	gr_ﬁ_°ock_a˘i⁄
::
	$åx_exec
()

202 
	`as£π
 (
_≥nv
);

205 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_≥nv
->
	`‹dî_löe_m™
());

207 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

208 
¨ïrow
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

209 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

211 
ªp_row_t
 
	`lowªp
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

212 
lowªp
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

214 
ªp_row_t
 
	`highªp
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

215 
highªp
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

217 
ªp_row_t
 
	`s‹åï
(
_≥nv
->
	`‹dî_löe_m™
()->
	`ts
());

218 
s‹åï
.
	`£t
(
_≥nv
->
	`‹dî_löe_desc
()->
	`maxsize
());

220 
asc_s‹t_buf„r_t
 
	`ﬁ_li°
(4);

221 
ﬁ_li°
.
	`£tup
(0, 
SQL_INT
);

222 
ﬁ_li°
.
	`£tup
(1, 
SQL_INT
);

223 
ﬁ_li°
.
	`£tup
(2, 
SQL_INT
);

224 
ﬁ_li°
.
	`£tup
(3, 
SQL_INT
);

225 
asc_s‹t_m™_im∂
 
	`ﬁ_s‹ãr
(&
ﬁ_li°
, &
s‹åï
);

226 
èbÀ_row_t
 
	`rsb
(&
ﬁ_li°
);

228 
boﬁ
 
eof
;

230 
w_id
 = 
_ö
.
_wh_id
;

231 
d_id
 = 
_ö
.
_d_id
;

232 
i_id
 = -1;

253 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:ol-iter-by-idx (%d) (%d) (%d) (%d)\n",

254 
_tid
.
	`gë_lo
(), 
w_id
, 
d_id
, 
_ö
.
_√xt_o_id
-20, _in._next_o_id);

256 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
> > 
ﬁ_ôî
;

258 
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
>* 
tmp_ﬁ_ôî
;

259 
	`W_DO
(
_≥nv
->
	`‹dî_löe_m™
()->

260 
	`ﬁ_gë_ønge_ôî_by_ödex_∆
(
_≥nv
->
	`db
(), 
tmp_ﬁ_ôî
, 
¥ﬁ
, 
lowªp
,

261 
highªp
, 
w_id
, 
d_id
, 
_ö
.
_√xt_o_id
-20,

262 
_ö
.
_√xt_o_id
));

263 
ﬁ_ôî
 = 
tmp_ﬁ_ôî
;

267 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥ﬁ
));

268 !
eof
) {

270 
ãmp_oid
, 
ãmp_iid
;

271 
ãmp_wid
, 
ãmp_did
;

273 
¥ﬁ
->
	`gë_vÆue
(4, 
ãmp_iid
);

274 
¥ﬁ
->
	`gë_vÆue
(0, 
ãmp_oid
);

275 
¥ﬁ
->
	`gë_vÆue
(2, 
ãmp_wid
);

276 
¥ﬁ
->
	`gë_vÆue
(1, 
ãmp_did
);

278 
rsb
.
	`£t_vÆue
(0, 
ãmp_iid
);

279 
rsb
.
	`£t_vÆue
(1, 
ãmp_wid
);

280 
rsb
.
	`£t_vÆue
(2, 
ãmp_did
);

281 
rsb
.
	`£t_vÆue
(3, 
ãmp_oid
);

283 
ﬁ_s‹ãr
.
	`add_tu∂e
(
rsb
);

285 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:ol-iter-next (%d) (%d) (%d) (%d)\n",

286 
_tid
.
	`gë_lo
(), 
ãmp_wid
, 
ãmp_did
, 
ãmp_oid
, 
ãmp_iid
);

287 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_≥nv
->
	`db
(), 
eof
, *
¥ﬁ
));

289 
	`as£π
 (
ﬁ_s‹ãr
.
	`cou¡
());

292 
asc_s‹t_ôî_im∂
 
	`ﬁ_li°_s‹t_ôî
(
_≥nv
->
	`db
(), &
ﬁ_li°
, &
ﬁ_s‹ãr
);

295 
	`as£π
 (
_¥vp
->
_ö
.
_pvwi
 =
NULL
);

296 
_¥vp
->
_ö
.
_pvwi
 = 
√w
 
	`TwoI¡Vec
();

297 
	`as£π
 (
_¥vp
->
_ö
.
_pvwi
);

298 
_¥vp
->
_ö
.
_pvwi
->
	`ª£rve
(
ﬁ_s‹ãr
.
	`cou¡
());

300 
	`W_DO
(
ﬁ_li°_s‹t_ôî
.
	`√xt
(
_≥nv
->
	`db
(), 
eof
, 
rsb
));

302 !
eof
) {

304 
rsb
.
	`gë_vÆue
(0, 
i_id
);

305 
rsb
.
	`gë_vÆue
(1, 
w_id
);

307 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:st-idx-probe (%d) (%d)\n",

308 
_tid
.
	`gë_lo
(), 
w_id
, 
i_id
);

311 
_¥vp
->
_ö
.
_pvwi
->
	`push_back
(
∑ú
<,>(
w_id
,
i_id
));

313 
	`W_DO
(
ﬁ_li°_s‹t_ôî
.
	`√xt
(
_≥nv
->
	`db
(), 
eof
, 
rsb
));

316 #ifde‡
PRINT_TRX_RESULTS


319 
¥ﬁ
->
	`¥öt_tu∂e
();

322  
RCOK
;

323 
	}
}

327 
	gr_°_°ock_a˘i⁄
::
	$ˇlc_keys
()

329 
	`£t_ªad_⁄ly
();

330 
_down
.
	`push_back
(
_ö
.
_wh_id
);

331 
	}
}

333 
w_rc_t
 
	gr_°_°ock_a˘i⁄
::
	$åx_exec
()

335 
	`as£π
 (
_≥nv
);

338 
tu∂e_gu¨d
<
°ock_m™_im∂
> 
	`¥°
(
_≥nv
->
	`°ock_m™
());

340 
ªp_row_t
 
	`¨ïrow
(
_≥nv
->
	`°ock_m™
()->
	`ts
());

341 
¨ïrow
.
	`£t
(
_≥nv
->
	`°ock_desc
()->
	`maxsize
());

342 
¥°
->
_ªp
 = &
¨ïrow
;

344 
öput_w_id
 = 
_ö
.
_wh_id
;

345 
w_id
 = 0;

346 
i_id
 = 0;

347 
qu™tôy
 = 0;

348 
œ°_i_id
 = -1;

349 
cou¡
 = 0;

352 
	`as£π
 (
_ö
.
_pvwi
);

353 
TwoI¡VecIt
 
ô
 = 
_ö
.
_pvwi
->
	`begö
(); ià!_ö._pvwi->
	`íd
(); ++it) {

355 
w_id
 = (*
ô
).
fú°
;

356 
i_id
 = (*
ô
).
£c⁄d
;

359 
	`as£π
 (
öput_w_id
 =
w_id
);

361 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:st-idx-probe-nl (%d) (%d)\n",

362 
_tid
.
	`gë_lo
(), 
w_id
, 
i_id
);

365 
	`W_DO
(
_≥nv
->
	`°ock_m™
()->
	`°_ödex_¥obe_∆
(_≥nv->
	`db
(), 
¥°
,

366 
w_id
, 
i_id
));

369 
¥°
->
	`gë_vÆue
(3, 
qu™tôy
);

371 i‡(
qu™tôy
 < 
_ö
.
_thªshﬁd
) {

379 i‡(
œ°_i_id
 !
i_id
) {

380 
œ°_i_id
 = 
i_id
;

381 
cou¡
++;

384 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:found-one (%d) (%d) (%d) (%d)\n",

385 
_tid
.
	`gë_lo
(), 
w_id
, 
i_id
, 
qu™tôy
, 
cou¡
);

389 #ifde‡
PRINT_TRX_RESULTS


392 
¥°
->
	`¥öt_tu∂e
();

396 i‡(
_ö
.
_pvwi
Ë{ 
	`dñëe
 (_ö._pvwi); _ö._pvwò
NULL
; }

398  
RCOK
;

399 
	}
}

402 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_tpcc.cpp

31 
	~"és.h
"

33 
	~"d‹a/çcc/d‹a_çcc.h
"

35 
	~"d‹a/çcc/d‹a_mbích.h
"

36 
	~"d‹a/çcc/d‹a_∑ymít.h
"

37 
	~"d‹a/çcc/d‹a_‹dî_°©us.h
"

38 
	~"d‹a/çcc/d‹a_°ock_Àvñ.h
"

39 
	~"d‹a/çcc/d‹a_dñivîy.h
"

40 
	~"d‹a/çcc/d‹a_√w_‹dî.h
"

42 
usög
 
«me•a˚
 
	gsh‹e
;

43 
usög
 
«me•a˚
 
	gçcc
;

46 
ENTER_NAMESPACE
(
d‹a
);

51 c⁄° 
uöt
 
	gwhs_IRP_KEY
 = 1;

52 c⁄° 
uöt
 
	gdis_IRP_KEY
 = 2;

53 c⁄° 
uöt
 
	gcus_IRP_KEY
 = 3;

54 c⁄° 
uöt
 
	ghis_IRP_KEY
 = 6;

55 c⁄° 
uöt
 
	gn‹_IRP_KEY
 = 3;

56 c⁄° 
uöt
 
	g‹d_IRP_KEY
 = 4;

57 c⁄° 
uöt
 
	gôe_IRP_KEY
 = 1;

58 c⁄° 
uöt
 
	gﬁi_IRP_KEY
 = 4;

59 c⁄° 
uöt
 
	g°o_IRP_KEY
 = 2;

62 c⁄° 
uöt
 
	gwhs_KEY_EST
 = 100;

63 c⁄° 
uöt
 
	gdis_KEY_EST
 = 1000;

64 c⁄° 
uöt
 
	gcus_KEY_EST
 = 1000;

65 c⁄° 
uöt
 
	ghis_KEY_EST
 = 1000;

66 c⁄° 
uöt
 
	gn‹_KEY_EST
 = 1000;

67 c⁄° 
uöt
 
	g‹d_KEY_EST
 = 1000;

68 c⁄° 
uöt
 
	gôe_KEY_EST
 = 1000;

69 c⁄° 
uöt
 
	gﬁi_KEY_EST
 = 1000;

70 c⁄° 
uöt
 
	g°o_KEY_EST
 = 1000;

82 
	gD‹aTPCCEnv
::
	$D‹aTPCCEnv
()

83 : 
	$Sh‹eTPCCEnv
()

85 
	`upd©e_pd
(
this
);

86 
	}
}

88 
	gD‹aTPCCEnv
::~
	$D‹aTPCCEnv
()

90 
	`°›
();

91 
	}
}

108 
	gD‹aTPCCEnv
::
	$°¨t
()

114 
	`c⁄f
();

115 
¥o˚ss‹id_t
 
	`i˝u
(
_°¨tög_˝u
);

118 
	`GENERATE_DORA_PARTS
(
whs
,
w¨ehou£
);

121 
	`GENERATE_DORA_PARTS
(
dis
,
di°ri˘
);

124 
	`GENERATE_DORA_PARTS
(
his
,
hi°‹y
);

127 
	`GENERATE_DORA_PARTS
(
cus
,
cu°omî
);

130 
	`GENERATE_DORA_PARTS
(
n‹
,
√w_‹dî
);

133 
	`GENERATE_DORA_PARTS
(
‹d
,
‹dî
);

136 
	`GENERATE_DORA_PARTS
(
ôe
,
ôem
);

139 
	`GENERATE_DORA_PARTS
(
ﬁi
,
‹dî_löe
);

142 
	`GENERATE_DORA_PARTS
(
°o
,
°ock
);

145 
D‹aEnv
::
	`_po°_°¨t
(
this
);

147 
	}
}

159 
w_rc_t
 
	gD‹aTPCCEnv
::
	$upd©e_∑πôi⁄ög
()

164 
	`c⁄f
();

167 
möKeyVÆ
 = 1;

168 
maxKeyVÆ
 = 
	`gë_sf
()+1;

170 * 
möKey
 = (*)
	`mÆloc
(());

171 
	`mem£t
(
möKey
,0,());

172 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

174 * 
maxKey
 = (*)
	`mÆloc
(());

175 
	`mem£t
(
maxKey
,0,());

176 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

179 #w¨nög !!! 
IP
: 
To
 
have
 
ªÆ
 
PLP
, 
the
 
∑πôi⁄ög
 
öfo
 
should
 
be
 
decou∂ed
 
by
Åhê
‹dî
 
ö
Åhê
¥efix
 
åì
 !!!

200 
_pw¨ehou£_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_whs
);

201 
_pdi°ri˘_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_dis
);

202 
_pcu°omî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_cus
);

203 
_≤ew_‹dî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_n‹
);

204 
_p‹dî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_‹d
);

205 
_p‹dî_löe_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_ﬁi
);

206 
_phi°‹y_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_his
);

207 
_p°ock_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_°o
);

210 
maxKeyVÆ
 = 
ITEMS
 + 1;

211 
	`mem£t
(
maxKey
,0,());

212 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

213 
_pôem_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
_∑πs_ôe
);

215 
	`‰ì
 (
möKey
);

216 
	`‰ì
 (
maxKey
);

218  (
RCOK
);

219 
	}
}

231 
	gD‹aTPCCEnv
::
	$°›
()

233  (
D‹aEnv
::
	`_po°_°›
(
this
));

234 
	}
}

245 
	gD‹aTPCCEnv
::
	$ªsume
()

247 
	`as£π
 (0);

248 
	`£t_dbc
(
DBC_ACTIVE
);

250 
	}
}

261 
	gD‹aTPCCEnv
::
	$∑u£
()

263 
	`as£π
 (0);

264 
	`£t_dbc
(
DBC_PAUSED
);

266 
	}
}

277 
	gD‹aTPCCEnv
::
	$c⁄f
()

279 
Sh‹eTPCCEnv
::
	`c⁄f
();

280 
	`_check_ty≥
();

281 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

284 
_˝u_ønge
 = 
	`gë_a˘ive_˝u_cou¡
();

285 
_°¨tög_˝u
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-°¨tög",
DF_CPU_STEP_PARTITIONS
);

286 
_˝u_èbÀ_°ï
 = 
ev
->
	`gëV¨I¡
("d‹a-˝u-èbÀ-°ï",
DF_CPU_STEP_TABLES
);

304 
uöt
 
ªc‹dE°im©i⁄
 = 
	`gë_sf
();

305 
whs_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-whs",0);

306 
_∑πs_whs
 = ( 
whs_PîCPU
>0 ? (
_˝u_ønge
 * whs_PerCPU) : 1);

307 
_∑πs_whs
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_whs);

311 
dis_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-dis",0);

312 
_∑πs_dis
 = ( 
dis_PîCPU
>0 ? (
_˝u_ønge
 * dis_PerCPU) : 1);

313 
_∑πs_dis
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_dis);

317 
cus_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-cus",0);

318 
_∑πs_cus
 = ( 
cus_PîCPU
>0 ? (
_˝u_ønge
 * cus_PerCPU) : 1);

319 
_∑πs_cus
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_cus);

324 
n‹_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-nor",0);

325 
_∑πs_n‹
 = ( 
n‹_PîCPU
>0 ? (
_˝u_ønge
 *Çor_PerCPU) : 1);

326 
_∑πs_n‹
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_nor);

330 
‹d_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-ord",0);

331 
_∑πs_‹d
 = ( 
‹d_PîCPU
>0 ? (
_˝u_ønge
 * ord_PerCPU) : 1);

332 
_∑πs_‹d
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_ord);

336 
ﬁi_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-oli",0);

337 
_∑πs_ﬁi
 = ( 
ﬁi_PîCPU
>0 ? (
_˝u_ønge
 * oli_PerCPU) : 1);

338 
_∑πs_ﬁi
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_oli);

343 
his_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-his",0);

344 
_∑πs_his
 = ( 
his_PîCPU
>0 ? (
_˝u_ønge
 * his_PerCPU) : 1);

345 
_∑πs_his
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_his);

349 
°o_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-sto",0);

350 
_∑πs_°o
 = ( 
whs_PîCPU
>0 ? (
_˝u_ønge
 * 
°o_PîCPU
) : 1);

351 
_∑πs_°o
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_sto);

354 
ªc‹dE°im©i⁄
 = 
ITEMS
;

355 
ôe_PîCPU
 = 
ev
->
	`gëV¨DoubÀ
("dora-ratio-tpcc-ite",0);

356 
_∑πs_ôe
 = ( 
ôe_PîCPU
>0 ? (
_˝u_ønge
 * ite_PerCPU) : 1);

357 
_∑πs_ôe
 = 
°d
::
	`mö
(
ªc‹dE°im©i⁄
,_parts_ite);

360 
	`TRACE
–
TRACE_STATISTICS
,"TotalÇumber ofÖartitions (%d)\n",

361 (
_∑πs_whs
+
_∑πs_dis
+
_∑πs_cus
+
_∑πs_n‹
+

362 
_∑πs_‹d
+
_∑πs_ﬁi
+
_∑πs_his
+
_∑πs_ôe
+

363 
_∑πs_°o
));

366 
	}
}

377 
w_rc_t
 
	gD‹aTPCCEnv
::
	$√wrun
()

379  (
D‹aEnv
::
	`_√wrun
(
this
));

380 
	}
}

391 
	gD‹aTPCCEnv
::
	$dump
()

393  (
D‹aEnv
::
	`_dump
(
this
));

394 
	}
}

405 
	gD‹aTPCCEnv
::
	$öfo
() const

407  (
D‹aEnv
::
	`_öfo
(
this
));

408 
	}
}

419 
	gD‹aTPCCEnv
::
	$°©i°ics
()

421 
D‹aEnv
::
	`_°©i°ics
(
this
);

424 
	`TRACE
–
TRACE_STATISTICS
, "----- TPCC -----\n");

425 
Sh‹eTPCCEnv
::
	`°©i°ics
();

427 
	}
}

440 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_mb_rvp
,
D‹aTPCCEnv
);

442 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_wh_mb_a˘i⁄
,
rvp_t
,
mbích_wh_öput_t
,,
D‹aTPCCEnv
);

443 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_cu°_mb_a˘i⁄
,
rvp_t
,
mbích_cu°_öput_t
,,
D‹aTPCCEnv
);

451 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
midway_∑y_rvp
,
∑ymít_öput_t
,
D‹aTPCCEnv
);

452 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_∑y_rvp
,
D‹aTPCCEnv
);

455 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_wh_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
,,
D‹aTPCCEnv
);

456 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_di°_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
,,
D‹aTPCCEnv
);

457 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_cu°_∑y_a˘i⁄
,
midway_∑y_rvp
,
∑ymít_öput_t
,,
D‹aTPCCEnv
);

459 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_hi°_∑y_a˘i⁄
,
rvp_t
,
∑ymít_öput_t
,,
D‹aTPCCEnv
);

472 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_‹d°_rvp
,
‹dî_°©us_öput_t
,
D‹aTPCCEnv
);

474 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_‹d°_rvp
,
‹dî_°©us_öput_t
,
D‹aTPCCEnv
);

476 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_‹d°_rvp
,
D‹aTPCCEnv
);

478 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_cu°_‹d°_a˘i⁄
,
mid1_‹d°_rvp
,
‹dî_°©us_öput_t
,,
D‹aTPCCEnv
);

479 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_‹d_‹d°_a˘i⁄
,
mid2_‹d°_rvp
,
‹dî_°©us_öput_t
,,
D‹aTPCCEnv
);

481 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_ﬁ_‹d°_a˘i⁄
,
rvp_t
,
‹dî_°©us_öput_t
,,
D‹aTPCCEnv
);

493 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_°ock_rvp
,
°ock_Àvñ_öput_t
,
D‹aTPCCEnv
);

494 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_°ock_rvp
,
°ock_Àvñ_öput_t
,
D‹aTPCCEnv
);

496 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_°ock_rvp
,
D‹aTPCCEnv
);

499 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_di°_°ock_a˘i⁄
,
mid1_°ock_rvp
,
°ock_Àvñ_öput_t
,,
D‹aTPCCEnv
);

500 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_ﬁ_°ock_a˘i⁄
,
mid2_°ock_rvp
,
°ock_Àvñ_öput_t
,,
D‹aTPCCEnv
);

502 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_°_°ock_a˘i⁄
,
rvp_t
,
°ock_Àvñ_öput_t
,,
D‹aTPCCEnv
);

514 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_dñ_rvp
,
dñivîy_öput_t
,
D‹aTPCCEnv
);

518 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_dñ_rvp
,
dñivîy_öput_t
,
D‹aTPCCEnv
);

522 
DEFINE_DORA_FINAL_RVP_GEN_FUNC
(
föÆ_dñ_rvp
,
D‹aTPCCEnv
);

525 
DEFINE_DORA_ACTION_GEN_FUNC
(
dñ_n‹d_dñ_a˘i⁄
,
mid1_dñ_rvp
,
dñivîy_öput_t
,,
D‹aTPCCEnv
);

528 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_‹d_dñ_a˘i⁄
,
mid2_dñ_rvp
,
dñivîy_öput_t
,,
D‹aTPCCEnv
);

532 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_ﬁöe_dñ_a˘i⁄
,
mid2_dñ_rvp
,
dñivîy_öput_t
,,
D‹aTPCCEnv
);

536 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_cu°_dñ_a˘i⁄
,
rvp_t
,
dñivîy_öput_t
,,
D‹aTPCCEnv
);

552 
DEFINE_DORA_MIDWAY_RVP_GEN_FUNC
(
mid1_n‹d_rvp
,
√w_‹dî_öput_t
,
D‹aTPCCEnv
);

554 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid2_n‹d_rvp
,
√w_‹dî_öput_t
,
D‹aTPCCEnv
);

556 
DEFINE_DORA_MIDWAY_RVP_WITH_PREV_GEN_FUNC
(
mid3_n‹d_rvp
,
√w_‹dî_öput_t
,
D‹aTPCCEnv
);

558 
DEFINE_DORA_FINAL_RVP_WITH_PREV_GEN_FUNC
(
föÆ_n‹d_rvp
,
D‹aTPCCEnv
);

562 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_wh_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,,
D‹aTPCCEnv
);

564 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_di°_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,,
D‹aTPCCEnv
);

566 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_cu°_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
no_ôem_n‹d_öput_t
,,
D‹aTPCCEnv
);

568 
DEFINE_DORA_ACTION_GEN_FUNC
(
r_ôem_n‹d_a˘i⁄
,
mid1_n‹d_rvp
,
√w_‹dî_öput_t
,,
D‹aTPCCEnv
);

572 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_‹d_n‹d_a˘i⁄
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
,,
D‹aTPCCEnv
);

574 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_n‹d_n‹d_a˘i⁄
,
mid2_n‹d_rvp
,
no_ôem_n‹d_öput_t
,,
D‹aTPCCEnv
);

578 
DEFINE_DORA_ACTION_GEN_FUNC
(
ös_ﬁ_n‹d_a˘i⁄
,
mid3_n‹d_rvp
,
√w_‹dî_öput_t
,,
D‹aTPCCEnv
);

582 
DEFINE_DORA_ACTION_GEN_FUNC
(
upd_°o_n‹d_a˘i⁄
,
rvp_t
,
√w_‹dî_öput_t
,,
D‹aTPCCEnv
);

590 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_tpcc_client.cpp

31 
	~"d‹a/çcc/d‹a_çcc_˛õ¡.h
"

34 
ENTER_NAMESPACE
(
d‹a
);

37 c⁄° 
	gXCT_DORA_MIX
 = 100;

38 c⁄° 
	gXCT_DORA_NEW_ORDER
 = 101;

39 c⁄° 
	gXCT_DORA_PAYMENT
 = 102;

40 c⁄° 
	gXCT_DORA_ORDER_STATUS
 = 103;

41 c⁄° 
	gXCT_DORA_DELIVERY
 = 104;

42 c⁄° 
	gXCT_DORA_STOCK_LEVEL
 = 105;

44 c⁄° 
	gXCT_DORA_LITTLE_MIX
 = 109;

46 c⁄° 
	gXCT_DORA_MBENCH_WH
 = 111;

47 c⁄° 
	gXCT_DORA_MBENCH_CUST
 = 112;

56 
	gd‹a_çcc_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

59 
°m≠
.
	`˛ór
();

62 
°m≠
[
XCT_DORA_MIX
] = "DORA-TPCC-Mix";

63 
°m≠
[
XCT_DORA_NEW_ORDER
] = "DORA-TPCC-NewOrder";

64 
°m≠
[
XCT_DORA_PAYMENT
] = "DORA-TPCC-Payment";

65 
°m≠
[
XCT_DORA_ORDER_STATUS
] = "DORA-TPCC-OrderStatus";

66 
°m≠
[
XCT_DORA_DELIVERY
] = "DORA-TPCC-Delivery";

67 
°m≠
[
XCT_DORA_STOCK_LEVEL
] = "DORA-TPCC-StockLevel";

70 
°m≠
[
XCT_DORA_LITTLE_MIX
] = "DORA-TPCC-LittleMix";

73 
°m≠
[
XCT_DORA_MBENCH_WH
] = "DORA-TPCC-MBench-WHs";

74 
°m≠
[
XCT_DORA_MBENCH_CUST
] = "DORA-TPCC-MBench-CUSTs";

76  (
°m≠
.
	`size
());

77 
	}
}

90 
w_rc_t
 
	gd‹a_çcc_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

93 
boﬁ
 
bWake
 = 
Ál£
;

94 i‡(
x˘_ty≥
 =
XCT_DORA_MIX
) {

95 
x˘_ty≥
 = 
XCT_DORA_MIX
 + 
	`øndom_x˘_ty≥
(
	`ønd
(100));

96 
bWake
 = 
åue
;

100 
whid
 = 
_wh
;

101 i‡(
_wh
==0) {

102 
whid
 = 
	`UR™d
(1,
_qf
);

103 
bWake
 = 
åue
;

106 
åx_ªsu…_tu∂e_t
 
©π
;

107 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

108 
©π
.
	`£t_nŸify
(
c
);

109 
bWake
 = 
åue
;

112 
x˘_ty≥
) {

115 
XCT_DORA_NEW_ORDER
:

116  (
_çccdb
->
	`d‹a_√w_‹dî
(
x˘id
,
©π
,
whid
,
bWake
));

117 
XCT_DORA_PAYMENT
:

118  (
_çccdb
->
	`d‹a_∑ymít
(
x˘id
,
©π
,
whid
,
bWake
));

119 
XCT_DORA_ORDER_STATUS
:

120  (
_çccdb
->
	`d‹a_‹dî_°©us
(
x˘id
,
©π
,
whid
,
bWake
));

121 
XCT_DORA_DELIVERY
:

122  (
_çccdb
->
	`d‹a_dñivîy
(
x˘id
,
©π
,
whid
,
bWake
));

123 
XCT_DORA_STOCK_LEVEL
:

124  (
_çccdb
->
	`d‹a_°ock_Àvñ
(
x˘id
,
©π
,
whid
,
bWake
));

127 
XCT_DORA_LITTLE_MIX
:

128 i‡(
	`UR™d
(1,100)>50)

129  (
_çccdb
->
	`d‹a_√w_‹dî
(
x˘id
,
©π
,
whid
,
åue
));

131  (
_çccdb
->
	`d‹a_∑ymít
(
x˘id
,
©π
,
whid
,
åue
));

134 
XCT_DORA_MBENCH_WH
:

135  (
_çccdb
->
	`d‹a_mbích_wh
(
x˘id
,
©π
,
whid
,
bWake
));

136 
XCT_DORA_MBENCH_CUST
:

137  (
_çccdb
->
	`d‹a_mbích_cu°
(
x˘id
,
©π
,
whid
,
bWake
));

140 
	`as£π
 (0);

142  (
RCOK
);

143 
	}
}

145 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/tpcc/dora_tpcc_xct.cpp

31 
	~"d‹a/çcc/d‹a_mbích.h
"

32 
	~"d‹a/çcc/d‹a_∑ymít.h
"

33 
	~"d‹a/çcc/d‹a_‹dî_°©us.h
"

34 
	~"d‹a/çcc/d‹a_°ock_Àvñ.h
"

35 
	~"d‹a/çcc/d‹a_dñivîy.h
"

36 
	~"d‹a/çcc/d‹a_√w_‹dî.h
"

38 
	~"d‹a/çcc/d‹a_çcc.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

41 
usög
 
«me•a˚
 
	gçcc
;

44 
ENTER_NAMESPACE
(
d‹a
);

47 
	g∑πôi⁄_t
<> 
	túpIm∂
;

87 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
√w_‹dî
);

88 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
∑ymít
);

89 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
‹dî_°©us
);

90 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
dñivîy
);

91 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
°ock_Àvñ
);

92 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
mbích_wh
);

93 
DEFINE_DORA_WITHOUT_INPUT_TRX_WRAPPER
(
D‹aTPCCEnv
,
mbích_cu°
);

107 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_√w_‹dî
(c⁄° 
x˘_id
,

108 
åx_ªsu…_tu∂e_t
& 
©π
,

109 
√w_‹dî_öput_t
& 
™oö
,

110 c⁄° 
boﬁ
 
bWake
)

113 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

114 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

115 if(!
_bAœrmSë
) {

116 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

117 
_bAœrmSë
 = 
åue
;

122 
tid_t
 
©id
;

124 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

125 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

127 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

130 
	`as£π
 (
px˘
);

131 
	`me
()->
	`dëach_x˘
(
px˘
);

132 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

139 
whid
 = 
™oö
.
_wh_id
;

142 
mid1_n‹d_rvp
* 
midrvp
 = 
	`√w_mid1_n‹d_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
™oö
,
bWake
);

148 
no_ôem_n‹d_öput_t
 
™oôö
;

149 
™oö
.
	`gë_no_ôem_öput
(
™oôö
);

152 
r_wh_n‹d_a˘i⁄
* 
r_wh_n‹d
 = 
	`√w_r_wh_n‹d_a˘i⁄
(
px˘
,
©id
,
midrvp
,
™oôö
);

153 
úpIm∂
* 
my_wh_∑π
 = 
	`decide_∑π
(
	`whs
(),
whid
);

155 
r_cu°_n‹d_a˘i⁄
* 
r_cu°_n‹d
 = 
	`√w_r_cu°_n‹d_a˘i⁄
(
px˘
,
©id
,
midrvp
,
™oôö
);

156 
úpIm∂
* 
my_cu°_∑π
 = 
	`decide_∑π
(
	`cus
(),
whid
);

158 
upd_di°_n‹d_a˘i⁄
* 
upd_di°_n‹d
 = 
	`√w_upd_di°_n‹d_a˘i⁄
(
px˘
,
©id
,
midrvp
,
™oôö
);

159 
úpIm∂
* 
my_di°_∑π
 = 
	`decide_∑π
(
	`dis
(),
whid
);

161 
r_ôem_n‹d_a˘i⁄
* 
r_ôem_n‹d
 = 
	`√w_r_ôem_n‹d_a˘i⁄
(
px˘
,
©id
,
midrvp
,
™oö
);

162 
úpIm∂
* 
my_ôem_∑π
 = 
	`decide_∑π
(
	`ôe
(),
whid
);

165 
	`CRITICAL_SECTION
(
wh_∑π_cs
, 
my_wh_∑π
->
_íqueue_lock
);

167 i‡(
my_wh_∑π
->
	`íqueue
(
r_wh_n‹d
,
bWake
)) {

168 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_WH_NORD\n");

169 
	`as£π
 (0);

170  (
	`RC
(
de_PROBLEM_ENQUEUE
));

174 
	`CRITICAL_SECTION
(
di°_∑π_cs
, 
my_di°_∑π
->
_íqueue_lock
);

175 
wh_∑π_cs
.
	`exô
();

177 i‡(
my_di°_∑π
->
	`íqueue
(
upd_di°_n‹d
,
bWake
)) {

178 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_DIST_NORD\n");

179 
	`as£π
 (0);

180  (
	`RC
(
de_PROBLEM_ENQUEUE
));

184 
	`CRITICAL_SECTION
(
cu°_∑π_cs
, 
my_cu°_∑π
->
_íqueue_lock
);

185 
di°_∑π_cs
.
	`exô
();

187 i‡(
my_cu°_∑π
->
	`íqueue
(
r_cu°_n‹d
,
bWake
)) {

188 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_CUST_NORD\n");

189 
	`as£π
 (0);

190  (
	`RC
(
de_PROBLEM_ENQUEUE
));

194 
	`CRITICAL_SECTION
(
ôem_∑π_cs
, 
my_ôem_∑π
->
_íqueue_lock
);

195 
cu°_∑π_cs
.
	`exô
();

197 i‡(
my_ôem_∑π
->
	`íqueue
(
r_ôem_n‹d
,
bWake
)) {

198 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing R_ITEM_NORD\n");

199 
	`as£π
 (0);

200  (
	`RC
(
de_PROBLEM_ENQUEUE
));

203  (
RCOK
);

204 
	}
}

214 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_∑ymít
(c⁄° 
x˘_id
,

215 
åx_ªsu…_tu∂e_t
& 
©π
,

216 
∑ymít_öput_t
& 
≠ö
,

217 c⁄° 
boﬁ
 
bWake
)

219 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

220 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

221 if(!
_bAœrmSë
) {

222 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

223 
_bAœrmSë
 = 
åue
;

228 
tid_t
 
©id
;

230 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

231 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

233 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

236 
	`as£π
 (
px˘
);

237 
	`me
()->
	`dëach_x˘
(
px˘
);

238 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

242 
midway_∑y_rvp
* 
rvp
 = 
	`√w_midway_∑y_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
≠ö
,
bWake
);

245 
upd_wh_∑y_a˘i⁄
* 
∑y_upd_wh
 = 
	`√w_upd_wh_∑y_a˘i⁄
(
px˘
,
©id
,
rvp
,
≠ö
);

246 
upd_di°_∑y_a˘i⁄
* 
∑y_upd_di°
 = 
	`√w_upd_di°_∑y_a˘i⁄
(
px˘
,
©id
,
rvp
,
≠ö
);

247 
upd_cu°_∑y_a˘i⁄
* 
∑y_upd_cu°
 = 
	`√w_upd_cu°_∑y_a˘i⁄
(
px˘
,
©id
,
rvp
,
≠ö
);

259 
wh
 = 
≠ö
.
_home_wh_id
;

262 
úpIm∂
* 
my_wh_∑π
 = 
	`decide_∑π
(
	`whs
(),
wh
);

263 
úpIm∂
* 
my_di°_∑π
 = 
	`decide_∑π
(
	`dis
(),
wh
);

264 
úpIm∂
* 
my_cu°_∑π
 = 
	`decide_∑π
(
	`cus
(),
wh
);

269 
	`CRITICAL_SECTION
(
wh_∑π_cs
, 
my_wh_∑π
->
_íqueue_lock
);

271 i‡(
my_wh_∑π
->
	`íqueue
(
∑y_upd_wh
,
bWake
)) {

272 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing PAY_UPD_WH\n");

273 
	`as£π
 (0);

274  (
	`RC
(
de_PROBLEM_ENQUEUE
));

278 
	`CRITICAL_SECTION
(
dis_∑π_cs
, 
my_di°_∑π
->
_íqueue_lock
);

279 
wh_∑π_cs
.
	`exô
();

281 i‡(
my_di°_∑π
->
	`íqueue
(
∑y_upd_di°
,
bWake
)) {

282 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing PAY_UPD_DIST\n");

283 
	`as£π
 (0);

284  (
	`RC
(
de_PROBLEM_ENQUEUE
));

288 
	`CRITICAL_SECTION
(
cus_∑π_cs
, 
my_cu°_∑π
->
_íqueue_lock
);

289 
dis_∑π_cs
.
	`exô
();

291 i‡(
my_cu°_∑π
->
	`íqueue
(
∑y_upd_cu°
,
bWake
)) {

292 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing PAY_UPD_CUST\n");

293 
	`as£π
 (0);

294  (
	`RC
(
de_PROBLEM_ENQUEUE
));

298  (
RCOK
);

299 
	}
}

309 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_‹dî_°©us
(c⁄° 
x˘_id
,

310 
åx_ªsu…_tu∂e_t
& 
©π
,

311 
‹dî_°©us_öput_t
& 
a‹d°ö
,

312 c⁄° 
boﬁ
 
bWake
)

314 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

315 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

316 if(!
_bAœrmSë
) {

317 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

318 
_bAœrmSë
 = 
åue
;

323 
tid_t
 
©id
;

325 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

326 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

328 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

331 
	`as£π
 (
px˘
);

332 
	`me
()->
	`dëach_x˘
(
px˘
);

333 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

337 
mid1_‹d°_rvp
* 
mid1_rvp
 = 
	`√w_mid1_‹d°_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
a‹d°ö
,
bWake
);

340 
r_cu°_‹d°_a˘i⁄
* 
r_cu°
 = 
	`√w_r_cu°_‹d°_a˘i⁄
(
px˘
,
©id
,
mid1_rvp
,
a‹d°ö
);

347 
wh
 = 
a‹d°ö
.
_wh_id
;

350 
úpIm∂
* 
my_cu°_∑π
 = 
	`decide_∑π
(
	`cus
(),
wh
);

353 
	`CRITICAL_SECTION
(
cu°_∑π_cs
, 
my_cu°_∑π
->
_íqueue_lock
);

355 i‡(
my_cu°_∑π
->
	`íqueue
(
r_cu°
,
bWake
)) {

356 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing ORDST_R_CUST\n");

357 
	`as£π
 (0);

358  (
	`RC
(
de_PROBLEM_ENQUEUE
));

361  (
RCOK
);

362 
	}
}

372 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_dñivîy
(c⁄° 
x˘_id
,

373 
åx_ªsu…_tu∂e_t
& 
©π
,

374 
dñivîy_öput_t
& 
adñö
,

375 c⁄° 
boﬁ
 
bWake
)

377 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

378 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

379 if(!
_bAœrmSë
) {

380 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

381 
_bAœrmSë
 = 
åue
;

386 
tid_t
 
©id
;

388 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

389 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

391 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

394 
	`as£π
 (0);

395 #w¨nög 
TODO
: 
DEL
-
CUST
 
key
 
should
 
be
 2 (
WH
|
DI
Ë
™d
 DEL-
ORD
 key should be 2 (WH|DI)

399 
	`as£π
 (
px˘
);

400 
	`me
()->
	`dëach_x˘
(
px˘
);

401 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

404 
föÆ_dñ_rvp
* 
‰vp
 = 
	`√w_föÆ_dñ_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

408 
i
=0;i<
DISTRICTS_PER_WAREHOUSE
;i++) {

411 
mid1_dñ_rvp
* 
rvp
 = 
NULL
;

412 
	`as£π
 (0);

413 
rvp
->
	`po°£t
(
‰vp
,
i
);

416 
dñ_n‹d_dñ_a˘i⁄
* 
dñ_dñ_n‹d
 = 
	`√w_dñ_n‹d_dñ_a˘i⁄
(
px˘
,
©id
,
rvp
,
adñö
);

417 
dñ_dñ_n‹d
->
	`po°£t
(
i
);

429 
wh
 = 
adñö
.
_wh_id
;

432 
úpIm∂
* 
my_n‹d_∑π
 = 
	`decide_∑π
(
	`n‹
(),
wh
);

437 
	`CRITICAL_SECTION
(
n‹d_∑π_cs
, 
my_n‹d_∑π
->
_íqueue_lock
);

439 i‡(
my_n‹d_∑π
->
	`íqueue
(
dñ_dñ_n‹d
,
bWake
)) {

440 
	`TRACE
–
TRACE_DEBUG
, "ProbÀm i¿íqueueög DEL_DEL_NORD-%d\n", 
i
);

441 
	`as£π
 (0);

442  (
	`RC
(
de_PROBLEM_ENQUEUE
));

447  (
RCOK
);

448 
	}
}

458 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_°ock_Àvñ
(c⁄° 
x˘_id
,

459 
åx_ªsu…_tu∂e_t
& 
©π
,

460 
°ock_Àvñ_öput_t
& 
a°oö
,

461 c⁄° 
boﬁ
 
bWake
)

463 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

464 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

465 if(!
_bAœrmSë
) {

466 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

467 
_bAœrmSë
 = 
åue
;

472 
tid_t
 
©id
;

474 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

475 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

477 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

480 
	`as£π
 (
px˘
);

481 
	`me
()->
	`dëach_x˘
(
px˘
);

482 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

486 
mid1_°ock_rvp
* 
rvp
 = 
	`√w_mid1_°ock_rvp
(
px˘
,
©id
,
x˘_id
,
©π
,
a°oö
,
bWake
);

489 
r_di°_°ock_a˘i⁄
* 
°ock_r_di°
 = 
	`√w_r_di°_°ock_a˘i⁄
(
px˘
,
©id
,
rvp
,
a°oö
);

500 
wh
 = 
a°oö
.
_wh_id
;

503 
úpIm∂
* 
my_di°_∑π
 = 
	`decide_∑π
(
	`dis
(),
wh
);

508 
	`CRITICAL_SECTION
(
dis_∑π_cs
, 
my_di°_∑π
->
_íqueue_lock
);

510 i‡(
my_di°_∑π
->
	`íqueue
(
°ock_r_di°
,
bWake
)) {

511 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing STOCK_R_DIST\n");

512 
	`as£π
 (0);

513  (
	`RC
(
de_PROBLEM_ENQUEUE
));

517  (
RCOK
);

518 
	}
}

529 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_mbích_wh
(c⁄° 
x˘_id
,

530 
åx_ªsu…_tu∂e_t
& 
©π
,

531 
mbích_wh_öput_t
& 
ö
,

532 c⁄° 
boﬁ
 
bWake
)

535 
tid_t
 
©id
;

537 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

538 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

540 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

543 
	`as£π
 (
px˘
);

544 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
px˘
);

545 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

549 
föÆ_mb_rvp
* 
‰vp
 = 
	`√w_föÆ_mb_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

552 
upd_wh_mb_a˘i⁄
* 
upd_wh
 = 
	`√w_upd_wh_mb_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

563 
úpIm∂
* 
my∑πôi⁄
 = 
	`decide_∑π
(
	`whs
(),
ö
.
_wh_id
);

566 
	`CRITICAL_SECTION
(
wh_∑π_cs
, 
my∑πôi⁄
->
_íqueue_lock
);

567 i‡(
my∑πôi⁄
->
	`íqueue
(
upd_wh
,
bWake
)) {

568 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_WH_MB\n");

569 
	`as£π
 (0);

570  (
	`RC
(
de_PROBLEM_ENQUEUE
));

574  (
RCOK
);

575 
	}
}

577 
w_rc_t
 
	gD‹aTPCCEnv
::
	$d‹a_mbích_cu°
(c⁄° 
x˘_id
,

578 
åx_ªsu…_tu∂e_t
& 
©π
,

579 
mbích_cu°_öput_t
& 
ö
,

580 c⁄° 
boﬁ
 
bWake
)

583 
tid_t
 
©id
;

585 
	`W_DO
(
_pssm
->
	`begö_x˘
(
©id
));

586 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

588 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

591 
	`as£π
 (
px˘
);

592 
	`me
()->
	`dëach_x˘
(
px˘
);

593 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëached from (%d)\n", 
©id
.
	`gë_lo
());

596 
föÆ_mb_rvp
* 
‰vp
 = 
	`√w_föÆ_mb_rvp
(
px˘
,
©id
,
x˘_id
,
©π
);

599 
upd_cu°_mb_a˘i⁄
* 
upd_cu°
 = 
	`√w_upd_cu°_mb_a˘i⁄
(
px˘
,
©id
,
‰vp
,
ö
);

610 
úpIm∂
* 
my∑πôi⁄
 = 
	`decide_∑π
(
	`cus
(),
ö
.
_wh_id
);

613 
	`CRITICAL_SECTION
(
cus_∑π_cs
, 
my∑πôi⁄
->
_íqueue_lock
);

614 i‡(
my∑πôi⁄
->
	`íqueue
(
upd_cu°
,
bWake
)) {

615 
	`TRACE
–
TRACE_DEBUG
, "Problem inÉnqueueing UPD_CUST\n");

616 
	`as£π
 (0);

617  (
	`RC
(
de_PROBLEM_ENQUEUE
));

621  (
RCOK
);

622 
	}
}

625 
EXIT_NAMESPACE
(
d‹a
);

	@src/dora/worker.cpp

32 
	~"d‹a/w‹kî.h
"

33 
	~"d‹a/a˘i⁄.h
"

34 
	~"d‹a/∑πôi⁄.h
"

35 
	~"d‹a/rvp.h
"

38 
ENTER_NAMESPACE
(
d‹a
);

50 
	gd‹a_w‹kî_t
::
	$d‹a_w‹kî_t
(
Sh‹eEnv
* 
ív
, 
ba£_∑πôi⁄_t
* 
≠¨t
, 
c_°r
 
äame
,

51 
¥o˚ss‹id_t
 
≠rsid
, c⁄° 
u£_¶i
)

52 : 
	`ba£_w‹kî_t
(
ív
, 
äame
, 
≠rsid
, 
u£_¶i
),

53 
	$_∑πôi⁄
(
≠¨t
)

55 
	}
}

57 
	gd‹a_w‹kî_t
::~
	$d‹a_w‹kî_t
()

59 
	}
}

63 
d‹a_w‹kî_t
::
	$£t_∑πôi⁄
(
ba£_∑πôi⁄_t
* 
≠¨t
)

65 
	`as£π
 (
≠¨t
);

66 
_∑πôi⁄
 = 
≠¨t
;

67 
	}
}

70 
ba£_∑πôi⁄_t
* 
	gd‹a_w‹kî_t
::
	$gë_∑πôi⁄
()

72  (
_∑πôi⁄
);

73 
	}
}

75 
	gd‹a_w‹kî_t
::
	$doRecovîy
()

77  (
	`_w‹k_ACTIVE_im∂
());

78 
	}
}

81 
	gd‹a_w‹kî_t
::
	$_¥e_STOP_im∂
()

83 
	`as£π
(
_∑πôi⁄
);

84  (
_∑πôi⁄
->
	`ab‹t_Æl_íqueued
());

85 
	}
}

99 
	gd‹a_w‹kî_t
::
	$_w‹k_ACTIVE_im∂
()

101 
bödög
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("dora-cpu-binding",0);

102 i‡(
bödög
==0Ë
_¥s_id
 = 
PBIND_NONE
;

103 
	`TRY_TO_BIND
(
_¥s_id
,
_is_bound
);

108 
ba£_a˘i⁄_t
* 
≠a
 = 
NULL
;

109 
Ba£A˘i⁄PåLi°
 
a˘i⁄RódyLi°
;

110 
Ba£A˘i⁄PåLi°
 
a˘i⁄PromŸedLi°
;

111 
a˘i⁄RódyLi°
.
	`˛ór
();

112 
a˘i⁄PromŸedLi°
.
	`˛ór
();

114 
boﬁ
 
öRecovîy
 = 
Ál£
;

117 
	`me
()->
	`Æloc_sdesc_ˇche
();

120 (
	`gë_c⁄åﬁ
(Ë& 
WC_ACTIVE
Ë|| (
öRecovîy
=(gë_c⁄åﬁ(Ë=
WC_RECOVERY
))) {

123 
≠a
 = 
NULL
;

124 
	`£t_ws
(
WS_LOOP
);

130 
_∑πôi⁄
->
	`has_commôãd
()) {

133 
≠a
 = 
_∑πôi⁄
->
	`dequeue_commô
();

134 
	`w_as£π0
 (
≠a
);

135 
	`TRACE
–
TRACE_TRX_FLOW
, "Re˚ived commôãd (%d)\n", 
≠a
->
	`tid
().
	`gë_lo
());

139 
≠a
->
	`åx_ªl_locks
(
a˘i⁄RódyLi°
,
a˘i⁄PromŸedLi°
);

140 
	`TRACE
–
TRACE_TRX_FLOW
, "Re˚ived (%dËªady\n", 
a˘i⁄RódyLi°
.
	`size
());

143 
≠a
->
	`giveback
();

144 
≠a
 = 
NULL
;

148 
Ba£A˘i⁄PåIt
 
ô
=
a˘i⁄RódyLi°
.
	`begö
(); it!˜˘i⁄RódyLi°.
	`íd
(); ++it) {

149 
	`_£rve_a˘i⁄
(*
ô
);

150 ++
_°©s
.
_£rved_waôög
;

154 
a˘i⁄RódyLi°
.
	`˛ór
();

155 
a˘i⁄PromŸedLi°
.
	`˛ór
();

158 i‡(
öRecovîy
) {

159 i‡(!
_∑πôi⁄
->
	`has_öput
()Ë{ 
lo›exô
; }

168 
≠a
 = 
_∑πôi⁄
->
	`dequeue
();

171 i‡(
≠a
) {

172 
	`TRACE
–
TRACE_TRX_FLOW
, "I≈uàåx (%d)\n", 
≠a
->
	`tid
().
	`gë_lo
());

173 i‡(
≠a
->
	`åx_acq_locks
()) {

176 
	`_£rve_a˘i⁄
(
≠a
);

177 ++
_°©s
.
_£rved_öput
;

182 
lo›exô
:

184 
	`me
()->
	`‰ì_sdesc_ˇche
();

186 
	}
}

200 
	gd‹a_w‹kî_t
::
	$_£rve_a˘i⁄
(
ba£_a˘i⁄_t
* 
∑˘i⁄
)

203 
	`as£π
 (
∑˘i⁄
);

204 
	`as£π
 (
∑˘i⁄
->
	`is_ªady
());

206 
boﬁ
 
is_îr‹
 = 
Ál£
;

207 
w_rc_t
 
e
 = 
RCOK
;

208 
r_code
 = 0;

211 
rvp_t
* 
≠rvp
 = 
∑˘i⁄
->
	`rvp
();

212 
	`as£π
 (
≠rvp
);

215 #ifde‡
WORKER_VERBOSE_STATS


217 
_°©s
.
	`upd©e_waôed
(
∑˘i⁄
->
	`waôed
());

221 i‡(!
≠rvp
->
	`isAb‹ãd
()) {

224 
	`©èch_x˘
(
∑˘i⁄
->
	`x˘
());

225 
	`TRACE
–
TRACE_TRX_FLOW
, "AâachedÅÿ(%d)\n", 
∑˘i⁄
->
	`tid
().
	`gë_lo
());

227 #ifde‡
WORKER_VERBOSE_STATS


228 
°›w©ch_t
 
£rvög_time
;

232 
e
 = 
∑˘i⁄
->
	`åx_exec
();

234 #ifde‡
WORKER_VERBOSE_STATS


235 
_°©s
.
	`upd©e_£rved
(
£rvög_time
.
	`time_ms
());

238 i‡(
e
.
	`is_îr‹
()) {

240 i‡(
e
.
	`îr_num
(Ë=
de_MIDWAY_ABORT
) {

241 
r_code
 = 
de_MIDWAY_ABORT
;

242 
	`TRACE
–
TRACE_TRX_FLOW
, "Midwayáb‹à(%d)\n", 
∑˘i⁄
->
	`tid
().
	`gë_lo
());

243 ++
_°©s
.
_mid_ab‹ts
;

247 
	`TRACE
–
TRACE_TRX_FLOW
, "ProblemÑunning xct (%d) [0x%x]\n",

248 
∑˘i⁄
->
	`tid
().
	`gë_lo
(), 
e
.
	`îr_num
());

250 
is_îr‹
 = 
åue
;

251 
r_code
 = 
de_WORKER_RUN_XCT
;

253 ++
_°©s
.
_¥obÀms
;

258 
	`TRACE
–
TRACE_TRX_FLOW
, "Dëachög from (%d)\n", 
∑˘i⁄
->
	`tid
().
	`gë_lo
());

259 
	`dëach_x˘
(
∑˘i⁄
->
	`x˘
());

263 
r_code
 = 
de_EARLY_ABORT
;

264 
	`TRACE
–
TRACE_TRX_FLOW
, "E¨lyáb‹à(%d)\n", 
∑˘i⁄
->
	`tid
().
	`gë_lo
());

265 ++
_°©s
.
_óæy_ab‹ts
;

269 #ifde‡
WORKER_VERBOSE_STATS


270 
°›w©ch_t
 
rvp_time
;

274 i‡(
≠rvp
->
	`po°
(
is_îr‹
)) {

277 
e
 = 
≠rvp
->
	`run
();

279 #ifde‡
WORKER_VERBOSE_STATS


280 
_°©s
.
	`upd©e_rvp_exec_time
(
rvp_time
.
	`time_ms
());

283 i‡(
e
.
	`is_îr‹
()) {

284 
	`TRACE
–
TRACE_ALWAYS
, "ProblemÑunningÑvp for xct (%d) [0x%x]\n",

285 
∑˘i⁄
->
	`tid
().
	`gë_lo
(), 
e
.
	`îr_num
());

286 
r_code
 = 
de_WORKER_RUN_RVP
;

294 
≠rvp
 = 
NULL
;

297 #ifde‡
WORKER_VERBOSE_STATS


298 
_°©s
.
	`upd©e_rvp_nŸify_time
(
rvp_time
.
	`time_ms
());

302 ++
_°©s
.
_¥o˚s£d
;

304  (
r_code
);

305 
	}
}

309 
EXIT_NAMESPACE
(
d‹a
);

	@src/qpipe/common/predicates.cpp

24 
	~"qpùe/comm⁄/¥ediˇãs.h
"

27 
ENTER_NAMESPACE
(
qpùe
);

31 
boﬁ
 
	$u£_dëîmöi°ic_¥ediˇãs
() {

32  
åue
;

33 
	}
}

37 
¥ediˇã_øndgí_t
 
	g¥ediˇã_øndgí_t
::
	$acquúe
(c⁄° * 
ˇŒî_èg
) {

38 i‡(
	`u£_dëîmöi°ic_¥ediˇãs
())

40  
	`¥ediˇã_øndgí_t
(
ˇŒî_èg
);

43  
	`¥ediˇã_øndgí_t
(
	`thªad_gë_£lf
()->
	`øndgí
());

44 
	}
}

48 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/common/process_query.cpp

24 
	~"qpùe/c‹e/tu∂e_fifo.h
"

25 
	~"qpùe/c‹e/di•©chî.h
"

26 
	~"qpùe/comm⁄/¥o˚ss_quîy.h
"

27 
	~"utû.h
"

29 
ENTER_NAMESPACE
(
qpùe
);

32 
	$¥o˚ss_quîy
(
∑ckë_t
* 
roŸ
, 
¥o˚ss_tu∂e_t
& 
±
)

34 
gu¨d
<
tu∂e_fifo
> 
out
 = 
roŸ
->
	`ouçut_buf„r
();

36 
di•©chî_t
::
w‹kî_ª£rvî_t
* 
wr
 = di•©chî_t::
	`ª£rvî_acquúe
();

39 
roŸ
->
	`de˛¨e_w‹kî_√eds
(
wr
);

40 
wr
->
	`acquúe_ªsour˚s
();

41 
di•©chî_t
::
	`di•©ch_∑ckë
(
roŸ
);

44 
tu∂e_t
 
ouçut
;

45 
±
.
	`begö
();

46 
out
->
	`gë_tu∂e
(
ouçut
))

47 
±
.
	`¥o˚ss
(
ouçut
);

48 
±
.
	`íd
();

50 
di•©chî_t
::
	`ª£rvî_ªÀa£
(
wr
);

51 
	}
}

54 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/dispatcher.cpp

24 
	~"utû.h
"

25 
	~"qpùe/c‹e/di•©chî.h
"

27 
	~<c°dio
>

28 
	~<c°rög
>

29 
	~<m≠
>

31 
usög
 
	g°d
::
m≠
;

35 
ENTER_NAMESPACE
(
qpùe
);

38 
di•©chî_t
* 
	gdi•©chî_t
::
_ö°™˚
 = 
NULL
;

39 
±hªad_muãx_t
 
	gdi•©chî_t
::
_ö°™˚_lock
 = 
thªad_muãx_¸óã
();

42 
	gdi•©chî_t
::
	$di•©chî_t
()

44 
	}
}

48 
di•©chî_t
::~
	$di•©chî_t
()

50 
	`TRACE
(
TRACE_DEBUG
, "NeedÅo destroyÇodesánd keys\n");

51 
	}
}

61 
	gdi•©chî_t
::
	$_ªgi°î_°age_c⁄èöî
(c⁄° 
c_°r
 &
∑ckë_ty≥
,

62 
°age_c⁄èöî_t
* 
sc
,

63 
boﬁ
 
o•_íabÀd
)

68 i‡–
_scdú
[
∑ckë_ty≥
] !
NULL
 )

69 
	`THROW2
(
Di•©chîEx˚±i⁄
,

71 
∑ckë_ty≥
.
	`d©a
());

73 
_scdú
[
∑ckë_ty≥
] = 
sc
;

74 
_o•dú
[
∑ckë_ty≥
] = 
o•_íabÀd
;

75 
	}
}

83 
	gdi•©chî_t
::
	$_di•©ch_∑ckë
(
∑ckë_t
* 
∑ckë
) {

85 
°age_c⁄èöî_t
* 
sc
 = 
_scdú
[
∑ckë
->
_∑ckë_ty≥
];

86 i‡(
sc
 =
NULL
)

87 
	`THROW2
(
Di•©chîEx˚±i⁄
,

88 "PackëÅy≥ %†uƒegi°îed\n", 
∑ckë
->
_∑ckë_ty≥
.
	`d©a
());

89 
sc
->
	`íqueue
(
∑ckë
);

90 
	}
}

98 
boﬁ
 
	gdi•©chî_t
::
	$_is_o•_íabÀd_f‹_ty≥
(c⁄° 
c_°r
& 
ty≥
)

101 
°age_c⁄èöî_t
* 
sc
 = 
_scdú
[
ty≥
];

102 i‡(
sc
 =
NULL
) {

103 
	`THROW2
(
Di•©chîEx˚±i⁄
,

104 "PackëÅy≥ %†uƒegi°îed\n", 
ty≥
.
	`d©a
());

107  
_o•dú
[
ty≥
];

108 
	}
}

117 
	gdi•©chî_t
::
	$_ª£rve_w‹kîs
(c⁄° 
c_°r
& 
ty≥
, 
n
)

120 
°age_c⁄èöî_t
* 
sc
 = 
_scdú
[
ty≥
];

121 i‡(
sc
 =
NULL
) {

122 
	`THROW2
(
Di•©chîEx˚±i⁄
,

123 "Ty≥ %†uƒegi°îed\n", 
ty≥
.
	`d©a
());

125 
sc
->
	`ª£rve
(
n
);

126 
	}
}

135 
	gdi•©chî_t
::
	$_uƒe£rve_w‹kîs
(c⁄° 
c_°r
& 
ty≥
, 
n
)

137 
°age_c⁄èöî_t
* 
sc
 = 
_scdú
[
ty≥
];

138 i‡(
sc
 =
NULL
)

139 
	`THROW2
(
Di•©chîEx˚±i⁄
,

140 "Ty≥ %†uƒegi°îed\n", 
ty≥
.
	`d©a
());

141 
sc
->
	`uƒe£rve
(
n
);

142 
	}
}

146 
	gdi•©chî_t
::
w‹kî_ª£rvî_t
* 
di•©chî_t
::
	$ª£rvî_acquúe
()

148  
√w
 
	`w‹kî_ª£rvî_t
(
	`ö°™˚
());

149 
	}
}

153 
	gdi•©chî_t
::
	$ª£rvî_ªÀa£
(
w‹kî_ª£rvî_t
* 
wr
)

155 
dñëe
 
wr
;

156 
	}
}

160 
	gdi•©chî_t
::
w‹kî_ªÀa£r_t
* 
di•©chî_t
::
	$ªÀa£r_acquúe
() {

161  
√w
 
	`w‹kî_ªÀa£r_t
(
	`ö°™˚
());

162 
	}
}

166 
	gdi•©chî_t
::
	$ªÀa£r_ªÀa£
(
w‹kî_ªÀa£r_t
* 
wr
)

168 
dñëe
 
wr
;

169 
	}
}

173 
	gdi•©chî_t
::
w‹kî_ª£rvî_t
::
	$acquúe_ªsour˚s
()

175 
m≠
<
c_°r
, >::
ôî©‹
 
ô
;

176 
ô
 = 
_w‹kî_√eds
.
	`begö
(); ià!_w‹kî_√eds.
	`íd
(); ++it) {

177 
n
 = 
ô
->
£c⁄d
;

178 i‡(
n
 > 0) {

179 
	`TRACE
(
TRACE_DEBUG
, "Re£rvög %d %†w‹kîs\n", 
n
, 
ô
->
fú°
.
	`d©a
());

180 
_di•©chî
->
	`_ª£rve_w‹kîs
(
ô
->
fú°
, 
n
);

183 
	}
}

188 
boﬁ
 
	$is_o•_íabÀd_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
)

190  
di•©chî_t
::
	`is_o•_íabÀd_f‹_ty≥
(
∑ckë_ty≥
);

191 
	}
}

195 
	gdi•©chî_t
::
	$_£t_o•_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
, 
boﬁ
 
o•_swôch
)

197 
_o•dú
[
∑ckë_ty≥
] = 
o•_swôch
;

198 
	}
}

199 
	$£t_o•_f‹_ty≥
(c⁄° 
c_°r
& 
∑ckë_ty≥
, 
boﬁ
 
o•_swôch
)

201 
di•©chî_t
::
	`£t_o•_f‹_ty≥
(
∑ckë_ty≥
, 
o•_swôch
);

202 
	}
}

205 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/packet.cpp

24 
	~"qpùe/c‹e/∑ckë.h
"

25 
	~"qpùe/c‹e/°age_c⁄èöî.h
"

26 
	~"utû.h
"

27 
	~"utû/thªad.h
"

30 
ENTER_NAMESPACE
(
qpùe
);

34 
o•_pﬁicy_t
 
	go•_globÆ_pﬁicy
 = 
OSP_FULL
;

62 
	g∑ckë_t
::
	$∑ckë_t
(c⁄° 
c_°r
 &
∑ckë_id
,

63 c⁄° 
c_°r
 &
∑ckë_ty≥
,

64 
tu∂e_fifo
* 
ouçut_buf„r
,

65 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

66 
quîy_∂™
* 
∂™
,

67 
boﬁ
 
mîge_íabÀd
,

68 
boﬁ
 
uƒe£rve_⁄_com∂ëi⁄
)

69 : 
	`_∂™
(
∂™
),

72 
	`_q°©e
(
NULL
),

74 
	`_mîge_íabÀd
(
mîge_íabÀd
),

75 
	`_uƒe£rve_⁄_com∂ëi⁄
(
uƒe£rve_⁄_com∂ëi⁄
),

76 
	`_∑ckë_id
("%s_%s", 
	`thªad_gë_£lf
()->
	`thªad_«me
().
	`d©a
(), 
∑ckë_id
.data()),

77 
	`_∑ckë_ty≥
(
∑ckë_ty≥
),

78 
	`_ouçut_buf„r
(
ouçut_buf„r
),

79 
	`_ouçut_fûãr
(
ouçut_fûãr
),

80 
	`_√xt_tu∂e_⁄_mîge
(
°age_c⁄èöî_t
::
NEXT_TUPLE_UNINITIALIZED
),

81 
	$_√xt_tu∂e_√eded
 (
°age_c⁄èöî_t
::
NEXT_TUPLE_INITIAL_VALUE
)

84 
	`as£π
(
ouçut_buf„r
 !
NULL
);

85 
	`as£π
(
ouçut_fûãr
 !
NULL
);

86 
	`as£π
(!
mîge_íabÀd
 || 
∂™
 !
NULL
);

88 
	`TRACE
(
TRACE_PACKET_FLOW
, "Created %sÖacket with ID %s\n",

89 
_∑ckë_ty≥
.
	`d©a
(),

90 
_∑ckë_id
.
	`d©a
());

91 
	}
}

99 
	g∑ckë_t
::~
	$∑ckë_t
() {

101 
	`TRACE
(
TRACE_PACKET_FLOW
, "Destroying %sÖacket with ID %s\n",

102 
_∑ckë_ty≥
.
	`d©a
(),

103 
_∑ckë_id
.
	`d©a
());

104 
	}
}

108 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/stage_container.cpp

24 
	~"qpùe/c‹e/°age_c⁄èöî.h
"

25 
	~"qpùe/c‹e/di•©chî.h
"

26 
	~"utû.h
"

28 
	~<c°dio
>

29 
	~<c°rög
>

33 
	#TRACE_MERGING
 
TRACE_RESOURCE_RELEASE
|0

	)

34 
	#TRACE_DEQUEUE
 
TRACE_RESOURCE_RELEASE
|0

	)

37 
ENTER_NAMESPACE
(
qpùe
);

40 c⁄° 
boﬁ
 
	gALWAYS_TRY_OSP_INSTEAD_OF_WORKER_CREATE
 = 
åue
;

41 c⁄° 
	g°age_c⁄èöî_t
::
NEXT_TUPLE_UNINITIALIZED
 = 0;

42 c⁄° 
	g°age_c⁄èöî_t
::
NEXT_TUPLE_INITIAL_VALUE
 = 1;

49 
	s°›_ex˚±i⁄
 { };

51 
EXIT_NAMESPACE
(
qpùe
);

52 
	gãm∂©e
<>

53 
ölöe
 

54 
	ggu¨d
<
	gqpùe
::
di•©chî_t
::
w‹kî_ªÀa£r_t
>::

55 
	$a˘i⁄
(
qpùe
::
di•©chî_t
::
w‹kî_ªÀa£r_t
* 
±r
)

57 
qpùe
::
di•©chî_t
::
	`ªÀa£r_ªÀa£
(
±r
);

58 
	}
}

59 
ENTER_NAMESPACE
(
qpùe
);

63 * 
	g°age_c⁄èöî_t
::
	$°©ic_run_°age_wøµî
(
°age_t
* 
°age
,

64 
°age_ad≠t‹_t
* 
ad≠t‹
)

66 
ad≠t‹
->
	`run_°age
(
°age
);

67 
dñëe
 
°age
;

68 
dñëe
 
ad≠t‹
;

69  
NULL
;

70 
	}
}

83 
	g°age_c⁄èöî_t
::
	$°age_c⁄èöî_t
(c⁄° 
c_°r
 &
c⁄èöî_«me
,

84 
°age_Á˘‹y_t
* 
°age_makî
, 
a˘ive_cou¡
, 
max_cou¡
)

85 : 
	`_c⁄èöî_lock
(
	`thªad_muãx_¸óã
()),

86 
	`_c⁄èöî_queue_n⁄em±y
(
	`thªad_c⁄d_¸óã
()),

87 
	`_c⁄èöî_«me
(
c⁄èöî_«me
), 
	`_°age_makî
(
°age_makî
),

88 
	`_poﬁ
(
a˘ive_cou¡
),

89 
	`_max_thªads
((
max_cou¡
 > 
a˘ive_cou¡
)? max_cou¡ : 
°d
::
	`max
(10,áctive_count * 4)),

90 
	`_√xt_thªad
(0),

91 
	$_Ω
(&
_c⁄èöî_lock
.
_lock
, 0, 
c⁄èöî_«me
)

93 
	}
}

103 
	g°age_c⁄èöî_t
::~
	$°age_c⁄èöî_t
()

110 
	`thªad_muãx_de°roy
(
_c⁄èöî_lock
);

111 
	`thªad_c⁄d_de°roy
(
_c⁄èöî_queue_n⁄em±y
);

112 
	}
}

121 
	g°age_thªad
 : 
public
 
thªad_t


123 
°age_c⁄èöî_t
* 
_sc
;

124 
°age_thªad
(c⁄° 
c_°r
 &
«me
, 
°age_c⁄èöî_t
* 
sc
)

125 : 
thªad_t
(
«me
), 
_sc
(
sc
)

129 
vútuÆ
 
w‹k
() {

130 
	g_sc
->
run
();

139 
	g°age_c⁄èöî_t
::
	$c⁄èöî_queue_íqueue_no_mîge
(
∑ckë_li°_t
* 
∑ckës
) {

140 
_c⁄èöî_queue
.
	`push_back
(
∑ckës
);

141 
	`thªad_c⁄d_sig«l
(
_c⁄èöî_queue_n⁄em±y
);

142 
	}
}

153 
	g°age_c⁄èöî_t
::
	$c⁄èöî_queue_íqueue_no_mîge
(
∑ckë_t
* 
∑ckë
)

155 
∑ckë_li°_t
* 
∑ckës
 = 
√w
 
	`∑ckë_li°_t
();

156 
∑ckës
->
	`push_back
(
∑ckë
);

157 
	`c⁄èöî_queue_íqueue_no_mîge
(
∑ckës
);

158 
	}
}

169 
∑ckë_li°_t
* 
	g°age_c⁄èöî_t
::
	$c⁄èöî_queue_dequeue
() {

172  
_c⁄èöî_queue
.
	`em±y
() ) {

173 
	`thªad_c⁄d_waô
–
_c⁄èöî_queue_n⁄em±y
, 
_c⁄èöî_lock
 );

177 
∑ckë_li°_t
* 
∂i°
 = 
_c⁄èöî_queue
.
	`‰⁄t
();

178 
_c⁄èöî_queue
.
	`p›_‰⁄t
();

180  
∂i°
;

181 
	}
}

191 
	g°age_c⁄èöî_t
::
	$¸óã_w‹kî
()

194 
_√xt_thªad
++;

195 
c_°r
 
	`thªad_«me
("%s_THREAD_%d", 
_c⁄èöî_«me
.
	`d©a
(), 
_√xt_thªad
);

196 
thªad_t
* 
thªad
 = 
√w
 
	`°age_thªad
(
thªad_«me
, 
this
);

198 
	`TRACE
(
TRACE_DEBUG
, "Cª©ögÅhªad %s\n", 
thªad_«me
.
	`d©a
());

200 #ifde‡
USE_SMTHREAD_AS_BASE


201 
thªad
->
	`f‹k
();

203 
	`thªad_¸óã
(
thªad
, &
_poﬁ
);

207 
_Ω
.
	`nŸify_ˇ∑côy_ö¸ó£
(1);

208 
	}
}

212 
	g°age_c⁄èöî_t
::
	$ª£rve
(
n
)

214 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_c⁄èöî_lock
);

215 
	`_ª£rve
(
n
);

216 
	}
}

226 
	g°age_c⁄èöî_t
::
	$_ª£rve
(
n
) {

229 
	`as£π
(
n
 > 0);

234 
	`as£π
(
n
 <
_max_thªads
);

239 
cuº_ˇ∑côy
 = 
_Ω
.
	`gë_ˇ∑côy
();

240 
cuº_ª£rved
 = 
_Ω
.
	`gë_ª£rved
();

241 i‡((
cuº_ˇ∑côy
 - 
cuº_ª£rved
Ë>
n
) {

243 
_Ω
.
	`ª£rve
(
n
);

251 
cuº_ˇ∑côy
 < 
n
) {

252 
	`¸óã_w‹kî
();

253 
cuº_ˇ∑côy
++;

269 
cuº_ˇ∑côy
 < 
_max_thªads
) {

271 
uƒe£rved
 = 
cuº_ˇ∑côy
 - 
cuº_ª£rved
;

272 i‡(
uƒe£rved
 >
n
) {

277 
	`¸óã_w‹kî
();

278 
cuº_ˇ∑côy
++;

283 
_Ω
.
	`ª£rve
(
n
);

287 
	}
};

298 
	g°age_c⁄èöî_t
::
	$uƒe£rve
(
n
) {

300 
	`as£π
(
n
 > 0);

303 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_c⁄èöî_lock
);

305 
_Ω
.
	`uƒe£rve
(
n
);

307 
	}
}

328 
	g°age_c⁄èöî_t
::
	$íqueue
(
∑ckë_t
* 
∑ckë
) {

331 
	`as£π
(
∑ckë
 !
NULL
);

332 
boﬁ
 
uƒe£rve
 = 
∑ckë
->
	`uƒe£rve_w‹kî_⁄_com∂ëi⁄
();

333 
gu¨d
<
di•©chî_t
::
w‹kî_ªÀa£r_t
> 
wr
 = di•©chî_t::
	`ªÀa£r_acquúe
();

334 
∑ckë
->
	`de˛¨e_w‹kî_√eds
(
wr
);

343 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_c⁄èöî_lock
);

347 i‡(!
∑ckë
->
	`is_mîge_íabÀd
()) {

349 
	`c⁄èöî_queue_íqueue_no_mîge
(
∑ckë
);

350 i‡(
TRACE_MERGING
)

351 
	`TRACE
(
TRACE_ALWAYS
, "%s merging disabled\n",

352 
∑ckë
->
_∑ckë_id
.
	`d©a
());

366 if(
ALWAYS_TRY_OSP_INSTEAD_OF_WORKER_CREATE


367 || (
_Ω
.
	`gë_n⁄_idÀ
(Ë>
_poﬁ
.
_max_a˘ive
)) {

371 
li°
<
°age_ad≠t‹_t
*>::
ôî©‹
 
sô
 = 
_c⁄èöî_cuºít_°ages
.
	`begö
();

372  ; 
sô
 !
_c⁄èöî_cuºít_°ages
.
	`íd
(); ++sit) {

375 
°age_c⁄èöî_t
::
°age_ad≠t‹_t
* 
ad
 = *
sô
;

377 
°age_c⁄èöî_t
::
mîge_t
 
ªt
 = 
ad
->
	`åy_mîge
(
∑ckë
);

378 i‡(
ªt
 =
°age_c⁄èöî_t
::
MERGE_SUCCESS_RELEASE_RESOURCES
) {

380 
cs
.
	`exô
();

381 i‡(
uƒe£rve
)

382 
wr
->
	`ªÀa£_ªsour˚s
();

385 i‡(
ªt
 =
°age_c⁄èöî_t
::
MERGE_SUCCESS_HOLD_RESOURCES
)

394 
C⁄èöîQueue
::
ôî©‹
 
cô
 = 
_c⁄èöî_queue
.
	`begö
();

395  ; 
cô
 !
_c⁄èöî_queue
.
	`íd
(); ++cit) {

397 
∑ckë_li°_t
* 
cq_∂i°
 = *
cô
;

398 
∑ckë_t
* 
cq_∑ckë
 = 
cq_∂i°
->
	`‰⁄t
();

408 i‡–
cq_∑ckë
->
	`is_mîgóbÀ
(
∑ckë
) ) {

411 
cq_∂i°
->
	`push_back
(
∑ckë
);

414 
cs
.
	`exô
();

417 i‡(
uƒe£rve
)

418 
wr
->
	`ªÀa£_ªsour˚s
();

425 i‡(
TRACE_MERGING
)

426 
	`TRACE
(
TRACE_ALWAYS
, "%s couldÇot be merged\n",

427 
∑ckë
->
_∑ckë_id
.
	`d©a
());

432 
	`c⁄èöî_queue_íqueue_no_mîge
(
∑ckë
);

434 
	}
};

444 
	g°age_c⁄èöî_t
::
	$run
() {

453 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_c⁄èöî_lock
);

456 
∑ckë_li°_t
* 
∑ckës
 = 
	`c⁄èöî_queue_dequeue
();

459 
	`as£π
–
∑ckës
 !
NULL
 );

460 
	`as£π
–!
∑ckës
->
	`em±y
() );

461 i‡(
TRACE_DEQUEUE
) {

462 
∑ckë_t
* 
hód_∑ckë
 = *(
∑ckës
->
	`begö
());

463 
	`TRACE
(
TRACE_ALWAYS
, "Processing %s\n",

464 
hód_∑ckë
->
_∑ckë_id
.
	`d©a
());

472 
°age_ad≠t‹_t


473 
	`ad≠t‹
(
this
,

474 
∑ckës
,

475 
∑ckës
->
	`‰⁄t
()->
_ouçut_fûãr
->
	`öput_tu∂e_size
());

481 
_c⁄èöî_cuºít_°ages
.
	`push_back
(&
ad≠t‹
);

486 
_Ω
.
	`nŸify_n⁄_idÀ
();

489 
cs
.
	`exô
();

493 
gu¨d
<
°age_t
> 
°age
 = 
_°age_makî
->
	`¸óã_°age
();

494 
ad≠t‹
.
	`run_°age
(
°age
);

498 
¸ôiˇl_£˘i⁄_t
 
	`cs_ªmove_a˘ive_°age
(
_c⁄èöî_lock
);

500 
_c⁄èöî_cuºít_°ages
.
	`ªmove
(&
ad≠t‹
);

503 
cs_ªmove_a˘ive_°age
.
	`exô
();

508 
	}
}

524 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$°age_ad≠t‹_t
(
°age_c⁄èöî_t
* 
c⁄èöî
,

525 
∑ckë_li°_t
* 
∑ckë_li°
,

526 
size_t
 
tu∂e_size
)

527 : 
	`ad≠t‹_t
(
∑ge
::
	`Æloc
(
tu∂e_size
)),

528 
	`_°age_ad≠t‹_lock
(
	`thªad_muãx_¸óã
()),

529 
	`_c⁄èöî
(
c⁄èöî
),

530 
	`_∑ckë_li°
(
∑ckë_li°
),

531 
	`_√xt_tu∂e
(
NEXT_TUPLE_INITIAL_VALUE
),

532 
	`_°ûl_ac˚±ög_∑ckës
(
åue
),

533 
	`_c⁄èös_œã_mîgî
(
Ál£
),

534 
	$_ˇn˚Œed
(
Ál£
)

537 
	`as£π
–!
∑ckë_li°
->
	`em±y
() );

539 
∑ckë_li°_t
::
ôî©‹
 
ô
;

545 
ô
 = 
∑ckë_li°
->
	`begö
();

546 
_∑ckë
 = *
ô
;

550 
ô
 = 
∑ckë_li°
->
	`begö
(); ià!∑ckë_li°->
	`íd
(); ++it) {

551 
∑ckë_t
* 
∑ckë
 = *
ô
;

552 
∑ckë
->
_√xt_tu∂e_⁄_mîge
 = 
NEXT_TUPLE_INITIAL_VALUE
;

553 
∑ckë
->
	`ouçut_buf„r
()->
	`wrôî_öô
();

555 
	}
}

576 
	g°age_c⁄èöî_t
::
mîge_t
 
°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$åy_mîge
(
∑ckë_t
* 
∑ckë
) {

579 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_°age_ad≠t‹_lock
);

582 i‡–!
_°ûl_ac˚±ög_∑ckës
 ) {

584  
°age_c⁄èöî_t
::
MERGE_FAILED
;

596 i‡–!
_∑ckë
->
	`is_mîgóbÀ
(
∑ckë
) ) {

598  
°age_c⁄èöî_t
::
MERGE_FAILED
;

604 
°age_c⁄èöî_t
::
mîge_t
 
ªt
;

607 
_∑ckë_li°
->
	`push_‰⁄t
(
∑ckë
);

608 
∑ckë
->
_√xt_tu∂e_⁄_mîge
 = 
_√xt_tu∂e
;

609 i‡((
_√xt_tu∂e
 =
NEXT_TUPLE_INITIAL_VALUE
Ë|| 
_c⁄èös_œã_mîgî
)

614 
ªt
 = 
°age_c⁄èöî_t
::
MERGE_SUCCESS_RELEASE_RESOURCES
;

618 
_c⁄èös_œã_mîgî
 = 
åue
;

619 
ªt
 = 
°age_c⁄èöî_t
::
MERGE_SUCCESS_HOLD_RESOURCES
;

624 
∑ckë
->
	`ouçut_buf„r
()->
	`wrôî_öô
();

627 
cs
.
	`exô
();

629 
	`TRACE
(
TRACE_WORK_SHARING
, "%s merged into %s.Çext_tuple_on_merge = %d\n",

630 
∑ckë
->
_∑ckë_id
.
	`d©a
(),

631 
∑ckë
->
_∑ckë_id
.
	`d©a
(),

632 
∑ckë
->
_√xt_tu∂e_⁄_mîge
);

635  
ªt
;

636 
	}
}

655 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$ouçut_∑ge
(
∑ge
* 
p
) {

657 
∑ckë_li°_t
::
ôî©‹
 
ô
, 
íd
;

658 
√xt_tu∂e
;

661 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_°age_ad≠t‹_lock
);

663 
ô
 = 
_∑ckë_li°
->
	`begö
();

664 
íd
 = 
_∑ckë_li°
->
	`íd
();

665 
_√xt_tu∂e
 +
p
->
	`tu∂e_cou¡
();

666 
√xt_tu∂e
 = 
_√xt_tu∂e
;

668 
cs
.
	`exô
();

675 
∑ge
::
ôî©‹
 
≥nd
 = 
p
->
	`íd
();

676 
boﬁ
 
∑ckës_ªmaöög
 = 
Ál£
;

677 
ô
 !
íd
) {

680 
∑ckë_t
* 
cuº_∑ckë
 = *
ô
;

681 
tu∂e_fifo
* 
ouçut_buf„r
 = 
cuº_∑ckë
->
	`ouçut_buf„r
();

682 
tu∂e_fûãr_t
* 
ouçut_fûãr
 = 
cuº_∑ckë
->
_ouçut_fûãr
;

683 
boﬁ
 
ãrmö©e_cuº_∑ckë
 = 
Ál£
;

684 
åy
 {

688 
∑ge
::
ôî©‹
 
∑ge_ô
 = 
p
->
	`begö
();

689 
∑ge_ô
 !
≥nd
) {

692 
tu∂e_t
 
ö_tup
 = 
∑ge_ô
.
	`adv™˚
();

693 if(
ouçut_fûãr
->
	`£À˘
(
ö_tup
)) {

698 
tu∂e_t
 
out_tup
 = 
ouçut_buf„r
->
	`Æloˇã
();

699 
ouçut_fûãr
->
	`¥oje˘
(
out_tup
, 
ö_tup
);

706 i‡–
√xt_tu∂e
 =
cuº_∑ckë
->
_√xt_tu∂e_√eded
 ) {

710 
ãrmö©e_cuº_∑ckë
 = 
åue
;

714 } 
	`ˇtch
(
Tîmö©edBuf„rEx˚±i⁄
 &
e
) {

718 
	`TRACE
(
TRACE_ALWAYS
,

720 
ãrmö©e_cuº_∑ckë
 = 
åue
;

725 i‡(
ãrmö©e_cuº_∑ckë
) {

730 
	`föish_∑ckë
(
cuº_∑ckë
);

731 
ô
 = 
_∑ckë_li°
->
	`îa£
(it);

736 ++
ô
;

737 
∑ckës_ªmaöög
 = 
åue
;

742 i‡–!
∑ckës_ªmaöög
 )

743 
throw
 
	`°›_ex˚±i⁄
();

744 
	}
}

759 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$föish_∑ckë
(
∑ckë_t
* 
∑ckë
) {

762 
gu¨d
<
tu∂e_fifo
> 
ouçut_buf„r
 = 
∑ckë
->
	`ªÀa£_ouçut_buf„r
();

763 i‡–
ouçut_buf„r
->
	`£nd_eof
() )

766 
ouçut_buf„r
.
	`ªÀa£
();

769 i‡–
∑ckë
 !
_∑ckë
 ) {

772 
dñëe
 
∑ckë
;

774 
	}
}

792 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$run_°age
(
°age_t
* 
°age
) {

796 
	`as£π
–
°age
 !
NULL
 );

800 
boﬁ
 
îr‹
 = 
Ál£
;

801 
åy
 {

802 
°age
->
	`öô
(
this
);

803 
°age
->
	`¥o˚ss
();

804 
	`Êush
();

805 } 
	`ˇtch
(
°›_ex˚±i⁄
 &) {

807 
	`TRACE
(
TRACE_DEBUG
, "process()ÉndedÉarly\n");

808 } 
	`ˇtch
(
QPùeEx˚±i⁄
 &
qe
) {

810 
	`TRACE
(
TRACE_ALWAYS
, "¥o˚ss(Ëícou¡îedá¿îr‹: %s\n", 
qe
.
	`wh©
());

811 
îr‹
 = 
åue
;

812 } 
	`ˇtch
 (...) {

813 
	`TRACE
(
TRACE_ALWAYS
, "Caught unrecognizedÉxception\n");

814 
	`as£π
(
Ál£
);

818 
	`°›_ac˚±ög_∑ckës
();

819 if(
îr‹
)

820 
	`ab‹t_quîõs
();

822 
	`˛ónup
();

824 
	}
}

850 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$˛ónup
() {

853 
∑ckë_li°_t
::
ôî©‹
 
ô
;

854 
ô
 = 
_∑ckë_li°
->
	`begö
(); ià!_∑ckë_li°->
	`íd
(); ) {

856 
∑ckë_t
* 
cuº_∑ckë
 = *
ô
;

861 i‡–
cuº_∑ckë
->
_√xt_tu∂e_⁄_mîge
 =
NEXT_TUPLE_INITIAL_VALUE
 ) {

865 
	`föish_∑ckë
(
cuº_∑ckë
);

867 
ô
 = 
_∑ckë_li°
->
	`îa£
(it);

875 
cuº_∑ckë
->
_√xt_tu∂e_√eded
 =

876 
cuº_∑ckë
->
_√xt_tu∂e_⁄_mîge
;

877 
cuº_∑ckë
->
_√xt_tu∂e_⁄_mîge
 = 
NEXT_TUPLE_UNINITIALIZED
;

878 ++
ô
;

882 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_c⁄èöî
->
_c⁄èöî_lock
);

889 
_c⁄èöî
->
_Ω
.
	`nŸify_idÀ
();

890 i‡(
_∑ckë
->
	`uƒe£rve_w‹kî_⁄_com∂ëi⁄
())

891 
_c⁄èöî
->
_Ω
.
	`uƒe£rve
(1);

895 i‡–
_∑ckë_li°
->
	`em±y
() )

896 
dñëe
 
_∑ckë_li°
;

898 
_c⁄èöî
->
	`c⁄èöî_queue_íqueue_no_mîge
(
_∑ckë_li°
);

902 
cs
.
	`exô
();

907 
_∑ckë_li°
 = 
NULL
;

908 
	`as£π
(
_∑ckë
 !
NULL
);

909 
dñëe
 
_∑ckë
;

910 
_∑ckë
 = 
NULL
;

911 
	}
}

935 
	g°age_c⁄èöî_t
::
°age_ad≠t‹_t
::
	$ab‹t_quîõs
() {

937 
	`TRACE
(
TRACE_ALWAYS
, "Ab‹tög quîy: %s", 
_∑ckë
->
_∑ckë_id
.
	`d©a
());

940 
∑ckë_li°_t
::
ôî©‹
 
ô
;

941 
ô
 = 
_∑ckë_li°
->
	`begö
(); ià!_∑ckë_li°->
	`íd
(); ++it) {

943 
∑ckë_t
* 
cuº_∑ckë
 = *
ô
;

944 i‡–
cuº_∑ckë
 !
_∑ckë
 ) {

946 
dñëe
 
cuº_∑ckë
;

950 
dñëe
 
_∑ckë_li°
;

951 
_∑ckë_li°
 = 
NULL
;

954 
dñëe
 
_∑ckë
;

955 
_∑ckë
 = 
NULL
;

956 
	}
}

960 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/tuple.cpp

24 
	~<c°dio
>

26 
	~"qpùe/c‹e/tu∂e.h
"

27 
	~"utû.h
"

31 
ENTER_NAMESPACE
(
qpùe
);

33 *
	$Æig√d_Æloc
(
size_t
 
sz
, size_à
Æignmít
) {

34 *
rvÆ
;

35 #ifde‡
HAVE_POSIX_MEMALIGN


36 i‡(
	`posix_memÆign
(&
rvÆ
, 
Æignmít
, 
sz
))

37 
rvÆ
 = 0;

38 #ñi‡
	`deföed
(
HAVE_MEMALIGN
)

39 
rvÆ
 = 
	`memÆign
(
Æignmít
, 
sz
);

41 #îr‹ 
No
 
memÆign
?

43  (*Ë
rvÆ
;

44 
	}
}

48 
mÆloc_∑ge_poﬁ
 
	gmÆloc_∑ge_poﬁ
::
_ö°™˚
;

52 
size_t
 
	gdeÁu…_∑ge_size
 = 8192;

53 
boﬁ
 
	göôülized
 = 
Ál£
;

55 
	$£t_deÁu…_∑ge_size
(
size_t
 
∑ge_size
) {

56 
	`as£π
(!
öôülized
);

57 
öôülized
 = 
åue
;

58 
deÁu…_∑ge_size
 = 
∑ge_size
;

59 
	}
}

61 
size_t
 
	$gë_deÁu…_∑ge_size
(Ë{  
deÁu…_∑ge_size
; 
	}
}

65 
boﬁ
 
	g∑ge
::
	$ªad_fuŒ_∑ge
(
fd
) {

68 
gu¨d
<> 
Æig√d_ba£
 = 
	`Æig√d_Æloc
(
	`∑ge_size
(), 512);

69 
	`as£π
(
Æig√d_ba£
 !
NULL
);

74 
ssize_t
 
size_ªad
 = 
	`rio_ªadn
(
fd
, 
Æig√d_ba£
, 
	`∑ge_size
());

78 i‡(
size_ªad
 == -1)

79 
	`THROW2
(
FûeEx˚±i⁄
, "::ªad faûed %s", 
	`°ªº‹
(
î∫o
));

83 i‡(
size_ªad
 == 0)

84  
Ál£
;

89 
∑ge_poﬁ
* 
poﬁ
 = 
_poﬁ
;

90 
	`mem˝y
(
this
, 
Æig√d_ba£
, 
size_ªad
);

91 
_poﬁ
 = 
poﬁ
;

95 i‡–(
	`∑ge_size
(Ë!(
size_t
)
size_ªad
) ) {

100 
	`TRACE
(
TRACE_ALWAYS
,

103 
size_ªad
,

104 
	`∑ge_size
());

105 
	`THROW1
(
FûeEx˚±i⁄
, "::readÑead wrong sizeÖage");

108  
åue
;

109 
	}
}

113 
	g∑ge
::
	$wrôe_fuŒ_∑ge
(
fd
) {

116 
gu¨d
<> 
Æig√d_ba£
 = 
	`Æig√d_Æloc
(
	`∑ge_size
(), 512);

117 
	`as£π
(
Æig√d_ba£
 !
NULL
);

118 
	`mem˝y
(
Æig√d_ba£
, 
this
, 
	`∑ge_size
());

121 
ssize_t
 
wrôe_cou¡
 = 
	`rio_wrôí
(
fd
, 
Æig√d_ba£
, 
	`∑ge_size
());

122 i‡((
size_t
)
wrôe_cou¡
 !
	`∑ge_size
()) {

123 
	`TRACE
(
TRACE_ALWAYS
, "::write(%d, %p, %zd)Ñeturned %zd: %s\n",

124 
fd
,

125 
Æig√d_ba£
,

126 
	`∑ge_size
(),

127 
wrôe_cou¡
,

128 
	`°ªº‹
(
î∫o
));

129 
	`THROW2
(
FûeEx˚±i⁄
, "::wrôe(ËÁûed %s", 
	`°ªº‹
(
î∫o
));

131 
	}
}

135 
boﬁ
 
	g∑ge
::
	$‰ód_fuŒ_∑ge
(
FILE
* 
fûe
) {

138 
size_t
 
size
 = 
	`∑ge_size
();

139 
	`TRACE
(0&
TRACE_ALWAYS
, "CompuãdÖagêsizêa†%d\n", ()
size
);

140 
∑ge_poﬁ
* 
poﬁ
 = 
_poﬁ
;

143 
size_t
 
size_ªad
 = ::
	`‰ód
(
this
, 1, 
size
, 
fûe
);

144 
_poﬁ
 = 
poﬁ
;

147 i‡–(
size_ªad
 =0Ë&& !
	`„of
(
fûe
) )

148 
	`THROW2
(
FûeEx˚±i⁄
, "::‰ód faûed %s", 
	`°ªº‹
(
î∫o
));

152 i‡–(
size_ªad
 =0Ë&& 
	`„of
(
fûe
) )

154  
Ál£
;

157 i‡–(
size
 !
size_ªad
Ë|| (sizê!
	`∑ge_size
()) ) {

162 
	`TRACE
(
TRACE_ALWAYS
,

165 
size_ªad
,

166 
	`∑ge_size
(),

167 
size
);

168 
	`THROW1
(
FûeEx˚±i⁄
, "::freadÑead wrong sizeÖage");

171  
åue
;

172 
	}
}

176 
	g∑ge
::
	$fwrôe_fuŒ_∑ge
(
FILE
 *
fûe
) {

177 
size_t
 
wrôe_cou¡
 = ::
	`fwrôe
(
this
, 1, 
	`∑ge_size
(), 
fûe
);

178 i‡–
wrôe_cou¡
 !
	`∑ge_size
() ) {

179 
	`TRACE
(
TRACE_ALWAYS
, "::fwrite() wrote %zd/%zdÖage bytes %s\n",

180 
wrôe_cou¡
,

181 
	`∑ge_size
(),

182 
	`°ªº‹
(
î∫o
));

183 
	`THROW2
(
FûeEx˚±i⁄
, "::fwrôe(ËÁûed %s", 
	`°ªº‹
(
î∫o
));

185 
	}
}

189 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/tuple_fifo.cpp

24 
	~"qpùe/c‹e/tu∂e_fifo.h
"

25 
	~"qpùe/c‹e/tu∂e_fifo_dúe˘‹y.h
"

26 
	~"utû/åa˚.h
"

27 
	~"utû/acou¡î.h
"

28 
	~<Æg‹ôhm
>

31 
ENTER_NAMESPACE
(
qpùe
);

36 
	gTRACE_MASK_WAITS
 = 
TRACE_COMPONENT_MASK_NONE
;

37 
	gTRACE_MASK_DISK
 = 
TRACE_COMPONENT_MASK_NONE
;

38 c⁄° 
boﬁ
 
	gFLUSH_TO_DISK_ON_FULL
 = 
Ál£
;

45 
±hªad_muãx_t
 
	gtu∂e_fifo_°©s_muãx
 = 
thªad_muãx_¸óã
();

46 
	g›í_fifo_cou¡
 = 0;

47 
	gtŸÆ_fifos_¸óãd
 = 0;

48 
	gtŸÆ_fifos_ex≥rõn˚d_ªad_waô
 = 0;

49 
	gtŸÆ_fifos_ex≥rõn˚d_wrôe_waô
 = 0;

50 
	gtŸÆ_fifos_ex≥rõn˚d_waô
 = 0;

60 
	gtu∂e_fifo
::
	$›í_fifos
() {

61  
›í_fifo_cou¡
;

62 
	}
}

70 
	gtu∂e_fifo
::
	$˛ór_°©s
() {

71 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
tu∂e_fifo_°©s_muãx
);

72 
›í_fifo_cou¡
 = 0;

73 
tŸÆ_fifos_¸óãd
 = 0;

74 
tŸÆ_fifos_ex≥rõn˚d_ªad_waô
 = 0;

75 
tŸÆ_fifos_ex≥rõn˚d_wrôe_waô
 = 0;

76 
	}
}

83 
	gtu∂e_fifo
::
	$åa˚_°©s
() {

84 
	`TRACE
(
TRACE_ALWAYS
,

86 
	`TRACE
(
TRACE_ALWAYS
,

87 "%dÅu∂e_fifo†¸óãd\n", 
tŸÆ_fifos_¸óãd
);

88 
	`TRACE
(
TRACE_ALWAYS
,

89 "%d cuºíéy o≥n\n", 
›í_fifo_cou¡
);

90 
	`TRACE
(
TRACE_ALWAYS
,

92 ()
tŸÆ_fifos_ex≥rõn˚d_ªad_waô
/
tŸÆ_fifos_¸óãd
);

93 
	`TRACE
(
TRACE_ALWAYS
,

95 ()
tŸÆ_fifos_ex≥rõn˚d_wrôe_waô
/
tŸÆ_fifos_¸óãd
);

96 
	}
}

111 
	g£¡öñ_∑ge_poﬁ
 : 
∑ge_poﬁ
 {

114 
_d©a
[(
qpùe
::
∑ge
)];

116 
£¡öñ_∑ge_poﬁ
()

117 : 
∑ge_poﬁ
((
qpùe
::
∑ge
))

121 
vútuÆ
 * 
Æloc
() {

122  
_d©a
;

125 
vútuÆ
 
‰ì
(*) {

134 
£¡öñ_∑ge_poﬁ
 
	gSENTINEL_POOL
;

135 
	gqpùe
::
∑ge
* 
SENTINEL_PAGE
 = 
qpùe
::∑ge::
Æloc
(1, &
SENTINEL_POOL
);

146 
	gtu∂e_fifo
::
	$öô
() {

149 
tu∂e_fifo_dúe˘‹y_t
::
	`›í_⁄˚
();

151 
_ªadî_tid
 = 
	`±hªad_£lf
();

154 
	`_£t_ªad_∑ge
(
SENTINEL_PAGE
);

157 
_wrôe_∑ge
 = 
SENTINEL_PAGE
;

160 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
IN_MEMORY
);

163 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
tu∂e_fifo_°©s_muãx
);

164 
›í_fifo_cou¡
++;

165 
tŸÆ_fifos_¸óãd
++;

166 
cs
.
	`exô
();

167 
	}
}

174 
	gtu∂e_fifo
::
	$wrôî_öô
() {

176 
_wrôî_tid
 = 
	`±hªad_£lf
();

177 
	}
}

185 
	s‰ì_∑ge
 {

186 
›î©‹
()(
	mqpùe
::
∑ge
* 
p
) {

187 
p
->
‰ì
();

197 
	gtu∂e_fifo
::
	$de°roy
() {

199 
°d
::
	`f‹_óch
(
_∑ges
.
	`begö
(), _∑ges.
	`íd
(), 
	`‰ì_∑ge
());

200 
°d
::
	`f‹_óch
(
_‰ì_∑ges
.
	`begö
(), _‰ì_∑ges.
	`íd
(), 
	`‰ì_∑ge
());

203 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
tu∂e_fifo_°©s_muãx
);

204 
›í_fifo_cou¡
--;

205 
boﬁ
 
wrôe_waô
 = 
_num_waôs_⁄_ö£π
 > 0;

206 
boﬁ
 
ªad_waô
 = 
_num_waôs_⁄_ªmove
 > 0;

207 i‡(
ªad_waô
)

208 
tŸÆ_fifos_ex≥rõn˚d_ªad_waô
++;

209 i‡(
wrôe_waô
)

210 
tŸÆ_fifos_ex≥rõn˚d_wrôe_waô
++;

211 i‡(
ªad_waô
 || 
wrôe_waô
)

212 
tŸÆ_fifos_ex≥rõn˚d_waô
++;

214 
	`TRACE
(
TRACE_MASK_WAITS
 & 
TRACE_ALWAYS
,

216 ()
_num_waôs_⁄_ö£π
/
_num_ö£πed
);

217 
	`TRACE
(
TRACE_MASK_WAITS
 & 
TRACE_ALWAYS
,

219 ()
_num_waôs_⁄_ªmove
/
_num_ªmoved
);

220 
	}
}

237 
boﬁ
 
	gtu∂e_fifo
::
	$c›y_∑ge
(
∑ge
* 
d°
, 
timeout_ms
) {

239 i‡(!
	`ísuª_ªad_ªady
(
timeout_ms
))

241  
Ál£
;

244 
	`as£π
(
_ªad_ôî©‹
 =
_ªad_∑ge
->
	`begö
());

247 
d°
->
	`˛ór
();

248 
size_t
 
ˇ∑côy
 = 
d°
->
	`ˇ∑côy
();

249 
size_t
 
i
 = 0; i < 
ˇ∑côy
; i++) {

250 
tu∂e_t
 
tu∂e
;

251 i‡(!
	`gë_tu∂e
(
tu∂e
))

253 
d°
->
	`≠≥nd_tu∂e
(
tu∂e
);

257 
_num_ªmoved
 +
d°
->
	`tu∂e_cou¡
();

258  
åue
;

259 
	}
}

273 
boﬁ
 
	gtu∂e_fifo
::
	$£nd_eof
() {

274 
åy
 {

276 
	`_Êush_wrôe_∑ge
(
åue
);

277  
åue
;

279 
	`ˇtch
(
Tîmö©edBuf„rEx˚±i⁄
 &
e
) {

281  
Ál£
;

283 
	}
}

301 
boﬁ
 
	gtu∂e_fifo
::
	$ãrmö©e
() {

304 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_lock
);

311 if(
	`is_ãrmö©ed
(Ë|| 
	`is_d⁄e_wrôög
())

312  
Ál£
;

316 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
TERMINATED
);

317 
	`thªad_c⁄d_sig«l
(
_ªadî_nŸify
);

318 
	`thªad_c⁄d_sig«l
(
_wrôî_nŸify
);

321  
åue
;

322 
	}
}

328 
ölöe
 
	gtu∂e_fifo
::
	$waô_f‹_ªadî
() {

329 
_num_waôs_⁄_ö£π
++;

330 
	`thªad_c⁄d_waô
(
_wrôî_nŸify
, 
_lock
);

331 
	}
}

333 
ölöe
 
	gtu∂e_fifo
::
	$ísuª_ªadî_ru¬ög
() {

334 
	`thªad_c⁄d_sig«l
(
_ªadî_nŸify
);

335 
	}
}

337 
ölöe
 
boﬁ
 
	gtu∂e_fifo
::
	$waô_f‹_wrôî
(
timeout_ms
) {

338 
_num_waôs_⁄_ªmove
++;

339  
	`thªad_c⁄d_waô
(
_ªadî_nŸify
, 
_lock
, 
timeout_ms
);

340 
	}
}

342 
ölöe
 
	gtu∂e_fifo
::
	$ísuª_wrôî_ru¬ög
() {

343 
	`thªad_c⁄d_sig«l
(
_wrôî_nŸify
);

344 
	}
}

353 
	gtu∂e_fifo
::
	$_Êush_wrôe_∑ge
(
boﬁ
 
d⁄e_wrôög
) {

356 
	`as£π
(!
	`is_d⁄e_wrôög
());

359 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_lock
);

360 
	`_ãrmö©i⁄_check
();

363 
_°©e
.
	`cuºít
()) {

364 
tu∂e_fifo_°©e_t
::
IN_MEMORY
: {

369 i‡(!
FLUSH_TO_DISK_ON_FULL
) {

374 
size_t
 
thªshﬁd
=1;

375 
	`_avaûabÀ_ö_mem‹y_wrôes
(Ë< 
thªshﬁd
;Åhªshﬁd = 
_thªshﬁd
) {

377 
	`waô_f‹_ªadî
();

378 
	`_ãrmö©i⁄_check
();

387 i‡(
	`_avaûabÀ_ö_mem‹y_wrôes
() >= 1) {

391 if(!
_wrôe_∑ge
->
	`em±y
()) {

392 
_∑ges
.
	`push_back
(
_wrôe_∑ge
.
	`ªÀa£
());

393 
_∑ges_ö_mem‹y
++;

394 
_∑ges_ö_fifo
++;

398 if(
d⁄e_wrôög
) {

402 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
IN_MEMORY_DONE_WRITING
);

403 
_wrôe_∑ge
.
	`d⁄e
();

406 
_wrôe_∑ge
 = 
	`_Æloc_∑ge
();

409 if(
	`_avaûabÀ_ö_mem‹y_ªads
(Ë>
_thªshﬁd
 || 
	`is_d⁄e_wrôög
())

410 
	`ísuª_ªadî_ru¬ög
();

418 
c_°r
 
fûï©h
 = 
tu∂e_fifo_dúe˘‹y_t
::
	`gíî©e_fûï©h
(
_fifo_id
);

419 
_∑ge_fûe
 = 
	`f›í
(
fûï©h
.
	`d©a
(), "w+");

420 
	`as£π
(
_∑ge_fûe
 !
NULL
);

421 i‡(
_∑ge_fûe
 =
NULL
)

422 
	`THROW2
(
FûeEx˚±i⁄
,

423 "f›í(%sËÁûed", 
fûï©h
.
	`d©a
());

424 
	`TRACE
(
TRACE_ALWAYS
, "CreatedÅuple_fifo file %s\n",

425 
fûï©h
.
	`d©a
());

429 if(!
_wrôe_∑ge
->
	`em±y
()) {

430 
_∑ges
.
	`push_back
(
_wrôe_∑ge
.
	`ªÀa£
());

431 
_∑ges_ö_mem‹y
++;

432 
_∑ges_ö_fifo
++;

434 
∑ge_li°
::
ôî©‹
 
ô
 = 
_∑ges
.
	`begö
(); ià!_∑ges.
	`íd
(); ) {

435 
qpùe
::
∑ge
* 
p
 = *
ô
;

436 
p
->
	`fwrôe_fuŒ_∑ge
(
_∑ge_fûe
);

439 
p
->
	`˛ór
();

440 
_‰ì_∑ges
.
	`push_back
(
p
);

441 
ô
 = 
_∑ges
.
	`îa£
(it);

443 
	`as£π
(
_∑ges_ö_mem‹y
 > 0);

444 
_∑ges_ö_mem‹y
--;

446 
	`fÊush
(
_∑ge_fûe
);

449 
	`as£π
(
_fûe_hód_∑ge
 == 0);

450 
_fûe_hód_∑ge
 = 
_√xt_∑ge
;

452 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
ON_DISK
);

453 i‡(
d⁄e_wrôög
) {

455 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
ON_DISK_DONE_WRITING
);

456 
_wrôe_∑ge
.
	`d⁄e
();

460 
	`as£π
(!
_‰ì_∑ges
.
	`em±y
());

461 
_wrôe_∑ge
 = 
	`_Æloc_∑ge
();

470 i‡(
_ªad_∑ge
 =
SENTINEL_PAGE
) {

471 
	`_£t_ªad_∑ge
(
	`_Æloc_∑ge
());

478 if(
	`_avaûabÀ_fifo_ªads
(Ë>
_thªshﬁd
 || 
	`is_d⁄e_wrôög
())

479 
	`ísuª_ªadî_ru¬ög
();

485 
tu∂e_fifo_°©e_t
::
ON_DISK
: {

487 
f£ek_ªt
 = 
	`f£ek
(
_∑ge_fûe
, 0, 
SEEK_END
);

488 
	`as£π
(!
f£ek_ªt
);

489 i‡(
f£ek_ªt
)

490 
	`THROW1
(
FûeEx˚±i⁄
, "fseekÅo EOF");

491 
_wrôe_∑ge
->
	`fwrôe_fuŒ_∑ge
(
_∑ge_fûe
);

492 
	`fÊush
(
_∑ge_fûe
);

493 
_∑ges_ö_fifo
++;

495 i‡(
d⁄e_wrôög
) {

496 
_°©e
.
	`å™sôi⁄
(
tu∂e_fifo_°©e_t
::
ON_DISK_DONE_WRITING
);

497 
_wrôe_∑ge
.
	`d⁄e
();

501 
_wrôe_∑ge
->
	`˛ór
();

505 if(
	`_avaûabÀ_fifo_ªads
(Ë>
_thªshﬁd
 || 
	`is_d⁄e_wrôög
())

506 
	`ísuª_ªadî_ru¬ög
();

512 
	`uƒóchabÀ
();

518 
	}
}

534 
	gtu∂e_fifo
::
	$_gë_ªad_∑ge
(
timeout_ms
) {

537 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_lock
);

538 
	`_ãrmö©i⁄_check
();

542 i‡(
	`is_ö_mem‹y
(Ë&& (
_ªad_∑ge
 !
SENTINEL_PAGE
)) {

546 
_ªad_∑ge
->
	`˛ór
();

547 
_‰ì_∑ges
.
	`push_back
(
_ªad_∑ge
.
	`ªÀa£
());

548 
	`_£t_ªad_∑ge
(
SENTINEL_PAGE
);

556 
size_t
 
t
=1;

557 (
timeout_ms
 >0Ë&& !
	`is_d⁄e_wrôög
(Ë&& (
	`_avaûabÀ_fifo_ªads
(Ë< 
t
);

558 
t
 = 
_thªshﬁd
) {

560 if(!
	`waô_f‹_wrôî
(
timeout_ms
))

563 
	`_ãrmö©i⁄_check
();

567 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
,

568 "avaûabÀÑód†%d\n", ()
	`_avaûabÀ_fifo_ªads
());

569 if(
	`_avaûabÀ_fifo_ªads
() == 0) {

573 if(
	`is_d⁄e_wrôög
()) {

575 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
, "Returning -1\n");

578 if(
timeout_ms
 != 0)

581 
	`uƒóchabÀ
();

585 
_°©e
.
	`cuºít
()) {

586 
tu∂e_fifo_°©e_t
::
IN_MEMORY
:

587 
tu∂e_fifo_°©e_t
::
IN_MEMORY_DONE_WRITING
: {

589 
	`as£π
(!
_∑ges
.
	`em±y
());

590 
	`_£t_ªad_∑ge
(
_∑ges
.
	`‰⁄t
());

591 
_∑ges
.
	`p›_‰⁄t
();

592 
	`as£π
(
_∑ges_ö_mem‹y
 > 0);

593 
_∑ges_ö_mem‹y
--;

596 
tu∂e_fifo_°©e_t
::
ON_DISK
:

597 
tu∂e_fifo_°©e_t
::
ON_DISK_DONE_WRITING
: {

604 i‡(
_ªad_∑ge
 =
SENTINEL_PAGE
)

605 
	`_£t_ªad_∑ge
(
	`_Æloc_∑ge
());

608 
_ªad_∑ge
->
	`˛ór
();

609 
	`_£t_ªad_∑ge
(
_ªad_∑ge
.
	`ªÀa£
());

615 
	`as£π
(
_ªad_∑ge
 !
SENTINEL_PAGE
);

616 
	`as£π
(
_ªad_∑ge
->
	`∑ge_size
(Ë=
mÆloc_∑ge_poﬁ
::
	`ö°™˚
()->page_size());

620 
_ªad_∑ge
->
	`˛ór
();

621 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
, "_√xt_∑gê%d\n", ()
_√xt_∑ge
);

622 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
, "_fûe_hód_∑gê%d\n", ()
_fûe_hód_∑ge
);

623 
£ek_pos
 =

624 (
_√xt_∑ge
 - 
_fûe_hód_∑ge
Ë* 
	`gë_deÁu…_∑ge_size
();

625 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
, "f£ekÅÿ%lu\n", 
£ek_pos
);

626 
f£ek_ªt
 = 
	`f£ek
(
_∑ge_fûe
, 
£ek_pos
, 
SEEK_SET
);

627 
	`as£π
(!
f£ek_ªt
);

628 i‡(
f£ek_ªt
)

629 
	`THROW2
(
FûeEx˚±i⁄
, "f£ekÅÿ%lu", 
£ek_pos
);

630 
‰ód_ªt
 = 
_ªad_∑ge
->
	`‰ód_fuŒ_∑ge
(
_∑ge_fûe
);

631 
	`as£π
(
‰ód_ªt
);

632 
	`_£t_ªad_∑ge
(
_ªad_∑ge
.
	`ªÀa£
());

635 
size_t
 
∑ge_size
 = 
_ªad_∑ge
->
	`∑ge_size
();

636 i‡(
TRACE_ALWAYS
&
TRACE_MASK_DISK
) {

637 
∑ge
* 
pg
 = 
_ªad_∑ge
.
	`ªÀa£
();

638 * 
pg_byãs
 = (*)
pg
;

639 
size_t
 
i
 = 0; i < 
∑ge_size
; i++) {

640 
	`¥ötf
("%02x", 
pg_byãs
[
i
]);

641 i‡(
i
 % 2 == 0)

642 
	`¥ötf
("\t");

643 i‡(
i
 % 16 == 0)

644 
	`¥ötf
("\n");

646 
	`_£t_ªad_∑ge
(
pg
);

649 
	`TRACE
(
TRACE_ALWAYS
&
TRACE_MASK_DISK
, "Read %d %d-byteÅuples\n",

650 ()
_ªad_∑ge
->
	`tu∂e_cou¡
(),

651 ()
_ªad_∑ge
->
	`tu∂e_size
());

656 
	`uƒóchabÀ
();

660 
	`as£π
(
_∑ges_ö_fifo
 > 0);

661 
_∑ges_ö_fifo
--;

662 
_√xt_∑ge
++;

666 if(!
FLUSH_TO_DISK_ON_FULL


667 && (
	`_avaûabÀ_ö_mem‹y_wrôes
(Ë>
_thªshﬁd
)

668 && !
	`is_d⁄e_wrôög
())

669 
	`ísuª_wrôî_ru¬ög
();

674 
	}
}

678 
	$tu∂e_fifo_gíî©e_id
() {

679 
acou¡î_t
 
√xt_fifo_id
;

680  
√xt_fifo_id
.
	`„tch_™d_öc
();

681 
	}
}

685 
	gtu∂e_fifo
::
tu∂e_fifo_°©e_t
::
	$å™sôi⁄
(c⁄° 
_tu∂e_fifo_°©e_t
 
√xt
) {

686 i‡(
	`_å™sôi⁄_ok
(
√xt
))

687 
_vÆue
 = 
√xt
;

689 
	`TRACE
(
TRACE_ALWAYS
, "InvalidÅransition from %sÅo %s\n",

690 
	`to_°rög
().
	`d©a
(),

691 
	`°©e_to_°rög
(
√xt
).
	`d©a
());

692 
	`as£π
(0);

694 
	}
}

698 
boﬁ
 
	gtu∂e_fifo
::
tu∂e_fifo_°©e_t
::
	$_å™sôi⁄_ok
(c⁄° 
_tu∂e_fifo_°©e_t
 
√xt
) {

699 
_vÆue
) {

700 
INVALID
:

703  
√xt
 =
IN_MEMORY
;

704 
IN_MEMORY
:

706 (
√xt
 =
IN_MEMORY_DONE_WRITING
)

707 || (
√xt
 =
ON_DISK
)

708 || (
√xt
 =
TERMINATED
);

709 
ON_DISK
:

711 (
√xt
 =
ON_DISK_DONE_WRITING
)

712 || (
√xt
 =
TERMINATED
);

714  
Ál£
;

716 
	}
}

720 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/core/tuple_fifo_directory.cpp

24 
	~"utû/thªad.h
"

25 
	~"utû/sync.h
"

26 
	~"utû/fûe›s.h
"

27 
	~"qpùe/c‹e/tu∂e_fifo_dúe˘‹y.h
"

29 
	~<sys/ty≥s.h
>

30 
	~<dúít.h
>

31 
	~<uni°d.h
>

35 
ENTER_NAMESPACE
(
qpùe
);

38 
±hªad_muãx_t


39 
	gtu∂e_fifo_dúe˘‹y_t
::
_dú_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

41 
	gtu∂e_fifo_dúe˘‹y_t
::
dú_°©e_t


42 
tu∂e_fifo_dúe˘‹y_t
::
_dú_°©e
 = 
TUPLE_FIFO_DIRECTORY_FIRST
;

44 
c_°r


45 
	gtu∂e_fifo_dúe˘‹y_t
::
_dú_∑th
 = 
c_°r
("temp");

49 c⁄° 
	gc_°r
& 
	gtu∂e_fifo_dúe˘‹y_t
::
	$dú_∑th
() {

51  
_dú_∑th
;

52 
	}
}

56 
	gtu∂e_fifo_dúe˘‹y_t
::
	$›í_⁄˚
()

58 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_dú_muãx
);

59 i‡(
_dú_°©e
 !
TUPLE_FIFO_DIRECTORY_FIRST
)

62 c⁄° 
c_°r
& 
∑th
 = 
	`dú_∑th
();

63 i‡(
	`fûe›s_check_fûe_dúe˘‹y
(
∑th
.
	`d©a
()))

64 
	`THROW2
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
,

66 
∑th
.
	`d©a
());

68 i‡(
	`fûe›s_check_dúe˘‹y_ac˚ssibÀ
(
∑th
.
	`d©a
()))

69 
	`THROW2
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
,

71 
∑th
.
	`d©a
());

73 
	`˛ón_dú
();

75 
_dú_°©e
 = 
TUPLE_FIFO_DIRECTORY_OPEN
;

76 
	}
}

80 
	gtu∂e_fifo_dúe˘‹y_t
::
	$˛o£
() {

82 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_dú_muãx
);

83 i‡(
_dú_°©e
 !
TUPLE_FIFO_DIRECTORY_OPEN
)

86 
	`˛ón_dú
();

88 
_dú_°©e
 = 
TUPLE_FIFO_DIRECTORY_CLOSED
;

89 
	}
}

93 
c_°r
 
	gtu∂e_fifo_dúe˘‹y_t
::
	$gíî©e_fûï©h
(
id
) {

94  
	`c_°r
("%s/tu∂e_fifo_%d", 
	`dú_∑th
().
	`d©a
(), 
id
);

95 
	}
}

99 
boﬁ
 
	gtu∂e_fifo_dúe˘‹y_t
::
	$fûíame_fûãr
(c⁄° * 
∑th
) {

100 
id
;

101  
	`ssˇnf
(
∑th
, "tu∂e_fifo_%d", &
id
) == 1;

102 
	}
}

106 
	gtu∂e_fifo_dúe˘‹y_t
::
	$˛ón_dú
() {

108 
DIR
* 
dú
 = 
	`›ídú
(
	`dú_∑th
().
	`d©a
());

109 i‡(
dú
 =
NULL
)

110 
	`THROW2
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
,

111 "›ídú(%sËÁûed", 
	`dú_∑th
().
	`d©a
());

115 
dúít
* 
döfo
 = 
	`ªaddú
(
dú
);

116 i‡(
döfo
 =
NULL
)

120 c⁄° * 
fûíame
 = 
döfo
->
d_«me
;

121 i‡(!
	`fûíame_fûãr
(
fûíame
))

127 
c_°r
 
	`fûï©h
("%s/%s", 
	`dú_∑th
().
	`d©a
(), 
fûíame
);

128 i‡(
	`u∆ök
(
fûï©h
.
	`d©a
()))

129 
	`THROW2
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
,

130 "u∆ök(%sËÁûed", 
fûï©h
.
	`d©a
());

133 
	`TRACE
(
TRACE_ALWAYS
, "Deleting oldÅuple_fifo file %s\n",

134 
fûï©h
.
	`d©a
());

137 i‡(
	`˛o£dú
(
dú
))

138 
	`THROW2
(
Tu∂eFifoDúe˘‹yEx˚±i⁄
,

139 "˛o£dú(%sËÁûed", 
	`dú_∑th
().
	`d©a
());

140 
	}
}

144 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/scheduler/cpu.cpp

31 
	~"utû.h
"

32 
	~"qpùe/scheduÀr/˝u.h
"

33 
	~"qpùe/scheduÀr/˝u_°ru˘.h
"

34 
	~"qpùe/scheduÀr/os_suµ‹t.h
"

37 
ENTER_NAMESPACE
(
qpùe
);

52 
	$˝u_böd_£lf
(
˝u_t
 
˝u
)

57 #ifde‡
FOUND_LINUX


65 i‡–
	`sched_£èfföôy
(0, (
os_˝u_£t_t
), &
˝u
->
˝u_£t
) )

66 
throw
 
	`EXCEPTION2
(
QPùeEx˚±i⁄
,

68 
	`î∫o_to_°r
().
	`d©a
());

87 i‡–
	`¥o˚ss‹_böd
(
P_LWPID
, 
P_MYID
, 
˝u
->
˝u_id
, 
NULL
) )

88 
	`THROW2
(
QPùeEx˚±i⁄
,

90 
	`î∫o_to_°r
().
	`d©a
());

95 
	`THROW1
(
QPùeEx˚±i⁄
,

98 
	}
}

101 
	$˝u_gë_unique_id
(
˝u_t
 
˝u
) {

102  
˝u
->
˝u_unique_id
;

103 
	}
}

105 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/scheduler/cpu_set.cpp

29 
	~<c°dlib
>

30 
	~<c°rög
>

31 
	~<uni°d.h
>

32 
	~<˚ºno
>

34 
	~"utû.h
"

35 
	~"qpùe/scheduÀr/˝u_£t.h
"

36 
	~"qpùe/scheduÀr/˝u_£t_°ru˘.h
"

37 
	~"qpùe/scheduÀr/os_suµ‹t.h
"

39 
ENTER_NAMESPACE
(
qpùe
);

44 #ifde‡
FOUND_LINUX


46 
˝u_£t_c›y
–
os_˝u_£t_t
* 
d°
, os_˝u_£t_t* 
§c
 );

47 
˝u_£t_öô_Löux
(
˝u_£t_p
 
˝u_£t
);

53 
˝u_£t_öô_Sﬁ¨is
(
˝u_£t_p
 
˝u_£t
);

74 
	$˝u_£t_öô
(
˝u_£t_p
 
˝u_£t
)

77 #ifde‡
FOUND_LINUX


79 
	`˝u_£t_öô_Löux
–
˝u_£t
 );

85 
	`˝u_£t_öô_Sﬁ¨is
–
˝u_£t
 );

88 
	}
}

101 
	$˝u_£t_gë_num_˝us
(
˝u_£t_p
 
˝u_£t
)

104 i‡–
˝u_£t
 =
NULL
 )

105 
	`THROW1
(
QPùeEx˚±i⁄
, "Called with NULL cpu_set_t");

107  
˝u_£t
->
˝u£t_num_˝us
;

108 
	}
}

124 
˝u_t
 
	$˝u_£t_gë_˝u
(
˝u_£t_p
 
˝u_£t
, 
ödex
)

128 i‡–
˝u_£t
 =
NULL
 )

129 
	`THROW1
(
QPùeEx˚±i⁄
, "Called with NULL cpu_set_t");

131 i‡–
ödex
 < 0 )

132 
	`THROW2
(
OutOfR™ge
, "CÆÀd wôhÇeg©ivêödex %d\n", 
ödex
);

133 i‡–
ödex
 >
˝u_£t
->
˝u£t_num_˝us
 )

134 
	`THROW3
(
OutOfR™ge
,

136 
ödex
,

137 
˝u_£t
->
˝u£t_num_˝us
);

139  &
˝u_£t
->
˝u£t_˝us
[
ödex
];

140 
	}
}

153 
	$˝u_£t_föish
(
˝u_£t_p
 
˝u_£t
)

155 
˝u_£t
->
˝u£t_num_˝us
 = 0;

156 
	`‰ì
–
˝u_£t
->
˝u£t_˝us
 );

157 
˝u_£t
->
˝u£t_˝us
 = 
NULL
;

158 
	}
}

164 #ifde‡
FOUND_LINUX


177 
	$˝u_£t_c›y
–
os_˝u_£t_t
* 
d°
, os_˝u_£t_t* 
§c
 )

179 
i
;

181 
	`CPU_ZERO
–
d°
 );

182 
i
 = 0; i < 
CPU_SETSIZE
; i++)

183 i‡–
	`CPU_ISSET
(
i
, 
§c
) )

184 
	`CPU_SET
(
i
, 
d°
);

185 
	}
}

195 
	$˝u_£t_öô_Löux
(
˝u_£t_p
 
˝u_£t
)

198 
i
;

199 
os_˝u_£t_t
 
‹igöÆ_afföôy_£t
;

200 
num_˝us
 = 
	`sysc⁄f
(
_SC_NPROCESSORS_CONF
);

205 i‡–
	`sched_gëafföôy
–0, (
os_˝u_£t_t
), &
‹igöÆ_afföôy_£t
 ) )

206 
throw
 
	`EXCEPTION2
(
ThªadEx˚±i⁄
,

208 
	`î∫o_to_°r
().
	`d©a
());

211 i‡–
	`sched_£èfföôy
–0, (
os_˝u_£t_t
), &
‹igöÆ_afföôy_£t
 ) )

212 
throw
 
	`EXCEPTION2
(
ThªadEx˚±i⁄
,

214 
	`î∫o_to_°r
().
	`d©a
());

218 
˝u_t
 
˝us
 =

219 (
˝u_t
)
	`mÆloc
–
num_˝us
 * (
˝u_s
) );

220 i‡–
˝us
 =
NULL
 )

221 
throw
 
	`EXCEPTION1
(
BadAŒoc
, "cpuárray");

223 
i
 = 0; i < 
num_˝us
; i++)

225 
	`CPU_ZERO
–&
˝us
[
i
].
˝u_£t
 );

230 
num_found
 = 0;

231 
˝u_num
;

232 
˝u_num
 = 0; ; cpu_num++)

234 
os_˝u_£t_t
 
ã°_£t
;

235 
	`CPU_ZERO
–&
ã°_£t
 );

236 
	`CPU_SET
 ( 
˝u_num
, &
ã°_£t
 );

238 i‡–!
	`sched_£èfföôy
–0, (
os_˝u_£t_t
), &
ã°_£t
 ) )

241 
˝us
[
num_found
].
˝u_unique_id
 = 
˝u_num
;

242 
	`˝u_£t_c›y
–&
˝us
[
num_found
].
˝u_£t
, &
ã°_£t
 );

243 
num_found
++;

244 i‡–
num_found
 =
num_˝us
 )

252 i‡–
	`sched_£èfföôy
–0, (
os_˝u_£t_t
), &
‹igöÆ_afföôy_£t
 ) )

253 
throw
 
	`EXCEPTION2
(
ThªadEx˚±i⁄
,

255 
	`î∫o_to_°r
().
	`d©a
());

259 
˝u_£t
->
˝u£t_num_˝us
 = 
num_˝us
;

260 
˝u_£t
->
˝u£t_˝us
 = 
˝us
;

261 
	}
}

276 
	$˝u_£t_öô_Sﬁ¨is
(
˝u_£t_p
 
˝u_£t
)

279 
i
;

280 
num_˝us
 = 
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

284 
˝u_t
 
˝us
 =

285 (
˝u_t
)
	`mÆloc
–
num_˝us
 * (
˝u_s
) );

286 i‡–
˝us
 =
NULL
 )

287 
	`THROW
(
BadAŒoc
);

289 
i
 = 0; i < 
num_˝us
; i++)

292 
	`mem£t
–&
˝us
[
i
], 0, (
˝u_s
) );

297 
num_found
 = 0;

298 
˝u_num
;

299 
˝u_num
 = 0; ; cpu_num++)

301 
°©us
 = 
	`p_⁄löe
(
˝u_num
, 
P_STATUS
);

302 i‡–(
°©us
 =-1Ë&& (
î∫o
 =
EINVAL
) )

306 
˝us
[
num_found
].
˝u_unique_id
 = 
˝u_num
;

307 
˝us
[
num_found
].
˝u_id
 = 
˝u_num
;

308 i‡–
	`¥o˚ss‹_öfo
–
˝u_num
, &
˝us
[
num_found
].
˝u_¥oc_öfo
 ) ) {

309 
	`‰ì
(
˝us
);

310 
	`THROW4
(
ThªadEx˚±i⁄
,

312 
	`î∫o_to_°r
().
	`d©a
(),

313 
˝u_num
+1,

314 
num_˝us
);

317 
num_found
++;

318 i‡–
num_found
 =
num_˝us
 )

324 
˝u_£t
->
˝u£t_num_˝us
 = 
num_˝us
;

325 
˝u_£t
->
˝u£t_˝us
 = 
˝us
;

326 
	}
}

333 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/aggregate.cpp

24 
	~"qpùe/°ages/aggªg©e.h
"

26 
ENTER_NAMESPACE
(
qpùe
);

29 c⁄° 
c_°r
 
	gaggªg©e_∑ckë_t
::
PACKET_TYPE
 = "AGGREGATE";

31 c⁄° 
c_°r
 
	gaggªg©e_°age_t
::
DEFAULT_STAGE_NAME
 = "AGGREGATE_STAGE";

34 
	gaggªg©e_°age_t
::
	$¥o˚ss_∑ckë
()

36 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

37 
aggªg©e_∑ckë_t
* 
∑ckë
 = (aggªg©e_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

40 
tu∂e_aggªg©e_t
* 
aggªg©e
 = 
∑ckë
->
_aggªg©‹
;

41 
key_exåa˘‹_t
* 
exåa˘
 = 
∑ckë
->
_exåa˘
;

42 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

43 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

47 
size_t
 
de°_size
 = 
∑ckë
->
	`ouçut_buf„r
()->
	`tu∂e_size
();

48 
¨øy_gu¨d_t
<> 
de°_d©a
 = 
√w
 [
de°_size
];

49 
tu∂e_t
 
	`de°
(
de°_d©a
, 
de°_size
);

52 
size_t
 
agg_size
 = 
aggªg©e
->
	`tu∂e_size
();

53 
¨øy_gu¨d_t
<> 
agg_d©a
 = 
√w
 [
agg_size
];

54 
tu∂e_t
 
	`agg
(
agg_d©a
, 
agg_size
);

56 
size_t
 
key_size
 = 
exåa˘
->
	`key_size
();

57 * 
œ°_key
 = 
aggªg©e
->
	`key_exåa˘‹
()->
	`exåa˘_key
(
agg_d©a
);

59 
i
 = 0;

60 
boﬁ
 
fú°
 = 
åue
;

64 
tu∂e_t
 
§c
;

65 if(!
öput_buf„r
->
	`gë_tu∂e
(
§c
))

71 c⁄° * 
key
 = 
exåa˘
->
	`exåa˘_key
(
§c
);

74 if(
fú°
 ||

75 (
key_size
 && 
	`memcmp
(
œ°_key
, 
key
, key_size))) {

77 if(!
fú°
) {

78 
aggªg©e
->
	`föish
(
de°
, 
agg
.
d©a
);

79 
	`TRACE
(0&
TRACE_ALWAYS
, "key_sizê%d\n", 
key_size
);

80 
ad≠t‹
->
	`ouçut
(
de°
);

83 
aggªg©e
->
	`öô
(
agg
.
d©a
);

84 
	`mem˝y
(
œ°_key
, 
key
, 
key_size
);

85 
fú°
 = 
Ál£
;

88 
aggªg©e
->
	`aggªg©e
(
agg
.
d©a
, 
§c
);

89 
i
++;

93 if(!
fú°
) {

94 
aggªg©e
->
	`föish
(
de°
, 
agg
.
d©a
);

95 
ad≠t‹
->
	`ouçut
(
de°
);

97 
	}
}

100 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/bnl_in.cpp

24 
	~"qpùe/°ages/b∆_ö.h
"

26 
	~<c°rög
>

27 
	~<bô£t
>

29 
usög
 
	g°d
::
bô£t
;

33 c⁄° 
c_°r
 
	gb∆_ö_∑ckë_t
::
PACKET_TYPE
 = "BNL_IN";

37 c⁄° 
c_°r
 
	gb∆_ö_°age_t
::
DEFAULT_STAGE_NAME
 = "BNL_IN_STAGE";

47 
	gb∆_ö_°age_t
::
	$¥o˚ss_∑ckë
() {

49 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

50 
b∆_ö_∑ckë_t
* 
∑ckë
 = (b∆_ö_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

53 
tu∂e_fifo
* 
À·_buf„r
 = 
∑ckë
->
_À·_buf„r
;

54 
tu∂e_sour˚_t
* 
right_sour˚
 = 
∑ckë
->
_right_sour˚
;

55 
key_com∑ª_t
* 
_com∑ª
 = 
∑ckë
->_compare;

56 
key_exåa˘‹_t
* 
_exåa˘
 = 
∑ckë
->_extract;

57 
tu∂e_com∑øt‹_t
 
	`com∑ª
(
_exåa˘
, 
_com∑ª
);

58 
boﬁ
 
ouçut_⁄_m©ch
 = 
∑ckë
->
_ouçut_⁄_m©ch
;

62 
	`TRACE
(
TRACE_ALWAYS
,

64 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

67 
gu¨d
<
qpùe
::
∑ge
> 
ouãr_tu∂e_∑ge
 = qpùe::∑ge::
	`Æloc
(
À·_buf„r
->
	`tu∂e_size
());

68 
gu¨d
<
qpùe
::
∑ge
> 
ö√r_tu∂e_∑ge
 = qpùe::∑ge::
	`Æloc
(
right_sour˚
->
	`tu∂e_size
());

74 i‡(!
À·_buf„r
->
	`c›y_∑ge
(
ouãr_tu∂e_∑ge
))

81 
bô£t
<2048> 
m©ches
;

82 
	`as£π
(
ouãr_tu∂e_∑ge
->
	`tu∂e_cou¡
(Ë<
m©ches
.
	`size
());

86 
∑ckë_t
* 
right_∑ckë
 = 
right_sour˚
->
	`ª£t
();

87 
tu∂e_fifo
* 
right_buf„r
 = 
right_∑ckë
->
	`ouçut_buf„r
();

88 
	`TRACE
(
TRACE_ALWAYS
,

90 
di•©chî_t
::
	`di•©ch_∑ckë
(
right_∑ckë
);

97 i‡(!
right_buf„r
->
	`c›y_∑ge
(
ö√r_tu∂e_∑ge
))

105 
qpùe
::
∑ge
::
ôî©‹
 
o_ô
 = 
ouãr_tu∂e_∑ge
->
	`begö
();

106 
o_ödex
 = 0; 
o_ô
 !
ouãr_tu∂e_∑ge
->
	`íd
(); ++o_index) {

110 
tu∂e_t
 
ouãr_tu∂e
 = 
o_ô
.
	`adv™˚
();

111 
höt_tu∂e_∑ú_t


112 
	`ouãr_kçaú
(
_exåa˘
->
	`exåa˘_höt
(
ouãr_tu∂e
), ouãr_tu∂e.
d©a
);

115 
qpùe
::
∑ge
::
ôî©‹
 
i_ô
 = 
ö√r_tu∂e_∑ge
->
	`begö
();

116 
i_ô
 !
ö√r_tu∂e_∑ge
->
	`íd
()) {

120 
tu∂e_t
 
ö√r_tu∂e
 = 
i_ô
.
	`adv™˚
();

121 
höt_tu∂e_∑ú_t


122 
	`ö√r_kçaú
(
_exåa˘
->
	`exåa˘_höt
(
ö√r_tu∂e
), i¬î_tu∂e.
d©a
);

125 i‡–
	`com∑ª
(
ouãr_kçaú
, 
ö√r_kçaú
) == 0 )

127 
m©ches
.
	`£t
(
o_ödex
);

139 
qpùe
::
∑ge
::
ôî©‹
 
o_ô
 = 
ouãr_tu∂e_∑ge
->
	`begö
();

140 
o_ödex
 = 0; 
o_ô
 !
ouãr_tu∂e_∑ge
->
	`íd
(); ++o_index) {

141 i‡–
m©ches
[
o_ödex
] !
ouçut_⁄_m©ch
 )

142 
_ad≠t‹
->
	`ouçut
(
o_ô
.
	`adv™˚
());

147 
	}
}

	@src/qpipe/stages/bnl_join.cpp

24 
	~"qpùe/°ages/b∆_joö.h
"

26 
	~<c°rög
>

30 c⁄° 
c_°r
 
	gb∆_joö_∑ckë_t
::
PACKET_TYPE
 = "BNL_JOIN";

34 c⁄° 
c_°r
 
	gb∆_joö_°age_t
::
DEFAULT_STAGE_NAME
 = "BNL_JOIN_STAGE";

44 
	gb∆_joö_°age_t
::
	$¥o˚ss_∑ckë
() {

46 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

47 
b∆_joö_∑ckë_t
* 
∑ckë
 = (b∆_joö_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

49 
tu∂e_fifo
* 
À·_buf„r
 = 
∑ckë
->
_À·_buf„r
;

50 
tu∂e_sour˚_t
* 
right_sour˚
 = 
∑ckë
->
_right_sour˚
;

51 
tu∂e_joö_t
* 
joö
 = 
∑ckë
->
_joö
;

55 
	`TRACE
(
TRACE_ALWAYS
,

57 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

61 
size_t
 
key_size
 = 
joö
->
	`key_size
();

62 
¨øy_gu¨d_t
<> 
ouçut_d©a
 = 
√w
 [
joö
->
	`ouçut_tu∂e_size
()];

63 
tu∂e_t
 
	`ouçut_tu∂e
(
ouçut_d©a
, (output_data));

66 
gu¨d
<
qpùe
::
∑ge
> 
ouãr_tu∂e_∑ge
 = qpùe::∑ge::
	`Æloc
(
À·_buf„r
->
	`tu∂e_size
());

67 
gu¨d
<
qpùe
::
∑ge
> 
ö√r_tu∂e_∑ge
 = qpùe::∑ge::
	`Æloc
(
right_sour˚
->
	`tu∂e_size
());

73 i‡(!
À·_buf„r
->
	`c›y_∑ge
(
ouãr_tu∂e_∑ge
))

79 
∑ckë_t
* 
right_∑ckë
 = 
right_sour˚
->
	`ª£t
();

80 
tu∂e_fifo
* 
right_buf„r
 = 
right_∑ckë
->
	`ouçut_buf„r
();

81 
	`TRACE
(
TRACE_ALWAYS
,

83 
di•©chî_t
::
	`di•©ch_∑ckë
(
right_∑ckë
);

90 i‡(!
right_buf„r
->
	`c›y_∑ge
(
ö√r_tu∂e_∑ge
))

98 
qpùe
::
∑ge
::
ôî©‹
 
o_ô
 = 
ouãr_tu∂e_∑ge
->
	`begö
();

99 
o_ô
 !
ouãr_tu∂e_∑ge
->
	`íd
()) {

101 
tu∂e_t
 
ouãr_tu∂e
 = 
o_ô
.
	`adv™˚
();

102 c⁄° * 
ouãr_key
 = 
joö
->
	`À·_key
(
ouãr_tu∂e
);

105 
qpùe
::
∑ge
::
ôî©‹
 
i_ô
 = 
ö√r_tu∂e_∑ge
->
	`begö
();

106 
i_ô
 !
ö√r_tu∂e_∑ge
->
	`íd
()) {

111 
tu∂e_t
 
ö√r_tu∂e
 = 
i_ô
.
	`adv™˚
();

112 c⁄° * 
ö√r_key
 = 
joö
->
	`right_key
(
ö√r_tu∂e
);

113 i‡–
	`memcmp
–
ouãr_key
, 
ö√r_key
, 
key_size
 ) == 0 ) {

115 
joö
->
	`joö
(
ouçut_tu∂e
, 
ouãr_tu∂e
, 
ö√r_tu∂e
);

116 
_ad≠t‹
->
	`ouçut
(
ouçut_tu∂e
);

127 
	}
}

	@src/qpipe/stages/delay_writer.cpp

24 
	~"qpùe/°ages/dñay_wrôî.h
"

25 
	~"utû.h
"

26 
	~<uni°d.h
>

29 
ENTER_NAMESPACE
(
qpùe
);

31 c⁄° 
c_°r
 
	gdñay_wrôî_∑ckë_t
::
PACKET_TYPE
 = "DELAY_WRITER";

33 c⁄° 
c_°r
 
	gdñay_wrôî_°age_t
::
DEFAULT_STAGE_NAME
 = "DELAY_WRITER_STAGE";

38 
	gdñay_wrôî_°age_t
::
	$¥o˚ss_∑ckë
() {

40 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

41 
dñay_wrôî_∑ckë_t
* 
∑ckë
 = (dñay_wrôî_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

44 
size_t
 
tu∂e_size
 = 
∑ckë
->
_ouçut_tu∂e_size
;

45 
¨øy_gu¨d_t
<> 
tu∂e_d©a
 = 
√w
 [
tu∂e_size
];

46 
	`mem£t
(
tu∂e_d©a
, 0, (tuple_data));

47 
tu∂e_t
 
	`tu∂e
(
tu∂e_d©a
, 
tu∂e_size
);

50 
dñay_us
 = 
∑ckë
->
_dñay_us
;

51 
num_tu∂es
 = 
∑ckë
->
_num_tu∂es
;

52 
i
 = 0; i < 
num_tu∂es
; i++) {

53 
	`busy_dñay_us
(
dñay_us
);

54 
ad≠t‹
->
	`ouçut
(
tu∂e
);

56 
	}
}

59 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/echo.cpp

24 
	~"qpùe/°ages/echo.h
"

28 c⁄° 
c_°r
 
	gecho_∑ckë_t
::
PACKET_TYPE
 = "ECHO";

32 c⁄° 
c_°r
 
	gecho_°age_t
::
DEFAULT_STAGE_NAME
 = "ECHO_STAGE";

36 
	gecho_°age_t
::
	$¥o˚ss_∑ckë
() {

39 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

40 
echo_∑ckë_t
* 
∑ckë
 = (echo_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

43 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

44 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

47 
gu¨d
<
qpùe
::
∑ge
> 
√xt_∑ge
 = qpùe::∑ge::
	`Æloc
(
öput_buf„r
->
	`tu∂e_size
());

49 i‡(!
öput_buf„r
->
	`c›y_∑ge
(
√xt_∑ge
))

51 
ad≠t‹
->
	`ouçut
(
√xt_∑ge
);

53 
	}
}

	@src/qpipe/stages/fdump.cpp

24 
	~"qpùe/°ages/fdump.h
"

27 c⁄° 
c_°r
 
	gfdump_∑ckë_t
::
PACKET_TYPE
 = "FDUMP";

29 c⁄° 
c_°r
 
	gfdump_°age_t
::
DEFAULT_STAGE_NAME
 = "FDUMP_STAGE";

38 
	gfdump_°age_t
::
	$¥o˚ss_∑ckë
() {

40 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

41 
fdump_∑ckë_t
* 
∑ckë
 = (fdump_∑ckë_t*Ë
ad≠t‹
->
	`gë_∑ckë
();

43 i‡(
∑ckë
->
_chûd
) {

44 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_chûd
);

47 c⁄° 
c_°r
 &
fûíame
 = 
∑ckë
->
_fûíame
;

49 
gu¨d
<
FILE
> 
fûe
 = 
	`f›í
(
fûíame
.
	`d©a
(), "w+");

50 i‡(
fûe
 =
NULL
)

51 
	`THROW3
(
FûeEx˚±i⁄
,

53 
	`î∫o_to_°r
().
	`d©a
(), 
fûíame
.data());

56 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

58 i‡(!(
∑ckë
->
_tu∂e_to_c_°r
)) {

61 
gu¨d
<
qpùe
::
∑ge
> 
√xt_∑ge
 = qpùe::∑ge::
	`Æloc
(
öput_buf„r
->
	`tu∂e_size
());

64 i‡(!
öput_buf„r
->
	`c›y_∑ge
(
√xt_∑ge
)) {

65 
	`TRACE
(
TRACE_DEBUG
, "Föished dum∞tÿfûê%s\n", 
fûíame
.
	`d©a
());

69 
	`TRACE
(
TRACE_ALWAYS
, "WroteÖage\n");

70 
ad≠t‹
->
	`ouçut
(
√xt_∑ge
);

71 
√xt_∑ge
->
	`fwrôe_fuŒ_∑ge
(
fûe
);

76 i‡(!
öput_buf„r
->
	`ísuª_ªad_ªady
()) {

81 
tu∂e_t
 
	`tup
(
NULL
, 
öput_buf„r
->
	`tu∂e_size
());

86 i‡(!
öput_buf„r
->
	`gë_tu∂e
(
tup
))

89 c⁄° 
c_°r
* 
°r
 = 
∑ckë
->
	`_tu∂e_to_c_°r
(&
tup
);

90 
	`fwrôe
(
°r
->
	`d©a
(), (), 
	`°æí
(°r->d©a()), 
fûe
);

91 
dñëe
 
°r
;

93 
ad≠t‹
->
	`ouçut
(
tup
);

97 
	}
}

	@src/qpipe/stages/fscan.cpp

24 
	~"qpùe/°ages/fsˇn.h
"

28 c⁄° 
c_°r
 
	gfsˇn_∑ckë_t
::
PACKET_TYPE
 = "FSCAN";

32 c⁄° 
c_°r
 
	gfsˇn_°age_t
::
DEFAULT_STAGE_NAME
 = "FSCAN_STAGE";

42 
	gfsˇn_°age_t
::
	$¥o˚ss_∑ckë
() {

44 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

45 
fsˇn_∑ckë_t
* 
∑ckë
 = (fsˇn_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

48 c⁄° 
c_°r
 &
fûíame
 = 
∑ckë
->
_fûíame
;

49 
gu¨d
<
FILE
> 
fûe
 = 
	`f›í
(
fûíame
.
	`d©a
(), "r");

50 i‡(
fûe
 =
NULL
)

51 
	`THROW3
(
FûeEx˚±i⁄
,

53 
	`î∫o_to_°r
().
	`d©a
(), 
fûíame
.data());

56 
gu¨d
<
qpùe
::
∑ge
> 
tu∂e_∑ge
 =

57 
qpùe
::
∑ge
::
	`Æloc
(
∑ckë
->
	`ouçut_buf„r
()->
	`tu∂e_size
());

63 
boﬁ
 
ac˚±ög_∑ckës
 = 
åue
;

68 if(!
tu∂e_∑ge
->
	`‰ód_fuŒ_∑ge
(
fûe
))

74 i‡(
ac˚±ög_∑ckës
) {

75 
ad≠t‹
->
	`°›_ac˚±ög_∑ckës
();

76 
ac˚±ög_∑ckës
 = 
Ál£
;

80 
qpùe
::
∑ge
::
ôî©‹
 
ô
 = 
tu∂e_∑ge
->
	`begö
();

81 
ô
 !
tu∂e_∑ge
->
	`íd
())

82 
ad≠t‹
->
	`ouçut
(*
ô
++);

86 
	}
}

	@src/qpipe/stages/func_call.cpp

24 
	~"qpùe/°ages/func_ˇŒ.h
"

28 c⁄° 
c_°r
 
	gfunc_ˇŒ_∑ckë_t
::
PACKET_TYPE
 = "FUNC_CALL";

32 c⁄° 
c_°r
 
	gfunc_ˇŒ_°age_t
::
DEFAULT_STAGE_NAME
 = "FUNC_CALL_STAGE";

40 
	gfunc_ˇŒ_°age_t
::
	$¥o˚ss_∑ckë
() {

41 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

42 
func_ˇŒ_∑ckë_t
* 
∑ckë
 = (func_ˇŒ_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

43 
∑ckë
->
	`_func
(
ad≠t‹
,Öackë->
_func_¨g
);

44 
	}
}

	@src/qpipe/stages/hash_aggregate.cpp

24 
	~"qpùe/°ages/hash_aggªg©e.h
"

26 #i‡
deföed
(
löux
Ë|| deföed(
__löux
)

28 
	~<ext/hash_£t
>

29 
usög
 
	g__gnu_cxx
::
hashèbÀ
;

30 
usög
 
	g__gnu_cxx
::
hash_£t
;

33 
	~<hash_£t
>

34 
usög
 
	g°d
::
hash_£t
;

35 
usög
 
	g°d
::
hashèbÀ
;

39 c⁄° 
c_°r
 
	ghash_aggªg©e_∑ckë_t
::
PACKET_TYPE
 = "HASH_AGGREGATE";

43 c⁄° 
c_°r
 
	ghash_aggªg©e_°age_t
::
DEFAULT_STAGE_NAME
 = "HASH_AGGREGATE_STAGE";

48 c⁄° 
size_t
 
	gMAX_RUN_PAGES
 = 10000;

56 
	sexåa˘key_t
 {

57 
key_exåa˘‹_t
 *
	m_exåa˘
;

59 
exåa˘key_t
(
key_exåa˘‹_t
* 
exåa˘
)

60 : 
_exåa˘
(
exåa˘
)

64 c⁄° * c⁄° 
›î©‹
()(c⁄° * 
vÆue
) const {

65  
_exåa˘
->
exåa˘_key
(
vÆue
);

72 
	sequÆbyãs_t
 {

74 
size_t
 
	m_Àn
;

75 
equÆbyãs_t
(
size_t
 
Àn
)

76 : 
_Àn
(
Àn
)

80 
boﬁ
 
›î©‹
()(c⁄° *
k1
, c⁄° *
	mk2
) const {

81  !
memcmp
(
k1
, 
k2
, 
_Àn
);

86 
	shashf˙_t
 {

88 
size_t
 
	m_Àn
;

89 
hashf˙_t
(
size_t
 
Àn
)

90 : 
_Àn
(
Àn
)

94 
size_t
 
›î©‹
()(c⁄° *
key
) const {

95  
‚v_hash
(
key
, 
_Àn
);

99 
	ghash_£t
<*, 
	thashf˙_t
, 
	tequÆbyãs_t
>::
	tÆloˇt‹_ty≥
 
	tÆloc_t
;

100 
	ghashèbÀ
<*, const *,

101 
	thashf˙_t
, 
	texåa˘key_t
,

102 
	tequÆbyãs_t
, 
	tÆloc_t
> 
	ttu∂e_hash_t
;

105 
	ghash_aggªg©e_°age_t
::
	$Æloc_agg
(
tu∂e_t
 &
agg
, c⁄° * 
key
) {

107 if(!
_agg_∑ge
 || _agg_∑ge->
	`fuŒ
()) {

108 if(
_∑ge_cou¡
 >
MAX_RUN_PAGES
)

111 
_agg_∑ge
 = 
qpùe
::
∑ge
::
	`Æloc
(
_aggªg©e
->
	`tu∂e_size
());

112 
_∑ge_li°
.
	`add
(
_agg_∑ge
);

113 
_∑ge_cou¡
++;

117 
agg
.
d©a
 = 
_agg_∑ge
->
	`Æloˇã
();

120 
_aggªg©e
->
	`öô
(
agg
.
d©a
);

123 
key_exåa˘‹_t
* 
exåa˘
 = 
_aggªg©e
->
	`key_exåa˘‹
();

124 * 
agg_key
 = 
exåa˘
->
	`exåa˘_key
(
agg
.
d©a
);

125 
	`mem˝y
(
agg_key
, 
key
, 
exåa˘
->
	`key_size
());

127 
	}
}

129 
	ghash_aggªg©e_°age_t
::
	$¥o˚ss_∑ckë
() {

130 
hash_aggªg©e_∑ckë_t
* 
∑ckë
;

131 
∑ckë
 = (
hash_aggªg©e_∑ckë_t
*Ë
_ad≠t‹
->
	`gë_∑ckë
();

132 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

133 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

134 
_aggªg©e
 = 
∑ckë
->_aggregate;

135 
key_exåa˘‹_t
* 
agg_key
 = 
_aggªg©e
->
	`key_exåa˘‹
();

136 
key_exåa˘‹_t
* 
tup_key
 = 
∑ckë
->
_exåa˘‹
;

142 
size_t
 
key_size
 = 
agg_key
->
	`key_size
();

143 
hashf˙_t
 
	`hf
(
key_size
);

144 
equÆbyãs_t
 
	`eql
(
key_size
);

145 
exåa˘key_t
 
	`ext
(
agg_key
);

148 
tu∂e_hash_t
 
	`run
(10001, 
hf
, 
eql
, 
ext
);

151 !
öput_buf„r
->
	`eof
()) {

152 
_∑ge_li°
.
	`˛ór
();

153 
_∑ge_cou¡
 = 0;

154 
_agg_∑ge
 = 
NULL
;

155 
_∑ge_cou¡
 < 
MAX_RUN_PAGES
 && !
öput_buf„r
->
	`eof
()) {

156 
gu¨d
<
qpùe
::
∑ge
>Öagê
NULL
;

157 
tu∂e_t
 
ö
;

160 if(!
öput_buf„r
->
	`gë_tu∂e
(
ö
))

164 c⁄°* 
key
 = 
tup_key
->
	`exåa˘_key
(
ö
);

165 
tu∂e_hash_t
::
ôî©‹
 
ˇndid©e
 = 
run
.
	`föd
(
key
);

166 if(
ˇndid©e
 =
run
.
	`íd
()) {

168 
tu∂e_t
 
agg
;

169 if(
	`Æloc_agg
(
agg
, 
key
))

173 
ˇndid©e
 = 
run
.
	`ö£π_unique
(
agg
.
d©a
).
fú°
;

176 
	`TRACE
(
TRACE_DEBUG
, "MergingáÅuple\n");

181 
_aggªg©e
->
	`aggªg©e
(*
ˇndid©e
, 
ö
);

186 
	`as£π
(
öput_buf„r
->
	`eof
());

189 
size_t
 
out_size
 = 
∑ckë
->
_ouçut_fûãr
->
	`öput_tu∂e_size
();

190 
¨øy_gu¨d_t
<> 
out_d©a
 = 
√w
 [
out_size
];

191 
tu∂e_t
 
	`out
(
out_d©a
, 
out_size
);

192 
tu∂e_hash_t
::
ôî©‹
 
ô
=
run
.
	`begö
(); ià!run.
	`íd
(); ++it) {

194 
_aggªg©e
->
	`föish
(
out
, *
ô
);

195 
_ad≠t‹
->
	`ouçut
(
out
);

198 
	}
}

	@src/qpipe/stages/hash_join.cpp

31 
	~"qpùe/°ages/hash_joö.h
"

33 
	~<c°rög
>

34 
	~<Æg‹ôhm
>

37 
ENTER_NAMESPACE
(
qpùe
);

40 c⁄° 
c_°r
 
	ghash_joö_∑ckë_t
::
PACKET_TYPE
 = "HASH_JOIN";

42 c⁄° 
c_°r
 
	ghash_joö_°age_t
::
DEFAULT_STAGE_NAME
 = "HASH_JOIN";

46 
	ghash_joö_°age_t
::
	$¥o˚ss_∑ckë
() {

48 
hash_joö_∑ckë_t
* 
∑ckë
 = (hash_joö_∑ckë_à*)
_ad≠t‹
->
	`gë_∑ckë
();

51 
boﬁ
 
ouãr_joö
 = 
∑ckë
->
_ouãr
;

52 
_joö
 = 
∑ckë
->_join;

53 
boﬁ
 
di°ö˘
 = 
∑ckë
->
_di°ö˘
;

62 
tu∂e_fifo
 *
right_buf„r
 = 
∑ckë
->
_right_buf„r
;

63 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_right
);

64 
tu∂e_fifo
 *
À·_buf„r
 = 
∑ckë
->
_À·_buf„r
;

65 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

69 if(!
right_buf„r
->
	`ísuª_ªad_ªady
()) {

78 
hash_joö_°age_t
::
exåa˘key_t
 
	`exåa˘_À·
 (
_joö
, 
Ál£
);

79 
hash_joö_°age_t
::
exåa˘key_t
 
	`exåa˘_right
(
_joö
, 
åue
);

80 
hash_joö_°age_t
::
hashf˙_t
 
	`hashf˙
(
_joö
->
	`key_size
());

88 
tu∂e_t
 
right
;

92 if(!
right_buf„r
->
	`gë_tu∂e
(
right
))

96 
size_t
 
hash_code
 = 
	`hashf˙
(
	`exåa˘_right
(
right
.
d©a
));

97 
hash_öt
 = ()
hash_code
;

98 
∑πôi⁄
 = 
hash_öt
 % 
∑πôi⁄s
.
	`size
();

104 
	`ã°_ovîÊow
(
∑πôi⁄
);

109 
qpùe
::
∑ge
* &
p
 = 
∑πôi⁄s
[
∑πôi⁄
].
_∑ge
;

110 
p
->
	`≠≥nd_tu∂e
(
right
);

120 
size_t
 
∑ge_ˇ∑côy
 =

121 
qpùe
::
∑ge
::
	`ˇ∑côy
(
	`gë_deÁu…_∑ge_size
(),

122 
_joö
->
	`right_tu∂e_size
());

124 
exåa˘key_t
 
	`right_key_exåa˘‹
(
_joö
, 
åue
);

125 
equÆbyãs_t
 
	`equÆ_key
 (
_joö
->
	`key_size
());

126 
equÆbyãs_t
 
	`equÆ_πup
(
_joö
->
	`right_tu∂e_size
());

127 
hashf˙_t
 
	`hashî
(
_joö
->
	`key_size
());

129 
tu∂e_hash_t
 
	`èbÀ
(
∑ge_cou¡
 * 
∑ge_ˇ∑côy
,

130 
right_key_exåa˘‹
,

131 
equÆ_key
,

132 
equÆ_πup
,

133 
hashî
);

136 
right_a˘i⁄_t
 
	`right_a˘i⁄
(
_joö
->
	`À·_tu∂e_size
());

137 
∑πôi⁄_li°_t
::
ôî©‹
 
ô
=
∑πôi⁄s
.
	`begö
(); ià!∑πôi⁄s.
	`íd
(); ++it) {

139 
qpùe
::
∑ge
* 
p
 = 
ô
->
_∑ge
;

140 if(
p
 =
NULL
)

145 if(
ô
->
fûe
)

146 
	`˛o£_fûe
(
ô
, 
right_a˘i⁄
);

150 
p
) {

151 
qpùe
::
∑ge
::
ôî©‹
 
ô
=
p
->
	`begö
(); ià!p->
	`íd
(); ++it) {

154 if(
di°ö˘
)

155 
èbÀ
.
	`ö£π_unique_n‹esize
(
ô
->
d©a
);

157 
èbÀ
.
	`ö£π_n‹esize
(
ô
->
d©a
);

160 
p
 =Ö->
√xt
;

167 if(!
À·_buf„r
->
	`ísuª_ªad_ªady
())

173 
exåa˘key_t
 
	`À·_key_exåa˘‹
(
_joö
, 
Ál£
);

174 
tu∂e_t
 
	`À·
(
NULL
, 
_joö
->
	`À·_tu∂e_size
());

175 
¨øy_gu¨d_t
<> 
d©a
 = 
√w
 [
_joö
->
	`ouçut_tu∂e_size
()];

179 if(!
À·_buf„r
->
	`gë_tu∂e
(
À·
))

183 c⁄° * 
À·_key
 = 
	`À·_key_exåa˘‹
(
À·
.
d©a
);

184 
hash_code
 = 
	`hashî
(
À·_key
);

185 
∑πôi⁄
 = 
hash_code
 % 
∑πôi⁄s
.
	`size
();

186 
∑πôi⁄_t
 &
p
 = 
∑πôi⁄s
[
∑πôi⁄
];

189 if(
p
.
size
 == 0)

193 if(
p
.
fûe
) {

194 
qpùe
::
∑ge
* 
pg
 = 
p
.
_∑ge
;

197 if(
pg
->
	`fuŒ
()) {

198 
pg
->
	`fwrôe_fuŒ_∑ge
(
p
.
fûe
);

199 
pg
->
	`˛ór
();

203 
pg
->
	`≠≥nd_tu∂e
(
À·
);

208 
°d
::
∑ú
<
tu∂e_hash_t
::
ôî©‹
,Åu∂e_hash_t::ôî©‹> 
ønge
;

209 
ønge
 = 
èbÀ
.
	`equÆ_ønge
(
À·_key
);

211 
tu∂e_t
 
	`out
(
d©a
, 
_joö
->
	`ouçut_tu∂e_size
());

212 if(
ouãr_joö
 && 
ønge
.
fú°
 =ønge.
£c⁄d
) {

213 
_joö
->
	`À·_ouãr_joö
(
out
, 
À·
);

214 
_ad≠t‹
->
	`ouçut
(
out
);

217 
tu∂e_hash_t
::
ôî©‹
 
ô
 = 
ønge
.
fú°
; ià!ønge.
£c⁄d
; ++it) {

218 
right
.
d©a
 = *
ô
;

219 
_joö
->
	`joö
(
out
, 
À·
, 
right
);

220 
_ad≠t‹
->
	`ouçut
(
out
);

227 
èbÀ
.
	`˛ór
();

228 
∑πôi⁄_li°_t
::
ôî©‹
 
ô
=
∑πôi⁄s
.
	`begö
(); ià!∑πôi⁄s.
	`íd
(); ++it) {

230 
gu¨d
<
qpùe
::
∑ge
> 
pg
 = 
ô
->
_∑ge
;Ög;Ög =Ög->
√xt
);

231 if(
ô
->
fûe
)

232 
	`˛o£_fûe
(
ô
, 
	`À·_a˘i⁄_t
());

237 
	}
}

241 
	ghash_joö_°age_t
::
	$ã°_ovîÊow
(
∑πôi⁄
) {

243 
∑πôi⁄_t
 &
p
 = 
∑πôi⁄s
[
∑πôi⁄
];

246 if(
p
.
_∑ge
 && !p._∑ge->
	`fuŒ
())

259 if(
∑ge_cou¡
 =
∑ge_quŸa
) {

265 
max
 = -1;

266 
i
=0; i < 
∑πôi⁄s
.
	`size
(); i++) {

267 
∑πôi⁄_t
 &
p
 = 
∑πôi⁄s
[
i
];

268 if(!
p
.
fûe
 && (
max
 < 0 ||Ö.
size
 > 
∑πôi⁄s
[max].size))

269 
max
 = 
i
;

273 
∑πôi⁄_t
 &
p
 = 
∑πôi⁄s
[
max
];

274 
p
.
fûe
 = 
	`¸óã_tmp_fûe
’.
fûe_«me1
, "hash-join-right");

277 
gu¨d
<
qpùe
::
∑ge
> 
hód
;

278 
hód
 = 
p
.
_∑ge
; hód->
√xt
; head=head->next) {

279 
hód
->
	`fwrôe_fuŒ_∑ge
(
p
.
fûe
);

280 
∑ge_cou¡
--;

284 
hód
->
	`fwrôe_fuŒ_∑ge
(
p
.
fûe
);

285 
hód
->
	`˛ór
();

286 
p
.
_∑ge
 = 
hód
.
	`ªÀa£
();

292 
qpùe
::
∑ge
* 
pg
 =

293 
qpùe
::
∑ge
::
	`Æloc
(
_joö
->
	`right_tu∂e_size
());

294 
pg
->
√xt
 = 
p
.
_∑ge
;

295 
p
.
_∑ge
 = 
pg
;

296 
∑ge_cou¡
++;

300 
p
.
size
++;

301 
	}
}

305 
	gãm∂©e
 <
˛ass
 
	gA˘i⁄
>

306 
	ghash_joö_°age_t
::
	$˛o£_fûe
(
∑πôi⁄_li°_t
::
ôî©‹
 
ô
, 
A˘i⁄
 
a˘i⁄
) {

311 
qpùe
::
∑ge
 *
p
 = 
ô
->
_∑ge
;

315 
fûe_gu¨d_t
 
fûe
 = 
ô
->file;

316 if(!
p
 ||Ö->
	`em±y
())

319 
p
->
	`fwrôe_fuŒ_∑ge
(
fûe
);

320 
	`a˘i⁄
(
ô
);

321 
	}
}

323 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/merge.cpp

24 
	~"qpùe/°ages/mîge.h
"

25 
	~<li°
>

27 
usög
 
	g°d
::
li°
;

31 c⁄° 
c_°r
 
	gmîge_∑ckë_t
::
PACKET_TYPE
 = "MERGE";

35 c⁄° 
c_°r
 
	gmîge_°age_t
::
DEFAULT_STAGE_NAME
 = "MERGE_STAGE";

66 
boﬁ
 
	gmîge_°age_t
::
buf„r_hód_t
::
	$öô
(
tu∂e_fifo
 *
buf
,

67 
key_exåa˘‹_t
* 
exåa˘
)

69 
buf„r
 = 
buf
;

70 
_exåa˘
 = 
exåa˘
;

71 
size
 = 
buf„r
->
	`tu∂e_size
();

72 
d©a
 = 
√w
 [
size
];

73 
tu∂e
 = 
	`tu∂e_t
(
d©a
, 
size
);

74 
ôem
.
d©a
 = data;

75  
	`has_tu∂e
();

76 
	}
}

86 
boﬁ
 
	gmîge_°age_t
::
buf„r_hód_t
::
	$has_tu∂e
() {

88 
tu∂e_t
 
öput
;

90 if(!
buf„r
->
	`gë_tu∂e
(
öput
))

91  
Ál£
;

96 
tu∂e
.
	`assign
(
öput
);

99 
ôem
.
höt
 = 
_exåa˘
->
	`exåa˘_höt
(
tu∂e
);

100  
åue
;

101 
	}
}

104 
	gmîge_°age_t
::
	$com∑ª
(c⁄° 
höt_tu∂e_∑ú_t
 &
a
, c⁄° höt_tu∂e_∑ú_à&
b
) {

105  
	`tu∂e_com∑øt‹_t
(
_exåa˘
, 
_com∑ª
)(
a
, 
b
);

106 
	}
}

111 
	gmîge_°age_t
::
	$ö£π_s‹ãd
(
buf„r_hód_t
 *
hód
)

114 if(!
_hód_li°
 || 
	`com∑ª
(
hód
->
ôem
, _head_list->item) <= 0) {

115 
hód
->
√xt
 = 
_hód_li°
;

116 
_hód_li°
 = 
hód
;

121 
buf„r_hód_t
 *
¥ev
 = 
_hód_li°
;

122 
¥ev
->
√xt
 && 
	`com∑ª
’ªv->√xt->
ôem
, 
hód
->item) < 0)

123 
¥ev
 =Öªv->
√xt
;

126 
hód
->
√xt
 = 
¥ev
->next;

127 
¥ev
->
√xt
 = 
hód
;

128 
	}
}

132 
	gmîge_°age_t
::
	$¥o˚ss_∑ckë
() {

134 
mîge_∑ckë_t
::
	tbuf„r_li°_t
 buffer_list_t;

137 
mîge_∑ckë_t
 *
∑ckë
 = (mîge_∑ckë_à*)
_ad≠t‹
->
	`gë_∑ckë
();

139 
_com∑ª
 = 
∑ckë
->_compare;

140 
_exåa˘
 = 
∑ckë
->_extract;

141 
buf„r_li°_t
 &
öputs
 = 
∑ckë
->
_öput_buf„rs
;

145 
mîge_Á˘‹
 = 
öputs
.
	`size
();

146 
¨øy_gu¨d_t
<
buf„r_hód_t
> 
hód_¨øy
 = 
√w
 buf„r_hód_t[
mîge_Á˘‹
];

147 
	`TRACE
(
TRACE_DEBUG
, "Pro˚ssög %d-way mîge\n", 
mîge_Á˘‹
);

151 
i
=0; i < 
mîge_Á˘‹
; i++) {

152 
buf„r_hód_t
 &
hód
 = 
hód_¨øy
[
i
];

153 if(
hód
.
	`öô
(
öputs
[
i
], 
_exåa˘
))

154 
	`ö£π_s‹ãd
(&
hód
);

159 
i
=0; 
_hód_li°
; i++) {

162 
buf„r_hód_t
 *
hód
 = 
_hód_li°
;

163 
_hód_li°
 = 
hód
->
√xt
;

167 
_ad≠t‹
->
	`ouçut
(
hód
->
tu∂e
);

171 if(
hód
->
	`has_tu∂e
())

172 
	`ö£π_s‹ãd
(
hód
);

176 
	}
}

	@src/qpipe/stages/partial_aggregate.cpp

24 
	~"qpùe/°ages/∑πül_aggªg©e.h
"

28 c⁄° 
c_°r
 
	g∑πül_aggªg©e_∑ckë_t
::
PACKET_TYPE
 = "PARTIAL_AGGREGATE";

32 c⁄° 
c_°r
 
	g∑πül_aggªg©e_°age_t
::
DEFAULT_STAGE_NAME
 = "PARTIAL_AGGREGATE_STAGE";

37 c⁄° 
size_t
 
	gMAX_RUN_PAGES
 = 10000;

41 
	g∑πül_aggªg©e_°age_t
::
	$Æloc_agg
(
höt_tu∂e_∑ú_t
 &
agg
, c⁄° * 
key
) {

43 if(!
_agg_∑ge
 || _agg_∑ge->
	`fuŒ
()) {

44 if(
_∑ge_cou¡
 >
MAX_RUN_PAGES
)

47 
_agg_∑ge
 = 
qpùe
::
∑ge
::
	`Æloc
(
_aggªg©e
->
	`tu∂e_size
());

48 
_∑ge_li°
.
	`add
(
_agg_∑ge
);

49 
_∑ge_cou¡
++;

53 
agg
.
d©a
 = 
_agg_∑ge
->
	`Æloˇã
();

56 
_aggªg©e
->
	`öô
(
agg
.
d©a
);

59 
key_exåa˘‹_t
* 
exåa˘
 = 
_aggªg©e
->
	`key_exåa˘‹
();

60 * 
agg_key
 = 
exåa˘
->
	`exåa˘_key
(
agg
.
d©a
);

61 
	`mem˝y
(
agg_key
, 
key
, 
exåa˘
->
	`key_size
());

63 
	}
}

65 
	g∑πül_aggªg©e_°age_t
::
	$¥o˚ss_∑ckë
() {

66 
∑πül_aggªg©e_∑ckë_t
* 
∑ckë
;

67 
∑ckë
 = (
∑πül_aggªg©e_∑ckë_t
*Ë
_ad≠t‹
->
	`gë_∑ckë
();

68 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

69 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

70 
_aggªg©e
 = 
∑ckë
->_aggregate;

71 
key_exåa˘‹_t
* 
agg_key
 = 
_aggªg©e
->
	`key_exåa˘‹
();

72 
key_exåa˘‹_t
* 
tup_key
 = 
∑ckë
->
_exåa˘‹
;

73 
key_com∑ª_t
* 
com∑ª
 = 
∑ckë
->
_com∑ª
;

77 
tu∂e_Àss_t
 
	`Àss
(
agg_key
, 
com∑ª
);

78 
tu∂e_£t_t
 
	`run
(
Àss
);

81 !
öput_buf„r
->
	`eof
()) {

82 
_∑ge_li°
.
	`˛ór
();

83 
_∑ge_cou¡
 = 0;

84 
_agg_∑ge
 = 
NULL
;

85 
_∑ge_cou¡
 < 
MAX_RUN_PAGES
 && !
öput_buf„r
->
	`eof
()) {

86 
gu¨d
<
qpùe
::
∑ge
>Öagê
NULL
;

87 
tu∂e_t
 
ö
;

90 if(!
öput_buf„r
->
	`gë_tu∂e
(
ö
))

93 
höt
 = 
tup_key
->
	`exåa˘_höt
(
ö
);

101 
size_t
 
off£t
 = 
agg_key
->
	`key_off£t
();

102 * 
key_d©a
 = 
tup_key
->
	`exåa˘_key
(
ö
);

103 
höt_tu∂e_∑ú_t
 
	`key
(
höt
, 
key_d©a
 - 
off£t
);

117 
tu∂e_£t_t
::
ôî©‹
 
ˇndid©e
 = 
run
.
	`föd
(
key
);

118 if(
ˇndid©e
 =
run
.
	`íd
()) {

120 
höt_tu∂e_∑ú_t
 
	`agg
(
höt
, 
NULL
);

121 if(
	`Æloc_agg
(
agg
, 
key_d©a
))

125 
ˇndid©e
 = 
run
.
	`ö£π
(
agg
).
fú°
;

128 
	`TRACE
(
TRACE_DEBUG
, "MergingáÅuple\n");

133 
_aggªg©e
->
	`aggªg©e
(
ˇndid©e
->
d©a
, 
ö
);

138 
	`as£π
(
öput_buf„r
->
	`eof
());

141 
size_t
 
out_size
 = 
∑ckë
->
_ouçut_fûãr
->
	`öput_tu∂e_size
();

142 
¨øy_gu¨d_t
<> 
out_d©a
 = 
√w
 [
out_size
];

143 
tu∂e_t
 
	`out
(
out_d©a
, 
out_size
);

144 
tu∂e_£t_t
::
ôî©‹
 
ô
=
run
.
	`begö
(); ià!run.
	`íd
(); ++it) {

146 
_aggªg©e
->
	`föish
(
out
, 
ô
->
d©a
);

147 
_ad≠t‹
->
	`ouçut
(
out
);

150 
	}
}

	@src/qpipe/stages/pipe_hash_join.cpp

31 
	~"qpùe/°ages/pùe_hash_joö.h
"

32 
	~<c°rög
>

33 
	~<Æg‹ôhm
>

35 #i‡
deföed
(
löux
Ë|| deföed(
__löux
)

37 
	~<ext/hash_£t
>

38 
usög
 
	g__gnu_cxx
::
hashèbÀ
;

39 
usög
 
	g__gnu_cxx
::
hash_£t
;

42 
	~<hash_£t
>

43 
usög
 
	g°d
::
hash_£t
;

44 
usög
 
	g°d
::
hashèbÀ
;

49 
ENTER_NAMESPACE
(
qpùe
);

52 c⁄° 
c_°r
 
	gpùe_hash_joö_∑ckë_t
::
PACKET_TYPE
 = "PIPE_HASH_JOIN";

54 c⁄° 
c_°r
 
	gpùe_hash_joö_°age_t
::
DEFAULT_STAGE_NAME
 = "PIPE_HASH_JOIN";

61 
	sexåa˘key_t
 {

62 
size_t
 
	m_off£t
;

64 
exåa˘key_t
(
tu∂e_joö_t
* 
joö
, 
boﬁ
 
À·
)

65 : 
_off£t
(
À·
? 
joö
->
À·_key_off£t
(Ë: joö->
right_key_off£t
())

69 c⁄° * c⁄° 
›î©‹
()(c⁄° * 
vÆue
) const {

70  
vÆue
 + 
_off£t
;

77 
	sequÆbyãs_t
 {

79 
size_t
 
	m_Àn
;

80 
equÆbyãs_t
(
size_t
 
Àn
)

81 : 
_Àn
(
Àn
)

85 
boﬁ
 
›î©‹
()(c⁄° *
k1
, c⁄° *
	mk2
) const {

86  !
memcmp
(
k1
, 
k2
, 
_Àn
);

91 
	shashf˙_t
 {

93 
size_t
 
	m_Àn
;

94 
hashf˙_t
(
size_t
 
Àn
)

95 : 
_Àn
(
Àn
)

99 
size_t
 
›î©‹
()(c⁄° *
key
) const {

100  
‚v_hash
(
key
, 
_Àn
);

105 
	ghash_£t
<*, 
	thashf˙_t
, 
	tequÆbyãs_t
>::
	tÆloˇt‹_ty≥
 
	tÆloc_t
;

107 
	ghashèbÀ
<*, const *,

108 
	thashf˙_t
, 
	texåa˘key_t
,

109 
	tequÆbyãs_t
, 
	tÆloc_t
> 
	ttu∂e_hash_t
;

117 
	gpùe_hash_joö_°age_t
::
	$¥o˚ss_∑ckë
() {

124 
pùe_hash_joö_∑ckë_t
* 
∑ckë
 = (pùe_hash_joö_∑ckë_à*)
_ad≠t‹
->
	`gë_∑ckë
();

130 
tu∂e_fifo
 *
right_buf„r
 = 
∑ckë
->
_right_buf„r
;

131 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_right
);

132 
tu∂e_fifo
 *
À·_buf„r
 = 
∑ckë
->
_À·_buf„r
;

133 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

135 
_joö
 = 
∑ckë
->_join;

136 
tu∂e_t
 
	`À·
(
NULL
, 
À·_buf„r
->
	`tu∂e_size
());

137 
tu∂e_t
 
	`right
(
NULL
, 
right_buf„r
->
	`tu∂e_size
());

138 
exåa˘key_t
 
	`À·_ke
(
_joö
, 
åue
);

139 
exåa˘key_t
 
	`right_ke
(
_joö
, 
Ál£
);

140 
equÆbyãs_t
 
	`eq
(
_joö
->
	`key_size
());

141 
hashf˙_t
 
	`hf
(
_joö
->
	`key_size
());

147 
tu∂e_hash_t
 
	`À·_hash
(10001, 
hf
, 
eq
, 
À·_ke
);

148 
tu∂e_hash_t
 
	`right_hash
(10001, 
hf
, 
eq
, 
right_ke
);

152 
∑ge_åash_°ack
 
À·_∑ges
;

153 
∑ge_åash_°ack
 
right_∑ges
;

155 
out_size
 = 
∑ckë
->
_ouçut_fûãr
->
	`öput_tu∂e_size
();

156 
¨øy_gu¨d_t
<> 
out_d©a
 = 
√w
 [
out_size
];

157 
tu∂e_t
 
	`out
(
out_d©a
, 
out_size
);

164 
À·_ªady
 = 
À·_buf„r
->
	`check_ªad_ªady
();

165 
right_ªady
 = 
right_buf„r
->
	`check_ªad_ªady
();

167 
qpùe
::
	t∑ge
::
	tôî©‹
 
	tpô
;

168 
tu∂e_hash_t
::
	tôî©‹
 
	thô
;

169 
do_À·
:

170 if(
À·_ªady
 == 1) {

172 
qpùe
::
∑ge
* 
p
 = qpùe::∑ge::
	`Æloc
(
À·_buf„r
->
	`tu∂e_size
());

173 
À·_buf„r
->
	`c›y_∑ge
(
p
);

174 
À·_∑ges
.
	`add
(
p
);

175 
pô
 
ô
 = 
p
->
	`begö
();

176 
pô
 
íd
 = 
p
->
	`íd
();

177 
ô
 !
íd
) {

179 
tu∂e_t
 
À·
 = 
ô
.
	`adv™˚
();

180 
À·_hash
.
	`ö£π_equÆ
(
À·
.
d©a
);

181 
hô
 
¥obe
 = 
right_hash
.
	`föd
(
	`À·_ke
(
À·
.
d©a
));

182 ; 
¥obe
 !
right_hash
.
	`íd
(); ++probe) {

183 
right
.
d©a
 = *
¥obe
;

184 
_joö
->
	`joö
(
out
, 
À·
, 
right
);

185 
_ad≠t‹
->
	`ouçut
(
out
);

189 
À·_ªady
 = 
À·_buf„r
->
	`check_ªad_ªady
();

190 
right_ªady
 = 
right_buf„r
->
	`check_ªad_ªady
();

193 
do_right
:

194 if(
right_ªady
 == 1) {

196 
qpùe
::
∑ge
* 
p
 = qpùe::∑ge::
	`Æloc
(
right_buf„r
->
	`tu∂e_size
());

197 
right_buf„r
->
	`c›y_∑ge
(
p
);

198 
right_∑ges
.
	`add
(
p
);

199 
pô
 
ô
 = 
p
->
	`begö
();

200 
pô
 
íd
 = 
p
->
	`íd
();

201 
ô
 !
íd
) {

203 
tu∂e_t
 
right
 = 
ô
.
	`adv™˚
();

204 
right_hash
.
	`ö£π_equÆ
(
right
.
d©a
);

205 
hô
 
¥obe
 = 
À·_hash
.
	`föd
(
	`right_ke
(
right
.
d©a
));

206 ; 
¥obe
 !
À·_hash
.
	`íd
(); ++probe) {

207 
À·
.
d©a
 = *
¥obe
;

208 
_joö
->
	`joö
(
out
, 
À·
, 
right
);

209 
_ad≠t‹
->
	`ouçut
(
out
);

213 
À·_ªady
 = 
À·_buf„r
->
	`check_ªad_ªady
();

214 
right_ªady
 = 
right_buf„r
->
	`check_ªad_ªady
();

217 
do_decide
:

219 if(
À·_ªady
 == 1)

220 
do_À·
;

221 if(
right_ªady
 == 1)

222 
do_right
;

223 if(
À·_ªady
 == -1) {

224 if(
right_ªady
 == -1)

228 if(
right_buf„r
->
	`ísuª_ªad_ªady
())

229 
right_ªady
 = 1;

231 
right_ªady
 = -1;

235 if(
right_ªady
 == 0) {

236 if(
À·_buf„r
->
	`ísuª_ªad_ªady
(1))

237 
À·_ªady
 = 1;

239 
À·_ªady
 = 
À·_buf„r
->
	`check_ªad_ªady
();

240 
right_ªady
 = 
right_buf„r
->
	`check_ªad_ªady
();

243 if(
À·_buf„r
->
	`ísuª_ªad_ªady
())

244 
À·_ªady
 = 1;

246 
À·_ªady
 = -1;

249 
do_decide
;

250 
	}
}

252 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/register_stage_containers.cpp

30 
	~"qpùe/°ages/ªgi°î_°age_c⁄èöîs.h
"

31 
	~"qpùe/°ages.h
"

33 
ENTER_NAMESPACE
(
qpùe
);

36 
	#MAX_NUM_CLIENTS
 128

	)

38 
	#MAX_NUM_TSCAN_THREADS
 
MAX_NUM_CLIENTS
 * 2

39 
	#MAX_NUM_AGGREGATE_THREADS
 
MAX_NUM_CLIENTS


	)

40 
	#MAX_NUM_PARTIAL_AGGREGATE_THREADS
 
MAX_NUM_CLIENTS
 * 2

41 
	#MAX_NUM_HASH_JOIN_THREADS
 
MAX_NUM_CLIENTS


	)

42 
	#MAX_NUM_SORT_MERGE_JOIN_THREADS
 
MAX_NUM_CLIENTS


	)

43 
	#MAX_NUM_FUNC_CALL_THREADS
 
MAX_NUM_CLIENTS


	)

44 
	#MAX_NUM_SORT_THREADS
 
MAX_NUM_CLIENTS
 * 2

45 
	#MAX_NUM_SORTED_IN_STAGE_THREADS
 
MAX_NUM_CLIENTS


	)

48 
	$ªgi°î_°age_c⁄èöîs
()

50 
	`TRACE
–
TRACE_ALWAYS
, "Registering stage containers\n");

52 
ªgi°î_°age
<
tsˇn_°age_t
>(
MAX_NUM_TSCAN_THREADS
, 
åue
);

53 
ªgi°î_°age
<
aggªg©e_°age_t
>(
MAX_NUM_AGGREGATE_THREADS
, 
åue
);

54 
ªgi°î_°age
<
∑πül_aggªg©e_°age_t
>(
MAX_NUM_PARTIAL_AGGREGATE_THREADS
, 
åue
);

55 
ªgi°î_°age
<
hash_aggªg©e_°age_t
>(
MAX_NUM_AGGREGATE_THREADS
, 
åue
);

56 
ªgi°î_°age
<
hash_joö_°age_t
>(
MAX_NUM_HASH_JOIN_THREADS
, 
åue
);

57 
ªgi°î_°age
<
s‹t_mîge_joö_°age_t
>(
MAX_NUM_SORT_MERGE_JOIN_THREADS
, 
åue
);

58 
ªgi°î_°age
<
pùe_hash_joö_°age_t
>(
MAX_NUM_CLIENTS
, 
åue
);

59 
ªgi°î_°age
<
func_ˇŒ_°age_t
>(
MAX_NUM_FUNC_CALL_THREADS
, 
åue
);

60 
ªgi°î_°age
<
s‹t_°age_t
>(
MAX_NUM_SORT_THREADS
, 
åue
);

61 
ªgi°î_°age
<
fdump_°age_t
> (
MAX_NUM_CLIENTS
, 
åue
);

62 
ªgi°î_°age
<
s‹ãd_ö_°age_t
>(
MAX_NUM_SORTED_IN_STAGE_THREADS
, 
åue
);

63 
ªgi°î_°age
<
echo_°age_t
>(
MAX_NUM_CLIENTS
, 
åue
);

64 
ªgi°î_°age
<
sõve_°age_t
>(
MAX_NUM_CLIENTS
, 
åue
);

65 
	}
}

67 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/sieve.cpp

24 
	~"qpùe/°ages/sõve.h
"

28 c⁄° 
c_°r
 
	gsõve_∑ckë_t
::
PACKET_TYPE
 = "SIEVE";

32 c⁄° 
c_°r
 
	gsõve_°age_t
::
DEFAULT_STAGE_NAME
 = "SIEVE_STAGE";

36 
	gsõve_°age_t
::
	$¥o˚ss_∑ckë
() {

39 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

40 
sõve_∑ckë_t
* 
∑ckë
 = (sõve_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

43 
tu∂e_sõve_t
* 
sõve
 = 
∑ckë
->
_sõve
;

44 
tu∂e_fifo
* 
öput_buf„r
 = 
∑ckë
->
_öput_buf„r
;

45 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

49 
size_t
 
de°_size
 = 
∑ckë
->
	`ouçut_buf„r
()->
	`tu∂e_size
();

50 
¨øy_gu¨d_t
<> 
de°_d©a
 = 
√w
 [
de°_size
];

51 
tu∂e_t
 
	`de°
(
de°_d©a
, 
de°_size
);

56 
tu∂e_t
 
§c
;

57 i‡(!
öput_buf„r
->
	`gë_tu∂e
(
§c
))

60 i‡(
sõve
->
	`∑ss
(
de°
, 
§c
))

61 
ad≠t‹
->
	`ouçut
(
de°
);

64 i‡(
sõve
->
	`Êush
(
de°
))

65 
ad≠t‹
->
	`ouçut
(
de°
);

66 
	}
}

	@src/qpipe/stages/sort.cpp

24 
	~"qpùe/°ages/s‹t.h
"

25 
	~"qpùe/°ages/mîge.h
"

26 
	~"qpùe/°ages/fdump.h
"

27 
	~"qpùe/°ages/fsˇn.h
"

29 
	~<Æg‹ôhm
>

30 
	~<°rög
>

31 
	~<c°dlib
>

32 
	~<deque
>

33 
	~<m≠
>

34 
	~<li°
>

36 
usög
 
	g°d
::
°rög
;

37 
usög
 
	g°d
::
deque
;

38 
usög
 
	g°d
::
m≠
;

39 
usög
 
	g°d
::
li°
;

44 c⁄° 
c_°r
 
	gs‹t_∑ckë_t
::
PACKET_TYPE
 = "SORT";

48 c⁄° 
c_°r
 
	gs‹t_°age_t
::
DEFAULT_STAGE_NAME
 = "SORT_STAGE";

50 c⁄° 
	gs‹t_°age_t
::
MERGE_FACTOR
 = 8;

52 c⁄° 
	gs‹t_°age_t
::
PAGES_PER_INITIAL_SORTED_RUN
 = 8 * 1024;

56 
Êush_∑ge
(
qpùe
::
∑ge
* 
pg
, 
FILE
* 
fûe
);

67 
	gs‹t_°age_t
::
	$check_föished_mîges
() {

76 
mîge_m≠_t
::
ôî©‹
 
Àvñ_ô
 = 
_mîge_m≠
.
	`begö
();

77 
Àvñ_ô
 !
_mîge_m≠
.
	`íd
()) {

78 
Àvñ
 = 
Àvñ_ô
->
fú°
;

79 
mîge_li°_t
 &
mîges
 = 
Àvñ_ô
->
£c⁄d
;

80 
mîge_li°_t
::
ôî©‹
 
ô
 = 
mîges
.
	`begö
();

81 
ô
 !
mîges
.
	`íd
()) {

83 if(
ô
->
_sig«l_buf„r
->
	`eof
()) {

86 
_run_m≠
[
Àvñ
].
	`push_back
(
ô
->
_ouçut
);

87 
	`TRACE
(
TRACE_DEBUG
, "Added finished merge file %sÅo _run_map[%d]\n",

88 
ô
->
_ouçut
.
	`d©a
(),

89 
Àvñ
);

92 
	`ªmove_öput_fûes
(
ô
->
_öputs
);

93 
ô
 = 
mîges
.
	`îa£
(it);

97 ++
ô
;

102 
mîge_m≠_t
::
ôî©‹
 
ﬁd_Àvñ_ô
 = 
Àvñ_ô
++;

103 if(
mîges
.
	`em±y
())

104 
_mîge_m≠
.
	`îa£
(
ﬁd_Àvñ_ô
);

106 
	}
}

110 
	gs‹t_°age_t
::
	$°¨t_mîge
(
√w_Àvñ
, 
run_li°_t
& 
runs
, 
mîge_Á˘‹
)

113 
	`as£π
(
mîge_Á˘‹
 > 0);

114 
	`as£π
(
runs
.
	`size
(Ë>()
mîge_Á˘‹
);

118 
mîge_li°_t
 &
mîges
 = 
_mîge_m≠
[
√w_Àvñ
];

119 
mîges
.
	`ªsize
(mîges.
	`size
()+1);

120 
mîge_t
 &
mîge
 = 
mîges
.
	`back
();

123 
run_li°_t
 
mîge_öputs
;

124 
buf„r_li°_t
 
fsˇn_buf„rs
;

127 
run_li°_t
::
ôî©‹
 
ô
 = 
runs
.
	`begö
();

128 
i
 = 0; i < 
mîge_Á˘‹
; i++) {

131 
c_°r
 
run_fûíame
 = *
ô
;

132 
ô
 = 
runs
.
	`îa£
(it);

134 
fsˇn_∑ckë_t
* 
p
;

135 
tu∂e_fifo
* 
buf
 = 
√w
 
	`tu∂e_fifo
(
_tu∂e_size
);

138 
c_°r
 
	`fsˇn_∑ckë_id
("SORT_FSCAN_PACKET_%d", 
i
);

140 
p
 = 
√w
 
	`fsˇn_∑ckë_t
(
fsˇn_∑ckë_id
,

141 
buf
,

142 
√w
 
	`åivül_fûãr_t
(
_tu∂e_size
),

143 
run_fûíame
.
	`d©a
());

144 
di•©chî_t
::
	`di•©ch_∑ckë
(
p
);

146 
mîge
.
_öputs
.
	`push_back
(
run_fûíame
.
	`d©a
());

147 
fsˇn_buf„rs
.
	`push_back
(
buf
);

152 
mîge_∑ckë_t
* 
mp
;

153 
tu∂e_fifo
* 
mîge_out
 = 
√w
 
	`tu∂e_fifo
(
_tu∂e_size
);

155 
	`TRACE
(
TRACE_ALWAYS
,

157 
	`as£π
(0);

158 
mp
 = 
√w
 
	`mîge_∑ckë_t
("SORT_MERGE_PACKET",

159 
mîge_out
,

160 
√w
 
	`åivül_fûãr_t
(
_tu∂e_size
),

161 
fsˇn_buf„rs
,

162 
_exåa˘
->
	`˛⁄e
(), 
_com∑ª
->clone());

163 
di•©chî_t
::
	`di•©ch_∑ckë
(
mp
);

168 if(
√w_Àvñ
 < 0) {

169 
mîge
.
_sig«l_buf„r
 = 
mîge_out
;

176 
fdump_∑ckë_t
* 
Â
;

177 
tu∂e_fifo
* 
fdump_out
;

178 
c_°r
 
fûe_«me
;

182 
	`f˛o£
(
	`¸óã_tmp_fûe
(
fûe_«me
, "merged-run"));

183 
fdump_out
 = 
√w
 
	`tu∂e_fifo
(
_tu∂e_size
);

185 
Â
 = 
√w
 
	`fdump_∑ckë_t
("SORT_FDUMP_PACKET",

186 
fdump_out
,

187 
√w
 
	`åivül_fûãr_t
(
mîge_out
->
	`tu∂e_size
()),

188 
mîge_out
,

189 
fûe_«me
.
	`d©a
(),

190 &
_m⁄ô‹
);

191 
di•©chî_t
::
	`di•©ch_∑ckë
(
Â
);

194 
mîge
.
_ouçut
 = 
fûe_«me
;

195 
mîge
.
_sig«l_buf„r
 = 
fdump_out
;

196 
	}
}

204 
	gs‹t_°age_t
::
	$°¨t_√w_mîges
() {

207 
	`TRACE
(
TRACE_DEBUG
, "_run_map has size %zd\n",

208 
_run_m≠
.
	`size
());

212 
run_m≠_t
::
ôî©‹
 
Àvñ_ô
 = 
_run_m≠
.
	`begö
();

213 
Àvñ_ô
 !
_run_m≠
.
	`íd
()) {

215 
Àvñ
 = 
Àvñ_ô
->
fú°
;

216 
	`TRACE
(
TRACE_DEBUG
, "Ru¬ög o¿Àvñ %d\n", 
Àvñ
);

219 
run_li°_t
 &
runs
 = 
Àvñ_ô
->
£c⁄d
;

220 
boﬁ
 
°¨ãd_mîges
 = 
Ál£
;

221 
runs
.
	`size
(Ë>
MERGE_FACTOR
) {

223 
	`°¨t_mîge
(
Àvñ
+1, 
runs
, 
MERGE_FACTOR
);

224 
°¨ãd_mîges
 = 
åue
;

228 
run_m≠_t
::
ôî©‹
 
cuº_Àvñ_ô
 = 
Àvñ_ô
++;

229 
run_m≠_t
::
ôî©‹
 
√xt_Àvñ_ô
 = 
Àvñ_ô
;

231 
	`TRACE
(
TRACE_DEBUG
, "curr_level = %d ;Çext_level = %d\n",

232 
cuº_Àvñ_ô
->
fú°
,

233 
√xt_Àvñ_ô
->
fú°
);

239 if(
runs
.
	`em±y
()) {

240 
_run_m≠
.
	`îa£
(
cuº_Àvñ_ô
);

247 if(!
_s‹tög_föished
 || 
°¨ãd_mîges
)

255 
√xt_run_Àvñ
 =

256 (
√xt_Àvñ_ô
 =
_run_m≠
.
	`íd
()Ë? -1 :Çext_Àvñ_ô->
fú°
;

263 
mîge_m≠_t
::
ôî©‹
 
mîges
 = 
_mîge_m≠
.
	`begö
();

264 
lowe°_mîge_Àvñ
 = (
mîges
 =
_mîge_m≠
.
	`íd
())? -1 : mîges->
fú°
;

267 
	`TRACE
(
TRACE_DEBUG
, "lowest_merge_level = %d ;Çext_run_level = %d\n",

268 
lowe°_mîge_Àvñ
,

269 
√xt_run_Àvñ
);

276 
√xt_size
, 
√xt_Àvñ
;

277 i‡((
lowe°_mîge_Àvñ
 >0Ë&& (lowe°_mîge_Àvñ <
Àvñ
)) {

284 i‡((
lowe°_mîge_Àvñ
 < 0Ë&& (
√xt_run_Àvñ
 < 0)) {

289 
	`°¨t_mîge
(-1, 
runs
,Ñuns.
	`size
());

290 
_run_m≠
.
	`îa£
(
cuº_Àvñ_ô
);

293 i‡(
√xt_run_Àvñ
 < 0) {

296 
√xt_Àvñ
 = 
lowe°_mîge_Àvñ
;

297 
√xt_size
 = 
mîges
->
£c⁄d
.
	`size
();

299 i‡(
lowe°_mîge_Àvñ
 < 0) {

301 
√xt_Àvñ
 = 
√xt_run_Àvñ
;

302 
√xt_size
 = 
√xt_Àvñ_ô
->
£c⁄d
.
	`size
();

304 if(
lowe°_mîge_Àvñ
 > 
√xt_run_Àvñ
) {

306 
√xt_Àvñ
 = 
√xt_run_Àvñ
;

307 
√xt_size
 = 
√xt_Àvñ_ô
->
£c⁄d
.
	`size
();

309 if(
lowe°_mîge_Àvñ
 < 
√xt_run_Àvñ
) {

311 
√xt_Àvñ
 = 
lowe°_mîge_Àvñ
;

312 
√xt_size
 = 
mîges
->
£c⁄d
.
	`size
();

316 
√xt_Àvñ
 = 
lowe°_mîge_Àvñ
;

317 
√xt_size
 = 
mîges
->
£c⁄d
.
	`size
(Ë+ 
√xt_Àvñ_ô
->second.size();

321 
	`TRACE
(
TRACE_DEBUG
, "next_size = %d ;Çext_level = %d\n",

322 
√xt_size
,

323 
√xt_Àvñ
);

327 
ªquúed_mîges
 = (
√xt_size
 + 
MERGE_FACTOR
-1)/MERGE_FACTOR;

328 
pŸítül_mîges
 = (
√xt_size
 + 
runs
.
	`size
(Ë+ 
MERGE_FACTOR
-1)/MERGE_FACTOR;

329 if(
pŸítül_mîges
 > 
ªquúed_mîges
) {

331 
	`°¨t_mîge
(
√xt_Àvñ
, 
runs
,Ñuns.
	`size
());

335 
run_li°_t
 &
√xt_runs
 = 
_run_m≠
[
√xt_Àvñ
];

336 
√xt_runs
.
	`ö£π
“ext_runs.
	`íd
(), 
runs
.
	`begö
(),Ñuns.end());

341 
_run_m≠
.
	`îa£
(
cuº_Àvñ_ô
);

343 
	}
}

353 
tu∂e_fifo
 *
	gs‹t_°age_t
::
	$m⁄ô‹_mîge_∑ckës
() {

355 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_m⁄ô‹
.
_lock
);

358 if(
_m⁄ô‹
.
	`waô_hﬁdög_lock
())

360 
	`±hªad_exô
(
NULL
);

365 
	`check_föished_mîges
();

368 
	`°¨t_√w_mîges
();

371 
mîge_m≠_t
::
ôî©‹
 
mîge
 = 
_mîge_m≠
.
	`begö
();

373 if(
mîge
 !
_mîge_m≠
.
	`íd
(Ë&& mîge->
fú°
 < 0)

375 
	`±hªad_exô
(&
mîge
->
£c⁄d
.
	`‰⁄t
().
_sig«l_buf„r
);

379  
NULL
;

380 
	}
}

384 
	gs‹t_°age_t
::
	$¥o˚ss_∑ckë
() {

386 
s‹t_∑ckë_t
 *
∑ckë
 = (s‹t_∑ckë_à*)
_ad≠t‹
->
	`gë_∑ckë
();

388 
_öput_buf„r
 = 
∑ckë
->_input_buffer;

389 
_tu∂e_size
 = 
_öput_buf„r
->
	`tu∂e_size
();

390 
_com∑ª
 = 
∑ckë
->_compare;

391 
_exåa˘
 = 
∑ckë
->_extract;

392 
_s‹tög_föished
 = 
Ál£
;

395 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_öput
);

399 if(!
_öput_buf„r
->
	`ísuª_ªad_ªady
())

403 
gu¨d
<
qpùe
::
∑ge
> 
out_∑ge
 = qpùe::∑ge::
	`Æloc
(
_tu∂e_size
);

406 
ˇ∑côy
 =

407 
qpùe
::
∑ge
::
	`ˇ∑côy
(
_öput_buf„r
->
	`∑ge_size
(), 
_tu∂e_size
);

408 
tu∂e_cou¡
 = 
PAGES_PER_INITIAL_SORTED_RUN
 * 
ˇ∑côy
;

409 
höt_ve˘‹_t
 
¨øy
;

410 
¨øy
.
	`ª£rve
(
tu∂e_cou¡
);

415 
thªad_t
 *
m⁄ô‹
;

416 
m⁄ô‹
 = 
	`membî_func_thªad
(
this
,

417 &
s‹t_°age_t
::
m⁄ô‹_mîge_∑ckës
,

419 
_m⁄ô‹_thªad
 = 
	`thªad_¸óã
(
m⁄ô‹
);

423 
boﬁ
 
fú°_run
 = 
åue
;

427 
∑ge_åash_°ack
 
∑ges
;

428 
¨øy
.
	`˛ór
();

429 
i
=0; i < 
PAGES_PER_INITIAL_SORTED_RUN
; i++) {

432 
qpùe
::
∑ge
* 
p
 = qpùe::∑ge::
	`Æloc
(
_öput_buf„r
->
	`tu∂e_size
());

433 i‡(!
_öput_buf„r
->
	`c›y_∑ge
(
p
)) {

434 
p
->
	`‰ì
();

439 
∑ges
.
	`add
(
p
);

442 
qpùe
::
∑ge
::
ôî©‹
 
ô
=
p
->
	`begö
(); ià!p->
	`íd
(); ++it) {

443 
höt
 = 
_exåa˘
->
	`exåa˘_höt
(*
ô
);

444 
¨øy
.
	`push_back
(
	`höt_tu∂e_∑ú_t
(
höt
, 
ô
->
d©a
));

449 
°d
::
	`s‹t
(
¨øy
.
	`begö
(),áºay.
	`íd
(), 
	`tu∂e_Àss_t
(
_exåa˘
, 
_com∑ª
));

452 
boﬁ
 
eof
 = !
_öput_buf„r
->
	`ísuª_ªad_ªady
();

455 if(
fú°_run
 && 
eof
) {

456 
_m⁄ô‹
.
	`ˇn˚l
();

457 
tu∂e_t
 
	`out
(
NULL
, 
∑ckë
->
_ouçut_fûãr
->
	`öput_tu∂e_size
());

458 
höt_ve˘‹_t
::
ôî©‹
 
ô
=
¨øy
.
	`begö
(); ià!¨øy.
	`íd
(); ++it) {

459 
out
.
d©a
 = 
ô
->data;

460 
_ad≠t‹
->
	`ouçut
(
out
);

466 
fú°_run
 = 
Ál£
;

469 
c_°r
 
fûe_«me
;

470 
gu¨d
<
FILE
> 
fûe
 = 
	`¸óã_tmp_fûe
(
fûe_«me
, "sorted-run");

474 
höt_ve˘‹_t
::
ôî©‹
 
ô
=
¨øy
.
	`begö
(); ià!¨øy.
	`íd
(); ++it) {

476 
tu∂e_t
 
	`out
(
ô
->
d©a
, 
_tu∂e_size
);

477 
out_∑ge
->
	`≠≥nd_tu∂e
(
out
);

480 if(
out_∑ge
->
	`fuŒ
())

481 
	`Êush_∑ge
(
out_∑ge
, 
fûe
);

485 if(!
out_∑ge
->
	`em±y
())

486 
	`Êush_∑ge
(
out_∑ge
, 
fûe
);

489 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_m⁄ô‹
.
_lock
);

490 
run_li°_t
 &
runs
 = 
_run_m≠
[0];

491 
runs
.
	`push_back
(
fûe_«me
);

492 
_s‹tög_föished
 = 
eof
;

493 
_m⁄ô‹
.
	`nŸify_hﬁdög_lock
();

495 
	`TRACE
(
TRACE_DEBUG
, "Added fûê%†tÿ_run_m≠[0]\n", 
fûe_«me
.
	`d©a
());

497 } !
_s‹tög_föished
);

500 
tu∂e_fifo
* 
mîge_ouçut
 = 
thªad_joö
<tu∂e_fifo>(
_m⁄ô‹_thªad
);

503 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_m⁄ô‹
.
_lock
);

504 
_m⁄ô‹_thªad
 = 0;

506 if(
mîge_ouçut
 =
NULL
)

507 
	`THROW1
(
QPùeEx˚±i⁄
, "Merge failed. Terminating Sort");

511 
tu∂e_t
 
out
;

512 
mîge_ouçut
->
	`gë_tu∂e
(
out
))

513 
_ad≠t‹
->
	`ouçut
(
out
);

515 
	}
}

522 
	$Êush_∑ge
(
qpùe
::
∑ge
* 
pg
, 
FILE
* 
fûe
) {

523 
pg
->
	`fwrôe_fuŒ_∑ge
(
fûe
);

524 
pg
->
	`˛ór
();

525 
	}
}

529 
	gs‹t_°age_t
::
	$¥öt_runs
() {

530 
run_m≠_t
::
ôî©‹
 
Àvñ_ô
 = 
_run_m≠
.
	`begö
();

531  ; 
Àvñ_ô
 !
_run_m≠
.
	`íd
(); ++level_it) {

532 
Àvñ
 = 
Àvñ_ô
->
fú°
;

533 
run_li°_t
 &
runs
 = 
Àvñ_ô
->
£c⁄d
;

534 
	`TRACE
(
TRACE_ALWAYS
, "Levñ %d (%zd):\n", 
Àvñ
, 
runs
.
	`size
());

535 
run_li°_t
::
ôî©‹
 
ô
 = 
runs
.
	`begö
();

536  ; 
ô
 !
runs
.
	`íd
(); ++it)

537 
	`TRACE
(
TRACE_ALWAYS
, "\t%s\n", 
ô
->
	`d©a
());

540 
	}
}

544 
	gs‹t_°age_t
::
	$¥öt_mîges
() {

545 
mîge_m≠_t
::
ôî©‹
 
Àvñ_ô
 = 
_mîge_m≠
.
	`begö
();

546  ; 
Àvñ_ô
 !
_mîge_m≠
.
	`íd
(); ++level_it) {

547 
Àvñ
 = 
Àvñ_ô
->
fú°
;

548 
mîge_li°_t
 &
mîges
 = 
Àvñ_ô
->
£c⁄d
;

549 
	`TRACE
(
TRACE_ALWAYS
, "Levñ %d (%zd)\n", 
Àvñ
, 
mîges
.
	`size
());

550 
mîge_li°_t
::
ôî©‹
 
ô
 = 
mîges
.
	`begö
();

551  ; 
ô
 !
mîges
.
	`íd
(); ++it) {

552 
	`TRACE
(
TRACE_ALWAYS
, "\t%†<=\n", 
ô
->
_ouçut
.
	`d©a
());

553 
run_li°_t
::
ôî©‹
 
run_ô
 = 
ô
->
_öputs
.
	`begö
();

554  ; 
run_ô
 !
ô
->
_öputs
.
	`íd
(); ++run_it)

555 
	`TRACE
(
TRACE_ALWAYS
, "\t\t%s\n", 
run_ô
->
	`d©a
());

559 
	}
}

563 
	gs‹t_°age_t
::
	$ªmove_öput_fûes
(
run_li°_t
& 
fûes
) {

566 
run_li°_t
::
ôî©‹
 
ô
=
fûes
.
	`begö
(); ià!fûes.
	`íd
(); ++it) {

567 if(
	`ªmove
(
ô
->
	`d©a
()))

568 
	`TRACE
(
TRACE_ALWAYS
, "U«bÀÅÿªmovêãm∞fûê%s", 
ô
->
	`d©a
());

569 
	`TRACE
(
TRACE_TEMP_FILE
, "Removed föishedÅem∞fûê%s\n", 
ô
->
	`d©a
());

571 
	}
}

	@src/qpipe/stages/sort_merge_join.cpp

28 
	~"qpùe/°ages/s‹t_mîge_joö.h
"

30 
	~<c°rög
>

31 
	~<Æg‹ôhm
>

34 
ENTER_NAMESPACE
(
qpùe
);

37 c⁄° 
c_°r
 
	gs‹t_mîge_joö_∑ckë_t
::
PACKET_TYPE
 = "SORT_MERGE_JOIN";

39 c⁄° 
c_°r
 
	gs‹t_mîge_joö_°age_t
::
DEFAULT_STAGE_NAME
 = "SORT_MERGE_JOIN";

43 
	gs‹t_mîge_joö_°age_t
::
	$¥o˚ss_∑ckë
() {

45 
s‹t_mîge_joö_∑ckë_t
* 
∑ckë
 = (s‹t_mîge_joö_∑ckë_à*)
_ad≠t‹
->
	`gë_∑ckë
();

47 
_joö
 = 
∑ckë
->_join;

48 
_com∑ª
 = 
∑ckë
->_compare;

50 
tu∂e_fifo
 *
right_buf„r
 = 
∑ckë
->
_right_buf„r
;

51 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_right
);

52 
tu∂e_fifo
 *
À·_buf„r
 = 
∑ckë
->
_À·_buf„r
;

53 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

56 if(!
right_buf„r
->
	`ísuª_ªad_ªady
()) {

62 if(!
À·_buf„r
->
	`ísuª_ªad_ªady
())

67 
tu∂e_t
 
	`À·
(
NULL
, 
_joö
->
	`À·_tu∂e_size
());

68 
tu∂e_t
 
	`right
(
NULL
, 
_joö
->
	`right_tu∂e_size
());

69 
¨øy_gu¨d_t
<> 
d©a
 = 
√w
 [
_joö
->
	`ouçut_tu∂e_size
()];

72 i‡(!
À·_buf„r
->
	`gë_tu∂e
(
À·
))

75 i‡(!
right_buf„r
->
	`gë_tu∂e
(
right
))

79 c⁄° * 
À·_key
;

80 c⁄° * 
right_key
;

86 
À·_key
 = 
_joö
->
	`À·_key
(
À·
);

87 
right_key
 = 
_joö
->
	`right_key
(
right
);

92 (
_com∑ª
->
	`›î©‹
 ()(
À·_key
, 
right_key
)) < 0) {

93 i‡(!
À·_buf„r
->
	`gë_tu∂e
(
À·
))

95 
À·_key
 = 
_joö
->
	`À·_key
(
À·
);

102 (
_com∑ª
->
	`›î©‹
 ()(
À·_key
, 
right_key
)) > 0) {

103 i‡(!
right_buf„r
->
	`gë_tu∂e
(
right
))

105 
right_key
 = 
_joö
->
	`right_key
(
right
);

122 
∑ge_poﬁ
* 
poﬁ
 = 
mÆloc_∑ge_poﬁ
::
	`ö°™˚
();

123 
qpùe
::
∑ge
* 
right_hód_∑ge
 = qpùe::∑ge::
	`Æloc
(
_joö
->
	`right_tu∂e_size
(), 
poﬁ
);

124 
qpùe
::
∑ge
* 
right_∑ge
 = 
right_hód_∑ge
;

128 c⁄° * 
right_key_√w
 = 
_joö
->
	`right_key
(
right
);

129 
	`memcmp
(
right_key_√w
, 
right_key
, 
_joö
->
	`key_size
()) == 0) {

131 i‡(
right_∑ge
->
	`fuŒ
()) {

132 
qpùe
::
∑ge
* 
√w_∑ge
 = qpùe::∑ge::
	`Æloc
(
_joö
->
	`right_tu∂e_size
(), 
poﬁ
);

133 
right_∑ge
->
√xt
 = 
√w_∑ge
;

134 
√w_∑ge
->
√xt
 = 
NULL
;

135 
right_∑ge
 = 
√w_∑ge
;

139 
right_∑ge
->
	`≠≥nd_tu∂e
(
right
);

142 i‡(!
right_buf„r
->
	`gë_tu∂e
(
right
))

144 
right_key_√w
 = 
_joö
->
	`right_key
(
right
);

151 c⁄° * 
À·_key_√w
 = 
_joö
->
	`À·_key
(
À·
);

152 
	`memcmp
(
À·_key_√w
, 
À·_key
, 
_joö
->
	`key_size
()) == 0) {

155 
right_∑ge
 = 
right_hód_∑ge
;

156 
right_∑ge
 !
NULL
) {

157 
qpùe
::
∑ge
::
ôî©‹
 
ô
 = 
right_∑ge
->
	`begö
();

158 
qpùe
::
∑ge
::
ôî©‹
 
íd
 = 
right_∑ge
->
	`íd
();

159 
ô
 !
íd
) {

160 
tu∂e_t
 
right_tu∂e_to_add
 = 
ô
.
	`adv™˚
();

161 
tu∂e_t
 
	`out
(
d©a
, 
_joö
->
	`ouçut_tu∂e_size
());

162 
_joö
->
	`joö
(
out
, 
À·
, 
right_tu∂e_to_add
);

163 
_ad≠t‹
->
	`ouçut
(
out
);

166 
right_∑ge
 =Ñight_∑ge->
√xt
;

170 i‡(!
À·_buf„r
->
	`gë_tu∂e
(
À·
))

172 
À·_key_√w
 = 
_joö
->
	`À·_key
(
À·
);

176 
right_∑ge
 = 
right_hód_∑ge
;

177 
right_∑ge
 !
NULL
) {

178 
qpùe
::
∑ge
* 
√xt_right_∑ge
 = 
right_∑ge
->
√xt
;

179 
right_∑ge
->
	`‰ì
();

180 
right_∑ge
 = 
√xt_right_∑ge
;

184 
	}
}

186 
EXIT_NAMESPACE
(
qpùe
);

	@src/qpipe/stages/sorted_in.cpp

24 
	~"qpùe/°ages/s‹ãd_ö.h
"

28 c⁄° 
c_°r
 
	gs‹ãd_ö_°age_t
::
DEFAULT_STAGE_NAME
 = "SORTED_IN_STAGE";

32 c⁄° 
c_°r
 
	gs‹ãd_ö_∑ckë_t
::
PACKET_TYPE
 = "SORTED_IN";

49 
	gs‹ãd_ö_°age_t
::
	$¥o˚ss_∑ckë
() {

52 
s‹ãd_ö_∑ckë_t
* 
∑ckë
;

53 
∑ckë
 = (
s‹ãd_ö_∑ckë_t
*Ë
_ad≠t‹
->
	`gë_∑ckë
();

54 
tu∂e_fifo
* 
À·_öput
 = 
∑ckë
->
_À·_öput
;

55 
tu∂e_fifo
* 
right_öput
 = 
∑ckë
->
_right_öput
;

56 
key_exåa˘‹_t
* 
À·_exåa˘‹
 = 
∑ckë
->
_À·_exåa˘‹
;

57 
key_exåa˘‹_t
* 
right_exåa˘‹
 = 
∑ckë
->
_right_exåa˘‹
;

58 
key_com∑ª_t
* 
com∑ª
 = 
∑ckë
->
_com∑ª
;

59 
boﬁ
 
ªje˘_m©ches
 = 
∑ckë
->
_ªje˘_m©ches
;

62 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_À·
);

64 
tu∂e_t
 
À·
;

65 c⁄° * 
À·_key
;

66 
À·_höt
;

68 
tu∂e_t
 
right
;

69 c⁄° * 
right_key
;

70 
right_höt
;

73 if(!
À·_öput
->
	`gë_tu∂e
(
À·
))

75 
di•©chî_t
::
	`di•©ch_∑ckë
(
∑ckë
->
_right
);

76 
À·_key
 = 
À·_exåa˘‹
->
	`exåa˘_key
(
À·
);

77 
À·_höt
 = 
À·_exåa˘‹
->
	`exåa˘_höt
(
À·_key
);

92 
diff
;

96 if(!
right_öput
->
	`gë_tu∂e
(
right
)) {

102 if(
ªje˘_m©ches
) {

103 
À·_öput
->
	`gë_tu∂e
(
À·
))

104 
_ad≠t‹
->
	`ouçut
(
À·
);

112 
right_key
 = 
right_exåa˘‹
->
	`exåa˘_key
(
right
);

113 
right_höt
 = 
right_exåa˘‹
->
	`exåa˘_höt
(
right_key
);

117 
diff
 = 
À·_höt
 - 
right_höt
;

118 if(!
diff
 && 
À·_exåa˘‹
->
	`key_size
() > ())

119 
diff
 = (*
com∑ª
)(
À·_key
, 
right_key
);

121 } 
diff
 > 0);

126 
diff
 <= 0) {

129 if((
diff
 =0Ë!
ªje˘_m©ches
)

130 
_ad≠t‹
->
	`ouçut
(
À·
);

135 if(!
À·_öput
->
	`gë_tu∂e
(
À·
))

141 
À·_key
 = 
À·_exåa˘‹
->
	`exåa˘_key
(
À·
);

142 
À·_höt
 = 
À·_exåa˘‹
->
	`exåa˘_höt
(
À·_key
);

146 
diff
 = 
À·_höt
 - 
right_höt
;

147 if(!
diff
 && 
À·_exåa˘‹
->
	`key_size
() > ())

148 
diff
 = (*
com∑ª
)(
À·_key
, 
right_key
);

152 
	`uƒóchabÀ
();

153 
	}
}

	@src/qpipe/stages/tscan.cpp

32 
	~"qpùe/°ages/tsˇn.h
"

33 
	~<uni°d.h
>

35 
	~"sm_vas.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

39 
ENTER_NAMESPACE
(
qpùe
);

48 c⁄° 
c_°r
 
	gtsˇn_∑ckë_t
::
PACKET_TYPE
 = "TSCAN";

50 c⁄° 
c_°r
 
	gtsˇn_°age_t
::
DEFAULT_STAGE_NAME
 = "TSCAN_STAGE";

52 
	#KB
 1024

	)

53 
	#MB
 (1024*
KB
)

	)

55 
	gtsˇn_∑ckë_t
::
	$tsˇn_∑ckë_t
(c⁄° 
c_°r
& 
∑ckë_id
,

56 
tu∂e_fifo
* 
ouçut_buf„r
,

57 
tu∂e_fûãr_t
* 
ouçut_fûãr
,

58 
ss_m
* 
db
,

59 
èbÀ_desc_t
* 
èbÀ
,

60 
x˘_t
* 
px˘
,

61 
lock_mode_t
 
lm
)

62 : 
	`∑ckë_t
(
∑ckë_id
, 
PACKET_TYPE
, 
ouçut_buf„r
, 
ouçut_fûãr
,

63 
	`¸óã_∂™
(
ouçut_fûãr
, 
èbÀ
),

64 
åue
,

65 
åue


67 
	`_db
(
db
), 
	`_èbÀ
(
èbÀ
), 
	`_x˘
(
px˘
), 
	$_lm
(
lm
)

69 
	`as£π
(
_db
);

70 
	`as£π
(
_èbÀ
);

71 
	`as£π
(
_x˘
);

72 
	}
}

75 
quîy_∂™
* 
	gtsˇn_∑ckë_t
::
	$¸óã_∂™
(
tu∂e_fûãr_t
* 
fûãr
,

76 
èbÀ_desc_t
* 
èbÀ
)

78 
c_°r
 
	`a˘i⁄
("%s:%s", 
PACKET_TYPE
.
	`d©a
(), 
èbÀ
->
	`«me
());

79  
√w
 
	`quîy_∂™
(
a˘i⁄
, 
fûãr
->
	`to_°rög
(), 
NULL
, 0);

80 
	}
}

82 
	gtsˇn_∑ckë_t
::
	$de˛¨e_w‹kî_√eds
(
ªsour˚_de˛¨e_t
* 
de˛¨e
)

84 
de˛¨e
->
	`de˛¨e
(
_∑ckë_ty≥
, 1);

86 
	}
}

92 c⁄° 
size_t
 
	gtsˇn_°age_t
::
TSCAN_BULK_READ_BUFFER_SIZE
=256*
KB
;

115 
	gtsˇn_°age_t
::
	$¥o˚ss_∑ckë
()

117 
ad≠t‹_t
* 
ad≠t‹
 = 
_ad≠t‹
;

118 
tsˇn_∑ckë_t
* 
∑ckë
 = (tsˇn_∑ckë_t*)
ad≠t‹
->
	`gë_∑ckë
();

119 
smthªad_t
::
	`me
()->
	`©èch_x˘
(
∑ckë
->
_x˘
);

122 
sim∂e_èbÀ_ôî_t
 
	`tsˇ¬î
(
∑ckë
->
_db
,Öackë->
_èbÀ
,Öackë->
_lm
);

123 
boﬁ
 
	`eof
(
Ál£
);

124 
pö_i
* 
	`h™dÀ
(
NULL
);

125 
uöt
 
p˙t
=0;

126 
uöt
 
	`tsz
(
∑ckë
->
_èbÀ
->
	`maxsize
());

129 
w_rc_t
 
e
 = 
tsˇ¬î
.
	`√xt
(
eof
,
h™dÀ
);

130 !
e
.
	`is_îr‹
(Ë&& !
eof
) {

137 
tu∂e_t
 
	`©
((*)
h™dÀ
->
	`body
(),
tsz
);

138 #w¨nög 
MA
:
Check
 
th©
 
this
 
d€s
 
nŸ
  
™ythög
.

139 
ad≠t‹
->
	`ouçut
(
©
);

141 
e
 = 
tsˇ¬î
.
	`√xt
(
eof
,
h™dÀ
);

149 
smthªad_t
::
	`me
()->
	`dëach_x˘
(
∑ckë
->
_x˘
);

150 
	}
}

153 
EXIT_NAMESPACE
(
qpùe
);

	@src/sm/shore/shore_asc_sort_buf.cpp

33 
	~"sm/sh‹e/sh‹e_asc_s‹t_buf.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

39 c⁄° 
	gMIN_TUPLES_FOR_SORT
 = 250;

53 
	$com∑ª_smÆlöt_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

55 
d©a1
 = *((*)
d1
);

56 
d©a2
 = *((*)
d2
);

57 i‡(
d©a1
 > 
d©a2
)  (1);

58 i‡(
d©a1
 =
d©a2
)  (0);

60 
	}
}

63 
	$com∑ª_öt_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

65 
d©a1
 = *((*)
d1
);

66 
d©a2
 = *((*)
d2
);

67 i‡(
d©a1
 > 
d©a2
)  (1);

68 i‡(
d©a1
 =
d©a2
)  (0);

70 
	}
}

73 
	$com∑ª_bô_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

75 
d©a1
 = *((
boﬁ
*)
d1
);

76 
d©a2
 = *((
boﬁ
*)
d2
);

77 i‡(
d©a1
 > 
d©a2
)  (1);

78 i‡(
d©a1
 =
d©a2
)  (0);

80 
	}
}

82 
	$com∑ª_l⁄g_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

84 
d©a1
 = *((*)
d1
);

85 
d©a2
 = *((*)
d2
);

86 i‡(
d©a1
 > 
d©a2
)  (1);

87 i‡(
d©a1
 =
d©a2
)  (0);

89 
	}
}

91 
	$com∑ª_doubÀ_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

93 
d©a1
 = *((*)
d1
);

94 
d©a2
 = *((*)
d2
);

95 i‡(
d©a1
 > 
d©a2
)  (1);

96 i‡(
d©a1
 =
d©a2
)  (0);

98 
	}
}

100 
	$com∑ª_fixch¨_asc
(c⁄° * 
d1
, c⁄° * 
d2
){

101  (
	`°rcmp
((*)
d1
, (*)
d2
));

102 
	}
}

104 
	gãm∂©e
 <
ty≥«me
 
	gT
>

105 
	$com∑ª_asc
(c⁄° * 
d1
, c⁄° * 
d2
)

107 
T
 
d©a1
 = *((T*)
d1
);

108 
T
 
d©a2
 = *((T*)
d2
);

109 i‡(
d©a1
 > 
d©a2
)  (1);

110 i‡(
d©a1
 =
d©a2
)  (0);

112 
	}
}

130 
	gasc_s‹t_m™_im∂
::
	$öô
()

132 
	`as£π
 (
_±abÀ
);

135 
_tu∂e_size
 = 0;

138 
uöt_t
 
i
=0; i<
_±abÀ
->
	`fõld_cou¡
(); i++)

139 
_tu∂e_size
 +
_±abÀ
->
	`desc
(
i
)->
	`fõldmaxsize
();

142 if((
_tu∂e_size
 % 
_±abÀ
->
	`desc
(0)->
	`fõldmaxsize
()) != 0) {

143 
_tu∂e_size
 = ((_tu∂e_sizê/ 
_±abÀ
->
	`desc
(0)->
	`fõldmaxsize
()) + 1) * _ptable->desc(0)->fieldmaxsize();

147 
	`as£π
 (!
_s‹t_buf
);

148 
	`as£π
 (
_tu∂e_cou¡
==0);

149 
	`as£π
 (
_buf_size
==0);

150 
_s‹t_buf
 = 
√w
 [
MIN_TUPLES_FOR_SORT
*
_tu∂e_size
];

151 
_buf_size
 = 
MIN_TUPLES_FOR_SORT
;

153 
_is_s‹ãd
 = 
Ál£
;

154 
	}
}

166 
	gasc_s‹t_m™_im∂
::
	$ª£t
()

168 
	`as£π
 (
_±abÀ
);

170 
	`as£π
 (
_s‹t_buf
);

172 
	`as£π
 (
_buf_size
);

174 
	`as£π
 (
_tu∂e_size
);

177 
	`mem£t
(
_s‹t_buf
, 0, 
_buf_size
);

178 
_is_s‹ãd
 = 
Ál£
;

179 
	}
}

191 
	gasc_s‹t_m™_im∂
::
	$add_tu∂e
(
s‹ãr_tu∂e
& 
©u∂e
)

193 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

196 i‡(!
_tu∂e_size
Ë
	`öô
();

199 i‡(
_buf_size
 =
_tu∂e_cou¡
) {

201 * 
tmp
 = 
√w
 [(2*
_buf_size
)*
_tu∂e_size
];

202 
	`mem˝y
(
tmp
, 
_s‹t_buf
, 
_buf_size
*
_tu∂e_size
);

203 
dñëe
 [] 
_s‹t_buf
;

205 
_s‹t_buf
 = 
tmp
;

206 
_buf_size
 *= 2;

212 
	`f‹m©
(&
©u∂e
, *
_¥ïrow
);

213 
	`as£π
 (
_¥ïrow
->
_de°
);

214 
	`mem˝y
(
_s‹t_buf
+(
_tu∂e_cou¡
*
_tu∂e_size
), 
_¥ïrow
->
_de°
, _tuple_size);

215 
_tu∂e_cou¡
++;

216 
_is_s‹ãd
 = 
Ál£
;

217 
	}
}

228 
	gasc_s‹t_m™_im∂
::
	$s‹t
()

230 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

235 
cout
 << "Bef‹ês‹tög: " << 
ídl
;

236 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

237 
SQL_BIT
:

238 
i
=0; i<
_tu∂e_cou¡
; i++) {

239 
cout
 << ((
boﬁ
*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

242 
SQL_SMALLINT
:

243 
i
=0; i<
_tu∂e_cou¡
; i++) {

244 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

247 
SQL_INT
:

248 
i
=0; i<
_tu∂e_cou¡
; i++) {

249 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

252 
SQL_LONG
:

253 
i
=0; i<
_tu∂e_cou¡
; i++) {

254 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

257 
SQL_FLOAT
:

258 
i
=0; i<
_tu∂e_cou¡
; i++) {

259 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

263 
cout
 << 
ídl
;

268 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

269 
SQL_BIT
:

270 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_bô_asc
); ;

271 
SQL_SMALLINT
:

272 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_smÆlöt_asc
); ;

273 
SQL_INT
:

274 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_öt_asc
); ;

275 
SQL_LONG
:

276 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_l⁄g_asc
); ;

277 
SQL_FLOAT
:

278 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_doubÀ_asc
); ;

279 
SQL_FIXCHAR
:

280 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_fixch¨_asc
); ;

283 
	`as£π
(0);

285 
_is_s‹ãd
 = 
åue
;

288 
cout
 << "A·î s‹tög: " << 
ídl
;

289 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

290 
SQL_BIT
:

291 
i
=0; i<
_tu∂e_cou¡
; i++) {

292 
cout
 << ((
boﬁ
*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

295 
SQL_SMALLINT
:

296 
i
=0; i<
_tu∂e_cou¡
; i++) {

297 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

300 
SQL_INT
:

301 
i
=0; i<
_tu∂e_cou¡
; i++) {

302 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

305 
SQL_LONG
:

306 
i
=0; i<
_tu∂e_cou¡
; i++) {

307 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

310 
SQL_FLOAT
:

311 
i
=0; i<
_tu∂e_cou¡
; i++) {

312 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

316 
cout
 << 
ídl
;

318 
	}
}

331 
w_rc_t
 
	gasc_s‹t_m™_im∂
::
	$gë_s‹t_ôî
(
ss_m
* 
db
,

332 
asc_s‹t_ôî_im∂
* &
s‹t_ôî
)

334 
s‹t_ôî
 = 
√w
 
	`asc_s‹t_ôî_im∂
(
db
, 
_p•ecifi˘abÀ
, 
this
);

335  (
RCOK
);

336 
	}
}

350 
boﬁ
 
	gasc_s‹t_m™_im∂
::
	$gë_s‹ãd
(c⁄° 
ödex
, 
s‹ãr_tu∂e
* 
±u∂e
)

352 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

354 i‡(
_is_s‹ãd
) {

355 i‡(
ödex
 >=0 && index < 
_tu∂e_cou¡
) {

356  (
	`lﬂd
(
±u∂e
, 
_s‹t_buf
 + (
ödex
*
_tu∂e_size
)));

359  (
Ál£
);

361 
	`TRACE
–
TRACE_DEBUG
, "bufferÇot sorted yet...\n");

362  (
Ál£
);

363 
	}
}

	@src/sm/shore/shore_client.cpp

31 
	~"sm/sh‹e/sh‹e_˛õ¡.h
"

33 
ENTER_NAMESPACE
(
sh‹e
);

44 
boﬁ
 
	g_ab‹t_ã°
 = 
Ál£
;

45 
	gba£_˛õ¡_t
::
	$ab‹t_ã°
()

47 
_ab‹t_ã°
 = 
åue
;

48 
	}
}

49 
	gba£_˛õ¡_t
::
	$ªsume_ã°
()

51 
_ab‹t_ã°
 = 
Ál£
;

52 
	}
}

53 
boﬁ
 
	gba£_˛õ¡_t
::
	$is_ã°_ab‹ãd
()

55  (
_ab‹t_ã°
);

56 
	}
}

68 
w_rc_t
 
	gba£_˛õ¡_t
::
	$submô_b©ch
(
x˘_ty≥
, & 
åx_˙t
, c⁄° 
b©ch_sz
)

70 
	`as£π
 (
b©ch_sz
);

71 
	`as£π
 (
_˝
);

72 
j
=1; j <
b©ch_sz
; j++) {

77 i‡(
j
 =
b©ch_sz
)

78 
_˝
->
	`∂ó£_èke_⁄e
();

79 
	`W_COERCE
(
	`submô_⁄e
(
x˘_ty≥
, 
åx_˙t
++));

81  (
RCOK
);

82 
	}
}

84 
±hªad_muãx_t
 
	g˛õ¡_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

85 
±hªad_c⁄d_t
 
	g˛õ¡_c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

86 
	g˛õ¡_√eded_cou¡
;

87 
	$shñl_ex≥˘_˛õ¡s
(
cou¡
) {

88 
˛õ¡_√eded_cou¡
 = 
cou¡
;

89 
	}
}

90 
	$shñl_awaô_˛õ¡s
() {

91 
	`CRITICAL_SECTION
(
cs
, 
˛õ¡_muãx
);

92 
˛õ¡_√eded_cou¡
)

93 
	`±hªad_c⁄d_waô
(&
˛õ¡_c⁄d
, &
˛õ¡_muãx
);

94 
	}
}

95 
	$˛õ¡_ªady
() {

96 
	`CRITICAL_SECTION
(
cs
, 
˛õ¡_muãx
);

97 if(! --
˛õ¡_√eded_cou¡
)

98 
	`±hªad_c⁄d_sig«l
(&
˛õ¡_c⁄d
);

99 
	}
}

109 
w_rc_t
 
ba£_˛õ¡_t
::
	$run_x˘s
(
x˘_ty≥
, 
num_x˘
)

111 
i
=0;

112 
b©chsz
=1;

114 
	`˛õ¡_ªady
();

117 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

118 
b©chsz
 = 
ev
->
	`gëV¨I¡
("db-˛-b©chsz",
BATCH_SIZE
);

119 
_thök_time
 = 
ev
->
	`gëV¨I¡
("db-˛-thöktime",
THINK_TIME
);

121 i‡((
_thök_time
>0Ë&& (
b©chsz
>1)) {

122 
	`TRACE
–
TRACE_ALWAYS
, "error: Batchsz=%d && ThinkTime=%d\n",

123 
b©chsz
, 
_thök_time
);

124 
	`as£π
(0);

130 
°rög
 
sy¢ame
 = 
ev
->
	`gëSysName
();

131 i‡(
sy¢ame
.
	`com∑ª
("baseline")!=0) {

132 
	`me
()->
	`Æloc_sdesc_ˇche
();

136 
_mósuª_ty≥
) {

139 (
MT_NUM_OF_TRXS
):

142 
	`W_COERCE
(
	`submô_b©ch
(
x˘_ty≥
, 
i
, 
num_x˘
));

144 
_˝
->
	`waô
();

148 (
MT_TIME_DUR
):

151 
	`W_COERCE
(
	`submô_b©ch
(
x˘_ty≥
, 
i
, 
b©chsz
));

152 
	`W_COERCE
(
	`submô_b©ch
(
x˘_ty≥
, 
i
, 
b©chsz
));

155 
åue
) {

157 
_˝
->
	`waô
();

160 if(
_ab‹t_ã°
 || 
_ív
->
	`gë_mósuª
(Ë=
MST_DONE
)

164 
	`W_COERCE
(
	`submô_b©ch
(
x˘_ty≥
, 
i
, 
b©chsz
));

168 
_˝
->
	`waô
();

172 
	`as£π
 (0);

175 
	`TRACE
–
TRACE_TRX_FLOW
, "Exiting...\n");

176 i‡(
sy¢ame
.
	`com∑ª
("baseline")!=0) {

177 
	`me
()->
	`‰ì_sdesc_ˇche
();

180  (
RCOK
);

181 
	}
}

184 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_desc_sort_buf.cpp

33 
	~"sm/sh‹e/sh‹e_desc_s‹t_buf.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

39 c⁄° 
	gMIN_TUPLES_FOR_SORT
 = 250;

54 
	$com∑ª_smÆlöt_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

56 
d©a1
 = *((*)
d1
);

57 
d©a2
 = *((*)
d2
);

58 i‡(
d©a1
 > 
d©a2
)  (-1);

59 i‡(
d©a1
 =
d©a2
)  (0);

61 
	}
}

64 
	$com∑ª_öt_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

66 
d©a1
 = *((*)
d1
);

67 
d©a2
 = *((*)
d2
);

68 i‡(
d©a1
 > 
d©a2
)  (-1);

69 i‡(
d©a1
 =
d©a2
)  (0);

71 
	}
}

74 
	$com∑ª_bô_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

76 
d©a1
 = *((
boﬁ
*)
d1
);

77 
d©a2
 = *((
boﬁ
*)
d2
);

78 i‡(
d©a1
 > 
d©a2
)  (-1);

79 i‡(
d©a1
 =
d©a2
)  (0);

81 
	}
}

83 
	$com∑ª_l⁄g_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

85 
d©a1
 = *((*)
d1
);

86 
d©a2
 = *((*)
d2
);

87 i‡(
d©a1
 > 
d©a2
)  (-1);

88 i‡(
d©a1
 =
d©a2
)  (0);

90 
	}
}

92 
	$com∑ª_doubÀ_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

94 
d©a1
 = *((*)
d1
);

95 
d©a2
 = *((*)
d2
);

96 i‡(
d©a1
 > 
d©a2
)  (-1);

97 i‡(
d©a1
 =
d©a2
)  (0);

99 
	}
}

101 
	$com∑ª_fixch¨_desc
(c⁄° * 
d1
, c⁄° * 
d2
){

102  -(
	`°rcmp
((*)
d1
, (*)
d2
));

103 
	}
}

105 
	gãm∂©e
 <
ty≥«me
 
	gT
>

106 
	$com∑ª_desc
(c⁄° * 
d1
, c⁄° * 
d2
)

108 
T
 
d©a1
 = *((T*)
d1
);

109 
T
 
d©a2
 = *((T*)
d2
);

110 i‡(
d©a1
 > 
d©a2
)  (-1);

111 i‡(
d©a1
 =
d©a2
)  (0);

113 
	}
}

131 
	gdesc_s‹t_m™_im∂
::
	$öô
()

133 
	`as£π
 (
_±abÀ
);

136 
_tu∂e_size
 = 0;

139 
uöt_t
 
i
=0; i<
_±abÀ
->
	`fõld_cou¡
(); i++)

140 
_tu∂e_size
 +
_±abÀ
->
	`desc
(
i
)->
	`fõldmaxsize
();

143 if((
_tu∂e_size
 % 
_±abÀ
->
	`desc
(0)->
	`fõldmaxsize
()) != 0) {

144 
_tu∂e_size
 = ((_tu∂e_sizê/ 
_±abÀ
->
	`desc
(0)->
	`fõldmaxsize
()) + 1) * _ptable->desc(0)->fieldmaxsize();

148 
	`as£π
 (!
_s‹t_buf
);

149 
	`as£π
 (
_tu∂e_cou¡
==0);

150 
	`as£π
 (
_buf_size
==0);

151 
_s‹t_buf
 = 
√w
 [
MIN_TUPLES_FOR_SORT
*
_tu∂e_size
];

152 
_buf_size
 = 
MIN_TUPLES_FOR_SORT
;

154 
_is_s‹ãd
 = 
Ál£
;

155 
	}
}

167 
	gdesc_s‹t_m™_im∂
::
	$ª£t
()

169 
	`as£π
 (
_±abÀ
);

171 
	`as£π
 (
_s‹t_buf
);

173 
	`as£π
 (
_buf_size
);

175 
	`as£π
 (
_tu∂e_size
);

178 
	`mem£t
(
_s‹t_buf
, 0, 
_buf_size
);

179 
_is_s‹ãd
 = 
Ál£
;

180 
	}
}

192 
	gdesc_s‹t_m™_im∂
::
	$add_tu∂e
(
s‹ãr_tu∂e
& 
©u∂e
)

194 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

197 i‡(!
_tu∂e_size
Ë
	`öô
();

200 i‡(
_buf_size
 =
_tu∂e_cou¡
) {

202 * 
tmp
 = 
√w
 [(2*
_buf_size
)*
_tu∂e_size
];

203 
	`mem˝y
(
tmp
, 
_s‹t_buf
, 
_buf_size
*
_tu∂e_size
);

204 
dñëe
 [] 
_s‹t_buf
;

206 
_s‹t_buf
 = 
tmp
;

207 
_buf_size
 *= 2;

213 
	`f‹m©
(&
©u∂e
, *
_¥ïrow
);

214 
	`as£π
 (
_¥ïrow
->
_de°
);

215 
	`mem˝y
(
_s‹t_buf
+(
_tu∂e_cou¡
*
_tu∂e_size
), 
_¥ïrow
->
_de°
, _tuple_size);

216 
_tu∂e_cou¡
++;

217 
_is_s‹ãd
 = 
Ál£
;

218 
	}
}

229 
	gdesc_s‹t_m™_im∂
::
	$s‹t
()

231 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

236 
cout
 << "Bef‹ês‹tög: " << 
ídl
;

237 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

238 
SQL_BIT
:

239 
i
=0; i<
_tu∂e_cou¡
; i++) {

240 
cout
 << ((
boﬁ
*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

243 
SQL_SMALLINT
:

244 
i
=0; i<
_tu∂e_cou¡
; i++) {

245 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

248 
SQL_INT
:

249 
i
=0; i<
_tu∂e_cou¡
; i++) {

250 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

253 
SQL_LONG
:

254 
i
=0; i<
_tu∂e_cou¡
; i++) {

255 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

258 
SQL_FLOAT
:

259 
i
=0; i<
_tu∂e_cou¡
; i++) {

260 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

264 
cout
 << 
ídl
;

269 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

270 
SQL_BIT
:

271 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_bô_desc
); ;

272 
SQL_SMALLINT
:

273 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_smÆlöt_desc
); ;

274 
SQL_INT
:

275 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_öt_desc
); ;

276 
SQL_LONG
:

277 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_l⁄g_desc
); ;

278 
SQL_FLOAT
:

279 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_doubÀ_desc
); ;

280 
SQL_FIXCHAR
:

281 
	`qs‹t
(
_s‹t_buf
, 
_tu∂e_cou¡
, 
_tu∂e_size
, 
com∑ª_fixch¨_desc
); ;

284 
	`as£π
(0);

286 
_is_s‹ãd
 = 
åue
;

289 
cout
 << "A·î s‹tög: " << 
ídl
;

290 
_±abÀ
->
	`desc
(0)->
	`ty≥
()) {

291 
SQL_BIT
:

292 
i
=0; i<
_tu∂e_cou¡
; i++) {

293 
cout
 << ((
boﬁ
*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

296 
SQL_SMALLINT
:

297 
i
=0; i<
_tu∂e_cou¡
; i++) {

298 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

301 
SQL_INT
:

302 
i
=0; i<
_tu∂e_cou¡
; i++) {

303 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

306 
SQL_LONG
:

307 
i
=0; i<
_tu∂e_cou¡
; i++) {

308 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

311 
SQL_FLOAT
:

312 
i
=0; i<
_tu∂e_cou¡
; i++) {

313 
cout
 << ((*)(
_s‹t_buf
+
i
*
_tu∂e_size
))[0] << " ";

317 
cout
 << 
ídl
;

319 
	}
}

332 
w_rc_t
 
	gdesc_s‹t_m™_im∂
::
	$gë_s‹t_ôî
(
ss_m
* 
db
,

333 
desc_s‹t_ôî_im∂
* &
s‹t_ôî
)

335 
s‹t_ôî
 = 
√w
 
	`desc_s‹t_ôî_im∂
(
db
, 
_p•ecifi˘abÀ
, 
this
);

336  (
RCOK
);

337 
	}
}

351 
boﬁ
 
	gdesc_s‹t_m™_im∂
::
	$gë_s‹ãd
(c⁄° 
ödex
, 
s‹ãr_tu∂e
* 
±u∂e
)

353 
	`CRITICAL_SECTION
(
cs
, 
_s‹ãd_lock
);

355 i‡(
_is_s‹ãd
) {

356 i‡(
ödex
 >=0 && index < 
_tu∂e_cou¡
) {

357  (
	`lﬂd
(
±u∂e
, 
_s‹t_buf
 + (
ödex
*
_tu∂e_size
)));

360  (
Ál£
);

362 
	`TRACE
–
TRACE_DEBUG
, "bufferÇot sorted yet...\n");

363  (
Ál£
);

364 
	}
}

	@src/sm/shore/shore_env.cpp

32 
	~"utû/c⁄Â¨£r.h
"

33 
	~"sm/sh‹e/sh‹e_ív.h
"

34 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

35 
	~"sm/sh‹e/sh‹e_Êushî.h
"

36 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

39 
ENTER_NAMESPACE
(
sh‹e
);

42 #w¨nög 
IP
: 
TODO
 
∑ss
 
¨bôøry
 -
sm_
* 
›ti⁄s
 
‰om
 
sh‹e
.
c⁄f
 
to
 shore

46 
Sh‹eEnv
* 
	g_g_sh‹e_ív
 = 
NULL
;

48 
¥ocm⁄ô‹_t
* 
	g_g_m⁄
 = 
NULL
;

64 
	gív_°©s_t
::
	$¥öt_ív_°©s
() const

66 
	`TRACE
–
TRACE_STATISTICS
, "===============================\n");

67 
	`TRACE
–
TRACE_STATISTICS
, "DatabaseÅransaction statistics\n");

68 
	`TRACE
–
TRACE_STATISTICS
, "Aâem±ed: %d\n", 
_¡rx_©t
);

69 
	`TRACE
–
TRACE_STATISTICS
, "Commôãd: %d\n", 
_¡rx_com
);

70 
	`TRACE
–
TRACE_STATISTICS
, "Ab‹ãd : %d\n", (
_¡rx_©t
-
_¡rx_com
));

71 
	`TRACE
–
TRACE_STATISTICS
, "===============================\n");

72 
	}
}

86 
	gSh‹eEnv
::
	$Sh‹eEnv
()

87 : 
	`db_iÁ˚
(),

88 
	`_pssm
(
NULL
),

89 
	`_öôülized
(
Ál£
), 
	`_öô_muãx
(
	`thªad_muãx_¸óã
()),

90 
	`_lﬂded
(
Ál£
), 
	`_lﬂd_muãx
(
	`thªad_muãx_¸óã
()),

91 
	`_°©m≠_muãx
(
	`thªad_muãx_¸óã
()),

92 
	`_œ°_°©s_muãx
(
	`thªad_muãx_¸óã
()),

93 
	`_vﬁ_muãx
(
	`thªad_muãx_¸óã
()),

94 
	`_max_˝u_cou¡
(0),

95 
	`_a˘ive_˝u_cou¡
(0),

96 
	`_w‹kî_˙t
(0),

97 
	`_mósuª
(
MST_UNDEF
),

98 
	`_pd
(
PD_NORMAL
),

99 
	`_ö£π_‰eq
(0),
	`_dñëe_‰eq
(0),
	`_¥obe_‰eq
(100),

100 
	`_ªque°_poﬁ
((
åx_ªque°_t
)),

101 
	`_bU£SLI
(
Ál£
),
	`_bU£ELR
(Ál£),
	`_bU£Flushî
(false),

102 
	`_bAœrmSë
(
Ál£
), 
	`_°¨t_imbÆ™˚
(0), 
	$_skew_ty≥
(
SKEW_NONE
)

104 
_p›ts
 = 
√w
 
	`›ti⁄_group_t
(1);

105 
_pvid
 = 
√w
 
	`vid_t
(1);

107 
	`±hªad_muãx_öô
(&
_sˇlög_muãx
, 
NULL
);

108 
	`±hªad_muãx_öô
(&
_quîõd_muãx
, 
NULL
);

111 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

113 
°rög
 
physiˇl
 = 
ev
->
	`gëSysDesign
();

115 i‡(
physiˇl
.
	`com∑ª
("normal")==0) {

116 
_pd
 = 
PD_NORMAL
;

118 i‡(
physiˇl
.
	`com∑ª
("mrbtnorm")==0) {

119 
_pd
 = 
PD_MRBT_NORMAL
;

121 i‡(
physiˇl
.
	`com∑ª
("mrbtpart")==0) {

122 
_pd
 = 
PD_MRBT_PART
;

124 i‡(
physiˇl
.
	`com∑ª
("mrbtleaf")==0) {

125 
_pd
 = 
PD_MRBT_LEAF
;

129 
	`check_hacks_íabÀd
();

130 i‡(
	`is_hacks_íabÀd
()) {

131 
_pd
 |
PD_PADDED
;

135 
_bU£SLI
 = 
ev
->
	`gëV¨I¡
("db-worker-sli",0);

136 
	`Ârötf
(
°dout
, "SLI%s\n", (
_bU£SLI
 ? "enabled" : "disabled"));

139 
_ªc_to_acc
 = 
ev
->
	`gëV¨I¡
("records-to-access",1);

140 
	}
}

143 
	gSh‹eEnv
::~
	$Sh‹eEnv
()

145 i‡(
	`dbc
()!=
DBC_STOPPED
Ë
	`°›
();

147 
	`±hªad_muãx_de°roy
(&
_öô_muãx
);

148 
	`±hªad_muãx_de°roy
(&
_°©m≠_muãx
);

149 
	`±hªad_muãx_de°roy
(&
_œ°_°©s_muãx
);

150 
	`±hªad_muãx_de°roy
(&
_lﬂd_muãx
);

151 
	`±hªad_muãx_de°roy
(&
_vﬁ_muãx
);

153 
	`±hªad_muãx_de°roy
(&
_sˇlög_muãx
);

154 
	`±hªad_muãx_de°roy
(&
_quîõd_muãx
);

155 
	}
}

158 
boﬁ
 
	gSh‹eEnv
::
	$is_öôülized
()

160 
	`CRITICAL_SECTION
(
cs
, 
_öô_muãx
);

161  (
_öôülized
);

162 
	}
}

164 
boﬁ
 
	gSh‹eEnv
::
	$is_lﬂded
()

166 
	`CRITICAL_SECTION
(
cs
, 
_lﬂd_muãx
);

167  (
_lﬂded
);

168 
	}
}

171 
	gSh‹eEnv
::
	$£t_max_˝u_cou¡
(c⁄° 
uöt
 
˝u˙t
)

173 
_max_˝u_cou¡
 = ( 
˝u˙t
>0 ? cpucnt : _max_cpu_count);

174 i‡(
_a˘ive_˝u_cou¡
>
_max_˝u_cou¡
) {

175 
_a˘ive_˝u_cou¡
 = 
_max_˝u_cou¡
;

177 
	}
}

179 
uöt
 
	gSh‹eEnv
::
	$gë_max_˝u_cou¡
() const

181  (
_max_˝u_cou¡
);

182 
	}
}

184 
uöt
 
	gSh‹eEnv
::
	$gë_a˘ive_˝u_cou¡
() const

186  (
_a˘ive_˝u_cou¡
);

187 
	}
}

199 
	gSh‹eEnv
::
	$£t_qf
(c⁄° 
aQF
)

201 i‡((
aQF
>0Ë&& (aQF<=
_sˇlög_Á˘‹
)) {

202 
	`TRACE
–
TRACE_ALWAYS
, "New Quîõd Fa˘‹: %.1f\n", 
aQF
);

203 
_quîõd_Á˘‹
 = 
aQF
;

206 
	`TRACE
–
TRACE_ALWAYS
, "InvÆid quîõd fa˘‹ i≈ut: %.1f\n", 
aQF
);

208 
	}
}

210 
	gSh‹eEnv
::
	$gë_qf
() const

212  (
_quîõd_Á˘‹
);

213 
	}
}

216 
	gSh‹eEnv
::
	$£t_sf
(c⁄° 
aSF
)

218 i‡(
aSF
 > 0.0) {

219 
	`TRACE
–
TRACE_ALWAYS
, "New Sˇlög fa˘‹: %.1f\n", 
aSF
);

220 
_sˇlög_Á˘‹
 = 
aSF
;

223 
	`TRACE
–
TRACE_ALWAYS
, "InvÆid sˇlög fa˘‹ i≈ut: %.1f\n", 
aSF
);

225 
	}
}

227 
	gSh‹eEnv
::
	$gë_sf
() const

229  (
_sˇlög_Á˘‹
);

230 
	}
}

232 
	gSh‹eEnv
::
	$upd_sf
()

234 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

235 
tmp_sf
 = 
ev
->
	`gëSysV¨DoubÀ
("sf");

236 
	`as£π
 (
tmp_sf
>0);

237 
	`£t_sf
(
tmp_sf
);

238  (
_sˇlög_Á˘‹
);

239 
	}
}

241 
	gSh‹eEnv
::
	$¥öt_sf
() const

243 
	`TRACE
–
TRACE_ALWAYS
, "Sˇlög Fa˘‹ = (%.1f)\n", 
	`gë_sf
());

244 
	`TRACE
–
TRACE_ALWAYS
, "Quîõd Fa˘‹ = (%.1f)\n", 
	`gë_qf
());

245 
	}
}

255 
uöt4_t
 
	gSh‹eEnv
::
	$gë_pd
() const

257  (
_pd
);

258 
	}
}

260 
uöt4_t
 
	gSh‹eEnv
::
	$£t_pd
(c⁄° 
physiˇl_design_t
& 
≠d
)

262 
_pd
 = 
≠d
;

263 
	`TRACE
–
TRACE_ALWAYS
, "DB sëÅÿ(%x)\n", 
_pd
);

264  (
_pd
);

265 
	}
}

267 
uöt4_t
 
	gSh‹eEnv
::
	$add_pd
(c⁄° 
physiˇl_design_t
& 
≠d
)

269 
_pd
 |
≠d
;

270 
	`TRACE
–
TRACE_ALWAYS
, "DB sëÅÿ(%x)\n", 
_pd
);

271  (
_pd
);

272 
	}
}

274 
boﬁ
 
	gSh‹eEnv
::
	$check_hacks_íabÀd
()

277 
he
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("physical-hacks-enable",0);

278 
_íabÀ_hacks
 = (
he
 =1 ? 
åue
 : 
Ál£
);

279  (
_íabÀ_hacks
);

280 
	}
}

282 
boﬁ
 
	gSh‹eEnv
::
	$is_hacks_íabÀd
() const

284  (
_íabÀ_hacks
);

285 
	}
}

294 
	gSh‹eEnv
::
	$£t_‰eqs
(
ö£π_‰eq
, 
dñëe_‰eq
, 
¥obe_‰eq
)

296 
	`as£π
 ((
ö£π_‰eq
>=0) && (insert_freq<=100));

297 
	`as£π
 ((
dñëe_‰eq
>=0) && (delete_freq<=100));

298 
	`as£π
 ((
¥obe_‰eq
>=0) && (probe_freq<=100));

299 
_ö£π_‰eq
 = 
ö£π_‰eq
;

300 
_dñëe_‰eq
 = 
dñëe_‰eq
;

301 
_¥obe_‰eq
 = 
¥obe_‰eq
;

302 
	}
}

311 
	gSh‹eEnv
::
	$£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
)

313 
	`as£π
 ((
lﬂd
>=0) && (load<=100));

314 
	`as£π
 (
°¨t_imbÆ™˚
>0);

315 
	`as£π
((
¨ó
>0) && (area<100));

317 
_°¨t_imbÆ™˚
 = 
°¨t_imbÆ™˚
;

319 
skew_ty≥
 = 
	`UR™d
(1,10);

320 if(
skew_ty≥
 < 6) {

322 
_skew_ty≥
 = 
SKEW_NORMAL
;

323 
	`TRACE
–
TRACE_ALWAYS
, "SKEW_NORMAL\n");

324 } if(
skew_ty≥
 < 9) {

326 
_skew_ty≥
 = 
SKEW_DYNAMIC
;

327 
	`TRACE
–
TRACE_ALWAYS
, "SKEW_DYNAMIC\n");

328 } if(
skew_ty≥
 < 11) {

333 
_skew_ty≥
 = 
SKEW_CHAOTIC
;

334 
	`TRACE
–
TRACE_ALWAYS
, "SKEW_CHAOTIC\n");

336 
	`as£π
(0);

338 
	}
}

347 
	gSh‹eEnv
::
	$°¨t_lﬂd_imbÆ™˚
()

350 if(
_skew_ty≥
 =
SKEW_DYNAMIC
 || _skew_ty≥ =
SKEW_CHAOTIC
) {

351 
_°¨t_imbÆ™˚
 = 
	`UR™d
(10,30);

352 
_bAœrmSë
 = 
Ál£
;

354 
	}
}

363 
	gSh‹eEnv
::
	$ª£t_skew
()

365 
_°¨t_imbÆ™˚
 = 0;

366 
_bAœrmSë
 = 
Ál£
;

367 
	}
}

378 
uöt
 
	gSh‹eEnv
::
	$upd_w‹kî_˙t
()

381 
uöt
 
w‹kîs
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-workers",0);

382 
	`as£π
 (
w‹kîs
);

383 
_w‹kî_˙t
 = 
w‹kîs
;

384  (
_w‹kî_˙t
);

385 
	}
}

388 
åx_w‹kî_t
* 
	gSh‹eEnv
::
	$w‹kî
(c⁄° 
uöt
 
idx
)

390  (
_w‹kîs
[
idx
%
_w‹kî_˙t
]);

391 
	}
}

413 
	gSh‹eEnv
::
	$öô
()

415 
	`CRITICAL_SECTION
(
cs
,
_öô_muãx
);

416 i‡(
_öôülized
) {

417 
	`TRACE
–
TRACE_ALWAYS
, "Already initialized\n");

424 
	`ªadc⁄fig
();

427 i‡(
	`_£t_sys_∑øms
()) {

428 
	`TRACE
–
TRACE_ALWAYS
, "Problem in setting systemÖarameters\n");

434 i‡(
	`c⁄figuª_sm
()) {

435 
	`TRACE
–
TRACE_ALWAYS
, "Error configuring Shore\n");

440 i‡(
	`lﬂd_schema
().
	`is_îr‹
()) {

441 
	`TRACE
–
TRACE_ALWAYS
, "ErrorÜoadingÅhe database schema\n");

446 i‡(
	`upd©e_∑πôi⁄ög
().
	`is_îr‹
()) {

447 
	`TRACE
–
TRACE_ALWAYS
, "Error updatingÅheÖartitioning info\n");

453 i‡(
	`°¨t_sm
()) {

454 
	`TRACE
–
TRACE_ALWAYS
, "Error starting Shore database\n");

458 
˛obbî
 = 
	`©oi
(
_sys_›ts
[
SHORE_SYS_OPTIONS
[0][0]].
	`c_°r
());

459 i‡(!
˛obbî
) {

461 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

462 
	`W_COERCE
(
	`lﬂd_™d_ªgi°î_fids
());

463 
	`W_COERCE
(
	`db
()->
	`commô_x˘
());

465 i‡(
rvÆ
 = 
	`po°_öô
()) {

466 
	`TRACE
–
TRACE_ALWAYS
, "Error in ShoreÖost-init\n");

467  (
rvÆ
);

472 
_öôülized
 = 
åue
;

473 
	`TRACE
–
TRACE_DEBUG
, "ShoreEnv initialized\n");

476 
	}
}

490 
	gSh‹eEnv
::
	$°¨t
()

492 
	`upd_sf
();

493 
	`upd_w‹kî_˙t
();

495 
	`as£π
 (
_w‹kîs
.
	`em±y
());

497 
	`TRACE
–
TRACE_ALWAYS
, "Sèπög (%s)\n", 
_sy¢ame
.
	`c_°r
());

498 
	`öfo
();

501 
lc
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-worker-queueloops",0);

503 #ifde‡
CFG_FLUSHER


504 
	`_°¨t_Êushî
();

507 
W‹kîPå
 
aw‹kî
;

508 
uöt
 
i
=0; i<
_w‹kî_˙t
; i++) {

509 
aw‹kî
 = 
√w
 
	`W‹kî
(
this
,
	`c_°r
("w‹k-%d", 
i
),
PBIND_NONE
,
_bU£SLI
);

510 
_w‹kîs
.
	`push_back
(
aw‹kî
);

511 
aw‹kî
->
	`öô
(
lc
);

512 
aw‹kî
->
	`°¨t
();

513 
aw‹kî
->
	`f‹k
();

516 
	}
}

530 
	gSh‹eEnv
::
	$°›
()

533 
	`CRITICAL_SECTION
(
cs
, 
_öô_muãx
);

535 i‡(
	`dbc
(Ë=
DBC_STOPPED
)

538 
	`TRACE
–
TRACE_ALWAYS
, "(%s)álready stopped\n",

539 
_sy¢ame
.
	`c_°r
());

543 
	`TRACE
–
TRACE_ALWAYS
, "St›pög (%s)\n", 
_sy¢ame
.
	`c_°r
());

544 
	`öfo
();

546 i‡(!
_öôülized
) {

547 
˚º
 << "Envú⁄míànŸ inôülized..." << 
ídl
;

552 
i
=0;

553 
W‹kîIt
 
ô
 = 
_w‹kîs
.
	`begö
(); ià!_w‹kîs.
	`íd
(); ++it) {

554 
i
++;

555 
	`TRACE
–
TRACE_DEBUG
, "St›pög w‹kî (%d)\n", 
i
);

556 i‡(*
ô
) {

557 (*
ô
)->
	`°›
();

558 (*
ô
)->
	`joö
();

559 
	`dñëe
 (*
ô
);

562 
_w‹kîs
.
	`˛ór
();

564 #ifde‡
CFG_FLUSHER


565 
	`_°›_Êushî
();

569 
	`£t_dbc
(
DBC_STOPPED
);

573 
	}
}

587 
	gSh‹eEnv
::
	$˛o£
()

589 
	`TRACE
–
TRACE_ALWAYS
, "Closög (%s)\n", 
_sy¢ame
.
	`c_°r
());

592 
r
 = 
	`°›
();

593 i‡(
r
 != 0)

596  (
r
);

600 
	`CRITICAL_SECTION
(
cs
, 
_öô_muãx
);

601 
	`˛o£_sm
();

602 
_öôülized
 = 
Ál£
;

606 
	}
}

617 
	gSh‹eEnv
::
	$°©i°ics
()

619 
	`CRITICAL_SECTION
(
cs
, 
_öô_muãx
);

620 i‡(!
_öôülized
) {

621 
˚º
 << "Envú⁄míànŸ inôülized..." << 
ídl
;

625 #ifde‡
CFG_FLUSHER


626 i‡(
_ba£_Êushî
Ë_ba£_Êushî->
	`°©i°ics
();

632 
	}
}

649 
	gSh‹eEnv
::
	$˛o£_sm
()

651 
	`TRACE
–
TRACE_ALWAYS
, "Closing Shore storage manager...\n");

653 i‡(!
_pssm
) {

654 
	`TRACE
–
TRACE_ALWAYS
, "smálready closed...\n");

660 
_pssm
->
	`dißbÀ_Áke_disk_œãncy
(*
_pvid
);

663 
	`TRACE
–
TRACE_ALWAYS
, "Dismountingáll devices...\n");

666 
a˘ivex˘s
 = 
ss_m
::
	`num_a˘ive_x˘s
();

667 i‡(
a˘ivex˘s
) {

668 
	`TRACE
 (
TRACE_ALWAYS
, "\n*** Warning (%d)áctive xcts. Cannot dismount!!\n",

669 
a˘ivex˘s
);

670 
	`w_as£π3
 (
Ál£
);

672 
	`W_IGNORE
(
ss_m
::
	`dump_x˘s
(
cout
));

673 
cout
 << 
Êush
;

676 
w_rc_t
 
e
 = 
_pssm
->
	`dismou¡_Æl
();

677 i‡(
e
.
	`is_îr‹
()) {

679 i‡(
e
.
	`îr_num
(Ë=
smÀvñ_0
::
eCANTWHILEACTIVEXCTS
) {

681 
	`TRACE
–
TRACE_ALWAYS
,

683 
e
.
	`îr_num
());

686 
	`TRACE
–
TRACE_ALWAYS
,

688 
e
.
	`îr_num
());

700 
	`dñëe
 (
_pssm
);

704 
	}
}

715 
sm_°©s_öfo_t
 
	gﬁd°©s
;

717 
	gSh‹eEnv
::
	$g©hî°©s_sm
()

722 
sm_°©s_öfo_t
 
°©s
;

723 
ss_m
::
	`g©hî_°©s
(
°©s
);

725 
sm_°©s_öfo_t
 
diff
 = 
°©s
;

726 
diff
 -
_œ°_sm_°©s
;

729 
cout
 << 
diff
 << 
ídl
;

730 
_œ°_sm_°©s
 = 
°©s
;

731 
	}
}

745 
	gSh‹eEnv
::
	$c⁄figuª_sm
()

747 
	`TRACE
–
TRACE_DEBUG
, "Configuring Shore...\n");

750 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(
_p›ts
));

752 
szO±
 = 
_sm_›ts
.
	`size
();

753 
	`as£π
 (
szO±
 > 1);

754 c⁄° * 
myO±s
[(2*(
SHORE_NUM_SYS_SM_OPTIONS
+
SHORE_NUM_DB_SM_OPTIONS
)) + 1];

755 
i
=0;

757 
myO±s
[
i
++] = (*)"fake";

758 
m≠
<
°rög
,°rög>::
ôî©‹
 
sm_ôî
 = 
_sm_›ts
.
	`begö
();

759 
sm_ôî
 !
_sm_›ts
.
	`íd
(); sm_iter++)

761 
myO±s
[
i
++] = 
sm_ôî
->
fú°
.
	`c_°r
();

762 
myO±s
[
i
++] = 
sm_ôî
->
£c⁄d
.
	`c_°r
();

765 
w_o°r°ªam
 
îr
;

766 
numO±s
 = (2*
szO±
)+1;

767 
w_rc_t
 
rc
 = 
_p›ts
->
	`∑r£_comm™d_löe
(
myO±s
, 
numO±s
, 2, &
îr
);

769 
îr
 << 
íds
;

772 i‡(
rc
.
	`is_îr‹
()) {

773 
˚º
 << "Eº‹ c⁄figurög Sh‹e: " << 
ídl
;

774 
˚º
 << "\t" << 
w_îr‹_t
::
	`îr‹_°rög
(
rc
.
	`îr_num
()Ë<< 
ídl
;

775 
˚º
 << "\t" << 
îr
.
	`c_°r
(Ë<< 
ídl
;

776 
	`ußge
(*
_p›ts
);

781 
	`w_ª£t_°r°ªam
(
îr
);

782 
rc
 = 
_p›ts
->
	`check_ªquúed
(&
îr
);

783 i‡(
rc
.
	`is_îr‹
()) {

784 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

785 
˚º
 << 
îr
.
	`c_°r
(Ë<< 
ídl
;

786 
	`ußge
(*
_p›ts
);

790 
	`upd_sf
();

791 
	`upd_w‹kî_˙t
();

795 
	}
}

812 
	gssm_max_smÆl_ªc
;

813 
sm_c⁄fig_öfo_t
 
	gsm_c⁄fig_öfo
;

815 
	gSh‹eEnv
::
	$°¨t_sm
()

817 
	`TRACE
–
TRACE_DEBUG
, "Starting Shore...\n");

819 i‡(
_öôülized
 =
Ál£
) {

820 
_pssm
 = 
√w
 
	`ss_m
();

823 
	`TRACE
–
TRACE_DEBUG
, "Shoreálready started...\n");

830 c⁄°* 
devi˚
 = 
_dev_›ts
[
SHORE_DB_OPTIONS
[0][0]].
	`c_°r
();

831 
quŸa
 = 
	`©oi
(
_dev_›ts
[
SHORE_DB_OPTIONS
[1][0]].
	`c_°r
());

832 
˛obbî
 = 
	`©oi
(
_sys_›ts
[
SHORE_SYS_OPTIONS
[0][0]].
	`c_°r
());

834 
	`as£π
 (
_pssm
);

835 
	`as£π
 (
	`°æí
(
devi˚
)>0);

836 
	`as£π
 (
quŸa
>0);

838 i‡(
˛obbî
) {

840 
	`CRITICAL_SECTION
(
cs
, 
_lﬂd_muãx
);

842 
	`TRACE
–
TRACE_DEBUG
, "FormattingáÇew device (%s) withá (%d) kB quota\n",

843 
devi˚
, 
quŸa
);

847 
ss_m
::
smksize_t
 
smquŸa
 = 
quŸa
;

848 
	`W_COERCE
(
_pssm
->
	`f‹m©_dev
(
devi˚
, 
smquŸa
, 
åue
));

849 
	`TRACE
–
TRACE_DEBUG
, "Formatting device completed...\n");

852 
	`W_COERCE
(
_pssm
->
	`mou¡_dev
(
devi˚
, 
_vﬁ_˙t
, 
_devid
));

853 
	`TRACE
–
TRACE_DEBUG
, "Mounting (new) device completed...\n");

858 
	`W_COERCE
(
_pssm
->
	`gíî©e_√w_lvid
(
_lvid
));

859 
	`W_COERCE
(
_pssm
->
	`¸óã_vﬁ
(
devi˚
, 
_lvid
, 
quŸa
, 
Ál£
, *
_pvid
));

862 
_lﬂded
 = 
Ál£
;

866 
	`CRITICAL_SECTION
(
cs
, 
_lﬂd_muãx
);

868 
	`TRACE
–
TRACE_DEBUG
, "Usög devi˚ (%s)\n", 
devi˚
);

871 
	`W_COERCE
(
_pssm
->
	`mou¡_dev
(
devi˚
, 
_vﬁ_˙t
, 
_devid
));

872 
	`TRACE
–
TRACE_DEBUG
,

874 
_vﬁ_˙t
);

877 
lvid_t
* 
vﬁume_li°
;

878 
vﬁume_˙t
;

879 
	`W_COERCE
(
_pssm
->
	`li°_vﬁumes
(
devi˚
, 
vﬁume_li°
, 
vﬁume_˙t
));

881 
	`as£π
 (
vﬁume_˙t
);

883 
_lvid
 = 
vﬁume_li°
[0];

884 
dñëe
 [] 
vﬁume_li°
;

887 
_lﬂded
 = 
åue
;

892 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

893 
íabÀFakeIO
 = 
ev
->
	`gëV¨I¡
("shore-fakeiodelay-enable",0);

894 
	`TRACE
–
TRACE_DEBUG
, "I†ÁkêI/O dñayÉ«bÀd: (%d)\n", 
íabÀFakeIO
);

895 i‡(
íabÀFakeIO
) {

896 
_pssm
->
	`íabÀ_Áke_disk_œãncy
(*
_pvid
);

899 
_pssm
->
	`dißbÀ_Áke_disk_œãncy
(*
_pvid
);

901 
ioL©ícy
 = 
ev
->
	`gëV¨I¡
("shore-fakeiodelay",0);

902 
	`TRACE
–
TRACE_DEBUG
, "I/O dñayÜ©ícy së: (%d)\n", 
ioL©ícy
);

903 
	`W_COERCE
(
_pssm
->
	`£t_Áke_disk_œãncy
(*
_pvid
,
ioL©ícy
));

909 i‡(
ss_m
::
	`c⁄fig_öfo
(
sm_c⁄fig_öfo
).
	`is_îr‹
())  (1);

910 
sh‹e
::
ssm_max_smÆl_ªc
 = 
sm_c⁄fig_öfo
.
max_smÆl_ªc
;

915 
	}
}

929 
	gSh‹eEnv
::
	$checkpoöt
()

931 
db_log_smt_t
* 
checkpoöãr
 = 
√w
 
	`db_log_smt_t
(
	`c_°r
("checkpoöãr"), 
this
);

932 
	`as£π
 (
checkpoöãr
);

936 
checkpoöãr
->
	`f‹k
();

937 
checkpoöãr
->
	`joö
();

938 
rv
 = 
checkpoöãr
->
	`rv
();

939 
	`dñëe
 (
checkpoöãr
);

940 
checkpoöãr
 = 
NULL
;

941  (
rv
);

942 
	}
}

952 
uöt_t
 
	gSh‹eEnv
::
	$gë_åx_©t
() const

954  (*&
_ív_°©s
.
_¡rx_©t
);

955 
	}
}

957 
uöt_t
 
	gSh‹eEnv
::
	$gë_åx_com
() const

959  (*&
_ív_°©s
.
_¡rx_com
);

960 
	}
}

975 
	gSh‹eEnv
::
	$£t_a˘ive_˝u_cou¡
(c⁄° 
uöt_t
 
a˘˝u˙t
)

977 
_a˘ive_˝u_cou¡
 = ( 
a˘˝u˙t
>0 ?áctcpucnt : _active_cpu_count );

978 
	}
}

995 
	gSh‹eEnv
::
	$_£t_sys_∑øms
()

998 i‡(
_max_˝u_cou¡
==0) {

999 
_max_˝u_cou¡
 = 
	`©oi
(
_sys_›ts
[
SHORE_SYS_OPTIONS
[1][0]].
	`c_°r
());

1003 
uöt
 
tmp_a˘ive_˝u_cou¡
 = 
	`©oi
(
_sys_›ts
[
SHORE_SYS_OPTIONS
[2][0]].
	`c_°r
());

1004 i‡(
tmp_a˘ive_˝u_cou¡
>
_max_˝u_cou¡
) {

1005 
_a˘ive_˝u_cou¡
 = 
_max_˝u_cou¡
;

1008 
_a˘ive_˝u_cou¡
 = 
tmp_a˘ive_˝u_cou¡
;

1010 
	`¥öt_˝us
();

1012 
	}
}

1015 
	gSh‹eEnv
::
	$¥öt_˝us
() const

1017 
	`TRACE
–
TRACE_ALWAYS
, "MaxCPU=(%d) - ActiveCPU=(%d)\n",

1018 
_max_˝u_cou¡
, 
_a˘ive_˝u_cou¡
);

1019 
	}
}

1030 
	gSh‹eEnv
::
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

1032 
˚º
 << "VÆid Sh‹ê›ti⁄†¨e: " << 
ídl
;

1033 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

1034 
	}
}

1046 
	gSh‹eEnv
::
	$ªadc⁄fig
()

1048 
°rög
 
c⁄f_fûe
;

1049 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

1050 
c⁄f_fûe
 = 
ev
->
	`gëC⁄fFûe
();

1052 
	`TRACE
–
TRACE_ALWAYS
, "Ródög c⁄fig fûê(%s)\n", 
c⁄f_fûe
.
	`c_°r
());

1054 
°rög
 
tmp
;

1055 
i
=0;

1058 
°rög
 
c⁄figsuf
 = 
ev
->
	`gëV¨
(
CONFIG_PARAM
,
CONFIG_PARAM_VALUE
);

1061 
	`as£π
 (
c⁄figsuf
.
	`com∑ª
(
CONFIG_PARAM_VALUE
)!=0);

1062 
	`TRACE
–
TRACE_ALWAYS
, "Ródög c⁄figuøti⁄ (%s)\n", 
c⁄figsuf
.
	`c_°r
());

1065 
	`TRACE
–
TRACE_DEBUG
, "Reading SYS options\n");

1066 
i
=0; i<
SHORE_NUM_SYS_OPTIONS
; i++) {

1067 
tmp
 = 
ev
->
	`gëV¨
(
SHORE_SYS_OPTIONS
[
i
][0],SHORE_SYS_OPTIONS[i][1]);

1068 
_sys_›ts
[
SHORE_SYS_OPTIONS
[
i
][0]] = 
tmp
;

1072 
	`TRACE
–
TRACE_DEBUG
, "Reading SYS-SM options\n");

1073 
i
=0; i<
SHORE_NUM_SYS_SM_OPTIONS
; i++) {

1074 
tmp
 = 
ev
->
	`gëV¨
(
SHORE_SYS_SM_OPTIONS
[
i
][1],SHORE_SYS_SM_OPTIONS[i][2]);

1075 
_sm_›ts
[
SHORE_SYS_SM_OPTIONS
[
i
][0]] = 
tmp
;

1079 
	`TRACE
–
TRACE_DEBUG
, "Reading DB-SM options\n");

1080 
i
=0; i<
SHORE_NUM_DB_SM_OPTIONS
; i++) {

1081 
tmp
 = 
ev
->
	`gëV¨
(
c⁄figsuf
 + "-" + 
SHORE_DB_SM_OPTIONS
[
i
][1],SHORE_DB_SM_OPTIONS[i][2]);

1082 
_sm_›ts
[
SHORE_DB_SM_OPTIONS
[
i
][0]] = 
tmp
;

1086 
	`TRACE
–
TRACE_DEBUG
, "Reading DB options\n");

1087 
i
=0; i<
SHORE_NUM_DB_OPTIONS
; i++) {

1088 
tmp
 = 
ev
->
	`gëV¨
(
c⁄figsuf
 + "-" + 
SHORE_DB_OPTIONS
[
i
][0],SHORE_DB_OPTIONS[i][1]);

1089 
_dev_›ts
[
SHORE_DB_OPTIONS
[
i
][0]] = 
tmp
;

1093 
	}
}

1109 
	gSh‹eEnv
::
	$ª°¨t
()

1111 
	`TRACE
–
TRACE_DEBUG
, "Re°¨tög (%s)...\n", 
_sy¢ame
.
	`c_°r
());

1112 
	`°›
();

1113 
	`c⁄f
();

1114 
	`_£t_sys_∑øms
();

1115 
	`°¨t
();

1117 
	}
}

1128 
	gSh‹eEnv
::
	$c⁄f
()

1130 
	`TRACE
–
TRACE_DEBUG
, "ShoreEnv configuration\n");

1133 
m≠
<
°rög
,°rög>::
ôî©‹
 
ôî
;

1134 
	`TRACE
–
TRACE_DEBUG
, "** SYS options\n");

1135  
ôî
 = 
_sys_›ts
.
	`begö
(); iã∏!_sys_›ts.
	`íd
(); iter++)

1136 
cout
 << "(" << 
ôî
->
fú°
 << "Ë(" << iãr->
£c⁄d
 << ")" << 
ídl
;

1138 
	`TRACE
–
TRACE_DEBUG
, "** SM options\n");

1139  
ôî
 = 
_sm_›ts
.
	`begö
(); iã∏!_sm_›ts.
	`íd
(); iter++)

1140 
cout
 << "(" << 
ôî
->
fú°
 << "Ë(" << iãr->
£c⁄d
 << ")" << 
ídl
;

1142 
	`TRACE
–
TRACE_DEBUG
, "** DB options\n");

1143  
ôî
 = 
_dev_›ts
.
	`begö
(); iã∏!_dev_›ts.
	`íd
(); iter++)

1144 
cout
 << "(" << 
ôî
->
fú°
 << "Ë(" << iãr->
£c⁄d
 << ")" << 
ídl
;

1147 
	}
}

1159 
	gSh‹eEnv
::
	$dißbÀ_Áke_disk_œãncy
()

1162 
w_rc_t
 
e
 = 
_pssm
->
	`dißbÀ_Áke_disk_œãncy
(*
_pvid
);

1163 i‡(
e
.
	`is_îr‹
()) {

1164 
	`TRACE
–
TRACE_ALWAYS
, "Problem in disabling fake IO delay [0x%x]\n",

1165 
e
.
	`îr_num
());

1168 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

1169 
ev
->
	`£tV¨I¡
("shore-fakeiodelay-enable",0);

1170 
ev
->
	`£tV¨I¡
("shore-fakeiodelay",0);

1172 
	}
}

1174 
	gSh‹eEnv
::
	$íabÀ_Áke_disk_œãncy
(c⁄° 
adñay
)

1176 i‡(!
adñay
>0)  (1);

1179 
w_rc_t
 
e
 = 
_pssm
->
	`£t_Áke_disk_œãncy
(*
_pvid
,
adñay
);

1180 i‡(
e
.
	`is_îr‹
()) {

1181 
	`TRACE
–
TRACE_ALWAYS
, "Problem in setting fake IO delay [0x%x]\n",

1182 
e
.
	`îr_num
());

1186 
e
 = 
_pssm
->
	`íabÀ_Áke_disk_œãncy
(*
_pvid
);

1187 i‡(
e
.
	`is_îr‹
()) {

1188 
	`TRACE
–
TRACE_ALWAYS
, "Problem inÉnabling fake IO delay [0x%x]\n",

1189 
e
.
	`îr_num
());

1192 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

1193 
ev
->
	`£tV¨I¡
("shore-fakeiodelay-enable",1);

1194 
ev
->
	`£tV¨I¡
("sh‹e-Ákeiodñay",
adñay
);

1196 
	}
}

1208 
	gSh‹eEnv
::
	$dump
()

1210 
	`TRACE
–
TRACE_DEBUG
, "~~~~~~~~~~~~~~~~~~~~~\n");

1211 
	`TRACE
–
TRACE_DEBUG
, "Dumping Shore Data\n");

1213 
	`TRACE
–
TRACE_ALWAYS
, "Not implemented...\n");

1215 
	`TRACE
–
TRACE_DEBUG
, "~~~~~~~~~~~~~~~~~~~~~\n");

1217 
	}
}

1229 
	gSh‹eEnv
::
	$£tAsynchCommô
(c⁄° 
boﬁ
 
bAsynch
)

1231 
_asynch_commô
 = 
bAsynch
;

1232 
	}
}

1245 
	gSh‹eEnv
::
	$_°¨t_Êushî
()

1247 
_ba£_Êushî
 = 
√w
 
	`Êushî_t
(
this
,
	`c_°r
("base-flusher"));

1248 
	`as£π
 (
_ba£_Êushî
);

1249 
_ba£_Êushî
->
	`f‹k
();

1250 
_ba£_Êushî
->
	`°¨t
();

1252 
	}
}

1263 
	gSh‹eEnv
::
	$_°›_Êushî
()

1265 
_ba£_Êushî
->
	`°›
();

1266 
_ba£_Êushî
->
	`joö
();

1268 
	}
}

1279 
	gSh‹eEnv
::
	$to_ba£_Êushî
(
Reque°
* 
¨
)

1282 
_ba£_Êushî
->
	`íqueue_toÊush
(
¨
);

1283 
	}
}

1294 
	gSh‹eEnv
::
	$db_¥öt_öô
(
num_löes
)

1296 
èbÀ_¥öãr_t
* 
db_¥öãr
 = 
√w
 
	`èbÀ_¥öãr_t
(
this
, 
num_löes
);

1297 
db_¥öãr
->
	`f‹k
();

1298 
db_¥öãr
->
	`joö
();

1299 
	`dñëe
 (
db_¥öãr
);

1300 
	}
}

1311 
	gSh‹eEnv
::
	$db_„tch_öô
()

1313 
èbÀ_„tchî_t
* 
db_„tchî
 = 
√w
 
	`èbÀ_„tchî_t
(
this
);

1314 
db_„tchî
->
	`f‹k
();

1315 
db_„tchî
->
	`joö
();

1316 
	`dñëe
 (
db_„tchî
);

1317 
	}
}

1319 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_field.cpp

32 
	~"sm/sh‹e/sh‹e_fõld.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

44 
	gfõld_desc_t
::
	$¥öt_desc
(
o°ªam
 & 
os
)

46 
os
 << "Fõld " << 
_«me
 << "\t";

47 
_ty≥
) {

48 
SQL_BIT
:

49 
os
 << "Ty≥: BIT \àsize: " << (
boﬁ
Ë<< 
ídl
;

51 
SQL_SMALLINT
:

52 
os
 << "Ty≥: SMALLINT \àsize: " << (Ë<< 
ídl
;

54 
SQL_CHAR
:

55 
os
 << "Ty≥: CHAR \àsize: " << (Ë<< 
ídl
;

57 
SQL_INT
:

58 
os
 << "Ty≥: INT \àsize: " << (Ë<< 
ídl
;

60 
SQL_FLOAT
:

61 
os
 << "Ty≥: FLOAT \àsize: " << (Ë<< 
ídl
;

63 
SQL_LONG
:

64 
os
 << "Ty≥: LONG \àsize: " << (Ë<< 
ídl
;

66 
SQL_TIME
:

67 
os
 << "Ty≥: TIMESTAMP \àsize: " << 
time°amp_t
::
	`size
(Ë<< 
ídl
;

69 
SQL_VARCHAR
:

70 
os
 << "Ty≥: VARCHAR \àsize: " << 
_size
 << 
ídl
;

72 
SQL_FIXCHAR
:

73 
os
 << "Ty≥: CHAR \àsize: " << 
_size
 << 
ídl
;

75 
SQL_NUMERIC
:

76 
os
 << "Ty≥: NUMERIC \àsize: " << 
_size
 << 
ídl
;

78 
SQL_SNUMERIC
:

79 
os
 << "Ty≥: SNUMERIC \àsize: " << 
_size
 << 
ídl
;

82 
	}
}

105 
boﬁ
 
	gfõld_vÆue_t
::
	$lﬂd_vÆue_‰om_fûe
(
if°ªam
 & 
is
,

106 c⁄° 
dñim
)

108 
	`as£π
 (
_pfõld_desc
);

110 * 
°rög
 = 
√w
 [10*
_pfõld_desc
->
	`fõldmaxsize
()];

111 
is
.
	`gë
(
°rög
, 10*
_pfõld_desc
->
	`fõldmaxsize
(), 
dñim
);

112 i‡(
	`°æí
(
°rög
) == 0) {

113 
dñëe
 [] 
°rög
;

114  
Ál£
;

117 i‡(
	`°rcmp
(
°rög
, "(null)") == 0) {

118 
	`as£π
(
_pfõld_desc
->
	`Ælow_nuŒ
());

119 
_nuŒ_Êag
 = 
åue
;

120 
dñëe
 [] 
°rög
;

121  
åue
;

124 
_nuŒ_Êag
 = 
Ál£
;

126 
_pfõld_desc
->
	`ty≥
()) {

127 
SQL_BIT
: 
_vÆue
.
_bô
 = 
	`©oi
(
°rög
); ;

128 
SQL_SMALLINT
: 
_vÆue
.
_smÆlöt
 = 
	`©oi
(
°rög
); ;

129 
SQL_CHAR
: 
_vÆue
.
_ch¨
 = 
	`©oi
(
°rög
); ;

130 
SQL_INT
: 
_vÆue
.
_öt
 = 
	`©oi
(
°rög
); ;

131 
SQL_FLOAT
: 
_vÆue
.
_Êﬂt
 = 
	`©of
(
°rög
); ;

132 
SQL_LONG
: 
_vÆue
.
_Êﬂt
 = 
	`©ﬁ
(
°rög
); ;

133 
SQL_TIME
: ;

134 
SQL_VARCHAR
: {

135 i‡(
°rög
[0] ='\"'Ë°rög[
	`°æí
(string)-1] = '\0';

136 
	`£t_v¨_°rög_vÆue
(
°rög
+1, 
	`°æí
(string)-1);

139 
SQL_FIXCHAR
: {

140 i‡(
°rög
[0] ='\"'Ë°rög[
	`°æí
(string)-1] = '\0';

141 
	`£t_fixed_°rög_vÆue
(
°rög
+1, 
	`°æí
(string)-1);

144 
SQL_NUMERIC
:

145 
SQL_SNUMERIC
:

146 
	`£t_fixed_°rög_vÆue
(
°rög
, 
	`°æí
(string));

149 
dñëe
 [] 
°rög
;

150  
åue
;

151 
	}
}

162 
	gfõld_vÆue_t
::
	$¥öt_vÆue
(
o°ªam
 & 
os
)

164 
	`as£π
 (
_pfõld_desc
);

166 i‡(
_nuŒ_Êag
) {

167 
os
 << "(null)";

171 
_pfõld_desc
->
	`ty≥
()) {

172 
SQL_BIT
:

173 
os
 <<
_vÆue
.
_bô
;

175 
SQL_SMALLINT
:

176 
os
 <<
_vÆue
.
_smÆlöt
;

178 
SQL_CHAR
:

179 
os
 <<
_vÆue
.
_ch¨
;

181 
SQL_INT
:

182 
os
 << 
_vÆue
.
_öt
;

184 
SQL_FLOAT
:

185 
os
 << 
fixed
;

186 
os
.
	`¥ecisi⁄
(2);

187 
os
 << 
_vÆue
.
_Êﬂt
;

189 
SQL_LONG
:

190 
os
 << 
_vÆue
.
_l⁄g
;

192 
SQL_TIME
:

193 
m°r
[32];

194 
_vÆue
.
_time
->
	`°rög
(
m°r
,32);

195 
os
 << 
m°r
;

197 
SQL_VARCHAR
:

198 
SQL_FIXCHAR
:

200 
uöt
 
i
=0; i<
_ªÆ_size
; i++) {

201 i‡(
_vÆue
.
_°rög
[
i
]Ë
os
 << _value._string[i];

205 
SQL_NUMERIC
:

206 
SQL_SNUMERIC
: {

207 
uöt
 
i
=0; i<
_ªÆ_size
; i++) {

208 i‡(
_vÆue
.
_°rög
[
i
]Ë
os
 << _value._string[i];

213 
	}
}

226 
	gfõld_vÆue_t
::
	$gë_debug_°r
(* &
buf
)

228 
	`as£π
 (
_pfõld_desc
);

230 
uöt_t
 
sz
 = 
_max_size
;

231 
buf
 = 
√w
 [
MAX_LINE_LENGTH
];

232 
	`mem£t
(
buf
, '\0', 
MAX_LINE_LENGTH
);

234 i‡(
_nuŒ_Êag
) {

235 
	`•rötf
(
buf
, "(null)");

239 
_pfõld_desc
->
	`ty≥
()) {

240 
SQL_BIT
:

241 
	`•rötf
(
buf
, "SQL_BIT: \t%d", 
_vÆue
.
_bô
);

243 
SQL_SMALLINT
:

244 
	`•rötf
(
buf
, "SQL_SMALLINT: \t%d", 
_vÆue
.
_smÆlöt
);

246 
SQL_CHAR
:

247 
	`•rötf
(
buf
, "SQL_CHAR: \t%d", 
_vÆue
.
_ch¨
);

249 
SQL_INT
:

250 
	`•rötf
(
buf
, "SQL_INT: \t%d", 
_vÆue
.
_öt
);

252 
SQL_FLOAT
:

253 
	`•rötf
(
buf
, "SQL_FLOAT: \t%.2f", 
_vÆue
.
_Êﬂt
);

255 
SQL_LONG
:

256 
	`•rötf
(
buf
, "SQL_LONG: \t%Œd", 
_vÆue
.
_l⁄g
);

258 
SQL_TIME
:

259 
m°r
[32];

260 
_vÆue
.
_time
->
	`°rög
(
m°r
,32);

261 
	`•rötf
(
buf
, "SQL_TIME: \t%s", 
m°r
);

263 
SQL_VARCHAR
:

264 
	`°rˇt
(
buf
, "SQL_VARCHAR: \t");

265 
	`°∫ˇt
(
buf
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

267 
SQL_FIXCHAR
:

268 
	`°rˇt
(
buf
, "SQL_CHAR: \t");

269 
	`°∫ˇt
(
buf
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

271 
SQL_NUMERIC
:

272 
	`°rˇt
(
buf
, "SQL_NUMERIC: \t");

273 
	`°∫ˇt
(
buf
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

275 
SQL_SNUMERIC
: {

276 
	`°rˇt
(
buf
, "SQL_sNUMERIC: \t");

277 
	`°∫ˇt
(
buf
, 
_vÆue
.
_°rög
, 
_ªÆ_size
);

282  (
sz
);

283 
	}
}

	@src/sm/shore/shore_file_desc.cpp

34 
	~"sm/sh‹e/sh‹e_fûe_desc.h
"

35 
	~"sm/sh‹e/sh‹e_ödex.h
"

37 
ENTER_NAMESPACE
(
sh‹e
);

49 
	gfûe_desc_t
::
	$fûe_desc_t
(c⁄° * 
«me
,

50 c⁄° 
uöt_t
 
f˙t
,

51 c⁄° 
uöt4_t
& 
≠d
)

52 : 
	`_fõld_cou¡
(
f˙t
), 
	`_vid
(
vid_t
::
nuŒ
),

53 
	`_roŸ_iid
(
°id_t
::
nuŒ
), 
	`_pd
(
≠d
), 
	$_fid
(
°id_t
::
nuŒ
)

55 
	`as£π
 (
f˙t
>0);

57 
	`±hªad_muãx_öô
(&
_fschema_muãx
, 
NULL
);

60 
	`mem£t
(
_«me
,0,
MAX_FNAME_LEN
);

61 #i‚de‡
__GNUC__


62 if(
	`°æ˝y
(
_«me
, 
«me
, 
MAX_FNAME_LEN
) >= MAX_FNAME_LEN)

64 if(
	`w_°æ˝y
(
_«me
, 
«me
, 
MAX_FNAME_LEN
) >= MAX_FNAME_LEN)

67 
throw
 "file_desc_t::_nameÅooÜong!\n";

69 
	}
}

71 
	gfûe_desc_t
::~
	$fûe_desc_t
()

73 
	`±hªad_muãx_de°roy
(&
_fschema_muãx
);

74 
	}
}

89 
w_rc_t
 
	gfûe_desc_t
::
	$föd_roŸ_iid
(
ss_m
* )

93 
vid_t
 
vid
;

94 
vid_t
* 
vid_li°
 = 
NULL
;;

95 
u_öt
 
vid_˙t
 = 0;

97 
	`as£π
 (
Ál£
);

98 
	`W_DO
(
db
->
	`li°_vﬁumes
("devi˚_«me", 
vid_li°
, 
vid_˙t
));

100 i‡(
vid_˙t
 == 0)

101  
	`RC
(
£_VOLUME_NOT_FOUND
);

103 
vid
 = 
vid_li°
[0];

104 
dñëe
 [] 
vid_li°
;

105 
_vid
 = 
vid
;

108 #w¨nög 
IP
: 
Stûl
 
nŸ
 
mu…i
-
vﬁume
 
ªady


109 
_vid
 = 1;

113 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

114  
RCOK
;

115 
	}
}

126 
w_rc_t
 
	gfûe_desc_t
::
	$föd_fid
(
ss_m
* 
db
)

129 i‡(
	`is_fid_vÆid
())

130  
RCOK
;

132 
fûe_öfo_t
 
öfo
;

133 
boﬁ
 
found
 = 
Ál£
;

134 
smsize_t
 
öfosize
 = (
fûe_öfo_t
);

136 i‡(!
	`is_roŸ_vÆid
()Ë
	`W_DO
(
	`föd_roŸ_iid
(
db
));

138 
	`W_DO
(
ss_m
::
	`föd_assoc
(
	`roŸ_iid
(),

139 
	`vec_t
(
_«me
, 
	`°æí
(_name)),

140 &
öfo
, 
öfosize
,

141 
found
));

142 
_fid
 = 
öfo
.
	`fid
();

144 i‡(!
found
) {

145 
˚º
 << "ProbÀm födögÅabÀ " << 
_«me
 << 
ídl
;

146  
	`RC
(
£_TABLE_NOT_FOUND
);

149  
RCOK
;

150 
	}
}

153 
w_rc_t
 
	gödex_desc_t
::
	$föd_fid
(
ss_m
* 
db
, 
≤um
)

155 
	`as£π
(
≤um
 >0 &&Önum < 
_∑πôi⁄_cou¡
);

156 if(
	`is_∑πôi⁄ed
()) {

158 i‡(
	`is_fid_vÆid
(
≤um
))

159  
RCOK
;

161 
fûe_öfo_t
 
öfo
;

162 
boﬁ
 
found
 = 
Ál£
;

163 
smsize_t
 
öfosize
 = (
fûe_öfo_t
);

165 i‡(!
_ba£
.
	`is_roŸ_vÆid
()Ë
	`W_DO
(_ba£.
	`föd_roŸ_iid
(
db
));

167 
tmp
[100];

168 
	`•rötf
(
tmp
, "%s_%d", 
_ba£
.
_«me
, 
≤um
);

169 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_ba£
.
	`roŸ_iid
(),

170 
	`vec_t
(
tmp
, 
	`°æí
(tmp)),

171 &
öfo
, 
öfosize
,

172 
found
));

173 
_∑πôi⁄_°ids
[
≤um
] = 
öfo
.
	`fid
();

175 i‡(!
found
) {

176 
˚º
 << "ProbÀm födög index " << 
tmp
 << 
ídl
;

177  
	`RC
(
£_TABLE_NOT_FOUND
);

180  
RCOK
;

183  
_ba£
.
	`föd_fid
(
db
);

185 
	}
}

199 
	gfûe_öfo_t
::
	$fûe_öfo_t
(c⁄° 
°id_t
& 
fid
,

200 c⁄° * 
‚ame
,

201 c⁄° 
fûe_ty≥_t
 
·y≥
)

202 : 
	`_·y≥
(
·y≥
),

203 
	`_ªc‹d_size
(
°d
::
∑ú
<,>(0,0)),

204 
	`_fú°_rid
(0, 
	`shrid_t
(0,0,0)),

205 
	$_fid
(
fid
)

208 #i‚de‡
__GNUC__


209 if(
	`°æ˝y
(
_‚ame
, 
‚ame
, 
MAX_FNAME_LEN
) >= MAX_FNAME_LEN)

211 if(
	`w_°æ˝y
(
_‚ame
, 
‚ame
, 
MAX_FNAME_LEN
) >= MAX_FNAME_LEN)

214 
throw
 "file_info_t::_fnameÅooÜong!\n";

216 
	}
}

218 
	gfûe_öfo_t
::
	$fûe_öfo_t
()

219 : 
	`_·y≥
(
FT_HEAP
),

220 
	`_ªc‹d_size
(
°d
::
∑ú
<,>(0,0)),

221 
	`_fú°_rid
(0, 
	`shrid_t
(0,0,0)),

222 
	`_cur_rid
(0, 
	$shrid_t
(0,0,0))

223 { 
	}
}

227 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_flusher.cpp

31 
	~"sm/sh‹e/sh‹e_Êushî.h
"

32 
	~"sm/sh‹e/sh‹e_ív.h
"

33 
	~"x˘.h
"

35 
ENTER_NAMESPACE
(
sh‹e
);

45 c⁄° 
uöt
 
	gsmBLOCK_SIZE
=8192;

46 c⁄° 
uöt
 
	gsmSEGMENT_SIZE
=128*
smBLOCK_SIZE
;

48 
	gÊushî_°©s_t
::
	$Êushî_°©s_t
()

49 : 
	`£rved
(0), 
	`Êushes
(0), 
	`logsize
(0), 
	`ÆªadyFlushed
(0), 
	`waôög
(0),

50 
	`åigByX˘s
(0), 
	`åigBySize
(0), 
	$åigByTimeout
(0)

54 
_log∑π_sz
 = (
ívV¨
::
	`ö°™˚
()->
	`gëSysV¨I¡
("logbufsize"))/8;

56 
_log∑π_sz
 = 
	`Êo‹
(_log∑π_sz + 
smSEGMENT_SIZE
 - 1, smSEGMENT_SIZE);

58 
	}
}

61 
	gÊushî_°©s_t
::~
	$Êushî_°©s_t
()

63 
	}
}

66 
Êushî_°©s_t
::
	$¥öt
() const

68 c⁄° 
MEGABYTE
 = 1024*1024;

70 
	`TRACE
–
TRACE_STATISTICS
, "Flushes: (%d)\n", 
Êushes
);

71 
	`TRACE
–
TRACE_STATISTICS
, "Xcts: (%d)\t(%.2f)\n",

72 
£rved
, ()£rved/()
Êushes
);

73 
	`TRACE
–
TRACE_STATISTICS
, "Logsize MBs: (%ld)\t(%.2f)\n",

74 
logsize
/
MEGABYTE
, (Óogsize/()(
Êushes
*MEGABYTE));

75 
	`TRACE
–
TRACE_STATISTICS
, "Already: (%d)\t(%.2f%%)\n",

76 
ÆªadyFlushed
, ()(100*ÆªadyFlushed)/()
£rved
);

77 
	`TRACE
–
TRACE_STATISTICS
, "Waiting: (%d)\t(%.2f)\n",

78 
waôög
, ()waôög/()
Êushes
);

80 
	`TRACE
–
TRACE_STATISTICS
, "By Xcts: (%d)\t(%.2f%%)\n",

81 
åigByX˘s
,()(100*åigByX˘s)/()
Êushes
);

82 
	`TRACE
–
TRACE_STATISTICS
, "By Size: (%d)\t(%.2f%%)\n",

83 
åigBySize
,()(100*åigBySize)/()
Êushes
);

84 
	`TRACE
–
TRACE_STATISTICS
, "By Timeout: (%d)\t(%.2f%%)\n",

85 
åigByTimeout
,()(100*åigByTimeout)/()
Êushes
);

86 
	}
}

88 
	gÊushî_°©s_t
::
	$ª£t
()

90 
£rved
 = 0;

91 
Êushes
 = 0;

93 
logsize
 = 0;

94 
ÆªadyFlushed
 = 0;

95 
waôög
 = 0;

97 
åigByX˘s
 = 0;

98 
åigBySize
 = 0;

99 
åigByTimeout
 = 0;

100 
	}
}

113 
	gÊushî_°©s_t
::
	$_log_diff
(c⁄° 
l¢_t
& 
hód
, c⁄°Ü¢_t& 
èû
)

115 i‡(
hód
.
	`hi
()==
èû
.hi()Ë (hód.
	`lo
()-tail.lo());

116 
	`as£π
(
hód
.
	`hi
()>
èû
.hi());

117 
diff
 = (
hód
.
	`hi
(Ë- 
èû
.hi()Ë* 
_log∑π_sz
;

118 i‡(
hód
.
	`lo
()>
èû
.lo()Ë (
diff
 + (head.lo()-tail.lo()));

119  (
diff
 - (
èû
.
	`lo
()-
hód
.lo()));

120 
	}
}

131 
	gÊushî_t
::
	$Êushî_t
(
Sh‹eEnv
* 
ív
,

132 
c_°r
 
äame
,

133 
¥o˚ss‹id_t
 
≠rsid
,

134 c⁄° 
u£_¶i
)

135 : 
	$ba£_w‹kî_t
(
ív
, 
äame
, 
≠rsid
, 
u£_¶i
)

137 
_px˘_toÊush_poﬁ
 = 
√w
 
	`Poﬁ
((
x˘_t
*),
FLUSHER_BUFFER_EXPECTED_SZ
);

138 
_ba£_toÊush
 = 
√w
 
	`Ba£Queue
(
_px˘_toÊush_poﬁ
.
	`gë
());

139 
	`as£π
 (
_ba£_toÊush
.
	`gë
());

140 
_ba£_toÊush
->
	`£tqueue
(
WS_COMMIT_Q
,
this
,2000,0);

142 
_px˘_Êushög_poﬁ
 = 
√w
 
	`Poﬁ
((
x˘_t
*),
FLUSHER_BUFFER_EXPECTED_SZ
);

143 
_ba£_Êushög
 = 
√w
 
	`Ba£Queue
(
_px˘_Êushög_poﬁ
.
	`gë
());

144 
	`as£π
 (
_ba£_Êushög
.
	`gë
());

145 
_ba£_Êushög
->
	`£tqueue
(
WS_COMMIT_Q
,
this
,0,0);

146 
	}
}

148 
	gÊushî_t
::~
	$Êushî_t
()

152 
	`as£π
 (
_ba£_toÊush
->
	`is_em±y
());

153 
_ba£_toÊush
.
	`d⁄e
();

154 
_px˘_toÊush_poﬁ
.
	`d⁄e
();

156 
	`as£π
 (
_ba£_Êushög
->
	`is_em±y
());

157 
_ba£_Êushög
.
	`d⁄e
();

158 
_px˘_Êushög_poﬁ
.
	`d⁄e
();

159 
	}
}

161 
	gÊushî_t
::
	$°©i°ics
()

163 
_°©s
.
	`¥öt
();

164 
_°©s
.
	`ª£t
();

166 
	}
}

183 
	gÊushî_t
::
	$_w‹k_ACTIVE_im∂
()

185 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

186 
bödög
 = 
ev
->
	`gëV¨I¡
("flusher-binding",0);

187 i‡(
bödög
==0Ë
_¥s_id
 = 
PBIND_NONE
;

188 
	`TRY_TO_BIND
(
_¥s_id
,
_is_bound
);

191 
uöt
 
maxGroupSize
 = 
ev
->
	`gëV¨I¡
("Êushî-group-size",
FLUSHER_GROUP_SIZE_THRESHOLD
);

192 
uöt
 
maxLogSize
 = 
ev
->
	`gëV¨I¡
("Êushî-log-size",
FLUSHER_LOG_SIZE_THRESHOLD
);

193 
uöt
 
maxTimeI¡îvÆu£c
 = 
ev
->
	`gëV¨I¡
("Êushî-timeout",
FLUSHER_TIME_THRESHOLD
);

195 
uöt
 
waôög
 = 0;

196 
l¢_t
 
duøbÀl¢
, 
maxl¢
;

197 
boﬁ
 
bShouldFlush
 = 
Ál£
;

198 
logWaôög
 = 0;

199 
time•ec
 
°¨t
, 
ts
;

200 c⁄° 
BILLION
 = 1000*1000*1000;

201 
boﬁ
 
bSÀïNext
 = 
Ál£
;

203 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

206 
ts
 = 
°¨t
;

207 
ts
.
tv_n£c
 +
maxTimeI¡îvÆu£c
 * 1000;

208 i‡(
ts
.
tv_n£c
 > 
BILLION
) {

209 
ts
.
tv_n£c
 -
BILLION
;

210 
ts
.
tv_£c
++;

214 
	`gë_c⁄åﬁ
(Ë=
WC_ACTIVE
) {

217 
	`£t_ws
(
WS_LOOP
);

218 
bShouldFlush
 = 
Ál£
;

221 
_ív
->
	`db
()->
	`gë_duøbÀ_l¢
(
duøbÀl¢
);

222 
maxl¢
 = 
duøbÀl¢
;

225 
	`_check_waôög
(
bSÀïNext
,
duøbÀl¢
,
maxl¢
,
waôög
);

228 i‡(
waôög
 >
maxGroupSize
) {

230 
bShouldFlush
 = 
åue
;

231 
_°©s
.
åigByX˘s
++;

234 
logWaôög
 = 
_°©s
.
	`_log_diff
(
maxl¢
,
duøbÀl¢
);

235 i‡(
logWaôög
 >
maxLogSize
) {

237 
bShouldFlush
 = 
åue
;

238 
_°©s
.
åigBySize
++;

244 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

245 i‡((
°¨t
.
tv_£c
 > 
ts
.tv_sec) ||

246 (
°¨t
.
tv_£c
 =
ts
.tv_£¯&& sèπ.
tv_n£c
 >Ås.tv_nsec)) {

247 
bShouldFlush
 = 
åue
;

248 
_°©s
.
åigByTimeout
++;

251 
ts
 = 
°¨t
;

252 
ts
.
tv_n£c
 +
maxTimeI¡îvÆu£c
 * 1000;

253 i‡(
ts
.
tv_n£c
 > 
BILLION
) {

254 
ts
.
tv_n£c
 -
BILLION
;

255 
ts
.
tv_£c
++;

262 i‡(
waôög
Ë
_ív
->
	`db
()->
	`sync_log
();

263 
bSÀïNext
 = 
åue
;

268 i‡(
	`gë_c⁄åﬁ
(Ë!
WC_ACTIVE
) (0);

275 i‡(
bShouldFlush
) {

276 
_°©s
.
Êushes
++;

277 
_°©s
.
waôög
 += waiting;

278 
_°©s
.
logsize
 +
logWaôög
;

279 
_ív
->
	`db
()->
	`sync_log
();

281 
waôög
 = 0;

282 
logWaôög
 = 0;

289 
_ív
->
	`db
()->
	`gë_duøbÀ_l¢
(
duøbÀl¢
);

290 
	`_move_‰om_Êushög
(
duøbÀl¢
);

293 
	}
}

306 
	gÊushî_t
::
	$_check_waôög
(
boﬁ
& 
bSÀïNext
,

307 c⁄° 
l¢_t
& 
duøbÀl¢
,

308 
l¢_t
& 
maxl¢
,

309 
uöt
& 
waôög
)

311 
åx_ªque°_t
* 
¥eq
 = 
NULL
;

312 
l¢_t
 
x˘l¢
;

315 (!
_ba£_toÊush
->
	`is_em±y
()Ë|| (
bSÀïNext
)) {

318 
¥eq
 = 
_ba£_toÊush
->
	`p›
();

321 i‡(
¥eq
) {

322 
x˘l¢
 = 
¥eq
->
	`my_œ°_l¢
();

324 
	`TRACE
–
TRACE_TRX_FLOW
,

326 
¥eq
->
	`tid
().
	`gë_lo
(), 
x˘l¢
.
	`lo
(), 
maxl¢
.lo());

330 i‡(
duøbÀl¢
 > 
x˘l¢
) {

331 
_°©s
.
ÆªadyFlushed
++;

332 
¥eq
->
	`nŸify_˛õ¡
();

333 
_ív
->
	`öc_åx_com
();

334 
_ív
->
_ªque°_poﬁ
.
	`de°roy
(
¥eq
);

339 
maxl¢
 = 
°d
::
	`max
(maxl¢,
x˘l¢
);

340 
_ba£_Êushög
->
	`push
(
¥eq
,
Ál£
);

341 
waôög
++;

345 
bSÀïNext
 = 
Ál£
;

346 
_°©s
.
£rved
++;

350 
	}
}

364 
	gÊushî_t
::
	$_move_‰om_Êushög
(c⁄° 
l¢_t
& 
duøbÀl¢
)

366 
åx_ªque°_t
* 
¥eq
 = 
NULL
;

367 
l¢_t
 
x˘l¢
;

369 !
_ba£_Êushög
->
	`is_em±y
()) {

370 
¥eq
 = 
_ba£_Êushög
->
	`p›
();

371 
x˘l¢
 = 
¥eq
->
	`my_œ°_l¢
();

372 
	`as£π
 (
x˘l¢
 < 
duøbÀl¢
);

373 
¥eq
->
	`nŸify_˛õ¡
();

374 
_ív
->
	`öc_åx_com
();

375 
_ív
->
_ªque°_poﬁ
.
	`de°roy
(
¥eq
);

379 
	}
}

393 
	gÊushî_t
::
	$_¥e_STOP_im∂
()

395 
uöt
 
a·îSt›
 = 0;

396 
åx_ªque°_t
* 
¥eq
 = 
NULL
;

399 !
_ba£_Êushög
->
	`is_em±y
()) {

400 ++
a·îSt›
;

401 
¥eq
 = 
_ba£_Êushög
->
	`p›
();

402 
¥eq
->
	`nŸify_˛õ¡
();

403 
_ív
->
_ªque°_poﬁ
.
	`de°roy
(
¥eq
);

406 !
_ba£_toÊush
->
	`is_em±y
()) {

407 ++
a·îSt›
;

408 
¥eq
 = 
_ba£_toÊush
->
	`p›
();

409 
¥eq
->
	`nŸify_˛õ¡
();

410 
_ív
->
_ªque°_poﬁ
.
	`de°roy
(
¥eq
);

413 i‡(
a·îSt›
>0)

414 
	`TRACE
–
TRACE_ALWAYS
,

416 
a·îSt›
);

419 
	}
}

422 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_helper_loader.cpp

31 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

32 
	~"sm/sh‹e/sh‹e_ív.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

47 
	gdb_öô_smt_t
::
	$db_öô_smt_t
(
c_°r
 
äame
, 
Sh‹eEnv
* 
db
)

48 : 
	`thªad_t
(
äame
), 
	$_ív
(
db
)

50 
	`as£π
 (
_ív
);

51 
	}
}

54 
	gdb_öô_smt_t
::~
	$db_öô_smt_t
()

56 
	}
}

58 
db_öô_smt_t
::
	$w‹k
()

60 i‡(!
_ív
->
	`is_öôülized
()) {

61 
_rv
 = 
_ív
->
	`öô
();

62 i‡(
_rv
) {

65 
	`TRACE
–
TRACE_ALWAYS
, "Couldn't initialize Shore...\n");

71 
	`TRACE
–
TRACE_DEBUG
, "Shore initialized...\n");

72 
_rv
 = 0;

73 
	}
}

86 
	gdb_öô_smt_t
::
	$rv
()

88  (
_rv
);

89 
	}
}

92 
	gdb_log_smt_t
::
	$w‹k
()

94 
	`as£π
 (
_ív
);

95 
_rv
 = 0;

96 
	}
}

99 
	gdb_lﬂd_smt_t
::
	$w‹k
()

101 
_rc
 = 
_ív
->
	`lﬂdd©a
();

102 
_rv
 = 0;

103 
	}
}

107 
	g˛o£_smt_t
::
	$w‹k
()

109 
	`TRACE
–
TRACE_ALWAYS
, "Closing Shore...\n");

110 i‡(
_ív
 !
NULL
)

112 
_ív
->
	`˛o£
();

113 
	`dñëe
 (
_ív
);

114 
_ív
 = 
NULL
;

116 
	}
}

121 
	gdump_smt_t
::
	$w‹k
()

123 
	`as£π
 (
_ív
);

124 
	`TRACE
–
TRACE_DEBUG
, "Dumping...\n");

125 
_ív
->
	`dump
();

126 
_rv
 = 0;

127 
	}
}

140 
	gab‹t_smt_t
::
ab‹t_smt_t
(
c_°r
 
äame
,

141 
Sh‹eEnv
* 
ív
,

142 
ve˘‹
<
x˘_t
*>& 
tﬂb‹t
)

143 : 
thªad_t
(
äame
), 
	$_ív
(
ív
)

145 
	`as£π
(
ív
);

146 
_tﬂb‹t
 = &
tﬂb‹t
;

147 
	}
}

149 
	gab‹t_smt_t
::~
	$ab‹t_smt_t
()

151 
	}
}

153 
ab‹t_smt_t
::
	$w‹k
()

155 
w_rc_t
 
r
 = 
RCOK
;

156 
x˘_t
* 
vi˘im
 = 
NULL
;

157 
	`me
()->
	`Æloc_sdesc_ˇche
();

158 
ve˘‹
<
x˘_t
*>::
ôî©‹
 
ô
 = 
_tﬂb‹t
->
	`begö
();

159 
ô
 !
_tﬂb‹t
->
	`íd
(); ++it) {

161 
vi˘im
 = *
ô
;

162 
	`as£π
 (
vi˘im
);

163 
_ív
->
	`db
()->
	`©èch_x˘
(
vi˘im
);

164 
r
 = 
_ív
->
	`db
()->
	`ab‹t_x˘
();

165 i‡(
r
.
	`is_îr‹
()) {

166 
	`TRACE
–
TRACE_ALWAYS
, "ProbÀmáb‹tög (%x)\n", *
ô
);

169 
_ab‹ãd
++;

172 
	`me
()->
	`‰ì_sdesc_ˇche
();

173 
	}
}

	@src/sm/shore/shore_index.cpp

32 
	~"sm/sh‹e/sh‹e_ödex.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

44 
	gödex_desc_t
::
	$ödex_desc_t
(c⁄° * 
«me
, c⁄° 
fõld˙t
,

45 
∑πôi⁄s
, c⁄° 
uöt
* 
fõlds
,

46 
boﬁ
 
unique
, boﬁ 
¥im¨y
,

47 c⁄° 
uöt4_t
& 
pd
,

48 
boﬁ
 
rm≠hﬁdî
)

49 : 
	`_ba£
(
«me
, 
fõld˙t
, 
pd
),

50 
	`_unique
(
unique
), 
	`_¥im¨y
(
¥im¨y
),

51 
	`_rm≠hﬁdî
(
rm≠hﬁdî
),

52 
	`_√xt
(
NULL
), 
	`_maxkeysize
(0),

53 
	`_∑πôi⁄_cou¡
((
∑πôi⁄s
 > 0)?Ö¨tôi⁄†: 1), 
	$_∑πôi⁄_°ids
(0)

56 
_key
 = 
√w
 
uöt
[
_ba£
.
_fõld_cou¡
];

57 
uöt_t
 
i
=0; i<
_ba£
.
_fõld_cou¡
; i++Ë
_key
[i] = 
fõlds
[i];

59 
	`mem£t
(
_keydesc
, 0, 
MAX_KEYDESC_LEN
);

62 if(
	`is_∑πôi⁄ed
()) {

63 
_∑πôi⁄_°ids
 = 
√w
 
°id_t
[
_∑πôi⁄_cou¡
];

64 
i
=0; i < 
_∑πôi⁄_cou¡
; i++)

65 
_∑πôi⁄_°ids
[
i
] = 
°id_t
::
nuŒ
;

72 
_mr
 = (
pd
 & (
PD_MRBT_NORMAL
 | 
PD_MRBT_PART
 | 
PD_MRBT_LEAF
));

81 
_nﬁock
 = (
pd
 & 
PD_NOLOCK
);

90 
_œtchÀss
 = (
pd
 & 
PD_NOLATCH
);

100 
	`w_as£π0
–(!
_rm≠hﬁdî
Ë|| (
_mr
 && !
	`is_∑πôi⁄ed
()));

112 
	}
}

115 
	gödex_desc_t
::~
	$ödex_desc_t
()

117 i‡(
_key
) {

118 
dñëe
 [] 
_key
;

119 
_key
 = 
NULL
;

123 i‡(
_√xt
) {

124 
dñëe
 
_√xt
;

125 
_√xt
 = 
NULL
;

128 if(
_∑πôi⁄_°ids
) {

129 
dñëe
 [] 
_∑πôi⁄_°ids
;

130 
_∑πôi⁄_°ids
 = 
NULL
;

132 
	}
}

144 
	gödex_desc_t
::
	$£t_fid
(c⁄° 
≤um
, 
°id_t
 c⁄° &
fid
)

146 
	`as£π
(
≤um
 >0 &&Önum < 
_∑πôi⁄_cou¡
);

147 i‡(
	`is_∑πôi⁄ed
()) {

148 
_∑πôi⁄_°ids
[
≤um
] = 
fid
;

151 
_ba£
.
	`£t_fid
(
fid
);

153 
	}
}

163 
ödex_desc_t
* 
	gödex_desc_t
::
	$√xt
() const

165  
_√xt
;

166 
	}
}

170 
	gödex_desc_t
::
	$ödex_cou¡
() const

172  (
_√xt
 ? _√xt->
	`ödex_cou¡
()+1 : 1);

173 
	}
}

177 
	gödex_desc_t
::
	$ö£π
(
ödex_desc_t
* 
√w_node
)

179 
√w_node
->
_√xt
 = _next;

180 
_√xt
 = 
√w_node
;

181 
	}
}

185 
ödex_desc_t
* 
	gödex_desc_t
::
	$föd_by_«me
(c⁄° * 
«me
)

187 i‡(
	`°rcmp
(
«me
, 
_ba£
.
_«me
Ë=0Ë (
this
);

188 i‡(
_√xt
Ë _√xt->
	`föd_by_«me
(
«me
);

189  (
NULL
);

190 
	}
}

192 
	gödex_desc_t
::
	$key_ödex
(c⁄° 
uöt_t
 
ödex
) const

194 
	`as£π
 (
ödex
 < 
_ba£
.
_fõld_cou¡
);

195  (
_key
[
ödex
]);

196 
	}
}

207 
	gödex_desc_t
::
	$¥öt_desc
(
o°ªam
& 
os
)

209 
os
 << "Schem®f‹ index " << 
	`«me
(Ë<< 
ídl
;

210 
uöt
 
fc
 = 
	`fõld_cou¡
();

211 
os
 << "Numî o‡fõlds: " << 
fc
 << 
ídl
;

212 
uöt_t
 
i
=0; i< 
fc
; i++) {

213 
os
 << 
_keydesc
[
i
] << "|";

215 
os
 << 
ídl
;

216 
	}
}

219 
	~<s°ªam
>

220 c⁄°* 
	$db_¥ëty_¥öt
(
ödex_desc_t
 c⁄°* 
±desc
, , const* )

222 
d©a
[1024];

223 
°d
::
°rög°ªam
 
	`öout
(
d©a
, såög°ªam::
ö
 | såög°ªam::
out
);

225 ((
ödex_desc_t
*)
±desc
)->
	`¥öt_desc
(
öout
);

226 
öout
 << 
°d
::
íds
;

227  
d©a
;

228 
	}
}

	@src/sm/shore/shore_iter.cpp

32 
	~"sm/sh‹e/sh‹e_ôî.h
"

34 
ENTER_NAMESPACE
(
sh‹e
);

43 
	gsim∂e_èbÀ_ôî_t
::
	$sim∂e_èbÀ_ôî_t
(
ss_m
* 
db
, 
fûe_desc_t
* 
fûe
,

44 
lock_mode_t
 
Æm
)

45 : 
	`_db
(
db
), 
	`_›íed
(
Ál£
), 
	`_fûe
(
fûe
), 
	$_lm
(
Æm
)

47 
	`as£π
 (
_db
);

48 
	}
}

50 
	gsim∂e_èbÀ_ôî_t
::~
	$sim∂e_èbÀ_ôî_t
()

52 
	`˛o£_sˇn
();

53 
	}
}

56 
w_rc_t
 
	gsim∂e_èbÀ_ôî_t
::
	$›í_sˇn
()

58 i‡(!
_›íed
) {

59 
	`as£π
 (
_db
);

60 
_sˇ¬î
 = 
√w
 
	`sˇn_fûe_i
(
_fûe
->
	`fid
(),

61 
ss_m
::
t_cc_ªc‹d
,

62 
Ál£
, 
_lm
);

63 
_›íed
 = 
åue
;

65  (
RCOK
);

66 
	}
}

69 
w_rc_t
 
	gsim∂e_èbÀ_ôî_t
::
	$√xt
(
boﬁ
& 
eof
, 
pö_i
*& 
h™dÀ
)

71 i‡(!
_›íed
Ë
	`›í_sˇn
();

72 
	`W_DO
(
_sˇ¬î
->
	`√xt
(
h™dÀ
, 0, 
eof
));

73  (
RCOK
);

74 
	}
}

77 
w_rc_t
 
	gsim∂e_èbÀ_ôî_t
::
	$˛o£_sˇn
()

79 
_›íed
 = 
Ál£
;

80  (
RCOK
);

81 
	}
}

84 
pö_i
* 
	gsim∂e_èbÀ_ôî_t
::
	$curs‹
()

86 
pö_i
 *
rvÆ
;

87 
boﬁ
 
eof
;

88 
_sˇ¬î
->
	`curs‹
(
rvÆ
, 
eof
);

89  (
eof
? 
NULL
 : 
rvÆ
);

90 
	}
}

100 
	gsim∂e_ödex_ôî_t
::
	$sim∂e_ödex_ôî_t
(
ss_m
* 
db
, 
ödex_desc_t
* 
ödex
,

101 
lock_mode_t
 
Æm
)

102 : 
	`_db
(
db
), 
	`_›íed
(
Ál£
), 
	`_idx
(
ödex
), 
	$_lm
(
Æm
)

104 
	`as£π
 (
_db
);

105 
	}
}

107 
	gsim∂e_ödex_ôî_t
::~
	$sim∂e_ödex_ôî_t
()

109 
	`˛o£_sˇn
();

110 
	}
}

120 
w_rc_t
 
	gsim∂e_ödex_ôî_t
::
	$›í_sˇn
(
uöt
 
≤um
,

121 
sˇn_ödex_i
::
cmp_t
 
c1
, c⁄° 
cvec_t
& 
bound1
,

122 
sˇn_ödex_i
::
cmp_t
 
c2
, c⁄° 
cvec_t
& 
bound2
)

124 
_≤um
 = 
≤um
;

126 i‡(!
_›íed
) {

132 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_im
;

133 i‡(
_lm
==
NL
Ë
cc
 = 
ss_m
::
t_cc_n⁄e
;

136 
_sˇ¬î
 = 
√w
 
	`sˇn_ödex_i
(
_idx
->
	`fid
(
_≤um
),

137 
c1
, 
bound1
, 
c2
, 
bound2
,

138 
Ál£
, 
cc
,

139 
_lm
);

140 
_›íed
 = 
åue
;

142  (
RCOK
);

143 
	}
}

146 
w_rc_t
 
	gsim∂e_ödex_ôî_t
::
	$√xt
(
boﬁ
& 
eof
, 
rid_t
& 
rid
)

148 
	`as£π
 (
_›íed
);

150 
	`W_DO
(
_sˇ¬î
->
	`√xt
(
eof
));

152 i‡(!
eof
) {

153 
rid_t
 
tm¥id
;

154 
vec_t
 
	`ªc‹d
(&
tm¥id
, (
rid_t
));

155 
smsize_t
 
ñí
 = (
rid_t
);

157 
vec_t
 
tmpvec
;

158 
smsize_t
 
tmpsz
=0;

160 
	`W_DO
(
_sˇ¬î
->
	`cuº
(&
tmpvec
, 
tmpsz
, &
ªc‹d
, 
ñí
));

161 
rid
 = 
tm¥id
;

163  (
RCOK
);

164 
	}
}

167 
w_rc_t
 
	gsim∂e_ödex_ôî_t
::
	$˛o£_sˇn
()

169 
_›íed
 = 
Ál£
;

170  (
RCOK
);

171 
	}
}

174 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_reqs.cpp

32 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

35 
ENTER_NAMESPACE
(
sh‹e
);

46 
	gba£_ªque°_t
::
	$nŸify_˛õ¡
()

49 
c⁄dex
* 
pc⁄dex
 = 
_ªsu…
.
	`gë_nŸify
();

50 i‡(
pc⁄dex
) {

51 
	`TRACE
–
TRACE_TRX_FLOW
, "Xct (%d)Çotifying client (%x)\n",

52 
_tid
.
	`gë_lo
(), 
pc⁄dex
);

53 
_ªsu…
.
	`£t_nŸify
(
NULL
);

54 
pc⁄dex
->
	`sig«l
();

57 
	`TRACE
–
TRACE_TRX_FLOW
, "Xct (%d)ÇotÇotifying client\n",

58 
_tid
.
	`gë_lo
());

60 
	}
}

63 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_row.cpp

32 
	~"sm/sh‹e/sh‹e_row.h
"

33 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

36 
ENTER_NAMESPACE
(
sh‹e
);

47 
	gªp_row_t
::
	$ªp_row_t
()

48 : 
	`_de°
(
NULL
), 
	`_bufsz
(0), 
	$_±s
(
NULL
)

49 { 
	}
}

51 
	gªp_row_t
::
	$ªp_row_t
(
©s_ch¨_t
* 
≠ts
)

52 : 
	`_de°
(
NULL
), 
	`_bufsz
(0), 
	$_±s
(
≠ts
)

54 
	`as£π
 (
_±s
);

55 
	}
}

57 
	gªp_row_t
::~
	$ªp_row_t
()

59 i‡(
_de°
) {

60 
_±s
->
	`de°roy
(
_de°
);

61 
_de°
 = 
NULL
;

63 
	}
}

74 
	gªp_row_t
::
	$£t
(c⁄° 
uöt
 
nsz
)

76 i‡((!
_de°
Ë|| (
_bufsz
 < 
nsz
)) {

78 * 
tmp
 = 
_de°
;

81 
	`as£π
 (
_±s
);

84 
	`w_as£π1
(
nsz
 <
_±s
->
	`nbyãs
());

85 
_de°
 = (*)
_±s
->
	`acquúe
();

86 
	`as£π
 (
_de°
);

88 i‡(
tmp
) {

90 
_±s
->
	`de°roy
(
tmp
);

91 
tmp
 = 
NULL
;

93 
_bufsz
 = 
_±s
->
	`nbyãs
();

97 
	`mem£t
 (
_de°
, 0, 
nsz
);

98 
	}
}

109 
	gªp_row_t
::
	$£t_ts
(
©s_ch¨_t
* 
≠ts
, c⁄° 
uöt
 
nsz
)

111 
	`as£π
(
≠ts
);

112 
_±s
 = 
≠ts
;

113 
	`£t
(
nsz
);

114 
	}
}

128 
	gèbÀ_row_t
::
	$èbÀ_row_t
()

129 : 
	`_±abÀ
(
NULL
),

130 
	`_fõld_˙t
(0), 
	`_is_£tup
(
Ál£
),

131 
	`_rid
(
rid_t
::
nuŒ
), 
	`_pvÆues
(
NULL
),

132 
	`_fixed_off£t
(0),
	`_v¨_¶Ÿ_off£t
(0),
	`_v¨_off£t
(0),
	`_nuŒ_cou¡
(0),

133 
	`_ªp
(
NULL
), 
	$_ªp_key
(
NULL
)

135 
	}
}

137 
	gèbÀ_row_t
::~
	$èbÀ_row_t
()

139 
	`‰ìvÆues
();

140 
	}
}

154 
	gèbÀ_row_t
::
	$£tup
(
èbÀ_desc_t
* 
±d
)

156 
	`as£π
 (
±d
);

159 i‡((
_±abÀ
 =
±d
Ë&& (
_pvÆues
 !
NULL
Ë&& (
_is_£tup
)) {

160 
	`ª£t
();

165 
_±abÀ
 = 
±d
;

166 
_fõld_˙t
 = 
±d
->
	`fõld_cou¡
();

167 
	`as£π
 (
_fõld_˙t
>0);

168 
_pvÆues
 = 
√w
 
fõld_vÆue_t
[
_fõld_˙t
];

170 
uöt
 
v¨_cou¡
 = 0;

171 
uöt
 
fixed_size
 = 0;

174 
uöt
 
i
=0; i<
_fõld_˙t
; i++) {

175 
_pvÆues
[
i
].
	`£tup
(
±d
->
	`desc
(i));

178 i‡(
_pvÆues
[
i
].
	`is_v¨übÀ_Àngth
())

179 
v¨_cou¡
++;

181 
fixed_size
 +
_pvÆues
[
i
].
	`maxsize
();

184 i‡(
_pvÆues
[
i
].
	`fõld_desc
()->
	`Ælow_nuŒ
())

185 
_nuŒ_cou¡
++;

189 
_fixed_off£t
 = 0;

190 i‡(
_nuŒ_cou¡
Ë
_fixed_off£t
 = ((_null_count-1) >> 3) + 1;

192 
_v¨_¶Ÿ_off£t
 = 
_fixed_off£t
 + 
fixed_size
;

194 
_v¨_off£t
 = 
_v¨_¶Ÿ_off£t
 + (
off£t_t
)*
v¨_cou¡
;

196 
_is_£tup
 = 
åue
;

198 
	}
}

209 
uöt
 
	gèbÀ_row_t
::
	$size
() const

211 
	`as£π
 (
_is_£tup
);

213 
uöt
 
size
 = 0;

222 
uöt
 
i
=0; i<
_fõld_˙t
; i++) {

223 i‡(
_pvÆues
[
i
].
_pfõld_desc
->
	`Ælow_nuŒ
()) {

224 i‡(
_pvÆues
[
i
].
	`is_nuŒ
()) ;

226 i‡(
_pvÆues
[
i
].
	`is_v¨übÀ_Àngth
()) {

227 
size
 +
_pvÆues
[
i
].
	`ªÆsize
();

228 
size
 +(
off£t_t
);

230 
size
 +
_pvÆues
[
i
].
	`maxsize
();

232 i‡(
_nuŒ_cou¡
Ë
size
 += (_null_count >> 3) + 1;

233  (
size
);

234 
	}
}

246 
	gèbÀ_row_t
::
	$¥öt_vÆues
(
o°ªam
& 
os
)

248 
	`as£π
 (
_is_£tup
);

250 
uöt
 
i
=0; i<
_fõld_˙t
; i++) {

251 
_pvÆues
[
i
].
	`¥öt_vÆue
(
os
);

252 i‡(
i
 !
_fõld_˙t
-1Ë
os
 << 
DELIM_CHAR
;

254 
os
 << 
ROWEND_CHAR
 << 
ídl
;

255 
	}
}

260 
	gèbÀ_row_t
::
	$¥öt_tu∂e
()

262 
	`as£π
 (
_is_£tup
);

264 * 
sbuf
 = 
NULL
;

265 
sz
 = 0;

266 
uöt
 
i
=0; i<
_fõld_˙t
; i++) {

267 
sz
 = 
_pvÆues
[
i
].
	`gë_debug_°r
(
sbuf
);

268 i‡(
sbuf
) {

269 
	`TRACE
–
TRACE_TRX_FLOW
, "%d. %†(%d)\n", 
i
, 
sbuf
, 
sz
);

270 
dñëe
 [] 
sbuf
;

271 
sbuf
 = 
NULL
;

274 
	}
}

278 
	gèbÀ_row_t
::
	$¥öt_tu∂e_no_åacög
()

280 
	`as£π
 (
_is_£tup
);

282 * 
sbuf
 = 
NULL
;

283 
sz
 = 0;

284 
uöt
 
i
=0; i<
_fõld_˙t
; i++) {

285 
sz
 = 
_pvÆues
[
i
].
	`gë_debug_°r
(
sbuf
);

286 i‡(
sbuf
) {

287 
	`Ârötf
–
°dîr
, "%d. %†(%d)\n", 
i
, 
sbuf
, 
sz
);

288 
dñëe
 [] 
sbuf
;

289 
sbuf
 = 
NULL
;

292 
	}
}

295 
EXIT_NAMESPACE
(
sh‹e
);

299 
	~<s°ªam
>

300 c⁄°* 
	$db_¥ëty_¥öt
(
sh‹e
::
èbÀ_row_t
 c⁄°* 
ªc
, , const* )

302 
d©a
[1024];

303 
°d
::
°rög°ªam
 
	`öout
(
d©a
,°rög°ªam::
ö
 | såög°ªam::
out
);

305 ((
sh‹e
::
èbÀ_row_t
*)
ªc
)->
	`¥öt_vÆues
(
öout
);

306 
öout
 << 
°d
::
íds
;

307  
d©a
;

308 
	}
}

	@src/sm/shore/shore_shell.cpp

31 
	~"sm/sh‹e/sh‹e_shñl.h
"

32 
	~"k_deföes.h
"

35 
ENTER_NAMESPACE
(
sh‹e
);

39 "C" 
	$Æ¨m_h™dÀr
(
sig
)

41 if(
sig
 =
SIGALRM
) {

42 if(
_g_sh‹e_ív
->
	`gë_mósuª
(Ë!
MST_DONE
) {

43 
	`TRACE
–
TRACE_ALWAYS
, "Start Load Imbalance\n");

44 
_g_sh‹e_ív
->
	`°¨t_lﬂd_imbÆ™˚
();

47 
_g_sh‹e_ív
->
	`£t_mósuª
(
MST_DONE
);

49 
	}
}

51 
boﬁ
 vﬁ©ûê
_g_ˇn˚Àd
 = 
Ál£
;

53 
	g_theSF
 = 
DF_SF
;

59 
	gsh‹e_shñl_t
::
	$sh‹e_shñl_t
(c⁄° * 
¥om±
,

60 c⁄° 
boﬁ
 
√tmode
,

61 c⁄° 
√ç‹t
,

62 c⁄° 
boﬁ
 
öputfûemode
,

63 c⁄° 
°rög
 
öputfûe
,

64 
¥o˚ss‹id_t
 
a˝u°¨t
)

65 : 
	`shñl_t
(
¥om±
,
åue
,
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
),

66 
	`_ív
(
NULL
),

67 
	`_°¨t_¥s_id
(
a˝u°¨t
), 
	$_cuºít_¥s_id
(
a˝u°¨t
)

70 
siga˘i⁄
 
ß
;

71 
siga˘i⁄
 
ß_ﬁd
;

72 
ß
.
ß_Êags
 = 0;

73 
	`sigem±y£t
(&
ß
.
ß_mask
);

74 
ß
.
ß_h™dÀr
 = &
Æ¨m_h™dÀr
;

75 if(
	`siga˘i⁄
(
SIGALRM
, &
ß
, &
ß_ﬁd
) < 0) {

76 
	`exô
(1);

78 
	}
}

80 
	gsh‹e_shñl_t
::~
	$sh‹e_shñl_t
()

82 i‡(
_ív
) {

83 
_ív
->
	`°›
();

84 
˛o£_smt_t
* 
˛t
 = 
√w
 
	`˛o£_smt_t
(
_ív
, 
	`c_°r
("clt"));

85 
	`w_as£π0
 (
˛t
);

86 
˛t
->
	`f‹k
();

87 
˛t
->
	`joö
();

88 
rv
 = 
˛t
->
_rv
;

89 i‡(
rv
) {

90 
	`Ârötf
–
°dîr
, "Error in closingÅhread...\n");

92 
	`dñëe
 (
˛t
);

93 
˛t
 = 
NULL
;

95 
	}
}

110 
	gsh‹e_shñl_t
::
	$¥öt_sup_åxs
() const

112 
	`TRACE
–
TRACE_ALWAYS
, "Supported TRXs\n");

113 
m≠SupTrxsC⁄°It
 
cô

_sup_åxs
.
	`begö
();

114 
cô
 !
_sup_åxs
.
	`íd
(); cit++)

115 
	`TRACE
–
TRACE_ALWAYS
, "%d -> %s\n", 
cô
->
fú°
, cô->
£c⁄d
.
	`c_°r
());

116 
	}
}

118 c⁄° * 
	gsh‹e_shñl_t
::
	$å™¶©e_åx
(c⁄° 
iSñe˘edTrx
) const

120 
m≠SupTrxsC⁄°It
 
cô
 = 
_sup_åxs
.
	`föd
(
iSñe˘edTrx
);

121 i‡(
cô
 !
_sup_åxs
.
	`íd
())

122  (
cô
->
£c⁄d
.
	`c_°r
());

124 
	}
}

129 
	gsh‹e_shñl_t
::
	$¥öt_sup_bp
()

131 
	`TRACE
–
TRACE_ALWAYS
, "Supported Binding Policies\n");

132 
m≠BödPﬁsIt
 
cô

_sup_bps
.
	`begö
();

133 
cô
 !
_sup_bps
.
	`íd
(); cit++)

134 
	`TRACE
–
TRACE_ALWAYS
, "%d -> %s\n", 
cô
->
fú°
, cô->
£c⁄d
.
	`c_°r
());

135 
	}
}

137 c⁄° * 
	gsh‹e_shñl_t
::
	$å™¶©e_bp
(c⁄° 
eBödögTy≥
 
abt
)

139 
m≠BödPﬁsIt
 
ô
 = 
_sup_bps
.
	`föd
(
abt
);

140 i‡(
ô
 !
_sup_bps
.
	`íd
())

141  (
ô
->
£c⁄d
.
	`c_°r
());

143 
	}
}

161 
¥o˚ss‹id_t
 
	gsh‹e_shñl_t
::
	$√xt_˝u
(c⁄° 
eBödögTy≥
 
abt
,

162 c⁄° 
¥o˚ss‹id_t
 
≠rd
)

164 
¥o˚ss‹id_t
 
√xçrs
;

165 
abt
) {

166 (
BT_NONE
):

167  (
PBIND_NONE
);

168 (
BT_NEXT
):

169 
√xçrs
 = ((
≠rd
+1Ë% 
_ív
->
	`gë_a˘ive_˝u_cou¡
());

170  (
√xçrs
);

171 (
BT_SPREAD
):

172 c⁄° 
uöt
 
NIAGARA_II_STEP
 = 8;

173 
√xçrs
 = ((
≠rd
+
NIAGARA_II_STEP
Ë% 
_ív
->
	`gë_a˘ive_˝u_cou¡
());

174  (
√xçrs
);

176 
	`as£π
 (0);

177  (
√xçrs
);

178 
	}
}

189 
	gsh‹e_shñl_t
::
	$¥öt_MEASURE_öfo
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

190 c⁄° 
iNumOfThªads
, c⁄° 
iDuøti⁄
,

191 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

192 c⁄° 
eBödögTy≥
 
abt
)

195 
	`TRACE
–
TRACE_ALWAYS
, "\n" \

203 
iQuîõdSF
, (
iS¥ód
 ? "Yes" : "No"),

204 
	`å™¶©e_bp
(
abt
),

205 
iNumOfThªads
, 
iDuøti⁄
, 
	`å™¶©e_åx
(
iSñe˘edTrx
),

206 
iIãøti⁄s
);

207 
	}
}

210 
	gsh‹e_shñl_t
::
	$¥öt_TEST_öfo
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

211 c⁄° 
iNumOfThªads
, c⁄° 
iNumOfTrxs
,

212 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

213 c⁄° 
eBödögTy≥
 
abt
)

216 
	`TRACE
–
TRACE_ALWAYS
, "\n"

224 
iQuîõdSF
, (
iS¥ód
 ? "Yes" : "No"),

225 
	`å™¶©e_bp
(
abt
),

226 
iNumOfThªads
, 
iNumOfTrxs
, 
	`å™¶©e_åx
(
iSñe˘edTrx
),

227 
iIãøti⁄s
);

228 
	}
}

239 
	gsh‹e_shñl_t
::
	$¥öt_ußge
(c⁄° * 
comm™d
)

241 
	`as£π
 (
comm™d
);

243 
	`TRACE
–
TRACE_ALWAYS
, "\n\nSupported commands: TRXS/LOAD/WARMUP/TEST/MEASURE\n\n" );

245 
	`TRACE
–
TRACE_ALWAYS
, "WARMUP Usage:\n\n" \

253 
	`TRACE
–
TRACE_ALWAYS
, "TEST Usage:\n\n" \

264 
	`TRACE
–
TRACE_ALWAYS
, "MEASURE Usage:\n\n" \

275 
	`TRACE
–
TRACE_ALWAYS
, "\n\nCuºíéy Sˇlög fa˘‹ = (%d)\n", 
_theSF
);

277 
	`¥öt_sup_åxs
();

278 
	`¥öt_sup_bp
();

280  (
SHELL_NEXT_CONTINUE
);

281 
	}
}

294 
	gsh‹e_shñl_t
::
	$¥e_¥o˚ss_cmd
()

296 
_g_ˇn˚Àd
 = 
Ál£
;

298 
_cuºít_¥s_id
 = 
_°¨t_¥s_id
;

301 
ba£_˛õ¡_t
::
	`ªsume_ã°
();

303 #ifde‡
HAVE_CPUMON


304 
_g_m⁄
->
	`°©_ª£t
();

306 
	}
}

318 
	gsh‹e_shñl_t
::
	$¥o˚ss_cmd_LOAD
(const * )

320 
	`as£π
 (
_ív
);

321 
	`as£π
 (
_ív
->
	`is_öôülized
());

323 i‡(
_ív
->
	`is_lﬂded
()) {

324 
	`TRACE
–
TRACE_ALWAYS
, "EnvironmentálreadyÜoaded\n");

325  (
SHELL_NEXT_CONTINUE
);

329  (
	`_cmd_LOAD_im∂
());

330 
	}
}

341 
	gsh‹e_shñl_t
::
	$¥o˚ss_cmd_WARMUP
(c⁄° * 
comm™d
)

343 
	`as£π
 (
_ív
);

344 
	`as£π
 (
_ív
->
	`is_öôülized
());

348 
w_rc_t
 
r˛
 = 
_ív
->
	`lﬂdd©a
();

349 i‡(
r˛
.
	`is_îr‹
()) {

350  (
SHELL_NEXT_QUIT
);

354 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

355 
numOfQuîõdSF
 = 
ev
->
	`gëV¨DoubÀ
("ã°-num-quîõd",
DF_NUM_OF_QUERIED_SF
);

356 
tmp_numOfQuîõdSF
 = 
numOfQuîõdSF
;

357 
numOfTrxs
 = 
ev
->
	`gëV¨I¡
("ã°-num-åxs",
DF_WARMUP_TRX_PER_THR
);

358 
tmp_numOfTrxs
 = 
numOfTrxs
;

359 
duøti⁄
 = 
ev
->
	`gëV¨I¡
("mósuª-duøti⁄",
DF_WARMUP_DURATION
);

360 
tmp_duøti⁄
 = 
duøti⁄
;

361 
ôî©i⁄s
 = 
ev
->
	`gëV¨I¡
("ã°-ôî©i⁄s",
DF_WARMUP_ITERS
);

362 
tmp_ôî©i⁄s
 = 
ôî©i⁄s
;

366 
comm™d_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

367 i‡–
	`ssˇnf
(
comm™d
, "%s %lf %d %d %d",

368 
comm™d_èg
,

369 &
tmp_numOfQuîõdSF
,

370 &
tmp_numOfTrxs
,

371 &
tmp_duøti⁄
,

372 &
tmp_ôî©i⁄s
) < 1 )

374 
	`TRACE
–
TRACE_ALWAYS
, "Wrong input. Type (help warmup)\n");

375  (
SHELL_NEXT_CONTINUE
);

382 i‡((
tmp_numOfQuîõdSF
>0Ë&& (tmp_numOfQuîõdSF<=
_theSF
)) {

383 
numOfQuîõdSF
 = 
tmp_numOfQuîõdSF
;

386 
numOfQuîõdSF
 = 
_theSF
;

388 
	`as£π
 (
numOfQuîõdSF
 <
_theSF
);

391 i‡(
tmp_numOfTrxs
>0)

392 
numOfTrxs
 = 
tmp_numOfTrxs
;

395 i‡(
tmp_duøti⁄
>0)

396 
duøti⁄
 = 
tmp_duøti⁄
;

399 i‡(
tmp_ôî©i⁄s
>0)

400 
ôî©i⁄s
 = 
tmp_ôî©i⁄s
;

404 
	`TRACE
–
TRACE_ALWAYS
, "\n" \

409 
numOfQuîõdSF
, 
numOfTrxs
, 
duøti⁄
, 
ôî©i⁄s
);

412  (
	`_cmd_WARMUP_im∂
(
numOfQuîõdSF
, 
numOfTrxs
, 
duøti⁄
, 
ôî©i⁄s
));

413 
	}
}

426 
	gsh‹e_shñl_t
::
	$¥o˚ss_cmd_TEST
(c⁄° * 
comm™d
)

428 
	`as£π
 (
_ív
);

429 
	`as£π
 (
_ív
->
	`is_öôülized
());

433 
w_rc_t
 
r˛
 = 
_ív
->
	`lﬂdd©a
();

434 i‡(
r˛
.
	`is_îr‹
()) {

435  (
SHELL_NEXT_QUIT
);

439 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

440 
numOfQuîõdSF
 = 
ev
->
	`gëV¨DoubÀ
("ã°-num-quîõd",
DF_NUM_OF_QUERIED_SF
);

441 
tmp_numOfQuîõdSF
 = 
numOfQuîõdSF
;

442 
•ªadThªads
 = 
ev
->
	`gëV¨I¡
("ã°-•ªad",
DF_SPREAD_THREADS
);

443 
tmp_•ªadThªads
 = 
•ªadThªads
;

444 
numOfThªads
 = 
ev
->
	`gëV¨I¡
("ã°-num-thªads",
DF_NUM_OF_THR
);

445 
tmp_numOfThªads
 = 
numOfThªads
;

446 
numOfTrxs
 = 
ev
->
	`gëV¨I¡
("ã°-num-åxs",
DF_TRX_PER_THR
);

447 
tmp_numOfTrxs
 = 
numOfTrxs
;

448 
£À˘edTrxID
 = 
ev
->
	`gëV¨I¡
("ã°-åx-id",
DF_TRX_ID
);

449 
tmp_£À˘edTrxID
 = 
£À˘edTrxID
;

450 
ôî©i⁄s
 = 
ev
->
	`gëV¨I¡
("ã°-ôî©i⁄s",
DF_NUM_OF_ITERS
);

451 
tmp_ôî©i⁄s
 = 
ôî©i⁄s
;

452 
bödög
 = 
DF_BINDING_TYPE
;

453 
tmp_bödög
 = 
bödög
;

457 
tmp_sf
 = 
ev
->
	`gëSysV¨DoubÀ
("sf");

458 i‡(
tmp_sf
>0) {

459 
	`TRACE
–
TRACE_STATISTICS
, "Upd©ed SF (%.1f)\n", 
tmp_sf
);

460 
_theSF
 = 
tmp_sf
;

465 
comm™d_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

466 i‡–
	`ssˇnf
(
comm™d
, "%s %lf %d %d %d %d %d %d",

467 
comm™d_èg
,

468 &
tmp_numOfQuîõdSF
,

469 &
tmp_•ªadThªads
,

470 &
tmp_numOfThªads
,

471 &
tmp_numOfTrxs
,

472 &
tmp_£À˘edTrxID
,

473 &
tmp_ôî©i⁄s
,

474 &
tmp_bödög
) < 2 )

476 
	`TRACE
–
TRACE_ALWAYS
, "Wrong input. Type (helpÅest)\n");

477  (
SHELL_NEXT_CONTINUE
);

484 i‡((
tmp_numOfQuîõdSF
>0Ë&& (tmp_numOfQuîõdSF<=
_theSF
)) {

485 
numOfQuîõdSF
 = 
tmp_numOfQuîõdSF
;

488 
numOfQuîõdSF
 = 
_theSF
;

490 
	`as£π
 (
numOfQuîõdSF
 <
_theSF
);

496 
•ªadThªads
 = 
tmp_•ªadThªads
;

499 i‡((
tmp_numOfThªads
>0Ë&& (tmp_numOfThªads<=
MAX_NUM_OF_THR
)) {

500 
numOfThªads
 = 
tmp_numOfThªads
;

503 i‡(
•ªadThªads
 && ((
numOfThªads
 % ()
numOfQuîõdSF
)!=0)) {

504 
	`TRACE
–
TRACE_ALWAYS
,

506 
numOfQuîõdSF
, 
numOfThªads
);

510 
numOfThªads
 = 
numOfQuîõdSF
;

514 i‡(
tmp_numOfTrxs
>0)

515 
numOfTrxs
 = 
tmp_numOfTrxs
;

518 
m≠SupTrxsC⁄°It
 
°ù
 = 
_sup_åxs
.
	`föd
(
tmp_£À˘edTrxID
);

519 i‡(
°ù
!=
_sup_åxs
.
	`íd
()) {

520 
£À˘edTrxID
 = 
tmp_£À˘edTrxID
;

523 
	`TRACE
–
TRACE_ALWAYS
, "Unsupported TRX\n");

524  (
SHELL_NEXT_CONTINUE
);

528 i‡(
tmp_ôî©i⁄s
>0)

529 
ôî©i⁄s
 = 
tmp_ôî©i⁄s
;

532 
m≠BödPﬁsIt
 
cô
 = 
_sup_bps
.
	`föd
(
	`eBödögTy≥
(
tmp_bödög
));

533 i‡(
cô
!
_sup_bps
.
	`íd
()) {

534 
bödög
 = 
tmp_bödög
;

537 
	`TRACE
–
TRACE_ALWAYS
, "Unsupported Binding\n");

538  (
SHELL_NEXT_CONTINUE
);

543  (
	`_cmd_TEST_im∂
(
numOfQuîõdSF
, 
•ªadThªads
, 
numOfThªads
,

544 
numOfTrxs
, 
£À˘edTrxID
, 
ôî©i⁄s
,

545 
	`eBödögTy≥
(
bödög
)));

546 
	}
}

558 
	gsh‹e_shñl_t
::
	$¥o˚ss_cmd_MEASURE
(c⁄° * 
comm™d
)

560 
	`as£π
 (
_ív
);

561 
	`as£π
 (
_ív
->
	`is_öôülized
());

565 
w_rc_t
 
r˛
 = 
_ív
->
	`lﬂdd©a
();

566 i‡(
r˛
.
	`is_îr‹
()) {

567  (
SHELL_NEXT_QUIT
);

571 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

572 
numOfQuîõdSF
 = 
ev
->
	`gëV¨DoubÀ
("mósuª-num-quîõd",
DF_NUM_OF_QUERIED_SF
);

573 
tmp_numOfQuîõdSF
 = 
numOfQuîõdSF
;

574 
•ªadThªads
 = 
ev
->
	`gëV¨I¡
("mósuª-•ªad",
DF_SPREAD_THREADS
);

575 
tmp_•ªadThªads
 = 
•ªadThªads
;

576 
numOfThªads
 = 
ev
->
	`gëV¨I¡
("mósuª-num-thªads",
DF_NUM_OF_THR
);

577 
tmp_numOfThªads
 = 
numOfThªads
;

578 
duøti⁄
 = 
ev
->
	`gëV¨I¡
("mósuª-duøti⁄",
DF_DURATION
);

579 
tmp_duøti⁄
 = 
duøti⁄
;

580 
£À˘edTrxID
 = 
ev
->
	`gëV¨I¡
("mósuª-åx-id",
DF_TRX_ID
);

581 
tmp_£À˘edTrxID
 = 
£À˘edTrxID
;

582 
ôî©i⁄s
 = 
ev
->
	`gëV¨I¡
("mósuª-ôî©i⁄s",
DF_NUM_OF_ITERS
);

583 
tmp_ôî©i⁄s
 = 
ôî©i⁄s
;

584 
bödög
 = 
DF_BINDING_TYPE
;

585 
tmp_bödög
 = 
bödög
;

588 
comm™d_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

589 i‡–
	`ssˇnf
(
comm™d
, "%s %lf %d %d %d %d %d %d",

590 
comm™d_èg
,

591 &
tmp_numOfQuîõdSF
,

592 &
tmp_•ªadThªads
,

593 &
tmp_numOfThªads
,

594 &
tmp_duøti⁄
,

595 &
tmp_£À˘edTrxID
,

596 &
tmp_ôî©i⁄s
,

597 &
tmp_bödög
) < 2 )

599 
	`TRACE
–
TRACE_ALWAYS
, "Wrong input. Type (help measure)\n");

600  (
SHELL_NEXT_CONTINUE
);

604 
tmp_sf
 = 
ev
->
	`gëSysV¨DoubÀ
("sf");

605 i‡(
tmp_sf
>0) {

606 
	`TRACE
–
TRACE_DEBUG
, "Upd©ed SF (%.1f)\n", 
tmp_sf
);

607 
_theSF
 = 
tmp_sf
;

614 i‡((
tmp_numOfQuîõdSF
>0Ë&& (tmp_numOfQuîõdSF<=
_theSF
)) {

615 
numOfQuîõdSF
 = 
tmp_numOfQuîõdSF
;

618 
numOfQuîõdSF
 = 
_theSF
;

620 
	`as£π
 (
numOfQuîõdSF
 <
_theSF
);

626 
•ªadThªads
 = 
tmp_•ªadThªads
;

629 i‡((
tmp_numOfThªads
>0Ë&& (tmp_numOfThªads<=
MAX_NUM_OF_THR
)) {

630 
numOfThªads
 = 
tmp_numOfThªads
;

633 i‡(
•ªadThªads
 && ((
numOfThªads
 % ()
numOfQuîõdSF
)!=0)) {

634 
	`TRACE
–
TRACE_ALWAYS
,

636 
numOfQuîõdSF
, 
numOfThªads
);

640 
numOfThªads
 = 
numOfQuîõdSF
;

644 i‡(
tmp_duøti⁄
>0)

645 
duøti⁄
 = 
tmp_duøti⁄
;

648 
m≠SupTrxsC⁄°It
 
°ù
 = 
_sup_åxs
.
	`föd
(
tmp_£À˘edTrxID
);

649 i‡(
°ù
!=
_sup_åxs
.
	`íd
()) {

650 
£À˘edTrxID
 = 
tmp_£À˘edTrxID
;

653 
	`TRACE
–
TRACE_ALWAYS
, "Unsupported TRX\n");

654  (
SHELL_NEXT_CONTINUE
);

658 i‡(
tmp_ôî©i⁄s
>0)

659 
ôî©i⁄s
 = 
tmp_ôî©i⁄s
;

662 
m≠BödPﬁsIt
 
cô
 = 
_sup_bps
.
	`föd
(
	`eBödögTy≥
(
tmp_bödög
));

663 i‡(
cô
!
_sup_bps
.
	`íd
()) {

664 
bödög
 = 
tmp_bödög
;

667 
	`TRACE
–
TRACE_ALWAYS
, "Unsupported Binding\n");

668  (
SHELL_NEXT_CONTINUE
);

672  (
	`_cmd_MEASURE_im∂
(
numOfQuîõdSF
, 
•ªadThªads
, 
numOfThªads
,

673 
duøti⁄
, 
£À˘edTrxID
, 
ôî©i⁄s
,

674 
	`eBödögTy≥
(
bödög
)));

675 
	}
}

686 
	gsh‹e_shñl_t
::
	$SIGINT_h™dÀr
()

688 if(
_¥o˚ssög_comm™d
 && !
_g_ˇn˚Àd
) {

689 
_g_ˇn˚Àd
 = 
åue
;

690 
ba£_˛õ¡_t
::
	`ab‹t_ã°
();

695  (
shñl_t
::
	`SIGINT_h™dÀr
());

696 
	}
}

707 
	gsh‹e_shñl_t
::
	$_cmd_WARMUP_im∂
(const ,

712 
	`TRACE
–
TRACE_ALWAYS
, "warming up...\n");

714 
	`as£π
 (
_ív
);

715 
	`as£π
 (
_ív
->
	`is_öôülized
());

716 
	`as£π
 (
_ív
->
	`is_lﬂded
());

719 
w_rc_t
 
rcw
 = 
_ív
->
	`w¨mup
();

720 i‡(
rcw
.
	`is_îr‹
()) {

721 
	`as£π
 (0);

722  (
SHELL_NEXT_QUIT
);

724  (
SHELL_NEXT_CONTINUE
);

725 
	}
}

736 
	gsh‹e_shñl_t
::
	$_cmd_LOAD_im∂
()

738 
	`TRACE
–
TRACE_ALWAYS
, "loading...\n");

740 
	`as£π
 (
_ív
);

741 
	`as£π
 (
_ív
->
	`is_öôülized
());

743 
w_rc_t
 
r˛
 = 
_ív
->
	`lﬂdd©a
();

744 i‡(
r˛
.
	`is_îr‹
()) {

745 
	`TRACE
–
TRACE_ALWAYS
, "ProblemÜoading data\n");

746  (
SHELL_NEXT_QUIT
);

748 
	`as£π
 (
_ív
->
	`is_lﬂded
());

749  (
SHELL_NEXT_CONTINUE
);

750 
	}
}

757 
	gsh‹e_shñl_t
::
	$ªgi°î_comm™ds
()

759 
	`REGISTER_CMD_PARAM
(
ª°¨t_cmd_t
,
_ª°¨ãr
,
_ív
);

760 
	`REGISTER_CMD_PARAM
(
öfo_cmd_t
,
_öf‹mî
,
_ív
);

761 
	`REGISTER_CMD_PARAM
(
°©s_cmd_t
,
_°©î
,
_ív
);

762 
	`REGISTER_CMD_PARAM
(
sm°©s_cmd_t
,
_sm°©î
,
_ív
);

763 
	`REGISTER_CMD_PARAM
(
dump_cmd_t
,
_dum≥r
,
_ív
);

764 
	`REGISTER_CMD_PARAM
(
Áke_iodñay_cmd_t
,
_Ákei€r
,
_ív
);

765 
	`REGISTER_CMD_PARAM
(
‰eq_cmd_t
,
_‰eqî
,
_ív
);

766 
	`REGISTER_CMD_PARAM
(
skew_cmd_t
,
_skewî
,
_ív
);

767 
	`REGISTER_CMD_PARAM
(
°©s_vîbo£_cmd_t
,
_°©s_vîbo£r
,
_ív
);

768 
	`REGISTER_CMD_PARAM
(
db_¥öt_cmd_t
,
_db_¥öãr
,
_ív
);

769 
	`REGISTER_CMD_PARAM
(
db_„tch_cmd_t
,
_db_„tch
,
_ív
);

771 
	`REGISTER_CMD_PARAM
(
log_cmd_t
,
_loggî
,
_ív
);

772 
	`REGISTER_CMD_PARAM
(
asynch_cmd_t
,
_asynchî
,
_ív
);

774 
	`REGISTER_CMD_PARAM
(
¶i_cmd_t
,
_¶õr
,
_ív
);

775 
	`REGISTER_CMD_PARAM
(
ñr_cmd_t
,
_ñªr
,
_ív
);

777 #ifde‡
CFG_BT


778 
	`REGISTER_CMD_PARAM
(
bt_cmd_t
,
_bãr
,
_ív
);

781 
	`REGISTER_CMD_PARAM
(
mósuª_cmd_t
,
_mósuªr
,
this
);

782 
	`REGISTER_CMD_PARAM
(
ã°_cmd_t
,
_ã°î
,
this
);

783 
	`REGISTER_CMD_PARAM
(
w¨mup_cmd_t
,
_w¨mu≥r
,
this
);

784 
	`REGISTER_CMD_PARAM
(
lﬂd_cmd_t
,
_lﬂdî
,
this
);

785 
	`REGISTER_CMD_PARAM
(
åxs_cmd_t
,
_åx£r
,
this
);

788 
	}
}

801 
	gª°¨t_cmd_t
::
	$£èlü£s
()

803 
_«me
 = 
	`°rög
("restart");

804 
_Æü£s
.
	`push_back
("restart");

805 
	}
}

807 
	gª°¨t_cmd_t
::
	$h™dÀ
(const * )

809 
	`as£π
 (
_ív
);

810 
_ív
->
	`°›
();

811 
_ív
->
	`°¨t
();

812  (
SHELL_NEXT_CONTINUE
);

813 
	}
}

815 
	gª°¨t_cmd_t
::
	$ußge
()

817 
	`TRACE
–
TRACE_ALWAYS
, "usage: info\n");

818 
	}
}

820 
°rög
 
	gª°¨t_cmd_t
::
	$desc
() const

822  (
	`°rög
("Restart"));

823 
	}
}

834 
	göfo_cmd_t
::
	$£èlü£s
()

836 
_«me
 = 
	`°rög
("info");

837 
_Æü£s
.
	`push_back
("info");

838 
_Æü£s
.
	`push_back
("i");

839 
	}
}

841 
	göfo_cmd_t
::
	$h™dÀ
(const * )

843 
	`as£π
 (
_ív
);

844 
_ív
->
	`öfo
();

845  (
SHELL_NEXT_CONTINUE
);

846 
	}
}

848 
	göfo_cmd_t
::
	$ußge
()

850 
	`TRACE
–
TRACE_ALWAYS
, "usage: info\n");

851 
	}
}

853 
°rög
 
	göfo_cmd_t
::
	$desc
() const

855  (
	`°rög
("Prints infoáboutÅhe state of db instance"));

856 
	}
}

867 
	g°©s_cmd_t
::
	$£èlü£s
()

869 
_«me
 = 
	`°rög
("stats");

870 
_Æü£s
.
	`push_back
("stats");

871 
_Æü£s
.
	`push_back
("st");

872 
	}
}

874 
	g°©s_cmd_t
::
	$h™dÀ
(const * )

876 
	`as£π
 (
_ív
);

877 
_ív
->
	`°©i°ics
();

878  (
SHELL_NEXT_CONTINUE
);

879 
	}
}

881 
	g°©s_cmd_t
::
	$ußge
()

883 
	`TRACE
–
TRACE_ALWAYS
, "usage: stats\n");

884 
	}
}

886 
°rög
 
	g°©s_cmd_t
::
	$desc
() const

888  (
	`°rög
("Prints gathered statistics"));

889 
	}
}

899 
	gsm°©s_cmd_t
::
	$£èlü£s
()

901 
_«me
 = 
	`°rög
("smstats");

902 
_Æü£s
.
	`push_back
("smst");

903 
	}
}

905 
	gsm°©s_cmd_t
::
	$h™dÀ
(const * )

907 
	`as£π
 (
_ív
);

908 
_ív
->
	`g©hî°©s_sm
();

909  (
SHELL_NEXT_CONTINUE
);

910 
	}
}

912 
	gsm°©s_cmd_t
::
	$ußge
()

914 
	`TRACE
–
TRACE_ALWAYS
, "usage: smstats\n");

915 
	}
}

917 
°rög
 
	gsm°©s_cmd_t
::
	$desc
() const

919  (
	`°rög
("Prints gathered statistics fromÅhe SM"));

920 
	}
}

931 
	gdump_cmd_t
::
	$£èlü£s
()

933 
_«me
 = 
	`°rög
("dump");

934 
_Æü£s
.
	`push_back
("dump");

935 
_Æü£s
.
	`push_back
("d");

936 
	}
}

938 
	gdump_cmd_t
::
	$h™dÀ
(const * )

940 
	`as£π
 (
_ív
);

941 
_ív
->
	`dump
();

942  (
SHELL_NEXT_CONTINUE
);

943 
	}
}

945 
	gdump_cmd_t
::
	$ußge
()

947 
	`TRACE
–
TRACE_ALWAYS
, "usage: dump\n");

948 
	}
}

950 
°rög
 
	gdump_cmd_t
::
	$desc
() const

952  (
	`°rög
("Dumps db instance data"));

953 
	}
}

964 
	gÁke_iodñay_cmd_t
::
	$£èlü£s
()

966 
_«me
 = 
	`°rög
("iodelay");

967 
_Æü£s
.
	`push_back
("iodelay");

968 
_Æü£s
.
	`push_back
("io");

969 
	}
}

971 
	gÁke_iodñay_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

973 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

974 
iodñay_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

975 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
iodñay_èg
) < 2) {

977 
	`ußge
();

978  (
SHELL_NEXT_CONTINUE
);

980 
	`as£π
 (
_ív
);

981 
dñay
 = 
	`©oi
(
iodñay_èg
);

982 i‡(!
dñay
>0) {

983 
_ív
->
	`dißbÀ_Áke_disk_œãncy
();

986 
_ív
->
	`íabÀ_Áke_disk_œãncy
(
dñay
);

988  (
SHELL_NEXT_CONTINUE
);

989 
	}
}

992 
	gÁke_iodñay_cmd_t
::
	$ußge
()

994 
	`TRACE
–
TRACE_ALWAYS
, "IODELAY Usage:\n\n" \

998 
	}
}

1000 
°rög
 
	gÁke_iodñay_cmd_t
::
	$desc
() const

1002  (
	`°rög
("SetsÅhe fake I/O disk delay"));

1003 
	}
}

1015 
	g‰eq_cmd_t
::
	$£èlü£s
()

1017 
_«me
 = 
	`°rög
("freq");

1018 
_Æü£s
.
	`push_back
("freq");

1019 
	}
}

1021 
	g‰eq_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1023 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1024 
sIn£πFªq
[
SERVER_COMMAND_BUFFER_SIZE
];

1025 
sDñëeFªq
[
SERVER_COMMAND_BUFFER_SIZE
];

1027 i‡–
	`ssˇnf
(
cmd
, "%†%†%s", 
cmd_èg
, 
sIn£πFªq
, 
sDñëeFªq
) < 3) {

1029 
	`ußge
();

1030  (
SHELL_NEXT_CONTINUE
);

1032 
	`as£π
 (
_ív
);

1034 
ö£π_‰eq
 = 
	`©oi
(
sIn£πFªq
);

1035 
dñëe_‰eq
 = 
	`©oi
(
sDñëeFªq
);

1038 
ö£π_‰eq
= (insert_freq<0) ? 0 : insert_freq;

1039 
ö£π_‰eq
= (insert_freq>100) ? 100 : insert_freq;

1042 
dñëe_‰eq
= (delete_freq<0) ? 0 : delete_freq;

1043 
dñëe_‰eq
(
ö£π_‰eq
+delete_freq>100) ? (100-insert_freq) : delete_freq;

1046 
¥obe_‰eq
 = 100-
ö£π_‰eq
-
dñëe_‰eq
;

1048 
	`TRACE
–
TRACE_ALWAYS
, "Setting frequencies I=%d%% D=%d%% P=%d%%\n",

1049 
ö£π_‰eq
, 
dñëe_‰eq
, 
¥obe_‰eq
);

1050 
_ív
->
	`£t_‰eqs
–
ö£π_‰eq
, 
dñëe_‰eq
, 
¥obe_‰eq
);

1051  (
SHELL_NEXT_CONTINUE
);

1052 
	}
}

1055 
	g‰eq_cmd_t
::
	$ußge
()

1057 
	`TRACE
–
TRACE_ALWAYS
, "FREQ Usage:\n\n" \

1063 
	}
}

1065 
°rög
 
	g‰eq_cmd_t
::
	$desc
() const

1067  (
	`°rög
("SetsÅhe frequency of INS/DEL/PROBES, used by some workloads"));

1068 
	}
}

1079 
	gskew_cmd_t
::
	$£èlü£s
()

1081 
_«me
 = 
	`°rög
("skew");

1082 
_Æü£s
.
	`push_back
("skew");

1083 
	}
}

1085 
	gskew_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1087 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1088 
sAªa
[
SERVER_COMMAND_BUFFER_SIZE
];

1089 
sLﬂd
[
SERVER_COMMAND_BUFFER_SIZE
];

1090 
sTime
[
SERVER_COMMAND_BUFFER_SIZE
];

1092 i‡–
	`ssˇnf
(
cmd
, "%†%†%†%s", 
cmd_èg
, 
sAªa
, 
sLﬂd
, 
sTime
) < 4) {

1094 
	`ußge
();

1095 
_ív
->
	`ª£t_skew
();

1096  (
SHELL_NEXT_CONTINUE
);

1098 
	`as£π
 (
_ív
);

1100 
¨ó
 = 
	`©oi
(
sAªa
);

1101 
lﬂd
 = 
	`©oi
(
sLﬂd
);

1102 
time
 = 
	`©oi
(
sTime
);

1105 
¨ó
 = (area<0) ? 0 :área;

1106 
¨ó
 = (area>100) ? 100 :área;

1109 
lﬂd
 = (load<0) ? 0 :Üoad;

1110 
lﬂd
 = (load>100) ? 100 :Üoad;

1112 
	`TRACE
–
TRACE_ALWAYS
, "SëtögÜﬂd imbÆ™˚ Aªa=%d%% Lﬂd=%d%% Sèπ=%d£c\n", 
¨ó
, 
lﬂd
, 
time
);

1113 
_ív
->
	`£t_skew
(
¨ó
, 
lﬂd
, 
time
);

1114  (
SHELL_NEXT_CONTINUE
);

1115 
	}
}

1118 
	gskew_cmd_t
::
	$ußge
()

1120 
	`TRACE
–
TRACE_ALWAYS
, "SKEW Usage:\n\n" \

1127 
	}
}

1129 
°rög
 
	gskew_cmd_t
::
	$desc
() const

1131  (
	`°rög
("SetsÅheÜoad ofáÖarticularÖercentage ofÑecords inÅhe database, used by some workloads"));

1132 
	}
}

1143 
	g°©s_vîbo£_cmd_t
::
	$£èlü£s
()

1145 
_«me
 = 
	`°rög
("stats_verbose");

1146 
_Æü£s
.
	`push_back
("stats_verbose");

1147 
	}
}

1149 
	g°©s_vîbo£_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1151 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1152 
s
[
SERVER_COMMAND_BUFFER_SIZE
];

1154 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
s
) < 2) {

1156 
	`ußge
();

1157  (
SHELL_NEXT_CONTINUE
);

1159 
	`as£π
 (
_ív
);

1161 #ifde‡
HAVE_CPUMON


1162 if(0 =
	`°rˇ£cmp
("⁄", 
s
)) {

1163 
_g_m⁄
->
	`£t_¥öt_vîbo£
(
åue
);

1164 
	`TRACE
–
TRACE_ALWAYS
, "Verbose statistics will beÖrintedÉvery second duringá measurement!\n" );

1165 } if(0 =
	`°rˇ£cmp
("off", 
s
)) {

1166 
_g_m⁄
->
	`£t_¥öt_vîbo£
(
Ál£
);

1167 
	`TRACE
–
TRACE_ALWAYS
, "Verbose statistics off!\n" );

1169 
	`ußge
();

1172 
	`TRACE
 (
TRACE_ALWAYS
, "CPU MonitoringÇot configured, verbose statsÇotávailable\n");

1175  (
SHELL_NEXT_CONTINUE
);

1176 
	}
}

1179 
	g°©s_vîbo£_cmd_t
::
	$ußge
()

1181 
	`TRACE
–
TRACE_ALWAYS
, "STATS_VERBOSE Usage:\n\n" \

1186 
	}
}

1188 
°rög
 
	g°©s_vîbo£_cmd_t
::
	$desc
() const

1190  (
	`°rög
("To start-stopÖrinting more statistics duringá measurement."));

1191 
	}
}

1202 
	gdb_¥öt_cmd_t
::
	$£èlü£s
()

1204 
_«me
 = 
	`°rög
("db_print");

1205 
_Æü£s
.
	`push_back
("db_print");

1206 
	}
}

1208 
	gdb_¥öt_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1210 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1211 
löes_c
[
SERVER_COMMAND_BUFFER_SIZE
];

1213 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
löes_c
) < 1) {

1215 
	`ußge
();

1216  (
SHELL_NEXT_CONTINUE
);

1218 
	`as£π
 (
_ív
);

1220 
löes_i
 = 
	`©oi
(
löes_c
);

1221 
_ív
->
	`db_¥öt_öô
(
löes_i
);

1223  (
SHELL_NEXT_CONTINUE
);

1224 
	}
}

1227 
	gdb_¥öt_cmd_t
::
	$ußge
()

1229 
	`TRACE
–
TRACE_ALWAYS
, "DB_PRINT Usage:\n\n" \

1233 
	}
}

1235 
°rög
 
	gdb_¥öt_cmd_t
::
	$desc
() const

1237  (
	`°rög
("ToÖrintÅhe contents ofÅhe current dbÅables into files."));

1238 
	}
}

1249 
	gdb_„tch_cmd_t
::
	$£èlü£s
()

1251 
_«me
 = 
	`°rög
("db_fetch");

1252 
_Æü£s
.
	`push_back
("db_fetch");

1253 
	}
}

1255 
	gdb_„tch_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1257 
	`as£π
 (
_ív
);

1258 
_ív
->
	`db_„tch_öô
();

1259  (
SHELL_NEXT_CONTINUE
);

1260 
	}
}

1263 
	gdb_„tch_cmd_t
::
	$ußge
()

1265 
	`TRACE
–
TRACE_ALWAYS
, "DB_FETCH Usage:\n\n*** db_fetch\n\n");

1266 
	}
}

1268 
°rög
 
	gdb_„tch_cmd_t
::
	$desc
() const

1270  (
	`°rög
("To fetchÅheÖages ofÅhe current dbÅablesándÅheir indexes intoÅhe bufferÖool."));

1271 
	}
}

1280 
	glog_cmd_t
::
	$£èlü£s
()

1282 
_«me
 = 
	`°rög
("log");

1283 
_Æü£s
.
	`push_back
("log");

1284 
_Æü£s
.
	`push_back
("l");

1285 
	}
}

1287 
	glog_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1289 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1290 
Àvñ_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

1292 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
Àvñ_èg
) < 2) {

1293 
	`ußge
();

1296 if(
	`°rˇ£cmp
("gë", 
Àvñ_èg
)) {

1297 
rc_t
 
îr
 = 
_ív
->
	`db
()->
	`£t_log_„©uªs
(
Àvñ_èg
);

1298 if(
îr
.
	`is_îr‹
()) {

1299 
	`TRACE
–
TRACE_ALWAYS
, "*** InvÆid fótuª së: %†***", 
Àvñ_èg
);

1302 c⁄°* 
Àvñ
 = 
_ív
->
	`db
()->
	`gë_log_„©uªs
();

1303 
	`TRACE
–
TRACE_ALWAYS
, "E«bÀdÜog fótuªs: %s\n", 
Àvñ
);

1304 
dñëe
[] 
Àvñ
;

1307  (
SHELL_NEXT_CONTINUE
);

1308 
	}
}

1310 
	glog_cmd_t
::
	$ußge
()

1312 
	`TRACE
–
TRACE_ALWAYS
, "LOG Usage:\n\n"

1326 
	}
}

1328 
°rög
 
	glog_cmd_t
::
	$desc
() const

1330  (
	`°rög
("SetsÅheÜogging mechanism"));

1331 
	}
}

1340 
	gasynch_cmd_t
::
	$asynch_cmd_t
(
Sh‹eEnv
* 
ív
)

1341 : 
	`_ív
(
ív
), 
	$_íabÀd
(
Ál£
)

1342 { 
	}
}

1344 
	gasynch_cmd_t
::
	$£èlü£s
()

1346 
_«me
 = 
	`°rög
("asynch");

1347 
_Æü£s
.
	`push_back
("asynch");

1348 
	}
}

1350 
	gasynch_cmd_t
::
	$h™dÀ
(const * )

1352 
_íabÀd
 = !_enabled;

1353 
_ív
->
	`£tAsynchCommô
(
_íabÀd
);

1354 
	`TRACE
–
TRACE_ALWAYS
, "AsynchCommô=%d\n", 
_íabÀd
);

1355  (
SHELL_NEXT_CONTINUE
);

1356 
	}
}

1358 
	gasynch_cmd_t
::
	$ußge
()

1360 
	`TRACE
–
TRACE_ALWAYS
, "Asynch Usage:\n\n" \

1362 
	}
}

1365 
°rög
 
	gasynch_cmd_t
::
	$desc
() const

1367  (
	`°rög
("SetsÅhe fakeÜog disk delay"));

1368 
	}
}

1378 
	g¶i_cmd_t
::
	$¶i_cmd_t
(
Sh‹eEnv
* 
ív
)

1379 : 
	`_ív
(
ív
), 
	$_íabÀd
(
Ál£
)

1380 { 
	}
}

1382 
	g¶i_cmd_t
::
	$£èlü£s
()

1384 
_«me
 = 
	`°rög
("sli");

1385 
_Æü£s
.
	`push_back
("sli");

1386 
	}
}

1388 
	g¶i_cmd_t
::
	$h™dÀ
(const * )

1390 
_íabÀd
 = !_enabled;

1391 
_ív
->
	`db
()->
	`£t_¶i_íabÀd
(
_íabÀd
);

1392 
_ív
->
	`£tSLIE«bÀd
(
_íabÀd
);

1393 
	`TRACE
–
TRACE_ALWAYS
, "SLI=%d\n", 
_íabÀd
);

1394  (
SHELL_NEXT_CONTINUE
);

1395 
	}
}

1397 
	g¶i_cmd_t
::
	$ußge
()

1399 
	`TRACE
–
TRACE_ALWAYS
, "SLI Usage:\n\n" \

1401 
	}
}

1403 
°rög
 
	g¶i_cmd_t
::
	$desc
() const

1405  (
	`°rög
("Enables/disables SLI"));

1406 
	}
}

1417 
	gñr_cmd_t
::
	$ñr_cmd_t
(
Sh‹eEnv
* 
ív
)

1418 : 
	`_ív
(
ív
), 
	$_íabÀd
(
Ál£
)

1419 { 
	}
}

1421 
	gñr_cmd_t
::
	$£èlü£s
()

1423 
_«me
 = 
	`°rög
("elr");

1424 
_Æü£s
.
	`push_back
("elr");

1425 
	}
}

1427 
	gñr_cmd_t
::
	$h™dÀ
(const * )

1429 
_íabÀd
 = !_enabled;

1430 
_ív
->
	`db
()->
	`£t_ñr_íabÀd
(
_íabÀd
);

1431 
_ív
->
	`£tELRE«bÀd
(
_íabÀd
);

1432 
	`TRACE
–
TRACE_ALWAYS
, "ELR=%d\n", 
_íabÀd
);

1433  (
SHELL_NEXT_CONTINUE
);

1434 
	}
}

1436 
	gñr_cmd_t
::
	$ußge
()

1438 
	`TRACE
–
TRACE_ALWAYS
, "ELR Usage:\n\n" \

1440 
	}
}

1442 
°rög
 
	gñr_cmd_t
::
	$desc
() const

1444  (
	`°rög
("Enables/disables ELR"));

1445 
	}
}

1450 #ifde‡
CFG_BT


1457 
	gbt_cmd_t
::
	$bt_cmd_t
(
Sh‹eEnv
* 
ív
)

1458 : 
	`_ív
(
ív
), 
	$_íabÀd
(
Ál£
)

1459 { 
	}
}

1461 
	gbt_cmd_t
::
	$£èlü£s
()

1463 
_«me
 = 
	`°rög
("bt");

1464 
_Æü£s
.
	`push_back
("bt");

1465 
	}
}

1467 
	gbt_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1469 
	#CMDLEN
 10

	)

1470 
uöt
 
∂evñ
=0;

1471 
cou¡
 = 
	`ssˇnf
(
cmd
, "%*†%ud", &
∂evñ
);

1472 
cou¡
) {

1474 
	`ußge
();

1477 
ss_m
::
	`£t_∂p_åacög
(
∂evñ
);

1478 
	`TRACE
–
TRACE_ALWAYS
, "PLEVEL=%d\n", 
∂evñ
);

1481 
	`TRACE
(
TRACE_ALWAYS
, "InvÆidárgumít: %s\n", 
cmd
);

1484  (
SHELL_NEXT_CONTINUE
);

1485 
	}
}

1487 
	gbt_cmd_t
::
	$ußge
()

1489 
	`TRACE
–
TRACE_ALWAYS
, "BT Usage:\n\n" \

1491 
	}
}

1493 
°rög
 
	gbt_cmd_t
::
	$desc
() const

1495  (
	`°rög
("Enables/disables PLPÅracingát shore-sm-6"));

1496 
	}
}

1509 
	gmósuª_cmd_t
::
	$£èlü£s
()

1511 
_«me
 = 
	`°rög
("measure");

1512 
_Æü£s
.
	`push_back
("measure");

1513 
_Æü£s
.
	`push_back
("m");

1514 
	}
}

1516 
	gmósuª_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1518 
_kô
->
	`¥e_¥o˚ss_cmd
();

1519  (
_kô
->
	`¥o˚ss_cmd_MEASURE
(
cmd
));

1520 
	}
}

1522 
	gmósuª_cmd_t
::
	$ußge
()

1524 
	`TRACE
–
TRACE_ALWAYS
, "MEASURE Usage:\n\n" \

1534 
	}
}

1536 
°rög
 
	gmósuª_cmd_t
::
	$desc
() const

1538  
	`°rög
("Duration-based Measurement (powerrun)");

1539 
	}
}

1550 
	gã°_cmd_t
::
	$£èlü£s
()

1552 
_«me
 = 
	`°rög
("test");

1553 
_Æü£s
.
	`push_back
("test");

1554 
	}
}

1556 
	gã°_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1558 
_kô
->
	`¥e_¥o˚ss_cmd
();

1559  (
_kô
->
	`¥o˚ss_cmd_TEST
(
cmd
));

1560 
	}
}

1562 
	gã°_cmd_t
::
	$ußge
()

1564 
	`TRACE
–
TRACE_ALWAYS
, "TEST Usage:\n\n" \

1574 
	}
}

1576 
°rög
 
	gã°_cmd_t
::
	$desc
() const

1578  
	`°rög
("NumOfXcts-based Measument (powerrun)");

1579 
	}
}

1590 
	gw¨mup_cmd_t
::
	$£èlü£s
()

1592 
_«me
 = 
	`°rög
("warmup");

1593 
_Æü£s
.
	`push_back
("warmup");

1594 
	}
}

1596 
	gw¨mup_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1598 
_kô
->
	`¥e_¥o˚ss_cmd
();

1599  (
_kô
->
	`¥o˚ss_cmd_WARMUP
(
cmd
));

1600 
	}
}

1602 
	gw¨mup_cmd_t
::
	$ußge
()

1604 
	`TRACE
–
TRACE_ALWAYS
, "WARMUP Usage:\n\n" \

1611 
	}
}

1613 
°rög
 
	gw¨mup_cmd_t
::
	$desc
() const

1615  
	`°rög
("DoesáÖreselected warmupÑun");

1616 
	}
}

1627 
	glﬂd_cmd_t
::
	$£èlü£s
()

1629 
_«me
 = 
	`°rög
("load");

1630 
_Æü£s
.
	`push_back
("load");

1631 
	}
}

1633 
	glﬂd_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

1635 
_kô
->
	`¥e_¥o˚ss_cmd
();

1636  (
_kô
->
	`¥o˚ss_cmd_LOAD
(
cmd
));

1637 
	}
}

1639 
	glﬂd_cmd_t
::
	$ußge
()

1641 
	`TRACE
–
TRACE_ALWAYS
, "LOAD Usage:\n\n" \

1643 
	}
}

1645 
°rög
 
	glﬂd_cmd_t
::
	$desc
() const

1647  
	`°rög
("Loadsá database forÅhe benchmark");

1648 
	}
}

1659 
	gåxs_cmd_t
::
	$£èlü£s
()

1661 
_«me
 = 
	`°rög
("trxs");

1662 
_Æü£s
.
	`push_back
("trxs");

1663 
	}
}

1665 
	gåxs_cmd_t
::
	$h™dÀ
(const * )

1667 
_kô
->
	`¥öt_sup_åxs
();

1668  (
SHELL_NEXT_CONTINUE
);

1669 
	}
}

1671 
	gåxs_cmd_t
::
	$ußge
()

1673 
	`TRACE
–
TRACE_ALWAYS
, "usage:Årxs\n");

1674 
	}
}

1676 
°rög
 
	gåxs_cmd_t
::
	$desc
() const

1678  
	`°rög
("ListsÅheávailableÅransactions inÅhe benchmark");

1679 
	}
}

1683 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_table.cpp

32 
	~"sm/sh‹e/sh‹e_èbÀ.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

44 
	#VAR_SLOT
(
°¨t
, 
off£t
Ë((°¨t)+(off£t))

	)

45 
	#SET_NULL_FLAG
(
°¨t
, 
off£t
) \

46 (*(*)((
°¨t
)+((
off£t
)>>3))Ë&(1<<((off£t)>>3))

	)

47 
	#IS_NULL_FLAG
(
°¨t
, 
off£t
) \

48 (*(*)((
°¨t
)+((
off£t
)>>3)))&(1<<((off£t)>>3))

	)

60 
	gèbÀ_desc_t
::
	$èbÀ_desc_t
(c⁄° * 
«me
, 
fõld˙t
, 
uöt4_t
 
pd
)

61 : 
	`fûe_desc_t
(
«me
, 
fõld˙t
, 
pd
), 
	`_db
(
NULL
),

62 
	`_ödexes
(
NULL
), 
	`_¥im¨y_idx
(NULL),

63 
	`_maxsize
(0),

64 
	`_sMöKey
(
NULL
),
	`_sMöKeyLí
(0),

65 
	`_sMaxKey
(
NULL
),
	$_sMaxKeyLí
(0)

68 
_desc
 = 
√w
 
fõld_desc_t
[
fõld˙t
];

69 
	}
}

72 
	gèbÀ_desc_t
::~
	$èbÀ_desc_t
()

74 i‡(
_desc
) {

75 
dñëe
 [] 
_desc
;

76 
_desc
 = 
NULL
;

79 i‡(
_ödexes
) {

80 
dñëe
 
_ödexes
;

81 
_ödexes
 = 
NULL
;

84 i‡(
_sMöKey
!=
NULL
) {

85 
	`‰ì
(
_sMöKey
);

86 
_sMöKey
=
NULL
;

89 i‡(
_sMaxKey
!=
NULL
) {

90 
	`‰ì
(
_sMaxKey
);

91 
_sMaxKey
=
NULL
;

93 
	}
}

110 
w_rc_t
 
	gèbÀ_desc_t
::
	$¸óã_physiˇl_èbÀ
(
ss_m
* 
db
)

112 
	`as£π
 (
db
);

113 
_db
 = 
db
;

115 i‡(!
	`is_vid_vÆid
(Ë|| !
	`is_roŸ_vÆid
()) {

116 
	`W_DO
(
	`föd_roŸ_iid
(
db
));

121 
ödex_desc_t
* 
ödex
 = 
_ödexes
;

123 i‡(
ödex
 && (ödex->
	`gë_pd
(Ë& (
PD_MRBT_PART
 | 
PD_MRBT_LEAF
))) {

125 
	`W_DO
(
db
->
	`¸óã_mrbt_fûe
(
	`vid
(), 
_fid
, 
smÀvñ_3
::
t_ªguœr
));

127 
	`W_DO
(
db
->
	`¸óã_fûe
(
	`vid
(), 
_fid
, 
smÀvñ_3
::
t_ªguœr
));

129 
	`TRACE
–
TRACE_STATISTICS
, "%†%d\n", 
	`«me
(), 
	`fid
().
°‹e
);

132 
fûe_öfo_t
 
fûe
;

133 
fûe
.
	`£t_·y≥
(
FT_HEAP
);

134 
fûe
.
	`£t_fid
(
_fid
);

135 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
	`roŸ_iid
(),

136 
	`vec_t
(
	`«me
(), 
	`°æí
(name())),

137 
	`vec_t
(&
fûe
, (
fûe_öfo_t
))));

141 
ödex
) {

144 
	`W_DO
(
	`¸óã_physiˇl_ödex
(
db
,
ödex
));

147 
ödex
 = index->
	`√xt
();

150  (
RCOK
);

151 
	}
}

163 
w_rc_t
 
	gèbÀ_desc_t
::
	$¸óã_physiˇl_ödex
(
ss_m
* 
db
, 
ödex_desc_t
* 
ödex
)

166 
fûe_öfo_t
 
fûe
;

169 
°id_t
 
iid
 = stid_t::
nuŒ
;

170 
ss_m
::
ndx_t
 
smidx_ty≥
 = ss_m::
t_uni_båì
;

171 
ss_m
::
c⁄cuºícy_t
 
smidx_cc
 = ss_m::
t_cc_im
;

176 i‡(
ödex
->
	`is_mr
()) {

177 
uöt4_t
 
pd
 = 
ödex
->
	`gë_pd
();

178 i‡(
ödex
->
	`is_¥im¨y
()) {

183 i‡(
pd
 & 
PD_MRBT_NORMAL
) {

185 
smidx_ty≥
 = 
ödex
->
	`is_unique
(Ë? 
ss_m
::
t_uni_mrbåì
 : ss_m::
t_mrbåì
;

188 i‡(
pd
 & 
PD_MRBT_PART
) {

190 
smidx_ty≥
 = 
ödex
->
	`is_unique
(Ë? 
ss_m
::
t_uni_mrbåì_p
 : ss_m::
t_mrbåì_p
;

193 
	`as£π
 (
pd
 & 
PD_MRBT_LEAF
);

195 
smidx_ty≥
 = 
ödex
->
	`is_unique
(Ë? 
ss_m
::
t_uni_mrbåì_l
 : ss_m::
t_mrbåì_l
;

201 
smidx_ty≥
 = 
ödex
->
	`is_unique
(Ë? 
ss_m
::
t_uni_mrbåì
 : ss_m::
t_mrbåì
;

206 
smidx_ty≥
 = 
ödex
->
	`is_unique
(Ë? 
ss_m
::
t_uni_båì
 : ss_m::
t_båì
;

211 
smidx_cc
 = 
ödex
->
	`is_ªœxed
(Ë? 
ss_m
::
t_cc_n⁄e
 : ss_m::
t_cc_im
;

215 i‡(
ödex
->
	`is_¥im¨y
()) {

216 
fûe
.
	`£t_·y≥
(
FT_PRIMARY_IDX
);

219 
fûe
.
	`£t_·y≥
(
FT_IDX
);

222 i‡(
ödex
->
	`is_rm≠hﬁdî
()) {

223 
fûe
.
	`£t_·y≥
(
FT_NONE
);

228 if(
ödex
->
	`is_∑πôi⁄ed
()) {

229 
i
=0; i < 
ödex
->
	`gë_∑πôi⁄_cou¡
(); i++) {

230 i‡(!
ödex
->
	`is_mr
()) {

231 
	`W_DO
(
db
->
	`¸óã_ödex
(
_vid
, 
smidx_ty≥
, 
ss_m
::
t_ªguœr
,

232 
	`ödex_keydesc
(
ödex
), 
smidx_cc
, 
iid
));

235 
	`W_DO
(
db
->
	`¸óã_mr_ödex
(
_vid
, 
smidx_ty≥
, 
ss_m
::
t_ªguœr
,

236 
	`ödex_keydesc
(
ödex
), 
smidx_cc
, 
iid
,

237 
ödex
->
	`is_œtchÀss
()));

240 
vec_t
 
	`möv
(
_sMöKey
,
_sMöKeyLí
);

241 
vec_t
 
	`maxv
(
_sMaxKey
,
_sMaxKeyLí
);

242 
	`W_DO
(
db
->
	`make_equÆ_∑πôi⁄s
(
iid
,
möv
,
maxv
,
_numP¨ts
));

244 
ödex
->
	`£t_fid
(
i
, 
iid
);

247 
fûe
.
	`£t_fid
(
iid
);

248 
tmp
[100];

249 
	`•rötf
(
tmp
, "%s_%d", 
ödex
->
	`«me
(), 
i
);

250 
	`W_DO
(
db
->
	`¸óã_assoc
(
	`roŸ_iid
(),

251 
	`vec_t
(
tmp
, 
	`°æí
(tmp)),

252 
	`vec_t
(&
fûe
, (
fûe_öfo_t
))));

257 i‡(!
ödex
->
	`is_mr
()) {

258 
	`W_DO
(
db
->
	`¸óã_ödex
(
_vid
, 
smidx_ty≥
, 
ss_m
::
t_ªguœr
,

259 
	`ödex_keydesc
(
ödex
), 
smidx_cc
, 
iid
));

262 
	`W_DO
(
db
->
	`¸óã_mr_ödex
(
_vid
, 
smidx_ty≥
, 
ss_m
::
t_ªguœr
,

263 
	`ödex_keydesc
(
ödex
), 
smidx_cc
, 
iid
,

264 
ödex
->
	`is_œtchÀss
()));

267 
vec_t
 
	`möv
(
_sMöKey
,
_sMöKeyLí
);

268 
vec_t
 
	`maxv
(
_sMaxKey
,
_sMaxKeyLí
);

269 
	`W_DO
(
db
->
	`make_equÆ_∑πôi⁄s
(
iid
,
möv
,
maxv
,
_numP¨ts
));

271 
ödex
->
	`£t_fid
(0, 
iid
);

274 
fûe
.
	`£t_fid
(
iid
);

275 
	`W_DO
(
db
->
	`¸óã_assoc
(
	`roŸ_iid
(),

276 
	`vec_t
(
ödex
->
	`«me
(), 
	`°æí
(index->name())),

277 
	`vec_t
(&
fûe
, (
fûe_öfo_t
))));

281 
	`TRACE
–
TRACE_STATISTICS
, "%s %d (%s) (%s) (%s) (%s) (%s)\n",

282 
ödex
->
	`«me
(), 
iid
.
°‹e
,

283 (
ödex
->
	`is_mr
() ? "mrbt" : "normal"),

284 (
ödex
->
	`is_œtchÀss
() ? "noÜatch" : "latch"),

285 (
ödex
->
	`is_ªœxed
() ? "relaxed" : "noÑelaxed"),

286 (
ödex
->
	`is_∑πôi⁄ed
() ? "part" : "noÖart"),

287 (
ödex
->
	`is_unique
() ? "unique" : "no unique"));

289  (
RCOK
);

290 
	}
}

307 
w_rc_t
 
	gèbÀ_desc_t
::
	$¸óã_physiˇl_em±y_¥im¨y_idx
()

310 
	`as£π
 (
_db
);

312 
°rög
 
idx«me
 = 
	`°rög
(
this
->
	`«me
()) + string("MRHolder");

313 
uöt
 
key
[1]={0};

314 
ödex_desc_t
* 
p_ödex
 = 
√w
 
	`ödex_desc_t
(
idx«me
.
	`c_°r
(),1,0,
key
,

315 
Ál£
,Ál£,
PD_MRBT_NORMAL
,

316 
åue
);

317 
	`as£π
(
p_ödex
);

320 
_¥im¨y_idx
 = 
p_ödex
;

322 
	`W_DO
(
	`¸óã_physiˇl_ödex
(
_db
,
p_ödex
));

324  (
RCOK
);

325 
	}
}

340 #w¨nög 
C™nŸ
 
upd©e
 
fõlds
 
ö˛uded
 
©
 
ödexes
 - 
dñëe
 
™d
 
ö£π
 
agaö


342 #w¨nög 
O∆y
 
the
 
œ°
 
fõld
 
of
 
™
 
ödex
 
ˇn
 
be
 o‡
v¨übÀ
 
Àngth


344 
boﬁ
 
	gèbÀ_desc_t
::
	$¸óã_ödex_desc
(c⁄° * 
«me
,

345 
∑πôi⁄s
,

346 c⁄° 
uöt
* 
fõlds
,

347 c⁄° 
uöt
 
num
,

348 c⁄° 
boﬁ
 
unique
,

349 c⁄° 
boﬁ
 
¥im¨y
,

350 c⁄° 
uöt4_t
& 
pd
)

352 
ödex_desc_t
* 
p_ödex
 = 
√w
 
	`ödex_desc_t
(
«me
, 
num
, 
∑πôi⁄s
, 
fõlds
,

353 
unique
, 
¥im¨y
, 
pd
);

356 
uöt_t
 
i
=0; i<
num
; i++) {

357 
	`as£π
(
fõlds
[
i
] < 
_fõld_cou¡
);

360 #w¨nög 
IP
: 
I
 
am
 
nŸ
 
suª
 
°ûl
 
⁄ly
 
the
 
œ°
 
fõld
 
ö
Åhê
ödex
 
ˇn
 
be
 
v¨übÀ
 
Àngthed


362 i‡(
_desc
[
fõlds
[
i
]].
	`is_v¨übÀ_Àngth
(Ë&& i !
num
-1) {

363 
	`as£π
(
Ál£
);

368 i‡(
_ödexes
 =
NULL
Ë_ödexe†
p_ödex
;

369 
_ödexes
->
	`ö£π
(
p_ödex
);

372 i‡(
p_ödex
->
	`is_unique
(Ë&&Ö_ödex->
	`is_¥im¨y
())

373 
_¥im¨y_idx
 = 
p_ödex
;

375  
åue
;

376 
	}
}

379 
boﬁ
 
	gèbÀ_desc_t
::
	$¸óã_¥im¨y_idx_desc
(c⁄° * 
«me
,

380 
∑πôi⁄s
,

381 c⁄° 
uöt
* 
fõlds
,

382 c⁄° 
uöt
 
num
,

383 c⁄° 
uöt4_t
& 
pd
)

385 
ödex_desc_t
* 
p_ödex
 = 
√w
 
	`ödex_desc_t
(
«me
, 
num
, 
∑πôi⁄s
, 
fõlds
,

386 
åue
,Årue, 
pd
);

389 
uöt_t
 
i
=0; i<
num
; i++) {

390 
	`as£π
(
fõlds
[
i
] < 
_fõld_cou¡
);

393 i‡(
_desc
[
fõlds
[
i
]].
	`is_v¨übÀ_Àngth
(Ë&& i !
num
-1) {

394 
	`as£π
(
Ál£
);

399 i‡(
_ödexes
 =
NULL
Ë_ödexe†
p_ödex
;

400 
_ödexes
->
	`ö£π
(
p_ödex
);

403 
_¥im¨y_idx
 = 
p_ödex
;

405  (
åue
);

406 
	}
}

411 
°id_t
 
	gèbÀ_desc_t
::
	$gë_¥im¨y_°id
()

413 
°id_t
 
°id
 = ( 
_¥im¨y_idx
 ? _¥im¨y_idx->
	`fid
(0) : fid() );

414  (
°id
);

415 
	}
}

424 
w_rc_t
 
	gèbÀ_desc_t
::
	$£t_∑πôi⁄ög
(c⁄° * 
sMöKey
,

425 
uöt
 
Àn1
,

426 c⁄° * 
sMaxKey
,

427 
uöt
 
Àn2
,

428 
uöt
 
numP¨ts
)

431 i‡(
_sMöKeyLí
 < 
Àn1
) {

432 i‡(
_sMöKey
Ë{ 
	`‰ì
 (_sMinKey); }

433 
_sMöKey
 = (*)
	`mÆloc
(
Àn1
+1);

435 
	`mem£t
(
_sMöKey
,0,
Àn1
+1);

436 
	`mem˝y
(
_sMöKey
,
sMöKey
,
Àn1
);

437 
_sMöKeyLí
 = 
Àn1
;

439 i‡(
_sMaxKeyLí
 < 
Àn2
) {

440 i‡(
_sMaxKey
Ë{ 
	`‰ì
 (_sMaxKey); }

441 
_sMaxKey
 = (*)
	`mÆloc
(
Àn2
+1);

443 
	`mem£t
(
_sMaxKey
,0,
Àn2
+1);

444 
	`mem˝y
(
_sMaxKey
,
sMaxKey
,
Àn2
);

445 
_sMaxKeyLí
 = 
Àn2
;

447 
_numP¨ts
 = 
numP¨ts
;

448  (
RCOK
);

449 
	}
}

453 
uöt
 
	gèbÀ_desc_t
::
	$p˙t
() const

455  (
_numP¨ts
);

456 
	}
}

458 * 
	gèbÀ_desc_t
::
	$gëMöKey
() const

460  (
_sMöKey
);

461 
	}
}

463 
uöt
 
	gèbÀ_desc_t
::
	$gëMöKeyLí
() const

465  (
_sMöKeyLí
);

466 
	}
}

468 * 
	gèbÀ_desc_t
::
	$gëMaxKey
() const

470  (
_sMaxKey
);

471 
	}
}

473 
uöt
 
	gèbÀ_desc_t
::
	$gëMaxKeyLí
() const

475  (
_sMaxKeyLí
);

476 
	}
}

490 
w_rc_t
 
	gèbÀ_desc_t
::
	$gë_maö_øngem≠
(
key_ønges_m≠
*& 
øngem≠
)

492 i‡(!
_¥im¨y_idx
 || _¥im¨y_idx->
	`is_∑πôi⁄ed
()) {

494 
	`¸óã_physiˇl_em±y_¥im¨y_idx
();

496 
	`as£π
 (
_¥im¨y_idx
);

500 
	`as£π
 (!
_¥im¨y_idx
->
	`is_∑πôi⁄ed
());

502 
	`W_DO
(
ss_m
::
	`gë_ønge_m≠
(
_¥im¨y_idx
->
	`fid
(0),
øngem≠
));

503  (
RCOK
);

504 
	}
}

514 
	gèbÀ_desc_t
::
	$¥öt_desc
(
o°ªam
& 
os
)

516 
os
 << "Schem®f‹ÅabÀ " << 
_«me
 << 
ídl
;

517 
os
 << "Numî o‡fõlds: " << 
_fõld_cou¡
 << 
ídl
;

518 
uöt_t
 
i
=0; i<
_fõld_cou¡
; i++) {

519 
_desc
[
i
].
	`¥öt_desc
(
os
);

521 
	}
}

556 
	gèbÀ_m™_t
::
	$f‹m©
(
èbÀ_tu∂e
* 
±u∂e
,

557 
ªp_row_t
 &
¨ï
)

565 
off£t_t
 
fixed_off£t
 = 
±u∂e
->
	`gë_fixed_off£t
();

568 
off£t_t
 
v¨_¶Ÿ_off£t
 = 
±u∂e
->
	`gë_v¨_¶Ÿ_off£t
();

571 
off£t_t
 
v¨_off£t
 = 
±u∂e
->
	`gë_v¨_off£t
();

578 
tupsize
 = 0;

580 
nuŒ_cou¡
 = 
±u∂e
->
	`gë_nuŒ_cou¡
();

581 
fixed_size
 = 
±u∂e
->
	`gë_v¨_¶Ÿ_off£t
(Ë-Ötu∂e->
	`gë_fixed_off£t
();

584 
uöt_t
 
i
=0; i<
_±abÀ
->
	`fõld_cou¡
(); i++) {

586 i‡(
±u∂e
->
_pvÆues
[
i
].
	`is_v¨übÀ_Àngth
()) {

591 i‡(
±u∂e
->
_pvÆues
[
i
].
	`is_nuŒ
()) ;

592 
tupsize
 +
±u∂e
->
_pvÆues
[
i
].
	`ªÆsize
();

593 
tupsize
 +(
off£t_t
);

604 
tupsize
 +
fixed_size
;

608 i‡(
nuŒ_cou¡
Ë
tupsize
 += (null_count >> 3) + 1;

609 
	`as£π
 (
tupsize
);

614 
¨ï
.
	`£t
(
tupsize
);

620 
nuŒ_ödex
 = -1;

622 
uöt_t
 
i
=0; i<
_±abÀ
->
	`fõld_cou¡
(); i++) {

627 i‡(
±u∂e
->
_pvÆues
[
i
].
	`fõld_desc
()->
	`Ælow_nuŒ
()) {

628 
nuŒ_ödex
++;

629 i‡(
±u∂e
->
_pvÆues
[
i
].
	`is_nuŒ
()) {

630 
	`SET_NULL_FLAG
(
¨ï
.
_de°
, 
nuŒ_ödex
);

638 i‡(
±u∂e
->
_pvÆues
[
i
].
	`is_v¨übÀ_Àngth
()) {

639 
±u∂e
->
_pvÆues
[
i
].
	`c›y_vÆue
(
¨ï
.
_de°
 + 
v¨_off£t
);

640 
off£t
 = 
±u∂e
->
_pvÆues
[
i
].
	`ªÆsize
();

641 
v¨_off£t
 +
off£t
;

644 
off£t_t
 
Àn
 = 
off£t
;

645 
	`mem˝y
(
	`VAR_SLOT
(
¨ï
.
_de°
, 
v¨_¶Ÿ_off£t
), &
Àn
, (
off£t_t
));

646 
v¨_¶Ÿ_off£t
 +(
off£t_t
);

653 
±u∂e
->
_pvÆues
[
i
].
	`c›y_vÆue
(
¨ï
.
_de°
 + 
fixed_off£t
);

654 
fixed_off£t
 +
±u∂e
->
_pvÆues
[
i
].
	`maxsize
();

657  (
tupsize
);

658 
	}
}

676 
boﬁ
 
	gèbÀ_m™_t
::
	$lﬂd
(
èbÀ_tu∂e
* 
±u∂e
,

677 c⁄° * 
d©a
)

680 
	`as£π
 (
±u∂e
);

681 
	`as£π
 (
d©a
);

686 
off£t_t
 
fixed_off£t
 = 
±u∂e
->
	`gë_fixed_off£t
();

689 
off£t_t
 
v¨_¶Ÿ_off£t
 = 
±u∂e
->
	`gë_v¨_¶Ÿ_off£t
();

692 
off£t_t
 
v¨_off£t
 = 
±u∂e
->
	`gë_v¨_off£t
();

697 
nuŒ_ödex
 = -1;

698 
uöt_t
 
i
=0; i<
_±abÀ
->
	`fõld_cou¡
(); i++) {

705 i‡(
±u∂e
->
_pvÆues
[
i
].
	`fõld_desc
()->
	`Ælow_nuŒ
()) {

706 
nuŒ_ödex
++;

707 i‡(
	`IS_NULL_FLAG
(
d©a
, 
nuŒ_ödex
)) {

708 
±u∂e
->
_pvÆues
[
i
].
	`£t_nuŒ
();

719 i‡(
±u∂e
->
_pvÆues
[
i
].
	`is_v¨übÀ_Àngth
()) {

720 
off£t_t
 
v¨_Àn
;

721 
	`mem˝y
(&
v¨_Àn
, 
	`VAR_SLOT
(
d©a
, 
v¨_¶Ÿ_off£t
), (
off£t_t
));

722 
±u∂e
->
_pvÆues
[
i
].
	`£t_vÆue
(
d©a
+
v¨_off£t
, 
v¨_Àn
);

723 
v¨_off£t
 +
v¨_Àn
;

724 
v¨_¶Ÿ_off£t
 +(
off£t_t
);

730 
±u∂e
->
_pvÆues
[
i
].
	`£t_vÆue
(
d©a
+
fixed_off£t
,

731 
±u∂e
->
_pvÆues
[
i
].
	`maxsize
());

732 
fixed_off£t
 +
±u∂e
->
_pvÆues
[
i
].
	`maxsize
();

735  (
åue
);

736 
	}
}

758 
	gèbÀ_m™_t
::
	$f‹m©_key
(
ödex_desc_t
* 
pödex
,

759 
èbÀ_tu∂e
* 
±u∂e
,

760 
ªp_row_t
 &
¨ï
)

762 
	`as£π
 (
_±abÀ
);

763 
	`as£π
 (
pödex
);

764 
	`as£π
 (
±u∂e
);

767 
isz
 = 
	`key_size
(
pödex
, 
±u∂e
);

768 
	`as£π
 (
isz
);

771 
¨ï
.
	`£t
(
isz
);

774 
off£t_t
 
off£t
 = 0;

775 
uöt_t
 
i
=0; i<
pödex
->
	`fõld_cou¡
(); i++) {

776 
ix
 = 
pödex
->
	`key_ödex
(
i
);

777 
fõld_vÆue_t
* 
pfv
 = &
±u∂e
->
_pvÆues
[
ix
];

780 i‡(!
pfv
->
	`c›y_vÆue
(
¨ï
.
_de°
+
off£t
)) {

781 
	`as£π
 (
Ál£
);

787 
off£t
 +
pfv
->
	`maxsize
();

789  (
isz
);

790 
	}
}

811 
boﬁ
 
	gèbÀ_m™_t
::
	$lﬂd_key
(c⁄° * 
°rög
,

812 
ödex_desc_t
* 
pödex
,

813 
èbÀ_tu∂e
* 
±u∂e
)

815 
	`as£π
 (
_±abÀ
);

816 
	`as£π
 (
pödex
);

817 
	`as£π
 (
°rög
);

819 
off£t
 = 0;

820 
uöt_t
 
i
=0; i<
pödex
->
	`fõld_cou¡
(); i++) {

821 
uöt_t
 
fõld_ödex
 = 
pödex
->
	`key_ödex
(
i
);

822 
uöt_t
 
size
 = 
±u∂e
->
_pvÆues
[
fõld_ödex
].
	`maxsize
();

823 
±u∂e
->
_pvÆues
[
fõld_ödex
].
	`£t_vÆue
(
°rög
 + 
off£t
, 
size
);

824 
off£t
 +
size
;

827  (
åue
);

828 
	}
}

842 
	gèbÀ_m™_t
::
	$mö_key
(
ödex_desc_t
* 
pödex
,

843 
èbÀ_tu∂e
* 
±u∂e
,

844 
ªp_row_t
 &
¨ï
)

846 
	`as£π
 (
_±abÀ
);

847 
uöt_t
 
i
=0; i<
pödex
->
	`fõld_cou¡
(); i++) {

848 
uöt_t
 
fõld_ödex
 = 
pödex
->
	`key_ödex
(
i
);

849 
±u∂e
->
_pvÆues
[
fõld_ödex
].
	`£t_mö_vÆue
();

851  (
	`f‹m©_key
(
pödex
, 
±u∂e
, 
¨ï
));

852 
	}
}

855 
	gèbÀ_m™_t
::
	$max_key
(
ödex_desc_t
* 
pödex
,

856 
èbÀ_tu∂e
* 
±u∂e
,

857 
ªp_row_t
 &
¨ï
)

859 
	`as£π
 (
_±abÀ
);

860 
uöt_t
 
i
=0; i<
pödex
->
	`fõld_cou¡
(); i++) {

861 
uöt_t
 
fõld_ödex
 = 
pödex
->
	`key_ödex
(
i
);

862 
±u∂e
->
_pvÆues
[
fõld_ödex
].
	`£t_max_vÆue
();

864  (
	`f‹m©_key
(
pödex
, 
±u∂e
, 
¨ï
));

865 
	}
}

884 
	gèbÀ_m™_t
::
	$key_size
(
ödex_desc_t
* 
pödex
,

885 c⁄° 
èbÀ_tu∂e
*) const

887 
	`as£π
 (
_±abÀ
);

888  (
_±abÀ
->
	`ödex_maxkeysize
(
pödex
));

889 
	}
}

897 
	gèbÀ_m™_t
::
	$gë_≤um
(
ödex_desc_t
* 
pödex
,

898 
èbÀ_tu∂e
 c⁄°* 
±u∂e
) const

900 
	`as£π
(
±u∂e
);

901 
	`as£π
(
pödex
);

902 if(!
pödex
->
	`is_∑πôi⁄ed
())

905 
fú°_key
;

906 
±u∂e
->
	`gë_vÆue
(
pödex
->
	`key_ödex
(0), 
fú°_key
);

907  (
fú°_key
 % 
pödex
->
	`gë_∑πôi⁄_cou¡
());

908 
	}
}

912 
mcs_lock
 
	gèbÀ_m™_t
::
ªgi°î_èbÀ_lock
;

913 
	g°d
::
m≠
<
°id_t
, 
	gèbÀ_m™_t
*>ÅabÀ_m™_t::
°id_to_èbÀm™
;

915 
	gèbÀ_m™_t
::
	$ªgi°î_èbÀ_m™
()

917 
	`CRITICAL_SECTION
(
ªgèbÀcs
,
ªgi°î_èbÀ_lock
);

918 
°id_to_èbÀm™
[
this
->
	`èbÀ
()->
	`fid
()] =Åhis;

919 
	}
}

932 
w_rc_t
 
	gèbÀ_m™_t
::
	$lﬂd_™d_ªgi°î_fid
(
ss_m
* 
db
)

934 
	`as£π
 (
_±abÀ
);

935 
	`as£π
 (
db
);

937 
_±abÀ
->
	`£t_db
(
db
);

938 
	`W_DO
(
_±abÀ
->
	`check_fid
(
db
));

939 
	`ªgi°î_èbÀ_m™
();

941 
ödex_desc_t
* 
ödex
 = 
_±abÀ
->
	`ödexes
();

942 
ödex
) {

943 
	`W_DO
(
ödex
->
	`check_fid
(
db
));

944 
ödex
 = index->
	`√xt
();

946  (
RCOK
);

947 
	}
}

961 
w_rc_t
 
	gèbÀ_m™_t
::
	$ödex_¥obe
(
ss_m
* 
db
,

962 
ödex_desc_t
* 
pödex
,

963 
èbÀ_tu∂e
* 
±u∂e
,

964 
lock_mode_t
 
lock_mode
,

965 c⁄° 
Õid_t
& 
roŸ
)

967 
	`as£π
 (
_±abÀ
);

968 
	`as£π
 (
pödex
);

969 
	`as£π
 (
±u∂e
);

970 
	`as£π
 (
±u∂e
->
_ªp
);

972 
uöt4_t
 
sy°em_mode
 = 
pödex
->
	`gë_pd
();

974 
boﬁ
 
found
 = 
Ál£
;

975 
smsize_t
 
Àn
 = (
rid_t
);

980 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

981 i‡(
pödex
->
	`is_ªœxed
()) {

982 
lock_mode
 = 
NL
;

983 
bIgn‹eLocks
 = 
åue
;

987 
key_sz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, *±u∂e->
_ªp
);

988 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

990 
≤um
 = 
	`gë_≤um
(
pödex
, 
±u∂e
);

992 i‡(
pödex
->
	`is_mr
()) {

995 
	`W_DO
(
ss_m
::
	`föd_mr_assoc
(
pödex
->
	`fid
(
≤um
),

996 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

997 &(
±u∂e
->
_rid
),

998 
Àn
,

999 
found
,

1000 
bIgn‹eLocks
,

1001 
pödex
->
	`is_œtchÀss
(),

1002 
roŸ


1006 
	`W_DO
(
ss_m
::
	`föd_assoc
(
pödex
->
	`fid
(
≤um
),

1007 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

1008 &(
±u∂e
->
_rid
),

1009 
Àn
,

1010 
found
,

1011 
bIgn‹eLocks


1015 i‡(!
found
Ë 
	`RC
(
£_TUPLE_NOT_FOUND
);

1018 
pö_i
 
pö
;

1019 
œtch_mode_t
 
hóp_œtch_mode
 = 
LATCH_SH
;

1020 i‡(
sy°em_mode
 & (
PD_MRBT_PART
 | 
PD_MRBT_LEAF
)Ë
hóp_œtch_mode
 = 
LATCH_NLS
;

1021 
	`W_DO
(
pö
.
	`pö
(
±u∂e
->
	`rid
(), 0, 
lock_mode
, 
hóp_œtch_mode
));

1023 i‡(!
	`lﬂd
(
±u∂e
, 
pö
.
	`body
())) {

1024 
pö
.
	`u≈ö
();

1025  
	`RC
(
£_WRONG_DISK_DATA
);

1027 
pö
.
	`u≈ö
();

1028  (
RCOK
);

1029 
	}
}

1052 
w_rc_t
 
	gèbÀ_m™_t
::
	$add_tu∂e
(
ss_m
* 
db
,

1053 
èbÀ_tu∂e
* 
±u∂e
,

1054 c⁄° 
lock_mode_t
 
lock_mode
,

1055 c⁄° 
Õid_t
& 
¥im¨y_roŸ
)

1057 
	`as£π
 (
_±abÀ
);

1058 
	`as£π
 (
±u∂e
);

1059 
	`as£π
 (
±u∂e
->
_ªp
);

1060 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1062 i‡((
sy°em_mode
 & (
PD_MRBT_PART
 | 
PD_MRBT_LEAF
)) &&

1063 (
_±abÀ
->
	`¥im¨y_idx
(Ë&& _±abÀ->¥im¨y_idx()->
	`is_œtchÀss
())) {

1064  (
	`add_∂p_tu∂e
(
db
,
±u∂e
,
lock_mode
,
sy°em_mode
,
¥im¨y_roŸ
));

1068 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1069 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1073 
tsz
 = 
	`f‹m©
(
±u∂e
, *±u∂e->
_ªp
);

1074 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1076 
	`W_DO
(
db
->
	`¸óã_ªc
(
_±abÀ
->
	`fid
(),

1077 
	`vec_t
(),

1078 
tsz
,

1079 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
tsz
),

1080 
±u∂e
->
_rid
,

1081 
bIgn‹eLocks


1085 
ödex_desc_t
* 
ödex
 = 
_±abÀ
->
	`ödexes
();

1086 
ksz
 = 0;

1088 
ödex
) {

1089 
ksz
 = 
	`f‹m©_key
(
ödex
, 
±u∂e
, *±u∂e->
_ªp
);

1090 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1092 
≤um
 = 
	`gë_≤um
(
ödex
, 
±u∂e
);

1094 i‡(
ödex
->
	`is_mr
()) {

1095 
ss_m
::
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloc_func
 = &
ªloˇã_ªc‹ds
;

1096 
ñ_fûÀr
 
ef
;

1097 
ef
.
_ñ
.
	`put
(
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)));

1098 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
ödex
->
	`fid
(
≤um
),

1099 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
ksz
),

1100 
ef
,

1101 
bIgn‹eLocks
,

1102 
bIgn‹eLocks
 && 
ödex
->
	`is_œtchÀss
(),

1103 
ªloc_func
,

1104 (
ödex
->
	`is_¥im¨y
(Ë? 
¥im¨y_roŸ
 : 
Õid_t
::
nuŒ
)

1108 
	`W_DO
(
db
->
	`¸óã_assoc
(
ödex
->
	`fid
(
≤um
),

1109 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
ksz
),

1110 
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)),

1111 
bIgn‹eLocks


1115 
ödex
 = index->
	`√xt
();

1117  (
RCOK
);

1118 
	}
}

1133 
w_rc_t
 
	gèbÀ_m™_t
::
	$add_ödex_íåy
(
ss_m
* 
db
,

1134 c⁄° * 
idx_«me
,

1135 
èbÀ_tu∂e
* 
±u∂e
,

1136 c⁄° 
lock_mode_t
 
lock_mode
,

1137 c⁄° 
Õid_t
& 
¥im¨y_roŸ
)

1139 
	`as£π
 (
_±abÀ
);

1140 
	`as£π
 (
±u∂e
);

1141 
	`as£π
 (
±u∂e
->
_ªp
);

1144 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
(
idx_«me
);

1145 
	`as£π
 (
pödex
);

1147 i‡(!
±u∂e
->
	`is_rid_vÆid
()Ë 
	`RC
(
£_NO_CURRENT_TUPLE
);

1149 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1152 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1153 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1156 
ksz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, *±u∂e->
_ªp
);

1157 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1159 
≤um
 = 
	`gë_≤um
(
pödex
, 
±u∂e
);

1161 i‡(
pödex
->
	`is_mr
()) {

1162 
ss_m
::
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloc_func
 = &
ªloˇã_ªc‹ds
;

1163 
ñ_fûÀr
 
ef
;

1164 
ef
.
_ñ
.
	`put
(
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)));

1165 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
pödex
->
	`fid
(
≤um
),

1166 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
ksz
),

1167 
ef
,

1168 
bIgn‹eLocks
,

1169 
pödex
->
	`is_œtchÀss
(),

1170 
ªloc_func
,

1171 (
pödex
->
	`is_¥im¨y
(Ë? 
¥im¨y_roŸ
 : 
Õid_t
::
nuŒ
)

1175 
	`W_DO
(
db
->
	`¸óã_assoc
(
pödex
->
	`fid
(
≤um
),

1176 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
ksz
),

1177 
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)),

1178 
bIgn‹eLocks


1182  (
RCOK
);

1183 
	}
}

1210 
	gñ_fûÀr_∑π
::
	$ñ_fûÀr_∑π
(
size_t
 
ödexíåysz
,

1211 
ss_m
* 
db
,

1212 
èbÀ_m™_t
* 
±abÀm™
,

1213 
èbÀ_tu∂e
* 
±u∂e
,

1214 
ödex_desc_t
* 
pödex
,

1215 
boﬁ
 
bIgn‹eLocks
)

1216 : 
	`_db
(
db
),
	`_±abÀm™
(
±abÀm™
), 
	`_±u∂e
(
±u∂e
), 
	`_pödex
(
pödex
),

1217 
	$_bIgn‹eLocks
(
bIgn‹eLocks
)

1219 
_ñ_size
 = 
ödexíåysz
;

1220 
	`as£π
 (
db
);

1221 
	`as£π
 (
±abÀm™
);

1222 
	`as£π
 (
±u∂e
);

1223 
	`as£π
 (
pödex
);

1224 
	}
}

1227 
rc_t
 
	gñ_fûÀr_∑π
::
	$fûl_ñ
(
vec_t
& 
ñ
, c⁄° 
Õid_t
& 
Àaf
)

1231 
tsz
 = 
_±abÀm™
->
	`f‹m©
(
_±u∂e
, *_±u∂e->
_ªp
);

1232 
	`as£π
 (
_±u∂e
->
_ªp
->
_de°
);

1236 
rc_t
 
rc
 = 
_db
->
	`föd_∑ge_™d_¸óã_mrbt_ªc
(
_±abÀm™
->
	`èbÀ
()->
	`fid
(),

1237 
Àaf
,

1238 
	`vec_t
(),

1239 
tsz
,

1240 
	`vec_t
(
_±u∂e
->
_ªp
->
_de°
, 
tsz
),

1241 
_±u∂e
->
_rid
,

1242 
_bIgn‹eLocks
,

1243 
_bIgn‹eLocks
);

1244 
ñ
.
	`put
(
	`vec_t
(&(
_±u∂e
->
_rid
), (
rid_t
)));

1246  
rc
;

1247 
	}
}

1260 
w_rc_t
 
	gèbÀ_m™_t
::
ªloˇã_ªc‹ds
(
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

1261 
ve˘‹
<
rid_t
>& 
√w_rids
)

1266 
as£π
(
ﬁd_rids
.
size
(Ë=
√w_rids
.size() && old_rids.size() > 0);

1268 
	gve˘‹
<
	trid_t
>::
	tôî©‹
 
	tRIDIt
;

1271 
RIDIt
 
	gﬁd_ridô
 = 
ﬁd_rids
.
begö
();

1272 
RIDIt
 
	g√w_ridô
 = 
√w_rids
.
begö
();

1273 
èbÀ_m™_t
* 
	gmy_èbÀ_m™
 =ÅabÀ_m™_t::
°id_to_èbÀm™
[(*
ﬁd_ridô
).
pid
.
_°id
];

1276 if(
	gmy_èbÀ_m™
->
èbÀ
()->
ödex_cou¡
() > 1) {

1277 
ödex_desc_t
* 
	gpödex
;

1278 
èbÀ_row_t
* 
	g©u∂e
 = 
√w
Åable_row_t();

1279 
	g©u∂e
->
£tup
(
my_èbÀ_m™
->
èbÀ
());

1280 
	gksz
;

1281 
boﬁ
 
	gfound
 = 
Ál£
;

1282 
ªp_row_t
 
¨ïrow
(
my_èbÀ_m™
->
ts
());

1283 
	g¨ïrow
.
£t
(
my_èbÀ_m™
->
èbÀ
()->
maxsize
());

1284 
	g©u∂e
->
	g_ªp
 = &
¨ïrow
;

1285 
	g≤um
;

1289 
	gﬁd_ridô
 !
ﬁd_rids
.
íd
(Ë&& 
√w_ridô
 !
√w_rids
.end();

1290 
	gﬁd_ridô
++,
	g√w_ridô
++) {

1293 
	g©u∂e
->
£t_rid
(*
√w_ridô
);

1294 
	gmy_èbÀ_m™
->
ªad_tu∂e
(
©u∂e
);

1297 
	gpödex
 = 
my_èbÀ_m™
->
èbÀ
()->
ödexes
();

1298 
	gpödex
) {

1299 if(!
	gpödex
->
is_¥im¨y
()) {

1300 
	gfound
 = 
Ál£
;

1301 
	g≤um
 = 
my_èbÀ_m™
->
gë_≤um
(
pödex
, 
©u∂e
);

1303 
	gksz
 = 
my_èbÀ_m™
->
f‹m©_key
(
pödex
, 
©u∂e
, *©u∂e->
_ªp
);

1304 
as£π
 (
©u∂e
->
_ªp
->
_de°
);

1305 
W_DO
–
ss_m
::
upd©e_mr_assoc
(
pödex
->
fid
(
≤um
),

1306 
vec_t
(
©u∂e
->
_ªp
->
_de°
, 
ksz
),

1307 
vec_t
(&(*
ﬁd_ridô
),(
rid_t
)),

1308 
vec_t
(&(*
√w_ridô
),(
rid_t
)),

1309 
found
) );

1310 
as£π
(
found
);

1312 
	gpödex
 = 
pödex
->
√xt
();

1317 
dñëe
 
	g©u∂e
;

1318 
	g©u∂e
 = 
NULL
;

1320  (
	gRCOK
);

1324 
w_rc_t
 
	gèbÀ_m™_t
::
	$add_∂p_tu∂e
(
ss_m
* 
db
,

1325 
èbÀ_tu∂e
* 
±u∂e
,

1326 c⁄° 
lock_mode_t
 
lock_mode
,

1327 c⁄° 
uöt
 
sy°em_mode
,

1328 c⁄° 
Õid_t
& 
¥im¨y_roŸ
)

1330 
	`as£π
 (
sy°em_mode
 & (
PD_MRBT_PART
 | 
PD_MRBT_LEAF
));

1333 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1334 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1338 
ödex_desc_t
* 
¥im¨y_ödex
 = 
_±abÀ
->
	`¥im¨y_idx
();

1339 
	`as£π
 (
¥im¨y_ödex
);

1340 
	`as£π
 (
¥im¨y_ödex
->
	`is_mr
());

1342 
ksz
 = 
	`f‹m©_key
(
¥im¨y_ödex
, 
±u∂e
, *±u∂e->
_ªp_key
);

1343 
	`as£π
 (
±u∂e
->
_ªp_key
->
_de°
);

1345 
≤um
 = 
	`gë_≤um
(
¥im¨y_ödex
, 
±u∂e
);

1347 
ss_m
::
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloc_func
 = &
ªloˇã_ªc‹ds
;

1348 
ñ_fûÀr_∑π
 
	`∑π_fûÀr
((
rid_t
),
db
,
this
,
±u∂e
,
¥im¨y_ödex
,
bIgn‹eLocks
);

1349 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
¥im¨y_ödex
->
	`fid
(
≤um
),

1350 
	`vec_t
(
±u∂e
->
_ªp_key
->
_de°
, 
ksz
),

1351 
∑π_fûÀr
,

1352 
bIgn‹eLocks
,

1353 
bIgn‹eLocks
 && 
¥im¨y_ödex
->
	`is_œtchÀss
(),

1354 
ªloc_func
,

1355 
¥im¨y_roŸ
));

1358 
ödex_desc_t
* 
ödex
 = 
_±abÀ
->
	`ödexes
();

1359 
ödex
) {

1363 i‡(
ödex
->
	`is_¥im¨y
()) {

1364 
ödex
 = index->
	`√xt
();

1368 
ksz
 = 
	`f‹m©_key
(
ödex
, 
±u∂e
, *±u∂e->
_ªp_key
);

1369 
	`as£π
 (
±u∂e
->
_ªp_key
->
_de°
);

1371 
≤um
 = 
	`gë_≤um
(
ödex
, 
±u∂e
);

1373 i‡(
ödex
->
	`is_mr
()) {

1374 
ñ_fûÀr
 
ef
;

1375 
ef
.
_ñ
.
	`put
(
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)));

1376 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
ödex
->
	`fid
(
≤um
),

1377 
	`vec_t
(
±u∂e
->
_ªp_key
->
_de°
, 
ksz
),

1378 
ef
,

1379 
bIgn‹eLocks
,

1380 
bIgn‹eLocks
 && 
ödex
->
	`is_œtchÀss
(),

1381 
NULL
,

1382 
Õid_t
::
nuŒ
));

1385 
	`W_DO
(
db
->
	`¸óã_assoc
(
ödex
->
	`fid
(
≤um
),

1386 
	`vec_t
(
±u∂e
->
_ªp_key
->
_de°
, 
ksz
),

1387 
	`vec_t
(&(
±u∂e
->
_rid
), (
rid_t
)),

1388 
bIgn‹eLocks


1392 
ödex
 = index->
	`√xt
();

1394  (
RCOK
);

1395 
	}
}

1412 
w_rc_t
 
	gèbÀ_m™_t
::
	$dñëe_tu∂e
(
ss_m
* 
db
,

1413 
èbÀ_tu∂e
* 
±u∂e
,

1414 c⁄° 
lock_mode_t
 
lock_mode
,

1415 c⁄° 
Õid_t
& 
¥im¨y_roŸ
)

1417 
	`as£π
 (
_±abÀ
);

1418 
	`as£π
 (
±u∂e
);

1419 
	`as£π
 (
±u∂e
->
_ªp
);

1421 i‡(!
±u∂e
->
	`is_rid_vÆid
()Ë 
	`RC
(
£_NO_CURRENT_TUPLE
);

1423 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1424 
rid_t
 
todñëe
 = 
±u∂e
->
	`rid
();

1427 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1428 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1432 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`ödexes
();

1433 
key_sz
 = 0;

1435 
pödex
) {

1436 
key_sz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, *±u∂e->
_ªp
);

1437 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1439 
≤um
 = 
	`gë_≤um
(
pödex
, 
±u∂e
);

1441 i‡(
pödex
->
	`is_mr
()) {

1442 
	`W_DO
(
db
->
	`de°roy_mr_assoc
(
pödex
->
	`fid
(
≤um
),

1443 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

1444 
	`vec_t
(&(
todñëe
), (
rid_t
)),

1445 
bIgn‹eLocks
,

1446 
pödex
->
	`is_œtchÀss
(),

1447 (
pödex
->
	`is_¥im¨y
(Ë? 
¥im¨y_roŸ
 : 
Õid_t
::
nuŒ
)));

1450 
	`W_DO
(
db
->
	`de°roy_assoc
(
pödex
->
	`fid
(
≤um
),

1451 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

1452 
	`vec_t
(&(
todñëe
), (
rid_t
)),

1453 
bIgn‹eLocks


1458 
pödex
 =Öödex->
	`√xt
();

1463 i‡(
sy°em_mode
 & ( 
PD_MRBT_LEAF
 | 
PD_MRBT_PART
) ) {

1464 
	`W_DO
(
db
->
	`de°roy_mrbt_ªc
–
todñëe
,

1465 
bIgn‹eLocks
,

1466 
åue
));

1470 
	`W_DO
(
db
->
	`de°roy_ªc
(
todñëe
, 
bIgn‹eLocks
));

1474 
±u∂e
->
	`£t_rid
(
rid_t
::
nuŒ
);

1475  (
RCOK
);

1476 
	}
}

1492 
w_rc_t
 
	gèbÀ_m™_t
::
	$dñëe_ödex_íåy
(
ss_m
* 
db
,

1493 c⁄° * 
idx_«me
,

1494 
èbÀ_tu∂e
* 
±u∂e
,

1495 c⁄° 
lock_mode_t
 
lock_mode
,

1496 c⁄° 
Õid_t
& 
¥im¨y_roŸ
)

1498 
	`as£π
 (
_±abÀ
);

1499 
	`as£π
 (
±u∂e
);

1500 
	`as£π
 (
±u∂e
->
_ªp
);

1502 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
(
idx_«me
);

1503 
	`as£π
 (
pödex
);

1505 i‡(!
±u∂e
->
	`is_rid_vÆid
()Ë 
	`RC
(
£_NO_CURRENT_TUPLE
);

1507 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1508 
rid_t
 
todñëe
 = 
±u∂e
->
	`rid
();

1511 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1512 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1515 
key_sz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, *±u∂e->
_ªp
);

1516 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1518 
≤um
 = 
	`gë_≤um
(
pödex
, 
±u∂e
);

1520 i‡(
pödex
->
	`is_mr
()) {

1521 
	`W_DO
(
db
->
	`de°roy_mr_assoc
(
pödex
->
	`fid
(
≤um
),

1522 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

1523 
	`vec_t
(&(
todñëe
), (
rid_t
)),

1524 
bIgn‹eLocks
,

1525 
pödex
->
	`is_œtchÀss
(),

1526 (
pödex
->
	`is_¥im¨y
(Ë? 
¥im¨y_roŸ
 : 
Õid_t
::
nuŒ
)));

1529 
	`W_DO
(
db
->
	`de°roy_assoc
(
pödex
->
	`fid
(
≤um
),

1530 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
key_sz
),

1531 
	`vec_t
(&(
todñëe
), (
rid_t
)),

1532 
bIgn‹eLocks


1536  (
RCOK
);

1537 
	}
}

1559 
w_rc_t
 
	gèbÀ_m™_t
::
	$upd©e_tu∂e
(
ss_m
* ,

1560 
èbÀ_tu∂e
* 
±u∂e
,

1561 c⁄° 
lock_mode_t
 
lock_mode
)

1563 
	`as£π
 (
_±abÀ
);

1564 
	`as£π
 (
±u∂e
);

1565 
	`as£π
 (
±u∂e
->
_ªp
);

1567 i‡(!
±u∂e
->
	`is_rid_vÆid
()Ë 
	`RC
(
£_NO_CURRENT_TUPLE
);

1569 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1570 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
;

1571 i‡(
lock_mode
==
NL
Ë
bIgn‹eLocks
 = 
åue
;

1573 
boﬁ
 
no_hóp_œtch
 = 
Ál£
;

1574 
œtch_mode_t
 
hóp_œtch_mode
 = 
LATCH_EX
;

1575 i‡(
sy°em_mode
 & ( 
PD_MRBT_LEAF
 | 
PD_MRBT_PART
) ) {

1576 
no_hóp_œtch
 = 
åue
;

1577 
hóp_œtch_mode
 = 
LATCH_NLX
;

1581 
pö_i
 
pö
;

1582 
	`W_DO
(
pö
.
	`pö
(
±u∂e
->
	`rid
(), 0, 
lock_mode
, 
hóp_œtch_mode
));

1583 
cuºít_size
 = 
pö
.
	`body_size
();

1587 
tsz
 = 
	`f‹m©
(
±u∂e
, *±u∂e->
_ªp
);

1588 
	`as£π
 (
±u∂e
->
_ªp
->
_de°
);

1591 
w_rc_t
 
rc
;

1592 i‡(
cuºít_size
 < 
tsz
) {

1593 
zvec_t
 
	`azv
(
tsz
 - 
cuºít_size
);

1595 i‡(
no_hóp_œtch
) {

1596 
rc
 = 
pö
.
	`≠≥nd_mrbt_ªc
(
azv
,
hóp_œtch_mode
);

1599 
rc
 = 
pö
.
	`≠≥nd_ªc
(
azv
);

1603 i‡(
rc
.
	`is_îr‹
()) {

1604 
	`TRACE
–
TRACE_DEBUG
, "Error updating (byáppend)Ñecord\n");

1605 
pö
.
	`u≈ö
();

1607 
	`W_DO
(
rc
);

1612 i‡(
no_hóp_œtch
) {

1613 
rc
 = 
pö
.
	`upd©e_mrbt_ªc
(0, 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
tsz
),

1614 
bIgn‹eLocks
, 
åue
);

1616 
rc
 = 
pö
.
	`upd©e_ªc
(0, 
	`vec_t
(
±u∂e
->
_ªp
->
_de°
, 
tsz
), 
bIgn‹eLocks
);

1619 i‡(
rc
.
	`is_îr‹
()Ë
	`TRACE
–
TRACE_DEBUG
, "Error updatingÑecord\n");

1622 
pö
.
	`u≈ö
();

1623  (
rc
);

1624 
	}
}

1641 
w_rc_t
 
	gèbÀ_m™_t
::
	$ªad_tu∂e
(
èbÀ_tu∂e
* 
±u∂e
,

1642 
lock_mode_t
 
lock_mode
,

1643 
œtch_mode_t
 
hóp_œtch_mode
)

1645 
	`as£π
 (
_±abÀ
);

1646 
	`as£π
 (
±u∂e
);

1648 i‡(!
±u∂e
->
	`is_rid_vÆid
()Ë 
	`RC
(
£_NO_CURRENT_TUPLE
);

1650 
uöt4_t
 
sy°em_mode
 = 
_±abÀ
->
	`gë_pd
();

1651 i‡(
sy°em_mode
 & ( 
PD_MRBT_LEAF
 | 
PD_MRBT_PART
) ) {

1652 
hóp_œtch_mode
 = 
LATCH_NLS
;

1653 
lock_mode
 = 
NL
;

1656 
pö_i
 
pö
;

1657 
	`W_DO
(
pö
.
	`pö
(
±u∂e
->
	`rid
(), 0, 
lock_mode
, 
hóp_œtch_mode
));

1658 i‡(!
	`lﬂd
(
±u∂e
, 
pö
.
	`body
())) {

1659 
pö
.
	`u≈ö
();

1660  
	`RC
(
£_WRONG_DISK_DATA
);

1662 
pö
.
	`u≈ö
();

1664  (
RCOK
);

1665 
	}
}

1685 
w_rc_t
 
	gèbÀ_m™_t
::
	$„tch_èbÀ
(
ss_m
* 
db
, 
lock_mode_t
 
Æm
)

1687 
	`as£π
 (
db
);

1688 
	`as£π
 (
_±abÀ
);

1690 
boﬁ
 
eof
 = 
Ál£
;

1691 
cou¡î
 = -1;

1692 
pö_i
* 
h™dÀ
;

1694 
	`W_DO
(
db
->
	`begö_x˘
());

1697 
sˇn_fûe_i
 
	`t_sˇn
(
_±abÀ
->
	`fid
(), 
ss_m
::
t_cc_ªc‹d
, 
Ál£
, 
Æm
);

1698 !
eof
) {

1699 
	`W_DO
(
t_sˇn
.
	`√xt_∑ge
(
h™dÀ
, 0, 
eof
));

1700 
cou¡î
++;

1702 
	`TRACE
–
TRACE_ALWAYS
, "%s:%dÖages\n", 
_±abÀ
->
	`«me
(), 
cou¡î
);

1705 
ödex_desc_t
* 
ödex
 = 
_±abÀ
->
	`ödexes
();

1706 
≤um
 = 0;

1707 
ödex
) {

1708 
≤um
 = 0;Önum < 
ödex
->
	`gë_∑πôi⁄_cou¡
();Önum++) {

1709 
sˇn_fûe_i
 
	`if_sˇn
(
ödex
->
	`fid
(
≤um
), 
ss_m
::
t_cc_ªc‹d
, 
Ál£
, 
Æm
);

1710 
eof
 = 
Ál£
;

1711 
cou¡î
 = -1;

1712 !
eof
) {

1713 
	`W_DO
(
if_sˇn
.
	`√xt_∑ge
(
h™dÀ
, 0, 
eof
));

1714 
cou¡î
++;

1716 
	`TRACE
–
TRACE_ALWAYS
, "\t%s:%dÖage†’num: %d)\n", 
ödex
->
	`«me
(), 
cou¡î
, 
≤um
);

1718 
ödex
 = index->
	`√xt
();

1721 
	`W_DO
(
db
->
	`commô_x˘
());

1723  (
RCOK
);

1724 
	}
}

1734 
	gèbÀ_„tchî_t
::
	$èbÀ_„tchî_t
(
Sh‹eEnv
* 
ív
)

1735 : 
	`thªad_t
("DB_FETCHER"), 
	$_ív
(
ív
)

1737 
	}
}

1739 
	gèbÀ_„tchî_t
::~
	$èbÀ_„tchî_t
()

1741 
	}
}

1743 
èbÀ_„tchî_t
::
	$w‹k
()

1745 
	`as£π
(
_ív
);

1746 
w_rc_t
 
e
 = 
_ív
->
	`db_„tch
();

1747 if(
e
.
	`is_îr‹
()) {

1748 
˚º
 << "Eº‹ whûê„tchög db!" << 
ídl
 << 
e
 <<Éndl;

1750 
	}
}

1760 
	gèbÀ_¥öãr_t
::
	$èbÀ_¥öãr_t
(
Sh‹eEnv
* 
ív
, 
löes
)

1761 : 
	`thªad_t
("DB_PRINTER"),

1762 
	`_ív
(
ív
), 
	$_löes
(
löes
)

1764 
	}
}

1766 
	gèbÀ_¥öãr_t
::~
	$èbÀ_¥öãr_t
()

1768 
	}
}

1770 
èbÀ_¥öãr_t
::
	$w‹k
()

1772 
	`as£π
(
_ív
);

1773 
w_rc_t
 
e
 = 
_ív
->
	`db_¥öt
(
_löes
);

1774 if(
e
.
	`is_îr‹
()) {

1775 
˚º
 << "Eº‹ whûê¥ötög db!" << 
ídl
 << 
e
 <<Éndl;

1777 
	}
}

1785 
	~<s°ªam
>

1786 c⁄°* 
	$db_¥ëty_¥öt
(
èbÀ_desc_t
 c⁄°* 
±desc
, , const* )

1788 
d©a
[1024];

1789 
°d
::
°rög°ªam
 
	`öout
(
d©a
, såög°ªam::
ö
 | såög°ªam::
out
);

1791 ((
èbÀ_desc_t
*)
±desc
)->
	`¥öt_desc
(
öout
);

1792 
öout
 << 
°d
::
íds
;

1793  
d©a
;

1794 
	}
}

	@src/sm/shore/shore_trx_worker.cpp

33 
	~"sm/sh‹e/sh‹e_åx_w‹kî.h
"

34 
	~"sm/sh‹e/sh‹e_ív.h
"

36 
ENTER_NAMESPACE
(
sh‹e
);

47 
	gåx_w‹kî_t
::
	$åx_w‹kî_t
(
Sh‹eEnv
* 
ív
, 
c_°r
 
äame
,

48 
¥o˚ss‹id_t
 
≠rsid
,

49 c⁄° 
u£_¶i
)

50 : 
	$ba£_w‹kî_t
(
ív
, 
äame
, 
≠rsid
, 
u£_¶i
)

52 
	`as£π
 (
ív
);

53 
_a˘i⁄poﬁ
 = 
√w
 
	`Poﬁ
((
Reque°
*),
REQUESTS_PER_WORKER_POOL_SZ
);

54 
_pqueue
 = 
√w
 
	`Queue
–
_a˘i⁄poﬁ
.
	`gë
() );

55 
	}
}

57 
	gåx_w‹kî_t
::~
	$åx_w‹kî_t
()

59 
_pqueue
 = 
NULL
;

60 
_a˘i⁄poﬁ
 = 
NULL
;

61 
	}
}

64 
	gåx_w‹kî_t
::
	$öô
(c⁄° 
lc
)

66 
_pqueue
->
	`£tqueue
(
WS_INPUT_Q
,
this
,
lc
,0);

67 
	}
}

80 
	gåx_w‹kî_t
::
	$_w‹k_ACTIVE_im∂
()

83 
_¥s_id
 = 
PBIND_NONE
;

84 
	`TRY_TO_BIND
(
_¥s_id
,
_is_bound
);

86 
w_rc_t
 
e
;

87 
Reque°
* 
¨
 = 
NULL
;

90 
	`gë_c⁄åﬁ
(Ë=
WC_ACTIVE
) {

93 
¨
 = 
NULL
;

94 
	`£t_ws
(
WS_LOOP
);

98 
¨
 = 
_pqueue
->
	`p›
();

101 i‡(
¨
) {

102 
	`_£rve_a˘i⁄
(
¨
);

103 ++
_°©s
.
_£rved_öput
;

105 #i‚de‡
CFG_FLUSHER


106 
_ív
->
_ªque°_poﬁ
.
	`de°roy
(
¨
);

111 
	}
}

125 
	gåx_w‹kî_t
::
	$_£rve_a˘i⁄
(
Reque°
* 
¥eque°
)

130 
	`as£π
 (
¥eque°
);

132 
tid_t
 
©id
;

134 
w_rc_t
 
e
 = 
_ív
->
	`db
()->
	`begö_x˘
(
©id
);

135 i‡(
e
.
	`is_îr‹
()) {

136 
	`TRACE
–
TRACE_TRX_FLOW
, "Problem beginning xct [0x%x]\n",

137 
e
.
	`îr_num
());

138 ++
_°©s
.
_¥obÀms
;

143 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

144 
	`as£π
 (
px˘
);

145 
	`TRACE
–
TRACE_TRX_FLOW
, "Begö (%d)\n", 
©id
.
	`gë_lo
());

146 
¥eque°
->
_x˘
 = 
px˘
;

147 
¥eque°
->
_tid
 = 
©id
;

151 
w_rc_t
 
e
 = 
_ív
->
	`run_⁄e_x˘
(
¥eque°
);

152 i‡(
e
.
	`is_îr‹
()) {

153 
	`TRACE
–
TRACE_TRX_FLOW
, "ProblemÑunning xct (%d) (%d) [0x%x]\n",

154 
¥eque°
->
_tid
.
	`gë_lo
(),Öªque°->
_x˘_id
, 
e
.
	`îr_num
());

155 ++
_°©s
.
_¥obÀms
;

161 ++
_°©s
.
_¥o˚s£d
;

163 
	}
}

176 
	gåx_w‹kî_t
::
	$_¥e_STOP_im∂
()

178 
Reque°
* 
¥
;

179 
ªqs_ªad
 = 0;

180 
ªqs_wrôe
 = 0;

181 
ªqs_abt
 = 0;

183 
	`as£π
 (
_pqueue
);

186 ; 
_pqueue
->
_ªad_pos
 !_pqueue->
_f‹_ªadîs
->
	`íd
(); _pqueue->_read_pos++) {

187 
¥
 = *(
_pqueue
->
_ªad_pos
);

188 ++
ªqs_ªad
;

189 i‡(
	`ab‹t_⁄e_åx
(
¥
->
_x˘
)Ë++
ªqs_abt
;

194 
	`CRITICAL_SECTION
(
q_cs
, 
_pqueue
->
_lock
);

195 
_pqueue
->
_ªad_pos
 = _pqueue->
_f‹_wrôîs
->
	`begö
();

196 
_pqueue
->
_ªad_pos
 !_pqueue->
_f‹_wrôîs
->
	`íd
();

197 
_pqueue
->
_ªad_pos
++)

199 
¥
 = *(
_pqueue
->
_ªad_pos
);

200 ++
ªqs_wrôe
;

201 i‡(
	`ab‹t_⁄e_åx
(
¥
->
_x˘
)Ë++
ªqs_abt
;

205 i‡((
ªqs_ªad
 + 
ªqs_wrôe
) > 0) {

206 
	`TRACE
–
TRACE_ALWAYS
, "(%d)áborted before stopping. (%d) (%d)\n",

207 
ªqs_abt
, 
ªqs_ªad
, 
ªqs_wrôe
);

209  (
ªqs_abt
);

210 
	}
}

213 
EXIT_NAMESPACE
(
sh‹e
);

	@src/sm/shore/shore_worker.cpp

32 
	~"sm/sh‹e/sh‹e_w‹kî.h
"

33 
	~"sm/sh‹e/sh‹e_ív.h
"

35 
ENTER_NAMESPACE
(
sh‹e
);

38 #ifde‡
WORKER_VERBOSE_STATS


39 #w¨nög 
Vîbo£
 
w‹kî
 
°©i°ics
 
íabÀd


42 #ifde‡
WORKER_VERY_VERBOSE_STATS


43 #w¨nög 
Vîy
 
vîbo£
 
w‹kî
 
°©i°ics
 
íabÀd
 (
avg
 
time
 
waôög
 
wödow
)

56 
	gw‹kî_°©s_t
::
	$¥öt_°©s
() const

58 
uöt
 
execuãd
 = 
_¥o˚s£d
 - 
_óæy_ab‹ts
;

61 
	`TRACE
–
TRACE_STATISTICS
, "Pro˚s£d (%d)\n", 
_¥o˚s£d
);

64 
	`TRACE
–
TRACE_STATISTICS
, "Executed (%d) \t%.1f%%\n",

65 
execuãd
, ()(100*execuãd)/()
_¥o˚s£d
);

68 
	`TRACE
–
TRACE_STATISTICS
, "FailureÑate (%d) \t%.1f%% \t%.1f%%\n",

69 
_¥obÀms
, ()(100*_¥obÀms)/()
_¥o˚s£d
,

70 ()(100*
_¥obÀms
)/()
execuãd
);

74 
	`TRACE
–
TRACE_STATISTICS
, "Input served (%d) \t%.1f%%\n",

75 
_£rved_öput
, ()(100*_£rved_öput)/()
_¥o˚s£d
);

80 
	`TRACE
–
TRACE_STATISTICS
, "Wait served (%d) \t%.1f%%\n",

81 
_£rved_waôög
, ()(100*_£rved_waôög)/()
_¥o˚s£d
);

84 
	`TRACE
–
TRACE_STATISTICS
, "Earlyáborts (%d) \t%.1f%%\n",

85 
_óæy_ab‹ts
, ()(100*_óæy_ab‹ts)/()
_¥o˚s£d
);

89 
	`TRACE
–
TRACE_STATISTICS
, "Midwayáborts (%d) \t%.1f%% \t%.1f%%\n",

90 
_mid_ab‹ts
, ()(100*_mid_ab‹ts)/()
_¥o˚s£d
,

91 ()(100*
_mid_ab‹ts
)/()
execuãd
);

97 
	`TRACE
–
TRACE_STATISTICS
, "Sleeped (%d) \t%.1f%%\n",

98 
_c⁄dex_¶ìp
, ()(100*_c⁄dex_¶ìp)/()
_¥o˚s£d
);

104 
	`TRACE
–
TRACE_STATISTICS
, "Failed sleep (%d) \t%.1f%%\n",

105 
_Áûed_¶ìp
, ()(100*_Áûed_¶ìp)/()
_¥o˚s£d
);

108 #ifde‡
WORKER_VERBOSE_STATS


111 
	`TRACE
–
TRACE_STATISTICS
, "Avg Action (%.3fms) \t(%.3fms)\n",

112 
_£rvög_tŸÆ
/()
_¥o˚s£d
, _£rvög_tŸÆ/()
execuãd
);

116 
	`TRACE
–
TRACE_STATISTICS
, "Avg RVPÉxec (%.3fms)\n",

117 
_rvp_exec_time
/()
_rvp_exec
);

121 
	`TRACE
–
TRACE_STATISTICS
, "Avg RVPÇotify (%.3fms)\n",

122 
_rvp_nŸify_time
/()
_rvp_exec
);

125 
	`TRACE
–
TRACE_STATISTICS
, "Avg i¿queuê (%.3f)\n", 
_waôög_tŸÆ
/()
_¥o˚s£d
);

127 #ifde‡
WORKER_VERY_VERBOSE_STATS


129 
i
=1; i<
WAITING_WINDOW
; i++) {

130 
	`TRACE
–
TRACE_STATISTICS
, "(%d -> %d). Wait (%.2f)\n",

131 
i
, i+1, 
_ww
[(
_ww_idx
+i)%
WAITING_WINDOW
]);

132 
	}
}

137 
	gw‹kî_°©s_t
&

138 
	gw‹kî_°©s_t
::
›î©‹
+(
w‹kî_°©s_t
 c⁄°& 
rhs
)

140 
_¥o˚s£d
 +
rhs
._processed;

141 
	g_¥obÀms
 +
rhs
.
_¥obÀms
;

143 
	g_£rved_öput
 +
rhs
.
_£rved_öput
;

144 
	g_£rved_waôög
 +
rhs
.
_£rved_waôög
;

146 
	g_c⁄dex_¶ìp
 +
rhs
.
_c⁄dex_¶ìp
;

147 
	g_Áûed_¶ìp
 +
rhs
.
_Áûed_¶ìp
;

149 
	g_óæy_ab‹ts
 +
rhs
.
_óæy_ab‹ts
;

150 
	g_mid_ab‹ts
 +
rhs
.
_mid_ab‹ts
;

152 #ifde‡
WORKER_VERBOSE_STATS


153 
	g_waôög_tŸÆ
 +
rhs
.
_waôög_tŸÆ
;

154 
	g_£rvög_tŸÆ
 +
rhs
.
_£rvög_tŸÆ
;

156 
	g_rvp_exec
 +
rhs
.
_rvp_exec
;

157 
	g_rvp_exec_time
 +
rhs
.
_rvp_exec_time
;

158 
	g_rvp_nŸify_time
 +
rhs
.
_rvp_nŸify_time
;

160 #ifde‡
WORKER_VERY_VERBOSE_STATS


161 
	gi
=0; i<
	gWAITING_WINDOW
; i++Ë
	g_ww
[
i
] +
rhs
.
_ww
[i];

162 
	g_ww_idx
 +
rhs
.
_ww_idx
;

163 
	g_œ°_ch™ge
 +
rhs
.
_œ°_ch™ge
;

167  (*
	gthis
);

171 
	gw‹kî_°©s_t
::
	$ª£t
()

173 
_¥o˚s£d
 = 0;

174 
_¥obÀms
 = 0;

176 
_£rved_öput
 = 0;

177 
_£rved_waôög
 = 0;

179 
_c⁄dex_¶ìp
 = 0;

180 
_Áûed_¶ìp
 = 0;

182 
_óæy_ab‹ts
 = 0;

183 
_mid_ab‹ts
 = 0;

185 #ifde‡
WORKER_VERBOSE_STATS


186 
_waôög_tŸÆ
 = 0;

187 
_£rvög_tŸÆ
 = 0;

189 
_rvp_exec
 = 0;

190 
_rvp_exec_time
 = 0;

191 
_rvp_nŸify_time
 = 0;

193 #ifde‡
WORKER_VERY_VERBOSE_STATS


194 
i
=0; i<
WAITING_WINDOW
; i++Ë
_ww
[i] = 0;

195 
_ww_idx
 = 0;

196 
_œ°_ch™ge
 = 0;

199 
	}
}

202 #ifde‡
WORKER_VERBOSE_STATS


204 
	gw‹kî_°©s_t
::
	$upd©e_waôed
(c⁄° 
queue_time
)

206 
_waôög_tŸÆ
 +
queue_time
;

207 #ifde‡
WORKER_VERY_VERBOSE_STATS


208 
_œ°_ch™ge
 +
_f‹_œ°_ch™ge
.
	`time
();

209 i‡(
_œ°_ch™ge
>1) {

211 
_ww_idx
 = (_ww_idx + 1Ë% 
WAITING_WINDOW
;

212 
_ww
[
_ww_idx
] = 0;

213 
_œ°_ch™ge
 = 0;

216 
_ww
[
_ww_idx
] +
queue_time
;

218 
	}
}

220 
	gw‹kî_°©s_t
::
	$upd©e_£rved
(c⁄° 
£rve_time_ms
)

222 
_£rvög_tŸÆ
 +
£rve_time_ms
;

223 
	}
}

225 
	gw‹kî_°©s_t
::
	$upd©e_rvp_exec_time
(c⁄° 
rvp_exec_time_ms
)

227 
_rvp_exec_time
 +
rvp_exec_time_ms
;

228 ++
_rvp_exec
;

229 
	}
}

231 
	gw‹kî_°©s_t
::
	$upd©e_rvp_nŸify_time
(c⁄° 
rvp_nŸify_time_ms
)

233 
_rvp_nŸify_time
 +
rvp_nŸify_time_ms
;

234 
	}
}

254 
	gba£_w‹kî_t
::
	$w‹k
()

256 
ss_m
::
	`£t_¶i_íabÀd
(
_u£_¶i
);

257 
rvÆ
 = 0;

260 
åue
) {

261 
	`gë_c⁄åﬁ
()) {

266 (
WC_PAUSED
):

267 i‡(
	`w‹k_PAUSED
())

271 (
WC_ACTIVE
):

273 
_ív
->
	`ív_thªad_öô
();

276 
rvÆ
 = 
	`w‹k_ACTIVE
();

278 
_ív
->
	`ív_thªad_föi
();

280 i‡(
rvÆ
)

284 (
WC_STOPPED
):

285 
	`w‹k_STOPPED
();

290 
	`as£π
(0);

293 
	}
}

310 
	gba£_w‹kî_t
::
	$_w‹k_PAUSED_im∂
()

317 
	`gë_c⁄åﬁ
(Ë=
WC_PAUSED
) {

318 
	`¶ìp
(1);

321 
	}
}

336 
	gba£_w‹kî_t
::
	$_w‹k_STOPPED_im∂
()

343 
x˘_t
* 
ax
 = 
smthªad_t
::
	`x˘
();

344 i‡(
ax
) {

345 
	`ab‹t_⁄e_åx
(
ax
);

346 
	`TRACE
–
TRACE_ALWAYS
, "Aborted one\n");

352 
	`_¥e_STOP_im∂
();

356 
	`CRITICAL_SECTION
(
√xt_cs
, 
_√xt_lock
);

357 i‡(
_√xt
) {

359 
_√xt
->
	`°›
();

360 
_√xt
->
	`joö
();

361 
	`TRACE
–
TRACE_DEBUG
, "Next joined...\n");

362 
	`dñëe
 (
_√xt
);

364 
_√xt
 = 
NULL
;

372 
	}
}

386 
boﬁ
 
	gba£_w‹kî_t
::
	$ab‹t_⁄e_åx
(
x˘_t
* 
ax˘
)

388 
	`as£π
 (
_ív
);

389 
	`as£π
 (
ax˘
);

390 
smthªad_t
::
	`me
()->
	`©èch_x˘
(
ax˘
);

391 
w_rc_t
 
e
 = 
ss_m
::
	`ab‹t_x˘
();

392 i‡(
e
.
	`is_îr‹
()) {

393 
	`TRACE
–
TRACE_ALWAYS
, "X˘áb‹àÁûed [0x%x]\n", 
e
.
	`îr_num
());

394  (
Ál£
);

396  (
åue
);

397 
	}
}

409 
	gba£_w‹kî_t
::
	$°©s
()

411 i‡(
_°©s
.
_¥o˚s£d
 < 
MINIMUM_PROCESSED
) {

413 
	`TRACE
–
TRACE_DEBUG
, "(%sË„w d©a\n", 
	`thªad_«me
().
	`d©a
());

416 
	`TRACE
–
TRACE_STATISTICS
, "(%s)\n", 
	`thªad_«me
().
	`d©a
());

417 
_°©s
.
	`¥öt_°©s
();

421 
_°©s
.
	`ª£t
();

422 
	}
}

426 
w‹kî_°©s_t
 
	gba£_w‹kî_t
::
	$gë_°©s
()

429 i‡(
_°©s
.
_¥o˚s£d
 < 
MINIMUM_PROCESSED
) {

431 
	`TRACE
–
TRACE_STATISTICS
, "(%sË„w d©a\n", 
	`thªad_«me
().
	`d©a
());

432 
	}
}

434 
TRACE
–
TRACE_STATISTICS
, "(%s)\n", 
thªad_«me
().
d©a
());

435 
	g_°©s
.
¥öt_°©s
();

438  (*&
	g_°©s
);

453 #ifde‡
ACCESS_RECORD_TRACE


454 #w¨nög 
Tøcög
 
ªc‹d
 
ac˚s£s
 
íabÀd


455 
	~<sys/°©.h
>

456 
	~<sys/ty≥s.h
>

457 
	~<f˙é.h
>

458 
	~<î∫o.h
>

459 
	gba£_w‹kî_t
::
	$¸óã_åa˚_dú
(
°rög
 
dú
)

461 
	`mkdú
(
dú
.
	`c_°r
(),0777);

462 
	}
}

463 
	gba£_w‹kî_t
::
	$›í_åa˚_fûe
()

465 
°rög
 
dú
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨
("dir-trace","RAT");

466 
	`¸óã_åa˚_dú
(
dú
);

467 
time_t
 
£c⁄d
 = 
	`time
(
NULL
);

468 
°rög°ªam
 
°
;

469 
°
 << 
£c⁄d
;

470 
°rög
 
‚ame
 = 
dú
 + 
	`°rög
("/øt-"Ë+ 
°
.
	`°r
(Ë+ såög("-"Ë+ 
this
->
	`thªad_«me
() + string(".csv");

471 
	`TRACE
–
TRACE_ALWAYS
, "O≥nög fûê(%s)\n", 
‚ame
.
	`c_°r
());

472 
_åa˚_fûe
.
	`›í
(
‚ame
.
	`c_°r
());

473 
	}
}

474 
	gba£_w‹kî_t
::
	$˛o£_åa˚_fûe
()

476 
ve˘‹
<
°rög
>::
ôî©‹
 
ô
 = 
_evíts
.
	`begö
(); ià!_evíts.
	`íd
(); it++) {

477 
_åa˚_fûe
 << 
this
->
	`thªad_«me
(Ë<< "," << *
ô
 << 
ídl
;

479 
_åa˚_fûe
.
	`˛o£
();

480 
	`TRACE
–
TRACE_ALWAYS
, "Closög fûe. (%dËevít†dum≥d\n", 
_evíts
.
	`size
());

481 
	}
}

485 
EXIT_NAMESPACE
(
sh‹e
);

	@src/tests/shore_kits.cpp

32 
	~"sm/sh‹e/sh‹e_shñl.h
"

34 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

35 
	~"w‹klﬂd/çcc/sh‹e_çcc_˛õ¡.h
"

37 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

38 
	~"w‹klﬂd/tm1/sh‹e_tm1_˛õ¡.h
"

40 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

41 
	~"w‹klﬂd/çcb/sh‹e_çcb_˛õ¡.h
"

43 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

44 
	~"w‹klﬂd/çch/sh‹e_çch_˛õ¡.h
"

46 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

47 
	~"w‹klﬂd/ssb/sh‹e_ssb_˛õ¡.h
"

49 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

50 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_˛õ¡.h
"

52 
	~"k_deföes.h
"

54 #ifde‡
CFG_SIMICS


55 
	~"utû/simics-magic-ö°ru˘i⁄.h
"

58 
	~"d‹a.h
"

59 
	~"d‹a/çcc/d‹a_çcc.h
"

60 
	~"d‹a/çcc/d‹a_çcc_˛õ¡.h
"

61 
	~"d‹a/tm1/d‹a_tm1.h
"

62 
	~"d‹a/tm1/d‹a_tm1_˛õ¡.h
"

63 
	~"d‹a/çcb/d‹a_çcb.h
"

64 
	~"d‹a/çcb/d‹a_çcb_˛õ¡.h
"

66 #ifde‡
CFG_VTUNE


67 
	~<ôäŸify.h
>

70 
	~<dlf˙.h
>

72 
usög
 
«me•a˚
 
	gsh‹e
;

74 
usög
 
«me•a˚
 
	gçcc
;

75 
usög
 
«me•a˚
 
	gtm1
;

76 
usög
 
«me•a˚
 
	gçcb
;

77 
usög
 
«me•a˚
 
	gçch
;

78 
usög
 
«me•a˚
 
	gssb
;

79 
usög
 
«me•a˚
 
	gç˚
;

84 #w¨nög 
C⁄figuøti⁄
: 
DORA
 
íabÀd


85 
usög
 
«me•a˚
 
	gd‹a
;

87 #ifde‡
CFG_FLUSHER


88 #w¨nög 
C⁄figuøti⁄
: 
FLUSHER
/
GROUPCOMMIT
 
íabÀd


91 #w¨nög 
C⁄figuøti⁄
: 
SLI
 
íabÀd


92 #w¨nög 
C⁄figuøti⁄
: 
ELR
 
íabÀd


94 #ifde‡
CFG_SIMICS


95 #w¨nög 
C⁄figuøti⁄
: 
Wôh
 
SIMICS
 
MAGIC
 
INSTRUCTIONS


98 #ifde‡
CFG_CACHES


99 #w¨nög 
C⁄figuøti⁄
: 
Wôh
 
Obje˘
 
CACHES


102 #ifde‡
CFG_BT


103 #w¨nög 
C⁄figuøti⁄
: 
Backåacög
 
íabÀd


106 #ifde‡
CFG_QPIPE


107 #w¨nög 
C⁄figuøti⁄
: 
QPùe
 
íabÀd


110 #ifde‡
CFG_VTUNE


111 #w¨nög 
C⁄figuøti⁄
: 
VTu√
 
c⁄åﬁs
 
íabÀd


117 
	eSy¢ameVÆue
 { 
	m¢Ba£löe
 = 0x1,

118 
	m¢DORA
 = 0x2,

119 
	m¢PLP
 = 0x4

124 
	gm≠
<
	g°rög
,
	gSy¢ameVÆue
> 
	gmSy¢ameVÆue
;

126 
	$öôsy¢amem≠
()

128 
mSy¢ameVÆue
["ba£löe"] = 
¢Ba£löe
;

129 
mSy¢ameVÆue
["d‹a"] = 
¢DORA
;

130 
mSy¢ameVÆue
["∂p"] = 
¢PLP
;

131 
	}
}

137 
	eBíchm¨kVÆue
 { 
	mbmTPCC
, 
	mbmTM1
, 
	mbmTPCB
, 
	mbmTPCH
 , 
	mbmSSB
, 
	mbmTPCE
 };

141 
	gm≠
<
	g°rög
,
	gBíchm¨kVÆue
> 
	gmBíchm¨kVÆue
;

143 
	$öôbíchm¨km≠
()

145 
mBíchm¨kVÆue
["çcc"] = 
bmTPCC
;

146 
mBíchm¨kVÆue
["tm1"] = 
bmTM1
;

147 
mBíchm¨kVÆue
["çcb"] = 
bmTPCB
;

148 
mBíchm¨kVÆue
["çch"] = 
bmTPCH
;

149 
mBíchm¨kVÆue
["ssb"] = 
bmSSB
;

150 
mBíchm¨kVÆue
["ç˚"] = 
bmTPCE
;

151 
	}
}

157 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

158 ˛as†
	ckô_t
 : 
public
 
sh‹e_shñl_t


160 
¥iv©e
:

161 
DB
* 
_dbö°
;

163 
	mpublic
:

165 
	$kô_t
(c⁄° * 
¥om±
,

166 c⁄° 
boﬁ
 
√tmode
, c⁄° 
p‹t
,

167 c⁄° 
boﬁ
 
öputfûemode
, c⁄° 
°rög
 
öputfûe
)

168 : 
	$sh‹e_shñl_t
(
¥om±
,
√tmode
,
p‹t
,
öputfûemode
,
öputfûe
)

171 
	`lﬂd_åxs_m≠
();

172 
	`lﬂd_bp_m≠
();

174 ~
	$kô_t
(Ë{ 
	}
}

177 
vútuÆ
 
ö°_ã°_ív
(
¨gc
, * 
¨gv
[]);

178 
vútuÆ
 
lﬂd_åxs_m≠
();

179 
vútuÆ
 
lﬂd_bp_m≠
();

183 
vútuÆ
 
_cmd_TEST_im∂
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

184 c⁄° 
iNumOfThªads
, c⁄° 
iNumOfTrxs
,

185 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

186 c⁄° 
eBödögTy≥
 
abt
);

187 
vútuÆ
 
_cmd_MEASURE_im∂
(c⁄° 
iQuîõdSF
, c⁄° 
iS¥ód
,

188 c⁄° 
iNumOfThªads
, c⁄° 
iDuøti⁄
,

189 c⁄° 
iSñe˘edTrx
, c⁄° 
iIãøti⁄s
,

190 c⁄° 
eBödögTy≥
 
abt
);

192 
vútuÆ
 
w_rc_t
 
	$¥ï¨eNewRun
(Ë{ 
	`as£π
(
_dbö°
); (_dbö°->
	`√wrun
()); 
	}
}

209 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

210 
	gkô_t
<
	gClõ¡
,
	gDB
>::
	$lﬂd_åxs_m≠
()

212 
	`CRITICAL_SECTION
(
shñl_cs
,
_lock
);

214  (
Clõ¡
::
	`lﬂd_sup_x˘
(
_sup_åxs
));

215 
	}
}

217 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

218 
	gkô_t
<
	gClõ¡
,
	gDB
>::
	$lﬂd_bp_m≠
()

220 
	`CRITICAL_SECTION
(
shñl_cs
,
_lock
);

222 
_sup_bps
[
BT_NONE
] = "NoBinding";

223 
_sup_bps
[
BT_NEXT
] = "Adjacent";

224 
_sup_bps
[
BT_SPREAD
] = "SpreadToCores";

225  (
_sup_bps
.
	`size
());

226 
	}
}

240 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

241 
	gkô_t
<
	gClõ¡
,
	gDB
>::
	$ö°_ã°_ív
(
¨gc
, * 
¨gv
[])

244 
_ív
 = 
_dbö°
 = 
√w
 
	`DB
();

245 #ifde‡
HAVE_CPUMON


246 
	`as£π
 (
_g_m⁄
);

247 
_ív
->
	`£t_max_˝u_cou¡
(
_g_m⁄
->
	`gë_num_of_˝us
());

252 
db_öô_smt_t
* 
öôülizî
 = 
√w
 
	`db_öô_smt_t
(
	`c_°r
("öô"), 
_ív
);

253 
	`as£π
 (
öôülizî
);

254 
öôülizî
->
	`f‹k
();

255 
öôülizî
->
	`joö
();

256 
rv
 = 
öôülizî
->
	`rv
();

257 
	`dñëe
 (
öôülizî
);

258 
öôülizî
 = 
NULL
;

260 i‡(
rv
) {

261 
	`TRACE
–
TRACE_ALWAYS
, "Exiting...\n");

262  (
rv
);

266 
	`as£π
 (
_dbö°
);

267 i‡(
¨gc
>2) {

268 
quîõdSF
 = 
	`©oi
(
¨gv
[2]);

269 
_dbö°
->
	`£t_qf
(
quîõdSF
);

271 
_theSF
 = 
_dbö°
->
	`gë_sf
();

275 i‡(!
	`lﬂd_åxs_m≠
()) {

276 
	`TRACE
–
TRACE_ALWAYS
, "No supportedÅrxs...\nExiting...");

279 i‡(!
	`lﬂd_bp_m≠
()) {

280 
	`TRACE
–
TRACE_ALWAYS
, "No supported bindingÖolicies...\nExiting...");

285 
sh‹e_shñl_t
::
	`ªgi°î_comm™ds
();

288  (
_dbö°
->
	`°¨t
());

289 
	}
}

293 
«me•a˚
 
	gsh‹e
 {

294 
shñl_ex≥˘_˛õ¡s
(
cou¡
);

295 
shñl_awaô_˛õ¡s
();

300 c⁄° 
	gMILLION
 = 1000000;

310 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

311 
	gkô_t
<
	gClõ¡
,
	gDB
>::
	$_cmd_TEST_im∂
(c⁄° 
iQuîõdSF
,

312 c⁄° 
iS¥ód
,

313 c⁄° 
iNumOfThªads
,

314 c⁄° 
iNumOfTrxs
,

315 c⁄° 
iSñe˘edTrx
,

316 c⁄° 
iIãøti⁄s
,

317 c⁄° 
eBödögTy≥
 
abt
)

320 
	`¥öt_TEST_öfo
(
iQuîõdSF
, 
iS¥ód
, 
iNumOfThªads
,

321 
iNumOfTrxs
, 
iSñe˘edTrx
, 
iIãøti⁄s
, 
abt
);

323 
_dbö°
->
	`upd_sf
();

324 
_dbö°
->
	`£t_qf
(
iQuîõdSF
);

326 
Clõ¡
* 
ã°îs
[
MAX_NUM_OF_THR
];

327 
j
=0; j<
iIãøti⁄s
 && !
ba£_˛õ¡_t
::
	`is_ã°_ab‹ãd
(); j++) {

329 
	`TRACE
–
TRACE_ALWAYS
, "Iteration [%d of %d]\n",

330 (
j
+1), 
iIãøti⁄s
);

333 
_cuºít_¥s_id
 = 
_°¨t_¥s_id
;

334 
wh_id
 = 0;

336 
_ív
->
	`ª£t_°©s
();

339 #ifde‡
HAVE_CPUMON


340 
_g_m⁄
->
	`˙å_ª£t
();

344 
	`TRACE
(
TRACE_ALWAYS
, "begin measurement\n");

345 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

346 
°›w©ch_t
 
timî
;

349 
i
=0; i<
iNumOfThªads
; i++) {

351 i‡(
iS¥ód
) {

352 
wh_id
 = (
i
%()
iQuîõdSF
)+1;

355 
ã°îs
[
i
] = 
√w
 
	`Clõ¡
(
	`c_°r
("CL-%d",i), i, 
_dbö°
,

356 
MT_NUM_OF_TRXS
, 
iSñe˘edTrx
, 
iNumOfTrxs
,

357 
_cuºít_¥s_id
, 
wh_id
, 
iQuîõdSF
);

358 
	`as£π
 (
ã°îs
[
i
]);

359 
ã°îs
[
i
]->
	`f‹k
();

360 
_cuºít_¥s_id
 = 
	`√xt_˝u
(
abt
, _current_prs_id);

364 
i
=0; i<
iNumOfThªads
; i++) {

365 
ã°îs
[
i
]->
	`joö
();

366 i‡(
ã°îs
[
i
]->
	`rv
()) {

367 
	`TRACE
–
TRACE_ALWAYS
, "Error inÅesting...\n");

368 
	`TRACE
–
TRACE_ALWAYS
, "Exiting...\n");

369 
	`as£π
 (
Ál£
);

371 
	`dñëe
 (
ã°îs
[
i
]);

374 
dñay
 = 
timî
.
	`time
();

376 #ifde‡
HAVE_CPUMON


377 
_g_m⁄
->
	`˙å_∑u£
();

378 
ul⁄g_t
 
miochs
 = 
_g_m⁄
->
	`ioch¨s
()/
MILLION
;

379 
ußge
 = 
_g_m⁄
->
	`gë_avg_ußge
(
åue
);

381 
ul⁄g_t
 
miochs
 = 0;

382 
ußge
 = 0;

384 
	`TRACE
(
TRACE_ALWAYS
, "end measurement\n");

385 
_ív
->
	`¥öt_throughput
(
iQuîõdSF
,
iS¥ód
,
iNumOfThªads
,
dñay
,

386 
miochs
, 
ußge
);

388 #ifde‡
HAVE_CPUMON


389 
_g_m⁄
->
	`¥öt_lﬂd
(
dñay
);

390 
_g_m⁄
->
	`¥öt_ext_°©s
();

394 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

395 
	`TRACE
–
TRACE_DEBUG
, "db checkpoint - start\n");

396 
_ív
->
	`checkpoöt
();

397 
	`TRACE
–
TRACE_ALWAYS
, "Checkpoint\n");

401 
_ív
->
	`£t_mósuª
(
MST_DONE
);

404 
w_rc_t
 
e
 = 
	`¥ï¨eNewRun
();

405 i‡(
e
.
	`is_îr‹
()) {

406 
	`TRACE
–
TRACE_ALWAYS
, "!!! ProblemÖreparing forÅheÇextÑun\n");

409  (
SHELL_NEXT_CONTINUE
);

410 
	}
}

416 
	gãm∂©e
<
˛ass
 
	gClõ¡
,˛as†
	gDB
>

417 
	gkô_t
<
	gClõ¡
,
	gDB
>::
	$_cmd_MEASURE_im∂
(c⁄° 
iQuîõdSF
,

418 c⁄° 
iS¥ód
,

419 c⁄° 
iNumOfThªads
,

420 c⁄° 
iDuøti⁄
,

421 c⁄° 
iSñe˘edTrx
,

422 c⁄° 
iIãøti⁄s
,

423 c⁄° 
eBödögTy≥
 
abt
)

425 #ifde‡
CFG_VTUNE


427 
	`__ôt_ªsume
();

431 
	`¥öt_MEASURE_öfo
(
iQuîõdSF
, 
iS¥ód
, 
iNumOfThªads
, 
iDuøti⁄
,

432 
iSñe˘edTrx
, 
iIãøti⁄s
, 
abt
);

434 
_dbö°
->
	`upd_sf
();

435 
_dbö°
->
	`£t_qf
(
iQuîõdSF
);

437 
Clõ¡
* 
ã°îs
[
MAX_NUM_OF_THR
];

438 
_cuºít_¥s_id
 = 
_°¨t_¥s_id
;

439 
wh_id
 = 0;

442 
_ív
->
	`£t_mósuª
(
MST_WARMUP
);

443 
	`shñl_ex≥˘_˛õ¡s
(
iNumOfThªads
);

446 
i
=0; i<
iNumOfThªads
; i++) {

448 i‡(
iS¥ód
) {

449 
wh_id
 = (
i
%()
iQuîõdSF
)+1;

452 
ã°îs
[
i
] = 
√w
 
	`Clõ¡
(
	`c_°r
("CL-%d",i), i, 
_dbö°
,

453 
MT_TIME_DUR
, 
iSñe˘edTrx
, 0,

454 
_cuºít_¥s_id
, 
wh_id
, 
iQuîõdSF
);

455 
	`as£π
 (
ã°îs
[
i
]);

456 
ã°îs
[
i
]->
	`f‹k
();

457 
_cuºít_¥s_id
 = 
	`√xt_˝u
(
abt
, _current_prs_id);

461 
	`shñl_awaô_˛õ¡s
();

464 
ªmaöög
 = 0;

465 
dñay
 = 0;

466 
j
=0; j<
iIãøti⁄s
 && !
ba£_˛õ¡_t
::
	`is_ã°_ab‹ãd
(); j++) {

467 if(
ªmaöög
 == 0) {

468 
	`¶ìp
(1);

469 
	`TRACE
–
TRACE_ALWAYS
, "Iteration [%d of %d]\n",

470 (
j
+1), 
iIãøti⁄s
);

473 #ifde‡
HAVE_CPUMON


474 
_g_m⁄
->
	`˙å_ª£t
();

478 
	`TRACE
(
TRACE_ALWAYS
, "begin measurement\n");

479 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

481 
_ív
->
	`ª£t_°©s
();

482 
dñay
 = 0;

483 
ªmaöög
 = 
iDuøti⁄
;

485 
°›w©ch_t
 
timî
;

486 
ªmaöög
 = 
	`¶ìp
(remaining);

487 if(
ªmaöög
 != 0) {

488 
dñay
 +
timî
.
	`time
();

489 
j
--;

492 
dñay
 +
timî
.
	`time
();

493 #ifde‡
HAVE_CPUMON


494 
_g_m⁄
->
	`˙å_∑u£
();

495 
ul⁄g_t
 
miochs
 = 
_g_m⁄
->
	`ioch¨s
()/
MILLION
;

496 
ußge
 = 
_g_m⁄
->
	`gë_avg_ußge
(
åue
);

498 
ul⁄g_t
 
miochs
 = 0;

499 
ußge
 = 0;

501 
	`TRACE
(
TRACE_ALWAYS
, "end measurement\n");

502 
_ív
->
	`¥öt_throughput
(
iQuîõdSF
,
iS¥ód
,
iNumOfThªads
,
dñay
,

503 
miochs
, 
ußge
);

505 #ifde‡
HAVE_CPUMON


506 
_g_m⁄
->
	`¥öt_lﬂd
(
dñay
);

507 
_g_m⁄
->
	`¥öt_ext_°©s
();

511 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

512 
	`TRACE
–
TRACE_DEBUG
, "db checkpoint - start\n");

513 
_ív
->
	`checkpoöt
();

514 
	`TRACE
–
TRACE_ALWAYS
, "Checkpoint\n");

518 
_ív
->
	`£t_mósuª
(
MST_DONE
);

519 
i
=0; i<
iNumOfThªads
; i++) {

520 
ã°îs
[
i
]->
	`joö
();

522 i‡(
ã°îs
[
i
]->
	`rv
()) {

523 
	`TRACE
–
TRACE_ALWAYS
, "Error inÅesting...\n");

524 
	`as£π
 (
Ál£
);

526 
	`as£π
 (
ã°îs
[
i
]);

527 
	`dñëe
 (
ã°îs
[
i
]);

531 
_ív
->
	`£t_mósuª
(
MST_DONE
);

533 
	`TRACE
–
TRACE_ALWAYS
, "Preparing forÅheÇextÑun\n");

536 
w_rc_t
 
e
 = 
	`¥ï¨eNewRun
();

537 i‡(
e
.
	`is_îr‹
()) {

538 
	`TRACE
–
TRACE_ALWAYS
, "!!! ProblemÖreparing forÅheÇextÑun\n");

541 #ifde‡
CFG_VTUNE


543 
	`__ôt_∑u£
();

546  (
SHELL_NEXT_CONTINUE
);

547 
	}
}

554 
	gkô_t
<
	tba£löe_çcc_˛õ¡_t
,
	tSh‹eTPCCEnv
> 
	tba£löeTPCCKô
;

555 
	gkô_t
<
	tba£löe_tm1_˛õ¡_t
,
	tSh‹eTM1Env
> 
	tba£löeTM1Kô
;

556 
	gkô_t
<
	tba£löe_çcb_˛õ¡_t
,
	tSh‹eTPCBEnv
> 
	tba£löeTPCBKô
;

557 
	gkô_t
<
	tba£löe_çch_˛õ¡_t
,
	tSh‹eTPCHEnv
> 
	tba£löeTPCHKô
;

559 #ifde‡
CFG_QPIPE


560 
	gkô_t
<
	tba£löe_ssb_˛õ¡_t
,
	tSh‹eSSBEnv
> 
	tba£löeSSBKô
;

563 
	gkô_t
<
	tba£löe_ç˚_˛õ¡_t
,
	tSh‹eTPCEEnv
> 
	tba£löeTPCEKô
;

566 
	gkô_t
<
	td‹a_çcc_˛õ¡_t
,
	tD‹aTPCCEnv
> 
	td‹aTPCCKô
;

567 
	gkô_t
<
	td‹a_tm1_˛õ¡_t
,
	tD‹aTM1Env
> 
	td‹aTM1Kô
;

568 
	gkô_t
<
	td‹a_çcb_˛õ¡_t
,
	tD‹aTPCBEnv
> 
	td‹aTPCBKô
;

572 
boﬁ
 
	$vÆid©ePhysiˇl
(
°rög
 
physiˇl
)

574 i‡(
physiˇl
.
	`com∑ª
("normal")==0) {

575  (
åue
);

577 i‡(
physiˇl
.
	`com∑ª
("mrbtnorm")==0) {

578  (
åue
);

580 i‡(
physiˇl
.
	`com∑ª
("mrbtpart")==0) {

581  (
åue
);

583 i‡(
physiˇl
.
	`com∑ª
("mrbtleaf")==0) {

584  (
åue
);

586  (
Ál£
);

587 
	}
}

589 
	$ußge
()

591 
	`TRACE
–
TRACE_ALWAYS
, "\nAcceptedÖarameters:\n" \

603 
	}
}

607 
	$maö
(
¨gc
, * 
¨gv
[])

609 
	`dl›í
("foo", 0);

611 #ifde‡
CFG_VTUNE


613 
	`__ôt_∑u£
();

616 
	`thªad_öô
();

618 #ifde‡
CFG_SIMICS


619 
MAGIC_BREAKPOINT
;

622 
	`TRACE_SET
–
TRACE_ALWAYS
 | 
TRACE_STATISTICS


632 
_g_sh‹e_ív
 = 
NULL
;

633 
_g_m⁄
 = 
NULL
;

636 
boﬁ
 
√tmode
 = 
Ál£
;

637 
boﬁ
 
öputfûemode
 = 
Ál£
;

638 
°rög
 
öputfûe
;

639 
√ç‹t
 = 0;

640 
°rög
 
sy°em
,
physiˇl
;

641 
iR™ge
 = 0;

642 
c
 = 0;

643 
°rög
 
c⁄fig
 = 
DEFAULTCONFIG
;

644 
°rög
 
c⁄fFûe
 = 
ENVCONFFILE
;

646 
ívV¨
* 
ev
 =ÉnvV¨::
	`ö°™˚
();

651 (
c
 = 
	`gë›t
(
¨gc
,
¨gv
,"f:rnp:c:s:d:xg:i:h")) != -1) {

652 
c
) {

654 
	`TRACE
–
TRACE_ALWAYS
, "CONFIGFILE (%s)\n", 
›èrg
);

655 
c⁄fFûe
 = (
°rög
)
›èrg
;

656 
ev
->
	`£tC⁄fFûe
(
c⁄fFûe
);

657 
	`TRACE
–
TRACE_ALWAYS
, "CONFIG (%s)\n", 
c⁄fig
.
	`c_°r
());

658 
ev
->
	`£tC⁄figuøti⁄
(
c⁄fig
);

661 
	`TRACE
–
TRACE_ALWAYS
, "CLOBBERING DB\n");

662 
ev
->
	`£tV¨I¡
("db-clobberdev",1);

665 
	`TRACE
–
TRACE_ALWAYS
, "NETMODE\n");

666 
√tmode
 = 
åue
;

669 
√ç‹t
 = 
	`©oi
(
›èrg
);

670 
	`TRACE
–
TRACE_ALWAYS
, "PORT (%d)\n", 
√ç‹t
);

673 
	`TRACE
–
TRACE_ALWAYS
, "CONFIG (%s)\n", 
›èrg
);

674 
c⁄fig
 = (
°rög
)
›èrg
;

675 
ev
->
	`£tC⁄figuøti⁄
(
c⁄fig
);

678 
	`TRACE
–
TRACE_ALWAYS
, "SYSTEM (%s)\n", 
›èrg
);

679 
sy°em
 = (
°rög
)
›èrg
;

680 
ev
->
	`£tSysName
(
sy°em
);

683 
	`TRACE
–
TRACE_ALWAYS
, "PHYSICAL DESIGN (%s)\n", 
›èrg
);

684 
physiˇl
 = (
°rög
)
›èrg
;

685 i‡(!
	`vÆid©ePhysiˇl
(
physiˇl
)) {

686 
	`TRACE
–
TRACE_ALWAYS
, "UnknownÖhysical design (%s)\n",

687 
physiˇl
.
	`c_°r
());

690 
ev
->
	`£tSysDesign
(
physiˇl
);

693 
	`TRACE
–
TRACE_ALWAYS
, "Enabling hacks\n");

694 
ev
->
	`£tV¨I¡
("physical-hacks-enable",1);

697 
iR™ge
 = 
	`©oi
(
›èrg
);

698 
	`TRACE
–
TRACE_ALWAYS
, "RANGE (%d)\n", 
iR™ge
);

699 
ev
->
	`£tV¨I¡
("ªc‹ds-to-ac˚ss",
iR™ge
);

702 
öputfûemode
 = 
åue
;

703 
	`TRACE
–
TRACE_ALWAYS
, "INPUTFILE (%s)\n", 
›èrg
);

704 
öputfûe
 = (
°rög
)
›èrg
;

707 
	`ußge
();

711 
	`TRACE
–
TRACE_ALWAYS
, "WrongÖarameter. Accepted:Ñnp:c:xg:s:d:h\n");

717 
	`as£π
–((
öputfûemode
 =
åue
Ë&& (
√tmode
 =åue)Ë=
Ál£
);

720 
	`öôsy¢amem≠
();

721 
	`öôbíchm¨km≠
();

723 
°rög
 
sy¢ame
 = 
ev
->
	`gëSysName
();

724 
°rög
 
bíchm¨k«me
 = 
ev
->
	`gëSysV¨
("benchmark");

727 
physiˇl
 = 
ev
->
	`gëSysDesign
();

729 
boﬁ
 
«me£t
=
Ál£
;

730 
°rög
 
db«me
;

733 
gu¨d
<
sh‹e_shñl_t
> 
kô
 = 
NULL
;

735 
	`TRACE
–
TRACE_ALWAYS
, "Starting (%s-%s-%s) kit\n",

736 
bíchm¨k«me
.
	`c_°r
(),

737 
physiˇl
.
	`c_°r
(),

738 
sy¢ame
.
	`c_°r
());

742 i‡(
bíchm¨k«me
.
	`com∑ª
("tpcc")==0) {

743 
db«me
 = "—pcc-" + 
physiˇl
 + "-";

744 
mSy¢ameVÆue
[
sy¢ame
]) {

745 
¢Ba£löe
:

746 
db«me
 += "base) ";

747 
kô
 = 
√w
 
	`ba£löeTPCCKô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

749 
¢DORA
:

750 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

751 
¢PLP
:

752 i‡(!
«me£t
Ë
db«me
 += "plp) ";

753 
kô
 = 
√w
 
	`d‹aTPCCKô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

756 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configuration. Exiting...\n");

762 i‡(
bíchm¨k«me
.
	`com∑ª
("tm1")==0) {

763 
db«me
 = "—©p-" + 
physiˇl
 + "-";

764 
mSy¢ameVÆue
[
sy¢ame
]) {

765 
¢Ba£löe
:

766 
db«me
 += "base) ";

767 
kô
 = 
√w
 
	`ba£löeTM1Kô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

769 
¢DORA
:

770 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

771 
¢PLP
:

772 i‡(!
«me£t
Ë
db«me
 += "plp) ";

773 
kô
 = 
√w
 
	`d‹aTM1Kô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

776 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configuration. Exiting...\n");

782 i‡(
bíchm¨k«me
.
	`com∑ª
("tpcb")==0) {

783 
db«me
 = "—pcb-" + 
physiˇl
 + "-";

784 
mSy¢ameVÆue
[
sy¢ame
]) {

785 
¢Ba£löe
:

786 
db«me
 += "base) ";

787 
kô
 = 
√w
 
	`ba£löeTPCBKô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

789 
¢DORA
:

790 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

791 
¢PLP
:

792 i‡(!
«me£t
Ë
db«me
 += "plp) ";

793 
kô
 = 
√w
 
	`d‹aTPCBKô
(
db«me
.
	`c_°r
(),
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

796 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configuration. Exiting...\n");

802 i‡(
bíchm¨k«me
.
	`com∑ª
("tpch")==0) {

803 
mSy¢ameVÆue
[
sy¢ame
]) {

804 
¢Ba£löe
:

805 
kô
 = 
√w
 
	`ba£löeTPCHKô
("—pch-ba£Ë",
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

807 
¢DORA
:

808 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

809 
	`as£π
 (0);

813 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configuration. Exiting...\n");

818 #ifde‡
CFG_QPIPE


820 i‡(
bíchm¨k«me
.
	`com∑ª
("ssb")==0) {

821 
mSy¢ameVÆue
[
sy¢ame
]) {

822 
¢Ba£löe
:

823 
kô
 = 
√w
 
	`ba£löeSSBKô
("(ssb-ba£Ë",
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

825 
¢DORA
:

826 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

827 
	`as£π
 (0);

831 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configuration. Exiting...\n");

839 i‡(
bíchm¨k«me
.
	`com∑ª
("tpce")==0) {

840 
mSy¢ameVÆue
[
sy¢ame
]) {

841 
¢Ba£löe
:

842 
kô
 = 
√w
 
	`ba£löeTPCEKô
("—p˚-ba£Ë",
√tmode
,
√ç‹t
,
öputfûemode
,
öputfûe
);

844 
¢DORA
:

845 
db«me
 +"d‹aË"; 
«me£t
=
åue
;

846 
	`as£π
 (0);

850 
	`TRACE
–
TRACE_ALWAYS
, "Not supported configurations. Exiting...\n");

856 
	`w_as£π0
 (
kô
.
	`gë
());

859 #ifde‡
HAVE_CPUMON


860 #ifde‡
HAVE_GLIBTOP


861 
_g_m⁄
 = 
√w
 
	`löux_¥ocm⁄ô‹_t
(
NULL
);

862 #ñi‡
	`deföed
(
HAVE_PROCFS
)

863 
_g_m⁄
 = 
√w
 
	`sunos_¥ocm⁄ô‹_t
(
NULL
);

865 
	`w_as£π0
 (
_g_m⁄
);

869 
	`TRACE
 ( 
TRACE_ALWAYS
, "Starting Shore Environment\n" );

870 i‡(
kô
->
	`ö°_ã°_ív
(
¨gc
, 
¨gv
)) {

875 
w_rc_t
 
r˛
 = 
kô
->
	`db
()->
	`lﬂdd©a
();

876 i‡(
r˛
.
	`is_îr‹
()) {

881 
_g_sh‹e_ív
 = 
kô
->
	`db
();

884 
	`TRACE
–
TRACE_ALWAYS
, "Preparing forÅheÇextÑun\n");

885 
w_rc_t
 
e
 = 
kô
->
	`¥ï¨eNewRun
();

886 i‡(
e
.
	`is_îr‹
()) {

887 
	`TRACE
–
TRACE_ALWAYS
, "!!! ProblemÖreparing forÅheÇextÑun\n");

891 #ifde‡
HAVE_CPUMON


893 
_g_m⁄
->
	`£tEnv
(
kô
->
	`db
());

894 
_g_m⁄
->
	`f‹k
();

898 
	`TRACE
 ( 
TRACE_ALWAYS
, "StartingÖrocessing commands\n" );

900 
°¨t
 = 
kô
->
	`°¨t
();

901 i‡(
°¨t
 < 0)

903 
	`TRACE
–
TRACE_ALWAYS
, "Error in starting shell\n");

908 
kô
->
	`db
()->
	`°©i°ics
();

910 #ifde‡
HAVE_CPUMON


912 
_g_m⁄
->
	`˙å_°›
();

913 
_g_m⁄
->
	`joö
();

914 
	`dñëe
 (
_g_m⁄
);

919 
	}
}

	@src/trace/trace_force.cpp

35 
	~"åa˚/åa˚_f‹˚.h
"

37 
	~"k_deföes.h
"

41 
	#FORCE_BUFFER_SIZE
 256

	)

48 
	$åa˚_f‹˚_
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

49 * 
f‹m©
, ...)

52 
fun˘i⁄_«me_Àn
 = 
	`°æí
(
fun˘i⁄_«me
);

53 
size
 = 
FORCE_BUFFER_SIZE
 + 
fun˘i⁄_«me_Àn
;

54 
buf
[
size
];

57 
	`¢¥ötf
(
buf
, 
size
, "\nFORCE: %s:%d %s: ", 
fûíame
, 
löe_num
, 
fun˘i⁄_«me
);

58 
msg_off£t
 = 
	`°æí
(
buf
);

59 
msg_size
 = 
size
 - 
msg_off£t
;

60 * 
msg
 = &
buf
[ 
msg_off£t
 ];

63 
va_li°
 
≠
;

64 
	`va_°¨t
(
≠
, 
f‹m©
);

65 
	`v¢¥ötf
(
msg
, 
msg_size
, 
f‹m©
, 
≠
);

66 
	`Ârötf
(
°dîr
, 
buf
);

67 
	`va_íd
(
≠
);

68 
	}
}

	@src/trace/trace_print_pthread.cpp

32 
	~"åa˚/åa˚_¥öt_±hªad.h
"

51 
	$åa˚_¥öt_±hªad
(
FILE
* 
out_°ªam
, 
±hªad_t
 
thªad
)

57 #i‡
	`deföed
(
löux
Ë|| deföed(
__löux
)

58 #i‚de‡
__USE_GNU


59 
	#__USE_GNU


	)

64 
	`Ârötf
(
out_°ªam
, "%lu", 
thªad
);

71 #i‡
	`deföed
(
sun
Ë|| deföed(
__sun
)

72 #i‡
	`deföed
(
__SVR4
Ë|| deföed(
__svr4__
)

76 
	`Ârötf
(
out_°ªam
, "%u", 
thªad
);

82 
	}
}

	@src/trace/trace_stream.cpp

30 
	~"ígöe/thªad.h
"

31 
	~"åa˚/åa˚_°ªam.h
"

32 
	~"åa˚/åa˚_f‹˚.h
"

33 
	~"åa˚/åa˚_¥öt_±hªad.h
"

39 
±hªad_muãx_t
 
	g°ªam_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

70 
	$åa˚_°ªam
(
FILE
* 
out_°ªam
,

71 c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

72 * 
f‹m©
, 
va_li°
 
≠
)

83 
thªad_t
* 
this_thªad
 = 
	`thªad_gë_£lf
();

86 i‡–
	`±hªad_muãx_lock
–&
°ªam_muãx
 ) )

88 
	`TRACE_FORCE
("pthread_mutex_lock() failed\n");

95 i‡–
this_thªad
 !
NULL
 )

96 
	`Ârötf
(
out_°ªam
, "%s", 
this_thªad
->
	`thªad_«me
().
	`d©a
());

98 
	`åa˚_¥öt_±hªad
(
out_°ªam
, 
	`±hªad_£lf
());

101 
	`Ârötf
(
out_°ªam
, ": %s:%d:%s: ", 
fûíame
, 
löe_num
, 
fun˘i⁄_«me
);

102 
	`vÂrötf
(
out_°ªam
, 
f‹m©
, 
≠
);

104 i‡–
	`±hªad_muãx_u∆ock
–&
°ªam_muãx
 ) )

106 
	`TRACE_FORCE
("pthread_mutex_unlock() failed\n");

115 
	`fÊush
(
out_°ªam
);

116 
	}
}

	@src/util/busy_delay.cpp

9 
	~"utû/busy_dñay.h
"

10 
	~<c°dlib
>

12 #ifde‡
__GCC


13 
	~<c°rög
>

15 
	~<°rög.h
>

19 
	~<c°rög
>

20 
	~<m©h.h
>

21 
	~<ˇs£π
>

22 
	~<sys/time.h
>

23 
	~"utû/åa˚.h
"

29 
	g_NAN
;

30 
	gMS_PER_SEC
 = 1000.0;

31 
	gMS_PER_USEC
 = 0.001;

32 
	gNUM_ITERATIONS_PER_MS
 = -1;

33 
	gNUM_RUNS_PER_ITERATION_COUNT
 = 10;

39 
ôî©i⁄
();

40 
compuã_ôî©i⁄s_≥r_ms
(
mö_pow
, 
num_pow
);

51 
	$busy_dñay_öô
()

54 
	`as£π
(
NUM_ITERATIONS_PER_MS
 == -1);

57 
_NAN
 = 
	`log
(()-1);

60 
mö_pow
 = 10;

61 
num_pow
 = 10;

62 
num
 = 
	`compuã_ôî©i⁄s_≥r_ms
(
mö_pow
, 
num_pow
);

63 i‡(
num
 < 0)

66 
	`TRACE
(0&
TRACE_ALWAYS
, "Compuãd %d iãøti⁄†≥∏ms\n", 
num
);

67 
NUM_ITERATIONS_PER_MS
 = 
num
;

69 
	}
}

75 
	$busy_dñay_ms
(
ms
)

78 
	`as£π
(
NUM_ITERATIONS_PER_MS
 > 0);

80 
m
;

81 
m
 = 0; m < 
ms
; m++)

83 
i
;

84 
i
 = 0; i < 
NUM_ITERATIONS_PER_MS
; i++)

85 
	`ôî©i⁄
();

87 
	}
}

93 
	$busy_dñay_us
(
us
)

96 
	`as£π
(
NUM_ITERATIONS_PER_MS
 > 0);

98 
num_ôî©i⁄s_≥r_us
 = 
NUM_ITERATIONS_PER_MS
 / 1000;

99 
m
;

100 
m
 = 0; m < 
us
; m++)

102 
i
;

103 
i
 = 0; i < 
num_ôî©i⁄s_≥r_us
; i++)

104 
	`ôî©i⁄
();

106 
	}
}

115 
	$ôî©i⁄
()

119 
_ãmp
 = 0;

120 vﬁ©ûê* 
_ãmp_±r
 = &
_ãmp
;

121 *
_ãmp_±r
 = *_temp_ptr + 1;

122 
	}
}

125 
	$compuã_time_ms
(
num_ôî
)

127 
	`as£π
(
num_ôî
 > 0);

129 
timevÆ
 
°¨t
, 
íd
;

130 
	`mem£t
(&
°¨t
, 0, (
timevÆ
));

131 
	`mem£t
(&
íd
, 0, (
timevÆ
));

134 i‡(
	`gëtimeofday
(&
°¨t
, 
NULL
))

135  
_NAN
;

137 
i
;

138 
i
 = 0; i < 
num_ôî
; i++)

139 
	`ôî©i⁄
();

142 i‡(
	`gëtimeofday
(&
íd
, 
NULL
))

143  
_NAN
;

146 
°¨t_time
 =

147 
°¨t
.
tv_£c
 * 
MS_PER_SEC
 + sèπ.
tv_u£c
 * 
MS_PER_USEC
;

148 
íd_time
 =

149 
íd
.
tv_£c
 * 
MS_PER_SEC
 +Énd.
tv_u£c
 * 
MS_PER_USEC
;

151  
íd_time
 - 
°¨t_time
;

152 
	}
}

155 
	$compuã_ôî©i⁄s_≥r_ms
(
mö_pow
, 
num_pow
)

157 
sum_ôî
 = 0;

158 
sum_time
 = 0.0;

160 
i
;

161 
p
 = 
mö_pow
;

162 
i
 = 0; i < 
num_pow
; i++)

164 
num_ôî
 = 1 << 
p
;

165 
	`as£π
(
num_ôî
 > 0);

170 
sum
 = 0.0;

171 
r
;

172 
r
 = 0;Ñ < 
NUM_RUNS_PER_ITERATION_COUNT
;Ñ++)

175 
t
 = 
	`compuã_time_ms
(
num_ôî
);

176 i‡(
	`i¢™
(
t
))

179 
	`TRACE
(0&
TRACE_DEBUG
, "compuã_time_ms(%dËªtu∫ NAN\n", 
num_ôî
);

183 
sum
 +
t
;

186 
èvg
 = 
sum
 / 
NUM_RUNS_PER_ITERATION_COUNT
;

187 
	`TRACE
(0&
TRACE_DEBUG
,

189 
èvg
,

190 
num_ôî
);

192 
sum_ôî
 +
num_ôî
;

193 
sum_time
 +
èvg
;

195 
p
++;

198  ()–
sum_ôî
 / 
sum_time
 );

199 
	}
}

	@src/util/c_str.cpp

24 
	~<°d¨g.h
>

26 
	~"utû/c_°r.h
"

27 
	~"utû/ex˚±i⁄.h
"

28 
	~"utû/sync.h
"

29 
	~"utû/gu¨d.h
"

30 
	~<°dio.h
>

32 
	~"k_deföes.h
"

34 
	~"utû/poﬁ_Æloc.h
"

36 #unde‡
TRACK_LEAKS


38 #ifde‡
TRACK_LEAKS


39 
	~<m≠
>

40 
	~<£t
>

41 
	~<ve˘‹
>

42 
	g°d
::
	tve˘‹
<*> 
	taddªss_li°
;

43 
	g°d
::
	tm≠
<
	tc_°r
::
	tc_°r_d©a
*, 
	taddªss_li°
> 
	tow√r_m≠
;

44 
±hªad_muãx_t
 
	gow√r_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

45 
ow√r_m≠
* 
	gow√rs
;

47 #ifde‡
__SUNPRO_CC


62 "C" * 
gë_ˇŒî
();

65 * 
	$gë_ˇŒî
(Ë{  
NULL
; 
	}
}

77 
	gsw©chz_cou¡
 = 0;

78 
	göôülize_Æloˇt‹
::
	$öôülize_Æloˇt‹
() {

79 if(!
sw©chz_cou¡
++) {

80 #ifde‡
TRACK_LEAKS


81 
ow√rs
 = 
√w
 
ow√r_m≠
;

84 
	}
}

89 c⁄° 
c_°r
 
	gc_°r
::
EMPTY_STRING
("%s", "");

91 
	gc_°r
::
c_°r_d©a
 {

92 
muèbÀ
 
_cou¡
;

93 
	g_d©a
[0];

94 * 
_°r
(Ë{  
	g_d©a
; }

95 
DECLARE_POOL_ALLOC_POOL
(
c_°r_d©a
);

99 #ifde‡
TRACK_LEAKS


100 
	$¥öt_live_°rögs
() {

101 
ow√r_m≠
::
ôî©‹
 
ô
 = 
ow√rs
->
	`begö
();

102 
°d
::
£t
<*> 
uniques
;

103 ; 
ô
 !
ow√rs
->
	`íd
(); ++it) {

104 
addªss_li°
::
ôî©‹
 
ô2
 = 
ô
->
£c⁄d
.
	`begö
();

105 
	`¥ötf
("\"%s\"", 
ô
->
fú°
->
	`_°r
());

106 
uniques
.
	`˛ór
();

107 ; 
ô2
 !
ô
->
£c⁄d
.
	`íd
(); ++it2) {

108 if(
uniques
.
	`föd
(*
ô2
Ë!uniques.
	`íd
())

110 
	`¥ötf
(" @0x%p", *
ô2
);

111 
uniques
.
	`ö£π
(*
ô2
);

113 
	`¥ötf
("\n");

116 
	}
}

119 
	gc_°r
::
	$c_°r
(c⁄° * 
°r
, ...)

120 : 
	$_d©a
(
NULL
)

123 c⁄° 
i
 = 1024;

124 
tmp
[
i
];

125 c⁄°* 
§c
;

126 
cou¡
;

129 if(
	`°rchr
(
°r
, '%')) {

130 
§c
 = 
tmp
;

131 
va_li°
 
¨gs
;

132 
	`va_°¨t
(
¨gs
, 
°r
);

133 
cou¡
 = 
	`v¢¥ötf
(
tmp
, 
i
, 
°r
, 
¨gs
);

134 
	`va_íd
(
¨gs
);

136 if((
cou¡
 < 0Ë || (cou¡ >
i
) )

137 
	`THROW
(
BadAŒoc
);

140 
§c
 = 
°r
;

141 
cou¡
 = 
	`°æí
(
°r
);

144 
_d©a
 = (
c_°r_d©a
*Ëc_°r_d©a::
	`poﬁ
()->
	`Æloc
((c_°r_d©aË+ 
cou¡
 + 1);

146 
_d©a
->
_cou¡
 = 1;

147 
	`mem˝y
(
_d©a
->
	`_°r
(), 
§c
, 
cou¡
+1);

149 #i‡
	`deföed
(
TRACK_LEAKS
)

150 
	`±hªad_muãx_lock
(&
ow√r_muãx
);

151 (*
ow√rs
)[
_d©a
].
	`push_back
(
	`gë_ˇŒî
());

152 
	`±hªad_muãx_u∆ock
(&
ow√r_muãx
);

155 
	}
}

159 c⁄° * 
	gc_°r
::
	$d©a
() const {

162  
_d©a
->
	`_°r
();

163 
	}
}

167 
	gc_°r
::
	$assign
(c⁄° 
c_°r
 &
Ÿhî
) {

169 #i‡
	`deföed
(
TRACK_LEAKS
)

170 
	`±hªad_muãx_lock
(&
ow√r_muãx
);

171 (*
ow√rs
)[
Ÿhî
.
_d©a
].
	`push_back
(
	`gë_ˇŒî
());

172 
	`±hªad_muãx_u∆ock
(&
ow√r_muãx
);

176 
_d©a
 = 
Ÿhî
._data;

178 #ifde‡
__•¨cv9


179 
	`memb¨_íãr
();

180 
	`©omic_öc_64
(&
_d©a
->
_cou¡
);

181 
	`memb¨_exô
();

183 
	`__sync_„tch_™d_add
(&
_d©a
->
_cou¡
, 1);

185 
	}
}

189 
	gc_°r
::
	$ªÀa£
() {

190 
cou¡
;

191 #ifde‡
__•¨cv9


192 
	`memb¨_¥odu˚r
();

193 
cou¡
 = 
	`©omic_dec_64_nv
(&
_d©a
->
_cou¡
);

194 
	`memb¨_c⁄sumî
();

196 
cou¡
 = 
	`__sync_add_™d_„tch
(&
_d©a
->
_cou¡
, -1);

198 if(
cou¡
 == 0) {

202 if(
DEBUG_C_STR
)

203 
	`¥ötf
("Fªeög %s\n", 
_d©a
->
	`_°r
());

205 #ifde‡
TRACK_LEAKS


206 
	`±hªad_muãx_lock
(&
ow√r_muãx
);

207 
ow√rs
->
	`îa£
(
_d©a
);

208 
	`±hªad_muãx_u∆ock
(&
ow√r_muãx
);

210 
c_°r_d©a
::
	`poﬁ
()->
	`‰ì
(
_d©a
);

212 
	}
}

	@src/util/chomp.cpp

31 
	~"utû/chomp.h
"

33 
	~"k_deföes.h
"

35 #i‚de‡
__GCC


36 
usög
 
	g°d
::
°æí
;

39 
	$chomp_√wlöe
(* 
°r
) {

40 
Àn
 = 
	`°æí
(
°r
);

41 i‡–
°r
[
Àn
-1] == '\n' )

42 
°r
[
Àn
-1] = '\0';

43 
	}
}

46 
	$chomp_ˇºüge_ªtu∫
(* 
°r
) {

47 
Àn
 = 
	`°æí
(
°r
);

48 i‡–
°r
[
Àn
-1] == '\r' )

49 
°r
[
Àn
-1] = '\0';

50 
	}
}

	@src/util/command/printer.cpp

24 
	~"utû.h
"

25 
	~"utû/comm™d/¥öãr.h
"

27 
	~"k_deföes.h
"

30 
	g¥öãr_t
::
	$h™dÀ_comm™d
(c⁄° * 
comm™d
)

32 
num
;

33 i‡–
	`ssˇnf
(
comm™d
, "%*†%d", &
num
) < 1 ) {

34 
	`TRACE
(
TRACE_ALWAYS
, "numÇot specified...áborting\n");

38 
i
 = 0; i < 
num
; i++) {

39 
	`TRACE
(
TRACE_ALWAYS
, "%s\n", 
comm™d
);

41 
	}
}

	@src/util/command/tracer.cpp

24 
	~"utû.h
"

25 
	~"utû/c⁄fig.h
"

26 
	~"utû/comm™d/åa˚r.h
"

28 
	~"k_deföes.h
"

33 
	gåa˚_cmd_t
::
	$£èlü£s
()

35 
_«me
 = 
	`°rög
("trace");

36 
_Æü£s
.
	`push_back
("trace");

37 
_Æü£s
.
	`push_back
("t");

38 
_Æü£s
.
	`push_back
("tracer");

39 
	}
}

42 
	gåa˚_cmd_t
::
	$öô
()

45 
	#ADD_TYPE
(
x
Ë
_known_ty≥s
[
	`c_°r
("%s", #x)] = x;

	)

47 
	`ADD_TYPE
(
TRACE_ALWAYS
);

48 
	`ADD_TYPE
(
TRACE_TUPLE_FLOW
);

49 
	`ADD_TYPE
(
TRACE_PACKET_FLOW
);

50 
	`ADD_TYPE
(
TRACE_SYNC_COND
);

51 
	`ADD_TYPE
(
TRACE_SYNC_LOCK
);

52 
	`ADD_TYPE
(
TRACE_THREAD_LIFE_CYCLE
);

53 
	`ADD_TYPE
(
TRACE_TEMP_FILE
);

54 
	`ADD_TYPE
(
TRACE_CPU_BINDING
);

55 
	`ADD_TYPE
(
TRACE_QUERY_RESULTS
);

56 
	`ADD_TYPE
(
TRACE_QUERY_PROGRESS
);

57 
	`ADD_TYPE
(
TRACE_STATISTICS
);

58 
	`ADD_TYPE
(
TRACE_NETWORK
);

59 
	`ADD_TYPE
(
TRACE_RESPONSE_TIME
);

60 
	`ADD_TYPE
(
TRACE_WORK_SHARING
);

61 
	`ADD_TYPE
(
TRACE_TRX_FLOW
);

62 
	`ADD_TYPE
(
TRACE_KEY_COMP
);

63 
	`ADD_TYPE
(
TRACE_RECORD_FLOW
);

65 
	`ADD_TYPE
(
TRACE_DEBUG
);

66 
	}
};

70 
	gåa˚_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

72 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

73 
èg
[
SERVER_COMMAND_BUFFER_SIZE
];

76 i‡–
	`ssˇnf
(
cmd
, "%s", 
cmd_èg
) < 1 ) {

77 
	`TRACE
(
TRACE_ALWAYS
, "UnableÅoÖarse cmdÅag!\n");

78 
	`ußge
();

79  (
SHELL_NEXT_CONTINUE
);

86 i‡–
	`ssˇnf
(
cmd
, "%*†%s", 
èg
) < 1 ) {

87 
	`ußge
();

88  (
SHELL_NEXT_CONTINUE
);

91 i‡(!
	`°rˇ£cmp
(
èg
, "known")) {

92 
	`¥öt_known_ty≥s
();

93  (
SHELL_NEXT_CONTINUE
);

96 i‡(!
	`°rˇ£cmp
(
èg
, "list")) {

97 
	`¥öt_íabÀd_ty≥s
();

98  (
SHELL_NEXT_CONTINUE
);

101 i‡(!
	`°rˇ£cmp
(
èg
, "enable")) {

102 
åa˚_ty≥
[
SERVER_COMMAND_BUFFER_SIZE
];

103 i‡–
	`ssˇnf
(
cmd
, "%*†%*†%s", 
åa˚_ty≥
) < 1 ) {

104 
	`ußge
();

105  (
SHELL_NEXT_CONTINUE
);

107 
	`íabÀ
(
åa˚_ty≥
);

108  (
SHELL_NEXT_CONTINUE
);

111 i‡(!
	`°rˇ£cmp
(
èg
, "disable")) {

112 
åa˚_ty≥
[
SERVER_COMMAND_BUFFER_SIZE
];

113 i‡–
	`ssˇnf
(
cmd
, "%*†%*†%s", 
åa˚_ty≥
) < 1 ) {

114 
	`ußge
();

115  (
SHELL_NEXT_CONTINUE
);

117 
	`dißbÀ
(
åa˚_ty≥
);

118  (
SHELL_NEXT_CONTINUE
);

121 
	`TRACE
(
TRACE_ALWAYS
, "UƒecognizedÅag %s\n", 
èg
);

122 
	`ußge
();

123  (
SHELL_NEXT_CONTINUE
);

124 
	}
}

128 
	gåa˚_cmd_t
::
	$íabÀ
(c⁄° * 
ty≥
)

130 
m≠
<
c_°r
, >::
ôî©‹
 
ô
;

131 
ô
 = 
_known_ty≥s
.
	`begö
(); ià!_known_ty≥s.
	`íd
(); ++it) {

132 i‡(!
	`°rˇ£cmp
(
ô
->
fú°
.
	`d©a
(), 
ty≥
)) {

134 
mask
 = 
ô
->
£c⁄d
;

135 
	`TRACE_SET
(
	`TRACE_GET
(Ë| 
mask
);

136 
	`TRACE
(
TRACE_ALWAYS
, "E«bÀd %s\n", 
ô
->
fú°
.
	`d©a
());

141 
	`TRACE
(
TRACE_ALWAYS
, "Unknow¿ty≥ %s\n", 
ty≥
);

142 
	}
}

146 
	gåa˚_cmd_t
::
	$dißbÀ
(c⁄° * 
ty≥
)

148 
m≠
<
c_°r
, >::
ôî©‹
 
ô
;

149 
ô
 = 
_known_ty≥s
.
	`begö
(); ià!_known_ty≥s.
	`íd
(); ++it) {

150 i‡(!
	`°rˇ£cmp
(
ô
->
fú°
.
	`d©a
(), 
ty≥
)) {

152 
mask
 = 
ô
->
£c⁄d
;

153 
	`TRACE_SET
(
	`TRACE_GET
(Ë& (~
mask
));

154 
	`TRACE
(
TRACE_ALWAYS
, "DißbÀd %s\n", 
ô
->
fú°
.
	`d©a
());

159 
	`TRACE
(
TRACE_ALWAYS
, "Unknow¿ty≥ %s\n", 
ty≥
);

160 
	}
}

164 
	gåa˚_cmd_t
::
	$¥öt_known_ty≥s
() {

166 
m≠
<
c_°r
, >::
ôî©‹
 
ô
;

167 
ô
 = 
_known_ty≥s
.
	`begö
(); ià!_known_ty≥s.
	`íd
(); ++it) {

168 
	`TRACE
(
TRACE_ALWAYS
,

169 "Regi°îedÅø˚Åy≥ %s\n", 
ô
->
fú°
.
	`d©a
());

171 
	}
}

175 
	gåa˚_cmd_t
::
	$¥öt_íabÀd_ty≥s
() {

177 
m≠
<
c_°r
, >::
ôî©‹
 
ô
;

178 
ô
 = 
_known_ty≥s
.
	`begö
(); ià!_known_ty≥s.
	`íd
(); ++it) {

179 
mask
 = 
ô
->
£c⁄d
;

180 i‡–
	`TRACE_GET
(Ë& 
mask
 )

181 
	`TRACE
(
TRACE_ALWAYS
, "E«bÀdÅy≥ %s\n", 
ô
->
fú°
.
	`d©a
());

183 
	}
}

187 
	gåa˚_cmd_t
::
	$ußge
() {

188 
	`TRACE
(
TRACE_ALWAYS
, "trace known|list|enable <type>|disable <type>\n");

189 
	}
}

	@src/util/confparser.cpp

31 
	~"utû/c⁄Â¨£r.h
"

34 
	gC⁄figFûe
::
	$C⁄figFûe
–
°rög
 
fûíame
, såög 
dñimôî
,

35 
°rög
 
commít
, såög 
£¡ry
 )

36 : 
	`myDñimôî
(
dñimôî
), 
	`myCommít
(
commít
), 
	`mySíåy
(
£¡ry
),

37 
	$_‚ame
(
fûíame
)

40 
°d
::
if°ªam
 
	`ö
–
fûíame
.
	`c_°r
() );

42 if–!
ö
 ) 
throw
 
	`fûe_nŸ_found
–
fûíame
 );

43 
ö
 >> (*
this
);

44 
	}
}

47 
	gC⁄figFûe
::
	$C⁄figFûe
()

48 : 
	`myDñimôî
–
	`°rög
(1,'='Ë), 
	`myCommít
( string(1,'#') )

51 
	}
}

55 
	gC⁄figFûe
::
	$ßveCuºítC⁄fig
()

57 
°d
::
of°ªam
 
	`of
(
_‚ame
.
	`c_°r
());

58 i‡(!
of
Ë
throw
 
	`fûe_nŸ_found
(
_‚ame
);

59 
of
 << (*
this
);

60 
	}
}

63 
	gC⁄figFûe
::
	$ªmove
–c⁄° 
°rög
& 
key
 )

66 
myC⁄ã¡s
.
	`îa£
–myC⁄ã¡s.
	`föd
–
key
 ) );

68 
	}
}

71 
boﬁ
 
	gC⁄figFûe
::
	$keyExi°s
–c⁄° 
°rög
& 
key
 ) const

74 
m≠ci
 
p
 = 
myC⁄ã¡s
.
	`föd
–
key
 );

75  ( 
p
 !
myC⁄ã¡s
.
	`íd
() );

76 
	}
}

80 
	gC⁄figFûe
::
	$åim
–
°rög
& 
s
 )

83 c⁄° 
whôe•a˚
[] = " \n\t\v\r\f";

84 
s
.
	`îa£
–0, s.
	`föd_fú°_nŸ_of
(
whôe•a˚
) );

85 
s
.
	`îa£
–s.
	`föd_œ°_nŸ_of
(
whôe•a˚
) + 1U );

86 
	}
}

89 
	g°d
::
o°ªam
& 
›î©‹
<<–
°d
::o°ªam& 
os
, c⁄° 
	gC⁄figFûe
& 
	gcf
 )

92  
	gC⁄figFûe
::
m≠ci
 
p
 = 
cf
.
myC⁄ã¡s
.
begö
();

93 
	gp
 !
cf
.
myC⁄ã¡s
.
íd
();

94 ++
	gp
 )

96 
	gos
 << 
	gp
->
	gfú°
 << " " << 
	gcf
.
	gmyDñimôî
 << " ";

97 
	gos
 << 
	gp
->
	g£c⁄d
 << 
	g°d
::
ídl
;

99  
	gos
;

103 
	g°d
::
i°ªam
& 
›î©‹
>>–
°d
::i°ªam& 
is
, 
	gC⁄figFûe
& 
	gcf
 )

107 
	g°rög
::
	tsize_ty≥
 
	tpos
;

108 c⁄° 
	g°rög
& 
	gdñim
 = 
cf
.
myDñimôî
;

109 c⁄° 
	g°rög
& 
	gcomm
 = 
cf
.
myCommít
;

110 c⁄° 
	g°rög
& 
	g£¡ry
 = 
cf
.
mySíåy
;

111 c⁄° 
pos
 
	gskù
 = 
dñim
.
Àngth
();

113 
°rög
 
	g√xéöe
 = "";

115  
	gis
 || 
	g√xéöe
.
Àngth
() > 0 ) {

117 
°rög
 
	glöe
;

118 if–
	g√xéöe
.
Àngth
() > 0 )

120 
	glöe
 = 
√xéöe
;

121 
	g√xéöe
 = "";

125 
	g°d
::
gëlöe
–
is
, 
löe
 );

129 
	glöe
 = 
löe
.
sub°r
–0,Üöe.
föd
(
comm
) );

132 if–
	g£¡ry
 !"" && 
löe
.
föd
(
£¡ry
Ë!
°rög
::
≈os
 )  
is
;

135 
pos
 
	gdñimPos
 = 
löe
.
föd
–
dñim
 );

136 if–
	gdñimPos
 < 
	g°rög
::
≈os
 ) {

138 
°rög
 
key
 = 
löe
.
sub°r
–0, 
dñimPos
 );

139 
	glöe
.
ª∂a˚
–0, 
dñimPos
+
skù
, "" );

144 
boﬁ
 
	gãrmö©e
 = 
Ál£
;

145  !
	gãrmö©e
 && 
	gis
 ) {

146 
	g°d
::
gëlöe
–
is
, 
√xéöe
 );

147 
	gãrmö©e
 = 
åue
;

149 
°rög
 
	g∆c›y
 = 
√xéöe
;

150 
	gC⁄figFûe
::
åim
(
∆c›y
);

151 if–
	g∆c›y
 == "" ) ;

153 
	g√xéöe
 = 
√xéöe
.
sub°r
–0,Çexéöe.
föd
(
comm
) );

154 if–
	g√xéöe
.
föd
(
dñim
Ë!
°rög
::
≈os
 )

156 if–
	g£¡ry
 !"" && 
√xéöe
.
föd
(
£¡ry
Ë!
°rög
::
≈os
 )

159 
	g∆c›y
 = 
√xéöe
;

160 
	gC⁄figFûe
::
åim
(
∆c›y
);

161 if–
	g∆c›y
 !"" ) 
löe
 += "\n";

162 
	glöe
 +
√xéöe
;

163 
	gãrmö©e
 = 
Ál£
;

167 
	gC⁄figFûe
::
åim
(
key
);

168 
	gC⁄figFûe
::
åim
(
löe
);

169 
	gcf
.
	gmyC⁄ã¡s
[
key
] = 
löe
;

173  
	gis
;

	@src/util/countdown.cpp

31 
	~"utû/cou¡down.h
"

36 
	gcou¡down_t
::
	$ª£t
(c⁄° 
√wcou¡
)

41 
_°©e
 = 
√wcou¡
*
CD_NUMBER
;

42 
	}
}

45 
boﬁ


46 
	gcou¡down_t
::
	$po°
(
boﬁ
 
is_îr‹
)

48 
ﬁd_vÆue
 = *&
_°©e
;

49 
ﬁd_vÆue
 >2*
CD_NUMBER
) {

50 
√w_vÆue
 = (
is_îr‹
? 
CD_ERROR
 : 
ﬁd_vÆue
-
CD_NUMBER
);

51 
cur_vÆue
 = 
	`©omic_ˇs_32
(&
_°©e
, 
ﬁd_vÆue
, 
√w_vÆue
);

52 i‡(
cur_vÆue
 =
ﬁd_vÆue
) {

53 
	`as£π
(
is_îr‹
 || 
√w_vÆue
 >
CD_NUMBER
);

54  (
is_îr‹
);

58 
ﬁd_vÆue
 = 
cur_vÆue
;

62 i‡(
ﬁd_vÆue
 =
CD_ERROR
) {

63  (
Ál£
);

67 
	`as£π
(
ﬁd_vÆue
 =
CD_NUMBER
);

68 
_°©e
 = (
is_îr‹
? 
CD_ERROR
 : 0);

69  (
åue
);

70 
	}
}

72 
	gcou¡down_t
::
	$ªmaöög
() const

74 
ﬁd_vÆue
 = *&
_°©e
;

75  ((
ﬁd_vÆue
 =
CD_ERROR
Ë? -1 : old_vÆue/
CD_NUMBER
);

76 
	}
}

	@src/util/envvar.cpp

32 
	~"utû/ívv¨.h
"

46 
°rög
 
	gívV¨
::
	$_ªadC⁄fV¨
(c⁄° 
°rög
& 
sP¨am
, c⁄° såög& 
sDefVÆue
)

48 i‡(
sP¨am
.
	`em±y
()||
sDefVÆue
.empty()) {

49 
	`TRACE
–
TRACE_ALWAYS
, "Invalid Param or Value input\n");

53 
	`w_as£π2
 (
_pÂ¨£r
);

54 
°rög
 
tmp
;

56 
_pÂ¨£r
->
	`ªadI¡o
(
tmp
,
sP¨am
,
sDefVÆue
);

58 
_evm
[
sP¨am
] = 
tmp
;

59 
	`TRACE
–
TRACE_DEBUG
, "(%sË(%s)\n", 
sP¨am
.
	`c_°r
(), 
tmp
.c_str());

60  (
tmp
);

61 
	}
}

66 
	gívV¨
::
	$£tV¨
(c⁄° 
°rög
& 
sP¨am
, c⁄° såög& 
sVÆue
)

68 i‡((!
sP¨am
.
	`em±y
())&&(!
sVÆue
.empty())) {

69 
	`TRACE
–
TRACE_DEBUG
, "(%sË(%s)\n", 
sP¨am
.
	`c_°r
(), 
sVÆue
.c_str());

70 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

71 
_evm
[
sP¨am
] = 
sVÆue
;

72  (
_evm
.
	`size
());

75 
	}
}

78 
	gívV¨
::
	$£tV¨I¡
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iVÆue
)

80  (
	`£tV¨
(
sP¨am
,
	`_toSåög
(
iVÆue
)));

81 
	}
}

86 
	gívV¨
::
	$ª‰eshV¨s
()

88 
	`TRACE
–
TRACE_DEBUG
, "RefreshingÉnvironment variables\n");

89 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

90 
ívV¨It
 
ô

_evm
.
	`begö
(); ià!_evm.
	`íd
(); ++it)

91 
	`_ªadC⁄fV¨
(
ô
->
fú°
,ô->
£c⁄d
);

93 
	}
}

99 
°rög
 
	gívV¨
::
	$gëV¨
(c⁄° 
°rög
& 
sP¨am
, c⁄° såög& 
sDefVÆue
)

101 i‡(
sP¨am
.
	`em±y
()) {

102 
	`TRACE
–
TRACE_ALWAYS
, "Invalid Param input\n");

106 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

107 
ívV¨It
 
ô
 = 
_evm
.
	`föd
(
sP¨am
);

108 i‡(
ô
==
_evm
.
	`íd
()) {

110  (
	`_ªadC⁄fV¨
(
sP¨am
,
sDefVÆue
));

112  (
ô
->
£c⁄d
);

113 
	}
}

115 
	gívV¨
::
	$gëV¨I¡
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iDefVÆue
)

117  (
	`©oi
(
	`gëV¨
(
sP¨am
,
	`_toSåög
(
iDefVÆue
)).
	`c_°r
()));

118 
	}
}

120 
	gívV¨
::
	$gëV¨DoubÀ
(c⁄° 
°rög
& 
sP¨am
, c⁄° & 
iDefVÆue
)

122 * 
ídp
;

123 
d
;

124 
°rög
 
r
 = 
	`gëV¨
(
sP¨am
,
	`_toSåög
(
iDefVÆue
));

125 
d
 = 
	`°πod
(
r
.
	`c_°r
(), &
ídp
);

126  (
d
);

127 
	}
}

131 
	gívV¨
::
	$checkV¨
(c⁄° 
°rög
& 
sP¨am
)

133 
°rög
 
r
;

134 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

136 
ívV¨It
 
ô
 = 
_evm
.
	`föd
(
sP¨am
);

137 i‡(
ô
!=
_evm
.
	`íd
()) {

138 
r
 = 
ô
->
£c⁄d
 + " (map)";

142 
	`w_as£π2
 (
_pÂ¨£r
);

143 i‡(
_pÂ¨£r
->
	`keyExi°s
(
sP¨am
)) {

144 
_pÂ¨£r
->
	`ªadI¡o
(
r
,
sP¨am
,
	`°rög
("Not found"));

145 
r
 =Ñ + " (conf)";

148 
r
 = 
	`°rög
("Not found");

151 
	`TRACE
–
TRACE_ALWAYS
, "%†-> %s\n", 
sP¨am
.
	`c_°r
(), 
r
.c_str());

152 
	}
}

161 
°rög
 
	gívV¨
::
	$gëSysName
()

163 
°rög
 
sysName
 = "system";

164  (
	`gëSysV¨
(
sysName
));

165 
	}
}

167 
	gívV¨
::
	$£tSysName
(c⁄° 
°rög
& 
sysName
)

169 
°rög
 
c⁄figsys
 = 
	`gëV¨
("db-config","invalid");

170 
c⁄figsys
 = configsys + "-system";

171  (
	`£tV¨
(
c⁄figsys
,
sysName
));

172 
	}
}

174 
°rög
 
	gívV¨
::
	$gëSysDesign
()

176 
°rög
 
sysDesign
 = "design";

177  (
	`gëSysV¨
(
sysDesign
));

178 
	}
}

180 
	gívV¨
::
	$£tSysDesign
(c⁄° 
°rög
& 
sysDesign
)

182 
°rög
 
c⁄figsys
 = 
	`gëV¨
("db-config","invalid");

183 
c⁄figsys
 = configsys + "-design";

184  (
	`£tV¨
(
c⁄figsys
,
sysDesign
));

185 
	}
}

187 
°rög
 
	gívV¨
::
	$gëSysV¨
(
°rög
 
sP¨am
)

189 
°rög
 
c⁄fig
 = 
	`gëV¨
("db-config","invalid");

190 
c⁄fig
 = c⁄fig + "-" + 
sP¨am
;

191  (
	`gëV¨
(
c⁄fig
,"invalid"));

192 
	}
}

195 
	gívV¨
::
	$gëSysV¨I¡
(
°rög
 
sP¨am
)

197 
°rög
 
c⁄fig
 = 
	`gëV¨
("db-config","invalid");

198 
c⁄fig
 = c⁄fig + "-" + 
sP¨am
;

199  (
	`gëV¨I¡
(
c⁄fig
,0));

200 
	}
}

202 
	gívV¨
::
	$gëSysV¨DoubÀ
(
°rög
 
sP¨am
)

204 
°rög
 
c⁄fig
 = 
	`gëV¨
("db-config","invalid");

205 
c⁄fig
 = c⁄fig + "-" + 
sP¨am
;

206  (
	`gëV¨DoubÀ
(
c⁄fig
,0.0));

207 
	}
}

210 
	gívV¨
::
	$£tC⁄figuøti⁄
(
°rög
 
sC⁄figuøti⁄
)

212  (
	`£tV¨
("db-c⁄fig",
sC⁄figuøti⁄
));

213 
	}
}

217 
	gívV¨
::
	$¥ötV¨s
()

219 
	`TRACE
–
TRACE_DEBUG
, "Environment variables\n");

220 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

221 
ívV¨C⁄°It
 
cô

_evm
.
	`begö
(); cô !_evm.
	`íd
(); ++cit)

222 
	`TRACE
–
TRACE_STATISTICS
, "%†-> %s\n", 
cô
->
fú°
.
	`c_°r
(), cô->
£c⁄d
.c_str());

223 
	}
}

228 
	gívV¨
::
	$£tC⁄fFûe
(c⁄° 
°rög
& 
sC⁄fFûe
)

230 
	`w_as£π0
 (!
sC⁄fFûe
.
	`em±y
());

231 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

232 
_c‚ame
 = 
sC⁄fFûe
;

233 
_pÂ¨£r
 = 
√w
 
	`C⁄figFûe
(
_c‚ame
);

234 
	`w_as£π0
 (
_pÂ¨£r
);

235 
	}
}

237 
°rög
 
	gívV¨
::
	$gëC⁄fFûe
() const

239  (
_c‚ame
);

240 
	}
}

244 
	gívV¨
::
	$∑r£O√SëReq
(c⁄° 
°rög
& 
ö
)

246 
°rög
 
∑øm
;

247 
°rög
 
vÆue
;

248 
vÆue£p
 = '=';

250 
size_t
 
£pos
 = 
ö
.
	`föd
(
vÆue£p
);

251 if(
£pos
 =
°rög
::
≈os
) {

252 
	`TRACE
–
TRACE_DEBUG
, "(%sËi†mÆf‹med\n", 
ö
.
	`c_°r
());

255 
∑øm
 = 
ö
.
	`sub°r
(0, 
£pos
);

256 
vÆue
 = 
ö
.
	`sub°r
(
£pos
+1);

257 i‡(
vÆue
.
	`em±y
()) {

258 
	`TRACE
–
TRACE_DEBUG
, "(%sËi†mÆf‹med\n", 
ö
.
	`c_°r
());

261 
	`TRACE
–
TRACE_DEBUG
, "%†-> %s\n", 
∑øm
.
	`c_°r
(), 
vÆue
.c_str());

262 
	`CRITICAL_SECTION
(
evm_cs
,
_lock
);

263 
_evm
[
∑øm
] = 
vÆue
;

265 
	}
}

270 
	gívV¨
::
	$∑r£SëReq
(c⁄° 
°rög
& 
ö
)

272 
˙t
=0;

275 
˛au££p
 = ' ';

276 
size_t
 
°¨t
 = 
ö
.
	`föd
(
˛au££p
);

277 
size_t
 
íd
;

278 ; 
°¨t
 !
°rög
::
≈os
; sèπ=
íd
) {

279 
°¨t
++;

280 
íd
 = 
ö
.
	`föd
(
˛au££p
, 
°¨t
);

281 
	`∑r£O√SëReq
(
ö
.
	`sub°r
(
°¨t
, 
íd
-start));

282 ++
˙t
;

284  (
˙t
);

285 
	}
}

	@src/util/fileops.cpp

36 
	~"utû/fûe›s.h
"

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<as£π.h
>

42 
	~<sys/ty≥s.h
>

43 
	~<sys/°©.h
>

44 
	~<uni°d.h
>

46 
	~"utû/åa˚.h
"

47 
	~"utû/gu¨d.h
"

53 
	#MAX_PATH_SIZE
 1024

	)

59 
	#GET_USER_ID
(Ë
	`gëuid
()

	)

60 
	#GET_GROUP_ID
(Ë
	`gëgid
()

	)

66 
_is_dúe˘‹y
(c⁄° 
°©
* 
buf
);

67 
_is_ªadabÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
);

68 
_is_wrôóbÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
);

69 
_is_execuèbÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
);

70 
_íds_wôh
(c⁄° * 
°r
, c⁄° * 
ídög
);

71 
_°‹e
(* 
d°
, 
d°_size
, c⁄° * 
§c
);

77 c⁄° 
	gdebug_åa˚_ty≥
 = 
TRACE_DEBUG
;

78 
	#DEBUG_TRACE
(
f‹m©
, 
¨g
Ë
	`TRACE
(
debug_åa˚_ty≥
, f‹m©,árg)

	)

92 
	$fûe›s_check_fûe_exi°s
(c⁄° * 
∑th
)

94 
°©
 
buf
;

95 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

96 i‡(
°©_ªt
 != 0) {

97 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

98  
FILEOPS_ERROR_NOT_FOUND
;

102 
	}
}

113 
	$fûe›s_check_fûe_dúe˘‹y
(c⁄° * 
∑th
)

115 
°©
 
buf
;

116 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

117 i‡(
°©_ªt
 != 0) {

118 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

119  
FILEOPS_ERROR_NOT_FOUND
;

122 i‡(
	`_is_dúe˘‹y
(&
buf
))

125  
FILEOPS_ERROR_NOT_DIRECTORY
;

126 
	}
}

137 
	$fûe›s_check_fûe_ªadabÀ
(c⁄° * 
∑th
)

139 
°©
 
buf
;

140 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

141 i‡(
°©_ªt
 != 0) {

142 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

143  
FILEOPS_ERROR_NOT_FOUND
;

146 
uid_t
 
uid
 = 
	`GET_USER_ID
();

147 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

148 i‡(
	`_is_ªadabÀ
(&
buf
, 
uid
, 
gid
))

151  
FILEOPS_ERROR_PERMISSION_DENIED
;

152 
	}
}

163 
	$fûe›s_check_fûe_wrôóbÀ
(c⁄° * 
∑th
)

165 
°©
 
buf
;

166 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

167 i‡(
°©_ªt
 != 0) {

168 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

169  
FILEOPS_ERROR_NOT_FOUND
;

172 
uid_t
 
uid
 = 
	`GET_USER_ID
();

173 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

174 i‡(
	`_is_wrôóbÀ
(&
buf
, 
uid
, 
gid
))

177  
FILEOPS_ERROR_PERMISSION_DENIED
;

178 
	}
}

189 
	$fûe›s_check_fûe_execuèbÀ
(c⁄° * 
∑th
)

191 
°©
 
buf
;

192 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

193 i‡(
°©_ªt
 != 0) {

194 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

195  
FILEOPS_ERROR_NOT_FOUND
;

198 
uid_t
 
uid
 = 
	`GET_USER_ID
();

199 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

200 i‡(
	`_is_execuèbÀ
(&
buf
, 
uid
, 
gid
))

203  
FILEOPS_ERROR_PERMISSION_DENIED
;

204 
	}
}

215 
	$fûe›s_check_dúe˘‹y_ac˚ssibÀ
(c⁄° * 
∑th
)

217 
°©
 
buf
;

218 
°©_ªt
 = 
	`°©
(
∑th
, &
buf
);

219 i‡(
°©_ªt
 != 0) {

220 
	`DEBUG_TRACE
("°©(%s, ...ËÁûed\n", 
∑th
);

221  
FILEOPS_ERROR_NOT_FOUND
;

224 i‡(!
	`_is_dúe˘‹y
(&
buf
))

225  
FILEOPS_ERROR_NOT_DIRECTORY
;

227 
uid_t
 
uid
 = 
	`GET_USER_ID
();

228 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

229 i‡(
	`_is_ªadabÀ
(&
buf
, 
uid
, 
gid
Ë&& 
	`_is_execuèbÀ
(&buf, uid, gid))

232  
FILEOPS_ERROR_PERMISSION_DENIED
;

233 
	}
}

247 
	$fûe›s_check_fûe_¸óèbÀ
(c⁄° * 
∑th
)

249 
°©
 
fbuf
;

250 
°©_ªt_f
 = 
	`°©
(
∑th
, &
fbuf
);

251 i‡(
°©_ªt_f
 == 0)

254 
uid_t
 
uid
 = 
	`GET_USER_ID
();

255 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

256 i‡(
	`_is_wrôóbÀ
(&
fbuf
, 
uid
, 
gid
))

259  
FILEOPS_ERROR_PERMISSION_DENIED
;

264 
size
 = 
	`°æí
(
∑th
)+1;

265 i‡(
size
 > 
MAX_PATH_SIZE
)

266  
FILEOPS_ERROR_PATH_TOO_LONG
;

269 
¨øy_gu¨d_t
<> 
∑ª¡_dú
 = 
√w
 [
size
];

270 
ªt
 = 
	`fûe›s_∑r£_∑ª¡_dúe˘‹y
(
∑ª¡_dú
, 
size
, 
∑th
);

271 
	`as£π
((
ªt
 =0Ë|| (ªà=
FILEOPS_ERROR_PATH_TOO_LONG
));

272 i‡(
ªt
 =
FILEOPS_ERROR_PATH_TOO_LONG
)

273  
FILEOPS_ERROR_PATH_TOO_LONG
;

276 
°©
 
pbuf
;

277 
°©_ªt_p
 = 
	`°©
(
∑ª¡_dú
, &
pbuf
);

278 i‡(
°©_ªt_p
 != 0)

280  
FILEOPS_ERROR_PERMISSION_DENIED
;

283 
uid_t
 
uid
 = 
	`GET_USER_ID
();

284 
uid_t
 
gid
 = 
	`GET_GROUP_ID
();

285 i‡(
	`_is_wrôóbÀ
(&
pbuf
, 
uid
, 
gid
))

288  
FILEOPS_ERROR_PERMISSION_DENIED
;

290 
	}
}

306 
	$fûe›s_∑r£_∑ª¡_dúe˘‹y
(* 
d°
, 
d°_size
, c⁄° * 
§c
)

313 
§c_Àn
 = 
	`°æí
(
§c
);

314 
size
 = 
§c_Àn
+1;

315 i‡(
size
 > 
d°_size
)

316  
FILEOPS_ERROR_PATH_TOO_LONG
;

322 
	`_íds_wôh
(
§c
, src);

326 
¶ash_pos
;

327 
¶ash_pos
 = 
§c_Àn
-1; slash_pos >= 0; slash_pos--)

328 i‡(
§c
[
¶ash_pos
] == '/')

331 i‡(
¶ash_pos
 >= 0)

340 
	`°∫˝y
(
d°
, 
§c
, 
¶ash_pos
+1);

341 
d°
[
¶ash_pos
+1] = '\0';

348 i‡(!
	`°rcmp
(
§c
, "."))

349  
	`_°‹e
(
d°
, 
d°_size
, "../");

351 i‡(!
	`°rcmp
(
§c
, ".."))

352  
	`_°‹e
(
d°
, 
d°_size
, "../../");

354  
	`_°‹e
(
d°
, 
d°_size
, "./");

355 
	}
}

363 
	$_is_dúe˘‹y
(c⁄° 
°©
* 
buf
)

365  
	`S_ISDIR
(
buf
->
°_mode
);

366 
	}
}

369 
	$_is_ªadabÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
)

372 (
buf
->
°_mode
 & 
S_IROTH
)

373 || ((
buf
->
°_mode
 & 
S_IRGRP
Ë&& (buf->
°_gid
 =
gid
))

374 || ((
buf
->
°_mode
 & 
S_IRUSR
Ë&& (buf->
°_uid
 =
uid
));

375 
	}
}

378 
	$_is_wrôóbÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
)

381 (
buf
->
°_mode
 & 
S_IWOTH
)

382 || ((
buf
->
°_mode
 & 
S_IWGRP
Ë&& (buf->
°_gid
 =
gid
))

383 || ((
buf
->
°_mode
 & 
S_IWUSR
Ë&& (buf->
°_uid
 =
uid
));

384 
	}
}

387 
	$_is_execuèbÀ
(c⁄° 
°©
* 
buf
, 
uid_t
 
uid
, uid_à
gid
)

390 (
buf
->
°_mode
 & 
S_IXOTH
)

391 || ((
buf
->
°_mode
 & 
S_IXGRP
Ë&& (buf->
°_gid
 =
gid
))

392 || ((
buf
->
°_mode
 & 
S_IXUSR
Ë&& (buf->
°_uid
 =
uid
));

393 
	}
}

396 
	$_íds_wôh
(c⁄° * 
°r
, c⁄° * 
ídög
)

398 
°r_Àn
 = 
	`°æí
(
°r
);

399 
ídög_Àn
 = 
	`°æí
(
ídög
);

402 i‡(
ídög_Àn
 > 
°r_Àn
)

405 
°r_pos
 = 
°r_Àn
-1;

406 
ídög_pos
 = 
ídög_Àn
-1;

408 
ídög_pos
 >= 0)

410 i‡(
ídög
[
ídög_pos
] !
°r
[
°r_pos
])

412 
°r_pos
--;

413 
ídög_pos
--;

418 
	}
}

421 
	$_°‹e
(* 
d°
, 
d°_size
, c⁄° * 
§c
)

423 
§c_Àn
 = 
	`°æí
(
§c
);

424 i‡((
§c_Àn
+1Ë> 
d°_size
)

425  
FILEOPS_ERROR_PATH_TOO_LONG
;

426 
	`°∫˝y
(
d°
, 
§c
, 
§c_Àn
);

427 
d°
[
§c_Àn
] = '\0';

429 
	}
}

	@src/util/fnv.cpp

57 
	~"utû/‚v.h
"

63 
	#FNV_32_PRIME
 ((
uöt32_t
)0x01000193)

	)

81 
uöt32_t


82 
	$‚v_hash
(c⁄° *
bp
, 
size_t
 
Àn
, 
uöt32_t
 
hvÆ
)

84 c⁄° *
be
 = 
bp
 + 
Àn
;

89 
bp
 < 
be
) {

92 
hvÆ
 ^(
uöt32_t
)*
bp
++;

95 #i‡
	`deföed
(
NO_FNV_GCC_OPTIMIZATION
)

96 
hvÆ
 *
FNV_32_PRIME
;

98 
hvÆ
 += (hval<<1) + (hval<<4) + (hval<<7) + (hval<<8) + (hval<<24);

103  
hvÆ
;

104 
	}
}

115 
ölöe


116 
uöt32_t
 
	$mix
(
vÆ
, 
uöt32_t
 
hvÆ
) {

117 
hvÆ
 ^(
uöt32_t
Ë
vÆ
;

118 
hvÆ
 += (hval<<1) + (hval<<4) + (hval<<7) + (hval<<8) + (hval<<24);

119  
hvÆ
;

120 
	}
}

122 
uöt32_t


123 
	$‚v_hash
(c⁄° *
bp
, 
size_t
 
Àn
, 
uöt32_t
 
hvÆ
)

126 c⁄° *
be
 = 
bp
 + 
Àn
 - 8;

131 
bp
 -8 - (
Àn
 % 8);

135 
Àn
 % 8) {

141 
bp
 += 8;

142 
hvÆ
 = 
	`mix
(
bp
[0], hval);

144 
hvÆ
 = 
	`mix
(
bp
[1], hval);

146 
hvÆ
 = 
	`mix
(
bp
[2], hval);

148 
hvÆ
 = 
	`mix
(
bp
[3], hval);

150 
hvÆ
 = 
	`mix
(
bp
[4], hval);

152 
hvÆ
 = 
	`mix
(
bp
[5], hval);

154 
hvÆ
 = 
	`mix
(
bp
[6], hval);

156 
hvÆ
 = 
	`mix
(
bp
[7], hval);

157 } 
bp
 < 
be
);

161  
hvÆ
;

162 
	}
}

167 
	$maö
() {

168 
uöt32_t
 
hash
 = 
FNV_INIT
;

169 
i
[2];

170 *
i
=0; *i < (1 << 28); ++*i)

171 
hash
 ^
	`‚v_hash
((*Ë&
i
, (i), hash);

174 
	}
}

	@src/util/hash_functions.cpp

2 
	~"utû/hash_fun˘i⁄s.h
"

6 
	$RSHash
(c⁄° * 
°r
, 
Àn
)

8 
b
 = 378551;

9 
a
 = 63689;

10 
hash
 = 0;

11 
i
 = 0;

13 
i
 = 0; i < 
Àn
; 
°r
++, i++)

15 
hash
 = hash * 
a
 + (*
°r
);

16 
a
 =á * 
b
;

19  (
hash
 & 0x7FFFFFFF);

20 
	}
}

25 
	$JSHash
(c⁄° * 
°r
, 
Àn
)

27 
hash
 = 1315423911;

28 
i
 = 0;

30 
i
 = 0; i < 
Àn
; 
°r
++, i++)

32 
hash
 ^((hash << 5Ë+ (*
°r
) + (hash >> 2));

35  (
hash
 & 0x7FFFFFFF);

36 
	}
}

41 
	$PJWHash
(c⁄° * 
°r
, 
Àn
)

43 
BôsInUnsig√dI¡
 = ()(() * 8);

44 
ThªeQu¨ãrs
 = ()((
BôsInUnsig√dI¡
 * 3) / 4);

45 
O√Eighth
 = ()(
BôsInUnsig√dI¡
 / 8);

46 
HighBôs
 = ()(0xFFFFFFFFË<< (
BôsInUnsig√dI¡
 - 
O√Eighth
);

47 
hash
 = 0;

48 
ã°
 = 0;

49 
i
 = 0;

51 
i
 = 0; i < 
Àn
; 
°r
++, i++)

53 
hash
 = (hash << 
O√Eighth
Ë+ (*
°r
);

55 if((
ã°
 = 
hash
 & 
HighBôs
) != 0)

57 
hash
 = (–hash ^ (
ã°
 >> 
ThªeQu¨ãrs
)Ë& (~
HighBôs
));

61  (
hash
 & 0x7FFFFFFF);

62 
	}
}

67 
	$ELFHash
(c⁄° * 
°r
, 
Àn
)

69 
hash
 = 0;

70 
x
 = 0;

71 
i
 = 0;

73 
i
 = 0; i < 
Àn
; 
°r
++, i++)

75 
hash
 = (hash << 4Ë+ (*
°r
);

76 if((
x
 = 
hash
 & 0xF0000000L) != 0)

78 
hash
 ^(
x
 >> 24);

79 
hash
 &~
x
;

83  (
hash
 & 0x7FFFFFFF);

84 
	}
}

89 
	$BKDRHash
(c⁄° * 
°r
, 
Àn
)

91 
£ed
 = 131;

92 
hash
 = 0;

93 
i
 = 0;

95 
i
 = 0; i < 
Àn
; 
°r
++, i++)

97 
hash
 = (hash * 
£ed
Ë+ (*
°r
);

100  (
hash
 & 0x7FFFFFFF);

101 
	}
}

106 
	$SDBMHash
(c⁄° * 
°r
, 
Àn
)

108 
hash
 = 0;

109 
i
 = 0;

111 
i
 = 0; i < 
Àn
; 
°r
++, i++)

113 
hash
 = (*
°r
) + (hash << 6) + (hash << 16) - hash;

116  (
hash
 & 0x7FFFFFFF);

117 
	}
}

122 
	$DJBHash
(c⁄° * 
°r
, 
Àn
)

124 
hash
 = 5381;

125 
i
 = 0;

127 
i
 = 0; i < 
Àn
; 
°r
++, i++)

129 
hash
 = ((hash << 5Ë+ hashË+ (*
°r
);

132  (
hash
 & 0x7FFFFFFF);

133 
	}
}

138 
	$DEKHash
(c⁄° * 
°r
, 
Àn
)

140 
hash
 = 
Àn
;

141 
i
 = 0;

143 
i
 = 0; i < 
Àn
; 
°r
++, i++)

145 
hash
 = ((hash << 5Ë^ (hash >> 27)Ë^ (*
°r
);

147  (
hash
 & 0x7FFFFFFF);

148 
	}
}

153 
	$APHash
(c⁄° * 
°r
, 
Àn
)

155 
hash
 = 0;

156 
i
 = 0;

158 
i
 = 0; i < 
Àn
; 
°r
++, i++)

160 
hash
 ^((
i
 & 1Ë=0Ë? ( (hash << 7Ë^ (*
°r
) ^ (hash >> 3)) :

161 (~((
hash
 << 11Ë^ (*
°r
) ^ (hash >> 5)));

164  (
hash
 & 0x7FFFFFFF);

165 
	}
}

	@src/util/history.cpp

24 
	~"utû/c_°r.h
"

25 
	~"utû/åa˚.h
"

27 
	~"k_deföes.h
"

28 
	~"utû/c⁄fig.h
"

33 #ifde‡
HAVE_READLINE


36 
	~<sys/°©.h
>

37 
	~<sys/ty≥s.h
>

38 
	~<f˙é.h
>

39 
	~<î∫o.h
>

40 
	~<uni°d.h
>

41 
	~<ªadlöe/hi°‹y.h
>

45 
boﬁ
 
ísuª_s˛õ¡_dúe˘‹y_exi°s
();

46 
boﬁ
 
åy_hi°‹y_lﬂd
();

47 
boﬁ
 
hi°‹y_ßve
();

59 
boﬁ
 
	$hi°‹y_›í
() {

61 i‡(!
	`ísuª_s˛õ¡_dúe˘‹y_exi°s
())

62  
Ál£
;

64 i‡(!
	`åy_hi°‹y_lﬂd
())

65  
Ál£
;

67  
åue
;

68 
	}
}

72 
boﬁ
 
	$hi°‹y_˛o£
() {

74 i‡(!
	`hi°‹y_ßve
())

75  
Ál£
;

77  
åue
;

78 
	}
}

82 
boﬁ
 
	$ísuª_s˛õ¡_dúe˘‹y_exi°s
() {

84 * 
home_dúe˘‹y
 = 
	`gëív
("HOME");

85 i‡(
home_dúe˘‹y
 =
NULL
) {

86 
	`TRACE
(
TRACE_ALWAYS
,

88  
Ál£
;

91 
c_°r
 
	`s˛õ¡_dúe˘‹y
("%s/%s", 
home_dúe˘‹y
, 
SCLIENT_DIRECTORY_NAME
);

93 
mkdú_ªt
 = 
	`mkdú
(
s˛õ¡_dúe˘‹y
.
	`d©a
(), 
S_IRWXU
);

94 i‡((
mkdú_ªt
 !0Ë&& (
î∫o
 !
EEXIST
)) {

95 
	`TRACE
(
TRACE_ALWAYS
, "CouldÇot create SCLIENT config directory %s\n",

96 
s˛õ¡_dúe˘‹y
.
	`d©a
());

97  
Ál£
;

100  
åue
;

101 
	}
}

105 
boﬁ
 
	$åy_hi°‹y_lﬂd
() {

107 * 
home_dúe˘‹y
 = 
	`gëív
("HOME");

108 i‡(
home_dúe˘‹y
 =
NULL
) {

109 
	`TRACE
(
TRACE_ALWAYS
,

111  
Ál£
;

114 
c_°r
 
	`s˛õ¡_hi°‹y_fûe
("%s/%s/%s",

115 
home_dúe˘‹y
,

116 
SCLIENT_DIRECTORY_NAME
,

117 
SCLIENT_HISTORY_FILE
);

119 
›í_ªt
 = 
	`›í
(
s˛õ¡_hi°‹y_fûe
.
	`d©a
(), 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

120 i‡(
›í_ªt
 == -1) {

121 
	`TRACE
(
TRACE_ALWAYS
, "CouldÇot open SCLIENT history file %s\n",

122 
s˛õ¡_hi°‹y_fûe
.
	`d©a
());

123  
Ál£
;

125 
	`˛o£
(
›í_ªt
);

127 i‡–
	`ªad_hi°‹y
(
s˛õ¡_hi°‹y_fûe
.
	`d©a
()) ) {

128 
	`TRACE
(
TRACE_ALWAYS
, "CouldÇotÑead SCLIENT history file %s\n",

129 
s˛õ¡_hi°‹y_fûe
.
	`d©a
());

130  
Ál£
;

133  
åue
;

134 
	}
}

138 
boﬁ
 
	$hi°‹y_ßve
() {

140 * 
home_dúe˘‹y
 = 
	`gëív
("HOME");

141 i‡(
home_dúe˘‹y
 =
NULL
) {

142 
	`TRACE
(
TRACE_ALWAYS
,

144  
Ál£
;

147 
c_°r
 
	`s˛õ¡_hi°‹y_fûe
("%s/%s/%s",

148 
home_dúe˘‹y
,

149 
SCLIENT_DIRECTORY_NAME
,

150 
SCLIENT_HISTORY_FILE
);

152 i‡–
	`wrôe_hi°‹y
(
s˛õ¡_hi°‹y_fûe
.
	`d©a
()) ) {

153 
	`TRACE
(
TRACE_ALWAYS
, "CouldÇot write SCLIENT history file %s\n",

154 
s˛õ¡_hi°‹y_fûe
.
	`d©a
());

155  
Ál£
;

159  
åue
;

160 
	}
}

	@src/util/linux_procstat.cpp

32 
	~"utû/löux_¥oc°©.h
"

37 
	glöux_¥ocm⁄ô‹_t
::
	$löux_¥ocm⁄ô‹_t
(
sh‹e
::
Sh‹eEnv
* 
ív
,

38 c⁄° 
öãrvÆ_£c
)

39 : 
	`¥ocm⁄ô‹_t
("löux-m⁄",
ív
,
öãrvÆ_£c
)

41 
	`_£tup
(
öãrvÆ_£c
);

42 
	}
}

45 
	glöux_¥ocm⁄ô‹_t
::~
	$löux_¥ocm⁄ô‹_t
()

47 
	}
}

50 
löux_¥ocm⁄ô‹_t
::
	$_£tup
(c⁄° 
öãrvÆ_£c
)

52 
¥ocm⁄ô‹_t
::
	`_£tup
(
öãrvÆ_£c
);

53 
	}
}

58 
	glöux_¥ocm⁄ô‹_t
::
	$gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
)

61  (
_t›öfo
.
	`gë_avg_ußge
(
bUpd©eRódög
));

62 
	}
}

64 
	glöux_¥ocm⁄ô‹_t
::
	$¥öt_avg_ußge
()

66 
_t›öfo
.
	`¥öt_avg_ußge
();

67 
	}
}

69 
	glöux_¥ocm⁄ô‹_t
::
	$¥öt_ext_°©s
()

71 
_t›öfo
.
	`¥öt_°©s
();

72 
	}
}

74 
ul⁄g_t
 
	glöux_¥ocm⁄ô‹_t
::
	$ioch¨s
()

76  (
_t›öfo
.
	`ioch¨s
());

77 
	}
}

79 
	glöux_¥ocm⁄ô‹_t
::
	$°©_ª£t
()

81 
_t›öfo
.
	`ª£t
();

82 
	}
}

84 
uöt
 
	glöux_¥ocm⁄ô‹_t
::
	$gë_num_of_˝us
()

86  (
_t›öfo
.
	`gë_num_of_˝us
());

87 
	}
}

89 
˝u_lﬂd_vÆues_t
 
	glöux_¥ocm⁄ô‹_t
::
	$gë_lﬂd
()

91  (
_t›öfo
.
	`gë_lﬂd
());

92 
	}
}

	@src/util/pool_alloc.cpp

24 
	~"utû/poﬁ_Æloc.h
"

25 
	~"utû/sync.h
"

27 
	~"k_deföes.h
"

29 
	~<√w
>

30 
	~<ve˘‹
>

33 #ifde‡
DEBUG_ALLOC


34 
	~<c°dio
>

35 
usög
 
«me•a˚
 
	g°d
;

38 #unde‡
TRACK_LEAKS


41 #unde‡
TRACE_LEAKS


42 #unde‡
TRACK_BLOCKS


45 
	g«me•a˚
 {

49 
	g°d
::
	tve˘‹
<
	tpoﬁ_Æloc
*> 
	tpoﬁ_li°
;

51 "C" 
dñëe_poﬁ_li°
(* 
¨g
) {

52 
poﬁ_li°
* 
∂
 = (poﬁ_li°*Ë
¨g
;

53 if(!
∂
)

55 
uöt
 
i
=0; i < 
∂
->
size
(); i++)

56 
dñëe
 
∂
->
©
(
i
);

58 
dñëe
 
∂
;

61 
	ss_thªad_loˇl_poﬁs
 {

62 
±hªad_key_t
 
±key
;

63 
öô
() {

65 
boﬁ
 
öôülized
 = 
Ál£
;

66 if(
öôülized
)

69 
îr
 = 
±hªad_key_¸óã
(&
±key
, 
dñëe_poﬁ_li°
);

70 
as£π
(!
îr
);

71 
öôülized
 = 
åue
;

73 
›î©‹
 
poﬁ_li°
*(Ë{  
gë
(); }

74 
poﬁ_li°
* 
›î©‹
->(Ë{  
gë
(); }

75 
poﬁ_li°
* 
gë
() {

76 
poﬁ_li°
* 
±r
 = (poﬁ_li°*Ë
±hªad_gë•ecific
(
±key
);

77 if(!
±r
)

78 
±hªad_£t•ecific
(
±key
, 
±r
 = 
√w
 
poﬁ_li°
);

80  
±r
;

82 } 
thªad_loˇl_poﬁs
;

86 
	g°©ic_öôülize_poﬁ_Æloc
::
	$°©ic_öôülize_poﬁ_Æloc
() {

87 
thªad_loˇl_poﬁs
.
	`öô
();

88 
	}
}

91 
	tbôm≠
;

121 #ifde‡
TRACK_BLOCKS


122 
	~<m≠
>

123 
	~<ve˘‹
>

124 
	~<utûôy
>

125 
	~<Æg‹ôhm
>

127 
±hªad_muãx_t
 
	gblock_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

128 
	sblock_íåy
 {

129 
	mpoﬁ_Æloc
::
block
* 
_block
;

130 c⁄°* 
	m_«me
;

131 
±hªad_t
 
	m_tid
;

132 
	m_dñè
;

133 
block_íåy
(
poﬁ_Æloc
::
block
* 
b
, c⁄°* 
«me
, 
±hªad_t
 
tid
, 
dñè
)

134 : 
_block
(
b
), 
_«me
(
«me
), 
_tid
(
tid
), 
_dñè
(
dñè
) { }

135 
boﬁ
 
	m›î©‹
<(
block_íåy
 c⁄° &
	mŸhî
) const {

136 if(
	m_«me
 < 
	mŸhî
._name)

137  
	måue
;

138 if(
	m_«me
 > 
	mŸhî
._name)

139  
	mÁl£
;

140 if(
	m_tid
 < 
	mŸhî
._tid)

141  
	måue
;

142 if(
	m_tid
 > 
	mŸhî
._tid)

143  
	mÁl£
;

144  
	m_block
 < 
	mŸhî
._block;

147 
	g°d
::
	tm≠
<
	tpoﬁ_Æloc
::
	tblock
*, > 
	tblock_m≠
;

148 
	g°d
::
	t∑ú
<
	tblock_m≠
, 
	t±hªad_muãx_t
> 
	tblock_m≠_sync
;

149 
	g°d
::
	t∑ú
<c⁄°*, 
	t±hªad_t
> 
	tthªad_Æloc_key
;

150 
	g°d
::
	t∑ú
<
	tblock_m≠_sync
*, 
	tboﬁ
> 
	tthªad_Æloc_vÆue
;

151 
	g°d
::
	tm≠
<
	tthªad_Æloc_key
, 
	tthªad_Æloc_vÆue
> 
	tthªad_m≠s
;

152 
	g°d
::
	tve˘‹
<
	tblock_íåy
> 
	tblock_li°
;

153 
thªad_m≠s
* 
	glive_blocks
;

155 
	$¥öt_live_blocks
() {

157 
poﬁ_Æloc
::
block_li°
 
bli°
;

160 
thªad_m≠s
::
ôî©‹
 
m≠
 = 
live_blocks
->
	`begö
();

161 
m≠
 !
live_blocks
->
	`íd
()) {

162 
thªad_Æloc_key
 c⁄° &
key
 = 
m≠
->
fú°
;

163 
thªad_Æloc_vÆue
 &
vÆue
 = 
m≠
->
£c⁄d
;

164 
block_m≠
* 
bm≠
 = &
vÆue
.
fú°
->first;

167 
block_m≠
::
ôî©‹
 
ô
 = 
bm≠
->
	`begö
();

168  ; 
ô
 !
bm≠
->
	`íd
(); ++it)

169 
bli°
.
	`push_back
(
	`block_íåy
(
ô
->
fú°
, 
key
.fú°, key.
£c⁄d
, it->second));

172 if(!
vÆue
.
£c⁄d
 && 
bm≠
->
	`em±y
())

173 
live_blocks
->
	`îa£
(
m≠
++);

175 ++
m≠
;

178 
°d
::
	`s‹t
(
bli°
.
	`begö
(), bli°.
	`íd
());

179 
block_li°
::
ôî©‹
 
ô
=
bli°
.
	`begö
();

180 
	`¥ötf
("Allocator (tid): " "address " " unit bitmap\n");

181 ; 
ô
 !
bli°
.
	`íd
(); ++it) {

182 
	`¥ötf
("%10†(%3d): 0x%016∞%4d ", 
ô
->
_«me
, it->
_tid
, it->
_block
, it->
_dñè
);

183 
bôm≠
 
unôs
 = 
ô
->
_block
->
_bôm≠
;

184 
i
=0; i < 
poﬁ_Æloc
::
BLOCK_UNITS
; i++) {

185 
	`putch¨
('0' + (
unôs
&0x1));

186 
unôs
 >>= 1;

188 
	`putch¨
('\n');

190 
	}
}

192 
	$¥öt_live_blocks
() {

193 
	`¥ötf
("Sorry, blockÅracking isÇotÉnabled. Recompile with -DTRACK_BLOCKSándÅryágain)\n");

194 
	}
}

197 
	gpoﬁ_Æloc
::
	$poﬁ_Æloc
(c⁄°* 
«me
, 
dñè
)

198 : 
	`_«me
(
«me
), 
	`_block
(
NULL
), 
	`_√xt_unô
(0), 
	`_dñè
(
dñè
), 
	`_off£t
(0),

199 
	`_Æloc_cou¡
(0), 
	$_huge_cou¡
(0)

202 
	`mem£t
(
_Æloc_sizes
, 0, (_alloc_sizes));

203 
	`mem£t
(
_huge_sizes
, 0, (_huge_sizes));

204 #ifde‡
TRACK_BLOCKS


206 
_live_blocks
 = 
√w
 
block_m≠_sync
;

207 
_live_blocks
->
£c⁄d
 = 
	`thªad_muãx_¸óã
();

208 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
block_muãx
);

209 (*
live_blocks
)[
°d
::
	`make_∑ú
(
_«me
, 
	`±hªad_£lf
())] = std::make_∑ú(
_live_blocks
, 
åue
);

213 
thªad_loˇl_poﬁs
->
	`push_back
(
this
);

214 
	}
}

216 
	gpoﬁ_Æloc
::~
	$poﬁ_Æloc
() {

218 
	`disˇrd_block
();

219 #ifde‡
TRACK_BLOCKS


221 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
block_muãx
);

222 (*
live_blocks
)[
°d
::
	`make_∑ú
(
_«me
, 
	`±hªad_£lf
())].
£c⁄d
 = 
Ál£
;

224 
	}
}

227 
	gpoﬁ_Æloc
::
hódî
* 
poﬁ_Æloc
::
block
::
	$gë_hódî
(
off£t
, 
poﬁ_Æloc
::
bôm≠
 
ønge
) {

228 
hódî
* 
h
 = (hódî*Ë&
_d©a
[
off£t
];

229 
h
->
_block
 = 
this
;

230 
h
->
_ønge
 = 
ønge
;

231  
h
;

232 
	}
}

234 
	gpoﬁ_Æloc
::
hódî
::
	$ªÀa£
() {

236 #ifde‡
TRACE_LEAKS


237 
	`Ârötf
(
°dîr
, "%†unô -1 %∞%016Œx\n", 
_block
->
_«me
, _block, 
_ønge
);

240 
bôm≠
 
ªsu…
;

241 
bôm≠
 
˛ór_ønge
 = ~
_ønge
;

242 #ifde‡
__•¨cv9


243 
	`memb¨_íãr
();

244 
ªsu…
 = 
	`©omic_™d_64_nv
(&
_block
->
_bôm≠
, 
˛ór_ønge
);

245 
	`memb¨_exô
();

247 
ªsu…
 = 
	`__sync_™d_™d_„tch
(&
_block
->
_bôm≠
, 
˛ór_ønge
);

251 if(!
ªsu…
) {

252 #ifde‡
TRACE_LEAKS


253 if(!
˛ór_ønge
)

254 
	`Ârötf
(
°dîr
, "%†block -1 %∞%016Œx (ovîsized)\n", 
_block
->
_«me
, _block, 
_ønge
);

256 
	`Ârötf
(
°dîr
, "%†block -1 %p\n", 
_block
->
_«me
, _block);

258 #ifde‡
TRACK_BLOCKS


260 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_block
->
_live_blocks
->
£c⁄d
);

261 
_block
->
_live_blocks
->
fú°
.
	`îa£
(_block);

265 ::
	`‰ì
(
_block
);

267 
	}
}

270 c⁄° 
	gADJUST_GOAL
 = 5;

271 c⁄° 
	gK_MAX
 = (
poﬁ_Æloc
::
BLOCK_UNITS
+
ADJUST_GOAL
-1)/ADJUST_GOAL;

273 
	$kth_bigge°
(* 
¨øy
, 
¨øy_size
) {

274 
t›_k
[
K_MAX
];

275 
k
 = (
¨øy_size
+
ADJUST_GOAL
-1)/ADJUST_GOAL;

276 
œ°
=0;

277 
t›_k
[0] = 
¨øy
[0];

278 
i
=1; i < 
¨øy_size
; i++) {

279 
size
 = 
¨øy
[
i
];

282 
ödex
=0;

283 
ödex
 <
œ°
 && 
size
 < 
t›_k
[index]) ++index;

284 if(
ödex
 =
k
)

288 
j
=
k
; --j > 
ödex
; )

289 
t›_k
[
j
] =Åop_k[j-1];

292 
t›_k
[
ödex
] = 
size
;

293 if(
ödex
 > 
œ°
)

294 
œ°
 = 
ödex
;

297  
t›_k
[
œ°
];

298 
	}
}

300 
	gpoﬁ_Æloc
::
	$disˇrd_block
() {

302 if(
_√xt_unô
) {

303 
_block
->
	`gë_hódî
(
_off£t
, ~(
_√xt_unô
-1))->
	`ªÀa£
();

304 
_√xt_unô
 = 0;

306 
	}
}

308 
	gpoﬁ_Æloc
::
	$√w_block
() {

312 
_huge_cou¡
 = 0;

313 
_Æloc_cou¡
 = 0;

314 
_√xt_unô
 = 1;

315 
byãs
 = (
block
Ë+ 
BLOCK_UNITS
*
_dñè
;

316 * 
d©a
 = ::
	`mÆloc
(
byãs
);

317 if(!
d©a
)

318 
throw
 
°d
::
	`bad_Æloc
();

320 
_block
 = 
	`√w
(
d©a
Ë
	`block
(
_«me
);

321 
_off£t
 = 0;

322 #ifde‡
TRACK_BLOCKS


324 
_block
->
_live_blocks
 = _live_blocks;

325 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_live_blocks
->
£c⁄d
);

326 
_live_blocks
->
fú°
[
_block
] = 
_dñè
;

329 
	}
}

331 
	gpoﬁ_Æloc
::
hódî
* 
poﬁ_Æloc
::
	$Æloˇã_huge
(
size
) {

332 
_huge_sizes
[
_huge_cou¡
++] = 
size
;

334 if(
_huge_cou¡
 > 
K_MAX
) {

335 
	`disˇrd_block
();

336 
_dñè
 = 
	`kth_bigge°
(
_huge_sizes
, 
_huge_cou¡
);

337  
	`Æloˇã_n‹mÆ
(
size
);

343 * 
d©a
 = ::
	`mÆloc
((
block
Ë+ 
size
);

344 if(!
d©a
)

345 
throw
 
°d
::
	`bad_Æloc
();

347 
block
* 
b
 = 
	`√w
(
d©a
Ë
	`block
(
_«me
);

348 #ifde‡
TRACK_BLOCKS


350 
b
->
_live_blocks
 = _live_blocks;

351 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
_live_blocks
->
£c⁄d
);

352 
_live_blocks
->
fú°
[
b
] = 
size
;

355 #ifde‡
TRACE_LEAKS


356 
	`Ârötf
(
°dîr
, "%†block 1 %p+%d (ovîsized)\n", 
_«me
, 
b
, 
size
);

358  
b
->
	`gë_hódî
(0, ~0ull);

359 
	}
}

361 
	gpoﬁ_Æloc
::
hódî
* 
poﬁ_Æloc
::
	$Æloˇã_n‹mÆ
(
size
) {

364 if(
_√xt_unô
 == 0) {

365 if(
_Æloc_cou¡
)

366 
_dñè
 = 
	`kth_bigge°
(
_Æloc_sizes
, 
_Æloc_cou¡
);

367 
	`√w_block
();

368 #ifde‡
TRACE_LEAKS


369 
	`Ârötf
(
°dîr
, "%†block 1 %p+%d\n", 
_«me
, 
_block
, 
_dñè
);

374 
_Æloc_sizes
[
_Æloc_cou¡
++] = 
size
;

377 
hódî
* 
h
 = 
_block
->
	`gë_hódî
(
_off£t
, 0);

380 
ªmaöög
 = 
size
;

382 
h
->
_ønge
 |
_√xt_unô
;

383 
_√xt_unô
 <<= 1;

384 
ªmaöög
 -
_dñè
;

385 
_off£t
 +
_dñè
;

386 } 
ªmaöög
 > 0 && 
_√xt_unô
);

389 if(
ªmaöög
 > 0) {

391 
h
->
	`ªÀa£
();

392  
	`Æloˇã_n‹mÆ
(
size
);

396  
h
;

397 
	}
}

399 
	gpoﬁ_Æloc
::
hódî
* 
poﬁ_Æloc
::
	$Æloˇã
(
size
) {

401 c⁄° 
HUGE_THRESHOLD
 = 
BLOCK_UNITS
/8;

404  (
size
 > 
HUGE_THRESHOLD
*
_dñè
)? 
	`Æloˇã_huge
(sizeË: 
	`Æloˇã_n‹mÆ
(size);

405 
	}
}

407 #unde‡
USE_MALLOC


409 * 
	gpoﬁ_Æloc
::
	$Æloc
(
size
) {

410 #ifde‡
USE_MALLOC


411  ::
	`mÆloc
(
size
);

414 
size
 = (sizê+ (
hódî
) + 7) & -8;

416 
hódî
* 
h
 = 
	`Æloˇã
(
size
);

417 #ifde‡
TRACE_LEAKS


418 
	`Ârötf
(
°dîr
, "%†unô 1 %∞%016Œx\n", 
_«me
, 
h
->
_block
, h->
_ønge
);

420  
h
->
_d©a
;

421 
	}
}

423 
	gpoﬁ_Æloc
::
	$‰ì
(* 
±r
) {

424 #ifde‡
USE_MALLOC


425 ::
	`‰ì
(
±r
);

449 * 
v±r
;

450 * 
˝å
;

451 
hódî
* 
h±r
;

452 } 
u
 = {
±r
};

455 
u
.
˝å
 -(
hódî
);

456 
u
.
h±r
->
	`ªÀa£
();

457 
	}
}

	@src/util/prcinfo.cpp

43 
	~"utû/¥cöfo.h
"

44 
	~"utû/åa˚.h
"

46 
	~<uni°d.h
>

47 
	~<°dio.h
>

50 
	g¥o˚ssöfo_t
::
	$¥o˚ssöfo_t
(c⁄° 
boﬁ
 
¥öèãxô
)

51 : 
	`_¥öt_©_exô
(
¥öèãxô
), 
	$_is_ok
(0)

54 
°rög
 
∑th«me
 = "/proc/self/usage";

55 i‡((
_fd
 = 
	`›í
(
∑th«me
.
	`c_°r
(), 
O_RDONLY
)) < 0) {

57 
	`TRACE
–
TRACE_ALWAYS
, "Couldn't open /proc/self/usage\n");

62 
	`l£ek
(
_fd
, 0, 
SEEK_SET
);

65 i‡(
	`ªad
(
_fd
, &
_ﬁd_¥ußge
, (_old_prusage)) != (_old_prusage)) {

66 
	`TRACE
–
TRACE_ALWAYS
, "ReadingÖrusageÉrror\n");

70 
_timî
.
	`ª£t
();

71 
_is_ok
 = 1;

76 
_n˝us
 = 
	`sysc⁄f
–
_SC_NPROCESSORS_ONLN
 );

77 
	}
}

79 
	g¥o˚ssöfo_t
::~
	$¥o˚ssöfo_t
() {

80 i‡(
_¥öt_©_exô
 && 
_is_ok
)

81 
	`¥öt
();

82 
	}
}

85 
	g¥o˚ssöfo_t
::
	$ª£t
()

87 i‡(!
_is_ok
)  (1);

90 
	`l£ek
(
_fd
, 0, 
SEEK_SET
);

93 i‡(
	`ªad
(
_fd
, &
_¥ußge
, (_prusage)) != (_prusage)) {

94 
	`TRACE
–
TRACE_ALWAYS
, "ReadingÖrusageÉrror\n");

99 
_ﬁd_¥ußge
 = 
_¥ußge
;

100 
_timî
.
	`ª£t
();

103 
	}
}

105 
	g¥o˚ssöfo_t
::
	$¥öt
()

107 i‡(!
_is_ok
)  (1);

110 
	`l£ek
(
_fd
, 0, 
SEEK_SET
);

113 i‡(
	`ªad
(
_fd
, &
_¥ußge
, (_prusage)) != (_prusage)) {

114 
	`TRACE
–
TRACE_ALWAYS
, "ReadingÖrusageÉrror\n");

122 
ul⁄g_t
 
¥_möf
 = 
_¥ußge
.¥_mö‡- 
_ﬁd_¥ußge
.pr_minf;

123 
ul⁄g_t
 
¥_majf
 = 
_¥ußge
.¥_maj‡- 
_ﬁd_¥ußge
.pr_majf;

124 
ul⁄g_t
 
¥_nsw≠
 = 
_¥ußge
.¥_nsw≠ - 
_ﬁd_¥ußge
.pr_nswap;

125 
ul⁄g_t
 
¥_öblk
 = 
_¥ußge
.¥_öblk - 
_ﬁd_¥ußge
.pr_inblk;

126 
ul⁄g_t
 
¥_oublk
 = 
_¥ußge
.¥_oublk - 
_ﬁd_¥ußge
.pr_oublk;

127 
ul⁄g_t
 
¥_m¢d
 = 
_¥ußge
.¥_m¢d - 
_ﬁd_¥ußge
.pr_msnd;

128 
ul⁄g_t
 
¥_mrcv
 = 
_¥ußge
.¥_mrcv - 
_ﬁd_¥ußge
.pr_mrcv;

129 
ul⁄g_t
 
¥_sigs
 = 
_¥ußge
.¥_sig†- 
_ﬁd_¥ußge
.pr_sigs;

130 
ul⁄g_t
 
¥_v˘x
 = 
_¥ußge
.¥_v˘x - 
_ﬁd_¥ußge
.pr_vctx;

131 
ul⁄g_t
 
¥_i˘x
 = 
_¥ußge
.¥_i˘x - 
_ﬁd_¥ußge
.pr_ictx;

132 
ul⁄g_t
 
¥_sysc
 = 
_¥ußge
.¥_sys¯- 
_ﬁd_¥ußge
.pr_sysc;

133 
ul⁄g_t
 
¥_ioch
 = 
_¥ußge
.¥_ioch - 
_ﬁd_¥ußge
.pr_ioch;

136 
time°ruc_t
 
¥_πime
;

137 
time°ruc_t
 
¥_utime
;

138 
time°ruc_t
 
¥_°ime
;

139 
time°ruc_t
 
¥_âime
;

140 
time°ruc_t
 
¥_t·ime
;

141 
time°ruc_t
 
¥_d·ime
;

142 
time°ruc_t
 
¥_k·ime
;

143 
time°ruc_t
 
¥_…ime
;

144 
time°ruc_t
 
¥_¶±ime
;

145 
time°ruc_t
 
¥_wtime
;

146 
time°ruc_t
 
¥_°›time
;

148 
	`tssub
(&
¥_πime
, &
_¥ußge
.¥_πime, &
_ﬁd_¥ußge
.pr_rtime);

149 
	`tssub
(&
¥_utime
, &
_¥ußge
.¥_utime, &
_ﬁd_¥ußge
.pr_utime);

150 
	`tssub
(&
¥_°ime
, &
_¥ußge
.¥_°ime, &
_ﬁd_¥ußge
.pr_stime);

151 
	`tssub
(&
¥_âime
, &
_¥ußge
.¥_âime, &
_ﬁd_¥ußge
.pr_ttime);

152 
	`tssub
(&
¥_t·ime
, &
_¥ußge
.¥_t·ime, &
_ﬁd_¥ußge
.pr_tftime);

153 
	`tssub
(&
¥_d·ime
, &
_¥ußge
.¥_d·ime, &
_ﬁd_¥ußge
.pr_dftime);

154 
	`tssub
(&
¥_k·ime
, &
_¥ußge
.¥_k·ime, &
_ﬁd_¥ußge
.pr_kftime);

155 
	`tssub
(&
¥_…ime
, &
_¥ußge
.¥_…ime, &
_ﬁd_¥ußge
.pr_ltime);

156 
	`tssub
(&
¥_¶±ime
, &
_¥ußge
.¥_¶±ime, &
_ﬁd_¥ußge
.pr_slptime);

157 
	`tssub
(&
¥_wtime
, &
_¥ußge
.¥_wtime, &
_ﬁd_¥ußge
.pr_wtime);

158 
	`tssub
(&
¥_°›time
, &
_¥ußge
.¥_°›time, &
_ﬁd_¥ußge
.pr_stoptime);

160 
	`¥ötf
("*** Usage Counters *** \n");

161 
	`¥ötf
("Mö‹ Fau…s:................. %lu\n", 
¥_möf
);

162 
	`¥ötf
("Maj‹ Fau…s:................. %lu\n", 
¥_majf
);

163 
	`¥ötf
("Sw≠s:........................ %lu\n", 
¥_nsw≠
);

164 
	`¥ötf
("I≈uàBlocks:................. %lu\n", 
¥_öblk
);

165 
	`¥ötf
("OuçuàBlocks:................ %lu\n", 
¥_oublk
);

166 
	`¥ötf
("STREAMS Mesßge†Sít:........ %lu\n", 
¥_m¢d
);

167 
	`¥ötf
("STREAMS Mesßge†Re˚ived:.... %lu\n", 
¥_mrcv
);

168 
	`¥ötf
("Sig«ls:...................... %lu\n", 
¥_sigs
);

169 
	`¥ötf
("Vﬁu¡¨y C⁄ãxàSwôches:... %lu\n", 
¥_v˘x
);

170 
	`¥ötf
("Invﬁu¡¨y C⁄ãxàSwôches:. %lu\n", 
¥_i˘x
);

171 
	`¥ötf
("Sy°em CÆls:................. %lu\n", 
¥_sysc
);

172 
	`¥ötf
("Ród/WrôêCh¨a˘îs:........ %lu\n", 
¥_ioch
);

173 
	`¥ötf
("*** Process Times *** \n");

175 
dñay
 = 
_timî
.
	`time_us
();

176 
	`¥time
("TŸÆ Eœp£d Time:........... ", 
dñay
);

177 
	`¥time
("TŸÆ U£∏Time:.............. ", &
¥_utime
);

178 
	`¥time
("TŸÆ Sy°em Time:............ ", &
¥_°ime
);

179 
	`¥time
("Othî Sy°em Tø∞Time:....... ", &
¥_âime
);

180 
	`¥time
("TexàPagêFau… SÀï Time.... ", &
¥_t·ime
);

181 
	`¥time
("D©®PagêFau… SÀï Time.... ", &
¥_d·ime
);

182 
	`¥time
("Kî√»PagêFau… SÀï Time.. ", &
¥_k·ime
);

183 
	`¥time
("U£∏Lock Waô SÀï Time..... ", &
¥_…ime
);

184 
	`¥time
("AŒ Othî SÀï Time.......... ", &
¥_¶±ime
);

185 
	`¥time
("TimêWaôög f‹á CPU........ ", &
¥_wtime
);

186 
	`¥time
("St›≥d Time.................. ", &
¥_°›time
);

189 
_ﬁd_¥ußge
 = 
_¥ußge
;

190 
_timî
.
	`ª£t
();

192 
	}
}

195 
uöt
 
	g¥o˚ssöfo_t
::
	$gë_num_of_˝us
()

197  (
_n˝us
);

198 
	}
}

201 
˝u_lﬂd_vÆues_t
 
	g¥o˚ssöfo_t
::
	$gë_lﬂd
()

203 
˝u_lﬂd_vÆues_t
 
lﬂd
;

204 i‡(!
_is_ok
Ë (
lﬂd
);

207 
	`l£ek
(
_fd
, 0, 
SEEK_SET
);

210 i‡(
	`ªad
(
_fd
, &
_¥ußge
, (_prusage)) != (_prusage)) {

211 
	`TRACE
–
TRACE_ALWAYS
, "ReadingÖrusageÉrror\n");

212  (
lﬂd
);

219 
time°ruc_t
 
¥_utime
;

220 
time°ruc_t
 
¥_°ime
;

221 
time°ruc_t
 
¥_âime
;

222 
time°ruc_t
 
¥_wtime
;

224 
	`tssub
(&
¥_utime
, &
_¥ußge
.¥_utime, &
_ﬁd_¥ußge
.pr_utime);

225 
	`tssub
(&
¥_°ime
, &
_¥ußge
.¥_°ime, &
_ﬁd_¥ußge
.pr_stime);

226 
	`tssub
(&
¥_âime
, &
_¥ußge
.¥_âime, &
_ﬁd_¥ußge
.pr_ttime);

227 
	`tssub
(&
¥_wtime
, &
_¥ußge
.¥_wtime, &
_ﬁd_¥ußge
.pr_wtime);

229 
lﬂd
.
run_tm
 = 
	`å™s
(
¥_utime
);

230 
lﬂd
.
run_tm
 +
	`å™s
(
¥_°ime
);

231 
lﬂd
.
run_tm
 +
	`å™s
(
¥_âime
);

232 
lﬂd
.
waô_tm
 = 
	`å™s
(
¥_wtime
);

233  (
lﬂd
);

234 
	}
}

237 
ul⁄g_t
 
	g¥o˚ssöfo_t
::
	$ioch¨s
()

239 i‡(!
_is_ok
)  (1);

242 
	`l£ek
(
_fd
, 0, 
SEEK_SET
);

245 i‡(
	`ªad
(
_fd
, &
_¥ußge
, (_prusage)) != (_prusage)) {

246 
	`TRACE
–
TRACE_ALWAYS
, "ReadingÖrusageÉrror\n");

250 
ul⁄g_t
 
¥_ioch
 = 
_¥ußge
.¥_ioch - 
_ﬁd_¥ußge
.pr_ioch;

251  (
¥_ioch
);

252 
	}
}

255 
	g¥o˚ssöfo_t
::
	$å™s
(
time°ruc_t
 
©s
)

257 c⁄° 
BILLION
 = 1000000000;

258 
ad
 = 
©s
.
tv_£c
 + (©s.
tv_n£c
/
BILLION
);

259  (
ad
);

260 
	}
}

263 
	g¥o˚ssöfo_t
::
	$tßdd
(
time°ruc_t
* 
ªsu…
,Åime°ruc_à*
a
,Åime°ruc_à*
b
)

265 
ªsu…
->
tv_£c
 = 
a
->tv_£¯+ 
b
->tv_sec;

266 i‡((
ªsu…
->
tv_n£c
 = 
a
->tv_n£¯+ 
b
->tv_nsec) >= 1000000000) {

267 
ªsu…
->
tv_n£c
 -= 1000000000;

268 
ªsu…
->
tv_£c
 += 1;

270 
	}
}

273 
	g¥o˚ssöfo_t
::
	$tssub
(
time°ruc_t
* 
ªsu…
,Åime°ruc_à*
a
,Åime°ruc_à*
b
)

275 
ªsu…
->
tv_£c
 = 
a
->tv_£¯- 
b
->tv_sec;

276 i‡((
ªsu…
->
tv_n£c
 = 
a
->tv_n£¯- 
b
->tv_nsec) < 0) {

277 
ªsu…
->
tv_n£c
 += 1000000000;

278 
ªsu…
->
tv_£c
 -= 1;

280 
	}
}

283 
	g¥o˚ssöfo_t
::
	$hr_mö_£c
(* 
buf
, 
£c
)

285 
	`•rötf
(
buf
, "%ld", 
£c
);

288 i‡(
£c
 >= 3600)

289 
	`•rötf
(
buf
, "%ld:%.2ld:%.2ld",

290 
£c
 / 3600, (sec % 3600) / 60, sec % 60);

291 i‡(
£c
 >= 60)

292 
	`•rötf
(
buf
, "%ld:%.2ld",

293 
£c
 / 60, sec % 60);

295 
	`•rötf
(
buf
, "%ld", 
£c
);

297 
	}
}

300 
	g¥o˚ssöfo_t
::
	$¥time
(
°rög
 
œbñ
, 
time°ruc_t
* 
ts
)

302 
buf
[32];

303 
	`hr_mö_£c
(
buf
, 
ts
->
tv_£c
);

304 
cout
 << 
œbñ
 << 
buf
 << "." << (
u_öt
)
ts
->
tv_n£c
/1000000 << 
ídl
;

305 
	}
}

308 
	g¥o˚ssöfo_t
::
	$¥time
(
°rög
 
œbñ
, & 
dñay
)

310 
buf
[32];

311 
	`hr_mö_£c
(
buf
, 
dñay
*1e-6);

312 
˚º
 << 
œbñ
 << 
buf
 << "." << 
dñay
/100000 << 
ídl
;

313 
	}
}

	@src/util/procstat.cpp

32 
	~"utû/¥oc°©.h
"

34 
	~"utû.h
"

36 
	~"sm/sh‹e/sh‹e_ív.h
"

45 
	g˝u_mósuªmít
& cpu_mósuªmít::
›î©‹
+=(
˝u_mósuªmít
 c⁄° &
Ÿhî
)

47 
time°amp
 +
Ÿhî
.timestamp;

48 
	g˝u_n£c_idÀ
 +
Ÿhî
.
˝u_n£c_idÀ
;

49  (*
	gthis
);

52 
	g˝u_mósuªmít
& cpu_mósuªmít::
›î©‹
-=(
˝u_mósuªmít
 c⁄° &
Ÿhî
)

54 
time°amp
 -
Ÿhî
.timestamp;

55 
	g˝u_n£c_idÀ
 -
Ÿhî
.
˝u_n£c_idÀ
;

56  (*
	gthis
);

59 
	g˝u_mósuªmít
::
	$˛ór
() {

60 
time°amp
 = 0;

61 
˝u_n£c_idÀ
 = 0;

62 
	}
}

64 
	g˝u_mósuªmít
::
	$£t
(
uöt64_t
 
¢≠time
, uöt64_à
n£c_idÀ
)

66 
time°amp
 = 
¢≠time
;

67 
˝u_n£c_idÀ
 = 
n£c_idÀ
;

68 
	}
}

78 
	g¥ocm⁄ô‹_t
::
	$¥ocm⁄ô‹_t
(c⁄° * 
«me
,

79 
sh‹e
::
Sh‹eEnv
* 
ív
,

80 c⁄° 
öãrvÆ_£c
)

81 : 
	`thªad_t
(
«me
), 
	`_öãrvÆ_u£c
(0), 
	`_öãrvÆ_£c
(
öãrvÆ_£c
),

82 
	`_tŸÆ_ußge
(0), 
	`_num_ußge_ªadögs
(0), 
	`_avg_ußge
(0),

83 
	`_°©e
(
CPS_NOTSET
), 
	`_ív
(
ív
), 
	`_œ°_ªadög
(0),

84 
	$_¥öt_vîbo£
(
Ál£
)

86 
	}
}

89 
	g¥ocm⁄ô‹_t
::~
	$¥ocm⁄ô‹_t
()

91 i‡(*&
_°©e
 !
CPS_NOTSET
) {

92 
	`±hªad_muãx_de°roy
(&
_muãx
);

93 
	`±hªad_c⁄d_de°roy
(&
_c⁄d
);

95 
	}
}

107 
	g¥ocm⁄ô‹_t
::
	$_£tup
(c⁄° 
öãrvÆ_£c
)

110 
	`as£π
 (
öãrvÆ_£c
>0);

111 
_öãrvÆ_u£c
 = (
öãrvÆ_£c
*1e6);

113 i‡(
öãrvÆ_£c
<1) {

114 
	`TRACE
–
TRACE_DEBUG
, "CPU usage updatedÉvery (%0.3f) msec\n",

115 
_öãrvÆ_u£c
/1000.);

118 
	`TRACE
–
TRACE_DEBUG
, "CPU usage(updatedÉvery (%0.6f) sec\n",

119 
_öãrvÆ_u£c
/1000./1000);

123 
	`±hªad_muãx_öô
(&
_muãx
, 
NULL
);

124 
	`±hªad_c⁄d_öô
(&
_c⁄d
, 
NULL
);

126 
_°©e
 = 
CPS_PAUSE
;

127 
	}
}

139 
	g¥ocm⁄ô‹_t
::
	$w‹k
()

142 i‡(*&
_°©e
==
CPS_NOTSET
Ë
	`_£tup
(
_öãrvÆ_£c
);

143 
	`as£π
 (*&
_°©e
!=
CPS_NOTSET
);

146 
	`ˇ£_£tup
();

148 
eCPS
 
a°©e
 = *&
_°©e
;

149 
îr‹
 = 0;

150 
time•ec
 
°¨t
;

152 
	`±hªad_muãx_lock
(&
_muãx
);

153 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

155 
time•ec
 
ts
 = 
°¨t
;

156 c⁄° 
BILLION
 = 1000*1000*1000;

158 
åue
) {

160 
a°©e
 = *&
_°©e
;

162 
a°©e
) {

163 (
CPS_RUNNING
):

164 (
CPS_PAUSE
):

167 
	`ˇ£_tick
();

168 if(
_¥öt_vîbo£
)

169 
	`¥öt_vîbo£
();

170 
	`¥öt_öãrvÆ
();

173 
ts
 = 
°¨t
;

174 
ts
.
tv_n£c
 +
_öãrvÆ_u£c
*1000;

175 if(
ts
.
tv_n£c
 > 
BILLION
) {

176 
ts
.
tv_n£c
 -
BILLION
;

177 
ts
.
tv_£c
++;

181 
åue
) {

183 
îr‹
 = 
	`±hªad_c⁄d_timedwaô
(&
_c⁄d
, &
_muãx
, &
ts
);

184 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

185 if(
°¨t
.
tv_£c
 > 
ts
.tv_sec ||

186 (
°¨t
.
tv_£c
 =
ts
.tv_£¯&& sèπ.
tv_n£c
 >Ås.tv_nsec))

189 
°¨t
 = 
ts
;

193 (
CPS_RESET
):

196 
	`ˇ£_ª£t
();

199 
_tŸÆ_ußge
 = 0;

200 
_num_ußge_ªadögs
 = 0;

201 
_avg_ußge
 = 0;

202 
_°©e
 = 
CPS_RUNNING
;

205 (
CPS_STOP
):

208 
	`ˇ£_°›
();

211 (
CPS_NOTSET
):

213 
	`as£π
(0);

217 
	}
}

229 
	g¥ocm⁄ô‹_t
::
	$¥öt_lﬂd
(c⁄° 
dñay
)

231 c⁄° 
˝u_lﬂd_vÆues_t
 
lﬂd
 = 
	`gë_lﬂd
();

234 i‡((
lﬂd
.
run_tm
>0.Ë&& (lﬂd.
waô_tm
>0.)) {

235 
	`TRACE
–
TRACE_ALWAYS
, "\nCpuLoad = (%.2f)\nAbsLoad = (%.2f)\n",

236 (
lﬂd
.
run_tm
+lﬂd.
waô_tm
)/lﬂd.run_tm,Üﬂd.run_tm/
dñay
);

238 
	}
}

249 
	g¥ocm⁄ô‹_t
::
	$¥öt_öãrvÆ
()

251 
	`as£π
(
_ív
);

252 
uöt_t
 
©t
 = 
_ív
->
	`gë_åx_©t
();

253 i‡(
_ív
->
	`gë_mósuª
(Ë=
sh‹e
::
MST_MEASURE
) {

254 
	`TRACE
–
TRACE_STATISTICS
, "(%.1f) (%.1f)\n",

255 
	`gë_avg_ußge
(
Ál£
),

256 ()(
©t
-
_œ°_ªadög
)/
_öãrvÆ_£c
);

258 
_œ°_ªadög
=
©t
;

259 
	}
}

272 
	g¥ocm⁄ô‹_t
::
	$˙å_ª£t
()

274 
	`°©_ª£t
();

275 
_°©e
 = 
CPS_RESET
;

276 
	}
}

278 
	g¥ocm⁄ô‹_t
::
	$˙å_∑u£
()

280 
_°©e
 = 
CPS_PAUSE
;

281 
	}
}

283 
	g¥ocm⁄ô‹_t
::
	$˙å_ªsume
()

285 
_°©e
 = 
CPS_RUNNING
;

286 
	}
}

288 
	g¥ocm⁄ô‹_t
::
	$˙å_°›
()

290 
_°©e
 = 
CPS_STOP
;

291 
	}
}

294 
w_rc_t
 
	g¥ocm⁄ô‹_t
::
	$ˇ£_£tup
()

296  (
RCOK
);

297 
	}
}

299 
w_rc_t
 
	g¥ocm⁄ô‹_t
::
	$ˇ£_ª£t
()

301  (
RCOK
);

302 
	}
}

304 
w_rc_t
 
	g¥ocm⁄ô‹_t
::
	$ˇ£_°›
()

306  (
RCOK
);

307 
	}
}

309 
w_rc_t
 
	g¥ocm⁄ô‹_t
::
	$ˇ£_tick
()

311  (
RCOK
);

312 
	}
}

315 
	g¥ocm⁄ô‹_t
::
	$£tEnv
(
sh‹e
::
Sh‹eEnv
* 
ív
)

317 
	`as£π
 (
ív
);

318 
_ív
 = 
ív
;

319 
	}
}

322 
	g¥ocm⁄ô‹_t
::
	$£t_¥öt_vîbo£
(
boﬁ
 
¥öt_vîbo£
)

324 
_¥öt_vîbo£
 = 
¥öt_vîbo£
;

325 
	}
}

327 
	g¥ocm⁄ô‹_t
::
	$¥öt_vîbo£
()

329 
	`as£π
(
_ív
);

330 
uöt_t
 
©t
 = 
_ív
->
	`gë_åx_©t
();

331 i‡(
_ív
->
	`gë_mósuª
(Ë=
sh‹e
::
MST_MEASURE
) {

332 
	`TRACE
–
TRACE_STATISTICS
, "(%.1f) (%.1f)\n",

333 
	`gë_avg_ußge
(
Ál£
),

334 ()(
©t
-
_œ°_ªadög
)/
_öãrvÆ_£c
);

335 
	`¥öt_lﬂd
(
_öãrvÆ_£c
);

336 
	`¥öt_ext_°©s
();

338 
_œ°_ªadög
=
©t
;

339 
	}
}

	@src/util/progress.cpp

31 
	~"utû/¥ogªss.h
"

33 
	~"k_deföes.h
"

42 
	$¥ogªss_ª£t
(* 
ödiˇt‹
) {

43 *
ödiˇt‹
 = 0;

44 
	}
}

52 
	$¥ogªss_upd©e
(* 
ödiˇt‹
) {

54 i‡–(++*
ödiˇt‹
 % 
PROGRESS_INTERVAL
) == 0 ) {

55 
	`¥ötf
(".");

56 
	`fÊush
(
°dout
);

57 *
ödiˇt‹
 = 0;

59 
	}
}

67 
	$¥ogªss_d⁄e
(c⁄° * 
èbÀ«me
) {

69 
	`¥ötf
("\nD⁄êlﬂdög (%s)...\n", 
èbÀ«me
);

70 
	`fÊush
(
°dout
);

71 
	}
}

	@src/util/random_input.cpp

33 
	~"utû/øndom_öput.h
"

37 
	$UR™d
(c⁄° 
low
, c⁄° 
high
)

39 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

40 
	`as£π
 (
£lf
);

41 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

42 
	`as£π
 (
øndgíp
);

44 
d
 = 
high
 - 
low
 + 1;

45  (
low
 + 
øndgíp
->
	`ønd
(
d
));

46 
	}
}

50 
boﬁ


51 
	$UR™dBoﬁ
()

53  (
	`UR™d
(0,1Ë? 
åue
 : 
Ál£
);

54 
	}
}

58 
	$UR™dSh‹t
(c⁄° 
low
, c⁄° 
high
)

60 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

61 
	`as£π
 (
£lf
);

62 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

63 
	`as£π
 (
øndgíp
);

65 
d
 = 
high
 - 
low
 + 1;

66  (
low
 + ()
øndgíp
->
	`ønd
(
d
));

67 
	}
}

71 
	$UR™dFûlSåC≠s
(* 
de°
, c⁄° 
sz
)

73 
	`as£π
 (
de°
);

74 
i
=0; i<
sz
; i++) {

75 
de°
[
i
] = 
CAPS_CHAR_ARRAY
[
	`UR™d
(0,(CAPS_CHAR_ARRAY)-1)];

77 
	}
}

81 
	$UR™dFûlSåNumbx
(* 
de°
, c⁄° 
sz
)

83 
	`as£π
 (
de°
);

84 
i
=0; i<
sz
; i++) {

85 
de°
[
i
] = 
NUMBERS_CHAR_ARRAY
[
	`UR™d
(0,(NUMBERS_CHAR_ARRAY)-1)];

87 
	}
}

90 
	#USE_ZIPF
 1

	)

92 
boﬁ
 
	g_g_íabÀZùf
 = 
Ál£
;

93 
	g_g_ZùfS
 = 0.0;

96 
	$UZR™d
(c⁄° 
low
, c⁄° 
high
)

98 #ifde‡
USE_ZIPF


99  ( 
_g_íabÀZùf
? ( 
	`ZR™d
(
low
,
high
Ë):–
	`UR™d
(low,high) ));

101  
	`UR™d
(
low
,
high
);

103 
	}
}

106 
	$ZR™d
(c⁄° 
low
, c⁄° 
high
)

108 
zùfün
 
	`myZùf
(
high
-
low
+2,
_g_ZùfS
);

110 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

111 
	`as£π
 (
£lf
);

112 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

113 
	`as£π
 (
øndgíp
);

114 
u
 = ()
øndgíp
->
	`ønd
(10000)/(10000);

116  (
myZùf
.
	`√xt
(
u
)+
low
-1);

117 
	}
}

119 
	$£tZùf
(c⁄° 
boﬁ
 
isE«bÀd
, c⁄° 
s
)

121 
_g_íabÀZùf
 = 
isE«bÀd
;

122 
_g_ZùfS
 = 
s
;

123 
	}
}

	@src/util/resource_pool.cpp

42 
	~<±hªad.h
>

43 
	~"utû/ªsour˚_poﬁ.h
"

44 
	~"utû/°©ic_li°.h
"

46 
	~<°dlib.h
>

47 
	~<as£π.h
>

48 
	~"utû/åa˚.h
"

49 
	~"utû/ès£π.h
"

55 
	#TRACE_RESOURCE_POOL
 0

	)

65 
	swaôî_node_s


67 
	mªq_ª£rve_cou¡
;

68 
±hªad_c⁄d_t
 
	mªque°_gø¡ed
;

69 
°©ic_li°_node_s
 
	mli°_node
;

91 
	gªsour˚_poﬁ_t
::
	$ª£rve
(
n
)

96 
	`TASSERT
(
n
 <
_ˇ∑côy
);

98 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s was %d:%d:%d\n",

99 
_«me
.
	`d©a
(),

100 
_ˇ∑côy
,

101 
_ª£rved
,

102 
_n⁄_idÀ
);

111 
num_uƒe£rved
 = 
_ˇ∑côy
 - 
_ª£rved
;

112 i‡(!
	`°©ic_li°_is_em±y
(&
_waôîs
Ë|| (
num_uƒe£rved
 < 
n
)) {

114 
	`waô_f‹_tu∫
(
n
);

118 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%sáfter_woken %d:%d:%d\n",

119 
_«me
.
	`d©a
(),

120 
_ˇ∑côy
,

121 
_ª£rved
,

122 
_n⁄_idÀ
);

130 
_ª£rved
 +
n
;

132 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s didnt_sleep %d:%d:%d\n",

133 
_«me
.
	`d©a
(),

134 
_ˇ∑côy
,

135 
_ª£rved
,

136 
_n⁄_idÀ
);

137 
	}
}

153 
	gªsour˚_poﬁ_t
::
	$uƒe£rve
(
n
)

156 
	`TASSERT
(
_ª£rved
 >
n
);

157 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s was %d:%d:%d\n",

158 
_«me
.
	`d©a
(),

159 
_ˇ∑côy
,

160 
_ª£rved
,

161 
_n⁄_idÀ
);

164 
_ª£rved
 -
n
;

166 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%sÇow %d:%d:%d\n",

167 
_«me
.
	`d©a
(),

168 
_ˇ∑côy
,

169 
_ª£rved
,

170 
_n⁄_idÀ
);

172 
	`waôî_wake
();

174 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%sáfter_waking %d:%d:%d\n",

175 
_«me
.
	`d©a
(),

176 
_ˇ∑côy
,

177 
_ª£rved
,

178 
_n⁄_idÀ
);

179 
	}
}

198 
	gªsour˚_poﬁ_t
::
	$nŸify_ˇ∑côy_ö¸ó£
(
diff
)

200 
	`TASSERT
(
diff
 > 0);

201 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s was %d:%d:%d\n",

202 
_«me
.
	`d©a
(),

203 
_ˇ∑côy
,

204 
_ª£rved
,

205 
_n⁄_idÀ
);

207 
_ˇ∑côy
 +
diff
;

208 
	`waôî_wake
();

210 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%sÇow %d:%d:%d\n",

211 
_«me
.
	`d©a
(),

212 
_ˇ∑côy
,

213 
_ª£rved
,

214 
_n⁄_idÀ
);

215 
	}
}

234 
	gªsour˚_poﬁ_t
::
	$nŸify_idÀ
()

236 
	`TASSERT
(
_n⁄_idÀ
 > 0);

237 
_n⁄_idÀ
--;

238 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s IDLE %d:%d:%d\n",

239 
_«me
.
	`d©a
(),

240 
_ˇ∑côy
,

241 
_ª£rved
,

242 
_n⁄_idÀ
);

243 
	}
}

246 
	gªsour˚_poﬁ_t
::
	$nŸify_n⁄_idÀ
()

248 
	`TASSERT
(
_n⁄_idÀ
 < 
_ª£rved
);

249 
_n⁄_idÀ
++;

250 
	`TRACE
(
TRACE_RESOURCE_POOL
 & 
TRACE_ALWAYS
, "%s NON_IDLE %d:%d:%d\n",

251 
_«me
.
	`d©a
(),

252 
_ˇ∑côy
,

253 
_ª£rved
,

254 
_n⁄_idÀ
);

255 
	}
}

258 
	gªsour˚_poﬁ_t
::
	$gë_ˇ∑côy
()

260  
_ˇ∑côy
;

261 
	}
}

264 
	gªsour˚_poﬁ_t
::
	$gë_ª£rved
()

266  
_ª£rved
;

267 
	}
}

276 
	gªsour˚_poﬁ_t
::
	$gë_n⁄_idÀ
()

278  
_n⁄_idÀ
;

279 
	}
}

297 
	gªsour˚_poﬁ_t
::
	$waô_f‹_tu∫
(
ªq_ª£rve_cou¡
)

300 
waôî_node_s
 
node
;

301 
node
.
ªq_ª£rve_cou¡
 =Ñeq_reserve_count;

302 
	`±hªad_c⁄d_öô
(&
node
.
ªque°_gø¡ed
, 
NULL
);

303 
	`°©ic_li°_≠≥nd
(&
_waôîs
, &
node
, &node.
li°_node
);

305 
	`±hªad_c⁄d_waô
(&
node
.
ªque°_gø¡ed
, 
_muãxp
);

309 
	}
}

320 
	gªsour˚_poﬁ_t
::
	$waôî_wake
()

322  !
	`°©ic_li°_is_em±y
(&
_waôîs
) ) {

323 
num_uƒe£rved
 = 
_ˇ∑côy
 - 
_ª£rved
;

325 * 
waôî_node
;

326 
gë_ªt
 =

327 
	`°©ic_li°_gë_hód
(&
_waôîs
, &
waôî_node
);

328 
	`TASSERT
(
gë_ªt
 == 0);

329 
waôî_node_s
* 
wn
 = (waôî_node_s*)
waôî_node
;

331 i‡(
num_uƒe£rved
 < 
wn
->
ªq_ª£rve_cou¡
)

337 
ªmove_ªt
 =

338 
	`°©ic_li°_ªmove_hód
(&
_waôîs
, &
waôî_node
, 
NULL
);

339 
	`TASSERT
(
ªmove_ªt
 == 0);

340 
wn
 = (
waôî_node_s
*)
waôî_node
;

342 
_ª£rved
 +
wn
->
ªq_ª£rve_cou¡
;

343 
	`±hªad_c⁄d_sig«l
(&
wn
->
ªque°_gø¡ed
);

345 
	}
}

	@src/util/rio.cpp

13 
	~"utû/rio.h
"

17 
	~<°rög.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<uni°d.h
>

20 
	~<î∫o.h
>

28 
ssize_t
 
rio_ªad
(
rio_t
* 
Ω
, * 
u§buf
, ssize_à
n
);

50 
ssize_t
 
	$rio_ªadn
(
fd
, * 
u§buf
, 
size_t
 
n
)

52 
size_t
 
∆e·
 = 
n
;

53 
ssize_t
 
ƒód
;

54 * 
buÂ
 = (*)
u§buf
;

56 
∆e·
 > 0)

58 i‡((
ƒód
 = 
	`ªad
(
fd
, 
buÂ
, 
∆e·
)) < 0)

60 i‡(
î∫o
 =
EINTR
)

61 
ƒód
 = 0;

65 i‡(
ƒód
 == 0)

67 
∆e·
 -
ƒód
;

68 
buÂ
 +
ƒód
;

71  (
n
 - 
∆e·
);

72 
	}
}

91 
ssize_t
 
	$rio_wrôí
(
fd
, c⁄° * 
u§buf
, 
size_t
 
n
)

93 
size_t
 
∆e·
 = 
n
;

94 
ssize_t
 
nwrôãn
;

95 * 
buÂ
 = (*)
u§buf
;

97 
∆e·
 > 0)

99 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
buÂ
, 
∆e·
)) <= 0)

101 i‡(
î∫o
 =
EINTR
)

102 
nwrôãn
 = 0;

106 
∆e·
 -
nwrôãn
;

107 
buÂ
 +
nwrôãn
;

110  
n
;

111 
	}
}

126 
	$rio_ªadöôb
(
rio_t
 *
Ω
, 
fd
)

128 
Ω
->
rio_fd
 = 
fd
;

129 
Ω
->
rio_˙t
 = 0;

130 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

131 
	}
}

150 
ssize_t
 
	$rio_ªadnb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
n
)

152 
size_t
 
∆e·
 = 
n
;

153 
ssize_t
 
ƒód
;

154 * 
buÂ
 = (*)
u§buf
;

156 
∆e·
 > 0)

158 i‡((
ƒód
 = 
	`rio_ªad
(
Ω
, 
buÂ
, 
∆e·
)) < 0)

160 i‡(
î∫o
 =
EINTR
)

161 
ƒód
 = 0;

165 i‡(
ƒód
 == 0)

167 
∆e·
 -
ƒód
;

168 
buÂ
 +
ƒód
;

171  (
n
 - 
∆e·
);

172 
	}
}

192 
ssize_t
 
	$rio_ªadlöeb
(
rio_t
 *
Ω
, *
u§buf
, 
size_t
 
maxÀn
)

194 
rc
;

195 
size_t
 
n
;

196 
c
, *
buÂ
 = (*)
u§buf
;

199 
n
 = 1;Ç < 
maxÀn
;Ç++)

201 i‡((
rc
 = 
	`rio_ªad
(
Ω
, &
c
, 1)) == 1)

203 *
buÂ
++ = 
c
;

204 i‡(
c
 == '\n')

207 i‡(
rc
 == 0)

209 i‡(
n
 == 1)

219 *
buÂ
 = 0;

220  
n
;

221 
	}
}

249 
ssize_t
 
	$rio_ªad
(
rio_t
* 
Ω
, * 
u§buf
, 
ssize_t
 
n
)

252 
˙t
;

256 
Ω
->
rio_˙t
 <= 0)

258 
Ω
->
rio_˙t
 = 
	`ªad
‘p->
rio_fd
,Ñp->
rio_buf
, (rp->rio_buf));

259 i‡(
Ω
->
rio_˙t
 < 0)

261 i‡(
î∫o
 !
EINTR
)

264 i‡(
Ω
->
rio_˙t
 == 0)

267 
Ω
->
rio_buÂå
 =Ñp->
rio_buf
;

272 
˙t
 = 
n
;

273 i‡(
Ω
->
rio_˙t
 < 
n
)

274 
˙t
 = 
Ω
->
rio_˙t
;

275 
	`mem˝y
(
u§buf
, 
Ω
->
rio_buÂå
, 
˙t
);

276 
Ω
->
rio_buÂå
 +
˙t
;

277 
Ω
->
rio_˙t
 -
˙t
;

280  
˙t
;

281 
	}
}

	@src/util/shell.cpp

32 
	~"k_deföes.h
"

33 
	~"utû/shñl.h
"

34 
	~"utû/chomp.h
"

35 
	~"utû/t˝.h
"

36 
	~"utû/ívv¨.h
"

37 
	~"utû/hi°‹y.h
"

40 
	$sig_h™dÀr_fwd
(
sig
)

42 
shñl_t
::
	`sig_h™dÀr
(
sig
);

43 
	}
}

55 
	gshñl_t
::
	$shñl_t
(c⁄° * 
¥om±
,

56 c⁄° 
boﬁ
 
ßve_hi°‹y
,

57 c⁄° 
boﬁ
 
√t_mode
,

58 c⁄° 
uöt_t
 
√t_p‹t
,

59 c⁄° 
boﬁ
 
öputfûe_mode
,

60 c⁄° 
°rög
 
öputfûe


62 : 
	`_cmd_cou¡î
(0),

63 
	`_ßve_hi°‹y
(
ßve_hi°‹y
),

64 
	`_°©e
(
SHELL_NEXT_CONTINUE
),

65 
	`_¥o˚ssög_comm™d
(
Ál£
),

66 
	`_√t_mode
(
√t_mode
),

67 
	`_√t_p‹t
(
√t_p‹t
),

68 
	`_öputfûe_mode
(
öputfûe_mode
),

69 
	`_öputfûe
(
öputfûe
),

70 
	`_li°í_fd
(-1), 
	`_c⁄n_fd
(-1), 
	$_√t_c⁄n_˙t
(0)

73 
_cmd_¥om±
 = 
√w
 [
SHELL_COMMAND_BUFFER_SIZE
];

74 
	`mem£t
(
_cmd_¥om±
,0,
SHELL_COMMAND_BUFFER_SIZE
);

75 i‡(
¥om±
Ë
	`°∫˝y
(
_cmd_¥om±
,Örom±, 
	`°æí
(prompt));

76 
	`_ªgi°î_comm™ds
();

77 
	}
}

89 
	gshñl_t
::~
	$shñl_t
()

92 i‡(
_öputfûe_mode
)

94 
_öputfûe°ªam
.
	`˛o£
();

96 
	}
}

112 
	gshñl_t
::
	$°¨t
()

115 
	`ö°™˚
(Ë
this
;

116 
siga˘i⁄
 
ß
;

117 
siga˘i⁄
 
ß_ﬁd
;

118 
ß
.
ß_Êags
 = 0;

119 
	`sigem±y£t
(&
ß
.
ß_mask
);

121 
ß
.
ß_h™dÀr
 = &
sig_h™dÀr_fwd
;

123 i‡(
	`siga˘i⁄
(
SIGINT
, &
ß
, &
ß_ﬁd
) < 0) {

124 
	`TRACE
–
TRACE_ALWAYS
, "Cannot install SIGINT handler\n");

129 i‡(
_√t_mode
) {

131 
_li°í_fd
 = 
	`›í_li°ífd
(
_√t_p‹t
);

132 i‡(
_li°í_fd
 == -1) {

133 
	`TRACE
–
TRACE_ALWAYS
, "CouldÇot openÜistÖort (%d):\n%s\n",

134 
_√t_p‹t
, 
	`°ªº‹
(
î∫o
));

140 i‡(
_öputfûe_mode
)

143 
_öputfûe°ªam
.
	`›í
(
_öputfûe
.
	`c_°r
());

144 i‡((!
_öputfûe°ªam
.
	`is_›í
()Ë|| (!_öputfûe°ªam.
	`good
()))

146 
	`TRACE
–
TRACE_ALWAYS
, "File (%s)Émpty orÇot found.\n",

147 
_öputfûe
.
	`c_°r
());

153 
	`öô_cmds
();

156 #ifde‡
HAVE_READLINE


157 i‡(
_ßve_hi°‹y
) {

158 
_ßve_hi°‹y
 = 
	`hi°‹y_›í
();

163 
_°©e
 = 
SHELL_NEXT_CONTINUE
;

164 
_°©e
 =
SHELL_NEXT_CONTINUE
)

166 i‡(
_√t_mode
)

168 
_°©e
 = 
	`¥o˚ss_√tw‹k
();

169 i‡(
_°©e
 =
SHELL_NEXT_DISCONNECT
)

171 
_c⁄n_fd
 = -1;

172 
_°©e
 = 
SHELL_NEXT_CONTINUE
;

176 i‡(
_öputfûe_mode
)

178 
_°©e
 = 
	`¥o˚ss_fûñöe
();

182 
_°©e
 = 
	`¥o˚ss_ªadlöe
();

188 #ifde‡
HAVE_READLINE


189 i‡(
_ßve_hi°‹y
) {

190 
	`TRACE
–
TRACE_ALWAYS
, "Saving history. (%d) commands...\n",

191 
_cmd_cou¡î
);

192 
	`hi°‹y_˛o£
();

197 
	`˛o£_cmds
();

200 
	`siga˘i⁄
(
SIGINT
, &
ß_ﬁd
, 0);

203 
	}
}

215 
	gshñl_t
::
	$¥o˚ss_ªadlöe
()

217 
	`as£π
 (!
_√t_mode
);

218 
	`as£π
 (!
_öputfûe_mode
);

220 *
cmd
 = (*)
NULL
;

223 #ifde‡
HAVE_READLINE


224 
cmd
 = 
	`ªadlöe
(
_cmd_¥om±
);

226 
	#SZ
 127

	)

227 
	#STR
(
x
Ë
	`_STR
(x)

	)

228 
	#_STR
(
x
Ë#x

	)

229 
°¨t
 = 0;

230 
sz
 = 
SZ
;

231 
cmd
 = (*Ë
	`mÆloc
(
sz
+1);

232 
íd
;

233 
agaö
:

234 
ªad
 = 
	`fsˇnf
(
°dö
, "%" 
	`STR
(
SZ
Ë"[^\n]%c", 
cmd
+
°¨t
, &
íd
);

235 i‡(
ªad
 == 2) {

236 i‡(
íd
 != '\n') {

237 
cmd
[
sz
] = 
íd
;

238 
°¨t
 = 
sz
+1;

239 
sz
 +
SZ
;

240 
cmd
 = (*Ë
	`ªÆloc
(cmd, 
sz
);

241 
agaö
;

244 
cmd
[
sz
] = 0;

247 #unde‡
SZ


248 #unde‡
STR


249 #unde‡
_STR


251 i‡(
cmd
 =
NULL
) {

253  (
SHELL_NEXT_QUIT
);

256  (
	`¥o˚ss_⁄e
(
cmd
));

257 
	}
}

269 
	gshñl_t
::
	$¥o˚ss_√tw‹k
()

271 
	`as£π
 (
_√t_mode
);

272 
	`as£π
 (!
_öputfûe_mode
);

273 
	`as£π
 (
_li°í_fd
>=0);

276 i‡(
_c⁄n_fd
<0) {

280 
	`TRACE
–
TRACE_ALWAYS
,

282 
_√t_c⁄n_˙t
, 
_√t_p‹t
);

283 
_˛õ¡_Àn
 = (
_˛õ¡_addr
);

285 
_c⁄n_fd
 = 
	`ac˚±
(
_li°í_fd
,

286 (
sockaddr
*)&
_˛õ¡_addr
,

287 (
sockÀn_t
*)&
_˛õ¡_Àn
);

289 i‡(
_c⁄n_fd
 < 0) {

290 
	`TRACE
–
TRACE_ALWAYS
, "ErrorácceptingÇew connection\n");

291  (
SHELL_NEXT_QUIT
);

295 
_ö_°ªam
 = 
	`fd›í
(
_c⁄n_fd
, "r");

296 i‡(
_ö_°ªam
.
	`gë
(Ë=
NULL
) {

297 
	`TRACE
–
TRACE_ALWAYS
,

299 
_c⁄n_fd
);

300 
	`˛o£
(
_c⁄n_fd
);

301  (
SHELL_NEXT_QUIT
);

304 
	`TRACE
–
TRACE_ALWAYS
, "Client connection opened...\n");

305 ++
_√t_c⁄n_˙t
;

308 
	`as£π
 (
_ö_°ªam
.
	`gë
());

310 
cmd
[
SERVER_COMMAND_BUFFER_SIZE
];

313 * 
fgës_ªt
 = 
	`fgës
(
cmd
, (cmd), 
_ö_°ªam
);

314 i‡(
fgës_ªt
 =
NULL
) {

316  (
SHELL_NEXT_QUIT
);

320 
	`chomp_√wlöe
(
cmd
);

321 
	`chomp_ˇºüge_ªtu∫
(
cmd
);

323  (
	`¥o˚ss_⁄e
(
cmd
));

324 
	}
}

336 
	gshñl_t
::
	$¥o˚ss_fûñöe
()

338 
	`as£π
 (!
_√t_mode
);

339 
	`as£π
 (
_öputfûe_mode
);

341 
°rög
 
cmd_ªad
;

344 i‡(
_öputfûe°ªam
.
	`eof
())

346  (
SHELL_NEXT_QUIT
);

348 
	`gëlöe
(
_öputfûe°ªam
,
cmd_ªad
);

349 
cout
 << "FILECMD: " << 
cmd_ªad
 << 
ídl
;

357  (
	`¥o˚ss_⁄e
(
cmd_ªad
.
	`c_°r
()));

358 
	}
}

370 
	gshñl_t
::
	$¥o˚ss_⁄e
(c⁄° * 
acmd
)

372 
	`as£π
 (
acmd
 !
NULL
);

375 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

376 
	`CRITICAL_SECTION
(
sh_cs
,
_lock
);

379 i‡–
	`ssˇnf
(
acmd
, "%s", 
cmd_èg
) < 1) {

380 
_hñ≥r
->
	`li°_cmds
();

381  (
SHELL_NEXT_CONTINUE
);

385 #ifde‡
HAVE_READLINE


386 i‡(*
acmd
) {

388 
	`add_hi°‹y
(
acmd
);

393 ++
_cmd_cou¡î
;

396 
_¥o˚ssög_comm™d
 = 
åue
;

397 
rvÆ
=0;

398 
cmdM≠It
 
cmdô
 = 
_Æü£s
.
	`föd
(
cmd_èg
);

399 i‡(
cmdô
 =
_Æü£s
.
	`íd
()) {

400 
	`TRACE
–
TRACE_ALWAYS
, "Unknow¿comm™d (%s)\n", 
cmd_èg
);

401 
rvÆ
 = 
SHELL_NEXT_CONTINUE
;

404 
rvÆ
 = 
cmdô
->
£c⁄d
->
	`h™dÀ
(
acmd
);

406 
_¥o˚ssög_comm™d
 = 
Ál£
;

409  (
rvÆ
);

410 
	}
}

421 
	gshñl_t
::
	$add_cmd
(
comm™d_h™dÀr_t
* 
acmd
)

423 
	`as£π
 (
acmd
);

424 
	`as£π
 (!
acmd
->
	`«me
().
	`em±y
());

425 
cmdM≠It
 
cmdô
;

428 
cmdô
 = 
_cmds
.
	`föd
(
acmd
->
	`«me
());

429 i‡(
cmdô
!=
_cmds
.
	`íd
()) {

430 
	`TRACE
–
TRACE_ALWAYS
,

432 
acmd
->
	`«me
().
	`c_°r
());

436 
	`TRACE
–
TRACE_DEBUG
,

438 
acmd
->
	`«me
().
	`c_°r
());

439 
_cmds
[
acmd
->
	`«me
()] =ácmd;

443 
ªgs
=0;

444 
ve˘‹
<
°rög
>* 
≠l
 = 
acmd
->
	`Æü£s
();

445 
	`as£π
 (
≠l
);

446 
ve˘‹
<
°rög
>::
ôî©‹
 
Æô
 = 
≠l
->
	`begö
();álô !≠l->
	`íd
(); ++alit) {

447 
cmdô
 = 
_Æü£s
.
	`föd
(*
Æô
);

448 i‡(
cmdô
!=
_Æü£s
.
	`íd
()) {

449 
	`TRACE
–
TRACE_ALWAYS
,

451 (*
Æô
).
	`c_°r
());

454 
	`TRACE
–
TRACE_DEBUG
,

456 (*
Æô
).
	`c_°r
());

457 
_Æü£s
[*
Æô
]=
acmd
;

458 ++
ªgs
;

461 
	`as£π
 (
ªgs
);

463 
	}
}

476 
	gshñl_t
::
	$öô_cmds
()

478 
	`CRITICAL_SECTION
(
sh_cs
,
_lock
);

479 
cmdM≠It
 
ô
 = 
_cmds
.
	`begö
(); ià!_cmds.
	`íd
(); ++it) {

480 
ô
->
£c⁄d
->
	`öô
();

483 
	}
}

496 
	gshñl_t
::
	$˛o£_cmds
()

498 
	`CRITICAL_SECTION
(
sh_cs
,
_lock
);

499 
cmdM≠It
 
ô
 = 
_cmds
.
	`begö
(); ià!_cmds.
	`íd
(); ++it) {

500 
ô
->
£c⁄d
->
	`˛o£
();

503 
	}
}

516 
	gshñl_t
::
	$_ªgi°î_comm™ds
()

518 
	`REGISTER_CMD
(
åa˚_cmd_t
,
_åa˚r
);

519 
	`REGISTER_CMD
(
c⁄f_cmd_t
,
_c⁄„r
);

520 
	`REGISTER_CMD
(
ív_cmd_t
,
_ívî
);

521 
	`REGISTER_CMD
(
£t_cmd_t
,
_£ãr
);

522 
	`REGISTER_CMD
(
quô_cmd_t
,
_quôî
);

523 
	`REGISTER_CMD
(
echo_cmd_t
,
_ech€r
);

524 
	`REGISTER_CMD
(
bªak_cmd_t
,
_bªakî
);

525 
	`REGISTER_CMD
(
zùf_cmd_t
,
_zù„r
);

527 
	`REGISTER_CMD_PARAM
(
hñp_cmd_t
,
_hñ≥r
,&
_cmds
);

530 
	}
}

548 
	gquô_cmd_t
::
	$£èlü£s
()

550 
_«me
 = 
	`°rög
("quit");

551 
_Æü£s
.
	`push_back
("quit");

552 
_Æü£s
.
	`push_back
("q");

553 
_Æü£s
.
	`push_back
("exit");

554 
	}
}

564 
	gdisc⁄√˘_cmd_t
::
	$£èlü£s
()

566 
_«me
 = 
	`°rög
("disconnect");

567 
_Æü£s
.
	`push_back
("disconnect");

568 
_Æü£s
.
	`push_back
("d");

569 
	}
}

578 
	ghñp_cmd_t
::
	$£èlü£s
()

580 
_«me
 = 
	`°rög
("help");

581 
_Æü£s
.
	`push_back
("help");

582 
_Æü£s
.
	`push_back
("h");

583 
	}
}

586 
	ghñp_cmd_t
::
	$li°_cmds
()

588 
	`TRACE
–
TRACE_ALWAYS
,

590 
cmdM≠It
 
ô
 = 
_pcmds
->
	`begö
(); ià!_pcmds->
	`íd
(); ++it) {

591 
	`TRACE
–
TRACE_ALWAYS
, " %s - %s\n",

592 
ô
->
fú°
.
	`c_°r
(), it->
£c⁄d
->
	`desc
().c_str());

594 
	}
}

597 
	ghñp_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

599 
hñp_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

600 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

601 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
hñp_èg
, 
cmd_èg
) < 2) {

603 
	`li°_cmds
();

604  (
SHELL_NEXT_CONTINUE
);

607 
cmdM≠It
 
ô
 = 
_pcmds
->
	`föd
(
cmd_èg
);

608 i‡(
ô
==
_pcmds
->
	`íd
()) {

609 
	`TRACE
–
TRACE_ALWAYS
,"Cmd (%sËnŸ found\n", 
cmd_èg
);

610  (
SHELL_NEXT_CONTINUE
);

612 
ô
->
£c⁄d
->
	`ußge
();

613  (
SHELL_NEXT_CONTINUE
);

614 
	}
}

623 
	g£t_cmd_t
::
	$öô
()

625 
ev
 = 
ívV¨
::
	`ö°™˚
();

626 
	}
}

628 
	g£t_cmd_t
::
	$£èlü£s
()

630 
_«me
 = 
	`°rög
("set");

631 
_Æü£s
.
	`push_back
("set");

632 
_Æü£s
.
	`push_back
("s");

633 
	}
}

636 
	g£t_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

638 
	`as£π
 (
ev
);

639 
ev
->
	`∑r£SëReq
(
cmd
);

640  (
SHELL_NEXT_CONTINUE
);

641 
	}
}

644 
	g£t_cmd_t
::
	$ußge
()

646 
	`TRACE
–
TRACE_ALWAYS
, "SET Usage:\n\n" \

651 
	}
}

660 
	gív_cmd_t
::
	$öô
()

662 
ev
 = 
ívV¨
::
	`ö°™˚
();

663 
	}
}

665 
	gív_cmd_t
::
	$£èlü£s
()

667 
_«me
 = 
	`°rög
("env");

668 
_Æü£s
.
	`push_back
("env");

669 
_Æü£s
.
	`push_back
("e");

670 
	}
}

673 
	gív_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

675 
	`as£π
 (
ev
);

676 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

677 
ív_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

678 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
ív_èg
) < 2) {

680 
ev
->
	`¥ötV¨s
();

681  (
SHELL_NEXT_CONTINUE
);

683 
ev
->
	`checkV¨
(
ív_èg
);

684  (
SHELL_NEXT_CONTINUE
);

685 
	}
}

688 
	gív_cmd_t
::
	$ußge
()

690 
	`TRACE
–
TRACE_ALWAYS
, "ENV Usage:\n\n" \

695 
	}
}

704 
	gc⁄f_cmd_t
::
	$öô
()

706 
ev
 = 
ívV¨
::
	`ö°™˚
();

707 
	}
}

709 
	gc⁄f_cmd_t
::
	$£èlü£s
()

711 
_«me
 = 
	`°rög
("conf");

712 
_Æü£s
.
	`push_back
("conf");

713 
_Æü£s
.
	`push_back
("c");

714 
	}
}

717 
	gc⁄f_cmd_t
::
	$h™dÀ
(const * )

719 
ev
->
	`ª‰eshV¨s
();

720  (
SHELL_NEXT_CONTINUE
);

721 
	}
}

724 
	gc⁄f_cmd_t
::
	$ußge
()

726 
	`TRACE
–
TRACE_ALWAYS
,

728 
	}
}

738 
	gzùf_cmd_t
::
	$£èlü£s
()

740 
_«me
 = 
	`°rög
("zipf");

741 
_Æü£s
.
	`push_back
("zipf");

742 
_Æü£s
.
	`push_back
("z");

743 
	}
}

745 
	gzùf_cmd_t
::
	$h™dÀ
(c⁄° * 
cmd
)

747 
cmd_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

748 
s_èg
[
SERVER_COMMAND_BUFFER_SIZE
];

749 i‡–
	`ssˇnf
(
cmd
, "%†%s", 
cmd_èg
, 
s_èg
) < 2) {

750 
_is_íabÀd
 = 
Ál£
;

753 
_s
 = 
	`©of
(
s_èg
);

754 
_is_íabÀd
 = 
åue
;

757 
	`TRACE
–
TRACE_ALWAYS
, "Sëtög Zùf. E«bÀd=%d. S=%.2f\n", 
_is_íabÀd
, 
_s
);

758 
	`£tZùf
(
_is_íabÀd
,
_s
);

759  (
SHELL_NEXT_CONTINUE
);

760 
	}
}

763 
	gzùf_cmd_t
::
	$ußge
()

765 
	`TRACE
–
TRACE_ALWAYS
,

768 
	}
}

770 
°rög
 
	gzùf_cmd_t
::
	$desc
() const

772  
	`°rög
("Enables/Disables zipfian input generation");

773 
	}
}

	@src/util/skewer.cpp

31 
	~"utû/skewî.h
"

32 
	~"utû/øndom_öput.h
"

52 
	gskewî_t
::
	$£t
(
¨ó
, 
lowî
, 
uµî
, 
lﬂd
)

54 
_¨ó
 = 
¨ó
;

55 
_lowî
 = 
lowî
;

56 
_uµî
 = 
uµî
;

57 
_lﬂd
 = 
lﬂd
;

58 
	`˛ór
();

59 
	`_£t_öãrvÆs
();

60 
	}
}

71 
	gskewî_t
::
	$˛ór
() {

72 
_öãrvÆ_l
.
	`˛ór
();

73 
_öãrvÆ_u
.
	`˛ór
();

74 
_n⁄_öãrvÆ_l
.
	`˛ór
();

75 
_n⁄_öãrvÆ_u
.
	`˛ór
();

76 
_is_u£d
 = 
Ál£
;

77 
	}
}

89 
	gskewî_t
::
	$ª£t
(
skew_ty≥_t
 
ty≥
) {

90 
	`˛ór
();

91 if(
ty≥
 =
SKEW_CHAOTIC
) {

92 
_lﬂd
 = 
	`UR™d
(0,100);

93 
_¨ó
 = 
	`UR™d
(1,100);

97 
	`_£t_öãrvÆs
();

98 
_is_u£d
 = 
åue
;

99 
	}
}

110 
boﬁ
 
	gskewî_t
::
	$is_u£d
() {

111 if(!
_is_u£d
) {

112 
_is_u£d
 = 
åue
;

113  
Ál£
;

114 }  
åue
;

115 
	}
}

131 
	gskewî_t
::
	$_£t_öãrvÆs
() {

133 if(
	`UR™d
(1,100) < 70) {

134 
öãrvÆ_lowî
 = 
	`UR™d
(
_lowî
,
_uµî
);

135 
öãrvÆ_uµî
 = 
öãrvÆ_lowî
 + 
	`˚û
(((Ë((
_uµî
 - 
_lowî
 + 1Ë* 
_¨ó
))/100);

136 
	`_add_öãrvÆ
(
öãrvÆ_lowî
, 
öãrvÆ_uµî
);

138 
öãrvÆ
 = 
	`˚û
(((Ë((
_uµî
 - 
_lowî
 + 1Ë* 
_¨ó
))/200);

139 
öãrvÆ_lowî
 = 
	`UR™d
(
_lowî
,
_uµî
);

140 
öãrvÆ_uµî
 = 
öãrvÆ_lowî
 + 
öãrvÆ
;

141 
öãrvÆ_lowî_2
 = 
	`UR™d
(
öãrvÆ_lowî
,
_uµî
);

142 
öãrvÆ_uµî_2
 = 
öãrvÆ_lowî_2
 + 
öãrvÆ
;

143 
	`_add_öãrvÆ
(
öãrvÆ_lowî
, 
öãrvÆ_uµî
);

144 
	`_add_öãrvÆ
(
öãrvÆ_lowî_2
, 
öãrvÆ_uµî_2
);

147 
i
=0; i<
_öãrvÆ_u
.
	`size
(); i++) {

148 if(
i
==0 && 
_öãrvÆ_l
[i] > 
_lowî
) {

149 
_n⁄_öãrvÆ_l
.
	`push_back
(
_lowî
);

150 
_n⁄_öãrvÆ_u
.
	`push_back
(
_öãrvÆ_l
[
i
]-1);

152 if(
i
+1<
_öãrvÆ_u
.
	`size
()) {

153 if(
_öãrvÆ_u
[
i
]+1 < 
_öãrvÆ_l
[i+1]) {

154 
_n⁄_öãrvÆ_l
.
	`push_back
(
_öãrvÆ_u
[
i
]+1);

155 
_n⁄_öãrvÆ_u
.
	`push_back
(
_öãrvÆ_l
[
i
+1]-1);

157 } if(
_öãrvÆ_u
[
i
] < 
_uµî
) {

158 
_n⁄_öãrvÆ_l
.
	`push_back
(
_öãrvÆ_u
[
i
]+1);

159 
_n⁄_öãrvÆ_u
.
	`push_back
(
_uµî
);

164 
	}
}

179 
	gskewî_t
::
	$_add_öãrvÆ
(
öãrvÆ_lowî
, 
öãrvÆ_uµî
) {

181 if(
öãrvÆ_lowî
 =
_uµî
 && 
öãrvÆ_uµî
-1>_upper) {

182 
öãrvÆ_lowî
--;

183 
öãrvÆ_uµî
--;

185 if(
öãrvÆ_uµî
-1 > 
_uµî
) {

186 if(
_öãrvÆ_l
.
	`size
() == 1) {

187 
_öãrvÆ_l
.
	`ö£π
(_öãrvÆ_l.
	`begö
(), 
_lowî
);

188 
_öãrvÆ_u
.
	`ö£π
(_öãrvÆ_u.
	`begö
(), 
öãrvÆ_uµî
 - 
_uµî
 - 2 + 
_lowî
);

189 
_öãrvÆ_l
.
	`push_back
(
öãrvÆ_lowî
 + 1);

190 
_öãrvÆ_u
.
	`push_back
(
_uµî
);

191 } if(
_öãrvÆ_l
.
	`size
() == 2) {

192 if(
_öãrvÆ_u
[0] > 
öãrvÆ_uµî
 - 
_uµî
 - 2 + 
_lowî
) {

193 
_öãrvÆ_l
.
	`ö£π
(_öãrvÆ_l.
	`begö
(), 
_lowî
);

194 
_öãrvÆ_u
.
	`ö£π
(_öãrvÆ_u.
	`begö
(), 
öãrvÆ_uµî
 - 
_uµî
 - 2 + 
_lowî
);

196 
ve˘‹
<>::
ôî©‹
 
ôî
 = 
_öãrvÆ_l
.
	`begö
();

197 
_öãrvÆ_l
.
	`ö£π
(++
ôî
, 
_lowî
);

198 
ôî
 = 
_öãrvÆ_u
.
	`begö
();

199 
_öãrvÆ_u
.
	`ö£π
(++
ôî
, 
öãrvÆ_uµî
 - 
_uµî
 - 2 + 
_lowî
);

201 if(
_öãrvÆ_l
[2] < 
öãrvÆ_lowî
+1) {

202 
_öãrvÆ_l
.
	`push_back
(
öãrvÆ_lowî
+1);

203 
_öãrvÆ_u
.
	`push_back
(
_uµî
);

205 
_öãrvÆ_l
.
	`push_back
(_interval_l[2]);

206 
_öãrvÆ_u
.
	`push_back
(_interval_u[2]);

207 
_öãrvÆ_l
[2] = 
öãrvÆ_lowî
+1;

208 
_öãrvÆ_u
[2] = 
_uµî
;

211 
_öãrvÆ_l
.
	`push_back
(
_lowî
);

212 
_öãrvÆ_u
.
	`push_back
(
öãrvÆ_uµî
 - 
_uµî
 - 2 + 
_lowî
);

213 
_öãrvÆ_l
.
	`push_back
(
öãrvÆ_lowî
+1);

214 
_öãrvÆ_u
.
	`push_back
(
_uµî
);

217 
_öãrvÆ_l
.
	`push_back
(
öãrvÆ_lowî
);

218 
_öãrvÆ_u
.
	`push_back
(
öãrvÆ_uµî
 - 1);

220 
	}
}

231 
	gskewî_t
::
	$gë_öput
() {

232 
öput
 = 0;

233 
boﬁ
 
is_£t
 = 
Ál£
;

234 
ønd
 = 
	`UR™d
(1,100);

235 
lﬂd
 = 
_lﬂd
 / 
_öãrvÆ_u
.
	`size
();

236 
i
=0; !
is_£t
 && i<
_öãrvÆ_u
.
	`size
(); i++) {

237 if(
ønd
 < 
lﬂd
 * (
i
+1)) {

238 
öput
 = 
	`UZR™d
(
_öãrvÆ_l
[
i
],
_öãrvÆ_u
[i]);

239 
is_£t
 = 
åue
;

242 
ønd
 =Ñ™d - 
_lﬂd
;

243 
lﬂd
 = (100 - 
_lﬂd
Ë/ 
_n⁄_öãrvÆ_u
.
	`size
();

244 
i
=0; !
is_£t
 && i<
_n⁄_öãrvÆ_u
.
	`size
(); i++) {

245 if(
ønd
 < 
lﬂd
 * (
i
+1)) {

246 
öput
 = 
	`UZR™d
(
_n⁄_öãrvÆ_l
[
i
],
_n⁄_öãrvÆ_u
[i]);

247 
is_£t
 = 
åue
;

250 if(!
is_£t
 || (
öput
 < 
_lowî
Ë|| (öpuà> 
_uµî
)) {

251 
öput
 = 
	`UZR™d
(
_lowî
, 
_uµî
);

253  
öput
;

254 
	}
}

266 
	gskewî_t
::
	$¥öt_öãrvÆs
() {

267 
cout
 << "¥öàöãrvÆ†f‹ (lﬂd)" << 
ídl
;

268 
i
=0; i<
_öãrvÆ_u
.
	`size
(); i++) {

269 
cout
 << 
_öãrvÆ_l
[
i
] << " - " << 
_öãrvÆ_u
[i] << 
ídl
;

271 
cout
 << "¥öàöãrvÆ†f‹ (100-lﬂd)" << 
ídl
;

272 
i
=0; i<
_n⁄_öãrvÆ_u
.
	`size
(); i++) {

273 
cout
 << 
_n⁄_öãrvÆ_l
[
i
] << " - " << 
_n⁄_öãrvÆ_u
[i] << 
ídl
;

275 
	}
}

	@src/util/static_hash_map.cpp

43 
	~<c°dlib
>

44 
	~"utû/°©ic_hash_m≠.h
"

45 
	~"utû/°©ic_hash_m≠_°ru˘.h
"

50 * 
°©ic_hash_node_gë_key
(
°©ic_hash_node_t
 
node
);

51 * 
°©ic_hash_node_gë_vÆue
(
°©ic_hash_node_t
 
node
);

52 
°©ic_hash_node_t
 
°©ic_hash_node_gë_√xt
(°©ic_hash_node_à
node
);

53 
°©ic_hash_node_ö£π_a·î
(
°©ic_hash_node_t
 
ö£π_a·î_this
,

54 
°©ic_hash_node_t
 
node_to_ö£π
);

55 
°©ic_hash_node_cut
(
°©ic_hash_node_t
 
node
);

81 
°©ic_hash_m≠_öô
(
°©ic_hash_m≠_t
 
ht
,

82 
°©ic_hash_node_s
* 
èbÀ_íåõs
,

83 
size_t
 
èbÀ_size
,

84 
	$size_t
 (*
hf
Ë(c⁄° * 
key
),

85 (*
com∑øt‹
Ë(c⁄° * 
key1
, c⁄° * 
key2
) )

87 
ht
->
èbÀ_íåõs
 =Åable_entries;

88 
ht
->
èbÀ_size
 =Åable_size;

89 
ht
->
hf
 = hf;

90 
ht
->
com∑øt‹
 = comparator;

92 
size_t
 
i
;

93 
i
 = 0; i < 
èbÀ_size
; i++)

98 
	`°©ic_hash_node_öô
–&
èbÀ_íåõs
[
i
], 
NULL
, NULL );

100 
	}
}

117 
	$°©ic_hash_m≠_ö£π
(
°©ic_hash_m≠_t
 
ht
,

118 c⁄° * 
key
,

119 c⁄° * 
vÆue
,

120 
°©ic_hash_node_t
 
node
)

122 
hash_code
 = 
ht
->
	`hf
(
key
);

123 
hash_ödex
 = 
hash_code
 % 
ht
->
èbÀ_size
;

125 
	`°©ic_hash_node_öô
–
node
, 
key
, 
vÆue
 );

129 
	`°©ic_hash_node_ö£π_a·î
–&
ht
->
èbÀ_íåõs
[
hash_ödex
], 
node
 );

130 
	}
}

149 
	$°©ic_hash_m≠_föd
(
°©ic_hash_m≠_t
 
ht
,

150 c⁄° * 
key
,

151 ** 
vÆue
,

152 
°©ic_hash_node_t
* 
node
)

154 
hash_code
 = 
ht
->
	`hf
(
key
);

155 
hash_ödex
 = 
hash_code
 % 
ht
->
èbÀ_size
;

159 
°©ic_hash_node_t
 
hód
 =

160 &
ht
->
èbÀ_íåõs
[ 
hash_ödex
 ];

162 
°©ic_hash_node_t
 
cuº
 =

163 
	`°©ic_hash_node_gë_√xt
–
hód
 );

165  
cuº
 !
hód
 )

167 * 
node_key
 =

168 
	`°©ic_hash_node_gë_key
–
cuº
 );

170 i‡–!
ht
->
	`com∑øt‹
–
node_key
, 
key
 ) )

173 i‡–
vÆue
 !
NULL
 )

174 *
vÆue
 = 
	`°©ic_hash_node_gë_vÆue
–
cuº
 );

175 i‡–
node
 !
NULL
 )

176 *
node
 = 
cuº
;

181 
cuº
 = 
	`°©ic_hash_node_gë_√xt
( curr );

187 
	}
}

207 
	$°©ic_hash_m≠_ªmove
(
°©ic_hash_m≠_t
 
ht
,

208 c⁄° * 
key
,

209 ** 
vÆue
,

210 
°©ic_hash_node_t
* 
node
)

213 * 
íåy_vÆue
;

214 
°©ic_hash_node_t
 
íåy_node
;

215 i‡–!
	`°©ic_hash_m≠_föd
–
ht
, 
key
, &
íåy_vÆue
, &
íåy_node
 ) )

218 
	`°©ic_hash_m≠_cut
–
ht
, 
íåy_node
 );

220 i‡–
vÆue
 !
NULL
 )

221 *
vÆue
 = 
íåy_vÆue
;

223 i‡–
node
 !
NULL
 )

224 *
node
 = 
íåy_node
;

231 
	}
}

245 
	$°©ic_hash_m≠_cut
(
°©ic_hash_m≠_t
 
ht
, 
°©ic_hash_node_t
 
node
)

247 
ht
 = ht;

248 
	`°©ic_hash_node_cut
–
node
 );

249 
	}
}

268 
	$°©ic_hash_node_öô
(
°©ic_hash_node_t
 
node
, c⁄° * 
key
, c⁄° * 
vÆue
)

270 
node
->
√xt
 =Çode->
¥ev
 =Çode;

271 
node
->
key
 = key;

272 
node
->
vÆue
 = value;

273 
	}
}

283 * 
	$°©ic_hash_node_gë_key
(
°©ic_hash_node_t
 
node
)

285  (*)
node
->
key
;

286 
	}
}

296 * 
	$°©ic_hash_node_gë_vÆue
(
°©ic_hash_node_t
 
node
)

298  (*)
node
->
vÆue
;

299 
	}
}

310 
°©ic_hash_node_t
 
	$°©ic_hash_node_gë_√xt
(
°©ic_hash_node_t
 
node
)

312  
node
->
√xt
;

313 
	}
}

329 
	$°©ic_hash_node_ö£π_a·î
(
°©ic_hash_node_t
 
ö£π_a·î_this
,

330 
°©ic_hash_node_t
 
node_to_ö£π
)

333 
node_to_ö£π
->
√xt
 = 
ö£π_a·î_this
->next;

334 
node_to_ö£π
->
¥ev
 = 
ö£π_a·î_this
;

337 
ö£π_a·î_this
->
√xt
 = 
node_to_ö£π
;

338 
node_to_ö£π
->
√xt
->
¥ev
 =Çode_to_insert;

339 
	}
}

351 
	$°©ic_hash_node_cut
(
°©ic_hash_node_t
 
node
)

354 
node
->
√xt
->
¥ev
 =Çode->prev;

355 
node
->
¥ev
->
√xt
 =Çode->next;

358 
node
->
√xt
 =Çode->
¥ev
 =Çode;

359 
	}
}

	@src/util/static_list.cpp

45 
	~<°dlib.h
>

46 
	~"utû/°©ic_li°.h
"

47 
	~"utû/°©ic_li°_°ru˘.h
"

48 
	~"utû/°©ic_li°_node.h
"

60 
	$°©ic_li°_öô
(
°©ic_li°_t
 
li°
)

63 
	`°©ic_li°_node_öô_em±y
–&
li°
->
dummy
 );

64 
	}
}

80 
	$°©ic_li°_¥ïíd
(
°©ic_li°_t
 
li°
, * 
vÆue
, 
°©ic_li°_node_t
 
node
)

82 
	`°©ic_li°_node_öô
–
node
, 
vÆue
 );

83 
	`°©ic_li°_node_ö£π_a·î
–&
li°
->
dummy
, 
node
 );

84 
	}
}

100 
	$°©ic_li°_≠≥nd
(
°©ic_li°_t
 
li°
, * 
vÆue
, 
°©ic_li°_node_t
 
node
)

102 
	`°©ic_li°_node_öô
–
node
, 
vÆue
 );

103 
	`°©ic_li°_node_ö£π_bef‹e
–&
li°
->
dummy
, 
node
 );

104 
	}
}

119 
	$°©ic_li°_ªmove_node
(
°©ic_li°_t
 
li°
, 
°©ic_li°_node_t
 
node
)

122 
li°
 =Üist;

123 
	`°©ic_li°_node_cut
(
node
);

124 
	}
}

142 
	$°©ic_li°_ªmove_hód
(
°©ic_li°_t
 
li°
, ** 
ªsu…
, 
°©ic_li°_node_t
* 
node
)

145 i‡–
	`°©ic_li°_is_em±y
(
li°
) )

150 
°©ic_li°_node_t
 
ªmoved_node
 = 
	`°©ic_li°_node_gë_√xt
–&
li°
->
dummy
 );

151 
	`°©ic_li°_node_cut
–
ªmoved_node
 );

155 *
ªsu…
 = 
	`°©ic_li°_node_gë_∑ylﬂd
(
ªmoved_node
);

156 i‡–
node
 !
NULL
 )

157 *
node
 = 
ªmoved_node
;

160 
	}
}

178 
	$°©ic_li°_ªmove_èû
(
°©ic_li°_t
 
li°
, ** 
ªsu…
, 
°©ic_li°_node_t
* 
node
)

181 i‡–
	`°©ic_li°_is_em±y
(
li°
) )

186 
°©ic_li°_node_t
 
ªmoved_node
 = 
	`°©ic_li°_node_gë_¥ev
–&
li°
->
dummy
 );

187 
	`°©ic_li°_node_cut
–
ªmoved_node
 );

191 *
ªsu…
 = 
	`°©ic_li°_node_gë_∑ylﬂd
–
ªmoved_node
 );

192 i‡–
node
 !
NULL
 )

193 *
node
 = 
ªmoved_node
;

196 
	}
}

211 
	$°©ic_li°_gë_hód
(
°©ic_li°_t
 
li°
, ** 
ªsu…
)

214 i‡–
	`°©ic_li°_is_em±y
(
li°
) )

217 
°©ic_li°_node_t
 
node
 = 
	`°©ic_li°_node_gë_√xt
–&
li°
->
dummy
 );

218 *
ªsu…
 = 
	`°©ic_li°_node_gë_∑ylﬂd
(
node
);

221 
	}
}

236 
	$°©ic_li°_gë_èû
(
°©ic_li°_t
 
li°
, ** 
ªsu…
)

239 i‡–
	`°©ic_li°_is_em±y
(
li°
) )

242 
°©ic_li°_node_t
 
node
 = 
	`°©ic_li°_node_gë_¥ev
–&
li°
->
dummy
 );

243 *
ªsu…
 = 
	`°©ic_li°_node_gë_∑ylﬂd
(
node
);

246 
	}
}

260 
	$°©ic_li°_is_em±y
(
°©ic_li°_t
 
li°
)

263  
	`°©ic_li°_node_is_sögÀt⁄
–&
li°
->
dummy
 );

264 
	}
}

284 
°©ic_li°_m≠
(
°©ic_li°_t
 
li°
,

285 * (*
m≠
) (*,*),

286 * 
m≠_°©e
)

290 
°©ic_li°_node_t
 
	gcuº
 = 
°©ic_li°_node_gë_√xt
–&
li°
->
dummy
 );

293  
	gcuº
 !&
li°
->
dummy
 )

296 * 
∑ylﬂd
 = 
°©ic_li°_node_gë_∑ylﬂd
(
cuº
);

299 * 
	gupd©ed_∑ylﬂd
 = 
m≠
(
∑ylﬂd
, 
m≠_°©e
);

300 
°©ic_li°_node_£t_∑ylﬂd
(
cuº
, 
upd©ed_∑ylﬂd
);

303 
	gcuº
 = 
°©ic_li°_node_gë_√xt
(
cuº
);

324 
°©ic_li°_m≠_ªvî£
(
°©ic_li°_t
 
li°
,

325 * (*
m≠
) (*,*),

326 * 
m≠_°©e
)

330 
°©ic_li°_node_t
 
	gcuº
 = 
°©ic_li°_node_gë_¥ev
–&
li°
->
dummy
 );

333  
	gcuº
 !&
li°
->
dummy
 )

336 * 
∑ylﬂd
 = 
°©ic_li°_node_gë_∑ylﬂd
(
cuº
);

339 * 
	gupd©ed_∑ylﬂd
 = 
m≠
(
∑ylﬂd
, 
m≠_°©e
);

340 
°©ic_li°_node_£t_∑ylﬂd
(
cuº
, 
upd©ed_∑ylﬂd
);

343 
	gcuº
 = 
°©ic_li°_node_gë_¥ev
(
cuº
);

368 
°©ic_li°_¥o˚ss
(
°©ic_li°_t
 
li°
,

369 (*
¥o˚ss
) (*,*),

370 * 
¥o˚ssög_°©e
)

374 
°©ic_li°_node_t
 
cuº
 = 
	`°©ic_li°_node_gë_√xt
–&
li°
->
dummy
 );

377  
cuº
 !&
li°
->
dummy
 )

380 * 
∑ylﬂd
 = 
	`°©ic_li°_node_gë_∑ylﬂd
(
cuº
);

383 
kìp_goög
 = 
	`¥o˚ss
(
∑ylﬂd
, 
¥o˚ssög_°©e
);

384 i‡–!
kìp_goög
 ) ;

387 
cuº
 = 
	`°©ic_li°_node_gë_√xt
(curr);

389 
	}
}

409 
°©ic_li°_¥o˚ss_ªvî£
(
°©ic_li°_t
 
li°
,

410 (*
¥o˚ss
) (*,*),

411 * 
¥o˚ssög_°©e
)

415 
°©ic_li°_node_t
 
cuº
 = 
	`°©ic_li°_node_gë_¥ev
–&
li°
->
dummy
 );

418  
cuº
 !&
li°
->
dummy
 )

421 * 
∑ylﬂd
 = 
	`°©ic_li°_node_gë_∑ylﬂd
(
cuº
);

424 
kìp_goög
 = 
	`¥o˚ss
(
∑ylﬂd
, 
¥o˚ssög_°©e
);

425 i‡–!
kìp_goög
 ) ;

428 
cuº
 = 
	`°©ic_li°_node_gë_¥ev
(curr);

430 
	}
}

	@src/util/static_list_node.cpp

41 
	~<°dlib.h
>

42 
	~"utû/°©ic_li°_node.h
"

43 
	~"utû/°©ic_li°_node_°ru˘.h
"

57 
	$°©ic_li°_node_öô_em±y
(
°©ic_li°_node_t
 
node
)

59 
node
->
√xt
 =Çode->
¥ev
 =Çode;

60 
node
->
∑ylﬂd
 = 
NULL
;

61 
	}
}

76 
	$°©ic_li°_node_öô
(
°©ic_li°_node_t
 
node
, * 
∑ylﬂd
)

78 
	`°©ic_li°_node_öô_em±y
(
node
);

79 
node
->
∑ylﬂd
 =Öayload;

80 
	}
}

92 * 
	$°©ic_li°_node_gë_∑ylﬂd
(
°©ic_li°_node_t
 
node
)

94  
node
->
∑ylﬂd
;

95 
	}
}

108 
°©ic_li°_node_t
 
	$°©ic_li°_node_gë_¥ev
(
°©ic_li°_node_t
 
node
)

110  
node
->
¥ev
;

111 
	}
}

124 
°©ic_li°_node_t
 
	$°©ic_li°_node_gë_√xt
(
°©ic_li°_node_t
 
node
)

126  
node
->
√xt
;

127 
	}
}

141 
	$°©ic_li°_node_£t_∑ylﬂd
(
°©ic_li°_node_t
 
node
, * 
∑ylﬂd
)

143 
node
->
∑ylﬂd
 =Öayload;

144 
	}
}

162 
	$°©ic_li°_node_ö£π_a·î
(
°©ic_li°_node_t
 
ö£π_a·î_this
,

163 
°©ic_li°_node_t
 
node_to_ö£π
)

166 
node_to_ö£π
->
√xt
 = 
ö£π_a·î_this
->next;

167 
node_to_ö£π
->
¥ev
 = 
ö£π_a·î_this
;

170 
ö£π_a·î_this
->
√xt
 = 
node_to_ö£π
;

171 
node_to_ö£π
->
√xt
->
¥ev
 =Çode_to_insert;

172 
	}
}

190 
	$°©ic_li°_node_ö£π_bef‹e
(
°©ic_li°_node_t
 
ö£π_bef‹e_this
,

191 
°©ic_li°_node_t
 
node_to_ö£π
)

194 
node_to_ö£π
->
¥ev
 = 
ö£π_bef‹e_this
->prev;

195 
node_to_ö£π
->
√xt
 = 
ö£π_bef‹e_this
;

198 
ö£π_bef‹e_this
->
¥ev
 = 
node_to_ö£π
;

199 
node_to_ö£π
->
¥ev
->
√xt
 =Çode_to_insert;

200 
	}
}

215 
	$°©ic_li°_node_is_sögÀt⁄
(
°©ic_li°_node_t
 
node
)

217  
node
->
√xt
 ==Çode;

218 
	}
}

232 
	$°©ic_li°_node_cut
(
°©ic_li°_node_t
 
node
)

235 
node
->
√xt
->
¥ev
 =Çode->prev;

236 
node
->
¥ev
->
√xt
 =Çode->next;

239 
node
->
√xt
 =Çode->
¥ev
 =Çode;

240 
	}
}

	@src/util/stl_pool.cpp

33 
	~"utû/°l_poﬁ.h
"

34 
	~"utû/åa˚.h
"

37 
	gPoﬁ
::
	$Poﬁ
–
size_t
 
gønuœrôy
, size_à
size
 )

38 : 
	`m_gønuœrôy
–
gønuœrôy
 ), 
	`m_size
–
size
 ), 
	`m_u£d
–0 ), 
	$m_ovîÊow
( 0 )

40 if–
m_size
 > 0 )

42 
m_°‹age
 = 
√w
 [
m_size
*
gønuœrôy
];

43 
m_¶Ÿs
 = 
√w
 *[
m_size
];

45  
size_t
 
i
 = 0; i < 
m_size
; ++i )

46 
m_¶Ÿs
[
i
] = 
ªöãΩªt_ˇ°
<*>–
m_°‹age
.
	`gë
(Ë+ i*
gønuœrôy
 );

48 
	}
}

50 
	gPoﬁ
::~
	$Poﬁ
()

53 
i
=0; i<3; ++i) {

54 i‡((
m_u£d
 =0Ë&& (
m_ovîÊow
 == 0)) {

57 
°d
::
cout
 << "~" << std::
ídl
;

58 
	`¶ìp
(1);

60 
	`as£π
–
m_u£d
 =0 && 
m_ovîÊow
 == 0 && "can't destroyáÖool with outstandingállocations" );

62 
	}
}

64 * 
	gPoﬁ
::
	$AŒoˇã
()

66 if–
m_u£d
 < 
m_size
 )

68  
m_¶Ÿs
[
m_u£d
++];

72 ++
m_ovîÊow
;

73 
	`TRACE
–
TRACE_TRX_FLOW
, "OvîÊow (%d)\n", 
m_ovîÊow
);

74  
ªöãΩªt_ˇ°
<*>–
√w
 [
m_gønuœrôy
] );

76 
	}
}

78 
	gPoﬁ
::
	$DóŒoˇã
–* 
block
 )

80 
	`as£π
–
block
 && "nullÖointerárgument" );

81 if–
	`IsFromPoﬁ
–
block
 ) )

83 
	`as£π
–
m_u£d
 > 0 && "internalÉrror" );

84 
m_¶Ÿs
[--
m_u£d
] = 
block
;

88 
	`as£π
–
m_ovîÊow
 > 0 && "internalÉrror" );

89 
dñëe
[] 
ªöãΩªt_ˇ°
<*>–
block
 );

90 --
m_ovîÊow
;

92 
	}
}

	@src/util/store_string.cpp

31 
	~"utû/°‹e_°rög.h
"

33 
	~"k_deföes.h
"

42 
	$°‹e_°rög
(* 
de°
, * 
§c
) {

43 
Àn
 = 
	`°æí
(
§c
);

44 
	`°∫˝y
(
de°
, 
§c
, 
Àn
);

45 
de°
[
Àn
] = '\0';

46 
	}
}

55 
	$°‹e_°rög
(* 
de°
, c⁄° * 
§c
) {

56 
Àn
 = 
	`°æí
(
§c
);

57 
	`°∫˝y
(
de°
, 
§c
, 
Àn
);

58 
de°
[
Àn
] = '\0';

59 
	}
}

	@src/util/sunos_procstat.cpp

33 
	~"utû/sunos_¥oc°©.h
"

34 
	~"utû.h
"

36 
	gsunos_¥ocm⁄ô‹_t
::
	$sunos_¥ocm⁄ô‹_t
(
sh‹e
::
Sh‹eEnv
* 
ív
,

37 c⁄° 
öãrvÆ_£c
)

38 : 
	`¥ocm⁄ô‹_t
("sunos-m⁄",
ív
,
öãrvÆ_£c
),

39 
	`_pkc
(
NULL
), 
	`_íåõs_sz
(0),

40 
	`_fú°_time
(
åue
), 
	`_œ°_mósuªmít
(1), 
	`_√w_mósuªmít
(0),

41 
	`_öu£
(0), 
	`_k£
(
NULL
), 
	`_kid
(0), 
	$_kn
(
NULL
)

43 
	`_£tup
(
öãrvÆ_£c
);

44 
	}
}

47 
	gsunos_¥ocm⁄ô‹_t
::~
	$sunos_¥ocm⁄ô‹_t
()

49 i‡(*&
_°©e
 !
CPS_NOTSET
) {

50 
	`k°©_˛o£
(
_pkc
);

52 
	}
}

57 
	gsunos_¥ocm⁄ô‹_t
::
	$°©_ª£t
()

59 
_¥cöfo
.
	`ª£t
();

60 
	}
}

62 
	gsunos_¥ocm⁄ô‹_t
::
	$gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
)

64  (*&
_avg_ußge
);

65 
	}
}

67 
	gsunos_¥ocm⁄ô‹_t
::
	$¥öt_avg_ußge
()

69 
au
 = *&
_avg_ußge
;

70 
íåõssz
 = 
_íåõs
.
	`size
();

71 
	`TRACE
–
TRACE_STATISTICS
,

73 
au
, 100*◊u/
íåõssz
));

74 
	}
}

76 
	gsunos_¥ocm⁄ô‹_t
::
	$¥öt_ext_°©s
()

78 
_¥cöfo
.
	`¥öt
();

79 
	}
}

81 
ul⁄g_t
 
	gsunos_¥ocm⁄ô‹_t
::
	$ioch¨s
()

83  (
_¥cöfo
.
	`ioch¨s
());

84 
	}
}

86 
uöt
 
	gsunos_¥ocm⁄ô‹_t
::
	$gë_num_of_˝us
()

88  (
_¥cöfo
.
	`gë_num_of_˝us
());

89 
	}
}

91 
˝u_lﬂd_vÆues_t
 
	gsunos_¥ocm⁄ô‹_t
::
	$gë_lﬂd
()

93  (
_¥cöfo
.
	`gë_lﬂd
());

94 
	}
}

99 
	gsunos_¥ocm⁄ô‹_t
::
	$_£tup
(c⁄° 
öãrvÆ_£c
)

101 
¥ocm⁄ô‹_t
::
	`_£tup
(
öãrvÆ_£c
);

103 
_íåõs
.
	`˛ór
();

104 
_íåõs
.
	`ª£rve
(64);

112 
_pkc
 = 
	`k°©_›í
();

113 
k°©_t
* 
k•
=
_pkc
->
kc_chaö
; k•; k•=k•->
ks_√xt
) {

114 if(
	`°rcmp
(
k•
->
ks_moduÀ
, "˝u"Ë=0 && såcmp(k•->
ks_«me
, "sys") == 0) {

115 
kid
 = 
	`k°©_ªad
(
_pkc
, 
k•
, 0);

116 
k°©_«med_t
* 
kn
 = (k°©_«med_t*Ë
k•
->
ks_d©a
;

117 
i
=0; i < 
k•
->
ks_nd©a
; i++) {

118 if(
	`°rcmp
(
kn
[
i
].
«me
, "cpu_nsec_idle") == 0) {

119 
k°©_íåy
 
íåy
 = {
k•
, 
i
, {{k•->
ks_¢≠time
, 
kn
->
vÆue
.
ui64
}, {0, 0}}};

120 
_íåõs
.
	`push_back
(
íåy
);

126 
	}
}

130 
w_rc_t
 
	gsunos_¥ocm⁄ô‹_t
::
	$ˇ£_£tup
()

132 
_fú°_time
 = 
åue
;

133 
_œ°_mósuªmít
 = 1;

134 
_√w_mósuªmít
 = 0;

135 
_tŸÆs
.
	`£t
(0,0);

136 
_m
.
	`£t
(0,0);

137 
_öu£
 = 0;

138 
_k£
 = 
NULL
;

139 
_kid
 = 0;

140 
_kn
 = 
NULL
;

142 
_íåõs_sz
 = 
_íåõs
.
	`size
();

143 
	`as£π
 (
_pkc
);

145  (
RCOK
);

146 
	}
}

148 
w_rc_t
 
	gsunos_¥ocm⁄ô‹_t
::
	$ˇ£_tick
()

150 
_√w_mósuªmít
 = 1 - 
_œ°_mósuªmít
;

153 
_tŸÆs
.
	`˛ór
();

155 
i
=0; i<
_íåõs_sz
; i++) {

156 
_k£
 = &
_íåõs
[
i
];

157 
_kid
 = 
	`k°©_ªad
(
_pkc
, 
_k£
->
k•
, 0);

158 
_kn
 = ((
k°©_«med_t
*Ë
_k£
->
k•
->
ks_d©a
Ë+ _k£->
off£t
;

159 
_m
.
	`£t
(
_k£
->
k•
->
ks_¢≠time
, 
_kn
->
vÆue
.
ui64
);

160 
_k£
->
mósuªd
[
_√w_mósuªmít
] = 
_m
;

161 
_m
 -
_k£
->
mósuªd
[
_œ°_mósuªmít
];

162 
_tŸÆs
 +
_m
;

166 i‡((!
_fú°_time
Ë&& (*&
_°©e
==
CPS_RUNNING
)) {

167 
_öu£
 = 
_íåõs_sz
 - _íåõs_sz*
_tŸÆs
.
˝u_n£c_idÀ
/_tŸÆs.
time°amp
;

170 ++
_num_ußge_ªadögs
;

171 
_tŸÆ_ußge
 +
_öu£
;

172 
_avg_ußge
 = 
_tŸÆ_ußge
/
_num_ußge_ªadögs
;

175 
_fú°_time
 = 
Ál£
;

176 
_œ°_mósuªmít
 = 
_√w_mósuªmít
;

178  (
RCOK
);

179 
	}
}

182 
w_rc_t
 
	gsunos_¥ocm⁄ô‹_t
::
	$ˇ£_ª£t
()

184 
_fú°_time
=
åue
;

185 
_œ°_mósuªmít
 = 1;

186  (
RCOK
);

187 
	}
}

	@src/util/tcp.cpp

34 
	~"utû/t˝.h
"

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/sockë.h
>

40 
	~<√töë/ö.h
>

41 
	~<√tdb.h
>

46 c⁄° 
	gLISTENQ
 = 1024;

47 c⁄° 
	gGETHOSTBYNAME_R_INITIAL_BUFFER_SIZE
 = 16;

48 c⁄° 
	gGETHOSTBYNAME_R_MAX_BUFFER_SIZE
 = 128;

62 
	$›í_li°ífd
(
p‹t
)

64 
li°ífd
, 
›tvÆ
=1;

65 
sockaddr_ö
 
£rvîaddr
;

68 i‡((
li°ífd
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0) {

73 i‡(
	`£tsock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

74 (c⁄° *)&
›tvÆ
 , ()) < 0) {

81 
	`mem£t
((*Ë&
£rvîaddr
, 0, (serveraddr));

82 
£rvîaddr
.
sö_Ámûy
 = 
PF_INET
;

83 
£rvîaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

84 
£rvîaddr
.
sö_p‹t
 = 
	`ht⁄s
(()
p‹t
);

86 i‡(
	`böd
(
li°ífd
, (
sockaddr
 *)&
£rvîaddr
, (serveraddr)) < 0) {

91 i‡(
	`li°í
(
li°ífd
, 
LISTENQ
) < 0) {

95  (
li°ífd
);

96 
	}
}

113 
	$›í_˛õ¡fd
(c⁄° * 
ho°«me
, 
p‹t
)

115 
˛õ¡fd
;

116 
ho°ít
* 
hp
;

117 
sockaddr_ö
 
£rvîaddr
;

120 i‡((
˛õ¡fd
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0) {

126 i‡((
hp
 = 
	`gëho°by«me
(
ho°«me
)Ë=
NULL
) {

130 
	`mem£t
((*Ë&
£rvîaddr
, 0, (serveraddr));

131 
£rvîaddr
.
sö_Ámûy
 = 
PF_INET
;

132 
	`mem˝y
((*)&
£rvîaddr
.
sö_addr
.
s_addr
,

133 (*)
hp
->
h_addr
, hp->
h_Àngth
);

134 
£rvîaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

137 i‡(
	`c⁄√˘
(
˛õ¡fd
, (
sockaddr
 *Ë&
£rvîaddr
, (serveraddr)) < 0) {

141  (
˛õ¡fd
);

142 
	}
}

	@src/util/thread.cpp

24 
	~"utû/thªad.h
"

25 
	~<sys/ty≥s.h
>

26 
	~<sys/°©.h
>

27 
	~<sys/time.h
>

28 
	~<f˙é.h
>

30 #i‚de‡
_GNU_SOURCE


31 
	#_GNU_SOURCE


	)

34 
	~"k_deföes.h
"

36 
	~<uni°d.h
>

39 #unde‡
DISABLE_THREAD_POOL


44 
	sthªad_¨gs
 {

45 
thªad_t
* 
	mt
;

46 
thªad_poﬁ
* 
	mp
;

47 
thªad_¨gs
(
thªad_t
* 
thªad
, 
thªad_poﬁ
* 
poﬁ
)

48 : 
t
(
thªad
), 
p
(
poﬁ
)

54 ˛as†
	croŸ_thªad_t
 : 
public
 
thªad_t


56 
public
:

61 
	$roŸ_thªad_t
(c⁄° 
c_°r
 &
«me
)

62 : 
	$thªad_t
(
«me
)

66 
vútuÆ
 
	$w‹k
() {

68 
	`as£π
(
Ál£
);

69 
	}
}

76 "C" 
thªad_de°roy
(* 
thªad_obje˘
);

77 "C" * 
°¨t_thªad
(*);

78 
£tup_thªad
(
thªad_¨gs
* 
¨gs
);

84 
__thªad
 
thªad_t
* 
	gTHREAD_KEY_SELF
;

85 
__thªad
 
thªad_poﬁ
* 
	gTHREAD_POOL
;

87 
thªad_poﬁ
 
deÁu…_thªad_poﬁ
(1<<30);

104 
	gthªad_t
::
	$thªad_t
(c⁄° 
c_°r
 &
«me
)

105 #ifde‡
USE_SMTHREAD_AS_BASE


106 : 
	`smthªad_t
(
t_ªguœr
, 
«me
.
	`d©a
()),

107 
	`_thªad_«me
(
«me
), 
	`_µoﬁ
(
NULL
), 
	$_dñëe_me
(
åue
)

109 : 
	`_thªad_«me
(
«me
), 
	$_dñëe_me
(
åue
)

113 
	}
}

116 #ifde‡
USE_SMTHREAD_AS_BASE


130 
	gthªad_t
::
	$run
()

132 
	`£tu±hr
();

134 
thªad_t
* 
thªad
 = 
THREAD_KEY_SELF
;

135 
thªad_poﬁ
* 
poﬁ
 = 
THREAD_POOL
;

136 
	`as£π
 (
poﬁ
);

137 
poﬁ
->
	`°¨t
();

138 
thªad
->
	`w‹k
();

139 
poﬁ
->
	`°›
();

140 
	}
}

143 
	gthªad_t
::
	$£tu±hr
()

145 if(!
_µoﬁ
)

146 
_µoﬁ
 = &
deÁu…_thªad_poﬁ
;

149 
	`as£π
 (
_µoﬁ
);

153 
THREAD_KEY_SELF
 = 
this
;

154 
THREAD_POOL
 = 
_µoﬁ
;

155 
	}
}

165 
	$thªad_öô
()

167 
thªad_¨gs
 
	`¨gs
(
√w
 
	`roŸ_thªad_t
(
	`c_°r
("roŸ-thªad")), 
NULL
);

168 
	`£tup_thªad
(&
¨gs
);

169 
	}
}

173 
thªad_t
* 
	$thªad_gë_£lf
()

178  
THREAD_KEY_SELF
;

179 
	}
}

196 
±hªad_t
 
	$thªad_¸óã
(
thªad_t
* 
t
, 
thªad_poﬁ
* 
poﬁ
)

198 
±hªad_t
 
tid
;

199 
îr
;

200 
±hªad_©å_t
 
∑âr
;

203 
îr
 = 
	`±hªad_©å_öô
–&
∑âr
 );

204 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

206 
îr
 = 
	`±hªad_©å_£tsc›e
–&
∑âr
, 
PTHREAD_SCOPE_SYSTEM
 );

207 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

209 
îr
 = 
	`±hªad_¸óã
(&
tid
, &
∑âr
, 
°¨t_thªad
, 
√w
 
	`thªad_¨gs
(
t
, 
poﬁ
));

210 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

212  (
tid
);

213 
	}
}

217 
±hªad_muãx_t
 
	$thªad_muãx_¸óã
(c⁄° 
±hªad_muãx©å_t
* 
©å
)

219 
±hªad_muãx©å_t
 
muãx_©å
;

220 c⁄° 
±hªad_muãx©å_t
* 
±r_muãx_©å
;

221 
îr
;

223 i‡(
©å
 =
NULL
)

226 
îr
 = 
	`±hªad_muãx©å_öô
(&
muãx_©å
);

227 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

229 
îr
 = 
	`±hªad_muãx©å_£ây≥
(&
muãx_©å
, 
PTHREAD_MUTEX_ERRORCHECK
);

230 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

232 
îr
 = 
	`±hªad_muãx©å_£çsh¨ed
(&
muãx_©å
, 
PTHREAD_PROCESS_PRIVATE
);

233 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

235 
±r_muãx_©å
 = &
muãx_©å
;

237 (Ë
muãx_©å
;

238 
±r_muãx_©å
 = 
©å
;

242 
±r_muãx_©å
 = 
©å
;

245 
±hªad_muãx_t
 
muãx
;

246 
îr
 = 
	`±hªad_muãx_öô
(&
muãx
, 
±r_muãx_©å
);

247 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

248  
muãx
;

249 
	}
}

253 
	$thªad_muãx_lock
(
±hªad_muãx_t
 &
muãx
)

255 
i
=0; i < 3; i++) {

256 
îr
 = 
	`±hªad_muãx_åylock
(&
muãx
);

257 if(!
îr
)

259 if(
îr
 !
EBUSY
)

260 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

263 
thªad_poﬁ
* 
poﬁ
 = 
THREAD_POOL
;

264 
	`as£π
 (
poﬁ
);

265 
poﬁ
->
	`°›
();

266 
îr
 = 
	`±hªad_muãx_lock
(&
muãx
);

267 
poﬁ
->
	`°¨t
();

268 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

269 
	}
}

273 
	$thªad_muãx_u∆ock
(
±hªad_muãx_t
 &
muãx
)

275 
îr
 = 
	`±hªad_muãx_u∆ock
(&
muãx
);

276 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

277 
	}
}

281 
	$thªad_muãx_de°roy
(
±hªad_muãx_t
 &
muãx
)

283 
îr
 = 
	`±hªad_muãx_de°roy
(&
muãx
);

284 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

285 
	}
}

289 
±hªad_c⁄d_t
 
	$thªad_c⁄d_¸óã
(c⁄° 
±hªad_c⁄d©å_t
* 
©å
)

291 
±hªad_c⁄d_t
 
c⁄d
;

292 
îr
 = 
	`±hªad_c⁄d_öô
(&
c⁄d
, 
©å
);

293 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

294  
c⁄d
;

295 
	}
}

299 
	$thªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 &
c⁄d
)

301 
îr
 = 
	`±hªad_c⁄d_de°roy
(&
c⁄d
);

302 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

303 
	}
}

307 
	$thªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 &
c⁄d
)

309 
îr
 = 
	`±hªad_c⁄d_sig«l
(&
c⁄d
);

310 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

311 
	}
}

315 
	$thªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 &
c⁄d
)

317 
îr
 = 
	`±hªad_c⁄d_brﬂdˇ°
(&
c⁄d
);

318 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

319 
	}
}

323 
	$thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
)

325 
thªad_poﬁ
* 
poﬁ
 = 
THREAD_POOL
;

326 
	`as£π
 (
poﬁ
);

327 
poﬁ
->
	`°›
();

328 
îr
 = 
	`±hªad_c⁄d_waô
(&
c⁄d
, &
muãx
);

329 
poﬁ
->
	`°¨t
();

330 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

331 
	}
}

333 
boﬁ
 
	$thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
,

334 
time•ec
 &
timeout
)

336 
thªad_poﬁ
* 
poﬁ
 = 
THREAD_POOL
;

337 
	`as£π
 (
poﬁ
);

338 
poﬁ
->
	`°›
();

339 
îr
 = 
	`±hªad_c⁄d_timedwaô
(&
c⁄d
, &
muãx
, &
timeout
);

340 
poﬁ
->
	`°¨t
();

342 
îr
) {

343 0:  
åue
;

344 
ETIMEDOUT
:  
Ál£
;

345 : 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

348 
	`uƒóchabÀ
();

349 
	}
}

351 
boﬁ
 
	$thªad_c⁄d_waô
(
±hªad_c⁄d_t
 &
c⁄d
, 
±hªad_muãx_t
 &
muãx
,

352 
timeout_ms
)

354 if(
timeout_ms
 > 0) {

355 
time•ec
 
timeout
;

356 
timevÆ
 
now
;

357 
	`gëtimeofday
(&
now
, 
NULL
);

358 if(
timeout_ms
 > 1000) {

359 
timeout
.
tv_£c
 = 
timeout_ms
 / 1000;

360 
timeout
.
tv_n£c
 = (
timeout_ms
 -Åimeout.
tv_£c
*1000)*1000;

363 
timeout
.
tv_£c
 = 0;

364 
timeout
.
tv_n£c
 = 
timeout_ms
*1000;

367  
	`thªad_c⁄d_waô
(
c⁄d
, 
muãx
, 
timeout
);

369 
	`thªad_c⁄d_waô
(
c⁄d
, 
muãx
);

370  
åue
;

371 
	}
}

388 * 
	$°¨t_thªad
(* 
thªad_obje˘
)

390 
thªad_¨gs
* 
¨gs
 = (thªad_¨gs*)
thªad_obje˘
;

391 
	`£tup_thªad
(
¨gs
);

392 
dñëe
 
¨gs
;

394 
thªad_t
* 
thªad
 = 
THREAD_KEY_SELF
;

395 
thªad_poﬁ
* 
poﬁ
 = 
THREAD_POOL
;

396 
	`as£π
 (
poﬁ
);

398 
poﬁ
->
	`°¨t
();

399 
thªad
->
	`w‹k
();

400 
poﬁ
->
	`°›
();

402 if(
thªad
->
	`dñëe_me
())

403 
dñëe
 
thªad
;

404  (
NULL
);

405 
	}
}

411 
	gthªad_poﬁ
::
	$°¨t
()

413 #i‚de‡
DISABLE_THREAD_POOL


414 
îr
 = 
	`±hªad_muãx_lock
(&
_lock
);

415 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

416 
_a˘ive
 =
_max_a˘ive
) {

417 
îr
 = 
	`±hªad_c⁄d_waô
(&
_c⁄d
, &
_lock
);

418 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

420 
	`as£π
(
_a˘ive
 < 
_max_a˘ive
);

421 
_a˘ive
++;

422 
îr
 = 
	`±hªad_muãx_u∆ock
(&
_lock
);

423 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

425 
	}
}

427 
	gthªad_poﬁ
::
	$°›
()

429 #i‚de‡
DISABLE_THREAD_POOL


430 
îr
 = 
	`±hªad_muãx_lock
(&
_lock
);

431 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

432 
_a˘ive
--;

433 
	`thªad_c⁄d_sig«l
(
_c⁄d
);

434 
îr
 = 
	`±hªad_muãx_u∆ock
(&
_lock
);

435 
	`THROW_IF
(
ThªadEx˚±i⁄
, 
îr
);

437 
	}
}

441 
	$£tup_thªad
(
thªad_¨gs
* 
¨gs
)

443 
thªad_t
* 
thªad
 = 
¨gs
->
t
;

444 
thªad_poﬁ
* 
poﬁ
 = 
¨gs
->
p
;

446 i‡(!
poﬁ
) {

447 
poﬁ
 = &
deÁu…_thªad_poﬁ
;

451 
	`as£π
 (
poﬁ
);

455 
THREAD_KEY_SELF
 = 
thªad
;

456 
THREAD_POOL
 = 
poﬁ
;

457 
	}
}

461 #ifde‡
USE_SMTHREAD_AS_BASE


477 
	$waô_f‹_°hªad_˛õ¡s
(
°hªad_t
** 
thªads
, 
num_thªad_ids
)

480 
i
 = 0; i < 
num_thªad_ids
; i++) {

483 
thªads
[
i
]->
	`joö
();

488 
	}
}

	@src/util/time_util.cpp

31 
	~"utû/time_utû.h
"

33 
	~<ˇs£π
>

35 
	~"k_deföes.h
"

48 
	$d©ï¨t
(c⁄°* 
°r
, c⁄° 
time_t
 *
±
)

50 
tm
 
tm_°ru˘
;

52 
	`loˇ…ime_r
(
±
, &
tm_°ru˘
);

54 if(
	`°rcmp
(
°r
, "yy") == 0) {

55  (
tm_°ru˘
.
tm_yór
 + 1900);

59 
	}
}

74 
time_t
 
	$°r_to_timë
(c⁄°* 
°r
)

77 
tm
 
time_°r
;

78 
cou¡
 = 
	`ssˇnf
(
°r
, "%d-%d-%d",

79 &
time_°r
.
tm_yór
, &time_°r.
tm_m⁄
, &time_°r.
tm_mday
);

80 
	`as£π
(
cou¡
 == 3);

81 
time_°r
.
tm_yór
 -= 1900;

82 
time_°r
.
tm_m⁄
--;

83 
time_°r
.
tm_hour
 = 0;

84 
time_°r
.
tm_mö
 = 0;

85 
time_°r
.
tm_£c
 = 0;

86 
time_°r
.
tm_isd°
 = -1;

88  
	`mktime
(&
time_°r
);

89 
	}
}

100 
	$timë_to_°r
(* 
d°
, 
time_t
 
time
)

102 
tm
 
©m
;

103 
	`loˇ…ime_r
(&
time
, &
©m
);

104 
	`•rötf
(
d°
, "%04d-%02d-%02d\n",

105 
©m
.
tm_yór
+1900,átm.
tm_m⁄
+1,átm.
tm_mday
);

106 
	}
}

123 
	#REFORMATION_DAY
 639787

	)

126 
	#MISSING_DAYS
 11

	)

129 
	#THURSDAY
 4

	)

132 
	#SATURDAY
 6

	)

146 c⁄° 
	gdays_ö_m⁄th
[12] = {

169 
time_t


170 
	$time_add_day
 (
time_t
 
time
, 
days
)

172 
tm
Åm;

174 
	`loˇ…ime_r
(&
time
, &
tm
);

175 
tm
.
tm_mday
 +
days
;

176 
tm
.
tm_isd°
 = -1;

177 
time_t
 
ˇÀnd¨_time
 = 
	`mktime
 (&
tm
);

179  
ˇÀnd¨_time
;

180 
	}
}

193 
time_t


194 
	$time_add_wìk
 (
time_t
 
time
, 
wìks
)

196  
	`time_add_day
 (
time
, 
wìks
 * 7);

197 
	}
}

210 
time_t


211 
	$time_add_m⁄th
 (
time_t
 
time
, 
m⁄ths
)

213 
tm
Åm;

215 
	`loˇ…ime_r
(&
time
, &
tm
);

216 
tm
.
tm_m⁄
 +
m⁄ths
;

217 
tm
.
tm_isd°
 = -1;

219  
	`mktime
(&
tm
);

220 
	}
}

233 
time_t


234 
	$time_add_yór
 (
time_t
 
time
, 
yórs
)

236 
tm
Åm;

238 
	`loˇ…ime_r
(&
time
, &
tm
);

239 
tm
.
tm_yór
 +
yórs
;

240 
tm
.
tm_isd°
 = -1;

242  
	`mktime
(&
tm
);

243 
	}
}

256 
time_t


257 
	$time_day_begö
 (
time_t
 
t
)

259 
tm
Åm;

261 
	`loˇ…ime_r
(&
t
, &
tm
);

262 
tm
.
tm_hour
 =Åm.
tm_mö
 =Åm.
tm_£c
 = 0;

263 
tm
.
tm_isd°
 = -1;

265  
	`mktime
 (&
tm
);

266 
	}
}

279 
time_t


280 
	$time_day_íd
 (
time_t
 
t
)

282 
tm
Åm;

284 
	`loˇ…ime_r
(&
t
, &
tm
);

285 
tm
.
tm_hour
 =Åm.
tm_mö
 =Åm.
tm_£c
 = 0;

286 
tm
.
tm_mday
++;

287 
tm
.
tm_isd°
 = -1;

289  
	`mktime
 (&
tm
);

290 
	}
}

	@src/util/tmpfile.cpp

32 
	~<°dlib.h
>

33 
	~"utû/tmpfûe.h
"

34 
	~"utû/ex˚±i⁄.h
"

35 
	~"utû/åa˚.h
"

36 
	~"utû/gu¨d.h
"

37 
	~<°dio.h
>

52 
FILE
* 
	$¸óã_tmp_fûe
(
c_°r
& 
«me
, c⁄° c_°r& 
¥efix
)

55 
mëa_ãm∂©e
[] = "tmp/%s.XXXXXX";

56 
Àn
 = (
mëa_ãm∂©e
Ë- 2 + 
	`°æí
(
¥efix
);

57 
¨øy_gu¨d_t
<> 
«me_ãm∂©e
 = 
√w
 [
Àn
 + 1];

58 
	`•rötf
(
«me_ãm∂©e
, 
mëa_ãm∂©e
, 
¥efix
.
	`d©a
());

59 
fd
 = 
	`mk°emp
(
«me_ãm∂©e
);

60 if(
fd
 < 0) {

61 
	`THROW3
(
FûeEx˚±i⁄
,

63 
	`î∫o_to_°r
().
	`d©a
(), (*Ë
«me_ãm∂©e
);

66 
	`TRACE
(
TRACE_TEMP_FILE
, "Cª©edÅem∞fûê%s\n", (*Ë
«me_ãm∂©e
);

69 
FILE
 *
fûe
 = 
	`fd›í
(
fd
, "w");

70 if(!
fûe
) {

71 
	`THROW3
(
FûeEx˚±i⁄
,

73 
	`î∫o_to_°r
().
	`d©a
(), (*Ë
«me_ãm∂©e
);

76 
«me
 = (*Ë
«me_ãm∂©e
;

77  
fûe
;

78 
	}
}

	@src/util/topinfo.cpp

34 
	~"utû/t›öfo.h
"

35 
	~"utû/åa˚.h
"

36 
	~<ˇs£π
>

38 
	gt›öfo_t
::
	$t›öfo_t
()

39 : 
	$_ªg_fs
(0)

41 
_c⁄f
 = 
	`glibt›_öô
();

42 
	`as£π
 (
_c⁄f
);

43 
	`TRACE
–
TRACE_DEBUG
, "NCPU=(%d), REALCPU=(%d)\n",

44 
_c⁄f
->
n˝u
, _c⁄f->
ªÆ_n˝u
);

47 
_mou¡_íåõs
 = 
	`glibt›_gë_mou¡li°
(&
_mou¡_li°
,1);

48 
uöt
 
i
=0; i< 
_mou¡_li°
.
numbî
; ++i) {

49 
	`TRACE
–
TRACE_DEBUG
, "%d: %d %s %s %s\n",

50 
i
, 
_mou¡_íåõs
[i].
dev
, _mou¡_íåõs[i].
dev«me
,

51 
_mou¡_íåõs
[
i
].
mou¡dú
, _mou¡_íåõs[i].
ty≥
);

53 
	}
}

55 
	gt›öfo_t
::~
	$t›öfo_t
()

57 
	}
}

61 
t›öfo_t
::
	$ª£t
()

63 
	`upd©e_˝u
();

64 
_ﬁd_˝u
 = 
_˝u
;

66 
	`upd©e_mem
();

67 
_ﬁd_mem
 = 
_mem
;

69 
	`upd©e_¥o˛i°
();

70 
_ﬁd_¥o˛i°
 = 
_¥o˛i°
;

71 
	}
}

75 
	gt›öfo_t
::
	$¥öt_°©s
()

80 
	}
}

90 
t›öfo_t
::
	$upd©e_˝u
()

92 
	`glibt›_gë_˝u
(&
_˝u
);

94 
	}
}

97 
	gt›öfo_t
::
	$¥öt_avg_ußge
()

99 
	`upd©e_˝u
();

101 
˝us
 = 
_c⁄f
->
n˝u
+1;

102 
tŸÆ
 = (Ë(
_˝u
.tŸÆ-
_ﬁd_˝u
.total);

103 
u£r
 = (Ë(
_˝u
.u£r-
_ﬁd_˝u
.user);

104 
sys
 = (Ë(
_˝u
.sys-
_ﬁd_˝u
.sys);

105 
idÀ
 = (Ë(
_˝u
.idÀ-
_ﬁd_˝u
.idle);

108 
	`TRACE
–
TRACE_STATISTICS
,

112 (
tŸÆ
-
idÀ
)*
˝us
/total, 100*(total-idle)/total,

113 
u£r
*
˝us
/
tŸÆ
, 100*user/total,

114 
sys
*
˝us
/
tŸÆ
, 100*sys/total);

117 
_ﬁd_˝u
 = 
_˝u
;

118 
	}
}

121 
	gt›öfo_t
::
	$gë_avg_ußge
(
boﬁ
 
bUpd©eRódög
)

123 
	`upd©e_˝u
();

125 
˝us
 = 
_c⁄f
->
n˝u
+1;

126 
tŸÆ
 = (Ë(
_˝u
.tŸÆ-
_ﬁd_˝u
.total);

127 
idÀ
 = (Ë(
_˝u
.idÀ-
_ﬁd_˝u
.idle);

130 i‡(
bUpd©eRódög
) {

131 
_ﬁd_˝u
 = 
_˝u
;

134 –(
tŸÆ
-
idÀ
)*
˝us
/total );

135 
	}
}

137 
uöt
 
	gt›öfo_t
::
	$gë_num_of_˝us
()

139 (
_c⁄f
->
n˝u
+1);

140 
	}
}

142 
˝u_lﬂd_vÆues_t
 
	gt›öfo_t
::
	$gë_lﬂd
()

144 
˝u_lﬂd_vÆues_t
 
lﬂd
;

145 
lﬂd
.
run_tm
 = (Ë(
_˝u
.
tŸÆ
-
_ﬁd_˝u
.total);

146 
lﬂd
.
waô_tm
 = 0.;

147  (
lﬂd
);

148 
	}
}

157 
	gt›öfo_t
::
	$upd©e_mem
()

159 
	`glibt›_gë_mem
(&
_mem
);

161 
	}
}

164 c⁄° 
	gMBYTE
 = 1024*1024;

166 
	gt›öfo_t
::
	$¥öt_mem
()

168 
	`TRACE
–
TRACE_STATISTICS
, "MEMORY INFO:\n:" );

169 
	`TRACE
–
TRACE_STATISTICS
, "Memory Total : %ld MB\n" ,

170 (
ul⁄g
)
_mem
.
tŸÆ
/
MBYTE
);

171 
	`TRACE
–
TRACE_STATISTICS
, "Memory Used : %ld MB\n" ,

172 (
ul⁄g
)
_mem
.
u£d
/
MBYTE
);

173 
	`TRACE
–
TRACE_STATISTICS
, "Memory Free : %ld MB\n" ,

174 (
ul⁄g
)
_mem
.
‰ì
/
MBYTE
);

175 
	`TRACE
–
TRACE_STATISTICS
, "Memory Buffered: %ld MB\n" ,

176 (
ul⁄g
)
_mem
.
buf„r
/
MBYTE
);

177 
	`TRACE
–
TRACE_STATISTICS
, "Memory Cached : %ld MB\n" ,

178 (
ul⁄g
)
_mem
.
ˇched
/
MBYTE
);

179 
	`TRACE
–
TRACE_STATISTICS
, "Memory User : %ld MB\n" ,

180 (
ul⁄g
)
_mem
.
u£r
/
MBYTE
);

181 
	`TRACE
–
TRACE_STATISTICS
, "Memory Locked : %ld MB\n" ,

182 (
ul⁄g
)
_mem
.
locked
/
MBYTE
);

183 
	}
}

194 
	gt›öfo_t
::
	$upd©e_¥o˛i°
()

196 
which
 = 0;

197 
¨g
 = 0;

198 
	`glibt›_gë_¥o˛i°
(&
_¥o˛i°
,
which
,
¨g
);

200 
	}
}

203 
	gt›öfo_t
::
	$¥öt_¥o˛i°
()

205 
	`TRACE
–
TRACE_STATISTICS
, "PROCLIST INFO:\n:" );

206 
	`TRACE
–
TRACE_STATISTICS
, "Numbî: %ld\n" , (
ul⁄g
)
_¥o˛i°
.
numbî
);

207 
	`TRACE
–
TRACE_STATISTICS
, "TŸÆ : %ld\n" , (
ul⁄g
)
_¥o˛i°
.
tŸÆ
);

208 
	`TRACE
–
TRACE_STATISTICS
, "Sizê : %ld\n" , (
ul⁄g
)
_¥o˛i°
.
size
);

209 
	}
}

218 
	gt›öfo_t
::
	$ªgi°î_fs
(c⁄° 
°rög
& 
mou¡∑th
)

221 
mou¡_ô
 
mô
 = 
_v_ªg_mou¡
.
	`begö
();

222 
mô
 !
_v_ªg_mou¡
.
	`íd
(); ++mit)

224 i‡(*
mô
 =
mou¡∑th
) {

225 
	`TRACE
–
TRACE_ALWAYS
,

227 (*
mô
).
	`c_°r
(), 
mou¡∑th
.c_str());

233 
	`TRACE
–
TRACE_ALWAYS
, "Registering (%s) for monitoring\n",

234 
mou¡∑th
.
	`c_°r
());

235 
_v_ªg_mou¡
.
	`push_back
(
mou¡∑th
);

236 
glibt›_fsußge
 
afsußge
;

237 
	`glibt›_gë_fsußge
(&
afsußge
,
mou¡∑th
.
	`c_°r
());

238 
_v_fs
.
	`push_back
(
afsußge
);

239 
_v_ﬁd_fs
.
	`push_back
(
afsußge
);

241 ++
_ªg_fs
;

244 
	}
}

246 
	gt›öfo_t
::
	$upd©e_fs
()

248 
glibt›_fsußge
 
afsußge
;

249 
°rög
 
mou¡
;

250 
i
 = 0;

253 
mou¡_ô
 
mô
 = 
_v_ªg_mou¡
.
	`begö
();

254 
mô
 !
_v_ªg_mou¡
.
	`íd
(); ++mit)

256 
mou¡
 = *
mô
;

257 
	`glibt›_gë_fsußge
(&
afsußge
,
mou¡
.
	`c_°r
());

258 
_v_fs
[
i
++] = 
afsußge
;

262 
	}
}

265 
	gt›öfo_t
::
	$¥öt_fs
(c⁄° 
dñay
)

268 
	`as£π
 ( 
_v_fs
.
	`size
(Ë=
_v_ﬁd_fs
.size());

269 
	`as£π
 ( 
_ªg_fs
 =
_v_fs
.
	`size
());

271 
	`upd©e_fs
();

273 
glibt›_fsußge
 
afsußge
, 
ﬁdfsußge
;

274 
guöt32
 
bsz
;

275 
guöt64
 
bªad
, 
bwrôe
;

278 
uöt
 
i
=0; i<
_ªg_fs
; ++i) {

280 
afsußge
 = 
_v_fs
[
i
];

281 
ﬁdfsußge
 = 
_v_ﬁd_fs
[
i
];

282 
bsz
 = 
afsußge
.
block_size
;

283 
bªad
 = 
afsußge
.
ªad
 - 
ﬁdfsußge
.read;

284 
bwrôe
 = 
afsußge
.
wrôe
 - 
ﬁdfsußge
.write;

286 
	`TRACE
–
TRACE_STATISTICS
, "Mount : %s\tBlockSZ: %d\n",

287 
_v_ªg_mou¡
[
i
].
	`c_°r
(), 
bsz
);

288 
	`TRACE
–
TRACE_STATISTICS
, "Read : %d (%.2fMB/sec)\n" ,

289 
bªad
, ()(
bsz
*bªad)/()(
dñay
*1048576));

290 
	`TRACE
–
TRACE_STATISTICS
, "Write : %d (%.2fMB/sec)\n" ,

291 
bwrôe
, ()(
bsz
*bwrôe)/()(
dñay
*1048576));

297 
	`as£π
 (
_v_fs
.
	`size
(Ë=
_v_ﬁd_fs
.size());

298 
i
 = 0;

299 
sz
 = 
_v_fs
.
	`size
();

301 
i
=0;i<
sz
;++i) {

302 
_v_ﬁd_fs
[
i
] = 
_v_fs
[i];

304 
	}
}

307 
ul⁄g_t
 
	gt›öfo_t
::
	$ioch¨s
()

311 
	}
}

	@src/util/trace.cpp

34 
	~"utû/åa˚.h
"

35 
	~"utû/sync.h
"

37 
	~"k_deföes.h
"

41 
	$åa˚_f‹˚_
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

42 * 
f‹m©
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 4, 5)));

58 
	#TRACE_FORCE
(
f‹m©
, 
ª°
...Ë
	`åa˚_f‹˚_
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, f‹m©, ##ª°)

	)

62 
	`åa˚_¥öt_±hªad
(
FILE
* 
out_°ªam
, 
±hªad_t
 
thªad
);

65 
	`åa˚_°ªam
(
FILE
* 
out_°ªam
,

66 c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

67 c⁄°* 
f‹m©
, 
va_li°
 
≠
);

76 
åa˚_cuºít_£âög
 = ~0u;

105 
åa˚r
::
	$›î©‹
()(
åa˚_ty≥
, c⁄°* 
f‹m©
, ...)

110 
do_åa˚
 = 
åa˚_cuºít_£âög
 & 
åa˚_ty≥
;

111 i‡–
do_åa˚
 == 0 )

115 
va_li°
 
≠
;

116 
	`va_°¨t
(
≠
, 
f‹m©
);

119 
	`åa˚_°ªam
(
°dout
, 
_fûe
, 
_löe
, 
_fun˘i⁄
, 
f‹m©
, 
≠
);

121 
	`va_íd
(
≠
);

123 
	}
}

133 
	$åa˚_£t
(
åa˚_ty≥_mask
) {

138 
åa˚_cuºít_£âög
 = 
åa˚_ty≥_mask
;

139 
	}
}

146 
	$åa˚_gë
() {

147  
åa˚_cuºít_£âög
;

148 
	}
}

154 c⁄° 
	gFORCE_BUFFER_SIZE
 = 256;

161 
	$åa˚_f‹˚_
(c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

162 * 
f‹m©
, ...)

165 
fun˘i⁄_«me_Àn
 = 
	`°æí
(
fun˘i⁄_«me
);

166 
size
 = 
FORCE_BUFFER_SIZE
 + 
fun˘i⁄_«me_Àn
;

167 
buf
[
size
];

170 
	`¢¥ötf
(
buf
, 
size
, "\nFORCE: %s:%d %s: ", 
fûíame
, 
löe_num
, 
fun˘i⁄_«me
);

171 
msg_off£t
 = 
	`°æí
(
buf
);

172 
msg_size
 = 
size
 - 
msg_off£t
;

173 * 
msg
 = &
buf
[ 
msg_off£t
 ];

176 
va_li°
 
≠
;

177 
	`va_°¨t
(
≠
, 
f‹m©
);

178 
	`v¢¥ötf
(
msg
, 
msg_size
, 
f‹m©
, 
≠
);

179 
	`Ârötf
(
°dîr
, 
buf
);

180 
	`va_íd
(
≠
);

181 
	}
}

196 
	$åa˚_¥öt_±hªad
(
FILE
* 
out_°ªam
, 
±hªad_t
 
thªad
)

202 #i‡
	`deföed
(
löux
Ë|| deföed(
__löux
)

203 #i‚de‡
__USE_GNU


204 
	#__USE_GNU


	)

209 
	`Ârötf
(
out_°ªam
, "%lu", 
thªad
);

216 #i‡
	`deföed
(
sun
Ë|| deföed(
__sun
)

217 #i‡
	`deföed
(
__SVR4
Ë|| deföed(
__svr4__
)

221 
	`Ârötf
(
out_°ªam
, "%u", 
thªad
);

227 
	}
}

234 
±hªad_muãx_t
 
	g°ªam_muãx
 = 
thªad_muãx_¸óã
();

265 
	$åa˚_°ªam
(
FILE
* 
out_°ªam
,

266 c⁄° * 
fûíame
, 
löe_num
, c⁄° * 
fun˘i⁄_«me
,

267 c⁄°* 
f‹m©
, 
va_li°
 
≠
)

278 
thªad_t
* 
this_thªad
 = 
	`thªad_gë_£lf
();

279 
¸ôiˇl_£˘i⁄_t
 
	`cs
(
°ªam_muãx
);

284 i‡–
this_thªad
 !
NULL
 )

285 
	`Ârötf
(
out_°ªam
, "%s", 
this_thªad
->
	`thªad_«me
().
	`d©a
());

287 
	`åa˚_¥öt_±hªad
(
out_°ªam
, 
	`±hªad_£lf
());

290 
	`Ârötf
(
out_°ªam
, ": %s:%d:%s: ", 
fûíame
, 
löe_num
, 
fun˘i⁄_«me
);

291 
	`vÂrötf
(
out_°ªam
, 
f‹m©
, 
≠
);

297 
	`fÊush
(
out_°ªam
);

298 
	}
}

	@src/util/w_strlcpy.cpp

47 
	~"utû/w_°æ˝y.h
"

54 
size_t


55 
	$w_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
siz
)

57 *
d
 = 
d°
;

58 c⁄° *
s
 = 
§c
;

59 
size_t
 
n
 = 
siz
;

62 i‡(
n
 != 0) {

63 --
n
 != 0) {

64 i‡((*
d
++ = *
s
++) == '\0')

70 i‡(
n
 == 0) {

71 i‡(
siz
 != 0)

72 *
d
 = '\0';

73 *
s
++)

77  (
s
 - 
§c
 - 1);

78 
	}
}

	@src/workload/ssb/dbgen/driver.cpp

4 
	#DECLARER


	)

5 
	#NO_FUNC
 ((*Ë()Ë
NULL


	)

6 
	#NO_LFUNC
 ((*Ë()Ë
NULL


	)

8 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

9 
	~<c°dlib
>

10 #i‡(
deföed
(
_POSIX_
)||!deföed(
WIN32
))

11 #i‚de‡
DOS


12 
	~<uni°d.h
>

13 
	~<gë›t.h
>

14 
	~<sys/waô.h
>

18 
	~<°dio.h
>

19 
	~<limôs.h
>

20 
	~<m©h.h
>

21 
	~<˘y≥.h
>

22 
	~<sig«l.h
>

23 
	~<°rög.h
>

24 
	~<î∫o.h
>

25 #ifde‡
HP


26 
	~<°rögs.h
>

28 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

29 
	~<¥o˚ss.h
>

30 #¥agm®
w¨nög
(
dißbÀ
:4201)

31 #¥agm®
w¨nög
(
dißbÀ
:4214)

32 #¥agm®
w¨nög
(
dißbÀ
:4514)

33 
	#WIN32_LEAN_AND_MEAN


	)

34 
	#NOATOM


	)

35 
	#NOGDICAPMASKS


	)

36 
	#NOMETAFILE


	)

37 
	#NOMINMAX


	)

38 
	#NOMSG


	)

39 
	#NOOPENFILE


	)

40 
	#NORASTEROPS


	)

41 
	#NOSCROLL


	)

42 
	#NOSOUND


	)

43 
	#NOSYSMETRICS


	)

44 
	#NOTEXTMETRIC


	)

45 
	#NOWH


	)

46 
	#NOCOMM


	)

47 
	#NOKANJI


	)

48 
	#NOMCX


	)

50 
	~"wödows.h
"

52 #¥agm®
w¨nög
(:4201)

53 #¥agm®
w¨nög
(:4214)

56 
	~"dss.h
"

57 
	~"ds°y≥s.h
"

58 
	~"bcd2.h
"

60 
›töd
, 
›ãº
;

61 *
›èrg
;

64 
	$ENTER_NAMESPACE
(
dbgíssb
)

69 
	`ußge
 ();

70 
	`¥ï_dúe˘
 (*);

71 
	`˛o£_dúe˘
 ();

72 
	`kûl_lﬂd
 ();

73 
	`∂ﬂd
 (
tbl
);

74 
	`gí_tbl
 (
äum
, 
°¨t
, 
cou¡
, 
upd_num
);

75 
	`¥_dønge
 (
tbl
, 
mö
, 
˙t
, 
num
);

76 
	`£t_fûes
 (
t
, 
∂ﬂd
);

77 
	`∑πül
 (, );

81 
row˙t
 = 0, 
mörow
 = 0, 
upd_num
 = 0;

82 
Êt_sˇÀ
;

83 #i‡(
	`deföed
(
WIN32
)&&!deföed(
_POSIX_
))

84 *
•awn_¨gs
[25];

114 #ifde‡
SSBM


115 
	`¥_cu°
 (* 
c
, 
mode
);

116 
	`¥_∑π
 (* 
p
, 
mode
);

117 
	`¥_suµ
 (* 
s
, 
mode
);

118 
	`¥_löe
 (* 
o
, 
mode
);

120 
	`¥_cu°
 (* 
c
, 
mode
);

121 
	`¥_löe
 (* 
o
, 
mode
);

122 
	`¥_‹dî
 (* 
o
, 
mode
);

123 
	`¥_∑π
 (* 
p
, 
mode
);

124 
	`¥_psuµ
 (* 
p
, 
mode
);

125 
	`¥_suµ
 (* 
s
, 
mode
);

126 
	`¥_‹dî_löe
 (* 
o
, 
mode
);

127 
	`¥_∑π_psuµ
 (* 
p
, 
mode
);

128 
	`¥_«ti⁄
 (* 
c
, 
mode
);

129 
	`¥_ªgi⁄
 (* 
c
, 
mode
);

135 #ifde‡
SSBM


136 
	`ld_cu°
 (* 
c
, 
mode
);

137 
	`ld_∑π
 (* 
p
, 
mode
);

138 
	`ld_suµ
 (* 
s
, 
mode
);

141 
	`ld_löe
 (* 
o
, 
mode
);

142 
	`ld_‹dî
 (* 
o
, 
mode
);

145 
	`ld_cu°
 (* 
c
, 
mode
);

146 
	`ld_löe
 (* 
o
, 
mode
);

147 
	`ld_‹dî
 (* 
o
, 
mode
);

148 
	`ld_∑π
 (* 
p
, 
mode
);

149 
	`ld_psuµ
 (* 
p
, 
mode
);

150 
	`ld_suµ
 (* 
s
, 
mode
);

151 
	`ld_‹dî_löe
 (* 
o
, 
mode
);

152 
	`ld_∑π_psuµ
 (* 
p
, 
mode
);

153 
	`ld_«ti⁄
 (* 
c
, 
mode
);

154 
	`ld_ªgi⁄
 (* 
c
, 
mode
);

160 #ifde‡
SSBM


161 
	`sd_cu°
 (
chûd
, 
skù_cou¡
);

162 
	`sd_∑π
 (
chûd
, 
skù_cou¡
);

163 
	`sd_suµ
 (
chûd
, 
skù_cou¡
);

165 
	`sd_löe
 (
chûd
, 
skù_cou¡
);

166 
	`sd_‹dî
 (
chûd
, 
skù_cou¡
);

169 
	`sd_cu°
 (
chûd
, 
skù_cou¡
);

170 
	`sd_löe
 (
chûd
, 
skù_cou¡
);

171 
	`sd_‹dî
 (
chûd
, 
skù_cou¡
);

172 
	`sd_∑π
 (
chûd
, 
skù_cou¡
);

173 
	`sd_psuµ
 (
chûd
, 
skù_cou¡
);

174 
	`sd_suµ
 (
chûd
, 
skù_cou¡
);

175 
	`sd_‹dî_löe
 (
chûd
, 
skù_cou¡
);

176 
	`sd_∑π_psuµ
 (
chûd
, 
skù_cou¡
);

182 #ifde‡
SSBM


183 
	`hd_cu°
 (
FILE
 * 
f
);

184 
	`hd_∑π
 (
FILE
 * 
f
);

185 
	`hd_suµ
 (
FILE
 * 
f
);

186 
	`hd_löe
 (
FILE
 * 
f
);

189 
	`hd_cu°
 (
FILE
 * 
f
);

190 
	`hd_löe
 (
FILE
 * 
f
);

191 
	`hd_‹dî
 (
FILE
 * 
f
);

192 
	`hd_∑π
 (
FILE
 * 
f
);

193 
	`hd_psuµ
 (
FILE
 * 
f
);

194 
	`hd_suµ
 (
FILE
 * 
f
);

195 
	`hd_‹dî_löe
 (
FILE
 * 
f
);

196 
	`hd_∑π_psuµ
 (
FILE
 * 
f
);

197 
	`hd_«ti⁄
 (
FILE
 * 
f
);

198 
	`hd_ªgi⁄
 (
FILE
 * 
f
);

204 #ifde‡
SSBM


205 
	`vrf_cu°
 (* 
c
, 
mode
);

206 
	`vrf_∑π
 (* 
p
, 
mode
);

207 
	`vrf_suµ
 (* 
s
, 
mode
);

208 
	`vrf_löe
 (* 
o
, 
mode
);

209 
	`vrf_‹dî
 (* 
o
, 
mode
);

210 
	`vrf_d©e
 (*
d
 ,
mode
);

212 
	`vrf_cu°
 (* 
c
, 
mode
);

213 
	`vrf_löe
 (* 
o
, 
mode
);

214 
	`vrf_‹dî
 (* 
o
, 
mode
);

215 
	`vrf_∑π
 (* 
p
, 
mode
);

216 
	`vrf_psuµ
 (* 
p
, 
mode
);

217 
	`vrf_suµ
 (* 
s
, 
mode
);

218 
	`vrf_‹dî_löe
 (* 
o
, 
mode
);

219 
	`vrf_∑π_psuµ
 (* 
p
, 
mode
);

220 
	`vrf_«ti⁄
 (* 
c
, 
mode
);

221 
	`vrf_ªgi⁄
 (* 
c
, 
mode
);

225 #ifde‡
SSBM


226 
tdef
 
tdefs
[] =

229 {"∑π.tbl", "∑πÅabÀ", 200000, 
hd_∑π
,

230 {
¥_∑π
, 
ld_∑π
}, 
sd_∑π
, 
vrf_∑π
, 
PSUPP
, 0},

232 {"suµlõr.tbl", "suµlõr†èbÀ", 10000, 
hd_suµ
,

233 {
¥_suµ
, 
ld_suµ
}, 
sd_suµ
, 
vrf_suµ
, 
NONE
, 0},

235 {"cu°omî.tbl", "cu°omî†èbÀ", 30000, 
hd_cu°
,

236 {
¥_cu°
, 
ld_cu°
}, 
sd_cu°
, 
vrf_cu°
, 
NONE
, 0},

237 {"d©e.tbl","d©êèbÀ",2556,0,{
¥_d©e
,
ld_d©e
}, 0,
vrf_d©e
, 
NONE
,0},

240 {"löe‹dî.tbl", "löe‹dîÅabÀ", 150000, 
hd_löe
,

241 {
¥_löe
, 
ld_löe
}, 
sd_löe
, 
vrf_löe
, 
NONE
, 0},

246 
	}
};

250 
tdef
 
	gtdefs
[] =

252 {"∑π.tbl", "∑πÅabÀ", 200000, 
hd_∑π
,

253 {
¥_∑π
, 
ld_∑π
}, 
sd_∑π
, 
vrf_∑π
, 
PSUPP
, 0},

254 {"∑πsuµ.tbl", "∑πsuµlõ∏èbÀ", 200000, 
hd_psuµ
,

255 {
¥_psuµ
, 
ld_psuµ
}, 
sd_psuµ
, 
vrf_psuµ
, 
NONE
, 0},

256 {"suµlõr.tbl", "suµlõr†èbÀ", 10000, 
hd_suµ
,

257 {
¥_suµ
, 
ld_suµ
}, 
sd_suµ
, 
vrf_suµ
, 
NONE
, 0},

258 {"cu°omî.tbl", "cu°omî†èbÀ", 150000, 
hd_cu°
,

259 {
¥_cu°
, 
ld_cu°
}, 
sd_cu°
, 
vrf_cu°
, 
NONE
, 0},

260 {"‹dîs.tbl", "‹dîÅabÀ", 150000, 
hd_‹dî
,

261 {
¥_‹dî
, 
ld_‹dî
}, 
sd_‹dî
, 
vrf_‹dî
, 
LINE
, 0},

262 {"löeôem.tbl", "löeôemÅabÀ", 150000, 
hd_löe
,

263 {
¥_löe
, 
ld_löe
}, 
sd_löe
, 
vrf_löe
, 
NONE
, 0},

264 {"‹dîs.tbl", "‹dîs/löeôemÅabÀs", 150000, 
hd_‹dî_löe
,

265 {
¥_‹dî_löe
, 
ld_‹dî_löe
}, 
sd_‹dî
, 
vrf_‹dî_löe
, 
LINE
, 0},

266 {"∑π.tbl", "∑π/∑πsuµlõ∏èbÀs", 200000, 
hd_∑π_psuµ
,

267 {
¥_∑π_psuµ
, 
ld_∑π_psuµ
}, 
sd_∑π
, 
vrf_∑π_psuµ
, 
PSUPP
, 0},

268 {"«ti⁄.tbl", "«ti⁄ÅabÀ", 
NATIONS_MAX
, 
hd_«ti⁄
,

269 {
¥_«ti⁄
, 
ld_«ti⁄
}, 
NO_LFUNC
, 
vrf_«ti⁄
, 
NONE
, 0},

270 {"ªgi⁄.tbl", "ªgi⁄ÅabÀ", 
NATIONS_MAX
, 
hd_ªgi⁄
,

271 {
¥_ªgi⁄
, 
ld_ªgi⁄
}, 
NO_LFUNC
, 
vrf_ªgi⁄
, 
NONE
, 0},

274 *
	gpids
;

282 
	$°›_¥oc
 (
signum
)

284 
	`exô
 (0);

285 
	}
}

288 
	$kûl_lﬂd
 ()

290 
i
;

292 #i‡!
	`deföed
(
U2200
Ë&& !deföed(
DOS
)

293 
i
 = 0; i < 
chûdªn
; i++)

294 i‡(
pids
[
i
])

295 
	`KILL
 (
pids
[
i
]);

298 
	}
}

304 
	$£t_fûes
 (
i
, 
∂ﬂd
)

306 
löe
[80], *
√w_«me
;

308 i‡(
èbÀ
 & (1 << 
i
))

309 
chûd_èbÀ
:

311 i‡(
∂ﬂd
 != -1)

312 
	`•rötf
 (
löe
, "%s.%d", 
tdefs
[
i
].
«me
, 
∂ﬂd
);

315 
	`¥ötf
 ("EnterÇew destination for %s data: ",

316 
tdefs
[
i
].
«me
);

317 i‡(
	`fgës
 (
löe
,  (löe), 
°dö
Ë=
NULL
)

319 i‡((
√w_«me
 = 
	`°rchr
 (
löe
, '\n')Ë!
NULL
)

320 *
√w_«me
 = '\0';

321 i‡(
	`°æí
 (
löe
) == 0)

324 
√w_«me
 = (*Ë
	`mÆloc
 (
	`°æí
 (
löe
) + 1);

325 
	`MALLOC_CHECK
 (
√w_«me
);

326 
	`°r˝y
 (
√w_«me
, 
löe
);

327 
tdefs
[
i
].
«me
 = 
√w_«me
;

328 i‡(
tdefs
[
i
].
chûd
 !
NONE
)

330 
i
 = 
tdefs
[i].
chûd
;

331 
tdefs
[
i
].
chûd
 = 
NONE
;

332 
chûd_èbÀ
;

337 
	}
}

345 
	$lﬂd_di°s
 ()

347 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "p_˙å", &
p_˙å_£t
);

348 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "cﬁ‹s", &
cﬁ‹s
);

349 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "p_ty≥s", &
p_ty≥s_£t
);

350 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "«ti⁄s", &
«ti⁄s
);

351 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ªgi⁄s", &
ªgi⁄s
);

352 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "o_oprio",

353 &
o_¥i‹ôy_£t
);

354 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "instruct",

355 &
l_ö°ru˘_£t
);

356 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "smode", &
l_smode_£t
);

357 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "category",

358 &
l_ˇãg‹y_£t
);

359 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "rÊag", &
l_rÊag_£t
);

360 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "m£gm¡", &
c_m£g_£t
);

363 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "nouns", &
nouns
);

364 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vîbs", &
vîbs
);

365 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "adje˘ives", &
adje˘ives
);

366 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "advîbs", &
advîbs
);

367 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "auxûœrõs", &
auxûœrõs
);

368 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ãrmö©‹s", &
ãrmö©‹s
);

369 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¨ti˛es", &
¨ti˛es
);

370 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¥ïosôi⁄s", &
¥ïosôi⁄s
);

371 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "gømm¨", &
gømm¨
);

372 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "≈", &
≈
);

373 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vp", &
vp
);

375 
	}
}

381 
	$gí_tbl
 (
äum
, 
°¨t
, 
cou¡
, 
upd_num
)

383 
‹dî_t
 
o
;

384 
suµlõr_t
 
suµ
;

385 
cu°omî_t
 
cu°
;

386 
∑π_t
 
∑π
;

387 #ifde‡
SSBM


388 
d©e_t
 
dt
;

390 
code_t
 
code
;

392 
com∂ëed
 = 0;

393 
öô
 = 0;

394 
i
;

396 
rows_≥r_£gmít
=0;

397 
rows_this_£gmít
=-1;

398 
ªsiduÆ_rows
=0;

400 i‡(
ö£π_£gmíts
)

402 
rows_≥r_£gmít
 = 
cou¡
 / 
ö£π_£gmíts
;

403 
ªsiduÆ_rows
 = 
cou¡
 - (
rows_≥r_£gmít
 * 
ö£π_£gmíts
);

406 i‡(
öô
 == 0)

408 
	`INIT_HUGE
(
o
.
okey
);

409 
i
=0; i < 
O_LCNT_MAX
; i++)

410 #ifde‡
SSBM


411 
	`INIT_HUGE
(
o
.
löe‹dîs
[
i
].
okey
);

413 
	`INIT_HUGE
(
o
.
l
[
i
].
okey
);

415 
öô
 = 1;

418 
i
 = 
°¨t
; 
cou¡
; count--, i++)

420 
	`LIFENOISE
 (1000, 
i
);

421 
	`row_°¨t
(
äum
);

423 
äum
)

425 
LINE
:

426 #ifde‡
SSBM


428 
ORDER
:

429 
ORDER_LINE
:

431 
	`mk_‹dî
 (
i
, &
o
, 
upd_num
 % 10000);

433 i‡(
ö£π_£gmíts
 && (
upd_num
 > 0))

434 if((
upd_num
 / 10000Ë< 
ªsiduÆ_rows
)

436 if((++
rows_this_£gmít
Ë> 
rows_≥r_£gmít
)

438 
rows_this_£gmít
=0;

439 
upd_num
 += 10000;

444 if((++
rows_this_£gmít
Ë>
rows_≥r_£gmít
)

446 
rows_this_£gmít
=0;

447 
upd_num
 += 10000;

451 i‡(
£t_£eds
 == 0)

452 i‡(
vÆid©e
)

453 
tdefs
[
äum
].
	`vîify
((*)&
o
, 0);

455 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
o
, 
upd_num
);

457 
SUPP
:

458 
	`mk_suµ
 (
i
, &
suµ
);

459 i‡(
£t_£eds
 == 0)

460 i‡(
vÆid©e
)

461 
tdefs
[
äum
].
	`vîify
((*)&
suµ
, 0);

463 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
suµ
, 
upd_num
);

465 
CUST
:

466 
	`mk_cu°
 (
i
, &
cu°
);

467 i‡(
£t_£eds
 == 0)

468 i‡(
vÆid©e
)

469 
tdefs
[
äum
].
	`vîify
((*)&
cu°
, 0);

471 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
cu°
, 
upd_num
);

473 #ifde‡
SSBM


474 
PART
:

476 
PSUPP
:

477 
PART
:

478 
PART_PSUPP
:

480 
	`mk_∑π
 (
i
, &
∑π
);

481 i‡(
£t_£eds
 == 0)

482 i‡(
vÆid©e
)

483 
tdefs
[
äum
].
	`vîify
((*)&
∑π
, 0);

485 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
∑π
, 
upd_num
);

487 #ifde‡
SSBM


488 
DATE
:

489 
	`mk_d©e
 (
i
, &
dt
);

490 i‡(
£t_£eds
 == 0)

491 i‡(
vÆid©e
)

492 
tdefs
[
äum
].
	`vîify
((*)&
dt
, 0);

494 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
dt
, 0);

497 
NATION
:

498 
	`mk_«ti⁄
 (
i
, &
code
);

499 i‡(
£t_£eds
 == 0)

500 i‡(
vÆid©e
)

501 
tdefs
[
äum
].
	`vîify
((*)&
code
, 0);

503 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
code
, 0);

505 
REGION
:

506 
	`mk_ªgi⁄
 (
i
, &
code
);

507 i‡(
£t_£eds
 == 0)

508 i‡(
vÆid©e
)

509 
tdefs
[
äum
].
	`vîify
((*)&
code
, 0);

511 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
code
, 0);

515 
	`row_°›
(
äum
);

516 i‡(
£t_£eds
 && (
i
 % 
tdefs
[
äum
].
ba£
) < 2)

518 
	`¥ötf
("\nSìd†f‹ %†©Ñowcou¡ %ld\n", 
tdefs
[
äum
].
commít
, 
i
);

519 
	`dump_£eds
(
äum
);

522 
com∂ëed
 |1 << 
äum
;

523 
	}
}

528 
	$ußge
 ()

530 #ifde‡
SSBM


531 
	`Ârötf
 (
°dîr
, "%s\n%s\n\t%s\n%s %s\n\n",

539 
	`Ârötf
 (
°dîr
, "%s\n%s\n\t%s\n%s %s\n\n",

546 
	`Ârötf
 (
°dîr
, "-b <s> --Üoad distributions for <s>\n");

547 
	`Ârötf
 (
°dîr
, "-C <n> -- use <n>ÖrocessesÅo generate data\n");

548 
	`Ârötf
 (
°dîr
, " [Under DOS, must be used with -S]\n");

549 
	`Ârötf
 (
°dîr
, "-D -- do databaseÜoad inÜine\n");

550 
	`Ârötf
 (
°dîr
, "-d <n> -- split deletes between <n> files\n");

551 
	`Ârötf
 (
°dîr
, "-f -- force. OverwriteÉxisting files\n");

552 
	`Ârötf
 (
°dîr
, "-F -- generate flat files output\n");

553 
	`Ârötf
 (
°dîr
, "-h -- displayÅhis message\n");

554 
	`Ârötf
 (
°dîr
, "-i <n> -- split inserts between <n> files\n");

555 
	`Ârötf
 (
°dîr
, "-n <s> -- inlineÜoad into database <s>\n");

556 
	`Ârötf
 (
°dîr
, "-O d -- generate SQL syntax for deletes\n");

557 
	`Ârötf
 (
°dîr
, "-O f -- over-ride default output fileÇames\n");

558 
	`Ârötf
 (
°dîr
, "-O h -- output files with headers\n");

559 
	`Ârötf
 (
°dîr
, "-O m --Öroduce columnar output\n");

560 
	`Ârötf
 (
°dîr
, "-OÑ -- generate keyÑanges for deletes.\n");

561 
	`Ârötf
 (
°dîr
, "-O v -- Verify data set without generating it.\n");

562 
	`Ârötf
 (
°dîr
, "-q --Énable QUIET mode\n");

563 
	`Ârötf
 (
°dîr
, "-r <n> -- updatesÑefresh (n/100)%% ofÅhe\n");

564 
	`Ârötf
 (
°dîr
, " data set\n");

565 
	`Ârötf
 (
°dîr
, "-s <n> -- set Scale Factor (SF)Åo <n> \n");

566 
	`Ârötf
 (
°dîr
, "-S <n> -- buildÅhe <n>th step ofÅhe data/update set\n");

568 #ifde‡
SSBM


569 
	`Ârötf
 (
°dîr
, "-T c -- generate cutomers dimensionÅable ONLY\n");

570 
	`Ârötf
 (
°dîr
, "-TÖ -- generateÖarts dimensionÅable ONLY\n");

571 
	`Ârötf
 (
°dîr
, "-T s -- generate suppliers dimensionÅable ONLY\n");

572 
	`Ârötf
 (
°dîr
, "-T d -- generate date dimensionÅable ONLY\n");

573 
	`Ârötf
 (
°dîr
, "-TÜ -- generateÜineorder factÅable ONLY\n");

575 
	`Ârötf
 (
°dîr
, "-T c -- generate cutomers ONLY\n");

576 
	`Ârötf
 (
°dîr
, "-TÜ -- generateÇation/region ONLY\n");

577 
	`Ârötf
 (
°dîr
, "-T L -- generateÜineitem ONLY\n");

578 
	`Ârötf
 (
°dîr
, "-TÇ -- generateÇation ONLY\n");

579 
	`Ârötf
 (
°dîr
, "-T o -- generate orders/lineitem ONLY\n");

580 
	`Ârötf
 (
°dîr
, "-T O -- generate orders ONLY\n");

581 
	`Ârötf
 (
°dîr
, "-TÖ -- generateÖarts/partsupp ONLY\n");

582 
	`Ârötf
 (
°dîr
, "-T P -- generateÖarts ONLY\n");

583 
	`Ârötf
 (
°dîr
, "-TÑ -- generateÑegion ONLY\n");

584 
	`Ârötf
 (
°dîr
, "-T s -- generate suppliers ONLY\n");

585 
	`Ârötf
 (
°dîr
, "-T S -- generateÖartsupp ONLY\n");

588 
	`Ârötf
 (
°dîr
, "-U <s> -- generate <s> update sets\n");

589 
	`Ârötf
 (
°dîr
, "-v --Énable VERBOSE mode\n");

590 
	`Ârötf
 (
°dîr
,

592 
	`Ârötf
 (
°dîr
, "\tdbgen -vfF -s 1\n");

593 
	`Ârötf
 (
°dîr
, "\nTo generate updates forá SF=1 (1GB), use:\n");

594 
	`Ârötf
 (
°dîr
, "\tdbgen -v -U 1 -s 1\n");

595 
	}
}

604 
	$∑πül
 (
tbl
, 
s
)

606 
row˙t
;

607 
exåa
;

609 i‡(
vîbo£
 > 0)

611 
	`Ârötf
 (
°dîr
, "\tStartingÅoÜoad stage %d of %ld for %s...",

612 
s
, 
chûdªn
, 
tdefs
[
tbl
].
commít
);

615 i‡(
dúe˘
 == 0)

616 
	`£t_fûes
 (
tbl
, 
s
);

618 
row˙t
 = 
	`£t_°©e
(
tbl
, 
sˇÀ
, 
chûdªn
, 
s
, &
exåa
);

620 i‡(
s
 =
chûdªn
)

621 
	`gí_tbl
 (
tbl
, 
row˙t
 * (
s
 - 1Ë+ 1,Ñow˙à+ 
exåa
, 
upd_num
);

623 
	`gí_tbl
 (
tbl
, 
row˙t
 * (
s
 - 1Ë+ 1,Ñow˙t, 
upd_num
);

625 i‡(
vîbo£
 > 0)

626 
	`Ârötf
 (
°dîr
, "done.\n");

629 
	}
}

631 #i‚de‡
DOS


634 
	$∂ﬂd
 (
tbl
)

636 
c
 = 0, 
i
, 
°©us
;

638 i‡(
vîbo£
 > 0)

640 
	`Ârötf
 (
°dîr
, "Starting %ld childrenÅoÜoad %s",

641 
chûdªn
, 
tdefs
[
tbl
].
commít
);

643 
c
 = 0; c < 
chûdªn
; c++)

645 
pids
[
c
] = 
	`SPAWN
 ();

646 i‡(
pids
[
c
] == -1)

648 
	`≥º‹
 ("ChildÜoaderÇot created");

649 
	`kûl_lﬂd
 ();

650 
	`exô
 (-1);

652 i‡(
pids
[
c
] == 0)

654 
	`SET_HANDLER
 (
°›_¥oc
);

655 
vîbo£
 = 0;

656 
	`∑πül
 (
tbl
, 
c
+1);

657 
	`exô
 (0);

659 i‡(
vîbo£
 > 0)

660 
	`Ârötf
 (
°dîr
, ".");

663 i‡(
vîbo£
 > 0)

664 
	`Ârötf
 (
°dîr
, "waiting...");

666 
c
 = 
chûdªn
;

667 
c
)

669 
i
 = 
	`WAIT
 (&
°©us
, 
pids
[
c
 - 1]);

670 i‡(
i
 =-1 && 
chûdªn
)

672 i‡(
î∫o
 =
ECHILD
)

673 
	`Ârötf
 (
°dîr
, "\nCouldÇŸ waô o¿pid %d\n", 
pids
[
c
 - 1]);

674 i‡(
î∫o
 =
EINTR
)

675 
	`Ârötf
 (
°dîr
, "\nPro˚s†%d st›≥dábn‹mÆly\n", 
pids
[
c
 - 1]);

676 i‡(
î∫o
 =
EINVAL
)

677 
	`Ârötf
 (
°dîr
, "\nProgram bug\n");

679 i‡(! 
	`WIFEXITED
(
°©us
)) {

680 (Ë
	`Ârötf
(
°dîr
, "\nPro˚s†%d: ", 
i
);

681 i‡(
	`WIFSIGNALED
(
°©us
)) {

682 (Ë
	`Ârötf
(
°dîr
, "rcvd signal %d\n",

683 
	`WTERMSIG
(
°©us
));

684 } i‡(
	`WIFSTOPPED
(
°©us
)) {

685 (Ë
	`Ârötf
(
°dîr
, "stopped, signal %d\n",

686 
	`WSTOPSIG
(
°©us
));

690 
c
--;

693 i‡(
vîbo£
 > 0)

694 
	`Ârötf
 (
°dîr
, "done\n");

696 
	}
}

701 
	$¥o˚ss_›ti⁄s
 (
cou¡
, **
ve˘‹
)

703 
›ti⁄
;

705 (
›ti⁄
 = 
	`gë›t
 (
cou¡
, 
ve˘‹
,

711 
›ti⁄
)

714 
d_∑th
 = (*)
	`mÆloc
(
	`°æí
(
›èrg
) + 1);

715 
	`MALLOC_CHECK
(
d_∑th
);

716 
	`°r˝y
(
d_∑th
, 
›èrg
);

719 
vîbo£
 = -1;

722 
ö£π_£gmíts
 = 
	`©oi
 (
›èrg
);

725 
dñëe_£gmíts
 = 
	`©oi
 (
›èrg
);

728 
°ï
 = 
	`©oi
 (
›èrg
);

731 
vîbo£
 = 1;

734 
f‹˚
 = 1;

737 *
›èrg
)

739 #ifde‡
SSBM


741 
èbÀ
 = 1 << 
CUST
;

744 
èbÀ
 = 1 << 
PART
;

747 
èbÀ
 = 1 << 
SUPP
;

750 
èbÀ
 = 1 << 
DATE
;

753 
èbÀ
 = 1 << 
LINE
;

756 
èbÀ
 = 1 << 
CUST
;

757 
èbÀ
 |1 << 
PART
;

758 
èbÀ
 |1 << 
SUPP
;

759 
èbÀ
 |1 << 
DATE
;

760 
èbÀ
 |1 << 
LINE
;

764 
èbÀ
 = 1 << 
CUST
;

767 
èbÀ
 = 1 << 
LINE
;

770 
èbÀ
 = 1 << 
NATION
;

771 
èbÀ
 |1 << 
REGION
;

774 
èbÀ
 = 1 << 
NATION
;

777 
èbÀ
 = 1 << 
ORDER
;

780 
èbÀ
 = 1 << 
ORDER_LINE
;

783 
èbÀ
 = 1 << 
PART
;

786 
èbÀ
 = 1 << 
PART_PSUPP
;

789 
èbÀ
 = 1 << 
REGION
;

792 
èbÀ
 = 1 << 
PSUPP
;

795 
èbÀ
 = 1 << 
SUPP
;

799 
	`Ârötf
 (
°dîr
, "UnknownÅableÇame %s\n",

800 
›èrg
);

801 
	`ußge
 ();

802 
	`exô
 (1);

807 
Êt_sˇÀ
 = 
	`©of
 (
›èrg
);

808 i‡(
Êt_sˇÀ
 < 
MIN_SCALE
)

810 
i
;

812 
sˇÀ
 = 1;

813 
i
 = 
PART
; i < 
REGION
; i++)

815 
tdefs
[
i
].
ba£
 *
Êt_sˇÀ
;

816 i‡(
tdefs
[
i
].
ba£
 < 1)

817 
tdefs
[
i
].
ba£
 = 1;

821 
sˇÀ
 = (Ë
Êt_sˇÀ
;

822 i‡(
sˇÀ
 > 
MAX_SCALE
)

824 
	`Ârötf
 (
°dîr
, "%s %5.0f %s\n\t%s\n\n",

826 
MAX_SCALE
,

829 
	`Ârötf
 (
°dîr
,

834 
	`tﬁowî
 (*
›èrg
))

837 
gí_sql
 = 1;

840 
‚ames
 = 1;

843 
hódî
 = 1;

846 
cﬁum«r
 = 1;

849 
gí_∫g
 = 1;

852 
£t_£eds
 = 1;

855 
vÆid©e
 = 1;

858 
	`Ârötf
 (
°dîr
, "Unknown optionÇame %s\n",

859 
›èrg
);

860 
	`ußge
 ();

861 
	`exô
 (1);

865 
dúe˘
 = 1;

868 
dúe˘
 = 0;

871 
upd©es
 = 
	`©oi
 (
›èrg
);

874 
ª‰esh
 = 
	`©oi
 (
›èrg
);

876 #i‚de‡
DOS


878 
chûdªn
 = 
	`©oi
 (
›èrg
);

882 
db_«me
 = (*Ë
	`mÆloc
 (
	`°æí
 (
›èrg
) + 1);

883 
	`MALLOC_CHECK
 (
db_«me
);

884 
	`°r˝y
 (
db_«me
, 
›èrg
);

887 
	`¥ötf
 ("ERROR: option '%c' unknown.\n",

888 *(
ve˘‹
[
›töd
] + 1));

890 
	`Ârötf
 (
°dîr
,

892 
NAME
, 
VERSION
, 
RELEASE
,

893 
MODIFICATION
, 
PATCH
);

896 
	`Ârötf
 (
°dîr
, "C›yrighà%†%s\n", 
TPC
, 
C_DATES
);

897 
	`ußge
 ();

898 
	`exô
 (1);

905 #i‚de‡
DOS


906 i‡(
chûdªn
 !1 && 
°ï
 == -1)

908 
pids
 = (*)
	`mÆloc
(
chûdªn
 * (
pid_t
));

909 
	`MALLOC_CHECK
(
pids
)

912 i‡(
chûdªn
 !1 && 
°ï
 < 0)

914 
	`Ârötf
(
°dîr
, "ERROR: -C must beáccompanied by -S onÅhisÖlatform\n");

915 
	`exô
(1);

920 
	}
}

922 
	$EXIT_NAMESPACE
(
dbgíssb
)

924 
usög
 
«me•a˚
 
dbgíssb
;

931 
	$ssb_dbgí_öô
()

934 
èbÀ
 = (1 << 
PART
) |

935 (1 << 
SUPP
) |

936 (1 << 
CUST
) |

937 (1 << 
DATE
) |

938 (1 << 
LINE
);

939 
f‹˚
 = 0;

940 
ö£π_£gmíts
=0;

941 
dñëe_£gmíts
=0;

942 
ö£π_‹dîs_£gmít
=0;

943 
ö£π_löeôem_£gmít
=0;

944 
dñëe_£gmít
=0;

945 
vîbo£
 = 0;

946 
cﬁum«r
 = 0;

947 
£t_£eds
 = 0;

948 
hódî
 = 0;

949 
dúe˘
 = 0;

950 
sˇÀ
 = 1;

951 
Êt_sˇÀ
 = 1.0;

952 
upd©es
 = 0;

953 
ª‰esh
 = 
UPD_PCT
;

954 
°ï
 = -1;

956 
tdefs
[
LINE
].
ba£
 *=

957 
ORDERS_PER_CUST
;

959 
‚ames
 = 0;

960 
db_«me
 = 
NULL
;

961 
gí_sql
 = 0;

962 
gí_∫g
 = 0;

963 
chûdªn
 = 1;

964 
d_∑th
 = 
NULL
;

966 
	`lﬂd_di°s
 ();

968 
tdefs
[
NATION
].
ba£
 = 
«ti⁄s
.
cou¡
;

969 
tdefs
[
REGION
].
ba£
 = 
ªgi⁄s
.
cou¡
;

972 
	}
}

976 
	$maö22
 (
ac
, **
av
)

978 
i
;

986 
èbÀ
 = (1 << 
PART
) |

987 (1 << 
SUPP
) |

988 (1 << 
CUST
) |

989 (1 << 
DATE
) |

990 (1 << 
LINE
);

991 
f‹˚
 = 0;

992 
ö£π_£gmíts
=0;

993 
dñëe_£gmíts
=0;

994 
ö£π_‹dîs_£gmít
=0;

995 
ö£π_löeôem_£gmít
=0;

996 
dñëe_£gmít
=0;

997 
vîbo£
 = 0;

998 
cﬁum«r
 = 0;

999 
£t_£eds
 = 0;

1000 
hódî
 = 0;

1001 
dúe˘
 = 0;

1002 
sˇÀ
 = 1;

1003 
Êt_sˇÀ
 = 1.0;

1004 
upd©es
 = 0;

1005 
ª‰esh
 = 
UPD_PCT
;

1006 
°ï
 = -1;

1008 
tdefs
[
LINE
].
ba£
 *=

1009 
ORDERS_PER_CUST
;

1011 
‚ames
 = 0;

1012 
db_«me
 = 
NULL
;

1013 
gí_sql
 = 0;

1014 
gí_∫g
 = 0;

1015 
chûdªn
 = 1;

1016 
d_∑th
 = 
NULL
;

1019 
	`¥o˚ss_›ti⁄s
 (
ac
, 
av
);

1022 
	`lﬂd_di°s
 ();

1024 
tdefs
[
NATION
].
ba£
 = 
«ti⁄s
.
cou¡
;

1025 
tdefs
[
REGION
].
ba£
 = 
ªgi⁄s
.
cou¡
;

1035 
i
 = 
PART
; i <
REGION
; i++)

1036 i‡(
èbÀ
 & (1 << 
i
))

1038 i‡(
chûdªn
 > 1 && 
i
 < 
NATION
)

1040 i‡(
°ï
 >= 0)

1042 i‡(
vÆid©e
)

1044 
	`INTERNAL_ERROR
("Cannot validateÖarallel data generation");

1048 
	`∑πül
 (
i
, 
°ï
);

1053 i‡(
vÆid©e
)

1055 
	`INTERNAL_ERROR
("Cannot validateÖarallel data generation");

1059 
	`∂ﬂd
 (
i
);

1065 
mörow
 = 1;

1066 i‡(
i
 < 
NATION
) {

1067 
row˙t
 = 
tdefs
[
i
].
ba£
 * 
sˇÀ
;

1070 
row˙t
 = 
tdefs
[
i
].
ba£
;

1072 if(
i
==
PART
){

1073 
row˙t
 = 
tdefs
[
i
].
ba£
 * (
	`Êo‹
(1+
	`log
(()(
sˇÀ
))/(log(2))));

1075 if(
i
==
DATE
){

1076 
row˙t
 = 
tdefs
[
i
].
ba£
;

1078 i‡(
vîbo£
 > 0){

1079 
	`Ârötf
 (
°dîr
, "%s data for %s [pid: %ld]",

1080 (
vÆid©e
)?"VÆid©ög":"Gíî©ög", 
tdefs
[
i
].
commít
, ()
DSS_PROC
);

1082 
	`gí_tbl
 (
i
, 
mörow
, 
row˙t
, 
upd_num
);

1083 i‡(
vîbo£
 > 0){

1084 
	`Ârötf
 (
°dîr
, "done.\n");

1087 i‡(
vÆid©e
)

1089 
	`¥ötf
("Validation checksum for %sát %ld GB: %0x\n",

1090 
tdefs
[
i
].
«me
, 
sˇÀ
, (Èdefs[i].
vtŸÆ
);

1097 
	}
}

	@src/workload/ssb/dbgen/ssb_bcd2.cpp

15 
	~<°dio.h
>

16 
	~"w‹klﬂd/ssb/dbgí/bcd2.h
"

18 
	#DIGITS_PER_LONG
 7

	)

19 
	#WORD_DIVISOR
 10000000

	)

20 
	#GET_DIGIT
(
num
, 
low
, 
high
) \

21 ((
num
Ë>
DIGITS_PER_LONG
)? \

22 (
high
 & (0xF << (4 * ((
num
Ë- 
DIGITS_PER_LONG
)))) \

23 >> (((
num
Ë- 
DIGITS_PER_LONG
) * 4): \

24 (
low
 & (0xF << (4 * (
num
)))Ë>> (“umË* 4)

	)

25 
	#SET_DIGIT
(
vÆue
, 
num
, 
low
, 
high
) \

26 i‡((
num
Ë>
DIGITS_PER_LONG
) \

28 *
high
 &= \

29 (0xFFFFFFF ^ (0xF << (4 * ((
num
Ë- 
DIGITS_PER_LONG
)))); \

30 *
high
 |(
vÆue
 << (4 * ((
num
Ë- 
DIGITS_PER_LONG
))); \

34 *
low
 = (*low & (0xFFFFFFF ^ (0xF << (4 * (
num
))))); \

35 *
low
 |(
vÆue
 << (4 * (
num
))); \

36 }

	)

38 
	$ENTER_NAMESPACE
(
dbgíssb
)

41 
	$bö_bcd2
(
bö¨y
, *
low_ªs
, *
high_ªs
)

43 
numbî
[15],

44 *
cuºít
;

45 
cou¡
;

46 *
de°
;

48 *
low_ªs
 = *
high_ªs
 = 0;

49 
	`•rötf
(
numbî
, "%014ld", 
bö¨y
);

50 
cuºít
 = 
numbî
, 
cou¡
=13; *current; current++, count--)

52 
de°
 = (
cou¡
 < 
DIGITS_PER_LONG
)?
low_ªs
:
high_ªs
;

53 *
de°
 = *dest << 4;

54 *
de°
 |*
cuºít
 - '0';

57 
	}
}

60 
	$bcd2_bö
(*
de°
, 
bcd
)

62 
cou¡
;

63 
mask
;

65 
cou¡
 = 
DIGITS_PER_LONG
 - 1;

66 
mask
 = 0xF000000;

67 *
de°
 = 0;

68 
mask
)

70 *
de°
 *= 10;

71 *
de°
 +(
bcd
 & 
mask
Ë>> (4 * 
cou¡
);

72 
mask
 = mask >> 4;

73 
cou¡
 -= 1;

76 
	}
}

79 
	$bcd2_add
(*
bcd_low
, *
bcd_high
, 
addíd
)

81 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
ªs
;

82 
digô
;

84 
	`bö_bcd2
(
addíd
, &
tmp_lo
, &
tmp_hi
);

85 
ˇºy
 = 0;

86 
digô
=0; digit < 14; digit++)

88 
ªs
 = 
	`GET_DIGIT
(
digô
, *
bcd_low
, *
bcd_high
);

89 
ªs
 +
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

90 
ªs
 +
ˇºy
;

91 
ˇºy
 = 
ªs
 / 10;

92 
ªs
 %= 10;

93 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

95 (
ˇºy
);

96 
	}
}

99 
	$bcd2_sub
(*
bcd_low
, *
bcd_high
, 
subíd
)

101 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
ªs
;

102 
digô
;

104 
	`bö_bcd2
(
subíd
, &
tmp_lo
, &
tmp_hi
);

105 
ˇºy
 = 0;

106 
digô
=0; digit < 14; digit++)

108 
ªs
 = 
	`GET_DIGIT
(
digô
, *
bcd_low
, *
bcd_high
);

109 
ªs
 -
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

110 
ªs
 -
ˇºy
;

111 i‡(
ªs
 < 0)

113 
ªs
 += 10;

114 
ˇºy
 = 1;

116 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

118 (
ˇºy
);

119 
	}
}

122 
	$bcd2_mul
(*
bcd_low
, *
bcd_high
, 
mu…ùlõr
)

124 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
m_lo
, 
m_hi
, 
m1
, 
m2
;

125 
udigô
, 
ldigô
, 
ªs
;

127 
tmp_lo
 = *
bcd_low
;

128 
tmp_hi
 = *
bcd_high
;

129 
	`bö_bcd2
(
mu…ùlõr
, &
m_lo
, &
m_hi
);

130 *
bcd_low
 = 0;

131 *
bcd_high
 = 0;

132 
ˇºy
 = 0;

133 
ldigô
=0;Üdigit < 14;Üdigit++)

135 
m1
 = 
	`GET_DIGIT
(
ldigô
, 
m_lo
, 
m_hi
);

136 
ˇºy
 = 0;

137 
udigô
=0; udigit < 14; udigit++)

139 
m2
 = 
	`GET_DIGIT
(
udigô
, 
tmp_lo
, 
tmp_hi
);

140 
ªs
 = 
m1
 * 
m2
;

141 
ªs
 +
ˇºy
;

142 i‡(
udigô
 + 
ldigô
 < 14)

144 
ˇºy
 = 
	`GET_DIGIT
(
udigô
 + 
ldigô
, *
bcd_low
, *
bcd_high
);

145 
ªs
 +
ˇºy
;

147 
ˇºy
 = 
ªs
 / 10;

148 
ªs
 %= 10;

149 i‡(
udigô
 + 
ldigô
 < 14)

151 
	`SET_DIGIT
(
ªs
, 
udigô
 + 
ldigô
, 
bcd_low
, 
bcd_high
);

155 (
ˇºy
);

156 
	}
}

159 
	$bcd2_div
(*
bcd_low
, *
bcd_high
, 
divis‹
)

161 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
d1
, 
ªs
, 
digô
;

164 
ˇºy
 = 0;

165 
tmp_lo
 = *
bcd_low
;

166 
tmp_hi
 = *
bcd_high
;

167 *
bcd_low
 = *
bcd_high
 = 0;

168 
digô
=13; digit >= 0; digit--)

170 
d1
 = 
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

171 
d1
 +10 * 
ˇºy
;

172 
ªs
 = 
d1
 / 
divis‹
;

173 
ˇºy
 = 
d1
 % 
divis‹
;

174 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

176 (
ˇºy
);

177 
	}
}

180 
	$bcd2_mod
(*
bcd_low
, *
bcd_high
, 
modulo
)

182 
tmp_low
, 
tmp_high
;

184 
tmp_low
 = *
bcd_low
;

185 
tmp_high
 = *
bcd_high
;

186 
tmp_high
 || 
tmp_low
 > 
modulo
)

187 
	`bcd2_sub
(&
tmp_low
, &
tmp_high
, 
modulo
);

188 (
tmp_low
);

189 
	}
}

192 
	$bcd2_cmp
(*
low1
, *
high1
, 
comp
)

194 
ãmp
 = 0;

196 
	`bcd2_bö
(&
ãmp
, *
high1
);

197 i‡(
ãmp
 > 214)

199 
	`bcd2_bö
(&
ãmp
, *
low1
);

200 (
ãmp
 - 
comp
);

201 
	}
}

203 #ifde‡
TEST_BCD


204 
	~<vÆues.h
>

206 
	$maö_ã°
(, **)

208 
bö
, 
low_bcd
, 
high_bcd
;

209 
i
;

211 
bö
 = 
MAXINT
;

212 
	`¥ötf
("%ld\n", 
bö
);

213 
	`bö_bcd2
(
bö
, &
low_bcd
, &
high_bcd
);

214 
	`¥ötf
("%ld %ld\n", 
high_bcd
, 
low_bcd
);

215 
bö
 = 0;

216 
	`bcd2_bö
(&
bö
, 
high_bcd
);

217 
	`bcd2_bö
(&
bö
, 
low_bcd
);

218 
	`¥ötf
–"%ld\n", 
bö
);

219 
i
=9; i >= 0; i--)

220 
	`¥ötf
("%dth digit in %d is %d\n",

221 
i
, 
bö
, 
	`GET_DIGIT
(i, 
low_bcd
, 
high_bcd
));

222 
	`bcd2_add
(&
low_bcd
, &
high_bcd
, 
MAXINT
);

223 
bö
 = 0;

224 
	`bcd2_bö
(&
bö
, 
high_bcd
);

225 
high_bcd
 = 
bö
;

226 
bö
 = 0;

227 
	`bcd2_bö
(&
bö
, 
low_bcd
);

228 
low_bcd
 = 
bö
;

229 
	`¥ötf
–"%ld%07ld\n", 
high_bcd
, 
low_bcd
);

230 
	`bö_bcd2
(14, &
low_bcd
, &
high_bcd
);

231 
	`bcd2_mul
(&
low_bcd
, &
high_bcd
, 23L);

232 
bö
 = 0;

233 
	`bcd2_bö
(&
bö
, 
high_bcd
);

234 
	`bcd2_bö
(&
bö
, 
low_bcd
);

235 
	`¥ötf
–"%ld\n", 
bö
);

236 
	`bcd2_div
(&
low_bcd
, &
high_bcd
, 10L);

237 
bö
 = 0;

238 
	`bcd2_bö
(&
bö
, 
high_bcd
);

239 
	`bcd2_bö
(&
bö
, 
low_bcd
);

240 
	`¥ötf
–"%ld\n", 
bö
);

241 
	}
}

244 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_bm_utils.cpp

23 #ifde‡
LINUX


26 
	#_GNU_SOURCE


	)

29 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

30 
	~<°dio.h
>

31 
	~<c°dlib
>

32 
	~<time.h
>

33 
	~<î∫o.h
>

34 
	~<°rög.h
>

36 
	~<uni°d.h
>

37 
	~<gë›t.h
>

39 #ifde‡
HP


40 
	~<°rögs.h
>

42 
	~<˘y≥.h
>

43 
	~<m©h.h
>

44 #i‚de‡
_POSIX_SOURCE


45 
	~<mÆloc.h
>

48 
	~<f˙é.h
>

50 #ifde‡
IBM


51 
	~<sys/mode.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<sys/°©.h
>

56 #if (
deföed
(
WIN32
)||deföed(
DOS
))

57 #i‚de‡
_POSIX_


58 
	~<io.h
>

59 #i‚de‡
S_ISREG


61 
	#S_ISREG
(
m
Ë–((mË& 
_S_IFMT
Ë=
_S_IFREG
 )

	)

62 
	#S_ISFIFO
(
m
Ë–((mË& 
_S_IFMT
Ë=
_S_IFIFO
 )

	)

66 #i‚de‡
°©


67 
	#°©
 
_°©


	)

69 #i‚de‡
fd›í


70 
	#fd›í
 
_fd›í


	)

72 #i‚de‡
›í


73 
	#›í
 
_›í


	)

75 #i‚de‡
O_RDONLY


76 
	#O_RDONLY
 
_O_RDONLY


	)

78 #i‚de‡
O_WRONLY


79 
	#O_WRONLY
 
_O_WRONLY


	)

81 #i‚de‡
O_CREAT


82 
	#O_CREAT
 
_O_CREAT


	)

86 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

90 
	gÆpha_num
[65] =

93 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

94 
	#PROTO
(
s
Ë
	)
s

96 
	#PROTO
(
s
Ë()

	)

103 
	$ENTER_NAMESPACE
(
dbgíssb
)

105 
	`ußge
();

106 *
	`≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
);

107 
Sìd
[];

117 
	$ív_c⁄fig
(*
v¨
, *
dÊt
)

119 *
ev¨
;

121 i‡((
ev¨
 = 
	`gëív
(
v¨
)Ë!
NULL
)

122  (
ev¨
);

124  (
dÊt
);

125 
	}
}

131 
	$yes_no
(*
¥om±
)

133 
ª∂y
[128];

135 #ifde‡
WIN32


137 #¥agm®
	`w¨nög
(
dißbÀ
:4127)

142 #ifde‡
WIN32


143 #¥agm®
	`w¨nög
(:4127)

145 
	`¥ötf
("%†[Y/N]: ", 
¥om±
);

146 
	`fgës
(
ª∂y
,128,
°dö
);

147 *
ª∂y
)

156 
	`¥ötf
("Pleaseánswer 'yes' or 'no'.\n");

159 
	}
}

167 
	$a_∫d
(
mö
, 
max
, 
cﬁumn
, *
de°
)

169 
i
,

170 
Àn
,

171 
ch¨_öt
;

173 
	`RANDOM
(
Àn
, 
mö
, 
max
, 
cﬁumn
);

174 
i
 = 0; i < 
Àn
; i++)

176 i‡(
i
 % 5 == 0)

177 
	`RANDOM
(
ch¨_öt
, 0, 
MAX_LONG
, 
cﬁumn
);

178 *(
de°
 + 
i
Ë
Æpha_num
[
ch¨_öt
 & 077];

179 
ch¨_öt
 >>= 6;

181 *(
de°
 + 
Àn
) = '\0';

182  (
Àn
);

183 
	}
}

191 
	$e_°r
(
di°ributi⁄
 *
d
, 
mö
, 
max
, 
°ªam
, *
de°
)

193 
°πmp
[
MAXAGG_LEN
 + 1];

194 
loc
;

195 
Àn
;

197 
	`a_∫d
(
mö
, 
max
, 
°ªam
, 
de°
);

198 
	`pick_°r
(
d
, 
°ªam
, 
°πmp
);

199 
Àn
 = 
	`°æí
(
°πmp
);

200 
	`RANDOM
(
loc
, 0, (
	`°æí
(
de°
Ë- 1 - 
Àn
), 
°ªam
);

201 
	`°∫˝y
(
de°
 + 
loc
, 
°πmp
, 
Àn
);

204 
	}
}

213 
	$pick_°r
(
di°ributi⁄
 *
s
, 
c
, *
èrgë
)

215 
i
 = 0;

216 
j
;

218 
	`RANDOM
(
j
, 1, 
s
->
li°
[s->
cou¡
 - 1].
weight
, 
c
);

219 
s
->
li°
[
i
].
weight
 < 
j
)

220 
i
++;

221 
	`°r˝y
(
èrgë
, 
s
->
li°
[
i
].
ãxt
);

222 (
i
);

223 
	}
}

229 
	$unjulün
(
d©e
)

231 
i
;

232 
ªs
 = 0;

234 
i
 = 
STARTDATE
 / 1000; i < 
d©e
 / 1000; i++)

235 
ªs
 +365 + 
	`LEAP
(
i
);

236 
ªs
 +
d©e
 % 1000 - 1;

238 (
ªs
);

239 
	}
}

242 
	$julün
(
d©e
)

244 
off£t
;

245 
ªsu…
;

246 
yr
;

247 
yíd
;

249 
off£t
 = 
d©e
 - 
STARTDATE
;

250 
ªsu…
 = 
STARTDATE
;

252 #ifde‡
WIN32


254 #¥agm®
	`w¨nög
(
dißbÀ
:4127)

259 #ifde‡
WIN32


260 #¥agm®
	`w¨nög
(:4127)

262 
yr
 = 
ªsu…
 / 1000;

263 
yíd
 = 
yr
 * 1000 + 365 + 
	`LEAP
(yr);

264 i‡(
ªsu…
 + 
off£t
 > 
yíd
)

266 
off£t
 -
yíd
 - 
ªsu…
 + 1;

267 
ªsu…
 += 1000;

273  (
ªsu…
 + 
off£t
);

274 
	}
}

281 
	$ªad_di°
(*
∑th
, *
«me
, 
di°ributi⁄
 *
èrgë
)

283 
FILE
 *
Â
;

284 
löe
[256],

285 
tokí
[256],

286 *
c
;

287 
weight
,

288 
cou¡
 = 0,

289 
«me_£t
 = 0;

291 i‡(
d_∑th
 =
NULL
)

293 
	`•rötf
(
löe
, "%s%c%s",

294 
	`ív_c⁄fig
((*)
CONFIG_TAG
, (*)
CONFIG_DFLT
), 
PATH_SEP
, 
∑th
);

295 
Â
 = 
	`f›í
(
löe
, "r");

296 
	`OPEN_CHECK
(
Â
, 
löe
);

300 
Â
 = 
	`f›í
(
d_∑th
, "r");

301 
	`OPEN_CHECK
(
Â
, 
d_∑th
);

303 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
)

305 i‡((
c
 = 
	`°rchr
(
löe
, '\n')Ë!
NULL
)

306 *
c
 = '\0';

307 i‡((
c
 = 
	`°rchr
(
löe
, '#')Ë!
NULL
)

308 *
c
 = '\0';

309 i‡(*
löe
 == '\0')

312 i‡(!
«me_£t
)

314 i‡(
	`dssˇ£cmp
(
	`°πok
(
löe
, "\n\t "), (*)"BEGIN"))

316 i‡(
	`dssˇ£cmp
(
	`°πok
(
NULL
, "\n\à"), 
«me
))

318 
«me_£t
 = 1;

323 i‡(!
	`ds¢ˇ£cmp
(
löe
, (*)"END", 3))

325 
	`f˛o£
(
Â
);

330 i‡(
	`ssˇnf
(
löe
, "%[^|]|%ld", 
tokí
, &
weight
) != 2)

333 i‡(!
	`dssˇ£cmp
(
tokí
, (*)"count"))

335 
èrgë
->
cou¡
 = 
weight
;

336 
èrgë
->
li°
 =

337 (
£t_membî
 *)

338 
	`mÆloc
((
size_t
)(
weight
 * (
£t_membî
)));

339 
	`MALLOC_CHECK
(
èrgë
->
li°
);

340 
èrgë
->
max
 = 0;

343 
èrgë
->
li°
[
cou¡
].
ãxt
 =

344 (*Ë
	`mÆloc
((
size_t
)(
	`°æí
(
tokí
) + 1));

345 
	`MALLOC_CHECK
(
èrgë
->
li°
[
cou¡
].
ãxt
);

346 
	`°r˝y
(
èrgë
->
li°
[
cou¡
].
ãxt
, 
tokí
);

347 
èrgë
->
max
 +
weight
;

348 
èrgë
->
li°
[
cou¡
].
weight
 =Å¨gë->
max
;

350 
cou¡
 += 1;

353 i‡(
cou¡
 !
èrgë
->count)

355 
	`Ârötf
(
°dîr
, "RódÉº‹ o¿di° '%s'\n", 
«me
);

356 
	`f˛o£
(
Â
);

357 
	`exô
(1);

359 
èrgë
->
≥rmuã
 = (*)
NULL
;

360 
	`f˛o£
(
Â
);

362 
	}
}

368 
FILE
 *

369 
	$tbl_›í
(
tbl
, *
mode
)

371 
¥om±
[256];

372 
fuŒ∑th
[256];

373 
FILE
 *
f
;

374 
°©
 
f°©s
;

375 
ªtcode
;

378 i‡(*
tdefs
[
tbl
].
«me
 =
PATH_SEP
)

379 
	`°r˝y
(
fuŒ∑th
, 
tdefs
[
tbl
].
«me
);

381 
	`•rötf
(
fuŒ∑th
, "%s%c%s",

382 
	`ív_c⁄fig
((*)
PATH_TAG
, (*)
PATH_DFLT
), 
PATH_SEP
, 
tdefs
[
tbl
].
«me
);

384 
ªtcode
 = 
	`°©
(
fuŒ∑th
, &
f°©s
);

385 i‡(
ªtcode
 && (
î∫o
 !
ENOENT
))

387 
	`Ârötf
(
°dîr
, "°©(%sËÁûed.\n", 
fuŒ∑th
);

388 
	`exô
(-1);

390 i‡(
	`S_ISREG
(
f°©s
.
°_mode
Ë&& !
f‹˚
 && *
mode
 != 'r' )

392 
	`•rötf
(
¥om±
, "Dÿyou w™àtÿovîwrôê%†?", 
fuŒ∑th
);

393 i‡(!
	`yes_no
(
¥om±
))

394 
	`exô
(0);

397 i‡(
	`S_ISFIFO
(
f°©s
.
°_mode
))

399 
ªtcode
 =

400 
	`›í
(
fuŒ∑th
, ((*
mode
 ='r')?
O_RDONLY
:
O_WRONLY
)|
O_CREAT
);

401 
f
 = 
	`fd›í
(
ªtcode
, 
mode
);

405 #ifde‡
LINUX


410 
ªtcode
 =

411 
	`›í
(
fuŒ∑th
, ((*
mode
 ='r')?
O_RDONLY
:
O_WRONLY
)|
O_CREAT
|
O_LARGEFILE
,0644);

412 
f
 = 
	`fd›í
(
ªtcode
, 
mode
);

414 
f
 = 
	`f›í
(
fuŒ∑th
, 
mode
);

418 
	`OPEN_CHECK
(
f
, 
fuŒ∑th
);

419 i‡(
hódî
 && 
cﬁum«r
 && 
tdefs
[
tbl
].hódî !
NULL
)

420 
tdefs
[
tbl
].
	`hódî
(
f
);

422  (
f
);

423 
	}
}

431 
	$agg_°r
(
di°ributi⁄
 *
£t
, 
cou¡
, 
cﬁ
, *
de°
)

433 
di°ributi⁄
 *
d
;

434 
i
;

437 
d
 = 
£t
;

438 *
de°
 = '\0';

439 
i
=0; i < 
cou¡
; i++)

441 
	`°rˇt
(
de°
, 
	`DIST_MEMBER
(
£t
,*
	`≥rmuã_di°
(
d
, 
cﬁ
)));

443 
	`°rˇt
(
de°
, " ");

444 
d
 = (
di°ributi⁄
 *)
NULL
;

446 *(
de°
 + 
	`°æí
(dest) - 1) = '\0';

448 
	}
}

452 
	$ds¢ˇ£cmp
(*
s1
, *
s2
, 
n
)

454 ; 
n
 > 0; ++
s1
, ++
s2
, --n)

455 i‡(
	`tﬁowî
(*
s1
Ë!tﬁowî(*
s2
))

456  ((
	`tﬁowî
(*
s1
Ë<Åﬁowî(*
s2
)) ? -1 : 1);

457 i‡(*
s1
 == '\0')

460 
	}
}

463 
	$dssˇ£cmp
(*
s1
, *
s2
)

465 ; 
	`tﬁowî
(*
s1
Ë=tﬁowî(*
s2
); ++s1, ++s2)

466 i‡(*
s1
 == '\0')

468  ((
	`tﬁowî
(*
s1
Ë<Åﬁowî(*
s2
)) ? -1 : 1);

469 
	}
}

471 #i‚de‡
STDLIB_HAS_GETOPT


473 
	g›töd
 = 0;

474 
	g›ãº
 = 0;

475 *
	g›èrg
 = 
NULL
;

478 
	$gë›t
(
ac
, **
av
, *
›t
)

480 *
√xtch¨
 = 
NULL
;

481 *
˝
;

482 
hﬁd
;

484 i‡(
›èrg
 =
NULL
)

486 
›èrg
 = (*)
	`mÆloc
(
BUFSIZ
);

487 
	`MALLOC_CHECK
(
›èrg
);

490 i‡(!
√xtch¨
 || *nextchar == '\0')

492 
›töd
++;

493 i‡(
›töd
 =
ac
)

495 
√xtch¨
 = 
av
[
›töd
];

496 i‡(*
√xtch¨
 != '-')

498 
√xtch¨
 +=1;

501 i‡(
√xtch¨
 && *nextchar == '-')

503 
›töd
++;

508 
˝
 = 
	`°rchr
(
›t
, *
√xtch¨
);

509 
√xtch¨
 += 1;

510 i‡(
˝
 =
NULL
)

512 i‡(*(
˝
 + 1) == ':')

514 i‡(*
√xtch¨
)

516 
hﬁd
 = *
˝
;

517 
˝
 = 
›èrg
;

518 *
√xtch¨
)

519 *
˝
++ = *
√xtch¨
++;

520 *
˝
 = '\0';

521 *
˝
 = 
hﬁd
;

525 i‡(++
›töd
 =
ac
)

527 
	`°r˝y
(
›èrg
, 
av
[
›töd
]);

529 
√xtch¨
 = 
NULL
;

531 (*
˝
);

533 
	}
}

537 
	$mk_ascd©e
()

539 **
m
;

540 
dss_time_t
 
t
;

541 
i
;

543 
m
 = (**Ë
	`mÆloc
((
size_t
)(
TOTDATE
 *  (*)));

544 
	`MALLOC_CHECK
(
m
);

545 
i
 = 0; i < 
TOTDATE
; i++)

547 
m
[
i
] = (*)
	`mÆloc
(
DATE_LEN
 * ());

548 
	`MALLOC_CHECK
(
m
[
i
]);

549 
	`mk_time
(()(
i
 + 1), &
t
);

550 
	`°r˝y
(
m
[
i
], 
t
.
Æpha
);

553 (
m
);

554 
	}
}

564 
	$£t_°©e
(
èbÀ
, 
sf
, 
¥ocs
, 
°ï
, *
exåa_rows
)

566 
i
;

567 
rowcou¡
, 
ªmaödî
, 
ªsu…
;

569 i‡(
sf
 =0 || 
°ï
 == 0)

572 
rowcou¡
 = 
tdefs
[
èbÀ
].
ba£
 / 
¥ocs
;

573 i‡((
sf
 / 
¥ocs
Ë> ()
MAX_32B_SCALE
)

574 
	`INTERNAL_ERROR
("SCALE OVERFLOW. RE-RUN WITH MORE CHILDREN.");

575 
rowcou¡
 *
sf
;

576 
ªmaödî
 = (
tdefs
[
èbÀ
].
ba£
 % 
¥ocs
Ë* 
sf
;

577 
rowcou¡
 +
ªmaödî
 / 
¥ocs
;

578 
ªsu…
 = 
rowcou¡
;

579 
i
=0; i < 
°ï
 - 1; i++)

581 i‡(
èbÀ
 =
LINE
)

582 
tdefs
[
èbÀ
].
	`gí_£ed
(1, 
rowcou¡
);

584 
tdefs
[
èbÀ
].
	`gí_£ed
(0, 
rowcou¡
);

587 i‡(
tdefs
[
èbÀ
].
chûd
 !
NONE
)

588 
tdefs
[tdefs[
èbÀ
].
chûd
].
	`gí_£ed
(0,
rowcou¡
);

590 *
exåa_rows
 = 
ªmaödî
 % 
¥ocs
;

591 i‡(
°ï
 > 
¥ocs
)

592 
tdefs
[
èbÀ
].
	`gí_£ed
(0,*
exåa_rows
);

594 (
ªsu…
);

595 
	}
}

597 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_build.cpp

4 
	~<°dio.h
>

5 
	~<°rög.h
>

7 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

8 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

9 
	~"w‹klﬂd/ssb/dbgí/bcd2.h
"

11 #ifde‡
SSBM


13 
	~<˘ime
>

16 #i‚de‡
VMS


17 
	~<sys/ty≥s.h
>

20 #i‡
deföed
(
SUN
)

21 
	~<uni°d.h
>

24 #i‡
deföed
(
LINUX
)

25 
	~<uni°d.h
>

28 
	~<m©h.h
>

31 #ifde‡
ADHOC


32 
	~"w‹klﬂd/ssb/dbgí/adhoc.h
"

33 
adhoc_t
 
adhocs
[];

37 
	#LEAP_ADJ
(
yr
, 
m¡h
) \

38 ((
	`LEAP
(
yr
Ë&& (
m¡h
Ë>2Ë? 1 : 0)

	)

39 
	#JDAY_BASE
 8035

	)

40 
	#JMNTH_BASE
 (-70 * 12Ë

	)

41 
	#JDAY
(
d©e
Ë((d©eË- 
STARTDATE
 + 
JDAY_BASE
 + 1)

	)

42 
	#PART_SUPP_BRIDGE
(
tgt
, 
p
, 
s
) \

44 
tŸ_s˙t
 = 
tdefs
[
SUPP
].
ba£
 * 
sˇÀ
; \

45 
tgt
 = (
p
 + 
s
 * (
tŸ_s˙t
 / 
SUPP_PER_PART
 + \

46 (Ë((
p
 - 1Ë/ 
tŸ_s˙t
))) %Åot_scnt + 1; \

47 }

	)

48 
	#RPRICE_BRIDGE
(
tgt
, 
p
Ëtgà
	`Ωb_routöe
’)

	)

49 
	#V_STR
(
avg
, 
sd
, 
tgt
Ë
	`a_∫d
(()◊vg * 
V_STR_LOW
), \

50 ()(
avg
 * 
V_STR_HGH
), 
sd
, 
tgt
)

	)

51 
	#TEXT
(
avg
, 
sd
, 
tgt
) \

52 
	`dbg_ãxt
(
tgt
, ()(
avg
 * 
V_STR_LOW
),()◊vg * 
V_STR_HGH
), 
sd
)

	)

56 
	$ENTER_NAMESPACE
(
dbgíssb
)

58 **
asc_d©e
 = 
NULL
;

60 
gí_ph⁄e
 
	`PROTO
((
öd
, *
èrgë
, 
£ed
));

62 #ifde‡
SSBM


63 
gí_ˇãg‹y
 
	`PROTO
((*
èrgë
, 
£ed
));

64 
gí_côy
 
	`PROTO
((*
côyName
, *
«ti⁄Name
));

65 
gí_£as⁄
 
	`PROTO
((* 
de°
,
m⁄th
,
day
));

66 
is_œ°_day_ö_m⁄th
 
	`PROTO
((
yór
,
m⁄th
,
day
));

67 
gí_hﬁiday_Ê
 
	`PROTO
((* 
de°
, 
m⁄th
, 
day
));

68 
gí_côy
 
	`PROTO
((*
côyName
, *
«ti⁄Name
));

69 
gí_cﬁ‹
 
	`PROTO
((* 
sour˚
, * 
de°
));

74 
	$Ωb_routöe
(
p
)

76 
¥i˚
;

77 
¥i˚
 = 90000;

78 
¥i˚
 +(
p
/10) % 20001;

79 
¥i˚
 +(
p
 % 1000) * 100;

81 (
¥i˚
);

82 
	}
}

85 
	$gí_ph⁄e
(
öd
, *
èrgë
, 
£ed
)

87 
acode
,

88 
exchg
,

89 
numbî
;

91 
	`RANDOM
(
acode
, 100, 999, 
£ed
);

92 
	`RANDOM
(
exchg
, 100, 999, 
£ed
);

93 
	`RANDOM
(
numbî
, 1000, 9999, 
£ed
);

94 
	`•rötf
(
èrgë
, "%02ld", 10 + (
öd
 % 
NATIONS_MAX
));

95 
	`•rötf
(
èrgë
 + 3, "%03ld", 
acode
);

96 
	`•rötf
(
èrgë
 + 7, "%03ld", 
exchg
);

97 
	`•rötf
(
èrgë
 + 11, "%04ld", 
numbî
);

98 
èrgë
[2] =Åarget[6] =Åarget[10] = '-';

100 
	}
}

103 
	$gí_ˇãg‹y
(*
èrgë
, 
£ed
){

104 
num1
,
num2
;

105 
	`RANDOM
(
num1
,1,5,
£ed
);

106 
	`RANDOM
(
num2
,1,5,
£ed
);

107 
	`°r˝y
(
èrgë
,"MFGR");

108 
	`•rötf
(
èrgë
 + 4, "%01ld", 
num1
);

109 
	`•rötf
(
èrgë
 + 5, "%01ld", 
num2
);

111 
	}
}

113 #ifde‡
SSBM


114 
	$mk_cu°
(
n_cu°
, 
cu°omî_t
 *
c
)

116 
i
;

117 
bInô
 = 0;

119 !
bInô
) {

120 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_cust ..\n");

121 
bInô
 = 1;

124 
c
->
cu°key
 = 
n_cu°
;

125 
	`•rötf
(
c
->
«me
, 
C_NAME_FMT
, 
C_NAME_TAG
, 
n_cu°
);

126 
c
->
Æí
 = 
	`V_STR
(
C_ADDR_LEN
, 
C_ADDR_SD
, c->
addªss
);

127 
	`RANDOM
(
i
, 0, 
«ti⁄s
.
cou¡
-1, 
C_NTRG_SD
);

128 
	`°r˝y
(
c
->
«ti⁄_«me
,
«ti⁄s
.
li°
[
i
].
ãxt
);

129 
	`°r˝y
(
c
->
ªgi⁄_«me
,
ªgi⁄s
.
li°
[
«ti⁄s
.li°[
i
].
weight
].
ãxt
);

130 
	`gí_côy
(
c
->
côy
,c->
«ti⁄_«me
);

131 
	`gí_ph⁄e
(
i
, 
c
->
ph⁄e
, ()
C_PHNE_SD
);

132 
	`pick_°r
(&
c_m£g_£t
, 
C_MSEG_SD
, 
c
->
mkt£gmít
);

134 
	}
}

138 
	$mk_cu°
(
n_cu°
, 
cu°omî_t
 *
c
)

140 
i
;

142 
c
->
cu°key
 = 
n_cu°
;

143 
	`•rötf
(
c
->
«me
, 
C_NAME_FMT
, 
C_NAME_TAG
, 
n_cu°
);

144 
c
->
Æí
 = 
	`V_STR
(
C_ADDR_LEN
, 
C_ADDR_SD
, c->
addªss
);

145 
	`RANDOM
(
i
, 0, (
«ti⁄s
.
cou¡
 - 1), 
C_NTRG_SD
);

146 
c
->
«ti⁄_code
 = 
i
;

147 
	`gí_ph⁄e
(
i
, 
c
->
ph⁄e
, ()
C_PHNE_SD
);

148 
	`RANDOM
(
c
->
ac˘bÆ
, 
C_ABAL_MIN
, 
C_ABAL_MAX
, 
C_ABAL_SD
);

149 
	`pick_°r
(&
c_m£g_£t
, 
C_MSEG_SD
, 
c
->
mkt£gmít
);

150 
c
->
˛í
 = 
	`TEXT
(
C_CMNT_LEN
, 
C_CMNT_SD
, c->
commít
);

153 
	}
}

160 
	$mk_•¨£
 (
DSS_HUGE
 
i
, DSS_HUGE *
ok
, 
£q
)

162 #i‚de‡
SUPPORT_64BITS


163 i‡(
sˇÀ
 < 
MAX_32B_SCALE
)

165 
	`ez_•¨£
(
i
, 
ok
, 
£q
);

166 #i‚de‡
SUPPORT_64BITS


168 
	`hd_•¨£
(
i
, 
ok
, 
£q
);

171 
	}
}

178 
	$ez_•¨£
(
DSS_HUGE
 
i
, DSS_HUGE *
ok
, 
£q
)

180 
low_bôs
;

183 *
ok
 = 
i
;

184 
low_bôs
 = ()(
i
 & ((1 << 
SPARSE_KEEP
) - 1));

185 *
ok
 = *ok >> 
SPARSE_KEEP
;

186 *
ok
 = *ok << 
SPARSE_BITS
;

187 *
ok
 +
£q
;

188 *
ok
 = *ok << 
SPARSE_KEEP
;

189 *
ok
 +
low_bôs
;

192 
	}
}

194 #i‚de‡
SUPPORT_64BITS


196 
	$hd_•¨£
(
DSS_HUGE
 
i
, DSS_HUGE *
ok
, 
£q
)

198 
low_mask
, 
£q_mask
;

199 
öô
 = 0;

200 
DSS_HUGE
 *
ba£
, *
ªs
;

202 i‡(
öô
 == 0)

204 
	`INIT_HUGE
(
ba£
);

205 
	`INIT_HUGE
(
ªs
);

206 
öô
 = 1;

209 
low_mask
 = (1 << 
SPARSE_KEEP
) - 1;

210 
£q_mask
 = (1 << 
SPARSE_BITS
) - 1;

211 
	`bö_bcd2
(
i
, 
ba£
, base + 1);

212 
	`HUGE_SET
 (
ba£
, 
ªs
);

213 
	`HUGE_DIV
 (
ªs
, 1 << 
SPARSE_KEEP
);

214 
	`HUGE_MUL
 (
ªs
, 1 << 
SPARSE_BITS
);

215 
	`HUGE_ADD
 (
ªs
, 
£q
,Ñes);

216 
	`HUGE_MUL
 (
ªs
, 1 << 
SPARSE_KEEP
);

217 
	`HUGE_ADD
 (
ªs
, *
ba£
 & 
low_mask
,Ñes);

218 
	`bcd2_bö
 (&
low_mask
, *
ªs
);

219 
	`bcd2_bö
 (&
£q_mask
, *(
ªs
 + 1));

220 *
ok
 = 
low_mask
;

221 *(
ok
 + 1Ë
£q_mask
;

223 
	}
}

226 
	$‰ì_asc_d©e
()

228 
uöt
 
i
=0; i<
TOTDATE
; i++) {

229 
	`‰ì
 (
asc_d©e
[
i
]);

231 
	`‰ì
(
asc_d©e
);

232 
asc_d©e
=
NULL
;

233 
	}
}

235 #ifde‡
SSBM


237 
	$mk_‹dî
(
ödex
, 
‹dî_t
 *
o
, 
upd_num
)

239 
l˙t
;

240 
Ωri˚
;

241 
o˙t
;

242 
tmp_d©e
;

243 
c_d©e
;

244 
˛k_num
;

248 **
mk_ascd©e
 
	`PROTO
(());

249 
dñè
 = 1;

251 
bInô
 = 0;

254 !
bInô
) {

255 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_order ..\n");

257 
bInô
 = 1;

260 i‡(
asc_d©e
 =
NULL
) {

261 
asc_d©e
 = 
	`mk_ascd©e
();

264 
	`RANDOM
(
tmp_d©e
, 
O_ODATE_MIN
, 
O_ODATE_MAX
, 
O_ODATE_SD
);

265 
	`°r˝y
(
o
->
od©e
, 
asc_d©e
[
tmp_d©e
 - 
STARTDATE
]);

269 
	`mk_•¨£
 (
ödex
, 
o
->
okey
, 0);

271 
	`RANDOM
(
o
->
cu°key
, 
O_CKEY_MIN
, 
O_CKEY_MAX
, 
O_CKEY_SD
);

272 
o
->
cu°key
 % 
CUST_MORTALITY
 == 0)

274 
o
->
cu°key
 +
dñè
;

275 
o
->
cu°key
 = 
	`MIN
(o->cu°key, 
O_CKEY_MAX
);

276 
dñè
 *= -1;

279 
	`pick_°r
(&
o_¥i‹ôy_£t
, 
O_PRIO_SD
, 
o
->
›ri‹ôy
);

280 
	`RANDOM
(
˛k_num
, 1, 
	`MAX
((
sˇÀ
 * 
O_CLRK_SCL
), O_CLRK_SCL), 
O_CLRK_SD
);

281 
o
->
•ri‹ôy
 = 0;

283 
o
->
tŸÆ¥i˚
 = 0;

284 
o˙t
 = 0;

286 
	`RANDOM
(
o
->
löes
, 
O_LCNT_MIN
, 
O_LCNT_MAX
, 
O_LCNT_SD
);

287 
l˙t
 = 0;Ü˙à< 
o
->
löes
;Ücnt++)

290 
	`HUGE_SET
(
o
->
okey
, o->
löe‹dîs
[
l˙t
].okey);

291 
o
->
löe‹dîs
[
l˙t
].
löíumbî
 =Ücnt + 1;

292 
o
->
löe‹dîs
[
l˙t
].
cu°key
 = o->custkey;

293 
	`RANDOM
(
o
->
löe‹dîs
[
l˙t
].
∑πkey
, 
L_PKEY_MIN
, 
L_PKEY_MAX
, 
L_PKEY_SD
);

294 
	`RANDOM
(
o
->
löe‹dîs
[
l˙t
].
suµkey
, 
L_SKEY_MIN
, 
L_SKEY_MAX
, 
L_SKEY_SD
);

296 
	`RANDOM
(
o
->
löe‹dîs
[
l˙t
].
qu™tôy
, 
L_QTY_MIN
, 
L_QTY_MAX
, 
L_QTY_SD
);

297 
	`RANDOM
(
o
->
löe‹dîs
[
l˙t
].
discou¡
, 
L_DCNT_MIN
, 
L_DCNT_MAX
, 
L_DCNT_SD
);

298 
	`RANDOM
(
o
->
löe‹dîs
[
l˙t
].
èx
, 
L_TAX_MIN
, 
L_TAX_MAX
, 
L_TAX_SD
);

300 
	`°r˝y
(
o
->
löe‹dîs
[
l˙t
].
‹dîd©e
,o->
od©e
);

302 
	`°r˝y
(
o
->
löe‹dîs
[
l˙t
].
›ri‹ôy
,o->opriority);

303 
o
->
löe‹dîs
[
l˙t
].
shù_¥i‹ôy
 = o->
•ri‹ôy
;

305 
	`RANDOM
(
c_d©e
, 
L_CDTE_MIN
, 
L_CDTE_MAX
, 
L_CDTE_SD
);

306 
c_d©e
 +
tmp_d©e
;

307 
	`°r˝y
(
o
->
löe‹dîs
[
l˙t
].
commô_d©e
, 
asc_d©e
[
c_d©e
 - 
STARTDATE
]);

309 
	`pick_°r
(&
l_smode_£t
, 
L_SMODE_SD
, 
o
->
löe‹dîs
[
l˙t
].
shùmode
);

311 
	`RPRICE_BRIDGE
–
Ωri˚
, 
o
->
löe‹dîs
[
l˙t
].
∑πkey
);

312 
o
->
löe‹dîs
[
l˙t
].
exãnded_¥i˚
 = 
Ωri˚
 * o->löe‹dîs[l˙t].
qu™tôy
;

313 
o
->
löe‹dîs
[
l˙t
].
ªvíue
 = o->löe‹dîs[l˙t].
exãnded_¥i˚
 * (()100-o->löe‹dîs[l˙t].
discou¡
)/()
PENNIES
;

316 
o
->
löe‹dîs
[
l˙t
].
suµ_co°
 = 6 * 
Ωri˚
 /10;

318 
o
->
tŸÆ¥i˚
 +=

319 ((
o
->
löe‹dîs
[
l˙t
].
exãnded_¥i˚
 *

320 (()100 - 
o
->
löe‹dîs
[
l˙t
].
discou¡
)Ë/ ()
PENNIES
 ) *

321 (()100 + 
o
->
löe‹dîs
[
l˙t
].
èx
)

322 / ()
PENNIES
;

325 
l˙t
 = 0;Ü˙à< 
o
->
löes
;Ücnt++)

327 
o
->
löe‹dîs
[
l˙t
].
‹dî_tŸÆ¥i˚
 = o->
tŸÆ¥i˚
;

340 
	}
}

343 
	$mk_‹dî
(
ödex
, 
‹dî_t
 *
o
, 
upd_num
)

345 
l˙t
;

346 
Ωri˚
;

347 
o˙t
;

348 
tmp_d©e
;

349 
s_d©e
;

350 
r_d©e
;

351 
c_d©e
;

352 
˛k_num
;

353 
suµ_num
;

354 **
asc_d©e
 = 
NULL
;

355 
tmp_°r
[2];

356 **
mk_ascd©e
 
	`PROTO
(());

357 
dñè
 = 1;

359 i‡(
asc_d©e
 =
NULL
)

360 
asc_d©e
 = 
	`mk_ascd©e
();

361 
	`mk_•¨£
 (
ödex
, 
o
->
okey
,

362 (
upd_num
 =0Ë? 0 : 1 + upd_num / (10000 / 
ª‰esh
));

363 
	`RANDOM
(
o
->
cu°key
, 
O_CKEY_MIN
, 
O_CKEY_MAX
, 
O_CKEY_SD
);

364 
o
->
cu°key
 % 
CUST_MORTALITY
 == 0)

366 
o
->
cu°key
 +
dñè
;

367 
o
->
cu°key
 = 
	`MIN
(o->cu°key, 
O_CKEY_MAX
);

368 
dñè
 *= -1;

372 
	`RANDOM
(
tmp_d©e
, 
O_ODATE_MIN
, 
O_ODATE_MAX
, 
O_ODATE_SD
);

373 
	`°r˝y
(
o
->
od©e
, 
asc_d©e
[
tmp_d©e
 - 
STARTDATE
]);

375 
	`pick_°r
(&
o_¥i‹ôy_£t
, 
O_PRIO_SD
, 
o
->
›ri‹ôy
);

376 
	`RANDOM
(
˛k_num
, 1, 
	`MAX
((
sˇÀ
 * 
O_CLRK_SCL
), O_CLRK_SCL), 
O_CLRK_SD
);

377 
	`•rötf
(
o
->
˛îk
, 
O_CLRK_FMT
,

378 
O_CLRK_TAG
,

379 
˛k_num
);

380 
o
->
˛í
 = 
	`TEXT
(
O_CMNT_LEN
, 
O_CMNT_SD
, o->
commít
);

381 #ifde‡
DEBUG


382 i‡(
o
->
˛í
 > 
O_CMNT_MAX
Ë
	`Ârötf
(
°dîr
, "commíàîr‹: O%d\n", 
ödex
);

384 
o
->
•ri‹ôy
 = 0;

386 
o
->
tŸÆ¥i˚
 = 0;

387 
o
->
‹dî°©us
 = 'O';

388 
o˙t
 = 0;

390 
	`RANDOM
(
o
->
löes
, 
O_LCNT_MIN
, 
O_LCNT_MAX
, 
O_LCNT_SD
);

391 
l˙t
 = 0;Ü˙à< 
o
->
löes
;Ücnt++)

393 
	`HUGE_SET
(
o
->
okey
, o->
l
[
l˙t
].okey);

394 
o
->
l
[
l˙t
].lcnt =Ücnt + 1;

395 
	`RANDOM
(
o
->
l
[
l˙t
].
qu™tôy
, 
L_QTY_MIN
, 
L_QTY_MAX
, 
L_QTY_SD
);

396 
	`RANDOM
(
o
->
l
[
l˙t
].
discou¡
, 
L_DCNT_MIN
, 
L_DCNT_MAX
, 
L_DCNT_SD
);

397 
	`RANDOM
(
o
->
l
[
l˙t
].
èx
, 
L_TAX_MIN
, 
L_TAX_MAX
, 
L_TAX_SD
);

398 
	`pick_°r
(&
l_ö°ru˘_£t
, 
L_SHIP_SD
, 
o
->
l
[
l˙t
].
shùö°ru˘
);

399 
	`pick_°r
(&
l_smode_£t
, 
L_SMODE_SD
, 
o
->
l
[
l˙t
].
shùmode
);

400 
o
->
l
[
l˙t
].
˛í
 = 
	`TEXT
(
L_CMNT_LEN
, 
L_CMNT_SD
, o->l[l˙t].
commít
);

401 
	`RANDOM
(
o
->
l
[
l˙t
].
∑πkey
, 
L_PKEY_MIN
, 
L_PKEY_MAX
, 
L_PKEY_SD
);

402 
	`RPRICE_BRIDGE
–
Ωri˚
, 
o
->
l
[
l˙t
].
∑πkey
);

403 
	`RANDOM
(
suµ_num
, 0, 3, 
L_SKEY_SD
);

404 
	`PART_SUPP_BRIDGE
–
o
->
l
[
l˙t
].
suµkey
, o->l[l˙t].
∑πkey
, 
suµ_num
);

405 
o
->
l
[
l˙t
].
ïri˚
 = 
Ωri˚
 * o->l[l˙t].
qu™tôy
;

407 
o
->
tŸÆ¥i˚
 +=

408 ((
o
->
l
[
l˙t
].
ïri˚
 *

409 (()100 - 
o
->
l
[
l˙t
].
discou¡
)Ë/ ()
PENNIES
 ) *

410 (()100 + 
o
->
l
[
l˙t
].
èx
)

411 / ()
PENNIES
;

413 
	`RANDOM
(
s_d©e
, 
L_SDTE_MIN
, 
L_SDTE_MAX
, 
L_SDTE_SD
);

414 
s_d©e
 +
tmp_d©e
;

415 
	`RANDOM
(
c_d©e
, 
L_CDTE_MIN
, 
L_CDTE_MAX
, 
L_CDTE_SD
);

416 
c_d©e
 +
tmp_d©e
;

417 
	`RANDOM
(
r_d©e
, 
L_RDTE_MIN
, 
L_RDTE_MAX
, 
L_RDTE_SD
);

418 
r_d©e
 +
s_d©e
;

421 
	`°r˝y
(
o
->
l
[
l˙t
].
sd©e
, 
asc_d©e
[
s_d©e
 - 
STARTDATE
]);

422 
	`°r˝y
(
o
->
l
[
l˙t
].
cd©e
, 
asc_d©e
[
c_d©e
 - 
STARTDATE
]);

423 
	`°r˝y
(
o
->
l
[
l˙t
].
rd©e
, 
asc_d©e
[
r_d©e
 - 
STARTDATE
]);

426 i‡(
	`julün
(
r_d©e
Ë<
CURRENTDATE
)

428 
	`pick_°r
(&
l_rÊag_£t
, 
L_RFLG_SD
, 
tmp_°r
);

429 
o
->
l
[
l˙t
].
rÊag
[0] = *
tmp_°r
;

432 
o
->
l
[
l˙t
].
rÊag
[0] = 'N';

434 i‡(
	`julün
(
s_d©e
Ë<
CURRENTDATE
)

436 
o˙t
++;

437 
o
->
l
[
l˙t
].
l°©us
[0] = 'F';

440 
o
->
l
[
l˙t
].
l°©us
[0] = 'O';

443 i‡(
o˙t
 > 0)

444 
o
->
‹dî°©us
 = 'P';

445 i‡(
o˙t
 =
o
->
löes
)

446 
o
->
‹dî°©us
 = 'F';

449 
	}
}

452 #ifde‡
SSBM


453 
	$mk_∑π
(
ödex
, 
∑π_t
 *
p
)

455 
mfgr
,
ˇt
,
b∫d
;

456 
bInô
 = 0;

457 
szF‹m©
[100];

458 
szBøndF‹m©
[100];

460 i‡(!
bInô
) {

461 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_part ..\n");

462 
bInô
 = 1;

465 
p
->
∑πkey
 = 
ödex
;

466 
	`agg_°r
(&
cﬁ‹s
, ()
P_NAME_SCL
, ()
P_NAME_SD
, 
p
->
«me
);

469 
p
->
˛í
 =
	`gí_cﬁ‹
’->
«me
,p->
cﬁ‹
);

472 
	`RANDOM
(
mfgr
, 
P_MFG_MIN
, 
P_MFG_MAX
, 
P_MFG_SD
);

473 
	`•rötf
(
p
->
mfgr
, "%s%ld", "MFGR#", mfgr);

475 
	`RANDOM
(
ˇt
, 
P_CAT_MIN
, 
P_CAT_MAX
, 
P_CAT_SD
);

476 
	`•rötf
(
p
->
ˇãg‹y
, "%s%ld",Ö->
mfgr
,
ˇt
);

478 
	`RANDOM
(
b∫d
, 
P_BRND_MIN
, 
P_BRND_MAX
, 
P_BRND_SD
);

479 
	`•rötf
(
p
->
bønd
,"%s%ld",p->
ˇãg‹y
,
b∫d
);

481 
p
->
éí
 = 
	`pick_°r
(&
p_ty≥s_£t
, 
P_TYPE_SD
,Ö->
ty≥
);

482 
p
->
éí
 = 
	`°æí
(
p_ty≥s_£t
.
li°
[p->éí].
ãxt
);

483 
	`RANDOM
(
p
->
size
, 
P_SIZE_MIN
, 
P_SIZE_MAX
, 
P_SIZE_SD
);

485 
	`pick_°r
(&
p_˙å_£t
, 
P_CNTR_SD
, 
p
->
c⁄èöî
);

489 
	}
}

492 
	$mk_∑π
(
ödex
, 
∑π_t
 *
p
)

494 
ãmp
;

495 
¢um
;

496 
b∫d
;

498 
p
->
∑πkey
 = 
ödex
;

499 
	`agg_°r
(&
cﬁ‹s
, ()
P_NAME_SCL
, ()
P_NAME_SD
, 
p
->
«me
);

500 
	`RANDOM
(
ãmp
, 
P_MFG_MIN
, 
P_MFG_MAX
, 
P_MFG_SD
);

501 
	`•rötf
(
p
->
mfgr
, 
P_MFG_FMT
, 
P_MFG_TAG
, 
ãmp
);

502 
	`RANDOM
(
b∫d
, 
P_BRND_MIN
, 
P_BRND_MAX
, 
P_BRND_SD
);

503 
	`•rötf
(
p
->
bønd
, 
P_BRND_FMT
,

504 
P_BRND_TAG
,

505 (
ãmp
 * 10 + 
b∫d
));

506 
p
->
éí
 = 
	`pick_°r
(&
p_ty≥s_£t
, 
P_TYPE_SD
,Ö->
ty≥
);

507 
p
->
éí
 = 
	`°æí
(
p_ty≥s_£t
.
li°
[p->éí].
ãxt
);

508 
	`RANDOM
(
p
->
size
, 
P_SIZE_MIN
, 
P_SIZE_MAX
, 
P_SIZE_SD
);

509 
	`pick_°r
(&
p_˙å_£t
, 
P_CNTR_SD
, 
p
->
c⁄èöî
);

510 
	`RPRICE_BRIDGE
–
p
->
ªèû¥i˚
, 
ödex
);

511 
p
->
˛í
 = 
	`TEXT
(
P_CMNT_LEN
, 
P_CMNT_SD
,Ö->
commít
);

513 
¢um
 = 0; snum < 
SUPP_PER_PART
; snum++)

515 
p
->
s
[
¢um
].
∑πkey
 =Ö->partkey;

516 
	`PART_SUPP_BRIDGE
–
p
->
s
[
¢um
].
suµkey
, 
ödex
, snum);

517 
	`RANDOM
(
p
->
s
[
¢um
].
qty
, 
PS_QTY_MIN
, 
PS_QTY_MAX
, 
PS_QTY_SD
);

518 
	`RANDOM
(
p
->
s
[
¢um
].
sco°
, 
PS_SCST_MIN
, 
PS_SCST_MAX
, 
PS_SCST_SD
);

519 
p
->
s
[
¢um
].
˛í
 = 
	`TEXT
(
PS_CMNT_LEN
, 
PS_CMNT_SD
,Ö->s[¢um].
commít
);

522 
	}
}

526 #ifde‡
SSBM


528 
	$mk_suµ
(
ödex
, 
suµlõr_t
 *
s
)

530 
i
;

535 
s
->
suµkey
 = 
ödex
;

536 
	`•rötf
(
s
->
«me
, 
S_NAME_FMT
, 
S_NAME_TAG
, 
ödex
);

537 
s
->
Æí
 = 
	`V_STR
(
S_ADDR_LEN
, 
S_ADDR_SD
, s->
addªss
);

538 
	`RANDOM
(
i
, 0, 
«ti⁄s
.
cou¡
-1, 
S_NTRG_SD
);

539 
	`°r˝y
(
s
->
«ti⁄_«me
,
«ti⁄s
.
li°
[
i
].
ãxt
);

540 
	`°r˝y
(
s
->
ªgi⁄_«me
,
ªgi⁄s
.
li°
[
«ti⁄s
.li°[
i
].
weight
].
ãxt
);

541 
	`gí_côy
(
s
->
côy
,s->
«ti⁄_«me
);

542 
	`gí_ph⁄e
(
i
, 
s
->
ph⁄e
, ()
C_PHNE_SD
);

544 
	}
}

547 
	$mk_suµ
(
ödex
, 
suµlõr_t
 *
s
)

549 
i
,

550 
bad_¥ess
,

551 
noi£
,

552 
off£t
,

553 
ty≥
;

555 
s
->
suµkey
 = 
ödex
;

556 
	`•rötf
(
s
->
«me
, 
S_NAME_FMT
, 
S_NAME_TAG
, 
ödex
);

557 
s
->
Æí
 = 
	`V_STR
(
S_ADDR_LEN
, 
S_ADDR_SD
, s->
addªss
);

558 
	`RANDOM
(
i
, 0, 
«ti⁄s
.
cou¡
 - 1, 
S_NTRG_SD
);

559 
s
->
«ti⁄_code

i
;

560 
	`gí_ph⁄e
(
i
, 
s
->
ph⁄e
, 
S_PHNE_SD
);

561 
	`RANDOM
(
s
->
ac˘bÆ
, 
S_ABAL_MIN
, 
S_ABAL_MAX
, 
S_ABAL_SD
);

563 
s
->
˛í
 = 
	`TEXT
(
S_CMNT_LEN
, 
S_CMNT_SD
, s->
commít
);

567 
	`RANDOM
(
bad_¥ess
, 1, 10000, 
BBB_CMNT_SD
);

568 
	`RANDOM
(
ty≥
, 0, 100, 
BBB_TYPE_SD
);

569 
	`RANDOM
(
noi£
, 0, (
s
->
˛í
 - 
BBB_CMNT_LEN
), 
BBB_JNK_SD
);

570 
	`RANDOM
(
off£t
, 0, (
s
->
˛í
 - (
BBB_CMNT_LEN
 + 
noi£
)),

571 
BBB_OFFSET_SD
);

572 i‡(
bad_¥ess
 <
S_CMNT_BBB
)

574 
ty≥
 = (ty≥ < 
BBB_DEADBEATS
) ?0:1;

575 
	`mem˝y
(
s
->
commít
 + 
off£t
, 
BBB_BASE
, 
BBB_BASE_LEN
);

576 i‡(
ty≥
 == 0)

577 
	`mem˝y
(
s
->
commít
 + 
BBB_BASE_LEN
 + 
off£t
 + 
noi£
,

578 
BBB_COMPLAIN
, 
BBB_TYPE_LEN
);

580 
	`mem˝y
(
s
->
commít
 + 
BBB_BASE_LEN
 + 
off£t
 + 
noi£
,

581 
BBB_COMMEND
, 
BBB_TYPE_LEN
);

585 
	}
}

590 c⁄° *
	mmdes
;

591 
	mdays
;

592 
	md˙t
;

594 
	gm⁄ths
[] =

597 {
NULL
, 0, 0},

613 
	$mk_time
(
ödex
, 
dss_time_t
 *
t
)

615 
m
 = 0;

616 
y
;

617 
d
;

619 
t
->
timekey
 = 
ödex
 + 
JDAY_BASE
;

620 
y
 = 
	`julün
(
ödex
 + 
STARTDATE
 - 1) / 1000;

621 
d
 = 
	`julün
(
ödex
 + 
STARTDATE
 - 1) % 1000;

622 
d
 > 
m⁄ths
[
m
].
d˙t
 + 
	`LEAP_ADJ
(
y
, m))

623 
m
++;

624 
	`PR_DATE
(
t
->
Æpha
, 
y
, 
m
,

625 
d
 - 
m⁄ths
[
m
 - 1].
d˙t
 - ((
	`LEAP
(
y
) && m > 2) ? 1 : 0));

626 
t
->
yór
 = 1900 + 
y
;

627 
t
->
m⁄th
 = 
m
 + 12 * 
y
 + 
JMNTH_BASE
;

628 
t
->
wìk
 = (
d
 + 
T_START_DAY
 - 1) / 7 + 1;

629 
t
->
day
 = 
d
 - 
m⁄ths
[
m
 - 1].
d˙t
 - 
	`LEAP_ADJ
(
y
, m-1);

632 
	}
}

635 
	$mk_«ti⁄
(
ödex
, 
code_t
 *
c
)

637 
c
->
code
 = 
ödex
 - 1;

638 
c
->
ãxt
 = 
«ti⁄s
.
li°
[
ödex
 - 1].text;

639 
c
->
joö
 = 
«ti⁄s
.
li°
[
ödex
 - 1].
weight
;

640 
c
->
˛í
 = 
	`TEXT
(
N_CMNT_LEN
, 
N_CMNT_SD
, c->
commít
);

642 
	}
}

645 
	$mk_ªgi⁄
(
ödex
, 
code_t
 *
c
)

648 
c
->
code
 = 
ödex
 - 1;

649 
c
->
ãxt
 = 
ªgi⁄s
.
li°
[
ödex
 - 1].text;

650 
c
->
joö
 = 0;

651 
c
->
˛í
 = 
	`TEXT
(
R_CMNT_LEN
, 
R_CMNT_SD
, c->
commít
);

653 
	}
}

656 #ifde‡
SSBM


658 
	$gí_côy
(*
côyName
, *
«ti⁄Name
){

659 
i
=0;

660 
øndomPick
;

662 
∆í
 = 
	`°æí
(
«ti⁄Name
);

664 
	`°∫˝y
(
côyName
,
«ti⁄Name
,
CITY_FIX
-1);

666 if(
∆í
 < 
CITY_FIX
-1){

667 
i
 = 
∆í
 ; i< 
CITY_FIX
-1;i++)

668 
côyName
[
i
] = ' ';

670 
	`RANDOM
(
øndomPick
, 0, 9, 98);

672 
	`•rötf
(
côyName
+
CITY_FIX
-1,"%ld",
øndomPick
);

673 
côyName
[
CITY_FIX
] = '\0';

675 
	}
}

684 
	$gí_cﬁ‹
(* 
sour˚
, * 
de°
){

685 
i
 = 0,
j
=0;

686 
˛í
=0;

688 
sour˚
[
i
]!= ' ' ){

689 
de°
[
i
]=
sour˚
[i];

690 
i
++;

692 
de°
[
i
]='\0';

694 
i
++;

695 
sour˚
[
i
] != '\0'){

696 
sour˚
[
j
] = sour˚[
i
];

697 
j
++;

698 
i
++;

701 
sour˚
[
j
] = '\0';

703 
˛í
 = 
	`°æí
(
de°
);

704  
˛í
;

705 
	}
}

710 
	gdays_ö_a_m⁄th
[12]={31,28,31,30,31,30,31,31,30,31,30,31};

711 
	gdays_ö_a_m⁄th_l
[12]={31,29,31,30,31,30,31,31,30,31,30,31};

712 
£as⁄
 
	g£as⁄s
[]={

719 
hﬁiday
 
	ghﬁidays
[]={

732 c⁄° * 
	gm⁄th_«mes
[]={"January","February","March","April",

736 c⁄° * 
	gwìkday_«mes
[]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};

746 
	$mk_d©e
(
ödex
,
d©e_t
 *
d
)

748 
e•™
 = (
ödex
-1)*60*60*24;

750 
numD©eTime
 = 
D_STARTDATE
 + 
e•™
;

752 
tm
 *
loˇlTime
 = 
°d
::
	`loˇ…ime
(&
numD©eTime
);

755 
d
->
daynumöwìk
=(()
loˇlTime
->
tm_wday
+1)%7+1;

756 
d
->
m⁄thnumöyór
=()
loˇlTime
->
tm_m⁄
+1;

757 
	`°∫˝y
(
d
->
dayofwìk
, 
wìkday_«mes
[d->
daynumöwìk
-1],
D_DAYWEEK_LEN
+1);

758 
	`°∫˝y
(
d
->
m⁄th
,
m⁄th_«mes
[d->
m⁄thnumöyór
-1],
D_MONTH_LEN
+1);

759 
d
->
yór
=()
loˇlTime
->
tm_yór
 + 1900;

760 
d
->
daynumöm⁄th
=()
loˇlTime
->
tm_mday
;

761 
d
->
yórm⁄thnum
=d->
yór
 * 100 + d->
m⁄thnumöyór
;

763 
	`•rötf
(
d
->
yórm⁄th
,"%.3s%d",d->
m⁄th
,d->
yór
);

764 
	`•rötf
(
d
->
d©e
,"%†%d, %d",d->
m⁄th
,d->
daynumöm⁄th
,d->
yór
);

766 
d
->
d©ekey
 = d->
yór
*10000+d->
m⁄thnumöyór
*100+ d->
daynumöm⁄th
;

768 
d
->
daynumöyór
=()
loˇlTime
->
tm_yday
+1;

769 
d
->
wìknumöyór
 = d->
daynumöyór
/7 + 1;

771 if(
d
->
daynumöwìk
 ==7){

772 
d
->
œ°dayöwìkÊ
[0]='1';

775 
d
->
œ°dayöwìkÊ
[0]='0';

777 
d
->
œ°dayöwìkÊ
[1]='\0';

779 if(
	`is_œ°_day_ö_m⁄th
(
d
->
yór
,d->
m⁄thnumöyór
,d->
daynumöm⁄th
)==1){

780 
d
->
œ°dayöm⁄thÊ
[0]= '0';

782 
d
->
œ°dayöm⁄thÊ
[0]= '1';

784 
d
->
œ°dayöm⁄thÊ
[1]='\0';

786 if(
d
->
daynumöwìk
!=1 && d->daynuminweek!=7){

787 
d
->
wìkdayÊ
[0]='1';

790 
d
->
wìkdayÊ
[0]='0';

793 
d
->
wìkdayÊ
[1]='\0';

795 
	`gí_£as⁄
(
d
->
£Œög£as⁄
,d->
m⁄thnumöyór
,d->
daynumöm⁄th
);

796 
d
->
¶í
 = 
	`°æí
(d->
£Œög£as⁄
);

797 
	`gí_hﬁiday_Ê
(
d
->
hﬁidayÊ
,d->
m⁄thnumöyór
,d->
daynumöm⁄th
);

799 
	}
}

801 
	$gí_hﬁiday_Ê
(* 
de°
, 
m⁄th
, 
day
){

802 
i
;

803 
i
 = 0; i< 
NUM_HOLIDAYS
; i++){

804 if(
hﬁidays
[
i
].
m⁄th
 =m⁄th && hﬁidays[i].
day
 == day){

805 
	`°r˝y
(
de°
,"1");

809 
	`°r˝y
(
de°
,"0");

811 
	}
}

815 
	$is_œ°_day_ö_m⁄th
(
yór
,
m⁄th
,
day
){

816 * 
days
;

817 if(
	`LEAP
(
yór
))

818 
days
 = 
days_ö_a_m⁄th_l
;

820 
days
 = 
days_ö_a_m⁄th
;

821 if(
day
 =
days
[
m⁄th
-1])  1;

823 
	}
}

825 
	$gí_£as⁄
(* 
de°
,
m⁄th
,
day
)

827 
i
;

828 
i
 =0;i<
NUM_SEASONS
;i++){

829 
£as⁄
 *
£as
;

830 
£as
 = &
£as⁄s
[
i
];

832 if(
m⁄th
>=
£as
->
°¨t_m⁄th
 && m⁄th<=£as->
íd_m⁄th
 &&

833 
day
 >
£as
->
°¨t_day
 && day <£as->
íd_day
){

834 
	`°r˝y
(
de°
, 
£as
->
«me
);

838 
	`°r˝y
(
de°
,"");

841 
	}
}

845 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_driver.cpp

4 
	#DECLARER


	)

5 
	#NO_FUNC
 ((*Ë()Ë
NULL


	)

6 
	#NO_LFUNC
 ((*Ë()Ë
NULL


	)

8 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

9 
	~<c°dlib
>

10 #i‡(
deföed
(
_POSIX_
)||!deföed(
WIN32
))

11 #i‚de‡
DOS


12 
	~<uni°d.h
>

13 
	~<gë›t.h
>

14 
	~<sys/waô.h
>

18 
	~<°dio.h
>

19 
	~<limôs.h
>

20 
	~<m©h.h
>

21 
	~<˘y≥.h
>

22 
	~<sig«l.h
>

23 
	~<°rög.h
>

24 
	~<î∫o.h
>

25 #ifde‡
HP


26 
	~<°rögs.h
>

28 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

29 
	~<¥o˚ss.h
>

30 #¥agm®
w¨nög
(
dißbÀ
:4201)

31 #¥agm®
w¨nög
(
dißbÀ
:4214)

32 #¥agm®
w¨nög
(
dißbÀ
:4514)

33 
	#WIN32_LEAN_AND_MEAN


	)

34 
	#NOATOM


	)

35 
	#NOGDICAPMASKS


	)

36 
	#NOMETAFILE


	)

37 
	#NOMINMAX


	)

38 
	#NOMSG


	)

39 
	#NOOPENFILE


	)

40 
	#NORASTEROPS


	)

41 
	#NOSCROLL


	)

42 
	#NOSOUND


	)

43 
	#NOSYSMETRICS


	)

44 
	#NOTEXTMETRIC


	)

45 
	#NOWH


	)

46 
	#NOCOMM


	)

47 
	#NOKANJI


	)

48 
	#NOMCX


	)

50 
	~"wödows.h
"

52 #¥agm®
w¨nög
(:4201)

53 #¥agm®
w¨nög
(:4214)

56 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

57 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

58 
	~"w‹klﬂd/ssb/dbgí/bcd2.h
"

60 
›töd
, 
›ãº
;

61 *
›èrg
;

64 
	$ENTER_NAMESPACE
(
dbgíssb
)

69 
	`ußge
 ();

70 
	`¥ï_dúe˘
 (*);

71 
	`˛o£_dúe˘
 ();

72 
	`kûl_lﬂd
 ();

73 
	`∂ﬂd
 (
tbl
);

74 
	`gí_tbl
 (
äum
, 
°¨t
, 
cou¡
, 
upd_num
);

75 
	`¥_dønge
 (
tbl
, 
mö
, 
˙t
, 
num
);

76 
	`£t_fûes
 (
t
, 
∂ﬂd
);

77 
	`∑πül
 (, );

81 
row˙t
 = 0, 
mörow
 = 0, 
upd_num
 = 0;

82 
Êt_sˇÀ
;

83 #i‡(
	`deföed
(
WIN32
)&&!deföed(
_POSIX_
))

84 *
•awn_¨gs
[25];

114 #ifde‡
SSBM


115 
	`¥_cu°
 (* 
c
, 
mode
);

116 
	`¥_∑π
 (* 
p
, 
mode
);

117 
	`¥_suµ
 (* 
s
, 
mode
);

118 
	`¥_löe
 (* 
o
, 
mode
);

120 
	`¥_cu°
 (* 
c
, 
mode
);

121 
	`¥_löe
 (* 
o
, 
mode
);

122 
	`¥_‹dî
 (* 
o
, 
mode
);

123 
	`¥_∑π
 (* 
p
, 
mode
);

124 
	`¥_psuµ
 (* 
p
, 
mode
);

125 
	`¥_suµ
 (* 
s
, 
mode
);

126 
	`¥_‹dî_löe
 (* 
o
, 
mode
);

127 
	`¥_∑π_psuµ
 (* 
p
, 
mode
);

128 
	`¥_«ti⁄
 (* 
c
, 
mode
);

129 
	`¥_ªgi⁄
 (* 
c
, 
mode
);

135 #ifde‡
SSBM


136 
	`ld_cu°
 (* 
c
, 
mode
);

137 
	`ld_∑π
 (* 
p
, 
mode
);

138 
	`ld_suµ
 (* 
s
, 
mode
);

141 
	`ld_löe
 (* 
o
, 
mode
);

142 
	`ld_‹dî
 (* 
o
, 
mode
);

145 
	`ld_cu°
 (* 
c
, 
mode
);

146 
	`ld_löe
 (* 
o
, 
mode
);

147 
	`ld_‹dî
 (* 
o
, 
mode
);

148 
	`ld_∑π
 (* 
p
, 
mode
);

149 
	`ld_psuµ
 (* 
p
, 
mode
);

150 
	`ld_suµ
 (* 
s
, 
mode
);

151 
	`ld_‹dî_löe
 (* 
o
, 
mode
);

152 
	`ld_∑π_psuµ
 (* 
p
, 
mode
);

153 
	`ld_«ti⁄
 (* 
c
, 
mode
);

154 
	`ld_ªgi⁄
 (* 
c
, 
mode
);

160 #ifde‡
SSBM


161 
	`sd_cu°
 (
chûd
, 
skù_cou¡
);

162 
	`sd_∑π
 (
chûd
, 
skù_cou¡
);

163 
	`sd_suµ
 (
chûd
, 
skù_cou¡
);

165 
	`sd_löe
 (
chûd
, 
skù_cou¡
);

166 
	`sd_‹dî
 (
chûd
, 
skù_cou¡
);

169 
	`sd_cu°
 (
chûd
, 
skù_cou¡
);

170 
	`sd_löe
 (
chûd
, 
skù_cou¡
);

171 
	`sd_‹dî
 (
chûd
, 
skù_cou¡
);

172 
	`sd_∑π
 (
chûd
, 
skù_cou¡
);

173 
	`sd_psuµ
 (
chûd
, 
skù_cou¡
);

174 
	`sd_suµ
 (
chûd
, 
skù_cou¡
);

175 
	`sd_‹dî_löe
 (
chûd
, 
skù_cou¡
);

176 
	`sd_∑π_psuµ
 (
chûd
, 
skù_cou¡
);

182 #ifde‡
SSBM


183 
	`hd_cu°
 (
FILE
 * 
f
);

184 
	`hd_∑π
 (
FILE
 * 
f
);

185 
	`hd_suµ
 (
FILE
 * 
f
);

186 
	`hd_löe
 (
FILE
 * 
f
);

189 
	`hd_cu°
 (
FILE
 * 
f
);

190 
	`hd_löe
 (
FILE
 * 
f
);

191 
	`hd_‹dî
 (
FILE
 * 
f
);

192 
	`hd_∑π
 (
FILE
 * 
f
);

193 
	`hd_psuµ
 (
FILE
 * 
f
);

194 
	`hd_suµ
 (
FILE
 * 
f
);

195 
	`hd_‹dî_löe
 (
FILE
 * 
f
);

196 
	`hd_∑π_psuµ
 (
FILE
 * 
f
);

197 
	`hd_«ti⁄
 (
FILE
 * 
f
);

198 
	`hd_ªgi⁄
 (
FILE
 * 
f
);

204 #ifde‡
SSBM


205 
	`vrf_cu°
 (* 
c
, 
mode
);

206 
	`vrf_∑π
 (* 
p
, 
mode
);

207 
	`vrf_suµ
 (* 
s
, 
mode
);

208 
	`vrf_löe
 (* 
o
, 
mode
);

209 
	`vrf_‹dî
 (* 
o
, 
mode
);

210 
	`vrf_d©e
 (*
d
 ,
mode
);

212 
	`vrf_cu°
 (* 
c
, 
mode
);

213 
	`vrf_löe
 (* 
o
, 
mode
);

214 
	`vrf_‹dî
 (* 
o
, 
mode
);

215 
	`vrf_∑π
 (* 
p
, 
mode
);

216 
	`vrf_psuµ
 (* 
p
, 
mode
);

217 
	`vrf_suµ
 (* 
s
, 
mode
);

218 
	`vrf_‹dî_löe
 (* 
o
, 
mode
);

219 
	`vrf_∑π_psuµ
 (* 
p
, 
mode
);

220 
	`vrf_«ti⁄
 (* 
c
, 
mode
);

221 
	`vrf_ªgi⁄
 (* 
c
, 
mode
);

225 #ifde‡
SSBM


226 
tdef
 
tdefs
[] =

229 {"∑π.tbl", "∑πÅabÀ", 200000, 
hd_∑π
,

230 {
¥_∑π
, 
ld_∑π
}, 
sd_∑π
, 
vrf_∑π
, 
PSUPP
, 0},

232 {"suµlõr.tbl", "suµlõr†èbÀ", 10000, 
hd_suµ
,

233 {
¥_suµ
, 
ld_suµ
}, 
sd_suµ
, 
vrf_suµ
, 
NONE
, 0},

235 {"cu°omî.tbl", "cu°omî†èbÀ", 30000, 
hd_cu°
,

236 {
¥_cu°
, 
ld_cu°
}, 
sd_cu°
, 
vrf_cu°
, 
NONE
, 0},

237 {"d©e.tbl","d©êèbÀ",2556,0,{
¥_d©e
,
ld_d©e
}, 0,
vrf_d©e
, 
NONE
,0},

240 {"löe‹dî.tbl", "löe‹dîÅabÀ", 150000, 
hd_löe
,

241 {
¥_löe
, 
ld_löe
}, 
sd_löe
, 
vrf_löe
, 
NONE
, 0},

246 
	}
};

250 
tdef
 
	gtdefs
[] =

252 {"∑π.tbl", "∑πÅabÀ", 200000, 
hd_∑π
,

253 {
¥_∑π
, 
ld_∑π
}, 
sd_∑π
, 
vrf_∑π
, 
PSUPP
, 0},

254 {"∑πsuµ.tbl", "∑πsuµlõ∏èbÀ", 200000, 
hd_psuµ
,

255 {
¥_psuµ
, 
ld_psuµ
}, 
sd_psuµ
, 
vrf_psuµ
, 
NONE
, 0},

256 {"suµlõr.tbl", "suµlõr†èbÀ", 10000, 
hd_suµ
,

257 {
¥_suµ
, 
ld_suµ
}, 
sd_suµ
, 
vrf_suµ
, 
NONE
, 0},

258 {"cu°omî.tbl", "cu°omî†èbÀ", 150000, 
hd_cu°
,

259 {
¥_cu°
, 
ld_cu°
}, 
sd_cu°
, 
vrf_cu°
, 
NONE
, 0},

260 {"‹dîs.tbl", "‹dîÅabÀ", 150000, 
hd_‹dî
,

261 {
¥_‹dî
, 
ld_‹dî
}, 
sd_‹dî
, 
vrf_‹dî
, 
LINE
, 0},

262 {"löeôem.tbl", "löeôemÅabÀ", 150000, 
hd_löe
,

263 {
¥_löe
, 
ld_löe
}, 
sd_löe
, 
vrf_löe
, 
NONE
, 0},

264 {"‹dîs.tbl", "‹dîs/löeôemÅabÀs", 150000, 
hd_‹dî_löe
,

265 {
¥_‹dî_löe
, 
ld_‹dî_löe
}, 
sd_‹dî
, 
vrf_‹dî_löe
, 
LINE
, 0},

266 {"∑π.tbl", "∑π/∑πsuµlõ∏èbÀs", 200000, 
hd_∑π_psuµ
,

267 {
¥_∑π_psuµ
, 
ld_∑π_psuµ
}, 
sd_∑π
, 
vrf_∑π_psuµ
, 
PSUPP
, 0},

268 {"«ti⁄.tbl", "«ti⁄ÅabÀ", 
NATIONS_MAX
, 
hd_«ti⁄
,

269 {
¥_«ti⁄
, 
ld_«ti⁄
}, 
NO_LFUNC
, 
vrf_«ti⁄
, 
NONE
, 0},

270 {"ªgi⁄.tbl", "ªgi⁄ÅabÀ", 
NATIONS_MAX
, 
hd_ªgi⁄
,

271 {
¥_ªgi⁄
, 
ld_ªgi⁄
}, 
NO_LFUNC
, 
vrf_ªgi⁄
, 
NONE
, 0},

274 *
	gpids
;

282 
	$°›_¥oc
 ()

284 
	`exô
 (0);

285 
	}
}

288 
	$kûl_lﬂd
 ()

290 
i
;

292 #i‡!
	`deföed
(
U2200
Ë&& !deföed(
DOS
)

293 
i
 = 0; i < 
chûdªn
; i++)

294 i‡(
pids
[
i
])

295 
	`KILL
 (
pids
[
i
]);

298 
	}
}

304 
	$£t_fûes
 (
i
, 
∂ﬂd
)

306 
löe
[80], *
√w_«me
;

308 i‡(
èbÀ
 & (1 << 
i
))

309 
chûd_èbÀ
:

311 i‡(
∂ﬂd
 != -1)

312 
	`•rötf
 (
löe
, "%s.%d", 
tdefs
[
i
].
«me
, 
∂ﬂd
);

315 
	`¥ötf
 ("EnterÇew destination for %s data: ",

316 
tdefs
[
i
].
«me
);

317 i‡(
	`fgës
 (
löe
,  (löe), 
°dö
Ë=
NULL
)

319 i‡((
√w_«me
 = 
	`°rchr
 (
löe
, '\n')Ë!
NULL
)

320 *
√w_«me
 = '\0';

321 i‡(
	`°æí
 (
löe
) == 0)

324 
√w_«me
 = (*Ë
	`mÆloc
 (
	`°æí
 (
löe
) + 1);

325 
	`MALLOC_CHECK
 (
√w_«me
);

326 
	`°r˝y
 (
√w_«me
, 
löe
);

327 
tdefs
[
i
].
«me
 = 
√w_«me
;

328 i‡(
tdefs
[
i
].
chûd
 !
NONE
)

330 
i
 = 
tdefs
[i].
chûd
;

331 
tdefs
[
i
].
chûd
 = 
NONE
;

332 
chûd_èbÀ
;

337 
	}
}

345 
	$lﬂd_di°s
 ()

347 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"p_˙å", &
p_˙å_£t
);

348 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"cﬁ‹s", &
cﬁ‹s
);

349 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"p_ty≥s", &
p_ty≥s_£t
);

350 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"«ti⁄s", &
«ti⁄s
);

351 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"ªgi⁄s", &
ªgi⁄s
);

352 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"o_oprio",

353 &
o_¥i‹ôy_£t
);

354 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"instruct",

355 &
l_ö°ru˘_£t
);

356 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"smode", &
l_smode_£t
);

357 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"category",

358 &
l_ˇãg‹y_£t
);

359 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"rÊag", &
l_rÊag_£t
);

360 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"m£gm¡", &
c_m£g_£t
);

363 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"nouns", &
nouns
);

364 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"vîbs", &
vîbs
);

365 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"adje˘ives", &
adje˘ives
);

366 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"advîbs", &
advîbs
);

367 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"auxûœrõs", &
auxûœrõs
);

368 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"ãrmö©‹s", &
ãrmö©‹s
);

369 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"¨ti˛es", &
¨ti˛es
);

370 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"¥ïosôi⁄s", &
¥ïosôi⁄s
);

371 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"gømm¨", &
gømm¨
);

372 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"≈", &
≈
);

373 
	`ªad_di°
 (
	`ív_c⁄fig
 ((*)
DIST_TAG
, (*)
DIST_DFLT
), (*)"vp", &
vp
);

375 
	}
}

381 
	$gí_tbl
 (
äum
, 
°¨t
, 
cou¡
, 
upd_num
)

383 
‹dî_t
 
o
;

384 
suµlõr_t
 
suµ
;

385 
cu°omî_t
 
cu°
;

386 
∑π_t
 
∑π
;

387 #ifde‡
SSBM


388 
d©e_t
 
dt
;

390 
code_t
 
code
;

392 
com∂ëed
 = 0;

393 
öô
 = 0;

394 
i
;

396 
rows_≥r_£gmít
=0;

397 
rows_this_£gmít
=-1;

398 
ªsiduÆ_rows
=0;

400 i‡(
ö£π_£gmíts
)

402 
rows_≥r_£gmít
 = 
cou¡
 / 
ö£π_£gmíts
;

403 
ªsiduÆ_rows
 = 
cou¡
 - (
rows_≥r_£gmít
 * 
ö£π_£gmíts
);

406 i‡(
öô
 == 0)

408 
	`INIT_HUGE
(
o
.
okey
);

409 
i
=0; i < 
O_LCNT_MAX
; i++)

410 #ifde‡
SSBM


411 
	`INIT_HUGE
(
o
.
löe‹dîs
[
i
].
okey
);

413 
	`INIT_HUGE
(
o
.
l
[
i
].
okey
);

415 
öô
 = 1;

418 
i
 = 
°¨t
; 
cou¡
; count--, i++)

420 
	`LIFENOISE
 (1000, 
i
);

421 
	`row_°¨t
(
äum
);

423 
äum
)

425 
LINE
:

426 #ifde‡
SSBM


428 
ORDER
:

429 
ORDER_LINE
:

431 
	`mk_‹dî
 (
i
, &
o
, 
upd_num
 % 10000);

433 i‡(
ö£π_£gmíts
 && (
upd_num
 > 0))

435 if((
upd_num
 / 10000Ë< 
ªsiduÆ_rows
)

437 if((++
rows_this_£gmít
Ë> 
rows_≥r_£gmít
)

439 
rows_this_£gmít
=0;

440 
upd_num
 += 10000;

445 if((++
rows_this_£gmít
Ë>
rows_≥r_£gmít
)

447 
rows_this_£gmít
=0;

448 
upd_num
 += 10000;

452 i‡(
£t_£eds
 == 0)

454 i‡(
vÆid©e
)

455 
tdefs
[
äum
].
	`vîify
((*)&
o
, 0);

457 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
o
, 
upd_num
);

460 
SUPP
:

461 
	`mk_suµ
 (
i
, &
suµ
);

462 i‡(
£t_£eds
 == 0)

464 i‡(
vÆid©e
)

465 
tdefs
[
äum
].
	`vîify
((*)&
suµ
, 0);

467 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
suµ
, 
upd_num
);

470 
CUST
:

471 
	`mk_cu°
 (
i
, &
cu°
);

472 i‡(
£t_£eds
 == 0)

474 i‡(
vÆid©e
)

475 
tdefs
[
äum
].
	`vîify
((*)&
cu°
, 0);

477 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
cu°
, 
upd_num
);

480 #ifde‡
SSBM


481 
PART
:

483 
PSUPP
:

484 
PART
:

485 
PART_PSUPP
:

487 
	`mk_∑π
 (
i
, &
∑π
);

488 i‡(
£t_£eds
 == 0)

490 i‡(
vÆid©e
)

491 
tdefs
[
äum
].
	`vîify
((*)&
∑π
, 0);

493 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
∑π
, 
upd_num
);

496 #ifde‡
SSBM


497 
DATE
:

498 
	`mk_d©e
 (
i
, &
dt
);

499 i‡(
£t_£eds
 == 0)

501 i‡(
vÆid©e
)

502 
tdefs
[
äum
].
	`vîify
((*)&
dt
, 0);

504 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
dt
, 0);

508 
NATION
:

509 
	`mk_«ti⁄
 (
i
, &
code
);

510 i‡(
£t_£eds
 == 0)

512 i‡(
vÆid©e
)

513 
tdefs
[
äum
].
	`vîify
((*)&
code
, 0);

515 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
code
, 0);

518 
REGION
:

519 
	`mk_ªgi⁄
 (
i
, &
code
);

520 i‡(
£t_£eds
 == 0)

522 i‡(
vÆid©e
)

523 
tdefs
[
äum
].
	`vîify
((*)&
code
, 0);

525 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] ((*)&
code
, 0);

530 
	`row_°›
(
äum
);

531 i‡(
£t_£eds
 && (
i
 % 
tdefs
[
äum
].
ba£
) < 2)

533 
	`¥ötf
("\nSìd†f‹ %†©Ñowcou¡ %ld\n", 
tdefs
[
äum
].
commít
, 
i
);

534 
	`dump_£eds
(
äum
);

537 
com∂ëed
 |1 << 
äum
;

538 
	}
}

543 
	$ußge
 ()

545 #ifde‡
SSBM


546 
	`Ârötf
 (
°dîr
, "%s\n%s\n\t%s\n%s %s\n\n",

554 
	`Ârötf
 (
°dîr
, "%s\n%s\n\t%s\n%s %s\n\n",

561 
	`Ârötf
 (
°dîr
, "-b <s> --Üoad distributions for <s>\n");

562 
	`Ârötf
 (
°dîr
, "-C <n> -- use <n>ÖrocessesÅo generate data\n");

563 
	`Ârötf
 (
°dîr
, " [Under DOS, must be used with -S]\n");

564 
	`Ârötf
 (
°dîr
, "-D -- do databaseÜoad inÜine\n");

565 
	`Ârötf
 (
°dîr
, "-d <n> -- split deletes between <n> files\n");

566 
	`Ârötf
 (
°dîr
, "-f -- force. OverwriteÉxisting files\n");

567 
	`Ârötf
 (
°dîr
, "-F -- generate flat files output\n");

568 
	`Ârötf
 (
°dîr
, "-h -- displayÅhis message\n");

569 
	`Ârötf
 (
°dîr
, "-i <n> -- split inserts between <n> files\n");

570 
	`Ârötf
 (
°dîr
, "-n <s> -- inlineÜoad into database <s>\n");

571 
	`Ârötf
 (
°dîr
, "-O d -- generate SQL syntax for deletes\n");

572 
	`Ârötf
 (
°dîr
, "-O f -- over-ride default output fileÇames\n");

573 
	`Ârötf
 (
°dîr
, "-O h -- output files with headers\n");

574 
	`Ârötf
 (
°dîr
, "-O m --Öroduce columnar output\n");

575 
	`Ârötf
 (
°dîr
, "-OÑ -- generate keyÑanges for deletes.\n");

576 
	`Ârötf
 (
°dîr
, "-O v -- Verify data set without generating it.\n");

577 
	`Ârötf
 (
°dîr
, "-q --Énable QUIET mode\n");

578 
	`Ârötf
 (
°dîr
, "-r <n> -- updatesÑefresh (n/100)%% ofÅhe\n");

579 
	`Ârötf
 (
°dîr
, " data set\n");

580 
	`Ârötf
 (
°dîr
, "-s <n> -- set Scale Factor (SF)Åo <n> \n");

581 
	`Ârötf
 (
°dîr
, "-S <n> -- buildÅhe <n>th step ofÅhe data/update set\n");

583 #ifde‡
SSBM


584 
	`Ârötf
 (
°dîr
, "-T c -- generate cutomers dimensionÅable ONLY\n");

585 
	`Ârötf
 (
°dîr
, "-TÖ -- generateÖarts dimensionÅable ONLY\n");

586 
	`Ârötf
 (
°dîr
, "-T s -- generate suppliers dimensionÅable ONLY\n");

587 
	`Ârötf
 (
°dîr
, "-T d -- generate date dimensionÅable ONLY\n");

588 
	`Ârötf
 (
°dîr
, "-TÜ -- generateÜineorder factÅable ONLY\n");

590 
	`Ârötf
 (
°dîr
, "-T c -- generate cutomers ONLY\n");

591 
	`Ârötf
 (
°dîr
, "-TÜ -- generateÇation/region ONLY\n");

592 
	`Ârötf
 (
°dîr
, "-T L -- generateÜineitem ONLY\n");

593 
	`Ârötf
 (
°dîr
, "-TÇ -- generateÇation ONLY\n");

594 
	`Ârötf
 (
°dîr
, "-T o -- generate orders/lineitem ONLY\n");

595 
	`Ârötf
 (
°dîr
, "-T O -- generate orders ONLY\n");

596 
	`Ârötf
 (
°dîr
, "-TÖ -- generateÖarts/partsupp ONLY\n");

597 
	`Ârötf
 (
°dîr
, "-T P -- generateÖarts ONLY\n");

598 
	`Ârötf
 (
°dîr
, "-TÑ -- generateÑegion ONLY\n");

599 
	`Ârötf
 (
°dîr
, "-T s -- generate suppliers ONLY\n");

600 
	`Ârötf
 (
°dîr
, "-T S -- generateÖartsupp ONLY\n");

603 
	`Ârötf
 (
°dîr
, "-U <s> -- generate <s> update sets\n");

604 
	`Ârötf
 (
°dîr
, "-v --Énable VERBOSE mode\n");

605 
	`Ârötf
 (
°dîr
,

607 
	`Ârötf
 (
°dîr
, "\tdbgen -vfF -s 1\n");

608 
	`Ârötf
 (
°dîr
, "\nTo generate updates forá SF=1 (1GB), use:\n");

609 
	`Ârötf
 (
°dîr
, "\tdbgen -v -U 1 -s 1\n");

610 
	}
}

619 
	$∑πül
 (
tbl
, 
s
)

621 
row˙t
;

622 
exåa
;

624 i‡(
vîbo£
 > 0)

626 
	`Ârötf
 (
°dîr
, "\tStartingÅoÜoad stage %d of %ld for %s...",

627 
s
, 
chûdªn
, 
tdefs
[
tbl
].
commít
);

630 i‡(
dúe˘
 == 0)

631 
	`£t_fûes
 (
tbl
, 
s
);

633 
row˙t
 = 
	`£t_°©e
(
tbl
, 
sˇÀ
, 
chûdªn
, 
s
, &
exåa
);

635 i‡(
s
 =
chûdªn
)

636 
	`gí_tbl
 (
tbl
, 
row˙t
 * (
s
 - 1Ë+ 1,Ñow˙à+ 
exåa
, 
upd_num
);

638 
	`gí_tbl
 (
tbl
, 
row˙t
 * (
s
 - 1Ë+ 1,Ñow˙t, 
upd_num
);

640 i‡(
vîbo£
 > 0)

641 
	`Ârötf
 (
°dîr
, "done.\n");

644 
	}
}

646 #i‚de‡
DOS


649 
	$∂ﬂd
 (
tbl
)

651 
c
 = 0, 
i
, 
°©us
;

653 i‡(
vîbo£
 > 0)

655 
	`Ârötf
 (
°dîr
, "Starting %ld childrenÅoÜoad %s",

656 
chûdªn
, 
tdefs
[
tbl
].
commít
);

658 
c
 = 0; c < 
chûdªn
; c++)

660 
pids
[
c
] = 
	`SPAWN
 ();

661 i‡(
pids
[
c
] == -1)

663 
	`≥º‹
 ("ChildÜoaderÇot created");

664 
	`kûl_lﬂd
 ();

665 
	`exô
 (-1);

667 i‡(
pids
[
c
] == 0)

669 
	`SET_HANDLER
 (
°›_¥oc
);

670 
vîbo£
 = 0;

671 
	`∑πül
 (
tbl
, 
c
+1);

672 
	`exô
 (0);

674 i‡(
vîbo£
 > 0)

675 
	`Ârötf
 (
°dîr
, ".");

678 i‡(
vîbo£
 > 0)

679 
	`Ârötf
 (
°dîr
, "waiting...");

681 
c
 = 
chûdªn
;

682 
c
)

684 
i
 = 
	`WAIT
 (&
°©us
, 
pids
[
c
 - 1]);

685 i‡(
i
 =-1 && 
chûdªn
)

687 i‡(
î∫o
 =
ECHILD
)

688 
	`Ârötf
 (
°dîr
, "\nCouldÇŸ waô o¿pid %d\n", 
pids
[
c
 - 1]);

689 i‡(
î∫o
 =
EINTR
)

690 
	`Ârötf
 (
°dîr
, "\nPro˚s†%d st›≥dábn‹mÆly\n", 
pids
[
c
 - 1]);

691 i‡(
î∫o
 =
EINVAL
)

692 
	`Ârötf
 (
°dîr
, "\nProgram bug\n");

694 i‡(! 
	`WIFEXITED
(
°©us
)) {

695 (Ë
	`Ârötf
(
°dîr
, "\nPro˚s†%d: ", 
i
);

696 i‡(
	`WIFSIGNALED
(
°©us
)) {

697 (Ë
	`Ârötf
(
°dîr
, "rcvd signal %d\n",

698 
	`WTERMSIG
(
°©us
));

699 } i‡(
	`WIFSTOPPED
(
°©us
)) {

700 (Ë
	`Ârötf
(
°dîr
, "stopped, signal %d\n",

701 
	`WSTOPSIG
(
°©us
));

705 
c
--;

708 i‡(
vîbo£
 > 0)

709 
	`Ârötf
 (
°dîr
, "done\n");

711 
	}
}

716 
	$¥o˚ss_›ti⁄s
 (
cou¡
, **
ve˘‹
)

718 
›ti⁄
;

720 (
›ti⁄
 = 
	`gë›t
 (
cou¡
, 
ve˘‹
,

726 
›ti⁄
)

729 
d_∑th
 = (*)
	`mÆloc
(
	`°æí
(
›èrg
) + 1);

730 
	`MALLOC_CHECK
(
d_∑th
);

731 
	`°r˝y
(
d_∑th
, 
›èrg
);

734 
vîbo£
 = -1;

737 
ö£π_£gmíts
 = 
	`©oi
 (
›èrg
);

740 
dñëe_£gmíts
 = 
	`©oi
 (
›èrg
);

743 
°ï
 = 
	`©oi
 (
›èrg
);

746 
vîbo£
 = 1;

749 
f‹˚
 = 1;

752 *
›èrg
)

754 #ifde‡
SSBM


756 
èbÀ
 = 1 << 
CUST
;

759 
èbÀ
 = 1 << 
PART
;

762 
èbÀ
 = 1 << 
SUPP
;

765 
èbÀ
 = 1 << 
DATE
;

768 
èbÀ
 = 1 << 
LINE
;

771 
èbÀ
 = 1 << 
CUST
;

772 
èbÀ
 |1 << 
PART
;

773 
èbÀ
 |1 << 
SUPP
;

774 
èbÀ
 |1 << 
DATE
;

775 
èbÀ
 |1 << 
LINE
;

779 
èbÀ
 = 1 << 
CUST
;

782 
èbÀ
 = 1 << 
LINE
;

785 
èbÀ
 = 1 << 
NATION
;

786 
èbÀ
 |1 << 
REGION
;

789 
èbÀ
 = 1 << 
NATION
;

792 
èbÀ
 = 1 << 
ORDER
;

795 
èbÀ
 = 1 << 
ORDER_LINE
;

798 
èbÀ
 = 1 << 
PART
;

801 
èbÀ
 = 1 << 
PART_PSUPP
;

804 
èbÀ
 = 1 << 
REGION
;

807 
èbÀ
 = 1 << 
PSUPP
;

810 
èbÀ
 = 1 << 
SUPP
;

814 
	`Ârötf
 (
°dîr
, "UnknownÅableÇame %s\n",

815 
›èrg
);

816 
	`ußge
 ();

817 
	`exô
 (1);

822 
Êt_sˇÀ
 = 
	`©of
 (
›èrg
);

823 i‡(
Êt_sˇÀ
 < 
MIN_SCALE
)

825 
i
;

827 
sˇÀ
 = 1;

828 
i
 = 
PART
; i < 
REGION
; i++)

830 
tdefs
[
i
].
ba£
 *
Êt_sˇÀ
;

831 i‡(
tdefs
[
i
].
ba£
 < 1)

832 
tdefs
[
i
].
ba£
 = 1;

836 
sˇÀ
 = (Ë
Êt_sˇÀ
;

837 i‡(
sˇÀ
 > 
MAX_SCALE
)

839 
	`Ârötf
 (
°dîr
, "%s %5.0f %s\n\t%s\n\n",

841 
MAX_SCALE
,

844 
	`Ârötf
 (
°dîr
,

849 
	`tﬁowî
 (*
›èrg
))

852 
gí_sql
 = 1;

855 
‚ames
 = 1;

858 
hódî
 = 1;

861 
cﬁum«r
 = 1;

864 
gí_∫g
 = 1;

867 
£t_£eds
 = 1;

870 
vÆid©e
 = 1;

873 
	`Ârötf
 (
°dîr
, "Unknown optionÇame %s\n",

874 
›èrg
);

875 
	`ußge
 ();

876 
	`exô
 (1);

880 
dúe˘
 = 1;

883 
dúe˘
 = 0;

886 
upd©es
 = 
	`©oi
 (
›èrg
);

889 
ª‰esh
 = 
	`©oi
 (
›èrg
);

891 #i‚de‡
DOS


893 
chûdªn
 = 
	`©oi
 (
›èrg
);

897 
db_«me
 = (*Ë
	`mÆloc
 (
	`°æí
 (
›èrg
) + 1);

898 
	`MALLOC_CHECK
 (
db_«me
);

899 
	`°r˝y
 (
db_«me
, 
›èrg
);

902 
	`¥ötf
 ("ERROR: option '%c' unknown.\n",

903 *(
ve˘‹
[
›töd
] + 1));

905 
	`Ârötf
 (
°dîr
,

907 
NAME
, 
VERSION
, 
RELEASE
,

908 
MODIFICATION
, 
PATCH
);

911 
	`Ârötf
 (
°dîr
, "C›yrighà%†%s\n", 
TPC
, 
C_DATES
);

912 
	`ußge
 ();

913 
	`exô
 (1);

920 #i‚de‡
DOS


921 i‡(
chûdªn
 !1 && 
°ï
 == -1)

923 
pids
 = (*)
	`mÆloc
(
chûdªn
 * (
pid_t
));

924 
	`MALLOC_CHECK
(
pids
)

927 i‡(
chûdªn
 !1 && 
°ï
 < 0)

929 
	`Ârötf
(
°dîr
, "ERROR: -C must beáccompanied by -S onÅhisÖlatform\n");

930 
	`exô
(1);

935 
	}
}

937 
	$ssb_dbgí_öô
()

940 
èbÀ
 = (1 << 
PART
) |

941 (1 << 
SUPP
) |

942 (1 << 
CUST
) |

943 (1 << 
DATE
) |

944 (1 << 
LINE
);

945 
f‹˚
 = 0;

946 
ö£π_£gmíts
=0;

947 
dñëe_£gmíts
=0;

948 
ö£π_‹dîs_£gmít
=0;

949 
ö£π_löeôem_£gmít
=0;

950 
dñëe_£gmít
=0;

951 
vîbo£
 = 0;

952 
cﬁum«r
 = 0;

953 
£t_£eds
 = 0;

954 
hódî
 = 0;

955 
dúe˘
 = 0;

956 
sˇÀ
 = 1;

957 
Êt_sˇÀ
 = 1.0;

958 
upd©es
 = 0;

959 
ª‰esh
 = 
UPD_PCT
;

960 
°ï
 = -1;

962 
tdefs
[
LINE
].
ba£
 *=

963 
ORDERS_PER_CUST
;

965 
‚ames
 = 0;

966 
db_«me
 = 
NULL
;

967 
gí_sql
 = 0;

968 
gí_∫g
 = 0;

969 
chûdªn
 = 1;

970 
d_∑th
 = 
NULL
;

972 
	`lﬂd_di°s
 ();

974 
tdefs
[
NATION
].
ba£
 = 
«ti⁄s
.
cou¡
;

975 
tdefs
[
REGION
].
ba£
 = 
ªgi⁄s
.
cou¡
;

978 
	}
}

982 
	$EXIT_NAMESPACE
(
dbgíssb
)

984 
usög
 
«me•a˚
 
dbgíssb
;

991 
	$maö22
 (
ac
, **
av
)

993 
i
;

1001 
èbÀ
 = (1 << 
PART
) |

1002 (1 << 
SUPP
) |

1003 (1 << 
CUST
) |

1004 (1 << 
DATE
) |

1005 (1 << 
LINE
);

1006 
f‹˚
 = 0;

1007 
ö£π_£gmíts
=0;

1008 
dñëe_£gmíts
=0;

1009 
ö£π_‹dîs_£gmít
=0;

1010 
ö£π_löeôem_£gmít
=0;

1011 
dñëe_£gmít
=0;

1012 
vîbo£
 = 0;

1013 
cﬁum«r
 = 0;

1014 
£t_£eds
 = 0;

1015 
hódî
 = 0;

1016 
dúe˘
 = 0;

1017 
sˇÀ
 = 1;

1018 
Êt_sˇÀ
 = 1.0;

1019 
upd©es
 = 0;

1020 
ª‰esh
 = 
UPD_PCT
;

1021 
°ï
 = -1;

1023 
tdefs
[
LINE
].
ba£
 *=

1024 
ORDERS_PER_CUST
;

1026 
‚ames
 = 0;

1027 
db_«me
 = 
NULL
;

1028 
gí_sql
 = 0;

1029 
gí_∫g
 = 0;

1030 
chûdªn
 = 1;

1031 
d_∑th
 = 
NULL
;

1034 
	`¥o˚ss_›ti⁄s
 (
ac
, 
av
);

1037 
	`lﬂd_di°s
 ();

1039 
tdefs
[
NATION
].
ba£
 = 
«ti⁄s
.
cou¡
;

1040 
tdefs
[
REGION
].
ba£
 = 
ªgi⁄s
.
cou¡
;

1050 
i
 = 
PART
; i <
REGION
; i++)

1051 i‡(
èbÀ
 & (1 << 
i
))

1053 i‡(
chûdªn
 > 1 && 
i
 < 
NATION
)

1055 i‡(
°ï
 >= 0)

1057 i‡(
vÆid©e
)

1059 
	`INTERNAL_ERROR
("Cannot validateÖarallel data generation");

1063 
	`∑πül
 (
i
, 
°ï
);

1068 i‡(
vÆid©e
)

1070 
	`INTERNAL_ERROR
("Cannot validateÖarallel data generation");

1074 
	`∂ﬂd
 (
i
);

1080 
mörow
 = 1;

1081 i‡(
i
 < 
NATION
) {

1082 
row˙t
 = 
tdefs
[
i
].
ba£
 * 
sˇÀ
;

1085 
row˙t
 = 
tdefs
[
i
].
ba£
;

1087 if(
i
==
PART
){

1088 
row˙t
 = 
tdefs
[
i
].
ba£
 * (
	`Êo‹
(1+
	`log
(()(
sˇÀ
))/(log(2.))));

1090 if(
i
==
DATE
){

1091 
row˙t
 = 
tdefs
[
i
].
ba£
;

1093 i‡(
vîbo£
 > 0){

1094 
	`Ârötf
 (
°dîr
, "%s data for %s [pid: %ld]",

1095 (
vÆid©e
)?"VÆid©ög":"Gíî©ög", 
tdefs
[
i
].
commít
, ()
DSS_PROC
);

1097 
	`gí_tbl
 (
i
, 
mörow
, 
row˙t
, 
upd_num
);

1098 i‡(
vîbo£
 > 0){

1099 
	`Ârötf
 (
°dîr
, "done.\n");

1102 i‡(
vÆid©e
)

1104 
	`¥ötf
("Validation checksum for %sát %ld GB: %0x\n",

1105 
tdefs
[
i
].
«me
, 
sˇÀ
, (Èdefs[i].
vtŸÆ
);

1112 
	}
}

	@src/workload/ssb/dbgen/ssb_load_stub.cpp

12 
	~<°dio.h
>

13 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

14 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

15 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

17 
	$ENTER_NAMESPACE
(
dbgíssb
)

20 
	$˛o£_dúe˘
()

24 
	}
}

27 
	$¥ï_dúe˘
(*)

31 
	}
}

34 
	$hd_cu°
 (
FILE
 * )

36 
cou¡
 = 0;

38 i‡(! 
cou¡
++)

39 
	`¥ötf
("No header has been defined forÅhe customerÅable\n");

42 
	}
}

46 
	$ld_cu°
 (* , )

48 
cou¡
 = 0;

50 i‡(! 
cou¡
++)

51 
	`¥ötf
("%s %s\n",

56 
	}
}

59 
	$hd_∑π
 (
FILE
 * )

61 
cou¡
 = 0;

63 i‡(! 
cou¡
++)

64 
	`¥ötf
("No header has been defined forÅheÖartÅable\n");

67 
	}
}

70 
	$ld_∑π
 (* , )

72 
cou¡
 = 0;

74 i‡(! 
cou¡
++)

75 
	`¥ötf
("NoÜoadÑoutine has been defined forÅheÖartÅable\n");

78 
	}
}

81 
	$ld_psuµ
 (* , )

83 
cou¡
 = 0;

85 i‡(! 
cou¡
++)

86 
	`¥ötf
("%s %s\n",

92 
	}
}

96 
	$hd_suµ
 (
FILE
 * )

98 
cou¡
 = 0;

100 i‡(! 
cou¡
++)

101 
	`¥ötf
("No header has been defined forÅhe supplierÅable\n");

104 
	}
}

107 
	$ld_suµ
 (* , )

109 
cou¡
 = 0;

111 i‡(! 
cou¡
++)

112 
	`¥ötf
("%s %s\n",

117 
	}
}

121 
	$hd_‹dî
 (
FILE
 * )

123 
cou¡
 = 0;

125 i‡(! 
cou¡
++)

126 
	`¥ötf
("No header has been defined forÅhe orderÅable\n");

129 
	}
}

132 
	$ld_‹dî
 (* , )

134 
cou¡
 = 0;

136 i‡(! 
cou¡
++)

137 
	`¥ötf
("%s %s\n",

142 
	}
}

145 
	$ld_löe
 (* , )

147 
cou¡
 = 0;

149 i‡(! 
cou¡
++)

150 
	`¥ötf
("%s %s\n",

155 
	}
}

160 
	$hd_psuµ
 (
FILE
 * )

162 
cou¡
 = 0;

164 i‡(! 
cou¡
++)

165 
	`¥ötf
("%s %s\n",

170 
	}
}

174 
	$hd_löe
 (
FILE
 * )

176 
cou¡
 = 0;

178 i‡(! 
cou¡
++)

179 
	`¥ötf
("No header has been defined forÅheÜineitemÅable\n");

182 
	}
}

185 
	$hd_«ti⁄
 (
FILE
 * )

187 
cou¡
 = 0;

189 i‡(! 
cou¡
++)

190 
	`¥ötf
("No header has been defined forÅheÇationÅable\n");

193 
	}
}

195 #ifde‡
SSBM


198 
	$ld_«ti⁄
 (* , )

200 
cou¡
 = 0;

202 i‡(! 
cou¡
++)

203 
	`¥ötf
("%s %s\n",

208 
	}
}

211 
	$hd_ªgi⁄
 (
FILE
 * )

213 
cou¡
 = 0;

215 i‡(! 
cou¡
++)

216 
	`¥ötf
("No header has been defined forÅheÑegionÅable\n");

219 
	}
}

222 
	$ld_ªgi⁄
 (* , )

224 
cou¡
 = 0;

226 i‡(! 
cou¡
++)

227 
	`¥ötf
("%s %s\n",

232 
	}
}

235 
	$ld_‹dî_löe
 (* , )

237 
‹dî_t
*
µ
=(‹dî_t*)
p
;

238 
	`ld_‹dî
(
µ
, 
mode
);

239 
	`ld_löe
 (
µ
, 
mode
);

242 
	}
}

245 
	$hd_‹dî_löe
 (
FILE
 * )

247 
	`hd_‹dî
(
f
);

248 
	`hd_löe
 (
f
);

251 
	}
}

254 
	$ld_∑π_psuµ
 (* , )

256 
∑π_t
 *
µ
=’¨t_à*)
p
;

257 
	`ld_∑π
(
µ
, 
mode
);

258 
	`ld_psuµ
 (
µ
, 
mode
);

261 
	}
}

264 
	$hd_∑π_psuµ
 (
FILE
 * )

266 
	`hd_∑π
(
f
);

267 
	`hd_psuµ
(
f
);

270 
	}
}

273 #ifde‡
SSBM


275 
	$ld_d©e
 (* , )

279 
	}
}

284 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_permute.cpp

7 #ifde‡
TEST


8 
	#DECLARER


	)

10 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

11 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

12 #ifde‡
TEST


13 
	~<°dlib.h
>

14 #i‡(
deföed
(
_POSIX_
)||!deföed(
WIN32
))

15 
	~<uni°d.h
>

16 
	~<sys/waô.h
>

18 
	~<°dio.h
>

19 
	~<limôs.h
>

20 
	~<m©h.h
>

21 
	~<˘y≥.h
>

22 
	~<sig«l.h
>

23 
	~<°rög.h
>

24 
	~<î∫o.h
>

25 #ifde‡
HP


26 
	~<°rögs.h
>

28 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

29 
	~<¥o˚ss.h
>

30 #¥agm®
w¨nög
(
dißbÀ
:4201)

31 #¥agm®
w¨nög
(
dißbÀ
:4214)

32 #¥agm®
w¨nög
(
dißbÀ
:4514)

33 
	#WIN32_LEAN_AND_MEAN


	)

34 
	#NOATOM


	)

35 
	#NOGDICAPMASKS


	)

36 
	#NOMETAFILE


	)

37 
	#NOMINMAX


	)

38 
	#NOMSG


	)

39 
	#NOOPENFILE


	)

40 
	#NORASTEROPS


	)

41 
	#NOSCROLL


	)

42 
	#NOSOUND


	)

43 
	#NOSYSMETRICS


	)

44 
	#NOTEXTMETRIC


	)

45 
	#NOWH


	)

46 
	#NOCOMM


	)

47 
	#NOKANJI


	)

48 
	#NOMCX


	)

49 
	~<wödows.h
>

50 #¥agm®
w¨nög
(:4201)

51 #¥agm®
w¨nög
(:4214)

55 
ENTER_NAMESPACE
(
dbgíssb
);

57 
NextR™d
(
£ed
);

58 *
≥rmuã
(*
£t
, 
˙t
, 
°ªam
);

59 *
≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
);

60 
	g£ed
;

61 *
	geﬁ
[2] = {" ", "},"};

62 
£ed_t
 
Sìd
[];

63 #ifde‡
TEST


64 
tdef
 
	gtdefs
 = { 
NULL
 };

68 
	#MAX_QUERY
 22

	)

69 
	#ITERATIONS
 1000

	)

70 
	#UNSET
 0

	)

73 
	$≥rmuã
(*
a
, 
c
, 
s
)

75 
i
;

76 
sour˚
;

77 *
£t
, 
ãmp
;

79 i‡(
a
 !(*)
NULL
)

81 
£t
 = 
a
;

82 
i
=0; i < 
c
; i++)

83 *(
a
 + 
i
) = i;

84 
i
=0; i < 
c
; i++)

86 
	`RANDOM
(
sour˚
, 0L, ()(
c
 - 1), 
s
);

87 
ãmp
 = *(
a
 + 
sour˚
);

88 *(
a
 + 
sour˚
Ë*◊ + 
i
) ;

89 *(
a
 + 
i
Ë
ãmp
;

90 
sour˚
 = 0;

94 
sour˚
 += 1;

96 i‡(
sour˚
 >
c
)

97 
sour˚
 -
c
;

99 (
£t
 + 
sour˚
);

100 
	}
}

103 
	$≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
)

105 
di°ributi⁄
 *
di°
 = 
NULL
;

106 
i
;

108 i‡(
d
 !
NULL
)

110 i‡(
d
->
≥rmuã
 =(*)
NULL
)

112 
d
->
≥rmuã
 = (*)
	`mÆloc
((Ë* 
	`DIST_SIZE
(d));

113 
	`MALLOC_CHECK
(
d
->
≥rmuã
);

114 
i
=0; i < 
	`DIST_SIZE
(
d
); i++)

115 *(
d
->
≥rmuã
 + 
i
) = i;

117 
di°
 = 
d
;

118 (
	`≥rmuã
(
di°
->
≥rmuã
, 
	`DIST_SIZE
(di°), 
°ªam
));

122 i‡(
di°
 !
NULL
)

123 (
	`≥rmuã
(
NULL
, 
	`DIST_SIZE
(
di°
), 
°ªam
));

125 
	`INTERNAL_ERROR
("Bad callÅoÖermute_dist");

126 
	}
}

129 #ifde‡
TEST


131 
	$maö_ã°
(
ac
, **
av
)

133 *
£quí˚
,

134 
i
,

135 
j
,

136 
°ªams
 = 
UNSET
,

137 *
a
;

138 
£p
;

139 
ödex
 = 0;

141 
£t_£eds
 = 0;

142 
£quí˚
 = (*)
	`mÆloc
(
MAX_QUERY
 * ());

143 
a
 = 
£quí˚
;

144 
i
=0; i < 
MAX_QUERY
; i++)

145 *(
£quí˚
 + 
i
) = i;

146 i‡(
ac
 < 3)

147 
ußge
;

148 
Sìd
[0].
vÆue
 = ()
	`©oi
(
av
[1]);

149 
°ªams
 = 
	`©oi
(
av
[2]);

150 i‡(
Sìd
[0].
vÆue
 =
UNSET
 || 
°ªams
 == UNSET)

151 
ußge
;

153 
ödex
 = 0;

154 
	`¥ötf
("l⁄gÖîmuèti⁄[%d][%d] = {\n", 
°ªams
, 
MAX_QUERY
);

155 
j
=0; j < 
°ªams
; j++)

157 
£p
 = '{';

158 
	`¥ötf
("%s\n", 
eﬁ
[
ödex
]);

159 
i
=0; i < 
MAX_QUERY
; i++)

161 
	`¥ötf
("%c%2d", 
£p
, *
	`≥rmuã
(
a
, 
MAX_QUERY
, 0) + 1);

162 
a
 = (*)
NULL
;

163 
£p
 = ',';

165 
a
 = 
£quí˚
;

166 
ödex
=1;

168 
	`¥ötf
("}\n};\n");

171 
ußge
:

172 
	`¥ötf
("Ußge: %†<£ed> <°ªams>\n",
av
[0]);

173 
	`¥ötf
(" u£†<£ed>Åÿ°¨àthêgíî©i⁄ o‡<°ªams>Öîmuèti⁄†o‡[1..%d]\n", 
MAX_QUERY
);

176 
	}
}

179 
EXIT_NAMESPACE
(
dbgíssb
);

	@src/workload/ssb/dbgen/ssb_print.cpp

3 
	~<°dio.h
>

4 #i‚de‡
VMS


5 
	~<sys/ty≥s.h
>

8 #i‡
deföed
(
SUN
)

9 
	~<uni°d.h
>

12 #i‡
deföed
(
LINUX
)

13 
	~<uni°d.h
>

16 
	~<m©h.h
>

18 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

19 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

20 
	~<°rög.h
>

22 
	~<°dio.h
>

23 
	~<time.h
>

26 
	$ENTER_NAMESPACE
(
dbgíssb
)

32 
FILE
 *
¥öt_¥ï
 
	`PROTO
((
èbÀ
, 
upd©e
));

33 
¥_dønge
 
	`PROTO
((
tbl
, 
mö
, 
˙t
, 
num
));

35 
FILE
 *

36 
	$¥öt_¥ï
(
èbÀ
, 
upd©e
)

38 
u∑th
[128];

39 
FILE
 *
ªs
;

41 i‡(
upd©es
)

43 i‡(
upd©e
 > 0)

44 i‡–
ö£π_£gmíts
 )

46 
this_£gmít
;

47 if(
	`°rcmp
(
tdefs
[
èbÀ
].
«me
,"orders.tbl"))

48 
this_£gmít
=++
ö£π_‹dîs_£gmít
;

50 
this_£gmít
=++
ö£π_löeôem_£gmít
;

51 
	`•rötf
(
u∑th
, "%s%c%s.u%d.%d",

52 
	`ív_c⁄fig
((*)
PATH_TAG
, (*)
PATH_DFLT
),

53 
PATH_SEP
, 
tdefs
[
èbÀ
].
«me
, 
upd©e
%10000,
this_£gmít
);

57 
	`•rötf
(
u∑th
, "%s%c%s.u%d",

58 
	`ív_c⁄fig
((*)
PATH_TAG
, (*)
PATH_DFLT
),

59 
PATH_SEP
, 
tdefs
[
èbÀ
].
«me
, 
upd©e
);

62 i‡–
dñëe_£gmíts
 )

64 ++
dñëe_£gmít
;

65 
	`•rötf
(
u∑th
, "%s%cdelete.u%d.%d",

66 
	`ív_c⁄fig
((*)
PATH_TAG
, (*)
PATH_DFLT
), 
PATH_SEP
, -
upd©e
%10000,

67 
dñëe_£gmít
);

71 
	`•rötf
(
u∑th
, "%s%cdelete.%d",

72 
	`ív_c⁄fig
((*)
PATH_TAG
, (*)
PATH_DFLT
), 
PATH_SEP
, -
upd©e
);

74 (
	`f›í
(
u∑th
, "w"));

76 
ªs
 = 
	`tbl_›í
(
èbÀ
, (*)"w");

77 
	`OPEN_CHECK
(
ªs
, 
tdefs
[
èbÀ
].
«me
);

78 (
ªs
);

79 
	}
}

82 
	$dbg_¥öt
(
f‹m©
, 
FILE
 *
èrgë
, *
d©a
, 
Àn
, 
£p
)

84 
dﬁœrs
,

85 
˚¡s
;

87 
f‹m©
)

89 
DT_STR
:

90 i‡(
cﬁum«r
)

91 
	`Ârötf
(
èrgë
, "%-*s", 
Àn
, (*)
d©a
);

93 
	`Ârötf
(
èrgë
, "%s", (*)
d©a
);

95 #ifde‡
MVS


96 
DT_VSTR
:

98 
	`Ârötf
(
èrgë
, "%c%c%-*s",

99 (
Àn
 >> 8Ë& 0xFF,Üí & 0xFF,Üí, (*)
d©a
);

102 
DT_INT
:

103 i‡(
cﬁum«r
)

104 
	`Ârötf
(
èrgë
, "%12ld", ()
d©a
);

106 
	`Ârötf
(
èrgë
, "%ld", ()
d©a
);

108 
DT_HUGE
:

109 #i‚de‡
SUPPORT_64BITS


110 i‡(*(*)((*)
d©a
 + 1) == 0) \

111 i‡(
cﬁum«r
Ë
	`Ârötf
(
èrgë
, "%12ld", *(*)
d©a
);

112 
	`Ârötf
(
èrgë
, "%ld", *(*)
d©a
);

114 i‡(
cﬁum«r
Ë
	`Ârötf
(
èrgë
, "%5ld%07ld",

115 *(*)((*)
d©a
 + 1), *(*)data);

116 
	`Ârötf
(
èrgë
,"%ld%07ld",

117 *(*)((*)
d©a
 + 1), *(*)data);

119 
	`Ârötf
(
èrgë
, 
HUGE_FORMAT
, *(
DSS_HUGE
 *)
d©a
);

122 
DT_KEY
:

123 
	`Ârötf
(
èrgë
, "%ld", ()
d©a
);

125 
DT_MONEY
:

126 
˚¡s
 = ()
d©a
;

127 i‡(
˚¡s
 < 0)

129 
	`Ârötf
(
èrgë
, "-");

130 
˚¡s
 = -cents;

132 
dﬁœrs
 = 
˚¡s
 / 100;

133 
˚¡s
 %= 100;

134 i‡(
cﬁum«r
)

135 
	`Ârötf
(
èrgë
, "%12ld.%02ld", 
dﬁœrs
, 
˚¡s
);

137 
	`Ârötf
(
èrgë
, "%ld.%02ld", 
dﬁœrs
, 
˚¡s
);

139 
DT_CHR
:

140 i‡(
cﬁum«r
)

141 
	`Ârötf
(
èrgë
, "%¯", *(*)
d©a
);

143 
	`Ârötf
(
èrgë
, "%c", *(*)
d©a
);

147 #ifde‡
EOL_HANDLING


148 i‡(
£p
)

150 i‡(!
cﬁum«r
 && (
£p
 != -1))

151 
	`Ârötf
(
èrgë
, "%c", 
SEPARATOR
);

154 
	}
}

156 #ifde‡
SSBM


158 
	$¥_cu°
(*
c
, )

160 
FILE
 *
Â
 = 
NULL
;

161 
cu°omî_t
 *
˝
=(cu°omî_à*)
c
;

162 i‡(
Â
 =
NULL
)

163 
Â
 = 
	`¥öt_¥ï
(
CUST
, 0);

165 
	`PR_STRT
(
Â
);

166 
	`PR_INT
(
Â
, 
˝
->
cu°key
);

167 
	`PR_VSTR
(
Â
, 
˝
->
«me
, 
C_NAME_LEN
);

168 
	`PR_VSTR
(
Â
, 
˝
->
addªss
,

169 (
cﬁum«r
)?()(
	`˚û
(
C_ADDR_LEN
 * 
V_STR_HGH
)):
˝
->
Æí
);

170 
	`PR_STR
(
Â
, 
˝
->
côy
,
CITY_FIX
);

171 
	`PR_STR
(
Â
, 
˝
->
«ti⁄_«me
, 
C_NATION_NAME_LEN
);

172 
	`PR_STR
(
Â
, 
˝
->
ªgi⁄_«me
, 
C_REGION_NAME_LEN
);

173 
	`PR_STR
(
Â
, 
˝
->
ph⁄e
, 
PHONE_LEN
);

174 
	`PR_STR
(
Â
, 
˝
->
mkt£gmít
,
MAXAGG_LEN
);

175 
	`PR_END
(
Â
);

178 
	}
}

182 
	$¥_cu°
(*
c
, 
mode
)

184 
FILE
 *
Â
 = 
NULL
;

185 
cu°omî_t
 *
˝
=(cu°omî_à*)
c
;

186 i‡(
Â
 =
NULL
)

187 
Â
 = 
	`¥öt_¥ï
(
CUST
, 0);

189 
	`PR_STRT
(
Â
);

190 
	`PR_INT
(
Â
, 
˝
->
cu°key
);

191 
	`PR_VSTR
(
Â
, 
˝
->
«me
, 
C_NAME_LEN
);

192 
	`PR_VSTR
(
Â
, 
˝
->
addªss
,

193 (
cﬁum«r
)?()(
	`˚û
(
C_ADDR_LEN
 * 
V_STR_HGH
)):
˝
->
Æí
);

194 
	`PR_INT
(
Â
, 
˝
->
«ti⁄_code
);

195 
	`PR_STR
(
Â
, 
˝
->
ph⁄e
, 
PHONE_LEN
);

196 
	`PR_MONEY
(
Â
, 
˝
->
ac˘bÆ
);

197 
	`PR_STR
(
Â
, 
˝
->
mkt£gmít
, 
C_MSEG_LEN
);

198 
	`PR_VSTR_LAST
(
Â
, 
˝
->
commít
,

199 (
cﬁum«r
)?()(
	`˚û
(
C_CMNT_LEN
 * 
V_STR_HGH
)):
˝
->
˛í
);

200 
	`PR_END
(
Â
);

203 
	}
}

209 #ifde‡
SSBM


213 
	$¥_‹dî
(*
o
, 
mode
)

215 
FILE
 *
Â_o
 = 
NULL
;

216 
œ°_mode
 = 0;

217 
‹dî_t
 *
›
=(‹dî_à*)
o
;

218 i‡(
Â_o
 =
NULL
 || 
mode
 !
œ°_mode
)

220 i‡(
Â_o
)

221 
	`f˛o£
(
Â_o
);

222 
Â_o
 = 
	`¥öt_¥ï
(
ORDER
, 
mode
);

223 
œ°_mode
 = 
mode
;

225 
	`PR_STRT
(
Â_o
);

226 
	`PR_HUGE
(
Â_o
, 
›
->
okey
);

227 
	`PR_INT
(
Â_o
, 
›
->
cu°key
);

228 
	`PR_CHR
(
Â_o
, 
›
->
‹dî°©us
);

229 
	`PR_MONEY
(
Â_o
, 
›
->
tŸÆ¥i˚
);

230 
	`PR_STR
(
Â_o
, 
›
->
od©e
, 
DATE_LEN
);

231 
	`PR_STR
(
Â_o
, 
›
->
›ri‹ôy
, 
O_OPRIO_LEN
);

232 
	`PR_STR
(
Â_o
, 
›
->
˛îk
, 
O_CLRK_LEN
);

233 
	`PR_INT
(
Â_o
, 
›
->
•ri‹ôy
);

234 
	`PR_VSTR_LAST
(
Â_o
, 
›
->
commít
,

235 (
cﬁum«r
)?()(
	`˚û
(
O_CMNT_LEN
 * 
V_STR_HGH
)):
›
->
˛í
);

236 
	`PR_END
(
Â_o
);

239 
	}
}

245 #ifde‡
SSBM


247 
	$¥_löe
(*
o
, 
mode
)

250 
FILE
 *
Â_l
 = 
NULL
;

251 
œ°_mode
 = 0;

253 
‹dî_t
 *
›
=(‹dî_à*)
o
;

255 
i
;

259 i‡(
Â_l
 =
NULL
 || 
mode
 !
œ°_mode
)

261 i‡(
Â_l
)

262 
	`f˛o£
(
Â_l
);

263 
Â_l
 = 
	`¥öt_¥ï
(
LINE
, 
mode
);

264 
œ°_mode
 = 
mode
;

267 
i
 = 0; i < 
›
->
löes
; i++)

269 
	`PR_STRT
(
Â_l
);

270 
	`PR_HUGE
(
Â_l
, 
›
->
löe‹dîs
[
i
].
okey
);

271 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
löíumbî
);

272 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
cu°key
);

273 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
∑πkey
);

274 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
suµkey
);

275 
	`PR_STR
(
Â_l
, 
›
->
löe‹dîs
[
i
].
‹dîd©e
, 
DATE_LEN
);

276 
	`PR_STR
(
Â_l
, 
›
->
löe‹dîs
[
i
].
›ri‹ôy
, 
O_OPRIO_LEN
);

277 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
shù_¥i‹ôy
);

278 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
qu™tôy
);

279 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
exãnded_¥i˚
);

280 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
‹dî_tŸÆ¥i˚
);

281 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
discou¡
);

282 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
ªvíue
);

283 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
suµ_co°
);

284 
	`PR_INT
(
Â_l
, 
›
->
löe‹dîs
[
i
].
èx
);

285 
	`PR_STR
(
Â_l
, 
›
->
löe‹dîs
[
i
].
commô_d©e
, 
DATE_LEN
);

286 
	`PR_STR
(
Â_l
, 
›
->
löe‹dîs
[
i
].
shùmode
, 
O_SHIP_MODE_LEN
);

287 
	`PR_END
(
Â_l
);

291 
	}
}

294 
	$¥_löe
(*
o
, 
mode
)

296 
FILE
 *
Â_l
 = 
NULL
;

297 
œ°_mode
 = 0;

298 
‹dî_t
 *
›
=(‹dî_à*)
o
;

300 
i
;

301 
days
;

302 
buf
[100];

304 i‡(
Â_l
 =
NULL
 || 
mode
 !
œ°_mode
)

306 i‡(
Â_l
)

307 
	`f˛o£
(
Â_l
);

308 
Â_l
 = 
	`¥öt_¥ï
(
LINE
, 
mode
);

309 
œ°_mode
 = 
mode
;

312 
i
 = 0; i < 
›
->
löes
; i++)

314 
	`PR_STRT
(
Â_l
);

315 
	`PR_HUGE
(
Â_l
, 
›
->
l
[
i
].
okey
);

316 
	`PR_INT
(
Â_l
, 
›
->
l
[
i
].
∑πkey
);

317 
	`PR_INT
(
Â_l
, 
›
->
l
[
i
].
suµkey
);

318 
	`PR_INT
(
Â_l
, 
›
->
l
[
i
].
l˙t
);

319 
	`PR_INT
(
Â_l
, 
›
->
l
[
i
].
qu™tôy
);

320 
	`PR_MONEY
(
Â_l
, 
›
->
l
[
i
].
ïri˚
);

321 
	`PR_MONEY
(
Â_l
, 
›
->
l
[
i
].
discou¡
);

322 
	`PR_MONEY
(
Â_l
, 
›
->
l
[
i
].
èx
);

323 
	`PR_CHR
(
Â_l
, 
›
->
l
[
i
].
rÊag
[0]);

324 
	`PR_CHR
(
Â_l
, 
›
->
l
[
i
].
l°©us
[0]);

325 
	`PR_STR
(
Â_l
, 
›
->
l
[
i
].
sd©e
, 
DATE_LEN
);

326 
	`PR_STR
(
Â_l
, 
›
->
l
[
i
].
cd©e
, 
DATE_LEN
);

327 
	`PR_STR
(
Â_l
, 
›
->
l
[
i
].
rd©e
, 
DATE_LEN
);

328 
	`PR_STR
(
Â_l
, 
›
->
l
[
i
].
shùö°ru˘
, 
L_INST_LEN
);

329 
	`PR_STR
(
Â_l
, 
›
->
l
[
i
].
shùmode
, 
L_SMODE_LEN
);

330 
	`PR_VSTR_LAST
(
Â_l
, 
›
->
l
[
i
].
commít
,

331 (
cﬁum«r
)?()(
	`˚û
(
L_CMNT_LEN
 *

332 
V_STR_HGH
)):
›
->
l
[
i
].
˛í
);

333 
	`PR_END
(
Â_l
);

337 
	}
}

343 #ifde‡
SSBM


346 
	$¥_‹dî_löe
(*
o
, 
mode
)

348 
‹dî_t
 *
›
=(‹dî_à*)
o
;

349 
tdefs
[
ORDER
].
«me
 =Ådefs[
ORDER_LINE
].name;

350 
	`¥_‹dî
(
›
, 
mode
);

351 
	`¥_löe
(
›
, 
mode
);

354 
	}
}

360 #ifde‡
SSBM


362 
	$¥_∑π
(*
∑π
, )

364 
FILE
 *
p_Â
 = 
NULL
;

366 
∑π_t
 *
∑π_p
=’¨t_à*)
∑π
;

368 i‡(
p_Â
 =
NULL
)

369 
p_Â
 = 
	`¥öt_¥ï
(
PART
, 0);

371 
	`PR_STRT
(
p_Â
);

372 
	`PR_INT
(
p_Â
, 
∑π_p
->
∑πkey
);

373 
	`PR_VSTR
(
p_Â
, 
∑π_p
->
«me
,

374 (
cﬁum«r
)?()
P_NAME_LEN
:
∑π_p
->
∆í
);

375 
	`PR_STR
(
p_Â
, 
∑π_p
->
mfgr
, 
P_MFG_LEN
);

376 
	`PR_STR
(
p_Â
, 
∑π_p
->
ˇãg‹y
, 
P_CAT_LEN
);

377 
	`PR_STR
(
p_Â
, 
∑π_p
->
bønd
, 
P_BRND_LEN
);

380 
	`PR_VSTR
(
p_Â
, 
∑π_p
->
cﬁ‹
,(
cﬁum«r
)?()
P_COLOR_LEN
:∑π_p->
˛í
);

381 
	`PR_VSTR
(
p_Â
, 
∑π_p
->
ty≥
,

382 (
cﬁum«r
)?()
P_TYPE_LEN
:
∑π_p
->
éí
);

383 
	`PR_INT
(
p_Â
, 
∑π_p
->
size
);

384 
	`PR_STR
(
p_Â
, 
∑π_p
->
c⁄èöî
, 
P_CNTR_LEN
);

385 
	`PR_END
(
p_Â
);

387 
	}
}

391 
	$¥_∑π
(*
∑π
, 
mode
)

393 
FILE
 *
p_Â
 = 
NULL
;

394 
∑π_t
 *
∑π_p
=’¨t_à*)
∑π
;

396 i‡(
p_Â
 =
NULL
)

397 
p_Â
 = 
	`¥öt_¥ï
(
PART
, 0);

399 
	`PR_STRT
(
p_Â
);

400 
	`PR_INT
(
p_Â
, 
∑π_p
->
∑πkey
);

401 
	`PR_VSTR
(
p_Â
, 
∑π_p
->
«me
,

402 (
cﬁum«r
)?()
P_NAME_LEN
:
∑π_p
->
∆í
);

403 
	`PR_STR
(
p_Â
, 
∑π_p
->
mfgr
, 
P_MFG_LEN
);

404 
	`PR_STR
(
p_Â
, 
∑π_p
->
bønd
, 
P_BRND_LEN
);

405 
	`PR_VSTR
(
p_Â
, 
∑π_p
->
ty≥
,

406 (
cﬁum«r
)?()
P_TYPE_LEN
:
∑π_p
->
éí
);

407 
	`PR_INT
(
p_Â
, 
∑π_p
->
size
);

408 
	`PR_STR
(
p_Â
, 
∑π_p
->
c⁄èöî
, 
P_CNTR_LEN
);

409 
	`PR_MONEY
(
p_Â
, 
∑π_p
->
ªèû¥i˚
);

410 
	`PR_VSTR_LAST
(
p_Â
, 
∑π_p
->
commít
,

411 (
cﬁum«r
)?()(
	`˚û
(
P_CMNT_LEN
 * 
V_STR_HGH
)):
∑π_p
->
˛í
);

412 
	`PR_END
(
p_Â
);

415 
	}
}

421 #ifde‡
SSBM


425 
	$¥_psuµ
(*
∑π
, 
mode
)

427 
FILE
 *
ps_Â
 = 
NULL
;

428 
∑π_t
 *
∑π_p
=’¨t_à*)
∑π
;

430 
i
;

432 i‡(
ps_Â
 =
NULL
)

433 
ps_Â
 = 
	`¥öt_¥ï
(
PSUPP
, 
mode
);

435 
i
 = 0; i < 
SUPP_PER_PART
; i++)

437 
	`PR_STRT
(
ps_Â
);

438 
	`PR_INT
(
ps_Â
, 
∑π_p
->
s
[
i
].
∑πkey
);

439 
	`PR_INT
(
ps_Â
, 
∑π_p
->
s
[
i
].
suµkey
);

440 
	`PR_INT
(
ps_Â
, 
∑π_p
->
s
[
i
].
qty
);

441 
	`PR_MONEY
(
ps_Â
, 
∑π_p
->
s
[
i
].
sco°
);

442 
	`PR_VSTR_LAST
(
ps_Â
, 
∑π_p
->
s
[
i
].
commít
,

443 (
cﬁum«r
)?()(
	`˚û
(
PS_CMNT_LEN
 * 
V_STR_HGH
)):
∑π_p
->
s
[
i
].
˛í
);

444 
	`PR_END
(
ps_Â
);

448 
	}
}

454 #ifde‡
SSBM


458 
	$¥_∑π_psuµ
(*
∑π
, 
mode
)

460 
∑π_t
 *
∑π_p
=’¨t_à*)
∑π
;

462 
tdefs
[
PART
].
«me
 =Ådefs[
PART_PSUPP
].name;

463 
	`¥_∑π
(
∑π_p
, 
mode
);

464 
	`¥_psuµ
(
∑π_p
, 
mode
);

467 
	}
}

471 #ifde‡
SSBM


473 
	$¥_suµ
(*
suµ
, 
mode
)

475 
FILE
 *
Â
 = 
NULL
;

476 
suµlõr_t
 *
suµ_p
=(suµlõr_à*)
suµ
;

477 i‡(
Â
 =
NULL
)

478 
Â
 = 
	`¥öt_¥ï
(
SUPP
, 
mode
);

480 
	`PR_STRT
(
Â
);

481 
	`PR_INT
(
Â
, 
suµ_p
->
suµkey
);

482 
	`PR_STR
(
Â
, 
suµ_p
->
«me
, 
S_NAME_LEN
);

484 
	`PR_VSTR
(
Â
, 
suµ_p
->
addªss
,

485 (
cﬁum«r
)?()(
	`˚û
(
S_ADDR_LEN
 * 
V_STR_HGH
)):
suµ_p
->
Æí
);

486 
	`PR_STR
(
Â
, 
suµ_p
->
côy
, 
CITY_FIX
);

487 
	`PR_STR
(
Â
, 
suµ_p
->
«ti⁄_«me
, 
C_NATION_NAME_LEN
);

488 
	`PR_STR
(
Â
, 
suµ_p
->
ªgi⁄_«me
, 
C_REGION_NAME_LEN
);

489 
	`PR_STR
(
Â
, 
suµ_p
->
ph⁄e
, 
PHONE_LEN
);

490 
	`PR_END
(
Â
);

493 
	}
}

496 
	$¥_suµ
(*
suµ
, 
mode
)

498 
FILE
 *
Â
 = 
NULL
;

499 
suµlõr_t
 *
suµ_p
=(suµlõr_à*)
suµ
;

501 i‡(
Â
 =
NULL
)

502 
Â
 = 
	`¥öt_¥ï
(
SUPP
, 
mode
);

504 
	`PR_STRT
(
Â
);

505 
	`PR_INT
(
Â
, 
suµ_p
->
suµkey
);

506 
	`PR_STR
(
Â
, 
suµ_p
->
«me
, 
S_NAME_LEN
);

507 
	`PR_VSTR
(
Â
, 
suµ_p
->
addªss
,

508 (
cﬁum«r
)?()(
	`˚û
(
S_ADDR_LEN
 * 
V_STR_HGH
)):
suµ_p
->
Æí
);

509 
	`PR_INT
(
Â
, 
suµ_p
->
«ti⁄_code
);

510 
	`PR_STR
(
Â
, 
suµ_p
->
ph⁄e
, 
PHONE_LEN
);

511 
	`PR_MONEY
(
Â
, 
suµ_p
->
ac˘bÆ
);

512 
	`PR_VSTR_LAST
(
Â
, 
suµ_p
->
commít
,

513 (
cﬁum«r
)?()(
	`˚û
(
S_CMNT_LEN
 * 
V_STR_HGH
)):
suµ_p
->
˛í
);

514 
	`PR_END
(
Â
);

517 
	}
}

520 #ifde‡
SSBM


523 
	$¥_«ti⁄
(*
c
, 
mode
)

525 
FILE
 *
Â
 = 
NULL
;

526 
code_t
 *
˝
=(code_à*)
c
;

527 i‡(
Â
 =
NULL
)

528 
Â
 = 
	`¥öt_¥ï
(
NATION
, 
mode
);

530 
	`PR_STRT
(
Â
);

531 
	`PR_INT
(
Â
, 
˝
->
code
);

532 
	`PR_STR
(
Â
, 
˝
->
ãxt
, 
NATION_LEN
);

533 
	`PR_INT
(
Â
, 
˝
->
joö
);

534 
	`PR_VSTR_LAST
(
Â
, 
˝
->
commít
, 
code_t
 *˝=(code_à*)
c
;

536 (
cﬁum«r
)?()(
	`˚û
(
N_CMNT_LEN
 * 
V_STR_HGH
)):
˝
->
˛í
);

537 
	`PR_END
(
Â
);

540 
	}
}

543 
	$¥_ªgi⁄
(*
c
, 
mode
)

545 
FILE
 *
Â
 = 
NULL
;

546 
code_t
 *
˝
=(code_à*)
c
;

548 i‡(
Â
 =
NULL
)

549 
Â
 = 
	`¥öt_¥ï
(
REGION
, 
mode
);

551 
	`PR_STRT
(
Â
);

552 
	`PR_INT
(
Â
, 
˝
->
code
);

553 
	`PR_STR
(
Â
, 
˝
->
ãxt
, 
REGION_LEN
);

554 
	`PR_VSTR_LAST
(
Â
, 
˝
->
commít
,

555 (
cﬁum«r
)?()(
	`˚û
(
R_CMNT_LEN
 * 
V_STR_HGH
)):
˝
->
˛í
);

556 
	`PR_END
(
Â
);

559 
	}
}

569 
	$¥_dønge
(
tbl
, 
mö
, 
˙t
, 
num
)

571 
œ°_num
 = 0;

572 
FILE
 *
dÂ
 = 
NULL
;

573 
chûd
 = -1;

574 
°¨t
, 
œ°
, 
™ew
;

576 
rows_≥r_£gmít
=0;

577 
rows_this_£gmít
=0;

578 
ªsiduÆ_rows
=0;

580 i‡(
œ°_num
 !
num
)

582 i‡(
dÂ
)

583 
	`f˛o£
(
dÂ
);

584 
dÂ
 = 
	`¥öt_¥ï
(
tbl
, -
num
);

585 i‡(
dÂ
 =
NULL
)

587 
œ°_num
 = 
num
;

588 
rows_this_£gmít
=0;

591 
°¨t
 = 
	`MK_SPARSE
(
mö
, (
num
 - 1)/ (10000 / 
ª‰esh
));

592 
œ°
 = 
°¨t
 - 1;

593 
chûd
=
mö
; 
˙t
 > 0; child++, cnt--)

595 
™ew
 = 
	`MK_SPARSE
(
chûd
, (
num
 - 1Ë/ (10000 / 
ª‰esh
));

596 i‡(
gí_∫g
 =1 && 
™ew
 - 
œ°
 == 1)

598 
œ°
 = 
™ew
;

601 i‡(
gí_sql
)

603 
	`Ârötf
(
dÂ
,

605 
tdefs
[
ORDER
].
«me
, "o_‹dîkey", 
°¨t
, 
œ°
);

606 
	`Ârötf
(
dÂ
,

608 
tdefs
[
LINE
].
«me
, "l_‹dîkey", 
°¨t
, 
œ°
);

609 
	`Ârötf
(
dÂ
, "commit work;\n");

612 i‡(
gí_∫g
)

614 
	`PR_STRT
(
dÂ
);

615 
	`PR_INT
(
dÂ
, 
°¨t
);

616 
	`PR_INT
(
dÂ
, 
œ°
);

617 
	`PR_END
(
dÂ
);

621 i‡(
dñëe_£gmíts
)

623 if(
rows_≥r_£gmít
==0)

625 
rows_≥r_£gmít
 = (
˙t
 / 
dñëe_£gmíts
);

626 
ªsiduÆ_rows
 = (
˙t
 % 
dñëe_£gmíts
);

627 
rows_≥r_£gmít
++;

629 if(
dñëe_£gmít
 <
ªsiduÆ_rows
)

631 if((++
rows_this_£gmít
Ë> 
rows_≥r_£gmít
)

633 
	`f˛o£
(
dÂ
);

634 
dÂ
 = 
	`¥öt_¥ï
(
tbl
, -
num
);

635 i‡(
dÂ
 =
NULL
) (-1);

636 
œ°_num
 = 
num
;

637 
rows_this_£gmít
=1;

642 if((++
rows_this_£gmít
Ë>
rows_≥r_£gmít
)

644 
	`f˛o£
(
dÂ
);

645 
dÂ
 = 
	`¥öt_¥ï
(
tbl
, -
num
);

646 i‡(
dÂ
 =
NULL
) (-1);

647 
œ°_num
 = 
num
;

648 
rows_this_£gmít
=1;

652 
	`PR_STRT
(
dÂ
);

653 
	`PR_KEY
(
dÂ
, 
™ew
);

654 
	`PR_END
(
dÂ
);

656 
°¨t
 = 
™ew
;

657 
œ°
 = 
™ew
;

659 i‡(
gí_∫g
)

661 
	`PR_STRT
(
dÂ
);

662 
	`PR_INT
(
dÂ
, 
°¨t
);

663 
	`PR_INT
(
dÂ
, 
œ°
);

664 
	`PR_END
(
dÂ
);

668 
	}
}

670 #ifde‡
SSBM


671 
	$¥_d©e
(*
d
, ){

672 
FILE
 *
d_Â
 = 
NULL
;

673 
d©e_t
 *
dp
=(d©e_à*)
d
;

674 i‡(
d_Â
 =
NULL
)

675 
d_Â
 = 
	`¥öt_¥ï
(
DATE
, 0);

677 
	`PR_STRT
(
d_Â
);

678 
	`PR_INT
(
d_Â
, 
dp
->
d©ekey
);

679 
	`PR_STR
(
d_Â
, 
dp
->
d©e
,
D_DATE_LEN
);

680 
	`PR_STR
(
d_Â
, 
dp
->
dayofwìk
,
D_DAYWEEK_LEN
);

681 
	`PR_STR
(
d_Â
, 
dp
->
m⁄th
,
D_MONTH_LEN
);

682 
	`PR_INT
(
d_Â
, 
dp
->
yór
);

683 
	`PR_INT
(
d_Â
, 
dp
->
yórm⁄thnum
);

684 
	`PR_STR
(
d_Â
, 
dp
->
yórm⁄th
,
D_YEARMONTH_LEN
);

685 
	`PR_INT
(
d_Â
, 
dp
->
daynumöwìk
);

686 
	`PR_INT
(
d_Â
, 
dp
->
daynumöm⁄th
);

687 
	`PR_INT
(
d_Â
, 
dp
->
daynumöyór
);

688 
	`PR_INT
(
d_Â
, 
dp
->
m⁄thnumöyór
);

689 
	`PR_INT
(
d_Â
, 
dp
->
wìknumöyór
);

690 
	`PR_VSTR
(
d_Â
,

691 
dp
->
£Œög£as⁄
,(
cﬁum«r
)?()
D_SEASON_LEN
:dp->
¶í
);

692 
	`PR_STR
(
d_Â
,
dp
->
œ°dayöwìkÊ
,2);

693 
	`PR_STR
(
d_Â
,
dp
->
œ°dayöm⁄thÊ
,2);

694 
	`PR_STR
(
d_Â
,
dp
->
hﬁidayÊ
,2);

695 
	`PR_STR
(
d_Â
,
dp
->
wìkdayÊ
,2);

697 
	`PR_END
(
d_Â
);

700 
	}
}

708 #ifde‡
SSBM


710 
	$vrf_cu°
(*
c
, )

712 
cu°omî_t
 *
˝
=(cu°omî_à*)
c
;

713 
	`VRF_STRT
(
CUST
);

714 
	`VRF_INT
(
CUST
, 
˝
->
cu°key
);

715 
	`VRF_STR
(
CUST
, 
˝
->
«me
);

716 
	`VRF_STR
(
CUST
, 
˝
->
addªss
);

717 
	`VRF_STR
(
CUST
, 
˝
->
côy
);

718 
	`VRF_STR
(
CUST
, 
˝
->
«ti⁄_«me
);

719 
	`VRF_STR
(
CUST
, 
˝
->
ªgi⁄_«me
);

720 
	`VRF_STR
(
CUST
, 
˝
->
ph⁄e
);

721 
	`VRF_STR
(
CUST
, 
˝
->
mkt£gmít
);

722 
	`VRF_END
(
CUST
);

725 
	}
}

729 
	$vrf_cu°
(*
c
, 
mode
)

731 
cu°omî_t
 *
˝
=(cu°omî_à*)
c
;

732 
	`VRF_STRT
(
CUST
);

733 
	`VRF_INT
(
CUST
, 
˝
->
cu°key
);

734 
	`VRF_STR
(
CUST
, 
˝
->
«me
);

735 
	`VRF_STR
(
CUST
, 
˝
->
addªss
);

736 
	`VRF_INT
(
CUST
, 
˝
->
«ti⁄_code
);

737 
	`VRF_STR
(
CUST
, 
˝
->
ph⁄e
);

738 
	`VRF_MONEY
(
CUST
, 
˝
->
ac˘bÆ
);

739 
	`VRF_STR
(
CUST
, 
˝
->
mkt£gmít
);

740 
	`VRF_STR
(
CUST
, 
˝
->
commít
);

741 
	`VRF_END
(
CUST
);

744 
	}
}

750 #ifde‡
SSBM


753 
	$vrf_‹dî
(*
o
, 
mode
)

755 
‹dî_t
 *
o
=(order_t *)o;

756 
	`VRF_STRT
(
ORDER
);

757 
	`VRF_HUGE
(
ORDER
, 
›
->
okey
);

758 
	`VRF_INT
(
ORDER
, 
›
->
cu°key
);

759 
	`VRF_CHR
(
ORDER
, 
›
->
‹dî°©us
);

760 
	`VRF_MONEY
(
ORDER
, 
›
->
tŸÆ¥i˚
);

761 
	`VRF_STR
(
ORDER
, 
›
->
od©e
);

762 
	`VRF_STR
(
ORDER
, 
›
->
›ri‹ôy
);

763 
	`VRF_STR
(
ORDER
, 
›
->
˛îk
);

764 
	`VRF_INT
(
ORDER
, 
›
->
•ri‹ôy
);

765 
	`VRF_STR
(
ORDER
, 
›
->
commít
);

766 
	`VRF_END
(
ORDER
);

769 
	}
}

775 #ifde‡
SSBM


777 
	$vrf_löe
(*
o
, )

779 
‹dî_t
 * 
›
 =(‹dî_à*)
o
;

780 
i
;

782 
i
 = 0; i < 
›
->
löes
; i++)

784 
	`VRF_STRT
(
LINE
);

785 
	`VRF_HUGE
(
LINE
, 
›
->
löe‹dîs
[
i
].
okey
);

786 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
löíumbî
);

787 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
cu°key
);

788 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
∑πkey
);

789 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
suµkey
);

790 
	`VRF_STR
(
LINE
, 
›
->
löe‹dîs
[
i
].
‹dîd©e
);

791 
	`VRF_STR
(
LINE
, 
›
->
löe‹dîs
[
i
].
›ri‹ôy
);

792 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
shù_¥i‹ôy
);

793 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
qu™tôy
);

794 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
exãnded_¥i˚
);

795 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
‹dî_tŸÆ¥i˚
);

796 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
discou¡
);

797 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
ªvíue
);

798 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
suµ_co°
);

799 
	`VRF_INT
(
LINE
, 
›
->
löe‹dîs
[
i
].
èx
);

800 
	`VRF_STR
(
LINE
, 
›
->
löe‹dîs
[
i
].
commô_d©e
);

801 
	`VRF_STR
(
LINE
, 
›
->
löe‹dîs
[
i
].
shùmode
);

802 
	`VRF_END
(
LINE
);

806 
	}
}

810 
	$vrf_löe
(*
o
, 
mode
)

812 
‹dî_t
 *
›
=(‹dî_à*)
o
;

813 
i
;

815 
i
 = 0; i < 
›
->
löes
; i++)

817 
	`VRF_STRT
(
LINE
);

818 
	`VRF_HUGE
(
LINE
, 
›
->
l
[
i
].
okey
);

819 
	`VRF_INT
(
LINE
, 
›
->
l
[
i
].
∑πkey
);

820 
	`VRF_INT
(
LINE
, 
›
->
l
[
i
].
suµkey
);

821 
	`VRF_INT
(
LINE
, 
›
->
l
[
i
].
l˙t
);

822 
	`VRF_INT
(
LINE
, 
›
->
l
[
i
].
qu™tôy
);

823 
	`VRF_MONEY
(
LINE
, 
›
->
l
[
i
].
ïri˚
);

824 
	`VRF_MONEY
(
LINE
, 
›
->
l
[
i
].
discou¡
);

825 
	`VRF_MONEY
(
LINE
, 
›
->
l
[
i
].
èx
);

826 
	`VRF_CHR
(
LINE
, 
›
->
l
[
i
].
rÊag
[0]);

827 
	`VRF_CHR
(
LINE
, 
›
->
l
[
i
].
l°©us
[0]);

828 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
sd©e
);

829 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
cd©e
);

830 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
rd©e
);

831 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
shùö°ru˘
);

832 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
shùmode
);

833 
	`VRF_STR
(
LINE
, 
›
->
l
[
i
].
commít
);

834 
	`VRF_END
(
LINE
);

838 
	}
}

844 #ifde‡
SSBM


847 
	$vrf_‹dî_löe
(*
o
, 
mode
)

849 
‹dî_t
 *
›
=(‹dî_à*)
o
;

850 
	`vrf_‹dî
(
›
, 
mode
);

851 
	`vrf_löe
(
›
, 
mode
);

854 
	}
}

860 #ifde‡
SSBM


862 
	$vrf_∑π
(*
∑π
, )

864 
∑π_t
 *
∑π_p
=’¨t_t*)
∑π
;

865 
	`VRF_STRT
(
PART
);

866 
	`VRF_INT
(
PART
, 
∑π_p
->
∑πkey
);

867 
	`VRF_STR
(
PART
, 
∑π_p
->
«me
);

868 
	`VRF_STR
(
PART
, 
∑π_p
->
mfgr
);

869 
	`VRF_STR
(
PART
, 
∑π_p
->
bønd
);

870 
	`VRF_STR
(
PART
, 
∑π_p
->
ty≥
);

871 
	`VRF_INT
(
PART
, 
∑π_p
->
size
);

872 
	`VRF_STR
(
PART
, 
∑π_p
->
c⁄èöî
);

873 
	`VRF_STR
(
PART
, 
∑π_p
->
ˇãg‹y
);

874 
	`VRF_END
(
PART
);

877 
	}
}

881 
	$vrf_∑π
(*
∑π
, 
mode
)

883 
∑π_t
 *
∑π_p
=’¨t_t*)
∑π
;

884 
	`VRF_STRT
(
PART
);

885 
	`VRF_INT
(
PART
, 
∑π_p
->
∑πkey
);

886 
	`VRF_STR
(
PART
, 
∑π_p
->
«me
);

887 
	`VRF_STR
(
PART
, 
∑π_p
->
mfgr
);

888 
	`VRF_STR
(
PART
, 
∑π_p
->
bønd
);

889 
	`VRF_STR
(
PART
, 
∑π_p
->
ty≥
);

890 
	`VRF_INT
(
PART
, 
∑π_p
->
size
);

891 
	`VRF_STR
(
PART
, 
∑π_p
->
c⁄èöî
);

892 
	`VRF_MONEY
(
PART
, 
∑π_p
->
ªèû¥i˚
);

893 
	`VRF_STR
(
PART
, 
∑π_p
->
commít
);

894 
	`VRF_END
(
PART
);

897 
	}
}

903 #ifde‡
SSBM


906 
	$vrf_psuµ
(*
∑π
, 
mode
)

908 
∑π_t
 *
∑π_p
=’¨t_t*)
∑π
;

909 
i
;

911 
i
 = 0; i < 
SUPP_PER_PART
; i++)

913 
	`VRF_STRT
(
PSUPP
);

914 
	`VRF_INT
(
PSUPP
, 
∑π_p
->
s
[
i
].
∑πkey
);

915 
	`VRF_INT
(
PSUPP
, 
∑π_p
->
s
[
i
].
suµkey
);

916 
	`VRF_INT
(
PSUPP
, 
∑π_p
->
s
[
i
].
qty
);

917 
	`VRF_MONEY
(
PSUPP
, 
∑π_p
->
s
[
i
].
sco°
);

918 
	`VRF_STR
(
PSUPP
, 
∑π_p
->
s
[
i
].
commít
);

919 
	`VRF_END
(
PSUPP
);

923 
	}
}

929 #ifde‡
SSBM


932 
	$vrf_∑π_psuµ
(*
∑π
, 
mode
)

934 
∑π_t
 *
∑π
=’¨t_à*)
∑π_p
;

935 
	`vrf_∑π
(
∑π_p
, 
mode
);

936 
	`vrf_psuµ
(
∑π_p
, 
mode
);

939 
	}
}

942 #ifde‡
SSBM


944 
	$vrf_suµ
(*
suµ
, )

946 
suµlõr_t
* 
suµ_p
=(suµlõr_t*)
suµ
;

947 
	`VRF_STRT
(
SUPP
);

948 
	`VRF_INT
(
SUPP
, 
suµ_p
->
suµkey
);

949 
	`VRF_STR
(
SUPP
, 
suµ_p
->
«me
);

951 
	`VRF_STR
(
CUST
, 
suµ_p
->
addªss
);

952 
	`VRF_STR
(
CUST
, 
suµ_p
->
«ti⁄_«me
);

953 
	`VRF_INT
(
CUST
, 
suµ_p
->
ªgi⁄_key
);

954 
	`VRF_STR
(
CUST
, 
suµ_p
->
ªgi⁄_«me
);

955 
	`VRF_STR
(
CUST
, 
suµ_p
->
ph⁄e
);

956 
	`VRF_END
(
SUPP
);

959 
	}
}

963 
	$vrf_suµ
(*
suµ
, 
mode
)

965 
suµlõr_t
 *
suµ_p
=(suµlõr_t*)
suµ
;

966 
	`VRF_STRT
(
SUPP
);

967 
	`VRF_INT
(
SUPP
, 
suµ_p
->
suµkey
);

968 
	`VRF_STR
(
SUPP
, 
suµ_p
->
«me
);

969 
	`VRF_STR
(
SUPP
, 
suµ_p
->
addªss
);

970 
	`VRF_INT
(
SUPP
, 
suµ_p
->
«ti⁄_code
);

971 
	`VRF_STR
(
SUPP
, 
suµ_p
->
ph⁄e
);

972 
	`VRF_MONEY
(
SUPP
, 
suµ_p
->
ac˘bÆ
);

973 
	`VRF_STR
(
SUPP
, 
suµ_p
->
commít
);

974 
	`VRF_END
(
SUPP
);

977 
	}
}

980 #ifde‡
SSBM


983 
	$vrf_«ti⁄
(*
c
, 
mode
)

985 
code_t
*
˝
=(code_t*)
c
;

986 
	`VRF_STRT
(
NATION
);

987 
	`VRF_INT
(
NATION
, 
˝
->
code
);

988 
	`VRF_STR
(
NATION
, 
˝
->
ãxt
);

989 
	`VRF_INT
(
NATION
, 
˝
->
joö
);

990 
	`VRF_STR
(
NATION
, 
˝
->
commít
);

991 
	`VRF_END
(
NATION
);

994 
	}
}

997 
	$vrf_ªgi⁄
(*
c
, 
mode
)

999 
code_t
*
˝
=(code_t*)
c
;

1000 
	`VRF_STRT
(
REGION
);

1001 
	`VRF_INT
(
REGION
, 
˝
->
code
);

1002 
	`VRF_STR
(
REGION
, 
˝
->
ãxt
);

1003 
	`VRF_STR
(
REGION
, 
˝
->
commít
);

1004 
	`VRF_END
(
Â
);

1007 
	}
}

1011 #ifde‡
SSBM


1012 
	$vrf_d©e
(* 
d
, )

1014 
d©e_t
 * 
dp
 = (d©e_t*)
d
;

1015 
	`VRF_STRT
(
DATE
);

1016 
	`VRF_INT
(
DATE
, 
dp
->
d©ekey
);

1017 
	`VRF_STR
(
DATE
, 
dp
->
d©e
);

1018 
	`VRF_STR
(
DATE
, 
dp
->
dayofwìk
);

1019 
	`VRF_STR
(
DATE
, 
dp
->
m⁄th
);

1020 
	`VRF_INT
(
DATE
, 
dp
->
yór
);

1021 
	`VRF_INT
(
DATE
, 
dp
->
yórm⁄thnum
);

1022 
	`VRF_STR
(
DATE
, 
dp
->
yórm⁄th
);

1023 
	`VRF_INT
(
DATE
, 
dp
->
daynumöwìk
);

1024 
	`VRF_INT
(
DATE
, 
dp
->
daynumöm⁄th
);

1025 
	`VRF_INT
(
DATE
, 
dp
->
daynumöyór
);

1026 
	`VRF_INT
(
DATE
, 
dp
->
m⁄thnumöyór
);

1027 
	`VRF_INT
(
DATE
, 
dp
->
wìknumöyór
);

1028 
	`VRF_STR
(
DATE
, 
dp
->
£Œög£as⁄
);

1029 
	`VRF_STR
(
DATE
, 
dp
->
œ°dayöwìkÊ
);

1030 
	`VRF_STR
(
DATE
, 
dp
->
œ°dayöm⁄thÊ
);

1031 
	`VRF_STR
(
DATE
, 
dp
->
wìkdayÊ
);

1032 
	`VRF_END
(
DATE
);

1035 
	}
}

1038 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_rnd.cpp

15 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

16 
	~<°dio.h
>

17 
	~<m©h.h
>

18 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

19 
	~"w‹klﬂd/ssb/dbgí/∫d.h
"

21 
	$ENTER_NAMESPACE
(
dbgíssb
)

23 *
ív_c⁄fig
 
	`PROTO
((*
èg
, *
dÊt
));

24 
	`NthEÀmít
(, *);

27 
	$dss_øndom
(*
tgt
, 
lowî
, 
uµî
, 
°ªam
)

29 *
tgt
 = 
	`UnifI¡
(()
lowî
, ()
uµî
, ()
°ªam
);

30 
Sìd
[
°ªam
].
ußge
 += 1;

33 
	}
}

36 
row_°¨t
() \

38 
	gi
;

39 
	gi
=0; i <
MAX_STREAM
; i++)

40 
	gSìd
[
i
].
	gußge
 = 0 ;

46 
row_°›
(
t
) \

48 
	gi
;

51 i‡(
	gt
 =
ORDER_LINE
)

52 
t
 = 
ORDER
;

53 i‡(
	gt
 =
PART_PSUPP
)

54 
t
 = 
PART
;

56 
	gi
=0; i <
MAX_STREAM
; i++)

57 i‡((
	gSìd
[
i
].
	gèbÀ
 =
t
Ë|| (
Sìd
[i].
èbÀ
 =
tdefs
[t].
chûd
))

59 i‡(
£t_£eds
 && (
Sìd
[
i
].
ußge
 > Sìd[i].
bound¨y
))

61 
Ârötf
(
°dîr
, "\nSEED CHANGE: seed[%d].usage = %d\n",

62 
i
, 
Sìd
[i].
ußge
);

63 
	gSìd
[
i
].
	gbound¨y
 = 
Sìd
[i].
ußge
;

67 
NthEÀmít
((
Sìd
[
i
].
bound¨y
 - Sìd[i].
ußge
), &Sìd[i].
vÆue
);

74 
	$dump_£eds
(
tbl
)

76 
i
;

78 
i
=0; i <
MAX_STREAM
; i++)

79 i‡(
Sìd
[
i
].
èbÀ
 =
tbl
)

80 
	`¥ötf
("%d:\t%ld\n", 
i
, 
Sìd
[i].
vÆue
);

82 
	}
}

94 
	$NextR™d
(
nSìd
)

146 
nU
, 
nV
;

148 
nU
 = 
nSìd
 / 
nQ
;

149 
nV
 = 
nSìd
 - 
nQ
 * 
nU
;

150 
nSìd
 = 
nA
 * 
nV
 - 
nU
 * 
nR
;

151 i‡(
nSìd
 < 0)

152 
nSìd
 +
nM
;

153  (
nSìd
);

154 
	}
}

166 
	$UnifI¡
(
nLow
, 
nHigh
, 
nSåóm
)

175 
dR™ge
;

176 
nTemp
;

178 i‡(
nSåóm
 < 0 ||ÇSåóm > 
MAX_STREAM
)

179 
nSåóm
 = 0;

181 i‡(
nLow
 > 
nHigh
)

183 
nTemp
 = 
nLow
;

184 
nLow
 = 
nHigh
;

185 
nHigh
 = 
nTemp
;

188 
dR™ge
 = 
	`DOUBLE_CAST
 (
nHigh
 - 
nLow
 + 1);

189 
Sìd
[
nSåóm
].
vÆue
 = 
	`NextR™d
(Seed[nStream].value);

190 
nTemp
 = (Ë(((Ë
Sìd
[
nSåóm
].
vÆue
 / 
dM
Ë* (
dR™ge
));

191  (
nLow
 + 
nTemp
);

192 
	}
}

206 
	$UnifRól
(
dLow
, 
dHigh
, 
nSåóm
)

215 
dTemp
;

217 i‡(
nSåóm
 < 0 ||ÇSåóm > 
MAX_STREAM
)

218 
nSåóm
 = 0;

219 i‡(
dLow
 =
dHigh
)

220  (
dLow
);

221 i‡(
dLow
 > 
dHigh
)

223 
dTemp
 = 
dLow
;

224 
dLow
 = 
dHigh
;

225 
dHigh
 = 
dTemp
;

227 
Sìd
[
nSåóm
].
vÆue
 = 
	`NextR™d
(Seed[nStream].value);

228 
dTemp
 = ((Ë
Sìd
[
nSåóm
].
vÆue
 / 
dM
Ë* (
dHigh
 - 
dLow
);

229  (
dLow
 + 
dTemp
);

230 
	}
}

244 
	$Exp⁄ítül
(
dMón
, 
nSåóm
)

254 
dTemp
;

256 i‡(
nSåóm
 < 0 ||ÇSåóm > 
MAX_STREAM
)

257 
nSåóm
 = 0;

258 i‡(
dMón
 <= 0.0)

261 
Sìd
[
nSåóm
].
vÆue
 = 
	`NextR™d
(Seed[nStream].value);

262 
dTemp
 = (Ë
Sìd
[
nSåóm
].
vÆue
 / 
dM
;

263  (-
dMón
 * 
	`log
(1.0 - 
dTemp
));

264 
	}
}

266 
EXIT_NAMESPACE
(
dbgíssb
)

	@src/workload/ssb/dbgen/ssb_speed_seed.cpp

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

6 
ENTER_NAMESPACE
(
dbgíssb
);

10 
	#FAKE_V_STR
(
avg
, 
sd
, 
˙t
) \

11 
	`ADVANCE_STREAM
(
sd
, \

12 ()(
Sìd
[
sd
].
bound¨y
*
˙t
))

	)

13 
	#ADVANCE_STREAM
(
°ªam_id
, 
num_ˇŒs
) \

14 
	`NthEÀmít
(
num_ˇŒs
, &
Sìd
[
°ªam_id
].
vÆue
)

	)

16 
	#MAX_COLOR
 92

	)

17 
	g«me_bôs
[
MAX_COLOR
 / 
BITS_PER_LONG
];

18 
£ed_t
 
Sìd
[];

27 
DSS_HUGE
 
	gMu…ùlõr
 = 16807;

28 
DSS_HUGE
 
	gModulus
 = 2147483647;

48 #ifde‡
SUPPORT_64BITS


49 
	$NthEÀmít
 (
N
, *
SèπSìd
)

51 
DSS_HUGE
 
Z
;

52 
DSS_HUGE
 
Mu…
;

53 
 
=-1;

54 
i
;

56 i‡((
vîbo£
 > 0Ë&& ++
 
 % 1000 == 0)

58 
i
 = 
 
 % 
LN_CNT
;

59 
	`Ârötf
(
°dîr
, "%c\b", 
 oi£
[
i
]);

61 
Mu…
 = 
Mu…ùlõr
;

62 
Z
 = (
DSS_HUGE
Ë*
SèπSìd
;

63 
N
 > 0 )

65 i‡(
N
 % 2 != 0)

66 
Z
 = (
Mu…
 * ZË% 
Modulus
;

67 
N
 = N / 2;

68 
Mu…
 = (Mu… * Mu…Ë% 
Modulus
;

70 *
SèπSìd
 = ()
Z
;

73 
	}
}

89 
	~<m©h.h
>

90 
	~<°dio.h
>

92 sig√d 
	tRND
;

93 
	tURND
;

95 
	#F©ÆEº‹
(
e
Ë
	`F_F©ÆEº‹
–”), 
__FILE__
, 
__LINE__
 )

	)

96 
	$F_F©ÆEº‹
–, * , Ë{
	`Ârötf
(
°dîr
, "B™g!\n");
	}
}

100 
RND
 
RND_£ed
( RND );

101 
RND
 
RND_shi·
( RND, RND );

102 
RND
 
RND_ModMu…
( RND, RND );

106 
RND


107 
	$RND_£ed
 ( 
RND
 
Ordî
 )

109 c⁄° 
RND
 
T›Mask
 = 0x40000000;

110 
RND
 
Mask
;

111 
RND
 
Resu…
;

114 i‡(
Ordî
 <-
Modulus
 || Order >= Modulus)

115 
	`F©ÆEº‹
(1023);

117 i‡(
Ordî
 < 0ËOrdî = 
Modulus
 - 1L + Order;

119 
Mask
 = 
T›Mask
;

120 
Resu…
 = 1L;

122 
Mask
 > 
Ordî
) Mask >>= 1;

124 
Mask
 > 0)

126 i‡(
Mask
 & 
Ordî
)

128 
Resu…
 = 
	`RND_ModMu…
( Result, Result);

129 
Resu…
 = 
	`RND_ModMu…
–Resu…, 
Mu…ùlõr
 );

133 
Resu…
 = 
	`RND_ModMu…
( Result, Result );

135 
Mask
 >>= 1;

138  (
Resu…
);

140 
	}
}

151 
	$NthEÀmít
 ( 
Shi·
, *
Sìd
)

154 
RND
 
Powî
;

155 
 
=-1;

156 
i
;

158 i‡((
vîbo£
 > 0Ë&& ++
 
 % 100 == 0)

160 
i
 = (
 
/100Ë% 
LN_CNT
;

161 
	`Ârötf
(
°dîr
, "%c\b", 
 oi£
[
i
]);

165 i‡(*
Sìd
 <0 || *Sìd >
Modulus
)

166 
	`F©ÆEº‹
(1023);

167 i‡(
Shi·
 <-
Modulus
 || Shift >= Modulus)

168 
	`F©ÆEº‹
(1023);

170 
Powî
 = 
	`RND_£ed
–
Shi·
 );

172 *
Sìd
 = 
	`RND_ModMu…
–*Sìd, 
Powî
 );

175 
	}
}

185 
RND


186 
	$RND_ModMu…
 ( 
RND
 
nA
, RND 
nB
)

190 c⁄° 
dTwoPowPlus31
 = 2147483648.;

191 c⁄° 
dTwoPowMöus31
 = 1./2147483648.;

192 c⁄° 
dTwoPowPlus15
 = 32768.;

193 c⁄° 
dTwoPowMöus15
 = 1./32768.;

194 c⁄° 
RND
 
nLowMask
 = 0xFFFFL;

195 c⁄° 
URND
 
ulBô31
 = 1uL << 31;

197 
dAH
, 
dAL
, 
dX
, 
dY
, 
dZ
, 
dW
;

198 
RND
 
nH
, 
nL
;

199 
URND
 
ulP
, 
ulQ
, 
ulResu…
;

201 
nL
 = 
nB
 & 
nLowMask
;

202 
nH
 = (
nB
 - 
nL
) >> 16;

203 
dAH
 = ()
nA
 * ()
nH
;

204 
dAL
 = ()
nA
 * ()
nL
;

205 
dX
 = 
	`Êo‹
–
dAH
 * 
dTwoPowMöus15
 );

206 
dY
 = 
dAH
 - 
dX
*
dTwoPowPlus15
;

207 
dZ
 = 
	`Êo‹
–
dAL
 * 
dTwoPowMöus31
 );

208 
dW
 = 
dAL
 - 
dZ
*
dTwoPowPlus31
;

210 
ulQ
 = (
URND
)
dW
 + ((URND)
dY
 << 16);

211 
ulP
 = (
URND
)
dX
 + (URND)
dZ
;

212 i‡(
ulQ
 & 
ulBô31
Ë{ ulQ -ulBô31; 
ulP
++; }

214 
ulResu…
 = 
ulP
 + 
ulQ
;

215 i‡(
ulResu…
 & 
ulBô31
) { ulResult -= ulBit31; ulResult++; }

217  (
RND
)
ulResu…
;

218 
	}
}

223 
	$Áke_a_∫d
(
mö
, 
max
, 
cﬁumn
)

225 
Àn
, 
ôcou¡
;

226 
	`RANDOM
(
Àn
, ()
mö
, ()
max
, ()
cﬁumn
);

227 i‡(
Àn
 % 5L == 0)

228 
ôcou¡
 = 
Àn
/5;

229 
ôcou¡
 = 
Àn
/5 + 1L;

230 
	`NthEÀmít
(
ôcou¡
, &
Sìd
[
cﬁumn
].
ußge
);

232 
	}
}

236 
	$sd_∑π
(, 
skù_cou¡
)

238 
i
;

240 
i
=
P_MFG_SD
; i<
P_CNTR_SD
; i++)

241 
	`ADVANCE_STREAM
(
i
, 
skù_cou¡
);

243 
	`FAKE_V_STR
(
P_CMNT_LEN
, 
P_CMNT_SD
, 
skù_cou¡
);

244 
	`ADVANCE_STREAM
(
P_NAME_SD
, 
skù_cou¡
 * 92);

247 
	}
}

250 
	$sd_löe
(
chûd
, 
skù_cou¡
)

252 
i
,
j
;

254 
j
=0; j < 
O_LCNT_MAX
; j++)

256 
i
=
L_QTY_SD
; i<
L_RFLG_SD
; i++)

257 
	`ADVANCE_STREAM
(
i
, 
skù_cou¡
);

260 
	`FAKE_V_STR
(
L_CMNT_LEN
, 
L_CMNT_SD
, 
skù_cou¡
);

262 i‡(
chûd
 == 1)

264 
	`ADVANCE_STREAM
(
O_ODATE_SD
, 
skù_cou¡
);

265 
	`ADVANCE_STREAM
(
O_LCNT_SD
, 
skù_cou¡
);

269 
	}
}

272 
	$sd_‹dî
(, 
skù_cou¡
)

274 
	`ADVANCE_STREAM
(
O_LCNT_SD
, 
skù_cou¡
);

275 
	`ADVANCE_STREAM
(
O_CKEY_SD
, 
skù_cou¡
);

276 
	`FAKE_V_STR
(
O_CMNT_LEN
, 
O_CMNT_SD
, 
skù_cou¡
);

277 
	`ADVANCE_STREAM
(
O_SUPP_SD
, 
skù_cou¡
);

278 
	`ADVANCE_STREAM
(
O_CLRK_SD
, 
skù_cou¡
);

279 
	`ADVANCE_STREAM
(
O_PRIO_SD
, 
skù_cou¡
);

280 
	`ADVANCE_STREAM
(
O_ODATE_SD
, 
skù_cou¡
);

283 
	}
}

286 
	$sd_psuµ
(, 
skù_cou¡
)

288 
j
;

290 
j
=0; j < 
SUPP_PER_PART
; j++)

292 
	`ADVANCE_STREAM
(
PS_QTY_SD
, 
skù_cou¡
);

293 
	`ADVANCE_STREAM
(
PS_SCST_SD
, 
skù_cou¡
);

295 
	`FAKE_V_STR
(
PS_CMNT_LEN
, 
PS_CMNT_SD
, 
skù_cou¡
);

298 
	}
}

301 
	$sd_cu°
(, 
skù_cou¡
)

304 
	`FAKE_V_STR
(
C_ADDR_LEN
, 
C_ADDR_SD
, 
skù_cou¡
);

305 
	`FAKE_V_STR
(
C_CMNT_LEN
, 
C_CMNT_SD
, 
skù_cou¡
);

306 
	`ADVANCE_STREAM
(
C_NTRG_SD
, 
skù_cou¡
);

307 
	`ADVANCE_STREAM
(
C_PHNE_SD
, 3L * 
skù_cou¡
);

308 
	`ADVANCE_STREAM
(
C_ABAL_SD
, 
skù_cou¡
);

309 
	`ADVANCE_STREAM
(
C_MSEG_SD
, 
skù_cou¡
);

311 
	}
}

314 
	$sd_suµ
(, 
skù_cou¡
)

316 
	`ADVANCE_STREAM
(
S_NTRG_SD
, 
skù_cou¡
);

317 
	`ADVANCE_STREAM
(
S_PHNE_SD
, 3L * 
skù_cou¡
);

318 
	`ADVANCE_STREAM
(
S_ABAL_SD
, 
skù_cou¡
);

319 
	`FAKE_V_STR
(
S_ADDR_LEN
, 
S_ADDR_SD
, 
skù_cou¡
);

320 
	`FAKE_V_STR
(
S_CMNT_LEN
, 
S_CMNT_SD
, 
skù_cou¡
);

321 
	`ADVANCE_STREAM
(
BBB_CMNT_SD
, 
skù_cou¡
);

322 
	`ADVANCE_STREAM
(
BBB_JNK_SD
, 
skù_cou¡
);

323 
	`ADVANCE_STREAM
(
BBB_OFFSET_SD
, 
skù_cou¡
);

324 
	`ADVANCE_STREAM
(
BBB_TYPE_SD
, 
skù_cou¡
);

327 
	}
}

329 
EXIT_NAMESPACE
(
dbgíssb
);

	@src/workload/ssb/dbgen/ssb_text.cpp

9 #ifde‡
TEST


10 
	#DECLARER


	)

13 
	~"w‹klﬂd/ssb/dbgí/c⁄fig.h
"

14 
	~<°dlib.h
>

15 #i‡(
deföed
(
_POSIX_
)||!deföed(
WIN32
))

19 
	~<°dio.h
>

20 
	~<limôs.h
>

21 
	~<m©h.h
>

22 
	~<˘y≥.h
>

23 
	~<sig«l.h
>

24 
	~<°rög.h
>

25 
	~<î∫o.h
>

26 #ifde‡
HP


27 
	~<°rögs.h
>

29 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

30 
	~<¥o˚ss.h
>

31 #¥agm®
w¨nög
(
dißbÀ
:4201)

32 #¥agm®
w¨nög
(
dißbÀ
:4214)

33 #¥agm®
w¨nög
(
dißbÀ
:4514)

34 
	#WIN32_LEAN_AND_MEAN


	)

35 
	#NOATOM


	)

36 
	#NOGDICAPMASKS


	)

37 
	#NOMETAFILE


	)

38 
	#NOMINMAX


	)

39 
	#NOMSG


	)

40 
	#NOOPENFILE


	)

41 
	#NORASTEROPS


	)

42 
	#NOSCROLL


	)

43 
	#NOSOUND


	)

44 
	#NOSYSMETRICS


	)

45 
	#NOTEXTMETRIC


	)

46 
	#NOWH


	)

47 
	#NOCOMM


	)

48 
	#NOKANJI


	)

49 
	#NOMCX


	)

50 
	~<wödows.h
>

51 #¥agm®
w¨nög
(:4201)

52 #¥agm®
w¨nög
(:4214)

55 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

56 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

58 
ENTER_NAMESPACE
(
dbgíssb
);

73 
	$txt_vp
(*
de°
, 
sd
)

75 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

76 *
˝å
,

77 *
∑r£_èrgë
;

78 
di°ributi⁄
 *
§c
;

79 
i
,

80 
ªs
 = 0;

83 
	`pick_°r
(&
vp
, 
sd
, &
sy¡ax
[0]);

84 
∑r£_èrgë
 = 
sy¡ax
;

85 (
˝å
 = 
	`°πok
(
∑r£_èrgë
, " ")Ë!
NULL
)

87 
§c
 = 
NULL
;

88 *
˝å
)

91 
§c
 = &
advîbs
;

94 
§c
 = &
vîbs
;

97 
§c
 = &
auxûœrõs
;

100 
i
 = 
	`pick_°r
(
§c
, 
sd
, 
de°
);

101 
i
 = 
	`°æí
(
	`DIST_MEMBER
(
§c
, i));

102 
de°
 +
i
;

103 
ªs
 +
i
;

104 i‡(*(++
˝å
))

106 
de°
 += 1;

107 
ªs
 += 1;

108 *
de°
 = *
˝å
;

110 *
de°
 = ' ';

111 
de°
++;

112 
ªs
++;

113 
∑r£_èrgë
 = 
NULL
;

116 (
ªs
);

117 
	}
}

132 
	$txt_≈
(*
de°
, 
sd
)

134 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

135 *
˝å
,

136 *
∑r£_èrgë
;

137 
di°ributi⁄
 *
§c
;

138 
i
,

139 
ªs
 = 0;

142 
	`pick_°r
(&
≈
, 
sd
, &
sy¡ax
[0]);

143 
∑r£_èrgë
 = 
sy¡ax
;

144 (
˝å
 = 
	`°πok
(
∑r£_èrgë
, " ")Ë!
NULL
)

146 
§c
 = 
NULL
;

147 *
˝å
)

150 
§c
 = &
¨ti˛es
;

153 
§c
 = &
adje˘ives
;

156 
§c
 = &
advîbs
;

159 
§c
 = &
nouns
;

162 
i
 = 
	`pick_°r
(
§c
, 
sd
, 
de°
);

163 
i
 = 
	`°æí
(
	`DIST_MEMBER
(
§c
, i));

164 
de°
 +
i
;

165 
ªs
 +
i
;

166 i‡(*(++
˝å
))

168 *
de°
 = *
˝å
;

169 
de°
 += 1;

170 
ªs
 += 1;

172 *
de°
 = ' ';

173 
de°
++;

174 
ªs
++;

175 
∑r£_èrgë
 = 
NULL
;

178 (
ªs
);

179 
	}
}

194 
	$txt_£¡í˚
(*
de°
, 
sd
)

196 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

197 *
˝å
;

198 
i
,

199 
ªs
 = 0,

200 
Àn
 = 0;

203 
	`pick_°r
(&
gømm¨
, 
sd
, 
sy¡ax
);

204 
˝å
 = 
sy¡ax
;

206 
√xt_tokí
:

207 *
˝å
 && *cptr == ' ')

208 
˝å
++;

209 i‡(*
˝å
 == '\0')

210 
d⁄e
;

211 *
˝å
)

214 
Àn
 = 
	`txt_vp
(
de°
, 
sd
);

217 
Àn
 = 
	`txt_≈
(
de°
, 
sd
);

220 
i
 = 
	`pick_°r
(&
¥ïosôi⁄s
, 
sd
, 
de°
);

221 
Àn
 = 
	`°æí
(
	`DIST_MEMBER
(&
¥ïosôi⁄s
, 
i
));

222 
	`°r˝y
((
de°
 + 
Àn
), "Åhe ");

223 
Àn
 += 5;

224 
Àn
 +
	`txt_≈
(
de°
 +Üí, 
sd
);

227 
i
 = 
	`pick_°r
(&
ãrmö©‹s
, 
sd
, --
de°
);

228 
Àn
 = 
	`°æí
(
	`DIST_MEMBER
(&
ãrmö©‹s
, 
i
));

231 
de°
 +
Àn
;

232 
ªs
 +
Àn
;

233 
˝å
++;

234 i‡(*
˝å
 && *cptr != ' ')

236 
de°
 += 1;

237 
ªs
 += 1;

238 *
de°
 = *
˝å
;

240 
√xt_tokí
;

241 
d⁄e
:

242 *
de°
 = '\0';

243 (--
ªs
);

244 
	}
}

252 
	$dbg_ãxt
(*
tgt
, 
mö
, 
max
, 
sd
)

254 
Àngth
 = 0;

255 
w‹dÀn
 = 0,

256 
√eded
,

257 
s_Àn
;

258 
£¡í˚
[
MAX_SENT_LEN
 + 1];

260 
	`RANDOM
(
Àngth
, 
mö
, 
max
, 
sd
);

262 
w‹dÀn
 < 
Àngth
)

264 
s_Àn
 = 
	`txt_£¡í˚
(
£¡í˚
, 
sd
);

265 i‡–
s_Àn
 < 0)

266 
	`INTERNAL_ERROR
("Bad sentence formation");

267 
√eded
 = 
Àngth
 - 
w‹dÀn
;

268 i‡(
√eded
 >
s_Àn
 + 1)

270 
	`°r˝y
(
tgt
, 
£¡í˚
);

271 
tgt
 +
s_Àn
;

272 
w‹dÀn
 +
s_Àn
 + 1;

273 *(
tgt
++) = ' ';

277 
£¡í˚
[
√eded
] = '\0';

278 
	`°r˝y
(
tgt
, 
£¡í˚
);

279 
w‹dÀn
 +
√eded
;

280 
tgt
 +
√eded
;

283 *
tgt
 = '\0';

285 (
w‹dÀn
);

286 
	}
}

288 #ifde‡
TEST


289 
tdef
 
	gtdefs
 = { 
NULL
 };

291 
	$maö_ã°
(, **)

293 
¥©ée
[401];

295 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "nouns", &
nouns
);

296 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vîbs", &
vîbs
);

297 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "adje˘ives", &
adje˘ives
);

298 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "advîbs", &
advîbs
);

299 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "auxûœrõs", &
auxûœrõs
);

300 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ãrmö©‹s", &
ãrmö©‹s
);

301 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¨ti˛es", &
¨ti˛es
);

302 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¥ïosôi⁄s", &
¥ïosôi⁄s
);

303 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "gømm¨", &
gømm¨
);

304 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "≈", &
≈
);

305 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vp", &
vp
);

309 
	`dbg_ãxt
(&
¥©ée
[0], 300, 400, 0);

310 
	`¥ötf
("<%s>\n", 
¥©ée
);

314 
	}
}

317 
EXIT_NAMESPACE
(
dbgíssb
);

	@src/workload/ssb/qpipe/qpipe_q1_1.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

63 
	sq11_lo_tu∂e


65 
	mLO_EXTENDEDPRICE
;

66 
	mLO_ORDERDATE
;

67 
	mLO_DISCOUNT
;

70 
	sq11_d_tu∂e


72 
	mD_DATEKEY
;

75 
	sq11_joö_tu∂e


77 
	mLO_EXTENDEDPRICE
;

78 
	mLO_DISCOUNT
;

81 
	sq11_agg_tu∂e


83 
	mTOTAL_SUM
;

84 
	mREVENUE
;

92 
q11_agg_tu∂e
 
	t¥oje˘ed_tu∂e
;

95 ˛as†
	cq11_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


97 
¥iv©e
:

98 
Sh‹eSSBEnv
* 
_ssbdb
;

99 
èbÀ_row_t
* 
	m_¥löe
;

100 
ªp_row_t
 
	m_º
;

102 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

105 
	mDISCOUNT_1
;

106 
	mDISCOUNT_2
;

107 
	mQUANTITY
;

109 
	mpublic
:

111 
	$q11_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

112 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

116 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

117 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

118 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

119 
_¥löe
->
_ªp
 = &
_º
;

121 
DISCOUNT_1
=1;

122 
DISCOUNT_2
=3;

123 
QUANTITY
=25;

127 ~
	$q11_löe‹dî_tsˇn_fûãr_t
()

130 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

131 
	}
}

135 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

138 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

139 
	`as£π
(
Ál£
);

142 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

143 
_¥löe
->
	`gë_vÆue
(8, 
_löe‹dî
.
LO_QUANTITY
);

145 i‡(
_löe‹dî
.
LO_DISCOUNT
>=
DISCOUNT_1
 && _löe‹dî.LO_DISCOUNT<=
DISCOUNT_2
 && _löe‹dî.
LO_QUANTITY
<
QUANTITY
)

147 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ DISCOUNT |%d QUANTITY |%d --d\n",

148 
_löe‹dî
.
LO_DISCOUNT
, _löe‹dî.
LO_QUANTITY
);

149  (
åue
);

155  (
Ál£
);

157 
	}
}

161 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

163 
q11_lo_tu∂e
 *
de°
;

164 
de°
 = 
Æig√d_ˇ°
<
q11_lo_tu∂e
>(
d
.
d©a
);

166 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

167 
_¥löe
->
	`gë_vÆue
(9, 
_löe‹dî
.
LO_EXTENDEDPRICE
);

168 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

171 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d --d\n",

172 
_löe‹dî
.
LO_ORDERDATE
,

173 
_löe‹dî
.
LO_EXTENDEDPRICE
,

174 
_löe‹dî
.
LO_DISCOUNT
);

176 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

177 
de°
->
LO_EXTENDEDPRICE
 = 
_löe‹dî
.LO_EXTENDEDPRICE;

178 
de°
->
LO_DISCOUNT
 = 
_löe‹dî
.LO_DISCOUNT;

180 
	}
}

182 
q11_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

183  
√w
 
	`q11_löe‹dî_tsˇn_fûãr_t
(*
this
);

184 
	}
}

186 
c_°r
 
	$to_°rög
() const {

187  
	`c_°r
("q11_lineorder_tscan_filter_t()");

188 
	}
}

195 ˛as†
	cq11_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


197 
¥iv©e
:

198 
Sh‹eSSBEnv
* 
_ssbdb
;

199 
èbÀ_row_t
* 
	m_¥d©e
;

200 
ªp_row_t
 
	m_º
;

202 
ssb_d©e_tu∂e
 
	m_d©e
;

205 
	mYEAR
;

207 
	mpublic
:

209 
	$q11_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q1_1_öput_t
 &
ö
)

210 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

214 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

215 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

216 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

217 
_¥d©e
->
_ªp
 = &
_º
;

219 
YEAR
=1993;

222 ~
	$q11_d©e_tsˇn_fûãr_t
()

225 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

226 
	}
}

230 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

233 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

234 
	`as£π
(
Ál£
);

237 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

240 i‡(
_d©e
.
D_YEAR
==
YEAR
)

242 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

243 
_d©e
.
D_YEAR
);

244  (
åue
);

248 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

249 
_d©e
.
D_YEAR
);

250  (
Ál£
);

253 
	}
}

257 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

259 
q11_d_tu∂e
 *
de°
;

260 
de°
 = 
Æig√d_ˇ°
<
q11_d_tu∂e
>(
d
.
d©a
);

262 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

264 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

265 
_d©e
.
D_DATEKEY
);

268 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

269 
	}
}

271 
q11_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

272  
√w
 
	`q11_d©e_tsˇn_fûãr_t
(*
this
);

273 
	}
}

275 
c_°r
 
	$to_°rög
() const {

276  
	`c_°r
("q11_date_tscan_filter_t()");

277 
	}
}

282 
	gq11_joö_t
 : 
public
 
tu∂e_joö_t
 {

285 
q11_joö_t
 ()

286 : 
tu∂e_joö_t
((
q11_lo_tu∂e
),

287 
off£tof
(
q11_lo_tu∂e
, 
LO_ORDERDATE
),

288 (
q11_d_tu∂e
),

289 
off£tof
(
q11_d_tu∂e
, 
D_DATEKEY
),

291 (
q11_joö_tu∂e
))

296 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

297 c⁄° 
tu∂e_t
 &
À·
,

298 c⁄° 
tu∂e_t
 &
right
)

301 
q11_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q11_lo_tu∂e>(
À·
.
d©a
);

302 
q11_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q11_d_tu∂e>(
right
.
d©a
);

303 
q11_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q11_joö_tu∂e>(
de°
.
d©a
);

305 
	gªt
->
	gLO_EXTENDEDPRICE
 = 
lo
->
LO_EXTENDEDPRICE
;

306 
	gªt
->
	gLO_DISCOUNT
 = 
lo
->
LO_DISCOUNT
;

308 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d \n",
ªt
->
LO_EXTENDEDPRICE
,Ñë->
LO_DISCOUNT
);

312 
vútuÆ
 
q11_joö_t
* 
˛⁄e
() const {

313  
√w
 
q11_joö_t
(*
this
);

316 
vútuÆ
 
c_°r
 
to_°rög
() const {

322 
	gq11_aggªg©e
 : 
tu∂e_aggªg©e_t
 {

323 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

326 
q11_aggªg©e
()

327 : 
tu∂e_aggªg©e_t
((
q11_agg_tu∂e
)),

328 
_exåa˘‹
(0, 0)

333 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

334  &
	g_exåa˘‹
;

336 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

337 
q11_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q11_agg_tu∂e>(
agg_d©a
);

338 
q11_joö_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q11_joö_tu∂e>(
t
.
d©a
);

340 
	gvÆue
 = (
tu∂e
->
LO_EXTENDEDPRICE
 *Åu∂e->
LO_DISCOUNT
)/100;

341 
	gagg
->
	gTOTAL_SUM
 +
vÆue
;

344 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

345 
q11_agg_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q11_agg_tu∂e>(
d
.
d©a
);

346 
q11_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q11_agg_tu∂e>(
agg_d©a
);

347 
	gde°
->
	gREVENUE
 = 
agg
->
TOTAL_SUM
;

349 
vútuÆ
 
q11_aggªg©e
* 
˛⁄e
() const {

350  
√w
 
q11_aggªg©e
(*
this
);

352 
vútuÆ
 
c_°r
 
to_°rög
() const {

363 ˛as†
	cssb_q11_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


365 
public
:

367 
	$begö
() {

368 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q1_1 ANSWER ...\n");

369 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

372 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

373 
¥oje˘ed_tu∂e
 *
tu∂e
;

374 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

375 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %l‡\n",
tu∂e
->
REVENUE
);

378 
	}
}

389 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q1_1
(c⁄° 
x˘_id
,

390 
q1_1_öput_t
& 
ö
)

392 
	`TRACE
–
TRACE_ALWAYS
, "********** q1_1 *********\n");

395 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

396 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

400 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_lo_tu∂e
));

401 
tsˇn_∑ckë_t
* 
q11_lo_tsˇn_∑ckë
 =

402 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

403 
lo_out_buf„r
,

404 
√w
 
	`q11_löe‹dî_tsˇn_fûãr_t
(
this
),

405 
this
->
	`db
(),

406 
_∂öe‹dî_desc
.
	`gë
(),

407 
px˘


412 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_d_tu∂e
));

413 
tsˇn_∑ckë_t
* 
q11_d_tsˇn_∑ckë
 =

414 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

415 
d_out_buf„r
,

416 
√w
 
	`q11_d©e_tsˇn_fûãr_t
(
this
,
ö
),

417 
this
->
	`db
(),

418 
_pd©e_desc
.
	`gë
(),

419 
px˘


426 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q11_joö_tu∂e
));

427 
∑ckë_t
* 
q11_joö_∑ckë
 =

428 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date JOIN",

429 
joö_out
,

430 
√w
 
	`åivül_fûãr_t
((
q11_joö_tu∂e
)),

431 
q11_lo_tsˇn_∑ckë
,

432 
q11_d_tsˇn_∑ckë
,

433 
√w
 
	`q11_joö_t
() );

436 
tu∂e_fifo
* 
q11_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_agg_tu∂e
));

437 
∑ckë_t
* 
q11_agg_∑ckë
 = 
√w
 
	`aggªg©e_∑ckë_t
("AGG Q1_1",

438 
q11_agg_buf„r
,

439 
√w
 
	`åivül_fûãr_t
((
q11_agg_tu∂e
)),

440 
√w
 
	`q11_aggªg©e
(),

441 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

442 
q11_joö_∑ckë
);

445 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

446 
q11_lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

447 
q11_d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

448 
q11_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

449 
q11_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

453 
ssb_q11_¥o˚ss_tu∂e_t
 
±
;

454 
	`¥o˚ss_quîy
(
q11_agg_∑ckë
, 
±
);

455 
dp
->
	`quîy_°©e_de°roy
(
qs
);

457  (
RCOK
);

458 
	}
}

461 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q1_2.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

62 
	sq12_lo_tu∂e


64 
	mLO_EXTENDEDPRICE
;

65 
	mLO_ORDERDATE
;

66 
	mLO_DISCOUNT
;

69 
	sq12_d_tu∂e


71 
	mD_DATEKEY
;

74 
	sq12_joö_tu∂e


76 
	mLO_EXTENDEDPRICE
;

77 
	mLO_DISCOUNT
;

80 
	sq12_agg_tu∂e


82 
	mTOTAL_SUM
;

83 
	mREVENUE
;

91 
q12_agg_tu∂e
 
	t¥oje˘ed_tu∂e
;

95 ˛as†
	cq12_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


97 
¥iv©e
:

98 
Sh‹eSSBEnv
* 
_ssbdb
;

99 
èbÀ_row_t
* 
	m_¥löe
;

100 
ªp_row_t
 
	m_º
;

102 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

105 
	mDISCOUNT_1
;

106 
	mDISCOUNT_2
;

107 
	mQUANTITY_1
;

108 
	mQUANTITY_2
;

110 
	mpublic
:

112 
	$q12_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

113 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

117 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

118 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

119 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

120 
_¥löe
->
_ªp
 = &
_º
;

122 
DISCOUNT_1
=4;

123 
DISCOUNT_2
=6;

124 
QUANTITY_1
=26;

125 
QUANTITY_2
=35;

129 ~
	$q12_löe‹dî_tsˇn_fûãr_t
()

132 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

133 
	}
}

137 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

140 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

141 
	`as£π
(
Ál£
);

144 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

145 
_¥löe
->
	`gë_vÆue
(8, 
_löe‹dî
.
LO_QUANTITY
);

147 i‡(
_löe‹dî
.
LO_DISCOUNT
>=
DISCOUNT_1
 && _löe‹dî.LO_DISCOUNT<=
DISCOUNT_2
 && _löe‹dî.
LO_QUANTITY
>=
QUANTITY_1
 && _löe‹dî.LO_QUANTITY<=
QUANTITY_2
)

149 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ DISCOUNT |%d QUANTITY |%d --d\n",

150 
_löe‹dî
.
LO_DISCOUNT
, _löe‹dî.
LO_QUANTITY
);

151  (
åue
);

155 
	`TRACE
–
TRACE_RECORD_FLOW
, ". DISCOUNT |%d QUANTITY |%d --d\n",

156 
_löe‹dî
.
LO_DISCOUNT
, _löe‹dî.
LO_QUANTITY
);

157  (
Ál£
);

159 
	}
}

163 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

165 
q12_lo_tu∂e
 *
de°
;

166 
de°
 = 
Æig√d_ˇ°
<
q12_lo_tu∂e
>(
d
.
d©a
);

168 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

169 
_¥löe
->
	`gë_vÆue
(9, 
_löe‹dî
.
LO_EXTENDEDPRICE
);

170 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

173 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d --d\n",

174 
_löe‹dî
.
LO_ORDERDATE
,

175 
_löe‹dî
.
LO_EXTENDEDPRICE
,

176 
_löe‹dî
.
LO_DISCOUNT
);

178 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

179 
de°
->
LO_EXTENDEDPRICE
 = 
_löe‹dî
.LO_EXTENDEDPRICE;

180 
de°
->
LO_DISCOUNT
 = 
_löe‹dî
.LO_DISCOUNT;

182 
	}
}

184 
q12_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

185  
√w
 
	`q12_löe‹dî_tsˇn_fûãr_t
(*
this
);

186 
	}
}

188 
c_°r
 
	$to_°rög
() const {

189  
	`c_°r
("q1_2_lineorder_tscan_filter_t()");

190 
	}
}

197 ˛as†
	cq12_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


199 
¥iv©e
:

200 
Sh‹eSSBEnv
* 
_ssbdb
;

201 
èbÀ_row_t
* 
	m_¥d©e
;

202 
ªp_row_t
 
	m_º
;

204 
ssb_d©e_tu∂e
 
	m_d©e
;

207 
	mYEARMONTHNUM
;

209 
	mpublic
:

211 
	$q12_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q1_2_öput_t
 &
ö
)

212 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

216 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

217 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

218 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

219 
_¥d©e
->
_ªp
 = &
_º
;

221 
YEARMONTHNUM
=199401;

224 ~
	$q12_d©e_tsˇn_fûãr_t
()

227 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

228 
	}
}

232 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

235 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

236 
	`as£π
(
Ál£
);

239 
_¥d©e
->
	`gë_vÆue
(5, 
_d©e
.
D_YEARMONTHNUM
);

242 i‡(
_d©e
.
D_YEARMONTHNUM
==
YEARMONTHNUM
)

244 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEARMONTHNUM |%d --d\n",

245 
_d©e
.
D_YEARMONTHNUM
);

246  (
åue
);

250 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEARMONTHNUM |%d --d\n",

251 
_d©e
.
D_YEARMONTHNUM
);

252  (
Ál£
);

255 
	}
}

259 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

261 
q12_d_tu∂e
 *
de°
;

262 
de°
 = 
Æig√d_ˇ°
<
q12_d_tu∂e
>(
d
.
d©a
);

264 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

266 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

267 
_d©e
.
D_DATEKEY
);

270 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

271 
	}
}

273 
q12_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

274  
√w
 
	`q12_d©e_tsˇn_fûãr_t
(*
this
);

275 
	}
}

277 
c_°r
 
	$to_°rög
() const {

278  
	`c_°r
("q12_date_tscan_filter_t()");

279 
	}
}

284 
	gq12_joö_t
 : 
public
 
tu∂e_joö_t
 {

287 
q12_joö_t
 ()

288 : 
tu∂e_joö_t
((
q12_lo_tu∂e
),

289 
off£tof
(
q12_lo_tu∂e
, 
LO_ORDERDATE
),

290 (
q12_d_tu∂e
),

291 
off£tof
(
q12_d_tu∂e
, 
D_DATEKEY
),

293 (
q12_joö_tu∂e
))

298 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

299 c⁄° 
tu∂e_t
 &
À·
,

300 c⁄° 
tu∂e_t
 &
right
)

303 
q12_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q12_lo_tu∂e>(
À·
.
d©a
);

304 
q12_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q12_d_tu∂e>(
right
.
d©a
);

305 
q12_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q12_joö_tu∂e>(
de°
.
d©a
);

307 
	gªt
->
	gLO_EXTENDEDPRICE
 = 
lo
->
LO_EXTENDEDPRICE
;

308 
	gªt
->
	gLO_DISCOUNT
 = 
lo
->
LO_DISCOUNT
;

310 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d \n",
ªt
->
LO_EXTENDEDPRICE
,Ñë->
LO_DISCOUNT
);

314 
vútuÆ
 
q12_joö_t
* 
˛⁄e
() const {

315  
√w
 
q12_joö_t
(*
this
);

318 
vútuÆ
 
c_°r
 
to_°rög
() const {

354 
	gq12_aggªg©e
 : 
tu∂e_aggªg©e_t
 {

355 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

358 
q12_aggªg©e
()

359 : 
tu∂e_aggªg©e_t
((
q12_agg_tu∂e
)),

360 
_exåa˘‹
(0, 0)

365 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

366  &
	g_exåa˘‹
;

368 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

369 
q12_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q12_agg_tu∂e>(
agg_d©a
);

370 
q12_joö_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q12_joö_tu∂e>(
t
.
d©a
);

372 
	gvÆue
 = (
tu∂e
->
LO_EXTENDEDPRICE
 *Åu∂e->
LO_DISCOUNT
)/100;

373 
	gagg
->
	gTOTAL_SUM
 +
vÆue
;

376 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

377 
q12_agg_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q12_agg_tu∂e>(
d
.
d©a
);

378 
q12_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q12_agg_tu∂e>(
agg_d©a
);

379 
	gde°
->
	gREVENUE
 = 
agg
->
TOTAL_SUM
;

381 
vútuÆ
 
q12_aggªg©e
* 
˛⁄e
() const {

382  
√w
 
q12_aggªg©e
(*
this
);

384 
vútuÆ
 
c_°r
 
to_°rög
() const {

390 ˛as†
	cssb_q12_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


392 
public
:

394 
	$begö
() {

395 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q1_2 ANSWER ...\n");

396 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

399 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

400 
¥oje˘ed_tu∂e
 *
tu∂e
;

402 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

403 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %l‡\n", 
tu∂e
->
REVENUE
);

407 
	}
}

418 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q1_2
(c⁄° 
x˘_id
,

419 
q1_2_öput_t
& 
ö
)

421 
	`TRACE
–
TRACE_ALWAYS
, "********** q1_2 *********\n");

424 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

425 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

429 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_lo_tu∂e
));

430 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

431 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

432 
lo_out_buf„r
,

433 
√w
 
	`q12_löe‹dî_tsˇn_fûãr_t
(
this
),

434 
this
->
	`db
(),

435 
_∂öe‹dî_desc
.
	`gë
(),

436 
px˘


441 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_d_tu∂e
));

442 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

443 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

444 
d_out_buf„r
,

445 
√w
 
	`q12_d©e_tsˇn_fûãr_t
(
this
,
ö
),

446 
this
->
	`db
(),

447 
_pd©e_desc
.
	`gë
(),

448 
px˘


455 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q12_joö_tu∂e
));

456 
∑ckë_t
* 
joö_∑ckë
 =

457 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date JOIN",

458 
joö_out
,

459 
√w
 
	`åivül_fûãr_t
((
q12_joö_tu∂e
)),

460 
lo_tsˇn_∑ckë
,

461 
d_tsˇn_∑ckë
,

462 
√w
 
	`q12_joö_t
() );

466 
tu∂e_fifo
* 
q12_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_agg_tu∂e
));

467 
∑ckë_t
* 
q12_agg_∑ckë
 = 
√w
 
	`aggªg©e_∑ckë_t
("AGG Q1_2",

468 
q12_agg_buf„r
,

469 
√w
 
	`åivül_fûãr_t
((
q12_agg_tu∂e
)),

470 
√w
 
	`q12_aggªg©e
(),

471 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

472 
joö_∑ckë
);

475 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

476 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

477 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

478 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

479 
q12_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

482 
ssb_q12_¥o˚ss_tu∂e_t
 
±
;

484 
	`¥o˚ss_quîy
(
q12_agg_∑ckë
, 
±
);

485 
dp
->
	`quîy_°©e_de°roy
(
qs
);

487  (
RCOK
);

488 
	}
}

491 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q1_3.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

61 
	sq13_lo_tu∂e


63 
	mLO_EXTENDEDPRICE
;

64 
	mLO_ORDERDATE
;

65 
	mLO_DISCOUNT
;

68 
	sq13_d_tu∂e


70 
	mD_DATEKEY
;

73 
	sq13_joö_tu∂e


75 
	mLO_EXTENDEDPRICE
;

76 
	mLO_DISCOUNT
;

79 
	sq13_agg_tu∂e


81 
	mTOTAL_SUM
;

82 
	mREVENUE
;

91 
q13_agg_tu∂e
 
	t¥oje˘ed_tu∂e
;

94 ˛as†
	cq13_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


96 
¥iv©e
:

97 
Sh‹eSSBEnv
* 
_ssbdb
;

98 
èbÀ_row_t
* 
	m_¥löe
;

99 
ªp_row_t
 
	m_º
;

101 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

104 
	mDISCOUNT_1
;

105 
	mDISCOUNT_2
;

106 
	mQUANTITY_1
;

107 
	mQUANTITY_2
;

109 
	mpublic
:

111 
	$q13_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

112 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

116 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

117 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

118 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

119 
_¥löe
->
_ªp
 = &
_º
;

121 
DISCOUNT_1
=5;

122 
DISCOUNT_2
=7;

123 
QUANTITY_1
=26;

124 
QUANTITY_2
=35;

128 ~
	$q13_löe‹dî_tsˇn_fûãr_t
()

131 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

132 
	}
}

136 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

139 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

140 
	`as£π
(
Ál£
);

143 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

144 
_¥löe
->
	`gë_vÆue
(8, 
_löe‹dî
.
LO_QUANTITY
);

146 i‡(
_löe‹dî
.
LO_DISCOUNT
>=
DISCOUNT_1
 && _löe‹dî.LO_DISCOUNT<=
DISCOUNT_2
 && _löe‹dî.
LO_QUANTITY
>=
QUANTITY_1
 && _löe‹dî.LO_QUANTITY<=
QUANTITY_2
)

148 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ DISCOUNT |%d QUANTITY |%d --d\n",

149 
_löe‹dî
.
LO_DISCOUNT
, _löe‹dî.
LO_QUANTITY
);

150  (
åue
);

154 
	`TRACE
–
TRACE_RECORD_FLOW
, ". DISCOUNT |%d QUANTITY |%d --d\n",

155 
_löe‹dî
.
LO_DISCOUNT
, _löe‹dî.
LO_QUANTITY
);

156  (
Ál£
);

158 
	}
}

162 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

164 
q13_lo_tu∂e
 *
de°
;

165 
de°
 = 
Æig√d_ˇ°
<
q13_lo_tu∂e
>(
d
.
d©a
);

167 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

168 
_¥löe
->
	`gë_vÆue
(9, 
_löe‹dî
.
LO_EXTENDEDPRICE
);

169 
_¥löe
->
	`gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

172 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d --d\n",

173 
_löe‹dî
.
LO_ORDERDATE
,

174 
_löe‹dî
.
LO_EXTENDEDPRICE
,

175 
_löe‹dî
.
LO_DISCOUNT
);

177 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

178 
de°
->
LO_EXTENDEDPRICE
 = 
_löe‹dî
.LO_EXTENDEDPRICE;

179 
de°
->
LO_DISCOUNT
 = 
_löe‹dî
.LO_DISCOUNT;

181 
	}
}

183 
q13_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

184  
√w
 
	`q13_löe‹dî_tsˇn_fûãr_t
(*
this
);

185 
	}
}

187 
c_°r
 
	$to_°rög
() const {

188  
	`c_°r
("q13_lineorder_tscan_filter_t()");

189 
	}
}

196 ˛as†
	cq13_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


198 
¥iv©e
:

199 
Sh‹eSSBEnv
* 
_ssbdb
;

200 
èbÀ_row_t
* 
	m_¥d©e
;

201 
ªp_row_t
 
	m_º
;

203 
ssb_d©e_tu∂e
 
	m_d©e
;

206 
	mYEAR
;

207 
	mWEEKNUMINYEAR
;

209 
	mpublic
:

211 
	$q13_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q1_3_öput_t
 &
ö
)

212 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

216 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

217 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

218 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

219 
_¥d©e
->
_ªp
 = &
_º
;

221 
YEAR
=1994;

222 
WEEKNUMINYEAR
=6;

225 ~
	$q13_d©e_tsˇn_fûãr_t
()

228 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

229 
	}
}

233 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

236 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

237 
	`as£π
(
Ál£
);

240 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

241 
_¥d©e
->
	`gë_vÆue
(11, 
_d©e
.
D_WEEKNUMINYEAR
);

244 i‡(
_d©e
.
D_YEAR
==
YEAR
 && _d©e.
D_WEEKNUMINYEAR
==
WEEKNUMINYEAR
)

246 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ WEEKNUMINYEAR |%d YEAR |%d --d\n",

247 
_d©e
.
D_WEEKNUMINYEAR
, _d©e.
D_YEAR
);

248  (
åue
);

252 
	`TRACE
–
TRACE_RECORD_FLOW
, ". WEEKNUMINYEAR |%d YEAR |%d --d\n",

253 
_d©e
.
D_WEEKNUMINYEAR
, _d©e.
D_YEAR
);

254  (
Ál£
);

257 
	}
}

261 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

263 
q13_d_tu∂e
 *
de°
;

264 
de°
 = 
Æig√d_ˇ°
<
q13_d_tu∂e
>(
d
.
d©a
);

266 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

268 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

269 
_d©e
.
D_DATEKEY
);

272 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

273 
	}
}

275 
q13_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

276  
√w
 
	`q13_d©e_tsˇn_fûãr_t
(*
this
);

277 
	}
}

279 
c_°r
 
	$to_°rög
() const {

280  
	`c_°r
("q13_date_tscan_filter_t()");

281 
	}
}

286 
	gq13_joö_t
 : 
public
 
tu∂e_joö_t
 {

289 
q13_joö_t
 ()

290 : 
tu∂e_joö_t
((
q13_lo_tu∂e
),

291 
off£tof
(
q13_lo_tu∂e
, 
LO_ORDERDATE
),

292 (
q13_d_tu∂e
),

293 
off£tof
(
q13_d_tu∂e
, 
D_DATEKEY
),

295 (
q13_joö_tu∂e
))

300 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

301 c⁄° 
tu∂e_t
 &
À·
,

302 c⁄° 
tu∂e_t
 &
right
)

305 
q13_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q13_lo_tu∂e>(
À·
.
d©a
);

306 
q13_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q13_d_tu∂e>(
right
.
d©a
);

307 
q13_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q13_joö_tu∂e>(
de°
.
d©a
);

309 
	gªt
->
	gLO_EXTENDEDPRICE
 = 
lo
->
LO_EXTENDEDPRICE
;

310 
	gªt
->
	gLO_DISCOUNT
 = 
lo
->
LO_DISCOUNT
;

312 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d \n",
ªt
->
LO_EXTENDEDPRICE
,Ñë->
LO_DISCOUNT
);

316 
vútuÆ
 
q13_joö_t
* 
˛⁄e
() const {

317  
√w
 
q13_joö_t
(*
this
);

320 
vútuÆ
 
c_°r
 
to_°rög
() const {

357 
	gq13_aggªg©e
 : 
tu∂e_aggªg©e_t
 {

358 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

361 
q13_aggªg©e
()

362 : 
tu∂e_aggªg©e_t
((
q13_agg_tu∂e
)),

363 
_exåa˘‹
(0, 0)

368 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

369  &
	g_exåa˘‹
;

371 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

372 
q13_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q13_agg_tu∂e>(
agg_d©a
);

373 
q13_joö_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q13_joö_tu∂e>(
t
.
d©a
);

375 
	gvÆue
 = (
tu∂e
->
LO_EXTENDEDPRICE
 *Åu∂e->
LO_DISCOUNT
)/100;

376 
	gagg
->
	gTOTAL_SUM
 +
vÆue
;

379 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

380 
q13_agg_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q13_agg_tu∂e>(
d
.
d©a
);

381 
q13_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q13_agg_tu∂e>(
agg_d©a
);

382 
	gde°
->
	gREVENUE
 = 
agg
->
TOTAL_SUM
;

384 
vútuÆ
 
q13_aggªg©e
* 
˛⁄e
() const {

385  
√w
 
q13_aggªg©e
(*
this
);

387 
vútuÆ
 
c_°r
 
to_°rög
() const {

396 ˛as†
	cssb_q13_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


398 
public
:

400 
	$begö
() {

401 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q1_3 ANSWER ...\n");

402 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

405 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

406 
¥oje˘ed_tu∂e
 *
tu∂e
;

407 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

408 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %l‡\n", 
tu∂e
->
REVENUE
);

411 
	}
}

422 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q1_3
(c⁄° 
x˘_id
,

423 
q1_3_öput_t
& 
ö
)

425 
	`TRACE
–
TRACE_ALWAYS
, "********** q1_3 *********\n");

428 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

429 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

433 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_lo_tu∂e
));

434 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

435 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

436 
lo_out_buf„r
,

437 
√w
 
	`q13_löe‹dî_tsˇn_fûãr_t
(
this
),

438 
this
->
	`db
(),

439 
_∂öe‹dî_desc
.
	`gë
(),

440 
px˘


445 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_d_tu∂e
));

446 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

447 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

448 
d_out_buf„r
,

449 
√w
 
	`q13_d©e_tsˇn_fûãr_t
(
this
,
ö
),

450 
this
->
	`db
(),

451 
_pd©e_desc
.
	`gë
(),

452 
px˘


459 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q13_joö_tu∂e
));

460 
∑ckë_t
* 
joö_∑ckë
 =

461 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date JOIN",

462 
joö_out
,

463 
√w
 
	`åivül_fûãr_t
((
q13_joö_tu∂e
)),

464 
lo_tsˇn_∑ckë
,

465 
d_tsˇn_∑ckë
,

466 
√w
 
	`q13_joö_t
() );

468 
tu∂e_fifo
* 
q13_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_agg_tu∂e
));

469 
∑ckë_t
* 
q13_agg_∑ckë
 = 
√w
 
	`aggªg©e_∑ckë_t
("AGG Q1_3",

470 
q13_agg_buf„r
,

471 
√w
 
	`åivül_fûãr_t
((
q13_agg_tu∂e
)),

472 
√w
 
	`q13_aggªg©e
(),

473 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

474 
joö_∑ckë
);

478 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

479 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

480 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

481 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

482 
q13_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

486 
ssb_q13_¥o˚ss_tu∂e_t
 
±
;

487 
	`¥o˚ss_quîy
(
q13_agg_∑ckë
, 
±
);

488 
dp
->
	`quîy_°©e_de°roy
(
qs
);

490  (
RCOK
);

491 
	}
}

494 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q2_1.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

67 
	sq21_lo_tu∂e
 {

68 
	mLO_PARTKEY
;

69 
	mLO_SUPPKEY
;

70 
	mLO_ORDERDATE
;

71 
	mLO_REVENUE
;

74 
	sq21_p_tu∂e
 {

75 
	mP_PARTKEY
;

76 
	mP_BRAND
[10];

79 
	sq21_s_tu∂e
 {

80 
	mS_SUPPKEY
;

83 
	sq21_d_tu∂e
 {

84 
	mD_DATEKEY
;

85 
	mD_YEAR
;

88 
	sq21_joö_s_tu∂e
 {

89 
	mLO_ORDERDATE
;

90 
	mLO_PARTKEY
;

91 
	mLO_REVENUE
;

94 
	sq21_joö_s_p_tu∂e
 {

95 
	mLO_ORDERDATE
;

96 
	mP_BRAND
[10];

97 
	mLO_REVENUE
;

100 
	sq21_joö_tu∂e
 {

101 
	mP_BRAND
[10];

102 
	mD_YEAR
;

103 
	mLO_REVENUE
;

106 
	sq21_aggªg©e_tu∂e
 {

107 
	mP_BRAND
[10];

108 
	mD_YEAR
;

109 
	mREVENUE
;

117 
q21_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

119 ˛as†
	cq21_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

120 
¥iv©e
:

121 
Sh‹eSSBEnv
* 
_ssbdb
;

122 
èbÀ_row_t
* 
	m_¥löe
;

123 
ªp_row_t
 
	m_º
;

125 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

127 
	mpublic
:

129 
	$q21_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

130 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
) {

133 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

134 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

135 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

136 
_¥löe
->
_ªp
 = &
_º
;

140 ~
	$q21_löe‹dî_tsˇn_fûãr_t
() {

142 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

143 
	}
}

148 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

151 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

152 
	`as£π
(
Ál£
);

155  (
åue
);

156 
	}
}

161 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

163 
q21_lo_tu∂e
 *
de°
;

164 
de°
 = 
Æig√d_ˇ°
<
q21_lo_tu∂e
 > (
d
.
d©a
);

166 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

167 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

168 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

169 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

172 
	`TRACE
(
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

173 
_löe‹dî
.
LO_PARTKEY
,

174 
_löe‹dî
.
LO_SUPPKEY
,

175 
_löe‹dî
.
LO_ORDERDATE
,

176 
_löe‹dî
.
LO_REVENUE
);

178 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

179 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

180 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

181 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

183 
	}
}

185 
q21_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

186  
√w
 
	`q21_löe‹dî_tsˇn_fûãr_t
(*
this
);

187 
	}
}

189 
c_°r
 
	$to_°rög
() const {

190  
	`c_°r
("q21_lineorder_tscan_filter_t()");

191 
	}
}

194 ˛as†
	cq21_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

195 
¥iv©e
:

196 
Sh‹eSSBEnv
* 
_ssbdb
;

197 
èbÀ_row_t
* 
	m_¥∑π
;

198 
ªp_row_t
 
	m_º
;

200 
ssb_∑π_tu∂e
 
	m_∑π
;

203 
	mCATEGORY
[8];

204 
	mpublic
:

206 
	$q21_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_1_öput_t
 &
ö
)

207 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
) {

210 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

211 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

212 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

213 
_¥∑π
->
_ªp
 = &
_º
;

216 
	`°r˝y
(
CATEGORY
, "MFGR#12");

219 ~
	$q21_∑π_tsˇn_fûãr_t
() {

221 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

222 
	}
}

227 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

230 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

231 
	`as£π
(
Ál£
);

234 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_CATEGORY
, 
	`STRSIZE
(7));

236 i‡(
	`°rcmp
(
_∑π
.
P_CATEGORY
, 
CATEGORY
) == 0) {

237 
	`TRACE
(
TRACE_RECORD_FLOW
, "+ CATEGORY |%s --d\n",

238 
_∑π
.
P_CATEGORY
);

239  (
åue
);

241 
	`TRACE
(
TRACE_RECORD_FLOW
, ". CATEGORY |%s --d\n",

242 
_∑π
.
P_CATEGORY
);

243  (
Ál£
);

245 
	}
}

250 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

252 
q21_p_tu∂e
 *
de°
;

253 
de°
 = 
Æig√d_ˇ°
<
q21_p_tu∂e
 > (
d
.
d©a
);

255 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

256 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

258 
	`TRACE
(
TRACE_RECORD_FLOW
, "%d|%s --d\n",

259 
_∑π
.
P_PARTKEY
,

260 
_∑π
.
P_BRAND
);

263 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

264 
	`°r˝y
(
de°
->
P_BRAND
, 
_∑π
.P_BRAND);

265 
	}
}

267 
q21_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

268  
√w
 
	`q21_∑π_tsˇn_fûãr_t
(*
this
);

269 
	}
}

271 
c_°r
 
	$to_°rög
() const {

272  
	`c_°r
("q21_part_tscan_filter_t()");

273 
	}
}

276 ˛as†
	cq21_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

277 
¥iv©e
:

278 
Sh‹eSSBEnv
* 
_ssbdb
;

279 
èbÀ_row_t
* 
	m_¥suµ
;

280 
ªp_row_t
 
	m_º
;

282 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

285 
	mREGION
[13];

286 
	mpublic
:

288 
	$q21_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_1_öput_t
 &
ö
)

289 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
) {

292 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

293 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

294 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

295 
_¥suµ
->
_ªp
 = &
_º
;

298 
	`°r˝y
(
REGION
, "AMERICA");

301 ~
	$q21_suµlõr_tsˇn_fûãr_t
() {

303 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

304 
	}
}

309 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

312 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

313 
	`as£π
(
Ál£
);

316 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

319 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
, 
REGION
) == 0) {

320 
	`TRACE
(
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

321 
_suµlõr
.
S_REGION
);

322  (
åue
);

324 
	`TRACE
(
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

325 
_suµlõr
.
S_REGION
);

326  (
Ál£
);

328 
	}
}

333 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

335 
q21_s_tu∂e
 *
de°
;

336 
de°
 = 
Æig√d_ˇ°
<
q21_s_tu∂e
 > (
d
.
d©a
);

338 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

340 
	`TRACE
(
TRACE_RECORD_FLOW
, "%d --d\n",

341 
_suµlõr
.
S_SUPPKEY
);

344 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

345 
	}
}

347 
q21_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

348  
√w
 
	`q21_suµlõr_tsˇn_fûãr_t
(*
this
);

349 
	}
}

351 
c_°r
 
	$to_°rög
() const {

352  
	`c_°r
("q2_1_supplier_tscan_filter_t()");

353 
	}
}

356 ˛as†
	cq21_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

357 
¥iv©e
:

358 
Sh‹eSSBEnv
* 
_ssbdb
;

359 
èbÀ_row_t
* 
	m_¥d©e
;

360 
ªp_row_t
 
	m_º
;

362 
ssb_d©e_tu∂e
 
	m_d©e
;

365 
	mpublic
:

367 
	$q21_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_1_öput_t
 &
ö
)

368 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
) {

371 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

372 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

373 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

374 
_¥d©e
->
_ªp
 = &
_º
;

378 ~
	$q21_d©e_tsˇn_fûãr_t
() {

380 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

381 
	}
}

386 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

389 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

390 
	`as£π
(
Ál£
);

393  (
åue
);

394 
	}
}

399 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

401 
q21_d_tu∂e
 *
de°
;

402 
de°
 = 
Æig√d_ˇ°
<
q21_d_tu∂e
 > (
d
.
d©a
);

404 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

405 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

407 
	`TRACE
(
TRACE_RECORD_FLOW
, "%d|%d --d\n",

408 
_d©e
.
D_DATEKEY
,

409 
_d©e
.
D_YEAR
);

412 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

413 
de°
->
D_YEAR
 = 
_d©e
.D_YEAR;

414 
	}
}

416 
q21_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

417  
√w
 
	`q21_d©e_tsˇn_fûãr_t
(*
this
);

418 
	}
}

420 
c_°r
 
	$to_°rög
() const {

421  
	`c_°r
("q21_date_tscan_filter_t()");

422 
	}
}

428 
	gq21_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

430 
q21_lo_s_joö_t
()

431 : 
tu∂e_joö_t
( (
q21_lo_tu∂e
),

432 
off£tof
(
q21_lo_tu∂e
, 
LO_SUPPKEY
),

433  (
q21_s_tu∂e
),

434 
off£tof
(
q21_s_tu∂e
, 
S_SUPPKEY
),

436  (
q21_joö_s_tu∂e
)) {

439 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

440 c⁄° 
tu∂e_t
 &
À·
,

441 c⁄° 
tu∂e_t
 & 
right
) {

443 
q21_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q21_lo_tu∂ê> (
À·
.
d©a
);

444 
q21_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q21_s_tu∂ê> (
right
.
d©a
);

445 
q21_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q21_joö_s_tu∂ê> (
de°
.
d©a
);

447 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

448 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

449 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

452 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN %d %d %d\n", 
ªt
->
LO_ORDERDATE
,Ñë->
LO_PARTKEY
,Ñë->
LO_REVENUE
);

456 
vútuÆ
 
q21_lo_s_joö_t
 * 
˛⁄e
() const {

457  
√w
 
q21_lo_s_joö_t
(*
this
);

460 
vútuÆ
 
c_°r
 
to_°rög
() const {

468 
	gq21_lo_s_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

470 
q21_lo_s_p_joö_t
()

471 : 
tu∂e_joö_t
( (
q21_joö_s_tu∂e
),

472 
off£tof
(
q21_joö_s_tu∂e
, 
LO_PARTKEY
),

473  (
q21_p_tu∂e
),

474 
off£tof
(
q21_p_tu∂e
, 
P_PARTKEY
),

476  (
q21_joö_s_p_tu∂e
)) {

479 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

480 c⁄° 
tu∂e_t
 &
À·
,

481 c⁄° 
tu∂e_t
 & 
right
) {

483 
q21_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q21_joö_s_tu∂ê> (
À·
.
d©a
);

484 
q21_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q21_p_tu∂ê> (
right
.
d©a
);

485 
q21_joö_s_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q21_joö_s_p_tu∂ê> (
de°
.
d©a
);

487 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
;

488 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

489 
°r˝y
(
ªt
->
P_BRAND
, 
p
->P_BRAND);

491 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d\n", 
ªt
->
LO_ORDERDATE
,Ñë->
P_BRAND
,Ñë->
LO_REVENUE
);

495 
vútuÆ
 
q21_lo_s_p_joö_t
 * 
˛⁄e
() const {

496  
√w
 
q21_lo_s_p_joö_t
(*
this
);

499 
vútuÆ
 
c_°r
 
to_°rög
() const {

507 
	gq21_joö_t
 : 
public
 
tu∂e_joö_t
 {

509 
q21_joö_t
()

510 : 
tu∂e_joö_t
( (
q21_joö_s_p_tu∂e
),

511 
off£tof
(
q21_joö_s_p_tu∂e
, 
LO_ORDERDATE
),

512  (
q21_d_tu∂e
),

513 
off£tof
(
q21_d_tu∂e
, 
D_DATEKEY
),

515  (
q21_joö_tu∂e
)) {

518 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

519 c⁄° 
tu∂e_t
 &
À·
,

520 c⁄° 
tu∂e_t
 & 
right
) {

522 
q21_joö_s_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q21_joö_s_p_tu∂ê> (
À·
.
d©a
);

523 
q21_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q21_d_tu∂ê> (
right
.
d©a
);

524 
q21_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q21_joö_tu∂ê> (
de°
.
d©a
);

526 
°r˝y
(
ªt
->
P_BRAND
, 
jo
->P_BRAND);

527 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

528 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

531 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d\n", 
ªt
->
P_BRAND
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

535 
vútuÆ
 
q21_joö_t
 * 
˛⁄e
() const {

536  
√w
 
q21_joö_t
(*
this
);

539 
vútuÆ
 
c_°r
 
to_°rög
() const {

549 
	sq21_agg_öput_tu∂e_key
 {

550 
	mP_BRAND
[
STRSIZE
(9)];

551 
	mD_YEAR
;

553 
exåa˘_höt
() {

554  (
	mthis
->
	mD_YEAR
 - 1990 << 24Ë+ (this->
	mP_BRAND
[5] << 16) + (this->P_BRAND[6] << 8) + (this->P_BRAND[7]);

558 
	gq21_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

560 
q21_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q21_agg_öput_tu∂e_key
), 
off£tof
(
q21_joö_tu∂e
, 
P_BRAND
)) {

563 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

564 
q21_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q21_agg_öput_tu∂e_key > (
key
);

584  
	gÆig√d_key
->
exåa˘_höt
();

589 
vútuÆ
 
q21_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

590  
√w
 
q21_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

594 
	gq21_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

596 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

597 
q21_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q21_agg_öput_tu∂e_key > (
key1
);

598 
q21_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q21_agg_öput_tu∂e_key > (
key2
);

600 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

601 i‡(
	gpbøndcom∑ris⁄
 !0Ë 
pbøndcom∑ris⁄
;

602  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

605 
vútuÆ
 
q21_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

606  
√w
 
q21_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

611 
q21_agg_öput_tu∂e_key
 
	tq21_agg_tu∂e_key
;

613 ˛as†
	cq21_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

614 
¥iv©e
:

616 
q21_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

618 
q21_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q21_agg_tu∂e_key
), 
off£tof
(
q21_aggªg©e_tu∂e
, 
P_BRAND
)) {

621 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

622 
q21_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q21_agg_tu∂e_key > (
key
);

623  
	mÆig√d_key
->
exåa˘_höt
();

626 
vútuÆ
 
q21_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

627  
√w
 
q21_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

631 
q21_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

633 
	gpublic
:

635 
	$q21_agg_aggªg©e_t
()

636 : 
	`tu∂e_aggªg©e_t
( (
q21_aggªg©e_tu∂e
)) {

637 
	}
}

639 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

640  &
_exåa˘‹
;

641 
	}
}

643 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

644 
q21_joö_tu∂e
 *
§c
;

645 
§c
 = 
Æig√d_ˇ°
<
q21_joö_tu∂e
 > (
s
.
d©a
);

646 
q21_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q21_aggªg©e_tu∂ê> (
agg_d©a
);

648 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

649 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

650 
	}
}

652 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

653 
q21_aggªg©e_tu∂e
 *
de°
;

654 
de°
 = 
Æig√d_ˇ°
<
q21_aggªg©e_tu∂e
 > (
d
.
d©a
);

655 
q21_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q21_aggªg©e_tu∂ê> (
agg_d©a
);

657 *
de°
 = *
tu∂e
;

658 
	}
}

660 
q21_agg_aggªg©e_t
* 
	$˛⁄e
() const {

661  
√w
 
	`q21_agg_aggªg©e_t
(*
this
);

662 
	}
}

664 
c_°r
 
	$to_°rög
() const {

666 
	}
}

673 
	sq21_s‹t_tu∂e_key
 {

674 
	mP_BRAND
[
STRSIZE
(9)];

675 
	mD_YEAR
;

679 
	gq21_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

681 
q21_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q21_s‹t_tu∂e_key
), 
off£tof
(
q21_aggªg©e_tu∂e
, 
P_BRAND
)) {

684 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

685 
q21_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q21_s‹t_tu∂e_key > (
key
);

691 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë+ (Æig√d_key->
P_BRAND
[5] << 24)+(aligned_key->P_BRAND[6] << 16)+(aligned_key->P_BRAND[7] << 8);

692  
	gªsu…
;

697 
vútuÆ
 
q21_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

698  
√w
 
q21_‹dî_key_exåa˘‹_t
(*
this
);

702 
	gq21_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

704 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

705 
q21_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q21_s‹t_tu∂e_key > (
key1
);

706 
q21_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q21_s‹t_tu∂e_key > (
key2
);

708 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

709 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

711 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

712  
	gpbøndcom∑ris⁄
;

715 
vútuÆ
 
q21_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

716  
√w
 
q21_‹dî_key_com∑ª_t
(*
this
);

720 ˛as†
	cssb_q21_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

721 
public
:

723 
	$begö
() {

724 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q2_1 ANSWER ...\n");

725 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

728 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

729 
¥oje˘ed_tu∂e
 *
tu∂e
;

730 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
 > (
ouçut
.
d©a
);

732 
	`TRACE
(
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} %d\n", 
tu∂e
->
D_YEAR
,Åu∂e->
P_BRAND
,Åu∂e->
REVENUE
);

736 
	}
}

745 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q2_1
(c⁄° 
x˘_id
,

746 
q2_1_öput_t
& 
ö
) {

747 
	`TRACE
(
TRACE_ALWAYS
, "********** q2_1 *********\n");

750 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

751 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

755 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
q21_lo_tu∂e
));

756 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

757 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

758 
lo_out_buf„r
,

759 
√w
 
	`q21_löe‹dî_tsˇn_fûãr_t
(
this
),

760 
this
->
	`db
(),

761 
_∂öe‹dî_desc
.
	`gë
(),

762 
px˘


766 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
q21_s_tu∂e
));

767 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

768 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

769 
s_out_buf„r
,

770 
√w
 
	`q21_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

771 
this
->
	`db
(),

772 
_psuµlõr_desc
.
	`gë
(),

773 
px˘


777 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
q21_p_tu∂e
));

778 
tsˇn_∑ckë_t
* 
p_tsˇn_∑ckë
 =

779 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PART",

780 
p_out_buf„r
,

781 
√w
 
	`q21_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

782 
this
->
	`db
(),

783 
_µ¨t_desc
.
	`gë
(),

784 
px˘


788 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
q21_d_tu∂e
));

789 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

790 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

791 
d_out_buf„r
,

792 
√w
 
	`q21_d©e_tsˇn_fûãr_t
(
this
, 
ö
),

793 
this
->
	`db
(),

794 
_pd©e_desc
.
	`gë
(),

795 
px˘


801 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
( (
q21_joö_s_tu∂e
));

802 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

803 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

804 
joö_lo_s_out
,

805 
√w
 
	`åivül_fûãr_t
( (
q21_joö_s_tu∂e
)),

806 
lo_tsˇn_∑ckë
,

807 
s_tsˇn_∑ckë
,

808 
√w
 
	`q21_lo_s_joö_t
());

811 
tu∂e_fifo
* 
joö_lo_s_p_out
 = 
√w
 
	`tu∂e_fifo
( (
q21_joö_s_p_tu∂e
));

812 
∑ckë_t
* 
joö_lo_s_p_∑ckë
 =

813 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part JOIN",

814 
joö_lo_s_p_out
,

815 
√w
 
	`åivül_fûãr_t
( (
q21_joö_s_p_tu∂e
)),

816 
joö_lo_s_∑ckë
,

817 
p_tsˇn_∑ckë
,

818 
√w
 
	`q21_lo_s_p_joö_t
());

821 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
( (
q21_joö_tu∂e
));

822 
∑ckë_t
* 
joö_∑ckë
 =

823 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part - Date JOIN",

824 
joö_out
,

825 
√w
 
	`åivül_fûãr_t
( (
q21_joö_tu∂e
)),

826 
joö_lo_s_p_∑ckë
,

827 
d_tsˇn_∑ckë
,

828 
√w
 
	`q21_joö_t
());

832 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

833 
√w
 
	`tu∂e_fifo
( (
q21_aggªg©e_tu∂e
));

834 
∑ckë_t
* 
q21_agg_∑ckë
 =

835 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q2_1",

836 
agg_ouçut_buf„r
,

837 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

838 
joö_∑ckë
,

839 
√w
 
	`q21_agg_aggªg©e_t
(),

840 
√w
 
	`q21_agg_öput_tu∂e_key_exåa˘‹_t
(),

841 
√w
 
	`q21_agg_öput_tu∂e_key_com∑ª_t
());

844 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q21_aggªg©e_tu∂e
));

845 
∑ckë_t
* 
q21_s‹t_föÆ_∑ckë
 =

846 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

847 
s‹t_föÆ_out
,

848 
√w
 
	`åivül_fûãr_t
((
q21_aggªg©e_tu∂e
)),

849 
√w
 
	`q21_‹dî_key_exåa˘‹_t
(),

850 
√w
 
	`q21_‹dî_key_com∑ª_t
(),

851 
q21_agg_∑ckë
);

855 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

856 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

857 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

858 
p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

859 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

860 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

861 
joö_lo_s_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

862 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

863 
q21_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

864 
q21_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

867 
ssb_q21_¥o˚ss_tu∂e_t
 
±
;

868 
	`¥o˚ss_quîy
(
q21_s‹t_föÆ_∑ckë
, 
±
);

869 
dp
->
	`quîy_°©e_de°roy
(
qs
);

871  (
RCOK
);

872 
	}
}

875 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q2_2.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

67 
	sq22_lo_tu∂e


69 
	mLO_PARTKEY
;

70 
	mLO_SUPPKEY
;

71 
	mLO_ORDERDATE
;

72 
	mLO_REVENUE
;

75 
	sq22_p_tu∂e


77 
	mP_PARTKEY
;

78 
	mP_BRAND
[10];

81 
	sq22_s_tu∂e


83 
	mS_SUPPKEY
;

86 
	sq22_d_tu∂e


88 
	mD_DATEKEY
;

89 
	mD_YEAR
;

92 
	sq22_joö_s_tu∂e


94 
	mLO_ORDERDATE
;

95 
	mLO_PARTKEY
;

96 
	mLO_REVENUE
;

99 
	sq22_joö_s_p_tu∂e


101 
	mLO_ORDERDATE
;

102 
	mP_BRAND
[10];

103 
	mLO_REVENUE
;

107 
	sq22_joö_tu∂e


109 
	mP_BRAND
[10];

110 
	mD_YEAR
;

111 
	mLO_REVENUE
;

114 
	sq22_aggªg©e_tu∂e


116 
	mP_BRAND
[10];

117 
	mD_YEAR
;

118 
	mREVENUE
;

125 
q22_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

128 ˛as†
	cq22_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


130 
¥iv©e
:

131 
Sh‹eSSBEnv
* 
_ssbdb
;

132 
èbÀ_row_t
* 
	m_¥löe
;

133 
ªp_row_t
 
	m_º
;

135 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

137 
	mpublic
:

139 
	$q22_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

140 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

144 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

145 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

146 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

147 
_¥löe
->
_ªp
 = &
_º
;

151 ~
	$q22_löe‹dî_tsˇn_fûãr_t
()

154 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

155 
	}
}

159 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

162 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

163 
	`as£π
(
Ál£
);

166  (
åue
);

167 
	}
}

171 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

173 
q22_lo_tu∂e
 *
de°
;

174 
de°
 = 
Æig√d_ˇ°
<
q22_lo_tu∂e
>(
d
.
d©a
);

176 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

177 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

178 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

179 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

182 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

183 
_löe‹dî
.
LO_PARTKEY
,

184 
_löe‹dî
.
LO_SUPPKEY
,

185 
_löe‹dî
.
LO_ORDERDATE
,

186 
_löe‹dî
.
LO_REVENUE
);

188 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

189 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

190 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

191 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

193 
	}
}

195 
q22_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

196  
√w
 
	`q22_löe‹dî_tsˇn_fûãr_t
(*
this
);

197 
	}
}

199 
c_°r
 
	$to_°rög
() const {

200  
	`c_°r
("q22_lineorder_tscan_filter_t()");

201 
	}
}

205 ˛as†
	cq22_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


207 
¥iv©e
:

208 
Sh‹eSSBEnv
* 
_ssbdb
;

209 
èbÀ_row_t
* 
	m_¥∑π
;

210 
ªp_row_t
 
	m_º
;

212 
ssb_∑π_tu∂e
 
	m_∑π
;

215 
	mBRAND_1
[10];

216 
	mBRAND_2
[10];

217 
	mpublic
:

219 
	$q22_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_2_öput_t
 &
ö
)

220 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

224 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

225 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

226 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

227 
_¥∑π
->
_ªp
 = &
_º
;

230 
	`°r˝y
(
BRAND_1
,"MFGR#2221");

231 
	`°r˝y
(
BRAND_2
,"MFGR#2228");

234 ~
	$q22_∑π_tsˇn_fûãr_t
()

237 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

238 
	}
}

242 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

245 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

246 
	`as£π
(
Ál£
);

249 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

251 i‡(
	`°rcmp
(
_∑π
.
P_BRAND
,
BRAND_1
)>=0 && såcmp(_∑π.P_BRAND,
BRAND_2
)<=0)

254 i‡(
	`°rcmp
(
_∑π
.
P_BRAND
,"MFGR#222")==0)

256 
	`TRACE
–
TRACE_ALWAYS
, "DIRTY HACK IN USE\n");

257  (
Ál£
);

259 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ BRAND |%s --d\n",

260 
_∑π
.
P_BRAND
);

261  (
åue
);

265 
	`TRACE
–
TRACE_RECORD_FLOW
, ". BRAND |%s --d\n",

266 
_∑π
.
P_BRAND
);

267  (
Ál£
);

269 
	}
}

273 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

275 
q22_p_tu∂e
 *
de°
;

276 
de°
 = 
Æig√d_ˇ°
<
q22_p_tu∂e
>(
d
.
d©a
);

278 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

279 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

281 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

282 
_∑π
.
P_PARTKEY
,

283 
_∑π
.
P_BRAND
);

286 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

287 
	`°r˝y
(
de°
->
P_BRAND
,
_∑π
.P_BRAND);

288 
	}
}

290 
q22_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

291  
√w
 
	`q22_∑π_tsˇn_fûãr_t
(*
this
);

292 
	}
}

294 
c_°r
 
	$to_°rög
() const {

295  
	`c_°r
("q22_part_tscan_filter_t()");

296 
	}
}

300 ˛as†
	cq22_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


302 
¥iv©e
:

303 
Sh‹eSSBEnv
* 
_ssbdb
;

304 
èbÀ_row_t
* 
	m_¥suµ
;

305 
ªp_row_t
 
	m_º
;

307 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

310 
	mREGION
[13];

311 
	mpublic
:

313 
	$q22_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_2_öput_t
 &
ö
)

314 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

318 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

319 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

320 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

321 
_¥suµ
->
_ªp
 = &
_º
;

324 
	`°r˝y
(
REGION
,"ASIA");

327 ~
	$q22_suµlõr_tsˇn_fûãr_t
()

330 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

331 
	}
}

335 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

338 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

339 
	`as£π
(
Ál£
);

342 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

345 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
,
REGION
)==0)

347 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

348 
_suµlõr
.
S_REGION
);

349  (
åue
);

353 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

354 
_suµlõr
.
S_REGION
);

355  (
Ál£
);

357 
	}
}

361 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

363 
q22_s_tu∂e
 *
de°
;

364 
de°
 = 
Æig√d_ˇ°
<
q22_s_tu∂e
>(
d
.
d©a
);

366 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

368 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

369 
_suµlõr
.
S_SUPPKEY
);

372 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

373 
	}
}

375 
q22_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

376  
√w
 
	`q22_suµlõr_tsˇn_fûãr_t
(*
this
);

377 
	}
}

379 
c_°r
 
	$to_°rög
() const {

380  
	`c_°r
("q22_supplier_tscan_filter_t()");

381 
	}
}

386 ˛as†
	cq22_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


388 
¥iv©e
:

389 
Sh‹eSSBEnv
* 
_ssbdb
;

390 
èbÀ_row_t
* 
	m_¥d©e
;

391 
ªp_row_t
 
	m_º
;

393 
ssb_d©e_tu∂e
 
	m_d©e
;

396 
	mpublic
:

398 
	$q22_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_2_öput_t
 &
ö
)

399 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

403 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

404 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

405 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

406 
_¥d©e
->
_ªp
 = &
_º
;

410 ~
	$q22_d©e_tsˇn_fûãr_t
()

413 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

414 
	}
}

418 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

421 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

422 
	`as£π
(
Ál£
);

425  (
åue
);

426 
	}
}

430 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

432 
q22_d_tu∂e
 *
de°
;

433 
de°
 = 
Æig√d_ˇ°
<
q22_d_tu∂e
>(
d
.
d©a
);

435 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

436 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

438 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

439 
_d©e
.
D_DATEKEY
,

440 
_d©e
.
D_YEAR
);

443 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

444 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

445 
	}
}

447 
q22_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

448  
√w
 
	`q22_d©e_tsˇn_fûãr_t
(*
this
);

449 
	}
}

451 
c_°r
 
	$to_°rög
() const {

452  
	`c_°r
("q22_date_tscan_filter_t()");

453 
	}
}

458 
	gq22_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

461 
q22_lo_s_joö_t
 ()

462 : 
tu∂e_joö_t
((
q22_lo_tu∂e
),

463 
off£tof
(
q22_lo_tu∂e
, 
LO_SUPPKEY
),

464 (
q22_s_tu∂e
),

465 
off£tof
(
q22_s_tu∂e
, 
S_SUPPKEY
),

467 (
q22_joö_s_tu∂e
))

472 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

473 c⁄° 
tu∂e_t
 &
À·
,

474 c⁄° 
tu∂e_t
 &
right
)

477 
q22_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q22_lo_tu∂e>(
À·
.
d©a
);

478 
q22_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q22_s_tu∂e>(
right
.
d©a
);

479 
q22_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q22_joö_s_tu∂e>(
de°
.
d©a
);

481 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

482 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

483 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

486 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d %d\n",
ªt
->
LO_ORDERDATE
,Ñë->
LO_PARTKEY
,Ñë->
LO_REVENUE
);

490 
vútuÆ
 
q22_lo_s_joö_t
* 
˛⁄e
() const {

491  
√w
 
q22_lo_s_joö_t
(*
this
);

494 
vútuÆ
 
c_°r
 
to_°rög
() const {

501 
	gq22_lo_s_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

504 
q22_lo_s_p_joö_t
 ()

505 : 
tu∂e_joö_t
((
q22_joö_s_tu∂e
),

506 
off£tof
(
q22_joö_s_tu∂e
, 
LO_PARTKEY
),

507 (
q22_p_tu∂e
),

508 
off£tof
(
q22_p_tu∂e
, 
P_PARTKEY
),

510 (
q22_joö_s_p_tu∂e
))

515 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

516 c⁄° 
tu∂e_t
 &
À·
,

517 c⁄° 
tu∂e_t
 &
right
)

520 
q22_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q22_joö_s_tu∂e>(
À·
.
d©a
);

521 
q22_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q22_p_tu∂e>(
right
.
d©a
);

522 
q22_joö_s_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q22_joö_s_p_tu∂e>(
de°
.
d©a
);

524 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
;

525 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

526 
°r˝y
(
ªt
->
P_BRAND
,
p
->P_BRAND);

528 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d\n",
ªt
->
LO_ORDERDATE
,Ñë->
P_BRAND
,Ñë->
LO_REVENUE
);

532 
vútuÆ
 
q22_lo_s_p_joö_t
* 
˛⁄e
() const {

533  
√w
 
q22_lo_s_p_joö_t
(*
this
);

536 
vútuÆ
 
c_°r
 
to_°rög
() const {

543 
	gq22_joö_t
 : 
public
 
tu∂e_joö_t
 {

546 
q22_joö_t
 ()

547 : 
tu∂e_joö_t
((
q22_joö_s_p_tu∂e
),

548 
off£tof
(
q22_joö_s_p_tu∂e
, 
LO_ORDERDATE
),

549 (
q22_d_tu∂e
),

550 
off£tof
(
q22_d_tu∂e
, 
D_DATEKEY
),

552 (
q22_joö_tu∂e
))

557 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

558 c⁄° 
tu∂e_t
 &
À·
,

559 c⁄° 
tu∂e_t
 &
right
)

562 
q22_joö_s_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q22_joö_s_p_tu∂e>(
À·
.
d©a
);

563 
q22_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q22_d_tu∂e>(
right
.
d©a
);

564 
q22_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q22_joö_tu∂e>(
de°
.
d©a
);

566 
°r˝y
(
ªt
->
P_BRAND
,
jo
->P_BRAND);

567 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

568 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

571 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d\n",
ªt
->
P_BRAND
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

575 
vútuÆ
 
q22_joö_t
* 
˛⁄e
() const {

576  
√w
 
q22_joö_t
(*
this
);

579 
vútuÆ
 
c_°r
 
to_°rög
() const {

589 
	sq22_agg_öput_tu∂e_key
 {

591 
	mP_BRAND
[
STRSIZE
(9)];

592 
	mD_YEAR
;

595 
exåa˘_höt
() {

597  (
	mthis
->
	mD_YEAR
 - 1990 << 24Ë+ (this->
	mP_BRAND
[5] << 16) + (this->P_BRAND[6] << 8) + (this->P_BRAND[7]);

601 
	gq22_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

603 
q22_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q22_agg_öput_tu∂e_key
), 
off£tof
(
q22_joö_tu∂e
, 
P_BRAND
)) {

606 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

607 
q22_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q22_agg_öput_tu∂e_key>(
key
);

627  
	gÆig√d_key
->
exåa˘_höt
();

632 
vútuÆ
 
q22_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

633  
√w
 
q22_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

637 
	gq22_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

639 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

640 
q22_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q22_agg_öput_tu∂e_key>(
key1
);

641 
q22_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q22_agg_öput_tu∂e_key>(
key2
);

643 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

644 i‡(
	gpbøndcom∑ris⁄
 !0Ë 
pbøndcom∑ris⁄
;

645  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

648 
vútuÆ
 
q22_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

649  
√w
 
q22_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

654 
q22_agg_öput_tu∂e_key
 
	tq22_agg_tu∂e_key
;

656 ˛as†
	cq22_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

657 
¥iv©e
:

659 
q22_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

661 
q22_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q22_agg_tu∂e_key
), 
off£tof
(
q22_aggªg©e_tu∂e
, 
P_BRAND
)) {

664 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

665 
q22_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q22_agg_tu∂e_key > (
key
);

666  
	mÆig√d_key
->
exåa˘_höt
();

669 
vútuÆ
 
q22_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

670  
√w
 
q22_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

674 
q22_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

676 
	gpublic
:

678 
	$q22_agg_aggªg©e_t
()

679 : 
	`tu∂e_aggªg©e_t
((
q22_aggªg©e_tu∂e
)) {

680 
	}
}

682 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

683  &
_exåa˘‹
;

684 
	}
}

686 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

687 
q22_joö_tu∂e
 *
§c
;

688 
§c
 = 
Æig√d_ˇ°
<
q22_joö_tu∂e
> (
s
.
d©a
);

689 
q22_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q22_aggªg©e_tu∂e>(
agg_d©a
);

691 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

692 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

693 
	}
}

695 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

696 
q22_aggªg©e_tu∂e
 *
de°
;

697 
de°
 = 
Æig√d_ˇ°
<
q22_aggªg©e_tu∂e
 > (
d
.
d©a
);

698 
q22_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q22_aggªg©e_tu∂ê> (
agg_d©a
);

700 *
de°
 = *
tu∂e
;

701 
	}
}

703 
q22_agg_aggªg©e_t
* 
	$˛⁄e
() const {

704  
√w
 
	`q22_agg_aggªg©e_t
(*
this
);

705 
	}
}

707 
c_°r
 
	$to_°rög
() const {

709 
	}
}

716 
	sq22_s‹t_tu∂e_key
 {

717 
	mP_BRAND
[
STRSIZE
(9)];

718 
	mD_YEAR
;

722 
	gq22_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

724 
q22_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q22_s‹t_tu∂e_key
), 
off£tof
(
q22_aggªg©e_tu∂e
, 
P_BRAND
)) {

727 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

728 
q22_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q22_s‹t_tu∂e_key> (
key
);

734 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë+ (Æig√d_key->
P_BRAND
[5] << 24)+(aligned_key->P_BRAND[6] << 16)+(aligned_key->P_BRAND[7] << 8);

735  
	gªsu…
;

740 
vútuÆ
 
q22_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

741  
√w
 
q22_‹dî_key_exåa˘‹_t
(*
this
);

745 
	gq22_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

747 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

748 
q22_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q22_s‹t_tu∂e_key>(
key1
);

749 
q22_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q22_s‹t_tu∂e_key>(
key2
);

751 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

752 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

754 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

755  
	gpbøndcom∑ris⁄
;

758 
vútuÆ
 
q22_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

759  
√w
 
q22_‹dî_key_com∑ª_t
(*
this
);

766 ˛as†
	cssb_q22_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


768 
public
:

770 
	$begö
() {

771 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q2_2 ANSWER ...\n");

772 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

775 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

776 
¥oje˘ed_tu∂e
 *
tu∂e
;

777 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

779 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
P_BRAND
,Åu∂e->
REVENUE
);

783 
	}
}

794 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q2_2
(c⁄° 
x˘_id
,

795 
q2_2_öput_t
& 
ö
)

797 
	`TRACE
–
TRACE_ALWAYS
, "********** q2_2 *********\n");

800 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

801 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

805 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_lo_tu∂e
));

806 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

807 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

808 
lo_out_buf„r
,

809 
√w
 
	`q22_löe‹dî_tsˇn_fûãr_t
(
this
),

810 
this
->
	`db
(),

811 
_∂öe‹dî_desc
.
	`gë
(),

812 
px˘


816 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_s_tu∂e
));

817 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

818 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

819 
s_out_buf„r
,

820 
√w
 
	`q22_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

821 
this
->
	`db
(),

822 
_psuµlõr_desc
.
	`gë
(),

823 
px˘


827 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_p_tu∂e
));

828 
tsˇn_∑ckë_t
* 
p_tsˇn_∑ckë
 =

829 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PART",

830 
p_out_buf„r
,

831 
√w
 
	`q22_∑π_tsˇn_fûãr_t
(
this
,
ö
),

832 
this
->
	`db
(),

833 
_µ¨t_desc
.
	`gë
(),

834 
px˘


838 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_d_tu∂e
));

839 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

840 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

841 
d_out_buf„r
,

842 
√w
 
	`q22_d©e_tsˇn_fûãr_t
(
this
,
ö
),

843 
this
->
	`db
(),

844 
_pd©e_desc
.
	`gë
(),

845 
px˘


851 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q22_joö_s_tu∂e
));

852 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

853 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

854 
joö_lo_s_out
,

855 
√w
 
	`åivül_fûãr_t
((
q22_joö_s_tu∂e
)),

856 
lo_tsˇn_∑ckë
,

857 
s_tsˇn_∑ckë
,

858 
√w
 
	`q22_lo_s_joö_t
() );

861 
tu∂e_fifo
* 
joö_lo_s_p_out
 = 
√w
 
	`tu∂e_fifo
((
q22_joö_s_p_tu∂e
));

862 
∑ckë_t
* 
joö_lo_s_p_∑ckë
 =

863 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part JOIN",

864 
joö_lo_s_p_out
,

865 
√w
 
	`åivül_fûãr_t
((
q22_joö_s_p_tu∂e
)),

866 
joö_lo_s_∑ckë
,

867 
p_tsˇn_∑ckë
,

868 
√w
 
	`q22_lo_s_p_joö_t
() );

871 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q22_joö_tu∂e
));

872 
∑ckë_t
* 
joö_∑ckë
 =

873 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part - Date JOIN",

874 
joö_out
,

875 
√w
 
	`åivül_fûãr_t
((
q22_joö_tu∂e
)),

876 
joö_lo_s_p_∑ckë
,

877 
d_tsˇn_∑ckë
,

878 
√w
 
	`q22_joö_t
() );

882 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

883 
√w
 
	`tu∂e_fifo
( (
q22_aggªg©e_tu∂e
));

884 
∑ckë_t
* 
q22_agg_∑ckë
 =

885 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q2_2",

886 
agg_ouçut_buf„r
,

887 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

888 
joö_∑ckë
,

889 
√w
 
	`q22_agg_aggªg©e_t
(),

890 
√w
 
	`q22_agg_öput_tu∂e_key_exåa˘‹_t
(),

891 
√w
 
	`q22_agg_öput_tu∂e_key_com∑ª_t
());

894 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q22_aggªg©e_tu∂e
));

895 
∑ckë_t
* 
q22_s‹t_föÆ_∑ckë
 =

896 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

897 
s‹t_föÆ_out
,

898 
√w
 
	`åivül_fûãr_t
((
q22_aggªg©e_tu∂e
)),

899 
√w
 
	`q22_‹dî_key_exåa˘‹_t
(),

900 
√w
 
	`q22_‹dî_key_com∑ª_t
(),

901 
q22_agg_∑ckë
);

904 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

905 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

906 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

907 
p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

908 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

909 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

910 
joö_lo_s_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

911 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

912 
q22_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

913 
q22_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

916 
ssb_q22_¥o˚ss_tu∂e_t
 
±
;

917 
	`¥o˚ss_quîy
(
q22_s‹t_föÆ_∑ckë
, 
±
);

918 
dp
->
	`quîy_°©e_de°roy
(
qs
);

920  (
RCOK
);

921 
	}
}

924 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q2_3.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

61 
	sq23_lo_tu∂e


63 
	mLO_PARTKEY
;

64 
	mLO_SUPPKEY
;

65 
	mLO_ORDERDATE
;

66 
	mLO_REVENUE
;

69 
	sq23_p_tu∂e


71 
	mP_PARTKEY
;

72 
	mP_BRAND
[10];

75 
	sq23_s_tu∂e


77 
	mS_SUPPKEY
;

80 
	sq23_d_tu∂e


82 
	mD_DATEKEY
;

83 
	mD_YEAR
;

86 
	sq23_joö_s_tu∂e


88 
	mLO_ORDERDATE
;

89 
	mLO_PARTKEY
;

90 
	mLO_REVENUE
;

93 
	sq23_joö_s_p_tu∂e


95 
	mLO_ORDERDATE
;

96 
	mP_BRAND
[10];

97 
	mLO_REVENUE
;

101 
	sq23_joö_tu∂e


103 
	mP_BRAND
[10];

104 
	mD_YEAR
;

105 
	mLO_REVENUE
;

108 
	sq23_aggªg©e_tu∂e


110 
	mP_BRAND
[10];

111 
	mD_YEAR
;

112 
	mREVENUE
;

119 
q23_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

122 ˛as†
	cq23_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


124 
¥iv©e
:

125 
Sh‹eSSBEnv
* 
_ssbdb
;

126 
èbÀ_row_t
* 
	m_¥löe
;

127 
ªp_row_t
 
	m_º
;

129 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

131 
	mpublic
:

133 
	$q23_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

134 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

138 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

139 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

140 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

141 
_¥löe
->
_ªp
 = &
_º
;

145 ~
	$q23_löe‹dî_tsˇn_fûãr_t
()

148 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

149 
	}
}

153 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

156 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

157 
	`as£π
(
Ál£
);

160  (
åue
);

161 
	}
}

165 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

167 
q23_lo_tu∂e
 *
de°
;

168 
de°
 = 
Æig√d_ˇ°
<
q23_lo_tu∂e
>(
d
.
d©a
);

170 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

171 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

172 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

173 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

176 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

177 
_löe‹dî
.
LO_PARTKEY
,

178 
_löe‹dî
.
LO_SUPPKEY
,

179 
_löe‹dî
.
LO_ORDERDATE
,

180 
_löe‹dî
.
LO_REVENUE
);

182 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

183 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

184 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

185 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

187 
	}
}

189 
q23_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

190  
√w
 
	`q23_löe‹dî_tsˇn_fûãr_t
(*
this
);

191 
	}
}

193 
c_°r
 
	$to_°rög
() const {

194  
	`c_°r
("q23_lineorder_tscan_filter_t()");

195 
	}
}

199 ˛as†
	cq23_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


201 
¥iv©e
:

202 
Sh‹eSSBEnv
* 
_ssbdb
;

203 
èbÀ_row_t
* 
	m_¥∑π
;

204 
ªp_row_t
 
	m_º
;

206 
ssb_∑π_tu∂e
 
	m_∑π
;

209 
	mBRAND
[10];

211 
	mpublic
:

213 
	$q23_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_3_öput_t
 &
ö
)

214 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

218 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

219 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

220 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

221 
_¥∑π
->
_ªp
 = &
_º
;

224 
	`°r˝y
(
BRAND
,"MFGR#2239");

227 ~
	$q23_∑π_tsˇn_fûãr_t
()

230 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

231 
	}
}

235 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

238 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

239 
	`as£π
(
Ál£
);

242 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

244 i‡(
	`°rcmp
(
_∑π
.
P_BRAND
,
BRAND
)==0)

246 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ BRAND |%s --d\n",

247 
_∑π
.
P_BRAND
);

248  (
åue
);

252 
	`TRACE
–
TRACE_RECORD_FLOW
, ". BRAND |%s --d\n",

253 
_∑π
.
P_BRAND
);

254  (
Ál£
);

256 
	}
}

260 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

262 
q23_p_tu∂e
 *
de°
;

263 
de°
 = 
Æig√d_ˇ°
<
q23_p_tu∂e
>(
d
.
d©a
);

265 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

266 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

268 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

269 
_∑π
.
P_PARTKEY
,

270 
_∑π
.
P_BRAND
);

273 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

274 
	`°r˝y
(
de°
->
P_BRAND
,
_∑π
.P_BRAND);

275 
	}
}

277 
q23_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

278  
√w
 
	`q23_∑π_tsˇn_fûãr_t
(*
this
);

279 
	}
}

281 
c_°r
 
	$to_°rög
() const {

282  
	`c_°r
("q23_part_tscan_filter_t()");

283 
	}
}

287 ˛as†
	cq23_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


289 
¥iv©e
:

290 
Sh‹eSSBEnv
* 
_ssbdb
;

291 
èbÀ_row_t
* 
	m_¥suµ
;

292 
ªp_row_t
 
	m_º
;

294 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

297 
	mREGION
[13];

298 
	mpublic
:

300 
	$q23_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_3_öput_t
 &
ö
)

301 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

305 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

306 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

307 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

308 
_¥suµ
->
_ªp
 = &
_º
;

311 
	`°r˝y
(
REGION
,"EUROPE");

314 ~
	$q23_suµlõr_tsˇn_fûãr_t
()

317 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

318 
	}
}

322 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

325 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

326 
	`as£π
(
Ál£
);

329 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

332 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
,
REGION
)==0)

334 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

335 
_suµlõr
.
S_REGION
);

336  (
åue
);

340 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

341 
_suµlõr
.
S_REGION
);

342  (
Ál£
);

344 
	}
}

348 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

350 
q23_s_tu∂e
 *
de°
;

351 
de°
 = 
Æig√d_ˇ°
<
q23_s_tu∂e
>(
d
.
d©a
);

353 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

355 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

356 
_suµlõr
.
S_SUPPKEY
);

359 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

360 
	}
}

362 
q23_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

363  
√w
 
	`q23_suµlõr_tsˇn_fûãr_t
(*
this
);

364 
	}
}

366 
c_°r
 
	$to_°rög
() const {

367  
	`c_°r
("q23_supplier_tscan_filter_t()");

368 
	}
}

373 ˛as†
	cq23_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


375 
¥iv©e
:

376 
Sh‹eSSBEnv
* 
_ssbdb
;

377 
èbÀ_row_t
* 
	m_¥d©e
;

378 
ªp_row_t
 
	m_º
;

380 
ssb_d©e_tu∂e
 
	m_d©e
;

383 
	mpublic
:

385 
	$q23_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q2_3_öput_t
 &
ö
)

386 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

390 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

391 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

392 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

393 
_¥d©e
->
_ªp
 = &
_º
;

397 ~
	$q23_d©e_tsˇn_fûãr_t
()

400 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

401 
	}
}

405 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

408 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

409 
	`as£π
(
Ál£
);

412  (
åue
);

413 
	}
}

417 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

419 
q23_d_tu∂e
 *
de°
;

420 
de°
 = 
Æig√d_ˇ°
<
q23_d_tu∂e
>(
d
.
d©a
);

422 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

423 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

425 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

426 
_d©e
.
D_DATEKEY
,

427 
_d©e
.
D_YEAR
);

430 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

431 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

432 
	}
}

434 
q23_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

435  
√w
 
	`q23_d©e_tsˇn_fûãr_t
(*
this
);

436 
	}
}

438 
c_°r
 
	$to_°rög
() const {

439  
	`c_°r
("q2_3_date_tscan_filter_t()");

440 
	}
}

445 
	gq23_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

448 
q23_lo_s_joö_t
 ()

449 : 
tu∂e_joö_t
((
q23_lo_tu∂e
),

450 
off£tof
(
q23_lo_tu∂e
, 
LO_SUPPKEY
),

451 (
q23_s_tu∂e
),

452 
off£tof
(
q23_s_tu∂e
, 
S_SUPPKEY
),

454 (
q23_joö_s_tu∂e
))

459 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

460 c⁄° 
tu∂e_t
 &
À·
,

461 c⁄° 
tu∂e_t
 &
right
)

464 
q23_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q23_lo_tu∂e>(
À·
.
d©a
);

465 
q23_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q23_s_tu∂e>(
right
.
d©a
);

466 
q23_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q23_joö_s_tu∂e>(
de°
.
d©a
);

468 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

469 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

470 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

473 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d %d\n",
ªt
->
LO_ORDERDATE
,Ñë->
LO_PARTKEY
,Ñë->
LO_REVENUE
);

477 
vútuÆ
 
q23_lo_s_joö_t
* 
˛⁄e
() const {

478  
√w
 
q23_lo_s_joö_t
(*
this
);

481 
vútuÆ
 
c_°r
 
to_°rög
() const {

488 
	gq23_lo_s_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

491 
q23_lo_s_p_joö_t
 ()

492 : 
tu∂e_joö_t
((
q23_joö_s_tu∂e
),

493 
off£tof
(
q23_joö_s_tu∂e
, 
LO_PARTKEY
),

494 (
q23_p_tu∂e
),

495 
off£tof
(
q23_p_tu∂e
, 
P_PARTKEY
),

497 (
q23_joö_s_p_tu∂e
))

502 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

503 c⁄° 
tu∂e_t
 &
À·
,

504 c⁄° 
tu∂e_t
 &
right
)

507 
q23_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q23_joö_s_tu∂e>(
À·
.
d©a
);

508 
q23_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q23_p_tu∂e>(
right
.
d©a
);

509 
q23_joö_s_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q23_joö_s_p_tu∂e>(
de°
.
d©a
);

511 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
;

512 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

513 
°r˝y
(
ªt
->
P_BRAND
,
p
->P_BRAND);

515 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d\n",
ªt
->
LO_ORDERDATE
,Ñë->
P_BRAND
,Ñë->
LO_REVENUE
);

519 
vútuÆ
 
q23_lo_s_p_joö_t
* 
˛⁄e
() const {

520  
√w
 
q23_lo_s_p_joö_t
(*
this
);

523 
vútuÆ
 
c_°r
 
to_°rög
() const {

530 
	gq23_joö_t
 : 
public
 
tu∂e_joö_t
 {

533 
q23_joö_t
 ()

534 : 
tu∂e_joö_t
((
q23_joö_s_p_tu∂e
),

535 
off£tof
(
q23_joö_s_p_tu∂e
, 
LO_ORDERDATE
),

536 (
q23_d_tu∂e
),

537 
off£tof
(
q23_d_tu∂e
, 
D_DATEKEY
),

539 (
q23_joö_tu∂e
))

544 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

545 c⁄° 
tu∂e_t
 &
À·
,

546 c⁄° 
tu∂e_t
 &
right
)

549 
q23_joö_s_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q23_joö_s_p_tu∂e>(
À·
.
d©a
);

550 
q23_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q23_d_tu∂e>(
right
.
d©a
);

551 
q23_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q23_joö_tu∂e>(
de°
.
d©a
);

553 
°r˝y
(
ªt
->
P_BRAND
,
jo
->P_BRAND);

554 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

555 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

558 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d\n",
ªt
->
P_BRAND
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

562 
vútuÆ
 
q23_joö_t
* 
˛⁄e
() const {

563  
√w
 
q23_joö_t
(*
this
);

566 
vútuÆ
 
c_°r
 
to_°rög
() const {

576 
	sq23_agg_öput_tu∂e_key
 {

578 
	mP_BRAND
[
STRSIZE
(9)];

579 
	mD_YEAR
;

582 
exåa˘_höt
() {

584  (
	mthis
->
	mD_YEAR
 - 1990 << 24Ë+ (this->
	mP_BRAND
[5] << 16) + (this->P_BRAND[6] << 8) + (this->P_BRAND[7]);

588 
	gq23_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

590 
q23_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q23_agg_öput_tu∂e_key
), 
off£tof
(
q23_joö_tu∂e
, 
P_BRAND
)) {

593 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

594 
q23_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q23_agg_öput_tu∂e_key>(
key
);

614  
	gÆig√d_key
->
exåa˘_höt
();

619 
vútuÆ
 
q23_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

620  
√w
 
q23_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

624 
	gq23_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

626 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

627 
q23_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q23_agg_öput_tu∂e_key>(
key1
);

628 
q23_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q23_agg_öput_tu∂e_key>(
key2
);

630 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

631 i‡(
	gpbøndcom∑ris⁄
 !0Ë 
pbøndcom∑ris⁄
;

632  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

635 
vútuÆ
 
q23_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

636  
√w
 
q23_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

641 
q23_agg_öput_tu∂e_key
 
	tq23_agg_tu∂e_key
;

643 ˛as†
	cq23_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

644 
¥iv©e
:

646 
q23_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

648 
q23_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q23_agg_tu∂e_key
), 
off£tof
(
q23_aggªg©e_tu∂e
, 
P_BRAND
)) {

651 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

652 
q23_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q23_agg_tu∂e_key > (
key
);

653  
	mÆig√d_key
->
exåa˘_höt
();

656 
vútuÆ
 
q23_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

657  
√w
 
q23_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

661 
q23_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

663 
	gpublic
:

665 
	$q23_agg_aggªg©e_t
()

666 : 
	`tu∂e_aggªg©e_t
((
q23_aggªg©e_tu∂e
)) {

667 
	}
}

669 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

670  &
_exåa˘‹
;

671 
	}
}

673 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

674 
q23_joö_tu∂e
 *
§c
;

675 
§c
 = 
Æig√d_ˇ°
<
q23_joö_tu∂e
> (
s
.
d©a
);

676 
q23_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q23_aggªg©e_tu∂e>(
agg_d©a
);

678 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

679 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

680 
	}
}

682 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

683 
q23_aggªg©e_tu∂e
 *
de°
;

684 
de°
 = 
Æig√d_ˇ°
<
q23_aggªg©e_tu∂e
 > (
d
.
d©a
);

685 
q23_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q23_aggªg©e_tu∂ê> (
agg_d©a
);

687 *
de°
 = *
tu∂e
;

688 
	`TRACE
 ( 
TRACE_RECORD_FLOW
, "AGG: %d {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
P_BRAND
,Åu∂e->
REVENUE
);

689 
	}
}

691 
q23_agg_aggªg©e_t
* 
	$˛⁄e
() const {

692  
√w
 
	`q23_agg_aggªg©e_t
(*
this
);

693 
	}
}

695 
c_°r
 
	$to_°rög
() const {

697 
	}
}

704 
	sq23_s‹t_tu∂e_key
 {

705 
	mP_BRAND
[
STRSIZE
(9)];

706 
	mD_YEAR
;

710 
	gq23_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

712 
q23_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q23_s‹t_tu∂e_key
), 
off£tof
(
q23_aggªg©e_tu∂e
, 
P_BRAND
)) {

715 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

716 
q23_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q23_s‹t_tu∂e_key> (
key
);

724 
	gªsu…
=0;

725  
	gªsu…
;

730 
vútuÆ
 
q23_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

731  
√w
 
q23_‹dî_key_exåa˘‹_t
(*
this
);

735 
	gq23_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

737 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

738 
q23_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q23_s‹t_tu∂e_key>(
key1
);

739 
q23_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q23_s‹t_tu∂e_key>(
key2
);

741 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

742 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

750 
vútuÆ
 
q23_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

751  
√w
 
q23_‹dî_key_com∑ª_t
(*
this
);

760 ˛as†
	cssb_q23_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


762 
public
:

764 
	$begö
() {

765 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q2_3 ANSWER ...\n");

766 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

769 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

770 
¥oje˘ed_tu∂e
 *
tu∂e
;

771 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

773 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
P_BRAND
,Åu∂e->
REVENUE
);

777 
	}
}

788 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q2_3
(c⁄° 
x˘_id
,

789 
q2_3_öput_t
& 
ö
)

791 
	`TRACE
–
TRACE_ALWAYS
, "********** q2_3 *********\n");

794 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

795 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

799 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q23_lo_tu∂e
));

800 
tsˇn_∑ckë_t
* 
q23_lo_tsˇn_∑ckë
 =

801 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

802 
lo_out_buf„r
,

803 
√w
 
	`q23_löe‹dî_tsˇn_fûãr_t
(
this
),

804 
this
->
	`db
(),

805 
_∂öe‹dî_desc
.
	`gë
(),

806 
px˘


810 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q23_s_tu∂e
));

811 
tsˇn_∑ckë_t
* 
q23_s_tsˇn_∑ckë
 =

812 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

813 
s_out_buf„r
,

814 
√w
 
	`q23_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

815 
this
->
	`db
(),

816 
_psuµlõr_desc
.
	`gë
(),

817 
px˘


821 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q23_p_tu∂e
));

822 
tsˇn_∑ckë_t
* 
q23_p_tsˇn_∑ckë
 =

823 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PART",

824 
p_out_buf„r
,

825 
√w
 
	`q23_∑π_tsˇn_fûãr_t
(
this
,
ö
),

826 
this
->
	`db
(),

827 
_µ¨t_desc
.
	`gë
(),

828 
px˘


832 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q23_d_tu∂e
));

833 
tsˇn_∑ckë_t
* 
q23_d_tsˇn_∑ckë
 =

834 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

835 
d_out_buf„r
,

836 
√w
 
	`q23_d©e_tsˇn_fûãr_t
(
this
,
ö
),

837 
this
->
	`db
(),

838 
_pd©e_desc
.
	`gë
(),

839 
px˘


845 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q23_joö_s_tu∂e
));

846 
∑ckë_t
* 
q23_joö_lo_s_∑ckë
 =

847 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

848 
joö_lo_s_out
,

849 
√w
 
	`åivül_fûãr_t
((
q23_joö_s_tu∂e
)),

850 
q23_lo_tsˇn_∑ckë
,

851 
q23_s_tsˇn_∑ckë
,

852 
√w
 
	`q23_lo_s_joö_t
() );

855 
tu∂e_fifo
* 
joö_lo_s_p_out
 = 
√w
 
	`tu∂e_fifo
((
q23_joö_s_p_tu∂e
));

856 
∑ckë_t
* 
q23_joö_lo_s_p_∑ckë
 =

857 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part JOIN",

858 
joö_lo_s_p_out
,

859 
√w
 
	`åivül_fûãr_t
((
q23_joö_s_p_tu∂e
)),

860 
q23_joö_lo_s_∑ckë
,

861 
q23_p_tsˇn_∑ckë
,

862 
√w
 
	`q23_lo_s_p_joö_t
() );

865 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q23_joö_tu∂e
));

866 
∑ckë_t
* 
q23_joö_∑ckë
 =

867 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part - Date JOIN",

868 
joö_out
,

869 
√w
 
	`åivül_fûãr_t
((
q23_joö_tu∂e
)),

870 
q23_joö_lo_s_p_∑ckë
,

871 
q23_d_tsˇn_∑ckë
,

872 
√w
 
	`q23_joö_t
() );

876 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

877 
√w
 
	`tu∂e_fifo
( (
q23_aggªg©e_tu∂e
));

878 
∑ckë_t
* 
q23_agg_∑ckë
 =

879 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q2_3",

880 
agg_ouçut_buf„r
,

881 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

882 
q23_joö_∑ckë
,

883 
√w
 
	`q23_agg_aggªg©e_t
(),

884 
√w
 
	`q23_agg_öput_tu∂e_key_exåa˘‹_t
(),

885 
√w
 
	`q23_agg_öput_tu∂e_key_com∑ª_t
());

888 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q23_aggªg©e_tu∂e
));

889 
∑ckë_t
* 
q23_s‹t_föÆ_∑ckë
 =

890 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

891 
s‹t_föÆ_out
,

892 
√w
 
	`åivül_fûãr_t
((
q23_aggªg©e_tu∂e
)),

893 
√w
 
	`q23_‹dî_key_exåa˘‹_t
(),

894 
√w
 
	`q23_‹dî_key_com∑ª_t
(),

895 
q23_agg_∑ckë
);

898 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

899 
q23_lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

900 
q23_s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

901 
q23_p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

902 
q23_d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

903 
q23_joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

904 
q23_joö_lo_s_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

905 
q23_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

906 
q23_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

907 
q23_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

910 
ssb_q23_¥o˚ss_tu∂e_t
 
±
;

912 
	`¥o˚ss_quîy
(
q23_s‹t_föÆ_∑ckë
, 
±
);

913 
dp
->
	`quîy_°©e_de°roy
(
qs
);

915  (
RCOK
);

916 
	}
}

919 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q3_1.cpp

33 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

34 
	~"qpùe.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
ssb
);

64 
	sq31_lo_tu∂e


66 
	mLO_CUSTKEY
;

67 
	mLO_SUPPKEY
;

68 
	mLO_ORDERDATE
;

69 
	mLO_REVENUE
;

72 
	sq31_s_tu∂e


74 
	mS_SUPPKEY
;

75 
	mS_NATION
[16];

78 
	sq31_c_tu∂e


80 
	mC_CUSTKEY
;

81 
	mC_NATION
[16];

84 
	sq31_d_tu∂e


86 
	mD_DATEKEY
;

87 
	mD_YEAR
;

90 
	sq31_joö_s_tu∂e


92 
	mLO_CUSTKEY
;

93 
	mS_NATION
[16];

94 
	mLO_REVENUE
;

95 
	mLO_ORDERDATE
;

98 
	sq31_joö_s_c_tu∂e


100 
	mS_NATION
[16];

101 
	mC_NATION
[16];

102 
	mLO_REVENUE
;

103 
	mLO_ORDERDATE
;

107 
	sq31_joö_tu∂e


109 
	mC_NATION
[16];

110 
	mS_NATION
[16];

111 
	mD_YEAR
;

112 
	mLO_REVENUE
;

116 
	sq31_aggªg©e_tu∂e


118 
	mC_NATION
[16];

119 
	mS_NATION
[16];

120 
	mD_YEAR
;

121 
	mREVENUE
;

128 
q31_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

131 ˛as†
	cq31_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


133 
¥iv©e
:

134 
Sh‹eSSBEnv
* 
_ssbdb
;

135 
èbÀ_row_t
* 
	m_¥löe
;

136 
ªp_row_t
 
	m_º
;

138 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

140 
	mpublic
:

142 
	$q31_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

143 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

147 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

148 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

149 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

150 
_¥löe
->
_ªp
 = &
_º
;

154 ~
	$q31_löe‹dî_tsˇn_fûãr_t
()

157 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

158 
	}
}

162 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

165 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

166 
	`as£π
(
Ál£
);

169  (
åue
);

170 
	}
}

174 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

176 
q31_lo_tu∂e
 *
de°
;

177 
de°
 = 
Æig√d_ˇ°
<
q31_lo_tu∂e
>(
d
.
d©a
);

179 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

180 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

181 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

182 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

185 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

186 
_löe‹dî
.
LO_CUSTKEY
,

187 
_löe‹dî
.
LO_SUPPKEY
,

188 
_löe‹dî
.
LO_ORDERDATE
,

189 
_löe‹dî
.
LO_REVENUE
);

191 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

192 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

193 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

194 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

196 
	}
}

198 
q31_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

199  
√w
 
	`q31_löe‹dî_tsˇn_fûãr_t
(*
this
);

200 
	}
}

202 
c_°r
 
	$to_°rög
() const {

203  
	`c_°r
("q3_1_lineorder_tscan_filter_t()");

204 
	}
}

208 ˛as†
	cq31_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


210 
¥iv©e
:

211 
Sh‹eSSBEnv
* 
_ssbdb
;

212 
èbÀ_row_t
* 
	m_¥cu°
;

213 
ªp_row_t
 
	m_º
;

215 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

218 
	mREGION
[13];

219 
	mpublic
:

221 
	$q31_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_1_öput_t
 &
ö
)

222 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

226 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

227 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

228 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

229 
_¥cu°
->
_ªp
 = &
_º
;

232 
	`°r˝y
(
REGION
,"ASIA");

235 ~
	$q31_cu°omî_tsˇn_fûãr_t
()

238 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

239 
	}
}

243 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

246 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

247 
	`as£π
(
Ál£
);

250 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_REGION
, 
	`STRSIZE
(12));

252 i‡(
	`°rcmp
(
_cu°omî
.
C_REGION
,
REGION
)==0)

254 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

255 
_cu°omî
.
C_REGION
);

256  (
åue
);

260 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

261 
_cu°omî
.
C_REGION
);

262  (
Ál£
);

264 
	}
}

268 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

270 
q31_c_tu∂e
 *
de°
;

271 
de°
 = 
Æig√d_ˇ°
<
q31_c_tu∂e
>(
d
.
d©a
);

273 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

274 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_NATION
, 
	`STRSIZE
(15));

276 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

277 
_cu°omî
.
C_CUSTKEY
,

278 
_cu°omî
.
C_NATION
);

281 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

282 
	`°r˝y
(
de°
->
C_NATION
,
_cu°omî
.C_NATION);

283 
	}
}

285 
q31_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

286  
√w
 
	`q31_cu°omî_tsˇn_fûãr_t
(*
this
);

287 
	}
}

289 
c_°r
 
	$to_°rög
() const {

290  
	`c_°r
("q31_customer_tscan_filter_t()");

291 
	}
}

295 ˛as†
	cq31_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


297 
¥iv©e
:

298 
Sh‹eSSBEnv
* 
_ssbdb
;

299 
èbÀ_row_t
* 
	m_¥suµ
;

300 
ªp_row_t
 
	m_º
;

302 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

305 
	mREGION
[13];

306 
	mpublic
:

308 
	$q31_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_1_öput_t
 &
ö
)

309 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

313 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

314 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

315 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

316 
_¥suµ
->
_ªp
 = &
_º
;

319 
	`°r˝y
(
REGION
,"ASIA");

322 ~
	$q31_suµlõr_tsˇn_fûãr_t
()

325 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

326 
	}
}

330 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

333 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

334 
	`as£π
(
Ál£
);

337 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

340 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
,
REGION
)==0)

342 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

343 
_suµlõr
.
S_REGION
);

344  (
åue
);

348 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

349 
_suµlõr
.
S_REGION
);

350  (
Ál£
);

352 
	}
}

356 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

358 
q31_s_tu∂e
 *
de°
;

359 
de°
 = 
Æig√d_ˇ°
<
q31_s_tu∂e
>(
d
.
d©a
);

361 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

362 
_¥suµ
->
	`gë_vÆue
(4, 
_suµlõr
.
S_NATION
, 
	`STRSIZE
(15));

364 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

365 
_suµlõr
.
S_SUPPKEY
,

366 
_suµlõr
.
S_NATION
);

369 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

370 
	`°r˝y
(
de°
->
S_NATION
,
_suµlõr
.S_NATION);

371 
	}
}

373 
q31_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

374  
√w
 
	`q31_suµlõr_tsˇn_fûãr_t
(*
this
);

375 
	}
}

377 
c_°r
 
	$to_°rög
() const {

378  
	`c_°r
("q31_supplier_tscan_filter_t()");

379 
	}
}

384 ˛as†
	cq31_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


386 
¥iv©e
:

387 
Sh‹eSSBEnv
* 
_ssbdb
;

388 
èbÀ_row_t
* 
	m_¥d©e
;

389 
ªp_row_t
 
	m_º
;

391 
ssb_d©e_tu∂e
 
	m_d©e
;

394 
	mYEAR_LOW
;

395 
	mYEAR_HIGH
;

397 
	mpublic
:

399 
	$q31_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_1_öput_t
 &
ö
)

400 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

404 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

405 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

406 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

407 
_¥d©e
->
_ªp
 = &
_º
;

409 
YEAR_LOW
=1992;

410 
YEAR_HIGH
=1997;

413 ~
	$q31_d©e_tsˇn_fûãr_t
()

416 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

417 
	}
}

421 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

424 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

425 
	`as£π
(
Ál£
);

428 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

431 i‡(
_d©e
.
D_YEAR
>=
YEAR_LOW
 && _d©e.D_YEAR<=
YEAR_HIGH
)

433 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

434 
_d©e
.
D_YEAR
);

435  (
åue
);

439 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

440 
_d©e
.
D_YEAR
);

441  (
Ál£
);

444 
	}
}

448 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

450 
q31_d_tu∂e
 *
de°
;

451 
de°
 = 
Æig√d_ˇ°
<
q31_d_tu∂e
>(
d
.
d©a
);

453 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

454 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

456 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

457 
_d©e
.
D_DATEKEY
,

458 
_d©e
.
D_YEAR
);

461 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

462 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

463 
	}
}

465 
q31_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

466  
√w
 
	`q31_d©e_tsˇn_fûãr_t
(*
this
);

467 
	}
}

469 
c_°r
 
	$to_°rög
() const {

470  
	`c_°r
("q3_1_date_tscan_filter_t()");

471 
	}
}

476 
	gq31_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

479 
q31_lo_s_joö_t
 ()

480 : 
tu∂e_joö_t
((
q31_lo_tu∂e
),

481 
off£tof
(
q31_lo_tu∂e
, 
LO_SUPPKEY
),

482 (
q31_s_tu∂e
),

483 
off£tof
(
q31_s_tu∂e
, 
S_SUPPKEY
),

485 (
q31_joö_s_tu∂e
))

490 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

491 c⁄° 
tu∂e_t
 &
À·
,

492 c⁄° 
tu∂e_t
 &
right
)

495 
q31_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q31_lo_tu∂e>(
À·
.
d©a
);

496 
q31_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q31_s_tu∂e>(
right
.
d©a
);

497 
q31_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q31_joö_s_tu∂e>(
de°
.
d©a
);

500 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

501 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

502 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

504 
°r˝y
(
ªt
->
S_NATION
,
s
->S_NATION);

506 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
S_NATION
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
);

510 
vútuÆ
 
q31_lo_s_joö_t
* 
˛⁄e
() const {

511  
√w
 
q31_lo_s_joö_t
(*
this
);

514 
vútuÆ
 
c_°r
 
to_°rög
() const {

521 
	gq31_lo_s_c_joö_t
 : 
public
 
tu∂e_joö_t
 {

524 
q31_lo_s_c_joö_t
 ()

525 : 
tu∂e_joö_t
((
q31_joö_s_tu∂e
),

526 
off£tof
(
q31_joö_s_tu∂e
, 
LO_CUSTKEY
),

527 (
q31_c_tu∂e
),

528 
off£tof
(
q31_c_tu∂e
, 
C_CUSTKEY
),

530 (
q31_joö_s_c_tu∂e
))

535 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

536 c⁄° 
tu∂e_t
 &
À·
,

537 c⁄° 
tu∂e_t
 &
right
)

540 
q31_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q31_joö_s_tu∂e>(
À·
.
d©a
);

541 
q31_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q31_c_tu∂e>(
right
.
d©a
);

542 
q31_joö_s_c_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q31_joö_s_c_tu∂e>(
de°
.
d©a
);

544 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
;

545 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

546 
°r˝y
(
ªt
->
S_NATION
,
jo
->S_NATION);

548 
°r˝y
(
ªt
->
C_NATION
,
c
->C_NATION);

550 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d\n",
ªt
->
C_NATION
,Ñë->
S_NATION
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
);

554 
vútuÆ
 
q31_lo_s_c_joö_t
* 
˛⁄e
() const {

555  
√w
 
q31_lo_s_c_joö_t
(*
this
);

558 
vútuÆ
 
c_°r
 
to_°rög
() const {

565 
	gq31_joö_t
 : 
public
 
tu∂e_joö_t
 {

568 
q31_joö_t
 ()

569 : 
tu∂e_joö_t
((
q31_joö_s_c_tu∂e
),

570 
off£tof
(
q31_joö_s_c_tu∂e
, 
LO_ORDERDATE
),

571 (
q31_d_tu∂e
),

572 
off£tof
(
q31_d_tu∂e
, 
D_DATEKEY
),

574 (
q31_joö_tu∂e
))

579 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

580 c⁄° 
tu∂e_t
 &
À·
,

581 c⁄° 
tu∂e_t
 &
right
)

584 
q31_joö_s_c_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q31_joö_s_c_tu∂e>(
À·
.
d©a
);

585 
q31_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q31_d_tu∂e>(
right
.
d©a
);

586 
q31_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q31_joö_tu∂e>(
de°
.
d©a
);

588 
°r˝y
(
ªt
->
C_NATION
,
jo
->C_NATION);

589 
°r˝y
(
ªt
->
S_NATION
,
jo
->S_NATION);

590 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

592 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

593 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d\n",
ªt
->
C_NATION
,Ñë->
S_NATION
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

597 
vútuÆ
 
q31_joö_t
* 
˛⁄e
() const {

598  
√w
 
q31_joö_t
(*
this
);

601 
vútuÆ
 
c_°r
 
to_°rög
() const {

610 
	sq31_agg_öput_tu∂e_key
 {

612 
	mS_NATION
[
STRSIZE
(15)];

613 
	mC_NATION
[
STRSIZE
(15)];

614 
	mD_YEAR
;

616 
exåa˘_höt
() {

617  (
	mthis
->
	mC_NATION
[0] << 24Ë+ (this->C_NATION[1] << 16Ë+ (this->
	mS_NATION
[0] << 8Ë+ (this->
	mD_YEAR
 - 1990);

621 
	gq31_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

623 
q31_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q31_agg_öput_tu∂e_key
), 
off£tof
(
q31_joö_tu∂e
, 
C_NATION
)) {

626 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

627 
q31_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q31_agg_öput_tu∂e_key>(
key
);

647  
	gÆig√d_key
->
exåa˘_höt
();

652 
vútuÆ
 
q31_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

653  
√w
 
q31_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

657 
	gq31_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

659 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

660 
q31_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q31_agg_öput_tu∂e_key>(
key1
);

661 
q31_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q31_agg_öput_tu∂e_key>(
key2
);

663 
	gccôycom∑ris⁄
 = 
°rcmp
(
a
->
C_NATION
, 
b
->C_NATION);

664 i‡(
	gccôycom∑ris⁄
 !0Ë 
ccôycom∑ris⁄
;

665 
	gscôycom∑ris⁄
 = 
°rcmp
(
a
->
S_NATION
, 
b
->S_NATION);

666 i‡(
	gscôycom∑ris⁄
 !0Ë 
scôycom∑ris⁄
;

667  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

670 
vútuÆ
 
q31_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

671  
√w
 
q31_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

676 
q31_agg_öput_tu∂e_key
 
	tq31_agg_tu∂e_key
;

678 ˛as†
	cq31_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

679 
¥iv©e
:

681 
q31_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

683 
q31_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q31_agg_tu∂e_key
), 
off£tof
(
q31_aggªg©e_tu∂e
, 
C_NATION
)) {

686 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

687 
q31_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q31_agg_tu∂e_key > (
key
);

688  
	mÆig√d_key
->
exåa˘_höt
();

691 
vútuÆ
 
q31_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

692  
√w
 
q31_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

696 
q31_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

698 
	gpublic
:

700 
	$q31_agg_aggªg©e_t
()

701 : 
	`tu∂e_aggªg©e_t
((
q31_aggªg©e_tu∂e
)) {

702 
	}
}

704 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

705  &
_exåa˘‹
;

706 
	}
}

708 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

709 
q31_joö_tu∂e
 *
§c
;

710 
§c
 = 
Æig√d_ˇ°
<
q31_joö_tu∂e
> (
s
.
d©a
);

711 
q31_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q31_aggªg©e_tu∂e>(
agg_d©a
);

713 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

714 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

715 
	}
}

717 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

718 
q31_aggªg©e_tu∂e
 *
de°
;

719 
de°
 = 
Æig√d_ˇ°
<
q31_aggªg©e_tu∂e
 > (
d
.
d©a
);

720 
q31_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q31_aggªg©e_tu∂ê> (
agg_d©a
);

722 *
de°
 = *
tu∂e
;

723 
	}
}

725 
q31_agg_aggªg©e_t
* 
	$˛⁄e
() const {

726  
√w
 
	`q31_agg_aggªg©e_t
(*
this
);

727 
	}
}

729 
c_°r
 
	$to_°rög
() const {

731 
	}
}

736 
	sq31_s‹t_tu∂e_key
 {

737 
	mD_YEAR
;

738 
	mREVENUE
;

741 
	gq31_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

743 
q31_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q31_s‹t_tu∂e_key
), 
off£tof
(
q31_aggªg©e_tu∂e
, 
D_YEAR
)) {

746 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

747 
q31_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q31_s‹t_tu∂e_key> (
key
);

753 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë- ((◊lig√d_key->
REVENUE
) & ~(15)) >> 4);

766  
	gªsu…
;

771 
vútuÆ
 
q31_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

772  
√w
 
q31_‹dî_key_exåa˘‹_t
(*
this
);

776 
	gq31_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

778 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

779 
q31_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q31_s‹t_tu∂e_key>(
key1
);

780 
q31_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q31_s‹t_tu∂e_key>(
key2
);

782 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

783 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

784 i‡(
	ga
->
	gREVENUE
 > 
	gb
->REVENUE)

786 i‡(
	ga
->
	gREVENUE
 < 
	gb
->REVENUE)

792 
vútuÆ
 
q31_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

793  
√w
 
q31_‹dî_key_com∑ª_t
(*
this
);

799 ˛as†
	cssb_q31_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


801 
public
:

803 
	$begö
() {

804 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q3_1 ANSWER ...\n");

805 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

808 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

809 
¥oje˘ed_tu∂e
 *
tu∂e
;

810 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

812 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS {%15s} {%15s} %d %d\n",
tu∂e
->
C_NATION
 ,Åu∂e->
S_NATION
,Åu∂e->
D_YEAR
,Åu∂e->
REVENUE
);

815 
	}
}

826 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q3_1
(c⁄° 
x˘_id
,

827 
q3_1_öput_t
& 
ö
)

829 
	`TRACE
–
TRACE_ALWAYS
, "********** q3_1 *********\n");

832 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

833 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

837 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q31_lo_tu∂e
));

838 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

839 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

840 
lo_out_buf„r
,

841 
√w
 
	`q31_löe‹dî_tsˇn_fûãr_t
(
this
),

842 
this
->
	`db
(),

843 
_∂öe‹dî_desc
.
	`gë
(),

844 
px˘


849 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q31_s_tu∂e
));

850 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

851 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

852 
s_out_buf„r
,

853 
√w
 
	`q31_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

854 
this
->
	`db
(),

855 
_psuµlõr_desc
.
	`gë
(),

856 
px˘


861 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q31_c_tu∂e
));

862 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

863 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

864 
c_out_buf„r
,

865 
√w
 
	`q31_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

866 
this
->
	`db
(),

867 
_pcu°omî_desc
.
	`gë
(),

868 
px˘


873 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q31_d_tu∂e
));

874 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

875 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

876 
d_out_buf„r
,

877 
√w
 
	`q31_d©e_tsˇn_fûãr_t
(
this
,
ö
),

878 
this
->
	`db
(),

879 
_pd©e_desc
.
	`gë
(),

880 
px˘


886 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q31_joö_s_tu∂e
));

887 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

888 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

889 
joö_lo_s_out
,

890 
√w
 
	`åivül_fûãr_t
((
q31_joö_s_tu∂e
)),

891 
lo_tsˇn_∑ckë
,

892 
s_tsˇn_∑ckë
,

893 
√w
 
	`q31_lo_s_joö_t
() );

896 
tu∂e_fifo
* 
joö_lo_s_c_out
 = 
√w
 
	`tu∂e_fifo
((
q31_joö_s_c_tu∂e
));

897 
∑ckë_t
* 
joö_lo_s_c_∑ckë
 =

898 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer JOIN",

899 
joö_lo_s_c_out
,

900 
√w
 
	`åivül_fûãr_t
((
q31_joö_s_c_tu∂e
)),

901 
joö_lo_s_∑ckë
,

902 
c_tsˇn_∑ckë
,

903 
√w
 
	`q31_lo_s_c_joö_t
() );

906 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q31_joö_tu∂e
));

907 
∑ckë_t
* 
joö_∑ckë
 =

908 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer - Date JOIN",

909 
joö_out
,

910 
√w
 
	`åivül_fûãr_t
((
q31_joö_tu∂e
)),

911 
joö_lo_s_c_∑ckë
,

912 
d_tsˇn_∑ckë
,

913 
√w
 
	`q31_joö_t
() );

916 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

917 
√w
 
	`tu∂e_fifo
( (
q31_aggªg©e_tu∂e
));

918 
∑ckë_t
* 
q31_agg_∑ckë
 =

919 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q3_1",

920 
agg_ouçut_buf„r
,

921 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

922 
joö_∑ckë
,

923 
√w
 
	`q31_agg_aggªg©e_t
(),

924 
√w
 
	`q31_agg_öput_tu∂e_key_exåa˘‹_t
(),

925 
√w
 
	`q31_agg_öput_tu∂e_key_com∑ª_t
());

927 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q31_aggªg©e_tu∂e
));

928 
∑ckë_t
* 
q31_s‹t_föÆ_∑ckë
 =

929 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

930 
s‹t_föÆ_out
,

931 
√w
 
	`åivül_fûãr_t
((
q31_aggªg©e_tu∂e
)),

932 
√w
 
	`q31_‹dî_key_exåa˘‹_t
(),

933 
√w
 
	`q31_‹dî_key_com∑ª_t
(),

934 
q31_agg_∑ckë
);

936 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

937 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

938 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

939 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

940 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

941 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

942 
joö_lo_s_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

943 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

944 
q31_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

945 
q31_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

948 
ssb_q31_¥o˚ss_tu∂e_t
 
±
;

949 
	`¥o˚ss_quîy
(
q31_s‹t_föÆ_∑ckë
, 
±
);

950 
dp
->
	`quîy_°©e_de°roy
(
qs
);

952  (
RCOK
);

953 
	}
}

956 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q3_2.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

63 
	sq32_lo_tu∂e


65 
	mLO_CUSTKEY
;

66 
	mLO_SUPPKEY
;

67 
	mLO_ORDERDATE
;

68 
	mLO_REVENUE
;

71 
	sq32_c_tu∂e


73 
	mC_CUSTKEY
;

74 
	mC_CITY
[11];

77 
	sq32_s_tu∂e


79 
	mS_SUPPKEY
;

80 
	mS_CITY
[11];

83 
	sq32_d_tu∂e


85 
	mD_DATEKEY
;

86 
	mD_YEAR
;

89 
	sq32_joö_d_tu∂e


91 
	mLO_CUSTKEY
;

92 
	mLO_SUPPKEY
;

93 
	mD_YEAR
;

94 
	mLO_REVENUE
;

97 
	sq32_joö_d_s_tu∂e


99 
	mLO_CUSTKEY
;

100 
	mS_CITY
[11];

101 
	mD_YEAR
;

102 
	mLO_REVENUE
;

106 
	sq32_joö_tu∂e


108 
	mC_CITY
[11];

109 
	mS_CITY
[11];

110 
	mD_YEAR
;

111 
	mLO_REVENUE
;

114 
	sq32_aggªg©e_tu∂e


116 
	mC_CITY
[11];

117 
	mS_CITY
[11];

118 
	mD_YEAR
;

119 
	mREVENUE
;

127 
q32_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

130 ˛as†
	cq32_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


132 
¥iv©e
:

133 
Sh‹eSSBEnv
* 
_ssbdb
;

134 
èbÀ_row_t
* 
	m_¥löe
;

135 
ªp_row_t
 
	m_º
;

137 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

139 
	mpublic
:

141 
	$q32_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

142 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

146 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

147 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

148 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

149 
_¥löe
->
_ªp
 = &
_º
;

153 ~
	$q32_löe‹dî_tsˇn_fûãr_t
()

156 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

157 
	}
}

161 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

164 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

165 
	`as£π
(
Ál£
);

168  (
åue
);

169 
	}
}

173 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

175 
q32_lo_tu∂e
 *
de°
;

176 
de°
 = 
Æig√d_ˇ°
<
q32_lo_tu∂e
>(
d
.
d©a
);

178 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

179 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

180 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

181 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

184 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

185 
_löe‹dî
.
LO_CUSTKEY
,

186 
_löe‹dî
.
LO_SUPPKEY
,

187 
_löe‹dî
.
LO_ORDERDATE
,

188 
_löe‹dî
.
LO_REVENUE
);

190 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

191 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

192 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

193 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

195 
	}
}

197 
q32_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

198  
√w
 
	`q32_löe‹dî_tsˇn_fûãr_t
(*
this
);

199 
	}
}

201 
c_°r
 
	$to_°rög
() const {

202  
	`c_°r
("q32_lineorder_tscan_filter_t()");

203 
	}
}

207 ˛as†
	cq32_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


209 
¥iv©e
:

210 
Sh‹eSSBEnv
* 
_ssbdb
;

211 
èbÀ_row_t
* 
	m_¥cu°
;

212 
ªp_row_t
 
	m_º
;

214 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

217 
	mNATION
[16];

218 
	mpublic
:

220 
	$q32_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_2_öput_t
 &
ö
)

221 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

225 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

226 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

227 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

228 
_¥cu°
->
_ªp
 = &
_º
;

231 
	`°r˝y
(
NATION
,"UNITED STATES");

234 ~
	$q32_cu°omî_tsˇn_fûãr_t
()

237 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

238 
	}
}

242 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

245 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

246 
	`as£π
(
Ál£
);

249 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_NATION
, 
	`STRSIZE
(15));

251 i‡(
	`°rcmp
(
_cu°omî
.
C_NATION
,
NATION
)==0)

253 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ NATION |%s --d\n",

254 
_cu°omî
.
C_NATION
);

255  (
åue
);

259 
	`TRACE
–
TRACE_RECORD_FLOW
, ". NATION |%s --d\n",

260 
_cu°omî
.
C_NATION
);

261  (
Ál£
);

263 
	}
}

267 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

269 
q32_c_tu∂e
 *
de°
;

270 
de°
 = 
Æig√d_ˇ°
<
q32_c_tu∂e
>(
d
.
d©a
);

272 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

273 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
	`STRSIZE
(10));

275 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

276 
_cu°omî
.
C_CUSTKEY
,

277 
_cu°omî
.
C_CITY
);

280 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

281 
	`°r˝y
(
de°
->
C_CITY
,
_cu°omî
.C_CITY);

282 
	}
}

284 
q32_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

285  
√w
 
	`q32_cu°omî_tsˇn_fûãr_t
(*
this
);

286 
	}
}

288 
c_°r
 
	$to_°rög
() const {

289  
	`c_°r
("q32_customer_tscan_filter_t()");

290 
	}
}

294 ˛as†
	cq32_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


296 
¥iv©e
:

297 
Sh‹eSSBEnv
* 
_ssbdb
;

298 
èbÀ_row_t
* 
	m_¥suµ
;

299 
ªp_row_t
 
	m_º
;

301 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

304 
	mNATION
[16];

305 
	mpublic
:

307 
	$q32_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_2_öput_t
 &
ö
)

308 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

312 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

313 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

314 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

315 
_¥suµ
->
_ªp
 = &
_º
;

318 
	`°r˝y
(
NATION
,"UNITED STATES");

321 ~
	$q32_suµlõr_tsˇn_fûãr_t
()

324 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

325 
	}
}

329 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

332 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

333 
	`as£π
(
Ál£
);

336 
_¥suµ
->
	`gë_vÆue
(4, 
_suµlõr
.
S_NATION
, 
	`STRSIZE
(15));

339 i‡(
	`°rcmp
(
_suµlõr
.
S_NATION
,
NATION
)==0)

341 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ NATION |%s --d\n",

342 
_suµlõr
.
S_NATION
);

343  (
åue
);

347 
	`TRACE
–
TRACE_RECORD_FLOW
, ". NATION |%s --d\n",

348 
_suµlõr
.
S_NATION
);

349  (
Ál£
);

351 
	}
}

355 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

357 
q32_s_tu∂e
 *
de°
;

358 
de°
 = 
Æig√d_ˇ°
<
q32_s_tu∂e
>(
d
.
d©a
);

360 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

361 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

363 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

364 
_suµlõr
.
S_SUPPKEY
,

365 
_suµlõr
.
S_CITY
);

368 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

369 
	`°r˝y
(
de°
->
S_CITY
,
_suµlõr
.S_CITY);

370 
	}
}

372 
q32_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

373  
√w
 
	`q32_suµlõr_tsˇn_fûãr_t
(*
this
);

374 
	}
}

376 
c_°r
 
	$to_°rög
() const {

377  
	`c_°r
("q32_supplier_tscan_filter_t()");

378 
	}
}

383 ˛as†
	cq32_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


385 
¥iv©e
:

386 
Sh‹eSSBEnv
* 
_ssbdb
;

387 
èbÀ_row_t
* 
	m_¥d©e
;

388 
ªp_row_t
 
	m_º
;

390 
ssb_d©e_tu∂e
 
	m_d©e
;

393 
	mYEAR_LOW
;

394 
	mYEAR_HIGH
;

396 
	mpublic
:

398 
	$q32_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_2_öput_t
 &
ö
)

399 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

403 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

404 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

405 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

406 
_¥d©e
->
_ªp
 = &
_º
;

408 
YEAR_LOW
=1992;

409 
YEAR_HIGH
=1997;

412 ~
	$q32_d©e_tsˇn_fûãr_t
()

415 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

416 
	}
}

420 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

423 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

424 
	`as£π
(
Ál£
);

427 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

430 i‡(
_d©e
.
D_YEAR
>=
YEAR_LOW
 && _d©e.D_YEAR<=
YEAR_HIGH
)

432 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

433 
_d©e
.
D_YEAR
);

434  (
åue
);

438 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

439 
_d©e
.
D_YEAR
);

440  (
Ál£
);

443 
	}
}

447 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

449 
q32_d_tu∂e
 *
de°
;

450 
de°
 = 
Æig√d_ˇ°
<
q32_d_tu∂e
>(
d
.
d©a
);

452 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

453 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

455 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

456 
_d©e
.
D_DATEKEY
,

457 
_d©e
.
D_YEAR
);

460 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

461 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

462 
	}
}

464 
q32_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

465  
√w
 
	`q32_d©e_tsˇn_fûãr_t
(*
this
);

466 
	}
}

468 
c_°r
 
	$to_°rög
() const {

469  
	`c_°r
("q32_date_tscan_filter_t()");

470 
	}
}

475 
	gq32_lo_d_joö_t
 : 
public
 
tu∂e_joö_t
 {

478 
q32_lo_d_joö_t
 ()

479 : 
tu∂e_joö_t
((
q32_lo_tu∂e
),

480 
off£tof
(
q32_lo_tu∂e
, 
LO_ORDERDATE
),

481 (
q32_d_tu∂e
),

482 
off£tof
(
q32_d_tu∂e
, 
D_DATEKEY
),

484 (
q32_joö_d_tu∂e
))

489 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

490 c⁄° 
tu∂e_t
 &
À·
,

491 c⁄° 
tu∂e_t
 &
right
)

494 
q32_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q32_lo_tu∂e>(
À·
.
d©a
);

495 
q32_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q32_d_tu∂e>(
right
.
d©a
);

496 
q32_joö_d_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q32_joö_d_tu∂e>(
de°
.
d©a
);

498 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

499 
	gªt
->
	gLO_SUPPKEY
 = 
lo
->
LO_SUPPKEY
;

500 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

502 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

504 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
LO_SUPPKEY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

508 
vútuÆ
 
q32_lo_d_joö_t
* 
˛⁄e
() const {

509  
√w
 
q32_lo_d_joö_t
(*
this
);

512 
vútuÆ
 
c_°r
 
to_°rög
() const {

519 
	gq32_lo_d_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

522 
q32_lo_d_s_joö_t
 ()

523 : 
tu∂e_joö_t
((
q32_joö_d_tu∂e
),

524 
off£tof
(
q32_joö_d_tu∂e
, 
LO_SUPPKEY
),

525 (
q32_s_tu∂e
),

526 
off£tof
(
q32_s_tu∂e
, 
S_SUPPKEY
),

528 (
q32_joö_d_s_tu∂e
))

533 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

534 c⁄° 
tu∂e_t
 &
À·
,

535 c⁄° 
tu∂e_t
 &
right
)

538 
q32_joö_d_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q32_joö_d_tu∂e>(
À·
.
d©a
);

539 
q32_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q32_s_tu∂e>(
right
.
d©a
);

540 
q32_joö_d_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q32_joö_d_s_tu∂e>(
de°
.
d©a
);

542 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
;

543 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
;

544 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

547 
°r˝y
(
ªt
->
S_CITY
,
s
->S_CITY);

549 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

553 
vútuÆ
 
q32_lo_d_s_joö_t
* 
˛⁄e
() const {

554  
√w
 
q32_lo_d_s_joö_t
(*
this
);

557 
vútuÆ
 
c_°r
 
to_°rög
() const {

564 
	gq32_joö_t
 : 
public
 
tu∂e_joö_t
 {

567 
q32_joö_t
 ()

568 : 
tu∂e_joö_t
((
q32_joö_d_s_tu∂e
),

569 
off£tof
(
q32_joö_d_s_tu∂e
, 
LO_CUSTKEY
),

570 (
q32_c_tu∂e
),

571 
off£tof
(
q32_c_tu∂e
, 
C_CUSTKEY
),

573 (
q32_joö_tu∂e
))

578 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

579 c⁄° 
tu∂e_t
 &
À·
,

580 c⁄° 
tu∂e_t
 &
right
)

583 
q32_joö_d_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q32_joö_d_s_tu∂e>(
À·
.
d©a
);

584 
q32_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q32_c_tu∂e>(
right
.
d©a
);

585 
q32_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q32_joö_tu∂e>(
de°
.
d©a
);

587 
°r˝y
(
ªt
->
S_CITY
,
jo
->S_CITY);

588 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
;

589 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

591 
°r˝y
(
ªt
->
C_CITY
,
c
->C_CITY);

593 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d\n",
ªt
->
C_CITY
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

597 
vútuÆ
 
q32_joö_t
* 
˛⁄e
() const {

598  
√w
 
q32_joö_t
(*
this
);

601 
vútuÆ
 
c_°r
 
to_°rög
() const {

612 
	sq32_agg_öput_tu∂e_key
 {

613 
	mC_CITY
[
STRSIZE
(10)];

614 
	mS_CITY
[
STRSIZE
(10)];

615 
	mD_YEAR
;

617 
exåa˘_höt
() {

618  (
	mthis
->
	mC_CITY
[0] << 24Ë+ (this->C_CITY[1] << 16Ë+ (this->
	mS_CITY
[0] << 8Ë+ (this->
	mD_YEAR
 - 1990);

622 
	gq32_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

624 
q32_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q32_agg_öput_tu∂e_key
), 
off£tof
(
q32_joö_tu∂e
, 
C_CITY
)) {

627 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

628 
q32_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q32_agg_öput_tu∂e_key>(
key
);

648  
	gÆig√d_key
->
exåa˘_höt
();

653 
vútuÆ
 
q32_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

654  
√w
 
q32_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

658 
	gq32_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

660 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

661 
q32_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q32_agg_öput_tu∂e_key>(
key1
);

662 
q32_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q32_agg_öput_tu∂e_key>(
key2
);

664 
	gccôycom∑ris⁄
 = 
°rcmp
(
a
->
C_CITY
, 
b
->C_CITY);

665 i‡(
	gccôycom∑ris⁄
 !0Ë 
ccôycom∑ris⁄
;

666 
	gscôycom∑ris⁄
 = 
°rcmp
(
a
->
S_CITY
, 
b
->S_CITY);

667 i‡(
	gscôycom∑ris⁄
 !0Ë 
scôycom∑ris⁄
;

668  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

671 
vútuÆ
 
q32_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

672  
√w
 
q32_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

677 
q32_agg_öput_tu∂e_key
 
	tq32_agg_tu∂e_key
;

679 ˛as†
	cq32_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

680 
¥iv©e
:

682 
q32_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

684 
q32_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q32_agg_tu∂e_key
), 
off£tof
(
q32_aggªg©e_tu∂e
, 
C_CITY
)) {

687 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

688 
q32_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q32_agg_tu∂e_key > (
key
);

689  
	mÆig√d_key
->
exåa˘_höt
();

692 
vútuÆ
 
q32_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

693  
√w
 
q32_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

697 
q32_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

699 
	gpublic
:

701 
	$q32_agg_aggªg©e_t
()

702 : 
	`tu∂e_aggªg©e_t
((
q32_aggªg©e_tu∂e
)) {

703 
	}
}

705 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

706  &
_exåa˘‹
;

707 
	}
}

709 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

710 
q32_joö_tu∂e
 *
§c
;

711 
§c
 = 
Æig√d_ˇ°
<
q32_joö_tu∂e
> (
s
.
d©a
);

712 
q32_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q32_aggªg©e_tu∂e>(
agg_d©a
);

714 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

715 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

716 
	}
}

718 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

719 
q32_aggªg©e_tu∂e
 *
de°
;

720 
de°
 = 
Æig√d_ˇ°
<
q32_aggªg©e_tu∂e
 > (
d
.
d©a
);

721 
q32_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q32_aggªg©e_tu∂ê> (
agg_d©a
);

723 *
de°
 = *
tu∂e
;

724 
	}
}

726 
q32_agg_aggªg©e_t
* 
	$˛⁄e
() const {

727  
√w
 
	`q32_agg_aggªg©e_t
(*
this
);

728 
	}
}

730 
c_°r
 
	$to_°rög
() const {

732 
	}
}

737 
	sq32_s‹t_tu∂e_key
 {

738 
	mD_YEAR
;

739 
	mREVENUE
;

742 
	gq32_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

744 
q32_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q32_s‹t_tu∂e_key
), 
off£tof
(
q32_aggªg©e_tu∂e
, 
D_YEAR
)) {

747 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

748 
q32_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q32_s‹t_tu∂e_key> (
key
);

755 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë- ((◊lig√d_key->
REVENUE
) & ~(15)) >> 4);

756  
	gªsu…
;

761 
vútuÆ
 
q32_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

762  
√w
 
q32_‹dî_key_exåa˘‹_t
(*
this
);

766 
	gq32_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

768 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

769 
q32_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q32_s‹t_tu∂e_key>(
key1
);

770 
q32_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q32_s‹t_tu∂e_key>(
key2
);

772 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

773 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

774 i‡(
	ga
->
	gREVENUE
 > 
	gb
->REVENUE)

776 i‡(
	ga
->
	gREVENUE
 < 
	gb
->REVENUE)

782 
vútuÆ
 
q32_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

783  
√w
 
q32_‹dî_key_com∑ª_t
(*
this
);

789 ˛as†
	cssb_q32_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


791 
public
:

793 
	$begö
() {

794 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q3_2 ANSWER ...\n");

795 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

798 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

799 
¥oje˘ed_tu∂e
 *
tu∂e
;

800 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

802 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS {%s} {%s} %d %d\n",
tu∂e
->
C_CITY
,Åu∂e->
S_CITY
,Åu∂e->
D_YEAR
,Åu∂e->
REVENUE
);

805 
	}
}

816 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q3_2
(c⁄° 
x˘_id
,

817 
q3_2_öput_t
& 
ö
)

819 
	`TRACE
–
TRACE_ALWAYS
, "********** q3_2 *********\n");

822 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

823 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

827 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q32_lo_tu∂e
));

828 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

829 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

830 
lo_out_buf„r
,

831 
√w
 
	`q32_löe‹dî_tsˇn_fûãr_t
(
this
),

832 
this
->
	`db
(),

833 
_∂öe‹dî_desc
.
	`gë
(),

834 
px˘


838 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q32_c_tu∂e
));

839 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

840 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

841 
c_out_buf„r
,

842 
√w
 
	`q32_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

843 
this
->
	`db
(),

844 
_pcu°omî_desc
.
	`gë
(),

845 
px˘


849 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q32_s_tu∂e
));

850 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

851 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

852 
s_out_buf„r
,

853 
√w
 
	`q32_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

854 
this
->
	`db
(),

855 
_psuµlõr_desc
.
	`gë
(),

856 
px˘


860 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q32_d_tu∂e
));

861 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

862 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

863 
d_out_buf„r
,

864 
√w
 
	`q32_d©e_tsˇn_fûãr_t
(
this
,
ö
),

865 
this
->
	`db
(),

866 
_pd©e_desc
.
	`gë
(),

867 
px˘


873 
tu∂e_fifo
* 
joö_lo_d_out
 = 
√w
 
	`tu∂e_fifo
((
q32_joö_d_tu∂e
));

874 
∑ckë_t
* 
joö_lo_d_∑ckë
 =

875 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date JOIN",

876 
joö_lo_d_out
,

877 
√w
 
	`åivül_fûãr_t
((
q32_joö_d_tu∂e
)),

878 
lo_tsˇn_∑ckë
,

879 
d_tsˇn_∑ckë
,

880 
√w
 
	`q32_lo_d_joö_t
() );

883 
tu∂e_fifo
* 
joö_lo_d_s_out
 = 
√w
 
	`tu∂e_fifo
((
q32_joö_d_s_tu∂e
));

884 
∑ckë_t
* 
joö_lo_d_s_∑ckë
 =

885 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date - Supplier JOIN",

886 
joö_lo_d_s_out
,

887 
√w
 
	`åivül_fûãr_t
((
q32_joö_d_s_tu∂e
)),

888 
joö_lo_d_∑ckë
,

889 
s_tsˇn_∑ckë
,

890 
√w
 
	`q32_lo_d_s_joö_t
() );

893 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q32_joö_tu∂e
));

894 
∑ckë_t
* 
joö_∑ckë
 =

895 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Date - Supplier - Customer JOIN",

896 
joö_out
,

897 
√w
 
	`åivül_fûãr_t
((
q32_joö_tu∂e
)),

898 
joö_lo_d_s_∑ckë
,

899 
c_tsˇn_∑ckë
,

900 
√w
 
	`q32_joö_t
() );

903 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

904 
√w
 
	`tu∂e_fifo
( (
q32_aggªg©e_tu∂e
));

905 
∑ckë_t
* 
q32_agg_∑ckë
 =

906 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q3_2",

907 
agg_ouçut_buf„r
,

908 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

909 
joö_∑ckë
,

910 
√w
 
	`q32_agg_aggªg©e_t
(),

911 
√w
 
	`q32_agg_öput_tu∂e_key_exåa˘‹_t
(),

912 
√w
 
	`q32_agg_öput_tu∂e_key_com∑ª_t
());

914 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q32_aggªg©e_tu∂e
));

915 
∑ckë_t
* 
q32_s‹t_föÆ_∑ckë
 =

916 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

917 
s‹t_föÆ_out
,

918 
√w
 
	`åivül_fûãr_t
((
q32_aggªg©e_tu∂e
)),

919 
√w
 
	`q32_‹dî_key_exåa˘‹_t
(),

920 
√w
 
	`q32_‹dî_key_com∑ª_t
(),

921 
q32_agg_∑ckë
);

923 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

924 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

925 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

926 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

927 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

928 
joö_lo_d_∑ckë
->
	`assign_quîy_°©e
(
qs
);

929 
joö_lo_d_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

930 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

931 
q32_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

932 
q32_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

935 
ssb_q32_¥o˚ss_tu∂e_t
 
±
;

936 
	`¥o˚ss_quîy
(
q32_s‹t_föÆ_∑ckë
, 
±
);

937 
dp
->
	`quîy_°©e_de°roy
(
qs
);

939  (
RCOK
);

940 
	}
}

943 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q3_3.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

65 
	sq33_lo_tu∂e


67 
	mLO_CUSTKEY
;

68 
	mLO_SUPPKEY
;

69 
	mLO_ORDERDATE
;

70 
	mLO_REVENUE
;

73 
	sq33_s_tu∂e


75 
	mS_SUPPKEY
;

76 
	mS_CITY
[11];

79 
	sq33_c_tu∂e


81 
	mC_CUSTKEY
;

82 
	mC_CITY
[11];

85 
	sq33_d_tu∂e


87 
	mD_DATEKEY
;

88 
	mD_YEAR
;

91 
	sq33_joö_s_tu∂e


93 
	mLO_CUSTKEY
;

94 
	mS_CITY
[11];

95 
	mLO_REVENUE
;

96 
	mLO_ORDERDATE
;

99 
	sq33_joö_s_c_tu∂e


101 
	mC_CITY
[11];

102 
	mS_CITY
[11];

103 
	mLO_REVENUE
;

104 
	mLO_ORDERDATE
;

108 
	sq33_joö_tu∂e


110 
	mC_CITY
[11];

111 
	mS_CITY
[11];

112 
	mD_YEAR
;

113 
	mLO_REVENUE
;

116 
	sq33_aggªg©e_tu∂e


118 
	mC_CITY
[11];

119 
	mS_CITY
[11];

120 
	mD_YEAR
;

121 
	mREVENUE
;

130 
q33_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

133 ˛as†
	cq33_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


135 
¥iv©e
:

136 
Sh‹eSSBEnv
* 
_ssbdb
;

137 
èbÀ_row_t
* 
	m_¥löe
;

138 
ªp_row_t
 
	m_º
;

140 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

142 
	mpublic
:

144 
	$q33_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

145 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

149 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

150 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

151 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

152 
_¥löe
->
_ªp
 = &
_º
;

156 ~
	$q33_löe‹dî_tsˇn_fûãr_t
()

159 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

160 
	}
}

164 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

167 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

168 
	`as£π
(
Ál£
);

171  (
åue
);

172 
	}
}

176 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

178 
q33_lo_tu∂e
 *
de°
;

179 
de°
 = 
Æig√d_ˇ°
<
q33_lo_tu∂e
>(
d
.
d©a
);

181 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

182 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

183 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

184 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

187 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

188 
_löe‹dî
.
LO_CUSTKEY
,

189 
_löe‹dî
.
LO_SUPPKEY
,

190 
_löe‹dî
.
LO_ORDERDATE
,

191 
_löe‹dî
.
LO_REVENUE
);

193 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

194 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

195 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

196 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

198 
	}
}

200 
q33_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

201  
√w
 
	`q33_löe‹dî_tsˇn_fûãr_t
(*
this
);

202 
	}
}

204 
c_°r
 
	$to_°rög
() const {

205  
	`c_°r
("q33_lineorder_tscan_filter_t()");

206 
	}
}

210 ˛as†
	cq33_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


212 
¥iv©e
:

213 
Sh‹eSSBEnv
* 
_ssbdb
;

214 
èbÀ_row_t
* 
	m_¥cu°
;

215 
ªp_row_t
 
	m_º
;

217 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

220 
	mCITY_1
[11];

221 
	mCITY_2
[11];

222 
	mpublic
:

224 
	$q33_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_3_öput_t
 &
ö
)

225 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

229 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

230 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

231 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

232 
_¥cu°
->
_ªp
 = &
_º
;

235 
	`°r˝y
(
CITY_1
,"UNITED KI1");

236 
	`°r˝y
(
CITY_2
,"UNITED KI5");

239 ~
	$q33_cu°omî_tsˇn_fûãr_t
()

242 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

243 
	}
}

247 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

250 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

251 
	`as£π
(
Ál£
);

254 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
	`STRSIZE
(10));

256 i‡(
	`°rcmp
(
_cu°omî
.
C_CITY
,
CITY_1
)==0 || såcmp(_cu°omî.C_CITY,
CITY_2
)==0)

258 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ CITY |%s --d\n",

259 
_cu°omî
.
C_CITY
);

260  (
åue
);

264 
	`TRACE
–
TRACE_RECORD_FLOW
, ". CITY |%s --d\n",

265 
_cu°omî
.
C_CITY
);

266  (
Ál£
);

268 
	}
}

272 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

274 
q33_c_tu∂e
 *
de°
;

275 
de°
 = 
Æig√d_ˇ°
<
q33_c_tu∂e
>(
d
.
d©a
);

277 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

278 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
	`STRSIZE
(10));

280 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

281 
_cu°omî
.
C_CUSTKEY
,

282 
_cu°omî
.
C_CITY
);

285 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

286 
	`°r˝y
(
de°
->
C_CITY
,
_cu°omî
.C_CITY);

287 
	}
}

289 
q33_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

290  
√w
 
	`q33_cu°omî_tsˇn_fûãr_t
(*
this
);

291 
	}
}

293 
c_°r
 
	$to_°rög
() const {

294  
	`c_°r
("q33_customer_tscan_filter_t()");

295 
	}
}

299 ˛as†
	cq33_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


301 
¥iv©e
:

302 
Sh‹eSSBEnv
* 
_ssbdb
;

303 
èbÀ_row_t
* 
	m_¥suµ
;

304 
ªp_row_t
 
	m_º
;

306 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

309 
	mCITY_1
[11];

310 
	mCITY_2
[11];

311 
	mpublic
:

313 
	$q33_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_3_öput_t
 &
ö
)

314 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

318 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

319 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

320 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

321 
_¥suµ
->
_ªp
 = &
_º
;

324 
	`°r˝y
(
CITY_1
,"UNITED KI1");

325 
	`°r˝y
(
CITY_2
,"UNITED KI5");

328 ~
	$q33_suµlõr_tsˇn_fûãr_t
()

331 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

332 
	}
}

336 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

339 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

340 
	`as£π
(
Ál£
);

343 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

346 i‡(
	`°rcmp
(
_suµlõr
.
S_CITY
,
CITY_1
)==0 || såcmp(_suµlõr.S_CITY,
CITY_2
)==0)

348 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ CITY |%s --d\n",

349 
_suµlõr
.
S_CITY
);

350  (
åue
);

354 
	`TRACE
–
TRACE_RECORD_FLOW
, ". CITY |%s --d\n",

355 
_suµlõr
.
S_CITY
);

356  (
Ál£
);

358 
	}
}

362 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

364 
q33_s_tu∂e
 *
de°
;

365 
de°
 = 
Æig√d_ˇ°
<
q33_s_tu∂e
>(
d
.
d©a
);

367 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

368 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

370 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

371 
_suµlõr
.
S_SUPPKEY
,

372 
_suµlõr
.
S_CITY
);

375 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

376 
	`°r˝y
(
de°
->
S_CITY
,
_suµlõr
.S_CITY);

377 
	}
}

379 
q33_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

380  
√w
 
	`q33_suµlõr_tsˇn_fûãr_t
(*
this
);

381 
	}
}

383 
c_°r
 
	$to_°rög
() const {

384  
	`c_°r
("q33_supplier_tscan_filter_t()");

385 
	}
}

390 ˛as†
	cq33_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


392 
¥iv©e
:

393 
Sh‹eSSBEnv
* 
_ssbdb
;

394 
èbÀ_row_t
* 
	m_¥d©e
;

395 
ªp_row_t
 
	m_º
;

397 
ssb_d©e_tu∂e
 
	m_d©e
;

400 
	mYEAR_LOW
;

401 
	mYEAR_HIGH
;

403 
	mpublic
:

405 
	$q33_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_3_öput_t
 &
ö
)

406 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

410 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

411 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

412 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

413 
_¥d©e
->
_ªp
 = &
_º
;

415 
YEAR_LOW
=1992;

416 
YEAR_HIGH
=1997;

419 ~
	$q33_d©e_tsˇn_fûãr_t
()

422 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

423 
	}
}

427 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

430 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

431 
	`as£π
(
Ál£
);

434 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

437 i‡(
_d©e
.
D_YEAR
>=
YEAR_LOW
 && _d©e.D_YEAR<=
YEAR_HIGH
)

439 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

440 
_d©e
.
D_YEAR
);

441  (
åue
);

445 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

446 
_d©e
.
D_YEAR
);

447  (
Ál£
);

450 
	}
}

454 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

456 
q33_d_tu∂e
 *
de°
;

457 
de°
 = 
Æig√d_ˇ°
<
q33_d_tu∂e
>(
d
.
d©a
);

459 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

460 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

462 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

463 
_d©e
.
D_DATEKEY
,

464 
_d©e
.
D_YEAR
);

467 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

468 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

469 
	}
}

471 
q33_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

472  
√w
 
	`q33_d©e_tsˇn_fûãr_t
(*
this
);

473 
	}
}

475 
c_°r
 
	$to_°rög
() const {

476  
	`c_°r
("q33_date_tscan_filter_t()");

477 
	}
}

482 
	gq33_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

485 
q33_lo_s_joö_t
 ()

486 : 
tu∂e_joö_t
((
q33_lo_tu∂e
),

487 
off£tof
(
q33_lo_tu∂e
, 
LO_SUPPKEY
),

488 (
q33_s_tu∂e
),

489 
off£tof
(
q33_s_tu∂e
, 
S_SUPPKEY
),

491 (
q33_joö_s_tu∂e
))

496 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

497 c⁄° 
tu∂e_t
 &
À·
,

498 c⁄° 
tu∂e_t
 &
right
)

501 
q33_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q33_lo_tu∂e>(
À·
.
d©a
);

502 
q33_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q33_s_tu∂e>(
right
.
d©a
);

503 
q33_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q33_joö_s_tu∂e>(
de°
.
d©a
);

505 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

506 
°r˝y
(
ªt
->
S_CITY
,
s
->S_CITY);

507 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

508 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

511 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d {%s} %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
S_CITY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
);

515 
vútuÆ
 
q33_lo_s_joö_t
* 
˛⁄e
() const {

516  
√w
 
q33_lo_s_joö_t
(*
this
);

519 
vútuÆ
 
c_°r
 
to_°rög
() const {

526 
	gq33_lo_s_c_joö_t
 : 
public
 
tu∂e_joö_t
 {

529 
q33_lo_s_c_joö_t
 ()

530 : 
tu∂e_joö_t
((
q33_joö_s_tu∂e
),

531 
off£tof
(
q33_joö_s_tu∂e
, 
LO_CUSTKEY
),

532 (
q33_c_tu∂e
),

533 
off£tof
(
q33_c_tu∂e
, 
C_CUSTKEY
),

535 (
q33_joö_s_c_tu∂e
))

540 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

541 c⁄° 
tu∂e_t
 &
À·
,

542 c⁄° 
tu∂e_t
 &
right
)

545 
q33_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q33_joö_s_tu∂e>(
À·
.
d©a
);

546 
q33_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q33_c_tu∂e>(
right
.
d©a
);

547 
q33_joö_s_c_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q33_joö_s_c_tu∂e>(
de°
.
d©a
);

550 
°r˝y
(
ªt
->
S_CITY
,
jo
->S_CITY);

551 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
;

552 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

554 
°r˝y
(
ªt
->
C_CITY
,
c
->C_CITY);

556 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %lf\n",
ªt
->
C_CITY
,Ñë->
S_CITY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
);

560 
vútuÆ
 
q33_lo_s_c_joö_t
* 
˛⁄e
() const {

561  
√w
 
q33_lo_s_c_joö_t
(*
this
);

564 
vútuÆ
 
c_°r
 
to_°rög
() const {

571 
	gq33_joö_t
 : 
public
 
tu∂e_joö_t
 {

574 
q33_joö_t
 ()

575 : 
tu∂e_joö_t
((
q33_joö_s_c_tu∂e
),

576 
off£tof
(
q33_joö_s_c_tu∂e
, 
LO_ORDERDATE
),

577 (
q33_d_tu∂e
),

578 
off£tof
(
q33_d_tu∂e
, 
D_DATEKEY
),

580 (
q33_joö_tu∂e
))

585 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

586 c⁄° 
tu∂e_t
 &
À·
,

587 c⁄° 
tu∂e_t
 &
right
)

590 
q33_joö_s_c_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q33_joö_s_c_tu∂e>(
À·
.
d©a
);

591 
q33_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q33_d_tu∂e>(
right
.
d©a
);

592 
q33_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q33_joö_tu∂e>(
de°
.
d©a
);

594 
°r˝y
(
ªt
->
C_CITY
,
jo
->C_CITY);

595 
°r˝y
(
ªt
->
S_CITY
,
jo
->S_CITY);

596 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

598 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

600 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d\n",
ªt
->
C_CITY
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

604 
vútuÆ
 
q33_joö_t
* 
˛⁄e
() const {

605  
√w
 
q33_joö_t
(*
this
);

608 
vútuÆ
 
c_°r
 
to_°rög
() const {

617 
	sq33_agg_öput_tu∂e_key
 {

618 
	mC_CITY
[
STRSIZE
(10)];

619 
	mS_CITY
[
STRSIZE
(10)];

620 
	mD_YEAR
;

622 
exåa˘_höt
() {

623  (
	mthis
->
	mC_CITY
[0] << 24Ë+ (this->C_CITY[1] << 16Ë+ (this->
	mS_CITY
[0] << 8Ë+ (this->
	mD_YEAR
 - 1990);

627 
	gq33_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

629 
q33_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q33_agg_öput_tu∂e_key
), 
off£tof
(
q33_joö_tu∂e
, 
C_CITY
)) {

632 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

633 
q33_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q33_agg_öput_tu∂e_key>(
key
);

653  
	gÆig√d_key
->
exåa˘_höt
();

658 
vútuÆ
 
q33_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

659  
√w
 
q33_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

663 
	gq33_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

665 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

666 
q33_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q33_agg_öput_tu∂e_key>(
key1
);

667 
q33_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q33_agg_öput_tu∂e_key>(
key2
);

669 
	gccôycom∑ris⁄
 = 
°rcmp
(
a
->
C_CITY
, 
b
->C_CITY);

670 i‡(
	gccôycom∑ris⁄
 !0Ë 
ccôycom∑ris⁄
;

671 
	gscôycom∑ris⁄
 = 
°rcmp
(
a
->
S_CITY
, 
b
->S_CITY);

672 i‡(
	gscôycom∑ris⁄
 !0Ë 
scôycom∑ris⁄
;

673  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

676 
vútuÆ
 
q33_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

677  
√w
 
q33_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

682 
q33_agg_öput_tu∂e_key
 
	tq33_agg_tu∂e_key
;

684 ˛as†
	cq33_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

685 
¥iv©e
:

687 
q33_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

689 
q33_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q33_agg_tu∂e_key
), 
off£tof
(
q33_aggªg©e_tu∂e
, 
C_CITY
)) {

692 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

693 
q33_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q33_agg_tu∂e_key > (
key
);

694  
	mÆig√d_key
->
exåa˘_höt
();

697 
vútuÆ
 
q33_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

698  
√w
 
q33_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

702 
q33_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

704 
	gpublic
:

706 
	$q33_agg_aggªg©e_t
()

707 : 
	`tu∂e_aggªg©e_t
((
q33_aggªg©e_tu∂e
)) {

708 
	}
}

710 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

711  &
_exåa˘‹
;

712 
	}
}

714 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

715 
q33_joö_tu∂e
 *
§c
;

716 
§c
 = 
Æig√d_ˇ°
<
q33_joö_tu∂e
> (
s
.
d©a
);

717 
q33_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q33_aggªg©e_tu∂e>(
agg_d©a
);

719 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

720 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
REVENUE
);

721 
	}
}

723 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

724 
q33_aggªg©e_tu∂e
 *
de°
;

725 
de°
 = 
Æig√d_ˇ°
<
q33_aggªg©e_tu∂e
 > (
d
.
d©a
);

726 
q33_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q33_aggªg©e_tu∂ê> (
agg_d©a
);

728 *
de°
 = *
tu∂e
;

729 
	}
}

731 
q33_agg_aggªg©e_t
* 
	$˛⁄e
() const {

732  
√w
 
	`q33_agg_aggªg©e_t
(*
this
);

733 
	}
}

735 
c_°r
 
	$to_°rög
() const {

737 
	}
}

742 
	sq33_s‹t_tu∂e_key
 {

743 
	mD_YEAR
;

744 
	mREVENUE
;

747 
	gq33_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

749 
q33_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q33_s‹t_tu∂e_key
), 
off£tof
(
q33_aggªg©e_tu∂e
, 
D_YEAR
)) {

752 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

753 
q33_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q33_s‹t_tu∂e_key> (
key
);

759 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë- ((◊lig√d_key->
REVENUE
) & ~(15)) >> 4);

760  
	gªsu…
;

765 
vútuÆ
 
q33_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

766  
√w
 
q33_‹dî_key_exåa˘‹_t
(*
this
);

770 
	gq33_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

772 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

773 
q33_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q33_s‹t_tu∂e_key>(
key1
);

774 
q33_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q33_s‹t_tu∂e_key>(
key2
);

776 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

777 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

778 i‡(
	ga
->
	gREVENUE
 > 
	gb
->REVENUE)

780 i‡(
	ga
->
	gREVENUE
 < 
	gb
->REVENUE)

786 
vútuÆ
 
q33_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

787  
√w
 
q33_‹dî_key_com∑ª_t
(*
this
);

795 ˛as†
	cssb_q33_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


797 
public
:

799 
	$begö
() {

800 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q3_3 ANSWER ...\n");

801 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

804 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

805 
¥oje˘ed_tu∂e
 *
tu∂e
;

806 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

809 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS {%s} {%s} %d %d\n",
tu∂e
->
S_CITY
,Åu∂e->
C_CITY
,Åu∂e->
D_YEAR
,Åu∂e->
REVENUE
);

812 
	}
}

823 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q3_3
(c⁄° 
x˘_id
,

824 
q3_3_öput_t
& 
ö
)

826 
	`TRACE
–
TRACE_ALWAYS
, "********** q3_3 *********\n");

829 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

830 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

834 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q33_lo_tu∂e
));

835 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

836 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

837 
lo_out_buf„r
,

838 
√w
 
	`q33_löe‹dî_tsˇn_fûãr_t
(
this
),

839 
this
->
	`db
(),

840 
_∂öe‹dî_desc
.
	`gë
(),

841 
px˘


846 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q33_s_tu∂e
));

847 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

848 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

849 
s_out_buf„r
,

850 
√w
 
	`q33_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

851 
this
->
	`db
(),

852 
_psuµlõr_desc
.
	`gë
(),

853 
px˘


858 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q33_c_tu∂e
));

859 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

860 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

861 
c_out_buf„r
,

862 
√w
 
	`q33_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

863 
this
->
	`db
(),

864 
_pcu°omî_desc
.
	`gë
(),

865 
px˘


870 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q33_d_tu∂e
));

871 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

872 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

873 
d_out_buf„r
,

874 
√w
 
	`q33_d©e_tsˇn_fûãr_t
(
this
,
ö
),

875 
this
->
	`db
(),

876 
_pd©e_desc
.
	`gë
(),

877 
px˘


883 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q33_joö_s_tu∂e
));

884 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

885 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

886 
joö_lo_s_out
,

887 
√w
 
	`åivül_fûãr_t
((
q33_joö_s_tu∂e
)),

888 
lo_tsˇn_∑ckë
,

889 
s_tsˇn_∑ckë
,

890 
√w
 
	`q33_lo_s_joö_t
() );

893 
tu∂e_fifo
* 
joö_lo_s_c_out
 = 
√w
 
	`tu∂e_fifo
((
q33_joö_s_c_tu∂e
));

894 
∑ckë_t
* 
joö_lo_s_c_∑ckë
 =

895 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer JOIN",

896 
joö_lo_s_c_out
,

897 
√w
 
	`åivül_fûãr_t
((
q33_joö_s_c_tu∂e
)),

898 
joö_lo_s_∑ckë
,

899 
c_tsˇn_∑ckë
,

900 
√w
 
	`q33_lo_s_c_joö_t
() );

903 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q33_joö_tu∂e
));

904 
∑ckë_t
* 
joö_∑ckë
 =

905 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer - Date JOIN",

906 
joö_out
,

907 
√w
 
	`åivül_fûãr_t
((
q33_joö_tu∂e
)),

908 
joö_lo_s_c_∑ckë
,

909 
d_tsˇn_∑ckë
,

910 
√w
 
	`q33_joö_t
() );

914 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

915 
√w
 
	`tu∂e_fifo
( (
q33_aggªg©e_tu∂e
));

916 
∑ckë_t
* 
q33_agg_∑ckë
 =

917 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q3_3",

918 
agg_ouçut_buf„r
,

919 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

920 
joö_∑ckë
,

921 
√w
 
	`q33_agg_aggªg©e_t
(),

922 
√w
 
	`q33_agg_öput_tu∂e_key_exåa˘‹_t
(),

923 
√w
 
	`q33_agg_öput_tu∂e_key_com∑ª_t
());

925 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q33_aggªg©e_tu∂e
));

926 
∑ckë_t
* 
q33_s‹t_föÆ_∑ckë
 =

927 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

928 
s‹t_föÆ_out
,

929 
√w
 
	`åivül_fûãr_t
((
q33_aggªg©e_tu∂e
)),

930 
√w
 
	`q33_‹dî_key_exåa˘‹_t
(),

931 
√w
 
	`q33_‹dî_key_com∑ª_t
(),

932 
q33_agg_∑ckë
);

934 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

935 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

936 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

937 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

938 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

939 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

940 
joö_lo_s_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

941 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

942 
q33_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

943 
q33_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

946 
ssb_q33_¥o˚ss_tu∂e_t
 
±
;

948 
	`¥o˚ss_quîy
(
q33_s‹t_föÆ_∑ckë
, 
±
);

949 
dp
->
	`quîy_°©e_de°roy
(
qs
);

951  (
RCOK
);

952 
	}
}

955 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q3_4.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

67 
	sq34_lo_tu∂e


69 
	mLO_CUSTKEY
;

70 
	mLO_SUPPKEY
;

71 
	mLO_ORDERDATE
;

72 
	mLO_REVENUE
;

75 
	sq34_s_tu∂e


77 
	mS_SUPPKEY
;

78 
	mS_CITY
[11];

81 
	sq34_c_tu∂e


83 
	mC_CUSTKEY
;

84 
	mC_CITY
[11];

87 
	sq34_d_tu∂e


89 
	mD_DATEKEY
;

90 
	mD_YEAR
;

93 
	sq34_joö_s_tu∂e


95 
	mLO_CUSTKEY
;

96 
	mS_CITY
[11];

97 
	mLO_REVENUE
;

98 
	mLO_ORDERDATE
;

101 
	sq34_joö_s_d_tu∂e


103 
	mS_CITY
[11];

104 
	mD_YEAR
;

105 
	mLO_CUSTKEY
;

106 
	mLO_REVENUE
;

110 
	sq34_joö_tu∂e


112 
	mS_CITY
[11];

113 
	mC_CITY
[11];

114 
	mD_YEAR
;

115 
	mLO_REVENUE
;

118 
	sq34_aggªg©e_tu∂e


120 
	mC_CITY
[11];

121 
	mS_CITY
[11];

122 
	mD_YEAR
;

123 
	mREVENUE
;

131 
q34_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

134 ˛as†
	cq34_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


136 
¥iv©e
:

137 
Sh‹eSSBEnv
* 
_ssbdb
;

138 
èbÀ_row_t
* 
	m_¥löe
;

139 
ªp_row_t
 
	m_º
;

141 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

143 
	mpublic
:

145 
	$q34_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

146 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

150 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

151 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

152 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

153 
_¥löe
->
_ªp
 = &
_º
;

157 ~
	$q34_löe‹dî_tsˇn_fûãr_t
()

160 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

161 
	}
}

165 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

168 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

169 
	`as£π
(
Ál£
);

172  (
åue
);

173 
	}
}

177 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

179 
q34_lo_tu∂e
 *
de°
;

180 
de°
 = 
Æig√d_ˇ°
<
q34_lo_tu∂e
>(
d
.
d©a
);

182 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

183 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

184 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

185 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

194 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

195 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

196 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

197 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

199 
	}
}

201 
q34_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

202  
√w
 
	`q34_löe‹dî_tsˇn_fûãr_t
(*
this
);

203 
	}
}

205 
c_°r
 
	$to_°rög
() const {

206  
	`c_°r
("q34_lineorder_tscan_filter_t()");

207 
	}
}

211 ˛as†
	cq34_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


213 
¥iv©e
:

214 
Sh‹eSSBEnv
* 
_ssbdb
;

215 
èbÀ_row_t
* 
	m_¥cu°
;

216 
ªp_row_t
 
	m_º
;

218 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

221 
	mCITY_1
[11];

222 
	mCITY_2
[11];

223 
	mpublic
:

225 
	$q34_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_4_öput_t
 &
ö
)

226 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

230 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

231 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

232 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

233 
_¥cu°
->
_ªp
 = &
_º
;

236 
	`°r˝y
(
CITY_1
,"UNITED KI1");

237 
	`°r˝y
(
CITY_2
,"UNITED KI5");

240 ~
	$q34_cu°omî_tsˇn_fûãr_t
()

243 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

244 
	}
}

248 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

251 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

252 
	`as£π
(
Ál£
);

255 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
	`STRSIZE
(10));

257 i‡(
	`°rcmp
(
_cu°omî
.
C_CITY
,
CITY_1
)==0 || såcmp(_cu°omî.C_CITY,
CITY_2
)==0)

261  (
åue
);

267  (
Ál£
);

269 
	}
}

273 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

275 
q34_c_tu∂e
 *
de°
;

276 
de°
 = 
Æig√d_ˇ°
<
q34_c_tu∂e
>(
d
.
d©a
);

278 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

279 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
	`STRSIZE
(10));

281 
	`TRACE
–
TRACE_RECORD_FLOW
, "C_CUSTKEY %d| C_CITY %s --d\n",

282 
_cu°omî
.
C_CUSTKEY
,

283 
_cu°omî
.
C_CITY
);

286 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

287 
	`°r˝y
(
de°
->
C_CITY
,
_cu°omî
.C_CITY);

288 
	}
}

290 
q34_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

291  
√w
 
	`q34_cu°omî_tsˇn_fûãr_t
(*
this
);

292 
	}
}

294 
c_°r
 
	$to_°rög
() const {

295  
	`c_°r
("q34_customer_tscan_filter_t()");

296 
	}
}

300 ˛as†
	cq34_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


302 
¥iv©e
:

303 
Sh‹eSSBEnv
* 
_ssbdb
;

304 
èbÀ_row_t
* 
	m_¥suµ
;

305 
ªp_row_t
 
	m_º
;

307 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

310 
	mCITY_1
[11];

311 
	mCITY_2
[11];

312 
	mpublic
:

314 
	$q34_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_4_öput_t
 &
ö
)

315 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

319 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

320 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

321 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

322 
_¥suµ
->
_ªp
 = &
_º
;

325 
	`°r˝y
(
CITY_1
,"UNITED KI1");

326 
	`°r˝y
(
CITY_2
,"UNITED KI5");

329 ~
	$q34_suµlõr_tsˇn_fûãr_t
()

332 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

333 
	}
}

337 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

340 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

341 
	`as£π
(
Ál£
);

344 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

347 i‡(
	`°rcmp
(
_suµlõr
.
S_CITY
,
CITY_1
)==0 || såcmp(_suµlõr.S_CITY,
CITY_2
)==0)

351  (
åue
);

357  (
Ál£
);

359 
	}
}

363 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

365 
q34_s_tu∂e
 *
de°
;

366 
de°
 = 
Æig√d_ˇ°
<
q34_s_tu∂e
>(
d
.
d©a
);

368 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

369 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

376 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

377 
	`°r˝y
(
de°
->
S_CITY
,
_suµlõr
.S_CITY);

378 
	}
}

380 
q34_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

381  
√w
 
	`q34_suµlõr_tsˇn_fûãr_t
(*
this
);

382 
	}
}

384 
c_°r
 
	$to_°rög
() const {

385  
	`c_°r
("q34_supplier_tscan_filter_t()");

386 
	}
}

391 ˛as†
	cq34_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


393 
¥iv©e
:

394 
Sh‹eSSBEnv
* 
_ssbdb
;

395 
èbÀ_row_t
* 
	m_¥d©e
;

396 
ªp_row_t
 
	m_º
;

398 
ssb_d©e_tu∂e
 
	m_d©e
;

401 
	mYEARMONTH
[8];

403 
	mpublic
:

405 
	$q34_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q3_4_öput_t
 &
ö
)

406 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

410 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

411 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

412 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

413 
_¥d©e
->
_ªp
 = &
_º
;

415 
	`°r˝y
(
YEARMONTH
,"Jan1992");

418 ~
	$q34_d©e_tsˇn_fûãr_t
()

421 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

422 
	}
}

426 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

429 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

430 
	`as£π
(
Ál£
);

433 
_¥d©e
->
	`gë_vÆue
(6, 
_d©e
.
D_YEARMONTH
, 
	`STRSIZE
(7));

436 i‡–
	`°rcmp
(
_d©e
.
D_YEARMONTH
,
YEARMONTH
)==0 )

442  (
åue
);

448  (
Ál£
);

451 
	}
}

455 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

457 
q34_d_tu∂e
 *
de°
;

458 
de°
 = 
Æig√d_ˇ°
<
q34_d_tu∂e
>(
d
.
d©a
);

460 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

461 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

468 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

469 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

470 
	}
}

472 
q34_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

473  
√w
 
	`q34_d©e_tsˇn_fûãr_t
(*
this
);

474 
	}
}

476 
c_°r
 
	$to_°rög
() const {

477  
	`c_°r
("q34_date_tscan_filter_t()");

478 
	}
}

483 
	gq34_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

486 
q34_lo_s_joö_t
 ()

487 : 
tu∂e_joö_t
((
q34_lo_tu∂e
),

488 
off£tof
(
q34_lo_tu∂e
, 
LO_SUPPKEY
),

489 (
q34_s_tu∂e
),

490 
off£tof
(
q34_s_tu∂e
, 
S_SUPPKEY
),

492 (
q34_joö_s_tu∂e
))

497 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

498 c⁄° 
tu∂e_t
 &
À·
,

499 c⁄° 
tu∂e_t
 &
right
)

502 
q34_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q34_lo_tu∂e>(
À·
.
d©a
);

503 
q34_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q34_s_tu∂e>(
right
.
d©a
);

504 
q34_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q34_joö_s_tu∂e>(
de°
.
d©a
);

506 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

507 
°r˝y
(
ªt
->
S_CITY
,
s
->S_CITY);

508 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

509 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

516 
vútuÆ
 
q34_lo_s_joö_t
* 
˛⁄e
() const {

517  
√w
 
q34_lo_s_joö_t
(*
this
);

520 
vútuÆ
 
c_°r
 
to_°rög
() const {

527 
	gq34_lo_s_d_joö_t
 : 
public
 
tu∂e_joö_t
 {

530 
q34_lo_s_d_joö_t
 ()

531 : 
tu∂e_joö_t
((
q34_joö_s_tu∂e
),

532 
off£tof
(
q34_joö_s_tu∂e
, 
LO_ORDERDATE
),

533 (
q34_d_tu∂e
),

534 
off£tof
(
q34_d_tu∂e
, 
D_DATEKEY
),

536 (
q34_joö_s_d_tu∂e
))

541 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

542 c⁄° 
tu∂e_t
 &
À·
,

543 c⁄° 
tu∂e_t
 &
right
)

546 
q34_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q34_joö_s_tu∂e>(
À·
.
d©a
);

547 
q34_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q34_d_tu∂e>(
right
.
d©a
);

548 
q34_joö_s_d_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q34_joö_s_d_tu∂e>(
de°
.
d©a
);

550 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
;

551 
°r˝y
(
ªt
->
S_CITY
,
jo
->S_CITY);

552 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
 ;

553 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

555 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN LO S D %d {%s} %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

559 
vútuÆ
 
q34_lo_s_d_joö_t
* 
˛⁄e
() const {

560  
√w
 
q34_lo_s_d_joö_t
(*
this
);

563 
vútuÆ
 
c_°r
 
to_°rög
() const {

612 
	gq34_joö_t
 : 
public
 
tu∂e_joö_t
 {

615 
q34_joö_t
 ()

616 : 
tu∂e_joö_t
((
q34_joö_s_d_tu∂e
),

617 
off£tof
(
q34_joö_s_d_tu∂e
, 
LO_CUSTKEY
),

618 (
q34_c_tu∂e
),

619 
off£tof
(
q34_c_tu∂e
, 
C_CUSTKEY
),

621 (
q34_joö_tu∂e
))

626 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

627 c⁄° 
tu∂e_t
 &
À·
,

628 c⁄° 
tu∂e_t
 &
right
)

631 
q34_joö_s_d_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q34_joö_s_d_tu∂e>(
À·
.
d©a
);

632 
q34_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q34_c_tu∂e>(
right
.
d©a
);

633 
q34_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q34_joö_tu∂e>(
de°
.
d©a
);

635 
°r˝y
(
ªt
->
C_CITY
,
c
->C_CITY);

636 
°r˝y
(
ªt
->
S_CITY
,
jo
->S_CITY);

637 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
;

638 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

642 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN LO S D C {%s} {%s} %d %d\n",
ªt
->
C_CITY
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
);

646 
vútuÆ
 
q34_joö_t
* 
˛⁄e
() const {

647  
√w
 
q34_joö_t
(*
this
);

650 
vútuÆ
 
c_°r
 
to_°rög
() const {

659 
	sq34_agg_öput_tu∂e_key
 {

660 
	mC_CITY
[
STRSIZE
(10)];

661 
	mS_CITY
[
STRSIZE
(10)];

662 
	mD_YEAR
;

664 
exåa˘_höt
() {

665  (
	mthis
->
	mC_CITY
[0] << 24Ë+ (this->C_CITY[1] << 16Ë+ (this->
	mS_CITY
[0] << 8Ë+ (this->
	mD_YEAR
 - 1990);

669 
	gq34_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

671 
q34_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q34_agg_öput_tu∂e_key
), 
off£tof
(
q34_joö_tu∂e
, 
C_CITY
)) {

674 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

675 
q34_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q34_agg_öput_tu∂e_key>(
key
);

695  
	gÆig√d_key
->
exåa˘_höt
();

700 
vútuÆ
 
q34_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

701  
√w
 
q34_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

705 
	gq34_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

707 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

708 
q34_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q34_agg_öput_tu∂e_key>(
key1
);

709 
q34_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q34_agg_öput_tu∂e_key>(
key2
);

711 
	gccôycom∑ris⁄
 = 
°rcmp
(
a
->
C_CITY
, 
b
->C_CITY);

712 i‡(
	gccôycom∑ris⁄
 !0Ë 
ccôycom∑ris⁄
;

713 
	gscôycom∑ris⁄
 = 
°rcmp
(
a
->
S_CITY
, 
b
->S_CITY);

714 i‡(
	gscôycom∑ris⁄
 !0Ë 
scôycom∑ris⁄
;

715  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

718 
vútuÆ
 
q34_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

719  
√w
 
q34_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

724 
q34_agg_öput_tu∂e_key
 
	tq34_agg_tu∂e_key
;

726 ˛as†
	cq34_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

727 
¥iv©e
:

729 
q34_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

731 
q34_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q34_agg_tu∂e_key
), 
off£tof
(
q34_aggªg©e_tu∂e
, 
C_CITY
)) {

734 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

735 
q34_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q34_agg_tu∂e_key > (
key
);

736  
	mÆig√d_key
->
exåa˘_höt
();

739 
vútuÆ
 
q34_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

740  
√w
 
q34_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

744 
q34_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

746 
	gpublic
:

748 
	$q34_agg_aggªg©e_t
()

749 : 
	`tu∂e_aggªg©e_t
((
q34_aggªg©e_tu∂e
)) {

750 
	}
}

752 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

753  &
_exåa˘‹
;

754 
	}
}

756 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

757 
q34_joö_tu∂e
 *
§c
;

758 
§c
 = 
Æig√d_ˇ°
<
q34_joö_tu∂e
> (
s
.
d©a
);

759 
q34_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q34_aggªg©e_tu∂e>(
agg_d©a
);

761 
	`°r˝y
(
tu∂e
->
C_CITY
,
§c
->C_CITY);

762 
	`°r˝y
(
tu∂e
->
S_CITY
,
§c
->S_CITY);

763 
tu∂e
->
D_YEAR
 = 
§c
->D_YEAR;

764 
tu∂e
->
REVENUE
 +
§c
->
LO_REVENUE
;

765 
	`TRACE
(
TRACE_RECORD_FLOW
, "--> %d\n", 
tu∂e
->
REVENUE
);

766 
	}
}

768 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

769 
q34_aggªg©e_tu∂e
 *
de°
;

770 
de°
 = 
Æig√d_ˇ°
<
q34_aggªg©e_tu∂e
 > (
d
.
d©a
);

771 
q34_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q34_aggªg©e_tu∂ê> (
agg_d©a
);

777 *
de°
 = *
tu∂e
;

778 
	`TRACE
(
TRACE_RECORD_FLOW
, "AGG %†%†%d %d \n", 
de°
->
C_CITY
, de°->
S_CITY
, de°->
D_YEAR
, de°->
REVENUE
);

779 
	}
}

781 
q34_agg_aggªg©e_t
* 
	$˛⁄e
() const {

782  
√w
 
	`q34_agg_aggªg©e_t
(*
this
);

783 
	}
}

785 
c_°r
 
	$to_°rög
() const {

787 
	}
}

792 
	sq34_s‹t_tu∂e_key
 {

793 
	mD_YEAR
;

794 
	mREVENUE
;

797 
	gq34_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

799 
q34_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q34_s‹t_tu∂e_key
), 
off£tof
(
q34_aggªg©e_tu∂e
, 
D_YEAR
)) {

802 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

803 
q34_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q34_s‹t_tu∂e_key> (
key
);

810 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë- ((◊lig√d_key->
REVENUE
) & ~(15)) >> 4);

811  
	gªsu…
;

816 
vútuÆ
 
q34_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

817  
√w
 
q34_‹dî_key_exåa˘‹_t
(*
this
);

821 
	gq34_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

823 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

824 
q34_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q34_s‹t_tu∂e_key>(
key1
);

825 
q34_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q34_s‹t_tu∂e_key>(
key2
);

827 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

828 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

829 i‡(
	ga
->
	gREVENUE
 > 
	gb
->REVENUE)

831 i‡(
	ga
->
	gREVENUE
 < 
	gb
->REVENUE)

837 
vútuÆ
 
q34_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

838  
√w
 
q34_‹dî_key_com∑ª_t
(*
this
);

845 ˛as†
	cssb_q34_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


847 
public
:

849 
	$begö
() {

850 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q3_4 ANSWER ...\n");

851 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

854 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

855 
¥oje˘ed_tu∂e
 *
tu∂e
;

856 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

858 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS {%s} {%s} %d %d\n",
tu∂e
->
C_CITY
,Åu∂e->
S_CITY
,Åu∂e->
D_YEAR
,Åu∂e->
REVENUE
);

861 
	}
}

872 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q3_4
(c⁄° 
x˘_id
,

873 
q3_4_öput_t
& 
ö
)

875 
	`TRACE
–
TRACE_ALWAYS
, "********** q3_4 *********\n");

878 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

879 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

883 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q34_lo_tu∂e
));

884 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

885 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

886 
lo_out_buf„r
,

887 
√w
 
	`q34_löe‹dî_tsˇn_fûãr_t
(
this
),

888 
this
->
	`db
(),

889 
_∂öe‹dî_desc
.
	`gë
(),

890 
px˘


895 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q34_s_tu∂e
));

896 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

897 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

898 
s_out_buf„r
,

899 
√w
 
	`q34_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

900 
this
->
	`db
(),

901 
_psuµlõr_desc
.
	`gë
(),

902 
px˘


907 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q34_c_tu∂e
));

908 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

909 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

910 
c_out_buf„r
,

911 
√w
 
	`q34_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

912 
this
->
	`db
(),

913 
_pcu°omî_desc
.
	`gë
(),

914 
px˘


919 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q34_d_tu∂e
));

920 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

921 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

922 
d_out_buf„r
,

923 
√w
 
	`q34_d©e_tsˇn_fûãr_t
(
this
,
ö
),

924 
this
->
	`db
(),

925 
_pd©e_desc
.
	`gë
(),

926 
px˘


932 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q34_joö_s_tu∂e
));

933 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

934 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

935 
joö_lo_s_out
,

936 
√w
 
	`åivül_fûãr_t
((
q34_joö_s_tu∂e
)),

937 
lo_tsˇn_∑ckë
,

938 
s_tsˇn_∑ckë
,

939 
√w
 
	`q34_lo_s_joö_t
() );

942 
tu∂e_fifo
* 
joö_lo_s_d_out
 = 
√w
 
	`tu∂e_fifo
((
q34_joö_s_d_tu∂e
));

943 
∑ckë_t
* 
joö_lo_s_d_∑ckë
 =

944 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Date JOIN",

945 
joö_lo_s_d_out
,

946 
√w
 
	`åivül_fûãr_t
((
q34_joö_s_d_tu∂e
)),

947 
joö_lo_s_∑ckë
,

948 
d_tsˇn_∑ckë
,

949 
√w
 
	`q34_lo_s_d_joö_t
() );

952 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q34_joö_tu∂e
));

953 
∑ckë_t
* 
joö_∑ckë
 =

954 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Date - Customer JOIN",

955 
joö_out
,

956 
√w
 
	`åivül_fûãr_t
((
q34_joö_tu∂e
)),

957 
joö_lo_s_d_∑ckë
,

958 
c_tsˇn_∑ckë
,

959 
√w
 
	`q34_joö_t
() );

963 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

964 
√w
 
	`tu∂e_fifo
( (
q34_aggªg©e_tu∂e
));

965 
∑ckë_t
* 
q34_agg_∑ckë
 =

966 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q3_4",

967 
agg_ouçut_buf„r
,

968 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

969 
joö_∑ckë
,

970 
√w
 
	`q34_agg_aggªg©e_t
(),

971 
√w
 
	`q34_agg_öput_tu∂e_key_exåa˘‹_t
(),

972 
√w
 
	`q34_agg_öput_tu∂e_key_com∑ª_t
());

974 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q34_aggªg©e_tu∂e
));

975 
∑ckë_t
* 
q34_s‹t_föÆ_∑ckë
 =

976 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

977 
s‹t_föÆ_out
,

978 
√w
 
	`åivül_fûãr_t
((
q34_aggªg©e_tu∂e
)),

979 
√w
 
	`q34_‹dî_key_exåa˘‹_t
(),

980 
√w
 
	`q34_‹dî_key_com∑ª_t
(),

981 
q34_agg_∑ckë
);

983 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

984 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

985 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

986 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

987 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

988 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

989 
joö_lo_s_d_∑ckë
->
	`assign_quîy_°©e
(
qs
);

990 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

991 
q34_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

992 
q34_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

995 
ssb_q34_¥o˚ss_tu∂e_t
 
±
;

996 
	`¥o˚ss_quîy
(
q34_s‹t_föÆ_∑ckë
, 
±
);

998 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1000  (
RCOK
);

1001 
	}
}

1004 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q4_1.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

65 
	sq41_lo_tu∂e


67 
	mLO_CUSTKEY
;

68 
	mLO_SUPPKEY
;

69 
	mLO_ORDERDATE
;

70 
	mLO_PARTKEY
;

71 
	mLO_REVENUE
;

72 
	mLO_SUPPLYCOST
;

75 
	sq41_c_tu∂e


77 
	mC_CUSTKEY
;

78 
	mC_NATION
[16];

81 
	sq41_s_tu∂e


83 
	mS_SUPPKEY
;

86 
	sq41_p_tu∂e


88 
	mP_PARTKEY
;

91 
	sq41_d_tu∂e


93 
	mD_DATEKEY
;

94 
	mD_YEAR
;

97 
	sq41_joö_s_tu∂e


99 
	mLO_CUSTKEY
;

100 
	mLO_ORDERDATE
;

101 
	mLO_PARTKEY
;

102 
	mLO_REVENUE
;

103 
	mLO_SUPPLYCOST
;

106 
	sq41_joö_s_c_tu∂e


108 
	mC_NATION
[16];

109 
	mLO_ORDERDATE
;

110 
	mLO_PARTKEY
;

111 
	mLO_REVENUE
;

112 
	mLO_SUPPLYCOST
;

116 
	sq41_joö_s_c_p_tu∂e


118 
	mC_NATION
[16];

119 
	mLO_ORDERDATE
;

120 
	mLO_REVENUE
;

121 
	mLO_SUPPLYCOST
;

124 
	sq41_joö_tu∂e


126 
	mC_NATION
[16];

127 
	mD_YEAR
;

128 
	mLO_REVENUE
;

129 
	mLO_SUPPLYCOST
;

132 
	sq41_aggªg©e_tu∂e


134 
	mC_NATION
[16];

135 
	mD_YEAR
;

136 
	mPROFIT
;

144 
q41_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

147 ˛as†
	cq41_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


149 
¥iv©e
:

150 
Sh‹eSSBEnv
* 
_ssbdb
;

151 
èbÀ_row_t
* 
	m_¥löe
;

152 
ªp_row_t
 
	m_º
;

154 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

156 
	mpublic
:

158 
	$q41_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

159 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

163 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

164 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

165 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

166 
_¥löe
->
_ªp
 = &
_º
;

170 ~
	$q41_löe‹dî_tsˇn_fûãr_t
()

173 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

174 
	}
}

178 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

181 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

182 
	`as£π
(
Ál£
);

185  (
åue
);

186 
	}
}

190 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

192 
q41_lo_tu∂e
 *
de°
;

193 
de°
 = 
Æig√d_ˇ°
<
q41_lo_tu∂e
>(
d
.
d©a
);

195 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

196 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

197 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

198 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

199 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

200 
_¥löe
->
	`gë_vÆue
(13, 
_löe‹dî
.
LO_SUPPLYCOST
);

202 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d|%d|%d --d\n",

203 
_löe‹dî
.
LO_CUSTKEY
,

204 
_löe‹dî
.
LO_PARTKEY
,

205 
_löe‹dî
.
LO_SUPPKEY
,

206 
_löe‹dî
.
LO_ORDERDATE
,

207 
_löe‹dî
.
LO_REVENUE
,

208 
_löe‹dî
.
LO_SUPPLYCOST
);

210 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

211 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

212 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

213 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

214 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

215 
de°
->
LO_SUPPLYCOST
 = 
_löe‹dî
.LO_SUPPLYCOST;

217 
	}
}

219 
q41_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

220  
√w
 
	`q41_löe‹dî_tsˇn_fûãr_t
(*
this
);

221 
	}
}

223 
c_°r
 
	$to_°rög
() const {

224  
	`c_°r
("q41_lineorder_tscan_filter_t()");

225 
	}
}

229 ˛as†
	cq41_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


231 
¥iv©e
:

232 
Sh‹eSSBEnv
* 
_ssbdb
;

233 
èbÀ_row_t
* 
	m_¥suµ
;

234 
ªp_row_t
 
	m_º
;

236 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

239 
	mREGION
[13];

240 
	mpublic
:

242 
	$q41_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_1_öput_t
 &
ö
)

243 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

247 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

248 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

249 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

250 
_¥suµ
->
_ªp
 = &
_º
;

253 
	`°r˝y
(
REGION
,"AMERICA");

256 ~
	$q41_suµlõr_tsˇn_fûãr_t
()

259 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

260 
	}
}

264 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

267 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

268 
	`as£π
(
Ál£
);

271 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

274 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
,
REGION
)==0)

276 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

277 
_suµlõr
.
S_REGION
);

278  (
åue
);

282 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

283 
_suµlõr
.
S_REGION
);

284  (
Ál£
);

286 
	}
}

290 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

292 
q41_s_tu∂e
 *
de°
;

293 
de°
 = 
Æig√d_ˇ°
<
q41_s_tu∂e
>(
d
.
d©a
);

295 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

297 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

298 
_suµlõr
.
S_SUPPKEY
);

301 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

302 
	}
}

304 
q41_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

305  
√w
 
	`q41_suµlõr_tsˇn_fûãr_t
(*
this
);

306 
	}
}

308 
c_°r
 
	$to_°rög
() const {

309  
	`c_°r
("q41_supplier_tscan_filter_t()");

310 
	}
}

314 ˛as†
	cq41_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


316 
¥iv©e
:

317 
Sh‹eSSBEnv
* 
_ssbdb
;

318 
èbÀ_row_t
* 
	m_¥cu°
;

319 
ªp_row_t
 
	m_º
;

321 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

324 
	mREGION
[13];

325 
	mpublic
:

327 
	$q41_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_1_öput_t
 &
ö
)

328 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

332 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

333 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

334 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

335 
_¥cu°
->
_ªp
 = &
_º
;

338 
	`°r˝y
(
REGION
,"AMERICA");

341 ~
	$q41_cu°omî_tsˇn_fûãr_t
()

344 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

345 
	}
}

349 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

352 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

353 
	`as£π
(
Ál£
);

356 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_REGION
, 
	`STRSIZE
(12));

358 i‡(
	`°rcmp
(
_cu°omî
.
C_REGION
,
REGION
)==0)

360 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

361 
_cu°omî
.
C_REGION
);

362  (
åue
);

366 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

367 
_cu°omî
.
C_REGION
);

368  (
Ál£
);

370 
	}
}

374 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

376 
q41_c_tu∂e
 *
de°
;

377 
de°
 = 
Æig√d_ˇ°
<
q41_c_tu∂e
>(
d
.
d©a
);

379 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

380 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_NATION
, 
	`STRSIZE
(15));

382 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

383 
_cu°omî
.
C_CUSTKEY
,

384 
_cu°omî
.
C_NATION
);

387 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

388 
	`°r˝y
(
de°
->
C_NATION
,
_cu°omî
.C_NATION);

389 
	}
}

391 
q41_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

392  
√w
 
	`q41_cu°omî_tsˇn_fûãr_t
(*
this
);

393 
	}
}

395 
c_°r
 
	$to_°rög
() const {

396  
	`c_°r
("q41_customer_tscan_filter_t()");

397 
	}
}

401 ˛as†
	cq41_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


403 
¥iv©e
:

404 
Sh‹eSSBEnv
* 
_ssbdb
;

405 
èbÀ_row_t
* 
	m_¥∑π
;

406 
ªp_row_t
 
	m_º
;

408 
ssb_∑π_tu∂e
 
	m_∑π
;

411 
	mMFGR_1
[7];

412 
	mMFGR_2
[7];

414 
	mpublic
:

416 
	$q41_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_1_öput_t
 &
ö
)

417 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

421 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

422 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

423 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

424 
_¥∑π
->
_ªp
 = &
_º
;

426 
	`°r˝y
(
MFGR_1
,"MFGR#1");

427 
	`°r˝y
(
MFGR_2
,"MFGR#2");

430 ~
	$q41_∑π_tsˇn_fûãr_t
()

433 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

434 
	}
}

438 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

441 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

442 
	`as£π
(
Ál£
);

445 
_¥∑π
->
	`gë_vÆue
(2, 
_∑π
.
P_MFGR
, 
	`STRSIZE
(6));

448 i‡(
	`°rcmp
(
_∑π
.
P_MFGR
, 
MFGR_1
)==0 || såcmp(_∑π.P_MFGR, 
MFGR_2
)==0)

450 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ MFGR |%s --d\n",

451 
_∑π
.
P_MFGR
);

452  (
åue
);

456 
	`TRACE
–
TRACE_RECORD_FLOW
, ". MFGR |%s --d\n",

457 
_∑π
.
P_MFGR
);

458  (
Ál£
);

461 
	}
}

465 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

467 
q41_p_tu∂e
 *
de°
;

468 
de°
 = 
Æig√d_ˇ°
<
q41_p_tu∂e
>(
d
.
d©a
);

470 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

472 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

473 
_∑π
.
P_PARTKEY
);

476 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

477 
	}
}

479 
q41_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

480  
√w
 
	`q41_∑π_tsˇn_fûãr_t
(*
this
);

481 
	}
}

483 
c_°r
 
	$to_°rög
() const {

484  
	`c_°r
("q4_1_part_tscan_filter_t()");

485 
	}
}

489 ˛as†
	cq41_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


491 
¥iv©e
:

492 
Sh‹eSSBEnv
* 
_ssbdb
;

493 
èbÀ_row_t
* 
	m_¥d©e
;

494 
ªp_row_t
 
	m_º
;

496 
ssb_d©e_tu∂e
 
	m_d©e
;

499 
	mpublic
:

501 
	$q41_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_1_öput_t
 &
ö
)

502 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

506 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

507 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

508 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

509 
_¥d©e
->
_ªp
 = &
_º
;

513 ~
	$q41_d©e_tsˇn_fûãr_t
()

516 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

517 
	}
}

521 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

524 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

525 
	`as£π
(
Ál£
);

528  (
åue
);

530 
	}
}

534 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

536 
q41_d_tu∂e
 *
de°
;

537 
de°
 = 
Æig√d_ˇ°
<
q41_d_tu∂e
>(
d
.
d©a
);

539 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

540 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

542 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

543 
_d©e
.
D_DATEKEY
,

544 
_d©e
.
D_YEAR
);

547 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

548 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

549 
	}
}

551 
q41_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

552  
√w
 
	`q41_d©e_tsˇn_fûãr_t
(*
this
);

553 
	}
}

555 
c_°r
 
	$to_°rög
() const {

556  
	`c_°r
("q4_1_date_tscan_filter_t()");

557 
	}
}

563 
	gq41_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

566 
q41_lo_s_joö_t
 ()

567 : 
tu∂e_joö_t
((
q41_lo_tu∂e
),

568 
off£tof
(
q41_lo_tu∂e
, 
LO_SUPPKEY
),

569 (
q41_s_tu∂e
),

570 
off£tof
(
q41_s_tu∂e
, 
S_SUPPKEY
),

572 (
q41_joö_s_tu∂e
))

577 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

578 c⁄° 
tu∂e_t
 &
À·
,

579 c⁄° 
tu∂e_t
 &
right
)

582 
q41_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q41_lo_tu∂e>(
À·
.
d©a
);

583 
q41_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q41_s_tu∂e>(
right
.
d©a
);

584 
q41_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q41_joö_s_tu∂e>(
de°
.
d©a
);

586 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

587 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

588 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

589 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

590 
	gªt
->
	gLO_SUPPLYCOST
 = 
lo
->
LO_SUPPLYCOST
;

593 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d %d %d %d\n",
ªt
->
LO_CUSTKEY
,Ñë->
LO_PARTKEY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

597 
vútuÆ
 
q41_lo_s_joö_t
* 
˛⁄e
() const {

598  
√w
 
q41_lo_s_joö_t
(*
this
);

601 
vútuÆ
 
c_°r
 
to_°rög
() const {

608 
	gq41_lo_s_c_joö_t
 : 
public
 
tu∂e_joö_t
 {

611 
q41_lo_s_c_joö_t
 ()

612 : 
tu∂e_joö_t
((
q41_joö_s_tu∂e
),

613 
off£tof
(
q41_joö_s_tu∂e
, 
LO_CUSTKEY
),

614 (
q41_c_tu∂e
),

615 
off£tof
(
q41_c_tu∂e
, 
C_CUSTKEY
),

617 (
q41_joö_s_c_tu∂e
))

622 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

623 c⁄° 
tu∂e_t
 &
À·
,

624 c⁄° 
tu∂e_t
 &
right
)

627 
q41_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q41_joö_s_tu∂e>(
À·
.
d©a
);

628 
q41_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q41_c_tu∂e>(
right
.
d©a
);

629 
q41_joö_s_c_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q41_joö_s_c_tu∂e>(
de°
.
d©a
);

631 
	gªt
->
	gLO_PARTKEY
 = 
jo
->
LO_PARTKEY
 ;

632 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
 ;

633 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

634 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
 ;

636 
°r˝y
(
ªt
->
C_NATION
,
c
->C_NATION);

638 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d %d\n",
ªt
->
C_NATION
,Ñë->
LO_PARTKEY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

642 
vútuÆ
 
q41_lo_s_c_joö_t
* 
˛⁄e
() const {

643  
√w
 
q41_lo_s_c_joö_t
(*
this
);

646 
vútuÆ
 
c_°r
 
to_°rög
() const {

653 
	gq41_lo_s_c_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

656 
q41_lo_s_c_p_joö_t
 ()

657 : 
tu∂e_joö_t
((
q41_joö_s_c_tu∂e
),

658 
off£tof
(
q41_joö_s_c_tu∂e
, 
LO_PARTKEY
),

659 (
q41_p_tu∂e
),

660 
off£tof
(
q41_p_tu∂e
, 
P_PARTKEY
),

662 (
q41_joö_s_c_p_tu∂e
))

667 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

668 c⁄° 
tu∂e_t
 &
À·
,

669 c⁄° 
tu∂e_t
 &
right
)

672 
q41_joö_s_c_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q41_joö_s_c_tu∂e>(
À·
.
d©a
);

673 
q41_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q41_p_tu∂e>(
right
.
d©a
);

674 
q41_joö_s_c_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q41_joö_s_c_p_tu∂e>(
de°
.
d©a
);

676 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
 ;

677 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

678 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
 ;

681 
°r˝y
(
ªt
->
C_NATION
,
jo
->C_NATION);

683 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d\n",
ªt
->
C_NATION
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

687 
vútuÆ
 
q41_lo_s_c_p_joö_t
* 
˛⁄e
() const {

688  
√w
 
q41_lo_s_c_p_joö_t
(*
this
);

691 
vútuÆ
 
c_°r
 
to_°rög
() const {

698 
	gq41_joö_t
 : 
public
 
tu∂e_joö_t
 {

701 
q41_joö_t
 ()

702 : 
tu∂e_joö_t
((
q41_joö_s_c_p_tu∂e
),

703 
off£tof
(
q41_joö_s_c_p_tu∂e
, 
LO_ORDERDATE
),

704 (
q41_d_tu∂e
),

705 
off£tof
(
q41_d_tu∂e
, 
D_DATEKEY
),

707 (
q41_joö_tu∂e
))

712 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

713 c⁄° 
tu∂e_t
 &
À·
,

714 c⁄° 
tu∂e_t
 &
right
)

717 
q41_joö_s_c_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q41_joö_s_c_p_tu∂e>(
À·
.
d©a
);

718 
q41_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q41_d_tu∂e>(
right
.
d©a
);

719 
q41_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q41_joö_tu∂e>(
de°
.
d©a
);

721 
°r˝y
(
ªt
->
C_NATION
,
jo
->C_NATION);

722 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
;

723 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

724 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

727 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d\n",
ªt
->
C_NATION
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

731 
vútuÆ
 
q41_joö_t
* 
˛⁄e
() const {

732  
√w
 
q41_joö_t
(*
this
);

735 
vútuÆ
 
c_°r
 
to_°rög
() const {

743 
	sq41_agg_öput_tu∂e_key
 {

745 
	mC_NATION
[
STRSIZE
(15)];

746 
	mD_YEAR
;

749 
exåa˘_höt
() {

750  (
	mthis
->
	mD_YEAR
 - 1990<< 24Ë+ (this->
	mC_NATION
[0] << 16) + (this->C_NATION[1] << 8) + (this->C_NATION[2]);

754 
	gq41_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

756 
q41_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q41_agg_öput_tu∂e_key
), 
off£tof
(
q41_joö_tu∂e
, 
C_NATION
)) {

759 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

760 
q41_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q41_agg_öput_tu∂e_key>(
key
);

780  
	gÆig√d_key
->
exåa˘_höt
();

785 
vútuÆ
 
q41_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

786  
√w
 
q41_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

790 
	gq41_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

792 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

793 
q41_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q41_agg_öput_tu∂e_key>(
key1
);

794 
q41_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q41_agg_öput_tu∂e_key>(
key2
);

796 
	g˙©i⁄com∑ris⁄
 = 
°rcmp
(
a
->
C_NATION
, 
b
->C_NATION);

797 i‡(
	g˙©i⁄com∑ris⁄
 !0Ë 
˙©i⁄com∑ris⁄
;

798  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

801 
vútuÆ
 
q41_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

802  
√w
 
q41_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

807 
q41_agg_öput_tu∂e_key
 
	tq41_agg_tu∂e_key
;

809 ˛as†
	cq41_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

810 
¥iv©e
:

812 
q41_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

814 
q41_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q41_agg_tu∂e_key
), 
off£tof
(
q41_aggªg©e_tu∂e
, 
C_NATION
)) {

817 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

818 
q41_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q41_agg_tu∂e_key > (
key
);

819  
	mÆig√d_key
->
exåa˘_höt
();

822 
vútuÆ
 
q41_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

823  
√w
 
q41_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

827 
q41_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

829 
	gpublic
:

831 
	$q41_agg_aggªg©e_t
()

832 : 
	`tu∂e_aggªg©e_t
((
q41_aggªg©e_tu∂e
)) {

833 
	}
}

835 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

836  &
_exåa˘‹
;

837 
	}
}

839 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

840 
q41_joö_tu∂e
 *
§c
;

841 
§c
 = 
Æig√d_ˇ°
<
q41_joö_tu∂e
> (
s
.
d©a
);

842 
q41_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q41_aggªg©e_tu∂e>(
agg_d©a
);

844 
tu∂e
->
PROFIT
 +(
§c
->
LO_REVENUE
 - src->
LO_SUPPLYCOST
);

845 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
PROFIT
);

846 
	}
}

848 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

849 
q41_aggªg©e_tu∂e
 *
de°
;

850 
de°
 = 
Æig√d_ˇ°
<
q41_aggªg©e_tu∂e
 > (
d
.
d©a
);

851 
q41_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q41_aggªg©e_tu∂ê> (
agg_d©a
);

853 *
de°
 = *
tu∂e
;

854 
	}
}

856 
q41_agg_aggªg©e_t
* 
	$˛⁄e
() const {

857  
√w
 
	`q41_agg_aggªg©e_t
(*
this
);

858 
	}
}

860 
c_°r
 
	$to_°rög
() const {

862 
	}
}

869 
	sq41_s‹t_tu∂e_key
 {

870 
	mC_NATION
[
STRSIZE
(15)];

871 
	mD_YEAR
;

875 
	gq41_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

877 
q41_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q41_s‹t_tu∂e_key
), 
off£tof
(
q41_aggªg©e_tu∂e
, 
C_NATION
)) {

880 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

881 
q41_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q41_s‹t_tu∂e_key> (
key
);

888 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë+ (Æig√d_key->
C_NATION
[0] << 16)+(aligned_key->C_NATION[1] << 8)+(aligned_key->C_NATION[2]);

889  
	gªsu…
;

894 
vútuÆ
 
q41_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

895  
√w
 
q41_‹dî_key_exåa˘‹_t
(*
this
);

899 
	gq41_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

901 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

902 
q41_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q41_s‹t_tu∂e_key>(
key1
);

903 
q41_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q41_s‹t_tu∂e_key>(
key2
);

905 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

906 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

907 
	g˙©i⁄com∑ris⁄
 = 
°rcmp
(
a
->
C_NATION
, 
b
->C_NATION);

908  
	g˙©i⁄com∑ris⁄
;

911 
vútuÆ
 
q41_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

912  
√w
 
q41_‹dî_key_com∑ª_t
(*
this
);

920 ˛as†
	cssb_q41_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


922 
public
:

924 
	$begö
() {

925 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q4_1 ANSWER ...\n");

926 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

929 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

930 
¥oje˘ed_tu∂e
 *
tu∂e
;

931 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

933 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
C_NATION
,Åu∂e->
PROFIT
);

937 
	}
}

948 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q4_1
(c⁄° 
x˘_id
,

949 
q4_1_öput_t
& 
ö
)

951 
	`TRACE
–
TRACE_ALWAYS
, "********** q4_1 *********\n");

954 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

955 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

960 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q41_lo_tu∂e
));

961 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

962 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

963 
lo_out_buf„r
,

964 
√w
 
	`q41_löe‹dî_tsˇn_fûãr_t
(
this
),

965 
this
->
	`db
(),

966 
_∂öe‹dî_desc
.
	`gë
(),

967 
px˘


971 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q41_s_tu∂e
));

972 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

973 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

974 
s_out_buf„r
,

975 
√w
 
	`q41_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

976 
this
->
	`db
(),

977 
_psuµlõr_desc
.
	`gë
(),

978 
px˘


982 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q41_c_tu∂e
));

983 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

984 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

985 
c_out_buf„r
,

986 
√w
 
	`q41_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

987 
this
->
	`db
(),

988 
_pcu°omî_desc
.
	`gë
(),

989 
px˘


993 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q41_p_tu∂e
));

994 
tsˇn_∑ckë_t
* 
p_tsˇn_∑ckë
 =

995 
√w
 
	`tsˇn_∑ckë_t
("TSCANÖart",

996 
p_out_buf„r
,

997 
√w
 
	`q41_∑π_tsˇn_fûãr_t
(
this
,
ö
),

998 
this
->
	`db
(),

999 
_µ¨t_desc
.
	`gë
(),

1000 
px˘


1004 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q41_d_tu∂e
));

1005 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

1006 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

1007 
d_out_buf„r
,

1008 
√w
 
	`q41_d©e_tsˇn_fûãr_t
(
this
,
ö
),

1009 
this
->
	`db
(),

1010 
_pd©e_desc
.
	`gë
(),

1011 
px˘


1017 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q41_joö_s_tu∂e
));

1018 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

1019 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

1020 
joö_lo_s_out
,

1021 
√w
 
	`åivül_fûãr_t
((
q41_joö_s_tu∂e
)),

1022 
lo_tsˇn_∑ckë
,

1023 
s_tsˇn_∑ckë
,

1024 
√w
 
	`q41_lo_s_joö_t
() );

1027 
tu∂e_fifo
* 
joö_lo_s_c_out
 = 
√w
 
	`tu∂e_fifo
((
q41_joö_s_c_tu∂e
));

1028 
∑ckë_t
* 
joö_lo_s_c_∑ckë
 =

1029 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer JOIN",

1030 
joö_lo_s_c_out
,

1031 
√w
 
	`åivül_fûãr_t
((
q41_joö_s_c_tu∂e
)),

1032 
joö_lo_s_∑ckë
,

1033 
c_tsˇn_∑ckë
,

1034 
√w
 
	`q41_lo_s_c_joö_t
() );

1037 
tu∂e_fifo
* 
joö_lo_s_c_p_out
 = 
√w
 
	`tu∂e_fifo
((
q41_joö_s_c_p_tu∂e
));

1038 
∑ckë_t
* 
joö_lo_s_c_p_∑ckë
 =

1039 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer - Part JOIN",

1040 
joö_lo_s_c_p_out
,

1041 
√w
 
	`åivül_fûãr_t
((
q41_joö_s_c_p_tu∂e
)),

1042 
joö_lo_s_c_∑ckë
,

1043 
p_tsˇn_∑ckë
,

1044 
√w
 
	`q41_lo_s_c_p_joö_t
() );

1047 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q41_joö_tu∂e
));

1048 
∑ckë_t
* 
joö_∑ckë
 =

1049 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Customer - Part - Date JOIN",

1050 
joö_out
,

1051 
√w
 
	`åivül_fûãr_t
((
q41_joö_tu∂e
)),

1052 
joö_lo_s_c_p_∑ckë
,

1053 
d_tsˇn_∑ckë
,

1054 
√w
 
	`q41_joö_t
() );

1058 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

1059 
√w
 
	`tu∂e_fifo
( (
q41_aggªg©e_tu∂e
));

1060 
∑ckë_t
* 
q41_agg_∑ckë
 =

1061 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q4_1",

1062 
agg_ouçut_buf„r
,

1063 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

1064 
joö_∑ckë
,

1065 
√w
 
	`q41_agg_aggªg©e_t
(),

1066 
√w
 
	`q41_agg_öput_tu∂e_key_exåa˘‹_t
(),

1067 
√w
 
	`q41_agg_öput_tu∂e_key_com∑ª_t
());

1070 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q41_aggªg©e_tu∂e
));

1071 
∑ckë_t
* 
q41_s‹t_föÆ_∑ckë
 =

1072 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

1073 
s‹t_föÆ_out
,

1074 
√w
 
	`åivül_fûãr_t
((
q41_aggªg©e_tu∂e
)),

1075 
√w
 
	`q41_‹dî_key_exåa˘‹_t
(),

1076 
√w
 
	`q41_‹dî_key_com∑ª_t
(),

1077 
q41_agg_∑ckë
);

1080 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

1081 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1082 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1083 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1084 
p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1085 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1086 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1087 
joö_lo_s_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1088 
joö_lo_s_c_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1089 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1090 
q41_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1091 
q41_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1094 
ssb_q41_¥o˚ss_tu∂e_t
 
±
;

1095 
	`¥o˚ss_quîy
(
q41_s‹t_föÆ_∑ckë
, 
±
);

1096 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1098  (
RCOK
);

1099 
	}
}

1102 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q4_2.cpp

33 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

34 
	~"qpùe.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
ssb
);

67 
	sq42_lo_tu∂e


69 
	mLO_CUSTKEY
;

70 
	mLO_SUPPKEY
;

71 
	mLO_ORDERDATE
;

72 
	mLO_PARTKEY
;

73 
	mLO_REVENUE
;

74 
	mLO_SUPPLYCOST
;

77 
	sq42_c_tu∂e


79 
	mC_CUSTKEY
;

82 
	sq42_s_tu∂e


84 
	mS_SUPPKEY
;

85 
	mS_NATION
[16];

88 
	sq42_p_tu∂e


90 
	mP_PARTKEY
;

91 
	mP_CATEGORY
[8];

94 
	sq42_d_tu∂e


96 
	mD_DATEKEY
;

97 
	mD_YEAR
;

100 
	sq42_joö_s_tu∂e


102 
	mS_NATION
[16];

103 
	mLO_CUSTKEY
;

104 
	mLO_ORDERDATE
;

105 
	mLO_PARTKEY
;

106 
	mLO_REVENUE
;

107 
	mLO_SUPPLYCOST
;

110 
	sq42_joö_s_d_tu∂e


112 
	mD_YEAR
;

113 
	mS_NATION
[16];

114 
	mLO_CUSTKEY
;

115 
	mLO_PARTKEY
;

116 
	mLO_REVENUE
;

117 
	mLO_SUPPLYCOST
;

121 
	sq42_joö_s_d_p_tu∂e


123 
	mD_YEAR
;

124 
	mS_NATION
[16];

125 
	mP_CATEGORY
[8];

126 
	mLO_CUSTKEY
;

127 
	mLO_REVENUE
;

128 
	mLO_SUPPLYCOST
;

131 
	sq42_joö_tu∂e


133 
	mS_NATION
[16];

134 
	mP_CATEGORY
[8];

135 
	mD_YEAR
;

136 
	mLO_REVENUE
;

137 
	mLO_SUPPLYCOST
;

140 
	sq42_aggªg©e_tu∂e


142 
	mS_NATION
[16];

143 
	mP_CATEGORY
[8];

144 
	mD_YEAR
;

145 
	mPROFIT
;

154 
q42_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

157 ˛as†
	cq42_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


159 
¥iv©e
:

160 
Sh‹eSSBEnv
* 
_ssbdb
;

161 
èbÀ_row_t
* 
	m_¥löe
;

162 
ªp_row_t
 
	m_º
;

164 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

166 
	mpublic
:

168 
	$q42_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

169 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

173 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

174 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

175 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

176 
_¥löe
->
_ªp
 = &
_º
;

180 ~
	$q42_löe‹dî_tsˇn_fûãr_t
()

183 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

184 
	}
}

188 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

191 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

192 
	`as£π
(
Ál£
);

195  (
åue
);

196 
	}
}

200 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

202 
q42_lo_tu∂e
 *
de°
;

203 
de°
 = 
Æig√d_ˇ°
<
q42_lo_tu∂e
>(
d
.
d©a
);

205 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

206 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

207 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

208 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

209 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

210 
_¥löe
->
	`gë_vÆue
(13, 
_löe‹dî
.
LO_SUPPLYCOST
);

212 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d|%d|%d --d\n",

213 
_löe‹dî
.
LO_CUSTKEY
,

214 
_löe‹dî
.
LO_PARTKEY
,

215 
_löe‹dî
.
LO_SUPPKEY
,

216 
_löe‹dî
.
LO_ORDERDATE
,

217 
_löe‹dî
.
LO_REVENUE
,

218 
_löe‹dî
.
LO_SUPPLYCOST
);

220 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

221 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

222 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

223 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

224 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

225 
de°
->
LO_SUPPLYCOST
 = 
_löe‹dî
.LO_SUPPLYCOST;

227 
	}
}

229 
q42_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

230  
√w
 
	`q42_löe‹dî_tsˇn_fûãr_t
(*
this
);

231 
	}
}

233 
c_°r
 
	$to_°rög
() const {

234  
	`c_°r
("q42_lineorder_tscan_filter_t()");

235 
	}
}

239 ˛as†
	cq42_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


241 
¥iv©e
:

242 
Sh‹eSSBEnv
* 
_ssbdb
;

243 
èbÀ_row_t
* 
	m_¥suµ
;

244 
ªp_row_t
 
	m_º
;

246 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

249 
	mREGION
[13];

250 
	mpublic
:

252 
	$q42_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_2_öput_t
 &
ö
)

253 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

257 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

258 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

259 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

260 
_¥suµ
->
_ªp
 = &
_º
;

263 
	`°r˝y
(
REGION
,"AMERICA");

266 ~
	$q42_suµlõr_tsˇn_fûãr_t
()

269 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

270 
	}
}

274 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

277 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

278 
	`as£π
(
Ál£
);

281 
_¥suµ
->
	`gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
	`STRSIZE
(12));

284 i‡(
	`°rcmp
(
_suµlõr
.
S_REGION
,
REGION
)==0)

286 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

287 
_suµlõr
.
S_REGION
);

288  (
åue
);

292 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

293 
_suµlõr
.
S_REGION
);

294  (
Ál£
);

296 
	}
}

300 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

302 
q42_s_tu∂e
 *
de°
;

303 
de°
 = 
Æig√d_ˇ°
<
q42_s_tu∂e
>(
d
.
d©a
);

305 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

306 
_¥suµ
->
	`gë_vÆue
(4, 
_suµlõr
.
S_NATION
, 
	`STRSIZE
(15));

308 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d {%s} --d\n",

309 
_suµlõr
.
S_SUPPKEY
,

310 
_suµlõr
.
S_NATION
);

313 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

314 
	`°r˝y
(
de°
->
S_NATION
, 
_suµlõr
.S_NATION);

315 
	}
}

317 
q42_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

318  
√w
 
	`q42_suµlõr_tsˇn_fûãr_t
(*
this
);

319 
	}
}

321 
c_°r
 
	$to_°rög
() const {

322  
	`c_°r
("q42_supplier_tscan_filter_t()");

323 
	}
}

327 ˛as†
	cq42_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


329 
¥iv©e
:

330 
Sh‹eSSBEnv
* 
_ssbdb
;

331 
èbÀ_row_t
* 
	m_¥cu°
;

332 
ªp_row_t
 
	m_º
;

334 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

337 
	mREGION
[13];

338 
	mpublic
:

340 
	$q42_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_2_öput_t
 &
ö
)

341 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

345 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

346 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

347 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

348 
_¥cu°
->
_ªp
 = &
_º
;

351 
	`°r˝y
(
REGION
,"AMERICA");

354 ~
	$q42_cu°omî_tsˇn_fûãr_t
()

357 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

358 
	}
}

362 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

365 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

366 
	`as£π
(
Ál£
);

369 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_REGION
, 
	`STRSIZE
(12));

371 i‡(
	`°rcmp
(
_cu°omî
.
C_REGION
,
REGION
)==0)

373 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ REGION |%s --d\n",

374 
_cu°omî
.
C_REGION
);

375  (
åue
);

379 
	`TRACE
–
TRACE_RECORD_FLOW
, ". REGION |%s --d\n",

380 
_cu°omî
.
C_REGION
);

381  (
Ál£
);

383 
	}
}

387 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

389 
q42_c_tu∂e
 *
de°
;

390 
de°
 = 
Æig√d_ˇ°
<
q42_c_tu∂e
>(
d
.
d©a
);

392 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

394 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

395 
_cu°omî
.
C_CUSTKEY
);

398 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

399 
	}
}

401 
q42_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

402  
√w
 
	`q42_cu°omî_tsˇn_fûãr_t
(*
this
);

403 
	}
}

405 
c_°r
 
	$to_°rög
() const {

406  
	`c_°r
("q42_customer_tscan_filter_t()");

407 
	}
}

411 ˛as†
	cq42_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


413 
¥iv©e
:

414 
Sh‹eSSBEnv
* 
_ssbdb
;

415 
èbÀ_row_t
* 
	m_¥∑π
;

416 
ªp_row_t
 
	m_º
;

418 
ssb_∑π_tu∂e
 
	m_∑π
;

421 
	mMFGR_1
[7];

422 
	mMFGR_2
[7];

424 
	mpublic
:

426 
	$q42_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_2_öput_t
 &
ö
)

427 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

431 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

432 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

433 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

434 
_¥∑π
->
_ªp
 = &
_º
;

436 
	`°r˝y
(
MFGR_1
,"MFGR#1");

437 
	`°r˝y
(
MFGR_2
,"MFGR#2");

440 ~
	$q42_∑π_tsˇn_fûãr_t
()

443 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

444 
	}
}

448 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

451 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

452 
	`as£π
(
Ál£
);

455 
_¥∑π
->
	`gë_vÆue
(2, 
_∑π
.
P_MFGR
, 
	`STRSIZE
(6));

458 i‡(
	`°rcmp
(
_∑π
.
P_MFGR
, 
MFGR_1
)==0 || såcmp(_∑π.P_MFGR, 
MFGR_2
)==0)

460 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ MFGR |%s --d\n",

461 
_∑π
.
P_MFGR
);

462  (
åue
);

466 
	`TRACE
–
TRACE_RECORD_FLOW
, ". MFGR |%s --d\n",

467 
_∑π
.
P_MFGR
);

468  (
Ál£
);

471 
	}
}

475 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

477 
q42_p_tu∂e
 *
de°
;

478 
de°
 = 
Æig√d_ˇ°
<
q42_p_tu∂e
>(
d
.
d©a
);

480 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

481 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_CATEGORY
, 
	`STRSIZE
(7));

484 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d |%s --d\n",

485 
_∑π
.
P_PARTKEY
,

486 
_∑π
.
P_CATEGORY
);

489 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

490 
	`°r˝y
(
de°
->
P_CATEGORY
, 
_∑π
.P_CATEGORY);

492 
	}
}

494 
q42_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

495  
√w
 
	`q42_∑π_tsˇn_fûãr_t
(*
this
);

496 
	}
}

498 
c_°r
 
	$to_°rög
() const {

499  
	`c_°r
("q42_part_tscan_filter_t()");

500 
	}
}

504 ˛as†
	cq42_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


506 
¥iv©e
:

507 
Sh‹eSSBEnv
* 
_ssbdb
;

508 
èbÀ_row_t
* 
	m_¥d©e
;

509 
ªp_row_t
 
	m_º
;

511 
ssb_d©e_tu∂e
 
	m_d©e
;

513 
	mYEAR_LOW
;

514 
	mYEAR_HIGH
;

516 
	mpublic
:

518 
	$q42_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_2_öput_t
 &
ö
)

519 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

523 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

524 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

525 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

526 
_¥d©e
->
_ªp
 = &
_º
;

528 
YEAR_LOW
=1997;

529 
YEAR_HIGH
=1998;

532 ~
	$q42_d©e_tsˇn_fûãr_t
()

535 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

536 
	}
}

540 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

543 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

544 
	`as£π
(
Ál£
);

547 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

550 i‡(
_d©e
.
D_YEAR
==
YEAR_LOW
 || _d©e.D_YEAR==
YEAR_HIGH
)

552 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

553 
_d©e
.
D_YEAR
);

554  (
åue
);

558 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

559 
_d©e
.
D_YEAR
);

560  (
Ál£
);

563 
	}
}

567 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

569 
q42_d_tu∂e
 *
de°
;

570 
de°
 = 
Æig√d_ˇ°
<
q42_d_tu∂e
>(
d
.
d©a
);

572 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

573 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

575 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

576 
_d©e
.
D_DATEKEY
,

577 
_d©e
.
D_YEAR
);

580 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

581 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

582 
	}
}

584 
q42_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

585  
√w
 
	`q42_d©e_tsˇn_fûãr_t
(*
this
);

586 
	}
}

588 
c_°r
 
	$to_°rög
() const {

589  
	`c_°r
("q42_date_tscan_filter_t()");

590 
	}
}

596 
	gq42_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

599 
q42_lo_s_joö_t
 ()

600 : 
tu∂e_joö_t
((
q42_lo_tu∂e
),

601 
off£tof
(
q42_lo_tu∂e
, 
LO_SUPPKEY
),

602 (
q42_s_tu∂e
),

603 
off£tof
(
q42_s_tu∂e
, 
S_SUPPKEY
),

605 (
q42_joö_s_tu∂e
))

610 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

611 c⁄° 
tu∂e_t
 &
À·
,

612 c⁄° 
tu∂e_t
 &
right
)

615 
q42_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q42_lo_tu∂e>(
À·
.
d©a
);

616 
q42_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q42_s_tu∂e>(
right
.
d©a
);

617 
q42_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q42_joö_s_tu∂e>(
de°
.
d©a
);

619 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

620 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

621 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

622 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

623 
	gªt
->
	gLO_SUPPLYCOST
 = 
lo
->
LO_SUPPLYCOST
;

625 
°r˝y
(
ªt
->
S_NATION
, 
s
->S_NATION);

627 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d %d %d\n",
ªt
->
S_NATION
,Ñë->
LO_CUSTKEY
,Ñë->
LO_PARTKEY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

631 
vútuÆ
 
q42_lo_s_joö_t
* 
˛⁄e
() const {

632  
√w
 
q42_lo_s_joö_t
(*
this
);

635 
vútuÆ
 
c_°r
 
to_°rög
() const {

642 
	gq42_lo_s_d_joö_t
 : 
public
 
tu∂e_joö_t
 {

645 
q42_lo_s_d_joö_t
 ()

646 : 
tu∂e_joö_t
((
q42_joö_s_tu∂e
),

647 
off£tof
(
q42_joö_s_tu∂e
, 
LO_ORDERDATE
),

648 (
q42_d_tu∂e
),

649 
off£tof
(
q42_d_tu∂e
, 
D_DATEKEY
),

651 (
q42_joö_s_d_tu∂e
))

656 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

657 c⁄° 
tu∂e_t
 &
À·
,

658 c⁄° 
tu∂e_t
 &
right
)

661 
q42_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q42_joö_s_tu∂e>(
À·
.
d©a
);

662 
q42_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q42_d_tu∂e>(
right
.
d©a
);

663 
q42_joö_s_d_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q42_joö_s_d_tu∂e>(
de°
.
d©a
);

665 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
 ;

666 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
 ;

667 
	gªt
->
	gLO_PARTKEY
 = 
jo
->
LO_PARTKEY
 ;

668 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

669 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

671 
°r˝y
(
ªt
->
S_NATION
,
jo
->S_NATION);

673 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d %d %d\n",
ªt
->
S_NATION
,Ñë->
D_YEAR
,Ñë->
LO_CUSTKEY
,Ñë->
LO_PARTKEY
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

677 
vútuÆ
 
q42_lo_s_d_joö_t
* 
˛⁄e
() const {

678  
√w
 
q42_lo_s_d_joö_t
(*
this
);

681 
vútuÆ
 
c_°r
 
to_°rög
() const {

688 
	gq42_lo_s_d_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

691 
q42_lo_s_d_p_joö_t
 ()

692 : 
tu∂e_joö_t
((
q42_joö_s_d_tu∂e
),

693 
off£tof
(
q42_joö_s_d_tu∂e
, 
LO_PARTKEY
),

694 (
q42_p_tu∂e
),

695 
off£tof
(
q42_p_tu∂e
, 
P_PARTKEY
),

697 (
q42_joö_s_d_p_tu∂e
))

702 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

703 c⁄° 
tu∂e_t
 &
À·
,

704 c⁄° 
tu∂e_t
 &
right
)

707 
q42_joö_s_d_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q42_joö_s_d_tu∂e>(
À·
.
d©a
);

708 
q42_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q42_p_tu∂e>(
right
.
d©a
);

709 
q42_joö_s_d_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q42_joö_s_d_p_tu∂e>(
de°
.
d©a
);

711 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
 ;

712 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
;

713 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

714 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
 ;

716 
°r˝y
(
ªt
->
S_NATION
,
jo
->S_NATION);

717 
°r˝y
(
ªt
->
P_CATEGORY
, 
p
->P_CATEGORY);

719 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d %d %d\n",
ªt
->
S_NATION
,Ñë->
P_CATEGORY
,Ñë->
D_YEAR
,Ñë->
LO_CUSTKEY
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

723 
vútuÆ
 
q42_lo_s_d_p_joö_t
* 
˛⁄e
() const {

724  
√w
 
q42_lo_s_d_p_joö_t
(*
this
);

727 
vútuÆ
 
c_°r
 
to_°rög
() const {

734 
	gq42_joö_t
 : 
public
 
tu∂e_joö_t
 {

737 
q42_joö_t
 ()

738 : 
tu∂e_joö_t
((
q42_joö_s_d_p_tu∂e
),

739 
off£tof
(
q42_joö_s_d_p_tu∂e
, 
LO_CUSTKEY
),

740 (
q42_c_tu∂e
),

741 
off£tof
(
q42_c_tu∂e
, 
C_CUSTKEY
),

743 (
q42_joö_tu∂e
))

748 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

749 c⁄° 
tu∂e_t
 &
À·
,

750 c⁄° 
tu∂e_t
 &
right
)

753 
q42_joö_s_d_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q42_joö_s_d_p_tu∂e>(
À·
.
d©a
);

754 
q42_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q42_c_tu∂e>(
right
.
d©a
);

755 
q42_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q42_joö_tu∂e>(
de°
.
d©a
);

757 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
;

758 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

759 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

761 
°r˝y
(
ªt
->
S_NATION
,
jo
->S_NATION);

762 
°r˝y
(
ªt
->
P_CATEGORY
,
jo
->P_CATEGORY);

764 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d %d\n",
ªt
->
S_NATION
,Ñë->
P_CATEGORY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

768 
vútuÆ
 
q42_joö_t
* 
˛⁄e
() const {

769  
√w
 
q42_joö_t
(*
this
);

772 
vútuÆ
 
c_°r
 
to_°rög
() const {

781 
	sq42_agg_öput_tu∂e_key
 {

783 
	mS_NATION
[
STRSIZE
(15)];

784 
	mP_CATEGORY
[
STRSIZE
(7)];

785 
	mD_YEAR
;

787 
exåa˘_höt
() {

789  (
	mthis
->
	mD_YEAR
 - 1990 << 24Ë+ (this->
	mS_NATION
[0] << 16Ë+ (this->
	mP_CATEGORY
[5] << 8) + (this->P_CATEGORY[6]);

793 
	gq42_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

795 
q42_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q42_agg_öput_tu∂e_key
), 
off£tof
(
q42_joö_tu∂e
, 
S_NATION
)) {

798 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

799 
q42_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q42_agg_öput_tu∂e_key>(
key
);

819  
	gÆig√d_key
->
exåa˘_höt
();

824 
vútuÆ
 
q42_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

825  
√w
 
q42_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

829 
	gq42_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

831 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

832 
q42_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q42_agg_öput_tu∂e_key>(
key1
);

833 
q42_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q42_agg_öput_tu∂e_key>(
key2
);

836 
	g¢©i⁄com∑ris⁄
 = 
°rcmp
(
a
->
S_NATION
, 
b
->S_NATION);

837 i‡(
	g¢©i⁄com∑ris⁄
 !0Ë 
¢©i⁄com∑ris⁄
;

838 
	gpˇãg‹ycom∑ris⁄
 = 
°rcmp
(
a
->
P_CATEGORY
, 
b
->P_CATEGORY);

839 i‡(
	gpˇãg‹ycom∑ris⁄
 !0Ë 
pˇãg‹ycom∑ris⁄
;

840  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

843 
vútuÆ
 
q42_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

844  
√w
 
q42_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

849 
q42_agg_öput_tu∂e_key
 
	tq42_agg_tu∂e_key
;

851 ˛as†
	cq42_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

852 
¥iv©e
:

854 
q42_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

856 
q42_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q42_agg_tu∂e_key
), 
off£tof
(
q42_aggªg©e_tu∂e
, 
S_NATION
)) {

859 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

860 
q42_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q42_agg_tu∂e_key > (
key
);

861  
	mÆig√d_key
->
exåa˘_höt
();

864 
vútuÆ
 
q42_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

865  
√w
 
q42_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

869 
q42_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

871 
	gpublic
:

873 
	$q42_agg_aggªg©e_t
()

874 : 
	`tu∂e_aggªg©e_t
((
q42_aggªg©e_tu∂e
)) {

875 
	}
}

877 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

878  &
_exåa˘‹
;

879 
	}
}

881 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

882 
q42_joö_tu∂e
 *
§c
;

883 
§c
 = 
Æig√d_ˇ°
<
q42_joö_tu∂e
> (
s
.
d©a
);

884 
q42_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q42_aggªg©e_tu∂e>(
agg_d©a
);

886 
tu∂e
->
PROFIT
 +(
§c
->
LO_REVENUE
 - src->
LO_SUPPLYCOST
);

887 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
PROFIT
);

888 
	}
}

890 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

891 
q42_aggªg©e_tu∂e
 *
de°
;

892 
de°
 = 
Æig√d_ˇ°
<
q42_aggªg©e_tu∂e
 > (
d
.
d©a
);

893 
q42_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q42_aggªg©e_tu∂ê> (
agg_d©a
);

895 *
de°
 = *
tu∂e
;

896 
	}
}

898 
q42_agg_aggªg©e_t
* 
	$˛⁄e
() const {

899  
√w
 
	`q42_agg_aggªg©e_t
(*
this
);

900 
	}
}

902 
c_°r
 
	$to_°rög
() const {

904 
	}
}

911 
	sq42_s‹t_tu∂e_key
 {

912 
	mS_NATION
[
STRSIZE
(15)];

913 
	mP_CATEGORY
[
STRSIZE
(7)];

914 
	mD_YEAR
;

917 
	gq42_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

919 
q42_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q42_s‹t_tu∂e_key
), 
off£tof
(
q42_aggªg©e_tu∂e
, 
S_NATION
)) {

922 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

923 
q42_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q42_s‹t_tu∂e_key> (
key
);

929 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë+ (Æig√d_key->
S_NATION
[0] << 16)+◊lig√d_key->
P_CATEGORY
[5] << 8)+(aligned_key->P_CATEGORY[6]);

930  
	gªsu…
;

935 
vútuÆ
 
q42_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

936  
√w
 
q42_‹dî_key_exåa˘‹_t
(*
this
);

940 
	gq42_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

942 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

943 
q42_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q42_s‹t_tu∂e_key>(
key1
);

944 
q42_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q42_s‹t_tu∂e_key>(
key2
);

946 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

947 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

948 
	g˙©i⁄com∑ris⁄
 = 
°rcmp
(
a
->
S_NATION
, 
b
->S_NATION);

949  
	g˙©i⁄com∑ris⁄
;

950 
	gpˇãg‹ycom∑ris⁄
 = 
°rcmp
(
a
->
P_CATEGORY
, 
b
->P_CATEGORY);

951  
	gpˇãg‹ycom∑ris⁄
;

954 
vútuÆ
 
q42_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

955  
√w
 
q42_‹dî_key_com∑ª_t
(*
this
);

963 ˛as†
	cssb_q42_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


965 
public
:

967 
	$begö
() {

968 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q4_2 ANSWER ...\n");

969 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

972 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

973 
¥oje˘ed_tu∂e
 *
tu∂e
;

974 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

976 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
S_NATION
,Åu∂e->
P_CATEGORY
,Åu∂e->
PROFIT
);

980 
	}
}

991 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q4_2
(c⁄° 
x˘_id
,

992 
q4_2_öput_t
& 
ö
)

994 
	`TRACE
–
TRACE_ALWAYS
, "********** q4_2 *********\n");

997 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

998 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

1003 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q42_lo_tu∂e
));

1004 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

1005 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

1006 
lo_out_buf„r
,

1007 
√w
 
	`q42_löe‹dî_tsˇn_fûãr_t
(
this
),

1008 
this
->
	`db
(),

1009 
_∂öe‹dî_desc
.
	`gë
(),

1010 
px˘


1014 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q42_s_tu∂e
));

1015 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

1016 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

1017 
s_out_buf„r
,

1018 
√w
 
	`q42_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

1019 
this
->
	`db
(),

1020 
_psuµlõr_desc
.
	`gë
(),

1021 
px˘


1025 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q42_d_tu∂e
));

1026 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

1027 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

1028 
d_out_buf„r
,

1029 
√w
 
	`q42_d©e_tsˇn_fûãr_t
(
this
,
ö
),

1030 
this
->
	`db
(),

1031 
_pd©e_desc
.
	`gë
(),

1032 
px˘


1036 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q42_p_tu∂e
));

1037 
tsˇn_∑ckë_t
* 
p_tsˇn_∑ckë
 =

1038 
√w
 
	`tsˇn_∑ckë_t
("TSCANÖart",

1039 
p_out_buf„r
,

1040 
√w
 
	`q42_∑π_tsˇn_fûãr_t
(
this
,
ö
),

1041 
this
->
	`db
(),

1042 
_µ¨t_desc
.
	`gë
(),

1043 
px˘


1047 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q42_c_tu∂e
));

1048 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

1049 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

1050 
c_out_buf„r
,

1051 
√w
 
	`q42_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

1052 
this
->
	`db
(),

1053 
_pcu°omî_desc
.
	`gë
(),

1054 
px˘


1059 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q42_joö_s_tu∂e
));

1060 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

1061 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

1062 
joö_lo_s_out
,

1063 
√w
 
	`åivül_fûãr_t
((
q42_joö_s_tu∂e
)),

1064 
lo_tsˇn_∑ckë
,

1065 
s_tsˇn_∑ckë
,

1066 
√w
 
	`q42_lo_s_joö_t
() );

1069 
tu∂e_fifo
* 
joö_lo_s_d_out
 = 
√w
 
	`tu∂e_fifo
((
q42_joö_s_d_tu∂e
));

1070 
∑ckë_t
* 
joö_lo_s_d_∑ckë
 =

1071 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Date JOIN",

1072 
joö_lo_s_d_out
,

1073 
√w
 
	`åivül_fûãr_t
((
q42_joö_s_d_tu∂e
)),

1074 
joö_lo_s_∑ckë
,

1075 
d_tsˇn_∑ckë
,

1076 
√w
 
	`q42_lo_s_d_joö_t
() );

1079 
tu∂e_fifo
* 
joö_lo_s_d_p_out
 = 
√w
 
	`tu∂e_fifo
((
q42_joö_s_d_p_tu∂e
));

1080 
∑ckë_t
* 
joö_lo_s_d_p_∑ckë
 =

1081 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Date - Part JOIN",

1082 
joö_lo_s_d_p_out
,

1083 
√w
 
	`åivül_fûãr_t
((
q42_joö_s_d_p_tu∂e
)),

1084 
joö_lo_s_d_∑ckë
,

1085 
p_tsˇn_∑ckë
,

1086 
√w
 
	`q42_lo_s_d_p_joö_t
() );

1089 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q42_joö_tu∂e
));

1090 
∑ckë_t
* 
joö_∑ckë
 =

1091 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Date - Part - Customer JOIN",

1092 
joö_out
,

1093 
√w
 
	`åivül_fûãr_t
((
q42_joö_tu∂e
)),

1094 
joö_lo_s_d_p_∑ckë
,

1095 
c_tsˇn_∑ckë
,

1096 
√w
 
	`q42_joö_t
() );

1099 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

1100 
√w
 
	`tu∂e_fifo
( (
q42_aggªg©e_tu∂e
));

1101 
∑ckë_t
* 
q42_agg_∑ckë
 =

1102 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q4_2",

1103 
agg_ouçut_buf„r
,

1104 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

1105 
joö_∑ckë
,

1106 
√w
 
	`q42_agg_aggªg©e_t
(),

1107 
√w
 
	`q42_agg_öput_tu∂e_key_exåa˘‹_t
(),

1108 
√w
 
	`q42_agg_öput_tu∂e_key_com∑ª_t
());

1111 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q42_aggªg©e_tu∂e
));

1112 
∑ckë_t
* 
q42_s‹t_föÆ_∑ckë
 =

1113 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

1114 
s‹t_föÆ_out
,

1115 
√w
 
	`åivül_fûãr_t
((
q42_aggªg©e_tu∂e
)),

1116 
√w
 
	`q42_‹dî_key_exåa˘‹_t
(),

1117 
√w
 
	`q42_‹dî_key_com∑ª_t
(),

1118 
q42_agg_∑ckë
);

1121 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

1122 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1123 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1124 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1125 
p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1126 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1127 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1128 
joö_lo_s_d_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1129 
joö_lo_s_d_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1130 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1131 
q42_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1132 
q42_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1135 
ssb_q42_¥o˚ss_tu∂e_t
 
±
;

1136 
	`¥o˚ss_quîy
(
q42_s‹t_föÆ_∑ckë
, 
±
);

1137 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1139  (
RCOK
);

1140 
	}
}

1143 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_q4_3.cpp

34 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
ssb
);

67 
	sq43_lo_tu∂e


69 
	mLO_CUSTKEY
;

70 
	mLO_SUPPKEY
;

71 
	mLO_ORDERDATE
;

72 
	mLO_PARTKEY
;

73 
	mLO_REVENUE
;

74 
	mLO_SUPPLYCOST
;

77 
	sq43_c_tu∂e


79 
	mC_CUSTKEY
;

82 
	sq43_s_tu∂e


84 
	mS_SUPPKEY
;

85 
	mS_CITY
[10];

88 
	sq43_p_tu∂e


90 
	mP_PARTKEY
;

91 
	mP_BRAND
[10];

94 
	sq43_d_tu∂e


96 
	mD_DATEKEY
;

97 
	mD_YEAR
;

100 
	sq43_joö_s_tu∂e


102 
	mS_CITY
[11];

103 
	mLO_CUSTKEY
;

104 
	mLO_ORDERDATE
;

105 
	mLO_PARTKEY
;

106 
	mLO_REVENUE
;

107 
	mLO_SUPPLYCOST
;

110 
	sq43_joö_s_p_tu∂e


112 
	mP_BRAND
[10];

113 
	mS_CITY
[11];

114 
	mLO_CUSTKEY
;

115 
	mLO_ORDERDATE
;

116 
	mLO_REVENUE
;

117 
	mLO_SUPPLYCOST
;

121 
	sq43_joö_s_p_d_tu∂e


123 
	mD_YEAR
;

124 
	mP_BRAND
[10];

125 
	mS_CITY
[11];

126 
	mLO_CUSTKEY
;

127 
	mLO_REVENUE
;

128 
	mLO_SUPPLYCOST
;

131 
	sq43_joö_tu∂e


133 
	mS_CITY
[11];

134 
	mP_BRAND
[10];

135 
	mD_YEAR
;

136 
	mLO_REVENUE
;

137 
	mLO_SUPPLYCOST
;

140 
	sq43_aggªg©e_tu∂e


143 
	mS_CITY
[11];

144 
	mP_BRAND
[10];

145 
	mD_YEAR
;

146 
	mPROFIT
;

153 
q43_aggªg©e_tu∂e
 
	t¥oje˘ed_tu∂e
;

156 ˛as†
	cq43_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


158 
¥iv©e
:

159 
Sh‹eSSBEnv
* 
_ssbdb
;

160 
èbÀ_row_t
* 
	m_¥löe
;

161 
ªp_row_t
 
	m_º
;

163 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

165 
	mpublic
:

167 
	$q43_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

168 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

172 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

173 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

174 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

175 
_¥löe
->
_ªp
 = &
_º
;

179 ~
	$q43_löe‹dî_tsˇn_fûãr_t
()

182 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

183 
	}
}

187 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

190 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

191 
	`as£π
(
Ál£
);

194  (
åue
);

195 
	}
}

199 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

201 
q43_lo_tu∂e
 *
de°
;

202 
de°
 = 
Æig√d_ˇ°
<
q43_lo_tu∂e
>(
d
.
d©a
);

204 
_¥löe
->
	`gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

205 
_¥löe
->
	`gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

206 
_¥löe
->
	`gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

207 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

208 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

209 
_¥löe
->
	`gë_vÆue
(13, 
_löe‹dî
.
LO_SUPPLYCOST
);

211 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d|%d|%d --d\n",

212 
_löe‹dî
.
LO_CUSTKEY
,

213 
_löe‹dî
.
LO_PARTKEY
,

214 
_löe‹dî
.
LO_SUPPKEY
,

215 
_löe‹dî
.
LO_ORDERDATE
,

216 
_löe‹dî
.
LO_REVENUE
,

217 
_löe‹dî
.
LO_SUPPLYCOST
);

219 
de°
->
LO_CUSTKEY
 = 
_löe‹dî
.LO_CUSTKEY;

220 
de°
->
LO_PARTKEY
 = 
_löe‹dî
.LO_PARTKEY;

221 
de°
->
LO_SUPPKEY
 = 
_löe‹dî
.LO_SUPPKEY;

222 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

223 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

224 
de°
->
LO_SUPPLYCOST
 = 
_löe‹dî
.LO_SUPPLYCOST;

226 
	}
}

228 
q43_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

229  
√w
 
	`q43_löe‹dî_tsˇn_fûãr_t
(*
this
);

230 
	}
}

232 
c_°r
 
	$to_°rög
() const {

233  
	`c_°r
("q43_lineorder_tscan_filter_t()");

234 
	}
}

238 ˛as†
	cq43_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


240 
¥iv©e
:

241 
Sh‹eSSBEnv
* 
_ssbdb
;

242 
èbÀ_row_t
* 
	m_¥suµ
;

243 
ªp_row_t
 
	m_º
;

245 
ssb_suµlõr_tu∂e
 
	m_suµlõr
;

248 
	mNATION
[16];

249 
	mpublic
:

251 
	$q43_suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_3_öput_t
 &
ö
)

252 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

256 
_¥suµ
 = 
_ssbdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

257 
_º
.
	`£t_ts
(
_ssbdb
->
	`suµlõr_m™
()->
	`ts
(),

258 
_ssbdb
->
	`suµlõr_desc
()->
	`maxsize
());

259 
_¥suµ
->
_ªp
 = &
_º
;

262 
	`°r˝y
(
NATION
,"UNITED STATES");

265 ~
	$q43_suµlõr_tsˇn_fûãr_t
()

268 
_ssbdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµ
);

269 
	}
}

273 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

276 i‡(!
_ssbdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

277 
	`as£π
(
Ál£
);

280 
_¥suµ
->
	`gë_vÆue
(4, 
_suµlõr
.
S_NATION
, 
	`STRSIZE
(15));

283 i‡(
	`°rcmp
(
_suµlõr
.
S_NATION
,
NATION
)==0)

285 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ NATION |%s --d\n",

286 
_suµlõr
.
S_NATION
);

287  (
åue
);

291 
	`TRACE
–
TRACE_RECORD_FLOW
, ". NATION |%s --d\n",

292 
_suµlõr
.
S_NATION
);

293  (
Ál£
);

295 
	}
}

299 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

301 
q43_s_tu∂e
 *
de°
;

302 
de°
 = 
Æig√d_ˇ°
<
q43_s_tu∂e
>(
d
.
d©a
);

304 
_¥suµ
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

305 
_¥suµ
->
	`gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
	`STRSIZE
(10));

307 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%s --d\n",

308 
_suµlõr
.
S_SUPPKEY
,

309 
_suµlõr
.
S_CITY
);

312 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

313 
	`°r˝y
(
de°
->
S_CITY
,
_suµlõr
.S_CITY);

314 
	}
}

316 
q43_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

317  
√w
 
	`q43_suµlõr_tsˇn_fûãr_t
(*
this
);

318 
	}
}

320 
c_°r
 
	$to_°rög
() const {

321  
	`c_°r
("q43_supplier_tscan_filter_t()");

322 
	}
}

326 ˛as†
	cq43_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


328 
¥iv©e
:

329 
Sh‹eSSBEnv
* 
_ssbdb
;

330 
èbÀ_row_t
* 
	m_¥cu°
;

331 
ªp_row_t
 
	m_º
;

333 
ssb_cu°omî_tu∂e
 
	m_cu°omî
;

337 
	mpublic
:

339 
	$q43_cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_3_öput_t
 &
ö
)

340 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

344 
_¥cu°
 = 
_ssbdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

345 
_º
.
	`£t_ts
(
_ssbdb
->
	`cu°omî_m™
()->
	`ts
(),

346 
_ssbdb
->
	`cu°omî_desc
()->
	`maxsize
());

347 
_¥cu°
->
_ªp
 = &
_º
;

351 ~
	$q43_cu°omî_tsˇn_fûãr_t
()

354 
_ssbdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

355 
	}
}

359 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

362 i‡(!
_ssbdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

363 
	`as£π
(
Ál£
);

366  (
åue
);

368 
	}
}

372 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

374 
q43_c_tu∂e
 *
de°
;

375 
de°
 = 
Æig√d_ˇ°
<
q43_c_tu∂e
>(
d
.
d©a
);

377 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

379 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d --d\n",

380 
_cu°omî
.
C_CUSTKEY
);

383 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

384 
	}
}

386 
q43_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

387  
√w
 
	`q43_cu°omî_tsˇn_fûãr_t
(*
this
);

388 
	}
}

390 
c_°r
 
	$to_°rög
() const {

391  
	`c_°r
("q43_customer_tscan_filter_t()");

392 
	}
}

396 ˛as†
	cq43_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


398 
¥iv©e
:

399 
Sh‹eSSBEnv
* 
_ssbdb
;

400 
èbÀ_row_t
* 
	m_¥∑π
;

401 
ªp_row_t
 
	m_º
;

403 
ssb_∑π_tu∂e
 
	m_∑π
;

406 
	mCATEGORY
[8];

408 
	mpublic
:

410 
	$q43_∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_3_öput_t
 &
ö
)

411 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

415 
_¥∑π
 = 
_ssbdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

416 
_º
.
	`£t_ts
(
_ssbdb
->
	`∑π_m™
()->
	`ts
(),

417 
_ssbdb
->
	`∑π_desc
()->
	`maxsize
());

418 
_¥∑π
->
_ªp
 = &
_º
;

420 
	`°r˝y
(
CATEGORY
,"MFGR#14");

424 ~
	$q43_∑π_tsˇn_fûãr_t
()

427 
_ssbdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

428 
	}
}

432 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

435 i‡(!
_ssbdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

436 
	`as£π
(
Ál£
);

439 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_CATEGORY
, 
	`STRSIZE
(7));

442 i‡(
	`°rcmp
(
_∑π
.
P_CATEGORY
, 
CATEGORY
)==0)

444 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ CATEGORY |%s --d\n",

445 
_∑π
.
P_CATEGORY
);

446  (
åue
);

450 
	`TRACE
–
TRACE_RECORD_FLOW
, ". CATEGORY |%s --d\n",

451 
_∑π
.
P_CATEGORY
);

452  (
Ál£
);

455 
	}
}

459 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

461 
q43_p_tu∂e
 *
de°
;

462 
de°
 = 
Æig√d_ˇ°
<
q43_p_tu∂e
>(
d
.
d©a
);

464 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

465 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
	`STRSIZE
(9));

468 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d |%s --d\n",

469 
_∑π
.
P_PARTKEY
,

470 
_∑π
.
P_BRAND
);

473 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

474 
	`°r˝y
(
de°
->
P_BRAND
, 
_∑π
.P_BRAND);

476 
	}
}

478 
q43_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

479  
√w
 
	`q43_∑π_tsˇn_fûãr_t
(*
this
);

480 
	}
}

482 
c_°r
 
	$to_°rög
() const {

483  
	`c_°r
("q43_part_tscan_filter_t()");

484 
	}
}

488 ˛as†
	cq43_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


490 
¥iv©e
:

491 
Sh‹eSSBEnv
* 
_ssbdb
;

492 
èbÀ_row_t
* 
	m_¥d©e
;

493 
ªp_row_t
 
	m_º
;

495 
ssb_d©e_tu∂e
 
	m_d©e
;

497 
	mYEAR_LOW
;

498 
	mYEAR_HIGH
;

500 
	mpublic
:

502 
	$q43_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q4_3_öput_t
 &
ö
)

503 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

507 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

508 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

509 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

510 
_¥d©e
->
_ªp
 = &
_º
;

512 
YEAR_LOW
=1997;

513 
YEAR_HIGH
=1998;

516 ~
	$q43_d©e_tsˇn_fûãr_t
()

519 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

520 
	}
}

524 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

527 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

528 
	`as£π
(
Ál£
);

531 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

534 i‡(
_d©e
.
D_YEAR
==
YEAR_LOW
 || _d©e.D_YEAR==
YEAR_HIGH
)

536 
	`TRACE
–
TRACE_RECORD_FLOW
, "+ YEAR |%d --d\n",

537 
_d©e
.
D_YEAR
);

538  (
åue
);

542 
	`TRACE
–
TRACE_RECORD_FLOW
, ". YEAR |%d --d\n",

543 
_d©e
.
D_YEAR
);

544  (
Ál£
);

547 
	}
}

551 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

553 
q43_d_tu∂e
 *
de°
;

554 
de°
 = 
Æig√d_ˇ°
<
q43_d_tu∂e
>(
d
.
d©a
);

556 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

557 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

559 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d --d\n",

560 
_d©e
.
D_DATEKEY
,

561 
_d©e
.
D_YEAR
);

564 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

565 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

566 
	}
}

568 
q43_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

569  
√w
 
	`q43_d©e_tsˇn_fûãr_t
(*
this
);

570 
	}
}

572 
c_°r
 
	$to_°rög
() const {

573  
	`c_°r
("q4_3_date_tscan_filter_t()");

574 
	}
}

580 
	gq43_lo_s_joö_t
 : 
public
 
tu∂e_joö_t
 {

583 
q43_lo_s_joö_t
 ()

584 : 
tu∂e_joö_t
((
q43_lo_tu∂e
),

585 
off£tof
(
q43_lo_tu∂e
, 
LO_SUPPKEY
),

586 (
q43_s_tu∂e
),

587 
off£tof
(
q43_s_tu∂e
, 
S_SUPPKEY
),

589 (
q43_joö_s_tu∂e
))

594 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

595 c⁄° 
tu∂e_t
 &
À·
,

596 c⁄° 
tu∂e_t
 &
right
)

599 
q43_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<q43_lo_tu∂e>(
À·
.
d©a
);

600 
q43_s_tu∂e
* 
	gs
 = 
Æig√d_ˇ°
<q43_s_tu∂e>(
right
.
d©a
);

601 
q43_joö_s_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q43_joö_s_tu∂e>(
de°
.
d©a
);

603 
	gªt
->
	gLO_CUSTKEY
 = 
lo
->
LO_CUSTKEY
;

604 
	gªt
->
	gLO_PARTKEY
 = 
lo
->
LO_PARTKEY
;

605 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

606 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

607 
	gªt
->
	gLO_SUPPLYCOST
 = 
lo
->
LO_SUPPLYCOST
;

609 
°r˝y
(
ªt
->
S_CITY
, 
s
->S_CITY);

611 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} %d %d %d %d %d\n",
ªt
->
S_CITY
,Ñë->
LO_CUSTKEY
,Ñë->
LO_PARTKEY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

615 
vútuÆ
 
q43_lo_s_joö_t
* 
˛⁄e
() const {

616  
√w
 
q43_lo_s_joö_t
(*
this
);

619 
vútuÆ
 
c_°r
 
to_°rög
() const {

626 
	gq43_lo_s_p_joö_t
 : 
public
 
tu∂e_joö_t
 {

629 
q43_lo_s_p_joö_t
 ()

630 : 
tu∂e_joö_t
((
q43_joö_s_tu∂e
),

631 
off£tof
(
q43_joö_s_tu∂e
, 
LO_PARTKEY
),

632 (
q43_p_tu∂e
),

633 
off£tof
(
q43_p_tu∂e
, 
P_PARTKEY
),

635 (
q43_joö_s_p_tu∂e
))

640 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

641 c⁄° 
tu∂e_t
 &
À·
,

642 c⁄° 
tu∂e_t
 &
right
)

645 
q43_joö_s_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q43_joö_s_tu∂e>(
À·
.
d©a
);

646 
q43_p_tu∂e
* 
	gp
 = 
Æig√d_ˇ°
<q43_p_tu∂e>(
right
.
d©a
);

647 
q43_joö_s_p_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q43_joö_s_p_tu∂e>(
de°
.
d©a
);

650 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
 ;

651 
	gªt
->
	gLO_ORDERDATE
 = 
jo
->
LO_ORDERDATE
 ;

652 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

653 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

655 
°r˝y
(
ªt
->
P_BRAND
,
p
->P_BRAND);

656 
°r˝y
(
ªt
->
S_CITY
, 
jo
->S_CITY);

658 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d %d %d\n",
ªt
->
P_BRAND
,Ñë->
S_CITY
,Ñë->
LO_CUSTKEY
,Ñë->
LO_ORDERDATE
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

662 
vútuÆ
 
q43_lo_s_p_joö_t
* 
˛⁄e
() const {

663  
√w
 
q43_lo_s_p_joö_t
(*
this
);

666 
vútuÆ
 
c_°r
 
to_°rög
() const {

673 
	gq43_lo_s_p_d_joö_t
 : 
public
 
tu∂e_joö_t
 {

676 
q43_lo_s_p_d_joö_t
 ()

677 : 
tu∂e_joö_t
((
q43_joö_s_p_tu∂e
),

678 
off£tof
(
q43_joö_s_p_tu∂e
, 
LO_ORDERDATE
),

679 (
q43_d_tu∂e
),

680 
off£tof
(
q43_d_tu∂e
, 
D_DATEKEY
),

682 (
q43_joö_s_p_d_tu∂e
))

687 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

688 c⁄° 
tu∂e_t
 &
À·
,

689 c⁄° 
tu∂e_t
 &
right
)

692 
q43_joö_s_p_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q43_joö_s_p_tu∂e>(
À·
.
d©a
);

693 
q43_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<q43_d_tu∂e>(
right
.
d©a
);

694 
q43_joö_s_p_d_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q43_joö_s_p_d_tu∂e>(
de°
.
d©a
);

696 
	gªt
->
	gLO_CUSTKEY
 = 
jo
->
LO_CUSTKEY
 ;

697 
	gªt
->
	gD_YEAR
 = 
d
->
D_YEAR
 ;

698 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
 ;

699 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

701 
°r˝y
(
ªt
->
P_BRAND
,
jo
->P_BRAND);

702 
°r˝y
(
ªt
->
S_CITY
, 
jo
->S_CITY);

704 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d %d %d\n",
ªt
->
P_BRAND
,Ñë->
S_CITY
,Ñë->
LO_CUSTKEY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

708 
vútuÆ
 
q43_lo_s_p_d_joö_t
* 
˛⁄e
() const {

709  
√w
 
q43_lo_s_p_d_joö_t
(*
this
);

712 
vútuÆ
 
c_°r
 
to_°rög
() const {

719 
	gq43_joö_t
 : 
public
 
tu∂e_joö_t
 {

722 
q43_joö_t
 ()

723 : 
tu∂e_joö_t
((
q43_joö_s_p_d_tu∂e
),

724 
off£tof
(
q43_joö_s_p_d_tu∂e
, 
LO_CUSTKEY
),

725 (
q43_c_tu∂e
),

726 
off£tof
(
q43_c_tu∂e
, 
C_CUSTKEY
),

728 (
q43_joö_tu∂e
))

733 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

734 c⁄° 
tu∂e_t
 &
À·
,

735 c⁄° 
tu∂e_t
 &
right
)

738 
q43_joö_s_p_d_tu∂e
* 
	gjo
 = 
Æig√d_ˇ°
<q43_joö_s_p_d_tu∂e>(
À·
.
d©a
);

739 
q43_c_tu∂e
* 
	gc
 = 
Æig√d_ˇ°
<q43_c_tu∂e>(
right
.
d©a
);

740 
q43_joö_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<q43_joö_tu∂e>(
de°
.
d©a
);

742 
	gªt
->
	gD_YEAR
 = 
jo
->
D_YEAR
;

743 
	gªt
->
	gLO_REVENUE
 = 
jo
->
LO_REVENUE
;

744 
	gªt
->
	gLO_SUPPLYCOST
 = 
jo
->
LO_SUPPLYCOST
;

746 
°r˝y
(
ªt
->
P_BRAND
,
jo
->P_BRAND);

747 
°r˝y
(
ªt
->
S_CITY
, 
jo
->S_CITY);

749 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN {%s} {%s} %d %d %d\n",
ªt
->
P_BRAND
,Ñë->
S_CITY
,Ñë->
D_YEAR
,Ñë->
LO_REVENUE
,Ñë->
LO_SUPPLYCOST
);

753 
vútuÆ
 
q43_joö_t
* 
˛⁄e
() const {

754  
√w
 
q43_joö_t
(*
this
);

757 
vútuÆ
 
c_°r
 
to_°rög
() const {

766 
	sq43_agg_öput_tu∂e_key
 {

768 
	mS_CITY
[
STRSIZE
(10)];

769 
	mP_BRAND
[
STRSIZE
(9)];

770 
	mD_YEAR
;

773 
exåa˘_höt
() {

774  (
	mthis
->
	mD_YEAR
 - 1990 << 24Ë+ (this->
	mS_CITY
[9] << 16Ë+ (this->
	mP_BRAND
[7] << 8) + (this->P_BRAND[8]);

779 
	gq43_agg_öput_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

781 
q43_agg_öput_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q43_agg_öput_tu∂e_key
), 
off£tof
(
q43_joö_tu∂e
, 
S_CITY
)) {

784 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

785 
q43_agg_öput_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q43_agg_öput_tu∂e_key>(
key
);

805  
	gÆig√d_key
->
exåa˘_höt
();

810 
vútuÆ
 
q43_agg_öput_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

811  
√w
 
q43_agg_öput_tu∂e_key_exåa˘‹_t
(*
this
);

815 
	gq43_agg_öput_tu∂e_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

817 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

818 
q43_agg_öput_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q43_agg_öput_tu∂e_key>(
key1
);

819 
q43_agg_öput_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q43_agg_öput_tu∂e_key>(
key2
);

822 
	gscôycom∑ris⁄
 = 
°rcmp
(
a
->
S_CITY
, 
b
->S_CITY);

823 i‡(
	gscôycom∑ris⁄
 !0Ë 
scôycom∑ris⁄
;

824 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

825 i‡(
	gpbøndcom∑ris⁄
 !0Ë 
pbøndcom∑ris⁄
;

826  
	ga
->
	gD_YEAR
 - 
	gb
->D_YEAR;

829 
vútuÆ
 
q43_agg_öput_tu∂e_key_com∑ª_t
 * 
˛⁄e
() const {

830  
√w
 
q43_agg_öput_tu∂e_key_com∑ª_t
(*
this
);

835 
q43_agg_öput_tu∂e_key
 
	tq43_agg_tu∂e_key
;

837 ˛as†
	cq43_agg_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

838 
¥iv©e
:

840 
q43_agg_ouçut_tu∂e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

842 
q43_agg_ouçut_tu∂e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q43_agg_tu∂e_key
), 
off£tof
(
q43_aggªg©e_tu∂e
, 
S_CITY
)) {

845 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

846 
q43_agg_tu∂e_key
* 
	mÆig√d_key
 = 
Æig√d_ˇ°
<q43_agg_tu∂e_key > (
key
);

847  
	mÆig√d_key
->
exåa˘_höt
();

850 
vútuÆ
 
q43_agg_ouçut_tu∂e_key_exåa˘‹_t
 * 
˛⁄e
() const {

851  
√w
 
q43_agg_ouçut_tu∂e_key_exåa˘‹_t
(*
this
);

855 
q43_agg_ouçut_tu∂e_key_exåa˘‹_t
 
	g_exåa˘‹
;

857 
	gpublic
:

859 
	$q43_agg_aggªg©e_t
()

860 : 
	`tu∂e_aggªg©e_t
((
q43_aggªg©e_tu∂e
)) {

861 
	}
}

863 
key_exåa˘‹_t
* 
	$key_exåa˘‹
() {

864  &
_exåa˘‹
;

865 
	}
}

867 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

868 
q43_joö_tu∂e
 *
§c
;

869 
§c
 = 
Æig√d_ˇ°
<
q43_joö_tu∂e
> (
s
.
d©a
);

870 
q43_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q43_aggªg©e_tu∂e>(
agg_d©a
);

872 
tu∂e
->
PROFIT
 +(
§c
->
LO_REVENUE
 - src->
LO_SUPPLYCOST
);

873 
	`TRACE
(
TRACE_RECORD_FLOW
, "%.2f\n", 
tu∂e
->
PROFIT
);

874 
	}
}

876 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

877 
q43_aggªg©e_tu∂e
 *
de°
;

878 
de°
 = 
Æig√d_ˇ°
<
q43_aggªg©e_tu∂e
 > (
d
.
d©a
);

879 
q43_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q43_aggªg©e_tu∂ê> (
agg_d©a
);

881 *
de°
 = *
tu∂e
;

882 
	}
}

884 
q43_agg_aggªg©e_t
* 
	$˛⁄e
() const {

885  
√w
 
	`q43_agg_aggªg©e_t
(*
this
);

886 
	}
}

888 
c_°r
 
	$to_°rög
() const {

890 
	}
}

897 
	sq43_s‹t_tu∂e_key
 {

898 
	mS_CITY
[
STRSIZE
(10)];

899 
	mP_BRAND
[
STRSIZE
(9)];

900 
	mD_YEAR
;

903 
	gq43_‹dî_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

905 
q43_‹dî_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
( (
q43_s‹t_tu∂e_key
), 
off£tof
(
q43_aggªg©e_tu∂e
, 
S_CITY
)) {

908 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

909 
q43_s‹t_tu∂e_key
* 
	gÆig√d_key
 = 
Æig√d_ˇ°
<q43_s‹t_tu∂e_key> (
key
);

916 
	gªsu…
 = ((
Æig√d_key
->
D_YEAR
 - 1992Ë<< 28Ë+ (Æig√d_key->
S_CITY
[9] << 16)+◊lig√d_key->
P_BRAND
[7] << 8)+(aligned_key->P_BRAND[8] );

918  
	gªsu…
;

923 
vútuÆ
 
q43_‹dî_key_exåa˘‹_t
 * 
˛⁄e
() const {

924  
√w
 
q43_‹dî_key_exåa˘‹_t
(*
this
);

928 
	gq43_‹dî_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

930 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

931 
q43_s‹t_tu∂e_key
* 
	ga
 = 
Æig√d_ˇ°
<q43_s‹t_tu∂e_key>(
key1
);

932 
q43_s‹t_tu∂e_key
* 
	gb
 = 
Æig√d_ˇ°
<q43_s‹t_tu∂e_key>(
key2
);

934 
	gyórcom∑ris⁄
 = 
a
->
D_YEAR
 - 
b
->D_YEAR;

935 i‡(
	gyórcom∑ris⁄
 !0Ë 
yórcom∑ris⁄
;

936 
	gccôycom∑ris⁄
 = 
°rcmp
(
a
->
S_CITY
, 
b
->S_CITY);

937  
	gccôycom∑ris⁄
;

938 
	gpbøndcom∑ris⁄
 = 
°rcmp
(
a
->
P_BRAND
, 
b
->P_BRAND);

939  
	gpbøndcom∑ris⁄
;

942 
vútuÆ
 
q43_‹dî_key_com∑ª_t
 * 
˛⁄e
() const {

943  
√w
 
q43_‹dî_key_com∑ª_t
(*
this
);

951 ˛as†
	cssb_q43_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


953 
public
:

955 
	$begö
() {

956 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** q4_3 ANSWER ...\n");

957 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

960 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

961 
¥oje˘ed_tu∂e
 *
tu∂e
;

962 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

964 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d {%s} {%s} %d\n",
tu∂e
->
D_YEAR
,Åu∂e->
S_CITY
,Åu∂e->
P_BRAND
,Åu∂e->
PROFIT
);

968 
	}
}

979 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q4_3
(c⁄° 
x˘_id
,

980 
q4_3_öput_t
& 
ö
)

982 
	`TRACE
–
TRACE_ALWAYS
, "********** q4_3 *********\n");

985 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

986 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

991 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q43_lo_tu∂e
));

992 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

993 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

994 
lo_out_buf„r
,

995 
√w
 
	`q43_löe‹dî_tsˇn_fûãr_t
(
this
),

996 
this
->
	`db
(),

997 
_∂öe‹dî_desc
.
	`gë
(),

998 
px˘


1002 
tu∂e_fifo
* 
s_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q43_s_tu∂e
));

1003 
tsˇn_∑ckë_t
* 
s_tsˇn_∑ckë
 =

1004 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

1005 
s_out_buf„r
,

1006 
√w
 
	`q43_suµlõr_tsˇn_fûãr_t
(
this
,
ö
),

1007 
this
->
	`db
(),

1008 
_psuµlõr_desc
.
	`gë
(),

1009 
px˘


1013 
tu∂e_fifo
* 
p_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q43_p_tu∂e
));

1014 
tsˇn_∑ckë_t
* 
p_tsˇn_∑ckë
 =

1015 
√w
 
	`tsˇn_∑ckë_t
("TSCANÖart",

1016 
p_out_buf„r
,

1017 
√w
 
	`q43_∑π_tsˇn_fûãr_t
(
this
,
ö
),

1018 
this
->
	`db
(),

1019 
_µ¨t_desc
.
	`gë
(),

1020 
px˘


1024 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q43_d_tu∂e
));

1025 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

1026 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

1027 
d_out_buf„r
,

1028 
√w
 
	`q43_d©e_tsˇn_fûãr_t
(
this
,
ö
),

1029 
this
->
	`db
(),

1030 
_pd©e_desc
.
	`gë
(),

1031 
px˘


1035 
tu∂e_fifo
* 
c_out_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q43_c_tu∂e
));

1036 
tsˇn_∑ckë_t
* 
c_tsˇn_∑ckë
 =

1037 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

1038 
c_out_buf„r
,

1039 
√w
 
	`q43_cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

1040 
this
->
	`db
(),

1041 
_pcu°omî_desc
.
	`gë
(),

1042 
px˘


1047 
tu∂e_fifo
* 
joö_lo_s_out
 = 
√w
 
	`tu∂e_fifo
((
q43_joö_s_tu∂e
));

1048 
∑ckë_t
* 
joö_lo_s_∑ckë
 =

1049 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier JOIN",

1050 
joö_lo_s_out
,

1051 
√w
 
	`åivül_fûãr_t
((
q43_joö_s_tu∂e
)),

1052 
lo_tsˇn_∑ckë
,

1053 
s_tsˇn_∑ckë
,

1054 
√w
 
	`q43_lo_s_joö_t
() );

1057 
tu∂e_fifo
* 
joö_lo_s_p_out
 = 
√w
 
	`tu∂e_fifo
((
q43_joö_s_p_tu∂e
));

1058 
∑ckë_t
* 
joö_lo_s_p_∑ckë
 =

1059 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part JOIN",

1060 
joö_lo_s_p_out
,

1061 
√w
 
	`åivül_fûãr_t
((
q43_joö_s_p_tu∂e
)),

1062 
joö_lo_s_∑ckë
,

1063 
p_tsˇn_∑ckë
,

1064 
√w
 
	`q43_lo_s_p_joö_t
() );

1067 
tu∂e_fifo
* 
joö_lo_s_p_d_out
 = 
√w
 
	`tu∂e_fifo
((
q43_joö_s_p_d_tu∂e
));

1068 
∑ckë_t
* 
joö_lo_s_p_d_∑ckë
 =

1069 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part - Date JOIN",

1070 
joö_lo_s_p_d_out
,

1071 
√w
 
	`åivül_fûãr_t
((
q43_joö_s_p_d_tu∂e
)),

1072 
joö_lo_s_p_∑ckë
,

1073 
d_tsˇn_∑ckë
,

1074 
√w
 
	`q43_lo_s_p_d_joö_t
() );

1077 
tu∂e_fifo
* 
joö_out
 = 
√w
 
	`tu∂e_fifo
((
q43_joö_tu∂e
));

1078 
∑ckë_t
* 
joö_∑ckë
 =

1079 
√w
 
	`hash_joö_∑ckë_t
("Lineorder - Supplier - Part - Date - Customer JOIN",

1080 
joö_out
,

1081 
√w
 
	`åivül_fûãr_t
((
q43_joö_tu∂e
)),

1082 
joö_lo_s_p_d_∑ckë
,

1083 
c_tsˇn_∑ckë
,

1084 
√w
 
	`q43_joö_t
() );

1087 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

1088 
√w
 
	`tu∂e_fifo
( (
q43_aggªg©e_tu∂e
));

1089 
∑ckë_t
* 
q43_agg_∑ckë
 =

1090 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q4_3",

1091 
agg_ouçut_buf„r
,

1092 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

1093 
joö_∑ckë
,

1094 
√w
 
	`q43_agg_aggªg©e_t
(),

1095 
√w
 
	`q43_agg_öput_tu∂e_key_exåa˘‹_t
(),

1096 
√w
 
	`q43_agg_öput_tu∂e_key_com∑ª_t
());

1099 
tu∂e_fifo
* 
s‹t_föÆ_out
 = 
√w
 
	`tu∂e_fifo
((
q43_aggªg©e_tu∂e
));

1100 
∑ckë_t
* 
q43_s‹t_föÆ_∑ckë
 =

1101 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_YEAR ASC, REVENUE DESC",

1102 
s‹t_föÆ_out
,

1103 
√w
 
	`åivül_fûãr_t
((
q43_aggªg©e_tu∂e
)),

1104 
√w
 
	`q43_‹dî_key_exåa˘‹_t
(),

1105 
√w
 
	`q43_‹dî_key_com∑ª_t
(),

1106 
q43_agg_∑ckë
);

1109 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

1110 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1111 
s_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1112 
p_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1113 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1114 
c_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1115 
joö_lo_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1116 
joö_lo_s_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1117 
joö_lo_s_p_d_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1118 
joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1119 
q43_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1120 
q43_s‹t_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1123 
ssb_q43_¥o˚ss_tu∂e_t
 
±
;

1124 
	`¥o˚ss_quîy
(
q43_s‹t_föÆ_∑ckë
, 
±
);

1125 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1127  (
RCOK
);

1128 
	}
}

1131 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qcustomer.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

53 ˛as†
	cssb_qcu°omî
 {

55 
	mpublic
:

57 
ssb_cu°omî_tu∂e
 
	tcu°omî_tu∂e
;

59 
	scou¡_tu∂e
 {

60 
	mCOUNT
;

63 
	gssb_qcu°omî
::
	tcou¡_tu∂e
 
	t¥oje˘ed_tu∂e
;

65 ˛as†
	ccu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

66 
¥iv©e
:

67 
Sh‹eSSBEnv
* 
_ssbdb
;

68 
èbÀ_row_t
* 
	g_¥cu°
;

69 
ªp_row_t
 
	g_º
;

71 
ssb_cu°omî_tu∂e
 
	g_cu°omî
;

73 
	gpublic
:

75 
cu°omî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
qcu°omî_öput_t
 &
ö
)

76 : 
tu∂e_fûãr_t
(
ssbdb
->
cu°omî_desc
()->
maxsize
()), 
_ssbdb
(ssbdb) {

79 
	g_¥cu°
 = 
_ssbdb
->
cu°omî_m™
()->
gë_tu∂e
();

80 
	g_º
.
£t_ts
(
_ssbdb
->
cu°omî_m™
()->
ts
(),

81 
_ssbdb
->
cu°omî_desc
()->
maxsize
());

82 
	g_¥cu°
->
	g_ªp
 = &
_º
;

86 ~
cu°omî_tsˇn_fûãr_t
() {

88 
	g_ssbdb
->
cu°omî_m™
()->
give_tu∂e
(
_¥cu°
);

94 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

97 i‡(!
	g_ssbdb
->
cu°omî_m™
()->
lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

98 
as£π
(
Ál£
);

101  (
	gåue
);

107 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

108 
cu°omî_tu∂e
 *
	gde°
;

109 
	gde°
 = 
Æig√d_ˇ°
<
cu°omî_tu∂e
 > (
d
.
d©a
);

111 
	g_¥cu°
->
gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

112 
	g_¥cu°
->
gë_vÆue
(1, 
_cu°omî
.
C_NAME
, 
STRSIZE
(25));

113 
	g_¥cu°
->
gë_vÆue
(2, 
_cu°omî
.
C_ADDRESS
, 
STRSIZE
(25));

114 
	g_¥cu°
->
gë_vÆue
(3, 
_cu°omî
.
C_CITY
, 
STRSIZE
(10));

115 
	g_¥cu°
->
gë_vÆue
(4, 
_cu°omî
.
C_NATION
, 
STRSIZE
(15));

116 
	g_¥cu°
->
gë_vÆue
(5, 
_cu°omî
.
C_REGION
, 
STRSIZE
(12));

117 
	g_¥cu°
->
gë_vÆue
(6, 
_cu°omî
.
C_PHONE
, 
STRSIZE
(15));

118 
	g_¥cu°
->
gë_vÆue
(7, 
_cu°omî
.
C_MKTSEGMENT
, 
STRSIZE
(10));

121 
TRACE
(
TRACE_RECORD_FLOW
, "CUSTOMER: %s --d\n",

122 
_cu°omî
.
C_NATION
);

124 
mem˝y
(
de°
, &
_cu°omî
,  (_customer));

127 
cu°omî_tsˇn_fûãr_t
* 
˛⁄e
() const {

128  
√w
 
cu°omî_tsˇn_fûãr_t
(*
this
);

131 
c_°r
 
to_°rög
() const {

132  
c_°r
("customer_tscan_filter_t()");

136 
	gqcu°omî_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

138 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

139 
public
:

141 
cou¡_key_exåa˘‹_t
()

142 : 
key_exåa˘‹_t
(0, 0) {

148 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

149  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

153 
cou¡_key_exåa˘‹_t
 
	g_exåa˘‹
;

155 
qcu°omî_cou¡_aggªg©e_t
()

156 : 
tu∂e_aggªg©e_t
( (
cou¡_tu∂e
)) {

160 
vútuÆ
 
key_exåa˘‹_t
 * 
key_exåa˘‹
() {

161  &
_exåa˘‹
;

164 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

165 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

166 
	gagg
->
	gCOUNT
++;

169 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

170 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

171 
cou¡_tu∂e
* 
	gouçut
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
d
.
d©a
);

172 
	gouçut
->
	gCOUNT
 = 
agg
->
COUNT
;

175 
vútuÆ
 
qcu°omî_cou¡_aggªg©e_t
 * 
˛⁄e
() const {

176  
√w
 
qcu°omî_cou¡_aggªg©e_t
(*
this
);

179 
vútuÆ
 
c_°r
 
to_°rög
() const {

184 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

185 
ssb_qcu°omî
::
cu°omî_tu∂e
 *
de°
;

186 
de°
 = 
Æig√d_ˇ°
<
ssb_qcu°omî
::
cu°omî_tu∂e
> (
tup
->
d©a
);

187  
√w
 
	`c_°r
("%d|%s|%s|%s|%s|%s|%s|%s|\n",

188 
de°
->
C_CUSTKEY
,

189 
de°
->
C_NAME
,

190 
de°
->
C_ADDRESS
,

191 
de°
->
C_CITY
,

192 
de°
->
C_NATION
,

193 
de°
->
C_REGION
,

194 
de°
->
C_PHONE
,

195 
de°
->
C_MKTSEGMENT
);

196 
	}
}

204 ˛as†
	cssb_qcu°omî_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


206 
public
:

208 
	$begö
() {

209 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qcustomer ANSWER ...\n");

210 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qcustomer COUNT...\n");

213 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

214 
ssb_qcu°omî
::
¥oje˘ed_tu∂e
 *
tu∂e
;

215 
tu∂e
 = 
Æig√d_ˇ°
<
ssb_qcu°omî
::
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

216 
	`TRACE
(
TRACE_QUERY_RESULTS
, "%d\n", 
tu∂e
->
COUNT
);

217 
	}
}

228 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_qcu°omî
(c⁄° 
x˘_id
,

229 
qcu°omî_öput_t
& 
ö
)

231 
	`TRACE
–
TRACE_ALWAYS
, "********** qcustomer *********\n");

234 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

235 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

239 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

240 
√w
 
	`tu∂e_fifo
((
ssb_qcu°omî
::
cu°omî_tu∂e
));

241 
tsˇn_∑ckë_t
* 
cu°omî_tsˇn_∑ckë
 =

242 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

243 
tsˇn_out_buf„r
,

244 
√w
 
ssb_qcu°omî
::
	`cu°omî_tsˇn_fûãr_t
(
this
,
ö
),

245 
this
->
	`db
(),

246 
_pcu°omî_desc
.
	`gë
(),

247 
px˘


251 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
ssb_qcu°omî
::
cu°omî_tu∂e
));

252 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

253 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

254 
fdump_ouçut
,

255 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

256 
NULL
,

257 
	`c_°r
("%s/cu°omîs.tbl", 
	`gëív
("HOME")),

258 
NULL
,

259 
cu°omî_tsˇn_∑ckë
,

260 
ssb_qcu°omî
::
dump_tu∂e
);

262 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qcu°omî
::
¥oje˘ed_tu∂e
));

263 
aggªg©e_∑ckë_t
* 
agg_∑ckë
 =

264 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("COUNT_AGGREGATE"),

265 
agg_ouçut
,

266 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

267 
√w
 
ssb_qcu°omî
::
	`qcu°omî_cou¡_aggªg©e_t
(),

268 
√w
 
ssb_qcu°omî
::
qcu°omî_cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

269 
fdump_∑ckë
);

271 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

272 
cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

273 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

274 
agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

277 
ssb_qcu°omî_¥o˚ss_tu∂e_t
 
±
;

278 
	`¥o˚ss_quîy
(
agg_∑ckë
, 
±
);

279 
dp
->
	`quîy_°©e_de°roy
(
qs
);

281  (
RCOK
);

282 
	}
}

285 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qdate.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

53 ˛as†
	cssb_qd©e
 {

55 
	mpublic
:

57 
ssb_d©e_tu∂e
 
	td©e_tu∂e
;

59 
	scou¡_tu∂e
 {

60 
	mCOUNT
;

63 
cou¡_tu∂e
 
	t¥oje˘ed_tu∂e
;

65 ˛as†
	cd©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

66 
¥iv©e
:

67 
Sh‹eSSBEnv
* 
_ssbdb
;

68 
èbÀ_row_t
* 
	g_¥d©e
;

69 
ªp_row_t
 
	g_º
;

71 
ssb_d©e_tu∂e
 
	g_d©e
;

73 
	gpublic
:

75 
d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
qd©e_öput_t
 &
ö
)

76 : 
tu∂e_fûãr_t
(
ssbdb
->
d©e_desc
()->
maxsize
()), 
_ssbdb
(ssbdb) {

79 
	g_¥d©e
 = 
_ssbdb
->
d©e_m™
()->
gë_tu∂e
();

80 
	g_º
.
£t_ts
(
_ssbdb
->
d©e_m™
()->
ts
(),

81 
_ssbdb
->
d©e_desc
()->
maxsize
());

82 
	g_¥d©e
->
	g_ªp
 = &
_º
;

86 ~
d©e_tsˇn_fûãr_t
() {

88 
	g_ssbdb
->
d©e_m™
()->
give_tu∂e
(
_¥d©e
);

94 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

97 i‡(!
	g_ssbdb
->
d©e_m™
()->
lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

98 
as£π
(
Ál£
);

101  
	gåue
;

107 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

109 
	gssb_qd©e
::
d©e_tu∂e
 *
de°
;

110 
	gde°
 = 
Æig√d_ˇ°
<
ssb_qd©e
::
d©e_tu∂e
> (
d
.
d©a
);

112 
	g_¥d©e
->
gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

113 
	g_¥d©e
->
gë_vÆue
(1, 
_d©e
.
D_DATE
, 
STRSIZE
(18));

114 
	g_¥d©e
->
gë_vÆue
(2, 
_d©e
.
D_DAYOFWEEK
, 
STRSIZE
(9));

115 
	g_¥d©e
->
gë_vÆue
(3, 
_d©e
.
D_MONTH
, 
STRSIZE
(9));

116 
	g_¥d©e
->
gë_vÆue
(4, 
_d©e
.
D_YEAR
);

117 
	g_¥d©e
->
gë_vÆue
(5, 
_d©e
.
D_YEARMONTHNUM
);

118 
	g_¥d©e
->
gë_vÆue
(6, 
_d©e
.
D_YEARMONTH
, 
STRSIZE
(7));

119 
	g_¥d©e
->
gë_vÆue
(7, 
_d©e
.
D_DAYNUMINWEEK
);

120 
	g_¥d©e
->
gë_vÆue
(8, 
_d©e
.
D_DAYNUMINMONTH
);

121 
	g_¥d©e
->
gë_vÆue
(9, 
_d©e
.
D_DAYNUMINYEAR
);

122 
	g_¥d©e
->
gë_vÆue
(10, 
_d©e
.
D_MONTHNUMINYEAR
);

123 
	g_¥d©e
->
gë_vÆue
(11, 
_d©e
.
D_WEEKNUMINYEAR
);

124 
	g_¥d©e
->
gë_vÆue
(12, 
_d©e
.
D_SELLINGSEASON
, 
STRSIZE
(12));

125 
	g_¥d©e
->
gë_vÆue
(13, 
_d©e
.
D_LASTDAYINWEEKFL
, 2);

126 
	g_¥d©e
->
gë_vÆue
(14, 
_d©e
.
D_LASTDAYINMONTHFL
, 2);

127 
	g_¥d©e
->
gë_vÆue
(15, 
_d©e
.
D_HOLIDAYFL
, 2);

128 
	g_¥d©e
->
gë_vÆue
(16, 
_d©e
.
D_WEEKDAYFL
, 2);

130 
TRACE
(
TRACE_RECORD_FLOW
, "%d|%s --\n",

131 
_d©e
.
D_DATEKEY
,

132 
_d©e
.
D_DATE
);

134 
mem˝y
(
de°
, &
_d©e
, (_date));

137 
d©e_tsˇn_fûãr_t
* 
˛⁄e
() const {

138  
√w
 
d©e_tsˇn_fûãr_t
(*
this
);

141 
c_°r
 
to_°rög
() const {

142  
c_°r
("date_tscan_filter_t()");

146 
	gqd©e_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

148 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

149 
public
:

151 
cou¡_key_exåa˘‹_t
()

152 : 
key_exåa˘‹_t
(0, 0) {

158 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

159  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

163 
cou¡_key_exåa˘‹_t
 
	g_exåa˘‹
;

165 
qd©e_cou¡_aggªg©e_t
()

166 : 
tu∂e_aggªg©e_t
( (
cou¡_tu∂e
)) {

170 
vútuÆ
 
key_exåa˘‹_t
 * 
key_exåa˘‹
() {

171  &
_exåa˘‹
;

174 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

175 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

176 
	gagg
->
	gCOUNT
++;

179 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

180 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

181 
cou¡_tu∂e
* 
	gouçut
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
d
.
d©a
);

182 
	gouçut
->
	gCOUNT
 = 
agg
->
COUNT
;

185 
vútuÆ
 
qd©e_cou¡_aggªg©e_t
 * 
˛⁄e
() const {

186  
√w
 
qd©e_cou¡_aggªg©e_t
(*
this
);

189 
vútuÆ
 
c_°r
 
to_°rög
() const {

194 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

195 
ssb_qd©e
::
d©e_tu∂e
 *
de°
;

196 
de°
 = 
Æig√d_ˇ°
<
ssb_qd©e
::
d©e_tu∂e
> (
tup
->
d©a
);

197  
√w
 
	`c_°r
("%d|%s|%s|%s|%d|%d|%s|%d|%d|%d|%d|%d|%s|%s|%s|%s|%s|\n",

198 
de°
->
D_DATEKEY
,

199 
de°
->
D_DATE
,

200 
de°
->
D_DAYOFWEEK
,

201 
de°
->
D_MONTH
,

202 
de°
->
D_YEAR
,

203 
de°
->
D_YEARMONTHNUM
,

204 
de°
->
D_YEARMONTH
,

205 
de°
->
D_DAYNUMINWEEK
,

206 
de°
->
D_DAYNUMINMONTH
,

207 
de°
->
D_DAYNUMINYEAR
,

208 
de°
->
D_MONTHNUMINYEAR
,

209 
de°
->
D_WEEKNUMINYEAR
,

210 
de°
->
D_SELLINGSEASON
,

211 
de°
->
D_LASTDAYINWEEKFL
,

212 
de°
->
D_LASTDAYINMONTHFL
,

213 
de°
->
D_HOLIDAYFL
,

214 
de°
->
D_WEEKDAYFL
);

215 
	}
}

219 ˛as†
	cssb_qd©e_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


221 
public
:

223 
	$begö
() {

224 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** QDATE ANSWER ...\n");

225 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** QDATE COUNT...\n");

228 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

229 
ssb_qd©e
::
¥oje˘ed_tu∂e
 *
tu∂e
;

230 
tu∂e
 = 
Æig√d_ˇ°
<
ssb_qd©e
::
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

231 
	`TRACE
–
TRACE_QUERY_RESULTS
, "%d\n", 
tu∂e
->
COUNT
);

232 
	}
}

243 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_qd©e
(c⁄° 
x˘_id
,

244 
qd©e_öput_t
& 
ö
)

246 
	`TRACE
–
TRACE_ALWAYS
, "********** qdate *********\n");

249 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

250 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

254 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

255 
√w
 
	`tu∂e_fifo
((
ssb_qd©e
::
d©e_tu∂e
));

256 
tsˇn_∑ckë_t
* 
d©e_tsˇn_∑ckë
 =

257 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

258 
tsˇn_out_buf„r
,

259 
√w
 
ssb_qd©e
::
	`d©e_tsˇn_fûãr_t
(
this
,
ö
),

260 
this
->
	`db
(),

261 
_pd©e_desc
.
	`gë
(),

262 
px˘


266 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qd©e
::
d©e_tu∂e
));

267 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

268 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

269 
fdump_ouçut
,

270 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

271 
NULL
,

272 
	`c_°r
("%s/d©es.tbl", 
	`gëív
("HOME")),

273 
NULL
,

274 
d©e_tsˇn_∑ckë
,

275 
ssb_qd©e
::
dump_tu∂e
);

277 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qd©e
::
¥oje˘ed_tu∂e
));

278 
aggªg©e_∑ckë_t
* 
agg_∑ckë
 =

279 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("COUNT_AGGREGATE"),

280 
agg_ouçut
,

281 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

282 
√w
 
ssb_qd©e
::
qd©e_cou¡_aggªg©e_t
,

283 
√w
 
ssb_qd©e
::
qd©e_cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

284 
fdump_∑ckë
);

286 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

287 
d©e_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

288 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

289 
agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

292 
ssb_qd©e_¥o˚ss_tu∂e_t
 
±
;

293 
	`¥o˚ss_quîy
(
agg_∑ckë
, 
±
);

294 
dp
->
	`quîy_°©e_de°roy
(
qs
);

296  (
RCOK
);

297 
	}
}

300 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qlineorder.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

53 ˛as†
	cssb_qlöe‹dî
 {

55 
	mpublic
:

57 
ssb_löe‹dî_tu∂e
 
	tlöe‹dî_tu∂e
;

64 
	scou¡_tu∂e
 {

65 
	mCOUNT
;

68 
cou¡_tu∂e
 
	t¥oje˘ed_tu∂e
;

70 ˛as†
	clöe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

71 
¥iv©e
:

72 
Sh‹eSSBEnv
* 
_ssbdb
;

73 
èbÀ_row_t
* 
	g_¥löe
;

74 
ªp_row_t
 
	g_º
;

76 
ssb_löe‹dî_tu∂e
 
	g_löe‹dî
;

78 
	gpublic
:

80 
löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
qlöe‹dî_öput_t
 &
ö
)

81 : 
tu∂e_fûãr_t
(
ssbdb
->
löe‹dî_desc
()->
maxsize
()), 
_ssbdb
(ssbdb) {

84 
	g_¥löe
 = 
_ssbdb
->
löe‹dî_m™
()->
gë_tu∂e
();

85 
	g_º
.
£t_ts
(
_ssbdb
->
löe‹dî_m™
()->
ts
(),

86 
_ssbdb
->
löe‹dî_desc
()->
maxsize
());

87 
	g_¥löe
->
	g_ªp
 = &
_º
;

91 ~
löe‹dî_tsˇn_fûãr_t
() {

93 
	g_ssbdb
->
löe‹dî_m™
()->
give_tu∂e
(
_¥löe
);

99 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

102 i‡(!
	g_ssbdb
->
löe‹dî_m™
()->
lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

103 
as£π
(
Ál£
);

106  (
	gåue
);

112 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

114 
	gssb_qlöe‹dî
::
löe‹dî_tu∂e
 *
de°
;

115 
	gde°
 = 
Æig√d_ˇ°
<
ssb_qlöe‹dî
::
löe‹dî_tu∂e
> (
d
.
d©a
);

117 
	g_¥löe
->
gë_vÆue
(0, 
_löe‹dî
.
LO_ORDERKEY
);

118 
	g_¥löe
->
gë_vÆue
(1, 
_löe‹dî
.
LO_LINENUMBER
);

119 
	g_¥löe
->
gë_vÆue
(2, 
_löe‹dî
.
LO_CUSTKEY
);

120 
	g_¥löe
->
gë_vÆue
(3, 
_löe‹dî
.
LO_PARTKEY
);

121 
	g_¥löe
->
gë_vÆue
(4, 
_löe‹dî
.
LO_SUPPKEY
);

122 
	g_¥löe
->
gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

123 
	g_¥löe
->
gë_vÆue
(6, 
_löe‹dî
.
LO_ORDERPRIORITY
, 
STRSIZE
(15));

124 
	g_¥löe
->
gë_vÆue
(7, 
_löe‹dî
.
LO_SHIPPRIORITY
);

125 
	g_¥löe
->
gë_vÆue
(8, 
_löe‹dî
.
LO_QUANTITY
);

126 
	g_¥löe
->
gë_vÆue
(9, 
_löe‹dî
.
LO_EXTENDEDPRICE
);

127 
	g_¥löe
->
gë_vÆue
(10, 
_löe‹dî
.
LO_ORDTOTALPRICE
);

128 
	g_¥löe
->
gë_vÆue
(11, 
_löe‹dî
.
LO_DISCOUNT
);

129 
	g_¥löe
->
gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

130 
	g_¥löe
->
gë_vÆue
(13, 
_löe‹dî
.
LO_SUPPLYCOST
);

131 
	g_¥löe
->
gë_vÆue
(14, 
_löe‹dî
.
LO_TAX
);

132 
	g_¥löe
->
gë_vÆue
(15, 
_löe‹dî
.
LO_COMMIDATE
);

133 
	g_¥löe
->
gë_vÆue
(16, 
_löe‹dî
.
LO_SHIPMODE
, 
STRSIZE
(10));

135 
TRACE
(
TRACE_RECORD_FLOW
, "%d|%d --d\n",

136 
_löe‹dî
.
LO_ORDERKEY
,

137 
_löe‹dî
.
LO_LINENUMBER
);

141 
mem˝y
(
de°
, &
_löe‹dî
,  (_lineorder));

144 
löe‹dî_tsˇn_fûãr_t
* 
˛⁄e
() const {

145  
√w
 
löe‹dî_tsˇn_fûãr_t
(*
this
);

148 
c_°r
 
to_°rög
() const {

149  
c_°r
("lineorder_tscan_filter_t()");

153 
	gqlöe‹dî_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

155 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

156 
public
:

158 
cou¡_key_exåa˘‹_t
()

159 : 
key_exåa˘‹_t
(0, 0) {

165 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

166  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

170 
cou¡_key_exåa˘‹_t
 
	g_exåa˘‹
;

172 
qlöe‹dî_cou¡_aggªg©e_t
()

173 : 
tu∂e_aggªg©e_t
( (
cou¡_tu∂e
)) {

177 
vútuÆ
 
key_exåa˘‹_t
 * 
key_exåa˘‹
() {

178  &
_exåa˘‹
;

181 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

182 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

183 
	gagg
->
	gCOUNT
++;

186 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

187 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

188 
cou¡_tu∂e
* 
	gouçut
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
d
.
d©a
);

189 
	gouçut
->
	gCOUNT
 = 
agg
->
COUNT
;

192 
vútuÆ
 
qlöe‹dî_cou¡_aggªg©e_t
 * 
˛⁄e
() const {

193  
√w
 
qlöe‹dî_cou¡_aggªg©e_t
(*
this
);

196 
vútuÆ
 
c_°r
 
to_°rög
() const {

201 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

202 
ssb_qlöe‹dî
::
löe‹dî_tu∂e
 *
de°
;

203 
de°
 = 
Æig√d_ˇ°
<
ssb_qlöe‹dî
::
löe‹dî_tu∂e
> (
tup
->
d©a
);

204  
√w
 
	`c_°r
("%d|%d|%d|%d|%d|%d|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|\n",

205 
de°
->
LO_ORDERKEY
,

206 
de°
->
LO_LINENUMBER
,

207 
de°
->
LO_CUSTKEY
,

208 
de°
->
LO_PARTKEY
,

209 
de°
->
LO_SUPPKEY
,

210 
de°
->
LO_ORDERDATE
,

211 
de°
->
LO_ORDERPRIORITY
,

212 
de°
->
LO_SHIPPRIORITY
,

213 
de°
->
LO_QUANTITY
,

214 
de°
->
LO_EXTENDEDPRICE
,

215 
de°
->
LO_ORDTOTALPRICE
,

216 
de°
->
LO_DISCOUNT
,

217 
de°
->
LO_REVENUE
,

218 
de°
->
LO_SUPPLYCOST
,

219 
de°
->
LO_TAX
,

220 
de°
->
LO_COMMIDATE
,

221 
de°
->
LO_SHIPMODE
);

222 
	}
}

226 ˛as†
	cssb_qlöe‹dî_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


228 
public
:

230 
	$begö
() {

231 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qlineorder ANSWER ...\n");

232 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qlineorder COUNT...\n");

235 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

236 
ssb_qlöe‹dî
::
¥oje˘ed_tu∂e
 *
tu∂e
;

237 
tu∂e
 = 
Æig√d_ˇ°
<
ssb_qlöe‹dî
::
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

238 
	`TRACE
(
TRACE_QUERY_RESULTS
, "%d\n", 
tu∂e
->
COUNT
);

239 
	}
}

250 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_qlöe‹dî
(c⁄° 
x˘_id
,

251 
qlöe‹dî_öput_t
& 
ö
)

253 
	`TRACE
–
TRACE_ALWAYS
, "********** qlineorder *********\n");

256 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

257 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

261 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

262 
√w
 
	`tu∂e_fifo
( (
ssb_qlöe‹dî
::
löe‹dî_tu∂e
));

263 
tsˇn_∑ckë_t
* 
löe‹dî_tsˇn_∑ckë
 =

264 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

265 
tsˇn_out_buf„r
,

266 
√w
 
ssb_qlöe‹dî
::
	`löe‹dî_tsˇn_fûãr_t
(
this
,
ö
),

267 
this
->
	`db
(),

268 
_∂öe‹dî_desc
.
	`gë
(),

269 
px˘


273 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qlöe‹dî
::
löe‹dî_tu∂e
));

274 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

275 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

276 
fdump_ouçut
,

277 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

278 
NULL
,

279 
	`c_°r
("%s/löe‹dîs.tbl", 
	`gëív
("HOME")),

280 
NULL
,

281 
löe‹dî_tsˇn_∑ckë
,

282 
ssb_qlöe‹dî
::
dump_tu∂e
);

284 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
((
ssb_qlöe‹dî
::
cou¡_tu∂e
));

285 
aggªg©e_∑ckë_t
* 
agg_∑ckë
 =

286 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("COUNT_AGGREGATE"),

287 
agg_ouçut
,

288 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

289 
√w
 
ssb_qlöe‹dî
::
	`qlöe‹dî_cou¡_aggªg©e_t
(),

290 
√w
 
ssb_qlöe‹dî
::
qlöe‹dî_cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

291 
fdump_∑ckë
);

293 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

294 
löe‹dî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

295 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

296 
agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

299 
ssb_qlöe‹dî_¥o˚ss_tu∂e_t
 
±
;

300 
	`¥o˚ss_quîy
(
agg_∑ckë
, 
±
);

301 
dp
->
	`quîy_°©e_de°roy
(
qs
);

303  (
RCOK
);

304 
	}
}

307 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qpart.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

53 ˛as†
	cssb_q∑π
 {

55 
	mpublic
:

57 
ssb_∑π_tu∂e
 
	t∑π_tu∂e
;

64 
	scou¡_tu∂e
 {

65 
	mCOUNT
;

68 
cou¡_tu∂e
 
	t¥oje˘ed_tu∂e
;

70 ˛as†
	c∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

71 
¥iv©e
:

72 
Sh‹eSSBEnv
* 
_ssbdb
;

73 
èbÀ_row_t
* 
	g_¥∑π
;

74 
ªp_row_t
 
	g_º
;

76 
ssb_∑π_tu∂e
 
	g_∑π
;

78 
	gpublic
:

80 
∑π_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
q∑π_öput_t
 &
ö
)

81 : 
tu∂e_fûãr_t
(
ssbdb
->
∑π_desc
()->
maxsize
()), 
_ssbdb
(ssbdb) {

84 
	g_¥∑π
 = 
_ssbdb
->
∑π_m™
()->
gë_tu∂e
();

85 
	g_º
.
£t_ts
(
_ssbdb
->
∑π_m™
()->
ts
(),

86 
_ssbdb
->
∑π_desc
()->
maxsize
());

87 
	g_¥∑π
->
	g_ªp
 = &
_º
;

91 ~
∑π_tsˇn_fûãr_t
() {

93 
	g_ssbdb
->
∑π_m™
()->
give_tu∂e
(
_¥∑π
);

99 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

102 i‡(!
	g_ssbdb
->
∑π_m™
()->
lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

103 
as£π
(
Ál£
);

106  (
	gåue
);

112 
¥oje˘
(
tu∂e_t
 &
d
, constÅuple_t & ) {

114 
	gssb_q∑π
::
∑π_tu∂e
 *
de°
;

115 
	gde°
 = 
Æig√d_ˇ°
<
ssb_q∑π
::
∑π_tu∂e
> (
d
.
d©a
);

117 
	g_¥∑π
->
gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

118 
	g_¥∑π
->
gë_vÆue
(1, 
_∑π
.
P_NAME
, 
STRSIZE
(22));

119 
	g_¥∑π
->
gë_vÆue
(2, 
_∑π
.
P_MFGR
, 
STRSIZE
(6));

120 
	g_¥∑π
->
gë_vÆue
(3, 
_∑π
.
P_CATEGORY
, 
STRSIZE
(7));

121 
	g_¥∑π
->
gë_vÆue
(4, 
_∑π
.
P_BRAND
, 
STRSIZE
(9));

122 
	g_¥∑π
->
gë_vÆue
(5, 
_∑π
.
P_COLOR
, 
STRSIZE
(11));

123 
	g_¥∑π
->
gë_vÆue
(6, 
_∑π
.
P_TYPE
, 
STRSIZE
(25));

124 
	g_¥∑π
->
gë_vÆue
(7, 
_∑π
.
P_SIZE
);

125 
	g_¥∑π
->
gë_vÆue
(8, 
_∑π
.
P_CONTAINER
, 
STRSIZE
(10));

127 
TRACE
(
TRACE_RECORD_FLOW
, "%d|%s|%s| --d\n",

128 
_∑π
.
P_PARTKEY
,

129 
_∑π
.
P_NAME
,

130 
_∑π
.
P_CATEGORY
);

134 
mem˝y
(
de°
, &
_∑π
, (_part));

137 
∑π_tsˇn_fûãr_t
* 
˛⁄e
() const {

138  
√w
 
∑π_tsˇn_fûãr_t
(*
this
);

141 
c_°r
 
to_°rög
() const {

142  
c_°r
("part_tscan_filter_t()");

146 
	gq∑π_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

148 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

149 
public
:

151 
cou¡_key_exåa˘‹_t
()

152 : 
key_exåa˘‹_t
(0, 0) {

158 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

159  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

163 
cou¡_key_exåa˘‹_t
 
	g_exåa˘‹
;

165 
q∑π_cou¡_aggªg©e_t
()

166 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
)) {

170 
vútuÆ
 
key_exåa˘‹_t
 * 
key_exåa˘‹
() {

171  &
_exåa˘‹
;

174 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

175 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

176 
	gagg
->
	gCOUNT
++;

179 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

180 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

181 
cou¡_tu∂e
* 
	gouçut
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
d
.
d©a
);

182 
	gouçut
->
	gCOUNT
 = 
agg
->
COUNT
;

185 
vútuÆ
 
q∑π_cou¡_aggªg©e_t
 * 
˛⁄e
() const {

186  
√w
 
q∑π_cou¡_aggªg©e_t
(*
this
);

189 
vútuÆ
 
c_°r
 
to_°rög
() const {

194 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

195 
ssb_q∑π
::
∑π_tu∂e
 *
de°
;

196 
de°
 = 
Æig√d_ˇ°
<
ssb_q∑π
::
∑π_tu∂e
> (
tup
->
d©a
);

197  
√w
 
	`c_°r
("%d|%s|%s|%s|%s|%s|%s|%d|%s|\n",

198 
de°
->
P_PARTKEY
,

199 
de°
->
P_NAME
,

200 
de°
->
P_MFGR
,

201 
de°
->
P_CATEGORY
,

202 
de°
->
P_BRAND
,

203 
de°
->
P_COLOR
,

204 
de°
->
P_TYPE
,

205 
de°
->
P_SIZE
,

206 
de°
->
P_CONTAINER
);

207 
	}
}

211 ˛as†
	cssb_q∑π_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


213 
public
:

215 
	$begö
() {

216 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** QPART ANSWER ...\n");

217 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** SUM_QTY\tSUM_BASE\tSUM_DISC...\n");

220 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

221 
ssb_q∑π
::
¥oje˘ed_tu∂e
 *
tu∂e
;

222 
tu∂e
 = 
Æig√d_ˇ°
<
ssb_q∑π
::
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

223 
	`TRACE
–
TRACE_QUERY_RESULTS
, "%ld\n", 
tu∂e
->
COUNT
);

225 
	}
}

236 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_q∑π
(c⁄° 
x˘_id
,

237 
q∑π_öput_t
& 
ö
)

239 
	`TRACE
–
TRACE_ALWAYS
, "********** QPART *********\n");

242 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

243 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

247 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

248 
√w
 
	`tu∂e_fifo
( (
ssb_q∑π
::
∑π_tu∂e
));

249 
tsˇn_∑ckë_t
* 
∑π_tsˇn_∑ckë
 =

250 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PART",

251 
tsˇn_out_buf„r
,

252 
√w
 
ssb_q∑π
::
	`∑π_tsˇn_fûãr_t
(
this
,
ö
),

253 
this
->
	`db
(),

254 
_µ¨t_desc
.
	`gë
(),

255 
px˘


259 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_q∑π
::
∑π_tu∂e
));

260 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

261 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

262 
fdump_ouçut
,

263 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

264 
NULL
,

265 
	`c_°r
("%s/∑πs.tbl", 
	`gëív
("HOME")),

266 
NULL
,

267 
∑π_tsˇn_∑ckë
,

268 
ssb_q∑π
::
dump_tu∂e
);

270 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_q∑π
::
cou¡_tu∂e
));

271 
aggªg©e_∑ckë_t
* 
agg_∑ckë
 =

272 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("COUNT_AGGREGATE"),

273 
agg_ouçut
,

274 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

275 
√w
 
ssb_q∑π
::
	`q∑π_cou¡_aggªg©e_t
(),

276 
√w
 
ssb_q∑π
::
q∑π_cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

277 
fdump_∑ckë
);

279 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

280 
∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

281 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

282 
agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

285 
ssb_q∑π_¥o˚ss_tu∂e_t
 
±
;

286 
	`¥o˚ss_quîy
(
agg_∑ckë
, 
±
);

287 
dp
->
	`quîy_°©e_de°roy
(
qs
);

289  (
RCOK
);

290 
	}
}

293 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qsupplier.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

53 ˛as†
	cssb_qsuµlõr
 {

54 
	mpublic
:

56 
ssb_suµlõr_tu∂e
 
	tqsuµlõr_suµlõr_tu∂e
;

58 
	scou¡_tu∂e
 {

59 
	mCOUNT
;

62 ˛as†
	csuµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

63 
¥iv©e
:

64 
Sh‹eSSBEnv
* 
_ssbdb
;

65 
èbÀ_row_t
* 
	g_¥suµ
;

66 
ªp_row_t
 
	g_º
;

68 
ssb_suµlõr_tu∂e
 
	g_suµlõr
;

70 
	gpublic
:

72 
suµlõr_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
qsuµlõr_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
ssbdb
->
suµlõr_desc
()->
maxsize
()), 
_ssbdb
(ssbdb) {

76 
	g_¥suµ
 = 
_ssbdb
->
suµlõr_m™
()->
gë_tu∂e
();

77 
	g_º
.
£t_ts
(
_ssbdb
->
suµlõr_m™
()->
ts
(),

78 
_ssbdb
->
suµlõr_desc
()->
maxsize
());

79 
	g_¥suµ
->
	g_ªp
 = &
_º
;

83 ~
suµlõr_tsˇn_fûãr_t
() {

92 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

95 i‡(!
	g_ssbdb
->
suµlõr_m™
()->
lﬂd
(
_¥suµ
, 
öput
.
d©a
)) {

96 
as£π
(
Ál£
);

99  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
qsuµlõr_suµlõr_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
qsuµlõr_suµlõr_tu∂e
>(
d
.
d©a
);

110 
	g_¥suµ
->
gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

111 
	g_¥suµ
->
gë_vÆue
(1, 
_suµlõr
.
S_NAME
, 
STRSIZE
(25));

112 
	g_¥suµ
->
gë_vÆue
(2, 
_suµlõr
.
S_ADDRESS
, 
STRSIZE
(25));

113 
	g_¥suµ
->
gë_vÆue
(3, 
_suµlõr
.
S_CITY
, 
STRSIZE
(10));

114 
	g_¥suµ
->
gë_vÆue
(4, 
_suµlõr
.
S_NATION
, 
STRSIZE
(15));

115 
	g_¥suµ
->
gë_vÆue
(5, 
_suµlõr
.
S_REGION
, 
STRSIZE
(12));

116 
	g_¥suµ
->
gë_vÆue
(6, 
_suµlõr
.
S_PHONE
, 
STRSIZE
(15));

118 
TRACE
(
TRACE_RECORD_FLOW
, "%d|%s --d\n",

119 
_suµlõr
.
S_SUPPKEY
,

120 
_suµlõr
.
S_NAME
);

122 
mem˝y
(
de°
, &
_suµlõr
, (_supplier));

125 
suµlõr_tsˇn_fûãr_t
* 
˛⁄e
() const {

126  
√w
 
suµlõr_tsˇn_fûãr_t
(*
this
);

129 
c_°r
 
to_°rög
() const {

130  
c_°r
("supplier_tscan_filter_t()");

134 
	gqsuµlõr_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

136 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

137 
public
:

139 
cou¡_key_exåa˘‹_t
()

140 : 
key_exåa˘‹_t
(0, 0) {

146 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

147  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

151 
cou¡_key_exåa˘‹_t
 
	g_exåa˘‹
;

153 
qsuµlõr_cou¡_aggªg©e_t
()

154 : 
tu∂e_aggªg©e_t
( (
cou¡_tu∂e
)) {

158 
vútuÆ
 
key_exåa˘‹_t
 * 
key_exåa˘‹
() {

159  &
_exåa˘‹
;

162 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

163 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

164 
	gagg
->
	gCOUNT
++;

167 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

168 
cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
agg_d©a
);

169 
cou¡_tu∂e
* 
	gouçut
 = 
Æig√d_ˇ°
<cou¡_tu∂ê> (
d
.
d©a
);

170 
	gouçut
->
	gCOUNT
 = 
agg
->
COUNT
;

173 
vútuÆ
 
qsuµlõr_cou¡_aggªg©e_t
 * 
˛⁄e
() const {

174  
√w
 
qsuµlõr_cou¡_aggªg©e_t
(*
this
);

177 
vútuÆ
 
c_°r
 
to_°rög
() const {

182 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

183 
qsuµlõr_suµlõr_tu∂e
 *
de°
;

184 
de°
 = 
Æig√d_ˇ°
<
qsuµlõr_suµlõr_tu∂e
>(
tup
->
d©a
);

185  
√w
 
	`c_°r
("%d|%s|%s|%s|%s|%s|%s|\n",

186 
de°
->
S_SUPPKEY
,

187 
de°
->
S_NAME
,

188 
de°
->
S_ADDRESS
,

189 
de°
->
S_CITY
,

190 
de°
->
S_NATION
,

191 
de°
->
S_REGION
,

192 
de°
->
S_PHONE
);

193 
	}
}

197 ˛as†
	cssb_qsuµlõr_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

198 
public
:

200 
	$begö
() {

201 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qsupplier ANSWER ...\n");

202 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qsupplier COUNT...\n");

205 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

206 
ssb_qsuµlõr
::
cou¡_tu∂e
 *
tu∂e
;

207 
tu∂e
 = 
Æig√d_ˇ°
<
ssb_qsuµlõr
::
cou¡_tu∂e
 > (
ouçut
.
d©a
);

208 
	`TRACE
(
TRACE_QUERY_RESULTS
, "%d\n",

209 
tu∂e
->
COUNT
);

210 
	}
}

219 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_qsuµlõr
(c⁄° 
x˘_id
,

220 
qsuµlõr_öput_t
& 
ö
) {

221 
	`TRACE
(
TRACE_ALWAYS
, "********** qsupplier *********\n");

224 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

225 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

229 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

230 
√w
 
	`tu∂e_fifo
( (
ssb_qsuµlõr
::
qsuµlõr_suµlõr_tu∂e
));

231 
tsˇn_∑ckë_t
* 
suµlõr_tsˇn_∑ckë
 =

232 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

233 
tsˇn_out_buf„r
,

234 
√w
 
ssb_qsuµlõr
::
	`suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

235 
this
->
	`db
(),

236 
_psuµlõr_desc
.
	`gë
(),

237 
px˘


241 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qsuµlõr
::
qsuµlõr_suµlõr_tu∂e
));

242 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

243 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

244 
fdump_ouçut
,

245 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

246 
NULL
,

247 
	`c_°r
("%s/suµlõrs.tbl", 
	`gëív
("HOME")),

248 
NULL
,

249 
suµlõr_tsˇn_∑ckë
,

250 
ssb_qsuµlõr
::
dump_tu∂e
);

252 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
( (
ssb_qsuµlõr
::
cou¡_tu∂e
));

253 
aggªg©e_∑ckë_t
* 
agg_∑ckë
 =

254 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("COUNT_AGGREGATE"),

255 
agg_ouçut
,

256 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

257 
√w
 
ssb_qsuµlõr
::
	`qsuµlõr_cou¡_aggªg©e_t
(),

258 
√w
 
ssb_qsuµlõr
::
qsuµlõr_cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

259 
fdump_∑ckë
);

261 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

262 
suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

263 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

264 
agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

267 
ssb_qsuµlõr_¥o˚ss_tu∂e_t
 
±
;

268 
	`¥o˚ss_quîy
(
agg_∑ckë
, 
±
);

269 
dp
->
	`quîy_°©e_de°roy
(
qs
);

271  (
RCOK
);

272 
	}
}

275 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe/qpipe_qtest.cpp

34 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
ssb
);

54 
	sqã°_lo_tu∂e


56 
	mLO_ORDERKEY
;

57 
	mLO_LINENUMBER
;

58 
	mLO_ORDERDATE
;

59 
	mLO_REVENUE
;

63 
	sqã°_d_tu∂e


65 
	mD_DATEKEY
;

66 
	mD_YEAR
;

67 
	mD_DAYNUMINWEEK
;

68 
	mD_DATE
 [
STRSIZE
(18)];

72 
	sqã°_joö_d_tu∂e


74 
	mLO_ORDERKEY
;

75 
	mLO_LINENUMBER
;

76 
	mLO_ORDERDATE
;

77 
	mD_DATEKEY
;

78 
	mD_DATE
 [
STRSIZE
(18)];

79 
	mLO_REVENUE
;

83 
qã°_joö_d_tu∂e
 
	t¥oje˘ed_tu∂e
;

89 ˛as†
	cqã°_löe‹dî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


91 
¥iv©e
:

92 
Sh‹eSSBEnv
* 
_ssbdb
;

93 
èbÀ_row_t
* 
	m_¥löe
;

94 
ªp_row_t
 
	m_º
;

96 
ssb_löe‹dî_tu∂e
 
	m_löe‹dî
;

98 
	mpublic
:

100 
	$qã°_löe‹dî_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
)

101 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

103 
_¥löe
 = 
_ssbdb
->
	`löe‹dî_m™
()->
	`gë_tu∂e
();

104 
_º
.
	`£t_ts
(
_ssbdb
->
	`löe‹dî_m™
()->
	`ts
(),

105 
_ssbdb
->
	`löe‹dî_desc
()->
	`maxsize
());

106 
_¥löe
->
_ªp
 = &
_º
;

109 ~
	$qã°_löe‹dî_tsˇn_fûãr_t
()

111 
_ssbdb
->
	`löe‹dî_m™
()->
	`give_tu∂e
(
_¥löe
);

112 
	}
}

114 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

115 i‡(!
_ssbdb
->
	`löe‹dî_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

116 
	`as£π
(
Ál£
);

120  (
åue
);

121 
	}
}

123 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

124 
qã°_lo_tu∂e
 *
de°
;

125 
de°
 = 
Æig√d_ˇ°
<
qã°_lo_tu∂e
>(
d
.
d©a
);

127 
_¥löe
->
	`gë_vÆue
(0, 
_löe‹dî
.
LO_ORDERKEY
);

128 
_¥löe
->
	`gë_vÆue
(1, 
_löe‹dî
.
LO_LINENUMBER
);

129 
_¥löe
->
	`gë_vÆue
(5, 
_löe‹dî
.
LO_ORDERDATE
);

130 
_¥löe
->
	`gë_vÆue
(12, 
_löe‹dî
.
LO_REVENUE
);

132 
	`TRACE
–
TRACE_RECORD_FLOW
, "%d|%d|%d|%d --d\n",

133 
_löe‹dî
.
LO_ORDERKEY
,

134 
_löe‹dî
.
LO_LINENUMBER
,

135 
_löe‹dî
.
LO_ORDERDATE
,

136 
_löe‹dî
.
LO_REVENUE
);

138 
de°
->
LO_ORDERKEY
 = 
_löe‹dî
.LO_ORDERKEY;

139 
de°
->
LO_LINENUMBER
 = 
_löe‹dî
.LO_LINENUMBER;

140 
de°
->
LO_ORDERDATE
 = 
_löe‹dî
.LO_ORDERDATE;

141 
de°
->
LO_REVENUE
 = 
_löe‹dî
.LO_REVENUE;

142 
	}
}

144 
qã°_löe‹dî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

145  
√w
 
	`qã°_löe‹dî_tsˇn_fûãr_t
(*
this
);

146 
	}
}

148 
c_°r
 
	$to_°rög
() const {

149  
	`c_°r
("qtest_lineorder_tscan_filter_t()");

150 
	}
}

157 ˛as†
	cqã°_d©e_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


159 
¥iv©e
:

160 
Sh‹eSSBEnv
* 
_ssbdb
;

161 
èbÀ_row_t
* 
	m_¥d©e
;

162 
ªp_row_t
 
	m_º
;

164 
ssb_d©e_tu∂e
 
	m_d©e
;

166 
	mpublic
:

168 
	$qã°_d©e_tsˇn_fûãr_t
(
Sh‹eSSBEnv
* 
ssbdb
, 
qã°_öput_t
 &
ö
)

169 : 
	`tu∂e_fûãr_t
(
ssbdb
->
	`d©e_desc
()->
	`maxsize
()), 
	$_ssbdb
(
ssbdb
)

171 
_¥d©e
 = 
_ssbdb
->
	`d©e_m™
()->
	`gë_tu∂e
();

172 
_º
.
	`£t_ts
(
_ssbdb
->
	`d©e_m™
()->
	`ts
(),

173 
_ssbdb
->
	`d©e_desc
()->
	`maxsize
());

174 
_¥d©e
->
_ªp
 = &
_º
;

177 ~
	$qã°_d©e_tsˇn_fûãr_t
()

179 
_ssbdb
->
	`d©e_m™
()->
	`give_tu∂e
(
_¥d©e
);

180 
	}
}

182 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

183 i‡(!
_ssbdb
->
	`d©e_m™
()->
	`lﬂd
(
_¥d©e
, 
öput
.
d©a
)) {

184 
	`as£π
(
Ál£
);

188  
åue
;

189 
	}
}

191 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

192 
qã°_d_tu∂e
 *
de°
;

193 
de°
 = 
Æig√d_ˇ°
<
qã°_d_tu∂e
>(
d
.
d©a
);

195 
_¥d©e
->
	`gë_vÆue
(0, 
_d©e
.
D_DATEKEY
);

196 
_¥d©e
->
	`gë_vÆue
(1, 
_d©e
.
D_DATE
, 
	`STRSIZE
(18));

197 
_¥d©e
->
	`gë_vÆue
(4, 
_d©e
.
D_YEAR
);

198 
_¥d©e
->
	`gë_vÆue
(7, 
_d©e
.
D_DAYNUMINWEEK
);

200 
	`TRACE
–
TRACE_RECORD_FLOW
, "%s|%d|%d|%d --d\n",

201 
_d©e
.
D_DATE
,

202 
_d©e
.
D_DATEKEY
,

203 
_d©e
.
D_YEAR
,

204 
_d©e
.
D_DAYNUMINWEEK
);

206 
de°
->
D_DATEKEY
 = 
_d©e
.D_DATEKEY;

207 
	`°r˝y
(
de°
->
D_DATE
,
_d©e
.D_DATE);

208 
de°
->
D_YEAR
=
_d©e
.D_YEAR;

209 
de°
->
D_DAYNUMINWEEK
=
_d©e
.D_DAYNUMINWEEK;

210 
	}
}

212 
qã°_d©e_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

213  
√w
 
	`qã°_d©e_tsˇn_fûãr_t
(*
this
);

214 
	}
}

216 
c_°r
 
	$to_°rög
() const {

217  
	`c_°r
("qtest_date_tscan_filter_t()");

218 
	}
}

225 
	gqã°_d©e_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t


227 
qã°_d©e_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
qã°_d_tu∂e
), 0) { }

229 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

230 
qã°_d_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<qã°_d_tu∂e>(
tu∂e_d©a
);

231  
	gtu∂e
->
	gD_DATEKEY
;

234 
vútuÆ
 
qã°_d©e_key_exåa˘‹_t
* 
˛⁄e
() const {

235  
√w
 
qã°_d©e_key_exåa˘‹_t
(*
this
);

239 
	gqã°_d©e_key_com∑ª_t
 : 
public
 
key_com∑ª_t


241 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

242 
qã°_d_tu∂e
* 
	ga
 = 
Æig√d_ˇ°
<qã°_d_tu∂e>(
key1
);

243 
qã°_d_tu∂e
* 
	gb
 = 
Æig√d_ˇ°
<qã°_d_tu∂e>(
key2
);

245  
	ga
->
	gD_DATEKEY
 - 
	gb
->D_DATEKEY;

247 
vútuÆ
 
qã°_d©e_key_com∑ª_t
* 
˛⁄e
() const {

248  
√w
 
qã°_d©e_key_com∑ª_t
(*
this
);

256 
	gqã°_lo_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t


258 
qã°_lo_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
qã°_lo_tu∂e
), 0) { }

260 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

261 
qã°_lo_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<qã°_lo_tu∂e>(
tu∂e_d©a
);

262  
	gtu∂e
->
	gLO_ORDERDATE
;

265 
vútuÆ
 
qã°_lo_key_exåa˘‹_t
* 
˛⁄e
() const {

266  
√w
 
qã°_lo_key_exåa˘‹_t
(*
this
);

270 
	gqã°_lo_key_com∑ª_t
 : 
public
 
key_com∑ª_t


272 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

273 
qã°_lo_tu∂e
* 
	ga
 = 
Æig√d_ˇ°
<qã°_lo_tu∂e>(
key1
);

274 
qã°_lo_tu∂e
* 
	gb
 = 
Æig√d_ˇ°
<qã°_lo_tu∂e>(
key2
);

276  
	ga
->
	gLO_ORDERDATE
 - 
	gb
->LO_ORDERDATE;

278 
vútuÆ
 
qã°_lo_key_com∑ª_t
* 
˛⁄e
() const {

279  
√w
 
qã°_lo_key_com∑ª_t
(*
this
);

290 
	gqã°_lo_d_joö_t
 : 
public
 
tu∂e_joö_t
 {

292 
qã°_lo_d_joö_t
 ()

293 : 
tu∂e_joö_t
((
qã°_lo_tu∂e
),

294 
off£tof
(
qã°_lo_tu∂e
, 
LO_ORDERDATE
),

295 (
qã°_d_tu∂e
),

296 
off£tof
(
qã°_d_tu∂e
, 
D_DATEKEY
),

298 (
qã°_joö_d_tu∂e
))

301 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

302 c⁄° 
tu∂e_t
 &
À·
,

303 c⁄° 
tu∂e_t
 &
right
)

305 
qã°_lo_tu∂e
* 
	glo
 = 
Æig√d_ˇ°
<qã°_lo_tu∂e>(
À·
.
d©a
);

306 
qã°_d_tu∂e
* 
	gd
 = 
Æig√d_ˇ°
<qã°_d_tu∂e>(
right
.
d©a
);

307 
qã°_joö_d_tu∂e
* 
	gªt
 = 
Æig√d_ˇ°
<qã°_joö_d_tu∂e>(
de°
.
d©a
);

309 
°r˝y
(
ªt
->
D_DATE
, 
d
->D_DATE);

310 
	gªt
->
	gD_DATEKEY
 = 
d
->
D_DATEKEY
;

311 
	gªt
->
	gLO_ORDERDATE
 = 
lo
->
LO_ORDERDATE
;

312 
	gªt
->
	gLO_ORDERKEY
 = 
lo
->
LO_ORDERKEY
;

313 
	gªt
->
	gLO_LINENUMBER
 = 
lo
->
LO_LINENUMBER
;

314 
	gªt
->
	gLO_REVENUE
 = 
lo
->
LO_REVENUE
;

316 
TRACE
 ( 
TRACE_RECORD_FLOW
, "JOIN %d %d %d %d {%s} %d\n",
ªt
->
LO_LINENUMBER
,ªt->
LO_ORDERKEY
,ªt->
LO_ORDERDATE
,Ñë->
D_DATEKEY
,Ñë->
D_DATE
,Ñë->
LO_REVENUE
);

319 
vútuÆ
 
qã°_lo_d_joö_t
* 
˛⁄e
() const {

320  
√w
 
qã°_lo_d_joö_t
(*
this
);

323 
vútuÆ
 
c_°r
 
to_°rög
() const {

330 
	gqã°_lo_d_key_com∑ª_t
 : 
public
 
key_com∑ª_t


332 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

333 * 
	ga
 = 
Æig√d_ˇ°
<>(
key1
);

334 * 
	gb
 = 
Æig√d_ˇ°
<>(
key2
);

336  (*
	ga
Ë- (*
	gb
);

338 
vútuÆ
 
qã°_lo_d_key_com∑ª_t
* 
˛⁄e
() const {

339  
√w
 
qã°_lo_d_key_com∑ª_t
(*
this
);

347 ˛as†
	cssb_qã°_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


349 
public
:

351 
	$begö
() {

352 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** qtest ANSWER ...\n");

353 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** ...\n");

356 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

357 
¥oje˘ed_tu∂e
 *
tu∂e
;

358 
tu∂e
 = 
Æig√d_ˇ°
<
¥oje˘ed_tu∂e
>(
ouçut
.
d©a
);

364 
	`TRACE
 ( 
TRACE_QUERY_RESULTS
, "PROCESS %d %d %d %d {%s} %d\n", 
tu∂e
->
LO_LINENUMBER
,Åu∂e->
LO_ORDERKEY
,Åu∂e->
LO_ORDERDATE
,Åu∂e->
D_DATEKEY
,Åu∂e->
D_DATE
,Åu∂e->
LO_REVENUE
);

365 
	}
}

375 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qpùe_qã°
(c⁄° 
x˘_id
, 
qã°_öput_t
& 
ö
) {

376 
	`TRACE
(
TRACE_ALWAYS
, "********** qtest *********\n");

378 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

379 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

382 
tu∂e_fifo
* 
d_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
qã°_d_tu∂e
));

383 
tsˇn_∑ckë_t
* 
d_tsˇn_∑ckë
 =

384 
√w
 
	`tsˇn_∑ckë_t
("TSCAN DATE",

385 
d_out_buf„r
,

386 
√w
 
	`qã°_d©e_tsˇn_fûãr_t
(
this
, 
ö
),

387 
this
->
	`db
(),

388 
_pd©e_desc
.
	`gë
(),

389 
px˘


394 
tu∂e_fifo
* 
s‹t_d©e_out
 = 
√w
 
	`tu∂e_fifo
( (
qã°_d_tu∂e
));

395 
∑ckë_t
* 
s‹t_d©e_∑ckë
 =

396 
√w
 
	`s‹t_∑ckë_t
("ORDER BY D_DATEKEY",

397 
s‹t_d©e_out
,

398 
√w
 
	`åivül_fûãr_t
( (
qã°_d_tu∂e
)),

399 
√w
 
	`qã°_d©e_key_exåa˘‹_t
(),

400 
√w
 
	`qã°_d©e_key_com∑ª_t
(),

401 
d_tsˇn_∑ckë
);

404 
tu∂e_fifo
* 
lo_out_buf„r
 = 
√w
 
	`tu∂e_fifo
( (
qã°_lo_tu∂e
));

405 
tsˇn_∑ckë_t
* 
lo_tsˇn_∑ckë
 =

406 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEORDER",

407 
lo_out_buf„r
,

408 
√w
 
	`qã°_löe‹dî_tsˇn_fûãr_t
(
this
),

409 
this
->
	`db
(),

410 
_∂öe‹dî_desc
.
	`gë
(),

411 
px˘


416 
tu∂e_fifo
* 
s‹t_lo_out
 = 
√w
 
	`tu∂e_fifo
( (
qã°_lo_tu∂e
));

417 
∑ckë_t
* 
s‹t_lo_∑ckë
 =

418 
√w
 
	`s‹t_∑ckë_t
("ORDER BY LO_ORDERDATE",

419 
s‹t_lo_out
,

420 
√w
 
	`åivül_fûãr_t
( (
qã°_lo_tu∂e
)),

421 
√w
 
	`qã°_lo_key_exåa˘‹_t
(),

422 
√w
 
	`qã°_lo_key_com∑ª_t
(),

423 
lo_tsˇn_∑ckë
);

426 
tu∂e_fifo
* 
joö_lo_d_out
 = 
√w
 
	`tu∂e_fifo
( (
qã°_joö_d_tu∂e
));

427 
∑ckë_t
* 
joö_lo_d_∑ckë
 =

428 
√w
 
	`s‹t_mîge_joö_∑ckë_t
("Lineorder - Date JOIN",

429 
joö_lo_d_out
,

430 
√w
 
	`åivül_fûãr_t
( (
qã°_joö_d_tu∂e
)),

431 
s‹t_lo_∑ckë
,

432 
s‹t_d©e_∑ckë
,

433 
√w
 
	`qã°_lo_d_joö_t
(),

434 
√w
 
	`qã°_lo_d_key_com∑ª_t
());

436 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

437 
lo_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

438 
d_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

439 
s‹t_d©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

440 
s‹t_lo_∑ckë
->
	`assign_quîy_°©e
(
qs
);

441 
joö_lo_d_∑ckë
->
	`assign_quîy_°©e
(
qs
);

444 
ssb_qã°_¥o˚ss_tu∂e_t
 
±
;

446 
	`TRACE
(
TRACE_ALWAYS
, "********** Executing Q TEST *********\n");

448 
	`¥o˚ss_quîy
(
joö_lo_d_∑ckë
, 
±
);

449 
dp
->
	`quîy_°©e_de°roy
(
qs
);

451  (
RCOK
);

452 
	}
}

455 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/qpipe_ssb_xct.cpp

32 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

33 
	~"qpùe/°ages.h
"

34 
	~"qpùe/qcomm⁄.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
ssb
);

76 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q∑π
);

77 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
qd©e
);

78 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
qsuµlõr
);

79 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
qcu°omî
);

80 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
qlöe‹dî
);

81 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q1_1
);

82 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q1_2
);

83 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q1_3
);

84 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q2_1
);

85 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q2_2
);

86 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q2_3
);

87 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q3_1
);

88 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q3_2
);

89 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q3_3
);

90 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q3_4
);

91 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q4_1
);

92 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q4_2
);

93 
DEFINE_QPIPE_TRX
(
Sh‹eSSBEnv
,
q4_3
);

104 
w_rc_t
 
	gSh‹eSSBEnv
::
	$run_⁄e_qpùe_x˘
(
Reque°
* 
¥eque°
)

108 
ty≥
 = 
¥eque°
->
	`ty≥
();

109 
	`as£π
 (
ty≥
 >
XCT_QPIPE_SSB_MIX
);

110 i‡(
ty≥
 =
XCT_QPIPE_SSB_MIX
) {

111 
ty≥
 = 
	`abs
(
smthªad_t
::
	`me
()->
	`ønd
()%22);

115 
ty≥
 -(
XCT_QPIPE_SSB_MIX
 - 
XCT_SSB_MIX
);

118 
ty≥
) {

121 
XCT_SSB_QDATE
:

122  (
	`run_qpùe_qd©e
(
¥eque°
));

124 
XCT_SSB_QPART
:

125  (
	`run_qpùe_q∑π
(
¥eque°
));

127 
XCT_SSB_QSUPPLIER
:

128  (
	`run_qpùe_qsuµlõr
(
¥eque°
));

130 
XCT_SSB_QCUSTOMER
:

131  (
	`run_qpùe_qcu°omî
(
¥eque°
));

133 
XCT_SSB_QLINEORDER
:

134  (
	`run_qpùe_qlöe‹dî
(
¥eque°
));

136 
XCT_SSB_Q1_1
:

137  (
	`run_qpùe_q1_1
(
¥eque°
));

139 
XCT_SSB_Q1_2
:

140  (
	`run_qpùe_q1_2
(
¥eque°
));

142 
XCT_SSB_Q1_3
:

143  (
	`run_qpùe_q1_3
(
¥eque°
));

145 
XCT_SSB_Q2_1
:

146  (
	`run_qpùe_q2_1
(
¥eque°
));

148 
XCT_SSB_Q2_2
:

149  (
	`run_qpùe_q2_2
(
¥eque°
));

151 
XCT_SSB_Q2_3
:

152  (
	`run_qpùe_q2_3
(
¥eque°
));

154 
XCT_SSB_Q3_1
:

155  (
	`run_qpùe_q3_1
(
¥eque°
));

157 
XCT_SSB_Q3_2
:

158  (
	`run_qpùe_q3_2
(
¥eque°
));

160 
XCT_SSB_Q3_3
:

161  (
	`run_qpùe_q3_3
(
¥eque°
));

163 
XCT_SSB_Q3_4
:

164  (
	`run_qpùe_q3_4
(
¥eque°
));

166 
XCT_SSB_Q4_1
:

167  (
	`run_qpùe_q4_1
(
¥eque°
));

169 
XCT_SSB_Q4_2
:

170  (
	`run_qpùe_q4_2
(
¥eque°
));

172 
XCT_SSB_Q4_3
:

173  (
	`run_qpùe_q4_3
(
¥eque°
));

177 
	`TRACE
–
TRACE_ALWAYS
, "UnknownÅransaction\n");

179  (
RCOK
);

180 
	}
}

187 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/ssb/shore_ssb_client.cpp

31 
	~"w‹klﬂd/ssb/sh‹e_ssb_˛õ¡.h
"

33 
ENTER_NAMESPACE
(
ssb
);

42 
	gba£löe_ssb_˛õ¡_t
::
	$ba£löe_ssb_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

43 
Sh‹eSSBEnv
* 
ív
,

44 c⁄° 
MósuªmítTy≥
 
aTy≥
,

45 c⁄° 
åxid
,

46 c⁄° 
numOfTrxs
,

47 
¥o˚ss‹id_t
 
≠rsid
,

48 c⁄° 
£lID
, c⁄° 
qf
)

49 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

50 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

52 
	`as£π
 (
ív
);

53 
	`as£π
 (
_id
>=0 && 
_qf
>0);

56 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

57 
	`as£π
 (
_w‹kî
);

58 
	}
}

60 
	gba£löe_ssb_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

63 
°m≠
.
	`˛ór
();

66 
°m≠
[
XCT_SSB_MIX
] = "SSB-Mix";

83 #ifde‡
CFG_QPIPE


85 
°m≠
[
XCT_QPIPE_SSB_MIX
] = "QPIPE-SSB-MIX";

87 
uöt
 
qpùeba£
 = 
XCT_QPIPE_SSB_MIX
 - 
XCT_SSB_MIX
;

89 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q1_1
] = "QPIPE-SSB-Q1_1";

90 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q1_2
] = "QPIPE-SSB-Q1_2";

91 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q1_3
] = "QPIPE-SSB-Q1_3";

92 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q2_1
] = "QPIPE-SSB-Q2_1";

93 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q2_2
] = "QPIPE-SSB-Q2_2";

94 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q2_3
] = "QPIPE-SSB-Q2_3";

95 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q3_1
] = "QPIPE-SSB-Q3_1";

96 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q3_2
] = "QPIPE-SSB-Q3_2";

97 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q3_3
] = "QPIPE-SSB-Q3_3";

98 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q3_4
] = "QPIPE-SSB-Q3_4";

99 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q4_1
] = "QPIPE-SSB-Q4_1";

100 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q4_2
] = "QPIPE-SSB-Q4_2";

101 
°m≠
[
qpùeba£
 + 
XCT_SSB_Q4_3
] = "QPIPE-SSB-Q4_3";

102 
°m≠
[
qpùeba£
 + 
XCT_SSB_QPART
] = "QPIPE-SSB-QPART";

103 
°m≠
[
qpùeba£
 + 
XCT_SSB_QDATE
] = "QPIPE-SSB-QDATE";

104 
°m≠
[
qpùeba£
 + 
XCT_SSB_QSUPPLIER
] = "QPIPE-SSB-QSUPPLIER";

105 
°m≠
[
qpùeba£
 + 
XCT_SSB_QCUSTOMER
] = "QPIPE-SSB-QCUSTOMER";

106 
°m≠
[
qpùeba£
 + 
XCT_SSB_QLINEORDER
] = "QPIPE-SSB-QLINEORDER";

112  (
°m≠
.
	`size
());

113 
	}
}

127 
w_rc_t
 
	gba£löe_ssb_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

130 
åx_ªsu…_tu∂e_t
 
©π
;

131 
boﬁ
 
bWake
 = 
Ál£
;

132 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

133 
	`TRACE
–
TRACE_TRX_FLOW
, "Sleeping\n");

134 
©π
.
	`£t_nŸify
(
c
);

135 
bWake
 = 
åue
;

139 
£lid
 = 
_£lid
;

144 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

145 
tid_t
 
©id
;

146 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
£lid
);

149 
	`as£π
 (
_w‹kî
);

150 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

151  (
RCOK
);

152 
	}
}

155 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/shore_ssb_env.cpp

31 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

32 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

34 
	~"w‹klﬂd/ssb/ssb_øndom.h
"

36 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

37 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

41 
usög
 
«me•a˚
 
	gdbgíssb
;

44 
ENTER_NAMESPACE
(
sh‹e
);

45 
DEFINE_ROW_CACHE_TLS
(
ssb
, 
∑π
);

46 
DEFINE_ROW_CACHE_TLS
(
ssb
, 
suµlõr
);

47 
DEFINE_ROW_CACHE_TLS
(
ssb
, 
d©e
);

48 
DEFINE_ROW_CACHE_TLS
(
ssb
, 
cu°omî
);

49 
DEFINE_ROW_CACHE_TLS
(
ssb
, 
löe‹dî
);

50 
EXIT_NAMESPACE
(
sh‹e
);

53 
ENTER_NAMESPACE
(
ssb
);

72 c⁄° 
	gDIVISOR
 = 50;

75 c⁄° 
	gLINEORDER_COUNT
 = 10000;

77 c⁄° 
	gLINEORDER_UNIT_PER_SF
 = 
LINEORDER_PER_SF
;

79 
	gSh‹eSSBEnv
::
checkpoöãr_t
 : 
public
 
thªad_t


81 
Sh‹eSSBEnv
* 
_ív
;

82 
checkpoöãr_t
(
Sh‹eSSBEnv
* 
ív
)

83 : 
thªad_t
("SSB Lﬂd Checkpoöãr"), 
_ív
(
ív
) { }

84 
vútuÆ
 
w‹k
();

87 ˛as†
	cSh‹eSSBEnv
::
èbÀ_buûdî_t
 : 
public
 
thªad_t


89 
Sh‹eSSBEnv
* 
_ív
;

90 
	m_löe‹dî_°¨t
;

91 
	m_löe‹dî_íd
;

92 
	m_sf
;

94 
	mpublic
:

95 
	$èbÀ_buûdî_t
(
Sh‹eSSBEnv
* 
ív
, c⁄° 
id
,

96 c⁄° 
löe‹dî_°¨t
, c⁄° 
löe‹dî_íd
,

97 c⁄° 
sf
)

98 : 
	`thªad_t
(
	`c_°r
("SSB L-%d",
id
)), 
	`_ív
(
ív
),

99 
	`_löe‹dî_°¨t
(
löe‹dî_°¨t
), 
	`_löe‹dî_íd
(
löe‹dî_íd
),

100 
	$_sf
(
sf
)

102 
vútuÆ
 
	`w‹k
();

103 
	}
};

105 
	gSh‹eSSBEnv
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t


107 
Sh‹eSSBEnv
* 
_ív
;

108 
	g_sf
;

109 
	g_lﬂdî_cou¡
;

110 
	g_löe‹dî_≥r_thªad
;

114 
èbÀ_¸ót‹_t
(
Sh‹eSSBEnv
* 
ív
, c⁄° 
sf
, c⁄° 
lﬂdî_cou¡
,

115 c⁄° 
löe‹dî_≥r_thªad
)

116 : 
thªad_t
("SSB C"),

117 
_ív
(
ív
), 
_sf
(
sf
),

118 
_lﬂdî_cou¡
(
lﬂdî_cou¡
),

119 
_löe‹dî_≥r_thªad
(
löe‹dî_≥r_thªad
)

121 
vútuÆ
 
w‹k
();

125 
	gSh‹eSSBEnv
::
checkpoöãr_t
::
	$w‹k
()

127 
boﬁ
 vﬁ©ûe* 
lﬂded
 = &
_ív
->
_lﬂded
;

128 !*
lﬂded
) {

129 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

130 
i
=0; i < 60 && ! *
lﬂded
; i++) {

131 ::
	`¶ìp
(1);

134 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint - start\n");

135 
_ív
->
	`checkpoöt
();

136 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint -Énd\n");

138 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

139 
	}
}

142 
	gSh‹eSSBEnv
::
èbÀ_¸ót‹_t
::
	$w‹k
()

153 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

154 
	`W_COERCE
(
_ív
->
_µ¨t_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

155 
	`W_COERCE
(
_ív
->
_psuµlõr_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

156 
	`W_COERCE
(
_ív
->
_pd©e_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

157 
	`W_COERCE
(
_ív
->
_pcu°omî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

158 
	`W_COERCE
(
_ív
->
_∂öe‹dî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

159 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

162 
_ív
->
_µ¨t_m™
->
	`ªgi°î_èbÀ_m™
();

163 
_ív
->
_psuµlõr_m™
->
	`ªgi°î_èbÀ_m™
();

164 
_ív
->
_pd©e_m™
->
	`ªgi°î_èbÀ_m™
();

165 
_ív
->
_pcu°omî_m™
->
	`ªgi°î_èbÀ_m™
();

166 
_ív
->
_∂öe‹dî_m™
->
	`ªgi°î_èbÀ_m™
();

171 
p›uœã_ba£löe_öput_t
 
ö
 = {
_sf
, 
_lﬂdî_cou¡
, 
DIVISOR
,

172 
_löe‹dî_≥r_thªad
};

174 
w_rc_t
 
e
 = 
RCOK
;

176 
log_•a˚_√eded
 = 0;

177 
ªåyba£löe
:

178 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

179 #ifde‡
USE_SHORE_6


180 if(
log_•a˚_√eded
 > 0) {

181 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

184 
e
 = 
_ív
->
	`x˘_p›uœã_ba£löe
(0, 
ö
);

186 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåyba£löe
,
_ív
);

188 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

189 
	`W_COERCE
(
_ív
->
	`_po°_öô_im∂
());

190 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

191 
	}
}

196 
	glo_com∂ëed
 = 0;

198 
	gSh‹eSSBEnv
::
èbÀ_buûdî_t
::
	$w‹k
()

200 
w_rc_t
 
e
 = 
RCOK
;

203 
i
=
_löe‹dî_°¨t
 ; i < 
_löe‹dî_íd
; i+=
LO_POP_UNIT
) {

204 
_ív
->
	`gë_mósuª
(Ë!
MST_MEASURE
) {

205 
	`u¶ìp
(1000);

208 
oid
 = 
i
;

209 
p›uœã_some_löe‹dîs_öput_t
 
ö
 = {
oid
};

211 
oid
 = 
°d
::
	`mö
(
_löe‹dî_íd
-
i
,
LO_POP_UNIT
);

213 
log_•a˚_√eded
 = 0;

214 
ªåy∑π
:

215 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

216 #ifde‡
USE_SHORE_6


217 if(
log_•a˚_√eded
 > 0) {

218 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

221 
e
 = 
_ív
->
	`x˘_p›uœã_some_löe‹dîs
(
oid
, 
ö
);

223 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåy∑π
,
_ív
);

225 
nvÆ
 = 
	`©omic_add_64_nv
(&
lo_com∂ëed
,
oid
);

227 i‡(
nvÆ
 % 
LINEORDER_COUNT
 == 0) {

228 
	`TRACE
–
TRACE_ALWAYS
, "Lineorder %d/%d (%.0f%%)\n",

229 
nvÆ
, ()(
_sf
*
LINEORDER_UNIT_PER_SF
),

230 ()(100*
nvÆ
)/()(
_sf
*
LINEORDER_UNIT_PER_SF
));

234 
	`TRACE
–
TRACE_ALWAYS
, "Föished Löe‹dî %d .. %d \n", 
_löe‹dî_°¨t
, 
_löe‹dî_íd
);

269 
	}
}

280 
	gSh‹eSSBEnv
::
	$Sh‹eSSBEnv
()

281 : 
	$Sh‹eEnv
()

283 
_sˇlög_Á˘‹
 = 
SSB_SCALING_FACTOR
;

285 #ifde‡
CFG_QPIPE


288 
	`£t_sched_pﬁicy
(
NULL
);

291 
	`ªgi°î_°age_c⁄èöîs
();

293 
	}
}

296 
	gSh‹eSSBEnv
::~
	$Sh‹eSSBEnv
()

298 
	}
}

302 
w_rc_t
 
Sh‹eSSBEnv
::
	$lﬂd_schema
()

305 
_µ¨t_desc
 = 
√w
 
	`∑π_t
(
	`gë_pd
());

306 
_psuµlõr_desc
 = 
√w
 
	`suµlõr_t
(
	`gë_pd
());

307 
_pd©e_desc
 = 
√w
 
	`d©e_t
(
	`gë_pd
());

308 
_pcu°omî_desc
 = 
√w
 
	`cu°omî_t
(
	`gë_pd
());

309 
_∂öe‹dî_desc
 = 
√w
 
	`löe‹dî_t
(
	`gë_pd
());

312 
_µ¨t_m™
 = 
√w
 
	`∑π_m™_im∂
(
_µ¨t_desc
.
	`gë
());

313 
_psuµlõr_m™
 = 
√w
 
	`suµlõr_m™_im∂
(
_psuµlõr_desc
.
	`gë
());

314 
_pd©e_m™
 = 
√w
 
	`d©e_m™_im∂
(
_pd©e_desc
.
	`gë
());

315 
_pcu°omî_m™
 = 
√w
 
	`cu°omî_m™_im∂
(
_pcu°omî_desc
.
	`gë
());

316 
_∂öe‹dî_m™
 = 
√w
 
	`löe‹dî_m™_im∂
(
_∂öe‹dî_desc
.
	`gë
());

318  (
RCOK
);

319 
	}
}

322 
w_rc_t
 
	gSh‹eSSBEnv
::
	$lﬂd_™d_ªgi°î_fids
()

324 
	`W_DO
(
_µ¨t_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

325 
	`W_DO
(
_psuµlõr_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

326 
	`W_DO
(
_pd©e_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

327 
	`W_DO
(
_pcu°omî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

328 
	`W_DO
(
_∂öe‹dî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

329  (
RCOK
);

330 
	}
}

333 #ifde‡
CFG_QPIPE


341 
pﬁicy_t
* 
	gSh‹eSSBEnv
::
	$gë_sched_pﬁicy
()

343 
	`CRITICAL_SECTION
(
öô_cs
,
_lﬂd_muãx
);

344  (
_sched_pﬁicy
.
	`gë
());

345 
	}
}

347 
pﬁicy_t
* 
	gSh‹eSSBEnv
::
	$£t_sched_pﬁicy
(c⁄° * 
•ﬁicy
)

349 
	`CRITICAL_SECTION
(
öô_cs
,
_lﬂd_muãx
);

350 i‡(
•ﬁicy
) {

352 
	`TRACE
–
TRACE_ALWAYS
, "SëtögÖﬁicy (%s)\n", 
•ﬁicy
);

354 i‡–!
	`°rcmp
(
•ﬁicy
, "OS") ) {

355 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_os_t
();

356  (
_sched_pﬁicy
);

359 i‡–!
	`°rcmp
(
•ﬁicy
, "RR_CPU") ) {

360 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_º_˝u_t
();

361  (
_sched_pﬁicy
);

364 i‡–!
	`°rcmp
(
•ﬁicy
, "QUERY_CPU") ) {

365 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_quîy_˝u_t
();

366  (
_sched_pﬁicy
);

369 i‡–!
	`°rcmp
(
•ﬁicy
, "RR_MODULE") ) {

370 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_º_moduÀ_t
();

371  (
_sched_pﬁicy
);

375 
	`TRACE
–
TRACE_ALWAYS
, "Default schedulingÖolicy (OS)\n");

376 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_os_t
();

377  (
_sched_pﬁicy
);

378 
	}
}

391 
	gSh‹eSSBEnv
::
	$öfo
() const

393 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
_sˇlög_Á˘‹
);

395 
	}
}

407 
	gSh‹eSSBEnv
::
	$°©i°ics
()

410 
	}
}

422 
	gSh‹eSSBEnv
::
	$°¨t
()

424  (
Sh‹eEnv
::
	`°¨t
());

425 
	}
}

427 
	gSh‹eSSBEnv
::
	$°›
()

429  (
Sh‹eEnv
::
	`°›
());

430 
	}
}

450 
w_rc_t
 
	gSh‹eSSBEnv
::
	$lﬂdd©a
()

453 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

454 i‡(
_lﬂded
) {

455 
	`TRACE
–
TRACE_TRX_FLOW
,

457  (
RCOK
);

459 
	`CRITICAL_SECTION
(
sˇÀ_cs
, 
_sˇlög_muãx
);

462 
	`ssb_dbgí_öô
();

465 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

475 
lﬂdîs_to_u£
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-loaders",10);

480 
tŸÆ_löe‹dîs
 = 
_sˇlög_Á˘‹
*
LINEORDER_UNIT_PER_SF
;

481 
löe‹dîs_≥r_thªad
 = 
tŸÆ_löe‹dîs
/
lﬂdîs_to_u£
;

485 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

486 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
, 
_sˇlög_Á˘‹
, 
lﬂdîs_to_u£
,

487 
löe‹dîs_≥r_thªad
);

488 
tc
->
	`f‹k
();

489 
tc
->
	`joö
();

493 
gu¨d
<
checkpoöãr_t
> 
	`chk
(
√w
 
	`checkpoöãr_t
(
this
));

494 
chk
->
	`f‹k
();

497 
	`TRACE
–
TRACE_ALWAYS
, "Fúög u∞%dÜﬂdî†..\n", 
lﬂdîs_to_u£
);

498 
¨øy_gu¨d_t
< 
gu¨d
<
èbÀ_buûdî_t
> > 
	`lﬂdîs
(
√w
 gu¨d<èbÀ_buûdî_t>[
lﬂdîs_to_u£
]);

499 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

500 
löe‹dî_°¨t
 = (
i
*
löe‹dîs_≥r_thªad
Ë+ 
DIVISOR
 + 1;

501 
löe‹dî_íd
 = ((
i
+1)*
löe‹dîs_≥r_thªad
 > 
tŸÆ_löe‹dîs
) ?

502 
tŸÆ_löe‹dîs
 : (
i
+1)*
löe‹dîs_≥r_thªad
;

503 
	`as£π
 (
löe‹dî_°¨t
 <
löe‹dî_íd
);

510 
lﬂdîs
[
i
] = 
√w
 
	`èbÀ_buûdî_t
(
this
, i,

511 
löe‹dî_°¨t
, 
löe‹dî_íd
,

512 
_sˇlög_Á˘‹
);

513 
lﬂdîs
[
i
]->
	`f‹k
();

516 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

517 
lﬂdîs
[
i
]->
	`joö
();

520 
time_t
 
t°›
 = 
	`time
(
NULL
);

523 
	`TRACE
–
TRACE_STATISTICS
, "Loading finished. %dÅablesÜoaded in (%d) secs...\n",

524 
SHORE_SSB_TABLES
, (
t°›
 - 
t°¨t
));

526 
dbgíssb
::
	`‰ì_asc_d©e
();

529 
_lﬂded
 = 
åue
;

530 
chk
->
	`joö
();

532  (
RCOK
);

533 
	}
}

545 
w_rc_t
 
	gSh‹eSSBEnv
::
	$check_c⁄si°ícy
()

547  (
RCOK
);

548 
	}
}

560 
w_rc_t
 
	gSh‹eSSBEnv
::
	$w¨mup
()

562  (
	`check_c⁄si°ícy
());

563 
	}
}

574 
	gSh‹eSSBEnv
::
	$dump
()

577 
	}
}

580 
	gSh‹eSSBEnv
::
	$c⁄f
()

583 
Sh‹eEnv
::
	`c⁄f
();

584 
	`upd_sf
();

586 
	}
}

605 
	gSh‹eSSBEnv
::
	$po°_öô
()

607 
	`c⁄f
();

609 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

610 
w_rc_t
 
rc
 = 
	`_po°_öô_im∂
();

611 if(
rc
.
	`is_îr‹
()) {

612 
	`db
()->
	`ab‹t_x˘
();

613  (
rc
.
	`îr_num
());

616 
	`TRACE
–
TRACE_ALWAYS
, "-> Done\n");

617 
	`db
()->
	`commô_x˘
();

620 
	}
}

631 
w_rc_t


632 
	gSh‹eSSBEnv
::
	$_po°_öô_im∂
()

634 
	`TRACE
–
TRACE_DEBUG
, "So far,ÇothingÅoÖad in SSB..\n");

635  (
RCOK
);

636 
	}
}

640 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/shore_ssb_schema.cpp

65 
	~"w‹klﬂd/ssb/sh‹e_ssb_schema.h
"

67 
usög
 
«me•a˚
 
	gsh‹e
;

69 
ENTER_NAMESPACE
(
ssb
);

71 
	gsuµlõr_t
::
	$suµlõr_t
(c⁄° 
uöt4_t
& 
pd
) :

72 
	`èbÀ_desc_t
("SUPPLIER", 
SSB_SUPPLIER_FCOUNT
, 
pd
)

75 
_desc
[0].
	`£tup
(
SQL_INT
, "S_SUPPKEY");

76 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "S_NAME", 25);

77 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "S_ADDRESS", 25);

78 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "S_CITY", 10);

79 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "S_NATION", 15);

80 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "S_REGION", 12);

81 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "S_PHONE", 15);

83 
uöt
 
keys
[1] = {0};

86 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

87 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

90 
	`¸óã_¥im¨y_idx_desc
("S_IDX", 0, 
keys
, 1);

92 
	}
}

95 
	g∑π_t
::
	$∑π_t
(c⁄° 
uöt4_t
& 
pd
) :

96 
	`èbÀ_desc_t
("PART", 
SSB_PART_FCOUNT
, 
pd
)

99 
_desc
[0].
	`£tup
(
SQL_INT
, "P_PARTKEY");

100 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "P_NAME", 22);

101 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "P_MFGR", 6);

102 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "P_CATEGORY", 7);

103 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "P_BRAND", 9);

104 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "P_COLOR", 11);

105 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "P_TYPE", 25);

106 
_desc
[7].
	`£tup
(
SQL_INT
, "P_SIZE");

107 
_desc
[8].
	`£tup
(
SQL_FIXCHAR
, "P_CONTAINER", 10);

109 
uöt
 
keys
[1] = { 0 };

111 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

112 
	`TRACE
(
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

114 
	`¸óã_¥im¨y_idx_desc
("P_IDX", 0, 
keys
, 1);

116 
	}
}

119 
	gcu°omî_t
::
	$cu°omî_t
(c⁄° 
uöt4_t
& 
pd
) :

120 
	`èbÀ_desc_t
("CUSTOMER", 
SSB_CUSTOMER_FCOUNT
, 
pd
)

123 
_desc
[0].
	`£tup
(
SQL_INT
, "C_CUSTKEY");

124 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "C_NAME", 25);

125 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "C_ADDRESS", 25);

126 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "C_CITY", 10);

127 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "C_NATION", 15);

128 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "C_REGION", 12);

129 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "C_PHONE", 15);

130 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "C_MKTSEGMENT", 10);

132 
uöt
 
keys
[1] = { 0 };

137 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

138 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

141 
	`¸óã_¥im¨y_idx_desc
("C_IDX", 0, 
keys
, 1);

143 
	}
}

145 
	gd©e_t
::
	$d©e_t
(c⁄° 
uöt4_t
& 
pd
) :

146 
	`èbÀ_desc_t
("DATE", 
SSB_DATE_FCOUNT
, 
pd
)

149 
_desc
[0].
	`£tup
(
SQL_INT
, "D_DATEKEY");

150 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "D_DATE", 18);

151 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "D_DAYOFWEEK", 10);

152 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "D_MONTH", 9);

153 
_desc
[4].
	`£tup
(
SQL_INT
, "D_YEAR");

154 
_desc
[5].
	`£tup
(
SQL_INT
, "D_YEARMONTHNUM");

155 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "D_YEARMONTH", 7);

156 
_desc
[7].
	`£tup
(
SQL_INT
, "D_DAYNUMINWEEK");

157 
_desc
[8].
	`£tup
(
SQL_INT
, "D_DATNUMINMONTH");

158 
_desc
[9].
	`£tup
(
SQL_INT
, "D_DATNUMINYEAR");

159 
_desc
[10].
	`£tup
(
SQL_INT
, "D_MONTHNUMINYEAR");

160 
_desc
[11].
	`£tup
(
SQL_INT
, "D_WEEKNUMINYEAR");

161 
_desc
[12].
	`£tup
(
SQL_FIXCHAR
, "D_SELLINGSEASON", 12);

162 
_desc
[13].
	`£tup
(
SQL_FIXCHAR
, "D_LASTDAYINWEEKFL",2);

163 
_desc
[14].
	`£tup
(
SQL_FIXCHAR
, "D_LASTDAYINMONTHFL",2);

164 
_desc
[15].
	`£tup
(
SQL_FIXCHAR
, "D_HOLIDAYFL",2);

165 
_desc
[16].
	`£tup
(
SQL_FIXCHAR
, "D_WEEKDAYFL",2);

167 
uöt
 
keys
[1] = { 0 };

170 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

171 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

174 
	`¸óã_¥im¨y_idx_desc
("D_IDX", 0, 
keys
, 1);

176 
	}
}

183 
	glöe‹dî_t
::
	$löe‹dî_t
(c⁄° 
uöt4_t
& 
pd
) :

184 
	`èbÀ_desc_t
("LINEORDER", 
SSB_LINEORDER_FCOUNT
, 
pd
)

187 
_desc
[0].
	`£tup
(
SQL_INT
, "LO_ORDERKEY");

188 
_desc
[1].
	`£tup
(
SQL_INT
, "LO_LINENUMBER");

189 
_desc
[2].
	`£tup
(
SQL_INT
, "LO_CUSTKEY");

190 
_desc
[3].
	`£tup
(
SQL_INT
, "LO_PARTKEY");

191 
_desc
[4].
	`£tup
(
SQL_INT
, "LO_SUPPKEY");

192 
_desc
[5].
	`£tup
(
SQL_INT
, "LO_ORDERDATE");

193 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "LO_ORDERPRIORITY", 15);

194 
_desc
[7].
	`£tup
(
SQL_INT
, "LO_SHIPPRIORITY");

195 
_desc
[8].
	`£tup
(
SQL_INT
, "LO_QUANTITY");

196 
_desc
[9].
	`£tup
(
SQL_INT
, "LO_EXTENDEDPRICE");

197 
_desc
[10].
	`£tup
(
SQL_INT
, "LO_ORDTOTALPRICE");

198 
_desc
[11].
	`£tup
(
SQL_INT
, "LO_DISCOUNT");

199 
_desc
[12].
	`£tup
(
SQL_INT
, "LO_REVENUE");

200 
_desc
[13].
	`£tup
(
SQL_INT
, "LO_SUPPLYCOST");

201 
_desc
[14].
	`£tup
(
SQL_INT
, "LO_TAX");

202 
_desc
[15].
	`£tup
(
SQL_INT
, "LO_COMMITDATE");

203 
_desc
[16].
	`£tup
(
SQL_FIXCHAR
,"LO_SHIPMODE", 10);

205 
uöt
 
keys
[2] = {0, 1};

207 
uöt
 
fkeys1
[1] = { 0 };

210 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

211 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

214 
	`¸óã_¥im¨y_idx_desc
("LO_IDX", 0, 
keys
, 2);

216 
	`¸óã_ödex_desc
("LO_IDX_ORDERKEY", 0, 
fkeys1
, 1, 
Ál£
);

218 
	}
}

221 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/shore_ssb_schema_man.cpp

35 
	~"w‹klﬂd/ssb/sh‹e_ssb_schema_m™.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
ssb
);

56 
w_rc_t
 
	g∑π_m™_im∂
::
	$p_ödex_¥obe
(
ss_m
* 
db
,

57 
∑π_tu∂e
* 
±u∂e
,

58 c⁄° 
p_∑πkey
)

60 
	`as£π
(
±u∂e
);

62 
±u∂e
->
	`£t_vÆue
(0, 
p_∑πkey
);

63  (
	`ödex_¥obe_by_«me
(
db
, "P_IDX", 
±u∂e
));

64 
	}
}

72 
w_rc_t
 
	gsuµlõr_m™_im∂
::
	$s_ödex_¥obe
(
ss_m
* 
db
,

73 
suµlõr_tu∂e
* 
±u∂e
,

74 c⁄° 
s_suµkey
)

76 
	`as£π
 (
±u∂e
);

77 
±u∂e
->
	`£t_vÆue
(0, 
s_suµkey
);

78  (
	`ödex_¥obe_by_«me
(
db
, "S_IDX", 
±u∂e
));

79 
	}
}

134 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_ödex_¥obe
(
ss_m
* 
db
,

135 
cu°omî_tu∂e
* 
±u∂e
,

136 c⁄° 
c_cu°key
)

138 
	`as£π
 (
±u∂e
);

139 
±u∂e
->
	`£t_vÆue
(0, 
c_cu°key
);

140  (
	`ödex_¥obe_by_«me
(
db
, "C_IDX", 
±u∂e
));

141 
	}
}

159 
w_rc_t
 
	gd©e_m™_im∂
::
	$d_ödex_¥obe
(
ss_m
* 
db
,

160 
d©e_tu∂e
* 
±u∂e
,

161 c⁄° 
d_d©ekey
)

163 
	`as£π
 (
±u∂e
);

164 
±u∂e
->
	`£t_vÆue
(0, 
d_d©ekey
);

165  (
	`ödex_¥obe_by_«me
(
db
, "D_IDX", 
±u∂e
));

166 
	}
}

174 
w_rc_t
 
	glöe‹dî_m™_im∂
::
	$lo_ödex_¥obe
(
ss_m
* 
db
,

175 
löe‹dî_tu∂e
* 
±u∂e
,

176 c⁄° 
lo_‹dîkey
,

177 c⁄° 
lo_löíumbî
)

179 
	`as£π
 (
±u∂e
);

180 
±u∂e
->
	`£t_vÆue
(0, 
lo_‹dîkey
);

181 
±u∂e
->
	`£t_vÆue
(1, 
lo_löíumbî
);

182  (
	`ödex_¥obe_by_«me
(
db
, "LO_IDX", 
±u∂e
));

183 
	}
}

246 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/shore_ssb_xct.cpp

31 
	~"w‹klﬂd/ssb/sh‹e_ssb_ív.h
"

32 
	~"w‹klﬂd/ssb/ssb_øndom.h
"

34 
	~<ve˘‹
>

35 
	~<m≠
>

36 
	~<numîic
>

37 
	~<Æg‹ôhm
>

39 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

40 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

45 
	~"sm_ba£.h
"

48 
usög
 
«me•a˚
 
	gsh‹e
;

49 
usög
 
«me•a˚
 
	gdbgíssb
;

53 
ENTER_NAMESPACE
(
ssb
);

63 
__thªad
 
Sh‹eSSBTrxSèts
 
	gmy_°©s
;

65 
	gSh‹eSSBEnv
::
	$ív_thªad_öô
()

67 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

68 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

69 
	}
}

71 
	gSh‹eSSBEnv
::
	$ív_thªad_föi
()

73 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

74 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

75 
	}
}

86 
Sh‹eSSBTrxSèts
 
	gSh‹eSSBEnv
::
	$_gë_°©s
()

88 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

89 
Sh‹eSSBTrxSèts
 
rvÆ
;

90 
rvÆ
 -=Ñval;

91 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

92 
rvÆ
 +*
ô
->
£c⁄d
;

93  (
rvÆ
);

94 
	}
}

105 
	gSh‹eSSBEnv
::
	$ª£t_°©s
()

107 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

108 
_œ°_°©s
 = 
	`_gë_°©s
();

109 
	}
}

120 
	gSh‹eSSBEnv
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

121 c⁄° 
iS¥ód
,

122 c⁄° 
iNumOfThªads
,

123 c⁄° 
dñay
,

124 c⁄° 
ul⁄g_t
 
mioch
,

125 c⁄° 
avg˝uußge
)

127 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

130 
Sh‹eSSBTrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

133 
cuºít_°©s
 -
_œ°_°©s
;

135 
uöt
 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

136 
uöt
 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

137 
uöt
 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

139 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

150 
iQuîõdSF
,

151 (
iS¥ód
 ? "Yes" : "No"),

152 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
,

153 
dñay
, 
mioch
/dñay, 
avg˝uußge
,

154 100*
avg˝uußge
/
	`gë_max_˝u_cou¡
(),

155 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
);

156 
	}
}

227 #unde‡
DO_PRINT_SSB_RECS


231 
w_rc_t
 
	gSh‹eSSBEnv
::
	$_gí_⁄e_d©e
(c⁄° 
id
,

232 
ªp_row_t
& 
¨ïrow
)

234 
tu∂e_gu¨d
<
d©e_m™_im∂
> 
	`¥da
(
_pd©e_m™
);

236 
¥da
->
_ªp
 = &
¨ïrow
;

238 
dbgíssb
::
d©e_t
 
ad
;

239 
	`mk_d©e
(
id
, &
ad
);

241 #ifde‡
DO_PRINT_SSB_RECS


242 
	`TRACE
–
TRACE_ALWAYS
,

244 
ad
.
d©ekey
,ád.
d©e
,ád.
dayofwìk
,ád.
m⁄th
,ád.
yór
,

245 
ad
.
yórm⁄thnum
,ád.
yórm⁄th
,ád.
daynumöwìk
,ád.
daynumöm⁄th
,

246 
ad
.
daynumöyór
,ád.
m⁄thnumöyór
,ád.
wìknumöyór
,

247 
ad
.
£Œög£as⁄
,ád.
¶í
,ád.
œ°dayöwìkÊ
,ád.
œ°dayöm⁄thÊ
,

248 
ad
.
hﬁidayÊ
,ád.
wìkdayÊ
);

251 
¥da
->
	`£t_vÆue
(0, ()
ad
.
d©ekey
);

252 
¥da
->
	`£t_vÆue
(1, 
ad
.
d©e
);

253 
¥da
->
	`£t_vÆue
(2, 
ad
.
dayofwìk
);

254 
¥da
->
	`£t_vÆue
(3, 
ad
.
m⁄th
);

255 
¥da
->
	`£t_vÆue
(4, ()
ad
.
yór
);

256 
¥da
->
	`£t_vÆue
(5, ()
ad
.
yórm⁄thnum
);

257 
¥da
->
	`£t_vÆue
(6, 
ad
.
yórm⁄th
);

258 
¥da
->
	`£t_vÆue
(7, ()
ad
.
daynumöwìk
);

259 
¥da
->
	`£t_vÆue
(8, ()
ad
.
daynumöm⁄th
);

260 
¥da
->
	`£t_vÆue
(9, ()
ad
.
daynumöyór
);

261 
¥da
->
	`£t_vÆue
(10, ()
ad
.
m⁄thnumöyór
);

262 
¥da
->
	`£t_vÆue
(11, ()
ad
.
wìknumöyór
);

263 
¥da
->
	`£t_vÆue
(12, 
ad
.
£Œög£as⁄
);

264 
¥da
->
	`£t_vÆue
(13, 
ad
.
œ°dayöwìkÊ
);

265 
¥da
->
	`£t_vÆue
(14, 
ad
.
œ°dayöm⁄thÊ
);

266 
¥da
->
	`£t_vÆue
(15, 
ad
.
hﬁidayÊ
);

267 
¥da
->
	`£t_vÆue
(16, 
ad
.
wìkdayÊ
);

269 
	`W_DO
(
_pd©e_m™
->
	`add_tu∂e
(
_pssm
, 
¥da
));

271  
RCOK
;

272 
	}
}

276 
w_rc_t
 
	gSh‹eSSBEnv
::
	$_gí_⁄e_suµlõr
(c⁄° 
id
,

277 
ªp_row_t
& 
¨ïrow
)

279 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥su
(
_psuµlõr_m™
);

281 
¥su
->
_ªp
 = &
¨ïrow
;

283 
dbgíssb
::
suµlõr_t
 
as
;

284 
	`mk_suµ
(
id
, &
as
);

286 #ifde‡
DO_PRINT_SSB_RECS


287 i‡(
id
%100==0) {

288 
	`TRACE
(
TRACE_ALWAYS
, "%ld,%s,%s[len:%d],%s,%s,[%d:]%s,%s\n",

289 
as
.
suµkey
,ás.
«me
,ás.
addªss
,ás.
Æí
,ás.
côy
,

290 
as
.
«ti⁄_«me
,ás.
ªgi⁄_key
,ás.
ªgi⁄_«me
,ás.
ph⁄e
);

294 
¥su
->
	`£t_vÆue
(0, ()
as
.
suµkey
);

295 
¥su
->
	`£t_vÆue
(1, 
as
.
«me
);

296 
¥su
->
	`£t_vÆue
(2, 
as
.
addªss
);

297 
¥su
->
	`£t_vÆue
(3, 
as
.
côy
);

298 
¥su
->
	`£t_vÆue
(4, 
as
.
«ti⁄_«me
);

299 
¥su
->
	`£t_vÆue
(5, 
as
.
ªgi⁄_«me
);

300 
¥su
->
	`£t_vÆue
(6, 
as
.
ph⁄e
);

302 
	`W_DO
(
_psuµlõr_m™
->
	`add_tu∂e
(
_pssm
, 
¥su
));

304  
RCOK
;

305 
	}
}

309 
w_rc_t
 
	gSh‹eSSBEnv
::
	$_gí_⁄e_cu°omî
(c⁄° 
id
,

310 
ªp_row_t
& 
¨ïrow
)

312 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu
(
_pcu°omî_m™
);

314 
¥cu
->
_ªp
 = &
¨ïrow
;

316 
dbgíssb
::
cu°omî_t
 
ac
;

317 
	`mk_cu°
(
id
, &
ac
);

319 #ifde‡
DO_PRINT_SSB_RECS


320 i‡(
id
%100==0) {

321 
	`TRACE
(
TRACE_ALWAYS
,

323 
ac
.
cu°key
,ác.
«me
, 
	`°æí
◊c.«me),ác.
addªss
,

324 
	`°æí
(
ac
.
addªss
),ác.
côy
, såÀn◊c.côy),ác.
«ti⁄_«me
,

325 
	`°æí
(
ac
.
«ti⁄_«me
),ác.
ªgi⁄_key
,ác.
ªgi⁄_«me
,

326 
	`°æí
(
ac
.
ªgi⁄_«me
),ác.
ph⁄e
,ác.
mkt£gmít
);

330 
¥cu
->
	`£t_vÆue
(0, ()
ac
.
cu°key
);

331 
¥cu
->
	`£t_vÆue
(1, 
ac
.
«me
);

332 
¥cu
->
	`£t_vÆue
(2, 
ac
.
addªss
);

333 
¥cu
->
	`£t_vÆue
(3, 
ac
.
côy
);

334 
¥cu
->
	`£t_vÆue
(4, 
ac
.
«ti⁄_«me
);

335 
¥cu
->
	`£t_vÆue
(5, 
ac
.
ªgi⁄_«me
);

336 
¥cu
->
	`£t_vÆue
(6, 
ac
.
ph⁄e
);

337 
¥cu
->
	`£t_vÆue
(7, 
ac
.
mkt£gmít
);

339 
	`W_DO
(
_pcu°omî_m™
->
	`add_tu∂e
(
_pssm
, 
¥cu
));

341  
RCOK
;

342 
	}
}

346 
w_rc_t
 
	gSh‹eSSBEnv
::
	$_gí_⁄e_∑π
(c⁄° 
id
,

347 
ªp_row_t
& 
¨ïrow
)

349 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑
(
_µ¨t_m™
);

351 
¥∑
->
_ªp
 = &
¨ïrow
;

353 
dbgíssb
::
∑π_t
 
≠
;

354 
	`mk_∑π
(
id
, &
≠
);

356 #ifde‡
DO_PRINT_SSB_RECS


357 i‡(
id
%100==0) {

358 
	`TRACE
–
TRACE_ALWAYS
,

360 
≠
.
∑πkey
,≠.
«me
,≠.
∆í
,≠.
mfgr
,≠.
ˇãg‹y
,≠.
bønd
,≠.
cﬁ‹
,

361 
≠
.
˛í
,≠.
ty≥
,≠.
éí
,≠.
size
,≠.
c⁄èöî
);

365 
¥∑
->
	`£t_vÆue
(0, ()
≠
.
∑πkey
);

366 
¥∑
->
	`£t_vÆue
(1, 
≠
.
«me
);

367 
¥∑
->
	`£t_vÆue
(2, 
≠
.
mfgr
);

368 
¥∑
->
	`£t_vÆue
(3, 
≠
.
ˇãg‹y
);

369 
¥∑
->
	`£t_vÆue
(4, 
≠
.
bønd
);

370 
¥∑
->
	`£t_vÆue
(5, 
≠
.
cﬁ‹
);

371 
¥∑
->
	`£t_vÆue
(6, 
≠
.
ty≥
);

372 
¥∑
->
	`£t_vÆue
(7, ()
≠
.
size
);

373 
¥∑
->
	`£t_vÆue
(8, 
≠
.
c⁄èöî
);

375 
	`W_DO
(
_µ¨t_m™
->
	`add_tu∂e
(
_pssm
, 
¥∑
));

377  
RCOK
;

378 
	}
}

382 
w_rc_t
 
	gSh‹eSSBEnv
::
	$_gí_⁄e_löe‹dî
(c⁄° 
id
,

383 
ªp_row_t
& 
¨ïrow
)

385 
dbgíssb
::
‹dî_t
 
o
;

387 
	`INIT_HUGE
(
o
.
okey
);

388 
i
=0; i < 
O_LCNT_MAX
; i++) {

389 
	`INIT_HUGE
(
o
.
löe‹dîs
[
i
].
okey
);

391 
	`mk_‹dî
(
id
, &
o
, 0);

393 #ifde‡
DO_PRINT_SSB_RECS


394 i‡(
id
%100==0) {

395 
i
=0;i<
o
.
löes
;i++) {

396 
	`TRACE
–
TRACE_ALWAYS
,

398 ()
o
.
okey
[0], ()o.
löe‹dîs
[
i
].
löíumbî
,

399 ()
o
.
cu°key
, ()o.
löe‹dîs
[
i
].
∑πkey
,

400 ()
o
.
löe‹dîs
[
i
].
suµkey
,

401 ()
	`©oi
(
o
.
löe‹dîs
[
i
].
‹dîd©e
),

402 
o
.
löe‹dîs
[
i
].
›ri‹ôy
,

403 ()
o
.
löe‹dîs
[
i
].
shù_¥i‹ôy
,

404 ()
o
.
löe‹dîs
[
i
].
qu™tôy
,

405 ()
o
.
löe‹dîs
[
i
].
exãnded_¥i˚
,

406 ()
o
.
löe‹dîs
[
i
].
‹dî_tŸÆ¥i˚
,

407 ()
o
.
löe‹dîs
[
i
].
discou¡
,

408 ()
o
.
löe‹dîs
[
i
].
ªvíue
, ()o.löe‹dîs[i].
suµ_co°
,

409 ()
o
.
löe‹dîs
[
i
].
èx
,

410 ()
	`©oi
(
o
.
löe‹dîs
[
i
].
commô_d©e
),

411 
o
.
löe‹dîs
[
i
].
shùmode
);

416 
i
=0;i<
o
.
löes
;i++) {

418 
tu∂e_gu¨d
<
löe‹dî_m™_im∂
> 
	`¥lo
(
_∂öe‹dî_m™
);

420 
¥lo
->
_ªp
 = &
¨ïrow
;

422 
¥lo
->
	`£t_vÆue
(0, ()
o
.
okey
[0]);

423 
¥lo
->
	`£t_vÆue
(1, ()
o
.
löe‹dîs
[
i
].
löíumbî
);

424 
¥lo
->
	`£t_vÆue
(2, ()
o
.
cu°key
);

425 
¥lo
->
	`£t_vÆue
(3, ()
o
.
löe‹dîs
[
i
].
∑πkey
);

426 
¥lo
->
	`£t_vÆue
(4, ()
o
.
löe‹dîs
[
i
].
suµkey
);

427 
¥lo
->
	`£t_vÆue
(5, ()
	`©oi
(
o
.
löe‹dîs
[
i
].
‹dîd©e
));

428 
¥lo
->
	`£t_vÆue
(6, 
o
.
löe‹dîs
[
i
].
›ri‹ôy
);

429 
¥lo
->
	`£t_vÆue
(7, ()
o
.
löe‹dîs
[
i
].
shù_¥i‹ôy
);

430 
¥lo
->
	`£t_vÆue
(8, ()
o
.
löe‹dîs
[
i
].
qu™tôy
);

431 
¥lo
->
	`£t_vÆue
(9, ()
o
.
löe‹dîs
[
i
].
exãnded_¥i˚
);

432 
¥lo
->
	`£t_vÆue
(10, ()
o
.
löe‹dîs
[
i
].
‹dî_tŸÆ¥i˚
);

433 
¥lo
->
	`£t_vÆue
(11, ()
o
.
löe‹dîs
[
i
].
discou¡
);

434 
¥lo
->
	`£t_vÆue
(12, ()
o
.
löe‹dîs
[
i
].
ªvíue
);

435 
¥lo
->
	`£t_vÆue
(13, ()
o
.
löe‹dîs
[
i
].
suµ_co°
);

436 
¥lo
->
	`£t_vÆue
(14, ()
o
.
löe‹dîs
[
i
].
èx
);

437 
¥lo
->
	`£t_vÆue
(15, ()
	`©oi
(
o
.
löe‹dîs
[
i
].
commô_d©e
));

438 
¥lo
->
	`£t_vÆue
(16, 
o
.
löe‹dîs
[
i
].
shùmode
);

440 
	`W_DO
(
_∂öe‹dî_m™
->
	`add_tu∂e
(
_pssm
, 
¥lo
));

443  
RCOK
;

444 
	}
}

455 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_p›uœã_ba£löe
(const ,

456 
p›uœã_ba£löe_öput_t
& 
ö
)

459 
	`as£π
 (
_pssm
);

460 
	`as£π
 (
_öôülized
);

463 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

464 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

467 
	`TRACE
–
TRACE_ALWAYS
, "LO MAX SIZE:%d \n",
_∂öe‹dî_desc
->
	`maxsize
());

468 
	`TRACE
–
TRACE_ALWAYS
, "PA MAX SIZE:%d \n",
_µ¨t_desc
->
	`maxsize
());

469 
	`TRACE
–
TRACE_ALWAYS
, "CU MAX SIZE:%d \n",
_pcu°omî_desc
->
	`maxsize
());

470 
	`TRACE
–
TRACE_ALWAYS
, "SU MAX SIZE:%d \n",
_psuµlõr_desc
->
	`maxsize
());

471 
	`TRACE
–
TRACE_ALWAYS
, "DA MAX SIZE:%d \n",
_pd©e_desc
->
	`maxsize
());

474 
	`TRACE
–
TRACE_ALWAYS
, "Building DATE !!!\n");

475 
i
=1; i<=
NO_DATE
; ++i) {

476 
	`W_DO
(
	`_gí_⁄e_d©e
(
i
, 
¨ïrow
));

479 
	`TRACE
–
TRACE_ALWAYS
, "Building SUPPLIER SF=%d*%d=%d!!!\n",

480 ()
ö
.
_sf
, ()
SUPPLIER_PER_SF
, ()(in._sf*SUPPLIER_PER_SF));

481 
i
=1; i<=
ö
.
_sf
*
SUPPLIER_PER_SF
; ++i) {

482 
	`W_DO
(
	`_gí_⁄e_suµlõr
(
i
, 
¨ïrow
));

485 
	`TRACE
–
TRACE_ALWAYS
, "Starting CUSTOMER SF=%d*%d=%d!!!\n",

486 ()
ö
.
_sf
, ()
CUSTOMER_PER_SF
, ()(in._sf*CUSTOMER_PER_SF));

487 
i
=1; i<=
ö
.
_sf
*
CUSTOMER_PER_SF
; ++i) {

488 
	`W_DO
(
	`_gí_⁄e_cu°omî
(
i
, 
¨ïrow
));

491 
	`TRACE
–
TRACE_ALWAYS
, "Starting PART 1+log2(SF)=1+log2(%d)=%d*%d=%d!!!\n",

492 ()
ö
.
_sf
, ()(1+
	`log2
(ö._sf)), ()
PART_PER_SF
,

493 ()((1+
	`log2
(
ö
.
_sf
))*
PART_PER_SF
));

494 
i
=1; i<=(1+
	`log2
(
ö
.
_sf
))*
PART_PER_SF
; ++i) {

495 
	`W_DO
–
	`_gí_⁄e_∑π
(
i
, 
¨ïrow
));

499 
	`TRACE
–
TRACE_ALWAYS
, "Starting LINEORDERS SF=%d*%d=%d!!!\n",

500 ()
ö
.
_sf
, ()
LINEORDER_PER_SF
, ()(in._sf*LINEORDER_PER_SF));

502 
i
=0; i < 
ö
.
_lﬂdî_cou¡
; ++i) {

503 
°¨t
 = 
i
 * 
ö
.
_löe‹dî_≥r_thªad
 + 1;

504 
íd
 = 
°¨t
 + 
ö
.
_divis‹
 - 1;

505 
	`TRACE
–
TRACE_ALWAYS
, "Löe‹dî %d .. %d\n", 
°¨t
, 
íd
);

507 
j
=
°¨t
; j<
íd
; ++j) {

508 
	`W_DO
(
e
 = 
	`_gí_⁄e_löe‹dî
(
j
,
¨ïrow
));

512 
	`W_DO
(
_pssm
->
	`commô_x˘
());

513  
RCOK
;

514 
	}
}

519 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_p›uœã_some_löe‹dîs
(c⁄° 
x˘_id
,

520 
p›uœã_some_löe‹dîs_öput_t
& 
ö
)

523 
	`as£π
 (
_pssm
);

524 
	`as£π
 (
_öôülized
);

526 
ªp_row_t
 
	`¨ïrow
(
_∂öe‹dî_m™
->
	`ts
());

527 
¨ïrow
.
	`£t
(
_∂öe‹dî_desc
->
	`maxsize
());

529 
id
 = 
ö
.
_‹dîid
;

532 
id
=
ö
.
_‹dîid
; id<ö._‹dîid+
x˘_id
; id++) {

533 
	`W_DO
(
	`_gí_⁄e_löe‹dî
(
id
, 
¨ïrow
));

536 
	`W_DO
(
_pssm
->
	`commô_x˘
());

537  
RCOK
;

538 
	}
}

618 
w_rc_t
 
	gSh‹eSSBEnv
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

620 #ifde‡
CFG_QPIPE


621 i‡(
¥eque°
->
	`ty≥
(Ë>
XCT_QPIPE_SSB_MIX
) {

622  (
	`run_⁄e_qpùe_x˘
(
¥eque°
));

627 i‡(
¥eque°
->
	`ty≥
(Ë=
XCT_SSB_MIX
) {

628 
¥eque°
->
	`£t_ty≥
(
XCT_SSB_MIX
 + 
	`abs
(
smthªad_t
::
	`me
()->
	`ønd
()%22));

631 
¥eque°
->
	`ty≥
()) {

634 
XCT_SSB_QDATE
:

635  (
	`run_qd©e
(
¥eque°
));

637 
XCT_SSB_QPART
:

638  (
	`run_q∑π
(
¥eque°
));

640 
XCT_SSB_QSUPPLIER
:

641  (
	`run_qsuµlõr
(
¥eque°
));

643 
XCT_SSB_QCUSTOMER
:

644  (
	`run_qcu°omî
(
¥eque°
));

646 
XCT_SSB_QLINEORDER
:

647  (
	`run_qlöe‹dî
(
¥eque°
));

649 
XCT_SSB_QTEST
:

650  (
	`run_qã°
(
¥eque°
));

652 
XCT_SSB_Q1_1
:

653  (
	`run_q1_1
(
¥eque°
));

655 
XCT_SSB_Q1_2
:

656  (
	`run_q1_2
(
¥eque°
));

658 
XCT_SSB_Q1_3
:

659  (
	`run_q1_3
(
¥eque°
));

661 
XCT_SSB_Q2_1
:

662  (
	`run_q2_1
(
¥eque°
));

664 
XCT_SSB_Q2_2
:

665  (
	`run_q2_2
(
¥eque°
));

667 
XCT_SSB_Q2_3
:

668  (
	`run_q2_3
(
¥eque°
));;

670 
XCT_SSB_Q3_1
:

671  (
	`run_q3_1
(
¥eque°
));

673 
XCT_SSB_Q3_2
:

674  (
	`run_q3_2
(
¥eque°
));

676 
XCT_SSB_Q3_3
:

677  (
	`run_q3_3
(
¥eque°
));

679 
XCT_SSB_Q3_4
:

680  (
	`run_q3_4
(
¥eque°
));

682 
XCT_SSB_Q4_1
:

683  (
	`run_q4_1
(
¥eque°
));

685 
XCT_SSB_Q4_2
:

686  (
	`run_q4_2
(
¥eque°
));;

688 
XCT_SSB_Q4_3
:

689  (
	`run_q4_3
(
¥eque°
));

693 
	`TRACE
–
TRACE_ALWAYS
, "UnknownÅransaction\n");

694 
	`as£π
(0);

696  (
RCOK
);

697 
	}
}

717 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q1_1
);

718 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q1_2
);

719 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q1_3
);

720 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q2_1
);

721 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q2_2
);

722 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q2_3
);

723 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q3_1
);

724 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q3_2
);

725 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q3_3
);

726 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q3_4
);

727 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q4_1
);

728 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q4_2
);

729 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q4_3
);

730 
DEFINE_TRX
(
Sh‹eSSBEnv
,
q∑π
);

731 
DEFINE_TRX
(
Sh‹eSSBEnv
,
qd©e
);

732 
DEFINE_TRX
(
Sh‹eSSBEnv
,
qcu°omî
);

733 
DEFINE_TRX
(
Sh‹eSSBEnv
,
qsuµlõr
);

734 
DEFINE_TRX
(
Sh‹eSSBEnv
,
qlöe‹dî
);

735 
DEFINE_TRX
(
Sh‹eSSBEnv
,
qã°
);

748 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qd©e
(const ,

749 
qd©e_öput_t
& )

752 
	`as£π
 (
_pssm
);

753 
	`as£π
 (
_öôülized
);

754 
	`as£π
 (
_lﬂded
);

755  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

756 
	}
}

765 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q∑π
(const ,

766 
q∑π_öput_t
& )

769 
	`as£π
 (
_pssm
);

770 
	`as£π
 (
_öôülized
);

771 
	`as£π
 (
_lﬂded
);

772  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

773 
	}
}

782 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qcu°omî
(const ,

783 
qcu°omî_öput_t
& )

786 
	`as£π
 (
_pssm
);

787 
	`as£π
 (
_öôülized
);

788 
	`as£π
 (
_lﬂded
);

789  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

790 
	}
}

799 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qsuµlõr
(const ,

800 
qsuµlõr_öput_t
& )

803 
	`as£π
 (
_pssm
);

804 
	`as£π
 (
_öôülized
);

805 
	`as£π
 (
_lﬂded
);

806  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

807 
	}
}

816 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qlöe‹dî
(const ,

817 
qlöe‹dî_öput_t
& )

820 
	`as£π
 (
_pssm
);

821 
	`as£π
 (
_öôülized
);

822 
	`as£π
 (
_lﬂded
);

823  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

824 
	}
}

832 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_qã°
(const ,

833 
qã°_öput_t
& )

836 
	`as£π
 (
_pssm
);

837 
	`as£π
 (
_öôülized
);

838 
	`as£π
 (
_lﬂded
);

839  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

840 
	}
}

849 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q1_1
(const ,

850 
q1_1_öput_t
& )

853 
	`as£π
 (
_pssm
);

854 
	`as£π
 (
_öôülized
);

855 
	`as£π
 (
_lﬂded
);

856  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

857 
	}
}

866 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q1_2
(const ,

867 
q1_2_öput_t
& )

870 
	`as£π
 (
_pssm
);

871 
	`as£π
 (
_öôülized
);

872 
	`as£π
 (
_lﬂded
);

873  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

874 
	}
}

883 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q1_3
(const ,

884 
q1_3_öput_t
& )

887 
	`as£π
 (
_pssm
);

888 
	`as£π
 (
_öôülized
);

889 
	`as£π
 (
_lﬂded
);

890  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

891 
	}
}

901 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q2_1
(const ,

902 
q2_1_öput_t
& )

905 
	`as£π
 (
_pssm
);

906 
	`as£π
 (
_öôülized
);

907 
	`as£π
 (
_lﬂded
);

908  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

909 
	}
}

918 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q2_2
(const ,

919 
q2_2_öput_t
& )

922 
	`as£π
 (
_pssm
);

923 
	`as£π
 (
_öôülized
);

924 
	`as£π
 (
_lﬂded
);

925  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

926 
	}
}

935 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q2_3
(const ,

936 
q2_3_öput_t
& )

939 
	`as£π
 (
_pssm
);

940 
	`as£π
 (
_öôülized
);

941 
	`as£π
 (
_lﬂded
);

942  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

943 
	}
}

953 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q3_1
(const ,

954 
q3_1_öput_t
& )

957 
	`as£π
 (
_pssm
);

958 
	`as£π
 (
_öôülized
);

959 
	`as£π
 (
_lﬂded
);

960  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

961 
	}
}

970 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q3_2
(const ,

971 
q3_2_öput_t
& )

974 
	`as£π
 (
_pssm
);

975 
	`as£π
 (
_öôülized
);

976 
	`as£π
 (
_lﬂded
);

977  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

978 
	}
}

987 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q3_3
(const ,

988 
q3_3_öput_t
& )

991 
	`as£π
 (
_pssm
);

992 
	`as£π
 (
_öôülized
);

993 
	`as£π
 (
_lﬂded
);

994  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

995 
	}
}

1003 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q3_4
(const ,

1004 
q3_4_öput_t
& )

1007 
	`as£π
 (
_pssm
);

1008 
	`as£π
 (
_öôülized
);

1009 
	`as£π
 (
_lﬂded
);

1010  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

1011 
	}
}

1021 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q4_1
(const ,

1022 
q4_1_öput_t
& )

1025 
	`as£π
 (
_pssm
);

1026 
	`as£π
 (
_öôülized
);

1027 
	`as£π
 (
_lﬂded
);

1028  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

1029 
	}
}

1038 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q4_2
(const ,

1039 
q4_2_öput_t
& )

1042 
	`as£π
 (
_pssm
);

1043 
	`as£π
 (
_öôülized
);

1044 
	`as£π
 (
_lﬂded
);

1045  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

1046 
	}
}

1055 
w_rc_t
 
	gSh‹eSSBEnv
::
	$x˘_q4_3
(const ,

1056 
q4_3_öput_t
& )

1059 
	`as£π
 (
_pssm
);

1060 
	`as£π
 (
_öôülized
);

1061 
	`as£π
 (
_lﬂded
);

1062  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

1063 
	}
}

1068 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/ssb_input.cpp

33 
	~"utû.h
"

34 
	~"w‹klﬂd/ssb/ssb_øndom.h
"

35 
	~"w‹klﬂd/ssb/ssb_utû.h
"

36 
	~"w‹klﬂd/ssb/ssb_öput.h
"

38 
	~"w‹klﬂd/ssb/dbgí/dss.h
"

39 
	~"w‹klﬂd/ssb/dbgí/ds°y≥s.h
"

41 
usög
 
«me•a˚
 
	gdbgíssb
;

43 
ENTER_NAMESPACE
(
ssb
);

45 
qd©e_öput_t
 
	$¸óã_qd©e_öput
(const , const )

46 {
qd©e_öput_t
 
a
;á;
	}
}

47 
q∑π_öput_t
 
	$¸óã_q∑π_öput
(const , const )

48 {
q∑π_öput_t
 
a
;á;
	}
}

49 
qsuµlõr_öput_t
 
	$¸óã_qsuµlõr_öput
(const , const )

50 {
qsuµlõr_öput_t
 
a
;á;
	}
}

51 
qcu°omî_öput_t
 
	$¸óã_qcu°omî_öput
(const , const )

52 {
qcu°omî_öput_t
 
a
;á;
	}
}

53 
qlöe‹dî_öput_t
 
	$¸óã_qlöe‹dî_öput
(const , const )

54 {
qlöe‹dî_öput_t
 
a
;á;
	}
}

55 
qã°_öput_t
 
	$¸óã_qã°_öput
(const , const )

56 {
qã°_öput_t
 
a
;á;
	}
}

76 
	gq1_1_öput_t
& q1_1_öput_t::
›î©‹
=(c⁄° 
q1_1_öput_t
& 
rhs
)

78 
d_yór
 = 
rhs
.d_year;

79 
	glo_discou¡_lo
 = 
rhs
.
lo_discou¡_lo
;

80 
	glo_discou¡_hi
 = 
rhs
.
lo_discou¡_hi
;

81 
	glo_qu™tôy
 = 
rhs
.
lo_qu™tôy
;

83  (*
	gthis
);

86 
q1_1_öput_t
 
	$¸óã_q1_1_öput
(const , const )

89 
q1_1_öput_t
 
q1_1_ö
;

91 
q1_1_ö
.
d_yór
 = 1993;

92 
q1_1_ö
.
lo_discou¡_lo
 = 1;

93 
q1_1_ö
.
lo_discou¡_hi
 = 3;

94 
q1_1_ö
.
lo_qu™tôy
 = 25;

96 
	`¥ötf
("q1_1_ö: %d %d %d %d \n",
q1_1_ö
.
d_yór
,q1_1_ö.
lo_discou¡_lo
,q1_1_ö.
lo_discou¡_hi
,q1_1_ö.
lo_qu™tôy
);

98  
q1_1_ö
;

99 
	}
}

106 
	gq1_2_öput_t
& q1_2_öput_t::
›î©‹
=(c⁄° 
q1_2_öput_t
& 
rhs
)

108 
d_yórm⁄thnum
 = 
rhs
.d_yearmonthnum;

109 
	glo_discou¡_lo
 = 
rhs
.
lo_discou¡_lo
;

110 
	glo_discou¡_hi
 = 
rhs
.
lo_discou¡_hi
;

111 
	glo_qu™tôy_lo
 = 
rhs
.
lo_qu™tôy_lo
;

112 
	glo_qu™tôy_hi
 = 
rhs
.
lo_qu™tôy_hi
;

114  (*
	gthis
);

117 
q1_2_öput_t
 
	$¸óã_q1_2_öput
(const , const )

120 
q1_2_öput_t
 
q1_2_ö
;

122 
q1_2_ö
.
d_yórm⁄thnum
 = 199401;

123 
q1_2_ö
.
lo_discou¡_lo
 = 4;

124 
q1_2_ö
.
lo_discou¡_hi
 = 6;

125 
q1_2_ö
.
lo_qu™tôy_lo
 = 26;

126 
q1_2_ö
.
lo_qu™tôy_hi
 = 35;

128 
	`¥ötf
("q1_2_ö: %d %d %d %d %d\n",
q1_2_ö
.
d_yórm⁄thnum
,q1_2_ö.
lo_discou¡_lo
,q1_2_ö.
lo_discou¡_hi
,q1_2_ö.
lo_qu™tôy_lo
,q1_2_ö.
lo_qu™tôy_hi
);

130  
q1_2_ö
;

131 
	}
}

139 
	gq1_3_öput_t
& q1_3_öput_t::
›î©‹
=(c⁄° 
q1_3_öput_t
& 
rhs
)

141 
d_wìknumöyór
 = 
rhs
.d_weeknuminyear;

142 
	gd_yór
 = 
rhs
.
d_yór
;

143 
	glo_discou¡_lo
 = 
rhs
.
lo_discou¡_lo
;

144 
	glo_discou¡_hi
 = 
rhs
.
lo_discou¡_hi
;

145 
	glo_qu™tôy_lo
 = 
rhs
.
lo_qu™tôy_lo
;

146 
	glo_qu™tôy_hi
 = 
rhs
.
lo_qu™tôy_hi
;

148  (*
	gthis
);

151 
q1_3_öput_t
 
	$¸óã_q1_3_öput
(const , const )

154 
q1_3_öput_t
 
q1_3_ö
;

156 
q1_3_ö
.
d_wìknumöyór
 = 6;

157 
q1_3_ö
.
d_yór
 = 1994;

158 
q1_3_ö
.
lo_discou¡_lo
 = 5;

159 
q1_3_ö
.
lo_discou¡_hi
 = 7;

160 
q1_3_ö
.
lo_qu™tôy_lo
 = 26;

161 
q1_3_ö
.
lo_qu™tôy_hi
 = 35;

163 
	`¥ötf
("q1_3_ö: %d %d %d %d %d %d\n",
q1_3_ö
.
d_wìknumöyór
,q1_3_ö.
d_yór
,q1_3_ö.
lo_discou¡_lo
,q1_3_ö.
lo_discou¡_hi
,q1_3_ö.
lo_qu™tôy_lo
,q1_3_ö.
lo_qu™tôy_hi
);

165  
q1_3_ö
;

166 
	}
}

174 
	gq2_1_öput_t
& q2_1_öput_t::
›î©‹
=(c⁄° 
q2_1_öput_t
& 
rhs
)

176 
°r˝y
(
p_ˇãg‹y
,
rhs
.p_category);

177 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

179  (*
	gthis
);

182 
q2_1_öput_t
 
	$¸óã_q2_1_öput
(const , const )

185 
q2_1_öput_t
 
q2_1_ö
;

187 
	`°r˝y
(
q2_1_ö
.
p_ˇãg‹y
,"MFGR#12");

188 
	`°r˝y
(
q2_1_ö
.
s_ªgi⁄
,"AMERICA");

190 
	`¥ötf
("q2_1_ö: %†%s\n",
q2_1_ö
.
p_ˇãg‹y
,q2_1_ö.
s_ªgi⁄
);

192  
q2_1_ö
;

193 
	}
}

201 
	gq2_2_öput_t
& q2_2_öput_t::
›î©‹
=(c⁄° 
q2_2_öput_t
& 
rhs
)

203 
°r˝y
(
p_bønd_1
,
rhs
.p_brand_1);

204 
°r˝y
(
p_bønd_2
,
rhs
.p_brand_2);

205 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

207  (*
	gthis
);

210 
q2_2_öput_t
 
	$¸óã_q2_2_öput
(const , const )

213 
q2_2_öput_t
 
q2_2_ö
;

215 
	`°r˝y
(
q2_2_ö
.
p_bønd_1
,"MFGR#2221");

216 
	`°r˝y
(
q2_2_ö
.
p_bønd_2
,"MFGR#2228");

217 
	`°r˝y
(
q2_2_ö
.
s_ªgi⁄
 ,"ASIA");

219 
	`¥ötf
("q2_2_ö: %†%†%s\n",
q2_2_ö
.
p_bønd_1
,q2_2_ö.
p_bønd_2
,q2_2_ö.
s_ªgi⁄
);

221  
q2_2_ö
;

222 
	}
}

231 
	gq2_3_öput_t
& q2_3_öput_t::
›î©‹
=(c⁄° 
q2_3_öput_t
& 
rhs
)

233 
°r˝y
(
p_bønd
,
rhs
.p_brand);

234 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

236  (*
	gthis
);

239 
q2_3_öput_t
 
	$¸óã_q2_3_öput
(const , const )

242 
q2_3_öput_t
 
q2_3_ö
;

244 
	`°r˝y
(
q2_3_ö
.
p_bønd
 ,"MFGR#2239");

245 
	`°r˝y
(
q2_3_ö
.
s_ªgi⁄
 ,"EUROPE");

247 
	`¥ötf
("q2_3_ö: %†%s\n",
q2_3_ö
.
p_bønd
,q2_3_ö.
s_ªgi⁄
);

249  
q2_3_ö
;

250 
	}
}

258 
	gq3_1_öput_t
& q3_1_öput_t::
›î©‹
=(c⁄° 
q3_1_öput_t
& 
rhs
)

260 
_yór_lo
 = 
rhs
._year_lo;

261 
	g_yór_hi
 = 
rhs
.
_yór_hi
;

263 
°r˝y
(
c_ªgi⁄
,
rhs
.c_region);

264 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

266  (*
	gthis
);

270 
q3_1_öput_t
 
	$¸óã_q3_1_öput
(const , const )

272 
q3_1_öput_t
 
q3_1_ö
;

274 
q3_1_ö
.
_yór_lo
 = 1992;

275 
q3_1_ö
.
_yór_hi
 = 1997;

276 
	`°r˝y
(
q3_1_ö
.
c_ªgi⁄
 ,"ASIA");

277 
	`°r˝y
(
q3_1_ö
.
s_ªgi⁄
 ,"ASIA");

279 
	`¥ötf
("q3_1_ö: %d %d %†%s\n",
q3_1_ö
.
_yór_lo
,q3_1_ö.
_yór_hi
,q3_1_ö.
c_ªgi⁄
,q3_1_ö.
s_ªgi⁄
);

281  
q3_1_ö
;

282 
	}
}

291 
	gq3_2_öput_t
& q3_2_öput_t::
›î©‹
=(c⁄° 
q3_2_öput_t
& 
rhs
)

293 
_yór_lo
 = 
rhs
._year_lo;

294 
	g_yór_hi
 = 
rhs
.
_yór_hi
;

296 
°r˝y
(
_«ti⁄
,
rhs
._nation);

298  (*
	gthis
);

302 
q3_2_öput_t
 
	$¸óã_q3_2_öput
(const , const )

304 
q3_2_öput_t
 
q3_2_ö
;

305 
_id_«ti⁄
;

307 
q3_2_ö
.
_yór_lo
=
	`UR™d
(1992,1998);

308 
q3_2_ö
.
_yór_hi
=
	`UR™d
(q3_2_ö.
_yór_lo
,1998);

309 
_id_«ti⁄
=
	`UR™d
(0,24);

310 
	`gë_«ti⁄
(
q3_2_ö
.
_«ti⁄
,(
ssb_«ti⁄
)
_id_«ti⁄
);

312 
	`¥ötf
("q3_2_ö: %d %d %s\n",
q3_2_ö
.
_yór_lo
,q3_2_ö.
_yór_hi
,q3_2_ö.
_«ti⁄
);

316  
q3_2_ö
;

317 
	}
}

326 
	gq3_3_öput_t
& q3_3_öput_t::
›î©‹
=(c⁄° 
q3_3_öput_t
& 
rhs
)

328 
_yór_lo
 = 
rhs
._year_lo;

329 
	g_yór_hi
 = 
rhs
.
_yór_hi
;

331 
°r˝y
(
c_côy_1
,
rhs
.c_city_1);

332 
°r˝y
(
c_côy_2
,
rhs
.c_city_2);

333 
°r˝y
(
s_côy_1
,
rhs
.s_city_1);

334 
°r˝y
(
s_côy_2
,
rhs
.s_city_2);

336  (*
	gthis
);

340 
q3_3_öput_t
 
	$¸óã_q3_3_öput
(const , const )

342 
q3_3_öput_t
 
q3_3_ö
;

344 
q3_3_ö
.
_yór_lo
=1992;

345 
q3_3_ö
.
_yór_hi
=1997;

346 
	`°r˝y
(
q3_3_ö
.
c_côy_1
,"UNITED KI1");

347 
	`°r˝y
(
q3_3_ö
.
c_côy_2
,"UNITED KI5");

348 
	`°r˝y
(
q3_3_ö
.
s_côy_1
,"UNITED KI1");

349 
	`°r˝y
(
q3_3_ö
.
s_côy_2
,"UNITED KI5");

352 
	`¥ötf
("q3_3_ö: %d %d %†%†%†%s\n",
q3_3_ö
.
_yór_lo
,q3_3_ö.
_yór_hi
,q3_3_ö.
c_côy_1
,q3_3_ö.
c_côy_2
,q3_3_ö.
s_côy_1
,q3_3_ö.
s_côy_2
);

354  
q3_3_ö
;

355 
	}
}

364 
	gq3_4_öput_t
& q3_4_öput_t::
›î©‹
=(c⁄° 
q3_4_öput_t
& 
rhs
)

366 
°r˝y
(
c_côy_1
,
rhs
.c_city_1);

367 
°r˝y
(
c_côy_2
,
rhs
.c_city_2);

368 
°r˝y
(
s_côy_1
,
rhs
.s_city_1);

369 
°r˝y
(
s_côy_2
,
rhs
.s_city_2);

370 
°r˝y
(
d_yórm⁄th
,
rhs
.d_yearmonth);

372  (*
	gthis
);

376 
q3_4_öput_t
 
	$¸óã_q3_4_öput
(const , const )

378 
q3_4_öput_t
 
q3_4_ö
;

380 
	`°r˝y
(
q3_4_ö
.
c_côy_1
 , "UNITED KI1");

381 
	`°r˝y
(
q3_4_ö
.
c_côy_2
 , "UNITED KI5");

382 
	`°r˝y
(
q3_4_ö
.
s_côy_1
 , "UNITED KI1");

383 
	`°r˝y
(
q3_4_ö
.
s_côy_2
 , "UNITED KI5");

384 
	`°r˝y
(
q3_4_ö
.
d_yórm⁄th
 , "Dec1997");

386 
	`¥ötf
("q3_4_ö: %†%†%†%†%s\n",
q3_4_ö
.
c_côy_1
,q3_4_ö.
c_côy_2
,q3_4_ö.
s_côy_1
,q3_4_ö.
s_côy_2
,q3_4_ö.
d_yórm⁄th
);

388  
q3_4_ö
;

389 
	}
}

398 
	gq4_1_öput_t
& q4_1_öput_t::
›î©‹
=(c⁄° 
q4_1_öput_t
& 
rhs
)

400 
°r˝y
(
c_ªgi⁄
,
rhs
.c_region);

401 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

402 
°r˝y
(
p_mfgr_1
,
rhs
.p_mfgr_1);

403 
°r˝y
(
p_mfgr_2
,
rhs
.p_mfgr_2);

405  (*
	gthis
);

409 
q4_1_öput_t
 
	$¸óã_q4_1_öput
(const , const )

411 
q4_1_öput_t
 
q4_1_ö
;

413 
	`°r˝y
(
q4_1_ö
.
c_ªgi⁄
 , "AMERICA");

414 
	`°r˝y
(
q4_1_ö
.
s_ªgi⁄
 , "AMERICA");

415 
	`°r˝y
(
q4_1_ö
.
p_mfgr_1
 , "MFGR#1");

416 
	`°r˝y
(
q4_1_ö
.
p_mfgr_2
 , "MFGR#2");

418 
	`¥ötf
("q4_1_ö: %†%†%†%s\n",
q4_1_ö
.
c_ªgi⁄
,q4_1_ö.
s_ªgi⁄
,q4_1_ö.
p_mfgr_1
,q4_1_ö.
p_mfgr_2
);

420  
q4_1_ö
;

421 
	}
}

430 
	gq4_2_öput_t
& q4_2_öput_t::
›î©‹
=(c⁄° 
q4_2_öput_t
& 
rhs
)

432 
d_yór_1
 = 
rhs
.d_year_1;

433 
	gd_yór_2
 = 
rhs
.
d_yór_2
;

434 
°r˝y
(
c_ªgi⁄
,
rhs
.c_region);

435 
°r˝y
(
s_ªgi⁄
,
rhs
.s_region);

436 
°r˝y
(
p_mfgr_1
,
rhs
.p_mfgr_1);

437 
°r˝y
(
p_mfgr_2
,
rhs
.p_mfgr_2);

439  (*
	gthis
);

443 
q4_2_öput_t
 
	$¸óã_q4_2_öput
(const , const )

445 
q4_2_öput_t
 
q4_2_ö
;

447 
q4_2_ö
.
d_yór_1
 = 1997;

448 
q4_2_ö
.
d_yór_2
 = 1998;

449 
	`°r˝y
(
q4_2_ö
.
c_ªgi⁄
 , "AMERICA");

450 
	`°r˝y
(
q4_2_ö
.
s_ªgi⁄
 , "AMERICA");

451 
	`°r˝y
(
q4_2_ö
.
p_mfgr_1
 , "MFGR#1");

452 
	`°r˝y
(
q4_2_ö
.
p_mfgr_2
 , "MFGR#2");

454 
	`¥ötf
("q4_2_ö: %d %d %†%†%†%s\n",
q4_2_ö
.
d_yór_1
,q4_2_ö.
d_yór_2
,q4_2_ö.
c_ªgi⁄
,q4_2_ö.
s_ªgi⁄
,q4_2_ö.
p_mfgr_1
,q4_2_ö.
p_mfgr_2
);

456  
q4_2_ö
;

457 
	}
}

466 
	gq4_3_öput_t
& q4_3_öput_t::
›î©‹
=(c⁄° 
q4_3_öput_t
& 
rhs
)

468 
d_yór_1
 = 
rhs
.d_year_1;

469 
	gd_yór_2
 = 
rhs
.
d_yór_2
;

470 
°r˝y
(
s_«ti⁄
,
rhs
.s_nation);

471 
°r˝y
(
p_ˇãg‹y
,
rhs
.p_category);

473  (*
	gthis
);

477 
q4_3_öput_t
 
	$¸óã_q4_3_öput
(const , const )

479 
q4_3_öput_t
 
q4_3_ö
;

481 
q4_3_ö
.
d_yór_1
 = 1997;

482 
q4_3_ö
.
d_yór_2
 = 1998;

483 
	`°r˝y
(
q4_3_ö
.
s_«ti⁄
 , "UNITED STATES");

484 
	`°r˝y
(
q4_3_ö
.
p_ˇãg‹y
 , "MFGR#14");

486 
	`¥ötf
("q4_3_ö: %d %d %†%s\n",
q4_3_ö
.
d_yór_1
,q4_3_ö.
d_yór_2
,q4_3_ö.
s_«ti⁄
,q4_3_ö.
p_ˇãg‹y
);

488  
q4_3_ö
;

489 
	}
}

491 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/ssb_random.cpp

33 
	~"w‹klﬂd/ssb/ssb_øndom.h
"

34 
	~"w‹klﬂd/ssb/ssb_c⁄°.h
"

37 
ENTER_NAMESPACE
(
ssb
);

62 
	$øndom
(
low
, 
high
, 
øndgí_t
* 
Ω
) {

64  (
low
 + 
Ω
->
	`ønd
(
high
 -Üow + 1));

65 
	}
}

73 
	$UR™d
(
low
, 
high
) {

75 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

76 
	`as£π
 (
£lf
);

77 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

78 
	`as£π
 (
øndgíp
);

80 
d
 = 
high
 - 
low
 + 1;

90  (
low
 + 
øndgíp
->
	`ønd
(
d
));

91 
	}
}

99 
	$NUR™d
(
A
, 
low
, 
high
) {

101 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

102 
	`as£π
 (
£lf
);

103 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

104 
	`as£π
 (
øndgíp
);

106  ( (((
	`øndom
(0, 
A
, 
øndgíp
Ë|Ñ™dom(
low
, 
high
,Ñandgenp))

107 + 
	`øndom
(0, 
A
, 
øndgíp
))

108 % (
high
 - 
low
 + 1)) +Üow );

109 
	}
}

111 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/ssb/ssb_util.cpp

2 
	~"w‹klﬂd/ssb/ssb_°ru˘.h
"

3 
	~"w‹klﬂd/ssb/ssb_utû.h
"

4 
	~<°rög
>

7 
ENTER_NAMESPACE
(
ssb
);

9 
ssb_l_shùmode
 
	$°r_to_shùmode
(* 
shùmode
)

11 
ssb_l_shùmode
 
ªt
;

12 i‡–!
	`°rcmp
(
shùmode
,"REG_AIR") || !strcmp(shipmode,"REG AIR") )

13 { 
ªt
=
REG_AIR
; }

14 i‡(!
	`°rcmp
(
shùmode
,"AIR"))

15 { 
ªt
=
AIR
; }

16 i‡(!
	`°rcmp
(
shùmode
,"RAIL"))

17 { 
ªt
=
RAIL
; }

18 i‡(!
	`°rcmp
(
shùmode
,"TRUCK"))

19 { 
ªt
=
TRUCK
; }

20 i‡(!
	`°rcmp
(
shùmode
,"MAIL"))

21 { 
ªt
=
MAIL
; }

22 i‡(!
	`°rcmp
(
shùmode
,"FOB"))

23 { 
ªt
=
FOB
; }

25 { 
ªt
=
SHIP
; }

27  
ªt
;

28 
	}
}

30 
	$shùmode_to_°r
(* 
°r
, 
ssb_l_shùmode
 
shùmode
)

33 i‡–
shùmode
 =
REG_AIR
 )

34 { 
	`°r˝y
(
°r
,"REG AIR"); }

35 i‡–
shùmode
 =
AIR
 )

36 { 
	`°r˝y
(
°r
,"AIR"); }

37 i‡–
shùmode
 =
RAIL
 )

38 { 
	`°r˝y
(
°r
,"RAIL"); }

39 i‡–
shùmode
 =
TRUCK
 )

40 { 
	`°r˝y
(
°r
,"TRUCK"); }

41 i‡–
shùmode
 =
MAIL
 )

42 { 
	`°r˝y
(
°r
,"MAIL"); }

43 i‡–
shùmode
 =
FOB
 )

44 { 
	`°r˝y
(
°r
,"FOB"); }

46 { 
	`°r˝y
(
°r
,"SHIP"); }

48 
	}
}

50 
	$gë_«ti⁄
(* 
«ti⁄_«me
, 
ssb_«ti⁄
 
«ti⁄_id
)

52 i‡(
«ti⁄_id
==
ALGERIA
)

53 { 
	`°r˝y
(
«ti⁄_«me
,"ALGERIA"); }

54 i‡(
«ti⁄_id
==
ARGENTINA
)

55 { 
	`°r˝y
(
«ti⁄_«me
,"ARGENTINA"); }

56 i‡(
«ti⁄_id
==
BRAZIL
)

57 { 
	`°r˝y
(
«ti⁄_«me
,"BRAZIL"); }

58 i‡(
«ti⁄_id
==
CANADA
)

59 { 
	`°r˝y
(
«ti⁄_«me
,"CANADA"); }

60 i‡(
«ti⁄_id
==
CHINA
)

61 { 
	`°r˝y
(
«ti⁄_«me
,"CHINA"); }

62 i‡(
«ti⁄_id
==
EGYPT
)

63 { 
	`°r˝y
(
«ti⁄_«me
,"EGYPT"); }

64 i‡(
«ti⁄_id
==
ETHIOPIA
)

65 { 
	`°r˝y
(
«ti⁄_«me
,"ETHIOPIA"); }

66 i‡(
«ti⁄_id
==
FRANCE
)

67 { 
	`°r˝y
(
«ti⁄_«me
,"FRANCE"); }

68 i‡(
«ti⁄_id
==
GERMANY
)

69 { 
	`°r˝y
(
«ti⁄_«me
,"GERMANY"); }

70 i‡(
«ti⁄_id
==
INDIA
)

71 { 
	`°r˝y
(
«ti⁄_«me
,"INDIA"); }

72 i‡(
«ti⁄_id
==
INDONESIA
)

73 { 
	`°r˝y
(
«ti⁄_«me
,"INDONESIA"); }

74 i‡(
«ti⁄_id
==
IRAN
)

75 { 
	`°r˝y
(
«ti⁄_«me
,"IRAN"); }

76 i‡(
«ti⁄_id
==
IRAQ
)

77 { 
	`°r˝y
(
«ti⁄_«me
,"IRAQ"); }

78 i‡(
«ti⁄_id
==
JAPAN
)

79 { 
	`°r˝y
(
«ti⁄_«me
,"JAPAN"); }

80 i‡(
«ti⁄_id
==
JORDAN
)

81 { 
	`°r˝y
(
«ti⁄_«me
,"JORDAN"); }

82 i‡(
«ti⁄_id
==
KENYA
)

83 { 
	`°r˝y
(
«ti⁄_«me
,"KENYA"); }

84 i‡(
«ti⁄_id
==
MOROCCO
)

85 { 
	`°r˝y
(
«ti⁄_«me
,"MOROCCO"); }

86 i‡(
«ti⁄_id
==
MOZAMBIQUE
)

87 { 
	`°r˝y
(
«ti⁄_«me
,"MOZAMBIQUE"); }

88 i‡(
«ti⁄_id
==
PERU
)

89 { 
	`°r˝y
(
«ti⁄_«me
,"PERU"); }

90 i‡(
«ti⁄_id
==
ROMANIA
)

91 { 
	`°r˝y
(
«ti⁄_«me
,"ROMANIA"); }

92 i‡(
«ti⁄_id
==
RUSSIA
)

93 { 
	`°r˝y
(
«ti⁄_«me
,"RUSSIA"); }

94 i‡(
«ti⁄_id
==
SAUDI_ARABIA
)

95 { 
	`°r˝y
(
«ti⁄_«me
,"SAUDI ARABIA"); }

96 i‡(
«ti⁄_id
==
UNITED_KINGDOM
)

97 { 
	`°r˝y
(
«ti⁄_«me
,"UNITED KINGDOM"); }

98 i‡(
«ti⁄_id
==
UNITED_STATES
)

99 { 
	`°r˝y
(
«ti⁄_«me
,"UNITED_STATES"); }

100 i‡(
«ti⁄_id
==
VIETNAM
)

101 { 
	`°r˝y
(
«ti⁄_«me
,"VIETNAM"); }

103 
	}
}

106 
EXIT_NAMESPACE
(
ssb
);

	@src/workload/tm1/shore_tm1_client.cpp

31 
	~"w‹klﬂd/tm1/sh‹e_tm1_˛õ¡.h
"

33 
ENTER_NAMESPACE
(
tm1
);

42 
	gba£löe_tm1_˛õ¡_t
::
	$ba£löe_tm1_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

43 
Sh‹eTM1Env
* 
ív
,

44 c⁄° 
MósuªmítTy≥
 
aTy≥
,

45 c⁄° 
åxid
,

46 c⁄° 
numOfTrxs
,

47 
¥o˚ss‹id_t
 
≠rsid
,

48 c⁄° 
£lID
, c⁄° 
qf
)

49 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

50 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

52 
	`as£π
 (
ív
);

53 
	`as£π
 (
_id
>=0 && 
_qf
>0);

56 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

57 
	`as£π
 (
_w‹kî
);

58 
	}
}

61 
	gba£löe_tm1_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

64 
°m≠
.
	`˛ór
();

67 
°m≠
[
XCT_TM1_MIX
] = "TM1-Mix";

68 
°m≠
[
XCT_TM1_GET_SUB_DATA
] = "TM1-GetSubData";

69 
°m≠
[
XCT_TM1_GET_NEW_DEST
] = "TM1-GetNewDest";

70 
°m≠
[
XCT_TM1_GET_ACC_DATA
] = "TM1-GetAccData";

71 
°m≠
[
XCT_TM1_UPD_SUB_DATA
] = "TM1-UpdSubData";

72 
°m≠
[
XCT_TM1_UPD_LOCATION
] = "TM1-UpdLocation";

73 
°m≠
[
XCT_TM1_CALL_FWD_MIX
] = "TM1-CallFwd-Mix";

74 
°m≠
[
XCT_TM1_INS_CALL_FWD
] = "TM1-InsCallFwd";

75 
°m≠
[
XCT_TM1_DEL_CALL_FWD
] = "TM1-DelCallFwd";

77 
°m≠
[
XCT_TM1_GET_SUB_NBR
] = "TM1-GetSubNbr";

79 
°m≠
[
XCT_TM1_CALL_FWD_MIX_BENCH
] = "TM1-CallFwd-Mix-Bench";

80 
°m≠
[
XCT_TM1_INS_CALL_FWD_BENCH
] = "TM1-InsCallFwd-Bench";

81 
°m≠
[
XCT_TM1_DEL_CALL_FWD_BENCH
] = "TM1-DelCallFwd-Bench";

83  (
°m≠
.
	`size
());

84 
	}
}

98 
w_rc_t
 
	gba£löe_tm1_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

101 
åx_ªsu…_tu∂e_t
 
©π
;

102 
boﬁ
 
bWake
 = 
Ál£
;

103 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

104 
©π
.
	`£t_nŸify
(
c
);

105 
bWake
 = 
åue
;

109 
£lsf
 = 
_£lid
;

110 i‡(
_£lid
==0) {

111 
£lsf
 = 
	`UR™d
(1,
_qf
);

115 
£lid
 = (
£lsf
-1)*
TM1_SUBS_PER_SF
 + 
	`UR™d
(1,TM1_SUBS_PER_SF);

118 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

119 
tid_t
 
©id
;

120 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
£lid
);

123 
	`as£π
 (
_w‹kî
);

124 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

125  (
RCOK
);

126 
	}
}

130 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tm1/shore_tm1_env.cpp

31 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

32 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

37 
ENTER_NAMESPACE
(
sh‹e
);

38 
DEFINE_ROW_CACHE_TLS
(
tm1
, 
sub
);

39 
DEFINE_ROW_CACHE_TLS
(
tm1
, 
ai
);

40 
DEFINE_ROW_CACHE_TLS
(
tm1
, 
sf
);

41 
DEFINE_ROW_CACHE_TLS
(
tm1
, 
cf
);

42 
EXIT_NAMESPACE
(
sh‹e
);

45 
ENTER_NAMESPACE
(
tm1
);

54 
	gSh‹eTM1Env
::
	$Sh‹eTM1Env
()

55 : 
	$Sh‹eEnv
()

57 
_sˇlög_Á˘‹
 = 
TM1_DEF_SF
;

58 
_quîõd_Á˘‹
 = 
TM1_DEF_QF
;

59 
	}
}

61 
	gSh‹eTM1Env
::~
	$Sh‹eTM1Env
()

63 
	}
}

75 
w_rc_t
 
Sh‹eTM1Env
::
	$lﬂd_schema
()

78 
_psub_desc
 = 
√w
 
	`subs¸ibî_t
(
	`gë_pd
());

79 
_∑i_desc
 = 
√w
 
	`ac˚ss_öfo_t
(
	`gë_pd
());

80 
_psf_desc
 = 
√w
 
	`•ecül_Ácûôy_t
(
	`gë_pd
());

81 
_pcf_desc
 = 
√w
 
	`ˇŒ_f‹w¨dög_t
(
	`gë_pd
());

84 
_psub_m™
 = 
√w
 
	`sub_m™_im∂
(
_psub_desc
.
	`gë
());

85 
_∑i_m™
 = 
√w
 
	`ai_m™_im∂
(
_∑i_desc
.
	`gë
());

86 
_psf_m™
 = 
√w
 
	`sf_m™_im∂
(
_psf_desc
.
	`gë
());

87 
_pcf_m™
 = 
√w
 
	`cf_m™_im∂
(
_pcf_desc
.
	`gë
());

89  (
RCOK
);

90 
	}
}

103 
w_rc_t
 
	gSh‹eTM1Env
::
	$lﬂd_™d_ªgi°î_fids
()

105 
	`W_DO
(
_psub_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

106 
	`W_DO
(
_∑i_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

107 
	`W_DO
(
_psf_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

108 
	`W_DO
(
_pcf_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

109  (
RCOK
);

110 
	}
}

122 
w_rc_t
 
	gSh‹eTM1Env
::
	$upd©e_∑πôi⁄ög
()

127 
	`c⁄f
();

130 
uöt
 
mrbç¨ts
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("mrbt-partitions",10);

131 
möKeyVÆ
 = 1;

132 
maxKeyVÆ
 = (
	`gë_sf
()*
TM1_SUBS_PER_SF
)+1;

134 * 
möKey
 = (*)
	`mÆloc
(());

135 
	`mem£t
(
möKey
,0,());

136 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

138 * 
maxKey
 = (*)
	`mÆloc
(());

139 
	`mem£t
(
maxKey
,0,());

140 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

143 
_psub_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

144 
_∑i_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

145 
_psf_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

146 
_pcf_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

148 
	`‰ì
 (
möKey
);

149 
	`‰ì
 (
maxKey
);

151  (
RCOK
);

152 
	}
}

164 
	gSh‹eTM1Env
::
	$°¨t
()

166  (
Sh‹eEnv
::
	`°¨t
());

167 
	}
}

169 
	gSh‹eTM1Env
::
	$°›
()

171  (
Sh‹eEnv
::
	`°›
());

172 
	}
}

182 
	gSh‹eTM1Env
::
	$£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
)

184 
Sh‹eEnv
::
	`£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

186 
s_skewî
.
	`£t
(
¨ó
, 1, 
_sˇlög_Á˘‹
 * 
TM1_SUBS_PER_SF
, 
lﬂd
);

187 
	}
}

198 
	gSh‹eTM1Env
::
	$°¨t_lﬂd_imbÆ™˚
()

200 if(
s_skewî
.
	`is_u£d
()) {

201 
_ch™ge_lﬂd
 = 
Ál£
;

203 
s_skewî
.
	`ª£t
(
_skew_ty≥
);

205 if(
_skew_ty≥
 !
SKEW_CHAOTIC
 || 
	`UR™d
(1,100) > 30) {

206 
_ch™ge_lﬂd
 = 
åue
;

208 
Sh‹eEnv
::
	`°¨t_lﬂd_imbÆ™˚
();

209 
	}
}

220 
	gSh‹eTM1Env
::
	$ª£t_skew
()

222 
Sh‹eEnv
::
	`ª£t_skew
();

223 
_ch™ge_lﬂd
 = 
Ál£
;

224 
s_skewî
.
	`˛ór
();

225 
	}
}

236 
	gSh‹eTM1Env
::
	$öfo
() const

238 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
_sˇlög_Á˘‹
);

239 
	`TRACE
–
TRACE_ALWAYS
, "W‹kî†(%d)\n", 
_w‹kî_˙t
);

241 
	}
}

253 
	gSh‹eTM1Env
::
	$°©i°ics
()

256 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

257 
Sh‹eTM1TrxSèts
 
rvÆ
;

258 
rvÆ
 -=Ñval;

259 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

260 
rvÆ
 +*
ô
->
£c⁄d
;

262 
	`TRACE
–
TRACE_STATISTICS
, "GebSubData. Att (%d). Abt (%d). Dld (%d)\n",

263 
rvÆ
.
©ãm±ed
.
gë_sub_d©a
,

264 
rvÆ
.
Áûed
.
gë_sub_d©a
,

265 
rvÆ
.
dódlocked
.
gë_sub_d©a
);

267 
	`TRACE
–
TRACE_STATISTICS
, "GebNewDest. Att (%d). Abt (%d). Dld (%d)\n",

268 
rvÆ
.
©ãm±ed
.
gë_√w_de°
,

269 
rvÆ
.
Áûed
.
gë_√w_de°
,

270 
rvÆ
.
dódlocked
.
gë_√w_de°
);

272 
	`TRACE
–
TRACE_STATISTICS
, "GebAccData. Att (%d). Abt (%d). Dld (%d)\n",

273 
rvÆ
.
©ãm±ed
.
gë_acc_d©a
,

274 
rvÆ
.
Áûed
.
gë_acc_d©a
,

275 
rvÆ
.
dódlocked
.
gë_acc_d©a
);

277 
	`TRACE
–
TRACE_STATISTICS
, "UpdSubData. Att (%d). Abt (%d). Dld (%d)\n",

278 
rvÆ
.
©ãm±ed
.
upd_sub_d©a
,

279 
rvÆ
.
Áûed
.
upd_sub_d©a
,

280 
rvÆ
.
dódlocked
.
upd_sub_d©a
);

282 
	`TRACE
–
TRACE_STATISTICS
, "UpdLocation. Att (%d). Abt (%d). Dld (%d)\n",

283 
rvÆ
.
©ãm±ed
.
upd_loc
,

284 
rvÆ
.
Áûed
.
upd_loc
,

285 
rvÆ
.
dódlocked
.
upd_loc
);

287 
	`TRACE
–
TRACE_STATISTICS
, "InsCallFwd. Att (%d). Abt (%d). Dld (%d)\n",

288 
rvÆ
.
©ãm±ed
.
ös_ˇŒ_fwd
,

289 
rvÆ
.
Áûed
.
ös_ˇŒ_fwd
,

290 
rvÆ
.
dódlocked
.
ös_ˇŒ_fwd
);

292 
	`TRACE
–
TRACE_STATISTICS
, "DelCallFwd. Att (%d). Abt (%d). Dld (%d)\n",

293 
rvÆ
.
©ãm±ed
.
dñ_ˇŒ_fwd
,

294 
rvÆ
.
Áûed
.
dñ_ˇŒ_fwd
,

295 
rvÆ
.
dódlocked
.
dñ_ˇŒ_fwd
);

297 
	`TRACE
–
TRACE_STATISTICS
, "GetSubNbr. Att (%d). Abt (%d). Dld (%d)\n",

298 
rvÆ
.
©ãm±ed
.
gë_sub_nbr
,

299 
rvÆ
.
Áûed
.
gë_sub_nbr
,

300 
rvÆ
.
dódlocked
.
gë_sub_nbr
);

302 
	`TRACE
–
TRACE_STATISTICS
, "InsCallFwdBench. Att (%d). Abt (%d). Dld (%d)\n",

303 
rvÆ
.
©ãm±ed
.
ös_ˇŒ_fwd_bích
,

304 
rvÆ
.
Áûed
.
ös_ˇŒ_fwd_bích
,

305 
rvÆ
.
dódlocked
.
ös_ˇŒ_fwd_bích
);

307 
	`TRACE
–
TRACE_STATISTICS
, "DelCallFwdBench. Att (%d). Abt (%d). Dld (%d)\n",

308 
rvÆ
.
©ãm±ed
.
dñ_ˇŒ_fwd_bích
,

309 
rvÆ
.
Áûed
.
dñ_ˇŒ_fwd_bích
,

310 
rvÆ
.
dódlocked
.
dñ_ˇŒ_fwd_bích
);

312 
Sh‹eEnv
::
	`°©i°ics
();

315 
	}
}

329 
	gSh‹eTM1Env
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t


331 
Sh‹eTM1Env
* 
_ív
;

332 
	g_lﬂdîs
;

333 
	g_subs_≥r_w‹kî
;

334 
	g_¥ñﬂds_≥r_w‹kî
;

336 
èbÀ_¸ót‹_t
(
Sh‹eTM1Env
* 
ív
,

337 c⁄° 
lﬂdîs
, c⁄° 
subs_≥r_w‹kî
, c⁄° 
¥ñﬂds_≥r_w‹kî
)

338 : 
thªad_t
("CR"), 
_ív
(
ív
),

339 
_lﬂdîs
(
lﬂdîs
),
_subs_≥r_w‹kî
(
subs_≥r_w‹kî
),
_¥ñﬂds_≥r_w‹kî
(
¥ñﬂds_≥r_w‹kî
)

341 
as£π
 (
lﬂdîs
);

342 
as£π
 (
subs_≥r_w‹kî
);

343 
as£π
 (
¥ñﬂds_≥r_w‹kî
>=0);

344 
as£π
 (
subs_≥r_w‹kî
>=
¥ñﬂds_≥r_w‹kî
);

346 
vútuÆ
 
w‹k
();

351 
	gSh‹eTM1Env
::
èbÀ_¸ót‹_t
::
	$w‹k
()

354 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

355 
	`W_COERCE
(
_ív
->
_psub_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

356 
	`W_COERCE
(
_ív
->
_∑i_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

357 
	`W_COERCE
(
_ív
->
_psf_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

358 
	`W_COERCE
(
_ív
->
_pcf_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

359 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

362 
_ív
->
_psub_m™
->
	`ªgi°î_èbÀ_m™
();

363 
_ív
->
_∑i_m™
->
	`ªgi°î_èbÀ_m™
();

364 
_ív
->
_psf_m™
->
	`ªgi°î_èbÀ_m™
();

365 
_ív
->
_pcf_m™
->
	`ªgi°î_èbÀ_m™
();

369 
sub_id
 = 0;

370 
i
=0; i<
_lﬂdîs
; i++) {

371 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

372 
	`TRACE
–
TRACE_ALWAYS
, "Preloading (%d). Start (%d). Todo (%d)\n",

373 
i
, (i*
_subs_≥r_w‹kî
), 
_¥ñﬂds_≥r_w‹kî
);

375 
j
=0; j<
_¥ñﬂds_≥r_w‹kî
; j++) {

376 
sub_id
 = 
i
*
_subs_≥r_w‹kî
 + 
j
;

377 
	`W_COERCE
(
_ív
->
	`x˘_p›uœã_⁄e
(
sub_id
+1));

379 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

381 
	}
}

392 ˛as†
	cSh‹eTM1Env
::
èbÀ_buûdî_t
 : 
public
 
thªad_t


394 
Sh‹eTM1Env
* 
_ív
;

395 
	m_lﬂdî_id
;

396 
	m_°¨t
;

397 
	m_cou¡
;

398 
	mpublic
:

399 
	$èbÀ_buûdî_t
(
Sh‹eTM1Env
* 
ív
, 
lﬂdîid
, 
°¨t
, 
cou¡
)

400 : 
	`thªad_t
(
	`c_°r
("LD-%d",
lﬂdîid
)),

401 
	`_ív
(
ív
), 
	`_lﬂdî_id
(
lﬂdîid
), 
	`_°¨t
(
°¨t
), 
	$_cou¡
(
cou¡
)

403 
vútuÆ
 
	`w‹k
();

405 
	}
};

408 
	gSh‹eTM1Env
::
èbÀ_buûdî_t
::
	$w‹k
()

410 
	`as£π
 (
_cou¡
>=0);

412 
w_rc_t
 
e
 = 
RCOK
;

413 
commôm¨k
 = 0;

414 
åa˚m¨k
 = 0;

415 
subßdded
 = 0;

417 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

420 
œ°_commô
 = 0;

421 
subßdded
=0; subßdded<
_cou¡
; ++subsadded) {

422 
agaö
:

423 
sub_id
 = 
_°¨t
 + 
subßdded
;

426 
e
 = 
_ív
->
	`x˘_p›uœã_⁄e
(
sub_id
+1);

428 if(
e
.
	`is_îr‹
()) {

429 
	`W_COERCE
(
_ív
->
	`db
()->
	`ab‹t_x˘
());

430 if(
e
.
	`îr_num
(Ë=
smÀvñ_0
::
eDEADLOCK
) {

431 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

432 
subßdded
 = 
œ°_commô
 + 1;

433 
agaö
;

435 
°rög°ªam
 
os
;

436 
os
 << 
e
 << 
íds
;

437 
°rög
 
°r
 = 
os
.
	`°r
();

438 
	`TRACE
–
TRACE_ALWAYS
, "UnableÅo Insert Subscriber (%d) dueÅo:\n%s\n",

439 
sub_id
, 
°r
.
	`c_°r
());

443 i‡(
subßdded
>=
åa˚m¨k
) {

444 
	`TRACE
–
TRACE_ALWAYS
, "Start (%d). Todo (%d). Added (%d)\n",

445 
_°¨t
, 
_cou¡
, 
subßdded
);

446 
åa˚m¨k
 +
TM1_LOADING_TRACE_INTERVAL
;

450 i‡(
subßdded
>=
commôm¨k
) {

451 
e
 = 
_ív
->
	`db
()->
	`commô_x˘
();

453 i‡(
e
.
	`is_îr‹
()) {

454 
°rög°ªam
 
os
;

455 
os
 << 
e
 << 
íds
;

456 
°rög
 
°r
 = 
os
.
	`°r
();

457 
	`TRACE
–
TRACE_ALWAYS
, "UnableÅo Commit (%d) dueÅo:\n%s\n",

458 
sub_id
, 
°r
.
	`c_°r
());

460 
w_rc_t
 
e2
 = 
_ív
->
	`db
()->
	`ab‹t_x˘
();

461 if(
e2
.
	`is_îr‹
()) {

462 
	`TRACE
–
TRACE_ALWAYS
,

464 
sub_id
, 
e2
.
	`îr_num
());

468 
œ°_commô
 = 
subßdded
;

469 
commôm¨k
 +
TM1_LOADING_COMMIT_INTERVAL
;

471 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

476 
e
 = 
_ív
->
	`db
()->
	`commô_x˘
();

478 i‡(
e
.
	`is_îr‹
()) {

479 
°rög°ªam
 
os
;

480 
os
 << 
e
 << 
íds
;

481 
°rög
 
°r
 = 
os
.
	`°r
();

482 
	`TRACE
–
TRACE_ALWAYS
, "UnableÅo final Commit dueÅo:\n%s\n",

483 
°r
.
	`c_°r
());

485 
w_rc_t
 
e2
 = 
_ív
->
	`db
()->
	`ab‹t_x˘
();

486 if(
e2
.
	`is_îr‹
()) {

487 
	`TRACE
–
TRACE_ALWAYS
, "UnableÅoábortÅrx dueÅo [0x%x]\n",

488 
e2
.
	`îr_num
());

491 
	}
}

510 
w_rc_t
 
	gSh‹eTM1Env
::
	$lﬂdd©a
()

513 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

514 i‡(
_lﬂded
) {

515 
	`TRACE
–
TRACE_TRX_FLOW
,

517  (
RCOK
);

532 
lﬂdîs_to_u£
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-lﬂdîs",
TM1_LOADERS_TO_USE
);

533 
¸ót‹_lﬂdîs_to_u£
 = 
lﬂdîs_to_u£
;

535 
tŸÆ_subs
 = 
_sˇlög_Á˘‹
*
TM1_SUBS_PER_SF
;

536 
	`as£π
 ((
tŸÆ_subs
 % 
lﬂdîs_to_u£
) == 0);

538 
subs_≥r_w‹kî
 = 
tŸÆ_subs
/
lﬂdîs_to_u£
;

539 
¥ñﬂds_≥r_w‹kî
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-ªc‹d-¥ñﬂds",
TM1_SUBS_TO_PRELOAD
);

544 i‡(
subs_≥r_w‹kî
<
¥ñﬂds_≥r_w‹kî
) {

545 
¥ñﬂds_≥r_w‹kî
 = 
subs_≥r_w‹kî
;

546 
lﬂdîs_to_u£
 = 0;

549 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

552 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

553 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
, 
¸ót‹_lﬂdîs_to_u£
, 
subs_≥r_w‹kî
, 
¥ñﬂds_≥r_w‹kî
);

554 
tc
->
	`f‹k
();

555 
tc
->
	`joö
();

567 
¨øy_gu¨d_t
< 
gu¨d
<
èbÀ_buûdî_t
> > 
	`lﬂdîs
(
√w
 gu¨d<èbÀ_buûdî_t>[
lﬂdîs_to_u£
]);

568 
i
=0; i<
lﬂdîs_to_u£
; i++) {

570 
°¨t
 = 
i
*
subs_≥r_w‹kî
 + 
¥ñﬂds_≥r_w‹kî
;

571 
cou¡
 = 
subs_≥r_w‹kî
 - 
¥ñﬂds_≥r_w‹kî
;

572 
lﬂdîs
[
i
] = 
√w
 
	`èbÀ_buûdî_t
(
this
, i, 
°¨t
, 
cou¡
);

573 
lﬂdîs
[
i
]->
	`f‹k
();

576 
i
=0; i<
lﬂdîs_to_u£
; i++) {

577 
lﬂdîs
[
i
]->
	`joö
();

582 
time_t
 
t°›
 = 
	`time
(
NULL
);

585 
	`TRACE
–
TRACE_STATISTICS
, "Loading finished. %d subscribersÜoaded in (%d) secs...\n",

586 
tŸÆ_subs
, (
t°›
 - 
t°¨t
));

589 
_lﬂded
 = 
åue
;

591  (
RCOK
);

592 
	}
}

601 
	gSh‹eTM1Env
::
	$c⁄f
()

604 
Sh‹eEnv
::
	`c⁄f
();

605 
	`upd_sf
();

606 
	`upd_w‹kî_˙t
();

608 
	}
}

618 
	gSh‹eTM1Env
::
	$po°_öô
()

621 
	}
}

624 
w_rc_t
 
	gSh‹eTM1Env
::
	$_po°_öô_im∂
()

626 
	`TRACE
(
TRACE_DEBUG
, "DoingÇothing\n");

627  (
RCOK
);

628 
	}
}

639 
w_rc_t
 
	gSh‹eTM1Env
::
	$db_¥öt
(
löes
)

642 
	`as£π
 (
_pssm
);

643 
	`as£π
 (
_öôülized
);

644 
	`as£π
 (
_lﬂded
);

647 
	`W_DO
(
_psub_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

648 
	`W_DO
(
_∑i_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

649 
	`W_DO
(
_psf_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

650 
	`W_DO
(
_pcf_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

652  (
RCOK
);

653 
	}
}

664 
w_rc_t
 
	gSh‹eTM1Env
::
	$db_„tch
()

667 
	`as£π
 (
_pssm
);

668 
	`as£π
 (
_öôülized
);

669 
	`as£π
 (
_lﬂded
);

672 
	`W_DO
(
_psub_m™
->
	`„tch_èbÀ
(
_pssm
));

673 
	`W_DO
(
_∑i_m™
->
	`„tch_èbÀ
(
_pssm
));

674 
	`W_DO
(
_psf_m™
->
	`„tch_èbÀ
(
_pssm
));

675 
	`W_DO
(
_pcf_m™
->
	`„tch_èbÀ
(
_pssm
));

677  (
RCOK
);

678 
	}
}

681 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tm1/shore_tm1_schema.cpp

31 
	~"w‹klﬂd/tm1/sh‹e_tm1_schema.h
"

33 
usög
 
«me•a˚
 
	gsh‹e
;

35 
ENTER_NAMESPACE
(
tm1
);

67 
	gsubs¸ibî_t
::
	$subs¸ibî_t
(c⁄° 
uöt4_t
& 
pd
)

68 #ifde‡
CFG_HACK


69 : 
	`èbÀ_desc_t
("SUBSCRIBER", 
TM1_SUB_FCOUNT
+1, 
pd
)

71 : 
	`èbÀ_desc_t
("SUBSCRIBER", 
TM1_SUB_FCOUNT
, 
pd
)

75 
_desc
[0].
	`£tup
(
SQL_INT
, "S_ID");

77 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "SUB_NBR", 
TM1_SUB_NBR_SZ
);

79 
_desc
[2].
	`£tup
(
SQL_BIT
, "BIT_1");

80 
_desc
[3].
	`£tup
(
SQL_BIT
, "BIT_2");

81 
_desc
[4].
	`£tup
(
SQL_BIT
, "BIT_3");

82 
_desc
[5].
	`£tup
(
SQL_BIT
, "BIT_4");

83 
_desc
[6].
	`£tup
(
SQL_BIT
, "BIT_5");

84 
_desc
[7].
	`£tup
(
SQL_BIT
, "BIT_6");

85 
_desc
[8].
	`£tup
(
SQL_BIT
, "BIT_7");

86 
_desc
[9].
	`£tup
(
SQL_BIT
, "BIT_8");

87 
_desc
[10].
	`£tup
(
SQL_BIT
, "BIT_9");

88 
_desc
[11].
	`£tup
(
SQL_BIT
, "BIT_10");

90 
_desc
[12].
	`£tup
(
SQL_SMALLINT
, "HEX_1");

91 
_desc
[13].
	`£tup
(
SQL_SMALLINT
, "HEX_2");

92 
_desc
[14].
	`£tup
(
SQL_SMALLINT
, "HEX_3");

93 
_desc
[15].
	`£tup
(
SQL_SMALLINT
, "HEX_4");

94 
_desc
[16].
	`£tup
(
SQL_SMALLINT
, "HEX_5");

95 
_desc
[17].
	`£tup
(
SQL_SMALLINT
, "HEX_6");

96 
_desc
[18].
	`£tup
(
SQL_SMALLINT
, "HEX_7");

97 
_desc
[19].
	`£tup
(
SQL_SMALLINT
, "HEX_8");

98 
_desc
[20].
	`£tup
(
SQL_SMALLINT
, "HEX_9");

99 
_desc
[21].
	`£tup
(
SQL_SMALLINT
, "HEX_10");

101 
_desc
[22].
	`£tup
(
SQL_SMALLINT
, "BYTE2_1");

102 
_desc
[23].
	`£tup
(
SQL_SMALLINT
, "BYTE2_2");

103 
_desc
[24].
	`£tup
(
SQL_SMALLINT
, "BYTE2_3");

104 
_desc
[25].
	`£tup
(
SQL_SMALLINT
, "BYTE2_4");

105 
_desc
[26].
	`£tup
(
SQL_SMALLINT
, "BYTE2_5");

106 
_desc
[27].
	`£tup
(
SQL_SMALLINT
, "BYTE2_6");

107 
_desc
[28].
	`£tup
(
SQL_SMALLINT
, "BYTE2_7");

108 
_desc
[29].
	`£tup
(
SQL_SMALLINT
, "BYTE2_8");

109 
_desc
[30].
	`£tup
(
SQL_SMALLINT
, "BYTE2_9");

110 
_desc
[31].
	`£tup
(
SQL_SMALLINT
, "BYTE2_10");

112 
_desc
[32].
	`£tup
(
SQL_INT
, "MSC_LOCATION");

113 
_desc
[33].
	`£tup
(
SQL_INT
, "VLR_LOCATION");

115 #ifde‡
CFG_HACK


116 
∑ddög_sz
 = 100-10*(
boﬁ
)-20*()-3*()

117 -
TM1_SUB_NBR_SZ
*();

118 
_desc
[34].
	`£tup
(
SQL_FIXCHAR
, "S_PADDING", 
∑ddög_sz
);

122 
uöt
 
keys1
[1] = { 0 };

123 
	`¸óã_¥im¨y_idx_desc
("S_IDX", 0, 
keys1
, 1, 
pd
);

126 
uöt
 
keys2
[1] = { 1 };

128 #ifde‡
USE_DORA_EXT_IDX


129 i‡(
pd
 & 
PD_NOLOCK
) {

133 
uöt
 
keys2_ext
[2] = { 1, 0 };

134 
	`¸óã_ödex_desc
("SUB_NBR_IDX", 0, 
keys2_ext
, 2, 
åue
, 
Ál£
, (
pd
 ^ 
PD_NOLOCK
));

138 
	`¸óã_ödex_desc
("SUB_NBR_IDX", 0, 
keys2
, 1, 
åue
, 
Ál£
, 
pd
);

139 
	}
}

142 
	gac˚ss_öfo_t
::
	$ac˚ss_öfo_t
(c⁄° 
uöt4_t
& 
pd
)

143 #ifde‡
CFG_HACK


144 : 
	`èbÀ_desc_t
("ACCESS_INFO", 
TM1_AI_FCOUNT
+1, 
pd
)

146 : 
	`èbÀ_desc_t
("ACCESS_INFO", 
TM1_AI_FCOUNT
, 
pd
)

150 
_desc
[0].
	`£tup
(
SQL_INT
, "S_ID");

151 
_desc
[1].
	`£tup
(
SQL_SMALLINT
, "AI_TYPE");

152 
_desc
[2].
	`£tup
(
SQL_SMALLINT
, "DATA1");

153 
_desc
[3].
	`£tup
(
SQL_SMALLINT
, "DATA2");

154 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "DATA3", 
TM1_AI_DATA3_SZ
);

155 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "DATA4", 
TM1_AI_DATA4_SZ
);

158 #ifde‡
CFG_HACK


159 
∑ddög_sz
 = 50-3*()-1*()

160 -(
TM1_AI_DATA3_SZ
+
TM1_AI_DATA4_SZ
)*();

161 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "AI_PADDING", 
∑ddög_sz
);

170 
uöt
 
keys
[2] = { 0, 1 };

171 
	`¸óã_¥im¨y_idx_desc
("AI_IDX", 0, 
keys
, 2, 
pd
);

172 
	}
}

176 
	g•ecül_Ácûôy_t
::
	$•ecül_Ácûôy_t
(c⁄° 
uöt4_t
& 
pd
)

177 #ifde‡
CFG_HACK


178 : 
	`èbÀ_desc_t
("SPECIAL_FACILITY", 
TM1_SF_FCOUNT
+1, 
pd
)

180 : 
	`èbÀ_desc_t
("SPECIAL_FACILITY", 
TM1_SF_FCOUNT
, 
pd
)

184 
_desc
[0].
	`£tup
(
SQL_INT
, "S_ID");

185 
_desc
[1].
	`£tup
(
SQL_SMALLINT
, "SF_TYPE");

186 
_desc
[2].
	`£tup
(
SQL_BIT
, "IS_ACTIVE");

187 
_desc
[3].
	`£tup
(
SQL_SMALLINT
, "ERROR_CNTRL");

188 
_desc
[4].
	`£tup
(
SQL_SMALLINT
, "DATA_A");

189 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "DATA_B", 
TM1_SF_DATA_B_SZ
);

191 #ifde‡
CFG_HACK


192 
∑ddög_sz
 = 50-1*(
boﬁ
)-3*()-1*()

193 -
TM1_SF_DATA_B_SZ
*();

194 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "SF_PADDING", 
∑ddög_sz
);

203 
uöt
 
keys
[2] = { 0, 1 };

204 
	`¸óã_¥im¨y_idx_desc
("SF_IDX", 0, 
keys
, 2, 
pd
);

205 
	}
}

209 
	gˇŒ_f‹w¨dög_t
::
	$ˇŒ_f‹w¨dög_t
(c⁄° 
uöt4_t
& 
pd
)

210 #ifde‡
CFG_HACK


211 : 
	`èbÀ_desc_t
("CALL_FORWARDING", 
TM1_CF_FCOUNT
+1, 
pd
)

213 : 
	`èbÀ_desc_t
("CALL_FORWARDING", 
TM1_CF_FCOUNT
, 
pd
)

217 
_desc
[0].
	`£tup
(
SQL_INT
, "S_ID");

218 
_desc
[1].
	`£tup
(
SQL_SMALLINT
, "SF_TYPE");

219 
_desc
[2].
	`£tup
(
SQL_SMALLINT
, "START_TIME");

220 
_desc
[3].
	`£tup
(
SQL_SMALLINT
, "END_TIME");

221 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "NUMBERX", 
TM1_CF_NUMBERX_SZ
);

223 #ifde‡
CFG_HACK


224 
∑ddög_sz
 = 50-3*()-1*()-
TM1_CF_NUMBERX_SZ
*();

225 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "CF_PADDING", 
∑ddög_sz
);

229 
uöt
 
keys
[3] = { 0, 1, 2 };

230 
	`¸óã_¥im¨y_idx_desc
("CF_IDX", 0, 
keys
, 3, 
pd
);

231 
	}
}

234 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tm1/shore_tm1_schema_man.cpp

32 
	~"w‹klﬂd/tm1/sh‹e_tm1_schema_m™.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

37 
ENTER_NAMESPACE
(
tm1
);

52 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_idx_¥obe
(
ss_m
* 
db
,

53 
sub_tu∂e
* 
±u∂e
,

54 c⁄° 
s_id
)

56 
	`as£π
 (
±u∂e
);

57 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

58  (
	`ödex_¥obe_by_«me
(
db
, "S_IDX", 
±u∂e
));

59 
	}
}

61 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_idx_upd
(
ss_m
* 
db
,

62 
sub_tu∂e
* 
±u∂e
,

63 c⁄° 
s_id
)

65 
	`as£π
 (
±u∂e
);

66 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

67  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "S_IDX", 
±u∂e
));

68 
	}
}

70 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_idx_∆
(
ss_m
* 
db
,

71 
sub_tu∂e
* 
±u∂e
,

72 c⁄° 
s_id
)

74 
	`as£π
 (
±u∂e
);

75 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

76  (
	`ödex_¥obe_∆_by_«me
(
db
, "S_IDX", 
±u∂e
));

77 
	}
}

81 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_nbr_idx_¥obe
(
ss_m
* 
db
,

82 
sub_tu∂e
* 
±u∂e
,

83 c⁄° * 
s_nbr
)

85 
	`as£π
 (
±u∂e
);

86 
±u∂e
->
	`£t_vÆue
(1, 
s_nbr
);

87  (
	`ödex_¥obe_by_«me
(
db
, "SUB_NBR_IDX", 
±u∂e
));

88 
	}
}

90 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_nbr_idx_upd
(
ss_m
* 
db
,

91 
sub_tu∂e
* 
±u∂e
,

92 c⁄° * 
s_nbr
)

94 
	`as£π
 (
±u∂e
);

95 
±u∂e
->
	`£t_vÆue
(1, 
s_nbr
);

96  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "SUB_NBR_IDX", 
±u∂e
));

97 
	}
}

99 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_nbr_idx_∆
(
ss_m
* 
db
,

100 
sub_tu∂e
* 
±u∂e
,

101 c⁄° * 
s_nbr
)

103 
	`as£π
 (
±u∂e
);

104 
±u∂e
->
	`£t_vÆue
(1, 
s_nbr
);

105  (
	`ödex_¥obe_∆_by_«me
(
db
, "SUB_NBR_IDX", 
±u∂e
));

106 
	}
}

110 
w_rc_t
 
	gsub_m™_im∂
::
	$sub_gë_idx_ôî
(
ss_m
* 
db
,

111 
sub_idx_ôî
* &
ôî
,

112 
sub_tu∂e
* 
±u∂e
,

113 
ªp_row_t
 &
ª∂ow
,

114 
ªp_row_t
 &
ªphigh
,

115 c⁄° 
sub_id
,

116 c⁄° 
uöt
 
ønge
,

117 
lock_mode_t
 
Æm
,

118 
boﬁ
 
√ed_tu∂e
)

120 
	`as£π
 (
±u∂e
);

123 
	`as£π
 (
_±abÀ
);

124 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("SUB_NBR_IDX");

125 
	`as£π
 (
pödex
);

127 
lowsz
, 
highsz
;

128 
aSubNbr
[
	`STRSIZE
(
TM1_SUB_NBR_SZ
)];

129 
	`mem£t
(
aSubNbr
,0,
	`STRSIZE
(
TM1_SUB_NBR_SZ
));

134 
	`•rötf
(
aSubNbr
,"%015d",
sub_id
);

135 
±u∂e
->
	`£t_vÆue
(1, 
aSubNbr
);

137 #ifde‡
USE_DORA_EXT_IDX


139 if(!
√ed_tu∂e
Ë{ 
±u∂e
->
	`£t_vÆue
(0, 0); }

142 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

143 
	`as£π
 (
ª∂ow
.
_de°
);

146 
	`•rötf
(
aSubNbr
,"%015d",(
sub_id
+
ønge
));

147 
±u∂e
->
	`£t_vÆue
(1, 
aSubNbr
);

149 #ifde‡
USE_DORA_EXT_IDX


150 if(!
√ed_tu∂e
Ë{ 
±u∂e
->
	`£t_vÆue
(0, 
MAX_INT
); }

153 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

154 
	`as£π
 (
ªphigh
.
_de°
);

157 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

158 
Æm
, 
√ed_tu∂e
,

159 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

160 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

161  (
RCOK
);

162 
	}
}

170 
w_rc_t
 
	gai_m™_im∂
::
	$ai_idx_¥obe
(
ss_m
* 
db
,

171 
ai_tu∂e
* 
±u∂e
,

172 c⁄° 
s_id
, c⁄° 
ai_ty≥
)

174 
	`as£π
 (
±u∂e
);

175 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

176 
±u∂e
->
	`£t_vÆue
(1, 
ai_ty≥
);

177  (
	`ödex_¥obe_by_«me
(
db
, "AI_IDX", 
±u∂e
));

178 
	}
}

180 
w_rc_t
 
	gai_m™_im∂
::
	$ai_idx_upd
(
ss_m
* 
db
,

181 
ai_tu∂e
* 
±u∂e
,

182 c⁄° 
s_id
, c⁄° 
ai_ty≥
)

184 
	`as£π
 (
±u∂e
);

185 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

186 
±u∂e
->
	`£t_vÆue
(1, 
ai_ty≥
);

187  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "AI_IDX", 
±u∂e
));

188 
	}
}

190 
w_rc_t
 
	gai_m™_im∂
::
	$ai_idx_∆
(
ss_m
* 
db
,

191 
ai_tu∂e
* 
±u∂e
,

192 c⁄° 
s_id
, c⁄° 
ai_ty≥
)

194 
	`as£π
 (
±u∂e
);

195 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

196 
±u∂e
->
	`£t_vÆue
(1, 
ai_ty≥
);

197  (
	`ödex_¥obe_∆_by_«me
(
db
, "AI_IDX", 
±u∂e
));

198 
	}
}

207 
w_rc_t
 
	gsf_m™_im∂
::
	$sf_idx_¥obe
(
ss_m
* 
db
,

208 
sf_tu∂e
* 
±u∂e
,

209 c⁄° 
s_id
, c⁄° 
sf_ty≥
)

211 
	`as£π
 (
±u∂e
);

212 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

213 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

214  (
	`ödex_¥obe_by_«me
(
db
, "SF_IDX", 
±u∂e
));

215 
	}
}

217 
w_rc_t
 
	gsf_m™_im∂
::
	$sf_idx_upd
(
ss_m
* 
db
,

218 
sf_tu∂e
* 
±u∂e
,

219 c⁄° 
s_id
, c⁄° 
sf_ty≥
)

221 
	`as£π
 (
±u∂e
);

222 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

223 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

224  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "SF_IDX", 
±u∂e
));

225 
	}
}

227 
w_rc_t
 
	gsf_m™_im∂
::
	$sf_idx_∆
(
ss_m
* 
db
,

228 
sf_tu∂e
* 
±u∂e
,

229 c⁄° 
s_id
, c⁄° 
sf_ty≥
)

231 
	`as£π
 (
±u∂e
);

232 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

233 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

234  (
	`ödex_¥obe_∆_by_«me
(
db
, "SF_IDX", 
±u∂e
));

235 
	}
}

240 
w_rc_t
 
	gsf_m™_im∂
::
	$sf_gë_idx_ôî
(
ss_m
* 
db
,

241 
sf_idx_ôî
* &
ôî
,

242 
sf_tu∂e
* 
±u∂e
,

243 
ªp_row_t
 &
ª∂ow
,

244 
ªp_row_t
 &
ªphigh
,

245 c⁄° 
sub_id
,

246 
lock_mode_t
 
Æm
,

247 
boﬁ
 
√ed_tu∂e
)

249 
	`as£π
 (
±u∂e
);

252 
	`as£π
 (
_±abÀ
);

253 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("SF_IDX");

254 
	`as£π
 (
pödex
);

259 
±u∂e
->
	`£t_vÆue
(0, 
sub_id
);

260 
±u∂e
->
	`£t_vÆue
(1, ()1);

262 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

263 
	`as£π
 (
ª∂ow
.
_de°
);

265 
±u∂e
->
	`£t_vÆue
(1, ()4);

267 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

268 
	`as£π
 (
ªphigh
.
_de°
);

271 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

272 
Æm
, 
√ed_tu∂e
,

273 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

274 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

275  (
RCOK
);

276 
	}
}

279 
w_rc_t
 
	gsf_m™_im∂
::
	$sf_gë_idx_ôî_∆
(
ss_m
* 
db
,

280 
sf_idx_ôî
* &
ôî
,

281 
sf_tu∂e
* 
±u∂e
,

282 
ªp_row_t
 &
ª∂ow
,

283 
ªp_row_t
 &
ªphigh
,

284 c⁄° 
sub_id
,

285 
boﬁ
 
√ed_tu∂e
)

287  (
	`sf_gë_idx_ôî
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,
sub_id
,
NL
,
√ed_tu∂e
));

288 
	}
}

298 
w_rc_t
 
	gcf_m™_im∂
::
	$cf_idx_¥obe
(
ss_m
* 
db
,

299 
cf_tu∂e
* 
±u∂e
,

300 c⁄° 
s_id
, c⁄° 
sf_ty≥
,

301 c⁄° 
°ime
)

303 
	`as£π
 (
±u∂e
);

304 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

305 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

306 
±u∂e
->
	`£t_vÆue
(2, 
°ime
);

307  (
	`ödex_¥obe_by_«me
(
db
, "CF_IDX", 
±u∂e
));

308 
	}
}

310 
w_rc_t
 
	gcf_m™_im∂
::
	$cf_idx_upd
(
ss_m
* 
db
,

311 
cf_tu∂e
* 
±u∂e
,

312 c⁄° 
s_id
, c⁄° 
sf_ty≥
,

313 c⁄° 
°ime
)

315 
	`as£π
 (
±u∂e
);

316 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

317 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

318 
±u∂e
->
	`£t_vÆue
(2, 
°ime
);

319  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "CF_IDX", 
±u∂e
));

320 
	}
}

322 
w_rc_t
 
	gcf_m™_im∂
::
	$cf_idx_∆
(
ss_m
* 
db
,

323 
cf_tu∂e
* 
±u∂e
,

324 c⁄° 
s_id
, c⁄° 
sf_ty≥
,

325 c⁄° 
°ime
)

327 
	`as£π
 (
±u∂e
);

328 
±u∂e
->
	`£t_vÆue
(0, 
s_id
);

329 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

330 
±u∂e
->
	`£t_vÆue
(2, 
°ime
);

331  (
	`ödex_¥obe_∆_by_«me
(
db
, "CF_IDX", 
±u∂e
));

332 
	}
}

337 
w_rc_t
 
	gcf_m™_im∂
::
	$cf_gë_idx_ôî
(
ss_m
* 
db
,

338 
cf_idx_ôî
* &
ôî
,

339 
cf_tu∂e
* 
±u∂e
,

340 
ªp_row_t
 &
ª∂ow
,

341 
ªp_row_t
 &
ªphigh
,

342 c⁄° 
sub_id
,

343 c⁄° 
sf_ty≥
,

344 c⁄° 
s_time
,

345 
lock_mode_t
 
Æm
,

346 
boﬁ
 
√ed_tu∂e
)

348 
	`as£π
 (
±u∂e
);

351 
	`as£π
 (
_±abÀ
);

352 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CF_IDX");

353 
	`as£π
 (
pödex
);

358 
±u∂e
->
	`£t_vÆue
(0, 
sub_id
);

359 
±u∂e
->
	`£t_vÆue
(1, 
sf_ty≥
);

360 
±u∂e
->
	`£t_vÆue
(2, 
s_time
);

362 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

363 
	`as£π
 (
ª∂ow
.
_de°
);

366 
±u∂e
->
	`£t_vÆue
(2, ()24);

368 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

369 
	`as£π
 (
ªphigh
.
_de°
);

372 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

373 
Æm
, 
√ed_tu∂e
,

374 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

375 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

376  (
RCOK
);

377 
	}
}

380 
w_rc_t
 
	gcf_m™_im∂
::
	$cf_gë_idx_ôî_∆
(
ss_m
* 
db
,

381 
cf_idx_ôî
* &
ôî
,

382 
cf_tu∂e
* 
±u∂e
,

383 
ªp_row_t
 &
ª∂ow
,

384 
ªp_row_t
 &
ªphigh
,

385 c⁄° 
sub_id
,

386 c⁄° 
sf_ty≥
,

387 c⁄° 
s_time
,

388 
boﬁ
 
√ed_tu∂e
)

390  (
	`cf_gë_idx_ôî
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,
sub_id
,
sf_ty≥
,
s_time
,
NL
,
√ed_tu∂e
));

391 
	}
}

394 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tm1/shore_tm1_xct.cpp

31 
	~"w‹klﬂd/tm1/sh‹e_tm1_ív.h
"

32 
	~"w‹klﬂd/tm1/tm1_öput.h
"

34 
	~<ve˘‹
>

35 
	~<numîic
>

36 
	~<Æg‹ôhm
>

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
tm1
);

52 
__thªad
 
Sh‹eTM1TrxSèts
 
	gmy_°©s
;

54 
	gSh‹eTM1Env
::
	$ív_thªad_öô
()

56 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

57 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

58 
	}
}

60 
	gSh‹eTM1Env
::
	$ív_thªad_föi
()

62 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

63 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

64 
	}
}

76 
Sh‹eTM1TrxSèts
 
	gSh‹eTM1Env
::
	$_gë_°©s
()

78 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

79 
Sh‹eTM1TrxSèts
 
rvÆ
;

80 
rvÆ
 -=Ñval;

81 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

82 
rvÆ
 +*
ô
->
£c⁄d
;

83  (
rvÆ
);

84 
	}
}

95 
	gSh‹eTM1Env
::
	$ª£t_°©s
()

97 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

98 
_œ°_°©s
 = 
	`_gë_°©s
();

99 
	}
}

110 
	gSh‹eTM1Env
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

111 c⁄° 
iS¥ód
,

112 c⁄° 
iNumOfThªads
,

113 c⁄° 
dñay
,

114 c⁄° 
ul⁄g_t
 
mioch
,

115 c⁄° 
avg˝uußge
)

117 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

120 
Sh‹eTM1TrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

123 
cuºít_°©s
 -
_œ°_°©s
;

125 
uöt
 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

126 
uöt
 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

127 
uöt
 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

129 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

141 
iQuîõdSF
,

142 (
iS¥ód
 ? "Yes" : "No"),

143 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
,

144 (()100*(
åxs_©t
-
åxs_abt
-
åxs_dld
))/()trxs_att,

145 
dñay
, 
mioch
/dñay, 
avg˝uußge
,

146 100*
avg˝uußge
/
	`gë_max_˝u_cou¡
(),

147 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
);

148 
	}
}

174 
w_rc_t
 
	gSh‹eTM1Env
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

176 
	`as£π
 (
¥eque°
);

178 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

179 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

180 if(!
_bAœrmSë
) {

181 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

182 
_bAœrmSë
 = 
åue
;

187 i‡(
¥eque°
->
	`ty≥
(Ë=
XCT_TM1_MIX
) {

188 
¥eque°
->
	`£t_ty≥
(
	`øndom_tm1_x˘_ty≥
(
smthªad_t
::
	`ønd
()%100));

191 
¥eque°
->
	`ty≥
()) {

194 
XCT_TM1_GET_SUB_DATA
:

195  (
	`run_gë_sub_d©a
(
¥eque°
));

196 
XCT_TM1_GET_NEW_DEST
:

197  (
	`run_gë_√w_de°
(
¥eque°
));

198 
XCT_TM1_GET_ACC_DATA
:

199  (
	`run_gë_acc_d©a
(
¥eque°
));

200 
XCT_TM1_UPD_SUB_DATA
:

201  (
	`run_upd_sub_d©a
(
¥eque°
));

202 
XCT_TM1_UPD_LOCATION
:

203  (
	`run_upd_loc
(
¥eque°
));

204 
XCT_TM1_INS_CALL_FWD
:

205  (
	`run_ös_ˇŒ_fwd
(
¥eque°
));

206 
XCT_TM1_DEL_CALL_FWD
:

207  (
	`run_dñ_ˇŒ_fwd
(
¥eque°
));

208 
XCT_TM1_CALL_FWD_MIX
:

210 i‡(
	`UR™d
(1,100)>50)

211  (
	`run_ös_ˇŒ_fwd
(
¥eque°
));

213  (
	`run_dñ_ˇŒ_fwd
(
¥eque°
));

215 
XCT_TM1_GET_SUB_NBR
:

216  (
	`run_gë_sub_nbr
(
¥eque°
));

218 
XCT_TM1_INS_CALL_FWD_BENCH
:

219  (
	`run_ös_ˇŒ_fwd_bích
(
¥eque°
));

220 
XCT_TM1_DEL_CALL_FWD_BENCH
:

221  (
	`run_dñ_ˇŒ_fwd_bích
(
¥eque°
));

222 
XCT_TM1_CALL_FWD_MIX_BENCH
:

224 i‡(
	`UR™d
(1,100)>50)

225  (
	`run_ös_ˇŒ_fwd_bích
(
¥eque°
));

227  (
	`run_dñ_ˇŒ_fwd_bích
(
¥eque°
));

230 
	`as£π
 (0);

232  (
RCOK
);

233 
	}
}

252 
DEFINE_TRX
(
Sh‹eTM1Env
,
gë_sub_d©a
);

253 
DEFINE_TRX
(
Sh‹eTM1Env
,
gë_√w_de°
);

254 
DEFINE_TRX
(
Sh‹eTM1Env
,
gë_acc_d©a
);

255 
DEFINE_TRX
(
Sh‹eTM1Env
,
upd_sub_d©a
);

256 
DEFINE_TRX
(
Sh‹eTM1Env
,
upd_loc
);

257 
DEFINE_TRX
(
Sh‹eTM1Env
,
ös_ˇŒ_fwd
);

258 
DEFINE_TRX
(
Sh‹eTM1Env
,
dñ_ˇŒ_fwd
);

260 
DEFINE_TRX
(
Sh‹eTM1Env
,
gë_sub_nbr
);

262 
DEFINE_TRX
(
Sh‹eTM1Env
,
ös_ˇŒ_fwd_bích
);

263 
DEFINE_TRX
(
Sh‹eTM1Env
,
dñ_ˇŒ_fwd_bích
);

279 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_p›uœã_⁄e
(c⁄° 
sub_id
)

281 
	`as£π
 (
sub_id
>=0);

284 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

285 
tu∂e_gu¨d
<
ai_m™_im∂
> 
	`¥ai
(
_∑i_m™
);

286 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_psf_m™
);

287 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

289 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

290 
ªp_row_t
 
	`¨ïrow_key
(
_psub_m™
->
	`ts
());

293 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

294 
¨ïrow_key
.
	`£t
(
_psub_desc
->
	`maxsize
());

296 
¥sub
->
_ªp
 = &
¨ïrow
;

297 
¥ai
->
_ªp
 = &
¨ïrow
;

298 
¥sf
->
_ªp
 = &
¨ïrow
;

299 
¥cf
->
_ªp
 = &
¨ïrow
;

300 
¥sub
->
_ªp_key
 = &
¨ïrow_key
;

301 
¥ai
->
_ªp_key
 = &
¨ïrow_key
;

302 
¥sf
->
_ªp_key
 = &
¨ïrow_key
;

303 
¥cf
->
_ªp_key
 = &
¨ïrow_key
;

305 
i
,
j
=0;

308 
num_ai
 = 
	`UR™d
(
TM1_MIN_AI_PER_SUBSCR
,

309 
TM1_MAX_AI_PER_SUBSCR
);

312 
num_sf
 = 
	`UR™d
(
TM1_MIN_SF_PER_SUBSCR
,

313 
TM1_MAX_SF_PER_SUBSCR
);

315 
num_cf
 = 0;

319 
¥sub
->
	`£t_vÆue
(0, 
sub_id
);

320 
asubnbr
[
	`STRSIZE
(
TM1_SUB_NBR_SZ
)];

321 
	`mem£t
(
asubnbr
,0,
	`STRSIZE
(
TM1_SUB_NBR_SZ
));

322 
	`•rötf
(
asubnbr
,"%015d",
sub_id
);

323 
¥sub
->
	`£t_vÆue
(1, 
asubnbr
);

326 
¥sub
->
	`£t_vÆue
(2, 
	`UR™dBoﬁ
());

327 
¥sub
->
	`£t_vÆue
(3, 
	`UR™dBoﬁ
());

328 
¥sub
->
	`£t_vÆue
(4, 
	`UR™dBoﬁ
());

329 
¥sub
->
	`£t_vÆue
(5, 
	`UR™dBoﬁ
());

330 
¥sub
->
	`£t_vÆue
(6, 
	`UR™dBoﬁ
());

331 
¥sub
->
	`£t_vÆue
(7, 
	`UR™dBoﬁ
());

332 
¥sub
->
	`£t_vÆue
(8, 
	`UR™dBoﬁ
());

333 
¥sub
->
	`£t_vÆue
(9, 
	`UR™dBoﬁ
());

334 
¥sub
->
	`£t_vÆue
(10, 
	`UR™dBoﬁ
());

335 
¥sub
->
	`£t_vÆue
(11, 
	`UR™dBoﬁ
());

338 
¥sub
->
	`£t_vÆue
(12, 
	`UR™dSh‹t
(0,15));

339 
¥sub
->
	`£t_vÆue
(13, 
	`UR™dSh‹t
(0,15));

340 
¥sub
->
	`£t_vÆue
(14, 
	`UR™dSh‹t
(0,15));

341 
¥sub
->
	`£t_vÆue
(15, 
	`UR™dSh‹t
(0,15));

342 
¥sub
->
	`£t_vÆue
(16, 
	`UR™dSh‹t
(0,15));

343 
¥sub
->
	`£t_vÆue
(17, 
	`UR™dSh‹t
(0,15));

344 
¥sub
->
	`£t_vÆue
(18, 
	`UR™dSh‹t
(0,15));

345 
¥sub
->
	`£t_vÆue
(19, 
	`UR™dSh‹t
(0,15));

346 
¥sub
->
	`£t_vÆue
(20, 
	`UR™dSh‹t
(0,15));

347 
¥sub
->
	`£t_vÆue
(21, 
	`UR™dSh‹t
(0,15));

350 
¥sub
->
	`£t_vÆue
(22, 
	`UR™dSh‹t
(0,255));

351 
¥sub
->
	`£t_vÆue
(23, 
	`UR™dSh‹t
(0,255));

352 
¥sub
->
	`£t_vÆue
(24, 
	`UR™dSh‹t
(0,255));

353 
¥sub
->
	`£t_vÆue
(25, 
	`UR™dSh‹t
(0,255));

354 
¥sub
->
	`£t_vÆue
(26, 
	`UR™dSh‹t
(0,255));

355 
¥sub
->
	`£t_vÆue
(27, 
	`UR™dSh‹t
(0,255));

356 
¥sub
->
	`£t_vÆue
(28, 
	`UR™dSh‹t
(0,255));

357 
¥sub
->
	`£t_vÆue
(29, 
	`UR™dSh‹t
(0,255));

358 
¥sub
->
	`£t_vÆue
(30, 
	`UR™dSh‹t
(0,255));

359 
¥sub
->
	`£t_vÆue
(31, 
	`UR™dSh‹t
(0,255));

361 
¥sub
->
	`£t_vÆue
(32, 
	`UR™d
(0,(2<<16)-1));

362 
¥sub
->
	`£t_vÆue
(33, 
	`UR™d
(0,(2<<16)-1));

364 #ifde‡
CFG_HACK


365 
¥sub
->
	`£t_vÆue
(34, "padding");

368 
	`W_DO
(
_psub_m™
->
	`add_tu∂e
(
_pssm
, 
¥sub
));

370 
	`TRACE
–
TRACE_TRX_FLOW
, "Added SUB - (%d)\n", 
sub_id
);

372 
ty≥
;

376 
i
=0; i<
num_ai
; ++i) {

378 
¥ai
->
	`£t_vÆue
(0, 
sub_id
);

381 
ty≥
 = 
i
+1;

382 
¥ai
->
	`£t_vÆue
(1, 
ty≥
);

385 
¥ai
->
	`£t_vÆue
(2, 
	`UR™dSh‹t
(0,255));

386 
¥ai
->
	`£t_vÆue
(3, 
	`UR™dSh‹t
(0,255));

389 
d©a3
[
TM1_AI_DATA3_SZ
];

390 
	`UR™dFûlSåC≠s
(
d©a3
,
TM1_AI_DATA3_SZ
);

391 
¥ai
->
	`£t_vÆue
(4, 
d©a3
);

393 
d©a4
[
TM1_AI_DATA4_SZ
];

394 
	`UR™dFûlSåC≠s
(
d©a4
,
TM1_AI_DATA4_SZ
);

395 
¥ai
->
	`£t_vÆue
(5, 
d©a4
);

397 #ifde‡
CFG_HACK


398 
¥ai
->
	`£t_vÆue
(6, "padding");

401 
	`W_DO
(
_∑i_m™
->
	`add_tu∂e
(
_pssm
, 
¥ai
));

403 
	`TRACE
–
TRACE_TRX_FLOW
, "Added AI-%d - (%d|%d|%s|%s)\n",

404 
i
,
sub_id
,i+1,
d©a3
,
d©a4
);

409 
i
=0; i<
num_sf
; ++i) {

411 
¥sf
->
	`£t_vÆue
(0, 
sub_id
);

414 
ty≥
 = 
i
+1;

415 
¥sf
->
	`£t_vÆue
(1, 
ty≥
);

417 
¥sf
->
	`£t_vÆue
(2, (
	`UR™d
(1,100)<85? 
åue
 : 
Ál£
));

418 
¥sf
->
	`£t_vÆue
(3, 
	`UR™dSh‹t
(0,255));

419 
¥sf
->
	`£t_vÆue
(4, 
	`UR™dSh‹t
(0,255));

422 
d©ab
[
TM1_SF_DATA_B_SZ
];

423 
	`UR™dFûlSåC≠s
(
d©ab
,
TM1_SF_DATA_B_SZ
);

424 
¥sf
->
	`£t_vÆue
(5, 
d©ab
);

426 #ifde‡
CFG_HACK


427 
¥sf
->
	`£t_vÆue
(6, "padding");

430 
	`W_DO
(
_psf_m™
->
	`add_tu∂e
(
_pssm
, 
¥sf
));

432 
	`TRACE
–
TRACE_TRX_FLOW
, "Added SF-%d - (%d|%d|%s)\n",

433 
i
,
sub_id
,i+1,
d©ab
);

438 
num_cf
 = 
	`UR™d
(
TM1_MIN_CF_PER_SF
,

439 
TM1_MAX_CF_PER_SF
);

441 
©ime
;

443 
j
=0; j<
num_cf
; ++j) {

445 
¥cf
->
	`£t_vÆue
(0, 
sub_id
);

447 
ty≥
 = 
i
+1;

448 
¥cf
->
	`£t_vÆue
(1, 
ty≥
);

450 
©ime
 = 
j
*8;

451 
¥cf
->
	`£t_vÆue
(2, 
©ime
);

453 
©ime
 = 
j
*8 + 
	`UR™dSh‹t
(1,8);

454 
¥cf
->
	`£t_vÆue
(3, 
©ime
);

456 
numbx
[
TM1_CF_NUMBERX_SZ
];

457 
	`UR™dFûlSåNumbx
(
numbx
,
TM1_CF_NUMBERX_SZ
);

458 
¥cf
->
	`£t_vÆue
(4, 
numbx
);

459 #ifde‡
CFG_HACK


460 
¥cf
->
	`£t_vÆue
(5, "padding");

463 
	`W_DO
(
_pcf_m™
->
	`add_tu∂e
(
_pssm
, 
¥cf
));

465 
	`TRACE
–
TRACE_TRX_FLOW
, "Added CF-%d - (%d|%d|%d)\n",

466 
i
,
sub_id
,i+1,
j
*8);

470  
RCOK
;

471 
	}
}

482 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_gë_sub_d©a
(c⁄° 
x˘_id
,

483 
gë_sub_d©a_öput_t
& 
gsdö
)

486 
	`as£π
 (
_pssm
);

487 
	`as£π
 (
_öôülized
);

488 
	`as£π
 (
_lﬂded
);

492 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

494 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

497 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

499 
¥sub
->
_ªp
 = &
¨ïrow
;

512 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSD:sub-idx-probe (%d)\n",

513 
x˘_id
, 
gsdö
.
_s_id
);

514 
	`W_DO
(
_psub_m™
->
	`sub_idx_¥obe
(
_pssm
, 
¥sub
, 
gsdö
.
_s_id
));

516 
tm1_sub_t
 
asub
;

520 
¥sub
->
	`gë_vÆue
(0, 
asub
.
S_ID
);

521 
¥sub
->
	`gë_vÆue
(1, 
asub
.
SUB_NBR
, 17);

524 
¥sub
->
	`gë_vÆue
(2, 
asub
.
BIT_XX
[0]);

525 
¥sub
->
	`gë_vÆue
(3, 
asub
.
BIT_XX
[1]);

526 
¥sub
->
	`gë_vÆue
(4, 
asub
.
BIT_XX
[2]);

527 
¥sub
->
	`gë_vÆue
(5, 
asub
.
BIT_XX
[3]);

528 
¥sub
->
	`gë_vÆue
(6, 
asub
.
BIT_XX
[4]);

529 
¥sub
->
	`gë_vÆue
(7, 
asub
.
BIT_XX
[5]);

530 
¥sub
->
	`gë_vÆue
(8, 
asub
.
BIT_XX
[6]);

531 
¥sub
->
	`gë_vÆue
(9, 
asub
.
BIT_XX
[7]);

532 
¥sub
->
	`gë_vÆue
(10, 
asub
.
BIT_XX
[8]);

533 
¥sub
->
	`gë_vÆue
(11, 
asub
.
BIT_XX
[9]);

536 
¥sub
->
	`gë_vÆue
(12, 
asub
.
HEX_XX
[0]);

537 
¥sub
->
	`gë_vÆue
(13, 
asub
.
HEX_XX
[1]);

538 
¥sub
->
	`gë_vÆue
(14, 
asub
.
HEX_XX
[2]);

539 
¥sub
->
	`gë_vÆue
(15, 
asub
.
HEX_XX
[3]);

540 
¥sub
->
	`gë_vÆue
(16, 
asub
.
HEX_XX
[4]);

541 
¥sub
->
	`gë_vÆue
(17, 
asub
.
HEX_XX
[5]);

542 
¥sub
->
	`gë_vÆue
(18, 
asub
.
HEX_XX
[6]);

543 
¥sub
->
	`gë_vÆue
(19, 
asub
.
HEX_XX
[7]);

544 
¥sub
->
	`gë_vÆue
(20, 
asub
.
HEX_XX
[8]);

545 
¥sub
->
	`gë_vÆue
(21, 
asub
.
HEX_XX
[9]);

548 
¥sub
->
	`gë_vÆue
(22, 
asub
.
BYTE2_XX
[0]);

549 
¥sub
->
	`gë_vÆue
(23, 
asub
.
BYTE2_XX
[1]);

550 
¥sub
->
	`gë_vÆue
(24, 
asub
.
BYTE2_XX
[2]);

551 
¥sub
->
	`gë_vÆue
(25, 
asub
.
BYTE2_XX
[3]);

552 
¥sub
->
	`gë_vÆue
(26, 
asub
.
BYTE2_XX
[4]);

553 
¥sub
->
	`gë_vÆue
(27, 
asub
.
BYTE2_XX
[5]);

554 
¥sub
->
	`gë_vÆue
(28, 
asub
.
BYTE2_XX
[6]);

555 
¥sub
->
	`gë_vÆue
(29, 
asub
.
BYTE2_XX
[7]);

556 
¥sub
->
	`gë_vÆue
(30, 
asub
.
BYTE2_XX
[8]);

557 
¥sub
->
	`gë_vÆue
(31, 
asub
.
BYTE2_XX
[9]);

559 
¥sub
->
	`gë_vÆue
(32, 
asub
.
MSC_LOCATION
);

560 
¥sub
->
	`gë_vÆue
(33, 
asub
.
VLR_LOCATION
);

562 #ifde‡
PRINT_TRX_RESULTS


565 
¥sub
->
	`¥öt_tu∂e
();

568  
RCOK
;

570 
	}
}

581 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_gë_√w_de°
(c⁄° 
x˘_id
,

582 
gë_√w_de°_öput_t
& 
gndö
)

585 
	`as£π
 (
_pssm
);

586 
	`as£π
 (
_öôülized
);

587 
	`as£π
 (
_lﬂded
);

591 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_psf_m™
);

592 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

595 
ªp_row_t
 
	`¨ïrow
(
_pcf_m™
->
	`ts
());

597 
¨ïrow
.
	`£t
(
_pcf_desc
->
	`maxsize
());

599 
¥sf
->
_ªp
 = &
¨ïrow
;

600 
¥cf
->
_ªp
 = &
¨ïrow
;

602 
ªp_row_t
 
	`lowªp
(
_pcf_m™
->
	`ts
());

603 
ªp_row_t
 
	`highªp
(
_pcf_m™
->
	`ts
());

604 
lowªp
.
	`£t
(
_pcf_desc
->
	`maxsize
());

605 
highªp
.
	`£t
(
_pcf_desc
->
	`maxsize
());

607 
tm1_sf_t
 
asf
;

608 
tm1_cf_t
 
acf
;

609 
boﬁ
 
eof
;

610 
boﬁ
 
bFound
 = 
Ál£
;

631 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GND:sf-idx-probe (%d) (%d)\n",

632 
x˘_id
, 
gndö
.
_s_id
, gndö.
_sf_ty≥
);

633 
	`W_DO
(
_psf_m™
->
	`sf_idx_¥obe
(
_pssm
, 
¥sf
,

634 
gndö
.
_s_id
, gndö.
_sf_ty≥
));

635 
¥sf
->
	`gë_vÆue
(2, 
asf
.
IS_ACTIVE
);

639 i‡(
asf
.
IS_ACTIVE
) {

640 
gu¨d
<
ödex_sˇn_ôî_im∂
<
ˇŒ_f‹w¨dög_t
> > 
cf_ôî
;

642 
ödex_sˇn_ôî_im∂
<
ˇŒ_f‹w¨dög_t
>* 
tmp_cf_ôî
;

643 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d GND:cf-idx-ôî\n", 
x˘_id
);

644 
	`W_DO
(
_pcf_m™
->
	`cf_gë_idx_ôî
(
_pssm
, 
tmp_cf_ôî
, 
¥cf
,

645 
lowªp
, 
highªp
,

646 
gndö
.
_s_id
, gndö.
_sf_ty≥
,

647 
gndö
.
_s_time
));

648 
cf_ôî
 = 
tmp_cf_ôî
;

650 
	`W_DO
(
cf_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cf
));

651 !
eof
) {

653 
¥cf
->
	`gë_vÆue
(3, 
acf
.
END_TIME
);

654 i‡(
acf
.
END_TIME
 > 
gndö
.
_e_time
) {

655 
¥cf
->
	`gë_vÆue
(4, 
acf
.
NUMBERX
, 17);

656 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GND: found (%d) (%d) (%s)\n",

657 
x˘_id
, 
gndö
.
_e_time
, 
acf
.
END_TIME
,ácf.
NUMBERX
);

658 
bFound
 = 
åue
;

660 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d GND:cf-idx-ôî-√xt\n", 
x˘_id
);

661 
	`W_DO
(
cf_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cf
));

664 i‡(!
bFound
) {

665  
	`RC
(
£_NO_CURRENT_TUPLE
);

668 #ifde‡
PRINT_TRX_RESULTS


671 
¥sf
->
	`¥öt_tu∂e
();

672 
¥cf
->
	`¥öt_tu∂e
();

675  
RCOK
;

677 
	}
}

688 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_gë_acc_d©a
(c⁄° 
x˘_id
,

689 
gë_acc_d©a_öput_t
& 
gadö
)

692 
	`as£π
 (
_pssm
);

693 
	`as£π
 (
_öôülized
);

694 
	`as£π
 (
_lﬂded
);

698 
tu∂e_gu¨d
<
ai_m™_im∂
> 
	`¥ai
(
_∑i_m™
);

700 
ªp_row_t
 
	`¨ïrow
(
_∑i_m™
->
	`ts
());

703 
¨ïrow
.
	`£t
(
_∑i_desc
->
	`maxsize
());

705 
¥ai
->
_ªp
 = &
¨ïrow
;

717 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GAD:ai-idx-probe (%d) (%d)\n",

718 
x˘_id
, 
gadö
.
_s_id
, gadö.
_ai_ty≥
);

719 
	`W_DO
(
_∑i_m™
->
	`ai_idx_¥obe
(
_pssm
, 
¥ai
, 
gadö
.
_s_id
, gadö.
_ai_ty≥
));

720 
tm1_ai_t
 
Øi
;

721 
¥ai
->
	`gë_vÆue
(2, 
Øi
.
DATA1
);

722 
¥ai
->
	`gë_vÆue
(3, 
Øi
.
DATA2
);

723 
¥ai
->
	`gë_vÆue
(4, 
Øi
.
DATA3
, 5);

724 
¥ai
->
	`gë_vÆue
(5, 
Øi
.
DATA4
, 9);

726 #ifde‡
PRINT_TRX_RESULTS


729 
¥ai
->
	`¥öt_tu∂e
();

732  
RCOK
;

734 
	}
}

745 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_upd_sub_d©a
(c⁄° 
x˘_id
,

746 
upd_sub_d©a_öput_t
& 
usdö
)

749 
	`as£π
 (
_pssm
);

750 
	`as£π
 (
_öôülized
);

751 
	`as£π
 (
_lﬂded
);

755 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

756 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_psf_m™
);

758 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

761 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

763 
¥sub
->
_ªp
 = &
¨ïrow
;

764 
¥sf
->
_ªp
 = &
¨ïrow
;

786 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d USD:sf-idx-upd (%d) (%d)\n",

787 
x˘_id
, 
usdö
.
_s_id
, usdö.
_sf_ty≥
);

788 
	`W_DO
(
_psf_m™
->
	`sf_idx_upd
(
_pssm
, 
¥sf
, 
usdö
.
_s_id
, usdö.
_sf_ty≥
));

789 
¥sf
->
	`£t_vÆue
(4, 
usdö
.
_a_d©a
);

790 
	`W_DO
(
_psf_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥sf
));

793 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d USD:sub-idx-upd (%d)\n",

794 
x˘_id
, 
usdö
.
_s_id
);

795 
	`W_DO
(
_psub_m™
->
	`sub_idx_upd
(
_pssm
, 
¥sub
, 
usdö
.
_s_id
));

796 
¥sub
->
	`£t_vÆue
(2, 
usdö
.
_a_bô
);

797 
	`W_DO
(
_psub_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥sub
));

799 #ifde‡
PRINT_TRX_RESULTS


802 
¥sub
->
	`¥öt_tu∂e
();

803 
¥sf
->
	`¥öt_tu∂e
();

806  
RCOK
;

808 
	}
}

819 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_upd_loc
(c⁄° 
x˘_id
,

820 
upd_loc_öput_t
& 
ulö
)

823 
	`as£π
 (
_pssm
);

824 
	`as£π
 (
_öôülized
);

825 
	`as£π
 (
_lﬂded
);

829 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

831 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

834 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

836 
¥sub
->
_ªp
 = &
¨ïrow
;

847 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d UL:sub-nbr-idx-upd (%d)\n",

848 
x˘_id
, 
ulö
.
_s_id
);

849 
	`W_DO
(
_psub_m™
->
	`sub_nbr_idx_upd
(
_pssm
, 
¥sub
, 
ulö
.
_sub_nbr
));

850 
¥sub
->
	`£t_vÆue
(33, 
ulö
.
_vÃ_loc
);

851 
	`W_DO
(
_psub_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥sub
));

853 #ifde‡
PRINT_TRX_RESULTS


856 
¥sub
->
	`¥öt_tu∂e
();

859  
RCOK
;

861 
	}
}

872 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_ös_ˇŒ_fwd
(c⁄° 
x˘_id
,

873 
ös_ˇŒ_fwd_öput_t
& 
icfö
)

876 
	`as£π
 (
_pssm
);

877 
	`as£π
 (
_öôülized
);

878 
	`as£π
 (
_lﬂded
);

882 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

883 
tu∂e_gu¨d
<
sf_m™_im∂
> 
	`¥sf
(
_psf_m™
);

884 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

886 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

889 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

891 
¥sub
->
_ªp
 = &
¨ïrow
;

892 
¥sf
->
_ªp
 = &
¨ïrow
;

893 
¥cf
->
_ªp
 = &
¨ïrow
;

895 
ªp_row_t
 
	`lowªp
(
_psf_m™
->
	`ts
());

896 
ªp_row_t
 
	`highªp
(
_psf_m™
->
	`ts
());

897 
lowªp
.
	`£t
(
_psf_desc
->
	`maxsize
());

898 
highªp
.
	`£t
(
_psf_desc
->
	`maxsize
());

900 
tm1_sf_t
 
asf
;

901 
boﬁ
 
bFound
 = 
Ál£
;

902 
boﬁ
 
eof
;

924 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICF:sub-nbr-idx (%d)\n",

925 
x˘_id
, 
icfö
.
_s_id
);

926 
	`W_DO
(
_psub_m™
->
	`sub_nbr_idx_¥obe
(
_pssm
, 
¥sub
, 
icfö
.
_sub_nbr
));

927 
¥sub
->
	`gë_vÆue
(0, 
icfö
.
_s_id
);

930 
gu¨d
<
ödex_sˇn_ôî_im∂
<
•ecül_Ácûôy_t
> > 
sf_ôî
;

932 
ödex_sˇn_ôî_im∂
<
•ecül_Ácûôy_t
>* 
tmp_sf_ôî
;

933 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ICF:sf-idx-ôî\n", 
x˘_id
);

934 
	`W_DO
(
_psf_m™
->
	`sf_gë_idx_ôî
(
_pssm
, 
tmp_sf_ôî
, 
¥sf
,

935 
lowªp
, 
highªp
, 
icfö
.
_s_id
));

936 
sf_ôî
 = 
tmp_sf_ôî
;

938 
	`W_DO
(
sf_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sf
));

939 !
eof
) {

941 
¥sf
->
	`gë_vÆue
(1, 
asf
.
SF_TYPE
);

942 i‡(
asf
.
SF_TYPE
 =
icfö
.
_sf_ty≥
) {

943 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICF: found (%d) (%d)\n",

944 
x˘_id
, 
icfö
.
_s_id
, 
asf
.
SF_TYPE
);

945 
bFound
 = 
åue
;

948 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ICF:sf-idx-ôî-√xt\n", 
x˘_id
);

949 
	`W_DO
(
sf_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sf
));

951 i‡(
bFound
 =
Ál£
)

952  
	`RC
(
£_NO_CURRENT_TUPLE
);

955 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICF:cf-idx-probe (%d) (%d) (%d)\n",

956 
x˘_id
, 
icfö
.
_s_id
, icfö.
_sf_ty≥
, icfö.
_s_time
);

957 
w_rc_t
 
e
 = 
_pcf_m™
->
	`cf_idx_¥obe
(
_pssm
, 
¥cf
, 
icfö
.
_s_id
,

958 
icfö
.
_sf_ty≥
, icfö.
_s_time
);

961 i‡(
e
.
	`îr_num
(Ë=
£_TUPLE_NOT_FOUND
) {

963 
¥cf
->
	`£t_vÆue
(0, 
icfö
.
_s_id
);

964 
¥cf
->
	`£t_vÆue
(1, 
icfö
.
_sf_ty≥
);

965 
¥cf
->
	`£t_vÆue
(2, 
icfö
.
_s_time
);

966 
¥cf
->
	`£t_vÆue
(3, 
icfö
.
_e_time
);

967 
¥cf
->
	`£t_vÆue
(4, 
icfö
.
_numbîx
);

968 #ifde‡
CFG_HACK


969 
¥cf
->
	`£t_vÆue
(5, "padding");

971 
	`TRACE
 (
TRACE_TRX_FLOW
, "Aµ: %d ICF:ös-cf\n", 
x˘_id
);

972 
	`W_DO
(
_pcf_m™
->
	`add_tu∂e
(
_pssm
, 
¥cf
));

974  
	`RC
(
£_CANNOT_INSERT_TUPLE
);

977 #ifde‡
PRINT_TRX_RESULTS


980 
¥sub
->
	`¥öt_tu∂e
();

981 
¥sf
->
	`¥öt_tu∂e
();

982 
¥cf
->
	`¥öt_tu∂e
();

985  
RCOK
;

987 
	}
}

998 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_dñ_ˇŒ_fwd
(c⁄° 
x˘_id
,

999 
dñ_ˇŒ_fwd_öput_t
& 
dcfö
)

1002 
	`as£π
 (
_pssm
);

1003 
	`as£π
 (
_öôülized
);

1004 
	`as£π
 (
_lﬂded
);

1008 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

1009 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

1011 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

1014 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

1016 
¥sub
->
_ªp
 = &
¨ïrow
;

1017 
¥cf
->
_ªp
 = &
¨ïrow
;

1035 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DCF:sub-nbr-idx (%d)\n",

1036 
x˘_id
, 
dcfö
.
_s_id
);

1037 
	`W_DO
(
_psub_m™
->
	`sub_nbr_idx_¥obe
(
_pssm
, 
¥sub
, 
dcfö
.
_sub_nbr
));

1038 
¥sub
->
	`gë_vÆue
(0, 
dcfö
.
_s_id
);

1041 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DCF:cf-idx-upd (%d) (%d) (%d)\n",

1042 
x˘_id
, 
dcfö
.
_s_id
, dcfö.
_sf_ty≥
, dcfö.
_s_time
);

1043 
	`W_DO
(
_pcf_m™
->
	`cf_idx_upd
(
_pssm
, 
¥cf
,

1044 
dcfö
.
_s_id
, dcfö.
_sf_ty≥
, dcfö.
_s_time
));

1045 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DCF:dñ-cf\n", 
x˘_id
);

1046 
	`W_DO
(
_pcf_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥cf
));

1048 #ifde‡
PRINT_TRX_RESULTS


1051 
¥sub
->
	`¥öt_tu∂e
();

1052 
¥cf
->
	`¥öt_tu∂e
();

1055  
RCOK
;

1057 
	}
}

1068 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_gë_sub_nbr
(c⁄° 
x˘_id
,

1069 
gë_sub_nbr_öput_t
& 
g¢ö
)

1072 
	`as£π
 (
_pssm
);

1073 
	`as£π
 (
_öôülized
);

1074 
	`as£π
 (
_lﬂded
);

1078 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

1080 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

1083 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

1085 
¥sub
->
_ªp
 = &
¨ïrow
;

1087 
ªp_row_t
 
	`lowªp
(
_psub_m™
->
	`ts
());

1088 
ªp_row_t
 
	`highªp
(
_psub_m™
->
	`ts
());

1089 
lowªp
.
	`£t
(
_psub_desc
->
	`maxsize
());

1090 
highªp
.
	`£t
(
_psub_desc
->
	`maxsize
());

1092 
boﬁ
 
eof
;

1093 
uöt
 
ønge
 = 
	`gë_ªc_to_ac˚ss
();

1095 
sid
, 
vÃloc
;

1107 
gu¨d
<
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
> > 
sub_ôî
;

1109 
ödex_sˇn_ôî_im∂
<
subs¸ibî_t
>* 
tmp_sub_ôî
;

1110 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:sub-nbr-idx-iter (%d) (%d)\n",

1111 
x˘_id
, 
g¢ö
.
_s_id
, 
ønge
);

1112 
	`W_DO
(
_psub_m™
->
	`sub_gë_idx_ôî
(
_pssm
, 
tmp_sub_ôî
, 
¥sub
,

1113 
lowªp
,
highªp
,

1114 
g¢ö
.
_s_id
,
ønge
,

1115 
SH
,

1116 
åue
));

1117 
sub_ôî
 = 
tmp_sub_ôî
;

1121 
	`W_DO
(
sub_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sub
));

1122 !
eof
) {

1123 
¥sub
->
	`gë_vÆue
(0, 
sid
);

1124 
¥sub
->
	`gë_vÆue
(33, 
vÃloc
);

1125 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d GSN:Ñead (%d) (%d)\n",

1126 
x˘_id
, 
sid
, 
vÃloc
);

1127 
	`W_DO
(
sub_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥sub
));

1130  
RCOK
;

1132 
	}
}

1143 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_ös_ˇŒ_fwd_bích
(c⁄° 
x˘_id
,

1144 
ös_ˇŒ_fwd_bích_öput_t
& 
icfbö
)

1147 
	`as£π
 (
_pssm
);

1148 
	`as£π
 (
_öôülized
);

1149 
	`as£π
 (
_lﬂded
);

1153 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

1154 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

1156 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

1159 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

1161 
¥sub
->
_ªp
 = &
¨ïrow
;

1162 
¥cf
->
_ªp
 = &
¨ïrow
;

1168 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICFB:sub-nbr-idx (%d)\n",

1169 
x˘_id
, 
icfbö
.
_s_id
);

1170 
	`W_DO
(
_psub_m™
->
	`sub_nbr_idx_¥obe
(
_pssm
, 
¥sub
, 
icfbö
.
_sub_nbr
));

1171 
¥sub
->
	`gë_vÆue
(0, 
icfbö
.
_s_id
);

1174 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ICFB:cf-idx-probe (%d) (%d) (%d)\n",

1175 
x˘_id
, 
icfbö
.
_s_id
, icfbö.
_sf_ty≥
, icfbö.
_s_time
);

1176 
w_rc_t
 
e
 = 
_pcf_m™
->
	`cf_idx_upd
(
_pssm
, 
¥cf
, 
icfbö
.
_s_id
,

1177 
icfbö
.
_sf_ty≥
, icfbö.
_s_time
);

1180 i‡(
e
.
	`is_îr‹
()) {

1181 i‡(
e
.
	`îr_num
(Ë!
£_TUPLE_NOT_FOUND
) {

1182 
	`W_DO
(
e
);

1185 
¥cf
->
	`£t_vÆue
(0, 
icfbö
.
_s_id
);

1186 
¥cf
->
	`£t_vÆue
(1, 
icfbö
.
_sf_ty≥
);

1187 
¥cf
->
	`£t_vÆue
(2, 
icfbö
.
_s_time
);

1188 
¥cf
->
	`£t_vÆue
(3, 
icfbö
.
_e_time
);

1189 
¥cf
->
	`£t_vÆue
(4, 
icfbö
.
_numbîx
);

1190 #ifde‡
CFG_HACK


1191 
¥cf
->
	`£t_vÆue
(5, "padding");

1193 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ICF:ös-cf\n", 
x˘_id
);

1194 
	`W_DO
(
_pcf_m™
->
	`add_tu∂e
(
_pssm
, 
¥cf
));

1196 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DCF:dñ-cf\n", 
x˘_id
);

1197 
	`W_DO
(
_pcf_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥cf
));

1200 #ifde‡
PRINT_TRX_RESULTS


1203 
¥sub
->
	`¥öt_tu∂e
();

1204 
¥cf
->
	`¥öt_tu∂e
();

1207  
RCOK
;

1209 
	}
}

1220 
w_rc_t
 
	gSh‹eTM1Env
::
	$x˘_dñ_ˇŒ_fwd_bích
(c⁄° 
x˘_id
,

1221 
dñ_ˇŒ_fwd_bích_öput_t
& 
dcfbö
)

1224 
	`as£π
 (
_pssm
);

1225 
	`as£π
 (
_öôülized
);

1226 
	`as£π
 (
_lﬂded
);

1230 
tu∂e_gu¨d
<
sub_m™_im∂
> 
	`¥sub
(
_psub_m™
);

1231 
tu∂e_gu¨d
<
cf_m™_im∂
> 
	`¥cf
(
_pcf_m™
);

1233 
ªp_row_t
 
	`¨ïrow
(
_psub_m™
->
	`ts
());

1236 
¨ïrow
.
	`£t
(
_psub_desc
->
	`maxsize
());

1238 
¥sub
->
_ªp
 = &
¨ïrow
;

1239 
¥cf
->
_ªp
 = &
¨ïrow
;

1257 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DCFB:sub-nbr-idx (%d)\n",

1258 
x˘_id
, 
dcfbö
.
_s_id
);

1259 
	`W_DO
(
_psub_m™
->
	`sub_nbr_idx_¥obe
(
_pssm
, 
¥sub
, 
dcfbö
.
_sub_nbr
));

1260 
¥sub
->
	`gë_vÆue
(0, 
dcfbö
.
_s_id
);

1263 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DCFB:cf-idx-upd (%d) (%d) (%d)\n",

1264 
x˘_id
, 
dcfbö
.
_s_id
, dcfbö.
_sf_ty≥
, dcfbö.
_s_time
);

1265 
w_rc_t
 
e
 = 
_pcf_m™
->
	`cf_idx_upd
(
_pssm
, 
¥cf
, 
dcfbö
.
_s_id
,

1266 
dcfbö
.
_sf_ty≥
, dcfbö.
_s_time
);

1269 i‡(
e
.
	`is_îr‹
()) {

1270 i‡(
e
.
	`îr_num
(Ë!
£_TUPLE_NOT_FOUND
) {

1271 
	`W_DO
(
e
);

1274 
¥cf
->
	`£t_vÆue
(0, 
dcfbö
.
_s_id
);

1275 
¥cf
->
	`£t_vÆue
(1, 
dcfbö
.
_sf_ty≥
);

1276 
¥cf
->
	`£t_vÆue
(2, 
dcfbö
.
_s_time
);

1277 
©ime
 = 
	`UR™d
(1,24);

1278 
¥cf
->
	`£t_vÆue
(3, 
©ime
);

1279 
numbx
[
TM1_CF_NUMBERX_SZ
];

1280 
	`UR™dFûlSåNumbx
(
numbx
,
TM1_CF_NUMBERX_SZ
);

1281 
¥cf
->
	`£t_vÆue
(4, 
numbx
);

1282 #ifde‡
CFG_HACK


1283 
¥cf
->
	`£t_vÆue
(5, "padding");

1285 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DCFB:ös-cf\n", 
x˘_id
);

1286 
	`W_DO
(
_pcf_m™
->
	`add_tu∂e
(
_pssm
, 
¥cf
));

1288 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DCF:dñ-cf\n", 
x˘_id
);

1289 
	`W_DO
(
_pcf_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥cf
));

1292 #ifde‡
PRINT_TRX_RESULTS


1295 
¥sub
->
	`¥öt_tu∂e
();

1296 
¥cf
->
	`¥öt_tu∂e
();

1299  
RCOK
;

1301 
	}
}

1304 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tm1/tm1_input.cpp

29 
	~"k_deföes.h
"

31 
	~"w‹klﬂd/tm1/tm1_öput.h
"

33 #w¨nög 
TM1
: 
Usög
 
UZR™d
 
gíî©ög
 
skewed
 
Zùfün
 
öputs
. 
Skew√ss
 
ˇn
 
be
 
c⁄åﬁÀd
 
by
 
the
 'zùf' 
shñl
 
comm™d
.

35 
ENTER_NAMESPACE
(
tm1
);

38 
skewî_t
 
	gs_skewî
;

39 
boﬁ
 
	g_ch™ge_lﬂd
 = 
Ál£
;

46 
	ggë_sub_d©a_öput_t
& gë_sub_d©a_öput_t::
›î©‹
(c⁄° 
gë_sub_d©a_öput_t
& 
rhs
)

48 
_s_id
 = 
rhs
._s_id;

49  (*
	gthis
);

53 
gë_sub_d©a_öput_t
 
	$¸óã_gë_sub_d©a_öput
(
sf
,

54 
•ecificSub
)

56 
	`as£π
 (
sf
>0);

58 
gë_sub_d©a_öput_t
 
gsdö
;

60 if(
_ch™ge_lﬂd
) {

61 
gsdö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

64 i‡(
•ecificSub
>0)

65 
gsdö
.
_s_id
 = 
•ecificSub
;

67 
gsdö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

70  (
gsdö
);

71 
	}
}

81 
	ggë_√w_de°_öput_t
& gë_√w_de°_öput_t::
›î©‹
(c⁄° 
gë_√w_de°_öput_t
& 
rhs
)

83 
_s_id
 = 
rhs
._s_id;

84 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

85 
	g_s_time
 = 
rhs
.
_s_time
;

86 
	g_e_time
 = 
rhs
.
_e_time
;

87  (*
	gthis
);

91 
gë_√w_de°_öput_t
 
	$¸óã_gë_√w_de°_öput
(
sf
,

92 
•ecificSub
)

94 
	`as£π
 (
sf
>0);

96 
gë_√w_de°_öput_t
 
gndö
;

98 if(
_ch™ge_lﬂd
) {

99 
gndö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

101 i‡(
•ecificSub
>0)

102 
gndö
.
_s_id
 = 
•ecificSub
;

104 
gndö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

107 
gndö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

108 
gndö
.
_s_time
 = 
	`UR™d
(0,2) * 8;

109 
gndö
.
_e_time
 = 
	`UR™d
(1,24);

110  (
gndö
);

111 
	}
}

119 
	ggë_acc_d©a_öput_t
& gë_acc_d©a_öput_t::
›î©‹
(c⁄° 
gë_acc_d©a_öput_t
& 
rhs
)

121 
_s_id
 = 
rhs
._s_id;

122 
	g_ai_ty≥
 = 
rhs
.
_ai_ty≥
;

123  (*
	gthis
);

127 
gë_acc_d©a_öput_t
 
	$¸óã_gë_acc_d©a_öput
(
sf
,

128 
•ecificSub
)

130 
	`as£π
 (
sf
>0);

132 
gë_acc_d©a_öput_t
 
gadö
;

134 if(
_ch™ge_lﬂd
) {

135 
gadö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

137 i‡(
•ecificSub
>0)

138 
gadö
.
_s_id
 = 
•ecificSub
;

140 
gadö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

143 
gadö
.
_ai_ty≥
 = 
	`UR™d
(1,4);

144  (
gadö
);

145 
	}
}

152 
	gupd_sub_d©a_öput_t
& upd_sub_d©a_öput_t::
›î©‹
(c⁄° 
upd_sub_d©a_öput_t
& 
rhs
)

154 
_s_id
 = 
rhs
._s_id;

155 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

156 
	g_a_bô
 = 
rhs
.
_a_bô
;

157 
	g_a_d©a
 = 
rhs
.
_a_d©a
;

158  (*
	gthis
);

162 
upd_sub_d©a_öput_t
 
	$¸óã_upd_sub_d©a_öput
(
sf
,

163 
•ecificSub
)

165 
	`as£π
 (
sf
>0);

167 
upd_sub_d©a_öput_t
 
usdö
;

169 if(
_ch™ge_lﬂd
) {

170 
usdö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

172 i‡(
•ecificSub
>0)

173 
usdö
.
_s_id
 = 
•ecificSub
;

175 
usdö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

178 
usdö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

179 
usdö
.
_a_bô
 = 
	`UR™dBoﬁ
();

180 
usdö
.
_a_d©a
 = 
	`UR™d
(0,255);

181  (
usdö
);

182 
	}
}

190 
	gupd_loc_öput_t
& upd_loc_öput_t::
›î©‹
(c⁄° 
upd_loc_öput_t
& 
rhs
)

192 
_s_id
 = 
rhs
._s_id;

193 
°‹e_°rög
(
_sub_nbr
, 
rhs
._sub_nbr);

194 
	g_vÃ_loc
 = 
rhs
.
_vÃ_loc
;

195  (*
	gthis
);

199 
upd_loc_öput_t
 
	$¸óã_upd_loc_öput
(
sf
,

200 
•ecificSub
)

202 
	`as£π
 (
sf
>0);

204 
upd_loc_öput_t
 
ulö
;

206 if(
_ch™ge_lﬂd
) {

207 
ulö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

209 i‡(
•ecificSub
>0)

210 
ulö
.
_s_id
 = 
•ecificSub
;

212 
ulö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

215 
	`•rötf
(
ulö
.
_sub_nbr
,"%015.15d",ulö.
_s_id
);

216 
ulö
.
_vÃ_loc
 = 
	`UR™d
(0,(2<<16)-1);

217  (
ulö
);

218 
	}
}

226 
	gös_ˇŒ_fwd_öput_t
& ins_ˇŒ_fwd_öput_t::
›î©‹
(c⁄° 
ös_ˇŒ_fwd_öput_t
& 
rhs
)

228 
_s_id
 = 
rhs
._s_id;

229 
°‹e_°rög
(
_sub_nbr
, 
rhs
._sub_nbr);

230 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

231 
	g_s_time
 = 
rhs
.
_s_time
;

232 
	g_e_time
 = 
rhs
.
_e_time
;

233 
°‹e_°rög
(
_numbîx
, 
rhs
._numberx);

234  (*
	gthis
);

238 
ös_ˇŒ_fwd_öput_t
 
	$¸óã_ös_ˇŒ_fwd_öput
(
sf
,

239 
•ecificSub
)

241 
	`as£π
 (
sf
>0);

243 
ös_ˇŒ_fwd_öput_t
 
icfö
;

245 if(
_ch™ge_lﬂd
) {

246 
icfö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

248 i‡(
•ecificSub
>0)

249 
icfö
.
_s_id
 = 
•ecificSub
;

251 
icfö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

254 
	`•rötf
(
icfö
.
_sub_nbr
,"%015.15d",icfö.
_s_id
);

255 
icfö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

256 
icfö
.
_s_time
 = 
	`UR™d
(0,2) * 8;

257 
icfö
.
_e_time
 = 
	`UR™d
(1,24);

258 
	`•rötf
(
icfö
.
_numbîx
,"%015.15d",
	`UR™d
(1,
sf
*
TM1_SUBS_PER_SF
));

259  (
icfö
);

260 
	}
}

267 
	gdñ_ˇŒ_fwd_öput_t
& dñ_ˇŒ_fwd_öput_t::
›î©‹
(c⁄° 
dñ_ˇŒ_fwd_öput_t
& 
rhs
)

269 
_s_id
 = 
rhs
._s_id;

270 
°‹e_°rög
(
_sub_nbr
, 
rhs
._sub_nbr);

271 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

272 
	g_s_time
 = 
rhs
.
_s_time
;

273  (*
	gthis
);

277 
dñ_ˇŒ_fwd_öput_t
 
	$¸óã_dñ_ˇŒ_fwd_öput
(
sf
,

278 
•ecificSub
)

280 
	`as£π
 (
sf
>0);

282 
dñ_ˇŒ_fwd_öput_t
 
dcfö
;

284 if(
_ch™ge_lﬂd
) {

285 
dcfö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

287 i‡(
•ecificSub
>0)

288 
dcfö
.
_s_id
 = 
•ecificSub
;

290 
dcfö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

293 
	`•rötf
(
dcfö
.
_sub_nbr
,"%015.15d",dcfö.
_s_id
);

294 
dcfö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

295 
dcfö
.
_s_time
 = 
	`UR™d
(0,2) * 8;

296  (
dcfö
);

297 
	}
}

306 
	ggë_sub_nbr_öput_t
& gë_sub_nbr_öput_t::
›î©‹
(c⁄° 
gë_sub_nbr_öput_t
& 
rhs
)

308 
_s_id
 = 
rhs
._s_id;

309 
	g_ønge
 = 
rhs
.
_ønge
;

311 #ifde‡
USE_DORA_EXT_IDX


312 
	g_∑ús
 = 
rhs
.
_∑ús
;

315  (*
	gthis
);

319 
gë_sub_nbr_öput_t
 
	$¸óã_gë_sub_nbr_öput
(
sf
,

320 
•ecificSub
)

322 
	`as£π
 (
sf
>0);

324 
gë_sub_nbr_öput_t
 
g¢ö
;

326 if(
_ch™ge_lﬂd
) {

327 
g¢ö
.
_s_id
 = 
s_skewî
.
	`gë_öput
();

329 i‡(
•ecificSub
>0)

330 
g¢ö
.
_s_id
 = 
•ecificSub
;

332 
g¢ö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

335  (
g¢ö
);

336 
	}
}

345 
	gös_ˇŒ_fwd_bích_öput_t
& ins_ˇŒ_fwd_bích_öput_t::
›î©‹
(c⁄° 
ös_ˇŒ_fwd_bích_öput_t
& 
rhs
)

347 
_s_id
 = 
rhs
._s_id;

348 
°‹e_°rög
(
_sub_nbr
, 
rhs
._sub_nbr);

349 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

350 
	g_s_time
 = 
rhs
.
_s_time
;

351 
	g_e_time
 = 
rhs
.
_e_time
;

352 
°‹e_°rög
(
_numbîx
, 
rhs
._numberx);

353  (*
	gthis
);

357 
ös_ˇŒ_fwd_bích_öput_t
 
	$¸óã_ös_ˇŒ_fwd_bích_öput
(
sf
,

358 
•ecificSub
)

360 
	`as£π
 (
sf
>0);

362 
ös_ˇŒ_fwd_bích_öput_t
 
icfbö
;

364 i‡(
•ecificSub
>0)

365 
icfbö
.
_s_id
 = 
•ecificSub
;

367 
icfbö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

369 
	`•rötf
(
icfbö
.
_sub_nbr
,"%015.15d",icfbö.
_s_id
);

370 
icfbö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

371 
icfbö
.
_s_time
 = 
	`UR™d
(0,2) * 8;

372 
icfbö
.
_e_time
 = 
	`UR™d
(1,24);

373 
	`•rötf
(
icfbö
.
_numbîx
,"%015.15d",
	`UR™d
(1,
sf
*
TM1_SUBS_PER_SF
));

374  (
icfbö
);

375 
	}
}

382 
	gdñ_ˇŒ_fwd_bích_öput_t
& dñ_ˇŒ_fwd_bích_öput_t::
›î©‹
(c⁄° 
dñ_ˇŒ_fwd_bích_öput_t
& 
rhs
)

384 
_s_id
 = 
rhs
._s_id;

385 
°‹e_°rög
(
_sub_nbr
, 
rhs
._sub_nbr);

386 
	g_sf_ty≥
 = 
rhs
.
_sf_ty≥
;

387 
	g_s_time
 = 
rhs
.
_s_time
;

388  (*
	gthis
);

392 
dñ_ˇŒ_fwd_bích_öput_t
 
	$¸óã_dñ_ˇŒ_fwd_bích_öput
(
sf
,

393 
•ecificSub
)

395 
	`as£π
 (
sf
>0);

397 
dñ_ˇŒ_fwd_bích_öput_t
 
dcfbö
;

399 i‡(
•ecificSub
>0)

400 
dcfbö
.
_s_id
 = 
•ecificSub
;

402 
dcfbö
.
_s_id
 = 
	`UZR™d
(1,
sf
*
TM1_SUBS_PER_SF
);

404 
	`•rötf
(
dcfbö
.
_sub_nbr
,"%015.15d",dcfbö.
_s_id
);

405 
dcfbö
.
_sf_ty≥
 = 
	`UR™d
(1,4);

406 
dcfbö
.
_s_time
 = 
	`UR™d
(0,2) * 8;

407  (
dcfbö
);

408 
	}
}

425 
	$øndom_tm1_x˘_ty≥
(c⁄° 
£À˘ed
)

427 
øndom_ty≥
 = 
£À˘ed
;

428 i‡(
øndom_ty≥
 < 0)

429 
øndom_ty≥
 = 
	`ønd
()%100;

430 
	`as£π
 (
øndom_ty≥
 >= 0);

432 
sum
 = 0;

433 
sum
+=
PROB_TM1_GET_SUB_DATA
;

434 i‡(
øndom_ty≥
 < 
sum
)

435  
XCT_TM1_GET_SUB_DATA
;

437 
sum
+=
PROB_TM1_GET_NEW_DEST
;

438 i‡(
øndom_ty≥
 < 
sum
)

439  
XCT_TM1_GET_NEW_DEST
;

442 
sum
+=
PROB_TM1_GET_ACC_DATA
;

443 i‡(
øndom_ty≥
 < 
sum
)

444  
XCT_TM1_GET_ACC_DATA
;

446 
sum
+=
PROB_TM1_UPD_SUB_DATA
;

447 i‡(
øndom_ty≥
 < 
sum
)

448  
XCT_TM1_UPD_SUB_DATA
;

450 
sum
+=
PROB_TM1_UPD_LOCATION
;

451 i‡(
øndom_ty≥
 < 
sum
)

452  
XCT_TM1_UPD_LOCATION
;

454 
sum
+=
PROB_TM1_INS_CALL_FWD
;

455 i‡(
øndom_ty≥
 < 
sum
)

456  
XCT_TM1_INS_CALL_FWD
;

458 
sum
+=
PROB_TM1_DEL_CALL_FWD
;

459 i‡(
øndom_ty≥
 < 
sum
)

460  
XCT_TM1_DEL_CALL_FWD
;

463 
	`as£π
 (0);

465 
	}
}

469 
EXIT_NAMESPACE
(
tm1
);

	@src/workload/tpcb/shore_tpcb_client.cpp

31 
	~"w‹klﬂd/çcb/sh‹e_çcb_˛õ¡.h
"

33 
ENTER_NAMESPACE
(
çcb
);

43 
	gba£löe_çcb_˛õ¡_t
::
	$ba£löe_çcb_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

44 
Sh‹eTPCBEnv
* 
ív
,

45 c⁄° 
MósuªmítTy≥
 
aTy≥
,

46 c⁄° 
åxid
,

47 c⁄° 
numOfTrxs
,

48 
¥o˚ss‹id_t
 
≠rsid
,

49 c⁄° 
£lID
, c⁄° 
qf
)

50 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

51 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

53 
	`as£π
 (
ív
);

54 
	`as£π
 (
_id
>=0 && 
_qf
>0);

57 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

58 
	`as£π
 (
_w‹kî
);

59 
	}
}

62 
	gba£löe_çcb_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

65 
°m≠
.
	`˛ór
();

68 
°m≠
[
XCT_TPCB_ACCT_UPDATE
] = "TPCB-AccountUpdate";

70 
°m≠
[
XCT_TPCB_MBENCH_INSERT_ONLY
] = "TPCB-MbenchInsertOnly";

71 
°m≠
[
XCT_TPCB_MBENCH_DELETE_ONLY
] = "TPCB-MbenchDeleteOnly";

72 
°m≠
[
XCT_TPCB_MBENCH_PROBE_ONLY
] = "TPCB-MbenchProbeOnly";

73 
°m≠
[
XCT_TPCB_MBENCH_INSERT_DELETE
] = "TPCB-MbenchInsertDelete";

74 
°m≠
[
XCT_TPCB_MBENCH_INSERT_PROBE
] = "TPCB-MbenchInsertProbe";

75 
°m≠
[
XCT_TPCB_MBENCH_DELETE_PROBE
] = "TPCB-MbenchDeleteProbe";

76 
°m≠
[
XCT_TPCB_MBENCH_MIX
] = "TPCB-MbenchMix";

78  (
°m≠
.
	`size
());

79 
	}
}

93 
w_rc_t
 
	gba£löe_çcb_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

96 
åx_ªsu…_tu∂e_t
 
©π
;

97 
boﬁ
 
bWake
 = 
Ál£
;

98 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

99 
©π
.
	`£t_nŸify
(
c
);

100 
	`TRACE
–
TRACE_TRX_FLOW
, "Sleeping\n");

101 
bWake
 = 
åue
;

105 
£lid
 = 
_£lid
;

110 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

111 
tid_t
 
©id
;

112 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
£lid
);

115 
	`as£π
 (
_w‹kî
);

116 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

117  (
RCOK
);

118 
	}
}

121 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcb/shore_tpcb_env.cpp

33 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

34 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

36 
	~"k_deföes.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
sh‹e
);

41 
DEFINE_ROW_CACHE_TLS
(
çcb
, 
bønch
);

42 
DEFINE_ROW_CACHE_TLS
(
çcb
, 
ãŒî
);

43 
DEFINE_ROW_CACHE_TLS
(
çcb
, 
accou¡
);

44 
DEFINE_ROW_CACHE_TLS
(
çcb
, 
hi°‹y
);

45 
EXIT_NAMESPACE
(
sh‹e
);

47 
ENTER_NAMESPACE
(
çcb
);

56 
	gSh‹eTPCBEnv
::
	$Sh‹eTPCBEnv
()

57 : 
	$Sh‹eEnv
()

59 
	}
}

61 
Sh‹eTPCBEnv
::~
	$Sh‹eTPCBEnv
()

63 
	}
}

76 
w_rc_t
 
Sh‹eTPCBEnv
::
	$lﬂd_schema
()

79 
_pbønch_desc
 = 
√w
 
	`bønch_t
(
	`gë_pd
());

80 
_±ñÀr_desc
 = 
√w
 
	`ãŒî_t
(
	`gë_pd
());

81 
_∑ccou¡_desc
 = 
√w
 
	`accou¡_t
(
	`gë_pd
());

82 
_phi°‹y_desc
 = 
√w
 
	`hi°‹y_t
(
	`gë_pd
());

86 
_pbønch_m™
 = 
√w
 
	`bønch_m™_im∂
(
_pbønch_desc
.
	`gë
());

87 
_±ñÀr_m™
 = 
√w
 
	`ãŒî_m™_im∂
(
_±ñÀr_desc
.
	`gë
());

88 
_∑ccou¡_m™
 = 
√w
 
	`accou¡_m™_im∂
(
_∑ccou¡_desc
.
	`gë
());

89 
_phi°‹y_m™
 = 
√w
 
	`hi°‹y_m™_im∂
(
_phi°‹y_desc
.
	`gë
());

91  (
RCOK
);

92 
	}
}

105 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$lﬂd_™d_ªgi°î_fids
()

107 
	`W_DO
(
_pbønch_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

108 
	`W_DO
(
_±ñÀr_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

109 
	`W_DO
(
_∑ccou¡_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

110 
	`W_DO
(
_phi°‹y_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

111  (
RCOK
);

112 
	}
}

124 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$upd©e_∑πôi⁄ög
()

129 
	`c⁄f
();

132 
uöt
 
mrbç¨ts
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("mrbt-partitions",10);

133 
möKeyVÆ
 = 0;

134 
maxKeyVÆ
 = 
	`gë_sf
();

136 * 
möKey
 = (*)
	`mÆloc
(());

137 
	`mem£t
(
möKey
,0,());

138 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

140 * 
maxKey
 = (*)
	`mÆloc
(());

141 
	`mem£t
(
maxKey
,0,());

142 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

145 
_pbønch_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

148 
_phi°‹y_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

151 
maxKeyVÆ
 = (
	`gë_sf
()*
TPCB_TELLERS_PER_BRANCH
);

152 
	`mem£t
(
maxKey
,0,());

153 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

154 
_±ñÀr_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

157 
maxKeyVÆ
 = (
	`gë_sf
()*
TPCB_ACCOUNTS_PER_BRANCH
);

158 
	`mem£t
(
maxKey
,0,());

159 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

160 
_∑ccou¡_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

162 
	`‰ì
 (
möKey
);

163 
	`‰ì
 (
maxKey
);

165  (
RCOK
);

166 
	}
}

177 
	gSh‹eTPCBEnv
::
	$£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
)

179 
Sh‹eEnv
::
	`£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

181 
b_skewî
.
	`£t
(
¨ó
, 0, 
_sˇlög_Á˘‹
-1, 
lﬂd
);

183 
t_skewî
.
	`£t
(
¨ó
, 0, 
TPCB_TELLERS_PER_BRANCH
-1, 
lﬂd
);

185 
a_skewî
.
	`£t
(
¨ó
, 0, 
TPCB_ACCOUNTS_PER_BRANCH
-1, 
lﬂd
);

186 
	}
}

197 
	gSh‹eTPCBEnv
::
	$°¨t_lﬂd_imbÆ™˚
()

199 if(
b_skewî
.
	`is_u£d
()) {

200 
_ch™ge_lﬂd
 = 
Ál£
;

202 
b_skewî
.
	`ª£t
(
_skew_ty≥
);

204 
t_skewî
.
	`ª£t
(
_skew_ty≥
);

206 
a_skewî
.
	`ª£t
(
_skew_ty≥
);

208 if(
_skew_ty≥
 !
SKEW_CHAOTIC
 || 
	`UR™d
(1,100) > 30) {

209 
_ch™ge_lﬂd
 = 
åue
;

211 
Sh‹eEnv
::
	`°¨t_lﬂd_imbÆ™˚
();

212 
	}
}

223 
	gSh‹eTPCBEnv
::
	$ª£t_skew
()

225 
Sh‹eEnv
::
	`ª£t_skew
();

226 
_ch™ge_lﬂd
 = 
Ál£
;

227 
b_skewî
.
	`˛ór
();

228 
t_skewî
.
	`˛ór
();

229 
a_skewî
.
	`˛ór
();

230 
	}
}

241 
	gSh‹eTPCBEnv
::
	$öfo
() const

243 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
_sˇlög_Á˘‹
);

244 
	`TRACE
–
TRACE_ALWAYS
, "W‹kî†(%d)\n", 
_w‹kî_˙t
);

246 
	}
}

258 
	gSh‹eTPCBEnv
::
	$°©i°ics
()

261 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

262 
Sh‹eTPCBTrxSèts
 
rvÆ
;

263 
rvÆ
 -=Ñval;

264 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

265 
rvÆ
 +*
ô
->
£c⁄d
;

267 
	`TRACE
–
TRACE_STATISTICS
, "AcctUpd. Att (%d). Abt (%d). Dld (%d)\n",

268 
rvÆ
.
©ãm±ed
.
ac˘_upd©e
,

269 
rvÆ
.
Áûed
.
ac˘_upd©e
,

270 
rvÆ
.
dódlocked
.
ac˘_upd©e
);

272 
	`TRACE
–
TRACE_STATISTICS
, "MbenchInsertOnly. Att (%d). Abt (%d). Dld (%d)\n",

273 
rvÆ
.
©ãm±ed
.
mbích_ö£π_⁄ly
,

274 
rvÆ
.
Áûed
.
mbích_ö£π_⁄ly
,

275 
rvÆ
.
dódlocked
.
mbích_ö£π_⁄ly
);

277 
	`TRACE
–
TRACE_STATISTICS
, "MbenchDeleteOnly. Att (%d). Abt (%d). Dld (%d)\n",

278 
rvÆ
.
©ãm±ed
.
mbích_dñëe_⁄ly
,

279 
rvÆ
.
Áûed
.
mbích_dñëe_⁄ly
,

280 
rvÆ
.
dódlocked
.
mbích_dñëe_⁄ly
);

282 
	`TRACE
–
TRACE_STATISTICS
, "MbenchProbeOnly. Att (%d). Abt (%d). Dld (%d)\n",

283 
rvÆ
.
©ãm±ed
.
mbích_¥obe_⁄ly
,

284 
rvÆ
.
Áûed
.
mbích_¥obe_⁄ly
,

285 
rvÆ
.
dódlocked
.
mbích_¥obe_⁄ly
);

287 
	`TRACE
–
TRACE_STATISTICS
, "MbenchInsertDelte. Att (%d). Abt (%d). Dld (%d)\n",

288 
rvÆ
.
©ãm±ed
.
mbích_ö£π_dñëe
,

289 
rvÆ
.
Áûed
.
mbích_ö£π_dñëe
,

290 
rvÆ
.
dódlocked
.
mbích_ö£π_dñëe
);

292 
	`TRACE
–
TRACE_STATISTICS
, "MbenchInsertProbe. Att (%d). Abt (%d). Dld (%d)\n",

293 
rvÆ
.
©ãm±ed
.
mbích_ö£π_¥obe
,

294 
rvÆ
.
Áûed
.
mbích_ö£π_¥obe
,

295 
rvÆ
.
dódlocked
.
mbích_ö£π_¥obe
);

297 
	`TRACE
–
TRACE_STATISTICS
, "MbenchDeleteProbe. Att (%d). Abt (%d). Dld (%d)\n",

298 
rvÆ
.
©ãm±ed
.
mbích_dñëe_¥obe
,

299 
rvÆ
.
Áûed
.
mbích_dñëe_¥obe
,

300 
rvÆ
.
dódlocked
.
mbích_dñëe_¥obe
);

302 
	`TRACE
–
TRACE_STATISTICS
, "MbenchMix. Att (%d). Abt (%d). Dld (%d)\n",

303 
rvÆ
.
©ãm±ed
.
mbích_mix
,

304 
rvÆ
.
Áûed
.
mbích_mix
,

305 
rvÆ
.
dódlocked
.
mbích_mix
);

307 
Sh‹eEnv
::
	`°©i°ics
();

310 
	}
}

321 
	gSh‹eTPCBEnv
::
	$°¨t
()

323  (
Sh‹eEnv
::
	`°¨t
());

324 
	}
}

326 
	gSh‹eTPCBEnv
::
	$°›
()

328  (
Sh‹eEnv
::
	`°›
());

329 
	}
}

341 
	gSh‹eTPCBEnv
::
checkpoöãr_t
 : 
public
 
thªad_t


343 
Sh‹eTPCBEnv
* 
_ív
;

344 
checkpoöãr_t
(
Sh‹eTPCBEnv
* 
ív
)

345 : 
thªad_t
("LDChk±"), 
_ív
(
ív
)

347 
vútuÆ
 
w‹k
();

351 
	gSh‹eTPCBEnv
::
checkpoöãr_t
::
	$w‹k
()

353 
boﬁ
 vﬁ©ûe* 
lﬂded
 = &
_ív
->
_lﬂded
;

354 !*
lﬂded
) {

355 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

356 
i
=0; i < 60 && !*
lﬂded
; i++) {

357 ::
	`¶ìp
(1);

360 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint - start\n");

361 
_ív
->
	`checkpoöt
();

362 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint -Énd\n");

364 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

365 
	}
}

376 ˛as†
	cSh‹eTPCBEnv
::
èbÀ_buûdî_t
 : 
public
 
thªad_t


378 
Sh‹eTPCBEnv
* 
_ív
;

379 
	m_sf
;

380 
	m_°¨t
;

381 
	m_cou¡
;

383 
	mpublic
:

384 
	$èbÀ_buûdî_t
(
Sh‹eTPCBEnv
* 
ív
, 
id
, 
sf
, 
°¨t
, 
cou¡
)

385 : 
	`thªad_t
(
	`c_°r
("LD-%d",
id
)),

386 
	`_ív
(
ív
), 
	`_sf
(
sf
), 
	`_°¨t
(
°¨t
), 
	$_cou¡
(
cou¡
)

389 
vútuÆ
 
	`w‹k
();

391 
	}
};

394 c⁄° 
uöt
 
	gbønchesPîRound
 = 5;

395 
uöt
 vﬁ©ûê
	giBønchesLﬂded
 = 0;

396 
	gSh‹eTPCBEnv
::
èbÀ_buûdî_t
::
	$w‹k
()

398 
w_rc_t
 
e
;

400 
i
=0; i < 
_cou¡
; i +
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
) {

401 
a_id
 = 
_°¨t
 + 
i
;

402 
p›uœã_db_öput_t
 
	`ö
(
_sf
, 
a_id
);

403 
log_•a˚_√eded
 = 0;

404 
ªåy
:

405 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

406 #ifde‡
USE_SHORE_6


407 if(
log_•a˚_√eded
 > 0) {

408 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

411 
e
 = 
_ív
->
	`x˘_p›uœã_db
(
a_id
, 
ö
);

412 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåy
,
_ív
);

414 i‡((
i
 % (
bønchesPîRound
*
TPCB_ACCOUNTS_PER_BRANCH
)) == 0) {

415 
	`©omic_add_öt
(&
iBønchesLﬂded
, 
bønchesPîRound
);

416 
	`TRACE
(
TRACE_ALWAYS
, "%d branchesÜoaded so far...\n",

417 
iBønchesLﬂded
);

420 
	`TRACE
–
TRACE_STATISTICS
,

422 
_°¨t
, _°¨t+
_cou¡
);

423 
	}
}

437 
	gSh‹eTPCBEnv
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t


439 
Sh‹eTPCBEnv
* 
_ív
;

440 
	g_sf
;

441 
	g_psize
;

442 
	g_pcou¡
;

443 
èbÀ_¸ót‹_t
(
Sh‹eTPCBEnv
* 
ív
, 
sf
, 
psize
, 
pcou¡
)

444 : 
thªad_t
("CR"), 
_ív
(
ív
), 
_sf
(
sf
), 
_psize
(
psize
), 
_pcou¡
(
pcou¡
) { }

445 
vútuÆ
 
w‹k
();

450 
	gSh‹eTPCBEnv
::
èbÀ_¸ót‹_t
::
	$w‹k
()

454 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

455 
	`W_COERCE
(
_ív
->
_pbønch_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

456 
	`W_COERCE
(
_ív
->
_±ñÀr_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

457 
	`W_COERCE
(
_ív
->
_∑ccou¡_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

458 
	`W_COERCE
(
_ív
->
_phi°‹y_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

459 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

462 
_ív
->
_pbønch_m™
->
	`ªgi°î_èbÀ_m™
();

463 
_ív
->
_±ñÀr_m™
->
	`ªgi°î_èbÀ_m™
();

464 
_ív
->
_∑ccou¡_m™
->
	`ªgi°î_èbÀ_m™
();

465 
_ív
->
_phi°‹y_m™
->
	`ªgi°î_èbÀ_m™
();

469 
i
=-1; i < 
_pcou¡
; i++) {

470 
a_id
 = 
i
*
_psize
;

471 
p›uœã_db_öput_t
 
	`ö
(
_sf
, 
a_id
);

472 
	`TRACE
–
TRACE_STATISTICS
, "Populating %ldá_ids starting with %ld\n",

473 
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
, 
a_id
);

474 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

475 
	`W_COERCE
(
_ív
->
	`x˘_p›uœã_db
(
a_id
, 
ö
));

479 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

480 
	`W_COERCE
(
_ív
->
	`_po°_öô_im∂
());

481 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

482 
	}
}

501 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$lﬂdd©a
()

504 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

505 i‡(
_lﬂded
) {

506 
	`TRACE
–
TRACE_TRX_FLOW
,

508  (
RCOK
);

510 
	`CRITICAL_SECTION
(
sˇÀ_cs
, 
_sˇlög_muãx
);

513 
gu¨d
<
checkpoöãr_t
> 
	`chk
(
√w
 
	`checkpoöãr_t
(
this
));

514 
chk
->
	`f‹k
();

524 
lﬂdîs_to_u£
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-loaders",10);

525 
tŸÆ_accou¡s
 = 
_sˇlög_Á˘‹
*
TPCB_ACCOUNTS_PER_BRANCH
;

526 
	`w_as£π1
((
tŸÆ_accou¡s
 % 
lﬂdîs_to_u£
) == 0);

527 
ac˘s_≥r_w‹kî
 = 
tŸÆ_accou¡s
/
lﬂdîs_to_u£
;

531 i‡(
_sˇlög_Á˘‹
<
lﬂdîs_to_u£
)Üoaders_to_use = _scaling_factor;

533 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

537 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

538 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
, 
_sˇlög_Á˘‹
,

539 
ac˘s_≥r_w‹kî
, 
lﬂdîs_to_u£
);

540 
tc
->
	`f‹k
();

541 
tc
->
	`joö
();

552 
¨øy_gu¨d_t
< 
gu¨d
<
èbÀ_buûdî_t
> > 
	`lﬂdîs
(
√w
 gu¨d<èbÀ_buûdî_t>[
lﬂdîs_to_u£
]);

553 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

555 
°¨t
 = 
ac˘s_≥r_w‹kî
*
i
+
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
;

556 
cou¡
 = 
ac˘s_≥r_w‹kî
-
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
;

557 
lﬂdîs
[
i
] = 
√w
 
	`èbÀ_buûdî_t
(
this
, i, 
_sˇlög_Á˘‹
, 
°¨t
, 
cou¡
);

558 
lﬂdîs
[
i
]->
	`f‹k
();

562 
i
=0; i<
lﬂdîs_to_u£
; i++) {

563 
lﬂdîs
[
i
]->
	`joö
();

566 
time_t
 
t°›
 = 
	`time
(
NULL
);

569 
	`TRACE
–
TRACE_STATISTICS
, "Loading finished. %.1f branchesÜoaded in (%d) secs...\n",

570 
_sˇlög_Á˘‹
, (
t°›
 - 
t°¨t
));

573 
_lﬂded
 = 
åue
;

574 
chk
->
	`joö
();

576  (
RCOK
);

577 
	}
}

591 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$check_c⁄si°ícy
()

594  
RCOK
;

595 
	}
}

607 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$w¨mup
()

609  (
	`check_c⁄si°ícy
());

610 
	}
}

621 
	gSh‹eTPCBEnv
::
	$dump
()

623 
	`as£π
 (0);

634 
	}
}

637 
	gSh‹eTPCBEnv
::
	$c⁄f
()

640 
Sh‹eEnv
::
	`c⁄f
();

641 
	`upd_sf
();

642 
	`upd_w‹kî_˙t
();

644 
	}
}

653 
	gSh‹eTPCBEnv
::
	$po°_öô
()

655 
	`c⁄f
();

658 i‡(
	`gë_pd
(Ë& 
PD_PADDED
) {

659 
	`TRACE
–
TRACE_ALWAYS
, "Checking for BRANCH/TELLERÑecordÖadding...\n");

661 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

662 
w_rc_t
 
rc
 = 
	`_po°_öô_im∂
();

663 if(
rc
.
	`is_îr‹
()) {

664 
˚º
 << "-> BRANCH/TELLERÖaddög faûed wôh: " << 
rc
 << 
ídl
;

665 
rc
 = 
	`db
()->
	`ab‹t_x˘
();

666  (
rc
.
	`îr_num
());

669 
	`TRACE
–
TRACE_ALWAYS
, "-> Done\n");

670 
rc
 = 
	`db
()->
	`commô_x˘
();

674 
	}
}

687 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$_po°_öô_im∂
()

689 #ifde‡
CFG_HACK


690 
	`TRACE
 (
TRACE_ALWAYS
, "Padding BRANCHESánd TELLERS\n");

692 
	`W_DO
(
	`_∑d_BRANCHES
());

693 
	`W_DO
(
	`_∑d_TELLERS
());

695  (
RCOK
);

696 
	}
}

707 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$_∑d_BRANCHES
()

709 
ss_m
* 
db
 = 
this
->
	`db
();

712 
bønch_t
* 
br
 = 
	`bønch_desc
();

713 
ödex_desc_t
* 
br_idx
 = 
br
->
	`ödexes
();

714 
br_idx_cou¡
 = 
br
->
	`ödex_cou¡
();

715 
°id_t
 
br_fid
 = 
br
->
	`fid
();

718 
	`W_DO
(
db
->
	`lock
(
br_fid
, 
EX
));

719 
i
=0; i < 
br_idx_cou¡
; i++) {

720 
j
=0; j < 
br_idx
[
i
].
	`gë_∑πôi⁄_cou¡
(); j++) {

721 
	`W_DO
(
db
->
	`lock
(
br_idx
[
i
].
	`fid
(
j
), 
EX
));

725 
gu¨d
<
©s_ch¨_t
> 
±s
 = 
√w
 
	`©s_ch¨_t
(
br
->
	`maxsize
());

733 
boﬁ
 
eof
;

736 c⁄° 
PADDED_SIZE
 = 4096;

738 
¨øy_gu¨d_t
<> 
∑ddög
 = 
√w
 [
PADDED_SIZE
];

739 
°d
::
ve˘‹
<
rid_t
> 
hô_li°
;

741 
gu¨d
<
bønch_m™_im∂
::
èbÀ_ôî
> 
ôî
;

743 
bønch_m™_im∂
::
èbÀ_ôî
* 
tmp
;

744 
	`W_DO
(
	`bønch_m™
()->
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
tmp
));

745 
ôî
 = 
tmp
;

748 
cou¡
 = 0;

749 
bønch_m™_im∂
::
èbÀ_tu∂e
 
	`row
(
br
);

750 
ªp_row_t
 
	`¨ï
(
±s
);

751 
psize
 = 
br
->
	`maxsize
()+1;

753 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

755 
pö_i
* 
h™dÀ
 = 
ôî
->
	`curs‹
();

756 i‡(!
h™dÀ
) {

757 
	`TRACE
(
TRACE_ALWAYS
,

759 
cou¡
);

764 
hsize
 = 
h™dÀ
->
	`hdr_size
();

765 
bsize
 = 
h™dÀ
->
	`body_size
();

766 i‡(
bsize
 =
psize
) {

767 
	`TRACE
(
TRACE_ALWAYS
,

769 
cou¡
);

772 i‡(
bsize
 > 
psize
) {

774 
h™dÀ
->
	`åunˇã_ªc
(
bsize
 - 
psize
);

775 
	`Ârötf
(
°dîr
, "+");

779 
rid_t
 
√w_rid
;

780 
vec_t
 
	`hvec
(
h™dÀ
->
	`hdr
(), 
hsize
);

781 
vec_t
 
	`dvec
(
h™dÀ
->
	`body
(), 
bsize
);

782 
vec_t
 
	`pvec
(
∑ddög
, 
PADDED_SIZE
-
bsize
);

783 
	`W_DO
(
db
->
	`¸óã_ªc
(
br_fid
, 
hvec
, 
PADDED_SIZE
, 
dvec
, 
√w_rid
));

784 
	`W_DO
(
db
->
	`≠≥nd_ªc
(
√w_rid
, 
pvec
));

787 
hô_li°
.
	`push_back
(
h™dÀ
->
	`rid
());

790 
vec_t
 
	`rvec
(&
row
.
_rid
, (
rid_t
));

791 
vec_t
 
	`ƒvec
(&
√w_rid
, (new_rid));

792 
i
=0; i < 
br_idx_cou¡
; i++) {

793 
key_sz
 = 
	`bønch_m™
()->
	`f‹m©_key
(
br_idx
+
i
, &
row
, 
¨ï
);

794 
vec_t
 
	`kvec
(
¨ï
.
_de°
, 
key_sz
);

800 
≤um
 = 
_pbønch_m™
->
	`gë_≤um
(&
br_idx
[
i
], &
row
);

801 
°id_t
 
fid
 = 
br_idx
[
i
].
	`fid
(
≤um
);

803 if(
br_idx
[
i
].
	`is_mr
()) {

804 
	`W_DO
(
db
->
	`de°roy_mr_assoc
(
fid
, 
kvec
, 
rvec
));

806 
ñ_fûÀr
 
ef
;

807 
ef
.
_ñ
.
	`put
(
ƒvec
);

808 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
fid
, 
kvec
, 
ef
));

810 
	`W_DO
(
db
->
	`de°roy_assoc
(
fid
, 
kvec
, 
rvec
));

812 
	`W_DO
(
db
->
	`¸óã_assoc
(
fid
, 
kvec
, 
ƒvec
));

816 
	`Ârötf
(
°dîr
, ".");

820 
cou¡
++;

821 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

823 
	`TRACE
(
TRACE_ALWAYS
, "paddedÑecordsádded\n");

829 
hlsize
 = 
hô_li°
.
	`size
();

830 
	`TRACE
(
TRACE_ALWAYS
,

832 
hlsize
);

833 
i
=0; i < 
hlsize
; i++) {

834 
	`W_DO
(
db
->
	`de°roy_ªc
(
hô_li°
[
i
]));

837  (
RCOK
);

838 
	}
}

850 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$_∑d_TELLERS
()

852 
ss_m
* 
db
 = 
this
->
	`db
();

855 
ãŒî_t
* 
ã
 = 
	`ãŒî_desc
();

856 
ödex_desc_t
* 
ã_idx
 = 
ã
->
	`ödexes
();

857 
ã_idx_cou¡
 = 
ã
->
	`ödex_cou¡
();

858 
°id_t
 
ã_fid
 = 
ã
->
	`fid
();

861 
	`W_DO
(
db
->
	`lock
(
ã_fid
, 
EX
));

862 
i
=0; i < 
ã_idx_cou¡
; i++) {

863 
j
=0; j < 
ã_idx
[
i
].
	`gë_∑πôi⁄_cou¡
(); j++)

864 
	`W_DO
(
db
->
	`lock
(
ã_idx
[
i
].
	`fid
(
j
), 
EX
));

867 
gu¨d
<
©s_ch¨_t
> 
±s
 = 
√w
 
	`©s_ch¨_t
(
ã
->
	`maxsize
());

875 
boﬁ
 
eof
;

878 c⁄° 
PADDED_SIZE
 = 4096;

880 
¨øy_gu¨d_t
<> 
∑ddög
 = 
√w
 [
PADDED_SIZE
];

881 
°d
::
ve˘‹
<
rid_t
> 
hô_li°
;

883 
gu¨d
<
ãŒî_m™_im∂
::
èbÀ_ôî
> 
ôî
;

885 
ãŒî_m™_im∂
::
èbÀ_ôî
* 
tmp
;

886 
	`W_DO
(
	`ãŒî_m™
()->
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
tmp
));

887 
ôî
 = 
tmp
;

890 
cou¡
 = 0;

891 
ãŒî_m™_im∂
::
èbÀ_tu∂e
 
	`row
(
ã
);

892 
ªp_row_t
 
	`¨ï
(
±s
);

893 
psize
 = 
ã
->
	`maxsize
()+1;

895 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

897 
pö_i
* 
h™dÀ
 = 
ôî
->
	`curs‹
();

898 i‡(!
h™dÀ
) {

899 
	`TRACE
(
TRACE_ALWAYS
,

901 
cou¡
);

906 
hsize
 = 
h™dÀ
->
	`hdr_size
();

907 
bsize
 = 
h™dÀ
->
	`body_size
();

908 i‡(
bsize
 =
psize
) {

909 
	`TRACE
(
TRACE_ALWAYS
,

911 
cou¡
);

914 i‡(
bsize
 > 
psize
) {

916 
h™dÀ
->
	`åunˇã_ªc
(
bsize
 - 
psize
);

917 
	`Ârötf
(
°dîr
, "+");

921 
rid_t
 
√w_rid
;

922 
vec_t
 
	`hvec
(
h™dÀ
->
	`hdr
(), 
hsize
);

923 
vec_t
 
	`dvec
(
h™dÀ
->
	`body
(), 
bsize
);

924 
vec_t
 
	`pvec
(
∑ddög
, 
PADDED_SIZE
-
bsize
);

925 
	`W_DO
(
db
->
	`¸óã_ªc
(
ã_fid
, 
hvec
, 
PADDED_SIZE
, 
dvec
, 
√w_rid
));

926 
	`W_DO
(
db
->
	`≠≥nd_ªc
(
√w_rid
, 
pvec
));

929 
hô_li°
.
	`push_back
(
h™dÀ
->
	`rid
());

932 
vec_t
 
	`rvec
(&
row
.
_rid
, (
rid_t
));

933 
vec_t
 
	`ƒvec
(&
√w_rid
, (new_rid));

934 
i
=0; i < 
ã_idx_cou¡
; i++) {

935 
key_sz
 = 
	`ãŒî_m™
()->
	`f‹m©_key
(
ã_idx
+
i
, &
row
, 
¨ï
);

936 
vec_t
 
	`kvec
(
¨ï
.
_de°
, 
key_sz
);

942 
≤um
 = 
_±ñÀr_m™
->
	`gë_≤um
(&
ã_idx
[
i
], &
row
);

943 
°id_t
 
fid
 = 
ã_idx
[
i
].
	`fid
(
≤um
);

945 if(
ã_idx
[
i
].
	`is_mr
()) {

946 
	`W_DO
(
db
->
	`de°roy_mr_assoc
(
fid
, 
kvec
, 
rvec
));

948 
ñ_fûÀr
 
ef
;

949 
ef
.
_ñ
.
	`put
(
ƒvec
);

950 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
fid
, 
kvec
, 
ef
));

952 
	`W_DO
(
db
->
	`de°roy_assoc
(
fid
, 
kvec
, 
rvec
));

954 
	`W_DO
(
db
->
	`¸óã_assoc
(
fid
, 
kvec
, 
ƒvec
));

958 
	`Ârötf
(
°dîr
, ".");

962 
cou¡
++;

963 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

965 
	`TRACE
(
TRACE_ALWAYS
, "paddedÑecordsádded\n");

971 
hlsize
 = 
hô_li°
.
	`size
();

972 
	`TRACE
(
TRACE_ALWAYS
,

974 
hlsize
);

975 
i
=0; i < 
hlsize
; i++) {

976 
	`W_DO
(
db
->
	`de°roy_ªc
(
hô_li°
[
i
]));

979  (
RCOK
);

980 
	}
}

991 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$db_¥öt
(
löes
)

994 
	`as£π
 (
_pssm
);

995 
	`as£π
 (
_öôülized
);

996 
	`as£π
 (
_lﬂded
);

999 
	`W_DO
(
_pbønch_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

1000 
	`W_DO
(
_±ñÀr_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

1001 
	`W_DO
(
_∑ccou¡_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

1002 
	`W_DO
(
_phi°‹y_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

1004  (
RCOK
);

1005 
	}
}

1016 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$db_„tch
()

1019 
	`as£π
 (
_pssm
);

1020 
	`as£π
 (
_öôülized
);

1021 
	`as£π
 (
_lﬂded
);

1024 
	`W_DO
(
_pbønch_m™
->
	`„tch_èbÀ
(
_pssm
));

1025 
	`W_DO
(
_±ñÀr_m™
->
	`„tch_èbÀ
(
_pssm
));

1026 
	`W_DO
(
_∑ccou¡_m™
->
	`„tch_èbÀ
(
_pssm
));

1027 
	`W_DO
(
_phi°‹y_m™
->
	`„tch_èbÀ
(
_pssm
));

1029  (
RCOK
);

1030 
	}
}

1033 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcb/shore_tpcb_schema.cpp

32 
	~"w‹klﬂd/çcb/sh‹e_çcb_schema.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

36 
ENTER_NAMESPACE
(
çcb
);

66 
	gbønch_t
::
	$bønch_t
(c⁄° 
uöt4_t
& 
pd
)

67 #ifde‡
CFG_HACK


68 : 
	`èbÀ_desc_t
("BRANCH", 3, 
pd
)

70 : 
	`èbÀ_desc_t
("BRANCH", 2, 
pd
)

74 
_desc
[0].
	`£tup
(
SQL_INT
, "B_ID");

75 
_desc
[1].
	`£tup
(
SQL_FLOAT
, "B_BALANCE");

77 #ifde‡
CFG_HACK


78 #w¨nög 
Addög
 
_PADDING
 
fõlds
 
ö
 
some
 
of
 
the
 
TM1
 
™d
 
TPCB
 
èbÀs


79 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "B_PADDING", 100-()-());

83 
uöt
 
keys1
[1] = { 0 };

84 
	`¸óã_¥im¨y_idx_desc
("B_IDX", 0, 
keys1
, 1, 
pd
);

85 
	}
}

89 
	gãŒî_t
::
	$ãŒî_t
(c⁄° 
uöt4_t
& 
pd
)

90 #ifde‡
CFG_HACK


91 : 
	`èbÀ_desc_t
("TELLER", 4, 
pd
)

93 : 
	`èbÀ_desc_t
("TELLER", 3, 
pd
)

97 
_desc
[0].
	`£tup
(
SQL_INT
, "T_ID");

98 
_desc
[1].
	`£tup
(
SQL_INT
, "T_B_ID");

99 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "T_BALANCE");

101 #ifde‡
CFG_HACK


102 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "T_PADDING", 100-2*() - ());

106 
uöt
 
keys1
[1] = { 0 };

107 
	`¸óã_¥im¨y_idx_desc
("T_IDX", 0, 
keys1
, 1, 
pd
);

108 
	}
}

112 
	gaccou¡_t
::
	$accou¡_t
(c⁄° 
uöt4_t
& 
pd
)

113 #ifde‡
CFG_HACK


114 : 
	`èbÀ_desc_t
("ACCOUNT", 4, 
pd
)

116 : 
	`èbÀ_desc_t
("ACCOUNT", 3, 
pd
)

120 
_desc
[0].
	`£tup
(
SQL_INT
, "A_ID");

121 
_desc
[1].
	`£tup
(
SQL_INT
, "A_B_ID");

122 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "A_BALANCE");

124 #ifde‡
CFG_HACK


125 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "A_PADDING", 100-2*()-());

128 #ifde‡
PLP_MBENCH


129 #w¨nög 
PLP
 
MBích
 !!!!

130 
uöt
 
keys1
[3] = { 0, 1, 2};

131 
uöt
 
nkeys
 = 3;

133 
uöt
 
keys1
[1] = {0 };

134 
uöt
 
nkeys
 = 1;

138 
	`¸óã_¥im¨y_idx_desc
("A_IDX", 0, 
keys1
, 
nkeys
, 
pd
);

139 
	}
}

142 
	ghi°‹y_t
::
	$hi°‹y_t
(c⁄° 
uöt4_t
& 
pd
)

143 #ifde‡
CFG_HACK


144 : 
	`èbÀ_desc_t
("HISTORY", 6, 
pd
)

146 : 
	`èbÀ_desc_t
("HISTORY", 5, 
pd
)

150 
_desc
[0].
	`£tup
(
SQL_INT
, "H_B_ID");

151 
_desc
[1].
	`£tup
(
SQL_INT
, "H_T_ID");

152 
_desc
[2].
	`£tup
(
SQL_INT
, "H_A_ID");

153 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "H_DELTA");

154 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "H_TIME");

156 #ifde‡
CFG_HACK


157 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "H_PADDING", 50-3*()-2*());

161 
	}
}

164 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcb/shore_tpcb_schema_man.cpp

33 
	~"w‹klﬂd/çcb/sh‹e_çcb_schema_m™.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

38 
ENTER_NAMESPACE
(
çcb
);

52 
w_rc_t


53 
	gbønch_m™_im∂
::
	$b_ödex_¥obe
(
ss_m
* 
db
,

54 
bønch_tu∂e
* 
±u∂e
,

55 c⁄° 
b_id
)

57 
	`as£π
 (
±u∂e
);

58 
±u∂e
->
	`£t_vÆue
(0, 
b_id
);

59  (
	`ödex_¥obe_by_«me
(
db
, "B_INDEX", 
±u∂e
));

60 
	}
}

62 
w_rc_t
 
	gbønch_m™_im∂
::
	$b_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

63 
bønch_tu∂e
* 
±u∂e
,

64 c⁄° 
b_id
)

66 
	`as£π
 (
±u∂e
);

67 
±u∂e
->
	`£t_vÆue
(0, 
b_id
);

68  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "B_IDX", 
±u∂e
));

69 
	}
}

71 
w_rc_t
 
	gbønch_m™_im∂
::
	$b_idx_∆
(
ss_m
* 
db
,

72 
bønch_tu∂e
* 
±u∂e
,

73 c⁄° 
b_id
)

75 
	`as£π
 (
±u∂e
);

76 
±u∂e
->
	`£t_vÆue
(0, 
b_id
);

77  (
	`ödex_¥obe_∆_by_«me
(
db
, "B_IDX", 
±u∂e
));

78 
	}
}

86 
w_rc_t
 
	gãŒî_m™_im∂
::
	$t_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

87 
ãŒî_tu∂e
* 
±u∂e
,

88 c⁄° 
t_id
)

90 
	`as£π
 (
±u∂e
);

91 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

92  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "T_IDX", 
±u∂e
));

93 
	}
}

95 
w_rc_t
 
	gãŒî_m™_im∂
::
	$t_idx_∆
(
ss_m
* 
db
,

96 
ãŒî_tu∂e
* 
±u∂e
,

97 c⁄° 
t_id
)

99 
	`as£π
 (
±u∂e
);

100 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

101  (
	`ödex_¥obe_∆_by_«me
(
db
, "T_IDX", 
±u∂e
));

102 
	}
}

110 
w_rc_t
 
	gaccou¡_m™_im∂
::
	$a_ödex_¥obe
(
ss_m
* 
db
,

111 
accou¡_tu∂e
* 
±u∂e
,

112 c⁄° 
a_id
,

113 c⁄° 
b_id
,

114 c⁄° 
bÆ™˚
)

116 
	`as£π
 (
±u∂e
);

117 
±u∂e
->
	`£t_vÆue
(0, 
a_id
);

118 #ifde‡
PLP_MBENCH


119 
±u∂e
->
	`£t_vÆue
(1, 
b_id
);

120 
±u∂e
->
	`£t_vÆue
(2, 
bÆ™˚
);

122 ()
b_id
;

123 ()
bÆ™˚
;

125  (
	`ödex_¥obe_by_«me
(
db
, "A_IDX", 
±u∂e
));

126 
	}
}

128 
w_rc_t
 
	gaccou¡_m™_im∂
::
	$a_dñëe_by_ödex
(
ss_m
* 
db
,

129 
accou¡_tu∂e
* 
±u∂e
,

130 c⁄° 
a_id
,

131 c⁄° 
b_id
,

132 c⁄° 
bÆ™˚
)

134 
	`as£π
 (
±u∂e
);

135 
±u∂e
->
	`£t_vÆue
(0, 
a_id
);

136 #ifde‡
PLP_MBENCH


137 
±u∂e
->
	`£t_vÆue
(1, 
b_id
);

138 
±u∂e
->
	`£t_vÆue
(2, 
bÆ™˚
);

140 ()
b_id
;

141 ()
bÆ™˚
;

143 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "A_IDX", 
±u∂e
));

144  (
	`dñëe_tu∂e
(
db
, 
±u∂e
));

145 
	}
}

147 
w_rc_t
 
	gaccou¡_m™_im∂
::
	$a_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

148 
accou¡_tu∂e
* 
±u∂e
,

149 c⁄° 
a_id
,

150 c⁄° 
b_id
,

151 c⁄° 
bÆ™˚
)

153 
	`as£π
 (
±u∂e
);

154 
±u∂e
->
	`£t_vÆue
(0, 
a_id
);

155 #ifde‡
PLP_MBENCH


156 
±u∂e
->
	`£t_vÆue
(1, 
b_id
);

157 
±u∂e
->
	`£t_vÆue
(2, 
bÆ™˚
);

159 ()
b_id
;

160 ()
bÆ™˚
;

162  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "A_IDX", 
±u∂e
));

163 
	}
}

165 
w_rc_t
 
	gaccou¡_m™_im∂
::
	$a_idx_∆
(
ss_m
* 
db
,

166 
accou¡_tu∂e
* 
±u∂e
,

167 c⁄° 
a_id
,

168 c⁄° 
b_id
,

169 c⁄° 
bÆ™˚
)

171 
	`as£π
 (
±u∂e
);

172 
±u∂e
->
	`£t_vÆue
(0, 
a_id
);

173 #ifde‡
PLP_MBENCH


174 
±u∂e
->
	`£t_vÆue
(1, 
b_id
);

175 
±u∂e
->
	`£t_vÆue
(2, 
bÆ™˚
);

177 ()
b_id
;

178 ()
bÆ™˚
;

180  (
	`ödex_¥obe_∆_by_«me
(
db
, "A_IDX", 
±u∂e
));

181 
	}
}

184 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcb/shore_tpcb_xct.cpp

33 
	~"w‹klﬂd/çcb/sh‹e_çcb_ív.h
"

35 
	~<ve˘‹
>

36 
	~<numîic
>

37 
	~<Æg‹ôhm
>

39 
usög
 
«me•a˚
 
	gsh‹e
;

42 
ENTER_NAMESPACE
(
çcb
);

52 
__thªad
 
Sh‹eTPCBTrxSèts
 
	gmy_°©s
;

54 
	gSh‹eTPCBEnv
::
	$ív_thªad_öô
()

56 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

57 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

58 
	}
}

60 
	gSh‹eTPCBEnv
::
	$ív_thªad_föi
()

62 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

63 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

64 
	}
}

75 
Sh‹eTPCBTrxSèts
 
	gSh‹eTPCBEnv
::
	$_gë_°©s
()

77 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

78 
Sh‹eTPCBTrxSèts
 
rvÆ
;

79 
rvÆ
 -=Ñval;

80 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

81 
rvÆ
 +*
ô
->
£c⁄d
;

82  (
rvÆ
);

83 
	}
}

94 
	gSh‹eTPCBEnv
::
	$ª£t_°©s
()

96 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

97 
_œ°_°©s
 = 
	`_gë_°©s
();

98 
	}
}

109 
	gSh‹eTPCBEnv
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

110 c⁄° 
iS¥ód
,

111 c⁄° 
iNumOfThªads
,

112 c⁄° 
dñay
,

113 c⁄° 
ul⁄g_t
 
mioch
,

114 c⁄° 
avg˝uußge
)

116 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

119 
Sh‹eTPCBTrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

122 
cuºít_°©s
 -
_œ°_°©s
;

124 
uöt
 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

125 
uöt
 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

126 
uöt
 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

128 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

139 
iQuîõdSF
,

140 (
iS¥ód
 ? "Yes" : "No"),

141 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
,

142 
dñay
, 
mioch
/dñay, 
avg˝uußge
,

143 100*
avg˝uußge
/
	`gë_max_˝u_cou¡
(),

144 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
);

145 
	}
}

173 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

175 
	`as£π
 (
¥eque°
);

177 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

178 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

179 if(!
_bAœrmSë
) {

180 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

181 
_bAœrmSë
 = 
åue
;

185 
ønd
;

187 
¥eque°
->
	`ty≥
()) {

190 
XCT_TPCB_ACCT_UPDATE
:

191  (
	`run_ac˘_upd©e
(
¥eque°
));

194 
XCT_TPCB_MBENCH_INSERT_ONLY
:

195  (
	`run_mbích_ö£π_⁄ly
(
¥eque°
));

196 
XCT_TPCB_MBENCH_DELETE_ONLY
:

197  (
	`run_mbích_dñëe_⁄ly
(
¥eque°
));

198 
XCT_TPCB_MBENCH_PROBE_ONLY
:

199  (
	`run_mbích_¥obe_⁄ly
(
¥eque°
));

200 
XCT_TPCB_MBENCH_INSERT_DELETE
:

201 i‡(
	`UR™d
(1,100)>
_dñëe_‰eq
)

202  (
	`run_mbích_ö£π_⁄ly
(
¥eque°
));

204  (
	`run_mbích_dñëe_⁄ly
(
¥eque°
));

206 
XCT_TPCB_MBENCH_INSERT_PROBE
:

207 i‡(
	`UR™d
(1,100)>
_¥obe_‰eq
)

208  (
	`run_mbích_ö£π_⁄ly
(
¥eque°
));

210  (
	`run_mbích_¥obe_⁄ly
(
¥eque°
));

212 
XCT_TPCB_MBENCH_DELETE_PROBE
:

213 i‡(
	`UR™d
(1,100)>
_dñëe_‰eq
)

214  (
	`run_mbích_¥obe_⁄ly
(
¥eque°
));

216  (
	`run_mbích_dñëe_⁄ly
(
¥eque°
));

218 
XCT_TPCB_MBENCH_MIX
:

219 
ønd
 = 
	`UR™d
(1,100);

220 i‡(
ønd
<=
_ö£π_‰eq
)

221  (
	`run_mbích_ö£π_⁄ly
(
¥eque°
));

222 if(
ønd
<=
_ö£π_‰eq
+
_¥obe_‰eq
)

223  (
	`run_mbích_¥obe_⁄ly
(
¥eque°
));

225  (
	`run_mbích_dñëe_⁄ly
(
¥eque°
));

229 
	`as£π
 (0);

231  (
RCOK
);

232 
	}
}

251 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
ac˘_upd©e
);

252 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
p›uœã_db
);

255 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_ö£π_⁄ly
);

256 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_dñëe_⁄ly
);

257 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_¥obe_⁄ly
);

258 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_ö£π_dñëe
);

259 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_ö£π_¥obe
);

260 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_dñëe_¥obe
);

261 
DEFINE_TRX
(
Sh‹eTPCBEnv
,
mbích_mix
);

274 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_ac˘_upd©e
(const ,

275 
ac˘_upd©e_öput_t
& 
µö
)

278 
	`as£π
 (
_pssm
);

279 
	`as£π
 (
_öôülized
);

280 
	`as£π
 (
_lﬂded
);

286 
tu∂e_gu¨d
<
bønch_m™_im∂
> 
	`¥b
(
_pbønch_m™
);

287 
tu∂e_gu¨d
<
ãŒî_m™_im∂
> 
	`¥t
(
_±ñÀr_m™
);

288 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥ac˘
(
_∑ccou¡_m™
);

289 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥hi°
(
_phi°‹y_m™
);

291 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

294 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

296 
¥b
->
_ªp
 = &
¨ïrow
;

297 
¥t
->
_ªp
 = &
¨ïrow
;

298 
¥ac˘
->
_ªp
 = &
¨ïrow
;

299 
¥hi°
->
_ªp
 = &
¨ïrow
;

301 
tŸÆ
;

304 
	`W_DO
(
_∑ccou¡_m™
->
	`a_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥ac˘
, 
µö
.
a_id
));

305 
¥ac˘
->
	`gë_vÆue
(2, 
tŸÆ
);

306 
¥ac˘
->
	`£t_vÆue
(2, 
tŸÆ
 + 
µö
.
dñè
);

307 
	`W_DO
(
_∑ccou¡_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥ac˘
));

310 
¥hi°
->
	`£t_vÆue
(0, 
µö
.
b_id
);

311 
¥hi°
->
	`£t_vÆue
(1, 
µö
.
t_id
);

312 
¥hi°
->
	`£t_vÆue
(2, 
µö
.
a_id
);

313 
¥hi°
->
	`£t_vÆue
(3, 
µö
.
dñè
);

314 
¥hi°
->
	`£t_vÆue
(4, 
	`time
(
NULL
));

315 #ifde‡
CFG_HACK


316 
¥hi°
->
	`£t_vÆue
(5, "padding");

318 
	`W_DO
(
_phi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hi°
));

321 
	`W_DO
(
_±ñÀr_m™
->
	`t_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥t
, 
µö
.
t_id
));

322 
¥t
->
	`gë_vÆue
(2, 
tŸÆ
);

323 
¥t
->
	`£t_vÆue
(2, 
tŸÆ
 + 
µö
.
dñè
);

324 
	`W_DO
(
_±ñÀr_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥t
));

327 
	`W_DO
(
_pbønch_m™
->
	`b_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥b
, 
µö
.
b_id
));

328 
¥b
->
	`gë_vÆue
(1, 
tŸÆ
);

329 
¥b
->
	`£t_vÆue
(1, 
tŸÆ
 + 
µö
.
dñè
);

330 
	`W_DO
(
_pbønch_m™
->
	`upd©e_tu∂e
(
_pssm
, 
¥b
));

332 #ifde‡
PRINT_TRX_RESULTS


335 
¥b
->
	`¥öt_tu∂e
();

336 
¥t
->
	`¥öt_tu∂e
();

337 
¥ac˘
->
	`¥öt_tu∂e
();

338 
¥hi°
->
	`¥öt_tu∂e
();

341  
RCOK
;

343 
	}
}

358 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_p›uœã_db
(const ,

359 
p›uœã_db_öput_t
& 
µö
)

362 
	`as£π
 (
_pssm
);

363 
	`as£π
 (
_öôülized
);

369 
tu∂e_gu¨d
<
bønch_m™_im∂
> 
	`¥b
(
_pbønch_m™
);

370 
tu∂e_gu¨d
<
ãŒî_m™_im∂
> 
	`¥t
(
_±ñÀr_m™
);

371 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥ac˘
(
_∑ccou¡_m™
);

372 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥hi°
(
_phi°‹y_m™
);

374 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

375 
ªp_row_t
 
	`¨ïrow_key
(
_∑ccou¡_m™
->
	`ts
());

378 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

379 
¨ïrow_key
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

381 
¥b
->
_ªp
 = &
¨ïrow
;

382 
¥t
->
_ªp
 = &
¨ïrow
;

383 
¥ac˘
->
_ªp
 = &
¨ïrow
;

384 
¥hi°
->
_ªp
 = &
¨ïrow
;

385 
¥b
->
_ªp_key
 = &
¨ïrow_key
;

386 
¥t
->
_ªp_key
 = &
¨ïrow_key
;

387 
¥ac˘
->
_ªp_key
 = &
¨ïrow_key
;

388 
¥hi°
->
_ªp_key
 = &
¨ïrow_key
;

390 if(
µö
.
_fú°_a_id
 < 0) {

392 
i
=0; i < 
µö
.
_sf
; i++) {

393 
¥b
->
	`£t_vÆue
(0, 
i
);

394 
¥b
->
	`£t_vÆue
(1, 0.0);

395 #ifde‡
CFG_HACK


396 
¥b
->
	`£t_vÆue
(2, "padding");

398 
	`W_DO
(
_pbønch_m™
->
	`add_tu∂e
(
_pssm
, 
¥b
));

400 
	`TRACE
–
TRACE_STATISTICS
, "Lﬂded %d bønches\n", 
µö
.
_sf
);

402 
i
=0; i < 
µö
.
_sf
*
TPCB_TELLERS_PER_BRANCH
; i++) {

403 
¥t
->
	`£t_vÆue
(0, 
i
);

404 
¥t
->
	`£t_vÆue
(1, 
i
/
TPCB_TELLERS_PER_BRANCH
);

405 
¥t
->
	`£t_vÆue
(2, 0.0);

406 #ifde‡
CFG_HACK


407 
¥t
->
	`£t_vÆue
(3, "padding");

409 
	`W_DO
(
_±ñÀr_m™
->
	`add_tu∂e
(
_pssm
, 
¥t
));

411 
	`TRACE
–
TRACE_STATISTICS
, "Loaded %dÅellers\n",

412 
µö
.
_sf
*
TPCB_TELLERS_PER_BRANCH
);

415 
i
=0; i < 
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
; i++) {

416 
a_id
 = 
µö
.
_fú°_a_id
 +

417 (
TPCB_ACCOUNTS_CREATED_PER_POP_XCT
-
i
-1);

418 
¥ac˘
->
	`£t_vÆue
(0, 
a_id
);

419 
¥ac˘
->
	`£t_vÆue
(1, 
a_id
/
TPCB_ACCOUNTS_PER_BRANCH
);

420 
¥ac˘
->
	`£t_vÆue
(2, 0.0);

421 #ifde‡
CFG_HACK


422 
¥ac˘
->
	`£t_vÆue
(3, "padding");

424 
	`W_DO
(
_∑ccou¡_m™
->
	`add_tu∂e
(
_pssm
, 
¥ac˘
));

429 
	`W_DO
(
_pssm
->
	`commô_x˘
());

431 #ifde‡
PRINT_TRX_RESULTS


434 
¥b
->
	`¥öt_tu∂e
();

435 
¥t
->
	`¥öt_tu∂e
();

436 
¥ac˘
->
	`¥öt_tu∂e
();

437 
¥hi°
->
	`¥öt_tu∂e
();

440  
RCOK
;

442 
	}
}

453 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_ö£π_⁄ly
(const ,

454 
mbích_ö£π_⁄ly_öput_t
& 
mioö
)

457 
	`as£π
 (
_pssm
);

458 
	`as£π
 (
_öôülized
);

459 
	`as£π
 (
_lﬂded
);

465 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥ac˘
(
_∑ccou¡_m™
);

467 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

470 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

472 
¥ac˘
->
_ªp
 = &
¨ïrow
;

475 
¥ac˘
->
	`£t_vÆue
(0, 
mioö
.
a_id
);

476 
¥ac˘
->
	`£t_vÆue
(1, 
mioö
.
b_id
);

477 
¥ac˘
->
	`£t_vÆue
(2, 
mioö
.
bÆ™˚
);

478 #ifde‡
CFG_HACK


479 
¥ac˘
->
	`£t_vÆue
(3, "padding");

481 
	`W_DO
(
_∑ccou¡_m™
->
	`add_tu∂e
(
_pssm
, 
¥ac˘
));

483 #ifde‡
PRINT_TRX_RESULTS


486 
¥ac˘
->
	`¥öt_tu∂e
();

489  
RCOK
;

491 
	}
}

502 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_dñëe_⁄ly
(const ,

503 
mbích_dñëe_⁄ly_öput_t
& 
mdoö
)

506 
	`as£π
 (
_pssm
);

507 
	`as£π
 (
_öôülized
);

508 
	`as£π
 (
_lﬂded
);

514 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥ac˘
(
_∑ccou¡_m™
);

516 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

519 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

521 
¥ac˘
->
_ªp
 = &
¨ïrow
;

524 
	`W_DO
(
_∑ccou¡_m™
->
	`a_dñëe_by_ödex
(
_pssm
, 
¥ac˘
, 
mdoö
.
a_id
,

525 
mdoö
.
b_id
, mdoö.
bÆ™˚
));

527 #ifde‡
PRINT_TRX_RESULTS


530 
¥ac˘
->
	`¥öt_tu∂e
();

533  
RCOK
;

535 
	}
}

546 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_¥obe_⁄ly
(const ,

547 
mbích_¥obe_⁄ly_öput_t
& 
mpoö
)

550 
	`as£π
 (
_pssm
);

551 
	`as£π
 (
_öôülized
);

552 
	`as£π
 (
_lﬂded
);

558 
tu∂e_gu¨d
<
accou¡_m™_im∂
> 
	`¥ac˘
(
_∑ccou¡_m™
);

560 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

563 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

565 
¥ac˘
->
_ªp
 = &
¨ïrow
;

568 
w_rc_t
 
e
 = 
_∑ccou¡_m™
->
	`a_ödex_¥obe
(
_pssm
, 
¥ac˘
, 
mpoö
.
a_id
,

569 
mpoö
.
b_id
, mpoö.
bÆ™˚
);

570 i‡(
e
.
	`is_îr‹
(Ë&& (e.
	`îr_num
(Ë!
£_TUPLE_NOT_FOUND
)) {

571 
	`W_DO
(
e
);

574  
RCOK
;

576 
	}
}

586 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_ö£π_dñëe
(const ,

587 
mbích_ö£π_dñëe_öput_t
& 
midö
)

589 
w_rc_t
 
e
 = 
RCOK
;

592 
	`as£π
 (
_pssm
);

593 
	`as£π
 (
_öôülized
);

594 
	`as£π
 (
_lﬂded
);

600 
èbÀ_row_t
* 
¥b
 = 
_pbønch_m™
->
	`gë_tu∂e
();

601 
	`as£π
 (
¥b
);

603 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

606 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

607 
¥b
->
_ªp
 = &
¨ïrow
;

612 
¥b
->
	`£t_vÆue
(0, 
midö
.
b_id
);

613 
¥b
->
	`£t_vÆue
(1, 0.0);

614 
¥b
->
	`£t_vÆue
(2, "padding");

615 
e
 = 
_pbønch_m™
->
	`add_tu∂e
(
_pssm
, 
¥b
);

616 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

619 
e
 = 
_pbønch_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥b
);

620 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

624 #ifde‡
PRINT_TRX_RESULTS


627 
¥b
->
	`¥öt_tu∂e
();

630 
d⁄e
:

632 
_pbønch_m™
->
	`give_tu∂e
(
¥b
);

633  (
e
);

635 
	}
}

645 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_ö£π_¥obe
(const ,

646 
mbích_ö£π_¥obe_öput_t
& 
mùö
)

648 
w_rc_t
 
e
 = 
RCOK
;

651 
	`as£π
 (
_pssm
);

652 
	`as£π
 (
_öôülized
);

653 
	`as£π
 (
_lﬂded
);

659 
èbÀ_row_t
* 
¥b
 = 
_pbønch_m™
->
	`gë_tu∂e
();

660 
	`as£π
 (
¥b
);

662 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

665 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

666 
¥b
->
_ªp
 = &
¨ïrow
;

671 
¥b
->
	`£t_vÆue
(0, 
mùö
.
b_id
);

672 
¥b
->
	`£t_vÆue
(1, 0.0);

673 
¥b
->
	`£t_vÆue
(2, "padding");

674 
e
 = 
_pbønch_m™
->
	`add_tu∂e
(
_pssm
, 
¥b
);

675 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

678 
e
 = 
_pbønch_m™
->
	`b_ödex_¥obe
(
_pssm
, 
¥b
, 
mùö
.
b_id
);

679 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

683 #ifde‡
PRINT_TRX_RESULTS


686 
¥b
->
	`¥öt_tu∂e
();

689 
d⁄e
:

691 
_pbønch_m™
->
	`give_tu∂e
(
¥b
);

692  (
e
);

694 
	}
}

704 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_dñëe_¥obe
(const ,

705 
mbích_dñëe_¥obe_öput_t
& 
mdpö
)

707 
w_rc_t
 
e
 = 
RCOK
;

710 
	`as£π
 (
_pssm
);

711 
	`as£π
 (
_öôülized
);

712 
	`as£π
 (
_lﬂded
);

718 
èbÀ_row_t
* 
¥b
 = 
_pbønch_m™
->
	`gë_tu∂e
();

719 
	`as£π
 (
¥b
);

721 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

724 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

725 
¥b
->
_ªp
 = &
¨ïrow
;

730 
e
 = 
_pbønch_m™
->
	`b_ödex_¥obe
(
_pssm
, 
¥b
, 
mdpö
.
b_id
);

731 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

734 
e
 = 
_pbønch_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥b
);

735 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

739 #ifde‡
PRINT_TRX_RESULTS


742 
¥b
->
	`¥öt_tu∂e
();

745 
d⁄e
:

747 
_pbønch_m™
->
	`give_tu∂e
(
¥b
);

748  (
e
);

750 
	}
}

760 
w_rc_t
 
	gSh‹eTPCBEnv
::
	$x˘_mbích_mix
(const ,

761 
mbích_mix_öput_t
& 
mmö
)

763 
w_rc_t
 
e
 = 
RCOK
;

766 
	`as£π
 (
_pssm
);

767 
	`as£π
 (
_öôülized
);

768 
	`as£π
 (
_lﬂded
);

774 
èbÀ_row_t
* 
¥b
 = 
_pbønch_m™
->
	`gë_tu∂e
();

775 
	`as£π
 (
¥b
);

777 
ªp_row_t
 
	`¨ïrow
(
_∑ccou¡_m™
->
	`ts
());

780 
¨ïrow
.
	`£t
(
_∑ccou¡_desc
->
	`maxsize
());

781 
¥b
->
_ªp
 = &
¨ïrow
;

786 
¥b
->
	`£t_vÆue
(0, 
mmö
.
b_id
);

787 
¥b
->
	`£t_vÆue
(1, 0.0);

788 
¥b
->
	`£t_vÆue
(2, "padding");

789 
e
 = 
_pbønch_m™
->
	`add_tu∂e
(
_pssm
, 
¥b
);

790 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

793 
e
 = 
_pbønch_m™
->
	`b_ödex_¥obe
(
_pssm
, 
¥b
, 
mmö
.
b_id
);

794 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

797 
e
 = 
_pbønch_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥b
);

798 i‡(
e
.
	`is_îr‹
()Ë{ 
d⁄e
; }

802 #ifde‡
PRINT_TRX_RESULTS


805 
¥b
->
	`¥öt_tu∂e
();

808 
d⁄e
:

810 
_pbønch_m™
->
	`give_tu∂e
(
¥b
);

811  (
e
);

813 
	}
}

818 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcb/tpcb_input.cpp

29 
	~"k_deföes.h
"

31 
	~"w‹klﬂd/çcb/çcb_öput.h
"

33 
ENTER_NAMESPACE
(
çcb
);

37 #unde‡
ONLY_LOCAL_TCPB


38 
	#ONLY_LOCAL_TCPB


	)

40 #ifde‡ 
ONLY_LOCAL_TCPB


41 #w¨nög 
TPCB
 - 
u£s
 
⁄ly
 
loˇl
 
x˘s


42 c⁄° 
	gLOCAL_TPCB
 = 100;

46 c⁄° 
	gLOCAL_TPCB
 = 85;

49 #w¨nög 
TPCB
 
u£s
 
UZR™d
 
gíî©ög
 
skewed
 
Zùfün
 
öputs
. 
Skew√ss
 
ˇn
 
be
 
c⁄åﬁÀd
 
by
 
the
 'zùf' 
shñl
 
comm™d
.

52 
skewî_t
 
	gb_skewî
;

53 
skewî_t
 
	gt_skewî
;

54 
skewî_t
 
	ga_skewî
;

55 
boﬁ
 
	g_ch™ge_lﬂd
 = 
Ál£
;

62 
ac˘_upd©e_öput_t
 
	$¸óã_ac˘_upd©e_öput
(
sf
,

63 
•ecificBr
)

65 
	`as£π
 (
sf
>0);

67 
ac˘_upd©e_öput_t
 
auö
;

69 if(
_ch™ge_lﬂd
) {

70 
auö
.
b_id
 = 
b_skewî
.
	`gë_öput
();

71 
auö
.
t_id
 = (auö.
b_id
 * 
TPCB_TELLERS_PER_BRANCH
Ë+ 
t_skewî
.
	`gë_öput
();

72 
accou¡
 = 
a_skewî
.
	`gë_öput
();

74 i‡(
	`UR™d
(0,100)>
LOCAL_TPCB
) {

76 
auö
.
a_id
 = (
	`UR™d
(0,
sf
)*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
accou¡
;

80 
auö
.
a_id
 = (auö.
b_id
*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
accou¡
;

85 i‡(
•ecificBr
>0) {

86 
auö
.
b_id
 = 
•ecificBr
-1;

89 
auö
.
b_id
 = 
	`UZR™d
(0,
sf
-1);

92 
auö
.
t_id
 = (auö.
b_id
 * 
TPCB_TELLERS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_TELLERS_PER_BRANCH-1);

95 i‡(
	`UR™d
(0,100)>
LOCAL_TPCB
) {

97 
auö
.
a_id
 = (
	`UR™d
(0,
sf
)*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_ACCOUNTS_PER_BRANCH-1);

101 
auö
.
a_id
 = (auö.
b_id
*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_ACCOUNTS_PER_BRANCH-1);

105 
auö
.
dñè
 = 
	`UR™d
(0,2000000) - 1000000;

107  (
auö
);

108 
	}
}

118 
p›uœã_db_öput_t
 
	$¸óã_p›uœã_db_öput
(
sf
,

119 
•ecificSub
)

121 
	`as£π
 (
sf
>0);

122 
p›uœã_db_öput_t
 
	`pdbö
(
sf
,
•ecificSub
);

123  (
pdbö
);

124 
	}
}

133 vﬁ©ûê
	gbÆ™˚
 = 0;

135 
mbích_ö£π_⁄ly_öput_t
 
	$¸óã_mbích_ö£π_⁄ly_öput
(
sf
,

136 
•ecificBr
)

138 
	`as£π
 (
sf
>0);

140 
mbích_ö£π_⁄ly_öput_t
 
mioö
;

145 i‡(
•ecificBr
>0) {

146 
mioö
.
b_id
 = 
•ecificBr
-1;

149 
mioö
.
b_id
 = 
	`UZR™d
(0,
sf
-1);

153 
mioö
.
a_id
 = (mioö.
b_id
*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_ACCOUNTS_PER_BRANCH-1);

155 
mioö
.
bÆ™˚
 = 
	`UR™d
(0,200000000) - 100000000;

157  (
mioö
);

158 
	}
}

160 
	gmbích_ö£π_⁄ly_öput_t
::
	$¥öt
()

162 
	`TRACE
–
TRACE_ALWAYS
, "%d %d %.2f\n", 
b_id
, 
a_id
, 
bÆ™˚
);

163 
	}
}

172 
mbích_dñëe_⁄ly_öput_t
 
	$¸óã_mbích_dñëe_⁄ly_öput
(
sf
,

173 
•ecificBr
)

175 
	`as£π
 (
sf
>0);

177 
mbích_dñëe_⁄ly_öput_t
 
mdoö
;

180 i‡(
•ecificBr
>0) {

181 
mdoö
.
b_id
 = 
•ecificBr
-1;

184 
mdoö
.
b_id
 = 
	`UZR™d
(0,
sf
-1);

188 
mdoö
.
a_id
 = (mdoö.
b_id
*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_ACCOUNTS_PER_BRANCH-1);

190 
mdoö
.
bÆ™˚
 = 
	`UR™d
(0,2000000) - 1000000;

192  (
mdoö
);

193 
	}
}

195 
	gmbích_dñëe_⁄ly_öput_t
::
	$¥öt
()

197 
	`TRACE
–
TRACE_ALWAYS
, "%d %d %.2f\n", 
b_id
, 
a_id
, 
bÆ™˚
);

198 
	}
}

208 
mbích_¥obe_⁄ly_öput_t
 
	$¸óã_mbích_¥obe_⁄ly_öput
(
sf
,

209 
•ecificBr
)

211 
	`as£π
 (
sf
>0);

213 
mbích_¥obe_⁄ly_öput_t
 
mpoö
;

216 i‡(
•ecificBr
>0) {

217 
mpoö
.
b_id
 = 
•ecificBr
-1;

220 
mpoö
.
b_id
 = 
	`UZR™d
(0,
sf
-1);

224 
mpoö
.
a_id
 = (mpoö.
b_id
*
TPCB_ACCOUNTS_PER_BRANCH
Ë+ 
	`UZR™d
(0,TPCB_ACCOUNTS_PER_BRANCH-1);

226 
mpoö
.
bÆ™˚
 = 
	`UR™d
(0,200000000) - 100000000;

228  (
mpoö
);

229 
	}
}

231 
	gmbích_¥obe_⁄ly_öput_t
::
	$¥öt
()

233 
	`TRACE
–
TRACE_ALWAYS
, "%d %d %.2f\n", 
b_id
, 
a_id
, 
bÆ™˚
);

234 
	}
}

244 
mbích_ö£π_dñëe_öput_t
 
	$¸óã_mbích_ö£π_dñëe_öput
(
sf
,

245 
•ecificBr
)

247 
	`as£π
 (
sf
>0);

249 
mbích_ö£π_dñëe_öput_t
 
midö
;

250 
mbích_ö£π_⁄ly_öput_t
 
mioö
;

251 
mioö
 = 
	`¸óã_mbích_ö£π_⁄ly_öput
(
sf
, 
•ecificBr
);

252 
midö
.
b_id
 = 
mioö
.b_id;

253 
midö
.
a_id
 = 
mioö
.a_id;

254 
midö
.
bÆ™˚
 = 
mioö
.balance;

256  (
midö
);

257 
	}
}

267 
mbích_ö£π_¥obe_öput_t
 
	$¸óã_mbích_ö£π_¥obe_öput
(
sf
,

268 
•ecificBr
)

270 
	`as£π
 (
sf
>0);

272 
mbích_ö£π_¥obe_öput_t
 
mùö
;

273 
mbích_ö£π_⁄ly_öput_t
 
mioö
;

274 
mioö
 = 
	`¸óã_mbích_ö£π_⁄ly_öput
(
sf
, 
•ecificBr
);

275 
mùö
.
b_id
 = 
mioö
.b_id;

276 
mùö
.
a_id
 = 
mioö
.a_id;

277 
mùö
.
bÆ™˚
 = 
mioö
.balance;

279  (
mùö
);

280 
	}
}

290 
mbích_dñëe_¥obe_öput_t
 
	$¸óã_mbích_dñëe_¥obe_öput
(
sf
,

291 
•ecificBr
)

293 
	`as£π
 (
sf
>0);

295 
mbích_dñëe_¥obe_öput_t
 
mdpö
;

296 
mbích_dñëe_⁄ly_öput_t
 
mdoö
;

297 
mdoö
 = 
	`¸óã_mbích_dñëe_⁄ly_öput
(
sf
, 
•ecificBr
);

298 
mdpö
.
b_id
 = 
mdoö
.b_id;

299 
mdpö
.
a_id
 = 
mdoö
.a_id;

300 
mdpö
.
bÆ™˚
 = 
mdoö
.balance;

303  (
mdpö
);

304 
	}
}

314 
mbích_mix_öput_t
 
	$¸óã_mbích_mix_öput
(
sf
,

315 
•ecificBr
)

317 
	`as£π
 (
sf
>0);

319 
mbích_mix_öput_t
 
mmö
;

320 
mbích_ö£π_⁄ly_öput_t
 
mioö
;

321 
mioö
 = 
	`¸óã_mbích_ö£π_⁄ly_öput
(
sf
, 
•ecificBr
);

322 
mmö
.
b_id
 = 
mioö
.b_id;

323 
mmö
.
a_id
 = 
mioö
.a_id;

324 
mmö
.
bÆ™˚
 = 
mioö
.balance;

326  (
mmö
);

327 
	}
}

332 
EXIT_NAMESPACE
(
çcb
);

	@src/workload/tpcc/shore_tpcc_client.cpp

31 
	~"w‹klﬂd/çcc/sh‹e_çcc_˛õ¡.h
"

33 
ENTER_NAMESPACE
(
çcc
);

43 
	gba£löe_çcc_˛õ¡_t
::
	$ba£löe_çcc_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

44 
Sh‹eTPCCEnv
* 
ív
,

45 c⁄° 
MósuªmítTy≥
 
aTy≥
,

46 c⁄° 
åxid
,

47 c⁄° 
numOfTrxs
,

48 
¥o˚ss‹id_t
 
≠rsid
,

49 c⁄° 
sWH
, c⁄° 
qf
)

50 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

51 
	`_wh
(
sWH
), 
	$_qf
(
qf
)

53 
	`as£π
 (
ív
);

54 
	`as£π
 (
_wh
>=0 && 
_qf
>0);

57 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

58 
	`as£π
 (
_w‹kî
);

59 
	}
}

62 
	gba£löe_çcc_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

65 
°m≠
.
	`˛ór
();

68 
°m≠
[
XCT_MIX
] = "TPCC-Mix";

69 
°m≠
[
XCT_NEW_ORDER
] = "TPCC-NewOrder";

70 
°m≠
[
XCT_PAYMENT
] = "TPCC-Payment";

71 
°m≠
[
XCT_ORDER_STATUS
] = "TPCC-OrderStatus";

72 
°m≠
[
XCT_DELIVERY
] = "TPCC-Delivery";

73 
°m≠
[
XCT_STOCK_LEVEL
] = "TPCC-StockLevel";

75 
°m≠
[
XCT_LITTLE_MIX
] = "TPCC-LittleMix";

78 
°m≠
[
XCT_MBENCH_WH
] = "TPCC-MBench-WHs";

79 
°m≠
[
XCT_MBENCH_CUST
] = "TPCC-MBench-CUSTs";

81  (
°m≠
.
	`size
());

82 
	}
}

96 
w_rc_t
 
	gba£löe_çcc_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

99 
åx_ªsu…_tu∂e_t
 
©π
;

100 
boﬁ
 
bWake
 = 
Ál£
;

101 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

102 
©π
.
	`£t_nŸify
(
c
);

103 
	`TRACE
–
TRACE_TRX_FLOW
, "Sleeping\n");

104 
bWake
 = 
åue
;

108 
whid
 = 
_wh
;

109 i‡(
_wh
==0)

110 
whid
 = 
	`UR™d
(1,
_qf
);

113 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

114 
tid_t
 
©id
;

115 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
whid
);

118 
	`as£π
 (
_w‹kî
);

119 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

120  (
RCOK
);

121 
	}
}

125 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/shore_tpcc_env.cpp

31 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

32 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

34 
	~"w‹klﬂd/çcc/çcc_øndom.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

38 
ENTER_NAMESPACE
(
sh‹e
);

39 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
w¨ehou£
);

40 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
di°ri˘
);

41 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
°ock
);

42 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
‹dî_löe
);

43 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
cu°omî
);

44 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
hi°‹y
);

45 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
‹dî
);

46 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
√w_‹dî
);

47 
DEFINE_ROW_CACHE_TLS
(
çcc
, 
ôem
);

48 
EXIT_NAMESPACE
(
sh‹e
);

50 
ENTER_NAMESPACE
(
çcc
);

61 
	gSh‹eTPCCEnv
::
checkpoöãr_t
 : 
public
 
thªad_t


63 
Sh‹eTPCCEnv
* 
_ív
;

64 
checkpoöãr_t
(
Sh‹eTPCCEnv
* 
ív
)

65 : 
thªad_t
("TPC-C-Chk±"), 
_ív
(
ív
) { }

66 
vútuÆ
 
w‹k
();

70 ˛as†
	cSh‹eTPCCEnv
::
èbÀ_buûdî_t
 : 
public
 
thªad_t


72 
Sh‹eTPCCEnv
* 
_ív
;

73 
	m_°¨t
;

74 
	m_cou¡
;

75 * 
	m_cids
;

76 
	mpublic
:

77 
	$èbÀ_buûdî_t
(
Sh‹eTPCCEnv
* 
ív
, c⁄° 
id
, 
°¨t
, 
cou¡
, * 
cids
)

78 : 
	`thªad_t
(
	`c_°r
("LD-%d",
id
)),

79 
	`_ív
(
ív
), 
	`_°¨t
(
°¨t
), 
	`_cou¡
(
cou¡
), 
	$_cids
(
cids
) { }

80 
vútuÆ
 
	`w‹k
();

81 
	}
};

84 
	gSh‹eTPCCEnv
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t


86 
Sh‹eTPCCEnv
* 
_ív
;

87 
	g_sf
;

88 
èbÀ_¸ót‹_t
(
Sh‹eTPCCEnv
* 
ív
, 
sf
)

89 : 
thªad_t
("CR"), 
_ív
(
ív
), 
_sf
(
sf
) { }

90 
vútuÆ
 
w‹k
();

95 
	gSh‹eTPCCEnv
::
checkpoöãr_t
::
	$w‹k
()

97 
boﬁ
 vﬁ©ûe* 
lﬂded
 = &
_ív
->
_lﬂded
;

98 !*
lﬂded
) {

99 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

100 
i
=0; i < 60 && ! *
lﬂded
; i++) {

101 ::
	`¶ìp
(1);

104 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint - start\n");

105 
_ív
->
	`checkpoöt
();

106 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint -Énd\n");

108 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

109 
	}
}

112 
	gSh‹eTPCCEnv
::
èbÀ_¸ót‹_t
::
	$w‹k
()

115 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

116 
	`W_COERCE
(
_ív
->
_pw¨ehou£_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

117 
	`W_COERCE
(
_ív
->
_pdi°ri˘_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

118 
	`W_COERCE
(
_ív
->
_pcu°omî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

119 
	`W_COERCE
(
_ív
->
_phi°‹y_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

120 
	`W_COERCE
(
_ív
->
_≤ew_‹dî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

121 
	`W_COERCE
(
_ív
->
_p‹dî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

122 
	`W_COERCE
(
_ív
->
_p‹dî_löe_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

123 
	`W_COERCE
(
_ív
->
_pôem_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

124 
	`W_COERCE
(
_ív
->
_p°ock_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

125 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

129 
_ív
->
_pw¨ehou£_m™
->
	`ªgi°î_èbÀ_m™
();

130 
_ív
->
_pdi°ri˘_m™
->
	`ªgi°î_èbÀ_m™
();

131 
_ív
->
_pcu°omî_m™
->
	`ªgi°î_èbÀ_m™
();

132 
_ív
->
_phi°‹y_m™
->
	`ªgi°î_èbÀ_m™
();

133 
_ív
->
_≤ew_‹dî_m™
->
	`ªgi°î_èbÀ_m™
();

134 
_ív
->
_p‹dî_m™
->
	`ªgi°î_èbÀ_m™
();

135 
_ív
->
_p‹dî_löe_m™
->
	`ªgi°î_èbÀ_m™
();

136 
_ív
->
_pôem_m™
->
	`ªgi°î_èbÀ_m™
();

137 
_ív
->
_p°ock_m™
->
	`ªgi°î_èbÀ_m™
();

141 
p›uœã_ba£löe_öput_t
 
ö
 = {
_sf
};

142 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

143 
	`W_COERCE
(
_ív
->
	`x˘_p›uœã_ba£löe
(0, 
ö
));

145 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

146 
	`W_COERCE
(
_ív
->
	`_po°_öô_im∂
());

147 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

153 
i
=-1; i < 
_pcou¡
; i++) {

154 
a_id
 = 
i
*
_psize
;

155 
p›uœã_db_öput_t
 
	`ö
(
_sf
, 
a_id
);

156 
	`Ârötf
(
°dîr
, "P›uœtög %dá_id†°¨tög wôh %d\n", 
ACCOUNTS_CREATED_PER_POP_XCT
, 
a_id
);

157 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

158 
	`W_COERCE
(
_ív
->
	`x˘_p›uœã_db
(&
ö
, 
a_id
));

161 
	}
}

162 
	$gí_cid_¨øy
(* 
cid_¨øy
) {

163 
i
=0; i < 
ORDERS_PER_DIST
; i++)

164 
cid_¨øy
[
i
] = i+1;

165 
i
=0; i < 
ORDERS_PER_DIST
; i++) {

166 
°d
::
	`sw≠
(
cid_¨øy
[
i
], cid_¨øy[i+
	`UR™d
(0,
ORDERS_PER_DIST
-i-1)]);

169 
	}
}

172 
	gunôs_com∂ëed
 = 0;

174 
	gSh‹eTPCCEnv
::
èbÀ_buûdî_t
::
	$w‹k
()

176 
w_rc_t
 
e
 = 
RCOK
;

185 
cid_¨øy
[
ORDERS_PER_DIST
];

186 
	`gí_cid_¨øy
(
cid_¨øy
);

189 
i
=0 ; i < 
_cou¡
; i++) {

190 
_ív
->
	`gë_mósuª
(Ë!
MST_MEASURE
)

191 
	`u¶ìp
(10000);

193 
tid
 = 
_°¨t
 + 
i
;

195 
°¨t_di°
 = (
tid
 + 
UNIT_PER_DIST
 - 1)/UNIT_PER_DIST;

196 
íd_di°
 = (
tid
 + 
UNIT_PER_DIST
)/UNIT_PER_DIST;

197 
boﬁ
 
ovîœp
 = (
°¨t_di°
*
UNIT_PER_DIST
 < 
_°¨t
Ë|| (
íd_di°
*UNIT_PER_DIST >_°¨t+
_cou¡
);

198 *
cids
 = 
ovîœp
? 
_cids
 : 
cid_¨øy
+0;

199 
p›uœã_⁄e_unô_öput_t
 
ö
 = {
tid
, 
cids
};

200 
log_•a˚_√eded
 = 0;

201 
ªåy
:

202 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

204 #ifde‡
USE_SHORE_6


205 if(
log_•a˚_√eded
 > 0) {

207 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(10*
log_•a˚_√eded
/9));

210 
e
 = 
_ív
->
	`x˘_p›uœã_⁄e_unô
(
tid
, 
ö
);

212 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåy
,
_ív
);

214 
nvÆ
 = 
	`©omic_öc_64_nv
(&
unôs_com∂ëed
);

215 
soÁr
 = 
nvÆ
 / 
UNIT_PER_WH
;

216 if(
nvÆ
 % 
UNIT_PER_WH
 == 0) {

217 
	`Ârötf
(
°dîr
, "%lu\n", 
soÁr
);

220 
	`TRACE
–
TRACE_ALWAYS
,

222 
_°¨t
, _°¨t+
_cou¡
);

223 
	}
}

234 
	gSh‹eTPCCEnv
::
	$Sh‹eTPCCEnv
()

235 : 
	$Sh‹eEnv
()

237 
	}
}

239 
Sh‹eTPCCEnv
::~
	$Sh‹eTPCCEnv
()

241 
	}
}

254 
w_rc_t
 
Sh‹eTPCCEnv
::
	$lﬂd_schema
()

257 
_pw¨ehou£_desc
 = 
√w
 
	`w¨ehou£_t
(
	`gë_pd
());

258 
_pdi°ri˘_desc
 = 
√w
 
	`di°ri˘_t
(
	`gë_pd
());

259 
_pcu°omî_desc
 = 
√w
 
	`cu°omî_t
(
	`gë_pd
());

260 
_phi°‹y_desc
 = 
√w
 
	`hi°‹y_t
(
	`gë_pd
());

261 
_≤ew_‹dî_desc
 = 
√w
 
	`√w_‹dî_t
(
	`gë_pd
());

262 
_p‹dî_desc
 = 
√w
 
	`‹dî_t
(
	`gë_pd
());

263 
_p‹dî_löe_desc
 = 
√w
 
	`‹dî_löe_t
(
	`gë_pd
());

264 
_pôem_desc
 = 
√w
 
	`ôem_t
(
	`gë_pd
());

265 
_p°ock_desc
 = 
√w
 
	`°ock_t
(
	`gë_pd
());

269 
_pw¨ehou£_m™
 = 
√w
 
	`w¨ehou£_m™_im∂
(
_pw¨ehou£_desc
.
	`gë
());

270 
_pdi°ri˘_m™
 = 
√w
 
	`di°ri˘_m™_im∂
(
_pdi°ri˘_desc
.
	`gë
());

271 
_p°ock_m™
 = 
√w
 
	`°ock_m™_im∂
(
_p°ock_desc
.
	`gë
());

272 
_p‹dî_löe_m™
 = 
√w
 
	`‹dî_löe_m™_im∂
(
_p‹dî_löe_desc
.
	`gë
());

273 
_pcu°omî_m™
 = 
√w
 
	`cu°omî_m™_im∂
(
_pcu°omî_desc
.
	`gë
());

274 
_phi°‹y_m™
 = 
√w
 
	`hi°‹y_m™_im∂
(
_phi°‹y_desc
.
	`gë
());

275 
_p‹dî_m™
 = 
√w
 
	`‹dî_m™_im∂
(
_p‹dî_desc
.
	`gë
());

276 
_≤ew_‹dî_m™
 = 
√w
 
	`√w_‹dî_m™_im∂
(
_≤ew_‹dî_desc
.
	`gë
());

277 
_pôem_m™
 = 
√w
 
	`ôem_m™_im∂
(
_pôem_desc
.
	`gë
());

279  (
RCOK
);

280 
	}
}

293 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$lﬂd_™d_ªgi°î_fids
()

295 
	`W_DO
(
_pw¨ehou£_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

296 
	`W_DO
(
_pdi°ri˘_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

297 
	`W_DO
(
_p°ock_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

298 
	`W_DO
(
_p‹dî_löe_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

299 
	`W_DO
(
_pcu°omî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

300 
	`W_DO
(
_phi°‹y_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

301 
	`W_DO
(
_p‹dî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

302 
	`W_DO
(
_≤ew_‹dî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

303 
	`W_DO
(
_pôem_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

304  (
RCOK
);

305 
	}
}

317 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$upd©e_∑πôi⁄ög
()

322 
	`c⁄f
();

325 
uöt
 
mrbç¨ts
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("mrbt-partitions",10);

326 
möKeyVÆ
 = 1;

327 
maxKeyVÆ
 = 
	`gë_sf
()+1;

329 * 
möKey
 = (*)
	`mÆloc
(());

330 
	`mem£t
(
möKey
,0,());

331 
	`mem˝y
(
möKey
,&
möKeyVÆ
,());

333 * 
maxKey
 = (*)
	`mÆloc
(());

334 
	`mem£t
(
maxKey
,0,());

335 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

339 
_pw¨ehou£_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

340 
_pdi°ri˘_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

341 
_pcu°omî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

342 
_≤ew_‹dî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

343 
_p‹dî_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

344 
_p‹dî_löe_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

345 
_phi°‹y_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

346 
_p°ock_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

350 
maxKeyVÆ
 = 
ITEMS
 + 1;

351 
	`mem£t
(
maxKey
,0,());

352 
	`mem˝y
(
maxKey
,&
maxKeyVÆ
,());

353 
_pôem_desc
->
	`£t_∑πôi⁄ög
(
möKey
,(),
maxKey
,(),
mrbç¨ts
);

356 
	`‰ì
 (
möKey
);

357 
	`‰ì
 (
maxKey
);

359  (
RCOK
);

360 
	}
}

370 
	gSh‹eTPCCEnv
::
	$£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
)

372 
Sh‹eEnv
::
	`£t_skew
(
¨ó
, 
lﬂd
, 
°¨t_imbÆ™˚
);

374 
w_skewî
.
	`£t
(
¨ó
, 1, 
_sˇlög_Á˘‹
, 
lﬂd
);

375 
	}
}

386 
	gSh‹eTPCCEnv
::
	$°¨t_lﬂd_imbÆ™˚
()

388 if(
w_skewî
.
	`is_u£d
()) {

389 
_ch™ge_lﬂd
 = 
Ál£
;

391 
w_skewî
.
	`ª£t
(
_skew_ty≥
);

393 if(
_skew_ty≥
 !
SKEW_CHAOTIC
 || 
	`UR™d
(1,100) > 30) {

394 
_ch™ge_lﬂd
 = 
åue
;

396 
Sh‹eEnv
::
	`°¨t_lﬂd_imbÆ™˚
();

397 
	}
}

408 
	gSh‹eTPCCEnv
::
	$ª£t_skew
()

410 
Sh‹eEnv
::
	`ª£t_skew
();

411 
_ch™ge_lﬂd
 = 
Ál£
;

412 
w_skewî
.
	`˛ór
();

413 
	}
}

424 
	gSh‹eTPCCEnv
::
	$öfo
() const

426 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
_sˇlög_Á˘‹
);

427 
	`TRACE
–
TRACE_ALWAYS
, "W‹kî†(%d)\n", 
_w‹kî_˙t
);

429 
	}
}

441 
	gSh‹eTPCCEnv
::
	$°©i°ics
()

444 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

445 
Sh‹eTPCCTrxSèts
 
rvÆ
;

446 
rvÆ
 -=Ñval;

447 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

448 
rvÆ
 +*
ô
->
£c⁄d
;

450 
	`TRACE
–
TRACE_STATISTICS
, "NewOrder. Att (%d). Abt (%d). Dld (%d)\n",

451 
rvÆ
.
©ãm±ed
.
√w_‹dî
,

452 
rvÆ
.
Áûed
.
√w_‹dî
,

453 
rvÆ
.
dódlocked
.
√w_‹dî
);

455 
	`TRACE
–
TRACE_STATISTICS
, "Payment. Att (%d). Abt (%d). Dld (%d)\n",

456 
rvÆ
.
©ãm±ed
.
∑ymít
,

457 
rvÆ
.
Áûed
.
∑ymít
,

458 
rvÆ
.
dódlocked
.
∑ymít
);

460 
	`TRACE
–
TRACE_STATISTICS
, "OrderStatus. Att (%d). Abt (%d). Dld (%d)\n",

461 
rvÆ
.
©ãm±ed
.
‹dî_°©us
,

462 
rvÆ
.
Áûed
.
‹dî_°©us
,

463 
rvÆ
.
dódlocked
.
‹dî_°©us
);

465 
	`TRACE
–
TRACE_STATISTICS
, "Delivery. Att (%d). Abt (%d). Dld (%d)\n",

466 
rvÆ
.
©ãm±ed
.
dñivîy
,

467 
rvÆ
.
Áûed
.
dñivîy
,

468 
rvÆ
.
dódlocked
.
dñivîy
);

470 
	`TRACE
–
TRACE_STATISTICS
, "StockLevel. Att (%d). Abt (%d). Dld (%d)\n",

471 
rvÆ
.
©ãm±ed
.
°ock_Àvñ
,

472 
rvÆ
.
Áûed
.
°ock_Àvñ
,

473 
rvÆ
.
dódlocked
.
°ock_Àvñ
);

475 
	`TRACE
–
TRACE_STATISTICS
, "MBenchWh. Att (%d). Abt (%d). Dld (%d)\n",

476 
rvÆ
.
©ãm±ed
.
mbích_wh
,

477 
rvÆ
.
Áûed
.
mbích_wh
,

478 
rvÆ
.
dódlocked
.
mbích_wh
);

480 
	`TRACE
–
TRACE_STATISTICS
, "MBenchCust. Att (%d). Abt (%d). Dld (%d)\n",

481 
rvÆ
.
©ãm±ed
.
mbích_cu°
,

482 
rvÆ
.
Áûed
.
mbích_cu°
,

483 
rvÆ
.
dódlocked
.
mbích_cu°
);

485 
Sh‹eEnv
::
	`°©i°ics
();

488 
	}
}

500 
	gSh‹eTPCCEnv
::
	$°¨t
()

502  (
Sh‹eEnv
::
	`°¨t
());

503 
	}
}

505 
	gSh‹eTPCCEnv
::
	$°›
()

507  (
Sh‹eEnv
::
	`°›
());

508 
	}
}

529 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$lﬂdd©a
()

532 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

533 i‡(
_lﬂded
) {

534 
	`TRACE
–
TRACE_TRX_FLOW
,

536  (
RCOK
);

538 
	`CRITICAL_SECTION
(
sˇÀ_cs
, 
_sˇlög_muãx
);

539 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

541 
cid_¨øy
[
ORDERS_PER_DIST
];

542 
	`gí_cid_¨øy
(
cid_¨øy
);

546 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

547 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
, 
_sˇlög_Á˘‹
);

548 
tc
->
	`f‹k
();

549 
tc
->
	`joö
();

553 
gu¨d
<
checkpoöãr_t
> 
	`chk
(
√w
 
	`checkpoöãr_t
(
this
));

554 
chk
->
	`f‹k
();

557 
lﬂdîs_to_u£
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-loaders",10);

558 
¨øy_gu¨d_t
< 
gu¨d
<
èbÀ_buûdî_t
> > 
	`lﬂdîs
(
√w
 gu¨d<èbÀ_buûdî_t>[
lﬂdîs_to_u£
]);

559 
tŸÆ_unôs
 = 
_sˇlög_Á˘‹
*
UNIT_PER_WH
;

562 
unôs_≥r_thªad
 = (
tŸÆ_unôs
 + 
lﬂdîs_to_u£
-1)/loaders_to_use;

563 
divis‹
 = 
ORDERS_PER_DIST
/
ORDERS_PER_UNIT
;

564 
unôs_≥r_thªad
 = ((unôs_≥r_thªad + 
divis‹
-1)/divisor)*divisor;

566 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

567 
°¨t
 = 
i
*
unôs_≥r_thªad
;

568 
cou¡
 = (
°¨t
+
unôs_≥r_thªad
 > 
tŸÆ_unôs
)?Åotal_units-start : units_per_thread;

569 
lﬂdîs
[
i
] = 
√w
 
	`èbÀ_buûdî_t
(
this
, i, 
°¨t
, 
cou¡
, 
cid_¨øy
);

570 
lﬂdîs
[
i
]->
	`f‹k
();

573 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

574 
lﬂdîs
[
i
]->
	`joö
();

577 
time_t
 
t°›
 = 
	`time
(
NULL
);

580 
	`TRACE
–
TRACE_STATISTICS
, "Loading finished. %dÅableÜoaded in (%d) secs...\n",

581 
SHORE_TPCC_TABLES
, (
t°›
 - 
t°¨t
));

584 
_lﬂded
 = 
åue
;

585 
chk
->
	`joö
();

587  (
RCOK
);

588 
	}
}

602 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$check_c⁄si°ícy
()

604 
	`as£π
 (0);

605  (
RCOK
);

606 
	}
}

618 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$w¨mup
()

620  (
	`check_c⁄si°ícy
());

621 
	}
}

632 
	gSh‹eTPCCEnv
::
	$dump
()

634 
	`as£π
 (0);

644 
	}
}

647 
	gSh‹eTPCCEnv
::
	$c⁄f
()

650 
Sh‹eEnv
::
	`c⁄f
();

651 
	`upd_sf
();

652 
	`upd_w‹kî_˙t
();

654 
	}
}

671 
	gSh‹eTPCCEnv
::
	$po°_öô
()

673 
	`c⁄f
();

676 i‡(
	`gë_pd
(Ë=
PD_PADDED
) {

677 
	`TRACE
–
TRACE_ALWAYS
, "Checking for WHÑecordÖadding...\n");

679 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

680 
w_rc_t
 
rc
 = 
	`_po°_öô_im∂
();

681 if(
rc
.
	`is_îr‹
()) {

682 
˚º
 << "-> WHÖaddög faûed wôh: " << 
rc
 << 
ídl
;

683 
rc
 = 
	`db
()->
	`ab‹t_x˘
();

684  (
rc
.
	`îr_num
());

687 
	`TRACE
–
TRACE_ALWAYS
, "-> Done\n");

688 
rc
 = 
	`db
()->
	`commô_x˘
();

694 
	}
}

705 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$_po°_öô_im∂
()

707 #i‚de‡
CFG_HACK


708  (
RCOK
);

711 
	`TRACE
 (
TRACE_ALWAYS
, "Padding WAREHOUSES");

712 
ss_m
* 
db
 = 
this
->
	`db
();

715 
w¨ehou£_t
* 
wh
 = 
	`w¨ehou£_desc
();

716 
ödex_desc_t
* 
idx
 = 
wh
->
	`ödexes
();

717 
icou¡
 = 
wh
->
	`ödex_cou¡
();

718 
°id_t
 
wh_fid
 = 
wh
->
	`fid
();

721 
	`W_DO
(
db
->
	`lock
(
wh_fid
, 
EX
));

722 
i
=0; i < 
icou¡
; i++) {

723 
j
=0; j < 
idx
[
i
].
	`gë_∑πôi⁄_cou¡
(); j++)

724 
	`W_DO
(
db
->
	`lock
(
idx
[
i
].
	`fid
(
j
), 
EX
));

727 
gu¨d
<
©s_ch¨_t
> 
±s
 = 
√w
 
	`©s_ch¨_t
(
wh
->
	`maxsize
());

735 
boﬁ
 
eof
;

736 c⁄° 
PADDED_SIZE
 = 4096;

737 
¨øy_gu¨d_t
<> 
∑ddög
 = 
√w
 [
PADDED_SIZE
];

738 
°d
::
ve˘‹
<
rid_t
> 
hô_li°
;

740 
gu¨d
<
w¨ehou£_m™_im∂
::
èbÀ_ôî
> 
ôî
;

742 
w¨ehou£_m™_im∂
::
èbÀ_ôî
* 
tmp
;

743 
	`W_DO
(
	`w¨ehou£_m™
()->
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
tmp
));

744 
ôî
 = 
tmp
;

747 
cou¡
 = 0;

748 
w¨ehou£_m™_im∂
::
èbÀ_tu∂e
 
	`row
(
wh
);

749 
ªp_row_t
 
	`¨ï
(
±s
);

750 
psize
 = 
wh
->
	`maxsize
()+1;

752 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

754 
pö_i
* 
h™dÀ
 = 
ôî
->
	`curs‹
();

755 i‡(!
h™dÀ
) {

756 
	`TRACE
(
TRACE_ALWAYS
, " -> Róched EOF. Sórch com∂ëê(%d)\n", 
cou¡
);

761 
hsize
 = 
h™dÀ
->
	`hdr_size
();

762 
bsize
 = 
h™dÀ
->
	`body_size
();

763 i‡(
bsize
 =
psize
) {

764 
	`TRACE
(
TRACE_ALWAYS
, " -> FoundÖadded WHÑec‹d. St›pög sórch (%d)\n", 
cou¡
);

767 i‡(
bsize
 > 
psize
) {

769 
h™dÀ
->
	`åunˇã_ªc
(
bsize
 - 
psize
);

770 
	`Ârötf
(
°dîr
, "+");

774 
rid_t
 
√w_rid
;

775 
vec_t
 
	`hvec
(
h™dÀ
->
	`hdr
(), 
hsize
);

776 
vec_t
 
	`dvec
(
h™dÀ
->
	`body
(), 
bsize
);

777 
vec_t
 
	`pvec
(
∑ddög
, 
PADDED_SIZE
-
bsize
);

778 
	`W_DO
(
db
->
	`¸óã_ªc
(
wh_fid
, 
hvec
, 
PADDED_SIZE
, 
dvec
, 
√w_rid
));

779 
	`W_DO
(
db
->
	`≠≥nd_ªc
(
√w_rid
, 
pvec
));

781 i‡(
nŸ
 
h™dÀ
->
	`up_to_d©e
())

782 
h™dÀ
->
	`ªpö
();

785 
hô_li°
.
	`push_back
(
h™dÀ
->
	`rid
());

788 
vec_t
 
	`rvec
(&
row
.
_rid
, (
rid_t
));

789 
vec_t
 
	`ƒvec
(&
√w_rid
, (new_rid));

790 
i
=0; i < 
icou¡
; i++) {

791 
key_sz
 = 
	`w¨ehou£_m™
()->
	`f‹m©_key
(
idx
+
i
, &
row
, 
¨ï
);

792 
vec_t
 
	`kvec
(
¨ï
.
_de°
, 
key_sz
);

799 
≤um
 = 
_pw¨ehou£_m™
->
	`gë_≤um
(&
idx
[
i
], &
row
);

800 
°id_t
 
fid
 = 
idx
[
i
].
	`fid
(
≤um
);

802 if(
idx
[
i
].
	`is_mr
()) {

803 
	`W_DO
(
db
->
	`de°roy_mr_assoc
(
fid
, 
kvec
, 
rvec
));

805 
ñ_fûÀr
 
ef
;

806 
ef
.
_ñ
.
	`put
(
ƒvec
);

807 
	`W_DO
(
db
->
	`¸óã_mr_assoc
(
fid
, 
kvec
, 
ef
));

809 
	`W_DO
(
db
->
	`de°roy_assoc
(
fid
, 
kvec
, 
rvec
));

811 
	`W_DO
(
db
->
	`¸óã_assoc
(
fid
, 
kvec
, 
ƒvec
));

815 
	`Ârötf
(
°dîr
, ".");

819 
cou¡
++;

820 
	`W_DO
(
ôî
->
	`√xt
(
db
, 
eof
, 
row
));

822 
	`Ârötf
(
°dîr
, "\n");

828 
hlsize
 = 
hô_li°
.
	`size
();

829 
	`TRACE
(
TRACE_ALWAYS
, "-> Dñëög (%dËﬁd u≈addedÑec‹ds\n", 
hlsize
);

830 
i
=0; i < 
hlsize
; i++) {

831 
	`W_DO
(
db
->
	`de°roy_ªc
(
hô_li°
[
i
]));

834  (
RCOK
);

835 
	}
}

846 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$db_¥öt
(
löes
)

849 
	`as£π
 (
_pssm
);

850 
	`as£π
 (
_öôülized
);

851 
	`as£π
 (
_lﬂded
);

854 
	`W_DO
(
_pw¨ehou£_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

855 
	`W_DO
(
_pdi°ri˘_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

856 
	`W_DO
(
_p°ock_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

857 
	`W_DO
(
_p‹dî_löe_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

858 
	`W_DO
(
_pcu°omî_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

859 
	`W_DO
(
_phi°‹y_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

860 
	`W_DO
(
_p‹dî_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

861 
	`W_DO
(
_≤ew_‹dî_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

862 
	`W_DO
(
_pôem_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

864  (
RCOK
);

865 
	}
}

876 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$db_„tch
()

879 
	`as£π
 (
_pssm
);

880 
	`as£π
 (
_öôülized
);

881 
	`as£π
 (
_lﬂded
);

884 
	`W_DO
(
_pw¨ehou£_m™
->
	`„tch_èbÀ
(
_pssm
));

885 
	`W_DO
(
_pdi°ri˘_m™
->
	`„tch_èbÀ
(
_pssm
));

886 
	`W_DO
(
_p°ock_m™
->
	`„tch_èbÀ
(
_pssm
));

887 
	`W_DO
(
_p‹dî_löe_m™
->
	`„tch_èbÀ
(
_pssm
));

888 
	`W_DO
(
_pcu°omî_m™
->
	`„tch_èbÀ
(
_pssm
));

889 
	`W_DO
(
_phi°‹y_m™
->
	`„tch_èbÀ
(
_pssm
));

890 
	`W_DO
(
_p‹dî_m™
->
	`„tch_èbÀ
(
_pssm
));

891 
	`W_DO
(
_≤ew_‹dî_m™
->
	`„tch_èbÀ
(
_pssm
));

892 
	`W_DO
(
_pôem_m™
->
	`„tch_èbÀ
(
_pssm
));

894  (
RCOK
);

895 
	}
}

898 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/shore_tpcc_schema.cpp

32 
	~"w‹klﬂd/çcc/sh‹e_çcc_schema.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

36 
ENTER_NAMESPACE
(
çcc
);

83 
	gw¨ehou£_t
::
	$w¨ehou£_t
(c⁄° 
uöt4_t
& 
pd
) :

84 
	`èbÀ_desc_t
("WAREHOUSE", 
TPCC_WAREHOUSE_FCOUNT
, 
pd
)

87 
_desc
[0].
	`£tup
(
SQL_INT
, "W_ID");

88 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "W_NAME", 10);

89 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "W_STREET1", 20);

90 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "W_STREET2", 20);

91 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "W_CITY", 20);

92 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "W_STATE", 2);

93 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "W_ZIP", 9);

94 
_desc
[7].
	`£tup
(
SQL_FLOAT
, "W_TAX");

95 
_desc
[8].
	`£tup
(
SQL_FLOAT
, "W_YTD");

98 
uöt
 
keys
[1] = { 0 };

99 
	`¸óã_¥im¨y_idx_desc
("W_IDX", 0, 
keys
, 1, 
pd
);

100 
	}
}

104 
	gdi°ri˘_t
::
	$di°ri˘_t
(c⁄° 
uöt4_t
& 
pd
) :

105 
	`èbÀ_desc_t
("DISTRICT", 
TPCC_DISTRICT_FCOUNT
, 
pd
)

108 
_desc
[0].
	`£tup
(
SQL_INT
, "D_ID");

109 
_desc
[1].
	`£tup
(
SQL_INT
, "D_W_ID");

110 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "D_NAME", 10);

111 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "D_STREET1", 20);

112 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "D_STREET2", 20);

113 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "D_CITY", 20);

114 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "D_STATE", 2);

115 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "D_ZIP", 9);

116 
_desc
[8].
	`£tup
(
SQL_FLOAT
, "D_TAX");

117 
_desc
[9].
	`£tup
(
SQL_FLOAT
, "D_YTD");

118 
_desc
[10].
	`£tup
(
SQL_INT
, "D_NEXT_O_ID");

124 
uöt
 
keys
[2] = { 1, 0 };

126 
	`¸óã_¥im¨y_idx_desc
("D_IDX", 0, 
keys
, 2, 
pd
);

127 
	}
}

131 
	gcu°omî_t
::
	$cu°omî_t
(c⁄° 
uöt4_t
& 
pd
) :

132 
	`èbÀ_desc_t
("CUSTOMER", 
TPCC_CUSTOMER_FCOUNT
, 
pd
)

135 
_desc
[0].
	`£tup
(
SQL_INT
, "C_ID");

136 
_desc
[1].
	`£tup
(
SQL_INT
, "C_D_ID");

137 
_desc
[2].
	`£tup
(
SQL_INT
, "C_W_ID");

139 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "C_FIRST", 16);

140 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "C_MIDDLE", 2);

141 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "C_LAST", 16);

143 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "C_STREET1", 20);

144 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "C_STREET2", 20);

145 
_desc
[8].
	`£tup
(
SQL_FIXCHAR
, "C_CITY", 20);

146 
_desc
[9].
	`£tup
(
SQL_FIXCHAR
, "C_STATE", 2);

147 
_desc
[10].
	`£tup
(
SQL_FIXCHAR
, "C_ZIP", 9);

148 
_desc
[11].
	`£tup
(
SQL_FIXCHAR
, "C_PHONE", 16);

149 
_desc
[12].
	`£tup
(
SQL_FLOAT
, "C_SINCE");

150 
_desc
[13].
	`£tup
(
SQL_FIXCHAR
, "C_CREDIT", 2);

151 
_desc
[14].
	`£tup
(
SQL_FLOAT
, "C_CREDIT_LIM");

152 
_desc
[15].
	`£tup
(
SQL_FLOAT
, "C_DISCOUNT");

153 
_desc
[16].
	`£tup
(
SQL_FLOAT
, "C_BALANCE");

154 
_desc
[17].
	`£tup
(
SQL_FLOAT
, "C_YTD_PAYMENT");

155 
_desc
[18].
	`£tup
(
SQL_FLOAT
, "C_LAST_PAYMENT");

156 
_desc
[19].
	`£tup
(
SQL_INT
, "C_PAYMENT_CNT");

157 
_desc
[20].
	`£tup
(
SQL_FIXCHAR
, "C_DATA_1", 250);

158 
_desc
[21].
	`£tup
(
SQL_FIXCHAR
, "C_DATA_2", 250);

162 
uöt
 
keys1
[3] = {2, 1, 0 };

163 
	`¸óã_¥im¨y_idx_desc
("C_IDX", 0, 
keys1
, 3, 
pd
);

167 
uöt
 
keys2
[5] = {2, 1, 5, 3, 0};

168 
	`¸óã_ödex_desc
("C_NAME_IDX", 0, 
keys2
, 5, 
Ál£
, fÆ£, 
pd
);

169 
	}
}

173 
	ghi°‹y_t
::
	$hi°‹y_t
(c⁄° 
uöt4_t
& 
pd
) :

174 
	`èbÀ_desc_t
("HISTORY", 
TPCC_HISTORY_FCOUNT
, 
pd
)

177 
_desc
[0].
	`£tup
(
SQL_INT
, "H_C_ID");

178 
_desc
[1].
	`£tup
(
SQL_INT
, "H_C_D_ID");

179 
_desc
[2].
	`£tup
(
SQL_INT
, "H_C_W_ID");

180 
_desc
[3].
	`£tup
(
SQL_INT
, "H_D_ID");

181 
_desc
[4].
	`£tup
(
SQL_INT
, "H_W_ID");

182 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "H_DATE");

183 
_desc
[6].
	`£tup
(
SQL_FLOAT
, "H_AMOUNT");

184 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "H_DATA", 25);

187 
	}
}

191 
	g√w_‹dî_t
::
	$√w_‹dî_t
(c⁄° 
uöt4_t
& 
pd
) :

192 
	`èbÀ_desc_t
("NEW_ORDER", 
TPCC_NEW_ORDER_FCOUNT
, 
pd
)

195 
_desc
[0].
	`£tup
(
SQL_INT
, "NO_O_ID");

196 
_desc
[1].
	`£tup
(
SQL_INT
, "NO_D_ID");

197 
_desc
[2].
	`£tup
(
SQL_INT
, "NO_W_ID");

200 
uöt
 
keys
[3] = {2, 1, 0};

201 
	`¸óã_¥im¨y_idx_desc
("NO_IDX", 0, 
keys
, 3, 
pd
);

202 
	}
}

206 
	g‹dî_t
::
	$‹dî_t
(c⁄° 
uöt4_t
& 
pd
) :

207 
	`èbÀ_desc_t
("ORDER", 
TPCC_ORDER_FCOUNT
, 
pd
)

210 
_desc
[0].
	`£tup
(
SQL_INT
, "O_ID");

211 
_desc
[1].
	`£tup
(
SQL_INT
, "O_C_ID");

212 
_desc
[2].
	`£tup
(
SQL_INT
, "O_D_ID");

213 
_desc
[3].
	`£tup
(
SQL_INT
, "O_W_ID");

214 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "O_ENTRY_D");

215 
_desc
[5].
	`£tup
(
SQL_INT
, "O_CARRIER_ID");

216 
_desc
[6].
	`£tup
(
SQL_INT
, "O_OL_CNT");

217 
_desc
[7].
	`£tup
(
SQL_INT
, "O_ALL_LOCAL");

221 
uöt
 
keys1
[3] = {3, 2, 0};

222 
	`¸óã_¥im¨y_idx_desc
("O_IDX", 0, 
keys1
, 3, 
pd
);

225 
uöt
 
keys2
[4] = {3, 2, 1, 0};

226 
	`¸óã_ödex_desc
("O_CUST_IDX", 0, 
keys2
, 4, 
åue
, 
Ál£
, 
pd
);

227 
	}
}

231 
	g‹dî_löe_t
::
	$‹dî_löe_t
(c⁄° 
uöt4_t
& 
pd
) :

232 
	`èbÀ_desc_t
("ORDERLINE", 
TPCC_ORDER_LINE_FCOUNT
, 
pd
)

235 
_desc
[0].
	`£tup
(
SQL_INT
, "OL_O_ID");

236 
_desc
[1].
	`£tup
(
SQL_INT
, "OL_D_ID");

237 
_desc
[2].
	`£tup
(
SQL_INT
, "OL_W_ID");

238 
_desc
[3].
	`£tup
(
SQL_INT
, "OL_NUMBER");

239 
_desc
[4].
	`£tup
(
SQL_INT
, "OL_I_ID");

240 
_desc
[5].
	`£tup
(
SQL_INT
, "OL_SUPPLY_W_ID");

241 
_desc
[6].
	`£tup
(
SQL_FLOAT
, "OL_DELIVERY_D");

242 
_desc
[7].
	`£tup
(
SQL_INT
, "OL_QUANTITY");

243 
_desc
[8].
	`£tup
(
SQL_INT
, "OL_AMOUNT");

244 
_desc
[9].
	`£tup
(
SQL_FIXCHAR
, "OL_DIST_INFO", 25);

247 
uöt
 
keys
[4] = {2, 1, 0, 3};

248 
numIdxP¨tôi⁄s
 = 0;

249 #ifde‡
CFG_HACK


251 
numIdxP¨tôi⁄s
 = 10;

253 
	`¸óã_¥im¨y_idx_desc
("OL_IDX", 
numIdxP¨tôi⁄s
, 
keys
, 4, 
pd
);

254 
	}
}

258 
	gôem_t
::
	$ôem_t
(c⁄° 
uöt4_t
& 
pd
) :

259 
	`èbÀ_desc_t
("ITEM", 
TPCC_ITEM_FCOUNT
, 
pd
)

262 
_desc
[0].
	`£tup
(
SQL_INT
, "I_ID");

263 
_desc
[1].
	`£tup
(
SQL_INT
, "I_IM_ID");

264 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "I_NAME", 24);

265 
_desc
[3].
	`£tup
(
SQL_INT
, "I_PRICE");

266 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "I_DATA", 50);

269 
uöt
 
keys
[1] = {0};

270 
	`¸óã_¥im¨y_idx_desc
("I_IDX", 0, 
keys
, 1, 
pd
);

271 
	}
}

275 
	g°ock_t
::
	$°ock_t
(c⁄° 
uöt4_t
& 
pd
) :

276 
	`èbÀ_desc_t
("STOCK", 
TPCC_STOCK_FCOUNT
, 
pd
)

279 
_desc
[0].
	`£tup
(
SQL_INT
, "S_I_ID");

280 
_desc
[1].
	`£tup
(
SQL_INT
, "S_W_ID");

281 
_desc
[2].
	`£tup
(
SQL_INT
, "S_REMOTE_CNT");

282 
_desc
[3].
	`£tup
(
SQL_INT
, "S_QUANTITY");

283 
_desc
[4].
	`£tup
(
SQL_INT
, "S_ORDER_CNT");

284 
_desc
[5].
	`£tup
(
SQL_INT
, "S_YTD");

285 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "S_DIST0", 24);

286 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "S_DIST1", 24);

287 
_desc
[8].
	`£tup
(
SQL_FIXCHAR
, "S_DIST2", 24);

288 
_desc
[9].
	`£tup
(
SQL_FIXCHAR
, "S_DIST3", 24);

289 
_desc
[10].
	`£tup
(
SQL_FIXCHAR
, "S_DIST4", 24);

290 
_desc
[11].
	`£tup
(
SQL_FIXCHAR
, "S_DIST5", 24);

291 
_desc
[12].
	`£tup
(
SQL_FIXCHAR
, "S_DIST6", 24);

292 
_desc
[13].
	`£tup
(
SQL_FIXCHAR
, "S_DIST7", 24);

293 
_desc
[14].
	`£tup
(
SQL_FIXCHAR
, "S_DIST8", 24);

294 
_desc
[15].
	`£tup
(
SQL_FIXCHAR
, "S_DIST9", 24);

295 
_desc
[16].
	`£tup
(
SQL_FIXCHAR
, "S_DATA", 50);

298 
uöt
 
keys
[2] = { 1, 0 };

299 
	`¸óã_¥im¨y_idx_desc
("S_IDX", 0, 
keys
, 2, 
pd
);

300 
	}
}

303 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/shore_tpcc_schema_man.cpp

33 
	~"w‹klﬂd/çcc/sh‹e_çcc_schema_m™.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

38 
ENTER_NAMESPACE
(
çcc
);

54 
w_rc_t


55 
	gw¨ehou£_m™_im∂
::
	$wh_ödex_¥obe
(
ss_m
* 
db
,

56 
w¨ehou£_tu∂e
* 
±u∂e
,

57 c⁄° 
w_id
)

59 
	`as£π
 (
±u∂e
);

60 
±u∂e
->
	`£t_vÆue
(0, 
w_id
);

61  (
	`ödex_¥obe_by_«me
(
db
, "W_IDX", 
±u∂e
));

62 
	}
}

65 
w_rc_t


66 
	gw¨ehou£_m™_im∂
::
	$wh_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

67 
w¨ehou£_tu∂e
* 
±u∂e
,

68 c⁄° 
w_id
)

70 
	`as£π
 (
±u∂e
);

71 
±u∂e
->
	`£t_vÆue
(0, 
w_id
);

72  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "W_IDX", 
±u∂e
));

73 
	}
}

76 
w_rc_t


77 
	gw¨ehou£_m™_im∂
::
	$wh_ödex_¥obe_∆
(
ss_m
* 
db
,

78 
w¨ehou£_tu∂e
* 
±u∂e
,

79 c⁄° 
w_id
)

81 
	`as£π
 (
±u∂e
);

82 
±u∂e
->
	`£t_vÆue
(0, 
w_id
);

83  (
	`ödex_¥obe_∆_by_«me
(
db
, "W_IDX", 
±u∂e
));

84 
	}
}

87 
w_rc_t


88 
	gw¨ehou£_m™_im∂
::
	$wh_upd©e_ytd
(
ss_m
* 
db
,

89 
w¨ehou£_tu∂e
* 
±u∂e
,

90 c⁄° 
amou¡
,

91 
lock_mode_t
 
lm
)

95 
	`as£π
 (
±u∂e
);

96 
	`as£π
 (
±u∂e
->
	`is_rid_vÆid
());

98 
ytd
;

99 
±u∂e
->
	`gë_vÆue
(8, 
ytd
);

100 
ytd
 +
amou¡
;

101 
±u∂e
->
	`£t_vÆue
(8, 
ytd
);

102 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

103  (
RCOK
);

104 
	}
}

107 
w_rc_t


108 
	gw¨ehou£_m™_im∂
::
	$wh_upd©e_ytd_∆
(
ss_m
* 
db
,

109 
w¨ehou£_tu∂e
* 
±u∂e
,

110 c⁄° 
amou¡
)

112  (
	`wh_upd©e_ytd
(
db
,
±u∂e
,
amou¡
,
NL
));

113 
	}
}

122 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_ödex_¥obe
(
ss_m
* 
db
,

123 
di°ri˘_tu∂e
* 
±u∂e
,

124 c⁄° 
w_id
,

125 c⁄° 
d_id
)

127 
	`as£π
 (
±u∂e
);

128 
±u∂e
->
	`£t_vÆue
(0, 
d_id
);

129 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

130  (
	`ödex_¥obe_by_«me
(
db
, "D_IDX", 
±u∂e
));

131 
	}
}

133 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

134 
di°ri˘_tu∂e
* 
±u∂e
,

135 c⁄° 
w_id
,

136 c⁄° 
d_id
)

138 
	`as£π
 (
±u∂e
);

139 
±u∂e
->
	`£t_vÆue
(0, 
d_id
);

140 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

141  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "D_IDX", 
±u∂e
));

142 
	}
}

144 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_ödex_¥obe_∆
(
ss_m
* 
db
,

145 
di°ri˘_tu∂e
* 
±u∂e
,

146 c⁄° 
w_id
,

147 c⁄° 
d_id
)

149 
	`as£π
 (
±u∂e
);

150 
±u∂e
->
	`£t_vÆue
(0, 
d_id
);

151 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

152  (
	`ödex_¥obe_∆_by_«me
(
db
, "D_IDX", 
±u∂e
));

153 
	}
}

155 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_upd©e_ytd
(
ss_m
* 
db
,

156 
di°ri˘_tu∂e
* 
±u∂e
,

157 c⁄° 
amou¡
,

158 
lock_mode_t
 
lm
)

162 
	`as£π
 (
±u∂e
);

163 
	`as£π
 (
±u∂e
->
	`is_rid_vÆid
());

165 
d_ytd
;

166 
±u∂e
->
	`gë_vÆue
(9, 
d_ytd
);

167 
d_ytd
 +
amou¡
;

168 
±u∂e
->
	`£t_vÆue
(9, 
d_ytd
);

169 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

170  (
RCOK
);

171 
	}
}

173 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_upd©e_ytd_∆
(
ss_m
* 
db
,

174 
di°ri˘_tu∂e
* 
±u∂e
,

175 c⁄° 
amou¡
)

177  (
	`di°_upd©e_ytd
(
db
,
±u∂e
,
amou¡
,
NL
));

178 
	}
}

180 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_upd©e_√xt_o_id
(
ss_m
* 
db
,

181 
di°ri˘_tu∂e
* 
±u∂e
,

182 c⁄° 
√xt_o_id
,

183 
lock_mode_t
 
lm
)

187 
	`as£π
 (
±u∂e
);

188 
	`as£π
 (
±u∂e
->
	`is_rid_vÆid
());

190 
±u∂e
->
	`£t_vÆue
(10, 
√xt_o_id
);

191  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

192 
	}
}

194 
w_rc_t
 
	gdi°ri˘_m™_im∂
::
	$di°_upd©e_√xt_o_id_∆
(
ss_m
* 
db
,

195 
di°ri˘_tu∂e
* 
±u∂e
,

196 c⁄° 
√xt_o_id
)

198  (
	`di°_upd©e_√xt_o_id
(
db
,
±u∂e
,
√xt_o_id
,
NL
));

199 
	}
}

208 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_gë_ôî_by_ödex
(
ss_m
* 
db
,

209 
cu°omî_ödex_ôî
* &
ôî
,

210 
cu°omî_tu∂e
* 
±u∂e
,

211 
ªp_row_t
 &
ª∂ow
,

212 
ªp_row_t
 &
ªphigh
,

213 c⁄° 
w_id
,

214 c⁄° 
d_id
,

215 c⁄° * 
c_œ°
,

216 
lock_mode_t
 
Æm
,

217 
boﬁ
 
√ed_tu∂e
)

219 
	`as£π
 (
±u∂e
);

222 
	`as£π
 (
_±abÀ
);

223 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("C_NAME_IDX");

224 
	`as£π
 (
pödex
);

229 
±u∂e
->
	`£t_vÆue
(0, 0);

230 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

231 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

232 
±u∂e
->
	`£t_vÆue
(3, "");

233 
±u∂e
->
	`£t_vÆue
(5, 
c_œ°
);

235 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

236 
	`as£π
 (
ª∂ow
.
_de°
);

238 
ãmp
[2];

239 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

240 
ãmp
[1] = '\0';

241 
±u∂e
->
	`£t_vÆue
(3, 
ãmp
);

243 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

244 
	`as£π
 (
ªphigh
.
_de°
);

247 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

248 
Æm
, 
√ed_tu∂e
,

249 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

250 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

251  (
RCOK
);

252 
	}
}

255 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

256 
cu°omî_ödex_ôî
* &
ôî
,

257 
cu°omî_tu∂e
* 
±u∂e
,

258 
ªp_row_t
 &
ª∂ow
,

259 
ªp_row_t
 &
ªphigh
,

260 c⁄° 
w_id
,

261 c⁄° 
d_id
,

262 c⁄° * 
c_œ°
,

263 
boﬁ
 
√ed_tu∂e
)

265  (
	`cu°_gë_ôî_by_ödex
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,
w_id
,
d_id
,
c_œ°
,
NL
,
√ed_tu∂e
));

266 
	}
}

269 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_ödex_¥obe
(
ss_m
* 
db
,

270 
cu°omî_tu∂e
* 
±u∂e
,

271 c⁄° 
w_id
,

272 c⁄° 
d_id
,

273 c⁄° 
c_id
)

275 
	`as£π
 (
±u∂e
);

276  (
	`cu°_ödex_¥obe_by_«me
(
db
, "C_IDX", 
±u∂e
, 
w_id
, 
d_id
, 
c_id
));

277 
	}
}

279 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_ödex_¥obe_by_«me
(
ss_m
* 
db
,

280 c⁄° * 
idx_«me
,

281 
cu°omî_tu∂e
* 
±u∂e
,

282 c⁄° 
w_id
,

283 c⁄° 
d_id
,

284 c⁄° 
c_id
)

286 
	`as£π
 (
idx_«me
);

287 
±u∂e
->
	`£t_vÆue
(0, 
c_id
);

288 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

289 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

290  (
	`ödex_¥obe_by_«me
(
db
, 
idx_«me
, 
±u∂e
));

291 
	}
}

293 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_ödex_¥obe_f‹upd©e
(
ss_m
 * 
db
,

294 
cu°omî_tu∂e
* 
±u∂e
,

295 c⁄° 
w_id
,

296 c⁄° 
d_id
,

297 c⁄° 
c_id
)

299 
	`as£π
 (
±u∂e
);

300 
±u∂e
->
	`£t_vÆue
(0, 
c_id
);

301 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

302 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

303  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "C_IDX", 
±u∂e
));

304 
	}
}

306 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_ödex_¥obe_∆
(
ss_m
 * 
db
,

307 
cu°omî_tu∂e
* 
±u∂e
,

308 c⁄° 
w_id
,

309 c⁄° 
d_id
,

310 c⁄° 
c_id
)

312 
	`as£π
 (
±u∂e
);

313 
±u∂e
->
	`£t_vÆue
(0, 
c_id
);

314 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

315 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

316  (
	`ödex_¥obe_∆_by_«me
(
db
, "C_IDX", 
±u∂e
));

317 
	}
}

319 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_upd©e_tu∂e
(
ss_m
* 
db
,

320 
cu°omî_tu∂e
* 
±u∂e
,

321 c⁄° 
çcc_cu°omî_tu∂e
& 
acu°omî
,

322 c⁄° * 
ad©a1
,

323 c⁄° * 
ad©a2
,

324 
lock_mode_t
 
lm
)

326 
	`as£π
 (
±u∂e
);

327 
±u∂e
->
	`£t_vÆue
(16, 
acu°omî
.
C_BALANCE
);

328 
±u∂e
->
	`£t_vÆue
(17, 
acu°omî
.
C_YTD_PAYMENT
);

329 
±u∂e
->
	`£t_vÆue
(19, 
acu°omî
.
C_PAYMENT_CNT
);

331 i‡(
ad©a1
)

332 
±u∂e
->
	`£t_vÆue
(20, 
ad©a1
);

334 i‡(
ad©a2
)

335 
±u∂e
->
	`£t_vÆue
(21, 
ad©a2
);

337  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

338 
	}
}

341 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_upd©e_tu∂e_∆
(
ss_m
* 
db
,

342 
cu°omî_tu∂e
* 
±u∂e
,

343 c⁄° 
çcc_cu°omî_tu∂e
& 
acu°omî
,

344 c⁄° * 
ad©a1
,

345 c⁄° * 
ad©a2
)

347  (
	`cu°_upd©e_tu∂e
(
db
,
±u∂e
,
acu°omî
,
ad©a1
,
ad©a2
,
NL
));

348 
	}
}

351 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_upd©e_discou¡_bÆ™˚
(
ss_m
* 
db
,

352 
cu°omî_tu∂e
* 
±u∂e
,

353 c⁄° 
decimÆ
 
discou¡
,

354 c⁄° 
decimÆ
 
bÆ™˚
,

355 
lock_mode_t
 
lm
)

357 
	`as£π
 (
±u∂e
);

358 
	`as£π
 (
discou¡
>=0);

359 
±u∂e
->
	`£t_vÆue
(15, 
discou¡
);

360 
±u∂e
->
	`£t_vÆue
(16, 
bÆ™˚
);

361  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

362 
	}
}

364 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$cu°_upd©e_discou¡_bÆ™˚_∆
(
ss_m
* 
db
,

365 
cu°omî_tu∂e
* 
±u∂e
,

366 c⁄° 
decimÆ
 
discou¡
,

367 c⁄° 
decimÆ
 
bÆ™˚
)

369  (
	`cu°_upd©e_discou¡_bÆ™˚
(
db
,
±u∂e
,
discou¡
,
bÆ™˚
,
NL
));

370 
	}
}

379 
w_rc_t
 
	g√w_‹dî_m™_im∂
::
	$no_gë_ôî_by_ödex
(
ss_m
* 
db
,

380 
√w_‹dî_ödex_ôî
* &
ôî
,

381 
√w_‹dî_tu∂e
* 
±u∂e
,

382 
ªp_row_t
 &
ª∂ow
,

383 
ªp_row_t
 &
ªphigh
,

384 c⁄° 
w_id
,

385 c⁄° 
d_id
,

386 
lock_mode_t
 
Æm
,

387 
boﬁ
 
√ed_tu∂e
)

389 
	`as£π
 (
±u∂e
);

392 
	`as£π
 (
_±abÀ
);

393 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("NO_IDX");

394 
	`as£π
 (
pödex
);

397 
±u∂e
->
	`£t_vÆue
(0, 0);

398 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

399 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

401 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

402 
	`as£π
 (
ª∂ow
.
_de°
);

405 
±u∂e
->
	`£t_vÆue
(1, 
d_id
+1);

407 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

408 
	`as£π
 (
ªphigh
.
_de°
);

411 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

412 
Æm
, 
√ed_tu∂e
,

413 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

414 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

415  (
RCOK
);

416 
	}
}

419 
w_rc_t
 
	g√w_‹dî_m™_im∂
::
	$no_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

420 
√w_‹dî_ödex_ôî
* &
ôî
,

421 
√w_‹dî_tu∂e
* 
±u∂e
,

422 
ªp_row_t
 &
ª∂ow
,

423 
ªp_row_t
 &
ªphigh
,

424 c⁄° 
w_id
,

425 c⁄° 
d_id
,

426 
boﬁ
 
√ed_tu∂e
)

428  (
	`no_gë_ôî_by_ödex
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,
w_id
,
d_id
,
NL
,
√ed_tu∂e
));

429 
	}
}

432 
w_rc_t
 
	g√w_‹dî_m™_im∂
::
	$no_dñëe_by_ödex
(
ss_m
* 
db
,

433 
√w_‹dî_tu∂e
* 
±u∂e
,

434 c⁄° 
w_id
,

435 c⁄° 
d_id
,

436 c⁄° 
o_id
)

438 
	`as£π
 (
±u∂e
);

443 
±u∂e
->
	`£t_vÆue
(0, 
o_id
);

444 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

445 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

447 
	`W_DO
(
	`dñëe_tu∂e
(
db
, 
±u∂e
));

449  (
RCOK
);

450 
	}
}

452 
w_rc_t
 
	g√w_‹dî_m™_im∂
::
	$no_dñëe_by_ödex_∆
(
ss_m
* 
db
,

453 
√w_‹dî_tu∂e
* 
±u∂e
,

454 c⁄° 
w_id
,

455 c⁄° 
d_id
,

456 c⁄° 
o_id
)

460 
	`as£π
 (
±u∂e
);

465 
±u∂e
->
	`£t_vÆue
(0, 
o_id
);

466 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

467 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

469 
	`W_DO
(
	`dñëe_tu∂e
(
db
, 
±u∂e
, 
NL
));

471  (
RCOK
);

472 
	}
}

481 
w_rc_t
 
	g‹dî_m™_im∂
::
	$‹d_gë_ôî_by_ödex
(
ss_m
* 
db
,

482 
‹dî_ödex_ôî
* &
ôî
,

483 
‹dî_tu∂e
* 
±u∂e
,

484 
ªp_row_t
 &
ª∂ow
,

485 
ªp_row_t
 &
ªphigh
,

486 c⁄° 
w_id
,

487 c⁄° 
d_id
,

488 c⁄° 
c_id
,

489 
lock_mode_t
 
Æm
,

490 
boﬁ
 
√ed_tu∂e
)

492 
	`as£π
 (
±u∂e
);

495 
	`as£π
 (
_±abÀ
);

496 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("O_CUST_IDX");

497 
	`as£π
 (
pödex
);

500 
±u∂e
->
	`£t_vÆue
(0, 0);

501 
±u∂e
->
	`£t_vÆue
(1, 
c_id
);

502 
±u∂e
->
	`£t_vÆue
(2, 
d_id
);

503 
±u∂e
->
	`£t_vÆue
(3, 
w_id
);

505 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

506 
	`as£π
 (
ª∂ow
.
_de°
);

509 
±u∂e
->
	`£t_vÆue
(1, 
c_id
+1);

511 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

512 
	`as£π
 (
ªphigh
.
_de°
);

514 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

515 
Æm
, 
√ed_tu∂e
,

516 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

517 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

518  (
RCOK
);

519 
	}
}

522 
w_rc_t
 
	g‹dî_m™_im∂
::
	$‹d_gë_ôî_by_ödex_∆
(
ss_m
* 
db
,

523 
‹dî_ödex_ôî
* &
ôî
,

524 
‹dî_tu∂e
* 
±u∂e
,

525 
ªp_row_t
 &
ª∂ow
,

526 
ªp_row_t
 &
ªphigh
,

527 c⁄° 
w_id
,

528 c⁄° 
d_id
,

529 c⁄° 
c_id
,

530 
boﬁ
 
√ed_tu∂e
)

532  (
	`‹d_gë_ôî_by_ödex
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,
w_id
,
d_id
,
c_id
,
NL
,
√ed_tu∂e
));

533 
	}
}

536 
w_rc_t
 
	g‹dî_m™_im∂
::
	$‹d_upd©e_ˇºõr_by_ödex
(
ss_m
* 
db
,

537 
‹dî_tu∂e
* 
±u∂e
,

538 c⁄° 
ˇºõr_id
)

540 
	`as£π
 (
±u∂e
);

545 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "O_IDX", 
±u∂e
));

547 
±u∂e
->
	`£t_vÆue
(5, 
ˇºõr_id
);

548 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
));

550  (
RCOK
);

551 
	}
}

553 
w_rc_t
 
	g‹dî_m™_im∂
::
	$‹d_upd©e_ˇºõr_by_ödex_∆
(
ss_m
* 
db
,

554 
‹dî_tu∂e
* 
±u∂e
,

555 c⁄° 
ˇºõr_id
)

559 
	`as£π
 (
±u∂e
);

564 
	`W_DO
(
	`ödex_¥obe_∆_by_«me
(
db
, "O_IDX", 
±u∂e
));

566 
±u∂e
->
	`£t_vÆue
(5, 
ˇºõr_id
);

567 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
NL
));

569  (
RCOK
);

570 
	}
}

579 
w_rc_t
 
	g‹dî_löe_m™_im∂
::
	$ﬁ_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

580 
‹dî_löe_ödex_ôî
* &
ôî
,

581 
‹dî_löe_tu∂e
* 
±u∂e
,

582 
ªp_row_t
 &
ª∂ow
,

583 
ªp_row_t
 &
ªphigh
,

584 c⁄° 
w_id
,

585 c⁄° 
d_id
,

586 c⁄° 
low_o_id
,

587 c⁄° 
high_o_id
,

588 
lock_mode_t
 
Æm
,

589 
boﬁ
 
√ed_tu∂e
)

591 
	`as£π
 (
±u∂e
);

596 
	`as£π
 (
_±abÀ
);

597 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("OL_IDX");

598 
	`as£π
 (
pödex
);

601 
±u∂e
->
	`£t_vÆue
(0, 
low_o_id
);

602 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

603 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

604 
±u∂e
->
	`£t_vÆue
(3, ()0);

606 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

607 
	`as£π
 (
ª∂ow
.
_de°
);

610 
±u∂e
->
	`£t_vÆue
(0, 
high_o_id
+1);

612 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

613 
	`as£π
 (
ªphigh
.
_de°
);

616 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

617 
Æm
, 
√ed_tu∂e
,

618 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

619 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

620  (
RCOK
);

621 
	}
}

624 
w_rc_t
 
	g‹dî_löe_m™_im∂
::
	$ﬁ_gë_ønge_ôî_by_ödex_∆
(
ss_m
* 
db
,

625 
‹dî_löe_ödex_ôî
* &
ôî
,

626 
‹dî_löe_tu∂e
* 
±u∂e
,

627 
ªp_row_t
 &
ª∂ow
,

628 
ªp_row_t
 &
ªphigh
,

629 c⁄° 
w_id
,

630 c⁄° 
d_id
,

631 c⁄° 
low_o_id
,

632 c⁄° 
high_o_id
,

633 
boﬁ
 
√ed_tu∂e
)

635  (
	`ﬁ_gë_ønge_ôî_by_ödex
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,

636 
w_id
,
d_id
,
low_o_id
,
high_o_id
,
NL
,
√ed_tu∂e
));

637 
	}
}

641 
w_rc_t
 
	g‹dî_löe_m™_im∂
::
	$ﬁ_gë_¥obe_ôî_by_ödex
(
ss_m
* 
db
,

642 
‹dî_löe_ödex_ôî
* &
ôî
,

643 
‹dî_löe_tu∂e
* 
±u∂e
,

644 
ªp_row_t
 &
ª∂ow
,

645 
ªp_row_t
 &
ªphigh
,

646 c⁄° 
w_id
,

647 c⁄° 
d_id
,

648 c⁄° 
o_id
,

649 
lock_mode_t
 
Æm
,

650 
boﬁ
 
√ed_tu∂e
)

652 
	`as£π
 (
±u∂e
);

657 
	`as£π
 (
_±abÀ
);

658 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("OL_IDX");

659 
	`as£π
 (
pödex
);

661 
±u∂e
->
	`£t_vÆue
(0, 
o_id
);

662 
±u∂e
->
	`£t_vÆue
(1, 
d_id
);

663 
±u∂e
->
	`£t_vÆue
(2, 
w_id
);

664 
±u∂e
->
	`£t_vÆue
(3, ()0);

666 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

667 
	`as£π
 (
ª∂ow
.
_de°
);

670 
±u∂e
->
	`£t_vÆue
(0, 
o_id
+1);

672 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

673 
	`as£π
 (
ªphigh
.
_de°
);

675 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

676 
Æm
, 
√ed_tu∂e
,

677 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

678 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

679  (
RCOK
);

680 
	}
}

682 
w_rc_t
 
	g‹dî_löe_m™_im∂
::
	$ﬁ_gë_¥obe_ôî_by_ödex_∆
(
ss_m
* 
db
,

683 
‹dî_löe_ödex_ôî
* &
ôî
,

684 
‹dî_löe_tu∂e
* 
±u∂e
,

685 
ªp_row_t
 &
ª∂ow
,

686 
ªp_row_t
 &
ªphigh
,

687 c⁄° 
w_id
,

688 c⁄° 
d_id
,

689 c⁄° 
o_id
,

690 
boﬁ
 
√ed_tu∂e
)

692  (
	`ﬁ_gë_¥obe_ôî_by_ödex
(
db
,
ôî
,
±u∂e
,
ª∂ow
,
ªphigh
,

693 
w_id
,
d_id
,
o_id
,
NL
,
√ed_tu∂e
));

694 
	}
}

703 
w_rc_t
 
	gôem_m™_im∂
::
	$ô_ödex_¥obe
(
ss_m
* 
db
,

704 
ôem_tu∂e
* 
±u∂e
,

705 c⁄° 
i_id
)

707 
	`as£π
 (
±u∂e
);

708 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

709  (
	`ödex_¥obe_by_«me
(
db
, "I_IDX", 
±u∂e
));

710 
	}
}

712 
w_rc_t
 
	gôem_m™_im∂
::
	$ô_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

713 
ôem_tu∂e
* 
±u∂e
,

714 c⁄° 
i_id
)

716 
	`as£π
 (
±u∂e
);

717 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

718  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "I_IDX", 
±u∂e
));

719 
	}
}

721 
w_rc_t
 
	gôem_m™_im∂
::
	$ô_ödex_¥obe_∆
(
ss_m
* 
db
,

722 
ôem_tu∂e
* 
±u∂e
,

723 c⁄° 
i_id
)

725 
	`as£π
 (
±u∂e
);

726 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

727  (
	`ödex_¥obe_∆_by_«me
(
db
, "I_IDX", 
±u∂e
));

728 
	}
}

737 
w_rc_t
 
	g°ock_m™_im∂
::
	$°_ödex_¥obe
(
ss_m
* 
db
,

738 
°ock_tu∂e
* 
±u∂e
,

739 c⁄° 
w_id
,

740 c⁄° 
i_id
)

742 
	`as£π
 (
±u∂e
);

743 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

744 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

745  (
	`ödex_¥obe_by_«me
(
db
, "S_IDX", 
±u∂e
));

746 
	}
}

748 
w_rc_t
 
	g°ock_m™_im∂
::
	$°_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

749 
°ock_tu∂e
* 
±u∂e
,

750 c⁄° 
w_id
,

751 c⁄° 
i_id
)

753 
	`as£π
 (
±u∂e
);

754 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

755 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

756  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "S_IDX", 
±u∂e
));

757 
	}
}

759 
w_rc_t
 
	g°ock_m™_im∂
::
	$°_ödex_¥obe_∆
(
ss_m
* 
db
,

760 
°ock_tu∂e
* 
±u∂e
,

761 c⁄° 
w_id
,

762 c⁄° 
i_id
)

764 
	`as£π
 (
±u∂e
);

765 
±u∂e
->
	`£t_vÆue
(0, 
i_id
);

766 
±u∂e
->
	`£t_vÆue
(1, 
w_id
);

767  (
	`ödex_¥obe_∆_by_«me
(
db
, "S_IDX", 
±u∂e
));

768 
	}
}

770 
w_rc_t
 
	g°ock_m™_im∂
::
	$°_upd©e_tu∂e
(
ss_m
* 
db
,

771 
°ock_tu∂e
* 
±u∂e
,

772 c⁄° 
çcc_°ock_tu∂e
* 
p°ock
,

773 
lock_mode_t
 
lm
)

777 
	`as£π
 (
±u∂e
);

778 
	`as£π
 (
±u∂e
->
	`is_rid_vÆid
());

780 
±u∂e
->
	`£t_vÆue
(2, 
p°ock
->
S_REMOTE_CNT
);

781 
±u∂e
->
	`£t_vÆue
(3, 
p°ock
->
S_QUANTITY
);

782 
±u∂e
->
	`£t_vÆue
(4, 
p°ock
->
S_ORDER_CNT
);

783 
±u∂e
->
	`£t_vÆue
(5, 
p°ock
->
S_YTD
);

785  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

786 
	}
}

788 
w_rc_t
 
	g°ock_m™_im∂
::
	$°_upd©e_tu∂e_∆
(
ss_m
* 
db
,

789 
°ock_tu∂e
* 
±u∂e
,

790 c⁄° 
çcc_°ock_tu∂e
* 
p°ock
)

792  (
	`°_upd©e_tu∂e
(
db
,
±u∂e
,
p°ock
,
NL
));

793 
	}
}

796 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/shore_tpcc_xct.cpp

31 
	~"w‹klﬂd/çcc/sh‹e_çcc_ív.h
"

32 
	~"w‹klﬂd/çcc/çcc_øndom.h
"

34 
	~<ve˘‹
>

35 
	~<numîic
>

36 
	~<Æg‹ôhm
>

38 
usög
 
«me•a˚
 
	gsh‹e
;

41 
ENTER_NAMESPACE
(
çcc
);

52 
__thªad
 
Sh‹eTPCCTrxSèts
 
	gmy_°©s
;

54 
	gSh‹eTPCCEnv
::
	$ív_thªad_öô
()

56 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

57 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

58 
	}
}

60 
	gSh‹eTPCCEnv
::
	$ív_thªad_föi
()

62 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

63 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

64 
	}
}

75 
Sh‹eTPCCTrxSèts
 
	gSh‹eTPCCEnv
::
	$_gë_°©s
()

77 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

78 
Sh‹eTPCCTrxSèts
 
rvÆ
;

79 
rvÆ
 -=Ñval;

80 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

81 
rvÆ
 +*
ô
->
£c⁄d
;

82  (
rvÆ
);

83 
	}
}

94 
	gSh‹eTPCCEnv
::
	$ª£t_°©s
()

96 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

97 
_œ°_°©s
 = 
	`_gë_°©s
();

98 
	}
}

109 
	gSh‹eTPCCEnv
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

110 c⁄° 
iS¥ód
,

111 c⁄° 
iNumOfThªads
,

112 c⁄° 
dñay
,

113 c⁄° 
ul⁄g_t
 
mioch
,

114 c⁄° 
avg˝uußge
)

116 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

119 
Sh‹eTPCCTrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

122 
cuºít_°©s
 -
_œ°_°©s
;

124 
uöt
 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

125 
uöt
 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

126 
uöt
 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

127 
n‹ds_com
 = 
cuºít_°©s
.
©ãm±ed
.
√w_‹dî
 - cuºít_°©s.
Áûed
.√w_‹dî - cuºít_°©s.
dódlocked
.new_order;

129 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

142 
iQuîõdSF
,

143 (
iS¥ód
 ? "Yes" : "No"),

144 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
, 
n‹ds_com
,

145 
dñay
, 
mioch
/dñay, 
avg˝uußge
,

146 100*
avg˝uußge
/
	`gë_max_˝u_cou¡
(),

147 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
,

148 60*
n‹ds_com
/
dñay
);

149 
	}
}

178 
	#A_C_ID
 1023

	)

179 
	#C_C_ID
 127

	)

180 
	#C_C_LAST
 173

	)

181 
	#C_OL_I_ID
 1723

	)

182 
	#A_C_LAST
 255

	)

183 
	#A_OL_I_ID
 8191

	)

185 
	gÆnum
[] =

188 c⁄° *
	gœ°_«me_∑πs
[] =

202 
	$ønd_öãgî
(
lo
, 
hi
) {

203  (
	`UR™d
(
lo
,
hi
));

205 
	}
}

220 
	$¸óã_øndom_a_°rög
–*
out_buf„r
, 
Àngth_lo
, 
Àngth_hi
 ) {

221 
i
, 
a˘uÆ_Àngth
 ;

223 
a˘uÆ_Àngth
 = 
	`ønd_öãgî
–
Àngth_lo
, 
Àngth_hi
 ) ;

225 
i
 = 0; i < 
a˘uÆ_Àngth
; i++ ) {

226 
out_buf„r
[
i
] = 
Ænum
[
	`ønd_öãgî
( 0, 61 )] ;

228 
out_buf„r
[
a˘uÆ_Àngth
] = '\0' ;

230  (
a˘uÆ_Àngth
);

231 
	}
}

246 
	$¸óã_øndom_n_°rög
–*
out_buf„r
, 
Àngth_lo
, 
Àngth_hi
 ) {

247 
i
, 
a˘uÆ_Àngth
 ;

249 
a˘uÆ_Àngth
 = 
	`ønd_öãgî
–
Àngth_lo
, 
Àngth_hi
 ) ;

251 
i
 = 0; i < 
a˘uÆ_Àngth
; i++ )

253 
out_buf„r
[
i
] = ()
	`ønd_öãgî
( 48,57 ) ;

255 
out_buf„r
[
a˘uÆ_Àngth
] = '\0' ;

257  (
a˘uÆ_Àngth
);

258 
	}
}

262 
	$NUønd_vÆ
 ( 
A
, 
x
, 
y
, 
C
 ) {

263 ((((
	`ønd_öãgî
(0,
A
)|ønd_öãgî(
x
,
y
))+
C
)%(y-x+1))+x);

264 
	}
}

277 
	$¸óã_a_°rög_wôh_‹igöÆ
–*
out_buf„r
, 
Àngth_lo
,

278 
Àngth_hi
, 
≥r˚¡_to_£t
 )

280 
a˘uÆ_Àngth
, 
°¨t_pos
 ;

282 
a˘uÆ_Àngth
 = 
	`¸óã_øndom_a_°rög
–
out_buf„r
, 
Àngth_lo
, 
Àngth_hi
 ) ;

284 i‡–
	`ønd_öãgî
–1, 100 ) <
≥r˚¡_to_£t
 )

286 
°¨t_pos
 = 
	`ønd_öãgî
–0, 
a˘uÆ_Àngth
-8 ) ;

287 
	`°∫˝y
(
out_buf„r
+
°¨t_pos
,"ORIGINAL",8) ;

290  (
a˘uÆ_Àngth
);

291 
	}
}

302 
	$¸óã_øndom_œ°_«me
(*
out_buf„r
, 
cu°_num
)

304 
øndom_num
;

306 i‡(
cu°_num
 == 0)

307 
øndom_num
 = 
	`NUønd_vÆ
–
A_C_LAST
, 0, 999, 
C_C_LAST
 );

309 
øndom_num
 = 
cu°_num
 - 1;

311 
	`°r˝y
(
out_buf„r
, 
œ°_«me_∑πs
[
øndom_num
 / 100]);

312 
øndom_num
 %= 100;

313 
	`°rˇt
(
out_buf„r
, 
œ°_«me_∑πs
[
øndom_num
 / 10]);

314 
øndom_num
 %= 10;

315 
	`°rˇt
(
out_buf„r
, 
œ°_«me_∑πs
[
øndom_num
]);

317 (
	`°æí
(
out_buf„r
));

318 
	}
}

321 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_p›uœã_ba£löe
(const ,

322 
p›uœã_ba£löe_öput_t
& 
pbö
)

325 
	`as£π
 (
_pssm
);

326 
	`as£π
 (
_öôülized
);

328 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_pw¨ehou£_m™
);

329 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_pdi°ri˘_m™
);

333 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

334 
ªp_row_t
 
	`¨ïrow_key
(
_pcu°omî_m™
->
	`ts
());

336 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

337 
¨ïrow_key
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

339 
¥wh
->
_ªp
 = &
¨ïrow
;

340 
¥di°
->
_ªp
 = &
¨ïrow
;

341 
¥wh
->
_ªp_key
 = &
¨ïrow_key
;

342 
¥di°
->
_ªp_key
 = &
¨ïrow_key
;

345 
wh
 = 
pbö
.
_wh
;

346 
i
=1; i <
wh
; i++) {

347 
j
=0; j <
DISTRICTS_PER_WAREHOUSE
; j++) {

348 
«me
[11];

349 
°ªë_1
[21];

350 
°ªë_2
[21];

351 
côy
[21];

352 
°©e
[3];

353 
zù
[10];

354 
èx
 = 
	`ønd_öãgî
(0, 2000)/10000.0;

356 
	`¸óã_øndom_a_°rög
–
«me
, 6,10) ;

357 
	`¸óã_øndom_a_°rög
–
°ªë_1
, 10,20) ;

358 
	`¸óã_øndom_a_°rög
–
°ªë_2
, 10,20) ;

359 
	`¸óã_øndom_a_°rög
–
côy
, 10,20) ;

360 
	`¸óã_øndom_a_°rög
–
°©e
, 2,2) ;

361 
	`¸óã_øndom_n_°rög
–
zù
, 4,4) ;

362 
	`°rˇt
(
zù
, "11111");

364 if(
j
 == 0) {

366 
¥wh
->
	`£t_vÆue
(0, 
i
);

367 
¥wh
->
	`£t_vÆue
(1, 
«me
);

368 
¥wh
->
	`£t_vÆue
(2, 
°ªë_1
);

369 
¥wh
->
	`£t_vÆue
(3, 
°ªë_2
);

370 
¥wh
->
	`£t_vÆue
(4, 
côy
);

371 
¥wh
->
	`£t_vÆue
(5, 
°©e
);

372 
¥wh
->
	`£t_vÆue
(6, 
zù
);

373 
¥wh
->
	`£t_vÆue
(7, 
èx
);

374 
¥wh
->
	`£t_vÆue
(8, 300000.0);

375 
	`W_DO
(
_pw¨ehou£_m™
->
	`add_tu∂e
(
_pssm
, 
¥wh
));

378 
¥di°
->
	`£t_vÆue
(0, 
j
);

379 
¥di°
->
	`£t_vÆue
(1, 
i
);

380 
¥di°
->
	`£t_vÆue
(2, 
«me
);

381 
¥di°
->
	`£t_vÆue
(3, 
°ªë_1
);

382 
¥di°
->
	`£t_vÆue
(4, 
°ªë_2
);

383 
¥di°
->
	`£t_vÆue
(5, 
côy
);

384 
¥di°
->
	`£t_vÆue
(6, 
°©e
);

385 
¥di°
->
	`£t_vÆue
(7, 
zù
);

386 
¥di°
->
	`£t_vÆue
(8, 
èx
);

387 
¥di°
->
	`£t_vÆue
(9, 300000.0);

388 
¥di°
->
	`£t_vÆue
(10, 
CUSTOMERS_PER_DISTRICT
+1);

389 
	`W_DO
(
_pdi°ri˘_m™
->
	`add_tu∂e
(
_pssm
, 
¥di°
));

395 
	`W_DO
(
_pssm
->
	`commô_x˘
());

397  
RCOK
;

398 
	}
}

401 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_p›uœã_⁄e_unô
(const ,

402 
p›uœã_⁄e_unô_öput_t
& 
pbuö
)

405 
	`as£π
 (
_pssm
);

406 
	`as£π
 (
_öôülized
);

408 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

409 
tu∂e_gu¨d
<
√w_‹dî_m™_im∂
> 
	`¥no
(
_≤ew_‹dî_m™
);

410 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_p‹dî_m™
);

411 
tu∂e_gu¨d
<
ôem_m™_im∂
> 
	`¥ôem
(
_pôem_m™
);

412 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥hi°
(
_phi°‹y_m™
);

413 
tu∂e_gu¨d
<
°ock_m™_im∂
> 
	`¥°
(
_p°ock_m™
);

414 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_p‹dî_löe_m™
);

416 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

417 
ªp_row_t
 
	`¨ïrow_key
(
_pcu°omî_m™
->
	`ts
());

420 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

421 
¨ïrow_key
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

423 
¥cu°
->
_ªp
 = &
¨ïrow
;

424 
¥no
->
_ªp
 = &
¨ïrow
;

425 
¥‹d
->
_ªp
 = &
¨ïrow
;

426 
¥hi°
->
_ªp
 = &
¨ïrow
;

427 
¥°
->
_ªp
 = &
¨ïrow
;

428 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

429 
¥ôem
->
_ªp
 = &
¨ïrow
;

430 
¥cu°
->
_ªp_key
 = &
¨ïrow_key
;

431 
¥no
->
_ªp_key
 = &
¨ïrow_key
;

432 
¥‹d
->
_ªp_key
 = &
¨ïrow_key
;

433 
¥hi°
->
_ªp_key
 = &
¨ïrow_key
;

434 
¥°
->
_ªp_key
 = &
¨ïrow_key
;

435 
¥ﬁ
->
_ªp_key
 = &
¨ïrow_key
;

436 
¥ôem
->
_ªp_key
 = &
¨ïrow_key
;

438 
unô
 = 
pbuö
.
_unô
;

441 
cuºtm°mp
 = 
	`time
(0);

442 
wid
 = 
unô
/
UNIT_PER_WH
 + 1;

443 
did
 = ((
unô
/
UNIT_PER_DIST
Ë% 
DISTRICTS_PER_WAREHOUSE
) + 1;

444 
ba£_oid
 = ((
unô
*
ORDERS_PER_UNIT
Ë% 
ORDERS_PER_DIST
) + 1;

445 
i
=0; i < 
ORDERS_PER_UNIT
; i++) {

446 
oid
 = 
ba£_oid
 + 
i
;

447 
o_cid
 = 
pbuö
.
_cids
[
oid
-1];

449 
boﬁ
 
is_√w
 = (
oid
 > 2100);

450 
ˇºõr
 = 
is_√w
? 0 : 
	`ønd_öãgî
(1, 10);

451 
ﬁöes
 = 
	`ønd_öãgî
(
MIN_OL_PER_ORDER
, 
MAX_OL_PER_ORDER
);

452 
Æl_loˇl
 = 
åue
;

454 
j
=1; j <
ﬁöes
; j++) {

455 
di°_öfo
[25];

456 
ôem_num
 = 
	`ønd_öãgî
(1, 
ITEMS
);

457 
	`¸óã_øndom_a_°rög
(
di°_öfo
, 24, 24);

458 
amou¡
 = 
	`ønd_öãgî
(0, 999999);

460 
¥ﬁ
->
	`£t_vÆue
(0, 
oid
);

461 
¥ﬁ
->
	`£t_vÆue
(1, 
did
);

462 
¥ﬁ
->
	`£t_vÆue
(2, 
wid
);

463 
¥ﬁ
->
	`£t_vÆue
(3, 
j
);

464 
¥ﬁ
->
	`£t_vÆue
(4, 
ôem_num
);

465 
¥ﬁ
->
	`£t_vÆue
(5, 
wid
);

466 
¥ﬁ
->
	`£t_vÆue
(6, 
is_√w
? 0.0 : 
cuºtm°mp
);

467 
¥ﬁ
->
	`£t_vÆue
(7, 5);

468 
¥ﬁ
->
	`£t_vÆue
(8, 
amou¡
);

469 
¥ﬁ
->
	`£t_vÆue
(9, 
di°_öfo
);

470 
	`W_DO
(
_p‹dî_löe_m™
->
	`add_tu∂e
(
_pssm
, 
¥ﬁ
));

473 
¥‹d
->
	`£t_vÆue
(0, 
oid
);

474 
¥‹d
->
	`£t_vÆue
(1, 
o_cid
);

475 
¥‹d
->
	`£t_vÆue
(2, 
did
);

476 
¥‹d
->
	`£t_vÆue
(3, 
wid
);

477 
¥‹d
->
	`£t_vÆue
(4, 
cuºtm°mp
);

478 
¥‹d
->
	`£t_vÆue
(5, 
ˇºõr
);

479 
¥‹d
->
	`£t_vÆue
(6, 
ﬁöes
);

480 
¥‹d
->
	`£t_vÆue
(7, 
Æl_loˇl
);

481 
	`W_DO
(
_p‹dî_m™
->
	`add_tu∂e
(
_pssm
, 
¥‹d
));

483 if(
is_√w
) {

484 
¥no
->
	`£t_vÆue
(0, 
oid
);

485 
¥no
->
	`£t_vÆue
(1, 
did
);

486 
¥no
->
	`£t_vÆue
(2, 
wid
);

487 
	`W_DO
(
_≤ew_‹dî_m™
->
	`add_tu∂e
(
_pssm
, 
¥no
));

492 
°ock_ba£
 = ((
unô
*
STOCK_PER_UNIT
Ë% 
STOCK_PER_WAREHOUSE
) + 1;

493 
i
=0; i < 
STOCK_PER_UNIT
; i++) {

494 
°ock_di°
[10][25];

495 
°ock_d©a
[51];

496 
°ock_num
 = 
°ock_ba£
 + 
i
;

497 
qty
 = 
	`ønd_öãgî
(10, 100);

498 
	`¸óã_a_°rög_wôh_‹igöÆ
(
°ock_d©a
, 26, 50, 10);

499 
uöt_t
 
j
=0; j < (
°ock_di°
)/(stock_dist[0]); j++) {

500 
	`¸óã_øndom_a_°rög
(
°ock_di°
[
j
], 24, 24);

503 
¥°
->
	`£t_vÆue
(0, 
°ock_num
);

504 
¥°
->
	`£t_vÆue
(1, 
wid
);

505 
¥°
->
	`£t_vÆue
(2, ()0);

506 
¥°
->
	`£t_vÆue
(3, 
qty
);

507 
¥°
->
	`£t_vÆue
(4, ()0);

508 
¥°
->
	`£t_vÆue
(5, ()0);

509 
k
=0; k < 10; k++) {

510 
¥°
->
	`£t_vÆue
(6+
k
, 
°ock_di°
[k]);

512 
¥°
->
	`£t_vÆue
(16, 
°ock_d©a
);

513 
	`W_DO
(
_p°ock_m™
->
	`add_tu∂e
(
_pssm
, 
¥°
));

516 if(
wid
 == 1) {

517 
ôem_«me
[25];

518 
ôem_d©a
[51];

519 
im_id
 = 
	`ønd_öãgî
(1, 10000);

520 
ôem_¥i˚
 = 
	`ønd_öãgî
(100, 10000);

521 
	`¸óã_øndom_a_°rög
–
ôem_«me
, 14, 24);

522 
	`¸óã_a_°rög_wôh_‹igöÆ
–
ôem_d©a
, 26, 50, 10) ;

524 
¥ôem
->
	`£t_vÆue
(0, 
°ock_num
);

525 
¥ôem
->
	`£t_vÆue
(1, 
im_id
);

526 
¥ôem
->
	`£t_vÆue
(2, 
ôem_«me
);

527 
¥ôem
->
	`£t_vÆue
(3, 
ôem_¥i˚
);

528 
¥ôem
->
	`£t_vÆue
(4, 
ôem_d©a
);

529 
	`W_DO
(
_pôem_m™
->
	`add_tu∂e
(
_pssm
, 
¥ôem
));

534 
cid_ba£
 = ((
unô
*
CUST_PER_UNIT
Ë% 
CUSTOMERS_PER_DISTRICT
) + 1;

535 
i
=0; i < 
CUST_PER_UNIT
; i++) {

536 
hi°_d©a
[25] ;

537 
cid
 = 
cid_ba£
+
i
;

538 
amou¡
 = 1000;

539 
	`¸óã_øndom_a_°rög
(
hi°_d©a
, 12, 24);

541 
¥hi°
->
	`£t_vÆue
(0, 
cid
);

542 
¥hi°
->
	`£t_vÆue
(1, 
did
);

543 
¥hi°
->
	`£t_vÆue
(2, 
wid
);

544 
¥hi°
->
	`£t_vÆue
(3, 
did
);

545 
¥hi°
->
	`£t_vÆue
(4, 
did
);

546 
¥hi°
->
	`£t_vÆue
(5, 
cuºtm°mp
);

547 
¥hi°
->
	`£t_vÆue
(6, 
amou¡
);

548 
¥hi°
->
	`£t_vÆue
(7, 
hi°_d©a
);

549 
	`W_DO
(
_phi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hi°
));

553 
i
=0; i < 
CUST_PER_UNIT
; i++) {

554 
cu°_œ°
[17];

556 
cu°_fú°
[17];

557 
cu°_°ªë_1
[21];

558 
cu°_°ªë_2
[21];

559 
cu°_côy
[21];

560 
cu°_°©e
[3];

561 
cu°_zù
[10];

562 
cu°_ph⁄e
[17];

563 
cu°_¸edô
[3];

564 
cu°_d©a1
[251];

565 
cu°_d©a2
[251];

566 
cu°_discou¡
 = 
	`ønd_öãgî
(0, 5000)/10000.0;

567 
cid
 = 
cid_ba£
 + 
i
;

569 
	`¸óã_øndom_œ°_«me
(
cu°_œ°
, (
cid
 <= 1000)? cid : 0);

570 
	`¸óã_øndom_a_°rög
–
cu°_fú°
, 8,16) ;

571 
	`¸óã_øndom_a_°rög
–
cu°_°ªë_1
, 10,20) ;

572 
	`¸óã_øndom_a_°rög
–
cu°_°ªë_2
, 10,20) ;

573 
	`¸óã_øndom_a_°rög
–
cu°_côy
, 10,20) ;

574 
	`¸óã_øndom_a_°rög
–
cu°_°©e
, 2,2) ;

575 
	`¸óã_øndom_n_°rög
–
cu°_zù
, 4,4) ;

576 
	`°rˇt
(
cu°_zù
, "11111");

577 
	`¸óã_øndom_n_°rög
–
cu°_ph⁄e
, 16,16) ;

578 
	`°r˝y
–
cu°_¸edô
, (
	`ønd_öãgî
( 1, 100 ) <= 10)? "BC" : "GC");

579 
	`¸óã_øndom_a_°rög
–
cu°_d©a1
, 250, 250);

580 
	`¸óã_øndom_a_°rög
–
cu°_d©a2
, 50, 250);

582 
¥cu°
->
	`£t_vÆue
(0, 
cid
);

583 
¥cu°
->
	`£t_vÆue
(1, 
did
);

584 
¥cu°
->
	`£t_vÆue
(2, 
wid
);

585 
¥cu°
->
	`£t_vÆue
(3, 
cu°_fú°
);

586 
¥cu°
->
	`£t_vÆue
(4, "OE");

587 
¥cu°
->
	`£t_vÆue
(5, 
cu°_œ°
);

588 
¥cu°
->
	`£t_vÆue
(6, 
cu°_°ªë_1
);

589 
¥cu°
->
	`£t_vÆue
(7, 
cu°_°ªë_2
);

590 
¥cu°
->
	`£t_vÆue
(8, 
cu°_côy
);

591 
¥cu°
->
	`£t_vÆue
(9, 
cu°_°©e
);

592 
¥cu°
->
	`£t_vÆue
(10, 
cu°_zù
);

593 
¥cu°
->
	`£t_vÆue
(11, 
cu°_ph⁄e
);

594 
¥cu°
->
	`£t_vÆue
(12, 
cuºtm°mp
);

595 
¥cu°
->
	`£t_vÆue
(13, 
cu°_¸edô
);

596 
¥cu°
->
	`£t_vÆue
(14, 50000.0);

597 
¥cu°
->
	`£t_vÆue
(15, 
cu°_discou¡
);

598 
¥cu°
->
	`£t_vÆue
(16, 0.0);

599 
¥cu°
->
	`£t_vÆue
(17, -10.0);

600 
¥cu°
->
	`£t_vÆue
(18, 10.0);

601 
¥cu°
->
	`£t_vÆue
(19, 1);

602 
¥cu°
->
	`£t_vÆue
(20, 
cu°_d©a1
);

603 
¥cu°
->
	`£t_vÆue
(21, 
cu°_d©a2
);

604 
	`W_DO
(
_pcu°omî_m™
->
	`add_tu∂e
(
_pssm
, 
¥cu°
));

608 
	`W_DO
(
_pssm
->
	`commô_x˘
());

610  
RCOK
;

611 
	}
}

636 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

638 if(
_°¨t_imbÆ™˚
 > 0 && !
_bAœrmSë
) {

639 
	`CRITICAL_SECTION
(
Æ¨m_cs
, 
_Æ¨m_lock
);

640 if(!
_bAœrmSë
) {

641 
	`Æ¨m
(
_°¨t_imbÆ™˚
);

642 
_bAœrmSë
 = 
åue
;

647 i‡(
¥eque°
->
	`ty≥
(Ë=
XCT_MIX
) {

648 
¥eque°
->
	`£t_ty≥
(
	`øndom_x˘_ty≥
(
smthªad_t
::
	`ønd
()%100));

651 
¥eque°
->
	`ty≥
()) {

654 
XCT_NEW_ORDER
:

655  (
	`run_√w_‹dî
(
¥eque°
));

656 
XCT_PAYMENT
:

657  (
	`run_∑ymít
(
¥eque°
));;

658 
XCT_ORDER_STATUS
:

659  (
	`run_‹dî_°©us
(
¥eque°
));

660 
XCT_DELIVERY
:

661  (
	`run_dñivîy
(
¥eque°
));

662 
XCT_STOCK_LEVEL
:

663  (
	`run_°ock_Àvñ
(
¥eque°
));

666 
XCT_LITTLE_MIX
:

667 i‡(
	`UR™d
(1,100)>50)

668  (
	`run_√w_‹dî
(
¥eque°
));

670  (
	`run_∑ymít
(
¥eque°
));

674 
XCT_MBENCH_WH
:

675  (
	`run_mbích_wh
(
¥eque°
));

676 
XCT_MBENCH_CUST
:

677  (
	`run_mbích_cu°
(
¥eque°
));

679 
	`as£π
 (0);

681  (
RCOK
);

682 
	}
}

704 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
√w_‹dî
);

705 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
∑ymít
);

706 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
‹dî_°©us
);

707 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
dñivîy
);

708 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
°ock_Àvñ
);

709 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
mbích_wh
);

710 
DEFINE_TRX
(
Sh‹eTPCCEnv
,
mbích_cu°
);

723 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_√w_‹dî
(c⁄° 
x˘_id
,

724 
√w_‹dî_öput_t
& 
≤oö
)

727 
	`as£π
 (
_pssm
);

728 
	`as£π
 (
_öôülized
);

729 
	`as£π
 (
_lﬂded
);

733 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_pw¨ehou£_m™
);

734 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_pdi°ri˘_m™
);

735 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

736 
tu∂e_gu¨d
<
√w_‹dî_m™_im∂
> 
	`¥no
(
_≤ew_‹dî_m™
);

737 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_p‹dî_m™
);

738 
tu∂e_gu¨d
<
ôem_m™_im∂
> 
	`¥ôem
(
_pôem_m™
);

739 
tu∂e_gu¨d
<
°ock_m™_im∂
> 
	`¥°
(
_p°ock_m™
);

740 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_p‹dî_löe_m™
);

742 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

745 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

747 
¥wh
->
_ªp
 = &
¨ïrow
;

748 
¥di°
->
_ªp
 = &
¨ïrow
;

749 
¥cu°
->
_ªp
 = &
¨ïrow
;

750 
¥no
->
_ªp
 = &
¨ïrow
;

751 
¥‹d
->
_ªp
 = &
¨ïrow
;

752 
¥ôem
->
_ªp
 = &
¨ïrow
;

753 
¥°
->
_ªp
 = &
¨ïrow
;

754 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

765 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:wh-idx-probe (%d)\n",

766 
x˘_id
, 
≤oö
.
_wh_id
);

767 
	`W_DO
(
_pw¨ehou£_m™
->
	`wh_ödex_¥obe
(
_pssm
, 
¥wh
, 
≤oö
.
_wh_id
));

769 
çcc_w¨ehou£_tu∂e
 
awh
;

770 
¥wh
->
	`gë_vÆue
(7, 
awh
.
W_TAX
);

781 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:dist-idx-upd (%d) (%d)\n",

782 
x˘_id
, 
≤oö
.
_wh_id
,Önoö.
_d_id
);

783 
	`W_DO
(
_pdi°ri˘_m™
->
	`di°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥di°
,

784 
≤oö
.
_wh_id
,Önoö.
_d_id
));

786 
çcc_di°ri˘_tu∂e
 
adi°
;

787 
¥di°
->
	`gë_vÆue
(8, 
adi°
.
D_TAX
);

788 
¥di°
->
	`gë_vÆue
(10, 
adi°
.
D_NEXT_O_ID
);

789 
adi°
.
D_NEXT_O_ID
++;

792 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:cust-idx-probe (%d) (%d) (%d)\n",

793 
x˘_id
, 
≤oö
.
_wh_id
,Önoö.
_d_id
,Önoö.
_c_id
);

794 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_ödex_¥obe
(
_pssm
, 
¥cu°
, 
≤oö
.
_wh_id
,

795 
≤oö
.
_d_id
,Önoö.
_c_id
));

797 
çcc_cu°omî_tu∂e
 
acu°
;

798 
¥cu°
->
	`gë_vÆue
(15, 
acu°
.
C_DISCOUNT
);

799 
¥cu°
->
	`gë_vÆue
(13, 
acu°
.
C_CREDIT
, 3);

800 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

808 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:dist-upd-next-o-id (%d)\n",

809 
x˘_id
, 
adi°
.
D_NEXT_O_ID
);

810 
	`W_DO
(
_pdi°ri˘_m™
->
	`di°_upd©e_√xt_o_id
(
_pssm
, 
¥di°
,

811 
adi°
.
D_NEXT_O_ID
));

813 
tŸÆ_amou¡
 = 0;

815 
ôem_˙t
=0; iãm_˙t<
≤oö
.
_ﬁ_˙t
; item_cnt++) {

818 
ﬁ_i_id
 = 
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_i_id
;

819 
ﬁ_suµly_w_id
 = 
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_suµly_wh_id
;

829 
çcc_ôem_tu∂e
 
aôem
;

830 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:item-idx-probe (%d)\n",

831 
x˘_id
, 
ﬁ_i_id
);

832 
	`W_DO
(
_pôem_m™
->
	`ô_ödex_¥obe
(
_pssm
, 
¥ôem
, 
ﬁ_i_id
));

834 
¥ôem
->
	`gë_vÆue
(4, 
aôem
.
I_DATA
, 51);

835 
¥ôem
->
	`gë_vÆue
(3, 
aôem
.
I_PRICE
);

836 
¥ôem
->
	`gë_vÆue
(2, 
aôem
.
I_NAME
, 25);

838 
ôem_amou¡
 = 
aôem
.
I_PRICE
 * 
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_qu™tôy
;

839 
tŸÆ_amou¡
 +
ôem_amou¡
;

851 
çcc_°ock_tu∂e
 
a°ock
;

852 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:stock-idx-upd (%d) (%d)\n",

853 
x˘_id
, 
ﬁ_suµly_w_id
, 
ﬁ_i_id
);

854 
	`W_DO
(
_p°ock_m™
->
	`°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥°
,

855 
ﬁ_suµly_w_id
, 
ﬁ_i_id
));

856 
¥°
->
	`gë_vÆue
(0, 
a°ock
.
S_I_ID
);

857 
¥°
->
	`gë_vÆue
(1, 
a°ock
.
S_W_ID
);

858 
¥°
->
	`gë_vÆue
(5, 
a°ock
.
S_YTD
);

859 
a°ock
.
S_YTD
 +
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_qu™tôy
;

860 
¥°
->
	`gë_vÆue
(2, 
a°ock
.
S_REMOTE_CNT
);

861 
¥°
->
	`gë_vÆue
(3, 
a°ock
.
S_QUANTITY
);

862 
a°ock
.
S_QUANTITY
 -
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_qu™tôy
;

863 i‡(
a°ock
.
S_QUANTITY
 < 10)ástock.S_QUANTITY += 91;

865 
¥°
->
	`gë_vÆue
(6+
≤oö
.
_d_id
, 
a°ock
.
S_DIST
[pnoin._d_id], 25);

866 
¥°
->
	`gë_vÆue
(16, 
a°ock
.
S_DATA
, 51);

868 
c_s_bønd_gíîic
;

869 i‡(
	`°r°r
(
aôem
.
I_DATA
, "ORIGINAL"Ë!
NULL
 &&

870 
	`°r°r
(
a°ock
.
S_DATA
, "ORIGINAL"Ë!
NULL
)

871 
c_s_bønd_gíîic
 = 'B';

872 
c_s_bønd_gíîic
 = 'G';

874 
¥°
->
	`gë_vÆue
(4, 
a°ock
.
S_ORDER_CNT
);

875 
a°ock
.
S_ORDER_CNT
++;

877 i‡(
≤oö
.
_wh_id
 !
ﬁ_suµly_w_id
) {

878 
a°ock
.
S_REMOTE_CNT
++;

887 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:stock-upd-tuple (%d) (%d)\n",

888 
x˘_id
, 
a°ock
.
S_W_ID
,á°ock.
S_I_ID
);

889 
	`W_DO
(
_p°ock_m™
->
	`°_upd©e_tu∂e
(
_pssm
, 
¥°
, &
a°ock
));

897 
¥ﬁ
->
	`£t_vÆue
(0, 
adi°
.
D_NEXT_O_ID
);

898 
¥ﬁ
->
	`£t_vÆue
(1, 
≤oö
.
_d_id
);

899 
¥ﬁ
->
	`£t_vÆue
(2, 
≤oö
.
_wh_id
);

900 
¥ﬁ
->
	`£t_vÆue
(3, 
ôem_˙t
+1);

901 
¥ﬁ
->
	`£t_vÆue
(4, 
ﬁ_i_id
);

902 
¥ﬁ
->
	`£t_vÆue
(5, 
ﬁ_suµly_w_id
);

903 
¥ﬁ
->
	`£t_vÆue
(6, 
≤oö
.
_t°amp
);

904 
¥ﬁ
->
	`£t_vÆue
(7, 
≤oö
.
ôems
[
ôem_˙t
].
_ﬁ_qu™tôy
);

905 
¥ﬁ
->
	`£t_vÆue
(8, 
ôem_amou¡
);

907 
¥ﬁ
->
	`£t_vÆue
(9, 
a°ock
.
S_DIST
[
≤oö
.
_d_id
]);

908 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:ol-add-tuple (%d) (%d) (%d) (%d)\n",

909 
x˘_id
, 
≤oö
.
_wh_id
,Önoö.
_d_id
,

910 
adi°
.
D_NEXT_O_ID
, 
ôem_˙t
+1);

911 
	`W_DO
(
_p‹dî_löe_m™
->
	`add_tu∂e
(
_pssm
, 
¥ﬁ
));

920 
¥‹d
->
	`£t_vÆue
(0, 
adi°
.
D_NEXT_O_ID
);

921 
¥‹d
->
	`£t_vÆue
(1, 
≤oö
.
_c_id
);

922 
¥‹d
->
	`£t_vÆue
(2, 
≤oö
.
_d_id
);

923 
¥‹d
->
	`£t_vÆue
(3, 
≤oö
.
_wh_id
);

924 
¥‹d
->
	`£t_vÆue
(4, 
≤oö
.
_t°amp
);

925 
¥‹d
->
	`£t_vÆue
(5, 0);

926 
¥‹d
->
	`£t_vÆue
(6, 
≤oö
.
_ﬁ_˙t
);

927 
¥‹d
->
	`£t_vÆue
(7, 
≤oö
.
_Æl_loˇl
);

928 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:ord-add-tuple (%d)\n",

929 
x˘_id
, 
adi°
.
D_NEXT_O_ID
);

930 
	`W_DO
(
_p‹dî_m™
->
	`add_tu∂e
(
_pssm
, 
¥‹d
));

935 
¥no
->
	`£t_vÆue
(0, 
adi°
.
D_NEXT_O_ID
);

936 
¥no
->
	`£t_vÆue
(1, 
≤oö
.
_d_id
);

937 
¥no
->
	`£t_vÆue
(2, 
≤oö
.
_wh_id
);

938 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d NO:nord-add-tuple (%d) (%d) (%d)\n",

939 
x˘_id
, 
≤oö
.
_wh_id
,Önoö.
_d_id
, 
adi°
.
D_NEXT_O_ID
);

940 
	`W_DO
(
_≤ew_‹dî_m™
->
	`add_tu∂e
(
_pssm
, 
¥no
));

942 #ifde‡
PRINT_TRX_RESULTS


945 
¥wh
->
	`¥öt_tu∂e
();

946 
¥di°
->
	`¥öt_tu∂e
();

947 
¥cu°
->
	`¥öt_tu∂e
();

948 
¥no
->
	`¥öt_tu∂e
();

949 
¥‹d
->
	`¥öt_tu∂e
();

950 
¥ôem
->
	`¥öt_tu∂e
();

951 
¥°
->
	`¥öt_tu∂e
();

952 
¥ﬁ
->
	`¥öt_tu∂e
();

955  
RCOK
;

957 
	}
}

968 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_∑ymít
(c⁄° 
x˘_id
,

969 
∑ymít_öput_t
& 
µö
)

972 
	`as£π
 (
_pssm
);

973 
	`as£π
 (
_öôülized
);

974 
	`as£π
 (
_lﬂded
);

980 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_pw¨ehou£_m™
);

981 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_pdi°ri˘_m™
);

982 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

983 
tu∂e_gu¨d
<
hi°‹y_m™_im∂
> 
	`¥hi°
(
_phi°‹y_m™
);

985 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

988 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

990 
¥wh
->
_ªp
 = &
¨ïrow
;

991 
¥di°
->
_ªp
 = &
¨ïrow
;

992 
¥cu°
->
_ªp
 = &
¨ïrow
;

993 
¥hi°
->
_ªp
 = &
¨ïrow
;

996 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:wh-idx-upd (%d)\n",

997 
x˘_id
, 
µö
.
_home_wh_id
);

998 
	`W_DO
(
_pw¨ehou£_m™
->
	`wh_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥wh
,

999 
µö
.
_home_wh_id
));

1002 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:dist-idx-upd (%d) (%d)\n",

1003 
x˘_id
, 
µö
.
_home_wh_id
,Öpö.
_home_d_id
);

1004 
	`W_DO
(
_pdi°ri˘_m™
->
	`di°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥di°
,

1005 
µö
.
_home_wh_id
,

1006 
µö
.
_home_d_id
));

1011 
c_w
 = (
µö
.
_v_cu°_wh_£À˘i⁄
 > 85 ?Öpö.
_home_wh_id
 :Öpö.
_ªmŸe_wh_id
);

1012 
c_d
 = (
µö
.
_v_cu°_wh_£À˘i⁄
 > 85 ?Öpö.
_home_d_id
 :Öpö.
_ªmŸe_d_id
);

1014 i‡(
µö
.
_v_cu°_idít_£À˘i⁄
 <= 60) {

1028 
ªp_row_t
 
	`lowªp
(
_pcu°omî_m™
->
	`ts
());

1029 
ªp_row_t
 
	`highªp
(
_pcu°omî_m™
->
	`ts
());

1031 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

1033 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

1034 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-iter-by-name-idx (%s)\n",

1035 
x˘_id
, 
µö
.
_c_œ°
);

1036 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_gë_ôî_by_ödex
(
_pssm
, 
tmp_c_ôî
,

1037 
¥cu°
, 
lowªp
, 
highªp
,

1038 
c_w
, 
c_d
,

1039 
µö
.
_c_œ°
));

1040 
c_ôî
 = 
tmp_c_ôî
;

1043 
ve˘‹
<> 
v_c_id
;

1044 
a_c_id
 = 0;

1045 
cou¡
 = 0;

1046 
boﬁ
 
eof
;

1048 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°
));

1049 !
eof
) {

1051 ++
cou¡
;

1052 
¥cu°
->
	`gë_vÆue
(0, 
a_c_id
);

1053 
v_c_id
.
	`push_back
(
a_c_id
);

1054 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-iter-next (%d)\n",

1055 
x˘_id
, 
a_c_id
);

1056 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°
));

1058 
	`as£π
 (
cou¡
);

1061 
µö
.
_c_id
 = 
v_c_id
[(
cou¡
+1)/2-1];

1063 
	`as£π
 (
µö
.
_c_id
>0);

1076 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:cust-idx-upd (%d) (%d) (%d)\n",

1077 
x˘_id
, 
c_w
, 
c_d
, 
µö
.
_c_id
);

1078 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥cu°
,

1079 
c_w
, 
c_d
, 
µö
.
_c_id
));

1083 
çcc_cu°omî_tu∂e
 
acu°
;

1086 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

1087 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

1088 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

1089 
¥cu°
->
	`gë_vÆue
(6, 
acu°
.
C_STREET_1
, 21);

1090 
¥cu°
->
	`gë_vÆue
(7, 
acu°
.
C_STREET_2
, 21);

1091 
¥cu°
->
	`gë_vÆue
(8, 
acu°
.
C_CITY
, 21);

1092 
¥cu°
->
	`gë_vÆue
(9, 
acu°
.
C_STATE
, 3);

1093 
¥cu°
->
	`gë_vÆue
(10, 
acu°
.
C_ZIP
, 10);

1094 
¥cu°
->
	`gë_vÆue
(11, 
acu°
.
C_PHONE
, 17);

1095 
¥cu°
->
	`gë_vÆue
(12, 
acu°
.
C_SINCE
);

1096 
¥cu°
->
	`gë_vÆue
(13, 
acu°
.
C_CREDIT
, 3);

1097 
¥cu°
->
	`gë_vÆue
(14, 
acu°
.
C_CREDIT_LIM
);

1098 
¥cu°
->
	`gë_vÆue
(15, 
acu°
.
C_DISCOUNT
);

1099 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

1100 
¥cu°
->
	`gë_vÆue
(17, 
acu°
.
C_YTD_PAYMENT
);

1101 
¥cu°
->
	`gë_vÆue
(18, 
acu°
.
C_LAST_PAYMENT
);

1102 
¥cu°
->
	`gë_vÆue
(19, 
acu°
.
C_PAYMENT_CNT
);

1103 
¥cu°
->
	`gë_vÆue
(20, 
acu°
.
C_DATA_1
, 251);

1104 
¥cu°
->
	`gë_vÆue
(21, 
acu°
.
C_DATA_2
, 251);

1107 
acu°
.
C_BALANCE
 -
µö
.
_h_amou¡
;

1108 
acu°
.
C_YTD_PAYMENT
 +
µö
.
_h_amou¡
;

1109 
acu°
.
C_PAYMENT_CNT
++;

1112 i‡(
acu°
.
C_CREDIT
[0] == 'B' &&ácust.C_CREDIT[1] == 'C') {

1124 
c_√w_d©a_1
[251];

1125 
c_√w_d©a_2
[251];

1126 
	`•rötf
(
c_√w_d©a_1
, "%d,%d,%d,%d,%d,%1.2f",

1127 
µö
.
_c_id
, 
c_d
, 
c_w
,Öpö.
_home_d_id
,

1128 
µö
.
_home_wh_id
,Öpö.
_h_amou¡
);

1130 
Àn
 = 
	`°æí
(
c_√w_d©a_1
);

1131 
	`°∫ˇt
(
c_√w_d©a_1
, 
acu°
.
C_DATA_1
, 250-
Àn
);

1132 
	`°∫˝y
(
c_√w_d©a_2
, &
acu°
.
C_DATA_1
[250-
Àn
],Üen);

1133 
	`°∫˝y
(
c_√w_d©a_2
, 
acu°
.
C_DATA_2
, 250-
Àn
);

1135 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:cu°-upd-tu∂e\n", 
x˘_id
);

1136 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_upd©e_tu∂e
(
_pssm
, 
¥cu°
, 
acu°
,

1137 
c_√w_d©a_1
, 
c_√w_d©a_2
));

1139 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:cu°-upd-tu∂e\n", 
x˘_id
);

1140 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_upd©e_tu∂e
(
_pssm
, 
¥cu°
, 
acu°
,

1141 
NULL
, NULL));

1155 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:dist-upd-ytd (%d) (%d)\n",

1156 
x˘_id
, 
µö
.
_home_wh_id
,Öpö.
_home_d_id
);

1157 
	`W_DO
(
_pdi°ri˘_m™
->
	`di°_upd©e_ytd
(
_pssm
, 
¥di°
, 
µö
.
_h_amou¡
));

1159 
çcc_di°ri˘_tu∂e
 
adi°r
;

1160 
¥di°
->
	`gë_vÆue
(2, 
adi°r
.
D_NAME
, 11);

1161 
¥di°
->
	`gë_vÆue
(3, 
adi°r
.
D_STREET_1
, 21);

1162 
¥di°
->
	`gë_vÆue
(4, 
adi°r
.
D_STREET_2
, 21);

1163 
¥di°
->
	`gë_vÆue
(5, 
adi°r
.
D_CITY
, 21);

1164 
¥di°
->
	`gë_vÆue
(6, 
adi°r
.
D_STATE
, 3);

1165 
¥di°
->
	`gë_vÆue
(7, 
adi°r
.
D_ZIP
, 10);

1178 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d PAY:wh-update-ytd (%d)\n",

1179 
x˘_id
, 
µö
.
_home_wh_id
);

1180 
	`W_DO
(
_pw¨ehou£_m™
->
	`wh_upd©e_ytd
(
_pssm
, 
¥wh
, 
µö
.
_h_amou¡
));

1182 
çcc_w¨ehou£_tu∂e
 
awh
;

1183 
¥wh
->
	`gë_vÆue
(1, 
awh
.
W_NAME
, 11);

1184 
¥wh
->
	`gë_vÆue
(2, 
awh
.
W_STREET_1
, 21);

1185 
¥wh
->
	`gë_vÆue
(3, 
awh
.
W_STREET_2
, 21);

1186 
¥wh
->
	`gë_vÆue
(4, 
awh
.
W_CITY
, 21);

1187 
¥wh
->
	`gë_vÆue
(5, 
awh
.
W_STATE
, 3);

1188 
¥wh
->
	`gë_vÆue
(6, 
awh
.
W_ZIP
, 10);

1196 
çcc_hi°‹y_tu∂e
 
ahi°
;

1197 
	`•rötf
(
ahi°
.
H_DATA
, "%† %s", 
awh
.
W_NAME
, 
adi°r
.
D_NAME
);

1198 
ahi°
.
H_DATE
 = 
	`time
(
NULL
);

1200 
¥hi°
->
	`£t_vÆue
(0, 
µö
.
_c_id
);

1201 
¥hi°
->
	`£t_vÆue
(1, 
c_d
);

1202 
¥hi°
->
	`£t_vÆue
(2, 
c_w
);

1203 
¥hi°
->
	`£t_vÆue
(3, 
µö
.
_home_d_id
);

1204 
¥hi°
->
	`£t_vÆue
(4, 
µö
.
_home_wh_id
);

1205 
¥hi°
->
	`£t_vÆue
(5, 
ahi°
.
H_DATE
);

1206 
¥hi°
->
	`£t_vÆue
(6, 
µö
.
_h_amou¡
 * 100.0);

1207 
¥hi°
->
	`£t_vÆue
(7, 
ahi°
.
H_DATA
);

1209 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:hi°-add-tu∂e\n", 
x˘_id
);

1210 
	`W_DO
(
_phi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hi°
));

1212 #ifde‡
PRINT_TRX_RESULTS


1215 
¥wh
->
	`¥öt_tu∂e
();

1216 
¥di°
->
	`¥öt_tu∂e
();

1217 
¥cu°
->
	`¥öt_tu∂e
();

1218 
¥hi°
->
	`¥öt_tu∂e
();

1221  
RCOK
;

1223 
	}
}

1238 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_‹dî_°©us
(c⁄° 
x˘_id
,

1239 
‹dî_°©us_öput_t
& 
p°ö
)

1242 
	`as£π
 (
_pssm
);

1243 
	`as£π
 (
_öôülized
);

1244 
	`as£π
 (
_lﬂded
);

1246 
w_id
 = 
p°ö
.
_wh_id
;

1247 
d_id
 = 
p°ö
.
_d_id
;

1252 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

1253 
tu∂e_gu¨d
<
‹dî_m™_im∂
> 
	`¥‹d
(
_p‹dî_m™
);

1254 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_p‹dî_löe_m™
);

1256 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

1259 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1261 
¥cu°
->
_ªp
 = &
¨ïrow
;

1262 
¥‹d
->
_ªp
 = &
¨ïrow
;

1263 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

1265 
ªp_row_t
 
	`lowªp
(
_pcu°omî_m™
->
	`ts
());

1266 
ªp_row_t
 
	`highªp
(
_pcu°omî_m™
->
	`ts
());

1268 
çcc_‹dîlöe_tu∂e
* 
p‹dîlöes
 = 
NULL
;

1272 
lowªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1273 
highªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1276 i‡(
p°ö
.
_c_id
 == 0) {

1286 
	`as£π
 (
p°ö
.
_c_£À˘
 <= 60);

1287 
	`as£π
 (
p°ö
.
_c_œ°
);

1289 
gu¨d
<
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

1291 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

1292 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST:cust-iter-by-name-idx\n",

1293 
x˘_id
);

1294 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_gë_ôî_by_ödex
(
_pssm
, 
tmp_c_ôî
,

1295 
¥cu°
, 
lowªp
, 
highªp
,

1296 
w_id
, 
d_id
,

1297 
p°ö
.
_c_œ°
));

1298 
c_ôî
 = 
tmp_c_ôî
;

1301 
ve˘‹
<> 
c_id_li°
;

1302 
id
 = 0;

1303 
cou¡
 = 0;

1304 
boﬁ
 
eof
;

1306 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°
));

1307 !
eof
) {

1309 ++
cou¡
;

1310 
¥cu°
->
	`gë_vÆue
(0, 
id
);

1311 
c_id_li°
.
	`push_back
(
id
);

1312 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ORDST:cu°-ôî-√xt\n", 
x˘_id
);

1313 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°
));

1315 
	`as£π
 (
cou¡
);

1318 
p°ö
.
_c_id
 = 
c_id_li°
[(
cou¡
+1)/2-1];

1320 
	`as£π
 (
p°ö
.
_c_id
>0);

1331 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d ORDST:cust-idx-probe (%d) (%d) (%d)\n",

1332 
x˘_id
, 
w_id
, 
d_id
, 
p°ö
.
_c_id
);

1333 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_ödex_¥obe
(
_pssm
, 
¥cu°
,

1334 
w_id
, 
d_id
, 
p°ö
.
_c_id
));

1336 
çcc_cu°omî_tu∂e
 
acu°
;

1337 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

1338 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

1339 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

1340 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

1352 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_t
> > 
o_ôî
;

1354 
ödex_sˇn_ôî_im∂
<
‹dî_t
>* 
tmp_o_ôî
;

1355 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ORDST:‹d-ôî-by-idx\n", 
x˘_id
);

1356 
	`W_DO
(
_p‹dî_m™
->
	`‹d_gë_ôî_by_ödex
(
_pssm
, 
tmp_o_ôî
, 
¥‹d
,

1357 
lowªp
, 
highªp
,

1358 
w_id
, 
d_id
, 
p°ö
.
_c_id
));

1359 
o_ôî
 = 
tmp_o_ôî
;

1362 
çcc_‹dî_tu∂e
 
a‹dî
;

1363 
boﬁ
 
eof
;

1365 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹d
));

1366 !
eof
) {

1367 
¥‹d
->
	`gë_vÆue
(0, 
a‹dî
.
O_ID
);

1368 
¥‹d
->
	`gë_vÆue
(4, 
a‹dî
.
O_ENTRY_D
);

1369 
¥‹d
->
	`gë_vÆue
(5, 
a‹dî
.
O_CARRIER_ID
);

1370 
¥‹d
->
	`gë_vÆue
(6, 
a‹dî
.
O_OL_CNT
);

1371 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹d
));

1375 
	`as£π
 (
a‹dî
.
O_ID
);

1376 
	`as£π
 (
a‹dî
.
O_OL_CNT
);

1387 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
> > 
ﬁ_ôî
;

1389 
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
>* 
tmp_ﬁ_ôî
;

1390 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d ORDST:ﬁ-ôî-by-idx\n", 
x˘_id
);

1391 
	`W_DO
(
_p‹dî_löe_m™
->
	`ﬁ_gë_¥obe_ôî_by_ödex
(
_pssm
, 
tmp_ﬁ_ôî
,

1392 
¥ﬁ
, 
lowªp
, 
highªp
,

1393 
w_id
, 
d_id
,

1394 
a‹dî
.
O_ID
));

1395 
ﬁ_ôî
 = 
tmp_ﬁ_ôî
;

1398 
p‹dîlöes
 = 
√w
 
çcc_‹dîlöe_tu∂e
[
a‹dî
.
O_OL_CNT
];

1399 
i
=0;

1401 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1402 !
eof
) {

1403 
¥ﬁ
->
	`gë_vÆue
(4, 
p‹dîlöes
[
i
].
OL_I_ID
);

1404 
¥ﬁ
->
	`gë_vÆue
(5, 
p‹dîlöes
[
i
].
OL_SUPPLY_W_ID
);

1405 
¥ﬁ
->
	`gë_vÆue
(6, 
p‹dîlöes
[
i
].
OL_DELIVERY_D
);

1406 
¥ﬁ
->
	`gë_vÆue
(7, 
p‹dîlöes
[
i
].
OL_QUANTITY
);

1407 
¥ﬁ
->
	`gë_vÆue
(8, 
p‹dîlöes
[
i
].
OL_AMOUNT
);

1408 
i
++;

1409 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1412 #ifde‡
PRINT_TRX_RESULTS


1415 
rcu°
.
	`¥öt_tu∂e
();

1416 
r‹d
.
	`¥öt_tu∂e
();

1417 
r‹dlöe
.
	`¥öt_tu∂e
();

1420 i‡(
p‹dîlöes
Ë
dñëe
 []Öorderlines;

1422  
RCOK
;

1424 
	}
};

1438 
	gdñivîy_ab‹t_˘r
 = 0;

1440 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_dñivîy
(c⁄° 
x˘_id
,

1441 
dñivîy_öput_t
& 
pdö
)

1443 
boﬁ
 c⁄° 
SPLIT_TRX
 = 
Ál£
;

1444 
°d
::
ve˘‹
<> 
	`dli°
(
DISTRICTS_PER_WAREHOUSE
);

1445 
d_id
;

1446 
w_rc_t
 
e
 = 
	`_x˘_dñivîy_hñ≥r
(
x˘_id
, 
pdö
, 
dli°
, 
d_id
, 
SPLIT_TRX
);

1447 
SPLIT_TRX
 && 
e
.
	`is_îr‹
(Ë&&É.
	`îr_num
(Ë=
smÀvñ_0
::
eDEADLOCK
) {

1448 
	`W_COERCE
(
_pssm
->
	`ab‹t_x˘
());

1449 
	`W_DO
(
_pssm
->
	`begö_x˘
());

1450 
	`©omic_öc_32
(&
dñivîy_ab‹t_˘r
);

1451 
dli°
.
	`push_back
(
d_id
);

1452 
e
 = 
	`_x˘_dñivîy_hñ≥r
(
x˘_id
, 
pdö
, 
dli°
, 
d_id
, 
SPLIT_TRX
);

1454  
e
;

1455 
	}
};

1457 
w_rc_t
 
	gSh‹eTPCCEnv
::
_x˘_dñivîy_hñ≥r
(c⁄° 
x˘_id
,

1458 
dñivîy_öput_t
& 
pdö
,

1459 
°d
::
ve˘‹
<>& 
dli°
,

1460 & 
d_id
,

1461 c⁄° 
boﬁ
 
SPLIT_TRX
) {

1463 
as£π
 (
_pssm
);

1464 
as£π
 (
_öôülized
);

1465 
as£π
 (
_lﬂded
);

1467 
	gw_id
 = 
pdö
.
_wh_id
;

1468 
	gˇºõr_id
 = 
pdö
.
_ˇºõr_id
;

1469 
time_t
 
	gts_°¨t
 = 
time
(
NULL
);

1474 
	gtu∂e_gu¨d
<
	g√w_‹dî_m™_im∂
> 
¥no
(
_≤ew_‹dî_m™
);

1475 
	gtu∂e_gu¨d
<
	g‹dî_m™_im∂
> 
¥‹d
(
_p‹dî_m™
);

1476 
	gtu∂e_gu¨d
<
	g‹dî_löe_m™_im∂
> 
¥ﬁ
(
_p‹dî_löe_m™
);

1477 
	gtu∂e_gu¨d
<
	gcu°omî_m™_im∂
> 
¥cu°
(
_pcu°omî_m™
);

1479 
ªp_row_t
 
¨ïrow
(
_pcu°omî_m™
->
ts
());

1482 
	g¨ïrow
.
£t
(
_pcu°omî_desc
->
maxsize
());

1484 
	g¥no
->
	g_ªp
 = &
¨ïrow
;

1485 
	g¥‹d
->
	g_ªp
 = &
¨ïrow
;

1486 
	g¥ﬁ
->
	g_ªp
 = &
¨ïrow
;

1487 
	g¥cu°
->
	g_ªp
 = &
¨ïrow
;

1489 
ªp_row_t
 
lowªp
(
_p‹dî_löe_m™
->
ts
());

1490 
ªp_row_t
 
highªp
(
_p‹dî_löe_m™
->
ts
());

1494 
	glowªp
.
£t
(
_p‹dî_löe_desc
->
maxsize
());

1495 
	ghighªp
.
£t
(
_p‹dî_löe_desc
->
maxsize
());

1497 
uöt_t
 
	gi
=0; i < 
	gdli°
.
size
(); i++) {

1498 
	gdli°
[
i
] = i+1;

1500 if(
	gSPLIT_TRX
) {

1501 
	g°d
::
øndom_shufÊe
(
dli°
.
begö
(), dli°.
íd
());

1505 
	gdli°
.
size
()) {

1506 
	gd_id
 = 
dli°
.
back
();

1507 
	gdli°
.
p›_back
();

1518 
TRACE
–
TRACE_TRX_FLOW
, "App: %d DEL:nord-iter-by-idx (%d) (%d)\n",

1519 
x˘_id
, 
w_id
, 
d_id
);

1520 
	ggu¨d
<
	gödex_sˇn_ôî_im∂
<
	g√w_‹dî_t
> > 
	gno_ôî
;

1522 
	gödex_sˇn_ôî_im∂
<
	g√w_‹dî_t
>* 
	gtmp_no_ôî
;

1523 
W_DO
(
_≤ew_‹dî_m™
->
no_gë_ôî_by_ödex
(
_pssm
, 
tmp_no_ôî
,

1524 
¥no
, 
lowªp
, 
highªp
,

1525 
w_id
, 
d_id
,

1526 
EX
, 
Ál£
));

1527 
	gno_ôî
 = 
tmp_no_ôî
;

1530 
boﬁ
 
	geof
;

1533 
W_DO
(
no_ôî
->
√xt
(
_pssm
, 
eof
, *
¥no
));

1535 i‡(
	geof
) ;

1537 
	gno_o_id
;

1538 
	g¥no
->
gë_vÆue
(0, 
no_o_id
);

1539 
as£π
 (
no_o_id
);

1549 
TRACE
–
TRACE_TRX_FLOW
,

1551 
x˘_id
, 
w_id
, 
d_id
, 
no_o_id
);

1552 
W_DO
(
_≤ew_‹dî_m™
->
no_dñëe_by_ödex
(
_pssm
, 
¥no
,

1553 
w_id
, 
d_id
, 
no_o_id
));

1565 
TRACE
–
TRACE_TRX_FLOW
,

1567 
x˘_id
, 
w_id
, 
d_id
, 
no_o_id
);

1568 
	g¥‹d
->
£t_vÆue
(0, 
no_o_id
);

1569 
	g¥‹d
->
£t_vÆue
(2, 
d_id
);

1570 
	g¥‹d
->
£t_vÆue
(3, 
w_id
);

1571 
W_DO
(
_p‹dî_m™
->
‹d_upd©e_ˇºõr_by_ödex
(
_pssm
, 
¥‹d
,

1572 
ˇºõr_id
));

1574 
	gc_id
;

1575 
	g¥‹d
->
gë_vÆue
(1, 
c_id
);

1587 
TRACE
–
TRACE_TRX_FLOW
,

1589 
x˘_id
, 
w_id
, 
d_id
, 
no_o_id
);

1591 
	gtŸÆ_amou¡
 = 0;

1592 
	ggu¨d
<
	gödex_sˇn_ôî_im∂
<
	g‹dî_löe_t
> > 
	gﬁ_ôî
;

1594 
	gödex_sˇn_ôî_im∂
<
	g‹dî_löe_t
>* 
	gtmp_ﬁ_ôî
;

1595 
W_DO
(
_p‹dî_löe_m™
->
ﬁ_gë_¥obe_ôî_by_ödex
(
_pssm
,

1596 
tmp_ﬁ_ôî
,

1597 
¥ﬁ
,

1598 
lowªp
, 
highªp
,

1599 
w_id
, 
d_id
,

1600 
no_o_id
));

1601 
	gﬁ_ôî
 = 
tmp_ﬁ_ôî
;

1605 
W_DO
(
ﬁ_ôî
->
√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1606 !
	geof
) {

1608 
	gcuºít_amou¡
;

1609 
	g¥ﬁ
->
gë_vÆue
(8, 
cuºít_amou¡
);

1610 
	gtŸÆ_amou¡
 +
cuºít_amou¡
;

1612 
	g¥ﬁ
->
£t_vÆue
(6, 
ts_°¨t
);

1613 
W_DO
(
_p‹dî_löe_m™
->
upd©e_tu∂e
(
_pssm
, 
¥ﬁ
));

1615 
W_DO
(
ﬁ_ôî
->
√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1627 
TRACE
–
TRACE_TRX_FLOW
,

1629 
x˘_id
, 
w_id
, 
d_id
, 
c_id
);

1630 
W_DO
(
_pcu°omî_m™
->
cu°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥cu°
,

1631 
w_id
, 
d_id
, 
c_id
));

1633 
	gbÆ™˚
;

1634 
	g¥cu°
->
gë_vÆue
(16, 
bÆ™˚
);

1635 
	g¥cu°
->
£t_vÆue
(16, 
bÆ™˚
+
tŸÆ_amou¡
);

1636 
W_DO
(
_pcu°omî_m™
->
upd©e_tu∂e
(
_pssm
, 
¥cu°
));

1638 if(
	gSPLIT_TRX
 && 
	gdli°
.
size
()) {

1639 #ifde‡
CFG_FLUSHER


1640 #w¨nög 
TPCC
-
Dñivîy
 
d€s
 
nŸ
 dÿ
the
 
öãrmedüã
 
commôs
 
œzûy


1642 
W_DO
(
_pssm
->
commô_x˘
());

1643 
W_DO
(
_pssm
->
begö_x˘
());

1647 #ifde‡
PRINT_TRX_RESULTS


1650 
	g¥no
->
¥öt_tu∂e
();

1651 
	g¥‹d
->
¥öt_tu∂e
();

1652 
	g¥‹dlöe
->
¥öt_tu∂e
();

1653 
	g¥cu°
->
¥öt_tu∂e
();

1670 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_°ock_Àvñ
(c⁄° 
x˘_id
,

1671 
°ock_Àvñ_öput_t
& 
p¶ö
)

1674 
	`as£π
 (
_pssm
);

1675 
	`as£π
 (
_öôülized
);

1676 
	`as£π
 (
_lﬂded
);

1681 
tu∂e_gu¨d
<
di°ri˘_m™_im∂
> 
	`¥di°
(
_pdi°ri˘_m™
);

1682 
tu∂e_gu¨d
<
‹dî_löe_m™_im∂
> 
	`¥ﬁ
(
_p‹dî_löe_m™
);

1683 
tu∂e_gu¨d
<
°ock_m™_im∂
> 
	`¥°
(
_p°ock_m™
);

1685 
ªp_row_t
 
	`¨ïrow
(
_pdi°ri˘_m™
->
	`ts
());

1688 
¨ïrow
.
	`£t
(
_pdi°ri˘_desc
->
	`maxsize
());

1690 
¥di°
->
_ªp
 = &
¨ïrow
;

1691 
¥ﬁ
->
_ªp
 = &
¨ïrow
;

1692 
¥°
->
_ªp
 = &
¨ïrow
;

1703 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:dist-idx-probe (%d) (%d)\n",

1704 
x˘_id
, 
p¶ö
.
_wh_id
,Ö¶ö.
_d_id
);

1705 
	`W_DO
(
_pdi°ri˘_m™
->
	`di°_ödex_¥obe
(
_pssm
, 
¥di°
,

1706 
p¶ö
.
_wh_id
,Ö¶ö.
_d_id
));

1708 
√xt_o_id
 = 0;

1709 
¥di°
->
	`gë_vÆue
(10, 
√xt_o_id
);

1731 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:ol-iter-by-idx (%d) (%d) (%d) (%d)\n",

1732 
x˘_id
, 
p¶ö
.
_wh_id
,Ö¶ö.
_d_id
, 
√xt_o_id
-20,Çext_o_id);

1734 
ªp_row_t
 
	`lowªp
(
_p‹dî_löe_m™
->
	`ts
());

1735 
ªp_row_t
 
	`highªp
(
_p‹dî_löe_m™
->
	`ts
());

1736 
ªp_row_t
 
	`s‹åï
(
_p‹dî_löe_m™
->
	`ts
());

1739 
lowªp
.
	`£t
(
_p‹dî_löe_desc
->
	`maxsize
());

1740 
highªp
.
	`£t
(
_p‹dî_löe_desc
->
	`maxsize
());

1741 
s‹åï
.
	`£t
(
_p‹dî_löe_desc
->
	`maxsize
());

1743 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
> > 
ﬁ_ôî
;

1745 
ödex_sˇn_ôî_im∂
<
‹dî_löe_t
>* 
tmp_ﬁ_ôî
;

1746 
	`W_DO
(
_p‹dî_löe_m™
->
	`ﬁ_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_ﬁ_ôî
,

1747 
¥ﬁ
, 
lowªp
, 
highªp
,

1748 
p¶ö
.
_wh_id
,

1749 
p¶ö
.
_d_id
,

1750 
√xt_o_id
-20,

1751 
√xt_o_id
));

1752 
ﬁ_ôî
 = 
tmp_ﬁ_ôî
;

1755 
asc_s‹t_buf„r_t
 
	`ﬁ_li°
(4);

1756 
ﬁ_li°
.
	`£tup
(0, 
SQL_INT
);

1757 
ﬁ_li°
.
	`£tup
(1, 
SQL_INT
);

1758 
ﬁ_li°
.
	`£tup
(2, 
SQL_INT
);

1759 
ﬁ_li°
.
	`£tup
(3, 
SQL_INT
);

1760 
asc_s‹t_m™_im∂
 
	`ﬁ_s‹ãr
(&
ﬁ_li°
, &
s‹åï
);

1761 
èbÀ_row_t
 
	`rsb
(&
ﬁ_li°
);

1764 
boﬁ
 
eof
;

1765 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1766 !
eof
) {

1767 
ãmp_oid
, 
ãmp_iid
;

1768 
ãmp_wid
, 
ãmp_did
;

1769 
¥ﬁ
->
	`gë_vÆue
(4, 
ãmp_iid
);

1770 
¥ﬁ
->
	`gë_vÆue
(0, 
ãmp_oid
);

1771 
¥ﬁ
->
	`gë_vÆue
(2, 
ãmp_wid
);

1772 
¥ﬁ
->
	`gë_vÆue
(1, 
ãmp_did
);

1773 
rsb
.
	`£t_vÆue
(0, 
ãmp_iid
);

1774 
rsb
.
	`£t_vÆue
(1, 
ãmp_wid
);

1775 
rsb
.
	`£t_vÆue
(2, 
ãmp_did
);

1776 
rsb
.
	`£t_vÆue
(3, 
ãmp_oid
);

1777 
ﬁ_s‹ãr
.
	`add_tu∂e
(
rsb
);

1778 
	`W_DO
(
ﬁ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ﬁ
));

1780 
	`as£π
 (
ﬁ_s‹ãr
.
	`cou¡
());

1783 
asc_s‹t_ôî_im∂
 
	`ﬁ_li°_s‹t_ôî
(
_pssm
, &
ﬁ_li°
, &
ﬁ_s‹ãr
);

1784 
œ°_i_id
 = -1;

1785 
cou¡
 = 0;

1788 
	`W_DO
(
ﬁ_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

1789 !
eof
) {

1791 
i_id
;

1792 
w_id
;

1793 
rsb
.
	`gë_vÆue
(0, 
i_id
);

1794 
rsb
.
	`gë_vÆue
(1, 
w_id
);

1797 
	`W_DO
(
_p°ock_m™
->
	`°_ödex_¥obe
(
_pssm
, 
¥°
, 
w_id
, 
i_id
));

1800 
qu™tôy
;

1801 
¥°
->
	`gë_vÆue
(3, 
qu™tôy
);

1802 i‡(
qu™tôy
 < 
p¶ö
.
_thªshﬁd
) {

1809 i‡(
œ°_i_id
 !
i_id
) {

1810 
œ°_i_id
 = 
i_id
;

1811 
cou¡
++;

1813 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d STO:found-one (%d) (%d) (%d)\n",

1814 
x˘_id
, 
cou¡
, 
i_id
, 
qu™tôy
);

1817 
	`W_DO
(
ﬁ_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

1820 #ifde‡
PRINT_TRX_RESULTS


1823 
rdi°
.
	`¥öt_tu∂e
();

1824 
r‹dlöe
.
	`¥öt_tu∂e
();

1825 
r°ock
.
	`¥öt_tu∂e
();

1828  
RCOK
;

1829 
	}
}

1847 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_mbích_wh
(c⁄° 
x˘_id
,

1848 
mbích_wh_öput_t
& 
mbö
)

1851 
	`as£π
 (
_pssm
);

1852 
	`as£π
 (
_öôülized
);

1853 
	`as£π
 (
_lﬂded
);

1859 
tu∂e_gu¨d
<
w¨ehou£_m™_im∂
> 
	`¥wh
(
_pw¨ehou£_m™
);

1861 
ªp_row_t
 
	`¨ïrow
(
_pw¨ehou£_m™
->
	`ts
());

1864 
¨ïrow
.
	`£t
(
_pw¨ehou£_desc
->
	`maxsize
());

1866 
¥wh
->
_ªp
 = &
¨ïrow
;

1869 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MBWH:wh-idx-upd (%d)\n",

1870 
x˘_id
, 
mbö
.
_wh_id
);

1871 
	`W_DO
(
_pw¨ehou£_m™
->
	`wh_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥wh
, 
mbö
.
_wh_id
));

1884 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MBWH:wh-update-ytd (%d)\n",

1885 
x˘_id
, 
mbö
.
_wh_id
);

1886 
	`W_DO
(
_pw¨ehou£_m™
->
	`wh_upd©e_ytd
(
_pssm
, 
¥wh
, 
mbö
.
_amou¡
));

1888 
çcc_w¨ehou£_tu∂e
 
awh
;

1889 
¥wh
->
	`gë_vÆue
(1, 
awh
.
W_NAME
, 11);

1890 
¥wh
->
	`gë_vÆue
(2, 
awh
.
W_STREET_1
, 21);

1891 
¥wh
->
	`gë_vÆue
(3, 
awh
.
W_STREET_2
, 21);

1892 
¥wh
->
	`gë_vÆue
(4, 
awh
.
W_CITY
, 21);

1893 
¥wh
->
	`gë_vÆue
(5, 
awh
.
W_STATE
, 3);

1894 
¥wh
->
	`gë_vÆue
(6, 
awh
.
W_ZIP
, 10);

1896 #ifde‡
PRINT_TRX_RESULTS


1899 
¥wh
->
	`¥öt_tu∂e
();

1902  
RCOK
;

1904 
	}
}

1915 
w_rc_t
 
	gSh‹eTPCCEnv
::
	$x˘_mbích_cu°
(c⁄° 
x˘_id
,

1916 
mbích_cu°_öput_t
& 
mcö
)

1919 
	`as£π
 (
_pssm
);

1920 
	`as£π
 (
_öôülized
);

1921 
	`as£π
 (
_lﬂded
);

1926 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

1928 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

1931 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1933 
¥cu°
->
_ªp
 = &
¨ïrow
;

1947 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MBC:cust-idx-upd (%d) (%d) (%d)\n",

1948 
x˘_id
, 
mcö
.
_wh_id
, mcö.
_d_id
, mcö.
_c_id
);

1949 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥cu°
,

1950 
mcö
.
_wh_id
,

1951 
mcö
.
_d_id
,

1952 
mcö
.
_c_id
));

1954 
çcc_cu°omî_tu∂e
 
acu°
;

1957 
¥cu°
->
	`gë_vÆue
(3, 
acu°
.
C_FIRST
, 17);

1958 
¥cu°
->
	`gë_vÆue
(4, 
acu°
.
C_MIDDLE
, 3);

1959 
¥cu°
->
	`gë_vÆue
(5, 
acu°
.
C_LAST
, 17);

1960 
¥cu°
->
	`gë_vÆue
(6, 
acu°
.
C_STREET_1
, 21);

1961 
¥cu°
->
	`gë_vÆue
(7, 
acu°
.
C_STREET_2
, 21);

1962 
¥cu°
->
	`gë_vÆue
(8, 
acu°
.
C_CITY
, 21);

1963 
¥cu°
->
	`gë_vÆue
(9, 
acu°
.
C_STATE
, 3);

1964 
¥cu°
->
	`gë_vÆue
(10, 
acu°
.
C_ZIP
, 10);

1965 
¥cu°
->
	`gë_vÆue
(11, 
acu°
.
C_PHONE
, 17);

1966 
¥cu°
->
	`gë_vÆue
(12, 
acu°
.
C_SINCE
);

1967 
¥cu°
->
	`gë_vÆue
(13, 
acu°
.
C_CREDIT
, 3);

1968 
¥cu°
->
	`gë_vÆue
(14, 
acu°
.
C_CREDIT_LIM
);

1969 
¥cu°
->
	`gë_vÆue
(15, 
acu°
.
C_DISCOUNT
);

1970 
¥cu°
->
	`gë_vÆue
(16, 
acu°
.
C_BALANCE
);

1971 
¥cu°
->
	`gë_vÆue
(17, 
acu°
.
C_YTD_PAYMENT
);

1972 
¥cu°
->
	`gë_vÆue
(18, 
acu°
.
C_LAST_PAYMENT
);

1973 
¥cu°
->
	`gë_vÆue
(19, 
acu°
.
C_PAYMENT_CNT
);

1974 
¥cu°
->
	`gë_vÆue
(20, 
acu°
.
C_DATA_1
, 251);

1975 
¥cu°
->
	`gë_vÆue
(21, 
acu°
.
C_DATA_2
, 251);

1978 
acu°
.
C_BALANCE
 -
mcö
.
_amou¡
;

1979 
acu°
.
C_YTD_PAYMENT
 +
mcö
.
_amou¡
;

1980 
acu°
.
C_PAYMENT_CNT
++;

1983 i‡(
acu°
.
C_CREDIT
[0] == 'B' &&ácust.C_CREDIT[1] == 'C') {

1995 
c_√w_d©a_1
[251];

1996 
c_√w_d©a_2
[251];

1997 
	`•rötf
(
c_√w_d©a_1
, "%d,%d,%d,%d,%d,%1.2f",

1998 
mcö
.
_c_id
, mcö.
_d_id
, mcö.
_wh_id
,

1999 
mcö
.
_d_id
, mcö.
_wh_id
, mcö.
_amou¡
);

2001 
Àn
 = 
	`°æí
(
c_√w_d©a_1
);

2002 
	`°∫ˇt
(
c_√w_d©a_1
, 
acu°
.
C_DATA_1
, 250-
Àn
);

2003 
	`°∫˝y
(
c_√w_d©a_2
, &
acu°
.
C_DATA_1
[250-
Àn
],Üen);

2004 
	`°∫˝y
(
c_√w_d©a_2
, 
acu°
.
C_DATA_2
, 250-
Àn
);

2006 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:bad-cu°-upd-tu∂e\n", 
x˘_id
);

2007 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_upd©e_tu∂e
(
_pssm
, 
¥cu°
, 
acu°
,

2008 
c_√w_d©a_1
, 
c_√w_d©a_2
));

2010 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d PAY:good-cu°-upd-tu∂e\n", 
x˘_id
);

2011 
	`W_DO
(
_pcu°omî_m™
->
	`cu°_upd©e_tu∂e
(
_pssm
, 
¥cu°
, 
acu°
,

2012 
NULL
, NULL));

2015 #ifde‡
PRINT_TRX_RESULTS


2018 
¥cu°
->
	`¥öt_tu∂e
();

2021  
RCOK
;

2023 
	}
}

2026 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/tpcc_input.cpp

33 
	~"utû.h
"

34 
	~"w‹klﬂd/çcc/çcc_øndom.h
"

35 
	~"w‹klﬂd/çcc/çcc_öput.h
"

39 
ENTER_NAMESPACE
(
çcc
);

47 #unde‡
USE_SAFE_PATHS


51 #unde‡
USE_NO_NORD_INPUTS_FOR_ROLLBACK


55 #unde‡
USE_ONLY_LOCAL_WHS


56 
	#USE_ONLY_LOCAL_WHS


	)

60 #ifde‡
USE_SAME_INPUT


61 #w¨nög 
TPCC
 - 
U£s
 
x˘s
 
wôh
 
ßme
 
öput


64 #ifde‡
USE_SAFE_PATHS


65 #w¨nög 
TPCC
 - 
D€s
 
nŸ
 
gíî©e
 
x˘s
 
th©
 
¥obe
 
C_NAME_IDX


68 #ifde‡
USE_NO_NORD_INPUTS_FOR_ROLLBACK


69 #w¨nög 
TPCC
 - 
D€s
 
nŸ
 
gíî©e
 
ab‹tög
 
NewOrdî
 
x˘s


72 #ifde‡
USE_ONLY_LOCAL_WHS


73 #w¨nög 
TPCC
 - 
U£s
 
⁄ly
 
loˇl
 
W¨ehou£s


77 
skewî_t
 
	gw_skewî
;

78 
boﬁ
 
	g_ch™ge_lﬂd
 = 
Ál£
;

84 
	gﬁ_ôem_öfo
&

85 
	gﬁ_ôem_öfo
::
›î©‹
(c⁄° 
ﬁ_ôem_öfo
& 
rhs
)

87 
_ﬁ_i_id
 = 
rhs
._ol_i_id;

88 
	g_ﬁ_suµly_wh_£À˘
 = 
rhs
.
_ﬁ_suµly_wh_£À˘
;

89 
	g_ﬁ_suµly_wh_id
 = 
rhs
.
_ﬁ_suµly_wh_id
;

90 
	g_ﬁ_qu™tôy
 = 
rhs
.
_ﬁ_qu™tôy
;

92 
	g_ôem_amou¡
 = 
rhs
.
_ôem_amou¡
;

94 
	g_a°ock
 = 
rhs
.
_a°ock
;

95 
	g_aôem
 = 
rhs
.
_aôem
;

97  (*
	gthis
);

100 
	g√w_‹dî_öput_t
&

101 
	g√w_‹dî_öput_t
::
›î©‹
(c⁄° 
√w_‹dî_öput_t
& 
rhs
)

104 
_wh_id
 = 
rhs
._wh_id;

105 
	g_d_id
 = 
rhs
.
_d_id
;

106 
	g_c_id
 = 
rhs
.
_c_id
;

107 
	g_ﬁ_˙t
 = 
rhs
.
_ﬁ_˙t
;

108 
	g_rbk
 = 
rhs
.
_rbk
;

110 
	g_t°amp
 = 
rhs
.
_t°amp
;

111 
	g_Æl_loˇl
 = 
rhs
.
_Æl_loˇl
;

112 
	g_d_√xt_o_id
 = 
rhs
.
_d_√xt_o_id
;

114 
	g_awh
 = 
rhs
.
_awh
;

115 
	g_acu°
 = 
rhs
.
_acu°
;

116 
	g_adi°
 = 
rhs
.
_adi°
;

118 
	gi
=0; i<
	grhs
.
	g_ﬁ_˙t
; i++) {

119 
	gôems
[
i
] = 
rhs
.
ôems
[i];

122  (*
	gthis
);

127 
	g√w_‹dî_öput_t
::
	$gë_no_ôem_öput
(
no_ôem_n‹d_öput_t
& 
™oö
)

129 
™oö
.
_wh_id
 = _wh_id;

130 
™oö
.
_d_id
 = _d_id;

131 
™oö
.
_c_id
 = _c_id;

132 
™oö
.
_ﬁ_˙t
 = _ol_cnt;

133 
™oö
.
_rbk
 = _rbk;

135 
™oö
.
_t°amp
 = _tstamp;

136 
™oö
.
_Æl_loˇl
 = _all_local;

137 
™oö
.
_d_√xt_o_id
 = _d_next_o_id;

138 
	}
}

141 
	g√w_‹dî_öput_t
::
	$gë_wôh_ôem_öput
(
wôh_ôem_n‹d_öput_t
& 
awö
,

142 c⁄° 
idx
)

144 
awö
.
_wh_id
 = _wh_id;

145 
awö
.
_d_id
 = _d_id;

146 
awö
.
_c_id
 = _c_id;

147 
awö
.
_ﬁ_˙t
 = _ol_cnt;

148 
awö
.
_rbk
 = _rbk;

150 
awö
.
_t°amp
 = _tstamp;

151 
awö
.
_Æl_loˇl
 = _all_local;

152 
awö
.
_d_√xt_o_id
 = _d_next_o_id;

154 
awö
.
_ﬁ_idx
 = 
idx
;

156 
awö
.
ôem
 = 
ôems
[
idx
];

157 
	}
}

159 
	gno_ôem_n‹d_öput_t
&

160 
	gno_ôem_n‹d_öput_t
::
›î©‹
(c⁄° 
no_ôem_n‹d_öput_t
& 
rhs
)

163 
_wh_id
 = 
rhs
._wh_id;

164 
	g_d_id
 = 
rhs
.
_d_id
;

165 
	g_c_id
 = 
rhs
.
_c_id
;

166 
	g_ﬁ_˙t
 = 
rhs
.
_ﬁ_˙t
;

167 
	g_rbk
 = 
rhs
.
_rbk
;

169 
	g_t°amp
 = 
rhs
.
_t°amp
;

170 
	g_Æl_loˇl
 = 
rhs
.
_Æl_loˇl
;

171 
	g_d_√xt_o_id
 = 
rhs
.
_d_√xt_o_id
;

173  (*
	gthis
);

176 
	gwôh_ôem_n‹d_öput_t
&

177 
	gwôh_ôem_n‹d_öput_t
::
›î©‹
(c⁄° 
wôh_ôem_n‹d_öput_t
& 
rhs
)

180 
_wh_id
 = 
rhs
._wh_id;

181 
	g_d_id
 = 
rhs
.
_d_id
;

182 
	g_c_id
 = 
rhs
.
_c_id
;

183 
	g_ﬁ_˙t
 = 
rhs
.
_ﬁ_˙t
;

184 
	g_rbk
 = 
rhs
.
_rbk
;

186 
	g_t°amp
 = 
rhs
.
_t°amp
;

187 
	g_Æl_loˇl
 = 
rhs
.
_Æl_loˇl
;

188 
	g_d_√xt_o_id
 = 
rhs
.
_d_√xt_o_id
;

190 
	g_ﬁ_idx
 = 
rhs
.
_ﬁ_idx
;

192 
	gôem
 = 
rhs
.
ôem
;

194  (*
	gthis
);

207 
√w_‹dî_öput_t
 
	$¸óã_√w_‹dî_öput
(
sf
, 
•ecificWH
)

210 
	`as£π
 (
sf
>0);

213 
√w_‹dî_öput_t
 
noö
;

215 #i‚de‡
USE_SAME_INPUT


217 if(
_ch™ge_lﬂd
) {

218 
noö
.
_wh_id
 = 
w_skewî
.
	`gë_öput
();

220 i‡(
•ecificWH
>0)

221 
noö
.
_wh_id
 = 
•ecificWH
;

223 
noö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

226 
noö
.
_d_id
 = 
	`UR™d
(1, 10);

227 
noö
.
_c_id
 = 
	`NUR™d
(1023, 1, 3000);

228 
noö
.
_ﬁ_˙t
 = 
	`UR™d
(5, 15);

229 
noö
.
_rbk
 = 
	`UR™d
(1, 100);

231 
noö
.
_t°amp
 = 
	`time
(
NULL
);

234 
i
=0; i<
noö
.
_ﬁ_˙t
; i++) {

235 
noö
.
ôems
[
i
].
_ﬁ_i_id
 = 
	`NUR™d
(8191, 1, 100000);

236 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_£À˘
 = 
	`UR™d
(1, 100);

237 
noö
.
ôems
[
i
].
_ﬁ_qu™tôy
 = 
	`UR™d
(1, 10);

239 #i‚de‡
USE_ONLY_LOCAL_WHS


240 i‡(
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_£À˘
 == 1) {

242 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_id
 = 
	`UR™d
(1, 
sf
);

243 i‡(
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_id
 !noö.
_wh_id
)

244 
noö
.
_Æl_loˇl
 = 0;

248 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_id
 =Çoö.
_wh_id
;

251 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_id
 =Çoö.
_wh_id
;

255 #i‚de‡
USE_NO_NORD_INPUTS_FOR_ROLLBACK


256 i‡(
noö
.
_rbk
 == 1) {

258 
noö
.
ôems
[noö.
_ﬁ_˙t
-1].
_ﬁ_i_id
 = -1;

259 
	`TRACE
–
TRACE_TRX_FLOW
, "Bad input...\n");

266 
noö
.
_wh_id
 = 1;

267 
noö
.
_d_id
 = 2;

268 
noö
.
_c_id
 = 3;

269 
noö
.
_ﬁ_˙t
 = 10;

270 
noö
.
_rbk
 = 50;

273 
i
=0; i<
noö
.
_ﬁ_˙t
; i++) {

274 
noö
.
ôems
[
i
].
_ﬁ_i_id
 = 1;

275 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_£À˘
 = 50;

276 
noö
.
ôems
[
i
].
_ﬁ_suµly_wh_id
 =Çoö.
_wh_id
;

277 
noö
.
ôems
[
i
].
_ﬁ_qu™tôy
 = 5;

281  (
noö
);

283 
	}
};

292 
	g∑ymít_öput_t
&

293 
	g∑ymít_öput_t
::
›î©‹
(c⁄° 
∑ymít_öput_t
& 
rhs
)

296 
_home_wh_id
 = 
rhs
._home_wh_id;

297 
	g_home_d_id
 = 
rhs
.
_home_d_id
;

298 
	g_v_cu°_wh_£À˘i⁄
 = 
rhs
.
_v_cu°_wh_£À˘i⁄
;

299 
	g_ªmŸe_wh_id
 = 
rhs
.
_ªmŸe_wh_id
;

300 
	g_ªmŸe_d_id
 = 
rhs
.
_ªmŸe_d_id
;

301 
	g_v_cu°_idít_£À˘i⁄
 = 
rhs
.
_v_cu°_idít_£À˘i⁄
;

302 
	g_c_id
 = 
rhs
.
_c_id
;

303 
	g_h_amou¡
 = 
rhs
.
_h_amou¡
;

305 i‡(
	grhs
.
	g_c_œ°
) {

306 
°‹e_°rög
(
_c_œ°
, 
rhs
._c_last);

309  (*
	gthis
);

323 
∑ymít_öput_t
 
	$¸óã_∑ymít_öput
(
sf
, 
•ecificWH
)

326 
	`as£π
 (
sf
>0);

329 
∑ymít_öput_t
 
pö
;

331 #i‚de‡
USE_SAME_INPUT


333 if(
_ch™ge_lﬂd
) {

334 
pö
.
_home_wh_id
 = 
w_skewî
.
	`gë_öput
();

336 i‡(
•ecificWH
>0)

337 
pö
.
_home_wh_id
 = 
•ecificWH
;

339 
pö
.
_home_wh_id
 = 
	`UR™d
(1, 
sf
);

342 
pö
.
_home_d_id
 = 
	`UR™d
(1, 10);

343 
pö
.
_h_amou¡
 = ()
	`UR™d
(100, 500000)/()100.00;

344 
pö
.
_h_d©e
 = 
	`time
(
NULL
);

346 #i‚de‡
USE_ONLY_LOCAL_WHS


347 
pö
.
_v_cu°_wh_£À˘i⁄
 = 
	`UR™d
(1, 100);

348 i‡(
pö
.
_v_cu°_wh_£À˘i⁄
 <= 85) {

350 
pö
.
_ªmŸe_wh_id
 =Öö.
_home_wh_id
;

351 
pö
.
_ªmŸe_d_id
 =Öö.
_home_d_id
;

355 i‡(
sf
 == 1) {

356 
pö
.
_ªmŸe_wh_id
 = 1;

361 
pö
.
_ªmŸe_wh_id
 = 
	`UR™d
(1, 
sf
);

362 } 
pö
.
_home_wh_id
 =pö.
_ªmŸe_wh_id
);

364 
pö
.
_ªmŸe_d_id
 = 
	`UR™d
(1, 10);

367 
pö
.
_v_cu°_wh_£À˘i⁄
 = 50;

368 
pö
.
_ªmŸe_wh_id
 =Öö.
_home_wh_id
;

369 
pö
.
_ªmŸe_d_id
 =Öö.
_home_d_id
;

373 #ifde‡
USE_SAFE_PATHS


374 
pö
.
_v_cu°_idít_£À˘i⁄
 = 
	`UR™d
(61, 100);

376 
pö
.
_v_cu°_idít_£À˘i⁄
 = 
	`UR™d
(1, 100);

379 i‡(
pö
.
_v_cu°_idít_£À˘i⁄
 <= 60) {

381 
	`gíî©e_cu°_œ°
(
	`NUR™d
(255,0,999), 
pö
.
_c_œ°
);

384 
pö
.
_c_id
 = 
	`NUR™d
(1023, 1, 3000);

389 
pö
.
_home_wh_id
 = 1;

390 
pö
.
_home_d_id
 = 2;

391 
pö
.
_v_cu°_wh_£À˘i⁄
 = 80;

392 
pö
.
_ªmŸe_wh_id
 = 1;

393 
pö
.
_ªmŸe_d_id
 = 3;

394 
pö
.
_v_cu°_idít_£À˘i⁄
 = 50;

395 
pö
.
_c_id
 = 1500;

397 
pö
.
_h_amou¡
 = 1000.00;

398 
pö
.
_h_d©e
 = 
	`time
(
NULL
);

401  (
pö
);

403 
	}
};

411 
	g‹dî_°©us_öput_t
&

412 
	g‹dî_°©us_öput_t
::
›î©‹
(c⁄° 
‹dî_°©us_öput_t
& 
rhs
)

414 
_wh_id
 = 
rhs
._wh_id;

415 
	g_d_id
 = 
rhs
.
_d_id
;

416 
	g_c_£À˘
 = 
rhs
.
_c_£À˘
;

417 
	g_c_id
 = 
rhs
.
_c_id
;

419 
	g_o_id
 = 
rhs
.
_o_id
;

420 
	g_o_ﬁ_˙t
 = 
rhs
.
_o_ﬁ_˙t
;

422 i‡(
	grhs
.
	g_c_œ°
) {

423 
°‹e_°rög
(
_c_œ°
, 
rhs
._c_last);

426  (*
	gthis
);

440 
‹dî_°©us_öput_t
 
	$¸óã_‹dî_°©us_öput
(
sf
, 
•ecificWH
)

443 
	`as£π
 (
sf
 > 0);

446 
‹dî_°©us_öput_t
 
osö
;

448 #i‚de‡
USE_SAME_INPUT


450 if(
_ch™ge_lﬂd
) {

451 
osö
.
_wh_id
 = 
w_skewî
.
	`gë_öput
();

453 i‡(
•ecificWH
>0)

454 
osö
.
_wh_id
 = 
•ecificWH
;

456 
osö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

459 
osö
.
_d_id
 = 
	`UR™d
(1, 10);

461 #ifde‡
USE_SAFE_PATHS


462 
osö
.
_c_£À˘
 = 
	`UR™d
(61, 100);

464 
osö
.
_c_£À˘
 = 
	`UR™d
(1, 100);

467 i‡(
osö
.
_c_£À˘
 <= 60) {

469 
	`gíî©e_cu°_œ°
(
	`NUR™d
(255,0,999), 
osö
.
_c_œ°
);

472 
osö
.
_c_id
 = 
	`NUR™d
(1023, 1, 3000);

477 
osö
.
_wh_id
 = 1;

478 
osö
.
_d_id
 = 2;

479 
osö
.
_c_£À˘
 = 80;

480 
osö
.
_c_id
 = 3;

484  (
osö
);

486 
	}
};

494 
	gdñivîy_öput_t
&

495 
	gdñivîy_öput_t
::
›î©‹
(c⁄° 
dñivîy_öput_t
& 
rhs
)

497 
_wh_id
 = 
rhs
._wh_id;

498 
	g_ˇºõr_id
 = 
rhs
.
_ˇºõr_id
;

500  (*
	gthis
);

514 
dñivîy_öput_t
 
	$¸óã_dñivîy_öput
(
sf
, 
•ecificWH
)

517 
	`as£π
 (
sf
 > 0);

520 
dñivîy_öput_t
 
dö
;

522 #i‚de‡
USE_SAME_INPUT


524 if(
_ch™ge_lﬂd
) {

525 
dö
.
_wh_id
 = 
w_skewî
.
	`gë_öput
();

527 i‡(
•ecificWH
>0)

528 
dö
.
_wh_id
 = 
•ecificWH
;

530 
dö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

533 
dö
.
_ˇºõr_id
 = 
	`UR™d
(1, 10);

537 
dö
.
_wh_id
 = 1;

538 
dö
.
_ˇºõr_id
 = 1;

541  (
dö
);

543 
	}
};

551 
	g°ock_Àvñ_öput_t
&

552 
	g°ock_Àvñ_öput_t
::
›î©‹
(c⁄° 
°ock_Àvñ_öput_t
& 
rhs
)

554 
_wh_id
 = 
rhs
._wh_id;

555 
	g_d_id
 = 
rhs
.
_d_id
;

556 
	g_thªshﬁd
 = 
rhs
.
_thªshﬁd
;

558 
	g_√xt_o_id
 = 
rhs
.
_√xt_o_id
;

559 
	g_o_ﬁ_˙t
 = 
rhs
.
_o_ﬁ_˙t
;

560 
	g_pvwi
 = 
rhs
.
_pvwi
;

562  (*
	gthis
);

575 
°ock_Àvñ_öput_t
 
	$¸óã_°ock_Àvñ_öput
(
sf
, 
•ecificWH
)

578 
	`as£π
 (
sf
 > 0);

581 
°ock_Àvñ_öput_t
 
¶ö
;

583 #i‚de‡
USE_SAME_INPUT


585 if(
_ch™ge_lﬂd
) {

586 
¶ö
.
_wh_id
 = 
w_skewî
.
	`gë_öput
();

588 i‡(
•ecificWH
>0)

589 
¶ö
.
_wh_id
 = 
•ecificWH
;

591 
¶ö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

594 
¶ö
.
_d_id
 = 
	`UR™d
(1, 10);

595 
¶ö
.
_thªshﬁd
 = 
	`UR™d
(10, 20);

599 
¶ö
.
_wh_id
 = 1;

600 
¶ö
.
_d_id
 = 2;

601 
¶ö
.
_thªshﬁd
 = 15;

604  (
¶ö
);

606 
	}
};

614 
	gmbích_wh_öput_t
&

615 
	gmbích_wh_öput_t
::
›î©‹
(c⁄° 
mbích_wh_öput_t
& 
rhs
)

617 
_wh_id
 = 
rhs
._wh_id;

618 
	g_amou¡
 = 
rhs
.
_amou¡
;

619  (*
	gthis
);

633 
mbích_wh_öput_t
 
	$¸óã_mbích_wh_öput
(
sf
, 
•ecificWH
)

636 
	`as£π
 (
sf
 > 0);

638 
mbích_wh_öput_t
 
mwö
;

640 #i‚de‡
USE_SAME_INPUT


642 i‡(
•ecificWH
>0)

643 
mwö
.
_wh_id
 = 
•ecificWH
;

645 
mwö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

647 
mwö
.
_amou¡
 = ()
	`UR™d
(1,1000);

651 
mwö
.
_wh_id
 = 1;

652 
mwö
.
_amou¡
 = 150;

655  (
mwö
);

657 
	}
};

665 
	gmbích_cu°_öput_t
&

666 
	gmbích_cu°_öput_t
::
›î©‹
(c⁄° 
mbích_cu°_öput_t
& 
rhs
)

668 
_wh_id
 = 
rhs
._wh_id;

669 
	g_d_id
 = 
rhs
.
_d_id
;

670 
	g_c_id
 = 
rhs
.
_c_id
;

671 
	g_amou¡
 = 
rhs
.
_amou¡
;

672  (*
	gthis
);

688 
mbích_cu°_öput_t
 
	$¸óã_mbích_cu°_öput
(
sf
, 
•ecificWH
)

691 
	`as£π
 (
sf
 > 0);

693 
mbích_cu°_öput_t
 
mcö
;

695 #i‚de‡
USE_SAME_INPUT


697 i‡(
•ecificWH
>0)

698 
mcö
.
_wh_id
 = 
•ecificWH
;

700 
mcö
.
_wh_id
 = 
	`UR™d
(1, 
sf
);

702 
mcö
.
_d_id
 = 
	`UR™d
(1,10);

703 
mcö
.
_c_id
 = 
	`NUR™d
(1023,1,3000);

704 
mcö
.
_amou¡
 = ()
	`UR™d
(1,1000);

708 
mcö
.
_wh_id
 = 1;

709 
mcö
.
_d_id
 = 2;

710 
mcö
.
_c_id
 = 3;

711 
mcö
.
_amou¡
 = 15;

714  (
mcö
);

716 
	}
};

720 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpcc/tpcc_random.cpp

33 
	~"w‹klﬂd/çcc/çcc_øndom.h
"

34 
	~"w‹klﬂd/çcc/çcc_c⁄°.h
"

37 
ENTER_NAMESPACE
(
çcc
);

62 
	$øndom
(
low
, 
high
, 
øndgí_t
* 
Ω
) {

64  (
low
 + 
Ω
->
	`ønd
(
high
 -Üow + 1));

65 
	}
}

73 
	$UR™d
(
low
, 
high
)

75 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

76 
	`as£π
 (
£lf
);

77 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

78 
	`as£π
 (
øndgíp
);

80 
d
 = 
high
 - 
low
 + 1;

90  (
low
 + 
øndgíp
->
	`ønd
(
d
));

91 
	}
}

99 
	$NUR™d
(
A
, 
low
, 
high
)

101 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

102 
	`as£π
 (
£lf
);

103 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

104 
	`as£π
 (
øndgíp
);

106  ( (((
	`øndom
(0, 
A
, 
øndgíp
Ë|Ñ™dom(
low
, 
high
,Ñandgenp))

107 + 
	`øndom
(0, 
A
, 
øndgíp
))

108 % (
high
 - 
low
 + 1)) +Üow );

109 
	}
}

137 c⁄° * 
	gCUST_LAST
[10] = { "BAR", "OUGHT", "ABLE", "PRI", "PRES", "ESE",

141 
	$gíî©e_cu°_œ°
(
£À˘
, * 
de°
)

143 
	`as£π
 ((
£À˘
>=0) && (select<1000));

144 
	`as£π
 (
de°
);

146 
i1
, 
i2
, 
i3
;

148 
i3
 = 
£À˘
 % 10;

149 
i2
 = ((
£À˘
 % 100Ë- 
i3
) / 10;

150 
i1
 = (
£À˘
 - (select % 100)) / 100;

152 
iLí
 = ()(
	`°æí
(
CUST_LAST
[
i1
]Ë+ såÀn(CUST_LAST[
i2
]Ë+ såÀn(CUST_LAST[
i3
]) + 1);

154 
	`as£π
 (
iLí
 < 17);

156 
	`¢¥ötf
(
de°
, 
iLí
, "%s%s%s",

157 
CUST_LAST
[
i1
],

158 
CUST_LAST
[
i2
],

159 
CUST_LAST
[
i3
]);

160 
de°
[
iLí
] = '\0';

162  (
iLí
);

163 
	}
}

177 
	$øndom_x˘_ty≥
(
£À˘ed
)

179 
øndom_ty≥
 = 
£À˘ed
;

180 i‡(
øndom_ty≥
 < 0)

181 
øndom_ty≥
 = 
	`ønd
()%100;

182 
	`as£π
 (
øndom_ty≥
 >= 0);

184 
sum
 = 0;

185 
sum
+=
PROB_NEWORDER
;

186 i‡(
øndom_ty≥
 < 
sum
)

187  
XCT_NEW_ORDER
;

189 
sum
+=
PROB_PAYMENT
;

190 i‡(
øndom_ty≥
 < 
sum
)

191  
XCT_PAYMENT
;

193 
sum
+=
PROB_ORDER_STATUS
;

194 i‡(
øndom_ty≥
 < 
sum
)

195  
XCT_ORDER_STATUS
;

197 
sum
+=
PROB_DELIVERY
;

198 i‡(
øndom_ty≥
 < 
sum
) {

199 #w¨nög 
Dißblög
 
Dñivîy
 
‰om
 
the
 
TPC
-
C
 
Mix
. 
Ru¬ög
 
Paymít
 
ö°ód


200  
XCT_PAYMENT
;

204 
sum
+=
PROB_STOCK_LEVEL
;

205 i‡(
øndom_ty≥
 < 
sum
)

206  
XCT_STOCK_LEVEL
;

207 
	}
}

210 
EXIT_NAMESPACE
(
çcc
);

	@src/workload/tpce/egen/AddressTable.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 c⁄° 
UINT
 
	giUSACåyCode
 = 1;

42 c⁄° 
UINT
 
	giC™adaCåyCode
 = 2;

45 c⁄° 
	giSåìtNumbîMö
 = 100;

46 c⁄° 
	giSåìtNumbîMax
 = 25000;

49 c⁄° 
	giP˘Cu°omîsWôhNuŒAD_LINE_2
 = 60;

53 c⁄° 
	giP˘Cu°omîsWôhA±AD_LINE_2
 = 75;

56 c⁄° 
	giA∑πmítNumbîMö
 = 1;

57 c⁄° 
	giA∑πmítNumbîMax
 = 1000;

60 c⁄° 
	giSuôeNumbîMö
 = 1;

61 c⁄° 
	giSuôeNumbîMax
 = 500;

65 c⁄° 
	giRNGSkùO√RowAddªss
 = 10;

80 
	gCAddªssTabÀ
::
	$CAddªssTabÀ
(
CI≈utFûes
 
öputFûes
,

81 
TIdít
 
iCu°omîCou¡
,

82 
TIdít
 
iSèπFromCu°omî
,

83 
boﬁ
 
bCu°omîAddªs£sO∆y
,

84 
boﬁ
 
bCacheE«bÀd


86 : 
TabÀTem∂©e
<
ADDRESS_ROW
>()

87 , 
	`m_com∑nõs
(
öputFûes
.
Com∑ny
)

88 , 
	`m_Såìt
(
öputFûes
.
Såìt
)

89 , 
	`m_SåìtSuffix
(
öputFûes
.
SåìtSuffix
)

90 , 
	`m_ZùCode
(
öputFûes
.
ZùCode
)

91 , 
	`m_iSèπFromCu°omî
(
iSèπFromCu°omî
)

92 , 
	`m_iCu°omîCou¡
(
iCu°omîCou¡
)

93 , 
	`m_bCu°omîAddªs£sO∆y
(
bCu°omîAddªs£sO∆y
)

94 , 
	`m_bCu°omîAddªss
(
bCu°omîAddªs£sO∆y
)

95 , 
	$m_bCacheE«bÀd
(
bCacheE«bÀd
)

97 
m_iExch™geCou¡
 = 
öputFûes
.
Exch™ge
->
	`GëSize
();

98 
m_iCom∑nyCou¡
 = 
m_com∑nõs
->
	`GëC⁄figuªdCom∑nyCou¡
();

101 i‡(
bCu°omîAddªs£sO∆y
)

104 
m_iLa°RowNumbî
 = 
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
 + 
iSèπFromCu°omî
 - 1;

108 
m_iTŸÆAddªssCou¡
 = 
m_iLa°RowNumbî
 + 
m_iCu°omîCou¡
;

112 
m_iLa°RowNumbî
 = 
iSèπFromCu°omî
 - 1;

116 
m_iTŸÆAddªssCou¡
 = 
m_iLa°RowNumbî
 + 
m_iCu°omîCou¡
 + 
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
;

119 
m_row
.
AD_ID
 = 
m_iLa°RowNumbî
 + 
iTIdítShi·
;

121 i‡(
m_bCacheE«bÀd
)

123 
m_iCacheSize
 = ()
iDeÁu…LﬂdUnôSize
;

124 
m_iCacheOff£t
 = 
iTIdítShi·
 + 
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
 + 
m_iSèπFromCu°omî
;

125 
m_CacheZùCode
 = 
√w
 c⁄° 
TZùCodeI≈utRow
* [
m_iCacheSize
];

126 
i
=0; i<
m_iCacheSize
; i++)

128 
m_CacheZùCode
[
i
] = 
NULL
;

131 
	}
}

133 
	gCAddªssTabÀ
::~
	$CAddªssTabÀ
()

135 i‡(
m_bCacheE«bÀd
)

137 
dñëe
[] 
m_CacheZùCode
;

139 
	}
}

150 
	gCAddªssTabÀ
::
	$InôNextLﬂdUnô
()

152 
m_∫d
.
	`SëSìd
(m_∫d.
	`RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

153 (
RNGSEED
)
m_iLa°RowNumbî
 *

154 
iRNGSkùO√RowAddªss
));

156 
	`CÀ¨Rec‹d
();

158 i‡(
m_bCacheE«bÀd
)

160 
m_iCacheOff£t
 +
iDeÁu…LﬂdUnôSize
;

161 
i
=0; i<
m_iCacheSize
; i++)

163 
m_CacheZùCode
[
i
] = 
NULL
;

166 
	}
}

180 
TIdít
 
	gCAddªssTabÀ
::
	$Gíî©eNextAD_ID
()

184 i‡–
m_iLa°RowNumbî
 > (
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
)

185 && ( (
m_iLa°RowNumbî
 - (
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
ËË% 
iDeÁu…LﬂdUnôSize
 == 0))

187 
	`InôNextLﬂdUnô
();

190 ++
m_iLa°RowNumbî
;

194 
m_bCu°omîAddªss
 = 
m_iLa°RowNumbî
 >
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
;

197 
m_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < 
m_iTŸÆAddªssCou¡
;

199 
m_row
.
AD_ID
 = 
m_iLa°RowNumbî
 + 
iTIdítShi·
;

201  
m_row
.
AD_ID
;

202 
	}
}

213 
TIdít
 
	gCAddªssTabÀ
::
	$GëAD_IDF‹Cu°omî
(
TIdít
 
C_ID
)

215  
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
 + 
C_ID
;

216 
	}
}

228 
	gCAddªssTabÀ
::
	$Gíî©eAD_LINE_1
()

230 
iSåìtNum
 = 
m_∫d
.
	`RndI¡R™ge
(
iSåìtNumbîMö
, 
iSåìtNumbîMax
);

231 
iSåìtThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_Såìt
->
	`GëGª©e°Key
()-2);

232 
iSåìtSuffixThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_SåìtSuffix
->
	`GëGª©e°Key
()-1);

234 
	`¢¥ötf
(
m_row
.
AD_LINE1
, (m_row.AD_LINE1), "%d %s %s",

235 
iSåìtNum
,

236 (
m_Såìt
->
	`GëRec‹d
(
iSåìtThªshﬁd
))->
STREET
,

237 (
m_SåìtSuffix
->
	`GëRec‹d
(
iSåìtSuffixThªshﬁd
))->
SUFFIX
);

238 
	}
}

250 
	gCAddªssTabÀ
::
	$Gíî©eAD_LINE_2
()

252 i‡(!
m_bCu°omîAddªss
 || 
m_∫d
.
	`RndPî˚¡
(
iP˘Cu°omîsWôhNuŒAD_LINE_2
))

254 
m_row
.
AD_LINE2
[0] = '\0';

258 i‡(
m_∫d
.
	`RndPî˚¡
(
iP˘Cu°omîsWôhA±AD_LINE_2
))

260 
	`¢¥ötf
(
m_row
.
AD_LINE2
, (m_row.AD_LINE2),

261 "A±. %d", 
m_∫d
.
	`RndI¡R™ge
(
iA∑πmítNumbîMö
, 
iA∑πmítNumbîMax
));

265 
	`¢¥ötf
(
m_row
.
AD_LINE2
, (m_row.AD_LINE2),

266 "Suôê%d", 
m_∫d
.
	`RndI¡R™ge
(
iSuôeNumbîMö
, 
iSuôeNumbîMax
));

269 
	}
}

282 
	gCAddªssTabÀ
::
	$GëTownDivisi⁄ZùCodeThªshﬁd
(
TIdít
 
ADID
)

284 
RNGSEED
 
OldSìd
;

285 
iThªshﬁd
;

287 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

288 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£TownDivZù
, (
RNGSEED
)
ADID
 ));

289 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_ZùCode
->
	`GëGª©e°Key
()-1);

290 
m_∫d
.
	`SëSìd
–
OldSìd
 );

291 –
iThªshﬁd
 );

292 
	}
}

303 
UINT
 
	gCAddªssTabÀ
::
	$GëCou¡ryCode
–c⁄° *
szZùCode
 )

305 if(–'0' <
szZùCode
[0] )&&( szZipCode[0] <= '9' ))

308 –
iUSACåyCode
 );

313 –
iC™adaCåyCode
 );

315 
	}
}

329 
	gCAddªssTabÀ
::
	$GëDivisi⁄AndCou¡ryCodesF‹Addªss
(
TIdít
 
AD_ID
, 
UINT
 &
iDivCode
, UINT &
iCåyCode
)

331 c⁄° 
TZùCodeI≈utRow
* 
pZùCodeI≈utRow
 = 
NULL
;

336 
TIdít
 
ödex
 = 
AD_ID
 - 
m_iCacheOff£t
;

337 
boﬁ
 
bCheckCache
 = (
ödex
 >0 && index <
m_iCacheSize
);

338 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

340 
pZùCodeI≈utRow
 = 
m_CacheZùCode
[
ödex
];

343 i‡(
pZùCodeI≈utRow
 =
NULL
)

345 
iThªshﬁd
 = 
	`GëTownDivisi⁄ZùCodeThªshﬁd
(
AD_ID
);

347 
pZùCodeI≈utRow
 = 
m_ZùCode
->
	`GëRec‹d
(
iThªshﬁd
);

348 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

350 
m_CacheZùCode
[
ödex
] = 
pZùCodeI≈utRow
;

355 
iDivCode
 = 
pZùCodeI≈utRow
->
iDivisi⁄TaxKey
;

356 
iCåyCode
 = 
	`GëCou¡ryCode
–
pZùCodeI≈utRow
->
ZC_CODE
 );

357 
	}
}

370 
	gCAddªssTabÀ
::
	$Gíî©eAD_ZC_CODE_CTRY
()

372 
iThªshﬁd
;

373 c⁄° 
TZùCodeI≈utRow
* 
pZùCodeI≈utRow
;

375 
iThªshﬁd
 = 
	`GëTownDivisi⁄ZùCodeThªshﬁd
(
m_row
.
AD_ID
);

377 
pZùCodeI≈utRow
 = 
m_ZùCode
->
	`GëRec‹d
(
iThªshﬁd
);

379 
	`°∫˝y
–
m_row
.
AD_ZC_CODE
, 
pZùCodeI≈utRow
->
ZC_CODE
, ( m_row.AD_ZC_CODE ) );

381 if–
iUSACåyCode
 =
	`GëCou¡ryCode
–
pZùCodeI≈utRow
->
ZC_CODE
 ))

383 
	`°∫˝y
(
m_row
.
AD_CTRY
, "USA", (m_row.AD_CTRY));

387 
	`°∫˝y
(
m_row
.
AD_CTRY
, "CANADA", (m_row.AD_CTRY));

389 
	}
}

402 
boﬁ
 
	gCAddªssTabÀ
::
	$Gíî©eNextRec‹d
()

404 
	`Gíî©eNextAD_ID
();

405 
	`Gíî©eAD_LINE_1
();

406 
	`Gíî©eAD_LINE_2
();

407 
	`Gíî©eAD_ZC_CODE_CTRY
();

410  (
	`M‹eRec‹ds
());

411 
	}
}

	@src/workload/tpce/egen/BaseLogger.cpp

41 
	~<io°ªam
>

42 
	~<s°ªam
>

44 
	~"w‹klﬂd/ç˚/egí/EGíSènd¨dTy≥s.h
"

45 
	~"w‹klﬂd/ç˚/egí/DrivîTy≥s.h
"

46 
	~"w‹klﬂd/ç˚/egí/DrivîP¨amSëtögs.h
"

47 
	~"w‹klﬂd/ç˚/egí/Ba£Loggî.h
"

48 
	~"w‹klﬂd/ç˚/egí/Ba£LogF‹m©ãr.h
"

50 
usög
 
«me•a˚
 
	gTPCE
;

52 
	gTPCE
::
szDrivîTy≥Names
[
eDrivîMax
][14] =

62 
	gCBa£Loggî
::
	$CBa£Loggî
(
eDrivîTy≥
 
drvTy≥
, 
INT32
 
UniqueId
, 
CBa£LogF‹m©ãr
* 
pF‹m©ãr
)

63 : 
	$m_pLogF‹m©ãr
–
pF‹m©ãr
 )

65 
m_Vîsi⁄
[32];

68 
	`GëEGíVîsi⁄Såög
(
m_Vîsi⁄
, (m_Version));

71 
	`¢¥ötf
(&
m_Pªfix
[0], (m_Prefix), "%s (%s) %d",

72 
szDrivîTy≥Names
[
drvTy≥
], 
m_Vîsi⁄
, 
UniqueId
);

73 
	}
}

76 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(c⁄° *
szPªfix
, c⁄° *
szMsg
)

78 
CD©eTime
 
curTime
;

79  
	`SídToLoggîIm∂
(
szPªfix
, 
curTime
.
	`ToSå
(12), 
szMsg
);

80 
	}
}

83 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(c⁄° *
°r
)

85  
	`SídToLoggî
(
m_Pªfix
, 
°r
);

86 
	}
}

87 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
°rög
 
°r
)

89  
	`SídToLoggî
(
°r
.
	`c_°r
());

90 
	}
}

93 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CLﬂdîSëtögs
& 
∑rms
)

95  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

96 
	}
}

97 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CDrivîGlobÆSëtögs
& 
∑rms
)

99  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

100 
	}
}

102 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CDrivîCESëtögs
& 
∑rms
)

104  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

105 
	}
}

107 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CDrivîCEP¨tôi⁄Sëtögs
& 
∑rms
)

109  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

110 
	}
}

112 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CDrivîMEESëtögs
& 
∑rms
)

114  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

115 
	}
}

117 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CDrivîDMSëtögs
& 
∑rms
)

119  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

120 
	}
}

122 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CBrokîVﬁumeSëtögs
& 
∑rms
)

124  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

125 
	}
}

127 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CCu°omîPosôi⁄Sëtögs
& 
∑rms
)

129  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

130 
	}
}

132 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CM¨këW©chSëtögs
& 
∑rms
)

134  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

135 
	}
}

137 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CSecurôyDëaûSëtögs
& 
∑rms
)

139  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

140 
	}
}

142 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CTødeLookupSëtögs
& 
∑rms
)

144  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

145 
	}
}

147 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CTødeOrdîSëtögs
& 
∑rms
)

149  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

150 
	}
}

152 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CTødeUpd©eSëtögs
& 
∑rms
)

154  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

155 
	}
}

157 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
CTxnMixGíî©‹Sëtögs
& 
∑rms
)

159  
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
));

160 
	}
}

162 
boﬁ
 
	gCBa£Loggî
::
	$SídToLoggî
(
TDrivîCETxnSëtögs
& 
∑rms
)

164 
boﬁ
 
ªsu…
 = 
Ál£
;

166 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
BV_£âögs
));

167 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
CP_£âögs
));

168 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
MW_£âögs
));

169 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
SD_£âögs
));

170 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
TL_£âögs
));

171 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
TO_£âögs
));

172 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
TU_£âögs
));

173 
ªsu…
 |
	`SídToLoggî
(
m_pLogF‹m©ãr
->
	`GëLogOuçut
(
∑rms
.
TxnMixGíî©‹_£âögs
));

175  
ªsu…
;

176 
	}
}

	@src/workload/tpce/egen/CE.cpp

42 
	~"w‹klﬂd/ç˚/egí/CE.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

47 
	gCCE
::
	$Inôülize
–
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
 )

49 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîGlobÆSëtögs
);

53 if–
pTxnP¨amSëtögs
 )

55 
	`SëTxnTu«bÀs
–
pTxnP¨amSëtögs
 );

59 
	`SëTxnTu«bÀs
–&
m_DrivîCETxnSëtögs
 );

61 
	}
}

78 
	gCCE
::
	$AutoSëRNGSìds
–
UINT32
 
UniqueId
 )

80 
CD©eTime
 
Now
;

81 
INT32
 
Ba£Yór
;

82 
INT32
 
Tmp1
, 
Tmp2
;

84 
Now
.
	`GëYMD
–&
Ba£Yór
, &
Tmp1
, &
Tmp2
 );

87 
Ba£Yór
 -= ( BaseYear % 5 );

88 
CD©eTime
 
	`Ba£
–
Ba£Yór
, 1, 1 );

92 
RNGSEED
 
Sìd
;

93 
Sìd
 = 
Now
.
	`MSec
() / 100;

98 
Sìd
 <<= 11;

99 
Sìd
 +(
RNGSEED
)((
INT64
)
Now
.
	`DayNo
(Ë- (INT64)
Ba£
.DayNo());

105 
Sìd
 <<= 33;

109 
Sìd
 +
UniqueId
;

112 
m_TxnMixGíî©‹
.
	`SëRNGSìd
–
Sìd
 );

113 
m_DrivîCESëtögs
.
cur
.
TxnMixRNGSìd
 = 
Sìd
;

116 
Sìd
 |
	`UINT64_CONST
(0x0000000100000000);

117 
m_TxnI≈utGíî©‹
.
	`SëRNGSìd
–
Sìd
 );

118 
m_DrivîCESëtögs
.
cur
.
TxnI≈utRNGSìd
 = 
Sìd
;

119 
	}
}

127 
	gCCE
::
	$CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

128 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

129 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

130 
UINT32
 
UniqueId
,

131 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

132 : 
	`m_DrivîGlobÆSëtögs
–
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

133 , 
	`m_DrivîCESëtögs
–
UniqueId
, 0, 0 )

134 , 
	`m_pSUT
–
pSUT
 )

135 , 
	`m_pLoggî
 ( 
pLoggî
 )

136 , 
	`m_TxnMixGíî©‹
–&
m_DrivîCETxnSëtögs
, 
m_pLoggî
 )

137 , 
	`m_TxnI≈utGíî©‹
–
öputFûes
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 * 
HoursPîW‹kDay
, 
m_pLoggî
, &
m_DrivîCETxnSëtögs
 )

138 , 
	$m_bCÀ¨Buf„rBef‹eGíî©i⁄
(
Ál£
)

140 
m_pLoggî
->
	`SídToLoggî
("CE object constructed using constructor 1 (valid forÖublication: YES).");

142 
	`Inôülize
–
pDrivîCETxnSëtögs
 );

143 
	`AutoSëRNGSìds
–
UniqueId
 );

145 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCESëtögs
);

146 
	}
}

151 
	gCCE
::
	$CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

152 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

153 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

154 
UINT32
 
UniqueId
,

155 
RNGSEED
 
TxnMixRNGSìd
,

156 
RNGSEED
 
TxnI≈utRNGSìd
,

157 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

158 : 
	`m_DrivîGlobÆSëtögs
–
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

159 , 
	`m_DrivîCESëtögs
–
UniqueId
, 
TxnMixRNGSìd
, 
TxnI≈utRNGSìd
 )

160 , 
	`m_pSUT
–
pSUT
 )

161 , 
	`m_pLoggî
 ( 
pLoggî
 )

162 , 
	`m_TxnMixGíî©‹
–&
m_DrivîCETxnSëtögs
, 
TxnMixRNGSìd
, 
m_pLoggî
 )

163 , 
	`m_TxnI≈utGíî©‹
–
öputFûes
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 * 
HoursPîW‹kDay
, 
TxnI≈utRNGSìd
, 
m_pLoggî
, &
m_DrivîCETxnSëtögs
 )

164 , 
	$m_bCÀ¨Buf„rBef‹eGíî©i⁄
(
Ál£
)

166 
m_pLoggî
->
	`SídToLoggî
("CE object constructed using constructor 2 (valid forÖublication: NO).");

168 
	`Inôülize
–
pDrivîCETxnSëtögs
 );

170 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCESëtögs
);

171 
	}
}

176 
	gCCE
::
	$CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

177 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

178 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

179 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

180 
UINT32
 
UniqueId
,

181 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

182 : 
	`m_DrivîGlobÆSëtögs
–
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

183 , 
	`m_DrivîCESëtögs
–
UniqueId
, 0, 0 )

184 , 
	`m_DrivîCEP¨tôi⁄Sëtögs
–
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
 )

185 , 
	`m_pSUT
–
pSUT
 )

186 , 
	`m_pLoggî
 ( 
pLoggî
 )

187 , 
	`m_TxnMixGíî©‹
–&
m_DrivîCETxnSëtögs
, 
m_pLoggî
 )

188 , 
	`m_TxnI≈utGíî©‹
–
öputFûes
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 * 
HoursPîW‹kDay
,

189 
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
, 
m_pLoggî
, &
m_DrivîCETxnSëtögs
 )

190 , 
	$m_bCÀ¨Buf„rBef‹eGíî©i⁄
(
Ál£
)

192 
m_pLoggî
->
	`SídToLoggî
("CE object constructed using constructor 3 (valid forÖublication: YES).");

194 
	`Inôülize
–
pDrivîCETxnSëtögs
 );

195 
	`AutoSëRNGSìds
–
UniqueId
 );

197 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCEP¨tôi⁄Sëtögs
);

198 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCESëtögs
);

199 
	}
}

204 
	gCCE
::
	$CCE
–
CCESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
 &
öputFûes
,

205 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

206 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

207 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
,

208 
UINT32
 
UniqueId
,

209 
RNGSEED
 
TxnMixRNGSìd
,

210 
RNGSEED
 
TxnI≈utRNGSìd
,

211 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

212 : 
	`m_DrivîGlobÆSëtögs
–
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

213 , 
	`m_DrivîCESëtögs
–
UniqueId
, 
TxnMixRNGSìd
, 
TxnI≈utRNGSìd
 )

214 , 
	`m_DrivîCEP¨tôi⁄Sëtögs
–
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
 )

215 , 
	`m_pSUT
–
pSUT
 )

216 , 
	`m_pLoggî
 ( 
pLoggî
 )

217 , 
	`m_TxnMixGíî©‹
–&
m_DrivîCETxnSëtögs
, 
TxnMixRNGSìd
, 
m_pLoggî
 )

218 , 
	`m_TxnI≈utGíî©‹
–
öputFûes
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 * 
HoursPîW‹kDay
,

219 
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
, 
TxnI≈utRNGSìd
, 
m_pLoggî
, &
m_DrivîCETxnSëtögs
 )

220 , 
	$m_bCÀ¨Buf„rBef‹eGíî©i⁄
(
Ál£
)

222 
m_pLoggî
->
	`SídToLoggî
("CE object constructed using constructor 4 (valid forÖublication: NO).");

224 
	`Inôülize
–
pDrivîCETxnSëtögs
 );

226 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCEP¨tôi⁄Sëtögs
);

227 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîCESëtögs
);

228 
	}
}

230 
	gCCE
::~
	$CCE
( )

232 
m_pLoggî
->
	`SídToLoggî
("CE object destroyed.");

233 
	}
}

235 
RNGSEED
 
	gCCE
::
	$GëTxnI≈utGíî©‹RNGSìd
( )

237 –
m_TxnI≈utGíî©‹
.
	`GëRNGSìd
() );

238 
	}
}

240 
RNGSEED
 
	gCCE
::
	$GëTxnMixGíî©‹RNGSìd
( )

242 –
m_TxnMixGíî©‹
.
	`GëRNGSìd
() );

243 
	}
}

245 
boﬁ
 
	gCCE
::
	$SëTxnTu«bÀs
(c⁄° 
PDrivîCETxnSëtögs
 
pTxnP¨amSëtögs
)

247 if–
pTxnP¨amSëtögs
->
	`IsVÆid
() )

250 i‡(
pTxnP¨amSëtögs
 !&
m_DrivîCETxnSëtögs
)

252 
m_DrivîCETxnSëtögs
 = *
pTxnP¨amSëtögs
;

256 
m_TxnMixGíî©‹
.
	`Upd©eTu«bÀs
();

257 
m_TxnI≈utGíî©‹
.
	`Upd©eTu«bÀs
();

258  
åue
;

262  
Ál£
;

264 
	}
}

266 
	gCCE
::
	$DoTxn
( )

268 
iTxnTy≥
 = 
m_TxnMixGíî©‹
.
	`Gíî©eNextTxnTy≥
( );

270 i‡(
m_bCÀ¨Buf„rBef‹eGíî©i⁄
)

272 
	`ZîoI≈utBuf„r
(
iTxnTy≥
);

275  
iTxnTy≥
 )

277 
CCETxnMixGíî©‹
::
BROKER_VOLUME
:

278 
m_TxnI≈utGíî©‹
.
	`Gíî©eBrokîVﬁumeI≈ut
–
m_BrokîVﬁumeTxnI≈ut
 );

279 
m_pSUT
->
	`BrokîVﬁume
–&
m_BrokîVﬁumeTxnI≈ut
 );

281 
CCETxnMixGíî©‹
::
CUSTOMER_POSITION
:

282 
m_TxnI≈utGíî©‹
.
	`Gíî©eCu°omîPosôi⁄I≈ut
–
m_Cu°omîPosôi⁄TxnI≈ut
 );

283 
m_pSUT
->
	`Cu°omîPosôi⁄
–&
m_Cu°omîPosôi⁄TxnI≈ut
 );

285 
CCETxnMixGíî©‹
::
MARKET_WATCH
:

286 
m_TxnI≈utGíî©‹
.
	`Gíî©eM¨këW©chI≈ut
–
m_M¨këW©chTxnI≈ut
 );

287 
m_pSUT
->
	`M¨këW©ch
–&
m_M¨këW©chTxnI≈ut
 );

289 
CCETxnMixGíî©‹
::
SECURITY_DETAIL
:

290 
m_TxnI≈utGíî©‹
.
	`Gíî©eSecurôyDëaûI≈ut
–
m_SecurôyDëaûTxnI≈ut
 );

291 
m_pSUT
->
	`SecurôyDëaû
–&
m_SecurôyDëaûTxnI≈ut
 );

293 
CCETxnMixGíî©‹
::
TRADE_LOOKUP
:

294 
m_TxnI≈utGíî©‹
.
	`Gíî©eTødeLookupI≈ut
–
m_TødeLookupTxnI≈ut
 );

295 
m_pSUT
->
	`TødeLookup
–&
m_TødeLookupTxnI≈ut
 );

297 
CCETxnMixGíî©‹
::
TRADE_ORDER
:

298 
boﬁ
 
bExecut‹IsAccou¡Ow√r
;

299 
INT32
 
iTødeTy≥
;

300 
m_TxnI≈utGíî©‹
.
	`Gíî©eTødeOrdîI≈ut
–
m_TødeOrdîTxnI≈ut
, 
iTødeTy≥
, 
bExecut‹IsAccou¡Ow√r
 );

301 
m_pSUT
->
	`TødeOrdî
–&
m_TødeOrdîTxnI≈ut
, 
iTødeTy≥
, 
bExecut‹IsAccou¡Ow√r
 );

303 
CCETxnMixGíî©‹
::
TRADE_STATUS
:

304 
m_TxnI≈utGíî©‹
.
	`Gíî©eTødeSètusI≈ut
–
m_TødeSètusTxnI≈ut
 );

305 
m_pSUT
->
	`TødeSètus
–&
m_TødeSètusTxnI≈ut
 );

307 
CCETxnMixGíî©‹
::
TRADE_UPDATE
:

308 
m_TxnI≈utGíî©‹
.
	`Gíî©eTødeUpd©eI≈ut
–
m_TødeUpd©eTxnI≈ut
 );

309 
m_pSUT
->
	`TødeUpd©e
–&
m_TødeUpd©eTxnI≈ut
 );

312 
˚º
 << "CE: Gíî©ed iŒegÆÅønß˘i⁄" << 
ídl
;

313 
	`exô
(1);

315 
	}
}

326 
	gCCE
::
	$ZîoI≈utBuf„r
(
iTxnTy≥
)

328  
iTxnTy≥
 )

330 
CCETxnMixGíî©‹
::
BROKER_VOLUME
:

331 
	`mem£t
–&
m_BrokîVﬁumeTxnI≈ut
, 0, (m_BrokerVolumeTxnInput) );

333 
CCETxnMixGíî©‹
::
CUSTOMER_POSITION
:

334 
	`mem£t
–&
m_Cu°omîPosôi⁄TxnI≈ut
, 0, (m_CustomerPositionTxnInput) );

336 
CCETxnMixGíî©‹
::
MARKET_WATCH
:

337 
	`mem£t
–&
m_M¨këW©chTxnI≈ut
, 0, (m_MarketWatchTxnInput) );

339 
CCETxnMixGíî©‹
::
SECURITY_DETAIL
:

340 
	`mem£t
–&
m_SecurôyDëaûTxnI≈ut
, 0, (m_SecurityDetailTxnInput) );

342 
CCETxnMixGíî©‹
::
TRADE_LOOKUP
:

343 
	`mem£t
–&
m_TødeLookupTxnI≈ut
, 0, (m_TradeLookupTxnInput) );

345 
CCETxnMixGíî©‹
::
TRADE_ORDER
:

346 
	`mem£t
–&
m_TødeOrdîTxnI≈ut
, 0, (m_TradeOrderTxnInput) );

348 
CCETxnMixGíî©‹
::
TRADE_STATUS
:

349 
	`mem£t
–&
m_TødeSètusTxnI≈ut
, 0, (m_TradeStatusTxnInput) );

351 
CCETxnMixGíî©‹
::
TRADE_UPDATE
:

352 
	`mem£t
–&
m_TødeUpd©eTxnI≈ut
, 0, (m_TradeUpdateTxnInput) );

355 
	}
}

369 
	gCCE
::
	$SëCÀ¨Buf„rO±i⁄
(
boﬁ
 
bCÀ¨Buf„rBef‹eGíî©i⁄
)

371 
m_bCÀ¨Buf„rBef‹eGíî©i⁄
 = 
bCÀ¨Buf„rBef‹eGíî©i⁄
;

372 
	}
}

	@src/workload/tpce/egen/CETxnInputGenerator.cpp

37 
	~"w‹klﬂd/ç˚/egí/CETxnI≈utGíî©‹.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

56 
	gCCETxnI≈utGíî©‹
::
	$CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

57 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

58 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

59 
CBa£Loggî
 *
pLoggî
,

60 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

61 : 
	`m_∫d
(
RNGSìdBa£TxnI≈utGíî©‹
)

62 , 
	`m_Pîs⁄
(
öputFûes
, 0, 
Ál£
)

63 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
)

64 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

65 , 
	`m_Hﬁdögs
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

66 , 
	`m_Brokîs
(
öputFûes
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

67 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

68 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

69 , 
	`m_pIndu°rõs
(
öputFûes
.
Indu°ry
)

70 , 
	`m_pSe˘‹s
(
öputFûes
.
Se˘‹s
)

71 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

72 , 
	`m_pTødeTy≥
(
öputFûes
.
TødeTy≥
)

73 , 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

74 , 
	`m_pLoggî
–
pLoggî
 )

75 , 
	`m_iC⁄figuªdCu°omîCou¡
(
iC⁄figuªdCu°omîCou¡
)

76 , 
	`m_iA˘iveCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

77 , 
	`m_iMySèπögCu°omîId
(
iDeÁu…SèπFromCu°omî
)

78 , 
	`m_iMyCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

79 , 
	`m_iP¨tôi⁄Pî˚¡
(100)

80 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

81 , 
	$m_iHoursOfInôülTødes
(
iHoursOfInôülTødes
)

83 
	`Inôülize
();

84 
	}
}

105 
	gCCETxnI≈utGíî©‹
::
	$CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

106 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

107 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

108 
RNGSEED
 
RNGSìd
,

109 
CBa£Loggî
 *
pLoggî
,

110 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

111 : 
	`m_∫d
(
RNGSìd
)

112 , 
	`m_Pîs⁄
(
öputFûes
, 0, 
Ál£
)

113 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
)

114 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

115 , 
	`m_Hﬁdögs
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

116 , 
	`m_Brokîs
(
öputFûes
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

117 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

118 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

119 , 
	`m_pIndu°rõs
(
öputFûes
.
Indu°ry
)

120 , 
	`m_pSe˘‹s
(
öputFûes
.
Se˘‹s
)

121 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

122 , 
	`m_pTødeTy≥
(
öputFûes
.
TødeTy≥
)

123 , 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

124 , 
	`m_pLoggî
–
pLoggî
 )

125 , 
	`m_iC⁄figuªdCu°omîCou¡
(
iC⁄figuªdCu°omîCou¡
)

126 , 
	`m_iA˘iveCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

127 , 
	`m_iMySèπögCu°omîId
(
iDeÁu…SèπFromCu°omî
)

128 , 
	`m_iMyCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

129 , 
	`m_iP¨tôi⁄Pî˚¡
(100)

130 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

131 , 
	$m_iHoursOfInôülTødes
(
iHoursOfInôülTødes
)

133 
	`Inôülize
();

134 
	}
}

154 
	gCCETxnI≈utGíî©‹
::
	$CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

155 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

156 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

157 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

158 
CBa£Loggî
 *
pLoggî
,

159 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

160 : 
	`m_∫d
(
RNGSìdBa£TxnI≈utGíî©‹
)

161 , 
	`m_Pîs⁄
(
öputFûes
, 0, 
Ál£
)

162 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
, 
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
)

163 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

164 , 
	`m_Hﬁdögs
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

165 , 
	`m_Brokîs
(
öputFûes
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

166 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

167 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

168 , 
	`m_pIndu°rõs
(
öputFûes
.
Indu°ry
)

169 , 
	`m_pSe˘‹s
(
öputFûes
.
Se˘‹s
)

170 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

171 , 
	`m_pTødeTy≥
(
öputFûes
.
TødeTy≥
)

172 , 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

173 , 
	`m_pLoggî
–
pLoggî
 )

174 , 
	`m_iC⁄figuªdCu°omîCou¡
(
iC⁄figuªdCu°omîCou¡
)

175 , 
	`m_iA˘iveCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

176 , 
	`m_iMySèπögCu°omîId
(
iMySèπögCu°omîId
)

177 , 
	`m_iMyCu°omîCou¡
(
iMyCu°omîCou¡
)

178 , 
	`m_iP¨tôi⁄Pî˚¡
(
iP¨tôi⁄Pî˚¡
)

179 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

180 , 
	$m_iHoursOfInôülTødes
(
iHoursOfInôülTødes
)

182 
	`Inôülize
();

183 
	}
}

206 
	gCCETxnI≈utGíî©‹
::
	$CCETxnI≈utGíî©‹
–c⁄° 
CI≈utFûes
 &
öputFûes
,

207 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
,

208 
INT32
 
iSˇÀFa˘‹
, INT32 
iHoursOfInôülTødes
,

209 
TIdít
 
iMySèπögCu°omîId
, TIdíà
iMyCu°omîCou¡
, 
INT32
 
iP¨tôi⁄Pî˚¡
,

210 
RNGSEED
 
RNGSìd
,

211 
CBa£Loggî
 *
pLoggî
,

212 c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
 )

213 : 
	`m_∫d
(
RNGSìd
)

214 , 
	`m_Pîs⁄
(
öputFûes
, 0, 
Ál£
)

215 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
, 
iP¨tôi⁄Pî˚¡
, 
iMySèπögCu°omîId
, 
iMyCu°omîCou¡
)

216 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

217 , 
	`m_Hﬁdögs
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

218 , 
	`m_Brokîs
(
öputFûes
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

219 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

220 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

221 , 
	`m_pIndu°rõs
(
öputFûes
.
Indu°ry
)

222 , 
	`m_pSe˘‹s
(
öputFûes
.
Se˘‹s
)

223 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

224 , 
	`m_pTødeTy≥
(
öputFûes
.
TødeTy≥
)

225 , 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

226 , 
	`m_pLoggî
–
pLoggî
 )

227 , 
	`m_iC⁄figuªdCu°omîCou¡
(
iC⁄figuªdCu°omîCou¡
)

228 , 
	`m_iA˘iveCu°omîCou¡
(
iA˘iveCu°omîCou¡
)

229 , 
	`m_iMySèπögCu°omîId
(
iMySèπögCu°omîId
)

230 , 
	`m_iMyCu°omîCou¡
(
iMyCu°omîCou¡
)

231 , 
	`m_iP¨tôi⁄Pî˚¡
(
iP¨tôi⁄Pî˚¡
)

232 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

233 , 
	$m_iHoursOfInôülTødes
(
iHoursOfInôülTødes
)

235 
	`Inôülize
();

236 
	}
}

247 
	gCCETxnI≈utGíî©‹
::
	$Inôülize
()

249 
m_iA˘iveCom∑nyCou¡
 = 
m_pCom∑nõs
->
	`GëA˘iveCom∑nyCou¡
();

250 
m_iA˘iveSecurôyCou¡
 = 
m_pSecurôõs
->
	`GëA˘iveSecurôyCou¡
();

251 
m_iIndu°ryCou¡
 = 
m_pIndu°rõs
->
	`GëSize
();

252 
m_iSe˘‹Cou¡
 = 
m_pSe˘‹s
->
	`GëSize
();

253 
m_iSèπFromCom∑ny
 = 
m_pCom∑nõs
->
	`GëCom∑nyId
(0);

255 
m_iMaxA˘ivePªP›uœãdTødeID
 =

256 (
INT64
)(–(INT64)
m_iHoursOfInôülTødes
 * 
Sec⁄dsPîHour
 * ( 
m_iA˘iveCu°omîCou¡
 / 
m_iSˇÀFa˘‹
 )Ë* 
iAb‹tTøde
 / 
	`INT64_CONST
(100) );

259 
m_SèπTime
.
	`Së
(

260 
InôülTødeP›uœti⁄Ba£Yór
,

261 
InôülTødeP›uœti⁄Ba£M⁄th
,

262 
InôülTødeP›uœti⁄Ba£Day
,

263 
InôülTødeP›uœti⁄Ba£Hour
,

264 
InôülTødeP›uœti⁄Ba£Möuã
,

265 
InôülTødeP›uœti⁄Ba£Sec⁄d
,

266 
InôülTødeP›uœti⁄Ba£Fø˘i⁄
 );

268 
	`Upd©eTu«bÀs
();

270 
	}
}

281 
RNGSEED
 
	gCCETxnI≈utGíî©‹
::
	$GëRNGSìd
( )

283 –
m_∫d
.
	`GëSìd
() );

284 
	}
}

295 
	gCCETxnI≈utGíî©‹
::
	$SëRNGSìd
–
RNGSEED
 
RNGSìd
 )

297 
m_∫d
.
	`SëSìd
–
RNGSìd
 );

298 
	}
}

311 
	gCCETxnI≈utGíî©‹
::
	$Upd©eTu«bÀs
( )

313 
INT64
 
£c⁄dsOfInôülTødes
 = (INT64)
m_iHoursOfInôülTødes
 * 
Sec⁄dsPîHour
;

315 
m_iTødeLookupFøme2MaxTimeInMûliSec⁄ds
 =

316 (
INT64
)(
£c⁄dsOfInôülTødes
 -

317 ((
INT64
)
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
BackOffFromEndTimeFøme2
 )Ë* 
MsPîSec⁄d
;

320 
m_iTødeLookupFøme3MaxTimeInMûliSec⁄ds
 =

321 (
INT64
)(
£c⁄dsOfInôülTødes
 -

322 ((
INT64
)
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
BackOffFromEndTimeFøme3
 )Ë* 
MsPîSec⁄d
;

324 
m_iTødeLookupFøme4MaxTimeInMûliSec⁄ds
 =

325 (
INT64
)(
£c⁄dsOfInôülTødes
 -

326 ((
INT64
)
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
BackOffFromEndTimeFøme4
 )Ë* 
MsPîSec⁄d
;

328 
m_iTødeUpd©eFøme2MaxTimeInMûliSec⁄ds
 =

329 (
INT64
)(
£c⁄dsOfInôülTødes
 -

330 ((
INT64
)
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
BackOffFromEndTimeFøme2
 )Ë* 
MsPîSec⁄d
;

332 
m_iTødeUpd©eFøme3MaxTimeInMûliSec⁄ds
 =

333 (
INT64
)(
£c⁄dsOfInôülTødes
 -

334 ((
INT64
)
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
BackOffFromEndTimeFøme3
 )Ë* 
MsPîSec⁄d
;

338 
m_EndTime
 = 
m_SèπTime
;

339 
m_EndTime
.
	`AddW‹kMs
–(
INT64
)(
£c⁄dsOfInôülTødes
 +

340 15 * 
Sec⁄dsPîMöuã
Ë* 
MsPîSec⁄d
 );

344 
m_iTødeOrdîRﬁlbackLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeOrdîMixLevñ
;

345 
m_iTødeOrdîRﬁlbackLevñ
 = 
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
rﬁlback
;

348 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
BV_£âögs
);

349 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
CP_£âögs
);

350 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
MW_£âögs
);

351 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
SD_£âögs
);

352 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
TL_£âögs
);

353 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
);

354 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
TU_£âögs
);

356 
	}
}

368 
ölöe
 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eN⁄Unif‹mR™domCu°omîId
(
TIdít
 &
iCu°omîId
, 
eCu°omîTõr
 &
iCu°omîTõr
)

370 
m_Cu°omîSñe˘i⁄
.
	`Gíî©eR™domCu°omî
(
iCu°omîId
, 
iCu°omîTõr
);

371 
	}
}

382 
TIdít
 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eR™domCu°omîAccou¡Id
()

384 
TIdít
 
iCu°omîId
;

385 
TIdít
 
iCu°omîAccou¡Id
;

386 
eCu°omîTõr
 
iCu°omîTõr
;

388 
m_Cu°omîSñe˘i⁄
.
	`Gíî©eR™domCu°omî
(
iCu°omîId
, 
iCu°omîTõr
);

389 
iCu°omîAccou¡Id
 = 
m_AccsAndPîms
.
	`Gíî©eR™domAccou¡Id
–
m_∫d
, 
iCu°omîId
, 
iCu°omîTõr
);

391 (
iCu°omîAccou¡Id
);

392 
	}
}

404 
TTøde
 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eN⁄Unif‹mTødeID
–
INT32
 
AVÆue
, INT32 
SVÆue
 )

406 
TTøde
 
TødeId
;

408 
TødeId
 = 
m_∫d
.
	`NURnd
–1, 
m_iMaxA˘ivePªP›uœãdTødeID
, 
AVÆue
, 
SVÆue
 );

411 i‡–
m_Hﬁdögs
.
	`IsAb‹ãdTøde
(
TødeId
) )

413 
TødeId
++;

416 
TødeId
 +
iTTødeShi·
;

418 –
TødeId
 );

419 
	}
}

433 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eN⁄Unif‹mTødeDTS
–
TPCE
::
TIMESTAMP_STRUCT
 &
dts
, 
INT64
 
MaxTimeInMûliSec⁄ds
, 
INT32
 
AVÆue
, INT32 
SVÆue
 )

435 
CD©eTime
 
	`TødeTime
–
InôülTødeP›uœti⁄Ba£Yór
,

436 
InôülTødeP›uœti⁄Ba£M⁄th
,

437 
InôülTødeP›uœti⁄Ba£Day
,

438 
InôülTødeP›uœti⁄Ba£Hour
,

439 
InôülTødeP›uœti⁄Ba£Möuã
,

440 
InôülTødeP›uœti⁄Ba£Sec⁄d
,

441 
InôülTødeP›uœti⁄Ba£Fø˘i⁄
 );

443 
INT64
 
TødeTimeOff£t
;

447 
TødeTimeOff£t
 = 
m_∫d
.
	`NURnd
–1, 
MaxTimeInMûliSec⁄ds
, 
AVÆue
, 
SVÆue
 );

454 
TødeTime
.
	`AddW‹kMs
–
TødeTimeOff£t
 );

455 
TødeTime
.
	`GëTimeSèmp
–&
dts
 );

456 
	}
}

467 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eBrokîVﬁumeI≈ut
(
TBrokîVﬁumeTxnI≈ut
 &
TxnReq
)

469 
INT32
 
iNumBrokîs
;

470 
INT32
 
iCou¡
, 
i
;

471 
TIdít
 
B_ID
[
max_brokî_li°_Àn
];

472 
INT32
 
iSe˘‹Index
;

475 
i
 = 0; i < 
max_brokî_li°_Àn
; ++i)

477 
TxnReq
.
brokî_li°
[
i
][0] = '\0';

483 
iNumBrokîs
 = 
m_∫d
.
	`RndI¡R™ge
(
mö_brokî_li°_Àn
, 
max_brokî_li°_Àn
);

487 i‡(
iNumBrokîs
 > 
m_Brokîs
.
	`GëBrokîCou¡
())

489 
iNumBrokîs
 = (
INT32
)
m_Brokîs
.
	`GëBrokîCou¡
();

492 
iCou¡
 = 0;

496 
B_ID
[
iCou¡
] = 
m_Brokîs
.
	`Gíî©eR™domBrokîId
(&
m_∫d
);

498 
i
 = 0; (ò< 
iCou¡
Ë&& (
B_ID
[i] != B_ID[iCount]); ++i) { };

500 i‡(
i
 =
iCou¡
)

503 
m_Brokîs
.
	`Gíî©eBrokîName
(
B_ID
[
iCou¡
], 
TxnReq
.
brokî_li°
[iCou¡], 
°©ic_ˇ°
<>((TxnReq.broker_list[iCount])));

504 ++
iCou¡
;

507 } 
iCou¡
 < 
iNumBrokîs
);

510 
iSe˘‹Index
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_iSe˘‹Cou¡
-1);

512 
	`°∫˝y
(
TxnReq
.
£˘‹_«me
,

513 
m_pSe˘‹s
->
	`GëRec‹d
(
iSe˘‹Index
)->
SC_NAME
,

514 (
TxnReq
.
£˘‹_«me
));

515 
	}
}

526 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eCu°omîPosôi⁄I≈ut
(
TCu°omîPosôi⁄TxnI≈ut
 &
TxnReq
)

528 
TIdít
 
iCu°omîId
;

529 
eCu°omîTõr
 
iCu°omîTõr
;

531 
	`Gíî©eN⁄Unif‹mR™domCu°omîId
(
iCu°omîId
, 
iCu°omîTõr
);

533 i‡(
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
CP_£âögs
.
cur
.
by_èx_id
))

536 
m_Pîs⁄
.
	`GëTaxID
(
iCu°omîId
, 
TxnReq
.
èx_id
);

538 
TxnReq
.
cu°_id
 = 0;

543 
TxnReq
.
cu°_id
 = 
iCu°omîId
;

545 
TxnReq
.
èx_id
[0] = '\0';

548 
TxnReq
.
gë_hi°‹y
 = 
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
CP_£âögs
.
cur
.get_history);

549 if–
TxnReq
.
gë_hi°‹y
 )

551 
TxnReq
.
ac˘_id_idx
 = 
m_∫d
.
	`RndI¡R™ge
–0, 
m_AccsAndPîms
.
	`GëNumbîOfAccou¡s
–
iCu°omîId
, 
iCu°omîTõr
 ) - 1 );

555 
TxnReq
.
ac˘_id_idx
 = -1;

557 
	}
}

568 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eM¨këW©chI≈ut
(
TM¨këW©chTxnI≈ut
 &
TxnReq
)

570 
TIdít
 
iCu°omîId
;

571 
eCu°omîTõr
 
iCu°omîTõr
;

572 
INT32
 
iThªshﬁd
;

573 
INT32
 
iWìk
;

574 
INT32
 
iDaûyM¨këDay
;

575 
CD©eTime
 
	`SèπD©e
(
iDaûyM¨këBa£Yór
, 
iDaûyM¨këBa£M⁄th
,

576 
iDaûyM¨këBa£Day
, 
iDaûyM¨këBa£Hour
,

577 
iDaûyM¨këBa£Möuã
, 
iDaûyM¨këBa£Sec⁄d
, 
iDaûyM¨këBa£M£c
);

579 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

582 i‡(
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
MW_£âögs
.
cur
.
by_ödu°ry
)

585 
	`°∫˝y
(
TxnReq
.
ödu°ry_«me
,

586 
m_pIndu°rõs
->
	`GëRec‹d
(
m_∫d
.
	`RndI¡R™ge
(0, 
m_iIndu°ryCou¡
-1))->
IN_NAME
,

587 (
TxnReq
.
ödu°ry_«me
));

589 
TxnReq
.
c_id
 = TxnReq.
ac˘_id
 = 0;

591 if–
iBa£Com∑nyCou¡
 < 
m_iA˘iveCom∑nyCou¡
 )

593 
TxnReq
.
°¨tög_co_id
 = 
m_∫d
.
	`RndI¡64R™ge
–
m_iSèπFromCom∑ny
,

594 
m_iSèπFromCom∑ny
 +

595 
m_iA˘iveCom∑nyCou¡
 - ( 
iBa£Com∑nyCou¡
 - 1 ));

596 
TxnReq
.
ídög_co_id
 = TxnReq.
°¨tög_co_id
 + ( 
iBa£Com∑nyCou¡
 - 1 );

600 
TxnReq
.
°¨tög_co_id
 = 
m_iSèπFromCom∑ny
;

601 
TxnReq
.
ídög_co_id
 = 
m_iSèπFromCom∑ny
 + 
m_iA˘iveCom∑nyCou¡
 - 1;

606 
TxnReq
.
ödu°ry_«me
[0] = '\0';

607 
TxnReq
.
°¨tög_co_id
 = 0;

608 
TxnReq
.
ídög_co_id
 = 0;

610 i‡(
iThªshﬁd
 <(
m_pDrivîCETxnSëtögs
->
MW_£âögs
.
cur
.
by_ödu°ry
 + m_pDrivîCETxnSëtögs->MW_£âögs.cur.
by_w©ch_li°
))

613 
	`Gíî©eN⁄Unif‹mR™domCu°omîId
(
TxnReq
.
c_id
, 
iCu°omîTõr
);

615 
TxnReq
.
ac˘_id
 = 0;

620 
	`Gíî©eN⁄Unif‹mR™domCu°omîId
(
iCu°omîId
, 
iCu°omîTõr
);

621 
m_AccsAndPîms
.
	`Gíî©eR™domAccou¡Id
(
m_∫d
, 
iCu°omîId
, 
iCu°omîTõr
, &
TxnReq
.
ac˘_id
, 
NULL
);

623 
TxnReq
.
c_id
 = 0;

629 
iWìk
 = (
INT32
)
m_∫d
.
	`NURnd
(0, 255, 255, 0) + 5;

633 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

634 i‡(
iThªshﬁd
 > 40)

636 
iDaûyM¨këDay
 = 
iWìk
 * 
DaysPîWìk
 + 4;

640 i‡(
iThªshﬁd
 <= 20)

642 
iDaûyM¨këDay
 = 
iWìk
 * 
DaysPîWìk
;

646 i‡(
iThªshﬁd
 <= 27)

648 
iDaûyM¨këDay
 = 
iWìk
 * 
DaysPîWìk
 + 1;

652 i‡(
iThªshﬁd
 <= 33)

654 
iDaûyM¨këDay
 = 
iWìk
 * 
DaysPîWìk
 + 2;

658 
iDaûyM¨këDay
 = 
iWìk
 * 
DaysPîWìk
 + 3;

666 
SèπD©e
.
	`Add
(
iDaûyM¨këDay
, 0);

668 
SèπD©e
.
	`GëTimeSèmp
(&
TxnReq
.
°¨t_day
);

669 
	}
}

680 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eSecurôyDëaûI≈ut
(
TSecurôyDëaûTxnI≈ut
 &
TxnReq
)

682 
CD©eTime
 
	`SèπD©e
(
iDaûyM¨këBa£Yór
, 
iDaûyM¨këBa£M⁄th
,

683 
iDaûyM¨këBa£Day
, 
iDaûyM¨këBa£Hour
,

684 
iDaûyM¨këBa£Möuã
, 
iDaûyM¨këBa£Sec⁄d
, 
iDaûyM¨këBa£M£c
);

685 
INT32
 
iSèπDay
;

688 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
m_∫d
.
	`RndI¡64R™ge
(0, 
m_iA˘iveSecurôyCou¡
-1), 
TxnReq
.
symbﬁ
, 
°©ic_ˇ°
<>(( TxnReq.symbol )));

691 
TxnReq
.
ac˚ss_lob_Êag
 = 
m_∫d
.
	`RndPî˚¡
–
m_pDrivîCETxnSëtögs
->
SD_£âögs
.
cur
.
LOBAc˚ssPî˚¡age
 );

694 
TxnReq
.
max_rows_to_ªtu∫
 = 
m_∫d
.
	`RndI¡R™ge
(
iSecurôyDëaûMöRows
, 
iSecurôyDëaûMaxRows
);

696 
iSèπDay
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
iDaûyM¨këTŸÆRows
 - 
TxnReq
.
max_rows_to_ªtu∫
);

699 
SèπD©e
.
	`Add
(
iSèπDay
, 0);

701 
SèπD©e
.
	`GëTimeSèmp
(&
TxnReq
.
°¨t_day
);

702 
	}
}

713 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eTødeLookupI≈ut
(
TTødeLookupTxnI≈ut
 &
TxnReq
)

715 
INT32
 
iThªshﬁd
;

717 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

719 if–
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame1
 )

722 
TxnReq
.
‰ame_to_execuã
 = 1;

723 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
MaxRowsFøme1
;

726 
ii
, 
jj
;

727 
boﬁ
 
Ac˚±ed
;

728 
TTøde
 
TID
;

730  
ii
 = 0; iò< 
TxnReq
.
max_åades
; ii++ )

732 
Ac˚±ed
 = 
Ál£
;

733  ! 
Ac˚±ed
 )

735 
TID
 = 
	`Gíî©eN⁄Unif‹mTødeID
(
TødeLookupAVÆueF‹TødeIDGíFøme1
,

736 
TødeLookupSVÆueF‹TødeIDGíFøme1
);

737 
jj
 = 0;

738  
jj
 < 
ii
 && 
TxnReq
.
åade_id
[jj] !
TID
 )

740 
jj
++;

742 if–
jj
 =
ii
 )

745 
TxnReq
.
åade_id
[
ii
] = 
TID
;

746 
Ac˚±ed
 = 
åue
;

752 
TxnReq
.
ac˘_id
 = 0;

753 
TxnReq
.
max_ac˘_id
 = 0;

754 
	`mem£t
–
TxnReq
.
symbﬁ
, 0, ( TxnReq.symbol ));

755 
	`mem£t
–&
TxnReq
.
°¨t_åade_dts
, 0, ( TxnReq.start_trade_dts ));

756 
	`mem£t
–&
TxnReq
.
íd_åade_dts
, 0, ( TxnReq.end_trade_dts ));

759 if–
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame1
 +

760 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame2
 )

763 
TxnReq
.
‰ame_to_execuã
 = 2;

764 
TxnReq
.
ac˘_id
 = 
	`Gíî©eR™domCu°omîAccou¡Id
();

765 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
MaxRowsFøme2
;

767 
	`Gíî©eN⁄Unif‹mTødeDTS
–
TxnReq
.
°¨t_åade_dts
,

768 
m_iTødeLookupFøme2MaxTimeInMûliSec⁄ds
,

769 
TødeLookupAVÆueF‹TimeGíFøme2
,

770 
TødeLookupSVÆueF‹TimeGíFøme2
 );

773 
m_EndTime
.
	`GëTimeSèmp
(&
TxnReq
.
íd_åade_dts
);

776 
TxnReq
.
max_ac˘_id
 = 0;

777 
	`mem£t
–
TxnReq
.
symbﬁ
, 0, ( TxnReq.symbol ));

778 
	`mem£t
–
TxnReq
.
åade_id
, 0, ( TxnReq.trade_id ));

781 if–
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame1
 +

782 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame2
 +

783 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
do_‰ame3
 )

786 
TxnReq
.
‰ame_to_execuã
 = 3;

787 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TL_£âögs
.
cur
.
MaxRowsFøme3
;

789 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
m_∫d
.
	`NURnd
–0, 
m_iA˘iveSecurôyCou¡
-1,

790 
TødeLookupAVÆueF‹SymbﬁFøme3
,

791 
TødeLookupSVÆueF‹SymbﬁFøme3
 ),

792 
TxnReq
.
symbﬁ
,

793 
°©ic_ˇ°
<>(–
TxnReq
.
symbﬁ
 )));

795 
	`Gíî©eN⁄Unif‹mTødeDTS
–
TxnReq
.
°¨t_åade_dts
,

796 
m_iTødeLookupFøme3MaxTimeInMûliSec⁄ds
,

797 
TødeLookupAVÆueF‹TimeGíFøme3
,

798 
TødeLookupSVÆueF‹TimeGíFøme3
 );

801 
m_EndTime
.
	`GëTimeSèmp
(&
TxnReq
.
íd_åade_dts
);

803 
TxnReq
.
max_ac˘_id
 = 
m_AccsAndPîms
.
	`GëEndögCA_ID
–
m_iA˘iveCu°omîCou¡
 );

805 
TxnReq
.
ac˘_id
 = 0;

806 
	`mem£t
–
TxnReq
.
åade_id
, 0, ( TxnReq.trade_id ));

812 
TxnReq
.
‰ame_to_execuã
 = 4;

813 
TxnReq
.
ac˘_id
 = 
	`Gíî©eR™domCu°omîAccou¡Id
();

814 
	`Gíî©eN⁄Unif‹mTødeDTS
–
TxnReq
.
°¨t_åade_dts
,

815 
m_iTødeLookupFøme4MaxTimeInMûliSec⁄ds
,

816 
TødeLookupAVÆueF‹TimeGíFøme4
,

817 
TødeLookupSVÆueF‹TimeGíFøme4
 );

820 
TxnReq
.
max_åades
 = 0;

821 
TxnReq
.
max_ac˘_id
 = 0;

822 
	`mem£t
–
TxnReq
.
symbﬁ
, 0, ( TxnReq.symbol ));

823 
	`mem£t
–
TxnReq
.
åade_id
, 0, ( TxnReq.trade_id ));

826 
	}
}

839 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eTødeOrdîI≈ut
(
TTødeOrdîTxnI≈ut
 &
TxnReq
, 
INT32
 &
iTødeTy≥
, 
boﬁ
 &
bExecut‹IsAccou¡Ow√r
)

841 
TIdít
 
iCu°omîId
;

842 
eCu°omîTõr
 
iCu°omîTõr
;

843 
TIdít
 
CID_1
, 
CID_2
;

844 
boﬁ
 
bM¨kë
;

845 
INT32
 
iAddôi⁄ÆPîms
;

846 
UINT
 
iSymbIndex
;

847 
TIdít
 
iFœtFûeSymbIndex
;

848 
eTødeTy≥ID
 
eTødeTy≥
;

852 
	`Gíî©eN⁄Unif‹mR™domCu°omîId
(
iCu°omîId
, 
iCu°omîTõr
);

856 
m_Hﬁdögs
.
	`Gíî©eR™domAccou¡Securôy
(
iCu°omîId
,

857 
iCu°omîTõr
,

858 &
TxnReq
.
ac˘_id
,

859 &
iFœtFûeSymbIndex
,

860 &
iSymbIndex
);

863 
iAddôi⁄ÆPîms
 = 
m_AccsAndPîms
.
	`GëNumPîmsF‹CA
(
TxnReq
.
ac˘_id
);

865 i‡(
iAddôi⁄ÆPîms
 == 0)

867 
m_Pîs⁄
.
	`GëFú°La°AndTaxID
(
iCu°omîId
, 
TxnReq
.
exec_f_«me
,

868 
TxnReq
.
exec_l_«me
, TxnReq.
exec_èx_id
);

870 
bExecut‹IsAccou¡Ow√r
 = 
åue
;

883 
exec_is_ow√r
 = (
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.exec_is_ow√∏- 
iPî˚¡Accou¡Addôi⁄ÆPîmissi⁄s_0
) * 100 / (100 - iPercentAccountAdditionalPermissions_0);

885 i‡–
m_∫d
.
	`RndPî˚¡
(
exec_is_ow√r
) )

887 
m_Pîs⁄
.
	`GëFú°La°AndTaxID
(
iCu°omîId
, 
TxnReq
.
exec_f_«me
,

888 
TxnReq
.
exec_l_«me
, TxnReq.
exec_èx_id
);

890 
bExecut‹IsAccou¡Ow√r
 = 
åue
;

894 i‡(
iAddôi⁄ÆPîms
 == 1)

897 
m_AccsAndPîms
.
	`GëCIDsF‹Pîmissi⁄s
(
TxnReq
.
ac˘_id
, 
iCu°omîId
, &
CID_1
, 
NULL
);

899 
m_Pîs⁄
.
	`GëFú°La°AndTaxID
(
CID_1
, 
TxnReq
.
exec_f_«me
,

900 
TxnReq
.
exec_l_«me
, TxnReq.
exec_èx_id
);

905 
m_AccsAndPîms
.
	`GëCIDsF‹Pîmissi⁄s
(
TxnReq
.
ac˘_id
, 
iCu°omîId
, &
CID_1
, &
CID_2
);

907 
m_Pîs⁄
.
	`GëFú°La°AndTaxID
(
CID_2
, 
TxnReq
.
exec_f_«me
,

908 
TxnReq
.
exec_l_«me
, TxnReq.
exec_èx_id
);

911 
bExecut‹IsAccou¡Ow√r
 = 
Ál£
;

919 i‡(
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
£curôy_by_symbﬁ
))

922 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
iFœtFûeSymbIndex
, 
TxnReq
.
symbﬁ
, 
°©ic_ˇ°
<>(( TxnReq.symbol )));

924 
TxnReq
.
co_«me
[0] = '\0';

925 
TxnReq
.
issue
[0] = '\0';

930 
m_pCom∑nõs
->
	`Cª©eName
–
m_pSecurôõs
->
	`GëCom∑nyIndex
–
iFœtFûeSymbIndex
 ), 
TxnReq
.
co_«me
, 
°©ic_ˇ°
<>(( TxnReq.co_name )));

932 
	`°∫˝y
(
TxnReq
.
issue
, 
m_pSecurôõs
->
	`GëRec‹d
(
iFœtFûeSymbIndex
)->
S_ISSUE
,

933 (
TxnReq
.
issue
));

935 
TxnReq
.
symbﬁ
[0] = '\0';

938 
TxnReq
.
åade_qty
 = 
cTRADE_QTY_SIZES
[
m_∫d
.
	`RndI¡R™ge
(0, 
cNUM_TRADE_QTY_SIZES
 - 1)];

939 
TxnReq
.
ªque°ed_¥i˚
 = 
m_∫d
.
	`RndDoubÀIn¸R™ge
(
fMöSecPri˚
, 
fMaxSecPri˚
, 0.01);

942 
bM¨kë
 = 
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
m¨kë
);

945 i‡(
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
buy_‹dîs
))

947 i‡(
bM¨kë
)

950 
eTødeTy≥
 = 
eM¨këBuy
;

955 
eTødeTy≥
 = 
eLimôBuy
;

959 
TxnReq
.
ty≥_is_m¨gö
 = 
m_∫d
.
	`RndPî˚¡
(

961 
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
ty≥_is_m¨gö
 *

963 
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
buy_‹dîs
);

967 i‡(
bM¨kë
)

970 
eTødeTy≥
 = 
eM¨këSñl
;

975 i‡(
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
°›_loss
))

978 
eTødeTy≥
 = 
eSt›Loss
;

983 
eTødeTy≥
 = 
eLimôSñl
;

987 
TxnReq
.
ty≥_is_m¨gö
 = 
Ál£
;

989 
iTødeTy≥
 = 
eTødeTy≥
;

992 
TxnReq
.
is_lifo
 = 
m_∫d
.
	`RndPî˚¡
(
m_pDrivîCETxnSëtögs
->
TO_£âögs
.
cur
.
lifo
);

995 
	`°∫˝y
(
TxnReq
.
åade_ty≥_id
,

996 (
m_pTødeTy≥
->
	`GëRec‹d
(
eTødeTy≥
))->
TT_ID
,

997 (
TxnReq
.
åade_ty≥_id
));

1000 
	`°∫˝y
(
TxnReq
.
°_≥ndög_id
,

1001 (
m_pSètusTy≥
->
	`GëRec‹d
(
ePídög
))->
ST_ID
,

1002 (
TxnReq
.
°_≥ndög_id
));

1003 
	`°∫˝y
(
TxnReq
.
°_submôãd_id
,

1004 (
m_pSètusTy≥
->
	`GëRec‹d
(
eSubmôãd
))->
ST_ID
,

1005 (
TxnReq
.
°_submôãd_id
));

1007 
TxnReq
.
rﬁl_ô_back
 = ( 
m_iTødeOrdîRﬁlbackLevñ
 >
m_∫d
.
	`RndI¡R™ge
–1, 
m_iTødeOrdîRﬁlbackLimô
 ));

1011 
	}
}

1022 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eTødeSètusI≈ut
(
TTødeSètusTxnI≈ut
 &
TxnReq
)

1024 
TIdít
 
iCu°omîId
;

1025 
eCu°omîTõr
 
iCu°omîTõr
;

1028 
	`Gíî©eN⁄Unif‹mR™domCu°omîId
(
iCu°omîId
, 
iCu°omîTõr
);

1031 
m_AccsAndPîms
.
	`Gíî©eR™domAccou¡Id
(
m_∫d
, 
iCu°omîId
, 
iCu°omîTõr
, &
TxnReq
.
ac˘_id
, 
NULL
);

1032 
	}
}

1043 
	gCCETxnI≈utGíî©‹
::
	$Gíî©eTødeUpd©eI≈ut
(
TTødeUpd©eTxnI≈ut
 &
TxnReq
)

1045 
INT32
 
iThªshﬁd
;

1047 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

1049 
	`mem£t
(&
TxnReq
,8 , (TxnReq));

1051 if–
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
do_‰ame1
 )

1054 
TxnReq
.
‰ame_to_execuã
 = 1;

1055 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsFøme1
;

1056 
TxnReq
.
max_upd©es
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsToUpd©eFøme1
;

1059 
ii
, 
jj
;

1060 
boﬁ
 
Ac˚±ed
;

1061 
TTøde
 
TID
;

1063  
ii
 = 0; iò< 
TxnReq
.
max_åades
; ii++ )

1065 
Ac˚±ed
 = 
Ál£
;

1066  ! 
Ac˚±ed
 )

1068 
TID
 = 
	`Gíî©eN⁄Unif‹mTødeID
(
TødeUpd©eAVÆueF‹TødeIDGíFøme1
,

1069 
TødeUpd©eSVÆueF‹TødeIDGíFøme1
);

1070 
jj
 = 0;

1071  
jj
 < 
ii
 && 
TxnReq
.
åade_id
[jj] !
TID
 )

1073 
jj
++;

1075 if–
jj
 =
ii
 )

1078 
TxnReq
.
åade_id
[
ii
] = 
TID
;

1079 
Ac˚±ed
 = 
åue
;

1085 
TxnReq
.
ac˘_id
 = 0;

1086 
TxnReq
.
max_ac˘_id
 = 0;

1087 
	`mem£t
–
TxnReq
.
symbﬁ
, 0, ( TxnReq.symbol ));

1088 
	`mem£t
–&
TxnReq
.
°¨t_åade_dts
, 0, ( TxnReq.start_trade_dts ));

1089 
	`mem£t
–&
TxnReq
.
íd_åade_dts
, 0, ( TxnReq.end_trade_dts ));

1092 if–
iThªshﬁd
 <
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
do_‰ame1
 +

1093 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
do_‰ame2
 )

1096 
TxnReq
.
‰ame_to_execuã
 = 2;

1097 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsFøme2
;

1098 
TxnReq
.
max_upd©es
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsToUpd©eFøme2
;

1099 
TxnReq
.
ac˘_id
 = 
	`Gíî©eR™domCu°omîAccou¡Id
();

1101 
	`Gíî©eN⁄Unif‹mTødeDTS
–
TxnReq
.
°¨t_åade_dts
,

1102 
m_iTødeUpd©eFøme2MaxTimeInMûliSec⁄ds
,

1103 
TødeUpd©eAVÆueF‹TimeGíFøme2
,

1104 
TødeUpd©eSVÆueF‹TimeGíFøme2
 );

1107 
m_EndTime
.
	`GëTimeSèmp
(&
TxnReq
.
íd_åade_dts
);

1110 
TxnReq
.
max_ac˘_id
 = 0;

1111 
	`mem£t
–
TxnReq
.
symbﬁ
, 0, ( TxnReq.symbol ));

1112 
	`mem£t
–
TxnReq
.
åade_id
, 0, ( TxnReq.trade_id ));

1118 
TxnReq
.
‰ame_to_execuã
 = 3;

1119 
TxnReq
.
max_åades
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsFøme3
;

1120 
TxnReq
.
max_upd©es
 = 
m_pDrivîCETxnSëtögs
->
TU_£âögs
.
cur
.
MaxRowsToUpd©eFøme3
;

1122 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
m_∫d
.
	`NURnd
–0, 
m_iA˘iveSecurôyCou¡
-1,

1123 
TødeUpd©eAVÆueF‹SymbﬁFøme3
,

1124 
TødeUpd©eSVÆueF‹SymbﬁFøme3
 ),

1125 
TxnReq
.
symbﬁ
,

1126 
°©ic_ˇ°
<>(–
TxnReq
.
symbﬁ
 )));

1128 
	`Gíî©eN⁄Unif‹mTødeDTS
–
TxnReq
.
°¨t_åade_dts
,

1129 
m_iTødeUpd©eFøme3MaxTimeInMûliSec⁄ds
,

1130 
TødeUpd©eAVÆueF‹TimeGíFøme3
,

1131 
TødeUpd©eSVÆueF‹TimeGíFøme3
 );

1134 
m_EndTime
.
	`GëTimeSèmp
(&
TxnReq
.
íd_åade_dts
);

1136 
TxnReq
.
max_ac˘_id
 = 
m_AccsAndPîms
.
	`GëEndögCA_ID
–
m_iA˘iveCu°omîCou¡
 ) ;

1139 
TxnReq
.
ac˘_id
 = 0;

1140 
	`mem£t
–
TxnReq
.
åade_id
, 0, ( TxnReq.trade_id ));

1143 
	}
}

	@src/workload/tpce/egen/CETxnMixGenerator.cpp

42 
	~"w‹klﬂd/ç˚/egí/CETxnMixGíî©‹.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 
	gCCETxnMixGíî©‹
::
	$CCETxnMixGíî©‹
–c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
, 
CBa£Loggî
* 
pLoggî
 )

47 : 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

48 , 
	`m_∫d
–
RNGSìdBa£TxnMixGíî©‹
 )

49 , 
	`m_pLoggî
–
pLoggî
 )

50 , 
	`m_iTxnAºayCuºítIndex
( 0 )

51 , 
	$m_pTxnAºay
–
NULL
 )

54 
	}
}

56 
	gCCETxnMixGíî©‹
::
	$CCETxnMixGíî©‹
–c⁄° 
PDrivîCETxnSëtögs
 
pDrivîCETxnSëtögs
, 
RNGSEED
 
RNGSìd
, 
CBa£Loggî
* 
pLoggî
 )

57 : 
	`m_pDrivîCETxnSëtögs
–
pDrivîCETxnSëtögs
 )

58 , 
	`m_∫d
–
RNGSìd
 )

59 , 
	`m_pLoggî
–
pLoggî
 )

60 , 
	`m_iTxnAºayCuºítIndex
( 0 )

61 , 
	$m_pTxnAºay
–
NULL
 )

64 
	}
}

66 
RNGSEED
 
	gCCETxnMixGíî©‹
::
	$GëRNGSìd
( )

68 –
m_∫d
.
	`GëSìd
() );

69 
	}
}

71 
	gCCETxnMixGíî©‹
::
	$SëRNGSìd
–
RNGSEED
 
RNGSìd
 )

73 
m_∫d
.
	`SëSìd
–
RNGSìd
 );

74 
	}
}

76 
	gCCETxnMixGíî©‹
::~
	$CCETxnMixGíî©‹
()

78 i‡(
m_pTxnAºay
 !
NULL
)

80 
dñëe
[] 
m_pTxnAºay
;

81 
m_pTxnAºay
 = 
NULL
;

83 
	}
}

85 
	gCCETxnMixGíî©‹
::
	$Upd©eTu«bÀs
( )

87 
INT32
 
i
;

88 
INT32
 
BrokîVﬁumeMixLimô
;

89 
INT32
 
Cu°omîPosôi⁄MixLimô
;

90 
INT32
 
M¨këW©chMixLimô
;

91 
INT32
 
SecurôyDëaûMixLimô
;

92 
INT32
 
TødeLookupMixLimô
;

93 
INT32
 
TødeOrdîMixLimô
;

94 
INT32
 
TødeSètusMixLimô
;

95 
INT32
 
TødeUpd©eMixLimô
;

98 
m_CETønß˘i⁄MixTŸÆ
 =

99 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
BrokîVﬁumeMixLevñ
 +

100 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
Cu°omîPosôi⁄MixLevñ
 +

101 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
M¨këW©chMixLevñ
 +

102 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
SecurôyDëaûMixLevñ
 +

103 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeLookupMixLevñ
 +

104 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeOrdîMixLevñ
 +

105 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeSètusMixLevñ
 +

106 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeUpd©eMixLevñ
;

108 
TødeSètusMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeSètusMixLevñ
;

109 
M¨këW©chMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
M¨këW©chMixLevñ
 + 
TødeSètusMixLimô
;

110 
SecurôyDëaûMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
SecurôyDëaûMixLevñ
 + 
M¨këW©chMixLimô
;

111 
Cu°omîPosôi⁄MixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
Cu°omîPosôi⁄MixLevñ
 + 
SecurôyDëaûMixLimô
;

112 
TødeOrdîMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeOrdîMixLevñ
 + 
Cu°omîPosôi⁄MixLimô
;

113 
TødeLookupMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeLookupMixLevñ
 + 
TødeOrdîMixLimô
;

114 
TødeUpd©eMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
TødeUpd©eMixLevñ
 + 
TødeLookupMixLimô
;

115 
BrokîVﬁumeMixLimô
 = 
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
.
cur
.
BrokîVﬁumeMixLevñ
 + 
TødeUpd©eMixLimô
;

119 i‡(
m_pTxnAºay
 !
NULL
)

121 
dñëe
[] 
m_pTxnAºay
;

122 
m_pTxnAºay
 = 
NULL
;

125 
m_pTxnAºay
 = 
√w
 [
m_CETønß˘i⁄MixTŸÆ
];

129 
i
 = 0; i < 
TødeSètusMixLimô
; ++i)

131 
m_pTxnAºay
[
i
] = 
TRADE_STATUS
;

133 ; 
i
 < 
M¨këW©chMixLimô
; ++i)

135 
m_pTxnAºay
[
i
] = 
MARKET_WATCH
;

137 ; 
i
 < 
SecurôyDëaûMixLimô
; ++i)

139 
m_pTxnAºay
[
i
] = 
SECURITY_DETAIL
;

141 ; 
i
 < 
Cu°omîPosôi⁄MixLimô
; ++i)

143 
m_pTxnAºay
[
i
] = 
CUSTOMER_POSITION
;

145 ; 
i
 < 
TødeOrdîMixLimô
; ++i)

147 
m_pTxnAºay
[
i
] = 
TRADE_ORDER
;

149 ; 
i
 < 
TødeLookupMixLimô
; ++i)

151 
m_pTxnAºay
[
i
] = 
TRADE_LOOKUP
;

153 ; 
i
 < 
TødeUpd©eMixLimô
; ++i)

155 
m_pTxnAºay
[
i
] = 
TRADE_UPDATE
;

157 ; 
i
 < 
BrokîVﬁumeMixLimô
; ++i)

159 
m_pTxnAºay
[
i
] = 
BROKER_VOLUME
;

162 
m_iTxnAºayCuºítIndex
 = 0;

165 
m_pLoggî
->
	`SídToLoggî
(
m_pDrivîCETxnSëtögs
->
TxnMixGíî©‹_£âögs
);

166 
	}
}

168 
	gCCETxnMixGíî©‹
::
	$Gíî©eNextTxnTy≥
()

182 
INT32
 
∫d
 = 
m_∫d
.
	`RndI¡R™ge
–
m_iTxnAºayCuºítIndex
, 
m_CETønß˘i⁄MixTŸÆ
 - 1);

184 
iTxnTy≥
 = 
m_pTxnAºay
[
∫d
];

188 
m_pTxnAºay
[
∫d
] = m_pTxnAºay[
m_iTxnAºayCuºítIndex
];

189 
m_pTxnAºay
[
m_iTxnAºayCuºítIndex
] = 
iTxnTy≥
;

191 
m_iTxnAºayCuºítIndex
 = (m_iTxnAºayCuºítIndex + 1Ë% 
m_CETønß˘i⁄MixTŸÆ
;

193  
iTxnTy≥
;

194 
	}
}

	@src/workload/tpce/egen/CustomerSelection.cpp

42 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

49 
	gCCu°omîSñe˘i⁄
::
	$CCu°omîSñe˘i⁄
()

50 : 
	`m_pRND
–
NULL
 )

51 , 
	`m_iSèπFromCu°omî
–0 + 
iTIdítShi·
)

52 , 
	`m_iCu°omîCou¡
( 0 )

53 , 
	`m_bP¨tôi⁄ByCID
–
Ál£
 )

54 , 
	`m_iP¨tôi⁄Pî˚¡
( 0 )

55 , 
	`m_iMySèπFromCu°omî
–0 + 
iTIdítShi·
)

56 , 
	$m_iMyCu°omîCou¡
( 0 )

58 
	}
}

63 
	gCCu°omîSñe˘i⁄
::
	$CCu°omîSñe˘i⁄
–
CR™dom
* 
pRND
,

64 
TIdít
 
iSèπFromCu°omî
,

65 
TIdít
 
iCu°omîCou¡
)

66 : 
	`m_pRND
–
pRND
 )

67 , 
	`m_iSèπFromCu°omî
–
iSèπFromCu°omî
 + 
iTIdítShi·
)

68 , 
	`m_iCu°omîCou¡
–
iCu°omîCou¡
 )

69 , 
	`m_bP¨tôi⁄ByCID
–
Ál£
 )

70 , 
	`m_iP¨tôi⁄Pî˚¡
( 0 )

71 , 
	`m_iMySèπFromCu°omî
–0 + 
iTIdítShi·
)

72 , 
	$m_iMyCu°omîCou¡
( 0 )

74 
	}
}

79 
	gCCu°omîSñe˘i⁄
::
	$CCu°omîSñe˘i⁄
–
CR™dom
* 
pRND
,

80 
TIdít
 
iSèπFromCu°omî
,

81 
TIdít
 
iCu°omîCou¡
,

82 
iP¨tôi⁄Pî˚¡
,

83 
TIdít
 
iMySèπFromCu°omî
,

84 
TIdít
 
iMyCu°omîCou¡
)

85 : 
	`m_pRND
–
pRND
 )

86 , 
	`m_iSèπFromCu°omî
–
iSèπFromCu°omî
 + 
iTIdítShi·
)

87 , 
	`m_iCu°omîCou¡
–
iCu°omîCou¡
 )

89 , 
	`m_bP¨tôi⁄ByCID
–
åue
 )

90 , 
	`m_iP¨tôi⁄Pî˚¡
–
iP¨tôi⁄Pî˚¡
 )

91 , 
	`m_iMySèπFromCu°omî
–
iMySèπFromCu°omî
 + 
iTIdítShi·
)

92 , 
	$m_iMyCu°omîCou¡
–
iMyCu°omîCou¡
 )

94 if(–
iSèπFromCu°omî
 =
iMySèπFromCu°omî
 )&&–
iCu°omîCou¡
 =
iMyCu°omîCou¡
 ))

98 
m_bP¨tôi⁄ByCID
 = 
Ál£
;

100 
	}
}

105 
	gCCu°omîSñe˘i⁄
::
	$SëP¨tôi⁄R™ge
(
TIdít
 
iSèπFromCu°omî
, TIdíà
iCu°omîCou¡
)

107 if–
m_bP¨tôi⁄ByCID
 )

109 
m_iMySèπFromCu°omî
 = 
iSèπFromCu°omî
;

110 
m_iMyCu°omîCou¡
 = 
iCu°omîCou¡
;

112 
	}
}

117 
TIdít
 
	gCCu°omîSñe˘i⁄
::
	$Pîmuã
(
TIdít
 
iLow
, TIdíà
iHigh
)

119  ((677 * 
iLow
 + 33 * (
iHigh
+1)) % 1000);

120 
	}
}

125 
TIdít
 
	gCCu°omîSñe˘i⁄
::
	$Invî£Pîmuã
(
TIdít
 
iLow
, TIdíà
iHigh
)

129  (((((613 * (
iLow
 - 33 * (
iHigh
+1))) % 1000) + 1000) % 1000));

130 
	}
}

135 
UINT
 
	gCCu°omîSñe˘i⁄
::
	$GëInvî£CID
(
TIdít
 
C_ID
)

137 
UINT
 
iCHigh
 = (UINT)
	`CHigh
(
C_ID
);

138 
UINT
 
iInvî£CID
 = (UINT)
	`Invî£Pîmuã
(
	`CLow
(
C_ID
), 
iCHigh
);

140 i‡(
iInvî£CID
 < 200)

142  ((3 * 
iInvî£CID
 + (
iCHigh
 + 1)) % 200);

146 i‡(
iInvî£CID
 < 800)

148  (((59 * 
iInvî£CID
 + 47 * (
iCHigh
 + 1)) % 600) + 200);

152  (((23 * 
iInvî£CID
 + 17 * (
iCHigh
 + 1)) % 200) + 800);

155 
	}
}

160 
eCu°omîTõr
 
	gCCu°omîSñe˘i⁄
::
	$GëTõr
(
TIdít
 
C_ID
)

162 
TIdít
 
iRevC_ID
 = 
	`Invî£Pîmuã
(
	`CLow
(
C_ID
), 
	`CHigh
(C_ID));

164 i‡(
iRevC_ID
 < 200)

166  
eCu°omîTõrO√
;

170 i‡(
iRevC_ID
 < 800)

172  
eCu°omîTõrTwo
;

176  
eCu°omîTõrThªe
;

179 
	}
}

184 
	gCCu°omîSñe˘i⁄
::
	$Gíî©eR™domCu°omî
(
TIdít
 &
C_ID
, 
eCu°omîTõr
 &
C_TIER
)

188 i‡(
m_pRND
 =
NULL
)

193 
fCW
 = 
m_pRND
->
	`RndDoubÀIn¸R™ge
(0.0001, 2000, 0.000000001);

197 
TIdít
 
iCHigh
;

198 if–
m_bP¨tôi⁄ByCID
 && 
m_pRND
->
	`RndPî˚¡
–
m_iP¨tôi⁄Pî˚¡
 ))

201 
iCHigh
 = ( 
m_pRND
->
	`RndI¡64R™ge
–
m_iMySèπFromCu°omî
,

202 
m_iMySèπFromCu°omî
 + 
m_iMyCu°omîCou¡
 - 1 ) - 1 )

208 
iCHigh
 = ( 
m_pRND
->
	`RndI¡64R™ge
–
m_iSèπFromCu°omî
,

209 
m_iSèπFromCu°omî
 + 
m_iCu°omîCou¡
 - 1 ) - 1 )

215 
iCLow
;

217 i‡(
fCW
 <= 200)

221 
iCLow
 = (Ë
	`˚û
–
	`sqπ
(22500 + 500 * 
fCW
) - 151 );

223 
C_TIER
 = 
eCu°omîTõrO√
;

227 i‡(
fCW
 <=1400)

231 
iCLow
 = (Ë
	`˚û
–
	`sqπ
(290000 + 1000 * 
fCW
) - 501 );

233 
C_TIER
 = 
eCu°omîTõrTwo
;

239 
iCLow
 = (Ë
	`˚û
–149 + 
	`sqπ
(500 * 
fCW
 - 277500) );

241 
C_TIER
 = 
eCu°omîTõrThªe
;

245 
C_ID
 = 
iCHigh
 * 1000 + 
	`Pîmuã
(
iCLow
, iCHigh) + 1;

246 
	}
}

	@src/workload/tpce/egen/CustomerTable.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 
«me•a˚
 
	gTPCE


43 c⁄° *
	gszUSAªaCode
="011";

44 
	gEMAIL_DOMAINs
[
iNumEMAIL_DOMAINs
][15] = {"@msn.com","@hotmail.com","@rr.com","@netzero.com","@earthlink.com","@attbi.com"};

48 c⁄° 
	giPî˚¡Cu°omîsInC_TIER_1
 = 20;

49 c⁄° 
	giPî˚¡Cu°omîsInC_TIER_2
 = 60;

50 c⁄° 
	giPî˚¡Cu°omîsInC_TIER_3
 = 100 - 
iPî˚¡Cu°omîsInC_TIER_1
 - 
iPî˚¡Cu°omîsInC_TIER_2
;

53 c⁄° 
	giPî˚¡Undî18
 = 5;

54 c⁄° 
	giPî˚¡Bëwìn19And24
 = 16;

55 c⁄° 
	giPî˚¡Bëwìn25And34
 = 17;

56 c⁄° 
	giPî˚¡Bëwìn35And44
 = 19;

57 c⁄° 
	giPî˚¡Bëwìn45And54
 = 16;

58 c⁄° 
	giPî˚¡Bëwìn55And64
 = 11;

59 c⁄° 
	giPî˚¡Bëwìn65And74
 = 8;

60 c⁄° 
	giPî˚¡Bëwìn75And84
 = 7;

61 c⁄° 
	giPî˚¡Ovî85
 = 1;

65 c⁄° 
	giRNGSkùO√RowCu°omî
 = 35;

70 
	gCCu°omîTabÀ
::
	$CCu°omîTabÀ
(
CI≈utFûes
 
öputFûes
,

71 
TIdít
 
iCu°omîCou¡
,

72 
TIdít
 
iSèπFromCu°omî
)

73 : 
TabÀTem∂©e
<
CUSTOMER_ROW
>()

74 , 
	`m_iRowsToGíî©e
(
iCu°omîCou¡
)

75 , 
	`m_≥rs⁄
(
öputFûes
, 
iSèπFromCu°omî
, 
åue
)

76 , 
	`m_Ph⁄es
(
öputFûes
.
AªaCodes
)

77 , 
	`m_SètusTy≥Fûe
(
öputFûes
.
SètusTy≥
)

78 , 
	`m_iSèπFromCu°omî
(
iSèπFromCu°omî
)

79 , 
	$m_iCu°omîCou¡
(
iCu°omîCou¡
)

81 
m_iCom∑nyCou¡
 = 
öputFûes
.
Com∑ny
->
	`GëSize
();

82 
m_iExch™geCou¡
 = 
öputFûes
.
Exch™ge
->
	`GëSize
();

83 
	}
}

88 
	gCCu°omîTabÀ
::
	$InôNextLﬂdUnô
()

90 
m_∫d
.
	`SëSìd
(m_∫d.
	`RndNthEÀmít
(
RNGSìdTabÀDeÁu…
,

91 ((
RNGSEED
)
m_iLa°RowNumbî
 + 
m_iSèπFromCu°omî
 - 1) *

92 
iRNGSkùO√RowCu°omî
));

94 
	`CÀ¨Rec‹d
();

96 
m_≥rs⁄
.
	`InôNextLﬂdUnô
();

97 
	}
}

102 
TIdít
 
	gCCu°omîTabÀ
::
	$Gíî©eNextC_ID
()

104 i‡(
m_iLa°RowNumbî
 % 
iDeÁu…LﬂdUnôSize
 == 0)

106 
	`InôNextLﬂdUnô
();

109 ++
m_iLa°RowNumbî
;

110 
m_bM‹eRec‹ds
 = 
m_iLa°RowNumbî
 < 
m_iRowsToGíî©e
;

112 
m_row
.
C_ID
 = 
m_iLa°RowNumbî
 + 
m_iSèπFromCu°omî
 - 1 + 
iTIdítShi·
;

114  
m_row
.
C_ID
;

115 
	}
}

119 
TIdít
 
	gCCu°omîTabÀ
::
	$GëCuºítC_ID
()

121  
m_iLa°RowNumbî
 + 
m_iSèπFromCu°omî
 - 1 + 
iTIdítShi·
;

122 
	}
}

127 
	gCCu°omîTabÀ
::
	$GëC_TAX_ID
(
TIdít
 
C_ID
, *
szOuçut
)

129 
m_≥rs⁄
.
	`GëTaxID
(
C_ID
, 
szOuçut
);

130 
	}
}

135 
	gCCu°omîTabÀ
::
	$Gíî©eC_ST_ID
()

137 
	`°∫˝y
(
m_row
.
C_ST_ID
, 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
eA˘ive
)->
ST_ID
, (m_row.C_ST_ID));

138 
	}
}

143 
	gCCu°omîTabÀ
::
	$Gíî©ePîs⁄Info
()

146 
m_≥rs⁄
.
	`GëFú°La°AndTaxID
(
m_row
.
C_ID
, m_row.
C_F_NAME
, m_row.
C_L_NAME
, m_row.
C_TAX_ID
);

148 
m_row
.
C_GNDR
 = 
m_≥rs⁄
.
	`GëGídî
(m_row.
C_ID
);

150 
m_row
.
C_M_NAME
[0] = 
m_≥rs⁄
.
	`GëMiddÀName
(m_row.
C_ID
);

151 
m_row
.
C_M_NAME
[1] = '\0';

152 
	}
}

157 
eCu°omîTõr
 
	gCCu°omîTabÀ
::
	$GëC_TIER
(
TIdít
 
C_ID
)

159  
m_Cu°omîSñe˘i⁄
.
	`GëTõr
(
C_ID
);

160 
	}
}

165 
	gCCu°omîTabÀ
::
	$Gíî©eC_DOB
()

168 
age_bøckës
[]={10, 19, 25, 35, 45, 55, 65, 75, 85, 100};

169 
age_bøckë
;

170 
dob_day¢o_mö
, 
dob_day¢o_max
;

171 
dob_ö_days
;

173 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

176 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
)

177 
age_bøckë
 = 0;

179 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
)

180 
age_bøckë
 = 1;

182 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
)

183 
age_bøckë
 = 2;

185 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
+

186 
iPî˚¡Bëwìn35And44
)

187 
age_bøckë
 = 3;

189 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
+

190 
iPî˚¡Bëwìn35And44
+
iPî˚¡Bëwìn45And54
)

191 
age_bøckë
 = 4;

193 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
+

194 
iPî˚¡Bëwìn35And44
+
iPî˚¡Bëwìn45And54
+
iPî˚¡Bëwìn55And64
)

195 
age_bøckë
 = 5;

197 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
+

198 
iPî˚¡Bëwìn35And44
+
iPî˚¡Bëwìn45And54
+
iPî˚¡Bëwìn55And64
+
iPî˚¡Bëwìn65And74
)

199 
age_bøckë
 = 6;

201 i‡(
iThªshﬁd
 <
iPî˚¡Undî18
+
iPî˚¡Bëwìn19And24
+
iPî˚¡Bëwìn25And34
+

202 
iPî˚¡Bëwìn35And44
+
iPî˚¡Bëwìn45And54
+
iPî˚¡Bëwìn55And64
+
iPî˚¡Bëwìn65And74
+
iPî˚¡Bëwìn75And84
)

203 
age_bøckë
 = 7;

205 
age_bøckë
 = 8;

206 
	`as£π
(
age_bøckë
 < 
°©ic_ˇ°
<>((
age_bøckës
)/(age_brackets[0])));

209 
dob_day¢o_mö
 = 
CD©eTime
::
	`YMDtoDayno
(
InôülTødeP›uœti⁄Ba£Yór
 - 
age_bøckës
[
age_bøckë
+1],

210 
InôülTødeP›uœti⁄Ba£M⁄th
,

211 
InôülTødeP›uœti⁄Ba£Day
) + 1;

212 
dob_day¢o_max
 = 
CD©eTime
::
	`YMDtoDayno
(
InôülTødeP›uœti⁄Ba£Yór
 - 
age_bøckës
[
age_bøckë
],

213 
InôülTødeP›uœti⁄Ba£M⁄th
,

214 
InôülTødeP›uœti⁄Ba£Day
);

217 
dob_ö_days
 = 
m_∫d
.
	`RndI¡R™ge
(
dob_day¢o_mö
, 
dob_day¢o_max
);

219 
m_row
.
C_DOB
.
	`Së
(
dob_ö_days
);

220 
	}
}

225 
	gCCu°omîTabÀ
::
	$Gíî©eC_AD_ID
()

229 
m_row
.
C_AD_ID
 = 
m_iExch™geCou¡
 + 
m_iCom∑nyCou¡
 + 
	`GëCuºítC_ID
();

230 
	}
}

235 
	gCCu°omîTabÀ
::
	$Gíî©eC_CTRY_1
()

237 
	`°∫˝y
(
m_row
.
C_CTRY_1
, 
szUSAªaCode
, (m_row.C_CTRY_1));

238 
	}
}

243 
	gCCu°omîTabÀ
::
	$Gíî©eC_CTRY_2
()

245 
	`°∫˝y
(
m_row
.
C_CTRY_2
, 
szUSAªaCode
, (m_row.C_CTRY_2));

246 
	}
}

251 
	gCCu°omîTabÀ
::
	$Gíî©eC_CTRY_3
()

253 
	`°∫˝y
(
m_row
.
C_CTRY_3
, 
szUSAªaCode
, (m_row.C_CTRY_3));

254 
	}
}

260 
	gCCu°omîTabÀ
::
	$Gíî©eC_AREA_1
()

262 
RNGSEED
 
OldSìd
;

263 
iThªshﬁd
;

265 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

267 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£C_AREA_1
,

268 (
RNGSEED
Ë
m_row
.
C_ID
 ));

271 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_Ph⁄es
->
	`GëGª©e°Key
() - 1);

274 
	`°∫˝y
(
m_row
.
C_AREA_1
, (
m_Ph⁄es
->
	`GëRec‹d
(
iThªshﬁd
))->
AREA_CODE
, (m_row.C_AREA_1));

276 
m_∫d
.
	`SëSìd
–
OldSìd
 );

277 
	}
}

282 
	gCCu°omîTabÀ
::
	$Gíî©eC_AREA_2
()

284 
RNGSEED
 
OldSìd
;

285 
iThªshﬁd
;

287 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

289 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£C_AREA_2
,

290 (
RNGSEED
Ë
m_row
.
C_ID
 ));

293 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_Ph⁄es
->
	`GëGª©e°Key
() - 1);

296 
	`°∫˝y
(
m_row
.
C_AREA_2
, (
m_Ph⁄es
->
	`GëRec‹d
(
iThªshﬁd
))->
AREA_CODE
, (m_row.C_AREA_2));

298 
m_∫d
.
	`SëSìd
–
OldSìd
 );

299 
	}
}

304 
	gCCu°omîTabÀ
::
	$Gíî©eC_AREA_3
()

306 
RNGSEED
 
OldSìd
;

307 
iThªshﬁd
;

309 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

311 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£C_AREA_3
,

312 (
RNGSEED
Ë
m_row
.
C_ID
 ));

315 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_Ph⁄es
->
	`GëGª©e°Key
() - 1);

318 
	`°∫˝y
(
m_row
.
C_AREA_3
, (
m_Ph⁄es
->
	`GëRec‹d
(
iThªshﬁd
))->
AREA_CODE
, (m_row.C_AREA_3));

320 
m_∫d
.
	`SëSìd
–
OldSìd
 );

321 
	}
}

327 
	gCCu°omîTabÀ
::
	$Gíî©eC_LOCAL_1
()

329 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_LOCAL_1
, "nnnnnnn");

330 
	}
}

336 
	gCCu°omîTabÀ
::
	$Gíî©eC_LOCAL_2
()

338 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_LOCAL_2
, "nnnnnnn");

339 
	}
}

344 
	gCCu°omîTabÀ
::
	$Gíî©eC_LOCAL_3
()

346 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_LOCAL_3
, "nnnnnnn");

347 
	}
}

353 
	gCCu°omîTabÀ
::
	$Gíî©eC_EXT_1
()

355 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

357 i‡(
iThªshﬁd
 <= 25)

359 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_EXT_1
, "nnn");

363 *
m_row
.
C_EXT_1
 = '\0';

365 
	}
}

370 
	gCCu°omîTabÀ
::
	$Gíî©eC_EXT_2
()

372 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

374 i‡(
iThªshﬁd
 <= 15)

376 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_EXT_2
, "nnn");

380 *
m_row
.
C_EXT_2
 = '\0';

382 
	}
}

387 
	gCCu°omîTabÀ
::
	$Gíî©eC_EXT_3
()

389 
iThªshﬁd
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

391 i‡(
iThªshﬁd
 <= 5)

393 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
m_row
.
C_EXT_3
, "nnn");

397 *
m_row
.
C_EXT_3
 = '\0';

399 
	}
}

405 
	gCCu°omîTabÀ
::
	$Gíî©eC_EMAIL_1_™d_C_EMAIL_2
()

407 
size_t
 
iLí
;

408 
iEmaû1Index
;

410 
iEmaû1Index
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
iNumEMAIL_DOMAINs
 - 1);

413 
iLí
 = 
	`°æí
(
m_row
.
C_L_NAME
);

414 
m_row
.
C_EMAIL_1
[0] = m_row.
C_F_NAME
[0];

415 
	`°∫˝y
(&
m_row
.
C_EMAIL_1
[1], m_row.
C_L_NAME
,

416 (
m_row
.
C_EMAIL_1
) - 1);

417 
	`°∫˝y
(&
m_row
.
C_EMAIL_1
[1+
iLí
],

418 
EMAIL_DOMAINs
[
iEmaû1Index
],

419 (
m_row
.
C_EMAIL_1
Ë- 
iLí
 - 1);

422 
m_row
.
C_EMAIL_2
[0] = m_row.
C_F_NAME
[0];

423 
	`°∫˝y
(&
m_row
.
C_EMAIL_2
[1], m_row.
C_L_NAME
,

424 (
m_row
.
C_EMAIL_2
) - 1);

425 
	`°∫˝y
(&
m_row
.
C_EMAIL_2
[1+
iLí
],

426 
EMAIL_DOMAINs
[
m_∫d
.
	`RndI¡R™geEx˛ude
(0, 
iNumEMAIL_DOMAINs
 - 1, 
iEmaû1Index
)],

427 (
m_row
.
C_EMAIL_2
Ë- 
iLí
 - 1);

428 
	}
}

433 
boﬁ
 
	gCCu°omîTabÀ
::
	$Gíî©eNextRec‹d
()

435 
	`Gíî©eNextC_ID
();

436 
	`Gíî©eC_ST_ID
();

437 
	`Gíî©ePîs⁄Info
();

438 
m_row
.
C_TIER
 = (Ë
	`GëC_TIER
(m_row.
C_ID
);

439 
	`Gíî©eC_DOB
();

440 
	`Gíî©eC_AD_ID
();

441 
	`Gíî©eC_CTRY_1
();

442 
	`Gíî©eC_AREA_1
();

443 
	`Gíî©eC_LOCAL_1
();

444 
	`Gíî©eC_EXT_1
();

445 
	`Gíî©eC_CTRY_2
();

446 
	`Gíî©eC_AREA_2
();

447 
	`Gíî©eC_LOCAL_2
();

448 
	`Gíî©eC_EXT_2
();

449 
	`Gíî©eC_CTRY_3
();

450 
	`Gíî©eC_AREA_3
();

451 
	`Gíî©eC_LOCAL_3
();

452 
	`Gíî©eC_EXT_3
();

453 
	`Gíî©eC_EMAIL_1_™d_C_EMAIL_2
();

456  
	`M‹eRec‹ds
();

457 
	}
}

	@src/workload/tpce/egen/DM.cpp

42 
	~"w‹klﬂd/ç˚/egí/DM.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 c⁄° 
INT32
 
	giD©aMaöã«n˚TabÀCou¡
 = 12;

47 c⁄° * 
	gD©aMaöã«n˚TabÀName
[
iD©aMaöã«n˚TabÀCou¡
] =

76 
	gCDM
::
	$AutoSëRNGSìds
–
UINT32
 
UniqueId
 )

78 
CD©eTime
 
Now
;

79 
INT32
 
Ba£Yór
;

80 
INT32
 
Tmp1
, 
Tmp2
;

82 
Now
.
	`GëYMD
–&
Ba£Yór
, &
Tmp1
, &
Tmp2
 );

85 
Ba£Yór
 -= ( BaseYear % 5 );

86 
CD©eTime
 
	`Ba£
–
Ba£Yór
, 1, 1 );

90 
RNGSEED
 
Sìd
;

91 
Sìd
 = 
Now
.
	`MSec
() / 100;

96 
Sìd
 <<= 11;

97 
Sìd
 +(
RNGSEED
Ë((
INT64
)
Now
.
	`DayNo
(Ë- (INT64)
Ba£
.DayNo());

105 
Sìd
 <<= 33;

109 
Sìd
 +
UniqueId
;

112 
m_∫d
.
	`SëSìd
–
Sìd
 );

113 
m_DrivîDMSëtögs
.
cur
.
RNGSìd
 = 
Sìd
;

114 
	}
}

116 
	gCDM
::
	$Inôülize
( )

118 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîGlobÆSëtögs
);

120 
m_iSecurôyCou¡
 = 
m_pSecurôõs
->
	`GëA˘iveSecurôyCou¡
();

121 
m_iCom∑nyCou¡
 = 
m_pCom∑nõs
->
	`GëA˘iveCom∑nyCou¡
();

122 
m_iSèπFromCom∑ny
 = 
m_pCom∑nõs
->
	`GëCom∑nyId
(0);

123 
m_iDivisi⁄TaxCou¡
 = 
m_pTaxR©esDivisi⁄
->
	`GëSize
();

124 
m_iSèπFromCu°omî
 = 
iDeÁu…SèπFromCu°omî
 + 
iTIdítShi·
;

125 
	}
}

127 
	gCDM
::
	$CDM
–
CDMSUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, 
CI≈utFûes
 &
öputFûes
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
, 
UINT32
 
UniqueId
 )

128 : 
	`m_DrivîGlobÆSëtögs
 ( 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

129 , 
	`m_DrivîDMSëtögs
–
UniqueId
, 0 )

130 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
)

131 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

132 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

133 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

134 , 
	`m_pTaxR©esDivisi⁄
(
öputFûes
.
TaxR©esDivisi⁄
)

135 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

136 , 
	`m_iDivisi⁄TaxCou¡
(0)

137 , 
	`m_D©aMaöã«n˚TabÀNum
(0)

138 , 
	`m_pSUT
–
pSUT
 )

139 , 
	$m_pLoggî
 ( 
pLoggî
 )

141 
m_pLoggî
->
	`SídToLoggî
("DM object constructed using constructor 1 (valid forÖublication: YES).");

143 
	`Inôülize
();

144 
	`AutoSëRNGSìds
–
UniqueId
 );

146 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîDMSëtögs
);

147 
	}
}

149 
	gCDM
::
	$CDM
–
CDMSUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, 
CI≈utFûes
 &
öputFûes
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, 
INT32
 
iSˇÀFa˘‹
, INT32 
iDaysOfInôülTødes
, 
UINT32
 
UniqueId
, 
RNGSEED
 
RNGSìd
 )

150 : 
	`m_DrivîGlobÆSëtögs
 ( 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

151 , 
	`m_DrivîDMSëtögs
–
UniqueId
, 
RNGSìd
 )

152 , 
	`m_∫d
–
RNGSìd
 )

153 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 
iDeÁu…SèπFromCu°omî
, 
iA˘iveCu°omîCou¡
)

154 , 
	`m_AccsAndPîms
(
öputFûes
, 
iDeÁu…LﬂdUnôSize
, 
iA˘iveCu°omîCou¡
, 
iDeÁu…SèπFromCu°omî
)

155 , 
	`m_pSecurôõs
(
öputFûes
.
Securôõs
)

156 , 
	`m_pCom∑nõs
(
öputFûes
.
Com∑ny
)

157 , 
	`m_pTaxR©esDivisi⁄
(
öputFûes
.
TaxR©esDivisi⁄
)

158 , 
	`m_pSètusTy≥
(
öputFûes
.
SètusTy≥
)

159 , 
	`m_iDivisi⁄TaxCou¡
(0)

160 , 
	`m_D©aMaöã«n˚TabÀNum
(0)

161 , 
	`m_pSUT
–
pSUT
 )

162 , 
	$m_pLoggî
–
pLoggî
 )

164 
m_pLoggî
->
	`SídToLoggî
("DM object constructed using constructor 2 (valid forÖublication: NO).");

166 
	`Inôülize
();

168 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîDMSëtögs
);

169 
	}
}

171 
	gCDM
::~
	$CDM
()

173 
m_pLoggî
->
	`SídToLoggî
("DM object destroyed.");

174 
	}
}

176 
TIdít
 
	gCDM
::
	$Gíî©eR™domCu°omîId
()

178  
m_∫d
.
	`RndI¡64R™ge
(
m_iSèπFromCu°omî
,

179 
m_iSèπFromCu°omî
 + 
m_DrivîGlobÆSëtögs
.
cur
.
iA˘iveCu°omîCou¡
 - 1);

180 
	}
}

182 
TIdít
 
	gCDM
::
	$Gíî©eR™domCu°omîAccou¡Id
()

184 
TIdít
 
iCu°omîId
;

186 
eCu°omîTõr
 
iCu°omîTõr
;

188 
m_Cu°omîSñe˘i⁄
.
	`Gíî©eR™domCu°omî
(
iCu°omîId
, 
iCu°omîTõr
);

190 –
m_AccsAndPîms
.
	`Gíî©eR™domAccou¡Id
–
m_∫d
, 
iCu°omîId
, 
iCu°omîTõr
));

192 
	}
}

194 
TIdít
 
	gCDM
::
	$Gíî©eR™domCom∑nyId
()

196  
m_∫d
.
	`RndI¡64R™ge
(
m_iSèπFromCom∑ny
, m_iSèπFromCom∑ny + 
m_iCom∑nyCou¡
 - 1);

197 
	}
}

199 
TIdít
 
	gCDM
::
	$Gíî©eR™domSecurôyId
()

201  
m_∫d
.
	`RndI¡64R™ge
(0, 
m_iSecurôyCou¡
-1);

202 
	}
}

204 
RNGSEED
 
	gCDM
::
	$GëRNGSìd
( )

206 –
m_∫d
.
	`GëSìd
() );

207 
	}
}

209 
	gCDM
::
	$DoTxn
( )

211 
	`mem£t
–&
m_TxnI≈ut
, 0, ( m_TxnInput ));

212 
	`°∫˝y
–
m_TxnI≈ut
.
èbÀ_«me
,

213 
D©aMaöã«n˚TabÀName
[
m_D©aMaöã«n˚TabÀNum
],

214 (
m_TxnI≈ut
.
èbÀ_«me
 ));

216  
m_D©aMaöã«n˚TabÀNum
 )

219 
m_TxnI≈ut
.
ac˘_id
 = 
	`Gíî©eR™domCu°omîAccou¡Id
();

222 i‡(
m_∫d
.
	`RndPî˚¡
(67))

224 
m_TxnI≈ut
.
c_id
 = 
	`Gíî©eR™domCu°omîId
();

228 
m_TxnI≈ut
.
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

232 
m_TxnI≈ut
.
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

235 
m_TxnI≈ut
.
c_id
 = 
	`Gíî©eR™domCu°omîId
();

238 
m_TxnI≈ut
.
c_id
 = 
	`Gíî©eR™domCu°omîId
();

241 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
	`Gíî©eR™domSecurôyId
(), 
m_TxnI≈ut
.
symbﬁ
, 
°©ic_ˇ°
<>(( m_TxnInput.symbol )));

242 
m_TxnI≈ut
.
day_of_m⁄th
 = 
m_∫d
.
	`RndI¡R™ge
(1, 31);

243 
m_TxnI≈ut
.
vﬁ_ö¸
 = 
m_∫d
.
	`RndI¡R™ge
(-2, 3);

244 i‡(
m_TxnI≈ut
.
vﬁ_ö¸
 == 0)

246 
m_TxnI≈ut
.
vﬁ_ö¸
 = -3;

252 
m_TxnI≈ut
.
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

255 
m_TxnI≈ut
.
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

258 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
	`Gíî©eR™domSecurôyId
(), 
m_TxnI≈ut
.
symbﬁ
, 
°©ic_ˇ°
<>(( m_TxnInput.symbol )));

261 c⁄° 
ve˘‹
<
TTaxR©eI≈utRow
> *
pR©es
;

262 
UINT
 
iThªshﬁd
;

264 
pR©es
 = 
m_pTaxR©esDivisi⁄
->
	`GëRec‹d
((
UINT
)
m_∫d
.
	`RndI¡R™ge
(0,

265 
m_iDivisi⁄TaxCou¡
 - 1));

266 
iThªshﬁd
 = (
UINT
Ë
m_∫d
.
	`RndI¡R™ge
(0, (UINT)
pR©es
->
	`size
()-1);

268 
	`°∫˝y
(
m_TxnI≈ut
.
tx_id
,

269 (*
pR©es
)[
iThªshﬁd
].
TAX_ID
,

270 (
m_TxnI≈ut
.
tx_id
));

273 
m_TxnI≈ut
.
c_id
 = 
	`Gíî©eR™domCu°omîId
();

277 
	`as£π
(
Ál£
);

280 
m_pSUT
->
	`D©aMaöã«n˚
–&
m_TxnI≈ut
 );

282 
m_D©aMaöã«n˚TabÀNum
 = (m_D©aMaöã«n˚TabÀNum + 1Ë% 
iD©aMaöã«n˚TabÀCou¡
;

283 
	}
}

286 
TD©aMaöã«n˚TxnI≈ut
* 
	gCDM
::
	$¸óãDMI≈ut
()

288 
TD©aMaöã«n˚TxnI≈ut
* 
öput
 = 
√w
 
	`TD©aMaöã«n˚TxnI≈ut
();

290 
	`mem£t
–
öput
, 0, –
m_TxnI≈ut
 ));

291 
	`°∫˝y
–
öput
->
èbÀ_«me
,

292 
D©aMaöã«n˚TabÀName
[
m_D©aMaöã«n˚TabÀNum
],

293 (
m_TxnI≈ut
.
èbÀ_«me
 ));

295  
m_D©aMaöã«n˚TabÀNum
 )

298 
öput
->
ac˘_id
 = 
	`Gíî©eR™domCu°omîAccou¡Id
();

301 i‡(
m_∫d
.
	`RndPî˚¡
(67))

303 
öput
->
c_id
 = 
	`Gíî©eR™domCu°omîId
();

307 
öput
->
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

311 
öput
->
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

314 
öput
->
c_id
 = 
	`Gíî©eR™domCu°omîId
();

317 
öput
->
c_id
 = 
	`Gíî©eR™domCu°omîId
();

320 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
	`Gíî©eR™domSecurôyId
(), 
öput
->
symbﬁ
, 
°©ic_ˇ°
<>(–
m_TxnI≈ut
.symbol )));

321 
öput
->
day_of_m⁄th
 = 
m_∫d
.
	`RndI¡R™ge
(1, 31);

322 
öput
->
vﬁ_ö¸
 = 
m_∫d
.
	`RndI¡R™ge
(-2, 3);

323 i‡(
öput
->
vﬁ_ö¸
 == 0)

325 
öput
->
vﬁ_ö¸
 = -3;

331 
öput
->
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

334 
öput
->
co_id
 = 
	`Gíî©eR™domCom∑nyId
();

337 
m_pSecurôõs
->
	`Cª©eSymbﬁ
–
	`Gíî©eR™domSecurôyId
(), 
öput
->
symbﬁ
, 
°©ic_ˇ°
<>(–
m_TxnI≈ut
.symbol )));

340 c⁄° 
ve˘‹
<
TTaxR©eI≈utRow
> *
pR©es
;

341 
UINT
 
iThªshﬁd
;

343 
pR©es
 = 
m_pTaxR©esDivisi⁄
->
	`GëRec‹d
((
UINT
)
m_∫d
.
	`RndI¡R™ge
(0,

344 
m_iDivisi⁄TaxCou¡
 - 1));

345 
iThªshﬁd
 = (
UINT
Ë
m_∫d
.
	`RndI¡R™ge
(0, (UINT)
pR©es
->
	`size
()-1);

347 
	`°∫˝y
(
öput
->
tx_id
,

348 (*
pR©es
)[
iThªshﬁd
].
TAX_ID
,

349 (
m_TxnI≈ut
.
tx_id
));

352 
öput
->
c_id
 = 
	`Gíî©eR™domCu°omîId
();

356 
	`as£π
(
Ál£
);

359 
m_D©aMaöã«n˚TabÀNum
 = (m_D©aMaöã«n˚TabÀNum + 1Ë% 
iD©aMaöã«n˚TabÀCou¡
;

360  
öput
;

361 
	}
}

363 
	gCDM
::
	$DoCÀ™upTxn
( )

365 
	`mem£t
–&
m_CÀ™upTxnI≈ut
, 0, ( m_CleanupTxnInput ));

368 
m_CÀ™upTxnI≈ut
.
°¨t_åade_id
 = (
TTøde
)(–
m_DrivîGlobÆSëtögs
.
cur
.
iDaysOfInôülTødes
 * (TTøde)
HoursPîW‹kDay
 * (TTøde)
Sec⁄dsPîHour
 * ( m_DrivîGlobÆSëtögs.cur.
iA˘iveCu°omîCou¡
 / m_DrivîGlobÆSëtögs.cur.
iSˇÀFa˘‹
 )Ë* 
iAb‹tTøde
 / 100 ) + 1 + 
iTTødeShi·
;

371 
	`°∫˝y
(
m_CÀ™upTxnI≈ut
.
°_≥ndög_id
,

372 (
m_pSètusTy≥
->
	`GëRec‹d
(
ePídög
))->
ST_ID
,

373 (
m_CÀ™upTxnI≈ut
.
°_≥ndög_id
));

374 
	`°∫˝y
(
m_CÀ™upTxnI≈ut
.
°_submôãd_id
,

375 (
m_pSètusTy≥
->
	`GëRec‹d
(
eSubmôãd
))->
ST_ID
,

376 (
m_CÀ™upTxnI≈ut
.
°_submôãd_id
));

377 
	`°∫˝y
(
m_CÀ™upTxnI≈ut
.
°_ˇn˚Àd_id
,

378 (
m_pSètusTy≥
->
	`GëRec‹d
(
eC™˚Àd
))->
ST_ID
,

379 (
m_CÀ™upTxnI≈ut
.
°_ˇn˚Àd_id
));

382 
m_pSUT
->
	`TødeCÀ™up
–&
m_CÀ™upTxnI≈ut
 );

383 
	}
}

387 
TTødeCÀ™upTxnI≈ut
* 
	gCDM
::
	$¸óãTCI≈ut
()

389 
TTødeCÀ™upTxnI≈ut
* 
öput
 = 
√w
 
	`TTødeCÀ™upTxnI≈ut
();

391 
	`mem£t
(
öput
, 0,  (
m_CÀ™upTxnI≈ut
));

394 
öput
->
°¨t_åade_id
 = (
TTøde
)(–
m_DrivîGlobÆSëtögs
.
cur
.
iDaysOfInôülTødes
 * (TTøde)
HoursPîW‹kDay
 * (TTøde)
Sec⁄dsPîHour
 * ( m_DrivîGlobÆSëtögs.cur.
iA˘iveCu°omîCou¡
 / m_DrivîGlobÆSëtögs.cur.
iSˇÀFa˘‹
 )Ë* 
iAb‹tTøde
 / 100 ) + 1 + 
iTTødeShi·
;

397 
	`°∫˝y
(
öput
->
°_≥ndög_id
,

398 (
m_pSètusTy≥
->
	`GëRec‹d
(
ePídög
))->
ST_ID
,

399 (
m_CÀ™upTxnI≈ut
.
°_≥ndög_id
));

400 
	`°∫˝y
(
öput
->
°_submôãd_id
,

401 (
m_pSètusTy≥
->
	`GëRec‹d
(
eSubmôãd
))->
ST_ID
,

402 (
m_CÀ™upTxnI≈ut
.
°_submôãd_id
));

403 
	`°∫˝y
(
öput
->
°_ˇn˚Àd_id
,

404 (
m_pSètusTy≥
->
	`GëRec‹d
(
eC™˚Àd
))->
ST_ID
,

405 (
m_CÀ™upTxnI≈ut
.
°_ˇn˚Àd_id
));

407  
öput
;

408 
	}
}

	@src/workload/tpce/egen/DateTime.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíUtûôõs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

42 c⁄° 
INT32
 
	gm⁄thAºay
[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

45 c⁄° 
INT32
 
	gm⁄thAºayLY
[12] = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

48 
boﬁ
 
	gCD©eTime
::
	$IsVÆid
–
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
 )

50 i‡(
hour
 < 0 || hou∏> 23 || 
möuã
 < 0 || minute > 59 ||

51 
£c⁄d
 < 0 || sec⁄d > 59 || 
m£c
 < 0 || msec > 999)

52  
Ál£
;

54 i‡(
yór
 < 1 || yó∏> 9999 || 
m⁄th
 < 1 || m⁄th > 12 || 
day
 < 1 || day > 31)

55  
Ál£
;

57 i‡(
m⁄th
 != 2)

59  (
day
 <
m⁄thAºay
[
m⁄th
-1] );

63 
INT32
 
FebDays
 = 
m⁄thAºay
[1];

65 i‡((
yór
 % 4) == 0)

67 i‡((
yór
 % 400) == 0)

69 
FebDays
++;

73 i‡((
yór
 % 100) != 0)

75 
FebDays
++;

79  (
day
 <
FebDays
);

81 
	}
}

85 
INT32
 
	gCD©eTime
::
	$YMDtoDayno
–
INT32
 
yr
, INT32 
mm
, INT32 
dd
 )

87 
	`as£π
–
mm
 >= 1 && mm <= 12 );

88 
	`as£π
–
dd
 >= 1 && dd <= 31 );

89 
	`as£π
–
yr
 > 0 );

92 c⁄° 
INT32
 
M⁄thAºay
[] = { 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 };

95 c⁄° 
INT32
 
dy1
 = 365;

97 c⁄° 
INT32
 
dy4
 = 4 * 
dy1
 + 1;

99 c⁄° 
INT32
 
dy100
 = 25 * 
dy4
 - 1;

101 c⁄° 
INT32
 
dy400
 = 4 * 
dy100
 + 1;

104 
INT32
 
jd
 = 
M⁄thAºay
[
mm
-1] + 
dd
 - 1;

107 i‡((
mm
 > 2Ë&& (
yr
 % 4)==0)

109 i‡((
yr
 % 400)==0)

110 
jd
++;

111 i‡((
yr
 % 100)!=0)

112 
jd
++;

116 
yr
--;

117 
jd
 +
yr
 / 400 * 
dy400
;

118 
yr
 %= 400;

119 
jd
 +
yr
 / 100 * 
dy100
;

120 
yr
 %= 100;

121 
jd
 +
yr
 / 4 * 
dy4
;

122 
yr
 %= 4;

123 
jd
 +
yr
 * 
dy1
;

125  
jd
;

126 
	}
}

146 * 
	gCD©eTime
::
	$ToSå
–
INT32
 
°yÀ
 = 11 )

148 c⁄° *
szM⁄thsSh‹t
[] =

150 c⁄° *
szM⁄thsFuŒ
[] =

153 c⁄° *
szAmPm
[] = { "AM", "PM" };

155 c⁄° 
INT32
 
iHr12
[] = { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 };

157 
INT32
 
yór
, 
m⁄th
, 
day
, 
hour
, 
möuã
, 
£c⁄d
, 
m£c
;

158 
INT32
 
p
 = 0;

159 c⁄° 
INT32
 
iMaxSåLí
 = 40;

161 i‡(
m_szText
 =
NULL
)

162 
m_szText
 = 
√w
 [
iMaxSåLí
];

163 
m_szText
[0] = '\0';

165 
	`GëYMDHMS
(&
yór
, &
m⁄th
, &
day
, &
hour
, &
möuã
, &
£c⁄d
, &
m£c
);

167 
size_t
 
ÀngthTŸÆ
 = 
iMaxSåLí
;

168 *
pszText
 = 
m_szText
;

171 
°yÀ
/10)

175 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%04d-%02d-%02d ", 
yór
, 
m⁄th
, 
day
 );

179 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%02d/%02d/%02d ", 
m⁄th
, 
day
, 
yór
%100 );

183 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%02d/%02d/%04d ", 
m⁄th
, 
day
, 
yór
 );

187 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%02d-%s-%04d ", 
day
, 
szM⁄thsSh‹t
[
m⁄th
-1], 
yór
 );

191 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%02d-%s-%02d ", 
day
, 
szM⁄thsSh‹t
[
m⁄th
-1], 
yór
%100 );

195 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%02d-%02d-%02d ", 
m⁄th
, 
day
, 
yór
%100 );

199 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%†%02d %04d ", 
szM⁄thsSh‹t
[
m⁄th
-1], 
day
, 
yór
 );

203 
p
 = 
	`¢¥ötf
–
pszText
, 
ÀngthTŸÆ
, "%†%02d, %04d ", 
szM⁄thsFuŒ
[
m⁄th
-1], 
day
, 
yór
 );

207 
size_t
 
ÀngthRemaöög
 = 
ÀngthTŸÆ
 - 
p
;

208 
pszText
 = 
m_szText
 + ()
p
;

211 
°yÀ
%10)

215 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d:%02d", 
hour
, 
möuã
, 
£c⁄d
 );

219 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d:%02d.%03d", 
hour
, 
möuã
, 
£c⁄d
, 
m£c
 );

223 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d", 
hour
, 
möuã
 );

227 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d:%02d %s", 
iHr12
[
hour
], 
möuã
, 
£c⁄d
, 
szAmPm
[hour/12] );

231 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d:%02d.%03d %s", 
iHr12
[
hour
], 
möuã
, 
£c⁄d
, 
m£c
, 
szAmPm
[hour/12] );

235 
p
 +
	`¢¥ötf
–
pszText
, 
ÀngthRemaöög
, "%02d:%02d %s", 
iHr12
[
hour
], 
möuã
, 
szAmPm
[hour/12] );

240 i‡(
p
>0 && 
m_szText
[p-1] == ' ')

241 
m_szText
[
p
-1] = '\0';

243  
m_szText
;

244 
	}
}

247 
	gCD©eTime
::
	$CD©eTime
()

249 
m_szText
 = 
NULL
;

250 
	`SëToCuºít
();

251 
	}
}

253 
	gCD©eTime
::
	$CD©eTime
(
INT32
 
dayno
)

255 
m_szText
 = 
NULL
;

256 
m_dayno
 = 
dayno
;

257 
m_m£c
 = 0;

258 
	}
}

260 
	gCD©eTime
::
	$CD©eTime
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
)

262 
	`as£π
–
	`IsVÆid
–
yór
, 
m⁄th
, 
day
, 0, 0, 0, 0 ) );

264 
m_szText
 = 
NULL
;

265 
m_dayno
 = 
	`YMDtoDayno
(
yór
, 
m⁄th
, 
day
);

266 
m_m£c
 = 0;

267 
	}
}

270 
	gCD©eTime
::
	$CD©eTime
(c⁄° 
CD©eTime
& 
dt
)

272 
m_dayno
 = 
dt
.m_dayno;

273 
m_m£c
 = 
dt
.m_msec;

274 
m_szText
 = 
NULL
;

275 
	}
}

277 
	gCD©eTime
::~
	$CD©eTime
()

279 i‡(
m_szText
)

280 
dñëe
 [] 
m_szText
;

281 
	}
}

283 
	gCD©eTime
::
	$CD©eTime
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
)

285 
	`as£π
–
	`IsVÆid
–
yór
, 
m⁄th
, 
day
, 
hour
, 
möuã
, 
£c⁄d
, 
m£c
 ) );

287 
m_szText
 = 
NULL
;

288 
m_dayno
 = 
	`YMDtoDayno
(
yór
, 
m⁄th
, 
day
);

289 
m_m£c
 = ((
hour
 * 
MöuãsPîHour
 + 
möuã
Ë* 
Sec⁄dsPîMöuã
 + 
£c⁄d
Ë* 
MsPîSec⁄d
 + 
m£c
;

290 
	}
}

292 
	gCD©eTime
::
	$CD©eTime
(
TPCE
::
TIMESTAMP_STRUCT
 *
ts
)

294 
	`as£π
–
	`IsVÆid
–
ts
->
yór
,Ås->
m⁄th
,Ås->
day
,Ås->
hour
,Ås->
möuã
,Ås->
£c⁄d
,Ås->
‰a˘i⁄
 / 1000000 ) );

296 
m_szText
 = 
NULL
;

297 
m_dayno
 = 
	`YMDtoDayno
(
ts
->
yór
,Ås->
m⁄th
,Ås->
day
);

298 
m_m£c
 = ((
ts
->
hour
 * 
MöuãsPîHour
 +Ås->
möuã
Ë* 
Sec⁄dsPîMöuã
 +Ås->
£c⁄d
Ë* 
MsPîSec⁄d
 +Ås->
‰a˘i⁄
 / 1000000;

299 
	}
}

302 
	gCD©eTime
::
	$SëToCuºít
()

304 #ifde‡
WIN32


306 
SYSTEMTIME
 
time
;

308 
	`GëLoˇlTime
(&
time
);

309 
m_dayno
 = 
	`YMDtoDayno
((
INT32
)
time
.
wYór
, (INT32Èime.
wM⁄th
, (INT32Èime.
wDay
);

310 
m_m£c
 = ((
time
.
wHour
 * 
MöuãsPîHour
 +Åime.
wMöuã
Ë* 
Sec⁄dsPîMöuã
 +Åime.
wSec⁄d
Ë* 
MsPîSec⁄d
 +Åime.
wMûli£c⁄ds
;

311 #ñi‡(
__unix
Ë|| (
_AIX
)

313 
timevÆ
 
tv
;

314 
tm
 
…r
;

315 
£cs
;

316 
	`gëtimeofday
(&
tv
, 
NULL
);

317 
tm
* 
…
 = 
	`loˇ…ime_r
(&
tv
.
tv_£c
, &
…r
);

320 
m_dayno
 = 
	`YMDtoDayno
(
…
->
tm_yór
+1900,Üt->
tm_m⁄
+1,Üt->
tm_mday
);

322 
£cs
 = (
…
->
tm_hour
 * 
MöuãsPîHour
 +Üt->
tm_mö
)*
Sec⁄dsPîMöuã
 +

323 
…
->
tm_£c
;

324 
m_m£c
 = 
°©ic_ˇ°
<
INT32
>(()
£cs
 * 
MsPîSec⁄d
 + 
tv
.
tv_u£c
 / 1000);

326 #îr‹ 
No
 
sy°em
 
routöe
 
to
 
gë
 
time
.

328 
	}
}

330 
	gCD©eTime
::
	$Së
(
INT32
 
dayno
)

332 
m_dayno
 = 
dayno
;

333 
m_m£c
 = 0;

334 
	}
}

336 
	gCD©eTime
::
	$Së
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
)

338 
	`as£π
–
	`IsVÆid
–
yór
, 
m⁄th
, 
day
, 0, 0, 0, 0 ) );

340 
m_dayno
 = 
	`YMDtoDayno
(
yór
, 
m⁄th
, 
day
);

341 
m_m£c
 = 0;

342 
	}
}

344 
	gCD©eTime
::
	$Së
(
INT32
 
yór
, INT32 
m⁄th
, INT32 
day
, INT32 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
)

346 
	`as£π
–
	`IsVÆid
–
yór
, 
m⁄th
, 
day
, 
hour
, 
möuã
, 
£c⁄d
, 
m£c
 ) );

348 
m_dayno
 = 
	`YMDtoDayno
(
yór
, 
m⁄th
, 
day
);

349 
m_m£c
 = ((
hour
 * 
MöuãsPîHour
 + 
möuã
Ë* 
Sec⁄dsPîMöuã
 + 
£c⁄d
Ë* 
MsPîSec⁄d
 + 
m£c
;

350 
	}
}

352 
	gCD©eTime
::
	$SëHMS
(
INT32
 
hour
, INT32 
möuã
, INT32 
£c⁄d
, INT32 
m£c
)

354 
	`as£π
–
	`IsVÆid
–1, 1, 1, 
hour
, 
möuã
, 
£c⁄d
, 
m£c
 ) );

356 
m_m£c
 = ((
hour
 * 
MöuãsPîHour
 + 
möuã
Ë* 
Sec⁄dsPîMöuã
 + 
£c⁄d
Ë* 
MsPîSec⁄d
 + 
m£c
;

357 
	}
}

362 
	gCD©eTime
::
	$GëYMD
–
INT32
* 
yór
, INT32* 
m⁄th
, INT32* 
day
 )

364 
INT32
 
dayno
 = 
m_dayno
;

367 
INT32
 
y
, 
m
;

370 c⁄° 
INT32
 
dy1
 = 365;

372 c⁄° 
INT32
 
dy4
 = 4 * 
dy1
 + 1;

374 c⁄° 
INT32
 
dy100
 = 25 * 
dy4
 - 1;

376 c⁄° 
INT32
 
dy400
 = 4 * 
dy100
 + 1;

378 
y
 = 1;

379 
y
 +(
dayno
/
dy400
) * 400;

380 
dayno
 %
dy400
;

381 i‡(
dayno
 =
dy400
-1)

383 
y
 += 399;

384 
dayno
 -3 * 
dy100
 + 24 * 
dy4
 + 3 * 
dy1
;

388 
y
 +(
dayno
 / 
dy100
) * 100;

389 
dayno
 %
dy100
;

390 
y
 +(
dayno
 / 
dy4
) * 4;

391 
dayno
 %
dy4
;

392 i‡(
dayno
 =
dy4
 - 1)

394 
y
 += 3;

395 
dayno
 -3 * 
dy1
;

399 
y
 +
dayno
 / 
dy1
;

400 
dayno
 %
dy1
;

405 
boﬁ
 
bLópYór
 = 
Ál£
;

406 i‡((
y
 % 4) == 0)

408 i‡((
y
 % 400) == 0)

410 
bLópYór
 = 
åue
;

414 i‡((
y
 % 100) != 0)

416 
bLópYór
 = 
åue
;

421 
m
 = 1;

422 
dayno
++;

423 i‡(
bLópYór
)

425 
dayno
 > 
m⁄thAºayLY
[
m
-1])

427 
dayno
 -
m⁄thAºayLY
[
m
-1];

428 
m
++;

433 
dayno
 > 
m⁄thAºay
[
m
-1])

435 
dayno
 -
m⁄thAºay
[
m
-1];

436 
m
++;

440 *
yór
 = 
y
;

441 *
m⁄th
 = 
m
;

442 *
day
 = 
dayno
;

443 
	}
}

445 
	gCD©eTime
::
	$GëYMDHMS
(
INT32
* 
yór
, INT32* 
m⁄th
, INT32* 
day
, INT32* 
hour
, INT32* 
möuã
, INT32* 
£c⁄d
, INT32* 
m£c
)

447 
INT32
 
ms
 = 
m_m£c
;

449 
	`GëYMD
–
yór
, 
m⁄th
, 
day
 );

451 *
m£c
 = 
ms
 % 
MsPîSec⁄d
;

452 
ms
 /
MsPîSec⁄d
;

453 *
£c⁄d
 = 
ms
 % 
Sec⁄dsPîMöuã
;

454 
ms
 /
Sec⁄dsPîMöuã
;

455 *
möuã
 = 
ms
 % 
MöuãsPîHour
;

456 *
hour
 = 
ms
 / 
MöuãsPîHour
;

457 
	}
}

459 
	gCD©eTime
::
	$GëHMS
(
INT32
* 
hour
, INT32* 
möuã
, INT32* 
£c⁄d
, INT32* 
m£c
)

461 
INT32
 
ms
 = 
m_m£c
;

463 *
m£c
 = 
ms
 % 
MsPîSec⁄d
;

464 
ms
 /
MsPîSec⁄d
;

465 *
£c⁄d
 = 
ms
 % 
Sec⁄dsPîMöuã
;

466 
ms
 /
Sec⁄dsPîMöuã
;

467 *
möuã
 = 
ms
 % 
MöuãsPîHour
;

468 *
hour
 = 
ms
 / 
MöuãsPîHour
;

469 
	}
}

471 
	gCD©eTime
::
	$GëTimeSèmp
(
TPCE
::
TIMESTAMP_STRUCT
* 
ts
)

473 
INT32
 
yór
, 
m⁄th
, 
day
, 
hour
, 
möuã
, 
£c⁄d
, 
m£c
;

475 
	`GëYMDHMS
–&
yór
, &
m⁄th
, &
day
, &
hour
, &
möuã
, &
£c⁄d
, &
m£c
 );

476 
ts
->
yór
 = (
INT16
)year;

477 
ts
->
m⁄th
 = (
UINT16
)month;

478 
ts
->
day
 = (
UINT16
)day;

479 
ts
->
hour
 = (
UINT16
)hour;

480 
ts
->
möuã
 = (
UINT16
)minute;

481 
ts
->
£c⁄d
 = (
UINT16
)second;

482 
ts
->
‰a˘i⁄
 = (
UINT32
)
m£c
*1000000;

483 
	}
}

485 #ifde‡
COMPILE_ODBC_LOAD


486 c⁄° 
INT32
 
	gdayno_1J™1900
 = 
CD©eTime
::
YMDtoDayno
( 1900, 1, 1 );

488 
	gCD©eTime
::
	$GëDBDATETIME
(
DBDATETIME
* 
dt
)

490 
dt
->
dtdays
 = 
m_dayno
 - 
dayno_1J™1900
;

491 
dt
->
dâime
 = 
m_m£c
 * 3 / 10;

492 
	}
}

495 
	gCD©eTime
::
	$Add
(
INT32
 
days
, INT32 
m£c
, 
boﬁ
 
adju°_wìkíd
 )

497 i‡(
adju°_wìkíd
)

499 
days
 = ((day†/ 
DaysPîW‹kWìk
Ë* 
DaysPîWìk
) + (days % DaysPerWorkWeek);

502 
m_dayno
 +
days
;

504 
m_m£c
 +
m£c
;

505 
m_dayno
 +
m_m£c
 / 
MsPîDay
;

506 
m_m£c
 %
MsPîDay
;

507 i‡(
m_m£c
 < 0)

509 
m_dayno
--;

510 
m_m£c
 +
MsPîDay
;

512 
	}
}

513 
	gCD©eTime
::
	$AddMöuãs
(
INT32
 
Möuãs
)

515 
	`Add
–0, 
Möuãs
 * 
Sec⁄dsPîMöuã
 * 
MsPîSec⁄d
);

516 
	}
}

517 
	gCD©eTime
::
	$AddW‹kMs
(
INT64
 
W‹kMs
)

519 
INT32
 
W‹kDays
 = (INT32)(
W‹kMs
 / (
INT64
)
MsPîW‹kDay
);

520 
	`Add
–
W‹kDays
, (
INT32
)(
W‹kMs
 % 
MsPîW‹kDay
), 
åue
 );

521 
	}
}

522 
boﬁ
 
	gCD©eTime
::
›î©‹
 <(c⁄° 
CD©eTime
& 
dt
)

524  (
m_dayno
 =
dt
.m_daynoË? (
m_m£c
 < dt.m_msec) : (m_dayno < dt.m_dayno);

527 
boﬁ
 
	gCD©eTime
::
›î©‹
 <=(c⁄° 
CD©eTime
& 
dt
)

529  (
m_dayno
 =
dt
.m_daynoË? (
m_m£c
 <= dt.m_msec) : (m_dayno <= dt.m_dayno);

532 
«me•a˚
 
	gTPCE


536 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gCD©eTime
& 
	gl_dt
, c⁄° CD©eTime& 
	gr_dt
)

538  (
	gl_dt
.
	gm_dayno
 =
r_dt
.
m_dayno
Ë? (
l_dt
.
m_m£c
 >Ñ_dt.m_msec) : (l_dt.m_dayno >Ñ_dt.m_dayno);

543 
boﬁ
 
	gCD©eTime
::
›î©‹
 >=(c⁄° 
CD©eTime
& 
dt
)

545  (
m_dayno
 =
dt
.m_daynoË? (
m_m£c
 >= dt.m_msec) : (m_dayno >= dt.m_dayno);

548 
boﬁ
 
	gCD©eTime
::
›î©‹
 ==(c⁄° 
CD©eTime
& 
dt
)

550  
m_dayno
 =
dt
.m_daynÿ? 
m_m£c
 =dt.m_m£¯: 
Ál£
;

555 
	gCD©eTime
::
›î©‹
 -(c⁄° 
CD©eTime
& 
dt
)

557 
dSecs
;

558 
	gdSecs
 = ()((
m_dayno
 - 
dt
.m_daynoË* 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
 * 
HoursPîDay
);

559 
	gdSecs
 +()(
m_m£c
 - 
dt
.m_m£cË/ 
MsPîSec⁄dDivis‹
;

560  
	gdSecs
;

563 
INT32
 
	gCD©eTime
::
	$DiffInMûliSec⁄ds
–c⁄° 
CD©eTime
& 
Ba£Time
 )

565 
INT32
 
mSecs
;

566 
mSecs
 = (
m_dayno
 - 
Ba£Time
.m_daynÿË* 
MsPîSec⁄d
 * 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
 * 
HoursPîDay
;

567 
mSecs
 +(
m_m£c
 - 
Ba£Time
.m_msec);

568  
mSecs
;

569 
	}
}

571 
INT32
 
	gCD©eTime
::
	$DiffInMûliSec⁄ds
–
CD©eTime
* 
pBa£Time
 )

573 
INT32
 
mSecs
;

574 
mSecs
 = (
m_dayno
 - 
pBa£Time
->m_daynÿË* 
MsPîSec⁄d
 * 
Sec⁄dsPîMöuã
 * 
MöuãsPîHour
 * 
HoursPîDay
;

575 
mSecs
 +(
m_m£c
 - 
pBa£Time
->m_msec);

576  
mSecs
;

577 
	}
}

579 
	gCD©eTime
& CD©eTime::
›î©‹
 = (c⁄° 
CD©eTime
& 
dt
)

581 
m_dayno
 = 
dt
.m_dayno;

582 
	gm_m£c
 = 
dt
.
m_m£c
;

584  *
	gthis
;

587 
	gCD©eTime
& CD©eTime::
›î©‹
 +(c⁄° 
CD©eTime
& 
dt
)

589 
Add
(
dt
.
m_dayno
, dt.
m_m£c
);

591  *
	gthis
;

	@src/workload/tpce/egen/EGenGenerateAndLoad.cpp

43 
	~"w‹klﬂd/ç˚/egí/EGíGíî©eAndLﬂd_°dafx.h
"

44 
	~"w‹klﬂd/ç˚/egí/DrivîP¨amSëtögs.h
"

45 
	~"°dio.h
"

47 #ifde‡
COMPILE_FLAT_FILE_LOAD


48 
FILE
 *
	gf£c
, *
	gfhs
;

50 
usög
 
«me•a˚
 
	gTPCE
;

71 
	gCGíî©eAndLﬂd
::
	$CGíî©eAndLﬂd
(
CI≈utFûes
 
öputFûes
,

72 
TIdít
 
iCu°omîCou¡
,

73 
TIdít
 
iSèπFromCu°omî
,

74 
TIdít
 
iTŸÆCu°omîs
,

75 
UINT
 
iLﬂdUnôSize
,

76 
UINT
 
iSˇÀFa˘‹
,

77 
UINT
 
iDaysOfInôülTødes
,

78 
CBa£LﬂdîFa˘‹y
* 
pLﬂdîFa˘‹y
,

79 
CBa£Loggî
* 
pLoggî
,

80 
CGíî©eAndLﬂdBa£Ouçut
* 
pOuçut
,

81 * 
szInDú
,

82 
boﬁ
 
bCacheE«bÀd


84 : 
	`m_öputFûes
(
öputFûes
)

85 , 
	`m_iSèπFromCu°omî
(
iSèπFromCu°omî
)

86 , 
	`m_iCu°omîCou¡
(
iCu°omîCou¡
)

87 , 
	`m_iTŸÆCu°omîs
(
iTŸÆCu°omîs
)

88 , 
	`m_iLﬂdUnôSize
(
iLﬂdUnôSize
)

89 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

90 , 
	`m_iHoursOfInôülTødes
(
iDaysOfInôülTødes
*
HoursPîW‹kDay
)

91 , 
	`m_pLﬂdîFa˘‹y
(
pLﬂdîFa˘‹y
)

92 , 
	`m_pOuçut
(
pOuçut
)

93 , 
	`m_pLoggî
(
pLoggî
)

94 , 
	`m_LﬂdîSëtögs
(
iTŸÆCu°omîs
, iTŸÆCu°omîs, 
iSèπFromCu°omî
, 
iCu°omîCou¡
, 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
 )

95 , 
	$m_bCacheE«bÀd
(
bCacheE«bÀd
)

98 
	`°∫˝y
–
m_szInDú
, 
szInDú
, (m_szInDir));

101 
m_pLoggî
->
	`SídToLoggî
(
m_LﬂdîSëtögs
);

102 
	}
}

113 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdAddªss
()

115 
boﬁ
 
bRë
;

116 
CAddªssTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
,

119 
m_iSèπFromCu°omî
 !
iDeÁu…SèπFromCu°omî
);

120 
CBa£Lﬂdî
<
ADDRESS_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eAddªssLﬂdî
();

121 
INT64
 
iC¡
=0;

123 
m_pOuçut
->
	`OuçutSèπ
("Generating ADDRESSÅable...");

125 
pLﬂd
->
	`Inô
();

129 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

131 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

133 i‡(++
iC¡
 % 20000 == 0)

135 
m_pOuçut
->
	`OuçutProgªss
(".");

138 } 
bRë
);

140 
pLﬂd
->
	`FöishLﬂd
();

141 
dñëe
 
pLﬂd
;

143 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

144 
m_pOuçut
->
	`OuçutNewlöe
();

145 
m_pOuçut
->
	`OuçutNewlöe
();

146 
	}
}

157 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCh¨ge
()

159 
boﬁ
 
bEndOfFûe
;

160 
CCh¨geTabÀ
 
	`TabÀ
–
m_szInDú
 );

161 
CBa£Lﬂdî
<
CHARGE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCh¨geLﬂdî
();

163 
m_pOuçut
->
	`OuçutSèπ
("Generating CHARGEÅable...");

165 
pLﬂd
->
	`Inô
();

167 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

168  !
bEndOfFûe
 )

170 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

171 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

173 
pLﬂd
->
	`FöishLﬂd
();

174 
dñëe
 
pLﬂd
;

176 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

177 
m_pOuçut
->
	`OuçutNewlöe
();

178 
m_pOuçut
->
	`OuçutNewlöe
();

179 
	}
}

190 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCommissi⁄R©e
()

192 
boﬁ
 
bEndOfFûe
;

193 
CCommissi⁄R©eTabÀ
 
	`TabÀ
–
m_szInDú
 );

194 
CBa£Lﬂdî
<
COMMISSION_RATE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCommissi⁄R©eLﬂdî
();

196 
m_pOuçut
->
	`OuçutSèπ
("Generating COMMISSION_RATEÅable...");

198 
pLﬂd
->
	`Inô
();

200 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

201  !
bEndOfFûe
 )

203 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

204 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

206 
pLﬂd
->
	`FöishLﬂd
();

207 
dñëe
 
pLﬂd
;

209 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

210 
m_pOuçut
->
	`OuçutNewlöe
();

211 
m_pOuçut
->
	`OuçutNewlöe
();

212 
	}
}

223 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCom∑ny
()

225 
boﬁ
 
bRë
;

226 
CCom∑nyTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

227 
CBa£Lﬂdî
<
COMPANY_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCom∑nyLﬂdî
();

229 
m_pOuçut
->
	`OuçutSèπ
("Generating COMPANYÅable...");

231 
pLﬂd
->
	`Inô
();

235 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

237 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

239 } 
bRë
);

241 
pLﬂd
->
	`FöishLﬂd
();

243 
dñëe
 
pLﬂd
;

245 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

246 
m_pOuçut
->
	`OuçutNewlöe
();

247 
m_pOuçut
->
	`OuçutNewlöe
();

248 
	}
}

259 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCom∑nyCom≥tô‹
()

261 
boﬁ
 
bRë
;

262 
CCom∑nyCom≥tô‹TabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

263 
CBa£Lﬂdî
<
COMPANY_COMPETITOR_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCom∑nyCom≥tô‹Lﬂdî
();

265 
m_pOuçut
->
	`OuçutSèπ
("Generating COMPANY_COMPETITORÅable...");

267 
pLﬂd
->
	`Inô
();

271 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

273 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

275 } 
bRë
);

277 
pLﬂd
->
	`FöishLﬂd
();

279 
dñëe
 
pLﬂd
;

281 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

282 
m_pOuçut
->
	`OuçutNewlöe
();

283 
m_pOuçut
->
	`OuçutNewlöe
();

284 
	}
}

295 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCu°omî
()

297 
boﬁ
 
bRë
;

298 
CCu°omîTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

299 
CBa£Lﬂdî
<
CUSTOMER_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCu°omîLﬂdî
();

300 
INT64
 
iC¡
=0;

302 
m_pOuçut
->
	`OuçutSèπ
("Generating CUSTOMERÅable...");

304 
pLﬂd
->
	`Inô
();

308 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

310 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

312 i‡(++
iC¡
 % 20000 == 0)

314 
m_pOuçut
->
	`OuçutProgªss
(".");

317 } 
bRë
);

319 
pLﬂd
->
	`FöishLﬂd
();

321 
dñëe
 
pLﬂd
;

323 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

324 
m_pOuçut
->
	`OuçutNewlöe
();

325 
m_pOuçut
->
	`OuçutNewlöe
();

326 
	}
}

337 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCu°omîAccou¡AndAccou¡Pîmissi⁄
()

339 
boﬁ
 
bRë
;

340 
CCu°omîAccou¡sAndPîmissi⁄sTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iLﬂdUnôSize
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

341 
CBa£Lﬂdî
<
CUSTOMER_ACCOUNT_ROW
>* 
pCALﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCu°omîAccou¡Lﬂdî
();

342 
CBa£Lﬂdî
<
ACCOUNT_PERMISSION_ROW
>* 
pAPLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eAccou¡Pîmissi⁄Lﬂdî
();

343 
INT64
 
iC¡
=0;

344 
UINT
 
i
;

346 
m_pOuçut
->
	`OuçutSèπ
("Generating CUSTOMER_ACCOUNTÅableánd ACCOUNT_PERMISSIONÅable...");

348 
pCALﬂd
->
	`Inô
();

349 
pAPLﬂd
->
	`Inô
();

353 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

355 
pCALﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëCARow
());

357 
i
=0; i<
TabÀ
.
	`GëCAPîmsCou¡
(); ++i)

360 
pAPLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëAPRow
(
i
));

364 i‡(++
iC¡
 % 10000 == 0)

366 
m_pOuçut
->
	`OuçutProgªss
(".");

370 i‡(
iC¡
 % 10000 == 0)

372 
pCALﬂd
->
	`Commô
();

373 
pAPLﬂd
->
	`Commô
();

376 } 
bRë
);

377 
pCALﬂd
->
	`FöishLﬂd
();

378 
pAPLﬂd
->
	`FöishLﬂd
();

379 
dñëe
 
pCALﬂd
;

380 
dñëe
 
pAPLﬂd
;

382 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

383 
m_pOuçut
->
	`OuçutNewlöe
();

384 
m_pOuçut
->
	`OuçutNewlöe
();

385 
	}
}

396 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdCu°omîTaxøã
()

398 
boﬁ
 
bRë
;

399 
CCu°omîTaxøãsTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

400 
CBa£Lﬂdî
<
CUSTOMER_TAXRATE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCu°omîTaxøãLﬂdî
();

401 
INT64
 
iC¡
=0;

402 
UINT
 
i
;

404 
m_pOuçut
->
	`OuçutSèπ
("Generating CUSTOMER_TAX_RATEÅable...");

406 
pLﬂd
->
	`Inô
();

410 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

412 
i
=0; i<
TabÀ
.
	`GëTaxR©esCou¡
(); ++i)

414 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRowByIndex
(
i
));

416 i‡(++
iC¡
 % 20000 == 0)

418 
m_pOuçut
->
	`OuçutProgªss
(".");

421 } 
bRë
);

423 
pLﬂd
->
	`FöishLﬂd
();

425 
dñëe
 
pLﬂd
;

427 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

428 
m_pOuçut
->
	`OuçutNewlöe
();

429 
m_pOuçut
->
	`OuçutNewlöe
();

430 
	}
}

441 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdDaûyM¨kë
()

443 
boﬁ
 
bRë
;

444 
CDaûyM¨këTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

445 
CBa£Lﬂdî
<
DAILY_MARKET_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eDaûyM¨këLﬂdî
();

446 
INT64
 
iC¡
=0;

448 
m_pOuçut
->
	`OuçutSèπ
("Generating DAILY_MARKETÅable...");

450 
pLﬂd
->
	`Inô
();

454 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

456 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

458 i‡(++
iC¡
 % 20000 == 0)

460 
m_pOuçut
->
	`OuçutProgªss
(".");

463 i‡(
iC¡
 % 6525 == 0)

465 
pLﬂd
->
	`Commô
();

468 } 
bRë
);

470 
pLﬂd
->
	`FöishLﬂd
();

472 
dñëe
 
pLﬂd
;

474 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

475 
m_pOuçut
->
	`OuçutNewlöe
();

476 
m_pOuçut
->
	`OuçutNewlöe
();

477 
	}
}

488 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdExch™ge
()

490 
boﬁ
 
bEndOfFûe
;

491 
CExch™geTabÀ
 
	`TabÀ
–
m_szInDú
, 
m_iTŸÆCu°omîs
 );

492 
CBa£Lﬂdî
<
EXCHANGE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eExch™geLﬂdî
();

494 
m_pOuçut
->
	`OuçutSèπ
("Generating EXCHANGEÅable...");

496 
pLﬂd
->
	`Inô
();

498 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

499  !
bEndOfFûe
 )

501 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

502 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

504 
pLﬂd
->
	`FöishLﬂd
();

505 
dñëe
 
pLﬂd
;

507 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

508 
m_pOuçut
->
	`OuçutNewlöe
();

509 
m_pOuçut
->
	`OuçutNewlöe
();

510 
	}
}

521 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdFö™cül
()

523 
boﬁ
 
bRë
;

524 
CFö™cülTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

525 
CBa£Lﬂdî
<
FINANCIAL_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eFö™cülLﬂdî
();

526 
INT64
 
iC¡
=0;

528 
m_pOuçut
->
	`OuçutSèπ
("Generating FINANCIALÅable...");

530 
pLﬂd
->
	`Inô
();

534 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

536 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

538 i‡(++
iC¡
 % 20000 == 0)

540 
m_pOuçut
->
	`OuçutProgªss
(".");

543 i‡(
iC¡
 % 5000 == 0)

545 
pLﬂd
->
	`Commô
();

548 } 
bRë
);

550 
pLﬂd
->
	`FöishLﬂd
();

552 
dñëe
 
pLﬂd
;

554 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

555 
m_pOuçut
->
	`OuçutNewlöe
();

556 
m_pOuçut
->
	`OuçutNewlöe
();

557 
	}
}

568 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdHﬁdögAndTøde
()

570 
boﬁ
 
bRë
;

571 
CTødeGí
* 
pTødeGí
;

573 
CBa£Lﬂdî
<
HOLDING_ROW
>* 
pHﬁdögsLﬂd
;

574 
CBa£Lﬂdî
<
HOLDING_HISTORY_ROW
>* 
pHﬁdögHi°‹yLﬂd
;

575 
CBa£Lﬂdî
<
HOLDING_SUMMARY_ROW
>* 
pHﬁdögSumm¨yLﬂd
;

576 
CBa£Lﬂdî
<
TRADE_ROW
>* 
pTødesLﬂd
;

579 
CBa£Lﬂdî
<
SETTLEMENT_ROW
>* 
pSëéemítLﬂd
;

580 
CBa£Lﬂdî
<
TRADE_HISTORY_ROW
>* 
pHi°‹yLﬂd
;

581 
CBa£Lﬂdî
<
CASH_TRANSACTION_ROW
>* 
pCashLﬂd
;

582 
CBa£Lﬂdî
<
BROKER_ROW
>* 
pBrokîLﬂd
;

583 
iC¡
=0;

584 
i
;

585 
iCuºítLﬂdUnô
 = 1;

586 
szCuºítLﬂdUnô
[11];

588 
pHﬁdögsLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eHﬁdögLﬂdî
();

589 
pHﬁdögHi°‹yLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eHﬁdögHi°‹yLﬂdî
();

590 
pHﬁdögSumm¨yLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eHﬁdögSumm¨yLﬂdî
();

591 
pTødesLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eTødeLﬂdî
();

594 
pSëéemítLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eSëéemítLﬂdî
();

595 
pHi°‹yLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eTødeHi°‹yLﬂdî
();

596 
pCashLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eCashTønß˘i⁄Lﬂdî
();

597 
pBrokîLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eBrokîLﬂdî
();

599 
m_pOuçut
->
	`OuçutSèπ
("Generating TRADE, SETTLEMENT, TRADE HISTORY, CASH TRANSACTION, "

602 
pTødeGí
 = 
√w
 
	`CTødeGí
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
,

603 
m_iTŸÆCu°omîs
, 
m_iLﬂdUnôSize
,

604 
m_iSˇÀFa˘‹
, 
m_iHoursOfInôülTødes
,

605 
m_bCacheE«bÀd


612 
pTødesLﬂd
->
	`Inô
();

613 
pSëéemítLﬂd
->
	`Inô
();

614 
pHi°‹yLﬂd
->
	`Inô
();

615 
pCashLﬂd
->
	`Inô
();

616 
pBrokîLﬂd
->
	`Inô
();

617 
pHﬁdögHi°‹yLﬂd
->
	`Inô
();

618 
pHﬁdögsLﬂd
->
	`Inô
();

619 
pHﬁdögSumm¨yLﬂd
->
	`Inô
();

627 
bRë
 = 
pTødeGí
->
	`Gíî©eNextTøde
();

629 
pTødesLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëTødeRow
());

631  
i
=0; i<
pTødeGí
->
	`GëTødeHi°‹yRowCou¡
(); ++i)

633 
pHi°‹yLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëTødeHi°‹yRow
(
i
));

636 i‡–
pTødeGí
->
	`GëSëéemítRowCou¡
() )

638 
pSëéemítLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëSëéemítRow
());

641 i‡–
pTødeGí
->
	`GëCashTønß˘i⁄RowCou¡
() )

643 
pCashLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëCashTønß˘i⁄Row
());

646  
i
=0; i<
pTødeGí
->
	`GëHﬁdögHi°‹yRowCou¡
(); ++i)

648 
pHﬁdögHi°‹yLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëHﬁdögHi°‹yRow
(
i
));

656 i‡(++
iC¡
 % 10000 == 0)

658 
m_pOuçut
->
	`OuçutProgªss
(".");

662 i‡(
iC¡
 % 10000 == 0)

664 
pTødesLﬂd
->
	`Commô
();

665 
pSëéemítLﬂd
->
	`Commô
();

666 
pHi°‹yLﬂd
->
	`Commô
();

667 
pCashLﬂd
->
	`Commô
();

668 
pHﬁdögHi°‹yLﬂd
->
	`Commô
();

673 } 
bRë
);

679 
bRë
 = 
pTødeGí
->
	`Gíî©eNextBrokîRec‹d
();

681 
pBrokîLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëBrokîRow
());

684 i‡(++
iC¡
 % 10000 == 0)

686 
pBrokîLﬂd
->
	`Commô
();

688 } 
bRë
);

690 
m_pOuçut
->
	`OuçutProgªss
("t");

696 
bRë
 = 
pTødeGí
->
	`Gíî©eNextHﬁdögSumm¨yRow
();

698 
pHﬁdögSumm¨yLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëHﬁdögSumm¨yRow
());

700 i‡(++
iC¡
 % 10000 == 0)

702 
m_pOuçut
->
	`OuçutProgªss
(".");

706 i‡(
iC¡
 % 10000 == 0)

708 
pHﬁdögSumm¨yLﬂd
->
	`Commô
();

710 } 
bRë
);

716 
bRë
 = 
pTødeGí
->
	`Gíî©eNextHﬁdög
();

718 
pHﬁdögsLﬂd
->
	`WrôeNextRec‹d
(
pTødeGí
->
	`GëHﬁdögRow
());

720 i‡(++
iC¡
 % 10000 == 0)

722 
m_pOuçut
->
	`OuçutProgªss
(".");

726 i‡(
iC¡
 % 10000 == 0)

728 
pHﬁdögsLﬂd
->
	`Commô
();

730 } 
bRë
);

732 
pTødesLﬂd
->
	`FöishLﬂd
();

733 
pSëéemítLﬂd
->
	`FöishLﬂd
();

734 
pHi°‹yLﬂd
->
	`FöishLﬂd
();

735 
pCashLﬂd
->
	`FöishLﬂd
();

736 
pBrokîLﬂd
->
	`FöishLﬂd
();

737 
pHﬁdögHi°‹yLﬂd
->
	`FöishLﬂd
();

738 
pHﬁdögsLﬂd
->
	`FöishLﬂd
();

739 
pHﬁdögSumm¨yLﬂd
->
	`FöishLﬂd
();

744 
	`¢¥ötf
(
szCuºítLﬂdUnô
, (szCuºítLﬂdUnô), "%d", 
iCuºítLﬂdUnô
++);

746 
m_pOuçut
->
	`OuçutProgªss
(
szCuºítLﬂdUnô
);

748 } 
pTødeGí
->
	`InôNextLﬂdUnô
());

750 
dñëe
 
pHﬁdögsLﬂd
;

751 
dñëe
 
pHﬁdögHi°‹yLﬂd
;

752 
dñëe
 
pHﬁdögSumm¨yLﬂd
;

753 
dñëe
 
pTødesLﬂd
;

756 
dñëe
 
pSëéemítLﬂd
;

757 
dñëe
 
pHi°‹yLﬂd
;

758 
dñëe
 
pCashLﬂd
;

759 
dñëe
 
pBrokîLﬂd
;

761 
dñëe
 
pTødeGí
;

763 
m_pOuçut
->
	`OuçutCom∂ëe
(".loaded.");

764 
m_pOuçut
->
	`OuçutNewlöe
();

765 
m_pOuçut
->
	`OuçutNewlöe
();

766 
	}
}

777 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdIndu°ry
()

779 
boﬁ
 
bEndOfFûe
;

780 
CIndu°ryTabÀ
 
	`TabÀ
–
m_szInDú
 );

781 
CBa£Lﬂdî
<
INDUSTRY_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eIndu°ryLﬂdî
();

783 
m_pOuçut
->
	`OuçutSèπ
("Generating INDUSTRYÅable...");

785 
pLﬂd
->
	`Inô
();

787 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

788  !
bEndOfFûe
 )

790 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

791 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

793 
pLﬂd
->
	`FöishLﬂd
();

794 
dñëe
 
pLﬂd
;

796 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

797 
m_pOuçut
->
	`OuçutNewlöe
();

798 
m_pOuçut
->
	`OuçutNewlöe
();

799 
	}
}

810 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdLa°Tøde
()

812 
boﬁ
 
bRë
;

813 
CLa°TødeTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî


814 , 
m_iHoursOfInôülTødes
);

815 
CBa£Lﬂdî
<
LAST_TRADE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eLa°TødeLﬂdî
();

817 
m_pOuçut
->
	`OuçutSèπ
("Generating LAST TRADEÅable...");

819 
pLﬂd
->
	`Inô
();

823 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

825 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

827 } 
bRë
);

829 
pLﬂd
->
	`FöishLﬂd
();

831 
dñëe
 
pLﬂd
;

833 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

834 
m_pOuçut
->
	`OuçutNewlöe
();

835 
m_pOuçut
->
	`OuçutNewlöe
();

836 
	}
}

847 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdNewsIãmAndNewsXRef
()

849 
boﬁ
 
bRë
;

851 
CNewsIãmAndXRefTabÀ
* 
pTabÀ
 = 
√w
 
	`CNewsIãmAndXRefTabÀ
–
m_öputFûes
,

852 
m_iCu°omîCou¡
,

853 
m_iSèπFromCu°omî
,

854 
m_iHoursOfInôülTødes
);

855 
CBa£Lﬂdî
<
NEWS_ITEM_ROW
>* 
pNewsIãmLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eNewsIãmLﬂdî
();

856 
CBa£Lﬂdî
<
NEWS_XREF_ROW
>* 
pNewsXRefLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eNewsXRefLﬂdî
();

857 
INT64
 
iC¡
=0;

859 
m_pOuçut
->
	`OuçutSèπ
("Generating NEWS_ITEMánd NEWS_XREFÅable...");

861 
pNewsIãmLﬂd
->
	`Inô
();

862 
pNewsXRefLﬂd
->
	`Inô
();

866 
bRë
 = 
pTabÀ
->
	`Gíî©eNextRec‹d
();

868 
pNewsIãmLﬂd
->
	`WrôeNextRec‹d
(
pTabÀ
->
	`GëNewsIãmRow
());

870 
pNewsXRefLﬂd
->
	`WrôeNextRec‹d
(
pTabÀ
->
	`GëNewsXRefRow
());

872 i‡(++
iC¡
 % 1000 == 0)

874 
m_pOuçut
->
	`OuçutProgªss
(".");

876 
pNewsIãmLﬂd
->
	`Commô
();

877 
pNewsXRefLﬂd
->
	`Commô
();

880 } 
bRë
);

881 
pNewsIãmLﬂd
->
	`FöishLﬂd
();

882 
pNewsXRefLﬂd
->
	`FöishLﬂd
();

883 
dñëe
 
pNewsIãmLﬂd
;

884 
dñëe
 
pNewsXRefLﬂd
;

885 
dñëe
 
pTabÀ
;

887 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

888 
m_pOuçut
->
	`OuçutNewlöe
();

889 
m_pOuçut
->
	`OuçutNewlöe
();

890 
	}
}

901 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdSe˘‹
()

903 
boﬁ
 
bEndOfFûe
;

904 
CSe˘‹TabÀ
 
	`TabÀ
–
m_szInDú
 );

905 
CBa£Lﬂdî
<
SECTOR_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eSe˘‹Lﬂdî
();

907 
m_pOuçut
->
	`OuçutSèπ
("Generating SECTORÅable...");

909 
pLﬂd
->
	`Inô
();

911 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

912  !
bEndOfFûe
 )

914 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

915 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

917 
pLﬂd
->
	`FöishLﬂd
();

918 
dñëe
 
pLﬂd
;

920 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

921 
m_pOuçut
->
	`OuçutNewlöe
();

922 
m_pOuçut
->
	`OuçutNewlöe
();

923 
	}
}

934 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdSecurôy
()

936 
boﬁ
 
bRë
;

937 
CSecurôyTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

938 
CBa£Lﬂdî
<
SECURITY_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eSecurôyLﬂdî
();

939 
INT64
 
iC¡
=0;

941 
m_pOuçut
->
	`OuçutSèπ
("Generating SECURITYÅable...");

943 
pLﬂd
->
	`Inô
();

947 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

949 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

951 i‡(++
iC¡
 % 20000 == 0)

953 
m_pOuçut
->
	`OuçutProgªss
(".");

956 } 
bRë
);

958 
pLﬂd
->
	`FöishLﬂd
();

960 
dñëe
 
pLﬂd
;

962 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

963 
m_pOuçut
->
	`OuçutNewlöe
();

964 
m_pOuçut
->
	`OuçutNewlöe
();

965 
	}
}

976 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdSètusTy≥
()

978 
boﬁ
 
bEndOfFûe
;

979 
CSètusTy≥TabÀ
 
	`TabÀ
–
m_szInDú
 );

980 
CBa£Lﬂdî
<
STATUS_TYPE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eSètusTy≥Lﬂdî
();

982 
m_pOuçut
->
	`OuçutSèπ
("Generating STATUS_TYPEÅable...");

984 
pLﬂd
->
	`Inô
();

986 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

987  !
bEndOfFûe
 )

989 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

990 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

992 
pLﬂd
->
	`FöishLﬂd
();

993 
dñëe
 
pLﬂd
;

995 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

996 
m_pOuçut
->
	`OuçutNewlöe
();

997 
m_pOuçut
->
	`OuçutNewlöe
();

998 
	}
}

1009 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdTaxøã
()

1011 
boﬁ
 
bM‹eRec‹ds
;

1012 
CTaxøãTabÀ
 
	`TabÀ
–
m_öputFûes
 );

1013 
CBa£Lﬂdî
<
TAXRATE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eTaxøãLﬂdî
();

1015 
m_pOuçut
->
	`OuçutSèπ
("Generating TAXRATEÅable...");

1017 
pLﬂd
->
	`Inô
();

1021 
bM‹eRec‹ds
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

1023 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

1025 }  
bM‹eRec‹ds
 );

1027 
pLﬂd
->
	`FöishLﬂd
();

1028 
dñëe
 
pLﬂd
;

1030 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

1031 
m_pOuçut
->
	`OuçutNewlöe
();

1032 
m_pOuçut
->
	`OuçutNewlöe
();

1033 
	}
}

1044 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdTødeTy≥
()

1046 
boﬁ
 
bEndOfFûe
;

1047 
CTødeTy≥TabÀ
 
	`TabÀ
–
m_szInDú
 );

1048 
CBa£Lﬂdî
<
TRADE_TYPE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eTødeTy≥Lﬂdî
();

1050 
m_pOuçut
->
	`OuçutSèπ
("Generating TRADE_TYPEÅable...");

1052 
pLﬂd
->
	`Inô
();

1054 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

1055  !
bEndOfFûe
 )

1057 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

1058 
bEndOfFûe
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

1060 
pLﬂd
->
	`FöishLﬂd
();

1061 
dñëe
 
pLﬂd
;

1063 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

1064 
m_pOuçut
->
	`OuçutNewlöe
();

1065 
m_pOuçut
->
	`OuçutNewlöe
();

1066 
	}
}

1077 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdW©chLi°AndW©chIãm
()

1079 
boﬁ
 
bRë
;

1080 
CW©chLi°sAndIãmsTabÀ
 
	`TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1081 
CBa£Lﬂdî
<
WATCH_LIST_ROW
>* 
pW©chLi°sLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eW©chLi°Lﬂdî
();

1082 
CBa£Lﬂdî
<
WATCH_ITEM_ROW
>* 
pW©chIãmsLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eW©chIãmLﬂdî
();

1083 
INT64
 
iC¡
=0;

1084 
UINT
 
i
;

1086 
m_pOuçut
->
	`OuçutSèπ
("Generating WATCH_LISTÅableánd WATCH_ITEMÅable...");

1088 
pW©chLi°sLﬂd
->
	`Inô
();

1089 
pW©chIãmsLﬂd
->
	`Inô
();

1093 
bRë
 = 
TabÀ
.
	`Gíî©eNextRec‹d
();

1095 
pW©chLi°sLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëWLRow
());

1097 
i
=0; i<
TabÀ
.
	`GëWICou¡
(); ++i)

1099 
pW©chIãmsLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëWIRow
(
i
));

1101 i‡(++
iC¡
 % 20000 == 0)

1103 
m_pOuçut
->
	`OuçutProgªss
(".");

1105 
pW©chLi°sLﬂd
->
	`Commô
();

1106 
pW©chIãmsLﬂd
->
	`Commô
();

1109 } 
bRë
);

1111 
pW©chLi°sLﬂd
->
	`FöishLﬂd
();

1112 
pW©chIãmsLﬂd
->
	`FöishLﬂd
();

1114 
dñëe
 
pW©chLi°sLﬂd
;

1115 
dñëe
 
pW©chIãmsLﬂd
;

1117 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

1118 
m_pOuçut
->
	`OuçutNewlöe
();

1119 
m_pOuçut
->
	`OuçutNewlöe
();

1120 
	}
}

1131 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdZùCode
()

1133 
CZùCodeTabÀ
 
	`TabÀ
–
m_öputFûes
 );

1134 
CBa£Lﬂdî
<
ZIP_CODE_ROW
>* 
pLﬂd
 = 
m_pLﬂdîFa˘‹y
->
	`Cª©eZùCodeLﬂdî
();

1136 
m_pOuçut
->
	`OuçutSèπ
("Generating ZIP_CODEÅable...");

1138 
pLﬂd
->
	`Inô
();

1140  
TabÀ
.
	`Gíî©eNextRec‹d
() )

1142 
pLﬂd
->
	`WrôeNextRec‹d
(
TabÀ
.
	`GëRow
());

1144 
pLﬂd
->
	`FöishLﬂd
();

1145 
dñëe
 
pLﬂd
;

1147 
m_pOuçut
->
	`OuçutCom∂ëe
("loaded.");

1148 
m_pOuçut
->
	`OuçutNewlöe
();

1149 
m_pOuçut
->
	`OuçutNewlöe
();

1150 
	}
}

1163 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdFixedTabÀs
()

1166 
	`Gíî©eAndLﬂdCh¨ge
();

1167 
	`Gíî©eAndLﬂdCommissi⁄R©e
();

1168 
	`Gíî©eAndLﬂdExch™ge
();

1169 
	`Gíî©eAndLﬂdIndu°ry
();

1170 
	`Gíî©eAndLﬂdSe˘‹
();

1171 
	`Gíî©eAndLﬂdSètusTy≥
();

1172 
	`Gíî©eAndLﬂdTaxøã
();

1173 
	`Gíî©eAndLﬂdTødeTy≥
();

1174 
	`Gíî©eAndLﬂdZùCode
();

1175 
	}
}

1189 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdSˇlögTabÀs
()

1193 
	`Gíî©eAndLﬂdAddªss
();

1194 
	`Gíî©eAndLﬂdCu°omî
();

1195 
	`Gíî©eAndLﬂdCu°omîAccou¡AndAccou¡Pîmissi⁄
();

1196 
	`Gíî©eAndLﬂdCu°omîTaxøã
();

1197 
	`Gíî©eAndLﬂdW©chLi°AndW©chIãm
();

1201 
	`Gíî©eAndLﬂdCom∑ny
();

1202 
	`Gíî©eAndLﬂdCom∑nyCom≥tô‹
();

1203 
	`Gíî©eAndLﬂdDaûyM¨kë
();

1204 
	`Gíî©eAndLﬂdFö™cül
();

1205 
	`Gíî©eAndLﬂdLa°Tøde
();

1206 
	`Gíî©eAndLﬂdNewsIãmAndNewsXRef
();

1207 
	`Gíî©eAndLﬂdSecurôy
();

1208 
	}
}

1222 
	gCGíî©eAndLﬂd
::
	$Gíî©eAndLﬂdGrowögTabÀs
()

1224 
	`Gíî©eAndLﬂdHﬁdögAndTøde
();

1225 
	}
}

1234 
	gCGíî©eAndLﬂd
::
	$InôAddªss
(){

1236 
addªssTabÀ

√w
 
	`CAddªssTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
, m_iSèπFromCu°omî !
iDeÁu…SèπFromCu°omî
);

1239 
	}
}

1241 
	gCGíî©eAndLﬂd
::
	$Rñó£Addªss
(){

1242 
dñëe
 
addªssTabÀ
;

1243 
	}
}

1245 
PADDRESS_ROW
 
	gCGíî©eAndLﬂd
::
	$gëAddªssRow
()

1247  (
PADDRESS_ROW
)
addªssTabÀ
->
	`GëRow
();

1248 
	}
}

1251 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextAddªss
()

1253  
addªssTabÀ
->
	`Gíî©eNextRec‹d
();

1254 
	}
}

1258 
	gCGíî©eAndLﬂd
::
	$InôCh¨ge
()

1260 
ch¨geTabÀ
 = 
√w
 
	`CCh¨geTabÀ
–
m_szInDú
 );

1261 
	}
}

1263 
	gCGíî©eAndLﬂd
::
	$Rñó£Ch¨ge
(){

1264 
dñëe
 
ch¨geTabÀ
;

1265 
	}
}

1268 
PCHARGE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCh¨geRow
()

1270  (
PCHARGE_ROW
)
ch¨geTabÀ
->
	`GëRow
();

1271 
	}
}

1273 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°Ch¨ge
()

1275  
ch¨geTabÀ
->
	`Gíî©eNextRec‹d
();

1276 
	}
}

1280 
	gCGíî©eAndLﬂd
::
	$InôCommissi⁄R©e
()

1282 
commissi⁄R©eTabÀ
 = 
√w
 
	`CCommissi⁄R©eTabÀ
–
m_szInDú
 );

1284 
	}
}

1285 
	gCGíî©eAndLﬂd
::
	$Rñó£Commissi⁄R©e
(){

1286 
dñëe
 
commissi⁄R©eTabÀ
;

1287 
	}
}

1288 
PCOMMISSION_RATE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCommissi⁄R©eRow
()

1290  (
PCOMMISSION_RATE_ROW
)
commissi⁄R©eTabÀ
->
	`GëRow
();

1291 
	}
}

1293 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°Commissi⁄R©e
()

1295  
commissi⁄R©eTabÀ
->
	`Gíî©eNextRec‹d
();

1296 
	}
}

1300 
	gCGíî©eAndLﬂd
::
	$InôCom∑ny
()

1302 
com∑nyTabÀ
 = 
√w
 
	`CCom∑nyTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1303 
	}
}

1304 
	gCGíî©eAndLﬂd
::
	$Rñó£Com∑ny
(){

1305 
dñëe
 
com∑nyTabÀ
;

1306 
	}
}

1308 
PCOMPANY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCom∑nyRow
()

1310  (
PCOMPANY_ROW
)
com∑nyTabÀ
->
	`GëRow
();

1311 
	}
}

1313 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextCom∑ny
()

1315  
com∑nyTabÀ
->
	`Gíî©eNextRec‹d
();

1316 
	}
}

1320 
	gCGíî©eAndLﬂd
::
	$InôCom∑nyCom≥tô‹
()

1322 
com∑nyCom≥tô‹TabÀ
=
√w
 
	`CCom∑nyCom≥tô‹TabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1324 
	}
}

1325 
	gCGíî©eAndLﬂd
::
	$Rñó£Com∑nyCom≥tô‹
(){

1326 
dñëe
 
com∑nyCom≥tô‹TabÀ
;

1327 
	}
}

1329 
PCOMPANY_COMPETITOR_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCom∑nyCom≥tô‹Row
()

1331  (
PCOMPANY_COMPETITOR_ROW
)
com∑nyCom≥tô‹TabÀ
->
	`GëRow
();

1332 
	}
}

1334 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextCom∑nyCom≥tô‹
()

1336  
com∑nyCom≥tô‹TabÀ
->
	`Gíî©eNextRec‹d
();

1337 
	}
}

1341 
	gCGíî©eAndLﬂd
::
	$InôCu°omî
()

1343 
cu°omîTabÀ
 = 
√w
 
	`CCu°omîTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1344 
	}
}

1346 
	gCGíî©eAndLﬂd
::
	$Rñó£Cu°omî
(){

1347 
dñëe
 
cu°omîTabÀ
;

1348 
	}
}

1350 
PCUSTOMER_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCu°omîRow
()

1352  (
PCUSTOMER_ROW
)
cu°omîTabÀ
->
	`GëRow
();

1353 
	}
}

1355 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextCu°omî
()

1357  
cu°omîTabÀ
->
	`Gíî©eNextRec‹d
();

1358 
	}
}

1364 
	gCGíî©eAndLﬂd
::
	$InôCu°omîAccou¡AndAccou¡Pîmissi⁄
(){

1365 
cu°omîAccou¡sAndPîmissi⁄sTabÀ
 =
√w
 
	`CCu°omîAccou¡sAndPîmissi⁄sTabÀ
(
m_öputFûes
, 
m_iLﬂdUnôSize
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1366 
	}
}

1368 
	gCGíî©eAndLﬂd
::
	$Rñó£Cu°omîAccou¡AndAccou¡Pîmissi⁄
(){

1369 
dñëe
 
cu°omîAccou¡sAndPîmissi⁄sTabÀ
;

1370 
	}
}

1372 
PCUSTOMER_ACCOUNT_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCu°omîAccou¡Row
()

1374  (
PCUSTOMER_ACCOUNT_ROW
)
cu°omîAccou¡sAndPîmissi⁄sTabÀ
->
	`GëCARow
();

1375 
	}
}

1377 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextCu°omîAccou¡
()

1379  
cu°omîAccou¡sAndPîmissi⁄sTabÀ
->
	`Gíî©eNextRec‹d
();

1380 
	}
}

1384 
PACCOUNT_PERMISSION_ROW
 
	gCGíî©eAndLﬂd
::
	$gëAccou¡Pîmissi⁄Row
(
i
)

1386  (
PACCOUNT_PERMISSION_ROW
)
cu°omîAccou¡sAndPîmissi⁄sTabÀ
->
	`GëAPRow
(
i
);

1387 
	}
}

1389 
	gCGíî©eAndLﬂd
::
	$Pîmissi⁄sPîCu°omî
()

1391  
cu°omîAccou¡sAndPîmissi⁄sTabÀ
->
	`GëCAPîmsCou¡
();

1392 
	}
}

1425 
	gCGíî©eAndLﬂd
::
	$InôCu°omîTaxøã
()

1427 
cu°omîTaxøãsTabÀ
 = 
√w
 
	`CCu°omîTaxøãsTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1445 
	}
}

1446 
	gCGíî©eAndLﬂd
::
	$Rñó£Cu°omîTaxøã
(){

1447 
dñëe
 
cu°omîTaxøãsTabÀ
;

1448 
	}
}

1450 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextCu°omîTaxøã
()

1452  
cu°omîTaxøãsTabÀ
->
	`Gíî©eNextRec‹d
();

1453 
	}
}

1454 
	gCGíî©eAndLﬂd
::
	$gëTaxøãsCou¡
()

1456  
cu°omîTaxøãsTabÀ
->
	`GëTaxR©esCou¡
();

1457 
	}
}

1459 
PCUSTOMER_TAXRATE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCu°omîTaxøãRow
(
i
)

1461  (
PCUSTOMER_TAXRATE_ROW
)
cu°omîTaxøãsTabÀ
->
	`GëRowByIndex
(
i
);

1462 
	}
}

1467 
	gCGíî©eAndLﬂd
::
	$InôDaûyM¨kë
()

1469 
daûyM¨këTabÀ
 = 
√w
 
	`CDaûyM¨këTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1470 
	}
}

1471 
	gCGíî©eAndLﬂd
::
	$Rñó£DaûyM¨kë
(){

1472 
dñëe
 
daûyM¨këTabÀ
;

1473 
	}
}

1475 
PDAILY_MARKET_ROW
 
	gCGíî©eAndLﬂd
::
	$gëDaûyM¨këRow
()

1477  (
PDAILY_MARKET_ROW
)
daûyM¨këTabÀ
->
	`GëRow
();

1478 
	}
}

1480 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextDaûyM¨kë
()

1482  
daûyM¨këTabÀ
->
	`Gíî©eNextRec‹d
();

1483 
	}
}

1486 
	gCGíî©eAndLﬂd
::
	$InôExch™ge
()

1488 
exch™geTabÀ
 = 
√w
 
	`CExch™geTabÀ
–
m_szInDú
, 
m_iTŸÆCu°omîs
 );

1489 
	}
}

1490 
	gCGíî©eAndLﬂd
::
	$Rñó£Exch™ge
(){

1491 
dñëe
 
exch™geTabÀ
;

1492 
	}
}

1494 
PEXCHANGE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëExch™geRow
()

1496  (
PEXCHANGE_ROW
)
exch™geTabÀ
->
	`GëRow
();

1497 
	}
}

1499 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°Exch™ge
()

1501  
exch™geTabÀ
->
	`Gíî©eNextRec‹d
();

1502 
	}
}

1506 
	gCGíî©eAndLﬂd
::
	$InôFö™cül
()

1508 
fö™cülTabÀ
 = 
√w
 
	`CFö™cülTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1510 
	}
}

1512 
	gCGíî©eAndLﬂd
::
	$Rñó£Fö™cül
(){

1513 
dñëe
 
fö™cülTabÀ
;

1514 
	}
}

1516 
PFINANCIAL_ROW
 
	gCGíî©eAndLﬂd
::
	$gëFö™cülRow
()

1518  (
PFINANCIAL_ROW
)
fö™cülTabÀ
->
	`GëRow
();

1519 
	}
}

1521 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextFö™cül
()

1523  
fö™cülTabÀ
->
	`Gíî©eNextRec‹d
();

1524 
	}
}

1528 
	gCGíî©eAndLﬂd
::
	$InôHﬁdögAndTøde
()

1531 
	`¥ötf
("\n\¿cu°omîs%d,Üﬂdunô%d\n\n", 
m_iTŸÆCu°omîs
, 
m_iLﬂdUnôSize
);

1533 
pTødeGí
 = 
√w
 
	`CTødeGí
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
,

1534 
m_iTŸÆCu°omîs
, 
m_iLﬂdUnôSize
,

1535 
m_iSˇÀFa˘‹
, 
m_iHoursOfInôülTødes
);

1536 #ifde‡
COMPILE_FLAT_FILE_LOAD


1537 
fhs
=
	`f›í
("hsummary.txt","wt");

1539 
	}
}

1541 
	gCGíî©eAndLﬂd
::
	$Rñó£HﬁdögAndTøde
(){

1542 
dñëe
 
pTødeGí
;

1543 #ifde‡
COMPILE_FLAT_FILE_LOAD


1544 
	`f˛o£
(
fhs
);

1546 
	}
}

1548 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextLﬂdUnô
()

1550 
boﬁ
 
x
=
Ál£
;

1551 
	`¥ötf
("\n\n BEFORE \n\n");

1553 
x
 =
pTødeGí
->
	`InôNextLﬂdUnô
();

1554 if(
x
Ë
	`¥ötf
("\n\nhasnext AFTER TRUE\n\n");

1555 
	`¥ötf
("\n\nhasnext AFTER FALSE\n\n");

1556  
x
;

1557 
	}
}

1560 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextTøde
()

1562  
pTødeGí
->
	`Gíî©eNextTøde
();

1563 
	}
}

1565 
PTRADE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëTødeRow
()

1567  (
PTRADE_ROW
)
pTødeGí
->
	`GëTødeRow
();

1568 
	}
}

1571 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$shouldPro˚ssTødeReque°Row
()

1574  
Ál£
;

1575 
	}
}

1577 
PTRADE_REQUEST_ROW
 
	gCGíî©eAndLﬂd
::
	$gëTødeReque°Row
()

1581 
	}
}

1584 
PTRADE_HISTORY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëTødeHi°‹yRow
(
i
)

1586  (
PTRADE_HISTORY_ROW
)
pTødeGí
->
	`GëTødeHi°‹yRow
(
i
);

1587 
	}
}

1589 
	gCGíî©eAndLﬂd
::
	$gëTødeHi°‹yRowCou¡
()

1591  
pTødeGí
->
	`GëTødeHi°‹yRowCou¡
();

1592 
	}
}

1595 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$shouldPro˚ssCashTønß˘i⁄Row
()

1597  (
pTødeGí
->
	`GëCashTønß˘i⁄RowCou¡
() != 0);

1598 
	}
}

1600 
PCASH_TRANSACTION_ROW
 
	gCGíî©eAndLﬂd
::
	$gëCashTønß˘i⁄Row
()

1602  (
PCASH_TRANSACTION_ROW
)
pTødeGí
->
	`GëCashTønß˘i⁄Row
();

1603 
	}
}

1606 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$shouldPro˚ssSëéemítRow
()

1608  (
pTødeGí
->
	`GëSëéemítRowCou¡
() != 0);

1610 
	}
}

1611 
PSETTLEMENT_ROW
 
	gCGíî©eAndLﬂd
::
CGíî©eAndLﬂd
::
	$gëSëéemítRow
 ()

1613  (
PSETTLEMENT_ROW
)
pTødeGí
->
	`GëSëéemítRow
();

1614 
	}
}

1618 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextHﬁdög
()

1620  
pTødeGí
->
	`Gíî©eNextHﬁdög
();

1621 
	}
}

1623 
PHOLDING_ROW
 
	gCGíî©eAndLﬂd
::
	$gëHﬁdögRow
()

1625  (
PHOLDING_ROW
)
pTødeGí
->
	`GëHﬁdögRow
();

1626 
	}
}

1629 
PHOLDING_HISTORY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëHﬁdögHi°‹yRow
(
i
)

1631  (
PHOLDING_HISTORY_ROW
)
pTødeGí
->
	`GëHﬁdögHi°‹yRow
(
i
);

1632 
	}
}

1634 
	gCGíî©eAndLﬂd
::
	$gëHﬁdögHi°‹yRowCou¡
()

1636  
pTødeGí
->
	`GëHﬁdögHi°‹yRowCou¡
();

1637 
	}
}

1640 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextHﬁdögSumm¨y
()

1643  
pTødeGí
->
	`Gíî©eNextHﬁdögSumm¨yRow
();

1645 
	}
}

1647 
PHOLDING_SUMMARY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëHﬁdögSumm¨yRow
()

1649 
PHOLDING_SUMMARY_ROW
 
xx
(PHOLDING_SUMMARY_ROW)
pTødeGí
->
	`GëHﬁdögSumm¨yRow
();

1650 #ifde‡
COMPILE_FLAT_FILE_LOAD


1651 
	`Ârötf
(
fhs
,"%Œd|%s|%d\n",
xx
->
HS_CA_ID
, xx->
HS_S_SYMB
, xx->
HS_QTY
);

1653  
xx
;

1654 
	}
}

1657 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextBrokî
()

1659  
pTødeGí
->
	`Gíî©eNextBrokîRec‹d
();

1660 
	}
}

1662 
PBROKER_ROW
 
	gCGíî©eAndLﬂd
::
	$gëBrokîRow
()

1664  (
PBROKER_ROW
 )
pTødeGí
->
	`GëBrokîRow
();

1665 
	}
}

1807 
	gCGíî©eAndLﬂd
::
	$InôIndu°ry
()

1809 
ödu°ryTabÀ
 = 
√w
 
	`CIndu°ryTabÀ
–
m_szInDú
 );

1810 
	}
}

1811 
	gCGíî©eAndLﬂd
::
	$Rñó£Indu°ry
(){

1812 
dñëe
 
ödu°ryTabÀ
;

1813 
	}
}

1815 
PINDUSTRY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëIndu°ryRow
()

1817  (
PINDUSTRY_ROW
)
ödu°ryTabÀ
->
	`GëRow
();

1818 
	}
}

1820 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°Indu°ry
()

1822  
ödu°ryTabÀ
->
	`Gíî©eNextRec‹d
();

1823 
	}
}

1827 
	gCGíî©eAndLﬂd
::
	$InôLa°Tøde
()

1829 
œ°TødeTabÀ
 = 
√w
 
	`CLa°TødeTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
 , 
m_iHoursOfInôülTødes
);

1830 
	}
}

1831 
	gCGíî©eAndLﬂd
::
	$Rñó£La°Tøde
(){

1832 
dñëe
 
œ°TødeTabÀ
;

1833 
	}
}

1835 
PLAST_TRADE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëLa°TødeRow
()

1837  (
PLAST_TRADE_ROW
)
œ°TødeTabÀ
->
	`GëRow
();

1838 
	}
}

1840 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextLa°Tøde
()

1842  
œ°TødeTabÀ
->
	`Gíî©eNextRec‹d
();

1843 
	}
}

1848 
	gCGíî©eAndLﬂd
::
	$InôNewsIãmAndNewsXRef
()

1850 
√wsIãmAndXRefTabÀ
 = 
√w
 
	`CNewsIãmAndXRefTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
, 
m_iHoursOfInôülTødes
);

1851 
	}
}

1853 
	gCGíî©eAndLﬂd
::
	$Rñó£NewsIãmAndNewsXRef
(){

1854 
dñëe
 
√wsIãmAndXRefTabÀ
;

1855 
	}
}

1857 
PNEWS_ITEM_ROW
 
	gCGíî©eAndLﬂd
::
	$gëNewsIãmRow
()

1859  (
PNEWS_ITEM_ROW
)
√wsIãmAndXRefTabÀ
->
	`GëNewsIãmRow
();

1860 
	}
}

1862 
PNEWS_XREF_ROW
 
	gCGíî©eAndLﬂd
::
	$gëNewsXRefRow
()

1864  (
PNEWS_XREF_ROW
)
√wsIãmAndXRefTabÀ
->
	`GëNewsXRefRow
();

1865 
	}
}

1867 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextNewsIãmAndNewsXRef
()

1869  
√wsIãmAndXRefTabÀ
->
	`Gíî©eNextRec‹d
();

1870 
	}
}

1874 
	gCGíî©eAndLﬂd
::
	$InôSe˘‹
()

1876 
£˘‹TabÀ
 = 
√w
 
	`CSe˘‹TabÀ
–
m_szInDú
 );

1877 
	}
}

1879 
	gCGíî©eAndLﬂd
::
	$Rñó£Se˘‹
(){

1880 
dñëe
 
£˘‹TabÀ
;

1881 
	}
}

1883 
PSECTOR_ROW
 
	gCGíî©eAndLﬂd
::
	$gëSe˘‹Row
()

1885  (
PSECTOR_ROW
)
£˘‹TabÀ
->
	`GëRow
();

1886 
	}
}

1888 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°Se˘‹
()

1890  
£˘‹TabÀ
->
	`Gíî©eNextRec‹d
();

1891 
	}
}

1895 
	gCGíî©eAndLﬂd
::
	$InôSecurôy
()

1897 
£curôyTabÀ
 = 
√w
 
	`CSecurôyTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1898 #ifde‡
COMPILE_FLAT_FILE_LOAD


1899 
f£c
 = 
	`f›í
 ("security.txt", "wt");

1901 
	}
}

1902 
	gCGíî©eAndLﬂd
::
	$Rñó£Securôy
(){

1903 
dñëe
 
£curôyTabÀ
;

1904 #ifde‡
COMPILE_FLAT_FILE_LOAD


1905 
	`f˛o£
(
f£c
);

1907 
	}
}

1909 
PSECURITY_ROW
 
	gCGíî©eAndLﬂd
::
	$gëSecurôyRow
()

1911 
PSECURITY_ROW
 
x
 = (PSECURITY_ROW)
£curôyTabÀ
->
	`GëRow
();

1912 #ifde‡
COMPILE_FLAT_FILE_LOAD


1913 
	`Ârötf
(
f£c
,"%s|%s|%s|%s\n",
x
->
S_SYMB
, x->
S_ISSUE
, x->
S_ST_ID
, x->
S_NAME
);

1915  
x
;

1916 
	}
}

1918 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextSecurôy
()

1920  
£curôyTabÀ
->
	`Gíî©eNextRec‹d
();

1921 
	}
}

1924 
	gCGíî©eAndLﬂd
::
	$InôSètusTy≥
()

1926 
°©usTy≥TabÀ
 = 
√w
 
	`CSètusTy≥TabÀ
–
m_szInDú
 );

1927 
	}
}

1928 
	gCGíî©eAndLﬂd
::
	$Rñó£SètusTy≥
(){

1929 
dñëe
 
°©usTy≥TabÀ
;

1930 
	}
}

1932 
PSTATUS_TYPE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëSètusTy≥Row
()

1934  (
PSTATUS_TYPE_ROW
)
°©usTy≥TabÀ
->
	`GëRow
();

1935 
	}
}

1937 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°SètusTy≥
()

1939  
°©usTy≥TabÀ
->
	`Gíî©eNextRec‹d
();

1940 
	}
}

1944 
	gCGíî©eAndLﬂd
::
	$InôTaxøã
(){

1945 
èxøãTabÀ
 = 
√w
 
	`CTaxøãTabÀ
–
m_öputFûes
 );

1946 
	}
}

1948 
	gCGíî©eAndLﬂd
::
	$Rñó£Taxøã
(){

1949 
dñëe
 
èxøãTabÀ
;

1950 
	}
}

1952 
PTAXRATE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëTaxøãRow
()

1954  (
PTAXRATE_ROW
)
èxøãTabÀ
->
	`GëRow
();

1955 
	}
}

1957 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextTaxøã
()

1959  
èxøãTabÀ
->
	`Gíî©eNextRec‹d
();

1960 
	}
}

1965 
	gCGíî©eAndLﬂd
::
	$InôTødeTy≥
()

1967 
åadeTy≥TabÀ
 = 
√w
 
	`CTødeTy≥TabÀ
–
m_szInDú
 );

1968 
	}
}

1970 
	gCGíî©eAndLﬂd
::
	$Rñó£TødeTy≥
(){

1971 
dñëe
 
åadeTy≥TabÀ
;

1972 
	}
}

1974 
PTRADE_TYPE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëTødeTy≥Row
()

1976  (
PTRADE_TYPE_ROW
)
åadeTy≥TabÀ
->
	`GëRow
();

1977 
	}
}

1979 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$isLa°TødeTy≥
()

1981  
åadeTy≥TabÀ
->
	`Gíî©eNextRec‹d
();

1982 
	}
}

1987 
	gCGíî©eAndLﬂd
::
	$InôW©chLi°AndW©chIãm
()

1989 
w©chLi°sAndIãmsTabÀ
 = 
√w
 
	`CW©chLi°sAndIãmsTabÀ
(
m_öputFûes
, 
m_iCu°omîCou¡
, 
m_iSèπFromCu°omî
);

1990 
	}
}

1992 
	gCGíî©eAndLﬂd
::
	$Rñó£W©chLi°AndW©chIãm
(){

1993 
dñëe
 
w©chLi°sAndIãmsTabÀ
;

1994 
	}
}

1996 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextW©chLi°
()

1998  
w©chLi°sAndIãmsTabÀ
->
	`Gíî©eNextRec‹d
();

1999 
	}
}

2002 
PWATCH_LIST_ROW
 
	gCGíî©eAndLﬂd
::
	$gëW©chLi°Row
()

2004  (
PWATCH_LIST_ROW
)
w©chLi°sAndIãmsTabÀ
->
	`GëWLRow
();

2005 
	}
}

2007 
	gCGíî©eAndLﬂd
::
	$IãmsPîW©chLi°
(){

2008  
w©chLi°sAndIãmsTabÀ
->
	`GëWICou¡
();

2009 
	}
}

2012 
PWATCH_ITEM_ROW
 
	gCGíî©eAndLﬂd
::
	$gëW©chIãmRow
(
i
)

2014  (
PWATCH_ITEM_ROW
)
w©chLi°sAndIãmsTabÀ
->
	`GëWIRow
(
i
);

2015 
	}
}

2041 
	gCGíî©eAndLﬂd
::
	$InôZùCode
()

2043 
zùCodeTabÀ
 = 
√w
 
	`CZùCodeTabÀ
–
m_öputFûes
 );

2044 
	}
}

2046 
	gCGíî©eAndLﬂd
::
	$Rñó£ZùCode
(){

2047 
dñëe
 
zùCodeTabÀ
;

2048 
	}
}

2050 
PZIP_CODE_ROW
 
	gCGíî©eAndLﬂd
::
	$gëZùCodeRow
()

2052  (
PZIP_CODE_ROW
)
zùCodeTabÀ
->
	`GëRow
();

2053 
	}
}

2055 
boﬁ
 
	gCGíî©eAndLﬂd
::
	$hasNextZùCode
()

2057  
zùCodeTabÀ
->
	`Gíî©eNextRec‹d
();

2058 
	}
}

2066 
	gCGíî©eAndLﬂd
::
	$InôFixedTabÀs
()

2069 
	`InôCh¨ge
();

2070 
	`InôCommissi⁄R©e
();

2071 
	`InôExch™ge
();

2072 
	`InôIndu°ry
();

2073 
	`InôSe˘‹
();

2074 
	`InôSètusTy≥
();

2075 
	`InôTaxøã
();

2076 
	`InôTødeTy≥
();

2077 
	`InôZùCode
();

2078 
	}
}

2085 
	gCGíî©eAndLﬂd
::
	$InôSˇlögTabÀs
()

2089 
	`InôAddªss
();

2090 
	`InôCu°omî
();

2091 
	`InôCu°omîAccou¡AndAccou¡Pîmissi⁄
();

2092 
	`InôCu°omîTaxøã
();

2093 
	`InôW©chLi°AndW©chIãm
();

2097 
	`InôCom∑ny
();

2098 
	`InôCom∑nyCom≥tô‹
();

2099 
	`InôDaûyM¨kë
();

2100 
	`InôFö™cül
();

2101 
	`InôLa°Tøde
();

2102 
	`InôNewsIãmAndNewsXRef
();

2103 
	`InôSecurôy
();

2104 
	}
}

2111 
	gCGíî©eAndLﬂd
::
	$InôGrowögTabÀs
()

2113 
	`InôHﬁdögAndTøde
();

2114 
	}
}

	@src/workload/tpce/egen/EGenLoader.cpp

41 
	~"w‹klﬂd/ç˚/egí/EGíLﬂdî_°dafx.h
"

42 
	~"w‹klﬂd/ç˚/egí/CETxnI≈utGíî©‹.h
"

43 
	~"w‹klﬂd/ç˚/egí/DM.h
"

44 
	~"w‹klﬂd/ç˚/MEESUT.h
"

45 
	~"w‹klﬂd/ç˚/egí/MEE.h
"

46 
usög
 
«me•a˚
 
	gTPCE
;

49 
TIdít
 
	giSèπFromCu°omî
 = 
iDeÁu…SèπFromCu°omî
;

50 
TIdít
 
	giCu°omîCou¡
 = 
iDeÁu…Cu°omîCou¡
;

51 
TIdít
 
	giTŸÆCu°omîCou¡
 = 
iDeÁu…Cu°omîCou¡
;

52 
UINT
 
	giLﬂdUnôSize
 = 
iDeÁu…LﬂdUnôSize
;

53 
UINT
 
	giSˇÀFa˘‹
 = 500;

54 
UINT
 
	giDaysOfInôülTødes
 = 300;

57 
boﬁ
 
	gbTabÀGíî©i⁄FœgNŸS≥cifõd
 = 
åue
;

58 
boﬁ
 
	gbGíî©eFixedTabÀs
 = 
Ál£
;

59 
boﬁ
 
	gbGíî©eGrowögTabÀs
 = 
Ál£
;

60 
boﬁ
 
	gbGíî©eSˇlögTabÀs
 = 
Ál£
;

61 
boﬁ
 
	gbGíî©eUsögCache
 = 
åue
;

64 
CI≈utFûes
* 
	göputFûes
 = 
NULL
;

65 
CBa£LﬂdîFa˘‹y
* 
	gpLﬂdîFa˘‹y
;

66 
CGíî©eAndLﬂdSènd¨dOuçut
* 
	gOuçut
;

68 
CGíî©eAndLﬂd
* 
	gpGíî©eAndLﬂd
;

72 
	gszInDú
[
iMaxP©h
];

73 #ifde‡
COMPILE_FLAT_FILE_LOAD


74 
	gszOutDú
[
iMaxP©h
];

75 
FœtFûeOuçutModes
 
	gFœtFûeOuçutMode
;

77 #ifde‡
COMPILE_ODBC_LOAD


78 
	gszSîvî
[
iMaxHo°«me
];

79 
	gszDB
[
iMaxDBName
];

81 #i‡
deföed
(
COMPILE_ODBC_LOAD
Ë|| deföed(
COMPILE_CUSTOM_LOAD
)

82 
	gszLﬂdîP¨ms
[1024];

85 #i‚de‡
FLAT_IN_PATH


86 
	#FLAT_IN_PATH
 "Ê©_ö/"

	)

89 #i‚de‡
FLAT_OUT_PATH


90 
	#FLAT_OUT_PATH
 "Ê©_out/"

	)

93 
	eeLﬂdIm∂emíèti⁄
 {

94 
	mNULL_LOAD
 = 0,

95 
	mFLAT_FILE_LOAD
,

96 
	mODBC_LOAD
,

97 
	mCUSTOM_LOAD


99 #i‡
deföed
(
DEFAULT_LOAD_TYPE
)

100 
eLﬂdIm∂emíèti⁄
 
	gLﬂdTy≥
 = 
DEFAULT_LOAD_TYPE
;

101 #ñi‡
deföed
(
COMPILE_FLAT_FILE_LOAD
)

102 
eLﬂdIm∂emíèti⁄
 
	gLﬂdTy≥
 = 
FLAT_FILE_LOAD
;

103 #ñi‡
deföed
(
COMPILE_ODBC_LOAD
)

104 
eLﬂdIm∂emíèti⁄
 
	gLﬂdTy≥
 = 
ODBC_LOAD
;

105 #ñi‡
deföed
(
COMPILE_CUSTOM_LOAD
)

106 
eLﬂdIm∂emíèti⁄
 
	gLﬂdTy≥
 = 
CUSTOM_LOAD
;

108 
eLﬂdIm∂emíèti⁄
 
	gLﬂdTy≥
 = 
NULL_LOAD
;

114 
	$Ußge
()

116 
	`Ârötf
–
°dîr
, "Usage:\n" );

117 
	`Ârötf
–
°dîr
, "EGenLoader [options] \n\n" );

118 
	`Ârötf
–
°dîr
, " Where\n" );

119 
	`Ârötf
–
°dîr
, " Option Default Description\n" );

120 
	`Ârötf
–
°dîr
, " -bÇumbî %Œd Begönög cu°omî ordöÆÖosôi⁄\n", 
iSèπFromCu°omî
);

121 
	`Ârötf
–
°dîr
, " -¯numbî %Œd Numbî o‡cu°omî†(f‹Åhi†ö°™˚)\n", 
iCu°omîCou¡
 );

122 
	`Ârötf
–
°dîr
, " -ànumbî %Œd Numbî o‡cu°omî†—ŸÆ i¿thêd©aba£)\n", 
iTŸÆCu°omîCou¡
 );

123 
	`Ârötf
–
°dîr
, " -‡numbî %d SˇÀ fa˘‹ (cu°omî†≥∏1ÅpsE)\n", 
iSˇÀFa˘‹
 );

124 
	`Ârötf
–
°dîr
, " -wÇumbî %d Numbî o‡W‹kday†(8-hou∏daysËo‡\n", 
iDaysOfInôülTødes
 );

125 
	`Ârötf
–
°dîr
, " initialÅradesÅoÖopulate\n" );

126 
	`Ârötf
–
°dîr
, " -òdú %-11†Dúe˘‹y f‹ i≈uàfûes\n", 
FLAT_IN_PATH
 );

127 
	`Ârötf
–
°dîr
, " -l [FLAT|ODBC|CUSTOM|NULL] FLAT Type ofÜoad\n" );

128 #ifde‡
COMPILE_FLAT_FILE_LOAD


129 
	`Ârötf
–
°dîr
, " -m [APPEND|OVERWRITE] OVERWRITE Flat File output mode\n" );

130 
	`Ârötf
–
°dîr
, " -ÿdú %-11†Dúe˘‹y f‹ ouçuàfûes\n", 
FLAT_OUT_PATH
 );

132 #ifde‡
COMPILE_ODBC_LOAD


133 
	`Ârötf
–
°dîr
, " -s stringÜocalhost Database server\n" );

134 
	`Ârötf
–
°dîr
, " -d stringÅpce DatabaseÇame\n" );

136 #i‡
	`deföed
(
COMPILE_ODBC_LOAD
Ë|| deföed(
COMPILE_CUSTOM_LOAD
)

137 
	`Ârötf
–
°dîr
, " -p string AdditionalÖarametersÅoÜoader\n" );

139 
	`Ârötf
–
°dîr
, "\n" );

140 
	`Ârötf
–
°dîr
, " -x -x GenerateállÅables\n");

141 
	`Ârötf
–
°dîr
, " -xf Generateáll fixed-sizeÅables\n");

142 
	`Ârötf
–
°dîr
, " -xd Generateáll scalingánd growingÅables\n");

143 
	`Ârötf
–
°dîr
, " (equivalentÅo -xs -xg)\n");

144 
	`Ârötf
–
°dîr
, " -xs Generate scalingÅables\n");

145 
	`Ârötf
–
°dîr
, " (except BROKER)\n");

146 
	`Ârötf
–
°dîr
, " -xg Generate growingÅablesánd BROKER\n");

147 
	`Ârötf
–
°dîr
, " -g Disable caching when generating growingÅables\n" );

148 
	}
}

150 
	$P¨£Comm™dLöe
–
¨gc
, *
¨gs
[] )

152 
¨g
;

153 *
•
;

154 *
vp
;

156 
¨gv
[20][100];

158  
¨g
 = 1;árg < 
¨gc
; ++arg ){

159 
	`mem£t
(
¨gv
[
¨g
], '\0',100);

160 
	`°r˝y
(
¨gv
[
¨g
],
¨gs
[arg]);

166  
¨g
 = 1;árg < 
¨gc
; ++arg ) {

171 
•
 = 
¨gv
[
¨g
];

172 i‡–*
•
 == '-' ) {

173 ++
•
;

175 *
•
 = ()
	`tﬁowî
( *sp );

181 
vp
 = 
•
 + 1;

186 i‡–(*
vp
 =0Ë&& ((
¨g
 + 1Ë< 
¨gc
Ë&& (
¨gv
[arg + 1][0] != '-') )

188 
vp
 = 
¨gv
[++
¨g
];

194  *
•
 ) {

196 
	`ssˇnf
(
vp
, "%Œd ", &
iSèπFromCu°omî
);

197 i‡(
iSèπFromCu°omî
 <= 0)

201 
iSèπFromCu°omî
 = 
iDeÁu…SèπFromCu°omî
;

205 
	`ssˇnf
(
vp
, "%Œd ", &
iCu°omîCou¡
);

208 
	`ssˇnf
(
vp
, "%Œd ", &
iTŸÆCu°omîCou¡
);

211 
iSˇÀFa˘‹
 = (
UINT
Ë
	`©oi
–
vp
 );

214 
iDaysOfInôülTødes
 = (
UINT
Ë
	`©oi
–
vp
 );

218 
	`°∫˝y
(
szInDú
, 
vp
, (szInDir));

219 if(–'/' !
szInDú
[ 
	`°æí
(szInDir) - 1 ] ) && ( '\\' != szInDir[ strlen(szInDir) - 1 ] ))

221 
	`°∫ˇt
–
szInDú
, "/", (szInDir) );

226 #ifde‡
COMPILE_FLAT_FILE_LOAD


227 if–0 =
	`°rcmp
–
vp
, "FLAT" ))

229 
LﬂdTy≥
 = 
FLAT_FILE_LOAD
;

233 #ifde‡
COMPILE_ODBC_LOAD


234 if–0 =
	`°rcmp
–
vp
, "ODBC" ))

236 
LﬂdTy≥
 = 
ODBC_LOAD
;

240 i‡–0 =
	`°rcmp
–
vp
, "NULL" ))

242 
LﬂdTy≥
 = 
NULL_LOAD
;

245 #ifde‡
COMPILE_CUSTOM_LOAD


246 i‡–0 =
	`°rcmp
–
vp
, "CUSTOM" ))

248 
LﬂdTy≥
 = 
CUSTOM_LOAD
;

252 
	`Ußge
();

253 
	`exô
–
ERROR_BAD_OPTION
 );

256 #ifde‡
COMPILE_FLAT_FILE_LOAD


258 if–0 =
	`°rcmp
–
vp
, "APPEND" ))

260 
FœtFûeOuçutMode
 = 
FLAT_FILE_OUTPUT_APPEND
;

262 if–0 =
	`°rcmp
–
vp
, "OVERWRITE" ))

264 
FœtFûeOuçutMode
 = 
FLAT_FILE_OUTPUT_OVERWRITE
;

268 
	`Ußge
();

269 
	`exô
–
ERROR_BAD_OPTION
 );

274 
	`°∫˝y
(
szOutDú
, 
vp
, (szOutDir));

275 if(–'/' !
szOutDú
[ 
	`°æí
(szOutDir) - 1 ] ) && ( '\\' != szOutDir[ strlen(szOutDir) - 1 ] ))

277 
	`°∫ˇt
–
szOutDú
, "/", (szOutDir) );

281 #ifde‡
COMPILE_ODBC_LOAD


283 
	`°∫˝y
(
szSîvî
, 
vp
, (szServer));

287 
	`°∫˝y
(
szDB
, 
vp
, (szDB));

290 #i‡
	`deföed
(
COMPILE_ODBC_LOAD
Ë|| deföed(
COMPILE_CUSTOM_LOAD
)

292 
	`°∫˝y
(
szLﬂdîP¨ms
, 
vp
, (szLoaderParms));

296 
bGíî©eUsögCache
 = 
Ál£
;

299 
bTabÀGíî©i⁄FœgNŸS≥cifõd
 = 
Ál£
;

301 if–
NULL
 =
vp
 || *vp == '\0')

303 
bGíî©eFixedTabÀs
 = 
åue
;

304 
bGíî©eGrowögTabÀs
 = 
åue
;

305 
bGíî©eSˇlögTabÀs
 = 
åue
;

307 if–0 =
	`°rcmp
–
vp
, "f" ))

309 
bGíî©eFixedTabÀs
 = 
åue
;

311 if–0 =
	`°rcmp
–
vp
, "g" ))

313 
bGíî©eGrowögTabÀs
 = 
åue
;

315 if–0 =
	`°rcmp
–
vp
, "s" ))

317 
bGíî©eSˇlögTabÀs
 = 
åue
;

319 if–0 =
	`°rcmp
–
vp
, "d" ))

321 
bGíî©eGrowögTabÀs
 = 
åue
;

322 
bGíî©eSˇlögTabÀs
 = 
åue
;

326 
	`Ußge
();

327 
	`exô
–
ERROR_BAD_OPTION
 );

332 
	`Ußge
();

333 
	`Ârötf
–
°dîr
, "Eº‹: Uƒecognized o±i⁄: %s\n",
•
);

334 
	`exô
–
ERROR_BAD_OPTION
 );

338 
	}
}

354 
boﬁ
 
	$VÆid©eP¨amëîs
()

356 
boﬁ
 
bRë
 = 
åue
;

360 i‡((
iSèπFromCu°omî
 % 
iLﬂdUnôSize
) != 1)

362 
cout
 << "Thê•ecifõd sèπög cu°omî (-b " << 
iSèπFromCu°omî


364 << 
iLﬂdUnôSize
 << "Ë+ 1." << 
ídl
;

366 
bRë
 = 
Ál£
;

372 i‡(
iTŸÆCu°omîCou¡
 < 
iSèπFromCu°omî
 + 
iCu°omîCou¡
 - 1)

374 
iTŸÆCu°omîCou¡
 = 
iSèπFromCu°omî
 + 
iCu°omîCou¡
 - 1;

379 i‡((
iLﬂdUnôSize
 > 
iCu°omîCou¡
) || (0 != iCustomerCount % iLoadUnitSize))

381 
cout
 << "Thê•ecifõd cu°omî cou¡ (-¯" << 
iCu°omîCou¡


383 << 
iLﬂdUnôSize
 << ")." << 
ídl
;

385 
bRë
 = 
Ál£
;

390 i‡((
iLﬂdUnôSize
 > 
iTŸÆCu°omîCou¡
) || (0 != iTotalCustomerCount % iLoadUnitSize))

392 
cout
 << "ThêtŸÆ cu°omî cou¡ (-à" << 
iTŸÆCu°omîCou¡


394 << 
iLﬂdUnôSize
 << ")." << 
ídl
;

396 
bRë
 = 
Ál£
;

402 i‡((
INT64
)(
HoursPîW‹kDay
 * 
Sec⁄dsPîHour
 * 
iLﬂdUnôSize
 / 
iSˇÀFa˘‹
) % 100 != 0)

404 
cout
 << "Incom∑tibÀ vÆuêf‹ SˇÀ Fa˘‹ (-fË•ecifõd." << 
ídl
;

405 
cout
 << 
HoursPîW‹kDay
 << " * " << 
Sec⁄dsPîHour
 << " * Lﬂd Unô Sizê(" << 
iLﬂdUnôSize


406 << "Ë/ SˇÀ Fa˘‹ (" << 
iSˇÀFa˘‹


407 << "Ëmu° bêöãgø»mu…ùÀ o‡100." << 
ídl
;

409 
bRë
 = 
Ál£
;

412 i‡(
iDaysOfInôülTødes
 == 0)

414 
cout
 << "The specifiedÇumber of 8-Hour Workdays (-w "

415 << (
iDaysOfInôülTødes
Ë<< "Ëmu° bên⁄-zîo." << 
ídl
;

417 
bRë
 = 
Ál£
;

420  
bRë
;

421 
	}
}

427 
CBa£LﬂdîFa˘‹y
* 
	$Cª©eLﬂdîFa˘‹y
(
eLﬂdIm∂emíèti⁄
 
eLﬂdTy≥
)

429 
eLﬂdTy≥
)

431 
NULL_LOAD
:

432  
√w
 
	`CNuŒLﬂdîFa˘‹y
();

434 #ifde‡
COMPILE_ODBC_LOAD


435 
ODBC_LOAD
:

436  
√w
 
	`CODBCLﬂdîFa˘‹y
(
szSîvî
, 
szDB
, 
szLﬂdîP¨ms
);

439 #ifde‡
COMPILE_FLAT_FILE_LOAD


440 
FLAT_FILE_LOAD
:

441  
√w
 
	`CFœtLﬂdîFa˘‹y
(
szOutDú
, 
FœtFûeOuçutMode
);

444 #ifde‡
COMPILE_CUSTOM_LOAD


445 
CUSTOM_LOAD
:

446  
√w
 
	`CCu°omLﬂdîFa˘‹y
(
szLﬂdîP¨ms
);

450 
	`as£π
(
Ál£
);

453  
NULL
;

454 
	}
}

456 
	$egí_öô
(
¨gc
, * 
¨gv
[])

458 
öputFûes
 = 
√w
 
	`CI≈utFûes
();

459 
Ouçut
 = 
√w
 
	`CGíî©eAndLﬂdSènd¨dOuçut
();

465 #ifde‡
COMPILE_ODBC_LOAD


466 
	`°∫˝y
(
szSîvî
, "localhost", (szServer));

467 
	`°∫˝y
(
szDB
, "tpce", (szDB));

469 
	`°∫˝y
(
szInDú
, 
FLAT_IN_PATH
, (szInDir));

470 #ifde‡
COMPILE_FLAT_FILE_LOAD


471 
	`°∫˝y
(
szOutDú
, 
FLAT_OUT_PATH
, (szOutDir));

472 
FœtFûeOuçutMode
 = 
FLAT_FILE_OUTPUT_OVERWRITE
;

477 
	`P¨£Comm™dLöe
(
¨gc
, 
¨gv
);

482 i‡(!
	`VÆid©eP¨amëîs
())

484  
ERROR_INVALID_OPTION_VALUE
;

488 
cout
<<
ídl
<<endl<<"UsingÅhe following settings."<<endl<<endl;

489  
LﬂdTy≥
 ) {

490 #ifde‡
COMPILE_ODBC_LOAD


491 
ODBC_LOAD
:

492 
cout
<<"\tLﬂd Ty≥:\t\tODBC"<<
ídl
;

493 
cout
<<"\tSîvî Name:\t\t"<<
szSîvî
<<
ídl
;

494 
cout
<<"\tD©aba£:\t\t"<<
szDB
<<
ídl
;

497 #ifde‡
COMPILE_FLAT_FILE_LOAD


498 
FLAT_FILE_LOAD
:

499 
cout
<<"\tLﬂd Ty≥:\t\tFœàFûe"<<
ídl
;

500  
FœtFûeOuçutMode
 ) {

501 
FLAT_FILE_OUTPUT_APPEND
:

502 
cout
<<"\tOuçuàMode:\t\tAPPEND"<<
ídl
;

504 
FLAT_FILE_OUTPUT_OVERWRITE
:

505 
cout
<<"\tOuçuàMode:\t\tOVERWRITE"<<
ídl
;

508 
cout
<<"\tOuàDúe˘‹y:\t\t"<<
szOutDú
<<
ídl
;

511 #ifde‡
COMPILE_CUSTOM_LOAD


512 
CUSTOM_LOAD
:

513 
cout
<<"\tLﬂd Ty≥:\t\tCu°om"<<
ídl
;

514 
cout
<<"\tLﬂdî P¨ms:\t\t"<<
szLﬂdîP¨ms
<<
ídl
;

517 
NULL_LOAD
:

521 
cout
<<"\tI¿Dúe˘‹y:\t\t"<<
szInDú
<<
ídl
;

522 
cout
<<"\tSèπ From Cu°omî:\t"<<
iSèπFromCu°omî
<<
ídl
;

523 
cout
<<"\tCu°omî Cou¡:\t\t"<<
iCu°omîCou¡
<<
ídl
;

524 
cout
<<"\tTŸÆ cu°omîs:\t"<<
iTŸÆCu°omîCou¡
<<
ídl
;

525 
cout
<<"\tLﬂd Unô:\t\t"<<
iLﬂdUnôSize
<<
ídl
;

526 
cout
<<"\tSˇÀ Fa˘‹:\t\t"<<
iSˇÀFa˘‹
<<
ídl
;

527 
cout
<<"\tInôü»TødêDays:\t"<<
iDaysOfInôülTødes
<<
ídl
;

528 
cout
<<"\tCachög E«bÀd:\t"<<(
bGíî©eUsögCache
?"åue":"Ál£")<<
ídl
;

529 
cout
<<
ídl
<<endl;

533 
pLﬂdîFa˘‹y
 = 
	`Cª©eLﬂdîFa˘‹y
(
LﬂdTy≥
);

535 
åy
 {

541 
szLogFûeName
[64];

543 
	`¢¥ötf
(&
szLogFûeName
[0], (szLogFileName),

545 
iSèπFromCu°omî
, (iSèπFromCu°omî + 
iCu°omîCou¡
)-1);

549 
CLogF‹m©Tab
 
fmt
;

550 
CEGíLoggî
 
	`loggî
(
eDrivîEGíLﬂdî
, 0, 
szLogFûeName
, &
fmt
);

553 
öputFûes
->
	`Inôülize
(
eDrivîEGíLﬂdî
, 
iTŸÆCu°omîCou¡
, iTŸÆCu°omîCou¡, 
szInDú
);

556 
pGíî©eAndLﬂd
 = 
√w
 
	`CGíî©eAndLﬂd
(*
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
,

557 
iTŸÆCu°omîCou¡
, 
iLﬂdUnôSize
,

558 
iSˇÀFa˘‹
, 
iDaysOfInôülTødes
,

559 
pLﬂdîFa˘‹y
, &
loggî
, 
Ouçut
, 
szInDú
,

560 
bGíî©eUsögCache
);

563 #ifde‡
COMPILE_FLAT_FILE_LOAD


565 if(–
bTabÀGíî©i⁄FœgNŸS≥cifõd
 && ( 
iSèπFromCu°omî
 =
iDeÁu…SèπFromCu°omî
 )Ë|| 
bGíî©eFixedTabÀs
 )

567 
pGíî©eAndLﬂd
->
	`Gíî©eAndLﬂdFixedTabÀs
();

571 if–
bTabÀGíî©i⁄FœgNŸS≥cifõd
 || 
bGíî©eSˇlögTabÀs
 )

573 
pGíî©eAndLﬂd
->
	`Gíî©eAndLﬂdSˇlögTabÀs
();

576 if–
bTabÀGíî©i⁄FœgNŸS≥cifõd
 || 
bGíî©eGrowögTabÀs
 )

578 
pGíî©eAndLﬂd
->
	`Gíî©eAndLﬂdGrowögTabÀs
();

585 
	`ˇtch
 (
CBa£Eº
& 
îr
)

587 
cout
<<
ídl
<<"Eº‹ "<<
îr
.
	`Eº‹Num
()<<": "<<îr.
	`Eº‹Text
();

588 i‡(
îr
.
	`Eº‹Loc
()) {

589 
cout
<<"áà"<<
îr
.
	`Eº‹Loc
()<<
ídl
;

591 
cout
<<
ídl
;

597 
	`ˇtch
 (
°d
::
bad_Æloc
&)

599 
cout
<<
ídl
<<endl<<"*** Out of memory ***"<<endl;

602 
	`ˇtch
 (
°d
::
ex˚±i⁄
& 
îr
)

604 
cout
 << 
ídl
 <<Énd»<<"CaughàEx˚±i⁄: " << 
îr
.
	`wh©
() <<Éndl;

606 
	`ˇtch
 (...)

608 
cout
 << 
ídl
 <<Éndl <<"Caught Unknown Exception" <<Éndl;

612 
	}
}

614 
CCETxnI≈utGíî©‹
* 
	$å™ß˘i⁄s_öput_öô
(
cu°omîs
, 
sf
, 
wdays
)

619 
CLogF‹m©Tab
 * 
fmt

√w
 
	`CLogF‹m©Tab
();

620 
CEGíLoggî
* 
log
 = 
√w
 
	`CEGíLoggî
(
eDrivîCE
, 0, "EGíTrxI≈ut.log", 
fmt
);

622 
PDrivîCETxnSëtögs
 
mDrivîCETxnSëtögs
 = 
√w
 
	`TDrivîCETxnSëtögs
();

623 
INT32
 
sf1
 = 
sf
;

624 
INT32
 
wdays1
 = 
wdays
;

625 
	`as£π
(
öputFûes
!=
NULL
);

626 
CCETxnI≈utGíî©‹
* 
m_TxnI≈utGíî©‹
 = 
√w
 
	`CCETxnI≈utGíî©‹
(*
öputFûes
,

627 (
TIdít
)
cu°omîs
, (TIdít)cu°omîs, 
sf1
,

628 
wdays1
 * 
HoursPîW‹kDay
, 
log
, 
mDrivîCETxnSëtögs
);

629  
m_TxnI≈utGíî©‹
;

630 
	}
}

632 
CDM
* 
	$d©a_maöã«n˚_öô
(
cu°omîs
, 
sf
, 
wdays
)

636 
CLogF‹m©Tab
 * 
fmt

√w
 
	`CLogF‹m©Tab
();

637 
CEGíLoggî
* 
log
 = 
√w
 
	`CEGíLoggî
(
eDrivîCE
, 0, "EGíDMI≈ut.log", 
fmt
);

639 
INT32
 
sf1
 = 
sf
;

640 
INT32
 
wdays1
 = 
wdays
;

642 
CDM
* 
m_CDM
 = 
√w
 
	`CDM
 (
NULL
, 
log
, *
öputFûes
, (
TIdít
)
cu°omîs
, (TIdít)cu°omîs, 
wdays1
, 
sf1
, 1 );

643  
m_CDM
;

644 
	}
}

646 
CMEE
* 
	$m¨kë_öô
(
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
UINT32
 
UniqueId
){

649 
CLogF‹m©Tab
 * 
fmt

√w
 
	`CLogF‹m©Tab
();

650 
CEGíLoggî
* 
log
 = 
√w
 
	`CEGíLoggî
(
eDrivîCE
, 0, "M¨këI≈ut.log", 
fmt
);

652 
CMEE
* 
mì

√w
 
	`CMEE
(
TødögTimeSoF¨
, 
pSUT
, 
log
, *
öputFûes
, 
UniqueId
);

653  
mì
;

654 
	}
}

656 
	$egí_ªÀa£
()

658 
dñëe
 
pGíî©eAndLﬂd
;

659 
dñëe
 
pLﬂdîFa˘‹y
;

660 
dñëe
 
öputFûes
;

661 
dñëe
 
Ouçut
;

662 
	}
}

	@src/workload/tpce/egen/EGenLogFormatterTab.cpp

42 
	~"w‹klﬂd/ç˚/egí/EGíLogF‹m©ãrTab.h
"

43 
	~"w‹klﬂd/ç˚/egí/DrivîTy≥s.h
"

45 
usög
 
«me•a˚
 
	gTPCE
;

47 
°rög
 
em±ySåög
("");

53 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CBrokîVﬁumeSëtögs
& 
∑rms
)

57 
∑rms
.
	`CheckDeÁu…s
();

60 
logmsg
.
	`°r
(
em±ySåög
);

61 
logmsg
 << "Brokî VﬁumêP¨amëîs: NONE" << 
ídl
;

64  (
logmsg
.
	`°r
());

65 
	}
}

67 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CCu°omîPosôi⁄Sëtögs
& 
∑rms
)

70 
∑rms
.
	`CheckDeÁu…s
();

73 
logmsg
.
	`°r
(
em±ySåög
);

74 
logmsg
 << "Cu°omî Posôi⁄ P¨amëîs:" << 
ídl
;

75 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

76 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "By Cu° ID: " << 
∑rms
.
d·
.
by_cu°_id
 << "\t" <<Ö¨ms.
cur
.by_cu°_id << "\t" << (∑rms.
°©e
.by_cu°_id ? "YES" : "NO"Ë<< 
ídl
;

77 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "By Tax ID: " << 
∑rms
.
d·
.
by_èx_id
 << "\t" <<Ö¨ms.
cur
.by_èx_id << "\t" << (∑rms.
°©e
.by_èx_id ? "YES" : "NO"Ë<< 
ídl
;

78 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Gë Hi°‹y: " << 
∑rms
.
d·
.
gë_hi°‹y
 << "\t" <<Ö¨ms.
cur
.gë_hi°‹y << "\t" << (∑rms.
°©e
.gë_hi°‹y ? "YES" : "NO"Ë<< 
ídl
;

81  (
logmsg
.
	`°r
());

82 
	}
}

84 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CM¨këW©chSëtögs
& 
∑rms
)

87 
∑rms
.
	`CheckDeÁu…s
();

90 
logmsg
.
	`°r
(
em±ySåög
);

91 
logmsg
 << "M¨kë W©ch P¨amëîs:" << 
ídl
;

92 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

93 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "By Accou¡ ID: " << 
∑rms
.
d·
.
by_ac˘_id
 << "\t" <<Ö¨ms.
cur
.by_ac˘_id << "\t" << (∑rms.
°©e
.by_ac˘_id ? "YES" : "NO"Ë<< 
ídl
;

94 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "By Indu°ry: " << 
∑rms
.
d·
.
by_ödu°ry
 << "\t" <<Ö¨ms.
cur
.by_ödu°ry << "\t" << (∑rms.
°©e
.by_ödu°ry ? "YES" : "NO"Ë<< 
ídl
;

95 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "By W©ch Li°: " << 
∑rms
.
d·
.
by_w©ch_li°
 << "\t" <<Ö¨ms.
cur
.by_w©ch_li° << "\t" << (∑rms.
°©e
.by_w©ch_li° ? "YES" : "NO"Ë<< 
ídl
;

98  (
logmsg
.
	`°r
());

99 
	}
}

101 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CSecurôyDëaûSëtögs
& 
∑rms
)

104 
∑rms
.
	`CheckDeÁu…s
();

107 
logmsg
.
	`°r
(
em±ySåög
);

108 
logmsg
 << "Securôy Dëaû P¨amëîs:" << 
ídl
;

109 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

110 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "LOB Ac˚s†P˘: " << 
∑rms
.
d·
.
LOBAc˚ssPî˚¡age
 << "\t" <<Ö¨ms.
cur
.LOBAc˚ssPî˚¡agê<< "\t" << (∑rms.
°©e
.LOBAc˚ssPî˚¡agê? "YES" : "NO"Ë<< 
ídl
;

113  (
logmsg
.
	`°r
());

114 
	}
}

116 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CTødeLookupSëtögs
& 
∑rms
)

119 
∑rms
.
	`CheckDeÁu…s
();

122 
logmsg
.
	`°r
(
em±ySåög
);

123 
logmsg
 << "TødêLooku∞P¨amëîs:" << 
ídl
;

124 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

125 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê1 P˘:" << 
∑rms
.
d·
.
do_‰ame1
 << "\t" <<Ö¨ms.
cur
.do_‰ame1 << "\t" << (∑rms.
°©e
.do_‰ame1 ? "YES" : "NO"Ë<< 
ídl
;

126 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê2 P˘:" << 
∑rms
.
d·
.
do_‰ame2
 << "\t" <<Ö¨ms.
cur
.do_‰ame2 << "\t" << (∑rms.
°©e
.do_‰ame2 ? "YES" : "NO"Ë<< 
ídl
;

127 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê3 P˘:" << 
∑rms
.
d·
.
do_‰ame3
 << "\t" <<Ö¨ms.
cur
.do_‰ame3 << "\t" << (∑rms.
°©e
.do_‰ame3 ? "YES" : "NO"Ë<< 
ídl
;

128 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê4 P˘:" << 
∑rms
.
d·
.
do_‰ame4
 << "\t" <<Ö¨ms.
cur
.do_‰ame4 << "\t" << (∑rms.
°©e
.do_‰ame4 ? "YES" : "NO"Ë<< 
ídl
;

129 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê1 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme1
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme1 << "\t" << (∑rms.
°©e
.MaxRowsFøme1 ? "YES" : "NO"Ë<< 
ídl
;

130 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê2 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme2
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme2 << "\t" << (∑rms.
°©e
.MaxRowsFøme2 ? "YES" : "NO"Ë<< 
ídl
;

131 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê3 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme3
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme3 << "\t" << (∑rms.
°©e
.MaxRowsFøme3 ? "YES" : "NO"Ë<< 
ídl
;

132 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê4 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme4
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme4 << "\t" << (∑rms.
°©e
.MaxRowsFøme4 ? "YES" : "NO"Ë<< 
ídl
;

133 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "BackOffFromEndTimeFøme2:" << 
∑rms
.
d·
.
BackOffFromEndTimeFøme2
 << "\t" <<Ö¨ms.
cur
.BackOffFromEndTimeFøme2 << "\t" << (∑rms.
°©e
.BackOffFromEndTimeFøme2 ? "YES" : "NO"Ë<< 
ídl
;

134 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "BackOffFromEndTimeFøme3:" << 
∑rms
.
d·
.
BackOffFromEndTimeFøme3
 << "\t" <<Ö¨ms.
cur
.BackOffFromEndTimeFøme3 << "\t" << (∑rms.
°©e
.BackOffFromEndTimeFøme3 ? "YES" : "NO"Ë<< 
ídl
;

135 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "BackOffFromEndTimeFøme4:" << 
∑rms
.
d·
.
BackOffFromEndTimeFøme4
 << "\t" <<Ö¨ms.
cur
.BackOffFromEndTimeFøme4 << "\t" << (∑rms.
°©e
.BackOffFromEndTimeFøme4 ? "YES" : "NO"Ë<< 
ídl
;

138  (
logmsg
.
	`°r
());

139 
	}
}

141 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CTødeOrdîSëtögs
& 
∑rms
)

144 
∑rms
.
	`CheckDeÁu…s
();

147 
logmsg
.
	`°r
(
em±ySåög
);

148 
logmsg
 << "TødêOrdî P¨amëîs:" << 
ídl
;

149 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

150 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "M¨kë TødêP˘:" << 
∑rms
.
d·
.
m¨kë
 << "\t" <<Ö¨ms.
cur
.m¨kë << "\t" << (∑rms.
°©e
.m¨kë ? "YES" : "NO"Ë<< 
ídl
;

151 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Limô TødêP˘:" << 
∑rms
.
d·
.
limô
 << "\t" <<Ö¨ms.
cur
.limô << "\t" << (∑rms.
°©e
.limô ? "YES" : "NO"Ë<< 
ídl
;

152 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "St› Los†P˘:" << 
∑rms
.
d·
.
°›_loss
 << "\t" <<Ö¨ms.
cur
.°›_los†<< "\t" << (∑rms.
°©e
.°›_los†? "YES" : "NO"Ë<< 
ídl
;

153 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Securôy by NamêP˘:" << 
∑rms
.
d·
.
£curôy_by_«me
 << "\t" <<Ö¨ms.
cur
.£curôy_by_«mê<< "\t" << (∑rms.
°©e
.£curôy_by_«mê? "YES" : "NO"Ë<< 
ídl
;

154 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Securôy by Symbﬁ P˘:" << 
∑rms
.
d·
.
£curôy_by_symbﬁ
 << "\t" <<Ö¨ms.
cur
.£curôy_by_symbﬁ << "\t" << (∑rms.
°©e
.£curôy_by_symbﬁ ? "YES" : "NO"Ë<< 
ídl
;

155 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Buy Ordî P˘:" << 
∑rms
.
d·
.
buy_‹dîs
 << "\t" <<Ö¨ms.
cur
.buy_‹dî†<< "\t" << (∑rms.
°©e
.buy_‹dî†? "YES" : "NO"Ë<< 
ídl
;

156 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Sñ»Ordî P˘:" << 
∑rms
.
d·
.
£Œ_‹dîs
 << "\t" <<Ö¨ms.
cur
.£Œ_‹dî†<< "\t" << (∑rms.
°©e
.£Œ_‹dî†? "YES" : "NO"Ë<< 
ídl
;

157 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "LIFO P˘:" << 
∑rms
.
d·
.
lifo
 << "\t" <<Ö¨ms.
cur
.lifÿ<< "\t" << (∑rms.
°©e
.lifÿ? "YES" : "NO"Ë<< 
ídl
;

158 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "M¨gö TødêP˘:" << 
∑rms
.
d·
.
ty≥_is_m¨gö
 << "\t" <<Ö¨ms.
cur
.ty≥_is_m¨gö << "\t" << (∑rms.
°©e
.ty≥_is_m¨gö ? "YES" : "NO"Ë<< 
ídl
;

159 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Execut‹á†Ow√∏P˘:" << 
∑rms
.
d·
.
exec_is_ow√r
 << "\t" <<Ö¨ms.
cur
.exec_is_ow√∏<< "\t" << (∑rms.
°©e
.exec_is_ow√∏? "YES" : "NO"Ë<< 
ídl
;

160 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Rﬁlback P˘:" << 
∑rms
.
d·
.
rﬁlback
 << "\t" <<Ö¨ms.
cur
.rﬁlback << "\t" << (∑rms.
°©e
.rﬁlback ? "YES" : "NO"Ë<< 
ídl
;

163  (
logmsg
.
	`°r
());

164 
	}
}

166 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CTødeUpd©eSëtögs
& 
∑rms
)

169 
∑rms
.
	`CheckDeÁu…s
();

172 
logmsg
.
	`°r
(
em±ySåög
);

173 
logmsg
 << "TødêUpd©êP¨amëîs:" << 
ídl
;

174 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

175 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê1 P˘:" << 
∑rms
.
d·
.
do_‰ame1
 << "\t" <<Ö¨ms.
cur
.do_‰ame1 << "\t" << (∑rms.
°©e
.do_‰ame1 ? "YES" : "NO"Ë<< 
ídl
;

176 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê2 P˘:" << 
∑rms
.
d·
.
do_‰ame2
 << "\t" <<Ö¨ms.
cur
.do_‰ame2 << "\t" << (∑rms.
°©e
.do_‰ame2 ? "YES" : "NO"Ë<< 
ídl
;

177 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê3 P˘:" << 
∑rms
.
d·
.
do_‰ame3
 << "\t" <<Ö¨ms.
cur
.do_‰ame3 << "\t" << (∑rms.
°©e
.do_‰ame3 ? "YES" : "NO"Ë<< 
ídl
;

178 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê1 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme1
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme1 << "\t" << (∑rms.
°©e
.MaxRowsFøme1 ? "YES" : "NO"Ë<< 
ídl
;

179 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê2 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme2
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme2 << "\t" << (∑rms.
°©e
.MaxRowsFøme2 ? "YES" : "NO"Ë<< 
ídl
;

180 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê3 MaxRows:" << 
∑rms
.
d·
.
MaxRowsFøme3
 << "\t" <<Ö¨ms.
cur
.MaxRowsFøme3 << "\t" << (∑rms.
°©e
.MaxRowsFøme3 ? "YES" : "NO"Ë<< 
ídl
;

181 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê1 MaxRowsToUpd©e:" << 
∑rms
.
d·
.
MaxRowsToUpd©eFøme1
 << "\t" <<Ö¨ms.
cur
.MaxRowsToUpd©eFøme1 << "\t" << (∑rms.
°©e
.MaxRowsToUpd©eFøme1 ? "YES" : "NO"Ë<< 
ídl
;

182 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê2 MaxRowsToUpd©e:" << 
∑rms
.
d·
.
MaxRowsToUpd©eFøme2
 << "\t" <<Ö¨ms.
cur
.MaxRowsToUpd©eFøme2 << "\t" << (∑rms.
°©e
.MaxRowsToUpd©eFøme2 ? "YES" : "NO"Ë<< 
ídl
;

183 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Fømê3 MaxRowsToUpd©e:" << 
∑rms
.
d·
.
MaxRowsToUpd©eFøme3
 << "\t" <<Ö¨ms.
cur
.MaxRowsToUpd©eFøme3 << "\t" << (∑rms.
°©e
.MaxRowsToUpd©eFøme3 ? "YES" : "NO"Ë<< 
ídl
;

184 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "BackOffFromEndTimeFøme2:" << 
∑rms
.
d·
.
BackOffFromEndTimeFøme2
 << "\t" <<Ö¨ms.
cur
.BackOffFromEndTimeFøme2 << "\t" << (∑rms.
°©e
.BackOffFromEndTimeFøme2 ? "YES" : "NO"Ë<< 
ídl
;

185 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "BackOffFromEndTimeFøme3:" << 
∑rms
.
d·
.
BackOffFromEndTimeFøme3
 << "\t" <<Ö¨ms.
cur
.BackOffFromEndTimeFøme3 << "\t" << (∑rms.
°©e
.BackOffFromEndTimeFøme3 ? "YES" : "NO"Ë<< 
ídl
;

188  (
logmsg
.
	`°r
());

189 
	}
}

195 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CTxnMixGíî©‹Sëtögs
& 
∑rms
)

198 
∑rms
.
	`CheckDeÁu…s
();

201 
logmsg
.
	`°r
(
em±ySåög
);

202 
logmsg
 << "Tønß˘i⁄ Mixes:" << 
ídl
;

203 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

204 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Brokî Vﬁume: " << 
∑rms
.
d·
.
BrokîVﬁumeMixLevñ
 << "\t" <<Ö¨ms.
cur
.BrokîVﬁumeMixLevñ << "\t" << (∑rms.
°©e
.BrokîVﬁumeMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

205 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Cu°omî Posôi⁄: " << 
∑rms
.
d·
.
Cu°omîPosôi⁄MixLevñ
 << "\t" <<Ö¨ms.
cur
.Cu°omîPosôi⁄MixLevñ << "\t" << (∑rms.
°©e
.Cu°omîPosôi⁄MixLevñ ? "YES" : "NO"Ë<< 
ídl
;

206 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "M¨kë W©ch: " << 
∑rms
.
d·
.
M¨këW©chMixLevñ
 << "\t" <<Ö¨ms.
cur
.M¨këW©chMixLevñ << "\t" << (∑rms.
°©e
.M¨këW©chMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

207 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Securôy Dëaû: " << 
∑rms
.
d·
.
SecurôyDëaûMixLevñ
 << "\t" <<Ö¨ms.
cur
.SecurôyDëaûMixLevñ << "\t" << (∑rms.
°©e
.SecurôyDëaûMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

208 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "TødêLookup: " << 
∑rms
.
d·
.
TødeLookupMixLevñ
 << "\t" <<Ö¨ms.
cur
.TødeLookupMixLevñ << "\t" << (∑rms.
°©e
.TødeLookupMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

209 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "TødêOrdî: " << 
∑rms
.
d·
.
TødeOrdîMixLevñ
 << "\t" <<Ö¨ms.
cur
.TødeOrdîMixLevñ << "\t" << (∑rms.
°©e
.TødeOrdîMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

210 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "TødêSètus: " << 
∑rms
.
d·
.
TødeSètusMixLevñ
 << "\t" <<Ö¨ms.
cur
.TødeSètusMixLevñ << "\t" << (∑rms.
°©e
.TødeSètusMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

211 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "TødêUpd©e: " << 
∑rms
.
d·
.
TødeUpd©eMixLevñ
 << "\t" <<Ö¨ms.
cur
.TødeUpd©eMixLevñ << "\t" << (∑rms.
°©e
.TødeUpd©eMixLevñ ? "YES" : "NO"Ë<< 
ídl
;

214  (
logmsg
.
	`°r
());

215 
	}
}

221 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CLﬂdîSëtögs
& 
∑rms
)

224 
∑rms
.
	`CheckDeÁu…s
();

227 
logmsg
.
	`°r
(
em±ySåög
);

228 
logmsg
 << "Lﬂdî Sëtögs:" << 
ídl
;

229 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

230 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "C⁄figuªd Cu°omîs:" << 
∑rms
.
d·
.
iC⁄figuªdCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iC⁄figuªdCu°omîCou¡ << 
ídl
;

231 i‡(
∑rms
.
cur
.
iC⁄figuªdCu°omîCou¡
 !∑rms.cur.
iA˘iveCu°omîCou¡
)

233 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "A˘ivêCu°omîs:" << 
∑rms
.
d·
.
iA˘iveCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iA˘iveCu°omîCou¡ << 
ídl
;

235 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Sèπög Cu°omî:" << 
∑rms
.
d·
.
iSèπögCu°omî
 << "\t" <<Ö¨ms.
cur
.iSèπögCu°omî << 
ídl
;

236 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Cu°omî Cou¡:" << 
∑rms
.
d·
.
iCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iCu°omîCou¡ << 
ídl
;

237 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "SˇÀ Fa˘‹:" << 
∑rms
.
d·
.
iSˇÀFa˘‹
 << "\t" <<Ö¨ms.
cur
.iSˇÀFa˘‹ << "\t" << (∑rms.
°©e
.iSˇÀFa˘‹ ? "YES" : "NO"Ë<< 
ídl
;

238 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Day†o‡Inôü»Tødes:" << 
∑rms
.
d·
.
iDaysOfInôülTødes
 << "\t" <<Ö¨ms.
cur
.iDaysOfInôülTøde†<< "\t" << (∑rms.
°©e
.iDaysOfInôülTøde†? "YES" : "NO"Ë<< 
ídl
;

240  (
logmsg
.
	`°r
());

241 
	}
}

247 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CDrivîGlobÆSëtögs
& 
∑rms
)

250 
∑rms
.
	`CheckDeÁu…s
();

253 
logmsg
.
	`°r
(
em±ySåög
);

254 
logmsg
 << "Drivî GlobÆ Sëtögs:" << 
ídl
;

255 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

256 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "C⁄figuªd Cu°omîs:" << 
∑rms
.
d·
.
iC⁄figuªdCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iC⁄figuªdCu°omîCou¡ << 
ídl
;

257 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "A˘ivêCu°omîs:" << 
∑rms
.
d·
.
iA˘iveCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iA˘iveCu°omîCou¡ << 
ídl
;

258 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "SˇÀ Fa˘‹:" << 
∑rms
.
d·
.
iSˇÀFa˘‹
 << "\t" <<Ö¨ms.
cur
.iSˇÀFa˘‹ << "\t" << (∑rms.
°©e
.iSˇÀFa˘‹ ? "YES" : "NO"Ë<< 
ídl
;

259 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Day†o‡Inôü»Tødes:" << 
∑rms
.
d·
.
iDaysOfInôülTødes
 << "\t" <<Ö¨ms.
cur
.iDaysOfInôülTøde†<< "\t" << (∑rms.
°©e
.iDaysOfInôülTøde†? "YES" : "NO"Ë<< 
ídl
;

261  (
logmsg
.
	`°r
());

262 
	}
}

264 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CDrivîCESëtögs
& 
∑rms
)

267 
logmsg
.
	`°r
(
em±ySåög
);

268 
logmsg
 << "Drivî CE Sëtögs:" << 
ídl
;

269 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "VÆue" << 
ídl
;

270 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "UniquêID:" << 
∑rms
.
cur
.
UniqueId
 << 
ídl
;

271 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Tx¿Mix RNGSìd:" << 
∑rms
.
cur
.
TxnMixRNGSìd
 << 
ídl
;

272 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Tx¿I≈uàRNGSìd:" << 
∑rms
.
cur
.
TxnI≈utRNGSìd
 << 
ídl
;

275  (
logmsg
.
	`°r
());

276 
	}
}

278 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CDrivîCEP¨tôi⁄Sëtögs
& 
∑rms
)

281 
∑rms
.
	`CheckDeÁu…s
();

284 
logmsg
.
	`°r
(
em±ySåög
);

285 
logmsg
 << "Drivî CE P¨tôi⁄ Sëtögs:" << 
ídl
;

286 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "DeÁu…" << "\t" << "Cuºít" << "\t" << "DeÁu…?" << 
ídl
;

287 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨tôi⁄ Sèπög Cu°omî ID:" << 
∑rms
.
d·
.
iMySèπögCu°omîId
 << "\t" <<Ö¨ms.
cur
.iMySèπögCu°omîId << 
ídl
;

288 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨tôi⁄ Cu°omî Cou¡:" << 
∑rms
.
d·
.
iMyCu°omîCou¡
 << "\t" <<Ö¨ms.
cur
.iMyCu°omîCou¡ << 
ídl
;

289 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨tôi⁄ Pî˚¡:" << 
∑rms
.
d·
.
iP¨tôi⁄Pî˚¡
 << "\t" <<Ö¨ms.
cur
.iP¨tôi⁄Pî˚¡ << "\t" << (∑rms.
°©e
.iP¨tôi⁄Pî˚¡ ? "YES" : "NO"Ë<< 
ídl
;

292  (
logmsg
.
	`°r
());

293 
	}
}

295 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CDrivîMEESëtögs
& 
∑rms
)

298 
logmsg
.
	`°r
(
em±ySåög
);

299 
logmsg
 << "Drivî MEE Sëtögs:" << 
ídl
;

300 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "VÆue" << 
ídl
;

301 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "UniquêID:" << 
∑rms
.
cur
.
UniqueId
 << 
ídl
;

302 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Tickî T≠êRNGSìd:" << 
∑rms
.
cur
.
TickîT≠eRNGSìd
 << 
ídl
;

303 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "Tødög Flo‹ RNGSìd:" << 
∑rms
.
cur
.
TødögFlo‹RNGSìd
 << 
ídl
;

306  (
logmsg
.
	`°r
());

307 
	}
}

309 
°rög
 
	gCLogF‹m©Tab
::
	$GëLogOuçut
(
CDrivîDMSëtögs
& 
∑rms
)

312 
logmsg
.
	`°r
(
em±ySåög
);

313 
logmsg
 << "Drivî DM Sëtögs:" << 
ídl
;

314 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "P¨amëî" << "VÆue" << 
ídl
;

315 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "UniquêID:" << 
∑rms
.
cur
.
UniqueId
 << 
ídl
;

316 
logmsg
 << 
À·
 << 
	`£tw
(40Ë<< "RNGSìd:" << 
∑rms
.
cur
.
RNGSìd
 << 
ídl
;

319  (
logmsg
.
	`°r
());

320 
	}
}

	@src/workload/tpce/egen/EGenValidate.cpp

52 
	~"w‹klﬂd/ç˚/egí/thªadög.h
"

53 
	~<io°ªam
>

54 
	~<°dex˚±
>

55 
	~<s°ªam
>

56 
	~<cm©h
>

57 
	~<c°dlib
>

60 
	~"w‹klﬂd/ç˚/egí/EGíLﬂdî_°dafx.h
"

61 
	~"w‹klﬂd/ç˚/egí/D©eTime.h
"

62 
	~"w‹klﬂd/ç˚/egí/¥ogªssmëî.h
"

63 
	~"w‹klﬂd/ç˚/egí/buckësimuœt‹.h
"

64 
	~"w‹klﬂd/ç˚/egí/°rutû.h
"

66 
usög
 
	gTPCE
::
°πoöt64
;

67 
usög
 
	gTPCE
::
°πodbl
;

68 
usög
 
	gTPCE
::
time°πoöt64
;

69 
usög
 
	gTPCE
::
öt64tŸime°r
;

71 
usög
 
	gTPCE
::
CCu°omîSñe˘i⁄
;

72 
usög
 
	gTPCE
::
CR™dom
;

73 
usög
 
	gTPCE
::
RNGSEED
;

74 
usög
 
	gTPCE
::
iDeÁu…LﬂdUnôSize
;

75 
usög
 
	gTPCE
::
eCu°omîTõr
;

77 
usög
 
	g°d
::
cout
;

78 
usög
 
	g°d
::
ídl
;

81 ˛as†
	cBuckëSimO±i⁄s
 {

82 
	mpublic
:

83 
vîbo£
;

84 
	mhñ∂evñ
;

85 
RNGSEED
 
	mba£_£ed
;

86 
TIdít
 
	mcu°_cou¡
;

87 
	mç£
;

88 
boﬁ
 
	mu£_°ddev
;

89 
	m°ddev
;

90 
INT64
 
	mrun_Àngth
;

91 
UINT
 
	msim_cou¡
;

92 
UINT
 
	msim_fú°
;

93 
UINT
 
	mnum_thªads
;

94 
UINT
 
	möãrvÆ_time
;

97 
INT64
 
	$ˇlc_sim‹dîs
() {

98  
°©ic_ˇ°
<
INT64
>(
ç£
 * sètic_ˇ°<>(
run_Àngth
));

101 
	$BuckëSimO±i⁄s
()

102 : 
	`vîbo£
 ( 0 )

103 , 
	`hñ∂evñ
 ( 0 )

104 , 
	`ba£_£ed
 ( 
TPCE
::
RNGSìdBa£TxnI≈utGíî©‹
 )

105 , 
	`cu°_cou¡
 ( 0 )

106 , 
	`ç£
 ( 10 )

107 , 
	`u£_°ddev
 ( 
Ál£
 )

108 , 
	`°ddev
 ( 0 )

109 , 
	`run_Àngth
 ( 7200 )

110 , 
	`sim_cou¡
 ( 10000 )

111 , 
	`sim_fú°
 ( 0 )

112 , 
	`num_thªads
 ( 1 )

113 , 
	$öãrvÆ_time
 ( 10 )

115 
	}
}

119 
	$ußge
(c⁄° *
¥og«me
, 
BuckëSimO±i⁄s
& 
›ti⁄s
,

120 
boﬁ
 
ußge_îr‹
=
åue
) {

121 
cout
 << "Ußge: " << 
¥og«me
 << " [›ti⁄s] stddev cu°cou¡ [TPS-E] [ru¡ime]" << 
ídl


122 << " -h Thi†hñ∞mesßgê(-hh f‹ m‹ê›ti⁄s)" << 
ídl


123 << " -v In¸ó£ vîbosôy" << 
ídl


124 << " -¯num Numbî o‡cu°omî†tÿsimuœã (" << 
›ti⁄s
.
cu°_cou¡
 << ")" << 
ídl


125 << " -∏ru¡imê Ru¡imêtÿsimuœã (" << 
›ti⁄s
.
run_Àngth
 << ")" << 
ídl


126 << " -êçsEÅpsEÅÿsimuœã (" << 
›ti⁄s
.
ç£
 << ")" << 
ídl


127 << " -†°ddev Sènd¨d Devüti⁄Åÿcheckágaö° (n⁄e)" << 
ídl


128 << " -àthªad† Numbî o‡thªad†tÿu£ (" << 
›ti⁄s
.
num_thªads
 << ")" << 
ídl


130 i‡(
›ti⁄s
.
hñ∂evñ
 > 1) {

131 
cout
 << " -S sìd Ba£ Sìd f‹Ñ™domÇumbî gíî©i⁄ (" << 
›ti⁄s
.
ba£_£ed
 << ")" << 
ídl


132 << " -¿num Numbî o‡simuœti⁄†tÿ≥rf‹m (" << 
›ti⁄s
.
sim_cou¡
 << ")" << 
ídl


133 << " -ònum Inôü»simuœti⁄ÇumbîÅÿ°¨àwôh (" << 
›ti⁄s
.
sim_fú°
 << ")" << 
ídl


134 << " -uÇum Progªs†ªp‹àöãrvÆ (" << 
›ti⁄s
.
öãrvÆ_time
 << ")" << 
ídl


137 
	`exô
 (
ußge_îr‹
?
ERROR_BAD_OPTION
:0);

138 
	}
}

141 
	$∑r£Comm™dLöe
(
¨gc
, c⁄° *
¨gv
[], 
BuckëSimO±i⁄s
& 
›ti⁄s
) {

142 
Êag
 = '-';

143 
åy
 {

144 
boﬁ
 
ç£_£t
 = 
Ál£
;

145 
›ti⁄s
.
ç£
 = 0;

146 
¨gnum
;

147 
¨gnum
 = 1;árgnum < 
¨gc
; ++argnum) {

148 c⁄° *
±r
 = 
¨gv
[
¨gnum
];

149 i‡(*
±r
++ != '-') {

152 *
±r
) {

153 
Êag
 = *
±r
++;

156 
boﬁ
 
u£_¨g
 = 
åue
;

157 
¨g_adv™˚
 = 0;

158 c⁄° *
¨g
 = 
±r
;

161 i‡(*
±r
 == '\0') {

162 
¨g_adv™˚
 = 1;

163 
¨g
 = 
¨gv
[
¨gnum
+1];

164 i‡(
¨g
 =
NULL
) {

166 
¨g
 = "";

170 
Êag
) {

172 
u£_¨g
 = 
Ál£
;

173 
›ti⁄s
.
vîbo£
 += 1;

177 
u£_¨g
 = 
Ál£
;

178 
›ti⁄s
.
hñ∂evñ
 += 1;

181 
›ti⁄s
.
ba£_£ed
 = (
RNGSEED
)
	`°πoöt64
(
¨g
);

184 
›ti⁄s
.
cu°_cou¡
 = 
	`°πoöt64
(
¨g
);

187 
›ti⁄s
.
sim_cou¡
 = 
°©ic_ˇ°
<
UINT
>(
	`°πoöt64
(
¨g
));

190 
›ti⁄s
.
sim_fú°
 = 
°©ic_ˇ°
<
UINT
>(
	`°πoöt64
(
¨g
));

193 
›ti⁄s
.
run_Àngth
 = 
	`time°πoöt64
(
¨g
);

196 
ç£_£t
 = 
åue
;

197 
›ti⁄s
.
ç£
 = 
	`°πodbl
(
¨g
);

200 
›ti⁄s
.
num_thªads
 = 
°©ic_ˇ°
<
UINT
>(
	`°πoöt64
(
¨g
));

203 
›ti⁄s
.
u£_°ddev
 = 
åue
;

204 
›ti⁄s
.
°ddev
 = 
	`°πodbl
(
¨g
);

207 
›ti⁄s
.
öãrvÆ_time
 = 
°©ic_ˇ°
<
UINT
>(
	`time°πoöt64
(
¨g
));

208 
›ti⁄s
.
vîbo£
 += 1;

211 
°d
::
o°rög°ªam
 
°rm
;

212 
throw
 
°d
::
	`ru¡ime_îr‹
(°d::
	`°rög
("Unknown option"));

216 i‡(
u£_¨g
) {

217 
¨gnum
 +
¨g_adv™˚
;

225 i‡(
¨gnum
 < 
¨gc
) {

226 
›ti⁄s
.
u£_°ddev
 = 
åue
;

227 
›ti⁄s
.
°ddev
 = 
	`°πodbl
(
¨gv
[
¨gnum
++]);

229 i‡(
¨gnum
 < 
¨gc
) {

230 
Êag
 = 'c';

231 
›ti⁄s
.
cu°_cou¡
 = 
	`°πoöt64
(
¨gv
[
¨gnum
++]);

233 i‡(
¨gnum
 < 
¨gc
) {

234 
Êag
 = 't';

235 
ç£_£t
 = 
åue
;

236 
›ti⁄s
.
ç£
 = 
	`°πodbl
(
¨gv
[
¨gnum
++]);

238 i‡(
¨gnum
 < 
¨gc
) {

239 
Êag
 = 'r';

240 
›ti⁄s
.
run_Àngth
 = 
°©ic_ˇ°
<
UINT
>(
	`time°πoöt64
(
¨gv
[
¨gnum
++]));

242 i‡(
¨gnum
 < 
¨gc
) {

243 
cout
 << "Toÿm™y comm™dÜöê¨gumíts!" << 
ídl
;

244 
	`ußge
(
¨gv
[0], 
›ti⁄s
);

247 i‡(!
ç£_£t
) {

248 
›ti⁄s
.
ç£
 = o±i⁄s.
cu°_cou¡
 / 500.0;

253 i‡(
›ti⁄s
.
hñ∂evñ
 || o±i⁄s.
cu°_cou¡
 =0 || !›ti⁄s.
u£_°ddev
) {

254 
	`ußge
(
¨gv
[0], 
›ti⁄s
, 
Ál£
);

256 } 
	`ˇtch
 (
°d
::
ex˚±i⁄
& 
e
) {

257 
cout
 << "Eº‹Ö¨sög comm™dÜöê›ti⁄ '" << 
Êag
 << "': " << 
e
.
	`wh©
(Ë<< 
ídl
;

258 
	`ußge
(
¨gv
[0], 
›ti⁄s
);

259 
	`exô
 (
ERROR_BAD_OPTION
);

261 
	}
}

264 
	$maö
(
¨gc
, c⁄° *
¨gv
[]) {

265 
åy
 {

266 
TPCE
::
CD©eTime
 
°¨t_time
;

267 
BuckëSimO±i⁄s
 
›ti⁄s
;

268 
°d
::
ve˘‹
<
TPCE
::
Thªad
<TPCE::
BuckëSimuœt‹
>*> 
thªads
;

270 
	`∑r£Comm™dLöe
(
¨gc
, 
¨gv
, 
›ti⁄s
);

272 
TPCE
::
BuckëProgªss
 
	`¥ogªss
(
›ti⁄s
.
°ddev
, o±i⁄s.
sim_cou¡
, o±i⁄s.
vîbo£
);

273 
¥ogªss
.
	`£t_di•œy_öãrvÆ
(
›ti⁄s
.
öãrvÆ_time
);

276 
sim_idx
 = 0;

277 
sims_≥r_thªad
 = 
›ti⁄s
.
sim_cou¡
/›ti⁄s.
num_thªads
+1;

279 
sim_idx
 < 
›ti⁄s
.
sim_cou¡
) {

281 i‡(
sims_≥r_thªad
 > 
›ti⁄s
.
sim_cou¡
 - 
sim_idx
) {

282 
sims_≥r_thªad
 = 
›ti⁄s
.
sim_cou¡
 - 
sim_idx
;

284 
TPCE
::
Thªad
<TPCE::
BuckëSimuœt‹
>* 
thr
 =

285 
√w
 
TPCE
::
Thªad
<TPCE::
BuckëSimuœt‹
>(
°d
::
auto_±r
<TPCE::BuckëSimuœt‹>“ew TPCE::
	`BuckëSimuœt‹
(

286 
›ti⁄s
.
sim_fú°
+
sim_idx
,

287 
sims_≥r_thªad
,

288 
›ti⁄s
.
cu°_cou¡
,

289 
›ti⁄s
.
	`ˇlc_sim‹dîs
(),

290 
›ti⁄s
.
ba£_£ed
,

291 
¥ogªss
)));

293 
thr
->
	`°¨t
();

294 
thªads
.
	`push_back
(
thr
);

295 
sim_idx
 +
sims_≥r_thªad
;

299 !
thªads
.
	`em±y
()) {

300 
TPCE
::
Thªad
<TPCE::
BuckëSimuœt‹
>* 
thr
 = 
thªads
.
	`back
();

301 
thªads
.
	`p›_back
();

302 
thr
->
	`°›
();

303 
dñëe
 
thr
;

306 
TPCE
::
CD©eTime
 
now
;

307 
cout
 << "Maximum Sènd¨d Devüti⁄ = " << 
¥ogªss
.
	`max_°ddev
(Ë<< 
ídl
;

308 
cout
 << "Reque°ed Sènd¨d Devüti⁄ = " << 
›ti⁄s
.
°ddev
 << 
ídl
;

309 
cout
 << "Cu°omî Cou¡ = " << 
›ti⁄s
.
cu°_cou¡
 << 
ídl
;

310 
cout
 << "Iãøti⁄ Cou¡ = " << 
›ti⁄s
.
sim_cou¡
 << 
ídl
;

311 
cout
 << "Iãøti⁄ Sèπ = " << 
›ti⁄s
.
sim_fú°
 << 
ídl
;

312 
cout
 << "Iãøti⁄†Com∂ëed = " << 
¥ogªss
.
	`cuºít
(Ë<< 
ídl
;

313 
cout
 << "Ba£ Sìd = " << 
›ti⁄s
.
ba£_£ed
 << 
ídl
;

314 
cout
 << "Simuœti⁄ Duøti⁄ = " << 
›ti⁄s
.
run_Àngth
 << 
ídl
;

315 
cout
 << "çsE = " << 
›ti⁄s
.
ç£
 << 
ídl
;

316 
cout
 << "Simulation Duration = "

317 << 
	`öt64tŸime°r
(
now
.
	`DiffInMûliSec⁄ds
(
°¨t_time
)/1000Ë<< 
ídl
;

318 
cout
 << "Simuœti⁄ com∂ëedáà = " << 
now
.
	`ToSå
(11Ë<< 
ídl
;

319 
cout
 << 
ídl
;

322 i‡(
¥ogªss
.
	`max_°ddev
(Ë< 
›ti⁄s
.
°ddev
) {

323 
cout
 << "Faûed!" << 
ídl
;

324 
	`exô
(4);

326 
cout
 << "Pas£d!" << 
ídl
;

331 } 
	`ˇtch
 (
°d
::
ex˚±i⁄
& 
e
) {

332 
cout
 << "Caughàex˚±i⁄: " << 
e
.
	`wh©
(Ë<< 
ídl
;

333 } 
	`ˇtch
 (...) {

334 
cout
 << "Caughàunknow¿ex˚±i⁄" << 
ídl
;

337 
	`exô
(1);

338 
	}
}

	@src/workload/tpce/egen/EGenVersion.cpp

42 
	~"w‹klﬂd/ç˚/egí/EGíUtûôõs_°dafx.h
"

44 
«me•a˚
 
	gTPCE


49 
INT32
 
	giEGíMaj‹Vîsi⁄
 = 1;

50 
INT32
 
	giEGíMö‹Vîsi⁄
 = 11;

51 
INT32
 
	giEGíRevisi⁄Numbî
 = 0;

52 
INT32
 
	giEGíBëaLevñ
 = 0;

56 
GëEGíVîsi⁄_C
(
INT32
 &
iMaj‹Vîsi⁄
, INT32 &
iMö‹Vîsi⁄
, INT32 &
iRevisi⁄Numbî
, INT32 &
iBëaLevñ
)

58 
GëEGíVîsi⁄
(
iMaj‹Vîsi⁄
, 
iMö‹Vîsi⁄
, 
iRevisi⁄Numbî
, 
iBëaLevñ
);

61 
GëEGíVîsi⁄Såög_C
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
)

63 
GëEGíVîsi⁄Såög
(
szOuçut
, 
iOuçutBuf„rLí
);

66 
PrötEGíVîsi⁄_C
()

68 
PrötEGíVîsi⁄
();

71 
GëEGíVîsi⁄Upd©eTime°amp_C
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
)

73 
GëEGíVîsi⁄Upd©eTime°amp
(
szOuçut
, 
iOuçutBuf„rLí
);

81 
GëEGíVîsi⁄
(
INT32
 &
iMaj‹Vîsi⁄
, INT32 &
iMö‹Vîsi⁄
, INT32 &
iRevisi⁄Numbî
, INT32 &
iBëaLevñ
)

83 
iMaj‹Vîsi⁄
 = 
iEGíMaj‹Vîsi⁄
;

84 
iMö‹Vîsi⁄
 = 
iEGíMö‹Vîsi⁄
;

85 
iRevisi⁄Numbî
 = 
iEGíRevisi⁄Numbî
;

86 
iBëaLevñ
 = 
iEGíBëaLevñ
;

91 
GëEGíVîsi⁄Såög
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
)

93 i‡(
iEGíBëaLevñ
 == 0)

95 
¢¥ötf
(
szOuçut
, 
iOuçutBuf„rLí
, "EGí v%d.%d.%d", 
iEGíMaj‹Vîsi⁄
, 
iEGíMö‹Vîsi⁄
, 
iEGíRevisi⁄Numbî
);

97 
¢¥ötf
(
szOuçut
, 
iOuçutBuf„rLí
, "EGí v%d.%d.%d bë®%d", 
iEGíMaj‹Vîsi⁄
, 
iEGíMö‹Vîsi⁄
, 
iEGíRevisi⁄Numbî
, 
iEGíBëaLevñ
);

103 
PrötEGíVîsi⁄
()

105 
szVîsi⁄
[33];

107 
GëEGíVîsi⁄Såög
(
szVîsi⁄
, (szVersion));

109 
¥ötf
("%s\n", 
szVîsi⁄
);

114 
GëEGíVîsi⁄Upd©eTime°amp
(* 
szOuçut
, 
size_t
 
iOuçutBuf„rLí
)

116 
°∫˝y
(
szOuçut
, 
__DATE__
" "
__TIME__
, 
iOuçutBuf„rLí
);

	@src/workload/tpce/egen/FlatFileLoader.cpp

37 
	~"w‹klﬂd/ç˚/egí/FœtFûeLﬂd_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 
«me•a˚
 
	gTPCE


44 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gACCOUNT_PERMISSION_ROW
>;

45 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gADDRESS_ROW
>;

46 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gBROKER_ROW
>;

47 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCASH_TRANSACTION_ROW
>;

48 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCHARGE_ROW
>;

49 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCOMMISSION_RATE_ROW
>;

50 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCOMPANY_ROW
>;

51 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCOMPANY_COMPETITOR_ROW
>;

52 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCUSTOMER_ROW
>;

53 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCUSTOMER_ACCOUNT_ROW
>;

54 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gCUSTOMER_TAXRATE_ROW
>;

55 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gDAILY_MARKET_ROW
>;

56 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gEXCHANGE_ROW
>;

57 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gFINANCIAL_ROW
>;

58 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gHOLDING_ROW
>;

59 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gHOLDING_HISTORY_ROW
>;

60 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gHOLDING_SUMMARY_ROW
>;

61 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gINDUSTRY_ROW
>;

62 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gLAST_TRADE_ROW
>;

63 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gNEWS_ITEM_ROW
>;

64 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gNEWS_XREF_ROW
>;

65 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gSECTOR_ROW
>;

66 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gSECURITY_ROW
>;

67 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gSETTLEMENT_ROW
>;

68 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gSTATUS_TYPE_ROW
>;

69 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gTAXRATE_ROW
>;

70 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gTRADE_ROW
>;

71 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gTRADE_HISTORY_ROW
>;

72 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gTRADE_REQUEST_ROW
>;

73 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gTRADE_TYPE_ROW
>;

74 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gWATCH_ITEM_ROW
>;

75 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gWATCH_LIST_ROW
>;

76 
ãm∂©e
 
˛ass
 
	gCFœtFûeLﬂdî
<
	gZIP_CODE_ROW
>;

	@src/workload/tpce/egen/InputFlatFilesStructure.cpp

42 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

44 
«me•a˚
 
	gTPCE


50 
boﬁ
 
	gCI≈utFûes
::
Inôülize
(
eDrivîTy≥
 
eTy≥
, 
TIdít
 
iC⁄figuªdCu°omîCou¡
, TIdíà
iA˘iveCu°omîCou¡
, c⁄° *
szP©hName
)

52 
eOuçutVîbosôy
 
	geOuçut
 = (
eTy≥
 =
eDrivîEGíLﬂdî
Ë? 
eOuçutVîbo£
 : 
eOuçutQuõt
;

53 
	gszFûeName
[
iMaxP©h
];

54 *
	gpSèπInFûeName
;

55 
size_t
 
	giDúLí
;

56 
size_t
 
	giFûeNameMaxLí
;

65 
°∫˝y
(
szFûeName
, 
szP©hName
, 
iMaxP©h
);

66 
	giDúLí
 = 
°æí
–
szFûeName
 );

67 
	gpSèπInFûeName
 = (*)&
szFûeName
[
iDúLí
];

68 i‡(*
	gpSèπInFûeName
 !'/' && *
pSèπInFûeName
 != '\\') {

69 
°∫ˇt
(
szFûeName
, "/", (szFileName));

70 
	gpSèπInFûeName
++;

71 
	giDúLí
++;

73 
	giFûeNameMaxLí
 = 
iMaxP©h
 - 
iDúLí
 - 1;

75 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"Lﬂdög i≈uàfûes:"<<
ídl
<<ídl<<
Êush
; }

76 
CD©eTime
 
	gt1
;

82 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tSecurity..."; }

83 
°∫˝y
(
pSèπInFûeName
, "Securôy.txt", 
iFûeNameMaxLí
);

84 
	gSecurôõs
 = 
√w
 
CSecurôyFûe
(
szFûeName
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
);

85 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

87 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tStatusType..."; }

88 
°∫˝y
(
pSèπInFûeName
, "SètusTy≥.txt", 
iFûeNameMaxLí
);

89 
	gSètusTy≥
 = 
√w
 
TSètusTy≥Fûe
(
szFûeName
);

90 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"...........lﬂded."<<
ídl
<<
Êush
; }

96 i‡(
	geTy≥
 !
eDrivîDM
)

98 i‡(
eOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tTradeType..."; }

99 
°∫˝y
(
pSèπInFûeName
, "TødeTy≥.txt", 
iFûeNameMaxLí
);

100 
	gTødeTy≥
 = 
√w
 
TTødeTy≥Fûe
(
szFûeName
);

101 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"............lﬂded."<<
ídl
<<
Êush
; }

108 i‡(
	geTy≥
 !
eDrivîMEE
)

110 i‡(
eOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tCompany..."; }

111 
°∫˝y
(
pSèπInFûeName
, "Com∑ny.txt", 
iFûeNameMaxLí
);

112 
	gCom∑ny
 = 
√w
 
CCom∑nyFûe
(
szFûeName
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
);

113 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"..............lﬂded."<<
ídl
<<
Êush
; }

115 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tExchange..."; }

116 
°∫˝y
(
pSèπInFûeName
, "Exch™ge.txt", 
iFûeNameMaxLí
);

117 
	gExch™ge
 = 
√w
 
TExch™geFûe
(
szFûeName
);

118 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

120 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tTaxRatesDivision..."; }

121 
°∫˝y
(
pSèπInFûeName
, "TaxR©esDivisi⁄.txt", 
iFûeNameMaxLí
);

122 
	gTaxR©esDivisi⁄
 = 
√w
 
CI≈utFûeNoWeight
<
TTaxR©eI≈utRow
>(
szFûeName
);

123 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".....lﬂded."<<
ídl
<<
Êush
; }

130 i‡(
	geTy≥
 !
eDrivîMEE
 && 
eTy≥
 !
eDrivîDM
)

132 i‡(
eOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tFemaleFirstName..."; }

133 
°∫˝y
(
pSèπInFûeName
, "FemÆeFú°Name.txt", 
iFûeNameMaxLí
);

134 
	gFemÆeFú°Names
 = 
√w
 
TFemÆeFú°NamesFûe
(
szFûeName
);

135 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"......lﬂded."<<
ídl
<<
Êush
; }

137 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tIndustry..."; }

138 
°∫˝y
(
pSèπInFûeName
, "Indu°ry.txt", 
iFûeNameMaxLí
);

139 
	gIndu°ry
 = 
√w
 
TIndu°ryFûe
(
szFûeName
);

140 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

142 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tLastName..."; }

143 
°∫˝y
(
pSèπInFûeName
, "La°Name.txt", 
iFûeNameMaxLí
);

144 
	gLa°Names
 = 
√w
 
TLa°NamesFûe
(
szFûeName
);

145 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

147 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tMaleFirstName..."; }

148 
°∫˝y
(
pSèπInFûeName
, "MÆeFú°Name.txt", 
iFûeNameMaxLí
);

149 
	gMÆeFú°Names
 = 
√w
 
TMÆeFú°NamesFûe
(
szFûeName
);

150 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"........lﬂded."<<
ídl
<<
Êush
; }

152 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tSector..."; }

153 
°∫˝y
(
pSèπInFûeName
, "Se˘‹.txt", 
iFûeNameMaxLí
);

154 
	gSe˘‹s
 = 
√w
 
TSe˘‹Fûe
(
szFûeName
);

155 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"...............lﬂded."<<
ídl
<<
Êush
; }

162 i‡(
	geTy≥
 !
eDrivîMEE
 && 
eTy≥
 !
eDrivîDM
 &&ÉTy≥ !
eDrivîCE
 &&ÉTy≥ !
eDrivîAŒ
)

164 i‡(
eOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tAreaCode..."; }

165 
°∫˝y
(
pSèπInFûeName
, "AªaCode.txt", 
iFûeNameMaxLí
);

166 
	gAªaCodes
 = 
√w
 
TAªaCodeFûe
(
szFûeName
);

167 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

169 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tCharge..."; }

170 
°∫˝y
(
pSèπInFûeName
, "Ch¨ge.txt", 
iFûeNameMaxLí
);

171 
	gCh¨ge
 = 
√w
 
TCh¨geFûe
(
szFûeName
);

172 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"...............lﬂded."<<
ídl
<<
Êush
; }

174 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tCommissionRate..."; }

175 
°∫˝y
(
pSèπInFûeName
, "Commissi⁄R©e.txt", 
iFûeNameMaxLí
);

176 
	gCommissi⁄R©e
 = 
√w
 
TCommissi⁄R©eFûe
(
szFûeName
);

177 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".......lﬂded."<<
ídl
<<
Êush
; }

179 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tCompanyCompetitor.."; }

180 
°∫˝y
(
pSèπInFûeName
, "Com∑nyCom≥tô‹.txt", 
iFûeNameMaxLí
);

181 
	gCom∑nyCom≥tô‹
 = 
√w
 
CCom∑nyCom≥tô‹Fûe
(
szFûeName
, 
iC⁄figuªdCu°omîCou¡
, 
iA˘iveCu°omîCou¡
);

182 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".....lﬂded."<<
ídl
<<
Êush
; }

184 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tCompanySPRate..."; }

185 
°∫˝y
(
pSèπInFûeName
, "Com∑nySPR©e.txt", 
iFûeNameMaxLí
);

186 
	gCom∑nySPR©e
 = 
√w
 
TCom∑nySPR©eFûe
(
szFûeName
);

187 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"........lﬂded."<<
ídl
<<
Êush
; }

189 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tLastName..."; }

190 
°∫˝y
(
pSèπInFûeName
, "La°Name.txt", 
iFûeNameMaxLí
);

191 
	gNews
 = 
√w
 
TNewsFûe
(
szFûeName
);

192 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".............lﬂded."<<
ídl
<<
Êush
; }

194 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tStreetName..."; }

195 
°∫˝y
(
pSèπInFûeName
, "SåìtName.txt", 
iFûeNameMaxLí
);

196 
	gSåìt
 = 
√w
 
TSåìtNamesFûe
(
szFûeName
);

197 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"...........lﬂded."<<
ídl
<<
Êush
; }

199 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tStreetSuffix..."; }

200 
°∫˝y
(
pSèπInFûeName
, "SåìtSuffix.txt", 
iFûeNameMaxLí
);

201 
	gSåìtSuffix
 = 
√w
 
TSåìtSuffixFûe
(
szFûeName
);

202 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<".........lﬂded."<<
ídl
<<
Êush
; }

204 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tTaxableAccountName..."; }

205 
°∫˝y
(
pSèπInFûeName
, "TaxabÀAccou¡Name.txt", 
iFûeNameMaxLí
);

206 
	gTaxabÀAccou¡Name
 = 
√w
 
TTaxabÀAccou¡NameFûe
(
szFûeName
);

207 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"...lﬂded."<<
ídl
<<
Êush
; }

209 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tNonTaxableAccountName..."; }

210 
°∫˝y
(
pSèπInFûeName
, "N⁄TaxabÀAccou¡Name.txt", 
iFûeNameMaxLí
);

211 
	gN⁄TaxabÀAccou¡Name
 = 
√w
 
TN⁄TaxabÀAccou¡NameFûe
(
szFûeName
);

212 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"lﬂded."<<
ídl
<<
Êush
; }

214 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tTaxRatesCountry..."; }

215 
°∫˝y
(
pSèπInFûeName
, "TaxR©esCou¡ry.txt", 
iFûeNameMaxLí
);

216 
	gTaxR©esCou¡ry
 = 
√w
 
CI≈utFûeNoWeight
<
TTaxR©eI≈utRow
>(
szFûeName
);

217 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"......lﬂded."<<
ídl
<<
Êush
; }

219 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"\tZipCode..."; }

220 
°∫˝y
(
pSèπInFûeName
, "ZùCode.txt", 
iFûeNameMaxLí
);

221 
	gZùCode
 = 
√w
 
TZùCodeFûe
(
szFûeName
);

222 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<"..............lﬂded."<<
ídl
<<
Êush
; }

225 
CD©eTime
 
	gt2
;

226 i‡(
	geOuçut
 =
eOuçutVîbo£
Ë{ 
cout
<<
ídl
<<"Lﬂdög com∂ëê("<<
t2
-
t1
<<"sec)."<<endl<<endl; }

228 
	gszFûeName
[
iDúLí
] = '\0';

230  
	gåue
;

	@src/workload/tpce/egen/MEE.cpp

42 
	~"w‹klﬂd/ç˚/egí/MEE.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

61 
	gCMEE
::
	$AutoSëRNGSìds
–
UINT32
 
UniqueId
 )

63 
CD©eTime
 
Now
;

64 
INT32
 
Ba£Yór
;

65 
INT32
 
Tmp1
, 
Tmp2
;

67 
Now
.
	`GëYMD
–&
Ba£Yór
, &
Tmp1
, &
Tmp2
 );

70 
Ba£Yór
 -= ( BaseYear % 5 );

71 
CD©eTime
 
	`Ba£
–
Ba£Yór
, 1, 1 );

75 
RNGSEED
 
Sìd
;

76 
Sìd
 = 
Now
.
	`MSec
() / 100;

81 
Sìd
 <<= 11;

82 
Sìd
 +(
RNGSEED
)((
INT64
)
Now
.
	`DayNo
(Ë- (INT64)
Ba£
.DayNo());

88 
Sìd
 <<= 33;

92 
Sìd
 +
UniqueId
;

95 
m_TickîT≠e
.
	`SëRNGSìd
–
Sìd
 );

96 
m_DrivîMEESëtögs
.
cur
.
TickîT≠eRNGSìd
 = 
Sìd
;

99 
Sìd
 |
	`UINT64_CONST
(0x0000000100000000);

100 
m_TødögFlo‹
.
	`SëRNGSìd
–
Sìd
 );

101 
m_DrivîMEESëtögs
.
cur
.
TødögFlo‹RNGSìd
 = 
Sìd
;

102 
	}
}

105 
	gCMEE
::
	$CMEE
–
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
& 
öputFûes
, 
UINT32
 
UniqueId
 )

106 : 
	`m_DrivîMEESëtögs
 ( 
UniqueId
, 0, 0, 0 )

107 , 
	`m_pSUT
–
pSUT
 )

108 , 
	`m_pLoggî
–
pLoggî
 )

109 , 
	`m_Pri˚Bﬂrd
–
TødögTimeSoF¨
, &
m_Ba£Time
, &
m_CuºítTime
, 
öputFûes
 )

110 , 
	`m_TickîT≠e
–
pSUT
, &
m_Pri˚Bﬂrd
, &
m_Ba£Time
, &
m_CuºítTime
, 
öputFûes
 )

111 , 
	`m_TødögFlo‹
–
pSUT
, &
m_Pri˚Bﬂrd
, &
m_TickîT≠e
, &
m_Ba£Time
, &
m_CuºítTime
 )

112 , 
	$m_MEELock
()

114 
m_pLoggî
->
	`SídToLoggî
("MEE object constructed using c'tor 1 (valid forÖublication: YES).");

116 
	`AutoSëRNGSìds
–
UniqueId
 );

118 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîMEESëtögs
);

119 
	}
}

122 
	gCMEE
::
	$CMEE
–
INT32
 
TødögTimeSoF¨
, 
CMEESUTI¡îÁ˚
 *
pSUT
, 
CBa£Loggî
 *
pLoggî
, c⁄° 
CI≈utFûes
& 
öputFûes
, 
UINT32
 
UniqueId
, 
RNGSEED
 
TickîT≠eRNGSìd
, RNGSEED 
TødögFlo‹RNGSìd
 )

123 : 
	`m_DrivîMEESëtögs
 ( 
UniqueId
, 0, 
TickîT≠eRNGSìd
, 
TødögFlo‹RNGSìd
 )

124 , 
	`m_pSUT
–
pSUT
 )

125 , 
	`m_pLoggî
–
pLoggî
 )

126 , 
	`m_Pri˚Bﬂrd
–
TødögTimeSoF¨
, &
m_Ba£Time
, &
m_CuºítTime
, 
öputFûes
 )

127 , 
	`m_TickîT≠e
–
pSUT
, &
m_Pri˚Bﬂrd
, &
m_Ba£Time
, &
m_CuºítTime
, 
TickîT≠eRNGSìd
, 
öputFûes
 )

128 , 
	`m_TødögFlo‹
–
pSUT
, &
m_Pri˚Bﬂrd
, &
m_TickîT≠e
, &
m_Ba£Time
, &
m_CuºítTime
, 
TødögFlo‹RNGSìd
 )

129 , 
	$m_MEELock
()

131 
m_pLoggî
->
	`SídToLoggî
("MEE object constructed using c'tor 2 (valid forÖublication: NO).");

132 
m_pLoggî
->
	`SídToLoggî
(
m_DrivîMEESëtögs
);

133 
	}
}

135 
	gCMEE
::~
	$CMEE
( )

137 
m_pLoggî
->
	`SídToLoggî
("MEE object destroyed.");

138 
	}
}

140 
RNGSEED
 
	gCMEE
::
	$GëTickîT≠eRNGSìd
( )

142 –
m_TickîT≠e
.
	`GëRNGSìd
() );

143 
	}
}

145 
RNGSEED
 
	gCMEE
::
	$GëTødögFlo‹RNGSìd
( )

147 –
m_TødögFlo‹
.
	`GëRNGSìd
() );

148 
	}
}

150 
	gCMEE
::
	$SëBa£Time
( )

152 
m_MEELock
.
	`lock
();

153 
m_Ba£Time
.
	`SëToCuºít
( );

154 
m_MEELock
.
	`u∆ock
();

155 
	}
}

157 
boﬁ
 
	gCMEE
::
	$DißbÀTickîT≠e
( )

159 
boﬁ
 
Resu…
;

160 
m_MEELock
.
	`lock
();

161 
Resu…
 = 
m_TickîT≠e
.
	`DißbÀTickî
();

162 
m_MEELock
.
	`u∆ock
();

163 –
Resu…
 );

164 
	}
}

166 
boﬁ
 
	gCMEE
::
	$E«bÀTickîT≠e
( )

168 
boﬁ
 
Resu…
;

169 
m_MEELock
.
	`lock
();

170 
Resu…
 = 
m_TickîT≠e
.
	`E«bÀTickî
();

171 
m_MEELock
.
	`u∆ock
();

172 –
Resu…
 );

173 
	}
}

175 
INT32
 
	gCMEE
::
	$Gíî©eTødeResu…
( )

177 
INT32
 
NextTime
;

179 
m_MEELock
.
	`lock
();

180 
m_CuºítTime
.
	`SëToCuºít
( );

181 
NextTime
 = 
m_TødögFlo‹
.
	`Gíî©eTødeResu…
( );

182 
m_MEELock
.
	`u∆ock
();

183 –
NextTime
 );

184 
	}
}

186 
INT32
 
	gCMEE
::
	$SubmôTødeReque°
–
PTødeReque°
 
pTødeReque°
 )

188 
INT32
 
NextTime
;

190 
m_MEELock
.
	`lock
();

191 
m_CuºítTime
.
	`SëToCuºít
( );

192 
NextTime
 = 
m_TødögFlo‹
.
	`SubmôTødeReque°
–
pTødeReque°
 );

193 
m_MEELock
.
	`u∆ock
();

194 –
NextTime
 );

195 
	}
}

	@src/workload/tpce/egen/MEEPriceBoard.cpp

42 
	~"w‹klﬂd/ç˚/egí/MEEPri˚Bﬂrd.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 
	gCMEEPri˚Bﬂrd
::
	$CMEEPri˚Bﬂrd
–
INT32
 
TødögTimeSoF¨
,

47 
CD©eTime
* 
pBa£Time
,

48 
CD©eTime
* 
pCuºítTime
,

49 c⁄° 
CI≈utFûes
& 
öputFûes


51 : 
	`m_fMónInTheM⁄eySubmissi⁄Dñay
( 1.0 )

52 , 
	`m_Securôy
()

53 , 
	`m_pSecurôyFûe
–
öputFûes
.
Securôõs
 )

54 , 
	$m_iNumbîOfSecurôõs
( 0 )

68 
m_iNumbîOfSecurôõs
 = 
m_pSecurôyFûe
->
	`GëA˘iveSecurôyCou¡
();

69 
m_Securôy
.
	`Inô
–
TødögTimeSoF¨
, 
pBa£Time
, 
pCuºítTime
, 
m_fMónInTheM⁄eySubmissi⁄Dñay
 );

70 
m_pSecurôyFûe
->
	`LﬂdSymbﬁToIdM≠
();

71 
	}
}

73 
	gCMEEPri˚Bﬂrd
::~
	$CMEEPri˚Bﬂrd
()

75 
	}
}

77 
CMEEPri˚Bﬂrd
::
	$GëSymbﬁ
–
TIdít
 
SecurôyIndex
,

78 * 
szOuçut
,

79 
size_t
 
iOuçutLí
)

81 –
m_pSecurôyFûe
->
	`Cª©eSymbﬁ
–
SecurôyIndex
, 
szOuçut
, 
iOuçutLí
 ) );

82 
	}
}

84 
CM⁄ey
 
	gCMEEPri˚Bﬂrd
::
	$GëMöPri˚
()

86 –
m_Securôy
.
	`GëMöPri˚
( ));

87 
	}
}

89 
CM⁄ey
 
	gCMEEPri˚Bﬂrd
::
	$GëMaxPri˚
()

91 –
m_Securôy
.
	`GëMaxPri˚
( ));

92 
	}
}

94 
CM⁄ey
 
	gCMEEPri˚Bﬂrd
::
	$GëCuºítPri˚
–
TIdít
 
SecurôyIndex
 )

96 –
m_Securôy
.
	`GëCuºítPri˚
–
SecurôyIndex
 ));

97 
	}
}

99 
CM⁄ey
 
	gCMEEPri˚Bﬂrd
::
	$GëCuºítPri˚
–* 
pSecurôySymbﬁ
 )

101 –
m_Securôy
.
	`GëCuºítPri˚
–
m_pSecurôyFûe
->
	`GëIndex
–
pSecurôySymbﬁ
 )));

102 
	}
}

104 
CM⁄ey
 
	gCMEEPri˚Bﬂrd
::
	$CÆcuœãPri˚
–* 
pSecurôySymbﬁ
, 
fTime
 )

106 –
m_Securôy
.
	`CÆcuœãPri˚
–
m_pSecurôyFûe
->
	`GëIndex
–
pSecurôySymbﬁ
 ), 
fTime
 ));

107 
	}
}

109 
	gCMEEPri˚Bﬂrd
::
	$GëSubmissi⁄Time
(

110 * 
pSecurôySymbﬁ
,

111 
fPídögTime
,

112 
CM⁄ey
 
fLimôPri˚
,

113 
eTødeTy≥ID
 
TødeTy≥


116 –
m_Securôy
.
	`GëSubmissi⁄Time
–
m_pSecurôyFûe
->
	`GëIndex
–
pSecurôySymbﬁ
 ), 
fPídögTime
,

117 
fLimôPri˚
, 
TødeTy≥
 ));

118 
	}
}

120 
	gCMEEPri˚Bﬂrd
::
	$GëSubmissi⁄Time
(

121 
TIdít
 
SecurôyIndex
,

122 
fPídögTime
,

123 
CM⁄ey
 
fLimôPri˚
,

124 
eTødeTy≥ID
 
TødeTy≥


127 –
m_Securôy
.
	`GëSubmissi⁄Time
–
SecurôyIndex
, 
fPídögTime
,

128 
fLimôPri˚
, 
TødeTy≥
 ));

129 
	}
}

131 
	gCMEEPri˚Bﬂrd
::
	$GëCom∂ëi⁄Time
(

132 
TIdít
 
SecurôyIndex
,

133 
fSubmissi⁄Time
,

134 
CM⁄ey
* 
pCom∂ëi⁄Pri˚


137 –
m_Securôy
.
	`GëCom∂ëi⁄Time
–
SecurôyIndex
, 
fSubmissi⁄Time
,

138 
pCom∂ëi⁄Pri˚
 ));

139 
	}
}

	@src/workload/tpce/egen/MEESecurity.cpp

42 
	~<cm©h
>

43 
	~"w‹klﬂd/ç˚/egí/MEESecurôy.h
"

45 
usög
 
«me•a˚
 
	gTPCE
;

50 c⁄° 
	giSecPri˚Pîiod
 = 900;

54 c⁄° 
	gfMónCom∂ëi⁄TimeDñay
 = 1.0;

59 c⁄° 
	gfCom∂ëi⁄SUTDñay
 = 1.0;

71 
	gCMEESecurôy
::
	$CMEESecurôy
()

72 : 
	`m_∫d
(
RNGSìdBa£MEESecurôy
)

73 , 
	`m_fR™geLow
(
fMöSecPri˚
)

74 , 
	`m_fR™geHigh
(
fMaxSecPri˚
)

75 , 
	`m_fR™ge
(
fMaxSecPri˚
 - 
fMöSecPri˚
)

76 , 
	`m_iPîiod
(
iSecPri˚Pîiod
)

77 , 
	`m_TødögTimeSoF¨
( 0 )

78 , 
	`m_pBa£Time
–
NULL
 )

79 , 
	$m_pCuºítTime
–
NULL
 )

81 
	}
}

98 
	gCMEESecurôy
::
	$Inô
(

99 
INT32
 
TødögTimeSoF¨
,

100 
CD©eTime
 *
pBa£Time
,

101 
CD©eTime
 *
pCuºítTime
,

110 
fMónInTheM⁄eySubmissi⁄Dñay


113 
m_TødögTimeSoF¨
 = 
TødögTimeSoF¨
;

114 
m_pBa£Time
 = 
pBa£Time
;

115 
m_pCuºítTime
 = 
pCuºítTime
;

117 
m_fMónInTheM⁄eySubmissi⁄Dñay
 = 
fMónInTheM⁄eySubmissi⁄Dñay
;

122 
m_∫d
.
	`SëSìd
(
RNGSìdBa£MEESecurôy
);

123 
	}
}

138 
ölöe
 
	gCMEESecurôy
::
	$InôülTime
–
TIdít
 
SecurôyIndex
 )

140 
INT32
 
MsPîPîiod
 = 
iSecPri˚Pîiod
 * 
MsPîSec⁄d
;

141 
TIdít
 
SecurôyFa˘‹
 = 
SecurôyIndex
 * 556237 + 253791;

142 
TIdít
 
TødögFa˘‹
 = (TIdít)
m_TødögTimeSoF¨
 * 
MsPîSec⁄d
;

144  ( ((
TødögFa˘‹
 + 
SecurôyFa˘‹
Ë% 
MsPîPîiod
Ë/ 
MsPîSec⁄dDivis‹
 );

145 
	}
}

157 
ölöe
 
	gCMEESecurôy
::
	$NegExp
(
fMón
)

159  
	`RoundToNóª°N£c
(
m_∫d
.
	`RndDoubÀNegExp
(
fMón
));

160 
	}
}

171 
CM⁄ey
 
	gCMEESecurôy
::
	$GëCuºítPri˚
–
TIdít
 
SecurôyIndex
 )

173 –
	`CÆcuœãPri˚
–
SecurôyIndex
, *
m_pCuºítTime
 - *
m_pBa£Time
 ));

174 
	}
}

185 
CM⁄ey
 
	gCMEESecurôy
::
	$GëMöPri˚
( )

187 –
m_fR™geLow
 );

188 
	}
}

199 
CM⁄ey
 
	gCMEESecurôy
::
	$GëMaxPri˚
( )

201 –
m_fR™geHigh
 );

202 
	}
}

215 
CM⁄ey
 
	gCMEESecurôy
::
	$CÆcuœãPri˚
–
TIdít
 
SecurôyIndex
,

216 
fTime


219 
fPîiodTime
 = (
fTime
 + 
	`InôülTime
–
SecurôyIndex
 )Ë/ ()
m_iPîiod
;

220 
fTimeWôhöPîiod
 = (
fPîiodTime
 - ()fPîiodTimeË* ()
m_iPîiod
;

222 
fPri˚Posôi⁄
;

223 
CM⁄ey
 
Pri˚Cíts
;

225 i‡(
fTimeWôhöPîiod
 < 
m_iPîiod
 / 2)

227 
fPri˚Posôi⁄
 = 
fTimeWôhöPîiod
 / (
m_iPîiod
 / 2);

231 
fPri˚Posôi⁄
 = (
m_iPîiod
 - 
fTimeWôhöPîiod
) / (m_iPeriod / 2);

234 
Pri˚Cíts
 = 
m_fR™geLow
 + 
m_fR™ge
 * 
fPri˚Posôi⁄
;

236  
Pri˚Cíts
;

237 
	}
}

251 
	gCMEESecurôy
::
	$CÆcuœãTime
(

252 
CM⁄ey
 
fSèπPri˚
,

253 
CM⁄ey
 
fEndPri˚
,

254 
iSèπDúe˘i⁄
)

256 
iHÆfPîiod
 = 
m_iPîiod
 / 2;

260 
CM⁄ey
 
fDi°™˚
;

265 
fS≥ed
 = 
iHÆfPîiod
 / 
m_fR™ge
.
	`DﬁœrAmou¡
();

267 i‡(
fEndPri˚
 > 
fSèπPri˚
)

269 i‡(
iSèπDúe˘i⁄
 > 0)

271 
fDi°™˚
 = 
fEndPri˚
 - 
fSèπPri˚
;

275 
fDi°™˚
 = (
fSèπPri˚
 - 
m_fR™geLow
Ë+ (
fEndPri˚
 - m_fRangeLow);

280 i‡(
iSèπDúe˘i⁄
 > 0)

282 
fDi°™˚
 = (
m_fR™geHigh
 - 
fSèπPri˚
Ë+ (m_fR™geHigh - 
fEndPri˚
);

286 
fDi°™˚
 = 
fSèπPri˚
 - 
fEndPri˚
;

290  
fDi°™˚
.
	`DﬁœrAmou¡
(Ë* 
fS≥ed
;

291 
	}
}

305 
	gCMEESecurôy
::
	$GëSubmissi⁄Time
–
TIdít
 
SecurôyIndex
,

306 
fPídögTime
,

307 
CM⁄ey
 
fLimôPri˚
,

308 
eTødeTy≥ID
 
TødeTy≥


311 
CM⁄ey
 
fPri˚AtPídögTime
 = 
	`CÆcuœãPri˚
–
SecurôyIndex
, 
fPídögTime
 );

313 
iDúe˘i⁄AtPídögTime
;

315 
fSubmissi⁄TimeFromPídög
;

321 i‡–((
TødeTy≥
 =
eLimôBuy
 || TødeTy≥ =
eSt›Loss
) &&

322 
fPri˚AtPídögTime
 <
fLimôPri˚
)

324 ((
TødeTy≥
 =
eLimôSñl
 ) &&

325 
fPri˚AtPídögTime
 >
fLimôPri˚
))

329 
fSubmissi⁄TimeFromPídög
 = 
m_∫d
.
	`RndDoubÀIn¸R™ge
(0.5 * 
m_fMónInTheM⁄eySubmissi⁄Dñay
,

330 1.5 * 
m_fMónInTheM⁄eySubmissi⁄Dñay
,

335 i‡(()(
fPídögTime
 + 
	`InôülTime
–
SecurôyIndex
 )Ë% 
m_iPîiod
 < m_iPeriod / 2)

339 
iDúe˘i⁄AtPídögTime
 = 1;

345 
iDúe˘i⁄AtPídögTime
 = -1;

348 
fSubmissi⁄TimeFromPídög
 = 
	`CÆcuœãTime
–
fPri˚AtPídögTime
,

349 
fLimôPri˚
,

350 
iDúe˘i⁄AtPídögTime
);

353  
fPídögTime
 + 
fSubmissi⁄TimeFromPídög
;

354 
	}
}

377 
	gCMEESecurôy
::
	$GëCom∂ëi⁄Time
–
TIdít
 
SecurôyIndex
,

378 
fSubmissi⁄Time
,

379 
CM⁄ey
* 
pCom∂ëi⁄Pri˚


382 
fCom∂ëi⁄Dñay
 = 
	`NegExp
(
fMónCom∂ëi⁄TimeDñay
);

386 i‡(
fCom∂ëi⁄Dñay
 > 5.0)

388 
fCom∂ëi⁄Dñay
 = 5.0;

391 i‡(
pCom∂ëi⁄Pri˚
 !
NULL
)

393 *
pCom∂ëi⁄Pri˚
 = 
	`CÆcuœãPri˚
–
SecurôyIndex
, 
fSubmissi⁄Time
 + 
fCom∂ëi⁄Dñay
 );

396  
fSubmissi⁄Time
 + 
fCom∂ëi⁄Dñay
 + 
fCom∂ëi⁄SUTDñay
;

397 
	}
}

	@src/workload/tpce/egen/MEETickerTape.cpp

42 
	~"w‹klﬂd/ç˚/egí/MEETickîT≠e.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 c⁄° 
	gCMEETickîT≠e
::
LIMIT_TRIGGER_TRADE_QTY
 = 375;

47 c⁄° 
	gCMEETickîT≠e
::
RANDOM_TRADE_QTY_1
 = 325;

48 c⁄° 
	gCMEETickîT≠e
::
RANDOM_TRADE_QTY_2
 = 425;

50 
RNGSEED
 
	gCMEETickîT≠e
::
	$GëRNGSìd
( )

52 –
m_∫d
.
	`GëSìd
() );

53 
	}
}

55 
	gCMEETickîT≠e
::
	$SëRNGSìd
–
RNGSEED
 
RNGSìd
 )

57 
m_∫d
.
	`SëSìd
–
RNGSìd
 );

58 
	}
}

60 
	gCMEETickîT≠e
::
	$Inôülize
( )

65 
	`°∫˝y
(
m_TxnI≈ut
.
SètusAndTødeTy≥
.
°©us_submôãd
,

66 (
m_pSètusTy≥
->
	`GëRec‹d
(
eSubmôãd
))->
ST_ID
,

67 (
m_TxnI≈ut
.
SètusAndTødeTy≥
.
°©us_submôãd
));

69 
	`°∫˝y
(
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_limô_buy
,

70 (
m_pTødeTy≥
->
	`GëRec‹d
(
eLimôBuy
))->
TT_ID
,

71 (
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_limô_buy
));

73 
	`°∫˝y
(
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_limô_£Œ
,

74 (
m_pTødeTy≥
->
	`GëRec‹d
(
eLimôSñl
))->
TT_ID
,

75 (
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_limô_£Œ
));

77 
	`°∫˝y
(
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_°›_loss
,

78 (
m_pTødeTy≥
->
	`GëRec‹d
(
eSt›Loss
))->
TT_ID
,

79 (
m_TxnI≈ut
.
SètusAndTødeTy≥
.
ty≥_°›_loss
));

80 
	}
}

83 
	gCMEETickîT≠e
::
	$CMEETickîT≠e
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, c⁄° 
CI≈utFûes
 &
öputFûes
 )

84 : 
	`m_pSUT
–
pSUT
 )

85 , 
	`m_pPri˚Bﬂrd
–
pPri˚Bﬂrd
 )

86 , 
	`m_B©chIndex
( 0 )

87 , 
	`m_B©chDu∂iˇãs
( 0 )

88 , 
	`m_∫d
–
RNGSìdBa£MEETickîT≠e
 )

89 , 
	`m_E«bÀd
–
åue
 )

90 , 
	`m_pBa£Time
–
pBa£Time
 )

91 , 
	`m_pCuºítTime
–
pCuºítTime
 )

92 , 
	`m_pSètusTy≥
–
öputFûes
.
SètusTy≥
 )

93 , 
	$m_pTødeTy≥
–
öputFûes
.
TødeTy≥
 )

95 
	`Inôülize
();

96 
	}
}

99 
	gCMEETickîT≠e
::
	$CMEETickîT≠e
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, 
RNGSEED
 
RNGSìd
, c⁄° 
CI≈utFûes
 &
öputFûes
 )

100 : 
	`m_pSUT
–
pSUT
 )

101 , 
	`m_pPri˚Bﬂrd
–
pPri˚Bﬂrd
 )

102 , 
	`m_B©chIndex
( 0 )

103 , 
	`m_B©chDu∂iˇãs
( 0 )

104 , 
	`m_∫d
–
RNGSìd
 )

105 , 
	`m_E«bÀd
–
åue
 )

106 , 
	`m_pBa£Time
–
pBa£Time
 )

107 , 
	`m_pCuºítTime
–
pCuºítTime
 )

108 , 
	`m_pSètusTy≥
–
öputFûes
.
SètusTy≥
 )

109 , 
	$m_pTødeTy≥
–
öputFûes
.
TødeTy≥
 )

111 
	`Inôülize
();

112 
	}
}

114 
	gCMEETickîT≠e
::~
	$CMEETickîT≠e
( )

116 
	}
}

118 
boﬁ
 
CMEETickîT≠e
::
	$DißbÀTickî
( )

120 
m_E«bÀd
 = 
Ál£
;

121 –! 
m_E«bÀd
 );

122 
	}
}

124 
boﬁ
 
	gCMEETickîT≠e
::
	$E«bÀTickî
( )

126 
m_E«bÀd
 = 
åue
;

127 –
m_E«bÀd
 );

128 
	}
}

130 
	gCMEETickîT≠e
::
	$AddE¡ry
–
PTickîE¡ry
 
pTickîE¡ry
 )

132 if–
m_E«bÀd
 )

134 
	`AddToB©ch
–
pTickîE¡ry
 );

135 
	`AddAπificülE¡rõs
( );

137 
	}
}

139 
	gCMEETickîT≠e
::
	$Po°LimôOrdî
–
PTødeReque°
 
pTødeReque°
 )

141 
eTødeTy≥ID
 
eTødeTy≥
;

142 
CuºítPri˚
 = -1.0;

143 
PTickîE¡ry
 
pNewE¡ry
 = 
√w
 
TTickîE¡ry
;

145 
eTødeTy≥
 = 
	`C⁄vîtTødeTy≥IdToEnum
–
pTødeReque°
->
åade_ty≥_id
 );

147 
pNewE¡ry
->
¥i˚_quŸe
 = 
pTødeReque°
->price_quote;

148 
	`°∫˝y
–
pNewE¡ry
->
symbﬁ
, 
pTødeReque°
->symbol, (ÖNewEntry->symbol ));

149 
pNewE¡ry
->
åade_qty
 = 
LIMIT_TRIGGER_TRADE_QTY
;

151 
CuºítPri˚
 = 
m_pPri˚Bﬂrd
->
	`GëCuºítPri˚
–
pTødeReque°
->
symbﬁ
 ).
	`DﬁœrAmou¡
();

153 if((–
eTødeTy≥
 =
eLimôBuy
 ||ÉTødeTy≥ =
eSt›Loss
 ) &&

154 
CuºítPri˚
 <
pTødeReque°
->
¥i˚_quŸe
 )

156 (–
eTødeTy≥
 =
eLimôSñl
 ) &&

157 
CuºítPri˚
 >
pTødeReque°
->
¥i˚_quŸe
 ))

160 
pNewE¡ry
->
¥i˚_quŸe
 = 
CuºítPri˚
;

162 
m_LimôOrdîTimîs
.
	`Pro˚ssExpúedTimîs
();

164 
m_InTheM⁄eyLimôOrdîQ
.
	`push
–
pNewE¡ry
 );

169 
pNewE¡ry
->
¥i˚_quŸe
 = 
pTødeReque°
->price_quote;

170 
TriggîTimeDñay
;

171 
fCuºítTime
 = *
m_pCuºítTime
 - *
m_pBa£Time
;

176 
TriggîTimeDñay
 = 
m_pPri˚Bﬂrd
->
	`GëSubmissi⁄Time
(
pNewE¡ry
->
symbﬁ
,

177 
fCuºítTime
,

178 
pNewE¡ry
->
¥i˚_quŸe
,

179 
eTødeTy≥
)

180 - 
fCuºítTime
;

181 
m_LimôOrdîTimîs
.
	`SèπTimî
–
TriggîTimeDñay
,

182 
this
, &
CMEETickîT≠e
::
AddLimôTriggî
, 
pNewE¡ry
 );

184 
	}
}

186 
	gCMEETickîT≠e
::
	$AddLimôTriggî
–
PTickîE¡ry
 
pTickîE¡ry
 )

188 
m_InTheM⁄eyLimôOrdîQ
.
	`push
–
pTickîE¡ry
 );

189 
	}
}

191 
	gCMEETickîT≠e
::
	$AddAπificülE¡rõs
( )

193 
TIdít
 
SecurôyIndex
;

194 
TTickîE¡ry
 
TickîE¡ry
;

195 
TŸÆE¡ryCou¡
 = 0;

196 c⁄° 
PaddögLimô
 = (
max_„ed_Àn
 / 10) - 1;

197 c⁄° 
PaddögLimôF‹AŒ
 = 
PaddögLimô
;

198 c⁄° 
PaddögLimôF‹Triggîs
 = 
PaddögLimô
;

200  
TŸÆE¡ryCou¡
 < 
PaddögLimôF‹Triggîs
 && !
m_InTheM⁄eyLimôOrdîQ
.
	`em±y
() )

202 
PTickîE¡ry
 
pE¡ry
 = 
m_InTheM⁄eyLimôOrdîQ
.
	`‰⁄t
();

203 
	`AddToB©ch
–
pE¡ry
 );

204 
dñëe
 
pE¡ry
;

205 
m_InTheM⁄eyLimôOrdîQ
.
	`p›
();

206 
TŸÆE¡ryCou¡
++;

209  
TŸÆE¡ryCou¡
 < 
PaddögLimôF‹AŒ
 )

211 
TickîE¡ry
.
åade_qty
 = ( 
m_∫d
.
	`RndPî˚¡
–50 )Ë? 
RANDOM_TRADE_QTY_1
 : 
RANDOM_TRADE_QTY_2
;

213 
SecurôyIndex
 = 
m_∫d
.
	`RndI¡64R™ge
–0, 
m_pPri˚Bﬂrd
->
m_iNumbîOfSecurôõs
 - 1 );

214 
TickîE¡ry
.
¥i˚_quŸe
 = (
m_pPri˚Bﬂrd
->
	`GëCuºítPri˚
–
SecurôyIndex
 )).
	`DﬁœrAmou¡
();

215 
m_pPri˚Bﬂrd
->
	`GëSymbﬁ
–
SecurôyIndex
, 
TickîE¡ry
.
symbﬁ
, 
°©ic_ˇ°
<
INT32
>((TickerEntry.symbol)) );

217 
	`AddToB©ch
–&
TickîE¡ry
 );

218 
TŸÆE¡ryCou¡
++;

220 
	}
}

222 
	gCMEETickîT≠e
::
	$AddToB©ch
–
PTickîE¡ry
 
pTickîE¡ry
 )

225 
i
=0; i<
m_B©chIndex
; i++)

227 i‡(
	`°∫cmp
(
pTickîE¡ry
->
symbﬁ
, 
m_TxnI≈ut
.
E¡rõs
[
i
].symbﬁ, 
cSYMBOL_Àn
) == 0)

229 
m_B©chDu∂iˇãs
++;

235 
m_TxnI≈ut
.
E¡rõs
[
m_B©chIndex
++] = *
pTickîE¡ry
;

238 if–
max_„ed_Àn
 =
m_B©chIndex
 )

240 
m_TxnI≈ut
.
unique_symbﬁs
 = (
max_„ed_Àn
 - 
m_B©chDu∂iˇãs
);

241 
m_pSUT
->
	`M¨këFìd
–&
m_TxnI≈ut
 );

242 
m_B©chIndex
 = 0;

243 
m_B©chDu∂iˇãs
 = 0;

245 
	}
}

247 
eTødeTy≥ID
 
	gCMEETickîT≠e
::
	$C⁄vîtTødeTy≥IdToEnum
–* 
pTødeTy≥
 )

250  
pTødeTy≥
[0] )

253  
pTødeTy≥
[1] )

256  
pTødeTy≥
[2] )

259 –
eLimôBuy
 );

261 –
eLimôSñl
 );

267  
pTødeTy≥
[2] )

270 –
eM¨këBuy
 );

272 –
eM¨këSñl
 );

278  
pTødeTy≥
[2] )

281 –
eSt›Loss
 );

295 
	`as£π
(
Ál£
);

297  
eM¨këBuy
;

298 
	}
}

	@src/workload/tpce/egen/MEETradingFloor.cpp

42 
	~"w‹klﬂd/ç˚/egí/MEETødögFlo‹.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 
RNGSEED
 
	gCMEETødögFlo‹
::
	$GëRNGSìd
( )

48 –
m_∫d
.
	`GëSìd
() );

49 
	}
}

51 
	gCMEETødögFlo‹
::
	$SëRNGSìd
–
RNGSEED
 
RNGSìd
 )

53 
m_∫d
.
	`SëSìd
–
RNGSìd
 );

54 
	}
}

57 
	gCMEETødögFlo‹
::
	$CMEETødögFlo‹
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CMEETickîT≠e
* 
pTickîT≠e
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
 )

58 : 
	`m_pSUT
–
pSUT
 )

59 , 
	`m_pPri˚Bﬂrd
–
pPri˚Bﬂrd
 )

60 , 
	`m_pTickîT≠e
–
pTickîT≠e
 )

61 , 
	`m_pBa£Time
–
pBa£Time
 )

62 , 
	`m_pCuºítTime
–
pCuºítTime
 )

63 , 
	`m_∫d
–
RNGSìdBa£MEETødögFlo‹
 )

64 , 
	$m_OrdîPro˚ssögDñayMón
( 1.0 )

66 
	}
}

69 
	gCMEETødögFlo‹
::
	$CMEETødögFlo‹
–
CMEESUTI¡îÁ˚
* 
pSUT
, 
CMEEPri˚Bﬂrd
* 
pPri˚Bﬂrd
, 
CMEETickîT≠e
* 
pTickîT≠e
, 
CD©eTime
* 
pBa£Time
, CD©eTime* 
pCuºítTime
, 
RNGSEED
 
RNGSìd
 )

70 : 
	`m_pSUT
–
pSUT
 )

71 , 
	`m_pPri˚Bﬂrd
–
pPri˚Bﬂrd
 )

72 , 
	`m_pTickîT≠e
–
pTickîT≠e
 )

73 , 
	`m_pBa£Time
–
pBa£Time
 )

74 , 
	`m_pCuºítTime
–
pCuºítTime
 )

75 , 
	`m_∫d
–
RNGSìd
 )

76 , 
	$m_OrdîPro˚ssögDñayMón
( 1.0 )

78 
	}
}

80 
	gCMEETødögFlo‹
::~
	$CMEETødögFlo‹
( )

82 
	}
}

84 
ölöe
 
CMEETødögFlo‹
::
	$GíPro˚ssögDñay
–
Món
 )

86 
Resu…
 = 
	`RoundToNóª°N£c
(
m_∫d
.
	`RndDoubÀNegExp
(
Món
));

88 if–
Resu…
 > 
m_MaxOrdîPro˚ssögDñay
 )

90 –
m_MaxOrdîPro˚ssögDñay
 );

94 –
Resu…
 );

96 
	}
}

98 
INT32
 
	gCMEETødögFlo‹
::
	$SubmôTødeReque°
–
PTødeReque°
 
pTødeReque°
 )

100  
pTødeReque°
->
eA˘i⁄
 )

102 
eMEEPro˚ssOrdî
:

106 
PTødeReque°
 
pNewOrdî
 = 
√w
 
TTødeReque°
;

107 *
pNewOrdî
 = *
pTødeReque°
;

108 –
m_OrdîTimîs
.
	`SèπTimî
–
	`GíPro˚ssögDñay
–
m_OrdîPro˚ssögDñayMón
 ), 
this
, &
CMEETødögFlo‹
::
SídTødeResu…
, 
pNewOrdî
 ));

110 
eMEESëLimôOrdîTriggî
:

112 
m_pTickîT≠e
->
	`Po°LimôOrdî
–
pTødeReque°
 );

113 –
m_OrdîTimîs
.
	`Pro˚ssExpúedTimîs
() );

116 –
m_OrdîTimîs
.
	`Pro˚ssExpúedTimîs
() );

118 
	}
}

120 
INT32
 
	gCMEETødögFlo‹
::
	$Gíî©eTødeResu…
( )

122 –
m_OrdîTimîs
.
	`Pro˚ssExpúedTimîs
() );

123 
	}
}

126 
	gCMEETødögFlo‹
::
	$SídTødeResu…
–
PTødeReque°
 
pTødeReque°
 )

128 
eTødeTy≥ID
 
eTødeTy≥
;

129 
TTødeResu…TxnI≈ut
 
TxnI≈ut
;

130 
TTickîE¡ry
 
TickîE¡ry
;

131 
CuºítPri˚
 = -1.0;

133 
eTødeTy≥
 = 
m_pTickîT≠e
->
	`C⁄vîtTødeTy≥IdToEnum
–
pTødeReque°
->
åade_ty≥_id
 );

134 
CuºítPri˚
 = 
m_pPri˚Bﬂrd
->
	`GëCuºítPri˚
–
pTødeReque°
->
symbﬁ
 ).
	`DﬁœrAmou¡
();

137 
TxnI≈ut
.
åade_id
 = 
pTødeReque°
->trade_id;

140 if(–
eTødeTy≥
 =
eLimôBuy
 && 
pTødeReque°
->
¥i˚_quŸe
 < 
CuºítPri˚
 )||–eTødeTy≥ =
eLimôSñl
 &&ÖTradeRequest->price_quote > CurrentPrice ))

142 
TxnI≈ut
.
åade_¥i˚
 = 
pTødeReque°
->
¥i˚_quŸe
;

146 
TxnI≈ut
.
åade_¥i˚
 = 
CuºítPri˚
;

149 
m_pSUT
->
	`TødeResu…
–&
TxnI≈ut
 );

152 
	`°∫˝y
–
TickîE¡ry
.
symbﬁ
, 
pTødeReque°
->symbol, ( TickerEntry.symbol ));

153 
TickîE¡ry
.
åade_qty
 = 
pTødeReque°
->trade_qty;

168 
TickîE¡ry
.
¥i˚_quŸe
 = 
CuºítPri˚
;

171 
m_pTickîT≠e
->
	`AddE¡ry
–& 
TickîE¡ry
 );

173 
dñëe
 
pTødeReque°
;

174 
	}
}

	@src/workload/tpce/egen/Money.cpp

43 
	~"w‹klﬂd/ç˚/egí/EGíUtûôõs_°dafx.h
"

45 
«me•a˚
 
	gTPCE


50 
CM⁄ey
 
	g›î©‹
 *(
	gl_i
, CM⁄ey 
	gr_m
)

52 
CM⁄ey
 
	gªt
;

54 
	gªt
 = 
r_m
 * 
l_i
;

56  
	gªt
;

61 
CM⁄ey
 
	g›î©‹
 *(
	gl_f
, CM⁄ey 
	gr_m
)

63 
CM⁄ey
 
	gªt
;

65 
	gªt
 = 
r_m
 * 
l_f
;

67  
	gªt
;

72 
	g›î©‹
 /(
	gl_f
, 
CM⁄ey
 
	gr_m
)

74  
	gl_f
 / 
	gr_m
.
DﬁœrAmou¡
();

	@src/workload/tpce/egen/Person.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

42 c⁄° 
	giPî˚¡GídîIsMÆe
 = 49;

47 
	gCPîs⁄
::
	$CPîs⁄
(
CI≈utFûes
 
öputFûes


48 ,
TIdít
 
iSèπFromCu°omî


49 ,
boﬁ
 
bCacheE«bÀd


51 : 
	`m_La°Names
(
öputFûes
.
La°Names
)

52 , 
	`m_MÆeFú°Names
(
öputFûes
.
MÆeFú°Names
)

53 , 
	`m_FemÆeFú°Names
(
öputFûes
.
FemÆeFú°Names
)

54 , 
	$m_bCacheE«bÀd
(
bCacheE«bÀd
)

56 i‡(
m_bCacheE«bÀd
)

58 
m_iCacheSize
 = 
iDeÁu…LﬂdUnôSize
;

59 
m_iCacheOff£t
 = 
iTIdítShi·
 + 
iSèπFromCu°omî
;

60 
m_CacheLa°Name
 = 
√w
 * [
m_iCacheSize
];

61 
m_CacheFú°Name
 = 
√w
 * [
m_iCacheSize
];

62 
i
=0; i<
m_iCacheSize
; i++)

64 
m_CacheLa°Name
[
i
] = 
NULL
;

65 
m_CacheFú°Name
[
i
] = 
NULL
;

68 
	}
}

73 
	gCPîs⁄
::~
	$CPîs⁄
()

75 i‡(
m_bCacheE«bÀd
)

77 
dñëe
[] 
m_CacheLa°Name
;

78 
dñëe
[] 
m_CacheFú°Name
;

80 
	}
}

85 
	gCPîs⁄
::
	$InôNextLﬂdUnô
(
TIdít
 
iCacheOff£tIn¸emít
)

87 i‡(
m_bCacheE«bÀd
)

89 
m_iCacheOff£t
 +
iCacheOff£tIn¸emít
;

90 
i
=0; i<
m_iCacheSize
; i++)

92 
m_CacheLa°Name
[
i
] = 
NULL
;

93 
m_CacheFú°Name
[
i
] = 
NULL
;

96 
	}
}

102 * 
	gCPîs⁄
::
	$GëLa°Name
(
TIdít
 
CID
)

104 *
La°Name
 = 
NULL
;

114 
TIdít
 
ödex
 = 
CID
 - 
m_iCacheOff£t
;

115 
boﬁ
 
bCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSize
);

116 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

118 
La°Name
 = 
m_CacheLa°Name
[
ödex
];

121 i‡(
La°Name
 =
NULL
)

123 
RNGSEED
 
OldSìd
;

124 
iThªshﬁd
;

126 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

128 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£La°Name
, (
RNGSEED
Ë
CID
 ));

131 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_La°Names
->
	`GëGª©e°Key
() - 1);

132 
La°Name
 = (
m_La°Names
->
	`GëRec‹d
(
iThªshﬁd
))->
LAST_NAME
;

134 
m_∫d
.
	`SëSìd
–
OldSìd
 );

136 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

138 
m_CacheLa°Name
[
ödex
] = 
La°Name
;

142  
La°Name
;

143 
	}
}

149 * 
	gCPîs⁄
::
	$GëFú°Name
(
TIdít
 
CID
)

151 *
Fú°Name
 = 
NULL
;

159 
TIdít
 
ödex
 = 
CID
 - 
m_iCacheOff£t
;

160 
boﬁ
 
bCheckCache
 = (
ödex
 >0 && index < 
m_iCacheSize
);

161 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

163 
Fú°Name
 = 
m_CacheFú°Name
[
ödex
];

166 i‡(
Fú°Name
 =
NULL
)

168 
RNGSEED
 
OldSìd
;

169 
iThªshﬁd
;

171 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

173 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£Fú°Name
, (
RNGSEED
Ë
CID
 ));

176 i‡(
	`IsMÆeGídî
(
CID
))

178 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_MÆeFú°Names
->
	`GëGª©e°Key
() - 1);

179 
Fú°Name
 = (
m_MÆeFú°Names
->
	`GëRec‹d
(
iThªshﬁd
))->
FIRST_NAME
;

183 
iThªshﬁd
 = 
m_∫d
.
	`RndI¡R™ge
(0, 
m_FemÆeFú°Names
->
	`GëGª©e°Key
() - 1);

184 
Fú°Name
 = (
m_FemÆeFú°Names
->
	`GëRec‹d
(
iThªshﬁd
))->
FIRST_NAME
;

186 
m_∫d
.
	`SëSìd
–
OldSìd
 );

188 i‡(
m_bCacheE«bÀd
 && 
bCheckCache
)

190 
m_CacheFú°Name
[
ödex
] = 
Fú°Name
;

193  
Fú°Name
;

194 
	}
}

198 
	gCPîs⁄
::
	$GëMiddÀName
(
TIdít
 
CID
)

200 
RNGSEED
 
OldSìd
;

201 
cMiddÀInôül
[2];

203 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

204 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£MiddÀInôül
,

205 (
RNGSEED
Ë
CID
 ));

206 
cMiddÀInôül
[1] = '\0';

207 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
–
cMiddÀInôül
, "a" );

208 
m_∫d
.
	`SëSìd
–
OldSìd
 );

209 –
cMiddÀInôül
[0] );

210 
	}
}

215 
	gCPîs⁄
::
	$GëGídî
(
TIdít
 
CID
)

217 
RNGSEED
 
OldSìd
;

218 
cGídî
;

220 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

221 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£Gídî
, (
RNGSEED
Ë
CID
 ));

224 i‡(
m_∫d
.
	`RndPî˚¡
–
iPî˚¡GídîIsMÆe
 ))

226 
cGídî
 = 'M';

230 
cGídî
 = 'F';

233 
m_∫d
.
	`SëSìd
–
OldSìd
 );

234 –
cGídî
 );

235 
	}
}

240 
boﬁ
 
	gCPîs⁄
::
	$IsMÆeGídî
(
TIdít
 
CID
)

242  
	`GëGídî
(
CID
)=='M';

243 
	}
}

248 
	gCPîs⁄
::
	$GëTaxID
(
TIdít
 
CID
, *
buf
)

250 
RNGSEED
 
OldSìd
;

252 
OldSìd
 = 
m_∫d
.
	`GëSìd
();

258 
m_∫d
.
	`SëSìd
–m_∫d.
	`RndNthEÀmít
–
RNGSìdBa£TaxID
,

259 –(
RNGSEED
)
CID
 * 
TaxIDFmt_Àn
 )));

260 
m_∫d
.
	`RndAÕhaNumF‹m©ãd
(
buf
, 
TaxIDFmt
);

261 
m_∫d
.
	`SëSìd
–
OldSìd
 );

262 
	}
}

267 
	gCPîs⁄
::
	$GëFú°La°AndTaxID
(
TIdít
 
C_ID
, *
szFú°Name
, *
szLa°Name
, *
szTaxID
)

270 
	`°∫˝y
(
szLa°Name
, 
	`GëLa°Name
(
C_ID
), 
cL_NAME_Àn
);

272 
	`°∫˝y
(
szFú°Name
, 
	`GëFú°Name
(
C_ID
), 
cF_NAME_Àn
);

274 
	`GëTaxID
(
C_ID
, 
szTaxID
);

275 
	}
}

	@src/workload/tpce/egen/Random.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíUtûôõs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 
ölöe
 
RNGSEED
 
	gCR™dom
::
	$UI¡64R™d
(){

43 
UINT64
 
a
 = (UINT64Ë
UI¡64R™d_A_MULTIPLIER
;

44 
UINT64
 
c
 = (UINT64Ë
UI¡64R™d_C_INCREMENT
;

45 
m_£ed
 = (m_£ed * 
a
 + 
c
);

47  (
m_£ed
);

48 
	}
}

50 
RNGSEED
 
	gCR™dom
::
	$RndNthEÀmít
–
RNGSEED
 
nSìd
, RNGSEED 
nCou¡
) {

51 
UINT64
 
a
 = 
UI¡64R™d_A_MULTIPLIER
;

52 
UINT64
 
c
 = 
UI¡64R™d_C_INCREMENT
;

53 
nBô
;

54 
UINT64
 
Apow
 = 
a
;

55 
UINT64
 
Dsum
 = 
UI¡64R™d_ONE
;

58 if–
nCou¡
 == 0 ) {

59  
nSìd
;

76  
nBô
 = 0; (
nCou¡
 >>ÇBôË!
UI¡64R™d_ONE
 ;ÇBit ++){}

79  --
nBô
 >= 0 ) {

80 
Dsum
 *(
Apow
 + 1);

81 
Apow
 = Apow * Apow;

82 if–((
nCou¡
 >> 
nBô
) % 2) == 1 ) {

83 
Dsum
 +
Apow
;

84 
Apow
 *
a
;

87 
nSìd
 =ÇSìd * 
Apow
 + 
Dsum
 * 
c
;

88  
nSìd
;

89 
	}
}

91 
	gCR™dom
::
	$CR™dom
()

95 
m_£ed
 = (
RNGSEED
Ë
	`time
(
NULL
);

96 } 
m_£ed
 == 0);

97 
	}
}

99 
	gCR™dom
::
	$CR™dom
(
RNGSEED
 
£ed
)

101 
	`SëSìd
(
£ed
);

102 
	}
}

104 
	gCR™dom
::
	$SëSìd
(
RNGSEED
 
£ed
)

106 
m_£ed
 = 
£ed
;

107 
	}
}

109 #ifde‡
EGEN_USE_DEPRECATED_CODE


114 
	gCR™dom
::
	$RndDoubÀ
()

116  (()
	`UI¡64R™d
()Ë* (Ë
UI¡64R™d_RECIPROCAL_2_POWER_64
;

117 
	}
}

121 
	gCR™dom
::
	$RndI¡R™ge
(
mö
, 
max
)

123 i‡–
max
 <
mö
 )

124  
mö
;

126 
UINT
 
ønge
 = (
max
 - 
mö
 + 1);

128 i‡–
ønge
 <= 1 )

129  
mö
;

131 
	`UI¡64R™d
();

133  (
mö
 + ()
	`Mul6432WôhShi·Right64
(
m_£ed
,
ønge
));

134 
	}
}

136 
INT64
 
	gCR™dom
::
	$RndI¡64R™ge
(
INT64
 
mö
, INT64 
max
)

138 i‡–
max
 <
mö
 )

139  
mö
;

141 
UINT64
 
ønge
 = (
max
 - 
mö
 + 1);

143 i‡–
ønge
 <= 1 )

144  
mö
;

146 
	`UI¡64R™d
();

148  (
mö
 + (
INT64
)
	`Mul6464WôhShi·Right64
(
m_£ed
,
ønge
));

149 
	}
}

151 
	gCR™dom
::
	$RndNthI¡R™ge
(
RNGSEED
 
Sìd
, RNGSEED 
N
, 
mö
, 
max
)

153 i‡–
max
 <
mö
 )

154  
mö
;

156 
UINT
 
ønge
 = (
max
 - 
mö
 + 1);

158 i‡–
ønge
 <= 1 )

159  
mö
;

161 
RNGSEED
 
n£ed
 = 
	`RndNthEÀmít
(
Sìd
, 
N
);

163  (
mö
 + ()
	`Mul6432WôhShi·Right64
(
n£ed
, 
ønge
));

164 
	}
}

167 
INT64
 
	gCR™dom
::
	$RndNthI¡64R™ge
(
RNGSEED
 
Sìd
, RNGSEED 
N
, 
INT64
 
mö
, INT64 
max
)

169 i‡–
max
 <
mö
 )

170  
mö
;

172 
UINT64
 
ønge
 = (
max
 - 
mö
 + 1);

174 i‡–
ønge
 <= 1 )

175  
mö
;

177 
RNGSEED
 
n£ed
 = 
	`RndNthEÀmít
(
Sìd
, 
N
);

179  (
mö
 + (
INT64
)
	`Mul6464WôhShi·Right64
(
n£ed
,
ønge
));

180 
	}
}

182 
	gCR™dom
::
	$RndI¡R™geEx˛ude
(
low
, 
high
, 
ex˛ude
)

184 
ãmp
;

186 
ãmp
 = 
	`RndI¡R™ge
–
low
, 
high
-1 );

187 i‡(
ãmp
 >
ex˛ude
)

188 
ãmp
 += 1;

190  
ãmp
;

191 
	}
}

193 
INT64
 
	gCR™dom
::
	$RndI¡64R™geEx˛ude
(
INT64
 
low
, INT64 
high
, INT64 
ex˛ude
)

195 
INT64
 
ãmp
;

197 
ãmp
 = 
	`RndI¡64R™ge
–
low
, 
high
-1 );

198 i‡(
ãmp
 >
ex˛ude
)

199 
ãmp
 += 1;

201  
ãmp
;

202 
	}
}

204 #ifde‡
EGEN_USE_DEPRECATED_CODE


206 
	gCR™dom
::
	$RndDoubÀR™ge
(
mö
, 
max
)

208  
mö
 + 
	`RndDoubÀ
(Ë* (
max
 - min);

209 
	}
}

213 
	gCR™dom
::
	$RndDoubÀIn¸R™ge
(
mö
, 
max
, 
ö¸
)

215 
INT64
 
width
 = (INT64)((
max
 - 
mö
Ë/ 
ö¸
);

216  
mö
 + (()
	`RndI¡64R™ge
(0, 
width
Ë* 
ö¸
);

217 
	}
}

220 
	gCR™dom
::
	$RndDoubÀNegExp
(
món
)

222  ((-1.0 * 
	`log
(
	`RndDoubÀIn¸R™ge
(0.0, 1.0, 0.000000000001))Ë* 
món
);

223 
	}
}

246 
INT64
 
	gCR™dom
::
	$NURnd
–
INT64
 
P
, INT64 
Q
, 
INT32
 
A
, INT32 
s
 )

249  ((–
	`RndI¡64R™ge
–
P
, 
Q
 ) | (RndI¡64R™ge–0, 
A
 ) << 
s
 )) % (Q - P + 1) ) + P );

250 
	}
}

257 
	gCR™dom
::
	$RndAÕhaNumF‹m©ãd
(*
szRëu∫Såög
, c⁄° *
szF‹m©
)

259 
szF‹m©
 && *szFormat)

261 *
szF‹m©
)

263 'a': *
szRëu∫Såög
 = 
UµîCa£Lëãrs
[ 
	`RndI¡R™ge
( 0, 25 ) ];

265 'n': *
szRëu∫Såög
 = 
NumîÆs
[ 
	`RndI¡R™ge
( 0, 9 ) ];

268 *
szRëu∫Såög
 = *
szF‹m©
;

271 ++
szF‹m©
;

272 ++
szRëu∫Såög
;

274 *
szRëu∫Såög
 = '\0';

275 
	}
}

	@src/workload/tpce/egen/ReadRowFunctions.cpp

42 #ifde‡
READROW_SSCANF


43 
	~"RódRowFun˘i⁄s_ssˇnf.˝p
"

45 
	~"RódRowFun˘i⁄s_i°ªam.˝p
"

	@src/workload/tpce/egen/ReadRowFunctions_istream.cpp

41 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

43 
usög
 
«me•a˚
 
	gTPCE
;

48 
	gTAccou¡NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

51 
fûe
>>
ws
;

52 
fûe
.
	`gë
(
NAME
, (NAME), '\n');

53 
	}
}

59 
	gTAªaCodeI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

61 
fûe
>>
AREA_CODE
;

62 
	}
}

64 
	gTCom∑nyI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

66 
fûe
>>
CO_ID
;

67 
fûe
>>
CO_ST_ID
>>
ws
;

68 
fûe
.
	`gë
(
CO_NAME
, (CO_NAME), '\t');

69 
fûe
>>
CO_IN_ID
>>
ws
;

70 
fûe
.
	`gë
(
CO_DESC
, (CO_DESC), '\n');

71 
	}
}

76 
	gTCom∑nyCom≥tô‹I≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

78 
fûe
>>
ws
;

79 
fûe
>>
CP_CO_ID
;

80 
fûe
>>
ws
;

81 
fûe
>>
CP_COMP_CO_ID
;

82 
fûe
>>
ws
;

83 
fûe
.
	`gë
(
CP_IN_ID
, (CP_IN_ID), '\n');

84 
	}
}

89 
	gTCom∑nySPR©eI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

91 
fûe
>>
ws
;

92 
fûe
.
	`gë
–
CO_SP_RATE
, ( CO_SP_RATE ), '\n' );

93 
	}
}

99 
	gTFú°NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

101 
fûe
>>
FIRST_NAME
;

102 
	}
}

104 
	gTLa°NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

106 
fûe
>>
LAST_NAME
;

107 
	}
}

109 
	gTNewsI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

111 
fûe
>>
WORD
;

112 
	}
}

114 
	gTSecurôyI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

116 
fûe
>>
S_ID
;

117 
fûe
>>
S_ST_ID
>>
ws
;

118 
fûe
>>
S_SYMB
;

119 
fûe
>>
S_ISSUE
;

120 
fûe
>>
S_EX_ID
;

121 
fûe
>>
S_CO_ID
;

122 
	}
}

127 
	gTSåìtNameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

129 
fûe
>>
ws
;

130 
fûe
.
	`gë
(
STREET
, (STREET), '\n');

131 
	}
}

136 
	gTSåìtSuffixI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

138 
fûe
>>
ws
;

139 
fûe
.
	`gë
(
SUFFIX
, (SUFFIX), '\n');

140 
	}
}

145 
	gTTaxR©eI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

147 
fûe
>>
TAX_ID
;

148 
fûe
>>
ws
;

149 
fûe
.
	`gë
(
TAX_NAME
, (TAX_NAME), '\t');

151 
fûe
>>
TAX_RATE
;

152 
	}
}

157 
	gTZùCodeI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

159 
fûe
>>
ws
;

160 
fûe
>>
iDivisi⁄TaxKey
;

161 
fûe
>>
ws
;

162 
fûe
.
	`gë
–
ZC_CODE
, ( ZC_CODE ), '\t' );

163 
fûe
>>
ws
;

164 
fûe
.
	`gë
–
ZC_TOWN
, ( ZC_TOWN ), '\t' );

165 
fûe
>>
ws
;

166 
fûe
.
	`gë
–
ZC_DIV
, ( ZC_DIV ), '\n' );

167 
	}
}

178 
	gCHARGE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

180 
fûe
>>
CH_TT_ID
;

181 
fûe
>>
CH_C_TIER
;

182 
fûe
>>
CH_CHRG
;

183 
	}
}

188 
	gCOMMISSION_RATE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

190 
fûe
>>
CR_C_TIER
;

191 
fûe
>>
CR_TT_ID
;

192 
fûe
>>
CR_EX_ID
;

193 
fûe
>>
CR_FROM_QTY
;

194 
fûe
>>
CR_TO_QTY
;

195 
fûe
>>
CR_RATE
;

196 
	}
}

201 
	gEXCHANGE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

203 
fûe
>>
ws
;

204 
fûe
.
	`gë
(
EX_ID
, (EX_ID), '\t');

205 
fûe
>>
ws
;

206 
fûe
.
	`gë
(
EX_NAME
, (EX_NAME), '\t');

207 
fûe
>>
ws
;

208 
fûe
>>
EX_OPEN
;

209 
fûe
>>
ws
;

210 
fûe
>>
EX_CLOSE
;

211 
fûe
>>
ws
;

212 
fûe
.
	`gë
(
EX_DESC
, (EX_DESC), '\t');

213 
fûe
>>
ws
;

214 
fûe
>>
EX_AD_ID
;

215 
	}
}

220 
	gINDUSTRY_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

222 
fûe
>>
IN_ID
>>
ws
;

223 
fûe
.
	`gë
(
IN_NAME
, (IN_NAME), '\t');

224 
fûe
>>
ws
;

225 
fûe
>>
IN_SC_ID
;

226 
	}
}

231 
	gSECTOR_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

233 
fûe
>>
SC_ID
>>
ws
;

234 
fûe
.
	`gë
(
SC_NAME
, (SC_NAME), '\n');

235 
	}
}

240 
	gSTATUS_TYPE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

242 
fûe
>>
ws
;

243 
fûe
>>
ST_ID
;

244 
fûe
>>
ws
;

245 
fûe
.
	`gë
(
ST_NAME
, (ST_NAME), '\n');

246 
	}
}

251 
	gTRADE_TYPE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

253 
fûe
>>
TT_ID
>>
ws
;

254 
fûe
.
	`gë
(
TT_NAME
, (TT_NAME), '\t');

255 
fûe
>>
ws
;

256 
fûe
>>
TT_IS_SELL
;

257 
fûe
>>
TT_IS_MRKT
;

258 
	}
}

263 
	gZIP_CODE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

265 
fûe
.
	`gë
(
ZC_TOWN
, (ZC_TOWN), '\t');

266 
fûe
>>
ZC_DIV
;

267 
fûe
>>
ZC_CODE
;

268 
fûe
>>
ws
;

269 
	}
}

	@src/workload/tpce/egen/ReadRowFunctions_sscanf.cpp

50 
	~<°dex˚±
>

51 
	~<s°ªam
>

52 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

53 
	~"w‹klﬂd/ç˚/egí/I≈utFœtFûesDe˛¨©i⁄s.h
"

55 
usög
 
«me•a˚
 
	gTPCE
;

60 
	gTAccou¡NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

62 
buf
[1024];

63 
fûe
.
	`gëlöe
(
buf
, (buf));

64 i‡(
fûe
.
	`eof
()) {

67 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

68 
NAME
);

69 i‡(
rc
 != 1) {

70 
°d
::
o°rög°ªam
 
°rm
;

71 
°rm
 << "TAccou¡NameI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

72 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

76 
fûe
>>
ws
;

77 
fûe
.
	`gë
(
NAME
, (NAME), '\n');

79 
	}
}

85 
	gTAªaCodeI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

87 
buf
[1024];

88 
fûe
.
	`gëlöe
(
buf
, (buf));

89 i‡(
fûe
.
	`eof
()) {

92 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

93 
AREA_CODE
);

94 i‡(
rc
 != 1) {

95 
°d
::
o°rög°ªam
 
°rm
;

96 
°rm
 << "TAªaCodeI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

97 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

100 
fûe
>>
AREA_CODE
;

102 
	}
}

104 
	gTCom∑nyI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

106 
buf
[1024];

107 
fûe
.
	`gëlöe
(
buf
, (buf));

108 i‡(
fûe
.
	`eof
()) {

111 
rc
 = 
	`ssˇnf
(
buf
, "%"
PRId64
"\t%s\t%[^\t]\t%s\t%[^\n]",

112 &
CO_ID
, 
CO_ST_ID
, 
CO_NAME
, 
CO_IN_ID
, 
CO_DESC
);

113 i‡(
rc
 != 5) {

114 
°d
::
o°rög°ªam
 
°rm
;

115 
°rm
 << "TCom∑nyI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

116 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

119 
fûe
>>
CO_ID
;

120 
fûe
>>
CO_ST_ID
>>
ws
;

121 
fûe
.
	`gë
(
CO_NAME
, (CO_NAME), '\t');

122 
fûe
>>
CO_IN_ID
>>
ws
;

123 
fûe
.
	`gë
(
CO_DESC
, (CO_DESC), '\n');

125 
	}
}

130 
	gTCom∑nyCom≥tô‹I≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

132 
buf
[1024];

133 
fûe
.
	`gëlöe
(
buf
, (buf));

134 i‡(
fûe
.
	`eof
()) {

137 
rc
 = 
	`ssˇnf
(
buf
, "%"
PRId64
"\t%"PRId64"\t%[^\n]",

138 &
CP_CO_ID
, &
CP_COMP_CO_ID
, 
CP_IN_ID
);

139 i‡(
rc
 != 3) {

140 
°d
::
o°rög°ªam
 
°rm
;

141 
°rm
 << "TCom∑nyCom≥tô‹I≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

142 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

145 
fûe
>>
ws
;

146 
fûe
>>
CP_CO_ID
;

147 
fûe
>>
ws
;

148 
fûe
>>
CP_COMP_CO_ID
;

149 
fûe
>>
ws
;

150 
fûe
.
	`gë
(
CP_IN_ID
, (CP_IN_ID), '\n');

152 
	}
}

157 
	gTCom∑nySPR©eI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

159 
buf
[1024];

160 
fûe
.
	`gëlöe
(
buf
, (buf));

161 i‡(
fûe
.
	`eof
()) {

164 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

165 
CO_SP_RATE
);

166 i‡(
rc
 != 1) {

167 
°d
::
o°rög°ªam
 
°rm
;

168 
°rm
 << "TCom∑nySPR©eI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

169 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

172 
fûe
>>
ws
;

173 
fûe
.
	`gë
–
CO_SP_RATE
, ( CO_SP_RATE ), '\n' );

175 
	}
}

181 
	gTFú°NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

183 
buf
[1024];

184 
fûe
.
	`gëlöe
(
buf
, (buf));

185 i‡(
fûe
.
	`eof
()) {

188 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

189 
FIRST_NAME
);

190 i‡(
rc
 != 1) {

191 
°d
::
o°rög°ªam
 
°rm
;

192 
°rm
 << "TFú°NameI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

193 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

196 
fûe
>>
FIRST_NAME
;

198 
	}
}

200 
	gTLa°NameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

202 
buf
[1024];

203 
fûe
.
	`gëlöe
(
buf
, (buf));

204 i‡(
fûe
.
	`eof
()) {

207 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

208 
LAST_NAME
);

209 i‡(
rc
 != 1) {

210 
°d
::
o°rög°ªam
 
°rm
;

211 
°rm
 << "TLa°NameI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

212 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

215 
fûe
>>
LAST_NAME
;

217 
	}
}

219 
	gTNewsI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

221 
buf
[1024];

222 
fûe
.
	`gëlöe
(
buf
, (buf));

223 i‡(
fûe
.
	`eof
()) {

226 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

227 
WORD
);

228 i‡(
rc
 != 1) {

229 
°d
::
o°rög°ªam
 
°rm
;

230 
°rm
 << "TNewsI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

231 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

234 
fûe
>>
WORD
;

236 
	}
}

238 
	gTSecurôyI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

240 
buf
[1024];

241 
fûe
.
	`gëlöe
(
buf
, (buf));

242 i‡(
fûe
.
	`eof
()) {

245 
rc
 = 
	`ssˇnf
(
buf
, "%"
PRId64
"\t%s\t%s\t%s\t%s\t%"PRId64,

246 &
S_ID
, 
S_ST_ID
, 
S_SYMB
, 
S_ISSUE
, 
S_EX_ID
, &
S_CO_ID
);

247 i‡(
rc
 != 6) {

248 
°d
::
o°rög°ªam
 
°rm
;

249 
°rm
 << "TSecurôyI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

250 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

253 
fûe
>>
S_ID
;

254 
fûe
>>
S_ST_ID
>>
ws
;

255 
fûe
>>
S_SYMB
;

256 
fûe
>>
S_ISSUE
;

257 
fûe
>>
S_EX_ID
;

258 
fûe
>>
S_CO_ID
;

260 
	}
}

265 
	gTSåìtNameI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

267 
buf
[1024];

268 
fûe
.
	`gëlöe
(
buf
, (buf));

269 i‡(
fûe
.
	`eof
()) {

272 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

273 
STREET
);

274 i‡(
rc
 != 1) {

275 
°d
::
o°rög°ªam
 
°rm
;

276 
°rm
 << "TSåìtNameI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

277 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

280 
fûe
>>
ws
;

281 
fûe
.
	`gë
(
STREET
, (STREET), '\n');

283 
	}
}

288 
	gTSåìtSuffixI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

290 
buf
[1024];

291 
fûe
.
	`gëlöe
(
buf
, (buf));

292 i‡(
fûe
.
	`eof
()) {

295 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\n]",

296 
SUFFIX
);

297 i‡(
rc
 != 1) {

298 
°d
::
o°rög°ªam
 
°rm
;

299 
°rm
 << "TSåìtSuffixI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

300 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

303 
fûe
>>
ws
;

304 
fûe
.
	`gë
(
SUFFIX
, (SUFFIX), '\n');

306 
	}
}

311 
	gTTaxR©eI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

313 
buf
[1024];

314 
fûe
.
	`gëlöe
(
buf
, (buf));

315 i‡(
fûe
.
	`eof
()) {

318 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\t]\t%[^\t]\t%lf",

319 
TAX_ID
, 
TAX_NAME
, &
TAX_RATE
);

320 i‡(
rc
 != 3) {

321 
°d
::
o°rög°ªam
 
°rm
;

322 
°rm
 << "TTaxR©eI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

323 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

326 
fûe
>>
TAX_ID
;

327 
fûe
>>
ws
;

328 
fûe
.
	`gë
(
TAX_NAME
, (TAX_NAME), '\t');

330 
fûe
>>
TAX_RATE
;

332 
	}
}

337 
	gTZùCodeI≈utRow
::
	$Lﬂd
(
i°ªam
 &
fûe
)

339 
buf
[1024];

340 
fûe
.
	`gëlöe
(
buf
, (buf));

341 i‡(
fûe
.
	`eof
()) {

344 
rc
 = 
	`ssˇnf
(
buf
, "%d\t%[^\t]\t%[^\t]\t%[^\n]",

345 &
iDivisi⁄TaxKey
, 
ZC_CODE
, 
ZC_TOWN
, 
ZC_DIV
);

346 i‡(
rc
 != 4) {

347 
°d
::
o°rög°ªam
 
°rm
;

348 
°rm
 << "TZùCodeI≈utRow::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

349 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

352 
fûe
>>
ws
;

353 
fûe
>>
iDivisi⁄TaxKey
;

354 
fûe
>>
ws
;

355 
fûe
.
	`gë
–
ZC_CODE
, ( ZC_CODE ), '\t' );

356 
fûe
>>
ws
;

357 
fûe
.
	`gë
–
ZC_TOWN
, ( ZC_TOWN ), '\t' );

358 
fûe
>>
ws
;

359 
fûe
.
	`gë
–
ZC_DIV
, ( ZC_DIV ), '\n' );

361 
	}
}

372 
	gCHARGE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

374 
buf
[1024];

375 
fûe
.
	`gëlöe
(
buf
, (buf));

376 i‡(
fûe
.
	`eof
()) {

379 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\t]\t%d\t%lf",

380 
CH_TT_ID
, &
CH_C_TIER
, &
CH_CHRG
);

381 i‡(
rc
 != 3) {

382 
°d
::
o°rög°ªam
 
°rm
;

383 
°rm
 << "CHARGE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

384 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

387 
fûe
>>
CH_TT_ID
;

388 
fûe
>>
CH_C_TIER
;

389 
fûe
>>
CH_CHRG
;

391 
	}
}

396 
	gCOMMISSION_RATE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

398 
buf
[1024];

399 
fûe
.
	`gëlöe
(
buf
, (buf));

400 i‡(
fûe
.
	`eof
()) {

403 
rc
 = 
	`ssˇnf
(
buf
, "%d\t%[^\t]\t%[^\t]\t%lf\t%lf\t%lf",

404 &
CR_C_TIER
, 
CR_TT_ID
, 
CR_EX_ID
, &
CR_FROM_QTY
, &
CR_TO_QTY
, &
CR_RATE
);

405 i‡(
rc
 != 6) {

406 
°d
::
o°rög°ªam
 
°rm
;

407 
°rm
 << "COMMISSION_RATE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

408 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

411 
fûe
>>
CR_C_TIER
;

412 
fûe
>>
CR_TT_ID
;

413 
fûe
>>
CR_EX_ID
;

414 
fûe
>>
CR_FROM_QTY
;

415 
fûe
>>
CR_TO_QTY
;

416 
fûe
>>
CR_RATE
;

418 
	}
}

423 
	gEXCHANGE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

425 
buf
[1024];

426 
fûe
.
	`gëlöe
(
buf
, (buf));

427 i‡(
fûe
.
	`eof
()) {

430 
rc
 = 
	`ssˇnf
(
buf
, "%[^\t]\t%[^\t]\t%d\t%d\t%[^\t]%"
PRId64
,

431 
EX_ID
, 
EX_NAME
, &
EX_OPEN
, &
EX_CLOSE
, 
EX_DESC
, &
EX_AD_ID
);

432 i‡(
rc
 != 6) {

433 
°d
::
o°rög°ªam
 
°rm
;

434 
°rm
 << "EXCHANGE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

435 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

438 
fûe
>>
ws
;

439 
fûe
.
	`gë
(
EX_ID
, (EX_ID), '\t');

440 
fûe
>>
ws
;

441 
fûe
.
	`gë
(
EX_NAME
, (EX_NAME), '\t');

442 
fûe
>>
ws
;

443 
fûe
>>
EX_OPEN
;

444 
fûe
>>
ws
;

445 
fûe
>>
EX_CLOSE
;

446 
fûe
>>
ws
;

447 
fûe
.
	`gë
(
EX_DESC
, (EX_DESC), '\t');

448 
fûe
>>
ws
;

449 
fûe
>>
EX_AD_ID
;

451 
	}
}

456 
	gINDUSTRY_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

458 
buf
[1024];

459 
fûe
.
	`gëlöe
(
buf
, (buf));

460 i‡(
fûe
.
	`eof
()) {

463 
rc
 = 
	`ssˇnf
(
buf
, "%[^\t]\t%[^\t]\t%[^\n]",

464 
IN_ID
, 
IN_NAME
, 
IN_SC_ID
);

465 i‡(
rc
 != 3) {

466 
°d
::
o°rög°ªam
 
°rm
;

467 
°rm
 << "INDUSTRY_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

468 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

471 
fûe
>>
IN_ID
>>
ws
;

472 
fûe
.
	`gë
(
IN_NAME
, (IN_NAME), '\t');

473 
fûe
>>
ws
;

474 
fûe
>>
IN_SC_ID
;

476 
	}
}

481 
	gSECTOR_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

483 
buf
[1024];

484 
fûe
.
	`gëlöe
(
buf
, (buf));

485 i‡(
fûe
.
	`eof
()) {

488 
rc
 = 
	`ssˇnf
(
buf
, "%[^\t]\t%[^\n]",

489 
SC_ID
, 
SC_NAME
);

490 i‡(
rc
 != 2) {

491 
°d
::
o°rög°ªam
 
°rm
;

492 
°rm
 << "SECTOR_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

493 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

496 
fûe
>>
SC_ID
>>
ws
;

497 
fûe
.
	`gë
(
SC_NAME
, (SC_NAME), '\n');

499 
	}
}

504 
	gSTATUS_TYPE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

506 
buf
[1024];

507 
fûe
.
	`gëlöe
(
buf
, (buf));

508 i‡(
fûe
.
	`eof
()) {

511 
rc
 = 
	`ssˇnf
(
buf
, "%[^\t]\t%[^\n]",

512 
ST_ID
, 
ST_NAME
);

513 i‡(
rc
 != 2) {

514 
°d
::
o°rög°ªam
 
°rm
;

515 
°rm
 << "STATUS_TYPE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

516 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

519 
fûe
>>
ws
;

520 
fûe
>>
ST_ID
;

521 
fûe
>>
ws
;

522 
fûe
.
	`gë
(
ST_NAME
, (ST_NAME), '\n');

524 
	}
}

529 
	gTRADE_TYPE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

531 
buf
[1024];

532 
UINT
 
is_m¨kë
;

533 
UINT
 
is_£Œ
;

534 
fûe
.
	`gëlöe
(
buf
, (buf));

535 i‡(
fûe
.
	`eof
()) {

538 
rc
 = 
	`ssˇnf
(
buf
, "%[^\t]\t%[^\t]\t%d\t%d",

539 
TT_ID
, 
TT_NAME
, &
is_£Œ
, &
is_m¨kë
);

543 
TT_IS_SELL
 = (
is_£Œ
 =1 ? 
åue
 : 
Ál£
);

544 
TT_IS_MRKT
 = (
is_m¨kë
 =1 ? 
åue
 : 
Ál£
);

545 i‡(
rc
 != 4) {

546 
°d
::
o°rög°ªam
 
°rm
;

547 
°rm
 << "TRADE_TYPE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

548 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

551 
fûe
>>
TT_ID
>>
ws
;

552 
fûe
.
	`gë
(
TT_NAME
, (TT_NAME), '\t');

553 
fûe
>>
ws
;

554 
fûe
>>
TT_IS_SELL
;

555 
fûe
>>
TT_IS_MRKT
;

557 
	}
}

562 
	gZIP_CODE_ROW
::
	$Lﬂd
(
i°ªam
 &
fûe
)

564 
buf
[1024];

565 
fûe
.
	`gëlöe
(
buf
, (buf));

566 i‡(
fûe
.
	`eof
()) {

569 
rc
 = 
	`ssˇnf
(
buf
, "\t%[^\t]\t%[^\t]\t%[^\n]",

570 
ZC_TOWN
, 
ZC_DIV
, 
ZC_CODE
);

571 i‡(
rc
 != 3) {

572 
°d
::
o°rög°ªam
 
°rm
;

573 
°rm
 << "ZIP_CODE_ROW::Lﬂd o∆yÜﬂded " << 
rc
 << " values fromÜine";

574 
throw
 
°d
::
	`ru¡ime_îr‹
(
°rm
.
	`°r
());

577 
fûe
.
	`gë
(
ZC_TOWN
, (ZC_TOWN), '\t');

578 
fûe
>>
ZC_DIV
;

579 
fûe
>>
ZC_CODE
;

580 
fûe
>>
ws
;

582 
	}
}

	@src/workload/tpce/egen/TradeGen.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíTabÀs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

43 c⁄° 
	giSecPri˚Pîiod
 = 15 * 
Sec⁄dsPîMöuã
;

46 c⁄° 
	giRNGSkùO√Tøde
 = 11;

50 
«me•a˚
 
	gTPCE


54 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gTTødeInfo
& 
	gl
, c⁄° TTødeInfo& 
	gr
)

56  
	gl
.
	gCom∂ëi⁄Time
 > 
	gr
.CompletionTime;

66 
	gCTødeGí
::
	$CTødeGí
(
CI≈utFûes
 
öputFûes
,

67 
TIdít
 
iCu°omîCou¡
,

68 
TIdít
 
iSèπFromCu°omî
,

69 
TIdít
 
iTŸÆCu°omîs
,

70 
UINT
 
iLﬂdUnôSize
,

71 
UINT
 
iSˇÀFa˘‹
,

72 
UINT
 
iHoursOfInôülTødes
,

73 
boﬁ
 
bCacheE«bÀd


75 : 
	`m_∫d
(
RNGSìdTødeGí
)

76 , 
	`m_AddªssTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
åue
, 
bCacheE«bÀd
)

77 , 
	`m_Cu°omîSñe˘i⁄
(&
m_∫d
, 0, 0, 100, 
iSèπFromCu°omî
, 
iLﬂdUnôSize
)

78 , 
	`m_Cu°omîTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

79 , 
	`m_Cu°TaxøãTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

80 , 
	`m_Cu°omîAccou¡TabÀ
(
öputFûes
, 
iLﬂdUnôSize
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

81 , 
	`m_HﬁdögTabÀ
(
öputFûes
, 
iLﬂdUnôSize
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

82 , 
	`m_BrokîTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

83 , 
	`m_SecurôyTabÀ
(
öputFûes
, 
iCu°omîCou¡
, 
iSèπFromCu°omî
)

84 , 
	`m_Pîs⁄
(
öputFûes
, 
iSèπFromCu°omî
, 
bCacheE«bÀd
)

85 , 
	`m_Com∑nyFûe
(
öputFûes
.
Com∑ny
)

86 , 
	`m_SecurôyFûe
(
öputFûes
.
Securôõs
)

87 , 
	`m_Ch¨geFûe
(
öputFûes
.
Ch¨ge
)

88 , 
	`m_Commissi⁄R©eFûe
(
öputFûes
.
Commissi⁄R©e
)

89 , 
	`m_SètusTy≥Fûe
(
öputFûes
.
SètusTy≥
)

90 , 
	`m_TødeTy≥Fûe
(
öputFûes
.
TødeTy≥
)

91 , 
	`m_Exch™geFûe
(
öputFûes
.
Exch™ge
)

92 , 
	`m_iSèπFromCu°omî
(
iSèπFromCu°omî
 + 
iTIdítShi·
)

93 , 
	`m_iCu°omîCou¡
(
iCu°omîCou¡
)

94 , 
	`m_iTŸÆCu°omîs
(
iTŸÆCu°omîs
)

95 , 
	`m_iLﬂdUnôSize
(
iLﬂdUnôSize
)

96 , 
	`m_iLﬂdUnôAccou¡Cou¡
(
iLﬂdUnôSize
 * 
iMaxAccou¡sPîCu°
)

97 , 
	`m_iSˇÀFa˘‹
(
iSˇÀFa˘‹
)

98 , 
	`m_iHoursOfInôülTødes
(
iHoursOfInôülTødes
)

99 , 
	`m_fMónTimeBëwìnTødes
(100.0 / 
iAb‹tTøde
 * ()
iSˇÀFa˘‹
 / 
iLﬂdUnôSize
)

100 , 
	`m_fMónInTheM⁄eySubmissi⁄Dñay
( 1.0 )

101 , 
	`m_CuºítSimuœãdTime
(0)

102 , 
	`m_iCuºítCom∂ëedTødes
(0)

103 , 
	`m_iTŸÆTødes
((
TTøde
)
iHoursOfInôülTødes
 * 
Sec⁄dsPîHour
 * 
iLﬂdUnôSize
 / 
iSˇÀFa˘‹
)

104 , 
	`m_iCuºítInôüãdTødes
(0)

105 , 
	`m_iTødesPîW‹kDay
(
HoursPîW‹kDay
 * 
Sec⁄dsPîHour
 * 
iLﬂdUnôSize
 / 
iSˇÀFa˘‹
 * 
iAb‹tTøde
 / 100)

106 , 
	`m_MEESecurôy
()

107 , 
	`m_iCuºítAccou¡F‹Hﬁdög
(0)

108 , 
	`m_iCuºítSecurôyF‹Hﬁdög
(0)

109 , 
	`m_pCuºítSecurôyHﬁdög
()

110 , 
	`m_iCuºítAccou¡F‹HﬁdögSumm¨y
(0)

111 , 
	`m_iCuºítSecurôyF‹HﬁdögSumm¨y
(-1)

112 , 
	$m_iCuºítLﬂdUnô
(0)

114 
RNGSEED
 
RNGSkùCou¡
;

117 
m_SèπTime
.
	`Së
(

118 
InôülTødeP›uœti⁄Ba£Yór
,

119 
InôülTødeP›uœti⁄Ba£M⁄th
,

120 
InôülTødeP›uœti⁄Ba£Day
,

121 
InôülTødeP›uœti⁄Ba£Hour
,

122 
InôülTødeP›uœti⁄Ba£Möuã
,

123 
InôülTødeP›uœti⁄Ba£Sec⁄d
,

124 
InôülTødeP›uœti⁄Ba£Fø˘i⁄
 );

128 
m_iSèπFromAccou¡
 = 
m_Cu°omîAccou¡TabÀ
.
	`GëSèπögCA_ID
(
m_iSèπFromCu°omî
);

132 
m_pCu°omîHﬁdögs
 = 
√w
 
THﬁdögLi°
[ 
m_iLﬂdUnôAccou¡Cou¡
 ]

133 [ 
iMaxSecurôõsPîAccou¡
 ];

137 
	`mem£t
(&
m_NewTøde
, 0, (m_NewTrade));

138 
	`mem£t
(&
m_TødeRow
, 0, (m_TradeRow));

139 
	`mem£t
(&
m_HﬁdögRow
, 0, (m_HoldingRow));

140 
	`mem£t
(&
m_HﬁdögSumm¨yRow
, 0, (m_HoldingSummaryRow));

144 
m_iCuºítTødeId
 = (
TTøde
)
m_iHoursOfInôülTødes
 * 
Sec⁄dsPîHour


145 * (
iSèπFromCu°omî
 - 
iDeÁu…SèπFromCu°omî
)

146 / 
m_iSˇÀFa˘‹


147 * 
iAb‹tTøde


148 / 100 + 
iTTødeShi·
;

152 
m_BrokîTabÀ
.
	`InôF‹Gí
(
iLﬂdUnôSize
, 
m_iSèπFromCu°omî
 - 
iTIdítShi·
);

154 
RNGSkùCou¡
 =

155 (
RNGSEED
)(
m_iSèπFromCu°omî
 / 
m_iLﬂdUnôSize
 * 
m_iTŸÆTødes
);

157 
m_∫d
.
	`SëSìd
(m_∫d.
	`RndNthEÀmít
(
RNGSìdTødeGí
,

158 
RNGSkùCou¡
 * 
iRNGSkùO√Tøde
));

160 
m_HﬁdögTabÀ
.
	`InôNextLﬂdUnô
(
RNGSkùCou¡
, 
m_iSèπFromAccou¡
);

163 
m_MEESecurôy
.
	`Inô
–0, 
NULL
, NULL, 
m_fMónInTheM⁄eySubmissi⁄Dñay
 );

164 
	}
}

170 
	gCTødeGí
::~
	$CTødeGí
()

172 i‡(
m_pCu°omîHﬁdögs
 !
NULL
)

174 
dñëe
[] 
m_pCu°omîHﬁdögs
;

176 
	}
}

188 
boﬁ
 
	gCTødeGí
::
	$InôNextLﬂdUnô
()

190 
RNGSEED
 
RNGSkùCou¡
;

192 ++
m_iCuºítLﬂdUnô
;

194 
m_iCuºítCom∂ëedTødes
 = 0;

199 
dñëe
[] 
m_pCu°omîHﬁdögs
;

202 
m_pCu°omîHﬁdögs
 = 
√w
 
THﬁdögLi°
[ 
m_iLﬂdUnôAccou¡Cou¡
 ]

203 [ 
iMaxSecurôõsPîAccou¡
 ];

204 
m_iCuºítAccou¡F‹Hﬁdög
 = 0;

205 
m_iCuºítSecurôyF‹Hﬁdög
 = 0;

207 
m_iCuºítAccou¡F‹HﬁdögSumm¨y
 = 0;

208 
m_iCuºítSecurôyF‹HﬁdögSumm¨y
 = -1;

210 
m_iSèπFromCu°omî
 +
m_iLﬂdUnôSize
;

212 
m_iSèπFromAccou¡
 = 
m_Cu°omîAccou¡TabÀ
.
	`GëSèπögCA_ID
(
m_iSèπFromCu°omî
);

214 
m_CuºítSimuœãdTime
 = 0;

216 
m_iCuºítInôüãdTødes
 = 0;

218 
m_BrokîTabÀ
.
	`InôF‹Gí
(
m_iLﬂdUnôSize
, 
m_iSèπFromCu°omî
 - 
iTIdítShi·
);

220 
RNGSkùCou¡
 =

221 (
RNGSEED
)(
m_iSèπFromCu°omî
 / 
m_iLﬂdUnôSize
 * 
m_iTŸÆTødes
);

223 
m_∫d
.
	`SëSìd
(m_∫d.
	`RndNthEÀmít
(
RNGSìdTødeGí
,

224 
RNGSkùCou¡
 * 
iRNGSkùO√Tøde
));

228 
m_Cu°omîSñe˘i⁄
.
	`SëP¨tôi⁄R™ge
(
m_iSèπFromCu°omî
, 
m_iLﬂdUnôSize
);

230 
m_HﬁdögTabÀ
.
	`InôNextLﬂdUnô
(
RNGSkùCou¡
, 
m_iSèπFromAccou¡
);

232 
m_Pîs⁄
.
	`InôNextLﬂdUnô
();

234 
m_AddªssTabÀ
.
	`InôNextLﬂdUnô
();

236 
m_Cu°omîAccou¡TabÀ
.
	`InôNextLﬂdUnô
();

238 
m_MEESecurôy
.
	`Inô
–0, 
NULL
, NULL, 
m_fMónInTheM⁄eySubmissi⁄Dñay
 );

242 
	`mem£t
(&
m_TødeRow
, 0, (m_TradeRow));

243 
	`mem£t
(&
m_HﬁdögRow
, 0, (m_HoldingRow));

244 
	`mem£t
(&
m_HﬁdögSumm¨yRow
, 0, (m_HoldingSummaryRow));

246  
m_iCuºítLﬂdUnô
 < (
m_iCu°omîCou¡
 / 
m_iLﬂdUnôSize
);

247 
	}
}

260 
boﬁ
 
	gCTødeGí
::
	$Gíî©eNextTøde
()

262 
boﬁ
 
bM‹eTødes
;

264 i‡(
m_iCuºítCom∂ëedTødes
 < 
m_iTŸÆTødes
)

271  (
m_iCuºítCom∂ëedTødes
 + ()
m_CuºítTødes
.
	`size
(Ë< 
m_iTŸÆTødes
) &&

272 (
m_CuºítTødes
.
	`em±y
() ||

273 (
m_CuºítSimuœãdTime
 <

274 
m_CuºítTødes
.
	`t›
().
Com∂ëi⁄Time
)))

276 
m_CuºítSimuœãdTime
 = (
m_iCuºítInôüãdTødes
 / 
m_iTødesPîW‹kDay
)

277 * 
Sec⁄dsPîDay


279 + (
m_iCuºítInôüãdTødes
 % 
m_iTødesPîW‹kDay
)

280 * 
m_fMónTimeBëwìnTødes


281 + 
	`Gíî©eDñayBëwìnTødes
();

286 
	`Gíî©eNewTøde
();

288 i‡–
m_HﬁdögTabÀ
.
	`IsAb‹ãdTøde
(
m_iCuºítInôüãdTødes
) )

296 
m_CuºítTødes
.
	`push
(
m_NewTøde
);

303 
m_NewTøde
 = 
m_CuºítTødes
.
	`t›
();

307 
m_CuºítTødes
.
	`p›
();

314 
	`Upd©eHﬁdögs
();

318 
	`Gíî©eCom∂ëeTøde
();

320 
bM‹eTødes
 = 
m_iCuºítCom∂ëedTødes
 < 
m_iTŸÆTødes
;

325 
bM‹eTødes
 = 
Ál£
;

328 i‡(
bM‹eTødes
)

330  
åue
;

337 
m_pCuºítSecurôyHﬁdög
 = 
m_pCu°omîHﬁdögs
[
m_iCuºítAccou¡F‹Hﬁdög
]

338 [
m_iCuºítSecurôyF‹Hﬁdög
].
	`begö
();

339 
	`FödNextHﬁdög
();

342 
	`FödNextHﬁdögLi°
();

344 
size_t
 
iSize
 = 
m_CuºítTødes
.
	`size
();

346 
	`as£π
(
iSize
 == 0);

348  
Ál£
;

350 
	}
}

363 
ölöe
 
	gCTødeGí
::
	$Gíî©eDñayBëwìnTødes
()

367  
m_∫d
.
	`RndDoubÀIn¸R™ge
(0.0, 
m_fMónTimeBëwìnTødes
 - 0.001, 0.001);

368 
	}
}

377 
ölöe
 
THﬁdögLi°
* 
	gCTødeGí
::
	$GëHﬁdögLi°F‹CuºítTøde
()

379  &
m_pCu°omîHﬁdögs
[
	`GëCuºítAccID
(Ë- 
m_iSèπFromAccou¡
]

380 [
	`GëCuºítSecurôyAccou¡Index
() - 1];

381 
	}
}

390 
	gli°
<
	gTHﬁdögInfo
>::
ôî©‹
 
CTødeGí
::
	$Posôi⁄AtHﬁdögLi°
(

391 
THﬁdögLi°
* 
pHﬁdögLi°
,

392 
IsLifo
)

394 i‡(
pHﬁdögLi°
->
	`em±y
())

396  
pHﬁdögLi°
->
	`íd
();

401 i‡(
IsLifo
)

403  --(
pHﬁdögLi°
->
	`íd
());

407  
pHﬁdögLi°
->
	`begö
();

410 
	}
}

425 
	gCTødeGí
::
	$Upd©eHﬁdögs
()

427 
THﬁdögLi°
* 
pHﬁdögLi°
;

428 
li°
<
THﬁdögInfo
>::
ôî©‹
 
pHﬁdög
;

429 
iNìdedQty
 = 
	`GëCuºítTødeQty
();

430 
iHﬁdQty
;

432 
m_Com∂ëedTødeInfo
.
fBuyVÆue
 = 0;

433 
m_Com∂ëedTødeInfo
.
fSñlVÆue
 = 0;

437 
m_iHﬁdögHi°‹yRowCou¡
 = 0;

439 
pHﬁdögLi°
 = 
	`GëHﬁdögLi°F‹CuºítTøde
();

441 
pHﬁdög
 = 
	`Posôi⁄AtHﬁdögLi°
(
pHﬁdögLi°
, 
	`GëCuºítTødeIsLifo
());

443 i‡–
	`GëCuºítTødeTy≥
(Ë=
eM¨këBuy


444 || 
	`GëCuºítTødeTy≥
(Ë=
eLimôBuy
)

450 !
pHﬁdögLi°
->
	`em±y
(Ë&& 
pHﬁdög
->
iTødeQty
 < 0 && 
iNìdedQty
 > 0)

452 
iHﬁdQty
 = 
pHﬁdög
->
iTødeQty
;

454 
pHﬁdög
->
iTødeQty
 +
iNìdedQty
;

456 i‡(
pHﬁdög
->
iTødeQty
 > 0)

460 
pHﬁdög
->
iTødeQty
 = 0;

462 
m_Com∂ëedTødeInfo
.
fSñlVÆue
 +-
iHﬁdQty
 * 
pHﬁdög
->
fTødePri˚
;

463 
m_Com∂ëedTødeInfo
.
fBuyVÆue
 +-
iHﬁdQty
 * 
	`GëCuºítTødePri˚
();

467 
m_Com∂ëedTødeInfo
.
fSñlVÆue
 +
iNìdedQty
 * 
pHﬁdög
->
fTødePri˚
;

468 
m_Com∂ëedTødeInfo
.
fBuyVÆue
 +
iNìdedQty
 * 
	`GëCuºítTødePri˚
();

471 
	`Gíî©eHﬁdögHi°‹yRow
(
pHﬁdög
->
iTødeId
, 
	`GëCuºítTødeID
(),

472 
iHﬁdQty
, 
pHﬁdög
->
iTødeQty
);

474 i‡(
pHﬁdög
->
iTødeQty
 == 0)

478 
pHﬁdög
 = 
pHﬁdögLi°
->
	`îa£
(pHolding);

483 
pHﬁdög
 = 
	`Posôi⁄AtHﬁdögLi°
(
pHﬁdögLi°
, 
	`GëCuºítTødeIsLifo
());

485 
iNìdedQty
 +
iHﬁdQty
;

488 i‡(
iNìdedQty
 > 0)

492 
THﬁdögInfo
 
NewHﬁdög
 = { 
	`GëCuºítTødeID
(),

493 
iNìdedQty
,

494 
	`GëCuºítTødePri˚
(),

495 
	`GëCuºítTødeCom∂ëi⁄Time
(),

496 
	`GëCuºítSecurôyIndex
()

506 
pHﬁdögLi°
->
	`push_back
(
NewHﬁdög
);

508 
	`Gíî©eHﬁdögHi°‹yRow
(
	`GëCuºítTødeID
(), GetCurrentTradeID(),

509 0, 
iNìdedQty
);

520 !
pHﬁdögLi°
->
	`em±y
(Ë&& 
pHﬁdög
->
iTødeQty
 > 0 && 
iNìdedQty
 > 0)

522 
iHﬁdQty
 = 
pHﬁdög
->
iTødeQty
;

524 
pHﬁdög
->
iTødeQty
 -
iNìdedQty
;

526 i‡(
pHﬁdög
->
iTødeQty
 < 0)

530 
pHﬁdög
->
iTødeQty
 = 0;

532 
m_Com∂ëedTødeInfo
.
fSñlVÆue
 +
iHﬁdQty
 * 
	`GëCuºítTødePri˚
();

533 
m_Com∂ëedTødeInfo
.
fBuyVÆue
 +
iHﬁdQty
 * 
pHﬁdög
->
fTødePri˚
;

537 
m_Com∂ëedTødeInfo
.
fSñlVÆue
 +
iNìdedQty
 * 
	`GëCuºítTødePri˚
();

538 
m_Com∂ëedTødeInfo
.
fBuyVÆue
 +
iNìdedQty
 * 
pHﬁdög
->
fTødePri˚
;

541 
	`Gíî©eHﬁdögHi°‹yRow
(
pHﬁdög
->
iTødeId
, 
	`GëCuºítTødeID
(),

542 
iHﬁdQty
, 
pHﬁdög
->
iTødeQty
);

544 i‡(
pHﬁdög
->
iTødeQty
 == 0)

548 
pHﬁdög
 = 
pHﬁdögLi°
->
	`îa£
(pHolding);

553 
pHﬁdög
 = 
	`Posôi⁄AtHﬁdögLi°
(
pHﬁdögLi°
, 
	`GëCuºítTødeIsLifo
());

555 
iNìdedQty
 -
iHﬁdQty
;

558 i‡(
iNìdedQty
 > 0)

562 
THﬁdögInfo
 
NewHﬁdög
 = { 
	`GëCuºítTødeID
(),

563 -
iNìdedQty
,

564 
	`GëCuºítTødePri˚
(),

565 
	`GëCuºítTødeCom∂ëi⁄Time
(),

566 
	`GëCuºítSecurôyIndex
()

576 
pHﬁdögLi°
->
	`push_back
(
NewHﬁdög
);

578 
	`Gíî©eHﬁdögHi°‹yRow
(
	`GëCuºítTødeID
(), GetCurrentTradeID(),

579 0, -
iNìdedQty
);

583 
	}
}

591 
boﬁ
 
	gCTødeGí
::
	$FödNextHﬁdögLi°
()

593 
THﬁdögLi°
* 
pHﬁdögLi°
;

599 
m_iCuºítSecurôyF‹HﬁdögSumm¨y
++;

600 i‡(
m_iCuºítSecurôyF‹HﬁdögSumm¨y
 =
iMaxSecurôõsPîAccou¡
)

605 
m_iCuºítAccou¡F‹HﬁdögSumm¨y
++;

606 
m_iCuºítSecurôyF‹HﬁdögSumm¨y
 = 0;

608 i‡(
m_iCuºítAccou¡F‹HﬁdögSumm¨y
 =
m_iLﬂdUnôAccou¡Cou¡
)

612  
Ál£
;

618 
pHﬁdögLi°
 = &
m_pCu°omîHﬁdögs
[
m_iCuºítAccou¡F‹HﬁdögSumm¨y
]

619 [
m_iCuºítSecurôyF‹HﬁdögSumm¨y
];

620 } 
pHﬁdögLi°
->
	`em±y
());

622  
åue
;

623 
	}
}

632 
boﬁ
 
	gCTødeGí
::
	$FödNextHﬁdög
()

634 
THﬁdögLi°
* 
pHﬁdögLi°
;

636 
pHﬁdögLi°
 = &
m_pCu°omîHﬁdögs
[
m_iCuºítAccou¡F‹Hﬁdög
]

637 [
m_iCuºítSecurôyF‹Hﬁdög
];

643 i‡(
m_pCuºítSecurôyHﬁdög
 =
pHﬁdögLi°
->
	`íd
())

647 ++
m_iCuºítSecurôyF‹Hﬁdög
;

649 i‡(
m_iCuºítSecurôyF‹Hﬁdög
 =
iMaxSecurôõsPîAccou¡
)

654 ++
m_iCuºítAccou¡F‹Hﬁdög
;

656 
m_iCuºítSecurôyF‹Hﬁdög
 = 0;

658 i‡(
m_iCuºítAccou¡F‹Hﬁdög
 =
m_iLﬂdUnôAccou¡Cou¡
)

662  
Ál£
;

668 
pHﬁdögLi°
 = &
m_pCu°omîHﬁdögs
[
m_iCuºítAccou¡F‹Hﬁdög
]

669 [
m_iCuºítSecurôyF‹Hﬁdög
];

672 
m_pCuºítSecurôyHﬁdög
 = 
pHﬁdögLi°
->
	`begö
();

674 } 
m_pCuºítSecurôyHﬁdög
 =
pHﬁdögLi°
->
	`íd
());

676  
åue
;

677 
	}
}

691 
boﬁ
 
	gCTødeGí
::
	$Gíî©eNextHﬁdögSumm¨yRow
()

693 
TIdít
 
iSecurôyFœtFûeIndex
;

695 i‡(
m_iCuºítAccou¡F‹HﬁdögSumm¨y
 < 
m_iLﬂdUnôAccou¡Cou¡
)

702 
m_HﬁdögSumm¨yRow
.
HS_CA_ID
 = 
m_iCuºítAccou¡F‹HﬁdögSumm¨y
 + 
m_iSèπFromAccou¡
;

703 
iSecurôyFœtFûeIndex
 = 
m_HﬁdögTabÀ
.
	`GëSecurôyFœtFûeIndex
(

704 
m_iCuºítAccou¡F‹HﬁdögSumm¨y
 + 
m_iSèπFromAccou¡
,

705 (
UINT
)(
m_iCuºítSecurôyF‹HﬁdögSumm¨y
 + 1));

707 
m_SecurôyFûe
->
	`Cª©eSymbﬁ
(
iSecurôyFœtFûeIndex
,

708 
m_HﬁdögSumm¨yRow
.
HS_S_SYMB
,

709 
°©ic_ˇ°
<>((
m_HﬁdögSumm¨yRow
.
HS_S_SYMB
)));

712 
THﬁdögLi°
* 
pHﬁdögLi°
;

713 
li°
<
THﬁdögInfo
>::
ôî©‹
 
pHﬁdög
;

715 
pHﬁdögLi°
 = &
m_pCu°omîHﬁdögs
[
m_iCuºítAccou¡F‹HﬁdögSumm¨y
]

716 [
m_iCuºítSecurôyF‹HﬁdögSumm¨y
];

717 
pHﬁdög
 = 
pHﬁdögLi°
->
	`begö
();

718 
m_HﬁdögSumm¨yRow
.
HS_QTY
 = 0;

720  
pHﬁdög
 !
pHﬁdögLi°
->
	`íd
() )

722 
m_HﬁdögSumm¨yRow
.
HS_QTY
 +
pHﬁdög
->
iTødeQty
;

723 
pHﬁdög
++;

726  
	`FödNextHﬁdögLi°
();

730  
Ál£
;

732 
	}
}

740 
	gCTødeGí
::
	$Gíî©eHﬁdögHi°‹yRow
(

741 
TTøde
 
iHﬁdögTødeID
,

742 
TTøde
 
iTødeTødeID
,

743 
iBef‹eQty
,

744 
iA·îQty
)

746 i‡(
m_iHﬁdögHi°‹yRowCou¡
 < 
iMaxHﬁdögHi°‹yRowsPîTøde
)

748 
m_TødeRow
.
m_HﬁdögHi°‹y
[
m_iHﬁdögHi°‹yRowCou¡
].
HH_H_T_ID
 = 
iHﬁdögTødeID
;

749 
m_TødeRow
.
m_HﬁdögHi°‹y
[
m_iHﬁdögHi°‹yRowCou¡
].
HH_T_ID
 = 
iTødeTødeID
;

750 
m_TødeRow
.
m_HﬁdögHi°‹y
[
m_iHﬁdögHi°‹yRowCou¡
].
HH_BEFORE_QTY
 = 
iBef‹eQty
;

751 
m_TødeRow
.
m_HﬁdögHi°‹y
[
m_iHﬁdögHi°‹yRowCou¡
].
HH_AFTER_QTY
 = 
iA·îQty
;

753 ++
m_iHﬁdögHi°‹yRowCou¡
;

755 
	}
}

774 
boﬁ
 
	gCTødeGí
::
	$Gíî©eNextHﬁdög
()

776 
TIdít
 
iSecurôyFœtFûeIndex
;

778 i‡(
m_iCuºítAccou¡F‹Hﬁdög
 < 
m_iLﬂdUnôAccou¡Cou¡
)

784 
m_HﬁdögRow
.
H_CA_ID
 = 
m_iCuºítAccou¡F‹Hﬁdög
 + 
m_iSèπFromAccou¡
;

789 
iSecurôyFœtFûeIndex
 = 
m_pCuºítSecurôyHﬁdög
->
iSymbﬁIndex
;

791 
m_SecurôyFûe
->
	`Cª©eSymbﬁ
(
iSecurôyFœtFûeIndex
,

792 
m_HﬁdögRow
.
H_S_SYMB
,

793 
°©ic_ˇ°
<>((
m_HﬁdögRow
.
H_S_SYMB
)));

795 
m_HﬁdögRow
.
H_T_ID
 = 
m_pCuºítSecurôyHﬁdög
->
iTødeId
;

796 
m_HﬁdögRow
.
H_QTY
 = 
m_pCuºítSecurôyHﬁdög
->
iTødeQty
;

797 
m_HﬁdögRow
.
H_PRICE
 = 
m_pCuºítSecurôyHﬁdög
->
fTødePri˚
.
	`DﬁœrAmou¡
();

798 
m_HﬁdögRow
.
H_DTS
 = 
m_pCuºítSecurôyHﬁdög
->
BuyDTS
;

805 ++
m_pCuºítSecurôyHﬁdög
;

809  
	`FödNextHﬁdög
();

813  
Ál£
;

815 
	}
}

825 
TTøde
 
	gCTødeGí
::
	$Gíî©eNextTødeId
()

827  ++
m_iCuºítTødeId
;

828 
	}
}

838 
eTødeTy≥ID
 
	gCTødeGí
::
	$Gíî©eTødeTy≥
()

840 
eTødeTy≥ID
 
eTødeTy≥
;

846 
iLﬂdTødeTy≥P˘
 = 
m_∫d
.
	`RndGíî©eI¡egîPî˚¡age
();

848 if–
iLﬂdTødeTy≥P˘
 <
cM¨këBuyLﬂdThªshﬁd
 )

850 
eTødeTy≥
 = 
eM¨këBuy
;

852 if–
iLﬂdTødeTy≥P˘
 <
cM¨këSñlLﬂdThªshﬁd
 )

854 
eTødeTy≥
 = 
eM¨këSñl
;

856 if–
iLﬂdTødeTy≥P˘
 <
cLimôBuyLﬂdThªshﬁd
 )

858 
eTødeTy≥
 = 
eLimôBuy
;

860 if–
iLﬂdTødeTy≥P˘
 <
cLimôSñlLﬂdThªshﬁd
 )

862 
eTødeTy≥
 = 
eLimôSñl
;

864 if–
iLﬂdTødeTy≥P˘
 <
cSt›LossLﬂdThªshﬁd
 )

866 
eTødeTy≥
 = 
eSt›Loss
;

870 
	`as£π
(
Ál£
);

873  
eTødeTy≥
;

874 
	}
}

886 
	gCTødeGí
::
	$Gíî©eNewTøde
()

888 
m_NewTøde
.
iTødeId
 = 
	`Gíî©eNextTødeId
();

892 
m_Cu°omîSñe˘i⁄
.
	`Gíî©eR™domCu°omî
(
m_NewTøde
.
iCu°omî
, m_NewTøde.
iCu°omîTõr
);

896 
m_HﬁdögTabÀ
.
	`Gíî©eR™domAccou¡Securôy
(

897 
m_NewTøde
.
iCu°omî
,

898 
m_NewTøde
.
iCu°omîTõr
,

899 &
m_NewTøde
.
iCu°omîAccou¡
,

900 &
m_NewTøde
.
iSymbﬁIndex
,

901 &
m_NewTøde
.
iSymbﬁIndexInAccou¡
);

903 
m_NewTøde
.
eTødeTy≥
 = 
	`Gíî©eTødeTy≥
();

907 
m_NewTøde
.
eTødeSètus
 = 
eCom∂ëed
;

909 
m_NewTøde
.
fBidPri˚
 = 
m_∫d
.
	`RndDoubÀIn¸R™ge
(
fMöSecPri˚
, 
fMaxSecPri˚
, 0.01);

911 
m_NewTøde
.
iTødeQty
 = 
cTRADE_QTY_SIZES
[
m_∫d
.
	`RndI¡R™ge
–0, 
cNUM_TRADE_QTY_SIZES
-1 )];

913 i‡(
m_NewTøde
.
eTødeTy≥
 =
eM¨këBuy
 ||

914 
m_NewTøde
.
eTødeTy≥
 =
eM¨këSñl
)

917 
m_NewTøde
.
Submissi⁄Time
 = 
m_CuºítSimuœãdTime
;

921 
m_NewTøde
.
fBidPri˚
 = 
m_MEESecurôy
.
	`CÆcuœãPri˚
–m_NewTøde.
iSymbﬁIndex
, 
m_CuºítSimuœãdTime
 );

926 
m_NewTøde
.
PídögTime
 = 
m_CuºítSimuœãdTime
;

928 
m_NewTøde
.
Submissi⁄Time
 = 
m_MEESecurôy
.

929 
	`GëSubmissi⁄Time
–
m_NewTøde
.
iSymbﬁIndex
,

930 
m_NewTøde
.
PídögTime
,

931 
m_NewTøde
.
fBidPri˚
,

932 
m_NewTøde
.
eTødeTy≥
);

941 i‡((((
INT32
)(
m_NewTøde
.
Submissi⁄Time
 / 
Sec⁄dsPîHour
)Ë% 
HoursPîDay
 =
HoursPîW‹kDay
) &&

943 (
m_NewTøde
.
Submissi⁄Time
 / 
Sec⁄dsPîHour
) -

944 ((
INT32
)(
m_NewTøde
.
Submissi⁄Time
 / 
Sec⁄dsPîHour
)) > 0

948 
m_NewTøde
.
Submissi⁄Time
 +16 * 
Sec⁄dsPîHour
;

954 
m_NewTøde
.
Com∂ëi⁄Time
 = 
m_MEESecurôy
.

955 
	`GëCom∂ëi⁄Time
–
m_NewTøde
.
iSymbﬁIndex
,

956 
m_NewTøde
.
Submissi⁄Time
,

957 &
m_NewTøde
.
fTødePri˚
);

960 if(–
m_NewTøde
.
eTødeTy≥
 =
eLimôBuy
 && m_NewTøde.
fBidPri˚
 < m_NewTøde.
fTødePri˚
 ) ||

961 –
m_NewTøde
.
eTødeTy≥
 =
eLimôSñl
 && m_NewTøde.
fBidPri˚
 > m_NewTøde.
fTødePri˚
 ))

963 
m_NewTøde
.
fTødePri˚
 = m_NewTøde.
fBidPri˚
;

966 i‡(
m_∫d
.
	`RndPî˚¡
–
iPî˚¡TødeIsLIFO
 ))

968 
m_NewTøde
.
bIsLifo
 = 
åue
;

972 
m_NewTøde
.
bIsLifo
 = 
Ál£
;

975 ++
m_iCuºítInôüãdTødes
;

976 
	}
}

991 
	gCTødeGí
::
	$Gíî©eCom∂ëeTøde
()

993 
	`Gíî©eCom∂ëedTødeInfo
();

995 
	`Gíî©eTødeRow
();

996 
	`Gíî©eTødeHi°‹yRow
();

997 
	`Gíî©eCashTønß˘i⁄Row
();

998 
	`Gíî©eSëéemítRow
();

1000 
m_BrokîTabÀ
.
	`Upd©eTødeAndCommissi⁄YTD
(
	`GëCuºítBrokîId
(), 1, 
m_TødeRow
.
m_Tøde
.
T_COMM
);

1002 ++
m_iCuºítCom∂ëedTødes
;

1003 
	}
}

1019 
	gCTødeGí
::
	$Gíî©eCom∂ëedTødeInfo
()

1021 
m_Com∂ëedTødeInfo
.
eAccou¡TaxSètus
 =

1022 
m_Cu°omîAccou¡TabÀ
.
	`GëAccou¡TaxSètus
(
	`GëCuºítAccID
());

1024 
m_Com∂ëedTødeInfo
.
iCuºítBrokîId
 =

1025 
m_Cu°omîAccou¡TabÀ
.
	`Gíî©eBrokîIdF‹Accou¡
(
	`GëCuºítAccID
());

1027 
	`Gíî©eTødeCh¨ge
();

1029 
	`Gíî©eTødeCommissi⁄
();

1031 
	`Gíî©eTødeTax
();

1033 
	`Gíî©eSëéemítAmou¡
();

1034 
	}
}

1046 
	gCTødeGí
::
	$Gíî©eTødeRow
()

1048 
m_TødeRow
.
m_Tøde
.
T_ID
 = 
	`GëCuºítTødeID
();

1050 
m_TødeRow
.
m_Tøde
.
T_CA_ID
 = 
	`GëCuºítAccID
();

1052 
	`°∫˝y
(
m_TødeRow
.
m_Tøde
.
T_TT_ID
,

1053 
m_TødeTy≥Fûe
->
	`GëRec‹d
(
	`GëCuºítTødeTy≥
())->
TT_ID
,

1054 (
m_TødeRow
.
m_Tøde
.
T_TT_ID
));

1056 
	`°∫˝y
(
m_TødeRow
.
m_Tøde
.
T_ST_ID
,

1057 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
	`GëCuºítTødeSètus
())->
ST_ID
,

1058 (
m_TødeRow
.
m_Tøde
.
T_ST_ID
));

1062 
m_TødeRow
.
m_Tøde
.
T_IS_CASH
 = 1;

1064 if((–
	`GëCuºítTødeTy≥
(Ë=
eM¨këBuy
 ) || ( GëCuºítTødeTy≥(Ë=
eLimôBuy
 )) &&

1065 
m_∫d
.
	`RndPî˚¡
–
iPî˚¡BuysOnM¨gö
 ))

1067 
m_TødeRow
.
m_Tøde
.
T_IS_CASH
 = 0;

1070 
	`¢¥ötf
(
m_TødeRow
.
m_Tøde
.
T_EXEC_NAME
,

1071 (
m_TødeRow
.
m_Tøde
.
T_EXEC_NAME
),

1073 
m_Pîs⁄
.
	`GëFú°Name
(
	`GëCuºítCu°ID
()),

1074 
m_Pîs⁄
.
	`GëLa°Name
(
	`GëCuºítCu°ID
()));

1076 
m_SecurôyFûe
->
	`Cª©eSymbﬁ
(
	`GëCuºítSecurôyIndex
(),

1077 
m_TødeRow
.
m_Tøde
.
T_S_SYMB
,

1078 
°©ic_ˇ°
<>((
m_TødeRow
.
m_Tøde
.
T_S_SYMB
)));

1080 
m_TødeRow
.
m_Tøde
.
T_BID_PRICE
 = 
	`GëCuºítBidPri˚
().
	`DﬁœrAmou¡
();

1082 
m_TødeRow
.
m_Tøde
.
T_TRADE_PRICE
 = 
	`GëCuºítTødePri˚
().
	`DﬁœrAmou¡
();

1084 
m_TødeRow
.
m_Tøde
.
T_QTY
 = 
	`GëCuºítTødeQty
();

1086 
m_TødeRow
.
m_Tøde
.
T_CHRG
 = 
m_Com∂ëedTødeInfo
.
Ch¨ge
.
	`DﬁœrAmou¡
();

1088 
m_TødeRow
.
m_Tøde
.
T_COMM
 = 
m_Com∂ëedTødeInfo
.
Commissi⁄
.
	`DﬁœrAmou¡
();

1094  
	`GëCuºítTaxSètus
() )

1096 
eN⁄TaxabÀ
:

1097 
m_TødeRow
.
m_Tøde
.
T_TAX
 = 0;

1099 
eTaxabÀAndWôhhﬁd
:

1100 
m_TødeRow
.
m_Tøde
.
T_TAX
 = 
	`GëCuºítTødeTax
().
	`DﬁœrAmou¡
();

1102 
eTaxabÀAndD⁄tWôhhﬁd
:

1103 
m_TødeRow
.
m_Tøde
.
T_TAX
 = 
	`GëCuºítTødeTax
().
	`DﬁœrAmou¡
();

1106 
	`as£π
(
Ál£
);

1111 
m_TødeRow
.
m_Tøde
.
T_DTS
 = 
	`GëCuºítTødeCom∂ëi⁄Time
();

1113 
m_TødeRow
.
m_Tøde
.
T_LIFO
 = 
	`GëCuºítTødeIsLifo
();

1114 
	}
}

1126 
	gCTødeGí
::
	$Gíî©eTødeCh¨ge
()

1128 
i
;

1129 
PCHARGE_ROW
 
pCh¨geRow
;

1130 
PTRADE_TYPE_ROW
 
pTødeTy≥Row
;

1133 
i
=0; i<
m_Ch¨geFûe
->
	`GëSize
(); ++i)

1135 
pCh¨geRow
 = 
m_Ch¨geFûe
->
	`GëRec‹d
(
i
);

1137 i‡–
	`GëCuºítCu°Tõr
(Ë=
pCh¨geRow
->
CH_C_TIER
 )

1139 
pTødeTy≥Row
 = 
m_TødeTy≥Fûe
->
	`GëRec‹d
(
	`GëCuºítTødeTy≥
());

1141 i‡(!
	`°rcmp
(
pTødeTy≥Row
->
TT_ID
, 
pCh¨geRow
->
CH_TT_ID
))

1144 
m_Com∂ëedTødeInfo
.
Ch¨ge
 = 
pCh¨geRow
->
CH_CHRG
;

1151 
	`as£π
(
Ál£
);

1152 
	}
}

1164 
	gCTødeGí
::
	$Gíî©eTødeCommissi⁄
()

1166 
iCu°Tõr
 = 
	`GëCuºítCu°Tõr
();

1167 
fTødeQty
 = 
	`GëCuºítTødeQty
();

1168 
eTødeTy≥ID
 
eTødeTy≥
 = 
	`GëCuºítTødeTy≥
();

1169 
eExch™geID
 
eExch™ge
 = 
m_SecurôyFûe
->
	`GëExch™geIndex
(
	`GëCuºítSecurôyIndex
());

1170 
PTRADE_TYPE_ROW
 
pTødeTy≥Row
 = 
m_TødeTy≥Fûe
->
	`GëRec‹d
(
eTødeTy≥
);

1171 
TSecurôyI≈utRow
* 
pSecurôyRow
 = 
m_SecurôyFûe
->
	`GëRec‹d
(
	`GëCuºítSecurôyIndex
());

1179 
UINT
 
iCu°omîTõrRec‹ds
 = 
m_Commissi⁄R©eFûe
->
	`GëSize
() / 3;

1184 
UINT
 
iTødeTy≥Rec‹ds
 = 
iCu°omîTõrRec‹ds
 / 
m_TødeTy≥Fûe
->
	`GëSize
();

1189 
UINT
 
iExch™geRec‹ds
 = 
iTødeTy≥Rec‹ds
 / 
m_Exch™geFûe
->
	`GëSize
();

1192 
UINT
 
iSèπIndex
 = ((
iCu°Tõr
 - 1Ë* 
iCu°omîTõrRec‹ds
) +

1193 (()
eTødeTy≥
 * 
iTødeTy≥Rec‹ds
) +

1194 (()
eExch™ge
 * 
iExch™geRec‹ds
);

1195 
UINT
 
iEndIndex
 = 
iSèπIndex
 + 
iExch™geRec‹ds
;

1198 
UINT
 
i
 = 
iSèπIndex
; i < 
iEndIndex
; i++)

1200 
PCOMMISSION_RATE_ROW
 
pCommRow
 = 
m_Commissi⁄R©eFûe
->
	`GëRec‹d
(
i
);

1204 i‡–(
iCu°Tõr
 !
pCommRow
->
CR_C_TIER
)

1205 || (
	`°rcmp
(
pTødeTy≥Row
->
TT_ID
, 
pCommRow
->
CR_TT_ID
))

1206 || (
	`°rcmp
(
pSecurôyRow
->
S_EX_ID
, 
pCommRow
->
CR_EX_ID
))

1213 i‡–
fTødeQty
 >
pCommRow
->
CR_FROM_QTY
 && fTødeQty <pCommRow->
CR_TO_QTY
 )

1216 
m_Com∂ëedTødeInfo
.
Commissi⁄
 = (
fTødeQty
 * 
	`GëCuºítTødePri˚
()) *

1217 
pCommRow
->
CR_RATE
 / 100.0;

1223 
	`as£π
(
Ál£
);

1224 
	}
}

1238 
	gCTødeGí
::
	$Gíî©eTødeTax
()

1240 
TIdít
 
Cu°omîAD_ID
;

1241 
UINT
 
iDivCode
, 
iCåyCode
;

1242 
CM⁄ey
 
fPro˚eds
;

1243 
fCåyR©e
, 
fDivR©e
;

1247 i‡(
	`GëCuºítTødeSñlVÆue
(Ë<
	`GëCuºítTødeBuyVÆue
())

1249 
m_Com∂ëedTødeInfo
.
Tax
 = 0;

1253 
Cu°omîAD_ID
 = 
m_AddªssTabÀ
.
	`GëAD_IDF‹Cu°omî
(
	`GëCuºítCu°ID
());

1255 
m_AddªssTabÀ
.
	`GëDivisi⁄AndCou¡ryCodesF‹Addªss
(
Cu°omîAD_ID
, 
iDivCode
, 
iCåyCode
);

1257 
fPro˚eds
 = 
	`GëCuºítTødeSñlVÆue
(Ë- 
	`GëCuºítTødeBuyVÆue
();

1259 
fCåyR©e
 = 
m_Cu°TaxøãTabÀ
.
	`GëCou¡ryTaxRow
(
	`GëCuºítCu°ID
(), 
iCåyCode
).
TAX_RATE
;

1260 
fDivR©e
 = 
m_Cu°TaxøãTabÀ
.
	`GëDivisi⁄TaxRow
(
	`GëCuºítCu°ID
(), 
iDivCode
).
TAX_RATE
;

1271 
m_Com∂ëedTødeInfo
.
Tax
 = 
fPro˚eds
 *

1272 (()(()(10000.0 * (
fCåyR©e
 + 
fDivR©e
) + 0.5) ) / 10000.0);

1273 
	}
}

1285 
	gCTødeGí
::
	$Gíî©eTødeHi°‹yRow
()

1287 i‡–
	`GëCuºítTødeTy≥
(Ë=
eSt›Loss


1288 || 
	`GëCuºítTødeTy≥
(Ë=
eLimôSñl


1289 || 
	`GëCuºítTødeTy≥
(Ë=
eLimôBuy
)

1291 
m_iTødeHi°‹yRowCou¡
 = 3;

1294 
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_T_ID
 = 
	`GëCuºítTødeID
();

1295 
	`°∫˝y
(
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_ST_ID
,

1296 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
ePídög
)->
ST_ID
,

1297 (
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_ST_ID
));

1298 
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_DTS
 = 
	`GëCuºítTødePídögTime
();

1301 
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_T_ID
 = 
	`GëCuºítTødeID
();

1302 
	`°∫˝y
(
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_ST_ID
,

1303 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
eSubmôãd
)->
ST_ID
,

1304 (
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_ST_ID
));

1305 
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_DTS
 = 
	`GëCuºítTødeSubmissi⁄Time
();

1308 
m_TødeRow
.
m_TødeHi°‹y
[2].
TH_T_ID
 = 
	`GëCuºítTødeID
();

1309 
	`°∫˝y
(
m_TødeRow
.
m_TødeHi°‹y
[2].
TH_ST_ID
,

1310 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
eCom∂ëed
)->
ST_ID
,

1311 (
m_TødeRow
.
m_TødeHi°‹y
[2].
TH_ST_ID
));

1312 
m_TødeRow
.
m_TødeHi°‹y
[2].
TH_DTS
 = 
	`GëCuºítTødeCom∂ëi⁄Time
();

1316 
m_iTødeHi°‹yRowCou¡
 = 2;

1319 
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_T_ID
 = 
	`GëCuºítTødeID
();

1320 
	`°∫˝y
(
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_ST_ID
,

1321 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
eSubmôãd
)->
ST_ID
,

1322 (
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_ST_ID
));

1323 
m_TødeRow
.
m_TødeHi°‹y
[0].
TH_DTS
 = 
	`GëCuºítTødeSubmissi⁄Time
();

1326 
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_T_ID
 = 
	`GëCuºítTødeID
();

1327 
	`°∫˝y
(
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_ST_ID
,

1328 
m_SètusTy≥Fûe
->
	`GëRec‹d
(
eCom∂ëed
)->
ST_ID
,

1329 (
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_ST_ID
));

1330 
m_TødeRow
.
m_TødeHi°‹y
[1].
TH_DTS
 = 
	`GëCuºítTødeCom∂ëi⁄Time
();

1332 
	}
}

1344 
	gCTødeGí
::
	$Gíî©eSëéemítAmou¡
()

1348 i‡(
m_TødeTy≥Fûe
->
	`GëRec‹d
(
	`GëCuºítTødeTy≥
())->
TT_IS_SELL
)

1350 
m_Com∂ëedTødeInfo
.
SëéemítAmou¡
 =

1351 
	`GëCuºítTødeQty
(Ë* 
	`GëCuºítTødePri˚
() -

1352 
m_Com∂ëedTødeInfo
.
Ch¨ge
 -

1353 
m_Com∂ëedTødeInfo
.
Commissi⁄
;

1357 
m_Com∂ëedTødeInfo
.
SëéemítAmou¡
 =

1358 -1 * (
	`GëCuºítTødeQty
(Ë* 
	`GëCuºítTødePri˚
() +

1359 
m_Com∂ëedTødeInfo
.
Ch¨ge
 +

1360 
m_Com∂ëedTødeInfo
.
Commissi⁄
);

1363  
	`GëCuºítTaxSètus
() )

1365 
eN⁄TaxabÀ
:

1367 
eTaxabÀAndWôhhﬁd
:

1368 
m_Com∂ëedTødeInfo
.
SëéemítAmou¡
 -m_Com∂ëedTødeInfo.
Tax
;

1370 
eTaxabÀAndD⁄tWôhhﬁd
:

1373 
	`as£π
(
Ál£
);

1375 
	}
}

1387 
	gCTødeGí
::
	$Gíî©eCashTønß˘i⁄Row
()

1389 
S_NAME
[
cS_NAME_Àn
 + 1];

1391 i‡–
	`GëCuºítTødeIsCash
() )

1393 
m_iCashTønß˘i⁄RowCou¡
 = 1;

1395 
m_TødeRow
.
m_CashTønß˘i⁄
.
CT_DTS
 = 
	`GëCuºítTødeCom∂ëi⁄Time
();

1396 
m_TødeRow
.
m_CashTønß˘i⁄
.
CT_T_ID
 = 
	`GëCuºítTødeID
();

1397 
m_TødeRow
.
m_CashTønß˘i⁄
.
CT_AMT
 = 
	`GëCuºítSëéemítAmou¡
().
	`DﬁœrAmou¡
();

1399 
m_SecurôyTabÀ
.
	`Cª©eName
(
	`GëCuºítSecurôyIndex
(), 
S_NAME
, 
°©ic_ˇ°
<>((S_NAME)));

1401 
	`¢¥ötf
(
m_TødeRow
.
m_CashTønß˘i⁄
.
CT_NAME
,

1402 (
m_TødeRow
.
m_CashTønß˘i⁄
.
CT_NAME
),

1404 (
m_TødeTy≥Fûe
->
	`GëRec‹d
(
	`GëCuºítTødeTy≥
()))->
TT_NAME
,

1405 
	`GëCuºítTødeQty
(),

1406 
S_NAME
);

1410 
m_iCashTønß˘i⁄RowCou¡
 = 0;

1412 
	}
}

1424 
	gCTødeGí
::
	$Gíî©eSëéemítRow
()

1426 
m_iSëéemítRowCou¡
 = 1;

1428 
m_TødeRow
.
m_Sëéemít
.
SE_T_ID
 = 
	`GëCuºítTødeID
();

1430 i‡(
	`GëCuºítTødeIsCash
())

1432 
	`°∫˝y
(
m_TødeRow
.
m_Sëéemít
.
SE_CASH_TYPE
,

1434 (
m_TødeRow
.
m_Sëéemít
.
SE_CASH_TYPE
));

1438 
	`°∫˝y
(
m_TødeRow
.
m_Sëéemít
.
SE_CASH_TYPE
,

1440 (
m_TødeRow
.
m_Sëéemít
.
SE_CASH_TYPE
));

1443 
m_TødeRow
.
m_Sëéemít
.
SE_CASH_DUE_DATE
 = 
	`GëCuºítTødeCom∂ëi⁄Time
();

1444 
m_TødeRow
.
m_Sëéemít
.
SE_CASH_DUE_DATE
.
	`Add
(2, 0);

1445 
m_TødeRow
.
m_Sëéemít
.
SE_CASH_DUE_DATE
.
	`SëHMS
(0,0,0,0);

1446 
m_TødeRow
.
m_Sëéemít
.
SE_AMT
 = 
	`GëCuºítSëéemítAmou¡
().
	`DﬁœrAmou¡
();

1447 
	}
}

	@src/workload/tpce/egen/WheelTime.cpp

42 
	~"w‹klﬂd/ç˚/egí/WhìlTime.h
"

44 
usög
 
«me•a˚
 
	gTPCE
;

46 
	gCWhìlTime
::
	$CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
 )

47 : 
	`m_pWhìlC⁄fig
–
pWhìlC⁄fig
 )

48 , 
	`m_Cy˛es
( 0 )

49 , 
	$m_Index
( 0 )

51 
	}
}

53 
	gCWhìlTime
::
	$CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
, 
INT32
 
cy˛es
, INT32 
ödex
 )

54 : 
	`m_pWhìlC⁄fig
–
pWhìlC⁄fig
 )

55 , 
	`m_Cy˛es
–
cy˛es
 )

56 , 
	$m_Index
–
ödex
 )

58 
	}
}

60 
	gCWhìlTime
::
	$CWhìlTime
–
PWhìlC⁄fig
 
pWhìlC⁄fig
, 
CD©eTime
& 
Ba£
, CD©eTime& 
Now
, 
INT32
 
off£t
 )

61 : 
	$m_pWhìlC⁄fig
–
pWhìlC⁄fig
 )

63 
	`Së
–
Ba£
 , 
Now
 );

64 
	`Add
–
off£t
 );

65 
	}
}

67 
	gCWhìlTime
::~
	$CWhìlTime
( )

69 
	}
}

71 
CWhìlTime
::
	$Add
–
INT32
 
I¡îvÆ
 )

74 
m_Cy˛es
 +
I¡îvÆ
 / 
m_pWhìlC⁄fig
->
WhìlSize
;

75 
m_Index
 +
I¡îvÆ
 % 
m_pWhìlC⁄fig
->
WhìlSize
;

76 if–
m_Index
 >
m_pWhìlC⁄fig
->
WhìlSize
 )

79 
m_Cy˛es
++;

80 
m_Index
 -
m_pWhìlC⁄fig
->
WhìlSize
;

82 
	}
}

84 
INT32
 
	gCWhìlTime
::
	$Off£t
–c⁄° 
CWhìlTime
& 
Time
 )

86 
INT32
 
I¡îvÆ
;

88 
I¡îvÆ
 = ( 
m_Cy˛es
 - 
Time
.m_Cy˛e†Ë* 
m_pWhìlC⁄fig
->
WhìlSize
;

89 
I¡îvÆ
 +–
m_Index
 - 
Time
.m_Index );

90 –
I¡îvÆ
 );

91 
	}
}

93 
	gCWhìlTime
::
	$Së
–
INT32
 
cy˛es
, INT32 
ödex
 )

95 
m_Cy˛es
 = 
cy˛es
;

96 
m_Index
 = 
ödex
;

97 
	}
}

100 
	gCWhìlTime
::
	$Së
–
CD©eTime
& 
Ba£
, CD©eTime& 
Now
 )

102 
INT32
 
off£t
;

106 
off£t
 = 
Now
.
	`DiffInMûliSec⁄ds
–
Ba£
 ) / 
m_pWhìlC⁄fig
->
WhìlResﬁuti⁄
;

107 
m_Cy˛es
 = 
off£t
 / 
m_pWhìlC⁄fig
->
WhìlSize
;

108 
m_Index
 = 
off£t
 % 
m_pWhìlC⁄fig
->
WhìlSize
;

109 
	}
}

112 
	gCWhìlTime
::
	$Së
–
CD©eTime
* 
pBa£
, CD©eTime* 
pNow
 )

114 
INT32
 
off£t
;

118 
off£t
 = 
pNow
->
	`DiffInMûliSec⁄ds
–
pBa£
 ) / 
m_pWhìlC⁄fig
->
WhìlResﬁuti⁄
;

119 
m_Cy˛es
 = 
off£t
 / 
m_pWhìlC⁄fig
->
WhìlSize
;

120 
m_Index
 = 
off£t
 % 
m_pWhìlC⁄fig
->
WhìlSize
;

121 
	}
}

123 
boﬁ
 
	gCWhìlTime
::
›î©‹
 <(c⁄° 
CWhìlTime
& 
Time
)

125  ( 
m_Cy˛es
 =
Time
.m_Cy˛e†Ë? ( 
m_Index
 < Time.m_Index ) : ( m_Cycles < Time.m_Cycles );

128 
	gCWhìlTime
& CWhìlTime::
›î©‹
 = (c⁄° 
CWhìlTime
& 
Time
)

130 
m_pWhìlC⁄fig
 = 
Time
.m_pWheelConfig;

131 
	gm_Cy˛es
 = 
Time
.
m_Cy˛es
;

132 
	gm_Index
 = 
Time
.
m_Index
;

134  *
	gthis
;

137 
	gCWhìlTime
& CWhìlTime::
›î©‹
 +–c⁄° 
INT32
& 
I¡îvÆ
 )

139 
Add
–
I¡îvÆ
 );

140  *
	gthis
;

143 
CWhìlTime
 
	gCWhìlTime
::
›î©‹
 ++ ( 
INT32
 )

145 
Add
( 1 );

146  *
	gthis
;

	@src/workload/tpce/egen/bucketsimulator.cpp

38 
	~"w‹klﬂd/ç˚/egí/thªadög.h
"

39 
	~"w‹klﬂd/ç˚/egí/unu£dÊag.h
"

41 
	~<°dex˚±
>

42 
	~<iom™ù
>

44 
	~"w‹klﬂd/ç˚/egí/buckësimuœt‹.h
"

47 
«me•a˚
 
	gTPCE


50 
	gBuckëSimuœt‹
::
BuckëSimuœt‹
(

51 
ôî°¨t
,

52 
ôîcou¡
,

53 
TIdít
 
iCu°omîCou¡
,

54 
TIdít
 
sim‹dîs
,

55 
TPCE
::
RNGSEED
 
ba£_£ed
,

56 
BuckëProgªss
& 
¥ogªss
)

57 : 
m_∫d
()

58 , 
m_buckës
(
NULL
)

59 , 
m_cu°cou¡
(
iCu°omîCou¡
)

60 , 
m_ôî°¨t
(
ôî°¨t
)

61 , 
m_ôîcou¡
(
ôîcou¡
)

62 , 
m_ba££ed
(
ba£_£ed
)

63 , 
m_sim‹dîs
(
sim‹dîs
)

64 , 
m_maxbuckë
(
°©ic_ˇ°
<>(
iCu°omîCou¡
/
iDeÁu…LﬂdUnôSize
))

65 , 
m_¥ogªss
(
¥ogªss
)

67 i‡(
	giCu°omîCou¡
 % 
	giDeÁu…LﬂdUnôSize
 != 0) {

68 
throw
 
°d
::
ønge_îr‹
("The customer count must beán integral multiple ofÅheÜoad unit size!");

70 i‡(
	gm_maxbuckë
 < 2) {

71 
throw
 
	g°d
::
ønge_îr‹
("Bucket simulator must haveátÜeast 2 buckets!");

73 
	gm_buckës
 = 
√w
 
INT64
[
m_maxbuckë
];

76 
	gBuckëSimuœt‹
::~
BuckëSimuœt‹
() {

77 
dñëe
[] 
m_buckës
;

82 
	gBuckëSimuœt‹
::
ˇlc_°ddev
() {

83 
sum
 = 0;

84 
	gi
 = 0; i < 
	gm_maxbuckë
; ++i) {

85 
	gsum
 +
m_buckës
[
i
];

87 
	gmón
 = 
sum
/()
m_maxbuckë
;

89 
	gsumdev2
 = 0;

90 
	gi
 = 0; i < 
	gm_maxbuckë
; ++i) {

91 
	gsumdev2
 +(
m_buckës
[
i
] - 
món
) * (m_buckets[i] - mean);

93 
	g°ddev
 = 
sqπ
–
sumdev2
/()(
m_maxbuckë
-1) );

95  
	g°ddev
;

101 
	gBuckëSimuœt‹
::
simuœã_⁄îun
(
INT64
 
i‹dîs
) {

102 
buckë
;

104 
mem£t
(
m_buckës
, 0, (m_buckës[0])*
m_maxbuckë
);

106 
INT64
 
	gi
 = 0; i < 
	gi‹dîs
; ++i) {

107 
	gbuckë
 = 
m_∫d
.
RndI¡R™ge
–0, 
°©ic_ˇ°
<>((
m_cu°cou¡
 - 1Ë/ sètic_ˇ°<
TIdít
>(
iDeÁu…LﬂdUnôSize
)) );

108 
	gm_buckës
[
buckë
] += 1;

111  
ˇlc_°ddev
();

116 
	gBuckëSimuœt‹
::
simuœã
() {

117 
max_°ddev
 = 0;

118 
	gTPCE
::
RNGSEED
 
£ed
 = 
m_∫d
.
RndNthEÀmít
(
m_ba££ed
,

119 (
RNGSEED
)(
m_ôî°¨t
*
m_sim‹dîs
*
RND_STEP_PER_ORDER
));

120 
	gm_∫d
.
SëSìd
(
£ed
);

121 
	gi
 = 0; i < 
	gm_ôîcou¡
; ++i) {

122 
	gTPCE
::
RNGSEED
 
cuºít_£ed
 = 
m_∫d
.
GëSìd
();

123 
	g°ddev
 = 
simuœã_⁄îun
(
m_sim‹dîs
);

125 
	g°d
::
o°rög°ªam
 
°rm
;

126 
	g°rm
 << "StdDev f‹Ñu¿" << 
	gi
+
	gm_ôî°¨t
 << " is "

127 << 
	g°d
::
£çªcisi⁄
(3Ë<< 
°d
::
fixed


128 << 
°ddev
 << ", sìd wa†" << 
cuºít_£ed
;

129 
	gm_¥ogªss
.
mesßge
(
°rm
.
°r
(), 1);

131 i‡(
	gmax_°ddev
 < 
	g°ddev
) {

132 
	gmax_°ddev
 = 
°ddev
;

134 i‡(!
	gm_¥ogªss
.
ªp‹t
(
°ddev
)){

138  
	gmax_°ddev
;

142 
	gBuckëSimuœt‹
::
run
(* 
thªad
 
UNUSED
) {

143 
simuœã
();

148 
	gBuckëProgªss
::
BuckëProgªss
(
ac˚±abÀ_°ddev
, 
tŸÆ_ö
, 
vîbosôy
, 
°d
::
o°ªam
* 
ouçut
)

149 : 
ProgªssMëî
(
tŸÆ_ö
, 
vîbosôy
, 
ouçut
)

150 , 
ac˚±abÀ_°ddev_
(
ac˚±abÀ_°ddev
)

151 , 
max_°ddev_
(0)

155 
	gBuckëProgªss
::
di•œy_mesßge
(
°d
::
o°ªam
& 
out
) const

157 
ProgªssMëî
::
di•œy_mesßge
(
out
);

158 
	gout
 << " stddev=" << 
	gmax_°ddev_
;

161 
boﬁ
 
	gBuckëProgªss
::
ªp‹t
(
°ddev
) {

162 
öc
();

163 
	gTPCE
::
Lockî
<
ProgªssMëî
> 
lockî
(*
this
);

164 i‡(
	gmax_°ddev_
 < 
	g°ddev
) {

165 
	gmax_°ddev_
 = 
°ddev
;

167  (
	gmax_°ddev_
 < 
	gac˚±abÀ_°ddev_
);

170 
	gBuckëProgªss
::
max_°ddev
() {

171 
TPCE
::
Lockî
<
ProgªssMëî
> 
lockî
(*
this
);

172  
	gmax_°ddev_
;

	@src/workload/tpce/egen/error.cpp

37 
	~"w‹klﬂd/ç˚/egí/EGíUtûôõs_°dafx.h
"

39 
usög
 
«me•a˚
 
	gTPCE
;

41 
	gCSy°emEº
::
	$CSy°emEº
(
A˘i⁄
 
eA˘i⁄
, c⁄° * 
szLoˇti⁄
)

42 : 
	`CBa£Eº
(
szLoˇti⁄
)

43 , 
	$m_eA˘i⁄
(
eA˘i⁄
)

45 #ifde‡
WIN32


46 
m_idMsg
 = 
	`GëLa°Eº‹
();

47 #ñi‡(
__unix
Ë|| (
_AIX
)

48 
m_idMsg
 = 
î∫o
;

50 #îr‹ 
No
 
sy°em
 
îr‹
 
routöe
 
deföed
.

52 
	}
}

54 
	gCSy°emEº
::
	$CSy°emEº
(
iEº‹
, 
A˘i⁄
 
eA˘i⁄
, c⁄° * 
szLoˇti⁄
)

55 : 
	`CBa£Eº
(
szLoˇti⁄
)

56 , 
	$m_eA˘i⁄
(
eA˘i⁄
)

60 
m_idMsg
 = 
iEº‹
;

61 
	}
}

63 c⁄° * 
	gCSy°emEº
::
	$Eº‹Text
() const

65  
	`°ªº‹
(
m_idMsg
);

66 
	}
}

	@src/workload/tpce/egen/locking.cpp

37 
	~"w‹klﬂd/ç˚/egí/lockög.h
"

39 #i‚de‡
WIN32


40 
	~<io°ªam
>

41 
	~<s°ªam
>

42 
	~<°dex˚±
>

43 
	~<˚ºno
>

44 
	~<c°dlib
>

45 
	~<sys/time.h
>

47 
usög
 
	g°d
::
°ªº‹
;

48 
usög
 
	g°d
::
exô
;

51 
	~"w‹klﬂd/ç˚/egí/îr‹.h
"

53 
«me•a˚
 
	gTPCE


56 #ifde‡
WIN32


62 
	gCMuãx
::
CMuãx
()

63 : 
muãx_
()

65 
InôülizeCrôiˇlSe˘i⁄
(&
muãx_
);

68 
	gCMuãx
::~
CMuãx
()

70 
DñëeCrôiˇlSe˘i⁄
(&
muãx_
);

73 
LPCRITICAL_SECTION
 
	gCMuãx
::
muãx
()

75  &
muãx_
;

78 
	gCMuãx
::
lock
()

80 
E¡îCrôiˇlSe˘i⁄
(&
muãx_
);

83 
	gCMuãx
::
u∆ock
()

85 
LóveCrôiˇlSe˘i⁄
(&
muãx_
);

94 
	gCMuãx
::
CMuãx
()

95 : 
muãx_
()

97 
rc
 = 
±hªad_muãx_öô
(&
muãx_
, 
NULL
);

98 i‡(
	grc
 != 0) {

99 
°d
::
o°rög°ªam
 
°rm
;

100 
	g°rm
 << "±hªad_muãx_öôÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

101 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

105 
	gCMuãx
::~
CMuãx
()

107 
rc
 = 
±hªad_muãx_de°roy
(&
muãx_
);

108 i‡(
	grc
 != 0) {

109 
°d
::
o°rög°ªam
 
°rm
;

110 
	g°rm
 << "±hªad_muãx_de°royÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

111 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

115 
±hªad_muãx_t
* 
	gCMuãx
::
muãx
()

117  &
muãx_
;

120 
	gCMuãx
::
lock
()

122 
rc
 = 
±hªad_muãx_lock
(&
muãx_
);

123 i‡(
	grc
 != 0) {

124 
°d
::
o°rög°ªam
 
°rm
;

125 
	g°rm
 << "±hªad_c⁄d_waôÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

126 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

130 
	gCMuãx
::
u∆ock
()

132 
rc
 = 
±hªad_muãx_u∆ock
(&
muãx_
);

133 i‡(
	grc
 != 0) {

134 
°d
::
o°rög°ªam
 
°rm
;

135 
	g°rm
 << "±hªad_c⁄d_waôÉº‹: " << 
°ªº‹
(
rc
Ë<< "(" << 
	grc
 << ")";

136 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

	@src/workload/tpce/egen/progressmeter.cpp

37 
	~"w‹klﬂd/ç˚/egí/thªadög.h
"

39 
	~<io°ªam
>

41 
	~"w‹klﬂd/ç˚/egí/¥ogªssmëî.h
"

42 
	~"w‹klﬂd/ç˚/egí/°rutû.h
"

44 
«me•a˚
 
	gTPCE


48 
	gProgªssMëî
::
ProgªssMëî
(
tŸÆ_ö
, 
vîbosôy
, 
°d
::
o°ªam
* 
ouçut
)

49 : 
m_tŸÆ
(
tŸÆ_ö
)

50 , 
m_cuºít
(0)

51 , 
m_di•œy_öãrvÆ
(10)

52 , 
m_°¨t_time
()

53 , 
m_œ°_time
(
m_°¨t_time
)

54 , 
m_ouçut
(
ouçut
)

55 , 
m_vîbosôy
(
vîbosôy
)

56 , 
m_muãx
()

62 
	gProgªssMëî
::
£t_di•œy_öãrvÆ
(
vÆ
) {

63 
TPCE
::
Lockî
<
ProgªssMëî
> 
lockî
(*
this
);

64 
	gm_di•œy_öãrvÆ
 = 
vÆ
;

67 
	gProgªssMëî
::
di•œy_öãrvÆ
() const {

68 
TPCE
::
Lockî
<c⁄° 
ProgªssMëî
> 
lockî
(*
this
);

69  
	gm_di•œy_öãrvÆ
;

73 
	gProgªssMëî
::
di•œy
() const {

74 
TPCE
::
Lockî
<c⁄° 
ProgªssMëî
> 
lockî
(*
this
);

75 
di•œy_mesßge
(*
m_ouçut
);

76 (*
	gm_ouçut
Ë<< 
	g°d
::
ídl
;

83 
	gProgªssMëî
::
di•œy_mesßge
(
°d
::
o°ªam
& 
out
) const {

84 
CD©eTime
 
now
;

85 
INT32
 
	gñ≠£d_ö_ms
 = 
now
.
DiffInMûliSec⁄ds
(
m_°¨t_time
);

86 
	gøã
 = 
°©ic_ˇ°
<>(
ñ≠£d_ö_ms
)/°©ic_ˇ°<>(
m_cuºít
)/1000.0;

87 
	gout
 << 
	gm_cuºít
 << "/" << 
	gm_tŸÆ


88 << " (" << 
	gm_cuºít
*100/
	gm_tŸÆ
 << "%)"

89 << " [Remaö: " << 
öt64tŸime°r
(()(
øã
*()(
m_tŸÆ
-
m_cuºít
))) << ", "

90 << "Eœp£d: " << 
öt64tŸime°r
(
ñ≠£d_ö_ms
/1000) << "]"

100 
	gProgªssMëî
::
öc
(
cou¡
) {

101 
CD©eTime
 
now
;

103 
	gTPCE
::
Lockî
<
ProgªssMëî
> 
lockî
(*
this
);

104 
	gm_cuºít
 +
cou¡
;

105 i‡(
	gm_vîbosôy
 <0 || 
m_di•œy_öãrvÆ
 < 0 || 
now
.
DiffInMûliSec⁄ds
(
m_œ°_time
) <= m_display_interval*1000) {

108 
	gm_œ°_time
.
SëToCuºít
();

110 
di•œy
();

114 
	gProgªssMëî
::
cuºít
() const

116 
TPCE
::
Lockî
<c⁄° 
ProgªssMëî
> 
lockî
(*
this
);

117  
	gm_cuºít
;

121 
	gProgªssMëî
::
tŸÆ
() const

123 
TPCE
::
Lockî
<c⁄° 
ProgªssMëî
> 
lockî
(*
this
);

124  
	gm_tŸÆ
;

131 
	gProgªssMëî
::
mesßge
(c⁄° 
°d
::
°rög
& 
mesg
, 
Àvñ
) {

132 
	gTPCE
::
Lockî
<
ProgªssMëî
> 
lockî
(*
this
);

133 i‡(
	gÀvñ
 >
m_vîbosôy
) {

136 (*
	gm_ouçut
Ë<< 
	gmesg
 << 
	g°d
::
ídl
;

139 
	gProgªssMëî
::
lock
() const

141 
m_muãx
.
lock
();

144 
	gProgªssMëî
::
u∆ock
() const

146 
m_muãx
.
u∆ock
();

	@src/workload/tpce/egen/progressmeterinterface.cpp

37 
	~"w‹klﬂd/ç˚/egí/¥ogªssmëîöãrÁ˚.h
"

38 
	~"w‹klﬂd/ç˚/egí/unu£dÊag.h
"

40 
«me•a˚
 
	gTPCE


44 
	gProgªssMëîI¡îÁ˚
::~
ProgªssMëîI¡îÁ˚
()

48 
ProgªssMëîI¡îÁ˚
::
di•œy
() const

52 
ProgªssMëîI¡îÁ˚
::
öc
(
cou¡
 
UNUSED
)

56 
ProgªssMëîI¡îÁ˚
::
mesßge
(c⁄° 
°d
::
°rög
& 
mesg
 
UNUSED
, 
Àvñ
 UNUSED)

	@src/workload/tpce/egen/strutil.cpp

37 
	~<iom™ù
>

38 
	~<s°ªam
>

39 
	~<°dex˚±
>

41 
	~<c°dlib
>

42 
	~<˚ºno
>

43 
	~<°dlib.h
>

45 
	~"w‹klﬂd/ç˚/egí/EGíSènd¨dTy≥s.h
"

47 #ifde‡
WIN32


48 
	#°πouŒ
 
_°πoui64


	)

51 
usög
 
	g°d
::
°πoul
;

52 
usög
 
	g°d
::
°πod
;

54 
«me•a˚
 
	gTPCE
 {

60 
INT64
 
°πoöt64
(c⁄° *
±r
) {

61 
INT64
 
	gvÆ
;

62 *
	gídp
;

63 
	gî∫o
 = 0;

64 
	gvÆ
 = 
°πouŒ
(
±r
, &
ídp
, 0);

65 i‡(
	gî∫o
 != 0) {

66 
°d
::
o°rög°ªam
 
°rm
;

67 
	g°rm
 << "U«bÀÅÿ∑r£ i¡egî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

68 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

70 *
	gídp
) {

71 'G': 
vÆ
 *= 1000*1000*1000; ;

72 'M': 
vÆ
 *= 1000*1000; ;

73 'K': 
vÆ
 *= 1000; ;

74 '\0': 
ídp
--; ;

76 
°d
::
o°rög°ªam
 
°rm
;

77 
	g°rm
 << "U«bÀÅÿ∑r£ invÆid sˇÀ fa˘‹ o¿öãgî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

78 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

80 i‡(*++
	gídp
 != '\0') {

81 
°d
::
o°rög°ªam
 
°rm
;

82 
	g°rm
 << "U«bÀÅÿ∑r£Åøûög ch¨a˘î†⁄ i¡egî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

83 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

85  
	gvÆ
;

92 
°πodbl
(c⁄° *
±r
) {

93 
	gvÆ
;

94 *
	gídp
;

95 
	gî∫o
 = 0;

96 
	gvÆ
 = 
°πod
(
±r
, &
ídp
);

97 i‡(
	gî∫o
 != 0) {

98 
°d
::
o°rög°ªam
 
°rm
;

99 
	g°rm
 << "U«bÀÅÿ∑r£ flﬂtögÖoöànumbî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

100 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

102 *
	gídp
) {

103 'G': 
vÆ
 *= 1000.0*1000.0*1000.0; ;

104 'M': 
vÆ
 *= 1000.0*1000.0; ;

105 'K': 
vÆ
 *= 1000.0; ;

106 '\0': 
ídp
--; ;

108 
°d
::
o°rög°ªam
 
°rm
;

109 
	g°rm
 << "U«bÀÅÿ∑r£ invÆid sˇÀ fa˘‹ o¿ÊﬂtögÖoöànumbî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

110 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

112 i‡(*++
	gídp
 != '\0') {

113 
°d
::
o°rög°ªam
 
°rm
;

114 
	g°rm
 << "U«bÀÅÿ∑r£Åøûög ch¨a˘î†⁄ flﬂtögÖoöànumbî '" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

115 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

117  
	gvÆ
;

124 
INT64
 
time°πoöt64
(c⁄° *
±r
) {

125 
INT64
 
	gvÆ
;

126 *
	gídp
;

127 
	gî∫o
 = 0;

128 
	gvÆ
 = 
°πoul
(
±r
, &
ídp
, 0);

129 i‡(*
	gídp
 == ':') {

130 
vÆ
 = vÆ*60 + 
°πoul
(
ídp
+1, &endp, 0);

131 i‡(*
	gídp
 == ':') {

132 
vÆ
 = vÆ*60 + 
°πoul
(
ídp
+1, &endp, 0);

135 i‡(
	gî∫o
 !0 || *
ídp
 != '\0') {

136 
°d
::
o°rög°ªam
 
°rm
;

137 
	g°rm
 << "U«bÀÅÿ∑r£Åimê'" << 
	g±r
 << "'" << 
	g°d
::
ídl
;

138 
throw
 
	g°d
::
ru¡ime_îr‹
(
°rm
.
°r
());

140  
	gvÆ
;

146 
	g°d
::
°rög
 
öt64tŸime°r
(
INT64
 
vÆ
) {

147 
°d
::
o°rög°ªam
 
°rm
;

148 
	g£c
 = 
°©ic_ˇ°
<>(
vÆ
 % 60);

149 
	gvÆ
 /= 60;

150 
	gmö
 = 
°©ic_ˇ°
<>(
vÆ
 % 60);

151 
	ghrs
 = 
°©ic_ˇ°
<>(
vÆ
 / 60);

153 
	g°rm
 << 
	g°d
::
£tfûl
('0');

154 i‡(
	ghrs
) {

155 
	g°rm
 << 
	g°d
::
£tw
(2Ë<< 
hrs
 << ":";

157 
	g°rm
 << 
	g°d
::
£tw
(2Ë<< 
mö
 << ":" << 
°d
::£tw(2Ë<< 
£c
;

159  
	g°rm
.
°r
();

	@src/workload/tpce/egen/threading.cpp

37 
	~"w‹klﬂd/ç˚/egí/thªadög.h
"

39 
	~<io°ªam
>

40 
	~<s°ªam
>

41 
	~<°dex˚±
>

42 
	~<˚ºno
>

43 
	~<c°dlib
>

45 
	~"w‹klﬂd/ç˚/egí/îr‹.h
"

47 
usög
 
	g°d
::
°ªº‹
;

48 
usög
 
	g°d
::
exô
;

50 
«me•a˚
 
	gTPCE


53 
	gThªadBa£
::~
ThªadBa£
()

57 #ifde‡
WIN32


58 
DWORD
 
WINAPI
 
°¨t_thªad
(
LPVOID
 
¨g
)

61 * 
°¨t_thªad
(*
¨g
)

64 
ThªadBa£
* 
thrd
 = 
ªöãΩªt_ˇ°
<ThªadBa£*>(
¨g
);

68 
åy
 {

69 
thrd
->
övoke
();

70  
NULL
;

71 } 
ˇtch
 (
°d
::
ex˚±i⁄
& 
e
) {

72 
°d
::
˚º
 << "CaughàEx˚±i⁄: " << 
e
.
wh©
(Ë<< std::
ídl
;

73 } 
ˇtch
 (...) {

74 
°d
::
˚º
 << "CaughàEx˚±i⁄: Unknown" << std::
ídl
;

76 
exô
 (1);

77  
NULL
;

	@src/workload/tpce/shore_tpce_client.cpp

31 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_˛õ¡.h
"

34 
ENTER_NAMESPACE
(
ç˚
);

45 
	gba£löe_ç˚_˛õ¡_t
::
	$ba£löe_ç˚_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

46 
Sh‹eTPCEEnv
* 
ív
,

47 c⁄° 
MósuªmítTy≥
 
aTy≥
,

48 c⁄° 
åxid
,

49 c⁄° 
numOfTrxs
,

50 
¥o˚ss‹id_t
 
≠rsid
,

51 c⁄° 
£lID
, c⁄° 
qf
)

52 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

53 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

55 
	`as£π
 (
ív
);

56 
	`as£π
 (
_id
>=0 && 
_qf
>0);

59 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

60 
	`as£π
 (
_w‹kî
);

61 
	}
}

64 c⁄° 
	gba£löe_ç˚_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

67 
°m≠
.
	`˛ór
();

69 
°m≠
[
XCT_TPCE_MIX
] = "TPC-E MIX";

70 
°m≠
[
XCT_TPCE_BROKER_VOLUME
] = "TPC-E BROKER_VOLUME";

71 
°m≠
[
XCT_TPCE_CUSTOMER_POSITION
]= "TPC-E CUSTOMER_POSITION";

72 
°m≠
[
XCT_TPCE_MARKET_FEED
] = "TPC-E MARKET_FEED";

73 
°m≠
[
XCT_TPCE_MARKET_WATCH
] = "TPC-E MARKET_WATCH";

74 
°m≠
[
XCT_TPCE_SECURITY_DETAIL
] = "TPC-E SECURITY_DETAIL";

75 
°m≠
[
XCT_TPCE_TRADE_LOOKUP
] = "TPC-E TRADE_LOOKUP";

76 
°m≠
[
XCT_TPCE_TRADE_ORDER
] = "TPC-E TRADE_ORDER";

77 
°m≠
[
XCT_TPCE_TRADE_RESULT
] = "TPC-E TRADE_RESULT";

78 
°m≠
[
XCT_TPCE_TRADE_STATUS
] = "TPC-E TRADE_STATUS";

79 
°m≠
[
XCT_TPCE_TRADE_UPDATE
] = "TPC-E TRADE_UPDATE";

80 
°m≠
[
XCT_TPCE_DATA_MAINTENANCE
] = "TPC-E DATA_MAINTENANCE";

81 
°m≠
[
XCT_TPCE_TRADE_CLEANUP
] = "TPC-E TRADE_CLEANUP";

83  (
°m≠
.
	`size
());

84 
	}
}

98 
w_rc_t
 
	gba£löe_ç˚_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

101 
åx_ªsu…_tu∂e_t
 
©π
;

102 
boﬁ
 
bWake
 = 
Ál£
;

103 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

104 
©π
.
	`£t_nŸify
(
c
);

105 
bWake
 = 
åue
;

109 
£lid
 = 
_£lid
;

114 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

115 
tid_t
 
©id
;

116 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
£lid
);

119 
	`as£π
 (
_w‹kî
);

120 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

121  (
RCOK
);

122 
	}
}

125 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_env.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

35 
	~<w_deföes.h
>

36 
	~"w‹klﬂd/ç˚/egí/CE.h
"

37 
	~<°dio.h
>

39 
usög
 
«me•a˚
 
	gsh‹e
;

40 
usög
 
«me•a˚
 
	gTPCE
;

46 
ENTER_NAMESPACE
(
sh‹e
);

47 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
£˘‹
);

48 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
ch¨ge
);

49 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
commissi⁄_øã
);

50 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
exch™ge
);

51 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
ödu°ry
);

52 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
°©us_ty≥
);

53 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
èxøã
);

54 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
åade_ty≥
);

55 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
zù_code
);

56 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
ˇsh_å™ß˘i⁄
);

57 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
£âÀmít
);

58 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
åade
);

59 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
åade_hi°‹y
);

60 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
åade_ªque°
);

61 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
accou¡_≥rmissi⁄
);

62 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
brokî
);

63 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
com∑ny
);

64 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
cu°omî
);

65 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
com∑ny_com≥tô‹
);

66 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
£curôy
);

67 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
cu°omî_accou¡
);

68 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
daûy_m¨kë
);

69 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
cu°omî_èxøã
);

70 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
hﬁdög
);

71 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
fö™cül
);

72 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
hﬁdög_hi°‹y
);

73 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
addªss
);

74 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
hﬁdög_summ¨y
);

75 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
œ°_åade
);

76 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
w©ch_ôem
);

77 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
√ws_ôem
);

78 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
w©ch_li°
);

79 
DEFINE_ROW_CACHE_TLS
(
ç˚
, 
√ws_xªf
);

80 
EXIT_NAMESPACE
(
sh‹e
);

84 
ENTER_NAMESPACE
(
ç˚
);

86 
CCETxnI≈utGíî©‹
* 
	gm_TxnI≈utGíî©‹
;

87 
CDM
* 
	gm_CDM
;

88 
CMEESUT
* 
	gmìsut
;

89 
CMEE
* 
	gmì
;

90 
MFBuf„r
* 
	gM¨këFìdI≈utBuf„r
;

91 
TRBuf„r
* 
	gTødeResu…I≈utBuf„r
;

93 #ifde‡
COMPILE_FLAT_FILE_LOAD


94 
FILE
 *
	gfs£c
, *
	gfshs
;

100 
	$AutoR™d
()

102 
timevÆ
 
tv
;

103 
tm
 
…r
;

104 
	`gëtimeofday
(&
tv
, 
NULL
);

105 
tm
* 
…
 = 
	`loˇ…ime_r
(&
tv
.
tv_£c
, &
…r
);

106  (((
…
->
tm_hour
 * 
MöuãsPîHour
 +Üt->
tm_mö
Ë* 
Sec⁄dsPîMöuã
 +

107 
…
->
tm_£c
Ë* 
MsPîSec⁄d
 + 
tv
.
tv_u£c
 / 1000);

108 
	}
}

110 
	$£tRNGSìds
(
CCETxnI≈utGíî©‹
* 
gí
, 
UniqueId
 )

112 
CD©eTime
 
Now
;

113 
INT32
 
Ba£Yór
;

114 
INT32
 
Tmp1
, 
Tmp2
;

116 
Now
.
	`GëYMD
–&
Ba£Yór
, &
Tmp1
, &
Tmp2
 );

119 
Ba£Yór
 -= ( BaseYear % 5 );

120 
CD©eTime
 
	`Ba£
–
Ba£Yór
, 1, 1 );

124 
RNGSEED
 
Sìd
;

125 
Sìd
 = 
Now
.
	`MSec
() / 100;

130 
Sìd
 <<= 11;

131 
Sìd
 +(
RNGSEED
)((
INT64
)
Now
.
	`DayNo
(Ë- (INT64)
Ba£
.DayNo());

137 
Sìd
 <<= 33;

142 
Sìd
 +
UniqueId
;

145 
gí
->
	`SëRNGSìd
–
Sìd
 );

149 
Sìd
 |
	`UINT64_CONST
(0x0000000100000000);

150 
gí
->
	`SëRNGSìd
–
Sìd
 );

152 
	}
}

156 
	$¥ötC¨döÆôy
()

158 
	`¥ötf
("accou¡Pîmissi⁄Buf„r.gëC¡(Ë %d\n",
accou¡Pîmissi⁄Buf„r
.
	`gëC¡
() );

159 
	`¥ötf
("cu°omîAccou¡Buf„r.gëC¡(Ë %d\n",
cu°omîAccou¡Buf„r
.
	`gëC¡
() );

160 
	`¥ötf
("cu°omîTaxøãBuf„r.gëC¡(Ë %d\n",
cu°omîTaxøãBuf„r
.
	`gëC¡
() );

161 
	`¥ötf
("cu°omîBuf„r.gëC¡(Ë %d\n",
cu°omîBuf„r
.
	`gëC¡
() );

162 
	`¥ötf
("hﬁdögBuf„r.gëC¡(Ë %d\n",
hﬁdögBuf„r
.
	`gëC¡
() );

163 
	`¥ötf
("w©chIãmBuf„r.gëC¡(Ë %d\n",
w©chIãmBuf„r
.
	`gëC¡
() );

164 
	`¥ötf
("w©chLi°Buf„r.gëC¡(Ë %d\n",
w©chLi°Buf„r
.
	`gëC¡
() );

165 
	`¥ötf
("brokîBuf„r.gëC¡(Ë %d\n",
brokîBuf„r
.
	`gëC¡
() );

166 
	`¥ötf
("ˇshTønß˘i⁄Buf„r.gëC¡(Ë %d\n",
ˇshTønß˘i⁄Buf„r
.
	`gëC¡
() );

167 
	`¥ötf
("ch¨geBuf„r.gëC¡(Ë %d\n",
ch¨geBuf„r
.
	`gëC¡
() );

168 
	`¥ötf
("hﬁdögHi°‹yBuf„r.gëC¡(Ë %d\n",
hﬁdögHi°‹yBuf„r
.
	`gëC¡
() );

169 
	`¥ötf
("hﬁdögSumm¨yBuf„r.gëC¡(Ë %d\n",
hﬁdögSumm¨yBuf„r
.
	`gëC¡
() );

170 
	`¥ötf
("commissi⁄R©eBuf„r.gëC¡(Ë %d\n",
commissi⁄R©eBuf„r
.
	`gëC¡
() );

171 
	`¥ötf
("com∑nyBuf„r.gëC¡(Ë %d\n",
com∑nyBuf„r
.
	`gëC¡
() );

172 
	`¥ötf
("com∑nyCom≥tô‹Buf„r.gëC¡(Ë %d\n",
com∑nyCom≥tô‹Buf„r
.
	`gëC¡
() );

173 
	`¥ötf
("daûyM¨këBuf„r.gëC¡(Ë %d\n",
daûyM¨këBuf„r
.
	`gëC¡
() );

176 
	`¥ötf
("£âÀmítBuf„r.gëC¡(Ë %d\n",
£âÀmítBuf„r
.
	`gëC¡
() );

177 
	`¥ötf
("åadeBuf„r.gëC¡(Ë %d\n",
åadeBuf„r
.
	`gëC¡
() );

178 
	`¥ötf
("åadeHi°‹yBuf„r.gëC¡(Ë %d\n",
åadeHi°‹yBuf„r
.
	`gëC¡
() );

179 
	`¥ötf
("åadeTy≥Buf„r.gëC¡(Ë %d\n",
åadeTy≥Buf„r
.
	`gëC¡
() );

182 
	`¥ötf
("exch™geBuf„r.gëC¡(Ë %d\n",
exch™geBuf„r
.
	`gëC¡
() );

183 
	`¥ötf
("fö™cülBuf„r.gëC¡(Ë %d\n",
fö™cülBuf„r
.
	`gëC¡
() );

184 
	`¥ötf
("ödu°ryBuf„r.gëC¡(Ë %d\n",
ödu°ryBuf„r
.
	`gëC¡
() );

185 
	`¥ötf
("√wsIãmBuf„r.gëC¡(Ë %d\n",
√wsIãmBuf„r
.
	`gëC¡
() );

186 
	`¥ötf
("œ°TødeBuf„r.gëC¡(Ë %d\n",
œ°TødeBuf„r
.
	`gëC¡
() );

187 
	`¥ötf
("√wsXRefBuf„r.gëC¡(Ë %d\n",
√wsXRefBuf„r
.
	`gëC¡
() );

188 
	`¥ötf
("£˘‹Buf„r.gëC¡(Ë %d\n",
£˘‹Buf„r
.
	`gëC¡
() );

189 
	`¥ötf
("£curôyBuf„r.gëC¡(Ë %d\n",
£curôyBuf„r
.
	`gëC¡
() );

190 
	`¥ötf
("addªssBuf„r.gëC¡(Ë %d\n",
addªssBuf„r
.
	`gëC¡
() );

191 
	`¥ötf
("°©usTy≥Buf„r.gëC¡(Ë %d\n",
°©usTy≥Buf„r
.
	`gëC¡
() );

192 
	`¥ötf
("èxøãBuf„r.gëC¡(Ë %d\n",
èxøãBuf„r
.
	`gëC¡
() );

193 
	`¥ötf
("zùCodeBuf„r.gëC¡(Ë %d\n",
zùCodeBuf„r
.
	`gëC¡
() );

194 
	}
}

197 
	$ã°I≈uts
()

199 
i
=0; i<5; i++) {

200 
åade_lookup_öput_t
 
ö4
 = 
	`¸óã_åade_lookup_öput
(0,0);

201 
ö4
.
	`¥öt
();

203 
i
=0; i<2; i++Ë{ 
åade_lookup_öput_t
 
ö41
 = 
	`¸óã_åade_lookup_öput
(0,0);

204 
ö41
.
	`¥öt
();

206 
i
=0; i<2; i++Ë{ 
m¨kë_w©ch_öput_t
 
ö5
 = 
	`¸óã_m¨kë_w©ch_öput
(0,0);

207 
ö5
.
	`¥öt
();

209 
i
=0; i<2; i++Ë{ 
£curôy_dëaû_öput_t
 
ö6
 = 
	`¸óã_£curôy_dëaû_öput
(0,0);

210 
ö6
.
	`¥öt
();

212 
åade_°©us_öput_t
 
ö7
 = 
	`¸óã_åade_°©us_öput
(0,0);

213 
ö7
.
	`¥öt
();

214 
i
=0; i<2; i++Ë{ 
åade_upd©e_öput_t
 
ö8
 = 
	`¸óã_åade_upd©e_öput
(0,0);

215 
ö8
.
	`¥öt
();

217 
i
=0; i<2; i++) {

218 
d©a_maöã«n˚_öput_t
 
ö9
 = 
	`¸óã_d©a_maöã«n˚_öput
(0,0);

219 
ö9
.
	`¥öt
();

221 
i
=0; i<2; i++) {

222 
åade_˛ónup_öput_t
 
ö10
 = 
	`¸óã_åade_˛ónup_öput
(0,0);

223 
ö10
.
	`¥öt
();

226 
i
=0; i<2; i++) {

227 
åade_ªsu…_öput_t
 
ö10
 = 
	`¸óã_åade_ªsu…_öput
(0,0);

228 
ö10
.
	`¥öt
();

231 
i
=0; i<2; i++) {

232 
m¨kë_„ed_öput_t
 
ö10
 = 
	`¸óã_m¨kë_„ed_öput
(0,0);

233 
ö10
.
	`¥öt
();

235 
	}
}

246 
	gSh‹eTPCEEnv
::
	$Sh‹eTPCEEnv
():

247 
	`Sh‹eEnv
(), 
	$_num_övÆid_öput
(0)

254 
_cu°omîs
 = 
	`upd_sf
(Ë* 
TPCE_CUSTS_PER_LU
;

255 
_w‹kög_days
 = 
ívV¨
::
	`ö°™˚
()->
	`gëSysV¨I¡
("wd");

256 
_sˇlög_Á˘‹_ç˚
 = 
ívV¨
::
	`ö°™˚
()->
	`gëSysV¨I¡
("sfe");

258 
s„_°r
[8], 
wd_°r
[8], 
cu°_°r
[8];

259 
	`mem£t
(
s„_°r
,0,8);

260 
	`mem£t
(
wd_°r
,0,8);

261 
	`mem£t
(
cu°_°r
,0,8);

262 
	`•rötf
(
s„_°r
, "%d",
_sˇlög_Á˘‹_ç˚
);

263 
	`•rötf
(
wd_°r
, "%d",
_w‹kög_days
);

264 
	`•rötf
(
cu°_°r
, "%d",
_cu°omîs
);

268 #ifde‡
COMPILE_FLAT_FILE_LOAD


269 
fs£c
 = 
	`f›í
("shoresecurity.txt","wt");

270 
fshs
 = 
	`f›í
("shorehsummary.txt","wt");

271 c⁄° * 
∑øms
[] = {"to_skù", "-i", "./§c/w‹klﬂd/ç˚/egí/Ê©/egí_Ê©_ö/","-o", "./§c/w‹klﬂd/ç˚/egí/Ê©/egí_Ê©_out/", "-l", "FLAT", "-f", 
s„_°r
, "-w", 
wd_°r
, "-c", 
cu°_°r
, "-t", cust_str };

272 
	`egí_öô
(15, (**)
∑øms
);

274 c⁄° * 
∑øms
[] = {"to_skù", "-i", "./§c/w‹klﬂd/ç˚/egí/Ê©/egí_Ê©_ö/", "-l", "NULL", "-f", 
s„_°r
, "-w", 
wd_°r
, "-c", 
cu°_°r
, "-t", cust_str };

275 
	`egí_öô
(13, (**)
∑øms
);

279 
m_TxnI≈utGíî©‹
 = 
	`å™ß˘i⁄s_öput_öô
(
_cu°omîs
, 
_sˇlög_Á˘‹_ç˚
 , 
_w‹kög_days
);

281 
£ed
 = 
	`AutoR™d
();

282 
	`£tRNGSìds
(
m_TxnI≈utGíî©‹
, 
£ed
);

284 
m_CDM
 = 
	`d©a_maöã«n˚_öô
(
_cu°omîs
, 
_sˇlög_Á˘‹_ç˚
, 
_w‹kög_days
);

287 
M¨këFìdI≈utBuf„r
 = 
√w
 
	`MFBuf„r
();

288 
TødeResu…I≈utBuf„r
 = 
√w
 
	`TRBuf„r
();

290 
mìsut
 = 
√w
 
	`CMEESUT
();

291 
mìsut
->
	`£tMFQueue
(
M¨këFìdI≈utBuf„r
);

292 
mìsut
->
	`£tTRQueue
(
TødeResu…I≈utBuf„r
);

293 
mì
 = 
	`m¨kë_öô
–
_w‹kög_days
*8, 
mìsut
, 
	`AutoR™d
());

295 #ifde‡
TESTING_TPCE


296 
i
=0; i<10; i++Ë
åxs_˙t_execuãd
[i]
åxs_˙t_Áûed
[i]=0;

298 
TødeOrdîC¡
 = 0;

300 
	}
}

302 
	gSh‹eTPCEEnv
::~
	$Sh‹eTPCEEnv
()

304 
	`egí_ªÀa£
();

305 i‡(
m_TxnI≈utGíî©‹
Ë
dñëe
 m_TxnInputGenerator;

306 i‡(
M¨këFìdI≈utBuf„r
Ë
dñëe
 MarketFeedInputBuffer;

307 i‡(
TødeResu…I≈utBuf„r
Ë
dñëe
 TradeResultInputBuffer;

308 i‡(
mìsut
Ë
dñëe
 meesut;

309 
	}
}

313 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$lﬂd_schema
()

316 
_∑ccou¡_≥rmissi⁄_desc
 = 
√w
 
	`accou¡_≥rmissi⁄_t
(
	`gë_pd
());

317 
_pcu°omî_desc
 = 
√w
 
	`cu°omî_t
(
	`gë_pd
());

318 
_pcu°omî_accou¡_desc
 = 
√w
 
	`cu°omî_accou¡_t
(
	`gë_pd
());

319 
_pcu°omî_èxøã_desc
 = 
√w
 
	`cu°omî_èxøã_t
(
	`gë_pd
());

320 
_phﬁdög_desc
 = 
√w
 
	`hﬁdög_t
(
	`gë_pd
());

321 
_phﬁdög_hi°‹y_desc
 = 
√w
 
	`hﬁdög_hi°‹y_t
(
	`gë_pd
());

322 
_phﬁdög_summ¨y_desc
 = 
√w
 
	`hﬁdög_summ¨y_t
(
	`gë_pd
());

323 
_pw©ch_ôem_desc
 = 
√w
 
	`w©ch_ôem_t
(
	`gë_pd
());

324 
_pw©ch_li°_desc
 = 
√w
 
	`w©ch_li°_t
(
	`gë_pd
());

325 
_pbrokî_desc
 = 
√w
 
	`brokî_t
(
	`gë_pd
());

326 
_pˇsh_å™ß˘i⁄_desc
 = 
√w
 
	`ˇsh_å™ß˘i⁄_t
(
	`gë_pd
());

327 
_pch¨ge_desc
 = 
√w
 
	`ch¨ge_t
(
	`gë_pd
());

328 
_pcommissi⁄_øã_desc
 = 
√w
 
	`commissi⁄_øã_t
(
	`gë_pd
());

329 
_p£âÀmít_desc
 = 
√w
 
	`£âÀmít_t
(
	`gë_pd
());

330 
_±øde_desc
 = 
√w
 
	`åade_t
(
	`gë_pd
());

331 
_±øde_hi°‹y_desc
 = 
√w
 
	`åade_hi°‹y_t
(
	`gë_pd
());

332 
_±øde_ªque°_desc
 = 
√w
 
	`åade_ªque°_t
(
	`gë_pd
());

333 
_±øde_ty≥_desc
 = 
√w
 
	`åade_ty≥_t
(
	`gë_pd
());

334 
_pcom∑ny_desc
 = 
√w
 
	`com∑ny_t
(
	`gë_pd
());

335 
_pcom∑ny_com≥tô‹_desc
 = 
√w
 
	`com∑ny_com≥tô‹_t
(
	`gë_pd
());

336 
_pdaûy_m¨kë_desc
 = 
√w
 
	`daûy_m¨kë_t
(
	`gë_pd
());

337 
_≥xch™ge_desc
 = 
√w
 
	`exch™ge_t
(
	`gë_pd
());

338 
_pfö™cül_desc
 = 
√w
 
	`fö™cül_t
(
	`gë_pd
());

339 
_pödu°ry_desc
 = 
√w
 
	`ödu°ry_t
(
	`gë_pd
());

340 
_∂a°_åade_desc
 = 
√w
 
	`œ°_åade_t
(
	`gë_pd
());

341 
_≤ews_ôem_desc
 = 
√w
 
	`√ws_ôem_t
(
	`gë_pd
());

342 
_≤ews_xªf_desc
 = 
√w
 
	`√ws_xªf_t
(
	`gë_pd
());

343 
_p£˘‹_desc
 = 
√w
 
	`£˘‹_t
(
	`gë_pd
());

344 
_p£curôy_desc
 = 
√w
 
	`£curôy_t
(
	`gë_pd
());

345 
_∑ddªss_desc
 = 
√w
 
	`addªss_t
(
	`gë_pd
());

346 
_p°©us_ty≥_desc
 = 
√w
 
	`°©us_ty≥_t
(
	`gë_pd
());

347 
_±axøã_desc
 = 
√w
 
	`èxøã_t
(
	`gë_pd
());

348 
_pzù_code_desc
 = 
√w
 
	`zù_code_t
(
	`gë_pd
());

352 
_∑ccou¡_≥rmissi⁄_m™
 = 
√w
 
	`accou¡_≥rmissi⁄_m™_im∂
(
_∑ccou¡_≥rmissi⁄_desc
.
	`gë
());

353 
_pcu°omî_m™
 = 
√w
 
	`cu°omî_m™_im∂
(
_pcu°omî_desc
.
	`gë
());

354 
_pcu°omî_accou¡_m™
 = 
√w
 
	`cu°omî_accou¡_m™_im∂
(
_pcu°omî_accou¡_desc
.
	`gë
());

355 
_pcu°omî_èxøã_m™
 = 
√w
 
	`cu°omî_èxøã_m™_im∂
(
_pcu°omî_èxøã_desc
.
	`gë
());

356 
_phﬁdög_m™
 = 
√w
 
	`hﬁdög_m™_im∂
(
_phﬁdög_desc
.
	`gë
());

357 
_phﬁdög_hi°‹y_m™
 = 
√w
 
	`hﬁdög_hi°‹y_m™_im∂
(
_phﬁdög_hi°‹y_desc
.
	`gë
());

358 
_phﬁdög_summ¨y_m™
 = 
√w
 
	`hﬁdög_summ¨y_m™_im∂
(
_phﬁdög_summ¨y_desc
.
	`gë
());

359 
_pw©ch_ôem_m™
 = 
√w
 
	`w©ch_ôem_m™_im∂
(
_pw©ch_ôem_desc
.
	`gë
());

360 
_pw©ch_li°_m™
 = 
√w
 
	`w©ch_li°_m™_im∂
(
_pw©ch_li°_desc
.
	`gë
());

361 
_pbrokî_m™
 = 
√w
 
	`brokî_m™_im∂
(
_pbrokî_desc
.
	`gë
());

362 
_pˇsh_å™ß˘i⁄_m™
 = 
√w
 
	`ˇsh_å™ß˘i⁄_m™_im∂
(
_pˇsh_å™ß˘i⁄_desc
.
	`gë
());

363 
_pch¨ge_m™
 = 
√w
 
	`ch¨ge_m™_im∂
(
_pch¨ge_desc
.
	`gë
());

364 
_pcommissi⁄_øã_m™
 = 
√w
 
	`commissi⁄_øã_m™_im∂
(
_pcommissi⁄_øã_desc
.
	`gë
());

365 
_p£âÀmít_m™
 = 
√w
 
	`£âÀmít_m™_im∂
(
_p£âÀmít_desc
.
	`gë
());

366 
_±øde_m™
 = 
√w
 
	`åade_m™_im∂
(
_±øde_desc
.
	`gë
());

367 
_±øde_hi°‹y_m™
 = 
√w
 
	`åade_hi°‹y_m™_im∂
(
_±øde_hi°‹y_desc
.
	`gë
());

368 
_±øde_ªque°_m™
 = 
√w
 
	`åade_ªque°_m™_im∂
(
_±øde_ªque°_desc
.
	`gë
());

369 
_±øde_ty≥_m™
 = 
√w
 
	`åade_ty≥_m™_im∂
(
_±øde_ty≥_desc
.
	`gë
());

370 
_pcom∑ny_m™
 = 
√w
 
	`com∑ny_m™_im∂
(
_pcom∑ny_desc
.
	`gë
());

371 
_pcom∑ny_com≥tô‹_m™
 = 
√w
 
	`com∑ny_com≥tô‹_m™_im∂
(
_pcom∑ny_com≥tô‹_desc
.
	`gë
());

372 
_pdaûy_m¨kë_m™
 = 
√w
 
	`daûy_m¨kë_m™_im∂
(
_pdaûy_m¨kë_desc
.
	`gë
());

373 
_≥xch™ge_m™
 = 
√w
 
	`exch™ge_m™_im∂
(
_≥xch™ge_desc
.
	`gë
());

374 
_pfö™cül_m™
 = 
√w
 
	`fö™cül_m™_im∂
(
_pfö™cül_desc
.
	`gë
());

375 
_pödu°ry_m™
 = 
√w
 
	`ödu°ry_m™_im∂
(
_pödu°ry_desc
.
	`gë
());

376 
_∂a°_åade_m™
 = 
√w
 
	`œ°_åade_m™_im∂
(
_∂a°_åade_desc
.
	`gë
());

377 #w¨nög 
we
 
mu°
 
£t
 
this
 
to
 10000 
ö°ed
 
of
 100.000

378 
_≤ews_ôem_m™
 = 
√w
 
	`√ws_ôem_m™_im∂
(
_≤ews_ôem_desc
.
	`gë
());

379 
_≤ews_xªf_m™
 = 
√w
 
	`√ws_xªf_m™_im∂
(
_≤ews_xªf_desc
.
	`gë
());

380 
_p£˘‹_m™
 = 
√w
 
	`£˘‹_m™_im∂
(
_p£˘‹_desc
.
	`gë
());

381 
_p£curôy_m™
 = 
√w
 
	`£curôy_m™_im∂
(
_p£curôy_desc
.
	`gë
());

382 
_∑ddªss_m™
 = 
√w
 
	`addªss_m™_im∂
(
_∑ddªss_desc
.
	`gë
());

383 
_p°©us_ty≥_m™
 = 
√w
 
	`°©us_ty≥_m™_im∂
(
_p°©us_ty≥_desc
.
	`gë
());

384 
_±axøã_m™
 = 
√w
 
	`èxøã_m™_im∂
(
_±axøã_desc
.
	`gë
());

385 
_pzù_code_m™
 = 
√w
 
	`zù_code_m™_im∂
(
_pzù_code_desc
.
	`gë
());

387  (
RCOK
);

388 
	}
}

392 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$lﬂd_™d_ªgi°î_fids
()

394 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

395 
	`W_DO
(
_pcu°omî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

396 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

397 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

398 
	`W_DO
(
_phﬁdög_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

399 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

400 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

401 
	`W_DO
(
_pw©ch_ôem_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

402 
	`W_DO
(
_pw©ch_li°_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

403 
	`W_DO
(
_pbrokî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

404 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

405 
	`W_DO
(
_pch¨ge_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

406 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

407 
	`W_DO
(
_p£âÀmít_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

408 
	`W_DO
(
_±øde_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

409 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

410 
	`W_DO
(
_±øde_ªque°_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

411 
	`W_DO
(
_±øde_ty≥_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

412 
	`W_DO
(
_pcom∑ny_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

413 
	`W_DO
(
_pcom∑ny_com≥tô‹_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

414 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

415 
	`W_DO
(
_≥xch™ge_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

416 
	`W_DO
(
_pfö™cül_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

417 
	`W_DO
(
_pödu°ry_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

418 
	`W_DO
(
_∂a°_åade_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

419 
	`W_DO
(
_≤ews_ôem_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

420 
	`W_DO
(
_≤ews_xªf_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

421 
	`W_DO
(
_p£˘‹_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

422 
	`W_DO
(
_p£curôy_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

423 
	`W_DO
(
_∑ddªss_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

424 
	`W_DO
(
_p°©us_ty≥_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

425 
	`W_DO
(
_±axøã_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

426 
	`W_DO
(
_pzù_code_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

427  (
RCOK
);

428 
	}
}

440 
	gSh‹eTPCEEnv
::
	$öfo
() const

442 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%d)\n", 
_sˇlög_Á˘‹
);

444 
	}
}

455 
	gSh‹eTPCEEnv
::
	$°©i°ics
()

458 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

459 
Sh‹eTPCETrxSèts
 
rvÆ
;

460 
rvÆ
 -=Ñval;

461 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

462 
rvÆ
 +*
ô
->
£c⁄d
;

464 
	`TRACE
–
TRACE_STATISTICS
, "BrokerVolume. Att (%d). Abt (%d). Dld (%d)\n",

465 
rvÆ
.
©ãm±ed
.
brokî_vﬁume
,

466 
rvÆ
.
Áûed
.
brokî_vﬁume
,

467 
rvÆ
.
dódlocked
.
brokî_vﬁume
);

469 
	`TRACE
–
TRACE_STATISTICS
, "CustomerPosition. Att (%d). Abt (%d). Dld (%d)\n",

470 
rvÆ
.
©ãm±ed
.
cu°omî_posôi⁄
,

471 
rvÆ
.
Áûed
.
cu°omî_posôi⁄
,

472 
rvÆ
.
dódlocked
.
cu°omî_posôi⁄
);

474 
	`TRACE
–
TRACE_STATISTICS
, "MarketFeed. Att (%d). Abt (%d). Dld (%d)\n",

475 
rvÆ
.
©ãm±ed
.
m¨kë_„ed
,

476 
rvÆ
.
Áûed
.
m¨kë_„ed
,

477 
rvÆ
.
dódlocked
.
m¨kë_„ed
);

479 
	`TRACE
–
TRACE_STATISTICS
, "MarketWatch. Att (%d). Abt (%d). Dld (%d)\n",

480 
rvÆ
.
©ãm±ed
.
m¨kë_w©ch
,

481 
rvÆ
.
Áûed
.
m¨kë_w©ch
,

482 
rvÆ
.
dódlocked
.
m¨kë_w©ch
);

484 
	`TRACE
–
TRACE_STATISTICS
, "SecurityDetail. Att (%d). Abt (%d). Dld (%d)\n",

485 
rvÆ
.
©ãm±ed
.
£curôy_dëaû
,

486 
rvÆ
.
Áûed
.
£curôy_dëaû
,

487 
rvÆ
.
dódlocked
.
£curôy_dëaû
);

489 
	`TRACE
–
TRACE_STATISTICS
, "TradeLookup. Att (%d). Abt (%d). Dld (%d)\n",

490 
rvÆ
.
©ãm±ed
.
åade_lookup
,

491 
rvÆ
.
Áûed
.
åade_lookup
,

492 
rvÆ
.
dódlocked
.
åade_lookup
);

494 
	`TRACE
–
TRACE_STATISTICS
, "TradeOrder. Att (%d). Abt (%d). Dld (%d)\n",

495 
rvÆ
.
©ãm±ed
.
åade_‹dî
,

496 
rvÆ
.
Áûed
.
åade_‹dî
,

497 
rvÆ
.
dódlocked
.
åade_‹dî
);

499 
	`TRACE
–
TRACE_STATISTICS
, "TradeResult. Att (%d). Abt (%d). Dld (%d)\n",

500 
rvÆ
.
©ãm±ed
.
åade_ªsu…
,

501 
rvÆ
.
Áûed
.
åade_ªsu…
,

502 
rvÆ
.
dódlocked
.
åade_ªsu…
);

504 
	`TRACE
–
TRACE_STATISTICS
, "TradeStatus. Att (%d). Abt (%d). Dld (%d)\n",

505 
rvÆ
.
©ãm±ed
.
åade_°©us
,

506 
rvÆ
.
Áûed
.
åade_°©us
,

507 
rvÆ
.
dódlocked
.
åade_°©us
);

509 
	`TRACE
–
TRACE_STATISTICS
, "TradeUpdate. Att (%d). Abt (%d). Dld (%d)\n",

510 
rvÆ
.
©ãm±ed
.
åade_upd©e
,

511 
rvÆ
.
Áûed
.
åade_upd©e
,

512 
rvÆ
.
dódlocked
.
åade_upd©e
);

514 
	`TRACE
–
TRACE_STATISTICS
, "DataMaintenance. Att (%d). Abt (%d). Dld (%d)\n",

515 
rvÆ
.
©ãm±ed
.
d©a_maöã«n˚
,

516 
rvÆ
.
Áûed
.
d©a_maöã«n˚
,

517 
rvÆ
.
dódlocked
.
d©a_maöã«n˚
);

519 
	`TRACE
–
TRACE_STATISTICS
, "TradeCleanup. Att (%d). Abt (%d). Dld (%d)\n",

520 
rvÆ
.
©ãm±ed
.
åade_˛ónup
,

521 
rvÆ
.
Áûed
.
åade_˛ónup
,

522 
rvÆ
.
dódlocked
.
åade_˛ónup
);

524 
Sh‹eEnv
::
	`°©i°ics
();

527 
	}
}

538 
	gSh‹eTPCEEnv
::
	$°¨t
()

540  (
Sh‹eEnv
::
	`°¨t
());

541 
	}
}

543 
	gSh‹eTPCEEnv
::
	$°›
()

545  (
Sh‹eEnv
::
	`°›
());

546 
	}
}

559 
	gSh‹eTPCEEnv
::
	$£t_cu°
(c⁄° 
aSF
)

561 i‡((
aSF
 > 0) && ((aSF % 1000) == 0)) {

562 
	`TRACE
–
TRACE_ALWAYS
, "New #cu°omîs: %d\n", 
aSF
);

563 
_cu°omîs
 = 
aSF
;

566 
	`TRACE
–
TRACE_ALWAYS
, "InvÆid #cu°omî†öput: %d\n", 
aSF
);

568 
	}
}

570 
	gSh‹eTPCEEnv
::
	$£t_wd
(c⁄° 
aSF
)

572 i‡(
aSF
 > 0) {

573 
	`TRACE
–
TRACE_ALWAYS
, "New w‹kög_day†Á˘‹: %d\n", 
aSF
);

574 
_w‹kög_days
 = 
aSF
;

577 
	`TRACE
–
TRACE_ALWAYS
, "InvÆid w‹kög_day†öput: %d\n", 
aSF
);

579 
	}
}

581 
	gSh‹eTPCEEnv
::
	$£t_s„
(c⁄° 
aSF
)

583 i‡(
aSF
 > 0) {

584 
	`TRACE
–
TRACE_ALWAYS
, "New sˇlög_Á˘‹_ç˚: %d\n", 
aSF
);

585 
_sˇlög_Á˘‹_ç˚
 = 
aSF
;

588 
	`TRACE
–
TRACE_ALWAYS
, "InvÆid sˇlög_Á˘‹_ç˚ i≈ut: %d\n", 
aSF
);

590 
	}
}

594 
	gSh‹eTPCEEnv
::
checkpoöãr_t
 : 
public
 
thªad_t
 {

595 
Sh‹eTPCEEnv
* 
_ív
;

596 
checkpoöãr_t
(
Sh‹eTPCEEnv
* 
ív
Ë: 
thªad_t
("TPC-E Lﬂd Checkpoöãr"), 
_ív
(env) { }

597 
vútuÆ
 
w‹k
();

612 ˛as†
	cSh‹eTPCEEnv
::
èbÀ_buûdî_t
 : 
public
 
thªad_t
 {

613 
Sh‹eTPCEEnv
* 
_ív
;

614 
	mmy_lﬂd_unô
;

615 
	mpublic
:

616 
	$èbÀ_buûdî_t
(
Sh‹eTPCEEnv
* 
ív
)

617 : 
	`thªad_t
("TPC-EÜﬂdî"), 
	$_ív
(
ív
) { }

618 
vútuÆ
 
	`w‹k
();

619 
	}
};

621 
	gSh‹eTPCEEnv
::
èbÀ_buûdî_t
::
	$w‹k
()

623 
w_rc_t
 
e
 = 
RCOK
;

626 
p›uœã_smÆl_öput_t
 
ö
;

627 
log_•a˚_√eded
 = 0;

628 
_ív
->
	`ªad_smÆl
();

629 
ªåy
:

630 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

632 if(
log_•a˚_√eded
 > 0) {

633 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

636 
e
 = 
_ív
->
	`x˘_p›uœã_smÆl
(1, 
ö
);

637 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåy
,
_ív
);

638 
_ív
->
	`ªÀa£_smÆl
();

641 
_ív
->
	`p›uœã_addªss
();

642 
_ív
->
	`p›uœã_cu°omî
();

643 
_ív
->
	`p›uœã_ˇ_™d_≠
();

644 
_ív
->
	`p›uœã_cu°omî_èxøã
();

645 
_ív
->
	`p›uœã_wl_™d_wi
();

647 
_ív
->
	`p›uœã_com∑ny
();

648 
_ív
->
	`p›uœã_com∑ny_com≥tô‹
();

649 
_ív
->
	`p›uœã_daûy_m¨kë
();

650 
_ív
->
	`p›uœã_fö™cül
();

651 
_ív
->
	`p›uœã_œ°_åade
();

652 
_ív
-> 
	`p›uœã_ni_™d_nx
();

653 
_ív
->
	`p›uœã_£curôy
();

656 
_ív
-> 
	`p›uœã_growög
();

657 
	`¥ötC¨döÆôy
();

658 #ifde‡
COMPILE_FLAT_FILE_LOAD


659 
	`f˛o£
(
fshs
);

660 
	`f˛o£
(
fs£c
);

663 
_ív
->
	`föd_maxåade_id
();

665 
	}
}

678 
	gSh‹eTPCEEnv
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t
 {

679 
Sh‹eTPCEEnv
* 
_ív
;

680 
èbÀ_¸ót‹_t
(
Sh‹eTPCEEnv
* 
ív
)

681 : 
thªad_t
("TPC-E TabÀ Cª©‹"), 
_ív
(
ív
) { }

682 
vútuÆ
 
w‹k
();

685 
	gSh‹eTPCEEnv
::
checkpoöãr_t
::
	$w‹k
()

687 
boﬁ
 vﬁ©ûe* 
lﬂded
 = &
_ív
->
_lﬂded
;

688 !*
lﬂded
) {

689 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

690 
i
=0; i < 60 && !*
lﬂded
; i++)

691 ::
	`¶ìp
(1);

693 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint - start\n");

694 
_ív
->
	`checkpoöt
();

695 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint -Énd\n");

697 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

698 
	}
}

702 
	gSh‹eTPCEEnv
::
èbÀ_¸ót‹_t
::
	$w‹k
()

705 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

706 
	`W_COERCE
(
_ív
->
_∑ccou¡_≥rmissi⁄_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

707 
	`W_COERCE
(
_ív
->
_pcu°omî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

708 
	`W_COERCE
(
_ív
->
_pcu°omî_accou¡_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

709 
	`W_COERCE
(
_ív
->
_pcu°omî_èxøã_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

710 
	`W_COERCE
(
_ív
->
_phﬁdög_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

711 
	`W_COERCE
(
_ív
->
_phﬁdög_hi°‹y_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

712 
	`W_COERCE
(
_ív
->
_phﬁdög_summ¨y_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

713 
	`W_COERCE
(
_ív
->
_pw©ch_li°_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

714 
	`W_COERCE
(
_ív
->
_pw©ch_ôem_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

715 
	`W_COERCE
(
_ív
->
_pbrokî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

716 
	`W_COERCE
(
_ív
->
_pˇsh_å™ß˘i⁄_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

717 
	`W_COERCE
(
_ív
->
_pch¨ge_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

718 
	`W_COERCE
(
_ív
->
_pcommissi⁄_øã_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

719 
	`W_COERCE
(
_ív
->
_p£âÀmít_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

720 
	`W_COERCE
(
_ív
->
_±øde_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

721 
	`W_COERCE
(
_ív
->
_±øde_hi°‹y_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

722 
	`W_COERCE
(
_ív
->
_±øde_ªque°_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

723 
	`W_COERCE
(
_ív
->
_±øde_ty≥_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

724 
	`W_COERCE
(
_ív
->
_pcom∑ny_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

725 
	`W_COERCE
(
_ív
->
_pcom∑ny_com≥tô‹_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

726 
	`W_COERCE
(
_ív
->
_pdaûy_m¨kë_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

727 
	`W_COERCE
(
_ív
->
_≥xch™ge_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

728 
	`W_COERCE
(
_ív
->
_pfö™cül_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

729 
	`W_COERCE
(
_ív
->
_pödu°ry_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

730 
	`W_COERCE
(
_ív
->
_∂a°_åade_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

731 
	`W_COERCE
(
_ív
->
_≤ews_ôem_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

732 
	`W_COERCE
(
_ív
->
_≤ews_xªf_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

733 
	`W_COERCE
(
_ív
->
_p£˘‹_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

734 
	`W_COERCE
(
_ív
->
_p£curôy_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

735 
	`W_COERCE
(
_ív
->
_∑ddªss_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

736 
	`W_COERCE
(
_ív
->
_p°©us_ty≥_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

737 
	`W_COERCE
(
_ív
->
_±axøã_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

738 
	`W_COERCE
(
_ív
->
_pzù_code_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

739 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

756 
	}
}

775 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$lﬂdd©a
()

777 
w_rc_t
 
e
;

779 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

780 i‡(
_lﬂded
) {

781 
	`TRACE
–
TRACE_TRX_FLOW
,

783  (
RCOK
);

785 
	`CRITICAL_SECTION
(
sˇÀ_cs
, 
_sˇlög_muãx
);

786 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

790 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

791 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
);

792 
tc
->
	`f‹k
();

793 
tc
->
	`joö
();

796 
gu¨d
<
checkpoöãr_t
> 
	`chk
(
√w
 
	`checkpoöãr_t
(
this
));

797 
chk
->
	`f‹k
();

801 
	`TRACE
–
TRACE_ALWAYS
, "Firing up %dÜoaders ..\n", 1);

803 
gu¨d
<
èbÀ_buûdî_t
>
lﬂdî
 = 
√w
 
	`èbÀ_buûdî_t
(
this
);

805 
lﬂdî
->
	`f‹k
();

806 
lﬂdî
->
	`joö
();

810 
time_t
 
t°›
 = 
	`time
(
NULL
);

811 
	`TRACE
–
TRACE_ALWAYS
, "Lﬂdög föished i¿(%dË£cs...\n", (
t°›
 - 
t°¨t
));

814 
_lﬂded
 = 
åue
;

815 
chk
->
	`joö
();

816  (
RCOK
);

817 
	}
}

832 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$check_c⁄si°ícy
()

835  
RCOK
;

836 
	}
}

848 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$w¨mup
()

850  (
	`check_c⁄si°ícy
());

851 
	}
}

862 
	gSh‹eTPCEEnv
::
	$dump
()

864 
	`as£π
 (0);

866 
	}
}

869 
	gSh‹eTPCEEnv
::
	$c⁄f
()

872 
Sh‹eEnv
::
	`c⁄f
();

873 
	`upd_sf
();

874 
	`upd_w‹kî_˙t
();

876 
	}
}

879 
	gSh‹eTPCEEnv
::
	$po°_öô
()

881 
	`c⁄f
();

882 i‡(
	`gë_pd
(Ë& 
PD_PADDED
) {

884 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

885 
w_rc_t
 
rc
 = 
	`_po°_öô_im∂
();

886 if(
rc
.
	`is_îr‹
()) {

887 
	`db
()->
	`ab‹t_x˘
();

888  (
rc
.
	`îr_num
());

891 
	`TRACE
–
TRACE_ALWAYS
, "-> Done\n");

892 
	`db
()->
	`commô_x˘
();

896 
this
->
	`föd_maxåade_id
();

898 
	}
}

909 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_po°_öô_im∂
()

912  (
RCOK
);

913 
	}
}

924 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$db_¥öt
(
löes
)

927 
	`as£π
 (
_pssm
);

928 
	`as£π
 (
_öôülized
);

929 
	`as£π
 (
_lﬂded
);

932 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

933 
	`W_DO
(
_pcu°omî_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

934 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

935 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

936 
	`W_DO
(
_phﬁdög_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

937 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

938 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

939 
	`W_DO
(
_pw©ch_ôem_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

940 
	`W_DO
(
_pw©ch_li°_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

941 
	`W_DO
(
_pbrokî_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

942 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

943 
	`W_DO
(
_pch¨ge_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

944 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

945 
	`W_DO
(
_p£âÀmít_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

946 
	`W_DO
(
_±øde_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

947 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

948 
	`W_DO
(
_±øde_ªque°_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

949 
	`W_DO
(
_±øde_ty≥_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

950 
	`W_DO
(
_pcom∑ny_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

951 
	`W_DO
(
_pcom∑ny_com≥tô‹_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

952 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

953 
	`W_DO
(
_≥xch™ge_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

954 
	`W_DO
(
_pfö™cül_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

955 
	`W_DO
(
_pödu°ry_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

956 
	`W_DO
(
_∂a°_åade_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

957 
	`W_DO
(
_≤ews_ôem_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

958 
	`W_DO
(
_≤ews_xªf_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

959 
	`W_DO
(
_p£˘‹_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

960 
	`W_DO
(
_p£curôy_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

961 
	`W_DO
(
_∑ddªss_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

962 
	`W_DO
(
_p°©us_ty≥_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

963 
	`W_DO
(
_±axøã_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

964 
	`W_DO
(
_pzù_code_m™
->
	`¥öt_èbÀ
(
_pssm
, 
löes
));

966  (
RCOK
);

967 
	}
}

978 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$db_„tch
()

981 
	`as£π
 (
_pssm
);

982 
	`as£π
 (
_öôülized
);

983 
	`as£π
 (
_lﬂded
);

986 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`„tch_èbÀ
(
_pssm
));

987 
	`W_DO
(
_pcu°omî_m™
->
	`„tch_èbÀ
(
_pssm
));

988 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`„tch_èbÀ
(
_pssm
));

989 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`„tch_èbÀ
(
_pssm
));

990 
	`W_DO
(
_phﬁdög_m™
->
	`„tch_èbÀ
(
_pssm
));

991 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`„tch_èbÀ
(
_pssm
));

992 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`„tch_èbÀ
(
_pssm
));

993 
	`W_DO
(
_pw©ch_ôem_m™
->
	`„tch_èbÀ
(
_pssm
));

994 
	`W_DO
(
_pw©ch_li°_m™
->
	`„tch_èbÀ
(
_pssm
));

995 
	`W_DO
(
_pbrokî_m™
->
	`„tch_èbÀ
(
_pssm
));

996 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`„tch_èbÀ
(
_pssm
));

997 
	`W_DO
(
_pch¨ge_m™
->
	`„tch_èbÀ
(
_pssm
));

998 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`„tch_èbÀ
(
_pssm
));

999 
	`W_DO
(
_p£âÀmít_m™
->
	`„tch_èbÀ
(
_pssm
));

1000 
	`W_DO
(
_±øde_m™
->
	`„tch_èbÀ
(
_pssm
));

1001 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`„tch_èbÀ
(
_pssm
));

1002 
	`W_DO
(
_±øde_ªque°_m™
->
	`„tch_èbÀ
(
_pssm
));

1003 
	`W_DO
(
_±øde_ty≥_m™
->
	`„tch_èbÀ
(
_pssm
));

1004 
	`W_DO
(
_pcom∑ny_m™
->
	`„tch_èbÀ
(
_pssm
));

1005 
	`W_DO
(
_pcom∑ny_com≥tô‹_m™
->
	`„tch_èbÀ
(
_pssm
));

1006 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`„tch_èbÀ
(
_pssm
));

1007 
	`W_DO
(
_≥xch™ge_m™
->
	`„tch_èbÀ
(
_pssm
));

1008 
	`W_DO
(
_pfö™cül_m™
->
	`„tch_èbÀ
(
_pssm
));

1009 
	`W_DO
(
_pödu°ry_m™
->
	`„tch_èbÀ
(
_pssm
));

1010 
	`W_DO
(
_∂a°_åade_m™
->
	`„tch_èbÀ
(
_pssm
));

1011 
	`W_DO
(
_≤ews_ôem_m™
->
	`„tch_èbÀ
(
_pssm
));

1012 
	`W_DO
(
_≤ews_xªf_m™
->
	`„tch_èbÀ
(
_pssm
));

1013 
	`W_DO
(
_p£˘‹_m™
->
	`„tch_èbÀ
(
_pssm
));

1014 
	`W_DO
(
_p£curôy_m™
->
	`„tch_èbÀ
(
_pssm
));

1015 
	`W_DO
(
_∑ddªss_m™
->
	`„tch_èbÀ
(
_pssm
));

1016 
	`W_DO
(
_p°©us_ty≥_m™
->
	`„tch_èbÀ
(
_pssm
));

1017 
	`W_DO
(
_±axøã_m™
->
	`„tch_èbÀ
(
_pssm
));

1018 
	`W_DO
(
_pzù_code_m™
->
	`„tch_èbÀ
(
_pssm
));

1020  (
RCOK
);

1021 
	}
}

1024 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_schema.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_schema.h
"

34 
usög
 
«me•a˚
 
	gsh‹e
;

36 
ENTER_NAMESPACE
(
ç˚
);

58 
	gaccou¡_≥rmissi⁄_t
::
	$accou¡_≥rmissi⁄_t
(c⁄° 
uöt4_t
& 
pd
)

59 : 
	`èbÀ_desc_t
("ACCOUNT_PERMISSION", 
TPCE_ACCOUNT_PERMISSION_FCOUNT
, 
pd
)

61 
_desc
[0].
	`£tup
(
SQL_LONG
, "AP_CA_ID");

62 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "AP_ACL",4);

63 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "AP_TAX_ID",20);

64 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "AP_L_NAME",25);

65 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "AP_F_NAME",20);

67 
uöt
 
keys
[2] = { 0, 2 };

69 
	`¸óã_¥im¨y_idx_desc
("AP_INDEX", 0, 
keys
, 2, 
pd
);

70 
	}
}

73 
	gcu°omî_t
::
	$cu°omî_t
(c⁄° 
uöt4_t
& 
pd
)

74 : 
	`èbÀ_desc_t
("CUSTOMER", 
TPCE_CUSTOMER_FCOUNT
, 
pd
)

76 
_desc
[0].
	`£tup
(
SQL_LONG
, "C_ID");

77 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "C_TAX_ID",20);

78 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "C_ST_ID",4);

79 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "C_L_NAME",25);

80 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "C_F_NAME",20);

81 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "C_M_NAME",1);

82 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "C_GNDR", 1);

83 
_desc
[7].
	`£tup
(
SQL_SMALLINT
, "C_TIER");

84 
_desc
[8].
	`£tup
(
SQL_LONG
, "C_DOB");

85 
_desc
[9].
	`£tup
(
SQL_LONG
, "C_AD_ID");

86 
_desc
[10].
	`£tup
(
SQL_FIXCHAR
, "C_CTRY_1", 3);

87 
_desc
[11].
	`£tup
(
SQL_FIXCHAR
, "C_AREA_1", 3);

88 
_desc
[12].
	`£tup
(
SQL_FIXCHAR
, "C_LOCAL_1", 10);

89 
_desc
[13].
	`£tup
(
SQL_FIXCHAR
, "C_EXT_1", 5);

90 
_desc
[14].
	`£tup
(
SQL_FIXCHAR
, "C_CTRY_2", 3);

91 
_desc
[15].
	`£tup
(
SQL_FIXCHAR
, "C_AREA_2", 3);

92 
_desc
[16].
	`£tup
(
SQL_FIXCHAR
, "C_LOCAL_2", 10);

93 
_desc
[17].
	`£tup
(
SQL_FIXCHAR
, "C_EXT_2", 5);

94 
_desc
[18].
	`£tup
(
SQL_FIXCHAR
, "C_CTRY_3", 3);

95 
_desc
[19].
	`£tup
(
SQL_FIXCHAR
, "C_AREA_3", 3);

96 
_desc
[20].
	`£tup
(
SQL_FIXCHAR
, "C_LOCAL_3", 10);

97 
_desc
[21].
	`£tup
(
SQL_FIXCHAR
, "C_EXT_3", 5);

98 
_desc
[22].
	`£tup
(
SQL_FIXCHAR
, "C_EMAIL_1", 50);

99 
_desc
[23].
	`£tup
(
SQL_FIXCHAR
, "C_EMAIL_2", 50);

101 
uöt
 
keys
[1] = { 0 };

102 
uöt
 
keys2
[2] = { 1, 0 };

103 
uöt
 
keys3
[2] = { 0, 7 };

105 
	`¸óã_¥im¨y_idx_desc
("C_INDEX", 0, 
keys
, 1, 
pd
);

106 
	`¸óã_ödex_desc
("C_INDEX_2", 0, 
keys2
, 2);

107 
	`¸óã_ödex_desc
("C_INDEX_3", 0, 
keys3
, 2);

108 
	}
}

111 
	gcu°omî_accou¡_t
::
	$cu°omî_accou¡_t
(c⁄° 
uöt4_t
& 
pd
)

112 : 
	`èbÀ_desc_t
("CUSTOMER_ACCOUNT", 
TPCE_CUSTOMER_ACCOUNT_FCOUNT
, 
pd
)

114 
_desc
[0].
	`£tup
(
SQL_LONG
, "CA_ID");

115 
_desc
[1].
	`£tup
(
SQL_LONG
, "CA_B_ID");

116 
_desc
[2].
	`£tup
(
SQL_LONG
, "CA_C_ID");

117 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "CA_NAME", 50);

118 
_desc
[4].
	`£tup
(
SQL_SMALLINT
, "CA_TAX_ST");

119 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "CA_BAL");

121 
uöt
 
keys
[1] = { 0 };

129 
uöt
 
keys2
[2] = { 2 };

141 
	`¸óã_¥im¨y_idx_desc
("CA_INDEX", 0, 
keys
, 1, 
pd
);

142 
	`¸óã_ödex_desc
("CA_INDEX_2", 0, 
keys2
, 1, 
Ál£
, fÆ£, 
pd
);

145 
	}
}

148 
	gcu°omî_èxøã_t
::
	$cu°omî_èxøã_t
(c⁄° 
uöt4_t
& 
pd
)

149 : 
	`èbÀ_desc_t
("CUSTOMER_TAXRATE", 
TPCE_CUSTOMER_TAXRATE_FCOUNT
, 
pd
)

151 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "CX_TX_ID", 4);

152 
_desc
[1].
	`£tup
(
SQL_LONG
, "CX_C_ID");

154 
uöt
 
keys
[2] = { 1 , 0 };

156 
	`¸óã_¥im¨y_idx_desc
("CX_INDEX", 0, 
keys
, 2, 
pd
);

157 
	}
}

160 
	ghﬁdög_t
::
	$hﬁdög_t
(c⁄° 
uöt4_t
& 
pd
)

161 : 
	`èbÀ_desc_t
("HOLDING", 
TPCE_HOLDING_FCOUNT
, 
pd
)

163 
_desc
[0].
	`£tup
(
SQL_LONG
, "H_T_ID");

164 
_desc
[1].
	`£tup
(
SQL_LONG
, "H_CA_ID");

165 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "H_S_SYMB", 16);

166 
_desc
[3].
	`£tup
(
SQL_LONG
, "H_DTS");

167 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "H_PRICE");

168 
_desc
[5].
	`£tup
(
SQL_INT
, "H_QTY");

180 
uöt
 
keys2
[3] = { 1, 2, 3 };

184 
	`¸óã_ödex_desc
("H_INDEX_2", 0, 
keys2
, 3, 
Ál£
, fÆ£, 
pd
);

185 
	}
}

188 
	ghﬁdög_hi°‹y_t
::
	$hﬁdög_hi°‹y_t
(c⁄° 
uöt4_t
& 
pd
)

189 : 
	`èbÀ_desc_t
("HOLDING_HISTORY", 
TPCE_HOLDING_HISTORY_FCOUNT
, 
pd
)

191 
_desc
[0].
	`£tup
(
SQL_LONG
, "HH_H_T_ID");

192 
_desc
[1].
	`£tup
(
SQL_LONG
, "HH_T_ID");

193 
_desc
[2].
	`£tup
(
SQL_INT
, "HH_BEFORE_QTY");

194 
_desc
[3].
	`£tup
(
SQL_INT
, "HH_AFTER_QTY");

204 
uöt
 
keys2
[1] = { 1 };

208 
	`¸óã_ödex_desc
("HH_INDEX_2", 0, 
keys2
, 1, 
Ál£
, fÆ£, 
pd
);

209 
	}
}

212 
	ghﬁdög_summ¨y_t
::
	$hﬁdög_summ¨y_t
(c⁄° 
uöt4_t
& 
pd
)

213 : 
	`èbÀ_desc_t
("HOLDING_SUMMARY", 
TPCE_HOLDING_SUMMARY_FCOUNT
, 
pd
)

215 
_desc
[0].
	`£tup
(
SQL_LONG
, "HS_CA_ID");

216 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "HS_S_SYMB", 16);

217 
_desc
[2].
	`£tup
(
SQL_INT
, "HS_QTY");

219 
uöt
 
keys
[2] = { 0, 1 };

221 
	`¸óã_¥im¨y_idx_desc
("HS_INDEX", 0, 
keys
, 2, 
pd
);

222 
	}
}

225 
	gw©ch_ôem_t
::
	$w©ch_ôem_t
(c⁄° 
uöt4_t
& 
pd
)

226 : 
	`èbÀ_desc_t
("WATCH_ITEM", 
TPCE_WATCH_ITEM_FCOUNT
, 
pd
)

228 
_desc
[0].
	`£tup
(
SQL_LONG
, "WI_WL_ID");

229 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "WI_S_SYMB", 15);

231 
uöt
 
keys
[2] = { 0, 1 };

233 
	`¸óã_¥im¨y_idx_desc
("WI_INDEX", 0, 
keys
, 2, 
pd
);

234 
	}
}

237 
	gw©ch_li°_t
::
	$w©ch_li°_t
(c⁄° 
uöt4_t
& 
pd
)

238 : 
	`èbÀ_desc_t
("WATCH_LIST", 
TPCE_WATCH_LIST_FCOUNT
, 
pd
)

240 
_desc
[0].
	`£tup
(
SQL_LONG
, "WL_ID");

241 
_desc
[1].
	`£tup
(
SQL_LONG
, "WL_C_ID");

245 
uöt
 
keys2
[2] = { 1, 0 };

248 
	`¸óã_¥im¨y_idx_desc
("WL_INDEX_2", 0, 
keys2
, 2, 
pd
);

250 
	}
}

259 
	gbrokî_t
::
	$brokî_t
(c⁄° 
uöt4_t
& 
pd
)

260 : 
	`èbÀ_desc_t
("BROKER", 
TPCE_BROKER_FCOUNT
, 
pd
)

262 
_desc
[0].
	`£tup
(
SQL_LONG
, "B_ID");

263 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "B_ST_ID", 4);

264 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "B_NAME", 52);

265 
_desc
[3].
	`£tup
(
SQL_INT
, "B_NUM_TRADES");

266 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "B_COMM_TOTAL");

268 
uöt
 
keys
[1] = { 0 };

269 
uöt
 
keys2
[2] = { 0, 2 };

270 
uöt
 
keys3
[2] = { 2, 0 };

272 
	`¸óã_¥im¨y_idx_desc
("B_INDEX", 0, 
keys
, 1, 
pd
);

273 
	`¸óã_ödex_desc
("B_INDEX_2", 0, 
keys2
, 2, 
åue
, 
Ál£
, 
pd
);

274 
	`¸óã_ödex_desc
("B_INDEX_3", 0, 
keys3
, 2, 
åue
, 
Ál£
, 
pd
);

275 
	}
}

278 
	gˇsh_å™ß˘i⁄_t
::
	$ˇsh_å™ß˘i⁄_t
(c⁄° 
uöt4_t
& 
pd
)

279 : 
	`èbÀ_desc_t
("CASH_TRANSACTION", 
TPCE_CASH_TRANSACTION_FCOUNT
, 
pd
)

281 
_desc
[0].
	`£tup
(
SQL_LONG
, "CT_T_ID");

282 
_desc
[1].
	`£tup
(
SQL_LONG
, "CT_DTS");

283 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "CT_AMT");

284 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "CT_NAME", 100);

286 
uöt
 
keys
[1] = { 0 };

288 
	`¸óã_¥im¨y_idx_desc
("CT_INDEX", 0, 
keys
, 1, 
pd
);

289 
	}
}

292 
	gch¨ge_t
::
	$ch¨ge_t
(c⁄° 
uöt4_t
& 
pd
)

293 : 
	`èbÀ_desc_t
("CHARGE", 
TPCE_CHARGE_FCOUNT
, 
pd
)

295 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "CH_TT_ID", 4);

296 
_desc
[1].
	`£tup
(
SQL_SMALLINT
, "CH_C_TIER");

297 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "CH_CHRG");

299 
uöt
 
keys
[2] = { 0 , 1 };

301 
	`¸óã_¥im¨y_idx_desc
("CH_INDEX", 0, 
keys
, 2, 
pd
);

302 
	}
}

305 
	gcommissi⁄_øã_t
::
	$commissi⁄_øã_t
(c⁄° 
uöt4_t
& 
pd
)

306 : 
	`èbÀ_desc_t
("COMMISSION_RATE", 
TPCE_COMMISSION_RATE_FCOUNT
, 
pd
)

308 
_desc
[0].
	`£tup
(
SQL_SMALLINT
, "CR_C_TIER");

309 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "CR_TT_ID", 6);

310 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "CR_EX_ID", 8);

311 
_desc
[3].
	`£tup
(
SQL_INT
, "CR_FROM_QTY");

312 
_desc
[4].
	`£tup
(
SQL_INT
, "CR_TO_QTY");

313 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "CR_RATE");

315 
uöt
 
keys
[4] = { 0, 1, 2, 3 };

317 
	`¸óã_¥im¨y_idx_desc
("CR_INDEX", 0, 
keys
, 4, 
pd
);

318 
	}
}

321 
	g£âÀmít_t
::
	$£âÀmít_t
(c⁄° 
uöt4_t
& 
pd
)

322 : 
	`èbÀ_desc_t
("SETTLEMENT", 
TPCE_SETTLEMENT_FCOUNT
, 
pd
)

324 
_desc
[0].
	`£tup
(
SQL_LONG
, "SE_T_ID");

325 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "SE_CASH_TYPE", 40);

326 
_desc
[2].
	`£tup
(
SQL_LONG
, "SE_CASH_DUE_DATE");

327 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "SE_AMT");

329 
uöt
 
keys
[1] = { 0 };

331 
	`¸óã_¥im¨y_idx_desc
("SE_INDEX", 0, 
keys
, 1, 
pd
);

332 
	}
}

335 
	gåade_t
::
	$åade_t
(c⁄° 
uöt4_t
& 
pd
)

336 : 
	`èbÀ_desc_t
("TRADE", 
TPCE_TRADE_FCOUNT
, 
pd
)

338 
_desc
[0].
	`£tup
(
SQL_LONG
, "T_ID");

339 
_desc
[1].
	`£tup
(
SQL_LONG
, "T_DTS");

340 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "T_ST_ID",4);

341 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "T_TT_ID",3);

342 
_desc
[4].
	`£tup
(
SQL_BIT
, "T_IS_CASH");

343 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "T_S_SYMB",16);

344 
_desc
[6].
	`£tup
(
SQL_INT
, "T_QTY");

345 
_desc
[7].
	`£tup
(
SQL_FLOAT
, "T_BID_PRICE");

346 
_desc
[8].
	`£tup
(
SQL_LONG
, "T_CA_ID");

347 
_desc
[9].
	`£tup
(
SQL_FIXCHAR
, "T_EXEC_NAME",49);

348 
_desc
[10].
	`£tup
(
SQL_FLOAT
, "T_TRADE_PRICE");

349 
_desc
[11].
	`£tup
(
SQL_FLOAT
, "T_CHRG");

350 
_desc
[12].
	`£tup
(
SQL_FLOAT
, "T_COMM");

351 
_desc
[13].
	`£tup
(
SQL_FLOAT
, "T_TAX");

352 
_desc
[14].
	`£tup
(
SQL_BIT
, "T_LIFO");

354 
uöt
 
keys
[1] = { 0 };

355 
uöt
 
keys2
[3] = { 8, 1, 0 };

358 
uöt
 
keys3
[2] = { 5, 1 };

360 
	`¸óã_¥im¨y_idx_desc
("T_INDEX", 0, 
keys
, 1, 
pd
);

361 
	`¸óã_ödex_desc
("T_INDEX_2", 0, 
keys2
, 3, 
åue
, 
Ál£
, 
pd
);

362 
	`¸óã_ödex_desc
("T_INDEX_3", 0, 
keys3
, 2, 
Ál£
, fÆ£, 
pd
);

363 
	}
}

366 
	gåade_hi°‹y_t
::
	$åade_hi°‹y_t
(c⁄° 
uöt4_t
& 
pd
)

367 : 
	`èbÀ_desc_t
("TRADE_HISTORY", 
TPCE_TRADE_HISTORY_FCOUNT
, 
pd
)

369 
_desc
[0].
	`£tup
(
SQL_LONG
, "TH_T_ID");

370 
_desc
[1].
	`£tup
(
SQL_LONG
, "TH_DTS");

371 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "TH_ST_ID", 4);

381 
uöt
 
keys3
[2] = { 0, 1 };

385 
	`¸óã_ödex_desc
("TH_INDEX_3", 0, 
keys3
, 2, 
Ál£
, fÆ£, 
pd
);

386 
	}
}

389 
	gåade_ªque°_t
::
	$åade_ªque°_t
(c⁄° 
uöt4_t
& 
pd
)

390 : 
	`èbÀ_desc_t
("TRADE_REQUEST", 
TPCE_TRADE_REQUEST_FCOUNT
, 
pd
)

392 
_desc
[0].
	`£tup
(
SQL_LONG
, "TR_T_ID");

393 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "TR_TT_ID", 3);

394 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "TR_S_SYMB", 16);

395 
_desc
[3].
	`£tup
(
SQL_INT
, "TR_QTY");

396 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "TR_BID_PRICE");

397 
_desc
[5].
	`£tup
(
SQL_LONG
, "TR_B_ID");

404 
uöt
 
keys4
[2] = { 2, 5 };

409 
	`¸óã_ödex_desc
("TR_INDEX_4", 0, 
keys4
, 2, 
Ál£
, fÆ£, 
pd
);

410 
	}
}

413 
	gåade_ty≥_t
::
	$åade_ty≥_t
(c⁄° 
uöt4_t
& 
pd
)

414 : 
	`èbÀ_desc_t
("TRADE_TYPE", 
TPCE_TRADE_TYPE_FCOUNT
, 
pd
)

416 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "TT_ID", 4);

417 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "TT_NAME", 12);

418 
_desc
[2].
	`£tup
(
SQL_BIT
, "TT_IS_SELL");

419 
_desc
[3].
	`£tup
(
SQL_BIT
, "TT_IS_MRKT");

423 
uöt
 
keys
[1] = { 0 };

425 
	`¸óã_¥im¨y_idx_desc
("TT_INDEX", 0, 
keys
, 1, 
pd
);

427 
	}
}

434 
	gcom∑ny_t
::
	$com∑ny_t
(c⁄° 
uöt4_t
& 
pd
)

435 : 
	`èbÀ_desc_t
("COMPANY", 
TPCE_COMPANY_FCOUNT
, 
pd
)

437 
_desc
[0].
	`£tup
(
SQL_LONG
, "CO_ID");

438 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "CO_ST_ID", 4);

439 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "CO_NAME", 60);

440 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "CO_IN_ID", 4);

441 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "CO_SP_RATE", 4);

442 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "CO_CEO", 46);

443 
_desc
[6].
	`£tup
(
SQL_LONG
, "CO_AD_ID");

444 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "CO_DESC", 150);

445 
_desc
[8].
	`£tup
(
SQL_LONG
, "CO_OPEN_DATE");

447 
uöt
 
keys1
[1] = { 0 };

448 
uöt
 
keys2
[2] = { 2, 0 };

449 
uöt
 
keys3
[2] = { 3, 0 };

451 
	`¸óã_¥im¨y_idx_desc
("CO_INDEX", 0, 
keys1
, 1, 
pd
);

452 
	`¸óã_ödex_desc
("CO_INDEX_2", 0, 
keys2
, 2, 
åue
, 
Ál£
, 
pd
);

453 
	`¸óã_ödex_desc
("CO_INDEX_3", 0, 
keys3
, 2, 
åue
, 
Ál£
, 
pd
);

454 
	}
}

456 
	gcom∑ny_com≥tô‹_t
::
	$com∑ny_com≥tô‹_t
(c⁄° 
uöt4_t
& 
pd
)

457 : 
	`èbÀ_desc_t
("COMPANY_COMPETITOR", 
TPCE_COMPANY_COMPETITOR_FCOUNT
, 
pd
)

459 
_desc
[0].
	`£tup
(
SQL_LONG
, "CP_CO_ID");

460 
_desc
[1].
	`£tup
(
SQL_LONG
, "CP_COMP_CO_ID");

461 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "CP_IN_ID", 4);

463 
uöt
 
keys1
[3] = { 0, 1, 2 };

467 
	`¸óã_¥im¨y_idx_desc
("CP_INDEX", 0, 
keys1
, 3, 
pd
);

469 
	}
}

472 
	gdaûy_m¨kë_t
::
	$daûy_m¨kë_t
(c⁄° 
uöt4_t
& 
pd
)

473 : 
	`èbÀ_desc_t
("DAILY_MARKET", 
TPCE_DAILY_MARKET_FCOUNT
, 
pd
)

475 
_desc
[0].
	`£tup
(
SQL_LONG
, "DM_DATE");

476 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "DM_S_SYMB", 16);

477 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "DM_CLOSE");

478 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "DM_HIGH");

479 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "DM_LOW");

480 
_desc
[5].
	`£tup
(
SQL_INT
, "DM_VOL");

482 
uöt
 
keys1
[2] = { 1, 0 };

483 
uöt
 
keys2
[2] = { 0, 1 };

485 
	`¸óã_¥im¨y_idx_desc
("DM_INDEX", 0, 
keys1
, 2, 
pd
);

486 
	`¸óã_ödex_desc
("DM_INDEX_2", 0, 
keys2
, 2, 
åue
, 
Ál£
, 
pd
);

487 
	}
}

490 
	gexch™ge_t
::
	$exch™ge_t
(c⁄° 
uöt4_t
& 
pd
)

491 : 
	`èbÀ_desc_t
("EXCHANGE", 
TPCE_EXCHANGE_FCOUNT
, 
pd
)

493 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "EX_ID", 6);

494 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "EX_NAME", 100);

495 
_desc
[2].
	`£tup
(
SQL_INT
, "EX_NUM_SYMB");

496 
_desc
[3].
	`£tup
(
SQL_INT
, "EX_OPEN");

497 
_desc
[4].
	`£tup
(
SQL_INT
, "EX_CLOSE");

498 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "EX_DESC", 150);

499 
_desc
[6].
	`£tup
(
SQL_LONG
, "EX_AD_ID");

501 
uöt
 
keys
[1] = { 0 };

503 
	`¸óã_¥im¨y_idx_desc
("EX_INDEX", 0, 
keys
, 1, 
pd
);

504 
	}
}

507 
	gfö™cül_t
::
	$fö™cül_t
(c⁄° 
uöt4_t
& 
pd
)

508 : 
	`èbÀ_desc_t
("FINANCIAL", 
TPCE_FINANCIAL_FCOUNT
, 
pd
)

510 
_desc
[0].
	`£tup
(
SQL_LONG
, "FI_CO_ID");

511 
_desc
[1].
	`£tup
(
SQL_INT
, "FI_YEAR");

512 
_desc
[2].
	`£tup
(
SQL_SMALLINT
, "FI_QTR");

513 
_desc
[3].
	`£tup
(
SQL_LONG
, "FI_QTR_START_DATE");

514 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "FI_REVENUE");

515 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "FI_NET_EARN");

516 
_desc
[6].
	`£tup
(
SQL_FLOAT
, "FI_BASIC_EPS");

517 
_desc
[7].
	`£tup
(
SQL_FLOAT
, "FI_DILUT_EPS");

518 
_desc
[8].
	`£tup
(
SQL_FLOAT
, "FI_MARGIN");

519 
_desc
[9].
	`£tup
(
SQL_FLOAT
, "FI_INVENTORY");

520 
_desc
[10].
	`£tup
(
SQL_FLOAT
, "FI_ASSETS");

521 
_desc
[11].
	`£tup
(
SQL_FLOAT
, "FI_LIABILITY");

522 
_desc
[12].
	`£tup
(
SQL_FLOAT
, "FI_OUT_BASIC");

523 
_desc
[13].
	`£tup
(
SQL_FLOAT
, "FI_OUT_DILUT");

525 
uöt
 
keys
[3] = { 0, 1, 2 };

527 
	`¸óã_¥im¨y_idx_desc
("FI_INDEX", 0, 
keys
, 3, 
pd
);

528 
	}
}

531 
	gödu°ry_t
::
	$ödu°ry_t
(c⁄° 
uöt4_t
& 
pd
)

532 : 
	`èbÀ_desc_t
("INDUSTRY", 
TPCE_INDUSTRY_FCOUNT
, 
pd
)

534 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "IN_ID", 2);

535 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "IN_NAME", 50);

536 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "IN_SC_ID", 2);

538 
uöt
 
keys1
[1] = { 0 };

539 
uöt
 
keys2
[2] = { 1, 0 };

540 
uöt
 
keys3
[2] = { 2, 0 };

542 
	`¸óã_¥im¨y_idx_desc
("IN_INDEX", 0, 
keys1
, 1, 
pd
);

543 
	`¸óã_ödex_desc
("IN_INDEX_2", 0, 
keys2
, 2, 
åue
, 
Ál£
, 
pd
);

544 
	`¸óã_ödex_desc
("IN_INDEX_3", 0, 
keys3
, 2, 
åue
, 
Ál£
, 
pd
);

545 
	}
}

548 
	gœ°_åade_t
::
	$œ°_åade_t
(c⁄° 
uöt4_t
& 
pd
)

549 : 
	`èbÀ_desc_t
("LAST_TRADE", 
TPCE_LAST_TRADE_FCOUNT
, 
pd
)

551 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "LT_S_SYMB", 16);

552 
_desc
[1].
	`£tup
(
SQL_LONG
, "LT_DTS");

553 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "LT_PRICE");

554 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "LT_OPEN_PRICE");

555 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "LT_VOL");

557 
uöt
 
keys
[1] = { 0 };

559 
	`¸óã_¥im¨y_idx_desc
("LT_INDEX", 0, 
keys
, 1, 
pd
);

560 
	}
}

563 
	g√ws_ôem_t
::
	$√ws_ôem_t
(c⁄° 
uöt4_t
& 
pd
)

564 : 
	`èbÀ_desc_t
("NEWS_ITEM", 
TPCE_NEWS_ITEM_FCOUNT
, 
pd
)

566 
_desc
[0].
	`£tup
(
SQL_LONG
, "NI_ID");

567 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "NI_HEADLINE", 80);

568 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "NI_SUMMARY", 255);

570 #w¨nög 
should
 
be
 100000, 
but
 
ô
 
Áûs
 
ö
 
_≤ews_ôem_m™
 = 
√w
 
	`√ws_ôem_m™_im∂
(
_≤ews_ôem_desc
.
	`gë
());

572 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "NI_ITEM", 
max_√ws_ôem_size
);

573 
_desc
[4].
	`£tup
(
SQL_LONG
, "NI_DTS");

574 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "NI_SOURCE", 30);

575 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "NI_AUTHOR", 30);

577 
uöt
 
keys
[1] = { 0 };

579 
	`¸óã_¥im¨y_idx_desc
("NI_INDEX", 0, 
keys
, 1, 
pd
);

580 
	}
}

583 
	g√ws_xªf_t
::
	$√ws_xªf_t
(c⁄° 
uöt4_t
& 
pd
)

584 : 
	`èbÀ_desc_t
("NEWS_XREF", 
TPCE_NEWS_XREF_FCOUNT
, 
pd
)

586 
_desc
[0].
	`£tup
(
SQL_LONG
, "NX_NI_ID");

587 
_desc
[1].
	`£tup
(
SQL_LONG
, "NX_CO_ID");

589 
uöt
 
keys
[2] = { 1, 0 };

591 
	`¸óã_¥im¨y_idx_desc
("NX_INDEX", 0, 
keys
, 2, 
pd
);

592 
	}
}

595 
	g£˘‹_t
::
	$£˘‹_t
(c⁄° 
uöt4_t
& 
pd
)

596 : 
	`èbÀ_desc_t
("SECTOR", 
TPCE_SECTOR_FCOUNT
, 
pd
)

598 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "SC_ID", 4);

599 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "SC_NAME", 32);

603 
uöt
 
keys2
[2] = { 1, 0 };

606 
	`¸óã_ödex_desc
("SC_INDEX_2", 0, 
keys2
, 2, 
åue
, 
Ál£
, 
pd
);

607 
	}
}

610 
	g£curôy_t
::
	$£curôy_t
(c⁄° 
uöt4_t
& 
pd
)

611 : 
	`èbÀ_desc_t
("SECURITY", 
TPCE_SECURITY_FCOUNT
, 
pd
)

613 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "S_SYMB", 16);

614 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "S_ISSUE", 8);

615 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "S_ST_ID", 4);

616 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "S_NAME", 70);

617 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "S_EX_ID", 6);

618 
_desc
[5].
	`£tup
(
SQL_LONG
, "S_CO_ID");

619 
_desc
[6].
	`£tup
(
SQL_FLOAT
, "S_NUM_OUT");

620 
_desc
[7].
	`£tup
(
SQL_LONG
, "S_START_DATE");

621 
_desc
[8].
	`£tup
(
SQL_LONG
, "S_EXCH_DATE");

622 
_desc
[9].
	`£tup
(
SQL_FLOAT
, "S_PE");

623 
_desc
[10].
	`£tup
(
SQL_FLOAT
, "S_52WK_HIGH");

624 
_desc
[11].
	`£tup
(
SQL_LONG
, "S_52WK_HIGH_DATE");

625 
_desc
[12].
	`£tup
(
SQL_FLOAT
, "S_52WK_LOW");

626 
_desc
[13].
	`£tup
(
SQL_LONG
, "S_52WK_LOW_DATE");

627 
_desc
[14].
	`£tup
(
SQL_FLOAT
, "S_DIVIDEND");

628 
_desc
[15].
	`£tup
(
SQL_FLOAT
, "S_YIELD");

630 
uöt
 
keys1
[1] = { 0 };

639 
uöt
 
keys4
[3] = { 5, 1, 0 };

641 
	`¸óã_¥im¨y_idx_desc
("S_INDEX", 0, 
keys1
, 1, 
pd
);

644 
	`¸óã_ödex_desc
("S_INDEX_4", 0, 
keys4
, 3, 
åue
, 
Ál£
, 
pd
);

645 
	}
}

654 
	gaddªss_t
::
	$addªss_t
(c⁄° 
uöt4_t
& 
pd
)

655 : 
	`èbÀ_desc_t
("ADDRESS", 
TPCE_ADDRESS_FCOUNT
, 
pd
)

657 
_desc
[0].
	`£tup
(
SQL_LONG
, "AD_ID");

658 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "AD_LINE1", 80);

659 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "AD_LINE2", 80);

660 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "AD_ZC_CODE", 12);

661 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "AD_CTRY", 80);

663 
uöt
 
keys
[1] = { 0 };

665 
	`¸óã_¥im¨y_idx_desc
("AD_INDEX", 0, 
keys
, 1, 
pd
);

666 
	}
}

669 
	g°©us_ty≥_t
::
	$°©us_ty≥_t
(c⁄° 
uöt4_t
& 
pd
)

670 : 
	`èbÀ_desc_t
("STATUS_TYPE", 
TPCE_STATUS_TYPE_FCOUNT
, 
pd
)

672 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "ST_ID", 4);

673 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "ST_NAME", 10);

675 
uöt
 
keys
[1] = { 0 };

677 
	`¸óã_¥im¨y_idx_desc
("ST_INDEX", 0, 
keys
, 1, 
pd
);

678 
	}
}

681 
	gèxøã_t
::
	$èxøã_t
(c⁄° 
uöt4_t
& 
pd
)

682 : 
	`èbÀ_desc_t
("TAXRATE", 
TPCE_TAXRATE_FCOUNT
, 
pd
)

684 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "TX_ID", 4);

685 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "TX_NAME", 50);

686 
_desc
[2].
	`£tup
(
SQL_FLOAT
, "TX_RATE");

688 
uöt
 
keys
[1] = { 0 };

690 
	`¸óã_¥im¨y_idx_desc
("TX_INDEX", 0, 
keys
, 1, 
pd
);

691 
	}
}

694 
	gzù_code_t
::
	$zù_code_t
(c⁄° 
uöt4_t
& 
pd
)

695 : 
	`èbÀ_desc_t
("ZIP_CODE", 
TPCE_ZIP_CODE_FCOUNT
, 
pd
)

697 
_desc
[0].
	`£tup
(
SQL_FIXCHAR
, "ZC_CODE", 12);

698 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "ZC_TOWN", 80);

699 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "ZC_DIV", 80);

701 
uöt
 
keys
[1] = { 0 };

703 
	`¸óã_¥im¨y_idx_desc
("ZC_INDEX", 0, 
keys
, 1, 
pd
);

704 
	}
}

713 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_schema_man.cpp

34 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_schema_m™.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

39 
ENTER_NAMESPACE
(
ç˚
);

46 
w_rc_t
 
	gaccou¡_≥rmissi⁄_m™_im∂
::
	$≠_ödex_¥obe
(
ss_m
* 
db
, 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
,

47 c⁄° 
TIdít
 
ac˘_id
,

48 c⁄° * 
exec_èx_id
)

50 
	`as£π
 (
±u∂e
);

51 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

52 
±u∂e
->
	`£t_vÆue
(2, 
exec_èx_id
);

53  (
	`ödex_¥obe_by_«me
(
db
, "AP_INDEX", 
±u∂e
));

54 
	}
}

56 
w_rc_t
 
	gaccou¡_≥rmissi⁄_m™_im∂
::
	$≠_gë_ôî_by_ödex
(
ss_m
* 
db
,

57 
accou¡_≥rmissi⁄_ödex_ôî
* &
ôî
,

58 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
,

59 
ªp_row_t
 &
ª∂ow
,

60 
ªp_row_t
 &
ªphigh
,

61 c⁄° 
TIdít
 
ac˘_id
,

62 
lock_mode_t
 
Æm
,

63 
boﬁ
 
√ed_tu∂e
)

65 
	`as£π
 (
±u∂e
);

68 
	`as£π
 (
_±abÀ
);

69 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("AP_INDEX");

70 
	`as£π
 (
pödex
);

75 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

76 
±u∂e
->
	`£t_vÆue
(2, "");

78 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

79 
	`as£π
 (
ª∂ow
.
_de°
);

81 
ãmp
[2];

82 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

83 
ãmp
[1] = '\0';

84 
±u∂e
->
	`£t_vÆue
(2, 
ãmp
);

85 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

86 
	`as£π
 (
ªphigh
.
_de°
);

89 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

90 
Æm
, 
√ed_tu∂e
,

91 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

92 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

93  (
RCOK
);

94 
	}
}

96 
w_rc_t
 
	gaccou¡_≥rmissi⁄_m™_im∂
::
	$≠_upd©e_a˛
(
ss_m
* 
db
,

97 
accou¡_≥rmissi⁄_tu∂e
* 
±u∂e
,

98 c⁄° * 
a˛
,

99 
lock_mode_t
 
lm
)

101 
	`as£π
 (
±u∂e
);

102 
±u∂e
->
	`£t_vÆue
(1, 
a˛
);

103  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

104 
	}
}

111 
w_rc_t
 
	gaddªss_m™_im∂
::
	$ad_gë_èbÀ_ôî
(
ss_m
* 
db
, 
èbÀ_ôî
* &
ôî
)

114 
	`W_DO
(
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
ôî
));

115  (
RCOK
);

116 
	}
}

118 
w_rc_t
 
	gaddªss_m™_im∂
::
	$ad_ödex_¥obe
(
ss_m
* 
db
, 
addªss_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ad_id
)

120 
	`as£π
 (
±u∂e
);

121 
±u∂e
->
	`£t_vÆue
(0, 
ad_id
);

122  (
	`ödex_¥obe_by_«me
(
db
, "AD_INDEX", 
±u∂e
));

123 
	}
}

125 
w_rc_t
 
	gaddªss_m™_im∂
::
	$ad_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
addªss_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ad_id
)

127 
	`as£π
 (
±u∂e
);

128 
±u∂e
->
	`£t_vÆue
(0, 
ad_id
);

129  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "AD_INDEX", 
±u∂e
));

130 
	}
}

132 
w_rc_t
 
	gaddªss_m™_im∂
::
	$ad_upd©e_löe2
(
ss_m
* 
db
,

133 
addªss_tu∂e
* 
±u∂e
,

134 c⁄° * 
löe2
,

135 
lock_mode_t
 
lm
)

137 
	`as£π
 (
±u∂e
);

138 
±u∂e
->
	`£t_vÆue
(2, 
löe2
);

139  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

140 
	}
}

147 
w_rc_t
 
	gbrokî_m™_im∂
::
	$brokî_upd©e_ˇ_¡_by_ödex
(
ss_m
* 
db
, 
brokî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
brokî_id
,

148 c⁄° 
comm_amou¡
, 
lock_mode_t
 
lm
)

150 
	`as£π
 (
±u∂e
);

154 
±u∂e
->
	`£t_vÆue
(0, 
brokî_id
);

155 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "B_INDEX", 
±u∂e
));

157 
b_comm_tŸÆ
;

158 
±u∂e
->
	`gë_vÆue
(4, 
b_comm_tŸÆ
);

159 
b_num_åades
;

160 
±u∂e
->
	`gë_vÆue
(3, 
b_num_åades
);

162 
±u∂e
->
	`£t_vÆue
(4, 
b_comm_tŸÆ
 + 
comm_amou¡
);

163 
±u∂e
->
	`£t_vÆue
(3, 
b_num_åades
 + 1);

164  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

165 
	}
}

167 
w_rc_t
 
	gbrokî_m™_im∂
::
	$b_gë_ôî_by_ödex2
(
ss_m
* 
db
,

168 
brokî_ödex_ôî
* &
ôî
,

169 
brokî_tu∂e
* 
±u∂e
,

170 
ªp_row_t
 &
ª∂ow
,

171 
ªp_row_t
 &
ªphigh
,

172 c⁄° 
TIdít
 
b_id
,

173 
lock_mode_t
 
Æm
,

174 
boﬁ
 
√ed_tu∂e
)

176 
	`as£π
 (
±u∂e
);

177 
	`as£π
 (
_±abÀ
);

179 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("B_INDEX_2");

180 
	`as£π
 (
pödex
);

185 
±u∂e
->
	`£t_vÆue
(0, 
b_id
);

186 
±u∂e
->
	`£t_vÆue
(2, "");

188 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

189 
	`as£π
 (
ª∂ow
.
_de°
);

191 
ãmp
[2];

192 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

193 
ãmp
[1] = '\0';

194 
±u∂e
->
	`£t_vÆue
(2, 
ãmp
);

195 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

196 
	`as£π
 (
ªphigh
.
_de°
);

199 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

200 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

201 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

202  (
RCOK
);

203 
	}
}

205 
w_rc_t
 
	gbrokî_m™_im∂
::
	$b_gë_ôî_by_ödex3
(
ss_m
* 
db
,

206 
brokî_ödex_ôî
* &
ôî
,

207 
brokî_tu∂e
* 
±u∂e
,

208 
ªp_row_t
 &
ª∂ow
,

209 
ªp_row_t
 &
ªphigh
,

210 c⁄° * 
b_«me
,

211 
lock_mode_t
 
Æm
,

212 
boﬁ
 
√ed_tu∂e
)

214 
	`as£π
 (
±u∂e
);

215 
	`as£π
 (
_±abÀ
);

217 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("B_INDEX_3");

218 
	`as£π
 (
pödex
);

223 
±u∂e
->
	`£t_vÆue
(2, 
b_«me
);

224 
±u∂e
->
	`£t_vÆue
(0, () 0);

226 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

227 
	`as£π
 (
ª∂ow
.
_de°
);

229 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

230 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

231 
	`as£π
 (
ªphigh
.
_de°
);

234 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

235 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

236 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

237  (
RCOK
);

238 
	}
}

245 
w_rc_t
 
	gˇsh_å™ß˘i⁄_m™_im∂
::
	$˘_ödex_¥obe
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
å_id
)

247 
	`as£π
 (
±u∂e
);

248 
±u∂e
->
	`£t_vÆue
(0, 
å_id
);

249  (
	`ödex_¥obe_by_«me
(
db
, "CT_INDEX", 
±u∂e
));

250 
	}
}

252 
w_rc_t
 
	gˇsh_å™ß˘i⁄_m™_im∂
::
	$˘_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
t_id
)

254 
	`as£π
 (
±u∂e
);

255 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

256  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "CT_INDEX", 
±u∂e
));

257 
	}
}

259 
w_rc_t
 
	gˇsh_å™ß˘i⁄_m™_im∂
::
	$˘_upd©e_«me
(
ss_m
* 
db
, 
ˇsh_å™ß˘i⁄_tu∂e
* 
±u∂e
, c⁄° * 
˘_«me
, 
lock_mode_t
 
lm
)

261 
	`as£π
 (
±u∂e
);

262 
±u∂e
->
	`£t_vÆue
(3, 
˘_«me
);

263  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

264 
	}
}

271 
w_rc_t
 
	gch¨ge_m™_im∂
::
	$ch_ödex_¥obe
(
ss_m
* 
db
, 
ch¨ge_tu∂e
* 
±u∂e
, c⁄° 
cu°_tõr
, c⁄° * 
åade_ty≥_id
)

273 
	`as£π
 (
±u∂e
);

274 
±u∂e
->
	`£t_vÆue
(0, 
åade_ty≥_id
);

275 
±u∂e
->
	`£t_vÆue
(1, 
cu°_tõr
);

276  (
	`ödex_¥obe_by_«me
(
db
, "CH_INDEX", 
±u∂e
));

277 
	}
}

284 
w_rc_t
 
	gcommissi⁄_øã_m™_im∂
::
	$¸_gë_ôî_by_ödex
(
ss_m
* 
db
,

285 
commissi⁄_øã_ödex_ôî
* &
ôî
,

286 
commissi⁄_øã_tu∂e
* 
±u∂e
,

287 
ªp_row_t
 &
ª∂ow
,

288 
ªp_row_t
 &
ªphigh
,

289 c⁄° 
c_tõr
,

290 c⁄° * 
ty≥_id
,

291 c⁄° * 
s_ex_id
,

292 c⁄° 
åade_qty
,

293 
lock_mode_t
 
Æm
,

294 
boﬁ
 
√ed_tu∂e
)

296 
	`as£π
 (
±u∂e
);

297 
	`as£π
 (
_±abÀ
);

299 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CR_INDEX");

300 
	`as£π
 (
pödex
);

305 
±u∂e
->
	`£t_vÆue
(0, 
c_tõr
);

306 
±u∂e
->
	`£t_vÆue
(1, 
ty≥_id
);

307 
±u∂e
->
	`£t_vÆue
(2, 
s_ex_id
);

308 
±u∂e
->
	`£t_vÆue
(3, ()0);

310 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

311 
	`as£π
 (
ª∂ow
.
_de°
);

313 
±u∂e
->
	`£t_vÆue
(3, 
åade_qty
);

314 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

315 
	`as£π
 (
ªphigh
.
_de°
);

318 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

319 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

320 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

321  (
RCOK
);

322 
	}
}

329 
w_rc_t
 
	gcom∑ny_m™_im∂
::
	$co_gë_ôî_by_ödex2
(
ss_m
* 
db
,

330 
com∑ny_ödex_ôî
* &
ôî
,

331 
com∑ny_tu∂e
* 
±u∂e
,

332 
ªp_row_t
 &
ª∂ow
,

333 
ªp_row_t
 &
ªphigh
,

334 c⁄° * 
co_«me
,

335 
lock_mode_t
 
Æm
,

336 
boﬁ
 
√ed_tu∂e
)

338 
	`as£π
 (
±u∂e
);

341 
	`as£π
 (
_±abÀ
);

342 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CO_INDEX_2");

343 
	`as£π
 (
pödex
);

346 
±u∂e
->
	`£t_vÆue
(2, 
co_«me
);

347 
±u∂e
->
	`£t_vÆue
(0, ()0);

349 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

350 
	`as£π
 (
ª∂ow
.
_de°
);

353 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

355 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

356 
	`as£π
 (
ªphigh
.
_de°
);

359 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

360 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

361 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

362  (
RCOK
);

363 
	}
}

366 
w_rc_t
 
	gcom∑ny_m™_im∂
::
	$co_ödex_¥obe
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
co_id
)

368 
	`as£π
 (
±u∂e
);

369 
±u∂e
->
	`£t_vÆue
(0, 
co_id
);

370  (
	`ödex_¥obe_by_«me
(
db
, "CO_INDEX", 
±u∂e
));

371 
	}
}

373 
w_rc_t
 
	gcom∑ny_m™_im∂
::
	$co_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
co_id
)

375 
	`as£π
 (
±u∂e
);

376 
±u∂e
->
	`£t_vÆue
(0, 
co_id
);

377  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "CO_INDEX", 
±u∂e
));

378 
	}
}

380 
w_rc_t
 
	gcom∑ny_m™_im∂
::
	$co_upd©e_•øã
(
ss_m
* 
db
, 
com∑ny_tu∂e
* 
±u∂e
, c⁄° * 
•øã
, 
lock_mode_t
 
lm
)

382 
	`as£π
 (
±u∂e
);

383 
±u∂e
->
	`£t_vÆue
(4, 
•øã
);

384  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

385 
	}
}

387 
w_rc_t
 
	gcom∑ny_m™_im∂
::
	$co_gë_ôî_by_ödex3
(
ss_m
* 
db
,

388 
com∑ny_ödex_ôî
* &
ôî
,

389 
com∑ny_tu∂e
* 
±u∂e
,

390 
ªp_row_t
 &
ª∂ow
,

391 
ªp_row_t
 &
ªphigh
,

392 c⁄° * 
ö_id
,

393 
lock_mode_t
 
Æm
,

394 
boﬁ
 
√ed_tu∂e
)

396 
	`as£π
 (
±u∂e
);

399 
	`as£π
 (
_±abÀ
);

400 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CO_INDEX_3");

401 
	`as£π
 (
pödex
);

404 
±u∂e
->
	`£t_vÆue
(3, 
ö_id
);

405 
±u∂e
->
	`£t_vÆue
(0, ()0);

407 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

408 
	`as£π
 (
ª∂ow
.
_de°
);

411 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

413 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

414 
	`as£π
 (
ªphigh
.
_de°
);

416 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

417 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

418 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

419  (
RCOK
);

420 
	}
}

427 
w_rc_t
 
	gcom∑ny_com≥tô‹_m™_im∂
::
	$cc_gë_ôî_by_ödex
(
ss_m
* 
db
,

428 
com∑ny_com≥tô‹_ödex_ôî
* &
ôî
,

429 
com∑ny_com≥tô‹_tu∂e
* 
±u∂e
,

430 
ªp_row_t
 &
ª∂ow
,

431 
ªp_row_t
 &
ªphigh
,

432 c⁄° 
TIdít
 
co_id
,

433 
boﬁ
 
√ed_tu∂e
,

434 
lock_mode_t
 
Æm
)

436 
	`as£π
 (
±u∂e
);

439 
	`as£π
 (
_±abÀ
);

440 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CP_INDEX");

441 
	`as£π
 (
pödex
);

446 
±u∂e
->
	`£t_vÆue
(0, 
co_id
);

447 
±u∂e
->
	`£t_vÆue
(1, ()0);

448 
±u∂e
->
	`£t_vÆue
(2, "");

450 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

451 
	`as£π
 (
ª∂ow
.
_de°
);

453 
±u∂e
->
	`£t_vÆue
(0, 
co_id
 + 1);

454 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

455 
	`as£π
 (
ªphigh
.
_de°
);

458 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

459 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

460 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

461  (
RCOK
);

462 
	}
}

469 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_ödex_¥obe
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
cu°_id
)

471 
	`as£π
 (
±u∂e
);

472 
±u∂e
->
	`£t_vÆue
(0, 
cu°_id
);

473  (
	`ödex_¥obe_by_«me
(
db
, "C_INDEX", 
±u∂e
));

474 
	}
}

476 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
cu°_id
)

478 
	`as£π
 (
±u∂e
);

479 
±u∂e
->
	`£t_vÆue
(0, 
cu°_id
);

480  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "C_INDEX", 
±u∂e
));

481 
	}
}

483 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_upd©e_emaû2
(
ss_m
* 
db
, 
cu°omî_tu∂e
* 
±u∂e
, c⁄° * 
emaû2
, 
lock_mode_t
 
lm
)

485 
	`as£π
 (
±u∂e
);

486 
±u∂e
->
	`£t_vÆue
(23, 
emaû2
);

487  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

488 
	}
}

490 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_gë_ôî_by_ödex2
(
ss_m
* 
db
,

491 
cu°omî_ödex_ôî
* &
ôî
,

492 
cu°omî_tu∂e
* 
±u∂e
,

493 
ªp_row_t
 &
ª∂ow
,

494 
ªp_row_t
 &
ªphigh
,

495 c⁄° * 
èx_id
,

496 
lock_mode_t
 
Æm
,

497 
boﬁ
 
√ed_tu∂e
)

499 
	`as£π
 (
±u∂e
);

502 
	`as£π
 (
_±abÀ
);

503 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("C_INDEX_2");

504 
	`as£π
 (
pödex
);

509 
±u∂e
->
	`£t_vÆue
(1, 
èx_id
);

510 
±u∂e
->
	`£t_vÆue
(0, () 0);

512 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

513 
	`as£π
 (
ª∂ow
.
_de°
);

515 
±u∂e
->
	`£t_vÆue
(1, 
èx_id
);

516 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

518 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

519 
	`as£π
 (
ªphigh
.
_de°
);

522 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

523 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

524 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

525  (
RCOK
);

526 
	}
}

528 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_gë_ôî_by_ödex3
(
ss_m
* 
db
,

529 
cu°omî_ödex_ôî
* &
ôî
,

530 
cu°omî_tu∂e
* 
±u∂e
,

531 
ªp_row_t
 &
ª∂ow
,

532 
ªp_row_t
 &
ªphigh
,

533 c⁄° 
TIdít
 
cu°_id
,

534 
lock_mode_t
 
Æm
,

535 
boﬁ
 
√ed_tu∂e
)

537 
	`as£π
 (
±u∂e
);

540 
	`as£π
 (
_±abÀ
);

541 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("C_INDEX_3");

542 
	`as£π
 (
pödex
);

547 
±u∂e
->
	`£t_vÆue
(0, 
cu°_id
);

548 
±u∂e
->
	`£t_vÆue
(7, () 0);

550 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

551 
	`as£π
 (
ª∂ow
.
_de°
);

553 
±u∂e
->
	`£t_vÆue
(0, 
cu°_id
);

554 
±u∂e
->
	`£t_vÆue
(7, (Ë
MAX_SHORT
);

556 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

557 
	`as£π
 (
ªphigh
.
_de°
);

560 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

561 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

562 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

563  (
RCOK
);

564 
	}
}

571 
w_rc_t
 
	gcu°omî_accou¡_m™_im∂
::
	$ˇ_ödex_¥obe
(
ss_m
* 
db
, 
cu°omî_accou¡_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ac˘_id
)

573 
	`as£π
 (
±u∂e
);

574 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

575  (
	`ödex_¥obe_by_«me
(
db
, "CA_INDEX", 
±u∂e
));

576 
	}
}

578 
w_rc_t
 
	gcu°omî_accou¡_m™_im∂
::
	$ˇ_upd©e_bÆ
(
ss_m
* 
db
, 
cu°omî_accou¡_tu∂e
* 
±u∂e
,

579 c⁄° 
TIdít
 
ac˘_id
, c⁄° 
£_amou¡
,

580 
lock_mode_t
 
lm
)

582 
	`as£π
 (
±u∂e
);

584 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

585 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "CA_INDEX", 
±u∂e
));

587 
ˇ_bÆ
;

588 
±u∂e
->
	`gë_vÆue
(5, 
ˇ_bÆ
);

589 
±u∂e
->
	`£t_vÆue
(5, 
ˇ_bÆ
 + 
£_amou¡
);

590  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

591 
	}
}

593 
w_rc_t
 
	gcu°omî_accou¡_m™_im∂
::
	$ˇ_gë_ôî_by_ödex2
(
ss_m
* 
db
,

594 
cu°omî_accou¡_ödex_ôî
* &
ôî
,

595 
cu°omî_accou¡_tu∂e
* 
±u∂e
,

596 
ªp_row_t
 &
ª∂ow
,

597 
ªp_row_t
 &
ªphigh
,

598 c⁄° 
TIdít
 
cu°_id
,

599 
lock_mode_t
 
Æm
,

600 
boﬁ
 
√ed_tu∂e
)

602 
	`as£π
 (
±u∂e
);

605 
	`as£π
 (
_±abÀ
);

606 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CA_INDEX_2");

607 
	`as£π
 (
pödex
);

612 
±u∂e
->
	`£t_vÆue
(2, 
cu°_id
);

614 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

615 
	`as£π
 (
ª∂ow
.
_de°
);

617 
±u∂e
->
	`£t_vÆue
(2, 
cu°_id
 + 1);

619 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

620 
	`as£π
 (
ªphigh
.
_de°
);

623 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

624 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

625 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

626  (
RCOK
);

627 
	}
}

634 
w_rc_t
 
	gcu°omî_èxøã_m™_im∂
::
	$cx_gë_ôî_by_ödex
(
ss_m
* 
db
,

635 
cu°omî_èxøã_ödex_ôî
* &
ôî
,

636 
cu°omî_èxøã_tu∂e
* 
±u∂e
,

637 
ªp_row_t
 &
ª∂ow
,

638 
ªp_row_t
 &
ªphigh
,

639 c⁄° 
TIdít
 
cu°_id
,

640 
lock_mode_t
 
Æm
,

641 
boﬁ
 
√ed_tu∂e
)

643 
	`as£π
 (
±u∂e
);

646 
	`as£π
 (
_±abÀ
);

647 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("CX_INDEX");

648 
	`as£π
 (
pödex
);

653 
±u∂e
->
	`£t_vÆue
(1, 
cu°_id
);

654 
±u∂e
->
	`£t_vÆue
(0, "");

656 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

657 
	`as£π
 (
ª∂ow
.
_de°
);

659 
ãmp
[2];

660 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

661 
ãmp
[1] = '\0';

662 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

664 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

665 
	`as£π
 (
ªphigh
.
_de°
);

668 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

669 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

670 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

671  (
RCOK
);

672 
	}
}

674 
w_rc_t
 
	gcu°omî_èxøã_m™_im∂
::
	$cx_upd©e_txid
(
ss_m
* 
db
,

675 
cu°omî_èxøã_tu∂e
* 
±u∂e
,

676 c⁄° * 
√w_èx_øã
,

677 
lock_mode_t
 
lm
)

679 
	`as£π
 (
±u∂e
);

682 
	`W_DO
(
	`ªad_tu∂e
(
±u∂e
));

685 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "CX_INDEX", 
±u∂e
));

688 
±u∂e
->
	`£t_vÆue
(0, 
√w_èx_øã
);

689 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

692 
	`W_DO
(
	`add_ödex_íåy
(
db
, "CX_INDEX", 
±u∂e
));

694  (
RCOK
);

695 
	}
}

702 
w_rc_t
 
	gdaûy_m¨kë_m™_im∂
::
	$dm_ödex_¥obe
(
ss_m
* 
db
, 
daûy_m¨kë_tu∂e
* 
±u∂e
,

703 c⁄° * 
symbﬁ
, c⁄° 
myTime
 
°¨t_d©e
)

705 
	`as£π
 (
±u∂e
);

706 
±u∂e
->
	`£t_vÆue
(0, 
°¨t_d©e
);

707 
±u∂e
->
	`£t_vÆue
(1, 
symbﬁ
);

708  (
	`ödex_¥obe_by_«me
(
db
, "DM_INDEX_2", 
±u∂e
));

709 
	}
}

711 
w_rc_t
 
	gdaûy_m¨kë_m™_im∂
::
	$dm_upd©e_vﬁ
(
ss_m
* 
db
,

712 
daûy_m¨kë_tu∂e
* 
±u∂e
,

713 c⁄° 
vﬁ_ö¸
,

714 
lock_mode_t
 
lm
)

716 
	`as£π
 (
±u∂e
);

719 
	`W_DO
(
	`ªad_tu∂e
(
±u∂e
));

722 
ex_vﬁ
;

723 
±u∂e
->
	`gë_vÆue
(5, 
ex_vﬁ
);

724 
±u∂e
->
	`£t_vÆue
(5, (
ex_vﬁ
 + 
vﬁ_ö¸
));

725  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

726 
	}
}

728 
w_rc_t
 
	gdaûy_m¨kë_m™_im∂
::
	$dm_gë_ôî_by_ödex
(
ss_m
* 
db
,

729 
daûy_m¨kë_ödex_ôî
* &
ôî
,

730 
daûy_m¨kë_tu∂e
* 
±u∂e
,

731 
ªp_row_t
 &
ª∂ow
,

732 
ªp_row_t
 &
ªphigh
,

733 c⁄° * 
symbﬁ
,

734 c⁄° 
myTime
 
°¨t_day
,

735 
lock_mode_t
 
Æm
,

736 
boﬁ
 
√ed_tu∂e
)

738 
	`as£π
 (
±u∂e
);

744 
	`as£π
 (
_±abÀ
);

745 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("DM_INDEX");

746 
	`as£π
 (
pödex
);

749 
±u∂e
->
	`£t_vÆue
(1, 
symbﬁ
);

750 
±u∂e
->
	`£t_vÆue
(0, 
°¨t_day
);

751 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

752 
	`as£π
 (
ª∂ow
.
_de°
);

755 
±u∂e
->
	`£t_vÆue
(0, 
MAX_DTS
);

756 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

757 
	`as£π
 (
ªphigh
.
_de°
);

759 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

760 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

761 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

762  (
RCOK
);

763 
	}
}

770 
w_rc_t
 
	gexch™ge_m™_im∂
::
	$ex_upd©e_desc
(
ss_m
* 
db
,

771 
exch™ge_tu∂e
* 
±u∂e
,

772 c⁄° * 
√w_desc
,

773 
lock_mode_t
 
lm
)

775 
	`as£π
 (
±u∂e
);

776 
±u∂e
->
	`£t_vÆue
(5, 
√w_desc
);

777  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

778 
	}
}

780 
w_rc_t
 
	gexch™ge_m™_im∂
::
	$ex_ödex_¥obe
(
ss_m
* 
db
,

781 
exch™ge_tu∂e
* 
±u∂e
,

782 c⁄° * 
id
)

784 
	`as£π
 (
±u∂e
);

785 
±u∂e
->
	`£t_vÆue
(0, 
id
);

786  (
	`ödex_¥obe_by_«me
(
db
, "EX_INDEX", 
±u∂e
));

787 
	}
}

794 
w_rc_t
 
	gfö™cül_m™_im∂
::
	$fi_upd©e_desc
(
ss_m
* 
db
, 
fö™cül_tu∂e
* 
±u∂e
,

795 c⁄° 
myTime
 
√w_qå_°¨t_d©e
, 
lock_mode_t
 
lm
)

797 
	`as£π
 (
±u∂e
);

798 
±u∂e
->
	`£t_vÆue
(3, 
√w_qå_°¨t_d©e
);

799  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

800 
	}
}

802 
w_rc_t
 
	gfö™cül_m™_im∂
::
	$fi_gë_ôî_by_ödex
(
ss_m
* 
db
,

803 
fö™cül_ödex_ôî
* &
ôî
,

804 
fö™cül_tu∂e
* 
±u∂e
,

805 
ªp_row_t
 &
ª∂ow
,

806 
ªp_row_t
 &
ªphigh
,

807 c⁄° 
TIdít
 
co_id
,

808 
lock_mode_t
 
Æm
,

809 
boﬁ
 
√ed_tu∂e
)

811 
	`as£π
 (
±u∂e
);

816 
	`as£π
 (
_±abÀ
);

817 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("FI_INDEX");

818 
	`as£π
 (
pödex
);

821 
±u∂e
->
	`£t_vÆue
(0, 
co_id
);

822 
±u∂e
->
	`£t_vÆue
(1, ()0);

823 
±u∂e
->
	`£t_vÆue
(2, ()0);

825 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

826 
	`as£π
 (
ª∂ow
.
_de°
);

829 
±u∂e
->
	`£t_vÆue
(0, 
co_id
 + 1);

830 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

831 
	`as£π
 (
ªphigh
.
_de°
);

834 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

835 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

836 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

837  (
RCOK
);

838 
	}
}

845 
w_rc_t
 
	ghﬁdög_m™_im∂
::
	$h_gë_ôî_by_ödex2
(
ss_m
* 
db
,

846 
hﬁdög_ödex_ôî
* &
ôî
,

847 
hﬁdög_tu∂e
* 
±u∂e
,

848 
ªp_row_t
 &
ª∂ow
,

849 
ªp_row_t
 &
ªphigh
,

850 c⁄° 
TIdít
 
ac˘_id
,

851 c⁄° * 
symbﬁ
,

852 
boﬁ
 
is_backw¨d
,

853 
lock_mode_t
 
Æm
,

854 
boﬁ
 
√ed_tu∂e
)

856 
	`as£π
 (
±u∂e
);

862 
	`as£π
 (
_±abÀ
);

863 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("H_INDEX_2");

864 
	`as£π
 (
pödex
);

867 
±u∂e
->
	`£t_vÆue
(1, 
ac˘_id
);

868 
±u∂e
->
	`£t_vÆue
(2, 
symbﬁ
);

869 
±u∂e
->
	`£t_vÆue
(3, (
myTime
)0);

871 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

872 
	`as£π
 (
ª∂ow
.
_de°
);

875 
±u∂e
->
	`£t_vÆue
(3, 
MAX_DTS
);

877 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

878 
	`as£π
 (
ªphigh
.
_de°
);

880 if(
is_backw¨d
) {

881 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

882 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
),

883 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
)));

885 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

886 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

887 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

890  (
RCOK
);

891 
	}
}

893 
w_rc_t
 
	ghﬁdög_m™_im∂
::
	$h_upd©e_qty
(
ss_m
* 
db
,

894 
hﬁdög_tu∂e
* 
±u∂e
,

895 c⁄° 
qty
,

896 
lock_mode_t
 
lm
)

899 
	`as£π
 (
±u∂e
);

900 
±u∂e
->
	`£t_vÆue
(5, 
qty
);

901  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

902 
	}
}

904 
w_rc_t
 
	ghﬁdög_m™_im∂
::
	$h_dñëe_tu∂e
(
ss_m
* 
db
, 
hﬁdög_tu∂e
* 
±u∂e
, 
rid_t
 
rid
)

906 
	`as£π
 (
±u∂e
);

909 
±u∂e
->
	`£t_rid
(
rid
);

910 
	`W_DO
(
	`ªad_tu∂e
(
±u∂e
, 
EX
));

913 
	`W_DO
(
	`dñëe_tu∂e
(
db
, 
±u∂e
));

915  (
RCOK
);

916 
	}
}

923 
w_rc_t
 
	ghﬁdög_hi°‹y_m™_im∂
::
	$hh_gë_ôî_by_ödex2
(
ss_m
* 
db
,

924 
hﬁdög_hi°‹y_ödex_ôî
* &
ôî
,

925 
hﬁdög_hi°‹y_tu∂e
* 
±u∂e
,

926 
ªp_row_t
 &
ª∂ow
,

927 
ªp_row_t
 &
ªphigh
,

928 
TIdít
 
åade_id
,

929 
lock_mode_t
 
Æm
,

930 
boﬁ
 
√ed_tu∂e
)

932 
	`as£π
 (
±u∂e
);

935 
	`as£π
 (
_±abÀ
);

936 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("HH_INDEX_2");

937 
	`as£π
 (
pödex
);

942 
±u∂e
->
	`£t_vÆue
(1, 
åade_id
);

944 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

945 
	`as£π
 (
ª∂ow
.
_de°
);

947 
±u∂e
->
	`£t_vÆue
(1, 
åade_id
+1);

949 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

950 
	`as£π
 (
ªphigh
.
_de°
);

953 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

954 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

955 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

956  (
RCOK
);

957 
	}
}

964 
w_rc_t
 
	ghﬁdög_summ¨y_m™_im∂
::
	$hs_ödex_¥obe
(
ss_m
* 
db
,

965 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

966 c⁄° 
TIdít
 
ac˘_id
,

967 c⁄° * 
symbﬁ
)

969 
	`as£π
 (
±u∂e
);

970 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

971 
±u∂e
->
	`£t_vÆue
(1, 
symbﬁ
);

972  (
	`ödex_¥obe_by_«me
(
db
, "HS_INDEX", 
±u∂e
));

973 
	}
}

975 
w_rc_t
 
	ghﬁdög_summ¨y_m™_im∂
::
	$hs_upd©e_qty
(
ss_m
* 
db
,

976 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

977 c⁄° 
TIdít
 
ac˘_id
,

978 c⁄° * 
symbﬁ
,

979 c⁄° 
qty
,

980 
lock_mode_t
 
lm
)

982 
	`as£π
 (
±u∂e
);

984 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

985 
±u∂e
->
	`£t_vÆue
(1, 
symbﬁ
);

986 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "HS_INDEX", 
±u∂e
));

988 
±u∂e
->
	`£t_vÆue
(2, 
qty
);

989  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

990 
	}
}

992 
w_rc_t
 
	ghﬁdög_summ¨y_m™_im∂
::
	$hs_gë_ôî_by_ödex
(
ss_m
* 
db
,

993 
hﬁdög_summ¨y_ödex_ôî
* &
ôî
,

994 
hﬁdög_summ¨y_tu∂e
* 
±u∂e
,

995 
ªp_row_t
 &
ª∂ow
,

996 
ªp_row_t
 &
ªphigh
,

997 c⁄° 
TIdít
 
ac˘_id
,

998 
boﬁ
 
√ed_tu∂e
,

999 
lock_mode_t
 
Æm
)

1001 
	`as£π
 (
±u∂e
);

1004 
	`as£π
 (
_±abÀ
);

1005 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("HS_INDEX");

1006 
	`as£π
 (
pödex
);

1011 
±u∂e
->
	`£t_vÆue
(0, 
ac˘_id
);

1012 
±u∂e
->
	`£t_vÆue
(1, "");

1014 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1015 
	`as£π
 (
ª∂ow
.
_de°
);

1017 
ãmp
[2];

1018 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1019 
ãmp
[1] = '\0';

1020 
±u∂e
->
	`£t_vÆue
(1, 
ãmp
);

1022 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1023 
	`as£π
 (
ªphigh
.
_de°
);

1026 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1027 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1028 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1029  (
RCOK
);

1030 
	}
}

1037 
w_rc_t
 
	gödu°ry_m™_im∂
::
	$ö_ödex_¥obe
(
ss_m
* 
db
, 
ödu°ry_tu∂e
* 
±u∂e
, c⁄° * 
id
)

1039 
	`as£π
 (
±u∂e
);

1040 
±u∂e
->
	`£t_vÆue
(0, 
id
);

1041  (
	`ödex_¥obe_by_«me
(
db
, "IN_INDEX", 
±u∂e
));

1042 
	}
}

1044 
w_rc_t
 
	gödu°ry_m™_im∂
::
	$ö_gë_ôî_by_ödex2
(
ss_m
* 
db
,

1045 
ödu°ry_ödex_ôî
* &
ôî
,

1046 
ödu°ry_tu∂e
* 
±u∂e
,

1047 
ªp_row_t
 &
ª∂ow
,

1048 
ªp_row_t
 &
ªphigh
,

1049 c⁄° * 
ö_«me
,

1050 
lock_mode_t
 
Æm
,

1051 
boﬁ
 
√ed_tu∂e
)

1053 
	`as£π
 (
±u∂e
);

1056 
	`as£π
 (
_±abÀ
);

1057 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("IN_INDEX_2");

1058 
	`as£π
 (
pödex
);

1061 
±u∂e
->
	`£t_vÆue
(1, 
ö_«me
);

1062 
±u∂e
->
	`£t_vÆue
(0, "");

1064 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1065 
	`as£π
 (
ª∂ow
.
_de°
);

1068 
ãmp
[2];

1069 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1070 
ãmp
[1] = '\0';

1071 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1073 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1074 
	`as£π
 (
ªphigh
.
_de°
);

1077 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1078 
Æm
, 
√ed_tu∂e
,

1079 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1080 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1081  (
RCOK
);

1082 
	}
}

1084 
w_rc_t
 
	gödu°ry_m™_im∂
::
	$ö_gë_ôî_by_ödex3
(
ss_m
* 
db
,

1085 
ödu°ry_ödex_ôî
* &
ôî
,

1086 
ödu°ry_tu∂e
* 
±u∂e
,

1087 
ªp_row_t
 &
ª∂ow
,

1088 
ªp_row_t
 &
ªphigh
,

1089 c⁄° * 
sc_id
,

1090 
lock_mode_t
 
Æm
,

1091 
boﬁ
 
√ed_tu∂e
)

1093 
	`as£π
 (
±u∂e
);

1096 
	`as£π
 (
_±abÀ
);

1097 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("IN_INDEX_3");

1098 
	`as£π
 (
pödex
);

1101 
±u∂e
->
	`£t_vÆue
(2, 
sc_id
);

1102 
±u∂e
->
	`£t_vÆue
(0, "");

1104 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1105 
	`as£π
 (
ª∂ow
.
_de°
);

1108 
ãmp
[2];

1109 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1110 
ãmp
[1] = '\0';

1111 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1113 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1114 
	`as£π
 (
ªphigh
.
_de°
);

1117 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1118 
Æm
, 
√ed_tu∂e
,

1119 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1120 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1121  (
RCOK
);

1122 
	}
}

1129 
w_rc_t
 
	gœ°_åade_m™_im∂
::
	$…_ödex_¥obe
(
ss_m
* 
db
, 
œ°_åade_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
)

1131 
	`as£π
 (
±u∂e
);

1132 
±u∂e
->
	`£t_vÆue
(0, 
symbﬁ
);

1133  (
	`ödex_¥obe_by_«me
(
db
, "LT_INDEX", 
±u∂e
));

1134 
	}
}

1136 
w_rc_t
 
	gœ°_åade_m™_im∂
::
	$…_upd©e_by_ödex
(
ss_m
* 
db
, 
œ°_åade_tu∂e
* 
±u∂e
,

1137 c⁄° * 
symbﬁ
,

1138 c⁄° 
¥i˚_quŸe
,

1139 c⁄° 
åade_qty
,

1140 c⁄° 
myTime
 
now_dts
,

1141 
lock_mode_t
 
lm
)

1143 
	`as£π
 (
±u∂e
);

1148 
±u∂e
->
	`£t_vÆue
(0, 
symbﬁ
);

1149 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "LT_INDEX", 
±u∂e
));

1151 
…_vﬁ
;

1152 
±u∂e
->
	`gë_vÆue
(4, 
…_vﬁ
);

1154 
±u∂e
->
	`£t_vÆue
(4, 
…_vﬁ
 + ()
åade_qty
);

1155 
±u∂e
->
	`£t_vÆue
(2, 
¥i˚_quŸe
);

1156 
±u∂e
->
	`£t_vÆue
(1, 
now_dts
);

1157  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1158 
	}
}

1165 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_ödex_¥obe
(
ss_m
* 
db
, 
£curôy_tu∂e
* 
±u∂e
, c⁄° * 
symbﬁ
)

1167 
	`as£π
 (
±u∂e
);

1168 
±u∂e
->
	`£t_vÆue
(0, 
symbﬁ
);

1169  (
	`ödex_¥obe_by_«me
(
db
, "S_INDEX", 
±u∂e
));

1170 
	}
}

1172 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_gë_ôî_by_ödex4
(
ss_m
* 
db
,

1173 
£curôy_ödex_ôî
* &
ôî
,

1174 
£curôy_tu∂e
* 
±u∂e
,

1175 
ªp_row_t
 &
ª∂ow
,

1176 
ªp_row_t
 &
ªphigh
,

1177 c⁄° 
TIdít
 
co_id
,

1178 
lock_mode_t
 
Æm
,

1179 
boﬁ
 
√ed_tu∂e
)

1181 
	`as£π
 (
±u∂e
);

1184 
	`as£π
 (
_±abÀ
);

1186 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("S_INDEX_4");

1187 
	`as£π
 (
pödex
);

1192 
±u∂e
->
	`£t_vÆue
(5, 
co_id
);

1193 
±u∂e
->
	`£t_vÆue
(1, "");

1194 
±u∂e
->
	`£t_vÆue
(0, "");

1196 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1197 
	`as£π
 (
ª∂ow
.
_de°
);

1199 
ãmp
[2];

1200 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1201 
ãmp
[1] = '\0';

1202 
±u∂e
->
	`£t_vÆue
(1, 
ãmp
);

1203 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1204 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1205 
	`as£π
 (
ªphigh
.
_de°
);

1208 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1209 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1210 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1211  (
RCOK
);

1212 
	}
}

1214 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_gë_ôî_by_ödex4
(
ss_m
* 
db
,

1215 
£curôy_ödex_ôî
* &
ôî
,

1216 
£curôy_tu∂e
* 
±u∂e
,

1217 
ªp_row_t
 &
ª∂ow
,

1218 
ªp_row_t
 &
ªphigh
,

1219 c⁄° 
TIdít
 
co_id
,

1220 c⁄° * 
issue
,

1221 
lock_mode_t
 
Æm
,

1222 
boﬁ
 
√ed_tu∂e
)

1224 
	`as£π
 (
±u∂e
);

1227 
	`as£π
 (
_±abÀ
);

1229 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("S_INDEX_4");

1230 
	`as£π
 (
pödex
);

1235 
±u∂e
->
	`£t_vÆue
(5, 
co_id
);

1236 
±u∂e
->
	`£t_vÆue
(1, 
issue
);

1237 
±u∂e
->
	`£t_vÆue
(0, "");

1239 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1240 
	`as£π
 (
ª∂ow
.
_de°
);

1242 
ãmp
[2];

1243 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1244 
ãmp
[1] = '\0';

1245 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1246 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1247 
	`as£π
 (
ªphigh
.
_de°
);

1250 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1251 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1252 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1253  (
RCOK
);

1254 
	}
}

1256 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_gë_ôî_by_ödex
(
ss_m
* 
db
,

1257 
£curôy_ödex_ôî
* &
ôî
,

1258 
£curôy_tu∂e
* 
±u∂e
,

1259 
ªp_row_t
 &
ª∂ow
,

1260 
ªp_row_t
 &
ªphigh
,

1261 c⁄° * 
symbﬁ
,

1262 
lock_mode_t
 
Æm
,

1263 
boﬁ
 
√ed_tu∂e
)

1265 
	`as£π
 (
±u∂e
);

1268 
	`as£π
 (
_±abÀ
);

1269 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("S_INDEX");

1270 
	`as£π
 (
pödex
);

1275 
±u∂e
->
	`£t_vÆue
(0, 
symbﬁ
);

1277 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1278 
	`as£π
 (
ª∂ow
.
_de°
);

1280 
ãmp
[2];

1281 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1282 
ãmp
[1] = '\0';

1283 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1285 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1286 
	`as£π
 (
ªphigh
.
_de°
);

1289 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1290 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1291 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1292  (
RCOK
);

1293 
	}
}

1295 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

1296 
£curôy_tu∂e
* 
±u∂e
,

1297 c⁄° * 
symbﬁ
)

1299 
	`as£π
 (
±u∂e
);

1300 
±u∂e
->
	`£t_vÆue
(0, 
symbﬁ
);

1301  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "S_INDEX", 
±u∂e
));

1302 
	}
}

1304 
w_rc_t
 
	g£curôy_m™_im∂
::
	$s_upd©e_ed
(
ss_m
* 
db
, 
£curôy_tu∂e
* 
±u∂e
, c⁄° 
myTime
 
exch_d©e
, 
lock_mode_t
 
lm
)

1306 
	`as£π
 (
±u∂e
);

1307 
±u∂e
->
	`£t_vÆue
(8, 
exch_d©e
);

1308  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1309 
	}
}

1316 
w_rc_t
 
	g√ws_ôem_m™_im∂
::
	$ni_ödex_¥obe
(
ss_m
* 
db
, 
√ws_ôem_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
ni_id
)

1318 
	`as£π
 (
±u∂e
);

1319 
±u∂e
->
	`£t_vÆue
(0, 
ni_id
);

1320  (
	`ödex_¥obe_by_«me
(
db
, "NI_INDEX", 
±u∂e
));

1321 
	}
}

1323 
w_rc_t
 
	g√ws_ôem_m™_im∂
::
	$ni_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
,

1324 
√ws_ôem_tu∂e
* 
±u∂e
,

1325 c⁄° 
TIdít
 
ni_id
)

1327 
	`as£π
 (
±u∂e
);

1328 
±u∂e
->
	`£t_vÆue
(0, 
ni_id
);

1329  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "NI_INDEX", 
±u∂e
));

1330 
	}
}

1332 
w_rc_t
 
	g√ws_ôem_m™_im∂
::
	$ni_upd©e_dts_by_ödex
(
ss_m
* 
db
,

1333 
√ws_ôem_tu∂e
* 
±u∂e
,

1334 c⁄° 
myTime
 
ni_dts
,

1335 
lock_mode_t
 
lm
)

1337 
	`as£π
 (
±u∂e
);

1338 
±u∂e
->
	`£t_vÆue
(4, 
ni_dts
);

1339  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1340 
	}
}

1347 
w_rc_t
 
	g√ws_xªf_m™_im∂
::
	$nx_gë_èbÀ_ôî
(
ss_m
* 
db
, 
èbÀ_ôî
* &
ôî
)

1350 
	`W_DO
(
	`gë_ôî_f‹_fûe_sˇn
(
db
, 
ôî
));

1351  (
RCOK
);

1352 
	}
}

1354 
w_rc_t
 
	g√ws_xªf_m™_im∂
::
	$nx_gë_ôî_by_ödex
(
ss_m
* 
db
,

1355 
√ws_xªf_ödex_ôî
* &
ôî
,

1356 
√ws_xªf_tu∂e
* 
±u∂e
,

1357 
ªp_row_t
 &
ª∂ow
,

1358 
ªp_row_t
 &
ªphigh
,

1359 c⁄° 
TIdít
 
co_id
,

1360 
lock_mode_t
 
Æm
,

1361 
boﬁ
 
√ed_tu∂e
)

1363 
	`as£π
 (
±u∂e
);

1366 
	`as£π
 (
_±abÀ
);

1367 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("NX_INDEX");

1368 
	`as£π
 (
pödex
);

1371 
±u∂e
->
	`£t_vÆue
(1, 
co_id
);

1372 
±u∂e
->
	`£t_vÆue
(0, ()0);

1374 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1375 
	`as£π
 (
ª∂ow
.
_de°
);

1378 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

1380 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1381 
	`as£π
 (
ªphigh
.
_de°
);

1384 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1385 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1386 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1387  (
RCOK
);

1388 
	}
}

1395 
w_rc_t
 
	g°©us_ty≥_m™_im∂
::
	$°_ödex_¥obe
(
ss_m
* 
db
, 
°©us_ty≥_tu∂e
* 
±u∂e
, c⁄° * 
°_id
)

1397 
	`as£π
 (
±u∂e
);

1398 
±u∂e
->
	`£t_vÆue
(0, 
°_id
);

1399  (
	`ödex_¥obe_by_«me
(
db
, "ST_INDEX", 
±u∂e
));

1400 
	}
}

1407 
w_rc_t
 
	g£˘‹_m™_im∂
::
	$sc_gë_ôî_by_ödex2
(
ss_m
* 
db
,

1408 
£˘‹_ödex_ôî
* &
ôî
,

1409 
£˘‹_tu∂e
* 
±u∂e
,

1410 
ªp_row_t
 &
ª∂ow
,

1411 
ªp_row_t
 &
ªphigh
,

1412 c⁄° * 
sc_«me
,

1413 
lock_mode_t
 
Æm
,

1414 
boﬁ
 
√ed_tu∂e
)

1416 
	`as£π
 (
±u∂e
);

1419 
	`as£π
 (
_±abÀ
);

1420 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("SC_INDEX_2");

1421 
	`as£π
 (
pödex
);

1424 
±u∂e
->
	`£t_vÆue
(1, 
sc_«me
);

1425 
±u∂e
->
	`£t_vÆue
(0, "");

1427 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1428 
	`as£π
 (
ª∂ow
.
_de°
);

1431 
ãmp
[2];

1432 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1433 
ãmp
[1] = '\0';

1434 
±u∂e
->
	`£t_vÆue
(0, 
ãmp
);

1436 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1437 
	`as£π
 (
ªphigh
.
_de°
);

1440 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1441 
Æm
, 
√ed_tu∂e
,

1442 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1443 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1444  (
RCOK
);

1445 
	}
}

1452 
w_rc_t
 
	g£âÀmít_m™_im∂
::
	$£_ödex_¥obe
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
,c⁄° 
TIdít
 
å_id
)

1454 
	`as£π
 (
±u∂e
);

1455 
±u∂e
->
	`£t_vÆue
(0, 
å_id
);

1456  (
	`ödex_¥obe_by_«me
(
db
, "SE_INDEX", 
±u∂e
));

1457 
	}
}

1459 
w_rc_t
 
	g£âÀmít_m™_im∂
::
	$£_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
å_id
)

1461 
	`as£π
 (
±u∂e
);

1462 
±u∂e
->
	`£t_vÆue
(0, 
å_id
);

1463  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "SE_INDEX", 
±u∂e
));

1464 
	}
}

1466 
w_rc_t
 
	g£âÀmít_m™_im∂
::
	$£_upd©e_«me
(
ss_m
* 
db
, 
£âÀmít_tu∂e
* 
±u∂e
, c⁄° * 
ˇsh_ty≥
, 
lock_mode_t
 
lm
)

1468 
	`as£π
 (
±u∂e
);

1469 
±u∂e
->
	`£t_vÆue
(1, 
ˇsh_ty≥
);

1470  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1471 
	}
}

1478 
w_rc_t
 
	gèxøã_m™_im∂
::
	$tx_ödex_¥obe
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_id
)

1480 
	`as£π
 (
±u∂e
);

1481 
±u∂e
->
	`£t_vÆue
(0, 
tx_id
);

1482  (
	`ödex_¥obe_by_«me
(
db
, "TX_INDEX", 
±u∂e
));

1483 
	}
}

1485 
w_rc_t
 
	gèxøã_m™_im∂
::
	$tx_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_id
)

1487 
	`as£π
 (
±u∂e
);

1488 
±u∂e
->
	`£t_vÆue
(0, 
tx_id
);

1489  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "TX_INDEX", 
±u∂e
));

1490 
	}
}

1492 
w_rc_t
 
	gèxøã_m™_im∂
::
	$tx_upd©e_«me
(
ss_m
* 
db
, 
èxøã_tu∂e
* 
±u∂e
, c⁄° * 
tx_«me
, 
lock_mode_t
 
lm
)

1494 
	`as£π
 (
±u∂e
);

1495 
±u∂e
->
	`£t_vÆue
(1, 
tx_«me
);

1496  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1497 
	}
}

1504 
w_rc_t
 
	gåade_m™_im∂
::
	$t_ödex_¥obe
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
åade_id
)

1506 
	`as£π
 (
±u∂e
);

1507 
±u∂e
->
	`£t_vÆue
(0, 
åade_id
);

1508  (
	`ödex_¥obe_by_«me
(
db
, "T_INDEX", 
±u∂e
));

1509 
	}
}

1511 
w_rc_t
 
	gåade_m™_im∂
::
	$t_upd©e_èx_by_ödex
(
ss_m
* 
db
,

1512 
åade_tu∂e
* 
±u∂e
,

1513 c⁄° 
TIdít
 
t_id
,

1514 c⁄° 
èx_amou¡
,

1515 
lock_mode_t
 
lm
)

1517 
	`as£π
 (
±u∂e
);

1521 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

1522 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "T_INDEX", 
±u∂e
));

1524 
±u∂e
->
	`£t_vÆue
(13, 
èx_amou¡
);

1525  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1526 
	}
}

1528 
w_rc_t
 
	gåade_m™_im∂
::
	$t_upd©e_dts_°did_by_ödex
(
ss_m
* 
db
,

1529 
åade_tu∂e
* 
±u∂e
,

1530 c⁄° 
TIdít
 
ªq_åade_id
,

1531 c⁄° 
myTime
 
now_dts
,

1532 c⁄° * 
°©us_submôãd
,

1533 
lock_mode_t
 
lm
)

1535 
	`as£π
 (
±u∂e
);

1546 
±u∂e
->
	`£t_vÆue
(0, 
ªq_åade_id
);

1547 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "T_INDEX", 
±u∂e
));

1550 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "T_INDEX_2", 
±u∂e
));

1551 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "T_INDEX_3", 
±u∂e
));

1554 
±u∂e
->
	`£t_vÆue
(1, 
now_dts
);

1555 
±u∂e
->
	`£t_vÆue
(2, 
°©us_submôãd
);

1556 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1559 
	`W_DO
(
	`add_ödex_íåy
(
db
, "T_INDEX_2", 
±u∂e
));

1560 
	`W_DO
(
	`add_ödex_íåy
(
db
, "T_INDEX_3", 
±u∂e
));

1562  (
RCOK
);

1563 
	}
}

1565 
w_rc_t
 
	gåade_m™_im∂
::
	$t_upd©e_ˇ_td_sci_ç_by_ödex
(
ss_m
* 
db
,

1566 
åade_tu∂e
* 
±u∂e
,

1567 c⁄° 
TIdít
 
åade_id
,

1568 c⁄° 
comm_amou¡
,

1569 c⁄° 
myTime
 
åade_dts
,

1570 c⁄° * 
°_com∂ëed_id
,

1571 c⁄° 
åade_¥i˚
,

1572 
lock_mode_t
 
lm
)

1574 
	`as£π
 (
±u∂e
);

1577 
±u∂e
->
	`£t_vÆue
(0, 
åade_id
);

1578 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "T_INDEX", 
±u∂e
));

1581 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "T_INDEX_2", 
±u∂e
));

1582 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "T_INDEX_3", 
±u∂e
));

1585 
±u∂e
->
	`£t_vÆue
(1, 
åade_dts
);

1586 
±u∂e
->
	`£t_vÆue
(2, 
°_com∂ëed_id
);

1587 
±u∂e
->
	`£t_vÆue
(10, 
åade_¥i˚
);

1588 
±u∂e
->
	`£t_vÆue
(12, 
comm_amou¡
);

1589 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1592 
	`W_DO
(
	`add_ödex_íåy
(
db
, "T_INDEX_2", 
±u∂e
));

1593 
	`W_DO
(
	`add_ödex_íåy
(
db
, "T_INDEX_3", 
±u∂e
));

1595  (
RCOK
);

1596 
	}
}

1598 
w_rc_t
 
	gåade_m™_im∂
::
	$t_gë_ôî_by_ödex2
(
ss_m
* 
db
,

1599 
åade_ödex_ôî
* &
ôî
,

1600 
åade_tu∂e
* 
±u∂e
,

1601 
ªp_row_t
 &
ª∂ow
,

1602 
ªp_row_t
 &
ªphigh
,

1603 c⁄° 
TIdít
 
ac˘_id
,

1604 c⁄° 
myTime
 
°¨t_dts
,

1605 c⁄° 
myTime
 
íd_dts
,

1606 
boﬁ
 
is_backw¨d
,

1607 
boﬁ
 
√ed_tu∂e
,

1608 
lock_mode_t
 
Æm
)

1610 
	`as£π
 (
±u∂e
);

1615 
	`as£π
 (
_±abÀ
);

1616 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("T_INDEX_2");

1617 
	`as£π
 (
pödex
);

1620 
±u∂e
->
	`£t_vÆue
(8, 
ac˘_id
);

1621 
±u∂e
->
	`£t_vÆue
(1, 
°¨t_dts
);

1622 
±u∂e
->
	`£t_vÆue
(0, () 0);

1624 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1625 
	`as£π
 (
ª∂ow
.
_de°
);

1629 
±u∂e
->
	`£t_vÆue
(1, 
MAX_DTS
);

1630 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

1632 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1633 
	`as£π
 (
ªphigh
.
_de°
);

1636 if(
is_backw¨d
) {

1637 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1638 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
),

1639 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
)));

1641 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1642 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1643 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1646  (
RCOK
);

1647 
	}
}

1649 
w_rc_t
 
	gåade_m™_im∂
::
	$t_gë_ôî_by_ödex3
(
ss_m
* 
db
,

1650 
åade_ödex_ôî
* &
ôî
,

1651 
åade_tu∂e
* 
±u∂e
,

1652 
ªp_row_t
 &
ª∂ow
,

1653 
ªp_row_t
 &
ªphigh
,

1654 c⁄° * 
symbﬁ
,

1655 c⁄° 
myTime
 
°¨t_dts
,

1656 c⁄° 
myTime
 
íd_dts
,

1657 
lock_mode_t
 
Æm
,

1658 
boﬁ
 
√ed_tu∂e
)

1660 
	`as£π
 (
±u∂e
);

1667 
	`as£π
 (
_±abÀ
);

1668 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("T_INDEX_3");

1669 
	`as£π
 (
pödex
);

1672 
±u∂e
->
	`£t_vÆue
(5, 
symbﬁ
);

1673 
±u∂e
->
	`£t_vÆue
(1, 
°¨t_dts
);

1675 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1676 
	`as£π
 (
ª∂ow
.
_de°
);

1679 
±u∂e
->
	`£t_vÆue
(5, 
symbﬁ
);

1680 
±u∂e
->
	`£t_vÆue
(1, 
íd_dts
);

1682 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1683 
	`as£π
 (
ªphigh
.
_de°
);

1687 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1688 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1689 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1690  (
RCOK
);

1691 
	}
}

1693 
w_rc_t
 
	gåade_m™_im∂
::
	$t_ödex_¥obe_f‹upd©e
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
t_id
)

1695 
	`as£π
 (
±u∂e
);

1696 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

1697  (
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "T_INDEX", 
±u∂e
));

1698 
	}
}

1700 
w_rc_t
 
	gåade_m™_im∂
::
	$t_upd©e_«me
(
ss_m
* 
db
, 
åade_tu∂e
* 
±u∂e
, c⁄° * 
exec_«me
, 
lock_mode_t
 
lm
)

1702 
	`as£π
 (
±u∂e
);

1703 
±u∂e
->
	`£t_vÆue
(9, 
exec_«me
);

1704  (
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1705 
	}
}

1707 
w_rc_t
 
	gåade_m™_im∂
::
	$t_gë_ôî_by_ödex
(
ss_m
* 
db
,

1708 
åade_ödex_ôî
* &
ôî
,

1709 
åade_tu∂e
* 
±u∂e
,

1710 
ªp_row_t
 &
ª∂ow
,

1711 
ªp_row_t
 &
ªphigh
,

1712 c⁄° 
TIdít
 
t_id
,

1713 
lock_mode_t
 
Æm
,

1714 
boﬁ
 
√ed_tu∂e
)

1716 
	`as£π
 (
±u∂e
);

1721 
	`as£π
 (
_±abÀ
);

1722 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("T_INDEX");

1723 
	`as£π
 (
pödex
);

1726 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

1728 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1729 
	`as£π
 (
ª∂ow
.
_de°
);

1732 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

1734 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1735 
	`as£π
 (
ªphigh
.
_de°
);

1738 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1739 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1740 
sˇn_ödex_i
::
À
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1741  (
RCOK
);

1742 
	}
}

1749 
w_rc_t
 
	gåade_hi°‹y_m™_im∂
::
	$th_gë_ôî_by_ödex
(
ss_m
* 
db
,

1750 
åade_hi°‹y_ödex_ôî
* &
ôî
,

1751 
åade_hi°‹y_tu∂e
* 
±u∂e
,

1752 
ªp_row_t
 &
ª∂ow
,

1753 
ªp_row_t
 &
ªphigh
,

1754 c⁄° 
TIdít
 
t_id
,

1755 
lock_mode_t
 
Æm
,

1756 
boﬁ
 
√ed_tu∂e
)

1758 
	`as£π
 (
±u∂e
);

1761 
	`as£π
 (
_±abÀ
);

1762 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("TH_INDEX_3");

1763 
	`as£π
 (
pödex
);

1766 
±u∂e
->
	`£t_vÆue
(0, 
t_id
);

1767 
±u∂e
->
	`£t_vÆue
(1, () 0);

1769 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1770 
	`as£π
 (
ª∂ow
.
_de°
);

1773 
±u∂e
->
	`£t_vÆue
(0, 
t_id
+1);

1775 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1776 
	`as£π
 (
ªphigh
.
_de°
);

1779 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1780 
Æm
, 
√ed_tu∂e
,

1781 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1782 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1783  (
RCOK
);

1784 
	}
}

1791 
w_rc_t
 
	gåade_ªque°_m™_im∂
::
	$å_dñëe_tu∂e
(
ss_m
* 
db
, 
åade_ªque°_tu∂e
* 
±u∂e
, 
rid_t
 
rid
)

1793 
	`as£π
 (
±u∂e
);

1796 
±u∂e
->
	`£t_rid
(
rid
);

1797 
	`W_DO
(
	`ªad_tu∂e
(
±u∂e
, 
EX
));

1800 
	`W_DO
(
	`dñëe_tu∂e
(
db
, 
±u∂e
));

1802  (
RCOK
);

1803 
	}
}

1805 
w_rc_t
 
	gåade_ªque°_m™_im∂
::
	$å_gë_ôî_by_ödex4
(
ss_m
* 
db
,

1806 
åade_ªque°_ödex_ôî
* &
ôî
,

1807 
åade_ªque°_tu∂e
* 
±u∂e
,

1808 
ªp_row_t
 &
ª∂ow
,

1809 
ªp_row_t
 &
ªphigh
,

1810 c⁄° * 
å_s_symb
,

1811 c⁄° 
TIdít
 
å_b_id
,

1812 
lock_mode_t
 
Æm
,

1813 
boﬁ
 
√ed_tu∂e
)

1815 
	`as£π
 (
±u∂e
);

1818 
	`as£π
 (
_±abÀ
);

1819 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("TR_INDEX_4");

1820 
	`as£π
 (
pödex
);

1825 
±u∂e
->
	`£t_vÆue
(2, 
å_s_symb
);

1826 
±u∂e
->
	`£t_vÆue
(5, 
å_b_id
);

1828 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1829 
	`as£π
 (
ª∂ow
.
_de°
);

1831 
±u∂e
->
	`£t_vÆue
(5, 
å_b_id
+1);

1833 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1834 
	`as£π
 (
ªphigh
.
_de°
);

1837 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1838 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1839 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1840  (
RCOK
);

1841 
	}
}

1843 
w_rc_t
 
	gåade_ªque°_m™_im∂
::
	$å_gë_ôî_by_ödex4
(
ss_m
* 
db
,

1844 
åade_ªque°_ödex_ôî
* &
ôî
,

1845 
åade_ªque°_tu∂e
* 
±u∂e
,

1846 
ªp_row_t
 &
ª∂ow
,

1847 
ªp_row_t
 &
ªphigh
,

1848 c⁄° * 
å_s_symb
,

1849 
lock_mode_t
 
Æm
,

1850 
boﬁ
 
√ed_tu∂e
)

1852 
	`as£π
 (
±u∂e
);

1855 
	`as£π
 (
_±abÀ
);

1856 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("TR_INDEX_4");

1857 
	`as£π
 (
pödex
);

1862 
±u∂e
->
	`£t_vÆue
(2, 
å_s_symb
);

1863 
±u∂e
->
	`£t_vÆue
(5, () 0);

1865 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1866 
	`as£π
 (
ª∂ow
.
_de°
);

1868 
±u∂e
->
	`£t_vÆue
(5, 
MAX_ID
);

1870 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1871 
	`as£π
 (
ªphigh
.
_de°
);

1874 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
, 
Æm
, 
√ed_tu∂e
,

1875 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1876 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1877  (
RCOK
);

1878 
	}
}

1885 
w_rc_t
 
	gåade_ty≥_m™_im∂
::
	$â_ödex_¥obe
(
ss_m
* 
db
,

1886 
åade_ty≥_tu∂e
* 
±u∂e
,

1887 c⁄° * 
åade_ty≥_id
)

1889 
	`as£π
 (
±u∂e
);

1890 
±u∂e
->
	`£t_vÆue
(0, 
åade_ty≥_id
);

1891  (
	`ödex_¥obe_by_«me
(
db
, "TT_INDEX", 
±u∂e
));

1892 
	}
}

1899 
w_rc_t
 
	gw©ch_ôem_m™_im∂
::
	$wi_upd©e_symb
(
ss_m
* 
db
, 
w©ch_ôem_tu∂e
* 
±u∂e
, c⁄° 
TIdít
 
wl_id
,

1900 c⁄° * 
ﬁd_symbﬁ
, c⁄° * 
√w_symbﬁ
, 
lock_mode_t
 
lm
)

1903 
	`as£π
 (
±u∂e
);

1904 
±u∂e
->
	`£t_vÆue
(0, 
wl_id
);

1905 
±u∂e
->
	`£t_vÆue
(1, 
ﬁd_symbﬁ
);

1906 
	`W_DO
(
	`ödex_¥obe_f‹upd©e_by_«me
(
db
, "WI_INDEX", 
±u∂e
));

1909 
	`W_DO
(
	`dñëe_ödex_íåy
(
db
, "WI_INDEX", 
±u∂e
));

1912 
±u∂e
->
	`£t_vÆue
(1, 
√w_symbﬁ
);

1913 
	`W_DO
(
	`upd©e_tu∂e
(
db
, 
±u∂e
, 
lm
));

1916 
	`W_DO
(
	`add_ödex_íåy
(
db
, "WI_INDEX", 
±u∂e
));

1917 
	}
}

1919 
w_rc_t
 
	gw©ch_ôem_m™_im∂
::
	$wi_gë_ôî_by_ödex
(
ss_m
* 
db
,

1920 
w©ch_ôem_ödex_ôî
* &
ôî
,

1921 
w©ch_ôem_tu∂e
* 
±u∂e
,

1922 
ªp_row_t
 &
ª∂ow
,

1923 
ªp_row_t
 &
ªphigh
,

1924 c⁄° 
TIdít
 
wl_id
,

1925 
lock_mode_t
 
Æm
,

1926 
boﬁ
 
√ed_tu∂e
)

1928 
	`as£π
 (
±u∂e
);

1931 
	`as£π
 (
_±abÀ
);

1932 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("WI_INDEX");

1933 
	`as£π
 (
pödex
);

1936 
±u∂e
->
	`£t_vÆue
(0, 
wl_id
);

1937 
±u∂e
->
	`£t_vÆue
(1, "");

1939 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1940 
	`as£π
 (
ª∂ow
.
_de°
);

1943 
ãmp
[2];

1944 
ãmp
[0] = 
	`MAX
('z', 'Z')+1;

1945 
ãmp
[1] = '\0';

1946 
±u∂e
->
	`£t_vÆue
(1, 
ãmp
);

1948 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1949 
	`as£π
 (
ªphigh
.
_de°
);

1952 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1953 
Æm
, 
√ed_tu∂e
,

1954 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1955 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1956  (
RCOK
);

1957 
	}
}

1964 
w_rc_t
 
	gw©ch_li°_m™_im∂
::
	$wl_gë_ôî_by_ödex2
(
ss_m
* 
db
,

1965 
w©ch_li°_ödex_ôî
* &
ôî
,

1966 
w©ch_li°_tu∂e
* 
±u∂e
,

1967 
ªp_row_t
 &
ª∂ow
,

1968 
ªp_row_t
 &
ªphigh
,

1969 c⁄° 
TIdít
 
c_id
,

1970 
lock_mode_t
 
Æm
,

1971 
boﬁ
 
√ed_tu∂e
)

1973 
	`as£π
 (
±u∂e
);

1976 
	`as£π
 (
_±abÀ
);

1977 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("WL_INDEX_2");

1978 
	`as£π
 (
pödex
);

1981 
±u∂e
->
	`£t_vÆue
(1, 
c_id
);

1982 
±u∂e
->
	`£t_vÆue
(0, ()0);

1984 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

1985 
	`as£π
 (
ª∂ow
.
_de°
);

1988 
±u∂e
->
	`£t_vÆue
(0, 
MAX_ID
);

1990 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

1991 
	`as£π
 (
ªphigh
.
_de°
);

1994 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

1995 
Æm
, 
√ed_tu∂e
,

1996 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

1997 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

1998  (
RCOK
);

1999 
	}
}

2006 
w_rc_t
 
	gzù_code_m™_im∂
::
	$zc_ödex_¥obe
(
ss_m
* 
db
,

2007 
zù_code_tu∂e
* 
±u∂e
,

2008 c⁄° * 
zc_code
)

2010 
	`as£π
 (
±u∂e
);

2011 
±u∂e
->
	`£t_vÆue
(0, 
zc_code
);

2012  (
	`ödex_¥obe_by_«me
(
db
, "ZC_INDEX", 
±u∂e
));

2013 
	}
}

2016 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_broker_volume.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_brokî_vﬁume
(c⁄° 
x˘_id
,

57 
brokî_vﬁume_öput_t
& 
pbvö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
brokî_m™_im∂
> 
	`¥brokî
(
_pbrokî_m™
);

65 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥com∑ny
(
_pcom∑ny_m™
);

66 
tu∂e_gu¨d
<
ödu°ry_m™_im∂
> 
	`¥ödu°ry
(
_pödu°ry_m™
);

67 
tu∂e_gu¨d
<
£˘‹_m™_im∂
> 
	`¥£˘‹
(
_p£˘‹_m™
);

68 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

69 
tu∂e_gu¨d
<
åade_ªque°_m™_im∂
> 
	`¥åadîeq
(
_±øde_ªque°_m™
);

71 
ªp_row_t
 
	`¨ïrow
(
_pcom∑ny_m™
->
	`ts
());

73 
¨ïrow
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

75 
¥brokî
->
_ªp
 = &
¨ïrow
;

76 
¥com∑ny
->
_ªp
 = &
¨ïrow
;

77 
¥ödu°ry
->
_ªp
 = &
¨ïrow
;

78 
¥£˘‹
->
_ªp
 = &
¨ïrow
;

79 
¥£curôy
->
_ªp
 = &
¨ïrow
;

80 
¥åadîeq
->
_ªp
 = &
¨ïrow
;

82 
ªp_row_t
 
	`lowªp
–
_pcom∑ny_m™
->
	`ts
());

83 
ªp_row_t
 
	`highªp
–
_pcom∑ny_m™
->
	`ts
());

86 
lowªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

87 
highªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

115 
ªp_row_t
 
	`s‹åï
(
_pcom∑ny_m™
->
	`ts
());

116 
s‹åï
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

118 
desc_s‹t_buf„r_t
 
	`å_li°
(2);

119 
å_li°
.
	`£tup
(0, 
SQL_FLOAT
);

120 
å_li°
.
	`£tup
(1, 
SQL_FIXCHAR
, 50);

122 
èbÀ_row_t
 
	`rsb
(&
å_li°
);

123 
desc_s‹t_m™_im∂
 
	`å_s‹ãr
(&
å_li°
, &
s‹åï
);

125 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
£˘‹_t
> > 
sc_ôî
;

127 
ödex_sˇn_ôî_im∂
<
£˘‹_t
>* 
tmp_sc_ôî
;

128 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:sc-get-iter-by-idx2 (%s) \n",

129 
x˘_id
, 
pbvö
.
_£˘‹_«me
);

130 
	`W_DO
(
_p£˘‹_m™
->
	`sc_gë_ôî_by_ödex2
(
_pssm
, 
tmp_sc_ôî
, 
¥£˘‹
,

131 
lowªp
, 
highªp
,

132 
pbvö
.
_£˘‹_«me
));

133 
sc_ôî
 = 
tmp_sc_ôî
;

136 
boﬁ
 
eof
;

137 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:sc-ôî-√xà\n", 
x˘_id
);

138 
	`W_DO
(
sc_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£˘‹
));

140 
sc_id
[3];

141 
¥£˘‹
->
	`gë_vÆue
(0, 
sc_id
, 3);

143 
uöt
 
i
 = 0;

144 
i
 < 
max_brokî_li°_Àn
 && 
	`°rcmp
(
pbvö
.
_brokî_li°
[i], "\0") != 0;

145 
i
++){

146 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
brokî_t
> > 
br_ôî
;

148 
ödex_sˇn_ôî_im∂
<
brokî_t
>* 
tmp_br_ôî
;

149 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:b-get-iter-by-idx3 (%s) \n",

150 
x˘_id
, 
pbvö
.
_brokî_li°
[
i
]);

151 
	`W_DO
(
_pbrokî_m™
->
	`b_gë_ôî_by_ödex3
(
_pssm
, 
tmp_br_ôî
, 
¥brokî
,

152 
lowªp
, 
highªp
,

153 
pbvö
.
_brokî_li°
[
i
]));

154 
br_ôî
 = 
tmp_br_ôî
;

156 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:br-ôî-√xà\n", 
x˘_id
);

157 
	`W_DO
(
br_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥brokî
));

159 
TIdít
 
b_id
;

160 
¥brokî
->
	`gë_vÆue
(0, 
b_id
);

162 
vﬁume
 = 0;

164 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
ödu°ry_t
> > 
ö_ôî
;

166 
ödex_sˇn_ôî_im∂
<
ödu°ry_t
>* 
tmp_ö_ôî
;

167 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:in-get-iter-by-idx3 (%s) \n",

168 
x˘_id
, 
sc_id
);

169 
	`W_DO
(
_pödu°ry_m™
->
	`ö_gë_ôî_by_ödex3
(
_pssm
, 
tmp_ö_ôî
,

170 
¥ödu°ry
,

171 
lowªp
, 
highªp
, 
sc_id
));

172 
ö_ôî
 = 
tmp_ö_ôî
;

175 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:ö-ôî-√xà\n", 
x˘_id
);

176 
	`W_DO
(
ö_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ödu°ry
));

178 !
eof
){

179 
ö_id
[2];

180 
¥ödu°ry
->
	`gë_vÆue
(0, 
ö_id
, 2);

182 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
com∑ny_t
> > 
co_ôî
;

184 
ödex_sˇn_ôî_im∂
<
com∑ny_t
>* 
tmp_co_ôî
;

185 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:co-get-iter-by-idx3 (%s) \n",

186 
x˘_id
, 
ö_id
);

187 
	`W_DO
(
_pcom∑ny_m™
->
	`co_gë_ôî_by_ödex3
(
_pssm
, 
tmp_co_ôî
,

188 
¥com∑ny
, 
lowªp
,

189 
highªp
, 
ö_id
));

190 
co_ôî
 = 
tmp_co_ôî
;

193 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:co-ôî-√xà\n", 
x˘_id
);

194 
	`W_DO
(
co_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑ny
));

196 
TIdít
 
co_id
;

197 !
eof
){

198 
¥com∑ny
->
	`gë_vÆue
(0, 
co_id
);

200 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
£curôy_t
> > 
s_ôî
;

202 
ödex_sˇn_ôî_im∂
<
£curôy_t
>* 
tmp_s_ôî
;

203 
	`TRACE
–
TRACE_TRX_FLOW
,

205 
x˘_id
, 
co_id
);

206 
	`W_DO
(
_p£curôy_m™
->
	`s_gë_ôî_by_ödex4
(
_pssm
, 
tmp_s_ôî
,

207 
¥£curôy
, 
lowªp
,

208 
highªp
, 
co_id
));

209 
s_ôî
 = 
tmp_s_ôî
;

212 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:s-ôî-√xà\n", 
x˘_id
);

213 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

215 !
eof
){

216 
s_symb
[16];

217 
¥£curôy
->
	`gë_vÆue
(0, 
s_symb
, 16);

219 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
åade_ªque°_t
> > 
å_ôî
;

221 
ödex_sˇn_ôî_im∂
<
åade_ªque°_t
>* 
tmp_å_ôî
;

222 
	`TRACE
–
TRACE_TRX_FLOW
,

224 
x˘_id
, 
s_symb
, 
b_id
);

225 
	`W_DO
(
_±øde_ªque°_m™
->

226 
	`å_gë_ôî_by_ödex4
(
_pssm
, 
tmp_å_ôî
, 
¥åadîeq
,

227 
lowªp
, 
highªp
,

228 
s_symb
, 
b_id
));

229 
å_ôî
 = 
tmp_å_ôî
;

232 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:å-ôî-√xà\n", 
x˘_id
);

233 
	`W_DO
(
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
));

235 !
eof
){

236 
å_qty
;

237 
å_bid_¥i˚
;

238 
¥åadîeq
->
	`gë_vÆue
(3, 
å_qty
);

239 
¥åadîeq
->
	`gë_vÆue
(4, 
å_bid_¥i˚
);

240 
vﬁume
 +(
å_qty
 * 
å_bid_¥i˚
);

241 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ:%d BV:å-ôî-√xt\n",
x˘_id
);

242 
	`W_DO
(
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
));

244 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:s-ôî-√xà\n", 
x˘_id
);

245 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

247 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:co-ôî-√xà\n", 
x˘_id
);

248 
	`W_DO
(
co_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑ny
));

250 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d BV:ö-ôî-√xà\n", 
x˘_id
);

251 
	`W_DO
(
ö_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ödu°ry
));

253 if(
vﬁume
 != 0){

254 
rsb
.
	`£t_vÆue
(0, 
vﬁume
);

255 
rsb
.
	`£t_vÆue
(1, 
pbvö
.
_brokî_li°
[
i
]);

256 
å_s‹ãr
.
	`add_tu∂e
(
rsb
);

269 
li°_Àn
 = 
å_s‹ãr
.
	`cou¡
();

271 
	`as£π
 (
li°_Àn
 <
max_brokî_li°_Àn
);

273 if(
li°_Àn
 > 0) {

274 
¨øy_gu¨d_t
< [50] > 
brokî_«me
 = 
√w
 [
li°_Àn
][50];

275 
¨øy_gu¨d_t
<> 
vﬁume
 = 
√w
 [
li°_Àn
];

277 
desc_s‹t_ôî_im∂
 
	`å_li°_s‹t_ôî
(
_pssm
, &
å_li°
, &
å_s‹ãr
);

278 
boﬁ
 
eof
;

279 
	`W_DO
(
å_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

280 
j
 = 0; j < 
max_brokî_li°_Àn
 && !
eof
; j++){

281 
rsb
.
	`gë_vÆue
(0, 
vﬁume
[
j
]);

282 
rsb
.
	`gë_vÆue
(1, 
brokî_«me
[
j
], 50);

283 
	`W_DO
(
å_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

287 #ifde‡
PRINT_TRX_RESULTS


290 
rbrokî
.
	`¥öt_tu∂e
();

291 
rcom∑ny
.
	`¥öt_tu∂e
();

292 
rödu°ry
.
	`¥öt_tu∂e
();

293 
r£˘‹
.
	`¥öt_tu∂e
();

294 
r£curôy
.
	`¥öt_tu∂e
();

295 
πødîeq
.
	`¥öt_tu∂e
();

298  
RCOK
;

300 
	}
}

303 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_customer_position.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_cu°omî_posôi⁄
(c⁄° 
x˘_id
,

57 
cu°omî_posôi⁄_öput_t
& 
p˝ö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

65 
tu∂e_gu¨d
<
cu°omî_accou¡_m™_im∂
> 
	`¥cu°ac˘
(
_pcu°omî_accou¡_m™
);

66 
tu∂e_gu¨d
<
hﬁdög_summ¨y_m™_im∂
> 
	`¥hﬁdsum
(
_phﬁdög_summ¨y_m™
);

67 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥œ°åade
(
_∂a°_åade_m™
);

68 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

69 
tu∂e_gu¨d
<
°©us_ty≥_m™_im∂
> 
	`¥°©u°y≥
(
_p°©us_ty≥_m™
);

70 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

72 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

74 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

76 
¥cu°
->
_ªp
 = &
¨ïrow
;

77 
¥cu°ac˘
->
_ªp
 = &
¨ïrow
;

78 
¥hﬁdsum
->
_ªp
 = &
¨ïrow
;

79 
¥œ°åade
->
_ªp
 = &
¨ïrow
;

80 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

81 
¥°©u°y≥
->
_ªp
 = &
¨ïrow
;

82 
¥åade
->
_ªp
 = &
¨ïrow
;

84 
ªp_row_t
 
	`lowªp
–
_pcu°omî_m™
->
	`ts
());

85 
ªp_row_t
 
	`highªp
–
_pcu°omî_m™
->
	`ts
());

88 
lowªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

89 
highªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

92 
TIdít
 
ac˘_id
[10];

93 
ac˘_Àn
;

94 
TIdít
 
cu°_id
 = 
p˝ö
.
_cu°_id
;

95 if(
cu°_id
 == 0) {

104 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

106 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

107 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:c-get-iter-by-idx2 (%s) \n",

108 
x˘_id
, 
p˝ö
.
_èx_id
);

109 
	`W_DO
(
_pcu°omî_m™
->
	`c_gë_ôî_by_ödex2
(
_pssm
, 
tmp_c_ôî
,

110 
¥cu°
, 
lowªp
, 
highªp
,

111 
p˝ö
.
_èx_id
));

112 
c_ôî
 = 
tmp_c_ôî
;

114 
boﬁ
 
eof
;

115 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:c-ôî-√xà\n", 
x˘_id
);

116 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°
));

117 if(
eof
Ë{ 
	`W_DO
(
	`RC
(
£_NOT_FOUND
)); }

118 
¥cu°
->
	`gë_vÆue
(0, 
cu°_id
);

120 
	`TRACE
(
TRACE_TRX_FLOW
,"Aµ: %d CP:c-idx-¥obê(%ld)\n",
x˘_id
,
cu°_id
);

121 
	`W_DO
(
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°
, 
cu°_id
));

153 
c_°_id
[5];

154 
¥cu°
->
	`gë_vÆue
(2, 
c_°_id
, 5);

155 
c_l_«me
[26];

156 
¥cu°
->
	`gë_vÆue
(3, 
c_l_«me
, 26);

157 
c_f_«me
[21];

158 
¥cu°
->
	`gë_vÆue
(4, 
c_f_«me
, 21);

159 
c_m_«me
[2];

160 
¥cu°
->
	`gë_vÆue
(5, 
c_m_«me
, 2);

161 
c_gndr
[2];

162 
¥cu°
->
	`gë_vÆue
(6, 
c_gndr
, 2);

163 
c_tõr
;

164 
¥cu°
->
	`gë_vÆue
(7, 
c_tõr
);

165 
myTime
 
c_dob
;

166 
¥cu°
->
	`gë_vÆue
(8, 
c_dob
);

167 
TIdít
 
c_ad_id
;

168 
¥cu°
->
	`gë_vÆue
(9, 
c_ad_id
);

169 
c_˘ry_1
[4];

170 
¥cu°
->
	`gë_vÆue
(10, 
c_˘ry_1
, 4);

171 
c_¨ó_1
[4];

172 
¥cu°
->
	`gë_vÆue
(11, 
c_¨ó_1
, 4);

173 
c_loˇl_1
[11];

174 
¥cu°
->
	`gë_vÆue
(12, 
c_loˇl_1
, 11);

175 
c_ext_1
[6];

176 
¥cu°
->
	`gë_vÆue
(13, 
c_ext_1
, 6);

177 
c_˘ry_2
[4];

178 
¥cu°
->
	`gë_vÆue
(14, 
c_˘ry_2
, 4);

179 
c_¨ó_2
[4];

180 
¥cu°
->
	`gë_vÆue
(15, 
c_¨ó_2
, 4);

181 
c_loˇl_2
[11];

182 
¥cu°
->
	`gë_vÆue
(16, 
c_loˇl_2
, 11);

183 
c_ext_2
[6];

184 
¥cu°
->
	`gë_vÆue
(17, 
c_ext_2
, 6);

185 
c_˘ry_3
[4];

186 
¥cu°
->
	`gë_vÆue
(18, 
c_˘ry_3
, 4);

187 
c_¨ó_3
[4];

188 
¥cu°
->
	`gë_vÆue
(19, 
c_¨ó_3
, 4);

189 
c_loˇl_3
[11];

190 
¥cu°
->
	`gë_vÆue
(20, 
c_loˇl_3
, 11);

191 
c_ext_3
[6];

192 
¥cu°
->
	`gë_vÆue
(21, 
c_ext_3
, 6);

193 
c_emaû_1
[51];

194 
¥cu°
->
	`gë_vÆue
(22, 
c_emaû_1
, 51);

195 
c_emaû_2
[51];

196 
¥cu°
->
	`gë_vÆue
(23, 
c_emaû_2
, 51);

215 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_accou¡_t
> > 
ˇ_ôî
;

217 
ödex_sˇn_ôî_im∂
<
cu°omî_accou¡_t
>* 
tmp_ˇ_ôî
;

218 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:ca-get-iter-by-idx2 (%ld) \n",

219 
x˘_id
, 
cu°_id
);

220 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_gë_ôî_by_ödex2
(
_pssm
, 
tmp_ˇ_ôî
,

221 
¥cu°ac˘
, 
lowªp
,

222 
highªp
, 
cu°_id
));

223 
ˇ_ôî
 = 
tmp_ˇ_ôî
;

227 
ªp_row_t
 
	`s‹åï
(
_pcu°omî_m™
->
	`ts
());

228 
s‹åï
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

229 
asc_s‹t_buf„r_t
 
	`ˇ_li°
(3);

231 
ˇ_li°
.
	`£tup
(0, 
SQL_FLOAT
);

232 
ˇ_li°
.
	`£tup
(1, 
SQL_FLOAT
);

233 
ˇ_li°
.
	`£tup
(2, 
SQL_LONG
);

235 
èbÀ_row_t
 
	`rsb
(&
ˇ_li°
);

236 
asc_s‹t_m™_im∂
 
	`ˇ_s‹ãr
(&
ˇ_li°
, &
s‹åï
);

238 
ac˘_Àn
 = 0;

239 
boﬁ
 
eof
;

240 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:ˇ-ôî-√xà\n", 
x˘_id
);

241 
	`W_DO
(
ˇ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°ac˘
));

242 !
eof
){

243 
TIdít
 
ãmp_id
;

244 
ãmp_bÆ™˚
 = 0, 
ãmp_as£ts
 = 0;

246 
¥cu°ac˘
->
	`gë_vÆue
(0, 
ãmp_id
);

247 
¥cu°ac˘
->
	`gë_vÆue
(5, 
ãmp_bÆ™˚
);

249 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
> > 
hs_ôî
;

251 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
>* 
tmp_hs_ôî
;

252 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:hs-get-iter-by-idx (%ld) \n",

253 
x˘_id
, 
ãmp_id
);

254 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`hs_gë_ôî_by_ödex
(
_pssm
,

255 
tmp_hs_ôî
,

256 
¥hﬁdsum
,

257 
lowªp
, 
highªp
,

258 
ãmp_id
));

259 
hs_ôî
 = 
tmp_hs_ôî
;

262 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:hs-ôî-√xà \n", 
x˘_id
);

263 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdsum
));

264 !
eof
){

265 
symbﬁ
[16];

266 
¥hﬁdsum
->
	`gë_vÆue
(1, 
symbﬁ
, 16);

267 
qty
;

268 
¥hﬁdsum
->
	`gë_vÆue
(2, 
qty
);

270 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:lt-idx-probe (%s) \n",

271 
x˘_id
, 
symbﬁ
);

272 
	`W_DO
(
_∂a°_åade_m™
->
	`…_ödex_¥obe
(
_pssm
,
¥œ°åade
,
symbﬁ
));

274 
…_¥i˚
 = 0;

275 
¥œ°åade
->
	`gë_vÆue
(2, 
…_¥i˚
);

276 
ãmp_as£ts
 +(
…_¥i˚
 * 
qty
);

278 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:hs-ôî-√xà \n", 
x˘_id
);

279 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdsum
));

282 
rsb
.
	`£t_vÆue
(0, 
ãmp_as£ts
);

283 
rsb
.
	`£t_vÆue
(1, 
ãmp_bÆ™˚
);

284 
rsb
.
	`£t_vÆue
(2, 
ãmp_id
);

286 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:rsbáddÅu∂ê \n", 
x˘_id
);

287 
ˇ_s‹ãr
.
	`add_tu∂e
(
rsb
);

289 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:ˇ-ôî-√xà\n", 
x˘_id
);

290 
	`W_DO
(
ˇ_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°ac˘
));

291 
ac˘_Àn
++;

294 
ˇsh_bÆ
[10];

295 
as£ts_tŸÆ
[10];

297 
asc_s‹t_ôî_im∂
 
	`ˇ_li°_s‹t_ôî
(
_pssm
, &
ˇ_li°
, &
ˇ_s‹ãr
);

298 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:ˇ-s‹ãr-ôî-√xà\n", 
x˘_id
);

299 
	`W_DO
(
ˇ_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

300 
j
 = 0; j < 
max_ac˘_Àn
 && !
eof
; j++) {

301 
rsb
.
	`gë_vÆue
(2, 
ac˘_id
[
j
]);

302 
rsb
.
	`gë_vÆue
(1, 
ˇsh_bÆ
[
j
]);

303 
rsb
.
	`gë_vÆue
(0, 
as£ts_tŸÆ
[
j
]);

304 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:ˇ-s‹ãr-ôî-√xà\n", 
x˘_id
);

305 
	`W_DO
(
ˇ_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

307 
	`as£π
(
ac˘_Àn
 >1 &&ác˘_À¿<
max_ac˘_Àn
);

309 
TIdít
 
ac˘Id
 = 
ac˘_id
[
p˝ö
.
_ac˘_id_idx
];

310 
hi°_Àn
;

312 if(
p˝ö
.
_gë_hi°‹y
){

340 
TIdít
 
åade_id
[30];

341 
symbﬁ
[30][16];

342 
qty
[30];

343 
åade_°©us
[30][11];

344 
myTime
 
hi°_dts
[30];

346 
TIdít
 
id_li°
[10];

348 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

350 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

351 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:t-iter-by-idx2 %ld \n",

352 
x˘_id
, 
ac˘Id
);

353 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex2
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

354 
lowªp
, 
highªp
, 
ac˘Id
, 0,

355 
MAX_DTS
, 
åue
, 
Ál£
));

356 
t_ôî
 = 
tmp_t_ôî
;

358 
boﬁ
 
eof
;

359 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:t-ôî-√xà\n", 
x˘_id
);

360 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

361 
i
 = 0;

362 
i
 < 10 && !
eof
){

363 
¥åade
->
	`gë_vÆue
(0, 
id_li°
[
i
]);

364 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d CP:t-ôî-√xà\n", 
x˘_id
);

365 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

366 
i
++;

370 
ªp_row_t
 
	`s‹åï
(
_pcu°omî_m™
->
	`ts
());

371 
s‹åï
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

373 
desc_s‹t_buf„r_t
 
	`t_li°
(5);

374 
t_li°
.
	`£tup
(0, 
SQL_LONG
);

375 
t_li°
.
	`£tup
(1, 
SQL_LONG
);

376 
t_li°
.
	`£tup
(2, 
SQL_FIXCHAR
, 16);

377 
t_li°
.
	`£tup
(3, 
SQL_INT
);

378 
t_li°
.
	`£tup
(4, 
SQL_FIXCHAR
, 10);

380 
desc_s‹t_m™_im∂
 
	`t_s‹ãr
(&
t_li°
, &
s‹åï
);

381 
èbÀ_row_t
 
	`rsb
(&
t_li°
);

383 
i
 = 0; i < 10; i++) {

384 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:t-idx-probe (%ld) \n",

385 
x˘_id
, 
id_li°
[
i
]);

386 
	`W_DO
(
_±øde_m™
->
	`t_ödex_¥obe
(
_pssm
, 
¥åade
, 
id_li°
[
i
]));

388 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

390 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

391 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:th-iter-by-idx %ld \n",

392 
x˘_id
, 
id_li°
[
i
]);

393 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

394 
¥åadehi°
,

395 
lowªp
, 
highªp
,

396 
id_li°
[
i
]));

397 
th_ôî
 = 
tmp_th_ôî
;

399 
boﬁ
 
eof
;

400 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

401 !
eof
){

402 
myTime
 
th_dts
;

403 
¥åadehi°
->
	`gë_vÆue
(1, 
th_dts
);

404 
rsb
.
	`£t_vÆue
(0, 
th_dts
);

406 
th_°_id
[5];

407 
¥åadehi°
->
	`gë_vÆue
(2, 
th_°_id
, 5);

409 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d CP:st-idx-probe (%s) \n",

410 
x˘_id
, 
th_°_id
);

411 
	`W_DO
(
_p°©us_ty≥_m™
->
	`°_ödex_¥obe
(
_pssm
, 
¥°©u°y≥
,

412 
th_°_id
));

414 
°_«me
[11];

415 
¥°©u°y≥
->
	`gë_vÆue
(1, 
°_«me
, 11);

416 
rsb
.
	`£t_vÆue
(4, 
°_«me
);

418 
rsb
.
	`£t_vÆue
(1, 
id_li°
[
i
]);

420 
t_s_symb
[16];

421 
¥åade
->
	`gë_vÆue
(5, 
t_s_symb
, 16);

422 
rsb
.
	`£t_vÆue
(2, 
t_s_symb
);

424 
t_qty
;

425 
¥åade
->
	`gë_vÆue
(6, 
t_qty
);

426 
rsb
.
	`£t_vÆue
(3, 
t_qty
);

428 
t_s‹ãr
.
	`add_tu∂e
(
rsb
);

430 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

433 
desc_s‹t_ôî_im∂
 
	`t_li°_s‹t_ôî
(
_pssm
, &
t_li°
, &
t_s‹ãr
);

435 
boﬁ
 
eof
;

436 
	`W_DO
(
t_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

437 
hi°_Àn
 = 0; hi°_À¿< 
max_hi°_Àn
 && !
eof
; hist_len++) {

438 
rsb
.
	`gë_vÆue
(0, 
hi°_dts
[
hi°_Àn
]);

439 
rsb
.
	`gë_vÆue
(1, 
åade_id
[
hi°_Àn
]);

440 
rsb
.
	`gë_vÆue
(2, 
symbﬁ
[
hi°_Àn
], 16);

441 
rsb
.
	`gë_vÆue
(3, 
qty
[
hi°_Àn
]);

442 
rsb
.
	`gë_vÆue
(4, 
åade_°©us
[
hi°_Àn
], 11);

443 
	`W_DO
(
t_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

445 
	`as£π
(
hi°_Àn
 >10 && hi°_À¿<
max_hi°_Àn
);

448 #ifde‡
PRINT_TRX_RESULTS


451 
rcu°
.
	`¥öt_tu∂e
();

452 
rcu°ac˘
.
	`¥öt_tu∂e
();

453 
rhﬁdsum
.
	`¥öt_tu∂e
();

454 
æa°åade
.
	`¥öt_tu∂e
();

455 
πødehi°
.
	`¥öt_tu∂e
();

456 
r°©u°y≥
.
	`¥öt_tu∂e
();

457 
πøde
.
	`¥öt_tu∂e
();

460  
RCOK
;

462 
	}
}

465 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_data_maintenance.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_d©a_maöã«n˚
(c⁄° 
x˘_id
,

57 
d©a_maöã«n˚_öput_t
& 
pdmö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
accou¡_≥rmissi⁄_m™_im∂
> 
	`¥ac˘≥rm
(
_∑ccou¡_≥rmissi⁄_m™
);

65 
tu∂e_gu¨d
<
addªss_m™_im∂
> 
	`¥addªss
(
_∑ddªss_m™
);

66 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥com∑ny
(
_pcom∑ny_m™
);

67 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

68 
tu∂e_gu¨d
<
cu°omî_èxøã_m™_im∂
> 
	`¥cu°èxøã
(
_pcu°omî_èxøã_m™
);

69 
tu∂e_gu¨d
<
daûy_m¨kë_m™_im∂
> 
	`¥daûym¨kë
(
_pdaûy_m¨kë_m™
);

70 
tu∂e_gu¨d
<
exch™ge_m™_im∂
> 
	`¥exch™ge
(
_≥xch™ge_m™
);

71 
tu∂e_gu¨d
<
fö™cül_m™_im∂
> 
	`¥fö™cül
(
_pfö™cül_m™
);

72 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

73 
tu∂e_gu¨d
<
√ws_ôem_m™_im∂
> 
	`¥√wsôem
(
_≤ews_ôem_m™
);

74 
tu∂e_gu¨d
<
√ws_xªf_m™_im∂
> 
	`¥√wsxªf
(
_≤ews_xªf_m™
);

75 
tu∂e_gu¨d
<
èxøã_m™_im∂
> 
	`¥èxøã
(
_±axøã_m™
);

76 
tu∂e_gu¨d
<
w©ch_ôem_m™_im∂
> 
	`¥w©chôem
(
_pw©ch_ôem_m™
);

77 
tu∂e_gu¨d
<
w©ch_li°_m™_im∂
> 
	`¥w©chli°
(
_pw©ch_li°_m™
);

79 
ªp_row_t
 
	`¨ïrow
(
_≤ews_ôem_m™
->
	`ts
());

81 
¨ïrow
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

83 
¥ac˘≥rm
->
_ªp
 = &
¨ïrow
;

84 
¥addªss
->
_ªp
 = &
¨ïrow
;

85 
¥com∑ny
->
_ªp
 = &
¨ïrow
;

86 
¥cu°
->
_ªp
 = &
¨ïrow
;

87 
¥cu°èxøã
->
_ªp
 = &
¨ïrow
;

88 
¥daûym¨kë
->
_ªp
 = &
¨ïrow
;

89 
¥exch™ge
->
_ªp
 = &
¨ïrow
;

90 
¥fö™cül
->
_ªp
 = &
¨ïrow
;

91 
¥£curôy
->
_ªp
 = &
¨ïrow
;

92 
¥√wsôem
->
_ªp
 = &
¨ïrow
;

93 
¥√wsxªf
->
_ªp
 = &
¨ïrow
;

94 
¥èxøã
->
_ªp
 = &
¨ïrow
;

95 
¥w©chôem
->
_ªp
 = &
¨ïrow
;

96 
¥w©chli°
->
_ªp
 = &
¨ïrow
;

98 
ªp_row_t
 
	`lowªp
–
_≤ews_ôem_m™
->
	`ts
());

99 
ªp_row_t
 
	`highªp
–
_≤ews_ôem_m™
->
	`ts
());

102 
lowªp
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

103 
highªp
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

105 if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "ACCOUNT_PERMISSION") == 0){

116 
gu¨d
<
ödex_sˇn_ôî_im∂
<
accou¡_≥rmissi⁄_t
> > 
≠_ôî
;

118 
ödex_sˇn_ôî_im∂
<
accou¡_≥rmissi⁄_t
>* 
tmp_≠_ôî
;

119 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:ap-get-iter-by-idx %ld \n",

120 
x˘_id
, 
pdmö
.
_ac˘_id
);

121 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`≠_gë_ôî_by_ödex
(
_pssm
,

122 
tmp_≠_ôî
,

123 
¥ac˘≥rm
,

124 
lowªp
, 
highªp
,

125 
pdmö
.
_ac˘_id
));

126 
≠_ôî
 = 
tmp_≠_ôî
;

129 
ªp_row_t
 
	`s‹åï
(
_≤ews_ôem_m™
->
	`ts
());

130 
s‹åï
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

132 
desc_s‹t_buf„r_t
 
	`≠_li°
(1);

134 
≠_li°
.
	`£tup
(0, 
SQL_FIXCHAR
, 4);

136 
èbÀ_row_t
 
	`rsb
(&
≠_li°
);

137 
desc_s‹t_m™_im∂
 
	`≠_s‹ãr
(&
≠_li°
, &
s‹åï
);

139 
boﬁ
 
eof
;

140 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:≠-ôî-√xà\n", 
x˘_id
);

141 
	`W_DO
(
≠_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ac˘≥rm
));

143 if(
eof
) {

144 
	`TRACE
–
TRACE_TRX_FLOW
,

146 
x˘_id
, 
pdmö
.
_ac˘_id
);

147 
	`W_DO
(
	`RC
(
£_NOT_FOUND
));

150 !
eof
){

151 
a˛
[5];

152 
¥ac˘≥rm
->
	`gë_vÆue
(1, 
a˛
, 5);

154 
rsb
.
	`£t_vÆue
(0, 
a˛
);

155 
≠_s‹ãr
.
	`add_tu∂e
(
rsb
);

157 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:≠-ôî-√xà\n", 
x˘_id
);

158 
	`W_DO
(
≠_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ac˘≥rm
));

161 
desc_s‹t_ôî_im∂
 
	`≠_li°_s‹t_ôî
(
_pssm
, &
≠_li°
, &
≠_s‹ãr
);

163 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:≠-s‹t-ôî-√xà\n", 
x˘_id
);

164 
	`W_DO
(
≠_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

166 
a˛
[5];

167 
rsb
.
	`gë_vÆue
(0, 
a˛
, 5);

169 
√w_a˛
[5];

170 if(
	`°rcmp
(
a˛
, "1111") != 0){

180 
	`°rcmp
(
√w_a˛
, "1111");

191 
	`°rcmp
(
√w_a˛
, "0011");

194 
ödex_sˇn_ôî_im∂
<
accou¡_≥rmissi⁄_t
>* 
tmp_≠_ôî
;

195 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:ap-get-iter-by-idx %ld \n",

196 
x˘_id
, 
pdmö
.
_ac˘_id
);

197 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`≠_gë_ôî_by_ödex
(
_pssm
,

198 
tmp_≠_ôî
,

199 
¥ac˘≥rm
,

200 
lowªp
, 
highªp
,

201 
pdmö
.
_ac˘_id
));

202 
≠_ôî
 = 
tmp_≠_ôî
;

205 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:≠-ôî-√xà\n", 
x˘_id
);

206 
	`W_DO
(
≠_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ac˘≥rm
));

207 !
eof
){

208 
≠_a˛
[5];

209 
¥ac˘≥rm
->
	`gë_vÆue
(1, 
≠_a˛
, 5);

211 if(
	`°rcmp
(
≠_a˛
, 
a˛
) == 0){

212 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:ap-update (%s) \n",

213 
x˘_id
, 
√w_a˛
);

214 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`≠_upd©e_a˛
(
_pssm
, 
¥ac˘≥rm
,

215 
√w_a˛
));

218 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:≠-ôî-√xà\n", 
x˘_id
);

219 
	`W_DO
(
≠_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ac˘≥rm
));

222 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "ADDRESS") == 0) {

223 
löe2
[81] = "\0";

224 
TIdít
 
ad_id
 = 0;

226 if(
pdmö
.
_c_id
 != 0){

237 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:c-idx-probe (%ld) \n",

238 
x˘_id
, 
pdmö
.
_c_id
);

239 
	`W_DO
(
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°
, 
pdmö
.
_c_id
));

240 
¥cu°
->
	`gë_vÆue
(9, 
ad_id
);

252 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:co-idx-probe (%ld) \n",

253 
x˘_id
, 
pdmö
.
_co_id
);

254 
	`W_DO
(
_pcom∑ny_m™
->
	`co_ödex_¥obe
(
_pssm
, 
¥com∑ny
, 
pdmö
.
_co_id
));

255 
¥com∑ny
->
	`gë_vÆue
(6, 
ad_id
);

257 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:ad-idx-probe-for-update (%ld) \n",

258 
x˘_id
, 
ad_id
);

259 
	`W_DO
(
_∑ddªss_m™
->
	`ad_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥addªss
, 
ad_id
));

260 
¥addªss
->
	`gë_vÆue
(2, 
löe2
, 81);

262 
√w_löe2
[81];

263 if(
	`°rcmp
(
löe2
, "Apt. 10C") != 0) {

272 
	`°r˝y
(
√w_löe2
, "Apt. 10C");

282 
	`°r˝y
(
√w_löe2
, "Apt. 22");

284 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:ad-update (%ld) (%s) \n",

285 
x˘_id
, 
ad_id
, 
√w_löe2
);

286 
	`W_DO
(
_∑ddªss_m™
->
	`ad_upd©e_löe2
(
_pssm
, 
¥addªss
, 
√w_löe2
));

288 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "COMPANY") == 0) {

289 
•øã
[5] = "\0";

291 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:co-idx-probe (%ld) \n",

292 
x˘_id
, 
pdmö
.
_co_id
);

293 
	`W_DO
(
_pcom∑ny_m™
->
	`co_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥com∑ny
,

294 
pdmö
.
_co_id
));

295 
¥com∑ny
->
	`gë_vÆue
(4, 
•øã
, 5);

297 
√w_•øã
[5];

298 if(
	`°rcmp
(
•øã
, "ABA") != 0){

307 
	`°r˝y
(
√w_•øã
, "ABA");

317 
	`°r˝y
(
√w_•øã
, "AAA");

319 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:co-upd©ê(%†\n", 
x˘_id
, 
√w_•øã
);

320 
	`W_DO
(
_pcom∑ny_m™
->
	`co_upd©e_•øã
(
_pssm
, 
¥com∑ny
, 
√w_•øã
));

322 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "CUSTOMER") == 0){

323 
emaû2
[51] = "\0";

324 
Àn
 = 0;

325 
ÀnMöd•rög
 = 
	`°æí
("@mindspring.com");

335 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:c-idx-probe (%d) \n",

336 
x˘_id
, 
pdmö
.
_c_id
);

337 
	`W_DO
(
_pcu°omî_m™
->
	`c_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥cu°
, 
pdmö
.
_c_id
));

338 
¥cu°
->
	`gë_vÆue
(23, 
emaû2
, 51);

340 
Àn
 = 
	`°æí
(
emaû2
);

341 
°rög
 
	`ãmp_emaû2
(
emaû2
);

342 
√w_emaû2
[51];

343 if(((
Àn
 - 
ÀnMöd•rög
) > 0 &&

344 (
ãmp_emaû2
.
	`sub°r
(
Àn
-
ÀnMöd•rög
,

345 
ÀnMöd•rög
).
	`com∑ª
("@mindspring.com")==0))) {

355 
°rög
 
ãmp_√w_emaû2
 = 
ãmp_emaû2
.
	`sub°r
(1,Åemp_emaû2.
	`föd_fú°_of
('@')) + "earthlink.com";

356 
	`°r˝y
(
√w_emaû2
, 
ãmp_√w_emaû2
.
	`c_°r
());

367 
°rög
 
ãmp_√w_emaû2
 = 
ãmp_emaû2
.
	`sub°r
(1,Åemp_emaû2.
	`föd_fú°_of
('@')) + "mindspring.com";

368 
	`°r˝y
(
√w_emaû2
, 
ãmp_√w_emaû2
.
	`c_°r
());

370 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:c-upd©ê(%sË\n", 
x˘_id
, 
√w_emaû2
);

371 
	`W_DO
(
_pcu°omî_m™
->
	`c_upd©e_emaû2
(
_pssm
, 
¥cu°
, 
√w_emaû2
));

373 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "CUSTOMER_TAXRATE") == 0){

374 
ﬁd_èx_øã
[5];

375 
√w_èx_øã
[5];

376 
èx_num
;

386 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
> > 
cx_ôî
;

388 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
>* 
tmp_cx_ôî
;

389 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:cx-get-iter-by-idx (%ld) \n",

390 
x˘_id
, 
pdmö
.
_c_id
);

391 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`cx_gë_ôî_by_ödex
(
_pssm
, 
tmp_cx_ôî
,

392 
¥cu°èxøã
,

393 
lowªp
, 
highªp
,

394 
pdmö
.
_c_id
));

395 
cx_ôî
 = 
tmp_cx_ôî
;

398 
boﬁ
 
eof
;

399 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:cx-ôî-√xà\n", 
x˘_id
);

400 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

401 !
eof
){

402 
¥cu°èxøã
->
	`gë_vÆue
(0, 
ﬁd_èx_øã
, 5);

404 
°rög
 
	`ãmp_ﬁd_èx_øã
(
ﬁd_èx_øã
);

405 if(
ãmp_ﬁd_èx_øã
.
	`sub°r
(0,2).
	`com∑ª
("US") == 0 ||

406 
ãmp_ﬁd_èx_øã
.
	`sub°r
(0,2).
	`com∑ª
("CN") == 0 ) {

408 if(
ãmp_ﬁd_èx_øã
.
	`sub°r
(0,2).
	`com∑ª
("US") == 0){

409 if(
ãmp_ﬁd_èx_øã
.
	`com∑ª
("US5") == 0){

410 
	`°r˝y
(
√w_èx_øã
, "US1");

412 
èx_num
 = 
	`©oi
(
ãmp_ﬁd_èx_øã
.
	`sub°r
(2,1).
	`c_°r
()) + 1;

413 
°rög°ªam
 
ãmp_√w_èx_øã
;

414 
ãmp_√w_èx_øã
 << "US" << 
èx_num
;

415 
	`°r˝y
(
√w_èx_øã
, 
ãmp_√w_èx_øã
.
	`°r
().
	`c_°r
());

418 if(
ãmp_ﬁd_èx_øã
.
	`com∑ª
("CN4") == 0){

419 
	`°r˝y
(
√w_èx_øã
, "CN1");

421 
èx_num
 = 
	`©oi
(
ãmp_ﬁd_èx_øã
.
	`sub°r
(2,1).
	`c_°r
()) + 1;

422 
°rög°ªam
 
ãmp_√w_èx_øã
;

423 
ãmp_√w_èx_øã
 << "CN" << 
èx_num
;

424 
	`°r˝y
(
√w_èx_øã
, 
ãmp_√w_èx_øã
.
	`°r
().
	`c_°r
());

437 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:cx-update (%s) \n",

438 
x˘_id
, 
√w_èx_øã
);

439 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`cx_upd©e_txid
(
_pssm
, 
¥cu°èxøã
,

440 
√w_èx_øã
));

442 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:cx-ôî-√xà\n", 
x˘_id
);

443 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

446 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "DAILY_MARKET") == 0){

456 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
daûy_m¨kë_t
> > 
dm_ôî
;

458 
ödex_sˇn_ôî_im∂
<
daûy_m¨kë_t
>* 
tmp_dm_ôî
;

459 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:dm-get-iter-by-idx4 (%s) \n",

460 
x˘_id
, 
pdmö
.
_symbﬁ
);

461 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`dm_gë_ôî_by_ödex
(
_pssm
, 
tmp_dm_ôî
,

462 
¥daûym¨kë
, 
lowªp
,

463 
highªp
, 
pdmö
.
_symbﬁ
,

464 0, 
SH
, 
Ál£
));

465 
dm_ôî
 = 
tmp_dm_ôî
;

468 
boﬁ
 
eof
;

469 
	`W_DO
(
dm_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥daûym¨kë
));

470 !
eof
){

471 
myTime
 
dm_d©e
;

472 
¥daûym¨kë
->
	`gë_vÆue
(0, 
dm_d©e
);

474 if(
	`dayOfM⁄th
(
dm_d©e
Ë=
pdmö
.
_day_of_m⁄th
){

475 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MD:dm-update (%d) \n",

476 
x˘_id
, 
pdmö
.
_vﬁ_ö¸
);

477 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`dm_upd©e_vﬁ
(
_pssm
, 
¥daûym¨kë
,

478 
pdmö
.
_vﬁ_ö¸
));

480 
	`W_DO
(
dm_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥daûym¨kë
));

483 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "EXCHANGE") == 0){

484 
rowcou¡
 = 0;

493 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
exch™ge_t
> > 
ex_ôî
;

495 
èbÀ_sˇn_ôî_im∂
<
exch™ge_t
>* 
tmp_ex_ôî
;

496 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:ex-gë-èbÀ-ôî \n", 
x˘_id
);

497 
	`W_DO
(
_≥xch™ge_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ex_ôî
));

498 
ex_ôî
 = 
tmp_ex_ôî
;

501 
boﬁ
 
eof
;

502 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

503 !
eof
){

504 
ex_desc
[151];

505 
¥exch™ge
->
	`gë_vÆue
(5, 
ex_desc
, 151);

507 
°rög
 
	`ãmp_ex_desc
(
ex_desc
);

508 if(
ãmp_ex_desc
.
	`föd
("LAST UPDATED") != -1){

509 
rowcou¡
++;

512 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

515 if(
rowcou¡
 == 0) {

523 
èbÀ_sˇn_ôî_im∂
<
exch™ge_t
>* 
tmp_ex_ôî
;

524 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:ex-gë-èbÀ-ôî \n", 
x˘_id
);

525 
	`W_DO
(
_≥xch™ge_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ex_ôî
));

526 
ex_ôî
 = 
tmp_ex_ôî
;

528 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

529 !
eof
){

530 
ex_desc
[151];

531 
¥exch™ge
->
	`gë_vÆue
(5, 
ex_desc
, 151);

533 
°rög
 
	`√w_desc
(
ex_desc
);

534 
°rög°ªam
 
ss
;

535 
ss
 << "" << 
√w_desc
 << " LAST UPDATED " << 
	`time
(
NULL
) << "";

537 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MD:ex-update (%s) \n",

538 
x˘_id
, 
ss
.
	`°r
().
	`c_°r
());

539 
	`W_DO
(
_≥xch™ge_m™
->
	`ex_upd©e_desc
(
_pssm
, 
¥exch™ge
,

540 
ss
.
	`°r
().
	`c_°r
()));

542 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

552 
èbÀ_sˇn_ôî_im∂
<
exch™ge_t
>* 
tmp_ex_ôî
;

553 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:ex-gë-èbÀ-ôî \n", 
x˘_id
);

554 
	`W_DO
(
_≥xch™ge_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ex_ôî
));

555 
ex_ôî
 = 
tmp_ex_ôî
;

557 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

558 !
eof
){

559 
ex_ôî
 = 
tmp_ex_ôî
;

560 
ex_desc
[151];

561 
¥exch™ge
->
	`gë_vÆue
(5, 
ex_desc
, 151);

563 
°rög
 
	`ãmp
(
ex_desc
), 
√w_desc
;

564 
√w_desc
 = 
ãmp
.
	`sub°r
(0,Åemp.
	`föd_œ°_of
(" ") + 1);

565 
°rög°ªam
 
ss
;

566 
ss
 << "" << 
√w_desc
 << 
	`time
(
NULL
);

568 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MD:ex-update (%s) \n",

569 
x˘_id
, 
ss
.
	`°r
().
	`c_°r
());

570 
	`W_DO
(
_≥xch™ge_m™
->
	`ex_upd©e_desc
(
_pssm
, 
¥exch™ge
,

571 
ss
.
	`°r
().
	`c_°r
()));

573 
	`W_DO
(
ex_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥exch™ge
));

577 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "FINANCIAL") == 0){

578 
rowcou¡
 = 0;

590 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
fö™cül_t
> > 
fi_ôî
;

592 
ödex_sˇn_ôî_im∂
<
fö™cül_t
>* 
tmp_fi_ôî
;

593 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:fi-get-iter-by-idx (%ld) \n",

594 
x˘_id
, 
pdmö
.
_co_id
);

595 
	`W_DO
(
_pfö™cül_m™
->
	`fi_gë_ôî_by_ödex
(
_pssm
, 
tmp_fi_ôî
,

596 
¥fö™cül
, 
lowªp
,

597 
highªp
, 
pdmö
.
_co_id
));

598 
fi_ôî
 = 
tmp_fi_ôî
;

601 
boﬁ
 
eof
;

602 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

603 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

604 !
eof
){

605 
myTime
 
fi_qå_°¨t_d©e
;

606 
¥fö™cül
->
	`gë_vÆue
(3, 
fi_qå_°¨t_d©e
);

608 if(
	`dayOfM⁄th
(
fi_qå_°¨t_d©e
) == 1){

609 
rowcou¡
++;

612 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

613 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

616 if(
rowcou¡
 > 0){

626 
ödex_sˇn_ôî_im∂
<
fö™cül_t
>* 
tmp_fi_ôî
;

627 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:fi-get-iter-by-idx (%ld) \n",

628 
x˘_id
, 
pdmö
.
_co_id
);

629 
	`W_DO
(
_pfö™cül_m™
->
	`fi_gë_ôî_by_ödex
(
_pssm
, 
tmp_fi_ôî
,

630 
¥fö™cül
,

631 
lowªp
, 
highªp
,

632 
pdmö
.
_co_id
));

633 
fi_ôî
 = 
tmp_fi_ôî
;

635 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

636 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

637 !
eof
){

638 
myTime
 
fi_qå_°¨t_d©e
;

639 
¥fö™cül
->
	`gë_vÆue
(3, 
fi_qå_°¨t_d©e
);

641 
fi_qå_°¨t_d©e
 += (60*60*24);

643 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MD:fi-update (%ld) \n",

644 
x˘_id
, 
fi_qå_°¨t_d©e
);

645 
	`W_DO
(
_pfö™cül_m™
->
	`fi_upd©e_desc
(
_pssm
, 
¥fö™cül
,

646 
fi_qå_°¨t_d©e
));

648 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

649 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

661 
ödex_sˇn_ôî_im∂
<
fö™cül_t
>* 
tmp_fi_ôî
;

662 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:fi-get-iter-by-idx (%ld) \n",

663 
x˘_id
, 
pdmö
.
_co_id
);

664 
	`W_DO
(
_pfö™cül_m™
->
	`fi_gë_ôî_by_ödex
(
_pssm
, 
tmp_fi_ôî
,

665 
¥fö™cül
,

666 
lowªp
, 
highªp
,

667 
pdmö
.
_co_id
));

668 
fi_ôî
 = 
tmp_fi_ôî
;

670 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

671 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

672 !
eof
){

673 
myTime
 
fi_qå_°¨t_d©e
;

674 
¥fö™cül
->
	`gë_vÆue
(3, 
fi_qå_°¨t_d©e
);

676 
fi_qå_°¨t_d©e
 -= (60*60*24);

678 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MD:fi-update-desc (%ld) \n",

679 
x˘_id
, 
fi_qå_°¨t_d©e
);

680 
	`W_DO
(
_pfö™cül_m™
->
	`fi_upd©e_desc
(
_pssm
, 
¥fö™cül
,

681 
fi_qå_°¨t_d©e
));

683 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d DM:fi-ôî-√xà\n", 
x˘_id
);

684 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

688 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "NEWS_ITEM") == 0){

703 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
> > 
nx_ôî
;

705 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
>* 
tmp_nx_ôî
;

706 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:nx-get-iter-by-idx (%ld) \n",

707 
x˘_id
, 
pdmö
.
_co_id
);

708 
	`W_DO
(
_≤ews_xªf_m™
->
	`nx_gë_ôî_by_ödex
(
_pssm
, 
tmp_nx_ôî
,

709 
¥√wsxªf
, 
lowªp
,

710 
highªp
, 
pdmö
.
_co_id
));

711 
nx_ôî
 = 
tmp_nx_ôî
;

714 
boﬁ
 
eof
;

715 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

716 !
eof
){

717 
TIdít
 
nx_ni_id
;

718 
¥√wsxªf
->
	`gë_vÆue
(0, 
nx_ni_id
);

720 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:nx-idx-probe (%d) \n",

721 
x˘_id
, 
nx_ni_id
);

722 
	`W_DO
(
_≤ews_ôem_m™
->
	`ni_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥√wsôem
,

723 
nx_ni_id
));

725 
myTime
 
ni_dts
;

726 
¥√wsôem
->
	`gë_vÆue
(4, 
ni_dts
);

728 
ni_dts
 += (60 * 60 * 24);

730 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:nx-update-nidts (%d) \n",

731 
x˘_id
, 
ni_dts
);

732 
	`W_DO
(
_≤ews_ôem_m™
->
	`ni_upd©e_dts_by_ödex
(
_pssm
, 
¥√wsôem
,

733 
ni_dts
));

735 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

738 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "SECURITY") == 0){

748 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:s-idx-probe (%s) \n",

749 
x˘_id
, 
pdmö
.
_symbﬁ
);

750 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥£curôy
,

751 
pdmö
.
_symbﬁ
));

753 
myTime
 
s_exch_d©e
;

754 
¥£curôy
->
	`gë_vÆue
(8, 
s_exch_d©e
);

756 
s_exch_d©e
 += (60 * 60 * 24);

758 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:s-update-ed (%d) \n",

759 
x˘_id
, 
s_exch_d©e
);

760 
	`W_DO
(
_p£curôy_m™
->
	`s_upd©e_ed
(
_pssm
, 
¥£curôy
, 
s_exch_d©e
));

762 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "TAXRATE") == 0){

772 
tx_«me
[51];

774 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:tx-idx-probe (%d) \n",

775 
x˘_id
, 
pdmö
.
_tx_id
);

776 
	`W_DO
(
_±axøã_m™
->
	`tx_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥èxøã
,

777 
pdmö
.
_tx_id
));

779 
¥èxøã
->
	`gë_vÆue
(1, 
tx_«me
, 51);

781 
°rög
 
	`ãmp
(
tx_«me
);

782 
size_t
 
ödex
 = 
ãmp
.
	`föd
("Tax");

783 if(
ödex
 !
°rög
::
≈os
){

784 
ãmp
.
	`ª∂a˚
(
ödex
, 3, "tax");

786 
ödex
 = 
ãmp
.
	`föd
("tax");

787 
ãmp
.
	`ª∂a˚
(
ödex
, 3, "Tax");

798 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:tx-update-name (%s) \n",

799 
x˘_id
, 
tx_«me
);

800 
	`W_DO
(
_±axøã_m™
->
	`tx_upd©e_«me
(
_pssm
, 
¥èxøã
, 
ãmp
.
	`c_°r
()));

802 } if(
	`°rcmp
(
pdmö
.
_èbÀ_«me
, "WATCH_ITEM") == 0){

816 
˙t
 = 0;

817 
ﬁd_symbﬁ
[16], 
√w_symbﬁ
[16] = "\0";

819 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
> > 
wl_ôî
;

821 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
>* 
tmp_wl_ôî
;

822 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wl-get-iter-by-idx2 (%ld) \n",

823 
x˘_id
, 
pdmö
.
_c_id
);

824 
	`W_DO
(
_pw©ch_li°_m™
->
	`wl_gë_ôî_by_ödex2
(
_pssm
, 
tmp_wl_ôî
,

825 
¥w©chli°
, 
lowªp
,

826 
highªp
, 
pdmö
.
_c_id
));

827 
wl_ôî
 = 
tmp_wl_ôî
;

830 
boﬁ
 
eof
;

831 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

832 !
eof
){

833 
TIdít
 
wl_id
;

834 
¥w©chli°
->
	`gë_vÆue
(0, 
wl_id
);

836 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
> > 
wi_ôî
;

838 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
>* 
tmp_wi_ôî
;

839 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wi-get-iter-by-idx (%ld) \n",

840 
x˘_id
, 
wl_id
);

841 
	`W_DO
(
_pw©ch_ôem_m™
->
	`wi_gë_ôî_by_ödex
(
_pssm
, 
tmp_wi_ôî
,

842 
¥w©chôem
, 
lowªp
,

843 
highªp
, 
wl_id
));

844 
wi_ôî
 = 
tmp_wi_ôî
;

846 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

847 !
eof
){

848 
˙t
++;

849 
wi_s_symbﬁ
[16];

850 
¥w©chôem
->
	`gë_vÆue
(1, 
wi_s_symbﬁ
, 16);

851 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

853 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

855 
˙t
 = (cnt+1)/2;

877 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
>* 
tmp_wl_ôî
;

878 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wl-get-iter-by-idx2 (%ld) \n",

879 
x˘_id
, 
pdmö
.
_c_id
);

880 
	`W_DO
(
_pw©ch_li°_m™
->
	`wl_gë_ôî_by_ödex2
(
_pssm
, 
tmp_wl_ôî
,

881 
¥w©chli°
, 
lowªp
,

882 
highªp
, 
pdmö
.
_c_id
));

883 
wl_ôî
 = 
tmp_wl_ôî
;

885 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

886 !
eof
 && 
˙t
 > 0){

887 
TIdít
 
wl_id
;

888 
¥w©chli°
->
	`gë_vÆue
(0, 
wl_id
);

890 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
> > 
wi_ôî
;

892 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
>* 
tmp_wi_ôî
;

893 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wi-get-iter-by-idx (%ld) \n",

894 
x˘_id
, 
wl_id
);

895 
	`W_DO
(
_pw©ch_ôem_m™
->
	`wi_gë_ôî_by_ödex
(
_pssm
, 
tmp_wi_ôî
,

896 
¥w©chôem
, 
lowªp
,

897 
highªp
, 
wl_id
));

898 
wi_ôî
 = 
tmp_wi_ôî
;

900 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

901 !
eof
){

902 
˙t
--;

903 if(
˙t
 == 0){

904 
¥w©chôem
->
	`gë_vÆue
(1, 
ﬁd_symbﬁ
, 16);

907 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

909 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

933 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
£curôy_t
> > 
s_ôî
;

935 
ödex_sˇn_ôî_im∂
<
£curôy_t
>* 
tmp_s_ôî
;

936 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:s-get-iter-by-idx (%s) \n",

937 
x˘_id
, 
ﬁd_symbﬁ
);

938 
	`W_DO
(
_p£curôy_m™
->
	`s_gë_ôî_by_ödex
(
_pssm
, 
tmp_s_ôî
,

939 
¥£curôy
, 
lowªp
, 
highªp
,

940 
ﬁd_symbﬁ
));

941 
s_ôî
 = 
tmp_s_ôî
;

944 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

945 !
eof
){

946 
s_symb
[16];

947 
¥£curôy
->
	`gë_vÆue
(0, 
s_symb
, 16);

949 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
>* 
tmp_wl_ôî
;

950 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wl-get-iter-by-idx2 (%ld) \n",

951 
x˘_id
, 
pdmö
.
_c_id
);

952 
	`W_DO
(
_pw©ch_li°_m™
->
	`wl_gë_ôî_by_ödex2
(
_pssm
, 
tmp_wl_ôî
,

953 
¥w©chli°
, 
lowªp
,

954 
highªp
, 
pdmö
.
_c_id
));

955 
wl_ôî
 = 
tmp_wl_ôî
;

956 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

957 !
eof
){

958 
TIdít
 
wl_id
;

959 
¥w©chli°
->
	`gë_vÆue
(0, 
wl_id
);

961 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
> > 
wi_ôî
;

963 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
>* 
tmp_wi_ôî
;

964 
	`TRACE
(
TRACE_TRX_FLOW
,

965 "Aµ: %d DM:wi-gë-ôî-by-idx (%ld)\n", 
x˘_id
, 
wl_id
);

966 
	`W_DO
(
_pw©ch_ôem_m™
->
	`wi_gë_ôî_by_ödex
(
_pssm
,

967 
tmp_wi_ôî
,

968 
¥w©chôem
,

969 
lowªp
, 
highªp
,

970 
wl_id
));

971 
wi_ôî
 = 
tmp_wi_ôî
;

973 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

974 !
eof
){

975 
wi_s_symb
[16];

976 
¥w©chôem
->
	`gë_vÆue
(1, 
wi_s_symb
, 16);

977 if(
	`°rcmp
(
s_symb
, 
wi_s_symb
) != 0){

978 
	`°r˝y
(
√w_symbﬁ
, 
s_symb
);

981 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

983 if(
	`°rcmp
(
√w_symbﬁ
, "\0") != 0) {

986 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

988 if(
	`°rcmp
(
√w_symbﬁ
, "\0") != 0) {

991 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

1006 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wl-get-iter-by-idx2 (%ld) \n",

1007 
x˘_id
, 
pdmö
.
_c_id
);

1008 
	`W_DO
(
_pw©ch_li°_m™
->
	`wl_gë_ôî_by_ödex2
(
_pssm
, 
tmp_wl_ôî
,

1009 
¥w©chli°
, 
lowªp
,

1010 
highªp
, 
pdmö
.
_c_id
));

1011 
wl_ôî
 = 
tmp_wl_ôî
;

1013 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

1014 !
eof
 && 
˙t
 > 0){

1015 
TIdít
 
wl_id
;

1016 
¥w©chli°
->
	`gë_vÆue
(0, 
wl_id
);

1018 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d DM:wi-update-symb (%ld) (%s) (%s) \n",

1019 
x˘_id
, 
wl_id
, 
ﬁd_symbﬁ
, 
√w_symbﬁ
);

1020 
	`W_DO
(
_pw©ch_ôem_m™
->
	`wi_upd©e_symb
(
_pssm
, 
¥w©chôem
, 
wl_id
,

1021 
ﬁd_symbﬁ
, 
√w_symbﬁ
));

1022 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

1026 #ifde‡
PRINT_TRX_RESULTS


1029 
øc˘≥rm
.
	`¥öt_tu∂e
();

1030 
øddªss
.
	`¥öt_tu∂e
();

1031 
rcom∑ny
.
	`¥öt_tu∂e
();

1032 
rcu°omî
.
	`¥öt_tu∂e
();

1033 
rcu°omîèxøã
.
	`¥öt_tu∂e
();

1034 
rdaûym¨kë
.
	`¥öt_tu∂e
();

1035 
ªxch™ge
.
	`¥öt_tu∂e
();

1036 
rfö™cül
.
	`¥öt_tu∂e
();

1037 
r£curôy
.
	`¥öt_tu∂e
();

1038 
∫ewsôem
.
	`¥öt_tu∂e
();

1039 
∫ewsxªf
.
	`¥öt_tu∂e
();

1040 
πaxøã
.
	`¥öt_tu∂e
();

1041 
rw©chôem
.
	`¥öt_tu∂e
();

1042 
rw©chli°
.
	`¥öt_tu∂e
();

1045  
RCOK
;

1047 
	}
}

1050 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_market_feed.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

50 
ENTER_NAMESPACE
(
ç˚
);

59 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_m¨kë_„ed
(c⁄° 
x˘_id
,

60 
m¨kë_„ed_öput_t
& 
pmfö
)

63 if(
pmfö
.
_ty≥_limô_buy
[0] == '\0') {

64 
	`©omic_öc_uöt_nv
(&
_num_övÆid_öput
);

65  
RCOK
;

69 
	`as£π
 (
_pssm
);

70 
	`as£π
 (
_öôülized
);

71 
	`as£π
 (
_lﬂded
);

73 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥œ°åade
(
_∂a°_åade_m™
);

74 
tu∂e_gu¨d
<
åade_ªque°_m™_im∂
> 
	`¥åadîeq
(
_±øde_ªque°_m™
);

75 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

76 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

78 
ªp_row_t
 
	`¨ïrow
(
_±øde_m™
->
	`ts
());

80 
¨ïrow
.
	`£t
(
_±øde_desc
->
	`maxsize
());

82 
¥œ°åade
->
_ªp
 = &
¨ïrow
;

83 
¥åadîeq
->
_ªp
 = &
¨ïrow
;

84 
¥åade
->
_ªp
 = &
¨ïrow
;

85 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

87 
ªp_row_t
 
	`lowªp
–
_±øde_m™
->
	`ts
());

88 
ªp_row_t
 
	`highªp
–
_±øde_m™
->
	`ts
());

91 
lowªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

92 
highªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

94 
myTime
 
now_dts
;

95 
ªq_¥i˚_quŸe
;

96 
TIdít
 
ªq_åade_id
;

97 
ªq_åade_qty
;

98 
ªq_åade_ty≥
[4];

99 
rows_upd©ed
;

100 
uöt
 
num_dñëed
;

102 
now_dts
 = 
	`time
(
NULL
);

105 
rows_upd©ed
 = 0;Ñows_upd©ed < 
max_„ed_Àn
;Ñows_updated++) {

106 
num_dñëed
 = 0;

118 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MF:lt-update (%s) (%d) (%d) (%ld) \n",

119 
x˘_id
, 
pmfö
.
_symbﬁ
[
rows_upd©ed
],

120 
pmfö
.
_¥i˚_quŸe
[
rows_upd©ed
],

121 
pmfö
.
_åade_qty
[
rows_upd©ed
], 
now_dts
);

122 
	`W_DO
(
_∂a°_åade_m™
->

123 
	`…_upd©e_by_ödex
(
_pssm
, 
¥œ°åade
, 
pmfö
.
_symbﬁ
[
rows_upd©ed
],

124 
pmfö
.
_¥i˚_quŸe
[
rows_upd©ed
],

125 
pmfö
.
_åade_qty
[
rows_upd©ed
], 
now_dts
));

145 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
åade_ªque°_t
> > 
å_ôî
;

147 
ödex_sˇn_ôî_im∂
<
åade_ªque°_t
>* 
tmp_å_ôî
;

148 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MF:tr-get-iter-by-idx4 (%s) \n",

149 
x˘_id
, 
pmfö
.
_symbﬁ
[
rows_upd©ed
]);

150 
	`W_DO
(
_±øde_ªque°_m™
->

151 
	`å_gë_ôî_by_ödex4
(
_pssm
, 
tmp_å_ôî
, 
¥åadîeq
, 
lowªp
,

152 
highªp
, 
pmfö
.
_symbﬁ
[
rows_upd©ed
]));

153 
å_ôî
 = 
tmp_å_ôî
;

156 
boﬁ
 
eof
;

157 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MF:å-ôî-√xà\n", 
x˘_id
);

158 
w_rc_t
 
e
 = 
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
);

159 i‡(
e
.
	`is_îr‹
()) {

160 if(
e
.
	`îr_num
(Ë=
smÀvñ_0
::
eBADSLOTNUMBER
) {

161 
eof
 = 
åue
;

163 
	`W_DO
(
e
);

166 !
eof
) {

167 
¥åadîeq
->
	`gë_vÆue
(1, 
ªq_åade_ty≥
, 4);

168 
¥åadîeq
->
	`gë_vÆue
(4, 
ªq_¥i˚_quŸe
);

170 if((
	`°rcmp
(
ªq_åade_ty≥
, 
pmfö
.
_ty≥_°›_loss
) == 0 &&

171 (
ªq_¥i˚_quŸe
 >
pmfö
.
_¥i˚_quŸe
[
rows_upd©ed
])) ||

172 (
	`°rcmp
(
ªq_åade_ty≥
, 
pmfö
.
_ty≥_limô_£Œ
) == 0 &&

173 (
ªq_¥i˚_quŸe
 <
pmfö
.
_¥i˚_quŸe
[
rows_upd©ed
])) ||

174 (
	`°rcmp
(
ªq_åade_ty≥
, 
pmfö
.
_ty≥_limô_buy
)== 0 &&

175 (
ªq_¥i˚_quŸe
 >
pmfö
.
_¥i˚_quŸe
[
rows_upd©ed
]))

177 
¥åadîeq
->
	`gë_vÆue
(0, 
ªq_åade_id
);

178 
¥åadîeq
->
	`gë_vÆue
(3, 
ªq_åade_qty
);

192 
pmfö
.
_åade_rid
[
num_dñëed
] = 
¥åadîeq
->
	`rid
();

193 
num_dñëed
++;

204 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MF:t-update (%ld) (%ld) (%s) \n",

205 
x˘_id
, 
ªq_åade_id
, 
now_dts
, 
pmfö
.
_°©us_submôãd
);

206 
	`W_DO
(
_±øde_m™
->

207 
	`t_upd©e_dts_°did_by_ödex
(
_pssm
, 
¥åade
,

208 
ªq_åade_id
, 
now_dts
,

209 
pmfö
.
_°©us_submôãd
));

219 
¥åadehi°
->
	`£t_vÆue
(0, 
ªq_åade_id
);

220 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

221 
¥åadehi°
->
	`£t_vÆue
(2, 
pmfö
.
_°©us_submôãd
);

223 
	`TRACE
(
TRACE_TRX_FLOW
,"App: %d MF:th-add-tuple (%ld) (%ld) (%s)\n",

224 
x˘_id
, 
ªq_åade_id
, 
now_dts
, 
pmfö
.
_°©us_submôãd
);

225 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

227 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MF:å-ôî-√xà\n", 
x˘_id
);

228 
e
 = 
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
);

229 i‡(
e
.
	`is_îr‹
()) {

230 if(
e
.
	`îr_num
(Ë=
smÀvñ_0
::
eBADSLOTNUMBER
) {

231 
eof
 = 
åue
;

233 
	`W_DO
(
e
);

236 
uöt
 
i
=0; i<
num_dñëed
; i++) {

237 
	`TRACE
–
TRACE_TRX_FLOW
,

238 "%d - MF:å-dñëe-tu∂ê- (%d).(%d).(%d).(%d)\n", 
x˘_id
,

239 (
pmfö
.
_åade_rid
[
i
]).
pid
.
	`vﬁ
().
vﬁ
,

240 (
pmfö
.
_åade_rid
[
i
]).
pid
.
	`°‹e
(),

241 (
pmfö
.
_åade_rid
[
i
]).
pid
.
∑ge
,

242 (
pmfö
.
_åade_rid
[
i
]).
¶Ÿ
);

243 
e
 = 
_±øde_ªque°_m™
->
	`å_dñëe_tu∂e
(
_pssm
, 
¥åadîeq
,

244 
pmfö
.
_åade_rid
[
i
]);

245 i‡(
e
.
	`is_îr‹
(Ë&&É.
	`îr_num
(Ë!
smÀvñ_0
::
eBADSLOTNUMBER
) {

246 
	`W_DO
(
e
);

251 
	`as£π
(
rows_upd©ed
 =
max_„ed_Àn
);

268 #ifde‡
PRINT_TRX_RESULTS


271 
æa°åade
.
	`¥öt_tu∂e
();

272 
πødîeq
.
	`¥öt_tu∂e
();

273 
πøde
.
	`¥öt_tu∂e
();

274 
πødehi°
.
	`¥öt_tu∂e
();

277  
RCOK
;

279 
	}
}

282 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_market_watch.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_m¨kë_w©ch
(c⁄° 
x˘_id
,

57 
m¨kë_w©ch_öput_t
& 
pmwö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥com∑ny
(
_pcom∑ny_m™
);

65 
tu∂e_gu¨d
<
daûy_m¨kë_m™_im∂
> 
	`¥daûym¨kë
(
_pdaûy_m¨kë_m™
);

66 
tu∂e_gu¨d
<
hﬁdög_summ¨y_m™_im∂
> 
	`¥hﬁdsumm
(
_phﬁdög_summ¨y_m™
);

67 
tu∂e_gu¨d
<
ödu°ry_m™_im∂
> 
	`¥ödu°ry
(
_pödu°ry_m™
);

68 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥œ°åade
(
_∂a°_åade_m™
);

69 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

70 
tu∂e_gu¨d
<
w©ch_ôem_m™_im∂
> 
	`¥w©chôem
(
_pw©ch_ôem_m™
);

71 
tu∂e_gu¨d
<
w©ch_li°_m™_im∂
> 
	`¥w©chli°
(
_pw©ch_li°_m™
);

73 
ªp_row_t
 
	`¨ïrow
(
_pcom∑ny_m™
->
	`ts
());

75 
¨ïrow
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

77 
¥com∑ny
->
_ªp
 = &
¨ïrow
;

78 
¥daûym¨kë
->
_ªp
 = &
¨ïrow
;

79 
¥hﬁdsumm
->
_ªp
 = &
¨ïrow
;

80 
¥ödu°ry
->
_ªp
 = &
¨ïrow
;

81 
¥œ°åade
->
_ªp
 = &
¨ïrow
;

82 
¥£curôy
->
_ªp
 = &
¨ïrow
;

83 
¥w©chôem
->
_ªp
 = &
¨ïrow
;

84 
¥w©chli°
->
_ªp
 = &
¨ïrow
;

86 
ªp_row_t
 
	`lowªp
–
_pcom∑ny_m™
->
	`ts
());

87 
ªp_row_t
 
	`highªp
–
_pcom∑ny_m™
->
	`ts
());

90 
lowªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

91 
highªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

93 if(! ((
pmwö
.
_ac˘_id
 !0Ë|| (pmwö.
_cu°_id
 != 0) ||

94 
	`°rcmp
(
pmwö
.
_ödu°ry_«me
, "") != 0)) {

95 
	`as£π
(
Ál£
);

98 
ve˘‹
<
°rög
> 
°ock_li°
;

99 if(
pmwö
.
_cu°_id
 != 0){

110 
boﬁ
 
eof
;

111 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
> > 
wl_ôî
;

113 
ödex_sˇn_ôî_im∂
<
w©ch_li°_t
>* 
tmp_wl_ôî
;

114 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:wl-get-iter-by-idx2 (%ld) \n",

115 
x˘_id
, 
pmwö
.
_cu°_id
);

116 
	`W_DO
(
_pw©ch_li°_m™
->
	`wl_gë_ôî_by_ödex2
(
_pssm
, 
tmp_wl_ôî
,

117 
¥w©chli°
,

118 
lowªp
, 
highªp
,

119 
pmwö
.
_cu°_id
));

120 
wl_ôî
 = 
tmp_wl_ôî
;

123 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:wl-ôî-√xà\n", 
x˘_id
);

124 
	`W_DO
(
wl_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chli°
));

125 if(
eof
Ë{ 
	`W_DO
(
	`RC
(
£_NOT_FOUND
)); }

127 
TIdít
 
wl_id
;

128 
¥w©chli°
->
	`gë_vÆue
(0, 
wl_id
);

130 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
> > 
wi_ôî
;

132 
ödex_sˇn_ôî_im∂
<
w©ch_ôem_t
>* 
tmp_wi_ôî
;

133 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:wi-get-iter-by-idx (%ld) \n",

134 
x˘_id
, 
wl_id
);

135 
	`W_DO
(
_pw©ch_ôem_m™
->
	`wi_gë_ôî_by_ödex
(
_pssm
, 
tmp_wi_ôî
,

136 
¥w©chôem
, 
lowªp
,

137 
highªp
, 
wl_id
));

138 
wi_ôî
 = 
tmp_wi_ôî
;

141 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:wi-ôî-√xà\n", 
x˘_id
);

142 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

143 !
eof
){

144 
wi_s_symb
[16];

145 
¥w©chôem
->
	`gë_vÆue
(1, 
wi_s_symb
, 16);

147 
°rög
 
	`symb
(
wi_s_symb
);

148 
°ock_li°
.
	`push_back
(
symb
);

150 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:wi-iter-next %s \n",

151 
x˘_id
, 
wi_s_symb
);

152 
	`W_DO
(
wi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥w©chôem
));

154 } if(
pmwö
.
_ödu°ry_«me
[0] != 0) {

166 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
ödu°ry_t
> > 
ö_ôî
;

168 
ödex_sˇn_ôî_im∂
<
ödu°ry_t
>* 
tmp_ö_ôî
;

169 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:in-get-iter-by-idx2 (%s) \n",

170 
x˘_id
, 
pmwö
.
_ödu°ry_«me
);

171 
	`W_DO
(
_pödu°ry_m™
->
	`ö_gë_ôî_by_ödex2
(
_pssm
, 
tmp_ö_ôî
,

172 
¥ödu°ry
,

173 
lowªp
, 
highªp
,

174 
pmwö
.
_ödu°ry_«me
));

175 
ö_ôî
 = 
tmp_ö_ôî
;

177 
boﬁ
 
eof
;

178 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:ö-ôî-√xà\n", 
x˘_id
);

179 
	`W_DO
(
ö_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥ödu°ry
));

180 if(
eof
Ë{ 
	`W_DO
(
	`RC
(
£_NOT_FOUND
)); }

182 
ö_id
[3];

183 
¥ödu°ry
->
	`gë_vÆue
(0, 
ö_id
, 3);

185 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
com∑ny_t
> > 
co_ôî
;

187 
ödex_sˇn_ôî_im∂
<
com∑ny_t
>* 
tmp_co_ôî
;

188 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:co-get-iter-by-idx3 (%s) \n",

189 
x˘_id
, 
ö_id
);

190 
	`W_DO
(
_pcom∑ny_m™
->
	`co_gë_ôî_by_ödex3
(
_pssm
, 
tmp_co_ôî
,

191 
¥com∑ny
,

192 
lowªp
, 
highªp
, 
ö_id
));

193 
co_ôî
 = 
tmp_co_ôî
;

196 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:co-ôî-√xà\n", 
x˘_id
);

197 
	`W_DO
(
co_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑ny
));

199 
TIdít
 
co_id
;

200 !
eof
){

201 
¥com∑ny
->
	`gë_vÆue
(0, 
co_id
);

203 if(
pmwö
.
_°¨tög_co_id
 <
co_id
 && co_id <pmwö.
_ídög_co_id
) {

204 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
£curôy_t
> > 
s_ôî
;

206 
ödex_sˇn_ôî_im∂
<
£curôy_t
>* 
tmp_s_ôî
;

207 
	`TRACE
–
TRACE_TRX_FLOW
, "App:%d MW:s-get-iter-by-idx4 (%ld)\n",

208 
x˘_id
, 
co_id
);

209 
	`W_DO
(
_p£curôy_m™
->
	`s_gë_ôî_by_ödex4
(
_pssm
, 
tmp_s_ôî
,

210 
¥£curôy
, 
lowªp
,

211 
highªp
, 
co_id
));

212 
s_ôî
 = 
tmp_s_ôî
;

215 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:s-ôî-√xà\n", 
x˘_id
);

216 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

218 !
eof
){

219 
s_symb
[16];

220 
¥£curôy
->
	`gë_vÆue
(0, 
s_symb
, 16);

222 
°rög
 
	`symb
(
s_symb
);

223 
°ock_li°
.
	`push_back
(
symb
);

225 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:s-ôî-√xà\n", 
x˘_id
);

226 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

229 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:co-ôî-√xà\n", 
x˘_id
);

230 
	`W_DO
(
co_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑ny
));

232 } if(
pmwö
.
_ac˘_id
 != 0) {

241 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
> > 
hs_ôî
;

243 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
>* 
tmp_hs_ôî
;

244 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:hs-iter-by-idx (%ld) \n",

245 
x˘_id
, 
pmwö
.
_ac˘_id
);

246 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`hs_gë_ôî_by_ödex
(
_pssm
, 
tmp_hs_ôî
,

247 
¥hﬁdsumm
,

248 
lowªp
, 
highªp
,

249 
pmwö
.
_ac˘_id
,

250 
Ál£
));

251 
hs_ôî
 = 
tmp_hs_ôî
;

254 
boﬁ
 
eof
;

255 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:hs-ôî-√xà\n", 
x˘_id
);

256 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdsumm
));

257 !
eof
){

258 
hs_s_symb
[16];

259 
¥hﬁdsumm
->
	`gë_vÆue
(1, 
hs_s_symb
, 16);

261 
°rög
 
	`symb
(
hs_s_symb
);

262 
°ock_li°
.
	`push_back
(
symb
);

264 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:hs-ôî-√xà\n", 
x˘_id
);

265 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdsumm
));

269 
ﬁd_mkt_ˇp
 = 0;

270 
√w_mkt_ˇp
 = 0;

271 
p˘_ch™ge
;

273 
ve˘‹
<
°rög
>::
ôî©‹
 
°ock_li°_ôî
 = 
°ock_li°
.
	`begö
();

274 
°ock_li°_ôî
 !
°ock_li°
.
	`íd
();

275 
°ock_li°_ôî
++) {

277 
symbﬁ
[16];

278 
	`°r˝y
(
symbﬁ
, (*
°ock_li°_ôî
).
	`c_°r
());

288 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:…-idx-¥obê(%sË\n", 
x˘_id
, 
symbﬁ
);

289 
	`W_DO
(
_∂a°_åade_m™
->
	`…_ödex_¥obe
(
_pssm
, 
¥œ°åade
, 
symbﬁ
));

290 
√w_¥i˚
;

291 
¥œ°åade
->
	`gë_vÆue
(2, 
√w_¥i˚
);

301 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d MW:s-idx-¥obê(%sË\n", 
x˘_id
, 
symbﬁ
);

302 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
symbﬁ
));

303 
s_num_out
;

304 
¥£curôy
->
	`gë_vÆue
(6, 
s_num_out
);

315 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d MW:dm-idx1-probe (%s) (%d) \n",

316 
x˘_id
, 
symbﬁ
, 
pmwö
.
_°¨t_d©e
);

317 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`dm_ödex_¥obe
(
_pssm
, 
¥daûym¨kë
, 
symbﬁ
,

318 
pmwö
.
_°¨t_d©e
));

319 
ﬁd_¥i˚
;

320 
¥daûym¨kë
->
	`gë_vÆue
(2, 
ﬁd_¥i˚
);

322 
ﬁd_mkt_ˇp
 +(
s_num_out
 * 
ﬁd_¥i˚
);

323 
√w_mkt_ˇp
 +(
s_num_out
 * 
√w_¥i˚
);

326 if(
ﬁd_mkt_ˇp
 != 0){

327 
p˘_ch™ge
 = 100 * (
√w_mkt_ˇp
 / 
ﬁd_mkt_ˇp
 - 1);

329 
p˘_ch™ge
 = 0;

332 #ifde‡
PRINT_TRX_RESULTS


335 
rcom∑ny
.
	`¥öt_tu∂e
();

336 
rdaûym¨kë
.
	`¥öt_tu∂e
();

337 
rhﬁdsumm
.
	`¥öt_tu∂e
();

338 
rödu°ry
.
	`¥öt_tu∂e
();

339 
æa°åade
.
	`¥öt_tu∂e
();

340 
r£curôy
.
	`¥öt_tu∂e
();

341 
rw©chôem
.
	`¥öt_tu∂e
();

342 
rw©chli°
.
	`¥öt_tu∂e
();

345  
RCOK
;

347 
	}
}

350 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_populate.cpp

33 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

35 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

37 
	~<ve˘‹
>

38 
	~<numîic
>

39 
	~<Æg‹ôhm
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~"w‹klﬂd/ç˚/egí/CE.h
"

43 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

44 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

46 
usög
 
«me•a˚
 
	gsh‹e
;

47 
usög
 
«me•a˚
 
	gTPCE
;

52 
ENTER_NAMESPACE
(
ç˚
);

54 #ifde‡
COMPILE_FLAT_FILE_LOAD


55 
FILE
 * 
fs£c
;

56 
FILE
* 
fshs
;

59 c⁄° 
	glﬂdUnô
 = 10000;

61 
	gã°C¡
 = 0;

63 #ifde‡
TESTING_TPCE


65 
	gåxs_˙t_execuãd
[10];

66 
	gåxs_˙t_Áûed
[10];

70 
	gTødeOrdîC¡
;

72 
	gœ°TødeId
 = 0;

75 
Accou¡Pîmissi⁄Buf„r
 
accou¡Pîmissi⁄Buf„r
 (3015);

76 
Cu°omîBuf„r
 
cu°omîBuf„r
 (1005);

77 
Cu°omîAccou¡Buf„r
 
cu°omîAccou¡Buf„r
 (1005);

78 
Cu°omîTaxøãBuf„r
 
cu°omîTaxøãBuf„r
 (2010);

79 
HﬁdögBuf„r
 
hﬁdögBuf„r
(10000);

80 
HﬁdögHi°‹yBuf„r
 
hﬁdögHi°‹yBuf„r
(2*
lﬂdUnô
);

81 
HﬁdögSumm¨yBuf„r
 
hﬁdögSumm¨yBuf„r
(6000);

82 
W©chIãmBuf„r
 
w©chIãmBuf„r
 (
iMaxIãmsInWL
*1020+5000);

83 
W©chLi°Buf„r
 
w©chLi°Buf„r
 (1020);

85 
BrokîBuf„r
 
brokîBuf„r
(100);

86 
CashTønß˘i⁄Buf„r
 
ˇshTønß˘i⁄Buf„r
(
lﬂdUnô
);

87 
Ch¨geBuf„r
 
ch¨geBuf„r
(20);

88 
Commissi⁄R©eBuf„r
 
commissi⁄R©eBuf„r
 (245);

89 
SëéemítBuf„r
 
£âÀmítBuf„r
(
lﬂdUnô
);

90 
TødeBuf„r
 
åadeBuf„r
(
lﬂdUnô
);

91 
TødeHi°‹yBuf„r
 
åadeHi°‹yBuf„r
(3*
lﬂdUnô
);

92 
TødeTy≥Buf„r
 
åadeTy≥Buf„r
 (10);

95 
Com∑nyBuf„r
 
com∑nyBuf„r
 (1000);

96 
Com∑nyCom≥tô‹Buf„r
 
com∑nyCom≥tô‹Buf„r
(3000);

97 
DaûyM¨këBuf„r
 
daûyM¨këBuf„r
(3000);

98 
Exch™geBuf„r
 
exch™geBuf„r
(9);

99 
Fö™cülBuf„r
 
fö™cülBuf„r
 (1500);

100 
Indu°ryBuf„r
 
ödu°ryBuf„r
(107);

101 
La°TødeBuf„r
 
œ°TødeBuf„r
 (1005);

102 
NewsIãmBuf„r
 
√wsIãmBuf„r
(200);

103 
NewsXRefBuf„r
 
√wsXRefBuf„r
(200);

104 
Se˘‹Buf„r
 
£˘‹Buf„r
(17);

105 
SecurôyBuf„r
 
£curôyBuf„r
(1005);

108 
AddªssBuf„r
 
addªssBuf„r
(1005);

109 
SètusTy≥Buf„r
 
°©usTy≥Buf„r
 (10);

110 
TaxøãBuf„r
 
èxøãBuf„r
 (325);

111 
ZùCodeBuf„r
 
zùCodeBuf„r
 (14850);

119 
__thªad
 
Sh‹eTPCETrxSèts
 
	gmy_°©s
;

121 
	gSh‹eTPCEEnv
::
	$ív_thªad_öô
()

123 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

124 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

125 
	}
}

127 
	gSh‹eTPCEEnv
::
	$ív_thªad_föi
()

129 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

130 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

131 
	}
}

142 
Sh‹eTPCETrxSèts
 
	gSh‹eTPCEEnv
::
	$_gë_°©s
()

144 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

145 
Sh‹eTPCETrxSèts
 
rvÆ
;

146 
rvÆ
 -=Ñval;

147 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

148 
rvÆ
 +*
ô
->
£c⁄d
;

149  (
rvÆ
);

150 
	}
}

161 
	gSh‹eTPCEEnv
::
	$ª£t_°©s
()

163 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

164 
_œ°_°©s
 = 
	`_gë_°©s
();

165 
_num_övÆid_öput
 = 0;

166 
	}
}

177 
	gSh‹eTPCEEnv
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

178 c⁄° 
iS¥ód
,

179 c⁄° 
iNumOfThªads
,

180 c⁄° 
dñay
,

181 c⁄° 
ul⁄g_t
 
mioch
,

182 c⁄° 
avg˝uußge
)

184 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

187 
Sh‹eTPCETrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

190 
cuºít_°©s
 -
_œ°_°©s
;

192 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

193 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

194 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

196 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

207 (
iS¥ód
 ? "Yes" : "No"),

208 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
,

209 
dñay
, 
mioch
/dñay, 
avg˝uußge
, 100*avgcpuusage/64,

210 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
,

211 
_num_övÆid_öput
);

212 
	}
}

235 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

238 if(
¥eque°
->
	`ty≥
()==
XCT_TPCE_MIX
) {

239 
ønd
 = (1.0*(
smthªad_t
::
	`me
()->
	`ønd
()%10000))/100.0;

240 i‡(
ønd
<0)Ñand*=-1.0;

241 
¥eque°
->
	`£t_ty≥
(
	`øndom_x˘_ty≥
(
ønd
));

244 
¥eque°
->
	`ty≥
()) {

246 
XCT_TPCE_BROKER_VOLUME
:

247  
	`run_brokî_vﬁume
(
¥eque°
);

249 
XCT_TPCE_CUSTOMER_POSITION
:

250  
	`run_cu°omî_posôi⁄
(
¥eque°
);

252 
XCT_TPCE_MARKET_FEED
:

253  
	`run_m¨kë_„ed
(
¥eque°
);

255 
XCT_TPCE_MARKET_WATCH
:

256  
	`run_m¨kë_w©ch
(
¥eque°
);

258 
XCT_TPCE_SECURITY_DETAIL
:

259  
	`run_£curôy_dëaû
(
¥eque°
);

261 
XCT_TPCE_TRADE_LOOKUP
:

262  
	`run_åade_lookup
(
¥eque°
);

264 
XCT_TPCE_TRADE_ORDER
:

265  
	`run_åade_‹dî
(
¥eque°
);

267 
XCT_TPCE_TRADE_RESULT
:

268  
	`run_åade_ªsu…
(
¥eque°
);

270 
XCT_TPCE_TRADE_STATUS
:

271  
	`run_åade_°©us
(
¥eque°
);

273 
XCT_TPCE_TRADE_UPDATE
:

274  
	`run_åade_upd©e
(
¥eque°
);

276 
XCT_TPCE_DATA_MAINTENANCE
:

277  
	`run_d©a_maöã«n˚
(
¥eque°
);

279 
XCT_TPCE_TRADE_CLEANUP
:

280  
	`run_åade_˛ónup
(
¥eque°
);

283 
	`¥ötf
("************ty≥ %d**********\¿", 
¥eque°
->
	`ty≥
());

284 
	`as£π
 (0);

286  (
RCOK
);

287 
	}
}

353 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_£˘‹
(
ªp_row_t
& 
¨ïrow
, 
PSECTOR_ROW
 
ªc‹d
)

355 
tu∂e_gu¨d
<
£˘‹_m™_im∂
> 
	`¥
(
_p£˘‹_m™
);

356 
¥
->
_ªp
 = &
¨ïrow
;

358 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
SC_ID
);

359 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
SC_NAME
);

360 
	`W_DO
(
_p£˘‹_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

362  
RCOK
;

363 
	}
}

365 
	gSh‹eTPCEEnv
::
	$_ªad_£˘‹
()

367 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°Se˘‹
();

368 !
isLa°
) {

369 
PSECTOR_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëSe˘‹Row
();

370 
£˘‹Buf„r
.
	`≠≥nd
(
ªc‹d
);

371 
isLa°

pGíî©eAndLﬂd
->
	`isLa°Se˘‹
();

373 
£˘‹Buf„r
.
	`£tM‹eToRód
(
Ál£
);

374 
	}
}

377 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_ch¨ge
(
ªp_row_t
& 
¨ïrow
, 
PCHARGE_ROW
 
ªc‹d
)

379 
tu∂e_gu¨d
<
ch¨ge_m™_im∂
> 
	`¥
(
_pch¨ge_m™
);

380 
¥
->
_ªp
 = &
¨ïrow
;

382 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
CH_TT_ID
);

383 
¥
->
	`£t_vÆue
(1, ()
ªc‹d
->
CH_C_TIER
);

384 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CH_CHRG
);

385 
	`W_DO
(
_pch¨ge_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

387  
RCOK
;

388 
	}
}

390 
	gSh‹eTPCEEnv
::
	$_ªad_ch¨ge
()

392 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°Ch¨ge
();

393 !
isLa°
) {

394 
PCHARGE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëCh¨geRow
();

395 
ch¨geBuf„r
.
	`≠≥nd
(
ªc‹d
);

396 
isLa°

pGíî©eAndLﬂd
->
	`isLa°Ch¨ge
();

398 
ch¨geBuf„r
.
	`£tM‹eToRód
(
Ál£
);

399 
	}
}

402 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_commissi⁄_øã
(
ªp_row_t
& 
¨ïrow
,

403 
PCOMMISSION_RATE_ROW
 
ªc‹d
)

405 
tu∂e_gu¨d
<
commissi⁄_øã_m™_im∂
> 
	`¥
(
_pcommissi⁄_øã_m™
);

406 
¥
->
_ªp
 = &
¨ïrow
;

408 
¥
->
	`£t_vÆue
(0, ()(
ªc‹d
->
CR_C_TIER
));

409 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
CR_TT_ID
);

410 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CR_EX_ID
);

411 
¥
->
	`£t_vÆue
(3, ()(
ªc‹d
->
CR_FROM_QTY
));

412 
¥
->
	`£t_vÆue
(4, ()(
ªc‹d
->
CR_TO_QTY
));

413 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
CR_RATE
);

414 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

416  
RCOK
;

417 
	}
}

419 
	gSh‹eTPCEEnv
::
	$_ªad_commissi⁄_øã
()

421 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°Commissi⁄R©e
();

422 !
isLa°
) {

423 
PCOMMISSION_RATE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëCommissi⁄R©eRow
();

424 
commissi⁄R©eBuf„r
.
	`≠≥nd
(
ªc‹d
);

425 
isLa°

pGíî©eAndLﬂd
->
	`isLa°Commissi⁄R©e
();

427 
commissi⁄R©eBuf„r
.
	`£tM‹eToRód
(
Ál£
);

428 
	}
}

431 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_exch™ge
(
ªp_row_t
& 
¨ïrow
, 
PEXCHANGE_ROW
 
ªc‹d
)

433 
tu∂e_gu¨d
<
exch™ge_m™_im∂
> 
	`¥
(
_≥xch™ge_m™
);

434 
¥
->
_ªp
 = &
¨ïrow
;

436 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
EX_ID
);

437 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
EX_NAME
);

438 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
EX_NUM_SYMB
);

439 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
EX_OPEN
);

440 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
EX_CLOSE
);

441 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
EX_DESC
);

442 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
EX_AD_ID
 );

443 
	`W_DO
(
_≥xch™ge_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

445  
RCOK
;

446 
	}
}

448 
	gSh‹eTPCEEnv
::
	$_ªad_exch™ge
()

450 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°Exch™ge
();

451 !
isLa°
) {

452 
	`as£π
(
ã°C¡
<10);

453 
PEXCHANGE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëExch™geRow
();

454 
exch™geBuf„r
.
	`≠≥nd
(
ªc‹d
);

455 
isLa°

pGíî©eAndLﬂd
->
	`isLa°Exch™ge
();

457 
exch™geBuf„r
.
	`£tM‹eToRód
(
Ál£
);

458 
	}
}

461 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_ödu°ry
(
ªp_row_t
& 
¨ïrow
, 
PINDUSTRY_ROW
 
ªc‹d
)

463 
tu∂e_gu¨d
<
ödu°ry_m™_im∂
> 
	`¥
(
_pödu°ry_m™
);

464 
¥
->
_ªp
 = &
¨ïrow
;

466 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
IN_ID
);

467 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
IN_NAME
);

468 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
IN_SC_ID
);

469 
	`W_DO
(
_pödu°ry_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

471  
RCOK
;

472 
	}
}

474 
	gSh‹eTPCEEnv
::
	$_ªad_ödu°ry
()

476 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°Indu°ry
();

477 !
isLa°
) {

478 
PINDUSTRY_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëIndu°ryRow
();

479 
ödu°ryBuf„r
.
	`≠≥nd
(
ªc‹d
);

480 
isLa°

pGíî©eAndLﬂd
->
	`isLa°Indu°ry
();

482 
ödu°ryBuf„r
.
	`£tM‹eToRód
(
Ál£
);

483 
	}
}

486 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_°©us_ty≥
(
ªp_row_t
& 
¨ïrow
,

487 
PSTATUS_TYPE_ROW
 
ªc‹d
)

489 
tu∂e_gu¨d
<
°©us_ty≥_m™_im∂
> 
	`¥
(
_p°©us_ty≥_m™
);

490 
¥
->
_ªp
 = &
¨ïrow
;

492 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
ST_ID
);

493 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
ST_NAME
);

494 
	`W_DO
(
_p°©us_ty≥_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

496  
RCOK
;

497 
	}
}

499 
	gSh‹eTPCEEnv
::
	$_ªad_°©us_ty≥
()

501 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°SètusTy≥
();

502 !
isLa°
){

503 
PSTATUS_TYPE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëSètusTy≥Row
();

504 
°©usTy≥Buf„r
.
	`≠≥nd
(
ªc‹d
);

505 
isLa°

pGíî©eAndLﬂd
->
	`isLa°SètusTy≥
();

507 
°©usTy≥Buf„r
.
	`£tM‹eToRód
(
Ál£
);

508 
	}
}

511 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_èxøã
(
ªp_row_t
& 
¨ïrow
, 
PTAXRATE_ROW
 
ªc‹d
)

513 
tu∂e_gu¨d
<
èxøã_m™_im∂
> 
	`¥
(
_±axøã_m™
);

514 
¥
->
_ªp
 = &
¨ïrow
;

516 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
TX_ID
);

517 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
TX_NAME
);

518 
¥
->
	`£t_vÆue
(2, (
ªc‹d
->
TX_RATE
));

519 
	`W_DO
(
_±axøã_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

521  
RCOK
;

522 
	}
}

524 
	gSh‹eTPCEEnv
::
	$_ªad_èxøã
()

526 
boﬁ
 
hasNext
;

528 
PTAXRATE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëTaxøãRow
();

529 
èxøãBuf„r
.
	`≠≥nd
(
ªc‹d
);

530 
hasNext

pGíî©eAndLﬂd
->
	`hasNextTaxøã
();

531 } 
hasNext
);

532 
èxøãBuf„r
.
	`£tM‹eToRód
(
Ál£
);

533 
	}
}

536 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_åade_ty≥
(
ªp_row_t
& 
¨ïrow
,

537 
PTRADE_TYPE_ROW
 
ªc‹d
)

539 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥
(
_±øde_ty≥_m™
);

540 
¥
->
_ªp
 = &
¨ïrow
;

542 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
TT_ID
);

543 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
TT_NAME
);

544 
¥
->
	`£t_vÆue
(2, (
boﬁ
)
ªc‹d
->
TT_IS_SELL
);

545 
¥
->
	`£t_vÆue
(3, (
boﬁ
)
ªc‹d
->
TT_IS_MRKT
);

546 
	`W_DO
(
_±øde_ty≥_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

548  
RCOK
;

549 
	}
}

551 
	gSh‹eTPCEEnv
::
	$_ªad_åade_ty≥
()

553 
boﬁ
 
isLa°
 = 
pGíî©eAndLﬂd
->
	`isLa°TødeTy≥
();

554 !
isLa°
) {

555 
PTRADE_TYPE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëTødeTy≥Row
();

556 
åadeTy≥Buf„r
.
	`≠≥nd
(
ªc‹d
);

557 
isLa°

pGíî©eAndLﬂd
->
	`isLa°TødeTy≥
();

559 
åadeTy≥Buf„r
.
	`£tM‹eToRód
(
Ál£
);

560 
	}
}

563 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_zù_code
(
ªp_row_t
& 
¨ïrow
, 
PZIP_CODE_ROW
 
ªc‹d
)

565 
tu∂e_gu¨d
<
zù_code_m™_im∂
> 
	`¥
(
_pzù_code_m™
);

566 
¥
->
_ªp
 = &
¨ïrow
;

568 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
ZC_CODE
);

569 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
ZC_TOWN
);

570 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
ZC_DIV
);

571 
	`W_DO
(
_pzù_code_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

573  
RCOK
;

574 
	}
}

576 
	gSh‹eTPCEEnv
::
	$_ªad_zù_code
()

578 
boﬁ
 
hasNext
 = 
pGíî©eAndLﬂd
->
	`hasNextZùCode
();

579 
hasNext
) {

580 
PZIP_CODE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëZùCodeRow
();

581 
zùCodeBuf„r
.
	`≠≥nd
(
ªc‹d
);

582 
hasNext

pGíî©eAndLﬂd
->
	`hasNextZùCode
();

584 
zùCodeBuf„r
.
	`£tM‹eToRód
(
Ál£
);

585 
	}
}

588 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_cu°omî
(
ªp_row_t
& 
¨ïrow
, 
PCUSTOMER_ROW
 
ªc‹d
)

590 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥
(
_pcu°omî_m™
);

591 
¥
->
_ªp
 = &
¨ïrow
;

593 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
C_ID
);

594 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
C_TAX_ID
);

595 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
C_ST_ID
);

596 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
C_L_NAME
);

597 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
C_F_NAME
);

598 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
C_M_NAME
);

599 
xxz
[2];

600 
xxz
[0]=
ªc‹d
->
C_GNDR
;

601 
xxz
[1]='\0';

602 
¥
->
	`£t_vÆue
(6, 
xxz
);

603 
¥
->
	`£t_vÆue
(7, ()
ªc‹d
->
C_TIER
);

604 
¥
->
	`£t_vÆue
(8, (Ë
	`EgíTimeToTimeT
(
ªc‹d
->
C_DOB
));

605 
¥
->
	`£t_vÆue
(9, 
ªc‹d
->
C_AD_ID
);

606 
¥
->
	`£t_vÆue
(10, 
ªc‹d
->
C_CTRY_1
);

607 
¥
->
	`£t_vÆue
(11, 
ªc‹d
->
C_AREA_1
);

608 
¥
->
	`£t_vÆue
(12, 
ªc‹d
->
C_LOCAL_1
);

609 
¥
->
	`£t_vÆue
(13, 
ªc‹d
->
C_EXT_1
);

610 
¥
->
	`£t_vÆue
(14, 
ªc‹d
->
C_CTRY_2
);

611 
¥
->
	`£t_vÆue
(15, 
ªc‹d
->
C_AREA_2
);

612 
¥
->
	`£t_vÆue
(16, 
ªc‹d
->
C_LOCAL_2
);

613 
¥
->
	`£t_vÆue
(17, 
ªc‹d
->
C_EXT_2
);

614 
¥
->
	`£t_vÆue
(18, 
ªc‹d
->
C_CTRY_3
);

615 
¥
->
	`£t_vÆue
(19, 
ªc‹d
->
C_AREA_3
);

616 
¥
->
	`£t_vÆue
(20, 
ªc‹d
->
C_LOCAL_3
);

617 
¥
->
	`£t_vÆue
(21, 
ªc‹d
->
C_EXT_3
);

618 
¥
->
	`£t_vÆue
(22, 
ªc‹d
->
C_EMAIL_1
);

619 
¥
->
	`£t_vÆue
(23, 
ªc‹d
->
C_EMAIL_2
);

620 
	`W_DO
(
_pcu°omî_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

622  
RCOK
;

623 
	}
}

625 
	gSh‹eTPCEEnv
::
	$_ªad_cu°omî
()

627 
boﬁ
 
hasNext
;

629 
hasNext

pGíî©eAndLﬂd
->
	`hasNextCu°omî
();

630 
PCUSTOMER_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëCu°omîRow
();

631 
cu°omîBuf„r
.
	`≠≥nd
(
ªc‹d
);

632 } (
hasNext
 && 
cu°omîBuf„r
.
	`hasS∑˚
()));

633 
cu°omîBuf„r
.
	`£tM‹eToRód
(
hasNext
);

634 
	}
}

637 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_cu°omî_èxøã
(
ªp_row_t
& 
¨ïrow
,

638 
PCUSTOMER_TAXRATE_ROW
 
ªc‹d
)

640 
tu∂e_gu¨d
<
cu°omî_èxøã_m™_im∂
> 
	`¥
(
_pcu°omî_èxøã_m™
);

641 
¥
->
_ªp
 = &
¨ïrow
;

643 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
CX_TX_ID
);

644 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
CX_C_ID
);

645 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

647  
RCOK
;

648 
	}
}

650 
	gSh‹eTPCEEnv
::
	$_ªad_cu°omî_èxøã
()

652 
boﬁ
 
hasNext
;

653 
èxøãs
=
pGíî©eAndLﬂd
->
	`gëTaxøãsCou¡
();

655 
hasNext

pGíî©eAndLﬂd
->
	`hasNextCu°omîTaxøã
();

656 
i
=0; i<
èxøãs
; i++) {

657 
PCUSTOMER_TAXRATE_ROW
 
ªc‹d
 =

658 
pGíî©eAndLﬂd
->
	`gëCu°omîTaxøãRow
(
i
);

659 
cu°omîTaxøãBuf„r
.
	`≠≥nd
(
ªc‹d
);

661 } (
hasNext
 && 
cu°omîTaxøãBuf„r
.
	`hasS∑˚
()));

662 
cu°omîTaxøãBuf„r
.
	`£tM‹eToRód
(
hasNext
);

663 
	}
}

666 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_cu°omî_accou¡
(
ªp_row_t
& 
¨ïrow
,

667 
PCUSTOMER_ACCOUNT_ROW
 
ªc‹d
)

669 
tu∂e_gu¨d
<
cu°omî_accou¡_m™_im∂
> 
	`¥
(
_pcu°omî_accou¡_m™
);

670 
¥
->
_ªp
 = &
¨ïrow
;

672 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
CA_ID
);

673 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
CA_B_ID
);

674 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CA_C_ID
);

675 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
CA_NAME
);

676 
¥
->
	`£t_vÆue
(4, ()(
ªc‹d
->
CA_TAX_ST
));

677 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
CA_BAL
);

678 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

680  
RCOK
;

681 
	}
}

684 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_accou¡_≥rmissi⁄
(
ªp_row_t
& 
¨ïrow
,

685 
PACCOUNT_PERMISSION_ROW
 
ªc‹d
)

687 
tu∂e_gu¨d
<
accou¡_≥rmissi⁄_m™_im∂
> 
	`¥
(
_∑ccou¡_≥rmissi⁄_m™
);

688 
¥
->
_ªp
 = &
¨ïrow
;

690 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
AP_CA_ID
);

691 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
AP_ACL
);

692 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
AP_TAX_ID
);

693 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
AP_L_NAME
);

694 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
AP_F_NAME
);

695 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

697  
RCOK
;

698 
	}
}

700 
	gSh‹eTPCEEnv
::
	$_ªad_ˇ_™d_≠
()

702 
boﬁ
 
hasNext
;

704 
hasNext

pGíî©eAndLﬂd
->
	`hasNextCu°omîAccou¡
();

705 
PCUSTOMER_ACCOUNT_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëCu°omîAccou¡Row
();

706 
cu°omîAccou¡Buf„r
.
	`≠≥nd
(
ªc‹d
);

707 
≥rms
 = 
pGíî©eAndLﬂd
->
	`Pîmissi⁄sPîCu°omî
();

708 
i
=0; i<
≥rms
; i++) {

709 
PACCOUNT_PERMISSION_ROW
 
row
 =

710 
pGíî©eAndLﬂd
->
	`gëAccou¡Pîmissi⁄Row
(
i
);

711 
accou¡Pîmissi⁄Buf„r
.
	`≠≥nd
(
row
);

713 } (
hasNext
 && 
cu°omîAccou¡Buf„r
.
	`hasS∑˚
()));

714 
cu°omîAccou¡Buf„r
.
	`£tM‹eToRód
(
hasNext
);

715 
	}
}

718 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_addªss
(
ªp_row_t
& 
¨ïrow
, 
PADDRESS_ROW
 
ªc‹d
)

720 
tu∂e_gu¨d
<
addªss_m™_im∂
> 
	`¥
(
_∑ddªss_m™
);

721 
¥
->
_ªp
 = &
¨ïrow
;

723 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
AD_ID
);

724 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
AD_LINE1
);

725 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
AD_LINE2
);

726 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
AD_ZC_CODE
);

727 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
AD_CTRY
);

728 
	`W_DO
(
_∑ddªss_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

730  
RCOK
;

731 
	}
}

733 
	gSh‹eTPCEEnv
::
	$_ªad_addªss
()

735 
boﬁ
 
hasNext
;

737 
hasNext

pGíî©eAndLﬂd
->
	`hasNextAddªss
();

738 
PADDRESS_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëAddªssRow
();

739 
addªssBuf„r
.
	`≠≥nd
(
ªc‹d
);

740 } (
hasNext
 && 
addªssBuf„r
.
	`hasS∑˚
()));

741 
addªssBuf„r
.
	`£tM‹eToRód
(
hasNext
);

742 
	}
}

745 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_w©ch_li°
(
ªp_row_t
& 
¨ïrow
,

746 
PWATCH_LIST_ROW
 
ªc‹d
)

748 
tu∂e_gu¨d
<
w©ch_li°_m™_im∂
> 
	`¥
(
_pw©ch_li°_m™
);

749 
¥
->
_ªp
 = &
¨ïrow
;

751 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
WL_ID
);

752 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
WL_C_ID
);

753 
	`W_DO
(
_pw©ch_li°_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

755  
RCOK
;

756 
	}
}

759 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_w©ch_ôem
(
ªp_row_t
& 
¨ïrow
,

760 
PWATCH_ITEM_ROW
 
ªc‹d
)

762 
tu∂e_gu¨d
<
w©ch_ôem_m™_im∂
> 
	`¥
(
_pw©ch_ôem_m™
);

763 
¥
->
_ªp
 = &
¨ïrow
;

765 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
WI_WL_ID
);

766 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
WI_S_SYMB
);

767 
	`W_DO
(
_pw©ch_ôem_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

769  
RCOK
;

770 
	}
}

772 
	gSh‹eTPCEEnv
::
	$_ªad_wl_™d_wi
()

774 
boﬁ
 
hasNext
;

776 
hasNext

pGíî©eAndLﬂd
->
	`hasNextW©chLi°
();

777 
PWATCH_LIST_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëW©chLi°Row
();

778 
w©chLi°Buf„r
.
	`≠≥nd
(
ªc‹d
);

779 
ôems
 = 
pGíî©eAndLﬂd
->
	`IãmsPîW©chLi°
();

780 
i
=0; i<
ôems
; ++i) {

781 
PWATCH_ITEM_ROW
 
row
 = 
pGíî©eAndLﬂd
->
	`gëW©chIãmRow
(
i
);

782 
w©chIãmBuf„r
.
	`≠≥nd
(
row
);

784 } 
hasNext
 && 
w©chLi°Buf„r
.
	`hasS∑˚
());

785 
w©chLi°Buf„r
.
	`£tM‹eToRód
(
hasNext
);

786 
	}
}

789 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_com∑ny
(
ªp_row_t
& 
¨ïrow
, 
PCOMPANY_ROW
 
ªc‹d
)

791 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥
(
_pcom∑ny_m™
);

792 
¥
->
_ªp
 = &
¨ïrow
;

794 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
CO_ID
);

795 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
CO_ST_ID
);

796 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CO_NAME
);

797 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
CO_IN_ID
);

798 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
CO_SP_RATE
);

799 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
CO_CEO
);

800 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
CO_AD_ID
);

801 
¥
->
	`£t_vÆue
(7, 
ªc‹d
->
CO_DESC
);

802 
¥
->
	`£t_vÆue
(8, 
	`EgíTimeToTimeT
(
ªc‹d
->
CO_OPEN_DATE
));

803 
	`W_DO
(
_pcom∑ny_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

805  
RCOK
;

806 
	}
}

808 
	gSh‹eTPCEEnv
::
	$_ªad_com∑ny
()

810 
boﬁ
 
hasNext
;

812 
hasNext

pGíî©eAndLﬂd
->
	`hasNextCom∑ny
();

813 
PCOMPANY_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëCom∑nyRow
();

814 
com∑nyBuf„r
.
	`≠≥nd
(
ªc‹d
);

815 } (
hasNext
 && 
com∑nyBuf„r
.
	`hasS∑˚
()));

816 
com∑nyBuf„r
.
	`£tM‹eToRód
(
hasNext
);

817 
	}
}

820 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_com∑ny_com≥tô‹
(
ªp_row_t
& 
¨ïrow
,

821 
PCOMPANY_COMPETITOR_ROW
 
ªc‹d
)

823 
tu∂e_gu¨d
<
com∑ny_com≥tô‹_m™_im∂
> 
	`¥
(
_pcom∑ny_com≥tô‹_m™
);

824 
¥
->
_ªp
 = &
¨ïrow
;

826 
¥
->
	`£t_vÆue
(0, (
ªc‹d
->
CP_CO_ID
));

827 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
CP_COMP_CO_ID
);

828 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CP_IN_ID
);

829 
	`W_DO
(
_pcom∑ny_com≥tô‹_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

831  
RCOK
;

832 
	}
}

834 
	gSh‹eTPCEEnv
::
	$_ªad_com∑ny_com≥tô‹
()

836 
boﬁ
 
hasNext
;

838 
hasNext

pGíî©eAndLﬂd
->
	`hasNextCom∑nyCom≥tô‹
();

839 
PCOMPANY_COMPETITOR_ROW
 
ªc‹d
 =

840 
pGíî©eAndLﬂd
->
	`gëCom∑nyCom≥tô‹Row
();

841 
com∑nyCom≥tô‹Buf„r
.
	`≠≥nd
(
ªc‹d
);

842 } (
hasNext
 && 
com∑nyCom≥tô‹Buf„r
.
	`hasS∑˚
()));

843 
com∑nyCom≥tô‹Buf„r
.
	`£tM‹eToRód
(
hasNext
);

844 
	}
}

847 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_daûy_m¨kë
(
ªp_row_t
& 
¨ïrow
,

848 
PDAILY_MARKET_ROW
 
ªc‹d
)

850 
tu∂e_gu¨d
<
daûy_m¨kë_m™_im∂
> 
	`¥
(
_pdaûy_m¨kë_m™
);

851 
¥
->
_ªp
 = &
¨ïrow
;

853 
¥
->
	`£t_vÆue
(0, 
	`EgíTimeToTimeT
(
ªc‹d
->
DM_DATE
));

854 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
DM_S_SYMB
);

855 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
DM_CLOSE
);

856 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
DM_HIGH
);

857 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
DM_LOW
);

858 
¥
->
	`£t_vÆue
(5, ()
ªc‹d
->
DM_VOL
);

859 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

861  
RCOK
;

862 
	}
}

864 
	gSh‹eTPCEEnv
::
	$_ªad_daûy_m¨kë
()

866 
boﬁ
 
hasNext
;

868 
hasNext

pGíî©eAndLﬂd
->
	`hasNextDaûyM¨kë
();

869 
PDAILY_MARKET_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëDaûyM¨këRow
();

870 
daûyM¨këBuf„r
.
	`≠≥nd
(
ªc‹d
);

871 } (
hasNext
 && 
daûyM¨këBuf„r
.
	`hasS∑˚
()));

872 
daûyM¨këBuf„r
.
	`£tM‹eToRód
(
hasNext
);

873 
	}
}

876 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_fö™cül
(
ªp_row_t
& 
¨ïrow
, 
PFINANCIAL_ROW
 
ªc‹d
)

878 
tu∂e_gu¨d
<
fö™cül_m™_im∂
> 
	`¥
(
_pfö™cül_m™
);

879 
¥
->
_ªp
 = &
¨ïrow
;

881 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
FI_CO_ID
);

882 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
FI_YEAR
);

883 
¥
->
	`£t_vÆue
(2, ()
ªc‹d
->
FI_QTR
);

884 
¥
->
	`£t_vÆue
(3, 
	`EgíTimeToTimeT
(
ªc‹d
->
FI_QTR_START_DATE
));

885 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
FI_REVENUE
);

886 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
FI_NET_EARN
);

887 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
FI_BASIC_EPS
);

888 
¥
->
	`£t_vÆue
(7, 
ªc‹d
->
FI_DILUT_EPS
);

889 
¥
->
	`£t_vÆue
(8, 
ªc‹d
->
FI_MARGIN
);

890 
¥
->
	`£t_vÆue
(9, 
ªc‹d
->
FI_INVENTORY
);

891 
¥
->
	`£t_vÆue
(10, 
ªc‹d
->
FI_ASSETS
);

892 
¥
->
	`£t_vÆue
(11, 
ªc‹d
->
FI_LIABILITY
);

893 
¥
->
	`£t_vÆue
(12, 
ªc‹d
->
FI_OUT_BASIC
);

894 
¥
->
	`£t_vÆue
(13, 
ªc‹d
->
FI_OUT_DILUT
);

895 
	`W_DO
(
_pfö™cül_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

897  
RCOK
;

898 
	}
}

900 
	gSh‹eTPCEEnv
::
	$_ªad_fö™cül
()

902 
boﬁ
 
hasNext
;

904 
hasNext

pGíî©eAndLﬂd
->
	`hasNextFö™cül
();

905 
PFINANCIAL_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëFö™cülRow
();

906 
fö™cülBuf„r
.
	`≠≥nd
(
ªc‹d
);

907 } (
hasNext
 && 
fö™cülBuf„r
.
	`hasS∑˚
()));

908 
fö™cülBuf„r
.
	`£tM‹eToRód
(
hasNext
);

909 
	}
}

912 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_œ°_åade
(
ªp_row_t
& 
¨ïrow
,

913 
PLAST_TRADE_ROW
 
ªc‹d
)

915 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥
(
_∂a°_åade_m™
);

916 
¥
->
_ªp
 = &
¨ïrow
;

918 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
LT_S_SYMB
);

919 
¥
->
	`£t_vÆue
(1, 
	`EgíTimeToTimeT
(
ªc‹d
->
LT_DTS
));

920 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
LT_PRICE
);

921 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
LT_OPEN_PRICE
);

922 
¥
->
	`£t_vÆue
(4, (Ë
ªc‹d
->
LT_VOL
);

923 
	`W_DO
(
_∂a°_åade_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

925  
RCOK
;

926 
	}
}

928 
	gSh‹eTPCEEnv
::
	$_ªad_œ°_åade
()

930 
boﬁ
 
hasNext
;

932 
hasNext

pGíî©eAndLﬂd
->
	`hasNextLa°Tøde
();

933 
PLAST_TRADE_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëLa°TødeRow
();

934 
œ°TødeBuf„r
.
	`≠≥nd
(
ªc‹d
);

935 } (
hasNext
 && 
œ°TødeBuf„r
.
	`hasS∑˚
()));

936 
œ°TødeBuf„r
.
	`£tM‹eToRód
(
hasNext
);

937 
	}
}

940 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_√ws_ôem
(
ªp_row_t
& 
¨ïrow
, 
PNEWS_ITEM_ROW
 
ªc‹d
)

942 
tu∂e_gu¨d
<
√ws_ôem_m™_im∂
> 
	`¥
(
_≤ews_ôem_m™
);

943 
¥
->
_ªp
 = &
¨ïrow
;

945 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
NI_ID
);

946 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
NI_HEADLINE
);

947 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
NI_SUMMARY
);

948 
ni
[
max_√ws_ôem_size
+1];Çi[max_news_item_size] = '\0';

949 
	`mem˝y
(
ni
,
ªc‹d
->
NI_ITEM
,
max_√ws_ôem_size
);

950 
¥
->
	`£t_vÆue
(3, 
ni
);

951 
¥
->
	`£t_vÆue
(4, 
	`EgíTimeToTimeT
(
ªc‹d
->
NI_DTS
));

952 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
NI_SOURCE
);

953 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
NI_AUTHOR
);

954 
	`W_DO
(
_≤ews_ôem_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

956  
RCOK
;

957 
	}
}

960 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_√ws_xªf
(
ªp_row_t
& 
¨ïrow
, 
PNEWS_XREF_ROW
 
ªc‹d
)

962 
tu∂e_gu¨d
<
√ws_xªf_m™_im∂
> 
	`¥
(
_≤ews_xªf_m™
);

963 
¥
->
_ªp
 = &
¨ïrow
;

965 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
NX_NI_ID
);

966 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
NX_CO_ID
);

967 
	`W_DO
(
_≤ews_xªf_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

969  
RCOK
;

970 
	}
}

972 
	gSh‹eTPCEEnv
::
	$_ªad_ni_™d_nx
()

974 
boﬁ
 
hasNext
;

976 
hasNext

pGíî©eAndLﬂd
->
	`hasNextNewsIãmAndNewsXRef
();

977 
PNEWS_ITEM_ROW
 
ªc‹d1
 = 
pGíî©eAndLﬂd
->
	`gëNewsIãmRow
();

978 
PNEWS_XREF_ROW
 
ªc‹d2
 = 
pGíî©eAndLﬂd
->
	`gëNewsXRefRow
();

979 
√wsIãmBuf„r
.
	`≠≥nd
(
ªc‹d1
);

980 
√wsXRefBuf„r
.
	`≠≥nd
(
ªc‹d2
);

981 } (
hasNext
 && 
√wsIãmBuf„r
.
	`hasS∑˚
()));

982 
√wsIãmBuf„r
.
	`£tM‹eToRód
(
hasNext
);

983 
√wsXRefBuf„r
.
	`£tM‹eToRód
(
hasNext
);

984 
	}
}

987 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_£curôy
(
ªp_row_t
& 
¨ïrow
, 
PSECURITY_ROW
 
ªc‹d
)

989 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥
(
_p£curôy_m™
);

990 
¥
->
_ªp
 = &
¨ïrow
;

992 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
S_SYMB
);

993 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
S_ISSUE
);

994 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
S_ST_ID
);

995 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
S_NAME
);

996 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
S_EX_ID
);

997 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
S_CO_ID
);

998 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
S_NUM_OUT
);

999 
¥
->
	`£t_vÆue
(7, 
	`EgíTimeToTimeT
(
ªc‹d
->
S_START_DATE
));

1000 
¥
->
	`£t_vÆue
(8, 
	`EgíTimeToTimeT
(
ªc‹d
->
S_EXCH_DATE
));

1001 
¥
->
	`£t_vÆue
(9, 
ªc‹d
->
S_PE
);

1002 
¥
->
	`£t_vÆue
(10, (
ªc‹d
->
S_52WK_HIGH
));

1003 
¥
->
	`£t_vÆue
(11, 
	`EgíTimeToTimeT
(
ªc‹d
->
S_52WK_HIGH_DATE
));

1004 
¥
->
	`£t_vÆue
(12, (
ªc‹d
->
S_52WK_LOW
));

1005 
¥
->
	`£t_vÆue
(13, 
	`EgíTimeToTimeT
(
ªc‹d
->
S_52WK_LOW_DATE
));

1006 
¥
->
	`£t_vÆue
(14, (
ªc‹d
->
S_DIVIDEND
));

1007 
¥
->
	`£t_vÆue
(15, (
ªc‹d
->
S_YIELD
));

1008 #ifde‡
COMPILE_FLAT_FILE_LOAD


1009 
	`Ârötf
(
fs£c
, "%s|%s|%s|%s\n",

1010 
ªc‹d
->
S_SYMB
,Ñec‹d->
S_ISSUE
,Ñec‹d->
S_ST_ID
,Ñec‹d->
S_NAME
);

1012 
	`W_DO
(
_p£curôy_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1014  
RCOK
;

1015 
	}
}

1017 
	gSh‹eTPCEEnv
::
	$_ªad_£curôy
()

1019 
boﬁ
 
hasNext
;

1021 
hasNext

pGíî©eAndLﬂd
->
	`hasNextSecurôy
();

1022 
PSECURITY_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëSecurôyRow
();

1023 
£curôyBuf„r
.
	`≠≥nd
(
ªc‹d
);

1024 } (
hasNext
 && 
£curôyBuf„r
.
	`hasS∑˚
()));

1025 
£curôyBuf„r
.
	`£tM‹eToRód
(
hasNext
);

1026 
	}
}

1029 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_åade
(
ªp_row_t
& 
¨ïrow
, 
PTRADE_ROW
 
ªc‹d
)

1031 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥
(
_±øde_m™
);

1032 
¥
->
_ªp
 = &
¨ïrow
;

1034 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
T_ID
);

1035 
¥
->
	`£t_vÆue
(1, 
	`EgíTimeToTimeT
(
ªc‹d
->
T_DTS
));

1036 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
T_ST_ID
);

1037 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
T_TT_ID
);

1038 
¥
->
	`£t_vÆue
(4, (
boﬁ
)
ªc‹d
->
T_IS_CASH
);

1039 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
T_S_SYMB
);

1040 
¥
->
	`£t_vÆue
(6, 
ªc‹d
->
T_QTY
);

1041 
¥
->
	`£t_vÆue
(7, (
ªc‹d
->
T_BID_PRICE
));

1042 
¥
->
	`£t_vÆue
(8, 
ªc‹d
->
T_CA_ID
);

1043 
¥
->
	`£t_vÆue
(9, 
ªc‹d
->
T_EXEC_NAME
);

1044 
¥
->
	`£t_vÆue
(10, (
ªc‹d
->
T_TRADE_PRICE
));

1045 
¥
->
	`£t_vÆue
(11, (
ªc‹d
->
T_CHRG
));

1046 
¥
->
	`£t_vÆue
(12, (
ªc‹d
->
T_COMM
));

1047 
¥
->
	`£t_vÆue
(13, (
ªc‹d
->
T_TAX
));

1048 
¥
->
	`£t_vÆue
(14, (
boﬁ
)
ªc‹d
->
T_LIFO
);

1049 
	`W_DO
(
_±øde_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1051  
RCOK
;

1052 
	}
}

1055 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_åade_hi°‹y
(
ªp_row_t
& 
¨ïrow
,

1056 
PTRADE_HISTORY_ROW
 
ªc‹d
)

1058 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥
(
_±øde_hi°‹y_m™
);

1059 
¥
->
_ªp
 = &
¨ïrow
;

1061 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
TH_T_ID
);

1062 
¥
->
	`£t_vÆue
(1, 
	`EgíTimeToTimeT
(
ªc‹d
->
TH_DTS
));

1063 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
TH_ST_ID
);

1064 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1066  
RCOK
;

1067 
	}
}

1070 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_£âÀmít
(
ªp_row_t
& 
¨ïrow
,

1071 
PSETTLEMENT_ROW
 
ªc‹d
)

1073 
tu∂e_gu¨d
<
£âÀmít_m™_im∂
> 
	`¥
(
_p£âÀmít_m™
);

1074 
¥
->
_ªp
 = &
¨ïrow
;

1076 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
SE_T_ID
);

1077 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
SE_CASH_TYPE
);

1078 
¥
->
	`£t_vÆue
(2, 
	`EgíTimeToTimeT
(
ªc‹d
->
SE_CASH_DUE_DATE
));

1079 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
SE_AMT
);

1080 
	`W_DO
(
_p£âÀmít_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1082  
RCOK
;

1083 
	}
}

1086 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_ˇsh_å™ß˘i⁄
(
ªp_row_t
& 
¨ïrow
,

1087 
PCASH_TRANSACTION_ROW
 
ªc‹d
)

1089 
tu∂e_gu¨d
<
ˇsh_å™ß˘i⁄_m™_im∂
> 
	`¥
(
_pˇsh_å™ß˘i⁄_m™
);

1090 
¥
->
_ªp
 = &
¨ïrow
;

1092 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
CT_T_ID
);

1093 
¥
->
	`£t_vÆue
(1, 
	`EgíTimeToTimeT
(
ªc‹d
->
CT_DTS
));

1094 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
CT_AMT
);

1095 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
CT_NAME
);

1096 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1098  
RCOK
;

1099 
	}
}

1102 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_hﬁdög_hi°‹y
(
ªp_row_t
& 
¨ïrow
,

1103 
PHOLDING_HISTORY_ROW
 
ªc‹d
)

1105 
tu∂e_gu¨d
<
hﬁdög_hi°‹y_m™_im∂
> 
	`¥
(
_phﬁdög_hi°‹y_m™
);

1106 
¥
->
_ªp
 = &
¨ïrow
;

1108 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
HH_H_T_ID
);

1109 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
HH_T_ID
);

1110 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
HH_BEFORE_QTY
);

1111 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
HH_AFTER_QTY
);

1112 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1114  
RCOK
;

1115 
	}
}

1117 
	gSh‹eTPCEEnv
::
	$_ªad_åade_unô
()

1119 
boﬁ
 
hasNext
;

1121 
hasNext

pGíî©eAndLﬂd
->
	`hasNextTøde
();

1122 
PTRADE_ROW
 
row
 = 
pGíî©eAndLﬂd
->
	`gëTødeRow
();

1123 
åadeBuf„r
.
	`≠≥nd
(
row
);

1124 
hi°
 = 
pGíî©eAndLﬂd
->
	`gëTødeHi°‹yRowCou¡
();

1125 
i
=0; i<
hi°
; i++) {

1126 
PTRADE_HISTORY_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëTødeHi°‹yRow
(
i
);

1127 
åadeHi°‹yBuf„r
.
	`≠≥nd
(
ªc‹d
);

1129 if(
pGíî©eAndLﬂd
->
	`shouldPro˚ssSëéemítRow
()) {

1130 
PSETTLEMENT_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëSëéemítRow
();

1131 
£âÀmítBuf„r
.
	`≠≥nd
(
ªc‹d
);

1133 if(
pGíî©eAndLﬂd
->
	`shouldPro˚ssCashTønß˘i⁄Row
()) {

1134 
PCASH_TRANSACTION_ROW
 
ªc‹d
=
pGíî©eAndLﬂd
->
	`gëCashTønß˘i⁄Row
();

1135 
ˇshTønß˘i⁄Buf„r
.
	`≠≥nd
(
ªc‹d
);

1137 
hi°
 = 
pGíî©eAndLﬂd
->
	`gëHﬁdögHi°‹yRowCou¡
();

1138 
i
=0; i<
hi°
; i++) {

1139 
PHOLDING_HISTORY_ROW
 
ªc‹d
=
pGíî©eAndLﬂd
->
	`gëHﬁdögHi°‹yRow
(
i
);

1140 
hﬁdögHi°‹yBuf„r
.
	`≠≥nd
(
ªc‹d
);

1142 } (
hasNext
 && 
åadeBuf„r
.
	`hasS∑˚
()));

1143 
åadeBuf„r
.
	`£tM‹eToRód
(
hasNext
);

1144 
	}
}

1147 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_brokî
(
ªp_row_t
& 
¨ïrow
, 
PBROKER_ROW
 
ªc‹d
)

1149 
tu∂e_gu¨d
<
brokî_m™_im∂
> 
	`¥
(
_pbrokî_m™
);

1150 
¥
->
_ªp
 = &
¨ïrow
;

1152 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
B_ID
);

1153 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
B_ST_ID
);

1154 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
B_NAME
);

1155 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
B_NUM_TRADES
);

1156 
¥
->
	`£t_vÆue
(4, (
ªc‹d
->
B_COMM_TOTAL
));

1157 
	`W_DO
(
_pbrokî_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1159  
RCOK
;

1160 
	}
}

1162 
	gSh‹eTPCEEnv
::
	$_ªad_brokî
()

1164 
boﬁ
 
hasNext
;

1166 
hasNext

pGíî©eAndLﬂd
->
	`hasNextBrokî
();

1167 
PBROKER_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëBrokîRow
();

1168 
brokîBuf„r
.
	`≠≥nd
(
ªc‹d
);

1169 } (
hasNext
 && 
brokîBuf„r
.
	`hasS∑˚
()));

1170 
brokîBuf„r
.
	`£tM‹eToRód
(
hasNext
);

1171 
	}
}

1174 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_hﬁdög
(
ªp_row_t
& 
¨ïrow
, 
PHOLDING_ROW
 
ªc‹d
)

1176 
tu∂e_gu¨d
<
hﬁdög_m™_im∂
> 
	`¥
(
_phﬁdög_m™
);

1177 
¥
->
_ªp
 = &
¨ïrow
;

1179 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
H_T_ID
);

1180 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
H_CA_ID
);

1181 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
H_S_SYMB
);

1182 
¥
->
	`£t_vÆue
(3, 
	`EgíTimeToTimeT
(
ªc‹d
->
H_DTS
));

1183 
¥
->
	`£t_vÆue
(4, 
ªc‹d
->
H_PRICE
);

1184 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
H_QTY
);

1185 
	`W_DO
(
_phﬁdög_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1187  
RCOK
;

1188 
	}
}

1190 
	gSh‹eTPCEEnv
::
	$_ªad_hﬁdög
()

1192 
boﬁ
 
hasNext
;

1194 
hasNext

pGíî©eAndLﬂd
->
	`hasNextHﬁdög
();

1195 
PHOLDING_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëHﬁdögRow
();

1196 
hﬁdögBuf„r
.
	`≠≥nd
(
ªc‹d
);

1197 } (
hasNext
 && 
hﬁdögBuf„r
.
	`hasS∑˚
()));

1198 
hﬁdögBuf„r
.
	`£tM‹eToRód
(
hasNext
);

1199 
	}
}

1202 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_hﬁdög_summ¨y
(
ªp_row_t
& 
¨ïrow
,

1203 
PHOLDING_SUMMARY_ROW
 
ªc‹d
)

1205 
tu∂e_gu¨d
<
hﬁdög_summ¨y_m™_im∂
> 
	`¥
(
_phﬁdög_summ¨y_m™
);

1206 
¥
->
_ªp
 = &
¨ïrow
;

1208 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
HS_CA_ID
);

1209 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
HS_S_SYMB
);

1210 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
HS_QTY
);

1211 #ifde‡
COMPILE_FLAT_FILE_LOAD


1212 
	`Ârötf
(
fshs
, "%lld|%s|%d\n",

1213 
ªc‹d
->
HS_CA_ID
,Ñec‹d->
HS_S_SYMB
,Ñec‹d->
HS_QTY
);

1215 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1217  
RCOK
;

1218 
	}
}

1220 
	gSh‹eTPCEEnv
::
	$_ªad_hﬁdög_summ¨y
()

1222 
boﬁ
 
hasNext
;

1224 
hasNext

pGíî©eAndLﬂd
->
	`hasNextHﬁdögSumm¨y
();

1225 
PHOLDING_SUMMARY_ROW
 
ªc‹d
 = 
pGíî©eAndLﬂd
->
	`gëHﬁdögSumm¨yRow
();

1226 
hﬁdögSumm¨yBuf„r
.
	`≠≥nd
(
ªc‹d
);

1227 } (
hasNext
 && 
hﬁdögSumm¨yBuf„r
.
	`hasS∑˚
()));

1228 
hﬁdögSumm¨yBuf„r
.
	`£tM‹eToRód
(
hasNext
);

1229 
	}
}

1232 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$_lﬂd_⁄e_åade_ªque°
(
ªp_row_t
& 
¨ïrow
,

1233 
PTRADE_REQUEST_ROW
 
ªc‹d
)

1235 
tu∂e_gu¨d
<
åade_ªque°_m™_im∂
> 
	`¥
(
_±øde_ªque°_m™
);

1236 
¥
->
_ªp
 = &
¨ïrow
;

1238 
¥
->
	`£t_vÆue
(0, 
ªc‹d
->
TR_T_ID
);

1239 
¥
->
	`£t_vÆue
(1, 
ªc‹d
->
TR_TT_ID
);

1240 
¥
->
	`£t_vÆue
(2, 
ªc‹d
->
TR_S_SYMB
);

1241 
¥
->
	`£t_vÆue
(3, 
ªc‹d
->
TR_QTY
);

1242 
¥
->
	`£t_vÆue
(4, (
ªc‹d
->
TR_BID_PRICE
));

1243 
¥
->
	`£t_vÆue
(5, 
ªc‹d
->
TR_B_ID
);

1244 
	`W_DO
(
_±øde_ªque°_m™
->
	`add_tu∂e
(
_pssm
, 
¥
));

1246  
RCOK
;

1247 
	}
}

1250 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_smÆl
(c⁄° 
x˘_id
,

1251 
p›uœã_smÆl_öput_t
& 
±oö
)

1254 
	`as£π
 (
_pssm
);

1255 
	`as£π
 (
_öôülized
);

1258 
ªp_row_t
 
	`¨ïrow
(
_≥xch™ge_m™
->
	`ts
());

1259 
¨ïrow
.
	`£t
(
_≥xch™ge_desc
->
	`maxsize
());

1262 
	`TRACE
–
TRACE_ALWAYS
, "Building CHARGE !!!\n");

1263 
rows
=
ch¨geBuf„r
.
	`gëSize
();

1264 
i
=0; i<
rows
; i++){

1265 
PCHARGE_ROW
 
ªc‹d
 = 
ch¨geBuf„r
.
	`gë
(
i
);

1266 
	`W_DO
(
	`_lﬂd_⁄e_ch¨ge
(
¨ïrow
, 
ªc‹d
));

1268 
pGíî©eAndLﬂd
->
	`Rñó£Ch¨ge
();

1269 
	`TRACE
–
TRACE_ALWAYS
, "Building COMMISSION_RATE !!!\n");

1270 
rows
=
commissi⁄R©eBuf„r
.
	`gëSize
();

1271 
i
=0; i<
rows
; i++){

1272 
PCOMMISSION_RATE_ROW
 
ªc‹d
 = 
commissi⁄R©eBuf„r
.
	`gë
(
i
);

1273 
	`W_DO
(
	`_lﬂd_⁄e_commissi⁄_øã
(
¨ïrow
, 
ªc‹d
));

1275 
pGíî©eAndLﬂd
->
	`Rñó£Commissi⁄R©e
();

1276 
	`TRACE
–
TRACE_ALWAYS
, "Building EXCHANGE !!!\n");

1277 
rows
=
exch™geBuf„r
.
	`gëSize
();

1278 
i
=0; i<
rows
; i++){

1279 
PEXCHANGE_ROW
 
ªc‹d
 = 
exch™geBuf„r
.
	`gë
(
i
);

1280 
	`W_DO
(
	`_lﬂd_⁄e_exch™ge
(
¨ïrow
, 
ªc‹d
));

1282 
pGíî©eAndLﬂd
->
	`Rñó£Exch™ge
();

1283 
	`TRACE
–
TRACE_ALWAYS
, "Building INDUSTRY !!!\n");

1284 
rows
=
ödu°ryBuf„r
.
	`gëSize
();

1285 
i
=0; i<
rows
; i++){

1286 
PINDUSTRY_ROW
 
ªc‹d
 = 
ödu°ryBuf„r
.
	`gë
(
i
);

1287 
	`W_DO
(
	`_lﬂd_⁄e_ödu°ry
(
¨ïrow
, 
ªc‹d
));

1289 
pGíî©eAndLﬂd
->
	`Rñó£Indu°ry
();

1290 
	`TRACE
–
TRACE_ALWAYS
, "Building SECTOR !!!\n");

1291 
rows
=
£˘‹Buf„r
.
	`gëSize
();

1292 
i
=0; i<
rows
; i++){

1293 
PSECTOR_ROW
 
ªc‹d
 = 
£˘‹Buf„r
.
	`gë
(
i
);

1294 
	`W_DO
(
	`_lﬂd_⁄e_£˘‹
(
¨ïrow
, 
ªc‹d
));

1296 
pGíî©eAndLﬂd
->
	`Rñó£Se˘‹
();

1297 
	`TRACE
–
TRACE_ALWAYS
, "Building STATUS_TYPE !!!\n");

1298 
rows
=
°©usTy≥Buf„r
.
	`gëSize
();

1299 
i
=0; i<
rows
; i++){

1300 
PSTATUS_TYPE_ROW
 
ªc‹d
 = 
°©usTy≥Buf„r
.
	`gë
(
i
);

1301 
	`W_DO
(
	`_lﬂd_⁄e_°©us_ty≥
(
¨ïrow
, 
ªc‹d
));

1303 
pGíî©eAndLﬂd
->
	`Rñó£SètusTy≥
();

1304 
	`TRACE
–
TRACE_ALWAYS
, "Building TAXRATE !!!\n");

1305 
rows
=
èxøãBuf„r
.
	`gëSize
();

1306 
i
=0; i<
rows
; i++){

1307 
PTAXRATE_ROW
 
ªc‹d
 = 
èxøãBuf„r
.
	`gë
(
i
);

1308 
	`W_DO
(
	`_lﬂd_⁄e_èxøã
(
¨ïrow
, 
ªc‹d
));

1310 
pGíî©eAndLﬂd
->
	`Rñó£Taxøã
();

1311 
	`TRACE
–
TRACE_ALWAYS
, "Building TRADE_TYPE !!!\n");

1312 
rows
=
åadeTy≥Buf„r
.
	`gëSize
();

1313 
i
=0; i<
rows
; i++){

1314 
PTRADE_TYPE_ROW
 
ªc‹d
 = 
åadeTy≥Buf„r
.
	`gë
(
i
);

1315 
	`W_DO
(
	`_lﬂd_⁄e_åade_ty≥
(
¨ïrow
, 
ªc‹d
));

1317 
pGíî©eAndLﬂd
->
	`Rñó£TødeTy≥
();

1318 
	`TRACE
–
TRACE_ALWAYS
, "Building ZIP CODE !!!\n");

1319 
rows
=
zùCodeBuf„r
.
	`gëSize
();

1320 
i
=0; i<
rows
; i++){

1321 
PZIP_CODE_ROW
 
ªc‹d
 = 
zùCodeBuf„r
.
	`gë
(
i
);

1322 
	`W_DO
(
	`_lﬂd_⁄e_zù_code
(
¨ïrow
, 
ªc‹d
));

1324 
pGíî©eAndLﬂd
->
	`Rñó£ZùCode
();

1326  (
_pssm
->
	`commô_x˘
());

1327 
	}
}

1330 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_cu°omî
(c⁄° 
x˘_id
,

1331 
p›uœã_cu°omî_öput_t
& 
±oö
)

1333 
	`as£π
 (
_pssm
);

1334 
	`as£π
 (
_öôülized
);

1336 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

1337 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1339 
rows
=
cu°omîBuf„r
.
	`gëSize
();

1340 
i
=0; i<
rows
; i++) {

1341 
PCUSTOMER_ROW
 
ªc‹d
 = 
cu°omîBuf„r
.
	`gë
(
i
);

1342 
	`W_DO
(
	`_lﬂd_⁄e_cu°omî
(
¨ïrow
, 
ªc‹d
));

1345  (
_pssm
->
	`commô_x˘
());

1346 
	}
}

1348 
	gSh‹eTPCEEnv
::
	$p›uœã_cu°omî
()

1350 
pGíî©eAndLﬂd
->
	`InôCu°omî
();

1351 
	`TRACE
–
TRACE_ALWAYS
, "Building CUSTOMER !!!\n");

1352 
cu°omîBuf„r
.
	`hasM‹eToRód
()){

1353 
log_•a˚_√eded
 = 0;

1354 
cu°omîBuf„r
.
	`ª£t
();

1355 
	`_ªad_cu°omî
();

1356 
p›uœã_cu°omî_öput_t
 
ö
;

1357 
ªåy
:

1358 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1359 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_cu°omî
(1, 
ö
),

1360 
log_•a˚_√eded
, 
ªåy
, 
this
);

1362 
pGíî©eAndLﬂd
->
	`Rñó£Cu°omî
();

1363 
cu°omîBuf„r
.
	`ªÀa£
();

1364 
	}
}

1367 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_addªss
(c⁄° 
x˘_id
,

1368 
p›uœã_addªss_öput_t
& 
±oö
)

1370 
	`as£π
 (
_pssm
);

1371 
	`as£π
 (
_öôülized
);

1373 
ªp_row_t
 
	`¨ïrow
(
_∑ddªss_m™
->
	`ts
());

1374 
¨ïrow
.
	`£t
(
_∑ddªss_desc
->
	`maxsize
());

1376 
rows
=
addªssBuf„r
.
	`gëSize
();

1377 
i
=0; i<
rows
; i++){

1378 
PADDRESS_ROW
 
ªc‹d
 = 
addªssBuf„r
.
	`gë
(
i
);

1379 
	`W_DO
(
	`_lﬂd_⁄e_addªss
(
¨ïrow
, 
ªc‹d
));

1382  (
_pssm
->
	`commô_x˘
());

1383 
	}
}

1385 
	gSh‹eTPCEEnv
::
	$p›uœã_addªss
()

1387 
pGíî©eAndLﬂd
->
	`InôAddªss
();

1388 
	`TRACE
–
TRACE_ALWAYS
, "Building ADDRESS !!!\n");

1389 
addªssBuf„r
.
	`hasM‹eToRód
()){

1390 
log_•a˚_√eded
 = 0;

1391 
addªssBuf„r
.
	`ª£t
();

1392 
	`_ªad_addªss
();

1393 
p›uœã_addªss_öput_t
 
ö
;

1394 
ªåy
:

1395 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1396 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_addªss
(1, 
ö
),

1397 
log_•a˚_√eded
, 
ªåy
, 
this
);

1399 
pGíî©eAndLﬂd
->
	`Rñó£Addªss
();

1400 
addªssBuf„r
.
	`ªÀa£
();

1401 
	}
}

1404 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_ˇ_™d_≠
(c⁄° 
x˘_id
,

1405 
p›uœã_ˇ_™d_≠_öput_t
& 
±oö
)

1407 
	`as£π
 (
_pssm
);

1408 
	`as£π
 (
_öôülized
);

1410 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_accou¡_m™
->
	`ts
());

1411 
¨ïrow
.
	`£t
(
_pcu°omî_accou¡_desc
->
	`maxsize
());

1413 
rows
=
cu°omîAccou¡Buf„r
.
	`gëSize
();

1414 
i
=0; i<
rows
; i++){

1415 
PCUSTOMER_ACCOUNT_ROW
 
ªc‹d
 = 
cu°omîAccou¡Buf„r
.
	`gë
(
i
);

1416 
	`W_DO
(
	`_lﬂd_⁄e_cu°omî_accou¡
(
¨ïrow
, 
ªc‹d
));

1418 
rows
=
accou¡Pîmissi⁄Buf„r
.
	`gëSize
();

1419 
i
=0; i<
rows
; i++){

1420 
PACCOUNT_PERMISSION_ROW
 
ªc‹d
 = 
accou¡Pîmissi⁄Buf„r
.
	`gë
(
i
);

1421 
	`W_DO
(
	`_lﬂd_⁄e_accou¡_≥rmissi⁄
(
¨ïrow
, 
ªc‹d
));

1424  (
_pssm
->
	`commô_x˘
());

1425 
	}
}

1427 
	gSh‹eTPCEEnv
::
	$p›uœã_ˇ_™d_≠
()

1429 
pGíî©eAndLﬂd
->
	`InôCu°omîAccou¡AndAccou¡Pîmissi⁄
();

1430 
	`TRACE
–
TRACE_ALWAYS
, "Building CustomerAccountánd AccountPermission !!!\n");

1431 
cu°omîAccou¡Buf„r
.
	`hasM‹eToRód
()){

1432 
log_•a˚_√eded
 = 0;

1433 
cu°omîAccou¡Buf„r
.
	`ª£t
();

1434 
accou¡Pîmissi⁄Buf„r
.
	`ª£t
();

1435 
	`_ªad_ˇ_™d_≠
();

1436 
p›uœã_ˇ_™d_≠_öput_t
 
ö
;

1437 
ªåy
:

1438 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1439 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_ˇ_™d_≠
(1, 
ö
),

1440 
log_•a˚_√eded
, 
ªåy
, 
this
);

1442 
pGíî©eAndLﬂd
->
	`Rñó£Cu°omîAccou¡AndAccou¡Pîmissi⁄
();

1443 
cu°omîAccou¡Buf„r
.
	`ªÀa£
();

1444 
accou¡Pîmissi⁄Buf„r
.
	`ªÀa£
();

1445 
	}
}

1448 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_wl_™d_wi
(c⁄° 
x˘_id
,

1449 
p›uœã_wl_™d_wi_öput_t
& 
±oö
)

1451 
	`as£π
 (
_pssm
);

1452 
	`as£π
 (
_öôülized
);

1454 
ªp_row_t
 
	`¨ïrow
(
_pw©ch_ôem_m™
->
	`ts
());

1455 
¨ïrow
.
	`£t
(
_pw©ch_ôem_desc
->
	`maxsize
());

1457 
rows
=
w©chLi°Buf„r
.
	`gëSize
();

1458 
i
=0; i<
rows
; i++){

1459 
PWATCH_LIST_ROW
 
ªc‹d
 = 
w©chLi°Buf„r
.
	`gë
(
i
);

1460 
	`W_DO
(
	`_lﬂd_⁄e_w©ch_li°
(
¨ïrow
, 
ªc‹d
));

1462 
rows
=
w©chIãmBuf„r
.
	`gëSize
();

1463 
i
=0; i<
rows
; i++){

1464 
PWATCH_ITEM_ROW
 
ªc‹d
 = 
w©chIãmBuf„r
.
	`gë
(
i
);

1465 
	`W_DO
(
	`_lﬂd_⁄e_w©ch_ôem
(
¨ïrow
, 
ªc‹d
));

1468  (
_pssm
->
	`commô_x˘
());

1469 
	}
}

1471 
	gSh‹eTPCEEnv
::
	$p›uœã_wl_™d_wi
()

1473 
pGíî©eAndLﬂd
->
	`InôW©chLi°AndW©chIãm
();

1474 
	`TRACE
–
TRACE_ALWAYS
, "Building WATCH_LISTÅableánd WATCH_ITEM !!!\n");

1475 
w©chLi°Buf„r
.
	`hasM‹eToRód
()){

1476 
log_•a˚_√eded
 = 0;

1477 
w©chIãmBuf„r
.
	`ª£t
();

1478 
w©chLi°Buf„r
.
	`ª£t
();

1479 
	`_ªad_wl_™d_wi
();

1480 
p›uœã_wl_™d_wi_öput_t
 
ö
;

1481 
ªåy
:

1482 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1483 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_wl_™d_wi
(1, 
ö
),

1484 
log_•a˚_√eded
, 
ªåy
, 
this
);

1486 
pGíî©eAndLﬂd
->
	`Rñó£W©chLi°AndW©chIãm
();

1487 
w©chIãmBuf„r
.
	`ªÀa£
();

1488 
w©chLi°Buf„r
.
	`ªÀa£
();

1489 
	}
}

1492 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_cu°omî_èxøã
(c⁄° 
x˘_id
,

1493 
p›uœã_cu°omî_èxøã_öput_t
& 
±oö
)

1495 
	`as£π
 (
_pssm
);

1496 
	`as£π
 (
_öôülized
);

1498 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_èxøã_m™
->
	`ts
());

1499 
¨ïrow
.
	`£t
(
_pcu°omî_èxøã_desc
->
	`maxsize
());

1501 
rows
=
cu°omîTaxøãBuf„r
.
	`gëSize
();

1502 
i
=0; i<
rows
; i++){

1503 
PCUSTOMER_TAXRATE_ROW
 
ªc‹d
 = 
cu°omîTaxøãBuf„r
.
	`gë
(
i
);

1504 
	`W_DO
(
	`_lﬂd_⁄e_cu°omî_èxøã
(
¨ïrow
, 
ªc‹d
));

1507  (
_pssm
->
	`commô_x˘
());

1508 
	}
}

1510 
	gSh‹eTPCEEnv
::
	$p›uœã_cu°omî_èxøã
()

1512 
pGíî©eAndLﬂd
->
	`InôCu°omîTaxøã
();

1513 
	`TRACE
–
TRACE_ALWAYS
, "Building CUSTOMER_TAXRATE !!!\n");

1514 
cu°omîTaxøãBuf„r
.
	`hasM‹eToRód
()){

1515 
log_•a˚_√eded
 = 0;

1516 
cu°omîTaxøãBuf„r
.
	`ª£t
();

1517 
	`_ªad_cu°omî_èxøã
();

1518 
p›uœã_cu°omî_èxøã_öput_t
 
ö
;

1519 
ªåy
:

1520 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1521 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_cu°omî_èxøã
(1, 
ö
),

1522 
log_•a˚_√eded
, 
ªåy
, 
this
);

1524 
pGíî©eAndLﬂd
->
	`Rñó£Cu°omîTaxøã
();

1525 
cu°omîTaxøãBuf„r
.
	`ªÀa£
();

1526 
	}
}

1529 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_com∑ny
(c⁄° 
x˘_id
,

1530 
p›uœã_com∑ny_öput_t
& 
±oö
)

1532 
	`as£π
 (
_pssm
);

1533 
	`as£π
 (
_öôülized
);

1535 
ªp_row_t
 
	`¨ïrow
(
_pcom∑ny_m™
->
	`ts
());

1536 
¨ïrow
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

1538 
rows
=
com∑nyBuf„r
.
	`gëSize
();

1539 
i
=0; i<
rows
; i++){

1540 
PCOMPANY_ROW
 
ªc‹d
 = 
com∑nyBuf„r
.
	`gë
(
i
);

1541 
	`W_DO
(
	`_lﬂd_⁄e_com∑ny
(
¨ïrow
, 
ªc‹d
));

1544  (
_pssm
->
	`commô_x˘
());

1545 
	}
}

1547 
	gSh‹eTPCEEnv
::
	$p›uœã_com∑ny
()

1549 
pGíî©eAndLﬂd
->
	`InôCom∑ny
();

1550 
	`TRACE
–
TRACE_ALWAYS
, "Building COMPANY !!!\n");

1551 
com∑nyBuf„r
.
	`hasM‹eToRód
()){

1552 
log_•a˚_√eded
 = 0;

1553 
com∑nyBuf„r
.
	`ª£t
();

1554 
	`_ªad_com∑ny
();

1555 
p›uœã_com∑ny_öput_t
 
ö
;

1556 
ªåy
:

1557 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1558 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_com∑ny
(1, 
ö
),

1559 
log_•a˚_√eded
, 
ªåy
, 
this
);

1561 
pGíî©eAndLﬂd
->
	`Rñó£Com∑ny
();

1562 
com∑nyBuf„r
.
	`ªÀa£
();

1563 
	}
}

1566 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_com∑ny_com≥tô‹
(c⁄° 
x˘_id
,

1567 
p›uœã_com∑ny_com≥tô‹_öput_t
& 
±oö
)

1569 
	`as£π
 (
_pssm
);

1570 
	`as£π
 (
_öôülized
);

1572 
ªp_row_t
 
	`¨ïrow
(
_pcom∑ny_com≥tô‹_m™
->
	`ts
());

1573 
¨ïrow
.
	`£t
(
_pcom∑ny_com≥tô‹_desc
->
	`maxsize
());

1575 
rows
=
com∑nyCom≥tô‹Buf„r
.
	`gëSize
();

1576 
i
=0; i<
rows
; i++){

1577 
PCOMPANY_COMPETITOR_ROW
 
ªc‹d
 = 
com∑nyCom≥tô‹Buf„r
.
	`gë
(
i
);

1578 
	`W_DO
(
	`_lﬂd_⁄e_com∑ny_com≥tô‹
(
¨ïrow
, 
ªc‹d
));

1581  (
_pssm
->
	`commô_x˘
());

1582 
	}
}

1584 
	gSh‹eTPCEEnv
::
	$p›uœã_com∑ny_com≥tô‹
()

1586 
pGíî©eAndLﬂd
->
	`InôCom∑nyCom≥tô‹
();

1587 
	`TRACE
–
TRACE_ALWAYS
, "Building COMPANY COMPETITOR !!!\n");

1588 
com∑nyCom≥tô‹Buf„r
.
	`hasM‹eToRód
()){

1589 
log_•a˚_√eded
 = 0;

1590 
com∑nyCom≥tô‹Buf„r
.
	`ª£t
();

1591 
	`_ªad_com∑ny_com≥tô‹
();

1592 
p›uœã_com∑ny_com≥tô‹_öput_t
 
ö
;

1593 
ªåy
:

1594 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1595 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_com∑ny_com≥tô‹
(1, 
ö
),

1596 
log_•a˚_√eded
, 
ªåy
, 
this
);

1598 
pGíî©eAndLﬂd
->
	`Rñó£Com∑nyCom≥tô‹
();

1599 
com∑nyCom≥tô‹Buf„r
.
	`ªÀa£
();

1600 
	}
}

1603 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_daûy_m¨kë
(c⁄° 
x˘_id
,

1604 
p›uœã_daûy_m¨kë_öput_t
& 
±oö
)

1606 
	`as£π
 (
_pssm
);

1607 
	`as£π
 (
_öôülized
);

1609 
ªp_row_t
 
	`¨ïrow
(
_pdaûy_m¨kë_m™
->
	`ts
());

1610 
¨ïrow
.
	`£t
(
_pdaûy_m¨kë_desc
->
	`maxsize
());

1612 
rows
=
daûyM¨këBuf„r
.
	`gëSize
();

1613 
i
=0; i<
rows
; i++){

1614 
PDAILY_MARKET_ROW
 
ªc‹d
 = 
daûyM¨këBuf„r
.
	`gë
(
i
);

1615 
	`W_DO
(
	`_lﬂd_⁄e_daûy_m¨kë
(
¨ïrow
, 
ªc‹d
));

1618  (
_pssm
->
	`commô_x˘
());

1619 
	}
}

1621 
	gSh‹eTPCEEnv
::
	$p›uœã_daûy_m¨kë
()

1623 
pGíî©eAndLﬂd
->
	`InôDaûyM¨kë
();

1624 
	`TRACE
–
TRACE_ALWAYS
, "DAILY_MARKET !!!\n");

1625 
daûyM¨këBuf„r
.
	`hasM‹eToRód
()){

1626 
log_•a˚_√eded
 = 0;

1627 
daûyM¨këBuf„r
.
	`ª£t
();

1628 
	`_ªad_daûy_m¨kë
();

1629 
p›uœã_daûy_m¨kë_öput_t
 
ö
;

1630 
ªåy
:

1631 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1632 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_daûy_m¨kë
(1, 
ö
),

1633 
log_•a˚_√eded
, 
ªåy
, 
this
);

1635 
pGíî©eAndLﬂd
->
	`Rñó£DaûyM¨kë
();

1636 
daûyM¨këBuf„r
.
	`ªÀa£
();

1637 
	}
}

1640 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_fö™cül
(c⁄° 
x˘_id
,

1641 
p›uœã_fö™cül_öput_t
& 
±oö
)

1643 
	`as£π
 (
_pssm
);

1644 
	`as£π
 (
_öôülized
);

1646 
ªp_row_t
 
	`¨ïrow
(
_pfö™cül_m™
->
	`ts
());

1647 
¨ïrow
.
	`£t
(
_pfö™cül_desc
->
	`maxsize
());

1649 
rows
=
fö™cülBuf„r
.
	`gëSize
();

1650 
i
=0; i<
rows
; i++){

1651 
PFINANCIAL_ROW
 
ªc‹d
 = 
fö™cülBuf„r
.
	`gë
(
i
);

1652 
	`W_DO
(
	`_lﬂd_⁄e_fö™cül
(
¨ïrow
, 
ªc‹d
));

1655  (
_pssm
->
	`commô_x˘
());

1656 
	}
}

1658 
	gSh‹eTPCEEnv
::
	$p›uœã_fö™cül
()

1660 
pGíî©eAndLﬂd
->
	`InôFö™cül
();

1661 
	`TRACE
–
TRACE_ALWAYS
, "Building FINANCIAL !!!\n");

1662 
fö™cülBuf„r
.
	`hasM‹eToRód
()){

1663 
log_•a˚_√eded
 = 0;

1664 
fö™cülBuf„r
.
	`ª£t
();

1665 
	`_ªad_fö™cül
();

1666 
p›uœã_fö™cül_öput_t
 
ö
;

1667 
ªåy
:

1668 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1669 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_fö™cül
(1, 
ö
),

1670 
log_•a˚_√eded
, 
ªåy
, 
this
);

1672 
pGíî©eAndLﬂd
->
	`Rñó£Fö™cül
();

1673 
fö™cülBuf„r
.
	`ªÀa£
();

1674 
	}
}

1677 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_£curôy
(c⁄° 
x˘_id
,

1678 
p›uœã_£curôy_öput_t
& 
±oö
)

1680 
	`as£π
 (
_pssm
);

1681 
	`as£π
 (
_öôülized
);

1683 
ªp_row_t
 
	`¨ïrow
(
_p£curôy_m™
->
	`ts
());

1684 
¨ïrow
.
	`£t
(
_p£curôy_desc
->
	`maxsize
());

1686 
rows
=
£curôyBuf„r
.
	`gëSize
();

1687 
i
=0; i<
rows
; i++){

1688 
PSECURITY_ROW
 
ªc‹d
 = 
£curôyBuf„r
.
	`gë
(
i
);

1689 
	`W_DO
(
	`_lﬂd_⁄e_£curôy
(
¨ïrow
, 
ªc‹d
));

1692  (
_pssm
->
	`commô_x˘
());

1693 
	}
}

1695 
	gSh‹eTPCEEnv
::
	$p›uœã_£curôy
()

1697 
pGíî©eAndLﬂd
->
	`InôSecurôy
();

1698 
	`TRACE
–
TRACE_ALWAYS
, "Building SECURITY !!!\n");

1699 
£curôyBuf„r
.
	`hasM‹eToRód
()){

1700 
log_•a˚_√eded
 = 0;

1701 
£curôyBuf„r
.
	`ª£t
();

1702 
	`_ªad_£curôy
();

1703 
p›uœã_£curôy_öput_t
 
ö
;

1704 
ªåy
:

1705 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1706 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_£curôy
(1, 
ö
),

1707 
log_•a˚_√eded
, 
ªåy
, 
this
);

1709 
pGíî©eAndLﬂd
->
	`Rñó£Securôy
();

1710 
£curôyBuf„r
.
	`ªÀa£
();

1711 
	}
}

1714 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_œ°_åade
(c⁄° 
x˘_id
,

1715 
p›uœã_œ°_åade_öput_t
& 
±oö
)

1717 
	`as£π
 (
_pssm
);

1718 
	`as£π
 (
_öôülized
);

1720 
ªp_row_t
 
	`¨ïrow
(
_∂a°_åade_m™
->
	`ts
());

1721 
¨ïrow
.
	`£t
(
_∂a°_åade_desc
->
	`maxsize
());

1723 
rows
=
œ°TødeBuf„r
.
	`gëSize
();

1724 
i
=0; i<
rows
; i++){

1725 
PLAST_TRADE_ROW
 
ªc‹d
 = 
œ°TødeBuf„r
.
	`gë
(
i
);

1726 
	`W_DO
(
	`_lﬂd_⁄e_œ°_åade
(
¨ïrow
, 
ªc‹d
));

1729  (
_pssm
->
	`commô_x˘
());

1730 
	}
}

1732 
	gSh‹eTPCEEnv
::
	$p›uœã_œ°_åade
()

1734 
pGíî©eAndLﬂd
->
	`InôLa°Tøde
();

1735 
	`TRACE
–
TRACE_ALWAYS
, "Building LAST_TRADE !!!\n");

1736 
œ°TødeBuf„r
.
	`hasM‹eToRód
()){

1737 
log_•a˚_√eded
 = 0;

1738 
œ°TødeBuf„r
.
	`ª£t
();

1739 
	`_ªad_œ°_åade
();

1740 
p›uœã_œ°_åade_öput_t
 
ö
;

1741 
ªåy
:

1742 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1743 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_œ°_åade
(1, 
ö
),

1744 
log_•a˚_√eded
, 
ªåy
, 
this
);

1746 
pGíî©eAndLﬂd
->
	`Rñó£La°Tøde
();

1747 
œ°TødeBuf„r
.
	`ªÀa£
();

1748 
	}
}

1751 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_ni_™d_nx
(c⁄° 
x˘_id
,

1752 
p›uœã_ni_™d_nx_öput_t
& 
±oö
)

1754 
	`as£π
 (
_pssm
);

1755 
	`as£π
 (
_öôülized
);

1757 
ªp_row_t
 
	`¨ïrow
(
_≤ews_ôem_m™
->
	`ts
());

1758 
¨ïrow
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

1760 
rows
=
√wsXRefBuf„r
.
	`gëSize
();

1761 
i
=0; i<
rows
; i++){

1762 
PNEWS_XREF_ROW
 
ªc‹d
 = 
√wsXRefBuf„r
.
	`gë
(
i
);

1763 
	`W_DO
(
	`_lﬂd_⁄e_√ws_xªf
(
¨ïrow
, 
ªc‹d
));

1765 
rows
=
√wsIãmBuf„r
.
	`gëSize
();

1766 
i
=0; i<
rows
; i++){

1767 
PNEWS_ITEM_ROW
 
ªc‹d
 = 
√wsIãmBuf„r
.
	`gë
(
i
);

1768 
	`W_DO
(
	`_lﬂd_⁄e_√ws_ôem
(
¨ïrow
, 
ªc‹d
));

1771  (
_pssm
->
	`commô_x˘
());

1772 
	}
}

1774 
	gSh‹eTPCEEnv
::
	$p›uœã_ni_™d_nx
()

1776 
pGíî©eAndLﬂd
->
	`InôNewsIãmAndNewsXRef
();

1777 
	`TRACE
–
TRACE_ALWAYS
, "Building NEWS_ITEMánd NEWS_XREF !!!\n");

1778 
√wsIãmBuf„r
.
	`hasM‹eToRód
()){

1779 
log_•a˚_√eded
 = 0;

1780 
√wsIãmBuf„r
.
	`ª£t
();

1781 
√wsXRefBuf„r
.
	`ª£t
();

1782 
	`_ªad_ni_™d_nx
();

1783 
p›uœã_ni_™d_nx_öput_t
 
ö
;

1784 
ªåy
:

1785 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1786 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_ni_™d_nx
(1, 
ö
),

1787 
log_•a˚_√eded
, 
ªåy
, 
this
);

1789 
pGíî©eAndLﬂd
->
	`Rñó£NewsIãmAndNewsXRef
();

1790 
√wsIãmBuf„r
.
	`ªÀa£
();

1791 
√wsXRefBuf„r
.
	`ªÀa£
();

1792 
	}
}

1795 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_unô_åade
(c⁄° 
x˘_id
,

1796 
p›uœã_unô_åade_öput_t
& 
±oö
)

1798 
	`as£π
 (
_pssm
);

1799 
	`as£π
 (
_öôülized
);

1801 
ªp_row_t
 
	`¨ïrow
(
_≤ews_ôem_m™
->
	`ts
());

1802 
¨ïrow
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

1804 
rows
=
åadeBuf„r
.
	`gëSize
();

1805 
i
=0; i<
rows
; i++){

1806 
PTRADE_ROW
 
ªc‹d
 = 
åadeBuf„r
.
	`gë
(
i
);

1807 
	`W_DO
(
	`_lﬂd_⁄e_åade
(
¨ïrow
, 
ªc‹d
));

1809 
rows
=
åadeHi°‹yBuf„r
.
	`gëSize
();

1810 
i
=0; i<
rows
; i++){

1811 
PTRADE_HISTORY_ROW
 
ªc‹d
 = 
åadeHi°‹yBuf„r
.
	`gë
(
i
);

1812 
	`W_DO
(
	`_lﬂd_⁄e_åade_hi°‹y
(
¨ïrow
, 
ªc‹d
));

1814 
rows
=
£âÀmítBuf„r
.
	`gëSize
();

1815 
i
=0; i<
rows
; i++){

1816 
PSETTLEMENT_ROW
 
ªc‹d
 = 
£âÀmítBuf„r
.
	`gë
(
i
);

1817 
	`W_DO
(
	`_lﬂd_⁄e_£âÀmít
(
¨ïrow
, 
ªc‹d
));

1819 
rows
=
ˇshTønß˘i⁄Buf„r
.
	`gëSize
();

1820 
i
=0; i<
rows
; i++){

1821 
PCASH_TRANSACTION_ROW
 
ªc‹d
 = 
ˇshTønß˘i⁄Buf„r
.
	`gë
(
i
);

1822 
	`W_DO
(
	`_lﬂd_⁄e_ˇsh_å™ß˘i⁄
(
¨ïrow
, 
ªc‹d
));

1824 
rows
=
hﬁdögHi°‹yBuf„r
.
	`gëSize
();

1825 
i
=0; i<
rows
; i++){

1826 
PHOLDING_HISTORY_ROW
 
ªc‹d
 = 
hﬁdögHi°‹yBuf„r
.
	`gë
(
i
);

1827 
	`W_DO
(
	`_lﬂd_⁄e_hﬁdög_hi°‹y
(
¨ïrow
, 
ªc‹d
));

1830  (
_pssm
->
	`commô_x˘
());

1831 
	}
}

1834 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_brokî
(c⁄° 
x˘_id
,

1835 
p›uœã_brokî_öput_t
& 
±oö
)

1837 
	`as£π
 (
_pssm
);

1838 
	`as£π
 (
_öôülized
);

1840 
ªp_row_t
 
	`¨ïrow
(
_pbrokî_m™
->
	`ts
());

1841 
¨ïrow
.
	`£t
(
_pbrokî_desc
->
	`maxsize
());

1843 
rows
=
brokîBuf„r
.
	`gëSize
();

1844 
i
=0; i<
rows
; i++){

1845 
PBROKER_ROW
 
ªc‹d
 = 
brokîBuf„r
.
	`gë
(
i
);

1846 
	`W_DO
(
	`_lﬂd_⁄e_brokî
(
¨ïrow
, 
ªc‹d
));

1849  (
_pssm
->
	`commô_x˘
());

1850 
	}
}

1852 
	gSh‹eTPCEEnv
::
	$p›uœã_brokî
()

1854 
brokîBuf„r
.
	`hasM‹eToRód
()) {

1855 
log_•a˚_√eded
 = 0;

1856 
brokîBuf„r
.
	`ª£t
();

1857 
	`_ªad_brokî
();

1858 
p›uœã_brokî_öput_t
 
ö
;

1859 
ªåy
:

1860 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1861 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_brokî
(1, 
ö
),

1862 
log_•a˚_√eded
, 
ªåy
, 
this
);

1864 
	}
}

1867 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_hﬁdög_summ¨y
(c⁄° 
x˘_id
,

1868 
p›uœã_hﬁdög_summ¨y_öput_t
& 
±oö
)

1870 
	`as£π
 (
_pssm
);

1871 
	`as£π
 (
_öôülized
);

1873 
ªp_row_t
 
	`¨ïrow
(
_phﬁdög_summ¨y_m™
->
	`ts
());

1874 
¨ïrow
.
	`£t
(
_phﬁdög_summ¨y_desc
->
	`maxsize
());

1876 
rows
=
hﬁdögSumm¨yBuf„r
.
	`gëSize
();

1877 
i
=0; i<
rows
; i++){

1878 
PHOLDING_SUMMARY_ROW
 
ªc‹d
 = 
hﬁdögSumm¨yBuf„r
.
	`gë
(
i
);

1879 
	`W_DO
(
	`_lﬂd_⁄e_hﬁdög_summ¨y
(
¨ïrow
, 
ªc‹d
));

1882  (
_pssm
->
	`commô_x˘
());

1883 
	}
}

1885 
	gSh‹eTPCEEnv
::
	$p›uœã_hﬁdög_summ¨y
()

1887 
hﬁdögSumm¨yBuf„r
.
	`hasM‹eToRód
()){

1888 
log_•a˚_√eded
 = 0;

1889 
hﬁdögSumm¨yBuf„r
.
	`ª£t
();

1890 
	`_ªad_hﬁdög_summ¨y
();

1891 
p›uœã_hﬁdög_summ¨y_öput_t
 
ö
;

1892 
ªåy
:

1893 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1894 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_hﬁdög_summ¨y
(1, 
ö
),

1895 
log_•a˚_√eded
, 
ªåy
, 
this
);

1897 
	}
}

1900 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_p›uœã_hﬁdög
(c⁄° 
x˘_id
,

1901 
p›uœã_hﬁdög_öput_t
& 
±oö
)

1903 
	`as£π
 (
_pssm
);

1904 
	`as£π
 (
_öôülized
);

1906 
ªp_row_t
 
	`¨ïrow
(
_phﬁdög_m™
->
	`ts
());

1907 
¨ïrow
.
	`£t
(
_phﬁdög_desc
->
	`maxsize
());

1909 
rows
=
hﬁdögBuf„r
.
	`gëSize
();

1910 
i
=0; i<
rows
; i++){

1911 
PHOLDING_ROW
 
ªc‹d
 = 
hﬁdögBuf„r
.
	`gë
(
i
);

1912 
	`W_DO
(
	`_lﬂd_⁄e_hﬁdög
(
¨ïrow
, 
ªc‹d
));

1915  (
_pssm
->
	`commô_x˘
());

1916 
	}
}

1918 
	gSh‹eTPCEEnv
::
	$p›uœã_hﬁdög
()

1920 
hﬁdögBuf„r
.
	`hasM‹eToRód
()){

1921 
log_•a˚_√eded
 = 0;

1922 
hﬁdögBuf„r
.
	`ª£t
();

1923 
	`_ªad_hﬁdög
();

1924 
p›uœã_hﬁdög_öput_t
 
ö
;

1925 
ªåy
:

1926 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1927 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_hﬁdög
(1, 
ö
),

1928 
log_•a˚_√eded
, 
ªåy
, 
this
);

1930 
	}
}

1932 
	gSh‹eTPCEEnv
::
	$p›uœã_unô_åade
()

1934 
åadeBuf„r
.
	`hasM‹eToRód
()){

1935 
log_•a˚_√eded
 = 0;

1936 
åadeBuf„r
.
	`ª£t
();

1937 
åadeHi°‹yBuf„r
.
	`ª£t
();

1938 
£âÀmítBuf„r
.
	`ª£t
();

1939 
ˇshTønß˘i⁄Buf„r
.
	`ª£t
();

1940 
hﬁdögHi°‹yBuf„r
.
	`ª£t
();

1941 
	`_ªad_åade_unô
();

1942 
	`¥ötf
("\n\n PopulatingÅrade unit\n\n" );

1943 
p›uœã_unô_åade_öput_t
 
ö
;

1944 
ªåy
:

1945 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

1946 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_p›uœã_unô_åade
(1, 
ö
),

1947 
log_•a˚_√eded
, 
ªåy
, 
this
);

1949 
	}
}

1951 
	gSh‹eTPCEEnv
::
	$p›uœã_growög
()

1953 
pGíî©eAndLﬂd
->
	`InôHﬁdögAndTøde
();

1954 
	`TRACE
–
TRACE_ALWAYS
, "Building growingÅables !!!\n");

1955 
˙t
 =0;

1957 
	`p›uœã_unô_åade
();

1958 
	`p›uœã_brokî
();

1959 
	`p›uœã_hﬁdög_summ¨y
();

1960 
	`p›uœã_hﬁdög
();

1961 
	`¥ötf
("\∆ﬂd unô %d\n",++
˙t
);

1962 
åadeBuf„r
.
	`√wLﬂdUnô
();

1963 
åadeHi°‹yBuf„r
.
	`√wLﬂdUnô
();

1964 
£âÀmítBuf„r
.
	`√wLﬂdUnô
();

1965 
ˇshTønß˘i⁄Buf„r
.
	`√wLﬂdUnô
();

1966 
hﬁdögHi°‹yBuf„r
.
	`√wLﬂdUnô
();

1967 
brokîBuf„r
.
	`√wLﬂdUnô
();

1968 
hﬁdögSumm¨yBuf„r
.
	`√wLﬂdUnô
();

1969 
hﬁdögBuf„r
.
	`√wLﬂdUnô
();

1970 } 
pGíî©eAndLﬂd
->
	`hasNextLﬂdUnô
());

1971 
pGíî©eAndLﬂd
->
	`Rñó£HﬁdögAndTøde
();

1972 
åadeBuf„r
.
	`ªÀa£
();

1973 
åadeHi°‹yBuf„r
.
	`ªÀa£
();

1974 
£âÀmítBuf„r
.
	`ªÀa£
();

1975 
ˇshTønß˘i⁄Buf„r
.
	`ªÀa£
();

1976 
hﬁdögHi°‹yBuf„r
.
	`ªÀa£
();

1977 
brokîBuf„r
.
	`ªÀa£
();

1978 
hﬁdögSumm¨yBuf„r
.
	`ªÀa£
();

1979 
hﬁdögBuf„r
.
	`ªÀa£
();

1980 
	}
}

1982 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_föd_maxåade_id
(c⁄° 
x˘_id
,

1983 
föd_maxåade_id_öput_t
& 
±oö
)

1985 
	`as£π
 (
_pssm
);

1987 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

1989 
ªp_row_t
 
	`lowªp
(
_±øde_m™
->
	`ts
());

1990 
ªp_row_t
 
	`highªp
(
_±øde_m™
->
	`ts
());

1992 
lowªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

1993 
highªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

1995 
ªp_row_t
 
	`¨ïrow
(
_±øde_m™
->
	`ts
());

1996 
¨ïrow
.
	`£t
(
_±øde_desc
->
	`maxsize
());

1998 
¥åade
->
_ªp
 = &
¨ïrow
;

2000 
TIdít
 
åade_id
;

2001 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

2003 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

2004 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:t-ôî-by-ˇid-idx \n", 
x˘_id
);

2005 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex
(
_pssm
, 
tmp_t_ôî
, 
¥åade
, 
lowªp
,

2006 
highªp
, 0));

2007 
t_ôî
 = 
tmp_t_ôî
;

2009 
boﬁ
 
eof
;

2010 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:t-ôî-√xà\n", 
x˘_id
);

2011 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

2012 !
eof
){

2013 
¥åade
->
	`gë_vÆue
(0, 
åade_id
);

2014 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

2016 
œ°TødeId
 = ++
åade_id
;

2018  (
_pssm
->
	`commô_x˘
());

2019 
	}
}

2021 
	gSh‹eTPCEEnv
::
	$föd_maxåade_id
()

2023 
föd_maxåade_id_öput_t
 
ö
;

2024 
log_•a˚_√eded
 = 0;

2025 
ªåy
:

2026 
	`W_COERCE
(
this
->
	`db
()->
	`begö_x˘
());

2027 
	`CHECK_XCT_RETURN
(
this
->
	`x˘_föd_maxåade_id
(1, 
ö
),

2028 
log_•a˚_√eded
, 
ªåy
, 
this
);

2029 
	`¥ötf
("œ°Åødêid: %Œd\n", 
œ°TødeId
);

2030 
	}
}

2049 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
brokî_vﬁume
);

2050 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
cu°omî_posôi⁄
);

2051 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
m¨kë_„ed
);

2052 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
m¨kë_w©ch
);

2053 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
£curôy_dëaû
);

2054 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_lookup
);

2055 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_‹dî
);

2056 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_ªsu…
);

2057 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_°©us
);

2058 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_upd©e
);

2059 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
d©a_maöã«n˚
);

2060 
DEFINE_TRX
(
Sh‹eTPCEEnv
,
åade_˛ónup
);

2062 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_security_detail.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_£curôy_dëaû
(c⁄° 
x˘_id
,

57 
£curôy_dëaû_öput_t
& 
psdö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
addªss_m™_im∂
> 
	`¥addªss
(
_∑ddªss_m™
);

65 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥com∑ny
(
_pcom∑ny_m™
);

66 
tu∂e_gu¨d
<
com∑ny_com≥tô‹_m™_im∂
> 
	`¥com∑nycomp
(
_pcom∑ny_com≥tô‹_m™
);

67 
tu∂e_gu¨d
<
daûy_m¨kë_m™_im∂
> 
	`¥daûym¨kë
(
_pdaûy_m¨kë_m™
);

68 
tu∂e_gu¨d
<
exch™ge_m™_im∂
> 
	`¥exch™ge
(
_≥xch™ge_m™
);

69 
tu∂e_gu¨d
<
fö™cül_m™_im∂
> 
	`¥fö™cül
(
_pfö™cül_m™
);

70 
tu∂e_gu¨d
<
ödu°ry_m™_im∂
> 
	`¥ödu°ry
(
_pödu°ry_m™
);

71 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥œ°åade
(
_∂a°_åade_m™
);

72 
tu∂e_gu¨d
<
√ws_ôem_m™_im∂
> 
	`¥√wsôem
(
_≤ews_ôem_m™
);

73 
tu∂e_gu¨d
<
√ws_xªf_m™_im∂
> 
	`¥√wsxªf
(
_≤ews_xªf_m™
);

74 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

75 
tu∂e_gu¨d
<
zù_code_m™_im∂
> 
	`¥zùcode
(
_pzù_code_m™
);

77 
ªp_row_t
 
	`¨ïrow
(
_≤ews_ôem_m™
->
	`ts
());

78 
¨ïrow
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

80 
¥addªss
->
_ªp
 = &
¨ïrow
;

81 
¥com∑ny
->
_ªp
 = &
¨ïrow
;

82 
¥com∑nycomp
->
_ªp
 = &
¨ïrow
;

83 
¥daûym¨kë
->
_ªp
 = &
¨ïrow
;

84 
¥exch™ge
->
_ªp
 = &
¨ïrow
;

85 
¥fö™cül
->
_ªp
 = &
¨ïrow
;

86 
¥ödu°ry
->
_ªp
 = &
¨ïrow
;

87 
¥œ°åade
->
_ªp
 = &
¨ïrow
;

88 
¥√wsôem
->
_ªp
 = &
¨ïrow
;

89 
¥√wsxªf
->
_ªp
 = &
¨ïrow
;

90 
¥£curôy
->
_ªp
 = &
¨ïrow
;

91 
¥zùcode
->
_ªp
 = &
¨ïrow
;

93 
ªp_row_t
 
	`lowªp
–
_≤ews_ôem_m™
->
	`ts
());

94 
ªp_row_t
 
	`highªp
–
_≤ews_ôem_m™
->
	`ts
());

97 
lowªp
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

98 
highªp
.
	`£t
(
_≤ews_ôem_desc
->
	`maxsize
());

155 
s_«me
[71];

156 
TIdít
 
co_id
;

157 
co_«me
[61];

158 
•_øã
[5];

159 
˚o_«me
[47];

160 
co_desc
[151];

161 
myTime
 
›í_d©e
;

162 
co_°_id
[5];

163 
co_ad_löe1
[81];

164 
co_ad_löe2
[81];

165 
co_ad_town
[81];

166 
co_ad_div
[81];

167 
co_ad_zù
[13];

168 
co_ad_˘ry
[81];

169 
num_out
;

170 
myTime
 
°¨t_d©e
;

171 
myTime
 
exch_d©e
;

172 
≥_øtio
;

173 
S52_wk_high
;

174 
myTime
 
S52_wk_high_d©e
;

175 
S52_wk_low
;

176 
myTime
 
S52_wk_low_d©e
;

177 
divid
;

178 
yõld
;

179 
ex_ad_div
[81];

180 
ex_ad_˘ry
[81];

181 
ex_ad_löe1
[81];

182 
ex_ad_löe2
[81];

183 
ex_ad_town
[81];

184 
ex_ad_zù
[13];

185 
ex_˛o£
;

186 
ex_desc
[151];

187 
ex_«me
[101];

188 
ex_num_symb
;

189 
ex_›í
;

190 
TIdít
 
s_co_id
;

191 
s_ex_id
[7];

193 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ:%d SD:s-idx-¥obê(%s)\n", 
x˘_id
, 
psdö
.
_symbﬁ
);

194 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
psdö
.
_symbﬁ
));

196 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
, 71);

197 
¥£curôy
->
	`gë_vÆue
(4, 
s_ex_id
, 7);

198 
¥£curôy
->
	`gë_vÆue
(5, 
s_co_id
);

199 
¥£curôy
->
	`gë_vÆue
(6, 
num_out
);

200 
¥£curôy
->
	`gë_vÆue
(7, 
°¨t_d©e
);

201 
¥£curôy
->
	`gë_vÆue
(8, 
exch_d©e
);

202 
¥£curôy
->
	`gë_vÆue
(9, 
≥_øtio
);

203 
¥£curôy
->
	`gë_vÆue
(10, 
S52_wk_high
);

204 
¥£curôy
->
	`gë_vÆue
(11, 
S52_wk_high_d©e
);

205 
¥£curôy
->
	`gë_vÆue
(12, 
S52_wk_low
);

206 
¥£curôy
->
	`gë_vÆue
(13, 
S52_wk_low_d©e
);

207 
¥£curôy
->
	`gë_vÆue
(14, 
divid
);

208 
¥£curôy
->
	`gë_vÆue
(15, 
yõld
);

210 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:co-idx-¥obê(%ldË\n", 
x˘_id
, 
s_co_id
);

211 
	`W_DO
(
_pcom∑ny_m™
->
	`co_ödex_¥obe
(
_pssm
, 
¥com∑ny
, 
s_co_id
));

213 
¥com∑ny
->
	`gë_vÆue
(0, 
co_id
);

214 
¥com∑ny
->
	`gë_vÆue
(1, 
co_°_id
, 5);

215 
¥com∑ny
->
	`gë_vÆue
(2, 
co_«me
, 61);

216 
¥com∑ny
->
	`gë_vÆue
(4, 
•_øã
, 5);

217 
¥com∑ny
->
	`gë_vÆue
(5, 
˚o_«me
, 47);

218 
TIdít
 
co_ad_id
;

219 
¥com∑ny
->
	`gë_vÆue
(6, 
co_ad_id
);

220 
¥com∑ny
->
	`gë_vÆue
(7, 
co_desc
, 151);

221 
¥com∑ny
->
	`gë_vÆue
(8, 
›í_d©e
);

224 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:ad-idx-¥obê(%ldË\n", 
x˘_id
, 
co_ad_id
);

225 
	`W_DO
(
_∑ddªss_m™
->
	`ad_ödex_¥obe
(
_pssm
, 
¥addªss
, 
co_ad_id
));

227 
¥addªss
->
	`gë_vÆue
(1, 
co_ad_löe1
, 81);

228 
¥addªss
->
	`gë_vÆue
(2, 
co_ad_löe2
, 81);

229 
ˇ_ad_zc_code
[13];

230 
¥addªss
->
	`gë_vÆue
(3, 
ˇ_ad_zc_code
, 13);

232 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ:%d SD:zc-idx-¥obê(%s)\n", 
x˘_id
, 
ˇ_ad_zc_code
);

233 
	`W_DO
(
_pzù_code_m™
->
	`zc_ödex_¥obe
(
_pssm
, 
¥zùcode
, 
ˇ_ad_zc_code
));

235 
¥zùcode
->
	`gë_vÆue
(1, 
co_ad_town
, 81);

236 
¥zùcode
->
	`gë_vÆue
(2, 
co_ad_div
, 81);

238 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:ex-idx-¥obê(%sË\n", 
x˘_id
, 
s_ex_id
);

239 
	`W_DO
(
_≥xch™ge_m™
->
	`ex_ödex_¥obe
(
_pssm
, 
¥exch™ge
, 
s_ex_id
));

241 
¥exch™ge
->
	`gë_vÆue
(1, 
ex_«me
, 101);

242 
¥exch™ge
->
	`gë_vÆue
(2, 
ex_num_symb
);

243 
¥exch™ge
->
	`gë_vÆue
(3, 
ex_›í
);

244 
¥exch™ge
->
	`gë_vÆue
(4, 
ex_˛o£
);

245 
¥exch™ge
->
	`gë_vÆue
(5, 
ex_desc
, 151);

246 
TIdít
 
ex_ad_id
;

247 
¥exch™ge
->
	`gë_vÆue
(6, 
ex_ad_id
);

250 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:ad-idx-¥obê(%ldË\n", 
x˘_id
, 
ex_ad_id
);

251 
	`W_DO
(
_∑ddªss_m™
->
	`ad_ödex_¥obe
(
_pssm
, 
¥addªss
, 
ex_ad_id
));

253 
¥addªss
->
	`gë_vÆue
(1, 
ex_ad_löe1
, 81);

254 
¥addªss
->
	`gë_vÆue
(2, 
ex_ad_löe2
, 81);

255 
¥addªss
->
	`gë_vÆue
(3, 
ex_ad_zù
, 13);

256 
¥addªss
->
	`gë_vÆue
(4, 
ex_ad_˘ry
, 81);

258 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:zc-idx-¥obê(%sË\n", 
x˘_id
, 
ex_ad_zù
);

259 
	`W_DO
(
_pzù_code_m™
->
	`zc_ödex_¥obe
(
_pssm
, 
¥zùcode
, 
ex_ad_zù
));

261 
¥zùcode
->
	`gë_vÆue
(1, 
ex_ad_town
, 81);

262 
¥zùcode
->
	`gë_vÆue
(2, 
ex_ad_div
, 81);

275 
˝_co_«me
[3][61];

276 
ö_«me
[3][51];

278 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
com∑ny_com≥tô‹_t
> > 
cc_ôî
;

280 
ödex_sˇn_ôî_im∂
<
com∑ny_com≥tô‹_t
>* 
tmp_cc_ôî
;

281 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:cc-get-iter-by-index (%ld) \n",

282 
x˘_id
, 
co_id
);

283 
	`W_DO
(
_pcom∑ny_com≥tô‹_m™
->
	`cc_gë_ôî_by_ödex
(
_pssm
, 
tmp_cc_ôî
,

284 
¥com∑nycomp
, 
lowªp
,

285 
highªp
, 
co_id
));

286 
cc_ôî
 = 
tmp_cc_ôî
;

288 
boﬁ
 
eof
;

289 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:cc-ôî-√xà\n", 
x˘_id
);

290 
	`W_DO
(
cc_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑nycomp
));

291 
i
 = 0; i < 3 && !
eof
; i++){

292 
TIdít
 
˝_comp_co_id
;

293 
˝_ö_id
[3];

295 
¥com∑nycomp
->
	`gë_vÆue
(1, 
˝_comp_co_id
);

296 
¥com∑nycomp
->
	`gë_vÆue
(2, 
˝_ö_id
, 3);

298 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ:%d SD:ö-idx-¥obê(%s)\n", 
x˘_id
, 
˝_ö_id
);

299 
	`W_DO
(
_pödu°ry_m™
->
	`ö_ödex_¥obe
(
_pssm
, 
¥ödu°ry
, 
˝_ö_id
));

301 
¥ödu°ry
->
	`gë_vÆue
(1, 
ö_«me
[
i
], 51);

303 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:co-idx-probe (%ld) \n",

304 
x˘_id
, 
˝_comp_co_id
);

305 
	`W_DO
(
_pcom∑ny_m™
->
	`co_ödex_¥obe
(
_pssm
, 
¥com∑ny
, 
˝_comp_co_id
));

307 
¥com∑ny
->
	`gë_vÆue
(2, 
˝_co_«me
[
i
], 61);

309 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:cc-ôî-√xà\n", 
x˘_id
);

310 
	`W_DO
(
cc_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑nycomp
));

336 
fö_yór
[20];

337 
fö_qå
[20];

338 
myTime
 
fö_°¨t_d©e
[20];

339 
fö_ªv
[20];

340 
fö_√t_ó∫
[20];

341 
fö_basic_ïs
[20];

342 
fö_dûut_ïs
[20];

343 
fö_m¨gö
[20];

344 
fö_övít
[20];

345 
fö_as£ts
[20];

346 
fö_lüb
[20];

347 
fö_out_basic
[20];

348 
fö_out_dûut
[20];

350 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
fö™cül_t
> > 
fi_ôî
;

352 
ödex_sˇn_ôî_im∂
<
fö™cül_t
>* 
tmp_fi_ôî
;

353 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:fi-get-iter-by-idx (%ld) \n",

354 
x˘_id
, 
co_id
);

355 
	`W_DO
(
_pfö™cül_m™
->
	`fi_gë_ôî_by_ödex
(
_pssm
, 
tmp_fi_ôî
,

356 
¥fö™cül
, 
lowªp
, 
highªp
,

357 
co_id
));

358 
fi_ôî
 = 
tmp_fi_ôî
;

362 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:fi-ôî-√xà\n", 
x˘_id
);

363 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

364 
fö_Àn
;

365 
fö_Àn
 = 0; fö_À¿< 20 && !
eof
; fin_len++){

366 
fi_yór
;

367 
¥fö™cül
->
	`gë_vÆue
(1, 
fi_yór
);

368 
fö_yór
[
fö_Àn
] = 
fi_yór
;

370 
fi_qå
;

371 
¥fö™cül
->
	`gë_vÆue
(2, 
fi_qå
);

372 
fö_qå
[
fö_Àn
] = 
fi_qå
;

374 
myTime
 
fi_qå_°¨t_d©e
;

375 
¥fö™cül
->
	`gë_vÆue
(3, 
fi_qå_°¨t_d©e
);

376 
fö_°¨t_d©e
[
fö_Àn
] = 
fi_qå_°¨t_d©e
;

378 
fi_ªvíue
;

379 
¥fö™cül
->
	`gë_vÆue
(4, 
fi_ªvíue
);

380 
fö_ªv
[
fö_Àn
] = 
fi_ªvíue
;

382 
fi_√t_ó∫
;

383 
¥fö™cül
->
	`gë_vÆue
(5, 
fi_√t_ó∫
);

384 
fö_√t_ó∫
[
fö_Àn
] = 
fi_√t_ó∫
;

386 
fi_basic_ïs
;

387 
¥fö™cül
->
	`gë_vÆue
(6, 
fi_basic_ïs
);

388 
fö_basic_ïs
[
fö_Àn
] = 
fi_basic_ïs
;

390 
fi_dûut_ïs
;

391 
¥fö™cül
->
	`gë_vÆue
(7, 
fi_dûut_ïs
);

392 
fö_dûut_ïs
[
fö_Àn
] = 
fi_dûut_ïs
;

394 
fi_m¨gö
;

395 
¥fö™cül
->
	`gë_vÆue
(8, 
fi_m¨gö
);

396 
fö_m¨gö
[
fö_Àn
] = 
fi_m¨gö
;

398 
fi_övít‹y
;

399 
¥fö™cül
->
	`gë_vÆue
(9, 
fi_övít‹y
);

400 
fö_övít
[
fö_Àn
] = 
fi_övít‹y
;

402 
fi_as£ts
;

403 
¥fö™cül
->
	`gë_vÆue
(10, 
fi_as£ts
);

404 
fö_as£ts
[
fö_Àn
] = 
fi_as£ts
;

406 
fi_lübûôy
;

407 
¥fö™cül
->
	`gë_vÆue
(11, 
fi_lübûôy
);

408 
fö_lüb
[
fö_Àn
] = 
fi_lübûôy
;

410 
fi_out_basics
;

411 
¥fö™cül
->
	`gë_vÆue
(12, 
fi_out_basics
);

412 
fö_out_basic
[
fö_Àn
] = 
fi_out_basics
;

414 
fi_out_dûut
;

415 
¥fö™cül
->
	`gë_vÆue
(13, 
fi_out_dûut
);

416 
fö_out_dûut
[
fö_Àn
] = 
fi_out_dûut
;

418 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:fi-ôî-√xà\n", 
x˘_id
);

419 
	`W_DO
(
fi_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥fö™cül
));

421 
	`as£π
(
fö_Àn
 =
max_fö_Àn
);

439 
¨øy_gu¨d_t
<
myTime
> 
day_d©e
 = 
√w
 myTime[
psdö
.
_max_rows_to_ªtu∫
];

440 
¨øy_gu¨d_t
<> 
day_˛o£
 = 
√w
 [
psdö
.
_max_rows_to_ªtu∫
];

441 
¨øy_gu¨d_t
<> 
day_high
 = 
√w
 [
psdö
.
_max_rows_to_ªtu∫
];

442 
¨øy_gu¨d_t
<> 
day_low
 = 
√w
 [
psdö
.
_max_rows_to_ªtu∫
];

443 
¨øy_gu¨d_t
<> 
day_vﬁ
 = 
√w
 [
psdö
.
_max_rows_to_ªtu∫
];

445 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
daûy_m¨kë_t
> > 
dm_ôî
;

447 
ödex_sˇn_ôî_im∂
<
daûy_m¨kë_t
>* 
tmp_dm_ôî
;

448 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:dm-get-iter-by-idx (%s) (%ld) \n",

449 
x˘_id
, 
psdö
.
_symbﬁ
,Ösdö.
_°¨t_day
);

450 
	`W_DO
(
_pdaûy_m¨kë_m™
->
	`dm_gë_ôî_by_ödex
(
_pssm
, 
tmp_dm_ôî
,

451 
¥daûym¨kë
, 
lowªp
,

452 
highªp
, 
psdö
.
_symbﬁ
,

453 
psdö
.
_°¨t_day
));

454 
dm_ôî
 = 
tmp_dm_ôî
;

458 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:dm-ôî-√xà\n", 
x˘_id
);

459 
	`W_DO
(
dm_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥daûym¨kë
));

460 
day_Àn
;

461 
day_Àn
 = 0; day_À¿< 
psdö
.
_max_rows_to_ªtu∫
 && !
eof
; day_len++){

462 
¥daûym¨kë
->
	`gë_vÆue
(0, 
day_d©e
[
day_Àn
]);

463 
¥daûym¨kë
->
	`gë_vÆue
(2, 
day_˛o£
[
day_Àn
]);

464 
¥daûym¨kë
->
	`gë_vÆue
(3, 
day_high
[
day_Àn
]);

465 
¥daûym¨kë
->
	`gë_vÆue
(4, 
day_low
[
day_Àn
]);

466 
¥daûym¨kë
->
	`gë_vÆue
(5, 
day_vﬁ
[
day_Àn
]);

468 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:dm-iter-next %ld \n",

469 
x˘_id
, 
day_d©e
[
day_Àn
]);

470 
	`W_DO
(
dm_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥daûym¨kë
));

472 
	`as£π
(
day_Àn
 >
mö_day_Àn
 && day_À¿<
max_day_Àn
);

484 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ:%d SD:…-idx-¥obê(%s)\n", 
x˘_id
, 
psdö
.
_symbﬁ
);

485 
	`W_DO
(
_∂a°_åade_m™
->
	`…_ödex_¥obe
(
_pssm
, 
¥œ°åade
, 
psdö
.
_symbﬁ
));

487 
œ°_¥i˚
, 
œ°_›í
, 
œ°_vﬁ
;

488 
¥œ°åade
->
	`gë_vÆue
(2, 
œ°_¥i˚
);

489 
¥œ°åade
->
	`gë_vÆue
(3, 
œ°_›í
);

490 
¥œ°åade
->
	`gë_vÆue
(4, 
œ°_vﬁ
);

492 
√ws_ôem
[2][
max_√ws_ôem_size
+1];

493 
myTime
 
√ws_dts
[2];

494 
√ws_§c
[2][31];

495 
√ws_auth
[2][31];

496 
√ws_hódlöe
[2][81];

497 
√ws_summ¨y
[2][256];

499 
√ws_Àn
;

500 if(
psdö
.
_ac˚ss_lob_Êag
) {

516 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
> > 
nx_ôî
;

518 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
>* 
tmp_nx_ôî
;

519 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-get-iter-by-idx (%ld) \n",

520 
x˘_id
, 
co_id
);

521 
	`W_DO
(
_≤ews_xªf_m™
->
	`nx_gë_ôî_by_ödex
(
_pssm
, 
tmp_nx_ôî
,

522 
¥√wsxªf
, 
lowªp
,

523 
highªp
, 
co_id
));

524 
nx_ôî
 = 
tmp_nx_ôî
;

527 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:nx-ôî-√xà\n", 
x˘_id
);

528 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

529 
√ws_Àn
 = 0;Çews_À¿< 2 && !
eof
;Çews_len++){

530 
TIdít
 
nx_ni_id
;

531 
¥√wsxªf
->
	`gë_vÆue
(0, 
nx_ni_id
);

533 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-idx-probe (%ld) \n",

534 
x˘_id
, 
nx_ni_id
);

535 
	`W_DO
(
_≤ews_ôem_m™
->
	`ni_ödex_¥obe
(
_pssm
, 
¥√wsôem
, 
nx_ni_id
));

537 
¥√wsôem
->
	`gë_vÆue
(3, 
√ws_ôem
[
√ws_Àn
], 
max_√ws_ôem_size
+1);

538 
¥√wsôem
->
	`gë_vÆue
(4, 
√ws_dts
[
√ws_Àn
]);

539 
¥√wsôem
->
	`gë_vÆue
(5, 
√ws_§c
[
√ws_Àn
], 31);

540 
¥√wsôem
->
	`gë_vÆue
(6, 
√ws_auth
[
√ws_Àn
], 31);

541 
	`°r˝y
(
√ws_hódlöe
[
√ws_Àn
], "");

542 
	`°r˝y
(
√ws_summ¨y
[
√ws_Àn
], "");

544 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-iter-next %ld \n",

545 
x˘_id
, 
nx_ni_id
);

546 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

564 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
> > 
nx_ôî
;

566 
ödex_sˇn_ôî_im∂
<
√ws_xªf_t
>* 
tmp_nx_ôî
;

567 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-get-iter-by-idx (%ld) \n",

568 
x˘_id
, 
co_id
);

569 
	`W_DO
(
_≤ews_xªf_m™
->
	`nx_gë_ôî_by_ödex
(
_pssm
, 
tmp_nx_ôî
,

570 
¥√wsxªf
,

571 
lowªp
, 
highªp
, 
co_id
));

572 
nx_ôî
 = 
tmp_nx_ôî
;

575 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d SD:nx-ôî-√xà\n", 
x˘_id
);

576 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

577 
√ws_Àn
 = 0;Çews_À¿< 2 && !
eof
;Çews_len++){

578 
TIdít
 
nx_ni_id
;

579 
¥√wsxªf
->
	`gë_vÆue
(0, 
nx_ni_id
);

581 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-idx-probe (%ld) \n",

582 
x˘_id
, 
nx_ni_id
);

583 
	`W_DO
(
_≤ews_ôem_m™
->
	`ni_ödex_¥obe
(
_pssm
, 
¥√wsôem
, 
nx_ni_id
));

585 
	`°r˝y
(
√ws_ôem
[
√ws_Àn
], "");

586 
¥√wsôem
->
	`gë_vÆue
(1, 
√ws_hódlöe
[
√ws_Àn
], 81);

587 
¥√wsôem
->
	`gë_vÆue
(2, 
√ws_summ¨y
[
√ws_Àn
], 256);

588 
¥√wsôem
->
	`gë_vÆue
(4, 
√ws_dts
[
√ws_Àn
]);

589 
¥√wsôem
->
	`gë_vÆue
(5, 
√ws_§c
[
√ws_Àn
], 31);

590 
¥√wsôem
->
	`gë_vÆue
(6, 
√ws_auth
[
√ws_Àn
], 31);

592 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d SD:nx-iter-next %ld \n",

593 
x˘_id
, 
nx_ni_id
);

594 
	`W_DO
(
nx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥√wsxªf
));

597 
	`as£π
(
√ws_Àn
 =
max_√ws_Àn
);

599 #ifde‡
PRINT_TRX_RESULTS


602 
øddªss
.
	`¥öt_tu∂e
();

603 
rcom∑ny
.
	`¥öt_tu∂e
();

604 
rcom∑nycomp
.
	`¥öt_tu∂e
();

605 
rdaûym¨kë
.
	`¥öt_tu∂e
();

606 
ªxch™ge
.
	`¥öt_tu∂e
();

607 
rfö™cül
.
	`¥öt_tu∂e
();

608 
rödu°ry
.
	`¥öt_tu∂e
();

609 
æa°åade
.
	`¥öt_tu∂e
();

610 
∫ewsôem
.
	`¥öt_tu∂e
();

611 
∫ewsxªf
.
	`¥öt_tu∂e
();

612 
r£curôy
.
	`¥öt_tu∂e
();

613 
rzùcode
.
	`¥öt_tu∂e
();

616  
RCOK
;

618 
	}
}

621 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_cleanup.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_˛ónup
(c⁄° 
x˘_id
,

57 
åade_˛ónup_öput_t
& 
±cö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

65 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

66 
tu∂e_gu¨d
<
åade_ªque°_m™_im∂
> 
	`¥åadîeq
(
_±øde_ªque°_m™
);

68 
ªp_row_t
 
	`¨ïrow
(
_±øde_m™
->
	`ts
());

69 
¨ïrow
.
	`£t
(
_±øde_desc
->
	`maxsize
());

71 
¥åadîeq
->
_ªp
 = &
¨ïrow
;

72 
¥åade
->
_ªp
 = &
¨ïrow
;

73 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

75 
ªp_row_t
 
	`lowªp
–
_±øde_m™
->
	`ts
());

76 
ªp_row_t
 
	`highªp
–
_±øde_m™
->
	`ts
());

79 
lowªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

80 
highªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

82 
TIdít
 
t_id
;

83 
TIdít
 
å_t_id
;

84 
myTime
 
now_dts
;

102 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
åade_ªque°_t
> > 
å_ôî
;

104 
èbÀ_sˇn_ôî_im∂
<
åade_ªque°_t
>* 
tmp_å_ôî
;

105 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:å-gë-èbÀ-ôî \n", 
x˘_id
);

106 
	`W_DO
(
_±øde_ªque°_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_å_ôî
));

107 
å_ôî
 = 
tmp_å_ôî
;

111 
ªp_row_t
 
	`s‹åï
(
_±øde_m™
->
	`ts
());

112 
s‹åï
.
	`£t
(
_±øde_desc
->
	`maxsize
());

114 
asc_s‹t_buf„r_t
 
	`å_li°
(1);

116 
å_li°
.
	`£tup
(0, 
SQL_LONG
);

118 
èbÀ_row_t
 
	`rsb
(&
å_li°
);

119 
asc_s‹t_m™_im∂
 
	`å_s‹ãr
(&
å_li°
, &
s‹åï
);

121 
boﬁ
 
eof
;

122 
	`W_DO
(
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
));

123 !
eof
){

124 
¥åadîeq
->
	`gë_vÆue
(0, 
å_t_id
);

126 
rsb
.
	`£t_vÆue
(0, 
å_t_id
);

127 
å_s‹ãr
.
	`add_tu∂e
(
rsb
);

129 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:å-dñëe- \n", 
x˘_id
);

130 
	`W_DO
(
_±øde_ªque°_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥åadîeq
));

132 
	`W_DO
(
å_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadîeq
));

135 
asc_s‹t_ôî_im∂
 
	`å_li°_s‹t_ôî
(
_pssm
, &
å_li°
, &
å_s‹ãr
);

137 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:å-s‹t-ôî-√xà\n", 
x˘_id
);

138 
	`W_DO
(
å_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

139 !
eof
){

140 
rsb
.
	`gë_vÆue
(0, 
å_t_id
);

142 
now_dts
 = 
	`time
(
NULL
);

155 
¥åadehi°
->
	`£t_vÆue
(0, 
å_t_id
);

156 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

157 
¥åadehi°
->
	`£t_vÆue
(2, 
±cö
.
_°_submôãd_id
);

159 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TC:th-add-tuple (%ld) (%ld) (%s) \n",

160 
x˘_id
, 
å_t_id
, 
now_dts
, 
±cö
.
_°_submôãd_id
);

161 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

172 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TC:t-update (%ld) (%ld) (%s) \n",

173 
x˘_id
, 
å_t_id
, 
now_dts
, 
±cö
.
_°_ˇn˚Àd_id
);

174 
	`W_DO
(
_±øde_m™
->
	`t_upd©e_dts_°did_by_ödex
(
_pssm
, 
¥åade
, 
å_t_id
,

175 
now_dts
,

176 
±cö
.
_°_ˇn˚Àd_id
));

189 
¥åadehi°
->
	`£t_vÆue
(0, 
å_t_id
);

190 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

191 
¥åadehi°
->
	`£t_vÆue
(2, 
±cö
.
_°_ˇn˚Àd_id
);

193 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TC:th-add-tuple (%ld) (%ld) (%s) \n",

194 
x˘_id
, 
å_t_id
, 
now_dts
, 
±cö
.
_°_ˇn˚Àd_id
);

195 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

197 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:å-s‹t-ôî-√xà\n", 
x˘_id
);

198 
	`W_DO
(
å_li°_s‹t_ôî
.
	`√xt
(
_pssm
, 
eof
, 
rsb
));

216 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

218 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

219 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:t-ôî-by-idx \n", 
x˘_id
);

220 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex
(
_pssm
, 
tmp_t_ôî
, 
¥åade
, 
lowªp
,

221 
highªp
, 
±cö
.
_åade_id
));

222 
t_ôî
 = 
tmp_t_ôî
;

225 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:t-ôî-√xà\n", 
x˘_id
);

226 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

227 !
eof
){

228 
t_°_id
[5];

229 
¥åade
->
	`gë_vÆue
(2, 
t_°_id
, 5);

231 if(
	`°rcmp
(
t_°_id
, 
±cö
.
_°_submôãd_id
) == 0){

232 
now_dts
 = 
	`time
(
NULL
);

242 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TC:t-update (%ld) (%ld) (%s) \n",

243 
x˘_id
, 
t_id
, 
now_dts
, 
±cö
.
_°_ˇn˚Àd_id
);

244 
	`W_DO
(
_±øde_m™
->
	`t_upd©e_dts_°did_by_ödex
(
_pssm
, 
¥åade
, 
t_id
,

245 
now_dts
,

246 
±cö
.
_°_ˇn˚Àd_id
));

259 
¥åadehi°
->
	`£t_vÆue
(0, 
t_id
);

260 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

261 
¥åadehi°
->
	`£t_vÆue
(2, 
±cö
.
_°_ˇn˚Àd_id
);

263 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TC:th-add-tuple (%ld) (%ld) (%s) \n",

264 
x˘_id
, 
t_id
, 
now_dts
, 
±cö
.
_°_ˇn˚Àd_id
);

265 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

267 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TC:t-ôî-√xà\n", 
x˘_id
);

268 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

271 #ifde‡
PRINT_TRX_RESULTS


274 
πødîeq
.
	`¥öt_tu∂e
();

275 
πøde
.
	`¥öt_tu∂e
();

276 
πødehi°
.
	`¥öt_tu∂e
();

279  
RCOK
;

281 
	}
}

284 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_lookup.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_lookup
(c⁄° 
x˘_id
,

57 
åade_lookup_öput_t
& 
±lö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

65 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥åadëy≥
(
_±øde_ty≥_m™
);

66 
tu∂e_gu¨d
<
£âÀmít_m™_im∂
> 
	`¥£âÀmít
(
_p£âÀmít_m™
);

67 
tu∂e_gu¨d
<
ˇsh_å™ß˘i⁄_m™_im∂
> 
	`¥ˇshå™s
(
_pˇsh_å™ß˘i⁄_m™
);

68 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

69 
tu∂e_gu¨d
<
hﬁdög_hi°‹y_m™_im∂
> 
	`¥hﬁdöghi°‹y
(
_phﬁdög_hi°‹y_m™
);

71 
ªp_row_t
 
	`¨ïrow
(
_±øde_m™
->
	`ts
());

73 
¨ïrow
.
	`£t
(
_±øde_desc
->
	`maxsize
());

75 
¥åade
->
_ªp
 = &
¨ïrow
;

76 
¥åadëy≥
->
_ªp
 = &
¨ïrow
;

77 
¥£âÀmít
->
_ªp
 = &
¨ïrow
;

78 
¥ˇshå™s
->
_ªp
 = &
¨ïrow
;

79 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

80 
¥hﬁdöghi°‹y
->
_ªp
 = &
¨ïrow
;

82 
ªp_row_t
 
	`lowªp
(
_±øde_m™
->
	`ts
());

83 
ªp_row_t
 
	`highªp
(
_±øde_m™
->
	`ts
());

86 
lowªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

87 
highªp
.
	`£t
(
_±øde_desc
->
	`maxsize
());

89 
max_åades
 = 
±lö
.
_max_åades
;

91 
¨øy_gu¨d_t
<> 
bid_¥i˚
 = 
√w
 [
max_åades
];

92 
¨øy_gu¨d_t
< [50] > 
exec_«me
 = 
√w
 [
max_åades
][50];

93 
¨øy_gu¨d_t
<
boﬁ
> 
is_ˇsh
 = 
√w
 boﬁ[
max_åades
];

94 
¨øy_gu¨d_t
<
boﬁ
> 
is_m¨kë
 = 
√w
 boﬁ[
max_åades
];

95 
¨øy_gu¨d_t
<> 
åade_¥i˚
 = 
√w
 [
max_åades
];

96 
¨øy_gu¨d_t
<
TIdít
> 
åade_li°
 = 
√w
 TIdít[
max_åades
];

97 
¨øy_gu¨d_t
<> 
£âÀmít_amou¡
 = 
√w
 [
max_åades
];

98 
¨øy_gu¨d_t
<
myTime
> 
£âÀmít_ˇsh_due_d©e
 = 
√w
 myTime[
max_åades
];

99 
¨øy_gu¨d_t
< [41] > 
£âÀmít_ˇsh_ty≥
 = 
√w
 [
max_åades
][41];

100 
¨øy_gu¨d_t
<> 
ˇsh_å™ß˘i⁄_amou¡
 = 
√w
 [
max_åades
];

101 
¨øy_gu¨d_t
<
myTime
> 
ˇsh_å™ß˘i⁄_dts
 = 
√w
 myTime[
max_åades
];

102 
¨øy_gu¨d_t
< [101] > 
ˇsh_å™ß˘i⁄_«me
 = 
√w
 [
max_åades
][101];

103 
¨øy_gu¨d_t
< 
myTime
[3] > 
åade_hi°‹y_dts
 = 
√w
 myTime[
max_åades
][3];

104 
¨øy_gu¨d_t
< [3][5] > 
åade_hi°‹y_°©us_id
 = 
√w
 [
max_åades
][3][5];

105 
¨øy_gu¨d_t
<
TIdít
> 
ac˘_id
 = 
√w
 TIdít[
max_åades
];

106 
¨øy_gu¨d_t
<> 
qu™tôy
 = 
√w
 [
max_åades
];

107 
¨øy_gu¨d_t
< [4] > 
åade_ty≥
 = 
√w
 [
max_åades
][4];

108 
¨øy_gu¨d_t
<
myTime
> 
åade_dts
 = 
√w
 myTime[
max_åades
];

111 
num_found
 = 0;

112 if(
±lö
.
_‰ame_to_execuã
 == 1) {

113 
num_found
 = 0;Çum_found < 
max_åades
;Çum_found++){

128 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:t-idx-probe (%ld) \n",

129 
x˘_id
, 
±lö
.
_åade_id
[
num_found
]);

130 
	`W_DO
(
_±øde_m™
->
	`t_ödex_¥obe
(
_pssm
, 
¥åade
,

131 
±lö
.
_åade_id
[
num_found
]));

133 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
num_found
]);

134 
¥åade
->
	`gë_vÆue
(7, 
bid_¥i˚
[
num_found
]);

135 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
num_found
], 50);

136 
¥åade
->
	`gë_vÆue
(10, 
åade_¥i˚
[
num_found
]);

137 
â_id
[4];

138 
¥åade
->
	`gë_vÆue
(3, 
â_id
, 4);

140 
	`TRACE
–
TRACE_TRX_FLOW
,"Aµ:%d TL:â-idx-¥obê(%s)\n", 
x˘_id
, 
â_id
);

141 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
, 
â_id
));

143 
¥åadëy≥
->
	`gë_vÆue
(3, 
is_m¨kë
[
num_found
]);

155 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:se-idx-probe (%ld) \n",

156 
x˘_id
, 
±lö
.
_åade_id
[
num_found
]);

157 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

158 
±lö
.
_åade_id
[
num_found
]));

160 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
num_found
]);

161 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
num_found
]);

162 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
num_found
], 41);

166 if(
is_ˇsh
[
num_found
]) {

179 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:ct-idx-probe (%ld) \n",

180 
x˘_id
, 
±lö
.
_åade_id
[
num_found
]);

181 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

182 
±lö
.
_åade_id
[
num_found
]));

184 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
num_found
]);

185 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
num_found
]);

186 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
num_found
], 101);

200 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

202 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

203 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:th-iter-by-trade-idx (%ld) \n",

204 
x˘_id
, 
±lö
.
_åade_id
[
num_found
]);

205 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

206 
¥åadehi°
,

207 
lowªp
, 
highªp
,

208 
±lö
.
_åade_id
[
num_found
]));

209 
th_ôî
 = 
tmp_th_ôî
;

213 
j
=0;

214 
boﬁ
 
eof
;

215 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

216 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

217 !
eof
 && 
j
<3) {

218 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
num_found
][
j
]);

219 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
num_found
][
j
],

221 
j
++;

222 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

223 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

226 
	`as£π
(
num_found
 =
max_åades
);

229 if(
±lö
.
_‰ame_to_execuã
 == 2) {

249 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

251 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

252 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:t-iter-by-idx2 %ld %ld %ld \n",

253 
x˘_id
, 
±lö
.
_ac˘_id
,Öéö.
_°¨t_åade_dts
,

254 
±lö
.
_íd_åade_dts
);

255 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex2
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

256 
lowªp
, 
highªp
,

257 
±lö
.
_ac˘_id
,

258 
±lö
.
_°¨t_åade_dts
,

259 
±lö
.
_íd_åade_dts
));

260 
t_ôî
 = 
tmp_t_ôî
;

264 
boﬁ
 
eof
;

265 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

266 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

267 
num_found
 = 0 ;Çum_found < 
max_åades
 && !
eof
 ;Çum_found++) {

268 
¥åade
->
	`gë_vÆue
(0, 
åade_li°
[
num_found
]);

269 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
num_found
]);

270 
¥åade
->
	`gë_vÆue
(7, 
bid_¥i˚
[
num_found
]);

271 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
num_found
], 50);

272 
¥åade
->
	`gë_vÆue
(10, 
åade_¥i˚
[
num_found
]);

273 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

274 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

277 
i
 = 0; i < 
num_found
; i++) {

288 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:se-idx-probe (%ld) \n",

289 
x˘_id
, 
åade_li°
[
i
]);

290 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

291 
åade_li°
[
i
]));

293 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
i
]);

294 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
i
]);

295 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
i
], 41);

297 if(
is_ˇsh
[
i
]) {

309 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:ct-idx-probe (%ld) \n",

310 
x˘_id
, 
åade_li°
[
i
]);

311 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

312 
åade_li°
[
i
]));

314 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
i
]);

315 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
i
]);

316 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
i
], 101);

331 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

333 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

334 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:th-get-iter-by-idx %ld \n",

335 
x˘_id
, 
åade_li°
[
i
]);

336 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

337 
¥åadehi°
,

338 
lowªp
, 
highªp
,

339 
åade_li°
[
i
]));

340 
th_ôî
 = 
tmp_th_ôî
;

344 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

345 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

346 
j
 = 0;

347 !
eof
 && 
j
<3) {

348 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
i
][
j
]);

349 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
i
][
j
], 5);

350 
j
++;

351 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

352 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

355 
	`as£π
(
num_found
 >0 &&Çum_found <
max_åades
);

358 if(
±lö
.
_‰ame_to_execuã
 == 3) {

381 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

383 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

384 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:t-get-iter-by-idx3 %s %ld %ld \n",

385 
x˘_id
, 
±lö
.
_symbﬁ
,Öéö.
_°¨t_åade_dts
,

386 
±lö
.
_íd_åade_dts
);

387 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex3
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

388 
lowªp
, 
highªp
, 
±lö
.
_symbﬁ
,

389 
±lö
.
_°¨t_åade_dts
,

390 
±lö
.
_íd_åade_dts
));

391 
t_ôî
 = 
tmp_t_ôî
;

395 
boﬁ
 
eof
;

396 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

397 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

398 
num_found
 = 0;Çum_found < 
max_åades
 && !
eof
;Çum_found++) {

399 
¥åade
->
	`gë_vÆue
(0, 
åade_li°
[
num_found
]);

400 
¥åade
->
	`gë_vÆue
(1, 
åade_dts
[
num_found
]);

401 
¥åade
->
	`gë_vÆue
(3, 
åade_ty≥
[
num_found
], 4);

402 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
num_found
]);

403 
¥åade
->
	`gë_vÆue
(6, 
qu™tôy
[
num_found
]);

404 
¥åade
->
	`gë_vÆue
(8, 
ac˘_id
[
num_found
]);

405 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
num_found
], 50);

406 
¥åade
->
	`gë_vÆue
(10, 
åade_¥i˚
[
num_found
]);

407 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

408 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

411 
i
 = 0; i < 
num_found
; i++){

422 
	`TRACE
–
TRACE_TRX_FLOW
, "TL: %d SE:se-idx-probe (%ld) \n",

423 
x˘_id
, 
åade_li°
[
i
]);

424 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

425 
åade_li°
[
i
]));

427 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
i
], 41);

428 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
i
]);

429 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
i
]);

431 if(
is_ˇsh
[
i
]){

442 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:ct-idx-probe (%ld) \n",

443 
x˘_id
, 
åade_li°
[
i
]);

444 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

445 
åade_li°
[
i
]));

447 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
i
]);

448 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
i
]);

449 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
i
], 101);

463 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

465 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

466 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:th-get-iter-by-idx %ld \n",

467 
x˘_id
, 
åade_li°
[
i
]);

468 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

469 
¥åadehi°
,

470 
lowªp
, 
highªp
,

471 
åade_li°
[
i
]));

472 
th_ôî
 = 
tmp_th_ôî
;

476 
j
=0;

477 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

478 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

479 !
eof
 && 
j
<3) {

480 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
i
][
j
]);

481 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
i
][
j
], 5);

482 
j
++;

483 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:th-ôî-√xà\n", 
x˘_id
);

484 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

487 
	`as£π
(
num_found
 >0 &&Çum_found <
max_åades
);

490 if(
±lö
.
_‰ame_to_execuã
 == 4) {

492 
TIdít
 
hﬁdög_hi°‹y_id
[20];

493 
TIdít
 
hﬁdög_hi°‹y_åade_id
[20];

494 
qu™tôy_bef‹e
[20];

495 
qu™tôy_a·î
[20];

508 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

510 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

511 
	`TRACE
–
TRACE_TRX_FLOW
,

513 
x˘_id
, 
±lö
.
_ac˘_id
,Öéö.
_°¨t_åade_dts
, 
MAX_DTS
);

514 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex2
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

515 
lowªp
, 
highªp
,

516 
±lö
.
_ac˘_id
,

517 
±lö
.
_°¨t_åade_dts
,

518 
MAX_DTS
, 
Ál£
, false));

519 
t_ôî
 = 
tmp_t_ôî
;

523 
boﬁ
 
eof
;

524 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

526 
TIdít
 
åade_id
;

527 
¥åade
->
	`gë_vÆue
(0, 
åade_id
);

547 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
hﬁdög_hi°‹y_t
> > 
hh_ôî
;

549 
ödex_sˇn_ôî_im∂
<
hﬁdög_hi°‹y_t
>* 
tmp_hh_ôî
;

550 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:hh-iter-by-idx (%ld)\n",

551 
x˘_id
, 
åade_id
);

552 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`hh_gë_ôî_by_ödex2
(
_pssm
, 
tmp_hh_ôî
,

553 
¥hﬁdöghi°‹y
,

554 
lowªp
, 
highªp
,

555 
åade_id
));

556 
hh_ôî
 = 
tmp_hh_ôî
;

559 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:hh-ôî-√xà\n", 
x˘_id
);

560 
	`W_DO
(
hh_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdöghi°‹y
));

561 
num_found
;

562 
num_found
 = 0;Çum_found < 20 && !
eof
;Çum_found++) {

563 
¥hﬁdöghi°‹y
->
	`gë_vÆue
(0, 
hﬁdög_hi°‹y_id
[
num_found
]);

564 
¥hﬁdöghi°‹y
->
	`gë_vÆue
(1, 
hﬁdög_hi°‹y_åade_id
[
num_found
]);

565 
¥hﬁdöghi°‹y
->
	`gë_vÆue
(2, 
qu™tôy_bef‹e
[
num_found
]);

566 
¥hﬁdöghi°‹y
->
	`gë_vÆue
(3, 
qu™tôy_a·î
[
num_found
]);

567 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:hh-ôî-√xà\n", 
x˘_id
);

568 
	`W_DO
(
hh_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdöghi°‹y
));

570 
	`as£π
(
num_found
 >= 0 &&Çum_found <= 20);

573 #ifde‡
PRINT_TRX_RESULTS


576 
πøde
.
	`¥öt_tu∂e
();

577 
πødëy≥
.
	`¥öt_tu∂e
();

578 
r£âÀmít
.
	`¥öt_tu∂e
();

579 
rˇshå™s
.
	`¥öt_tu∂e
();

580 
πødehi°
.
	`¥öt_tu∂e
();

581 
rhﬁdöghi°‹y
.
	`¥öt_tu∂e
();

584  
RCOK
;

586 
	}
}

589 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_order.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

50 
œ°TødeId
;

58 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_‹dî
(c⁄° 
x˘_id
, 
åade_‹dî_öput_t
& 
±oö
)

61 
	`as£π
 (
_pssm
);

62 
	`as£π
 (
_öôülized
);

63 
	`as£π
 (
_lﬂded
);

65 
tu∂e_gu¨d
<
cu°omî_accou¡_m™_im∂
> 
	`¥cu°ac˘
(
_pcu°omî_accou¡_m™
);

66 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°
(
_pcu°omî_m™
);

67 
tu∂e_gu¨d
<
brokî_m™_im∂
> 
	`¥brokî
(
_pbrokî_m™
);

68 
tu∂e_gu¨d
<
accou¡_≥rmissi⁄_m™_im∂
> 
	`¥ac˘≥rm
(
_∑ccou¡_≥rmissi⁄_m™
);

69 
tu∂e_gu¨d
<
com∑ny_m™_im∂
> 
	`¥com∑ny
(
_pcom∑ny_m™
);

70 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

71 
tu∂e_gu¨d
<
œ°_åade_m™_im∂
> 
	`¥œ°åade
(
_∂a°_åade_m™
);

72 
tu∂e_gu¨d
<
hﬁdög_summ¨y_m™_im∂
> 
	`¥hﬁdögsumm¨y
(
_phﬁdög_summ¨y_m™
);

73 
tu∂e_gu¨d
<
hﬁdög_m™_im∂
> 
	`¥hﬁdög
(
_phﬁdög_m™
);

74 
tu∂e_gu¨d
<
ch¨ge_m™_im∂
> 
	`¥ch¨ge
(
_pch¨ge_m™
);

75 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

76 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥åadëy≥
(
_±øde_ty≥_m™
);

77 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

78 
tu∂e_gu¨d
<
åade_ªque°_m™_im∂
> 
	`¥åadîeq
(
_±øde_ªque°_m™
);

79 
tu∂e_gu¨d
<
cu°omî_èxøã_m™_im∂
> 
	`¥cu°èxøã
(
_pcu°omî_èxøã_m™
);

80 
tu∂e_gu¨d
<
èxøã_m™_im∂
> 
	`¥èxøã
(
_±axøã_m™
);

81 
tu∂e_gu¨d
<
commissi⁄_øã_m™_im∂
> 
	`¥commøã
(
_pcommissi⁄_øã_m™
);

83 
ªp_row_t
 
	`¨ïrow
(
_pcom∑ny_m™
->
	`ts
());

85 
¨ïrow
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

87 
¥cu°ac˘
->
_ªp
 = &
¨ïrow
;

88 
¥cu°
->
_ªp
 = &
¨ïrow
;

89 
¥brokî
->
_ªp
 = &
¨ïrow
;

90 
¥ac˘≥rm
->
_ªp
 = &
¨ïrow
;

91 
¥åade
->
_ªp
 = &
¨ïrow
;

92 
¥åadîeq
->
_ªp
 = &
¨ïrow
;

93 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

94 
¥com∑ny
->
_ªp
 = &
¨ïrow
;

95 
¥£curôy
->
_ªp
 = &
¨ïrow
;

96 
¥œ°åade
->
_ªp
 = &
¨ïrow
;

97 
¥åadëy≥
->
_ªp
 = &
¨ïrow
;

98 
¥hﬁdögsumm¨y
->
_ªp
 = &
¨ïrow
;

99 
¥hﬁdög
->
_ªp
 = &
¨ïrow
;

100 
¥ch¨ge
->
_ªp
 = &
¨ïrow
;

101 
¥cu°èxøã
->
_ªp
 = &
¨ïrow
;

102 
¥èxøã
->
_ªp
 = &
¨ïrow
;

103 
¥commøã
->
_ªp
 = &
¨ïrow
;

105 
ªp_row_t
 
	`lowªp
(
_pcom∑ny_m™
->
	`ts
());

106 
ªp_row_t
 
	`highªp
(
_pcom∑ny_m™
->
	`ts
());

108 
lowªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

109 
highªp
.
	`£t
(
_pcom∑ny_desc
->
	`maxsize
());

111 
ªque°ed_¥i˚
 = 
±oö
.
_ªque°ed_¥i˚
;

114 
cu°_f_«me
[21];

115 
cu°_l_«me
[26];

116 
ac˘_bÆ
;

117 
èx_id
[21];

118 
èx_°©us
;

119 
TIdít
 
cu°_id
;

120 
cu°_tõr
;

121 
TIdít
 
brokî_id
;

129 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:ca-idx-probe (%ld) \n",

130 
x˘_id
, 
±oö
.
_ac˘_id
);

131 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_ödex_¥obe
(
_pssm
,
¥cu°ac˘
,
±oö
.
_ac˘_id
));

133 
ac˘_«me
[51] = "\0";

134 
¥cu°ac˘
->
	`gë_vÆue
(1, 
brokî_id
);

135 
¥cu°ac˘
->
	`gë_vÆue
(2, 
cu°_id
);

136 
¥cu°ac˘
->
	`gë_vÆue
(3, 
ac˘_«me
, 51);

137 
¥cu°ac˘
->
	`gë_vÆue
(4, 
èx_°©us
);

140 
¥cu°ac˘
->
	`gë_vÆue
(5, 
ac˘_bÆ
);

142 
	`as£π
(
ac˘_«me
[0] != 0);

150 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:c-idx-¥obê(%ldË\n", 
x˘_id
, 
cu°_id
);

151 
	`W_DO
(
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°
, 
cu°_id
));

153 
¥cu°
->
	`gë_vÆue
(1, 
èx_id
, 21);

154 
¥cu°
->
	`gë_vÆue
(3, 
cu°_l_«me
, 26);

155 
¥cu°
->
	`gë_vÆue
(4, 
cu°_f_«me
, 21);

156 
¥cu°
->
	`gë_vÆue
(7, 
cu°_tõr
);

163 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
brokî_t
> > 
br_ôî
;

165 
ödex_sˇn_ôî_im∂
<
brokî_t
>* 
tmp_br_ôî
;

166 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:b-get-iter-by-idx3 (%s) \n",

167 
x˘_id
, 
brokî_id
);

168 
	`W_DO
(
_pbrokî_m™
->
	`b_gë_ôî_by_ödex2
(
_pssm
, 
tmp_br_ôî
, 
¥brokî
,

169 
lowªp
, 
highªp
, 
brokî_id
));

170 
br_ôî
 = 
tmp_br_ôî
;

172 
boﬁ
 
eof
;

173 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:br-ôî-√xà\n", 
x˘_id
);

174 
	`W_DO
(
br_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥brokî
));

175 if(
eof
Ë{ 
	`W_DO
(
	`RC
(
£_NOT_FOUND
)); }

177 
brokî_«me
[50];

178 
¥brokî
->
	`gë_vÆue
(2, 
brokî_«me
, 50);

202 if(
	`°rcmp
(
±oö
.
_exec_l_«me
, 
cu°_l_«me
) != 0 ||

203 
	`°rcmp
(
±oö
.
_exec_f_«me
, 
cu°_f_«me
) != 0 ||

204 
	`°rcmp
(
±oö
.
_exec_èx_id
, 
èx_id
) != 0 ) {

206 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:ap-idx-probe (%ld) (%s) \n",

207 
x˘_id
, 
±oö
.
_ac˘_id
,Ötoö.
_exec_èx_id
);

208 
	`W_DO
(
_∑ccou¡_≥rmissi⁄_m™
->
	`≠_ödex_¥obe
(
_pssm
, 
¥ac˘≥rm
,

209 
±oö
.
_ac˘_id
,

210 
±oö
.
_exec_èx_id
));

212 
f_«me
[21], 
l_«me
[26];

213 
¥ac˘≥rm
->
	`gë_vÆue
(3, 
l_«me
, 26);

214 
¥ac˘≥rm
->
	`gë_vÆue
(4, 
f_«me
, 21);

216 
≠_a˛
[5] = "";

217 if(
	`°rcmp
(
±oö
.
_exec_l_«me
, 
l_«me
) == 0 &&

218 
	`°rcmp
(
±oö
.
_exec_f_«me
, 
f_«me
) == 0) {

219 
¥ac˘≥rm
->
	`gë_vÆue
(1, 
≠_a˛
, 5);

221 
	`W_DO
(
	`RC
(
£_NOT_FOUND
));

224 
	`as£π
(
	`°rcmp
(
≠_a˛
, "") != 0);

229 
comm_øã
;

230 
°©us_id
[5];

231 
ch¨ge_amou¡
;

232 
boﬁ
 
ty≥_is_m¨kë
;

233 
buy_vÆue
;

234 
£Œ_vÆue
;

235 
èx_amou¡
;

236 
symbﬁ
[16];

237 
	`°r˝y
(
symbﬁ
, 
±oö
.
_symbﬁ
);

238 
TIdít
 
co_id
;

239 
co_«me
[61];

240 
exch_id
[7];

241 
cu°_as£ts
;

242 
m¨kë_¥i˚
;

243 
s_«me
[71];

244 
boﬁ
 
ty≥_is_£Œ
;

246 if(
symbﬁ
[0] == '\0'){

255 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
com∑ny_t
> > 
co_ôî
;

257 
ödex_sˇn_ôî_im∂
<
com∑ny_t
>* 
tmp_co_ôî
;

258 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:co-get-iter-by-idx2 (%s) \n",

259 
x˘_id
, 
±oö
.
_co_«me
);

260 
	`W_DO
(
_pcom∑ny_m™
->
	`co_gë_ôî_by_ödex2
(
_pssm
, 
tmp_co_ôî
,

261 
¥com∑ny
, 
lowªp
, 
highªp
,

262 
±oö
.
_co_«me
));

263 
co_ôî
 = 
tmp_co_ôî
;

265 
boﬁ
 
eof
;

266 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:co-ôî-√xà\n", 
x˘_id
);

267 
	`W_DO
(
co_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥com∑ny
));

268 
¥com∑ny
->
	`gë_vÆue
(0, 
co_id
);

282 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
£curôy_t
> > 
s_ôî
;

284 
ödex_sˇn_ôî_im∂
<
£curôy_t
>* 
tmp_s_ôî
;

285 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:s-get-iter-by-idx2 (%ld) (%s) \n",

286 
x˘_id
, 
co_id
, 
±oö
.
_issue
);

287 
	`W_DO
(
_p£curôy_m™
->
	`s_gë_ôî_by_ödex4
(
_pssm
, 
tmp_s_ôî
,

288 
¥£curôy
, 
lowªp
, 
highªp
,

289 
co_id
, 
±oö
.
_issue
));

290 
s_ôî
 = 
tmp_s_ôî
;

292 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:s-ôî-√xà\n", 
x˘_id
);

293 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

294 !
eof
){

295 
¥£curôy
->
	`gë_vÆue
(0, 
symbﬁ
, 16);

296 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
, 71);

297 
¥£curôy
->
	`gë_vÆue
(4, 
exch_id
, 7);

298 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:s-ôî-√xà\n", 
x˘_id
);

299 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥£curôy
));

312 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:s-idx-¥obê(%sË\n", 
x˘_id
, 
symbﬁ
);

313 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
symbﬁ
));

314 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
, 71);

315 
¥£curôy
->
	`gë_vÆue
(4, 
exch_id
, 7);

316 
¥£curôy
->
	`gë_vÆue
(5, 
co_id
);

326 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:co-idx-¥obê(%ldË\n", 
x˘_id
, 
co_id
);

327 
	`W_DO
(
_pcom∑ny_m™
->
	`co_ödex_¥obe
(
_pssm
, 
¥com∑ny
, 
co_id
));

328 
¥com∑ny
->
	`gë_vÆue
(2, 
co_«me
, 61);

339 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:…-idx-¥obê(%sË\n", 
x˘_id
, 
symbﬁ
);

340 
	`W_DO
(
_∂a°_åade_m™
->
	`…_ödex_¥obe
(
_pssm
, 
¥œ°åade
, 
symbﬁ
));

341 
¥œ°åade
->
	`gë_vÆue
(2, 
m¨kë_¥i˚
);

353 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:tt-idx-probe (%s) \n",

354 
x˘_id
, 
±oö
.
_åade_ty≥_id
);

355 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
,

356 
±oö
.
_åade_ty≥_id
));

357 
¥åadëy≥
->
	`gë_vÆue
(2, 
ty≥_is_£Œ
);

358 
¥åadëy≥
->
	`gë_vÆue
(3, 
ty≥_is_m¨kë
);

360 if(
ty≥_is_m¨kë
){

361 
ªque°ed_¥i˚
 = 
m¨kë_¥i˚
;

364 
hﬁd_¥i˚
;

365 
hﬁd_qty
;

366 
√eded_qty
 = 
±oö
.
_åade_qty
;

367 
hs_qty
 = -1;

369 
buy_vÆue
 = 0;

370 
£Œ_vÆue
 = 0;

381 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:hs-idx-probe (%ld) (%s) \n",

382 
x˘_id
, 
±oö
.
_ac˘_id
, 
symbﬁ
);

383 if((
_phﬁdög_summ¨y_m™
->
	`hs_ödex_¥obe
(
_pssm
,

384 
¥hﬁdögsumm¨y
,

385 
±oö
.
_ac˘_id
,

386 
symbﬁ
)).
	`is_îr‹
()) {

387 
hs_qty
 = 0;

389 
¥hﬁdögsumm¨y
->
	`gë_vÆue
(2, 
hs_qty
);

403 if((
ty≥_is_£Œ
 && 
hs_qty
 > 0) || (!type_is_sell && hs_qty < 0)) {

404 
gu¨d
<
ödex_sˇn_ôî_im∂
<
hﬁdög_t
> > 
h_ôî
;

405 if(
±oö
.
_is_lifo
){

413 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

414 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:h-iter-by-idx2 (%ld) (%s) \n",

415 
x˘_id
, 
±oö
.
_ac˘_id
, 
symbﬁ
);

416 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

417 
¥hﬁdög
, 
lowªp
,

418 
highªp
, 
±oö
.
_ac˘_id
,

419 
symbﬁ
, 
åue
));

420 
h_ôî
 = 
tmp_h_ôî
;

430 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

431 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:h-ôî-by-idx2 \n", 
x˘_id
);

432 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

433 
¥hﬁdög
, 
lowªp
,

434 
highªp
, 
±oö
.
_ac˘_id
,

435 
symbﬁ
));

436 
h_ôî
 = 
tmp_h_ôî
;

440 
boﬁ
 
eof
;

441 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:h-ôî-√xà\n", 
x˘_id
);

442 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

443 
√eded_qty
 !0 && !
eof
) {

444 
hﬁd_qty
;

445 
hﬁd_¥i˚
;

447 
¥hﬁdög
->
	`gë_vÆue
(4, 
hﬁd_¥i˚
);

448 
¥hﬁdög
->
	`gë_vÆue
(5, 
hﬁd_qty
);

450 if(
ty≥_is_£Œ
) {

451 if(
hﬁd_qty
 > 
√eded_qty
) {

452 
buy_vÆue
 +
√eded_qty
 * 
hﬁd_¥i˚
;

453 
£Œ_vÆue
 +
√eded_qty
 * 
ªque°ed_¥i˚
;

454 
√eded_qty
 = 0;

456 
buy_vÆue
 +
hﬁd_qty
 * 
hﬁd_¥i˚
;

457 
£Œ_vÆue
 +
hﬁd_qty
 * 
ªque°ed_¥i˚
;

458 
√eded_qty
 =Çìded_qty - 
hﬁd_qty
;

461 if(
hﬁd_qty
 + 
√eded_qty
 < 0){

462 
£Œ_vÆue
 +
√eded_qty
 * 
hﬁd_¥i˚
;

463 
buy_vÆue
 +
√eded_qty
 * 
ªque°ed_¥i˚
;

464 
√eded_qty
 = 0;

466 
hﬁd_qty
 = -hold_qty;

467 
£Œ_vÆue
 +
hﬁd_qty
 * 
hﬁd_¥i˚
;

468 
buy_vÆue
 +
hﬁd_qty
 * 
ªque°ed_¥i˚
;

469 
√eded_qty
 =Çìded_qty - 
hﬁd_qty
;

472 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:h-ôî-√xà\n", 
x˘_id
);

473 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

477 if((
£Œ_vÆue
 > 
buy_vÆue
Ë&& ((
èx_°©us
 == 1 ||Åax_status == 2))) {

478 
èx_øãs
;

494 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
> > 
cx_ôî
;

496 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
>* 
tmp_cx_ôî
;

497 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:cx-get-iter-by-idx (%ld) \n",

498 
x˘_id
, 
cu°_id
);

499 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`cx_gë_ôî_by_ödex
(
_pssm
, 
tmp_cx_ôî
,

500 
¥cu°èxøã
,

501 
lowªp
, 
highªp
,

502 
cu°_id
));

503 
cx_ôî
 = 
tmp_cx_ôî
;

506 
boﬁ
 
eof
;

507 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:cx-ôî-√xà\n", 
x˘_id
);

508 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

509 !
eof
) {

510 
èx_id
[5];

511 
¥cu°èxøã
->
	`gë_vÆue
(0, 
èx_id
, 5);

513 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:tx-idx-probe (%s) \n",

514 
x˘_id
, 
èx_id
);

515 
	`W_DO
(
_±axøã_m™
->
	`tx_ödex_¥obe
(
_pssm
, 
¥èxøã
, 
èx_id
));

517 
øã
;

518 
¥èxøã
->
	`gë_vÆue
(2, 
øã
);

519 
èx_øãs
 +
øã
;

521 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:cx-ôî-√xà\n", 
x˘_id
);

522 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

524 
èx_amou¡
 = (
£Œ_vÆue
 - 
buy_vÆue
Ë* 
èx_øãs
;

540 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
commissi⁄_øã_t
> > 
¸_ôî
;

542 
ödex_sˇn_ôî_im∂
<
commissi⁄_øã_t
>* 
tmp_¸_ôî
;

543 
	`TRACE
(
TRACE_TRX_FLOW
, "App: %d TR:cr-iter-by-idx (%d) (%s) (%s) (%d)\n",

544 
x˘_id
, 
cu°_tõr
, 
±oö
.
_åade_ty≥_id
, 
exch_id
,Ötoö.
_åade_qty
);

545 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`¸_gë_ôî_by_ödex
(
_pssm
, 
tmp_¸_ôî
,

546 
¥commøã
, 
lowªp
,

547 
highªp
, 
cu°_tõr
,

548 
±oö
.
_åade_ty≥_id
,

549 
exch_id
,

550 
±oö
.
_åade_qty
));

551 
¸_ôî
 = 
tmp_¸_ôî
;

554 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:¸-ôî-√xà\n", 
x˘_id
);

555 
	`W_DO
(
¸_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥commøã
));

556 !
eof
) {

557 
to_qty
;

558 
¥commøã
->
	`gë_vÆue
(4, 
to_qty
);

560 if(
to_qty
 >
±oö
.
_åade_qty
){

561 
¥commøã
->
	`gë_vÆue
(5, 
comm_øã
);

565 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:¸-ôî-√xà\n", 
x˘_id
);

566 
	`W_DO
(
¸_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥commøã
));

579 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:ch-idx-probe (%d) (%s) \n",

580 
x˘_id
, 
cu°_tõr
, 
±oö
.
_åade_ty≥_id
);

581 
	`W_DO
(
_pch¨ge_m™
->
	`ch_ödex_¥obe
(
_pssm
, 
¥ch¨ge
, 
cu°_tõr
,

582 
±oö
.
_åade_ty≥_id
));

583 
¥ch¨ge
->
	`gë_vÆue
(2, 
ch¨ge_amou¡
);

585 
hﬁd_as£ts
 = 0;

586 
cu°_as£ts
 = 0;

588 if(
±oö
.
_ty≥_is_m¨gö
) {

619 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
> > 
hs_ôî
;

621 
ödex_sˇn_ôî_im∂
<
hﬁdög_summ¨y_t
>* 
tmp_hs_ôî
;

622 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:hs-iter-by-idx (%ld) \n",

623 
x˘_id
, 
±oö
.
_ac˘_id
);

624 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`hs_gë_ôî_by_ödex
(
_pssm
, 
tmp_hs_ôî
,

625 
¥hﬁdögsumm¨y
,

626 
lowªp
, 
highªp
,

627 
±oö
.
_ac˘_id
));

628 
hs_ôî
 = 
tmp_hs_ôî
;

631 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:hs-ôî-√xà\n", 
x˘_id
);

632 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdögsumm¨y
));

633 !
eof
) {

634 
symb
[16];

635 
¥hﬁdögsumm¨y
->
	`gë_vÆue
(1, 
symb
, 16);

636 
hs_qty
;

637 
¥hﬁdögsumm¨y
->
	`gë_vÆue
(2, 
hs_qty
);

639 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ:%d TO:…-idx-¥obê(%s)\n", 
x˘_id
, 
symb
);

640 
	`W_DO
(
_∂a°_åade_m™
->
	`…_ödex_¥obe
(
_pssm
, 
¥œ°åade
, 
symb
));

642 
…_¥i˚
;

643 
¥œ°åade
->
	`gë_vÆue
(3, 
…_¥i˚
);

644 
hﬁd_as£ts
 +(
…_¥i˚
 * 
hs_qty
);

646 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:hs-ôî-√xà\n", 
x˘_id
);

647 
	`W_DO
(
hs_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdögsumm¨y
));

649 
cu°_as£ts
 = 
hﬁd_as£ts
 + 
ac˘_bÆ
;

653 i‡(
ty≥_is_m¨kë
) {

654 
	`°r˝y
(
°©us_id
, 
±oö
.
_°_submôãd_id
);

656 
	`°r˝y
(
°©us_id
, 
±oö
.
_°_≥ndög_id
);

660 if((
£Œ_vÆue
 > 
buy_vÆue
) &&

661 ((
èx_°©us
 =1Ë|| (èx_°©u†=2)Ë&& (
èx_amou¡
 == 0)) {

662 
	`as£π
(
Ál£
);

663 } if(
comm_øã
 == 0.0000) {

664 
	`as£π
(
Ál£
);

665 } if(
ch¨ge_amou¡
 == 0) {

666 
	`as£π
(
Ál£
);

669 
comm_amou¡
 = (
comm_øã
/100Ë* 
±oö
.
_åade_qty
 * 
ªque°ed_¥i˚
;

670 
exec_«me
[50];

671 
	`°r˝y
(
exec_«me
, 
±oö
.
_exec_f_«me
);

672 
	`°rˇt
(
exec_«me
, " ");

673 
	`°rˇt
(
exec_«me
, 
±oö
.
_exec_l_«me
);

674 
boﬁ
 
is_ˇsh
 = !
±oö
.
_ty≥_is_m¨gö
;

675 
TIdít
 
åade_id
;

678 
myTime
 
now_dts
 = 
	`time
(
NULL
);

680 
åade_id
 = (Ë
	`©omic_öc_64_nv
(&
œ°TødeId
);

703 
¥åade
->
	`£t_vÆue
(0, 
åade_id
);

704 
¥åade
->
	`£t_vÆue
(1, 
now_dts
);

705 
¥åade
->
	`£t_vÆue
(2, 
°©us_id
);

706 
¥åade
->
	`£t_vÆue
(3, 
±oö
.
_åade_ty≥_id
);

707 
¥åade
->
	`£t_vÆue
(4, 
is_ˇsh
);

708 
¥åade
->
	`£t_vÆue
(5, 
symbﬁ
);

709 
¥åade
->
	`£t_vÆue
(6, 
±oö
.
_åade_qty
);

710 
¥åade
->
	`£t_vÆue
(7, 
ªque°ed_¥i˚
);

711 
¥åade
->
	`£t_vÆue
(8, 
±oö
.
_ac˘_id
);

712 
¥åade
->
	`£t_vÆue
(9, 
exec_«me
);

713 
¥åade
->
	`£t_vÆue
(10, ()-1);

714 
¥åade
->
	`£t_vÆue
(11, 
ch¨ge_amou¡
);

715 
¥åade
->
	`£t_vÆue
(12, 
comm_amou¡
);

716 
¥åade
->
	`£t_vÆue
(13, ()0);

717 
¥åade
->
	`£t_vÆue
(14, 
±oö
.
_is_lifo
);

719 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:t-add-tu∂ê(%ldË\n", 
x˘_id
, 
åade_id
);

720 
	`W_DO
(
_±øde_m™
->
	`add_tu∂e
(
_pssm
, 
¥åade
));

722 if(!
ty≥_is_m¨kë
) {

734 
¥åadîeq
->
	`£t_vÆue
(0, 
åade_id
);

735 
¥åadîeq
->
	`£t_vÆue
(1, 
±oö
.
_åade_ty≥_id
);

736 
¥åadîeq
->
	`£t_vÆue
(2, 
symbﬁ
);

737 
¥åadîeq
->
	`£t_vÆue
(3, 
±oö
.
_åade_qty
);

738 
¥åadîeq
->
	`£t_vÆue
(4, 
ªque°ed_¥i˚
);

739 
¥åadîeq
->
	`£t_vÆue
(5, 
brokî_id
);

741 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TO:tr-add-tuple (%ld) \n",

742 
x˘_id
, 
åade_id
);

743 
	`W_DO
(
_±øde_ªque°_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadîeq
));

753 
¥åadehi°
->
	`£t_vÆue
(0, 
åade_id
);

754 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

755 
¥åadehi°
->
	`£t_vÆue
(2, 
°©us_id
);

757 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:th-add-tu∂ê(%ldË\n", 
x˘_id
, 
åade_id
);

758 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

762 if(
±oö
.
_rﬁl_ô_back
) {

763 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:ROLLBACK \n", 
x˘_id
);

764 
	`W_DO
(
	`RC
(
£_NOT_FOUND
));

770 
PTødeReque°
 
ªq
 = 
√w
 
	`TTødeReque°
();

771 
ªq
->
åade_id
 =Årade_id;

772 
ªq
->
åade_qty
 = 
±oö
.
_åade_qty
;

773 
	`°r˝y
(
ªq
->
symbﬁ
, symbol);

774 
	`°r˝y
(
ªq
->
åade_ty≥_id
, 
±oö
.
_åade_ty≥_id
);

775 
ªq
->
¥i˚_quŸe
 = 
ªque°ed_¥i˚
;

776 if(
ty≥_is_m¨kë
) {

777 
ªq
->
eA˘i⁄
=
eMEEPro˚ssOrdî
;

779 
ªq
->
eA˘i⁄
=
eMEESëLimôOrdîTriggî
;

781 
mì
->
	`SubmôTødeReque°
(
ªq
);

782 
dñëe
 
ªq
;

785 #ifde‡
PRINT_TRX_RESULTS


788 
rcu°ac˘
.
	`¥öt_tu∂e
();

789 
rcu°
.
	`¥öt_tu∂e
();

790 
rbrok
.
	`¥öt_tu∂e
();

791 
øc˘≥rm
.
	`¥öt_tu∂e
();

792 
πøde
.
	`¥öt_tu∂e
();

793 
πødîeq
.
	`¥öt_tu∂e
();

794 
πødehi°
.
	`¥öt_tu∂e
();

795 
rcom∑ny
.
	`¥öt_tu∂e
();

796 
r£curôy
.
	`¥öt_tu∂e
();

797 
æa°åade
.
	`¥öt_tu∂e
();

798 
πødëy≥
.
	`¥öt_tu∂e
();

799 
rhﬁdögsumm¨y
.
	`¥öt_tu∂e
();

800 
rhﬁdög
.
	`¥öt_tu∂e
();

801 
rch¨ge
.
	`¥öt_tu∂e
();

802 
rcu°èxøã
.
	`¥öt_tu∂e
();

803 
πaxøã
.
	`¥öt_tu∂e
();

804 
rcommøã
.
	`¥öt_tu∂e
();

807  
RCOK
;

809 
	}
}

812 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_result.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

50 
ENTER_NAMESPACE
(
ç˚
);

58 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_ªsu…
(c⁄° 
x˘_id
,

59 
åade_ªsu…_öput_t
& 
±rö
)

62 if(
±rö
.
_åade_¥i˚
 == -1) {

63 
	`©omic_öc_uöt_nv
(&
_num_övÆid_öput
);

64  (
RCOK
);

68 
	`as£π
 (
_pssm
);

69 
	`as£π
 (
_öôülized
);

70 
	`as£π
 (
_lﬂded
);

72 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

73 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥åadëy≥
(
_±øde_ty≥_m™
);

74 
tu∂e_gu¨d
<
hﬁdög_summ¨y_m™_im∂
> 
	`¥hﬁdögsumm¨y
(
_phﬁdög_summ¨y_m™
);

75 
tu∂e_gu¨d
<
cu°omî_accou¡_m™_im∂
> 
	`¥cu°accou¡
(
_pcu°omî_accou¡_m™
);

76 
tu∂e_gu¨d
<
hﬁdög_m™_im∂
> 
	`¥hﬁdög
(
_phﬁdög_m™
);

77 
tu∂e_gu¨d
<
hﬁdög_hi°‹y_m™_im∂
> 
	`¥hﬁdöghi°‹y
(
_phﬁdög_hi°‹y_m™
);

78 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

79 
tu∂e_gu¨d
<
brokî_m™_im∂
> 
	`¥brokî
(
_pbrokî_m™
);

80 
tu∂e_gu¨d
<
£âÀmít_m™_im∂
> 
	`¥£âÀmít
(
_p£âÀmít_m™
);

81 
tu∂e_gu¨d
<
ˇsh_å™ß˘i⁄_m™_im∂
> 
	`¥ˇshå™s
(
_pˇsh_å™ß˘i⁄_m™
);

82 
tu∂e_gu¨d
<
commissi⁄_øã_m™_im∂
> 
	`¥commissi⁄øã
(
_pcommissi⁄_øã_m™
);

83 
tu∂e_gu¨d
<
cu°omî_èxøã_m™_im∂
> 
	`¥cu°èxøã
(
_pcu°omî_èxøã_m™
);

84 
tu∂e_gu¨d
<
èxøã_m™_im∂
> 
	`¥èxøã
(
_±axøã_m™
);

85 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

86 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

88 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

90 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

92 
¥åade
->
_ªp
 = &
¨ïrow
;

93 
¥åadëy≥
->
_ªp
 = &
¨ïrow
;

94 
¥hﬁdögsumm¨y
->
_ªp
 = &
¨ïrow
;

95 
¥cu°accou¡
->
_ªp
 = &
¨ïrow
;

96 
¥hﬁdög
->
_ªp
 = &
¨ïrow
;

97 
¥hﬁdöghi°‹y
->
_ªp
 = &
¨ïrow
;

98 
¥£curôy
->
_ªp
 = &
¨ïrow
;

99 
¥brokî
->
_ªp
 = &
¨ïrow
;

100 
¥£âÀmít
->
_ªp
 = &
¨ïrow
;

101 
¥ˇshå™s
->
_ªp
 = &
¨ïrow
;

102 
¥commissi⁄øã
->
_ªp
 = &
¨ïrow
;

103 
¥cu°èxøã
->
_ªp
 = &
¨ïrow
;

104 
¥èxøã
->
_ªp
 = &
¨ïrow
;

105 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

106 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

108 
ªp_row_t
 
	`lowªp
(
_pcu°omî_m™
->
	`ts
());

109 
ªp_row_t
 
	`highªp
(
_pcu°omî_m™
->
	`ts
());

111 
lowªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

112 
highªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

114 
åade_qty
;

115 
TIdít
 
ac˘_id
 = -1;

116 
boﬁ
 
ty≥_is_£Œ
;

117 
hs_qty
 = -1;

118 
symbﬁ
[16];

119 
boﬁ
 
is_lifo
;

120 
ty≥_id
[4];

121 
boﬁ
 
åade_is_ˇsh
;

122 
ty≥_«me
[13];

123 
ch¨ge
;

134 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:t-idx-probe (%ld) \n",

135 
x˘_id
, 
±rö
.
_åade_id
);

136 
w_rc_t
 
e
 = 
_±øde_m™
->
	`t_ödex_¥obe
(
_pssm
, 
¥åade
, 
±rö
.
_åade_id
);

137 if(
e
.
	`is_îr‹
()) {

138 
	`as£π
(
e
.
	`îr_num
(Ë!
£_TUPLE_NOT_FOUND
);

139 
	`W_DO
(
e
);

141 
¥åade
->
	`gë_vÆue
(3, 
ty≥_id
, 4);

142 
¥åade
->
	`gë_vÆue
(4, 
åade_is_ˇsh
);

143 
¥åade
->
	`gë_vÆue
(5, 
symbﬁ
, 16);

144 
¥åade
->
	`gë_vÆue
(6, 
åade_qty
);

145 
¥åade
->
	`gë_vÆue
(8, 
ac˘_id
);

146 
¥åade
->
	`gë_vÆue
(11, 
ch¨ge
);

147 
¥åade
->
	`gë_vÆue
(14, 
is_lifo
);

155 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:â-idx-¥obê(%sË\n", 
x˘_id
, 
ty≥_id
);

156 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
, 
ty≥_id
));

158 
¥åadëy≥
->
	`gë_vÆue
(1, 
ty≥_«me
, 13);

159 
¥åadëy≥
->
	`gë_vÆue
(2, 
ty≥_is_£Œ
);

160 
boﬁ
 
ty≥_is_m¨kë
;

161 
¥åadëy≥
->
	`gë_vÆue
(3, 
ty≥_is_m¨kë
);

168 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-idx-probe (%ld) (%s) \n",

169 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

170 
e
 = 
_phﬁdög_summ¨y_m™
->
	`hs_ödex_¥obe
(
_pssm
, 
¥hﬁdögsumm¨y
,

171 
ac˘_id
, 
symbﬁ
);

172 i‡(
e
.
	`is_îr‹
()) {

173 
hs_qty
=0;

175 
¥hﬁdögsumm¨y
->
	`gë_vÆue
(2, 
hs_qty
);

177 if(
hs_qty
 == -1){

178 
hs_qty
 = 0;

182 
TIdít
 
cu°_id
;

183 
buy_vÆue
 = 0;

184 
£Œ_vÆue
 = 0;

185 
myTime
 
åade_dts
 = 
	`time
(
NULL
);

186 
TIdít
 
brokî_id
;

187 
èx_°©us
;

190 
TIdít
 
hﬁd_id
;

191 
hﬁd_¥i˚
;

192 
hﬁd_qty
;

193 
√eded_qty
 = 
åade_qty
;

194 
uöt
 
num_dñëed
 = 0;

202 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:ˇ-idx-¥obê(%ldË\n", 
x˘_id
, 
ac˘_id
);

203 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_ödex_¥obe
(
_pssm
, 
¥cu°accou¡
, 
ac˘_id
));

205 
¥cu°accou¡
->
	`gë_vÆue
(1, 
brokî_id
);

206 
¥cu°accou¡
->
	`gë_vÆue
(2, 
cu°_id
);

207 
¥cu°accou¡
->
	`gë_vÆue
(4, 
èx_°©us
);

209 if(
ty≥_is_£Œ
){

210 if(
hs_qty
 == 0){

215 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(0, 
ac˘_id
);

216 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(1, 
symbﬁ
);

217 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(2, -1*
åade_qty
);

219 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-add-tuple (%ld) \n",

220 
x˘_id
, 
ac˘_id
);

221 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdögsumm¨y
));

222 } if(
hs_qty
 !
åade_qty
) {

228 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-update (%ld) (%s) (%d) \n",

229 
x˘_id
, 
ac˘_id
, 
symbﬁ
, (
hs_qty
 - 
åade_qty
));

230 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`hs_upd©e_qty
(
_pssm
, 
¥hﬁdögsumm¨y
,

231 
ac˘_id
, 
symbﬁ
,

232 (
hs_qty
 - 
åade_qty
)));

238 i‡(
hs_qty
 > 0) {

239 
gu¨d
<
ödex_sˇn_ôî_im∂
<
hﬁdög_t
> > 
h_ôî
;

240 
asc_s‹t_sˇn_t
* 
h_li°_s‹t_ôî
;

242 i‡(
is_lifo
) {

251 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

252 
	`TRACE
–
TRACE_TRX_FLOW
,

254 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

255 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

256 
¥hﬁdög
, 
lowªp
,

257 
highªp
, 
ac˘_id
,

258 
symbﬁ
, 
åue
));

259 
h_ôî
 = 
tmp_h_ôî
;

269 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

270 
	`TRACE
–
TRACE_TRX_FLOW
,

272 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

273 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

274 
¥hﬁdög
, 
lowªp
,

275 
highªp
, 
ac˘_id
,

276 
symbﬁ
));

277 
h_ôî
 = 
tmp_h_ôî
;

286 
boﬁ
 
eof
;

287 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

288 
√eded_qty
 !=0 && !
eof
) {

289 
TIdít
 
hﬁd_id
;

290 
hﬁd_qty
;

291 
hﬁd_¥i˚
;

293 
¥hﬁdög
->
	`gë_vÆue
(0, 
hﬁd_id
);

294 
¥hﬁdög
->
	`gë_vÆue
(4, 
hﬁd_¥i˚
);

295 
¥hﬁdög
->
	`gë_vÆue
(5, 
hﬁd_qty
);

373 if(
hﬁd_qty
 > 
√eded_qty
){

374 
	`TRACE
–
TRACE_TRX_FLOW
,

376 
x˘_id
, 
ac˘_id
, 
symbﬁ
, (
hs_qty
 - 
åade_qty
));

377 
	`W_DO
(
_phﬁdög_m™
->
	`h_upd©e_qty
(
_pssm
, 
¥hﬁdög
,

378 (
hﬁd_qty
 - 
√eded_qty
)));

380 
±rö
.
_hﬁdög_rid
[
num_dñëed
] = 
¥hﬁdög
->
	`rid
();

381 
num_dñëed
++;

384 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(0, 
hﬁd_id
);

385 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(1, 
±rö
.
_åade_id
);

386 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(2, 
hﬁd_qty
);

387 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(3,

388 (
hﬁd_qty
 > 
√eded_qty
) ? (hold_qty -Çeeded_qty) : 0);

390 
	`TRACE
–
TRACE_TRX_FLOW
,

392 
x˘_id
, 
hﬁd_id
, 
±rö
.
_åade_id
, 
hﬁd_¥i˚
,

393 ((
hﬁd_qty
 > 
√eded_qty
) ? (hold_qty -Çeeded_qty) : 0));

394 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdöghi°‹y
));

396 if(
hﬁd_qty
 > 
√eded_qty
) {

397 
buy_vÆue
 +
√eded_qty
 * 
hﬁd_¥i˚
;

398 
£Œ_vÆue
 +
√eded_qty
 * 
±rö
.
_åade_¥i˚
;

399 
√eded_qty
 = 0;

401 
buy_vÆue
 +
hﬁd_qty
 * 
hﬁd_¥i˚
;

402 
£Œ_vÆue
 +
hﬁd_qty
 * 
±rö
.
_åade_¥i˚
;

403 
√eded_qty
 =Çìded_qty - 
hﬁd_qty
;

406 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hold-list (%ld)\n",

407 
x˘_id
, 
hﬁd_id
);

408 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

411 
uöt
 
i
=0; i<
num_dñëed
; i++) {

412 
	`TRACE
(
TRACE_TRX_FLOW
,

413 "%d - TR:h-dñëe-tu∂ê- (%d).(%d).(%d).(%d)\n", 
x˘_id
,

414 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
	`vﬁ
().
vﬁ
,

415 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
	`°‹e
(),

416 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
∑ge
,

417 (
±rö
.
_hﬁdög_rid
[
i
]).
¶Ÿ
);

418 
	`W_DO
(
_phﬁdög_m™
->
	`h_dñëe_tu∂e
(
_pssm
, 
¥hﬁdög
,

419 
±rö
.
_hﬁdög_rid
[
i
]));

429 if(
√eded_qty
 > 0) {

445 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

446 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(1, 
±rö
.
_åade_id
);

447 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(2, 0);

448 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(3, (-1Ë* 
√eded_qty
);

450 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hh-add-tuple (%ld)(%ld)(%d)(%d)\n",

451 
x˘_id
, 
±rö
.
_åade_id
,Öåö._åade_id, 0, (-1Ë* 
√eded_qty
);

452 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdöghi°‹y
));

473 
¥hﬁdög
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

474 
¥hﬁdög
->
	`£t_vÆue
(1, 
ac˘_id
);

475 
¥hﬁdög
->
	`£t_vÆue
(2, 
symbﬁ
);

476 
¥hﬁdög
->
	`£t_vÆue
(3, 
åade_dts
);

477 
¥hﬁdög
->
	`£t_vÆue
(4, 
±rö
.
_åade_¥i˚
);

478 
¥hﬁdög
->
	`£t_vÆue
(5, (-1Ë* 
√eded_qty
);

480 
	`TRACE
–
TRACE_TRX_FLOW
,

482 
x˘_id
, 
±rö
.
_åade_id
, 
ac˘_id
, 
symbﬁ
, 
åade_dts
,

483 
±rö
.
_åade_¥i˚
, (-1Ë* 
√eded_qty
);

484 
	`W_DO
(
_phﬁdög_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdög
));

485 } i‡(
hs_qty
 =
åade_qty
) {

490 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-delete-tuple (%ld) (%s) \n",

491 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

492 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥hﬁdögsumm¨y
));

495 i‡(
hs_qty
 == 0) {

508 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(0, 
ac˘_id
);

509 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(1, 
symbﬁ
);

510 
¥hﬁdögsumm¨y
->
	`£t_vÆue
(2, 
åade_qty
);

512 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-add-tuple (%ld) \n",

513 
x˘_id
, 
ac˘_id
);

514 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdögsumm¨y
));

515 } i‡(-
hs_qty
 !
åade_qty
) {

521 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:holdsumm-update (%ld) (%s) (%d) \n",

522 
x˘_id
, 
ac˘_id
, 
symbﬁ
, (
hs_qty
 + 
åade_qty
));

523 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`hs_upd©e_qty
(
_pssm
, 
¥hﬁdögsumm¨y
,

524 
ac˘_id
, 
symbﬁ
,

525 (
hs_qty
 + 
åade_qty
)));

533 if(
hs_qty
 < 0) {

534 
gu¨d
<
ödex_sˇn_ôî_im∂
<
hﬁdög_t
> > 
h_ôî
;

535 
asc_s‹t_sˇn_t
* 
h_li°_s‹t_ôî
;

537 if(
is_lifo
) {

545 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

546 
	`TRACE
–
TRACE_TRX_FLOW
,

548 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

549 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

550 
¥hﬁdög
, 
lowªp
,

551 
highªp
, 
ac˘_id
,

552 
symbﬁ
, 
åue
));

553 
h_ôî
 = 
tmp_h_ôî
;

563 
ödex_sˇn_ôî_im∂
<
hﬁdög_t
>* 
tmp_h_ôî
;

564 
	`TRACE
–
TRACE_TRX_FLOW
,

566 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

567 
	`W_DO
(
_phﬁdög_m™
->
	`h_gë_ôî_by_ödex2
(
_pssm
, 
tmp_h_ôî
,

568 
¥hﬁdög
, 
lowªp
,

569 
highªp
, 
ac˘_id
,

570 
symbﬁ
));

571 
h_ôî
 = 
tmp_h_ôî
;

575 
boﬁ
 
eof
;

576 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

577 
√eded_qty
!=0 && !
eof
) {

578 
TIdít
 
hﬁd_id
;

579 
hﬁd_qty
;

580 
hﬁd_¥i˚
;

582 
¥hﬁdög
->
	`gë_vÆue
(0, 
hﬁd_id
);

583 
¥hﬁdög
->
	`gë_vÆue
(4, 
hﬁd_¥i˚
);

584 
¥hﬁdög
->
	`gë_vÆue
(5, 
hﬁd_qty
);

634 if(
hﬁd_qty
 + 
√eded_qty
 < 0) {

635 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:h-update (%ld) (%s) (%d)\n",

636 
x˘_id
, 
ac˘_id
, 
symbﬁ
, (
hs_qty
 + 
åade_qty
));

637 
	`W_DO
(
_phﬁdög_m™
->
	`h_upd©e_qty
(
_pssm
, 
¥hﬁdög
,

638 (
hﬁd_qty
 + 
√eded_qty
)));

640 
±rö
.
_hﬁdög_rid
[
num_dñëed
] = 
¥hﬁdög
->
	`rid
();

641 
num_dñëed
++;

644 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(0, 
hﬁd_id
);

645 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(1, 
±rö
.
_åade_id
);

646 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(2, 
hﬁd_qty
);

647 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(3,

648 (
hﬁd_qty
 + 
√eded_qty
 < 0) ? (hold_qty +Çeeded_qty) : 0);

650 
	`TRACE
–
TRACE_TRX_FLOW
,

652 
x˘_id
, 
hﬁd_id
, 
±rö
.
_åade_id
, 
hﬁd_¥i˚
,

653 (
hﬁd_qty
 + 
√eded_qty
));

654 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdöghi°‹y
));

656 if(
hﬁd_qty
 + 
√eded_qty
 < 0) {

657 
£Œ_vÆue
 +
√eded_qty
 * 
hﬁd_¥i˚
;

658 
buy_vÆue
 +
√eded_qty
 * 
±rö
.
_åade_¥i˚
;

659 
√eded_qty
 = 0;

661 
hﬁd_qty
 = -hold_qty;

662 
£Œ_vÆue
 +
hﬁd_qty
 * 
hﬁd_¥i˚
;

663 
buy_vÆue
 +
hﬁd_qty
 * 
±rö
.
_åade_¥i˚
;

664 
√eded_qty
 =Çìded_qty - 
hﬁd_qty
;

667 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hold-list (%ld) \n",

668 
x˘_id
, 
hﬁd_id
);

669 
	`W_DO
(
h_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥hﬁdög
));

672 
uöt
 
i
=0; i<
num_dñëed
; i++) {

673 
	`TRACE
(
TRACE_TRX_FLOW
,

674 "%d - TR:h-dñëe-tu∂ê- (%d).(%d).(%d).(%d)\n", 
x˘_id
,

675 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
	`vﬁ
().
vﬁ
,

676 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
	`°‹e
(),

677 (
±rö
.
_hﬁdög_rid
[
i
]).
pid
.
∑ge
,

678 (
±rö
.
_hﬁdög_rid
[
i
]).
¶Ÿ
);

679 
	`W_DO
(
_phﬁdög_m™
->
	`h_dñëe_tu∂e
(
_pssm
, 
¥hﬁdög
,

680 
±rö
.
_hﬁdög_rid
[
i
]));

690 i‡(
√eded_qty
 > 0){

706 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

707 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(1, 
±rö
.
_åade_id
);

708 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(2, 0);

709 
¥hﬁdöghi°‹y
->
	`£t_vÆue
(3, 
√eded_qty
);

711 
	`TRACE
–
TRACE_TRX_FLOW
,

713 
x˘_id
, 
±rö
.
_åade_id
,Öåö._åade_id, 0, 
√eded_qty
);

714 
	`W_DO
(
_phﬁdög_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdöghi°‹y
));

736 
¥hﬁdög
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

737 
¥hﬁdög
->
	`£t_vÆue
(1, 
ac˘_id
);

738 
¥hﬁdög
->
	`£t_vÆue
(2, 
symbﬁ
);

739 
¥hﬁdög
->
	`£t_vÆue
(3, 
åade_dts
);

740 
¥hﬁdög
->
	`£t_vÆue
(4, 
±rö
.
_åade_¥i˚
);

741 
¥hﬁdög
->
	`£t_vÆue
(5, 
√eded_qty
);

743 
	`TRACE
–
TRACE_TRX_FLOW
,

745 
x˘_id
, 
±rö
.
_åade_id
, 
ac˘_id
, 
symbﬁ
, 
åade_dts
,

746 
±rö
.
_åade_¥i˚
, 
√eded_qty
);

747 
	`W_DO
(
_phﬁdög_m™
->
	`add_tu∂e
(
_pssm
, 
¥hﬁdög
));

748 } i‡((-
hs_qty
Ë=
åade_qty
) {

753 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:hs-delete-tuple (%ld) (%s) \n",

754 
x˘_id
, 
ac˘_id
, 
symbﬁ
);

755 
	`W_DO
(
_phﬁdög_summ¨y_m™
->
	`dñëe_tu∂e
(
_pssm
, 
¥hﬁdögsumm¨y
));

761 
èx_amou¡
 = 0;

762 if((
èx_°©us
 =1 ||Åax_°©u†=2Ë&& (
£Œ_vÆue
 > 
buy_vÆue
)) {

763 
èx_øãs
 = 0;

771 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
> > 
cx_ôî
;

773 
ödex_sˇn_ôî_im∂
<
cu°omî_èxøã_t
>* 
tmp_cx_ôî
;

774 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:ct-iter-by-idx (%ld) \n",

775 
x˘_id
, 
cu°_id
);

776 
	`W_DO
(
_pcu°omî_èxøã_m™
->
	`cx_gë_ôî_by_ödex
(
_pssm
, 
tmp_cx_ôî
,

777 
¥cu°èxøã
,

778 
lowªp
, 
highªp
,

779 
cu°_id
));

780 
cx_ôî
 = 
tmp_cx_ôî
;

782 
boﬁ
 
eof
;

783 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

784 !
eof
) {

785 
èx_id
[5];

786 
¥cu°èxøã
->
	`gë_vÆue
(0, 
èx_id
, 5);

788 
	`TRACE
(
TRACE_TRX_FLOW
,"Aµ: %d TR:tx-idx-¥obê(%s)\n", 
x˘_id
, 
èx_id
);

789 
	`W_DO
(
_±axøã_m™
->
	`tx_ödex_¥obe
(
_pssm
, 
¥èxøã
, 
èx_id
));

791 
øã
;

792 
¥èxøã
->
	`gë_vÆue
(2, 
øã
);

794 
èx_øãs
 +
øã
;

796 
	`W_DO
(
cx_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°èxøã
));

798 
èx_amou¡
 = (
£Œ_vÆue
 - 
buy_vÆue
Ë* 
èx_øãs
;

805 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:t-upd-tax-by-ind (%ld) (%d)\n",

806 
x˘_id
, 
±rö
.
_åade_id
, 
èx_amou¡
);

807 
	`W_DO
(
_±øde_m™
->
	`t_upd©e_èx_by_ödex
(
_pssm
, 
¥åade
, 
±rö
.
_åade_id
,

808 
èx_amou¡
));

809 
	`as£π
(
èx_amou¡
 > 0);

812 
comm_øã
 = 0;

813 
s_«me
[51];

822 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:£curôy-idx-¥obê(%s)\n", 
x˘_id
, 
symbﬁ
);

823 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
symbﬁ
));

825 
s_ex_id
[7];

826 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
, 51);

827 
¥£curôy
->
	`gë_vÆue
(4, 
s_ex_id
, 7);

834 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

836 
ödex_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

837 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:c-get-iter-by-idx3 (%ld) \n",

838 
x˘_id
, 
cu°_id
);

839 
	`W_DO
(
_pcu°omî_m™
->
	`c_gë_ôî_by_ödex3
(
_pssm
, 
tmp_c_ôî
, 
¥cu°omî
,

840 
lowªp
, 
highªp
, 
cu°_id
));

841 
c_ôî
 = 
tmp_c_ôî
;

843 
boﬁ
 
eof
;

844 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:c-ôî-√xà\n", 
x˘_id
);

845 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

847 
c_tõr
;

848 
¥cu°omî
->
	`gë_vÆue
(7, 
c_tõr
);

856 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
commissi⁄_øã_t
> > 
¸_ôî
;

858 
ödex_sˇn_ôî_im∂
<
commissi⁄_øã_t
>* 
tmp_¸_ôî
;

859 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:cr-iter-by-idx (%d) (%s) (%ld) (%d) \n",

860 
x˘_id
, 
c_tõr
, 
ty≥_id
, 
s_ex_id
, 
åade_qty
);

861 
	`W_DO
(
_pcommissi⁄_øã_m™
->
	`¸_gë_ôî_by_ödex
(
_pssm
, 
tmp_¸_ôî
,

862 
¥commissi⁄øã
, 
lowªp
,

863 
highªp
, 
c_tõr
, 
ty≥_id
,

864 
s_ex_id
, 
åade_qty
));

865 
¸_ôî
 = 
tmp_¸_ôî
;

867 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:¸-ôî-√xà\n", 
x˘_id
);

868 
	`W_DO
(
¸_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥commissi⁄øã
));

869 !
eof
) {

870 
to_qty
;

871 
¥commissi⁄øã
->
	`gë_vÆue
(4, 
to_qty
);

872 if(
to_qty
 >
åade_qty
){

873 
¥commissi⁄øã
->
	`gë_vÆue
(5, 
comm_øã
);

876 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:¸-ôî-√xà\n", 
x˘_id
);

877 
	`W_DO
(
¸_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥commissi⁄øã
));

880 
	`as£π
(
comm_øã
 > 0.00);

882 
comm_amou¡
 = (
comm_øã
 / 100Ë* (
åade_qty
 * 
±rö
.
_åade_¥i˚
);

883 
°_com∂ëed_id
[5] = "CMPT";

893 
	`TRACE
–
TRACE_TRX_FLOW
,

895 
x˘_id
, 
±rö
.
_åade_id
, 
comm_amou¡
, 
åade_dts
, 
°_com∂ëed_id
,

896 
±rö
.
_åade_¥i˚
);

897 
	`W_DO
(
_±øde_m™
->
	`t_upd©e_ˇ_td_sci_ç_by_ödex
(
_pssm
, 
¥åade
,

898 
±rö
.
_åade_id
, 
comm_amou¡
,

899 
åade_dts
, 
°_com∂ëed_id
,

900 
±rö
.
_åade_¥i˚
));

909 
myTime
 
now_dts
 = 
	`time
(
NULL
);

911 
¥åadehi°
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

912 
¥åadehi°
->
	`£t_vÆue
(1, 
now_dts
);

913 
¥åadehi°
->
	`£t_vÆue
(2, 
°_com∂ëed_id
);

915 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:th-add-tuple (%ld) \n",

916 
x˘_id
, 
±rö
.
_åade_id
);

917 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`add_tu∂e
(
_pssm
, 
¥åadehi°
));

924 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:broker-upd-ca_td_sci_tp-by-ind (%ld)(%d)\n",

925 
x˘_id
, 
brokî_id
, 
comm_amou¡
);

926 
	`W_DO
(
_pbrokî_m™
->
	`brokî_upd©e_ˇ_¡_by_ödex
(
_pssm
, 
¥brokî
, 
brokî_id
,

927 
comm_amou¡
));

930 
myTime
 
due_d©e
 = 
åade_dts
 + 48*60*60;

931 
£_amou¡
;

932 if(
ty≥_is_£Œ
) {

933 
£_amou¡
 = (
åade_qty
 * 
±rö
.
_åade_¥i˚
Ë- 
ch¨ge
 - 
comm_amou¡
;

935 
£_amou¡
 = -((
åade_qty
 * 
±rö
.
_åade_¥i˚
Ë+ 
ch¨ge
 + 
comm_amou¡
);

937 i‡(
èx_°©us
 == 1){

938 
£_amou¡
 = se_amou¡ - 
èx_amou¡
;

942 
ˇsh_ty≥
[41] = "\0";

943 if(
åade_is_ˇsh
) {

944 
	`°r˝y
 (
ˇsh_ty≥
, "Cash Account");

946 
	`°r˝y
(
ˇsh_ty≥
,"Margin");

963 
¥£âÀmít
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

964 
¥£âÀmít
->
	`£t_vÆue
(1, 
ˇsh_ty≥
);

965 
¥£âÀmít
->
	`£t_vÆue
(2, 
due_d©e
);

966 
¥£âÀmít
->
	`£t_vÆue
(3, 
£_amou¡
);

968 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:se-add-tuple (%ld)\n",

969 
x˘_id
, 
±rö
.
_åade_id
);

970 
	`W_DO
(
_p£âÀmít_m™
->
	`add_tu∂e
(
_pssm
, 
¥£âÀmít
));

972 if(
åade_is_ˇsh
) {

978 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TR:ˇ-upd-tu∂ê(%ld)\n", 
x˘_id
, 
ac˘_id
);

979 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_upd©e_bÆ
(
_pssm
, 
¥cu°accou¡
,

980 
ac˘_id
, 
£_amou¡
));

982 
ac˘_bÆ
;

983 
¥cu°accou¡
->
	`gë_vÆue
(5, 
ac˘_bÆ
);

990 
¥ˇshå™s
->
	`£t_vÆue
(0, 
±rö
.
_åade_id
);

991 
¥ˇshå™s
->
	`£t_vÆue
(1, 
åade_dts
);

992 
¥ˇshå™s
->
	`£t_vÆue
(2, 
£_amou¡
);

993 
°rög°ªam
 
ss
;

994 
ss
 << 
ty≥_«me
 << " " << 
åade_qty
 << " sh¨e†o‡" << 
s_«me
;

995 
¥ˇshå™s
->
	`£t_vÆue
(3, 
ss
.
	`°r
().
	`c_°r
());

997 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TR:ct-add-tuple (%ld) (%ld) (%lf) (%s)\n",

998 
x˘_id
, 
åade_dts
, 
±rö
.
_åade_id
, 
£_amou¡
, 
ss
.
	`°r
().
	`c_°r
());

999 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`add_tu∂e
(
_pssm
, 
¥ˇshå™s
));

1012 
	`TRACE
(
TRACE_TRX_FLOW
,"Aµ: %d TR:ˇ-ödex-¥obê(%ld)\n", 
x˘_id
, 
ac˘_id
);

1013 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_ödex_¥obe
(
_pssm
,
¥cu°accou¡
,
ac˘_id
));

1014 
ac˘_bÆ
;

1015 
¥cu°accou¡
->
	`gë_vÆue
(5, 
ac˘_bÆ
);

1018 #ifde‡
PRINT_TRX_RESULTS


1021 
πøde
.
	`¥öt_tu∂e
();

1022 
πødëy≥
.
	`¥öt_tu∂e
();

1023 
rhﬁdögsumm¨y
.
	`¥öt_tu∂e
();

1024 
rcu°accou¡
.
	`¥öt_tu∂e
();

1025 
rhﬁdög
.
	`¥öt_tu∂e
();

1026 
r£curôy
.
	`¥öt_tu∂e
();

1027 
rbrokî
.
	`¥öt_tu∂e
();

1028 
r£âÀmít
.
	`¥öt_tu∂e
();

1029 
rˇshå™s
.
	`¥öt_tu∂e
();

1030 
rcommussi⁄øã
.
	`¥öt_tu∂e
();

1031 
rcu°èxøã
.
	`¥öt_tu∂e
();

1032 
πaxøã
.
	`¥öt_tu∂e
();

1033 
rcu°omî
.
	`¥öt_tu∂e
();

1034 
πødehi°
.
	`¥öt_tu∂e
();

1037  
RCOK
;

1039 
	}
}

1042 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_status.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_°©us
(c⁄° 
x˘_id
,

57 
åade_°©us_öput_t
& 
±sö
)

60 
	`as£π
 (
_pssm
);

61 
	`as£π
 (
_öôülized
);

62 
	`as£π
 (
_lﬂded
);

64 
tu∂e_gu¨d
<
brokî_m™_im∂
> 
	`¥brokî
(
_pbrokî_m™
);

65 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

66 
tu∂e_gu¨d
<
cu°omî_accou¡_m™_im∂
> 
	`¥cu°ac˘
(
_pcu°omî_accou¡_m™
);

67 
tu∂e_gu¨d
<
exch™ge_m™_im∂
> 
	`¥exch™ge
(
_≥xch™ge_m™
);

68 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

69 
tu∂e_gu¨d
<
°©us_ty≥_m™_im∂
> 
	`¥°©u°y≥
(
_p°©us_ty≥_m™
);

70 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

71 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥åadëy≥
(
_±øde_ty≥_m™
);

73 
ªp_row_t
 
	`¨ïrow
(
_±øde_m™
->
	`ts
());

75 
¨ïrow
.
	`£t
(
_±øde_desc
->
	`maxsize
());

77 
¥brokî
->
_ªp
 = &
¨ïrow
;

78 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

79 
¥cu°ac˘
->
_ªp
 = &
¨ïrow
;

80 
¥exch™ge
->
_ªp
 = &
¨ïrow
;

81 
¥£curôy
->
_ªp
 = &
¨ïrow
;

82 
¥°©u°y≥
->
_ªp
 = &
¨ïrow
;

83 
¥åade
->
_ªp
 = &
¨ïrow
;

84 
¥åadëy≥
->
_ªp
 = &
¨ïrow
;

86 
ªp_row_t
 
	`lowªp
–
_≥xch™ge_m™
->
	`ts
());

87 
ªp_row_t
 
	`highªp
–
_≥xch™ge_m™
->
	`ts
());

90 
lowªp
.
	`£t
(
_≥xch™ge_desc
->
	`maxsize
());

91 
highªp
.
	`£t
(
_≥xch™ge_desc
->
	`maxsize
());

93 
TIdít
 
åade_id
[50];

94 
myTime
 
åade_dts
[50];

95 
°©us_«me
[50][11];

96 
ty≥_«me
[50][13];

97 
symbﬁ
[50][16];

98 
åade_qty
[50];

99 
exec_«me
[50][50];

100 
ch¨ge
[50];

101 
s_«me
[50][71];

102 
ex_«me
[50][101];

131 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

132 
i
 = 0;

133 
boﬁ
 
eof
;

134 
i
 !=
max_åade_°©us_Àn
) {

135 
i
 = 0;

137 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

138 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:t-iter-by-idx2 (%ld) \n",

139 
x˘_id
, 
±sö
.
_ac˘_id
);

140 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex2
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

141 
lowªp
, 
highªp
,

142 
±sö
.
_ac˘_id
, 0, 
MAX_DTS
,

143 
åue
));

144 
t_ôî
 = 
tmp_t_ôî
;

146 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TS:t-ôî-√xà\n", 
x˘_id
);

147 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

148 !
eof
 && 
i
 < 
max_åade_°©us_Àn
) {

149 
¥åade
->
	`gë_vÆue
(0, 
åade_id
[
i
]);

150 
¥åade
->
	`gë_vÆue
(1, 
åade_dts
[
i
]);

151 
¥åade
->
	`gë_vÆue
(5, 
symbﬁ
[
i
], 16);

152 
¥åade
->
	`gë_vÆue
(6, 
åade_qty
[
i
]);

153 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
i
], 50);

154 
¥åade
->
	`gë_vÆue
(11, 
ch¨ge
[
i
]);

155 
t_°_id
[5], 
t_â_id
[4];

156 
¥åade
->
	`gë_vÆue
(2, 
t_°_id
, 5);

157 
¥åade
->
	`gë_vÆue
(3, 
t_â_id
, 4);

159 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:st-idx-probe (%s) \n",

160 
x˘_id
, 
t_°_id
);

161 
	`W_DO
(
_p°©us_ty≥_m™
->
	`°_ödex_¥obe
(
_pssm
, 
¥°©u°y≥
, 
t_°_id
));

162 
¥°©u°y≥
->
	`gë_vÆue
(1, 
°©us_«me
[
i
], 11);

164 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:tt-idx-probe (%s) \n",

165 
x˘_id
, 
t_â_id
);

166 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
, 
t_â_id
));

167 
¥åadëy≥
->
	`gë_vÆue
(1, 
ty≥_«me
[
i
], 13);

169 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:s-idx-probe (%s) \n",

170 
x˘_id
, 
symbﬁ
[
i
]);

171 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
symbﬁ
[
i
]));

172 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
[
i
], 71);

173 
s_ex_id
[7];

174 
¥£curôy
->
	`gë_vÆue
(4, 
s_ex_id
, 7);

176 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:ex-idx-probe (%s) \n",

177 
x˘_id
, 
s_ex_id
);

178 
	`W_DO
(
_≥xch™ge_m™
->
	`ex_ödex_¥obe
(
_pssm
, 
¥exch™ge
, 
s_ex_id
));

179 
¥exch™ge
->
	`gë_vÆue
(1, 
ex_«me
[
i
], 101);

181 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TS:t-ôî-√xà\n", 
x˘_id
);

182 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

183 
i
++;

186 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TS:cou¡-a·î-s‹à%d\n", 
x˘_id
, 
i
);

187 
	`as£π
(
i
 =
max_åade_°©us_Àn
);

203 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TS:ca-idx-probe (%ld) \n",

204 
x˘_id
, 
±sö
.
_ac˘_id
);

205 
	`W_DO
(
_pcu°omî_accou¡_m™
->
	`ˇ_ödex_¥obe
(
_pssm
,
¥cu°ac˘
,
±sö
.
_ac˘_id
));

206 
TIdít
 
ˇ_c_id
, 
ˇ_b_id
;

207 
¥cu°ac˘
->
	`gë_vÆue
(1, 
ˇ_b_id
);

208 
¥cu°ac˘
->
	`gë_vÆue
(2, 
ˇ_c_id
);

210 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
brokî_t
> > 
br_ôî
;

212 
ödex_sˇn_ôî_im∂
<
brokî_t
>* 
tmp_br_ôî
;

213 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d BV:b-get-iter-by-idx3 (%s) \n",

214 
x˘_id
, 
ˇ_b_id
);

215 
	`W_DO
(
_pbrokî_m™
->
	`b_gë_ôî_by_ödex2
(
_pssm
, 
tmp_br_ôî
, 
¥brokî
,

216 
lowªp
, 
highªp
, 
ˇ_b_id
));

217 
br_ôî
 = 
tmp_br_ôî
;

220 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TO:br-ôî-√xà\n", 
x˘_id
);

221 
	`W_DO
(
br_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥brokî
));

222 if(
eof
Ë{ 
	`W_DO
(
	`RC
(
£_NOT_FOUND
)); }

223 
brokî_«me
[50];

224 
¥brokî
->
	`gë_vÆue
(2, 
brokî_«me
, 50);

226 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TS:c-idx-¥obê(%ldË\n", 
x˘_id
, 
ˇ_c_id
);

227 
	`W_DO
(
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°omî
, 
ˇ_c_id
));

228 
cu°_l_«me
[26];

229 
cu°_f_«me
[21];

230 
¥cu°omî
->
	`gë_vÆue
(3, 
cu°_l_«me
, 26);

231 
¥cu°omî
->
	`gë_vÆue
(4, 
cu°_f_«me
, 21);

233 #ifde‡
PRINT_TRX_RESULTS


236 
rbrokî
.
	`¥öt_tu∂e
();

237 
rcu°ac˘
.
	`¥öt_tu∂e
();

238 
rcu°omî
.
	`¥öt_tu∂e
();

239 
ªxch™ge
.
	`¥öt_tu∂e
();

240 
r£curôy
.
	`¥öt_tu∂e
();

241 
r°©u°y≥
.
	`¥öt_tu∂e
();

242 
πøde
.
	`¥öt_tu∂e
();

243 
πødëy≥
.
	`¥öt_tu∂e
();

246  
RCOK
;

248 
	}
}

251 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/shore_tpce_xct_trade_update.cpp

32 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_ív.h
"

33 
	~"w‹klﬂd/ç˚/ç˚_c⁄°.h
"

34 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

36 
	~<ve˘‹
>

37 
	~<numîic
>

38 
	~<Æg‹ôhm
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~"w‹klﬂd/ç˚/egí/CE.h
"

42 
	~"w‹klﬂd/ç˚/egí/TxnH¨√ssSåu˘s.h
"

43 
	~"w‹klﬂd/ç˚/sh‹e_ç˚_egí.h
"

45 
usög
 
«me•a˚
 
	gsh‹e
;

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

56 
w_rc_t
 
	gSh‹eTPCEEnv
::
	$x˘_åade_upd©e
(c⁄° 
x˘_id
, 
åade_upd©e_öput_t
& 
±uö
)

59 
	`as£π
 (
_pssm
);

60 
	`as£π
 (
_öôülized
);

61 
	`as£π
 (
_lﬂded
);

63 
tu∂e_gu¨d
<
ˇsh_å™ß˘i⁄_m™_im∂
> 
	`¥ˇshå™s
(
_pˇsh_å™ß˘i⁄_m™
);

64 
tu∂e_gu¨d
<
£curôy_m™_im∂
> 
	`¥£curôy
(
_p£curôy_m™
);

65 
tu∂e_gu¨d
<
£âÀmít_m™_im∂
> 
	`¥£âÀmít
(
_p£âÀmít_m™
);

66 
tu∂e_gu¨d
<
åade_m™_im∂
> 
	`¥åade
(
_±øde_m™
);

67 
tu∂e_gu¨d
<
åade_ty≥_m™_im∂
> 
	`¥åadëy≥
(
_±øde_ty≥_m™
);

68 
tu∂e_gu¨d
<
åade_hi°‹y_m™_im∂
> 
	`¥åadehi°
(
_±øde_hi°‹y_m™
);

70 
ªp_row_t
 
	`¨ïrow
(
_p£curôy_m™
->
	`ts
());

72 
¨ïrow
.
	`£t
(
_p£curôy_desc
->
	`maxsize
());

74 
¥ˇshå™s
->
_ªp
 = &
¨ïrow
;

75 
¥£curôy
->
_ªp
 = &
¨ïrow
;

76 
¥£âÀmít
->
_ªp
 = &
¨ïrow
;

77 
¥åade
->
_ªp
 = &
¨ïrow
;

78 
¥åadëy≥
->
_ªp
 = &
¨ïrow
;

79 
¥åadehi°
->
_ªp
 = &
¨ïrow
;

81 
ªp_row_t
 
	`lowªp
–
_p£curôy_m™
->
	`ts
());

82 
ªp_row_t
 
	`highªp
–
_p£curôy_m™
->
	`ts
());

85 
lowªp
.
	`£t
(
_p£curôy_desc
->
	`maxsize
());

86 
highªp
.
	`£t
(
_p£curôy_desc
->
	`maxsize
());

88 
max_åades
 = 
±uö
.
_max_åades
;

89 
num_found
 = 0;

90 
num_upd©ed
 = 0;

92 if(
±uö
.
_‰ame_to_execuã
 == 1) {

93 
i
;

95 
¨øy_gu¨d_t
<> 
bid_¥i˚
 = 
√w
 [
max_åades
];

96 
¨øy_gu¨d_t
< [50] > 
exec_«me
 = 
√w
 [
max_åades
][50];

97 
¨øy_gu¨d_t
<
boﬁ
> 
is_ˇsh
 = 
√w
 boﬁ[
max_åades
];

98 
¨øy_gu¨d_t
<
boﬁ
> 
is_m¨kë
 = 
√w
 boﬁ[
max_åades
];

99 
¨øy_gu¨d_t
<> 
åade_¥i˚
 = 
√w
 [
max_åades
];

100 
¨øy_gu¨d_t
<> 
£âÀmít_amou¡
 = 
√w
 [
max_åades
];

101 
¨øy_gu¨d_t
<
myTime
> 
£âÀmít_ˇsh_due_d©e
 = 
√w
 myTime[
max_åades
];

102 
¨øy_gu¨d_t
< [41] > 
£âÀmít_ˇsh_ty≥
 = 
√w
 [
max_åades
][41];

103 
¨øy_gu¨d_t
<> 
ˇsh_å™ß˘i⁄_amou¡
 = 
√w
 [
max_åades
];

104 
¨øy_gu¨d_t
<
myTime
> 
ˇsh_å™ß˘i⁄_dts
 = 
√w
 myTime[
max_åades
];

105 
¨øy_gu¨d_t
< [101] > 
ˇsh_å™ß˘i⁄_«me
=
√w
 [
max_åades
][101];

106 
¨øy_gu¨d_t
< 
myTime
[3] > 
åade_hi°‹y_dts
 = 
√w
 myTime[
max_åades
][3];

107 
¨øy_gu¨d_t
< [3][5] > 
åade_hi°‹y_°©us_id
 = 
√w
 [
max_åades
][3][5];

109 
i
 = 0; i < 
max_åades
; i++){

110 if(
num_upd©ed
 < 
±uö
.
_max_upd©es
){

120 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:t-idx-probe-for-update (%ld)\n",

121 
x˘_id
, 
±uö
.
_åade_id
[
i
]);

122 
	`W_DO
(
_±øde_m™
->
	`t_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥åade
,

123 
±uö
.
_åade_id
[
i
]));

125 
ex_«me
[50];

126 
¥åade
->
	`gë_vÆue
(9, 
ex_«me
, 50);

128 
num_found
++;

130 
°rög
 
	`ãmp_exec_«me
(
ex_«me
);

131 
size_t
 
ödex
 = 
ãmp_exec_«me
.
	`föd
(" X ");

132 if(
ödex
 !
°rög
::
≈os
){

133 
ãmp_exec_«me
.
	`ª∂a˚
(
ödex
, 3, " ");

135 
ödex
 = 
ãmp_exec_«me
.
	`föd
(" ");

136 
ãmp_exec_«me
.
	`ª∂a˚
(
ödex
, 1, " X ");

138 
	`°r˝y
(
ex_«me
, 
ãmp_exec_«me
.
	`c_°r
());

148 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:t-update-exec-name (%s) \n",

149 
x˘_id
, 
ex_«me
);

150 
	`W_DO
(
_±øde_m™
->
	`t_upd©e_«me
(
_pssm
, 
¥åade
, 
ex_«me
));

152 
num_upd©ed
++;

174 
	`TRACE
–
TRACE_TRX_FLOW
, "TL: %d TU:t-idx-probe (%ld) \n",

175 
x˘_id
, 
±uö
.
_åade_id
[
i
]);

176 
	`W_DO
(
_±øde_m™
->
	`t_ödex_¥obe
(
_pssm
,
¥åade
,
±uö
.
_åade_id
[
i
]));

179 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
i
]);

180 
¥åade
->
	`gë_vÆue
(7, 
bid_¥i˚
[
i
]);

181 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
i
], 50);

182 
¥åade
->
	`gë_vÆue
(10, 
åade_¥i˚
[
i
]);

183 
â_id
[4];

184 
¥åade
->
	`gë_vÆue
(3, 
â_id
, 4);

186 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ: %d TU:â-idx-¥obê(%s)\n", 
x˘_id
, 
â_id
);

187 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
, 
â_id
));

188 
¥åadëy≥
->
	`gë_vÆue
(3, 
is_m¨kë
[
i
]);

200 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:settlement-idx-probe (%ld) \n",

201 
x˘_id
, 
±uö
.
_åade_id
[
i
]);

202 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

203 
±uö
.
_åade_id
[
i
]));

204 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
i
]);

205 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
i
]);

206 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
i
], 41);

208 if(
is_ˇsh
[
i
]){

219 
	`TRACE
–
TRACE_TRX_FLOW
,

221 
x˘_id
, 
±uö
.
_åade_id
[
i
]);

222 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

223 
±uö
.
_åade_id
[
i
]));

224 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
i
]);

225 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
i
]);

226 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
i
], 101);

240 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

242 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

243 
	`TRACE
(
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-by-åade-idx\n", 
x˘_id
);

244 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

245 
¥åadehi°
,

246 
lowªp
, 
highªp
,

247 
±uö
.
_åade_id
[
i
]));

248 
th_ôî
 = 
tmp_th_ôî
;

252 
boﬁ
 
eof
;

253 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

254 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

255 
j
=0;

256 !
eof
 && 
j
<3) {

257 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
i
][
j
]);

258 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
i
][
j
], 5);

259 
j
++;

260 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

261 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

265 
	`as£π
(
num_found
 =
max_åades
 && 
num_upd©ed
 =
±uö
.
_max_upd©es
);

266 } if(
±uö
.
_‰ame_to_execuã
 == 2){

267 
i
;

269 
¨øy_gu¨d_t
<> 
bid_¥i˚
 = 
√w
 [
max_åades
];

270 
¨øy_gu¨d_t
< [50] > 
exec_«me
 = 
√w
 [
max_åades
][50];

271 
¨øy_gu¨d_t
<
boﬁ
> 
is_ˇsh
 = 
√w
 boﬁ[
max_åades
];

272 
¨øy_gu¨d_t
<
TIdít
> 
åade_li°
 = 
√w
 TIdít[
max_åades
];

273 
¨øy_gu¨d_t
<> 
åade_¥i˚
 = 
√w
 [
max_åades
];

274 
¨øy_gu¨d_t
<> 
£âÀmít_amou¡
 = 
√w
 [
max_åades
];

275 
¨øy_gu¨d_t
<
myTime
> 
£âÀmít_ˇsh_due_d©e
 = 
√w
 myTime[
max_åades
];

276 
¨øy_gu¨d_t
< [41] > 
£âÀmít_ˇsh_ty≥
 = 
√w
 [
max_åades
][41];

277 
¨øy_gu¨d_t
<> 
ˇsh_å™ß˘i⁄_amou¡
 = 
√w
 [
max_åades
];

278 
¨øy_gu¨d_t
<
myTime
> 
ˇsh_å™ß˘i⁄_dts
 = 
√w
 myTime[
max_åades
];

279 
¨øy_gu¨d_t
< [101] > 
ˇsh_å™ß˘i⁄_«me
=
√w
 [
max_åades
][101];

280 
¨øy_gu¨d_t
< 
myTime
[3] > 
åade_hi°‹y_dts
 = 
√w
 myTime[
max_åades
][3];

281 
¨øy_gu¨d_t
< [3][5] > 
åade_hi°‹y_°©us_id
 = 
√w
 [
max_åades
][3][5];

299 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

301 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

302 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TL:t-iter-by-idx2 %ld %ld %ld \n",

303 
x˘_id
, 
±uö
.
_ac˘_id
,Ötuö.
_°¨t_åade_dts
,

304 
±uö
.
_íd_åade_dts
);

305 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex2
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

306 
lowªp
, 
highªp
, 
±uö
.
_ac˘_id
,

307 
±uö
.
_°¨t_åade_dts
,

308 
±uö
.
_íd_åade_dts
));

309 
t_ôî
 = 
tmp_t_ôî
;

312 
boﬁ
 
eof
;

313 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

314 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

315 
j
 = 0; j < 
max_åades
 && !
eof
; j++){

316 
¥åade
->
	`gë_vÆue
(7, 
bid_¥i˚
[
j
]);

317 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
j
], 50);

318 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
j
]);

319 
¥åade
->
	`gë_vÆue
(0, 
åade_li°
[
j
]);

320 
¥åade
->
	`gë_vÆue
(10, 
åade_¥i˚
[
j
]);

322 
num_found
++;

324 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TL:t-ôî-√xà\n", 
x˘_id
);

325 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

327 
i
 = 0; i < 
num_found
; i++) {

328 if(
num_upd©ed
 < 
±uö
.
_max_upd©es
){

337 
	`TRACE
(
TRACE_TRX_FLOW
, "App: %d TU:se-idx-probe-for-update (%ld)\n",

338 
x˘_id
, 
åade_li°
[
i
]);

339 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe_f‹upd©e
(
_pssm
,

340 
¥£âÀmít
,

341 
åade_li°
[
i
]));

342 
£_ˇsh_ty≥
[41];

343 
¥£âÀmít
->
	`gë_vÆue
(1, 
£_ˇsh_ty≥
, 41);

345 
°rög
 
ãmp_ˇsh_ty≥
;

346 if(
is_ˇsh
[
i
]){

347 if(
	`°rcmp
(
£_ˇsh_ty≥
, "Cash Account") == 0){

348 
ãmp_ˇsh_ty≥
 = "Cash";

350 
ãmp_ˇsh_ty≥
 = "Cash Account";

353 if(
	`°rcmp
(
£_ˇsh_ty≥
, "Margin Account") == 0){

354 
ãmp_ˇsh_ty≥
 = "Margin";

356 
ãmp_ˇsh_ty≥
 = "Margin Account";

368 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:se-update-exec-name (%s) \n",

369 
x˘_id
, 
ãmp_ˇsh_ty≥
.
	`c_°r
());

370 
	`W_DO
(
_p£âÀmít_m™
->
	`£_upd©e_«me
(
_pssm
, 
¥£âÀmít
,

371 
ãmp_ˇsh_ty≥
.
	`c_°r
()));

373 
num_upd©ed
++;

391 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:se-idx-probe (%ld) \n",

392 
x˘_id
, 
åade_li°
[
i
]);

393 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

394 
åade_li°
[
i
]));

396 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
i
], 41);

397 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
i
]);

398 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
i
]);

400 if(
is_ˇsh
[
i
]){

411 
	`TRACE
–
TRACE_TRX_FLOW
,

413 
x˘_id
, 
åade_li°
[
i
]);

414 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

415 
åade_li°
[
i
]));

416 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
i
]);

417 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
i
]);

418 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
i
], 101);

432 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

434 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

435 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-by-åade-idx\n",
x˘_id
);

436 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

437 
¥åadehi°
,

438 
lowªp
, 
highªp
,

439 
åade_li°
[
i
]));

440 
th_ôî
 = 
tmp_th_ôî
;

444 
boﬁ
 
eof
;

445 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

446 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

447 
j
=0;

448 !
eof
 && 
j
<3) {

449 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
i
][
j
]);

450 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
i
][
j
], 5);

451 
j
++;

452 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

453 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

456 
	`as£π
(
num_upd©ed
 =
num_found
 &&Çum_updated >= 0 &&

457 
num_found
 <
max_åades
);

458 } if(
±uö
.
_‰ame_to_execuã
 == 3) {

459 
i
;

461 
¨øy_gu¨d_t
<
TIdít
> 
ac˘_id
 = 
√w
 TIdít[
max_åades
];

462 
¨øy_gu¨d_t
< [50] > 
exec_«me
 = 
√w
 [
max_åades
][50];

463 
¨øy_gu¨d_t
<
boﬁ
> 
is_ˇsh
 = 
√w
 boﬁ[
max_åades
];

464 
¨øy_gu¨d_t
<> 
¥i˚
 = 
√w
 [
max_åades
];

465 
¨øy_gu¨d_t
<> 
qu™tôy
 = 
√w
 [
max_åades
];

466 
¨øy_gu¨d_t
< [71] > 
s_«me
 = 
√w
 [
max_åades
][71];

467 
¨øy_gu¨d_t
<
myTime
> 
åade_dts
 = 
√w
 myTime[
max_åades
];

468 
¨øy_gu¨d_t
<
TIdít
> 
åade_li°
 = 
√w
 TIdít[
max_åades
];

469 
¨øy_gu¨d_t
< [4] > 
åade_ty≥
 = 
√w
 [
max_åades
][4];

470 
¨øy_gu¨d_t
< [13] > 
ty≥_«me
 = 
√w
 [
max_åades
][13];

471 
¨øy_gu¨d_t
<> 
£âÀmít_amou¡
 = 
√w
 [
max_åades
];

472 
¨øy_gu¨d_t
<
myTime
> 
£âÀmít_ˇsh_due_d©e
 = 
√w
 myTime[
max_åades
];

473 
¨øy_gu¨d_t
< [41] > 
£âÀmít_ˇsh_ty≥
 = 
√w
 [
max_åades
][41];

474 
¨øy_gu¨d_t
<> 
ˇsh_å™ß˘i⁄_amou¡
 = 
√w
 [
max_åades
];

475 
¨øy_gu¨d_t
<
myTime
> 
ˇsh_å™ß˘i⁄_dts
 = 
√w
 myTime[
max_åades
];

476 
¨øy_gu¨d_t
< [101] > 
ˇsh_å™ß˘i⁄_«me
=
√w
 [
max_åades
][101];

477 
¨øy_gu¨d_t
< 
myTime
[3] > 
åade_hi°‹y_dts
 = 
√w
 myTime[
max_åades
][3];

478 
¨øy_gu¨d_t
< [3][5] > 
åade_hi°‹y_°©us_id
 = 
√w
 [
max_åades
][3][5];

505 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_t
> > 
t_ôî
;

507 
ödex_sˇn_ôî_im∂
<
åade_t
>* 
tmp_t_ôî
;

508 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:t-iter-by-idx3 %s %ld %ld \n",

509 
x˘_id
, 
±uö
.
_symbﬁ
,Ötuö.
_°¨t_åade_dts
,

510 
±uö
.
_íd_åade_dts
);

511 
	`W_DO
(
_±øde_m™
->
	`t_gë_ôî_by_ödex3
(
_pssm
, 
tmp_t_ôî
, 
¥åade
,

512 
lowªp
, 
highªp
, 
±uö
.
_symbﬁ
,

513 
±uö
.
_°¨t_åade_dts
,

514 
±uö
.
_íd_åade_dts
));

515 
t_ôî
 = 
tmp_t_ôî
;

518 
boﬁ
 
eof
;

519 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:t-ôî-√xà\n", 
x˘_id
);

520 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

521 
j
 = 0; j < 
max_åades
 && !
eof
; j++){

522 
¥åade
->
	`gë_vÆue
(0, 
åade_li°
[
j
]);

523 
¥åade
->
	`gë_vÆue
(1, 
åade_dts
[
j
]);

524 
¥åade
->
	`gë_vÆue
(3, 
åade_ty≥
[
j
], 4);

525 
¥åade
->
	`gë_vÆue
(4, 
is_ˇsh
[
j
]);

526 
¥åade
->
	`gë_vÆue
(6, 
qu™tôy
[
j
]);

527 
¥åade
->
	`gë_vÆue
(8, 
ac˘_id
[
j
]);

528 
¥åade
->
	`gë_vÆue
(9, 
exec_«me
[
j
], 50);

529 
¥åade
->
	`gë_vÆue
(10, 
¥i˚
[
j
]);

530 
t_s_symb
[16];

531 
¥åade
->
	`gë_vÆue
(5, 
t_s_symb
, 16);

533 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:s-idx-probe (%s) \n",

534 
x˘_id
, 
t_s_symb
);

535 
	`W_DO
(
_p£curôy_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥£curôy
, 
t_s_symb
));

536 
¥£curôy
->
	`gë_vÆue
(3, 
s_«me
[
j
], 71);

538 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:tt-idx-probe (%s) \n",

539 
x˘_id
, 
åade_ty≥
[
j
]);

540 
	`W_DO
(
_±øde_ty≥_m™
->
	`â_ödex_¥obe
(
_pssm
, 
¥åadëy≥
,

541 
åade_ty≥
[
j
]));

542 
¥åadëy≥
->
	`gë_vÆue
(1, 
ty≥_«me
[
j
], 13);

544 
num_found
++;

546 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:t-ôî-√xà\n", 
x˘_id
);

547 
	`W_DO
(
t_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åade
));

550 
i
 = 0; i < 
num_found
; i++) {

561 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:se-idx-probe (%ld) \n",

562 
x˘_id
, 
åade_li°
[
i
]);

563 
	`W_DO
(
_p£âÀmít_m™
->
	`£_ödex_¥obe
(
_pssm
, 
¥£âÀmít
,

564 
åade_li°
[
i
]));

565 
¥£âÀmít
->
	`gë_vÆue
(1, 
£âÀmít_ˇsh_ty≥
[
i
], 41);

566 
¥£âÀmít
->
	`gë_vÆue
(2, 
£âÀmít_ˇsh_due_d©e
[
i
]);

567 
¥£âÀmít
->
	`gë_vÆue
(3, 
£âÀmít_amou¡
[
i
]);

569 if(
is_ˇsh
[
i
]){

570 if(
num_upd©ed
 < 
±uö
.
_max_upd©es
){

579 
	`TRACE
(
TRACE_TRX_FLOW
,

581 
x˘_id
, 
åade_li°
[
i
]);

582 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->

583 
	`˘_ödex_¥obe_f‹upd©e
(
_pssm
, 
¥ˇshå™s
,

584 
åade_li°
[
i
]));

585 
˘_«me
[101];

586 
¥ˇshå™s
->
	`gë_vÆue
(3, 
˘_«me
, 101);

588 
°rög
 
	`ãmp_˘_«me
(
˘_«me
);

589 
size_t
 
ödex
 = 
ãmp_˘_«me
.
	`föd
(" shares of ");

590 if(
ödex
 !
°rög
::
≈os
){

591 
°rög°ªam
 
ss
;

592 
ss
 << 
ty≥_«me
[
i
] << " " << 
qu™tôy
[i]

593 << " Sh¨e†o‡" << 
s_«me
[
i
];

594 
ãmp_˘_«me
 = 
ss
.
	`°r
();

596 
°rög°ªam
 
ss
;

597 
ss
 << 
ty≥_«me
[
i
] << " " << 
qu™tôy
[i]

598 << " sh¨e†o‡" << 
s_«me
[
i
];

599 
ãmp_˘_«me
 = 
ss
.
	`°r
();

601 
	`°r˝y
(
˘_«me
, 
ãmp_˘_«me
.
	`c_°r
());

611 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:ct-update-ct-name (%s) \n",

612 
x˘_id
, 
˘_«me
);

613 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_upd©e_«me
(
_pssm
, 
¥ˇshå™s
,

614 
˘_«me
));

616 
num_upd©ed
++;

634 
	`TRACE
–
TRACE_TRX_FLOW
,

636 
x˘_id
, 
åade_li°
[
i
]);

637 
	`W_DO
(
_pˇsh_å™ß˘i⁄_m™
->
	`˘_ödex_¥obe
(
_pssm
, 
¥ˇshå™s
,

638 
åade_li°
[
i
]));

640 
¥ˇshå™s
->
	`gë_vÆue
(1, 
ˇsh_å™ß˘i⁄_dts
[
i
]);

641 
¥ˇshå™s
->
	`gë_vÆue
(2, 
ˇsh_å™ß˘i⁄_amou¡
[
i
]);

642 
¥ˇshå™s
->
	`gë_vÆue
(3, 
ˇsh_å™ß˘i⁄_«me
[
i
], 101);

656 
gu¨d
<
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
> > 
th_ôî
;

658 
ödex_sˇn_ôî_im∂
<
åade_hi°‹y_t
>* 
tmp_th_ôî
;

659 
	`TRACE
–
TRACE_TRX_FLOW
, "App: %d TU:th-iter-by-trade-idx %ld \n",

660 
x˘_id
, 
åade_li°
[
i
]);

661 
	`W_DO
(
_±øde_hi°‹y_m™
->
	`th_gë_ôî_by_ödex
(
_pssm
, 
tmp_th_ôî
,

662 
¥åadehi°
,

663 
lowªp
, 
highªp
,

664 
åade_li°
[
i
]));

665 
th_ôî
 = 
tmp_th_ôî
;

669 
boﬁ
 
eof
;

670 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

671 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

672 
j
=0;

673 !
eof
 && 
j
<3) {

674 
¥åadehi°
->
	`gë_vÆue
(1, 
åade_hi°‹y_dts
[
i
][
j
]);

675 
¥åadehi°
->
	`gë_vÆue
(2, 
åade_hi°‹y_°©us_id
[
i
][
j
], 5);

676 
j
++;

677 
	`TRACE
–
TRACE_TRX_FLOW
, "Aµ: %d TU:th-ôî-√xà\n", 
x˘_id
);

678 
	`W_DO
(
th_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥åadehi°
));

683 #ifde‡
PRINT_TRX_RESULTS


686 
rˇshå™s
.
	`¥öt_tu∂e
();

687 
r£curôy
.
	`¥öt_tu∂e
();

688 
r£âÀmít
.
	`¥öt_tu∂e
();

689 
πøde
.
	`¥öt_tu∂e
();

690 
πødëy≥
.
	`¥öt_tu∂e
();

691 
πødehi°
.
	`¥öt_tu∂e
();

694  
RCOK
;

696 
	}
}

699 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpce/tpce_input.cpp

30 #ifde‡
__SUNPRO_CC


31 
	~<°dlib.h
>

32 
	~<°dio.h
>

33 
	~<°rög.h
>

35 
	~<c°dlib
>

36 
	~<c°dio
>

37 
	~<c°rög
>

41 
	~"w‹klﬂd/ç˚/ç˚_öput.h
"

43 
	~"w‹klﬂd/ç˚/egí/CE.h
"

46 
usög
 
«me•a˚
 
	gTPCE
;

48 
ENTER_NAMESPACE
(
ç˚
);

52 
myTime
 
	$EgíTimeToTimeT
(
CD©eTime
 &
cdt
)

54 
tm
 
ts
;

55 
m£c
;

56 
cdt
.
	`GëYMDHMS
(&
ts
.
tm_yór
, &ts.
tm_m⁄
, &ts.
tm_mday
, &ts.
tm_hour
, &ts.
tm_mö
, &ts.
tm_£c
, &
m£c
);

57 
ts
.
tm_yór
 -= 1900;

58 
ts
.
tm_m⁄
 -= 1;

59 
ts
.
tm_isd°
=1;

61 
time_t
 
x
 = 
	`mktime
 (&
ts
);

63  (
myTime
)
x
;

64 
	}
}

67 
myTime
 
	$EgíTimeSèmpToTimeT
(
TIMESTAMP_STRUCT
 &
tss
)

69 
tm
 
ts
;

70 
ts
.
tm_yór
 = 
tss
.
yór
 -1900;

71 
ts
.
tm_m⁄
 = 
tss
.
m⁄th
-1;

72 
ts
.
tm_mday
 = 
tss
.
day
;

73 
ts
.
tm_hour
 =
tss
.
hour
;

74 
ts
.
tm_mö
 =
tss
. 
möuã
;

75 
ts
.
tm_£c
 = 
tss
.
£c⁄d
;

76 
ts
.
tm_isd°
=1;

77 
time_t
 
x
 = 
	`mktime
 (&
ts
);

79  (
myTime
)
x
;

80 
	}
}

82 
	$dayOfM⁄th
(
myTime
& 
t
)

84 
tm
* 
ts
=
	`loˇ…ime
((
time_t
*)&
t
);

85  
ts
->
tm_mday
;

86 
	}
}

89 
	$øndom_x˘_ty≥
(c⁄° 
idx
)

91 
sum
 = 0;

93 
sum
 +
PROB_TPCE_MARKET_FEED
;

94 i‡(
idx
 < 
sum
)

95  
XCT_TPCE_MARKET_FEED
;

97 
sum
 +
PROB_TPCE_TRADE_UPDATE
;

98 i‡(
idx
 < 
sum
)

99  
XCT_TPCE_TRADE_UPDATE
;

101 
sum
 +
PROB_TPCE_BROKER_VOLUME
;

102 i‡(
idx
 < 
sum
)

103  
XCT_TPCE_BROKER_VOLUME
;

105 
sum
 +
PROB_TPCE_TRADE_LOOKUP
;

106 i‡(
idx
 < 
sum
)

107  
XCT_TPCE_TRADE_LOOKUP
;

109 
sum
 +
PROB_TPCE_TRADE_RESULT
;

110 i‡(
idx
 < 
sum
)

111  
XCT_TPCE_TRADE_RESULT
;

113 
sum
 +
PROB_TPCE_TRADE_ORDER
;

114 i‡(
idx
 < 
sum
)

115  
XCT_TPCE_TRADE_ORDER
;

117 
sum
 +
PROB_TPCE_CUSTOMER_POSITION
;

118 i‡(
idx
 < 
sum
)

119  
XCT_TPCE_CUSTOMER_POSITION
;

121 
sum
 +
PROB_TPCE_SECURITY_DETAIL
;

122 i‡(
idx
 < 
sum
)

123  
XCT_TPCE_SECURITY_DETAIL
;

125 
sum
 +
PROB_TPCE_MARKET_WATCH
;

126 i‡(
idx
 < 
sum
)

127  
XCT_TPCE_MARKET_WATCH
;

129 
sum
 +
PROB_TPCE_TRADE_STATUS
;

130 i‡(
idx
 <
sum
)

131  
XCT_TPCE_TRADE_STATUS
;

133 
	`¥ötf
("************sum %lf**********\¿", 
sum
);

135 
	}
}

139 
brokî_vﬁume_öput_t
 
	$¸óã_brokî_vﬁume_öput
(
sf
, 
•ecificIdx
)

141 
brokî_vﬁume_öput_t
 
abvi
;

142 
TBrokîVﬁumeTxnI≈ut
 
m_BrokîVﬁumeTxnI≈ut
;

143 
m_TxnI≈utGíî©‹
->
	`Gíî©eBrokîVﬁumeI≈ut
–
m_BrokîVﬁumeTxnI≈ut
 );

144 
i
=0; i<40; i++)

145 
	`mem˝y
(
abvi
.
_brokî_li°
[
i
], 
m_BrokîVﬁumeTxnI≈ut
.
brokî_li°
[i], 50);

146 
	`mem˝y
(
abvi
.
_£˘‹_«me
, 
m_BrokîVﬁumeTxnI≈ut
.
£˘‹_«me
, 31);

147  (
abvi
);

148 
	}
};

150 
	gbrokî_vﬁume_öput_t
::
	$¥öt
()

152 
	`¥ötf
("\nbroker_volume_input\n");

153 
	`¥ötf
("broker_list:\n");

154 
i
=0; i<40; i++Ë
	`¥ötf
(" %s\n", 
_brokî_li°
[i]);

155 
	`¥ötf
("£˘‹_«me: %s\n", 
_£˘‹_«me
);

156 
	}
}

160 
cu°omî_posôi⁄_öput_t
 
	$¸óã_cu°omî_posôi⁄_öput
(
sf
, 
•ecificIdx
)

162 
cu°omî_posôi⁄_öput_t
 
a˝i
;

163 
TCu°omîPosôi⁄TxnI≈ut
 
m_Cu°omîPosôi⁄TxnI≈ut
;

164 
m_TxnI≈utGíî©‹
->
	`Gíî©eCu°omîPosôi⁄I≈ut
–
m_Cu°omîPosôi⁄TxnI≈ut
 );

166 
a˝i
.
_gë_hi°‹y
=
m_Cu°omîPosôi⁄TxnI≈ut
.
gë_hi°‹y
;

167 
a˝i
.
_ac˘_id_idx
=
m_Cu°omîPosôi⁄TxnI≈ut
.
ac˘_id_idx
;

168 
a˝i
.
_cu°_id
=
m_Cu°omîPosôi⁄TxnI≈ut
.
cu°_id
;

169 
	`mem˝y
(
a˝i
.
_èx_id
, 
m_Cu°omîPosôi⁄TxnI≈ut
.
èx_id
, 
cTAX_ID_Àn
+1);

171  (
a˝i
);

172 
	}
};

174 
	gcu°omî_posôi⁄_öput_t
::
	$¥öt
(){

175 
	`¥ötf
("\nCustomerÖosition input\n");

176 
	`¥ötf
("ac˘_id_idx: %ld\n", 
_ac˘_id_idx
);

177 
	`¥ötf
("cu°_id: %ld\n", 
_cu°_id
);

178 
	`¥ötf
("gë_hi°‹y: %d\n", 
_gë_hi°‹y
);

179 
	`¥ötf
("èx_id: %s\n", 
_èx_id
);

180 
	}
}

183 
åade_‹dî_öput_t
 
	$¸óã_åade_‹dî_öput
(
sf
, 
•ecificIdx
)

185 
åade_‹dî_öput_t
 
©i
;

186 
TTødeOrdîTxnI≈ut
 
m_TødeOrdîTxnI≈ut
;

187 
boﬁ
 
bExecut‹IsAccou¡Ow√r
;

188 
INT32
 
iTødeTy≥
;

189 
m_TxnI≈utGíî©‹
->
	`Gíî©eTødeOrdîI≈ut
–
m_TødeOrdîTxnI≈ut
, 
iTødeTy≥
, 
bExecut‹IsAccou¡Ow√r
 );

191 
©i
.
_ac˘_id
=
m_TødeOrdîTxnI≈ut
.
ac˘_id
;

192 
©i
.
_ªque°ed_¥i˚
=
m_TødeOrdîTxnI≈ut
.
ªque°ed_¥i˚
;

193 
©i
.
_rﬁl_ô_back
=(
m_TødeOrdîTxnI≈ut
.
rﬁl_ô_back
 !=0);

194 
©i
.
_is_lifo
=(
m_TødeOrdîTxnI≈ut
.
is_lifo
!=0);

195 
©i
.
_ty≥_is_m¨gö
=(
m_TødeOrdîTxnI≈ut
.
ty≥_is_m¨gö
!=0);

196 
©i
.
_åade_qty
=
m_TødeOrdîTxnI≈ut
.
åade_qty
;

198 
	`mem˝y
(
©i
.
_co_«me
, 
m_TødeOrdîTxnI≈ut
.
co_«me
, 61);

199 
	`mem˝y
(
©i
.
_exec_f_«me
, 
m_TødeOrdîTxnI≈ut
.
exec_f_«me
, 21);

200 
	`mem˝y
(
©i
.
_exec_l_«me
, 
m_TødeOrdîTxnI≈ut
.
exec_l_«me
, 26);

201 
	`mem˝y
(
©i
.
_exec_èx_id
, 
m_TødeOrdîTxnI≈ut
.
exec_èx_id
, 21);

202 
	`mem˝y
(
©i
.
_issue
, 
m_TødeOrdîTxnI≈ut
.
issue
, 7);

203 
	`mem˝y
(
©i
.
_°_≥ndög_id
, 
m_TødeOrdîTxnI≈ut
.
°_≥ndög_id
, 5);

204 
	`mem˝y
(
©i
.
_°_submôãd_id
, 
m_TødeOrdîTxnI≈ut
.
°_submôãd_id
, 5);

205 
	`mem˝y
(
©i
.
_symbﬁ
, 
m_TødeOrdîTxnI≈ut
.
symbﬁ
, 16);

206 
	`mem˝y
(
©i
.
_åade_ty≥_id
, 
m_TødeOrdîTxnI≈ut
.
åade_ty≥_id
, 4);

208  (
©i
);

209 
	}
};

211 
	gåade_‹dî_öput_t
::
	$¥öt
()

213 
	`¥ötf
("\ntrade order input\n");

214 
	`¥ötf
("ac˘_id: %ld\n", 
_ac˘_id
);

215 
	`¥ötf
("co_«me: %s\n", 
_co_«me
);

216 
	`¥ötf
("exec_f_«me: %s\n", 
_exec_f_«me
);

217 
	`¥ötf
("exec_l_«me: %s\n", 
_exec_l_«me
);

218 
	`¥ötf
("exec_èx_id: %s\n", 
_exec_èx_id
);

219 
	`¥ötf
("is_lifo: %d\n", 
_is_lifo
);

220 
	`¥ötf
("issue: %s\n", 
_issue
);

221 
	`¥ötf
("ªque°ed_¥i˚: %.2f\n", 
_ªque°ed_¥i˚
);

222 
	`¥ötf
("rﬁl_ô_back: %d\n", 
_rﬁl_ô_back
);

223 
	`¥ötf
("°_≥ndög_id: %s\n", 
_°_≥ndög_id
);

224 
	`¥ötf
("°_submôãd_id: %s\n", 
_°_submôãd_id
);

225 
	`¥ötf
("symbﬁ: %s\n", 
_symbﬁ
);

226 
	`¥ötf
("åade_qty: %d\n", 
_åade_qty
);

227 
	`¥ötf
("åade_ty≥_id: %s\n", 
_åade_ty≥_id
);

228 
	`¥ötf
("ty≥_is_m¨gö: %d\n", 
_ty≥_is_m¨gö
);

229 
	}
}

232 
åade_lookup_öput_t
 
	$¸óã_åade_lookup_öput
(
sf
, 
•ecificIdx
)

234 
åade_lookup_öput_t
 
©li
;

235 
TTødeLookupTxnI≈ut
 
m_TødeLookupTxnI≈ut
;

236 
m_TxnI≈utGíî©‹
->
	`Gíî©eTødeLookupI≈ut
–
m_TødeLookupTxnI≈ut
 );

238 
©li
.
_ac˘_id
=
m_TødeLookupTxnI≈ut
.
ac˘_id
;

239 
©li
.
_‰ame_to_execuã
=
m_TødeLookupTxnI≈ut
.
‰ame_to_execuã
;

240 
©li
.
_max_åades
=
m_TødeLookupTxnI≈ut
.
max_åades
;

241 
©li
.
_max_ac˘_id
=
m_TødeLookupTxnI≈ut
.
max_ac˘_id
;

242 
	`mem˝y
(
©li
.
_symbﬁ
, 
m_TødeLookupTxnI≈ut
.
symbﬁ
, 16);

243 if(
©li
.
_‰ame_to_execuã
 == 1) {

244 
	`mem˝y
(
©li
.
_åade_id
, 
m_TødeLookupTxnI≈ut
.
åade_id
,áéi.
_max_åades
*(
TIdít
));

246 
©li
.
_°¨t_åade_dts
 = 
	`EgíTimeSèmpToTimeT
(
m_TødeLookupTxnI≈ut
.
°¨t_åade_dts
);

247 
©li
.
_íd_åade_dts
 = 
	`EgíTimeSèmpToTimeT
(
m_TødeLookupTxnI≈ut
.
íd_åade_dts
);

249  (
©li
);

250 
	}
};

252 
	gåade_lookup_öput_t
::
	$¥öt
()

254 
	`¥ötf
("\ntradeÜookup input\n");

255 
	`¥ötf
("ac˘_id: %ld\n", 
_ac˘_id
);

256 
	`¥ötf
("‰ame_to_execuã: %d\n", 
_‰ame_to_execuã
);

257 
	`¥ötf
("max_ac˘_id: %ld\n", 
_max_ac˘_id
);

258 
	`¥ötf
("max_åades: %d\n", 
_max_åades
);

259 
	`¥ötf
("°¨t_åade_dts: %ld (%s)\n", 
_°¨t_åade_dts
, 
	`˘ime
((c⁄° 
time_t
*)&_start_trade_dts));

260 
	`¥ötf
("íd_åade_dts: %ld (%s)\n", 
_íd_åade_dts
, 
	`˘ime
((c⁄° 
time_t
*)&_end_trade_dts));

261 
	`¥ötf
("symbﬁ: %s\n", 
_symbﬁ
);

262 
i
=0; i<
_max_åades
; i++) {

263 
	`¥ötf
("åade_id[%d]: %ld\n", 
i
, 
_åade_id
[i]);

265 
	}
}

268 
åade_ªsu…_öput_t
 
	$¸óã_åade_ªsu…_öput
(
sf
, 
•ecificIdx
)

270 
åade_ªsu…_öput_t
 
©ri
;

271 
TTødeResu…TxnI≈ut
* 
öput
 = 
TødeResu…I≈utBuf„r
->
	`gë
();

272 if(
öput
==
NULL
) {

273 
©ri
.
_åade_id
=-1;

274 
©ri
.
_åade_¥i˚
=-1;

276 
©ri
.
_åade_id
=
öput
->
åade_id
;

277 
©ri
.
_åade_¥i˚
=
öput
->
åade_¥i˚
;

279  (
©ri
);

280 
	}
};

282 
	gåade_ªsu…_öput_t
::
	$¥öt
()

284 
	`¥ötf
("\ntrade_result_input\n");

285 
	`¥ötf
("åade_id: %ld\n", 
_åade_id
);

286 
	`¥ötf
("åade_¥i˚: %.2f\n", 
_åade_¥i˚
);

287 
	}
}

291 
m¨kë_w©ch_öput_t
 
	$¸óã_m¨kë_w©ch_öput
(
sf
, 
•ecificIdx
)

294 
m¨kë_w©ch_öput_t
 
amwi
;

295 
TM¨këW©chTxnI≈ut
 
m_M¨këW©chTxnI≈ut
;

296 
m_TxnI≈utGíî©‹
->
	`Gíî©eM¨këW©chI≈ut
–
m_M¨këW©chTxnI≈ut
 );

298 
amwi
.
_ac˘_id
=
m_M¨këW©chTxnI≈ut
.
ac˘_id
;

299 
amwi
.
_cu°_id
=
m_M¨këW©chTxnI≈ut
.
c_id
;

300 
amwi
.
_°¨tög_co_id
=
m_M¨këW©chTxnI≈ut
.
°¨tög_co_id
;

301 
amwi
.
_ídög_co_id
=
m_M¨këW©chTxnI≈ut
.
ídög_co_id
;

303 
	`mem˝y
(
amwi
.
_ödu°ry_«me
, 
m_M¨këW©chTxnI≈ut
.
ödu°ry_«me
, 51);

305 
amwi
.
_°¨t_d©e
=
	`EgíTimeSèmpToTimeT
(
m_M¨këW©chTxnI≈ut
.
°¨t_day
);

307  (
amwi
);

308 
	}
};

310 
	gm¨kë_w©ch_öput_t
::
	$¥öt
()

312 
	`¥ötf
("\nmarket_watch_input\n");

313 
	`¥ötf
("ac˘_id: %ld\n", 
_ac˘_id
);

314 
	`¥ötf
("cu°_id: %ld\n", 
_cu°_id
);

315 
	`¥ötf
("°¨tög_co_id: %ld\n", 
_°¨tög_co_id
);

316 
	`¥ötf
("ídög_co_id: %ld\n", 
_ídög_co_id
);

317 
	`¥ötf
("ödu°ry_«me: %s\n", 
_ödu°ry_«me
);

318 
	`¥ötf
("°¨t_d©e: %ld (%s)\n", 
_°¨t_d©e
, 
	`˘ime
((c⁄° 
time_t
*)&_start_date));

319 
	}
}

323 
£curôy_dëaû_öput_t
 
	$¸óã_£curôy_dëaû_öput
(
sf
, 
•ecificIdx
)

325 
£curôy_dëaû_öput_t
 
asdi
;

326 
TSecurôyDëaûTxnI≈ut
 
m_SecurôyDëaûTxnI≈ut
;

327 
m_TxnI≈utGíî©‹
->
	`Gíî©eSecurôyDëaûI≈ut
–
m_SecurôyDëaûTxnI≈ut
 );

328 
asdi
.
_ac˚ss_lob_Êag
=
m_SecurôyDëaûTxnI≈ut
.
ac˚ss_lob_Êag
;

329 
asdi
.
_max_rows_to_ªtu∫
=
m_SecurôyDëaûTxnI≈ut
.
max_rows_to_ªtu∫
;

330 
asdi
.
_°¨t_day
=
	`EgíTimeSèmpToTimeT
(
m_SecurôyDëaûTxnI≈ut
.
°¨t_day
);

331 
	`mem˝y
(
asdi
.
_symbﬁ
, 
m_SecurôyDëaûTxnI≈ut
.
symbﬁ
, 16 );

333  (
asdi
);

334 
	}
};

337 
	g£curôy_dëaû_öput_t
::
	$¥öt
()

339 
	`¥ötf
("\nsecurity_detail_input\n");

340 
	`¥ötf
("ac˚ss_lob_Êag: %d\n", 
_ac˚ss_lob_Êag
);

341 
	`¥ötf
("symbﬁ: %s\n", 
_symbﬁ
);

342 
	`¥ötf
("°¨t_day: %ld (%s)\n", 
_°¨t_day
, 
	`˘ime
((c⁄° 
time_t
*)&_start_day));

343 
	`¥ötf
("max_rows_to_ªtu∫: %d\n", 
_max_rows_to_ªtu∫
);

344 
	}
}

348 
åade_°©us_öput_t
 
	$¸óã_åade_°©us_öput
(
sf
, 
•ecificIdx
)

350 
åade_°©us_öput_t
 
©si
;

351 
TTødeSètusTxnI≈ut
 
m_TødeSètusTxnI≈ut
;

352 
m_TxnI≈utGíî©‹
->
	`Gíî©eTødeSètusI≈ut
–
m_TødeSètusTxnI≈ut
 );

353 
©si
.
_ac˘_id
 = 
m_TødeSètusTxnI≈ut
.
ac˘_id
;

354  (
©si
);

355 
	}
};

358 
	gåade_°©us_öput_t
::
	$¥öt
()

360 
	`¥ötf
("\ntrade_status_input\n");

361 
	`¥ötf
("ac˘_id: %ld\n",
_ac˘_id
);

362 
	}
}

365 
åade_upd©e_öput_t
 
	$¸óã_åade_upd©e_öput
(
sf
, 
•ecificIdx
)

367 
åade_upd©e_öput_t
 
©ui
;

368 
TTødeUpd©eTxnI≈ut
 
m_TødeUpd©eTxnI≈ut
;

369 
m_TxnI≈utGíî©‹
->
	`Gíî©eTødeUpd©eI≈ut
–
m_TødeUpd©eTxnI≈ut
 );

371 
©ui
.
_ac˘_id
=
m_TødeUpd©eTxnI≈ut
.
ac˘_id
;

372 
©ui
.
_‰ame_to_execuã
=
m_TødeUpd©eTxnI≈ut
.
‰ame_to_execuã
;

373 
©ui
.
_max_åades
=
m_TødeUpd©eTxnI≈ut
.
max_åades
;

374 
©ui
.
_max_upd©es
=
m_TødeUpd©eTxnI≈ut
.
max_upd©es
;

375 
©ui
.
_max_ac˘_id
=
m_TødeUpd©eTxnI≈ut
.
max_ac˘_id
;

377 
©ui
.
_°¨t_åade_dts
 = 
	`EgíTimeSèmpToTimeT
(
m_TødeUpd©eTxnI≈ut
.
°¨t_åade_dts
);

378 
©ui
.
_íd_åade_dts
 = 
	`EgíTimeSèmpToTimeT
(
m_TødeUpd©eTxnI≈ut
.
íd_åade_dts
);

381 
	`mem˝y
(
©ui
.
_symbﬁ
, 
m_TødeUpd©eTxnI≈ut
.
symbﬁ
, 16 );

382 
	`mem˝y
(
©ui
.
_åade_id
, 
m_TødeUpd©eTxnI≈ut
.
åade_id
, 
TødeUpd©eFøme1MaxRows
*(
TIdít
) );

384  (
©ui
);

385 
	}
};

387 
	gåade_upd©e_öput_t
::
	$¥öt
()

389 
	`¥ötf
("\ntrade_update_input\n");

390 
	`¥ötf
("ac˘_id: %ld\n", 
_ac˘_id
);

391 
	`¥ötf
("‰ame_to_execuã: %d\n", 
_‰ame_to_execuã
);

392 
	`¥ötf
("max_åades: %d\n",
_max_åades
);

393 
	`¥ötf
("max_upd©es: %d\n", 
_max_upd©es
);

394 
	`¥ötf
("symbﬁ: %s\n", 
_symbﬁ
);

395 
	`¥ötf
("°¨t_åade_dts: %ld (%s)\n", 
_°¨t_åade_dts
, 
	`˘ime
((c⁄° 
time_t
*)&_start_trade_dts));

396 
	`¥ötf
("íd_åade_dts: %ld (%s)\n", 
_íd_åade_dts
, 
	`˘ime
((c⁄° 
time_t
*)&_end_trade_dts));

397 
i
=0; i<
TødeUpd©eFøme1MaxRows
; i++) {

398 
	`¥ötf
("åade_id[%d]: %ld\n", 
i
, 
_åade_id
[i]);

400 
	`¥ötf
("max_ac˘_id: %ld\n", 
_max_ac˘_id
);

401 
	}
}

405 
m¨kë_„ed_öput_t
 
	$¸óã_m¨kë_„ed_öput
(
sf
, 
•ecificIdx
)

407 
m¨kë_„ed_öput_t
 
amfi
;

408 
TM¨këFìdTxnI≈ut
* 
öput

M¨këFìdI≈utBuf„r
->
	`gë
();

409 if(
öput
!=
NULL
) {

410 
	`mem˝y
(
amfi
.
_°©us_submôãd
,
öput
->
SètusAndTødeTy≥
.
°©us_submôãd
,5);

411 
	`mem˝y
(
amfi
.
_ty≥_limô_buy
,
öput
->
SètusAndTødeTy≥
.
ty≥_limô_buy
,4);

412 
	`mem˝y
(
amfi
.
_ty≥_limô_£Œ
,
öput
->
SètusAndTødeTy≥
.
ty≥_limô_£Œ
,4);

413 
	`mem˝y
(
amfi
.
_ty≥_°›_loss
,
öput
->
SètusAndTødeTy≥
.
ty≥_°›_loss
,4);

414 
i
=0; i<
max_„ed_Àn
; i++) {

415 
amfi
.
_åade_qty
[
i
] = 
öput
->
E¡rõs
[i].
åade_qty
;

416 
	`mem˝y
(
amfi
.
_symbﬁ
[
i
], 
öput
->
E¡rõs
[i].
symbﬁ
, 16);

417 
amfi
.
_¥i˚_quŸe
[
i
] = 
öput
->
E¡rõs
[i].
¥i˚_quŸe
;

419 
dñëe
 
öput
;

421  (
amfi
);

422 
	}
}

424 
	gm¨kë_„ed_öput_t
::
	$¥öt
()

426 
	`¥ötf
("\nmarket_feed_input\n");

427 
i
=0; i<
max_„ed_Àn
; i++ ) {

428 
	`¥ötf
("¥i˚_quŸe[%d]: %.2f\n", 
i
, 
_¥i˚_quŸe
[i]);

430 
	`¥ötf
("°©us_submôãd: %s\n", 
_°©us_submôãd
);

431 
i
=0; i<
max_„ed_Àn
; i++ ) {

432 
	`¥ötf
("symbﬁ[%d]: %†\n", 
i
, 
_symbﬁ
[i]);

434 
i
=0; i<
max_„ed_Àn
; i++ ) {

435 
	`¥ötf
("åade_qty[%d]: %d \n", 
i
, 
_åade_qty
[i]);

437 
	`¥ötf
("ty≥_limô_buy: %s\n", 
_ty≥_limô_buy
);

438 
	`¥ötf
("ty≥_limô_£Œ: %s\n", 
_ty≥_limô_£Œ
);

439 
	`¥ötf
("ty≥_°›_loss: %s\n", 
_ty≥_°›_loss
);

440 
	}
}

444 
d©a_maöã«n˚_öput_t
 
	$¸óã_d©a_maöã«n˚_öput
(
sf
, 
•ecificIdx
)

446 
d©a_maöã«n˚_öput_t
 
admi
;

447 
TD©aMaöã«n˚TxnI≈ut
* 
m_TxnI≈ut
 = 
m_CDM
->
	`¸óãDMI≈ut
();

449 
admi
.
_ac˘_id
=
m_TxnI≈ut
->
ac˘_id
;

450 
admi
.
_c_id
=
m_TxnI≈ut
->
c_id
;

451 
admi
.
_co_id
=
m_TxnI≈ut
->
co_id
;

452 
admi
.
_day_of_m⁄th
=
m_TxnI≈ut
->
day_of_m⁄th
;

453 
admi
.
_vﬁ_ö¸
=
m_TxnI≈ut
->
vﬁ_ö¸
;

454 
	`mem˝y
(
admi
.
_symbﬁ
, 
m_TxnI≈ut
->
symbﬁ
, 16 );

455 
	`mem˝y
(
admi
.
_èbÀ_«me
, 
m_TxnI≈ut
->
èbÀ_«me
, 31 );

456 
	`mem˝y
(
admi
.
_tx_id
, 
m_TxnI≈ut
->
tx_id
, 21 );

457 
dñëe
 
m_TxnI≈ut
;

458  (
admi
);

459 
	}
};

461 
	gd©a_maöã«n˚_öput_t
::
	$¥öt
()

463 
	`¥ötf
("\ndata_maintenance_input\n");

464 
	`¥ötf
("ac˘_id: %ld\n", 
_ac˘_id
);

465 
	`¥ötf
("c_id: %ld\n", 
_c_id
);

466 
	`¥ötf
("co_id: %ld\n", 
_co_id
);

467 
	`¥ötf
("day_of_m⁄th: %d \n", 
_day_of_m⁄th
);

468 
	`¥ötf
("symbﬁ: %s\n", 
_symbﬁ
);

469 
	`¥ötf
("èbÀ_«me: %s\n", 
_èbÀ_«me
);

470 
	`¥ötf
("tx_id: %s\n", 
_tx_id
);

471 
	`¥ötf
("vﬁ_ö¸ %d\n", 
_vﬁ_ö¸
);

472 
	}
}

476 
åade_˛ónup_öput_t
 
	$¸óã_åade_˛ónup_öput
(
sf
, 
•ecificIdx
)

478 
åade_˛ónup_öput_t
 
©ci
;

479 
TTødeCÀ™upTxnI≈ut
* 
m_CÀ™upTxnI≈ut
 = 
m_CDM
->
	`¸óãTCI≈ut
();

481 
©ci
.
_åade_id
=
m_CÀ™upTxnI≈ut
->
°¨t_åade_id
;

482 
	`mem˝y
(
©ci
.
_°_ˇn˚Àd_id
, 
m_CÀ™upTxnI≈ut
->
°_ˇn˚Àd_id
, 5 );

483 
	`mem˝y
(
©ci
.
_°_≥ndög_id
, 
m_CÀ™upTxnI≈ut
->
°_≥ndög_id
, 5 );

484 
	`mem˝y
(
©ci
.
_°_submôãd_id
, 
m_CÀ™upTxnI≈ut
->
°_submôãd_id
, 5 );

485 
dñëe
 
m_CÀ™upTxnI≈ut
;

486  (
©ci
);

487 
	}
}

489 
	gåade_˛ónup_öput_t
::
	$¥öt
()

491 
	`¥ötf
("\ntrade_cleanup_input\n");

492 
	`¥ötf
("åade_id: %ld \n", 
_åade_id
);

493 
	`¥ötf
("°_ˇn˚Àd_id: %s\n", 
_°_ˇn˚Àd_id
);

494 
	`¥ötf
("°_≥ndög_id: %s\n", 
_°_≥ndög_id
);

495 
	`¥ötf
("°_submôãd_id: %s\n", 
_°_submôãd_id
);

496 
	}
}

498 
EXIT_NAMESPACE
(
ç˚
);

	@src/workload/tpch/dbgen/bcd2.cpp

35 
	~<°dio.h
>

36 
	~"w‹klﬂd/çch/dbgí/bcd2.h
"

39 
ENTER_NAMESPACE
(
dbgíçch
);

42 
	#DIGITS_PER_LONG
 7

	)

43 
	#WORD_DIVISOR
 10000000

	)

44 
	#GET_DIGIT
(
num
, 
low
, 
high
) \

45 ((
num
Ë>
DIGITS_PER_LONG
)? \

46 (
high
 & (0xF << (4 * ((
num
Ë- 
DIGITS_PER_LONG
)))) \

47 >> (((
num
Ë- 
DIGITS_PER_LONG
) * 4): \

48 (
low
 & (0xF << (4 * (
num
)))Ë>> (“umË* 4)

	)

49 
	#SET_DIGIT
(
vÆue
, 
num
, 
low
, 
high
) \

50 i‡((
num
Ë>
DIGITS_PER_LONG
) \

52 *
high
 &= \

53 (0xFFFFFFF ^ (0xF << (4 * ((
num
Ë- 
DIGITS_PER_LONG
)))); \

54 *
high
 |(
vÆue
 << (4 * ((
num
Ë- 
DIGITS_PER_LONG
))); \

58 *
low
 = (*low & (0xFFFFFFF ^ (0xF << (4 * (
num
))))); \

59 *
low
 |(
vÆue
 << (4 * (
num
))); \

60 }

	)

62 
	$bö_bcd2
(
bö¨y
, *
low_ªs
, *
high_ªs
)

64 
numbî
[15],

65 *
cuºít
;

66 
cou¡
;

67 *
de°
;

69 *
low_ªs
 = *
high_ªs
 = 0;

70 
	`•rötf
(
numbî
, "%014ld", 
bö¨y
);

71 
cuºít
 = 
numbî
, 
cou¡
=13; *current; current++, count--)

73 
de°
 = (
cou¡
 < 
DIGITS_PER_LONG
)?
low_ªs
:
high_ªs
;

74 *
de°
 = *dest << 4;

75 *
de°
 |*
cuºít
 - '0';

78 
	}
}

81 
	$bcd2_bö
(*
de°
, 
bcd
)

83 
cou¡
;

84 
mask
;

86 
cou¡
 = 
DIGITS_PER_LONG
 - 1;

87 
mask
 = 0xF000000;

88 *
de°
 = 0;

89 
mask
)

91 *
de°
 *= 10;

92 *
de°
 +(
bcd
 & 
mask
Ë>> (4 * 
cou¡
);

93 
mask
 = mask >> 4;

94 
cou¡
 -= 1;

97 
	}
}

100 
	$bcd2_add
(*
bcd_low
, *
bcd_high
, 
addíd
)

102 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
ªs
;

103 
digô
;

105 
	`bö_bcd2
(
addíd
, &
tmp_lo
, &
tmp_hi
);

106 
ˇºy
 = 0;

107 
digô
=0; digit < 14; digit++)

109 
ªs
 = 
	`GET_DIGIT
(
digô
, *
bcd_low
, *
bcd_high
);

110 
ªs
 +
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

111 
ªs
 +
ˇºy
;

112 
ˇºy
 = 
ªs
 / 10;

113 
ªs
 %= 10;

114 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

116 (
ˇºy
);

117 
	}
}

120 
	$bcd2_sub
(*
bcd_low
, *
bcd_high
, 
subíd
)

122 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
ªs
;

123 
digô
;

125 
	`bö_bcd2
(
subíd
, &
tmp_lo
, &
tmp_hi
);

126 
ˇºy
 = 0;

127 
digô
=0; digit < 14; digit++)

129 
ªs
 = 
	`GET_DIGIT
(
digô
, *
bcd_low
, *
bcd_high
);

130 
ªs
 -
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

131 
ªs
 -
ˇºy
;

132 i‡(
ªs
 < 0)

134 
ªs
 += 10;

135 
ˇºy
 = 1;

137 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

139 (
ˇºy
);

140 
	}
}

143 
	$bcd2_mul
(*
bcd_low
, *
bcd_high
, 
mu…ùlõr
)

145 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
m_lo
, 
m_hi
, 
m1
, 
m2
;

146 
udigô
, 
ldigô
, 
ªs
;

148 
tmp_lo
 = *
bcd_low
;

149 
tmp_hi
 = *
bcd_high
;

150 
	`bö_bcd2
(
mu…ùlõr
, &
m_lo
, &
m_hi
);

151 *
bcd_low
 = 0;

152 *
bcd_high
 = 0;

153 
ˇºy
 = 0;

154 
ldigô
=0;Üdigit < 14;Üdigit++)

156 
m1
 = 
	`GET_DIGIT
(
ldigô
, 
m_lo
, 
m_hi
);

157 
ˇºy
 = 0;

158 
udigô
=0; udigit < 14; udigit++)

160 
m2
 = 
	`GET_DIGIT
(
udigô
, 
tmp_lo
, 
tmp_hi
);

161 
ªs
 = 
m1
 * 
m2
;

162 
ªs
 +
ˇºy
;

163 i‡(
udigô
 + 
ldigô
 < 14)

165 
ˇºy
 = 
	`GET_DIGIT
(
udigô
 + 
ldigô
, *
bcd_low
, *
bcd_high
);

166 
ªs
 +
ˇºy
;

168 
ˇºy
 = 
ªs
 / 10;

169 
ªs
 %= 10;

170 i‡(
udigô
 + 
ldigô
 < 14) {

171 
	`SET_DIGIT
(
ªs
, 
udigô
 + 
ldigô
, 
bcd_low
, 
bcd_high
);

175 (
ˇºy
);

176 
	}
}

179 
	$bcd2_div
(*
bcd_low
, *
bcd_high
, 
divis‹
)

181 
tmp_lo
, 
tmp_hi
, 
ˇºy
, 
d1
, 
ªs
, 
digô
;

184 
ˇºy
 = 0;

185 
tmp_lo
 = *
bcd_low
;

186 
tmp_hi
 = *
bcd_high
;

187 *
bcd_low
 = *
bcd_high
 = 0;

188 
digô
=13; digit >= 0; digit--)

190 
d1
 = 
	`GET_DIGIT
(
digô
, 
tmp_lo
, 
tmp_hi
);

191 
d1
 +10 * 
ˇºy
;

192 
ªs
 = 
d1
 / 
divis‹
;

193 
ˇºy
 = 
d1
 % 
divis‹
;

194 
	`SET_DIGIT
(
ªs
, 
digô
, 
bcd_low
, 
bcd_high
);

196 (
ˇºy
);

197 
	}
}

200 
	$bcd2_mod
(*
bcd_low
, *
bcd_high
, 
modulo
)

202 
tmp_low
, 
tmp_high
;

204 
tmp_low
 = *
bcd_low
;

205 
tmp_high
 = *
bcd_high
;

206 
tmp_high
 || 
tmp_low
 > 
modulo
)

207 
	`bcd2_sub
(&
tmp_low
, &
tmp_high
, 
modulo
);

208 (
tmp_low
);

209 
	}
}

212 
	$bcd2_cmp
(*
low1
, *
high1
, 
comp
)

214 
ãmp
 = 0;

216 
	`bcd2_bö
(&
ãmp
, *
high1
);

217 i‡(
ãmp
 > 214)

219 
	`bcd2_bö
(&
ãmp
, *
low1
);

220 (
ãmp
 - 
comp
);

221 
	}
}

224 
EXIT_NAMESPACE
(
dbgíçch
);

227 #ifde‡
TEST_BCD


228 
	~<vÆues.h
>

230 
	$maö
()

232 
bö
, 
low_bcd
, 
high_bcd
;

233 
i
;

235 
bö
 = 
MAXINT
;

236 
	`¥ötf
("%ld\n", 
bö
);

237 
	`bö_bcd2
(
bö
, &
low_bcd
, &
high_bcd
);

238 
	`¥ötf
("%ld %ld\n", 
high_bcd
, 
low_bcd
);

239 
bö
 = 0;

240 
	`bcd2_bö
(&
bö
, 
high_bcd
);

241 
	`bcd2_bö
(&
bö
, 
low_bcd
);

242 
	`¥ötf
–"%ld\n", 
bö
);

243 
i
=9; i >= 0; i--)

244 
	`¥ötf
("%dth digit in %d is %d\n",

245 
i
, 
bö
, 
	`GET_DIGIT
(i, 
low_bcd
, 
high_bcd
));

246 
	`bcd2_add
(&
low_bcd
, &
high_bcd
, 
MAXINT
);

247 
bö
 = 0;

248 
	`bcd2_bö
(&
bö
, 
high_bcd
);

249 
high_bcd
 = 
bö
;

250 
bö
 = 0;

251 
	`bcd2_bö
(&
bö
, 
low_bcd
);

252 
low_bcd
 = 
bö
;

253 
	`¥ötf
–"%ld%07ld\n", 
high_bcd
, 
low_bcd
);

254 
	`bö_bcd2
(14, &
low_bcd
, &
high_bcd
);

255 
	`bcd2_mul
(&
low_bcd
, &
high_bcd
, 23L);

256 
bö
 = 0;

257 
	`bcd2_bö
(&
bö
, 
high_bcd
);

258 
	`bcd2_bö
(&
bö
, 
low_bcd
);

259 
	`¥ötf
–"%ld\n", 
bö
);

260 
	`bcd2_div
(&
low_bcd
, &
high_bcd
, 10L);

261 
bö
 = 0;

262 
	`bcd2_bö
(&
bö
, 
high_bcd
);

263 
	`bcd2_bö
(&
bö
, 
low_bcd
);

264 
	`¥ötf
–"%ld\n", 
bö
);

265 
	}
}

	@src/workload/tpch/dbgen/bm_utils.cpp

60 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

61 
	~"w‹klﬂd/çch/dbgí/dss.h
"

63 
	~<°dio.h
>

65 
	~<time.h
>

66 
	~<î∫o.h
>

67 
	~<°rög.h
>

68 #ifde‡
HP


69 
	~<°rögs.h
>

71 
	~<˘y≥.h
>

72 
	~<m©h.h
>

73 #i‚de‡
_POSIX_SOURCE


74 
	~<mÆloc.h
>

76 
	~<f˙é.h
>

77 
	~<sys/ty≥s.h
>

78 
	~<sys/°©.h
>

79 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

83 
ENTER_NAMESPACE
(
dbgíçch
);

86 
	gÆpha_num
[65] =

89 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

90 
	#PROTO
(
s
Ë
	)
s

92 
	#PROTO
(
s
Ë()

	)

95 *
gëív
 
PROTO
((c⁄° *
«me
));

96 
ußge
();

97 *
≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
, 
DSS_HUGE
& 
sour˚
, di°ributi⁄* 
cd
);

98 
£ed_t
 
Sìd
[];

104 c⁄° * 
	$ív_c⁄fig
(c⁄° * , c⁄° *
dÊt
)

106  (
dÊt
);

107 
	}
}

113 
	$yes_no
(*
¥om±
)

115 
ª∂y
[128];

117 #ifde‡
WIN32


119 #¥agm®
	`w¨nög
(
dißbÀ
:4127)

124 #ifde‡
WIN32


125 #¥agm®
	`w¨nög
(:4127)

127 
	`¥ötf
("%†[Y/N]: ", 
¥om±
);

128 
	`fgës
(
ª∂y
, 128, 
°dö
);

129 *
ª∂y
)

138 
	`¥ötf
("Pleaseánswer 'yes' or 'no'.\n");

141 
	}
}

149 
	$a_∫d
(
mö
, 
max
, 
cﬁumn
, *
de°
)

151 
DSS_HUGE
 
i
,

152 
Àn
,

153 
ch¨_öt
;

155 
	`RANDOM
(
Àn
, 
mö
, 
max
, 
cﬁumn
);

156 
i
 = 0; i < 
Àn
; i++)

158 i‡(
i
 % 5 == 0)

159 
	`RANDOM
(
ch¨_öt
, 0, 
MAX_LONG
, 
cﬁumn
);

160 *(
de°
 + 
i
Ë
Æpha_num
[
ch¨_öt
 & 077];

161 
ch¨_öt
 >>= 6;

163 *(
de°
 + 
Àn
) = '\0';

165 
	}
}

173 
	$e_°r
(
di°ributi⁄
 *
d
, 
mö
, 
max
, 
°ªam
, *
de°
)

175 
°πmp
[
MAXAGG_LEN
 + 1];

176 
DSS_HUGE
 
loc
;

177 
Àn
;

179 
	`a_∫d
(
mö
, 
max
, 
°ªam
, 
de°
);

180 
	`pick_°r
(
d
, 
°ªam
, 
°πmp
);

181 
Àn
 = 
	`°æí
(
°πmp
);

182 
	`RANDOM
(
loc
, 0, (
	`°æí
(
de°
Ë- 1 - 
Àn
), 
°ªam
);

183 
	`°∫˝y
(
de°
 + 
loc
, 
°πmp
, 
Àn
);

186 
	}
}

195 
	$pick_°r
(
di°ributi⁄
 *
s
, 
c
, *
èrgë
)

197 
i
 = 0;

198 
DSS_HUGE
 
j
;

200 
	`RANDOM
(
j
, 1, 
s
->
li°
[s->
cou¡
 - 1].
weight
, 
c
);

201 
s
->
li°
[
i
].
weight
 < 
j
) {

202 
i
++;

204 
	`°r˝y
(
èrgë
, 
s
->
li°
[
i
].
ãxt
);

205 (
i
);

206 
	}
}

212 
	$unjulün
(
d©e
)

214 
i
;

215 
ªs
 = 0;

217 
i
 = 
STARTDATE
 / 1000; i < 
d©e
 / 1000; i++)

218 
ªs
 +365 + 
	`LEAP
(
i
);

219 
ªs
 +
d©e
 % 1000 - 1;

221 (
ªs
);

222 
	}
}

225 
	$julün
(
d©e
)

227 
off£t
;

228 
ªsu…
;

229 
yr
;

230 
yíd
;

232 
off£t
 = 
d©e
 - 
STARTDATE
;

233 
ªsu…
 = 
STARTDATE
;

235 #ifde‡
WIN32


237 #¥agm®
	`w¨nög
(
dißbÀ
:4127)

242 #ifde‡
WIN32


243 #¥agm®
	`w¨nög
(:4127)

245 
yr
 = 
ªsu…
 / 1000;

246 
yíd
 = 
yr
 * 1000 + 365 + 
	`LEAP
(yr);

247 i‡(
ªsu…
 + 
off£t
 > 
yíd
)

249 
off£t
 -
yíd
 - 
ªsu…
 + 1;

250 
ªsu…
 += 1000;

256  (
ªsu…
 + 
off£t
);

257 
	}
}

264 
	$ªad_di°
(c⁄° *
∑th
, c⁄° *
«me
, 
di°ributi⁄
 *
èrgë
)

266 
FILE
 *
Â
;

267 
löe
[256];

268 
tokí
[256];

269 *
c
;

271 
weight
;

272 
cou¡
 = 0;

273 
«me_£t
 = 0;

275 i‡(
d_∑th
 =
NULL
)

277 
	`•rötf
(
löe
, "%s%c%s",

278 
	`ív_c⁄fig
(
CONFIG_TAG
, 
CONFIG_DFLT
), 
PATH_SEP
, 
∑th
);

279 
Â
 = 
	`f›í
(
löe
, "r");

280 
	`OPEN_CHECK
(
Â
, 
löe
);

284 
Â
 = 
	`f›í
(
d_∑th
, "r");

285 
	`OPEN_CHECK
(
Â
, 
d_∑th
);

287 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
)

289 i‡((
c
 = 
	`°rchr
(
löe
, '\n')Ë!
NULL
)

290 *
c
 = '\0';

291 i‡((
c
 = 
	`°rchr
(
löe
, '#')Ë!
NULL
)

292 *
c
 = '\0';

293 i‡(*
löe
 == '\0')

296 i‡(!
«me_£t
)

298 i‡(
	`dssˇ£cmp
(
	`°πok
(
löe
, "\n\t "), "BEGIN"))

300 i‡(
	`dssˇ£cmp
(
	`°πok
(
NULL
, "\n\à"), 
«me
))

302 
«me_£t
 = 1;

307 i‡(!
	`ds¢ˇ£cmp
(
löe
, "END", 3))

309 
	`f˛o£
(
Â
);

314 i‡(
	`ssˇnf
(
löe
, "%[^|]|%ld", 
tokí
, &
weight
) != 2)

317 i‡(!
	`dssˇ£cmp
(
tokí
, "count"))

319 
èrgë
->
cou¡
 = 
weight
;

320 
èrgë
->
li°
 =

321 (
£t_membî
 *)

322 
	`mÆloc
((
size_t
)(
weight
 * (
£t_membî
)));

323 
	`MALLOC_CHECK
(
èrgë
->
li°
);

324 
èrgë
->
max
 = 0;

327 
èrgë
->
li°
[
cou¡
].
ãxt
 =

328 (*Ë
	`mÆloc
((
size_t
)(
	`°æí
(
tokí
) + 1));

329 
	`MALLOC_CHECK
(
èrgë
->
li°
[
cou¡
].
ãxt
);

330 
	`°r˝y
(
èrgë
->
li°
[
cou¡
].
ãxt
, 
tokí
);

331 
èrgë
->
max
 +
weight
;

332 
èrgë
->
li°
[
cou¡
].
weight
 =Å¨gë->
max
;

334 
cou¡
 += 1;

337 i‡(
cou¡
 !
èrgë
->count) {

338 
	`Ârötf
(
°dîr
, "RódÉº‹ o¿di° '%s'\n", 
«me
);

339 
	`f˛o£
(
Â
);

340 
	`as£π
(0);

343 
èrgë
->
≥rmuã
 = (*)
NULL
;

344 
	`f˛o£
(
Â
);

346 
	}
}

352 
FILE
 *

353 
	$tbl_›í
(
tbl
, c⁄° *
mode
)

355 
¥om±
[256];

356 
fuŒ∑th
[256];

357 
FILE
 *
f
;

358 
°©
 
f°©s
;

359 
ªtcode
;

362 i‡(*
tdefs
[
tbl
].
«me
 =
PATH_SEP
)

363 
	`°r˝y
(
fuŒ∑th
, 
tdefs
[
tbl
].
«me
);

365 
	`•rötf
(
fuŒ∑th
, "%s%c%s",

366 
	`ív_c⁄fig
(
PATH_TAG
, 
PATH_DFLT
), 
PATH_SEP
, 
tdefs
[
tbl
].
«me
);

368 
ªtcode
 = 
	`°©
(
fuŒ∑th
, &
f°©s
);

369 i‡(
ªtcode
 && (
î∫o
 !
ENOENT
))

371 
	`Ârötf
(
°dîr
, "°©(%sËÁûed.\n", 
fuŒ∑th
);

372 
	`exô
(-1);

374 i‡(
	`S_ISREG
(
f°©s
.
°_mode
Ë&& !
f‹˚
 && *
mode
 != 'r' )

376 
	`•rötf
(
¥om±
, "Dÿyou w™àtÿovîwrôê%†?", 
fuŒ∑th
);

377 i‡(!
	`yes_no
(
¥om±
))

378 
	`exô
(0);

381 i‡(
	`S_ISFIFO
(
f°©s
.
°_mode
))

383 
ªtcode
 =

384 
	`›í
(
fuŒ∑th
, ((*
mode
 ='r')?
O_RDONLY
:
O_WRONLY
)|
O_CREAT
);

385 
f
 = 
	`fd›í
(
ªtcode
, 
mode
);

388 
f
 = 
	`f›í
(
fuŒ∑th
, 
mode
);

390 
	`OPEN_CHECK
(
f
, 
fuŒ∑th
);

391 i‡(
hódî
 && 
cﬁum«r
 && 
tdefs
[
tbl
].hódî !
NULL
)

392 
tdefs
[
tbl
].
	`hódî
(
f
);

394  (
f
);

395 
	}
}

403 
	$agg_°r
(
di°ributi⁄
 *
£t
, 
cou¡
, 
cﬁ
, *
de°
)

405 
di°ributi⁄
 *
d
;

406 
i
;

408 
d
 = 
£t
;

409 *
de°
 = '\0';

411 
DSS_HUGE
 
sour˚
 = 0;

413 
i
=0; i < 
cou¡
; i++) {

414 
	`°rˇt
(
de°
, 
	`DIST_MEMBER
(
£t
,*
	`≥rmuã_di°
(
d
, 
cﬁ
, 
sour˚
, set)));

415 
	`°rˇt
(
de°
, " ");

416 
d
 = (
di°ributi⁄
 *)
NULL
;

419 *(
de°
 + 
	`°æí
(dest) - 1) = '\0';

422 
	}
}

426 
	$ds¢ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
n
)

428 ; 
n
 > 0; ++
s1
, ++
s2
, --n) {

429 i‡(
	`tﬁowî
(*
s1
Ë!tﬁowî(*
s2
)) {

430  ((
	`tﬁowî
(*
s1
Ë<Åﬁowî(*
s2
)) ? -1 : 1);

432 i‡(*
s1
 == '\0') {

437 
	}
}

440 
	$dssˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
)

442 ; 
	`tﬁowî
(*
s1
Ë=tﬁowî(*
s2
); ++s1, ++s2) {

443 i‡(*
s1
 == '\0') {

447  ((
	`tﬁowî
(*
s1
Ë<Åﬁowî(*
s2
)) ? -1 : 1);

448 
	}
}

451 #i‚de‡
STDLIB_HAS_GETOPT


452 
	g›töd
 = 0;

453 
	g›ãº
 = 0;

454 *
	g›èrg
 = 
NULL
;

457 
	$gë›t
(
ac
, **
av
, *
›t
)

459 *
√xtch¨
 = 
NULL
;

460 *
˝
;

461 
hﬁd
;

463 i‡(
›èrg
 =
NULL
)

465 
›èrg
 = (*)
	`mÆloc
(
BUFSIZ
);

466 
	`MALLOC_CHECK
(
›èrg
);

469 i‡(!
√xtch¨
 || *nextchar == '\0')

471 
›töd
++;

472 i‡(
›töd
 =
ac
)

474 
√xtch¨
 = 
av
[
›töd
];

475 i‡(*
√xtch¨
 != '-')

477 
√xtch¨
 +=1;

480 i‡(
√xtch¨
 && *nextchar == '-')

482 
›töd
++;

487 
˝
 = 
	`°rchr
(
›t
, *
√xtch¨
);

488 
√xtch¨
 += 1;

489 i‡(
˝
 =
NULL
)

491 i‡(*(
˝
 + 1) == ':')

493 i‡(*
√xtch¨
)

495 
hﬁd
 = *
˝
;

496 
˝
 = 
›èrg
;

497 *
√xtch¨
)

498 *
˝
++ = *
√xtch¨
++;

499 *
˝
 = '\0';

500 *
˝
 = 
hﬁd
;

504 i‡(++
›töd
 =
ac
)

506 
	`°r˝y
(
›èrg
, 
av
[
›töd
]);

508 
√xtch¨
 = 
NULL
;

510 (*
˝
);

512 
	}
}

516 
	$mk_ascd©e
()

518 **
m
;

519 
dss_time_t
 
t
;

520 
DSS_HUGE
 
i
;

522 
m
 = (**Ë
	`mÆloc
((
size_t
)(
TOTDATE
 *  (*)));

523 
	`MALLOC_CHECK
(
m
);

524 
i
 = 0; i < 
TOTDATE
; i++)

526 
	`mk_time
(
i
 + 1, &
t
);

527 
m
[
i
] = 
	`°rdup
(
t
.
Æpha
);

530 (
m
);

531 
	}
}

540 
DSS_HUGE


541 
	$£t_°©e
(
èbÀ
, 
sf
, 
¥ocs
, 
°ï
, 
DSS_HUGE
 *
exåa_rows
)

543 
i
;

544 
DSS_HUGE
 
rowcou¡
, 
ªmaödî
, 
ªsu…
;

546 i‡(
sf
 =0 || 
°ï
 == 0)

549 
rowcou¡
 = 
tdefs
[
èbÀ
].
ba£
 / 
¥ocs
;

550 i‡((
sf
 / 
¥ocs
Ë> ()
MAX_32B_SCALE
) {

551 
	`INTERNAL_ERROR
("SCALE OVERFLOW. RE-RUN WITH MORE CHILDREN.");

553 
rowcou¡
 *
sf
;

554 
ªmaödî
 = (
tdefs
[
èbÀ
].
ba£
 % 
¥ocs
Ë* 
sf
;

555 
rowcou¡
 +
ªmaödî
 / 
¥ocs
;

556 
ªsu…
 = 
rowcou¡
;

557 
i
=0; i < 
°ï
 - 1; i++)

559 i‡(
èbÀ
 =
LINE
)

560 
tdefs
[
èbÀ
].
	`gí_£ed
(1, 
rowcou¡
);

562 
tdefs
[
èbÀ
].
	`gí_£ed
(0, 
rowcou¡
);

565 i‡(
tdefs
[
èbÀ
].
chûd
 !
NONE
)

566 
tdefs
[tdefs[
èbÀ
].
chûd
].
	`gí_£ed
(0,
rowcou¡
);

568 *
exåa_rows
 = 
ªmaödî
 % 
¥ocs
;

569 i‡(
°ï
 > 
¥ocs
)

570 
tdefs
[
èbÀ
].
	`gí_£ed
(0, *
exåa_rows
);

572 (
ªsu…
);

573 
	}
}

576 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/build.cpp

43 
	~<°dio.h
>

44 
	~<°rög.h
>

45 #i‚de‡
VMS


46 
	~<sys/ty≥s.h
>

48 #i‡
deföed
(
SUN
)

49 
	~<uni°d.h
>

51 
	~<m©h.h
>

53 
	~"w‹klﬂd/çch/dbgí/dss.h
"

54 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

55 
	~"w‹klﬂd/çch/dbgí/∫g64.h
"

58 
ENTER_NAMESPACE
(
dbgíçch
);

60 
	g oi£
[4] = {'|', '/', '-', '\\' };

63 
	#LEAP_ADJ
(
yr
, 
m¡h
) \

64 ((
	`LEAP
(
yr
Ë&& (
m¡h
Ë>2Ë? 1 : 0)

	)

65 
	#JDAY_BASE
 8035

	)

66 
	#JMNTH_BASE
 (-70 * 12Ë

	)

67 
	#JDAY
(
d©e
Ë((d©eË- 
STARTDATE
 + 
JDAY_BASE
 + 1)

	)

68 
	#PART_SUPP_BRIDGE
(
tgt
, 
p
, 
s
) \

70 
DSS_HUGE
 
tŸ_s˙t
 = 
tdefs
[
SUPP
].
ba£
 * 
sˇÀ
; \

71 
tgt
 = (
p
 + 
s
 * (
tŸ_s˙t
 / 
SUPP_PER_PART
 + \

72 (Ë((
p
 - 1Ë/ 
tŸ_s˙t
))) %Åot_scnt + 1; \

73 }

	)

74 
	#V_STR
(
avg
, 
sd
, 
tgt
Ë
	`a_∫d
(()◊vg * 
V_STR_LOW
),()◊vg * 
V_STR_HGH
), sd,Ågt)

	)

75 
	#TEXT
(
avg
, 
sd
, 
tgt
Ë
	`dbg_ãxt
—gt, ()◊vg * 
V_STR_LOW
),()◊vg * 
V_STR_HGH
), sd)

	)

76 
gí_ph⁄e
 
PROTO
((
DSS_HUGE
 
öd
, *
èrgë
, 
£ed
));

78 
DSS_HUGE


79 
	$Ωb_routöe
(
DSS_HUGE
 
p
)

81 
DSS_HUGE
 
¥i˚
;

83 
¥i˚
 = 90000;

84 
¥i˚
 +(
p
/10) % 20001;

85 
¥i˚
 +(
p
 % 1000) * 100;

87 (
¥i˚
);

88 
	}
}

91 
	$gí_ph⁄e
(
DSS_HUGE
 
öd
, *
èrgë
, 
£ed
)

93 
DSS_HUGE
 
acode
,

94 
exchg
,

95 
numbî
;

97 
	`RANDOM
(
acode
, 100, 999, 
£ed
);

98 
	`RANDOM
(
exchg
, 100, 999, 
£ed
);

99 
	`RANDOM
(
numbî
, 1000, 9999, 
£ed
);

101 
	`•rötf
(
èrgë
, "%02d", ()(10 + (
öd
 % 
NATIONS_MAX
)));

102 
	`•rötf
(
èrgë
 + 3, "%03d", ()
acode
);

103 
	`•rötf
(
èrgë
 + 7, "%03d", ()
exchg
);

104 
	`•rötf
(
èrgë
 + 11, "%04d", ()
numbî
);

105 
èrgë
[2] =Åarget[6] =Åarget[10] = '-';

108 
	}
}

113 
	$mk_cu°
(
DSS_HUGE
 
n_cu°
, 
cu°omî_t
 *
c
)

115 
DSS_HUGE
 
i
;

116 
bInô
 = 0;

117 
szF‹m©
[100];

119 !
bInô
) {

120 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_cust ..\n");

121 
	`•rötf
(
szF‹m©
, 
C_NAME_FMT
, 9, 
HUGE_FORMAT
 + 1);

122 
bInô
 = 1;

125 
c
->
cu°key
 = 
n_cu°
;

126 
	`•rötf
(
c
->
«me
, 
szF‹m©
, 
C_NAME_TAG
, 
n_cu°
);

127 
	`V_STR
(
C_ADDR_LEN
, 
C_ADDR_SD
, 
c
->
addªss
);

128 
c
->
Æí
 = 
	`°æí
(c->
addªss
);

129 
	`RANDOM
(
i
, 0, (
«ti⁄s
.
cou¡
 - 1), 
C_NTRG_SD
);

130 
c
->
«ti⁄_code
 = 
i
;

131 
	`gí_ph⁄e
(
i
, 
c
->
ph⁄e
, ()
C_PHNE_SD
);

132 
	`RANDOM
(
c
->
ac˘bÆ
, 
C_ABAL_MIN
, 
C_ABAL_MAX
, 
C_ABAL_SD
);

133 
	`pick_°r
(&
c_m£g_£t
, 
C_MSEG_SD
, 
c
->
mkt£gmít
);

134 
	`TEXT
(
C_CMNT_LEN
, 
C_CMNT_SD
, 
c
->
commít
);

135 
c
->
˛í
 = 
	`°æí
(c->
commít
);

138 
	}
}

145 
	$mk_•¨£
 (
DSS_HUGE
 
i
, DSS_HUGE *
ok
, 
£q
)

147 
low_bôs
;

149 *
ok
 = 
i
;

150 
low_bôs
 = ()(
i
 & ((1 << 
SPARSE_KEEP
) - 1));

151 *
ok
 = *ok >> 
SPARSE_KEEP
;

152 *
ok
 = *ok << 
SPARSE_BITS
;

153 *
ok
 +
£q
;

154 *
ok
 = *ok << 
SPARSE_KEEP
;

155 *
ok
 +
low_bôs
;

158 
	}
}

161 
	$mk_‹dî
(
DSS_HUGE
 
ödex
, 
‹dî_t
 *
o
, 
upd_num
)

163 
DSS_HUGE
 
l˙t
;

164 
DSS_HUGE
 
Ωri˚
;

165 
o˙t
;

166 
DSS_HUGE
 
tmp_d©e
;

167 
DSS_HUGE
 
s_d©e
;

168 
DSS_HUGE
 
r_d©e
;

169 
DSS_HUGE
 
c_d©e
;

170 
DSS_HUGE
 
˛k_num
;

171 
DSS_HUGE
 
suµ_num
;

172 **
asc_d©e
 = 
NULL
;

173 
tmp_°r
[2];

174 **
mk_ascd©e
 
	`PROTO
(());

175 
dñè
 = 1;

176 
bInô
 = 0;

177 
szF‹m©
[100];

179 !
bInô
) {

180 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_order ..\n");

181 
	`•rötf
(
szF‹m©
, 
O_CLRK_FMT
, 9, 
HUGE_FORMAT
 + 1);

182 
bInô
 = 1;

185 i‡(
asc_d©e
 =
NULL
) {

186 
asc_d©e
 = 
	`mk_ascd©e
();

189 
	`mk_•¨£
 (
ödex
, &
o
->
okey
,

190 (
upd_num
 =0Ë? 0 : 1 + upd_num / (10000 / 
¨e‰esh
));

191 i‡(
sˇÀ
 >= 30000) {

192 
	`RANDOM64
(
o
->
cu°key
, 
O_CKEY_MIN
, 
O_CKEY_MAX
, 
O_CKEY_SD
);

195 
	`RANDOM
(
o
->
cu°key
, 
O_CKEY_MIN
, 
O_CKEY_MAX
, 
O_CKEY_SD
);

198 
o
->
cu°key
 % 
CUST_MORTALITY
 == 0) {

199 
o
->
cu°key
 +
dñè
;

200 
o
->
cu°key
 = 
	`MIN
(o->cu°key, 
O_CKEY_MAX
);

201 
dñè
 *= -1;

204 
	`RANDOM
(
tmp_d©e
, 
O_ODATE_MIN
, 
O_ODATE_MAX
, 
O_ODATE_SD
);

205 
	`°r˝y
(
o
->
od©e
, 
asc_d©e
[
tmp_d©e
 - 
STARTDATE
]);

207 
	`pick_°r
(&
o_¥i‹ôy_£t
, 
O_PRIO_SD
, 
o
->
›ri‹ôy
);

208 
	`RANDOM
(
˛k_num
, 1, 
	`MAX
((
sˇÀ
 * 
O_CLRK_SCL
), O_CLRK_SCL), 
O_CLRK_SD
);

209 
	`•rötf
(
o
->
˛îk
, 
szF‹m©
, 
O_CLRK_TAG
, 
˛k_num
);

210 
	`TEXT
(
O_CMNT_LEN
, 
O_CMNT_SD
, 
o
->
commít
);

211 
o
->
˛í
 = 
	`°æí
(o->
commít
);

212 #ifde‡
DEBUG


213 i‡(
o
->
˛í
 > 
O_CMNT_MAX
Ë
	`Ârötf
(
°dîr
, "commíàîr‹: O%d\n", 
ödex
);

215 
o
->
•ri‹ôy
 = 0;

217 
o
->
tŸÆ¥i˚
 = 0;

218 
o
->
‹dî°©us
 = 'O';

219 
o˙t
 = 0;

221 
	`RANDOM
(
o
->
löes
, 
O_LCNT_MIN
, 
O_LCNT_MAX
, 
O_LCNT_SD
);

222 
l˙t
 = 0;Ü˙à< 
o
->
löes
;Ücnt++) {

223 
o
->
l
[
l˙t
].
okey
 = o->okey;;

224 
o
->
l
[
l˙t
].lcnt =Ücnt + 1;

225 
	`RANDOM
(
o
->
l
[
l˙t
].
qu™tôy
, 
L_QTY_MIN
, 
L_QTY_MAX
, 
L_QTY_SD
);

226 
	`RANDOM
(
o
->
l
[
l˙t
].
discou¡
, 
L_DCNT_MIN
, 
L_DCNT_MAX
, 
L_DCNT_SD
);

227 
	`RANDOM
(
o
->
l
[
l˙t
].
èx
, 
L_TAX_MIN
, 
L_TAX_MAX
, 
L_TAX_SD
);

228 
	`pick_°r
(&
l_ö°ru˘_£t
, 
L_SHIP_SD
, 
o
->
l
[
l˙t
].
shùö°ru˘
);

229 
	`pick_°r
(&
l_smode_£t
, 
L_SMODE_SD
, 
o
->
l
[
l˙t
].
shùmode
);

230 
	`TEXT
(
L_CMNT_LEN
, 
L_CMNT_SD
, 
o
->
l
[
l˙t
].
commít
);

231 
o
->
l
[
l˙t
].
˛í
 = 
	`°æí
(o->l[l˙t].
commít
);

232 i‡(
sˇÀ
 >= 30000) {

233 
	`RANDOM64
(
o
->
l
[
l˙t
].
∑πkey
, 
L_PKEY_MIN
, 
L_PKEY_MAX
, 
L_PKEY_SD
);

236 
	`RANDOM
(
o
->
l
[
l˙t
].
∑πkey
, 
L_PKEY_MIN
, 
L_PKEY_MAX
, 
L_PKEY_SD
);

239 
Ωri˚
 = 
	`Ωb_routöe
(
o
->
l
[
l˙t
].
∑πkey
);

240 
	`RANDOM
(
suµ_num
, 0, 3, 
L_SKEY_SD
);

241 
	`PART_SUPP_BRIDGE
–
o
->
l
[
l˙t
].
suµkey
, o->l[l˙t].
∑πkey
, 
suµ_num
);

242 
o
->
l
[
l˙t
].
ïri˚
 = 
Ωri˚
 * o->l[l˙t].
qu™tôy
;

244 
o
->
tŸÆ¥i˚
 +=

245 ((
o
->
l
[
l˙t
].
ïri˚
 *

246 (()100 - 
o
->
l
[
l˙t
].
discou¡
)Ë/ ()
PENNIES
 ) *

247 (()100 + 
o
->
l
[
l˙t
].
èx
)

248 / ()
PENNIES
;

250 
	`RANDOM
(
s_d©e
, 
L_SDTE_MIN
, 
L_SDTE_MAX
, 
L_SDTE_SD
);

251 
s_d©e
 +
tmp_d©e
;

252 
	`RANDOM
(
c_d©e
, 
L_CDTE_MIN
, 
L_CDTE_MAX
, 
L_CDTE_SD
);

253 
c_d©e
 +
tmp_d©e
;

254 
	`RANDOM
(
r_d©e
, 
L_RDTE_MIN
, 
L_RDTE_MAX
, 
L_RDTE_SD
);

255 
r_d©e
 +
s_d©e
;

257 
	`°r˝y
(
o
->
l
[
l˙t
].
sd©e
, 
asc_d©e
[
s_d©e
 - 
STARTDATE
]);

258 
	`°r˝y
(
o
->
l
[
l˙t
].
cd©e
, 
asc_d©e
[
c_d©e
 - 
STARTDATE
]);

259 
	`°r˝y
(
o
->
l
[
l˙t
].
rd©e
, 
asc_d©e
[
r_d©e
 - 
STARTDATE
]);

262 i‡(
	`julün
(
r_d©e
Ë<
CURRENTDATE
) {

263 
	`pick_°r
(&
l_rÊag_£t
, 
L_RFLG_SD
, 
tmp_°r
);

265 
o
->
l
[
l˙t
].
rÊag
 = 
tmp_°r
[0];

269 
o
->
l
[
l˙t
].
rÊag
 = 'N';

272 i‡(
	`julün
(
s_d©e
Ë<
CURRENTDATE
) {

273 
o˙t
++;

275 
o
->
l
[
l˙t
].
l°©us
 = 'F';

279 
o
->
l
[
l˙t
].
l°©us
 = 'O';

283 i‡(
o˙t
 > 0) {

284 
o
->
‹dî°©us
 = 'P';

287 i‡(
o˙t
 =
o
->
löes
) {

288 
o
->
‹dî°©us
 = 'F';

292 
uöt
 
i
=0; i<
TOTDATE
; i++) {

293 
	`‰ì
 (
asc_d©e
[
i
]);

295 
	`‰ì
(
asc_d©e
);

298 
	}
}

301 
	$mk_∑π
(
DSS_HUGE
 
ödex
, 
∑π_t
 *
p
)

303 
DSS_HUGE
 
ãmp
;

304 
¢um
;

305 
DSS_HUGE
 
b∫d
;

306 
bInô
 = 0;

307 
szF‹m©
[100];

308 
szBøndF‹m©
[100];

310 i‡(!
bInô
) {

311 
	`TRACE
–
TRACE_ALWAYS
, "Init mk_part ..\n");

312 
	`•rötf
(
szF‹m©
, 
P_MFG_FMT
, 1, 
HUGE_FORMAT
 + 1);

313 
	`•rötf
(
szBøndF‹m©
, 
P_BRND_FMT
, 2, 
HUGE_FORMAT
 + 1);

314 
bInô
 = 1;

317 
p
->
∑πkey
 = 
ödex
;

318 
	`agg_°r
(&
cﬁ‹s
, ()
P_NAME_SCL
, ()
P_NAME_SD
, 
p
->
«me
);

319 
	`RANDOM
(
ãmp
, 
P_MFG_MIN
, 
P_MFG_MAX
, 
P_MFG_SD
);

320 
	`•rötf
(
p
->
mfgr
, 
szF‹m©
, 
P_MFG_TAG
, 
ãmp
);

321 
	`RANDOM
(
b∫d
, 
P_BRND_MIN
, 
P_BRND_MAX
, 
P_BRND_SD
);

322 
	`•rötf
(
p
->
bønd
, 
szBøndF‹m©
, 
P_BRND_TAG
, (
ãmp
 * 10 + 
b∫d
));

323 
p
->
éí
 = 
	`pick_°r
(&
p_ty≥s_£t
, 
P_TYPE_SD
,Ö->
ty≥
);

324 
p
->
éí
 = 
	`°æí
(
p_ty≥s_£t
.
li°
[p->éí].
ãxt
);

325 
	`RANDOM
(
p
->
size
, 
P_SIZE_MIN
, 
P_SIZE_MAX
, 
P_SIZE_SD
);

326 
	`pick_°r
(&
p_˙å_£t
, 
P_CNTR_SD
, 
p
->
c⁄èöî
);

327 
p
->
ªèû¥i˚
 = 
	`Ωb_routöe
(
ödex
);

328 
	`TEXT
(
P_CMNT_LEN
, 
P_CMNT_SD
, 
p
->
commít
);

329 
p
->
˛í
 = 
	`°æí
’->
commít
);

331 
¢um
 = 0; snum < 
SUPP_PER_PART
; snum++) {

332 
p
->
s
[
¢um
].
∑πkey
 =Ö->partkey;

333 
	`PART_SUPP_BRIDGE
–
p
->
s
[
¢um
].
suµkey
, 
ödex
, snum);

334 
	`RANDOM
(
p
->
s
[
¢um
].
qty
, 
PS_QTY_MIN
, 
PS_QTY_MAX
, 
PS_QTY_SD
);

335 
	`RANDOM
(
p
->
s
[
¢um
].
sco°
, 
PS_SCST_MIN
, 
PS_SCST_MAX
, 
PS_SCST_SD
);

336 
	`TEXT
(
PS_CMNT_LEN
, 
PS_CMNT_SD
, 
p
->
s
[
¢um
].
commít
);

337 
p
->
s
[
¢um
].
˛í
 = 
	`°æí
’->s[¢um].
commít
);

341 
	}
}

344 
	$mk_suµ
(
DSS_HUGE
 
ödex
, 
suµlõr_t
 *
s
)

346 
DSS_HUGE
 
i
;

347 
DSS_HUGE
 
bad_¥ess
;

348 
DSS_HUGE
 
noi£
;

349 
DSS_HUGE
 
off£t
;

350 
DSS_HUGE
 
ty≥
;

352 
szF‹m©
[100];

353 
	`•rötf
(
szF‹m©
, 
S_NAME_FMT
, 9, 
HUGE_FORMAT
 + 1);

355 
s
->
suµkey
 = 
ödex
;

356 
	`•rötf
(
s
->
«me
, 
szF‹m©
, 
S_NAME_TAG
, 
ödex
);

357 
	`V_STR
(
S_ADDR_LEN
, 
S_ADDR_SD
, 
s
->
addªss
);

358 
s
->
Æí
 = 
	`°æí
(s->
addªss
);

359 
	`RANDOM
(
i
, 0, 
«ti⁄s
.
cou¡
 - 1, 
S_NTRG_SD
);

360 
s
->
«ti⁄_code

i
;

361 
	`gí_ph⁄e
(
i
, 
s
->
ph⁄e
, 
S_PHNE_SD
);

362 
	`RANDOM
(
s
->
ac˘bÆ
, 
S_ABAL_MIN
, 
S_ABAL_MAX
, 
S_ABAL_SD
);

364 
	`TEXT
(
S_CMNT_LEN
, 
S_CMNT_SD
, 
s
->
commít
);

365 
s
->
˛í
 = 
	`°æí
(s->
commít
);

369 
	`RANDOM
(
bad_¥ess
, 1, 10000, 
BBB_CMNT_SD
);

370 
	`RANDOM
(
ty≥
, 0, 100, 
BBB_TYPE_SD
);

371 
	`RANDOM
(
noi£
, 0, (
s
->
˛í
 - 
BBB_CMNT_LEN
), 
BBB_JNK_SD
);

372 
	`RANDOM
(
off£t
, 0, (
s
->
˛í
 - (
BBB_CMNT_LEN
 + 
noi£
)),

373 
BBB_OFFSET_SD
);

375 i‡(
bad_¥ess
 <
S_CMNT_BBB
) {

376 
ty≥
 = (ty≥ < 
BBB_DEADBEATS
) ?0:1;

377 
	`mem˝y
(
s
->
commít
 + 
off£t
, 
BBB_BASE
, 
BBB_BASE_LEN
);

378 i‡(
ty≥
 == 0) {

379 
	`mem˝y
(
s
->
commít
 + 
BBB_BASE_LEN
 + 
off£t
 + 
noi£
,

380 
BBB_COMPLAIN
, 
BBB_TYPE_LEN
);

383 
	`mem˝y
(
s
->
commít
 + 
BBB_BASE_LEN
 + 
off£t
 + 
noi£
,

384 
BBB_COMMEND
, 
BBB_TYPE_LEN
);

388 
	}
}

390 
	sm⁄thEnum


392 c⁄° *
	mmdes
;

393 
	mdays
;

394 
	md˙t
;

397 
m⁄thEnum
 
	gm⁄ths
[13] =

399 {
NULL
, 0, 0},

416 
	$mk_time
(
DSS_HUGE
 
ödex
, 
dss_time_t
 *
t
)

418 
m
 = 0;

419 
y
;

420 
d
;

422 
t
->
timekey
 = 
ödex
 + 
JDAY_BASE
;

423 
y
 = 
	`julün
(
ödex
 + 
STARTDATE
 - 1) / 1000;

424 
d
 = 
	`julün
(
ödex
 + 
STARTDATE
 - 1) % 1000;

425 
d
 > 
m⁄ths
[
m
].
d˙t
 + 
	`LEAP_ADJ
(
y
, m))

426 
m
++;

427 
	`PR_DATE
(
t
->
Æpha
, 
y
, 
m
,

428 
d
 - 
m⁄ths
[
m
 - 1].
d˙t
 - ((
	`LEAP
(
y
) && m > 2) ? 1 : 0));

429 
t
->
yór
 = 1900 + 
y
;

430 
t
->
m⁄th
 = 
m
 + 12 * 
y
 + 
JMNTH_BASE
;

431 
t
->
wìk
 = (
d
 + 
T_START_DAY
 - 1) / 7 + 1;

432 
t
->
day
 = 
d
 - 
m⁄ths
[
m
 - 1].
d˙t
 - 
	`LEAP_ADJ
(
y
, m-1);

435 
	}
}

438 
	$mk_«ti⁄
(
DSS_HUGE
 
ödex
, 
code_t
 *
c
)

441 
c
->
code
 = 
ödex
;

442 
c
->
ãxt
 = 
«ti⁄s
.
li°
[
ödex
].text;

443 
c
->
joö
 = 
«ti⁄s
.
li°
[
ödex
].
weight
;

444 
	`TEXT
(
N_CMNT_LEN
, 
N_CMNT_SD
, 
c
->
commít
);

445 
c
->
˛í
 = 
	`°æí
(c->
commít
);

447 
	}
}

450 
	$mk_ªgi⁄
(
DSS_HUGE
 
ödex
, 
code_t
 *
c
)

452 
c
->
code
 = 
ödex
;

453 
c
->
ãxt
 = 
ªgi⁄s
.
li°
[
ödex
].text;

454 
c
->
joö
 = 0;

455 
	`TEXT
(
R_CMNT_LEN
, 
R_CMNT_SD
, 
c
->
commít
);

456 
c
->
˛í
 = 
	`°æí
(c->
commít
);

458 
	}
}

461 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/driver.cpp

56 
	#DECLARER


	)

57 
	#NO_FUNC
 ((*Ë()Ë
NULL


	)

58 
	#NO_LFUNC
 ((*Ë(, 
DSS_HUGE
)Ë
NULL


	)

60 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

61 
	~"w‹klﬂd/çch/dbgí/ªÀa£.h
"

62 
	~<°dlib.h
>

63 #i‡(
deföed
(
_POSIX_
)||!deföed(
WIN32
))

64 
	~<uni°d.h
>

65 
	~<sys/waô.h
>

67 
	~<°dio.h
>

68 
	~<limôs.h
>

69 
	~<m©h.h
>

70 
	~<˘y≥.h
>

71 
	~<sig«l.h
>

72 
	~<°rög.h
>

73 
	~<î∫o.h
>

74 #ifde‡
HP


75 
	~<°rögs.h
>

78 
	~"w‹klﬂd/çch/dbgí/dss.h
"

79 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

82 
ENTER_NAMESPACE
(
dbgíçch
);

89 
ußge
 ();

90 
¥ï_dúe˘
 (*);

91 
˛o£_dúe˘
 ();

92 
kûl_lﬂd
 ();

93 
gí_tbl
 (
äum
, 
DSS_HUGE
 
°¨t
, DSS_HUGE 
cou¡
, 
upd_num
);

94 
¥_dønge
 (
tbl
, 
DSS_HUGE
 
mö
, DSS_HUGE 
˙t
, 
num
);

95 
£t_fûes
 (
t
, 
∂ﬂd
);

96 
∑πül
 (, );

99 
›töd
, 
›ãº
;

100 *
›èrg
;

101 
DSS_HUGE
 
	grow˙t
 = 0, 
	gmörow
 = 0;

102 
	gupd_num
 = 0;

103 
	gÊt_sˇÀ
;

104 #i‡(
deföed
(
WIN32
)&&!deföed(
_POSIX_
))

105 *
	g•awn_¨gs
[25];

107 #ifde‡
RNG_TEST


108 
£ed_t
 
Sìd
[];

138 
¥_cu°
 (* 
c
, 
mode
);

139 
¥_löe
 (* 
o
, 
mode
);

140 
¥_‹dî
 (* 
o
, 
mode
);

141 
¥_∑π
 (* 
p
, 
mode
);

142 
¥_psuµ
 (* 
p
, 
mode
);

143 
¥_suµ
 (* 
s
, 
mode
);

144 
¥_‹dî_löe
 (* 
o
, 
mode
);

145 
¥_∑π_psuµ
 (* 
p
, 
mode
);

146 
¥_«ti⁄
 (* 
c
, 
mode
);

147 
¥_ªgi⁄
 (* 
c
, 
mode
);

152 
ld_cu°
 (* 
c
, 
mode
);

153 
ld_löe
 (* 
o
, 
mode
);

154 
ld_‹dî
 (* 
o
, 
mode
);

155 
ld_∑π
 (* 
p
, 
mode
);

156 
ld_psuµ
 (* 
p
, 
mode
);

157 
ld_suµ
 (* 
s
, 
mode
);

158 
ld_‹dî_löe
 (* 
o
, 
mode
);

159 
ld_∑π_psuµ
 (* 
p
, 
mode
);

160 
ld_«ti⁄
 (* 
c
, 
mode
);

161 
ld_ªgi⁄
 (* 
c
, 
mode
);

166 
sd_cu°
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

167 
sd_löe
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

168 
sd_‹dî
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

169 
sd_∑π
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

170 
sd_psuµ
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

171 
sd_suµ
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

172 
sd_‹dî_löe
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

173 
sd_∑π_psuµ
 (
chûd
, 
DSS_HUGE
 
skù_cou¡
);

178 
hd_cu°
 (
FILE
 * 
f
);

179 
hd_löe
 (
FILE
 * 
f
);

180 
hd_‹dî
 (
FILE
 * 
f
);

181 
hd_∑π
 (
FILE
 * 
f
);

182 
hd_psuµ
 (
FILE
 * 
f
);

183 
hd_suµ
 (
FILE
 * 
f
);

184 
hd_‹dî_löe
 (
FILE
 * 
f
);

185 
hd_∑π_psuµ
 (
FILE
 * 
f
);

186 
hd_«ti⁄
 (
FILE
 * 
f
);

187 
hd_ªgi⁄
 (
FILE
 * 
f
);

192 
vrf_cu°
 (* 
c
, 
mode
);

193 
vrf_löe
 (* 
o
, 
mode
);

194 
vrf_‹dî
 (* 
o
, 
mode
);

195 
vrf_∑π
 (* 
p
, 
mode
);

196 
vrf_psuµ
 (* 
p
, 
mode
);

197 
vrf_suµ
 (* 
s
, 
mode
);

198 
vrf_‹dî_löe
 (* 
o
, 
mode
);

199 
vrf_∑π_psuµ
 (* 
p
, 
mode
);

200 
vrf_«ti⁄
 (* 
c
, 
mode
);

201 
vrf_ªgi⁄
 (* 
c
, 
mode
);

204 
tdef
 
	gtdefs
[] =

207 
hd_∑π
,

208 {
¥_∑π
,

209 
ld_∑π
},

210 
sd_∑π
,

211 
vrf_∑π
,

212 
PSUPP
,

214 {"∑πsuµ.tbl", "∑πsuµlõ∏èbÀ", 200000, 
hd_psuµ
,

215 {
¥_psuµ
, 
ld_psuµ
}, 
sd_psuµ
, 
vrf_psuµ
, 
NONE
, 0},

216 {"suµlõr.tbl", "suµlõr†èbÀ", 10000, 
hd_suµ
,

217 {
¥_suµ
, 
ld_suµ
}, 
sd_suµ
, 
vrf_suµ
, 
NONE
, 0},

218 {"cu°omî.tbl", "cu°omî†èbÀ", 150000, 
hd_cu°
,

219 {
¥_cu°
, 
ld_cu°
}, 
sd_cu°
, 
vrf_cu°
, 
NONE
, 0},

220 {"‹dîs.tbl", "‹dîÅabÀ", 150000, 
hd_‹dî
,

221 {
¥_‹dî
, 
ld_‹dî
}, 
sd_‹dî
, 
vrf_‹dî
, 
LINE
, 0},

222 {"löeôem.tbl", "löeôemÅabÀ", 150000, 
hd_löe
,

223 {
¥_löe
, 
ld_löe
}, 
sd_löe
, 
vrf_löe
, 
NONE
, 0},

224 {"‹dîs.tbl", "‹dîs/löeôemÅabÀs", 150000, 
hd_‹dî_löe
,

225 {
¥_‹dî_löe
, 
ld_‹dî_löe
}, 
sd_‹dî
, 
vrf_‹dî_löe
, 
LINE
, 0},

226 {"∑π.tbl", "∑π/∑πsuµlõ∏èbÀs", 200000, 
hd_∑π_psuµ
,

227 {
¥_∑π_psuµ
, 
ld_∑π_psuµ
}, 
sd_∑π
, 
vrf_∑π_psuµ
, 
PSUPP
, 0},

228 {"«ti⁄.tbl", "«ti⁄ÅabÀ", 
NATIONS_MAX
, 
hd_«ti⁄
,

229 {
¥_«ti⁄
,

230 
ld_«ti⁄
},

231 
NO_LFUNC
,

232 
vrf_«ti⁄
,

233 
NONE
, 0},

234 {"ªgi⁄.tbl", "ªgi⁄ÅabÀ", 
NATIONS_MAX
, 
hd_ªgi⁄
,

235 {
¥_ªgi⁄
, 
ld_ªgi⁄
}, 
NO_LFUNC
, 
vrf_ªgi⁄
, 
NONE
, 0},

238 *
	gpids
;

246 
	$°›_¥oc
 ()

248 
	`exô
 (0);

249 
	}
}

252 
	$kûl_lﬂd
 ()

254 
i
;

256 #i‡!
	`deföed
(
U2200
Ë&& !deföed(
DOS
)

257 
i
 = 0; i < 
chûdªn
; i++)

258 i‡(
pids
[
i
])

259 
	`KILL
 (
pids
[
i
]);

262 
	}
}

268 
	$£t_fûes
 (
i
, 
∂ﬂd
)

270 
löe
[80], *
√w_«me
;

272 i‡(
èbÀ
 & (1 << 
i
))

273 
chûd_èbÀ
:

275 i‡(
∂ﬂd
 != -1)

276 
	`•rötf
 (
löe
, "%s.%d", 
tdefs
[
i
].
«me
, 
∂ﬂd
);

279 
	`¥ötf
 ("EnterÇew destination for %s data: ",

280 
tdefs
[
i
].
«me
);

281 i‡(
	`fgës
 (
löe
,  (löe), 
°dö
Ë=
NULL
)

283 i‡((
√w_«me
 = 
	`°rchr
 (
löe
, '\n')Ë!
NULL
)

284 *
√w_«me
 = '\0';

285 i‡(
	`°æí
 (
löe
) == 0)

288 
√w_«me
 = (*Ë
	`mÆloc
 (
	`°æí
 (
löe
) + 1);

289 
	`MALLOC_CHECK
 (
√w_«me
);

290 
	`°r˝y
 (
√w_«me
, 
löe
);

291 
tdefs
[
i
].
«me
 = 
√w_«me
;

292 i‡(
tdefs
[
i
].
chûd
 !
NONE
)

294 
i
 = 
tdefs
[i].
chûd
;

295 
tdefs
[
i
].
chûd
 = 
NONE
;

296 
chûd_èbÀ
;

301 
	}
}

309 
	$lﬂd_di°s
 ()

311 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "p_˙å", &
p_˙å_£t
);

312 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "cﬁ‹s", &
cﬁ‹s
);

313 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "p_ty≥s", &
p_ty≥s_£t
);

314 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "«ti⁄s", &
«ti⁄s
);

315 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ªgi⁄s", &
ªgi⁄s
);

316 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "o_oprio",

317 &
o_¥i‹ôy_£t
);

318 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "instruct",

319 &
l_ö°ru˘_£t
);

320 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "smode", &
l_smode_£t
);

321 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "category",

322 &
l_ˇãg‹y_£t
);

323 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "rÊag", &
l_rÊag_£t
);

324 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "m£gm¡", &
c_m£g_£t
);

327 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "nouns", &
nouns
);

328 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vîbs", &
vîbs
);

329 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "adje˘ives", &
adje˘ives
);

330 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "advîbs", &
advîbs
);

331 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "auxûœrõs", &
auxûœrõs
);

332 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ãrmö©‹s", &
ãrmö©‹s
);

333 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¨ti˛es", &
¨ti˛es
);

334 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¥ïosôi⁄s", &
¥ïosôi⁄s
);

335 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "gømm¨", &
gømm¨
);

336 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "≈", &
≈
);

337 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vp", &
vp
);

339 
	}
}

345 
	$gí_tbl
 (
äum
, 
DSS_HUGE
 
°¨t
, DSS_HUGE 
cou¡
, 
upd_num
)

347 
‹dî_t
 
o
;

348 
suµlõr_t
 
suµ
;

349 
cu°omî_t
 
cu°
;

350 
∑π_t
 
∑π
;

351 
code_t
 
code
;

352 
com∂ëed
 = 0;

353 
DSS_HUGE
 
i
;

355 
DSS_HUGE
 
rows_≥r_£gmít
=0;

356 
DSS_HUGE
 
rows_this_£gmít
=-1;

357 
DSS_HUGE
 
ªsiduÆ_rows
=0;

359 i‡(
ö£π_£gmíts
)

361 
rows_≥r_£gmít
 = 
cou¡
 / 
ö£π_£gmíts
;

362 
ªsiduÆ_rows
 = 
cou¡
 - (
rows_≥r_£gmít
 * 
ö£π_£gmíts
);

365 
i
 = 
°¨t
; 
cou¡
; count--, i++)

367 
	`LIFENOISE
 (1000, 
i
);

368 
	`row_°¨t
(
äum
);

370 
äum
)

372 
LINE
:

373 
ORDER
:

374 
ORDER_LINE
:

375 
	`mk_‹dî
 (
i
, &
o
, 
upd_num
 % 10000);

377 i‡(
ö£π_£gmíts
 && (
upd_num
 > 0)) {

378 if((
upd_num
 / 10000Ë< 
ªsiduÆ_rows
)

380 if((++
rows_this_£gmít
Ë> 
rows_≥r_£gmít
)

382 
rows_this_£gmít
=0;

383 
upd_num
 += 10000;

388 if((++
rows_this_£gmít
Ë>
rows_≥r_£gmít
)

390 
rows_this_£gmít
=0;

391 
upd_num
 += 10000;

396 i‡(
£t_£eds
 == 0) {

397 i‡(
vÆid©e
) {

398 
tdefs
[
äum
].
	`vîify
(&
o
, 0);

401 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
o
, 
upd_num
);

406 
SUPP
:

407 
	`mk_suµ
 (
i
, &
suµ
);

408 i‡(
£t_£eds
 == 0) {

409 i‡(
vÆid©e
) {

410 
tdefs
[
äum
].
	`vîify
(&
suµ
, 0);

413 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
suµ
, 
upd_num
);

418 
CUST
:

419 
	`mk_cu°
 (
i
, &
cu°
);

420 i‡(
£t_£eds
 == 0) {

421 i‡(
vÆid©e
) {

422 
tdefs
[
äum
].
	`vîify
(&
cu°
, 0);

425 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
cu°
, 
upd_num
);

430 
PSUPP
:

431 
PART
:

432 
PART_PSUPP
:

433 
	`mk_∑π
 (
i
, &
∑π
);

434 i‡(
£t_£eds
 == 0) {

435 i‡(
vÆid©e
) {

436 
tdefs
[
äum
].
	`vîify
(&
∑π
, 0);

439 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
∑π
, 
upd_num
);

444 
NATION
:

445 
	`mk_«ti⁄
 (
i
, &
code
);

446 i‡(
£t_£eds
 == 0) {

447 i‡(
vÆid©e
) {

448 
tdefs
[
äum
].
	`vîify
(&
code
, 0);

451 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
code
, 0);

456 
REGION
:

457 
	`mk_ªgi⁄
 (
i
, &
code
);

458 i‡(
£t_£eds
 == 0) {

459 i‡(
vÆid©e
) {

460 
tdefs
[
äum
].
	`vîify
(&
code
, 0);

463 
tdefs
[
äum
].
lﬂdî
[
dúe˘
] (&
code
, 0);

468 
	`row_°›
(
äum
);

469 i‡(
£t_£eds
 && (
i
 % 
tdefs
[
äum
].
ba£
) < 2)

471 
	`¥ötf
("\nSìd†f‹ %†©Ñowcou¡ %Œd\n", 
tdefs
[
äum
].
commít
, 
i
);

472 
	`dump_£eds
(
äum
);

475 
com∂ëed
 |1 << 
äum
;

476 
	}
}

481 
	$ußge
 ()

483 
	`Ârötf
 (
°dîr
, "%s\n%s\n\t%s\n%s %s\n\n",

489 
	`Ârötf
 (
°dîr
, "-b <s> --Üoad distributions for <s>\n");

490 
	`Ârötf
 (
°dîr
, "-C <n> -- use <n>ÖrocessesÅo generate data\n");

491 
	`Ârötf
 (
°dîr
, " [Under DOS, must be used with -S]\n");

492 
	`Ârötf
 (
°dîr
, "-D -- do databaseÜoad inÜine\n");

493 
	`Ârötf
 (
°dîr
, "-d <n> -- split deletes between <n> files\n");

494 
	`Ârötf
 (
°dîr
, "-f -- force. OverwriteÉxisting files\n");

495 
	`Ârötf
 (
°dîr
, "-F -- generate flat files output\n");

496 
	`Ârötf
 (
°dîr
, "-h -- displayÅhis message\n");

497 
	`Ârötf
 (
°dîr
, "-i <n> -- split inserts between <n> files\n");

498 
	`Ârötf
 (
°dîr
, "-n <s> -- inlineÜoad into database <s>\n");

499 
	`Ârötf
 (
°dîr
, "-O d -- generate SQL syntax for deletes\n");

500 
	`Ârötf
 (
°dîr
, "-O f -- over-ride default output fileÇames\n");

501 
	`Ârötf
 (
°dîr
, "-O h -- output files with headers\n");

502 
	`Ârötf
 (
°dîr
, "-O m --Öroduce columnar output\n");

503 
	`Ârötf
 (
°dîr
, "-OÑ -- generate keyÑanges for deletes.\n");

504 
	`Ârötf
 (
°dîr
, "-O v -- Verify data set without generating it.\n");

505 
	`Ârötf
 (
°dîr
, "-q --Énable QUIET mode\n");

506 
	`Ârötf
 (
°dîr
, "-r <n> -- updatesÑefresh (n/100)%% ofÅhe\n");

507 
	`Ârötf
 (
°dîr
, " data set\n");

508 
	`Ârötf
 (
°dîr
, "-s <n> -- set Scale Factor (SF)Åo <n> \n");

509 
	`Ârötf
 (
°dîr
, "-S <n> -- buildÅhe <n>th step ofÅhe data/update set\n");

510 
	`Ârötf
 (
°dîr
, "-T c -- generate cutomers ONLY\n");

511 
	`Ârötf
 (
°dîr
, "-TÜ -- generateÇation/region ONLY\n");

512 
	`Ârötf
 (
°dîr
, "-T L -- generateÜineitem ONLY\n");

513 
	`Ârötf
 (
°dîr
, "-TÇ -- generateÇation ONLY\n");

514 
	`Ârötf
 (
°dîr
, "-T o -- generate orders/lineitem ONLY\n");

515 
	`Ârötf
 (
°dîr
, "-T O -- generate orders ONLY\n");

516 
	`Ârötf
 (
°dîr
, "-TÖ -- generateÖarts/partsupp ONLY\n");

517 
	`Ârötf
 (
°dîr
, "-T P -- generateÖarts ONLY\n");

518 
	`Ârötf
 (
°dîr
, "-TÑ -- generateÑegion ONLY\n");

519 
	`Ârötf
 (
°dîr
, "-T s -- generate suppliers ONLY\n");

520 
	`Ârötf
 (
°dîr
, "-T S -- generateÖartsupp ONLY\n");

521 
	`Ârötf
 (
°dîr
, "-U <s> -- generate <s> update sets\n");

522 
	`Ârötf
 (
°dîr
, "-v --Énable VERBOSE mode\n");

523 
	`Ârötf
 (
°dîr
,

525 
	`Ârötf
 (
°dîr
, "\tdbgen -vfF -s 1\n");

526 
	`Ârötf
 (
°dîr
, "\nTo generate updates forá SF=1 (1GB), use:\n");

527 
	`Ârötf
 (
°dîr
, "\tdbgen -v -U 1 -s 1\n");

528 
	}
}

536 
	$dbgí_öô
 ()

539 
èbÀ
 = (1 << 
CUST
) |

540 (1 << 
SUPP
) |

541 (1 << 
NATION
) |

542 (1 << 
REGION
) |

543 (1 << 
PART_PSUPP
) |

544 (1 << 
ORDER_LINE
);

545 
f‹˚
 = 0;

546 
ö£π_£gmíts
=0;

547 
dñëe_£gmíts
=0;

548 
ö£π_‹dîs_£gmít
=0;

549 
ö£π_löeôem_£gmít
=0;

550 
dñëe_£gmít
=0;

551 
vîbo£
 = 0;

552 
cﬁum«r
 = 0;

553 
£t_£eds
 = 0;

554 
hódî
 = 0;

555 
dúe˘
 = 0;

556 
sˇÀ
 = 1;

557 
Êt_sˇÀ
 = 1.0;

558 
upd©es
 = 0;

559 
¨e‰esh
 = 
UPD_PCT
;

560 
°ï
 = -1;

561 
tdefs
[
ORDER
].
ba£
 *=

562 
ORDERS_PER_CUST
;

563 
tdefs
[
LINE
].
ba£
 *=

564 
ORDERS_PER_CUST
;

565 
tdefs
[
ORDER_LINE
].
ba£
 *=

566 
ORDERS_PER_CUST
;

567 
‚ames
 = 0;

568 
db_«me
 = 
NULL
;

569 
gí_sql
 = 0;

570 
gí_∫g
 = 0;

571 
chûdªn
 = 1;

572 
d_∑th
 = 
NULL
;

574 
	`lﬂd_di°s
 ();

576 #ifde‡
RNG_TEST


577 
DSS_HUGE
 
i
=0; i <
MAX_STREAM
; i++)

578 
Sìd
[
i
].
nCÆls
 = 0;

582 
tdefs
[
NATION
].
ba£
 = 
«ti⁄s
.
cou¡
;

583 
tdefs
[
REGION
].
ba£
 = 
ªgi⁄s
.
cou¡
;

586 
	}
}

589 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/load_stub.cpp

31 
	~<°dio.h
>

32 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

33 
	~"w‹klﬂd/çch/dbgí/dss.h
"

34 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

37 
ENTER_NAMESPACE
(
dbgíçch
);

42 
	$˛o£_dúe˘
()

46 
	}
}

49 
	$¥ï_dúe˘
(*)

53 
	}
}

55 
	$hd_cu°
 (
FILE
* )

57 
cou¡
 = 0;

59 i‡(! 
cou¡
++)

60 
	`¥ötf
("No header has been defined forÅhe customerÅable\n");

63 
	}
}

65 
	$ld_cu°
 (* , )

68 
cou¡
 = 0;

70 i‡(! 
cou¡
++)

71 
	`¥ötf
("%s %s\n",

76 
	}
}

78 
	$hd_∑π
 (
FILE
* )

80 
cou¡
 = 0;

82 i‡(! 
cou¡
++)

83 
	`¥ötf
("No header has been defined forÅheÖartÅable\n");

86 
	}
}

88 
	$ld_∑π
 (* , )

91 
cou¡
 = 0;

93 i‡(! 
cou¡
++)

94 
	`¥ötf
("NoÜoadÑoutine has been defined forÅheÖartÅable\n");

97 
	}
}

99 
	$ld_psuµ
 (* , )

102 
cou¡
 = 0;

104 i‡(! 
cou¡
++)

105 
	`¥ötf
("%s %s\n",

111 
	}
}

114 
	$hd_suµ
 (
FILE
* )

116 
cou¡
 = 0;

118 i‡(! 
cou¡
++)

119 
	`¥ötf
("No header has been defined forÅhe supplierÅable\n");

122 
	}
}

124 
	$ld_suµ
 (* , )

127 
cou¡
 = 0;

129 i‡(! 
cou¡
++)

130 
	`¥ötf
("%s %s\n",

135 
	}
}

138 
	$hd_‹dî
 (
FILE
* )

140 
cou¡
 = 0;

142 i‡(! 
cou¡
++)

143 
	`¥ötf
("No header has been defined forÅhe orderÅable\n");

146 
	}
}

148 
	$ld_‹dî
 (* , )

151 
cou¡
 = 0;

153 i‡(! 
cou¡
++)

154 
	`¥ötf
("%s %s\n",

159 
	}
}

161 
	$ld_löe
 (* , )

164 
cou¡
 = 0;

166 i‡(! 
cou¡
++)

167 
	`¥ötf
("%s %s\n",

172 
	}
}

176 
	$hd_psuµ
 (
FILE
* )

178 
cou¡
 = 0;

180 i‡(! 
cou¡
++)

181 
	`¥ötf
("%s %s\n",

186 
	}
}

189 
	$hd_löe
 (
FILE
* )

191 
cou¡
 = 0;

193 i‡(! 
cou¡
++)

194 
	`¥ötf
("No header has been defined forÅheÜineitemÅable\n");

197 
	}
}

199 
	$hd_«ti⁄
 (
FILE
* )

201 
cou¡
 = 0;

203 i‡(! 
cou¡
++)

204 
	`¥ötf
("No header has been defined forÅheÇationÅable\n");

207 
	}
}

209 
	$ld_«ti⁄
 (* , )

212 
cou¡
 = 0;

214 i‡(! 
cou¡
++)

215 
	`¥ötf
("%s %s\n",

220 
	}
}

222 
	$hd_ªgi⁄
 (
FILE
* )

224 
cou¡
 = 0;

226 i‡(! 
cou¡
++)

227 
	`¥ötf
("No header has been defined forÅheÑegionÅable\n");

230 
	}
}

232 
	$ld_ªgi⁄
 (* , )

235 
cou¡
 = 0;

237 i‡(! 
cou¡
++)

238 
	`¥ötf
("%s %s\n",

243 
	}
}

246 
	$ld_‹dî_löe
 (*
vp
, 
mode
)

248 
‹dî_t
* 
p
 = (‹dî_t*)
vp
;

250 
	`ld_‹dî
(
p
, 
mode
);

251 
	`ld_löe
 (
p
, 
mode
);

254 
	}
}

257 
	$hd_‹dî_löe
 (
FILE
 *
f
)

259 
	`hd_‹dî
(
f
);

260 
	`hd_löe
 (
f
);

263 
	}
}

266 
	$ld_∑π_psuµ
 (*
vp
, 
mode
)

268 
∑π_t
* 
p
 = (∑π_t*)
vp
;

270 
	`ld_∑π
(
p
, 
mode
);

271 
	`ld_psuµ
 (
p
, 
mode
);

274 
	}
}

277 
	$hd_∑π_psuµ
 (
FILE
 *
f
)

279 
	`hd_∑π
(
f
);

280 
	`hd_psuµ
(
f
);

283 
	}
}

286 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/permute.cpp

32 #ifde‡
TEST


33 
	#DECLARER


	)

36 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

37 
	~"w‹klﬂd/çch/dbgí/dss.h
"

39 #ifde‡
TEST


40 
	~<°dlib.h
>

42 
	~<uni°d.h
>

43 
	~<sys/waô.h
>

44 
	~<°dio.h
>

45 
	~<limôs.h
>

46 
	~<m©h.h
>

47 
	~<˘y≥.h
>

48 
	~<sig«l.h
>

49 
	~<°rög.h
>

50 
	~<î∫o.h
>

51 #ifde‡
HP


52 
	~<°rögs.h
>

58 
ENTER_NAMESPACE
(
dbgíçch
);

61 
DSS_HUGE
 
NextR™d
(DSS_HUGE 
£ed
);

62 *
≥rmuã
(*
£t
, 
˙t
, 
°ªam
, 
DSS_HUGE
& 
sour˚
, * 
cs
);

63 *
≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
, 
DSS_HUGE
& 
sour˚
, di°ributi⁄* 
cd
);

64 
	g£ed
;

65 c⁄° *
	geﬁ
[2] = {" ", "},"};

66 
£ed_t
 
Sìd
[];

67 #ifde‡
TEST


68 
tdef
 
	gtdefs
 = { 
NULL
 };

72 
	#MAX_QUERY
 22

	)

73 
	#ITERATIONS
 1000

	)

74 
	#UNSET
 0

	)

80 
	$≥rmuã
(*
a
, 
c
, 
s
, 
DSS_HUGE
& 
sour˚
, * 
c£t
)

82 
i
;

83 
ãmp
;

85 i‡(
a
 !(*)
NULL
) {

86 
i
=0; i < 
c
; i++) {

87 *(
a
 + 
i
) = i;

90 
i
=0; i < 
c
; i++) {

91 
	`RANDOM
(
sour˚
, 0L, ()(
c
 - 1), 
s
);

92 
ãmp
 = *(
a
 + 
sour˚
);

93 *(
a
 + 
sour˚
Ë*◊ + 
i
) ;

94 *(
a
 + 
i
Ë
ãmp
;

95 
sour˚
 = 0;

99 
sour˚
 += 1;

102 i‡(
sour˚
 >
c
) {

103 
sour˚
 -
c
;

106  (
c£t
 + 
sour˚
);

107 
	}
}

111 
	$≥rmuã_di°
(
di°ributi⁄
 *
d
, 
°ªam
,

112 
DSS_HUGE
& 
sour˚
, 
di°ributi⁄
* 
cd
)

114 
boﬁ
 
bInô
 = 
Ál£
;

115 
di°ributi⁄
 *
di°
 = 
NULL
;

117 i‡(
d
 !
NULL
) {

118 i‡(
d
->
≥rmuã
 =(*)
NULL
) {

119 
d
->
≥rmuã
 = (*)
	`mÆloc
((Ë* 
	`DIST_SIZE
(d));

120 
	`MALLOC_CHECK
(
d
->
≥rmuã
);

127 !
bInô
) {

128 
di°
 = 
d
;

129 
bInô
 = 
åue
;

136 
	`as£π
 (
di°
 =
d
);

137  (
	`≥rmuã
(
di°
->
≥rmuã
, 
	`DIST_SIZE
(di°), 
°ªam
,

138 
sour˚
, 
cd
->
≥rmuã
));

141 i‡(
di°
 !
NULL
) {

142  (
	`≥rmuã
(
NULL
, 
	`DIST_SIZE
(
di°
), 
°ªam
, 
sour˚
, 
cd
->
≥rmuã
));

145 
	`INTERNAL_ERROR
("Bad callÅoÖermute_dist");

148  (
NULL
);

149 
	}
}

153 
EXIT_NAMESPACE
(
dbgíçch
);

157 #ifde‡
TEST


159 
	$maö
(
ac
, *
av
[])

161 *
£quí˚
,

162 
i
,

163 
j
,

164 
°ªams
 = 
UNSET
,

165 *
a
;

166 
£p
;

167 
ödex
 = 0;

169 
£t_£eds
 = 0;

170 
£quí˚
 = (*)
	`mÆloc
(
MAX_QUERY
 * ());

171 
a
 = 
£quí˚
;

172 
i
=0; i < 
MAX_QUERY
; i++)

173 *(
£quí˚
 + 
i
) = i;

174 i‡(
ac
 < 3)

175 
ußge
;

176 
Sìd
[0].
vÆue
 = ()
	`©oi
(
av
[1]);

177 
°ªams
 = 
	`©oi
(
av
[2]);

178 i‡(
Sìd
[0].
vÆue
 =
UNSET
 || 
°ªams
 == UNSET)

179 
ußge
;

181 
ödex
 = 0;

182 
	`¥ötf
("l⁄gÖîmuèti⁄[%d][%d] = {\n", 
°ªams
, 
MAX_QUERY
);

183 
j
=0; j < 
°ªams
; j++) {

184 
£p
 = '{';

185 
	`¥ötf
("%s\n", 
eﬁ
[
ödex
]);

186 
i
=0; i < 
MAX_QUERY
; i++)

188 
	`¥ötf
("%c%2d", 
£p
, *
	`≥rmuã
(
a
, 
MAX_QUERY
, 0) + 1);

189 
a
 = (*)
NULL
;

190 
£p
 = ',';

192 
a
 = 
£quí˚
;

193 
ödex
=1;

196 
	`¥ötf
("}\n};\n");

199 
ußge
:

200 
	`¥ötf
("Ußge: %†<£ed> <°ªams>\n",
av
[0]);

201 
	`¥ötf
(" u£†<£ed>Åÿ°¨àthêgíî©i⁄ o‡<°ªams>Öîmuèti⁄†o‡[1..%d]\n", 
MAX_QUERY
);

204 
	}
}

	@src/workload/tpch/dbgen/print.cpp

37 
	~<°dio.h
>

38 #i‚de‡
VMS


39 
	~<sys/ty≥s.h
>

41 #i‡
deföed
(
SUN
)

42 
	~<uni°d.h
>

44 
	~<m©h.h
>

46 
	~"w‹klﬂd/çch/dbgí/dss.h
"

47 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

48 
	~<°rög.h
>

51 
ENTER_NAMESPACE
(
dbgíçch
);

57 
FILE
 *
¥öt_¥ï
 
PROTO
((
èbÀ
, 
upd©e
));

58 
¥_dønge
 
PROTO
((
tbl
, 
DSS_HUGE
 
mö
, DSS_HUGE 
˙t
, 
num
));

60 
FILE
 *

61 
	$¥öt_¥ï
(
èbÀ
, 
upd©e
)

63 
u∑th
[128];

64 
FILE
 *
ªs
;

66 i‡(
upd©es
)

68 i‡(
upd©e
 > 0)

69 i‡–
ö£π_£gmíts
 )

71 
this_£gmít
;

72 if(
	`°rcmp
(
tdefs
[
èbÀ
].
«me
,"orders.tbl"))

73 
this_£gmít
=++
ö£π_‹dîs_£gmít
;

75 
this_£gmít
=++
ö£π_löeôem_£gmít
;

76 
	`•rötf
(
u∑th
, "%s%c%s.u%d.%d",

77 
	`ív_c⁄fig
(
PATH_TAG
, 
PATH_DFLT
),

78 
PATH_SEP
, 
tdefs
[
èbÀ
].
«me
, 
upd©e
%10000,
this_£gmít
);

82 
	`•rötf
(
u∑th
, "%s%c%s.u%d",

83 
	`ív_c⁄fig
(
PATH_TAG
, 
PATH_DFLT
),

84 
PATH_SEP
, 
tdefs
[
èbÀ
].
«me
, 
upd©e
);

87 i‡–
dñëe_£gmíts
 )

89 ++
dñëe_£gmít
;

90 
	`•rötf
(
u∑th
, "%s%cdelete.u%d.%d",

91 
	`ív_c⁄fig
(
PATH_TAG
, 
PATH_DFLT
), 
PATH_SEP
, -
upd©e
%10000,

92 
dñëe_£gmít
);

96 
	`•rötf
(
u∑th
, "%s%cdelete.%d",

97 
	`ív_c⁄fig
(
PATH_TAG
, 
PATH_DFLT
), 
PATH_SEP
, -
upd©e
);

99 (
	`f›í
(
u∑th
, "w"));

101 
ªs
 = 
	`tbl_›í
(
èbÀ
, "w");

102 
	`OPEN_CHECK
(
ªs
, 
tdefs
[
èbÀ
].
«me
);

103 (
ªs
);

104 
	}
}

106 
dbg_¥öt
(
f‹m©
, 
FILE
 *
èrgë
, *
d©a
, 
Àn
, 

107 #ifde‡
EOL_HANDLING


108 
£p


112 
	gdﬁœrs
,

113 
	g˚¡s
;

115 
	gf‹m©
)

117 
	gDT_STR
:

118 i‡(
cﬁum«r
)

119 
Ârötf
(
èrgë
, "%-*s", 
Àn
, (*)
d©a
);

121 
Ârötf
(
èrgë
, "%s", (*)
d©a
);

123 #ifde‡
MVS


124 
	gDT_VSTR
:

126 
Ârötf
(
èrgë
, "%c%c%-*s",

127 (
Àn
 >> 8Ë& 0xFF,Üí & 0xFF,Üí, (*)
d©a
);

130 
	gDT_INT
:

131 i‡(
cﬁum«r
)

132 
Ârötf
(
èrgë
, "%12ld", ()
d©a
);

134 
Ârötf
(
èrgë
, "%ld", ()
d©a
);

136 
	gDT_HUGE
:

137 
Ârötf
(
èrgë
, 
HUGE_FORMAT
, *(
DSS_HUGE
 *)
d©a
);

139 
	gDT_KEY
:

140 
Ârötf
(
èrgë
, "%ld", ()
d©a
);

142 
	gDT_MONEY
:

143 
˚¡s
 = ()*(
DSS_HUGE
 *)
d©a
;

144 i‡(
	g˚¡s
 < 0)

146 
Ârötf
(
èrgë
, "-");

147 
	g˚¡s
 = -
˚¡s
;

149 
	gdﬁœrs
 = 
˚¡s
 / 100;

150 
	g˚¡s
 %= 100;

151 i‡(
	gcﬁum«r
)

152 
Ârötf
(
èrgë
, "%12d.%02d", 
dﬁœrs
, 
˚¡s
);

154 
Ârötf
(
èrgë
, "%d.%02d", 
dﬁœrs
, 
˚¡s
);

156 
	gDT_CHR
:

157 i‡(
cﬁum«r
)

158 
Ârötf
(
èrgë
, "%¯", *(*)
d©a
);

160 
Ârötf
(
èrgë
, "%c", *(*)
d©a
);

164 #ifde‡
EOL_HANDLING


165 i‡(
	g£p
)

167 i‡(!
	gcﬁum«r
)

168 
Ârötf
(
èrgë
, "%c", 
SEPARATOR
);

173 
	$¥_cu°
(*
vc
, )

175 
cu°omî_t
* 
c
 = (cu°omî_t*)
vc
;

177 
FILE
 *
Â
 = 
NULL
;

179 i‡(
Â
 =
NULL
)

180 
Â
 = 
	`¥öt_¥ï
(
CUST
, 0);

182 
	`PR_STRT
(
Â
);

183 
	`PR_HUGE
(
Â
, &
c
->
cu°key
);

184 i‡(
sˇÀ
 <= 3000)

185 
	`PR_VSTR
(
Â
, 
c
->
«me
, 
C_NAME_LEN
);

187 
	`PR_VSTR
(
Â
, 
c
->
«me
, 
C_NAME_LEN
 + 3);

188 
	`PR_VSTR
(
Â
, 
c
->
addªss
,

189 (
cﬁum«r
)?()(
	`˚û
(
C_ADDR_LEN
 * 
V_STR_HGH
)):
c
->
Æí
);

190 
	`PR_HUGE
(
Â
, &
c
->
«ti⁄_code
);

191 
	`PR_STR
(
Â
, 
c
->
ph⁄e
, 
PHONE_LEN
);

192 
	`PR_MONEY
(
Â
, &
c
->
ac˘bÆ
);

193 
	`PR_STR
(
Â
, 
c
->
mkt£gmít
, 
C_MSEG_LEN
);

194 
	`PR_VSTR_LAST
(
Â
, 
c
->
commít
,

195 (
cﬁum«r
)?()(
	`˚û
(
C_CMNT_LEN
 * 
V_STR_HGH
)):
c
->
˛í
);

196 
	`PR_END
(
Â
);

199 
	}
}

205 
	$¥_‹dî
(*
vo
, 
mode
)

207 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

208 
FILE
 *
Â_o
 = 
NULL
;

209 
œ°_mode
 = 0;

211 i‡(
Â_o
 =
NULL
 || 
mode
 !
œ°_mode
)

213 i‡(
Â_o
)

214 
	`f˛o£
(
Â_o
);

215 
Â_o
 = 
	`¥öt_¥ï
(
ORDER
, 
mode
);

216 
œ°_mode
 = 
mode
;

218 
	`PR_STRT
(
Â_o
);

219 
	`PR_HUGE
(
Â_o
, &
o
->
okey
);

220 
	`PR_HUGE
(
Â_o
, &
o
->
cu°key
);

221 
	`PR_CHR
(
Â_o
, &
o
->
‹dî°©us
);

222 
	`PR_MONEY
(
Â_o
, &
o
->
tŸÆ¥i˚
);

223 
	`PR_STR
(
Â_o
, 
o
->
od©e
, 
DATE_LEN
);

224 
	`PR_STR
(
Â_o
, 
o
->
›ri‹ôy
, 
O_OPRIO_LEN
);

225 
	`PR_STR
(
Â_o
, 
o
->
˛îk
, 
O_CLRK_LEN
);

226 
	`PR_INT
(
Â_o
, 
o
->
•ri‹ôy
);

227 
	`PR_VSTR_LAST
(
Â_o
, 
o
->
commít
,

228 (
cﬁum«r
)?()(
	`˚û
(
O_CMNT_LEN
 * 
V_STR_HGH
)):
o
->
˛í
);

229 
	`PR_END
(
Â_o
);

232 
	}
}

238 
	$¥_löe
(*
vo
, 
mode
)

240 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

241 
FILE
 *
Â_l
 = 
NULL
;

242 
œ°_mode
 = 0;

243 
i
;

245 i‡(
Â_l
 =
NULL
 || 
mode
 !
œ°_mode
)

247 i‡(
Â_l
)

248 
	`f˛o£
(
Â_l
);

249 
Â_l
 = 
	`¥öt_¥ï
(
LINE
, 
mode
);

250 
œ°_mode
 = 
mode
;

253 
i
 = 0; i < 
o
->
löes
; i++)

255 
	`PR_STRT
(
Â_l
);

256 
	`PR_HUGE
(
Â_l
, &
o
->
l
[
i
].
okey
);

257 
	`PR_HUGE
(
Â_l
, &
o
->
l
[
i
].
∑πkey
);

258 
	`PR_HUGE
(
Â_l
, &
o
->
l
[
i
].
suµkey
);

259 
	`PR_HUGE
(
Â_l
, &
o
->
l
[
i
].
l˙t
);

260 
	`PR_HUGE
(
Â_l
, &
o
->
l
[
i
].
qu™tôy
);

261 
	`PR_MONEY
(
Â_l
, &
o
->
l
[
i
].
ïri˚
);

262 
	`PR_MONEY
(
Â_l
, &
o
->
l
[
i
].
discou¡
);

263 
	`PR_MONEY
(
Â_l
, &
o
->
l
[
i
].
èx
);

265 
	`PR_CHR
(
Â_l
, &
o
->
l
[
i
].
rÊag
);

267 
	`PR_CHR
(
Â_l
, &
o
->
l
[
i
].
l°©us
);

268 
	`PR_STR
(
Â_l
, 
o
->
l
[
i
].
sd©e
, 
DATE_LEN
);

269 
	`PR_STR
(
Â_l
, 
o
->
l
[
i
].
cd©e
, 
DATE_LEN
);

270 
	`PR_STR
(
Â_l
, 
o
->
l
[
i
].
rd©e
, 
DATE_LEN
);

271 
	`PR_STR
(
Â_l
, 
o
->
l
[
i
].
shùö°ru˘
, 
L_INST_LEN
);

272 
	`PR_STR
(
Â_l
, 
o
->
l
[
i
].
shùmode
, 
L_SMODE_LEN
);

273 
	`PR_VSTR_LAST
(
Â_l
, 
o
->
l
[
i
].
commít
,

274 (
cﬁum«r
)?()(
	`˚û
(
L_CMNT_LEN
 * 
V_STR_HGH
)):
o
->
l
[
i
].
˛í
);

275 
	`PR_END
(
Â_l
);

279 
	}
}

285 
	$¥_‹dî_löe
(*
vo
, 
mode
)

287 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

288 
tdefs
[
ORDER
].
«me
 =Ådefs[
ORDER_LINE
].name;

289 
	`¥_‹dî
(
o
, 
mode
);

290 
	`¥_löe
(
o
, 
mode
);

293 
	}
}

298 
	$¥_∑π
(*
vp
, )

300 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

301 
FILE
 *
p_Â
 = 
NULL
;

303 i‡(
p_Â
 =
NULL
)

304 
p_Â
 = 
	`¥öt_¥ï
(
PART
, 0);

306 
	`PR_STRT
(
p_Â
);

307 
	`PR_HUGE
(
p_Â
, &
∑π
->
∑πkey
);

308 
	`PR_VSTR
(
p_Â
, 
∑π
->
«me
,

309 (
cﬁum«r
)?()
P_NAME_LEN
:
∑π
->
∆í
);

310 
	`PR_STR
(
p_Â
, 
∑π
->
mfgr
, 
P_MFG_LEN
);

311 
	`PR_STR
(
p_Â
, 
∑π
->
bønd
, 
P_BRND_LEN
);

312 
	`PR_VSTR
(
p_Â
, 
∑π
->
ty≥
,

313 (
cﬁum«r
)?()
P_TYPE_LEN
:
∑π
->
éí
);

314 
	`PR_HUGE
(
p_Â
, &
∑π
->
size
);

315 
	`PR_STR
(
p_Â
, 
∑π
->
c⁄èöî
, 
P_CNTR_LEN
);

316 
	`PR_MONEY
(
p_Â
, &
∑π
->
ªèû¥i˚
);

317 
	`PR_VSTR_LAST
(
p_Â
, 
∑π
->
commít
,

318 (
cﬁum«r
)?()(
	`˚û
(
P_CMNT_LEN
 * 
V_STR_HGH
)):
∑π
->
˛í
);

319 
	`PR_END
(
p_Â
);

322 
	}
}

328 
	$¥_psuµ
(*
vp
, 
mode
)

330 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

331 
FILE
 *
ps_Â
 = 
NULL
;

332 
i
;

334 i‡(
ps_Â
 =
NULL
)

335 
ps_Â
 = 
	`¥öt_¥ï
(
PSUPP
, 
mode
);

337 
i
 = 0; i < 
SUPP_PER_PART
; i++)

339 
	`PR_STRT
(
ps_Â
);

340 
	`PR_HUGE
(
ps_Â
, &
∑π
->
s
[
i
].
∑πkey
);

341 
	`PR_HUGE
(
ps_Â
, &
∑π
->
s
[
i
].
suµkey
);

342 
	`PR_HUGE
(
ps_Â
, &
∑π
->
s
[
i
].
qty
);

343 
	`PR_MONEY
(
ps_Â
, &
∑π
->
s
[
i
].
sco°
);

344 
	`PR_VSTR_LAST
(
ps_Â
, 
∑π
->
s
[
i
].
commít
,

345 (
cﬁum«r
)?()(
	`˚û
(
PS_CMNT_LEN
 * 
V_STR_HGH
)):
∑π
->
s
[
i
].
˛í
);

346 
	`PR_END
(
ps_Â
);

350 
	}
}

356 
	$¥_∑π_psuµ
(*
vp
, 
mode
)

358 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

359 
tdefs
[
PART
].
«me
 =Ådefs[
PART_PSUPP
].name;

360 
	`¥_∑π
(
∑π
, 
mode
);

361 
	`¥_psuµ
(
∑π
, 
mode
);

364 
	}
}

367 
	$¥_suµ
(*
vs
, 
mode
)

369 
suµlõr_t
* 
suµ
 = (suµlõr_t*)
vs
;

370 
FILE
 *
Â
 = 
NULL
;

372 i‡(
Â
 =
NULL
)

373 
Â
 = 
	`¥öt_¥ï
(
SUPP
, 
mode
);

375 
	`PR_STRT
(
Â
);

376 
	`PR_HUGE
(
Â
, &
suµ
->
suµkey
);

377 
	`PR_STR
(
Â
, 
suµ
->
«me
, 
S_NAME_LEN
);

378 
	`PR_VSTR
(
Â
, 
suµ
->
addªss
,

379 (
cﬁum«r
)?()(
	`˚û
(
S_ADDR_LEN
 * 
V_STR_HGH
)):
suµ
->
Æí
);

380 
	`PR_HUGE
(
Â
, &
suµ
->
«ti⁄_code
);

381 
	`PR_STR
(
Â
, 
suµ
->
ph⁄e
, 
PHONE_LEN
);

382 
	`PR_MONEY
(
Â
, &
suµ
->
ac˘bÆ
);

383 
	`PR_VSTR_LAST
(
Â
, 
suµ
->
commít
,

384 (
cﬁum«r
)?()(
	`˚û
(
S_CMNT_LEN
 * 
V_STR_HGH
)):
suµ
->
˛í
);

385 
	`PR_END
(
Â
);

388 
	}
}

391 
	$¥_«ti⁄
(*
vc
, 
mode
)

393 
code_t
* 
c
 = (code_t*)
vc
;

394 
FILE
 *
Â
 = 
NULL
;

396 i‡(
Â
 =
NULL
)

397 
Â
 = 
	`¥öt_¥ï
(
NATION
, 
mode
);

399 
	`PR_STRT
(
Â
);

400 
	`PR_HUGE
(
Â
, &
c
->
code
);

401 
	`PR_STR
(
Â
, 
c
->
ãxt
, 
NATION_LEN
);

402 
	`PR_INT
(
Â
, 
c
->
joö
);

403 
	`PR_VSTR_LAST
(
Â
, 
c
->
commít
,

404 (
cﬁum«r
)?()(
	`˚û
(
N_CMNT_LEN
 * 
V_STR_HGH
)):
c
->
˛í
);

405 
	`PR_END
(
Â
);

408 
	}
}

411 
	$¥_ªgi⁄
(*
vc
, 
mode
)

413 
code_t
* 
c
 = (code_t*)
vc
;

414 
FILE
 *
Â
 = 
NULL
;

416 i‡(
Â
 =
NULL
)

417 
Â
 = 
	`¥öt_¥ï
(
REGION
, 
mode
);

419 
	`PR_STRT
(
Â
);

420 
	`PR_HUGE
(
Â
, &
c
->
code
);

421 
	`PR_STR
(
Â
, 
c
->
ãxt
, 
REGION_LEN
);

422 
	`PR_VSTR_LAST
(
Â
, 
c
->
commít
,

423 (
cﬁum«r
)?()(
	`˚û
(
R_CMNT_LEN
 * 
V_STR_HGH
)):
c
->
˛í
);

424 
	`PR_END
(
Â
);

427 
	}
}

436 
	$¥_dønge
(
tbl
, 
DSS_HUGE
 
mö
, DSS_HUGE 
˙t
, 
num
)

438 
œ°_num
 = 0;

439 
FILE
 *
dÂ
 = 
NULL
;

440 
DSS_HUGE
 
chûd
 = -1;

441 
DSS_HUGE
 
°¨t
, 
œ°
, 
™ew
;

443 
DSS_HUGE
 
rows_≥r_£gmít
=0;

444 
DSS_HUGE
 
rows_this_£gmít
=0;

446 i‡(
œ°_num
 !
num
)

448 i‡(
dÂ
)

449 
	`f˛o£
(
dÂ
);

450 
dÂ
 = 
	`¥öt_¥ï
(
tbl
, -
num
);

451 i‡(
dÂ
 =
NULL
)

453 
œ°_num
 = 
num
;

454 
rows_this_£gmít
=0;

457 
°¨t
 = 
	`MK_SPARSE
(
mö
, 
num
/ (10000 / 
¨e‰esh
));

458 
œ°
 = 
°¨t
 - 1;

459 
chûd
=
mö
; 
˙t
 > 0; child++, cnt--)

461 
™ew
 = 
	`MK_SPARSE
(
chûd
, 
num
/ (10000 / 
¨e‰esh
));

462 i‡(
gí_∫g
 =1 && 
™ew
 - 
œ°
 == 1)

464 
œ°
 = 
™ew
;

467 i‡(
gí_sql
)

469 
	`Ârötf
(
dÂ
,

471 
tdefs
[
ORDER
].
«me
, "o_‹dîkey", 
°¨t
, 
œ°
);

472 
	`Ârötf
(
dÂ
,

474 
tdefs
[
LINE
].
«me
, "l_‹dîkey", 
°¨t
, 
œ°
);

475 
	`Ârötf
(
dÂ
, "commit work;\n");

478 i‡(
gí_∫g
)

480 
	`PR_STRT
(
dÂ
);

481 
	`PR_HUGE
(
dÂ
, &
°¨t
);

482 
	`PR_HUGE
(
dÂ
, &
œ°
);

483 
	`PR_END
(
dÂ
);

487 i‡(
dñëe_£gmíts
)

490 if(
rows_≥r_£gmít
==0)

491 
rows_≥r_£gmít
 = (
˙t
 / 
dñëe_£gmíts
) + 1;

492 if((++
rows_this_£gmít
Ë> 
rows_≥r_£gmít
)

494 
	`f˛o£
(
dÂ
);

495 
dÂ
 = 
	`¥öt_¥ï
(
tbl
, -
num
);

496 i‡(
dÂ
 =
NULL
) (-1);

497 
œ°_num
 = 
num
;

498 
rows_this_£gmít
=1;

501 
	`PR_STRT
(
dÂ
);

502 
	`PR_HUGE
(
dÂ
, &
™ew
);

503 
	`PR_END
(
dÂ
);

505 
°¨t
 = 
™ew
;

506 
œ°
 = 
™ew
;

508 i‡(
gí_∫g
)

510 
	`PR_STRT
(
dÂ
);

511 
	`PR_HUGE
(
dÂ
, &
°¨t
);

512 
	`PR_HUGE
(
dÂ
, &
œ°
);

513 
	`PR_END
(
dÂ
);

517 
	}
}

524 
	$vrf_cu°
(*
vc
, )

526 
cu°omî_t
* 
c
 = (cu°omî_t*)
vc
;

528 
	`VRF_STRT
(
CUST
);

529 
	`VRF_INT
(
CUST
, 
c
->
cu°key
);

530 
	`VRF_STR
(
CUST
, 
c
->
«me
);

531 
	`VRF_STR
(
CUST
, 
c
->
addªss
);

532 
	`VRF_INT
(
CUST
, 
c
->
«ti⁄_code
);

533 
	`VRF_STR
(
CUST
, 
c
->
ph⁄e
);

534 
	`VRF_MONEY
(
CUST
, 
c
->
ac˘bÆ
);

535 
	`VRF_STR
(
CUST
, 
c
->
mkt£gmít
);

536 
	`VRF_STR
(
CUST
, 
c
->
commít
);

537 
	`VRF_END
(
CUST
);

540 
	}
}

545 
	$vrf_‹dî
(*
vo
, )

547 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

549 
	`VRF_STRT
(
ORDER
);

550 
	`VRF_HUGE
(
ORDER
, 
o
->
okey
);

551 
	`VRF_INT
(
ORDER
, 
o
->
cu°key
);

552 
	`VRF_CHR
(
ORDER
, 
o
->
‹dî°©us
);

553 
	`VRF_MONEY
(
ORDER
, 
o
->
tŸÆ¥i˚
);

554 
	`VRF_STR
(
ORDER
, 
o
->
od©e
);

555 
	`VRF_STR
(
ORDER
, 
o
->
›ri‹ôy
);

556 
	`VRF_STR
(
ORDER
, 
o
->
˛îk
);

557 
	`VRF_INT
(
ORDER
, 
o
->
•ri‹ôy
);

558 
	`VRF_STR
(
ORDER
, 
o
->
commít
);

559 
	`VRF_END
(
ORDER
);

562 
	}
}

567 
	$vrf_löe
(*
vo
, )

569 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

570 
i
;

572 
i
 = 0; i < 
o
->
löes
; i++)

574 
	`VRF_STRT
(
LINE
);

575 
	`VRF_HUGE
(
LINE
, 
o
->
l
[
i
].
okey
);

576 
	`VRF_INT
(
LINE
, 
o
->
l
[
i
].
∑πkey
);

577 
	`VRF_INT
(
LINE
, 
o
->
l
[
i
].
suµkey
);

578 
	`VRF_INT
(
LINE
, 
o
->
l
[
i
].
l˙t
);

579 
	`VRF_INT
(
LINE
, 
o
->
l
[
i
].
qu™tôy
);

580 
	`VRF_MONEY
(
LINE
, 
o
->
l
[
i
].
ïri˚
);

581 
	`VRF_MONEY
(
LINE
, 
o
->
l
[
i
].
discou¡
);

582 
	`VRF_MONEY
(
LINE
, 
o
->
l
[
i
].
èx
);

584 
	`VRF_CHR
(
LINE
, 
o
->
l
[
i
].
rÊag
);

586 
	`VRF_CHR
(
LINE
, 
o
->
l
[
i
].
l°©us
);

587 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
sd©e
);

588 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
cd©e
);

589 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
rd©e
);

590 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
shùö°ru˘
);

591 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
shùmode
);

592 
	`VRF_STR
(
LINE
, 
o
->
l
[
i
].
commít
);

593 
	`VRF_END
(
LINE
);

597 
	}
}

603 
	$vrf_‹dî_löe
(*
vo
, 
mode
)

605 
‹dî_t
* 
o
 = (‹dî_t*)
vo
;

607 
	`vrf_‹dî
(
o
, 
mode
);

608 
	`vrf_löe
(
o
, 
mode
);

611 
	}
}

616 
	$vrf_∑π
(*
vp
, )

618 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

620 
	`VRF_STRT
(
PART
);

621 
	`VRF_INT
(
PART
, 
∑π
->
∑πkey
);

622 
	`VRF_STR
(
PART
, 
∑π
->
«me
);

623 
	`VRF_STR
(
PART
, 
∑π
->
mfgr
);

624 
	`VRF_STR
(
PART
, 
∑π
->
bønd
);

625 
	`VRF_STR
(
PART
, 
∑π
->
ty≥
);

626 
	`VRF_INT
(
PART
, 
∑π
->
size
);

627 
	`VRF_STR
(
PART
, 
∑π
->
c⁄èöî
);

628 
	`VRF_MONEY
(
PART
, 
∑π
->
ªèû¥i˚
);

629 
	`VRF_STR
(
PART
, 
∑π
->
commít
);

630 
	`VRF_END
(
PART
);

633 
	}
}

638 
	$vrf_psuµ
(*
vp
, )

640 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

641 
i
;

643 
i
 = 0; i < 
SUPP_PER_PART
; i++)

645 
	`VRF_STRT
(
PSUPP
);

646 
	`VRF_INT
(
PSUPP
, 
∑π
->
s
[
i
].
∑πkey
);

647 
	`VRF_INT
(
PSUPP
, 
∑π
->
s
[
i
].
suµkey
);

648 
	`VRF_INT
(
PSUPP
, 
∑π
->
s
[
i
].
qty
);

649 
	`VRF_MONEY
(
PSUPP
, 
∑π
->
s
[
i
].
sco°
);

650 
	`VRF_STR
(
PSUPP
, 
∑π
->
s
[
i
].
commít
);

651 
	`VRF_END
(
PSUPP
);

655 
	}
}

661 
	$vrf_∑π_psuµ
(*
vp
, 
mode
)

663 
∑π_t
* 
∑π
 = (∑π_t*)
vp
;

665 
	`vrf_∑π
(
∑π
, 
mode
);

666 
	`vrf_psuµ
(
∑π
, 
mode
);

669 
	}
}

671 
	$vrf_suµ
(*
vs
, )

673 
suµlõr_t
* 
suµ
 = (suµlõr_t*)
vs
;

675 
	`VRF_STRT
(
SUPP
);

676 
	`VRF_INT
(
SUPP
, 
suµ
->
suµkey
);

677 
	`VRF_STR
(
SUPP
, 
suµ
->
«me
);

678 
	`VRF_STR
(
SUPP
, 
suµ
->
addªss
);

679 
	`VRF_INT
(
SUPP
, 
suµ
->
«ti⁄_code
);

680 
	`VRF_STR
(
SUPP
, 
suµ
->
ph⁄e
);

681 
	`VRF_MONEY
(
SUPP
, 
suµ
->
ac˘bÆ
);

682 
	`VRF_STR
(
SUPP
, 
suµ
->
commít
);

683 
	`VRF_END
(
SUPP
);

686 
	}
}

688 
	$vrf_«ti⁄
(*
vc
, )

690 
code_t
* 
c
 = (code_t*)
vc
;

692 
	`VRF_STRT
(
NATION
);

693 
	`VRF_INT
(
NATION
, 
c
->
code
);

694 
	`VRF_STR
(
NATION
, 
c
->
ãxt
);

695 
	`VRF_INT
(
NATION
, 
c
->
joö
);

696 
	`VRF_STR
(
NATION
, 
c
->
commít
);

697 
	`VRF_END
(
NATION
);

700 
	}
}

702 
	$vrf_ªgi⁄
(*
vc
, )

704 
code_t
* 
c
 = (code_t*)
vc
;

706 
	`VRF_STRT
(
REGION
);

707 
	`VRF_INT
(
REGION
, 
c
->
code
);

708 
	`VRF_STR
(
REGION
, 
c
->
ãxt
);

709 
	`VRF_STR
(
REGION
, 
c
->
commít
);

710 
	`VRF_END
(
Â
);

713 
	}
}

717 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/rnd.cpp

73 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

74 
	~<°dio.h
>

75 
	~<m©h.h
>

76 #ifde‡
LINUX


77 
	~<°döt.h
>

79 #ifde‡
IBM


80 
	~<öây≥s.h
>

82 #ifde‡
SUN


83 
	~<öây≥s.h
>

85 #ifde‡
ATT


86 
	~<sys/bôy≥s.h
>

89 
	~"w‹klﬂd/çch/dbgí/dss.h
"

90 
	~"w‹klﬂd/çch/dbgí/∫d.h
"

93 
ENTER_NAMESPACE
(
dbgíçch
);

97 
	gnA
 = 16807;

98 
	gnM
 = 2147483647;

99 
	gnQ
 = 127773;

100 
	gnR
 = 2836;

103 c⁄° *
ív_c⁄fig
 
PROTO
((c⁄° *
èg
, c⁄° *
dÊt
));

104 
NthEÀmít
(
DSS_HUGE
, DSS_HUGE *);

107 
	$dss_øndom
(
DSS_HUGE
 *
tgt
, DSS_HUGE 
lowî
, DSS_HUGE 
uµî
, 
°ªam
)

109 *
tgt
 = 
	`UnifI¡
(
lowî
, 
uµî
, 
°ªam
);

110 
Sìd
[
°ªam
].
ußge
 += 1;

113 
	}
}

115 
row_°¨t
() \

117 
	gi
;

118 
	gi
=0; i <
MAX_STREAM
; i++)

119 
	gSìd
[
i
].
	gußge
 = 0 ;

125 
row_°›
(
t
) \

127 
	gi
;

130 i‡(
	gt
 =
ORDER_LINE
)

131 
t
 = 
ORDER
;

132 i‡(
	gt
 =
PART_PSUPP
)

133 
t
 = 
PART
;

135 
	gi
=0; i <
MAX_STREAM
; i++)

136 i‡((
	gSìd
[
i
].
	gèbÀ
 =
t
Ë|| (
Sìd
[i].
èbÀ
 =
tdefs
[t].
chûd
))

138 i‡(
£t_£eds
 && (
Sìd
[
i
].
ußge
 > Sìd[i].
bound¨y
))

140 
Ârötf
(
°dîr
, "\nSEED CHANGE: seed[%d].usage = %lld\n",

141 
i
, 
Sìd
[i].
ußge
);

142 
	gSìd
[
i
].
	gbound¨y
 = 
Sìd
[i].
ußge
;

146 
NthEÀmít
((
Sìd
[
i
].
bound¨y
 - Sìd[i].
ußge
), &Sìd[i].
vÆue
);

147 #ifde‡
RNG_TEST


148 
	gSìd
[
i
].
	gnCÆls
 +
Sìd
[i].
bound¨y
 - Sìd[i].
ußge
;

156 
	$dump_£eds
(
tbl
)

158 
i
;

160 
i
=0; i <
MAX_STREAM
; i++)

161 i‡(
Sìd
[
i
].
èbÀ
 =
tbl
)

162 #ifde‡
RNG_TEST


163 
	`¥ötf
("%d(%ld):\t%ld\n", 
i
, 
Sìd
[i].
nCÆls
, Sìd[i].
vÆue
);

165 
	`¥ötf
("%d:\t%Œd\n", 
i
, 
Sìd
[i].
vÆue
);

168 
	}
}

179 
DSS_HUGE


180 
	$NextR™d
(
DSS_HUGE
 
nSìd
)

189 
nSìd
 = (nSeed * 16807) % 2147483647;

190  (
nSìd
);

191 
	}
}

202 
DSS_HUGE


203 
	$UnifI¡
(
DSS_HUGE
 
nLow
, DSS_HUGE 
nHigh
, 
nSåóm
)

212 
dR™ge
;

213 
DSS_HUGE
 
nTemp
,

214 
nR™ge
;

215 
nLow32
 = ()
nLow
;

216 
nHigh32
 = ()
nHigh
;

218 i‡(
nSåóm
 < 0 ||ÇSåóm > 
MAX_STREAM
)

219 
nSåóm
 = 0;

221 i‡((
nHigh
 =
MAX_LONG
Ë&& (
nLow
 == 0))

223 
dR™ge
 = 
	`DOUBLE_CAST
 (
nHigh32
 - 
nLow32
 + 1);

224 
nR™ge
 = 
nHigh32
 - 
nLow32
 + 1;

228 
dR™ge
 = 
	`DOUBLE_CAST
 (
nHigh
 - 
nLow
 + 1);

229 
nR™ge
 = 
nHigh
 - 
nLow
 + 1;

232 
Sìd
[
nSåóm
].
vÆue
 = 
	`NextR™d
(Seed[nStream].value);

233 #ifde‡
RNG_TEST


234 
Sìd
[
nSåóm
].
nCÆls
 += 1;

236 
nTemp
 = (Ë(((Ë
Sìd
[
nSåóm
].
vÆue
 / 
dM
Ë* (
dR™ge
));

237  (
nLow
 + 
nTemp
);

238 
	}
}

243 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/rng64.cpp

56 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

57 
	~"w‹klﬂd/çch/dbgí/dss.h
"

58 
	~<°dio.h
>

59 
	~<°dlib.h
>

60 
	~"w‹klﬂd/çch/dbgí/∫g64.h
"

63 
ENTER_NAMESPACE
(
dbgíçch
);

66 
dM
;

68 
£ed_t
 
Sìd
[];

71 
	$dss_øndom64
(
DSS_HUGE
 *
tgt
, DSS_HUGE 
nLow
, DSS_HUGE 
nHigh
, 
nSåóm
)

73 
DSS_HUGE
 
nTemp
;

75 i‡(
nSåóm
 < 0 ||ÇSåóm > 
MAX_STREAM
)

76 
nSåóm
 = 0;

78 i‡(
nLow
 > 
nHigh
)

80 
nTemp
 = 
nLow
;

81 
nLow
 = 
nHigh
;

82 
nHigh
 = 
nTemp
;

85 
Sìd
[
nSåóm
].
vÆue
 = 
	`NextR™d64
(Seed[nStream].value);

86 
nTemp
 = 
Sìd
[
nSåóm
].
vÆue
;

87 i‡(
nTemp
 < 0)

88 
nTemp
 = -nTemp;

89 
nTemp
 %(
nHigh
 - 
nLow
 + 1);

90 *
tgt
 = 
nLow
 + 
nTemp
;

91 
Sìd
[
nSåóm
].
ußge
 += 1;

92 #ifde‡
RNG_TEST


93 
Sìd
[
nSåóm
].
nCÆls
 += 1;

97 
	}
}

99 
DSS_HUGE


100 
	$NextR™d64
(
DSS_HUGE
 
nSìd
){

102 
DSS_HUGE
 
a
 = (DSS_HUGEË
RNG_A
;

103 
DSS_HUGE
 
c
 = (DSS_HUGEË
RNG_C
;

104 
nSìd
 = (nSìd * 
a
 + 
c
);

106  (
nSìd
);

107 
	}
}

109 
DSS_HUGE
 
	$Adv™˚R™d64
–
DSS_HUGE
 
nSìd
,

110 
DSS_HUGE
 
nCou¡
) {

111 
DSS_HUGE
 
a
 = 
RNG_A
 ;

112 
DSS_HUGE
 
c
 = 
RNG_C
 ;

113 
nBô
;

114 
DSS_HUGE
 
Apow
=
a
, 
Dsum
=
c
;

117 if–
nCou¡
 =0 )  
nSìd
;

133  
nBô
 = 0; (
nCou¡
 >>ÇBôË!
RNG_C
 ;ÇBit ++){}

136  --
nBô
 >= 0 ) {

137 
Dsum
 *(
Apow
 + 1);

138 
Apow
 = Apow * Apow;

139 if–((
nCou¡
 >> 
nBô
) % 2) == 1 ) {

140 
Dsum
 +
Apow
;

141 
Apow
 *
a
;

144 
nSìd
 =ÇSìd * 
Apow
 + 
Dsum
 * 
c
;

145  
nSìd
;

146 
	}
}

149 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/speed_seed.cpp

49 
	~<°dio.h
>

50 
	~<°dlib.h
>

51 
	~"w‹klﬂd/çch/dbgí/dss.h
"

52 
	~"w‹klﬂd/çch/dbgí/∫g64.h
"

53 
	~"w‹klﬂd/çch/dbgí/dss.h
"

56 
ENTER_NAMESPACE
(
dbgíçch
);

61 
	#ADVANCE_STREAM
(
°ªam_id
, 
num_ˇŒs
) \

62 
	`adv™˚Såóm
(
°ªam_id
, 
num_ˇŒs
, 0)

	)

63 
	#ADVANCE_STREAM64
(
°ªam_id
, 
num_ˇŒs
) \

64 
	`adv™˚Såóm
(
°ªam_id
, 
num_ˇŒs
, 1)

	)

65 
	#MAX_COLOR
 92

	)

66 
	g«me_bôs
[
MAX_COLOR
 / 
BITS_PER_LONG
];

67 
£ed_t
 
Sìd
[];

68 
ÁkeVSå
(
nAvg
, 
nSìd
, 
DSS_HUGE
 
nCou¡
);

69 
NthEÀmít
 (
DSS_HUGE
 
N
, DSS_HUGE *
SèπSìd
);

73 
	$adv™˚Såóm
(
nSåóm
, 
nCÆls
, 
bU£64Bô
)

75 i‡(
bU£64Bô
)

76 
Sìd
[
nSåóm
].
vÆue
 = 
	`Adv™˚R™d64
(Sìd[nSåóm].vÆue, 
nCÆls
);

78 
	`NthEÀmít
(
nCÆls
, &
Sìd
[
nSåóm
].
vÆue
);

80 #ifde‡
RNG_TEST


81 
Sìd
[
nSåóm
].
nCÆls
 +=ÇCalls;

85 
	}
}

94 
DSS_HUGE
 
	gMu…ùlõr
 = 16807;

95 
DSS_HUGE
 
	gModulus
 = 2147483647;

114 
	$NthEÀmít
 (
DSS_HUGE
 
N
, DSS_HUGE *
SèπSìd
)

116 
DSS_HUGE
 
Z
;

117 
DSS_HUGE
 
Mu…
;

118 
 
=-1;

119 
i
;

121 i‡((
vîbo£
 > 0Ë&& ++
 
 % 1000 == 0)

123 
i
 = 
 
 % 
LN_CNT
;

124 
	`Ârötf
(
°dîr
, "%c\b", 
 oi£
[
i
]);

126 
Mu…
 = 
Mu…ùlõr
;

127 
Z
 = (
DSS_HUGE
Ë*
SèπSìd
;

128 
N
 > 0 )

130 i‡(
N
 % 2 != 0)

131 
Z
 = (
Mu…
 * ZË% 
Modulus
;

132 
N
 = N / 2;

133 
Mu…
 = (Mu… * Mu…Ë% 
Modulus
;

135 *
SèπSìd
 = 
Z
;

138 
	}
}

143 
	$Áke_a_∫d
(
mö
, 
max
, 
cﬁumn
)

145 
DSS_HUGE
 
Àn
;

146 
DSS_HUGE
 
ôcou¡
;

148 
	`RANDOM
(
Àn
, 
mö
, 
max
, 
cﬁumn
);

149 i‡(
Àn
 % 5L == 0)

150 
ôcou¡
 = 
Àn
/5;

152 
ôcou¡
 = 
Àn
/5 + 1L;

153 
	`NthEÀmít
(
ôcou¡
, &
Sìd
[
cﬁumn
].
ußge
);

154 #ifde‡
RNG_TEST


155 
Sìd
[
cﬁumn
].
nCÆls
 +
ôcou¡
;

158 
	}
}

161 
	$sd_∑π
(, 
DSS_HUGE
 
skù_cou¡
)

163 
i
;

165 
i
=
P_MFG_SD
; i<
P_CNTR_SD
; i++)

166 
	`ADVANCE_STREAM
(
i
, 
skù_cou¡
);

168 
	`ADVANCE_STREAM
(
P_CMNT_SD
, 
skù_cou¡
 * 2);

169 
	`ADVANCE_STREAM
(
P_NAME_SD
, 
skù_cou¡
 * 92);

172 
	}
}

175 
	$sd_löe
(
chûd
, 
DSS_HUGE
 
skù_cou¡
)

177 
i
,
j
;

179 
j
=0; j < 
O_LCNT_MAX
; j++)

181 
i
=
L_QTY_SD
; i<
L_RFLG_SD
; i++)

182 i‡(
sˇÀ
 >30000 && 
i
 =
L_PKEY_SD
)

183 
	`ADVANCE_STREAM64
(
i
, 
skù_cou¡
);

185 
	`ADVANCE_STREAM
(
i
, 
skù_cou¡
);

186 
	`ADVANCE_STREAM
(
L_CMNT_SD
, 
skù_cou¡
 * 2);

190 i‡(
chûd
 == 1)

192 
	`ADVANCE_STREAM
(
O_ODATE_SD
, 
skù_cou¡
);

193 
	`ADVANCE_STREAM
(
O_LCNT_SD
, 
skù_cou¡
);

197 
	}
}

199 
	$sd_‹dî
(, 
DSS_HUGE
 
skù_cou¡
)

201 
	`ADVANCE_STREAM
(
O_LCNT_SD
, 
skù_cou¡
);

202 i‡(
sˇÀ
 >= 30000)

203 
	`ADVANCE_STREAM64
(
O_CKEY_SD
, 
skù_cou¡
);

205 
	`ADVANCE_STREAM
(
O_CKEY_SD
, 
skù_cou¡
);

206 
	`ADVANCE_STREAM
(
O_CMNT_SD
, 
skù_cou¡
 * 2);

207 
	`ADVANCE_STREAM
(
O_SUPP_SD
, 
skù_cou¡
);

208 
	`ADVANCE_STREAM
(
O_CLRK_SD
, 
skù_cou¡
);

209 
	`ADVANCE_STREAM
(
O_PRIO_SD
, 
skù_cou¡
);

210 
	`ADVANCE_STREAM
(
O_ODATE_SD
, 
skù_cou¡
);

213 
	}
}

215 
	$sd_psuµ
(, 
DSS_HUGE
 
skù_cou¡
)

217 
j
;

219 
j
=0; j < 
SUPP_PER_PART
; j++)

221 
	`ADVANCE_STREAM
(
PS_QTY_SD
, 
skù_cou¡
);

222 
	`ADVANCE_STREAM
(
PS_SCST_SD
, 
skù_cou¡
);

223 
	`ADVANCE_STREAM
(
PS_CMNT_SD
, 
skù_cou¡
 * 2);

227 
	}
}

229 
	$sd_cu°
(, 
DSS_HUGE
 
skù_cou¡
)

232 
	`ADVANCE_STREAM
(
C_ADDR_SD
, 
skù_cou¡
 * 9);

233 
	`ADVANCE_STREAM
(
C_CMNT_SD
, 
skù_cou¡
 * 2);

234 
	`ADVANCE_STREAM
(
C_NTRG_SD
, 
skù_cou¡
);

235 
	`ADVANCE_STREAM
(
C_PHNE_SD
, 3L * 
skù_cou¡
);

236 
	`ADVANCE_STREAM
(
C_ABAL_SD
, 
skù_cou¡
);

237 
	`ADVANCE_STREAM
(
C_MSEG_SD
, 
skù_cou¡
);

239 
	}
}

241 
	$sd_suµ
(, 
DSS_HUGE
 
skù_cou¡
)

243 
	`ADVANCE_STREAM
(
S_NTRG_SD
, 
skù_cou¡
);

244 
	`ADVANCE_STREAM
(
S_PHNE_SD
, 3L * 
skù_cou¡
);

245 
	`ADVANCE_STREAM
(
S_ABAL_SD
, 
skù_cou¡
);

246 
	`ADVANCE_STREAM
(
S_ADDR_SD
, 
skù_cou¡
 * 9);

247 
	`ADVANCE_STREAM
(
S_CMNT_SD
, 
skù_cou¡
 * 2);

248 
	`ADVANCE_STREAM
(
BBB_CMNT_SD
, 
skù_cou¡
);

249 
	`ADVANCE_STREAM
(
BBB_JNK_SD
, 
skù_cou¡
);

250 
	`ADVANCE_STREAM
(
BBB_OFFSET_SD
, 
skù_cou¡
);

251 
	`ADVANCE_STREAM
(
BBB_TYPE_SD
, 
skù_cou¡
);

254 
	}
}

257 
EXIT_NAMESPACE
(
dbgíçch
);

	@src/workload/tpch/dbgen/text.cpp

43 #ifde‡
TEXT_TEST


44 
	#DECLARER


	)

47 
	~"w‹klﬂd/çch/dbgí/c⁄fig.h
"

48 
	~<°dlib.h
>

49 
	~<uni°d.h
>

50 
	~<sys/waô.h
>

51 
	~<°dio.h
>

52 
	~<limôs.h
>

53 
	~<m©h.h
>

54 
	~<˘y≥.h
>

55 
	~<sig«l.h
>

56 
	~<°rög.h
>

57 
	~<î∫o.h
>

58 #ifde‡
HP


59 
	~<°rögs.h
>

62 
	~"w‹klﬂd/çch/dbgí/dss.h
"

63 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

66 
ENTER_NAMESPACE
(
dbgíçch
);

70 
	#TEXT_POOL_SIZE
 (300 * 1024 * 1024)

	)

73 
	#TEXT_POOL_PROGRESS
 (30 * 1024 * 1024)

	)

88 
	$txt_vp
(*
de°
, 
sd
)

90 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

91 *
˝å
,

92 *
∑r£_èrgë
;

93 
di°ributi⁄
 *
§c
;

94 
i
,

95 
ªs
 = 0;

98 
	`pick_°r
(&
vp
, 
sd
, &
sy¡ax
[0]);

99 
∑r£_èrgë
 = 
sy¡ax
;

100 (
˝å
 = 
	`°πok
(
∑r£_èrgë
, " ")Ë!
NULL
)

102 
§c
 = 
NULL
;

103 *
˝å
)

106 
§c
 = &
advîbs
;

109 
§c
 = &
vîbs
;

112 
§c
 = &
auxûœrõs
;

115 
i
 = 
	`pick_°r
(
§c
, 
sd
, 
de°
);

116 
i
 = 
	`°æí
(
	`DIST_MEMBER
(
§c
, i));

117 
de°
 +
i
;

118 
ªs
 +
i
;

119 i‡(*(++
˝å
))

121 
de°
 += 1;

122 
ªs
 += 1;

123 *
de°
 = *
˝å
;

125 *
de°
 = ' ';

126 
de°
++;

127 
ªs
++;

128 
∑r£_èrgë
 = 
NULL
;

131 (
ªs
);

132 
	}
}

147 
	$txt_≈
(*
de°
, 
sd
)

149 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

150 *
˝å
,

151 *
∑r£_èrgë
;

152 
di°ributi⁄
 *
§c
;

153 
i
,

154 
ªs
 = 0;

157 
	`pick_°r
(&
≈
, 
sd
, &
sy¡ax
[0]);

158 
∑r£_èrgë
 = 
sy¡ax
;

159 (
˝å
 = 
	`°πok
(
∑r£_èrgë
, " ")Ë!
NULL
)

161 
§c
 = 
NULL
;

162 *
˝å
)

165 
§c
 = &
¨ti˛es
;

168 
§c
 = &
adje˘ives
;

171 
§c
 = &
advîbs
;

174 
§c
 = &
nouns
;

177 
i
 = 
	`pick_°r
(
§c
, 
sd
, 
de°
);

178 
i
 = 
	`°æí
(
	`DIST_MEMBER
(
§c
, i));

179 
de°
 +
i
;

180 
ªs
 +
i
;

181 i‡(*(++
˝å
))

183 *
de°
 = *
˝å
;

184 
de°
 += 1;

185 
ªs
 += 1;

187 *
de°
 = ' ';

188 
de°
++;

189 
ªs
++;

190 
∑r£_èrgë
 = 
NULL
;

193 (
ªs
);

194 
	}
}

209 
	$txt_£¡í˚
(*
de°
, 
sd
)

211 
sy¡ax
[
MAX_GRAMMAR_LEN
 + 1],

212 *
˝å
;

213 
i
,

214 
ªs
 = 0,

215 
Àn
 = 0;

218 
	`pick_°r
(&
gømm¨
, 
sd
, 
sy¡ax
);

219 
˝å
 = 
sy¡ax
;

221 
√xt_tokí
:

222 *
˝å
 && *cptr == ' ')

223 
˝å
++;

224 i‡(*
˝å
 == '\0')

225 
d⁄e
;

226 *
˝å
)

229 
Àn
 = 
	`txt_vp
(
de°
, 
sd
);

232 
Àn
 = 
	`txt_≈
(
de°
, 
sd
);

235 
i
 = 
	`pick_°r
(&
¥ïosôi⁄s
, 
sd
, 
de°
);

236 
Àn
 = 
	`°æí
(
	`DIST_MEMBER
(&
¥ïosôi⁄s
, 
i
));

237 
	`°r˝y
((
de°
 + 
Àn
), "Åhe ");

238 
Àn
 += 5;

239 
Àn
 +
	`txt_≈
(
de°
 +Üí, 
sd
);

242 
i
 = 
	`pick_°r
(&
ãrmö©‹s
, 
sd
, --
de°
);

243 
Àn
 = 
	`°æí
(
	`DIST_MEMBER
(&
ãrmö©‹s
, 
i
));

246 
de°
 +
Àn
;

247 
ªs
 +
Àn
;

248 
˝å
++;

249 i‡(*
˝å
 && *cptr != ' ')

251 
de°
 += 1;

252 
ªs
 += 1;

253 *
de°
 = *
˝å
;

255 
√xt_tokí
;

256 
d⁄e
:

257 *
de°
 = '\0';

258 (--
ªs
);

259 
	}
}

267 
	$dbg_ãxt
(*
tgt
, 
mö
, 
max
, 
sd
)

269 
DSS_HUGE
 
hgLígth
 = 0;

270 
DSS_HUGE
 
hgOff£t
;

271 
DSS_HUGE
 
w‹dÀn
 = 0;

272 
DSS_HUGE
 
s_Àn
;

273 
DSS_HUGE
 
√eded
;

274 
£¡í˚
[
MAX_SENT_LEN
 + 1];

275 *
˝
;

276 
szTextPoﬁ
[
TEXT_POOL_SIZE
 + 1];

277 
bInô
 = 0;

278 
nLi„Noi£
 = 0;

279 
txtPoﬁIndiˇt‹
 = 
TEXT_POOL_PROGRESS
;

281 !
bInô
) {

283 
˝
 = &
szTextPoﬁ
[0];

284 
	`TRACE
–
TRACE_ALWAYS
, "PreloadingÅext ..\n");

286 
w‹dÀn
 < 
TEXT_POOL_SIZE
) {

287 i‡(
vîbo£
 && (
w‹dÀn
 > 
nLi„Noi£
)) {

288 
nLi„Noi£
 += 200000;

289 
	`Ârötf
(
°dîr
, "%3.0f%%\b\b\b\b", (100.0 * 
w‹dÀn
)/
TEXT_POOL_SIZE
);

292 i‡(
w‹dÀn
 > 
txtPoﬁIndiˇt‹
) {

293 
	`TRACE
–
TRACE_ALWAYS
, "%.0f%%\n", ()(100*
w‹dÀn
)/()
TEXT_POOL_SIZE
);

294 
txtPoﬁIndiˇt‹
 +
TEXT_POOL_PROGRESS
;

297 
s_Àn
 = 
	`txt_£¡í˚
(
£¡í˚
, 5);

298 i‡–
s_Àn
 < 0) {

299 
	`INTERNAL_ERROR
("Bad sentence formation");

302 
√eded
 = 
TEXT_POOL_SIZE
 - 
w‹dÀn
;

303 i‡(
√eded
 >(
s_Àn
 + 1)) {

304 
	`°r˝y
(
˝
, 
£¡í˚
);

305 
˝
 +
s_Àn
;

306 
w‹dÀn
 +
s_Àn
 + 1;

307 *(
˝
++) = ' ';

310 
£¡í˚
[
√eded
] = '\0';

311 
	`°r˝y
(
˝
, 
£¡í˚
);

312 
w‹dÀn
 +
√eded
;

313 
˝
 +
√eded
;

317 *
˝
 = '\0';

318 
bInô
 = 1;

321 
	`RANDOM
(
hgOff£t
, 0, 
TEXT_POOL_SIZE
 - 
max
, 
sd
);

322 
	`RANDOM
(
hgLígth
, 
mö
, 
max
, 
sd
);

323 
	`°∫˝y
(&
tgt
[0], &
szTextPoﬁ
[
hgOff£t
], ()
hgLígth
);

324 
tgt
[
hgLígth
] = '\0';

327 
	}
}

331 
EXIT_NAMESPACE
(
dbgíçch
);

335 #ifde‡
TEXT_TEST


336 
tdef
 
	gtdefs
[1] = { 
NULL
 };

337 
di°ributi⁄
 
	gnouns
,

338 
	gvîbs
,

339 
	gadje˘ives
,

340 
	gadvîbs
,

341 
	gauxûœrõs
,

342 
	gãrmö©‹s
,

343 
	g¨ti˛es
,

344 
	g¥ïosôi⁄s
,

345 
	ggømm¨
,

346 
	g≈
,

347 
	gvp
;

349 
	$maö
()

351 
¥©ée
[401];

353 
vîbo£
 = 1;

355 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "nouns", &
nouns
);

356 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vîbs", &
vîbs
);

357 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "adje˘ives", &
adje˘ives
);

358 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "advîbs", &
advîbs
);

359 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "auxûœrõs", &
auxûœrõs
);

360 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "ãrmö©‹s", &
ãrmö©‹s
);

361 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¨ti˛es", &
¨ti˛es
);

362 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "¥ïosôi⁄s", &
¥ïosôi⁄s
);

363 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "gømm¨", &
gømm¨
);

364 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "≈", &
≈
);

365 
	`ªad_di°
 (
	`ív_c⁄fig
 (
DIST_TAG
, 
DIST_DFLT
), "vp", &
vp
);

369 
	`dbg_ãxt
(&
¥©ée
[0], 300, 400, 0);

370 
	`¥ötf
("<%s>\n", 
¥©ée
);

374 
	}
}

	@src/workload/tpch/qpipe/qpipe_q1.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 
	sq1_¥oje˘ed_löeôem_tu∂e
 {

51 
decimÆ
 
	mL_QUANTITY
;

52 
decimÆ
 
	mL_EXTENDEDPRICE
;

53 
decimÆ
 
	mL_DISCOUNT
;

54 
decimÆ
 
	mL_TAX
;

55 
	mL_RETURNFLAG
;

56 
	mL_LINESTATUS
;

61 
	sq1_aggªg©e_tu∂e
 {

62 
decimÆ
 
	mL_SUM_QTY
;

63 
decimÆ
 
	mL_SUM_BASE_PRICE
;

64 
decimÆ
 
	mL_SUM_DISC_PRICE
;

65 
decimÆ
 
	mL_SUM_CHARGE
;

66 
decimÆ
 
	mL_AVG_QTY
;

67 
decimÆ
 
	mL_AVG_PRICE
;

68 
decimÆ
 
	mL_AVG_DISC
;

69 
decimÆ
 
	mL_COUNT_ORDER
;

70 
	mL_RETURNFLAG
 ;

71 
	mL_LINESTATUS
;

77 ˛as†
	cq1_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


79 
¥iv©e
:

80 
Sh‹eTPCHEnv
* 
_çchdb
;

81 
èbÀ_row_t
* 
	m_¥löe
;

82 
ªp_row_t
 
	m_º
;

84 
çch_löeôem_tu∂e
 
	m_löeôem
;

85 
time_t
 
	m_shùd©e
;

91 
q1_öput_t
* 
	mq1_öput
;

92 
	mpublic
:

94 
	$q1_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q1_öput_t
 &
ö
)

95 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

100 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

101 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

102 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

103 
_¥löe
->
_ªp
 = &
_º
;

108 
q1_öput
=&
ö
;

110 
d©e
[15];

111 
	`timë_to_°r
(
d©e
,
q1_öput
->
l_shùd©e
);

112 
	`TRACE
 (
TRACE_ALWAYS
,"R™domÖªdiˇãs: %s\n", 
d©e
);

115 
vútuÆ
 ~
	$q1_tsˇn_fûãr_t
()

118 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

119 
	}
}

123 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

126 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

127 
	`as£π
(
Ál£
);

131 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

132 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

135 i‡–
_shùd©e
 <
q1_öput
->
l_shùd©e
 ) {

137  (
åue
);

141  (
Ál£
);

143 
	}
}

147 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

149 
q1_¥oje˘ed_löeôem_tu∂e
 *
de°
;

150 
de°
 = 
Æig√d_ˇ°
<
q1_¥oje˘ed_löeôem_tu∂e
>(
d
.
d©a
);

152 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

153 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

154 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

155 
_¥löe
->
	`gë_vÆue
(7, 
_löeôem
.
L_TAX
);

156 
_¥löe
->
	`gë_vÆue
(8, 
_löeôem
.
L_RETURNFLAG
);

157 
_¥löe
->
	`gë_vÆue
(9, 
_löeôem
.
L_LINESTATUS
);

167 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

168 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

169 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT / 100.0;

170 
de°
->
L_TAX
 = 
_löeôem
.L_TAX / 100.0;

171 
de°
->
L_RETURNFLAG
 = 
_löeôem
.L_RETURNFLAG;

172 
de°
->
L_LINESTATUS
 = 
_löeôem
.L_LINESTATUS;

174 
	}
}

176 
q1_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

177  
√w
 
	`q1_tsˇn_fûãr_t
(*
this
);

178 
	}
}

180 
c_°r
 
	$to_°rög
() const {

181 
d©e
[15];

182 
	`timë_to_°r
(
d©e
,
q1_öput
->
l_shùd©e
);

183  
	`c_°r
("q1_tsˇn_fûãr_t(%s)",
d©e
);

184 
	}
}

190 
	gq1_key_exåa˘_t
 : 
public
 
key_exåa˘‹_t


192 
q1_key_exåa˘_t
()

193 : 
key_exåa˘‹_t
(()*2, 
off£tof
(
q1_¥oje˘ed_löeôem_tu∂e
, 
L_RETURNFLAG
))

195 
as£π
(() == 1);

198 
exåa˘_höt
(c⁄° * 
key_d©a
) const {

200 *
	gkey
;

201 
	gkey
 = 
Æig√d_ˇ°
<>(
key_d©a
);

203 
	gªsu…
 = (*
key
 << 8) + *(key + ());

205  
	gªsu…
;

208 
q1_key_exåa˘_t
* 
˛⁄e
() const {

209  
√w
 
q1_key_exåa˘_t
(*
this
);

216 ˛as†
	cq1_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


218 
¥iv©e
:

219 
q1_key_exåa˘_t
 
_exåa˘‹
;

221 
	mpublic
:

223 
	$q1_cou¡_aggªg©e_t
()

224 : 
	`tu∂e_aggªg©e_t
((
q1_aggªg©e_tu∂e
))

228 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{  &
_exåa˘‹
; 
	}
}

230 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

231 
q1_¥oje˘ed_löeôem_tu∂e
 *
§c
;

232 
§c
 = 
Æig√d_ˇ°
<
q1_¥oje˘ed_löeôem_tu∂e
>(
s
.
d©a
);

233 
q1_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q1_aggªg©e_tu∂e>(
agg_d©a
);

236 
decimÆ
 
L_EXTENDEDPRICE
 = 
§c
->L_EXTENDEDPRICE;

237 
decimÆ
 
L_DISCOUNT
 = 
§c
->L_DISCOUNT;

238 
decimÆ
 
L_QUANTITY
 = 
§c
->L_QUANTITY;

239 
decimÆ
 
L_DISC_PRICE
 = 
L_EXTENDEDPRICE
 * (1 - 
L_DISCOUNT
);

242 
tu∂e
->
L_COUNT_ORDER
++;

245 
tu∂e
->
L_SUM_QTY
 +
L_QUANTITY
;

246 
tu∂e
->
L_SUM_BASE_PRICE
 +
L_EXTENDEDPRICE
;

247 
tu∂e
->
L_SUM_DISC_PRICE
 +
L_DISC_PRICE
;

248 
tu∂e
->
L_SUM_CHARGE
 +
L_DISC_PRICE
 * (1 + 
§c
->
L_TAX
);

249 
tu∂e
->
L_AVG_QTY
 +
L_QUANTITY
;

250 
tu∂e
->
L_AVG_PRICE
 +
L_EXTENDEDPRICE
;

251 
tu∂e
->
L_AVG_DISC
 +
L_DISCOUNT
;

252 
tu∂e
->
L_RETURNFLAG
 = 
§c
->L_RETURNFLAG;

253 
tu∂e
->
L_LINESTATUS
 = 
§c
->L_LINESTATUS;

255 c⁄° 
uöt
 
OUTPUT_RATE
 = 10;

256 i‡((
tu∂e
->
L_COUNT_ORDER
).
	`to_öt
(Ë% 
OUTPUT_RATE
 == 0) {

258 
	`fÊush
(
°dout
);

260 
	}
}

262 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

263 
q1_aggªg©e_tu∂e
 *
de°
;

264 
de°
 = 
Æig√d_ˇ°
<
q1_aggªg©e_tu∂e
>(
d
.
d©a
);

265 
q1_aggªg©e_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q1_aggªg©e_tu∂e>(
agg_d©a
);

267 *
de°
 = *
tu∂e
;

269 
de°
->
L_AVG_QTY
 /de°->
L_COUNT_ORDER
;

270 
de°
->
L_AVG_PRICE
 /de°->
L_COUNT_ORDER
;

271 
de°
->
L_AVG_DISC
 /de°->
L_COUNT_ORDER
;

272 
	}
}

274 
q1_cou¡_aggªg©e_t
* 
	$˛⁄e
() const {

275  
√w
 
	`q1_cou¡_aggªg©e_t
(*
this
);

276 
	}
}

278 
c_°r
 
	$to_°rög
() const {

280 
	}
}

284 ˛as†
	cçch_q1_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


286 
public
:

288 
	$begö
() {

289 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q1 ANSWER ...\n");

290 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** L_RETURNFLAG\tL_LINESTATUS\tSUM_QTY\tSUM_BASE_PRICE\tSUM_DISC_PRICE\tSUM_CHARGE\tAVG_QTY\tAVG_PRICE\tAVG_DISC\tCOUNT_ORDER\n");

293 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

294 
q1_aggªg©e_tu∂e
 *
tu∂e
;

295 
tu∂e
 = 
Æig√d_ˇ°
<
q1_aggªg©e_tu∂e
>(
ouçut
.
d©a
);

296 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** %c\t%c\t%.4f\t%.4f\t%.4f\t%.4f\t%.4f\t%.4f\t%.4f\t%.4f\n",

297 
tu∂e
->
L_RETURNFLAG
,

298 
tu∂e
->
L_LINESTATUS
,

299 
tu∂e
->
L_SUM_QTY
.
	`to_doubÀ
(),

300 
tu∂e
->
L_SUM_BASE_PRICE
.
	`to_doubÀ
(),

301 
tu∂e
->
L_SUM_DISC_PRICE
.
	`to_doubÀ
(),

302 
tu∂e
->
L_SUM_CHARGE
.
	`to_doubÀ
(),

303 
tu∂e
->
L_AVG_QTY
.
	`to_doubÀ
(),

304 
tu∂e
->
L_AVG_PRICE
.
	`to_doubÀ
(),

305 
tu∂e
->
L_AVG_DISC
.
	`to_doubÀ
(),

306 
tu∂e
->
L_COUNT_ORDER
.
	`to_doubÀ
());

307 
	}
}

318 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q1
(c⁄° 
x˘_id
,

319 
q1_öput_t
& 
ö
)

321 
	`TRACE
–
TRACE_ALWAYS
, "********** Q1 *********\n");

349 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

350 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

354 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

355 
√w
 
	`tu∂e_fifo
((
q1_¥oje˘ed_löeôem_tu∂e
));

356 
tsˇn_∑ckë_t
* 
q1_tsˇn_∑ckë
 =

357 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEITEM",

358 
tsˇn_out_buf„r
,

359 
√w
 
	`q1_tsˇn_fûãr_t
(
this
,
ö
),

360 
this
->
	`db
(),

361 
_∂öeôem_desc
.
	`gë
(),

362 
px˘


368 
tu∂e_fifo
* 
agg_ouçut_buf„r
 =

369 
√w
 
	`tu∂e_fifo
((
q1_aggªg©e_tu∂e
));

370 
∑ckë_t
* 
q1_agg_∑ckë
 =

371 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG Q1",

372 
agg_ouçut_buf„r
,

373 
√w
 
	`åivül_fûãr_t
(
agg_ouçut_buf„r
->
	`tu∂e_size
()),

374 
q1_tsˇn_∑ckë
,

375 
√w
 
	`q1_cou¡_aggªg©e_t
(),

376 
√w
 
	`q1_key_exåa˘_t
(),

377 
√w
 
	`öt_key_com∑ª_t
());

379 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

380 
q1_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

381 
q1_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

384 
çch_q1_¥o˚ss_tu∂e_t
 
±
;

385 
	`¥o˚ss_quîy
(
q1_agg_∑ckë
, 
±
);

386 
dp
->
	`quîy_°©e_de°roy
(
qs
);

388  (
RCOK
);

389 
	}
}

392 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q10.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

86 
	sq10_¥oje˘ed_löeôem_tu∂e
 {

87 
	mL_ORDERKEY
;

88 
decimÆ
 
	mREVENUE
;

91 
	sq10_¥oje˘ed_‹dîs_tu∂e
 {

92 
	mO_ORDERKEY
;

93 
	mO_CUSTKEY
;

96 
	sq10_¥oje˘ed_cu°omî_tu∂e
 {

97 
	mC_CUSTKEY
;

98 
	mC_NATIONKEY
;

99 
	mC_NAME
[
STRSIZE
(25)];

100 
decimÆ
 
	mC_ACCTBAL
;

101 
	mC_ADDRESS
[
STRSIZE
(40)];

102 
	mC_PHONE
[
STRSIZE
(15)];

103 
	mC_COMMENT
[
STRSIZE
(117)];

106 
	sq10_¥oje˘ed_«ti⁄_tu∂e
 {

107 
	mN_NATIONKEY
;

108 
	mN_NAME
[
STRSIZE
(25)];

111 
	sq10_l_joö_o_tu∂e
 {

112 
	mO_CUSTKEY
;

113 
decimÆ
 
	mREVENUE
;

116 
	sq10_c_joö_l_o_tu∂e
 {

117 
	mC_CUSTKEY
;

118 
	mC_NATIONKEY
;

119 
	mC_NAME
[
STRSIZE
(25)];

120 
decimÆ
 
	mC_ACCTBAL
;

121 
	mC_ADDRESS
[
STRSIZE
(40)];

122 
	mC_PHONE
[
STRSIZE
(15)];

123 
	mC_COMMENT
[
STRSIZE
(117)];

124 
decimÆ
 
	mREVENUE
;

127 
	sq10_föÆ_tu∂e
 {

128 
	mC_CUSTKEY
;

129 
	mC_NAME
[
STRSIZE
(25)];

130 
decimÆ
 
	mC_ACCTBAL
;

131 
	mC_PHONE
[
STRSIZE
(15)];

132 
	mN_NAME
[
STRSIZE
(25)];

133 
	mC_ADDRESS
[
STRSIZE
(40)];

134 
	mC_COMMENT
[
STRSIZE
(117)];

135 
decimÆ
 
	mREVENUE
;

139 ˛as†
	cq10_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


141 
¥iv©e
:

142 
Sh‹eTPCHEnv
* 
_çchdb
;

143 
èbÀ_row_t
* 
	m_¥löe
;

144 
ªp_row_t
 
	m_º
;

146 
çch_löeôem_tu∂e
 
	m_löeôem
;

148 
	mpublic
:

149 
	$q10_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q10_öput_t
 &
ö
)

150 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

152 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

153 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

154 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

155 
_¥löe
->
_ªp
 = &
_º
;

158 
vútuÆ
 ~
	$q10_löeôem_tsˇn_fûãr_t
()

161 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

162 
	}
}

164 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

166 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

167 
	`as£π
(
Ál£
);

170 
_¥löe
->
	`gë_vÆue
(8, 
_löeôem
.
L_RETURNFLAG
);

172  
_löeôem
.
L_RETURNFLAG
 == 'R';

173 
	}
}

175 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

177 
q10_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

179 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

180 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

181 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

185 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

186 
de°
->
REVENUE
 = 
_löeôem
.
L_EXTENDEDPRICE
 / 100.0 * (1 - _löeôem.
L_DISCOUNT
 / 100.0);

187 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

188 
	}
}

190 
q10_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

191  
√w
 
	`q10_löeôem_tsˇn_fûãr_t
(*
this
);

192 
	}
}

194 
c_°r
 
	$to_°rög
() const {

195  
	`c_°r
("q10_lineitem_tscan_filter_t()");

196 
	}
}

199 ˛as†
	cq10_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


201 
¥iv©e
:

202 
Sh‹eTPCHEnv
* 
_çchdb
;

203 
èbÀ_row_t
* 
	m_¥‹dîs
;

204 
ªp_row_t
 
	m_º
;

206 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

207 
time_t
 
	m_‹dîd©e
;

209 
time_t
 
	m_fú°_‹dîd©e
;

210 
time_t
 
	m_œ°_‹dîd©e
;

212 
	mpublic
:

213 
	$q10_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q10_öput_t
 &
ö
)

214 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

216 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

217 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

218 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

219 
_¥‹dîs
->
_ªp
 = &
_º
;

221 
_fú°_‹dîd©e
 = (&
ö
)->
o_‹dîd©e
;

222 
tm
 *tm = 
	`gmtime
(&
_fú°_‹dîd©e
);

223 
tm
->
tm_m⁄
 += 3;

224 
_œ°_‹dîd©e
 = 
	`mktime
(
tm
);

226 
f_‹dîd©e
[
	`STRSIZE
(10)];

227 
l_‹dîd©e
[
	`STRSIZE
(10)];

228 
	`timë_to_°r
(
f_‹dîd©e
, 
_fú°_‹dîd©e
);

229 
	`timë_to_°r
(
l_‹dîd©e
, 
_œ°_‹dîd©e
);

231 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nO_ORDERDATE bëwì¿[%s, %s[\n", 
f_‹dîd©e
, 
l_‹dîd©e
);

234 
vútuÆ
 ~
	$q10_‹dîs_tsˇn_fûãr_t
()

237 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

238 
	}
}

240 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

242 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

243 
	`as£π
(
Ál£
);

246 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, (_orders.O_ORDERDATE));

247 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

249  
_‹dîd©e
 >
_fú°_‹dîd©e
 && _‹dîd©ê< 
_œ°_‹dîd©e
;

250 
	}
}

252 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

254 
q10_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

256 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

257 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

261 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

262 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

263 
	}
}

265 
q10_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

266  
√w
 
	`q10_‹dîs_tsˇn_fûãr_t
(*
this
);

267 
	}
}

269 
c_°r
 
	$to_°rög
() const {

270 
f_‹dîd©e
[
	`STRSIZE
(10)];

271 
l_‹dîd©e
[
	`STRSIZE
(10)];

272 
	`timë_to_°r
(
f_‹dîd©e
, 
_fú°_‹dîd©e
);

273 
	`timë_to_°r
(
l_‹dîd©e
, 
_œ°_‹dîd©e
);

274  
	`c_°r
("q10_‹dîs_tsˇn_fûãr_t(O_ORDERDATE bëwì¿[%s, %s[)", 
f_‹dîd©e
, 
l_‹dîd©e
);

275 
	}
}

278 ˛as†
	cq10_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


280 
¥iv©e
:

281 
Sh‹eTPCHEnv
* 
_çchdb
;

282 
èbÀ_row_t
* 
	m_¥cu°
;

283 
ªp_row_t
 
	m_º
;

285 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

287 
	mpublic
:

288 
	$q10_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q10_öput_t
 &
ö
)

289 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

291 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

292 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

293 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

294 
_¥cu°
->
_ªp
 = &
_º
;

297 
vútuÆ
 ~
	$q10_cu°omî_tsˇn_fûãr_t
()

300 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

301 
	}
}

303 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

305 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

306 
	`as£π
(
Ál£
);

309  
åue
;

310 
	}
}

312 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

314 
q10_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

316 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

317 
_¥cu°
->
	`gë_vÆue
(1, 
_cu°omî
.
C_NAME
, (_customer.C_NAME));

318 
_¥cu°
->
	`gë_vÆue
(2, 
_cu°omî
.
C_ADDRESS
, (_customer.C_ADDRESS));

319 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_NATIONKEY
);

320 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_PHONE
, (_customer.C_PHONE));

321 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_ACCTBAL
);

322 
_¥cu°
->
	`gë_vÆue
(7, 
_cu°omî
.
C_COMMENT
, (_customer.C_COMMENT));

327 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

328 
	`mem˝y
(
de°
->
C_NAME
, 
_cu°omî
.C_NAME, (dest->C_NAME));

329 
	`mem˝y
(
de°
->
C_ADDRESS
, 
_cu°omî
.C_ADDRESS, (dest->C_ADDRESS));

330 
de°
->
C_NATIONKEY
 = 
_cu°omî
.C_NATIONKEY;

331 
	`mem˝y
(
de°
->
C_PHONE
, 
_cu°omî
.C_PHONE, (dest->C_PHONE));

332 
de°
->
C_ACCTBAL
 = 
_cu°omî
.C_ACCTBAL;

333 
	`mem˝y
(
de°
->
C_COMMENT
, 
_cu°omî
.C_COMMENT, (dest->C_COMMENT));

334 
	}
}

336 
q10_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

337  
√w
 
	`q10_cu°omî_tsˇn_fûãr_t
(*
this
);

338 
	}
}

340 
c_°r
 
	$to_°rög
() const {

341  
	`c_°r
("q10_customer_tscan_filter_t");

342 
	}
}

345 ˛as†
	cq10_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


347 
¥iv©e
:

348 
Sh‹eTPCHEnv
* 
_çchdb
;

349 
èbÀ_row_t
* 
	m_¥«ti⁄
;

350 
ªp_row_t
 
	m_º
;

353 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

355 
	mpublic
:

356 
	$q10_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q10_öput_t
 &
ö
)

357 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

359 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

360 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

361 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

362 
_¥«ti⁄
->
_ªp
 = &
_º
;

365 
vútuÆ
 ~
	$q10_«ti⁄_tsˇn_fûãr_t
()

367 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

368 
	}
}

370 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

373 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

374 
	`as£π
(
Ál£
);

377  
åue
;

378 
	}
}

381 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

383 
q10_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

384 
de°
 = 
Æig√d_ˇ°
<
q10_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

386 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

387 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, (_nation.N_NAME));

392 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

393 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

394 
	}
}

396 
q10_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

397  
√w
 
	`q10_«ti⁄_tsˇn_fûãr_t
(*
this
);

398 
	}
}

400 
c_°r
 
	$to_°rög
() const {

401  
	`c_°r
("q10_nation_tscan_filter_t()");

402 
	}
}

406 
	gq10_l_joö_o_t
 : 
public
 
tu∂e_joö_t
 {

408 
q10_l_joö_o_t
()

409 : 
tu∂e_joö_t
((
q10_¥oje˘ed_löeôem_tu∂e
),

410 
off£tof
(
q10_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
),

411 (
q10_¥oje˘ed_‹dîs_tu∂e
),

412 
off£tof
(
q10_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

414 (
q10_l_joö_o_tu∂e
))

418 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

419 
q10_l_joö_o_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q10_l_joö_o_tu∂e>(
d
.
d©a
);

420 
q10_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

421 
q10_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dî
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_‹dîs_tu∂e>(
r
.
d©a
);

423 
	gde°
->
	gO_CUSTKEY
 = 
‹dî
->
O_CUSTKEY
;

424 
	gde°
->
	gREVENUE
 = 
löe
->
REVENUE
;

429 
vútuÆ
 
q10_l_joö_o_t
* 
˛⁄e
() const {

430  
√w
 
q10_l_joö_o_t
(*
this
);

433 
vútuÆ
 
c_°r
 
to_°rög
() const {

434  
c_°r
("join LINEITEM, ORDERS; select O_CUSTKEY, REVENUE");

438 
	gq10_c_joö_l_o_t
 : 
public
 
tu∂e_joö_t
 {

440 
q10_c_joö_l_o_t
()

441 : 
tu∂e_joö_t
((
q10_¥oje˘ed_cu°omî_tu∂e
),

442 
off£tof
(
q10_¥oje˘ed_cu°omî_tu∂e
, 
C_CUSTKEY
),

443 (
q10_l_joö_o_tu∂e
),

444 
off£tof
(
q10_l_joö_o_tu∂e
, 
O_CUSTKEY
),

446 (
q10_c_joö_l_o_tu∂e
))

450 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

451 
q10_c_joö_l_o_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q10_c_joö_l_o_tu∂e>(
d
.
d©a
);

452 
q10_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_cu°omî_tu∂e>(
l
.
d©a
);

453 
q10_l_joö_o_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q10_l_joö_o_tu∂e>(
r
.
d©a
);

455 
	gde°
->
	gC_ACCTBAL
 = 
cu°
->
C_ACCTBAL
;

456 
mem˝y
(
de°
->
C_ADDRESS
, 
cu°
->C_ADDRESS, (dest->C_ADDRESS));

457 
mem˝y
(
de°
->
C_COMMENT
, 
cu°
->C_COMMENT, (dest->C_COMMENT));

458 
	gde°
->
	gC_CUSTKEY
 = 
cu°
->
C_CUSTKEY
;

459 
mem˝y
(
de°
->
C_NAME
, 
cu°
->C_NAME, (dest->C_NAME));

460 
	gde°
->
	gC_NATIONKEY
 = 
cu°
->
C_NATIONKEY
;

461 
mem˝y
(
de°
->
C_PHONE
, 
cu°
->C_PHONE, (dest->C_PHONE));

462 
	gde°
->
	gREVENUE
 = 
right
->
REVENUE
;

468 
vútuÆ
 
q10_c_joö_l_o_t
* 
˛⁄e
() const {

469  
√w
 
q10_c_joö_l_o_t
(*
this
);

472 
vútuÆ
 
c_°r
 
to_°rög
() const {

473  
c_°r
("join CUSTOMER, LINEITEM_ORDERS; select C_ACCTBAL, C_ADDRESS, C_COMMENT, C_CUSTKEY, C_NAME, C_NATIONKEY, C_PHONE, REVENUE");

477 
	gq10_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

479 
q10_föÆ_joö_t
()

480 : 
tu∂e_joö_t
((
q10_¥oje˘ed_«ti⁄_tu∂e
),

481 
off£tof
(
q10_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

482 (
q10_c_joö_l_o_tu∂e
),

483 
off£tof
(
q10_c_joö_l_o_tu∂e
, 
C_NATIONKEY
),

485 (
q10_föÆ_tu∂e
))

489 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

490 
q10_föÆ_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q10_föÆ_tu∂e>(
d
.
d©a
);

491 
q10_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q10_¥oje˘ed_«ti⁄_tu∂e>(
l
.
d©a
);

492 
q10_c_joö_l_o_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q10_c_joö_l_o_tu∂e>(
r
.
d©a
);

494 
	gde°
->
	gC_ACCTBAL
 = 
right
->
C_ACCTBAL
;

495 
mem˝y
(
de°
->
C_ADDRESS
, 
right
->C_ADDRESS, (dest->C_ADDRESS));

496 
mem˝y
(
de°
->
C_COMMENT
, 
right
->C_COMMENT, (dest->C_COMMENT));

497 
	gde°
->
	gC_CUSTKEY
 = 
right
->
C_CUSTKEY
;

498 
mem˝y
(
de°
->
C_NAME
, 
right
->C_NAME, (dest->C_NAME));

499 
mem˝y
(
de°
->
C_PHONE
, 
right
->C_PHONE, (dest->C_PHONE));

500 
mem˝y
(
de°
->
N_NAME
, 
«ti⁄
->N_NAME, (dest->N_NAME));

501 
	gde°
->
	gREVENUE
 = 
right
->
REVENUE
;

507 
vútuÆ
 
q10_föÆ_joö_t
* 
˛⁄e
() const {

508  
√w
 
q10_föÆ_joö_t
(*
this
);

511 
vútuÆ
 
c_°r
 
to_°rög
() const {

512  
c_°r
("join NATION, CUSTOMER_LINEITEM_ORDERS; select C_ACCTBAL, C_ADDRESS, C_COMMENT, C_CUSTKEY, C_NAME, C_PHONE, N_NAME, REVENUE");

516 
	gq10_t›20_fûãr_t
 : 
public
 
tu∂e_fûãr_t


518 
_cou¡
;

520 
q10_t›20_fûãr_t
()

521 : 
tu∂e_fûãr_t
((
q10_föÆ_tu∂e
)), 
_cou¡
(0)

525 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

526  ++
	g_cou¡
 <= 20;

529 
vútuÆ
 
q10_t›20_fûãr_t
* 
˛⁄e
() const {

530  
√w
 
q10_t›20_fûãr_t
(*
this
);

533 
vútuÆ
 
c_°r
 
to_°rög
() const {

534  
c_°r
("q10_top20_filter_t");

539 
	gq10_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

541 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

543 
q10_aggªg©e_t
()

544 : 
tu∂e_aggªg©e_t
((
q10_föÆ_tu∂e
)), 
_exåa˘‹
(())

548 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

549  &
	g_exåa˘‹
;

552 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

553 
q10_föÆ_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q10_föÆ_tu∂e>(
agg_d©a
);

554 
q10_föÆ_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q10_föÆ_tu∂e>(
t
.
d©a
);

556 
	gagg
->
	gC_ACCTBAL
 = 
ö
->
C_ACCTBAL
;

557 
mem˝y
(
agg
->
C_ADDRESS
, 
ö
->C_ADDRESS, (agg->C_ADDRESS));

558 
mem˝y
(
agg
->
C_COMMENT
, 
ö
->C_COMMENT, (agg->C_COMMENT));

559 
	gagg
->
	gC_CUSTKEY
 = 
ö
->
C_CUSTKEY
;

560 
mem˝y
(
agg
->
C_NAME
, 
ö
->C_NAME, (agg->C_NAME));

561 
mem˝y
(
agg
->
C_PHONE
, 
ö
->C_PHONE, (agg->C_PHONE));

562 
mem˝y
(
agg
->
N_NAME
, 
ö
->N_NAME, (agg->N_NAME));

563 
	gagg
->
	gREVENUE
 +
ö
->
REVENUE
;

565 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

566 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

568 
vútuÆ
 
q10_aggªg©e_t
* 
˛⁄e
() const {

569  
√w
 
q10_aggªg©e_t
(*
this
);

571 
vútuÆ
 
c_°r
 
to_°rög
() const {

576 
	gq10_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

578 
q10_s‹t_key_exåa˘‹_t
()

579 : 
key_exåa˘‹_t
((
decimÆ
), 
off£tof
(
q10_föÆ_tu∂e
, 
REVENUE
))

583 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

584  -(*
	gÆig√d_ˇ°
<
	gdecimÆ
>(
	gkey
)).
to_öt
();

587 
vútuÆ
 
q10_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

588  
√w
 
q10_s‹t_key_exåa˘‹_t
(*
this
);

592 
	gq10_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

594 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

595 
decimÆ
 
	gªv1
 = *
Æig√d_ˇ°
<decimÆ>(
key1
);

596 
decimÆ
 
	gªv2
 = *
Æig√d_ˇ°
<decimÆ>(
key2
);

597  
	gªv1
 > 
	gªv2
 ? -1 : (
ªv1
 < 
ªv2
 ? 1 : 0);

600 
vútuÆ
 
q10_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

601  
√w
 
q10_s‹t_key_com∑ª_t
(*
this
);

607 ˛as†
	cçch_q10_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

609 
public
:

611 
vútuÆ
 
	$begö
() {

612 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q10 %s %s %s %s %s %s %s %s\n",

616 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

617 
q10_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q10_föÆ_tu∂e>(
ouçut
.
d©a
);

619 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q10 %d %†%.2‡%.2‡%†%†%†%s\n", 
agg
->
C_CUSTKEY
,ágg->
C_NAME
,ágg->
REVENUE
.
	`to_doubÀ
(),ágg->
C_ACCTBAL
.to_double(),

620 
agg
->
N_NAME
,ágg->
C_ADDRESS
,ágg->
C_PHONE
,ágg->
C_COMMENT
);

621 
	}
}

631 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q10
(c⁄° 
x˘_id
,

632 
q10_öput_t
& 
ö
)

634 
	`TRACE
–
TRACE_ALWAYS
, "********** q10 *********\n");

636 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

637 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

641 
tu∂e_fifo
* 
q10_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_¥oje˘ed_‹dîs_tu∂e
));

642 
∑ckë_t
* 
q10_‹dîs_tsˇn_∑ckë
 =

643 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

644 
q10_‹dîs_buf„r
,

645 
√w
 
	`q10_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

646 
this
->
	`db
(),

647 
_p‹dîs_desc
.
	`gë
(),

648 
px˘
);

651 
tu∂e_fifo
* 
q10_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_¥oje˘ed_löeôem_tu∂e
));

652 
∑ckë_t
* 
q10_löeôem_tsˇn_∑ckë
 =

653 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

654 
q10_löeôem_buf„r
,

655 
√w
 
	`q10_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

656 
this
->
	`db
(),

657 
_∂öeôem_desc
.
	`gë
(),

658 
px˘
);

661 
tu∂e_fifo
* 
q10_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_¥oje˘ed_cu°omî_tu∂e
));

662 
∑ckë_t
* 
q10_cu°omî_tsˇn_∑ckë
 =

663 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

664 
q10_cu°omî_buf„r
,

665 
√w
 
	`q10_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

666 
this
->
	`db
(),

667 
_pcu°omî_desc
.
	`gë
(),

668 
px˘
);

671 
tu∂e_fifo
* 
q10_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_¥oje˘ed_«ti⁄_tu∂e
));

672 
∑ckë_t
* 
q10_«ti⁄_tsˇn_∑ckë
 =

673 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

674 
q10_«ti⁄_buf„r
,

675 
√w
 
	`q10_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

676 
this
->
	`db
(),

677 
_≤©i⁄_desc
.
	`gë
(),

678 
px˘
);

682 
tu∂e_fifo
* 
q10_l_joö_o_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_l_joö_o_tu∂e
));

683 
∑ckë_t
* 
q10_l_joö_o_∑ckë
 =

684 
√w
 
	`hash_joö_∑ckë_t
("lineitem - orders HJOIN",

685 
q10_l_joö_o_buf„r
,

686 
√w
 
	`åivül_fûãr_t
((
q10_l_joö_o_tu∂e
)),

687 
q10_löeôem_tsˇn_∑ckë
,

688 
q10_‹dîs_tsˇn_∑ckë
,

689 
√w
 
	`q10_l_joö_o_t
());

692 
tu∂e_fifo
* 
q10_c_joö_l_o_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_c_joö_l_o_tu∂e
));

693 
∑ckë_t
* 
q10_c_joö_l_o_∑ckë
 =

694 
√w
 
	`hash_joö_∑ckë_t
("customer -Üineitem_orders HJOIN",

695 
q10_c_joö_l_o_buf„r
,

696 
√w
 
	`åivül_fûãr_t
((
q10_c_joö_l_o_tu∂e
)),

697 
q10_cu°omî_tsˇn_∑ckë
,

698 
q10_l_joö_o_∑ckë
,

699 
√w
 
	`q10_c_joö_l_o_t
());

702 
tu∂e_fifo
* 
q10_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_föÆ_tu∂e
));

703 
∑ckë_t
* 
q10_Æl_joös_∑ckë
 =

704 
√w
 
	`hash_joö_∑ckë_t
("nation - customer_lineitem_orders HJOIN",

705 
q10_Æl_joös_buf„r
,

706 
√w
 
	`åivül_fûãr_t
((
q10_föÆ_tu∂e
)),

707 
q10_«ti⁄_tsˇn_∑ckë
,

708 
q10_c_joö_l_o_∑ckë
,

709 
√w
 
	`q10_föÆ_joö_t
());

712 
tu∂e_fifo
* 
q10_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_föÆ_tu∂e
));

713 
∑ckë_t
* 
q10_agg_∑ckë
 =

714 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGGREGATE",

715 
q10_agg_buf„r
,

716 
√w
 
	`åivül_fûãr_t
((
q10_föÆ_tu∂e
)),

717 
q10_Æl_joös_∑ckë
,

718 
√w
 
	`q10_aggªg©e_t
(),

719 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q10_föÆ_tu∂e
, 
C_CUSTKEY
)),

720 
√w
 
	`öt_key_com∑ª_t
());

723 
tu∂e_fifo
* 
q10_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q10_föÆ_tu∂e
));

724 
∑ckë_t
* 
q10_s‹t_∑ckë
 =

725 
√w
 
	`s‹t_∑ckë_t
("SORT",

726 
q10_s‹t_buf„r
,

727 
√w
 
	`q10_t›20_fûãr_t
(),

728 
√w
 
	`q10_s‹t_key_exåa˘‹_t
(),

729 
√w
 
	`q10_s‹t_key_com∑ª_t
(),

730 
q10_agg_∑ckë
);

733 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

734 
q10_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

735 
q10_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

736 
q10_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

737 
q10_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

738 
q10_l_joö_o_∑ckë
->
	`assign_quîy_°©e
(
qs
);

739 
q10_c_joö_l_o_∑ckë
->
	`assign_quîy_°©e
(
qs
);

740 
q10_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

741 
q10_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

742 
q10_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

746 
çch_q10_¥o˚ss_tu∂e_t
 
±
;

748 
	`¥o˚ss_quîy
(
q10_s‹t_∑ckë
, 
±
);

750 
dp
->
	`quîy_°©e_de°roy
(
qs
);

753  (
RCOK
);

754 
	}
}

756 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q11.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

81 
	sq11_¥oje˘ed_suµlõr_tu∂e
 {

82 
	mS_SUPPKEY
;

83 
	mS_NATIONKEY
;

86 
	sq11_¥oje˘ed_«ti⁄_tu∂e
 {

87 
	mN_NATIONKEY
;

90 
	sq11_¥oje˘ed_∑πsuµ_tu∂e
 {

91 
	mPS_PARTKEY
;

92 
	mPS_SUPPKEY
;

93 
decimÆ
 
	mVALUE
;

96 
	sq11_s_joö_n_tu∂e
 {

97 
	mS_SUPPKEY
;

100 
	sq11_ps_joö_s_n_tu∂e
 {

101 
	mPSEUDOKEY
;

102 
	mPS_PARTKEY
;

103 
decimÆ
 
	mVALUE
;

106 
	sq11_Æl_joös_tu∂e
 {

107 
	mPS_PARTKEY
;

108 
decimÆ
 
	mVALUE
;

109 
decimÆ
 
	mTHRESHOLD
;

112 
	sq11_föÆ_tu∂e
 {

113 
	mPS_PARTKEY
;

114 
decimÆ
 
	mVALUE
;

118 ˛as†
	cq11_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


120 
¥iv©e
:

121 
Sh‹eTPCHEnv
* 
_çchdb
;

122 
èbÀ_row_t
* 
	m_¥suµlõr
;

123 
ªp_row_t
 
	m_º
;

126 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

128 
	mpublic
:

129 
	$q11_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q11_öput_t
 &
ö
)

130 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

132 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

133 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

134 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

135 
_¥suµlõr
->
_ªp
 = &
_º
;

138 
vútuÆ
 ~
	$q11_suµlõr_tsˇn_fûãr_t
()

140 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

141 
	}
}

143 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

146 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

147 
	`as£π
(
Ál£
);

150  
åue
;

151 
	}
}

154 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

156 
q11_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q11_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

159 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

160 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

165 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

166 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

168 
	}
}

170 
q11_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

171  
√w
 
	`q11_suµlõr_tsˇn_fûãr_t
(*
this
);

172 
	}
}

174 
c_°r
 
	$to_°rög
() const {

175  
	`c_°r
("q11_supplier_tscan_filter_t");

176 
	}
}

179 ˛as†
	cq11_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


181 
¥iv©e
:

182 
Sh‹eTPCHEnv
* 
_çchdb
;

183 
èbÀ_row_t
* 
	m_¥«ti⁄
;

184 
ªp_row_t
 
	m_º
;

187 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

189 
	m_«me
[
STRSIZE
(25)];

191 
	mpublic
:

192 
	$q11_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q11_öput_t
 &
ö
)

193 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

195 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

196 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

197 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

198 
_¥«ti⁄
->
_ªp
 = &
_º
;

200 
	`«ti⁄_to_°r
((&
ö
)->
n_«me
, 
_«me
);

201 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nNATION:N_NAME = %s\n", 
_«me
);

204 
vútuÆ
 ~
	$q11_«ti⁄_tsˇn_fûãr_t
()

206 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

207 
	}
}

209 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

212 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

213 
	`as£π
(
Ál£
);

216 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, (_nation.N_NAME));

218  (
	`°rcmp
(
_«ti⁄
.
N_NAME
, 
_«me
) == 0);

219 
	}
}

222 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

224 
q11_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

225 
de°
 = 
Æig√d_ˇ°
<
q11_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

227 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

232 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

233 
	}
}

235 
q11_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

236  
√w
 
	`q11_«ti⁄_tsˇn_fûãr_t
(*
this
);

237 
	}
}

239 
c_°r
 
	$to_°rög
() const {

240  
	`c_°r
("q11_«ti⁄_tsˇn_fûãr_t(%s)", 
_«me
);

241 
	}
}

244 ˛as†
	cq11_∑πsuµ_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


246 
¥iv©e
:

247 
Sh‹eTPCHEnv
* 
_çchdb
;

248 
èbÀ_row_t
* 
	m_¥∑πsuµ
;

249 
ªp_row_t
 
	m_º
;

252 
çch_∑πsuµ_tu∂e
 
	m_∑πsuµ
;

254 
	mpublic
:

255 
	$q11_∑πsuµ_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q11_öput_t
 &
ö
)

256 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

258 
_¥∑πsuµ
 = 
_çchdb
->
	`∑πsuµ_m™
()->
	`gë_tu∂e
();

259 
_º
.
	`£t_ts
(
_çchdb
->
	`∑πsuµ_m™
()->
	`ts
(),

260 
_çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
());

261 
_¥∑πsuµ
->
_ªp
 = &
_º
;

264 
vútuÆ
 ~
	$q11_∑πsuµ_tsˇn_fûãr_t
()

266 
_çchdb
->
	`∑πsuµ_m™
()->
	`give_tu∂e
(
_¥∑πsuµ
);

267 
	}
}

269 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

272 i‡(!
_çchdb
->
	`∑πsuµ_m™
()->
	`lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

273 
	`as£π
(
Ál£
);

276  
åue
;

277 
	}
}

280 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

282 
q11_¥oje˘ed_∑πsuµ_tu∂e
 *
de°
;

283 
de°
 = 
Æig√d_ˇ°
<
q11_¥oje˘ed_∑πsuµ_tu∂e
>(
d
.
d©a
);

285 
_¥∑πsuµ
->
	`gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

286 
_¥∑πsuµ
->
	`gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

287 
_¥∑πsuµ
->
	`gë_vÆue
(2, 
_∑πsuµ
.
PS_AVAILQTY
);

288 
_¥∑πsuµ
->
	`gë_vÆue
(3, 
_∑πsuµ
.
PS_SUPPLYCOST
);

295 
de°
->
PS_SUPPKEY
 = 
_∑πsuµ
.PS_SUPPKEY;

296 
de°
->
PS_PARTKEY
 = 
_∑πsuµ
.PS_PARTKEY;

297 
de°
->
VALUE
 = 
_∑πsuµ
.
PS_SUPPLYCOST
 / 100.0 * _∑πsuµ.
PS_AVAILQTY
;

299 
	}
}

301 
q11_∑πsuµ_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

302  
√w
 
	`q11_∑πsuµ_tsˇn_fûãr_t
(*
this
);

303 
	}
}

305 
c_°r
 
	$to_°rög
() const {

306  
	`c_°r
("q11_partsupp_tscan_filter_t()");

307 
	}
}

311 
	gq11_s_joö_n_t
 : 
public
 
tu∂e_joö_t
 {

313 
q11_s_joö_n_t
()

314 : 
tu∂e_joö_t
((
q11_¥oje˘ed_suµlõr_tu∂e
),

315 
off£tof
(
q11_¥oje˘ed_suµlõr_tu∂e
, 
S_NATIONKEY
),

316 (
q11_¥oje˘ed_«ti⁄_tu∂e
),

317 
off£tof
(
q11_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

319 (
q11_s_joö_n_tu∂e
))

323 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

324 
q11_s_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q11_s_joö_n_tu∂e>(
d
.
d©a
);

325 
q11_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q11_¥oje˘ed_suµlõr_tu∂e>(
l
.
d©a
);

326 
q11_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q11_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

328 
	gde°
->
	gS_SUPPKEY
 = 
suµ
->
S_SUPPKEY
;

333 
vútuÆ
 
q11_s_joö_n_t
* 
˛⁄e
() const {

334  
√w
 
q11_s_joö_n_t
(*
this
);

337 
vútuÆ
 
c_°r
 
to_°rög
() const {

338  
c_°r
("join SUPPLIER, NATION; select S_SUPPKEY");

342 
	gq11_ps_joö_s_n_t
 : 
public
 
tu∂e_joö_t
 {

344 
q11_ps_joö_s_n_t
()

345 : 
tu∂e_joö_t
((
q11_¥oje˘ed_∑πsuµ_tu∂e
),

346 
off£tof
(
q11_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_SUPPKEY
),

347 (
q11_s_joö_n_tu∂e
),

348 
off£tof
(
q11_s_joö_n_tu∂e
, 
S_SUPPKEY
),

350 (
q11_ps_joö_s_n_tu∂e
))

354 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

355 
q11_ps_joö_s_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q11_ps_joö_s_n_tu∂e>(
d
.
d©a
);

356 
q11_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q11_¥oje˘ed_∑πsuµ_tu∂e>(
l
.
d©a
);

357 
q11_s_joö_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q11_s_joö_n_tu∂e>(
r
.
d©a
);

359 
	gde°
->
	gPS_PARTKEY
 = 
∑πsuµ
->
PS_PARTKEY
;

360 
	gde°
->
	gVALUE
 = 
∑πsuµ
->
VALUE
;

361 
	gde°
->
	gPSEUDOKEY
 = 0;

366 
vútuÆ
 
q11_ps_joö_s_n_t
* 
˛⁄e
() const {

367  
√w
 
q11_ps_joö_s_n_t
(*
this
);

370 
vútuÆ
 
c_°r
 
to_°rög
() const {

371  
c_°r
("join PARTSUPP, SUPPLIER_NATION; select PS_PARTKEY, VALUE");

375 
	gq11_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

377 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

378 
boﬁ
 
	g_subQuîy
;

380 
q11_aggªg©e_t
(
boﬁ
 
subQuîy
)

381 : 
tu∂e_aggªg©e_t
((
q11_ps_joö_s_n_tu∂e
)), 
_subQuîy
(
subQuîy
), 
_exåa˘‹
((subQuery ? 0 : ()), 0)

385 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

386  &
	g_exåa˘‹
;

389 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

390 
q11_ps_joö_s_n_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q11_ps_joö_s_n_tu∂e>(
agg_d©a
);

391 
q11_ps_joö_s_n_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q11_ps_joö_s_n_tu∂e>(
t
.
d©a
);

393 
	gagg
->
	gPS_PARTKEY
 = 
ö
->
PS_PARTKEY
;

394 
	gagg
->
	gVALUE
 +
ö
->
VALUE
;

395 
	gagg
->
	gPSEUDOKEY
 = 
ö
->
PSEUDOKEY
;

397 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

398 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

400 
vútuÆ
 
q11_aggªg©e_t
* 
˛⁄e
() const {

401  
√w
 
q11_aggªg©e_t
(*
this
);

403 
vútuÆ
 
c_°r
 
to_°rög
() const {

408 
	gq11_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

410 
q11_föÆ_joö_t
()

411 : 
tu∂e_joö_t
((
q11_ps_joö_s_n_tu∂e
),

412 
off£tof
(
q11_ps_joö_s_n_tu∂e
, 
PSEUDOKEY
),

413 (
q11_ps_joö_s_n_tu∂e
),

414 
off£tof
(
q11_ps_joö_s_n_tu∂e
, 
PSEUDOKEY
),

416 (
q11_Æl_joös_tu∂e
))

420 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

421 
q11_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q11_Æl_joös_tu∂e>(
d
.
d©a
);

422 
q11_ps_joö_s_n_tu∂e
 *
	gsub
 = 
Æig√d_ˇ°
<q11_ps_joö_s_n_tu∂e>(
l
.
d©a
);

423 
q11_ps_joö_s_n_tu∂e
 *
	gmaö
 = 
Æig√d_ˇ°
<q11_ps_joö_s_n_tu∂e>(
r
.
d©a
);

425 
	gde°
->
	gPS_PARTKEY
 = 
maö
->
PS_PARTKEY
;

426 
	gde°
->
	gVALUE
 = 
maö
->
VALUE
;

427 
	gde°
->
	gTHRESHOLD
 = 
sub
->
VALUE
;

432 
vútuÆ
 
q11_föÆ_joö_t
* 
˛⁄e
() const {

433  
√w
 
q11_föÆ_joö_t
(*
this
);

436 
vútuÆ
 
c_°r
 
to_°rög
() const {

437  
c_°r
("join PARTSUPP_SUPPLIER_NATION sub, PARTSUPP_SUPPLIER_NATION main; select main.PS_PARTKEY, main.VALUE, sub.VALUEás THRESHOLD");

441 
	gq11_thªshﬁd_fûãr_t
 : 
public
 
tu∂e_fûãr_t


444 
_‰a˘i⁄
;

446 
q11_thªshﬁd_fûãr_t
(
‰a˘i⁄
)

447 : 
tu∂e_fûãr_t
((
q11_Æl_joös_tu∂e
)), 
_‰a˘i⁄
(
‰a˘i⁄
)

449 
TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã: FRACTION = %.6f\n", 
_‰a˘i⁄
);

452 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

453 
q11_Æl_joös_tu∂e
 *
	gtu∂e
 = 
Æig√d_ˇ°
<q11_Æl_joös_tu∂e>(
öput
.
d©a
);

454  (
	gtu∂e
->
	gVALUE
.
to_doubÀ
(Ë>Åu∂e->
	gTHRESHOLD
.to_doubÀ(Ë* 
	g_‰a˘i⁄
);

457 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

459 
q11_föÆ_tu∂e
 *
	gout
 = 
Æig√d_ˇ°
<q11_föÆ_tu∂e>(
d
.
d©a
);

460 
q11_Æl_joös_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q11_Æl_joös_tu∂e>(
s
.
d©a
);

462 
	gout
->
	gPS_PARTKEY
 = 
ö
->
PS_PARTKEY
;

463 
	gout
->
	gVALUE
 = 
ö
->
VALUE
;

466 
vútuÆ
 
q11_thªshﬁd_fûãr_t
* 
˛⁄e
() const {

467  
√w
 
q11_thªshﬁd_fûãr_t
(*
this
);

470 
vútuÆ
 
c_°r
 
to_°rög
() const {

471  
c_°r
("q11_threshold_filter_t");

475 
	gq11_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

477 
q11_s‹t_key_exåa˘‹_t
()

478 : 
key_exåa˘‹_t
((
decimÆ
), 
off£tof
(
q11_föÆ_tu∂e
, 
VALUE
))

482 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

483  -(*
	gÆig√d_ˇ°
<
	gdecimÆ
>(
	gkey
)).
to_öt
();

486 
vútuÆ
 
q11_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

487  
√w
 
q11_s‹t_key_exåa˘‹_t
(*
this
);

491 
	gq11_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

493 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

494 
decimÆ
 
	gªv1
 = *
Æig√d_ˇ°
<decimÆ>(
key1
);

495 
decimÆ
 
	gªv2
 = *
Æig√d_ˇ°
<decimÆ>(
key2
);

496  
	gªv1
 > 
	gªv2
 ? -1 : (
ªv1
 < 
ªv2
 ? 1 : 0);

499 
vútuÆ
 
q11_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

500  
√w
 
q11_s‹t_key_com∑ª_t
(*
this
);

505 ˛as†
	cçch_q11_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

507 
public
:

509 
vútuÆ
 
	$begö
() {

510 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q11 %s %s\n",

514 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

515 
q11_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q11_föÆ_tu∂e>(
ouçut
.
d©a
);

517 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q11 %d %.2f\n", 
agg
->
PS_PARTKEY
,ágg->
VALUE
.
	`to_doubÀ
());

518 
	}
}

529 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q11
(c⁄° 
x˘_id
,

530 
q11_öput_t
& 
ö
)

532 
	`TRACE
–
TRACE_ALWAYS
, "********** q11 *********\n");

534 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

535 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

540 
tu∂e_fifo
* 
q11_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_«ti⁄_tu∂e
));

541 
∑ckë_t
* 
q11_«ti⁄_tsˇn_∑ckë
 =

542 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

543 
q11_«ti⁄_buf„r
,

544 
√w
 
	`q11_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

545 
this
->
	`db
(),

546 
_≤©i⁄_desc
.
	`gë
(),

547 
px˘
);

550 
tu∂e_fifo
* 
q11_«ti⁄_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_«ti⁄_tu∂e
));

551 
∑ckë_t
* 
q11_«ti⁄_sub_tsˇn_∑ckë
 =

552 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN subquery",

553 
q11_«ti⁄_sub_buf„r
,

554 
√w
 
	`q11_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

555 
this
->
	`db
(),

556 
_≤©i⁄_desc
.
	`gë
(),

557 
px˘
);

560 
tu∂e_fifo
* 
q11_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_suµlõr_tu∂e
));

561 
∑ckë_t
* 
q11_suµlõr_tsˇn_∑ckë
 =

562 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

563 
q11_suµlõr_buf„r
,

564 
√w
 
	`q11_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

565 
this
->
	`db
(),

566 
_psuµlõr_desc
.
	`gë
(),

567 
px˘
);

570 
tu∂e_fifo
* 
q11_suµlõr_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_suµlõr_tu∂e
));

571 
∑ckë_t
* 
q11_suµlõr_sub_tsˇn_∑ckë
 =

572 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN subquery",

573 
q11_suµlõr_sub_buf„r
,

574 
√w
 
	`q11_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

575 
this
->
	`db
(),

576 
_psuµlõr_desc
.
	`gë
(),

577 
px˘
);

580 
tu∂e_fifo
* 
q11_∑πsuµ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_∑πsuµ_tu∂e
));

581 
∑ckë_t
* 
q11_∑πsuµ_tsˇn_∑ckë
 =

582 
√w
 
	`tsˇn_∑ckë_t
("partsupp TSCAN",

583 
q11_∑πsuµ_buf„r
,

584 
√w
 
	`q11_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

585 
this
->
	`db
(),

586 
_µ¨tsuµ_desc
.
	`gë
(),

587 
px˘
);

590 
tu∂e_fifo
* 
q11_∑πsuµ_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_¥oje˘ed_∑πsuµ_tu∂e
));

591 
∑ckë_t
* 
q11_∑πsuµ_sub_tsˇn_∑ckë
 =

592 
√w
 
	`tsˇn_∑ckë_t
("partsupp TSCAN subquery",

593 
q11_∑πsuµ_sub_buf„r
,

594 
√w
 
	`q11_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

595 
this
->
	`db
(),

596 
_µ¨tsuµ_desc
.
	`gë
(),

597 
px˘
);

602 
tu∂e_fifo
* 
q11_s_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_s_joö_n_tu∂e
));

603 
∑ckë_t
* 
q11_s_joö_n_∑ckë
 =

604 
√w
 
	`hash_joö_∑ckë_t
("supplier -Çation HJOIN",

605 
q11_s_joö_n_buf„r
,

606 
√w
 
	`åivül_fûãr_t
((
q11_s_joö_n_tu∂e
)),

607 
q11_suµlõr_tsˇn_∑ckë
,

608 
q11_«ti⁄_tsˇn_∑ckë
,

609 
√w
 
	`q11_s_joö_n_t
());

612 
tu∂e_fifo
* 
q11_ps_joö_s_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_ps_joö_s_n_tu∂e
));

613 
∑ckë_t
* 
q11_ps_joö_s_n_∑ckë
 =

614 
√w
 
	`hash_joö_∑ckë_t
("partsupp - supplier_nation HJOIN",

615 
q11_ps_joö_s_n_buf„r
,

616 
√w
 
	`åivül_fûãr_t
((
q11_ps_joö_s_n_tu∂e
)),

617 
q11_∑πsuµ_tsˇn_∑ckë
,

618 
q11_s_joö_n_∑ckë
,

619 
√w
 
	`q11_ps_joö_s_n_t
());

622 
tu∂e_fifo
* 
q11_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_ps_joö_s_n_tu∂e
));

623 
∑ckë_t
* 
q11_agg_∑ckë
 =

624 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGGREGATE: GROUP BY PS_PARTKEY + SUM",

625 
q11_agg_buf„r
,

626 
√w
 
	`åivül_fûãr_t
((
q11_ps_joö_s_n_tu∂e
)),

627 
q11_ps_joö_s_n_∑ckë
,

628 
√w
 
	`q11_aggªg©e_t
(
Ál£
),

629 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q11_ps_joö_s_n_tu∂e
, 
PS_PARTKEY
)),

630 
√w
 
	`öt_key_com∑ª_t
());

636 
tu∂e_fifo
* 
q11_s_joö_n_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_s_joö_n_tu∂e
));

637 
∑ckë_t
* 
q11_s_joö_n_sub_∑ckë
 =

638 
√w
 
	`hash_joö_∑ckë_t
("supplier -Çation HJOIN subquery",

639 
q11_s_joö_n_sub_buf„r
,

640 
√w
 
	`åivül_fûãr_t
((
q11_s_joö_n_tu∂e
)),

641 
q11_suµlõr_sub_tsˇn_∑ckë
,

642 
q11_«ti⁄_sub_tsˇn_∑ckë
,

643 
√w
 
	`q11_s_joö_n_t
());

646 
tu∂e_fifo
* 
q11_ps_joö_s_n_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_ps_joö_s_n_tu∂e
));

647 
∑ckë_t
* 
q11_ps_joö_s_n_sub_∑ckë
 =

648 
√w
 
	`hash_joö_∑ckë_t
("partsupp - supplier_nation HJOIN subquery",

649 
q11_ps_joö_s_n_sub_buf„r
,

650 
√w
 
	`åivül_fûãr_t
((
q11_ps_joö_s_n_tu∂e
)),

651 
q11_∑πsuµ_sub_tsˇn_∑ckë
,

652 
q11_s_joö_n_sub_∑ckë
,

653 
√w
 
	`q11_ps_joö_s_n_t
());

656 
tu∂e_fifo
* 
q11_agg_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_ps_joö_s_n_tu∂e
));

657 
∑ckë_t
* 
q11_agg_sub_∑ckë
 =

658 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGGREGATE: SUM",

659 
q11_agg_sub_buf„r
,

660 
√w
 
	`åivül_fûãr_t
((
q11_ps_joö_s_n_tu∂e
)),

661 
q11_ps_joö_s_n_sub_∑ckë
,

662 
√w
 
	`q11_aggªg©e_t
(
åue
),

663 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

664 
√w
 
	`öt_key_com∑ª_t
());

669 
tu∂e_fifo
* 
q11_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_föÆ_tu∂e
));

670 
∑ckë_t
* 
q11_Æl_joös_∑ckë
 =

671 
√w
 
	`hash_joö_∑ckë_t
("partsupp_supplier_nation sub -Öartsupp_supplier_nation main HJOIN",

672 
q11_Æl_joös_buf„r
,

673 
√w
 
	`q11_thªshﬁd_fûãr_t
((&
ö
)->
‰a˘i⁄
),

674 
q11_agg_sub_∑ckë
,

675 
q11_agg_∑ckë
,

676 
√w
 
	`q11_föÆ_joö_t
());

680 
tu∂e_fifo
* 
q11_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q11_föÆ_tu∂e
));

681 
∑ckë_t
* 
q11_s‹t_∑ckë
 =

682 
√w
 
	`s‹t_∑ckë_t
("SORT BY VALUE desc",

683 
q11_s‹t_buf„r
,

684 
√w
 
	`åivül_fûãr_t
((
q11_föÆ_tu∂e
)),

685 
√w
 
	`q11_s‹t_key_exåa˘‹_t
(),

686 
√w
 
	`q11_s‹t_key_com∑ª_t
(),

687 
q11_Æl_joös_∑ckë
);

690 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

691 
q11_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

692 
q11_«ti⁄_sub_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

693 
q11_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

694 
q11_suµlõr_sub_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

695 
q11_∑πsuµ_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

696 
q11_∑πsuµ_sub_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

697 
q11_s_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

698 
q11_ps_joö_s_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

699 
q11_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

700 
q11_s_joö_n_sub_∑ckë
->
	`assign_quîy_°©e
(
qs
);

701 
q11_ps_joö_s_n_sub_∑ckë
->
	`assign_quîy_°©e
(
qs
);

702 
q11_agg_sub_∑ckë
->
	`assign_quîy_°©e
(
qs
);

703 
q11_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

704 
q11_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

707 
çch_q11_¥o˚ss_tu∂e_t
 
±
;

709 
	`¥o˚ss_quîy
(
q11_s‹t_∑ckë
, 
±
);

711 
dp
->
	`quîy_°©e_de°roy
(
qs
);

714  (
RCOK
);

715 
	}
}

717 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q12.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

75 
	sq12_löeôem_sˇn_tu∂e
 {

76 
	mL_ORDERKEY
;

77 
çch_l_shùmode
 
	mL_SHIPMODE
;

80 
	sq12_‹dîs_sˇn_tu∂e
 {

81 
	mO_ORDERKEY
;

82 
	mO_ORDERPRIORITY
;

85 
	sq12_joö_tu∂e
 {

86 
çch_l_shùmode
 
	mL_SHIPMODE
;

87 
	mO_ORDERPRIORITY
;

90 
	sq12_tu∂e
 {

91 
çch_l_shùmode
 
	mL_SHIPMODE
;

92 
	mHIGH_LINE_COUNT
;

93 
	mLOW_LINE_COUNT
;

96 
	sq12_föÆ_tu∂e
 {

97 
	mL_SHIPMODE
[
STRSIZE
(10)];

98 
	mHIGH_LINE_COUNT
;

99 
	mLOW_LINE_COUNT
;

109 ˛as†
	cq12_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


111 
¥iv©e
:

112 
Sh‹eTPCHEnv
* 
_çchdb
;

113 
èbÀ_row_t
* 
	m_¥löe
;

114 
ªp_row_t
 
	m_º
;

116 
çch_löeôem_tu∂e
 
	m_löeôem
;

117 
time_t
 
	m_commôd©e
;

118 
time_t
 
	m_ª˚ùtd©e
;

119 
time_t
 
	m_shùd©e
;

120 
	m_shùmode
;

128 
q12_öput_t
* 
	mq12_öput
;

129 
time_t
 
	m_œ°_l_ª˚ùtd©e
;

130 
	mpublic
:

132 
	$q12_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q12_öput_t
 &
ö
)

133 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

138 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

139 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

140 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

141 
_¥löe
->
_ªp
 = &
_º
;

145 
q12_öput
=&
ö
;

146 
tm
 
d©e
;

147 
	`gmtime_r
(&(
q12_öput
->
l_ª˚ùtd©e
), &
d©e
);

148 
d©e
.
tm_yór
 ++;

149 
_œ°_l_ª˚ùtd©e
=
	`mktime
(&
d©e
);

151 
shùmode1
[11];

152 
shùmode2
[11];

153 
fshùd©e
[15];

154 
lshùd©e
[15];

156 
	`shùmode_to_°r
(
shùmode1
, (
çch_l_shùmode
)(
q12_öput
->
l_shùmode1
));

157 
	`shùmode_to_°r
(
shùmode2
, (
çch_l_shùmode
)(
q12_öput
->
l_shùmode2
));

158 
	`timë_to_°r
(
fshùd©e
, 
q12_öput
->
l_ª˚ùtd©e
);

159 
	`timë_to_°r
(
lshùd©e
, 
_œ°_l_ª˚ùtd©e
);

161 
	`TRACE
(
TRACE_ALWAYS
, "R™dom Pªdiˇãs:\nL_SHIPMODE i¿(%s, %s); %†<L_RECEIPTDATE < %s\n", 
shùmode1
, 
shùmode2
, 
fshùd©e
, 
lshùd©e
);

164 ~
	$q12_löeôem_tsˇn_fûãr_t
()

167 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

168 
	}
}

172 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

175 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

176 
	`as£π
(
Ál£
);

179 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

180 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

181 
_¥löe
->
	`gë_vÆue
(11, 
_löeôem
.
L_COMMITDATE
, 15);

182 
_commôd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_COMMITDATE
);

183 
_¥löe
->
	`gë_vÆue
(12, 
_löeôem
.
L_RECEIPTDATE
, 15);

184 
_ª˚ùtd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_RECEIPTDATE
);

185 
_¥löe
->
	`gë_vÆue
(14, 
_löeôem
.
L_SHIPMODE
, 15);

186 
_shùmode
=
	`°r_to_shùmode
(
_löeôem
.
L_SHIPMODE
);

191 i‡–(
_shùmode
==
q12_öput
->
l_shùmode1
 || _shùmode==q12_öput->
l_shùmode2
Ë&& 
_commôd©e
<
_ª˚ùtd©e
 && 
_shùd©e
<_commôd©ê&& _ª˚ùtd©ê>q12_öput->
l_ª˚ùtd©e
 && _ª˚ùtd©ê< 
_œ°_l_ª˚ùtd©e
 ) {

193  (
åue
);

197  (
Ál£
);

199 
	}
}

203 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

205 
q12_löeôem_sˇn_tu∂e
 *
de°
;

206 
de°
 = 
Æig√d_ˇ°
<
q12_löeôem_sˇn_tu∂e
>(
d
.
d©a
);

208 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

209 
_¥löe
->
	`gë_vÆue
(14, 
_löeôem
.
L_SHIPMODE
, 10);

215 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

216 
de°
->
L_SHIPMODE
 = 
	`°r_to_shùmode
(
_löeôem
.L_SHIPMODE);

218 
	}
}

220 
q12_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

221  
√w
 
	`q12_löeôem_tsˇn_fûãr_t
(*
this
);

222 
	}
}

224 
c_°r
 
	$to_°rög
() const {

225 
d©e
[15];

226 
	`timë_to_°r
(
d©e
, 
q12_öput
->
l_ª˚ùtd©e
);

227  
	`c_°r
("q12_löeôem_tsˇn_fûãr_t(%s, %d, %d)", 
d©e
, 
q12_öput
->
l_shùmode1
, q12_öput->
l_shùmode2
);

228 
	}
}

233 ˛as†
	cq12_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


235 
¥iv©e
:

236 
Sh‹eTPCHEnv
* 
_çchdb
;

237 
èbÀ_row_t
* 
	m_¥‹dî
;

238 
ªp_row_t
 
	m_º
;

241 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

242 
	mpublic
:

244 
	$q12_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
)

245 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

248 
_¥‹dî
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

249 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

250 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

251 
_¥‹dî
->
_ªp
 = &
_º
;

255 ~
	$q12_‹dîs_tsˇn_fûãr_t
()

258 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dî
);

259 
	}
}

261 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

265 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dî
, 
öput
.
d©a
)) {

266 
	`as£π
(
Ál£
);

269 (
åue
);

270 
	}
}

273 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

275 
q12_‹dîs_sˇn_tu∂e
 *
de°
;

276 
de°
 = 
Æig√d_ˇ°
<
q12_‹dîs_sˇn_tu∂e
>(
d
.
d©a
);

278 
_¥‹dî
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

279 
_¥‹dî
->
	`gë_vÆue
(5, 
_‹dîs
.
O_ORDERPRIORITY
, 15);

281 
numbî
[2];

282 
	`°∫˝y
(
numbî
,
_‹dîs
.
O_ORDERPRIORITY
,1);

283 
numbî
[1] = '\0';

290 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

291 
de°
->
O_ORDERPRIORITY
 = 
	`©oi
(
numbî
);

292 
	}
}

294 
q12_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

295  
√w
 
	`q12_‹dîs_tsˇn_fûãr_t
(*
this
);

296 
	}
}

298 
c_°r
 
	$to_°rög
() const {

299 
c_°r
 
	`ªsu…
("select O_ORDERKEY, O_ORDERPRIORITY from ORDERS");

300  
ªsu…
;

301 
	}
}

306 
	gq12_joö_t
 : 
tu∂e_joö_t
 {

308 
q12_joö_t
()

309 : 
tu∂e_joö_t
((
q12_‹dîs_sˇn_tu∂e
),

310 
off£tof
(
q12_‹dîs_sˇn_tu∂e
,
O_ORDERKEY
),

311 (
q12_löeôem_sˇn_tu∂e
),

312 
off£tof
(
q12_löeôem_sˇn_tu∂e
,
L_ORDERKEY
),

314 (
q12_joö_tu∂e
))

318 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

320 
q12_joö_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q12_joö_tu∂e>(
d
.
d©a
);

321 
q12_‹dîs_sˇn_tu∂e
* 
	gÀ·
 = 
Æig√d_ˇ°
<q12_‹dîs_sˇn_tu∂e>(
l
.
d©a
);

322 
q12_löeôem_sˇn_tu∂e
* 
	gright
 = 
Æig√d_ˇ°
<q12_löeôem_sˇn_tu∂e>(
r
.
d©a
);

324 
	gde°
->
	gL_SHIPMODE
=
right
->
L_SHIPMODE
;

325 
	gde°
->
	gO_ORDERPRIORITY
=
À·
->
O_ORDERPRIORITY
;

330 
vútuÆ
 
q12_joö_t
* 
˛⁄e
() const {

331  
√w
 
q12_joö_t
(*
this
);

334 
vútuÆ
 
c_°r
 
to_°rög
() const {

353 
	gq12_aggªg©e_t
 : 
tu∂e_aggªg©e_t
 {

354 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

356 
q12_aggªg©e_t
()

357 : 
tu∂e_aggªg©e_t
((
q12_tu∂e
)),

358 
_exåa˘‹
((
çch_l_shùmode
),

359 
off£tof
(
q12_joö_tu∂e
, 
L_SHIPMODE
))

363 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

364  &
	g_exåa˘‹
;

366 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

367 
q12_joö_tu∂e
* 
	göp
 = 
Æig√d_ˇ°
<q12_joö_tu∂e>(
t
.
d©a
);

368 
q12_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q12_tu∂e>(
agg_d©a
);

370 i‡(
	göp
->
	gO_ORDERPRIORITY
==1 || 
öp
->
O_ORDERPRIORITY
==2)

371 
agg
->
HIGH_LINE_COUNT
++;

373 
	gagg
->
	gLOW_LINE_COUNT
++;

375 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

376 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

378 
vútuÆ
 
q12_aggªg©e_t
* 
˛⁄e
() const {

379  
√w
 
q12_aggªg©e_t
(*
this
);

381 
vútuÆ
 
c_°r
 
to_°rög
() const {

386 
	gq12_agg_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

388 
q12_agg_fûãr_t
()

389 : 
tu∂e_fûãr_t
((
q12_föÆ_tu∂e
))

393 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

394  
åue
;

397 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

399 
q12_föÆ_tu∂e
 *
	gout
 = 
Æig√d_ˇ°
<q12_föÆ_tu∂e>(
d
.
d©a
);

400 
q12_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q12_tu∂e>(
s
.
d©a
);

402 
shùmode_to_°r
(
out
->
L_SHIPMODE
, (
ö
->L_SHIPMODE));

403 
	gout
->
	gHIGH_LINE_COUNT
 = 
ö
->
HIGH_LINE_COUNT
;

404 
	gout
->
	gLOW_LINE_COUNT
 = 
ö
->
LOW_LINE_COUNT
;

407 
vútuÆ
 
q12_agg_fûãr_t
* 
˛⁄e
() const {

408  
√w
 
q12_agg_fûãr_t
(*
this
);

411 
vútuÆ
 
c_°r
 
to_°rög
() const {

412  
c_°r
("q12_agg_filter_t");

416 
	gq12_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

418 
q12_s‹t_key_exåa˘‹_t
()

419 : 
key_exåa˘‹_t
(
STRSIZE
(10Ë* (), 
off£tof
(
q12_föÆ_tu∂e
, 
L_SHIPMODE
))

423 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

424 *
	gk
;

425 
	gk
 = 
Æig√d_ˇ°
<>(
key
);

427 
	gªsu…
 = (*
k
 << 8) + *(k + ());

429  
	gªsu…
;

432 
vútuÆ
 
q12_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

433  
√w
 
q12_s‹t_key_exåa˘‹_t
(*
this
);

437 
	gq12_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

439 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

440 * 
	gshùmode1
 = 
Æig√d_ˇ°
<>(
key1
);

441 * 
	gshùmode2
 = 
Æig√d_ˇ°
<>(
key2
);

443  
°rcmp
(
shùmode1
, 
shùmode2
);

446 
vútuÆ
 
q12_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

447  
√w
 
q12_s‹t_key_com∑ª_t
(*
this
);

453 ˛as†
	cçch_q12_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

455 
public
:

457 
vútuÆ
 
	$begö
() {

458 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q12 %10s %10s %10s\n",

462 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

463 
q12_föÆ_tu∂e
* 
r
 = 
Æig√d_ˇ°
<q12_föÆ_tu∂e>(
ouçut
.
d©a
);

464 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q12 %10s %10d %10d\n",

465 
r
->
L_SHIPMODE
,

466 
r
->
HIGH_LINE_COUNT
,

467 
r
->
LOW_LINE_COUNT
);

468 
	}
}

480 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q12
(c⁄° 
x˘_id
,

481 
q12_öput_t
& 
ö
)

483 
	`TRACE
–
TRACE_ALWAYS
, "********** Q12 *********\n");

485 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

486 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

490 
tu∂e_fifo
* 
q12_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_löeôem_sˇn_tu∂e
));

491 
∑ckë_t
* 
q12_löeôem_tsˇn_∑ckë
 =

492 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

493 
q12_löeôem_buf„r
,

494 
√w
 
	`q12_löeôem_tsˇn_fûãr_t
(
this
,
ö
),

495 
this
->
	`db
(),

496 
_∂öeôem_desc
.
	`gë
(),

497 
px˘


504 
tu∂e_fifo
* 
q12_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_‹dîs_sˇn_tu∂e
));

505 
∑ckë_t
* 
q12_‹dîs_tsˇn_∑ckë
 =

506 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

507 
q12_‹dîs_buf„r
,

508 
√w
 
	`q12_‹dîs_tsˇn_fûãr_t
(
this
),

509 
this
->
	`db
(),

510 
_p‹dîs_desc
.
	`gë
(),

511 
px˘


516 
tu∂e_fifo
* 
q12_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_joö_tu∂e
));

517 
∑ckë_t
* 
q12_joö_∑ckë
 =

518 
√w
 
	`hash_joö_∑ckë_t
("orders-lineitem HJOIN",

519 
q12_joö_buf„r
,

520 
√w
 
	`åivül_fûãr_t
((
q12_joö_tu∂e
)),

521 
q12_‹dîs_tsˇn_∑ckë
,

522 
q12_löeôem_tsˇn_∑ckë
,

523 
√w
 
	`q12_joö_t
());

528 
tu∂e_fifo
* 
q12_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_föÆ_tu∂e
));

529 
tu∂e_aggªg©e_t
 *
q12_aggªg©e
 = 
√w
 
	`q12_aggªg©e_t
();

530 
∑ckë_t
* 
q12_agg_∑ckë
;

531 
q12_agg_∑ckë
 = 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUM AGG",

532 
q12_agg_buf„r
,

533 
√w
 
	`q12_agg_fûãr_t
(),

534 
q12_joö_∑ckë
,

535 
q12_aggªg©e
,

536 
√w
 
	`deÁu…_key_exåa˘‹_t
((
çch_l_shùmode
), 
	`off£tof
(
q12_joö_tu∂e
, 
L_SHIPMODE
)),

537 
√w
 
	`öt_key_com∑ª_t
());

539 
tu∂e_fifo
* 
q12_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q12_föÆ_tu∂e
));

540 
∑ckë_t
* 
q12_s‹t_∑ckë
 =

541 
√w
 
	`s‹t_∑ckë_t
("SORT BY SHIPMODE",

542 
q12_s‹t_buf„r
,

543 
√w
 
	`åivül_fûãr_t
((
q12_föÆ_tu∂e
)),

544 
√w
 
	`q12_s‹t_key_exåa˘‹_t
(),

545 
√w
 
	`q12_s‹t_key_com∑ª_t
(),

546 
q12_agg_∑ckë
);

551 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

553 
q12_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

554 
q12_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

555 
q12_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

556 
q12_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

557 
q12_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

560 
çch_q12_¥o˚ss_tu∂e_t
 
±
;

563 
	`¥o˚ss_quîy
(
q12_s‹t_∑ckë
, 
±
);

565 
dp
->
	`quîy_°©e_de°roy
(
qs
);

568  (
RCOK
);

569 
	}
}

572 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q13.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

74 
	sq13_cu°omî_sˇn_tu∂e


76 
	mC_CUSTKEY
;

79 
	sq13_‹dîs_sˇn_tu∂e


81 
	mO_CUSTKEY
;

84 
	sq13_key_cou¡_tu∂e


86 
	mKEY
;

87 
	mCOUNT
;

89 
q13_key_cou¡_tu∂e
 
	tq13_cu°_‹dî_cou¡_tu∂e
;

91 
	sq13_joö_tu∂e


93 
	mC_COUNT
;

96 
q13_key_cou¡_tu∂e
 
	tq13_tu∂e
;

107 ˛as†
	cq13_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


109 
¥iv©e
:

110 
Sh‹eTPCHEnv
* 
_çchdb
;

111 
èbÀ_row_t
* 
	m_¥cu°omî
;

112 
ªp_row_t
 
	m_º
;

115 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

116 
	mpublic
:

118 
	$q13_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
)

119 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

122 
_¥cu°omî
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

123 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

124 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

125 
_¥cu°omî
->
_ªp
 = &
_º
;

129 ~
	$q13_cu°omî_tsˇn_fûãr_t
()

132 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°omî
);

133 
	}
}

135 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

139 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°omî
, 
öput
.
d©a
)) {

140 
	`as£π
(
Ál£
);

143 (
åue
);

144 
	}
}

147 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

149 
q13_cu°omî_sˇn_tu∂e
 *
de°
;

150 
de°
 = 
Æig√d_ˇ°
<
q13_cu°omî_sˇn_tu∂e
>(
d
.
d©a
);

152 
_¥cu°omî
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

158 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

160 
	}
}

162 
q13_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

163  
√w
 
	`q13_cu°omî_tsˇn_fûãr_t
(*
this
);

164 
	}
}

166 
c_°r
 
	$to_°rög
() const {

167 
c_°r
 
	`ªsu…
("select C_CUSTKEY from CUSTOMER");

168  
ªsu…
;

169 
	}
}

174 ˛as†
	cq13_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

175 
¥iv©e
:

176 
Sh‹eTPCHEnv
* 
_çchdb
;

177 
èbÀ_row_t
* 
	m_¥‹dî
;

178 
ªp_row_t
 
	m_º
;

181 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

185 
q13_öput_t
* 
	mq13_öput
;

186 
	mpublic
:

189 
	$q13_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q13_öput_t
 &
ö
)

190 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

193 
_¥‹dî
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

194 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

195 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

196 
_¥‹dî
->
_ªp
 = &
_º
;

199 
q13_öput
=&
ö
;

201 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nORDERS.O_COMMENTÇŸÜikê'%%%s%%%s%%'\n", 
q13_öput
->
WORD1
, q13_öput->
WORD2
);

204 ~
	$q13_‹dîs_tsˇn_fûãr_t
()

207 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dî
);

208 
	}
}

211 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

214 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dî
, 
öput
.
d©a
)) {

215 
	`as£π
(
Ál£
);

218 
_¥‹dî
->
	`gë_vÆue
(8, 
_‹dîs
.
O_COMMENT
, 79);

223 * 
fú°
 = 
	`°r°r
(
_‹dîs
.
O_COMMENT
, 
q13_öput
->
WORD1
);

224 if(!
fú°
)

225  
åue
;

227 * 
£c⁄d
 = 
	`°r°r
(
fú°
 + 
	`°æí
(
q13_öput
->
WORD1
), q13_öput->
WORD2
);

228 if(!
£c⁄d
)

229  
åue
;

232  
Ál£
;

233 
	}
}

236 
vútuÆ
 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

238 
q13_‹dîs_sˇn_tu∂e
 *
de°
;

239 
de°
 = 
Æig√d_ˇ°
<
q13_‹dîs_sˇn_tu∂e
>(
d
.
d©a
);

241 
_¥‹dî
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

246 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

247 
	}
}

249 
vútuÆ
 
q13_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

250  
√w
 
	`q13_‹dîs_tsˇn_fûãr_t
(*
this
);

251 
	}
}

252 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

253  
	`c_°r
("select O_CUSTKEY "

255 
q13_öput
->
WORD1
, q13_öput->
WORD2
);

256 
	}
}

261 
	göt_desc_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

262 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

263  -*
Æig√d_ˇ°
<>(
tu∂e_d©a
);

265 
vútuÆ
 
öt_desc_key_exåa˘‹_t
* 
˛⁄e
() const {

266  
√w
 
öt_desc_key_exåa˘‹_t
(*
this
);

270 
	gq13_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

271 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

273 
q13_cou¡_aggªg©e_t
()

274 : 
tu∂e_aggªg©e_t
((
q13_cu°_‹dî_cou¡_tu∂e
))

277 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

279 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

280 
q13_cu°_‹dî_cou¡_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q13_cu°_‹dî_cou¡_tu∂e>(
agg_d©a
);

281 
	gagg
->
	gCOUNT
++;

284 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

285 
mem˝y
(
d
.
d©a
, 
agg_d©a
, 
tu∂e_size
());

287 
vútuÆ
 
q13_cou¡_aggªg©e_t
* 
˛⁄e
() const {

288  
√w
 
q13_cou¡_aggªg©e_t
(*
this
);

290 
vútuÆ
 
c_°r
 
to_°rög
() const {

296 
	gq13_joö_t
 : 
public
 
tu∂e_joö_t
 {

298 
q13_joö_t
()

299 : 
tu∂e_joö_t
((
q13_cu°omî_sˇn_tu∂e
),

301 (
q13_cu°_‹dî_cou¡_tu∂e
),

302 
off£tof
(
q13_cu°_‹dî_cou¡_tu∂e
, 
KEY
),

308 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

309 c⁄° 
tu∂e_t
 &,

310 c⁄° 
tu∂e_t
 &
right
)

313 
q13_cu°_‹dî_cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q13_cu°_‹dî_cou¡_tu∂e>(
right
.
d©a
);

315 *
	gÆig√d_ˇ°
<>(
	gde°
.
	gd©a
Ë
tu∂e
->
COUNT
;

318 
vútuÆ
 
À·_ouãr_joö
(
tu∂e_t
 &
de°
, constÅuple_t &) {

320 *
	gÆig√d_ˇ°
<>(
	gde°
.
	gd©a
) = 0;

323 
vútuÆ
 
c_°r
 
to_°rög
() const {

329 
	gq13_key_exåa˘_t
 : 
public
 
key_exåa˘‹_t


331 
q13_key_exåa˘_t
(Ë: 
key_exåa˘‹_t
((
q13_tu∂e
)) { }

333 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

334 
q13_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q13_tu∂e>(
tu∂e_d©a
);

337  -
	gtu∂e
->
	gCOUNT
;

339 
vútuÆ
 
q13_key_exåa˘_t
* 
˛⁄e
() const {

340  
√w
 
q13_key_exåa˘_t
(*
this
);

344 
	gq13_key_com∑ª_t
 : 
public
 
key_com∑ª_t


346 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

349 
q13_tu∂e
* 
	ga
 = 
Æig√d_ˇ°
<q13_tu∂e>(
key1
);

350 
q13_tu∂e
* 
	gb
 = 
Æig√d_ˇ°
<q13_tu∂e>(
key2
);

351  
	gb
->
	gKEY
 - 
	ga
->KEY;

353 
vútuÆ
 
q13_key_com∑ª_t
* 
˛⁄e
() const {

354  
√w
 
q13_key_com∑ª_t
(*
this
);

360 ˛as†
	cçch_q13_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

362 
public
:

364 
vútuÆ
 
	$begö
() {

365 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q13 %10s %10s\n",

369 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

370 
q13_tu∂e
* 
r
 = 
Æig√d_ˇ°
<q13_tu∂e>(
ouçut
.
d©a
);

372 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q13 %10d %10d\n",

373 
r
->
KEY
,

374 
r
->
COUNT
);

375 
	}
}

387 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q13
(c⁄° 
x˘_id
,

388 
q13_öput_t
& 
ö
)

390 
	`TRACE
–
TRACE_ALWAYS
, "********** Q13 *********\n");

392 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

393 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

396 
tu∂e_fifo
* 
q13_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_cu°omî_sˇn_tu∂e
));

397 
∑ckë_t
* 
q13_cu°omî_tsˇn_∑ckë
 =

398 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

399 
q13_cu°omî_buf„r
,

400 
√w
 
	`q13_cu°omî_tsˇn_fûãr_t
(
this
),

401 
this
->
	`db
(),

402 
_pcu°omî_desc
.
	`gë
(),

403 
px˘


408 
tu∂e_fifo
* 
q13_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_‹dîs_sˇn_tu∂e
));

409 
∑ckë_t
* 
q13_‹dîs_tsˇn_∑ckë
 =

410 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

411 
q13_‹dîs_buf„r
,

412 
√w
 
	`q13_‹dîs_tsˇn_fûãr_t
(
this
,
ö
),

413 
this
->
	`db
(),

414 
_p‹dîs_desc
.
	`gë
(),

415 
px˘


420 
tu∂e_fifo
* 
q13_‹dîs_groupby_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_cu°_‹dî_cou¡_tu∂e
));

421 
∑ckë_t
* 
q13_‹dîs_groupby_∑ckë
 = 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("Orders Group By",

422 
q13_‹dîs_groupby_buf„r
,

423 
√w
 
	`åivül_fûãr_t
((
q13_cu°_‹dî_cou¡_tu∂e
)),

424 
q13_‹dîs_tsˇn_∑ckë
,

425 
√w
 
	`q13_cou¡_aggªg©e_t
(),

426 
√w
 
	`öt_desc_key_exåa˘‹_t
(),

427 
√w
 
	`öt_key_com∑ª_t
()

431 
tu∂e_fifo
* 
q13_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_joö_tu∂e
));

432 
∑ckë_t
* 
q13_joö_∑ckë
 = 
√w
 
	`hash_joö_∑ckë_t
("Orders - Customer JOIN",

433 
q13_joö_buf„r
,

434 
√w
 
	`åivül_fûãr_t
((
q13_joö_tu∂e
)),

435 
q13_cu°omî_tsˇn_∑ckë
,

436 
q13_‹dîs_groupby_∑ckë
,

437 
√w
 
	`q13_joö_t
(),

438 
åue
);

442 
tu∂e_fifo
* 
q13_groupby_c_cou¡_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_tu∂e
));

443 
∑ckë_t
 *
q13_groupby_c_cou¡_∑ckë
 = 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("c_count SORT",

444 
q13_groupby_c_cou¡_buf„r
,

445 
√w
 
	`åivül_fûãr_t
((
q13_tu∂e
)),

446 
q13_joö_∑ckë
,

447 
√w
 
	`q13_cou¡_aggªg©e_t
(),

448 
√w
 
	`öt_desc_key_exåa˘‹_t
(),

449 
√w
 
	`öt_key_com∑ª_t
());

452 
tu∂e_fifo
* 
q13_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q13_tu∂e
));

453 
∑ckë_t
 *
q13_s‹t_∑ckë
 = 
√w
 
	`s‹t_∑ckë_t
("custdist, c_count SORT",

454 
q13_s‹t_buf„r
,

455 
√w
 
	`åivül_fûãr_t
((
q13_tu∂e
)),

456 
√w
 
	`q13_key_exåa˘_t
(),

457 
√w
 
	`q13_key_com∑ª_t
(),

458 
q13_groupby_c_cou¡_∑ckë
);

461 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

463 
q13_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

464 
q13_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

465 
q13_‹dîs_groupby_∑ckë
->
	`assign_quîy_°©e
(
qs
);

466 
q13_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

467 
q13_groupby_c_cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

468 
q13_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

471 
çch_q13_¥o˚ss_tu∂e_t
 
±
;

473 
	`¥o˚ss_quîy
(
q13_s‹t_∑ckë
, 
±
);

474 
dp
->
	`quîy_°©e_de°roy
(
qs
);

478  (
RCOK
);

479 
	}
}

482 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q14.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

35 
	~"w‹klﬂd/çch/çch_utû.h
"

36 
	~"qpùe.h
"

38 
usög
 
«me•a˚
 
	gsh‹e
;

39 
usög
 
«me•a˚
 
	gqpùe
;

43 
ENTER_NAMESPACE
(
çch
);

61 
	sq14_löeôem_sˇn_tu∂e
 {

62 
	mL_EXTENDEDPRICE
;

63 
	mL_DISCOUNT
;

64 
	mL_PARTKEY
;

67 
	sq14_∑π_sˇn_tu∂e
 {

68 
	mP_PARTKEY
;

69 
	mP_TYPE
[
STRSIZE
(25)];

72 
	sq14_joö_tu∂e
 {

73 
	mL_EXTENDEDPRICE
;

74 
	mL_DISCOUNT
;

75 
	mP_TYPE
[
STRSIZE
(25)];

78 
	sq14_agg_tu∂e
 {

79 
	mPROMO_SUM
;

80 
	mTOTAL_SUM
;

81 
	mP_TYPE
[
STRSIZE
(25)];

84 
	sq14_tu∂e
 {

85 
	mPROMO_REVENUE
;

92 ˛as†
	cq14_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


94 
¥iv©e
:

95 
Sh‹eTPCHEnv
* 
_çchdb
;

96 
èbÀ_row_t
* 
	m_¥löe
;

97 
ªp_row_t
 
	m_º
;

100 
çch_löeôem_tu∂e
 
	m_löeôem
;

102 
time_t
 
	m_shùd©e
;

107 
q14_öput_t
* 
	mq14_öput
;

108 
time_t
 
	md©e1
, 
	md©e2
;

109 
	mpublic
:

110 
	$q14_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q14_öput_t
 &
ö
)

111 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

114 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

115 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

116 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

117 
_¥löe
->
_ªp
 = &
_º
;

124 
q14_öput
=&
ö
;

125 
d©e1
 = 
q14_öput
->
l_shùd©e
;

127 
d©e2
 = 
	`time_add_m⁄th
(
d©e1
, 1);

129 
shd©e1
[15];

130 
shd©e2
[15];

132 
	`timë_to_°r
(
shd©e1
, 
d©e1
);

133 
	`timë_to_°r
(
shd©e2
, 
d©e2
);

135 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\n%†<L_SHIPDATE < %s\n", 
shd©e1
, 
shd©e2
);

146 ~
	$q14_löeôem_tsˇn_fûãr_t
()

149 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

150 
	}
}

152 
vútuÆ
 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

153 
q14_löeôem_sˇn_tu∂e
 *
de°
;

154 
de°
 = 
Æig√d_ˇ°
<
q14_löeôem_sˇn_tu∂e
>(
d
.
d©a
);

156 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

157 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

158 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

165 
de°
->
L_PARTKEY
=
_löeôem
.L_PARTKEY;

166 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE/100.0;

167 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT/100.0;

168 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

169 
	}
}

171 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
t
)

173 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
t
.
d©a
)) {

174 
	`as£π
(
Ál£
);

177 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

178 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

180 i‡(
_shùd©e
>=
d©e1
 && _shùd©e<
d©e2
)

182  (
åue
);

186  (
Ál£
);

189 
	}
}

190 
vútuÆ
 
q14_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

191  
√w
 
	`q14_löeôem_tsˇn_fûãr_t
(*
this
);

192 
	}
}

193 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

194 * 
d1
=
√w
 [15];

195 * 
d2
=
√w
 [15];

196 
	`timë_to_°r
(
d1
,
d©e1
);

197 
	`timë_to_°r
(
d2
,
d©e2
);

198 
c_°r
 
	`ªsu…
("select L_EXTENDEDPRICE, L_DISCOUNT, L_PARTKEY "

200 
d1
, 
d2
);

201 
	`‰ì
(
d1
);

202 
	`‰ì
(
d2
);

203  
ªsu…
;

204 
	}
}

211 ˛as†
	cq14_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


213 
¥iv©e
:

214 
Sh‹eTPCHEnv
* 
_çchdb
;

215 
èbÀ_row_t
* 
	m_¥∑π
;

216 
ªp_row_t
 
	m_º
;

219 
çch_∑π_tu∂e
 
	m_∑π
;

220 
	mpublic
:

221 
	$q14_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
)

222 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

225 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

226 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

227 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

228 
_¥∑π
->
_ªp
 = &
_º
;

231 ~
	$q14_∑π_tsˇn_fûãr_t
()

234 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

235 
	}
}

237 
vútuÆ
 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

238 
q14_∑π_sˇn_tu∂e
 *
de°
;

239 
de°
 = 
Æig√d_ˇ°
<
q14_∑π_sˇn_tu∂e
>(
d
.
d©a
);

241 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

242 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_TYPE
, 25);

248 
de°
->
P_PARTKEY
=
_∑π
.P_PARTKEY;

249 
	`mem˝y
(
de°
->
P_TYPE
, 
_∑π
.P_TYPE, (dest->P_TYPE));

250 
	}
}

252 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
t
)

254 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
t
.
d©a
)) {

255 
	`as£π
(
Ál£
);

258  (
åue
);

259 
	}
}

261 
vútuÆ
 
q14_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

262  
√w
 
	`q14_∑π_tsˇn_fûãr_t
(*
this
);

263 
	}
}

264 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

265 
c_°r
 
	`ªsu…
("select L_EXTENDEDPRICE, L_DISCOUNT, L_PARTKEY ");

266  
ªsu…
;

267 
	}
}

274 
	gq14_joö
 : 
tu∂e_joö_t
 {

276 
q14_joö
()

277 : 
tu∂e_joö_t
((
q14_∑π_sˇn_tu∂e
),

278 
off£tof
(
q14_∑π_sˇn_tu∂e
, 
P_PARTKEY
),

279 (
q14_löeôem_sˇn_tu∂e
),

280 
off£tof
(
q14_löeôem_sˇn_tu∂e
, 
L_PARTKEY
),

282 (
q14_joö_tu∂e
))

286 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

287 
q14_joö_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q14_joö_tu∂e>(
d
.
d©a
);

288 
q14_∑π_sˇn_tu∂e
* 
	gÀ·
 = 
Æig√d_ˇ°
<q14_∑π_sˇn_tu∂e>(
l
.
d©a
);

289 
q14_löeôem_sˇn_tu∂e
* 
	gright
 = 
Æig√d_ˇ°
<q14_löeôem_sˇn_tu∂e>(
r
.
d©a
);

292 
	gde°
->
	gL_EXTENDEDPRICE
 = 
right
->
L_EXTENDEDPRICE
;

293 
	gde°
->
	gL_DISCOUNT
 = 
right
->
L_DISCOUNT
;

294 
mem˝y
(
de°
->
P_TYPE
, 
À·
->P_TYPE, (dest->P_TYPE));

303 
vútuÆ
 
q14_joö
* 
˛⁄e
() const {

304  
√w
 
q14_joö
(*
this
);

307 
vútuÆ
 
c_°r
 
to_°rög
() const {

319 
	gq14_aggªg©e
 : 
tu∂e_aggªg©e_t
 {

320 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

323 
q14_aggªg©e
()

324 : 
tu∂e_aggªg©e_t
((
q14_tu∂e
)),

325 
_exåa˘‹
(0, 0)

330 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

331  &
	g_exåa˘‹
;

333 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

334 
q14_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q14_agg_tu∂e>(
agg_d©a
);

335 
q14_joö_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q14_joö_tu∂e>(
t
.
d©a
);

337 
	gvÆue
 = 
tu∂e
->
L_EXTENDEDPRICE
*(1 -Åu∂e->
L_DISCOUNT
);

338 
	gagg
->
	gTOTAL_SUM
 +
vÆue
;

340 i‡(
°r°r
(
tu∂e
->
P_TYPE
,"PROMO"))

343 
	gagg
->
	gPROMO_SUM
 +
vÆue
;

346 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

347 
q14_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q14_tu∂e>(
d
.
d©a
);

348 
q14_agg_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q14_agg_tu∂e>(
agg_d©a
);

349 
	gde°
->
	gPROMO_REVENUE
 = 100.*
agg
->
PROMO_SUM
/agg->
TOTAL_SUM
;

351 
vútuÆ
 
q14_aggªg©e
* 
˛⁄e
() const {

352  
√w
 
q14_aggªg©e
(*
this
);

354 
vútuÆ
 
c_°r
 
to_°rög
() const {

360 ˛as†
	cçch_q14_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

362 
public
:

364 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

365 
q14_tu∂e
* 
r
 = 
Æig√d_ˇ°
<q14_tu∂e>(
ouçut
.
d©a
);

366 
	`TRACE
(
TRACE_ALWAYS
, "*** Q14 PromÿRevíue: %5.2lf\n", 
r
->
PROMO_REVENUE
);

369 
	}
};

380 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q14
(c⁄° 
x˘_id
,

381 
q14_öput_t
& 
ö
)

383 
	`TRACE
–
TRACE_ALWAYS
, "********** Q14 *********\n");

385 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

386 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

389 
tu∂e_fifo
* 
q14_tsˇn_löeôem_out
 = 
√w
 
	`tu∂e_fifo
((
q14_löeôem_sˇn_tu∂e
));

390 
tsˇn_∑ckë_t
* 
q14_tsˇn_löeôem_∑ckë
 = 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

391 
q14_tsˇn_löeôem_out
,

392 
√w
 
	`q14_löeôem_tsˇn_fûãr_t
(
this
,
ö
),

393 
this
->
	`db
(),

394 
_∂öeôem_desc
.
	`gë
(),

395 
px˘


400 
tu∂e_fifo
* 
q14_tsˇn_∑π_out
 = 
√w
 
	`tu∂e_fifo
((
q14_∑π_sˇn_tu∂e
));

401 
tsˇn_∑ckë_t
* 
q14_tsˇn_∑π_∑ckë
 = 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

402 
q14_tsˇn_∑π_out
,

403 
√w
 
	`q14_∑π_tsˇn_fûãr_t
(
this
),

404 
this
->
	`db
(),

405 
_µ¨t_desc
.
	`gë
(),

406 
px˘


411 
tu∂e_fifo
* 
q14_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q14_joö_tu∂e
));

412 
∑ckë_t
* 
q14_joö_∑ckë
 = 
√w
 
	`hash_joö_∑ckë_t
("part-lineitem HJOIN",

413 
q14_joö_buf„r
,

414 
√w
 
	`åivül_fûãr_t
((
q14_joö_tu∂e
)),

415 
q14_tsˇn_∑π_∑ckë
,

416 
q14_tsˇn_löeôem_∑ckë
,

417 
√w
 
	`q14_joö
());

420 
tu∂e_fifo
* 
q14_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q14_tu∂e
));

421 
∑ckë_t
* 
q14_agg_∑ckë
 = 
√w
 
	`aggªg©e_∑ckë_t
("sum AGG",

422 
q14_agg_buf„r
,

423 
√w
 
	`åivül_fûãr_t
((
q14_tu∂e
)),

424 
√w
 
	`q14_aggªg©e
(),

425 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

426 
q14_joö_∑ckë
);

429 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

431 
q14_tsˇn_löeôem_∑ckë
->
	`assign_quîy_°©e
(
qs
);

432 
q14_tsˇn_∑π_∑ckë
->
	`assign_quîy_°©e
(
qs
);

433 
q14_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

434 
q14_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

437 
çch_q14_¥o˚ss_tu∂e_t
 
±
;

440 
	`¥o˚ss_quîy
(
q14_agg_∑ckë
, 
±
);

441 
dp
->
	`quîy_°©e_de°roy
(
qs
);

445  (
RCOK
);

446 
	}
}

449 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q15.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

87 
	sq15_¥oje˘ed_löeôem_tu∂e
 {

88 
	mL_SUPPKEY
;

89 
decimÆ
 
	mREVENUE
;

92 
	sq15_¥oje˘ed_suµlõr_tu∂e
 {

93 
	mS_SUPPKEY
;

94 
	mS_NAME
[
STRSIZE
(25)];

95 
	mS_ADDRESS
[
STRSIZE
(40)];

96 
	mS_PHONE
[
STRSIZE
(15)];

99 
	sq15_föÆ_tu∂e
 {

100 
	mS_SUPPKEY
;

101 
	mS_NAME
[
STRSIZE
(25)];

102 
	mS_ADDRESS
[
STRSIZE
(40)];

103 
	mS_PHONE
[
STRSIZE
(15)];

104 
decimÆ
 
	mTOTAL_REVENUE
;

108 ˛as†
	cq15_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


110 
¥iv©e
:

111 
Sh‹eTPCHEnv
* 
_çchdb
;

112 
èbÀ_row_t
* 
	m_¥löe
;

113 
ªp_row_t
 
	m_º
;

115 
çch_löeôem_tu∂e
 
	m_löeôem
;

116 
time_t
 
	m_shùd©e
;

118 
time_t
 
	m_fú°d©e
;

119 
time_t
 
	m_œ°d©e
;

121 
	mpublic
:

122 
	$q15_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q15_öput_t
 &
ö
)

123 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

125 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

126 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

127 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

128 
_¥löe
->
_ªp
 = &
_º
;

130 
_fú°d©e
 = (&
ö
)->
l_shùd©e
;

131 
tm
 *tm = 
	`gmtime
(&
_fú°d©e
);

132 
tm
->
tm_m⁄
 += 3;

133 
_œ°d©e
 = 
	`mktime
(
tm
);

135 
f_shùd©e
[
	`STRSIZE
(10)];

136 
l_shùd©e
[
	`STRSIZE
(10)];

137 
	`timë_to_°r
(
f_shùd©e
, 
_fú°d©e
);

138 
	`timë_to_°r
(
l_shùd©e
, 
_œ°d©e
);

140 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nLINEITEM.L_SHIPDATE bëwì¿[%s, %s[\n", 
f_shùd©e
, 
l_shùd©e
);

143 
vútuÆ
 ~
	$q15_löeôem_tsˇn_fûãr_t
()

146 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

147 
	}
}

149 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

151 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

152 
	`as£π
(
Ál£
);

155 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, (_lineitem.L_SHIPDATE));

156 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

158  
_shùd©e
 >
_fú°d©e
 && _shùd©ê< 
_œ°d©e
;

159 
	}
}

161 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

163 
q15_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

165 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

166 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

167 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

171 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

172 
de°
->
REVENUE
 = 
_löeôem
.
L_EXTENDEDPRICE
 / 100.0 * (1 - _löeôem.
L_DISCOUNT
 / 100.0);

173 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

174 
	}
}

176 
q15_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

177  
√w
 
	`q15_löeôem_tsˇn_fûãr_t
(*
this
);

178 
	}
}

180 
c_°r
 
	$to_°rög
() const {

181 
f_shùd©e
[
	`STRSIZE
(10)];

182 
l_shùd©e
[
	`STRSIZE
(10)];

183 
	`timë_to_°r
(
f_shùd©e
, 
_fú°d©e
);

184 
	`timë_to_°r
(
l_shùd©e
, 
_œ°d©e
);

185  
	`c_°r
("q15_löeôem_tsˇn_fûãr_t÷_shùd©êbëwì¿[%s, %s[)", 
f_shùd©e
, 
l_shùd©e
);

186 
	}
}

190 ˛as†
	cq15_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


192 
¥iv©e
:

193 
Sh‹eTPCHEnv
* 
_çchdb
;

194 
èbÀ_row_t
* 
	m_¥suµlõr
;

195 
ªp_row_t
 
	m_º
;

198 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

200 
	mpublic
:

201 
	$q15_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q15_öput_t
 &
ö
)

202 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

204 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

205 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

206 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

207 
_¥suµlõr
->
_ªp
 = &
_º
;

210 
vútuÆ
 ~
	$q15_suµlõr_tsˇn_fûãr_t
()

212 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

213 
	}
}

215 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

218 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

219 
	`as£π
(
Ál£
);

222  
åue
;

223 
	}
}

226 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

228 
q15_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

231 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

232 
_¥suµlõr
->
	`gë_vÆue
(1, 
_suµlõr
.
S_NAME
, (_supplier.S_NAME));

233 
_¥suµlõr
->
	`gë_vÆue
(2, 
_suµlõr
.
S_ADDRESS
, (_supplier.S_ADDRESS));

234 
_¥suµlõr
->
	`gë_vÆue
(4, 
_suµlõr
.
S_PHONE
, (_supplier.S_PHONE));

239 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

240 
	`mem˝y
(
de°
->
S_NAME
, 
_suµlõr
.S_NAME, (dest->S_NAME));

241 
	`mem˝y
(
de°
->
S_ADDRESS
, 
_suµlõr
.S_ADDRESS, (dest->S_ADDRESS));

242 
	`mem˝y
(
de°
->
S_PHONE
, 
_suµlõr
.S_PHONE, (dest->S_PHONE));

244 
	}
}

246 
q15_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

247  
√w
 
	`q15_suµlõr_tsˇn_fûãr_t
(*
this
);

248 
	}
}

250 
c_°r
 
	$to_°rög
() const {

251  
	`c_°r
("q15_supplier_tscan_filter_t");

252 
	}
}

256 
	gq15_löeôem_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

258 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

260 
q15_löeôem_aggªg©e_t
()

261 : 
tu∂e_aggªg©e_t
((
q15_¥oje˘ed_löeôem_tu∂e
)), 
_exåa˘‹
((), 
off£tof
(q15_¥oje˘ed_löeôem_tu∂e, 
L_SUPPKEY
))

265 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

266  &
	g_exåa˘‹
;

269 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

270 
q15_¥oje˘ed_löeôem_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_löeôem_tu∂e>(
agg_d©a
);

271 
q15_¥oje˘ed_löeôem_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_löeôem_tu∂e>(
t
.
d©a
);

273 
	gagg
->
	gREVENUE
 +
ö
->
REVENUE
;

275 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

276 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

278 
vútuÆ
 
q15_löeôem_aggªg©e_t
* 
˛⁄e
() const {

279  
√w
 
q15_löeôem_aggªg©e_t
(*
this
);

281 
vútuÆ
 
c_°r
 
to_°rög
() const {

286 
	gq15_l_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

288 
q15_l_s‹t_key_exåa˘‹_t
()

289 : 
key_exåa˘‹_t
((
decimÆ
), 
off£tof
(
q15_¥oje˘ed_löeôem_tu∂e
, 
REVENUE
))

293 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

294  -(*
	gÆig√d_ˇ°
<
	gdecimÆ
>(
	gkey
)).
to_öt
();

297 
vútuÆ
 
q15_l_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

298  
√w
 
q15_l_s‹t_key_exåa˘‹_t
(*
this
);

302 
	gq15_l_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

304 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

305 
decimÆ
 
	gªv1
 = *
Æig√d_ˇ°
<decimÆ>(
key1
);

306 
decimÆ
 
	gªv2
 = *
Æig√d_ˇ°
<decimÆ>(
key2
);

307  
	gªv1
 > 
	gªv2
 ? -1 : (
ªv1
 < 
ªv2
 ? 1 : 0);

310 
vútuÆ
 
q15_l_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

311  
√w
 
q15_l_s‹t_key_com∑ª_t
(*
this
);

315 
	gq15_max_fûãr_t
 : 
public
 
tu∂e_fûãr_t


317 
decimÆ
 
_max
;

319 
q15_max_fûãr_t
()

320 : 
tu∂e_fûãr_t
((
q15_¥oje˘ed_löeôem_tu∂e
)), 
_max
(0)

324 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

325 
q15_¥oje˘ed_löeôem_tu∂e
 *
	gtu∂e
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_löeôem_tu∂e>(
öput
.
d©a
);

326 if(
	g_max
 =0Ë
_max
 = 
tu∂e
->
REVENUE
;

327  
	gtu∂e
->
	gREVENUE
 =
_max
;

330 
vútuÆ
 
q15_max_fûãr_t
* 
˛⁄e
() const {

331  
√w
 
q15_max_fûãr_t
(*
this
);

334 
vútuÆ
 
c_°r
 
to_°rög
() const {

335  
c_°r
("q15_max_filter_t");

341 
	gq15_l_joö_s_t
 : 
public
 
tu∂e_joö_t
 {

343 
q15_l_joö_s_t
()

344 : 
tu∂e_joö_t
((
q15_¥oje˘ed_löeôem_tu∂e
),

345 
off£tof
(
q15_¥oje˘ed_löeôem_tu∂e
, 
L_SUPPKEY
),

346 (
q15_¥oje˘ed_suµlõr_tu∂e
),

347 
off£tof
(
q15_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

349 (
q15_föÆ_tu∂e
))

353 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

354 
q15_föÆ_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q15_föÆ_tu∂e>(
d
.
d©a
);

355 
q15_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

356 
q15_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q15_¥oje˘ed_suµlõr_tu∂e>(
r
.
d©a
);

358 
	gde°
->
	gS_SUPPKEY
 = 
suµ
->
S_SUPPKEY
;

359 
	gde°
->
	gTOTAL_REVENUE
 = 
löe
->
REVENUE
;

360 
mem˝y
(
de°
->
S_ADDRESS
, 
suµ
->S_ADDRESS, (dest->S_ADDRESS));

361 
mem˝y
(
de°
->
S_NAME
, 
suµ
->S_NAME, (dest->S_NAME));

362 
mem˝y
(
de°
->
S_PHONE
, 
suµ
->S_PHONE, (dest->S_PHONE));

367 
vútuÆ
 
q15_l_joö_s_t
* 
˛⁄e
() const {

368  
√w
 
q15_l_joö_s_t
(*
this
);

371 
vútuÆ
 
c_°r
 
to_°rög
() const {

372  
c_°r
("join LINEITEM, SUPPLIER; select S_SUPPKEY, TOTAL_REVENUE, S_ADDRESS, S_NAME, S_PHONE");

378 ˛as†
	cçch_q15_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

380 
public
:

382 
vútuÆ
 
	$begö
() {

383 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q15 %s %s %s %s %s\n",

387 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

388 
q15_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q15_föÆ_tu∂e>(
ouçut
.
d©a
);

390 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q15 %d %†%†%†%.4f\n", 
agg
->
S_SUPPKEY
,ágg->
S_NAME
,ágg->
S_ADDRESS
,ágg->
S_PHONE
,ágg->
TOTAL_REVENUE
.
	`to_doubÀ
());

391 
	}
}

402 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q15
(c⁄° 
x˘_id
,

403 
q15_öput_t
& 
ö
)

405 
	`TRACE
–
TRACE_ALWAYS
, "********** q15 *********\n");

407 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

408 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

413 
tu∂e_fifo
* 
q15_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_¥oje˘ed_suµlõr_tu∂e
));

414 
∑ckë_t
* 
q15_suµlõr_tsˇn_∑ckë
 =

415 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

416 
q15_suµlõr_buf„r
,

417 
√w
 
	`q15_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

418 
this
->
	`db
(),

419 
_psuµlõr_desc
.
	`gë
(),

420 
px˘
);

423 
tu∂e_fifo
* 
q15_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_¥oje˘ed_löeôem_tu∂e
));

424 
∑ckë_t
* 
q15_löeôem_tsˇn_∑ckë
 =

425 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

426 
q15_löeôem_buf„r
,

427 
√w
 
	`q15_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

428 
this
->
	`db
(),

429 
_∂öeôem_desc
.
	`gë
(),

430 
px˘
);

433 
tu∂e_fifo
* 
q15_l_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_¥oje˘ed_löeôem_tu∂e
));

434 
∑ckë_t
* 
q15_l_agg_∑ckë
 =

435 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("LINEITEM AGGREGATE",

436 
q15_l_agg_buf„r
,

437 
√w
 
	`åivül_fûãr_t
((
q15_¥oje˘ed_löeôem_tu∂e
)),

438 
q15_löeôem_tsˇn_∑ckë
,

439 
√w
 
	`q15_löeôem_aggªg©e_t
(),

440 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q15_¥oje˘ed_löeôem_tu∂e
, 
L_SUPPKEY
)),

441 
√w
 
	`öt_key_com∑ª_t
());

444 
tu∂e_fifo
* 
q15_l_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_¥oje˘ed_löeôem_tu∂e
));

445 
∑ckë_t
* 
q15_l_s‹t_∑ckë
 =

446 
√w
 
	`s‹t_∑ckë_t
("SORT BY REVENUE",

447 
q15_l_s‹t_buf„r
,

448 
√w
 
	`q15_max_fûãr_t
(),

449 
√w
 
	`q15_l_s‹t_key_exåa˘‹_t
(),

450 
√w
 
	`q15_l_s‹t_key_com∑ª_t
(),

451 
q15_l_agg_∑ckë
);

454 
tu∂e_fifo
* 
q15_l_joö_s_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_föÆ_tu∂e
));

455 
∑ckë_t
* 
q15_l_joö_s_∑ckë
 =

456 
√w
 
	`hash_joö_∑ckë_t
("lineitem - supplier HJOIN",

457 
q15_l_joö_s_buf„r
,

458 
√w
 
	`åivül_fûãr_t
((
q15_föÆ_tu∂e
)),

459 
q15_l_s‹t_∑ckë
,

460 
q15_suµlõr_tsˇn_∑ckë
,

461 
√w
 
	`q15_l_joö_s_t
());

464 
tu∂e_fifo
* 
q15_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q15_föÆ_tu∂e
));

465 
∑ckë_t
* 
q15_s‹t_∑ckë
 =

466 
√w
 
	`s‹t_∑ckë_t
("SORT BY S_SUPPKEY",

467 
q15_s‹t_buf„r
,

468 
√w
 
	`åivül_fûãr_t
((
q15_föÆ_tu∂e
)),

469 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q15_föÆ_tu∂e
, 
S_SUPPKEY
)),

470 
√w
 
	`öt_key_com∑ª_t
(),

471 
q15_l_joö_s_∑ckë
);

474 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

475 
q15_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

476 
q15_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

477 
q15_l_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

478 
q15_l_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

479 
q15_l_joö_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

480 
q15_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

484 
çch_q15_¥o˚ss_tu∂e_t
 
±
;

486 
	`¥o˚ss_quîy
(
q15_s‹t_∑ckë
, 
±
);

488 
dp
->
	`quîy_°©e_de°roy
(
qs
);

491  (
RCOK
);

492 
	}
}

495 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q16.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

96 
	sq16_¥oje˘ed_∑πsuµ_tu∂e
 {

97 
	mPS_PARTKEY
;

98 
	mPS_SUPPKEY
;

101 
	sq16_¥oje˘ed_∑π_tu∂e
 {

102 
	mP_PARTKEY
;

103 
	mP_BRAND
[
STRSIZE
(10)];

104 
	mP_TYPE
[
STRSIZE
(25)];

105 
	mP_SIZE
;

108 
	sq16_¥oje˘ed_suµlõr_tu∂e
 {

109 
	mS_SUPPKEY
;

112 
	sq16_ps_joö_p_tu∂e
 {

113 
	mPS_SUPPKEY
;

114 
	mP_BRAND
[
STRSIZE
(10)];

115 
	mP_TYPE
[
STRSIZE
(25)];

116 
	mP_SIZE
;

119 
	sq16_Æl_joös_tu∂e
 {

120 
	mP_BRAND
[
STRSIZE
(10)];

121 
	mP_TYPE
[
STRSIZE
(25)];

122 
	mP_SIZE
;

123 
	mPS_SUPPKEY
;

126 
	sq16_aggªg©e_tu∂e
 {

127 
	mP_BRAND
[
STRSIZE
(10)];

128 
	mP_TYPE
[
STRSIZE
(25)];

129 
	mP_SIZE
;

130 
	mSUPPLIER_CNT
;

133 
	sq16_aggªg©e_key
 {

134 
	mP_BRAND
[
STRSIZE
(10)];

135 
	mP_TYPE
[
STRSIZE
(25)];

136 
	mP_SIZE
;

139 
	sq16_s‹t_key
 {

140 
	mP_BRAND
[
STRSIZE
(10)];

141 
	mP_TYPE
[
STRSIZE
(25)];

142 
	mP_SIZE
;

143 
	mSUPP_CNT
;

147 ˛as†
	cq16_∑πsuµ_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


149 
¥iv©e
:

150 
Sh‹eTPCHEnv
* 
_çchdb
;

151 
èbÀ_row_t
* 
	m_¥∑πsuµ
;

152 
ªp_row_t
 
	m_º
;

155 
çch_∑πsuµ_tu∂e
 
	m_∑πsuµ
;

157 
	mpublic
:

158 
	$q16_∑πsuµ_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q16_öput_t
 &
ö
)

159 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

161 
_¥∑πsuµ
 = 
_çchdb
->
	`∑πsuµ_m™
()->
	`gë_tu∂e
();

162 
_º
.
	`£t_ts
(
_çchdb
->
	`∑πsuµ_m™
()->
	`ts
(),

163 
_çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
());

164 
_¥∑πsuµ
->
_ªp
 = &
_º
;

167 
vútuÆ
 ~
	$q16_∑πsuµ_tsˇn_fûãr_t
()

169 
_çchdb
->
	`∑πsuµ_m™
()->
	`give_tu∂e
(
_¥∑πsuµ
);

170 
	}
}

172 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

175 i‡(!
_çchdb
->
	`∑πsuµ_m™
()->
	`lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

176 
	`as£π
(
Ál£
);

179  
åue
;

180 
	}
}

183 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

185 
q16_¥oje˘ed_∑πsuµ_tu∂e
 *
de°
;

186 
de°
 = 
Æig√d_ˇ°
<
q16_¥oje˘ed_∑πsuµ_tu∂e
>(
d
.
d©a
);

188 
_¥∑πsuµ
->
	`gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

189 
_¥∑πsuµ
->
	`gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

195 
de°
->
PS_SUPPKEY
 = 
_∑πsuµ
.PS_SUPPKEY;

196 
de°
->
PS_PARTKEY
 = 
_∑πsuµ
.PS_PARTKEY;

197 
	}
}

199 
q16_∑πsuµ_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

200  
√w
 
	`q16_∑πsuµ_tsˇn_fûãr_t
(*
this
);

201 
	}
}

203 
c_°r
 
	$to_°rög
() const {

204  
	`c_°r
("q16_partsupp_tscan_filter_t()");

205 
	}
}

208 ˛as†
	cq16_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


210 
¥iv©e
:

211 
Sh‹eTPCHEnv
* 
_çchdb
;

212 
èbÀ_row_t
* 
	m_¥∑π
;

213 
ªp_row_t
 
	m_º
;

216 
çch_∑π_tu∂e
 
	m_∑π
;

218 
	m_ty≥
[
STRSIZE
(25)];

219 
	m_ty≥2
[
STRSIZE
(25)];

220 
	m_bønd
[
STRSIZE
(10)];

221 
	m_size
[8];

223 
q16_öput_t
* 
	mq16_öput
;

225 
	mpublic
:

227 
	$q16_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q16_öput_t
 &
ö
)

228 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

230 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

231 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

232 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

233 
_¥∑π
->
_ªp
 = &
_º
;

235 
q16_öput
 = &
ö
;

236 
	`ty≥s1_to_°r
(
_ty≥
, 
q16_öput
->
p_ty≥
 / 10);

237 
	`°rˇt
(
_ty≥
, " ");

238 
	`ty≥s2_to_°r
(
_ty≥2
, 
q16_öput
->
p_ty≥
 % 10);

239 
	`°rˇt
(
_ty≥
, 
_ty≥2
);

240 
	`Bønd_to_§t
(
_bønd
, 
q16_öput
->
p_bønd
);

241 
	`mem˝y
(
_size
, 
q16_öput
->
p_size
, (_size));

243 
	`TRACE
(
TRACE_ALWAYS
, "RandomÖredicates:\nPART.P_BRAND <> '%s' AND PART.P_TYPEÇotÜike '%s%%'\nAND P_SIZE in (%d, %d, %d, %d, %d, %d, %d, %d)\n",

244 
_bønd
, 
_ty≥
, 
_size
[0], _size[1], _size[2], _size[3], _size[4], _size[5], _size[6], _size[7]);

247 
vútuÆ
 ~
	$q16_∑π_tsˇn_fûãr_t
()

250 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

251 
	}
}

255 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

258 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

259 
	`as£π
(
Ál£
);

262 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_BRAND
, (_part.P_BRAND));

263 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_TYPE
, (_part.P_TYPE));

264 
_¥∑π
->
	`gë_vÆue
(5, 
_∑π
.
P_SIZE
);

265 
size
 = 
_∑π
.
P_SIZE
;

267  
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd
Ë!0 && !
	`°r°r
(_∑π.
P_TYPE
, 
_ty≥
) &&

268 (
size
 =
_size
[0] || size == _size[1] || size == _size[2] || size == _size[3] || size == _size[4] || size == _size[5] || size == _size[6] || size == _size[7]);

269 
	}
}

272 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

274 
q16_¥oje˘ed_∑π_tu∂e
 *
de°
;

275 
de°
 = 
Æig√d_ˇ°
<
q16_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

277 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

278 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_BRAND
, (_part.P_BRAND));

279 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_TYPE
, (_part.P_TYPE));

280 
_¥∑π
->
	`gë_vÆue
(5, 
_∑π
.
P_SIZE
);

285 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

286 
	`mem˝y
(
de°
->
P_BRAND
, 
_∑π
.P_BRAND, (dest->P_BRAND));

287 
	`mem˝y
(
de°
->
P_TYPE
, 
_∑π
.P_TYPE, (dest->P_TYPE));

288 
de°
->
P_SIZE
 = 
_∑π
.P_SIZE;

289 
	}
}

291 
q16_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

292  
√w
 
	`q16_∑π_tsˇn_fûãr_t
(*
this
);

293 
	}
}

295 
c_°r
 
	$to_°rög
() const {

296  
	`c_°r
("q16_part_tscan_filter_t()");

297 
	}
}

300 ˛as†
	cq16_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


302 
¥iv©e
:

303 
Sh‹eTPCHEnv
* 
_çchdb
;

304 
èbÀ_row_t
* 
	m_¥suµlõr
;

305 
ªp_row_t
 
	m_º
;

308 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

310 
	mpublic
:

311 
	$q16_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q16_öput_t
 &
ö
)

312 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

314 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

315 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

316 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

317 
_¥suµlõr
->
_ªp
 = &
_º
;

320 
vútuÆ
 ~
	$q16_suµlõr_tsˇn_fûãr_t
()

322 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

323 
	}
}

325 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

328 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

329 
	`as£π
(
Ál£
);

332 
_¥suµlõr
->
	`gë_vÆue
(6, 
_suµlõr
.
S_COMMENT
, (_supplier.S_COMMENT));

335  !(
	`°r°r
(
_suµlõr
.
S_COMMENT
, "Customer") && strstr(_supplier.S_COMMENT, "Complaints"));

336 
	}
}

339 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

341 
q16_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q16_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

344 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

349 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

351 
	}
}

353 
q16_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

354  
√w
 
	`q16_suµlõr_tsˇn_fûãr_t
(*
this
);

355 
	}
}

357 
c_°r
 
	$to_°rög
() const {

358  
	`c_°r
("q16_supplier_tscan_filter_t");

359 
	}
}

364 
	gq16_ps_joö_p_t
 : 
public
 
tu∂e_joö_t
 {

366 
q16_ps_joö_p_t
()

367 : 
tu∂e_joö_t
((
q16_¥oje˘ed_∑πsuµ_tu∂e
),

368 
off£tof
(
q16_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_PARTKEY
),

369 (
q16_¥oje˘ed_∑π_tu∂e
),

370 
off£tof
(
q16_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

372 (
q16_ps_joö_p_tu∂e
))

376 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

377 
q16_ps_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q16_ps_joö_p_tu∂e>(
d
.
d©a
);

378 
q16_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q16_¥oje˘ed_∑πsuµ_tu∂e>(
l
.
d©a
);

379 
q16_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q16_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

381 
	gde°
->
	gPS_SUPPKEY
 = 
∑πsuµ
->
PS_SUPPKEY
;

382 
mem˝y
(
de°
->
P_BRAND
, 
∑π
->P_BRAND, (dest->P_BRAND));

383 
	gde°
->
	gP_SIZE
 = 
∑π
->
P_SIZE
;

384 
mem˝y
(
de°
->
P_TYPE
, 
∑π
->P_TYPE, (dest->P_TYPE));

389 
vútuÆ
 
q16_ps_joö_p_t
* 
˛⁄e
() const {

390  
√w
 
q16_ps_joö_p_t
(*
this
);

393 
vútuÆ
 
c_°r
 
to_°rög
() const {

394  
c_°r
("join PARTSUPP, PART; select PS_SUPPKEY, P_BRAND, P_SIZE, P_TYPE");

398 
	gq16_ps_p_joö_s_t
 : 
public
 
tu∂e_joö_t
 {

400 
q16_ps_p_joö_s_t
()

401 : 
tu∂e_joö_t
((
q16_ps_joö_p_tu∂e
),

402 
off£tof
(
q16_ps_joö_p_tu∂e
, 
PS_SUPPKEY
),

403 (
q16_¥oje˘ed_suµlõr_tu∂e
),

404 
off£tof
(
q16_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

406 (
q16_Æl_joös_tu∂e
))

410 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

411 
q16_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q16_Æl_joös_tu∂e>(
d
.
d©a
);

412 
q16_ps_joö_p_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q16_ps_joö_p_tu∂e>(
l
.
d©a
);

413 
q16_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q16_¥oje˘ed_suµlõr_tu∂e>(
r
.
d©a
);

415 
	gde°
->
	gPS_SUPPKEY
 = 
À·
->
PS_SUPPKEY
;

416 
mem˝y
(
de°
->
P_BRAND
, 
À·
->P_BRAND, (dest->P_BRAND));

417 
	gde°
->
	gP_SIZE
 = 
À·
->
P_SIZE
;

418 
mem˝y
(
de°
->
P_TYPE
, 
À·
->P_TYPE, (dest->P_TYPE));

423 
vútuÆ
 
q16_ps_p_joö_s_t
* 
˛⁄e
() const {

424  
√w
 
q16_ps_p_joö_s_t
(*
this
);

427 
vútuÆ
 
c_°r
 
to_°rög
() const {

428  
c_°r
("join PARTSUPP_PART, SUPPLIER; select PS_SUPPKEY, P_BRAND, P_SIZE, P_TYPE");

433 ˛as†
	cq16_di°ö˘_t
 : 
public
 
tu∂e_aggªg©e_t
 {

435 
public
:

437 ˛as†
	cq16_di°ö˘_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

438 
public
:

439 
q16_di°ö˘_key_exåa˘‹_t
()

440 : 
key_exåa˘‹_t
((
q16_Æl_joös_tu∂e
))

444 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

446 
q16_Æl_joös_tu∂e
 *
ôem
;

447 
	môem
 = 
Æig√d_ˇ°
<
q16_Æl_joös_tu∂e
>(
tu∂e_d©a
);

449  (
	môem
->
	mP_BRAND
[0] << 24) + (item->P_BRAND[1] << 16) + (item->P_BRAND[2] << 8) + item->P_BRAND[3];

452 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

453  
√w
 
q16_di°ö˘_key_exåa˘‹_t
(*
this
);

457 
	g¥iv©e
:

459 
q16_di°ö˘_key_exåa˘‹_t
 
_exåa˘‹
;

461 
	gpublic
:

463 
	$q16_di°ö˘_t
()

464 : 
	`tu∂e_aggªg©e_t
((
q16_Æl_joös_tu∂e
)),

465 
	$_exåa˘‹
()

467 
	}
}

469 
vútuÆ
 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{  &
_exåa˘‹
; 
	}
}

471 
vútuÆ
 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
& 
§c
) {

473 
	}
}

475 
vútuÆ
 
	$föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

476 
	`mem˝y
(
de°
.
d©a
, 
agg_d©a
, (
q16_Æl_joös_tu∂e
));

477 
	}
}

479 
vútuÆ
 
q16_di°ö˘_t
* 
	$˛⁄e
() const {

480  
√w
 
	`q16_di°ö˘_t
(*
this
);

481 
	}
}

483 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

485 
	}
}

488 
	gq16_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

490 
boﬁ
 
_di°ö˘
;

492 
q16_key_com∑ª_t
(
boﬁ
 
di°ö˘
)

493 : 
_di°ö˘
(
di°ö˘
)

497 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

498 
	gdiff_bønd
;

499 
	gdiff_ty≥
;

500 
	gdiff_size
;

501 if(
	g_di°ö˘
) {

502 
q16_Æl_joös_tu∂e
 *
	gk1
 = 
Æig√d_ˇ°
<q16_Æl_joös_tu∂e>(
key1
);

503 
q16_Æl_joös_tu∂e
 *
	gk2
 = 
Æig√d_ˇ°
<q16_Æl_joös_tu∂e>(
key2
);

504 
	gdiff_bønd
 = 
°rcmp
(
k1
->
P_BRAND
, 
k2
->P_BRAND);

505 
	gdiff_ty≥
 = 
°rcmp
(
k1
->
P_TYPE
, 
k2
->P_TYPE);

506 
	gdiff_size
 = 
k1
->
P_SIZE
 - 
k2
->P_SIZE;

507 (
	gdiff_bønd
 !0 ? 
diff_bønd
 : (
diff_ty≥
 !0 ? diff_ty≥ : (
diff_size
 !0 ? diff_sizê: 
k1
->
PS_SUPPKEY
 - 
k2
->PS_SUPPKEY)));

510 
q16_aggªg©e_key
 *
	gk1
 = 
Æig√d_ˇ°
<q16_aggªg©e_key>(
key1
);

511 
q16_aggªg©e_key
 *
	gk2
 = 
Æig√d_ˇ°
<q16_aggªg©e_key>(
key2
);

512 
	gdiff_bønd
 = 
°rcmp
(
k1
->
P_BRAND
, 
k2
->P_BRAND);

513 
	gdiff_ty≥
 = 
°rcmp
(
k1
->
P_TYPE
, 
k2
->P_TYPE);

514 
	gdiff_size
 = 
k1
->
P_SIZE
 - 
k2
->P_SIZE;

515 (
	gdiff_bønd
 !0 ? 
diff_bønd
 : (
diff_ty≥
 !0 ? diff_ty≥ : 
diff_size
));

519 
vútuÆ
 
q16_key_com∑ª_t
* 
˛⁄e
() const {

520  
√w
 
q16_key_com∑ª_t
(*
this
);

524 ˛as†
	cq16_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

525 
public
:

527 ˛as†
	cq16_agg_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

528 
public
:

529 
q16_agg_key_exåa˘‹_t
()

530 : 
key_exåa˘‹_t
((
q16_aggªg©e_key
))

534 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

535 
q16_aggªg©e_key
 *
ôem
;

536 
	môem
 = 
Æig√d_ˇ°
<
q16_aggªg©e_key
>(
tu∂e_d©a
);

538  (
	môem
->
	mP_BRAND
[0] << 24) + (item->P_BRAND[1] << 16) + (item->P_BRAND[2] << 8) + item->P_BRAND[3];

541 
vútuÆ
 
q16_agg_key_exåa˘‹_t
* 
˛⁄e
() const {

542  
√w
 
q16_agg_key_exåa˘‹_t
(*
this
);

546 
	g¥iv©e
:

548 
q16_agg_key_exåa˘‹_t
 
_exåa˘‹
;

550 
	gpublic
:

552 
	$q16_aggªg©e_t
()

553 : 
	`tu∂e_aggªg©e_t
((
q16_aggªg©e_tu∂e
)),

554 
	$_exåa˘‹
()

556 
	}
}

558 
vútuÆ
 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{  &
_exåa˘‹
; 
	}
}

560 
vútuÆ
 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
& 
§c
) {

561 
q16_aggªg©e_tu∂e
 *
out
 = 
Æig√d_ˇ°
<q16_aggªg©e_tu∂e>(
agg_d©a
);

562 
q16_Æl_joös_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q16_Æl_joös_tu∂e>(
§c
.
d©a
);

563 
out
->
SUPPLIER_CNT
++;

565 
	}
}

567 
vútuÆ
 
	$föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

568 
	`mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

569 
	}
}

571 
vútuÆ
 
q16_aggªg©e_t
* 
	$˛⁄e
() const {

572  
√w
 
	`q16_aggªg©e_t
(*
this
);

573 
	}
}

575 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

577 
	}
}

580 
	gq16_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

582 
q16_s‹t_key_exåa˘‹_t
()

583 : 
key_exåa˘‹_t
((
q16_s‹t_key
))

587 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

588 
q16_s‹t_key
 *
k
 = 
Æig√d_ˇ°
<q16_s‹t_key>(
key
);

589  -(
	gk
->
	gSUPP_CNT
);

592 
vútuÆ
 
q16_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

593  
√w
 
q16_s‹t_key_exåa˘‹_t
(*
this
);

597 
	gq16_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

599 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

600 
q16_s‹t_key
 *
	gk1
 = 
Æig√d_ˇ°
<q16_s‹t_key>(
key1
);

601 
q16_s‹t_key
 *
	gk2
 = 
Æig√d_ˇ°
<q16_s‹t_key>(
key2
);

603 
	gdiff_˙t
 = 
k2
->
SUPP_CNT
 - 
k1
->SUPP_CNT;

604 
	gdiff_bønd
 = 
°rcmp
(
k1
->
P_BRAND
, 
k2
->P_BRAND);

605 
	gdiff_ty≥
 = 
°rcmp
(
k1
->
P_TYPE
, 
k2
->P_TYPE);

606  (
	gdiff_˙t
 !0 ? 
diff_˙t
 : (
diff_bønd
 !0 ? diff_bønd : (
diff_ty≥
 !0 ? diff_ty≥ : 
k1
->
P_SIZE
 - 
k2
->P_SIZE)));

609 
vútuÆ
 
q16_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

610  
√w
 
q16_s‹t_key_com∑ª_t
(*
this
);

616 ˛as†
	cçch_q16_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

618 
public
:

620 
vútuÆ
 
	$begö
() {

621 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q16 %s %s %s %s\n",

625 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

626 
q16_aggªg©e_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q16_aggªg©e_tu∂e>(
ouçut
.
d©a
);

628 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q16 %†%†%d %d\n", 
agg
->
P_BRAND
,ágg->
P_TYPE
,ágg->
P_SIZE
,ágg->
SUPPLIER_CNT
);

629 
	}
}

640 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q16
(c⁄° 
x˘_id
,

641 
q16_öput_t
& 
ö
)

643 
	`TRACE
–
TRACE_ALWAYS
, "********** q16 *********\n");

645 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

646 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

650 
tu∂e_fifo
* 
q16_∑πsuµ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_¥oje˘ed_∑πsuµ_tu∂e
));

651 
∑ckë_t
* 
q16_∑πsuµ_tsˇn_∑ckë
 =

652 
√w
 
	`tsˇn_∑ckë_t
("partsupp TSCAN",

653 
q16_∑πsuµ_buf„r
,

654 
√w
 
	`q16_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

655 
this
->
	`db
(),

656 
_µ¨tsuµ_desc
.
	`gë
(),

657 
px˘
);

660 
tu∂e_fifo
* 
q16_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_¥oje˘ed_∑π_tu∂e
));

661 
∑ckë_t
* 
q16_∑π_tsˇn_∑ckë
 =

662 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

663 
q16_∑π_buf„r
,

664 
√w
 
	`q16_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

665 
this
->
	`db
(),

666 
_µ¨t_desc
.
	`gë
(),

667 
px˘
);

670 
tu∂e_fifo
* 
q16_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_¥oje˘ed_suµlõr_tu∂e
));

671 
∑ckë_t
* 
q16_suµlõr_tsˇn_∑ckë
 =

672 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

673 
q16_suµlõr_buf„r
,

674 
√w
 
	`q16_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

675 
this
->
	`db
(),

676 
_psuµlõr_desc
.
	`gë
(),

677 
px˘
);

681 
tu∂e_fifo
* 
q16_ps_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_ps_joö_p_tu∂e
));

682 
∑ckë_t
* 
q16_ps_joö_p_∑ckë
 =

683 
√w
 
	`hash_joö_∑ckë_t
("partsupp -Öart HJOIN",

684 
q16_ps_joö_p_buf„r
,

685 
√w
 
	`åivül_fûãr_t
((
q16_ps_joö_p_tu∂e
)),

686 
q16_∑πsuµ_tsˇn_∑ckë
,

687 
q16_∑π_tsˇn_∑ckë
,

688 
√w
 
	`q16_ps_joö_p_t
());

691 
tu∂e_fifo
* 
q16_ps_p_joö_s_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_Æl_joös_tu∂e
));

692 
∑ckë_t
* 
q16_ps_p_joö_s_∑ckë
 =

693 
√w
 
	`hash_joö_∑ckë_t
("partsupp_part - supplier HJOIN",

694 
q16_ps_p_joö_s_buf„r
,

695 
√w
 
	`åivül_fûãr_t
((
q16_Æl_joös_tu∂e
)),

696 
q16_ps_joö_p_∑ckë
,

697 
q16_suµlõr_tsˇn_∑ckë
,

698 
√w
 
	`q16_ps_p_joö_s_t
());

701 
tu∂e_fifo
* 
q16_di°ö˘_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_Æl_joös_tu∂e
));

702 
∑ckë_t
* 
q16_di°ö˘_∑ckë
 =

703 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("DISTINCT AGG",

704 
q16_di°ö˘_buf„r
,

705 
√w
 
	`åivül_fûãr_t
((
q16_Æl_joös_tu∂e
)),

706 
q16_ps_p_joö_s_∑ckë
,

707 
√w
 
	`q16_di°ö˘_t
(),

708 
√w
 
q16_di°ö˘_t
::
	`q16_di°ö˘_key_exåa˘‹_t
(),

709 
√w
 
	`q16_key_com∑ª_t
(
åue
));

712 
tu∂e_fifo
* 
q16_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_aggªg©e_tu∂e
));

713 
∑ckë_t
* 
q16_agg_∑ckë
 =

714 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("GROUP BY AGG",

715 
q16_agg_buf„r
,

716 
√w
 
	`åivül_fûãr_t
((
q16_aggªg©e_tu∂e
)),

717 
q16_di°ö˘_∑ckë
,

718 
√w
 
	`q16_aggªg©e_t
(),

719 
√w
 
q16_aggªg©e_t
::
	`q16_agg_key_exåa˘‹_t
(),

720 
√w
 
	`q16_key_com∑ª_t
(
Ál£
));

723 
tu∂e_fifo
* 
q16_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q16_aggªg©e_tu∂e
));

724 
∑ckë_t
* 
q16_s‹t_∑ckë
 =

725 
√w
 
	`s‹t_∑ckë_t
("ORDER BY SUPP_CNT",

726 
q16_s‹t_buf„r
,

727 
√w
 
	`åivül_fûãr_t
((
q16_aggªg©e_tu∂e
)),

728 
√w
 
	`q16_s‹t_key_exåa˘‹_t
(),

729 
√w
 
	`q16_s‹t_key_com∑ª_t
(),

730 
q16_agg_∑ckë
);

733 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

734 
q16_∑πsuµ_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

735 
q16_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

736 
q16_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

737 
q16_ps_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

738 
q16_ps_p_joö_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

739 
q16_di°ö˘_∑ckë
->
	`assign_quîy_°©e
(
qs
);

740 
q16_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

741 
q16_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

745 
çch_q16_¥o˚ss_tu∂e_t
 
±
;

747 
	`¥o˚ss_quîy
(
q16_s‹t_∑ckë
, 
±
);

749 
dp
->
	`quîy_°©e_de°roy
(
qs
);

752  (
RCOK
);

753 
	}
}

755 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q17.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

71 
	sq17_¥oje˘ed_löeôem_sub_tu∂e
 {

72 
	mL_PARTKEY
;

73 
decimÆ
 
	mL_QUANTITY
;

76 
	sq17_¥oje˘ed_∑π_tu∂e
 {

77 
	mP_PARTKEY
;

80 
	sq17_¥oje˘ed_löeôem_tu∂e
 {

81 
	mL_PARTKEY
;

82 
decimÆ
 
	mL_QUANTITY
;

83 
decimÆ
 
	mL_EXTENDEDPRICE
;

86 
	sq17_sub_aggªg©e_tu∂e
 {

87 
	mL_PARTKEY
;

88 
decimÆ
 
	mL_QUANTITY_SUM
;

89 
	mL_COUNT
;

90 
decimÆ
 
	mAVG_QTY
;

93 
	sq17_l_joö_p_tu∂e
 {

94 
	mP_PARTKEY
;

95 
decimÆ
 
	mL_EXTENDEDPRICE
;

96 
decimÆ
 
	mL_QUANTITY
;

99 
	sq17_Æl_joö_tu∂e
 {

100 
decimÆ
 
	mL_EXTENDEDPRICE
;

101 
decimÆ
 
	mAVG_QTY
;

102 
decimÆ
 
	mL_QUANTITY
;

105 
	sq17_föÆ_tu∂e
 {

106 
decimÆ
 
	mAVG_YEARLY
;

110 ˛as†
	cq17_löeôem_sub_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


112 
¥iv©e
:

113 
Sh‹eTPCHEnv
* 
_çchdb
;

114 
èbÀ_row_t
* 
	m_¥löe
;

115 
ªp_row_t
 
	m_º
;

117 
çch_löeôem_tu∂e
 
	m_löeôem
;

119 
	mpublic
:

120 
	$q17_löeôem_sub_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q17_öput_t
 &
ö
)

121 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

123 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

124 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

125 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

126 
_¥löe
->
_ªp
 = &
_º
;

129 
vútuÆ
 ~
	$q17_löeôem_sub_tsˇn_fûãr_t
()

132 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

133 
	}
}

135 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

137 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

138 
	`as£π
(
Ál£
);

141  
åue
;

142 
	}
}

144 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

146 
q17_¥oje˘ed_löeôem_sub_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q17_¥oje˘ed_löeôem_sub_tu∂e>(
d
.
d©a
);

148 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

149 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

153 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

154 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

155 
	}
}

157 
q17_löeôem_sub_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

158  
√w
 
	`q17_löeôem_sub_tsˇn_fûãr_t
(*
this
);

159 
	}
}

161 
c_°r
 
	$to_°rög
() const {

162  
	`c_°r
("q17_lineitem_sub_tscan_filter_t()");

163 
	}
}

166 ˛as†
	cq17_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


168 
¥iv©e
:

169 
Sh‹eTPCHEnv
* 
_çchdb
;

170 
èbÀ_row_t
* 
	m_¥∑π
;

171 
ªp_row_t
 
	m_º
;

174 
çch_∑π_tu∂e
 
	m_∑π
;

176 
	m_c⁄èöî
[
STRSIZE
(10)];

177 
	m_bønd
[
STRSIZE
(10)];

179 
q17_öput_t
* 
	mq17_öput
;

181 
	mpublic
:

183 
	$q17_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q17_öput_t
 &
ö
)

184 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

186 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

187 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

188 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

189 
_¥∑π
->
_ªp
 = &
_º
;

191 
q17_öput
 = &
ö
;

192 
	`Bønd_to_§t
(
_bønd
, 
q17_öput
->
p_bønd
);

193 
	`c⁄èöî_to_°r
(
q17_öput
->
p_c⁄èöî
, 
_c⁄èöî
);

195 
	`TRACE
(
TRACE_ALWAYS
, "RandomÖredicates:\nPART.P_BRAND = '%s' AND PART.P_CONTAINER = '%s'\n",

196 
_bønd
, 
_c⁄èöî
);

199 
vútuÆ
 ~
	$q17_∑π_tsˇn_fûãr_t
()

202 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

203 
	}
}

207 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

210 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

211 
	`as£π
(
Ál£
);

214 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_BRAND
, (_part.P_BRAND));

215 
_¥∑π
->
	`gë_vÆue
(6, 
_∑π
.
P_CONTAINER
, (_part.P_CONTAINER));

217  
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd
Ë=0 && såcmp(_∑π.
P_CONTAINER
, 
_c⁄èöî
) == 0;

218 
	}
}

221 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

223 
q17_¥oje˘ed_∑π_tu∂e
 *
de°
;

224 
de°
 = 
Æig√d_ˇ°
<
q17_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

226 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

230 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

231 
	}
}

233 
q17_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

234  
√w
 
	`q17_∑π_tsˇn_fûãr_t
(*
this
);

235 
	}
}

237 
c_°r
 
	$to_°rög
() const {

238  
	`c_°r
("q17_part_tscan_filter_t()");

239 
	}
}

242 ˛as†
	cq17_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


244 
¥iv©e
:

245 
Sh‹eTPCHEnv
* 
_çchdb
;

246 
èbÀ_row_t
* 
	m_¥löe
;

247 
ªp_row_t
 
	m_º
;

249 
çch_löeôem_tu∂e
 
	m_löeôem
;

251 
	mpublic
:

252 
	$q17_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q17_öput_t
 &
ö
)

253 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

255 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

256 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

257 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

258 
_¥löe
->
_ªp
 = &
_º
;

261 
vútuÆ
 ~
	$q17_löeôem_tsˇn_fûãr_t
()

264 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

265 
	}
}

267 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

269 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

270 
	`as£π
(
Ál£
);

273  
åue
;

274 
	}
}

276 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

278 
q17_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q17_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

280 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

281 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

282 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

286 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

287 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

288 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

289 
	}
}

291 
q17_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

292  
√w
 
	`q17_löeôem_tsˇn_fûãr_t
(*
this
);

293 
	}
}

295 
c_°r
 
	$to_°rög
() const {

296  
	`c_°r
("q17_lineitem_tscan_filter_t()");

297 
	}
}

301 
	gq17_sub_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

303 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

305 
q17_sub_aggªg©e_t
()

306 : 
tu∂e_aggªg©e_t
((
q17_sub_aggªg©e_tu∂e
)), 
_exåa˘‹
((), 
off£tof
(
q17_¥oje˘ed_löeôem_sub_tu∂e
, 
L_PARTKEY
))

310 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

311  &
	g_exåa˘‹
;

314 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

315 
q17_sub_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q17_sub_aggªg©e_tu∂e>(
agg_d©a
);

316 
q17_¥oje˘ed_löeôem_sub_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q17_¥oje˘ed_löeôem_sub_tu∂e>(
t
.
d©a
);

318 
	gagg
->
	gL_QUANTITY_SUM
 +
öput
->
L_QUANTITY
;

319 
	gagg
->
	gL_COUNT
++;

321 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

322 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

323 
q17_sub_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q17_sub_aggªg©e_tu∂e>(
de°
.
d©a
);

324 
	gagg
->
	gAVG_QTY
 = 
agg
->
L_QUANTITY_SUM
.
to_doubÀ
(Ë/ágg->
L_COUNT
;

327 
vútuÆ
 
q17_sub_aggªg©e_t
* 
˛⁄e
() const {

328  
√w
 
q17_sub_aggªg©e_t
(*
this
);

330 
vútuÆ
 
c_°r
 
to_°rög
() const {

335 
	gq17_l_joö_p_t
 : 
public
 
tu∂e_joö_t
 {

337 
q17_l_joö_p_t
()

338 : 
tu∂e_joö_t
((
q17_¥oje˘ed_löeôem_tu∂e
),

339 
off£tof
(
q17_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
),

340 (
q17_¥oje˘ed_∑π_tu∂e
),

341 
off£tof
(
q17_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

343 (
q17_l_joö_p_tu∂e
))

347 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

348 
q17_l_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q17_l_joö_p_tu∂e>(
d
.
d©a
);

349 
q17_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q17_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

350 
q17_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q17_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

352 
	gde°
->
	gP_PARTKEY
 = 
∑π
->
P_PARTKEY
;

353 
	gde°
->
	gL_EXTENDEDPRICE
 = 
löe
->
L_EXTENDEDPRICE
;

354 
	gde°
->
	gL_QUANTITY
 = 
löe
->
L_QUANTITY
;

359 
vútuÆ
 
q17_l_joö_p_t
* 
˛⁄e
() const {

360  
√w
 
q17_l_joö_p_t
(*
this
);

363 
vútuÆ
 
c_°r
 
to_°rög
() const {

364  
c_°r
("join LINEITEM, PART; select P_PARTKEY, L_EXTENDEDPRICE, L_QUANTITY");

368 
	gq17_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

370 
q17_föÆ_joö_t
()

371 : 
tu∂e_joö_t
((
q17_sub_aggªg©e_tu∂e
),

372 
off£tof
(
q17_sub_aggªg©e_tu∂e
, 
L_PARTKEY
),

373 (
q17_l_joö_p_tu∂e
),

374 
off£tof
(
q17_l_joö_p_tu∂e
, 
P_PARTKEY
),

376 (
q17_Æl_joö_tu∂e
))

380 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

381 
q17_Æl_joö_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q17_Æl_joö_tu∂e>(
d
.
d©a
);

382 
q17_sub_aggªg©e_tu∂e
 *
	gsub
 = 
Æig√d_ˇ°
<q17_sub_aggªg©e_tu∂e>(
l
.
d©a
);

383 
q17_l_joö_p_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q17_l_joö_p_tu∂e>(
r
.
d©a
);

385 
	gde°
->
	gAVG_QTY
 = 
sub
->
AVG_QTY
;

386 
	gde°
->
	gL_EXTENDEDPRICE
 = 
right
->
L_EXTENDEDPRICE
;

387 
	gde°
->
	gL_QUANTITY
 = 
right
->
L_QUANTITY
;

392 
vútuÆ
 
q17_föÆ_joö_t
* 
˛⁄e
() const {

393  
√w
 
q17_föÆ_joö_t
(*
this
);

396 
vútuÆ
 
c_°r
 
to_°rög
() const {

397  
c_°r
("join LINEITEM sub, LINEITEM_PART; select sub.AVG_QTY, L_EXTENDEDPRICE, L_QUANTITY");

401 
	gq17_joö_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

403 
q17_joö_fûãr_t
()

404 : 
tu∂e_fûãr_t
((
q17_Æl_joö_tu∂e
))

408 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

409 
q17_Æl_joö_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q17_Æl_joö_tu∂e>(
öput
.
d©a
);

410  
	gö
->
	gL_QUANTITY
 < 0.2 * in->
	gAVG_QTY
;

413 
vútuÆ
 
q17_joö_fûãr_t
* 
˛⁄e
() const {

414  
√w
 
q17_joö_fûãr_t
(*
this
);

417 
vútuÆ
 
c_°r
 
to_°rög
() const {

418  
c_°r
("q17_join_filter_t");

422 
	gq17_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

424 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

426 
q17_aggªg©e_t
()

427 : 
tu∂e_aggªg©e_t
((
q17_föÆ_tu∂e
)), 
_exåa˘‹
(0, 0)

431 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

432  &
	g_exåa˘‹
;

435 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

436 
q17_föÆ_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q17_föÆ_tu∂e>(
agg_d©a
);

437 
q17_Æl_joö_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q17_Æl_joö_tu∂e>(
t
.
d©a
);

438 
	gagg
->
	gAVG_YEARLY
 +
ö
->
L_EXTENDEDPRICE
;

440 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

441 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

442 
q17_föÆ_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q17_föÆ_tu∂e>(
de°
.
d©a
);

443 
	gagg
->
	gAVG_YEARLY
 /= 7.0;

445 
vútuÆ
 
q17_aggªg©e_t
* 
˛⁄e
() const {

446  
√w
 
q17_aggªg©e_t
(*
this
);

448 
vútuÆ
 
c_°r
 
to_°rög
() const {

455 ˛as†
	cçch_q17_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

457 
public
:

459 
vútuÆ
 
	$begö
() {

460 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q17 %s\n",

464 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

465 
q17_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q17_föÆ_tu∂e>(
ouçut
.
d©a
);

467 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q17 %.4f\n", 
agg
->
AVG_YEARLY
.
	`to_doubÀ
());

468 
	}
}

479 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q17
(c⁄° 
x˘_id
,

480 
q17_öput_t
& 
ö
)

482 
	`TRACE
–
TRACE_ALWAYS
, "********** q19 *********\n");

484 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

485 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

490 
tu∂e_fifo
* 
q17_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_¥oje˘ed_∑π_tu∂e
));

491 
∑ckë_t
* 
q17_∑π_tsˇn_∑ckë
 =

492 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

493 
q17_∑π_buf„r
,

494 
√w
 
	`q17_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

495 
this
->
	`db
(),

496 
_µ¨t_desc
.
	`gë
(),

497 
px˘
);

500 
tu∂e_fifo
* 
q17_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_¥oje˘ed_löeôem_tu∂e
));

501 
∑ckë_t
* 
q17_löeôem_tsˇn_∑ckë
 =

502 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

503 
q17_löeôem_buf„r
,

504 
√w
 
	`q17_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

505 
this
->
	`db
(),

506 
_∂öeôem_desc
.
	`gë
(),

507 
px˘
);

510 
tu∂e_fifo
* 
q17_löeôem_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_¥oje˘ed_löeôem_sub_tu∂e
));

511 
∑ckë_t
* 
q17_löeôem_sub_tsˇn_∑ckë
 =

512 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN subquery",

513 
q17_löeôem_sub_buf„r
,

514 
√w
 
	`q17_löeôem_sub_tsˇn_fûãr_t
(
this
, 
ö
),

515 
this
->
	`db
(),

516 
_∂öeôem_desc
.
	`gë
(),

517 
px˘
);

521 
tu∂e_fifo
* 
q17_sub_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_sub_aggªg©e_tu∂e
));

522 
∑ckë_t
* 
q17_sub_aggªg©e_∑ckë
 =

523 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUB AVG AGGREGATION",

524 
q17_sub_aggªg©e_buf„r
,

525 
√w
 
	`åivül_fûãr_t
((
q17_sub_aggªg©e_tu∂e
)),

526 
q17_löeôem_sub_tsˇn_∑ckë
,

527 
√w
 
	`q17_sub_aggªg©e_t
(),

528 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q17_¥oje˘ed_löeôem_sub_tu∂e
, 
L_PARTKEY
)),

529 
√w
 
	`öt_key_com∑ª_t
());

533 
tu∂e_fifo
* 
q17_l_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_l_joö_p_tu∂e
));

534 
∑ckë_t
* 
q17_l_joö_p_∑ckë
 =

535 
√w
 
	`hash_joö_∑ckë_t
("lineitem -Öart HJOIN",

536 
q17_l_joö_p_buf„r
,

537 
√w
 
	`åivül_fûãr_t
((
q17_l_joö_p_tu∂e
)),

538 
q17_löeôem_tsˇn_∑ckë
,

539 
q17_∑π_tsˇn_∑ckë
,

540 
√w
 
	`q17_l_joö_p_t
());

543 
tu∂e_fifo
* 
q17_Æl_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_Æl_joö_tu∂e
));

544 
∑ckë_t
* 
q17_Æl_joö_∑ckë
 =

545 
√w
 
	`hash_joö_∑ckë_t
("lineitem sub -Üineitem_part HJOIN",

546 
q17_Æl_joö_buf„r
,

547 
√w
 
	`q17_joö_fûãr_t
(),

548 
q17_sub_aggªg©e_∑ckë
,

549 
q17_l_joö_p_∑ckë
,

550 
√w
 
	`q17_föÆ_joö_t
());

554 
tu∂e_fifo
* 
q17_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q17_föÆ_tu∂e
));

555 
∑ckë_t
* 
q17_föÆ_∑ckë
 =

556 
√w
 
	`aggªg©e_∑ckë_t
("SUM AGGREGATION",

557 
q17_föÆ_buf„r
,

558 
√w
 
	`åivül_fûãr_t
((
q17_föÆ_tu∂e
)),

559 
√w
 
	`q17_aggªg©e_t
(),

560 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

561 
q17_Æl_joö_∑ckë
);

564 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

565 
q17_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

566 
q17_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

567 
q17_löeôem_sub_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

568 
q17_sub_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

569 
q17_l_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

570 
q17_Æl_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

571 
q17_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

575 
çch_q17_¥o˚ss_tu∂e_t
 
±
;

577 
	`¥o˚ss_quîy
(
q17_föÆ_∑ckë
, 
±
);

579 
dp
->
	`quîy_°©e_de°roy
(
qs
);

582  (
RCOK
);

583 
	}
}

585 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q18.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

86 
	sq18_¥oje˘ed_löeôem_tu∂e
 {

87 
	mL_ORDERKEY
;

88 
decimÆ
 
	mL_QUANTITY
;

91 
	sq18_¥oje˘ed_‹dîs_tu∂e
 {

92 
	mO_ORDERKEY
;

93 
	mO_CUSTKEY
;

94 
	mO_ORDERDATE
[
STRSIZE
(10)];

95 
decimÆ
 
	mO_TOTALPRICE
;

98 
	sq18_¥oje˘ed_cu°omî_tu∂e
 {

99 
	mC_CUSTKEY
;

100 
	mC_NAME
[
STRSIZE
(25)];

104 
	sq18_l_joö_o_tu∂e
 {

105 
	mO_ORDERKEY
;

106 
	mO_CUSTKEY
;

107 
	mO_ORDERDATE
[
STRSIZE
(10)];

108 
decimÆ
 
	mO_TOTALPRICE
;

109 
decimÆ
 
	mL_QUANTITY
;

112 
	sq18_föÆ_tu∂e
 {

113 
	mO_ORDERDATE
[
STRSIZE
(10)];

114 
decimÆ
 
	mO_TOTALPRICE
;

115 
	mC_NAME
[
STRSIZE
(25)];

116 
	mC_CUSTKEY
;

117 
	mO_ORDERKEY
;

118 
decimÆ
 
	mL_QUANTITY
;

121 
	sq18_s‹t_key
 {

122 
	mO_ORDERDATE
[
STRSIZE
(10)];

123 
decimÆ
 
	mO_TOTALPRICE
;

127 ˛as†
	cq18_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


129 
¥iv©e
:

130 
Sh‹eTPCHEnv
* 
_çchdb
;

131 
èbÀ_row_t
* 
	m_¥löe
;

132 
ªp_row_t
 
	m_º
;

134 
çch_löeôem_tu∂e
 
	m_löeôem
;

136 
	mpublic
:

137 
	$q18_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q18_öput_t
 &
ö
)

138 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

140 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

141 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

142 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

143 
_¥löe
->
_ªp
 = &
_º
;

146 
vútuÆ
 ~
	$q18_löeôem_tsˇn_fûãr_t
()

149 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

150 
	}
}

152 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

154 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

155 
	`as£π
(
Ál£
);

158  
åue
;

159 
	}
}

161 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

163 
q18_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

165 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

166 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

170 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

171 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

172 
	}
}

174 
q18_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

175  
√w
 
	`q18_löeôem_tsˇn_fûãr_t
(*
this
);

176 
	}
}

178 
c_°r
 
	$to_°rög
() const {

179  
	`c_°r
("q18_lineitem_tscan_filter_t()");

180 
	}
}

183 ˛as†
	cq18_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


185 
¥iv©e
:

186 
Sh‹eTPCHEnv
* 
_çchdb
;

187 
èbÀ_row_t
* 
	m_¥‹dîs
;

188 
ªp_row_t
 
	m_º
;

190 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

192 
	mpublic
:

193 
	$q18_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q18_öput_t
 &
ö
)

194 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

196 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

197 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

198 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

199 
_¥‹dîs
->
_ªp
 = &
_º
;

202 
vútuÆ
 ~
	$q18_‹dîs_tsˇn_fûãr_t
()

205 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

206 
	}
}

208 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

210 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

211 
	`as£π
(
Ál£
);

214  
åue
;

215 
	}
}

217 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

219 
q18_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

221 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

222 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

223 
_¥‹dîs
->
	`gë_vÆue
(3, 
_‹dîs
.
O_TOTALPRICE
);

224 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, (_orders.O_ORDERDATE));

228 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

229 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

230 
de°
->
O_TOTALPRICE
 = 
_‹dîs
.O_TOTALPRICE;

231 
	`mem˝y
(
de°
->
O_ORDERDATE
, 
_‹dîs
.O_ORDERDATE, (dest->O_ORDERDATE));

232 
	}
}

234 
q18_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

235  
√w
 
	`q18_‹dîs_tsˇn_fûãr_t
(*
this
);

236 
	}
}

238 
c_°r
 
	$to_°rög
() const {

239  
	`c_°r
("q18_orders_tscan_filter_t()");

240 
	}
}

243 ˛as†
	cq18_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


245 
¥iv©e
:

246 
Sh‹eTPCHEnv
* 
_çchdb
;

247 
èbÀ_row_t
* 
	m_¥cu°
;

248 
ªp_row_t
 
	m_º
;

250 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

252 
	mpublic
:

253 
	$q18_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q18_öput_t
 &
ö
)

254 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

256 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

257 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

258 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

259 
_¥cu°
->
_ªp
 = &
_º
;

262 
vútuÆ
 ~
	$q18_cu°omî_tsˇn_fûãr_t
()

265 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

266 
	}
}

268 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

270 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

271 
	`as£π
(
Ál£
);

274  
åue
;

275 
	}
}

277 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

279 
q18_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

281 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

282 
_¥cu°
->
	`gë_vÆue
(1, 
_cu°omî
.
C_NAME
, (_customer.C_NAME));

286 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

287 
	`mem˝y
(
de°
->
C_NAME
, 
_cu°omî
.C_NAME, (dest->C_NAME));

288 
	}
}

290 
q18_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

291  
√w
 
	`q18_cu°omî_tsˇn_fûãr_t
(*
this
);

292 
	}
}

294 
c_°r
 
	$to_°rög
() const {

295  
	`c_°r
("q18_customer_tscan_filter_t");

296 
	}
}

300 
	gq18_l_joö_o_t
 : 
public
 
tu∂e_joö_t
 {

302 
q18_l_joö_o_t
()

303 : 
tu∂e_joö_t
((
q18_¥oje˘ed_löeôem_tu∂e
),

304 
off£tof
(
q18_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
),

305 (
q18_¥oje˘ed_‹dîs_tu∂e
),

306 
off£tof
(
q18_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

308 (
q18_l_joö_o_tu∂e
))

312 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

313 
q18_l_joö_o_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q18_l_joö_o_tu∂e>(
d
.
d©a
);

314 
q18_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

315 
q18_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dî
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_‹dîs_tu∂e>(
r
.
d©a
);

317 
	gde°
->
	gL_QUANTITY
 = 
löe
->
L_QUANTITY
;

318 
mem˝y
(
de°
->
O_ORDERDATE
, 
‹dî
->O_ORDERDATE, (dest->O_ORDERDATE));

319 
	gde°
->
	gO_ORDERKEY
 = 
‹dî
->
O_ORDERKEY
;

320 
	gde°
->
	gO_TOTALPRICE
 = 
‹dî
->
O_TOTALPRICE
;

321 
	gde°
->
	gO_CUSTKEY
 = 
‹dî
->
O_CUSTKEY
;

327 
vútuÆ
 
q18_l_joö_o_t
* 
˛⁄e
() const {

328  
√w
 
q18_l_joö_o_t
(*
this
);

331 
vútuÆ
 
c_°r
 
to_°rög
() const {

332  
c_°r
("join LINEITEM, ORDERS; select L_QUANTITY, O_ORDERDATE, O_ORDERKEY, O_TOTALPRICE");

336 
	gq18_l_o_joö_c_t
 : 
public
 
tu∂e_joö_t
 {

338 
q18_l_o_joö_c_t
()

339 : 
tu∂e_joö_t
((
q18_l_joö_o_tu∂e
),

340 
off£tof
(
q18_l_joö_o_tu∂e
, 
O_CUSTKEY
),

341 (
q18_¥oje˘ed_cu°omî_tu∂e
),

342 
off£tof
(
q18_¥oje˘ed_cu°omî_tu∂e
, 
C_CUSTKEY
),

344 (
q18_föÆ_tu∂e
))

348 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

349 
q18_föÆ_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q18_föÆ_tu∂e>(
d
.
d©a
);

350 
q18_l_joö_o_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q18_l_joö_o_tu∂e>(
l
.
d©a
);

351 
q18_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_cu°omî_tu∂e>(
r
.
d©a
);

353 
	gde°
->
	gC_CUSTKEY
 = 
cu°
->
C_CUSTKEY
;

354 
mem˝y
(
de°
->
C_NAME
, 
cu°
->C_NAME, (dest->C_NAME));

355 
	gde°
->
	gL_QUANTITY
 = 
À·
->
L_QUANTITY
;

356 
mem˝y
(
de°
->
O_ORDERDATE
, 
À·
->O_ORDERDATE, (dest->O_ORDERDATE));

357 
	gde°
->
	gO_ORDERKEY
 = 
À·
->
O_ORDERKEY
;

358 
	gde°
->
	gO_TOTALPRICE
 = 
À·
->
O_TOTALPRICE
;

364 
vútuÆ
 
q18_l_o_joö_c_t
* 
˛⁄e
() const {

365  
√w
 
q18_l_o_joö_c_t
(*
this
);

368 
vútuÆ
 
c_°r
 
to_°rög
() const {

369  
c_°r
("join LINEITEM_ORDERS, CUSTOMER; select C_CUSTKEY, C_NAME, L_QUANTITY, O_ORDERDATE, O_ORDERKEY, O_TOTALPRICE");

373 
	gq18_löeôem_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

375 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

377 
q18_löeôem_aggªg©e_t
()

378 : 
tu∂e_aggªg©e_t
((
q18_¥oje˘ed_löeôem_tu∂e
)), 
_exåa˘‹
(
deÁu…_key_exåa˘‹_t
((), 
off£tof
(q18_¥oje˘ed_löeôem_tu∂e, 
L_ORDERKEY
)))

382 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

383  &
	g_exåa˘‹
;

386 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

387 
q18_¥oje˘ed_löeôem_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_löeôem_tu∂e>(
agg_d©a
);

388 
q18_¥oje˘ed_löeôem_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_löeôem_tu∂e>(
t
.
d©a
);

390 
	gagg
->
	gL_QUANTITY
 +
öput
->
L_QUANTITY
;

392 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

393 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

395 
vútuÆ
 
q18_löeôem_aggªg©e_t
* 
˛⁄e
() const {

396  
√w
 
q18_löeôem_aggªg©e_t
(*
this
);

398 
vútuÆ
 
c_°r
 
to_°rög
() const {

404 
	gq18_qty_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

406 
decimÆ
 
_qu™tôy
;

408 
q18_qty_fûãr_t
(
decimÆ
 
qu™tôy
)

409 : 
tu∂e_fûãr_t
((
q18_¥oje˘ed_löeôem_tu∂e
)), 
_qu™tôy
(
qu™tôy
)

411 
TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nsum÷_qu™tôyË> %.2f\n", 
_qu™tôy
.
to_doubÀ
());

414 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

415 
q18_¥oje˘ed_löeôem_tu∂e
 *
	gtu∂e
 = 
Æig√d_ˇ°
<q18_¥oje˘ed_löeôem_tu∂e>(
öput
.
d©a
);

416  
	gtu∂e
->
	gL_QUANTITY
 > 
	g_qu™tôy
;

419 
vútuÆ
 
q18_qty_fûãr_t
* 
˛⁄e
() const {

420  
√w
 
q18_qty_fûãr_t
(*
this
);

423 
vútuÆ
 
c_°r
 
to_°rög
() const {

424  
c_°r
("q18_qty_filter_t");

428 
	gq18_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

430 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

432 
q18_aggªg©e_t
()

433 : 
tu∂e_aggªg©e_t
((
q18_föÆ_tu∂e
)), 
_exåa˘‹
(
deÁu…_key_exåa˘‹_t
((q18_final_tuple)))

437 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

438  &
	g_exåa˘‹
;

441 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

442 
mem˝y
(
agg_d©a
, 
t
.
d©a
, (agg_data));

444 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

445 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

447 
vútuÆ
 
q18_aggªg©e_t
* 
˛⁄e
() const {

448  
√w
 
q18_aggªg©e_t
(*
this
);

450 
vútuÆ
 
c_°r
 
to_°rög
() const {

455 
	gq18_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

457 
q18_key_exåa˘‹_t
()

458 : 
key_exåa˘‹_t
((
q18_föÆ_tu∂e
))

462 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

463 
q18_föÆ_tu∂e
 *
t
 = 
Æig√d_ˇ°
<q18_föÆ_tu∂e>(
key
);

465  
	gt
->
	gC_CUSTKEY
;

468 
vútuÆ
 
q18_key_exåa˘‹_t
* 
˛⁄e
() const {

469  
√w
 
q18_key_exåa˘‹_t
(*
this
);

473 
	gq18_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

475 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

476 
q18_föÆ_tu∂e
 *
	gk1
 = 
Æig√d_ˇ°
<q18_föÆ_tu∂e>(
key1
);

477 
q18_föÆ_tu∂e
 *
	gk2
 = 
Æig√d_ˇ°
<q18_föÆ_tu∂e>(
key2
);

479 
	gdiff_cu°key
 = 
k1
->
C_CUSTKEY
 - 
k2
->C_CUSTKEY;

481  (
	gdiff_cu°key
 !0 ? 
diff_cu°key
 : (
k1
->
O_ORDERKEY
 - 
k2
->O_ORDERKEY));

484 
vútuÆ
 
q18_key_com∑ª_t
* 
˛⁄e
() const {

485  
√w
 
q18_key_com∑ª_t
(*
this
);

489 
	gq18_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

491 
q18_s‹t_key_exåa˘‹_t
()

492 : 
key_exåa˘‹_t
((
q18_s‹t_key
), 
off£tof
(
q18_föÆ_tu∂e
, 
O_ORDERDATE
))

496 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

497 
q18_s‹t_key
 *
	gk
 = 
Æig√d_ˇ°
<q18_s‹t_key>(
key
);

498  - 
	gk
->
	gO_TOTALPRICE
.
to_öt
();

501 
vútuÆ
 
q18_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

502  
√w
 
q18_s‹t_key_exåa˘‹_t
(*
this
);

506 
	gq18_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

508 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

509 
q18_s‹t_key
 *
	gk1
 = 
Æig√d_ˇ°
<q18_s‹t_key>(
key1
);

510 
q18_s‹t_key
 *
	gk2
 = 
Æig√d_ˇ°
<q18_s‹t_key>(
key2
);

512 
time_t
 
	gd1
 = 
°r_to_timë
(
k1
->
O_ORDERDATE
);

513 
time_t
 
	gd2
 = 
°r_to_timë
(
k2
->
O_ORDERDATE
);

515  (
	gk1
->
	gO_TOTALPRICE
 > 
	gk2
->O_TOTALPRICE ? -1 : (
k1
->
O_TOTALPRICE
 < 
k2
->O_TOTALPRICE ? 1 : 
d1
 - 
d2
));

518 
vútuÆ
 
q18_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

519  
√w
 
q18_s‹t_key_com∑ª_t
(*
this
);

526 ˛as†
	cçch_q18_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

528 
public
:

530 
vútuÆ
 
	$begö
() {

531 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q18 %s %s %s %s %s %s\n",

535 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

536 
q18_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q18_föÆ_tu∂e>(
ouçut
.
d©a
);

538 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q18 %†%d %d %†%.4‡%.4f\n", 
agg
->
C_NAME
,ágg->
C_CUSTKEY
,ágg->
O_ORDERKEY
,ágg->
O_ORDERDATE
,ágg->
O_TOTALPRICE
.
	`to_doubÀ
(),

539 
agg
->
L_QUANTITY
.
	`to_doubÀ
());

540 
	}
}

551 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q18
(c⁄° 
x˘_id
,

552 
q18_öput_t
& 
ö
)

554 
	`TRACE
–
TRACE_ALWAYS
, "********** q18 *********\n");

556 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

557 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

561 
tu∂e_fifo
* 
q18_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_¥oje˘ed_löeôem_tu∂e
));

562 
∑ckë_t
* 
q18_löeôem_tsˇn_∑ckë
 =

563 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

564 
q18_löeôem_buf„r
,

565 
√w
 
	`q18_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

566 
this
->
	`db
(),

567 
_∂öeôem_desc
.
	`gë
(),

568 
px˘
);

571 
tu∂e_fifo
* 
q18_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_¥oje˘ed_‹dîs_tu∂e
));

572 
∑ckë_t
* 
q18_‹dîs_tsˇn_∑ckë
 =

573 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

574 
q18_‹dîs_buf„r
,

575 
√w
 
	`q18_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

576 
this
->
	`db
(),

577 
_p‹dîs_desc
.
	`gë
(),

578 
px˘
);

581 
tu∂e_fifo
* 
q18_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_¥oje˘ed_cu°omî_tu∂e
));

582 
∑ckë_t
* 
q18_cu°omî_tsˇn_∑ckë
 =

583 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

584 
q18_cu°omî_buf„r
,

585 
√w
 
	`q18_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

586 
this
->
	`db
(),

587 
_pcu°omî_desc
.
	`gë
(),

588 
px˘
);

591 
tu∂e_fifo
* 
q18_löe_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_¥oje˘ed_löeôem_tu∂e
));

592 
∑ckë_t
* 
q18_löe_agg_∑ckë
 =

593 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("lineitem AGG",

594 
q18_löe_agg_buf„r
,

595 
√w
 
	`q18_qty_fûãr_t
((&
ö
)->
l_qu™tôy
),

596 
q18_löeôem_tsˇn_∑ckë
,

597 
√w
 
	`q18_löeôem_aggªg©e_t
(),

598 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q18_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
)),

599 
√w
 
	`öt_key_com∑ª_t
());

602 
tu∂e_fifo
* 
q18_l_joö_o_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_l_joö_o_tu∂e
));

603 
∑ckë_t
* 
q18_l_joö_o_∑ckë
 =

604 
√w
 
	`hash_joö_∑ckë_t
("lineitem - orders HJOIN",

605 
q18_l_joö_o_buf„r
,

606 
√w
 
	`åivül_fûãr_t
((
q18_l_joö_o_tu∂e
)),

607 
q18_löe_agg_∑ckë
,

608 
q18_‹dîs_tsˇn_∑ckë
,

609 
√w
 
	`q18_l_joö_o_t
());

612 
tu∂e_fifo
* 
q18_l_o_joö_c_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_föÆ_tu∂e
));

613 
∑ckë_t
* 
q18_l_o_joö_c_∑ckë
 =

614 
√w
 
	`hash_joö_∑ckë_t
("lineitem_orders - customer HJOIN",

615 
q18_l_o_joö_c_buf„r
,

616 
√w
 
	`åivül_fûãr_t
((
q18_föÆ_tu∂e
)),

617 
q18_l_joö_o_∑ckë
,

618 
q18_cu°omî_tsˇn_∑ckë
,

619 
√w
 
	`q18_l_o_joö_c_t
());

622 
tu∂e_fifo
* 
q18_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_föÆ_tu∂e
));

623 
∑ckë_t
* 
q18_agg_∑ckë
 =

624 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("GROUP BY AGG",

625 
q18_agg_buf„r
,

626 
√w
 
	`åivül_fûãr_t
((
q18_föÆ_tu∂e
)),

627 
q18_l_o_joö_c_∑ckë
,

628 
√w
 
	`q18_aggªg©e_t
(),

629 
√w
 
	`q18_key_exåa˘‹_t
(),

630 
√w
 
	`q18_key_com∑ª_t
());

633 
tu∂e_fifo
* 
q18_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q18_föÆ_tu∂e
));

634 
∑ckë_t
* 
q18_s‹t_∑ckë
 =

635 
√w
 
	`s‹t_∑ckë_t
("SORT",

636 
q18_s‹t_buf„r
,

637 
√w
 
	`åivül_fûãr_t
((
q18_föÆ_tu∂e
)),

638 
√w
 
	`q18_s‹t_key_exåa˘‹_t
(),

639 
√w
 
	`q18_s‹t_key_com∑ª_t
(),

640 
q18_agg_∑ckë
);

643 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

644 
q18_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

645 
q18_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

646 
q18_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

647 
q18_löe_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

648 
q18_l_joö_o_∑ckë
->
	`assign_quîy_°©e
(
qs
);

649 
q18_l_o_joö_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

650 
q18_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

651 
q18_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

655 
çch_q18_¥o˚ss_tu∂e_t
 
±
;

657 
	`¥o˚ss_quîy
(
q18_s‹t_∑ckë
, 
±
);

659 
dp
->
	`quîy_°©e_de°roy
(
qs
);

662  (
RCOK
);

663 
	}
}

664 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q19.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

85 
	sq19_¥oje˘ed_∑π_tu∂e
 {

86 
	mP_PARTKEY
;

87 
	mCASE
;

90 
	sq19_¥oje˘ed_löeôem_tu∂e
 {

91 
	mL_PARTKEY
;

92 
decimÆ
 
	mL_QUANTITY
;

93 
decimÆ
 
	mREVENUE
;

96 
	sq19_l_joö_p_tu∂e
 {

97 
decimÆ
 
	mREVENUE
;

98 
decimÆ
 
	mL_QUANTITY
;

99 
	mCASE
;

102 
	sq19_föÆ_tu∂e
 {

103 
decimÆ
 
	mREVENUE
;

107 ˛as†
	cq19_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


109 
¥iv©e
:

110 
Sh‹eTPCHEnv
* 
_çchdb
;

111 
èbÀ_row_t
* 
	m_¥∑π
;

112 
ªp_row_t
 
	m_º
;

115 
çch_∑π_tu∂e
 
	m_∑π
;

117 
	m_bønd1
[
STRSIZE
(10)];

118 
	m_bønd2
[
STRSIZE
(10)];

119 
	m_bønd3
[
STRSIZE
(10)];

121 
q19_öput_t
* 
	mq19_öput
;

123 
	mpublic
:

125 
	$q19_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q19_öput_t
 &
ö
)

126 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

128 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

129 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

130 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

131 
_¥∑π
->
_ªp
 = &
_º
;

133 
q19_öput
 = &
ö
;

134 
	`Bønd_to_§t
(
_bønd1
, 
q19_öput
->
p_bønd
[0]);

135 
	`Bønd_to_§t
(
_bønd2
, 
q19_öput
->
p_bønd
[1]);

136 
	`Bønd_to_§t
(
_bønd3
, 
q19_öput
->
p_bønd
[2]);

138 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nPART.P_BRAND = '%s' o∏PART.P_BRAND = '%s' o∏PART.P_BRAND = '%s'\n", 
_bønd1
, 
_bønd2
, 
_bønd3
);

141 
vútuÆ
 ~
	$q19_∑π_tsˇn_fûãr_t
()

144 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

145 
	}
}

149 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

152 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

153 
	`as£π
(
Ál£
);

156 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_BRAND
, (_part.P_BRAND));

157 
_¥∑π
->
	`gë_vÆue
(5, 
_∑π
.
P_SIZE
);

158 
_¥∑π
->
	`gë_vÆue
(6, 
_∑π
.
P_CONTAINER
, (_part.P_CONTAINER));

160 if(
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd1
) == 0) {

161  (
_∑π
.
P_SIZE
 >= 1 && _part.P_SIZE <= 5 &&

162 (
	`°rcmp
(
_∑π
.
P_CONTAINER
, "SM CASE") == 0 || strcmp(_part.P_CONTAINER, "SM BOX") == 0 ||

163 
	`°rcmp
(
_∑π
.
P_CONTAINER
, "SM PACK") == 0 || strcmp(_part.P_CONTAINER, "SM PKG") == 0));

165 if(
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd2
) == 0) {

166  (
_∑π
.
P_SIZE
 >= 1 && _part.P_SIZE <= 10 &&

167 (
	`°rcmp
(
_∑π
.
P_CONTAINER
, "MED BAG") == 0 || strcmp(_part.P_CONTAINER, "MED BOX") == 0 ||

168 
	`°rcmp
(
_∑π
.
P_CONTAINER
, "MED PACK") == 0 || strcmp(_part.P_CONTAINER, "MED PKG") == 0));

170 if(
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd3
) == 0) {

171  (
_∑π
.
P_SIZE
 >= 1 && _part.P_SIZE <= 15 &&

172 (
	`°rcmp
(
_∑π
.
P_CONTAINER
, "LG CASE") == 0 || strcmp(_part.P_CONTAINER, "LG BOX") == 0 ||

173 
	`°rcmp
(
_∑π
.
P_CONTAINER
, "LG PACK") == 0 || strcmp(_part.P_CONTAINER, "LG PKG") == 0));

176  
Ál£
;

178 
	}
}

181 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

183 
q19_¥oje˘ed_∑π_tu∂e
 *
de°
;

184 
de°
 = 
Æig√d_ˇ°
<
q19_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

186 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

187 
_¥∑π
->
	`gë_vÆue
(3, 
_∑π
.
P_BRAND
, (_part.P_BRAND));

191 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

192 if(
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd1
) == 0) {

193 
de°
->
CASE
 = 0;

195 if(
	`°rcmp
(
_∑π
.
P_BRAND
, 
_bønd2
) == 0) {

196 
de°
->
CASE
 = 1;

199 
de°
->
CASE
 = 2;

201 
	}
}

203 
q19_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

204  
√w
 
	`q19_∑π_tsˇn_fûãr_t
(*
this
);

205 
	}
}

207 
c_°r
 
	$to_°rög
() const {

208  
	`c_°r
("q19_part_tscan_filter_t()");

209 
	}
}

212 ˛as†
	cq19_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


214 
¥iv©e
:

215 
Sh‹eTPCHEnv
* 
_çchdb
;

216 
èbÀ_row_t
* 
	m_¥löe
;

217 
ªp_row_t
 
	m_º
;

219 
çch_löeôem_tu∂e
 
	m_löeôem
;

221 
	mpublic
:

222 
	$q19_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q19_öput_t
 &
ö
)

223 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

225 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

226 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

227 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

228 
_¥löe
->
_ªp
 = &
_º
;

231 
vútuÆ
 ~
	$q19_löeôem_tsˇn_fûãr_t
()

234 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

235 
	}
}

237 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

239 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

240 
	`as£π
(
Ál£
);

243 
_¥löe
->
	`gë_vÆue
(13, 
_löeôem
.
L_SHIPINSTRUCT
, (_lineitem.L_SHIPINSTRUCT));

244 
_¥löe
->
	`gë_vÆue
(14, 
_löeôem
.
L_SHIPMODE
, (_lineitem.L_SHIPMODE));

246  (
	`°rcmp
(
_löeôem
.
L_SHIPINSTRUCT
, "DELIVER IN PERSON"Ë=0 && (°rcmp(_löeôem.
L_SHIPMODE
, "AIR") == 0 || strcmp(_lineitem.L_SHIPMODE, "AIR REG") == 0));

247 
	}
}

249 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

251 
q19_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q19_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

253 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

254 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

255 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

256 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

260 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

261 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

262 
de°
->
REVENUE
 = 
_löeôem
.
L_EXTENDEDPRICE
 / 100.0 * (1 - _löeôem.
L_DISCOUNT
 / 100.0);

263 
	}
}

265 
q19_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

266  
√w
 
	`q19_löeôem_tsˇn_fûãr_t
(*
this
);

267 
	}
}

269 
c_°r
 
	$to_°rög
() const {

270  
	`c_°r
("q19_lineitem_tscan_filter_t()");

271 
	}
}

276 
	gq19_l_joö_p_t
 : 
public
 
tu∂e_joö_t
 {

278 
q19_l_joö_p_t
()

279 : 
tu∂e_joö_t
((
q19_¥oje˘ed_löeôem_tu∂e
),

280 
off£tof
(
q19_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
),

281 (
q19_¥oje˘ed_∑π_tu∂e
),

282 
off£tof
(
q19_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

284 (
q19_l_joö_p_tu∂e
))

288 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

289 
q19_l_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q19_l_joö_p_tu∂e>(
d
.
d©a
);

290 
q19_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q19_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

291 
q19_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q19_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

293 
	gde°
->
	gCASE
 = 
∑π
->
CASE
;

294 
	gde°
->
	gL_QUANTITY
 = 
löe
->
L_QUANTITY
;

295 
	gde°
->
	gREVENUE
 = 
löe
->
REVENUE
;

300 
vútuÆ
 
q19_l_joö_p_t
* 
˛⁄e
() const {

301  
√w
 
q19_l_joö_p_t
(*
this
);

304 
vútuÆ
 
c_°r
 
to_°rög
() const {

305  
c_°r
("join LINEITEM, PART; select CASE, L_QUANTITY, REVENUE");

310 
	gq19_joö_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

312 
_qu™tôy
[3];

314 
q19_joö_fûãr_t
(
qu™tôy
[3])

315 : 
tu∂e_fûãr_t
((
q19_l_joö_p_tu∂e
))

317 
mem˝y
(
_qu™tôy
, 
qu™tôy
, (_quantity));

318 
TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nCa£ 1: %d <l_qu™tôy <%d\nCa£ 2: %d <l_qu™tôy <%d\nCa£ 3: %d <l_qu™tôy <%d\n", 
_qu™tôy
[0], _quantity[0] + 10,

319 
_qu™tôy
[1], _quantity[1] + 10, _quantity[2], _quantity[2] + 10);

322 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

323 
q19_l_joö_p_tu∂e
 *
	gtu∂e
 = 
Æig√d_ˇ°
<q19_l_joö_p_tu∂e>(
öput
.
d©a
);

324  
	gtu∂e
->
	gL_QUANTITY
.
to_öt
(Ë>
_qu™tôy
[
tu∂e
->
CASE
] &&Åu∂e->
L_QUANTITY
.to_int() <= _quantity[tuple->CASE] + 10;

327 
vútuÆ
 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

328 
q19_föÆ_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q19_föÆ_tu∂e>(
d
.
d©a
);

329 
q19_l_joö_p_tu∂e
 *
	g§c
 = 
Æig√d_ˇ°
<q19_l_joö_p_tu∂e>(
s
.
d©a
);

331 
	gde°
->
	gREVENUE
 = 
§c
->
REVENUE
;

334 
vútuÆ
 
q19_joö_fûãr_t
* 
˛⁄e
() const {

335  
√w
 
q19_joö_fûãr_t
(*
this
);

338 
vútuÆ
 
c_°r
 
to_°rög
() const {

339  
c_°r
("q19_join_filter_t");

344 
	gq19_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

346 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

348 
q19_aggªg©e_t
()

349 : 
tu∂e_aggªg©e_t
((
q19_föÆ_tu∂e
)), 
_exåa˘‹
(0,0)

353 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

354  &
	g_exåa˘‹
;

357 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

358 
q19_föÆ_tu∂e
 *
	gd
 = 
Æig√d_ˇ°
<q19_föÆ_tu∂e>(
agg_d©a
);

359 
q19_föÆ_tu∂e
 *
	gs
 = 
Æig√d_ˇ°
<q19_föÆ_tu∂e>(
t
.
d©a
);

361 
	gd
->
	gREVENUE
 +
s
->
REVENUE
;

363 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

364 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

366 
vútuÆ
 
q19_aggªg©e_t
* 
˛⁄e
() const {

367  
√w
 
q19_aggªg©e_t
(*
this
);

369 
vútuÆ
 
c_°r
 
to_°rög
() const {

375 ˛as†
	cçch_q19_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

377 
public
:

379 
vútuÆ
 
	$begö
() {

380 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q19 %s\n",

384 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

385 
q19_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q19_föÆ_tu∂e>(
ouçut
.
d©a
);

387 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q19 %.4f\n", 
agg
->
REVENUE
.
	`to_doubÀ
());

388 
	}
}

399 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q19
(c⁄° 
x˘_id
,

400 
q19_öput_t
& 
ö
)

402 
	`TRACE
–
TRACE_ALWAYS
, "********** q19 *********\n");

404 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

405 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

410 
tu∂e_fifo
* 
q19_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q19_¥oje˘ed_löeôem_tu∂e
));

411 
∑ckë_t
* 
q19_löeôem_tsˇn_∑ckë
 =

412 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

413 
q19_löeôem_buf„r
,

414 
√w
 
	`q19_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

415 
this
->
	`db
(),

416 
_∂öeôem_desc
.
	`gë
(),

417 
px˘
);

420 
tu∂e_fifo
* 
q19_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q19_¥oje˘ed_∑π_tu∂e
));

421 
∑ckë_t
* 
q19_∑π_tsˇn_∑ckë
 =

422 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

423 
q19_∑π_buf„r
,

424 
√w
 
	`q19_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

425 
this
->
	`db
(),

426 
_µ¨t_desc
.
	`gë
(),

427 
px˘
);

431 
tu∂e_fifo
* 
q19_l_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q19_föÆ_tu∂e
));

432 
∑ckë_t
* 
q19_l_joö_p_∑ckë
 =

433 
√w
 
	`hash_joö_∑ckë_t
("lineitem -Öart HJOIN",

434 
q19_l_joö_p_buf„r
,

435 
√w
 
	`q19_joö_fûãr_t
((&
ö
)->
l_qu™tôy
),

436 
q19_löeôem_tsˇn_∑ckë
,

437 
q19_∑π_tsˇn_∑ckë
,

438 
√w
 
	`q19_l_joö_p_t
());

441 
tu∂e_fifo
* 
q19_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q19_föÆ_tu∂e
));

442 
∑ckë_t
* 
q19_agg_∑ckë
 =

443 
√w
 
	`aggªg©e_∑ckë_t
("SUM AGG",

444 
q19_agg_buf„r
,

445 
√w
 
	`åivül_fûãr_t
((
q19_föÆ_tu∂e
)),

446 
√w
 
	`q19_aggªg©e_t
(),

447 
√w
 
	`deÁu…_key_exåa˘‹_t
(0,0),

448 
q19_l_joö_p_∑ckë
);

451 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

452 
q19_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

453 
q19_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

454 
q19_l_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

455 
q19_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

459 
çch_q19_¥o˚ss_tu∂e_t
 
±
;

461 
	`¥o˚ss_quîy
(
q19_agg_∑ckë
, 
±
);

463 
dp
->
	`quîy_°©e_de°roy
(
qs
);

466  (
RCOK
);

467 
	}
}

469 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q2.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_utû.h
"

34 
	~"qpùe.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
çch
);

96 
	sq2_¥oje˘ed_∑π_tu∂e
 {

97 
	mP_PARTKEY
;

98 
	mP_MFGR
[
STRSIZE
(25)];

102 
	sq2_¥oje˘ed_∑πsuµ_tu∂e
 {

103 
	mPS_SUPPKEY
;

104 
	mPS_PARTKEY
;

105 
decimÆ
 
	mPS_SUPPLYCOST
;

109 
	sq2_¥oje˘ed_suµlõr_tu∂e
 {

110 
	mS_SUPPKEY
;

111 
	mS_NAME
[
STRSIZE
(25)];

112 
	mS_ADDRESS
[
STRSIZE
(40)];

113 
	mS_NATIONKEY
;

114 
	mS_PHONE
[
STRSIZE
(15)];

115 
decimÆ
 
	mS_ACCTBAL
;

116 
	mS_COMMENT
[
STRSIZE
(101)];

120 
	sq2_¥oje˘ed_«ti⁄_tu∂e
 {

121 
	mN_NATIONKEY
;

122 
	mN_NAME
[
STRSIZE
(25)];

123 
	mN_REGIONKEY
;

127 
	sq2_¥oje˘ed_ªgi⁄_tu∂e
 {

128 
	mR_REGIONKEY
;

133 
	sq2_¥oje˘ed_suµlõr_subquîy_tu∂e
 {

134 
	mS_SUPPKEY
;

135 
	mS_NATIONKEY
;

139 
	sq2_¥oje˘ed_«ti⁄_subquîy_tu∂e
 {

140 
	mN_NATIONKEY
;

141 
	mN_REGIONKEY
;

145 
	sq2_ps_joö_p_tu∂e
 {

146 
	mPS_SUPPKEY
;

147 
	mP_PARTKEY
;

148 
decimÆ
 
	mPS_SUPPLYCOST
;

149 
	mP_MFGR
[
STRSIZE
(25)];

152 
	sq2_s_joö_ps_p_tu∂e
 {

153 
	mP_PARTKEY
;

154 
decimÆ
 
	mPS_SUPPLYCOST
;

155 
	mP_MFGR
[
STRSIZE
(25)];

156 
	mS_NAME
[
STRSIZE
(25)];

157 
	mS_ADDRESS
[
STRSIZE
(40)];

158 
	mS_NATIONKEY
;

159 
	mS_PHONE
[
STRSIZE
(15)];

160 
decimÆ
 
	mS_ACCTBAL
;

161 
	mS_COMMENT
[
STRSIZE
(101)];

164 
	sq2_s_ps_p_joö_n_tu∂e
 {

165 
	mP_PARTKEY
;

166 
decimÆ
 
	mPS_SUPPLYCOST
;

167 
	mP_MFGR
[
STRSIZE
(25)];

168 
	mS_NAME
[
STRSIZE
(25)];

169 
	mS_ADDRESS
[
STRSIZE
(40)];

170 
	mS_PHONE
[
STRSIZE
(15)];

171 
decimÆ
 
	mS_ACCTBAL
;

172 
	mS_COMMENT
[
STRSIZE
(101)];

173 
	mN_NAME
[
STRSIZE
(25)];

174 
	mN_REGIONKEY
;

177 
	sq2_s_ps_p_n_joö_r_tu∂e
 {

178 
	mP_PARTKEY
;

179 
decimÆ
 
	mPS_SUPPLYCOST
;

180 
	mP_MFGR
[
STRSIZE
(25)];

181 
	mS_NAME
[
STRSIZE
(25)];

182 
	mS_ADDRESS
[
STRSIZE
(40)];

183 
	mS_PHONE
[
STRSIZE
(15)];

184 
decimÆ
 
	mS_ACCTBAL
;

185 
	mS_COMMENT
[
STRSIZE
(101)];

186 
	mN_NAME
[
STRSIZE
(25)];

189 
	sq2_n_joö_r_subquîy_tu∂e
 {

190 
	mN_NATIONKEY
;

193 
	sq2_s_joö_n_r_subquîy_tu∂e
 {

194 
	mS_SUPPKEY
;

197 
	sq2_ps_joö_s_n_r_subquîy_tu∂e
 {

198 
	mPS_PARTKEY
;

199 
decimÆ
 
	mPS_SUPPLYCOST
;

203 
	sq2_aggªg©e_tu∂e
 {

204 
decimÆ
 
	mS_ACCTBAL
;

205 
	mN_NAME
[
STRSIZE
(25)];

206 
	mS_NAME
[
STRSIZE
(25)];

207 
	mP_PARTKEY
;

208 
	mP_MFGR
[
STRSIZE
(25)];

209 
	mS_ADDRESS
[
STRSIZE
(40)];

210 
	mS_PHONE
[
STRSIZE
(15)];

211 
	mS_COMMENT
[
STRSIZE
(101)];

214 
	sq2_subquîy_aggªg©e_tu∂e
 {

215 
	mPS_PARTKEY
;

216 
decimÆ
 
	mPS_SUPPLYCOST
;

219 
	sq2_s‹t_key
 {

220 
decimÆ
 
	mS_ACCTBAL
;

221 
	mN_NAME
[
STRSIZE
(25)];

222 
	mS_NAME
[
STRSIZE
(25)];

223 
	mP_PARTKEY
;

227 ˛as†
	cq2_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


229 
¥iv©e
:

230 
Sh‹eTPCHEnv
* 
_çchdb
;

231 
èbÀ_row_t
* 
	m_¥∑π
;

232 
ªp_row_t
 
	m_º
;

235 
çch_∑π_tu∂e
 
	m_∑π
;

237 
	m_size
;

238 
	m_ty≥
[
STRSIZE
(25)];

240 
q2_öput_t
* 
	mq2_öput
;

242 
	mpublic
:

244 
	$q2_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

245 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

247 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

248 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

249 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

250 
_¥∑π
->
_ªp
 = &
_º
;

252 
q2_öput
 = &
ö
;

253 
_size
 = 
q2_öput
->
p_size
;

254 
	`ty≥s3_to_°r
(
_ty≥
, 
q2_öput
->
p_ty≥s3
);

256 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nPART.P_SIZE=%d\tPART.P_TYPEÜikê'%%%s'\n", 
_size
, 
_ty≥
);

259 
vútuÆ
 ~
	$q2_∑π_tsˇn_fûãr_t
()

262 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

263 
	}
}

267 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

270 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

271 
	`as£π
(
Ál£
);

274 
_¥∑π
->
	`gë_vÆue
(5, 
_∑π
.
P_SIZE
);

275 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_TYPE
, 25);

277  
_∑π
.
P_SIZE
 =
_size
 && 
	`°r°r
(_∑π.
P_TYPE
, 
_ty≥
);

278 
	}
}

281 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

283 
q2_¥oje˘ed_∑π_tu∂e
 *
de°
;

284 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

286 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

287 
_¥∑π
->
	`gë_vÆue
(2, 
_∑π
.
P_MFGR
, 25);

293 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

294 
	`mem˝y
(
de°
->
P_MFGR
, 
_∑π
.P_MFGR, (dest->P_MFGR));

296 
	}
}

298 
q2_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

299  
√w
 
	`q2_∑π_tsˇn_fûãr_t
(*
this
);

300 
	}
}

302 
c_°r
 
	$to_°rög
() const {

303  
	`c_°r
("q2_∑π_tsˇn_fûãr_t(%d, %s)", 
_size
, 
_ty≥
);

304 
	}
}

307 ˛as†
	cq2_∑πsuµ_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


309 
¥iv©e
:

310 
Sh‹eTPCHEnv
* 
_çchdb
;

311 
èbÀ_row_t
* 
	m_¥∑πsuµ
;

312 
ªp_row_t
 
	m_º
;

315 
çch_∑πsuµ_tu∂e
 
	m_∑πsuµ
;

317 
	mpublic
:

318 
	$q2_∑πsuµ_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

319 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

321 
_¥∑πsuµ
 = 
_çchdb
->
	`∑πsuµ_m™
()->
	`gë_tu∂e
();

322 
_º
.
	`£t_ts
(
_çchdb
->
	`∑πsuµ_m™
()->
	`ts
(),

323 
_çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
());

324 
_¥∑πsuµ
->
_ªp
 = &
_º
;

327 
vútuÆ
 ~
	$q2_∑πsuµ_tsˇn_fûãr_t
()

329 
_çchdb
->
	`∑πsuµ_m™
()->
	`give_tu∂e
(
_¥∑πsuµ
);

330 
	}
}

332 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

335 i‡(!
_çchdb
->
	`∑πsuµ_m™
()->
	`lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

336 
	`as£π
(
Ál£
);

339  
åue
;

340 
	}
}

343 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

345 
q2_¥oje˘ed_∑πsuµ_tu∂e
 *
de°
;

346 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_∑πsuµ_tu∂e
>(
d
.
d©a
);

348 
_¥∑πsuµ
->
	`gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

349 
_¥∑πsuµ
->
	`gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

350 
_¥∑πsuµ
->
	`gë_vÆue
(3, 
_∑πsuµ
.
PS_SUPPLYCOST
);

357 
de°
->
PS_SUPPKEY
 = 
_∑πsuµ
.PS_SUPPKEY;

358 
de°
->
PS_PARTKEY
 = 
_∑πsuµ
.PS_PARTKEY;

359 
de°
->
PS_SUPPLYCOST
 = 
_∑πsuµ
.PS_SUPPLYCOST;

361 
	}
}

363 
q2_∑πsuµ_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

364  
√w
 
	`q2_∑πsuµ_tsˇn_fûãr_t
(*
this
);

365 
	}
}

367 
c_°r
 
	$to_°rög
() const {

368  
	`c_°r
("q2_partsupp_tscan_filter_t()");

369 
	}
}

373 ˛as†
	cq2_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


375 
¥iv©e
:

376 
Sh‹eTPCHEnv
* 
_çchdb
;

377 
èbÀ_row_t
* 
	m_¥suµlõr
;

378 
ªp_row_t
 
	m_º
;

381 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

383 
	mpublic
:

384 
	$q2_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

385 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

387 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

388 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

389 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

390 
_¥suµlõr
->
_ªp
 = &
_º
;

393 
vútuÆ
 ~
	$q2_suµlõr_tsˇn_fûãr_t
()

395 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

396 
	}
}

398 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

401 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

402 
	`as£π
(
Ál£
);

405  
åue
;

406 
	}
}

409 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

411 
q2_¥oje˘ed_suµlõr_tu∂e
 *
de°
;

412 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_suµlõr_tu∂e
>(
d
.
d©a
);

415 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

416 
_¥suµlõr
->
	`gë_vÆue
(1, 
_suµlõr
.
S_NAME
, (_supplier.S_NAME));

417 
_¥suµlõr
->
	`gë_vÆue
(2, 
_suµlõr
.
S_ADDRESS
, (_supplier.S_ADDRESS));

418 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

419 
_¥suµlõr
->
	`gë_vÆue
(4, 
_suµlõr
.
S_PHONE
, (_supplier.S_PHONE));

420 
_¥suµlõr
->
	`gë_vÆue
(5, 
_suµlõr
.
S_ACCTBAL
);

421 
_¥suµlõr
->
	`gë_vÆue
(6, 
_suµlõr
.
S_COMMENT
, (_supplier.S_COMMENT));

426 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

427 
	`mem˝y
(
de°
->
S_NAME
, 
_suµlõr
.S_NAME, (dest->S_NAME));

428 
	`mem˝y
(
de°
->
S_ADDRESS
, 
_suµlõr
.S_ADDRESS, (dest->S_ADDRESS));

429 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

430 
	`mem˝y
(
de°
->
S_PHONE
, 
_suµlõr
.S_PHONE, (dest->S_PHONE));

431 
de°
->
S_ACCTBAL
 = 
_suµlõr
.S_ACCTBAL;

432 
	`mem˝y
(
de°
->
S_COMMENT
, 
_suµlõr
.S_COMMENT, (dest->S_COMMENT));

434 
	}
}

436 
q2_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

437  
√w
 
	`q2_suµlõr_tsˇn_fûãr_t
(*
this
);

438 
	}
}

440 
c_°r
 
	$to_°rög
() const {

441  
	`c_°r
("q2_supplier_tscan_filter_t()");

442 
	}
}

446 ˛as†
	cq2_suµlõr_subquîy_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


448 
¥iv©e
:

449 
Sh‹eTPCHEnv
* 
_çchdb
;

450 
èbÀ_row_t
* 
	m_¥suµlõr
;

451 
ªp_row_t
 
	m_º
;

454 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

456 
	mpublic
:

457 
	$q2_suµlõr_subquîy_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

458 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

460 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

461 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

462 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

463 
_¥suµlõr
->
_ªp
 = &
_º
;

466 
vútuÆ
 ~
	$q2_suµlõr_subquîy_tsˇn_fûãr_t
()

468 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

469 
	}
}

471 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

474 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

475 
	`as£π
(
Ál£
);

478  
åue
;

479 
	}
}

482 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

484 
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
 *
de°
;

485 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
>(
d
.
d©a
);

488 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

489 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

494 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

495 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

496 
	}
}

498 
q2_suµlõr_subquîy_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

499  
√w
 
	`q2_suµlõr_subquîy_tsˇn_fûãr_t
(*
this
);

500 
	}
}

502 
c_°r
 
	$to_°rög
() const {

503  
	`c_°r
("q2_supplier_subquery_tscan_filter_t()");

504 
	}
}

508 ˛as†
	cq2_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


510 
¥iv©e
:

511 
Sh‹eTPCHEnv
* 
_çchdb
;

512 
èbÀ_row_t
* 
	m_¥«ti⁄
;

513 
ªp_row_t
 
	m_º
;

516 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

518 
	mpublic
:

519 
	$q2_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

520 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

522 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

523 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

524 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

525 
_¥«ti⁄
->
_ªp
 = &
_º
;

528 
vútuÆ
 ~
	$q2_«ti⁄_tsˇn_fûãr_t
()

530 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

531 
	}
}

533 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

536 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

537 
	`as£π
(
Ál£
);

540  
åue
;

541 
	}
}

544 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

546 
q2_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

547 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

549 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

550 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

551 
_¥«ti⁄
->
	`gë_vÆue
(2, 
_«ti⁄
.
N_REGIONKEY
);

556 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

557 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

558 
de°
->
N_REGIONKEY
 = 
_«ti⁄
.N_REGIONKEY;

559 
	}
}

561 
q2_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

562  
√w
 
	`q2_«ti⁄_tsˇn_fûãr_t
(*
this
);

563 
	}
}

565 
c_°r
 
	$to_°rög
() const {

566  
	`c_°r
("q2_nation_tscan_filter_t()");

567 
	}
}

571 ˛as†
	cq2_«ti⁄_subquîy_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


573 
¥iv©e
:

574 
Sh‹eTPCHEnv
* 
_çchdb
;

575 
èbÀ_row_t
* 
	m_¥«ti⁄
;

576 
ªp_row_t
 
	m_º
;

579 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

581 
	mpublic
:

582 
	$q2_«ti⁄_subquîy_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

583 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

585 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

586 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

587 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

588 
_¥«ti⁄
->
_ªp
 = &
_º
;

591 
vútuÆ
 ~
	$q2_«ti⁄_subquîy_tsˇn_fûãr_t
()

593 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

594 
	}
}

596 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

599 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

600 
	`as£π
(
Ál£
);

603  
åue
;

604 
	}
}

607 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

609 
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
 *
de°
;

610 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
>(
d
.
d©a
);

612 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

613 
_¥«ti⁄
->
	`gë_vÆue
(2, 
_«ti⁄
.
N_REGIONKEY
);

618 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

619 
de°
->
N_REGIONKEY
 = 
_«ti⁄
.N_REGIONKEY;

620 
	}
}

622 
q2_«ti⁄_subquîy_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

623  
√w
 
	`q2_«ti⁄_subquîy_tsˇn_fûãr_t
(*
this
);

624 
	}
}

626 
c_°r
 
	$to_°rög
() const {

627  
	`c_°r
("q2_nation_subquery_tscan_filter_t()");

628 
	}
}

632 ˛as†
	cq2_ªgi⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


634 
¥iv©e
:

635 
Sh‹eTPCHEnv
* 
_çchdb
;

636 
èbÀ_row_t
* 
	m_¥ªgi⁄
;

637 
ªp_row_t
 
	m_º
;

640 
çch_ªgi⁄_tu∂e
 
	m_ªgi⁄
;

642 
	m_«me
[
STRSIZE
(25)];

643 
q2_öput_t
* 
	mq2_öput
;

645 
	mpublic
:

646 
	$q2_ªgi⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q2_öput_t
 &
ö
)

647 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`ªgi⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

649 
_¥ªgi⁄
 = 
_çchdb
->
	`ªgi⁄_m™
()->
	`gë_tu∂e
();

650 
_º
.
	`£t_ts
(
_çchdb
->
	`ªgi⁄_m™
()->
	`ts
(),

651 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

652 
_¥ªgi⁄
->
_ªp
 = &
_º
;

654 
q2_öput
 = &
ö
;

655 
	`ªgi⁄_to_°r
(
q2_öput
->
r_«me
, 
_«me
);

657 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nREGION.R_NAME = '%s'\n", 
_«me
);

660 
vútuÆ
 ~
	$q2_ªgi⁄_tsˇn_fûãr_t
()

662 
_çchdb
->
	`ªgi⁄_m™
()->
	`give_tu∂e
(
_¥ªgi⁄
);

663 
	}
}

665 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

668 i‡(!
_çchdb
->
	`ªgi⁄_m™
()->
	`lﬂd
(
_¥ªgi⁄
, 
öput
.
d©a
)) {

669 
	`as£π
(
Ál£
);

672 
_¥ªgi⁄
->
	`gë_vÆue
(1, 
_ªgi⁄
.
R_NAME
, 25);

674  (
	`°rcmp
(
_«me
, 
_ªgi⁄
.
R_NAME
) == 0);

675 
	}
}

678 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

680 
q2_¥oje˘ed_ªgi⁄_tu∂e
 *
de°
;

681 
de°
 = 
Æig√d_ˇ°
<
q2_¥oje˘ed_ªgi⁄_tu∂e
>(
d
.
d©a
);

683 
_¥ªgi⁄
->
	`gë_vÆue
(0, 
_ªgi⁄
.
R_REGIONKEY
);

688 
de°
->
R_REGIONKEY
 = 
_ªgi⁄
.R_REGIONKEY;

689 
	}
}

691 
q2_ªgi⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

692  
√w
 
	`q2_ªgi⁄_tsˇn_fûãr_t
(*
this
);

693 
	}
}

695 
c_°r
 
	$to_°rög
() const {

696  
	`c_°r
("q2_ªgi⁄_tsˇn_fûãr_t(%s)", 
_«me
);

697 
	}
}

701 
	gq2_ps_joö_p_t
 : 
public
 
tu∂e_joö_t


704 
q2_ps_joö_p_t
()

705 : 
tu∂e_joö_t
((
q2_¥oje˘ed_∑πsuµ_tu∂e
),

706 
off£tof
(
q2_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_PARTKEY
),

707 (
q2_¥oje˘ed_∑π_tu∂e
),

708 
off£tof
(
q2_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

710 (
q2_ps_joö_p_tu∂e
))

714 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

715 
q2_ps_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_ps_joö_p_tu∂e>(
d
.
d©a
);

716 
q2_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_∑πsuµ_tu∂e>(
l
.
d©a
);

717 
q2_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

719 
	gde°
->
	gPS_SUPPKEY
 = 
∑πsuµ
->
PS_SUPPKEY
;

720 
	gde°
->
	gPS_SUPPLYCOST
 = 
∑πsuµ
->
PS_SUPPLYCOST
;

721 
	gde°
->
	gP_PARTKEY
 = 
∑π
->
P_PARTKEY
;

722 
mem˝y
(
de°
->
P_MFGR
, 
∑π
->P_MFGR, (dest->P_MFGR));

724 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d: %d %d %.4‡%s\n", 
∑πsuµ
->
PS_PARTKEY
, 
∑π
->
P_PARTKEY
,Ö¨t->P_PARTKEY,Ö¨tsuµ->
PS_SUPPKEY
,Ö¨tsuµ->
PS_SUPPLYCOST
.
to_doubÀ
(),

725 
∑π
->
P_MFGR
);

728 
vútuÆ
 
q2_ps_joö_p_t
* 
˛⁄e
() const {

729  
√w
 
q2_ps_joö_p_t
(*
this
);

732 
vútuÆ
 
c_°r
 
to_°rög
() const {

733  
c_°r
("JOIN PARTSUPP, PART; SELECT P_PARTKEY, PS_SUPPKEY, PS_SUPPLYCOST, P_MFGR");

737 
	gq2_s_joö_ps_p_t
 : 
public
 
tu∂e_joö_t


740 
q2_s_joö_ps_p_t
()

741 : 
tu∂e_joö_t
((
q2_¥oje˘ed_suµlõr_tu∂e
),

742 
off£tof
(
q2_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

743 (
q2_ps_joö_p_tu∂e
),

744 
off£tof
(
q2_ps_joö_p_tu∂e
, 
PS_SUPPKEY
),

746 (
q2_s_joö_ps_p_tu∂e
))

750 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

751 
q2_s_joö_ps_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_s_joö_ps_p_tu∂e>(
d
.
d©a
);

752 
q2_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµlõr
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_suµlõr_tu∂e>(
l
.
d©a
);

753 
q2_ps_joö_p_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q2_ps_joö_p_tu∂e>(
r
.
d©a
);

755 
	gde°
->
	gS_NATIONKEY
 = 
suµlõr
->
S_NATIONKEY
;

756 
	gde°
->
	gP_PARTKEY
 = 
right
->
P_PARTKEY
;

757 
	gde°
->
	gPS_SUPPLYCOST
 = 
right
->
PS_SUPPLYCOST
;

758 
	gde°
->
	gS_ACCTBAL
 = 
suµlõr
->
S_ACCTBAL
;

759 
mem˝y
(
de°
->
S_NAME
, 
suµlõr
->S_NAME, (dest->S_NAME));

760 
mem˝y
(
de°
->
S_ADDRESS
, 
suµlõr
->S_ADDRESS, (dest->S_ADDRESS));

761 
mem˝y
(
de°
->
S_PHONE
, 
suµlõr
->S_PHONE, (dest->S_PHONE));

762 
mem˝y
(
de°
->
S_COMMENT
, 
suµlõr
->S_COMMENT, (dest->S_COMMENT));

763 
mem˝y
(
de°
->
P_MFGR
, 
right
->P_MFGR, (dest->P_MFGR));

770 
vútuÆ
 
q2_s_joö_ps_p_t
* 
˛⁄e
() const {

771  
√w
 
q2_s_joö_ps_p_t
(*
this
);

774 
vútuÆ
 
c_°r
 
to_°rög
() const {

775  
c_°r
("JOIN SUPPLIER, PARTSUPP_PART; SELECT S_SUPPKEY, PS_SUPPKEY, S_NATIONKEY, P_PARTKEY, PS_SUPPLYCOST, S_ACCTBAL, S_NAME, S_ADDRESS, S_PHONE, S_COMMENT, P_MFGR");

779 
	gq2_s_ps_p_joö_n_t
 : 
public
 
tu∂e_joö_t


782 
q2_s_ps_p_joö_n_t
()

783 : 
tu∂e_joö_t
((
q2_s_joö_ps_p_tu∂e
),

784 
off£tof
(
q2_s_joö_ps_p_tu∂e
, 
S_NATIONKEY
),

785 (
q2_¥oje˘ed_«ti⁄_tu∂e
),

786 
off£tof
(
q2_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

788 (
q2_s_ps_p_joö_n_tu∂e
))

792 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

793 
q2_s_ps_p_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_s_ps_p_joö_n_tu∂e>(
d
.
d©a
);

794 
q2_s_joö_ps_p_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q2_s_joö_ps_p_tu∂e>(
l
.
d©a
);

795 
q2_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

797 
	gde°
->
	gN_REGIONKEY
 = 
«ti⁄
->
N_REGIONKEY
;

798 
	gde°
->
	gP_PARTKEY
 = 
À·
->
P_PARTKEY
;

799 
	gde°
->
	gPS_SUPPLYCOST
 = 
À·
->
PS_SUPPLYCOST
;

800 
	gde°
->
	gS_ACCTBAL
 = 
À·
->
S_ACCTBAL
;

801 
mem˝y
(
de°
->
N_NAME
, 
«ti⁄
->N_NAME, (dest->N_NAME));

802 
mem˝y
(
de°
->
P_MFGR
, 
À·
->P_MFGR, (dest->P_MFGR));

803 
mem˝y
(
de°
->
S_ADDRESS
, 
À·
->S_ADDRESS, (dest->S_ADDRESS));

804 
mem˝y
(
de°
->
S_COMMENT
, 
À·
->S_COMMENT, (dest->S_COMMENT));

805 
mem˝y
(
de°
->
S_NAME
, 
À·
->S_NAME, (dest->S_NAME));

806 
mem˝y
(
de°
->
S_PHONE
, 
À·
->S_PHONE, (dest->S_PHONE));

808 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d: %d %d %.4‡%.4‡%†%†%†%†%†%s\n", 
À·
->
S_NATIONKEY
, 
«ti⁄
->
N_NATIONKEY
,Ç©i⁄->
N_REGIONKEY
,Üe·->
P_PARTKEY
,

809 
À·
->
PS_SUPPLYCOST
.
to_doubÀ
(),Üe·->
S_ACCTBAL
.to_doubÀ(), 
«ti⁄
->
N_NAME
,Üe·->
P_MFGR
,

810 
À·
->
S_ADDRESS
,Üe·->
S_COMMENT
,Üe·->
S_NAME
,Üe·->
S_PHONE
);

813 
vútuÆ
 
q2_s_ps_p_joö_n_t
* 
˛⁄e
() const {

814  
√w
 
q2_s_ps_p_joö_n_t
(*
this
);

817 
vútuÆ
 
c_°r
 
to_°rög
() const {

818  
c_°r
("JOIN SUPPLIER_PARTSUPP_PART, NATION; SELECT N_REGIONKEY, P_PARTKEY, PS_SUPPLYCOST, S_ACCTBAL, N_NAME, P_MFGR, S_ADDRESS, S_COMMENT, S_NAME, S_PHONE");

822 
	gq2_s_ps_p_n_joö_r_t
 : 
public
 
tu∂e_joö_t


825 
q2_s_ps_p_n_joö_r_t
()

826 : 
tu∂e_joö_t
((
q2_s_ps_p_joö_n_tu∂e
),

827 
off£tof
(
q2_s_ps_p_joö_n_tu∂e
, 
N_REGIONKEY
),

828 (
q2_¥oje˘ed_ªgi⁄_tu∂e
),

829 
off£tof
(
q2_¥oje˘ed_ªgi⁄_tu∂e
, 
R_REGIONKEY
),

831 (
q2_s_ps_p_n_joö_r_tu∂e
))

835 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

836 
q2_s_ps_p_n_joö_r_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_s_ps_p_n_joö_r_tu∂e>(
d
.
d©a
);

837 
q2_s_ps_p_joö_n_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q2_s_ps_p_joö_n_tu∂e>(
l
.
d©a
);

838 
q2_¥oje˘ed_ªgi⁄_tu∂e
 *
	gªgi⁄
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_ªgi⁄_tu∂e>(
r
.
d©a
);

840 
	gde°
->
	gP_PARTKEY
 = 
À·
->
P_PARTKEY
;

841 
	gde°
->
	gPS_SUPPLYCOST
 = 
À·
->
PS_SUPPLYCOST
;

842 
	gde°
->
	gS_ACCTBAL
 = 
À·
->
S_ACCTBAL
;

843 
mem˝y
(
de°
->
N_NAME
, 
À·
->N_NAME, (dest->N_NAME));

844 
mem˝y
(
de°
->
P_MFGR
, 
À·
->P_MFGR, (dest->P_MFGR));

845 
mem˝y
(
de°
->
S_ADDRESS
, 
À·
->S_ADDRESS, (dest->S_ADDRESS));

846 
mem˝y
(
de°
->
S_COMMENT
, 
À·
->S_COMMENT, (dest->S_COMMENT));

847 
mem˝y
(
de°
->
S_NAME
, 
À·
->S_NAME, (dest->S_NAME));

848 
mem˝y
(
de°
->
S_PHONE
, 
À·
->S_PHONE, (dest->S_PHONE));

850 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d: %d %.4‡%.4‡%†%†%†%†%†%s\n", 
À·
->
N_REGIONKEY
, 
ªgi⁄
->
R_REGIONKEY
,Üe·->
P_PARTKEY
,Üe·->
PS_SUPPLYCOST
.
to_doubÀ
(),

851 
À·
->
S_ACCTBAL
.
to_doubÀ
(),Üe·->
N_NAME
,Üe·->
P_MFGR
,Üe·->
S_ADDRESS
,Üe·->
S_COMMENT
,

852 
À·
->
S_NAME
,Üe·->
S_PHONE
);

855 
vútuÆ
 
q2_s_ps_p_n_joö_r_t
* 
˛⁄e
() const {

856  
√w
 
q2_s_ps_p_n_joö_r_t
(*
this
);

859 
vútuÆ
 
c_°r
 
to_°rög
() const {

860  
c_°r
("JOIN SUPPLIER_PARTSUPP_PART_NATION, REGION; SELECT P_PARTKEY, PS_SUPPLYCOST, S_ACCTBAL, N_NAME, P_MFGR, S_ADDRESS, S_COMMENT, S_NAME, S_PHONE");

864 
	gq2_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t


867 
q2_s‹t_key_exåa˘‹_t
()

868 : 
key_exåa˘‹_t
((
q2_s‹t_key
), 
off£tof
(q2_s‹t_key, 
S_ACCTBAL
))

872 
vútuÆ
 
exåa˘_höt
(c⁄° *
key
) const {

873 
q2_s‹t_key
 *
	gs‹t_key
 = 
Æig√d_ˇ°
<q2_s‹t_key>(
key
);

874  
	gs‹t_key
->
	gS_ACCTBAL
.
to_öt
();

877 
vútuÆ
 
q2_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

878  
√w
 
q2_s‹t_key_exåa˘‹_t
(*
this
);

881 
vútuÆ
 
c_°r
 
to_°rög
() const {

882  
c_°r
("q2_sort_key_extractor_t");

886 
	gq2_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t


889 
vútuÆ
 
›î©‹
()(c⁄° * 
k1
, c⁄° * 
	gk2
) const {

890 
q2_s‹t_key
 *
	gkey1
 = 
Æig√d_ˇ°
<q2_s‹t_key>(
k1
);

891 
q2_s‹t_key
 *
	gkey2
 = 
Æig√d_ˇ°
<q2_s‹t_key>(
k2
);

893 
	gdiff_ac˘bÆ
 = 
key1
->
S_ACCTBAL
 < 
key2
->S_ACCTBAL ? 1 : key1->S_ACCTBAL == key2->S_ACCTBAL ? 0 : -1;

894 
	gdiff_¬ame
 = 
°rcmp
(
key1
->
N_NAME
, 
key2
->N_NAME);

895 
	gdiff_¢ame
 = 
°rcmp
(
key1
->
S_NAME
, 
key2
->S_NAME);

896 
	gdiff_pkey
 = 
key1
->
P_PARTKEY
 - 
key2
->P_PARTKEY;

898  
	gdiff_ac˘bÆ
 !0 ? 
diff_ac˘bÆ
 : (
diff_¬ame
 !0 ? diff_¬amê: (
diff_¢ame
 !0 ? diff_¢amê: 
diff_pkey
));

901 
vútuÆ
 
q2_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

902  
√w
 
q2_s‹t_key_com∑ª_t
(*
this
);

909 
	gq2_n_joö_r_subquîy_t
 : 
public
 
tu∂e_joö_t
 {

911 
q2_n_joö_r_subquîy_t
()

912 : 
tu∂e_joö_t
((
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
),

913 
off£tof
(
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
, 
N_REGIONKEY
),

914 (
q2_¥oje˘ed_ªgi⁄_tu∂e
),

915 
off£tof
(
q2_¥oje˘ed_ªgi⁄_tu∂e
, 
R_REGIONKEY
),

917 (
q2_n_joö_r_subquîy_tu∂e
))

921 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

922 
q2_n_joö_r_subquîy_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_n_joö_r_subquîy_tu∂e>(
d
.
d©a
);

923 
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_«ti⁄_subquîy_tu∂e>(
l
.
d©a
);

924 
q2_¥oje˘ed_ªgi⁄_tu∂e
 *
	gªgi⁄
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_ªgi⁄_tu∂e>(
r
.
d©a
);

926 
	gde°
->
	gN_NATIONKEY
 = 
«ti⁄
->
N_NATIONKEY
;

928 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d: %d\n", 
«ti⁄
->
N_REGIONKEY
, 
ªgi⁄
->
R_REGIONKEY
,Ç©i⁄->
N_NATIONKEY
);

931 
vútuÆ
 
q2_n_joö_r_subquîy_t
* 
˛⁄e
() const {

932  
√w
 
q2_n_joö_r_subquîy_t
(*
this
);

935 
vútuÆ
 
c_°r
 
to_°rög
() const {

936  
c_°r
("JOIN NATION, REGION; SELECT N_NATIONKEY; subquery");

940 
	gq2_s_joö_n_r_subquîy_t
 : 
public
 
tu∂e_joö_t
 {

942 
q2_s_joö_n_r_subquîy_t
()

943 : 
tu∂e_joö_t
((
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
),

944 
off£tof
(
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
, 
S_NATIONKEY
),

945 (
q2_n_joö_r_subquîy_tu∂e
),

946 
off£tof
(
q2_n_joö_r_subquîy_tu∂e
, 
N_NATIONKEY
),

948 (
q2_s_joö_n_r_subquîy_tu∂e
))

952 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

953 
q2_s_joö_n_r_subquîy_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_s_joö_n_r_subquîy_tu∂e>(
d
.
d©a
);

954 
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_suµlõr_subquîy_tu∂e>(
l
.
d©a
);

955 
q2_n_joö_r_subquîy_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q2_n_joö_r_subquîy_tu∂e>(
r
.
d©a
);

957 
	gde°
->
	gS_SUPPKEY
 = 
suµ
->
S_SUPPKEY
;

962 
vútuÆ
 
q2_s_joö_n_r_subquîy_t
* 
˛⁄e
() const {

963  
√w
 
q2_s_joö_n_r_subquîy_t
(*
this
);

966 
vútuÆ
 
c_°r
 
to_°rög
() const {

967  
c_°r
("JOIN SUPPLIER, NATION_REGION; SELECT S_SUPPKEY; subquery");

971 
	gq2_ps_joö_s_n_r_subquîy_t
 : 
public
 
tu∂e_joö_t
 {

973 
q2_ps_joö_s_n_r_subquîy_t
()

974 : 
tu∂e_joö_t
((
q2_¥oje˘ed_∑πsuµ_tu∂e
),

975 
off£tof
(
q2_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_SUPPKEY
),

976 (
q2_s_joö_n_r_subquîy_tu∂e
),

977 
off£tof
(
q2_s_joö_n_r_subquîy_tu∂e
, 
S_SUPPKEY
),

979 (
q2_subquîy_aggªg©e_tu∂e
))

983 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

984 
q2_subquîy_aggªg©e_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
d
.
d©a
);

985 
q2_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q2_¥oje˘ed_∑πsuµ_tu∂e>(
l
.
d©a
);

986 
q2_s_joö_n_r_subquîy_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q2_s_joö_n_r_subquîy_tu∂e>(
r
.
d©a
);

988 
	gde°
->
	gPS_PARTKEY
 = 
∑πsuµ
->
PS_PARTKEY
;

989 
	gde°
->
	gPS_SUPPLYCOST
 = 
∑πsuµ
->
PS_SUPPLYCOST
;

991 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d: %d %.2f\n", 
∑πsuµ
->
PS_SUPPKEY
, 
right
->
S_SUPPKEY
,Ö¨tsuµ->
PS_PARTKEY
,Ö¨tsuµ->
PS_SUPPLYCOST
.
to_doubÀ
());

994 
vútuÆ
 
q2_ps_joö_s_n_r_subquîy_t
* 
˛⁄e
() const {

995  
√w
 
q2_ps_joö_s_n_r_subquîy_t
(*
this
);

998 
vútuÆ
 
c_°r
 
to_°rög
() const {

999  
c_°r
("JOIN PARTSUPP, SUPPLIER_NATION_REGION; SELECT PS_PARTKEY, PS_SUPPLYCOST; subquery");

1003 
	gq2_subquîy_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


1005 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

1007 
q2_subquîy_aggªg©e_t
()

1008 : 
tu∂e_aggªg©e_t
((
q2_subquîy_aggªg©e_tu∂e
))

1012 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

1013  &
_exåa˘‹
;

1016 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

1017 
q2_subquîy_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
agg_d©a
);

1018 
q2_subquîy_aggªg©e_tu∂e
 *
	g§c
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
s
.
d©a
);

1020 
	gagg
->
	gPS_PARTKEY
 = 
§c
->
PS_PARTKEY
;

1021 
	gagg
->
	gPS_SUPPLYCOST
 = (
agg
->
PS_SUPPLYCOST
 < 
§c
->PS_SUPPLYCOST ?ágg->PS_SUPPLYCOST : src->PS_SUPPLYCOST);

1024 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

1025 
mem˝y
(
d
.
d©a
, 
agg_d©a
, 
tu∂e_size
());

1026 
q2_subquîy_aggªg©e_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
agg_d©a
);

1027 
TRACE
(
TRACE_RECORD_FLOW
, "SUB_AGG: %d|%.2f\n", 
agg
->
PS_PARTKEY
,ágg->
PS_SUPPLYCOST
.
to_doubÀ
());

1030 
vútuÆ
 
q2_subquîy_aggªg©e_t
* 
˛⁄e
() const {

1031  
√w
 
q2_subquîy_aggªg©e_t
(*
this
);

1033 
vútuÆ
 
c_°r
 
to_°rög
() const {

1037 
vútuÆ
 
öô
(* 
agg_d©a
) {

1038 
mem£t
(
agg_d©a
, 0, 
tu∂e_size
());

1039 
q2_subquîy_aggªg©e_tu∂e
 *
	gtu∂e
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
agg_d©a
);

1040 
	gtu∂e
->
	gPS_SUPPLYCOST
 = 
decimÆ
(10000000);

1046 
	gq2_föÆ_joö_t
 : 
public
 
tu∂e_joö_t


1049 
q2_föÆ_joö_t
()

1050 : 
tu∂e_joö_t
((
q2_s_ps_p_n_joö_r_tu∂e
),

1051 
off£tof
(
q2_s_ps_p_n_joö_r_tu∂e
, 
P_PARTKEY
),

1052 (
q2_subquîy_aggªg©e_tu∂e
),

1053 
off£tof
(
q2_subquîy_aggªg©e_tu∂e
, 
PS_PARTKEY
),

1054 (Ë+ (
decimÆ
),

1055 (
q2_aggªg©e_tu∂e
))

1059 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

1060 
q2_aggªg©e_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q2_aggªg©e_tu∂e>(
d
.
d©a
);

1061 
q2_subquîy_aggªg©e_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q2_subquîy_aggªg©e_tu∂e>(
r
.
d©a
);

1062 
q2_s_ps_p_n_joö_r_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q2_s_ps_p_n_joö_r_tu∂e>(
l
.
d©a
);

1064 
	gde°
->
	gP_PARTKEY
 = 
À·
->
P_PARTKEY
;

1065 
	gde°
->
	gS_ACCTBAL
 = 
À·
->
S_ACCTBAL
;

1066 
mem˝y
(
de°
->
N_NAME
, 
À·
->N_NAME, (dest->N_NAME));

1067 
mem˝y
(
de°
->
P_MFGR
, 
À·
->P_MFGR, (dest->P_MFGR));

1068 
mem˝y
(
de°
->
S_ADDRESS
, 
À·
->S_ADDRESS, (dest->S_ADDRESS));

1069 
mem˝y
(
de°
->
S_COMMENT
, 
À·
->S_COMMENT, (dest->S_COMMENT));

1070 
mem˝y
(
de°
->
S_NAME
, 
À·
->S_NAME, (dest->S_NAME));

1071 
mem˝y
(
de°
->
S_PHONE
, 
À·
->S_PHONE, (dest->S_PHONE));

1073 
TRACE
(
TRACE_RECORD_FLOW
, "JOIN: %d=%d AND %.4f=%.4f: %d %.4‡%†%†%†%†%†%s\n", 
right
->
PS_PARTKEY
, 
À·
->
P_PARTKEY
,Ñight->
PS_SUPPLYCOST
.
to_doubÀ
(),

1074 
À·
->
PS_SUPPLYCOST
.
to_doubÀ
(),Üe·->
P_PARTKEY
,Üe·->
S_ACCTBAL
.to_double(),

1075 
À·
->
N_NAME
,Üe·->
P_MFGR
,Üe·->
S_ADDRESS
,Üe·->
S_COMMENT
,Üe·->
S_NAME
,

1076 
À·
->
S_PHONE
);

1079 
vútuÆ
 
q2_föÆ_joö_t
* 
˛⁄e
() const {

1080  
√w
 
q2_föÆ_joö_t
(*
this
);

1083 
vútuÆ
 
c_°r
 
to_°rög
() const {

1084  
c_°r
("JOIN SUBQUERY, MAIN_QUERY; SELECT P_PARTKEY, S_ACCTBAL, N_NAME, P_MFGR, S_ADDRESS, S_COMMENT, S_NAME, S_PHONE");

1088 
	gq2_t›100_fûãr_t
 : 
public
 
tu∂e_fûãr_t


1090 
_cou¡
;

1092 
q2_t›100_fûãr_t
()

1093 : 
tu∂e_fûãr_t
((
q2_aggªg©e_tu∂e
)), 
_cou¡
(0)

1097 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

1098  ++
	g_cou¡
 <= 100;

1101 
vútuÆ
 
q2_t›100_fûãr_t
* 
˛⁄e
() const {

1102  
√w
 
q2_t›100_fûãr_t
(*
this
);

1105 
vútuÆ
 
c_°r
 
to_°rög
() const {

1106  
c_°r
("q2_top100_filter_t");

1110 ˛as†
	cçch_q2_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


1112 
public
:

1114 
	$begö
() {

1115 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q2 ANSWER ...\n");

1116 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** S_ACCTBAL\tS_NAME\tN_NAME\tP_PARTKEY\tP_MFGR\tS_ADDRESS\tS_PHONE\tS_COMMENT\n");

1119 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

1120 
q2_aggªg©e_tu∂e
 *
tu∂e
 = 
Æig√d_ˇ°
<q2_aggªg©e_tu∂e>(
ouçut
.
d©a
);

1124 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** %.4f\t%s\t%s\t%d\t%s\t%s\t%s\t%s\n",

1125 
tu∂e
->
S_ACCTBAL
.
	`to_doubÀ
(),

1126 
tu∂e
->
S_NAME
,

1127 
tu∂e
->
N_NAME
,

1128 
tu∂e
->
P_PARTKEY
,

1129 
tu∂e
->
P_MFGR
,

1130 
tu∂e
->
S_ADDRESS
,

1131 
tu∂e
->
S_PHONE
,

1132 
tu∂e
->
S_COMMENT
);

1134 
	}
}

1137 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q2
(c⁄° 
x˘_id
,

1138 
q2_öput_t
& 
ö
)

1140 
	`TRACE
–
TRACE_ALWAYS
, "********** Q2 *********\n");

1143 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

1144 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

1148 
tu∂e_fifo
* 
q2_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_∑π_tu∂e
));

1149 
∑ckë_t
* 
q2_∑π_tsˇn_∑ckë
 =

1150 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PART",

1151 
q2_∑π_buf„r
,

1152 
√w
 
	`q2_∑π_tsˇn_fûãr_t
(
this
,
ö
),

1153 
this
->
	`db
(),

1154 
_µ¨t_desc
.
	`gë
(),

1155 
px˘


1160 
tu∂e_fifo
* 
q2_∑πsuµ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_∑πsuµ_tu∂e
));

1161 
∑ckë_t
* 
q2_∑πsuµ_tsˇn_∑ckë
 =

1162 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PARTSUPP",

1163 
q2_∑πsuµ_buf„r
,

1164 
√w
 
	`q2_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

1165 
this
->
	`db
(),

1166 
_µ¨tsuµ_desc
.
	`gë
(),

1167 
px˘
);

1170 
tu∂e_fifo
* 
q2_ps_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_ps_joö_p_tu∂e
));

1171 
∑ckë_t
* 
q2_ps_joö_p_∑ckë
 =

1172 
√w
 
	`hash_joö_∑ckë_t
("partsupp-part HJOIN",

1173 
q2_ps_joö_p_buf„r
,

1174 
√w
 
	`åivül_fûãr_t
((
q2_ps_joö_p_tu∂e
)),

1175 
q2_∑πsuµ_tsˇn_∑ckë
,

1176 
q2_∑π_tsˇn_∑ckë
,

1177 
√w
 
	`q2_ps_joö_p_t
());

1180 
tu∂e_fifo
* 
q2_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_suµlõr_tu∂e
));

1181 
∑ckë_t
* 
q2_suµlõr_tsˇn_∑ckë
 =

1182 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER",

1183 
q2_suµlõr_buf„r
,

1184 
√w
 
	`q2_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

1185 
this
->
	`db
(),

1186 
_psuµlõr_desc
.
	`gë
(),

1187 
px˘
);

1190 
tu∂e_fifo
* 
q2_s_joö_ps_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_s_joö_ps_p_tu∂e
));

1191 
∑ckë_t
* 
q2_s_joö_ps_p_∑kë
 =

1192 
√w
 
	`hash_joö_∑ckë_t
("supplier -Öartsupp_part HJOIN",

1193 
q2_s_joö_ps_p_buf„r
,

1194 
√w
 
	`åivül_fûãr_t
((
q2_s_joö_ps_p_tu∂e
)),

1195 
q2_suµlõr_tsˇn_∑ckë
,

1196 
q2_ps_joö_p_∑ckë
,

1197 
√w
 
	`q2_s_joö_ps_p_t
());

1200 
tu∂e_fifo
* 
q2_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_«ti⁄_tu∂e
));

1201 
∑ckë_t
* 
q2_«ti⁄_tsˇn_∑ckë
 =

1202 
√w
 
	`tsˇn_∑ckë_t
("TSCAN NATION",

1203 
q2_«ti⁄_buf„r
,

1204 
√w
 
	`q2_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

1205 
this
->
	`db
(),

1206 
_≤©i⁄_desc
.
	`gë
(),

1207 
px˘
);

1210 
tu∂e_fifo
* 
q2_s_ps_p_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_s_ps_p_joö_n_tu∂e
));

1211 
∑ckë_t
* 
q2_s_ps_p_joö_n_∑ckë
 =

1212 
√w
 
	`hash_joö_∑ckë_t
("supplier_partsupp_part -Çation HJOIN",

1213 
q2_s_ps_p_joö_n_buf„r
,

1214 
√w
 
	`åivül_fûãr_t
((
q2_s_ps_p_joö_n_tu∂e
)),

1215 
q2_s_joö_ps_p_∑kë
,

1216 
q2_«ti⁄_tsˇn_∑ckë
,

1217 
√w
 
	`q2_s_ps_p_joö_n_t
());

1220 
tu∂e_fifo
* 
q2_ªgi⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_ªgi⁄_tu∂e
));

1221 
∑ckë_t
* 
q2_ªgi⁄_tsˇn_∑ckë
 =

1222 
√w
 
	`tsˇn_∑ckë_t
("TSCAN REGION",

1223 
q2_ªgi⁄_buf„r
,

1224 
√w
 
	`q2_ªgi⁄_tsˇn_fûãr_t
(
this
, 
ö
),

1225 
this
->
	`db
(),

1226 
_¥egi⁄_desc
.
	`gë
(),

1227 
px˘
);

1230 
tu∂e_fifo
* 
q2_s_ps_p_n_joö_r_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_s_ps_p_n_joö_r_tu∂e
));

1231 
∑ckë_t
* 
q2_s_ps_p_n_joö_r_∑ckë
 =

1232 
√w
 
	`hash_joö_∑ckë_t
("supplier_partsupp_part_nation -Ñegion HJOIN",

1233 
q2_s_ps_p_n_joö_r_buf„r
,

1234 
√w
 
	`åivül_fûãr_t
((
q2_s_ps_p_n_joö_r_tu∂e
)),

1235 
q2_s_ps_p_joö_n_∑ckë
,

1236 
q2_ªgi⁄_tsˇn_∑ckë
,

1237 
√w
 
	`q2_s_ps_p_n_joö_r_t
());

1240 
tu∂e_fifo
* 
q2_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_s_ps_p_n_joö_r_tu∂e
));

1241 
∑ckë_t
* 
q2_s‹t_∑ckë
 =

1242 
√w
 
	`s‹t_∑ckë_t
("SORT",

1243 
q2_s‹t_buf„r
,

1244 
√w
 
	`åivül_fûãr_t
((
q2_s_ps_p_n_joö_r_tu∂e
)),

1245 
√w
 
	`q2_s‹t_key_exåa˘‹_t
(),

1246 
√w
 
	`q2_s‹t_key_com∑ª_t
(),

1247 
q2_s_ps_p_n_joö_r_∑ckë
);

1252 
tu∂e_fifo
* 
q2_«ti⁄_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_«ti⁄_subquîy_tu∂e
));

1253 
∑ckë_t
* 
q2_«ti⁄_tsˇn_subquîy_∑ckë
 =

1254 
√w
 
	`tsˇn_∑ckë_t
("TSCAN NATION subquery",

1255 
q2_«ti⁄_subquîy_buf„r
,

1256 
√w
 
	`q2_«ti⁄_subquîy_tsˇn_fûãr_t
(
this
, 
ö
),

1257 
this
->
	`db
(),

1258 
_≤©i⁄_desc
.
	`gë
(),

1259 
px˘
);

1262 
tu∂e_fifo
* 
q2_ªgi⁄_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_ªgi⁄_tu∂e
));

1263 
∑ckë_t
* 
q2_ªgi⁄_tsˇn_subquîy_∑ckë
 =

1264 
√w
 
	`tsˇn_∑ckë_t
("TSCAN REGION subquery",

1265 
q2_ªgi⁄_subquîy_buf„r
,

1266 
√w
 
	`q2_ªgi⁄_tsˇn_fûãr_t
(
this
, 
ö
),

1267 
this
->
	`db
(),

1268 
_¥egi⁄_desc
.
	`gë
(),

1269 
px˘
);

1272 
tu∂e_fifo
* 
q2_n_joö_r_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_n_joö_r_subquîy_tu∂e
));

1273 
∑ckë_t
* 
q2_n_joö_r_subquîy_∑ckë
 =

1274 
√w
 
	`hash_joö_∑ckë_t
("nation -Ñegion HJOIN subquery",

1275 
q2_n_joö_r_subquîy_buf„r
,

1276 
√w
 
	`åivül_fûãr_t
((
q2_n_joö_r_subquîy_tu∂e
)),

1277 
q2_«ti⁄_tsˇn_subquîy_∑ckë
,

1278 
q2_ªgi⁄_tsˇn_subquîy_∑ckë
,

1279 
√w
 
	`q2_n_joö_r_subquîy_t
());

1282 
tu∂e_fifo
* 
q2_suµlõr_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_suµlõr_subquîy_tu∂e
));

1283 
∑ckë_t
* 
q2_suµlõr_tsˇn_subquîy_∑ckë
 =

1284 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIER subquery",

1285 
q2_suµlõr_subquîy_buf„r
,

1286 
√w
 
	`q2_suµlõr_subquîy_tsˇn_fûãr_t
(
this
, 
ö
),

1287 
this
->
	`db
(),

1288 
_psuµlõr_desc
.
	`gë
(),

1289 
px˘
);

1292 
tu∂e_fifo
* 
q2_s_joö_n_r_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_s_joö_n_r_subquîy_tu∂e
));

1293 
∑ckë_t
* 
q2_s_joö_n_r_subquîy_∑ckë
 =

1294 
√w
 
	`hash_joö_∑ckë_t
("supplier -Çation_region HJOIN subquery",

1295 
q2_s_joö_n_r_subquîy_buf„r
,

1296 
√w
 
	`åivül_fûãr_t
((
q2_s_joö_n_r_subquîy_tu∂e
)),

1297 
q2_suµlõr_tsˇn_subquîy_∑ckë
,

1298 
q2_n_joö_r_subquîy_∑ckë
,

1299 
√w
 
	`q2_s_joö_n_r_subquîy_t
());

1302 
tu∂e_fifo
* 
q2_∑πsuµ_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_¥oje˘ed_∑πsuµ_tu∂e
));

1303 
∑ckë_t
* 
q2_∑πsuµ_tsˇn_subquîy_∑ckë
 =

1304 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PARTSUPP subquery",

1305 
q2_∑πsuµ_subquîy_buf„r
,

1306 
√w
 
	`q2_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

1307 
this
->
	`db
(),

1308 
_µ¨tsuµ_desc
.
	`gë
(),

1309 
px˘
);

1312 
tu∂e_fifo
* 
q2_ps_joö_s_n_r_subquîy_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_subquîy_aggªg©e_tu∂e
));

1313 
∑ckë_t
* 
q2_ps_joö_s_n_r_subquîy_∑ckë
 =

1314 
√w
 
	`hash_joö_∑ckë_t
("partsupp - supplier_nation_region HJOIN subquery",

1315 
q2_ps_joö_s_n_r_subquîy_buf„r
,

1316 
√w
 
	`åivül_fûãr_t
((
q2_subquîy_aggªg©e_tu∂e
)),

1317 
q2_∑πsuµ_tsˇn_subquîy_∑ckë
,

1318 
q2_s_joö_n_r_subquîy_∑ckë
,

1319 
√w
 
	`q2_ps_joö_s_n_r_subquîy_t
());

1322 
tu∂e_fifo
* 
q2_subquîy_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_subquîy_aggªg©e_tu∂e
));

1323 
∑ckë_t
* 
q2_subquîy_aggªg©e_∑ckë
 =

1324 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG: min(PS_PARTKEY)",

1325 
q2_subquîy_aggªg©e_buf„r
,

1326 
√w
 
	`åivül_fûãr_t
((
q2_subquîy_aggªg©e_tu∂e
)),

1327 
q2_ps_joö_s_n_r_subquîy_∑ckë
,

1328 
√w
 
	`q2_subquîy_aggªg©e_t
(),

1329 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q2_subquîy_aggªg©e_tu∂e
, 
PS_PARTKEY
)),

1330 
√w
 
	`öt_key_com∑ª_t
());

1335 
tu∂e_fifo
* 
q2_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q2_aggªg©e_tu∂e
));

1336 
∑ckë_t
* 
q2_föÆ_∑ckë
 =

1337 
√w
 
	`hash_joö_∑ckë_t
("subquery join main_query",

1338 
q2_föÆ_buf„r
,

1339 
√w
 
	`q2_t›100_fûãr_t
(),

1340 
q2_s‹t_∑ckë
,

1341 
q2_subquîy_aggªg©e_∑ckë
,

1342 
√w
 
	`q2_föÆ_joö_t
());

1344 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

1345 
q2_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1346 
q2_∑πsuµ_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1347 
q2_ps_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1348 
q2_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1349 
q2_s_joö_ps_p_∑kë
->
	`assign_quîy_°©e
(
qs
);

1350 
q2_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1351 
q2_s_ps_p_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1352 
q2_ªgi⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1353 
q2_s_ps_p_n_joö_r_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1354 
q2_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1356 
q2_«ti⁄_tsˇn_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1357 
q2_ªgi⁄_tsˇn_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1358 
q2_n_joö_r_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1359 
q2_suµlõr_tsˇn_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1360 
q2_s_joö_n_r_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1361 
q2_∑πsuµ_tsˇn_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1362 
q2_ps_joö_s_n_r_subquîy_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1363 
q2_subquîy_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1365 
q2_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1368 
çch_q2_¥o˚ss_tu∂e_t
 
±
;

1369 
	`¥o˚ss_quîy
(
q2_föÆ_∑ckë
, 
±
);

1370 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1372  (
RCOK
);

1374 
	}
}

1375 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q20.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

87 
	sq20_¥oje˘ed_∑πsuµ_tu∂e
 {

88 
	mPS_PARTKEY
;

89 
	mPS_SUPPKEY
;

90 
	mPS_AVAILQTY
;

93 
	sq20_¥oje˘ed_∑π_tu∂e
 {

94 
	mP_PARTKEY
;

97 
	sq20_¥oje˘ed_suµlõr_tu∂e
 {

98 
	mS_SUPPKEY
;

99 
	mS_NATIONKEY
;

100 
	mS_NAME
[
STRSIZE
(25)];

101 
	mS_ADDRESS
[
STRSIZE
(40)];

104 
	sq20_¥oje˘ed_«ti⁄_tu∂e
 {

105 
	mN_NATIONKEY
;

108 
	sq20_¥oje˘ed_löeôem_tu∂e
 {

109 
	mL_PARTKEY
;

110 
	mL_SUPPKEY
;

111 
decimÆ
 
	mL_QUANTITY
;

114 
	sq20_p_joö_ps_tu∂e
 {

115 
	mPS_PARTKEY
;

116 
	mPS_SUPPKEY
;

117 
	mPS_AVAILQTY
;

120 
	sq20_s_joö_n_tu∂e
 {

121 
	mS_SUPPKEY
;

122 
	mS_NAME
[
STRSIZE
(25)];

123 
	mS_ADDRESS
[
STRSIZE
(40)];

126 
	sq20_p_ps_joö_s_n_tu∂e
 {

127 
	mPS_PARTKEY
;

128 
	mS_SUPPKEY
;

129 
	mPS_AVAILQTY
;

130 
	mS_NAME
[
STRSIZE
(25)];

131 
	mS_ADDRESS
[
STRSIZE
(40)];

134 
	sq20_Æl_joös_tu∂e
 {

135 
	mS_SUPPKEY
;

136 
	mPS_AVAILQTY
;

137 
decimÆ
 
	mAVAILQTY_THRESHOLD
;

138 
	mS_NAME
[
STRSIZE
(25)];

139 
	mS_ADDRESS
[
STRSIZE
(40)];

142 
	sq20_föÆ_tu∂e
 {

143 
	mS_SUPPKEY
;

144 
	mS_NAME
[
STRSIZE
(25)];

145 
	mS_ADDRESS
[
STRSIZE
(40)];

149 ˛as†
	cq20_∑πsuµ_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


151 
¥iv©e
:

152 
Sh‹eTPCHEnv
* 
_çchdb
;

153 
èbÀ_row_t
* 
	m_¥∑πsuµ
;

154 
ªp_row_t
 
	m_º
;

157 
çch_∑πsuµ_tu∂e
 
	m_∑πsuµ
;

159 
	mpublic
:

160 
	$q20_∑πsuµ_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q20_öput_t
 &
ö
)

161 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

163 
_¥∑πsuµ
 = 
_çchdb
->
	`∑πsuµ_m™
()->
	`gë_tu∂e
();

164 
_º
.
	`£t_ts
(
_çchdb
->
	`∑πsuµ_m™
()->
	`ts
(),

165 
_çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
());

166 
_¥∑πsuµ
->
_ªp
 = &
_º
;

169 
vútuÆ
 ~
	$q20_∑πsuµ_tsˇn_fûãr_t
()

171 
_çchdb
->
	`∑πsuµ_m™
()->
	`give_tu∂e
(
_¥∑πsuµ
);

172 
	}
}

174 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

177 i‡(!
_çchdb
->
	`∑πsuµ_m™
()->
	`lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

178 
	`as£π
(
Ál£
);

181  
åue
;

182 
	}
}

185 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

187 
q20_¥oje˘ed_∑πsuµ_tu∂e
 *
de°
;

188 
de°
 = 
Æig√d_ˇ°
<
q20_¥oje˘ed_∑πsuµ_tu∂e
>(
d
.
d©a
);

190 
_¥∑πsuµ
->
	`gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

191 
_¥∑πsuµ
->
	`gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

192 
_¥∑πsuµ
->
	`gë_vÆue
(2, 
_∑πsuµ
.
PS_AVAILQTY
);

199 
de°
->
PS_SUPPKEY
 = 
_∑πsuµ
.PS_SUPPKEY;

200 
de°
->
PS_PARTKEY
 = 
_∑πsuµ
.PS_PARTKEY;

201 
de°
->
PS_AVAILQTY
 = 
_∑πsuµ
.PS_AVAILQTY;

202 
	}
}

204 
q20_∑πsuµ_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

205  
√w
 
	`q20_∑πsuµ_tsˇn_fûãr_t
(*
this
);

206 
	}
}

208 
c_°r
 
	$to_°rög
() const {

209  
	`c_°r
("q20_partsupp_tscan_filter_t()");

210 
	}
}

213 ˛as†
	cq20_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


215 
¥iv©e
:

216 
Sh‹eTPCHEnv
* 
_çchdb
;

217 
èbÀ_row_t
* 
	m_¥∑π
;

218 
ªp_row_t
 
	m_º
;

221 
çch_∑π_tu∂e
 
	m_∑π
;

223 
	m_cﬁ‹
[
STRSIZE
(25)];

225 
q20_öput_t
* 
	mq20_öput
;

227 
	mpublic
:

229 
	$q20_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q20_öput_t
 &
ö
)

230 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

232 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

233 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

234 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

235 
_¥∑π
->
_ªp
 = &
_º
;

237 
q20_öput
 = &
ö
;

238 
	`≤ame_to_°r
(
q20_öput
->
p_cﬁ‹
, 
_cﬁ‹
);

240 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nPART.P_NAMEÜikê'%s%%'\n", 
_cﬁ‹
);

243 
vútuÆ
 ~
	$q20_∑π_tsˇn_fûãr_t
()

246 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

247 
	}
}

251 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

254 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

255 
	`as£π
(
Ál£
);

258 
_¥∑π
->
	`gë_vÆue
(1, 
_∑π
.
P_NAME
, (_part.P_NAME));

260  
	`°r°r
(
_∑π
.
P_NAME
, 
_cﬁ‹
);

261 
	}
}

264 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

266 
q20_¥oje˘ed_∑π_tu∂e
 *
de°
;

267 
de°
 = 
Æig√d_ˇ°
<
q20_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

269 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

273 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

274 
	}
}

276 
q20_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

277  
√w
 
	`q20_∑π_tsˇn_fûãr_t
(*
this
);

278 
	}
}

280 
c_°r
 
	$to_°rög
() const {

281  
	`c_°r
("q20_part_tscan_filter_t()");

282 
	}
}

285 ˛as†
	cq20_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


287 
¥iv©e
:

288 
Sh‹eTPCHEnv
* 
_çchdb
;

289 
èbÀ_row_t
* 
	m_¥suµlõr
;

290 
ªp_row_t
 
	m_º
;

293 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

295 
	mpublic
:

296 
	$q20_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q20_öput_t
 &
ö
)

297 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

299 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

300 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

301 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

302 
_¥suµlõr
->
_ªp
 = &
_º
;

305 
vútuÆ
 ~
	$q20_suµlõr_tsˇn_fûãr_t
()

307 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

308 
	}
}

310 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

313 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

314 
	`as£π
(
Ál£
);

317  
åue
;

318 
	}
}

321 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

323 
q20_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

326 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

327 
_¥suµlõr
->
	`gë_vÆue
(1, 
_suµlõr
.
S_NAME
, (_supplier.S_NAME));

328 
_¥suµlõr
->
	`gë_vÆue
(2, 
_suµlõr
.
S_ADDRESS
, (_supplier.S_ADDRESS));

329 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

333 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

334 
	`mem˝y
(
de°
->
S_NAME
, 
_suµlõr
.S_NAME, (dest->S_NAME));

335 
	`mem˝y
(
de°
->
S_ADDRESS
, 
_suµlõr
.S_ADDRESS, (dest->S_ADDRESS));

336 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

337 
	}
}

339 
q20_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

340  
√w
 
	`q20_suµlõr_tsˇn_fûãr_t
(*
this
);

341 
	}
}

343 
c_°r
 
	$to_°rög
() const {

344  
	`c_°r
("q20_supplier_tscan_filter_t");

345 
	}
}

348 ˛as†
	cq20_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


350 
¥iv©e
:

351 
Sh‹eTPCHEnv
* 
_çchdb
;

352 
èbÀ_row_t
* 
	m_¥«ti⁄
;

353 
ªp_row_t
 
	m_º
;

356 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

358 
	m_«me
[
STRSIZE
(25)];

360 
	mpublic
:

361 
	$q20_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q20_öput_t
 &
ö
)

362 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

364 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

365 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

366 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

367 
_¥«ti⁄
->
_ªp
 = &
_º
;

369 
	`«ti⁄_to_°r
((&
ö
)->
n_«me
, 
_«me
);

370 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nNATION:N_NAME = %s\n", 
_«me
);

373 
vútuÆ
 ~
	$q20_«ti⁄_tsˇn_fûãr_t
()

375 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

376 
	}
}

378 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

381 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

382 
	`as£π
(
Ál£
);

385 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, (_nation.N_NAME));

387  (
	`°rcmp
(
_«ti⁄
.
N_NAME
, 
_«me
) == 0);

388 
	}
}

391 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

393 
q20_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

394 
de°
 = 
Æig√d_ˇ°
<
q20_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

396 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

401 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

402 
	}
}

404 
q20_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

405  
√w
 
	`q20_«ti⁄_tsˇn_fûãr_t
(*
this
);

406 
	}
}

408 
c_°r
 
	$to_°rög
() const {

409  
	`c_°r
("q20_«ti⁄_tsˇn_fûãr_t(%s)", 
_«me
);

410 
	}
}

413 ˛as†
	cq20_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


415 
¥iv©e
:

416 
Sh‹eTPCHEnv
* 
_çchdb
;

417 
èbÀ_row_t
* 
	m_¥löe
;

418 
ªp_row_t
 
	m_º
;

420 
çch_löeôem_tu∂e
 
	m_löeôem
;

421 
time_t
 
	m_shùd©e
;

423 
time_t
 
	m_fú°_shùd©e
;

424 
time_t
 
	m_œ°_shùd©e
;

426 
q20_öput_t
 *
	mq20_öput
;

428 
	mpublic
:

429 
	$q20_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q20_öput_t
 &
ö
)

430 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

432 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

433 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

434 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

435 
_¥löe
->
_ªp
 = &
_º
;

437 
q20_öput
 = &
ö
;

438 
_fú°_shùd©e
 = 
q20_öput
->
l_shùd©e
;

440 
tm
 *tm = 
	`gmtime
(&
_fú°_shùd©e
);

441 
tm
->
tm_yór
++;

442 
_œ°_shùd©e
 = 
	`mktime
(
tm
);

444 
f_shùd©e
[10];

445 
l_shùd©e
[10];

446 
	`timë_to_°r
(
f_shùd©e
, 
_fú°_shùd©e
);

447 
	`timë_to_°r
(
l_shùd©e
, 
_œ°_shùd©e
);

449 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\n%†<L_SHIPDATE < %s\n", 
f_shùd©e
, 
l_shùd©e
);

452 
vútuÆ
 ~
	$q20_löeôem_tsˇn_fûãr_t
()

455 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

456 
	}
}

458 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

460 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

461 
	`as£π
(
Ál£
);

464 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, (_lineitem.L_SHIPDATE));

465 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

467  
_shùd©e
 >
_fú°_shùd©e
 && _shùd©ê< 
_œ°_shùd©e
;

468 
	}
}

470 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

472 
q20_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

474 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

475 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

476 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

480 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

481 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

482 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

483 
	}
}

485 
q20_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

486  
√w
 
	`q20_löeôem_tsˇn_fûãr_t
(*
this
);

487 
	}
}

489 
c_°r
 
	$to_°rög
() const {

490  
	`c_°r
("q20_lineitem_tscan_filter_t()");

491 
	}
}

496 
	gq20_p_joö_ps_t
 : 
public
 
tu∂e_joö_t
 {

498 
q20_p_joö_ps_t
()

499 : 
tu∂e_joö_t
((
q20_¥oje˘ed_∑π_tu∂e
),

500 
off£tof
(
q20_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

501 (
q20_¥oje˘ed_∑πsuµ_tu∂e
),

502 
off£tof
(
q20_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_PARTKEY
),

504 (
q20_p_joö_ps_tu∂e
))

508 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

509 
q20_p_joö_ps_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q20_p_joö_ps_tu∂e>(
d
.
d©a
);

510 
q20_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_∑π_tu∂e>(
l
.
d©a
);

511 
q20_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_∑πsuµ_tu∂e>(
r
.
d©a
);

513 
	gde°
->
	gPS_AVAILQTY
 = 
∑πsuµ
->
PS_AVAILQTY
;

514 
	gde°
->
	gPS_PARTKEY
 = 
∑πsuµ
->
PS_PARTKEY
;

515 
	gde°
->
	gPS_SUPPKEY
 = 
∑πsuµ
->
PS_SUPPKEY
;

520 
vútuÆ
 
q20_p_joö_ps_t
* 
˛⁄e
() const {

521  
√w
 
q20_p_joö_ps_t
(*
this
);

524 
vútuÆ
 
c_°r
 
to_°rög
() const {

525  
c_°r
("join PART, PARTSUPP; select PS_AVAILQTY, PS_PARTKEY, PS_SUPPKEY");

529 
	gq20_s_joö_n_t
 : 
public
 
tu∂e_joö_t
 {

531 
q20_s_joö_n_t
()

532 : 
tu∂e_joö_t
((
q20_¥oje˘ed_suµlõr_tu∂e
),

533 
off£tof
(
q20_¥oje˘ed_suµlõr_tu∂e
, 
S_NATIONKEY
),

534 (
q20_¥oje˘ed_«ti⁄_tu∂e
),

535 
off£tof
(
q20_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

537 (
q20_s_joö_n_tu∂e
))

541 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

542 
q20_s_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q20_s_joö_n_tu∂e>(
d
.
d©a
);

543 
q20_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_suµlõr_tu∂e>(
l
.
d©a
);

544 
q20_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

546 
	gde°
->
	gS_SUPPKEY
 = 
suµ
->
S_SUPPKEY
;

547 
mem˝y
(
de°
->
S_ADDRESS
, 
suµ
->S_ADDRESS, (dest->S_ADDRESS));

548 
mem˝y
(
de°
->
S_NAME
, 
suµ
->S_NAME, (dest->S_NAME));

553 
vútuÆ
 
q20_s_joö_n_t
* 
˛⁄e
() const {

554  
√w
 
q20_s_joö_n_t
(*
this
);

557 
vútuÆ
 
c_°r
 
to_°rög
() const {

558  
c_°r
("join SUPPLIER, NATION; select S_SUPPKEY, S_ADDRESS, S_NAME");

562 
	gq20_p_ps_joö_s_n_t
 : 
public
 
tu∂e_joö_t
 {

564 
q20_p_ps_joö_s_n_t
()

565 : 
tu∂e_joö_t
((
q20_p_joö_ps_tu∂e
),

566 
off£tof
(
q20_p_joö_ps_tu∂e
, 
PS_SUPPKEY
),

567 (
q20_s_joö_n_tu∂e
),

568 
off£tof
(
q20_s_joö_n_tu∂e
, 
S_SUPPKEY
),

570 (
q20_p_ps_joö_s_n_tu∂e
))

574 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

575 
q20_p_ps_joö_s_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q20_p_ps_joö_s_n_tu∂e>(
d
.
d©a
);

576 
q20_p_joö_ps_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q20_p_joö_ps_tu∂e>(
l
.
d©a
);

577 
q20_s_joö_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q20_s_joö_n_tu∂e>(
r
.
d©a
);

579 
	gde°
->
	gPS_AVAILQTY
 = 
À·
->
PS_AVAILQTY
;

580 
	gde°
->
	gPS_PARTKEY
 = 
À·
->
PS_PARTKEY
;

581 
mem˝y
(
de°
->
S_ADDRESS
, 
right
->S_ADDRESS, (dest->S_ADDRESS));

582 
mem˝y
(
de°
->
S_NAME
, 
right
->S_NAME, (dest->S_NAME));

583 
	gde°
->
	gS_SUPPKEY
 = 
right
->
S_SUPPKEY
;

588 
vútuÆ
 
q20_p_ps_joö_s_n_t
* 
˛⁄e
() const {

589  
√w
 
q20_p_ps_joö_s_n_t
(*
this
);

592 
vútuÆ
 
c_°r
 
to_°rög
() const {

593  
c_°r
("join PART_PARTSUPP, SUPPLIER_NATION; select PS_AVAILQTY, PS_PARTKEY, S_ADDRESS, S_NAME, S_SUPPKEY");

597 
	gq20_löeôem_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

599 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

601 
q20_löeôem_aggªg©e_t
()

602 : 
tu∂e_aggªg©e_t
((
q20_¥oje˘ed_löeôem_tu∂e
))

606 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

607  &
_exåa˘‹
;

610 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

611 
q20_¥oje˘ed_löeôem_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_löeôem_tu∂e>(
agg_d©a
);

612 
q20_¥oje˘ed_löeôem_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_löeôem_tu∂e>(
t
.
d©a
);

614 
	gagg
->
	gL_PARTKEY
 = 
öput
->
L_PARTKEY
;

615 
	gagg
->
	gL_SUPPKEY
 = 
öput
->
L_SUPPKEY
;

616 
	gagg
->
	gL_QUANTITY
 +
öput
->
L_QUANTITY
;

618 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

619 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

621 
vútuÆ
 
q20_löeôem_aggªg©e_t
* 
˛⁄e
() const {

622  
√w
 
q20_löeôem_aggªg©e_t
(*
this
);

624 
vútuÆ
 
c_°r
 
to_°rög
() const {

629 
	gq20_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

631 
q20_föÆ_joö_t
()

632 : 
tu∂e_joö_t
((
q20_¥oje˘ed_löeôem_tu∂e
),

633 
off£tof
(
q20_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
),

634 (
q20_p_ps_joö_s_n_tu∂e
),

635 
off£tof
(
q20_p_ps_joö_s_n_tu∂e
, 
PS_PARTKEY
),

637 (
q20_Æl_joös_tu∂e
))

641 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

642 
q20_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q20_Æl_joös_tu∂e>(
d
.
d©a
);

643 
q20_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q20_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

644 
q20_p_ps_joö_s_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q20_p_ps_joö_s_n_tu∂e>(
r
.
d©a
);

646 
	gde°
->
	gAVAILQTY_THRESHOLD
 = 
löe
->
L_QUANTITY
;

647 
	gde°
->
	gPS_AVAILQTY
 = 
right
->
PS_AVAILQTY
;

648 
mem˝y
(
de°
->
S_ADDRESS
, 
right
->S_ADDRESS, (dest->S_ADDRESS));

649 
mem˝y
(
de°
->
S_NAME
, 
right
->S_NAME, (dest->S_NAME));

650 
	gde°
->
	gS_SUPPKEY
 = 
right
->
S_SUPPKEY
;

656 
vútuÆ
 
q20_föÆ_joö_t
* 
˛⁄e
() const {

657  
√w
 
q20_föÆ_joö_t
(*
this
);

660 
vútuÆ
 
c_°r
 
to_°rög
() const {

661  
c_°r
("join LINEITEM, PART_PARTSUPP_SUPPLIER_NATION; select AVAILQTY_THRESHOLD, PS_AVAILQTY, S_ADDRESS, S_NAME");

665 
	gq20_föÆ_joö_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

667 
q20_föÆ_joö_fûãr_t
()

668 : 
tu∂e_fûãr_t
((
q20_Æl_joös_tu∂e
))

672 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

673 
q20_Æl_joös_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q20_Æl_joös_tu∂e>(
öput
.
d©a
);

674  
	gö
->
	gPS_AVAILQTY
 > (0.5 * in->
	gAVAILQTY_THRESHOLD
.
to_doubÀ
());

677 
vútuÆ
 
¥oje˘
(
tu∂e_t
 &
out
, c⁄°Åu∂e_à&
ö
) {

678 
q20_föÆ_tu∂e
 *
	gd
 = 
Æig√d_ˇ°
<q20_föÆ_tu∂e>(
out
.
d©a
);

679 
q20_Æl_joös_tu∂e
 *
	gs
 = 
Æig√d_ˇ°
<q20_Æl_joös_tu∂e>(
ö
.
d©a
);

681 
	gd
->
	gS_SUPPKEY
 = 
s
->
S_SUPPKEY
;

682 
mem˝y
(
d
->
S_NAME
, 
s
->S_NAME, (d->S_NAME));

683 
mem˝y
(
d
->
S_ADDRESS
, 
s
->S_ADDRESS, (d->S_ADDRESS));

688 
vútuÆ
 
q20_föÆ_joö_fûãr_t
* 
˛⁄e
() const {

689  
√w
 
q20_föÆ_joö_fûãr_t
(*
this
);

692 
vútuÆ
 
c_°r
 
to_°rög
() const {

693  
c_°r
("q20_final_join_filter_t");

697 
	gq20_di°ö˘_agg_t
 : 
public
 
tu∂e_aggªg©e_t
 {

699 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

701 
q20_di°ö˘_agg_t
()

702 : 
tu∂e_aggªg©e_t
((
q20_föÆ_tu∂e
)), 
_exåa˘‹
((), 
off£tof
(q20_föÆ_tu∂e, 
S_SUPPKEY
))

706 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

707  &
	g_exåa˘‹
;

710 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

711 
mem˝y
(
agg_d©a
, 
t
.
d©a
, (
q20_föÆ_tu∂e
));

713 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

714 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

716 
vútuÆ
 
q20_di°ö˘_agg_t
* 
˛⁄e
() const {

717  
√w
 
q20_di°ö˘_agg_t
(*
this
);

719 
vútuÆ
 
c_°r
 
to_°rög
() const {

724 
	gq20_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

726 
q20_s‹t_key_com∑ª_t
()

730 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

731  
°rcmp
((*)
key1
, (*)
key2
);

734 
vútuÆ
 
q20_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

735  
√w
 
q20_s‹t_key_com∑ª_t
(*
this
);

740 ˛as†
	cçch_q20_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

742 
public
:

744 
vútuÆ
 
	$begö
() {

745 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q20 %s %s\n",

749 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

750 
q20_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q20_föÆ_tu∂e>(
ouçut
.
d©a
);

752 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q20 %†%s\n", 
agg
->
S_NAME
,ágg->
S_ADDRESS
);

753 
	}
}

764 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q20
(c⁄° 
x˘_id
,

765 
q20_öput_t
& 
ö
)

767 
	`TRACE
–
TRACE_ALWAYS
, "********** q20 *********\n");

769 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

770 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

774 
tu∂e_fifo
* 
q20_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_«ti⁄_tu∂e
));

775 
∑ckë_t
* 
q20_«ti⁄_tsˇn_∑ckë
 =

776 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

777 
q20_«ti⁄_buf„r
,

778 
√w
 
	`q20_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

779 
this
->
	`db
(),

780 
_≤©i⁄_desc
.
	`gë
(),

781 
px˘
);

784 
tu∂e_fifo
* 
q20_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_suµlõr_tu∂e
));

785 
∑ckë_t
* 
q20_suµlõr_tsˇn_∑ckë
 =

786 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

787 
q20_suµlõr_buf„r
,

788 
√w
 
	`q20_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

789 
this
->
	`db
(),

790 
_psuµlõr_desc
.
	`gë
(),

791 
px˘
);

794 
tu∂e_fifo
* 
q20_∑πsuµ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_∑πsuµ_tu∂e
));

795 
∑ckë_t
* 
q20_∑πsuµ_tsˇn_∑ckë
 =

796 
√w
 
	`tsˇn_∑ckë_t
("partsupp TSCAN",

797 
q20_∑πsuµ_buf„r
,

798 
√w
 
	`q20_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

799 
this
->
	`db
(),

800 
_µ¨tsuµ_desc
.
	`gë
(),

801 
px˘
);

804 
tu∂e_fifo
* 
q20_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_∑π_tu∂e
));

805 
∑ckë_t
* 
q20_∑π_tsˇn_∑ckë
 =

806 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

807 
q20_∑π_buf„r
,

808 
√w
 
	`q20_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

809 
this
->
	`db
(),

810 
_µ¨t_desc
.
	`gë
(),

811 
px˘
);

814 
tu∂e_fifo
* 
q20_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_löeôem_tu∂e
));

815 
∑ckë_t
* 
q20_löeôem_tsˇn_∑ckë
 =

816 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

817 
q20_löeôem_buf„r
,

818 
√w
 
	`q20_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

819 
this
->
	`db
(),

820 
_∂öeôem_desc
.
	`gë
(),

821 
px˘
);

824 
tu∂e_fifo
* 
q20_löeôem_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_¥oje˘ed_löeôem_tu∂e
));

825 
∑ckë_t
* 
q20_löeôem_aggªg©e_∑ckë
 =

826 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("lineitem SUM AGGREGATE L_QUANTITY",

827 
q20_löeôem_aggªg©e_buf„r
,

828 
√w
 
	`åivül_fûãr_t
((
q20_¥oje˘ed_löeôem_tu∂e
)),

829 
q20_löeôem_tsˇn_∑ckë
,

830 
√w
 
	`q20_löeôem_aggªg©e_t
(),

831 
√w
 
	`deÁu…_key_exåa˘‹_t
(2 * (), 
	`off£tof
(
q20_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
)),

832 
√w
 
	`öt_key_com∑ª_t
());

836 
tu∂e_fifo
* 
q20_s_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_s_joö_n_tu∂e
));

837 
∑ckë_t
* 
q20_s_joö_n_∑ckë
 =

838 
√w
 
	`hash_joö_∑ckë_t
("supplier -Çation HJOIN",

839 
q20_s_joö_n_buf„r
,

840 
√w
 
	`åivül_fûãr_t
((
q20_s_joö_n_tu∂e
)),

841 
q20_suµlõr_tsˇn_∑ckë
,

842 
q20_«ti⁄_tsˇn_∑ckë
,

843 
√w
 
	`q20_s_joö_n_t
());

846 
tu∂e_fifo
* 
q20_p_joö_ps_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_p_joö_ps_tu∂e
));

847 
∑ckë_t
* 
q20_p_joö_ps_∑ckë
 =

848 
√w
 
	`hash_joö_∑ckë_t
("part -Öartsupp HJOIN",

849 
q20_p_joö_ps_buf„r
,

850 
√w
 
	`åivül_fûãr_t
((
q20_p_joö_ps_tu∂e
)),

851 
q20_∑π_tsˇn_∑ckë
,

852 
q20_∑πsuµ_tsˇn_∑ckë
,

853 
√w
 
	`q20_p_joö_ps_t
());

856 
tu∂e_fifo
* 
q20_p_ps_joö_s_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_p_ps_joö_s_n_tu∂e
));

857 
∑ckë_t
* 
q20_p_ps_joö_s_n_∑ckë
 =

858 
√w
 
	`hash_joö_∑ckë_t
("part_partsupp - supplier_nation HJOIN",

859 
q20_p_ps_joö_s_n_buf„r
,

860 
√w
 
	`åivül_fûãr_t
((
q20_p_ps_joö_s_n_tu∂e
)),

861 
q20_p_joö_ps_∑ckë
,

862 
q20_s_joö_n_∑ckë
,

863 
√w
 
	`q20_p_ps_joö_s_n_t
());

866 
tu∂e_fifo
* 
q20_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_föÆ_tu∂e
));

867 
∑ckë_t
* 
q20_Æl_joös_∑ckë
 =

868 
√w
 
	`hash_joö_∑ckë_t
("lineitem -Öart_partsupp_supplier_nation HJOIN",

869 
q20_Æl_joös_buf„r
,

870 
√w
 
	`q20_föÆ_joö_fûãr_t
(),

871 
q20_löeôem_aggªg©e_∑ckë
,

872 
q20_p_ps_joö_s_n_∑ckë
,

873 
√w
 
	`q20_föÆ_joö_t
());

875 
tu∂e_fifo
* 
q20_di°ö˘_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_föÆ_tu∂e
));

876 
∑ckë_t
* 
q20_di°ö˘_agg_∑ckë
 =

877 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("DISTINCT AGG",

878 
q20_di°ö˘_agg_buf„r
,

879 
√w
 
	`åivül_fûãr_t
((
q20_föÆ_tu∂e
)),

880 
q20_Æl_joös_∑ckë
,

881 
√w
 
	`q20_di°ö˘_agg_t
(),

882 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q20_föÆ_tu∂e
, 
S_SUPPKEY
)),

883 
√w
 
	`öt_key_com∑ª_t
());

886 
tu∂e_fifo
* 
q20_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q20_föÆ_tu∂e
));

887 
∑ckë_t
* 
q20_föÆ_∑ckë
 =

888 
√w
 
	`s‹t_∑ckë_t
("SORT BY S_NAME",

889 
q20_föÆ_buf„r
,

890 
√w
 
	`åivül_fûãr_t
((
q20_föÆ_tu∂e
)),

891 
√w
 
	`deÁu…_key_exåa˘‹_t
(
	`STRSIZE
(25Ë* (), 
	`off£tof
(
q20_föÆ_tu∂e
, 
S_NAME
)),

892 
√w
 
	`q20_s‹t_key_com∑ª_t
(),

893 
q20_di°ö˘_agg_∑ckë
);

896 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

897 
q20_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

898 
q20_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

899 
q20_∑πsuµ_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

900 
q20_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

901 
q20_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

902 
q20_löeôem_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

903 
q20_s_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

904 
q20_p_joö_ps_∑ckë
->
	`assign_quîy_°©e
(
qs
);

905 
q20_p_ps_joö_s_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

906 
q20_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

907 
q20_di°ö˘_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

908 
q20_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

912 
çch_q20_¥o˚ss_tu∂e_t
 
±
;

914 
	`¥o˚ss_quîy
(
q20_föÆ_∑ckë
, 
±
);

916 
dp
->
	`quîy_°©e_de°roy
(
qs
);

919  (
RCOK
);

920 
	}
}

922 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q21.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

90 
	sq21_¥oje˘ed_«ti⁄_tu∂e
 {

91 
	mN_NATIONKEY
;

94 
	sq21_¥oje˘ed_suµlõr_tu∂e
 {

95 
	mS_SUPPKEY
;

96 
	mS_NAME
[
STRSIZE
(25)];

97 
	mS_NATIONKEY
;

100 
	sq21_¥oje˘ed_löeôem_l1_tu∂e
 {

101 
	mL_ORDERKEY
;

102 
	mL_LINENUMBER
;

103 
	mL_SUPPKEY
;

106 
	sq21_¥oje˘ed_löeôem_l2_tu∂e
 {

107 
	mL_ORDERKEY
;

108 
	mL_SUPPKEY
;

111 
	sq21_¥oje˘ed_‹dîs_tu∂e
 {

112 
	mO_ORDERKEY
;

115 
	sq21_s_joö_n_tu∂e
 {

116 
	mS_SUPPKEY
;

117 
	mS_NAME
[
STRSIZE
(25)];

120 
	sq21_l1_joö_s_n_tu∂e
 {

121 
	mL1_ORDERKEY
;

122 
	mL1_LINENUMBER
;

123 
	mL1_SUPPKEY
;

124 
	mS_NAME
[
STRSIZE
(25)];

127 
	sq21_l2_joö_l1_s_n_tu∂e
 {

128 
	mL1_ORDERKEY
;

129 
	mL1_LINENUMBER
;

130 
	mL1_SUPPKEY
;

131 
	mL2_SUPPKEY
;

132 
	mS_NAME
[
STRSIZE
(25)];

135 
	sq21_sub_agg_tu∂e
 {

136 
	mL_ORDERKEY
;

137 
	mS_NAME
[
STRSIZE
(25)];

140 
	sq21_Æl_joös_tu∂e
 {

141 
	mS_NAME
[
STRSIZE
(25)];

144 
	sq21_föÆ_tu∂e
 {

145 
	mNUMWAIT
;

146 
	mS_NAME
[
STRSIZE
(25)];

151 ˛as†
	cq21_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


153 
¥iv©e
:

154 
Sh‹eTPCHEnv
* 
_çchdb
;

155 
èbÀ_row_t
* 
	m_¥«ti⁄
;

156 
ªp_row_t
 
	m_º
;

159 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

161 
	m_¬ame
[
STRSIZE
(25)];

163 
	mpublic
:

164 
	$q21_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q21_öput_t
 &
ö
)

165 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

167 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

168 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

169 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

170 
_¥«ti⁄
->
_ªp
 = &
_º
;

172 
	`«ti⁄_to_°r
((&
ö
)->
n_«me
, 
_¬ame
);

173 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nNATION.N_NAME = %s\n", 
_¬ame
);

176 
vútuÆ
 ~
	$q21_«ti⁄_tsˇn_fûãr_t
()

178 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

179 
	}
}

181 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

184 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

185 
	`as£π
(
Ál£
);

188 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, (_nation.N_NAME));

190  (
	`°rcmp
(
_«ti⁄
.
N_NAME
, 
_¬ame
) == 0);

192 
	}
}

195 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

197 
q21_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

198 
de°
 = 
Æig√d_ˇ°
<
q21_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

200 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

205 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

206 
	}
}

208 
q21_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

209  
√w
 
	`q21_«ti⁄_tsˇn_fûãr_t
(*
this
);

210 
	}
}

212 
c_°r
 
	$to_°rög
() const {

213  
	`c_°r
("q21_nation_tscan_filter_t()");

214 
	}
}

218 ˛as†
	cq21_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


220 
¥iv©e
:

221 
Sh‹eTPCHEnv
* 
_çchdb
;

222 
èbÀ_row_t
* 
	m_¥suµlõr
;

223 
ªp_row_t
 
	m_º
;

226 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

228 
	mpublic
:

229 
	$q21_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q21_öput_t
 &
ö
)

230 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

232 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

233 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

234 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

235 
_¥suµlõr
->
_ªp
 = &
_º
;

238 
vútuÆ
 ~
	$q21_suµlõr_tsˇn_fûãr_t
()

240 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

241 
	}
}

243 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

246 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

247 
	`as£π
(
Ál£
);

250  
åue
;

251 
	}
}

254 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

256 
q21_¥oje˘ed_suµlõr_tu∂e
 *
de°
;

257 
de°
 = 
Æig√d_ˇ°
<
q21_¥oje˘ed_suµlõr_tu∂e
>(
d
.
d©a
);

260 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

261 
_¥suµlõr
->
	`gë_vÆue
(1, 
_suµlõr
.
S_NAME
, (_supplier.S_NAME));

262 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

267 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

268 
	`mem˝y
(
de°
->
S_NAME
, 
_suµlõr
.S_NAME, (dest->S_NAME));

269 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

271 
	}
}

273 
q21_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

274  
√w
 
	`q21_suµlõr_tsˇn_fûãr_t
(*
this
);

275 
	}
}

277 
c_°r
 
	$to_°rög
() const {

278  
	`c_°r
("q21_supplier_tscan_filter_t");

279 
	}
}

283 ˛as†
	cq21_löeôem_l1_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


285 
¥iv©e
:

286 
Sh‹eTPCHEnv
* 
_çchdb
;

287 
èbÀ_row_t
* 
	m_¥löe
;

288 
ªp_row_t
 
	m_º
;

290 
çch_löeôem_tu∂e
 
	m_löeôem
;

292 
	mpublic
:

293 
	$q21_löeôem_l1_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q21_öput_t
 &
ö
)

294 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

296 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

297 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

298 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

299 
_¥löe
->
_ªp
 = &
_º
;

302 
vútuÆ
 ~
	$q21_löeôem_l1_tsˇn_fûãr_t
()

305 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

306 
	}
}

308 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

310 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

311 
	`as£π
(
Ál£
);

314 
_¥löe
->
	`gë_vÆue
(11, 
_löeôem
.
L_COMMITDATE
, (_lineitem.L_COMMITDATE));

315 
_¥löe
->
	`gë_vÆue
(12, 
_löeôem
.
L_RECEIPTDATE
, (_lineitem.L_RECEIPTDATE));

317  
	`°r_to_timë
(
_löeôem
.
L_RECEIPTDATE
Ë> så_to_timë(_löeôem.
L_COMMITDATE
);

318 
	}
}

320 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

322 
q21_¥oje˘ed_löeôem_l1_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_löeôem_l1_tu∂e>(
d
.
d©a
);

324 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

325 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

326 
_¥löe
->
	`gë_vÆue
(3, 
_löeôem
.
L_LINENUMBER
);

330 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

331 
de°
->
L_LINENUMBER
 = 
_löeôem
.L_LINENUMBER;

332 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

333 
	}
}

335 
q21_löeôem_l1_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

336  
√w
 
	`q21_löeôem_l1_tsˇn_fûãr_t
(*
this
);

337 
	}
}

339 
c_°r
 
	$to_°rög
() const {

340  
	`c_°r
("q21_lineitem_l1_tscan_filter_t(l_receiptdate >Ü_commitdate)");

341 
	}
}

344 ˛as†
	cq21_löeôem_l2_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


346 
¥iv©e
:

347 
Sh‹eTPCHEnv
* 
_çchdb
;

348 
èbÀ_row_t
* 
	m_¥löe
;

349 
ªp_row_t
 
	m_º
;

351 
çch_löeôem_tu∂e
 
	m_löeôem
;

353 
	mpublic
:

354 
	$q21_löeôem_l2_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q21_öput_t
 &
ö
)

355 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

357 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

358 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

359 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

360 
_¥löe
->
_ªp
 = &
_º
;

363 
vútuÆ
 ~
	$q21_löeôem_l2_tsˇn_fûãr_t
()

366 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

367 
	}
}

369 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

371 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

372 
	`as£π
(
Ál£
);

375  
åue
;

376 
	}
}

378 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

380 
q21_¥oje˘ed_löeôem_l2_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_löeôem_l2_tu∂e>(
d
.
d©a
);

382 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

383 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

387 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

388 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

389 
	}
}

391 
q21_löeôem_l2_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

392  
√w
 
	`q21_löeôem_l2_tsˇn_fûãr_t
(*
this
);

393 
	}
}

395 
c_°r
 
	$to_°rög
() const {

396  
	`c_°r
("q21_lineitem_l2_tscan_filter_t");

397 
	}
}

401 ˛as†
	cq21_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


403 
¥iv©e
:

404 
Sh‹eTPCHEnv
* 
_çchdb
;

405 
èbÀ_row_t
* 
	m_¥‹dîs
;

406 
ªp_row_t
 
	m_º
;

408 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

410 
	mpublic
:

411 
	$q21_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q21_öput_t
 &
ö
)

412 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

414 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

415 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

416 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

417 
_¥‹dîs
->
_ªp
 = &
_º
;

420 
vútuÆ
 ~
	$q21_‹dîs_tsˇn_fûãr_t
()

423 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

424 
	}
}

426 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

428 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

429 
	`as£π
(
Ál£
);

432 
_¥‹dîs
->
	`gë_vÆue
(2, 
_‹dîs
.
O_ORDERSTATUS
);

434  
_‹dîs
.
O_ORDERSTATUS
 == 'F';

435 
	}
}

437 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

439 
q21_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

441 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

445 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

446 
	}
}

448 
q21_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

449  
√w
 
	`q21_‹dîs_tsˇn_fûãr_t
(*
this
);

450 
	}
}

452 
c_°r
 
	$to_°rög
() const {

453  
	`c_°r
("q21_orders_tscan_filter_t(o_orderstatus = 'F')");

454 
	}
}

459 
	gq21_s_joö_n_t
 : 
public
 
tu∂e_joö_t
 {

461 
q21_s_joö_n_t
()

462 : 
tu∂e_joö_t
((
q21_¥oje˘ed_suµlõr_tu∂e
),

463 
off£tof
(
q21_¥oje˘ed_suµlõr_tu∂e
, 
S_NATIONKEY
),

464 (
q21_¥oje˘ed_«ti⁄_tu∂e
),

465 
off£tof
(
q21_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

467 (
q21_s_joö_n_tu∂e
))

471 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

472 
q21_s_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q21_s_joö_n_tu∂e>(
d
.
d©a
);

473 
q21_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_suµlõr_tu∂e>(
l
.
d©a
);

474 
q21_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

476 
	gde°
->
	gS_SUPPKEY
 = 
suµ
->
S_SUPPKEY
;

477 
mem˝y
(
de°
->
S_NAME
, 
suµ
->S_NAME, (dest->S_NAME));

482 
vútuÆ
 
q21_s_joö_n_t
* 
˛⁄e
() const {

483  
√w
 
q21_s_joö_n_t
(*
this
);

486 
vútuÆ
 
c_°r
 
to_°rög
() const {

487  
c_°r
("join SUPPLIER, NATION; select S_SUPPKEY, S_NAME");

491 
	gq21_l1_joö_s_n_t
 : 
public
 
tu∂e_joö_t
 {

493 
q21_l1_joö_s_n_t
()

494 : 
tu∂e_joö_t
((
q21_¥oje˘ed_löeôem_l1_tu∂e
),

495 
off£tof
(
q21_¥oje˘ed_löeôem_l1_tu∂e
, 
L_SUPPKEY
),

496 (
q21_s_joö_n_tu∂e
),

497 
off£tof
(
q21_s_joö_n_tu∂e
, 
S_SUPPKEY
),

499 (
q21_l1_joö_s_n_tu∂e
))

503 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

504 
q21_l1_joö_s_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q21_l1_joö_s_n_tu∂e>(
d
.
d©a
);

505 
q21_¥oje˘ed_löeôem_l1_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_löeôem_l1_tu∂e>(
l
.
d©a
);

506 
q21_s_joö_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q21_s_joö_n_tu∂e>(
r
.
d©a
);

508 
	gde°
->
	gL1_LINENUMBER
 = 
löe
->
L_LINENUMBER
;

509 
	gde°
->
	gL1_ORDERKEY
 = 
löe
->
L_ORDERKEY
;

510 
	gde°
->
	gL1_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

511 
mem˝y
(
de°
->
S_NAME
, 
right
->S_NAME, (dest->S_NAME));

516 
vútuÆ
 
q21_l1_joö_s_n_t
* 
˛⁄e
() const {

517  
√w
 
q21_l1_joö_s_n_t
(*
this
);

520 
vútuÆ
 
c_°r
 
to_°rög
() const {

521  
c_°r
("join LINEITEM L1, SUPPLIER_NATION; select L1.L_LINENUMBER, L1.L_ORDERKEY, L1.L_SUPPKEY, S_NAME");

525 
	gq21_l2_joö_l1_s_n_t
 : 
public
 
tu∂e_joö_t
 {

527 
q21_l2_joö_l1_s_n_t
()

528 : 
tu∂e_joö_t
((
q21_¥oje˘ed_löeôem_l2_tu∂e
),

529 
off£tof
(
q21_¥oje˘ed_löeôem_l2_tu∂e
, 
L_ORDERKEY
),

530 (
q21_l1_joö_s_n_tu∂e
),

531 
off£tof
(
q21_l1_joö_s_n_tu∂e
, 
L1_ORDERKEY
),

533 (
q21_l2_joö_l1_s_n_tu∂e
))

537 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

538 
q21_l2_joö_l1_s_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q21_l2_joö_l1_s_n_tu∂e>(
d
.
d©a
);

539 
q21_¥oje˘ed_löeôem_l2_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_löeôem_l2_tu∂e>(
l
.
d©a
);

540 
q21_l1_joö_s_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q21_l1_joö_s_n_tu∂e>(
r
.
d©a
);

542 
	gde°
->
	gL1_LINENUMBER
 = 
right
->
L1_LINENUMBER
;

543 
	gde°
->
	gL1_ORDERKEY
 = 
right
->
L1_ORDERKEY
;

544 
	gde°
->
	gL1_SUPPKEY
 = 
right
->
L1_SUPPKEY
;

545 
	gde°
->
	gL2_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

546 
mem˝y
(
de°
->
S_NAME
, 
right
->S_NAME, (dest->S_NAME));

552 
vútuÆ
 
q21_l2_joö_l1_s_n_t
* 
˛⁄e
() const {

553  
√w
 
q21_l2_joö_l1_s_n_t
(*
this
);

556 
vútuÆ
 
c_°r
 
to_°rög
() const {

557  
c_°r
("join LINEITEM L2, LINEITEM_SUPPLIER_NATION; select L1_LINENUMBER, L1_ORDERKEY, L1_SUPPKEY, L2.L_SUPPKEY, S_NAME");

561 
	gq21_exi°s_joö_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

563 
q21_exi°s_joö_fûãr_t
()

564 : 
tu∂e_fûãr_t
((
q21_l2_joö_l1_s_n_tu∂e
))

568 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

569 
q21_l2_joö_l1_s_n_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q21_l2_joö_l1_s_n_tu∂e>(
öput
.
d©a
);

570  
	gö
->
	gL1_SUPPKEY
 !
ö
->
L2_SUPPKEY
;

573 
vútuÆ
 
q21_exi°s_joö_fûãr_t
* 
˛⁄e
() const {

574  
√w
 
q21_exi°s_joö_fûãr_t
(*
this
);

577 
vútuÆ
 
c_°r
 
to_°rög
() const {

578  
c_°r
("q21_exists_join_filter_t");

582 
	gq21_sub_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

584 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

586 
q21_sub_aggªg©e_t
()

587 : 
tu∂e_aggªg©e_t
((
q21_sub_agg_tu∂e
))

591 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

592  &
_exåa˘‹
;

595 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

596 
q21_sub_agg_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q21_sub_agg_tu∂e>(
agg_d©a
);

597 
q21_l2_joö_l1_s_n_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q21_l2_joö_l1_s_n_tu∂e>(
t
.
d©a
);

599 
	gagg
->
	gL_ORDERKEY
 = 
öput
->
L1_ORDERKEY
;

600 
mem˝y
(
agg
->
S_NAME
, 
öput
->S_NAME, (agg->S_NAME));

602 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

603 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

605 
vútuÆ
 
q21_sub_aggªg©e_t
* 
˛⁄e
() const {

606  
√w
 
q21_sub_aggªg©e_t
(*
this
);

608 
vútuÆ
 
c_°r
 
to_°rög
() const {

614 
	gq21_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

616 
q21_föÆ_joö_t
()

617 : 
tu∂e_joö_t
((
q21_¥oje˘ed_‹dîs_tu∂e
),

618 
off£tof
(
q21_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

619 (
q21_sub_agg_tu∂e
),

620 
off£tof
(
q21_sub_agg_tu∂e
, 
L_ORDERKEY
),

622 (
q21_Æl_joös_tu∂e
))

626 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

627 
q21_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q21_Æl_joös_tu∂e>(
d
.
d©a
);

628 
q21_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dî
 = 
Æig√d_ˇ°
<q21_¥oje˘ed_‹dîs_tu∂e>(
l
.
d©a
);

629 
q21_sub_agg_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q21_sub_agg_tu∂e>(
r
.
d©a
);

631 
mem˝y
(
de°
->
S_NAME
, 
right
->S_NAME, (dest->S_NAME));

636 
vútuÆ
 
q21_föÆ_joö_t
* 
˛⁄e
() const {

637  
√w
 
q21_föÆ_joö_t
(*
this
);

640 
vútuÆ
 
c_°r
 
to_°rög
() const {

641  
c_°r
("join ORDERS, L2_L1_SUPPLIER_NATION; select S_NAME");

645 
	gq21_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

647 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

649 
q21_aggªg©e_t
()

650 : 
tu∂e_aggªg©e_t
((
q21_föÆ_tu∂e
))

654 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

655  &
_exåa˘‹
;

658 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

659 
q21_föÆ_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q21_föÆ_tu∂e>(
agg_d©a
);

660 
q21_Æl_joös_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q21_Æl_joös_tu∂e>(
t
.
d©a
);

662 
mem˝y
(
agg
->
S_NAME
, 
öput
->S_NAME, (agg->S_NAME));

663 
	gagg
->
	gNUMWAIT
++;

665 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

666 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

668 
vútuÆ
 
q21_aggªg©e_t
* 
˛⁄e
() const {

669  
√w
 
q21_aggªg©e_t
(*
this
);

671 
vútuÆ
 
c_°r
 
to_°rög
() const {

677 
	gq21_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

679 
q21_s‹t_key_exåa˘‹_t
()

680 : 
key_exåa˘‹_t
((
q21_föÆ_tu∂e
))

684 
vútuÆ
 
exåa˘_höt
(c⁄° *
key
) const {

685 
q21_föÆ_tu∂e
 *
tu∂e
 = 
Æig√d_ˇ°
<q21_föÆ_tu∂e>(
key
);

686  -(
	gtu∂e
->
	gNUMWAIT
);

689 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

690  
√w
 
q21_s‹t_key_exåa˘‹_t
(*
this
);

694 
	gq21_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

696 
q21_s‹t_key_com∑ª_t
()

700 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

701 
q21_föÆ_tu∂e
 *
	gt1
 = 
Æig√d_ˇ°
<q21_föÆ_tu∂e>(
key1
);

702 
q21_föÆ_tu∂e
 *
	gt2
 = 
Æig√d_ˇ°
<q21_föÆ_tu∂e>(
key2
);

703  (
	gt1
->
	gNUMWAIT
 !
t2
->
NUMWAIT
 ?Å2->NUMWAIT - 
t1
->NUMWAIT : 
°rcmp
—1->
S_NAME
,Å2->S_NAME));

706 
vútuÆ
 
q21_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

707  
√w
 
q21_s‹t_key_com∑ª_t
(*
this
);

713 ˛as†
	cçch_q21_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

715 
public
:

717 
vútuÆ
 
	$begö
() {

718 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q21 %s %s\n",

722 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

723 
q21_föÆ_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q21_föÆ_tu∂e>(
ouçut
.
d©a
);

725 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q21 %†%d\n", 
agg
->
S_NAME
,ágg->
NUMWAIT
);

726 
	}
}

737 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q21
(c⁄° 
x˘_id
,

738 
q21_öput_t
& 
ö
)

740 
	`TRACE
–
TRACE_ALWAYS
, "********** q21 *********\n");

742 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

743 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

747 
tu∂e_fifo
* 
q21_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_¥oje˘ed_«ti⁄_tu∂e
));

748 
∑ckë_t
* 
q21_«ti⁄_tsˇn_∑ckë
 =

749 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

750 
q21_«ti⁄_buf„r
,

751 
√w
 
	`q21_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

752 
this
->
	`db
(),

753 
_≤©i⁄_desc
.
	`gë
(),

754 
px˘
);

757 
tu∂e_fifo
* 
q21_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_¥oje˘ed_suµlõr_tu∂e
));

758 
∑ckë_t
* 
q21_suµlõr_tsˇn_∑ckë
 =

759 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

760 
q21_suµlõr_buf„r
,

761 
√w
 
	`q21_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

762 
this
->
	`db
(),

763 
_psuµlõr_desc
.
	`gë
(),

764 
px˘
);

767 
tu∂e_fifo
* 
q21_löeôem_l1_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_¥oje˘ed_löeôem_l1_tu∂e
));

768 
∑ckë_t
* 
q21_löeôem_l1_tsˇn_∑ckë
 =

769 
√w
 
	`tsˇn_∑ckë_t
("lineitemÜ1 TSCAN",

770 
q21_löeôem_l1_buf„r
,

771 
√w
 
	`q21_löeôem_l1_tsˇn_fûãr_t
(
this
, 
ö
),

772 
this
->
	`db
(),

773 
_∂öeôem_desc
.
	`gë
(),

774 
px˘
);

777 
tu∂e_fifo
* 
q21_löeôem_l2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_¥oje˘ed_löeôem_l2_tu∂e
));

778 
∑ckë_t
* 
q21_löeôem_l2_tsˇn_∑ckë
 =

779 
√w
 
	`tsˇn_∑ckë_t
("lineitemÜ2 TSCAN",

780 
q21_löeôem_l2_buf„r
,

781 
√w
 
	`q21_löeôem_l2_tsˇn_fûãr_t
(
this
, 
ö
),

782 
this
->
	`db
(),

783 
_∂öeôem_desc
.
	`gë
(),

784 
px˘
);

787 
tu∂e_fifo
* 
q21_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_¥oje˘ed_‹dîs_tu∂e
));

788 
∑ckë_t
* 
q21_‹dîs_tsˇn_∑ckë
 =

789 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

790 
q21_‹dîs_buf„r
,

791 
√w
 
	`q21_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

792 
this
->
	`db
(),

793 
_p‹dîs_desc
.
	`gë
(),

794 
px˘
);

798 
tu∂e_fifo
* 
q21_s_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_s_joö_n_tu∂e
));

799 
∑ckë_t
* 
q21_s_joö_n_∑ckë
 =

800 
√w
 
	`hash_joö_∑ckë_t
("supplier -Çation HJOIN",

801 
q21_s_joö_n_buf„r
,

802 
√w
 
	`åivül_fûãr_t
((
q21_s_joö_n_tu∂e
)),

803 
q21_suµlõr_tsˇn_∑ckë
,

804 
q21_«ti⁄_tsˇn_∑ckë
,

805 
√w
 
	`q21_s_joö_n_t
());

808 
tu∂e_fifo
* 
q21_l1_joö_s_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_l1_joö_s_n_tu∂e
));

809 
∑ckë_t
* 
q21_l1_joö_s_n_∑ckë
 =

810 
√w
 
	`hash_joö_∑ckë_t
("lineitemÜ1 - supplier_nation HJOIN",

811 
q21_l1_joö_s_n_buf„r
,

812 
√w
 
	`åivül_fûãr_t
((
q21_l1_joö_s_n_tu∂e
)),

813 
q21_löeôem_l1_tsˇn_∑ckë
,

814 
q21_s_joö_n_∑ckë
,

815 
√w
 
	`q21_l1_joö_s_n_t
());

818 
tu∂e_fifo
* 
q21_l2_joö_l1_s_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_l2_joö_l1_s_n_tu∂e
));

819 
∑ckë_t
* 
q21_l2_joö_l1_s_n_∑ckë
 =

820 
√w
 
	`hash_joö_∑ckë_t
("lineitemÜ2 -Ü1_supplier_nation HJOIN",

821 
q21_l2_joö_l1_s_n_buf„r
,

822 
√w
 
	`q21_exi°s_joö_fûãr_t
(),

823 
q21_löeôem_l2_tsˇn_∑ckë
,

824 
q21_l1_joö_s_n_∑ckë
,

825 
√w
 
	`q21_l2_joö_l1_s_n_t
());

828 
tu∂e_fifo
* 
q21_sub_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_sub_agg_tu∂e
));

829 
∑ckë_t
* 
q21_sub_agg_∑ckë
 =

830 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUB AGGREGATE ON L_ORDERKEY, L_LINENUMBER",

831 
q21_sub_agg_buf„r
,

832 
√w
 
	`åivül_fûãr_t
((
q21_sub_agg_tu∂e
)),

833 
q21_l2_joö_l1_s_n_∑ckë
,

834 
√w
 
	`q21_sub_aggªg©e_t
(),

835 
√w
 
	`deÁu…_key_exåa˘‹_t
(2 * (), 
	`off£tof
(
q21_l2_joö_l1_s_n_tu∂e
, 
L1_ORDERKEY
)),

836 
√w
 
	`öt_key_com∑ª_t
());

839 
tu∂e_fifo
* 
q21_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_Æl_joös_tu∂e
));

840 
∑ckë_t
* 
q21_Æl_joös_∑ckë
 =

841 
√w
 
	`hash_joö_∑ckë_t
("orders -Ü2_l1_supplier_nation HJOIN",

842 
q21_Æl_joös_buf„r
,

843 
√w
 
	`åivül_fûãr_t
((
q21_Æl_joös_tu∂e
)),

844 
q21_‹dîs_tsˇn_∑ckë
,

845 
q21_sub_agg_∑ckë
,

846 
√w
 
	`q21_föÆ_joö_t
());

849 
tu∂e_fifo
* 
q21_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_föÆ_tu∂e
));

850 
∑ckë_t
* 
q21_aggªg©e_∑ckë
 =

851 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGG GROUP BY S_NAME, COUNT",

852 
q21_aggªg©e_buf„r
,

853 
√w
 
	`åivül_fûãr_t
((
q21_föÆ_tu∂e
)),

854 
q21_Æl_joös_∑ckë
,

855 
√w
 
	`q21_aggªg©e_t
(),

856 
√w
 
	`deÁu…_key_exåa˘‹_t
(
	`STRSIZE
(25Ë* (), 
	`off£tof
(
q21_Æl_joös_tu∂e
, 
S_NAME
)),

857 
√w
 
	`öt_key_com∑ª_t
());

860 
tu∂e_fifo
* 
q21_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q21_föÆ_tu∂e
));

861 
∑ckë_t
* 
q21_föÆ_∑ckë
 =

862 
√w
 
	`s‹t_∑ckë_t
("ORDER BY NUMWAIT desc, S_NAME",

863 
q21_föÆ_buf„r
,

864 
√w
 
	`åivül_fûãr_t
((
q21_föÆ_tu∂e
)),

865 
√w
 
	`q21_s‹t_key_exåa˘‹_t
(),

866 
√w
 
	`q21_s‹t_key_com∑ª_t
(),

867 
q21_aggªg©e_∑ckë
);

870 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

871 
q21_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

872 
q21_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

873 
q21_löeôem_l1_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

874 
q21_löeôem_l2_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

875 
q21_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

876 
q21_s_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

877 
q21_l1_joö_s_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

878 
q21_l2_joö_l1_s_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

879 
q21_sub_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

880 
q21_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

881 
q21_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

882 
q21_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

886 
çch_q21_¥o˚ss_tu∂e_t
 
±
;

888 
	`¥o˚ss_quîy
(
q21_föÆ_∑ckë
, 
±
);

890 
dp
->
	`quîy_°©e_de°roy
(
qs
);

893  (
RCOK
);

894 
	}
}

896 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q22.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

87 
	sq22_¥oje˘ed_cu°omî_tu∂e
 {

88 
	mJOINCODE
;

89 
	mCNTRYCODE
;

90 
decimÆ
 
	mC_ACCTBAL
;

93 
	sq22_¥oje˘ed_cu°omî_sub_tu∂e
 {

94 
decimÆ
 
	mC_ACCTBAL
;

97 
	sq22_sub_agg_tu∂e
 {

98 
	mJOINCODE
;

99 
decimÆ
 
	mSUM_ACCTBAL
;

100 
	mCOUNT
;

101 
decimÆ
 
	mAVG_ACCTBAL
;

104 
	sq22_c_joö_c_tu∂e
 {

105 
	mCNTRYCODE
;

106 
decimÆ
 
	mC_ACCTBAL
;

107 
decimÆ
 
	mACCTBAL_THRESHOLD
;

110 
	sq22_aggªg©e_tu∂e
 {

111 
	mCNTRYCODE
;

112 
	mNUMCUST
;

113 
decimÆ
 
	mTOTACCTBAL
;

118 ˛as†
	cq22_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


120 
¥iv©e
:

121 
Sh‹eTPCHEnv
* 
_çchdb
;

122 
èbÀ_row_t
* 
	m_¥cu°
;

123 
ªp_row_t
 
	m_º
;

125 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

126 
	m_˙åycode_ch¨
[3];

127 
	m_˙åycode
;

129 
	m_˙åycodes
[7];

132 
	mpublic
:

133 
	$q22_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q22_öput_t
 &
ö
)

134 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

136 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

137 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

138 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

139 
_¥cu°
->
_ªp
 = &
_º
;

141 
	`mem˝y
(
_˙åycodes
, (&
ö
)->
˙åycode
, (_cntrycodes));

142 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nsub°rög(c_ph⁄ê‰om 1 f‹ 2Ëö ('%d', '%d', '%d', '%d', '%d', '%d', '%d')\n", 
_˙åycodes
[0], _cntrycodes[1], _cntrycodes[2], _cntrycodes[3],

143 
_˙åycodes
[4], _cntrycodes[5], _cntrycodes[6]);

146 
vútuÆ
 ~
	$q22_cu°omî_tsˇn_fûãr_t
()

149 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

150 
	}
}

152 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

154 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

155 
	`as£π
(
Ál£
);

158 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_PHONE
, (_customer.C_PHONE));

160 
_˙åycode_ch¨
[0] = 
_cu°omî
.
C_PHONE
[0];

161 
_˙åycode_ch¨
[1] = 
_cu°omî
.
C_PHONE
[1];

162 
_˙åycode_ch¨
[2] = '\0';

163 
_˙åycode
 = 
	`©oi
(
_˙åycode_ch¨
);

165 
i
 = 0; i < 7; i++) {

166 if(
_˙åycode
 =
_˙åycodes
[
i
]) {

167  
åue
;

170  
Ál£
;

171 
	}
}

173 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

175 
q22_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q22_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

177 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_PHONE
, (_customer.C_PHONE));

178 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_ACCTBAL
);

182 
_˙åycode_ch¨
[0] = 
_cu°omî
.
C_PHONE
[0];

183 
_˙åycode_ch¨
[1] = 
_cu°omî
.
C_PHONE
[1];

184 
_˙åycode_ch¨
[2] = '\0';

185 
de°
->
CNTRYCODE
 = 
	`©oi
(
_˙åycode_ch¨
);

186 
de°
->
C_ACCTBAL
 = 
_cu°omî
.C_ACCTBAL / 100.0;

187 
de°
->
JOINCODE
 = 0;

188 
	}
}

190 
q22_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

191  
√w
 
	`q22_cu°omî_tsˇn_fûãr_t
(*
this
);

192 
	}
}

194 
c_°r
 
	$to_°rög
() const {

195  
	`c_°r
("q22_customer_tscan_filter_t");

196 
	}
}

200 ˛as†
	cq22_cu°omî_sub_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


202 
¥iv©e
:

203 
Sh‹eTPCHEnv
* 
_çchdb
;

204 
èbÀ_row_t
* 
	m_¥cu°
;

205 
ªp_row_t
 
	m_º
;

207 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

208 
	m_˙åycode_ch¨
[3];

209 
	m_˙åycode
;

211 
	m_˙åycodes
[7];

213 
	mpublic
:

214 
	$q22_cu°omî_sub_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q22_öput_t
 &
ö
)

215 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

217 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

218 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

219 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

220 
_¥cu°
->
_ªp
 = &
_º
;

222 
	`mem˝y
(
_˙åycodes
, (&
ö
)->
˙åycode
, (_cntrycodes));

225 
vútuÆ
 ~
	$q22_cu°omî_sub_tsˇn_fûãr_t
()

228 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

229 
	}
}

231 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

233 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

234 
	`as£π
(
Ál£
);

237 
_¥cu°
->
	`gë_vÆue
(4, 
_cu°omî
.
C_PHONE
, (_customer.C_PHONE));

238 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_ACCTBAL
);

239 if(
_cu°omî
.
C_ACCTBAL
 <= 0) {

240  
Ál£
;

242 
_˙åycode_ch¨
[0] = 
_cu°omî
.
C_PHONE
[0];

243 
_˙åycode_ch¨
[1] = 
_cu°omî
.
C_PHONE
[1];

244 
_˙åycode_ch¨
[2] = '\0';

245 
_˙åycode
 = 
	`©oi
(
_˙åycode_ch¨
);

247 
i
 = 0; i < 7; i++) {

248 if(
_˙åycode
 =
_˙åycodes
[
i
]) {

249  
åue
;

252  
Ál£
;

253 
	}
}

255 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

257 
q22_¥oje˘ed_cu°omî_sub_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q22_¥oje˘ed_cu°omî_sub_tu∂e>(
d
.
d©a
);

259 
_¥cu°
->
	`gë_vÆue
(5, 
_cu°omî
.
C_ACCTBAL
);

263 
de°
->
C_ACCTBAL
 = 
_cu°omî
.C_ACCTBAL / 100.0;

264 
	}
}

266 
q22_cu°omî_sub_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

267  
√w
 
	`q22_cu°omî_sub_tsˇn_fûãr_t
(*
this
);

268 
	}
}

270 
c_°r
 
	$to_°rög
() const {

271  
	`c_°r
("q22_customer_sub_tscan_filter_t");

272 
	}
}

275 
	gq22_sub_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

277 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

279 
q22_sub_aggªg©e_t
()

280 : 
tu∂e_aggªg©e_t
((
q22_sub_agg_tu∂e
))

284 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

285  &
_exåa˘‹
;

288 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

289 
q22_sub_agg_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q22_sub_agg_tu∂e>(
agg_d©a
);

290 
q22_¥oje˘ed_cu°omî_sub_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q22_¥oje˘ed_cu°omî_sub_tu∂e>(
t
.
d©a
);

292 
	gagg
->
	gCOUNT
++;

293 
	gagg
->
	gSUM_ACCTBAL
 +
öput
->
C_ACCTBAL
;

295 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

296 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

297 
q22_sub_agg_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q22_sub_agg_tu∂e>(
de°
.
d©a
);

298 
	gagg
->
	gAVG_ACCTBAL
 = 
agg
->
SUM_ACCTBAL
 /ágg->
COUNT
;

299 
	gagg
->
	gJOINCODE
 = 0;

302 
vútuÆ
 
q22_sub_aggªg©e_t
* 
˛⁄e
() const {

303  
√w
 
q22_sub_aggªg©e_t
(*
this
);

305 
vútuÆ
 
c_°r
 
to_°rög
() const {

311 
	gq22_c_joö_c_t
 : 
public
 
tu∂e_joö_t
 {

313 
q22_c_joö_c_t
()

314 : 
tu∂e_joö_t
((
q22_¥oje˘ed_cu°omî_tu∂e
),

315 
off£tof
(
q22_¥oje˘ed_cu°omî_tu∂e
, 
JOINCODE
),

316 (
q22_sub_agg_tu∂e
),

317 
off£tof
(
q22_sub_agg_tu∂e
, 
JOINCODE
),

319 (
q22_c_joö_c_tu∂e
))

323 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

324 
q22_c_joö_c_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q22_c_joö_c_tu∂e>(
d
.
d©a
);

325 
q22_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q22_¥oje˘ed_cu°omî_tu∂e>(
l
.
d©a
);

326 
q22_sub_agg_tu∂e
 *
	gsub
 = 
Æig√d_ˇ°
<q22_sub_agg_tu∂e>(
r
.
d©a
);

328 
	gde°
->
	gACCTBAL_THRESHOLD
 = 
sub
->
AVG_ACCTBAL
;

329 
	gde°
->
	gC_ACCTBAL
 = 
cu°
->
C_ACCTBAL
;

330 
	gde°
->
	gCNTRYCODE
 = 
cu°
->
CNTRYCODE
;

335 
vútuÆ
 
q22_c_joö_c_t
* 
˛⁄e
() const {

336  
√w
 
q22_c_joö_c_t
(*
this
);

339 
vútuÆ
 
c_°r
 
to_°rög
() const {

340  
c_°r
("join CUSTOMER c, CUSTOMER sub; select sub.ACCTBAL_THRESHOLD, c.C_ACCTBAL, c.CNTRYCODE");

344 
	gq22_joö_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

346 
q22_joö_fûãr_t
()

347 : 
tu∂e_fûãr_t
((
q22_c_joö_c_tu∂e
))

351 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

352 
q22_c_joö_c_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q22_c_joö_c_tu∂e>(
öput
.
d©a
);

353  
	gö
->
	gC_ACCTBAL
 > in->
	gACCTBAL_THRESHOLD
;

356 
vútuÆ
 
q22_joö_fûãr_t
* 
˛⁄e
() const {

357  
√w
 
q22_joö_fûãr_t
(*
this
);

360 
vútuÆ
 
c_°r
 
to_°rög
() const {

361  
c_°r
("q22_join_filter_t");

365 
	gq22_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

367 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

369 
q22_aggªg©e_t
()

370 : 
tu∂e_aggªg©e_t
((
q22_sub_agg_tu∂e
))

374 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

375  &
_exåa˘‹
;

378 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

379 
q22_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q22_aggªg©e_tu∂e>(
agg_d©a
);

380 
q22_c_joö_c_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q22_c_joö_c_tu∂e>(
t
.
d©a
);

382 
	gagg
->
	gNUMCUST
++;

383 
	gagg
->
	gCNTRYCODE
 = 
öput
->
CNTRYCODE
;

384 
	gagg
->
	gTOTACCTBAL
 +
öput
->
C_ACCTBAL
;

386 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

387 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

389 
vútuÆ
 
q22_aggªg©e_t
* 
˛⁄e
() const {

390  
√w
 
q22_aggªg©e_t
(*
this
);

392 
vútuÆ
 
c_°r
 
to_°rög
() const {

397 
	gq22_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

399 
q22_s‹t_key_exåa˘‹_t
()

400 : 
key_exåa˘‹_t
((), 
off£tof
(
q22_c_joö_c_tu∂e
, 
CNTRYCODE
))

404 
vútuÆ
 
exåa˘_höt
(c⁄° *
key
) const {

405 
	g˙åycode
 = *(
Æig√d_ˇ°
<>(
key
));

406  
	g˙åycode
;

409 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

410  
√w
 
q22_s‹t_key_exåa˘‹_t
(*
this
);

414 
	gq22_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

416 
q22_s‹t_key_com∑ª_t
()

420 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

421 
	g˙åycode1
 = *(
Æig√d_ˇ°
<>(
key1
));

422 
	g˙åycode2
 = *(
Æig√d_ˇ°
<>(
key2
));

423  
	g˙åycode1
 - 
	g˙åycode2
;

426 
vútuÆ
 
q22_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

427  
√w
 
q22_s‹t_key_com∑ª_t
(*
this
);

432 ˛as†
	cçch_q22_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

434 
public
:

436 
vútuÆ
 
	$begö
() {

437 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q22 %s %s %s\n",

441 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

442 
q22_aggªg©e_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q22_aggªg©e_tu∂e>(
ouçut
.
d©a
);

444 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q22 %d %d %.4f\n", 
agg
->
CNTRYCODE
,ágg->
NUMCUST
,ágg->
TOTACCTBAL
.
	`to_doubÀ
());

445 
	}
}

456 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q22
(c⁄° 
x˘_id
,

457 
q22_öput_t
& 
ö
)

459 
	`TRACE
–
TRACE_ALWAYS
, "********** q22 *********\n");

461 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

462 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

466 
tu∂e_fifo
* 
q22_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_¥oje˘ed_cu°omî_tu∂e
));

467 
∑ckë_t
* 
q22_cu°omî_tsˇn_∑ckë
 =

468 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

469 
q22_cu°omî_buf„r
,

470 
√w
 
	`q22_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

471 
this
->
	`db
(),

472 
_pcu°omî_desc
.
	`gë
(),

473 
px˘
);

476 
tu∂e_fifo
* 
q22_cu°omî_sub_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_¥oje˘ed_cu°omî_sub_tu∂e
));

477 
∑ckë_t
* 
q22_cu°omî_sub_tsˇn_∑ckë
 =

478 
√w
 
	`tsˇn_∑ckë_t
("customer sub TSCAN",

479 
q22_cu°omî_sub_buf„r
,

480 
√w
 
	`q22_cu°omî_sub_tsˇn_fûãr_t
(
this
, 
ö
),

481 
this
->
	`db
(),

482 
_pcu°omî_desc
.
	`gë
(),

483 
px˘
);

486 
tu∂e_fifo
* 
q22_sub_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_sub_agg_tu∂e
));

487 
∑ckë_t
* 
q22_sub_agg_∑ckë
 =

488 
√w
 
	`aggªg©e_∑ckë_t
("SUB AGGREGATE AVG C_ACCTBAL",

489 
q22_sub_agg_buf„r
,

490 
√w
 
	`åivül_fûãr_t
((
q22_sub_agg_tu∂e
)),

491 
√w
 
	`q22_sub_aggªg©e_t
(),

492 
√w
 
	`deÁu…_key_exåa˘‹_t
(0, 0),

493 
q22_cu°omî_sub_tsˇn_∑ckë
);

496 
tu∂e_fifo
* 
q22_c_joö_c_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_c_joö_c_tu∂e
));

497 
∑ckë_t
* 
q22_c_joö_c_∑ckë
 =

498 
√w
 
	`hash_joö_∑ckë_t
("customer - customer HJOIN",

499 
q22_c_joö_c_buf„r
,

500 
√w
 
	`q22_joö_fûãr_t
(),

501 
q22_cu°omî_tsˇn_∑ckë
,

502 
q22_sub_agg_∑ckë
,

503 
√w
 
	`q22_c_joö_c_t
());

506 
tu∂e_fifo
* 
q22_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_c_joö_c_tu∂e
));

507 
∑ckë_t
* 
q22_s‹t_∑ckë
 =

508 
√w
 
	`s‹t_∑ckë_t
("ORDER BY CNTRYCODE",

509 
q22_s‹t_buf„r
,

510 
√w
 
	`åivül_fûãr_t
((
q22_c_joö_c_tu∂e
)),

511 
√w
 
	`q22_s‹t_key_exåa˘‹_t
(),

512 
√w
 
	`q22_s‹t_key_com∑ª_t
(),

513 
q22_c_joö_c_∑ckë
);

516 
tu∂e_fifo
* 
q22_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q22_aggªg©e_tu∂e
));

517 
∑ckë_t
* 
q22_föÆ_∑ckë
 =

518 
√w
 
	`aggªg©e_∑ckë_t
("SUM, COUNT, GROUP BY AGGREGATE",

519 
q22_föÆ_buf„r
,

520 
√w
 
	`åivül_fûãr_t
((
q22_aggªg©e_tu∂e
)),

521 
√w
 
	`q22_aggªg©e_t
(),

522 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q22_c_joö_c_tu∂e
, 
CNTRYCODE
)),

523 
q22_s‹t_∑ckë
);

526 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

527 
q22_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

528 
q22_cu°omî_sub_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

529 
q22_sub_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

530 
q22_c_joö_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

531 
q22_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

532 
q22_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

536 
çch_q22_¥o˚ss_tu∂e_t
 
±
;

538 
	`¥o˚ss_quîy
(
q22_föÆ_∑ckë
, 
±
);

540 
dp
->
	`quîy_°©e_de°roy
(
qs
);

543  (
RCOK
);

544 
	}
}

547 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q3.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

77 
	sq3_¥oje˘ed_cu°omî_tu∂e
 {

78 
	mC_CUSTKEY
;

81 
	sq3_¥oje˘ed_‹dîs_tu∂e
 {

82 
	mO_ORDERKEY
;

83 
	mO_CUSTKEY
;

84 
time_t
 
	mO_ORDERDATE
;

85 
	mO_SHIPPRIORITY
;

88 
	sq3_¥oje˘ed_löeôem_tu∂e
 {

89 
	mL_ORDERKEY
;

90 
decimÆ
 
	mL_EXTENDEDPRICE
;

91 
decimÆ
 
	mL_DISCOUNT
;

95 
	sq3_o_joö_c_tu∂e
 {

96 
	mO_ORDERKEY
;

97 
time_t
 
	mO_ORDERDATE
;

98 
	mO_SHIPPRIORITY
;

101 
	sq3_aggªg©ed_löeôem_tu∂e
 {

102 
	mL_ORDERKEY
;

103 
decimÆ
 
	mREVENUE
;

106 
	sq3_aggªg©ed_tu∂e
 {

107 
	mL_ORDERKEY
;

108 
time_t
 
	mO_ORDERDATE
;

109 
	mO_SHIPPRIORITY
;

110 
decimÆ
 
	mREVENUE
;

113 
	sq3_agg_key
 {

114 
	mL_ORDERKEY
;

115 
time_t
 
	mO_ORDERDATE
;

116 
	mO_SHIPPRIORITY
;

120 ˛as†
	cq3_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


122 
¥iv©e
:

123 
Sh‹eTPCHEnv
* 
_çchdb
;

124 
èbÀ_row_t
* 
	m_¥cu°
;

125 
ªp_row_t
 
	m_º
;

127 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

129 
q3_öput_t
* 
	mq3_öput
;

130 
	m_mkt£gmít
[
STRSIZE
(10)];

132 
	mpublic
:

133 
	$q3_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q3_öput_t
 &
ö
)

134 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

136 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

137 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

138 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

139 
_¥cu°
->
_ªp
 = &
_º
;

142 
q3_öput
 = &
ö
;

143 
	`£gmít_to_°r
(
_mkt£gmít
, 
q3_öput
->
c_£gmít
);

145 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nCUSTOMER.C_MKTSEGMENT = '%s'\n", 
_mkt£gmít
);

148 
vútuÆ
 ~
	$q3_cu°omî_tsˇn_fûãr_t
()

151 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

152 
	}
}

154 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

156 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

157 
	`as£π
(
Ál£
);

160 
_¥cu°
->
	`gë_vÆue
(6, 
_cu°omî
.
C_MKTSEGMENT
, 
	`STRSIZE
(10));

162  (
	`°rcmp
(
_cu°omî
.
C_MKTSEGMENT
, 
_mkt£gmít
) == 0);

163 
	}
}

165 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

167 
q3_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

169 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

173 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

174 
	}
}

176 
q3_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

177  
√w
 
	`q3_cu°omî_tsˇn_fûãr_t
(*
this
);

178 
	}
}

180 
c_°r
 
	$to_°rög
() const {

182  
	`c_°r
("q3_customer_tscan_filter_t");

183 
	}
}

187 ˛as†
	cq3_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


189 
¥iv©e
:

190 
Sh‹eTPCHEnv
* 
_çchdb
;

191 
èbÀ_row_t
* 
	m_¥‹dîs
;

192 
ªp_row_t
 
	m_º
;

194 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

195 
time_t
 
	m_‹dîd©e
;

197 
q3_öput_t
* 
	mq3_öput
;

199 
	mpublic
:

200 
	$q3_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q3_öput_t
 &
ö
)

201 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

203 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

204 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

205 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

206 
_¥‹dîs
->
_ªp
 = &
_º
;

209 
q3_öput
 = &
ö
;

211 
time
[15];

212 
	`timë_to_°r
(
time
, 
q3_öput
->
cuºít_d©e
);

213 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nORDERS.O_ORDERDATE < %s\n", 
time
);

216 
vútuÆ
 ~
	$q3_‹dîs_tsˇn_fûãr_t
()

219 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

220 
	}
}

222 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

224 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

225 
	`as£π
(
Ál£
);

228 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, 15);

229 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

231  
_‹dîd©e
 < 
q3_öput
->
cuºít_d©e
;

232 
	}
}

234 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

236 
q3_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

238 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

239 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

240 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, 15);

241 
_¥‹dîs
->
	`gë_vÆue
(7, 
_‹dîs
.
O_SHIPPRIORITY
);

245 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

246 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

247 
de°
->
O_ORDERDATE
 = 
	`°r_to_timë
(
_‹dîs
.O_ORDERDATE);

248 
de°
->
O_SHIPPRIORITY
 = 
_‹dîs
.O_SHIPPRIORITY;

250 
	}
}

252 
q3_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

253  
√w
 
	`q3_‹dîs_tsˇn_fûãr_t
(*
this
);

254 
	}
}

256 
c_°r
 
	$to_°rög
() const {

257  
	`c_°r
("q3_‹dîs_tsˇn_fûãr_t(%s)", 
	`˘ime
(&(
q3_öput
->
cuºít_d©e
)));

258 
	}
}

261 ˛as†
	cq3_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


263 
¥iv©e
:

264 
Sh‹eTPCHEnv
* 
_çchdb
;

265 
èbÀ_row_t
* 
	m_¥löe
;

266 
ªp_row_t
 
	m_º
;

268 
çch_löeôem_tu∂e
 
	m_löeôem
;

269 
time_t
 
	m_shùd©e
;

271 
q3_öput_t
* 
	mq3_öput
;

273 
	mpublic
:

274 
	$q3_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q3_öput_t
 &
ö
)

275 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

277 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

278 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

279 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

280 
_¥löe
->
_ªp
 = &
_º
;

283 
q3_öput
 = &
ö
;

285 
time
[15];

286 
	`timë_to_°r
(
time
, 
q3_öput
->
cuºít_d©e
);

287 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇã:\nLINEITEM.L_SHIPDATE > %s\n", 
time
);

290 
vútuÆ
 ~
	$q3_löeôem_tsˇn_fûãr_t
()

293 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

294 
	}
}

296 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

298 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

299 
	`as£π
(
Ál£
);

302 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

303 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

305  
_shùd©e
 > 
q3_öput
->
cuºít_d©e
;

306 
	}
}

308 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

310 
q3_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

312 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

313 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

314 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

316 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

317 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

318 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT / 100.0;

319 
	}
}

321 
q3_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

322  
√w
 
	`q3_löeôem_tsˇn_fûãr_t
(*
this
);

323 
	}
}

325 
c_°r
 
	$to_°rög
() const {

326  
	`c_°r
("q3_löeôem_tsˇn_fûãr_t(%s)", 
	`˘ime
(&(
q3_öput
->
cuºít_d©e
)));

327 
	}
}

332 
	gq3_o_joö_c_t
 : 
public
 
tu∂e_joö_t
 {

334 
q3_o_joö_c_t
()

335 : 
tu∂e_joö_t
((
q3_¥oje˘ed_‹dîs_tu∂e
),

336 
off£tof
(
q3_¥oje˘ed_‹dîs_tu∂e
, 
O_CUSTKEY
),

337 (
q3_¥oje˘ed_cu°omî_tu∂e
),

338 
off£tof
(
q3_¥oje˘ed_cu°omî_tu∂e
, 
C_CUSTKEY
),

340 (
q3_o_joö_c_tu∂e
))

344 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

345 
q3_o_joö_c_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q3_o_joö_c_tu∂e>(
d
.
d©a
);

346 
q3_¥oje˘ed_‹dîs_tu∂e
* 
	gÀ·
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_‹dîs_tu∂e>(
l
.
d©a
);

347 
q3_¥oje˘ed_cu°omî_tu∂e
* 
	gright
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_cu°omî_tu∂e>(
r
.
d©a
);

349 
	gde°
->
	gO_ORDERKEY
 = 
À·
->
O_ORDERKEY
;

350 
	gde°
->
	gO_ORDERDATE
 = 
À·
->
O_ORDERDATE
;

351 
	gde°
->
	gO_SHIPPRIORITY
 = 
À·
->
O_SHIPPRIORITY
;

353 
	gd©e
[
STRSIZE
(10)];

354 
timë_to_°r
(
d©e
, 
À·
->
O_ORDERDATE
);

358 
vútuÆ
 
q3_o_joö_c_t
* 
˛⁄e
() const {

359  
√w
 
q3_o_joö_c_t
(*
this
);

362 
vútuÆ
 
c_°r
 
to_°rög
() const {

363  
c_°r
("join ORDERS, CUSTOMER, select O_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY");

368 
	gq3_löeôem_sõve_t
 : 
public
 
tu∂e_sõve_t
 {

370 
q3_löeôem_sõve_t
()

371 :
tu∂e_sõve_t
((
q3_aggªg©ed_löeôem_tu∂e
))

375 
vútuÆ
 
boﬁ
 
∑ss
(
tu∂e_t
& 
de°
, c⁄°Åu∂e_t& 
§c
) {

376 
q3_aggªg©ed_löeôem_tu∂e
* 
	gout
 = 
Æig√d_ˇ°
<q3_aggªg©ed_löeôem_tu∂e>(
de°
.
d©a
);

377 
q3_¥oje˘ed_löeôem_tu∂e
* 
	gö
 = 
Æig√d_ˇ°
<q3_¥oje˘ed_löeôem_tu∂e>(
§c
.
d©a
);

379 
	gout
->
	gL_ORDERKEY
 = 
ö
->
L_ORDERKEY
;

380 
	gout
->
	gREVENUE
 = 
ö
->
L_EXTENDEDPRICE
 * (1 - in->
L_DISCOUNT
);

381  
	gåue
;

384 
vútuÆ
 
q3_löeôem_sõve_t
* 
˛⁄e
() const {

385  
√w
 
q3_löeôem_sõve_t
(*
this
);

388 
vútuÆ
 
c_°r
 
to_°rög
() const {

389  
c_°r
("q3_lineitem_sieve_t");

394 
	gq3_l_joö_oc_t
 : 
public
 
tu∂e_joö_t
 {

396 
q3_l_joö_oc_t
()

397 :
tu∂e_joö_t
((
q3_aggªg©ed_löeôem_tu∂e
),

398 
off£tof
(
q3_aggªg©ed_löeôem_tu∂e
, 
L_ORDERKEY
),

399 (
q3_o_joö_c_tu∂e
),

400 
off£tof
(
q3_o_joö_c_tu∂e
, 
O_ORDERKEY
),

402 (
q3_aggªg©ed_tu∂e
))

406 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

408 
q3_aggªg©ed_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
d
.
d©a
);

409 
q3_aggªg©ed_löeôem_tu∂e
* 
	gÀ·
 = 
Æig√d_ˇ°
<q3_aggªg©ed_löeôem_tu∂e>(
l
.
d©a
);

410 
q3_o_joö_c_tu∂e
* 
	gright
 = 
Æig√d_ˇ°
<q3_o_joö_c_tu∂e>(
r
.
d©a
);

412 
	gde°
->
	gL_ORDERKEY
 = 
À·
->
L_ORDERKEY
;

413 
	gde°
->
	gREVENUE
 = 
À·
->
REVENUE
;

414 
	gde°
->
	gO_ORDERDATE
 = 
right
->
O_ORDERDATE
;

415 
	gde°
->
	gO_SHIPPRIORITY
 = 
right
->
O_SHIPPRIORITY
;

417 
	gd©e
[
STRSIZE
(10)];

418 
timë_to_°r
(
d©e
, 
right
->
O_ORDERDATE
);

422 
vútuÆ
 
q3_l_joö_oc_t
* 
˛⁄e
() const {

423  
√w
 
q3_l_joö_oc_t
(*
this
);

426 
vútuÆ
 
c_°r
 
to_°rög
() const {

427  
c_°r
("join LINEITEM, ORDERS, CUSTOMER, select L_ORDERKEY, REVENUE, O_ORDERDATE, O_SHIPPRIORITY");

432 
	gq3_agg_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

434 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

435 
q3_agg_key
* 
	gk1
 = 
Æig√d_ˇ°
<q3_agg_key>(
key1
);

436 
q3_agg_key
* 
	gk2
 = 
Æig√d_ˇ°
<q3_agg_key>(
key2
);

437 
	gdiff_‹dîkey
 = 
k1
->
L_ORDERKEY
 - 
k2
->L_ORDERKEY;

438 
	gdiff_‹dîd©e
 = 
k1
->
O_ORDERDATE
 - 
k2
->O_ORDERDATE;

439 
	gdiff_shù¥io
 = 
k1
->
O_SHIPPRIORITY
 - 
k2
->O_SHIPPRIORITY;

441  (
	gdiff_‹dîkey
 !0 ? 
diff_‹dîkey
 : (
diff_‹dîd©e
 !0 ? diff_‹dîd©ê: 
diff_shù¥io
));

444 
vútuÆ
 
q3_agg_key_com∑ª_t
* 
˛⁄e
() const {

445  
√w
 
q3_agg_key_com∑ª_t
(*
this
);

450 
	gq3_aggªg©e_t
 : 
tu∂e_aggªg©e_t
 {

451 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

453 
q3_aggªg©e_t
()

454 :
tu∂e_aggªg©e_t
((
q3_aggªg©ed_tu∂e
)),

455 
_exåa˘‹
((
q3_agg_key
), 
off£tof
(q3_agg_key, 
L_ORDERKEY
))

459 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

460  &
	g_exåa˘‹
;

463 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

464 
q3_aggªg©ed_tu∂e
* 
	gde°
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
agg_d©a
);

465 
q3_aggªg©ed_tu∂e
* 
	g§c
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
t
.
d©a
);

466 
	gde°
->
	gREVENUE
 +
§c
->
REVENUE
;

467 if(
	gde°
->
	gL_ORDERKEY
 =3987331Ë
TRACE
(
TRACE_RECORD_FLOW
, "%.2f|%.2f\n", 
§c
->
REVENUE
.
to_doubÀ
(), 
de°
->REVENUE.to_double());

470 
vútuÆ
 
q3_aggªg©e_t
* 
˛⁄e
() const {

471  
√w
 
q3_aggªg©e_t
(*
this
);

474 
vútuÆ
 
föish
(
tu∂e_t
& 
d
, c⁄° * 
agg_d©a
) {

475 
mem˝y
(
d
.
d©a
, 
agg_d©a
, 
tu∂e_size
());

478 
vútuÆ
 
c_°r
 
to_°rög
() const {

479  
c_°r
("q3_aggregate_t");

482 
vútuÆ
 
öô
(* 
agg_d©a
) {

483 
mem£t
(
agg_d©a
, 0, 
tu∂e_size
());

487 
	gq3_t›10_t
 : 
tu∂e_aggªg©e_t
 {

488 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

490 
q3_t›10_t
()

491 : 
tu∂e_aggªg©e_t
((
q3_aggªg©ed_tu∂e
)),

492 
_exåa˘‹
(0,0)

496 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

497  &
	g_exåa˘‹
;

500 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

501 
mem˝y
(
agg_d©a
, 
t
.
d©a
, 
tu∂e_size
());

504 
vútuÆ
 
q3_t›10_t
* 
˛⁄e
() const {

505  
√w
 
q3_t›10_t
(*
this
);

508 
vútuÆ
 
föish
(
tu∂e_t
& 
d
, c⁄° * 
agg_d©a
) {

509 
mem˝y
(
d
.
d©a
, 
agg_d©a
, 
tu∂e_size
());

512 
vútuÆ
 
c_°r
 
to_°rög
() const {

513  
c_°r
("q3_top10_t");

517 
	gq3_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

519 
q3_s‹t_key_exåa˘‹_t
(Ë: 
key_exåa˘‹_t
((
q3_aggªg©ed_tu∂e
))

523 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_key
) {

524 
q3_aggªg©ed_tu∂e
* 
tu∂e
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
tu∂e_key
);

525  -((
	gtu∂e
->
	gREVENUE
).
to_öt
());

528 
vútuÆ
 
q3_s‹t_key_exåa˘‹_t
* 
˛⁄e
() const {

529  
√w
 
q3_s‹t_key_exåa˘‹_t
(*
this
);

533 
	gq3_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

535 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

536 
q3_aggªg©ed_tu∂e
* 
	gt1
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
key1
);

537 
q3_aggªg©ed_tu∂e
* 
	gt2
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
key2
);

538 
	gdiff_ªv
 = (
t2
->
REVENUE
 - 
t1
->REVENUE).
to_öt
();

539 
	gdiff_time
 = 
t2
->
O_ORDERDATE
 - 
t1
->O_ORDERDATE;

541  (
	gdiff_ªv
 !0 ? 
diff_ªv
 : 
diff_time
);

544 
vútuÆ
 
q3_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

545  
√w
 
q3_s‹t_key_com∑ª_t
(*
this
);

549 ˛as†
	cq3_t›10_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

551 
¥iv©e
:

552 
_cou¡
;

554 
	mpublic
:

556 
	$q3_t›10_fûãr_t
(Ë: 
	`tu∂e_fûãr_t
((
q3_aggªg©ed_tu∂e
)), 
	$_cou¡
(0)

560 
vútuÆ
 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
tu∂e
) {

561 if(++
_cou¡
 <= 10) {

562  
åue
;

565  
Ál£
;

567 
	}
}

569 
vútuÆ
 
q3_t›10_fûãr_t
* 
	$˛⁄e
() const {

570  
√w
 
	`q3_t›10_fûãr_t
(*
this
);

571 
	}
}

573 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

574  
	`c_°r
("q3_top10_filter_t");

575 
	}
}

580 ˛as†
	cçch_q3_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

582 
public
:

584 
vútuÆ
 
	$begö
() {

585 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q3 %14s %14s %14s %14s\n",

589 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

590 
q3_aggªg©ed_tu∂e
* 
r
 = 
Æig√d_ˇ°
<q3_aggªg©ed_tu∂e>(
ouçut
.
d©a
);

592 
d©e
[
	`STRSIZE
(10)];

593 
	`timë_to_°r
(
d©e
, 
r
->
O_ORDERDATE
);

594 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q3 %14d %14.4f %14s %14d\n",

595 
r
->
L_ORDERKEY
,Ñ->
REVENUE
.
	`to_doubÀ
(), 
d©e
,Ñ->
O_SHIPPRIORITY
);

596 
	}
}

608 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q3
(c⁄° 
x˘_id
,

609 
q3_öput_t
& 
ö
)

611 
	`TRACE
–
TRACE_ALWAYS
, "********** Q3 *********\n");

613 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

614 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

618 
tu∂e_fifo
* 
q3_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_¥oje˘ed_cu°omî_tu∂e
));

619 
∑ckë_t
* 
q3_cu°omî_tsˇn_∑ckë
 =

620 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

621 
q3_cu°omî_buf„r
,

622 
√w
 
	`q3_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

623 
this
->
	`db
(),

624 
_pcu°omî_desc
.
	`gë
(),

625 
px˘
);

628 
tu∂e_fifo
* 
q3_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_¥oje˘ed_‹dîs_tu∂e
));

629 
∑ckë_t
* 
q3_‹dîs_tsˇn_∑ckë
 =

630 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

631 
q3_‹dîs_buf„r
,

632 
√w
 
	`q3_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

633 
this
->
	`db
(),

634 
_p‹dîs_desc
.
	`gë
(),

635 
px˘
);

638 
tu∂e_fifo
* 
q3_o_joö_c_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_o_joö_c_tu∂e
));

639 
∑ckë_t
* 
q3_o_joö_c_∑ckë
 =

640 
√w
 
	`hash_joö_∑ckë_t
("orders-customer HJOIN",

641 
q3_o_joö_c_buf„r
,

642 
√w
 
	`åivül_fûãr_t
((
q3_o_joö_c_tu∂e
)),

643 
q3_‹dîs_tsˇn_∑ckë
,

644 
q3_cu°omî_tsˇn_∑ckë
,

645 
√w
 
	`q3_o_joö_c_t
());

648 
tu∂e_fifo
* 
q3_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_¥oje˘ed_löeôem_tu∂e
));

649 
∑ckë_t
* 
q3_löeôem_tsˇn_∑ckë
 =

650 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

651 
q3_löeôem_buf„r
,

652 
√w
 
	`q3_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

653 
this
->
	`db
(),

654 
_∂öeôem_desc
.
	`gë
(),

655 
px˘
);

658 
tu∂e_fifo
* 
q3_aggªg©ed_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_aggªg©ed_löeôem_tu∂e
));

659 
sõve_∑ckë_t
* 
q3_aggªg©ed_löeôem_∑ckë
 =

660 
√w
 
	`sõve_∑ckë_t
("lineitem AGGREGATE",

661 
q3_aggªg©ed_löeôem_buf„r
,

662 
√w
 
	`åivül_fûãr_t
((
q3_aggªg©ed_löeôem_tu∂e
)),

663 
√w
 
	`q3_löeôem_sõve_t
(),

664 
q3_löeôem_tsˇn_∑ckë
);

667 
tu∂e_fifo
* 
q3_l_joö_oc_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_aggªg©ed_tu∂e
));

668 
∑ckë_t
* 
q3_l_joö_oc_∑ckë
 =

669 
√w
 
	`hash_joö_∑ckë_t
("lineitem-orders_customer HJOIN",

670 
q3_l_joö_oc_buf„r
,

671 
√w
 
	`åivül_fûãr_t
((
q3_aggªg©ed_tu∂e
)),

672 
q3_aggªg©ed_löeôem_∑ckë
,

673 
q3_o_joö_c_∑ckë
,

674 
√w
 
	`q3_l_joö_oc_t
());

677 
tu∂e_fifo
* 
q3_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_aggªg©ed_tu∂e
));

678 
∑ckë_t
* 
q3_agg_∑ckë
 =

679 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUM AGG",

680 
q3_agg_buf„r
,

681 
√w
 
	`åivül_fûãr_t
((
q3_aggªg©ed_tu∂e
)),

682 
q3_l_joö_oc_∑ckë
,

683 
√w
 
	`q3_aggªg©e_t
(),

684 
√w
 
	`deÁu…_key_exåa˘‹_t
((
q3_agg_key
)),

685 
√w
 
	`q3_agg_key_com∑ª_t
());

688 
tu∂e_fifo
* 
q3_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_aggªg©ed_tu∂e
));

689 
∑ckë_t
* 
q3_föÆ_∑ckë
 =

690 
√w
 
	`s‹t_∑ckë_t
("SORT",

691 
q3_föÆ_buf„r
,

692 
√w
 
	`q3_t›10_fûãr_t
(),

693 
√w
 
	`q3_s‹t_key_exåa˘‹_t
(),

694 
√w
 
	`q3_s‹t_key_com∑ª_t
(),

695 
q3_agg_∑ckë
);

697 
tu∂e_fifo
* 
q3_fföÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q3_aggªg©ed_tu∂e
));

698 
∑ckë_t
* 
q3_fföÆ_∑ckë
 =

699 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("Top10 Agg",

700 
q3_fföÆ_buf„r
,

701 
√w
 
	`q3_t›10_fûãr_t
(),

702 
q3_föÆ_∑ckë
,

703 
√w
 
	`q3_t›10_t
(),

704 
√w
 
	`deÁu…_key_exåa˘‹_t
((
q3_aggªg©ed_tu∂e
)),

705 
√w
 
	`öt_key_com∑ª_t
());

709 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

710 
q3_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

711 
q3_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

712 
q3_o_joö_c_∑ckë
->
	`assign_quîy_°©e
(
qs
);

713 
q3_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

714 
q3_aggªg©ed_löeôem_∑ckë
->
	`assign_quîy_°©e
(
qs
);

715 
q3_l_joö_oc_∑ckë
->
	`assign_quîy_°©e
(
qs
);

716 
q3_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

717 
q3_föÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

718 
q3_fföÆ_∑ckë
->
	`assign_quîy_°©e
(
qs
);

721 
çch_q3_¥o˚ss_tu∂e_t
 
±
;

723 
	`¥o˚ss_quîy
(
q3_föÆ_∑ckë
, 
±
);

725 
dp
->
	`quîy_°©e_de°roy
(
qs
);

728  (
RCOK
);

729 
	}
}

732 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q4.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

84 
	sq4_¥oje˘ed_löeôem_tu∂e
 {

85 
	mL_ORDERKEY
;

89 
	sq4_¥oje˘ed_‹dîs_tu∂e
 {

90 
	mO_ORDERKEY
;

91 
	mO_ORDERPRIORITY
;

95 
	sq4_joö_tu∂e
 {

96 
	mO_ORDERPRIORITY
;

100 
	sq4_aggªg©e_tu∂e
 {

101 
	mO_ORDERPRIORITY
;

102 
	mO_COUNT
;

107 ˛as†
	cq4_tsˇn_löeôem_fûãr_t
 : 
public
 
tu∂e_fûãr_t


109 
¥iv©e
:

110 
Sh‹eTPCHEnv
* 
_çchdb
;

111 
èbÀ_row_t
* 
	m_¥löe
;

112 
ªp_row_t
 
	m_º
;

115 
çch_löeôem_tu∂e
 
	m_löeôem
;

117 
time_t
 
	m_commôd©e
;

118 
time_t
 
	m_ª˚ùtd©e
;

120 
	mpublic
:

122 
	$q4_tsˇn_löeôem_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
)

123 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

127 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

128 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

129 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

130 
_¥löe
->
_ªp
 = &
_º
;

133 ~
	$q4_tsˇn_löeôem_fûãr_t
()

136 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

137 
	}
}

141 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

144 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

145 
	`as£π
(
Ál£
);

148 
_¥löe
->
	`gë_vÆue
(12, 
_löeôem
.
L_RECEIPTDATE
, 15);

149 
_ª˚ùtd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_RECEIPTDATE
);

151 
_¥löe
->
	`gë_vÆue
(11, 
_löeôem
.
L_COMMITDATE
, 15);

152 
_commôd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_COMMITDATE
);

156 i‡–
_ª˚ùtd©e
 > 
_commôd©e
) {

158  (
åue
);

162  (
Ál£
);

164 
	}
}

168 
	$¥oje˘
(
tu∂e_t
 &
d
, constÅuple_t & ) {

170 
q4_¥oje˘ed_löeôem_tu∂e
 *
de°
;

171 
de°
 = 
Æig√d_ˇ°
<
q4_¥oje˘ed_löeôem_tu∂e
>(
d
.
d©a
);

173 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

178 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

179 
	}
}

181 
q4_tsˇn_löeôem_fûãr_t
* 
	$˛⁄e
() const {

182  
√w
 
	`q4_tsˇn_löeôem_fûãr_t
(*
this
);

183 
	}
}

185 
c_°r
 
	$to_°rög
() const {

186  
	`c_°r
("select L_ORDERKEY where L_COMMITDATE < L_RECEIPTDATE");

187 
	}
}

192 ˛as†
	cq4_di°ö˘_t
 : 
public
 
tu∂e_aggªg©e_t
 {

194 
public
:

196 ˛as†
	cq4_di°ö˘_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

197 
public
:

198 
q4_di°ö˘_key_exåa˘‹_t
()

199 : 
key_exåa˘‹_t
((), 
off£tof
(
q4_¥oje˘ed_löeôem_tu∂e
,
L_ORDERKEY
))

203 
vútuÆ
 
exåa˘_höt
(c⁄° * 
tu∂e_d©a
) const {

205 
q4_¥oje˘ed_löeôem_tu∂e
 *
	môem
;

206 
	môem
 = 
Æig√d_ˇ°
<
q4_¥oje˘ed_löeôem_tu∂e
>(
tu∂e_d©a
);

207  
	môem
->
	mL_ORDERKEY
;

210 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

211  
√w
 
q4_di°ö˘_key_exåa˘‹_t
(*
this
);

215 
	g¥iv©e
:

217 
q4_di°ö˘_key_exåa˘‹_t
 
_exåa˘‹
;

219 
	gpublic
:

221 
	$q4_di°ö˘_t
()

222 : 
	`tu∂e_aggªg©e_t
((
q4_¥oje˘ed_löeôem_tu∂e
)),

223 
	$_exåa˘‹
()

225 
	}
}

227 
vútuÆ
 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{  &
_exåa˘‹
; 
	}
}

229 
vútuÆ
 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
& 
§c
) {

230 
q4_¥oje˘ed_löeôem_tu∂e
* 
agg
 = 
Æig√d_ˇ°
<q4_¥oje˘ed_löeôem_tu∂e>(
agg_d©a
);

231 
q4_¥oje˘ed_löeôem_tu∂e
* 
ö
 = 
Æig√d_ˇ°
<q4_¥oje˘ed_löeôem_tu∂e>(
§c
.
d©a
);

232 
agg
->
L_ORDERKEY
=
ö
->L_ORDERKEY;

234 
	}
}

236 
vútuÆ
 
	$föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

237 
q4_¥oje˘ed_löeôem_tu∂e
* 
agg
 = 
Æig√d_ˇ°
<q4_¥oje˘ed_löeôem_tu∂e>(
agg_d©a
);

238 
q4_¥oje˘ed_löeôem_tu∂e
* 
ouçut
 = 
Æig√d_ˇ°
<q4_¥oje˘ed_löeôem_tu∂e>(
de°
.
d©a
);

239 
ouçut
->
L_ORDERKEY
 = 
agg
->L_ORDERKEY;

241 
	}
}

243 
vútuÆ
 
q4_di°ö˘_t
* 
	$˛⁄e
() const {

244  
√w
 
	`q4_di°ö˘_t
(*
this
);

245 
	}
}

247 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

249 
	}
}

255 ˛as†
	cq4_tsˇn_‹dîs_fûãr_t
 : 
public
 
tu∂e_fûãr_t


257 
¥iv©e
:

258 
Sh‹eTPCHEnv
* 
_çchdb
;

259 
èbÀ_row_t
* 
	m_¥‹dî
;

260 
ªp_row_t
 
	m_º
;

263 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

265 
time_t
 
	m_‹dîd©e
;

270 
q4_öput_t
* 
	mq4_öput
;

271 
time_t
 
	m_œ°_o_‹dîd©e
;

272 
	mpublic
:

274 
	$q4_tsˇn_‹dîs_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q4_öput_t
 &
ö
)

275 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

278 
_¥‹dî
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

279 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

280 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

281 
_¥‹dî
->
_ªp
 = &
_º
;

289 
q4_öput
=&
ö
;

290 
tm
 
d©e
;

291 
	`gmtime_r
(&(
q4_öput
->
o_‹dîd©e
), &
d©e
);

292 
d©e
.
tm_m⁄
 += 3;

293 
_œ°_o_‹dîd©e
=
	`mktime
(&
d©e
);

295 
d©e1
[15];

296 
d©e2
[15];

297 
	`timë_to_°r
(
d©e1
,
q4_öput
->
o_‹dîd©e
);

298 
	`timë_to_°r
(
d©e2
,
_œ°_o_‹dîd©e
);

299 
	`TRACE
 ( 
TRACE_ALWAYS
, "D©es: %†- %s\n",
d©e1
,
d©e2
);

302 ~
	$q4_tsˇn_‹dîs_fûãr_t
()

305 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dî
);

306 
	}
}

310 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

313 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dî
, 
öput
.
d©a
)) {

314 
	`as£π
(
Ál£
);

317 
_¥‹dî
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, 15);

318 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

322 i‡–
_‹dîd©e
 >
q4_öput
->
o_‹dîd©e
 && _‹dîd©ê< 
_œ°_o_‹dîd©e
 ) {

324  (
åue
);

328  (
Ál£
);

330 
	}
}

334 
	$¥oje˘
(
tu∂e_t
 &
d
, constÅuple_t & ) {

336 
q4_¥oje˘ed_‹dîs_tu∂e
 *
de°
;

337 
de°
 = 
Æig√d_ˇ°
<
q4_¥oje˘ed_‹dîs_tu∂e
>(
d
.
d©a
);

339 
_¥‹dî
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

340 
_¥‹dî
->
	`gë_vÆue
(5, 
_‹dîs
.
O_ORDERPRIORITY
, 15);

342 
numbî
[2];

343 
	`°∫˝y
(
numbî
,
_‹dîs
.
O_ORDERPRIORITY
,1);

344 
numbî
[1] = '\0';

349 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

350 
de°
->
O_ORDERPRIORITY
 = 
	`©oi
(
numbî
);

351 
	}
}

353 
q4_tsˇn_‹dîs_fûãr_t
* 
	$˛⁄e
() const {

354  
√w
 
	`q4_tsˇn_‹dîs_fûãr_t
(*
this
);

355 
	}
}

357 
c_°r
 
	$to_°rög
() const {

358 
d©e1
[15];

359 
d©e2
[15];

360 
	`timë_to_°r
(
d©e1
, 
q4_öput
->
o_‹dîd©e
);

361 
	`timë_to_°r
(
d©e2
, 
_œ°_o_‹dîd©e
);

362 
c_°r
 
	`ªsu…
("select O_ORDERKEY, O_ORDERPRIORITY "

364 
d©e1
, 
d©e2
);

365  
ªsu…
;

366 
	}
}

370 
	gq4_exåa˘‹_löeôem_t
 : 
public
 
key_exåa˘‹_t
 {

372 
q4_exåa˘‹_löeôem_t
()

373 : 
key_exåa˘‹_t
((
q4_¥oje˘ed_löeôem_tu∂e
))

377 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

378  *
Æig√d_ˇ°
<>(
key
);

381 
vútuÆ
 
q4_exåa˘‹_löeôem_t
* 
˛⁄e
() const {

382  
√w
 
q4_exåa˘‹_löeôem_t
(*
this
);

386 
	gq4_com∑ª_löeôem_t
 : 
public
 
key_com∑ª_t
 {

388 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

390 * 
	ga
 = 
Æig√d_ˇ°
<>(
key1
);

391 * 
	gb
 = 
Æig√d_ˇ°
<>(
key2
);

395  (*
	ga
 - *
	gb
);

398 
vútuÆ
 
q4_com∑ª_löeôem_t
* 
˛⁄e
() const {

399  
√w
 
q4_com∑ª_löeôem_t
(*
this
);

406 
	gq4_joö_t
 : 
public
 
tu∂e_joö_t
 {

409 
q4_joö_t
 ()

410 : 
tu∂e_joö_t
((
q4_¥oje˘ed_‹dîs_tu∂e
),

411 
off£tof
(
q4_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

412 (
q4_¥oje˘ed_löeôem_tu∂e
),

413 
off£tof
(
q4_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
),

415 (
q4_joö_tu∂e
))

420 
vútuÆ
 
joö
(
tu∂e_t
 &
de°
,

421 c⁄° 
tu∂e_t
 &
À·
,

422 c⁄° 
tu∂e_t
 &)

425 
q4_¥oje˘ed_‹dîs_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<q4_¥oje˘ed_‹dîs_tu∂e>(
À·
.
d©a
);

426 
q4_joö_tu∂e
 *
	gd
 = 
Æig√d_ˇ°
<q4_joö_tu∂e>(
de°
.
d©a
);

427 
	gd
->
	gO_ORDERPRIORITY
 = 
tu∂e
->
O_ORDERPRIORITY
;

433 
vútuÆ
 
q4_joö_t
* 
˛⁄e
() const {

434  
√w
 
q4_joö_t
(*
this
);

437 
vútuÆ
 
c_°r
 
to_°rög
() const {

443 
	gq4_cou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

444 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

446 
q4_cou¡_aggªg©e_t
()

447 : 
tu∂e_aggªg©e_t
((
q4_aggªg©e_tu∂e
))

450 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

452 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &) {

453 
q4_aggªg©e_tu∂e
* 
	gagg
 = 
Æig√d_ˇ°
<q4_aggªg©e_tu∂e>(
agg_d©a
);

454 
	gagg
->
	gO_COUNT
++;

457 
vútuÆ
 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

458 
mem˝y
(
d
.
d©a
, 
agg_d©a
, 
tu∂e_size
());

460 
vútuÆ
 
q4_cou¡_aggªg©e_t
* 
˛⁄e
() const {

461  
√w
 
q4_cou¡_aggªg©e_t
(*
this
);

463 
vútuÆ
 
c_°r
 
to_°rög
() const {

469 ˛as†
	cçch_q4_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


471 
public
:

473 
	$begö
() {

474 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q4 ANSWER ...\n");

475 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** O_PRTY | COUNT...\n");

478 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

480 
q4_aggªg©e_tu∂e
 *
tu∂e
;

481 
tu∂e
 = 
Æig√d_ˇ°
<
q4_aggªg©e_tu∂e
>(
ouçut
.
d©a
);

482 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** %d-%d\n",

483 
tu∂e
->
O_ORDERPRIORITY
,

484 
tu∂e
->
O_COUNT
);

485 
	}
}

495 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q4
(c⁄° 
x˘_id
,

496 
q4_öput_t
& 
ö
)

498 
	`TRACE
–
TRACE_ALWAYS
, "********** Q4 *********\n");

521 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

522 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

526 
tu∂e_fifo
* 
tsˇn_löeôem_out
 =

527 
√w
 
	`tu∂e_fifo
((
q4_¥oje˘ed_löeôem_tu∂e
));

528 
tsˇn_∑ckë_t
* 
q4_tsˇn_löeôem_∑ckë
 =

529 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEITEM",

530 
tsˇn_löeôem_out
,

531 
√w
 
	`q4_tsˇn_löeôem_fûãr_t
(
this
),

532 
this
->
	`db
(),

533 
_∂öeôem_desc
.
	`gë
(),

534 
px˘


539 
tu∂e_fûãr_t
* 
q4_löôem_s‹t_fûãr
 = 
√w
 
	`åivül_fûãr_t
((
q4_¥oje˘ed_löeôem_tu∂e
));

540 
tu∂e_fifo
* 
buf„r
 = 
√w
 
	`tu∂e_fifo
((
q4_¥oje˘ed_löeôem_tu∂e
));

541 
key_exåa˘‹_t
* 
exåa˘‹
 = 
√w
 
	`q4_exåa˘‹_löeôem_t
();

542 
key_com∑ª_t
* 
com∑ª
 = 
√w
 
	`q4_com∑ª_löeôem_t
();

543 
∑ckë_t
* 
q4_s‹t_∑ckë
 = 
√w
 
	`s‹t_∑ckë_t
("Q4_SORT LINEITEM",

544 
buf„r
,

545 
q4_löôem_s‹t_fûãr
,

546 
exåa˘‹
,

547 
com∑ª
,

548 
q4_tsˇn_löeôem_∑ckë
);

552 
tu∂e_fifo
* 
q4_di°ö˘_ouçut
 = 
√w
 
	`tu∂e_fifo
((
q4_¥oje˘ed_löeôem_tu∂e
));

553 
∑πül_aggªg©e_∑ckë_t
* 
q4_di°ö˘_∑ckë
 =

554 
√w
 
	`∑πül_aggªg©e_∑ckë_t
(
	`c_°r
("Q4DISTINCT_PACKET"),

555 
q4_di°ö˘_ouçut
,

556 
√w
 
	`åivül_fûãr_t
(
q4_di°ö˘_ouçut
->
	`tu∂e_size
()),

557 
q4_s‹t_∑ckë
,

558 
√w
 
	`q4_di°ö˘_t
(),

559 
√w
 
q4_di°ö˘_t
::
	`q4_di°ö˘_key_exåa˘‹_t
(),

560 
√w
 
	`öt_key_com∑ª_t
());

563 
tu∂e_fifo
* 
tsˇn_‹dîs_out
 =

564 
√w
 
	`tu∂e_fifo
((
q4_¥oje˘ed_‹dîs_tu∂e
));

565 
tsˇn_∑ckë_t
* 
q4_tsˇn_‹dîs_∑ckë
 =

566 
√w
 
	`tsˇn_∑ckë_t
("TSCAN ORDERS",

567 
tsˇn_‹dîs_out
,

568 
√w
 
	`q4_tsˇn_‹dîs_fûãr_t
(
this
,
ö
),

569 
this
->
	`db
(),

570 
_p‹dîs_desc
.
	`gë
(),

571 
px˘


576 
tu∂e_fûãr_t
* 
fûãr
 = 
√w
 
	`åivül_fûãr_t
((
q4_joö_tu∂e
));

577 
tu∂e_fifo
* 
q4_joö_out
 = 
√w
 
	`tu∂e_fifo
((
q4_joö_tu∂e
));

578 
tu∂e_joö_t
* 
q4_joö
 = 
√w
 
	`q4_joö_t
();

579 
∑ckë_t
* 
q4_joö_∑ckë
 = 
√w
 
	`hash_joö_∑ckë_t
("Orders - Lineitem JOIN",

580 
q4_joö_out
,

581 
fûãr
,

582 
q4_tsˇn_‹dîs_∑ckë
,

583 
q4_di°ö˘_∑ckë
,

584 
q4_joö
);

588 
tu∂e_fûãr_t
* 
q4_agg_fûãr
 = 
√w
 
	`åivül_fûãr_t
((
q4_aggªg©e_tu∂e
));

589 
tu∂e_fifo
* 
q4_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q4_aggªg©e_tu∂e
));

590 
tu∂e_aggªg©e_t
 *
q4_aggªg©e
 = 
√w
 
	`q4_cou¡_aggªg©e_t
();

591 
∑ckë_t
* 
q4_agg_∑ckë
;

592 
q4_agg_∑ckë
 = 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("O_ORDERPRIORITY COUNT",

593 
q4_agg_buf„r
,

594 
q4_agg_fûãr
,

595 
q4_joö_∑ckë
,

596 
q4_aggªg©e
,

597 
√w
 
	`deÁu…_key_exåa˘‹_t
(),

598 
√w
 
	`öt_key_com∑ª_t
());

602 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

604 
q4_tsˇn_‹dîs_∑ckë
->
	`assign_quîy_°©e
(
qs
);

605 
q4_tsˇn_löeôem_∑ckë
->
	`assign_quîy_°©e
(
qs
);

606 
q4_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

607 
q4_di°ö˘_∑ckë
->
	`assign_quîy_°©e
(
qs
);

608 
q4_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

609 
q4_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

612 
çch_q4_¥o˚ss_tu∂e_t
 
±
;

614 
	`¥o˚ss_quîy
(
q4_agg_∑ckë
, 
±
);

616 
dp
->
	`quîy_°©e_de°roy
(
qs
);

619  (
RCOK
);

620 
	}
}

623 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q5.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_utû.h
"

34 
	~"qpùe.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
çch
);

77 
	sq5_¥oje˘ed_ªgi⁄_tu∂e
 {

78 
	mR_REGIONKEY
;

81 
	sq5_¥oje˘ed_«ti⁄_tu∂e
 {

82 
	mN_NATIONKEY
;

83 
	mN_NAME
[
STRSIZE
(25)];

84 
	mN_REGIONKEY
;

87 
	sq5_¥oje˘ed_cu°omî_tu∂e
 {

88 
	mC_CUSTKEY
;

89 
	mC_NATIONKEY
;

92 
	sq5_¥oje˘ed_‹dîs_tu∂e
 {

93 
	mO_ORDERKEY
;

94 
	mO_CUSTKEY
;

97 
	sq5_¥oje˘ed_löeôem_tu∂e
 {

98 
	mL_ORDERKEY
;

99 
	mL_SUPPKEY
;

100 
decimÆ
 
	mL_DISCOUNT
;

101 
decimÆ
 
	mL_EXTENDEDPRICE
;

104 
	sq5_¥oje˘ed_suµlõr_tu∂e
 {

105 
	mS_SUPPKEY
;

106 
	mS_NATIONKEY
;

110 
	sq5_r_joö_n_tu∂e
 {

111 
	mN_NATIONKEY
;

112 
	mN_NAME
[
STRSIZE
(25)];

115 
	sq5_c_joö_r_n_tu∂e
 {

116 
	mC_CUSTKEY
;

117 
	mN_NATIONKEY
;

118 
	mN_NAME
[
STRSIZE
(25)];

121 
	sq5_o_joö_c_r_n_tu∂e
 {

122 
	mO_ORDERKEY
;

123 
	mN_NATIONKEY
;

124 
	mN_NAME
[
STRSIZE
(25)];

127 
	sq5_l_joö_o_c_r_n_tu∂e
 {

128 
	mL_SUPPKEY
;

129 
	mN_NATIONKEY
;

130 
	mN_NAME
[
STRSIZE
(25)];

131 
decimÆ
 
	mL_DISCOUNT
;

132 
decimÆ
 
	mL_EXTENDEDPRICE
;

135 
	sq5_Æl_joö_tu∂e
 {

136 
	mN_NAME
[
STRSIZE
(25)];

137 
decimÆ
 
	mL_DISCOUNT
;

138 
decimÆ
 
	mL_EXTENDEDPRICE
;

141 
	sq5_föÆ_tu∂e
 {

142 
	mN_NAME
[
STRSIZE
(25)];

143 
decimÆ
 
	mREVENUE
;

147 ˛as†
	cq5_ªgi⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


149 
¥iv©e
:

150 
Sh‹eTPCHEnv
* 
_çchdb
;

151 
èbÀ_row_t
* 
	m_¥ªgi⁄
;

152 
ªp_row_t
 
	m_º
;

155 
çch_ªgi⁄_tu∂e
 
	m_ªgi⁄
;

157 
	m_«me
[
STRSIZE
(25)];

158 
q5_öput_t
* 
	mq5_öput
;

160 
	mpublic
:

161 
	$q5_ªgi⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

162 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`ªgi⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

164 
_¥ªgi⁄
 = 
_çchdb
->
	`ªgi⁄_m™
()->
	`gë_tu∂e
();

165 
_º
.
	`£t_ts
(
_çchdb
->
	`ªgi⁄_m™
()->
	`ts
(),

166 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

167 
_¥ªgi⁄
->
_ªp
 = &
_º
;

169 
q5_öput
 = &
ö
;

170 
	`ªgi⁄_to_°r
(
q5_öput
->
r_«me
, 
_«me
);

172 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nREGION.R_NAME = '%s'\n", 
_«me
);

175 
vútuÆ
 ~
	$q5_ªgi⁄_tsˇn_fûãr_t
()

177 
_çchdb
->
	`ªgi⁄_m™
()->
	`give_tu∂e
(
_¥ªgi⁄
);

178 
	}
}

180 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

183 i‡(!
_çchdb
->
	`ªgi⁄_m™
()->
	`lﬂd
(
_¥ªgi⁄
, 
öput
.
d©a
)) {

184 
	`as£π
(
Ál£
);

187 
_¥ªgi⁄
->
	`gë_vÆue
(1, 
_ªgi⁄
.
R_NAME
, 25);

189  (
	`°rcmp
(
_«me
, 
_ªgi⁄
.
R_NAME
) == 0);

190 
	}
}

193 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

195 
q5_¥oje˘ed_ªgi⁄_tu∂e
 *
de°
;

196 
de°
 = 
Æig√d_ˇ°
<
q5_¥oje˘ed_ªgi⁄_tu∂e
>(
d
.
d©a
);

198 
_¥ªgi⁄
->
	`gë_vÆue
(0, 
_ªgi⁄
.
R_REGIONKEY
);

203 
de°
->
R_REGIONKEY
 = 
_ªgi⁄
.R_REGIONKEY;

204 
	}
}

206 
q5_ªgi⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

207  
√w
 
	`q5_ªgi⁄_tsˇn_fûãr_t
(*
this
);

208 
	}
}

210 
c_°r
 
	$to_°rög
() const {

211  
	`c_°r
("q5_region_tscan_filter_t()");

212 
	}
}

215 ˛as†
	cq5_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


217 
¥iv©e
:

218 
Sh‹eTPCHEnv
* 
_çchdb
;

219 
èbÀ_row_t
* 
	m_¥«ti⁄
;

220 
ªp_row_t
 
	m_º
;

223 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

225 
	mpublic
:

226 
	$q5_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

227 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

229 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

230 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

231 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

232 
_¥«ti⁄
->
_ªp
 = &
_º
;

235 
vútuÆ
 ~
	$q5_«ti⁄_tsˇn_fûãr_t
()

237 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

238 
	}
}

240 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

243 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

244 
	`as£π
(
Ál£
);

247  
åue
;

249 
	}
}

252 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

254 
q5_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

255 
de°
 = 
Æig√d_ˇ°
<
q5_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

257 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

258 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, (_nation.N_NAME));

259 
_¥«ti⁄
->
	`gë_vÆue
(2, 
_«ti⁄
.
N_REGIONKEY
);

264 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

265 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

266 
de°
->
N_REGIONKEY
 = 
_«ti⁄
.N_REGIONKEY;

267 
	}
}

269 
q5_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

270  
√w
 
	`q5_«ti⁄_tsˇn_fûãr_t
(*
this
);

271 
	}
}

273 
c_°r
 
	$to_°rög
() const {

274  
	`c_°r
("q5_nation_tscan_filter_t()");

275 
	}
}

278 ˛as†
	cq5_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


280 
¥iv©e
:

281 
Sh‹eTPCHEnv
* 
_çchdb
;

282 
èbÀ_row_t
* 
	m_¥cu°
;

283 
ªp_row_t
 
	m_º
;

285 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

287 
	mpublic
:

288 
	$q5_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

289 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

291 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

292 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

293 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

294 
_¥cu°
->
_ªp
 = &
_º
;

297 
vútuÆ
 ~
	$q5_cu°omî_tsˇn_fûãr_t
()

300 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

301 
	}
}

303 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

305 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

306 
	`as£π
(
Ál£
);

309  
åue
;

310 
	}
}

312 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

314 
q5_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

316 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

317 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_NATIONKEY
);

321 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

322 
de°
->
C_NATIONKEY
 = 
_cu°omî
.C_NATIONKEY;

323 
	}
}

325 
q5_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

326  
√w
 
	`q5_cu°omî_tsˇn_fûãr_t
(*
this
);

327 
	}
}

329 
c_°r
 
	$to_°rög
() const {

330  
	`c_°r
("q5_customer_tscan_filter_t");

331 
	}
}

334 ˛as†
	cq5_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


336 
¥iv©e
:

337 
Sh‹eTPCHEnv
* 
_çchdb
;

338 
èbÀ_row_t
* 
	m_¥‹dîs
;

339 
ªp_row_t
 
	m_º
;

341 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

342 
time_t
 
	m_‹dîd©e
;

344 
q5_öput_t
* 
	mq5_öput
;

345 
time_t
 
	m_œ°_‹dîd©e
;

347 
	mpublic
:

348 
	$q5_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

349 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

351 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

352 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

353 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

354 
_¥‹dîs
->
_ªp
 = &
_º
;

357 
q5_öput
 = &
ö
;

358 
tm
 
d©e
;

359 
	`gmtime_r
(&(
q5_öput
->
o_‹dîd©e
), &
d©e
);

360 
d©e
.
tm_yór
++;

361 
_œ°_‹dîd©e
 = 
	`mktime
(&
d©e
);

363 
t1
[15];

364 
t2
[15];

365 
	`timë_to_°r
(
t1
, 
q5_öput
->
o_‹dîd©e
);

366 
	`timë_to_°r
(
t2
, 
_œ°_‹dîd©e
);

368 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\¿%†<O_ORDERDATE < %s\n", 
t1
, 
t2
);

371 
vútuÆ
 ~
	$q5_‹dîs_tsˇn_fûãr_t
()

374 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

375 
	}
}

377 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

379 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

380 
	`as£π
(
Ál£
);

383 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, 15);

384 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

386  
_‹dîd©e
 >
q5_öput
->
o_‹dîd©e
 && _‹dîd©ê< 
_œ°_‹dîd©e
;

387 
	}
}

389 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

391 
q5_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

393 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

394 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

398 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

399 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

400 
	}
}

402 
q5_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

403  
√w
 
	`q5_‹dîs_tsˇn_fûãr_t
(*
this
);

404 
	}
}

406 
c_°r
 
	$to_°rög
() const {

407  
	`c_°r
("q5_orders_tscan_filter_t()");

408 
	}
}

411 ˛as†
	cq5_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


413 
¥iv©e
:

414 
Sh‹eTPCHEnv
* 
_çchdb
;

415 
èbÀ_row_t
* 
	m_¥löe
;

416 
ªp_row_t
 
	m_º
;

418 
çch_löeôem_tu∂e
 
	m_löeôem
;

420 
	mpublic
:

421 
	$q5_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

422 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

424 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

425 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

426 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

427 
_¥löe
->
_ªp
 = &
_º
;

430 
vútuÆ
 ~
	$q5_löeôem_tsˇn_fûãr_t
()

433 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

434 
	}
}

436 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

438 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

439 
	`as£π
(
Ál£
);

442  
åue
;

443 
	}
}

445 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

447 
q5_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

449 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

450 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

451 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

452 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

456 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

457 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

458 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

459 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT / 100.0;

460 
	}
}

462 
q5_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

463  
√w
 
	`q5_löeôem_tsˇn_fûãr_t
(*
this
);

464 
	}
}

466 
c_°r
 
	$to_°rög
() const {

467  
	`c_°r
("q5_lineitem_tscan_filter_t");

468 
	}
}

471 ˛as†
	cq5_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


473 
¥iv©e
:

474 
Sh‹eTPCHEnv
* 
_çchdb
;

475 
èbÀ_row_t
* 
	m_¥suµlõr
;

476 
ªp_row_t
 
	m_º
;

479 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

481 
	mpublic
:

482 
	$q5_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q5_öput_t
 &
ö
)

483 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

485 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

486 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

487 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

488 
_¥suµlõr
->
_ªp
 = &
_º
;

491 
vútuÆ
 ~
	$q5_suµlõr_tsˇn_fûãr_t
()

493 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

494 
	}
}

496 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

499 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

500 
	`as£π
(
Ál£
);

503  
åue
;

504 
	}
}

507 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

509 
q5_¥oje˘ed_suµlõr_tu∂e
 *
de°
;

510 
de°
 = 
Æig√d_ˇ°
<
q5_¥oje˘ed_suµlõr_tu∂e
>(
d
.
d©a
);

513 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

514 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

519 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

520 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

522 
	}
}

524 
q5_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

525  
√w
 
	`q5_suµlõr_tsˇn_fûãr_t
(*
this
);

526 
	}
}

528 
c_°r
 
	$to_°rög
() const {

529  
	`c_°r
("q5_supplier_tscan_filter_t");

530 
	}
}

534 
	gq5_r_joö_n_t
 : 
public
 
tu∂e_joö_t
 {

536 
q5_r_joö_n_t
()

537 : 
tu∂e_joö_t
((
q5_¥oje˘ed_ªgi⁄_tu∂e
),

538 
off£tof
(
q5_¥oje˘ed_ªgi⁄_tu∂e
, 
R_REGIONKEY
),

539 (
q5_¥oje˘ed_«ti⁄_tu∂e
),

540 
off£tof
(
q5_¥oje˘ed_«ti⁄_tu∂e
, 
N_REGIONKEY
),

542 (
q5_r_joö_n_tu∂e
))

546 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

547 
q5_r_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q5_r_joö_n_tu∂e>(
d
.
d©a
);

548 
q5_¥oje˘ed_ªgi⁄_tu∂e
 *
	gªgi⁄
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_ªgi⁄_tu∂e>(
l
.
d©a
);

549 
q5_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

551 
	gde°
->
	gN_NATIONKEY
 = 
«ti⁄
->
N_NATIONKEY
;

552 
mem˝y
(
de°
->
N_NAME
, 
«ti⁄
->N_NAME, (dest->N_NAME));

557 
vútuÆ
 
q5_r_joö_n_t
* 
˛⁄e
() const {

558  
√w
 
q5_r_joö_n_t
(*
this
);

561 
vútuÆ
 
c_°r
 
to_°rög
() const {

562  
c_°r
("join REGION, NATION; select N_NATIONKEY, N_NAME");

566 
	gq5_c_joö_r_n_t
 : 
public
 
tu∂e_joö_t
 {

568 
q5_c_joö_r_n_t
()

569 : 
tu∂e_joö_t
((
q5_¥oje˘ed_cu°omî_tu∂e
),

570 
off£tof
(
q5_¥oje˘ed_cu°omî_tu∂e
, 
C_NATIONKEY
),

571 (
q5_r_joö_n_tu∂e
),

572 
off£tof
(
q5_r_joö_n_tu∂e
, 
N_NATIONKEY
),

574 (
q5_c_joö_r_n_tu∂e
))

578 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

579 
q5_c_joö_r_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q5_c_joö_r_n_tu∂e>(
d
.
d©a
);

580 
q5_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_cu°omî_tu∂e>(
l
.
d©a
);

581 
q5_r_joö_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q5_r_joö_n_tu∂e>(
r
.
d©a
);

583 
	gde°
->
	gC_CUSTKEY
 = 
cu°
->
C_CUSTKEY
;

584 
	gde°
->
	gN_NATIONKEY
 = 
right
->
N_NATIONKEY
;

585 
mem˝y
(
de°
->
N_NAME
, 
right
->N_NAME, (dest->N_NAME));

590 
vútuÆ
 
q5_c_joö_r_n_t
* 
˛⁄e
() const {

591  
√w
 
q5_c_joö_r_n_t
(*
this
);

594 
vútuÆ
 
c_°r
 
to_°rög
() const {

595  
c_°r
("join CUSTOMER, REGION_NATION; select C_CUSTKEY, N_NATIONKEY, N_NAME");

599 
	gq5_o_joö_c_r_n_t
 : 
public
 
tu∂e_joö_t
 {

601 
q5_o_joö_c_r_n_t
()

602 : 
tu∂e_joö_t
((
q5_¥oje˘ed_‹dîs_tu∂e
),

603 
off£tof
(
q5_¥oje˘ed_‹dîs_tu∂e
, 
O_CUSTKEY
),

604 (
q5_c_joö_r_n_tu∂e
),

605 
off£tof
(
q5_c_joö_r_n_tu∂e
, 
C_CUSTKEY
),

607 (
q5_o_joö_c_r_n_tu∂e
))

611 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

612 
q5_o_joö_c_r_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q5_o_joö_c_r_n_tu∂e>(
d
.
d©a
);

613 
q5_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dîs
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_‹dîs_tu∂e>(
l
.
d©a
);

614 
q5_c_joö_r_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q5_c_joö_r_n_tu∂e>(
r
.
d©a
);

616 
	gde°
->
	gO_ORDERKEY
 = 
‹dîs
->
O_ORDERKEY
;

617 
	gde°
->
	gN_NATIONKEY
 = 
right
->
N_NATIONKEY
;

618 
mem˝y
(
de°
->
N_NAME
, 
right
->N_NAME, (dest->N_NAME));

623 
vútuÆ
 
q5_o_joö_c_r_n_t
* 
˛⁄e
() const {

624  
√w
 
q5_o_joö_c_r_n_t
(*
this
);

627 
vútuÆ
 
c_°r
 
to_°rög
() const {

628  
c_°r
("join ORDERS, CUSTOMER_REGION_NATION; select O_ORDERKEY, N_NATIONKEY, N_NAME");

633 
	gq5_l_joö_o_c_r_n_t
 : 
public
 
tu∂e_joö_t
 {

635 
q5_l_joö_o_c_r_n_t
()

636 : 
tu∂e_joö_t
((
q5_¥oje˘ed_löeôem_tu∂e
),

637 
off£tof
(
q5_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
),

638 (
q5_o_joö_c_r_n_tu∂e
),

639 
off£tof
(
q5_o_joö_c_r_n_tu∂e
, 
O_ORDERKEY
),

641 (
q5_l_joö_o_c_r_n_tu∂e
))

645 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

646 
q5_l_joö_o_c_r_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q5_l_joö_o_c_r_n_tu∂e>(
d
.
d©a
);

647 
q5_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

648 
q5_o_joö_c_r_n_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q5_o_joö_c_r_n_tu∂e>(
r
.
d©a
);

650 
	gde°
->
	gL_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

651 
	gde°
->
	gN_NATIONKEY
 = 
right
->
N_NATIONKEY
;

652 
mem˝y
(
de°
->
N_NAME
, 
right
->N_NAME, (dest->N_NAME));

653 
	gde°
->
	gL_EXTENDEDPRICE
 = 
löe
->
L_EXTENDEDPRICE
;

654 
	gde°
->
	gL_DISCOUNT
 = 
löe
 ->
L_DISCOUNT
;

660 
vútuÆ
 
q5_l_joö_o_c_r_n_t
* 
˛⁄e
() const {

661  
√w
 
q5_l_joö_o_c_r_n_t
(*
this
);

664 
vútuÆ
 
c_°r
 
to_°rög
() const {

665  
c_°r
("join LINEITEM, ORDERS_CUSTOMER_REGION_NATION; select L_SUPPKEY, N_NATIONKEY, N_NAME, L_EXTENDEDPRICE, L_DISCOUNT");

670 
	gq5_föÆ_joö
 : 
public
 
tu∂e_joö_t
 {

672 
q5_föÆ_joö
()

673 : 
tu∂e_joö_t
((
q5_l_joö_o_c_r_n_tu∂e
),

674 
off£tof
(
q5_l_joö_o_c_r_n_tu∂e
, 
L_SUPPKEY
),

675 (
q5_¥oje˘ed_suµlõr_tu∂e
),

676 
off£tof
(
q5_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

678 (
q5_Æl_joö_tu∂e
))

682 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

683 
q5_Æl_joö_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q5_Æl_joö_tu∂e>(
d
.
d©a
);

684 
q5_l_joö_o_c_r_n_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q5_l_joö_o_c_r_n_tu∂e>(
l
.
d©a
);

685 
q5_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q5_¥oje˘ed_suµlõr_tu∂e>(
r
.
d©a
);

687 
mem˝y
(
de°
->
N_NAME
, 
À·
->N_NAME, (dest->N_NAME));

688 
	gde°
->
	gL_EXTENDEDPRICE
 = 
À·
->
L_EXTENDEDPRICE
;

689 
	gde°
->
	gL_DISCOUNT
 = 
À·
->
L_DISCOUNT
;

695 
vútuÆ
 
q5_föÆ_joö
* 
˛⁄e
() const {

696  
√w
 
q5_föÆ_joö
(*
this
);

699 
vútuÆ
 
c_°r
 
to_°rög
() const {

700  
c_°r
("join LINEITEM_ORDERS_CUSTOMER_REGION_NATION, SUPPLIER; select N_NAME, L_EXTENDEDPRICE, L_DISCOUNT");

705 
	gq5_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

707 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

709 
q5_aggªg©e_t
()

710 : 
tu∂e_aggªg©e_t
((
q5_föÆ_tu∂e
)), 
_exåa˘‹
(
deÁu…_key_exåa˘‹_t
(
STRSIZE
(25Ë* (), 
off£tof
(
q5_Æl_joö_tu∂e
,
N_NAME
)))

714 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

715  &
	g_exåa˘‹
;

718 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

719 
q5_föÆ_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q5_föÆ_tu∂e>(
agg_d©a
);

720 
q5_Æl_joö_tu∂e
 *
	göput
 = 
Æig√d_ˇ°
<q5_Æl_joö_tu∂e>(
t
.
d©a
);

722 
mem˝y
(
agg
->
N_NAME
, 
öput
->N_NAME, (agg->N_NAME));

723 
	gagg
->
	gREVENUE
 +
öput
->
L_EXTENDEDPRICE
 * (1 - i≈ut->
L_DISCOUNT
);

725 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

726 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

728 
vútuÆ
 
q5_aggªg©e_t
* 
˛⁄e
() const {

729  
√w
 
q5_aggªg©e_t
(*
this
);

731 
vútuÆ
 
c_°r
 
to_°rög
() const {

736 
	gq5_agg_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

738 
q5_agg_key_com∑ª_t
()

742 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

743  
°rcmp
((*)
key1
, (*)
key2
);

746 
vútuÆ
 
q5_agg_key_com∑ª_t
* 
˛⁄e
() const {

747  
√w
 
q5_agg_key_com∑ª_t
(*
this
);

751 
	gq5_s‹t_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

753 
q5_s‹t_key_exåa˘‹_t
()

754 : 
key_exåa˘‹_t
((
decimÆ
), 
off£tof
(
q5_föÆ_tu∂e
, 
REVENUE
))

758 
vútuÆ
 
exåa˘_höt
(c⁄° *
key
) const {

759 
decimÆ
 
	gªvíue
 = *(
Æig√d_ˇ°
<decimÆ>(
key
));

760  -(
	gªvíue
.
to_öt
());

763 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

764  
√w
 
q5_s‹t_key_exåa˘‹_t
(*
this
);

768 
	gq5_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

770 
q5_s‹t_key_com∑ª_t
()

774 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

775 
TRACE
(
TRACE_RECORD_FLOW
, "SORT_COMP\n");

776 
decimÆ
 
	gªv1
 = *(
Æig√d_ˇ°
<decimÆ>(
key1
));

777 
decimÆ
 
	gªv2
 = *(
Æig√d_ˇ°
<decimÆ>(
key2
));

778 
decimÆ
 
	gdiff
 = 
ªv2
 - 
ªv1
;

779  (
	gdiff
 < 0 ? -1 : (
diff
 == 0 ? 0 : 1));

782 
vútuÆ
 
q5_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

783  
√w
 
q5_s‹t_key_com∑ª_t
(*
this
);

788 ˛as†
	cçch_q5_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

790 
public
:

792 
vútuÆ
 
	$begö
() {

793 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q5 %25s %25s\n",

797 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

798 
q5_föÆ_tu∂e
 *
ªs
 = 
Æig√d_ˇ°
<q5_föÆ_tu∂e>(
ouçut
.
d©a
);

800 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q5 %25s %25.2f\n",

801 
ªs
->
N_NAME
,Ñes->
REVENUE
.
	`to_doubÀ
());

802 
	}
}

813 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q5
(c⁄° 
x˘_id
,

814 
q5_öput_t
& 
ö
)

816 
	`TRACE
–
TRACE_ALWAYS
, "********** Q5 *********\n");

818 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

819 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

823 
tu∂e_fifo
* 
q5_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_«ti⁄_tu∂e
));

824 
∑ckë_t
* 
q5_«ti⁄_tsˇn_∑ckë
 =

825 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

826 
q5_«ti⁄_buf„r
,

827 
√w
 
	`q5_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

828 
this
->
	`db
(),

829 
_≤©i⁄_desc
.
	`gë
(),

830 
px˘
);

833 
tu∂e_fifo
* 
q5_ªgi⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_ªgi⁄_tu∂e
));

834 
∑ckë_t
* 
q5_ªgi⁄_tsˇn_∑ckë
 =

835 
√w
 
	`tsˇn_∑ckë_t
("region TSCAN",

836 
q5_ªgi⁄_buf„r
,

837 
√w
 
	`q5_ªgi⁄_tsˇn_fûãr_t
(
this
, 
ö
),

838 
this
->
	`db
(),

839 
_¥egi⁄_desc
.
	`gë
(),

840 
px˘
);

843 
tu∂e_fifo
* 
q5_r_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_r_joö_n_tu∂e
));

844 
∑ckë_t
* 
q5_r_joö_n_∑ckë
 =

845 
√w
 
	`hash_joö_∑ckë_t
("region -Çation HJOIN",

846 
q5_r_joö_n_buf„r
,

847 
√w
 
	`åivül_fûãr_t
((
q5_r_joö_n_tu∂e
)),

848 
q5_ªgi⁄_tsˇn_∑ckë
,

849 
q5_«ti⁄_tsˇn_∑ckë
,

850 
√w
 
	`q5_r_joö_n_t
());

853 
tu∂e_fifo
* 
q5_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_cu°omî_tu∂e
));

854 
∑ckë_t
* 
q5_cu°omî_tsˇn_∑ckë
 =

855 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

856 
q5_cu°omî_buf„r
,

857 
√w
 
	`q5_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

858 
this
->
	`db
(),

859 
_pcu°omî_desc
.
	`gë
(),

860 
px˘
);

863 
tu∂e_fifo
* 
q5_c_joö_r_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_c_joö_r_n_tu∂e
));

864 
∑ckë_t
* 
q5_c_joö_r_n_∑ckë
 =

865 
√w
 
	`hash_joö_∑ckë_t
("customer -Ñegion_nation HJOIN",

866 
q5_c_joö_r_n_buf„r
,

867 
√w
 
	`åivül_fûãr_t
((
q5_c_joö_r_n_tu∂e
)),

868 
q5_cu°omî_tsˇn_∑ckë
,

869 
q5_r_joö_n_∑ckë
,

870 
√w
 
	`q5_c_joö_r_n_t
());

873 
tu∂e_fifo
* 
q5_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_‹dîs_tu∂e
));

874 
∑ckë_t
* 
q5_‹dîs_tsˇn_∑ckë
 =

875 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

876 
q5_‹dîs_buf„r
,

877 
√w
 
	`q5_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

878 
this
->
	`db
(),

879 
_p‹dîs_desc
.
	`gë
(),

880 
px˘
);

883 
tu∂e_fifo
* 
q5_o_joö_c_r_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_o_joö_c_r_n_tu∂e
));

884 
∑ckë_t
* 
q5_o_joö_c_r_n_∑ckë
 =

885 
√w
 
	`hash_joö_∑ckë_t
("orders - customer_region_nation HJOIN",

886 
q5_o_joö_c_r_n_buf„r
,

887 
√w
 
	`åivül_fûãr_t
((
q5_o_joö_c_r_n_tu∂e
)),

888 
q5_‹dîs_tsˇn_∑ckë
,

889 
q5_c_joö_r_n_∑ckë
,

890 
√w
 
	`q5_o_joö_c_r_n_t
());

893 
tu∂e_fifo
* 
q5_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_löeôem_tu∂e
));

894 
∑ckë_t
* 
q5_löeôem_tsˇn_∑ckë
 =

895 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

896 
q5_löeôem_buf„r
,

897 
√w
 
	`q5_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

898 
this
->
	`db
(),

899 
_∂öeôem_desc
.
	`gë
(),

900 
px˘
);

903 
tu∂e_fifo
* 
q5_l_joö_o_c_r_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_l_joö_o_c_r_n_tu∂e
));

904 
∑ckë_t
* 
q5_l_joö_o_c_r_n_∑ckë
 =

905 
√w
 
	`hash_joö_∑ckë_t
("lineitem - orders_customer_region_nation HJOIN",

906 
q5_l_joö_o_c_r_n_buf„r
,

907 
√w
 
	`åivül_fûãr_t
((
q5_l_joö_o_c_r_n_tu∂e
)),

908 
q5_löeôem_tsˇn_∑ckë
,

909 
q5_o_joö_c_r_n_∑ckë
,

910 
√w
 
	`q5_l_joö_o_c_r_n_t
());

913 
tu∂e_fifo
* 
q5_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_¥oje˘ed_suµlõr_tu∂e
));

914 
∑ckë_t
* 
q5_suµlõr_tsˇn_∑ckë
 =

915 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

916 
q5_suµlõr_buf„r
,

917 
√w
 
	`q5_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

918 
this
->
	`db
(),

919 
_psuµlõr_desc
.
	`gë
(),

920 
px˘
);

923 
tu∂e_fifo
* 
q5_Æl_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_Æl_joö_tu∂e
));

924 
∑ckë_t
* 
q5_Æl_joö_∑ckë
 =

925 
√w
 
	`hash_joö_∑ckë_t
("lineitem_orders_customer_region_nation - supplier HJOIN",

926 
q5_Æl_joö_buf„r
,

927 
√w
 
	`åivül_fûãr_t
((
q5_Æl_joö_tu∂e
)),

928 
q5_l_joö_o_c_r_n_∑ckë
,

929 
q5_suµlõr_tsˇn_∑ckë
,

930 
√w
 
	`q5_föÆ_joö
());

933 
tu∂e_fifo
* 
q5_aggªg©ed_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_föÆ_tu∂e
));

934 
∑ckë_t
* 
q5_aggªg©e_∑ckë
 =

935 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUM AGG",

936 
q5_aggªg©ed_buf„r
,

937 
√w
 
	`åivül_fûãr_t
((
q5_föÆ_tu∂e
)),

938 
q5_Æl_joö_∑ckë
,

939 
√w
 
	`q5_aggªg©e_t
(),

940 
√w
 
	`deÁu…_key_exåa˘‹_t
((Ë* 
	`STRSIZE
(25)),

941 
√w
 
	`q5_agg_key_com∑ª_t
());

944 
tu∂e_fifo
* 
q5_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q5_föÆ_tu∂e
));

945 
∑ckë_t
* 
q5_s‹t_∑ckë
 =

946 
√w
 
	`s‹t_∑ckë_t
("SORT",

947 
q5_föÆ_buf„r
,

948 
√w
 
	`åivül_fûãr_t
((
q5_föÆ_tu∂e
)),

949 
√w
 
	`q5_s‹t_key_exåa˘‹_t
(),

950 
√w
 
	`q5_s‹t_key_com∑ª_t
(),

951 
q5_aggªg©e_∑ckë
);

956 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

957 
q5_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

958 
q5_ªgi⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

959 
q5_r_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

960 
q5_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

961 
q5_c_joö_r_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

962 
q5_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

963 
q5_o_joö_c_r_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

964 
q5_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

965 
q5_l_joö_o_c_r_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

966 
q5_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

967 
q5_Æl_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

968 
q5_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

969 
q5_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

972 
çch_q5_¥o˚ss_tu∂e_t
 
±
;

974 
	`¥o˚ss_quîy
(
q5_s‹t_∑ckë
, 
±
);

976 
dp
->
	`quîy_°©e_de°roy
(
qs
);

979  (
RCOK
);

980 
	}
}

983 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_q6.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

63 
	sq6_¥oje˘ed_löeôem_tu∂e
 {

64 
	mL_EXTENDEDPRICE
;

65 
	mL_DISCOUNT
;

69 
	sq6_mu…ùlõd_löeôem_tu∂e
 {

70 
	mL_EXTENDEDPRICE_MUL_DISCOUNT
;

74 
	sq6_aggªg©e_tu∂e
 {

75 
	mL_SUM_REVENUE
;

76 
	mL_COUNT
;

81 ˛as†
	cq6_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


83 
¥iv©e
:

84 
Sh‹eTPCHEnv
* 
_çchdb
;

85 
èbÀ_row_t
* 
	m_¥löe
;

86 
ªp_row_t
 
	m_º
;

89 
çch_löeôem_tu∂e
 
	m_löeôem
;

91 
time_t
 
	m_shùd©e
;

92 
	m_discou¡
;

93 
	m_qu™tôy
;

97 
q6_öput_t
* 
	mq6_öput
;

98 
time_t
 
	m_œ°_l_shùd©e
;

99 
	mpublic
:

101 
	$q6_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q6_öput_t
 &
ö
)

102 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

107 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

108 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

109 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

110 
_¥löe
->
_ªp
 = &
_º
;

119 
q6_öput
=&
ö
;

120 
tm
 
d©e
;

121 
	`gmtime_r
(&(
q6_öput
->
l_shùd©e
), &
d©e
);

122 
d©e
.
tm_yór
 ++;

123 
_œ°_l_shùd©e
=
	`mktime
(&
d©e
);

125 
d©e1
[15];

126 
d©e2
[15];

127 
	`timë_to_°r
(
d©e1
,
q6_öput
->
l_shùd©e
);

128 
	`timë_to_°r
(
d©e2
,
_œ°_l_shùd©e
);

129 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs: D©e: %s-%s, Discou¡: %lf, Qu™tôy: %lf\n", 
d©e1
, 
d©e2
, 
q6_öput
->
l_discou¡
, q6_öput->
l_qu™tôy
);

132 ~
	$q6_tsˇn_fûãr_t
()

135 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

136 
	}
}

140 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

143 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

144 
	`as£π
(
Ál£
);

147 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

148 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

149 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

150 
_discou¡
=
_löeôem
.
L_DISCOUNT
/100.0;

151 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

152 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

153 
_qu™tôy
=
_löeôem
.
L_QUANTITY
;

158 i‡–
_shùd©e
 >
q6_öput
->
l_shùd©e
 && _shùd©ê< 
_œ°_l_shùd©e
 && 
_discou¡
>=(q6_öput->
l_discou¡
-0.01) &&

159 
_discou¡
<=(
q6_öput
->
l_discou¡
+0.01Ë&& 
_qu™tôy
<q6_öput->
l_qu™tôy
) {

162  (
åue
);

166  (
Ál£
);

168 
	}
}

172 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

174 
q6_¥oje˘ed_löeôem_tu∂e
 *
de°
;

175 
de°
 = 
Æig√d_ˇ°
<
q6_¥oje˘ed_löeôem_tu∂e
>(
d
.
d©a
);

177 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

178 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

184 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

185 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT/100.0;

186 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

187 
	}
}

189 
q6_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

190  
√w
 
	`q6_tsˇn_fûãr_t
(*
this
);

191 
	}
}

193 
c_°r
 
	$to_°rög
() const {

194 
d©e
[15];

195 
	`timë_to_°r
(
d©e
,
q6_öput
->
l_shùd©e
);

196  
	`c_°r
("q6_tsˇn_fûãr_t(%s, %lf, %lf)", 
d©e
, 
q6_öput
->
l_discou¡
, q6_öput->
l_qu™tôy
);

197 
	}
}

205 ˛as†
	cq6_sõve_t
 : 
public
 
tu∂e_sõve_t
 {

207 
public
:

209 
	$q6_sõve_t
()

210 : 
	`tu∂e_sõve_t
((
q6_mu…ùlõd_löeôem_tu∂e
))

214 
vútuÆ
 
boﬁ
 
	$∑ss
(
tu∂e_t
& 
de°
, c⁄°Åu∂e_à&
§c
) {

215 * 
ö
 = 
Æig√d_ˇ°
<>(
§c
.
d©a
);

216 * 
out
 = 
Æig√d_ˇ°
<>(
de°
.
d©a
);

217 *
out
 = 
ö
[0] * in[1];

218  
åue
;

219 
	}
}

221 
vútuÆ
 
tu∂e_sõve_t
* 
	$˛⁄e
() const {

222  
√w
 
	`q6_sõve_t
(*
this
);

223 
	}
}

225 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

227 
	}
}

232 ˛as†
	cq6_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

234 
public
:

236 ˛as†
	cq6_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

237 
public
:

238 
q6_key_exåa˘‹_t
()

239 : 
key_exåa˘‹_t
(0, 0)

243 
vútuÆ
 
exåa˘_höt
(const *) const {

245 
uƒóchabÀ
();

249 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

250  
√w
 
q6_key_exåa˘‹_t
(*
this
);

254 
	g¥iv©e
:

256 
q6_key_exåa˘‹_t
 
_exåa˘‹
;

258 
	gpublic
:

260 
	$q6_aggªg©e_t
()

261 : 
	`tu∂e_aggªg©e_t
((
q6_aggªg©e_tu∂e
)),

262 
	$_exåa˘‹
()

264 
	}
}

266 
vútuÆ
 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{  &
_exåa˘‹
; 
	}
}

268 
vútuÆ
 
	$aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
& 
§c
) {

269 
q6_aggªg©e_tu∂e
* 
agg
 = 
Æig√d_ˇ°
<q6_aggªg©e_tu∂e>(
agg_d©a
);

270 * 
d
 = 
Æig√d_ˇ°
<>(
§c
.
d©a
);

271 
agg
->
L_COUNT
++;

272 
agg
->
L_SUM_REVENUE
 +*
d
;

273 
	}
}

275 
vútuÆ
 
	$föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

276 
q6_aggªg©e_tu∂e
* 
agg
 = 
Æig√d_ˇ°
<q6_aggªg©e_tu∂e>(
agg_d©a
);

277 
q6_aggªg©e_tu∂e
* 
ouçut
 = 
Æig√d_ˇ°
<q6_aggªg©e_tu∂e>(
de°
.
d©a
);

278 
ouçut
->
L_COUNT
 = 
agg
->L_COUNT;

279 
ouçut
->
L_SUM_REVENUE
 = 
agg
->L_SUM_REVENUE;

281 
	}
}

283 
vútuÆ
 
q6_aggªg©e_t
* 
	$˛⁄e
() const {

284  
√w
 
	`q6_aggªg©e_t
(*
this
);

285 
	}
}

287 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

289 
	}
}

295 ˛as†
	cçch_q6_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


297 
public
:

299 
	$begö
() {

300 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q6 ANSWER ...\n");

301 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** SUM_REVENUE(EXTPRICE*DISCOUNT)...\n");

304 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

305 
q6_aggªg©e_tu∂e
 *
tu∂e
;

306 
tu∂e
 = 
Æig√d_ˇ°
<
q6_aggªg©e_tu∂e
>(
ouçut
.
d©a
);

307 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** %.2f\n",

308 
tu∂e
->
L_SUM_REVENUE
);

309 
	}
}

320 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q6
(c⁄° 
x˘_id
,

321 
q6_öput_t
& 
ö
)

323 
	`TRACE
–
TRACE_ALWAYS
, "********** Q6 *********\n");

343 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

344 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

349 #ifde‡
USE_ECHO


350 
tu∂e_fifo
* 
tsˇn_ouçut
 = 
√w
 
	`tu∂e_fifo
(
_∂öeôem_desc
.
	`gë
()->
	`maxsize
());

352 
tu∂e_fifo
* 
tsˇn_ouçut
 = 
√w
 
	`tu∂e_fifo
((
q6_¥oje˘ed_löeôem_tu∂e
));

355 
tsˇn_∑ckë_t
 *
q6_tsˇn_∑ckë
 =

356 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEITEM",

357 
tsˇn_ouçut
,

358 #ifde‡
USE_ECHO


359 
√w
 
	`åivül_fûãr_t
(
tsˇn_ouçut
->
	`tu∂e_size
()),

361 
√w
 
	`q6_tsˇn_fûãr_t
(
this
, 
ö
),

363 
this
->
	`db
(),

364 
_∂öeôem_desc
.
	`gë
(),

365 
px˘


371 #ifde‡
USE_ECHO


372 
tu∂e_fifo
* 
echo_ouçut
 = 
√w
 
	`tu∂e_fifo
((
q6_¥oje˘ed_löeôem_tu∂e
));

373 
echo_∑ckë_t
 *
q6_echo_∑ckë
 =

374 
√w
 
	`echo_∑ckë_t
("Q6PIPE_ECHO_PACKET",

375 
echo_ouçut
,

376 
√w
 
	`q6_tsˇn_fûãr_t
(
this
, 
ö
),

377 
q6_tsˇn_∑ckë
);

381 
tu∂e_fifo
* 
sõve_ouçut
 = 
√w
 
	`tu∂e_fifo
((
q6_mu…ùlõd_löeôem_tu∂e
));

382 
sõve_∑ckë_t
 *
q6_sõve_∑ckë
 =

383 
√w
 
	`sõve_∑ckë_t
("Q6PIPE_SIEVE_PACKET",

384 
sõve_ouçut
,

385 
√w
 
	`åivül_fûãr_t
(
sõve_ouçut
->
	`tu∂e_size
()),

386 
√w
 
	`q6_sõve_t
(),

387 #ifde‡
USE_ECHO


388 
q6_echo_∑ckë
);

390 
q6_tsˇn_∑ckë
);

395 
tu∂e_fifo
* 
agg_ouçut
 = 
√w
 
	`tu∂e_fifo
((
q6_aggªg©e_tu∂e
));

396 
aggªg©e_∑ckë_t
* 
q6_agg_∑ckë
 =

397 
√w
 
	`aggªg©e_∑ckë_t
(
	`c_°r
("Q6PIPE_AGGREGATE_PACKET"),

398 
agg_ouçut
,

399 
√w
 
	`åivül_fûãr_t
(
agg_ouçut
->
	`tu∂e_size
()),

400 
√w
 
	`q6_aggªg©e_t
(),

401 
√w
 
q6_aggªg©e_t
::
	`q6_key_exåa˘‹_t
(),

402 
q6_sõve_∑ckë
);

404 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

405 
q6_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

406 
q6_sõve_∑ckë
->
	`assign_quîy_°©e
(
qs
);

407 #ifde‡
USE_ECHO


408 
q6_echo_∑ckë
->
	`assign_quîy_°©e
(
qs
);

410 
q6_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

412 
çch_q6_¥o˚ss_tu∂e_t
 
±
;

413 
	`¥o˚ss_quîy
(
q6_agg_∑ckë
, 
±
);

414 
dp
->
	`quîy_°©e_de°roy
(
qs
);

421  (
RCOK
);

422 
	}
}

425 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q7.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

92 
	sq7_¥oje˘ed_«ti⁄_tu∂e
 {

93 
	mN_NATIONKEY
;

94 
	mN_NAME
[
STRSIZE
(25)];

97 
	sq7_¥oje˘ed_cu°omî_tu∂e
 {

98 
	mC_CUSTKEY
;

99 
	mC_NATIONKEY
;

102 
	sq7_¥oje˘ed_‹dîs_tu∂e
 {

103 
	mO_ORDERKEY
;

104 
	mO_CUSTKEY
;

107 
	sq7_¥oje˘ed_löeôem_tu∂e
 {

108 
	mL_ORDERKEY
;

109 
	mL_SUPPKEY
;

110 
	mL_YEAR
;

111 
decimÆ
 
	mL_EXTENDEDPRICE
;

112 
decimÆ
 
	mL_DISCOUNT
;

115 
	sq7_¥oje˘ed_suµlõr_tu∂e
 {

116 
	mS_SUPPKEY
;

117 
	mS_NATIONKEY
;

121 
	sq7_c_joö_n2_tu∂e
 {

122 
	mC_CUSTKEY
;

123 
	mCUST_NATION
[
STRSIZE
(25)];

126 
	sq7_o_joö_c_n2_tu∂e
 {

127 
	mO_ORDERKEY
;

128 
	mCUST_NATION
[
STRSIZE
(25)];

131 
	sq7_l_joö_o_c_n2_tu∂e
 {

132 
	mL_SUPPKEY
;

133 
	mCUST_NATION
[
STRSIZE
(25)];

134 
	mL_YEAR
;

135 
decimÆ
 
	mL_EXTENDEDPRICE
;

136 
decimÆ
 
	mL_DISCOUNT
;

139 
	sq7_l_o_c_n2_joö_s_tu∂e
 {

140 
	mS_NATIONKEY
;

141 
	mCUST_NATION
[
STRSIZE
(25)];

142 
	mL_YEAR
;

143 
decimÆ
 
	mL_EXTENDEDPRICE
;

144 
decimÆ
 
	mL_DISCOUNT
;

147 
	sq7_ãmp_agg_key
 {

148 
	mS_NATIONKEY
;

149 
	mCUST_NATION
[
STRSIZE
(25)];

150 
	mL_YEAR
;

153 
	sq7_ãmp_aggªg©e_tu∂e
 {

154 
	mS_NATIONKEY
;

155 
	mCUST_NATION
[
STRSIZE
(25)];

156 
	mL_YEAR
;

157 
decimÆ
 
	mVOLUME
;

160 
	sq7_föÆ_tu∂e
 {

161 
	mSUPP_NATION
[
STRSIZE
(25)];

162 
	mCUST_NATION
[
STRSIZE
(25)];

163 
	mL_YEAR
;

164 
decimÆ
 
	mREVENUE
;

168 ˛as†
	cq7_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


170 
¥iv©e
:

171 
Sh‹eTPCHEnv
* 
_çchdb
;

172 
èbÀ_row_t
* 
	m_¥«ti⁄
;

173 
ªp_row_t
 
	m_º
;

176 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

178 
	m_«me1
[
STRSIZE
(25)];

179 
	m_«me2
[
STRSIZE
(25)];

180 
q7_öput_t
* 
	mq7_öput
;

182 
	mpublic
:

183 
	$q7_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q7_öput_t
 &
ö
)

184 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

186 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

187 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

188 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

189 
_¥«ti⁄
->
_ªp
 = &
_º
;

191 
q7_öput
 = &
ö
;

192 
	`«ti⁄_to_°r
(
q7_öput
->
n_«me1
, 
_«me1
);

193 
	`«ti⁄_to_°r
(
q7_öput
->
n_«me2
, 
_«me2
);

195 
	`TRACE
(
TRACE_ALWAYS
, "R™dom Pªdiˇãs:\nNATION.N_NAME = '%s' o∏NATION.N_NAME = '%s'\n", 
_«me1
, 
_«me2
);

198 
vútuÆ
 ~
	$q7_«ti⁄_tsˇn_fûãr_t
()

200 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

201 
	}
}

203 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

206 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

207 
	`as£π
(
Ál£
);

210 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

212  (
	`°rcmp
(
_«ti⁄
.
N_NAME
, 
_«me1
Ë=0 || såcmp(_«ti⁄.N_NAME, 
_«me2
) == 0);

213 
	}
}

216 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

218 
q7_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

219 
de°
 = 
Æig√d_ˇ°
<
q7_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

221 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

222 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

227 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

228 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

229 
	}
}

231 
q7_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

232  
√w
 
	`q7_«ti⁄_tsˇn_fûãr_t
(*
this
);

233 
	}
}

235 
c_°r
 
	$to_°rög
() const {

236  
	`c_°r
("q7_«ti⁄_tsˇn_fûãr_t(%†‹ %s)", 
_«me1
, 
_«me2
);

237 
	}
}

240 ˛as†
	cq7_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


242 
¥iv©e
:

243 
Sh‹eTPCHEnv
* 
_çchdb
;

244 
èbÀ_row_t
* 
	m_¥cu°
;

245 
ªp_row_t
 
	m_º
;

247 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

249 
	mpublic
:

250 
	$q7_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q7_öput_t
 &
ö
)

251 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

253 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

254 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

255 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

256 
_¥cu°
->
_ªp
 = &
_º
;

259 
vútuÆ
 ~
	$q7_cu°omî_tsˇn_fûãr_t
()

262 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

263 
	}
}

265 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

267 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

268 
	`as£π
(
Ál£
);

271  
åue
;

272 
	}
}

274 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

276 
q7_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

278 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

279 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_NATIONKEY
);

283 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

284 
de°
->
C_NATIONKEY
 = 
_cu°omî
.C_NATIONKEY;

285 
	}
}

287 
vútuÆ
 
q7_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

288  
√w
 
	`q7_cu°omî_tsˇn_fûãr_t
(*
this
);

289 
	}
}

291 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

292  
	`c_°r
("q7_customer_tscan_filter_t");

293 
	}
}

296 ˛as†
	cq7_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


298 
¥iv©e
:

299 
Sh‹eTPCHEnv
* 
_çchdb
;

300 
èbÀ_row_t
* 
	m_¥‹dîs
;

301 
ªp_row_t
 
	m_º
;

303 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

305 
	mpublic
:

306 
	$q7_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q7_öput_t
 &
ö
)

307 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

309 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

310 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

311 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

312 
_¥‹dîs
->
_ªp
 = &
_º
;

315 
vútuÆ
 ~
	$q7_‹dîs_tsˇn_fûãr_t
()

318 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

319 
	}
}

321 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

323 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

324 
	`as£π
(
Ál£
);

327  
åue
;

328 
	}
}

330 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

332 
q7_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

334 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

335 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

339 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

340 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

341 
	}
}

343 
q7_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

344  
√w
 
	`q7_‹dîs_tsˇn_fûãr_t
(*
this
);

345 
	}
}

347 
c_°r
 
	$to_°rög
() const {

348  
	`c_°r
("q7_orders_tscan_filter_t");

349 
	}
}

352 ˛as†
	cq7_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


354 
¥iv©e
:

355 
Sh‹eTPCHEnv
* 
_çchdb
;

356 
èbÀ_row_t
* 
	m_¥löe
;

357 
ªp_row_t
 
	m_º
;

359 
çch_löeôem_tu∂e
 
	m_löeôem
;

360 
time_t
 
	m_shùd©e
;

362 
time_t
 
	m_fú°d©e
;

363 
time_t
 
	m_œ°d©e
;

365 
	mpublic
:

366 
	$q7_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q7_öput_t
 &
ö
)

367 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

369 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

370 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

371 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

372 
_¥löe
->
_ªp
 = &
_º
;

374 
_fú°d©e
 = 
	`°r_to_timë
("1995-01-01");

375 
_œ°d©e
 = 
	`°r_to_timë
("1996-12-31");

378 
vútuÆ
 ~
	$q7_löeôem_tsˇn_fûãr_t
()

381 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

382 
	}
}

384 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

386 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

387 
	`as£π
(
Ál£
);

390 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

391 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

393  (
_shùd©e
 >
_fú°d©e
 && _shùd©ê<
_œ°d©e
);

394 
	}
}

396 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

398 
q7_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

400 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

401 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

402 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

403 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

404 
_¥löe
->
	`gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
, 15);

405 
_shùd©e
 = 
	`°r_to_timë
(
_löeôem
.
L_SHIPDATE
);

406 
tm
 *
tm_shùd©e
 = 
	`gmtime
(&
_shùd©e
);

411 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

412 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

413 
de°
->
L_EXTENDEDPRICE
 = 
_löeôem
.L_EXTENDEDPRICE / 100.0;

414 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

415 
de°
->
L_DISCOUNT
 = 
_löeôem
.L_DISCOUNT / 100.0;

416 
de°
->
L_YEAR
 = 
tm_shùd©e
->
tm_yór
 + 1900;

421 
	}
}

423 
q7_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

424  
√w
 
	`q7_löeôem_tsˇn_fûãr_t
(*
this
);

425 
	}
}

427 
c_°r
 
	$to_°rög
() const {

428  
	`c_°r
("q7_löeôem_tsˇn_fûãr_t(bëwìn(%s, %s))", 
	`˘ime
(&(
_fú°d©e
)), ctime(&(
_œ°d©e
)));

429 
	}
}

432 ˛as†
	cq7_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


434 
¥iv©e
:

435 
Sh‹eTPCHEnv
* 
_çchdb
;

436 
èbÀ_row_t
* 
	m_¥suµlõr
;

437 
ªp_row_t
 
	m_º
;

440 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

442 
	mpublic
:

443 
	$q7_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q7_öput_t
 &
ö
)

444 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

446 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

447 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

448 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

449 
_¥suµlõr
->
_ªp
 = &
_º
;

452 
vútuÆ
 ~
	$q7_suµlõr_tsˇn_fûãr_t
()

454 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

455 
	}
}

457 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

460 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

461 
	`as£π
(
Ál£
);

464  
åue
;

465 
	}
}

468 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

470 
q7_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

473 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

474 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

479 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

480 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

482 
	}
}

484 
q7_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

485  
√w
 
	`q7_suµlõr_tsˇn_fûãr_t
(*
this
);

486 
	}
}

488 
c_°r
 
	$to_°rög
() const {

489  
	`c_°r
("q7_supplier_tscan_filter_t");

490 
	}
}

494 
	gq7_c_joö_n2_t
 : 
public
 
tu∂e_joö_t
 {

496 
q7_c_joö_n2_t
()

497 : 
tu∂e_joö_t
((
q7_¥oje˘ed_cu°omî_tu∂e
),

498 
off£tof
(
q7_¥oje˘ed_cu°omî_tu∂e
, 
C_NATIONKEY
),

499 (
q7_¥oje˘ed_«ti⁄_tu∂e
),

500 
off£tof
(
q7_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

502 (
q7_c_joö_n2_tu∂e
))

506 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

507 
q7_c_joö_n2_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q7_c_joö_n2_tu∂e>(
d
.
d©a
);

508 
q7_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_cu°omî_tu∂e>(
l
.
d©a
);

509 
q7_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

511 
	gde°
->
	gC_CUSTKEY
 = 
cu°
->
C_CUSTKEY
;

512 
mem˝y
(
de°
->
CUST_NATION
, 
«ti⁄
->
N_NAME
, (dest->CUST_NATION));

517 
vútuÆ
 
q7_c_joö_n2_t
* 
˛⁄e
() const {

518  
√w
 
q7_c_joö_n2_t
(*
this
);

521 
vútuÆ
 
c_°r
 
to_°rög
() const {

522  
c_°r
("JOIN CUSTOMER, NATIONÇ2; select C_CUSTKEY,Ç2.N_NAMEás CUST_NAME");

526 
	gq7_o_joö_c_n2_t
 : 
public
 
tu∂e_joö_t
 {

528 
q7_o_joö_c_n2_t
()

529 : 
tu∂e_joö_t
((
q7_¥oje˘ed_‹dîs_tu∂e
),

530 
off£tof
(
q7_¥oje˘ed_‹dîs_tu∂e
, 
O_CUSTKEY
),

531 (
q7_c_joö_n2_tu∂e
),

532 
off£tof
(
q7_c_joö_n2_tu∂e
, 
C_CUSTKEY
),

534 (
q7_o_joö_c_n2_tu∂e
))

538 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

539 
q7_o_joö_c_n2_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q7_o_joö_c_n2_tu∂e>(
d
.
d©a
);

540 
q7_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dîs
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_‹dîs_tu∂e>(
l
.
d©a
);

541 
q7_c_joö_n2_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q7_c_joö_n2_tu∂e>(
r
.
d©a
);

543 
	gde°
->
	gO_ORDERKEY
 = 
‹dîs
->
O_ORDERKEY
;

544 
mem˝y
(
de°
->
CUST_NATION
, 
right
->CUST_NATION, (dest->CUST_NATION));

549 
vútuÆ
 
q7_o_joö_c_n2_t
* 
˛⁄e
() const {

550  
√w
 
q7_o_joö_c_n2_t
(*
this
);

553 
vútuÆ
 
c_°r
 
to_°rög
() const {

554  
c_°r
("JOIN ORDERS, CUSTOMER_NATION; select O_ORDERKEY, CUST_NAME");

558 
	gq7_l_joö_o_c_n2_t
 : 
public
 
tu∂e_joö_t
 {

560 
q7_l_joö_o_c_n2_t
()

561 : 
tu∂e_joö_t
((
q7_¥oje˘ed_löeôem_tu∂e
),

562 
off£tof
(
q7_¥oje˘ed_löeôem_tu∂e
, 
L_ORDERKEY
),

563 (
q7_o_joö_c_n2_tu∂e
),

564 
off£tof
(
q7_o_joö_c_n2_tu∂e
, 
O_ORDERKEY
),

566 (
q7_l_joö_o_c_n2_tu∂e
))

570 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

571 
q7_l_joö_o_c_n2_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q7_l_joö_o_c_n2_tu∂e>(
d
.
d©a
);

572 
q7_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

573 
q7_o_joö_c_n2_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q7_o_joö_c_n2_tu∂e>(
r
.
d©a
);

575 
	gde°
->
	gL_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

576 
mem˝y
(
de°
->
CUST_NATION
, 
right
->CUST_NATION, (dest->CUST_NATION));

577 
	gde°
->
	gL_EXTENDEDPRICE
 = 
löe
->
L_EXTENDEDPRICE
;

578 
	gde°
->
	gL_DISCOUNT
 = 
löe
->
L_DISCOUNT
;

579 
	gde°
->
	gL_YEAR
 = 
löe
->
L_YEAR
;

585 
vútuÆ
 
q7_l_joö_o_c_n2_t
* 
˛⁄e
() const {

586  
√w
 
q7_l_joö_o_c_n2_t
(*
this
);

589 
vútuÆ
 
c_°r
 
to_°rög
() const {

594 
	gq7_l_o_c_n2_joö_s_t
 : 
public
 
tu∂e_joö_t
 {

596 
q7_l_o_c_n2_joö_s_t
()

597 : 
tu∂e_joö_t
((
q7_l_joö_o_c_n2_tu∂e
),

598 
off£tof
(
q7_l_joö_o_c_n2_tu∂e
, 
L_SUPPKEY
),

599 (
q7_¥oje˘ed_suµlõr_tu∂e
),

600 
off£tof
(
q7_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

602 (
q7_l_o_c_n2_joö_s_tu∂e
))

606 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

607 
q7_l_o_c_n2_joö_s_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q7_l_o_c_n2_joö_s_tu∂e>(
d
.
d©a
);

608 
q7_l_joö_o_c_n2_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q7_l_joö_o_c_n2_tu∂e>(
l
.
d©a
);

609 
q7_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµlõr
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_suµlõr_tu∂e>(
r
.
d©a
);

611 
	gde°
->
	gS_NATIONKEY
 = 
suµlõr
->
S_NATIONKEY
;

612 
mem˝y
(
de°
->
CUST_NATION
, 
À·
->CUST_NATION, (dest->CUST_NATION));

613 
	gde°
->
	gL_EXTENDEDPRICE
 = 
À·
->
L_EXTENDEDPRICE
;

614 
	gde°
->
	gL_DISCOUNT
 = 
À·
->
L_DISCOUNT
;

615 
	gde°
->
	gL_YEAR
 = 
À·
->
L_YEAR
;

621 
vútuÆ
 
q7_l_o_c_n2_joö_s_t
* 
˛⁄e
() const {

622  
√w
 
q7_l_o_c_n2_joö_s_t
(*
this
);

625 
vútuÆ
 
c_°r
 
to_°rög
() const {

626  
c_°r
("JOIN LINEITEM_ORDERS_CUSTOMER_NATION, SUPPLIER; select S_NATIONKEY, CUST_NATION, L_EXTENDEDPRICE, L_DISCOUNT, L_YEAR");

630 ˛as†
	cq7_ãmp_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

632 
¥iv©e
:

634 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

636 
	mpublic
:

638 
	$q7_ãmp_aggªg©e_t
()

639 : 
	`tu∂e_aggªg©e_t
((
q7_ãmp_aggªg©e_tu∂e
)), 
	`_exåa˘‹
(2 * (Ë+ 
	`STRSIZE
(25), 
	$off£tof
(
q7_ãmp_aggªg©e_tu∂e
, 
S_NATIONKEY
))

643 
vútuÆ
 
key_exåa˘‹_t
* 
	$key_exåa˘‹
(Ë{ &
_exåa˘‹
;
	}
}

645 
vútuÆ
 
	$aggªg©e
(*
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

646 
q7_ãmp_aggªg©e_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q7_ãmp_aggªg©e_tu∂e>(
agg_d©a
);

647 
q7_l_o_c_n2_joö_s_tu∂e
 *
§c
 = 
Æig√d_ˇ°
<q7_l_o_c_n2_joö_s_tu∂e>(
s
.
d©a
);

649 
agg
->
VOLUME
 +
§c
->
L_EXTENDEDPRICE
 * (1 - src->
L_DISCOUNT
);

650 
	}
}

652 
vútuÆ
 
	$föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

653 
	`mem˝y
(
d
.
d©a
, 
agg_d©a
, 
	`tu∂e_size
());

654 
	}
}

656 
vútuÆ
 
q7_ãmp_aggªg©e_t
* 
	$˛⁄e
() const {

657  
√w
 
	`q7_ãmp_aggªg©e_t
(*
this
);

658 
	}
}

660 
vútuÆ
 
c_°r
 
	$to_°rög
() const {

661  
	`c_°r
("q7_temp_aggregate_t");

662 
	}
}

665 
	gq7_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

667 
q7_föÆ_joö_t
()

668 : 
tu∂e_joö_t
((
q7_¥oje˘ed_«ti⁄_tu∂e
),

669 
off£tof
(
q7_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

670 (
q7_ãmp_aggªg©e_tu∂e
),

671 
off£tof
(
q7_ãmp_aggªg©e_tu∂e
, 
S_NATIONKEY
),

673 (
q7_föÆ_tu∂e
))

677 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

678 
q7_föÆ_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q7_föÆ_tu∂e>(
d
.
d©a
);

679 
q7_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q7_¥oje˘ed_«ti⁄_tu∂e>(
l
.
d©a
);

680 
q7_ãmp_aggªg©e_tu∂e
 *
	gãmp
 = 
Æig√d_ˇ°
<q7_ãmp_aggªg©e_tu∂e>(
r
.
d©a
);

682 
mem˝y
(
de°
->
SUPP_NATION
, 
«ti⁄
->
N_NAME
, (dest->SUPP_NATION));

683 
mem˝y
(
de°
->
CUST_NATION
, 
ãmp
->CUST_NATION, (dest->CUST_NATION));

684 
	gde°
->
	gL_YEAR
 = 
ãmp
->
L_YEAR
;

685 
	gde°
->
	gREVENUE
 = 
ãmp
->
VOLUME
;

690 
vútuÆ
 
q7_föÆ_joö_t
* 
˛⁄e
() const {

691  
√w
 
q7_föÆ_joö_t
(*
this
);

694 
vútuÆ
 
c_°r
 
to_°rög
() const {

695  
c_°r
("JOIN NATIONÇ1, LINEITEM_ORDERS_CUSTOMER_NATION_SUPPLIER; selectÇ1.N_NAMEás SUPP_NATION, CUST_NATION, L_YEAR, REVENUE");

699 
	gq7_joö_«ti⁄_fûãr_t
 : 
public
 
tu∂e_fûãr_t
 {

701 
q7_joö_«ti⁄_fûãr_t
()

702 : 
tu∂e_fûãr_t
((
q7_föÆ_tu∂e
))

706 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

707 
q7_föÆ_tu∂e
 *
ö
 = 
Æig√d_ˇ°
<q7_föÆ_tu∂e>(
öput
.
d©a
);

708  (
°rcmp
(
ö
->
CUST_NATION
, in->
SUPP_NATION
) != 0);

711 
vútuÆ
 
q7_joö_«ti⁄_fûãr_t
* 
˛⁄e
() const {

712  
√w
 
q7_joö_«ti⁄_fûãr_t
(*
this
);

715 
vútuÆ
 
c_°r
 
to_°rög
() const {

716  
c_°r
("q7_join_nation_filter_t");

720 
	gq7_ãmp_agg_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

722 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

723 
q7_ãmp_agg_key
 *
	gk1
 = 
Æig√d_ˇ°
<q7_ãmp_agg_key>(
key1
);

724 
q7_ãmp_agg_key
 *
	gk2
 = 
Æig√d_ˇ°
<q7_ãmp_agg_key>(
key2
);

725 
	gdiff_key
 = 
k1
->
S_NATIONKEY
 - 
k2
->S_NATIONKEY;

726 
	gdiff_«me
 = 
°rcmp
(
k1
->
CUST_NATION
, 
k2
->CUST_NATION);

727 
	gdiff_yór
 = 
k1
->
L_YEAR
 - 
k2
->L_YEAR;

728  (
	gdiff_key
 !0 ? 
diff_key
 : (
diff_«me
 !0 ? diff_«mê: 
diff_yór
));

731 
vútuÆ
 
q7_ãmp_agg_key_com∑ª_t
* 
˛⁄e
() const {

732  
√w
 
q7_ãmp_agg_key_com∑ª_t
(*
this
);

736 
	gq7_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

738 
q7_key_exåa˘‹_t
()

739 : 
key_exåa˘‹_t
((
q7_föÆ_tu∂e
))

743 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

744 *
k
;

745 
	gk
 = 
Æig√d_ˇ°
<>(
key
);

747 
	gªsu…
 = (*
k
 << 24) + (*(k + ()) << 16) + (*(k + 2*()) << 8) + *(k + 3*());

749  
	gªsu…
;

752 
vútuÆ
 
q7_key_exåa˘‹_t
* 
˛⁄e
() const {

753  
√w
 
q7_key_exåa˘‹_t
(*
this
);

757 
	gq7_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

759 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

760 
q7_föÆ_tu∂e
* 
	gt1
 = 
Æig√d_ˇ°
<q7_föÆ_tu∂e>(
key1
);

761 
q7_föÆ_tu∂e
* 
	gt2
 = 
Æig√d_ˇ°
<q7_föÆ_tu∂e>(
key2
);

762 
	gdiff_n1
 = 
°rcmp
(
t1
->
SUPP_NATION
, 
t2
->SUPP_NATION);

763 
	gdiff_n2
 = 
°rcmp
(
t1
->
CUST_NATION
, 
t2
->CUST_NATION);

764 
	gdiff_yór
 = 
t1
->
L_YEAR
 - 
t2
->L_YEAR;

766  (
	gdiff_n1
 !0 ? 
diff_n1
 : (
diff_n2
 !0 ? diff_n2 : 
diff_yór
));

769 
vútuÆ
 
q7_key_com∑ª_t
* 
˛⁄e
() const {

770  
√w
 
q7_key_com∑ª_t
(*
this
);

774 ˛as†
	cçch_q7_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

776 
public
:

778 
vútuÆ
 
	$begö
() {

779 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q7 %25s %25s %25s %25s\n",

783 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

784 
q7_föÆ_tu∂e
 *
ªs
 = 
Æig√d_ˇ°
<q7_föÆ_tu∂e>(
ouçut
.
d©a
);

786 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q7 %25s %25s %25d %25.2f\n",

787 
ªs
->
SUPP_NATION
,Ñes->
CUST_NATION
,Ñes->
L_YEAR
,Ñes->
REVENUE
.
	`to_doubÀ
());

788 
	}
}

797 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q7
(c⁄° 
x˘_id
,

798 
q7_öput_t
& 
ö
)

801 
	`TRACE
–
TRACE_ALWAYS
, "********** Q7 *********\n");

803 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

804 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

807 
tu∂e_fifo
* 
q7_«ti⁄_n2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_«ti⁄_tu∂e
));

808 
∑ckë_t
* 
q7_«ti⁄_n2_tsˇn_∑ckë
 =

809 
√w
 
	`tsˇn_∑ckë_t
("nationÇ2 TSCAN",

810 
q7_«ti⁄_n2_buf„r
,

811 
√w
 
	`q7_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

812 
this
->
	`db
(),

813 
_≤©i⁄_desc
.
	`gë
(),

814 
px˘
);

817 
tu∂e_fifo
* 
q7_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_cu°omî_tu∂e
));

818 
∑ckë_t
* 
q7_cu°omî_tsˇn_∑ckë
 =

819 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

820 
q7_cu°omî_buf„r
,

821 
√w
 
	`q7_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

822 
this
->
	`db
(),

823 
_pcu°omî_desc
.
	`gë
(),

824 
px˘
);

827 
tu∂e_fifo
* 
q7_c_joö_n2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_c_joö_n2_tu∂e
));

828 
∑ckë_t
* 
q7_c_joö_n2_∑ckë
 =

829 
√w
 
	`hash_joö_∑ckë_t
("customer -Çation(n2) HJOIN",

830 
q7_c_joö_n2_buf„r
,

831 
√w
 
	`åivül_fûãr_t
((
q7_c_joö_n2_tu∂e
)),

832 
q7_cu°omî_tsˇn_∑ckë
,

833 
q7_«ti⁄_n2_tsˇn_∑ckë
,

834 
√w
 
	`q7_c_joö_n2_t
());

837 
tu∂e_fifo
* 
q7_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_‹dîs_tu∂e
));

838 
∑ckë_t
* 
q7_‹dîs_tsˇn_∑ckë
 =

839 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

840 
q7_‹dîs_buf„r
,

841 
√w
 
	`q7_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

842 
this
->
	`db
(),

843 
_p‹dîs_desc
.
	`gë
(),

844 
px˘
);

847 
tu∂e_fifo
* 
q7_o_joö_c_n2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_o_joö_c_n2_tu∂e
));

848 
∑ckë_t
* 
q7_o_joö_c_n2_∑ckë
 =

849 
√w
 
	`hash_joö_∑ckë_t
("orders - customer_nation HJOIN",

850 
q7_o_joö_c_n2_buf„r
,

851 
√w
 
	`åivül_fûãr_t
((
q7_o_joö_c_n2_tu∂e
)),

852 
q7_‹dîs_tsˇn_∑ckë
,

853 
q7_c_joö_n2_∑ckë
,

854 
√w
 
	`q7_o_joö_c_n2_t
());

857 
tu∂e_fifo
* 
q7_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_löeôem_tu∂e
));

858 
∑ckë_t
* 
q7_löeôem_tsˇn_∑ckë
 =

859 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

860 
q7_löeôem_buf„r
,

861 
√w
 
	`q7_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

862 
this
->
	`db
(),

863 
_∂öeôem_desc
.
	`gë
(),

864 
px˘
);

867 
tu∂e_fifo
* 
q7_l_joö_o_c_n2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_l_joö_o_c_n2_tu∂e
));

868 
∑ckë_t
* 
q7_l_joö_o_c_n2_∑ckë
 =

869 
√w
 
	`hash_joö_∑ckë_t
("lineitem - orders_customer_nation HJOIN",

870 
q7_l_joö_o_c_n2_buf„r
,

871 
√w
 
	`åivül_fûãr_t
((
q7_l_joö_o_c_n2_tu∂e
)),

872 
q7_löeôem_tsˇn_∑ckë
,

873 
q7_o_joö_c_n2_∑ckë
,

874 
√w
 
	`q7_l_joö_o_c_n2_t
());

877 
tu∂e_fifo
* 
q7_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_suµlõr_tu∂e
));

878 
∑ckë_t
* 
q7_suµlõr_tsˇn_∑ckë
 =

879 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

880 
q7_suµlõr_buf„r
,

881 
√w
 
	`q7_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

882 
this
->
	`db
(),

883 
_psuµlõr_desc
.
	`gë
(),

884 
px˘
);

887 
tu∂e_fifo
* 
q7_l_o_c_n2_joö_s_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_l_o_c_n2_joö_s_tu∂e
));

888 
∑ckë_t
* 
q7_l_o_c_n2_joö_s_∑ckë
 =

889 
√w
 
	`hash_joö_∑ckë_t
("lineitem_orders_customer_nation - supplier HJOIN",

890 
q7_l_o_c_n2_joö_s_buf„r
,

891 
√w
 
	`åivül_fûãr_t
((
q7_l_o_c_n2_joö_s_tu∂e
)),

892 
q7_l_joö_o_c_n2_∑ckë
,

893 
q7_suµlõr_tsˇn_∑ckë
,

894 
√w
 
	`q7_l_o_c_n2_joö_s_t
());

897 
tu∂e_fifo
* 
q7_ãmp_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_ãmp_aggªg©e_tu∂e
));

898 
∑ckë_t
* 
q7_ãmp_aggªg©e_∑ckë
 =

899 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("SUM AGG",

900 
q7_ãmp_aggªg©e_buf„r
,

901 
√w
 
	`åivül_fûãr_t
((
q7_ãmp_aggªg©e_tu∂e
)),

902 
q7_l_o_c_n2_joö_s_∑ckë
,

903 
√w
 
	`q7_ãmp_aggªg©e_t
(),

904 
√w
 
	`deÁu…_key_exåa˘‹_t
(2*(Ë+ 
	`STRSIZE
(25Ë* (), 
	`off£tof
(
q7_l_o_c_n2_joö_s_tu∂e
, 
S_NATIONKEY
)),

905 
√w
 
	`q7_ãmp_agg_key_com∑ª_t
());

908 
tu∂e_fifo
* 
q7_«ti⁄_n1_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_¥oje˘ed_«ti⁄_tu∂e
));

909 
∑ckë_t
* 
q7_«ti⁄_n1_tsˇn_∑ckë
 =

910 
√w
 
	`tsˇn_∑ckë_t
("nationÇ1 TSCAN",

911 
q7_«ti⁄_n1_buf„r
,

912 
√w
 
	`q7_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

913 
this
->
	`db
(),

914 
_≤©i⁄_desc
.
	`gë
(),

915 
px˘
);

918 
tu∂e_fifo
* 
q7_Æl_joö_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_föÆ_tu∂e
));

919 
∑ckë_t
* 
q7_Æl_joö_∑ckë
 =

920 
√w
 
	`hash_joö_∑ckë_t
("nation(n1) -Üineitem_orders_customer_nation_supplier HJOIN",

921 
q7_Æl_joö_buf„r
,

922 
√w
 
	`q7_joö_«ti⁄_fûãr_t
(),

923 
q7_«ti⁄_n1_tsˇn_∑ckë
,

924 
q7_ãmp_aggªg©e_∑ckë
,

925 
√w
 
	`q7_föÆ_joö_t
());

928 
tu∂e_fifo
* 
q7_föÆ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q7_föÆ_tu∂e
));

929 
∑ckë_t
* 
q7_s‹t_∑ckë
 =

930 
√w
 
	`s‹t_∑ckë_t
("SORT",

931 
q7_föÆ_buf„r
,

932 
√w
 
	`åivül_fûãr_t
((
q7_föÆ_tu∂e
)),

933 
√w
 
	`q7_key_exåa˘‹_t
(),

934 
√w
 
	`q7_key_com∑ª_t
(),

935 
q7_Æl_joö_∑ckë
);

937 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

938 
q7_«ti⁄_n2_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

939 
q7_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

940 
q7_c_joö_n2_∑ckë
->
	`assign_quîy_°©e
(
qs
);

941 
q7_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

942 
q7_o_joö_c_n2_∑ckë
->
	`assign_quîy_°©e
(
qs
);

943 
q7_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

944 
q7_l_joö_o_c_n2_∑ckë
->
	`assign_quîy_°©e
(
qs
);

945 
q7_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

946 
q7_l_o_c_n2_joö_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

947 
q7_ãmp_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

948 
q7_«ti⁄_n1_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

949 
q7_Æl_joö_∑ckë
->
	`assign_quîy_°©e
(
qs
);

950 
q7_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

953 
çch_q7_¥o˚ss_tu∂e_t
 
±
;

955 
	`¥o˚ss_quîy
(
q7_s‹t_∑ckë
, 
±
);

957 
dp
->
	`quîy_°©e_de°roy
(
qs
);

960 (
RCOK
);

961 
	}
}

963 
EXIT_NAMESPACE
(
çch
)

	@src/workload/tpch/qpipe/qpipe_q8.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

92 
	sq8_¥oje˘ed_löeôem_tu∂e
 {

93 
	mL_PARTKEY
;

94 
	mL_ORDERKEY
;

95 
	mL_SUPPKEY
;

96 
decimÆ
 
	mVOLUME
;

99 
	sq8_¥oje˘ed_∑π_tu∂e
 {

100 
	mP_PARTKEY
;

103 
	sq8_¥oje˘ed_‹dîs_tu∂e
 {

104 
	mO_ORDERKEY
;

105 
	mO_CUSTKEY
;

106 
	mO_YEAR
;

109 
	sq8_¥oje˘ed_cu°omî_tu∂e
 {

110 
	mC_CUSTKEY
;

111 
	mC_NATIONKEY
;

114 
	sq8_¥oje˘ed_«ti⁄_n1_tu∂e
 {

115 
	mN_NATIONKEY
;

116 
	mN_REGIONKEY
;

119 
	sq8_¥oje˘ed_ªgi⁄_tu∂e
 {

120 
	mR_REGIONKEY
;

123 
	sq8_¥oje˘ed_suµlõr_tu∂e
 {

124 
	mS_SUPPKEY
;

125 
	mS_NATIONKEY
;

128 
	sq8_¥oje˘ed_«ti⁄_n2_tu∂e
 {

129 
	mN_NATIONKEY
;

130 
	mN_NAME
[
STRSIZE
(25)];

133 
	sq8_l_joö_p_tu∂e
 {

134 
	mL_ORDERKEY
;

135 
	mL_SUPPKEY
;

136 
decimÆ
 
	mVOLUME
;

139 
	sq8_o_joö_l_p_tu∂e
 {

140 
	mO_CUSTKEY
;

141 
	mO_YEAR
;

142 
	mL_SUPPKEY
;

143 
decimÆ
 
	mVOLUME
;

146 
	sq8_c_joö_o_l_p_tu∂e
 {

147 
	mC_NATIONKEY
;

148 
	mO_YEAR
;

149 
	mL_SUPPKEY
;

150 
decimÆ
 
	mVOLUME
;

153 
	sq8_c_o_l_p_joö_n1_tu∂e
 {

154 
	mN_REGIONKEY
;

155 
	mO_YEAR
;

156 
	mL_SUPPKEY
;

157 
decimÆ
 
	mVOLUME
;

160 
	sq8_c_o_l_p_n1_joö_r_tu∂e
 {

161 
	mO_YEAR
;

162 
	mL_SUPPKEY
;

163 
decimÆ
 
	mVOLUME
;

166 
	sq8_s_joö_c_o_l_p_n1_r_tu∂e
 {

167 
	mS_NATIONKEY
;

168 
	mO_YEAR
;

169 
decimÆ
 
	mVOLUME
;

172 
	sq8_Æl_joös_tu∂e
 {

173 
	mO_YEAR
;

174 
decimÆ
 
	mVOLUME
;

175 
	mNATION
[
STRSIZE
(25)];

178 
	sq8_aggªg©e_tu∂e
 {

179 
	mO_YEAR
;

180 
decimÆ
 
	mSUM_VOLUME
;

181 
decimÆ
 
	mSUM_VOLUME_NATION
;

182 
	mMKT_SHARE
;

186 ˛as†
	cq8_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


188 
¥iv©e
:

189 
Sh‹eTPCHEnv
* 
_çchdb
;

190 
èbÀ_row_t
* 
	m_¥löe
;

191 
ªp_row_t
 
	m_º
;

193 
çch_löeôem_tu∂e
 
	m_löeôem
;

195 
	mpublic
:

196 
	$q8_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

197 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

199 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

200 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

201 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

202 
_¥löe
->
_ªp
 = &
_º
;

205 
vútuÆ
 ~
	$q8_löeôem_tsˇn_fûãr_t
()

208 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

209 
	}
}

211 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

213 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

214 
	`as£π
(
Ál£
);

217  
åue
;

218 
	}
}

220 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

222 
q8_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

224 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

225 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

226 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

227 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

228 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

232 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

233 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

234 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

235 
de°
->
VOLUME
 = 
_löeôem
.
L_EXTENDEDPRICE
 / 100.0 * (1 - _löeôem.
L_DISCOUNT
 / 100.0);

236 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

237 
	}
}

239 
q8_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

240  
√w
 
	`q8_löeôem_tsˇn_fûãr_t
(*
this
);

241 
	}
}

243 
c_°r
 
	$to_°rög
() const {

244  
	`c_°r
("q8_lineitem_tscan_filter_t()");

245 
	}
}

248 ˛as†
	cq8_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


250 
¥iv©e
:

251 
Sh‹eTPCHEnv
* 
_çchdb
;

252 
èbÀ_row_t
* 
	m_¥∑π
;

253 
ªp_row_t
 
	m_º
;

256 
çch_∑π_tu∂e
 
	m_∑π
;

258 
	m_ty≥
[
STRSIZE
(25)];

260 
q8_öput_t
* 
	mq8_öput
;

262 
	mpublic
:

264 
	$q8_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

265 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

267 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

268 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

269 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

270 
_¥∑π
->
_ªp
 = &
_º
;

272 
q8_öput
 = &
ö
;

273 
	`ty≥_to_°r
(
q8_öput
->
p_ty≥
, 
_ty≥
);

275 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nPART.P_TYPE = '%s'\n", 
_ty≥
);

278 
vútuÆ
 ~
	$q8_∑π_tsˇn_fûãr_t
()

281 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

282 
	}
}

286 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

289 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

290 
	`as£π
(
Ál£
);

293 
_¥∑π
->
	`gë_vÆue
(4, 
_∑π
.
P_TYPE
, 25);

295  
	`°rcmp
(
_∑π
.
P_TYPE
, 
_ty≥
) == 0;

296 
	}
}

299 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

301 
q8_¥oje˘ed_∑π_tu∂e
 *
de°
;

302 
de°
 = 
Æig√d_ˇ°
<
q8_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

304 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

309 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

310 
	}
}

312 
q8_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

313  
√w
 
	`q8_∑π_tsˇn_fûãr_t
(*
this
);

314 
	}
}

316 
c_°r
 
	$to_°rög
() const {

317  
	`c_°r
("q8_∑π_tsˇn_fûãr_t(%s)", 
_ty≥
);

318 
	}
}

321 ˛as†
	cq8_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


323 
¥iv©e
:

324 
Sh‹eTPCHEnv
* 
_çchdb
;

325 
èbÀ_row_t
* 
	m_¥‹dîs
;

326 
ªp_row_t
 
	m_º
;

328 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

329 
time_t
 
	m_‹dîd©e
;

331 
time_t
 
	m_fú°_‹dîd©e
;

332 
time_t
 
	m_œ°_‹dîd©e
;

334 
	mpublic
:

335 
	$q8_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

336 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

338 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

339 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

340 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

341 
_¥‹dîs
->
_ªp
 = &
_º
;

343 
_fú°_‹dîd©e
 = 
	`°r_to_timë
("1995-01-01");

344 
_œ°_‹dîd©e
 = 
	`°r_to_timë
("1996-12-31");

347 
vútuÆ
 ~
	$q8_‹dîs_tsˇn_fûãr_t
()

350 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

351 
	}
}

353 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

355 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

356 
	`as£π
(
Ál£
);

359 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, (_orders.O_ORDERDATE));

360 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

362  
_‹dîd©e
 >
_fú°_‹dîd©e
 && _‹dîd©ê<
_œ°_‹dîd©e
;

363 
	}
}

365 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

367 
q8_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

369 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

370 
_¥‹dîs
->
	`gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

371 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, (_orders.O_ORDERDATE));

372 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

373 
tm
 *
tm_‹dîd©e
 = 
	`gmtime
(&
_‹dîd©e
);

377 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

378 
de°
->
O_CUSTKEY
 = 
_‹dîs
.O_CUSTKEY;

379 
de°
->
O_YEAR
 = 
tm_‹dîd©e
->
tm_yór
 + 1900;

380 
	}
}

382 
q8_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

383  
√w
 
	`q8_‹dîs_tsˇn_fûãr_t
(*
this
);

384 
	}
}

386 
c_°r
 
	$to_°rög
() const {

387  
	`c_°r
("q8_‹dîs_tsˇn_fûãr_t(bëwì¿(%s, %s))", 
	`˘ime
(&(
_fú°_‹dîd©e
)), ctime(&(
_œ°_‹dîd©e
)));

388 
	}
}

391 ˛as†
	cq8_cu°omî_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


393 
¥iv©e
:

394 
Sh‹eTPCHEnv
* 
_çchdb
;

395 
èbÀ_row_t
* 
	m_¥cu°
;

396 
ªp_row_t
 
	m_º
;

398 
çch_cu°omî_tu∂e
 
	m_cu°omî
;

400 
	mpublic
:

401 
	$q8_cu°omî_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

402 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`cu°omî_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

404 
_¥cu°
 = 
_çchdb
->
	`cu°omî_m™
()->
	`gë_tu∂e
();

405 
_º
.
	`£t_ts
(
_çchdb
->
	`cu°omî_m™
()->
	`ts
(),

406 
_çchdb
->
	`cu°omî_desc
()->
	`maxsize
());

407 
_¥cu°
->
_ªp
 = &
_º
;

410 
vútuÆ
 ~
	$q8_cu°omî_tsˇn_fûãr_t
()

413 
_çchdb
->
	`cu°omî_m™
()->
	`give_tu∂e
(
_¥cu°
);

414 
	}
}

416 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

418 i‡(!
_çchdb
->
	`cu°omî_m™
()->
	`lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

419 
	`as£π
(
Ál£
);

422  
åue
;

423 
	}
}

425 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

427 
q8_¥oje˘ed_cu°omî_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_cu°omî_tu∂e>(
d
.
d©a
);

429 
_¥cu°
->
	`gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

430 
_¥cu°
->
	`gë_vÆue
(3, 
_cu°omî
.
C_NATIONKEY
);

434 
de°
->
C_CUSTKEY
 = 
_cu°omî
.C_CUSTKEY;

435 
de°
->
C_NATIONKEY
 = 
_cu°omî
.C_NATIONKEY;

436 
	}
}

438 
q8_cu°omî_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

439  
√w
 
	`q8_cu°omî_tsˇn_fûãr_t
(*
this
);

440 
	}
}

442 
c_°r
 
	$to_°rög
() const {

443  
	`c_°r
("q8_customer_tscan_filter_t");

444 
	}
}

447 ˛as†
	cq8_«ti⁄_n1_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


449 
¥iv©e
:

450 
Sh‹eTPCHEnv
* 
_çchdb
;

451 
èbÀ_row_t
* 
	m_¥«ti⁄
;

452 
ªp_row_t
 
	m_º
;

455 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

457 
	mpublic
:

458 
	$q8_«ti⁄_n1_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

459 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

461 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

462 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

463 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

464 
_¥«ti⁄
->
_ªp
 = &
_º
;

467 
vútuÆ
 ~
	$q8_«ti⁄_n1_tsˇn_fûãr_t
()

469 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

470 
	}
}

472 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

475 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

476 
	`as£π
(
Ál£
);

479  
åue
;

480 
	}
}

483 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

485 
q8_¥oje˘ed_«ti⁄_n1_tu∂e
 *
de°
;

486 
de°
 = 
Æig√d_ˇ°
<
q8_¥oje˘ed_«ti⁄_n1_tu∂e
>(
d
.
d©a
);

488 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

489 
_¥«ti⁄
->
	`gë_vÆue
(2, 
_«ti⁄
.
N_REGIONKEY
);

494 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

495 
de°
->
N_REGIONKEY
 = 
_«ti⁄
.N_REGIONKEY;

496 
	}
}

498 
q8_«ti⁄_n1_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

499  
√w
 
	`q8_«ti⁄_n1_tsˇn_fûãr_t
(*
this
);

500 
	}
}

502 
c_°r
 
	$to_°rög
() const {

503  
	`c_°r
("q8_nation_n1_tscan_filter_t()");

504 
	}
}

507 ˛as†
	cq8_«ti⁄_n2_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


509 
¥iv©e
:

510 
Sh‹eTPCHEnv
* 
_çchdb
;

511 
èbÀ_row_t
* 
	m_¥«ti⁄
;

512 
ªp_row_t
 
	m_º
;

515 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

517 
	mpublic
:

518 
	$q8_«ti⁄_n2_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

519 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

521 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

522 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

523 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

524 
_¥«ti⁄
->
_ªp
 = &
_º
;

527 
vútuÆ
 ~
	$q8_«ti⁄_n2_tsˇn_fûãr_t
()

529 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

530 
	}
}

532 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

535 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

536 
	`as£π
(
Ál£
);

539  
åue
;

540 
	}
}

543 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

545 
q8_¥oje˘ed_«ti⁄_n2_tu∂e
 *
de°
;

546 
de°
 = 
Æig√d_ˇ°
<
q8_¥oje˘ed_«ti⁄_n2_tu∂e
>(
d
.
d©a
);

548 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

549 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

554 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

555 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

556 
	}
}

558 
q8_«ti⁄_n2_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

559  
√w
 
	`q8_«ti⁄_n2_tsˇn_fûãr_t
(*
this
);

560 
	}
}

562 
c_°r
 
	$to_°rög
() const {

563  
	`c_°r
("q8_nation_n2_tscan_filter_t()");

564 
	}
}

567 ˛as†
	cq8_ªgi⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


569 
¥iv©e
:

570 
Sh‹eTPCHEnv
* 
_çchdb
;

571 
èbÀ_row_t
* 
	m_¥ªgi⁄
;

572 
ªp_row_t
 
	m_º
;

575 
çch_ªgi⁄_tu∂e
 
	m_ªgi⁄
;

577 
	m_«me
[
STRSIZE
(25)];

578 
q8_öput_t
* 
	mq8_öput
;

580 
	mpublic
:

581 
	$q8_ªgi⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

582 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`ªgi⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

584 
_¥ªgi⁄
 = 
_çchdb
->
	`ªgi⁄_m™
()->
	`gë_tu∂e
();

585 
_º
.
	`£t_ts
(
_çchdb
->
	`ªgi⁄_m™
()->
	`ts
(),

586 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

587 
_¥ªgi⁄
->
_ªp
 = &
_º
;

589 
q8_öput
 = &
ö
;

590 
	`ªgi⁄_to_°r
(
q8_öput
->
r_«me
, 
_«me
);

592 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nREGION.R_NAME = '%s'\n", 
_«me
);

595 
vútuÆ
 ~
	$q8_ªgi⁄_tsˇn_fûãr_t
()

597 
_çchdb
->
	`ªgi⁄_m™
()->
	`give_tu∂e
(
_¥ªgi⁄
);

598 
	}
}

600 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

603 i‡(!
_çchdb
->
	`ªgi⁄_m™
()->
	`lﬂd
(
_¥ªgi⁄
, 
öput
.
d©a
)) {

604 
	`as£π
(
Ál£
);

607 
_¥ªgi⁄
->
	`gë_vÆue
(1, 
_ªgi⁄
.
R_NAME
, 25);

609  (
	`°rcmp
(
_«me
, 
_ªgi⁄
.
R_NAME
) == 0);

610 
	}
}

613 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

615 
q8_¥oje˘ed_ªgi⁄_tu∂e
 *
de°
;

616 
de°
 = 
Æig√d_ˇ°
<
q8_¥oje˘ed_ªgi⁄_tu∂e
>(
d
.
d©a
);

618 
_¥ªgi⁄
->
	`gë_vÆue
(0, 
_ªgi⁄
.
R_REGIONKEY
);

623 
de°
->
R_REGIONKEY
 = 
_ªgi⁄
.R_REGIONKEY;

624 
	}
}

626 
q8_ªgi⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

627  
√w
 
	`q8_ªgi⁄_tsˇn_fûãr_t
(*
this
);

628 
	}
}

630 
c_°r
 
	$to_°rög
() const {

631  
	`c_°r
("q8_ªgi⁄_tsˇn_fûãr_t(%s)", 
_«me
);

632 
	}
}

635 ˛as†
	cq8_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


637 
¥iv©e
:

638 
Sh‹eTPCHEnv
* 
_çchdb
;

639 
èbÀ_row_t
* 
	m_¥suµlõr
;

640 
ªp_row_t
 
	m_º
;

643 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

645 
	mpublic
:

646 
	$q8_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q8_öput_t
 &
ö
)

647 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

649 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

650 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

651 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

652 
_¥suµlõr
->
_ªp
 = &
_º
;

655 
vútuÆ
 ~
	$q8_suµlõr_tsˇn_fûãr_t
()

657 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

658 
	}
}

660 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

663 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

664 
	`as£π
(
Ál£
);

667  
åue
;

668 
	}
}

671 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

673 
q8_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

676 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

677 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

682 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

683 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

685 
	}
}

687 
q8_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

688  
√w
 
	`q8_suµlõr_tsˇn_fûãr_t
(*
this
);

689 
	}
}

691 
c_°r
 
	$to_°rög
() const {

692  
	`c_°r
("q8_supplier_tscan_filter_t");

693 
	}
}

697 
	gq8_l_joö_p_t
 : 
public
 
tu∂e_joö_t
 {

699 
q8_l_joö_p_t
()

700 : 
tu∂e_joö_t
((
q8_¥oje˘ed_löeôem_tu∂e
),

701 
off£tof
(
q8_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
),

702 (
q8_¥oje˘ed_∑π_tu∂e
),

703 
off£tof
(
q8_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

705 (
q8_l_joö_p_tu∂e
))

709 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

710 
q8_l_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_l_joö_p_tu∂e>(
d
.
d©a
);

711 
q8_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

712 
q8_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

714 
	gde°
->
	gL_ORDERKEY
 = 
löe
->
L_ORDERKEY
;

715 
	gde°
->
	gL_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

716 
	gde°
->
	gVOLUME
 = 
löe
->
VOLUME
;

721 
vútuÆ
 
q8_l_joö_p_t
* 
˛⁄e
() const {

722  
√w
 
q8_l_joö_p_t
(*
this
);

725 
vútuÆ
 
c_°r
 
to_°rög
() const {

726  
c_°r
("join LINEITEM, PART; select L_ORDERKEY, L_SUPPKEY, VOLUME");

730 
	gq8_o_joö_l_p_t
 : 
public
 
tu∂e_joö_t
 {

732 
q8_o_joö_l_p_t
()

733 : 
tu∂e_joö_t
((
q8_¥oje˘ed_‹dîs_tu∂e
),

734 
off£tof
(
q8_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

735 (
q8_l_joö_p_tu∂e
),

736 
off£tof
(
q8_l_joö_p_tu∂e
, 
L_ORDERKEY
),

738 (
q8_o_joö_l_p_tu∂e
))

742 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

743 
q8_o_joö_l_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_o_joö_l_p_tu∂e>(
d
.
d©a
);

744 
q8_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dî
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_‹dîs_tu∂e>(
l
.
d©a
);

745 
q8_l_joö_p_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q8_l_joö_p_tu∂e>(
r
.
d©a
);

747 
	gde°
->
	gL_SUPPKEY
 = 
right
->
L_SUPPKEY
;

748 
	gde°
->
	gVOLUME
 = 
right
->
VOLUME
;

749 
	gde°
->
	gO_CUSTKEY
 = 
‹dî
->
O_CUSTKEY
;

750 
	gde°
->
	gO_YEAR
 = 
‹dî
->
O_YEAR
;

755 
vútuÆ
 
q8_o_joö_l_p_t
* 
˛⁄e
() const {

756  
√w
 
q8_o_joö_l_p_t
(*
this
);

759 
vútuÆ
 
c_°r
 
to_°rög
() const {

760  
c_°r
("join ORDERS, LINEITEM_PART; select L_SUPPKEY, VOLUME, O_CUSTKEY, O_YEAR");

764 
	gq8_c_joö_o_l_p_t
 : 
public
 
tu∂e_joö_t
 {

766 
q8_c_joö_o_l_p_t
()

767 : 
tu∂e_joö_t
((
q8_¥oje˘ed_cu°omî_tu∂e
),

768 
off£tof
(
q8_¥oje˘ed_cu°omî_tu∂e
, 
C_CUSTKEY
),

769 (
q8_o_joö_l_p_tu∂e
),

770 
off£tof
(
q8_o_joö_l_p_tu∂e
, 
O_CUSTKEY
),

772 (
q8_c_joö_o_l_p_tu∂e
))

776 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

777 
q8_c_joö_o_l_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_c_joö_o_l_p_tu∂e>(
d
.
d©a
);

778 
q8_¥oje˘ed_cu°omî_tu∂e
 *
	gcu°
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_cu°omî_tu∂e>(
l
.
d©a
);

779 
q8_o_joö_l_p_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q8_o_joö_l_p_tu∂e>(
r
.
d©a
);

781 
	gde°
->
	gL_SUPPKEY
 = 
right
->
L_SUPPKEY
;

782 
	gde°
->
	gVOLUME
 = 
right
->
VOLUME
;

783 
	gde°
->
	gO_YEAR
 = 
right
->
O_YEAR
;

784 
	gde°
->
	gC_NATIONKEY
 = 
cu°
->
C_NATIONKEY
;

789 
vútuÆ
 
q8_c_joö_o_l_p_t
* 
˛⁄e
() const {

790  
√w
 
q8_c_joö_o_l_p_t
(*
this
);

793 
vútuÆ
 
c_°r
 
to_°rög
() const {

794  
c_°r
("join CUSTOMER, ORDERS_LINEITEM_PART; select L_SUPPKEY, VOLUME, O_YEAR, C_NATIONKEY");

798 
	gq8_c_o_l_p_joö_n1_t
 : 
public
 
tu∂e_joö_t
 {

800 
q8_c_o_l_p_joö_n1_t
()

801 : 
tu∂e_joö_t
((
q8_c_joö_o_l_p_tu∂e
),

802 
off£tof
(
q8_c_joö_o_l_p_tu∂e
, 
C_NATIONKEY
),

803 (
q8_¥oje˘ed_«ti⁄_n1_tu∂e
),

804 
off£tof
(
q8_¥oje˘ed_«ti⁄_n1_tu∂e
, 
N_NATIONKEY
),

806 (
q8_c_o_l_p_joö_n1_tu∂e
))

810 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

811 
q8_c_o_l_p_joö_n1_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_c_o_l_p_joö_n1_tu∂e>(
d
.
d©a
);

812 
q8_c_joö_o_l_p_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q8_c_joö_o_l_p_tu∂e>(
l
.
d©a
);

813 
q8_¥oje˘ed_«ti⁄_n1_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_«ti⁄_n1_tu∂e>(
r
.
d©a
);

815 
	gde°
->
	gL_SUPPKEY
 = 
À·
->
L_SUPPKEY
;

816 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

817 
	gde°
->
	gO_YEAR
 = 
À·
->
O_YEAR
;

818 
	gde°
->
	gN_REGIONKEY
 = 
«ti⁄
->
N_REGIONKEY
;

823 
vútuÆ
 
q8_c_o_l_p_joö_n1_t
* 
˛⁄e
() const {

824  
√w
 
q8_c_o_l_p_joö_n1_t
(*
this
);

827 
vútuÆ
 
c_°r
 
to_°rög
() const {

828  
c_°r
("join CUSTOMER_ORDERS_LINEITEM_PART, NATIONÇ1; select L_SUPPKEY, VOLUME, O_YEAR,Ç1.N_REGIONKEY");

832 
	gq8_c_o_l_p_n1_joö_r_t
 : 
public
 
tu∂e_joö_t
 {

834 
q8_c_o_l_p_n1_joö_r_t
()

835 : 
tu∂e_joö_t
((
q8_c_o_l_p_joö_n1_tu∂e
),

836 
off£tof
(
q8_c_o_l_p_joö_n1_tu∂e
, 
N_REGIONKEY
),

837 (
q8_¥oje˘ed_ªgi⁄_tu∂e
),

838 
off£tof
(
q8_¥oje˘ed_ªgi⁄_tu∂e
, 
R_REGIONKEY
),

840 (
q8_c_o_l_p_n1_joö_r_tu∂e
))

844 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

845 
q8_c_o_l_p_n1_joö_r_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_c_o_l_p_n1_joö_r_tu∂e>(
d
.
d©a
);

846 
q8_c_o_l_p_joö_n1_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q8_c_o_l_p_joö_n1_tu∂e>(
l
.
d©a
);

847 
q8_¥oje˘ed_ªgi⁄_tu∂e
 *
	gªgi⁄
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_ªgi⁄_tu∂e>(
r
.
d©a
);

849 
	gde°
->
	gL_SUPPKEY
 = 
À·
->
L_SUPPKEY
;

850 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

851 
	gde°
->
	gO_YEAR
 = 
À·
->
O_YEAR
;

856 
vútuÆ
 
q8_c_o_l_p_n1_joö_r_t
* 
˛⁄e
() const {

857  
√w
 
q8_c_o_l_p_n1_joö_r_t
(*
this
);

860 
vútuÆ
 
c_°r
 
to_°rög
() const {

861  
c_°r
("join CUSTOMER_ORDERS_LINEITEM_PART_NATION, REGION; select L_SUPPKEY, VOLUME, O_YEAR");

865 
	gq8_s_joö_c_o_l_p_n1_r_t
 : 
public
 
tu∂e_joö_t
 {

867 
q8_s_joö_c_o_l_p_n1_r_t
()

868 : 
tu∂e_joö_t
((
q8_¥oje˘ed_suµlõr_tu∂e
),

869 
off£tof
(
q8_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

870 (
q8_c_o_l_p_n1_joö_r_tu∂e
),

871 
off£tof
(
q8_c_o_l_p_n1_joö_r_tu∂e
, 
L_SUPPKEY
),

873 (
q8_s_joö_c_o_l_p_n1_r_tu∂e
))

877 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

878 
q8_s_joö_c_o_l_p_n1_r_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_s_joö_c_o_l_p_n1_r_tu∂e>(
d
.
d©a
);

879 
q8_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_suµlõr_tu∂e>(
l
.
d©a
);

880 
q8_c_o_l_p_n1_joö_r_tu∂e
 *
	gright
 = 
Æig√d_ˇ°
<q8_c_o_l_p_n1_joö_r_tu∂e>(
r
.
d©a
);

882 
	gde°
->
	gS_NATIONKEY
 = 
suµ
->
S_NATIONKEY
;

883 
	gde°
->
	gVOLUME
 = 
right
->
VOLUME
;

884 
	gde°
->
	gO_YEAR
 = 
right
->
O_YEAR
;

889 
vútuÆ
 
q8_s_joö_c_o_l_p_n1_r_t
* 
˛⁄e
() const {

890  
√w
 
q8_s_joö_c_o_l_p_n1_r_t
(*
this
);

893 
vútuÆ
 
c_°r
 
to_°rög
() const {

894  
c_°r
("join SUPPLIER, CUSTOMER_ORDERS_LINEITEM_PART_NATION_REGION; select S_NATIONKEY, VOLUEM, O_YEAR");

898 
	gq8_föÆ_joö
 : 
public
 
tu∂e_joö_t
 {

900 
q8_föÆ_joö
()

901 : 
tu∂e_joö_t
((
q8_s_joö_c_o_l_p_n1_r_tu∂e
),

902 
off£tof
(
q8_s_joö_c_o_l_p_n1_r_tu∂e
, 
S_NATIONKEY
),

903 (
q8_¥oje˘ed_«ti⁄_n2_tu∂e
),

904 
off£tof
(
q8_¥oje˘ed_«ti⁄_n2_tu∂e
, 
N_NATIONKEY
),

906 (
q8_Æl_joös_tu∂e
))

910 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

911 
q8_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q8_Æl_joös_tu∂e>(
d
.
d©a
);

912 
q8_s_joö_c_o_l_p_n1_r_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q8_s_joö_c_o_l_p_n1_r_tu∂e>(
l
.
d©a
);

913 
q8_¥oje˘ed_«ti⁄_n2_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q8_¥oje˘ed_«ti⁄_n2_tu∂e>(
r
.
d©a
);

915 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

916 
	gde°
->
	gO_YEAR
 = 
À·
->
O_YEAR
;

917 
mem˝y
(
de°
->
NATION
, 
«ti⁄
->
N_NAME
, (dest->NATION));

922 
vútuÆ
 
q8_föÆ_joö
* 
˛⁄e
()const {

923  
√w
 
q8_föÆ_joö
(*
this
);

926 
vútuÆ
 
c_°r
 
to_°rög
() const {

927  
c_°r
("join SUPPLIER_CUSTOMER_ORDERS_LINEITEM_PART_NATION_REGION, NATIONÇ2; select VOLUME, O_YEAR,Ç2.N_NAMEás NATION");

931 
	gq8_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

933 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

934 
	g_«ti⁄
[
STRSIZE
(25)];

936 
q8_aggªg©e_t
(
q8_öput_t
 &
ö
)

937 : 
tu∂e_aggªg©e_t
((
q8_aggªg©e_tu∂e
))

939 
«ti⁄_to_°r
((&
ö
)->
n_«me
, 
_«ti⁄
);

940 
TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\¿NATION.N_NAME = %s\n", 
_«ti⁄
);

943 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

944  &
	g_exåa˘‹
;

947 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

948 
q8_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q8_aggªg©e_tu∂e>(
agg_d©a
);

949 
q8_Æl_joös_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q8_Æl_joös_tu∂e>(
t
.
d©a
);

951 
	gagg
->
	gO_YEAR
 = 
ö
->
O_YEAR
;

952 if(
°rcmp
(
_«ti⁄
, 
ö
->
NATION
) == 0) {

953 
agg
->
SUM_VOLUME_NATION
 +
ö
->
VOLUME
;

955 
	gagg
->
	gSUM_VOLUME
 +
ö
->
VOLUME
;

958 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

959 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

960 
q8_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q8_aggªg©e_tu∂e>(
de°
.
d©a
);

961 
	gagg
->
	gMKT_SHARE
 = 
agg
->
SUM_VOLUME_NATION
.
to_doubÀ
(Ë/ágg->
SUM_VOLUME
.to_double();

963 
vútuÆ
 
q8_aggªg©e_t
* 
˛⁄e
() const {

964  
√w
 
q8_aggªg©e_t
(*
this
);

966 
vútuÆ
 
c_°r
 
to_°rög
() const {

971 
	gq8_s‹t_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

973 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

974  (*)
	gkey1
 - (*)
	gkey2
;

977 
vútuÆ
 
q8_s‹t_key_com∑ª_t
* 
˛⁄e
() const {

978  
√w
 
q8_s‹t_key_com∑ª_t
(*
this
);

985 ˛as†
	cçch_q8_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

987 
public
:

989 
vútuÆ
 
	$begö
() {

990 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q8 %6s %25s\n",

994 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

995 
q8_aggªg©e_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q8_aggªg©e_tu∂e>(
ouçut
.
d©a
);

997 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q8 %6d %25.4f\n", 
agg
->
O_YEAR
,ágg->
MKT_SHARE
);

998 
	}
}

1009 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q8
(c⁄° 
x˘_id
,

1010 
q8_öput_t
& 
ö
)

1012 
	`TRACE
–
TRACE_ALWAYS
, "********** q8 *********\n");

1014 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

1015 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

1019 
tu∂e_fifo
* 
q8_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_∑π_tu∂e
));

1020 
∑ckë_t
* 
q8_∑π_tsˇn_∑ckë
 =

1021 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

1022 
q8_∑π_buf„r
,

1023 
√w
 
	`q8_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

1024 
this
->
	`db
(),

1025 
_µ¨t_desc
.
	`gë
(),

1026 
px˘
);

1029 
tu∂e_fifo
* 
q8_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_löeôem_tu∂e
));

1030 
∑ckë_t
* 
q8_löeôem_tsˇn_∑ckë
 =

1031 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

1032 
q8_löeôem_buf„r
,

1033 
√w
 
	`q8_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

1034 
this
->
	`db
(),

1035 
_∂öeôem_desc
.
	`gë
(),

1036 
px˘
);

1039 
tu∂e_fifo
* 
q8_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_‹dîs_tu∂e
));

1040 
∑ckë_t
* 
q8_‹dîs_tsˇn_∑ckë
 =

1041 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

1042 
q8_‹dîs_buf„r
,

1043 
√w
 
	`q8_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

1044 
this
->
	`db
(),

1045 
_p‹dîs_desc
.
	`gë
(),

1046 
px˘
);

1049 
tu∂e_fifo
* 
q8_cu°omî_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_cu°omî_tu∂e
));

1050 
∑ckë_t
* 
q8_cu°omî_tsˇn_∑ckë
 =

1051 
√w
 
	`tsˇn_∑ckë_t
("customer TSCAN",

1052 
q8_cu°omî_buf„r
,

1053 
√w
 
	`q8_cu°omî_tsˇn_fûãr_t
(
this
, 
ö
),

1054 
this
->
	`db
(),

1055 
_pcu°omî_desc
.
	`gë
(),

1056 
px˘
);

1059 
tu∂e_fifo
* 
q8_«ti⁄_n1_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_«ti⁄_n1_tu∂e
));

1060 
∑ckë_t
* 
q8_«ti⁄_n1_tsˇn_∑ckë
 =

1061 
√w
 
	`tsˇn_∑ckë_t
("nationÇ1 TSCAN",

1062 
q8_«ti⁄_n1_buf„r
,

1063 
√w
 
	`q8_«ti⁄_n1_tsˇn_fûãr_t
(
this
, 
ö
),

1064 
this
->
	`db
(),

1065 
_≤©i⁄_desc
.
	`gë
(),

1066 
px˘
);

1069 
tu∂e_fifo
* 
q8_ªgi⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_ªgi⁄_tu∂e
));

1070 
∑ckë_t
* 
q8_ªgi⁄_tsˇn_∑ckë
 =

1071 
√w
 
	`tsˇn_∑ckë_t
("region TSCAN",

1072 
q8_ªgi⁄_buf„r
,

1073 
√w
 
	`q8_ªgi⁄_tsˇn_fûãr_t
(
this
, 
ö
),

1074 
this
->
	`db
(),

1075 
_¥egi⁄_desc
.
	`gë
(),

1076 
px˘
);

1079 
tu∂e_fifo
* 
q8_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_suµlõr_tu∂e
));

1080 
∑ckë_t
* 
q8_suµlõr_tsˇn_∑ckë
 =

1081 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

1082 
q8_suµlõr_buf„r
,

1083 
√w
 
	`q8_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

1084 
this
->
	`db
(),

1085 
_psuµlõr_desc
.
	`gë
(),

1086 
px˘
);

1089 
tu∂e_fifo
* 
q8_«ti⁄_n2_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_¥oje˘ed_«ti⁄_n2_tu∂e
));

1090 
∑ckë_t
* 
q8_«ti⁄_n2_tsˇn_∑ckë
 =

1091 
√w
 
	`tsˇn_∑ckë_t
("nationÇ2 TSCAN",

1092 
q8_«ti⁄_n2_buf„r
,

1093 
√w
 
	`q8_«ti⁄_n2_tsˇn_fûãr_t
(
this
, 
ö
),

1094 
this
->
	`db
(),

1095 
_≤©i⁄_desc
.
	`gë
(),

1096 
px˘
);

1100 
tu∂e_fifo
* 
q8_l_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_l_joö_p_tu∂e
));

1101 
∑ckë_t
* 
q8_l_joö_p_∑ckë
 =

1102 
√w
 
	`hash_joö_∑ckë_t
("lineitem -Öart HJOIN",

1103 
q8_l_joö_p_buf„r
,

1104 
√w
 
	`åivül_fûãr_t
((
q8_l_joö_p_tu∂e
)),

1105 
q8_löeôem_tsˇn_∑ckë
,

1106 
q8_∑π_tsˇn_∑ckë
,

1107 
√w
 
	`q8_l_joö_p_t
());

1110 
tu∂e_fifo
* 
q8_o_joö_l_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_o_joö_l_p_tu∂e
));

1111 
∑ckë_t
* 
q8_o_joö_l_p_∑ckë
 =

1112 
√w
 
	`hash_joö_∑ckë_t
("orders -Üineitem_part HJOIN",

1113 
q8_o_joö_l_p_buf„r
,

1114 
√w
 
	`åivül_fûãr_t
((
q8_o_joö_l_p_tu∂e
)),

1115 
q8_‹dîs_tsˇn_∑ckë
,

1116 
q8_l_joö_p_∑ckë
,

1117 
√w
 
	`q8_o_joö_l_p_t
());

1120 
tu∂e_fifo
* 
q8_c_joö_o_l_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_c_joö_o_l_p_tu∂e
));

1121 
∑ckë_t
* 
q8_c_joö_o_l_p_∑ckë
 =

1122 
√w
 
	`hash_joö_∑ckë_t
("customer - orders_lineitem_part HJOIN",

1123 
q8_c_joö_o_l_p_buf„r
,

1124 
√w
 
	`åivül_fûãr_t
((
q8_c_joö_o_l_p_tu∂e
)),

1125 
q8_cu°omî_tsˇn_∑ckë
,

1126 
q8_o_joö_l_p_∑ckë
,

1127 
√w
 
	`q8_c_joö_o_l_p_t
());

1130 
tu∂e_fifo
* 
q8_c_o_l_p_joö_n1_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_c_o_l_p_joö_n1_tu∂e
));

1131 
∑ckë_t
* 
q8_c_o_l_p_joö_n1_∑ckë
 =

1132 
√w
 
	`hash_joö_∑ckë_t
("customer_orders_lineitem_part -ÇationÇ1 HJOIN",

1133 
q8_c_o_l_p_joö_n1_buf„r
,

1134 
√w
 
	`åivül_fûãr_t
((
q8_c_o_l_p_joö_n1_tu∂e
)),

1135 
q8_c_joö_o_l_p_∑ckë
,

1136 
q8_«ti⁄_n1_tsˇn_∑ckë
,

1137 
√w
 
	`q8_c_o_l_p_joö_n1_t
());

1140 
tu∂e_fifo
* 
q8_c_o_l_p_n1_joö_r_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_c_o_l_p_n1_joö_r_tu∂e
));

1141 
∑ckë_t
* 
q8_c_o_l_p_n1_joö_r_∑ckë
 =

1142 
√w
 
	`hash_joö_∑ckë_t
("customer_orders_lineitem_part_nation -Ñegion HJOIN",

1143 
q8_c_o_l_p_n1_joö_r_buf„r
,

1144 
√w
 
	`åivül_fûãr_t
((
q8_c_o_l_p_n1_joö_r_tu∂e
)),

1145 
q8_c_o_l_p_joö_n1_∑ckë
,

1146 
q8_ªgi⁄_tsˇn_∑ckë
,

1147 
√w
 
	`q8_c_o_l_p_n1_joö_r_t
());

1150 
tu∂e_fifo
* 
q8_s_joö_c_o_l_p_n1_r_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_s_joö_c_o_l_p_n1_r_tu∂e
));

1151 
∑ckë_t
* 
q8_s_joö_c_o_l_p_n1_r_∑ckë
 =

1152 
√w
 
	`hash_joö_∑ckë_t
("supplier - customer_orders_lineitem_part_nation_region HJOIN",

1153 
q8_s_joö_c_o_l_p_n1_r_buf„r
,

1154 
√w
 
	`åivül_fûãr_t
((
q8_s_joö_c_o_l_p_n1_r_tu∂e
)),

1155 
q8_suµlõr_tsˇn_∑ckë
,

1156 
q8_c_o_l_p_n1_joö_r_∑ckë
,

1157 
√w
 
	`q8_s_joö_c_o_l_p_n1_r_t
());

1160 
tu∂e_fifo
* 
q8_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_Æl_joös_tu∂e
));

1161 
∑ckë_t
* 
q8_Æl_joös_∑ckë
 =

1162 
√w
 
	`hash_joö_∑ckë_t
("supplier_customer_orders_lineitem_part_nation_region -ÇationÇ2 HJOIN",

1163 
q8_Æl_joös_buf„r
,

1164 
√w
 
	`åivül_fûãr_t
((
q8_Æl_joös_tu∂e
)),

1165 
q8_s_joö_c_o_l_p_n1_r_∑ckë
,

1166 
q8_«ti⁄_n2_tsˇn_∑ckë
,

1167 
√w
 
	`q8_föÆ_joö
());

1170 
tu∂e_fifo
* 
q8_aggªg©e_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q8_aggªg©e_tu∂e
));

1171 
∑ckë_t
* 
q8_aggªg©e_∑ckë
 =

1172 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGGREGATE",

1173 
q8_aggªg©e_buf„r
,

1174 
√w
 
	`åivül_fûãr_t
((
q8_aggªg©e_tu∂e
)),

1175 
q8_Æl_joös_∑ckë
,

1176 
√w
 
	`q8_aggªg©e_t
(
ö
),

1177 
√w
 
	`deÁu…_key_exåa˘‹_t
((), 
	`off£tof
(
q8_Æl_joös_tu∂e
, 
O_YEAR
)),

1178 
√w
 
	`q8_s‹t_key_com∑ª_t
());

1180 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

1181 
q8_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1182 
q8_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1183 
q8_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1184 
q8_cu°omî_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1185 
q8_«ti⁄_n1_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1186 
q8_ªgi⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1187 
q8_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1188 
q8_«ti⁄_n2_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1189 
q8_l_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1190 
q8_o_joö_l_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1191 
q8_c_joö_o_l_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1192 
q8_c_o_l_p_joö_n1_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1193 
q8_c_o_l_p_n1_joö_r_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1194 
q8_s_joö_c_o_l_p_n1_r_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1195 
q8_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1196 
q8_aggªg©e_∑ckë
->
	`assign_quîy_°©e
(
qs
);

1200 
çch_q8_¥o˚ss_tu∂e_t
 
±
;

1202 
	`¥o˚ss_quîy
(
q8_aggªg©e_∑ckë
, 
±
);

1204 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1207  (
RCOK
);

1208 
	}
}

1211 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/qpipe/qpipe_q9.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~"qpùe.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

38 
usög
 
«me•a˚
 
	gqpùe
;

42 
ENTER_NAMESPACE
(
çch
);

86 
	sq9_¥oje˘ed_löeôem_tu∂e
 {

87 
	mL_PARTKEY
;

88 
	mL_SUPPKEY
;

89 
	mL_ORDERKEY
;

90 
decimÆ
 
	mVOLUME
;

91 
decimÆ
 
	mL_QUANTITY
;

94 
	sq9_¥oje˘ed_∑π_tu∂e
 {

95 
	mP_PARTKEY
;

98 
	sq9_¥oje˘ed_suµlõr_tu∂e
 {

99 
	mS_SUPPKEY
;

100 
	mS_NATIONKEY
;

103 
	sq9_¥oje˘ed_«ti⁄_tu∂e
 {

104 
	mN_NATIONKEY
;

105 
	mN_NAME
[
STRSIZE
(25)];

108 
	sq9_¥oje˘ed_‹dîs_tu∂e
 {

109 
	mO_ORDERKEY
;

110 
	mO_YEAR
;

113 
	sq9_¥oje˘ed_∑πsuµ_tu∂e
 {

114 
	mPS_PARTKEY
;

115 
	mPS_SUPPKEY
;

116 
decimÆ
 
	mPS_SUPPLYCOST
;

119 
	sq9_l_joö_p_tu∂e
 {

120 
	mL_PARTKEY
;

121 
	mL_SUPPKEY
;

122 
	mL_ORDERKEY
;

123 
decimÆ
 
	mVOLUME
;

124 
decimÆ
 
	mL_QUANTITY
;

127 
	sq9_l_p_joö_s_tu∂e
 {

128 
	mL_PARTKEY
;

129 
	mL_SUPPKEY
;

130 
	mL_ORDERKEY
;

131 
decimÆ
 
	mVOLUME
;

132 
decimÆ
 
	mL_QUANTITY
;

133 
	mS_NATIONKEY
;

136 
	sq9_l_p_s_joö_n_tu∂e
 {

137 
	mL_PARTKEY
;

138 
	mL_SUPPKEY
;

139 
	mL_ORDERKEY
;

140 
decimÆ
 
	mVOLUME
;

141 
decimÆ
 
	mL_QUANTITY
;

142 
	mN_NAME
[
STRSIZE
(25)];

145 
	sq9_l_p_s_n_joö_o_tu∂e
 {

146 
	mL_PARTKEY
;

147 
	mL_SUPPKEY
;

148 
decimÆ
 
	mVOLUME
;

149 
decimÆ
 
	mL_QUANTITY
;

150 
	mN_NAME
[
STRSIZE
(25)];

151 
	mO_YEAR
;

154 
	sq9_Æl_joös_tu∂e
 {

155 
	mN_NAME
[
STRSIZE
(25)];

156 
	mO_YEAR
;

157 
decimÆ
 
	mVOLUME
;

158 
decimÆ
 
	mL_QUANTITY
;

159 
decimÆ
 
	mPS_SUPPLYCOST
;

162 
	sq9_aggªg©e_tu∂e
 {

163 
	mNATION
[
STRSIZE
(25)];

164 
	mO_YEAR
;

165 
decimÆ
 
	mSUM_PROFIT
;

168 
	sq9_key
 {

169 
	mNATION
[
STRSIZE
(25)];

170 
	mO_YEAR
;

174 ˛as†
	cq9_löeôem_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


176 
¥iv©e
:

177 
Sh‹eTPCHEnv
* 
_çchdb
;

178 
èbÀ_row_t
* 
	m_¥löe
;

179 
ªp_row_t
 
	m_º
;

181 
çch_löeôem_tu∂e
 
	m_löeôem
;

183 
	mpublic
:

184 
	$q9_löeôem_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

185 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`löeôem_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

187 
_¥löe
 = 
_çchdb
->
	`löeôem_m™
()->
	`gë_tu∂e
();

188 
_º
.
	`£t_ts
(
_çchdb
->
	`löeôem_m™
()->
	`ts
(),

189 
_çchdb
->
	`löeôem_desc
()->
	`maxsize
());

190 
_¥löe
->
_ªp
 = &
_º
;

193 
vútuÆ
 ~
	$q9_löeôem_tsˇn_fûãr_t
()

196 
_çchdb
->
	`löeôem_m™
()->
	`give_tu∂e
(
_¥löe
);

197 
	}
}

199 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

201 i‡(!
_çchdb
->
	`löeôem_m™
()->
	`lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

202 
	`as£π
(
Ál£
);

205  
åue
;

206 
	}
}

208 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

210 
q9_¥oje˘ed_löeôem_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_löeôem_tu∂e>(
d
.
d©a
);

212 
_¥löe
->
	`gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

213 
_¥löe
->
	`gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

214 
_¥löe
->
	`gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

215 
_¥löe
->
	`gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

216 
_¥löe
->
	`gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

217 
_¥löe
->
	`gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

222 
de°
->
L_ORDERKEY
 = 
_löeôem
.L_ORDERKEY;

223 
de°
->
L_PARTKEY
 = 
_löeôem
.L_PARTKEY;

224 
de°
->
L_SUPPKEY
 = 
_löeôem
.L_SUPPKEY;

225 
de°
->
L_QUANTITY
 = 
_löeôem
.L_QUANTITY;

226 
de°
->
VOLUME
 = 
_löeôem
.
L_EXTENDEDPRICE
 / 100.0 * (1 - _löeôem.
L_DISCOUNT
 / 100.0);

227 #w¨nög 
MA
: 
Discou¡
 
‰om
 
TPCH
 
dbgí
 
is
 
¸óãd
 
bëwìn
 0 
™d
 100 
ö°ód
 between 0ánd 1.

228 
	}
}

230 
q9_löeôem_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

231  
√w
 
	`q9_löeôem_tsˇn_fûãr_t
(*
this
);

232 
	}
}

234 
c_°r
 
	$to_°rög
() const {

235  
	`c_°r
("q9_lineitem_tscan_filter_t()");

236 
	}
}

239 ˛as†
	cq9_∑π_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


241 
¥iv©e
:

242 
Sh‹eTPCHEnv
* 
_çchdb
;

243 
èbÀ_row_t
* 
	m_¥∑π
;

244 
ªp_row_t
 
	m_º
;

247 
çch_∑π_tu∂e
 
	m_∑π
;

249 
	m_cﬁ‹
[
STRSIZE
(10)];

251 
q9_öput_t
* 
	mq9_öput
;

253 
	mpublic
:

255 
	$q9_∑π_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

256 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑π_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

258 
_¥∑π
 = 
_çchdb
->
	`∑π_m™
()->
	`gë_tu∂e
();

259 
_º
.
	`£t_ts
(
_çchdb
->
	`∑π_m™
()->
	`ts
(),

260 
_çchdb
->
	`∑π_desc
()->
	`maxsize
());

261 
_¥∑π
->
_ªp
 = &
_º
;

263 
q9_öput
 = &
ö
;

264 
	`≤ame_to_°r
(
q9_öput
->
p_«me
, 
_cﬁ‹
);

266 
	`TRACE
(
TRACE_ALWAYS
, "R™domÖªdiˇãs:\nPART.P_NAMEÜikê'%%%s%%'\n", 
_cﬁ‹
);

269 
vútuÆ
 ~
	$q9_∑π_tsˇn_fûãr_t
()

272 
_çchdb
->
	`∑π_m™
()->
	`give_tu∂e
(
_¥∑π
);

273 
	}
}

277 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

280 i‡(!
_çchdb
->
	`∑π_m™
()->
	`lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

281 
	`as£π
(
Ál£
);

284 
_¥∑π
->
	`gë_vÆue
(1, 
_∑π
.
P_NAME
, (_part.P_NAME));

286  
	`°r°r
(
_∑π
.
P_NAME
, 
_cﬁ‹
);

287 
	}
}

290 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

292 
q9_¥oje˘ed_∑π_tu∂e
 *
de°
;

293 
de°
 = 
Æig√d_ˇ°
<
q9_¥oje˘ed_∑π_tu∂e
>(
d
.
d©a
);

295 
_¥∑π
->
	`gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

300 
de°
->
P_PARTKEY
 = 
_∑π
.P_PARTKEY;

301 
	}
}

303 
q9_∑π_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

304  
√w
 
	`q9_∑π_tsˇn_fûãr_t
(*
this
);

305 
	}
}

307 
c_°r
 
	$to_°rög
() const {

308  
	`c_°r
("q9_∑π_tsˇn_fûãr_t(%s)", 
_cﬁ‹
);

309 
	}
}

312 ˛as†
	cq9_suµlõr_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


314 
¥iv©e
:

315 
Sh‹eTPCHEnv
* 
_çchdb
;

316 
èbÀ_row_t
* 
	m_¥suµlõr
;

317 
ªp_row_t
 
	m_º
;

320 
çch_suµlõr_tu∂e
 
	m_suµlõr
;

322 
	mpublic
:

323 
	$q9_suµlõr_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

324 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`suµlõr_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

326 
_¥suµlõr
 = 
_çchdb
->
	`suµlõr_m™
()->
	`gë_tu∂e
();

327 
_º
.
	`£t_ts
(
_çchdb
->
	`suµlõr_m™
()->
	`ts
(),

328 
_çchdb
->
	`suµlõr_desc
()->
	`maxsize
());

329 
_¥suµlõr
->
_ªp
 = &
_º
;

332 
vútuÆ
 ~
	$q9_suµlõr_tsˇn_fûãr_t
()

334 
_çchdb
->
	`suµlõr_m™
()->
	`give_tu∂e
(
_¥suµlõr
);

335 
	}
}

337 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

340 i‡(!
_çchdb
->
	`suµlõr_m™
()->
	`lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

341 
	`as£π
(
Ál£
);

344  
åue
;

345 
	}
}

348 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

350 
q9_¥oje˘ed_suµlõr_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_suµlõr_tu∂e>(
d
.
d©a
);

353 
_¥suµlõr
->
	`gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

354 
_¥suµlõr
->
	`gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

359 
de°
->
S_SUPPKEY
 = 
_suµlõr
.S_SUPPKEY;

360 
de°
->
S_NATIONKEY
 = 
_suµlõr
.S_NATIONKEY;

362 
	}
}

364 
q9_suµlõr_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

365  
√w
 
	`q9_suµlõr_tsˇn_fûãr_t
(*
this
);

366 
	}
}

368 
c_°r
 
	$to_°rög
() const {

369  
	`c_°r
("q9_supplier_tscan_filter_t");

370 
	}
}

373 ˛as†
	cq9_«ti⁄_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


375 
¥iv©e
:

376 
Sh‹eTPCHEnv
* 
_çchdb
;

377 
èbÀ_row_t
* 
	m_¥«ti⁄
;

378 
ªp_row_t
 
	m_º
;

381 
çch_«ti⁄_tu∂e
 
	m_«ti⁄
;

383 
	mpublic
:

384 
	$q9_«ti⁄_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

385 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`«ti⁄_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

387 
_¥«ti⁄
 = 
_çchdb
->
	`«ti⁄_m™
()->
	`gë_tu∂e
();

388 
_º
.
	`£t_ts
(
_çchdb
->
	`«ti⁄_m™
()->
	`ts
(),

389 
_çchdb
->
	`«ti⁄_desc
()->
	`maxsize
());

390 
_¥«ti⁄
->
_ªp
 = &
_º
;

393 
vútuÆ
 ~
	$q9_«ti⁄_tsˇn_fûãr_t
()

395 
_çchdb
->
	`«ti⁄_m™
()->
	`give_tu∂e
(
_¥«ti⁄
);

396 
	}
}

398 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

401 i‡(!
_çchdb
->
	`«ti⁄_m™
()->
	`lﬂd
(
_¥«ti⁄
, 
öput
.
d©a
)) {

402 
	`as£π
(
Ál£
);

405  
åue
;

406 
	}
}

409 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

411 
q9_¥oje˘ed_«ti⁄_tu∂e
 *
de°
;

412 
de°
 = 
Æig√d_ˇ°
<
q9_¥oje˘ed_«ti⁄_tu∂e
>(
d
.
d©a
);

414 
_¥«ti⁄
->
	`gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

415 
_¥«ti⁄
->
	`gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

420 
de°
->
N_NATIONKEY
 = 
_«ti⁄
.N_NATIONKEY;

421 
	`mem˝y
(
de°
->
N_NAME
, 
_«ti⁄
.N_NAME, (dest->N_NAME));

422 
	}
}

424 
q9_«ti⁄_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

425  
√w
 
	`q9_«ti⁄_tsˇn_fûãr_t
(*
this
);

426 
	}
}

428 
c_°r
 
	$to_°rög
() const {

429  
	`c_°r
("q9_nation_tscan_filter_t()");

430 
	}
}

433 ˛as†
	cq9_‹dîs_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


435 
¥iv©e
:

436 
Sh‹eTPCHEnv
* 
_çchdb
;

437 
èbÀ_row_t
* 
	m_¥‹dîs
;

438 
ªp_row_t
 
	m_º
;

440 
çch_‹dîs_tu∂e
 
	m_‹dîs
;

441 
time_t
 
	m_‹dîd©e
;

443 
	mpublic
:

444 
	$q9_‹dîs_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

445 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`‹dîs_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

447 
_¥‹dîs
 = 
_çchdb
->
	`‹dîs_m™
()->
	`gë_tu∂e
();

448 
_º
.
	`£t_ts
(
_çchdb
->
	`‹dîs_m™
()->
	`ts
(),

449 
_çchdb
->
	`‹dîs_desc
()->
	`maxsize
());

450 
_¥‹dîs
->
_ªp
 = &
_º
;

453 
vútuÆ
 ~
	$q9_‹dîs_tsˇn_fûãr_t
()

456 
_çchdb
->
	`‹dîs_m™
()->
	`give_tu∂e
(
_¥‹dîs
);

457 
	}
}

459 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

461 i‡(!
_çchdb
->
	`‹dîs_m™
()->
	`lﬂd
(
_¥‹dîs
, 
öput
.
d©a
)) {

462 
	`as£π
(
Ál£
);

465  
åue
;

466 
	}
}

468 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

470 
q9_¥oje˘ed_‹dîs_tu∂e
 *
de°
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_‹dîs_tu∂e>(
d
.
d©a
);

472 
_¥‹dîs
->
	`gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

473 
_¥‹dîs
->
	`gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
, (_orders.O_ORDERDATE));

474 
_‹dîd©e
 = 
	`°r_to_timë
(
_‹dîs
.
O_ORDERDATE
);

475 
tm
 *
tm_‹dîd©e
 = 
	`gmtime
(&
_‹dîd©e
);

479 
de°
->
O_ORDERKEY
 = 
_‹dîs
.O_ORDERKEY;

480 
de°
->
O_YEAR
 = 
tm_‹dîd©e
->
tm_yór
 + 1900;

481 
	}
}

483 
q9_‹dîs_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

484  
√w
 
	`q9_‹dîs_tsˇn_fûãr_t
(*
this
);

485 
	}
}

487 
c_°r
 
	$to_°rög
() const {

488  
	`c_°r
("q9_orders_tscan_filter_t()");

489 
	}
}

492 ˛as†
	cq9_∑πsuµ_tsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


494 
¥iv©e
:

495 
Sh‹eTPCHEnv
* 
_çchdb
;

496 
èbÀ_row_t
* 
	m_¥∑πsuµ
;

497 
ªp_row_t
 
	m_º
;

500 
çch_∑πsuµ_tu∂e
 
	m_∑πsuµ
;

502 
	mpublic
:

503 
	$q9_∑πsuµ_tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q9_öput_t
 &
ö
)

504 : 
	`tu∂e_fûãr_t
(
çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
()), 
	$_çchdb
(
çchdb
)

506 
_¥∑πsuµ
 = 
_çchdb
->
	`∑πsuµ_m™
()->
	`gë_tu∂e
();

507 
_º
.
	`£t_ts
(
_çchdb
->
	`∑πsuµ_m™
()->
	`ts
(),

508 
_çchdb
->
	`∑πsuµ_desc
()->
	`maxsize
());

509 
_¥∑πsuµ
->
_ªp
 = &
_º
;

512 
vútuÆ
 ~
	$q9_∑πsuµ_tsˇn_fûãr_t
()

514 
_çchdb
->
	`∑πsuµ_m™
()->
	`give_tu∂e
(
_¥∑πsuµ
);

515 
	}
}

517 
boﬁ
 
	$£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

520 i‡(!
_çchdb
->
	`∑πsuµ_m™
()->
	`lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

521 
	`as£π
(
Ál£
);

524  
åue
;

525 
	}
}

528 
	$¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

530 
q9_¥oje˘ed_∑πsuµ_tu∂e
 *
de°
;

531 
de°
 = 
Æig√d_ˇ°
<
q9_¥oje˘ed_∑πsuµ_tu∂e
>(
d
.
d©a
);

533 
_¥∑πsuµ
->
	`gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

534 
_¥∑πsuµ
->
	`gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

535 
_¥∑πsuµ
->
	`gë_vÆue
(3, 
_∑πsuµ
.
PS_SUPPLYCOST
);

542 
de°
->
PS_SUPPKEY
 = 
_∑πsuµ
.PS_SUPPKEY;

543 
de°
->
PS_PARTKEY
 = 
_∑πsuµ
.PS_PARTKEY;

544 
de°
->
PS_SUPPLYCOST
 = 
_∑πsuµ
.PS_SUPPLYCOST / 100.0;

546 
	}
}

548 
q9_∑πsuµ_tsˇn_fûãr_t
* 
	$˛⁄e
() const {

549  
√w
 
	`q9_∑πsuµ_tsˇn_fûãr_t
(*
this
);

550 
	}
}

552 
c_°r
 
	$to_°rög
() const {

553  
	`c_°r
("q9_partsupp_tscan_filter_t()");

554 
	}
}

558 
	gq9_l_joö_p_t
 : 
public
 
tu∂e_joö_t
 {

560 
q9_l_joö_p_t
()

561 : 
tu∂e_joö_t
((
q9_¥oje˘ed_löeôem_tu∂e
),

562 
off£tof
(
q9_¥oje˘ed_löeôem_tu∂e
, 
L_PARTKEY
),

563 (
q9_¥oje˘ed_∑π_tu∂e
),

564 
off£tof
(
q9_¥oje˘ed_∑π_tu∂e
, 
P_PARTKEY
),

566 (
q9_l_joö_p_tu∂e
))

570 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

571 
q9_l_joö_p_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q9_l_joö_p_tu∂e>(
d
.
d©a
);

572 
q9_¥oje˘ed_löeôem_tu∂e
 *
	glöe
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_löeôem_tu∂e>(
l
.
d©a
);

573 
q9_¥oje˘ed_∑π_tu∂e
 *
	g∑π
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_∑π_tu∂e>(
r
.
d©a
);

575 
	gde°
->
	gL_ORDERKEY
 = 
löe
->
L_ORDERKEY
;

576 
	gde°
->
	gL_PARTKEY
 = 
löe
->
L_PARTKEY
;

577 
	gde°
->
	gL_QUANTITY
 = 
löe
->
L_QUANTITY
;

578 
	gde°
->
	gL_SUPPKEY
 = 
löe
->
L_SUPPKEY
;

579 
	gde°
->
	gVOLUME
 = 
löe
->
VOLUME
;

585 
vútuÆ
 
q9_l_joö_p_t
* 
˛⁄e
() const {

586  
√w
 
q9_l_joö_p_t
(*
this
);

589 
vútuÆ
 
c_°r
 
to_°rög
() const {

590  
c_°r
("join LINEITEM, PART; select L_ORDERKEY, L_PARTKEY, L_QUANTITY, L_SUPPKEY, VOLUME");

594 
	gq9_l_p_joö_s_t
 : 
public
 
tu∂e_joö_t
 {

596 
q9_l_p_joö_s_t
()

597 : 
tu∂e_joö_t
((
q9_l_joö_p_tu∂e
),

598 
off£tof
(
q9_l_joö_p_tu∂e
, 
L_SUPPKEY
),

599 (
q9_¥oje˘ed_suµlõr_tu∂e
),

600 
off£tof
(
q9_¥oje˘ed_suµlõr_tu∂e
, 
S_SUPPKEY
),

602 (
q9_l_p_joö_s_tu∂e
))

606 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

607 
q9_l_p_joö_s_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q9_l_p_joö_s_tu∂e>(
d
.
d©a
);

608 
q9_l_joö_p_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q9_l_joö_p_tu∂e>(
l
.
d©a
);

609 
q9_¥oje˘ed_suµlõr_tu∂e
 *
	gsuµ
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_suµlõr_tu∂e>(
r
.
d©a
);

611 
	gde°
->
	gL_ORDERKEY
 = 
À·
->
L_ORDERKEY
;

612 
	gde°
->
	gL_PARTKEY
 = 
À·
->
L_PARTKEY
;

613 
	gde°
->
	gL_QUANTITY
 = 
À·
->
L_QUANTITY
;

614 
	gde°
->
	gL_SUPPKEY
 = 
À·
->
L_SUPPKEY
;

615 
	gde°
->
	gS_NATIONKEY
 = 
suµ
->
S_NATIONKEY
;

616 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

622 
vútuÆ
 
q9_l_p_joö_s_t
* 
˛⁄e
() const {

623  
√w
 
q9_l_p_joö_s_t
(*
this
);

626 
vútuÆ
 
c_°r
 
to_°rög
() const {

627  
c_°r
("join LINEITEM_PART, SUPPLIER; select L_ORDERKEY, L_PARTKEY, L_QUANTITY, L_SUPPKEY, S_NATIONKEY, VOLUME");

631 
	gq9_l_p_s_joö_n_t
 : 
public
 
tu∂e_joö_t
 {

633 
q9_l_p_s_joö_n_t
()

634 : 
tu∂e_joö_t
((
q9_l_p_joö_s_tu∂e
),

635 
off£tof
(
q9_l_p_joö_s_tu∂e
, 
S_NATIONKEY
),

636 (
q9_¥oje˘ed_«ti⁄_tu∂e
),

637 
off£tof
(
q9_¥oje˘ed_«ti⁄_tu∂e
, 
N_NATIONKEY
),

639 (
q9_l_p_s_joö_n_tu∂e
))

643 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

644 
q9_l_p_s_joö_n_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q9_l_p_s_joö_n_tu∂e>(
d
.
d©a
);

645 
q9_l_p_joö_s_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q9_l_p_joö_s_tu∂e>(
l
.
d©a
);

646 
q9_¥oje˘ed_«ti⁄_tu∂e
 *
	g«ti⁄
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_«ti⁄_tu∂e>(
r
.
d©a
);

648 
	gde°
->
	gL_ORDERKEY
 = 
À·
->
L_ORDERKEY
;

649 
	gde°
->
	gL_PARTKEY
 = 
À·
->
L_PARTKEY
;

650 
	gde°
->
	gL_QUANTITY
 = 
À·
->
L_QUANTITY
;

651 
	gde°
->
	gL_SUPPKEY
 = 
À·
->
L_SUPPKEY
;

652 
mem˝y
(
de°
->
N_NAME
, 
«ti⁄
->N_NAME, (dest->N_NAME));

653 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

659 
vútuÆ
 
q9_l_p_s_joö_n_t
* 
˛⁄e
() const {

660  
√w
 
q9_l_p_s_joö_n_t
(*
this
);

663 
vútuÆ
 
c_°r
 
to_°rög
() const {

664  
c_°r
("join LINEITEM_PART_SUPPLIER, NATION; select L_ORDERKEY, L_PARTKEY, L_QUANTITY, L_SUPPKEY, N_NAME, VOLUME");

668 
	gq9_l_p_s_n_joö_o_t
 : 
public
 
tu∂e_joö_t
 {

670 
q9_l_p_s_n_joö_o_t
()

671 : 
tu∂e_joö_t
((
q9_l_p_s_joö_n_tu∂e
),

672 
off£tof
(
q9_l_p_s_joö_n_tu∂e
, 
L_ORDERKEY
),

673 (
q9_¥oje˘ed_‹dîs_tu∂e
),

674 
off£tof
(
q9_¥oje˘ed_‹dîs_tu∂e
, 
O_ORDERKEY
),

676 (
q9_l_p_s_n_joö_o_tu∂e
))

680 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

681 
q9_l_p_s_n_joö_o_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q9_l_p_s_n_joö_o_tu∂e>(
d
.
d©a
);

682 
q9_l_p_s_joö_n_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q9_l_p_s_joö_n_tu∂e>(
l
.
d©a
);

683 
q9_¥oje˘ed_‹dîs_tu∂e
 *
	g‹dî
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_‹dîs_tu∂e>(
r
.
d©a
);

685 
	gde°
->
	gL_PARTKEY
 = 
À·
->
L_PARTKEY
;

686 
	gde°
->
	gL_QUANTITY
 = 
À·
->
L_QUANTITY
;

687 
	gde°
->
	gL_SUPPKEY
 = 
À·
->
L_SUPPKEY
;

688 
mem˝y
(
de°
->
N_NAME
, 
À·
->N_NAME, (dest->N_NAME));

689 
	gde°
->
	gO_YEAR
 = 
‹dî
->
O_YEAR
;

690 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

696 
vútuÆ
 
q9_l_p_s_n_joö_o_t
* 
˛⁄e
() const {

697  
√w
 
q9_l_p_s_n_joö_o_t
(*
this
);

700 
vútuÆ
 
c_°r
 
to_°rög
() const {

701  
c_°r
("join LINEITEM_PART_SUPPLIER_NATION, ORDERS; select L_PARTKEY, L_QUANTITY, L_SUPPKEY, N_NAME, O_YEAR, VOLUME");

705 
	gq9_föÆ_joö_t
 : 
public
 
tu∂e_joö_t
 {

707 
q9_föÆ_joö_t
()

708 : 
tu∂e_joö_t
((
q9_l_p_s_n_joö_o_tu∂e
),

709 
off£tof
(
q9_l_p_s_n_joö_o_tu∂e
, 
L_PARTKEY
),

710 (
q9_¥oje˘ed_∑πsuµ_tu∂e
),

711 
off£tof
(
q9_¥oje˘ed_∑πsuµ_tu∂e
, 
PS_PARTKEY
),

713 (
q9_Æl_joös_tu∂e
))

717 
vútuÆ
 
joö
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
l
, c⁄°Åu∂e_à&
r
) {

718 
q9_Æl_joös_tu∂e
 *
	gde°
 = 
Æig√d_ˇ°
<q9_Æl_joös_tu∂e>(
d
.
d©a
);

719 
q9_l_p_s_n_joö_o_tu∂e
 *
	gÀ·
 = 
Æig√d_ˇ°
<q9_l_p_s_n_joö_o_tu∂e>(
l
.
d©a
);

720 
q9_¥oje˘ed_∑πsuµ_tu∂e
 *
	g∑πsuµ
 = 
Æig√d_ˇ°
<q9_¥oje˘ed_∑πsuµ_tu∂e>(
r
.
d©a
);

722 
	gde°
->
	gL_QUANTITY
 = 
À·
->
L_QUANTITY
;

723 
mem˝y
(
de°
->
N_NAME
, 
À·
->N_NAME, (dest->N_NAME));

724 
	gde°
->
	gO_YEAR
 = 
À·
->
O_YEAR
;

725 
	gde°
->
	gPS_SUPPLYCOST
 = 
∑πsuµ
->
PS_SUPPLYCOST
;

726 
	gde°
->
	gVOLUME
 = 
À·
->
VOLUME
;

732 
vútuÆ
 
q9_föÆ_joö_t
* 
˛⁄e
() const {

733  
√w
 
q9_föÆ_joö_t
(*
this
);

736 
vútuÆ
 
c_°r
 
to_°rög
() const {

737  
c_°r
("join LINEIETEM_PART_SUPPLIER_NATION_ORDERS, PARTSUPP; select L_QUANTITY, N_NAME, O_YEAR, PS_SUPPLYCOST, VOLUME");

741 
	gq9_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

743 
q9_key_exåa˘‹_t
()

744 : 
key_exåa˘‹_t
((
q9_key
))

748 
vútuÆ
 
exåa˘_höt
(c⁄° * 
key
) const {

749 *
k
;

750 
	gk
 = 
Æig√d_ˇ°
<>(
key
);

752 
	gªsu…
 = (*
k
 << 24) + (*(k + ()) << 16) + (*(k + 2*()) << 8) + *(k + 3*());

754  
	gªsu…
;

757 
vútuÆ
 
q9_key_exåa˘‹_t
* 
˛⁄e
() const {

758  
√w
 
q9_key_exåa˘‹_t
(*
this
);

762 
	gq9_key_com∑ª_t
 : 
public
 
key_com∑ª_t
 {

764 
vútuÆ
 
›î©‹
()(c⁄° * 
key1
, c⁄° * 
	gkey2
) const {

765 
q9_key
 *
	gk1
 = 
Æig√d_ˇ°
<q9_key>(
key1
);

766 
q9_key
 *
	gk2
 = 
Æig√d_ˇ°
<q9_key>(
key2
);

768 
	gdiff_«ti⁄
 = 
°rcmp
(
k1
->
NATION
, 
k2
->NATION);

769 
	gdiff_yór
 = 
k2
->
O_YEAR
 - 
k1
->O_YEAR;

771  (
	gdiff_«ti⁄
 !0 ? 
diff_«ti⁄
 : 
diff_yór
);

774 
vútuÆ
 
q9_key_com∑ª_t
* 
˛⁄e
() const {

775  
√w
 
q9_key_com∑ª_t
(*
this
);

779 
	gq9_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t
 {

781 
deÁu…_key_exåa˘‹_t
 
_exåa˘‹
;

783 
q9_aggªg©e_t
()

784 : 
tu∂e_aggªg©e_t
((
q9_aggªg©e_tu∂e
)), 
_exåa˘‹
((
q9_key
))

788 
vútuÆ
 
key_exåa˘‹_t
* 
key_exåa˘‹
() {

789  &
	g_exåa˘‹
;

792 
vútuÆ
 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
t
) {

793 
q9_aggªg©e_tu∂e
 *
	gagg
 = 
Æig√d_ˇ°
<q9_aggªg©e_tu∂e>(
agg_d©a
);

794 
q9_Æl_joös_tu∂e
 *
	gö
 = 
Æig√d_ˇ°
<q9_Æl_joös_tu∂e>(
t
.
d©a
);

796 
mem˝y
(
agg
->
NATION
, 
ö
->
N_NAME
, (agg->NATION));

797 
	gagg
->
	gO_YEAR
 = 
ö
->
O_YEAR
;

798 
	gagg
->
	gSUM_PROFIT
 +(
ö
->
VOLUME
 - in->
PS_SUPPLYCOST
 * in->
L_QUANTITY
);

801 
vútuÆ
 
föish
(
tu∂e_t
 &
de°
, c⁄° * 
agg_d©a
) {

802 
mem˝y
(
de°
.
d©a
, 
agg_d©a
, de°.
size
);

804 
vútuÆ
 
q9_aggªg©e_t
* 
˛⁄e
() const {

805  
√w
 
q9_aggªg©e_t
(*
this
);

807 
vútuÆ
 
c_°r
 
to_°rög
() const {

813 ˛as†
	cçch_q9_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t
 {

815 
public
:

817 
vútuÆ
 
	$begö
() {

818 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q9 %25s %6s %25s\n",

822 
vútuÆ
 
	$¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

823 
q9_aggªg©e_tu∂e
 *
agg
 = 
Æig√d_ˇ°
<q9_aggªg©e_tu∂e>(
ouçut
.
d©a
);

825 
	`TRACE
(
TRACE_QUERY_RESULTS
, "*** Q9 %25†%6d %25.4f\n", 
agg
->
NATION
,ágg->
O_YEAR
,ágg->
SUM_PROFIT
.
	`to_doubÀ
());

826 
	}
}

836 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q9
(c⁄° 
x˘_id
,

837 
q9_öput_t
& 
ö
)

839 
	`TRACE
–
TRACE_ALWAYS
, "********** q9 *********\n");

841 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

842 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

846 
tu∂e_fifo
* 
q9_löeôem_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_löeôem_tu∂e
));

847 
∑ckë_t
* 
q9_löeôem_tsˇn_∑ckë
 =

848 
√w
 
	`tsˇn_∑ckë_t
("lineitem TSCAN",

849 
q9_löeôem_buf„r
,

850 
√w
 
	`q9_löeôem_tsˇn_fûãr_t
(
this
, 
ö
),

851 
this
->
	`db
(),

852 
_∂öeôem_desc
.
	`gë
(),

853 
px˘
);

856 
tu∂e_fifo
* 
q9_∑π_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_∑π_tu∂e
));

857 
∑ckë_t
* 
q9_∑π_tsˇn_∑ckë
 =

858 
√w
 
	`tsˇn_∑ckë_t
("part TSCAN",

859 
q9_∑π_buf„r
,

860 
√w
 
	`q9_∑π_tsˇn_fûãr_t
(
this
, 
ö
),

861 
this
->
	`db
(),

862 
_µ¨t_desc
.
	`gë
(),

863 
px˘
);

866 
tu∂e_fifo
* 
q9_suµlõr_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_suµlõr_tu∂e
));

867 
∑ckë_t
* 
q9_suµlõr_tsˇn_∑ckë
 =

868 
√w
 
	`tsˇn_∑ckë_t
("supplier TSCAN",

869 
q9_suµlõr_buf„r
,

870 
√w
 
	`q9_suµlõr_tsˇn_fûãr_t
(
this
, 
ö
),

871 
this
->
	`db
(),

872 
_psuµlõr_desc
.
	`gë
(),

873 
px˘
);

876 
tu∂e_fifo
* 
q9_«ti⁄_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_«ti⁄_tu∂e
));

877 
∑ckë_t
* 
q9_«ti⁄_tsˇn_∑ckë
 =

878 
√w
 
	`tsˇn_∑ckë_t
("nation TSCAN",

879 
q9_«ti⁄_buf„r
,

880 
√w
 
	`q9_«ti⁄_tsˇn_fûãr_t
(
this
, 
ö
),

881 
this
->
	`db
(),

882 
_≤©i⁄_desc
.
	`gë
(),

883 
px˘
);

886 
tu∂e_fifo
* 
q9_‹dîs_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_‹dîs_tu∂e
));

887 
∑ckë_t
* 
q9_‹dîs_tsˇn_∑ckë
 =

888 
√w
 
	`tsˇn_∑ckë_t
("orders TSCAN",

889 
q9_‹dîs_buf„r
,

890 
√w
 
	`q9_‹dîs_tsˇn_fûãr_t
(
this
, 
ö
),

891 
this
->
	`db
(),

892 
_p‹dîs_desc
.
	`gë
(),

893 
px˘
);

896 
tu∂e_fifo
* 
q9_∑πsuµ_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_¥oje˘ed_∑πsuµ_tu∂e
));

897 
∑ckë_t
* 
q9_∑πsuµ_tsˇn_∑ckë
 =

898 
√w
 
	`tsˇn_∑ckë_t
("partsupp TSCAN",

899 
q9_∑πsuµ_buf„r
,

900 
√w
 
	`q9_∑πsuµ_tsˇn_fûãr_t
(
this
, 
ö
),

901 
this
->
	`db
(),

902 
_µ¨tsuµ_desc
.
	`gë
(),

903 
px˘
);

907 
tu∂e_fifo
* 
q9_l_joö_p_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_l_joö_p_tu∂e
));

908 
∑ckë_t
* 
q9_l_joö_p_∑ckë
 =

909 
√w
 
	`hash_joö_∑ckë_t
("lineitem -Öart HJOIN",

910 
q9_l_joö_p_buf„r
,

911 
√w
 
	`åivül_fûãr_t
((
q9_l_joö_p_tu∂e
)),

912 
q9_löeôem_tsˇn_∑ckë
,

913 
q9_∑π_tsˇn_∑ckë
,

914 
√w
 
	`q9_l_joö_p_t
());

917 
tu∂e_fifo
* 
q9_l_p_joö_s_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_l_p_joö_s_tu∂e
));

918 
∑ckë_t
* 
q9_l_p_joö_s_∑ckë
 =

919 
√w
 
	`hash_joö_∑ckë_t
("lineitem_part - supplier HJOIN",

920 
q9_l_p_joö_s_buf„r
,

921 
√w
 
	`åivül_fûãr_t
((
q9_l_p_joö_s_tu∂e
)),

922 
q9_l_joö_p_∑ckë
,

923 
q9_suµlõr_tsˇn_∑ckë
,

924 
√w
 
	`q9_l_p_joö_s_t
());

927 
tu∂e_fifo
* 
q9_l_p_s_joö_n_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_l_p_s_joö_n_tu∂e
));

928 
∑ckë_t
* 
q9_l_p_s_joö_n_∑ckë
 =

929 
√w
 
	`hash_joö_∑ckë_t
("lineitem_part_supplier -Çation HJOIN",

930 
q9_l_p_s_joö_n_buf„r
,

931 
√w
 
	`åivül_fûãr_t
((
q9_l_p_s_joö_n_tu∂e
)),

932 
q9_l_p_joö_s_∑ckë
,

933 
q9_«ti⁄_tsˇn_∑ckë
,

934 
√w
 
	`q9_l_p_s_joö_n_t
());

937 
tu∂e_fifo
* 
q9_l_p_s_n_joö_o_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_l_p_s_n_joö_o_tu∂e
));

938 
∑ckë_t
* 
q9_l_p_s_n_joö_o_∑ckë
 =

939 
√w
 
	`hash_joö_∑ckë_t
("lineitem_part_supplier_nation - orders HJOIN",

940 
q9_l_p_s_n_joö_o_buf„r
,

941 
√w
 
	`åivül_fûãr_t
((
q9_l_p_s_n_joö_o_tu∂e
)),

942 
q9_l_p_s_joö_n_∑ckë
,

943 
q9_‹dîs_tsˇn_∑ckë
,

944 
√w
 
	`q9_l_p_s_n_joö_o_t
());

947 
tu∂e_fifo
* 
q9_Æl_joös_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_Æl_joös_tu∂e
));

948 
∑ckë_t
* 
q9_Æl_joös_∑ckë
 =

949 
√w
 
	`hash_joö_∑ckë_t
("lineitem_part_supplier_nation_orders -Öartsupp HJOIN",

950 
q9_Æl_joös_buf„r
,

951 
√w
 
	`åivül_fûãr_t
((
q9_Æl_joös_tu∂e
)),

952 
q9_l_p_s_n_joö_o_∑ckë
,

953 
q9_∑πsuµ_tsˇn_∑ckë
,

954 
√w
 
	`q9_föÆ_joö_t
());

957 
tu∂e_fifo
* 
q9_agg_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_aggªg©e_tu∂e
));

958 
∑ckë_t
* 
q9_agg_∑ckë
 =

959 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("AGGREGATE",

960 
q9_agg_buf„r
,

961 
√w
 
	`åivül_fûãr_t
((
q9_aggªg©e_tu∂e
)),

962 
q9_Æl_joös_∑ckë
,

963 
√w
 
	`q9_aggªg©e_t
(),

964 
√w
 
	`deÁu…_key_exåa˘‹_t
((
q9_key
)),

965 
√w
 
	`q9_key_com∑ª_t
());

968 
tu∂e_fifo
* 
q9_s‹t_buf„r
 = 
√w
 
	`tu∂e_fifo
((
q9_aggªg©e_tu∂e
));

969 
∑ckë_t
* 
q9_s‹t_∑ckë
 =

970 
√w
 
	`s‹t_∑ckë_t
("SORT",

971 
q9_s‹t_buf„r
,

972 
√w
 
	`åivül_fûãr_t
((
q9_aggªg©e_tu∂e
)),

973 
√w
 
	`q9_key_exåa˘‹_t
(),

974 
√w
 
	`q9_key_com∑ª_t
(),

975 
q9_agg_∑ckë
);

978 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

979 
q9_löeôem_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

980 
q9_∑π_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

981 
q9_suµlõr_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

982 
q9_«ti⁄_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

983 
q9_‹dîs_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

984 
q9_∑πsuµ_tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

985 
q9_l_joö_p_∑ckë
->
	`assign_quîy_°©e
(
qs
);

986 
q9_l_p_joö_s_∑ckë
->
	`assign_quîy_°©e
(
qs
);

987 
q9_l_p_s_joö_n_∑ckë
->
	`assign_quîy_°©e
(
qs
);

988 
q9_l_p_s_n_joö_o_∑ckë
->
	`assign_quîy_°©e
(
qs
);

989 
q9_Æl_joös_∑ckë
->
	`assign_quîy_°©e
(
qs
);

990 
q9_agg_∑ckë
->
	`assign_quîy_°©e
(
qs
);

991 
q9_s‹t_∑ckë
->
	`assign_quîy_°©e
(
qs
);

995 
çch_q9_¥o˚ss_tu∂e_t
 
±
;

997 
	`¥o˚ss_quîy
(
q9_s‹t_∑ckë
, 
±
);

999 
dp
->
	`quîy_°©e_de°roy
(
qs
);

1002  (
RCOK
);

1003 
	}
}

1006 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qcustomer.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_qcu°omî
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥cu°
;

67 
ªp_row_t
 
	g_º
;

69 
çch_cu°omî_tu∂e
 
	g_cu°omî
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
qcu°omî_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
cu°omî_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥cu°
 = 
_çchdb
->
cu°omî_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
cu°omî_m™
()->
ts
(),

80 
_çchdb
->
cu°omî_desc
()->
maxsize
());

81 
	g_¥cu°
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
cu°omî_m™
()->
give_tu∂e
(
_¥cu°
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
cu°omî_m™
()->
lﬂd
(
_¥cu°
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_cu°omî_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_cu°omî_tu∂e
>(
d
.
d©a
);

110 
	g_¥cu°
->
gë_vÆue
(0, 
_cu°omî
.
C_CUSTKEY
);

111 
	g_¥cu°
->
gë_vÆue
(1, 
_cu°omî
.
C_NAME
,25);

112 
	g_¥cu°
->
gë_vÆue
(2, 
_cu°omî
.
C_ADDRESS
,40);

113 
	g_¥cu°
->
gë_vÆue
(3, 
_cu°omî
.
C_NATIONKEY
);

114 
	g_¥cu°
->
gë_vÆue
(4, 
_cu°omî
.
C_PHONE
,15);

115 
	g_¥cu°
->
gë_vÆue
(5, 
_cu°omî
.
C_ACCTBAL
);

116 
	g_¥cu°
->
gë_vÆue
(6, 
_cu°omî
.
C_MKTSEGMENT
,10);

117 
	g_¥cu°
->
gë_vÆue
(7, 
_cu°omî
.
C_COMMENT
,117);

119 
mem˝y
(
de°
,&
_cu°omî
,(
çch_cu°omî_tu∂e
));

120 i‡(
	gde°
->
	gC_CUSTKEY
%10000==0)

121 
TRACE
(
TRACE_RECORD_FLOW
, "%d %s\n", 
de°
->
C_CUSTKEY
, de°->
C_NAME
);

125 
tsˇn_fûãr_t
* 
˛⁄e
() const {

126  
√w
 
tsˇn_fûãr_t
(*
this
);

129 
c_°r
 
to_°rög
() const {

130  
c_°r
("tscan_filter_t");

137 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


139 
public
:

141 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

142 
public
:

144 
cou¡_key_exåa˘‹_t
()

145 : 
key_exåa˘‹_t
(0, 0) {

149 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

150  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

154 
	g¥iv©e
:

155 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

157 
	gpublic
:

159 
cou¡_aggªg©e_t
()

160 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

164 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

168 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

169 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

172 
	gtu∂e
->
	gCOUNT
++;

176 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

177 
cou¡_tu∂e
 *
	gde°
;

178 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

179 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

181 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

184 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

185  
√w
 
cou¡_aggªg©e_t
(*
this
);

188 
c_°r
 
to_°rög
() const {

194 ˛as†
	cçch_cu°omî_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


196 
public
:

198 
begö
() {

199 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN CUSTOMER ANSWER ...\n");

200 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

203 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

204 
cou¡_tu∂e
 *
	gtu∂e
;

205 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

206 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

207 
tu∂e
->
COUNT
);

212 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

213 
çch_cu°omî_tu∂e
 *
de°
;

214 
de°
 = 
Æig√d_ˇ°
<
çch_cu°omî_tu∂e
> (
tup
->
d©a
);

215  
√w
 
	`c_°r
("%d|%s|%s|%d|%s|%lf|%s|%s|\n",

216 
de°
->
C_CUSTKEY
,

217 
de°
->
C_NAME
,

218 
de°
->
C_ADDRESS
,

219 
de°
->
C_NATIONKEY
,

220 
de°
->
C_PHONE
,

221 
de°
->
C_ACCTBAL
.
	`to_doubÀ
(),

222 
de°
->
C_MKTSEGMENT
,

223 
de°
->
C_COMMENT
);

224 
	}
}

235 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_qcu°omî
(c⁄° 
x˘_id
, 
qcu°omî_öput_t
& 
ö
)

237 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN CUSTOMER *********\n");

239 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

240 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

244 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

245 
√w
 
	`tu∂e_fifo
((
çch_cu°omî_tu∂e
));

246 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

247 
√w
 
	`tsˇn_∑ckë_t
("TSCAN CUSTOMER",

248 
tsˇn_out_buf„r
,

249 
√w
 
çch_qcu°omî
::
	`tsˇn_fûãr_t
(
this
,
ö
),

250 
this
->
	`db
(),

251 
_pcu°omî_desc
.
	`gë
(),

252 
px˘


256 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_cu°omî_tu∂e
));

257 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

258 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

259 
fdump_ouçut
,

260 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

261 
NULL
,

262 
	`c_°r
("%s/cu°omî.tbl", 
	`gëív
("HOME")),

263 
NULL
,

264 
tsˇn_∑ckë
,

265 
çch_qcu°omî
::
dump_tu∂e
);

269 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

270 
√w
 
	`tu∂e_fifo
((
çch_qcu°omî
::
cou¡_tu∂e
));

271 
∑ckë_t
* 
cou¡_∑ckë
 =

272 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

273 
cou¡_ouçut_buf„r
,

274 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

275 
fdump_∑ckë
,

276 
√w
 
çch_qcu°omî
::
	`cou¡_aggªg©e_t
(),

277 
√w
 
çch_qcu°omî
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

278 
√w
 
	`öt_key_com∑ª_t
());

280 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

281 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

282 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

283 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

286 
çch_qcu°omî
::
çch_cu°omî_¥o˚ss_tu∂e_t
 
±
;

287 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

288 
dp
->
	`quîy_°©e_de°roy
(
qs
);

290  (
RCOK
);

291 
	}
}

294 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qlineitem.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_qlöeôem
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥löe
;

67 
ªp_row_t
 
	g_º
;

69 
çch_löeôem_tu∂e
 
	g_löeôem
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
qlöeôem_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
löeôem_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥löe
 = 
_çchdb
->
löeôem_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
löeôem_m™
()->
ts
(),

80 
_çchdb
->
löeôem_desc
()->
maxsize
());

81 
	g_¥löe
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
löeôem_m™
()->
give_tu∂e
(
_¥löe
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
löeôem_m™
()->
lﬂd
(
_¥löe
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_löeôem_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_löeôem_tu∂e
>(
d
.
d©a
);

110 
	g_¥löe
->
gë_vÆue
(0, 
_löeôem
.
L_ORDERKEY
);

111 
	g_¥löe
->
gë_vÆue
(1, 
_löeôem
.
L_PARTKEY
);

112 
	g_¥löe
->
gë_vÆue
(2, 
_löeôem
.
L_SUPPKEY
);

113 
	g_¥löe
->
gë_vÆue
(3, 
_löeôem
.
L_LINENUMBER
);

114 
	g_¥löe
->
gë_vÆue
(4, 
_löeôem
.
L_QUANTITY
);

115 
	g_¥löe
->
gë_vÆue
(5, 
_löeôem
.
L_EXTENDEDPRICE
);

116 
	g_¥löe
->
gë_vÆue
(6, 
_löeôem
.
L_DISCOUNT
);

117 
	g_¥löe
->
gë_vÆue
(7, 
_löeôem
.
L_TAX
);

118 
	g_¥löe
->
gë_vÆue
(8, 
_löeôem
.
L_RETURNFLAG
);

119 
	g_¥löe
->
gë_vÆue
(9, 
_löeôem
.
L_LINESTATUS
);

120 
	g_¥löe
->
gë_vÆue
(10, 
_löeôem
.
L_SHIPDATE
,15);

121 
	g_¥löe
->
gë_vÆue
(11, 
_löeôem
.
L_COMMITDATE
,15);

122 
	g_¥löe
->
gë_vÆue
(12, 
_löeôem
.
L_RECEIPTDATE
,15);

123 
	g_¥löe
->
gë_vÆue
(13, 
_löeôem
.
L_SHIPINSTRUCT
,25);

124 
	g_¥löe
->
gë_vÆue
(14, 
_löeôem
.
L_SHIPMODE
,10);

125 
	g_¥löe
->
gë_vÆue
(15, 
_löeôem
.
L_COMMENT
,44);

127 
mem˝y
(
de°
,&
_löeôem
,(
çch_löeôem_tu∂e
));

128 i‡(
	gde°
->
	gL_ORDERKEY
%1000000==0)

129 
TRACE
(
TRACE_RECORD_FLOW
, "%d %d %d %d\n", 
de°
->
L_LINENUMBER
, de°->
L_ORDERKEY
, de°->
L_PARTKEY
, de°->
L_SUPPKEY
);

133 
tsˇn_fûãr_t
* 
˛⁄e
() const {

134  
√w
 
tsˇn_fûãr_t
(*
this
);

137 
c_°r
 
to_°rög
() const {

138  
c_°r
("tscan_filter_t");

145 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


147 
public
:

149 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

150 
public
:

152 
cou¡_key_exåa˘‹_t
()

153 : 
key_exåa˘‹_t
(0, 0) {

157 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

158  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

162 
	g¥iv©e
:

163 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

165 
	gpublic
:

167 
cou¡_aggªg©e_t
()

168 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

172 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

176 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

177 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

180 
	gtu∂e
->
	gCOUNT
++;

184 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

185 
cou¡_tu∂e
 *
	gde°
;

186 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

187 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

189 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

192 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

193  
√w
 
cou¡_aggªg©e_t
(*
this
);

196 
c_°r
 
to_°rög
() const {

202 ˛as†
	cçch_löeôem_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


204 
public
:

206 
begö
() {

207 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN LINEITEM ANSWER ...\n");

208 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

211 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

212 
cou¡_tu∂e
 *
	gtu∂e
;

213 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

214 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

215 
tu∂e
->
COUNT
);

219 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

220 
çch_löeôem_tu∂e
 *
de°
;

221 
de°
 = 
Æig√d_ˇ°
<
çch_löeôem_tu∂e
> (
tup
->
d©a
);

222  
√w
 
	`c_°r
("%d|%d|%d|%d|%lf|%lf|%lf|%lf|%c|%c|%s|%s|%s|%s|%s|%s|\n",

223 
de°
->
L_ORDERKEY
,

224 
de°
->
L_PARTKEY
,

225 
de°
->
L_SUPPKEY
,

226 
de°
->
L_LINENUMBER
,

227 
de°
->
L_QUANTITY
,

228 
de°
->
L_EXTENDEDPRICE
,

229 
de°
->
L_DISCOUNT
,

230 
de°
->
L_TAX
,

231 
de°
->
L_RETURNFLAG
,

232 
de°
->
L_LINESTATUS
,

233 
de°
->
L_SHIPDATE
,

234 
de°
->
L_COMMITDATE
,

235 
de°
->
L_RECEIPTDATE
,

236 
de°
->
L_SHIPINSTRUCT
,

237 
de°
->
L_SHIPMODE
,

238 
de°
->
L_COMMENT
);

239 
	}
}

249 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_qlöeôem
(c⁄° 
x˘_id
, 
qlöeôem_öput_t
& 
ö
)

251 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN LINEITEM *********\n");

253 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

254 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

258 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

259 
√w
 
	`tu∂e_fifo
((
çch_löeôem_tu∂e
));

260 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

261 
√w
 
	`tsˇn_∑ckë_t
("TSCAN LINEITEM",

262 
tsˇn_out_buf„r
,

263 
√w
 
çch_qlöeôem
::
	`tsˇn_fûãr_t
(
this
,
ö
),

264 
this
->
	`db
(),

265 
_∂öeôem_desc
.
	`gë
(),

266 
px˘


270 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_löeôem_tu∂e
));

271 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

272 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

273 
fdump_ouçut
,

274 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

275 
NULL
,

276 
	`c_°r
("%s/löeôem.tbl", 
	`gëív
("HOME")),

277 
NULL
,

278 
tsˇn_∑ckë
,

279 
çch_qlöeôem
::
dump_tu∂e
);

282 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

283 
√w
 
	`tu∂e_fifo
((
çch_qlöeôem
::
cou¡_tu∂e
));

284 
∑ckë_t
* 
cou¡_∑ckë
 =

285 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

286 
cou¡_ouçut_buf„r
,

287 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

288 
fdump_∑ckë
,

289 
√w
 
çch_qlöeôem
::
	`cou¡_aggªg©e_t
(),

290 
√w
 
çch_qlöeôem
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

291 
√w
 
	`öt_key_com∑ª_t
());

293 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

294 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

295 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

298 
çch_qlöeôem
::
çch_löeôem_¥o˚ss_tu∂e_t
 
±
;

299 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

300 
dp
->
	`quîy_°©e_de°roy
(
qs
);

302  (
RCOK
);

303 
	}
}

306 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qnation.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_q«ti⁄
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥«t
;

67 
ªp_row_t
 
	g_º
;

69 
çch_«ti⁄_tu∂e
 
	g_«ti⁄
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q«ti⁄_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
«ti⁄_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥«t
 = 
_çchdb
->
«ti⁄_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
«ti⁄_m™
()->
ts
(),

80 
_çchdb
->
«ti⁄_desc
()->
maxsize
());

81 
	g_¥«t
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
«ti⁄_m™
()->
give_tu∂e
(
_¥«t
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
«ti⁄_m™
()->
lﬂd
(
_¥«t
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_«ti⁄_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_«ti⁄_tu∂e
>(
d
.
d©a
);

110 
	g_¥«t
->
gë_vÆue
(0, 
_«ti⁄
.
N_NATIONKEY
);

111 
	g_¥«t
->
gë_vÆue
(1, 
_«ti⁄
.
N_NAME
, 25);

112 
	g_¥«t
->
gë_vÆue
(2, 
_«ti⁄
.
N_REGIONKEY
);

113 
	g_¥«t
->
gë_vÆue
(3, 
_«ti⁄
.
N_COMMENT
, 152);

115 
mem˝y
(
de°
,&
_«ti⁄
,(
çch_«ti⁄_tu∂e
));

116 
TRACE
(
TRACE_RECORD_FLOW
, "%d %s\n", 
de°
->
N_NATIONKEY
, de°->
N_NAME
);

119 
tsˇn_fûãr_t
* 
˛⁄e
() const {

120  
√w
 
tsˇn_fûãr_t
(*
this
);

123 
c_°r
 
to_°rög
() const {

124  
c_°r
("tscan_filter_t");

131 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


133 
public
:

135 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

136 
public
:

138 
cou¡_key_exåa˘‹_t
()

139 : 
key_exåa˘‹_t
(0, 0) {

143 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

144  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

148 
	g¥iv©e
:

149 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

151 
	gpublic
:

153 
cou¡_aggªg©e_t
()

154 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

158 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

162 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

163 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

166 
	gtu∂e
->
	gCOUNT
++;

170 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

171 
cou¡_tu∂e
 *
	gde°
;

172 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

173 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

175 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

178 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

179  
√w
 
cou¡_aggªg©e_t
(*
this
);

182 
c_°r
 
to_°rög
() const {

188 ˛as†
	cçch_«ti⁄_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


190 
public
:

192 
begö
() {

193 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN NATION ANSWER ...\n");

194 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

197 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

198 
cou¡_tu∂e
 *
	gtu∂e
;

199 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

200 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

201 
tu∂e
->
COUNT
);

206 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

207 
çch_«ti⁄_tu∂e
 *
de°
;

208 
de°
 = 
Æig√d_ˇ°
<
çch_«ti⁄_tu∂e
> (
tup
->
d©a
);

209  
√w
 
	`c_°r
("%d|%s|%d|%s|\n",

210 
de°
->
N_NATIONKEY
,

211 
de°
->
N_NAME
,

212 
de°
->
N_REGIONKEY
,

213 
de°
->
N_COMMENT
);

214 
	}
}

225 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q«ti⁄
(c⁄° 
x˘_id
, 
q«ti⁄_öput_t
& 
ö
)

227 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN NATION *********\n");

229 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

230 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

234 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

235 
√w
 
	`tu∂e_fifo
((
çch_«ti⁄_tu∂e
));

236 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

237 
√w
 
	`tsˇn_∑ckë_t
("TSCAN NATION",

238 
tsˇn_out_buf„r
,

239 
√w
 
çch_q«ti⁄
::
	`tsˇn_fûãr_t
(
this
,
ö
),

240 
this
->
	`db
(),

241 
_≤©i⁄_desc
.
	`gë
(),

242 
px˘


247 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_«ti⁄_tu∂e
));

248 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

249 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

250 
fdump_ouçut
,

251 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

252 
NULL
,

253 
	`c_°r
("%s/«ti⁄.tbl", 
	`gëív
("HOME")),

254 
NULL
,

255 
tsˇn_∑ckë
,

256 
çch_q«ti⁄
::
dump_tu∂e
);

260 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

261 
√w
 
	`tu∂e_fifo
((
çch_q«ti⁄
::
cou¡_tu∂e
));

262 
∑ckë_t
* 
cou¡_∑ckë
 =

263 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

264 
cou¡_ouçut_buf„r
,

265 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

266 
fdump_∑ckë
,

267 
√w
 
çch_q«ti⁄
::
	`cou¡_aggªg©e_t
(),

268 
√w
 
çch_q«ti⁄
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

269 
√w
 
	`öt_key_com∑ª_t
());

271 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

272 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

273 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

276 
çch_q«ti⁄
::
çch_«ti⁄_¥o˚ss_tu∂e_t
 
±
;

277 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

278 
dp
->
	`quîy_°©e_de°roy
(
qs
);

280  (
RCOK
);

281 
	}
}

284 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qorders.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_q‹dîs
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥‹d
;

67 
ªp_row_t
 
	g_º
;

69 
çch_‹dîs_tu∂e
 
	g_‹dîs
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q‹dîs_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
‹dîs_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥‹d
 = 
_çchdb
->
‹dîs_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
‹dîs_m™
()->
ts
(),

80 
_çchdb
->
‹dîs_desc
()->
maxsize
());

81 
	g_¥‹d
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
‹dîs_m™
()->
give_tu∂e
(
_¥‹d
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
‹dîs_m™
()->
lﬂd
(
_¥‹d
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_‹dîs_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_‹dîs_tu∂e
>(
d
.
d©a
);

110 
	g_¥‹d
->
gë_vÆue
(0, 
_‹dîs
.
O_ORDERKEY
);

111 
	g_¥‹d
->
gë_vÆue
(1, 
_‹dîs
.
O_CUSTKEY
);

112 
	g_¥‹d
->
gë_vÆue
(2, 
_‹dîs
.
O_ORDERSTATUS
);

113 
	g_¥‹d
->
gë_vÆue
(3, 
_‹dîs
.
O_TOTALPRICE
);

114 
	g_¥‹d
->
gë_vÆue
(4, 
_‹dîs
.
O_ORDERDATE
,15);

115 
	g_¥‹d
->
gë_vÆue
(5, 
_‹dîs
.
O_ORDERPRIORITY
,15);

116 
	g_¥‹d
->
gë_vÆue
(6, 
_‹dîs
.
O_CLERK
,15);

117 
	g_¥‹d
->
gë_vÆue
(7, 
_‹dîs
.
O_SHIPPRIORITY
);

118 
	g_¥‹d
->
gë_vÆue
(8, 
_‹dîs
.
O_COMMENT
,79);

120 
mem˝y
(
de°
,&
_‹dîs
,(
çch_‹dîs_tu∂e
));

122 i‡(
	gde°
->
	gO_ORDERKEY
<100000)

125 
TRACE
(
TRACE_ALWAYS
, "%d|\n",

126 
de°
->
O_ORDERKEY
);

143 
tsˇn_fûãr_t
* 
˛⁄e
() const {

144  
√w
 
tsˇn_fûãr_t
(*
this
);

147 
c_°r
 
to_°rög
() const {

148  
c_°r
("tscan_filter_t");

155 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


157 
public
:

159 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

160 
public
:

162 
cou¡_key_exåa˘‹_t
()

163 : 
key_exåa˘‹_t
(0, 0) {

167 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

168  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

172 
	g¥iv©e
:

173 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

175 
	gpublic
:

177 
cou¡_aggªg©e_t
()

178 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

182 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

186 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

187 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

190 
	gtu∂e
->
	gCOUNT
++;

194 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

195 
cou¡_tu∂e
 *
	gde°
;

196 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

197 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

199 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

202 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

203  
√w
 
cou¡_aggªg©e_t
(*
this
);

206 
c_°r
 
to_°rög
() const {

212 ˛as†
	cçch_‹dîs_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


214 
public
:

216 
begö
() {

217 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN ORDERS ANSWER ...\n");

218 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

221 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

222 
cou¡_tu∂e
 *
	gtu∂e
;

223 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

224 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

225 
tu∂e
->
COUNT
);

230 c⁄° 
c_°r
* 
	$dump_o_tu∂e
(
tu∂e_t
* 
tup
) {

231 
çch_‹dîs_tu∂e
 *
de°
;

232 
de°
 = 
Æig√d_ˇ°
<
çch_‹dîs_tu∂e
> (
tup
->
d©a
);

233  
√w
 
	`c_°r
("%d|%d|%c|%lf|%s|%s|%s|%d|%s|\n",

234 
de°
->
O_ORDERKEY
,

235 
de°
->
O_CUSTKEY
,

236 
de°
->
O_ORDERSTATUS
,

237 
de°
->
O_TOTALPRICE
.
	`to_doubÀ
(),

238 
de°
->
O_ORDERDATE
,

239 
de°
->
O_ORDERPRIORITY
,

240 
de°
->
O_CLERK
,

241 
de°
->
O_SHIPPRIORITY
,

242 
de°
->
O_COMMENT
);

243 
	}
}

254 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q‹dîs
(c⁄° 
x˘_id
, 
q‹dîs_öput_t
& 
ö
)

256 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN ORDERS *********\n");

258 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

259 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

263 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

264 
√w
 
	`tu∂e_fifo
((
çch_‹dîs_tu∂e
));

265 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

266 
√w
 
	`tsˇn_∑ckë_t
("TSCAN ORDERS",

267 
tsˇn_out_buf„r
,

268 
√w
 
çch_q‹dîs
::
	`tsˇn_fûãr_t
(
this
,
ö
),

269 
this
->
	`db
(),

270 
_p‹dîs_desc
.
	`gë
(),

271 
px˘


276 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_‹dîs_tu∂e
));

277 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

278 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

279 
fdump_ouçut
,

280 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

281 
NULL
,

282 
	`c_°r
("%s/‹dîs.tbl", 
	`gëív
("HOME")),

283 
NULL
,

284 
tsˇn_∑ckë
,

285 
çch_q‹dîs
::
dump_o_tu∂e
);

290 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

291 
√w
 
	`tu∂e_fifo
((
çch_q‹dîs
::
cou¡_tu∂e
));

292 
∑ckë_t
* 
cou¡_∑ckë
 =

293 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

294 
cou¡_ouçut_buf„r
,

295 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

296 
fdump_∑ckë
,

298 
√w
 
çch_q‹dîs
::
	`cou¡_aggªg©e_t
(),

299 
√w
 
çch_q‹dîs
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

300 
√w
 
	`öt_key_com∑ª_t
());

302 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

303 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

304 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

305 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

308 
çch_q‹dîs
::
çch_‹dîs_¥o˚ss_tu∂e_t
 
±
;

309 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

310 
dp
->
	`quîy_°©e_de°roy
(
qs
);

312  (
RCOK
);

313 
	}
}

316 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qpart.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_q∑π
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥∑π
;

67 
ªp_row_t
 
	g_º
;

69 
çch_∑π_tu∂e
 
	g_∑π
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q∑π_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
∑π_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥∑π
 = 
_çchdb
->
∑π_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
∑π_m™
()->
ts
(),

80 
_çchdb
->
∑π_desc
()->
maxsize
());

81 
	g_¥∑π
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
∑π_m™
()->
give_tu∂e
(
_¥∑π
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
∑π_m™
()->
lﬂd
(
_¥∑π
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_∑π_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_∑π_tu∂e
>(
d
.
d©a
);

110 
	g_¥∑π
->
gë_vÆue
(0, 
_∑π
.
P_PARTKEY
);

111 
	g_¥∑π
->
gë_vÆue
(1, 
_∑π
.
P_NAME
,55);

112 
	g_¥∑π
->
gë_vÆue
(2, 
_∑π
.
P_MFGR
,25);

113 
	g_¥∑π
->
gë_vÆue
(3, 
_∑π
.
P_BRAND
,10);

114 
	g_¥∑π
->
gë_vÆue
(4, 
_∑π
.
P_TYPE
,25);

115 
	g_¥∑π
->
gë_vÆue
(5, 
_∑π
.
P_SIZE
);

116 
	g_¥∑π
->
gë_vÆue
(6, 
_∑π
.
P_CONTAINER
,10);

117 
	g_¥∑π
->
gë_vÆue
(7, 
_∑π
.
P_RETAILPRICE
);

118 
	g_¥∑π
->
gë_vÆue
(8, 
_∑π
.
P_COMMENT
,23);

120 
mem˝y
(
de°
,&
_∑π
,(
çch_∑π_tu∂e
));

121 i‡(
	gde°
->
	gP_PARTKEY
%10000==0)

122 
TRACE
(
TRACE_RECORD_FLOW
, "%d %s\n", 
de°
->
P_PARTKEY
, de°->
P_NAME
);

126 
tsˇn_fûãr_t
* 
˛⁄e
() const {

127  
√w
 
tsˇn_fûãr_t
(*
this
);

130 
c_°r
 
to_°rög
() const {

131  
c_°r
("tscan_filter_t");

138 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


140 
public
:

142 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

143 
public
:

145 
cou¡_key_exåa˘‹_t
()

146 : 
key_exåa˘‹_t
(0, 0) {

150 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

151  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

155 
	g¥iv©e
:

156 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

158 
	gpublic
:

160 
cou¡_aggªg©e_t
()

161 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

165 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

169 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

170 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

173 
	gtu∂e
->
	gCOUNT
++;

177 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

178 
cou¡_tu∂e
 *
	gde°
;

179 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

180 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

182 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

185 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

186  
√w
 
cou¡_aggªg©e_t
(*
this
);

189 
c_°r
 
to_°rög
() const {

195 ˛as†
	cçch_∑π_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


197 
public
:

199 
begö
() {

200 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN PARTS ANSWER ...\n");

201 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

204 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

205 
cou¡_tu∂e
 *
	gtu∂e
;

206 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

207 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

208 
tu∂e
->
COUNT
);

212 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

213 
çch_∑π_tu∂e
 *
de°
;

214 
de°
 = 
Æig√d_ˇ°
<
çch_∑π_tu∂e
> (
tup
->
d©a
);

215  
√w
 
	`c_°r
("%d|%s|%s|%s|%s|%d|%s|%lf|%s|\n",

216 
de°
->
P_PARTKEY
,

217 
de°
->
P_NAME
,

218 
de°
->
P_MFGR
,

219 
de°
->
P_BRAND
,

220 
de°
->
P_TYPE
,

221 
de°
->
P_SIZE
,

222 
de°
->
P_CONTAINER
,

223 
de°
->
P_RETAILPRICE
.
	`to_doubÀ
(),

224 
de°
->
P_COMMENT
);

225 
	}
}

236 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q∑π
(c⁄° 
x˘_id
, 
q∑π_öput_t
& 
ö
)

238 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN PARTS *********\n");

240 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

241 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

245 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

246 
√w
 
	`tu∂e_fifo
((
çch_∑π_tu∂e
));

247 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

248 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PARTS",

249 
tsˇn_out_buf„r
,

250 
√w
 
çch_q∑π
::
	`tsˇn_fûãr_t
(
this
,
ö
),

251 
this
->
	`db
(),

252 
_µ¨t_desc
.
	`gë
(),

253 
px˘


257 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_∑π_tu∂e
));

258 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

259 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

260 
fdump_ouçut
,

261 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

262 
NULL
,

263 
	`c_°r
("%s/∑π.tbl", 
	`gëív
("HOME")),

264 
NULL
,

265 
tsˇn_∑ckë
,

266 
çch_q∑π
::
dump_tu∂e
);

269 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

270 
√w
 
	`tu∂e_fifo
((
çch_q∑π
::
cou¡_tu∂e
));

271 
∑ckë_t
* 
cou¡_∑ckë
 =

272 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

273 
cou¡_ouçut_buf„r
,

274 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

275 
fdump_∑ckë
,

276 
√w
 
çch_q∑π
::
	`cou¡_aggªg©e_t
(),

277 
√w
 
çch_q∑π
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

278 
√w
 
	`öt_key_com∑ª_t
());

280 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

281 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

282 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

283 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

286 
çch_q∑π
::
çch_∑π_¥o˚ss_tu∂e_t
 
±
;

287 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

288 
dp
->
	`quîy_°©e_de°roy
(
qs
);

290  (
RCOK
);

291 
	}
}

294 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qpartsupp.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_q∑πsuµ
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥∑πsuµ
;

67 
ªp_row_t
 
	g_º
;

69 
çch_∑πsuµ_tu∂e
 
	g_∑πsuµ
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
q∑πsuµ_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
∑πsuµ_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥∑πsuµ
 = 
_çchdb
->
∑πsuµ_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
∑πsuµ_m™
()->
ts
(),

80 
_çchdb
->
∑πsuµ_desc
()->
maxsize
());

81 
	g_¥∑πsuµ
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
∑πsuµ_m™
()->
give_tu∂e
(
_¥∑πsuµ
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
∑πsuµ_m™
()->
lﬂd
(
_¥∑πsuµ
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_∑πsuµ_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_∑πsuµ_tu∂e
>(
d
.
d©a
);

110 
	g_¥∑πsuµ
->
gë_vÆue
(0, 
_∑πsuµ
.
PS_PARTKEY
);

111 
	g_¥∑πsuµ
->
gë_vÆue
(1, 
_∑πsuµ
.
PS_SUPPKEY
);

112 
	g_¥∑πsuµ
->
gë_vÆue
(2, 
_∑πsuµ
.
PS_AVAILQTY
);

113 
	g_¥∑πsuµ
->
gë_vÆue
(3, 
_∑πsuµ
.
PS_SUPPLYCOST
);

114 
	g_¥∑πsuµ
->
gë_vÆue
(4, 
_∑πsuµ
.
PS_COMMENT
,199);

117 
mem˝y
(
de°
,&
_∑πsuµ
,(
çch_∑πsuµ_tu∂e
));

118 i‡(
	gde°
->
	gPS_PARTKEY
%100000==0)

119 
TRACE
(
TRACE_RECORD_FLOW
, "%d %d\n", 
de°
->
PS_PARTKEY
, de°->
PS_SUPPKEY
);

122 
tsˇn_fûãr_t
* 
˛⁄e
() const {

123  
√w
 
tsˇn_fûãr_t
(*
this
);

126 
c_°r
 
to_°rög
() const {

127  
c_°r
("tscan_filter_t");

134 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


136 
public
:

138 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

139 
public
:

141 
cou¡_key_exåa˘‹_t
()

142 : 
key_exåa˘‹_t
(0, 0) {

146 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

147  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

151 
	g¥iv©e
:

152 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

154 
	gpublic
:

156 
cou¡_aggªg©e_t
()

157 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

161 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

165 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

166 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

169 
	gtu∂e
->
	gCOUNT
++;

173 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

174 
cou¡_tu∂e
 *
	gde°
;

175 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

176 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

178 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

181 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

182  
√w
 
cou¡_aggªg©e_t
(*
this
);

185 
c_°r
 
to_°rög
() const {

191 ˛as†
	cçch_∑πsuµ_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


193 
public
:

195 
begö
() {

196 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN PARTSUPPS ANSWER ...\n");

197 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

200 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

201 
cou¡_tu∂e
 *
	gtu∂e
;

202 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

203 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

204 
tu∂e
->
COUNT
);

208 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

209 
çch_∑πsuµ_tu∂e
 *
de°
;

210 
de°
 = 
Æig√d_ˇ°
<
çch_∑πsuµ_tu∂e
> (
tup
->
d©a
);

211  
√w
 
	`c_°r
("%d|%d|%d|%lf|%s|\n",

212 
de°
->
PS_PARTKEY
,

213 
de°
->
PS_SUPPKEY
,

214 
de°
->
PS_AVAILQTY
,

215 
de°
->
PS_SUPPLYCOST
.
	`to_doubÀ
(),

216 
de°
->
PS_COMMENT
);

217 
	}
}

228 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_q∑πsuµ
(c⁄° 
x˘_id
, 
q∑πsuµ_öput_t
& 
ö
)

230 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN PARTSUPPS *********\n");

232 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

233 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

237 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

238 
√w
 
	`tu∂e_fifo
((
çch_∑πsuµ_tu∂e
));

239 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

240 
√w
 
	`tsˇn_∑ckë_t
("TSCAN PARTSUPPS",

241 
tsˇn_out_buf„r
,

242 
√w
 
çch_q∑πsuµ
::
	`tsˇn_fûãr_t
(
this
,
ö
),

243 
this
->
	`db
(),

244 
_µ¨tsuµ_desc
.
	`gë
(),

245 
px˘


250 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_∑πsuµ_tu∂e
));

251 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

252 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

253 
fdump_ouçut
,

254 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

255 
NULL
,

256 
	`c_°r
("%s/∑πsuµ.tbl", 
	`gëív
("HOME")),

257 
NULL
,

258 
tsˇn_∑ckë
,

259 
çch_q∑πsuµ
::
dump_tu∂e
);

263 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

264 
√w
 
	`tu∂e_fifo
((
çch_q∑πsuµ
::
cou¡_tu∂e
));

265 
∑ckë_t
* 
cou¡_∑ckë
 =

266 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

267 
cou¡_ouçut_buf„r
,

268 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

269 
fdump_∑ckë
,

270 
√w
 
çch_q∑πsuµ
::
	`cou¡_aggªg©e_t
(),

271 
√w
 
çch_q∑πsuµ
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

272 
√w
 
	`öt_key_com∑ª_t
());

274 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

275 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

276 
fdump_∑ckë
->
	`assign_quîy_°©e
(
qs
);

277 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

280 
çch_q∑πsuµ
::
çch_∑πsuµ_¥o˚ss_tu∂e_t
 
±
;

281 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

282 
dp
->
	`quîy_°©e_de°roy
(
qs
);

284  (
RCOK
);

285 
	}
}

288 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qregion.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_qªgi⁄
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥«t
;

67 
ªp_row_t
 
	g_º
;

69 
çch_ªgi⁄_tu∂e
 
	g_ªgi⁄
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
qªgi⁄_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
ªgi⁄_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥«t
 = 
_çchdb
->
ªgi⁄_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
ªgi⁄_m™
()->
ts
(),

80 
_çchdb
->
ªgi⁄_desc
()->
maxsize
());

81 
	g_¥«t
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
ªgi⁄_m™
()->
give_tu∂e
(
_¥«t
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
ªgi⁄_m™
()->
lﬂd
(
_¥«t
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_ªgi⁄_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_ªgi⁄_tu∂e
>(
d
.
d©a
);

110 
	g_¥«t
->
gë_vÆue
(0, 
_ªgi⁄
.
R_REGIONKEY
);

111 
	g_¥«t
->
gë_vÆue
(1, 
_ªgi⁄
.
R_NAME
, 25);

112 
	g_¥«t
->
gë_vÆue
(2, 
_ªgi⁄
.
R_COMMENT
, 25);

114 
mem˝y
(
de°
,&
_ªgi⁄
,(
çch_ªgi⁄_tu∂e
));

115 
TRACE
(
TRACE_RECORD_FLOW
, "%d %s\n", 
de°
->
R_REGIONKEY
, de°->
R_NAME
);

118 
tsˇn_fûãr_t
* 
˛⁄e
() const {

119  
√w
 
tsˇn_fûãr_t
(*
this
);

122 
c_°r
 
to_°rög
() const {

123  
c_°r
("tscan_filter_t");

130 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


132 
public
:

134 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

135 
public
:

137 
cou¡_key_exåa˘‹_t
()

138 : 
key_exåa˘‹_t
(0, 0) {

142 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

143  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

147 
	g¥iv©e
:

148 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

150 
	gpublic
:

152 
cou¡_aggªg©e_t
()

153 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

157 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

161 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

162 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

165 
	gtu∂e
->
	gCOUNT
++;

169 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

170 
cou¡_tu∂e
 *
	gde°
;

171 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

172 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

174 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

177 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

178  
√w
 
cou¡_aggªg©e_t
(*
this
);

181 
c_°r
 
to_°rög
() const {

187 ˛as†
	cçch_ªgi⁄_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


189 
public
:

191 
begö
() {

192 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN REGION ANSWER ...\n");

193 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

196 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

197 
cou¡_tu∂e
 *
	gtu∂e
;

198 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

199 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

200 
tu∂e
->
COUNT
);

204 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

205 
çch_ªgi⁄_tu∂e
 *
de°
;

206 
de°
 = 
Æig√d_ˇ°
<
çch_ªgi⁄_tu∂e
> (
tup
->
d©a
);

207  
√w
 
	`c_°r
("%d|%s|%s|\n",

208 
de°
->
R_REGIONKEY
,

209 
de°
->
R_NAME
,

210 
de°
->
R_COMMENT
);

211 
	}
}

222 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_qªgi⁄
(c⁄° 
x˘_id
, 
qªgi⁄_öput_t
& 
ö
)

224 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN REGION *********\n");

226 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

227 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

231 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

232 
√w
 
	`tu∂e_fifo
((
çch_ªgi⁄_tu∂e
));

233 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

234 
√w
 
	`tsˇn_∑ckë_t
("TSCAN REGION",

235 
tsˇn_out_buf„r
,

236 
√w
 
çch_qªgi⁄
::
	`tsˇn_fûãr_t
(
this
,
ö
),

237 
this
->
	`db
(),

238 
_¥egi⁄_desc
.
	`gë
(),

239 
px˘


243 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_ªgi⁄_tu∂e
));

244 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

245 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

246 
fdump_ouçut
,

247 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

248 
NULL
,

249 
	`c_°r
("%s/ªgi⁄.tbl", 
	`gëív
("HOME")),

250 
NULL
,

251 
tsˇn_∑ckë
,

252 
çch_qªgi⁄
::
dump_tu∂e
);

256 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

257 
√w
 
	`tu∂e_fifo
((
çch_qªgi⁄
::
cou¡_tu∂e
));

258 
∑ckë_t
* 
cou¡_∑ckë
 =

259 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

260 
cou¡_ouçut_buf„r
,

261 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

262 
fdump_∑ckë
,

263 
√w
 
çch_qªgi⁄
::
	`cou¡_aggªg©e_t
(),

264 
√w
 
çch_qªgi⁄
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

265 
√w
 
	`öt_key_com∑ª_t
());

267 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

268 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

269 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

272 
çch_qªgi⁄
::
çch_ªgi⁄_¥o˚ss_tu∂e_t
 
±
;

273 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

274 
dp
->
	`quîy_°©e_de°roy
(
qs
);

276  (
RCOK
);

277 
	}
}

280 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe/qpipe_tpch_qsupplier.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe.h
"

35 
usög
 
«me•a˚
 
	gsh‹e
;

36 
usög
 
«me•a˚
 
	gqpùe
;

40 
ENTER_NAMESPACE
(
çch
);

50 ˛as†
	cçch_qsuµlõr
{

52 
	mpublic
:

55 
	scou¡_tu∂e
 {

56 
COUNT
;

62 ˛as†
	ctsˇn_fûãr_t
 : 
public
 
tu∂e_fûãr_t


64 
¥iv©e
:

65 
Sh‹eTPCHEnv
* 
_çchdb
;

66 
èbÀ_row_t
* 
	g_¥suµlõr
;

67 
ªp_row_t
 
	g_º
;

69 
çch_suµlõr_tu∂e
 
	g_suµlõr
;

70 
	gpublic
:

72 
tsˇn_fûãr_t
(
Sh‹eTPCHEnv
* 
çchdb
, 
qsuµlõr_öput_t
 &
ö
)

73 : 
tu∂e_fûãr_t
(
çchdb
->
suµlõr_desc
()->
maxsize
()), 
_çchdb
(tpchdb)

78 
	g_¥suµlõr
 = 
_çchdb
->
suµlõr_m™
()->
gë_tu∂e
();

79 
	g_º
.
£t_ts
(
_çchdb
->
suµlõr_m™
()->
ts
(),

80 
_çchdb
->
suµlõr_desc
()->
maxsize
());

81 
	g_¥suµlõr
->
	g_ªp
 = &
_º
;

85 ~
tsˇn_fûãr_t
()

88 
	g_çchdb
->
suµlõr_m™
()->
give_tu∂e
(
_¥suµlõr
);

93 
boﬁ
 
£À˘
(c⁄° 
tu∂e_t
 &
öput
) {

96 i‡(!
	g_çchdb
->
suµlõr_m™
()->
lﬂd
(
_¥suµlõr
, 
öput
.
d©a
)) {

97 
as£π
(
Ál£
);

100  (
	gåue
);

105 
¥oje˘
(
tu∂e_t
 &
d
, c⁄°Åu∂e_à&
s
) {

107 
çch_suµlõr_tu∂e
 *
	gde°
;

108 
	gde°
 = 
Æig√d_ˇ°
<
çch_suµlõr_tu∂e
>(
d
.
d©a
);

110 
	g_¥suµlõr
->
gë_vÆue
(0, 
_suµlõr
.
S_SUPPKEY
);

111 
	g_¥suµlõr
->
gë_vÆue
(1, 
_suµlõr
.
S_NAME
, 25);

112 
	g_¥suµlõr
->
gë_vÆue
(2, 
_suµlõr
.
S_ADDRESS
, 40);

113 
	g_¥suµlõr
->
gë_vÆue
(3, 
_suµlõr
.
S_NATIONKEY
);

114 
	g_¥suµlõr
->
gë_vÆue
(4, 
_suµlõr
.
S_PHONE
,15);

115 
	g_¥suµlõr
->
gë_vÆue
(5, 
_suµlõr
.
S_ACCTBAL
);

116 
	g_¥suµlõr
->
gë_vÆue
(6, 
_suµlõr
.
S_COMMENT
,101);

118 
mem˝y
(
de°
,&
_suµlõr
,(
çch_suµlõr_tu∂e
));

119 i‡(
	gde°
->
	gS_SUPPKEY
%10000==0)

120 
TRACE
(
TRACE_RECORD_FLOW
, "%d %s\n", 
de°
->
S_SUPPKEY
, de°->
S_NAME
);

123 
tsˇn_fûãr_t
* 
˛⁄e
() const {

124  
√w
 
tsˇn_fûãr_t
(*
this
);

127 
c_°r
 
to_°rög
() const {

128  
c_°r
("tscan_filter_t");

135 ˛as†
	ccou¡_aggªg©e_t
 : 
public
 
tu∂e_aggªg©e_t


137 
public
:

139 ˛as†
	ccou¡_key_exåa˘‹_t
 : 
public
 
key_exåa˘‹_t
 {

140 
public
:

142 
cou¡_key_exåa˘‹_t
()

143 : 
key_exåa˘‹_t
(0, 0) {

147 
vútuÆ
 
key_exåa˘‹_t
* 
˛⁄e
() const {

148  
√w
 
cou¡_key_exåa˘‹_t
(*
this
);

152 
	g¥iv©e
:

153 
cou¡_key_exåa˘‹_t
 
_exåa˘‹
;

155 
	gpublic
:

157 
cou¡_aggªg©e_t
()

158 : 
tu∂e_aggªg©e_t
((
cou¡_tu∂e
))

162 
key_exåa˘‹_t
* 
key_exåa˘‹
(Ë{  &
_exåa˘‹
; }

166 
aggªg©e
(* 
agg_d©a
, c⁄° 
tu∂e_t
 &
s
) {

167 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

170 
	gtu∂e
->
	gCOUNT
++;

174 
föish
(
tu∂e_t
 &
d
, c⁄° * 
agg_d©a
) {

175 
cou¡_tu∂e
 *
	gde°
;

176 
	gde°
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
d
.
d©a
);

177 
cou¡_tu∂e
* 
	gtu∂e
 = 
Æig√d_ˇ°
<cou¡_tu∂e>(
agg_d©a
);

179 
	gde°
->
	gCOUNT
=
tu∂e
->
COUNT
;

182 
cou¡_aggªg©e_t
* 
˛⁄e
() const {

183  
√w
 
cou¡_aggªg©e_t
(*
this
);

186 
c_°r
 
to_°rög
() const {

192 ˛as†
	cçch_suµlõr_¥o˚ss_tu∂e_t
 : 
public
 
¥o˚ss_tu∂e_t


194 
public
:

196 
begö
() {

197 
TRACE
(
TRACE_QUERY_RESULTS
, "*** SCAN SUPPLIERS ANSWER ...\n");

198 
TRACE
(
TRACE_QUERY_RESULTS
, "*** COUNT ...\n");

201 
vútuÆ
 
¥o˚ss
(c⁄° 
tu∂e_t
& 
ouçut
) {

202 
cou¡_tu∂e
 *
	gtu∂e
;

203 
	gtu∂e
 = 
Æig√d_ˇ°
<
cou¡_tu∂e
>(
ouçut
.
d©a
);

204 
TRACE
(
TRACE_QUERY_RESULTS
, "*** %d\n",

205 
tu∂e
->
COUNT
);

209 c⁄° 
c_°r
* 
	$dump_tu∂e
(
tu∂e_t
* 
tup
) {

210 
çch_suµlõr_tu∂e
 *
de°
;

211 
de°
 = 
Æig√d_ˇ°
<
çch_suµlõr_tu∂e
> (
tup
->
d©a
);

212  
√w
 
	`c_°r
("%d|%s|%s|%d|%s|%lf|%s|\n",

213 
de°
->
S_SUPPKEY
,

214 
de°
->
S_NAME
,

215 
de°
->
S_ADDRESS
,

216 
de°
->
S_NATIONKEY
,

217 
de°
->
S_PHONE
,

218 
de°
->
S_ACCTBAL
.
	`to_doubÀ
(),

219 
de°
->
S_COMMENT
);

220 
	}
}

231 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qpùe_qsuµlõr
(c⁄° 
x˘_id
, 
qsuµlõr_öput_t
& 
ö
)

233 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN SUPPLIERS *********\n");

235 
pﬁicy_t
* 
dp
 = 
this
->
	`gë_sched_pﬁicy
();

236 
x˘_t
* 
px˘
 = 
smthªad_t
::
	`me
()->
	`x˘
();

240 
tu∂e_fifo
* 
tsˇn_out_buf„r
 =

241 
√w
 
	`tu∂e_fifo
((
çch_suµlõr_tu∂e
));

242 
tsˇn_∑ckë_t
* 
tsˇn_∑ckë
 =

243 
√w
 
	`tsˇn_∑ckë_t
("TSCAN SUPPLIERS",

244 
tsˇn_out_buf„r
,

245 
√w
 
çch_qsuµlõr
::
	`tsˇn_fûãr_t
(
this
,
ö
),

246 
this
->
	`db
(),

247 
_psuµlõr_desc
.
	`gë
(),

248 
px˘


252 
tu∂e_fifo
* 
fdump_ouçut
 = 
√w
 
	`tu∂e_fifo
((
çch_suµlõr_tu∂e
));

253 
fdump_∑ckë_t
* 
fdump_∑ckë
 =

254 
√w
 
	`fdump_∑ckë_t
(
	`c_°r
("FDUMP"),

255 
fdump_ouçut
,

256 
√w
 
	`åivül_fûãr_t
(
fdump_ouçut
->
	`tu∂e_size
()),

257 
NULL
,

258 
	`c_°r
("%s/suµlõr.tbl", 
	`gëív
("HOME")),

259 
NULL
,

260 
tsˇn_∑ckë
,

261 
çch_qsuµlõr
::
dump_tu∂e
);

264 
tu∂e_fifo
* 
cou¡_ouçut_buf„r
 =

265 
√w
 
	`tu∂e_fifo
((
çch_qsuµlõr
::
cou¡_tu∂e
));

266 
∑ckë_t
* 
cou¡_∑ckë
 =

267 
√w
 
	`∑πül_aggªg©e_∑ckë_t
("COUNT",

268 
cou¡_ouçut_buf„r
,

269 
√w
 
	`åivül_fûãr_t
(
cou¡_ouçut_buf„r
->
	`tu∂e_size
()),

270 
fdump_∑ckë
,

271 
√w
 
çch_qsuµlõr
::
	`cou¡_aggªg©e_t
(),

272 
√w
 
çch_qsuµlõr
::
cou¡_aggªg©e_t
::
	`cou¡_key_exåa˘‹_t
(),

273 
√w
 
	`öt_key_com∑ª_t
());

275 
qpùe
::
quîy_°©e_t
* 
qs
 = 
dp
->
	`quîy_°©e_¸óã
();

276 
cou¡_∑ckë
->
	`assign_quîy_°©e
(
qs
);

277 
tsˇn_∑ckë
->
	`assign_quîy_°©e
(
qs
);

280 
çch_qsuµlõr
::
çch_suµlõr_¥o˚ss_tu∂e_t
 
±
;

281 
	`¥o˚ss_quîy
(
cou¡_∑ckë
, 
±
);

282 
dp
->
	`quîy_°©e_de°roy
(
qs
);

284  (
RCOK
);

285 
	}
}

288 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/qpipe_tpch_xct.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"qpùe/°ages.h
"

34 
	~"qpùe/qcomm⁄.h
"

36 
usög
 
«me•a˚
 
	gsh‹e
;

37 
usög
 
«me•a˚
 
	gqpùe
;

41 
ENTER_NAMESPACE
(
çch
);

76 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q1
);

77 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q2
);

78 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q3
);

79 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q4
);

80 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q5
);

81 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q6
);

82 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q7
);

83 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q8
);

84 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q9
);

85 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q10
);

86 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q11
);

87 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q12
);

88 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q13
);

89 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q14
);

90 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q15
);

91 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q16
);

92 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q17
);

93 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q18
);

94 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q19
);

95 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q20
);

96 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q21
);

97 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q22
);

98 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
qlöeôem
);

99 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q‹dîs
);

100 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q∑π
);

101 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q∑πsuµ
);

102 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
qsuµlõr
);

103 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
q«ti⁄
);

104 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
qªgi⁄
);

105 
DEFINE_QPIPE_TRX
(
Sh‹eTPCHEnv
,
qcu°omî
);

117 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$run_⁄e_qpùe_x˘
(
Reque°
* 
¥eque°
)

121 
ty≥
 = 
¥eque°
->
	`ty≥
();

122 
	`as£π
 (
ty≥
 >
XCT_QPIPE_TPCH_MIX
);

123 i‡(
ty≥
 =
XCT_QPIPE_TPCH_MIX
) {

124 
ty≥
 = 
	`abs
(
smthªad_t
::
	`me
()->
	`ønd
()%22);

128 
ty≥
 -(
XCT_QPIPE_TPCH_MIX
 - 
XCT_TPCH_MIX
);

131 
ty≥
) {

134 
XCT_TPCH_Q1
:

135  (
	`run_qpùe_q1
(
¥eque°
));

137 
XCT_TPCH_Q2
:

138  (
	`run_qpùe_q2
(
¥eque°
));

140 
XCT_TPCH_Q3
:

141  (
	`run_qpùe_q3
(
¥eque°
));

143 
XCT_TPCH_Q4
:

144  (
	`run_qpùe_q4
(
¥eque°
));

146 
XCT_TPCH_Q5
:

147  (
	`run_qpùe_q5
(
¥eque°
));

149 
XCT_TPCH_Q6
:

150  (
	`run_qpùe_q6
(
¥eque°
));

152 
XCT_TPCH_Q7
:

153  (
	`run_qpùe_q7
(
¥eque°
));

155 
XCT_TPCH_Q8
:

156  (
	`run_qpùe_q8
(
¥eque°
));

158 
XCT_TPCH_Q9
:

159  (
	`run_qpùe_q9
(
¥eque°
));

161 
XCT_TPCH_Q10
:

162  (
	`run_qpùe_q10
(
¥eque°
));

164 
XCT_TPCH_Q11
:

165  (
	`run_qpùe_q11
(
¥eque°
));

167 
XCT_TPCH_Q12
:

168  (
	`run_qpùe_q12
(
¥eque°
));

170 
XCT_TPCH_Q13
:

171  (
	`run_qpùe_q13
(
¥eque°
));

173 
XCT_TPCH_Q14
:

174  (
	`run_qpùe_q14
(
¥eque°
));

176 
XCT_TPCH_Q15
:

177  (
	`run_qpùe_q15
(
¥eque°
));

179 
XCT_TPCH_Q16
:

180  (
	`run_qpùe_q16
(
¥eque°
));

182 
XCT_TPCH_Q17
:

183  (
	`run_qpùe_q17
(
¥eque°
));

185 
XCT_TPCH_Q18
:

186  (
	`run_qpùe_q18
(
¥eque°
));

188 
XCT_TPCH_Q19
:

189  (
	`run_qpùe_q19
(
¥eque°
));

191 
XCT_TPCH_Q20
:

192  (
	`run_qpùe_q20
(
¥eque°
));

194 
XCT_TPCH_Q21
:

195  (
	`run_qpùe_q21
(
¥eque°
));

197 
XCT_TPCH_Q22
:

198  (
	`run_qpùe_q22
(
¥eque°
));

200 
XCT_TPCH_QLINEITEM
:

201  (
	`run_qpùe_qlöeôem
(
¥eque°
));

203 
XCT_TPCH_QORDERS
:

204  (
	`run_qpùe_q‹dîs
(
¥eque°
));

206 
XCT_TPCH_QREGION
:

207  (
	`run_qpùe_qªgi⁄
(
¥eque°
));

209 
XCT_TPCH_QNATION
:

210  (
	`run_qpùe_q«ti⁄
(
¥eque°
));

212 
XCT_TPCH_QCUSTOMER
:

213  (
	`run_qpùe_qcu°omî
(
¥eque°
));

215 
XCT_TPCH_QSUPPLIER
:

216  (
	`run_qpùe_qsuµlõr
(
¥eque°
));

218 
XCT_TPCH_QPART
:

219  (
	`run_qpùe_q∑π
(
¥eque°
));

221 
XCT_TPCH_QPARTSUPP
:

222  (
	`run_qpùe_q∑πsuµ
(
¥eque°
));

226 
	`TRACE
–
TRACE_ALWAYS
, "UnknownÅransaction\n");

228  (
RCOK
);

229 
	}
}

235 
EXIT_NAMESPACE
(
qpùe
);

	@src/workload/tpch/shore_tpch_client.cpp

33 
	~"w‹klﬂd/çch/sh‹e_çch_˛õ¡.h
"

35 
ENTER_NAMESPACE
(
çch
);

44 
	gba£löe_çch_˛õ¡_t
::
	$ba£löe_çch_˛õ¡_t
(
c_°r
 
äame
, c⁄° 
id
,

45 
Sh‹eTPCHEnv
* 
ív
,

46 c⁄° 
MósuªmítTy≥
 
aTy≥
,

47 c⁄° 
åxid
,

48 c⁄° 
numOfTrxs
,

49 
¥o˚ss‹id_t
 
≠rsid
,

50 c⁄° 
£lID
, c⁄° 
qf
)

51 : 
	`ba£_˛õ¡_t
(
äame
,
id
,
ív
,
aTy≥
,
åxid
,
numOfTrxs
,
≠rsid
),

52 
	`_£lid
(
£lID
), 
	$_qf
(
qf
)

54 
	`as£π
 (
ív
);

55 
	`as£π
 (
_id
>=0 && 
_qf
>0);

58 
_w‹kî
 = 
_ív
->
	`w‹kî
(
_id
);

59 
	`as£π
 (
_w‹kî
);

60 
	}
}

62 
	gba£löe_çch_˛õ¡_t
::
	$lﬂd_sup_x˘
(
m≠SupTrxs
& 
°m≠
)

65 
°m≠
.
	`˛ór
();

68 
°m≠
[
XCT_TPCH_MIX
] = "TPCH-Mix";

69 
°m≠
[
XCT_TPCH_Q1
] = "TPCH-Q1";

70 
°m≠
[
XCT_TPCH_Q2
] = "TPCH-Q2";

71 
°m≠
[
XCT_TPCH_Q3
] = "TPCH-Q3";

72 
°m≠
[
XCT_TPCH_Q4
] = "TPCH-Q4";

73 
°m≠
[
XCT_TPCH_Q5
] = "TPCH-Q5";

74 
°m≠
[
XCT_TPCH_Q6
] = "TPCH-Q6";

75 
°m≠
[
XCT_TPCH_Q7
] = "TPCH-Q7";

76 
°m≠
[
XCT_TPCH_Q8
] = "TPCH-Q8";

77 
°m≠
[
XCT_TPCH_Q9
] = "TPCH-Q9";

78 
°m≠
[
XCT_TPCH_Q10
] = "TPCH-Q10";

79 
°m≠
[
XCT_TPCH_Q11
] = "TPCH-Q11";

80 
°m≠
[
XCT_TPCH_Q12
] = "TPCH-Q12";

81 
°m≠
[
XCT_TPCH_Q13
] = "TPCH-Q13";

82 
°m≠
[
XCT_TPCH_Q14
] = "TPCH-Q14";

83 
°m≠
[
XCT_TPCH_Q15
] = "TPCH-Q15";

84 
°m≠
[
XCT_TPCH_Q16
] = "TPCH-Q16";

85 
°m≠
[
XCT_TPCH_Q17
] = "TPCH-Q17";

86 
°m≠
[
XCT_TPCH_Q18
] = "TPCH-Q18";

87 
°m≠
[
XCT_TPCH_Q19
] = "TPCH-Q19";

88 
°m≠
[
XCT_TPCH_Q20
] = "TPCH-Q20";

89 
°m≠
[
XCT_TPCH_Q21
] = "TPCH-Q21";

90 
°m≠
[
XCT_TPCH_QLINEITEM
] = "TPCH-QLINEITEM";

91 
°m≠
[
XCT_TPCH_QORDERS
] = "TPCH-QORDERS";

92 
°m≠
[
XCT_TPCH_QREGION
] = "TPCH-QREGION";

93 
°m≠
[
XCT_TPCH_QNATION
] = "TPCH-QNATION";

94 
°m≠
[
XCT_TPCH_QCUSTOMER
] = "TPCH-QCUSTOMER";

95 
°m≠
[
XCT_TPCH_QSUPPLIER
] = "TPCH-QSUPPLIER";

96 
°m≠
[
XCT_TPCH_QPART
] = "TPCH-QPART";

97 
°m≠
[
XCT_TPCH_QPARTSUPP
] = "TPCH-QPARTSUPP";

101 #ifde‡
CFG_QPIPE


103 
°m≠
[
XCT_QPIPE_TPCH_MIX
] = "QPIPE-TPCH-MIX";

105 
uöt
 
qpùeba£
 = 
XCT_QPIPE_TPCH_MIX
 - 
XCT_TPCH_MIX
;

106 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q1
] = "QPIPE-TPCH-Q1";

107 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q2
] = "QPIPE-TPCH-Q2";

108 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q3
] = "QPIPE-TPCH-Q3";

109 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q4
] = "QPIPE-TPCH-Q4";

110 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q5
] = "QPIPE-TPCH-Q5";

111 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q6
] = "QPIPE-TPCH-Q6";

112 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q7
] = "QPIPE-TPCH-Q7";

113 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q8
] = "QPIPE-TPCH-Q8";

114 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q9
] = "QPIPE-TPCH-Q9";

115 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q10
] = "QPIPE-TPCH-Q10";

116 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q11
] = "QPIPE-TPCH-Q11";

117 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q12
] = "QPIPE-TPCH-Q12";

118 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q13
] = "QPIPE-TPCH-Q13";

119 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q14
] = "QPIPE-TPCH-Q14";

120 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q15
] = "QPIPE-TPCH-Q15";

121 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q16
] = "QPIPE-TPCH-Q16";

122 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q17
] = "QPIPE-TPCH-Q17";

123 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q18
] = "QPIPE-TPCH-Q18";

124 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q19
] = "QPIPE-TPCH-Q19";

125 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q20
] = "QPIPE-TPCH-Q20";

126 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q21
] = "QPIPE-TPCH-Q21";

127 
°m≠
[
qpùeba£
 + 
XCT_TPCH_Q22
] = "QPIPE-TPCH-Q22";

128 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QLINEITEM
] = "QPIPE-TPCH-QLINEITEM";

129 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QORDERS
] = "QPIPE-TPCH-QORDERS";

130 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QREGION
] = "QPIPE-TPCH-QREGION";

131 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QNATION
] = "QPIPE-TPCH-QNATION";

132 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QCUSTOMER
] = "QPIPE-TPCH-QCUSTOMER";

133 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QSUPPLIER
] = "QPIPE-TPCH-QSUPPLIER";

134 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QPART
] = "QPIPE-TPCH-QPART";

135 
°m≠
[
qpùeba£
 + 
XCT_TPCH_QPARTSUPP
] = "QPIPE-TPCH-QPARTSUPP";

140  (
°m≠
.
	`size
());

141 
	}
}

155 
w_rc_t
 
	gba£löe_çch_˛õ¡_t
::
	$submô_⁄e
(
x˘_ty≥
, 
x˘id
)

158 
åx_ªsu…_tu∂e_t
 
©π
;

159 
boﬁ
 
bWake
 = 
Ál£
;

160 i‡(
c⁄dex
* 
c
 = 
_˝
->
	`èke_⁄e
()) {

161 
©π
.
	`£t_nŸify
(
c
);

162 
	`TRACE
–
TRACE_TRX_FLOW
, "Sleeping\n");

163 
bWake
 = 
åue
;

167 
£lid
 = 
_£lid
;

172 
åx_ªque°_t
* 
¨eque°
 = 
	`√w
 (
_ív
->
_ªque°_poﬁ
)Årx_request_t;

173 
tid_t
 
©id
;

174 
¨eque°
->
	`£t
(
NULL
,
©id
,
x˘id
,
©π
,
x˘_ty≥
,
£lid
);

177 
	`as£π
 (
_w‹kî
);

178 
_w‹kî
->
	`íqueue
(
¨eque°
,
bWake
);

179  (
RCOK
);

180 
	}
}

183 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/shore_tpch_env.cpp

31 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

32 
	~"sm/sh‹e/sh‹e_hñ≥r_lﬂdî.h
"

34 
	~"w‹klﬂd/çch/çch_øndom.h
"

36 
	~"w‹klﬂd/çch/dbgí/dss.h
"

37 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

40 
usög
 
«me•a˚
 
	gsh‹e
;

41 
usög
 
«me•a˚
 
	gdbgíçch
;

44 
ENTER_NAMESPACE
(
sh‹e
);

45 
DEFINE_ROW_CACHE_TLS
(
çch
, 
«ti⁄
);

46 
DEFINE_ROW_CACHE_TLS
(
çch
, 
ªgi⁄
);

47 
DEFINE_ROW_CACHE_TLS
(
çch
, 
∑π
);

48 
DEFINE_ROW_CACHE_TLS
(
çch
, 
suµlõr
);

49 
DEFINE_ROW_CACHE_TLS
(
çch
, 
∑πsuµ
);

50 
DEFINE_ROW_CACHE_TLS
(
çch
, 
cu°omî
);

51 
DEFINE_ROW_CACHE_TLS
(
çch
, 
‹dîs
);

52 
DEFINE_ROW_CACHE_TLS
(
çch
, 
löeôem
);

53 
EXIT_NAMESPACE
(
sh‹e
);

56 
ENTER_NAMESPACE
(
çch
);

73 c⁄° 
	gPART_UNIT_PER_SF
 = 200000;

74 c⁄° 
	gCUST_UNIT_PER_SF
 = 150000;

75 c⁄° 
	gDIVISOR
 = 50;

76 c⁄° 
	gPART_COUNT
 = 10000;

77 c⁄° 
	gCUST_COUNT
 = 10000;

79 
	gSh‹eTPCHEnv
::
checkpoöãr_t
 : 
public
 
thªad_t


81 
Sh‹eTPCHEnv
* 
_ív
;

82 
checkpoöãr_t
(
Sh‹eTPCHEnv
* 
ív
)

83 : 
thªad_t
("TPC-H Lﬂd Checkpoöãr"), 
_ív
(
ív
) { }

84 
vútuÆ
 
w‹k
();

87 ˛as†
	cSh‹eTPCHEnv
::
èbÀ_buûdî_t
 : 
public
 
thªad_t


89 
Sh‹eTPCHEnv
* 
_ív
;

90 
	m_∑π_°¨t
;

91 
	m_∑π_íd
;

92 
	m_cu°_°¨t
;

93 
	m_cu°_íd
;

94 
	m_sf
;

95 
	m_lﬂdîs
;

96 
	mpublic
:

97 
	$èbÀ_buûdî_t
(
Sh‹eTPCHEnv
* 
ív
, c⁄° 
id
,

98 c⁄° 
∑π_°¨t
, c⁄° 
∑π_íd
,

99 c⁄° 
cu°_°¨t
, c⁄° 
cu°_íd
,

100 c⁄° 
sf
, c⁄° 
lﬂdîs
)

101 : 
	`thªad_t
(
	`c_°r
("TPC-H L-%d",
id
)), 
	`_ív
(
ív
),

102 
	`_∑π_°¨t
(
∑π_°¨t
), 
	`_∑π_íd
(
∑π_íd
),

103 
	`_cu°_°¨t
(
cu°_°¨t
), 
	`_cu°_íd
(
cu°_íd
),

104 
	`_sf
(
sf
), 
	$_lﬂdîs
(
lﬂdîs
)

106 
vútuÆ
 
	`w‹k
();

107 
	}
};

109 
	gSh‹eTPCHEnv
::
èbÀ_¸ót‹_t
 : 
public
 
thªad_t


111 
Sh‹eTPCHEnv
* 
_ív
;

112 
	g_sf
;

113 
	g_lﬂdî_cou¡
;

114 
	g_∑πs_≥r_thªad
;

115 
	g_cu°s_≥r_thªad
;

117 
èbÀ_¸ót‹_t
(
Sh‹eTPCHEnv
* 
ív
, c⁄° 
sf
, c⁄° 
lﬂdî_cou¡
,

118 c⁄° 
∑πs_≥r_thªad
, c⁄° 
cu°s_≥r_thªad
)

119 : 
thªad_t
("TPC-H C"),

120 
_ív
(
ív
), 
_sf
(
sf
),

121 
_lﬂdî_cou¡
(
lﬂdî_cou¡
),

122 
_∑πs_≥r_thªad
(
∑πs_≥r_thªad
),

123 
_cu°s_≥r_thªad
(
cu°s_≥r_thªad
)

125 
vútuÆ
 
w‹k
();

129 
	gSh‹eTPCHEnv
::
checkpoöãr_t
::
	$w‹k
()

131 
boﬁ
 vﬁ©ûe* 
lﬂded
 = &
_ív
->
_lﬂded
;

132 !*
lﬂded
) {

133 
_ív
->
	`£t_mósuª
(
MST_MEASURE
);

134 
i
=0; i < 60 && ! *
lﬂded
; i++) {

135 ::
	`¶ìp
(1);

138 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint - start\n");

139 
_ív
->
	`checkpoöt
();

140 
	`TRACE
–
TRACE_ALWAYS
, "db checkpoint -Énd\n");

142 
_ív
->
	`£t_mósuª
(
MST_PAUSE
);

143 
	}
}

146 
	gSh‹eTPCHEnv
::
èbÀ_¸ót‹_t
::
	$w‹k
()

159 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

160 
	`W_COERCE
(
_ív
->
_≤©i⁄_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

161 
	`W_COERCE
(
_ív
->
_¥egi⁄_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

162 
	`W_COERCE
(
_ív
->
_µ¨t_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

163 
	`W_COERCE
(
_ív
->
_psuµlõr_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

164 
	`W_COERCE
(
_ív
->
_µ¨tsuµ_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

165 
	`W_COERCE
(
_ív
->
_pcu°omî_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

166 
	`W_COERCE
(
_ív
->
_p‹dîs_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

167 
	`W_COERCE
(
_ív
->
_∂öeôem_desc
->
	`¸óã_physiˇl_èbÀ
(_ív->
	`db
()));

168 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

172 
_ív
->
_≤©i⁄_m™
->
	`ªgi°î_èbÀ_m™
();

173 
_ív
->
_¥egi⁄_m™
->
	`ªgi°î_èbÀ_m™
();

174 
_ív
->
_µ¨t_m™
->
	`ªgi°î_èbÀ_m™
();

175 
_ív
->
_psuµlõr_m™
->
	`ªgi°î_èbÀ_m™
();

176 
_ív
->
_µ¨tsuµ_m™
->
	`ªgi°î_èbÀ_m™
();

177 
_ív
->
_pcu°omî_m™
->
	`ªgi°î_èbÀ_m™
();

178 
_ív
->
_p‹dîs_m™
->
	`ªgi°î_èbÀ_m™
();

179 
_ív
->
_∂öeôem_m™
->
	`ªgi°î_èbÀ_m™
();

183 
p›uœã_ba£löe_öput_t
 
ö
 = {
_sf
, 
_lﬂdî_cou¡
, 
DIVISOR
,

184 
_∑πs_≥r_thªad
, 
_cu°s_≥r_thªad
};

186 
w_rc_t
 
e
 = 
RCOK
;

188 
log_•a˚_√eded
 = 0;

189 
ªåyba£löe
:

190 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

191 #ifde‡
USE_SHORE_6


192 if(
log_•a˚_√eded
 > 0) {

193 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

196 
e
 = 
_ív
->
	`x˘_p›uœã_ba£löe
(0, 
ö
);

198 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåyba£löe
,
_ív
);

200 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

201 
	`W_COERCE
(
_ív
->
	`_po°_öô_im∂
());

202 
	`W_COERCE
(
_ív
->
	`db
()->
	`commô_x˘
());

203 
	}
}

206 
	g∑π_com∂ëed
 = 0;

207 
	gcu°_com∂ëed
 = 0;

209 
	gSh‹eTPCHEnv
::
èbÀ_buûdî_t
::
	$w‹k
()

211 
w_rc_t
 
e
 = 
RCOK
;

213 i‡(
_lﬂdîs
==1)

215 
	`TRACE
–
TRACE_ALWAYS
, "Using simpleÜoader with 1Åhread.\n");

219 
i
=
_∑π_°¨t
 ; i < 
_∑π_íd
; i+=
PART_POP_UNIT
) {

220 
_ív
->
	`gë_mósuª
(Ë!
MST_MEASURE
) {

221 
	`u¶ìp
(1000);

224 
tid
 = 
i
;

225 
p›uœã_some_∑πs_öput_t
 
ö
 = {
tid
};

227 
tid
 = 
°d
::
	`mö
(
_∑π_íd
-
i
,
PART_POP_UNIT
);

229 
log_•a˚_√eded
 = 0;

230 
ªåy∑π
:

231 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

232 #ifde‡
USE_SHORE_6


233 if(
log_•a˚_√eded
 > 0) {

234 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

237 
e
 = 
_ív
->
	`x˘_p›uœã_some_∑πs
(
tid
, 
ö
);

239 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåy∑π
,
_ív
);

241 
nvÆ
 = 
	`©omic_add_64_nv
(&
∑π_com∂ëed
,
tid
);

242 i‡(
nvÆ
 % 
PART_COUNT
 == 0) {

243 
	`TRACE
–
TRACE_ALWAYS
, "Parts %d/%d (%.0f%%)\n",

244 
nvÆ
, ()(
_sf
*
PART_UNIT_PER_SF
),

245 ()(100*
nvÆ
)/()(
_sf
*
PART_UNIT_PER_SF
));

249 
	`TRACE
–
TRACE_ALWAYS
, "Föished P¨t†%d .. %d \n", 
_∑π_°¨t
, 
_∑π_íd
);

252 
uöt
 
i
=
_cu°_°¨t
 ; i < 
_cu°_íd
; i+=
CUST_POP_UNIT
) {

253 
_ív
->
	`gë_mósuª
(Ë!
MST_MEASURE
) {

254 
	`u¶ìp
(1000);

257 
tid
 = 
i
;

258 
p›uœã_some_cu°s_öput_t
 
ö
 = {
tid
};

260 
tid
 = 
°d
::
	`mö
(
_cu°_íd
-
i
,
CUST_POP_UNIT
);

262 
log_•a˚_√eded
 = 0;

263 
ªåycu°
:

264 
	`W_COERCE
(
_ív
->
	`db
()->
	`begö_x˘
());

265 #ifde‡
USE_SHORE_6


266 if(
log_•a˚_√eded
 > 0) {

267 
	`W_COERCE
(
_ív
->
	`db
()->
	`x˘_ª£rve_log_•a˚
(
log_•a˚_√eded
));

270 
e
 = 
_ív
->
	`x˘_p›uœã_some_cu°s
(
tid
, 
ö
);

272 
	`CHECK_XCT_RETURN
(
e
,
log_•a˚_√eded
,
ªåycu°
,
_ív
);

274 
nvÆ
 = 
	`©omic_add_64_nv
(&
cu°_com∂ëed
,
tid
);

275 i‡(
nvÆ
 % 
PART_COUNT
 == 0) {

276 
	`TRACE
–
TRACE_ALWAYS
, "Customers %d/%d (%.0f%%)\n",

277 
nvÆ
, ()(
_sf
*
CUST_UNIT_PER_SF
),

278 ()(100*
nvÆ
)/()(
_sf
*
CUST_UNIT_PER_SF
));

282 
	`TRACE
–
TRACE_ALWAYS
, "Föished Cu°†%d .. %d \n", 
_cu°_°¨t
, 
_cu°_íd
);

283 
	}
}

294 
	gSh‹eTPCHEnv
::
	$Sh‹eTPCHEnv
()

295 : 
	$Sh‹eEnv
()

297 
_sˇlög_Á˘‹
 = 
TPCH_SCALING_FACTOR
;

299 #ifde‡
CFG_QPIPE


302 
	`£t_sched_pﬁicy
(
NULL
);

305 
	`ªgi°î_°age_c⁄èöîs
();

307 
	}
}

310 
	gSh‹eTPCHEnv
::~
	$Sh‹eTPCHEnv
()

312 
	}
}

316 
w_rc_t
 
Sh‹eTPCHEnv
::
	$lﬂd_schema
()

319 
_≤©i⁄_desc
 = 
√w
 
	`«ti⁄_t
(
	`gë_pd
());

320 
_¥egi⁄_desc
 = 
√w
 
	`ªgi⁄_t
(
	`gë_pd
());

321 
_µ¨t_desc
 = 
√w
 
	`∑π_t
(
	`gë_pd
());

322 
_psuµlõr_desc
 = 
√w
 
	`suµlõr_t
(
	`gë_pd
());

323 
_µ¨tsuµ_desc
 = 
√w
 
	`∑πsuµ_t
(
	`gë_pd
());

324 
_pcu°omî_desc
 = 
√w
 
	`cu°omî_t
(
	`gë_pd
());

325 
_p‹dîs_desc
 = 
√w
 
	`‹dîs_t
(
	`gë_pd
());

326 
_∂öeôem_desc
 = 
√w
 
	`löeôem_t
(
	`gë_pd
());

329 
_≤©i⁄_m™
 = 
√w
 
	`«ti⁄_m™_im∂
(
_≤©i⁄_desc
.
	`gë
());

330 
_¥egi⁄_m™
 = 
√w
 
	`ªgi⁄_m™_im∂
(
_¥egi⁄_desc
.
	`gë
());

331 
_µ¨t_m™
 = 
√w
 
	`∑π_m™_im∂
(
_µ¨t_desc
.
	`gë
());

332 
_psuµlõr_m™
 = 
√w
 
	`suµlõr_m™_im∂
(
_psuµlõr_desc
.
	`gë
());

333 
_µ¨tsuµ_m™
 = 
√w
 
	`∑πsuµ_m™_im∂
(
_µ¨tsuµ_desc
.
	`gë
());

334 
_pcu°omî_m™
 = 
√w
 
	`cu°omî_m™_im∂
(
_pcu°omî_desc
.
	`gë
());

335 
_p‹dîs_m™
 = 
√w
 
	`‹dîs_m™_im∂
(
_p‹dîs_desc
.
	`gë
());

336 
_∂öeôem_m™
 = 
√w
 
	`löeôem_m™_im∂
(
_∂öeôem_desc
.
	`gë
());

338  (
RCOK
);

339 
	}
}

343 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$lﬂd_™d_ªgi°î_fids
()

345 
	`W_DO
(
_≤©i⁄_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

346 
	`W_DO
(
_¥egi⁄_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

347 
	`W_DO
(
_µ¨t_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

348 
	`W_DO
(
_psuµlõr_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

349 
	`W_DO
(
_µ¨tsuµ_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

350 
	`W_DO
(
_pcu°omî_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

351 
	`W_DO
(
_p‹dîs_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

352 
	`W_DO
(
_∂öeôem_m™
->
	`lﬂd_™d_ªgi°î_fid
(
	`db
()));

353  (
RCOK
);

354 
	}
}

358 #ifde‡
CFG_QPIPE


366 
pﬁicy_t
* 
	gSh‹eTPCHEnv
::
	$gë_sched_pﬁicy
()

368 
	`CRITICAL_SECTION
(
öô_cs
,
_lﬂd_muãx
);

369  (
_sched_pﬁicy
.
	`gë
());

370 
	}
}

372 
pﬁicy_t
* 
	gSh‹eTPCHEnv
::
	$£t_sched_pﬁicy
(c⁄° * 
•ﬁicy
)

374 
	`CRITICAL_SECTION
(
öô_cs
,
_lﬂd_muãx
);

375 i‡(
•ﬁicy
) {

377 
	`TRACE
–
TRACE_ALWAYS
, "SëtögÖﬁicy (%s)\n", 
•ﬁicy
);

379 i‡–!
	`°rcmp
(
•ﬁicy
, "OS") ) {

380 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_os_t
();

381  (
_sched_pﬁicy
);

384 i‡–!
	`°rcmp
(
•ﬁicy
, "RR_CPU") ) {

385 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_º_˝u_t
();

386  (
_sched_pﬁicy
);

389 i‡–!
	`°rcmp
(
•ﬁicy
, "QUERY_CPU") ) {

390 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_quîy_˝u_t
();

391  (
_sched_pﬁicy
);

394 i‡–!
	`°rcmp
(
•ﬁicy
, "RR_MODULE") ) {

395 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_º_moduÀ_t
();

396  (
_sched_pﬁicy
);

400 
	`TRACE
–
TRACE_ALWAYS
, "Default schedulingÖolicy (OS)\n");

401 
_sched_pﬁicy
 = 
√w
 
	`pﬁicy_os_t
();

402  (
_sched_pﬁicy
);

403 
	}
}

416 
	gSh‹eTPCHEnv
::
	$öfo
() const

418 
	`TRACE
–
TRACE_ALWAYS
, "SF = (%.1f)\n", 
_sˇlög_Á˘‹
);

420 
	}
}

432 
	gSh‹eTPCHEnv
::
	$°©i°ics
()

435 
	}
}

447 
	gSh‹eTPCHEnv
::
	$°¨t
()

449  (
Sh‹eEnv
::
	`°¨t
());

450 
	}
}

452 
	gSh‹eTPCHEnv
::
	$°›
()

454  (
Sh‹eEnv
::
	`°›
());

455 
	}
}

475 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$lﬂdd©a
()

478 
	`CRITICAL_SECTION
(
lﬂd_cs
, 
_lﬂd_muãx
);

479 i‡(
_lﬂded
) {

480 
	`TRACE
–
TRACE_TRX_FLOW
,

482  (
RCOK
);

484 
	`CRITICAL_SECTION
(
sˇÀ_cs
, 
_sˇlög_muãx
);

487 
	`dbgí_öô
();

490 
time_t
 
t°¨t
 = 
	`time
(
NULL
);

500 
lﬂdîs_to_u£
 = 
ívV¨
::
	`ö°™˚
()->
	`gëV¨I¡
("db-loaders",10);

501 
tŸÆ_∑πs
 = 
_sˇlög_Á˘‹
*
PART_UNIT_PER_SF
;

502 
tŸÆ_cu°s
 = 
_sˇlög_Á˘‹
*
CUST_UNIT_PER_SF
;

503 
∑πs_≥r_thªad
 = 
tŸÆ_∑πs
/
lﬂdîs_to_u£
;

504 
cu°s_≥r_thªad
 = 
tŸÆ_cu°s
/
lﬂdîs_to_u£
;

508 
gu¨d
<
èbÀ_¸ót‹_t
> 
tc
;

509 
tc
 = 
√w
 
	`èbÀ_¸ót‹_t
(
this
, 
_sˇlög_Á˘‹
, 
lﬂdîs_to_u£
,

510 
∑πs_≥r_thªad
, 
cu°s_≥r_thªad
);

511 
tc
->
	`f‹k
();

512 
tc
->
	`joö
();

516 
gu¨d
<
checkpoöãr_t
> 
	`chk
(
√w
 
	`checkpoöãr_t
(
this
));

517 
chk
->
	`f‹k
();

520 
	`TRACE
–
TRACE_ALWAYS
, "Fúög u∞%dÜﬂdî†..\n", 
lﬂdîs_to_u£
);

521 
¨øy_gu¨d_t
< 
gu¨d
<
èbÀ_buûdî_t
> > 
	`lﬂdîs
(
√w
 gu¨d<èbÀ_buûdî_t>[
lﬂdîs_to_u£
]);

522 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

523 
∑π_°¨t
 = (
i
*
∑πs_≥r_thªad
Ë+ 
DIVISOR
;

524 
∑π_íd
 = ((
i
+1)*
∑πs_≥r_thªad
 > 
tŸÆ_∑πs
 - 1) ?

525 
tŸÆ_∑πs
 : (
i
+1)*
∑πs_≥r_thªad
 - 1;

526 
	`as£π
 (
∑π_°¨t
 <
∑π_íd
);

528 
cu°_°¨t
 = (
i
*
cu°s_≥r_thªad
Ë+ 
DIVISOR
;

529 
cu°_íd
 = ((
i
+1)*
cu°s_≥r_thªad
 > 
tŸÆ_cu°s
 - 1) ?

530 
tŸÆ_cu°s
 : (
i
+1)*
cu°s_≥r_thªad
 - 1;

531 
	`as£π
 (
cu°_°¨t
 <
cu°_íd
);

533 
lﬂdîs
[
i
] = 
√w
 
	`èbÀ_buûdî_t
(
this
, i,

534 
∑π_°¨t
, 
∑π_íd
,

535 
cu°_°¨t
, 
cu°_íd
,

536 
_sˇlög_Á˘‹
, 
lﬂdîs_to_u£
);

537 
lﬂdîs
[
i
]->
	`f‹k
();

540 
i
=0; i < 
lﬂdîs_to_u£
; i++) {

541 
lﬂdîs
[
i
]->
	`joö
();

544 
time_t
 
t°›
 = 
	`time
(
NULL
);

547 
	`TRACE
–
TRACE_STATISTICS
, "Loading finished. %dÅablesÜoaded in (%d) secs...\n",

548 
SHORE_TPCH_TABLES
, (
t°›
 - 
t°¨t
));

551 
_lﬂded
 = 
åue
;

552 
chk
->
	`joö
();

554  (
RCOK
);

555 
	}
}

567 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$check_c⁄si°ícy
()

569  (
RCOK
);

570 
	}
}

582 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$w¨mup
()

584  (
	`check_c⁄si°ícy
());

585 
	}
}

596 
	gSh‹eTPCHEnv
::
	$dump
()

599 
	}
}

602 
	gSh‹eTPCHEnv
::
	$c⁄f
()

605 
Sh‹eEnv
::
	`c⁄f
();

606 
	`upd_sf
();

608 
	}
}

627 
	gSh‹eTPCHEnv
::
	$po°_öô
()

629 
	`c⁄f
();

631 
	`W_COERCE
(
	`db
()->
	`begö_x˘
());

632 
w_rc_t
 
rc
 = 
	`_po°_öô_im∂
();

633 if(
rc
.
	`is_îr‹
()) {

634 
	`db
()->
	`ab‹t_x˘
();

635  (
rc
.
	`îr_num
());

638 
	`TRACE
–
TRACE_ALWAYS
, "-> Done\n");

639 
	`db
()->
	`commô_x˘
();

642 
	}
}

653 
w_rc_t


654 
	gSh‹eTPCHEnv
::
	$_po°_öô_im∂
()

656 
	`TRACE
–
TRACE_DEBUG
, "So far,ÇothingÅoÖad in TPC-H..\n");

657  (
RCOK
);

658 
	}
}

662 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/shore_tpch_schema.cpp

85 
	~"w‹klﬂd/çch/sh‹e_çch_schema.h
"

87 
usög
 
«me•a˚
 
	gsh‹e
;

89 
ENTER_NAMESPACE
(
çch
);

91 
	g«ti⁄_t
::
	$«ti⁄_t
(c⁄° 
uöt4_t
& 
pd
) :

92 
	`èbÀ_desc_t
("NATION", 
TPCH_NATION_FCOUNT
, 
pd
)

95 
_desc
[0].
	`£tup
(
SQL_INT
, "N_NATIONKEY");

96 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "N_NAME", 25);

97 
_desc
[2].
	`£tup
(
SQL_INT
, "N_REGIONKEY");

98 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "N_COMMENT", 152);

100 
uöt
 
keys
[1] = { 0 };

102 
uöt
 
fkeys
[1] = { 2 };

107 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

108 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

110 
	`¸óã_¥im¨y_idx_desc
("N_IDX", 0, 
keys
, 1);

112 
	`¸óã_ödex_desc
("N_FK_REGION", 0, 
fkeys
, 1, 
Ál£
);

114 
	}
}

117 
	gªgi⁄_t
::
	$ªgi⁄_t
(c⁄° 
uöt4_t
& 
pd
) :

118 
	`èbÀ_desc_t
("REGION", 
TPCH_REGION_FCOUNT
, 
pd
)

121 
_desc
[0].
	`£tup
(
SQL_INT
, "R_REGIONKEY");

122 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "R_NAME", 25);

123 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "R_COMMENT", 25);

125 
uöt
 
keys
[1] = { 0 };

128 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

129 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

131 
	`¸óã_¥im¨y_idx_desc
("R_IDX", 0, 
keys
, 1);

133 
	}
}

136 
	gsuµlõr_t
::
	$suµlõr_t
(c⁄° 
uöt4_t
& 
pd
) :

137 
	`èbÀ_desc_t
("SUPPLIER", 
TPCH_SUPPLIER_FCOUNT
, 
pd
)

140 
_desc
[0].
	`£tup
(
SQL_INT
, "S_SUPPKEY");

141 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "S_NAME", 25);

142 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "S_ADDRESS", 40);

143 
_desc
[3].
	`£tup
(
SQL_INT
, "S_NATIONKEY");

144 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "S_PHONE", 15);

145 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "S_ACCTBAL");

146 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "S_COMMENT", 101);

148 
uöt
 
keys
[1] = {0};

150 
uöt
 
fkeys
[1] = {3};

153 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

154 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

157 
	`¸óã_¥im¨y_idx_desc
("S_IDX", 0, 
keys
, 1);

159 
	`¸óã_ödex_desc
("S_FK_NATION", 0, 
fkeys
, 1, 
Ál£
);

161 
	}
}

164 
	g∑π_t
::
	$∑π_t
(c⁄° 
uöt4_t
& 
pd
) :

165 
	`èbÀ_desc_t
("PART", 
TPCH_PART_FCOUNT
, 
pd
)

168 
_desc
[0].
	`£tup
(
SQL_INT
, "P_PARTKEY");

169 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "P_NAME", 55);

170 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "P_MFGR", 25);

171 
_desc
[3].
	`£tup
(
SQL_FIXCHAR
, "P_BRAND", 10);

172 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "P_TYPE", 25);

173 
_desc
[5].
	`£tup
(
SQL_INT
, "P_SIZE");

174 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "P_CONTAINER", 10);

175 
_desc
[7].
	`£tup
(
SQL_FLOAT
, "P_RETAILPRICE");

176 
_desc
[8].
	`£tup
(
SQL_FIXCHAR
, "P_COMMENT", 23);

178 
uöt
 
keys
[1] = { 0 };

180 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

181 
	`TRACE
(
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

183 
	`¸óã_¥im¨y_idx_desc
("P_IDX", 0, 
keys
, 1);

185 
	}
}

187 
	g∑πsuµ_t
::
	$∑πsuµ_t
(c⁄° 
uöt4_t
& 
pd
) :

188 
	`èbÀ_desc_t
("PARTSUPP", 
TPCH_PARTSUPP_FCOUNT
, 
pd
)

191 
_desc
[0].
	`£tup
(
SQL_INT
, "PS_PARTKEY");

192 
_desc
[1].
	`£tup
(
SQL_INT
, "PS_SUPPKEY");

193 
_desc
[2].
	`£tup
(
SQL_INT
, "PS_AVAILQTY");

194 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "PS_SUPPLYCOST");

195 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "PS_COMMENT", 199);

197 
uöt
 
keys
[2] = { 0, 1 };

199 
uöt
 
fkeys1
[1] = { 0 };

201 
uöt
 
fkeys2
[1] = { 1 };

204 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

205 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

208 
	`¸óã_¥im¨y_idx_desc
("PS_IDX", 0, 
keys
, 2);

210 
	`¸óã_ödex_desc
("PS_FK_PART", 0, 
fkeys1
, 1, 
Ál£
);

212 
	`¸óã_ödex_desc
("PS_FK_SUPP", 0, 
fkeys2
, 1, 
Ál£
);

214 
	}
}

217 
	gcu°omî_t
::
	$cu°omî_t
(c⁄° 
uöt4_t
& 
pd
) :

218 
	`èbÀ_desc_t
("CUSTOMER", 
TPCH_CUSTOMER_FCOUNT
, 
pd
)

221 
_desc
[0].
	`£tup
(
SQL_INT
, "C_CUSTKEY");

222 
_desc
[1].
	`£tup
(
SQL_FIXCHAR
, "C_NAME", 25);

223 
_desc
[2].
	`£tup
(
SQL_FIXCHAR
, "C_ADDRESS", 40);

224 
_desc
[3].
	`£tup
(
SQL_INT
, "C_NATIONKEY");

225 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "C_PHONE", 15);

226 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "C_ACCTBAL");

227 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "C_MKTSEGMENT", 10);

228 
_desc
[7].
	`£tup
(
SQL_FIXCHAR
, "C_COMMENT", 117);

230 
uöt
 
keys
[1] = { 0 };

232 
uöt
 
fkeys
[1] = { 3 };

235 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

236 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

239 
	`¸óã_¥im¨y_idx_desc
("C_IDX", 0, 
keys
, 1);

241 
	`¸óã_ödex_desc
("C_FK_NATION", 0, 
fkeys
, 1, 
Ál£
);

243 
	}
}

246 
	g‹dîs_t
::
	$‹dîs_t
(c⁄° 
uöt4_t
& 
pd
) :

247 
	`èbÀ_desc_t
("ORDERS", 
TPCH_ORDERS_FCOUNT
, 
pd
)

250 
_desc
[0].
	`£tup
(
SQL_INT
, "O_ORDERKEY");

251 
_desc
[1].
	`£tup
(
SQL_INT
, "O_CUSTKEY");

252 
_desc
[2].
	`£tup
(
SQL_CHAR
, "O_ORDERSTATUS");

253 
_desc
[3].
	`£tup
(
SQL_FLOAT
, "O_TOTALPRICE");

254 
_desc
[4].
	`£tup
(
SQL_FIXCHAR
, "O_ORDERDATE", 15);

255 
_desc
[5].
	`£tup
(
SQL_FIXCHAR
, "O_ORDERPRIORITY", 15);

256 
_desc
[6].
	`£tup
(
SQL_FIXCHAR
, "O_CLERK", 15);

257 
_desc
[7].
	`£tup
(
SQL_INT
, "O_SHIPPRIORITY");

258 
_desc
[8].
	`£tup
(
SQL_FIXCHAR
, "O_COMMENT", 79);

260 
uöt
 
keys
[1] = { 0 };

262 
uöt
 
fkeys
[1] = { 1 };

264 
uöt
 
keys2
[1] = { 4 };

267 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

268 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

271 
	`¸óã_¥im¨y_idx_desc
("O_IDX", 0, 
keys
, 1);

273 
	`¸óã_ödex_desc
("O_FK_CUSTKEY", 0, 
fkeys
, 1, 
Ál£
);

275 
	`¸óã_ödex_desc
("O_IDX_ORDERDATE", 0, 
keys2
, 1, 
Ál£
);

277 
	}
}

280 
	glöeôem_t
::
	$löeôem_t
(c⁄° 
uöt4_t
& 
pd
) :

281 
	`èbÀ_desc_t
("LINEITEM", 
TPCH_LINEITEM_FCOUNT
, 
pd
)

284 
_desc
[0].
	`£tup
(
SQL_INT
, "L_ORDERKEY");

285 
_desc
[1].
	`£tup
(
SQL_INT
, "L_PARTKEY");

286 
_desc
[2].
	`£tup
(
SQL_INT
, "L_SUPPKEY");

287 
_desc
[3].
	`£tup
(
SQL_INT
, "L_LINENUMBER");

288 
_desc
[4].
	`£tup
(
SQL_FLOAT
, "L_QUANTITY");

289 
_desc
[5].
	`£tup
(
SQL_FLOAT
, "L_EXTENDEDPRICE");

290 
_desc
[6].
	`£tup
(
SQL_FLOAT
, "L_DISCOUNT");

291 
_desc
[7].
	`£tup
(
SQL_FLOAT
, "L_TAX");

292 
_desc
[8].
	`£tup
(
SQL_CHAR
, "L_RETURNFLAG");

293 
_desc
[9].
	`£tup
(
SQL_CHAR
, "L_LINESTATUS");

294 
_desc
[10].
	`£tup
(
SQL_FIXCHAR
, "L_SHIPDATE", 15);

295 
_desc
[11].
	`£tup
(
SQL_FIXCHAR
, "L_COMMITDATE", 15);

296 
_desc
[12].
	`£tup
(
SQL_FIXCHAR
, "L_RECEIPTDATE", 15);

297 
_desc
[13].
	`£tup
(
SQL_FIXCHAR
, "L_SHIPINSTRUCT", 25);

298 
_desc
[14].
	`£tup
(
SQL_FIXCHAR
, "L_SHIPMODE", 10);

299 
_desc
[15].
	`£tup
(
SQL_FIXCHAR
, "L_COMMENT", 44);

301 
uöt
 
keys
[2] = {0, 3};

303 
uöt
 
fkeys1
[1] = { 0 };

305 
uöt
 
fkeys2
[2] = {1, 2};

307 
uöt
 
keys2
[1] = {10};

309 
uöt
 
keys3
[1] = {12};

313 i‡((
pd
 & 
PD_NORMAL
Ë&& !’d & 
PD_NOLOCK
)) {

314 
	`TRACE
–
TRACE_DEBUG
, "Reguœ∏idx†f‹ (%s)\n", 
_«me
);

317 
	`¸óã_¥im¨y_idx_desc
("L_IDX", 0, 
keys
, 2);

319 
	`¸óã_ödex_desc
("L_FK_ORDERKEY", 0, 
fkeys1
, 1, 
Ál£
);

320 
	`¸óã_ödex_desc
("L_FK_PARTSUPP", 0, 
fkeys2
, 2, 
Ál£
);

322 
	`¸óã_ödex_desc
("L_IDX_SHIPDATE", 0, 
keys2
, 1, 
Ál£
);

323 
	`¸óã_ödex_desc
("L_IDX_RECEIPTDATE", 0, 
keys3
, 1, 
Ál£
);

325 
	}
}

328 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/shore_tpch_schema_man.cpp

34 
	~"w‹klﬂd/çch/sh‹e_çch_schema_m™.h
"

35 
	~"utû.h
"

37 
usög
 
«me•a˚
 
	gsh‹e
;

40 
ENTER_NAMESPACE
(
çch
);

55 
w_rc_t
 
	g«ti⁄_m™_im∂
::
	$n_ödex_¥obe
(
ss_m
* 
db
,

56 
«ti⁄_tu∂e
* 
±u∂e
,

57 c⁄° 
n_«ti⁄key
)

59 
	`as£π
 (
±u∂e
);

60 
±u∂e
->
	`£t_vÆue
(0, 
n_«ti⁄key
);

61  (
	`ödex_¥obe_by_«me
(
db
, "N_IDX", 
±u∂e
));

62 
	}
}

70 
w_rc_t
 
	gªgi⁄_m™_im∂
::
	$r_ödex_¥obe
(
ss_m
* 
db
,

71 
ªgi⁄_tu∂e
* 
±u∂e
,

72 c⁄° 
r_ªgi⁄key
)

74 
	`as£π
 (
±u∂e
);

75 
±u∂e
->
	`£t_vÆue
(0, 
r_ªgi⁄key
);

76  (
	`ödex_¥obe_by_«me
(
db
, "R_IDX", 
±u∂e
));

77 
	}
}

83 
w_rc_t
 
	g∑π_m™_im∂
::
	$p_ödex_¥obe
(
ss_m
* 
db
,

84 
∑π_tu∂e
* 
±u∂e
,

85 c⁄° 
p_∑πkey
)

87 
	`as£π
(
±u∂e
);

89 
±u∂e
->
	`£t_vÆue
(0, 
p_∑πkey
);

90  (
	`ödex_¥obe_by_«me
(
db
, "P_IDX", 
±u∂e
));

91 
	}
}

99 
w_rc_t
 
	gsuµlõr_m™_im∂
::
	$s_ödex_¥obe
(
ss_m
* 
db
,

100 
suµlõr_tu∂e
* 
±u∂e
,

101 c⁄° 
s_suµkey
)

103 
	`as£π
 (
±u∂e
);

104 
±u∂e
->
	`£t_vÆue
(0, 
s_suµkey
);

105  (
	`ödex_¥obe_by_«me
(
db
, "S_IDX", 
±u∂e
));

106 
	}
}

114 
w_rc_t
 
	g∑πsuµ_m™_im∂
::
	$ps_ödex_¥obe
(
ss_m
* 
db
,

115 
∑πsuµ_tu∂e
* 
±u∂e
,

116 c⁄° 
ps_∑πkey
,

117 c⁄° 
ps_suµkey
)

119 
	`as£π
 (
±u∂e
);

120 
±u∂e
->
	`£t_vÆue
(0, 
ps_∑πkey
);

121 
±u∂e
->
	`£t_vÆue
(1, 
ps_suµkey
);

122  (
	`ödex_¥obe_by_«me
(
db
, "PS_IDX", 
±u∂e
));

123 
	}
}

176 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_ödex_¥obe
(
ss_m
* 
db
,

177 
cu°omî_tu∂e
* 
±u∂e
,

178 c⁄° 
c_cu°key
)

180 
	`as£π
 (
±u∂e
);

181  (
	`c_ödex_¥obe_by_«me
(
db
, "C_IDX", 
±u∂e
, 
c_cu°key
));

182 
	}
}

184 
w_rc_t
 
	gcu°omî_m™_im∂
::
	$c_ödex_¥obe_by_«me
(
ss_m
* 
db
,

185 c⁄° * 
idx_«me
,

186 
cu°omî_tu∂e
* 
±u∂e
,

187 c⁄° 
c_cu°key
)

189 
	`as£π
 (
idx_«me
);

190 
±u∂e
->
	`£t_vÆue
(0, 
c_cu°key
);

191  (
	`ödex_¥obe_by_«me
(
db
, 
idx_«me
, 
±u∂e
));

192 
	}
}

200 
w_rc_t
 
	g‹dîs_m™_im∂
::
	$o_gë_ôî_by_ödex
(
ss_m
* 
db
,

201 
‹dîs_ödex_ôî
* &
ôî
,

202 
‹dîs_tu∂e
* 
±u∂e
,

203 
ªp_row_t
 &
ª∂ow
,

204 
ªp_row_t
 &
ªphigh
,

205 c⁄° 
c_‹dîkey
,

206 
lock_mode_t
 
Æm
,

207 
boﬁ
 
√ed_tu∂e
)

209 
	`as£π
 (
±u∂e
);

212 
	`as£π
 (
_±abÀ
);

213 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("O_IDX");

214 
	`as£π
 (
pödex
);

217 
±u∂e
->
	`£t_vÆue
(0, 
c_‹dîkey
);

219 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

220 
	`as£π
 (
ª∂ow
.
_de°
);

223 
±u∂e
->
	`£t_vÆue
(0, 
c_‹dîkey
 + 1);

225 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

226 
	`as£π
 (
ªphigh
.
_de°
);

228 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

229 
Æm
, 
√ed_tu∂e
,

230 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

231 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

232  (
RCOK
);

233 
	}
}

235 
w_rc_t
 
	g‹dîs_m™_im∂
::
	$o_gë_ôî_by_födex
(
ss_m
* 
db
,

236 
‹dîs_ödex_ôî
* &
ôî
,

237 
‹dîs_tu∂e
* 
±u∂e
,

238 
ªp_row_t
 &
ª∂ow
,

239 
ªp_row_t
 &
ªphigh
,

240 c⁄° 
o_cu°key
,

241 
lock_mode_t
 
Æm
,

242 
boﬁ
 
√ed_tu∂e
)

244 
	`as£π
 (
±u∂e
);

247 
	`as£π
 (
_±abÀ
);

248 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("O_FK_CUSTKEY");

249 
	`as£π
 (
pödex
);

252 
±u∂e
->
	`£t_vÆue
(1, 
o_cu°key
);

254 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

255 
	`as£π
 (
ª∂ow
.
_de°
);

258 
±u∂e
->
	`£t_vÆue
(1, 
o_cu°key
 + 1);

260 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

261 
	`as£π
 (
ªphigh
.
_de°
);

263 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

264 
Æm
, 
√ed_tu∂e
,

265 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

266 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

267  (
RCOK
);

268 
	}
}

270 
w_rc_t
 
	g‹dîs_m™_im∂
::
	$o_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

271 
‹dîs_ödex_ôî
* &
ôî
,

272 
‹dîs_tu∂e
* 
±u∂e
,

273 
ªp_row_t
 &
ª∂ow
,

274 
ªp_row_t
 &
ªphigh
,

275 c⁄° 
time_t
 
low_o_‹dîd©e
,

276 c⁄° 
time_t
 
high_o_‹dîd©e
,

277 
lock_mode_t
 
Æm
,

278 
boﬁ
 
√ed_tu∂e
)

280 
	`as£π
(
±u∂e
);

283 
	`as£π
 (
_±abÀ
);

284 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("O_IDX_ORDERDATE");

285 
	`as£π
 (
pödex
);

288 
low_d©e
[15];

289 
	`timë_to_°r
(
low_d©e
, 
low_o_‹dîd©e
);

290 
±u∂e
->
	`£t_vÆue
(4, 
low_d©e
);

292 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

293 
	`as£π
 (
ª∂ow
.
_de°
);

296 
high_d©e
[15];

297 
	`timë_to_°r
(
high_d©e
, 
high_o_‹dîd©e
+1);

298 
±u∂e
->
	`£t_vÆue
(4, 
high_d©e
);

300 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

301 
	`as£π
 (
ªphigh
.
_de°
);

304 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

305 
Æm
, 
√ed_tu∂e
,

306 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

307 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

308  (
RCOK
);

309 
	}
}

316 
w_rc_t
 
	glöeôem_m™_im∂
::
	$l_gë_ønge_ôî_by_ª˚ùtd©e_ödex
(
ss_m
* 
db
,

317 
löeôem_ödex_ôî
* &
ôî
,

318 
löeôem_tu∂e
* 
±u∂e
,

319 
ªp_row_t
 &
ª∂ow
,

320 
ªp_row_t
 &
ªphigh
,

321 c⁄° 
time_t
 
low_l_ª˚ùtd©e
,

322 c⁄° 
time_t
 
high_l_ª˚ùtd©e
,

323 
lock_mode_t
 
Æm
,

324 
boﬁ
 
√ed_tu∂e
)

326 
	`as£π
 (
±u∂e
);

329 
	`as£π
 (
_±abÀ
);

330 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("L_IDX_RECEIPTDATE");

331 
	`as£π
 (
pödex
);

334 
lowd©e
[15];

335 
	`timë_to_°r
(
lowd©e
, 
low_l_ª˚ùtd©e
);

336 
±u∂e
->
	`£t_vÆue
(12, 
lowd©e
);

338 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

339 
	`as£π
 (
ª∂ow
.
_de°
);

342 
highd©e
[15];

343 
	`timë_to_°r
(
highd©e
, 
high_l_ª˚ùtd©e
+1);

344 
±u∂e
->
	`£t_vÆue
(12,
highd©e
 );

346 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

347 
	`as£π
 (
ªphigh
.
_de°
);

350 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

351 
Æm
, 
√ed_tu∂e
,

352 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

353 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

354  (
RCOK
);

355 
	}
}

357 
w_rc_t
 
	glöeôem_m™_im∂
::
	$l_gë_ønge_ôî_by_ödex
(
ss_m
* 
db
,

358 
löeôem_ödex_ôî
* &
ôî
,

359 
löeôem_tu∂e
* 
±u∂e
,

360 
ªp_row_t
 &
ª∂ow
,

361 
ªp_row_t
 &
ªphigh
,

362 c⁄° 
time_t
 
low_l_shùd©e
,

363 c⁄° 
time_t
 
high_l_shùd©e
,

364 
lock_mode_t
 
Æm
,

365 
boﬁ
 
√ed_tu∂e
)

367 
	`as£π
 (
±u∂e
);

370 
	`as£π
 (
_±abÀ
);

371 
ödex_desc_t
* 
pödex
 = 
_±abÀ
->
	`föd_ödex
("L_IDX_SHIPDATE");

372 
	`as£π
 (
pödex
);

375 
lowd©e
[15];

376 
	`timë_to_°r
(
lowd©e
, 
low_l_shùd©e
);

377 
±u∂e
->
	`£t_vÆue
(10, 
lowd©e
);

379 
lowsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ª∂ow
);

380 
	`as£π
 (
ª∂ow
.
_de°
);

383 
highd©e
[15];

384 
	`timë_to_°r
(
highd©e
, 
high_l_shùd©e
+1);

385 
±u∂e
->
	`£t_vÆue
(10, 
highd©e
);

387 
highsz
 = 
	`f‹m©_key
(
pödex
, 
±u∂e
, 
ªphigh
);

388 
	`as£π
 (
ªphigh
.
_de°
);

391 
	`W_DO
(
	`gë_ôî_f‹_ödex_sˇn
(
db
, 
pödex
, 
ôî
,

392 
Æm
, 
√ed_tu∂e
,

393 
sˇn_ödex_i
::
ge
, 
	`vec_t
(
ª∂ow
.
_de°
, 
lowsz
),

394 
sˇn_ödex_i
::
…
, 
	`vec_t
(
ªphigh
.
_de°
, 
highsz
)));

395  (
RCOK
);

396 
	}
}

399 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/shore_tpch_xct.cpp

32 
	~"w‹klﬂd/çch/sh‹e_çch_ív.h
"

33 
	~"w‹klﬂd/çch/çch_øndom.h
"

34 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

35 
	~"w‹klﬂd/çch/çch_utû.h
"

37 
	~<ve˘‹
>

38 
	~<m≠
>

39 
	~<£t
>

40 
	~<numîic
>

41 
	~<Æg‹ôhm
>

42 
	~<°dio.h
>

43 
	~<f°ªam
>

44 
	~"w‹klﬂd/çch/dbgí/dss.h
"

45 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

50 
	~"sm_ba£.h
"

52 
usög
 
«me•a˚
 
	g°d
;

53 
usög
 
«me•a˚
 
	gsh‹e
;

54 
usög
 
«me•a˚
 
	gdbgíçch
;

58 
ENTER_NAMESPACE
(
çch
);

69 
__thªad
 
Sh‹eTPCHTrxSèts
 
	gmy_°©s
;

71 
	gSh‹eTPCHEnv
::
	$ív_thªad_öô
()

73 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

74 
_°©m≠
[
	`±hªad_£lf
()] = &
my_°©s
;

75 
	}
}

77 
	gSh‹eTPCHEnv
::
	$ív_thªad_föi
()

79 
	`CRITICAL_SECTION
(
°©_muãx_cs
, 
_°©m≠_muãx
);

80 
_°©m≠
.
	`îa£
(
	`±hªad_£lf
());

81 
	}
}

92 
Sh‹eTPCHTrxSèts
 
	gSh‹eTPCHEnv
::
	$_gë_°©s
()

94 
	`CRITICAL_SECTION
(
cs
, 
_°©m≠_muãx
);

95 
Sh‹eTPCHTrxSèts
 
rvÆ
;

96 
rvÆ
 -=Ñval;

97 
°©m≠_t
::
ôî©‹
 
ô
=
_°©m≠
.
	`begö
(); ià!_°©m≠.
	`íd
(); ++it)

98 
rvÆ
 +*
ô
->
£c⁄d
;

99  (
rvÆ
);

100 
	}
}

111 
	gSh‹eTPCHEnv
::
	$ª£t_°©s
()

113 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

114 
_œ°_°©s
 = 
	`_gë_°©s
();

115 
	}
}

126 
	gSh‹eTPCHEnv
::
	$¥öt_throughput
(c⁄° 
iQuîõdSF
,

127 c⁄° 
iS¥ód
,

128 c⁄° 
iNumOfThªads
,

129 c⁄° 
dñay
,

130 c⁄° 
ul⁄g_t
 
mioch
,

131 c⁄° 
avg˝uußge
)

133 
	`CRITICAL_SECTION
(
œ°_°©s_cs
, 
_œ°_°©s_muãx
);

136 
Sh‹eTPCHTrxSèts
 
cuºít_°©s
 = 
	`_gë_°©s
();

139 
cuºít_°©s
 -
_œ°_°©s
;

141 
uöt
 
åxs_©t
 = 
cuºít_°©s
.
©ãm±ed
.
	`tŸÆ
();

142 
uöt
 
åxs_abt
 = 
cuºít_°©s
.
Áûed
.
	`tŸÆ
();

143 
uöt
 
åxs_dld
 = 
cuºít_°©s
.
dódlocked
.
	`tŸÆ
();

145 
	`TRACE
–
TRACE_ALWAYS
, "*******\n" \

156 
iQuîõdSF
,

157 (
iS¥ód
 ? "Yes" : "No"),

158 
iNumOfThªads
, 
åxs_©t
, 
åxs_abt
, 
åxs_dld
,

159 
dñay
, 
mioch
/dñay, 
avg˝uußge
,

160 100*
avg˝uußge
/
	`gë_max_˝u_cou¡
(),

161 (
åxs_©t
-
åxs_abt
-
åxs_dld
)/
dñay
);

162 
	}
}

224 #unde‡
DO_PRINT_TPCH_RECS


228 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$_gí_⁄e_«ti⁄
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
)

230 
tu∂e_gu¨d
<
«ti⁄_m™_im∂
> 
	`¥«
(
_≤©i⁄_m™
);

231 
¥«
->
_ªp
 = &
¨ïrow
;

233 
code_t
 
ac
;

234 
	`mk_«ti⁄
(
id
, &
ac
);

236 #ifde‡
DO_PRINT_TPCH_RECS


237 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%s,%ld,%s,%d\n",

238 
ac
.
code
,ác.
ãxt
,ác.
joö
,ác.
commít
,ác.
˛í
);

241 
¥«
->
	`£t_vÆue
(0, ()
ac
.
code
);

242 
¥«
->
	`£t_vÆue
(1, 
ac
.
ãxt
);

243 
¥«
->
	`£t_vÆue
(2, ()
ac
.
joö
);

244 
¥«
->
	`£t_vÆue
(3, 
ac
.
commít
);

245 
	`W_DO
(
_≤©i⁄_m™
->
	`add_tu∂e
(
_pssm
, 
¥«
));

247  
RCOK
;

248 
	}
}

251 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$_gí_⁄e_ªgi⁄
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
)

253 
tu∂e_gu¨d
<
ªgi⁄_m™_im∂
> 
	`¥ª
(
_¥egi⁄_m™
);

254 
¥ª
->
_ªp
 = &
¨ïrow
;

256 
code_t
 
ac
;

257 
	`mk_ªgi⁄
(
id
, &
ac
);

259 #ifde‡
DO_PRINT_TPCH_RECS


260 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%s,%s,%d\n",

261 
ac
.
code
,ác.
ãxt
,ác.
commít
,ác.
˛í
);

264 
¥ª
->
	`£t_vÆue
(0, ()
ac
.
code
);

265 
¥ª
->
	`£t_vÆue
(1, 
ac
.
ãxt
);

266 
¥ª
->
	`£t_vÆue
(2, 
ac
.
commít
);

267 
	`W_DO
(
_¥egi⁄_m™
->
	`add_tu∂e
(
_pssm
, 
¥ª
));

269  
RCOK
;

270 
	}
}

273 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$_gí_⁄e_suµlõr
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
)

275 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥su
(
_psuµlõr_m™
);

276 
¥su
->
_ªp
 = &
¨ïrow
;

278 
dbgíçch
::
suµlõr_t
 
as
;

279 
	`mk_suµ
(
id
, &
as
);

281 #ifde‡
DO_PRINT_TPCH_RECS


282 i‡(
id
%100==0) {

283 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%s,%s,%d,%ld,%s,%ld,%s,%d\n",

284 
as
.
suµkey
,as.
«me
,as.
addªss
,as.
Æí
,as.
«ti⁄_code
,

285 
as
.
ph⁄e
,as.
ac˘bÆ
,as.
commít
,as.
˛í
);

289 
¥su
->
	`£t_vÆue
(0, ()
as
.
suµkey
);

290 
¥su
->
	`£t_vÆue
(1, 
as
.
«me
);

291 
¥su
->
	`£t_vÆue
(2, 
as
.
addªss
);

292 
¥su
->
	`£t_vÆue
(3, ()
as
.
«ti⁄_code
);

293 
¥su
->
	`£t_vÆue
(4, 
as
.
ph⁄e
);

294 
¥su
->
	`£t_vÆue
(5, ()
as
.
ac˘bÆ
);

295 
¥su
->
	`£t_vÆue
(6, 
as
.
commít
);

296 
	`W_DO
(
_psuµlõr_m™
->
	`add_tu∂e
(
_pssm
, 
¥su
));

298  
RCOK
;

299 
	}
}

302 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$_gí_⁄e_∑π_ba£d
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
)

304 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑
(
_µ¨t_m™
);

305 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥ps
(
_µ¨tsuµ_m™
);

307 
¥∑
->
_ªp
 = &
¨ïrow
;

308 
¥ps
->
_ªp
 = &
¨ïrow
;

311 
dbgíçch
::
∑π_t
 
≠
;

312 
	`mk_∑π
(
id
, &
≠
);

314 #ifde‡
DO_PRINT_TPCH_RECS


315 i‡(
id
%100==0) {

316 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%s,%s,%s,%s,%ld,%s,%ld,%s\n",

317 
≠
.
∑πkey
,≠.
«me
,≠.
mfgr
,≠.
bønd
,≠.
ty≥
,

318 
≠
.
size
,≠.
c⁄èöî
,≠.
ªèû¥i˚
,≠.
commít
);

322 
¥∑
->
	`£t_vÆue
(0, ()
≠
.
∑πkey
);

323 
¥∑
->
	`£t_vÆue
(1, 
≠
.
«me
);

324 
¥∑
->
	`£t_vÆue
(2, 
≠
.
mfgr
);

325 
¥∑
->
	`£t_vÆue
(3, 
≠
.
bønd
);

326 
¥∑
->
	`£t_vÆue
(4, 
≠
.
ty≥
);

327 
¥∑
->
	`£t_vÆue
(5, ()
≠
.
size
);

328 
¥∑
->
	`£t_vÆue
(6, 
≠
.
c⁄èöî
);

329 
¥∑
->
	`£t_vÆue
(7, ()
≠
.
ªèû¥i˚
);

330 
¥∑
->
	`£t_vÆue
(8, 
≠
.
commít
);

331 
	`W_DO
(
_µ¨t_m™
->
	`add_tu∂e
(
_pssm
, 
¥∑
));

333 
i
=0; i< 
SUPP_PER_PART
; ++i) {

335 #ifde‡
DO_PRINT_TPCH_RECS


336 i‡(
id
%100==0) {

337 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%ld,%ld,%ld,%s\n",

338 
≠
.
s
[
i
].
∑πkey
,≠.s[i].
suµkey
,

339 
≠
.
s
[
i
].
qty
,≠.s[i].
sco°
,

340 
≠
.
s
[
i
].
commít
);

345 
¥ps
->
	`£t_vÆue
(0, ()
≠
.
s
[
i
].
∑πkey
);

346 
¥ps
->
	`£t_vÆue
(1, ()
≠
.
s
[
i
].
suµkey
);

347 
¥ps
->
	`£t_vÆue
(2, ()
≠
.
s
[
i
].
qty
);

348 
¥ps
->
	`£t_vÆue
(3, ()
≠
.
s
[
i
].
sco°
);

349 
¥ps
->
	`£t_vÆue
(4, 
≠
.
s
[
i
].
commít
);

350 
	`W_DO
(
_µ¨tsuµ_m™
->
	`add_tu∂e
(
_pssm
, 
¥ps
));

353  
RCOK
;

354 
	}
}

357 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$_gí_⁄e_cu°_ba£d
(c⁄° 
id
, 
ªp_row_t
& 
¨ïrow
)

359 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu
(
_pcu°omî_m™
);

360 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹
(
_p‹dîs_m™
);

361 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥li
(
_∂öeôem_m™
);

363 
¥cu
->
_ªp
 = &
¨ïrow
;

364 
¥‹
->
_ªp
 = &
¨ïrow
;

365 
¥li
->
_ªp
 = &
¨ïrow
;

368 
dbgíçch
::
cu°omî_t
 
ac
;

369 
	`mk_cu°
(
id
, &
ac
);

371 #ifde‡
DO_PRINT_TPCH_RECS


372 i‡(
id
%100==0) {

373 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%s,%s,%ld,%s,%ld,%s,%s\n",

374 
ac
.
cu°key
,ac.
«me
,ac.
addªss
,ac.
«ti⁄_code
,

375 
ac
.
ph⁄e
,ac.
ac˘bÆ
,ac.
mkt£gmít
,ac.
commít
);

379 
¥cu
->
	`£t_vÆue
(0, ()
ac
.
cu°key
);

380 
¥cu
->
	`£t_vÆue
(1, 
ac
.
«me
);

381 
¥cu
->
	`£t_vÆue
(2, 
ac
.
addªss
);

382 
¥cu
->
	`£t_vÆue
(3, ()
ac
.
«ti⁄_code
);

383 
¥cu
->
	`£t_vÆue
(4, 
ac
.
ph⁄e
);

384 
¥cu
->
	`£t_vÆue
(5, ()
ac
.
ac˘bÆ
);

385 
¥cu
->
	`£t_vÆue
(6, 
ac
.
mkt£gmít
);

386 
¥cu
->
	`£t_vÆue
(7, 
ac
.
commít
);

387 
	`W_DO
–
_pcu°omî_m™
->
	`add_tu∂e
(
_pssm
, 
¥cu
));

389 
i
=0; i<
ORDERS_PER_CUSTOMER
; ++i) {

391 
dbgíçch
::
‹dî_t
 
ao
;

392 
	`mk_‹dî
(
id
*10+
i
, &
ao
, 0);

394 #ifde‡
DO_PRINT_TPCH_RECS


395 i‡(
id
%100==0) {

396 
	`TRACE
–
TRACE_ALWAYS
, "%ld,%ld,%s,%ld,%s,%s,%s,%ld,%s\n",

397 
ao
.
okey
,ao.
cu°key
,ao.
‹dî°©us
,ao.
tŸÆ¥i˚
,

398 
ao
.
od©e
,ao.
›ri‹ôy
,ao.
˛îk
,ao.
•ri‹ôy
,ao.
commít
);

402 
¥‹
->
	`£t_vÆue
(0, ()
ao
.
okey
);

403 
¥‹
->
	`£t_vÆue
(1, ()
ao
.
cu°key
);

404 
¥‹
->
	`£t_vÆue
(2, 
ao
.
‹dî°©us
);

405 
¥‹
->
	`£t_vÆue
(3, ()
ao
.
tŸÆ¥i˚
);

406 
¥‹
->
	`£t_vÆue
(4, 
ao
.
od©e
);

407 
¥‹
->
	`£t_vÆue
(5, 
ao
.
›ri‹ôy
);

408 
¥‹
->
	`£t_vÆue
(6, 
ao
.
˛îk
);

409 
¥‹
->
	`£t_vÆue
(7, ()
ao
.
•ri‹ôy
);

410 
¥‹
->
	`£t_vÆue
(8, 
ao
.
commít
);

411 
	`W_DO
(
_p‹dîs_m™
->
	`add_tu∂e
(
_pssm
, 
¥‹
));

413 
j
=0; j<
ao
.
löes
; ++j) {

415 #ifde‡
DO_PRINT_TPCH_RECS


416 i‡(
id
%100==0) {

417 
	`TRACE
(
TRACE_ALWAYS
,"%ld,%ld,%ld,%ld,%ld,%ld,%ld,%ld,%s,%s,%s,%s,%s,%s,%s,%s\n",

418 
ao
.
l
[
j
].
okey
,ao.l[j].
∑πkey
,ao.l[j].
suµkey
,

419 
ao
.
l
[
j
].
l˙t
,ao.l[j].
qu™tôy
,ao.l[j].
ïri˚
,

420 
ao
.
l
[
j
].
discou¡
,ao.l[j].
èx
,

421 
ao
.
l
[
j
].
rÊag
,ao.l[j].
l°©us
,

422 
ao
.
l
[
j
].
cd©e
,ao.l[j].
sd©e
,ao.l[j].
rd©e
,

423 
ao
.
l
[
j
].
shùö°ru˘
,ao.l[j].
shùmode
,ao.l[j].
commít
);

427 
¥li
->
	`£t_vÆue
(0, ()
ao
.
l
[
j
].
okey
);

428 
¥li
->
	`£t_vÆue
(1, ()
ao
.
l
[
j
].
∑πkey
);

429 
¥li
->
	`£t_vÆue
(2, ()
ao
.
l
[
j
].
suµkey
);

430 
¥li
->
	`£t_vÆue
(3, ()
ao
.
l
[
j
].
l˙t
);

431 
¥li
->
	`£t_vÆue
(4, ()
ao
.
l
[
j
].
qu™tôy
);

432 
¥li
->
	`£t_vÆue
(5, ()
ao
.
l
[
j
].
ïri˚
);

433 
¥li
->
	`£t_vÆue
(6, ()
ao
.
l
[
j
].
discou¡
);

434 
¥li
->
	`£t_vÆue
(7, ()
ao
.
l
[
j
].
èx
);

435 
¥li
->
	`£t_vÆue
(8, 
ao
.
l
[
j
].
rÊag
);

436 
¥li
->
	`£t_vÆue
(9, 
ao
.
l
[
j
].
l°©us
);

437 
¥li
->
	`£t_vÆue
(10, 
ao
.
l
[
j
].
cd©e
);

438 
¥li
->
	`£t_vÆue
(11, 
ao
.
l
[
j
].
sd©e
);

439 
¥li
->
	`£t_vÆue
(12, 
ao
.
l
[
j
].
rd©e
);

440 
¥li
->
	`£t_vÆue
(13, 
ao
.
l
[
j
].
shùö°ru˘
);

441 
¥li
->
	`£t_vÆue
(14, 
ao
.
l
[
j
].
shùmode
);

442 
¥li
->
	`£t_vÆue
(15, 
ao
.
l
[
j
].
commít
);

443 
	`W_DO
(
_∂öeôem_m™
->
	`add_tu∂e
(
_pssm
, 
¥li
));

447  
RCOK
;

448 
	}
}

457 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_p›uœã_ba£löe
(const ,

458 
p›uœã_ba£löe_öput_t
& 
ö
)

461 
	`as£π
 (
_pssm
);

462 
	`as£π
 (
_öôülized
);

465 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

466 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

469 
	`TRACE
–
TRACE_ALWAYS
, "Building NATION !!!\n");

470 
i
=0; i<
NO_NATIONS
; ++i) {

471 
	`W_DO
(
	`_gí_⁄e_«ti⁄
(
i
, 
¨ïrow
));

474 
	`TRACE
–
TRACE_ALWAYS
, "Building REGION !!!\n");

475 
i
=0; i<
NO_REGIONS
; ++i) {

476 
	`W_DO
(
	`_gí_⁄e_ªgi⁄
(
i
, 
¨ïrow
));

479 
	`TRACE
–
TRACE_ALWAYS
, "Building SUPPLIER !!!\n");

480 
i
=0; i<
ö
.
_sf
*
SUPPLIER_PER_SF
; ++i) {

481 
	`W_DO
(
	`_gí_⁄e_suµlõr
(
i
, 
¨ïrow
));

484 
	`W_COERCE
(
_pssm
->
	`commô_x˘
());

485 
	`W_COERCE
(
_pssm
->
	`begö_x˘
());

488 i‡(
ö
.
_lﬂdî_cou¡
 == 1) {

489 
sf
=
ö
.
_sf
;

490 
µsf
=
PART_PER_SF
;

491 
	`TRACE
–
TRACE_ALWAYS
, "Buûdög PARTSánd PARTSUPP (%d)!!!\n",
sf
*
µsf
);

493 
°ï
=
ö
.
_sf
*
PART_PER_SF
/10;

494 
i
=0; i<
ö
.
_sf
*
PART_PER_SF
; ++i) {

495 
	`W_DO
(
	`_gí_⁄e_∑π_ba£d
(
i
, 
¨ïrow
));

496 i‡(
i
>0 && i%
°ï
==0) {

497 
	`TRACE
–
TRACE_ALWAYS
, "PARTS-PARTSUPP(%d\%)!!!\n", 10*
i
/
°ï
);

498 
	`W_COERCE
(
_pssm
->
	`commô_x˘
());

499 
	`W_COERCE
(
_pssm
->
	`begö_x˘
());

503 
	`TRACE
–
TRACE_ALWAYS
, "Starting PARTS !!!\n");

504 
i
 = 0; i < 
ö
.
_lﬂdî_cou¡
; ++i) {

505 
°¨t
 = 
i
 * 
ö
.
_∑πs_≥r_thªad
;

506 
íd
 = 
°¨t
 + 
ö
.
_divis‹
 - 1;

507 
	`TRACE
(
TRACE_ALWAYS
, "P¨t†%d .. %d\n", 
°¨t
, 
íd
);

508 
j
 = 
°¨t
; j < 
íd
; ++j) {

509 
	`W_DO
(
	`_gí_⁄e_∑π_ba£d
(
j
, 
¨ïrow
));

515 i‡(
ö
.
_lﬂdî_cou¡
 == 1) {

516 
sf
=
ö
.
_sf
;

517 
˝sf
=
CUSTOMER_PER_SF
;

518 
	`TRACE
–
TRACE_ALWAYS
,"Buûdög CUSTS, ORDERS, LINEITEM (%d)!!!\n",
sf
*
˝sf
);

520 
°ï
=
ö
.
_sf
*
CUSTOMER_PER_SF
/10;

521 
°ï100
=
ö
.
_sf
*
CUSTOMER_PER_SF
/100;

522 
cuºít
=0;

523 
i
=0; i<
ö
.
_sf
*
CUSTOMER_PER_SF
; ++i) {

524 
	`W_DO
(
	`_gí_⁄e_cu°_ba£d
(
i
,
¨ïrow
));

525 i‡(
i
>0 && i%
°ï
==0) {

526 
	`TRACE
(
TRACE_ALWAYS
,"\nCUSTS-ORDERS-LINEITEM(%d\%)!\n",100*
i
/
°ï
);

528 i‡(
i
>0 && i%
°ï100
==0) {

529 
	`W_COERCE
(
_pssm
->
	`commô_x˘
());

530 
	`W_COERCE
(
_pssm
->
	`begö_x˘
());

532 i‡(
cuºít
==1000) {

533 
	`¥ötf
(".");

534 
cuºít
=0;

536 
cuºít
++;

540 
	`TRACE
–
TRACE_ALWAYS
, "Starting CUSTS !!!\n");

541 
i
=0; i < 
ö
.
_lﬂdî_cou¡
; ++i) {

542 
°¨t
 = 
i
*
ö
.
_cu°s_≥r_thªad
;

543 
íd
 = 
°¨t
 + 
ö
.
_divis‹
 - 1;

544 
	`TRACE
–
TRACE_ALWAYS
, "[%d/%d] Custs %d .. %d\n",

545 
i
, 
ö
.
_lﬂdî_cou¡
, 
°¨t
, 
íd
);

546 
j
=
°¨t
; j<
íd
; ++j) {

547 
	`W_DO
(
	`_gí_⁄e_cu°_ba£d
(
j
,
¨ïrow
));

552  (
_pssm
->
	`commô_x˘
());

553 
	}
}

557 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_p›uœã_some_∑πs
(c⁄° 
x˘_id
,

558 
p›uœã_some_∑πs_öput_t
& 
ö
)

561 
	`as£π
 (
_pssm
);

562 
	`as£π
 (
_öôülized
);

565 
ªp_row_t
 
	`¨ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

566 
¨ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

568 
id
 = 
ö
.
_∑πid
;

571 
id
=
ö
.
_∑πid
; id<ö._∑πid+
x˘_id
; id++) {

572 
	`W_DO
(
	`_gí_⁄e_∑π_ba£d
(
id
, 
¨ïrow
));

575  (
_pssm
->
	`commô_x˘
());

576 
	}
}

580 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_p›uœã_some_cu°s
(c⁄° 
x˘_id
,

581 
p›uœã_some_cu°s_öput_t
& 
ö
)

584 
	`as£π
 (
_pssm
);

585 
	`as£π
 (
_öôülized
);

588 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

589 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

591 
id
 = 
ö
.
_cu°id
;

594 
id
=
ö
.
_cu°id
; id<ö._cu°id+
x˘_id
; id++) {

595 
	`W_DO
(
	`_gí_⁄e_cu°_ba£d
(
id
, 
¨ïrow
));

598  (
_pssm
->
	`commô_x˘
());

599 
	}
}

624 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$run_⁄e_x˘
(
Reque°
* 
¥eque°
)

626 #ifde‡
CFG_QPIPE


627 i‡(
¥eque°
->
	`ty≥
(Ë>
XCT_QPIPE_TPCH_MIX
) {

628  (
	`run_⁄e_qpùe_x˘
(
¥eque°
));

633 i‡(
¥eque°
->
	`ty≥
(Ë=
XCT_TPCH_MIX
) {

634 
¥eque°
->
	`£t_ty≥
(
XCT_TPCH_MIX
 + 
smthªad_t
::
	`ønd
()%22);

637 
¥eque°
->
	`ty≥
()) {

640 
XCT_TPCH_Q1
:

641  (
	`run_q1
(
¥eque°
));

643 
XCT_TPCH_Q2
:

644  (
	`run_q2
(
¥eque°
));

646 
XCT_TPCH_Q3
:

647  (
	`run_q3
(
¥eque°
));

649 
XCT_TPCH_Q4
:

650  (
	`run_q4
(
¥eque°
));

652 
XCT_TPCH_Q5
:

653  (
	`run_q5
(
¥eque°
));

655 
XCT_TPCH_Q6
:

656  (
	`run_q6
(
¥eque°
));;

658 
XCT_TPCH_Q7
:

659  (
	`run_q7
(
¥eque°
));

661 
XCT_TPCH_Q8
:

662  (
	`run_q8
(
¥eque°
));

664 
XCT_TPCH_Q9
:

665  (
	`run_q9
(
¥eque°
));

667 
XCT_TPCH_Q10
:

668  (
	`run_q10
(
¥eque°
));

670 
XCT_TPCH_Q11
:

671  (
	`run_q11
(
¥eque°
));

673 
XCT_TPCH_Q12
:

674  (
	`run_q12
(
¥eque°
));;

676 
XCT_TPCH_Q13
:

677  (
	`run_q13
(
¥eque°
));

679 
XCT_TPCH_Q14
:

680  (
	`run_q14
(
¥eque°
));;

682 
XCT_TPCH_Q15
:

683  (
	`run_q15
(
¥eque°
));

685 
XCT_TPCH_Q16
:

686  (
	`run_q16
(
¥eque°
));

688 
XCT_TPCH_Q17
:

689  (
	`run_q17
(
¥eque°
));

691 
XCT_TPCH_Q18
:

692  (
	`run_q18
(
¥eque°
));

694 
XCT_TPCH_Q19
:

695  (
	`run_q19
(
¥eque°
));

697 
XCT_TPCH_Q20
:

698  (
	`run_q20
(
¥eque°
));

700 
XCT_TPCH_Q21
:

701  (
	`run_q21
(
¥eque°
));

703 
XCT_TPCH_Q22
:

704  (
	`run_q22
(
¥eque°
));

706 
XCT_TPCH_QLINEITEM
:

707  (
	`run_qlöeôem
(
¥eque°
));

709 
XCT_TPCH_QORDERS
:

710  (
	`run_q‹dîs
(
¥eque°
));

712 
XCT_TPCH_QREGION
:

713  (
	`run_qªgi⁄
(
¥eque°
));

715 
XCT_TPCH_QNATION
:

716  (
	`run_q«ti⁄
(
¥eque°
));

718 
XCT_TPCH_QCUSTOMER
:

719  (
	`run_qcu°omî
(
¥eque°
));

721 
XCT_TPCH_QSUPPLIER
:

722  (
	`run_qsuµlõr
(
¥eque°
));

724 
XCT_TPCH_QPART
:

725  (
	`run_q∑π
(
¥eque°
));

727 
XCT_TPCH_QPARTSUPP
:

728  (
	`run_q∑πsuµ
(
¥eque°
));

732 
	`TRACE
–
TRACE_ALWAYS
, "UnknownÅransaction\n");

733 
	`as£π
(0);

735  (
RCOK
);

736 
	}
}

756 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q1
);

757 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q2
);

758 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q3
);

759 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q4
);

760 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q5
);

761 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q6
);

762 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q7
);

763 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q8
);

764 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q9
);

765 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q10
);

766 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q11
);

767 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q12
);

768 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q13
);

769 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q14
);

770 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q15
);

771 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q16
);

772 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q17
);

773 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q18
);

774 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q19
);

775 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q20
);

776 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q21
);

777 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q22
);

778 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
qlöeôem
);

779 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q‹dîs
);

780 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q∑π
);

781 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q∑πsuµ
);

782 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
qsuµlõr
);

783 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
q«ti⁄
);

784 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
qªgi⁄
);

785 
DEFINE_TRX
(
Sh‹eTPCHEnv
,
qcu°omî
);

792 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qlöeôem
 (c⁄° , 
qlöeôem_öput_t
&)

794 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

795  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

796 
	}
}

798 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q‹dîs
 (c⁄° , 
q‹dîs_öput_t
&)

800 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

801  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

802 
	}
}

804 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q«ti⁄
 (c⁄° , 
q«ti⁄_öput_t
&)

806 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

807  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

808 
	}
}

810 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qªgi⁄
 (c⁄° , 
qªgi⁄_öput_t
&)

812 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

813  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

814 
	}
}

816 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qcu°omî
(c⁄° , 
qcu°omî_öput_t
&)

818 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

819  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

820 
	}
}

822 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_qsuµlõr
(c⁄° , 
qsuµlõr_öput_t
&)

824 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

825  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

826 
	}
}

828 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q∑π
 (c⁄° , 
q∑π_öput_t
&)

830 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

831  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

832 
	}
}

834 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q∑πsuµ
(c⁄° , 
q∑πsuµ_öput_t
&)

836 
	`TRACE
–
TRACE_ALWAYS
, "********** SCAN *********\n");

837  (
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
));

838 
	}
}

848 
	sq1_group_by_key_t


850 
	mªtu∫_Êag
;

851 
	mlöe°©us
;

853 
q1_group_by_key_t
(
Êag
, 
°©us
)

855 
	mªtu∫_Êag
 = 
Êag
;

856 
	mlöe°©us
 = 
°©us
;

861 
q1_group_by_key_t
(c⁄° q1_group_by_key_t& 
rhs
)

863 
	mªtu∫_Êag
 = 
rhs
.
ªtu∫_Êag
;

864 
	mlöe°©us
 = 
rhs
.
löe°©us
;

869 
	mq1_group_by_key_t
& 
	m›î©‹
=(c⁄° 
q1_group_by_key_t
& 
rhs
)

871 
ªtu∫_Êag
 = 
rhs
.return_flag;

872 
	mlöe°©us
 = 
rhs
.
löe°©us
;

875  (*
	mthis
);

880 ˛as†
	cq1_group_by_comp
 {

881 
	mpublic
:

882 
boﬁ
 
	$›î©‹
() (

883 c⁄° 
q1_group_by_key_t
& 
lhs
,

884 c⁄° 
q1_group_by_key_t
& 
rhs
) const

886  ((
lhs
.
ªtu∫_Êag
 < 
rhs
.return_flag) ||

887 ((
lhs
.
ªtu∫_Êag
 =
rhs
.return_flag) &&

888 (
lhs
.
löe°©us
 < 
rhs
.linestatus))

891 
	}
};

894 ˛as†
	cq1_group_by_vÆue_t
 {

895 
	mpublic
:

896 
sum_qty
;

897 
	msum_ba£_¥i˚
;

898 
decimÆ
 
	msum_disc_¥i˚
;

899 
decimÆ
 
	msum_ch¨ge
;

900 
decimÆ
 
	msum_discou¡
;

901 
	mcou¡
;

903 
	$q1_group_by_vÆue_t
() {

904 
sum_qty
 = 0;

905 
sum_ba£_¥i˚
 = 0;

906 
sum_disc_¥i˚
 = 0;

907 
sum_ch¨ge
 = 0;

908 
sum_discou¡
 = 0;

909 
cou¡
 = 0;

912 
	$q1_group_by_vÆue_t
(c⁄° 
q1_group_by_vÆue_t
& 
rhs
) {

913 
sum_qty
 = 
rhs
.sum_qty;

914 
sum_ba£_¥i˚
 = 
rhs
.sum_base_price;

915 
sum_disc_¥i˚
 = 
rhs
.sum_disc_price;;

916 
sum_ch¨ge
 = 
rhs
.sum_charge;

917 
sum_discou¡
 = 
rhs
.sum_discount;

918 
cou¡
 = 
rhs
.count;

919 
	}
}

921 
	gq1_group_by_vÆue_t
& 
	g›î©‹
+=(c⁄° 
q1_group_by_vÆue_t
& 
rhs
)

923 
sum_qty
 +
rhs
.sum_qty;

924 
	gsum_ba£_¥i˚
 +
rhs
.
sum_ba£_¥i˚
;

925 
	gsum_disc_¥i˚
 +
rhs
.
sum_disc_¥i˚
;;

926 
	gsum_ch¨ge
 +
rhs
.
sum_ch¨ge
;

927 
	gsum_discou¡
 +
rhs
.
sum_discou¡
;

928 
	gcou¡
 +
rhs
.
cou¡
;

930 (*
	gthis
);

935 
	sq1_ouçut_ñe_t


937 
	ml_ªtu∫Êag
;

938 
	ml_löe°©us
;

939 
	msum_qty
;

940 
	msum_ba£_¥i˚
;

941 
decimÆ
 
	msum_disc_¥i˚
;

942 
decimÆ
 
	msum_ch¨ge
;

943 
decimÆ
 
	mavg_qty
;

944 
decimÆ
 
	mavg_¥i˚
;

945 
decimÆ
 
	mavg_disc
;

946 
	mcou¡_‹dî
;

950 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q1
(c⁄° , 
q1_öput_t
& 
pq1ö
)

953 
	`as£π
 (
_pssm
);

954 
	`as£π
 (
_öôülized
);

955 
	`as£π
 (
_lﬂded
);

959 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

962 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

963 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

965 
¥löeôem
->
_ªp
 = &
¨ïrow
;

992 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

994 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

995 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

996 
l_ôî
 = 
tmp_l_ôî
;

999 
boﬁ
 
eof
;

1000 
çch_löeôem_tu∂e
 
Æöe
;

1001 
m≠
<
q1_group_by_key_t
, 
q1_group_by_vÆue_t
, 
q1_group_by_comp
> 
q1_ªsu…
;

1002 
m≠
<
q1_group_by_key_t
, 
q1_group_by_vÆue_t
>::
ôî©‹
 
ô
;

1003 
ve˘‹
<
q1_ouçut_ñe_t
> 
q1_ouçut
;

1019 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1020 
q1_group_by_vÆue_t
 
vÆue
;

1021 !
eof
) {

1022 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

1023 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

1024 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

1025 
¥löeôem
->
	`gë_vÆue
(7, 
Æöe
.
L_TAX
);

1026 
¥löeôem
->
	`gë_vÆue
(8, 
Æöe
.
L_RETURNFLAG
);

1027 
¥löeôem
->
	`gë_vÆue
(9, 
Æöe
.
L_LINESTATUS
);

1028 
¥löeôem
->
	`gë_vÆue
(10, 
Æöe
.
L_SHIPDATE
, 15);

1030 
time_t
 
the_shùd©e
 = 
	`°r_to_timë
(
Æöe
.
L_SHIPDATE
);

1032 i‡(
the_shùd©e
 <
pq1ö
.
l_shùd©e
) {

1033 
q1_group_by_key_t
 
	`key
(
Æöe
.
L_RETURNFLAG
,álöe.
L_LINESTATUS
);

1035 
vÆue
.
sum_qty
 = 
Æöe
.
L_QUANTITY
;

1036 
vÆue
.
sum_ba£_¥i˚
 = 
Æöe
.
L_EXTENDEDPRICE
;

1037 
vÆue
.
sum_disc_¥i˚
 = (
Æöe
.
L_EXTENDEDPRICE
 * (1-Æöe.
L_DISCOUNT
));

1038 
vÆue
.
sum_ch¨ge
 = (
Æöe
.
L_EXTENDEDPRICE
 * (1-Æöe.
L_DISCOUNT
) *

1039 (1+
Æöe
.
L_TAX
));

1040 
vÆue
.
sum_discou¡
 = (
Æöe
.
L_DISCOUNT
);

1041 
vÆue
.
cou¡
 = 1;

1043 
ô
 = 
q1_ªsu…
.
	`föd
(
key
);

1044 i‡(
ô
 !
q1_ªsu…
.
	`íd
()) {

1046 (*
ô
).
£c⁄d
 +
vÆue
;

1048 
q1_ªsu…
.
	`ö£π
(
∑ú
<
q1_group_by_key_t
,

1049 
q1_group_by_vÆue_t
>(
key
, 
vÆue
));

1052 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1055 
q1_ouçut_ñe_t
 
q1_ouçut_ñe
;

1056 
ô
 = 
q1_ªsu…
.
	`begö
(); ià!q1_ªsu….
	`íd
(); it ++) {

1057 
q1_ouçut_ñe
.
l_ªtu∫Êag
 = (*
ô
).
fú°
.
ªtu∫_Êag
;

1058 
q1_ouçut_ñe
.
l_löe°©us
 = (*
ô
).
fú°
.
löe°©us
;

1059 
q1_ouçut_ñe
.
sum_qty
 = (*
ô
).
£c⁄d
.sum_qty;

1060 
q1_ouçut_ñe
.
sum_ba£_¥i˚
 = (*
ô
).
£c⁄d
.sum_base_price;

1061 
q1_ouçut_ñe
.
sum_disc_¥i˚
 = (*
ô
).
£c⁄d
.sum_disc_price;

1062 
q1_ouçut_ñe
.
sum_ch¨ge
 = (*
ô
).
£c⁄d
.sum_charge;

1063 
q1_ouçut_ñe
.
avg_qty
 = (*
ô
).
£c⁄d
.
sum_qty
 / (*ô).£c⁄d.
cou¡
;

1064 
q1_ouçut_ñe
.
avg_¥i˚
 = (*
ô
).
£c⁄d
.
sum_ba£_¥i˚
/(*ô).£c⁄d.
cou¡
;

1065 
q1_ouçut_ñe
.
avg_disc
 = (*
ô
).
£c⁄d
.
sum_discou¡
 / (*ô).£c⁄d.
cou¡
;

1066 
q1_ouçut_ñe
.
cou¡_‹dî
 = (*
ô
).
£c⁄d
.
cou¡
;

1067 
q1_ouçut
.
	`push_back
(
q1_ouçut_ñe
);

1069 
	`TRACE
–
TRACE_QUERY_RESULTS
, "%d|%d|%d|%d|%.2f|%.2f|%.2f|%.2f|%.2f|%d\n",

1070 
q1_ouçut_ñe
.
l_ªtu∫Êag
,

1071 
q1_ouçut_ñe
.
l_löe°©us
,

1072 
q1_ouçut_ñe
.
sum_qty
,

1073 
q1_ouçut_ñe
.
sum_ba£_¥i˚
,

1074 
q1_ouçut_ñe
.
sum_disc_¥i˚
.
	`to_doubÀ
(),

1075 
q1_ouçut_ñe
.
sum_ch¨ge
.
	`to_doubÀ
(),

1076 
q1_ouçut_ñe
.
avg_qty
.
	`to_doubÀ
(),

1077 
q1_ouçut_ñe
.
avg_¥i˚
.
	`to_doubÀ
(),

1078 
q1_ouçut_ñe
.
avg_disc
.
	`to_doubÀ
(),

1079 
q1_ouçut_ñe
.
cou¡_‹dî
);

1082  
RCOK
;

1084 
	}
};

1094 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q2
(c⁄° , 
q2_öput_t
& 
q2ö
)

1097 
	`as£π
 (
_pssm
);

1098 
	`as£π
 (
_öôülized
);

1099 
	`as£π
 (
_lﬂded
);

1102 
m≠
<, 
∑ú
< 
decimÆ
, 
ve˘‹
<>* > > 
möli°
;

1104 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

1106 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

1107 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

1109 
¥∑π
->
_ªp
 = &
¥ïrow
;

1111 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

1113 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

1114 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

1115 
p_ôî
 = 
tmp_p_ôî
;

1118 
boﬁ
 
eof
;

1119 
çch_∑π_tu∂e
 
≠¨t
;

1121 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

1123 !
eof
){

1124 
size
;

1125 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

1126 
¥∑π
->
	`gë_vÆue
(4, 
≠¨t
.
P_TYPE
, 25);

1127 
¥∑π
->
	`gë_vÆue
(5, 
size
);

1129 
ty≥s3
[10];

1130 
	`ty≥s3_to_°r
(
ty≥s3
, 
q2ö
.
p_ty≥s3
);

1132 if–
size
 =
q2ö
.
p_size
 && 
	`°r°r
(
≠¨t
.
P_TYPE
, 
ty≥s3
Ë!
NULL
){

1133 
ve˘‹
<>* 
v
 = 
√w
 vector<>();

1134 
möli°
.
	`ö£π
(
∑ú
<,

1135 
∑ú
< 
decimÆ
,
ve˘‹
<>* > >(
≠¨t
.
P_PARTKEY
,

1136 
∑ú
<
decimÆ
,

1137 
ve˘‹
<>* >(-1, 
v
)));

1139 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

1143 
m≠
<,
boﬁ
> 
«ti⁄K
;

1145 
tu∂e_gu¨d
<
«ti⁄_m™_im∂
> 
	`¥«ti⁄
(
_≤©i⁄_m™
);

1147 
ªp_row_t
 
	`¨ïrow
(
_≤©i⁄_m™
->
	`ts
());

1148 
¨ïrow
.
	`£t
(
_≤©i⁄_desc
->
	`maxsize
());

1150 
¥«ti⁄
->
_ªp
 = &
¨ïrow
;

1152 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
> > 
n_ôî
;

1154 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
>* 
tmp_n_ôî
;

1155 
	`W_DO
(
_≤©i⁄_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_n_ôî
));

1156 
n_ôî
 = 
tmp_n_ôî
;

1159 
çch_«ti⁄_tu∂e
 
™©i⁄
;

1161 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

1163 !
eof
) {

1164 
¥«ti⁄
->
	`gë_vÆue
(0, 
™©i⁄
.
N_NATIONKEY
);

1165 
¥«ti⁄
->
	`gë_vÆue
(2, 
™©i⁄
.
N_REGIONKEY
);

1166 if–
™©i⁄
.
N_REGIONKEY
 =
q2ö
.
r_«me
 ) {

1167 
«ti⁄K
.
	`ö£π
(
∑ú
<,
boﬁ
> (
™©i⁄
.
N_NATIONKEY
,0));

1169 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

1173 
m≠
<, 
boﬁ
> 
suµK
;

1175 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

1177 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

1178 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

1180 
¥suµ
->
_ªp
 = &
§ïrow
;

1182 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

1184 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

1185 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

1186 
s_ôî
 = 
tmp_s_ôî
;

1189 
çch_suµlõr_tu∂e
 
asuµlõr
;

1191 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1193 !
eof
){

1194 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

1195 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

1196 if–
«ti⁄K
.
	`föd
(
asuµlõr
.
S_NATIONKEY
Ë!«ti⁄K.
	`íd
()){

1197 
suµK
.
	`ö£π
(
∑ú
<,
boﬁ
>(
asuµlõr
.
S_SUPPKEY
, 
åue
));

1199 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1203 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥∑πsuµ
(
_µ¨tsuµ_m™
);

1205 
ªp_row_t
 
	`p§ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

1206 
p§ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

1208 
¥∑πsuµ
->
_ªp
 = &
p§ïrow
;

1210 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
> > 
ps_ôî
;

1212 
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
>* 
tmp_ps_ôî
;

1213 
	`W_DO
(
_µ¨tsuµ_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ps_ôî
));

1214 
ps_ôî
 = 
tmp_ps_ôî
;

1217 
çch_∑πsuµ_tu∂e
 
≠¨tsuµ
;

1219 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

1221 !
eof
){

1222 
¥∑πsuµ
->
	`gë_vÆue
(0, 
≠¨tsuµ
.
PS_PARTKEY
);

1223 
¥∑πsuµ
->
	`gë_vÆue
(1, 
≠¨tsuµ
.
PS_SUPPKEY
);

1224 
¥∑πsuµ
->
	`gë_vÆue
(3, 
≠¨tsuµ
.
PS_SUPPLYCOST
);

1226 
m≠
<, 
∑ú
< 
decimÆ
, 
ve˘‹
<>* > >::
ôî©‹
 
pô
 = 
möli°
.
föd


1227 (
≠¨tsuµ
.
PS_PARTKEY
);

1228 
m≠
<,
boﬁ
>::
ôî©‹
 
sô
 = 
suµK
.
	`föd
(
≠¨tsuµ
.
PS_SUPPKEY
);

1230 if–
pô
 !
möli°
.
	`íd
(Ë&& 
sô
 !
suµK
.end() ){

1231 if–
pô
->
£c⁄d
.
fú°
 > 
≠¨tsuµ
.
PS_SUPPLYCOST
 ||

1232 
pô
->
£c⁄d
.
fú°
 == -1){

1233 
möli°
.
	`ö£π
(
∑ú
<,Öaú< 
decimÆ
, 
ve˘‹
<>* > >

1234 (
≠¨tsuµ
.
PS_PARTKEY
,
∑ú
< 
decimÆ
, 
ve˘‹
<>* >

1235 (
≠¨tsuµ
.
PS_SUPPLYCOST
, 
√w
 
ve˘‹
<>()) ));

1238 if–
pô
->
£c⁄d
.
fú°
 =
≠¨tsuµ
.
PS_SUPPLYCOST
){

1239 
pô
->
£c⁄d
.£c⁄d->
	`push_back
(
≠¨tsuµ
.
PS_SUPPKEY
);

1242 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

1245  
RCOK
;

1246 
	}
}

1256 
	sq3_group_by_key_t


1258 
	ml_‹dîkey
;

1259 
time_t
 
	mo_‹dîd©e
;

1260 
	mo_shù¥i‹ôy
;

1262 
q3_group_by_key_t
(
okey
, 
time_t
 
d©e
, 
shµºty
)

1264 
	ml_‹dîkey
 = 
okey
;

1265 
	mo_‹dîd©e
 = 
d©e
;

1266 
	mo_shù¥i‹ôy
 = 
shµºty
;

1270 
q3_group_by_key_t
(c⁄° q3_group_by_key_t& 
rhs
)

1272 
	ml_‹dîkey
 = 
rhs
.
l_‹dîkey
;

1273 
	mo_‹dîd©e
 = 
rhs
.
o_‹dîd©e
;

1274 
	mo_shù¥i‹ôy
 = 
rhs
.
o_shù¥i‹ôy
;

1278 
	mq3_group_by_key_t
& 
	m›î©‹
=(c⁄° 
q3_group_by_key_t
& 
rhs
)

1280 
l_‹dîkey
 = 
rhs
.l_orderkey;

1281 
	mo_‹dîd©e
 = 
rhs
.
o_‹dîd©e
;

1282 
	mo_shù¥i‹ôy
 = 
rhs
.
o_shù¥i‹ôy
;

1283  (*
	mthis
);

1288 ˛as†
	cq3_group_by_comp
 {

1289 
	mpublic
:

1290 
boﬁ
 
	$›î©‹
() (

1291 c⁄° 
q3_group_by_key_t
& 
lhs
,

1292 c⁄° 
q3_group_by_key_t
& 
rhs
) const

1294  ((
lhs
.
l_‹dîkey
 < 
rhs
.l_orderkey) ||

1295 ((
lhs
.
l_‹dîkey
 =
rhs
.l_orderkey) &&

1296 (
lhs
.
o_‹dîd©e
 < 
rhs
.o_orderdate))||

1297 (
lhs
.
l_‹dîkey
 =
rhs
.l_orderkey) &&

1298 (
lhs
.
o_‹dîd©e
 =
rhs
.o_orderdate) &&

1299 (
lhs
.
o_shù¥i‹ôy
 < 
rhs
.o_shippriority)

1302 
	}
};

1304 ˛as†
	cq3_‹dî_√eded_d©a
{

1305 
	mpublic
:

1306 
time_t
 
o_‹dîd©e
;

1307 
	mo_shù¥i‹ôy
;

1309 
	$q3_‹dî_√eded_d©a
(
time_t
 
d©e
, 
shµºty
)

1311 
o_‹dîd©e
 = 
d©e
;

1312 
o_shù¥i‹ôy
 = 
shµºty
;

1316 
	}
};

1318 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q3
(c⁄° , 
q3_öput_t
& 
q3ö
)

1321 
	`as£π
 (
_pssm
);

1322 
	`as£π
 (
_öôülized
);

1323 
	`as£π
 (
_lﬂded
);

1326 
m≠
<,
boﬁ
> 
cu°keys
;

1328 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

1330 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

1331 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1333 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

1335 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

1337 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

1338 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

1339 
c_ôî
 = 
tmp_c_ôî
;

1342 
boﬁ
 
eof
;

1343 
çch_cu°omî_tu∂e
 
acu°
;

1345 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1347 !
eof
) {

1348 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

1349 
¥cu°omî
->
	`gë_vÆue
(6, 
acu°
.
C_MKTSEGMENT
, 10);

1350 
£g
 = 
	`°r_to_£gmít
(
acu°
.
C_MKTSEGMENT
);

1351 if–
£g
 =
q3ö
.
c_£gmít
) {

1352 
cu°keys
.
	`ö£π
(
∑ú
<,
boﬁ
> (
acu°
.
C_CUSTKEY
, 
åue
));

1354 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1358 
c
 =0 ;

1359 
m≠
<, 
q3_‹dî_√eded_d©a
> 
‹dîsdt
;

1361 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

1363 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

1364 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1366 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

1368 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

1370 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

1371 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

1372 
o_ôî
 = 
tmp_o_ôî
;

1375 
çch_‹dîs_tu∂e
 
™‹dî
;

1377 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

1379 !
eof
){

1380 
c
++;

1381 
¥‹dî
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

1382 
¥‹dî
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

1383 
¥‹dî
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
, 15);

1384 
¥‹dî
->
	`gë_vÆue
(7, 
™‹dî
.
O_SHIPPRIORITY
);

1385 
time_t
 
the_d©e
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

1386 if(
cu°keys
.
	`föd
(
™‹dî
.
O_CUSTKEY
Ë!cu°keys.
	`íd
()

1387 && 
the_d©e
 < 
q3ö
.
cuºít_d©e
) {

1388 
‹dîsdt
.
	`ö£π
(
∑ú
<,
q3_‹dî_√eded_d©a
>

1389 (
™‹dî
.
O_ORDERKEY
, 
q3_‹dî_√eded_d©a


1390 (
the_d©e
, 
™‹dî
.
O_SHIPPRIORITY
)));

1392 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

1396 
m≠
<
q3_group_by_key_t
, , 
q3_group_by_comp
> 
shùpögQ
;

1398 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

1400 
ªp_row_t
 
	`Æª¥ow
(
_∂öeôem_m™
->
	`ts
());

1401 
Æª¥ow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1403 
¥löeôem
->
_ªp
 = &
Æª¥ow
;

1405 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

1407 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

1408 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

1409 
l_ôî
 = 
tmp_l_ôî
;

1412 
çch_löeôem_tu∂e
 
Æöe
;

1414 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1416 !
eof
) {

1417 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

1418 
¥löeôem
->
	`gë_vÆue
(10, 
Æöe
.
L_SHIPDATE
, 15);

1419 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

1420 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

1421 
time_t
 
the_shùd©e
 = 
	`°r_to_timë
(
Æöe
.
L_SHIPDATE
);

1422 
m≠
<, 
q3_‹dî_√eded_d©a
>::
ôî©‹
 
tmp
 =

1423 
‹dîsdt
.
	`föd
(
Æöe
.
L_ORDERKEY
);

1424 if(
tmp
 !
‹dîsdt
.
	`íd
(Ë&& 
the_shùd©e
 > 
q3ö
.
cuºít_d©e
 ){

1425 
m≠
<
q3_group_by_key_t
, , 
q3_group_by_comp
>::
ôî©‹
 
tmp2
 =

1426 
shùpögQ
.
	`föd
(
	`q3_group_by_key_t
(
Æöe
.
L_ORDERKEY
,

1427 
tmp
->
£c⁄d
.
o_‹dîd©e
,

1428 
tmp
->
£c⁄d
.
o_shù¥i‹ôy
));

1429 
sum
 = 
Æöe
.
L_EXTENDEDPRICE
 * (1-Æöe.
L_DISCOUNT
);

1430 if(
tmp2
 !
shùpögQ
.
	`íd
()){

1431 
sum
 +
tmp2
->
£c⁄d
;

1433 
shùpögQ
.
	`ö£π
(
∑ú
<
q3_group_by_key_t
, >

1434 (
	`q3_group_by_key_t
(
Æöe
.
L_ORDERKEY
,

1435 
tmp
->
£c⁄d
.
o_‹dîd©e
,

1436 
tmp
->
£c⁄d
.
o_shù¥i‹ôy
),
sum
));

1438 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1441  
RCOK
;

1442 
	}
}

1452 
	s…°r
 {

1453 
boﬁ
 
›î©‹
()(c⁄° * 
	ms1
, c⁄° * 
	ms2
) const {

1454  
°rcmp
(
s1
, 
s2
) < 0; }

1458 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q4
(c⁄° , 
q4_öput_t
& 
ö
)

1461 
	`as£π
 (
_pssm
);

1462 
	`as£π
 (
_öôülized
);

1463 
	`as£π
 (
_lﬂded
);

1466 
m≠
<, > 
f‹dî_¥io
;

1469 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dîs
(
_p‹dîs_m™
);

1472 
ªp_row_t
 
	`¨ïrow
(
_p‹dîs_m™
->
	`ts
());

1473 
¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1475 
¥‹dîs
->
_ªp
 = & 
¨ïrow
;

1477 
ªp_row_t
 
	`lowªp
(
_p‹dîs_m™
->
	`ts
());

1478 
ªp_row_t
 
	`highªp
(
_p‹dîs_m™
->
	`ts
());

1480 
lowªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1481 
highªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1483 
tm
 
d©e
 = (*
	`loˇ…ime
(&
ö
.
o_‹dîd©e
));

1484 
d©e
.
tm_m⁄
 += 2;

1485 if(
d©e
.
tm_m⁄
 > 11){

1486 
d©e
.
tm_m⁄
 -= 12;

1487 
d©e
.
tm_yór
 ++;

1489 
time_t
 
œ°_‹dîd©e
 = 
	`mktime
(&
d©e
);

1491 
çch_‹dîs_tu∂e
 
™‹dî
;

1493 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

1495 
ödex_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

1496 
	`W_DO
(
_p‹dîs_m™
->
	`o_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_o_ôî
, 
¥‹dîs
,

1497 
lowªp
, 
highªp
,

1498 
ö
.
o_‹dîd©e
,

1499 
œ°_‹dîd©e
));

1500 
o_ôî
 = 
tmp_o_ôî
;

1503 
boﬁ
 
eof
;

1504 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

1505 !
eof
){

1506 
¥‹dîs
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

1507 
¥‹dîs
->
	`gë_vÆue
(5, 
™‹dî
.
O_ORDERPRIORITY
, 16);

1508 
p
 = 
	`°r_to_¥i‹ôy
(
™‹dî
.
O_ORDERPRIORITY
);

1509 
f‹dî_¥io
.
	`ö£π
(
∑ú
<, >–
™‹dî
.
O_ORDERKEY
, 
p
));

1510 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

1514 
m≠
<,> 
¥i‹ôy_cou¡
;

1515  
i
 = 0; i < 5; i++) {

1516 
¥i‹ôy_cou¡
.
	`ö£π
(
∑ú
<,>(
i
,0));

1519 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

1522 
ªp_row_t
 
	`¨ïrow2
(
_∂öeôem_m™
->
	`ts
());

1523 
¨ïrow2
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1525 
¥löeôem
->
_ªp
 = &
¨ïrow2
;

1527 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

1529 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

1530 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

1531 
l_ôî
 = 
tmp_l_ôî
;

1534 
çch_löeôem_tu∂e
 
Æöe
;

1536 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1538 !
eof
) {

1539 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

1540 
¥löeôem
->
	`gë_vÆue
(11, 
Æöe
.
L_COMMITDATE
, 15);

1541 
¥löeôem
->
	`gë_vÆue
(12, 
Æöe
.
L_RECEIPTDATE
, 15);

1542 
time_t
 
the_commôd©e
 = 
	`°r_to_timë
(
Æöe
.
L_COMMITDATE
);

1543 
time_t
 
the_ª˚ùtd©e
 = 
	`°r_to_timë
(
Æöe
.
L_RECEIPTDATE
);

1544 
m≠
<,>::
ôî©‹
 
tmp
;

1545 if((
tmp
 = 
f‹dî_¥io
.
	`föd
(
Æöe
.
L_ORDERKEY
)Ë!f‹dî_¥io.
	`íd
() &&

1546 
the_commôd©e
 < 
the_ª˚ùtd©e
){

1547 
c
 =
¥i‹ôy_cou¡
.
	`föd
(
tmp
->
£c⁄d
)->second;

1548 
c
++;

1549 
¥i‹ôy_cou¡
[
tmp
->
£c⁄d
] = 
c
;

1550 
f‹dî_¥io
.
	`îa£
–
tmp
);

1552 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1555  
RCOK
;

1556 
	}
};

1566 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q5
(c⁄° , 
q5_öput_t
& 
q5ö
)

1569 
	`as£π
 (
_pssm
);

1570 
	`as£π
 (
_öôülized
);

1571 
	`as£π
 (
_lﬂded
);

1573 
m≠
<, > 
«ti⁄_ªv
;

1575 
tu∂e_gu¨d
<
«ti⁄_m™_im∂
> 
	`¥«ti⁄
(
_≤©i⁄_m™
);

1577 
ªp_row_t
 
	`¨ïrow
(
_≤©i⁄_m™
->
	`ts
());

1578 
¨ïrow
.
	`£t
(
_≤©i⁄_desc
->
	`maxsize
());

1580 
¥«ti⁄
->
_ªp
 = &
¨ïrow
;

1582 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
> > 
n_ôî
;

1584 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
>* 
tmp_n_ôî
;

1585 
	`W_DO
(
_≤©i⁄_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_n_ôî
));

1586 
n_ôî
 = 
tmp_n_ôî
;

1589 
çch_«ti⁄_tu∂e
 
™©i⁄
;

1590 
boﬁ
 
eof
;

1592 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

1594 !
eof
) {

1595 
¥«ti⁄
->
	`gë_vÆue
(0, 
™©i⁄
.
N_NATIONKEY
);

1596 
¥«ti⁄
->
	`gë_vÆue
(2, 
™©i⁄
.
N_REGIONKEY
);

1597 if–
™©i⁄
.
N_REGIONKEY
 =
q5ö
.
r_«me
 ) {

1598 
«ti⁄_ªv
.
	`ö£π
(
∑ú
<,> (
™©i⁄
.
N_NATIONKEY
,0.0));

1600 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

1604 
m≠
<, > 
cu°omî_«ti⁄
;

1606 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

1608 
ªp_row_t
 
	`a¸ïrow
(
_pcu°omî_m™
->
	`ts
());

1609 
a¸ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1611 
¥cu°omî
->
_ªp
 = &
a¸ïrow
;

1613 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

1615 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

1616 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

1617 
c_ôî
 = 
tmp_c_ôî
;

1620 
çch_cu°omî_tu∂e
 
acu°
;

1622 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1624 !
eof
){

1625 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

1626 
¥cu°omî
->
	`gë_vÆue
(3, 
acu°
.
C_NATIONKEY
);

1627 if–
«ti⁄_ªv
.
	`föd
(
acu°
.
C_NATIONKEY
Ë!«ti⁄_ªv.
	`íd
() ){

1628 
cu°omî_«ti⁄
.
	`ö£π
(
∑ú
<,>(
acu°
.
C_CUSTKEY
,

1629 
acu°
.
C_NATIONKEY
));

1631 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1635 
m≠
<, > 
‹dîsK_cu°
;

1637 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dîs
(
_p‹dîs_m™
);

1639 
ªp_row_t
 
	`a‹ïrow
(
_p‹dîs_m™
->
	`ts
());

1640 
a‹ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1642 
¥‹dîs
->
_ªp
 = & 
a‹ïrow
;

1644 
ªp_row_t
 
	`lowªp
(
_p‹dîs_m™
->
	`ts
());

1645 
ªp_row_t
 
	`highªp
(
_p‹dîs_m™
->
	`ts
());

1647 
lowªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1648 
highªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1650 
tm
 
d©e
 = (*
	`loˇ…ime
(&
q5ö
.
o_‹dîd©e
));

1652 
d©e
.
tm_yór
 += 1;

1654 
time_t
 
œ°_‹dîd©e
 = 
	`mktime
(&
d©e
);

1656 
çch_‹dîs_tu∂e
 
™‹dî
;

1658 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

1660 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

1661 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

1662 
o_ôî
 = 
tmp_o_ôî
;

1665 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

1666 !
eof
){

1667 
¥‹dîs
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

1668 
¥‹dîs
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

1669 
¥‹dîs
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
, 15);

1670 
time_t
 
‹dîT
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

1671 if–
cu°omî_«ti⁄
.
	`föd
(
™‹dî
.
O_CUSTKEY
Ë!cu°omî_«ti⁄.
	`íd
() &&

1672 (
‹dîT
 >
q5ö
.
o_‹dîd©e
 && ordîT < 
œ°_‹dîd©e
)) {

1673 
‹dîsK_cu°
.
	`ö£π
(
∑ú
<,> (
™‹dî
.
O_ORDERKEY
,

1674 
™‹dî
.
O_CUSTKEY
));

1676 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

1680 
m≠
<,> 
suµ_«ti⁄
;

1682 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

1684 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

1685 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

1687 
¥suµ
->
_ªp
 = &
§ïrow
;

1689 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

1691 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

1692 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

1693 
s_ôî
 = 
tmp_s_ôî
;

1696 
çch_suµlõr_tu∂e
 
asuµlõr
;

1698 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1700 !
eof
){

1701 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

1702 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

1703 if(
«ti⁄_ªv
.
	`föd
(
asuµlõr
.
S_NATIONKEY
Ë!«ti⁄_ªv.
	`íd
()){

1704 
suµ_«ti⁄
.
	`ö£π
(
∑ú
<,>

1705 (
asuµlõr
.
S_SUPPKEY
,ásuµlõr.
S_NATIONKEY
));

1707 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1711 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

1713 
ªp_row_t
 
	`Æª¥ow
(
_∂öeôem_m™
->
	`ts
());

1714 
Æª¥ow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1716 
¥löeôem
->
_ªp
 = &
Æª¥ow
;

1718 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

1720 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

1721 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

1722 
l_ôî
 = 
tmp_l_ôî
;

1725 
çch_löeôem_tu∂e
 
Æöe
;

1727 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1729 !
eof
) {

1730 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

1731 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

1732 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

1733 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

1734 
¥i˚
 = ( 1 - 
Æöe
.
L_DISCOUNT
)*Æöe.
L_EXTENDEDPRICE
;

1735 
m≠
<,>::
ôî©‹
 
suµôî
 = 
suµ_«ti⁄
.
	`föd
(
Æöe
.
L_SUPPKEY
);

1736 
m≠
<,>::
ôî©‹
 
‹dîôî
 = 
‹dîsK_cu°
.
	`föd
(
Æöe
.
L_ORDERKEY
);

1737 if(
‹dîôî
 !
‹dîsK_cu°
.
	`íd
(Ë&& 
suµôî
 !
suµ_«ti⁄
.end()){

1738 
m≠
<,>::
ôî©‹
 
cu°ôî
 =

1739 
cu°omî_«ti⁄
.
	`föd
(
‹dîôî
->
£c⁄d
);

1740 if(
cu°ôî
 !
cu°omî_«ti⁄
.
	`íd
()

1741 && 
cu°ôî
->
£c⁄d
 =
suµôî
->second){

1742 
«ti⁄Key
 = 
cu°ôî
->
£c⁄d
;

1743 
c
 =
«ti⁄_ªv
.
	`föd
(
«ti⁄Key
)->
£c⁄d
;

1744 
c
 +
¥i˚
;

1745 
«ti⁄_ªv
[
«ti⁄Key
] = 
c
;

1748 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1751  
RCOK
;

1752 
	}
}

1764 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q6
(c⁄° , 
q6_öput_t
& 
pq6ö
)

1767 
	`as£π
 (
_pssm
);

1768 
	`as£π
 (
_öôülized
);

1769 
	`as£π
 (
_lﬂded
);

1772 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

1774 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

1775 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1777 
¥löeôem
->
_ªp
 = &
¨ïrow
;

1790 
ªp_row_t
 
	`lowªp
(
_∂öeôem_m™
->
	`ts
());

1791 
ªp_row_t
 
	`highªp
(
_∂öeôem_m™
->
	`ts
());

1793 
lowªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1794 
highªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

1796 
tm
 
d©e
;

1797 i‡(
	`gmtime_r
(&(
pq6ö
.
l_shùd©e
), &
d©e
Ë=
NULL
) {

1798  
RCOK
;

1800 
d©e
.
tm_yór
 ++;

1801 
time_t
 
œ°_shùd©e
 = 
	`mktime
(&
d©e
);

1803 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

1805 
ödex_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

1806 
	`W_DO
(
_∂öeôem_m™
->
	`l_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_l_ôî
,

1807 
¥löeôem
, 
lowªp
,

1808 
highªp
, 
pq6ö
.
l_shùd©e
,

1809 
œ°_shùd©e
));

1810 
l_ôî
 = 
tmp_l_ôî
;

1813 
boﬁ
 
eof
;

1814 
çch_löeôem_tu∂e
 
Æöe
;

1815 
q6_ªsu…
 = 0;

1817 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1819 !
eof
) {

1820 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

1821 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

1822 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

1823 
¥löeôem
->
	`gë_vÆue
(10, 
Æöe
.
L_SHIPDATE
, 15);

1824 i‡((
Æöe
.
L_DISCOUNT
 > 
pq6ö
.
l_discou¡
 - 0.01) &&

1825 (
Æöe
.
L_DISCOUNT
 < 
pq6ö
.
l_discou¡
 + 0.01) &&

1826 (
Æöe
.
L_QUANTITY
 < 
pq6ö
.
l_qu™tôy
)) {

1827 
q6_ªsu…
 +(
Æöe
.
L_EXTENDEDPRICE
 *álöe.
L_DISCOUNT
);

1829 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

1832  
RCOK
;

1834 
	}
};

1844 
	sq7_group_by_key_t
{

1846 
	msuµ_«ti⁄
;

1847 
	mcu°_«ti⁄
;

1848 
	ml_yór
;

1850 
q7_group_by_key_t
(
s_n
, 
c_n
, 
y
)

1852 
	msuµ_«ti⁄
 = 
s_n
;

1853 
	mcu°_«ti⁄
 = 
c_n
;

1854 
	ml_yór
 = 
y
;

1858 
q7_group_by_key_t
(c⁄° q7_group_by_key_t& 
rhs
)

1860 
	msuµ_«ti⁄
 = 
rhs
.
suµ_«ti⁄
;

1861 
	mcu°_«ti⁄
 = 
rhs
.
cu°_«ti⁄
;

1862 
	ml_yór
 = 
rhs
.
l_yór
;

1865 
	mq7_group_by_key_t
& 
	m›î©‹
=(c⁄° 
q7_group_by_key_t
& 
rhs
)

1867 
suµ_«ti⁄
 = 
rhs
.supp_nation;

1868 
	mcu°_«ti⁄
 = 
rhs
.
cu°_«ti⁄
;

1869 
	ml_yór
 = 
rhs
.
l_yór
;

1871  (*
	mthis
);

1876 ˛as†
	cq7_group_by_comp
 {

1877 
	mpublic
:

1878 
boﬁ
 
	$›î©‹
() (

1879 c⁄° 
q7_group_by_key_t
& 
lhs
,

1880 c⁄° 
q7_group_by_key_t
& 
rhs
) const

1882  (
lhs
.
suµ_«ti⁄
 < 
rhs
.supp_nation ||

1883 (
lhs
.
suµ_«ti⁄
 =
rhs
.supp_nation &&

1884 
lhs
.
cu°_«ti⁄
 < 
rhs
.cust_nation ) ||

1885 (
lhs
.
suµ_«ti⁄
 =
rhs
.supp_nation &&

1886 
lhs
.
cu°_«ti⁄
 =
rhs
.cust_nation &&

1887 
rhs
.
l_yór
 < 
lhs
.l_year) );

1889 
	}
};

1891 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q7
(c⁄° , 
q7_öput_t
& 
q7ö
 )

1894 
	`as£π
 (
_pssm
);

1895 
	`as£π
 (
_öôülized
);

1896 
	`as£π
 (
_lﬂded
);

1899 
m≠
<,> 
cu°_«ti⁄K
;

1901 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

1903 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

1904 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

1906 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

1908 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

1910 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

1911 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

1912 
c_ôî
 = 
tmp_c_ôî
;

1915 
boﬁ
 
eof
;

1916 
çch_cu°omî_tu∂e
 
acu°
;

1918 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1920 !
eof
){

1921 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

1922 
¥cu°omî
->
	`gë_vÆue
(3, 
acu°
.
C_NATIONKEY
);

1923 if(
acu°
.
C_NATIONKEY
 =
q7ö
.
n_«me1
||acu°.C_NATIONKEY =q7ö.
n_«me2
) {

1924 
cu°_«ti⁄K
.
	`ö£π
(
∑ú
<,>(
acu°
.
C_CUSTKEY
,acu°.
C_NATIONKEY
));

1926 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

1930 
m≠
<,> 
‹dîk_cu°k
;

1932 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

1934 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

1935 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

1937 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

1939 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

1941 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

1942 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

1943 
o_ôî
 = 
tmp_o_ôî
;

1946 
çch_‹dîs_tu∂e
 
™‹dî
;

1948 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

1950 !
eof
){

1951 
¥‹dî
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

1952 
¥‹dî
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

1953 if–
cu°_«ti⁄K
.
	`föd
(
™‹dî
.
O_CUSTKEY
Ë!cu°_«ti⁄K.
	`íd
()) {

1954 
‹dîk_cu°k
.
	`ö£π
(
∑ú
<,>(
™‹dî
.
O_ORDERKEY
,

1955 
™‹dî
.
O_CUSTKEY
));

1957 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

1961 
m≠
<,> 
suµ_«ti⁄k
;

1963 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

1965 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

1966 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

1968 
¥suµ
->
_ªp
 = &
§ïrow
;

1970 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

1972 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

1973 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

1974 
s_ôî
 = 
tmp_s_ôî
;

1977 
çch_suµlõr_tu∂e
 
asuµlõr
;

1979 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1981 !
eof
){

1982 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

1983 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

1984 if–
asuµlõr
.
S_NATIONKEY
 =
q7ö
.
n_«me1
 ||

1985 
asuµlõr
.
S_NATIONKEY
 =
q7ö
.
n_«me2
) {

1986 
suµ_«ti⁄k
.
	`ö£π
(
∑ú
<,>

1987 (
asuµlõr
.
S_SUPPKEY
,ásuµlõr.
S_NATIONKEY
));

1989 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

1993 
m≠
<
q7_group_by_key_t
, , 
q7_group_by_comp
> 
vﬁ_shùpög
;

1995 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

1997 
ªp_row_t
 
	`Æª¥ow
(
_∂öeôem_m™
->
	`ts
());

1998 
Æª¥ow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2000 
¥löeôem
->
_ªp
 = &
Æª¥ow
;

2002 
tm
 
°¨t_shùd©e
;

2003 
°¨t_shùd©e
.
tm_yór
 = 95;

2004 
°¨t_shùd©e
.
tm_m⁄
 = 0;

2005 
°¨t_shùd©e
.
tm_mday
 = 1;

2006 
time_t
 
s_shù
 = 
	`mktime
(&
°¨t_shùd©e
);

2008 
tm
 
íd_shùd©e
;

2009 
íd_shùd©e
.
tm_yór
 = 96;

2010 
íd_shùd©e
.
tm_m⁄
 = 11;

2011 
íd_shùd©e
.
tm_mday
 =31;

2012 
time_t
 
e_shù
 = 
	`mktime
(&
íd_shùd©e
);

2014 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

2016 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

2017 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

2018 
l_ôî
 = 
tmp_l_ôî
;

2021 
çch_löeôem_tu∂e
 
Æöe
;

2023 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2025 !
eof
) {

2026 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

2027 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

2028 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

2029 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

2030 
¥löeôem
->
	`gë_vÆue
(10, 
Æöe
.
L_SHIPDATE
, 15);

2032 
time_t
 
shùd©e
 = 
	`°r_to_timë
(
Æöe
.
L_SHIPDATE
);

2033 
tm
 
d©e
 = (*
	`loˇ…ime
(&
shùd©e
));

2034 
¥i˚
 = 
Æöe
.
L_EXTENDEDPRICE
*(1-álöe.
L_DISCOUNT
);

2036 
m≠
<,>:: 
ôî©‹
 
‹dî
 = 
‹dîk_cu°k
.
	`föd
(
Æöe
.
L_ORDERKEY
);

2037 
m≠
<,>:: 
ôî©‹
 
suµ
 = 
suµ_«ti⁄k
.
	`föd
(
Æöe
.
L_SUPPKEY
);

2038 
m≠
<,>:: 
ôî©‹
 
cu°
;

2040 if(
‹dî
 !
‹dîk_cu°k
.
	`íd
(Ë&& 
suµ
 !
suµ_«ti⁄k
.end() &&

2041 
d©e
.
tm_yór
 <= 96 && date.tm_year >= 95){

2043 
cu°
 = 
cu°_«ti⁄K
.
	`föd
(
‹dî
->
£c⁄d
);

2045 if(
cu°
 !
cu°_«ti⁄K
.
	`íd
()){

2046 if(
cu°
->
£c⁄d
 !
suµ
->second){

2047 
m≠
<
q7_group_by_key_t
, , 
q7_group_by_comp
>::
ôî©‹
 
ô
=

2048 
vﬁ_shùpög
.
	`föd
(
	`q7_group_by_key_t
(
suµ
->
£c⁄d
,

2049 
cu°
->
£c⁄d
,

2050 
d©e
.
tm_yór
));

2051 if–
ô
 !
vﬁ_shùpög
.
	`íd
()){

2052 
c
 = 
ô
->
£c⁄d
;

2053 
c
 +
¥i˚
;

2054 
vﬁ_shùpög
.
	`ö£π
(
∑ú
<
q7_group_by_key_t
,

2056 (
	`q7_group_by_key_t
(
suµ
->
£c⁄d
,

2057 
cu°
->
£c⁄d
,

2058 
d©e
.
tm_yór
), 
c
));

2060 
vﬁ_shùpög
.
	`ö£π
(
∑ú
<
q7_group_by_key_t
, >

2061 (
	`q7_group_by_key_t
(
suµ
->
£c⁄d
,

2062 
cu°
->
£c⁄d
,

2063 
d©e
.
tm_yór
),

2064 
¥i˚
));

2069 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2072  
RCOK
;

2073 
	}
}

2083 
	sq8_ö√r_èbÀ
{

2085 
	ms_key
;

2086 
	mo_yór
;

2087 
	m¥i˚
;

2089 
q8_ö√r_èbÀ
(
s
, 
o
, 
p
){

2090 
	ms_key
 = 
s
;

2091 
	mo_yór
 = 
o
;

2092 
	m¥i˚
 = 
p
;

2097 
	sq8_grou≥_by_vÆue_t
{

2098 
	ma
;

2099 
	mb
;

2101 
q8_grou≥_by_vÆue_t
(
Ø
, 
bb
){

2103 
	ma
 = 
Ø
;

2104 
	mb
 = 
bb
;

2109 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q8
(c⁄° , 
q8_öput_t
& 
q8ö
)

2112 
	`as£π
 (
_pssm
);

2113 
	`as£π
 (
_öôülized
);

2114 
	`as£π
 (
_lﬂded
);

2117 
r_key
;

2118 
m≠
<, 
boﬁ
> 
«ti⁄_k
;

2120 
tu∂e_gu¨d
<
«ti⁄_m™_im∂
> 
	`¥«ti⁄
(
_≤©i⁄_m™
);

2122 
ªp_row_t
 
	`¨ïrow
(
_≤©i⁄_m™
->
	`ts
());

2123 
¨ïrow
.
	`£t
(
_≤©i⁄_desc
->
	`maxsize
());

2125 
¥«ti⁄
->
_ªp
 = &
¨ïrow
;

2127 
	`W_DO
(
_≤©i⁄_m™
->
	`n_ödex_¥obe
(
_pssm
, 
¥«ti⁄
, 
q8ö
.
n_«me
));

2129 
¥«ti⁄
->
	`gë_vÆue
(2, 
r_key
);

2132 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
> > 
n_ôî
;

2134 
èbÀ_sˇn_ôî_im∂
<
«ti⁄_t
>* 
tmp_n_ôî
;

2135 
	`W_DO
(
_≤©i⁄_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_n_ôî
));

2136 
n_ôî
 = 
tmp_n_ôî
;

2139 
boﬁ
 
eof
;

2140 
çch_«ti⁄_tu∂e
 
™©i⁄
;

2142 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

2144 !
eof
) {

2145 
¥«ti⁄
->
	`gë_vÆue
(2, 
™©i⁄
.
N_REGIONKEY
);

2146 
¥«ti⁄
->
	`gë_vÆue
(0, 
™©i⁄
.
N_NATIONKEY
);

2147 if(
™©i⁄
.
N_REGIONKEY
 =
r_key
) {

2148 
«ti⁄_k
.
	`ö£π
(
∑ú
<,
boﬁ
>(
™©i⁄
.
N_NATIONKEY
, 
åue
));

2150 
	`W_DO
(
n_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥«ti⁄
));

2154 
m≠
<, 
boﬁ
> 
p_keys
;

2155 
p_ty≥
[26];

2156 
	`ty≥_to_°r
(
q8ö
.
p_ty≥
,Ö_type);

2158 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

2160 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

2161 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

2163 
¥∑π
->
_ªp
 = &
¥ïrow
;

2165 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

2167 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

2168 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

2169 
p_ôî
 = 
tmp_p_ôî
;

2172 
çch_∑π_tu∂e
 
≠¨t
;

2174 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

2176 !
eof
){

2177 
¥∑π
->
	`gë_vÆue
(4, 
≠¨t
.
P_TYPE
, 25);

2178 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

2179 if–
	`°rcmp
(
≠¨t
.
P_TYPE
, 
p_ty≥
 ) == 0 ){

2180 
p_keys
.
	`ö£π
(
∑ú
<,
boﬁ
> (
≠¨t
.
P_PARTKEY
, 
åue
));

2182 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

2186 
m≠
<, 
boﬁ
> 
cu°_k
;

2188 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

2190 
ªp_row_t
 
	`a¸ïrow
(
_pcu°omî_m™
->
	`ts
());

2191 
a¸ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

2193 
¥cu°omî
->
_ªp
 = &
a¸ïrow
;

2195 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

2197 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

2198 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

2199 
c_ôî
 = 
tmp_c_ôî
;

2202 
çch_cu°omî_tu∂e
 
acu°
;

2204 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

2206 !
eof
){

2207 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

2208 
¥cu°omî
->
	`gë_vÆue
(3, 
acu°
.
C_NATIONKEY
);

2209 if–
«ti⁄_k
.
	`föd
(
acu°
.
C_NATIONKEY
Ë!«ti⁄_k.
	`íd
()){

2210 
cu°_k
.
	`ö£π
(
∑ú
<,
boﬁ
>(
acu°
.
C_CUSTKEY
,
åue
));

2212 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

2217 
m≠
<,> 
‹dîs_ky
;

2219 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dîs
(
_p‹dîs_m™
);

2221 
ªp_row_t
 
	`a‹ïrow
(
_p‹dîs_m™
->
	`ts
());

2222 
a‹ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2224 
¥‹dîs
->
_ªp
 = & 
a‹ïrow
;

2226 
ªp_row_t
 
	`lowªp
(
_p‹dîs_m™
->
	`ts
());

2227 
ªp_row_t
 
	`highªp
(
_p‹dîs_m™
->
	`ts
());

2229 
lowªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2230 
highªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2232 
tm
 
d©e1
; d©e1.
tm_yór
 = 95; d©e1.
tm_m⁄
 = 0; d©e1.
tm_mday
 = 1;

2233 
tm
 
d©e2
; d©e2.
tm_yór
 = 96; d©e2.
tm_m⁄
 = 11; d©e2.
tm_mday
 = 31;

2234 
time_t
 
t1
 = 
	`mktime
(&
d©e1
);

2235 
time_t
 
t2
 = 
	`mktime
(&
d©e2
);

2237 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

2239 
ödex_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

2240 
	`W_DO
(
_p‹dîs_m™
->
	`o_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_o_ôî
, 
¥‹dîs
,

2241 
lowªp
, 
highªp
, 
t1
, 
t2
));

2242 
o_ôî
 = 
tmp_o_ôî
;

2245 
çch_‹dîs_tu∂e
 
™‹dî
;

2247 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

2249 !
eof
){

2250 
¥‹dîs
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

2251 
¥‹dîs
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

2252 
¥‹dîs
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
, 15);

2253 
time_t
 
t
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

2254 
tm
 
d©e
 = *(
	`loˇ…ime
(&
t
));

2255 if–
cu°_k
.
	`föd
(
™‹dî
.
O_CUSTKEY
Ë!cu°_k.
	`íd
()) {

2256 
‹dîs_ky
.
	`ö£π
(
∑ú
<,>(
™‹dî
.
O_ORDERKEY
, 
d©e
.
tm_yór
));

2258 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

2262 
m≠
<,> 
suµ_«ti⁄
;

2264 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

2266 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

2267 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

2269 
¥suµ
->
_ªp
 = &
§ïrow
;

2271 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

2273 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

2274 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

2275 
s_ôî
 = 
tmp_s_ôî
;

2278 
çch_suµlõr_tu∂e
 
asuµlõr
;

2280 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2282 !
eof
){

2283 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

2284 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

2285 
suµ_«ti⁄
.
	`ö£π
(
∑ú
<,>(
asuµlõr
.
S_SUPPKEY
,

2286 
asuµlõr
.
S_NATIONKEY
));

2287 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2291 
ve˘‹
 <
q8_ö√r_èbÀ
> 
Æl_«ti⁄
;

2293 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

2295 
ªp_row_t
 
	`Æª¥ow
(
_∂öeôem_m™
->
	`ts
());

2296 
Æª¥ow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2298 
¥löeôem
->
_ªp
 = &
Æª¥ow
;

2300 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

2302 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

2303 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

2304 
l_ôî
 = 
tmp_l_ôî
;

2307 
çch_löeôem_tu∂e
 
Æöe
;

2309 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2311 !
eof
) {

2312 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

2313 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

2314 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

2315 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

2316 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

2317 
¥i˚
 = (1-
Æöe
.
L_DISCOUNT
)*Æöe.
L_EXTENDEDPRICE
;

2318 
m≠
<,
boﬁ
>:: 
ôî©‹
 
pô
 = 
p_keys
.
	`föd
(
Æöe
.
L_PARTKEY
);

2319 
m≠
<,>::
ôî©‹
 
oô
 = 
‹dîs_ky
.
	`föd
(
Æöe
.
L_ORDERKEY
);

2320 if(
pô
 !
p_keys
.
	`íd
(Ë&& 
oô
 !
‹dîs_ky
.end()) {

2321 
Æl_«ti⁄
.
	`push_back
(
	`q8_ö√r_èbÀ
(
Æöe
.
L_SUPPKEY
,

2322 
oô
->
£c⁄d
, 
¥i˚
));

2324 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2328 
m≠
<,
q8_grou≥_by_vÆue_t
> 
mkt_sh¨e
;

2329 
m≠
<,
q8_grou≥_by_vÆue_t
>::
ôî©‹
 
ô
;

2331 
i
 = 0; i < 
Æl_«ti⁄
.
	`size
(); i++){

2332 
ô
 = 
mkt_sh¨e
.
	`föd
(
Æl_«ti⁄
[
i
].
o_yór
);

2333 
a
,
b
;

2334 i‡(
ô
 !
mkt_sh¨e
.
	`íd
()){

2335 
a
 = 
ô
->
£c⁄d
.a;

2336 
b
 = 
ô
->
£c⁄d
.b;

2338 
a
 = 0;

2339 
b
 =0;

2341 if–
suµ_«ti⁄
.
	`föd
(
Æl_«ti⁄
[
i
].
s_key
)->
£c⁄d
 =
q8ö
.
n_«me
){

2342 
a
+=
Æl_«ti⁄
[
i
].
¥i˚
;

2344 
b
+=
Æl_«ti⁄
[
i
].
¥i˚
;

2345 
mkt_sh¨e
.
	`ö£π
(
∑ú
<,
q8_grou≥_by_vÆue_t
>(
Æl_«ti⁄
[
i
].
o_yór
,

2346 
	`q8_grou≥_by_vÆue_t
(
a
,

2347 
b
)));

2350  
RCOK
;

2351 
	}
}

2361 
	sq9_group_by_key_t
{

2363 
	m«ti⁄_k
;

2364 
	myór
;

2366 
q9_group_by_key_t
(
n
, 
y
){

2368 
	m«ti⁄_k
 = 
n
;

2369 
	myór
 = 
y
;

2373 ˛as†
	cq9_group_by_comp
 {

2374 
	mpublic
:

2375 
boﬁ
 
	$›î©‹
() (

2376 c⁄° 
q9_group_by_key_t
& 
lhs
,

2377 c⁄° 
q9_group_by_key_t
& 
rhs
) const

2379  (
lhs
.
«ti⁄_k
 < 
rhs
.nation_k) ||

2380 (
lhs
.
«ti⁄_k
 =
rhs
.«ti⁄_k &&Ühs.
yór
 <Ñhs.year);

2382 
	}
};

2385 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q9
(c⁄° , 
q9_öput_t
& 
q9ö
)

2388 
	`as£π
 (
_pssm
);

2389 
	`as£π
 (
_öôülized
);

2390 
	`as£π
 (
_lﬂded
);

2393 
m≠
<, 
boﬁ
> 
p_keys
;

2395 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

2397 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

2398 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

2400 
¥∑π
->
_ªp
 = &
¥ïrow
;

2402 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

2404 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

2405 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

2406 
p_ôî
 = 
tmp_p_ôî
;

2409 
boﬁ
 
eof
;

2410 
çch_∑π_tu∂e
 
≠¨t
;

2412 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

2414 !
eof
){

2415 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

2416 
¥∑π
->
	`gë_vÆue
(1, 
≠¨t
.
P_NAME
, 55);

2417 
∑π_«me
[55];

2418 
	`≤ame_to_°r
(
q9ö
.
p_«me
, 
∑π_«me
);

2419 if(
	`°r°r
(
≠¨t
.
P_NAME
,
∑π_«me
Ë!
NULL
){

2420 
p_keys
.
	`ö£π
(
∑ú
<,
boﬁ
> ( 
≠¨t
.
P_PARTKEY
, 0));

2422 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

2426 
m≠
<,> 
suµK_nK
;

2428 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

2430 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

2431 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

2433 
¥suµ
->
_ªp
 = &
§ïrow
;

2435 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

2437 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

2438 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

2439 
s_ôî
 = 
tmp_s_ôî
;

2442 
çch_suµlõr_tu∂e
 
asuµlõr
;

2444 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2446 !
eof
){

2447 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

2448 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

2449 
suµK_nK
.
	`ö£π
(
∑ú
<,>(
asuµlõr
.
S_SUPPKEY
,asuµlõr.
S_NATIONKEY
));

2450 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2454 
m≠
<,> 
‹dîK_y
;

2456 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

2458 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

2459 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2461 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

2463 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

2465 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

2466 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

2467 
o_ôî
 = 
tmp_o_ôî
;

2470 
çch_‹dîs_tu∂e
 
™‹dî
;

2472 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

2474 !
eof
){

2475 
¥‹dî
->
	`gë_vÆue
(1, 
™‹dî
.
O_ORDERKEY
);

2476 
¥‹dî
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
,15);

2477 
time_t
 
t
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

2478 
tm
 
d©e
 = *
	`loˇ…ime
(&
t
);

2479 
‹dîK_y
.
	`ö£π
–
∑ú
<,> (
™‹dî
.
O_ORDERKEY
, 
d©e
.
tm_yór
));

2480 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

2484 
m≠
 <
q9_group_by_key_t
, 
decimÆ
, 
q9_group_by_comp
> 
¥ofô_m
;

2486 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

2488 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

2489 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2491 
¥löeôem
->
_ªp
 = &
¨ïrow
;

2493 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥∑πsuµ
(
_µ¨tsuµ_m™
);

2495 
ªp_row_t
 
	`≠§ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

2496 
≠§ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

2498 
¥∑πsuµ
->
_ªp
 = &
≠§ïrow
;

2500 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

2502 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

2503 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

2504 
l_ôî
 = 
tmp_l_ôî
;

2507 
çch_löeôem_tu∂e
 
Æöe
;

2508 
çch_∑πsuµ_tu∂e
 
≠¨tsuµ
;

2510 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2512 !
eof
) {

2513 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

2514 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

2515 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

2516 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

2517 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

2518 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

2519 if((
_µ¨tsuµ_m™
->
	`ps_ödex_¥obe
(
_pssm
, 
¥∑πsuµ
, 
Æöe
.
L_PARTKEY
,

2520 
Æöe
.
L_SUPPKEY
)).
	`is_îr‹
()) {

2521 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2524 
¥∑πsuµ
->
	`gë_vÆue
(3, 
≠¨tsuµ
.
PS_SUPPLYCOST
);

2526 
decimÆ
 
¥i˚
 = 
Æöe
.
L_EXTENDEDPRICE
 * (1 -álöe.
L_DISCOUNT
) -

2527 
≠¨tsuµ
.
PS_SUPPLYCOST
* 
Æöe
.
L_QUANTITY
;

2529 if–
p_keys
.
	`föd
(
Æöe
.
L_PARTKEY
Ë!p_keys.
	`íd
() ){

2530 
m≠
<,>::
ôî©‹
 
oô
 = 
‹dîK_y
.
	`föd
–
Æöe
.
L_ORDERKEY
);

2531 
m≠
<,>::
ôî©‹
 
sô
 = 
suµK_nK
.
	`föd
–
Æöe
.
L_SUPPKEY
);

2533 if(
oô
 =
‹dîK_y
.
	`íd
(Ë|| 
sô
 =
suµK_nK
.end()){

2534 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2538 
y
 = 
oô
->
£c⁄d
;

2539 
«ti⁄_k
 = 
sô
->
£c⁄d
;

2540 
m≠
 <
q9_group_by_key_t
, 
decimÆ
, 
q9_group_by_comp
>::
ôî©‹
 
ô
 =

2541 
¥ofô_m
.
	`föd
(
	`q9_group_by_key_t
(
«ti⁄_k
, 
y
));

2542 
decimÆ
 
c
 = 
¥i˚
;

2543 if–
ô
 !
¥ofô_m
.
	`íd
()) {

2544 
c
 +
ô
->
£c⁄d
;

2546 
¥ofô_m
.
	`ö£π
(
∑ú
<
q9_group_by_key_t
, 
decimÆ
>

2547 (
	`q9_group_by_key_t
(
«ti⁄_k
, 
y
Ë,
c
) );

2549 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2552  
RCOK
;

2553 
	}
}

2563 ˛as†
	cq10_group_by_key_t
{

2565 
	mpublic
:

2567 
c_cu°key
;

2568 
	mc_«me
[25];

2569 
decimÆ
 
	mc_ac˘bÆ
;

2570 
	mph⁄e
[15];

2571 
	mn_key
;

2572 
	mc_addªss
[40];

2573 
	mc_commít
[117];

2575 
	mq10_group_by_key_t


2576 (
	mk
, * 
	m«me
, 
decimÆ
 
	mbÆ
, * 
	mph⁄e
, 
	mn
, * 
	madd
, * 
	mcmt
){

2577 
	mc_cu°key
 = 
k
;

2578 
°r˝y
(
c_«me
, 
«me
);

2579 
	mc_ac˘bÆ
 = 
bÆ
;

2580 
°r˝y
(
ph⁄e
,Öhone);

2581 
	mn_key
 = 
n
;

2582 
°r˝y
(
c_addªss
, 
add
);

2583 
°r˝y
(
c_commít
, 
cmt
);

2588 ˛as†
	cq10_group_by_key_comp
{

2590 
	mpublic
:

2591 
boﬁ
 
	$›î©‹
() (

2592 c⁄° 
q10_group_by_key_t
& 
lhs
,

2593 c⁄° 
q10_group_by_key_t
& 
rhs
) const

2595  
lhs
.
c_cu°key
 < 
rhs
.c_custkey;

2597 
	}
};

2601 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q10
(c⁄° , 
q10_öput_t
& 
q10ö
)

2604 
	`as£π
 (
_pssm
);

2605 
	`as£π
 (
_öôülized
);

2606 
	`as£π
 (
_lﬂded
);

2608 
tm
 
d©e2
 = *
	`gmtime
(&
q10ö
.
o_‹dîd©e
);

2609 
d©e2
.
tm_m⁄
 += 3;

2610 if–
d©e2
.
tm_m⁄
 > 11){

2611 
d©e2
.
tm_m⁄
 -= 12;

2612 
d©e2
.
tm_yór
++;

2615 
time_t
 
t2
 = 
	`mktime
(&
d©e2
);

2616 
time_t
 
t1
 = 
q10ö
.
o_‹dîd©e
;

2619 
m≠
<, 
ve˘‹
<>* > 
cu°_‹dîsK
;

2620 
m≠
<, > 
‹dîs_¥i˚
;

2622 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

2624 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

2625 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2627 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

2629 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

2631 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

2632 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

2633 
o_ôî
 = 
tmp_o_ôî
;

2636 
boﬁ
 
eof
;

2637 
çch_‹dîs_tu∂e
 
™‹dî
;

2639 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

2641 !
eof
){

2642 
¥‹dî
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

2643 
¥‹dî
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

2644 
¥‹dî
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
, 15);

2645 
time_t
 
‹dîd©e
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

2646 if(
‹dîd©e
 >
t1
 && ordîd©ê< 
t2
){

2647 
‹dîs_¥i˚
.
	`ö£π
(
∑ú
<,>(
™‹dî
.
O_ORDERKEY
, 0.0));

2648 
m≠
<, 
ve˘‹
<>* >::
ôî©‹
 
ô
 =

2649 
cu°_‹dîsK
.
	`föd
(
™‹dî
.
O_CUSTKEY
);

2650 if–
ô
 !
cu°_‹dîsK
.
	`íd
() ){

2651 
ô
->
£c⁄d
->
	`push_back
(
™‹dî
.
O_ORDERKEY
);

2653 
ve˘‹
<> * 
v
 = 
√w
 vector<>();

2654 
v
->
	`push_back
(
™‹dî
.
O_ORDERKEY
);

2655 
cu°_‹dîsK
.
	`ö£π
(
∑ú
<, 
ve˘‹
<>*>(
™‹dî
.
O_CUSTKEY
,
v
));

2658 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

2662 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

2664 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

2665 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2667 
¥löeôem
->
_ªp
 = &
¨ïrow
;

2669 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

2671 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

2672 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

2673 
l_ôî
 = 
tmp_l_ôî
;

2676 
çch_löeôem_tu∂e
 
Æöe
;

2678 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2680 !
eof
) {

2681 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

2682 
¥löeôem
->
	`gë_vÆue
(8, 
Æöe
.
L_RETURNFLAG
);

2683 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

2684 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

2685 
¥i˚
 = (1 - 
Æöe
.
L_DISCOUNT
Ë*álöe.
L_EXTENDEDPRICE
;

2686 
m≠
<,>::
ôî©‹
 
ô
 = 
‹dîs_¥i˚
.
	`föd
(
Æöe
.
L_ORDERKEY
);

2687 if(
Æöe
.
L_RETURNFLAG
 ='R' && 
ô
 !
‹dîs_¥i˚
.
	`íd
() ){

2688 
c
 = 
ô
->
£c⁄d
;

2689 
c
 +
¥i˚
;

2690 
‹dîs_¥i˚
[ 
Æöe
.
L_ORDERKEY
 ] = 
c
;

2692 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2696 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

2698 
ªp_row_t
 
	`a¸ïrow
(
_pcu°omî_m™
->
	`ts
());

2699 
a¸ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

2701 
¥cu°omî
->
_ªp
 = &
a¸ïrow
;

2703 
çch_cu°omî_tu∂e
 
acu°
;

2704 
m≠
<
q10_group_by_key_t
, , 
q10_group_by_key_comp
> 
cu°omî_ªv
;

2705 
m≠
<, 
ve˘‹
<>* > :: 
ôî©‹
 
cô
 = 
cu°_‹dîsK
.
	`begö
();

2707  
cô
 !
cu°_‹dîsK
.
	`íd
()){

2708 
ve˘‹
<>::
ôî©‹
 
oô
 = 
cô
->
£c⁄d
->
	`begö
();

2709 
ªv
 = 0;

2710 
oô
 !
cô
->
£c⁄d
->
	`íd
()){

2711 
ªv
 +
‹dîs_¥i˚
.
	`föd
(*
oô
)->
£c⁄d
;

2712 
oô
++;

2714 if((
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°omî
,

2715 
cô
->
fú°
)).
	`is_îr‹
()) {

2716 
cô
++;

2719 
¥cu°omî
->
	`gë_vÆue
(1, 
acu°
.
C_NAME
, 25);

2720 
¥cu°omî
->
	`gë_vÆue
(2, 
acu°
.
C_ADDRESS
, 40);

2721 
¥cu°omî
->
	`gë_vÆue
(3, 
acu°
.
C_NATIONKEY
);

2722 
¥cu°omî
->
	`gë_vÆue
(4, 
acu°
.
C_PHONE
, 15);

2723 
¥cu°omî
->
	`gë_vÆue
(5, 
acu°
.
C_ACCTBAL
);

2724 
¥cu°omî
->
	`gë_vÆue
(2, 
acu°
.
C_COMMENT
, 117);

2725 
cu°omî_ªv
[
	`q10_group_by_key_t
(
cô
->
fú°
, 
acu°
.
C_NAME
,ácu°.
C_ACCTBAL
,

2726 
acu°
.
C_PHONE
,ácu°.
C_NATIONKEY
,

2727 
acu°
.
C_ADDRESS
,ácu°.
C_COMMENT
)] = 
ªv
;

2728 
cô
++;

2731  
RCOK
;

2732 
	}
}

2742 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q11
(c⁄° , 
q11_öput_t
& 
q11ö
)

2745 
	`as£π
 (
_pssm
);

2746 
	`as£π
 (
_öôülized
);

2747 
	`as£π
 (
_lﬂded
);

2750 
m≠
<,
boﬁ
> 
suµK
;

2752 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

2754 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

2755 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

2757 
¥suµ
->
_ªp
 = &
§ïrow
;

2759 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

2761 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

2762 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

2763 
s_ôî
 = 
tmp_s_ôî
;

2766 
boﬁ
 
eof
;

2767 
çch_suµlõr_tu∂e
 
asuµlõr
;

2769 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2771 !
eof
){

2772 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

2773 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

2774 if–
asuµlõr
.
S_NATIONKEY
 =
q11ö
.
n_«me
 ) {

2775 
suµK
.
	`ö£π
(
∑ú
<,
boﬁ
>(
asuµlõr
.
S_SUPPKEY
,
åue
));

2777 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

2781 
m≠
<, 
decimÆ
> 
∑πK_vÆ
;

2782 
decimÆ
 
tŸÆvÆ
 = 0;

2784 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥∑πsuµ
(
_µ¨tsuµ_m™
);

2786 
ªp_row_t
 
	`p§ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

2787 
p§ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

2789 
¥∑πsuµ
->
_ªp
 = &
p§ïrow
;

2791 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
> > 
ps_ôî
;

2793 
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
>* 
tmp_ps_ôî
;

2794 
	`W_DO
(
_µ¨tsuµ_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ps_ôî
));

2795 
ps_ôî
 = 
tmp_ps_ôî
;

2798 
çch_∑πsuµ_tu∂e
 
≠¨tsuµ
;

2800 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

2802 !
eof
){

2803 
¥∑πsuµ
->
	`gë_vÆue
(0, 
≠¨tsuµ
.
PS_PARTKEY
);

2804 
¥∑πsuµ
->
	`gë_vÆue
(1, 
≠¨tsuµ
.
PS_SUPPKEY
);

2805 
¥∑πsuµ
->
	`gë_vÆue
(2, 
≠¨tsuµ
.
PS_AVAILQTY
);

2806 
¥∑πsuµ
->
	`gë_vÆue
(3, 
≠¨tsuµ
.
PS_SUPPLYCOST
);

2807 if–
suµK
.
	`föd
(
≠¨tsuµ
.
PS_SUPPKEY
Ë!suµK.
	`íd
() ){

2808 
m≠
<,
decimÆ
>::
ôî©‹
 
pô
 =
∑πK_vÆ
.
	`föd
(
≠¨tsuµ
.
PS_PARTKEY
);

2809 
decimÆ
 
c
 = 
≠¨tsuµ
.
PS_AVAILQTY
 *á∑πsuµ.
PS_SUPPLYCOST
;

2810 
tŸÆvÆ
 +
c
;

2811 if–
pô
 !
∑πK_vÆ
.
	`íd
()){

2812 
c
 +
pô
->
£c⁄d
;

2814 
∑πK_vÆ
[
≠¨tsuµ
.
PS_PARTKEY
] = 
c
;

2816 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

2819  
RCOK
;

2820 
	}
}

2853 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q12
(c⁄° , 
q12_öput_t
& 
q12ö
)

2856 
	`as£π
 (
_pssm
);

2857 
	`as£π
 (
_öôülized
);

2858 
	`as£π
 (
_lﬂded
);

2861 
ve˘‹
<
∑ú
<, > > 
‹dîK_shùmode
;

2862 
m≠
<, 
∑ú
<,> > 
shpmd_HLC_LLC
;

2863 
shpmd_HLC_LLC
.
	`ö£π
(
∑ú
<,Öair<,> >

2864 (
q12ö
.
l_shùmode1
, 
∑ú
<,>(0,0)));

2865 
shpmd_HLC_LLC
.
	`ö£π
(
∑ú
<,Öair<,> >

2866 (
q12ö
.
l_shùmode2
, 
∑ú
<,>(0,0)));

2868 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

2870 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

2871 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2873 
¥löeôem
->
_ªp
 = &
¨ïrow
;

2875 
ªp_row_t
 
	`lowªp
(
_∂öeôem_m™
->
	`ts
());

2876 
ªp_row_t
 
	`highªp
(
_∂öeôem_m™
->
	`ts
());

2878 
lowªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2879 
highªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2881 
tm
 
d©e
;

2882 if(
	`gmtime_r
(&(
q12ö
.
l_ª˚ùtd©e
), &
d©e
Ë=
NULL
){

2883  
RCOK
;

2885 
d©e
.
tm_yór
++;

2886 
time_t
 
œ°_ª˚ùtd©e
 = 
	`mktime
(&
d©e
);

2888 
gu¨d
 <
ödex_sˇn_ôî_im∂
<
löeôem_t
> >
l_ôî
;

2890 
ödex_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

2891 
	`W_DO
(
_∂öeôem_m™
->

2892 
	`l_gë_ønge_ôî_by_ª˚ùtd©e_ödex
(
_pssm
, 
tmp_l_ôî
, 
¥löeôem
,

2893 
lowªp
, 
highªp
,

2894 
q12ö
.
l_ª˚ùtd©e
,

2895 
œ°_ª˚ùtd©e
));

2896 
l_ôî
 = 
tmp_l_ôî
;

2899 
boﬁ
 
eof
;

2900 
çch_löeôem_tu∂e
 
Æöe
;

2902 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2904 !
eof
){

2905 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

2906 
¥löeôem
->
	`gë_vÆue
(10, 
Æöe
.
L_SHIPDATE
, 15);

2907 
¥löeôem
->
	`gë_vÆue
(11, 
Æöe
.
L_COMMITDATE
, 15);

2908 
¥löeôem
->
	`gë_vÆue
(12, 
Æöe
.
L_RECEIPTDATE
, 15);

2909 
¥löeôem
->
	`gë_vÆue
(14, 
Æöe
.
L_SHIPMODE
, 10);

2910 
time_t
 
shùd©e
 = 
	`°r_to_timë
(
Æöe
.
L_SHIPDATE
);

2911 
time_t
 
commôd©e
 = 
	`°r_to_timë
(
Æöe
.
L_COMMITDATE
);

2912 
time_t
 
ª˚ùtd©e
 = 
	`°r_to_timë
(
Æöe
.
L_RECEIPTDATE
);

2913 
shùmode
 = 
	`°r_to_shùmode
(
Æöe
.
L_SHIPMODE
);

2914 if(
shùmode
 =
q12ö
.
l_shùmode1
 || shùmodê=q12ö.
l_shùmode2
) {

2915 if(
commôd©e
 < 
ª˚ùtd©e
 && 
shùd©e
 < commitdate) {

2916 
‹dîK_shùmode
.
	`push_back
(
∑ú
<,>(
Æöe
.
L_ORDERKEY
,

2917 
shùmode
));

2920 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

2924 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

2926 
ªp_row_t
 
	`a‹ïrow
(
_p‹dîs_m™
->
	`ts
());

2927 
a‹ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

2929 
¥‹dî
->
_ªp
 = &
a‹ïrow
;

2931 
ªp_row_t
 
	`low_ªp
(
_p‹dîs_m™
->
	`ts
());

2932 
ªp_row_t
 
	`high_ªp
(
_p‹dîs_m™
->
	`ts
());

2934 
low_ªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2935 
high_ªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

2936 
ve˘‹
<
∑ú
<,> >::
ôî©‹
 
ôî
 = 
‹dîK_shùmode
.
	`begö
();

2937 
ôî
 !
‹dîK_shùmode
.
	`íd
();

2938 
ôî
++){

2940 
‹dîKey
 = 
ôî
->
fú°
;

2941 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

2943 
ödex_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

2944 
	`W_DO
(
_p‹dîs_m™
->
	`o_gë_ôî_by_ödex
(
_pssm
, 
tmp_o_ôî
, 
¥‹dî
,

2945 
low_ªp
, 
high_ªp
, 
‹dîKey
));

2946 
o_ôî
 = 
tmp_o_ôî
;

2949 
boﬁ
 
eof
;

2951 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

2953 
¥i‹ôy
[15];

2954 
¥‹dî
->
	`gë_vÆue
(5, 
¥i‹ôy
, 15);

2956 
hlc
 = 
shpmd_HLC_LLC
[
ôî
->
£c⁄d
].
fú°
;

2957 
Œc
 = 
shpmd_HLC_LLC
[
ôî
->
£c⁄d
].second;

2959 if(
	`°rcmp
(
¥i‹ôy
,"2-HIGH"Ë=0 
‹
 strcmp(priority,"1-URGENT") ==0){

2960 
shpmd_HLC_LLC
[
ôî
->
£c⁄d
] = 
∑ú
<,>–
hlc
+1, 
Œc
);

2962 
shpmd_HLC_LLC
[
ôî
->
£c⁄d
] = 
∑ú
<,>–
hlc
, 
Œc
+1);

2966  
RCOK
;

2967 
	}
}

2977 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q13
(c⁄° , 
q13_öput_t
& )

2980 
	`as£π
 (
_pssm
);

2981 
	`as£π
 (
_öôülized
);

2982 
	`as£π
 (
_lﬂded
);

3004 
m≠
<,> 
c_‹dîs
;

3006 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

3008 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

3009 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

3011 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

3014 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

3016 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

3017 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

3018 
c_ôî
 = 
tmp_c_ôî
;

3021 
boﬁ
 
eof
;

3022 
çch_cu°omî_tu∂e
 
acu°
;

3024 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

3026 !
eof
){

3027 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

3028 
c_‹dîs
[ 
acu°
.
C_CUSTKEY
 ] = 0;

3029 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

3033 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

3035 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

3036 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

3038 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

3040 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

3042 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

3043 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

3044 
o_ôî
 = 
tmp_o_ôî
;

3047 
çch_‹dîs_tu∂e
 
a‹dî
;

3049 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

3051 !
eof
){

3052 
¥‹dî
->
	`gë_vÆue
(1, 
a‹dî
.
O_CUSTKEY
);

3053 
n
 = 
c_‹dîs
[ 
a‹dî
.
O_CUSTKEY
 ];

3054 
n
++;

3055 
c_‹dîs
[ 
a‹dî
.
O_CUSTKEY
 ] = 
n
;

3056 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

3060 
m≠
<, > 
o_cou¡_cu°
;

3062 
m≠
<,>::
ôî©‹
 
ôî
 = 
c_‹dîs
.
	`begö
();

3063 
ôî
 !
c_‹dîs
.
	`íd
();

3064 
ôî
++){

3065 
m≠
<,>::
ôî©‹
 
tmp
 = 
o_cou¡_cu°
.
	`föd
(
ôî
->
£c⁄d
);

3066 if(
tmp
 !
o_cou¡_cu°
.
	`íd
()){

3067 
c
 = 
tmp
->
£c⁄d
;

3068 
c
++;

3069 
o_cou¡_cu°
[
ôî
->
£c⁄d
] = 
c
;

3071 
o_cou¡_cu°
[
ôî
->
£c⁄d
] = 1;

3075  
RCOK
;

3076 
	}
}

3086 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q14
(c⁄° , 
q14_öput_t
& 
q14ö
)

3089 
	`as£π
 (
_pssm
);

3090 
	`as£π
 (
_öôülized
);

3091 
	`as£π
 (
_lﬂded
);

3093 
m≠
<, 
ve˘‹
<>* > 
pKey_¥i˚s
;

3094 
tŸÆªvíue
 = 0;

3097 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3099 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

3100 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3102 
¥löeôem
->
_ªp
 = &
¨ïrow
;

3104 
ªp_row_t
 
	`lowªp
(
_∂öeôem_m™
->
	`ts
());

3105 
ªp_row_t
 
	`highªp
(
_∂öeôem_m™
->
	`ts
());

3107 
lowªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3108 
highªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3110 
tm
 
d©e
;

3111 if(
	`gmtime_r
(&(
q14ö
.
l_shùd©e
), &
d©e
Ë=
NULL
){

3112  
RCOK
;

3114 
d©e
.
tm_m⁄
+=1;

3115 if–
d©e
.
tm_m⁄
 > 11){

3116 
d©e
.
tm_m⁄
 -= 12;

3117 
d©e
.
tm_yór
 ++;

3119 
time_t
 
œ°_shùd©e
 = 
	`mktime
(&
d©e
);

3121 
gu¨d
<
ödex_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3123 
ödex_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3124 
	`W_DO
(
_∂öeôem_m™
->
	`l_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_l_ôî
,

3125 
¥löeôem
, 
lowªp
,

3126 
highªp
, 
q14ö
.
l_shùd©e
,

3127 
œ°_shùd©e
));

3128 
l_ôî
 = 
tmp_l_ôî
;

3131 
boﬁ
 
eof
;

3132 
çch_löeôem_tu∂e
 
Æöe
;

3134 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3136 !
eof
){

3137 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

3138 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

3139 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

3140 
thïri˚
 = 
Æöe
.
L_EXTENDEDPRICE
 *(1 -álöe.
L_DISCOUNT
);

3141 
m≠
<, 
ve˘‹
<>*>::
ôî©‹
 
pve˘‹
 =

3142 
pKey_¥i˚s
.
	`föd
(
Æöe
.
L_PARTKEY
);

3143 if–
pve˘‹
 !
pKey_¥i˚s
.
	`íd
() ){

3144 
pve˘‹
->
£c⁄d
->
	`push_back
–
thïri˚
 );

3146 
ve˘‹
<>* 
v
 = 
√w
 vector<>();

3147 
v
->
	`push_back
–
thïri˚
 );

3148 
pKey_¥i˚s
.
	`ö£π
(
∑ú
<, 
ve˘‹
<>* > (
Æöe
.
L_PARTKEY
, 
v
));

3150 
tŸÆªvíue
 +
thïri˚
;

3151 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3155 
¥om‹evíue
 = 0;

3158 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

3160 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

3161 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

3163 
¥∑π
->
_ªp
 = &
¥ïrow
;

3165 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

3167 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

3168 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

3169 
p_ôî
 = 
tmp_p_ôî
;

3172 
çch_∑π_tu∂e
 
≠¨t
;

3174 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3176 !
eof
){

3177 
¥∑π
->
	`gë_vÆue
(4, 
≠¨t
.
P_TYPE
, 25);

3178 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

3179 
m≠
<,
ve˘‹
<>* >::
ôî©‹
 
ãmp
=
pKey_¥i˚s
.
	`föd
(
≠¨t
.
P_PARTKEY
);

3180 if–
	`°r°r
(
≠¨t
.
P_TYPE
, "PROMO"Ë!
NULL
 && 
ãmp
 !
pKey_¥i˚s
.
	`íd
() ){

3181 
i
 = 0; i < 
ãmp
->
£c⁄d
->
	`size
(); i++ ){

3182 
¥om‹evíue
 +–*–
ãmp
->
£c⁄d
 ) )[
i
];

3185 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3188  
RCOK
;

3189 
	}
}

3199 
	ssuµlõrcmp
 {

3200 
boﬁ
 
›î©‹
()–c⁄° 
	mçch_suµlõr_tu∂e
& 
	ms1
, c⁄°Åpch_suµlõr_tu∂e& 
	ms2
 ) const {

3201  
	ms1
.
	mS_SUPPKEY
 < 
	ms2
.S_SUPPKEY;

3206 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q15
(c⁄° , 
q15_öput_t
& 
q15ö
)

3209 
	`as£π
 (
_pssm
);

3210 
	`as£π
 (
_öôülized
);

3211 
	`as£π
 (
_lﬂded
);

3213 
m≠
<,> 
°ªam_id
;

3216 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3218 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

3219 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3221 
¥löeôem
->
_ªp
 = &
¨ïrow
;

3223 
ªp_row_t
 
	`lowªp
(
_∂öeôem_m™
->
	`ts
());

3224 
ªp_row_t
 
	`highªp
(
_∂öeôem_m™
->
	`ts
());

3226 
lowªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3227 
highªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3229 
tm
 
d©e
;

3230 if(
	`gmtime_r
(&(
q15ö
.
l_shùd©e
), &
d©e
Ë=
NULL
){

3231  
RCOK
;

3234 
d©e
.
tm_m⁄
+=3;

3235 if–
d©e
.
tm_m⁄
 > 11){

3236 
d©e
.
tm_m⁄
 -= 12;

3237 
d©e
.
tm_yór
 ++;

3239 
time_t
 
œ°_shùd©e
 = 
	`mktime
(&
d©e
);

3241 
gu¨d
<
ödex_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3243 
ödex_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3244 
	`W_DO
(
_∂öeôem_m™
->
	`l_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_l_ôî
,

3245 
¥löeôem
, 
lowªp
,

3246 
highªp
, 
q15ö
.
l_shùd©e
,

3247 
œ°_shùd©e
));

3248 
l_ôî
 = 
tmp_l_ôî
;

3251 
boﬁ
 
eof
;

3252 
çch_löeôem_tu∂e
 
Æöe
;

3254 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3256 !
eof
){

3257 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

3258 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

3259 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

3260 
thïri˚
 = 
Æöe
.
L_EXTENDEDPRICE
 *(1 -álöe.
L_DISCOUNT
);

3261 
m≠
<, >::
ôî©‹
 
tmp
 = 
°ªam_id
.
	`föd
(
Æöe
.
L_SUPPKEY
);

3262 if(
tmp
 !
°ªam_id
.
	`íd
()){

3263 
s
 = 
tmp
->
£c⁄d
;

3264 
s
 +
thïri˚
;

3265 
°ªam_id
[ 
Æöe
.
L_SUPPKEY
 ] = 
s
;

3267 
°ªam_id
[
Æöe
.
L_SUPPKEY
] = 
thïri˚
;

3269 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3272 
maxªv
 = 
°ªam_id
.
	`begö
()->
£c⁄d
;

3273 
m≠
<,>::
ôî©‹
 
ôî
 = 
°ªam_id
.
	`begö
();

3274 
ôî
 !
°ªam_id
.
	`íd
();

3275 
ôî
++) {

3276 if–
maxªv
 < 
ôî
->
£c⁄d
 ) {

3277 
maxªv
 = 
ôî
->
£c⁄d
;

3280 
m≠
<,>::
ôî©‹
 
ôî
 = 
°ªam_id
.
	`begö
();

3281 
ôî
 !
°ªam_id
.
	`íd
();

3282 
ôî
++) {

3283 if(
ôî
->
£c⁄d
 !
maxªv
) {

3284 
°ªam_id
.
	`îa£
(
ôî
);

3289 
m≠
<
çch_suµlõr_tu∂e
, , 
suµlõrcmp
> 
suµªv
;

3291 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

3293 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

3294 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

3296 
¥suµ
->
_ªp
 = &
§ïrow
;

3298 
m≠
<,>::
ôî©‹
 
ôî
 = 
°ªam_id
.
	`begö
();

3299 
ôî
 !
°ªam_id
.
	`íd
();

3300 
ôî
++){

3301 
_psuµlõr_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥suµ
, 
ôî
->
fú°
);

3302 
çch_suµlõr_tu∂e
 
asuµ
;

3303 
¥suµ
->
	`gë_vÆue
(1, 
asuµ
.
S_NAME
, 25);

3304 
¥suµ
->
	`gë_vÆue
(2, 
asuµ
.
S_ADDRESS
, 40);

3305 
¥suµ
->
	`gë_vÆue
(4, 
asuµ
.
S_PHONE
, 15);

3306 
suµªv
[
asuµ
] = 
ôî
->
£c⁄d
;

3309  
RCOK
;

3310 
	}
}

3319 
	sªquúed_ty≥
{

3321 
	mpublic
:

3323 
bønd
;

3324 
	mty≥
;

3325 
	msize
;

3327 
ªquúed_ty≥
(
b
, 
t
, 
s
){

3329 
	mbønd
 = 
b
;

3330 
	mty≥
 = 
t
;

3331 
	msize
 = 
s
;

3334 
ªquúed_ty≥
(){}

3337 
	sªquúed_ty≥_cmp
 {

3338 
boﬁ
 
›î©‹
()–c⁄° 
	mªquúed_ty≥
& 
	mr1
, c⁄°Ñequúed_ty≥& 
	mr2
 ) const {

3339  ( (
	mr1
.
	mbønd
 < 
	mr2
.brand) ||

3340 (
	mr1
.
	mbønd
 =
r2
.
bønd
 && 
r1
.
ty≥
 <Ñ2.type)||

3341 (
r1
.
bønd
 =
r2
.bønd &&Ñ1.
ty≥
 =r2.ty≥ &&Ñ1.
size
 <Ñ2.size) );

3346 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q16
(c⁄° , 
q16_öput_t
& 
q16ö
)

3349 
	`as£π
 (
_pssm
);

3350 
	`as£π
 (
_öôülized
);

3351 
	`as£π
 (
_lﬂded
);

3354 
m≠
<, 
ªquúed_ty≥
> 
pKeys_ty≥
;

3356 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

3358 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

3359 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

3361 
¥∑π
->
_ªp
 = &
¥ïrow
;

3363 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

3365 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

3366 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

3367 
p_ôî
 = 
tmp_p_ôî
;

3370 
boﬁ
 
eof
;

3371 
çch_∑π_tu∂e
 
≠¨t
;

3373 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3375 !
eof
){

3376 
psize
;

3377 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

3378 
¥∑π
->
	`gë_vÆue
(3, 
≠¨t
.
P_BRAND
, 10);

3379 
¥∑π
->
	`gë_vÆue
(4, 
≠¨t
.
P_TYPE
, 25);

3380 
¥∑π
->
	`gë_vÆue
(5, 
psize
);

3381 
bønd
 = 
	`°r_to_Bønd
(
≠¨t
.
P_BRAND
);

3382 *
sylb
;

3383 
ty≥
;

3384 
sylb
 = 
	`°πok
–
≠¨t
.
P_TYPE
," ");

3385 
ty≥
 = 
	`°r_to_ty≥s1
(
sylb
)*10 + 
	`°r_to_ty≥s2
(
	`°πok
(
NULL
," "));

3386 if–
bønd
 !
q16ö
.
p_bønd
 && 
ty≥
 !q16ö.
p_ty≥
){

3387 
i
 = 0; i < 8; i++) {

3388 if–
q16ö
.
p_size
[
i
] =
psize
){

3389 
pKeys_ty≥
[
≠¨t
.
P_PARTKEY
]=
	`ªquúed_ty≥
(
bønd
, 
psize
, 
ty≥
);

3394 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3398 
m≠
<,
boﬁ
> 
suµkeybl
;

3400 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

3402 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

3403 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

3405 
¥suµ
->
_ªp
 = &
§ïrow
;

3407 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

3409 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

3410 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

3411 
s_ôî
 = 
tmp_s_ôî
;

3414 
çch_suµlõr_tu∂e
 
asuµlõr
;

3416 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

3418 !
eof
){

3419 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

3420 
¥suµ
->
	`gë_vÆue
(6, 
asuµlõr
.
S_COMMENT
, 101);

3421 * 
p1
 = 
	`°r°r
(
asuµlõr
.
S_COMMENT
, "Customer");

3422 * 
p2
 = 
	`°r°r
(
asuµlõr
.
S_COMMENT
, "Complaints");

3423 if–
p1
!
NULL
 && 
p2
 != NULL){

3424 if–
p2
 - 
p1
 > 0 ) {

3425 
suµkeybl
[
asuµlõr
.
S_SUPPKEY
] = 
åue
;

3428 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

3432 
m≠
<
ªquúed_ty≥
, , 
ªquúed_ty≥_cmp
> 
suµcou¡
;

3434 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥∑πsuµ
(
_µ¨tsuµ_m™
);

3436 
ªp_row_t
 
	`p§ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

3437 
§ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

3439 
¥∑πsuµ
->
_ªp
 = &
p§ïrow
;

3441 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
> > 
ps_ôî
;

3443 
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
>* 
tmp_ps_ôî
;

3444 
	`W_DO
(
_µ¨tsuµ_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ps_ôî
));

3445 
ps_ôî
 = 
tmp_ps_ôî
;

3448 
çch_∑πsuµ_tu∂e
 
≠¨tsuµ
;

3450 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

3452 !
eof
){

3453 
¥∑πsuµ
->
	`gë_vÆue
(0, 
≠¨tsuµ
.
PS_PARTKEY
);

3454 
¥∑πsuµ
->
	`gë_vÆue
(1, 
≠¨tsuµ
.
PS_SUPPKEY
);

3455 
m≠
<, 
ªquúed_ty≥
>::
ôî©‹
 
tmpôî
;

3456 if((
tmpôî
 = 
pKeys_ty≥
.
	`föd
(
≠¨tsuµ
.
PS_PARTKEY
))!ıKeys_ty≥.
	`íd
() &&

3457 
suµkeybl
.
	`föd
(
≠¨tsuµ
.
PS_SUPPKEY
Ë=suµkeybl.
	`íd
()){

3458 
m≠
<
ªquúed_ty≥
, , 
ªquúed_ty≥_cmp
>::
ôî©‹
 
tmpôî2
;

3459 if((
tmpôî2
 = 
suµcou¡
.
	`föd
(
tmpôî
->
£c⁄d
))!suµcou¡.
	`íd
()){

3460 
c
 = 
tmpôî2
->
£c⁄d
;

3461 
c
++;

3462 
suµcou¡
[
tmpôî2
->
fú°
] = 
c
;

3464 
suµcou¡
[
tmpôî2
->
fú°
] = 1;

3467 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

3470  
RCOK
;

3471 
	}
}

3481 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q17
(c⁄° , 
q17_öput_t
& 
q17ö
 )

3484 
	`as£π
 (
_pssm
);

3485 
	`as£π
 (
_öôülized
);

3486 
	`as£π
 (
_lﬂded
);

3489 
m≠
<, 
ve˘‹
<
∑ú
<,> >* > 
pKey_löeôems
;

3491 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

3493 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

3494 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

3496 
¥∑π
->
_ªp
 = &
¥ïrow
;

3498 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

3500 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

3501 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

3502 
p_ôî
 = 
tmp_p_ôî
;

3505 
boﬁ
 
eof
;

3506 
çch_∑π_tu∂e
 
≠¨t
;

3508 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3510 !
eof
){

3511 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

3512 
¥∑π
->
	`gë_vÆue
(3, 
≠¨t
.
P_BRAND
, 10);

3513 
¥∑π
->
	`gë_vÆue
(6, 
≠¨t
.
P_CONTAINER
, 10);

3514 
bønd
 = 
	`°r_to_Bønd
(
≠¨t
.
P_BRAND
);

3515 *
s1
 = 
	`°πok
(
≠¨t
.
P_CONTAINER
, " ");

3516 
c⁄èöî
 = 
	`°r_to_c⁄èöîs1
(
s1
)*10+

3517 
	`°r_to_c⁄èöîs2
(
	`°πok
(
NULL
," "));

3518 if(
bønd
 =
q17ö
.
p_bønd
 && 
c⁄èöî
 =q17ö.
p_c⁄èöî
){

3519 
ve˘‹
<
∑ú
<,> > * 
v
 = 
√w
 vector<pair<,> > ();

3520 
pKey_löeôems
[
≠¨t
.
P_PARTKEY
] = 
v
;

3522 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3526 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3528 
ªp_row_t
 
	`¨ïrow
(
_∂öeôem_m™
->
	`ts
());

3529 
¨ïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3531 
¥löeôem
->
_ªp
 = &
¨ïrow
;

3533 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3535 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3536 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

3537 
l_ôî
 = 
tmp_l_ôî
;

3540 
çch_löeôem_tu∂e
 
Æöe
;

3542 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3544 !
eof
) {

3545 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

3546 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

3547 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

3548 
m≠
<, 
ve˘‹
<
∑ú
<,> >* >::
ôî©‹
 
tmpôî
;

3549 
tmpôî
 = 
pKey_löeôems
.
	`föd
(
Æöe
.
L_PARTKEY
);

3550 if(
tmpôî
 !
pKey_löeôems
.
	`íd
()){

3551 
tmpôî
->
£c⁄d
->
	`push_back
(
∑ú
<,>

3552 (
Æöe
.
L_EXTENDEDPRICE
,álöe.
L_QUANTITY
));

3554 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3558 
sum
 = 0;

3559 
m≠
<, 
ve˘‹
<
∑ú
<,> >* >::
ôî©‹
 
ôî
=
pKey_löeôems
.
	`begö
();

3560 
ôî
 !
pKey_löeôems
.
	`íd
();

3561 
ôî
++){

3562 if(
ôî
->
£c⁄d
->
	`size
() == 0){

3563 
	`dñëe
 (
ôî
->
£c⁄d
);

3566 
avg
 = 0;

3567 
i
=0; i< 
ôî
->
£c⁄d
->
	`size
(); i++){

3568 
avg
+(*(
ôî
->
£c⁄d
))[
i
].second;

3570 
avg
 /
ôî
->
£c⁄d
->
	`size
();

3571 
avg
 *= .2;

3572 
i
=0; i< 
ôî
->
£c⁄d
->
	`size
(); i++){

3573 if((*(
ôî
->
£c⁄d
))[
i
].£c⁄d < 
avg
){

3574 
sum
 +(*(
ôî
->
£c⁄d
))[
i
].
fú°
;

3577 
	`dñëe
 (
ôî
->
£c⁄d
);

3580  
RCOK
;

3581 
	}
}

3590 
	sQ18_row
{

3591 
	mc_«me
 [25];

3592 
	mc_key
;

3593 
time_t
 
	mo_‹dîd©e
;

3594 
decimÆ
 
	mo_tŸÆ¥i˚
;

3596 
Q18_row
(){}

3598 
Q18_row
(* 
«me
, 
key
, 
time_t
 
d©e
, 
decimÆ
 
¥i˚
){

3600 
°r˝y
(
c_«me
, 
«me
);

3601 
	mc_key
 = 
key
;

3602 
	mo_‹dîd©e
 = 
d©e
;

3603 
	mo_tŸÆ¥i˚
 = 
¥i˚
;

3607 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q18
(c⁄° , 
q18_öput_t
& 
q18ö
)

3610 
	`as£π
 (
_pssm
);

3611 
	`as£π
 (
_öôülized
);

3612 
	`as£π
 (
_lﬂded
);

3615 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3617 
ªp_row_t
 
	`Ãïrow
(
_∂öeôem_m™
->
	`ts
());

3618 
Ãïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3620 
¥löeôem
->
_ªp
 = &
Ãïrow
;

3622 
m≠
<, > 
‹dî_Squ™t
;

3623 
m≠
<, 
Q18_row
> 
ªsu…
;

3625 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3627 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3628 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

3629 
l_ôî
 = 
tmp_l_ôî
;

3632 
çch_löeôem_tu∂e
 
Æöe
;

3633 
boﬁ
 
eof
;

3635 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3637 !
eof
) {

3638 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

3639 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

3640 
m≠
<,>::
ôî©‹
 
ôî
 = 
‹dî_Squ™t
.
	`föd
–
Æöe
.
L_ORDERKEY
);

3641 if–
ôî
 !
‹dî_Squ™t
.
	`íd
()){

3642 
c
 = 
ôî
->
£c⁄d
;

3643 
c
+
Æöe
.
L_QUANTITY
;

3644 
‹dî_Squ™t
[
Æöe
.
L_ORDERKEY
] = 
c
;

3646 
‹dî_Squ™t
[
Æöe
.
L_ORDERKEY
] =álöe.
L_QUANTITY
;

3648 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3652 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dîs
(
_p‹dîs_m™
);

3653 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

3655 
ªp_row_t
 
	`‹ïrow
(
_pcu°omî_m™
->
	`ts
());

3656 
‹ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

3658 
¥‹dîs
->
_ªp
 = &
‹ïrow
;

3659 
¥cu°omî
->
_ªp
 = &
‹ïrow
;

3661 
ªp_row_t
 
	`lowªp
(
_pcu°omî_m™
->
	`ts
());

3662 
ªp_row_t
 
	`highªp
(
_pcu°omî_m™
->
	`ts
());

3664 
lowªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

3665 
highªp
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

3667 
m≠
<,>::
ôî©‹
 
ô
 = 
‹dî_Squ™t
.
	`begö
();

3668 
ô
 !
‹dî_Squ™t
.
	`íd
();

3669 
ô
++){

3671 
çch_‹dîs_tu∂e
 
™‹dî
;

3672 if–
ô
->
£c⁄d
 > 
q18ö
.
l_qu™tôy
){

3673 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

3675 
ödex_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

3676 
	`W_DO
(
_p‹dîs_m™
->
	`o_gë_ôî_by_ödex
(
_pssm
, 
tmp_o_ôî
,

3677 
¥‹dîs
, 
lowªp
, 
highªp
,

3678 
ô
->
fú°
));

3679 
o_ôî
 = 
tmp_o_ôî
;

3682 
boﬁ
 
eof
;

3684 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

3685 
¥‹dîs
->
	`gë_vÆue
(1, 
™‹dî
.
O_CUSTKEY
);

3686 
¥‹dîs
->
	`gë_vÆue
(3, 
™‹dî
.
O_TOTALPRICE
);

3687 
¥‹dîs
->
	`gë_vÆue
(4, 
™‹dî
.
O_ORDERDATE
, 15);

3691 
time_t
 
the_‹dîd©e
 = 
	`°r_to_timë
(
™‹dî
.
O_ORDERDATE
);

3692 
çch_cu°omî_tu∂e
 
acu°omî
;

3693 
_pcu°omî_m™
->
	`c_ödex_¥obe
(
_pssm
, 
¥cu°omî
, 
™‹dî
.
O_CUSTKEY
);

3694 
¥cu°omî
->
	`gë_vÆue
(1, 
acu°omî
.
C_NAME
, 25);

3695 
_pcu°omî_m™
->
	`give_tu∂e
(
¥cu°omî
);

3696 
ªsu…
.
	`ö£π
(
∑ú
<,
Q18_row
>(
ô
->
fú°
,
	`Q18_row
(
acu°omî
.
C_NAME
,

3697 
™‹dî
.
O_CUSTKEY
,

3698 
the_‹dîd©e
,

3699 
™‹dî
.
O_TOTALPRICE
)));

3702  
RCOK
;

3703 
	}
}

3713 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q19
(c⁄° , 
q19_öput_t
& 
q19ö
)

3716 
	`as£π
 (
_pssm
);

3717 
	`as£π
 (
_öôülized
);

3718 
	`as£π
 (
_lﬂded
);

3721 
m≠
<, > 
∑πkey_bønd
;

3722 
ªvíue
 = 0;

3724 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

3726 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

3727 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

3729 
¥∑π
->
_ªp
 = &
¥ïrow
;

3731 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

3733 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

3734 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

3735 
p_ôî
 = 
tmp_p_ôî
;

3738 
boﬁ
 
eof
;

3739 
çch_∑π_tu∂e
 
≠¨t
;

3741 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3743 !
eof
){

3744 
size
;

3745 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

3746 
¥∑π
->
	`gë_vÆue
(3, 
≠¨t
.
P_BRAND
, 10);

3747 
¥∑π
->
	`gë_vÆue
(5, 
size
 );

3748 
¥∑π
->
	`gë_vÆue
(6, 
≠¨t
.
P_CONTAINER
, 10);

3749 
bønd
 = 
	`°r_to_Bønd
–
≠¨t
.
P_BRAND
 );

3750 if–
bønd
 =
q19ö
.
p_bønd
[0] &&

3751 –
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "SM CASE") == 0 ||

3752 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "SM BOX") == 0 ||

3753 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "SM PACK") == 0 ||

3754 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "SM PKG") == 0 ) &&

3755 
size
 > 1 && size < 5 ){

3756 
∑πkey_bønd
.
	`ö£π
–
∑ú
<,>(
≠¨t
.
P_PARTKEY
, 1));

3757 } if–
bønd
 =
q19ö
.
p_bønd
[1] &&

3758 –
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BAG") ||

3759 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BOX") ||

3760 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED PKG") ||

3761 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED PACK") ) &&

3762 
size
 > 1 && size < 10){

3763 
∑πkey_bønd
.
	`ö£π
–
∑ú
<,> (
≠¨t
.
P_PARTKEY
, 2));

3764 } if–
bønd
 =
q19ö
.
p_bønd
[2] &&

3765 –
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BAG") ||

3766 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BAG") ||

3767 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BAG") ||

3768 
	`°rcmp
–
≠¨t
.
P_CONTAINER
, "MED BAG") ) &&

3769 
size
 > 1 && size < 15 ){

3770 
∑πkey_bønd
.
	`ö£π
–
∑ú
<,> (
≠¨t
.
P_PARTKEY
, 3));

3772 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3776 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3778 
ªp_row_t
 
	`Ãïrow
(
_∂öeôem_m™
->
	`ts
());

3779 
Ãïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3781 
¥löeôem
->
_ªp
 = &
Ãïrow
;

3783 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3785 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3786 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

3787 
l_ôî
 = 
tmp_l_ôî
;

3790 
çch_löeôem_tu∂e
 
Æöe
;

3792 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3794 !
eof
) {

3795 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

3796 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

3797 
¥löeôem
->
	`gë_vÆue
(5, 
Æöe
.
L_EXTENDEDPRICE
);

3798 
¥löeôem
->
	`gë_vÆue
(6, 
Æöe
.
L_DISCOUNT
);

3799 
¥löeôem
->
	`gë_vÆue
(13, 
Æöe
.
L_SHIPINSTRUCT
, 25);

3800 
¥löeôem
->
	`gë_vÆue
(14, 
Æöe
.
L_SHIPMODE
, 10);

3801 
m≠
<,>::
ôî©‹
 
ôî
 = 
∑πkey_bønd
.
	`föd
–
Æöe
.
L_PARTKEY
 );

3802 if(
ôî
 !
∑πkey_bønd
.
	`íd
() &&

3803 –
	`°rcmp
–
Æöe
.
L_SHIPMODE
, "AIR") == 0 ||

3804 
	`°rcmp
–
Æöe
.
L_SHIPMODE
, "AIR REG") == 0 ) &&

3805 
	`°rcmp
–
Æöe
.
L_SHIPINSTRUCT
, "DELIVER IN PERSON") == 0 &&

3806 
Æöe
.
L_QUANTITY
 >
q19ö
.
l_qu™tôy
[
ôî
->
£c⁄d
-1] &&

3807 
Æöe
.
L_QUANTITY
 <
q19ö
.
l_qu™tôy
[
ôî
->
£c⁄d
-1] + 10 ){

3808 
ªvíue
 +
Æöe
.
L_EXTENDEDPRICE
 * ( 1 -álöe.
L_DISCOUNT
 );

3810 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3813  
RCOK
;

3814 
	}
}

3824 
	söt_∑ú_cmp
 {

3825 
boﬁ
 
›î©‹
()–c⁄° 
	m∑ú
<,>& 
	mr1
, c⁄°Öaú<,>& 
	mr2
 ) const {

3826  (
	mr1
.
	mfú°
 < 
	mr2
.fú° || (Ñ1.fú° =
r2
.
fú°
 && 
r1
.
£c⁄d
 <Ñ2.second)) ;

3831 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q20
(c⁄° , 
q20_öput_t
& 
q20ö
)

3834 
	`as£π
 (
_pssm
);

3835 
	`as£π
 (
_öôülized
);

3836 
	`as£π
 (
_lﬂded
);

3838 
p_«me
[55];

3839 
	`≤ame_to_°r
(
q20ö
.
p_cﬁ‹
, 
p_«me
);

3842 
m≠
<,
boﬁ
> 
∑πkey
;

3844 
tu∂e_gu¨d
<
∑π_m™_im∂
> 
	`¥∑π
(
_µ¨t_m™
);

3846 
ªp_row_t
 
	`¥ïrow
(
_µ¨t_m™
->
	`ts
());

3847 
¥ïrow
.
	`£t
(
_µ¨t_desc
->
	`maxsize
());

3849 
¥∑π
->
_ªp
 = &
¥ïrow
;

3851 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑π_t
> > 
p_ôî
;

3853 
èbÀ_sˇn_ôî_im∂
<
∑π_t
>* 
tmp_p_ôî
;

3854 
	`W_DO
(
_µ¨t_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_p_ôî
));

3855 
p_ôî
 = 
tmp_p_ôî
;

3858 
boﬁ
 
eof
;

3859 
çch_∑π_tu∂e
 
≠¨t
;

3861 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3863 !
eof
){

3864 
¥∑π
->
	`gë_vÆue
(0, 
≠¨t
.
P_PARTKEY
);

3865 
¥∑π
->
	`gë_vÆue
(1, 
≠¨t
.
P_NAME
, 55);

3866 * 
s1
 = 
	`°πok
(
≠¨t
.
P_NAME
, " ");

3867 if–
	`°rcmp
–
s1
, 
p_«me
) == 0 ) {

3868 
∑πkey
.
	`ö£π
(
∑ú
<, 
boﬁ
> (
≠¨t
.
P_PARTKEY
, 1));

3870 
	`W_DO
(
p_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑π
));

3874 
m≠
<
∑ú
<,>,Öaú<,>, 
öt_∑ú_cmp
> 
suµ∑π_avqu™t_sumqu™t
;

3876 
tu∂e_gu¨d
<
∑πsuµ_m™_im∂
> 
	`¥∑πsuµ
(
_µ¨tsuµ_m™
);

3878 
ªp_row_t
 
	`p§ïrow
(
_µ¨tsuµ_m™
->
	`ts
());

3879 
p§ïrow
.
	`£t
(
_µ¨tsuµ_desc
->
	`maxsize
());

3881 
¥∑πsuµ
->
_ªp
 = &
p§ïrow
;

3883 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
> > 
ps_ôî
;

3885 
èbÀ_sˇn_ôî_im∂
<
∑πsuµ_t
>* 
tmp_ps_ôî
;

3886 
	`W_DO
(
_µ¨tsuµ_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_ps_ôî
));

3887 
ps_ôî
 = 
tmp_ps_ôî
;

3890 
çch_∑πsuµ_tu∂e
 
≠¨tsuµ
;

3892 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

3894 !
eof
){

3895 
¥∑πsuµ
->
	`gë_vÆue
(0, 
≠¨tsuµ
.
PS_PARTKEY
);

3896 
¥∑πsuµ
->
	`gë_vÆue
(1, 
≠¨tsuµ
.
PS_SUPPKEY
);

3897 
¥∑πsuµ
->
	`gë_vÆue
(2, 
≠¨tsuµ
.
PS_AVAILQTY
);

3898 if–
∑πkey
.
	`föd
(
≠¨tsuµ
.
PS_PARTKEY
Ë!∑πkey.
	`íd
() ){

3899 
∑ú
<Öaú <, >,∑ú<,> > 
tmp


3900 (
∑ú
<,>–
≠¨tsuµ
.
PS_SUPPKEY
,ápartsupp.PS_SUPPKEY),

3901 
∑ú
<,>–
≠¨tsuµ
.
PS_AVAILQTY
, 0) );

3902 
suµ∑π_avqu™t_sumqu™t
.
	`ö£π
(
tmp
);

3904 
	`W_DO
(
ps_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥∑πsuµ
));

3908 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

3910 
ªp_row_t
 
	`Ãïrow
(
_∂öeôem_m™
->
	`ts
());

3911 
Ãïrow
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3913 
¥löeôem
->
_ªp
 = &
Ãïrow
;

3915 
ªp_row_t
 
	`lowªp
(
_∂öeôem_m™
->
	`ts
());

3916 
ªp_row_t
 
	`highªp
(
_∂öeôem_m™
->
	`ts
());

3918 
lowªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3919 
highªp
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

3921 
tm
 
d©e
;

3922 i‡(
	`gmtime_r
(&(
q20ö
.
l_shùd©e
), &
d©e
Ë=
NULL
) {

3923  
RCOK
;

3925 
d©e
.
tm_yór
 ++;

3926 
time_t
 
œ°_shùd©e
 = 
	`mktime
(&
d©e
);

3928 
gu¨d
< 
ödex_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

3930 
ödex_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

3931 
	`W_DO
(
_∂öeôem_m™
->
	`l_gë_ønge_ôî_by_ödex
(
_pssm
, 
tmp_l_ôî
,

3932 
¥löeôem
, 
lowªp
,

3933 
highªp
, 
q20ö
.
l_shùd©e
,

3934 
œ°_shùd©e
));

3935 
l_ôî
 = 
tmp_l_ôî
;

3938 
çch_löeôem_tu∂e
 
Æöe
;

3939 
q6_ªsu…
 = 0;

3941 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3943 !
eof
) {

3944 
¥löeôem
->
	`gë_vÆue
(1, 
Æöe
.
L_PARTKEY
);

3945 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

3946 
¥löeôem
->
	`gë_vÆue
(4, 
Æöe
.
L_QUANTITY
);

3947 
m≠
< 
∑ú
<,>,Öaú<,>, 
öt_∑ú_cmp
 >::
ôî©‹
 
ô
 =

3948 
suµ∑π_avqu™t_sumqu™t
.
	`föd
(
∑ú
<,>

3949 (
Æöe
.
L_PARTKEY
,álöe.
L_SUPPKEY
));

3950 if–
ô
 !
suµ∑π_avqu™t_sumqu™t
.
	`íd
()){

3951 
c
 = 
ô
->
£c⁄d
.second;

3952 
c
+
Æöe
.
L_QUANTITY
;

3953 
suµ∑π_avqu™t_sumqu™t
[ 
∑ú
<,>(
Æöe
.
L_PARTKEY
,

3954 
Æöe
.
L_SUPPKEY
)]=

3955 
∑ú
<,>–
ô
->
£c⁄d
.
fú°
, 
c
);

3957 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

3961 
m≠
<, 
boﬁ
> 
suµkey
;

3962 
m≠
< 
∑ú
<,>,Öaú<, > > :: 
ôî©‹
 
ô
 =

3963 
suµ∑π_avqu™t_sumqu™t
.
	`begö
();

3964  
ô
 !
suµ∑π_avqu™t_sumqu™t
.
	`íd
()){

3965 if–
ô
->
£c⁄d
.
fú°
 > .5 * it->second.second ){

3966 
suµkey
.
	`ö£π
–
∑ú
<,
boﬁ
>(
ô
->
fú°
.fú°, 
åue
));

3968 
ô
++;

3975 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

3977 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

3978 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

3980 
¥suµ
->
_ªp
 = &
§ïrow
;

3982 
m≠
<,
boﬁ
>::
ôî©‹
 
ôî
 = 
suµkey
.
	`begö
();

3983 
ôî
 !
suµkey
.
	`íd
();

3984 
ôî
++){

3985 
_psuµlõr_m™
->
	`s_ödex_¥obe
(
_pssm
, 
¥suµ
, 
ôî
->
fú°
);

3986 
çch_suµlõr_tu∂e
 
asuµ
;

3987 
¥suµ
->
	`gë_vÆue
(1, 
asuµ
.
S_NAME
, 25);

3988 
¥suµ
->
	`gë_vÆue
(2, 
asuµ
.
S_ADDRESS
, 40);

3989 
¥suµ
->
	`gë_vÆue
(3, 
asuµ
.
S_NATIONKEY
);

3990 if(
asuµ
.
S_NATIONKEY
 =
q20ö
.
n_«me
){

3995  
RCOK
;

3996 
	}
}

4006 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q21
(c⁄° , 
q21_öput_t
& 
q21ö
)

4009 
	`as£π
 (
_pssm
);

4010 
	`as£π
 (
_öôülized
);

4011 
	`as£π
 (
_lﬂded
);

4014 
m≠
<, 
°rög
> 
suµkey
;

4016 
tu∂e_gu¨d
<
suµlõr_m™_im∂
> 
	`¥suµ
(
_psuµlõr_m™
);

4018 
ªp_row_t
 
	`§ïrow
(
_psuµlõr_m™
->
	`ts
());

4019 
§ïrow
.
	`£t
(
_psuµlõr_desc
->
	`maxsize
());

4021 
¥suµ
->
_ªp
 = &
§ïrow
;

4023 
gu¨d
<
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
> > 
s_ôî
;

4025 
èbÀ_sˇn_ôî_im∂
<
suµlõr_t
>* 
tmp_s_ôî
;

4026 
	`W_DO
(
_psuµlõr_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_s_ôî
));

4027 
s_ôî
 = 
tmp_s_ôî
;

4030 
boﬁ
 
eof
;

4031 
çch_suµlõr_tu∂e
 
asuµlõr
;

4033 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

4035 !
eof
){

4036 
¥suµ
->
	`gë_vÆue
(0, 
asuµlõr
.
S_SUPPKEY
);

4037 
¥suµ
->
	`gë_vÆue
(1, 
asuµlõr
.
S_NAME
,25);

4038 
¥suµ
->
	`gë_vÆue
(3, 
asuµlõr
.
S_NATIONKEY
);

4039 if–
asuµlõr
.
S_NATIONKEY
 =
q21ö
.
n_«me
){

4040 
suµkey
.
	`ö£π
(
∑ú
<,
°rög
>

4041 –
asuµlõr
.
S_SUPPKEY
, 
	`°rög
◊suµlõr.
S_NAME
)));

4043 
	`W_DO
(
s_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥suµ
));

4047 
m≠
<,
boﬁ
> 
‹dîkey
;

4049 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dî
(
_p‹dîs_m™
);

4051 
ªp_row_t
 
	`o_¨ïrow
(
_p‹dîs_m™
->
	`ts
());

4052 
o_¨ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

4054 
¥‹dî
->
_ªp
 = &
o_¨ïrow
;

4056 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

4058 
èbÀ_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

4059 
	`W_DO
(
_p‹dîs_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_o_ôî
));

4060 
o_ôî
 = 
tmp_o_ôî
;

4063 
çch_‹dîs_tu∂e
 
™‹dî
;

4065 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

4067 !
eof
){

4068 
¥‹dî
->
	`gë_vÆue
(0, 
™‹dî
.
O_ORDERKEY
);

4069 
¥‹dî
->
	`gë_vÆue
(2, 
™‹dî
.
O_ORDERSTATUS
);

4070 if–
™‹dî
.
O_ORDERSTATUS
 == 'F' ) {

4071 
‹dîkey
.
	`ö£π
–
∑ú
 <,
boﬁ
> (
™‹dî
.
O_ORDERKEY
, 
åue
) );

4073 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dî
));

4077 
ve˘‹
<
∑ú
<,> > 
suµkey_‹dîkey
;

4078 
m≠
<,> 
mu…iOrdîs
;

4079 
m≠
<,> 
dñay2‹dî
;

4081 
tu∂e_gu¨d
<
löeôem_m™_im∂
> 
	`¥löeôem
(
_∂öeôem_m™
);

4083 
ªp_row_t
 
	`¨ïrow2
(
_∂öeôem_m™
->
	`ts
());

4084 
¨ïrow2
.
	`£t
(
_∂öeôem_desc
->
	`maxsize
());

4086 
¥löeôem
->
_ªp
 = &
¨ïrow2
;

4088 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
> > 
l_ôî
;

4090 
èbÀ_sˇn_ôî_im∂
<
löeôem_t
>* 
tmp_l_ôî
;

4091 
	`W_DO
(
_∂öeôem_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_l_ôî
));

4092 
l_ôî
 = 
tmp_l_ôî
;

4095 
çch_löeôem_tu∂e
 
Æöe
;

4097 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

4099 !
eof
) {

4100 
¥löeôem
->
	`gë_vÆue
(0, 
Æöe
.
L_ORDERKEY
);

4101 
¥löeôem
->
	`gë_vÆue
(2, 
Æöe
.
L_SUPPKEY
);

4102 
¥löeôem
->
	`gë_vÆue
(11, 
Æöe
.
L_COMMITDATE
, 15);

4103 
¥löeôem
->
	`gë_vÆue
(12, 
Æöe
.
L_RECEIPTDATE
, 15);

4104 
time_t
 
the_commôd©e
 = 
	`°r_to_timë
(
Æöe
.
L_COMMITDATE
);

4105 
time_t
 
the_ª˚ùtd©e
 = 
	`°r_to_timë
(
Æöe
.
L_RECEIPTDATE
);

4106 if–
‹dîkey
.
	`föd
(
Æöe
.
L_ORDERKEY
Ë!‹dîkey.
	`íd
()){

4107 i‡(
the_commôd©e
 < 
the_ª˚ùtd©e
 &&

4108 
suµkey
.
	`föd
(
Æöe
.
L_SUPPKEY
Ë!suµkey.
	`íd
()){

4109 
suµkey_‹dîkey
.
	`push_back
(
∑ú
<,>

4110 (
Æöe
.
L_SUPPKEY
,álöe.
L_ORDERKEY
));

4111 
m≠
<,>::
ôî©‹
 
ô
 = 
dñay2‹dî
.
	`föd
(
Æöe
.
L_ORDERKEY
);

4112 i‡(
ô
 !
dñay2‹dî
.
	`íd
(Ë&& it->
£c⁄d
 !
Æöe
.
L_SUPPKEY
){

4113 
dñay2‹dî
[
ô
->
fú°
] = -1;

4115 
dñay2‹dî
[
ô
->
fú°
] = 
Æöe
.
L_SUPPKEY
;

4118 
m≠
<,>::
ôî©‹
 
ô
 = 
mu…iOrdîs
.
	`föd
(
Æöe
.
L_ORDERKEY
);

4119 i‡(
ô
 !
mu…iOrdîs
.
	`íd
(Ë&& it->
£c⁄d
 !
Æöe
.
L_SUPPKEY
){

4120 
mu…iOrdîs
[
ô
->
fú°
] = -1;

4122 
mu…iOrdîs
[
ô
->
fú°
] = 
Æöe
.
L_SUPPKEY
;

4125 
	`W_DO
(
l_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥löeôem
));

4129 
m≠
<,> 
supK_numwaô
;

4130 
i
 = 0; i < 
suµkey_‹dîkey
.
	`size
(); i++){

4131 if–
mu…iOrdîs
[
suµkey_‹dîkey
[
i
].
£c⁄d
] == -1 &&

4132 
dñay2‹dî
[
suµkey_‹dîkey
[
i
].
£c⁄d
] != -1) {

4133 if(
supK_numwaô
.
	`föd
(
suµkey_‹dîkey
[
i
].
fú°
)!=supK_numwaô.
	`íd
()){

4134 
n
 = 
supK_numwaô
.
	`föd
(
suµkey_‹dîkey
[
i
].
fú°
)->
£c⁄d
;

4135 
n
++;

4136 
supK_numwaô
[
suµkey_‹dîkey
[
i
].
fú°
] = 
n
;

4138 
supK_numwaô
[
suµkey_‹dîkey
[
i
].
fú°
] = 1;

4143  
RCOK
;

4144 
	}
}

4154 
w_rc_t
 
	gSh‹eTPCHEnv
::
	$x˘_q22
(c⁄° , 
q22_öput_t
& 
q22ö
)

4157 
	`as£π
 (
_pssm
);

4158 
	`as£π
 (
_öôülized
);

4159 
	`as£π
 (
_lﬂded
);

4162 
m≠
<, 
∑ú
<
decimÆ
,> > 
ckey_acbÆCcode
;

4163 
decimÆ
 
bÆ_avg
 = 0;

4165 
tu∂e_gu¨d
<
cu°omî_m™_im∂
> 
	`¥cu°omî
(
_pcu°omî_m™
);

4167 
ªp_row_t
 
	`¨ïrow
(
_pcu°omî_m™
->
	`ts
());

4168 
¨ïrow
.
	`£t
(
_pcu°omî_desc
->
	`maxsize
());

4170 
¥cu°omî
->
_ªp
 = &
¨ïrow
;

4172 
gu¨d
< 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
> > 
c_ôî
;

4174 
èbÀ_sˇn_ôî_im∂
<
cu°omî_t
>* 
tmp_c_ôî
;

4175 
	`W_DO
(
_pcu°omî_m™
->
	`gë_ôî_f‹_fûe_sˇn
(
_pssm
, 
tmp_c_ôî
));

4176 
c_ôî
 = 
tmp_c_ôî
;

4179 
boﬁ
 
eof
;

4180 
çch_cu°omî_tu∂e
 
acu°
;

4182 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

4184 !
eof
){

4185 
¥cu°omî
->
	`gë_vÆue
(0, 
acu°
.
C_CUSTKEY
);

4186 
¥cu°omî
->
	`gë_vÆue
(4, 
acu°
.
C_PHONE
, 15);

4187 
¥cu°omî
->
	`gë_vÆue
(5, 
acu°
.
C_ACCTBAL
);

4188 * 
c_˙åycode_°r
 = 
	`°πok
 ( 
acu°
.
C_PHONE
, "-" );

4189 
c_˙åycode
 = 
	`©oi
–
c_˙åycode_°r
);

4190 
i
 = 0; i < 7; i++ ){

4191 if–
q22ö
.
˙åycode
[
i
] =
c_˙åycode
){

4192 
ckey_acbÆCcode
.
	`ö£π
–
∑ú
<,Öaú<
decimÆ
,> >

4193 (
acu°
.
C_CUSTKEY
, 
∑ú
<
decimÆ
,>

4194 (
acu°
.
C_ACCTBAL
, 
c_˙åycode
)));

4195 
bÆ_avg
 +
acu°
.
C_ACCTBAL
;

4199 
	`W_DO
(
c_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥cu°omî
));

4202 
bÆ_avg
 /()
ckey_acbÆCcode
.
	`size
();

4206 
m≠
<, 
∑ú
<, 
decimÆ
> > 
˙åycode_sˇœrs
;

4208 
tu∂e_gu¨d
<
‹dîs_m™_im∂
> 
	`¥‹dîs
(
_p‹dîs_m™
);

4210 
ªp_row_t
 
	`a‹ïrow
(
_p‹dîs_m™
->
	`ts
());

4211 
a‹ïrow
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

4213 
¥‹dîs
->
_ªp
 = & 
a‹ïrow
;

4215 
ªp_row_t
 
	`lowªp
(
_p‹dîs_m™
->
	`ts
());

4216 
ªp_row_t
 
	`highªp
(
_p‹dîs_m™
->
	`ts
());

4218 
lowªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

4219 
highªp
.
	`£t
(
_p‹dîs_desc
->
	`maxsize
());

4221 
m≠
<, 
∑ú
<
decimÆ
,> >::
ôî©‹
 
ô
 = 
ckey_acbÆCcode
.
	`begö
();

4222 
ô
 !
ckey_acbÆCcode
.
	`íd
()){

4223 
gu¨d
<
ödex_sˇn_ôî_im∂
<
‹dîs_t
> > 
o_ôî
;

4225 
ödex_sˇn_ôî_im∂
<
‹dîs_t
>* 
tmp_o_ôî
;

4226 
	`W_DO
(
_p‹dîs_m™
->
	`o_gë_ôî_by_födex
(
_pssm
, 
tmp_o_ôî
, 
¥‹dîs
,

4227 
lowªp
, 
highªp
, 
ô
->
fú°
));

4228 
o_ôî
 = 
tmp_o_ôî
;

4231 
boﬁ
 
eof
;

4232 
	`W_DO
(
o_ôî
->
	`√xt
(
_pssm
, 
eof
, *
¥‹dîs
));

4234 if(!
eof
 && 
ô
->
£c⁄d
.
fú°
 > 
bÆ_avg
){

4235 
m≠
<, 
∑ú
<,
decimÆ
> >::
ôî©‹
 
tmp
 =

4236 
˙åycode_sˇœrs
.
	`föd
–
ô
->
£c⁄d
.second);

4237 if(
tmp
 !
˙åycode_sˇœrs
.
	`íd
()){

4238 
c
 = 
tmp
->
£c⁄d
.
fú°
;

4239 
decimÆ
 
t
 = 
tmp
->
£c⁄d
.second;

4240 
c
++;

4241 
t
+
ô
->
£c⁄d
.
fú°
;

4242 
˙åycode_sˇœrs
[
ô
->
£c⁄d
.£c⁄d] = 
∑ú
<, 
decimÆ
> (
c
, 
t
);

4244 
˙åycode_sˇœrs
[
ô
->
£c⁄d
.£c⁄d] = 
∑ú
<, 
decimÆ
>

4245 (1, 
ô
->
£c⁄d
.
fú°
);

4248 
ô
++;

4251  
RCOK
;

4252 
	}
}

4255 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/tpch_input.cpp

34 
	~"utû.h
"

35 
	~"w‹klﬂd/çch/çch_øndom.h
"

36 
	~"w‹klﬂd/çch/çch_öput.h
"

38 
	~"w‹klﬂd/çch/dbgí/dss.h
"

39 
	~"w‹klﬂd/çch/dbgí/ds°y≥s.h
"

40 
	~"w‹klﬂd/çch/çch_utû.h
"

42 
usög
 
«me•a˚
 
	gdbgíçch
;

44 
ENTER_NAMESPACE
(
çch
);

47 
	gqlöeôem_öput_t
& qlöeôem_öput_t::
›î©‹
=(c⁄° 
qlöeôem_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

48 
qlöeôem_öput_t
 
	$¸óã_qlöeôem_öput
(c⁄° 
sf
,

49 c⁄° 
•ecificWH
){
qlöeôem_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

51 
	gq‹dîs_öput_t
& q‹dîs_öput_t::
›î©‹
=(c⁄° 
q‹dîs_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

52 
q‹dîs_öput_t
 
	$¸óã_q‹dîs_öput
(c⁄° 
sf
,

53 c⁄° 
•ecificWH
){
q‹dîs_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

55 
	gq«ti⁄_öput_t
& q«ti⁄_öput_t::
›î©‹
=(c⁄° 
q«ti⁄_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

56 
q«ti⁄_öput_t
 
	$¸óã_q«ti⁄_öput
(c⁄° 
sf
,

57 c⁄° 
•ecificWH
){
q«ti⁄_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

59 
	gqªgi⁄_öput_t
& qªgi⁄_öput_t::
›î©‹
=(c⁄° 
qªgi⁄_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

60 
qªgi⁄_öput_t
 
	$¸óã_qªgi⁄_öput
(c⁄° 
sf
,

61 c⁄° 
•ecificWH
 ){
qªgi⁄_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

63 
	gqsuµlõr_öput_t
& qsuµlõr_öput_t::
›î©‹
=(c⁄° 
qsuµlõr_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

64 
qsuµlõr_öput_t
 
	$¸óã_qsuµlõr_öput
(c⁄° 
sf
,

65 c⁄° 
•ecificWH
){
qsuµlõr_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

67 
	gq∑π_öput_t
& q∑π_öput_t::
›î©‹
=(c⁄° 
q∑π_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

68 
q∑π_öput_t
 
	$¸óã_q∑π_öput
(c⁄° 
sf
,

69 c⁄° 
•ecificWH
){
q∑π_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

71 
	gq∑πsuµ_öput_t
& q∑πsuµ_öput_t::
›î©‹
=(c⁄° 
q∑πsuµ_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

72 
q∑πsuµ_öput_t
 
	$¸óã_q∑πsuµ_öput
(c⁄° 
sf
,

73 c⁄° 
•ecificWH
){
q∑πsuµ_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

75 
	gqcu°omî_öput_t
& qcu°omî_öput_t::
›î©‹
=(c⁄° 
qcu°omî_öput_t
& 
rhs
){
dummy
Ùhs.dummy;  (*
	gthis
);}

76 
qcu°omî_öput_t
 
	$¸óã_qcu°omî_öput
(c⁄° 
sf
,

77 c⁄° 
•ecificWH
){
qcu°omî_öput_t
 
r
;r.
dummy
=0;Ñ;
	}
}

87 
	gq1_öput_t
& q1_öput_t::
›î©‹
=(c⁄° 
q1_öput_t
& 
rhs
)

89 
l_shùd©e
 = 
rhs
.l_shipdate;

90  (*
	gthis
);

94 
q1_öput_t
 
	$¸óã_q1_öput
(const ,

97 
q1_öput_t
 
q1_öput
;

99 
tm
 
shùd©e
;

101 
shùd©e
.
tm_yór
 = 98;

102 
shùd©e
.
tm_m⁄
 = 11;

103 
shùd©e
.
tm_mday
 = 1-
	`UR™d
(60, 120);

104 
shùd©e
.
tm_hour
 = 0;

105 
shùd©e
.
tm_mö
 = 0;

106 
shùd©e
.
tm_£c
 = 0;

110 
q1_öput
.
l_shùd©e
 = 
	`mktime
(&
shùd©e
);

112  (
q1_öput
);

113 
	}
};

120 
	gq2_öput_t
& q2_öput_t::
›î©‹
=(c⁄° 
q2_öput_t
& 
rhs
){

122 
p_size
 = 
rhs
.p_size;

123 
	gp_ty≥s3
 = 
rhs
.
p_ty≥s3
;

124 
	gr_«me
 = 
rhs
.
r_«me
;

126  (*
	gthis
);

129 
q2_öput_t
 
	$¸óã_q2_öput
(const ,

131 
q2_öput_t
 
q2_öput
;

133 
q2_öput
.
p_size
 = 
	`UR™d
(1,50);

134 
q2_öput
.
r_«me
 = 
	`UR™d
(0,
END_R_NAME
-1);

135 
q2_öput
.
p_ty≥s3
 = 
	`UR™d
(0,
END_TYPE_S3
-1);

141  (
q2_öput
);

142 
	}
};

151 
	gq3_öput_t
& q3_öput_t::
›î©‹
=(c⁄° 
q3_öput_t
& 
rhs
){

153 
cuºít_d©e
 = 
rhs
.current_date;

154 
	gc_£gmít
 = 
rhs
.
c_£gmít
;

156  (*
	gthis
);

160 
q3_öput_t
 
	$¸óã_q3_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
){

162 
q3_öput_t
 
q3ö
;

164 
q3ö
.
c_£gmít
 = 
	`UR™d
(0, 
END_SEGMENT
-1);

166 
tm
 
d©e
;

167 
d©e
.
tm_yór
 = 95;

168 
d©e
.
tm_m⁄
 = 2;

169 
d©e
.
tm_mday
 = 
	`UR™d
(1,31);

171 
d©e
.
tm_£c
 = 0;

172 
d©e
.
tm_mö
 = 0;

173 
d©e
.
tm_hour
 = 0;

175 
q3ö
.
cuºít_d©e
 = 
	`mktime
(&
d©e
);

192  
q3ö
;

194 
	}
}

204 
	gq4_öput_t
& q4_öput_t::
›î©‹
=(c⁄° 
q4_öput_t
& 
rhs
)

206 
o_‹dîd©e
 = 
rhs
.o_orderdate;

207  (*
	gthis
);

211 
q4_öput_t
 
	$¸óã_q4_öput
(const ,

214 
q4_öput_t
 
q4_öput
;

216 
tm
 
‹dîd©e
;

218 
m⁄th
=
	`UR™d
(0,57);

219 
yór
=
m⁄th
/12;

220 
m⁄th
=month%12;

222 
‹dîd©e
.
tm_yór
 = 93+
yór
;

223 
‹dîd©e
.
tm_m⁄
 = 
m⁄th
;

224 
‹dîd©e
.
tm_mday
 = 1;

225 
‹dîd©e
.
tm_hour
 = 0;

226 
‹dîd©e
.
tm_mö
 = 0;

227 
‹dîd©e
.
tm_£c
 = 0;

241 
q4_öput
.
o_‹dîd©e
 = 
	`mktime
(&
‹dîd©e
);

243  (
q4_öput
);

244 
	}
};

252 
	gq5_öput_t
& q5_öput_t::
›î©‹
=(c⁄° 
q5_öput_t
& 
rhs
){

254 
r_«me
 = 
rhs
.r_name;

255 
	go_‹dîd©e
 = 
rhs
.
o_‹dîd©e
;

257  (*
	gthis
);

261 
q5_öput_t
 
	$¸óã_q5_öput
(const , const ) {

263 
q5_öput_t
 
q5ö
;

265 
q5ö
.
r_«me
 = 
	`UR™d
(0, 
END_R_NAME
-1);

267 
tm
 
‹dîd©e
;

269 
‹dîd©e
.
tm_yór
 = 
	`UR™d
(93, 97);

270 
‹dîd©e
.
tm_m⁄
 = 0;

271 
‹dîd©e
.
tm_mday
 = 1;

272 
‹dîd©e
.
tm_hour
 = 0;

273 
‹dîd©e
.
tm_mö
 = 0;

274 
‹dîd©e
.
tm_£c
 = 0;

276 
q5ö
.
o_‹dîd©e
 = 
	`mktime
(&
‹dîd©e
);

289 
q5ö
.
o_‹dîd©e
 = 
	`mktime
(&
‹dîd©e
);

292  (
q5ö
);

293 
	}
};

301 
	gq6_öput_t
& q6_öput_t::
›î©‹
=(c⁄° 
q6_öput_t
& 
rhs
){

303 
l_shùd©e
 = 
rhs
.l_shipdate;

304 
	gl_qu™tôy
 = 
rhs
.
l_qu™tôy
;

305 
	gl_discou¡
 = 
rhs
.
l_discou¡
;

307  (*
	gthis
);

311 
q6_öput_t
 
	$¸óã_q6_öput
(const , const ) {

313 
q6_öput_t
 
q6ö
;

315 
tm
 
shùd©e
;

317 
shùd©e
.
tm_yór
 = 
	`UR™d
(93, 97);

318 
shùd©e
.
tm_m⁄
 = 0;

319 
shùd©e
.
tm_mday
 = 1;

320 
shùd©e
.
tm_hour
 = 0;

321 
shùd©e
.
tm_mö
 = 0;

322 
shùd©e
.
tm_£c
 = 0;

324 
q6ö
.
l_shùd©e
 = 
	`mktime
(&
shùd©e
);

327 
q6ö
.
l_discou¡
 = (
	`ønd
(Ë/ 
RAND_MAX
) * 0.07 + 0.02;

329 
q6ö
.
l_qu™tôy
 = 
	`UR™d
(24,25);

332  (
q6ö
);

333 
	}
};

341 
	gq7_öput_t
& q7_öput_t::
›î©‹
=(c⁄° 
q7_öput_t
& 
rhs
){

343 
n_«me1
 = 
rhs
.n_name1;

344 
	gn_«me2
 = 
rhs
.
n_«me2
;

346  (*
	gthis
);

350 
q7_öput_t
 
	$¸óã_q7_öput
(const , const ) {

352 
q7_öput_t
 
q7ö
;

354 
q7ö
.
n_«me1
 = 
	`UR™d
(0, 
END_N_NAME
-1);

355 
q7ö
.
n_«me2
 = 
	`UR™d
(0, 
END_N_NAME
-1);

357 
q7ö
.
n_«me1
 =q7ö.
n_«me2
)

358 
q7ö
.
n_«me2
 = 
	`UR™d
(0, 
END_N_NAME
-1);

363  
q7ö
;

364 
	}
}

372 
	gq8_öput_t
& q8_öput_t::
›î©‹
=(c⁄° 
q8_öput_t
& 
rhs
){

374 
n_«me
 = 
rhs
.n_name;

375 
	gr_«me
 = 
rhs
.
n_«me
;

377 
	gp_ty≥
 = 
rhs
.
p_ty≥
;

379  (*
	gthis
);

382 
q8_öput_t
 
	$¸óã_q8_öput
(const , const ) {

384 
q8_öput_t
 
q8ö
;

388 
q8ö
.
r_«me
 = 
	`UR™d
(0, 
END_R_NAME
-1);

389 
boﬁ
 
«ti⁄_ok
 = 
Ál£
;

390 !
«ti⁄_ok
) {

391 
q8ö
.
n_«me
 = 
	`UR™d
(0, 
END_N_NAME
-1);

392 
q8ö
.
r_«me
) {

393 
AFRICA
:

394 
«ti⁄_ok
 = (
q8ö
.
n_«me
 =
ALGERIA
 || q8ö.n_«mê=
ETHIOPIA
 || q8ö.n_«mê=
KENYA
 || q8ö.n_«mê=
MOROCCO
 || q8ö.n_«mê=
MOZAMBIQUE
);

396 
AMERICA
:

397 
«ti⁄_ok
 = (
q8ö
.
n_«me
 =
ARGENTINA
 || q8ö.n_«mê=
BRAZIL
 || q8ö.n_«mê=
CANADA
 || q8ö.n_«mê=
PERU
 || q8ö.n_«mê=
UNITED_STATES
);

399 
ASIA
:

400 
«ti⁄_ok
 = (
q8ö
.
n_«me
 =
INDIA
 || q8ö.n_«mê=
INDONESIA
 || q8ö.n_«mê=
JAPAN
 || q8ö.n_«mê=
CHINA
 || q8ö.n_«mê=
VIETNAM
);

402 
EUROPE
:

403 
«ti⁄_ok
 = (
q8ö
.
n_«me
 =
FRANCE
 || q8ö.n_«mê=
GERMANY
 || q8ö.n_«mê=
ROMANIA
 || q8ö.n_«mê=
RUSSIA
 || q8ö.n_«mê=
UNITED_KINGDOM
);

405 
MIDDLE_EAST
:

406 
«ti⁄_ok
 = (
q8ö
.
n_«me
 =
EGYPT
 || q8ö.n_«mê=
IRAN
 || q8ö.n_«mê=
IRAQ
 || q8ö.n_«mê=
JORDAN
 || q8ö.n_«mê=
SAUDI_ARABIA
);

411 
q8ö
.
p_ty≥
.
s1
 = 
	`UR™d
(0, 
END_TYPE_S1
-1);

412 
q8ö
.
p_ty≥
.
s2
 = 
	`UR™d
(0, 
END_TYPE_S2
-1);

413 
q8ö
.
p_ty≥
.
s3
 = 
	`UR™d
(0, 
END_TYPE_S3
-1);

422  
q8ö
;

423 
	}
}

432 
	gq9_öput_t
& q9_öput_t::
›î©‹
=(c⁄° 
q9_öput_t
& 
rhs
){

434 
p_«me
 = 
rhs
.p_name;

435  (*
	gthis
);

438 
q9_öput_t
 
	$¸óã_q9_öput
(const , const ) {

440 
q9_öput_t
 
q9ö
;

442 
q9ö
.
p_«me
 = 
	`UR™d
(0, 
END_P_NAME
-1);

445  
q9ö
; 
	}
}

453 
	gq10_öput_t
& q10_öput_t::
›î©‹
=(c⁄° 
q10_öput_t
& 
rhs
){

455 
o_‹dîd©e
 = 
rhs
.o_orderdate;

457  (*
	gthis
);

460 
q10_öput_t
 
	$¸óã_q10_öput
(const , const ) {

462 
q10_öput_t
 
q10ö
;

464 
tm
 
d©e1
;

465 
d©e1
.
tm_yór
 = 93; d©e1.
tm_m⁄
 = 1; d©e1.
tm_mday
 = 1;

466 
d©e1
.
tm_£c
 = 0; d©e1.
tm_mö
 = 0; d©e1.
tm_hour
 = 0;

468 
tm
 
d©e2
;

469 
d©e2
.
tm_yór
 = 95; d©e2.
tm_m⁄
 = 0; d©e2.
tm_mday
 = 31;

470 
d©e2
.
tm_£c
 = 59; d©e2.
tm_mö
 = 59; d©e2.
tm_hour
 = 23;

472 
time_t
 
t1
 = 
	`mktime
(&
d©e1
);

473 
time_t
 
t2
 = 
	`mktime
(&
d©e2
);

475 
q10ö
.
o_‹dîd©e
 = 
	`UR™d
(
t1
,
t2
);

483  
q10ö
;

484 
	}
}

491 
	gq11_öput_t
& q11_öput_t::
›î©‹
=(c⁄° 
q11_öput_t
& 
rhs
){

493 
n_«me
 = 
rhs
.n_name;

494 
	g‰a˘i⁄
 = 
rhs
.
‰a˘i⁄
;

496  (*
	gthis
);

499 
q11_öput_t
 
	$¸óã_q11_öput
(const , const ) {

500 
q11_öput_t
 
q11ö
;

502 
q11ö
.
n_«me
 = 
	`UR™d
(0, 
END_N_NAME
-1);

503 
q11ö
.
‰a˘i⁄
 = 0.0001;

508  
q11ö
;

509 
	}
}

524 
	gq12_öput_t
& q12_öput_t::
›î©‹
=(c⁄° 
q12_öput_t
& 
rhs
)

526 
l_shùmode1
=
rhs
.l_shipmode1;

527 
	gl_shùmode2
=
rhs
.
l_shùmode2
;

528 
	gl_ª˚ùtd©e
 = 
rhs
.
l_ª˚ùtd©e
;

529  (*
	gthis
);

533 
q12_öput_t
 
	$¸óã_q12_öput
(const ,

536 
q12_öput_t
 
q12_öput
;

540 
q12_öput
.
l_shùmode1
=
	`UR™d
(0,
END_SHIPMODE
-1);

541 
q12_öput
.
l_shùmode2
=(q12_öput.
l_shùmode1
+
	`UR™d
(0,
END_SHIPMODE
-2)+1)%END_SHIPMODE;

543 
tm
 
ª˚ùtd©e
;

546 
ª˚ùtd©e
.
tm_yór
 = 
	`UR™d
(93, 97);

549 
ª˚ùtd©e
.
tm_m⁄
 = 0;

550 
ª˚ùtd©e
.
tm_mday
 = 1;

551 
ª˚ùtd©e
.
tm_hour
 = 0;

552 
ª˚ùtd©e
.
tm_mö
 = 0;

553 
ª˚ùtd©e
.
tm_£c
 = 0;

555 
q12_öput
.
l_ª˚ùtd©e
 = 
	`mktime
(&
ª˚ùtd©e
);

557  (
q12_öput
);

558 
	}
};

572 
	gq13_öput_t
& q13_öput_t::
›î©‹
=(c⁄° 
q13_öput_t
& 
rhs
)

574 
°r˝y
(
WORD1
,
rhs
.WORD1);

575 
°r˝y
(
WORD2
,
rhs
.WORD2);

576  (*
	gthis
);

580 
q13_öput_t
 
	$¸óã_q13_öput
(const ,

583 
q13_öput_t
 
q13_öput
;

585 
num_fú°_íåõs
, 
num_£c⁄d_íåõs
;

588 c⁄°* 
FIRST
[] = {"special", "pending", "unusual", "express"};

589 c⁄°* 
SECOND
[] = {"packages", "requests", "accounts", "deposits"};

591 
num_fú°_íåõs
 = (
FIRST
)/(FIRST[0]);

592 
num_£c⁄d_íåõs
 = (
SECOND
)/(SECOND[0]);

594 
	`°r˝y
(
q13_öput
.
WORD1
,
FIRST
[
	`UR™d
(1,
num_fú°_íåõs
)-1]);

595 
	`°r˝y
(
q13_öput
.
WORD2
,
SECOND
[
	`UR™d
(1,
num_£c⁄d_íåõs
)-1]);

597  (
q13_öput
);

598 
	}
};

611 
	gq14_öput_t
& q14_öput_t::
›î©‹
=(c⁄° 
q14_öput_t
& 
rhs
)

613 
l_shùd©e
 = 
rhs
.l_shipdate;

614  (*
	gthis
);

618 
q14_öput_t
 
	$¸óã_q14_öput
(const ,

621 
q14_öput_t
 
q14_öput
;

623 
tm
 
shùd©e
;

626 
shùd©e
.
tm_yór
 = 
	`UR™d
(93, 97);

629 
shùd©e
.
tm_m⁄
 = 
	`UR™d
(0,11);

632 
shùd©e
.
tm_mday
 = 1;

633 
shùd©e
.
tm_hour
 = 0;

634 
shùd©e
.
tm_mö
 = 0;

635 
shùd©e
.
tm_£c
 = 0;

637 
q14_öput
.
l_shùd©e
 = 
	`mktime
(&
shùd©e
);

639  (
q14_öput
);

640 
	}
};

652 
	gq15_öput_t
& q15_öput_t::
›î©‹
=(c⁄° 
q15_öput_t
& 
rhs
)

654 
l_shùd©e
 = 
rhs
.l_shipdate;

655  (*
	gthis
);

659 
q15_öput_t
 
	$¸óã_q15_öput
(const ,

662 
q15_öput_t
 
q15_öput
;

664 
tm
 
shùd©e
;

667 
shùd©e
.
tm_yór
 = 
	`UR™d
(93, 97);

670 
shùd©e
.
tm_m⁄
 = 
	`UR™d
(0,11);

673 
shùd©e
.
tm_mday
 = 1;

674 
shùd©e
.
tm_hour
 = 0;

675 
shùd©e
.
tm_mö
 = 0;

676 
shùd©e
.
tm_£c
 = 0;

678 
q15_öput
.
l_shùd©e
 = 
	`mktime
(&
shùd©e
);

680  (
q15_öput
);

681 
	}
};

691 
	gq16_öput_t
& q16_öput_t::
›î©‹
=(c⁄° 
q16_öput_t
& 
rhs
){

693 
p_bønd
 = 
rhs
.p_brand;

694 
	gp_ty≥
 = 
rhs
.
p_ty≥
;

696 
	gi
=0; i<8; i++)

697 
	gp_size
[
i
] = 
rhs
.
p_size
[i];

699  (*
	gthis
);

702 
q16_öput_t
 
	$¸óã_q16_öput
(const , const ) {

704 
q16_öput_t
 
q16_öput
;

706 
q16_öput
.
p_bønd
 = 
	`UR™d
(1,5)*10 + URand(1,5);

707 
q16_öput
.
p_ty≥
 = 
	`UR™d
(0,5)*10 + URand(0,4);

709 
boﬁ
 
c⁄èös
;

710 
j
;

712 
i
=0; i<8; i++) {

714 
q16_öput
.
p_size
[
i
] = 
	`UR™d
(1,50);

715 
c⁄èös
 = 
Ál£
;

716 
j
 = 0; j < 
i
; j++) {

717 if(
q16_öput
.
p_size
[
i
] =q16_öput.p_size[
j
]Ë
c⁄èös
 = 
åue
;

719 } 
c⁄èös
);

722  
q16_öput
;

724 
	}
};

734 
	gq17_öput_t
& q17_öput_t::
›î©‹
=(c⁄° 
q17_öput_t
& 
rhs
){

736 
p_bønd
 = 
rhs
.p_brand;

737 
	gp_c⁄èöî
 = 
rhs
.
p_c⁄èöî
;

739  (*
	gthis
);

742 
q17_öput_t
 
	$¸óã_q17_öput
(const , const ) {

744 
q17_öput_t
 
q17_öput
;

746 
q17_öput
.
p_bønd
 = 
	`UR™d
(1,5)*10 + URand(1,5);

747 
q17_öput
.
p_c⁄èöî
 = 
	`UR™d
(0,4)*10 +URand(0,7);

752  
q17_öput
;

753 
	}
}

763 
	gq18_öput_t
& q18_öput_t::
›î©‹
=(c⁄° 
q18_öput_t
& 
rhs
){

764 
l_qu™tôy
 = 
rhs
.l_quantity;

765  (*
	gthis
);

768 
q18_öput_t
 
	$¸óã_q18_öput
(const , const ) {

770 
q18_öput_t
 
q18öput
;

772 
q18öput
.
l_qu™tôy
 = 
	`UR™d
(312,315);

774  
q18öput
;

775 
	}
}

785 
	gq19_öput_t
& q19_öput_t::
›î©‹
=(c⁄° 
q19_öput_t
& 
rhs
){

787 
i
=0; 
	gi
<3; i++){

789 
	gl_qu™tôy
[
i
] = 
rhs
.
l_qu™tôy
[i];

790 
	gp_bønd
[
i
] = 
rhs
.
p_bønd
[i];

793  (*
	gthis
);

796 
q19_öput_t
 
	$¸óã_q19_öput
(const , const ) {

798 
q19_öput_t
 
q19ö
;

800 
q19ö
.
l_qu™tôy
[0] = 
	`UR™d
(1,10);

801 
q19ö
.
l_qu™tôy
[1] = 
	`UR™d
(10,20);

802 
q19ö
.
l_qu™tôy
[2] = 
	`UR™d
(20,30);

804 
i
 = 0; i < 3; i++){

805 
q19ö
.
p_bønd
[
i
] = 
	`UR™d
(0,4)*10+ URand(0,4);

808  
q19ö
;

809 
	}
}

819 
	gq20_öput_t
& q20_öput_t::
›î©‹
=(c⁄° 
q20_öput_t
& 
rhs
){

821 
n_«me
 = 
rhs
.n_name;

822 
	gp_cﬁ‹
 = 
rhs
. 
p_cﬁ‹
;

823 
	gl_shùd©e
 = 
rhs
.
l_shùd©e
;

825  (*
	gthis
);

828 
q20_öput_t
 
	$¸óã_q20_öput
(const , const ) {

830 
q20_öput_t
 
q20ö
;

832 
q20ö
.
n_«me
 = 
	`UR™d
(0, 
END_N_NAME
);

833 
q20ö
.
p_cﬁ‹
 = 
	`UR™d
(0, 
END_P_NAME
);

835 
tm
 
t
;

836 
t
.
tm_£c
 = 0;

837 
t
.
tm_mö
 = 0;

838 
t
.
tm_hour
 = 0;

839 
t
.
tm_mday
 = 1;

840 
t
.
tm_m⁄
 = 0;

841 
t
.
tm_yór
 = 
	`UR™d
(93,97);

842 
t
.
tm_wday
 = 0;

843 
t
.
tm_yday
 = 0;

845 
q20ö
.
l_shùd©e
 = 
	`mktime
(&
t
);

847  
q20ö
;

848 
	}
}

858 
	gq21_öput_t
& q21_öput_t::
›î©‹
=(c⁄° 
q21_öput_t
& 
rhs
){

860 
n_«me
 = 
rhs
.n_name;

862  (*
	gthis
);

865 
q21_öput_t
 
	$¸óã_q21_öput
(c⁄° 
sf
, c⁄° 
•ecificWH
){

867 
q21_öput_t
 
q21ö
;

869 
q21ö
.
n_«me
 = 
	`UR™d
(0, 
END_N_NAME
-1);

871  
q21ö
;

873 
	}
}

883 
q22_öput_t
 
	$¸óã_q22_öput
(const , const ) {

885 
q22_öput_t
 
q22ö
;

887 
boﬁ
 
c⁄èös
;

888 
j
;

890 
i
=0; i<7; i++) {

892 
q22ö
.
˙åycode
[
i
] = 
	`UR™d
(10, 34);

893 
c⁄èös
 = 
Ál£
;

894 
j
 = 0; j < 
i
; j++) {

895 if(
q22ö
.
˙åycode
[
i
] =q22ö.˙åycode[
j
]Ë
c⁄èös
 = 
åue
;

897 } 
c⁄èös
);

901  
q22ö
;

902 
	}
}

904 
	gq22_öput_t
& q22_öput_t::
›î©‹
=(c⁄° 
q22_öput_t
& 
rhs
){

906 
i
 = 0; 
	gi
 < 7; i++)

907 
	g˙åycode
[
i
] = 
rhs
.
˙åycode
[i];

909  (*
	gthis
);

912 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/tpch_random.cpp

33 
	~"w‹klﬂd/çch/çch_øndom.h
"

34 
	~"w‹klﬂd/çch/çch_c⁄°.h
"

37 
ENTER_NAMESPACE
(
çch
);

62 
	$øndom
(
low
, 
high
, 
øndgí_t
* 
Ω
) {

64  (
low
 + 
Ω
->
	`ønd
(
high
 -Üow + 1));

65 
	}
}

73 
	$UR™d
(
low
, 
high
) {

75 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

76 
	`as£π
 (
£lf
);

77 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

78 
	`as£π
 (
øndgíp
);

80 
d
 = 
high
 - 
low
 + 1;

90  (
low
 + 
øndgíp
->
	`ønd
(
d
));

91 
	}
}

99 
	$NUR™d
(
A
, 
low
, 
high
) {

101 
thªad_t
* 
£lf
 = 
	`thªad_gë_£lf
();

102 
	`as£π
 (
£lf
);

103 
øndgí_t
* 
øndgíp
 = 
£lf
->
	`øndgí
();

104 
	`as£π
 (
øndgíp
);

106  ( (((
	`øndom
(0, 
A
, 
øndgíp
Ë|Ñ™dom(
low
, 
high
,Ñandgenp))

107 + 
	`øndom
(0, 
A
, 
øndgíp
))

108 % (
high
 - 
low
 + 1)) +Üow );

109 
	}
}

111 
EXIT_NAMESPACE
(
çch
);

	@src/workload/tpch/tpch_util.cpp

33 
	~"w‹klﬂd/çch/çch_°ru˘.h
"

34 
	~"w‹klﬂd/çch/çch_utû.h
"

35 
	~<°rög
>

37 
ENTER_NAMESPACE
(
çch
);

39 
çch_l_shùmode
 
	$°r_to_shùmode
(* 
shùmode
)

41 
çch_l_shùmode
 
ªt
;

42 i‡–!
	`°rcmp
(
shùmode
,"REG_AIR") || !strcmp(shipmode,"REG AIR") )

43 { 
ªt
=
REG_AIR
; }

44 i‡(!
	`°rcmp
(
shùmode
,"AIR"))

45 { 
ªt
=
AIR
; }

46 i‡(!
	`°rcmp
(
shùmode
,"RAIL"))

47 { 
ªt
=
RAIL
; }

48 i‡(!
	`°rcmp
(
shùmode
,"TRUCK"))

49 { 
ªt
=
TRUCK
; }

50 i‡(!
	`°rcmp
(
shùmode
,"MAIL"))

51 { 
ªt
=
MAIL
; }

52 i‡(!
	`°rcmp
(
shùmode
,"FOB"))

53 { 
ªt
=
FOB
; }

55 { 
ªt
=
SHIP
; }

57  
ªt
;

58 
	}
}

60 
	$shùmode_to_°r
(* 
°r
, 
çch_l_shùmode
 
shùmode
)

63 i‡–
shùmode
 =
REG_AIR
 )

64 { 
	`°r˝y
(
°r
,"REG AIR"); }

65 i‡–
shùmode
 =
AIR
 )

66 { 
	`°r˝y
(
°r
,"AIR"); }

67 i‡–
shùmode
 =
RAIL
 )

68 { 
	`°r˝y
(
°r
,"RAIL"); }

69 i‡–
shùmode
 =
TRUCK
 )

70 { 
	`°r˝y
(
°r
,"TRUCK"); }

71 i‡–
shùmode
 =
MAIL
 )

72 { 
	`°r˝y
(
°r
,"MAIL"); }

73 i‡–
shùmode
 =
FOB
 )

74 { 
	`°r˝y
(
°r
,"FOB"); }

76 { 
	`°r˝y
(
°r
,"SHIP"); }

78 
	}
}

80 
	$Bønd_to_§t
(* 
°r
, 
bønd
){

82 if–
bønd
/100 != 0)

85 
num
[3];

86 
	`•rötf
(
num
, "%d", 
bønd
);

88 
	`°r˝y
(
°r
, "Brand#");

89 
	`°rˇt
(
°r
, 
num
);

92 
	}
}

94 
	$°r_to_Bønd
(* 
Bønd
 ){

96 
num
[3];

98 
i
 = 6; i < 9; i++ )

99 
num
[ 
i
 - 6 ] = 
Bønd
[i];

101  
	`©oi
(
num
);

102 
	}
}

104 
	$ty≥s1_to_°r
(*
°r
 , 
s1
){

106 if–
s1
 =
STANDARD
)

107 
	`°r˝y
(
°r
, "STANDARD");

108 if–
s1
 =
SMALL
)

109 
	`°r˝y
(
°r
, "SMALL");

110 if–
s1
 =
MEDIUM
)

111 
	`°r˝y
(
°r
, "MEDIUM");

112 if–
s1
 =
LARGE
)

113 
	`°r˝y
(
°r
, "LARGE");

114 if–
s1
 =
ECONOMY
)

115 
	`°r˝y
(
°r
,"ECONOMY");

116 i‡–
s1
 =
PROMO
)

117 
	`°r˝y
(
°r
, "PROMO");

119 
	}
}

121 
çch_p_ty≥_s1
 
	$°r_to_ty≥s1
(*
s1
){

123 if(
	`°rcmp
(
s1
, "STANDARD") == 0)

124  
STANDARD
;

126 if(
	`°rcmp
(
s1
, "SMALL") == 0)

127  
SMALL
;

129 if(
	`°rcmp
(
s1
, "MEDIUM") == 0)

130  
MEDIUM
;

132 if(
	`°rcmp
(
s1
, "LARGE") == 0)

133  
LARGE
;

135 if(
	`°rcmp
(
s1
, "ECONOMY") == 0)

136  
ECONOMY
;

138 if(
	`°rcmp
(
s1
, "PROMO") == 0)

139  
PROMO
;

141 
	}
}

143 
	$ty≥s2_to_°r
(* 
°r
 , 
s2
){

145 if–
s2
 =
ANODIZED
 )

146 
	`°r˝y
(
°r
, "ANODIZED");

148 if–
s2
 =
BURNISHED
 )

149 
	`°r˝y
(
°r
, "BURNISHED");

151 if–
s2
 =
PLATED
)

152 
	`°r˝y
(
°r
, "PLATED");

154 if–
s2
 =
POLISHED
)

155 
	`°r˝y
(
°r
, "POLISHED");

157 if–
s2
 =
BRUSHED
)

158 
	`°r˝y
(
°r
, "BRUSHED");

161 
	}
}

163 
çch_p_ty≥_s2
 
	$°r_to_ty≥s2
(* 
s2
){

165 if–
	`°rcmp
(
s2
, "ANODIZED") == 0)

166  
ANODIZED
;

168 if–
	`°rcmp
(
s2
, "BURNISHED") ==0)

169  
BURNISHED
;

171 if–
	`°rcmp
(
s2
, "PLATED") ==0)

172  
PLATED
;

174 if–
	`°rcmp
(
s2
, "POLISHED") ==0)

175  
POLISHED
;

177 if–
	`°rcmp
(
s2
, "BRUSHED") ==0)

178  
BRUSHED
;

180 
	}
}

182 
	$ty≥s3_to_°r
(* 
°r
 , 
s3
){

184 if–
s3
 =
TIN
)

185 
	`°r˝y
–
°r
, "TIN");

187 i‡–
s3
 =
NICKEL
)

188 
	`°r˝y
–
°r
, "NICKEL");

190 i‡–
s3
 =
BRASS
)

191 
	`°r˝y
–
°r
, "BRASS");

193 i‡–
s3
 =
STEEL
)

194 
	`°r˝y
–
°r
, "STEEL");

196 i‡–
s3
 =
COPPER
)

197 
	`°r˝y
–
°r
, "COPPER");

198 
	}
}

200 
çch_p_ty≥_s3
 
	$°r_to_ty≥s3
(* 
s3
){

202 if–
	`°rcmp
(
s3
, "TIN") == 0)

203  
TIN
;

205 if–
	`°rcmp
(
s3
, "NICKEL") == 0)

206  
NICKEL
;

208 if–
	`°rcmp
(
s3
, "BRASS") == 0)

209  
BRASS
;

211 if–
	`°rcmp
(
s3
, "STEEL") == 0)

212  
STEEL
;

214 if–
	`°rcmp
(
s3
, "COPPER") == 0)

215  
COPPER
;

216 
	}
}

218 
	$ty≥_to_°r
(
çch_p_ty≥
 
t
, * 
°r
){

219 
ty≥s1
[
	`STRSIZE
(25)];

220 
ty≥s2
[
	`STRSIZE
(25)];

221 
ty≥s3
[
	`STRSIZE
(25)];

222 
	`ty≥s1_to_°r
–
ty≥s1
, 
t
.
s1
);

223 
	`ty≥s2_to_°r
–
ty≥s2
, 
t
.
s2
);

224 
	`ty≥s3_to_°r
–
ty≥s3
, 
t
.
s3
);

226 
°r
[0] = '\0';

227 
	`°rˇt
(
°r
, 
ty≥s1
);

228 
	`°rˇt
(
°r
, " ");

229 
	`°rˇt
(
°r
, 
ty≥s2
);

230 
	`°rˇt
(
°r
, " ");

231 
	`°rˇt
(
°r
, 
ty≥s3
);

234 
	}
}

236 
çch_p_c⁄èöî_s1
 
	$°r_to_c⁄èöîs1
(* 
s1
){

237 if–
	`°rcmp
(
s1
, "SM") == 0)

238  
SM
;

239 if(
	`°rcmp
(
s1
, "LG") == 0)

240  
LG
;

241 if(
	`°rcmp
(
s1
, "MED") == 0)

242  
MED
;

243 if(
	`°rcmp
(
s1
, "JUMBO") == 0)

244  
JUMBO
;

245 if(
	`°rcmp
(
s1
, "WRAP") == 0)

246  
WRAP
;

247 
	}
}

249 
	$c⁄èöîs1_to_°r
–
çch_p_c⁄èöî_s1
 
s1
, * 
°r
){

250 if–
s1
 =
SM
)

251 
	`°r˝y
(
°r
, "SM");

252 if–
s1
 =
LG
)

253 
	`°r˝y
(
°r
, "LG");

254 if–
s1
 =
MED
)

255 
	`°r˝y
(
°r
, "MED");

256 if–
s1
 =
JUMBO
)

257 
	`°r˝y
(
°r
, "JUMBO");

258 if–
s1
 =
WRAP
)

259 
	`°r˝y
(
°r
, "WRAP");

261 
	}
}

263 
çch_p_c⁄èöî_s2
 
	$°r_to_c⁄èöîs2
(* 
s2
){

265 if–
	`°rcmp
(
s2
, "CASE") == 0)

266  
CASE
;

267 i‡–
	`°rcmp
(
s2
, "BOX") == 0)

268  
BOX
;

269 i‡–
	`°rcmp
(
s2
, "BAG") == 0)

270  
BAG
;

271 i‡–
	`°rcmp
(
s2
, "JAR") == 0)

272  
JAR
;

273 i‡–
	`°rcmp
(
s2
, "PKG") == 0)

274  
PKG
;

275 i‡–
	`°rcmp
(
s2
, "PACK") == 0)

276  
PACK
;

277 i‡–
	`°rcmp
(
s2
, "CAN") == 0)

278  
CAN
;

279 i‡–
	`°rcmp
(
s2
, "DRUM") == 0)

280  
DRUM
;

282 
	}
}

284 
	$c⁄èöîs2_to_°r
–
çch_p_c⁄èöî_s2
 
s2
, * 
°r
){

285 if(
s2
 =
CASE
)

286 
	`°r˝y
(
°r
, "CASE");

287 if(
s2
 =
BOX
)

288 
	`°r˝y
(
°r
, "BOX");

289 if(
s2
 =
BAG
)

290 
	`°r˝y
(
°r
, "BAG");

291 if(
s2
 =
JAR
)

292 
	`°r˝y
(
°r
, "JAR");

293 if(
s2
 =
PKG
)

294 
	`°r˝y
(
°r
, "PKG");

295 if(
s2
 =
PACK
)

296 
	`°r˝y
(
°r
, "PACK");

297 if(
s2
 =
CAN
)

298 
	`°r˝y
(
°r
, "CAN");

299 if(
s2
 =
DRUM
)

300 
	`°r˝y
(
°r
, "DRUM");

302 
	}
}

304 
	$c⁄èöî_to_°r
(
p_c⁄èöî
, * 
°r
) {

305 
s1
[
	`STRSIZE
(6)];

306 
s2
[
	`STRSIZE
(4)];

308 
p_c⁄èöî
 / 10) {

309 
SM
:

310 
	`°r˝y
(
s1
, "SM ");

312 
LG
:

313 
	`°r˝y
(
s1
, "LG ");

315 
MED
:

316 
	`°r˝y
(
s1
, "MED ");

318 
JUMBO
:

319 
	`°r˝y
(
s1
, "JUMBO ");

321 
WRAP
:

322 
	`°r˝y
(
s1
, "WRAP ");

326 
p_c⁄èöî
 % 10) {

327 
CASE
:

328 
	`°r˝y
(
s2
, "CASE");

330 
BOX
:

331 
	`°r˝y
(
s2
, "BOX");

333 
BAG
:

334 
	`°r˝y
(
s2
, "BAG");

336 
JAR
:

337 
	`°r˝y
(
s2
, "JAR");

339 
PKG
:

340 
	`°r˝y
(
s2
, "PKG");

342 
PACK
:

343 
	`°r˝y
(
s2
, "PACK");

345 
CAN
:

346 
	`°r˝y
(
s2
, "CAN");

348 
DRUM
:

349 
	`°r˝y
(
s2
, "DRUM");

352 
°r
[0] = '\0';

353 
	`°rˇt
(
°r
, 
s1
);

354 
	`°rˇt
(
°r
, 
s2
);

355 
	}
}

357 
	$≤ame_to_°r
(
p
, * 
§t
){

359 
p
){

361 
Æm⁄d
:

362 
	`°r˝y
(
§t
,"almond");

364 
™tique
:

365 
	`°r˝y
(
§t
,"antique");

367 
aquam¨öe
:

368 
	`°r˝y
(
§t
,"aquamarine");

370 
azuª
:

371 
	`°r˝y
(
§t
,"azure");

373 
beige
:

374 
	`°r˝y
(
§t
,"beige");

376 
bisque
:

377 
	`°r˝y
(
§t
,"bisque");

379 
bœck
:

380 
	`°r˝y
(
§t
,"black");

382 
bœnched
:

383 
	`°r˝y
(
§t
,"blanched");

385 
blue
:

386 
	`°r˝y
(
§t
,"blue");

388 
blush
:

389 
	`°r˝y
(
§t
,"blush");

391 
brown
:

392 
	`°r˝y
(
§t
,"brown");

394 
buæywood
:

395 
	`°r˝y
(
§t
,"burlywood");

397 
bu∫ished
:

398 
	`°r˝y
(
§t
,"burnished");

400 
ch¨åeu£
:

401 
	`°r˝y
(
§t
,"chartreuse");

403 
chiff⁄
:

404 
	`°r˝y
(
§t
,"chiffon");

406 
chocﬁ©e
:

407 
	`°r˝y
(
§t
,"chocolate");

409 
c‹Æ
:

410 
	`°r˝y
(
§t
,"coral");

412 
c‹nÊowî
:

413 
	`°r˝y
(
§t
,"cornflower");

415 
c‹nsûk
:

416 
	`°r˝y
(
§t
,"cornsilk");

418 
¸óm
:

419 
	`°r˝y
(
§t
,"cream");

421 
cy™
:

422 
	`°r˝y
(
§t
,"cyan");

424 
d¨k
:

425 
	`°r˝y
(
§t
,"dark");

427 
dìp
:

428 
	`°r˝y
(
§t
,"deep");

430 
dim
:

431 
	`°r˝y
(
§t
,"dim");

433 
dodgî
:

434 
	`°r˝y
(
§t
,"dodger");

436 
døb
:

437 
	`°r˝y
(
§t
,"drab");

439 
fúebrick
:

440 
	`°r˝y
(
§t
,"firebrick");

442 
Ê‹Æ
:

443 
	`°r˝y
(
§t
,"floral");

445 
f‹e°
:

446 
	`°r˝y
(
§t
,"forest");

448 
‰o°ed
:

449 
	`°r˝y
(
§t
,"frosted");

451 
gaösb‹o
:

452 
	`°r˝y
(
§t
,"gainsboro");

454 
gho°
:

455 
	`°r˝y
(
§t
,"ghost");

457 
gﬁdírod
:

458 
	`°r˝y
(
§t
,"goldenrod");

460 
gªí
:

461 
	`°r˝y
(
§t
,"green");

463 
gªy
:

464 
	`°r˝y
(
§t
,"grey");

466 
h⁄eydew
:

467 
	`°r˝y
(
§t
,"honeydew");

469 
hŸ
:

470 
	`°r˝y
(
§t
,"hot");

472 
ödün
:

473 
	`°r˝y
(
§t
,"indian");

475 
iv‹y
:

476 
	`°r˝y
(
§t
,"ivory");

478 
khaki
:

479 
	`°r˝y
(
§t
,"khaki");

481 
œ˚
:

482 
	`°r˝y
(
§t
,"lace");

484 
œvídî
:

485 
	`°r˝y
(
§t
,"lavender");

487 
œwn
:

488 
	`°r˝y
(
§t
,"lawn");

490 
Àm⁄
:

491 
	`°r˝y
(
§t
,"lemon");

493 
light
:

494 
	`°r˝y
(
§t
,"light");

496 
lime
:

497 
	`°r˝y
(
§t
,"lime");

499 
löí
:

500 
	`°r˝y
(
§t
,"linen");

502 
magíè
:

503 
	`°r˝y
(
§t
,"magenta");

505 
m¨o⁄
:

506 
	`°r˝y
(
§t
,"maroon");

508 
medium
:

509 
	`°r˝y
(
§t
,"medium");

511 
mëÆlic
:

512 
	`°r˝y
(
§t
,"metallic");

514 
midnight
:

515 
	`°r˝y
(
§t
,"midnight");

517 
möt
:

518 
	`°r˝y
(
§t
,"mint");

520 
mi°y
:

521 
	`°r˝y
(
§t
,"misty");

523 
mocˇsö
:

524 
	`°r˝y
(
§t
,"moccasin");

526 
«vajo
:

527 
	`°r˝y
(
§t
,"navajo");

529 
«vy
:

530 
	`°r˝y
(
§t
,"navy");

532 
ﬁive
:

533 
	`°r˝y
(
§t
,"olive");

535 
‹™ge
:

536 
	`°r˝y
(
§t
,"orange");

538 
‹chid
:

539 
	`°r˝y
(
§t
,"orchid");

541 
∑À
:

542 
	`°r˝y
(
§t
,"pale");

544 
∑∑ya
:

545 
	`°r˝y
(
§t
,"papaya");

547 
≥ach
:

548 
	`°r˝y
(
§t
,"peach");

550 
≥ru
:

551 
	`°r˝y
(
§t
,"peru");

553 
pök
:

554 
	`°r˝y
(
§t
,"pink");

556 
∂um
:

557 
	`°r˝y
(
§t
,"plum");

559 
powdî
:

560 
	`°r˝y
(
§t
,"powder");

562 
puff
:

563 
	`°r˝y
(
§t
,"puff");

565 
puΩÀ
:

566 
	`°r˝y
(
§t
,"purple");

568 
ªd
:

569 
	`°r˝y
(
§t
,"red");

571 
ro£
:

572 
	`°r˝y
(
§t
,"rose");

574 
rosy
:

575 
	`°r˝y
(
§t
,"rosy");

577 
royÆ
:

578 
	`°r˝y
(
§t
,"royal");

580 
ßddÀ
:

581 
	`°r˝y
(
§t
,"saddle");

583 
ßlm⁄
:

584 
	`°r˝y
(
§t
,"salmon");

586 
ßndy
:

587 
	`°r˝y
(
§t
,"sandy");

589 
£ashñl
:

590 
	`°r˝y
(
§t
,"seashell");

592 
sõ¬a
:

593 
	`°r˝y
(
§t
,"sienna");

595 
sky
:

596 
	`°r˝y
(
§t
,"sky");

598 
¶©e
:

599 
	`°r˝y
(
§t
,"slate");

601 
smoke
:

602 
	`°r˝y
(
§t
,"smoke");

604 
¢ow
:

605 
	`°r˝y
(
§t
,"snow");

607 
•rög
:

608 
	`°r˝y
(
§t
,"spring");

610 
°ìl
:

611 
	`°r˝y
(
§t
,"steel");

613 
èn
:

614 
	`°r˝y
(
§t
,"tan");

616 
thi°À
:

617 
	`°r˝y
(
§t
,"thistle");

619 
tom©o
:

620 
	`°r˝y
(
§t
,"tomato");

622 
turquoi£
:

623 
	`°r˝y
(
§t
,"turquoise");

625 
viﬁë
:

626 
	`°r˝y
(
§t
,"violet");

628 
whót
:

629 
	`°r˝y
(
§t
,"wheat");

631 
whôe
:

632 
	`°r˝y
(
§t
,"white");

634 
yñlow
:

635 
	`°r˝y
(
§t
,"yellow");

638 
	}
}

640 
çch_o_¥i‹ôy
 
	$°r_to_¥i‹ôy
(* 
°r
 ){

642 
çch_o_¥i‹ôy
 
ªt
;

644 if–!
	`°rcmp
(
°r
, "1-URGENT") )

645 
ªt
 = 
O_URGENT
;

646 if–!
	`°rcmp
(
°r
, "2-HIGH"))

647 
ªt
 = 
O_HIGH
;

648 if–!
	`°rcmp
(
°r
, "3-MEDIUM"))

649 
ªt
 = 
O_MEDIUM
;

650 if–!
	`°rcmp
(
°r
, "4-NOT SPECIFIED"))

651 
ªt
 = 
O_NOT_SPECIFIED
;

652 if–!
	`°rcmp
(
°r
, "5-LOW"))

653 
ªt
 = 
O_LOW
;

655  
ªt
;

657 
	}
}

659 
	$£gmít_to_°r
(* 
°r
, 
£g
){

660 
£g
) {

661 
AUTOMOBILE
:

662 
	`°r˝y
(
°r
, "AUTOMOBILE");

664 
BUILDING
:

665 
	`°r˝y
(
°r
, "BUILDING");

667 
FURNITURE
:

668 
	`°r˝y
(
°r
, "FURNITURE");

670 
MACHINERY
:

671 
	`°r˝y
(
°r
, "MACHINERY");

673 
HOUSEHOLD
:

674 
	`°r˝y
(
°r
, "HOUSEHOLD");

677 
	}
}

679 
çch_c_£gmít
 
	$°r_to_£gmít
(*
°r
){

681 
çch_c_£gmít
 
ªt
;

683 if–!
	`°rcmp
(
°r
, "AUTOMOBILE"))

684 
ªt
 = 
AUTOMOBILE
;

685 if–!
	`°rcmp
(
°r
, "BUILDING"))

686 
ªt
 = 
BUILDING
;

687 if–!
	`°rcmp
(
°r
, "FURNITURE"))

688 
ªt
 = 
FURNITURE
;

689 if–!
	`°rcmp
(
°r
, "MACHINERY"))

690 
ªt
 = 
MACHINERY
;

691 if–!
	`°rcmp
(
°r
, "HOUSEHOLD"))

692 
ªt
 = 
HOUSEHOLD
;

694  
ªt
;

695 
	}
}

697 
çch_n_«me
 
	$°r_to_«ti⁄
(* 
°r
 ){

699 if(
	`°rcmp
–"ALGERIA", 
°r
) == 0 )

700  
ALGERIA
;

701 if(
	`°rcmp
–"ARGENTINA", 
°r
) == 0 )

702  
ARGENTINA
;

703 if(
	`°rcmp
–"BRAZIL", 
°r
) == 0 )

704  
BRAZIL
;

705 if(
	`°rcmp
–"CANADA", 
°r
) == 0 )

706  
CANADA
;

707 if(
	`°rcmp
–"EGYPT", 
°r
) == 0 )

708  
EGYPT
;

709 if(
	`°rcmp
–"ETHIOPIA", 
°r
) == 0 )

710  
ETHIOPIA
;

711 if(
	`°rcmp
–"FRANCE", 
°r
) == 0 )

712  
FRANCE
;

713 if(
	`°rcmp
–"GERMANY", 
°r
) == 0 )

714  
GERMANY
;

715 if(
	`°rcmp
–"INDIA", 
°r
) == 0 )

716  
INDIA
;

717 if(
	`°rcmp
–"INDONESIA", 
°r
) == 0 )

718  
INDONESIA
;

719 if(
	`°rcmp
–"IRAN", 
°r
) == 0 )

720  
IRAN
;

721 if(
	`°rcmp
–"IRAQ", 
°r
) == 0 )

722  
IRAQ
;

723 if(
	`°rcmp
–"JAPAN", 
°r
) == 0 )

724  
JAPAN
;

725 if(
	`°rcmp
–"JORDAN", 
°r
) == 0 )

726  
JORDAN
;

727 if(
	`°rcmp
–"KENYA", 
°r
) == 0 )

728  
KENYA
;

729 if(
	`°rcmp
–"MOROCCO", 
°r
) == 0 )

730  
MOROCCO
;

731 if(
	`°rcmp
–"MOZAMBIQUE", 
°r
) == 0 )

732  
MOZAMBIQUE
;

733 if(
	`°rcmp
–"PERU", 
°r
) == 0 )

734  
PERU
;

735 if(
	`°rcmp
–"CHINA", 
°r
) == 0 )

736  
CHINA
;

737 if(
	`°rcmp
–"ROMANIA", 
°r
) == 0 )

738  
ROMANIA
;

739 if(
	`°rcmp
–"SAUDI ARABIA", 
°r
) == 0 )

740  
SAUDI_ARABIA
;

741 if(
	`°rcmp
–"VIETNAM", 
°r
) == 0 )

742  
VIETNAM
;

743 if(
	`°rcmp
–"RUSSIA", 
°r
) == 0 )

744  
RUSSIA
;

745 if(
	`°rcmp
–"UNITED KINGDOM", 
°r
) == 0 )

746  
UNITED_KINGDOM
;

747 if(
	`°rcmp
–"UNITED STATES", 
°r
) == 0 )

748  
UNITED_STATES
;

750 
	}
}

752 
	$«ti⁄_to_°r
–
n_«ti⁄
 , * 
°r
 ){

754 
n_«ti⁄
){

755 
ALGERIA
:

756 
	`°r˝y
(
°r
,"ALGERIA");

759 
ARGENTINA
:

760 
	`°r˝y
(
°r
,"ARGENTINA");

763 
BRAZIL
:

764 
	`°r˝y
(
°r
,"BRAZIL");

767 
CANADA
:

768 
	`°r˝y
(
°r
,"CANADA");

771 
EGYPT
:

772 
	`°r˝y
(
°r
,"EGYPT");

775 
ETHIOPIA
:

776 
	`°r˝y
(
°r
,"ETHIOPIA");

779 
FRANCE
:

780 
	`°r˝y
(
°r
,"FRANCE");

783 
GERMANY
:

784 
	`°r˝y
(
°r
,"GERMANY");

787 
INDIA
:

788 
	`°r˝y
(
°r
,"INDIA");

791 
INDONESIA
:

792 
	`°r˝y
(
°r
,"INDONESIA");

795 
IRAN
:

796 
	`°r˝y
(
°r
,"IRAN");

799 
IRAQ
:

800 
	`°r˝y
(
°r
,"IRAQ");

803 
JAPAN
:

804 
	`°r˝y
(
°r
,"JAPAN");

807 
JORDAN
:

808 
	`°r˝y
(
°r
,"JORDAN");

811 
KENYA
:

812 
	`°r˝y
(
°r
,"KENYA");

815 
MOROCCO
:

816 
	`°r˝y
(
°r
,"MOROCCO");

819 
MOZAMBIQUE
:

820 
	`°r˝y
(
°r
,"MOZAMBIQUE");

823 
PERU
:

824 
	`°r˝y
(
°r
,"PERU");

827 
CHINA
:

828 
	`°r˝y
(
°r
,"CHINA");

831 
ROMANIA
:

832 
	`°r˝y
(
°r
,"ROMANIA");

835 
SAUDI_ARABIA
:

836 
	`°r˝y
(
°r
,"SAUDI ARABIA");

839 
VIETNAM
:

840 
	`°r˝y
(
°r
,"VIETNAM");

843 
RUSSIA
:

844 
	`°r˝y
(
°r
,"RUSSIA");

847 
UNITED_KINGDOM
:

848 
	`°r˝y
(
°r
,"UNITED KINGDOM");

851 
UNITED_STATES
:

852 
	`°r˝y
(
°r
,"UNITED STATES");

857 
	}
}

859 
çch_r_«me
 
	$°r_to_ªgi⁄
(* 
°r
) {

860 if(
	`°rcmp
–"AFRICA", 
°r
) == 0 )

861  
AFRICA
;

862 if(
	`°rcmp
–"AMERICA", 
°r
) == 0 )

863  
AMERICA
;

864 if(
	`°rcmp
–"ASIA", 
°r
) == 0 )

865  
ASIA
;

866 if(
	`°rcmp
–"EUROPE", 
°r
) == 0 )

867  
EUROPE
;

868 if(
	`°rcmp
–"MIDDLE EAST", 
°r
) == 0 )

869  
MIDDLE_EAST
;

870 
	}
}

872 
	$ªgi⁄_to_°r
(
r_«me
, * 
°r
) {

873 
r_«me
){

874 
AFRICA
:

875 
	`°r˝y
(
°r
,"AFRICA");

878 
AMERICA
:

879 
	`°r˝y
(
°r
,"AMERICA");

882 
ASIA
:

883 
	`°r˝y
(
°r
,"ASIA");

886 
EUROPE
:

887 
	`°r˝y
(
°r
,"EUROPE");

890 
MIDDLE_EAST
:

891 
	`°r˝y
(
°r
,"MIDDLE EAST");

894 
	}
}

896 
EXIT_NAMESPACE
(
çch
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

19 #i‚de‡
_ERROR_H


20 
	#_ERROR_H
 1

	)

22 
	~<„©uªs.h
>

25 
__BEGIN_DECLS


31 
	$îr‹
 (
__°©us
, 
__î∫um
, c⁄° *
__f‹m©
, ...)

32 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

34 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, c⁄° *
__‚ame
,

35 
__löío
, c⁄° *
__f‹m©
, ...)

36 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

41 (*
îr‹_¥öt_¥og«me
) ();

44 
îr‹_mesßge_cou¡
;

48 
îr‹_⁄e_≥r_löe
;

51 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


52 
	~<bôs/îr‹.h
>

55 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/ucontext.h

20 #i‚de‡
_UCONTEXT_H


21 
	#_UCONTEXT_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<sys/uc⁄ãxt.h
>

28 
__BEGIN_DECLS


31 
	$gëc⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
Ë
__THROWNL
;

34 
	$£tc⁄ãxt
 (c⁄° 
uc⁄ãxt_t
 *
__u˝
Ë
__THROWNL
;

38 
	$sw≠c⁄ãxt
 (
uc⁄ãxt_t
 *
__ª°ri˘
 
__ou˝
,

39 c⁄° 
uc⁄ãxt_t
 *
__ª°ri˘
 
__u˝
Ë
__THROWNL
;

47 
	`makec⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
, (*
__func
) (),

48 
__¨gc
, ...Ë
__THROW
;

50 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/values.h

22 #i‚def 
_VALUES_H


23 
	#_VALUES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<limôs.h
>

29 
	#_TYPEBITS
(
ty≥
Ë( (ty≥Ë* 
CHAR_BIT
)

	)

31 
	#CHARBITS
 
	`_TYPEBITS
 ()

	)

32 
	#SHORTBITS
 
	`_TYPEBITS
 ()

	)

33 
	#INTBITS
 
	`_TYPEBITS
 ()

	)

34 
	#LONGBITS
 
	`_TYPEBITS
 ()

	)

35 
	#PTRBITS
 
	`_TYPEBITS
 (*)

	)

36 
	#DOUBLEBITS
 
	`_TYPEBITS
 ()

	)

37 
	#FLOATBITS
 
	`_TYPEBITS
 ()

	)

39 
	#MINSHORT
 
SHRT_MIN


	)

40 
	#MININT
 
INT_MIN


	)

41 
	#MINLONG
 
LONG_MIN


	)

43 
	#MAXSHORT
 
SHRT_MAX


	)

44 
	#MAXINT
 
INT_MAX


	)

45 
	#MAXLONG
 
LONG_MAX


	)

47 
	#HIBITS
 
MINSHORT


	)

48 
	#HIBITL
 
MINLONG


	)

51 
	~<Êﬂt.h
>

53 
	#MAXDOUBLE
 
DBL_MAX


	)

54 
	#MAXFLOAT
 
FLT_MAX


	)

55 
	#MINDOUBLE
 
DBL_MIN


	)

56 
	#MINFLOAT
 
FLT_MIN


	)

57 
	#DMINEXP
 
DBL_MIN_EXP


	)

58 
	#FMINEXP
 
FLT_MIN_EXP


	)

59 
	#DMAXEXP
 
DBL_MAX_EXP


	)

60 
	#FMAXEXP
 
FLT_MAX_EXP


	)

63 #ifde‡
__USE_MISC


65 
	#BITSPERBYTE
 
CHAR_BIT


	)

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
704
24872
debug-shore.cpp
debug_locks.cpp
include/dora.h
include/dora/action.h
include/dora/base_action.h
include/dora/base_partition.h
include/dora/common.h
include/dora/dflusher.h
include/dora/dkey_ranges_map.h
include/dora/dora_env.h
include/dora/dora_error.h
include/dora/key.h
include/dora/lockman.h
include/dora/logical_lock.h
include/dora/part_table.h
include/dora/partition.h
include/dora/range_action.h
include/dora/range_part_table.h
include/dora/range_table_i.h
include/dora/rvp.h
include/dora/tm1/dora_tm1.h
include/dora/tm1/dora_tm1_client.h
include/dora/tm1/dora_tm1_impl.h
include/dora/tpcb/dora_tpcb.h
include/dora/tpcb/dora_tpcb_client.h
include/dora/tpcb/dora_tpcb_impl.h
include/dora/tpcc/dora_delivery.h
include/dora/tpcc/dora_mbench.h
include/dora/tpcc/dora_new_order.h
include/dora/tpcc/dora_order_status.h
include/dora/tpcc/dora_payment.h
include/dora/tpcc/dora_stock_level.h
include/dora/tpcc/dora_tpcc.h
include/dora/tpcc/dora_tpcc_client.h
include/dora/worker.h
include/k_defines.h
include/kits-config.h
include/qpipe.h
include/qpipe/common/int_comparator.h
include/qpipe/common/predicates.h
include/qpipe/common/process_query.h
include/qpipe/common/process_tuple.h
include/qpipe/core.h
include/qpipe/core/cpu_bind.h
include/qpipe/core/dispatcher.h
include/qpipe/core/functors.h
include/qpipe/core/packet.h
include/qpipe/core/query_state.h
include/qpipe/core/stage.h
include/qpipe/core/stage_container.h
include/qpipe/core/tuple.h
include/qpipe/core/tuple_fifo.h
include/qpipe/core/tuple_fifo_directory.h
include/qpipe/qcommon.h
include/qpipe/scheduler.h
include/qpipe/scheduler/cpu.h
include/qpipe/scheduler/cpu_set.h
include/qpipe/scheduler/cpu_set_struct.h
include/qpipe/scheduler/cpu_struct.h
include/qpipe/scheduler/os_support.h
include/qpipe/scheduler/policy.h
include/qpipe/scheduler/policy_os.h
include/qpipe/scheduler/policy_query_cpu.h
include/qpipe/scheduler/policy_rr_cpu.h
include/qpipe/scheduler/policy_rr_module.h
include/qpipe/stages.h
include/qpipe/stages/aggregate.h
include/qpipe/stages/bnl_in.h
include/qpipe/stages/bnl_join.h
include/qpipe/stages/delay_writer.h
include/qpipe/stages/echo.h
include/qpipe/stages/fdump.h
include/qpipe/stages/fscan.h
include/qpipe/stages/func_call.h
include/qpipe/stages/hash_aggregate.h
include/qpipe/stages/hash_join.h
include/qpipe/stages/merge.h
include/qpipe/stages/partial_aggregate.h
include/qpipe/stages/pipe_hash_join.h
include/qpipe/stages/register_stage_containers.h
include/qpipe/stages/sieve.h
include/qpipe/stages/sort.h
include/qpipe/stages/sort_merge_join.h
include/qpipe/stages/sorted_in.h
include/qpipe/stages/tscan.h
include/qpipe/stages/tuple_source.h
include/shore.h
include/sm/shore/common.h
include/sm/shore/shore_asc_sort_buf.h
include/sm/shore/shore_client.h
include/sm/shore/shore_desc_sort_buf.h
include/sm/shore/shore_env.h
include/sm/shore/shore_error.h
include/sm/shore/shore_field.h
include/sm/shore/shore_file_desc.h
include/sm/shore/shore_flusher.h
include/sm/shore/shore_helper_loader.h
include/sm/shore/shore_index.h
include/sm/shore/shore_iter.h
include/sm/shore/shore_msg.h
include/sm/shore/shore_reqs.h
include/sm/shore/shore_row.h
include/sm/shore/shore_row_cache.h
include/sm/shore/shore_shell.h
include/sm/shore/shore_table.h
include/sm/shore/shore_table_man.h
include/sm/shore/shore_tools.h
include/sm/shore/shore_trx_worker.h
include/sm/shore/shore_worker.h
include/sm/shore/srmwqueue.h
include/trace/trace_force.h
include/trace/trace_print_pthread.h
include/trace/trace_stream.h
include/trace/trace_types.h
include/util.h
include/util/acounter.h
include/util/atomic_ops.h
include/util/busy_delay.h
include/util/c_str.h
include/util/cache.h
include/util/chomp.h
include/util/command/command_handler.h
include/util/command/printer.h
include/util/command/tracer.h
include/util/compat.h
include/util/condex.h
include/util/config.h
include/util/confparser.h
include/util/countdown.h
include/util/decimal.h
include/util/envvar.h
include/util/exception.h
include/util/file.h
include/util/fileops.h
include/util/fnv.h
include/util/guard.h
include/util/hash_functions.h
include/util/hashtable.h
include/util/history.h
include/util/linux_procstat.h
include/util/namespace.h
include/util/pool_alloc.h
include/util/prcinfo.h
include/util/procstat.h
include/util/progress.h
include/util/randgen.h
include/util/random_input.h
include/util/resource_declare.h
include/util/resource_pool.h
include/util/resource_releaser.h
include/util/rio.h
include/util/shell.h
include/util/simics-magic-instruction.h
include/util/skewer.h
include/util/static_hash_map.h
include/util/static_hash_map_struct.h
include/util/static_list.h
include/util/static_list_node.h
include/util/static_list_node_struct.h
include/util/static_list_struct.h
include/util/stl_block_alloc.h
include/util/stl_pool.h
include/util/stl_pooled_alloc.h
include/util/stopwatch.h
include/util/store_string.h
include/util/sunos_procstat.h
include/util/sync.h
include/util/tassert.h
include/util/tcp.h
include/util/thread.h
include/util/thread_local.h
include/util/time_util.h
include/util/tmpfile.h
include/util/topinfo.h
include/util/trace.h
include/util/w_strlcpy.h
include/util/zipfian.h
include/workload/ssb/dbgen/bcd2.h
include/workload/ssb/dbgen/config.h
include/workload/ssb/dbgen/dss.h
include/workload/ssb/dbgen/dsstypes.h
include/workload/ssb/dbgen/permute.h
include/workload/ssb/dbgen/rnd.h
include/workload/ssb/dbgen/shared.h
include/workload/ssb/dbgen/tpcd.h
include/workload/ssb/shore_ssb_client.h
include/workload/ssb/shore_ssb_env.h
include/workload/ssb/shore_ssb_schema.h
include/workload/ssb/shore_ssb_schema_man.h
include/workload/ssb/ssb_const.h
include/workload/ssb/ssb_input.h
include/workload/ssb/ssb_random.h
include/workload/ssb/ssb_struct.h
include/workload/ssb/ssb_util.h
include/workload/tm1/shore_tm1_client.h
include/workload/tm1/shore_tm1_env.h
include/workload/tm1/shore_tm1_schema.h
include/workload/tm1/shore_tm1_schema_man.h
include/workload/tm1/tm1_const.h
include/workload/tm1/tm1_input.h
include/workload/tpcb/shore_tpcb_client.h
include/workload/tpcb/shore_tpcb_env.h
include/workload/tpcb/shore_tpcb_schema.h
include/workload/tpcb/shore_tpcb_schema_man.h
include/workload/tpcb/tpcb_input.h
include/workload/tpcc/shore_tpcc_client.h
include/workload/tpcc/shore_tpcc_env.h
include/workload/tpcc/shore_tpcc_schema.h
include/workload/tpcc/shore_tpcc_schema_man.h
include/workload/tpcc/tpcc_const.h
include/workload/tpcc/tpcc_input.h
include/workload/tpcc/tpcc_random.h
include/workload/tpcc/tpcc_struct.h
include/workload/tpce/MEESUT.h
include/workload/tpce/egen/AddressTable.h
include/workload/tpce/egen/BaseLoader.h
include/workload/tpce/egen/BaseLoaderFactory.h
include/workload/tpce/egen/BaseLogFormatter.h
include/workload/tpce/egen/BaseLogger.h
include/workload/tpce/egen/BigMath.h
include/workload/tpce/egen/Brokers.h
include/workload/tpce/egen/CE.h
include/workload/tpce/egen/CESUTInterface.h
include/workload/tpce/egen/CETxnInputGenerator.h
include/workload/tpce/egen/CETxnMixGenerator.h
include/workload/tpce/egen/ChargeTable.h
include/workload/tpce/egen/CommissionRateTable.h
include/workload/tpce/egen/CompanyCompetitorFile.h
include/workload/tpce/egen/CompanyCompetitorTable.h
include/workload/tpce/egen/CompanyFile.h
include/workload/tpce/egen/CompanyTable.h
include/workload/tpce/egen/CustomerAccountsAndPermissionsTable.h
include/workload/tpce/egen/CustomerSelection.h
include/workload/tpce/egen/CustomerTable.h
include/workload/tpce/egen/CustomerTaxratesTable.h
include/workload/tpce/egen/DM.h
include/workload/tpce/egen/DMSUTInterface.h
include/workload/tpce/egen/DailyMarketTable.h
include/workload/tpce/egen/DateTime.h
include/workload/tpce/egen/DriverParamSettings.h
include/workload/tpce/egen/DriverTypes.h
include/workload/tpce/egen/EGenBaseLoader_stdafx.h
include/workload/tpce/egen/EGenError.h
include/workload/tpce/egen/EGenGenerateAndLoad.h
include/workload/tpce/egen/EGenGenerateAndLoadBaseOutput.h
include/workload/tpce/egen/EGenGenerateAndLoadStandardOutput.h
include/workload/tpce/egen/EGenGenerateAndLoad_stdafx.h
include/workload/tpce/egen/EGenLoader_stdafx.h
include/workload/tpce/egen/EGenLogFormatterTab.h
include/workload/tpce/egen/EGenLogger.h
include/workload/tpce/egen/EGenNullLoader_stdafx.h
include/workload/tpce/egen/EGenStandardTypes.h
include/workload/tpce/egen/EGenTables_common.h
include/workload/tpce/egen/EGenTables_stdafx.h
include/workload/tpce/egen/EGenUtilities_stdafx.h
include/workload/tpce/egen/EGenVersion.h
include/workload/tpce/egen/ExchangeTable.h
include/workload/tpce/egen/FinalTransform.h
include/workload/tpce/egen/FinancialTable.h
include/workload/tpce/egen/FixedArray.h
include/workload/tpce/egen/FixedMap.h
include/workload/tpce/egen/FlatAccountPermissionLoad.h
include/workload/tpce/egen/FlatAddressLoad.h
include/workload/tpce/egen/FlatBrokerLoad.h
include/workload/tpce/egen/FlatCashTransactionLoad.h
include/workload/tpce/egen/FlatChargeLoad.h
include/workload/tpce/egen/FlatCommissionRateLoad.h
include/workload/tpce/egen/FlatCompanyCompetitorLoad.h
include/workload/tpce/egen/FlatCompanyLoad.h
include/workload/tpce/egen/FlatCustomerAccountLoad.h
include/workload/tpce/egen/FlatCustomerLoad.h
include/workload/tpce/egen/FlatCustomerTaxrateLoad.h
include/workload/tpce/egen/FlatDailyMarketLoad.h
include/workload/tpce/egen/FlatExchangeLoad.h
include/workload/tpce/egen/FlatFile.h
include/workload/tpce/egen/FlatFileLoad_common.h
include/workload/tpce/egen/FlatFileLoad_stdafx.h
include/workload/tpce/egen/FlatFileLoader.h
include/workload/tpce/egen/FlatFinancialLoad.h
include/workload/tpce/egen/FlatHoldingHistoryLoad.h
include/workload/tpce/egen/FlatHoldingLoad.h
include/workload/tpce/egen/FlatHoldingSummaryLoad.h
include/workload/tpce/egen/FlatIndustryLoad.h
include/workload/tpce/egen/FlatLastTradeLoad.h
include/workload/tpce/egen/FlatLoaderFactory.h
include/workload/tpce/egen/FlatNewsItemLoad.h
include/workload/tpce/egen/FlatNewsXRefLoad.h
include/workload/tpce/egen/FlatSectorLoad.h
include/workload/tpce/egen/FlatSecurityLoad.h
include/workload/tpce/egen/FlatSettlementLoad.h
include/workload/tpce/egen/FlatStatusTypeLoad.h
include/workload/tpce/egen/FlatTaxrateLoad.h
include/workload/tpce/egen/FlatTradeHistoryLoad.h
include/workload/tpce/egen/FlatTradeLoad.h
include/workload/tpce/egen/FlatTradeRequestLoad.h
include/workload/tpce/egen/FlatTradeTypeLoad.h
include/workload/tpce/egen/FlatWatchItemLoad.h
include/workload/tpce/egen/FlatWatchListLoad.h
include/workload/tpce/egen/FlatZipCodeLoad.h
include/workload/tpce/egen/HoldingsAndTradesTable.h
include/workload/tpce/egen/IndustryTable.h
include/workload/tpce/egen/InputFile.h
include/workload/tpce/egen/InputFileNoWeight.h
include/workload/tpce/egen/InputFlatFilesDeclarations.h
include/workload/tpce/egen/InputFlatFilesStructure.h
include/workload/tpce/egen/LastTradeTable.h
include/workload/tpce/egen/MEE.h
include/workload/tpce/egen/MEEPriceBoard.h
include/workload/tpce/egen/MEESUTInterface.h
include/workload/tpce/egen/MEESecurity.h
include/workload/tpce/egen/MEETickerTape.h
include/workload/tpce/egen/MEETradeRequestActions.h
include/workload/tpce/egen/MEETradingFloor.h
include/workload/tpce/egen/MiscConsts.h
include/workload/tpce/egen/Money.h
include/workload/tpce/egen/NewsItemAndXRefTable.h
include/workload/tpce/egen/NullLoad_stdafx.h
include/workload/tpce/egen/NullLoader.h
include/workload/tpce/egen/NullLoaderFactory.h
include/workload/tpce/egen/Person.h
include/workload/tpce/egen/RNGSeeds.h
include/workload/tpce/egen/Random.h
include/workload/tpce/egen/SectorTable.h
include/workload/tpce/egen/SecurityFile.h
include/workload/tpce/egen/SecurityPriceRange.h
include/workload/tpce/egen/SecurityTable.h
include/workload/tpce/egen/StatusTypeTable.h
include/workload/tpce/egen/SyncLockInterface.h
include/workload/tpce/egen/TableConsts.h
include/workload/tpce/egen/TableTemplate.h
include/workload/tpce/egen/Table_Defs.h
include/workload/tpce/egen/TaxrateTable.h
include/workload/tpce/egen/TimerWheel.h
include/workload/tpce/egen/TimerWheelTimer.h
include/workload/tpce/egen/TradeGen.h
include/workload/tpce/egen/TradeTypeIDs.h
include/workload/tpce/egen/TradeTypeTable.h
include/workload/tpce/egen/TxnHarnessBrokerVolume.h
include/workload/tpce/egen/TxnHarnessCustomerPosition.h
include/workload/tpce/egen/TxnHarnessDBInterface.h
include/workload/tpce/egen/TxnHarnessDataMaintenance.h
include/workload/tpce/egen/TxnHarnessMarketFeed.h
include/workload/tpce/egen/TxnHarnessMarketWatch.h
include/workload/tpce/egen/TxnHarnessSecurityDetail.h
include/workload/tpce/egen/TxnHarnessSendToMarketInterface.h
include/workload/tpce/egen/TxnHarnessStructs.h
include/workload/tpce/egen/TxnHarnessTradeCleanup.h
include/workload/tpce/egen/TxnHarnessTradeLookup.h
include/workload/tpce/egen/TxnHarnessTradeOrder.h
include/workload/tpce/egen/TxnHarnessTradeResult.h
include/workload/tpce/egen/TxnHarnessTradeStatus.h
include/workload/tpce/egen/TxnHarnessTradeUpdate.h
include/workload/tpce/egen/WatchListsAndItemsTable.h
include/workload/tpce/egen/Wheel.h
include/workload/tpce/egen/WheelTime.h
include/workload/tpce/egen/ZipCodeTable.h
include/workload/tpce/egen/bucketsimulator.h
include/workload/tpce/egen/error.h
include/workload/tpce/egen/locking.h
include/workload/tpce/egen/progressmeter.h
include/workload/tpce/egen/progressmeterinterface.h
include/workload/tpce/egen/strutil.h
include/workload/tpce/egen/threading.h
include/workload/tpce/egen/threading_pthread.h
include/workload/tpce/egen/threading_single.h
include/workload/tpce/egen/unusedflag.h
include/workload/tpce/shore_tpce_client.h
include/workload/tpce/shore_tpce_egen.h
include/workload/tpce/shore_tpce_env.h
include/workload/tpce/shore_tpce_schema.h
include/workload/tpce/shore_tpce_schema_man.h
include/workload/tpce/tpce_const.h
include/workload/tpce/tpce_input.h
include/workload/tpce/tpce_struct.h
include/workload/tpch/dbgen/bcd2.h
include/workload/tpch/dbgen/config.h
include/workload/tpch/dbgen/dss.h
include/workload/tpch/dbgen/dsstypes.h
include/workload/tpch/dbgen/permute.h
include/workload/tpch/dbgen/release.h
include/workload/tpch/dbgen/rnd.h
include/workload/tpch/dbgen/rng64.h
include/workload/tpch/dbgen/shared.h
include/workload/tpch/dbgen/tpcd.h
include/workload/tpch/shore_tpch_client.h
include/workload/tpch/shore_tpch_env.h
include/workload/tpch/shore_tpch_schema.h
include/workload/tpch/shore_tpch_schema_man.h
include/workload/tpch/tpch_const.h
include/workload/tpch/tpch_input.h
include/workload/tpch/tpch_random.h
include/workload/tpch/tpch_struct.h
include/workload/tpch/tpch_util.h
src/dora/base_action.cpp
src/dora/base_partition.cpp
src/dora/dflusher.cpp
src/dora/dkey_ranges_map.cpp
src/dora/dora_env.cpp
src/dora/logical_lock.cpp
src/dora/part_table.cpp
src/dora/partition.cpp
src/dora/range_part_table.cpp
src/dora/rvp.cpp
src/dora/tm1/dora_tm1.cpp
src/dora/tm1/dora_tm1_client.cpp
src/dora/tm1/dora_tm1_impl.cpp
src/dora/tm1/dora_tm1_xct.cpp
src/dora/tpcb/dora_tpcb.cpp
src/dora/tpcb/dora_tpcb_client.cpp
src/dora/tpcb/dora_tpcb_impl.cpp
src/dora/tpcb/dora_tpcb_xct.cpp
src/dora/tpcc/dora_delivery.cpp
src/dora/tpcc/dora_mbench.cpp
src/dora/tpcc/dora_new_order.cpp
src/dora/tpcc/dora_order_status.cpp
src/dora/tpcc/dora_payment.cpp
src/dora/tpcc/dora_stock_level.cpp
src/dora/tpcc/dora_tpcc.cpp
src/dora/tpcc/dora_tpcc_client.cpp
src/dora/tpcc/dora_tpcc_xct.cpp
src/dora/worker.cpp
src/qpipe/common/predicates.cpp
src/qpipe/common/process_query.cpp
src/qpipe/core/dispatcher.cpp
src/qpipe/core/packet.cpp
src/qpipe/core/stage_container.cpp
src/qpipe/core/tuple.cpp
src/qpipe/core/tuple_fifo.cpp
src/qpipe/core/tuple_fifo_directory.cpp
src/qpipe/scheduler/cpu.cpp
src/qpipe/scheduler/cpu_set.cpp
src/qpipe/stages/aggregate.cpp
src/qpipe/stages/bnl_in.cpp
src/qpipe/stages/bnl_join.cpp
src/qpipe/stages/delay_writer.cpp
src/qpipe/stages/echo.cpp
src/qpipe/stages/fdump.cpp
src/qpipe/stages/fscan.cpp
src/qpipe/stages/func_call.cpp
src/qpipe/stages/hash_aggregate.cpp
src/qpipe/stages/hash_join.cpp
src/qpipe/stages/merge.cpp
src/qpipe/stages/partial_aggregate.cpp
src/qpipe/stages/pipe_hash_join.cpp
src/qpipe/stages/register_stage_containers.cpp
src/qpipe/stages/sieve.cpp
src/qpipe/stages/sort.cpp
src/qpipe/stages/sort_merge_join.cpp
src/qpipe/stages/sorted_in.cpp
src/qpipe/stages/tscan.cpp
src/sm/shore/shore_asc_sort_buf.cpp
src/sm/shore/shore_client.cpp
src/sm/shore/shore_desc_sort_buf.cpp
src/sm/shore/shore_env.cpp
src/sm/shore/shore_field.cpp
src/sm/shore/shore_file_desc.cpp
src/sm/shore/shore_flusher.cpp
src/sm/shore/shore_helper_loader.cpp
src/sm/shore/shore_index.cpp
src/sm/shore/shore_iter.cpp
src/sm/shore/shore_reqs.cpp
src/sm/shore/shore_row.cpp
src/sm/shore/shore_shell.cpp
src/sm/shore/shore_table.cpp
src/sm/shore/shore_trx_worker.cpp
src/sm/shore/shore_worker.cpp
src/tests/shore_kits.cpp
src/trace/trace_force.cpp
src/trace/trace_print_pthread.cpp
src/trace/trace_stream.cpp
src/util/busy_delay.cpp
src/util/c_str.cpp
src/util/chomp.cpp
src/util/command/printer.cpp
src/util/command/tracer.cpp
src/util/confparser.cpp
src/util/countdown.cpp
src/util/envvar.cpp
src/util/fileops.cpp
src/util/fnv.cpp
src/util/hash_functions.cpp
src/util/history.cpp
src/util/linux_procstat.cpp
src/util/pool_alloc.cpp
src/util/prcinfo.cpp
src/util/procstat.cpp
src/util/progress.cpp
src/util/random_input.cpp
src/util/resource_pool.cpp
src/util/rio.cpp
src/util/shell.cpp
src/util/skewer.cpp
src/util/static_hash_map.cpp
src/util/static_list.cpp
src/util/static_list_node.cpp
src/util/stl_pool.cpp
src/util/store_string.cpp
src/util/sunos_procstat.cpp
src/util/tcp.cpp
src/util/thread.cpp
src/util/time_util.cpp
src/util/tmpfile.cpp
src/util/topinfo.cpp
src/util/trace.cpp
src/util/w_strlcpy.cpp
src/workload/ssb/dbgen/driver.cpp
src/workload/ssb/dbgen/ssb_bcd2.cpp
src/workload/ssb/dbgen/ssb_bm_utils.cpp
src/workload/ssb/dbgen/ssb_build.cpp
src/workload/ssb/dbgen/ssb_driver.cpp
src/workload/ssb/dbgen/ssb_load_stub.cpp
src/workload/ssb/dbgen/ssb_permute.cpp
src/workload/ssb/dbgen/ssb_print.cpp
src/workload/ssb/dbgen/ssb_rnd.cpp
src/workload/ssb/dbgen/ssb_speed_seed.cpp
src/workload/ssb/dbgen/ssb_text.cpp
src/workload/ssb/qpipe/qpipe_q1_1.cpp
src/workload/ssb/qpipe/qpipe_q1_2.cpp
src/workload/ssb/qpipe/qpipe_q1_3.cpp
src/workload/ssb/qpipe/qpipe_q2_1.cpp
src/workload/ssb/qpipe/qpipe_q2_2.cpp
src/workload/ssb/qpipe/qpipe_q2_3.cpp
src/workload/ssb/qpipe/qpipe_q3_1.cpp
src/workload/ssb/qpipe/qpipe_q3_2.cpp
src/workload/ssb/qpipe/qpipe_q3_3.cpp
src/workload/ssb/qpipe/qpipe_q3_4.cpp
src/workload/ssb/qpipe/qpipe_q4_1.cpp
src/workload/ssb/qpipe/qpipe_q4_2.cpp
src/workload/ssb/qpipe/qpipe_q4_3.cpp
src/workload/ssb/qpipe/qpipe_qcustomer.cpp
src/workload/ssb/qpipe/qpipe_qdate.cpp
src/workload/ssb/qpipe/qpipe_qlineorder.cpp
src/workload/ssb/qpipe/qpipe_qpart.cpp
src/workload/ssb/qpipe/qpipe_qsupplier.cpp
src/workload/ssb/qpipe/qpipe_qtest.cpp
src/workload/ssb/qpipe_ssb_xct.cpp
src/workload/ssb/shore_ssb_client.cpp
src/workload/ssb/shore_ssb_env.cpp
src/workload/ssb/shore_ssb_schema.cpp
src/workload/ssb/shore_ssb_schema_man.cpp
src/workload/ssb/shore_ssb_xct.cpp
src/workload/ssb/ssb_input.cpp
src/workload/ssb/ssb_random.cpp
src/workload/ssb/ssb_util.cpp
src/workload/tm1/shore_tm1_client.cpp
src/workload/tm1/shore_tm1_env.cpp
src/workload/tm1/shore_tm1_schema.cpp
src/workload/tm1/shore_tm1_schema_man.cpp
src/workload/tm1/shore_tm1_xct.cpp
src/workload/tm1/tm1_input.cpp
src/workload/tpcb/shore_tpcb_client.cpp
src/workload/tpcb/shore_tpcb_env.cpp
src/workload/tpcb/shore_tpcb_schema.cpp
src/workload/tpcb/shore_tpcb_schema_man.cpp
src/workload/tpcb/shore_tpcb_xct.cpp
src/workload/tpcb/tpcb_input.cpp
src/workload/tpcc/shore_tpcc_client.cpp
src/workload/tpcc/shore_tpcc_env.cpp
src/workload/tpcc/shore_tpcc_schema.cpp
src/workload/tpcc/shore_tpcc_schema_man.cpp
src/workload/tpcc/shore_tpcc_xct.cpp
src/workload/tpcc/tpcc_input.cpp
src/workload/tpcc/tpcc_random.cpp
src/workload/tpce/egen/AddressTable.cpp
src/workload/tpce/egen/BaseLogger.cpp
src/workload/tpce/egen/CE.cpp
src/workload/tpce/egen/CETxnInputGenerator.cpp
src/workload/tpce/egen/CETxnMixGenerator.cpp
src/workload/tpce/egen/CustomerSelection.cpp
src/workload/tpce/egen/CustomerTable.cpp
src/workload/tpce/egen/DM.cpp
src/workload/tpce/egen/DateTime.cpp
src/workload/tpce/egen/EGenGenerateAndLoad.cpp
src/workload/tpce/egen/EGenLoader.cpp
src/workload/tpce/egen/EGenLogFormatterTab.cpp
src/workload/tpce/egen/EGenValidate.cpp
src/workload/tpce/egen/EGenVersion.cpp
src/workload/tpce/egen/FlatFileLoader.cpp
src/workload/tpce/egen/InputFlatFilesStructure.cpp
src/workload/tpce/egen/MEE.cpp
src/workload/tpce/egen/MEEPriceBoard.cpp
src/workload/tpce/egen/MEESecurity.cpp
src/workload/tpce/egen/MEETickerTape.cpp
src/workload/tpce/egen/MEETradingFloor.cpp
src/workload/tpce/egen/Money.cpp
src/workload/tpce/egen/Person.cpp
src/workload/tpce/egen/Random.cpp
src/workload/tpce/egen/ReadRowFunctions.cpp
src/workload/tpce/egen/ReadRowFunctions_istream.cpp
src/workload/tpce/egen/ReadRowFunctions_sscanf.cpp
src/workload/tpce/egen/TradeGen.cpp
src/workload/tpce/egen/WheelTime.cpp
src/workload/tpce/egen/bucketsimulator.cpp
src/workload/tpce/egen/error.cpp
src/workload/tpce/egen/locking.cpp
src/workload/tpce/egen/progressmeter.cpp
src/workload/tpce/egen/progressmeterinterface.cpp
src/workload/tpce/egen/strutil.cpp
src/workload/tpce/egen/threading.cpp
src/workload/tpce/shore_tpce_client.cpp
src/workload/tpce/shore_tpce_env.cpp
src/workload/tpce/shore_tpce_schema.cpp
src/workload/tpce/shore_tpce_schema_man.cpp
src/workload/tpce/shore_tpce_xct_broker_volume.cpp
src/workload/tpce/shore_tpce_xct_customer_position.cpp
src/workload/tpce/shore_tpce_xct_data_maintenance.cpp
src/workload/tpce/shore_tpce_xct_market_feed.cpp
src/workload/tpce/shore_tpce_xct_market_watch.cpp
src/workload/tpce/shore_tpce_xct_populate.cpp
src/workload/tpce/shore_tpce_xct_security_detail.cpp
src/workload/tpce/shore_tpce_xct_trade_cleanup.cpp
src/workload/tpce/shore_tpce_xct_trade_lookup.cpp
src/workload/tpce/shore_tpce_xct_trade_order.cpp
src/workload/tpce/shore_tpce_xct_trade_result.cpp
src/workload/tpce/shore_tpce_xct_trade_status.cpp
src/workload/tpce/shore_tpce_xct_trade_update.cpp
src/workload/tpce/tpce_input.cpp
src/workload/tpch/dbgen/bcd2.cpp
src/workload/tpch/dbgen/bm_utils.cpp
src/workload/tpch/dbgen/build.cpp
src/workload/tpch/dbgen/driver.cpp
src/workload/tpch/dbgen/load_stub.cpp
src/workload/tpch/dbgen/permute.cpp
src/workload/tpch/dbgen/print.cpp
src/workload/tpch/dbgen/rnd.cpp
src/workload/tpch/dbgen/rng64.cpp
src/workload/tpch/dbgen/speed_seed.cpp
src/workload/tpch/dbgen/text.cpp
src/workload/tpch/qpipe/qpipe_q1.cpp
src/workload/tpch/qpipe/qpipe_q10.cpp
src/workload/tpch/qpipe/qpipe_q11.cpp
src/workload/tpch/qpipe/qpipe_q12.cpp
src/workload/tpch/qpipe/qpipe_q13.cpp
src/workload/tpch/qpipe/qpipe_q14.cpp
src/workload/tpch/qpipe/qpipe_q15.cpp
src/workload/tpch/qpipe/qpipe_q16.cpp
src/workload/tpch/qpipe/qpipe_q17.cpp
src/workload/tpch/qpipe/qpipe_q18.cpp
src/workload/tpch/qpipe/qpipe_q19.cpp
src/workload/tpch/qpipe/qpipe_q2.cpp
src/workload/tpch/qpipe/qpipe_q20.cpp
src/workload/tpch/qpipe/qpipe_q21.cpp
src/workload/tpch/qpipe/qpipe_q22.cpp
src/workload/tpch/qpipe/qpipe_q3.cpp
src/workload/tpch/qpipe/qpipe_q4.cpp
src/workload/tpch/qpipe/qpipe_q5.cpp
src/workload/tpch/qpipe/qpipe_q6.cpp
src/workload/tpch/qpipe/qpipe_q7.cpp
src/workload/tpch/qpipe/qpipe_q8.cpp
src/workload/tpch/qpipe/qpipe_q9.cpp
src/workload/tpch/qpipe/qpipe_tpch_qcustomer.cpp
src/workload/tpch/qpipe/qpipe_tpch_qlineitem.cpp
src/workload/tpch/qpipe/qpipe_tpch_qnation.cpp
src/workload/tpch/qpipe/qpipe_tpch_qorders.cpp
src/workload/tpch/qpipe/qpipe_tpch_qpart.cpp
src/workload/tpch/qpipe/qpipe_tpch_qpartsupp.cpp
src/workload/tpch/qpipe/qpipe_tpch_qregion.cpp
src/workload/tpch/qpipe/qpipe_tpch_qsupplier.cpp
src/workload/tpch/qpipe_tpch_xct.cpp
src/workload/tpch/shore_tpch_client.cpp
src/workload/tpch/shore_tpch_env.cpp
src/workload/tpch/shore_tpch_schema.cpp
src/workload/tpch/shore_tpch_schema_man.cpp
src/workload/tpch/shore_tpch_xct.cpp
src/workload/tpch/tpch_input.cpp
src/workload/tpch/tpch_random.cpp
src/workload/tpch/tpch_util.cpp
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/error.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/ucontext.h
/usr/include/unistd.h
/usr/include/values.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
