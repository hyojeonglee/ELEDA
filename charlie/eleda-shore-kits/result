==30374== Helgrind, a thread error detector
==30374== Copyright (C) 2007-2013, and GNU GPL'd, by OpenWorks LLP et al.
==30374== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==30374== Command: ./shore_kits -c tpcc-10 -s baseline -d normal -r
==30374== Parent PID: 8221
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #5 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #3 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0xAB1C46: shore::db_init_smt_t::db_init_smt_t(c_str, shore::ShoreEnv*) (shore_helper_loader.cpp:48)
==30374==    by 0x78DEAB: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:252)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCD4A40 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EB53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:565)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcd4a40 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xC3E790: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:550)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374==  Lock at 0x23FCCE670 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EE53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:584)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcce670 is 112 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 4 at 0x23FCCE6E8 by thread #5
==30374== Locks held: 2, at addresses 0x23FCD4A40 0x23FCCE670
==30374==    at 0xC3FFE7: sthread_t::_start() (sthread.cpp:796)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC44194: sthread_t::status() const (sthread.h:1133)
==30374==    by 0xC4164F: sthread_t::print(std::ostream&) const (sthread.cpp:1259)
==30374==    by 0xC41548: operator<<(std::ostream&, sthread_t const&) (sthread.cpp:1237)
==30374==    by 0xC3E594: sthread_t::fork() (sthread.cpp:511)
==30374==    by 0xB76C86: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:459)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==  Address 0x23fcce6e8 is 232 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCCE670 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EE53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:584)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcce670 is 112 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 4 at 0x23FCCE6E8 by thread #5
==30374== Locks held: 1, at address 0x23FCCE670
==30374==    at 0xC4008A: sthread_t::_start() (sthread.cpp:835)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x23fcce6e8 is 232 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #6 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCD8450 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EE53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:584)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB7B2F2: bf_core_m::init_thread_t::init_thread_t(bf_core_m*, long, long) (bf_core.cpp:403)
==30374==    by 0xB76C33: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcd8450 is 112 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 4 at 0x23FCD84C8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC44194: sthread_t::status() const (sthread.h:1133)
==30374==    by 0xC4164F: sthread_t::print(std::ostream&) const (sthread.cpp:1259)
==30374==    by 0xC41548: operator<<(std::ostream&, sthread_t const&) (sthread.cpp:1237)
==30374==    by 0xC3E594: sthread_t::fork() (sthread.cpp:511)
==30374==    by 0xB76C86: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:459)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #6
==30374== Locks held: 1, at address 0x23FCD8450
==30374==    at 0xC4008A: sthread_t::_start() (sthread.cpp:835)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x23fcd84c8 is 232 bytes inside a block of size 25,600 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB76C12: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:456)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #13 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB6C81C: bf_cleaner_thread_t::bf_cleaner_thread_t(vid_t) (bf.cpp:509)
==30374==    by 0xB72C7F: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xC0D829: restart_m::analysis_pass(lsn_t, dirty_pages_tab_t&, lsn_t&, bool&) (restart.cpp:510)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 4 at 0x13C83248 by thread #13
==30374== Locks held: none
==30374==    at 0xB6DC66: bf_cleaner_thread_t::run() (bf.cpp:645)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xAE2F59: atomic_add_int_nv (atomic_ops_builtin.h:253)
==30374==    by 0xAE5968: int atomic_inc_nv<int>(int volatile&) (atomic_templates.h:126)
==30374==    by 0xB73F5D: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3078)
==30374==    by 0xB73FFD: bf_m::set_dirty(page_s const*) (bf.cpp:3112)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDDB80: log_page_reclaim (logstub_gen.cpp:343)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB6F9C3: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1316)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB6F9C3: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1316)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC25AAF: partition_t::open_for_read(unsigned int, bool) (partition.cpp:815)
==30374==    by 0xBE1F74: log_core::_open_partition(unsigned int, lsn_t const&, bool, bool, bool) (log_core.cpp:843)
==30374==    by 0xBEC16F: log_core::_open_partition_for_read(unsigned int, lsn_t const&, bool, bool) (log_core.h:383)
==30374==    by 0xBE1329: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:578)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC25AAF: partition_t::open_for_read(unsigned int, bool) (partition.cpp:815)
==30374==    by 0xBE1F74: log_core::_open_partition(unsigned int, lsn_t const&, bool, bool, bool) (log_core.cpp:843)
==30374==    by 0xBEC16F: log_core::_open_partition_for_read(unsigned int, lsn_t const&, bool, bool) (log_core.h:383)
==30374==    by 0xBE1329: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:578)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xBE11B4: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:547)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xBE11B4: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:547)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6F25E: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1027)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #13
==30374== Locks held: none
==30374==    at 0xB6DC66: bf_cleaner_thread_t::run() (bf.cpp:645)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB786A9: bf_core_m::replacement() (bf_core.cpp:1569)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB786A9: bf_core_m::replacement() (bf_core.cpp:1569)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xAE2F59: atomic_add_int_nv (atomic_ops_builtin.h:253)
==30374==    by 0xAE5968: int atomic_inc_nv<int>(int volatile&) (atomic_templates.h:126)
==30374==    by 0xB73F5D: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3078)
==30374==    by 0xB73FFD: bf_m::set_dirty(page_s const*) (bf.cpp:3112)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDDB80: log_page_reclaim (logstub_gen.cpp:343)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD8A46: page_format_log::redo(page_p*) (logrec.cpp:2462)
==30374==    by 0xBD194E: logrec_t::redo(page_p*) (redo_gen.cpp:121)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #13
==30374== Locks held: none
==30374==    at 0xB6DC66: bf_cleaner_thread_t::run() (bf.cpp:645)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFCB6F: page_s::space_t::acquire(int, int, xct_t*, bool) (page.cpp:475)
==30374==    by 0xAFDB04: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1172)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFCB6F: page_s::space_t::acquire(int, int, xct_t*, bool) (page.cpp:475)
==30374==    by 0xAFDB04: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1172)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDDB80: log_page_reclaim (logstub_gen.cpp:343)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDDB80: log_page_reclaim (logstub_gen.cpp:343)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBD1A74: logrec_t::redo(page_p*) (logrec.cpp:275)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBD1A74: logrec_t::redo(page_p*) (logrec.cpp:275)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB00E27: page_p::update_bucket_info() (page.cpp:2726)
==30374==    by 0xB01E34: page_p::unfix() (page.h:763)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xC0EA9C: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:1039)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB00E27: page_p::update_bucket_info() (page.cpp:2726)
==30374==    by 0xB01E34: page_p::unfix() (page.h:763)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xC0EA9C: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:1039)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC4892D: sdisk_unix_t::pread(void*, int, long, int&) (sdisk_unix.cpp:351)
==30374==    by 0xC474E9: sthread_t::pread(int, void*, int, long) (io.cpp:995)
==30374==    by 0xC255CA: partition_t::read(logrec_t*&, lsn_t&, int) (partition.cpp:699)
==30374==    by 0xBE142C: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:596)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC4892D: sdisk_unix_t::pread(void*, int, long, int&) (sdisk_unix.cpp:351)
==30374==    by 0xC474E9: sthread_t::pread(int, void*, int, long) (io.cpp:995)
==30374==    by 0xC255CA: partition_t::read(logrec_t*&, lsn_t&, int) (partition.cpp:699)
==30374==    by 0xBE142C: log_core::fetch(lsn_t&, logrec_t*&, lsn_t*) (log_core.cpp:596)
==30374==    by 0xBCF1CF: log_m::fetch(lsn_t&, logrec_t*&, lsn_t*) (log.cpp:319)
==30374==    by 0xBCE6AB: log_i::next(lsn_t&, logrec_t*&) (log.cpp:86)
==30374==    by 0xC0EB69: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:804)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC4892D: sdisk_unix_t::pread(void*, int, long, int&) (sdisk_unix.cpp:351)
==30374==    by 0xC474E9: sthread_t::pread(int, void*, int, long) (io.cpp:995)
==30374==    by 0xB55783: vol_t::read_page(unsigned int, page_s&) (vol.cpp:4081)
==30374==    by 0xB1FC82: io_m::read_page(lpid_t const&, page_s&) (sm_io.cpp:859)
==30374==    by 0xB72AAC: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2384)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC4892D: sdisk_unix_t::pread(void*, int, long, int&) (sdisk_unix.cpp:351)
==30374==    by 0xC474E9: sthread_t::pread(int, void*, int, long) (io.cpp:995)
==30374==    by 0xB55783: vol_t::read_page(unsigned int, page_s&) (vol.cpp:4081)
==30374==    by 0xB1FC82: io_m::read_page(lpid_t const&, page_s&) (sm_io.cpp:859)
==30374==    by 0xB72AAC: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2384)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB559BF: vol_t::read_page(unsigned int, page_s&) (vol.cpp:4107)
==30374==    by 0xB1FC82: io_m::read_page(lpid_t const&, page_s&) (sm_io.cpp:859)
==30374==    by 0xB72AAC: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2384)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB559BF: vol_t::read_page(unsigned int, page_s&) (vol.cpp:4107)
==30374==    by 0xB1FC82: io_m::read_page(lpid_t const&, page_s&) (sm_io.cpp:859)
==30374==    by 0xB72AAC: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2384)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xC0E792: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:923)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFDE1E: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1260)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFDE1E: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1260)
==30374==    by 0xBD490C: page_mark_t::undo(page_p*) (logrec.cpp:1106)
==30374==    by 0xBD4BD0: page_reclaim_log::redo(page_p*) (logrec.cpp:1155)
==30374==    by 0xBD197E: logrec_t::redo(page_p*) (redo_gen.cpp:127)
==30374==    by 0xC0EA02: restart_m::redo_pass(lsn_t, lsn_t const&, dirty_pages_tab_t&) (restart.cpp:983)
==30374==    by 0xC0C7FB: restart_m::recover(lsn_t) (restart.cpp:207)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xBD0DF0: log_m::flush_all(bool) (log.h:336)
==30374==    by 0xB737F2: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2853)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xBD0DF0: log_m::flush_all(bool) (log.h:336)
==30374==    by 0xB737F2: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2853)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #13
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB717F6: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:1937)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB717F6: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:1937)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x13C832C0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB79BB1: page_write_mutex_t::page_write_mutex_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB79311: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:89)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c832c0 is 0 bytes inside data symbol "_ZN18page_write_mutex_t16page_write_mutexE"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x13C832C0 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xB72834: bf_m::_write_out(page_s const*, unsigned int) (bf.cpp:2281)
==30374==    by 0xB71E4B: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2121)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x13C832C0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB79BB1: page_write_mutex_t::page_write_mutex_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB79311: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:89)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c832c0 is 0 bytes inside data symbol "_ZN18page_write_mutex_t16page_write_mutexE"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x13C832C0 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xB72834: bf_m::_write_out(page_s const*, unsigned int) (bf.cpp:2281)
==30374==    by 0xB71E4B: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2121)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x13C832C0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB79BB1: page_write_mutex_t::page_write_mutex_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB79311: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:89)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c832c0 is 0 bytes inside data symbol "_ZN18page_write_mutex_t16page_write_mutexE"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x13C832C0 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC489E1: sdisk_unix_t::pwrite(void const*, int, long, int&) (sdisk_unix.cpp:377)
==30374==    by 0xC476B4: sthread_t::pwrite(int, void const*, int, long) (io.cpp:1015)
==30374==    by 0xB55B0D: vol_t::write_many_pages(unsigned int, page_s const*, int) (vol.cpp:4147)
==30374==    by 0xB1FDCF: io_m::write_many_pages(page_s const*, int) (sm_io.cpp:917)
==30374==    by 0xB7288C: bf_m::_write_out(page_s const*, unsigned int) (bf.cpp:2284)
==30374==    by 0xB71E4B: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2121)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x13C832C0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB79BB1: page_write_mutex_t::page_write_mutex_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB79311: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:89)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c832c0 is 0 bytes inside data symbol "_ZN18page_write_mutex_t16page_write_mutexE"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x13C832C0 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC489E1: sdisk_unix_t::pwrite(void const*, int, long, int&) (sdisk_unix.cpp:377)
==30374==    by 0xC476B4: sthread_t::pwrite(int, void const*, int, long) (io.cpp:1015)
==30374==    by 0xB55B0D: vol_t::write_many_pages(unsigned int, page_s const*, int) (vol.cpp:4147)
==30374==    by 0xB1FDCF: io_m::write_many_pages(page_s const*, int) (sm_io.cpp:917)
==30374==    by 0xB7288C: bf_m::_write_out(page_s const*, unsigned int) (bf.cpp:2284)
==30374==    by 0xB71E4B: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2121)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB717F6: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:1937)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB717F6: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:1937)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB72462: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2190)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB72462: bf_m::_clean_segment(int, lpid_t*, page_s*, int, bool*) (bf.cpp:2190)
==30374==    by 0xB70C16: bf_m::_clean_buf(bf_page_writer_control_t*, int, lpid_t*, int, bool*) (bf.cpp:1817)
==30374==    by 0xB739D7: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2878)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6C21C: atomic_add_int (atomic_ops_builtin.h:92)
==30374==    by 0xB74952: void atomic_add_int_delta<int>(int volatile&, int) (atomic_templates.h:164)
==30374==    by 0xB73A47: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2880)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB78457: bf_core_m::_remove(bfcb_t*&) (bf_core.cpp:1462)
==30374==    by 0xB79B5E: bf_core_m::remove(bfcb_t*&) (bf_core.h:172)
==30374==    by 0xB73DDE: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3018)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB78457: bf_core_m::_remove(bfcb_t*&) (bf_core.cpp:1462)
==30374==    by 0xB79B5E: bf_core_m::remove(bfcb_t*&) (bf_core.h:172)
==30374==    by 0xB73DDE: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3018)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB73E3F: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3031)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB73E3F: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3031)
==30374==    by 0xB735C6: bf_m::force_all(bool) (bf.cpp:2693)
==30374==    by 0xC0C80F: restart_m::recover(lsn_t) (restart.cpp:221)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6F25E: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1027)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xB487B7: stnode_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB486DD: stnode_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB49693: stnode_i::get(unsigned int, stnode_t const*&) (vol.cpp:650)
==30374==    by 0xB497A8: stnode_i::get(unsigned int, stnode_t&) (vol.cpp:661)
==30374==    by 0xB4CB2B: vol_t::free_stores_during_recovery(smlevel_0::store_deleting_t) (vol.cpp:1649)
==30374==    by 0xB246EA: io_m::free_stores_during_recovery(smlevel_0::store_deleting_t) (sm_io.cpp:2730)
==30374==    by 0xC0C8CD: restart_m::recover(lsn_t) (restart.cpp:234)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB4982C: stnode_i::get(unsigned int, stnode_t&) (vol.cpp:664)
==30374==    by 0xB4CB2B: vol_t::free_stores_during_recovery(smlevel_0::store_deleting_t) (vol.cpp:1649)
==30374==    by 0xB246EA: io_m::free_stores_during_recovery(smlevel_0::store_deleting_t) (sm_io.cpp:2730)
==30374==    by 0xC0C8CD: restart_m::recover(lsn_t) (restart.cpp:234)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB4982C: stnode_i::get(unsigned int, stnode_t&) (vol.cpp:664)
==30374==    by 0xB4CB2B: vol_t::free_stores_during_recovery(smlevel_0::store_deleting_t) (vol.cpp:1649)
==30374==    by 0xB246EA: io_m::free_stores_during_recovery(smlevel_0::store_deleting_t) (sm_io.cpp:2730)
==30374==    by 0xC0C8CD: restart_m::recover(lsn_t) (restart.cpp:234)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB72B50: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2432)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xB487B7: stnode_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB486DD: stnode_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB49693: stnode_i::get(unsigned int, stnode_t const*&) (vol.cpp:650)
==30374==    by 0xB497A8: stnode_i::get(unsigned int, stnode_t&) (vol.cpp:661)
==30374==    by 0xB4CB2B: vol_t::free_stores_during_recovery(smlevel_0::store_deleting_t) (vol.cpp:1649)
==30374==    by 0xB246EA: io_m::free_stores_during_recovery(smlevel_0::store_deleting_t) (sm_io.cpp:2730)
==30374==    by 0xC0C8CD: restart_m::recover(lsn_t) (restart.cpp:234)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB72B50: bf_m::get_page(lpid_t const&, bfcb_t*, unsigned short, bool, bool) (bf.cpp:2432)
==30374==    by 0xB6F79A: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1226)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xB487B7: stnode_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB486DD: stnode_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:244)
==30374==    by 0xB49693: stnode_i::get(unsigned int, stnode_t const*&) (vol.cpp:650)
==30374==    by 0xB497A8: stnode_i::get(unsigned int, stnode_t&) (vol.cpp:661)
==30374==    by 0xB4CB2B: vol_t::free_stores_during_recovery(smlevel_0::store_deleting_t) (vol.cpp:1649)
==30374==    by 0xB246EA: io_m::free_stores_during_recovery(smlevel_0::store_deleting_t) (sm_io.cpp:2730)
==30374==    by 0xC0C8CD: restart_m::recover(lsn_t) (restart.cpp:234)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDAF50: log_comment (logstub_gen.cpp:47)
==30374==    by 0xC0ED56: restart_m::undo_pass() (restart.cpp:1123)
==30374==    by 0xC0C9F8: restart_m::recover(lsn_t) (restart.cpp:247)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDAF50: log_comment (logstub_gen.cpp:47)
==30374==    by 0xC0ED56: restart_m::undo_pass() (restart.cpp:1123)
==30374==    by 0xC0C9F8: restart_m::recover(lsn_t) (restart.cpp:247)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xAE2F59: atomic_add_int_nv (atomic_ops_builtin.h:253)
==30374==    by 0xAE5968: int atomic_inc_nv<int>(int volatile&) (atomic_templates.h:126)
==30374==    by 0xB73F5D: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3078)
==30374==    by 0xB6FE9D: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1523)
==30374==    by 0xB01F57: page_p::unfix_dirty() (page.h:778)
==30374==    by 0xB6642C: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2900)
==30374==    by 0xBDD8F2: log_page_mark (logstub_gen.cpp:326)
==30374==    by 0xAFD94B: page_p::mark_free(short) (page.cpp:1105)
==30374==    by 0xBD4819: page_mark_t::redo(page_p*) (logrec.cpp:1097)
==30374==    by 0xBD4C02: page_reclaim_log::undo(page_p*) (logrec.cpp:1163)
==30374==    by 0xBD24DF: logrec_t::undo(page_p*) (undo_gen.cpp:127)
==30374==    by 0xB671F3: xct_t::rollback(lsn_t const&) (xct.cpp:3280)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6F25E: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1027)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBA2052: btree_impl::_traverse(lpid_t const&, lpid_t const&, lsn_t const&, cvec_t const&, cvec_t const&, bool&, latch_mode_t, btree_p&, btree_p&, lsn_t&, lsn_t&, bool) (btree_impl.cpp:5547)
==30374==    by 0xB990DA: btree_impl::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, bool) (btree_impl.cpp:3152)
==30374==    by 0xB87927: btree_m::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&) (btree.cpp:1845)
==30374==    by 0xBD6114: btree_insert_log::undo(page_p*) (logrec.cpp:1719)
==30374==    by 0xBD25D0: logrec_t::undo(page_p*) (undo_gen.cpp:148)
==30374==    by 0xB671F3: xct_t::rollback(lsn_t const&) (xct.cpp:3280)
==30374==    by 0xB64CB7: xct_t::_abort() (xct.cpp:2333)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDD522: log_page_remove (logstub_gen.cpp:298)
==30374==    by 0xAFE5D6: page_p::remove_compress(short, int) (page.cpp:1534)
==30374==    by 0xBC7FF2: zkeyed_p::remove(short, bool) (zkeyed.cpp:1069)
==30374==    by 0xB9A68A: btree_impl::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, bool) (btree_impl.cpp:3595)
==30374==    by 0xB87927: btree_m::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&) (btree.cpp:1845)
==30374==    by 0xBD6114: btree_insert_log::undo(page_p*) (logrec.cpp:1719)
==30374==    by 0xBD25D0: logrec_t::undo(page_p*) (undo_gen.cpp:148)
==30374==    by 0xB671F3: xct_t::rollback(lsn_t const&) (xct.cpp:3280)
==30374==    by 0xB64CB7: xct_t::_abort() (xct.cpp:2333)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB74036: bf_m::set_dirty(page_s const*) (bf.cpp:3117)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDD522: log_page_remove (logstub_gen.cpp:298)
==30374==    by 0xAFE5D6: page_p::remove_compress(short, int) (page.cpp:1534)
==30374==    by 0xBC7FF2: zkeyed_p::remove(short, bool) (zkeyed.cpp:1069)
==30374==    by 0xB9A68A: btree_impl::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, bool) (btree_impl.cpp:3595)
==30374==    by 0xB87927: btree_m::_remove(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&) (btree.cpp:1845)
==30374==    by 0xBD6114: btree_insert_log::undo(page_p*) (logrec.cpp:1719)
==30374==    by 0xBD25D0: logrec_t::undo(page_p*) (undo_gen.cpp:148)
==30374==    by 0xB671F3: xct_t::rollback(lsn_t const&) (xct.cpp:3280)
==30374==    by 0xB64CB7: xct_t::_abort() (xct.cpp:2333)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #12 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xBEC1A2: flush_daemon_thread_t::flush_daemon_thread_t(log_core*) (log_core.cpp:924)
==30374==    by 0xBE32F2: log_core::log_core(long, bool) (log_core.cpp:1137)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xB6717B: xct_t::rollback(lsn_t const&) (xct.cpp:3271)
==30374==    by 0xB64CB7: xct_t::_abort() (xct.cpp:2333)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xAFD754: page_p::fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:959)
==30374==    by 0xB6717B: xct_t::rollback(lsn_t const&) (xct.cpp:3271)
==30374==    by 0xB64CB7: xct_t::_abort() (xct.cpp:2333)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xB65A0A: xct_t::_sync_logbuf(bool) (xct.cpp:2610)
==30374==    by 0xB64DE3: xct_t::_abort() (xct.cpp:2360)
==30374==    by 0xB602CF: xct_t::abort(bool) (xct.cpp:791)
==30374==    by 0xC0EFF8: restart_m::undo_pass() (restart.cpp:1200)
==30374==    by 0xC0C9F8: restart_m::recover(lsn_t) (restart.cpp:247)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE95AC: log_core::flush(lsn_t, bool) (log_core.cpp:2895)
==30374==    by 0xB65A0A: xct_t::_sync_logbuf(bool) (xct.cpp:2610)
==30374==    by 0xB64DE3: xct_t::_abort() (xct.cpp:2360)
==30374==    by 0xB602CF: xct_t::abort(bool) (xct.cpp:791)
==30374==    by 0xC0EFF8: restart_m::undo_pass() (restart.cpp:1200)
==30374==    by 0xC0C9F8: restart_m::recover(lsn_t) (restart.cpp:247)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6F25E: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1027)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xB48211: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374==    by 0xB48C24: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:445)
==30374==    by 0xB50150: vol_t::free_ext_after_xct(unsigned int, unsigned int&) (vol.cpp:2665)
==30374==    by 0xB4CDCB: vol_t::free_exts_during_recovery() (vol.cpp:1684)
==30374==    by 0xB247D6: io_m::free_exts_during_recovery() (sm_io.cpp:2748)
==30374==    by 0xC0CAF7: restart_m::recover(lsn_t) (restart.cpp:260)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48CA7: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:448)
==30374==    by 0xB50150: vol_t::free_ext_after_xct(unsigned int, unsigned int&) (vol.cpp:2665)
==30374==    by 0xB4CDCB: vol_t::free_exts_during_recovery() (vol.cpp:1684)
==30374==    by 0xB247D6: io_m::free_exts_during_recovery() (sm_io.cpp:2748)
==30374==    by 0xC0CAF7: restart_m::recover(lsn_t) (restart.cpp:260)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48CA7: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:448)
==30374==    by 0xB50150: vol_t::free_ext_after_xct(unsigned int, unsigned int&) (vol.cpp:2665)
==30374==    by 0xB4CDCB: vol_t::free_exts_during_recovery() (vol.cpp:1684)
==30374==    by 0xB247D6: io_m::free_exts_during_recovery() (sm_io.cpp:2748)
==30374==    by 0xC0CAF7: restart_m::recover(lsn_t) (restart.cpp:260)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFD5E1: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:926)
==30374==    by 0xB48211: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374==    by 0xB48C24: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:445)
==30374==    by 0xB50150: vol_t::free_ext_after_xct(unsigned int, unsigned int&) (vol.cpp:2665)
==30374==    by 0xB4CDCB: vol_t::free_exts_during_recovery() (vol.cpp:1684)
==30374==    by 0xB247D6: io_m::free_exts_during_recovery() (sm_io.cpp:2748)
==30374==    by 0xC0CAF7: restart_m::recover(lsn_t) (restart.cpp:260)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFD5E1: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:926)
==30374==    by 0xB48211: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374==    by 0xB48C24: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:445)
==30374==    by 0xB50150: vol_t::free_ext_after_xct(unsigned int, unsigned int&) (vol.cpp:2665)
==30374==    by 0xB4CDCB: vol_t::free_exts_during_recovery() (vol.cpp:1684)
==30374==    by 0xB247D6: io_m::free_exts_during_recovery() (sm_io.cpp:2748)
==30374==    by 0xC0CAF7: restart_m::recover(lsn_t) (restart.cpp:260)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1EBF2: io_m::get_vols(int, int, char**, vid_t*, int&) (sm_io.cpp:548)
==30374==    by 0xB0DEF8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:952)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1EBF2: io_m::get_vols(int, int, char**, vid_t*, int&) (sm_io.cpp:548)
==30374==    by 0xB0DEF8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:952)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48879: sdisk_unix_t::writev(sdisk_base_t::iovec_t const*, int, int&) (sdisk_unix.cpp:332)
==30374==    by 0xC47318: sthread_t::writev(int, sdisk_base_t::iovec_t const*, unsigned long) (io.cpp:975)
==30374==    by 0xC248BD: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:317)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1EBF2: io_m::get_vols(int, int, char**, vid_t*, int&) (sm_io.cpp:548)
==30374==    by 0xB0DEF8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:952)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48879: sdisk_unix_t::writev(sdisk_base_t::iovec_t const*, int, int&) (sdisk_unix.cpp:332)
==30374==    by 0xC47318: sthread_t::writev(int, sdisk_base_t::iovec_t const*, unsigned long) (io.cpp:975)
==30374==    by 0xC248BD: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:317)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1EBF2: io_m::get_vols(int, int, char**, vid_t*, int&) (sm_io.cpp:548)
==30374==    by 0xB0DEF8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:952)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6C21C: atomic_add_int (atomic_ops_builtin.h:92)
==30374==    by 0xB74952: void atomic_add_int_delta<int>(int volatile&, int) (atomic_templates.h:164)
==30374==    by 0xB73A47: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2880)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB776E8: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:911)
==30374==    by 0xB73B88: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2934)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB73E3F: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3031)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB73E3F: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:3031)
==30374==    by 0xB736B5: bf_m::force_volume(vid_t, bool) (bf.cpp:2728)
==30374==    by 0xB4B16C: vol_t::dismount(bool) (vol.cpp:1129)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x13C83260 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB74907: __static_initialization_and_destruction_0(int, int) (bf.cpp:821)
==30374==    by 0xB74930: _GLOBAL__sub_I__ZN6bfcb_t14set_storeflagsEj (bf.cpp:3366)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c83260 is 0 bytes inside data symbol "_ZN4bf_m27_cleaner_threads_list_mutexE"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCD1108 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB6CB1F: bf_cleaner_thread_t::bf_cleaner_thread_t(vid_t) (bf.cpp:516)
==30374==    by 0xB72C7F: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xC0D829: restart_m::analysis_pass(lsn_t, dirty_pages_tab_t&, lsn_t&, bool&) (restart.cpp:510)
==30374==    by 0xC0C69D: restart_m::recover(lsn_t) (restart.cpp:170)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==  Address 0x23fcd1108 is 25,784 bytes inside a block of size 25,896 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB72C6E: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xC0D829: restart_m::analysis_pass(lsn_t, dirty_pages_tab_t&, lsn_t&, bool&) (restart.cpp:510)
==30374==    by 0xC0C69D: restart_m::recover(lsn_t) (restart.cpp:170)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 1 at 0x23FCD1037 by thread #3
==30374== Locks held: 4, at addresses 0x13C82120 0x13C83260 0x23FCAFC30 0x23FCD1108
==30374==    at 0xB6D737: bf_cleaner_thread_t::retire() (bf.cpp:567)
==30374==    by 0xB72F40: bf_m::disable_background_flushing(vid_t) (bf.cpp:2531)
==30374==    by 0xB4B2DA: vol_t::dismount(bool) (vol.cpp:1132)
==30374==    by 0xB1F299: io_m::_dismount(vid_t, bool) (sm_io.cpp:669)
==30374==    by 0xB1E1E2: io_m::_dismount_all(bool) (sm_io.cpp:315)
==30374==    by 0xB254C9: io_m::dismount_all(bool) (sm_io.h:695)
==30374==    by 0xB0DF5F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:956)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous read of size 1 by thread #13
==30374== Locks held: 1, at address 0x23FCD1108
==30374==    at 0xB6DE8B: bf_cleaner_thread_t::run() (bf.cpp:656)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x23fcd1037 is 25,575 bytes inside a block of size 25,896 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB72C6E: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xC0D829: restart_m::analysis_pass(lsn_t, dirty_pages_tab_t&, lsn_t&, bool&) (restart.cpp:510)
==30374==    by 0xC0C69D: restart_m::recover(lsn_t) (restart.cpp:170)
==30374==    by 0xB0DC9A: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:930)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #18 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB6C81C: bf_cleaner_thread_t::bf_cleaner_thread_t(vid_t) (bf.cpp:509)
==30374==    by 0xB72C7F: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48C37: sdisk_unix_t::sync() (sdisk_unix.cpp:430)
==30374==    by 0xC4785F: sthread_t::fsync(int) (io.cpp:1032)
==30374==    by 0xC2678C: partition_t::flush(int) (partition.cpp:1056)
==30374==    by 0xC24BC1: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:349)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48C37: sdisk_unix_t::sync() (sdisk_unix.cpp:430)
==30374==    by 0xC4785F: sthread_t::fsync(int) (io.cpp:1032)
==30374==    by 0xC2678C: partition_t::flush(int) (partition.cpp:1056)
==30374==    by 0xC24BC1: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:349)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xB6C21C: atomic_add_int (atomic_ops_builtin.h:92)
==30374==    by 0xB74952: void atomic_add_int_delta<int>(int volatile&, int) (atomic_templates.h:164)
==30374==    by 0xB73A47: bf_m::_scan(bf_filter_t const&, bool, bool) (bf.cpp:2880)
==30374==    by 0xB7372D: bf_m::force_until_lsn(lsn_t const&, bool) (bf.cpp:2752)
==30374==    by 0xBAFF2B: chkpt_m::take() (chkpt.cpp:388)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE8E0B: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2861)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xBB0051: chkpt_m::take() (chkpt.cpp:407)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE8E0B: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2861)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xBB0051: chkpt_m::take() (chkpt.cpp:407)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB7326B: bf_m::get_rec_lsn(int&, int&, lpid_t*, lsn_t*, lsn_t&) (bf.cpp:2589)
==30374==    by 0xBB0269: chkpt_m::take() (chkpt.cpp:443)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB7326B: bf_m::get_rec_lsn(int&, int&, lpid_t*, lsn_t*, lsn_t&) (bf.cpp:2589)
==30374==    by 0xBB0269: chkpt_m::take() (chkpt.cpp:443)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE8E0B: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2861)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xBB07EC: chkpt_m::take() (chkpt.cpp:495)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE8E0B: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2861)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xBB07EC: chkpt_m::take() (chkpt.cpp:495)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #18
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== 
==30374== More than 100 errors detected.  Subsequent errors
==30374== will still be recorded, but in less detail than before.
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE004E: log_core::scavenge(lsn_t, lsn_t) (log_core.cpp:292)
==30374==    by 0xBCF15E: log_m::scavenge(lsn_t, lsn_t) (log.cpp:311)
==30374==    by 0xBB133D: chkpt_m::take() (chkpt.cpp:650)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCF2748 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xBCEDEE: log_m::log_m() (log.cpp:245)
==30374==    by 0xBE260F: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x23fcf2748 is 8 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 3, at addresses 0x13C82120 0x23FCAFC30 0x23FCF2748
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBE004E: log_core::scavenge(lsn_t, lsn_t) (log_core.cpp:292)
==30374==    by 0xBCF15E: log_m::scavenge(lsn_t, lsn_t) (log.cpp:311)
==30374==    by 0xBB133D: chkpt_m::take() (chkpt.cpp:650)
==30374==    by 0xB15243: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2722)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB15254: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2724)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB15254: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2724)
==30374==    by 0xB0E01D: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:964)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFADEC: bucket_t::lock_x::acquire() (lock_core.cpp:185)
==30374==    by 0xAF46A3: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1146)
==30374==    by 0xAEFF18: lock_m::query(lockid_t const&, w_base_t::lock_mode_t&, tid_t const&, bool, bool) (lock.cpp:234)
==30374==    by 0xADC6B5: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:136)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFADEC: bucket_t::lock_x::acquire() (lock_core.cpp:185)
==30374==    by 0xAF46A3: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1146)
==30374==    by 0xAEFF18: lock_m::query(lockid_t const&, w_base_t::lock_mode_t&, tid_t const&, bool, bool) (lock.cpp:234)
==30374==    by 0xADC6B5: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:136)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB605AE: xct_t::query_prepared(int&) (xct.cpp:869)
==30374==    by 0xADCFA1: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:224)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB605AE: xct_t::query_prepared(int&) (xct.cpp:869)
==30374==    by 0xADCFA1: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:224)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB86CC1: btree_m::_scramble_key(cvec_t*&, cvec_t const&, int, key_type_s const*, bool) (btree.cpp:1584)
==30374==    by 0xB846C7: btree_m::fetch_init(bt_cursor_t&, lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, smlevel_0::cmp_t, smlevel_0::cmp_t, cvec_t const&, w_base_t::lock_mode_t, bool) (btree.cpp:1007)
==30374==    by 0xADD0D7: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:231)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB86CC1: btree_m::_scramble_key(cvec_t*&, cvec_t const&, int, key_type_s const*, bool) (btree.cpp:1584)
==30374==    by 0xB846C7: btree_m::fetch_init(bt_cursor_t&, lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, smlevel_0::cmp_t, smlevel_0::cmp_t, cvec_t const&, w_base_t::lock_mode_t, bool) (btree.cpp:1007)
==30374==    by 0xADD0D7: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:231)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB683A4: xct_t::ConvertAllLoadStoresToRegularStores() (xct.cpp:3550)
==30374==    by 0xB643DD: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2151)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB69DA1: xct_auto_abort_t::commit() (xct.h:795)
==30374==    by 0xADD8E0: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:340)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C82120 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC43882: w_pthread_lock_t::w_pthread_lock_t() (sthread.h:426)
==30374==    by 0xB19874: __static_initialization_and_destruction_0(int, int) (sm.cpp:604)
==30374==    by 0xB1989D: _GLOBAL__sub_I__ZN13prologue_rc_tC2ENS_11xct_state_tENS_16xct_constraint_tEi (sm.cpp:3586)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c82120 is 0 bytes inside data symbol "_ZL14ssm_once_mutex"
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 2, at addresses 0x13C82120 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB683A4: xct_t::ConvertAllLoadStoresToRegularStores() (xct.cpp:3550)
==30374==    by 0xB643DD: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2151)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB69DA1: xct_auto_abort_t::commit() (xct.h:795)
==30374==    by 0xADD8E0: dir_vol_m::_destroy_temps(vid_t) (dir.cpp:340)
==30374==    by 0xADC76A: dir_vol_m::_dismount(vid_t, bool, bool) (dir.cpp:142)
==30374==    by 0xAE1024: dir_vol_m::dismount(vid_t, bool, bool) (dir.h:184)
==30374==    by 0xAE13CB: dir_m::dismount(vid_t, bool, bool) (dir.h:237)
==30374==    by 0xB154C4: ss_m::_dismount_dev(char const*, bool) (sm.cpp:2753)
==30374==    by 0xB0E0F8: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:971)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #34 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xB6C81C: bf_cleaner_thread_t::bf_cleaner_thread_t(vid_t) (bf.cpp:509)
==30374==    by 0xB72C7F: bf_m::enable_background_flushing(vid_t) (bf.cpp:2472)
==30374==    by 0xB4AF65: vol_t::mount(char const*, vid_t) (vol.cpp:1102)
==30374==    by 0xB1EE11: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:602)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 1, at address 0x23FCAFC30
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1F68F: io_m::disable_fake_disk_latency(vid_t) (sm_io.cpp:725)
==30374==    by 0xB183A3: ss_m::disable_fake_disk_latency(vid_t) (sm.cpp:3161)
==30374==    by 0xAAC77E: shore::ShoreEnv::start_sm() (shore_env.cpp:899)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #34
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC30 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA980E: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc30 is 32 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: 1, at address 0x23FCAFC30
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1F68F: io_m::disable_fake_disk_latency(vid_t) (sm_io.cpp:725)
==30374==    by 0xB183A3: ss_m::disable_fake_disk_latency(vid_t) (sm.cpp:3161)
==30374==    by 0xAAC77E: shore::ShoreEnv::start_sm() (shore_env.cpp:899)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #34
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA88E: xct_lock_info_t::lock_x::acquire() (lock_x.h:463)
==30374==    by 0xAF3946: xct_lock_info_t::~xct_lock_info_t() (lock_core.cpp:439)
==30374==    by 0xB6A4B2: lock_info_ptr::~lock_info_ptr() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB6AB05: tls_tricks::tls_blob<lock_info_ptr>::fini() (tls.h:125)
==30374==    by 0xB6A520: agent_lock_info_tls_wrapper::fini() (xct.cpp:1405)
==30374==    by 0xC5A7B3: tls_tricks::tls_manager::thread_fini() (tls.cpp:88)
==30374==    by 0xC400E5: sthread_t::_start() (sthread.cpp:850)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #34
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #3
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA88E: xct_lock_info_t::lock_x::acquire() (lock_x.h:463)
==30374==    by 0xAF3946: xct_lock_info_t::~xct_lock_info_t() (lock_core.cpp:439)
==30374==    by 0xB6A4B2: lock_info_ptr::~lock_info_ptr() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB6AB05: tls_tricks::tls_blob<lock_info_ptr>::fini() (tls.h:125)
==30374==    by 0xB6A520: agent_lock_info_tls_wrapper::fini() (xct.cpp:1405)
==30374==    by 0xC5A7B3: tls_tricks::tls_manager::thread_fini() (tls.cpp:88)
==30374==    by 0xC400E5: sthread_t::_start() (sthread.cpp:850)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #34
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0xB6DA5E: bf_cleaner_thread_t::run() (bf.cpp:621)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #40 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x82C49A: shore::base_worker_t::base_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_worker.h:200)
==30374==    by 0xAB7E41: shore::trx_worker_t::trx_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_trx_worker.cpp:50)
==30374==    by 0xAAB255: shore::ShoreEnv::start() (shore_env.cpp:509)
==30374==    by 0x842875: tpcc::ShoreTPCCEnv::start() (shore_tpcc_env.cpp:502)
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #39 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x82C49A: shore::base_worker_t::base_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_worker.h:200)
==30374==    by 0xAB7E41: shore::trx_worker_t::trx_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_trx_worker.cpp:50)
==30374==    by 0xAAB255: shore::ShoreEnv::start() (shore_env.cpp:509)
==30374==    by 0x842875: tpcc::ShoreTPCCEnv::start() (shore_tpcc_env.cpp:502)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 1 at 0x13C7B8C8 by thread #40
==30374== Locks held: none
==30374==    at 0xAF328D: lock_m::set_sli_enabled(bool) (lock_core.cpp:293)
==30374==    by 0xB136BB: ss_m::set_sli_enabled(bool) (sm.cpp:2280)
==30374==    by 0xAB6194: shore::base_worker_t::work() (shore_worker.cpp:256)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #39
==30374== Locks held: none
==30374==    at 0xAF328D: lock_m::set_sli_enabled(bool) (lock_core.cpp:293)
==30374==    by 0xB136BB: ss_m::set_sli_enabled(bool) (sm.cpp:2280)
==30374==    by 0xAB6194: shore::base_worker_t::work() (shore_worker.cpp:256)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==  Address 0x13c7b8c8 is 0 bytes inside data symbol "_ZL18global_sli_enabled"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #49 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x84697A: tpcc::ShoreTPCCEnv::table_creator_t::table_creator_t(tpcc::ShoreTPCCEnv*, int) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x8429BA: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:547)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #48 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x82C49A: shore::base_worker_t::base_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_worker.h:200)
==30374==    by 0xAB7E41: shore::trx_worker_t::trx_worker_t(shore::ShoreEnv*, c_str, int, int) (shore_trx_worker.cpp:50)
==30374==    by 0xAAB255: shore::ShoreEnv::start() (shore_env.cpp:509)
==30374==    by 0x842875: tpcc::ShoreTPCCEnv::start() (shore_tpcc_env.cpp:502)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x13C7B8C8 by thread #49
==30374== Locks held: none
==30374==    at 0xAF3350: xct_lock_info_t::xct_lock_info_t() (lock_core.cpp:309)
==30374==    by 0xB6A455: lock_info_ptr::swap(xct_lock_info_t*&) (xct.cpp:1398)
==30374==    by 0xB62460: xct_t::xct_core::init(tid_t const&, smlevel_1::xct_state_t, int) (xct.cpp:1485)
==30374==    by 0xB6B255: xct_t::xct_core* object_cache_initializing_factory<xct_t::xct_core>::init<tid_t, smlevel_1::xct_state_t, int>(xct_t::xct_core*, tid_t, smlevel_1::xct_state_t, int) (block_alloc.h:277)
==30374==    by 0xB6A90F: xct_t::xct_core* object_cache<xct_t::xct_core, object_cache_initializing_factory<xct_t::xct_core>, 0ul>::acquire<tid_t, smlevel_1::xct_state_t, int>(tid_t, smlevel_1::xct_state_t, int) (block_alloc.h:300)
==30374==    by 0xB5FC5B: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:571)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x83F750: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:115)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #48
==30374== Locks held: none
==30374==    at 0xAF328D: lock_m::set_sli_enabled(bool) (lock_core.cpp:293)
==30374==    by 0xB136BB: ss_m::set_sli_enabled(bool) (sm.cpp:2280)
==30374==    by 0xAB6194: shore::base_worker_t::work() (shore_worker.cpp:256)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==  Address 0x13c7b8c8 is 0 bytes inside data symbol "_ZL18global_sli_enabled"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #1 is the program's root thread
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB13FF4: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2443)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x83F750: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:115)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB13FF4: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2443)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x83F750: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:115)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x13C83248 by thread #49
==30374== Locks held: none
==30374==    at 0xB6F25E: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1027)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB48BB: file_m::create(stid_t, lpid_t&) (file.cpp:174)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #34
==30374== Locks held: none
==30374==    at 0xB6DC66: bf_cleaner_thread_t::run() (bf.cpp:645)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x13c83248 is 0 bytes inside data symbol "_ZN19bf_cleaner_thread_t7_ndirtyE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADE71D: dir_vol_m::_find_root(vid_t, int&) (dir.cpp:446)
==30374==    by 0xADCAEA: dir_vol_m::_insert(stid_t const&, sinfo_s const&) (dir.cpp:178)
==30374==    by 0xAE1138: dir_vol_m::insert(stid_t const&, sinfo_s const&) (dir.h:198)
==30374==    by 0xADE76A: dir_m::insert(stid_t const&, sinfo_s const&) (dir.cpp:452)
==30374==    by 0xB2B7B6: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:895)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADE71D: dir_vol_m::_find_root(vid_t, int&) (dir.cpp:446)
==30374==    by 0xADCAEA: dir_vol_m::_insert(stid_t const&, sinfo_s const&) (dir.cpp:178)
==30374==    by 0xAE1138: dir_vol_m::insert(stid_t const&, sinfo_s const&) (dir.h:198)
==30374==    by 0xADE76A: dir_m::insert(stid_t const&, sinfo_s const&) (dir.cpp:452)
==30374==    by 0xB2B7B6: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:895)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADE835: dir_m::insert(stid_t const&, sinfo_s const&) (dir.cpp:461)
==30374==    by 0xB2B7B6: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:895)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADE835: dir_m::insert(stid_t const&, sinfo_s const&) (dir.cpp:461)
==30374==    by 0xB2B7B6: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:895)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB619F1: xct_log_warn_check_t::check(xct_t*&) (xct.cpp:1388)
==30374==    by 0xB0A85D: prologue_rc_t::prologue_rc_t(prologue_rc_t::xct_state_t, prologue_rc_t::xct_constraint_t, int) (prologue.h:279)
==30374==    by 0xB2DCA3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:265)
==30374==    by 0xA97A29: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:135)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB619F1: xct_log_warn_check_t::check(xct_t*&) (xct.cpp:1388)
==30374==    by 0xB0A85D: prologue_rc_t::prologue_rc_t(prologue_rc_t::xct_state_t, prologue_rc_t::xct_constraint_t, int) (prologue.h:279)
==30374==    by 0xB2DCA3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:265)
==30374==    by 0xA97A29: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:135)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xA98A39: shore::table_desc_t::create_physical_index(ss_m*, shore::index_desc_t*) (shore_table.cpp:306)
==30374==    by 0xA97ADF: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:144)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xA98A39: shore::table_desc_t::create_physical_index(ss_m*, shore::index_desc_t*) (shore_table.cpp:306)
==30374==    by 0xA97ADF: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:144)
==30374==    by 0x83F7FA: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:116)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFAA2E: lock_head_t::my_lock::release() (lock_x.h:603)
==30374==    by 0xAF5900: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1739)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4DDB9: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2043)
==30374==    by 0xB225ED: io_m::_create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2229)
==30374==    by 0xB22398: io_m::create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2180)
==30374==    by 0xB36AC4: ss_m::_create_index(vid_t, smlevel_0::ndx_t, smlevel_3::sm_store_property_t, char const*, smlevel_0::concurrency_t, stid_t&) (smindex.cpp:1788)
==30374==    by 0xB2CF71: ss_m::create_index(vid_t, smlevel_0::ndx_t, smlevel_3::sm_store_property_t, char const*, smlevel_0::concurrency_t, stid_t&) (smindex.cpp:113)
==30374==    by 0xA984EF: shore::table_desc_t::create_physical_index(ss_m*, shore::index_desc_t*) (shore_table.cpp:263)
==30374==    by 0xA97ADF: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:144)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFAA2E: lock_head_t::my_lock::release() (lock_x.h:603)
==30374==    by 0xAF5900: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1739)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4DDB9: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2043)
==30374==    by 0xB225ED: io_m::_create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2229)
==30374==    by 0xB22398: io_m::create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2180)
==30374==    by 0xB36AC4: ss_m::_create_index(vid_t, smlevel_0::ndx_t, smlevel_3::sm_store_property_t, char const*, smlevel_0::concurrency_t, stid_t&) (smindex.cpp:1788)
==30374==    by 0xB2CF71: ss_m::create_index(vid_t, smlevel_0::ndx_t, smlevel_3::sm_store_property_t, char const*, smlevel_0::concurrency_t, stid_t&) (smindex.cpp:113)
==30374==    by 0xA984EF: shore::table_desc_t::create_physical_index(ss_m*, shore::index_desc_t*) (shore_table.cpp:263)
==30374==    by 0xA97ADF: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:144)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x8429F0: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:548)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA9E9: lock_head_t::my_lock::acquire() (lock_x.h:596)
==30374==    by 0xAF6723: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2163)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x83FCC2: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:125)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA9E9: lock_head_t::my_lock::acquire() (lock_x.h:596)
==30374==    by 0xAF6723: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2163)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x83FCC2: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:125)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB14761: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2510)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x83FCC2: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:125)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB14761: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2510)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x83FCC2: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:125)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x13C7B8C8 by thread #49
==30374== Locks held: none
==30374==    at 0xAF377A: xct_lock_info_t::init(tid_t const&, lockid_t::name_space_t) (lock_core.cpp:397)
==30374==    by 0xB62501: xct_t::xct_core::init(tid_t const&, smlevel_1::xct_state_t, int) (xct.cpp:1497)
==30374==    by 0xB6B255: xct_t::xct_core* object_cache_initializing_factory<xct_t::xct_core>::init<tid_t, smlevel_1::xct_state_t, int>(xct_t::xct_core*, tid_t, smlevel_1::xct_state_t, int) (block_alloc.h:277)
==30374==    by 0xB6A90F: xct_t::xct_core* object_cache<xct_t::xct_core, object_cache_initializing_factory<xct_t::xct_core>, 0ul>::acquire<tid_t, smlevel_1::xct_state_t, int>(tid_t, smlevel_1::xct_state_t, int) (block_alloc.h:300)
==30374==    by 0xB5FC5B: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:571)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x83FE82: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:142)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #48
==30374== Locks held: none
==30374==    at 0xAF328D: lock_m::set_sli_enabled(bool) (lock_core.cpp:293)
==30374==    by 0xB136BB: ss_m::set_sli_enabled(bool) (sm.cpp:2280)
==30374==    by 0xAB6194: shore::base_worker_t::work() (shore_worker.cpp:256)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==  Address 0x13c7b8c8 is 0 bytes inside data symbol "_ZL18global_sli_enabled"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFAE32: bucket_t::lock_x::release() (lock_core.cpp:185)
==30374==    by 0xAF47BB: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1156)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x86472E: tpcc::ShoreTPCCEnv::xct_populate_baseline(int, tpcc::populate_baseline_input_t&) (shore_tpcc_xct.cpp:389)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #49
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFAE32: bucket_t::lock_x::release() (lock_core.cpp:185)
==30374==    by 0xAF47BB: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1156)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x86472E: tpcc::ShoreTPCCEnv::xct_populate_baseline(int, tpcc::populate_baseline_input_t&) (shore_tpcc_xct.cpp:389)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #51 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x8468C7: tpcc::ShoreTPCCEnv::table_builder_t::table_builder_t(tpcc::ShoreTPCCEnv*, int, long, long, int*) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x842CDF: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0x840444: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:176)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0x840444: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:176)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA8D4: xct_lock_info_t::lock_x::release() (lock_x.h:463)
==30374==    by 0xAF1BC8: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:842)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFA8D4: xct_lock_info_t::lock_x::release() (lock_x.h:463)
==30374==    by 0xAF1BC8: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:842)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDE483: log_page_set_byte (logstub_gen.cpp:404)
==30374==    by 0xAFE7FC: page_p::set_byte(short, unsigned char, page_p::logical_operation) (page.cpp:1592)
==30374==    by 0xB5A5F0: extlink_p::set_bytes(short, unsigned int, unsigned int, unsigned char const*, page_p::logical_operation) (vol.cpp:176)
==30374==    by 0xB5A719: extlink_i::update_pmap(unsigned int, Pmap const&, page_p::logical_operation) (vol.cpp:318)
==30374==    by 0xB4902A: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:546)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDE483: log_page_set_byte (logstub_gen.cpp:404)
==30374==    by 0xAFE7FC: page_p::set_byte(short, unsigned char, page_p::logical_operation) (page.cpp:1592)
==30374==    by 0xB5A5F0: extlink_p::set_bytes(short, unsigned int, unsigned int, unsigned char const*, page_p::logical_operation) (vol.cpp:176)
==30374==    by 0xB5A719: extlink_i::update_pmap(unsigned int, Pmap const&, page_p::logical_operation) (vol.cpp:318)
==30374==    by 0xB4902A: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:546)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB77C16: bf_core_m::pin(bfcb_t*, latch_mode_t) (bf_core.cpp:1163)
==30374==    by 0xB6FAC3: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1339)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB77C16: bf_core_m::pin(bfcb_t*, latch_mode_t) (bf_core.cpp:1163)
==30374==    by 0xB6FAC3: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1339)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB6FB4B: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1346)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB6FB4B: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1346)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB00819: page_p::_copy(page_p const&) (page.cpp:2536)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB00819: page_p::_copy(page_p const&) (page.cpp:2536)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDC4E0: log_alloc_pages_in_ext (logstub_gen.cpp:189)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDC4E0: log_alloc_pages_in_ext (logstub_gen.cpp:189)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB65940: xct_t::_flush_logbuf() (xct.cpp:2594)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC83AE: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1147)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB65940: xct_t::_flush_logbuf() (xct.cpp:2594)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC83AE: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1147)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xB9E7A3: btree_impl::_grow_tree(btree_p&, bool) (btree_impl.cpp:4730)
==30374==    by 0xB9EF35: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4828)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB66245: xct_t::get_logbuf(logrec_t*&, page_p const*) (xct.cpp:2825)
==30374==    by 0xBDDED5: log_page_splice (logstub_gen.cpp:369)
==30374==    by 0xAFEDD9: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1777)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB66245: xct_t::get_logbuf(logrec_t*&, page_p const*) (xct.cpp:2825)
==30374==    by 0xBDDED5: log_page_splice (logstub_gen.cpp:369)
==30374==    by 0xAFEDD9: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1777)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFF350: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1922)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFF350: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1922)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBC63B7: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:278)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCAFC60 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xACB408: thread_mutex_create(pthread_mutexattr_t const*) (thread.cpp:246)
==30374==    by 0xAA982B: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:102)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafc60 is 80 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374==  Lock at 0x23FCAFDF8 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xAA9ABD: shore::ShoreEnv::ShoreEnv() (shore_env.cpp:107)
==30374==    by 0x840BBE: tpcc::ShoreTPCCEnv::ShoreTPCCEnv() (shore_tpcc_env.cpp:235)
==30374==    by 0x78DE4A: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Address 0x23fcafdf8 is 488 bytes inside a block of size 3,328 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x78DE3F: kit_t<tpcc::baseline_tpcc_client_t, tpcc::ShoreTPCCEnv>::inst_test_env(int, char**) (shore_kits.cpp:244)
==30374==    by 0x77D14C: main (shore_kits.cpp:870)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBC63B7: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:278)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xBAA6C3: btree_p::_clr_flag(btree_p::flag_t, bool) (btree_p.cpp:496)
==30374==    by 0xBACFE3: btree_p::clr_smo(bool) (btree_p.h:153)
==30374==    by 0xBA0A14: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5232)
==30374==    by 0xB9EFF4: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4842)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #1
==30374== Locks held: 2, at addresses 0x23FCAFC60 0x23FCAFDF8
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC3E641: sthread_t::fork() (sthread.cpp:521)
==30374==    by 0x842D45: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:570)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #52 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x8468C7: tpcc::ShoreTPCCEnv::table_builder_t::table_builder_t(tpcc::ShoreTPCCEnv*, int, long, long, int*) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x842CDF: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB25BA58 by thread #52
==30374== Locks held: none
==30374==    at 0xC32034: tid_t::invalid() const volatile (tid_t.h:100)
==30374==    by 0xB5F780: xct_list::insert(xct_link*) (xct.cpp:364)
==30374==    by 0xB61D46: xct_t::join_xlist() (xct.cpp:1451)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x5cb25ba58 is 8 bytes inside a block of size 32 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB61D14: xct_t::join_xlist() (xct.cpp:1450)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB25BA50 by thread #52
==30374== Locks held: none
==30374==    at 0xB5F7BD: xct_list::insert(xct_link*) (xct.cpp:367)
==30374==    by 0xB61D46: xct_t::join_xlist() (xct.cpp:1451)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x5cb25ba50 is 0 bytes inside a block of size 32 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB61D14: xct_t::join_xlist() (xct.cpp:1450)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB1EC2D0 by thread #52
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAFBDD4: w_list_i<lock_head_t, mcs_lock>::w_list_i(w_list_t<lock_head_t, mcs_lock> const&, bool) (w_list.h:450)
==30374==    by 0xAFB46E: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1113)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2d0 is 3,637,904 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD79768 by thread #52
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAFBE71: w_list_i<lock_head_t, mcs_lock>::next() (w_list.h:473)
==30374==    by 0xAFB48F: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==  Address 0x5cad79768 is 8 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5CAD79780 by thread #52
==30374== Locks held: none
==30374==    at 0xAF26AC: lockid_t::lspace_bits() const (lock_s_inline.h:85)
==30374==    by 0xAFA030: lockid_t::operator==(lockid_t const&) const (lock_s_inline.h:623)
==30374==    by 0xAFA0F8: lockid_t::operator!=(lockid_t const&) const (lock_s_inline.h:649)
==30374==    by 0xAFB4B1: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad79780 is 32 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5CAD79782 by thread #52
==30374== Locks held: none
==30374==    at 0xAF9E94: lockid_t::vid_bits() const (lock_s_inline.h:194)
==30374==    by 0xAFA050: lockid_t::operator==(lockid_t const&) const (lock_s_inline.h:624)
==30374==    by 0xAFA0F8: lockid_t::operator!=(lockid_t const&) const (lock_s_inline.h:649)
==30374==    by 0xAFB4B1: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad79782 is 34 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD79784 by thread #52
==30374== Locks held: none
==30374==    at 0xAF9EA6: lockid_t::store_bits() const (lock_s_inline.h:234)
==30374==    by 0xAFA075: lockid_t::operator==(lockid_t const&) const (lock_s_inline.h:625)
==30374==    by 0xAFA0F8: lockid_t::operator!=(lockid_t const&) const (lock_s_inline.h:649)
==30374==    by 0xAFB4B1: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad79784 is 36 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD79788 by thread #52
==30374== Locks held: none
==30374==    at 0xAF26E2: lockid_t::page_bits() const (lock_s_inline.h:142)
==30374==    by 0xAFA094: lockid_t::operator==(lockid_t const&) const (lock_s_inline.h:626)
==30374==    by 0xAFA0F8: lockid_t::operator!=(lockid_t const&) const (lock_s_inline.h:649)
==30374==    by 0xAFB4B1: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad79788 is 40 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD7978C by thread #52
==30374== Locks held: none
==30374==    at 0xAF9E3E: lockid_t::slot_kvl_bits() const (lock_s_inline.h:115)
==30374==    by 0xAFA0B3: lockid_t::operator==(lockid_t const&) const (lock_s_inline.h:627)
==30374==    by 0xAFA0F8: lockid_t::operator!=(lockid_t const&) const (lock_s_inline.h:649)
==30374==    by 0xAFB4B1: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad7978c is 44 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD79798 by thread #52
==30374== Locks held: none
==30374==    at 0xAE2F40: atomic_add_int (atomic_ops_builtin.h:92)
==30374==    by 0xAE5949: void atomic_inc<int>(int volatile&) (atomic_templates.h:87)
==30374==    by 0xAFB4DC: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1132)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==  Address 0x5cad79798 is 56 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD797A0 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5AC7: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:101)
==30374==    by 0xAE5A7E: mcs_lock::acquire(mcs_lock::qnode*) (mcs_lock.h:94)
==30374==    by 0xAE5A58: mcs_lock::acquire(mcs_lock::ext_qnode*) (mcs_lock.h:91)
==30374==    by 0xAFA9AB: lock_head_t::my_lock::acquire() (lock_x.h:590)
==30374==    by 0xAF47E5: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1162)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad797a0 is 64 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD797C8 by thread #52
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAFB91A: w_list_i<lock_request_t, mcs_lock>::reset(w_list_t<lock_request_t, mcs_lock> const&, bool) (w_list.h:461)
==30374==    by 0xAFABF7: lock_head_t::safe_queue_iterator_t::safe_queue_iterator_t(lock_head_t&) (lock_x.h:673)
==30374==    by 0xAF451D: lock_head_t::find_lock_request(xct_lock_info_t const*) (lock_core.cpp:917)
==30374==    by 0xAF4B3B: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1278)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==  Address 0x5cad797c8 is 104 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD797DC by thread #52
==30374== Locks held: none
==30374==    at 0xAF2BE8: w_list_t<lock_request_t, mcs_lock>::base_of(w_link_t*) const (w_list.h:282)
==30374==    by 0xAF2B88: w_list_i<lock_request_t, mcs_lock>::next() (w_list.h:472)
==30374==    by 0xAF452A: lock_head_t::find_lock_request(xct_lock_info_t const*) (lock_core.cpp:919)
==30374==    by 0xAF4B3B: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1278)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad797dc is 124 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD79868 by thread #52
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAF2BC5: w_list_i<lock_request_t, mcs_lock>::next() (w_list.h:473)
==30374==    by 0xAF452A: lock_head_t::find_lock_request(xct_lock_info_t const*) (lock_core.cpp:919)
==30374==    by 0xAF4B3B: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1278)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad79868 is 56 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD79840 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA532: lock_request_t::get_lock_info() const (lock_x.h:304)
==30374==    by 0xAF4541: lock_head_t::find_lock_request(xct_lock_info_t const*) (lock_core.cpp:919)
==30374==    by 0xAF4B3B: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1278)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x5cad79840 is 16 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5CAD79794 by thread #52
==30374== Locks held: none
==30374==    at 0xAF4F17: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1394)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x5cad79794 is 52 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD79790 by thread #52
==30374== Locks held: none
==30374==    at 0xAF4F2E: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1395)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x5cad79790 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD797D0 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5898: w_link_t::prev() const (w_list.h:195)
==30374==    by 0xAFB812: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad797d0 is 112 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD79860 by thread #52
==30374== Locks held: none
==30374==    at 0xC58E8E: w_link_t::attach(w_link_t*) (w_listm.cpp:43)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad79860 is 48 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD79868 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAF2BC5: w_list_i<lock_request_t, mcs_lock>::next() (w_list.h:473)
==30374==    by 0xAF452A: lock_head_t::find_lock_request(xct_lock_info_t const*) (lock_core.cpp:919)
==30374==    by 0xAF050B: lock_m::_query_implicit(lockid_t const&, w_base_t::lock_mode_t&, tid_t const&, bool) (lock.cpp:343)
==30374==    by 0xAF0078: lock_m::query(lockid_t const&, w_base_t::lock_mode_t&, tid_t const&, bool, bool) (lock.cpp:261)
==30374==    by 0xB38898: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2133)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==  Address 0x5cad79868 is 56 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD797D0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad797d0 is 112 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD797D8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad797d8 is 120 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD797D8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad797d8 is 120 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD79790 by thread #52
==30374== Locks held: none
==30374==    at 0xAF51F5: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1468)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x5cad79790 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5C334A4B0 by thread #52
==30374== Locks held: none
==30374==    at 0xC45ED4: tatas_lock::spin() (no-inline.cpp:97)
==30374==    by 0xC437E0: tatas_lock::acquire() (sthread.h:359)
==30374==    by 0xC43C74: critical_section<tatas_lock&>::critical_section(tatas_lock&) (sthread.h:1103)
==30374==    by 0xB7D1DD: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:457)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBA2052: btree_impl::_traverse(lpid_t const&, lpid_t const&, lsn_t const&, cvec_t const&, cvec_t const&, bool&, latch_mode_t, btree_p&, btree_p&, lsn_t&, lsn_t&, bool) (btree_impl.cpp:5547)
==30374==    by 0xB9B9C5: btree_impl::_lookup(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, bool&, bt_cursor_t*, void*, unsigned int&, bool) (btree_impl.cpp:3826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC4381D: tatas_lock::release() (sthread.h:370)
==30374==    by 0xC43C9E: critical_section<tatas_lock&>::~critical_section() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB7D248: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:464)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==  Address 0x5c334a4b0 is 5,670,000 bytes inside a block of size 36,409,160 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB7DAFD: bf_core_m::htab::htab(int) (bf_htab.h:180)
==30374==    by 0xB76A19: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:430)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5C334A4B0 by thread #52
==30374== Locks held: none
==30374==    at 0xC4381D: tatas_lock::release() (sthread.h:370)
==30374==    by 0xC43C9E: critical_section<tatas_lock&>::~critical_section() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB7D248: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:464)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBA2052: btree_impl::_traverse(lpid_t const&, lpid_t const&, lsn_t const&, cvec_t const&, cvec_t const&, bool&, latch_mode_t, btree_p&, btree_p&, lsn_t&, lsn_t&, bool) (btree_impl.cpp:5547)
==30374==    by 0xB9B9C5: btree_impl::_lookup(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, bool&, bt_cursor_t*, void*, unsigned int&, bool) (btree_impl.cpp:3826)
==30374==    by 0xB8422C: btree_m::lookup(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, void*, unsigned int&, bool&, bool) (btree.cpp:902)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC4381D: tatas_lock::release() (sthread.h:370)
==30374==    by 0xC43C9E: critical_section<tatas_lock&>::~critical_section() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xB7D248: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:464)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==  Address 0x5c334a4b0 is 5,670,000 bytes inside a block of size 36,409,160 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB7DAFD: bf_core_m::htab::htab(int) (bf_htab.h:180)
==30374==    by 0xB76A19: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:430)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB244280 by thread #52
==30374== Locks held: none
==30374==    at 0xAE67A2: SearchableHeap<pginfo_t, histoid_compare_t>::Search(int, pginfo_t const&) (histo.cpp:85)
==30374==    by 0xAE3E4B: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:720)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cb244280 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3078: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD41358 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5D82: pginfo_t::space() const (page_h.h:214)
==30374==    by 0xAE5690: histoid_compare_t::ge(pginfo_t const&, pginfo_t const&) const (histo.cpp:1406)
==30374==    by 0xAE686D: SearchableHeap<pginfo_t, histoid_compare_t>::Search(int, pginfo_t const&) (histo.cpp:97)
==30374==    by 0xAE3E4B: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:720)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad41358 is 8 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD4135C by thread #52
==30374== Locks held: none
==30374==    at 0xAE5D60: pginfo_t::pginfo_t(pginfo_t const&) (page_h.h:210)
==30374==    by 0xAE66B3: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:259)
==30374==    by 0xAE3E75: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:726)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad4135c is 12 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB244280 by thread #52
==30374== Locks held: none
==30374==    at 0xAE66C9: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:260)
==30374==    by 0xAE3E75: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:726)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cb244280 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3078: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD41370 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5D82: pginfo_t::space() const (page_h.h:214)
==30374==    by 0xAE5652: histoid_compare_t::gt(pginfo_t const&, pginfo_t const&) const (histo.cpp:1369)
==30374==    by 0xAE6701: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:260)
==30374==    by 0xAE3E75: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:726)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad41370 is 32 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD41370 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6731: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:261)
==30374==    by 0xAE3E75: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:726)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad41370 is 32 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD41358 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6734: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:261)
==30374==    by 0xAE3E75: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:726)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad41358 is 8 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C84838 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB7A1C8: transit_bucket_t::transit_bucket_t() (bf_transit_bucket.h:84)
==30374==    by 0xB79373: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:240)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c84838 is 2808 bytes inside data symbol "_ZN16transit_bucket_t16_transit_bucketsE"
==30374== 
==30374== Possible data race during read of size 4 at 0x5C484B6B8 by thread #52
==30374== Locks held: none
==30374==    at 0xB7D251: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:430)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: 1, at address 0x13C84838
==30374==    at 0xB7CC4A: bf_core_m::htab::_insert(bfcb_t*, bfcb_t*&) (bf_htab.cpp:330)
==30374==    by 0xB7C923: bf_core_m::htab::insert(bfcb_t*) (bf_htab.cpp:279)
==30374==    by 0xB7748E: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:784)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==  Address 0x5c484b6b8 is 27,694,712 bytes inside a block of size 36,409,160 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB7DAFD: bf_core_m::htab::htab(int) (bf_htab.h:180)
==30374==    by 0xB76A19: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:430)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C84838 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB7A1C8: transit_bucket_t::transit_bucket_t() (bf_transit_bucket.h:84)
==30374==    by 0xB79373: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:240)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c84838 is 2808 bytes inside data symbol "_ZN16transit_bucket_t16_transit_bucketsE"
==30374== 
==30374== Possible data race during read of size 8 at 0x5C484B6A0 by thread #52
==30374== Locks held: none
==30374==    at 0xB7D13B: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:432)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: 1, at address 0x13C84838
==30374==    at 0xB7CC5D: bf_core_m::htab::_insert(bfcb_t*, bfcb_t*&) (bf_htab.cpp:330)
==30374==    by 0xB7C923: bf_core_m::htab::insert(bfcb_t*) (bf_htab.cpp:279)
==30374==    by 0xB7748E: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:784)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==  Address 0x5c484b6a0 is 27,694,688 bytes inside a block of size 36,409,160 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB7DAFD: bf_core_m::htab::htab(int) (bf_htab.h:180)
==30374==    by 0xB76A19: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:430)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872E90 by thread #52
==30374== Locks held: none
==30374==    at 0xB76704: bfcb_t::pin_frame_if_pinned() (bf_core.cpp:178)
==30374==    by 0xB7D18D: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:441)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB7964E: bfcb_t::zero_pin_cnt() (bf_s.h:214)
==30374==    by 0xB77040: bfcb_unused_list::take() (bf_core.cpp:567)
==30374==    by 0xB78668: bf_core_m::replacement() (bf_core.cpp:1555)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==  Address 0x5c8872e90 is 58,555,984 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5C8872E98 by thread #52
==30374== Locks held: none
==30374==    at 0xB27084: lpid_t::vol() const (sm_s.h:106)
==30374==    by 0xB749BA: bfpid_t::operator==(bfpid_t const&) const (bf_s.h:93)
==30374==    by 0xB7D212: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:461)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A65: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872e98 is 58,555,992 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872EA0 by thread #52
==30374== Locks held: none
==30374==    at 0xB749E0: bfpid_t::operator==(bfpid_t const&) const (bf_s.h:93)
==30374==    by 0xB7D212: bf_core_m::htab::lookup(bfpid_t const&) const (bf_htab.cpp:461)
==30374==    by 0xB7756F: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:858)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A6C: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872ea0 is 58,556,000 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872EE0 by thread #52
==30374== Locks held: none
==30374==    at 0xB74B54: bfcb_t::refbit() const (bf_s.h:180)
==30374==    by 0xB775AB: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:868)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB795F2: bfcb_t::set_refbit(unsigned int) (bf_s.h:181)
==30374==    by 0xB77D6B: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1213)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01F57: page_p::unfix_dirty() (page.h:778)
==30374==    by 0xB6642C: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2900)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC1CCE: file_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (file.cpp:3409)
==30374==    by 0xBBED45: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2808)
==30374==  Address 0x5c8872ee0 is 58,556,064 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872F38 by thread #52
==30374== Locks held: none
==30374==    at 0xC45043: mcs_rwlock::_attempt_write(unsigned int) (srwlock.cpp:126)
==30374==    by 0xC450D8: mcs_rwlock::attempt_write() (srwlock.cpp:139)
==30374==    by 0xC27C2D: _acquire (latch.cpp:473)
==30374==    by 0xC27C2D: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xBC4C90: file_p::~file_p() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==  Address 0x5c8872f38 is 58,556,152 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5C8872EB0 by thread #52
==30374== Locks held: none
==30374==    at 0xB74A7E: bfcb_t::old_pid_valid() const (bf_s.h:146)
==30374==    by 0xB77654: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:882)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xB795A5: bfcb_t::clr_old_pid() (bf_s.h:148)
==30374==    by 0xB7867F: bf_core_m::replacement() (bf_core.cpp:1559)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x5c8872eb0 is 58,556,016 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5C8872E98 by thread #52
==30374== Locks held: none
==30374==    at 0x7E4254: stid_t::stid_t(stid_t const&) (stid_t.h:99)
==30374==    by 0x7E429C: lpid_t::lpid_t(lpid_t const&) (sm_s.h:95)
==30374==    by 0xB6F637: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1167)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A65: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872e98 is 58,555,992 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872E9C by thread #52
==30374== Locks held: none
==30374==    at 0x7E426E: stid_t::stid_t(stid_t const&) (stid_t.h:99)
==30374==    by 0x7E429C: lpid_t::lpid_t(lpid_t const&) (sm_s.h:95)
==30374==    by 0xB6F637: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1167)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A65: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872e9c is 58,555,996 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872EA0 by thread #52
==30374== Locks held: none
==30374==    at 0x7E42A1: lpid_t::lpid_t(lpid_t const&) (sm_s.h:95)
==30374==    by 0xB6F637: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1167)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A6C: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872ea0 is 58,556,000 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5C8872EC8 by thread #52
==30374== Locks held: none
==30374==    at 0xB01217: lsn_t::valid() const (lsn.h:263)
==30374==    by 0xB6C55F: bfcb_t::update_rec_lsn(latch_mode_t) (bf.cpp:240)
==30374==    by 0xB6F968: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1302)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xB716A5: bfcb_t::set_rec_lsn(lsn_t const&) (bf.cpp:1855)
==30374==    by 0xB6C758: bfcb_t::update_rec_lsn(latch_mode_t) (bf.cpp:288)
==30374==    by 0xB6F968: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1302)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x5c8872ec8 is 58,556,040 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2778 by thread #52
==30374== Locks held: none
==30374==    at 0xACA7FC: lsn_t::lsn_t(lsn_t const&) (lsn.h:254)
==30374==    by 0xBD0C0A: log_m::curr_lsn() const (log.h:279)
==30374==    by 0xBD09BE: log_m::squeezed_by(lsn_t const&) const (log.cpp:781)
==30374==    by 0xB6C598: bfcb_t::update_rec_lsn(latch_mode_t) (bf.cpp:244)
==30374==    by 0xB6F968: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1302)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2778 is 56 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872F38 by thread #52
==30374== Locks held: none
==30374==    at 0xC296ED: mode (srwlock.h:121)
==30374==    by 0xC296ED: latch_t::mode() const (latch.h:301)
==30374==    by 0xB768A9: bf_core_m::latch_mode(bfcb_t const*) const (bf_core.cpp:347)
==30374==    by 0xB6FBA5: bf_m::latch_mode(page_s const*) (bf.cpp:1361)
==30374==    by 0xAFD5A2: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:908)
==30374==    by 0xAFD7C2: page_p::conditional_fix(lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:974)
==30374==    by 0xAE4216: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:829)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xBC4C90: file_p::~file_p() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==  Address 0x5c8872f38 is 58,556,152 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x13C84838 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xB7A1C8: transit_bucket_t::transit_bucket_t() (bf_transit_bucket.h:84)
==30374==    by 0xB79373: __static_initialization_and_destruction_0(int, int) (bf_core.cpp:240)
==30374==    by 0xB79458: _GLOBAL__sub_I_bfcore_stophere (bf_core.cpp:1960)
==30374==    by 0xC5AEEC: __libc_csu_init (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x15B39ED4: (below main) (libc-start.c:246)
==30374==  Address 0x13c84838 is 2808 bytes inside data symbol "_ZN16transit_bucket_t16_transit_bucketsE"
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872EE8 by thread #52
==30374== Locks held: none
==30374==    at 0xB79620: bfcb_t::hash_func() const (bf_s.h:194)
==30374==    by 0xB76FA1: bf_core_m::_in_htab(bfcb_t const*) const (bf_core.cpp:528)
==30374==    by 0xB6F0FB: bf_m::is_bf_page(page_s const*, bool) (bf.cpp:956)
==30374==    by 0xB00CEF: page_p::update_bucket_info() (page.cpp:2684)
==30374==    by 0xB01E34: page_p::unfix() (page.h:763)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: 1, at address 0x13C84838
==30374==    at 0xB7D8D4: bfcb_t::set_hash_func(int) (bf_s.h:195)
==30374==    by 0xB7C8F8: bf_core_m::htab::insert(bfcb_t*) (bf_htab.cpp:275)
==30374==    by 0xB7748E: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:784)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==  Address 0x5c8872ee8 is 58,556,072 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5C8872EC0 by thread #52
==30374== Locks held: none
==30374==    at 0xB74A90: bfcb_t::dirty() const (bf_s.h:151)
==30374==    by 0xB6FEBA: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1529)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xB74AA2: bfcb_t::set_dirty_bit() (bf_s.h:152)
==30374==    by 0xB73F53: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3051)
==30374==    by 0xB6FE9D: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1523)
==30374==    by 0xB01F57: page_p::unfix_dirty() (page.h:778)
==30374==    by 0xB6642C: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2900)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC1CCE: file_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (file.cpp:3409)
==30374==    by 0xBBED45: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2808)
==30374==  Address 0x5c8872ec0 is 58,556,032 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5C8872E98 by thread #52
==30374== Locks held: none
==30374==    at 0xB27084: lpid_t::vol() const (sm_s.h:106)
==30374==    by 0xB70034: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1653)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB74A65: bfcb_t::set_pid(bfpid_t const&) (bf_s.h:144)
==30374==    by 0xB6F936: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1270)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5c8872e98 is 58,555,992 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872EE0 by thread #52
==30374== Locks held: none
==30374==    at 0xB74B54: bfcb_t::refbit() const (bf_s.h:180)
==30374==    by 0xB77D4D: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1213)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB795F2: bfcb_t::set_refbit(unsigned int) (bf_s.h:181)
==30374==    by 0xB77D6B: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1213)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01F57: page_p::unfix_dirty() (page.h:778)
==30374==    by 0xB6642C: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2900)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC1CCE: file_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (file.cpp:3409)
==30374==    by 0xBBED45: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2808)
==30374==  Address 0x5c8872ee0 is 58,556,064 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872E90 by thread #52
==30374== Locks held: none
==30374==    at 0xB74BB2: bfcb_t::pin_cnt() const (bf_s.h:215)
==30374==    by 0xB77D7A: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1228)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB7964E: bfcb_t::zero_pin_cnt() (bf_s.h:214)
==30374==    by 0xB77040: bfcb_unused_list::take() (bf_core.cpp:567)
==30374==    by 0xB78668: bf_core_m::replacement() (bf_core.cpp:1555)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==  Address 0x5c8872e90 is 58,555,984 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5C8872EC8 by thread #52
==30374== Locks held: none
==30374==    at 0xACA7FC: lsn_t::lsn_t(lsn_t const&) (lsn.h:254)
==30374==    by 0xB74AFB: bfcb_t::safe_rec_lsn() const (bf_s.h:166)
==30374==    by 0xB77DC7: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1257)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xB716A5: bfcb_t::set_rec_lsn(lsn_t const&) (bf.cpp:1855)
==30374==    by 0xB6C758: bfcb_t::update_rec_lsn(latch_mode_t) (bf.cpp:288)
==30374==    by 0xB6F968: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1302)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x5c8872ec8 is 58,556,040 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5C8872F38 by thread #52
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xAE43F2: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:891)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xBC4C90: file_p::~file_p() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==  Address 0x5c8872f38 is 58,556,152 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8874358 by thread #52
==30374== Locks held: none
==30374==    at 0xB472C8: mcs_rwlock::has_writer() const (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xC4532B: mcs_rwlock::_spin_on_writer() (no-inline.cpp:46)
==30374==    by 0xC44EF6: mcs_rwlock::_add_when_writer_leaves(int) (srwlock.cpp:70)
==30374==    by 0xC4511E: mcs_rwlock::acquire_write() (srwlock.cpp:156)
==30374==    by 0xC27C8B: _acquire (latch.cpp:485)
==30374==    by 0xC27C8B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xB48211: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xB596DC: extlink_p::~extlink_p() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==  Address 0x5c8874358 is 58,561,304 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8874358 by thread #52
==30374== Locks held: none
==30374==    at 0xC27CFA: mode (srwlock.h:121)
==30374==    by 0xC27CFA: mode (latch.h:301)
==30374==    by 0xC27CFA: _acquire (latch.cpp:436)
==30374==    by 0xC27CFA: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB77C16: bf_core_m::pin(bfcb_t*, latch_mode_t) (bf_core.cpp:1163)
==30374==    by 0xB6FAC3: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1339)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xB020F4: page_p::destructor() (page.h:818)
==30374==    by 0xB00655: page_p::~page_p() (page.cpp:2494)
==30374==    by 0xB596DC: extlink_p::~extlink_p() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==  Address 0x5c8874358 is 58,561,304 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2870 by thread #52
==30374== Locks held: none
==30374==    at 0xBE89D7: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2749)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE6F39: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2203)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2870 is 304 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF9680 by thread #52
==30374== Locks held: none
==30374==    at 0xBE86F7: log_core::_join_slot(long&, long&, long) (log_core.cpp:2675)
==30374==    by 0xBE8A20: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2753)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE87CE: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf9680 is 0 bytes inside a block of size 8 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBE27D3: log_core::log_core(long, bool) (log_core.cpp:1120)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF8AA8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE870A: log_core::_join_slot(long&, long&, long) (log_core.cpp:2677)
==30374==    by 0xBE8A20: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2753)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDB4B1: log_xct_freeing_space (logstub_gen.cpp:84)
==30374==    by 0xB6463C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2184)
==30374==  Address 0x23fcf8aa8 is 23,656 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCFC598 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC365: log_core::insert_info_array::allocate(bool) (log_core.cpp:1033)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC37F: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==  Address 0x23fcfc598 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBE2799: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCFC598 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC37F: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC37F: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==  Address 0x23fcfc598 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBE2799: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF8B10 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC3FE: log_core::insert_info_array::allocate(bool) (log_core.cpp:1034)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==  Address 0x23fcf8b10 is 23,760 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8B10 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==  Address 0x23fcf8b10 is 23,760 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF9680 by thread #52
==30374== Locks held: none
==30374==    at 0xBE87CE: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE87CE: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf9680 is 0 bytes inside a block of size 8 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBE27D3: log_core::log_core(long, bool) (log_core.cpp:1120)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2838 by thread #52
==30374== Locks held: none
==30374==    at 0xBEBEC8: log_core::end_byte() const (log_core.h:106)
==30374==    by 0xBE6E03: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2084)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71CC: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2232)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2838 is 248 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2870 by thread #52
==30374== Locks held: none
==30374==    at 0xBE6F39: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2203)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE6F39: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2203)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2870 is 304 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2778 by thread #52
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2778 is 56 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2838 by thread #52
==30374== Locks held: none
==30374==    at 0xBE71CC: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2232)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71CC: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2232)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2838 is 248 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x23FCF8AD4 by thread #52
==30374== Locks held: none
==30374==    at 0xBE71E5: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2236)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71E5: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2236)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8ad4 is 23,700 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8AC8 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5AAC: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:98)
==30374==    by 0xBE720E: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5AAC: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:98)
==30374==    by 0xBE720E: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==  Address 0x23fcf8ac8 is 23,688 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x23FCF8AD0 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5AB7: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:99)
==30374==    by 0xBE720E: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5AB7: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:99)
==30374==    by 0xBE720E: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==  Address 0x23fcf8ad0 is 23,696 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8AD8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8ad8 is 23,704 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8A78 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7274: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2246)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7274: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2246)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8a78 is 23,608 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8A80 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7285: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2247)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7285: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2247)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8a80 is 23,616 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8A88 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7297: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2248)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7297: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2248)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8a88 is 23,624 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8A90 by thread #52
==30374== Locks held: none
==30374==    at 0xBE72B3: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2249)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72B3: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2249)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8a90 is 23,632 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8A98 by thread #52
==30374== Locks held: none
==30374==    at 0xBE72C5: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2250)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72C5: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2250)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8a98 is 23,640 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8AA0 by thread #52
==30374== Locks held: none
==30374==    at 0xBE72D7: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2251)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72D7: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2251)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8aa0 is 23,648 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8AB0 by thread #52
==30374== Locks held: none
==30374==    at 0xBE72E2: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2252)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72E2: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2252)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf8ab0 is 23,664 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2890 by thread #52
==30374== Locks held: none
==30374==    at 0xBE83F7: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2592)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE83F7: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2592)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2890 is 336 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF8AA8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8531: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2634)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDB4B1: log_xct_freeing_space (logstub_gen.cpp:84)
==30374==    by 0xB6463C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2184)
==30374==  Address 0x23fcf8aa8 is 23,656 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5CAD7C2B0 by thread #52
==30374== Locks held: none
==30374==    at 0xB5944B: lockid_t::set_ext_has_page_alloc(bool) (lock_s_inline.h:275)
==30374==    by 0xB4C535: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1515)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB59467: lockid_t::set_ext_has_page_alloc(bool) (lock_s_inline.h:277)
==30374==    by 0xB4C535: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1515)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Address 0x5cad7c2b0 is 32 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 2 at 0x5CAD7C2B0 by thread #52
==30374== Locks held: none
==30374==    at 0xB59467: lockid_t::set_ext_has_page_alloc(bool) (lock_s_inline.h:277)
==30374==    by 0xB4C535: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1515)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB59467: lockid_t::set_ext_has_page_alloc(bool) (lock_s_inline.h:277)
==30374==    by 0xB4C535: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1515)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Address 0x5cad7c2b0 is 32 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF28B8 by thread #52
==30374== Locks held: none
==30374==    at 0xACA8B5: lsn_t::operator<(lsn_t const&) const (lsn.h:285)
==30374==    by 0xBEA1E3: log_core::compensate(lsn_t, lsn_t) (log_core.cpp:3076)
==30374==    by 0xBCF346: log_m::compensate(lsn_t, lsn_t) (log.cpp:343)
==30374==    by 0xB66A49: xct_t::_compensate(lsn_t const&, bool) (xct.cpp:3154)
==30374==    by 0xB6690B: xct_t::compensate(lsn_t const&, bool) (xct.cpp:3083)
==30374==    by 0xB69B10: auto_release_anchor_t::compensate() (xct.h:696)
==30374==    by 0xB203BB: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1111)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA0E9: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3044)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf28b8 is 376 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x23FDAF538 by thread #52
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xB25B96: auto_release_w_t<mcs_rwlock>::~auto_release_w_t() (auto_release.h:171)
==30374==    by 0xB20571: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1066)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xB25B96: auto_release_w_t<mcs_rwlock>::~auto_release_w_t() (auto_release.h:171)
==30374==    by 0xB20571: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1066)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x23fdaf538 is 328 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB244280 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6656: Heap<pginfo_t, histoid_compare_t>::NumElements() const (w_heap.h:204)
==30374==    by 0xAE3C82: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:612)
==30374==    by 0xAE3D35: histoid_t::_find_page_return_info(bool, unsigned int const&, bool&, pginfo_t&) (histo.cpp:667)
==30374==    by 0xAE543A: histoid_update_t::replace_page(file_p*, bool) (histo.cpp:1286)
==30374==    by 0xBB5227: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:410)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cb244280 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3078: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD4135C by thread #52
==30374== Locks held: none
==30374==    at 0xAE5D92: pginfo_t::page() const (page_h.h:215)
==30374==    by 0xAE3C57: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:615)
==30374==    by 0xAE3D35: histoid_t::_find_page_return_info(bool, unsigned int const&, bool&, pginfo_t&) (histo.cpp:667)
==30374==    by 0xAE543A: histoid_update_t::replace_page(file_p*, bool) (histo.cpp:1286)
==30374==    by 0xBB5227: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:410)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad4135c is 12 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2870 by thread #52
==30374== Locks held: none
==30374==    at 0xBE6E5C: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2190)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE6F39: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2203)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2870 is 304 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB244598 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5EC0: store_histo_t::decr(unsigned char) (page_h.h:269)
==30374==    by 0xAE4AE8: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1067)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5ECC: store_histo_t::decr(unsigned char) (page_h.h:269)
==30374==    by 0xAE4AE8: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1067)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cb244598 is 24 bytes inside a block of size 120 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3706: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB244598 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5ECC: store_histo_t::decr(unsigned char) (page_h.h:269)
==30374==    by 0xAE4AE8: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1067)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5ECC: store_histo_t::decr(unsigned char) (page_h.h:269)
==30374==    by 0xAE4AE8: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1067)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cb244598 is 24 bytes inside a block of size 120 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3706: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB2445D4 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5E48: store_histo_t::incr(unsigned char) (page_h.h:246)
==30374==    by 0xAE4AFE: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1068)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5E54: store_histo_t::incr(unsigned char) (page_h.h:246)
==30374==    by 0xAE4AFE: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1068)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cb2445d4 is 84 bytes inside a block of size 120 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3706: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB2445D4 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5E54: store_histo_t::incr(unsigned char) (page_h.h:246)
==30374==    by 0xAE4AFE: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1068)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5E54: store_histo_t::incr(unsigned char) (page_h.h:246)
==30374==    by 0xAE4AFE: histoid_t::bucket_change(unsigned int, unsigned int) (histo.cpp:1068)
==30374==    by 0xAE55A4: histoid_update_t::update() (histo.cpp:1335)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cb2445d4 is 84 bytes inside a block of size 120 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3706: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB244280 by thread #52
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cb244280 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3078: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD41370 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad41370 is 32 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD41360 by thread #52
==30374== Locks held: none
==30374==    at 0xAE73B2: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:427)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73B2: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:427)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad41360 is 16 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD41358 by thread #52
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAE73F0: Heap<pginfo_t, histoid_compare_t>::SiftUp(int) (w_heap.h:433)
==30374==    by 0xAE6AA3: Heap<pginfo_t, histoid_compare_t>::IncreasedN(int) (w_heap.h:224)
==30374==    by 0xAE49CE: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1028)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==  Address 0x5cad41358 is 8 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8873720 by thread #52
==30374== Locks held: none
==30374==    at 0xC44F1E: mcs_rwlock::attempt_read() (srwlock.cpp:77)
==30374==    by 0xC44F8A: mcs_rwlock::acquire_read() (srwlock.cpp:91)
==30374==    by 0xC27CA7: _acquire (latch.cpp:480)
==30374==    by 0xC27CA7: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB775FF: bf_core_m::find(bfcb_t*&, bfpid_t const&, latch_mode_t, int, int) (bf_core.cpp:873)
==30374==    by 0xB6F1EF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1017)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBA2052: btree_impl::_traverse(lpid_t const&, lpid_t const&, lsn_t const&, cvec_t const&, cvec_t const&, bool&, latch_mode_t, btree_p&, btree_p&, lsn_t&, lsn_t&, bool) (btree_impl.cpp:5547)
==30374==    by 0xB972AF: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2363)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xC2840A: _release (latch.cpp:614)
==30374==    by 0xC2840A: latch_t::latch_release() (latch.cpp:403)
==30374==    by 0xB78109: bf_core_m::unpin(bfcb_t*&, int, bool) (bf_core.cpp:1333)
==30374==    by 0xB70053: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1654)
==30374==    by 0xB01E97: page_p::unfix() (page.h:764)
==30374==    by 0xBA0E79: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5260)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==  Address 0x5c8873720 is 58,558,176 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB1EC2D0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2d0 is 3,637,904 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD79770 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cad79770 is 16 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB1EC2E0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2e0 is 3,637,920 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB1EC2E0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2e0 is 3,637,920 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5C8872F78 by thread #52
==30374== Locks held: none
==30374==    at 0xB74A90: bfcb_t::dirty() const (bf_s.h:151)
==30374==    by 0xB73F41: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3050)
==30374==    by 0xB73FFD: bf_m::set_dirty(page_s const*) (bf.cpp:3112)
==30374==    by 0xB01FC4: page_p::set_dirty() const (page.h:789)
==30374==    by 0xBDD305: log_page_insert (logstub_gen.cpp:283)
==30374==    by 0xAFE32A: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1456)
==30374==    by 0xBC7047: zkeyed_p::insert(cvec_t const&, cvec_t const&, short, bool, bool) (zkeyed.cpp:668)
==30374==    by 0xBAAD70: btree_p::insert(cvec_t const&, cvec_t const&, short, unsigned int, bool) (btree_p.cpp:689)
==30374==    by 0xB98742: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3020)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xB74AA2: bfcb_t::set_dirty_bit() (bf_s.h:152)
==30374==    by 0xB73F53: bf_m::_set_dirty(bfcb_t*) (bf.cpp:3051)
==30374==    by 0xB6FE9D: bf_m::unfix(page_s const*, bool, int) (bf.cpp:1523)
==30374==    by 0xB01F57: page_p::unfix_dirty() (page.h:778)
==30374==    by 0xB6642C: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2900)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC83AE: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1147)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==  Address 0x5c8872f78 is 58,556,216 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5C8872F48 by thread #52
==30374== Locks held: none
==30374==    at 0xB76704: bfcb_t::pin_frame_if_pinned() (bf_core.cpp:178)
==30374==    by 0xB77AEB: bf_core_m::pin(bfcb_t*, latch_mode_t) (bf_core.cpp:1146)
==30374==    by 0xB6FAC3: bf_m::refix(page_s const*, latch_mode_t) (bf.cpp:1339)
==30374==    by 0xB0079D: page_p::_copy(page_p const&) (page.cpp:2532)
==30374==    by 0xB00937: page_p::operator=(page_p const&) (page.cpp:2552)
==30374==    by 0xB66334: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2854)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xB7964E: bfcb_t::zero_pin_cnt() (bf_s.h:214)
==30374==    by 0xB77040: bfcb_unused_list::take() (bf_core.cpp:567)
==30374==    by 0xB78668: bf_core_m::replacement() (bf_core.cpp:1555)
==30374==    by 0xB6F2FF: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1048)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==  Address 0x5c8872f48 is 58,556,168 bytes inside a block of size 94,208,008 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xB76ACF: bf_core_m::bf_core_m(unsigned int, char*) (bf_core.cpp:436)
==30374==    by 0xB6EA56: bf_m::bf_m(unsigned int, char*, unsigned int) (bf.cpp:836)
==30374==    by 0xB0D2AE: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:774)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2778 by thread #52
==30374== Locks held: none
==30374==    at 0xACA7FC: lsn_t::lsn_t(lsn_t const&) (lsn.h:254)
==30374==    by 0xBE6EE0: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2196)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2778 is 56 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x23FDAF538 by thread #52
==30374== Locks held: none
==30374==    at 0xC44F1E: mcs_rwlock::attempt_read() (srwlock.cpp:77)
==30374==    by 0xB58EC9: vol_t::acquire_mutex(void**, bool) (vol.cpp:4793)
==30374==    by 0xB2592A: io_m::_find_and_grab(vid_t, void**, bool) (sm_io.cpp:269)
==30374==    by 0xB21F7F: io_m::is_valid_page_of(lpid_t const&, unsigned int) (sm_io.cpp:2097)
==30374==    by 0xAE4446: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:897)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC45185: mcs_rwlock::release_write() (srwlock.cpp:169)
==30374==    by 0xB25B96: auto_release_w_t<mcs_rwlock>::~auto_release_w_t() (auto_release.h:171)
==30374==    by 0xB20571: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1066)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x23fdaf538 is 328 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB1EC2D0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EC4: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF1511: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:687)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2d0 is 3,637,904 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB1EC2E0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF1511: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:687)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2e0 is 3,637,920 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB1EC2E0 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF1511: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:687)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EAF: w_link_t::attach(w_link_t*) (w_listm.cpp:48)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cb1ec2e0 is 3,637,920 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE560: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1503)
==30374==    by 0xBC7047: zkeyed_p::insert(cvec_t const&, cvec_t const&, short, bool, bool) (zkeyed.cpp:668)
==30374==    by 0xBAAD70: btree_p::insert(cvec_t const&, cvec_t const&, short, unsigned int, bool) (btree_p.cpp:689)
==30374==    by 0xB98742: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3020)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE560: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1503)
==30374==    by 0xBC7047: zkeyed_p::insert(cvec_t const&, cvec_t const&, short, bool, bool) (zkeyed.cpp:668)
==30374==    by 0xBAAD70: btree_p::insert(cvec_t const&, cvec_t const&, short, unsigned int, bool) (btree_p.cpp:689)
==30374==    by 0xB98742: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3020)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBAAB83: btree_p::search(cvec_t const&, cvec_t const&, bool&, bool&, short&) const (btree_p.cpp:645)
==30374==    by 0xBA317F: btree_impl::_search(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&) (btree_impl.cpp:5955)
==30374==    by 0xBA3255: btree_impl::_satisfy(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&, unsigned int&) (btree_impl.cpp:5998)
==30374==    by 0xB97AD9: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2728)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBAAB83: btree_p::search(cvec_t const&, cvec_t const&, bool&, bool&, short&) const (btree_p.cpp:645)
==30374==    by 0xBA317F: btree_impl::_search(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&) (btree_impl.cpp:5955)
==30374==    by 0xBA3255: btree_impl::_satisfy(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&, unsigned int&) (btree_impl.cpp:5998)
==30374==    by 0xB97AD9: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2728)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBC893F: zkeyed_p::rec(short, int&, int&, cvec_t&, char const*&, int&) const (zkeyed.cpp:1327)
==30374==    by 0xBC84CC: zkeyed_p::rec(short, cvec_t&, char const*&, int&) const (zkeyed.cpp:1162)
==30374==    by 0xBAB7CD: btrec_t::set(btree_p const&, short) (btree_p.cpp:828)
==30374==    by 0xBACE0F: btrec_t::btrec_t(btree_p const&, short) (btree_p.h:103)
==30374==    by 0xBAAA48: btree_p::search(cvec_t const&, cvec_t const&, bool&, bool&, short&) const (btree_p.cpp:578)
==30374==    by 0xBA317F: btree_impl::_search(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&) (btree_impl.cpp:5955)
==30374==    by 0xBA3255: btree_impl::_satisfy(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&, unsigned int&) (btree_impl.cpp:5998)
==30374==    by 0xB97AD9: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2728)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBC893F: zkeyed_p::rec(short, int&, int&, cvec_t&, char const*&, int&) const (zkeyed.cpp:1327)
==30374==    by 0xBC84CC: zkeyed_p::rec(short, cvec_t&, char const*&, int&) const (zkeyed.cpp:1162)
==30374==    by 0xBAB7CD: btrec_t::set(btree_p const&, short) (btree_p.cpp:828)
==30374==    by 0xBACE0F: btrec_t::btrec_t(btree_p const&, short) (btree_p.h:103)
==30374==    by 0xBAAA48: btree_p::search(cvec_t const&, cvec_t const&, bool&, bool&, short&) const (btree_p.cpp:578)
==30374==    by 0xBA317F: btree_impl::_search(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&) (btree_impl.cpp:5955)
==30374==    by 0xBA3255: btree_impl::_satisfy(btree_p const&, cvec_t const&, cvec_t const&, bool&, bool&, short&, unsigned int&) (btree_impl.cpp:5998)
==30374==    by 0xB97AD9: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2728)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3450 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8C9D: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2791)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf3450 is 1,552 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3420 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8CF3: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2845)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==  Address 0x23fcf3420 is 1,504 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3428 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8D08: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2846)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72E2: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2252)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf3428 is 1,512 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3418 by thread #52
==30374== Locks held: none
==30374==    at 0xBE81D0: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2562)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72D7: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2251)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf3418 is 1,496 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3408 by thread #52
==30374== Locks held: none
==30374==    at 0xBE82BA: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2578)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72B3: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2249)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf3408 is 1,480 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3410 by thread #52
==30374== Locks held: none
==30374==    at 0xBE83EF: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2592)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72C5: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2250)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==  Address 0x23fcf3410 is 1,488 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF3440 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8422: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2609)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xAE5AAC: mcs_lock::__unsafe_begin_acquire(mcs_lock::qnode*) (mcs_lock.h:98)
==30374==    by 0xBE720E: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==  Address 0x23fcf3440 is 1,536 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCFC598 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC418: log_core::insert_info_array::allocate(bool) (log_core.cpp:1042)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC37F: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==  Address 0x23fcfc598 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBE2799: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCFC598 by thread #52
==30374== Locks held: none
==30374==    at 0xBEC373: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC37F: log_core::insert_info_array::allocate(bool) (log_core.cpp:1036)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==  Address 0x23fcfc598 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBE2799: log_core::log_core(long, bool) (log_core.cpp:1124)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF4598 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8B46: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2770)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBEC43E: log_core::insert_info_array::allocate(bool) (log_core.cpp:1043)
==30374==    by 0xBE87CD: log_core::_allocate_slot(long) (log_core.cpp:2696)
==30374==    by 0xBE8A94: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2760)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==  Address 0x23fcf4598 is 5,976 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2778 by thread #52
==30374== Locks held: none
==30374==    at 0xBE89E9: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2750)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==    by 0xB20EE7: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1516)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2778 is 56 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF6620 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8D85: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2855)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE72E2: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2252)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x23fcf6620 is 14,304 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF79C8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8BE5: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2778)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x23fcf79c8 is 19,336 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF79C8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8D56: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2853)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDEA5C: log_btree_insert (logstub_gen.cpp:446)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x23fcf79c8 is 19,336 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAE9E028 by thread #52
==30374== Locks held: none
==30374==    at 0xC58E94: w_link_t::attach(w_link_t*) (w_listm.cpp:44)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cae9e028 is 172,008 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAE9E030 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF1511: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:687)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB97FD3: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2903)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==  Address 0x5cae9e030 is 172,016 bytes inside a block of size 3,669,184 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAF4950: lock_core_m::lock_core_m(unsigned int) (lock_core.cpp:1202)
==30374==    by 0xAEF6D7: lock_m::lock_m(int) (lock.cpp:85)
==30374==    by 0xB0D393: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:783)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBEA484: log_core::compensate(lsn_t, lsn_t) (log_core.cpp:3131)
==30374==    by 0xBCF346: log_m::compensate(lsn_t, lsn_t) (log.cpp:343)
==30374==    by 0xB66A49: xct_t::_compensate(lsn_t const&, bool) (xct.cpp:3154)
==30374==    by 0xB6690B: xct_t::compensate(lsn_t const&, bool) (xct.cpp:3083)
==30374==    by 0xBA14CB: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5334)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBEA484: log_core::compensate(lsn_t, lsn_t) (log_core.cpp:3131)
==30374==    by 0xBCF346: log_m::compensate(lsn_t, lsn_t) (log.cpp:343)
==30374==    by 0xB66A49: xct_t::_compensate(lsn_t const&, bool) (xct.cpp:3154)
==30374==    by 0xB6690B: xct_t::compensate(lsn_t const&, bool) (xct.cpp:3083)
==30374==    by 0xBA14CB: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5334)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD84E60 by thread #52
==30374== Locks held: none
==30374==    at 0xAF4D40: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1337)
==30374==    by 0xAF18AF: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:747)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Address 0x5cad84e60 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD84F00 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA50C: lock_request_t::status() const (lock_x.h:276)
==30374==    by 0xAFB206: lock_head_t::granted_mode_other(lock_request_t const*) (lock_core.cpp:883)
==30374==    by 0xAF4DA6: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1340)
==30374==    by 0xAF18AF: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:747)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad84f00 is 0 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD84F04 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA4E2: lock_request_t::mode() const (lock_x.h:265)
==30374==    by 0xAFB228: lock_head_t::granted_mode_other(lock_request_t const*) (lock_core.cpp:890)
==30374==    by 0xAF4DA6: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1340)
==30374==    by 0xAF18AF: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:747)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad84f04 is 4 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD82770 by thread #52
==30374== Locks held: none
==30374==    at 0xAE5BD2: mcs_lock::release(mcs_lock::qnode*) (mcs_lock.h:137)
==30374==    by 0xAE5B9E: mcs_lock::release(mcs_lock::ext_qnode*) (mcs_lock.h:127)
==30374==    by 0xAFAA1D: lock_head_t::my_lock::release() (lock_x.h:602)
==30374==    by 0xAF5900: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1739)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Address 0x5cad82770 is 64 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB495B2: extlink_i::set_next(unsigned int, unsigned int, bool) (vol.cpp:628)
==30374==    by 0xB52484: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3127)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB495B2: extlink_i::set_next(unsigned int, unsigned int, bool) (vol.cpp:628)
==30374==    by 0xB52484: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3127)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB244458 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A7E1: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C694: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_right(std::_Rb_tree_node_base*) (stl_tree.h:537)
==30374==    by 0xB5C00D: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1144)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5cb244458 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD416C8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A7E7: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A5EE: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==  Address 0x5cad416c8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB1FFB2: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:999)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB241D78 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A80B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C694: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_right(std::_Rb_tree_node_base*) (stl_tree.h:537)
==30374==    by 0xB5C00D: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1144)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5cb241d78 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB1FFB2: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:999)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB244D60 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A80F: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C6A6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_left(std::_Rb_tree_node_base*) (stl_tree.h:529)
==30374==    by 0xB5BFFB: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1142)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5cb244d60 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD86138 by thread #52
==30374== Locks held: none
==30374==    at 0xC58E94: w_link_t::attach(w_link_t*) (w_listm.cpp:44)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad86138 is 56 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCF2AE0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xBE2885: log_core::log_core(long, bool) (log_core.cpp:1127)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x23fcf2ae0 is 928 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2780 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA143: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3056)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: 1, at address 0x23FCF2AE0
==30374==    at 0xACA8B5: lsn_t::operator<(lsn_t const&) const (lsn.h:285)
==30374==    by 0xB697DC: lsn_t::operator>=(lsn_t const&) const (lsn.h:286)
==30374==    by 0xBE9560: log_core::flush(lsn_t, bool) (log_core.cpp:2884)
==30374==    by 0xB65A0A: xct_t::_sync_logbuf(bool) (xct.cpp:2610)
==30374==    by 0xB647EE: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2205)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==  Address 0x23fcf2780 is 64 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2830 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA152: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3057)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xBEBEB2: log_core::start_byte() const (log_core.h:103)
==30374==    by 0xBE6E15: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2084)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==  Address 0x23fcf2830 is 240 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x5CB24BD50 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EE53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:584)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x8468C7: tpcc::ShoreTPCCEnv::table_builder_t::table_builder_t(tpcc::ShoreTPCCEnv*, int, long, long, int*) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x842CDF: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x5cb24bd50 is 112 bytes inside a block of size 25,640 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x842CA9: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: 1, at address 0x5CB24BD50
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC40CB5: sthread_t::_unblock(unsigned int) (sthread.cpp:1073)
==30374==    by 0xC408EF: sthread_t::_block(int, char const*, void const*) (sthread.cpp:1002)
==30374==    by 0xC404E9: sthread_t::_block(pthread_mutex_t*, int, w_list_t<sthread_t, pthread_mutex_t>*, char const*, void const*) (sthread.cpp:914)
==30374==    by 0xC4021D: sthread_t::block(int) (sthread.cpp:886)
==30374==    by 0xB46CE5: smthread_t::_smthread_block(int, char const*) (smthread.cpp:531)
==30374==    by 0xB46D83: smthread_t::smthread_block(int, char const*, void const*) (smthread.cpp:555)
==30374==    by 0xAF557A: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1571)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x5CB24BD50 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xC3EE53: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:584)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x8468C7: tpcc::ShoreTPCCEnv::table_builder_t::table_builder_t(tpcc::ShoreTPCCEnv*, int, long, long, int*) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x842CDF: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Address 0x5cb24bd50 is 112 bytes inside a block of size 25,640 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x842CA9: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: 1, at address 0x5CB24BD50
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC40CB5: sthread_t::_unblock(unsigned int) (sthread.cpp:1073)
==30374==    by 0xC408EF: sthread_t::_block(int, char const*, void const*) (sthread.cpp:1002)
==30374==    by 0xC404E9: sthread_t::_block(pthread_mutex_t*, int, w_list_t<sthread_t, pthread_mutex_t>*, char const*, void const*) (sthread.cpp:914)
==30374==    by 0xC4021D: sthread_t::block(int) (sthread.cpp:886)
==30374==    by 0xB46CE5: smthread_t::_smthread_block(int, char const*) (smthread.cpp:531)
==30374==    by 0xB46D83: smthread_t::smthread_block(int, char const*, void const*) (smthread.cpp:555)
==30374==    by 0xAF557A: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1571)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCF2AE0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xBE2885: log_core::log_core(long, bool) (log_core.cpp:1127)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x23fcf2ae0 is 928 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2820 by thread #12
==30374== Locks held: 1, at address 0x23FCF2AE0
==30374==    at 0xBE97AE: log_core::flush_daemon() (log_core.cpp:2921)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE6DE9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2083)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2820 is 224 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2890 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9F22: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2993)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xBE83F7: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2592)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2890 is 336 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF28B8 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA0E9: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3044)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xACA8B5: lsn_t::operator<(lsn_t const&) const (lsn.h:285)
==30374==    by 0xBEA1E3: log_core::compensate(lsn_t, lsn_t) (log_core.cpp:3076)
==30374==    by 0xBCF346: log_m::compensate(lsn_t, lsn_t) (log.cpp:343)
==30374==    by 0xB66A49: xct_t::_compensate(lsn_t const&, bool) (xct.cpp:3154)
==30374==    by 0xB6690B: xct_t::compensate(lsn_t const&, bool) (xct.cpp:3083)
==30374==    by 0xB69B10: auto_release_anchor_t::compensate() (xct.h:696)
==30374==    by 0xB203BB: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1111)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x23fcf28b8 is 376 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA2FCC80 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EC0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58ED0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5da2fcc80 is 64 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD86698 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EC4: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EC4: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5cad86698 is 104 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD866A8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5cad866a8 is 120 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD866A8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xC58ED7: w_link_t::detach() (w_listm.cpp:57)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5cad866a8 is 120 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA2FCC80 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EDB: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58ED0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5da2fcc80 is 64 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA2FCC78 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EDF: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAF2BC5: w_list_i<lock_request_t, mcs_lock>::next() (w_list.h:473)
==30374==    by 0xAFB254: lock_head_t::granted_mode_other(lock_request_t const*) (lock_core.cpp:882)
==30374==    by 0xAF6A57: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2252)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==  Address 0x5da2fcc78 is 56 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD86660 by thread #52
==30374== Locks held: none
==30374==    at 0xAF6A58: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2252)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAF6A58: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2252)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==  Address 0x5cad86660 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD88C30 by thread #52
==30374== Locks held: none
==30374==    at 0xAF7027: lock_core_m::upgrade_ext_req_to_EX_if_should_free(lock_request_t*) (lock_core.cpp:2385)
==30374==    by 0xAF736A: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2473)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAF6A58: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2252)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==  Address 0x5cad88c30 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4BE98: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1315)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA2F6BF8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EDF: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xAE58AA: w_link_t::next() const (w_list.h:201)
==30374==    by 0xAFBE71: w_list_i<lock_head_t, mcs_lock>::next() (w_list.h:473)
==30374==    by 0xAFB48F: lock_core_m::_find_lock_head_in_chain(w_list_t<lock_head_t, mcs_lock>&, lockid_t const&) (lock_core.cpp:1116)
==30374==    by 0xAF4720: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1147)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==  Address 0x5da2f6bf8 is 8 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA2F3598 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EB7: w_link_t::detach() (w_listm.cpp:54)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EA0: w_link_t::attach(w_link_t*) (w_listm.cpp:46)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==  Address 0x5da2f3598 is 56 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD7A850 by thread #52
==30374== Locks held: none
==30374==    at 0xC58ED0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EDB: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5cad7a850 is 64 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA2F3590 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EE3: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58E8E: w_link_t::attach(w_link_t*) (w_listm.cpp:43)
==30374==    by 0xAFB833: w_list_t<lock_request_t, mcs_lock>::append(lock_request_t*) (w_list.h:358)
==30374==    by 0xAFAB3A: lock_head_t::queue_append(lock_request_t*) (lock_x.h:643)
==30374==    by 0xAF51BD: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1465)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==  Address 0x5da2f3590 is 48 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5DA2F3224 by thread #52
==30374== Locks held: none
==30374==    at 0xAF6C1D: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2290)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xAF5204: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1481)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==  Address 0x5da2f3224 is 52 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 1 at 0x5DA2F3224 by thread #52
==30374== Locks held: none
==30374==    at 0xAF6C38: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2294)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xAF5204: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1481)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==  Address 0x5da2f3224 is 52 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD7A8C4 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA4E2: lock_request_t::mode() const (lock_x.h:265)
==30374==    by 0xAF6D1F: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2318)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EE3: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==  Address 0x5cad7a8c4 is 4 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD7A8D8 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA386: lock_request_t::thread() const (lock_x.h:166)
==30374==    by 0xAF6E14: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2330)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad7a8d8 is 24 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD7A8C0 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA522: lock_request_t::set_status(lock_base_t::status_t) (lock_x.h:283)
==30374==    by 0xAF6E29: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2337)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0xAFA50C: lock_request_t::status() const (lock_x.h:276)
==30374==    by 0xAF5674: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1609)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==  Address 0x5cad7a8c0 is 0 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 1 at 0x5CB2520C1 by thread #52
==30374== Locks held: none
==30374==    at 0xB46D11: smthread_t::_smthread_unblock(unsigned int) (smthread.cpp:542)
==30374==    by 0xB46DAE: smthread_t::smthread_unblock(unsigned int) (smthread.cpp:560)
==30374==    by 0xAF6E57: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2342)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #51
==30374== Locks held: none
==30374==    at 0xB46CD5: smthread_t::_smthread_block(int, char const*) (smthread.cpp:529)
==30374==    by 0xB46D83: smthread_t::smthread_block(int, char const*, void const*) (smthread.cpp:555)
==30374==    by 0xAF557A: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1571)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==  Address 0x5cb2520c1 is 25,569 bytes inside a block of size 25,640 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0x842CA9: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:569)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374==  Block was alloc'd by thread #1
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBB34C0: ssmtest(log_m*, char const*, char const*, int) (crash.cpp:253)
==30374==    by 0xBA8A5D: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:142)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBB34C0: ssmtest(log_m*, char const*, char const*, int) (crash.cpp:253)
==30374==    by 0xBA8A5D: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:142)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD75B: log_page_format (logstub_gen.cpp:314)
==30374==    by 0xBC1CCE: file_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (file.cpp:3409)
==30374==    by 0xBBED45: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2808)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD75B: log_page_format (logstub_gen.cpp:314)
==30374==    by 0xBC1CCE: file_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (file.cpp:3409)
==30374==    by 0xBBED45: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2808)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDDB91: log_page_reclaim (logstub_gen.cpp:344)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDDB91: log_page_reclaim (logstub_gen.cpp:344)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB2C45E: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1025)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB2C45E: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1025)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4569: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:920)
==30374==    by 0xBB8750: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1265)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4569: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:920)
==30374==    by 0xBB8750: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1265)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13C82E48 by thread #51
==30374== Locks held: none
==30374==    at 0xC3203E: tid_t::next() const (tid_t.h:104)
==30374==    by 0xB6A277: xct_list::oldest_tid() (xct.cpp:194)
==30374==    by 0xB6025F: xct_t::oldest_tid() (xct.cpp:780)
==30374==    by 0xB02226: page_s::space_t::_check_reserve() (page.cpp:119)
==30374==    by 0xAFC6AE: page_s::space_t::usable(xct_t*) (page.cpp:149)
==30374==    by 0xB019AB: page_p::usable_space() (page.h:553)
==30374==    by 0xAFE0AE: page_p::next_slot(unsigned int, short&) (page.cpp:1361)
==30374==    by 0xBC1E89: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3454)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xBB8750: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1265)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC32030: tid_t::operator=(tid_t const&) (tid_t.h:96)
==30374==    by 0xB5FB0B: xct_list::remove(xct_link*) (xct.cpp:487)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==  Address 0x13c82e48 is 8 bytes inside data symbol "_xlist"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD411E4 by thread #51
==30374== Locks held: none
==30374==    at 0xB59E7D: vol_t::_page_cache_find(unsigned int) const (vol.h:469)
==30374==    by 0xB5A0E9: vol_t::is_primed(unsigned int) const (vol.h:552)
==30374==    by 0xB1FEA1: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB54FFA: vol_t::page_cache_update(unsigned int, unsigned int) const (vol.cpp:3838)
==30374==    by 0xB5459E: vol_t::_last_extent(unsigned int, unsigned int&, extlink_i&, extlink_t const*&) (vol.cpp:3640)
==30374==    by 0xB54120: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3568)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Address 0x5cad411e4 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F007: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EE0B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E764: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_create_node(std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:380)
==30374==    by 0xB5D4C5: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:1023)
==30374==    by 0xB5BF77: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, unsigned int> >, std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B3EF: std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, unsigned int> >, std::pair<unsigned int const, unsigned int> const&) (stl_map.h:648)
==30374==    by 0xB5A95B: std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB59E7C: vol_t::_page_cache_find(unsigned int) const (vol.h:469)
==30374==    by 0xB5A0E9: vol_t::is_primed(unsigned int) const (vol.h:552)
==30374==    by 0xB1FEA1: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 1 at 0x5CAD7A544 by thread #51
==30374== Locks held: none
==30374==    at 0xAF5204: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1481)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Address 0x5cad7a544 is 52 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD7A5E0 by thread #51
==30374== Locks held: none
==30374==    at 0xAFA50C: lock_request_t::status() const (lock_x.h:276)
==30374==    by 0xAF7BFF: lock_core_m::_check_deadlock(xct_t*, bool, lock_request_t*) (lock_core.cpp:2750)
==30374==    by 0xAF548F: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1545)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5cad7a5e0 is 0 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD7A5E4 by thread #51
==30374== Locks held: none
==30374==    at 0xAFA4E2: lock_request_t::mode() const (lock_x.h:265)
==30374==    by 0xAF7D27: lock_core_m::_check_deadlock(xct_t*, bool, lock_request_t*) (lock_core.cpp:2768)
==30374==    by 0xAF548F: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1545)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA4FA: lock_request_t::set_mode(w_base_t::lock_mode_t) (lock_x.h:273)
==30374==    by 0xAF4DEA: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1348)
==30374==    by 0xAF18AF: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:747)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==  Address 0x5cad7a5e4 is 4 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD7A588 by thread #51
==30374== Locks held: none
==30374==    at 0xAF9ADE: w_list_base_t::num_members() const (w_list.h:247)
==30374==    by 0xAFAAF3: lock_head_t::queue_length() const (lock_x.h:635)
==30374==    by 0xAF7B1D: lock_core_m::_check_deadlock(xct_t*, bool, lock_request_t*) (lock_core.cpp:2702)
==30374==    by 0xAF548F: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1545)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==  Address 0x5cad7a588 is 120 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD7A5F0 by thread #51
==30374== Locks held: none
==30374==    at 0xAFA532: lock_request_t::get_lock_info() const (lock_x.h:304)
==30374==    by 0xAF7D69: lock_core_m::_check_deadlock(xct_t*, bool, lock_request_t*) (lock_core.cpp:2784)
==30374==    by 0xAF548F: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1545)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAF6A58: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2252)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==  Address 0x5cad7a5f0 is 16 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xAE43D0: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:888)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 2 at 0x5CB25C320 by thread #52
==30374== Locks held: none
==30374==    at 0xAF26AC: lockid_t::lspace_bits() const (lock_s_inline.h:85)
==30374==    by 0xAF26CF: lockid_t::lspace() const (lock_s_inline.h:91)
==30374==    by 0xAF7352: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2472)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 2 by thread #51
==30374== Locks held: none
==30374==    at 0xB59467: lockid_t::set_ext_has_page_alloc(bool) (lock_s_inline.h:277)
==30374==    by 0xB4C535: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1515)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Address 0x5cb25c320 is 32 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB4DDB9: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2043)
==30374==    by 0xB215CB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1778)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5DA2FB530 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA50C: lock_request_t::status() const (lock_x.h:276)
==30374==    by 0xAF6C6A: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2301)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Address 0x5da2fb530 is 0 bytes inside a block of size 104 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAF5130: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1451)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xB980D2: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2916)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB244458 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C694: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_right(std::_Rb_tree_node_base*) (stl_tree.h:537)
==30374==    by 0xB5C00D: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1144)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A80B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cb244458 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD882D0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5942A: compare_snum_t::operator()(unsigned int const&, unsigned int const&) const (stid_t.h:64)
==30374==    by 0xB59ED0: vol_t::ext_cache_t::ext_info::operator<(vol_t::ext_cache_t::ext_info const&) const (vol.h:498)
==30374==    by 0xB5D578: std::less<vol_t::ext_cache_t::ext_info>::operator()(vol_t::ext_cache_t::ext_info const&, vol_t::ext_cache_t::ext_info const&) const (stl_function.h:235)
==30374==    by 0xB5BFE1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1141)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==  Address 0x5cad882d0 is 32 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD416D0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C6A6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_left(std::_Rb_tree_node_base*) (stl_tree.h:529)
==30374==    by 0xB5BFFB: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1142)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A736: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad416d0 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD416C8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A5EE: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A8EC: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad416c8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD882B8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A603: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==  Address 0x5cad882b8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB244458 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A607: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A80B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cb244458 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD411E4 by thread #51
==30374== Locks held: none
==30374==    at 0xB54FFA: vol_t::page_cache_update(unsigned int, unsigned int) const (vol.cpp:3838)
==30374==    by 0xB5459E: vol_t::_last_extent(unsigned int, unsigned int&, extlink_i&, extlink_t const*&) (vol.cpp:3640)
==30374==    by 0xB54120: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3568)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB59E7D: vol_t::_page_cache_find(unsigned int) const (vol.h:469)
==30374==    by 0xB5A0E9: vol_t::is_primed(unsigned int) const (vol.h:552)
==30374==    by 0xB1FEA1: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Address 0x5cad411e4 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F007: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EE0B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E764: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_create_node(std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:380)
==30374==    by 0xB5D4C5: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:1023)
==30374==    by 0xB5BF77: std::_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned int>, std::_Select1st<std::pair<unsigned int const, unsigned int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, unsigned int> >, std::pair<unsigned int const, unsigned int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B3EF: std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, unsigned int> >, std::pair<unsigned int const, unsigned int> const&) (stl_map.h:648)
==30374==    by 0xB5A95B: std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB59E7C: vol_t::_page_cache_find(unsigned int) const (vol.h:469)
==30374==    by 0xB5A0E9: vol_t::is_primed(unsigned int) const (vol.h:552)
==30374==    by 0xB1FEA1: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD416C8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A5EE: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D52: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++(int) (stl_tree.h:278)
==30374==    by 0xB2101C: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1566)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A8EC: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad416c8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD882B8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A603: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D52: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++(int) (stl_tree.h:278)
==30374==    by 0xB2101C: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1566)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==  Address 0x5cad882b8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB244458 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A607: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D52: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++(int) (stl_tree.h:278)
==30374==    by 0xB2101C: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1566)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A80B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cb244458 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD416D0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C6A6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_left(std::_Rb_tree_node_base*) (stl_tree.h:529)
==30374==    by 0xB5CDE2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::equal_range(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1216)
==30374==    by 0xB5BBC2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1769)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A736: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad416d0 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5B0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5B6B2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::size() const (stl_tree.h:728)
==30374==    by 0xB5BBD6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1770)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5CCC1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Address 0x23fdaf5b0 is 448 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD882C0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536AC7E: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5cad882c0 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD882C8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536AC88: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA3A0: lock_request_t::set_thread(smthread_t*) (lock_x.h:169)
==30374==    by 0xAFAD6E: lock_request_t::~lock_request_t() (lock_x.h:724)
==30374==    by 0xAF6A1D: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2246)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==  Address 0x5cad882c8 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FDAF5B0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C862: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1747)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5CCC1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Address 0x23fdaf5b0 is 448 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB2448D4 by thread #51
==30374== Locks held: none
==30374==    at 0xB49E9B: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB59F8E: vol_t::ext_cache_t::count(unsigned int) (vol.h:517)
==30374==    by 0xB20D8B: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1474)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==  Address 0x5cb2448d4 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F053: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EEB3: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5EA46: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_create_node(std::pair<unsigned int const, int> const&) (stl_tree.h:380)
==30374==    by 0xB5DA4B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, int> const&) (stl_tree.h:1023)
==30374==    by 0xB5C14D: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B587: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_map.h:648)
==30374==    by 0xB5AACD: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB49E0D: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB1FFB2: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:999)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x23FDAF50C by thread #51
==30374== Locks held: none
==30374==    at 0xB4D9CF: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:1959)
==30374==    by 0xB215CB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1778)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB4DF57: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2062)
==30374==    by 0xB215CB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1778)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x23fdaf50c is 284 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x23FDAF50C by thread #51
==30374== Locks held: none
==30374==    at 0xB4DF57: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2062)
==30374==    by 0xB215CB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1778)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB4DF57: vol_t::find_free_exts(unsigned int, unsigned int*, int&, unsigned int) (vol.cpp:2062)
==30374==    by 0xB215CB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1778)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x23fdaf50c is 284 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x13C7BF18 by thread #51
==30374== Locks held: none
==30374==    at 0xAFEAAC: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1676)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xB59857: extlink_p::put(short, extlink_t const&) (extent.h:281)
==30374==    by 0xB48EE3: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:508)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAFEAB5: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1676)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xB59857: extlink_p::put(short, extlink_t const&) (extent.h:281)
==30374==    by 0xB48EE3: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:508)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x13c7bf18 is 0 bytes inside data symbol "_ZZN6page_p6spliceEsttRK6cvec_tE5count"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x13C7BF18 by thread #51
==30374== Locks held: none
==30374==    at 0xAFEAB5: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1676)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xB59857: extlink_p::put(short, extlink_t const&) (extent.h:281)
==30374==    by 0xB48EE3: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:508)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAFEAB5: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1676)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xB59857: extlink_p::put(short, extlink_t const&) (extent.h:281)
==30374==    by 0xB48EE3: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:508)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x13c7bf18 is 0 bytes inside data symbol "_ZZN6page_p6spliceEsttRK6cvec_tE5count"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48EF4: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:510)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48EF4: extlink_i::put(unsigned int, extlink_t const&) (vol.cpp:510)
==30374==    by 0xB52372: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3115)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF548 by thread #51
==30374== Locks held: none
==30374==    at 0xB5B10A: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::begin() (stl_list.h:759)
==30374==    by 0xB55053: vol_t::histo_ext_cache_find(unsigned int) const (vol.cpp:3857)
==30374==    by 0xB551F5: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3887)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536418F: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x23fdaf548 is 344 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD3BD40 by thread #51
==30374== Locks held: none
==30374==    at 0xB55069: vol_t::histo_ext_cache_find(unsigned int) const (vol.cpp:3859)
==30374==    by 0xB551F5: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3887)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==  Address 0x5cad3bd40 is 16 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EDD4: __gnu_cxx::new_allocator<std::_List_node<std::pair<unsigned int, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5E4DD: std::_List_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_get_node() (stl_list.h:334)
==30374==    by 0xB5CFA0: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_create_node(std::pair<unsigned int, unsigned int> const&) (stl_list.h:484)
==30374==    by 0xB5BE30: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1553)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD3BD30 by thread #51
==30374== Locks held: none
==30374==    at 0xB5B153: std::_List_iterator<std::pair<unsigned int, unsigned int> >::operator++() (stl_list.h:155)
==30374==    by 0xB550FA: vol_t::histo_ext_cache_find(unsigned int) const (vol.cpp:3857)
==30374==    by 0xB551F5: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3887)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x153641A7: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x5cad3bd30 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EDD4: __gnu_cxx::new_allocator<std::_List_node<std::pair<unsigned int, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5E4DD: std::_List_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_get_node() (stl_list.h:334)
==30374==    by 0xB5CFA0: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_create_node(std::pair<unsigned int, unsigned int> const&) (stl_list.h:484)
==30374==    by 0xB5BE30: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1553)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD3BD38 by thread #51
==30374== Locks held: none
==30374==    at 0x15364180: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #49
==30374== Locks held: none
==30374==    at 0x15364192: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB22768: io_m::_create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2259)
==30374==  Address 0x5cad3bd38 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EDD4: __gnu_cxx::new_allocator<std::_List_node<std::pair<unsigned int, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5E4DD: std::_List_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_get_node() (stl_list.h:334)
==30374==    by 0xB5CFA0: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_create_node(std::pair<unsigned int, unsigned int> const&) (stl_list.h:484)
==30374==    by 0xB5BE30: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1553)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FDAF548 by thread #51
==30374== Locks held: none
==30374==    at 0x1536418F: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536418F: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x23fdaf548 is 344 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD3BD38 by thread #51
==30374== Locks held: none
==30374==    at 0x15364192: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x153641A3: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x5cad3bd38 is 8 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EDD4: __gnu_cxx::new_allocator<std::_List_node<std::pair<unsigned int, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5E4DD: std::_List_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_get_node() (stl_list.h:334)
==30374==    by 0xB5CFA0: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_create_node(std::pair<unsigned int, unsigned int> const&) (stl_list.h:484)
==30374==    by 0xB5BE30: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1553)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF550 by thread #51
==30374== Locks held: none
==30374==    at 0xB5B26E: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x153641AA: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x23fdaf550 is 352 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CB23EFF0 by thread #51
==30374== Locks held: none
==30374==    at 0x153641A7: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5B153: std::_List_iterator<std::pair<unsigned int, unsigned int> >::operator++() (stl_list.h:155)
==30374==    by 0xB550FA: vol_t::histo_ext_cache_find(unsigned int) const (vol.cpp:3857)
==30374==    by 0xB551F5: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3887)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==  Address 0x5cb23eff0 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EDD4: __gnu_cxx::new_allocator<std::_List_node<std::pair<unsigned int, unsigned int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5E4DD: std::_List_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_get_node() (stl_list.h:334)
==30374==    by 0xB5CFA0: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_create_node(std::pair<unsigned int, unsigned int> const&) (stl_list.h:484)
==30374==    by 0xB5BE30: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1553)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB22768: io_m::_create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2259)
==30374==    by 0xB22398: io_m::create_store(vid_t, int, smlevel_0::store_flag_t, stid_t&, unsigned int, unsigned int) (sm_io.cpp:2180)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FDAF550 by thread #51
==30374== Locks held: none
==30374==    at 0x153641AA: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x153641AA: std::__detail::_List_node_base::_M_unhook() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BDA6: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_erase(std::_List_iterator<std::pair<unsigned int, unsigned int> >) (stl_list.h:1570)
==30374==    by 0xB5B293: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::pop_back() (stl_list.h:1042)
==30374==    by 0xB55282: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3891)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x23fdaf550 is 352 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48317: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374==    by 0xB48C24: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:445)
==30374==    by 0xB4941C: extlink_i::set_next(unsigned int, unsigned int, bool) (vol.cpp:619)
==30374==    by 0xB52484: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3127)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB48317: extlink_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48137: extlink_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (vol.cpp:213)
==30374==    by 0xB48B25: extlink_i::get(unsigned int, extlink_t const*&) (vol.cpp:431)
==30374==    by 0xB48C24: extlink_i::get_copy(unsigned int, extlink_t&) (vol.cpp:445)
==30374==    by 0xB4941C: extlink_i::set_next(unsigned int, unsigned int, bool) (vol.cpp:619)
==30374==    by 0xB52484: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3127)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD882C8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A7B0: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xAFA3A0: lock_request_t::set_thread(smthread_t*) (lock_x.h:169)
==30374==    by 0xAFAD6E: lock_request_t::~lock_request_t() (lock_x.h:724)
==30374==    by 0xAF6A1D: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2246)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==  Address 0x5cad882c8 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD882B0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A75D: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==  Address 0x5cad882b0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD3F1A0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A923: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A923: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad3f1a0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5B0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5CCB5: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5CCC1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Address 0x23fdaf5b0 is 448 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FDAF5B0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5CCC1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5CCC1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1027)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Address 0x23fdaf5b0 is 448 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB2448D4 by thread #51
==30374== Locks held: none
==30374==    at 0xB49E13: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB59F8E: vol_t::ext_cache_t::count(unsigned int) (vol.h:517)
==30374==    by 0xB20D8B: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1474)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==  Address 0x5cb2448d4 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F053: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EEB3: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5EA46: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_create_node(std::pair<unsigned int const, int> const&) (stl_tree.h:380)
==30374==    by 0xB5DA4B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, int> const&) (stl_tree.h:1023)
==30374==    by 0xB5C14D: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B587: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_map.h:648)
==30374==    by 0xB5AACD: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB49E0D: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB1FFB2: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:999)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD42340 by thread #51
==30374== Locks held: none
==30374==    at 0xAE66C9: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:260)
==30374==    by 0xAE48FB: histoid_t::install(pginfo_t const&) (histo.cpp:980)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAE69B3: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:329)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad42340 is 0 bytes inside a block of size 24 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAE3078: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FC52: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:124)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADF55E: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:623)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xADF55E: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:623)
==30374==    by 0xB38974: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2146)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x866140: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:604)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2778 by thread #51
==30374== Locks held: none
==30374==    at 0xACA7FC: lsn_t::lsn_t(lsn_t const&) (lsn.h:254)
==30374==    by 0xBEBC7B: lsn_t::operator+(long) const (lsn.h:282)
==30374==    by 0xBE8E79: log_core::flush(lsn_t, bool) (log_core.cpp:2874)
==30374==    by 0xB65A0A: xct_t::_sync_logbuf(bool) (xct.cpp:2610)
==30374==    by 0xB647EE: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2205)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE71A9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2231)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC460: log_alloc_pages_in_ext (logstub_gen.cpp:186)
==30374==    by 0xB4904B: extlink_i::set_pmap_bits(unsigned int, unsigned int, Pmap const&) (vol.cpp:547)
==30374==    by 0xB4C4B4: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1512)
==30374==  Address 0x23fcf2778 is 56 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27B50: get (w_rc.h:279)
==30374==    by 0xC27B50: ptr (w_rc.h:273)
==30374==    by 0xC27B50: clone (w_rc.h:228)
==30374==    by 0xC27B50: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B50: _acquire (latch.cpp:580)
==30374==    by 0xC27B50: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB8D329: tree_latch::get_for_smo(bool, latch_mode_t, btree_p&, latch_mode_t, bool, btree_p*, latch_mode_t, bool) (btree_impl.cpp:405)
==30374==    by 0xB97829: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2672)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8658E1: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:529)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27B5B: get (w_rc.h:280)
==30374==    by 0xC27B5B: ptr (w_rc.h:273)
==30374==    by 0xC27B5B: clone (w_rc.h:228)
==30374==    by 0xC27B5B: w_rc_t (w_rc.h:162)
==30374==    by 0xC27B5B: _acquire (latch.cpp:580)
==30374==    by 0xC27B5B: latch_t::latch_acquire(latch_mode_t, int) (latch.cpp:362)
==30374==    by 0xB8D329: tree_latch::get_for_smo(bool, latch_mode_t, btree_p&, latch_mode_t, bool, btree_p*, latch_mode_t, bool) (btree_impl.cpp:405)
==30374==    by 0xB97829: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2672)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8658E1: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:529)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB87126: btree_m::_scramble_key(cvec_t*&, cvec_t const&, int, key_type_s const*, bool) (btree.cpp:1679)
==30374==    by 0xB8296A: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:270)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB87126: btree_m::_scramble_key(cvec_t*&, cvec_t const&, int, key_type_s const*, bool) (btree.cpp:1679)
==30374==    by 0xB8296A: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:270)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFD155: page_p::_format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (page.cpp:790)
==30374==    by 0xBC82BB: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1142)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFD155: page_p::_format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (page.cpp:790)
==30374==    by 0xBC82BB: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1142)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDE00B: log_page_splice (logstub_gen.cpp:374)
==30374==    by 0xAFEDD9: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1777)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xB96FA3: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2280)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDE00B: log_page_splice (logstub_gen.cpp:374)
==30374==    by 0xAFEDD9: page_p::splice(short, unsigned short, unsigned short, cvec_t const&) (page.cpp:1777)
==30374==    by 0xB020BC: page_p::overwrite(short, unsigned short, cvec_t const&) (page.h:809)
==30374==    by 0xBC6347: zkeyed_p::set_hdr(cvec_t const&) (zkeyed.cpp:277)
==30374==    by 0xBAA194: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:394)
==30374==    by 0xB96FA3: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2280)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD0EE: log_page_link (logstub_gen.cpp:269)
==30374==    by 0xAFD7F6: page_p::link_up(unsigned int, unsigned int) (page.cpp:992)
==30374==    by 0xBC8DA3: zkeyed_p::link_up(unsigned int, unsigned int) (zkeyed.h:171)
==30374==    by 0xBA17C0: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5392)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD0EE: log_page_link (logstub_gen.cpp:269)
==30374==    by 0xAFD7F6: page_p::link_up(unsigned int, unsigned int) (page.cpp:992)
==30374==    by 0xBC8DA3: zkeyed_p::link_up(unsigned int, unsigned int) (zkeyed.h:171)
==30374==    by 0xBA17C0: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5392)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD316: log_page_insert (logstub_gen.cpp:284)
==30374==    by 0xAFE32A: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1456)
==30374==    by 0xBC5AA5: zkeyed_p::shift(short, zkeyed_p*, bool) (zkeyed.cpp:160)
==30374==    by 0xBAD1C5: btree_p::shift(short, btree_p&) (btree_p.h:318)
==30374==    by 0xBA89D7: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:139)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD316: log_page_insert (logstub_gen.cpp:284)
==30374==    by 0xAFE32A: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1456)
==30374==    by 0xBC5AA5: zkeyed_p::shift(short, zkeyed_p*, bool) (zkeyed.cpp:160)
==30374==    by 0xBAD1C5: btree_p::shift(short, btree_p&) (btree_p.h:318)
==30374==    by 0xBA89D7: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:139)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDEADC: log_btree_insert (logstub_gen.cpp:449)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDEADC: log_btree_insert (logstub_gen.cpp:449)
==30374==    by 0xB988AA: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3033)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB98C07: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3068)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB98C07: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3068)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD533: log_page_remove (logstub_gen.cpp:299)
==30374==    by 0xAFE5D6: page_p::remove_compress(short, int) (page.cpp:1534)
==30374==    by 0xBC5B42: zkeyed_p::shift(short, zkeyed_p*, bool) (zkeyed.cpp:165)
==30374==    by 0xBAD1C5: btree_p::shift(short, btree_p&) (btree_p.h:318)
==30374==    by 0xBA89D7: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:139)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBDD533: log_page_remove (logstub_gen.cpp:299)
==30374==    by 0xAFE5D6: page_p::remove_compress(short, int) (page.cpp:1534)
==30374==    by 0xBC5B42: zkeyed_p::shift(short, zkeyed_p*, bool) (zkeyed.cpp:165)
==30374==    by 0xBAD1C5: btree_p::shift(short, btree_p&) (btree_p.h:318)
==30374==    by 0xBA89D7: btree_p::distribute(btree_p&, bool&, short&, unsigned int, int, bool) (btree_p.cpp:139)
==30374==    by 0xBA1A22: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5403)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB9FDA6: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5074)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB9FDA6: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5074)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4425: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:894)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4425: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:894)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8652B8: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:481)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4077: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:800)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAE4077: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:800)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ---Thread-Announcement------------------------------------------
==30374== 
==30374== Thread #50 was created
==30374==    at 0x15C1233E: clone (clone.S:74)
==30374==    by 0x14ECA199: do_clone.constprop.3 (createthread.c:75)
==30374==    by 0x14ECB8BA: create_thread (createthread.c:245)
==30374==    by 0x14ECB8BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==30374==    by 0x14AB2E0D: pthread_create_WRK (hg_intercepts.c:270)
==30374==    by 0xC446AE: sthread_core_init(sthread_core_t*, void (*)(void*), void*, unsigned int) (sthread_core_pthread.cpp:158)
==30374==    by 0xC3F26D: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:597)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0x846831: tpcc::ShoreTPCCEnv::checkpointer_t::checkpointer_t(tpcc::ShoreTPCCEnv*) (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0x842A65: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:553)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x10670A0 by thread #50
==30374== Locks held: none
==30374==    at 0xC3E76E: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:559)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0xAAFAD0: shore::db_log_smt_t::db_log_smt_t(c_str, shore::ShoreEnv*) (shore_helper_loader.h:89)
==30374==    by 0xAACA6B: shore::ShoreEnv::checkpoint() (shore_env.cpp:931)
==30374==    by 0x83F6BD: tpcc::ShoreTPCCEnv::checkpointer_t::work() (shore_tpcc_env.cpp:105)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x10670a0 is 0 bytes inside data symbol "_ZN9sthread_t8_next_idE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x10670A0 by thread #50
==30374== Locks held: none
==30374==    at 0xC3E777: sthread_t::sthread_t(sthread_t::priority_t, char const*, unsigned int) (sthread.cpp:559)
==30374==    by 0xB46838: smthread_t::smthread_t(sthread_t::priority_t, char const*, int, unsigned int) (smthread.cpp:314)
==30374==    by 0xACAEF1: thread_t::thread_t(c_str const&) (thread.cpp:107)
==30374==    by 0xAAFAD0: shore::db_log_smt_t::db_log_smt_t(c_str, shore::ShoreEnv*) (shore_helper_loader.h:89)
==30374==    by 0xAACA6B: shore::ShoreEnv::checkpoint() (shore_env.cpp:931)
==30374==    by 0x83F6BD: tpcc::ShoreTPCCEnv::checkpointer_t::work() (shore_tpcc_env.cpp:105)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x10670a0 is 0 bytes inside data symbol "_ZN9sthread_t8_next_idE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1FEB6: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB1FEB6: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:926)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE1BF: page_p::next_slot(unsigned int, short&) (page.cpp:1396)
==30374==    by 0xBC1E89: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3454)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xBB8926: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1316)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE1BF: page_p::next_slot(unsigned int, short&) (page.cpp:1396)
==30374==    by 0xBC1E89: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3454)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xBB8926: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1316)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xA9B245: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1134)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xA9B245: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1134)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE04F: page_p::find_slot(unsigned int, short&, short) (page.cpp:1339)
==30374==    by 0xBC1F0F: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3456)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE04F: page_p::find_slot(unsigned int, short&, short) (page.cpp:1339)
==30374==    by 0xBC1F0F: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3456)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBA14FB: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5338)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBA14FB: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5338)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB68FFA: xct_t::check_one_thread_attached() const (xct.cpp:3681)
==30374==    by 0xB0A7A4: prologue_rc_t::prologue_rc_t(prologue_rc_t::xct_state_t, prologue_rc_t::xct_constraint_t, int) (prologue.h:263)
==30374==    by 0xB0F5EC: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1240)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB68FFA: xct_t::check_one_thread_attached() const (xct.cpp:3681)
==30374==    by 0xB0A7A4: prologue_rc_t::prologue_rc_t(prologue_rc_t::xct_state_t, prologue_rc_t::xct_constraint_t, int) (prologue.h:263)
==30374==    by 0xB0F5EC: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1240)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB64B55: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2296)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE560: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1503)
==30374==    by 0xBC7047: zkeyed_p::insert(cvec_t const&, cvec_t const&, short, bool, bool) (zkeyed.cpp:668)
==30374==    by 0xBAAD70: btree_p::insert(cvec_t const&, cvec_t const&, short, unsigned int, bool) (btree_p.cpp:689)
==30374==    by 0xB98742: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3020)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB64B55: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2296)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE560: page_p::insert_expand(short, int, cvec_t const*, bool, bool) (page.cpp:1503)
==30374==    by 0xBC7047: zkeyed_p::insert(cvec_t const&, cvec_t const&, short, bool, bool) (zkeyed.cpp:668)
==30374==    by 0xBAAD70: btree_p::insert(cvec_t const&, cvec_t const&, short, unsigned int, bool) (btree_p.cpp:689)
==30374==    by 0xB98742: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:3020)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBABC47: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBABC47: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBAA213: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:395)
==30374==    by 0xBAA510: btree_p::_set_flag(btree_p::flag_t, bool) (btree_p.cpp:456)
==30374==    by 0xBACFAD: btree_p::set_smo(bool) (btree_p.h:150)
==30374==    by 0xBA1860: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5396)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBAA213: btree_p::set_hdr(unsigned int, int, unsigned int, unsigned short) (btree_p.cpp:395)
==30374==    by 0xBAA510: btree_p::_set_flag(btree_p::flag_t, bool) (btree_p.cpp:456)
==30374==    by 0xBACFAD: btree_p::set_smo(bool) (btree_p.h:150)
==30374==    by 0xBA1860: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5396)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE76C: page_p::remove_compress(short, int) (page.cpp:1567)
==30374==    by 0xBC7FF2: zkeyed_p::remove(short, bool) (zkeyed.cpp:1069)
==30374==    by 0xBA0AE3: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5240)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE76C: page_p::remove_compress(short, int) (page.cpp:1567)
==30374==    by 0xBC7FF2: zkeyed_p::remove(short, bool) (zkeyed.cpp:1069)
==30374==    by 0xBA0AE3: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5240)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74C4D: bf_m::fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:298)
==30374==    by 0xAFD52F: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:891)
==30374==    by 0xBABB41: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CAD413F0 by thread #51
==30374== Locks held: none
==30374==    at 0xAE6734: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:261)
==30374==    by 0xAE48FB: histoid_t::install(pginfo_t const&) (histo.cpp:980)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6734: Heap<pginfo_t, histoid_compare_t>::RemoveN(int) (w_heap.h:261)
==30374==    by 0xAE48FB: histoid_t::install(pginfo_t const&) (histo.cpp:980)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad413f0 is 160 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5A8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536AC96: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AF1E: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==  Address 0x23fdaf5a8 is 440 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB21B9B: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:2004)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB21B9B: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:2004)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA05CD: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5206)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5A8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A7B4: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AF1E: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==  Address 0x23fdaf5a8 is 440 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5DA30B920 by thread #51
==30374== Locks held: none
==30374==    at 0xAF51D8: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1468)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==  Address 0x5da30b920 is 48 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xADEECB: dir_m::access(stid_t const&, sdesc_t*&, w_base_t::lock_mode_t, bool) (dir.cpp:551)
==30374==    by 0xB2C35C: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1016)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD42994 by thread #51
==30374== Locks held: none
==30374==    at 0xB59F8E: vol_t::ext_cache_t::count(unsigned int) (vol.h:517)
==30374==    by 0xB20D8B: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1474)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB49E9B: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==  Address 0x5cad42994 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F053: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EEB3: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5EA46: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_create_node(std::pair<unsigned int const, int> const&) (stl_tree.h:380)
==30374==    by 0xB5DA4B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, int> const&) (stl_tree.h:1023)
==30374==    by 0xB5C14D: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B587: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_map.h:648)
==30374==    by 0xB5AACD: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB49E0D: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB1FFB2: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:999)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5B0 by thread #51
==30374== Locks held: none
==30374==    at 0xB5B6B2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::size() const (stl_tree.h:728)
==30374==    by 0xB5C8B6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1421)
==30374==    by 0xB5BB5A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1478)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5C862: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1747)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==  Address 0x23fdaf5b0 is 448 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FDAF5A8 by thread #51
==30374== Locks held: none
==30374==    at 0xB5C8C8: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1422)
==30374==    by 0xB5BB5A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1478)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AF1E: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==  Address 0x23fdaf5a8 is 440 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FDAF5A8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A7BA: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A607: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D52: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++(int) (stl_tree.h:278)
==30374==    by 0xB2101C: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1566)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==  Address 0x23fdaf5a8 is 440 bytes inside a block of size 504 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB1EDAB: io_m::mount(char const*, vid_t, bool, int) (sm_io.cpp:599)
==30374==    by 0xADC3BF: dir_vol_m::_mount(char const*, vid_t) (dir.cpp:104)
==30374==    by 0xAE0F72: dir_vol_m::mount(char const*, vid_t) (dir.h:177)
==30374==    by 0xAE1383: dir_m::mount(char const*, vid_t) (dir.h:231)
==30374==    by 0xB15196: ss_m::_mount_dev(char const*, unsigned int&, vid_t) (sm.cpp:2712)
==30374==    by 0xB124DA: ss_m::create_vol(char const*, lvid_t const&, long, bool, vid_t, bool, int) (sm.cpp:2060)
==30374==    by 0xAAC44A: shore::ShoreEnv::start_sm() (shore_env.cpp:859)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF9638 by thread #51
==30374== Locks held: none
==30374==    at 0xBE80AF: log_core::_wait_for_expose(log_core::insert_info*, bool) (log_core.cpp:2523)
==30374==    by 0xBE81B0: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2549)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC83AE: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1147)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC270: log_alloc_file_page (logstub_gen.cpp:174)
==30374==    by 0xB203D1: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1123)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x23fcf9638 is 26,616 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF9638 by thread #51
==30374== Locks held: none
==30374==    at 0xBE8138: log_core::_wait_for_expose(log_core::insert_info*, bool) (log_core.cpp:2533)
==30374==    by 0xBE81B0: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2549)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDD6DB: log_page_format (logstub_gen.cpp:311)
==30374==    by 0xBC83AE: zkeyed_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t, cvec_t const&) (zkeyed.cpp:1147)
==30374==    by 0xBAA8C3: btree_p::format(lpid_t const&, page_p::tag_t, unsigned int, smlevel_0::store_flag_t) (btree_p.cpp:531)
==30374==    by 0xBABBD7: btree_p::_fix(bool, lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xBABA67: btree_p::fix(lpid_t const&, latch_mode_t, unsigned int, smlevel_0::store_flag_t, bool, int) (btree_p.cpp:922)
==30374==    by 0xB96EF6: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2272)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE7216: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2237)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDC270: log_alloc_file_page (logstub_gen.cpp:174)
==30374==    by 0xB203D1: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1123)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x23fcf9638 is 26,616 bytes inside a block of size 26,624 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xBEC285: log_core::insert_info_array::insert_info_array(long) (log_core.cpp:1013)
==30374==    by 0xBE27A9: log_core::log_core(long, bool) (log_core.cpp:1118)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB4C56A: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1525)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB4C56A: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1525)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27EE9: get (w_rc.h:279)
==30374==    by 0xC27EE9: ptr (w_rc.h:273)
==30374==    by 0xC27EE9: clone (w_rc.h:228)
==30374==    by 0xC27EE9: w_rc_t (w_rc.h:162)
==30374==    by 0xC27EE9: _acquire (latch.cpp:580)
==30374==    by 0xC27EE9: latch_t::upgrade_if_not_block(bool&) (latch.cpp:380)
==30374==    by 0xB77CB3: bf_core_m::upgrade_latch_if_not_block(bfcb_t*, bool&) (bf_core.cpp:1183)
==30374==    by 0xB6FBE4: bf_m::upgrade_latch(page_s*&, latch_mode_t) (bf.cpp:1381)
==30374==    by 0xB009E3: page_p::upgrade_latch(latch_mode_t) (page.cpp:2569)
==30374==    by 0xB9F7DA: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4974)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC27EF4: get (w_rc.h:280)
==30374==    by 0xC27EF4: ptr (w_rc.h:273)
==30374==    by 0xC27EF4: clone (w_rc.h:228)
==30374==    by 0xC27EF4: w_rc_t (w_rc.h:162)
==30374==    by 0xC27EF4: _acquire (latch.cpp:580)
==30374==    by 0xC27EF4: latch_t::upgrade_if_not_block(bool&) (latch.cpp:380)
==30374==    by 0xB77CB3: bf_core_m::upgrade_latch_if_not_block(bfcb_t*, bool&) (bf_core.cpp:1183)
==30374==    by 0xB6FBE4: bf_m::upgrade_latch(page_s*&, latch_mode_t) (bf.cpp:1381)
==30374==    by 0xB009E3: page_p::upgrade_latch(latch_mode_t) (page.cpp:2569)
==30374==    by 0xB9F7DA: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:4974)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBA0E8D: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5266)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBA0E8D: btree_impl::_propagate_split(btree_p&, lpid_t const&, short, bool&, bool) (btree_impl.cpp:5266)
==30374==    by 0xB9F952: btree_impl::_propagate(lpid_t const&, cvec_t const&, cvec_t const&, lpid_t const&, int, bool, bool) (btree_impl.cpp:5015)
==30374==    by 0xBA1350: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5327)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374==    by 0xB829FA: btree_m::insert(lpid_t const&, int, key_type_s const*, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int) (btree.cpp:275)
==30374==    by 0xB38B43: ss_m::_create_assoc(stid_t const&, vec_t const&, vec_t const&, bool) (smindex.cpp:2156)
==30374==    by 0xB2DCF3: ss_m::create_assoc(stid_t, vec_t const&, vec_t const&, bool) (smindex.cpp:266)
==30374==    by 0xA9B180: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1125)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCF2AE0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xBE2885: log_core::log_core(long, bool) (log_core.cpp:1127)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x23fcf2ae0 is 928 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2820 by thread #51
==30374== Locks held: none
==30374==    at 0xBE6DE9: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2083)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDB698: log_xct_end (logstub_gen.cpp:97)
==30374==    by 0xB61DD5: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1461)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: 1, at address 0x23FCF2AE0
==30374==    at 0xBE97AE: log_core::flush_daemon() (log_core.cpp:2921)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x23fcf2820 is 224 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2830 by thread #51
==30374== Locks held: none
==30374==    at 0xBEBEB2: log_core::start_byte() const (log_core.h:103)
==30374==    by 0xBE6E15: log_core::_acquire_buffer_space_for_each(log_core::insert_info*, long) (log_core.cpp:2084)
==30374==    by 0xBE8BDD: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2776)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDB698: log_xct_end (logstub_gen.cpp:97)
==30374==    by 0xB61DD5: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1461)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA152: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3057)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2830 is 240 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374==  Lock at 0x23FCF2AE0 was first observed
==30374==    at 0x14AB41AA: pthread_mutex_init (hg_intercepts.c:518)
==30374==    by 0xBE2885: log_core::log_core(long, bool) (log_core.cpp:1127)
==30374==    by 0xBDF543: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x23fcf2ae0 is 928 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2820 by thread #51
==30374== Locks held: none
==30374==    at 0xBEB110: log_core::release_space(long) (log_core.cpp:3229)
==30374==    by 0xBD0937: log_m::release_space(long) (log.cpp:752)
==30374==    by 0xB62B36: xct_t::_teardown(bool) (xct.cpp:1656)
==30374==    by 0xB629D7: xct_t::reset() (xct.cpp:1614)
==30374==    by 0xB6B2D6: object_cache_initializing_factory<xct_t>::reset(xct_t*) (block_alloc.h:266)
==30374==    by 0xB6A994: object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::release(xct_t*) (block_alloc.h:316)
==30374==    by 0xB5FD84: xct_t::destroy_xct(xct_t*) (xct.cpp:601)
==30374==    by 0xB14750: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2507)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: 1, at address 0x23FCF2AE0
==30374==    at 0xBE97AE: log_core::flush_daemon() (log_core.cpp:2921)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==    by 0x15C1237C: clone (clone.S:111)
==30374==  Address 0x23fcf2820 is 224 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2780 by thread #51
==30374== Locks held: none
==30374==    at 0xACA8B5: lsn_t::operator<(lsn_t const&) const (lsn.h:285)
==30374==    by 0xB697DC: lsn_t::operator>=(lsn_t const&) const (lsn.h:286)
==30374==    by 0xBE8EBC: log_core::flush(lsn_t, bool) (log_core.cpp:2877)
==30374==    by 0xB65A0A: xct_t::_sync_logbuf(bool) (xct.cpp:2610)
==30374==    by 0xB647EE: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2205)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBEA143: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3056)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2780 is 64 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x23FCF2888 by thread #52
==30374== Locks held: none
==30374==    at 0xBE82FF: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2583)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9F65: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2999)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2888 is 328 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2898 by thread #52
==30374== Locks held: none
==30374==    at 0xBE834C: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2583)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9EB2: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2977)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2898 is 344 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF28A8 by thread #52
==30374== Locks held: none
==30374==    at 0xBE8362: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2583)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9EEB: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2990)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf28a8 is 360 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF28B0 by thread #52
==30374== Locks held: none
==30374==    at 0xBE836D: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2583)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9EF9: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2990)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf28b0 is 368 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2878 by thread #52
==30374== Locks held: none
==30374==    at 0xBD0B2A: lsn_t::advance(int) (lsn.h:279)
==30374==    by 0xBEBC4B: lsn_t::operator+=(long) (lsn.h:281)
==30374==    by 0xBE8395: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2584)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9EC7: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2978)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2878 is 312 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2880 by thread #52
==30374== Locks held: none
==30374==    at 0xBE83B4: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2585)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9ED9: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2979)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2880 is 320 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2888 by thread #52
==30374== Locks held: none
==30374==    at 0xBE83BF: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2586)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9F65: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2999)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2888 is 328 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x23FCF2890 by thread #52
==30374== Locks held: none
==30374==    at 0xBE83D6: log_core::_update_epochs(log_core::insert_info*, bool) (log_core.cpp:2587)
==30374==    by 0xBE8D4E: log_core::insert(logrec_t&, lsn_t*) (log_core.cpp:2847)
==30374==    by 0xBCF27C: log_m::insert(logrec_t&, lsn_t*) (log.cpp:334)
==30374==    by 0xB656B0: xct_t::_flush_logbuf() (xct.cpp:2528)
==30374==    by 0xB663E7: xct_t::give_logbuf(logrec_t*, page_p const*) (xct.cpp:2888)
==30374==    by 0xBDDB11: log_page_reclaim (logstub_gen.cpp:341)
==30374==    by 0xAFDBFF: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1183)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374==    by 0xBB5271: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:428)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xBE9F22: log_core::flush_daemon_work(lsn_t) (log_core.cpp:2993)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==    by 0xBEC1DE: flush_daemon_thread_t::run() (log_core.cpp:926)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==    by 0x14AB2FA6: mythread_wrapper (hg_intercepts.c:234)
==30374==    by 0x14ECB183: start_thread (pthread_create.c:312)
==30374==  Address 0x23fcf2890 is 336 bytes inside a block of size 1,728 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xBDF52C: log_core::new_log_m(log_m*&, int, bool) (log_core.cpp:157)
==30374==    by 0xBCEFC3: log_m::new_log_m(log_m*&, char const*, int, bool) (log.cpp:281)
==30374==    by 0xB0D62F: ss_m::_construct_once(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:822)
==30374==    by 0xB0C8DF: ss_m::ss_m(w_rc_t (*)(xct_i*, xct_t*&, long, long, char const*), w_rc_t (*)(char const*, unsigned int)) (sm.cpp:618)
==30374==    by 0xAAC0A1: shore::ShoreEnv::start_sm() (shore_env.cpp:820)
==30374==    by 0xAAAD67: shore::ShoreEnv::init() (shore_env.cpp:453)
==30374==    by 0xAB1D36: shore::db_init_smt_t::work() (shore_helper_loader.cpp:61)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374==  Block was alloc'd by thread #3
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBB5391: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:440)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xBB5391: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:440)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==    by 0xC44622: pthread_core_start (sthread_core_pthread.cpp:136)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE8E6: page_p::set_byte(short, unsigned char, page_p::logical_operation) (page.cpp:1619)
==30374==    by 0xB5A5F0: extlink_p::set_bytes(short, unsigned int, unsigned int, unsigned char const*, page_p::logical_operation) (vol.cpp:176)
==30374==    by 0xB5A7ED: extlink_i::update_pbucketmap(unsigned int, unsigned int, page_p::logical_operation) (vol.cpp:340)
==30374==    by 0xB4E57E: extlink_i::update_histo(unsigned int, int, unsigned char) (vol.cpp:2188)
==30374==    by 0xB4E317: vol_t::update_ext_histo(lpid_t const&, unsigned char) (vol.cpp:2144)
==30374==    by 0xB24A15: io_m::_update_ext_histo(lpid_t const&, unsigned char) (sm_io.cpp:2786)
==30374==    by 0xB25609: io_m::update_ext_histo(lpid_t const&, unsigned char) (sm_io.h:720)
==30374==    by 0xB00D91: page_p::update_bucket_info() (page.cpp:2716)
==30374==    by 0xAFDB7A: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1176)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAFE8E6: page_p::set_byte(short, unsigned char, page_p::logical_operation) (page.cpp:1619)
==30374==    by 0xB5A5F0: extlink_p::set_bytes(short, unsigned int, unsigned int, unsigned char const*, page_p::logical_operation) (vol.cpp:176)
==30374==    by 0xB5A7ED: extlink_i::update_pbucketmap(unsigned int, unsigned int, page_p::logical_operation) (vol.cpp:340)
==30374==    by 0xB4E57E: extlink_i::update_histo(unsigned int, int, unsigned char) (vol.cpp:2188)
==30374==    by 0xB4E317: vol_t::update_ext_histo(lpid_t const&, unsigned char) (vol.cpp:2144)
==30374==    by 0xB24A15: io_m::_update_ext_histo(lpid_t const&, unsigned char) (sm_io.cpp:2786)
==30374==    by 0xB25609: io_m::update_ext_histo(lpid_t const&, unsigned char) (sm_io.h:720)
==30374==    by 0xB00D91: page_p::update_bucket_info() (page.cpp:2716)
==30374==    by 0xAFDB7A: page_p::reclaim(short, cvec_t const&, bool) (page.cpp:1176)
==30374==    by 0xBC1A45: file_p::fill_slot(short, rectag_t const&, vec_t const&, vec_t const&, int) (file.cpp:3352)
==30374==    by 0xBB96A6: file_m::_create_rec_in_slot(file_p&, short, recflags_t, vec_t const&, vec_t const&, sdesc_t&, bool, rid_t&) (file.cpp:1630)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB545AF: vol_t::_last_extent(unsigned int, unsigned int&, extlink_i&, extlink_t const*&) (vol.cpp:3642)
==30374==    by 0xB54120: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3568)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB545AF: vol_t::_last_extent(unsigned int, unsigned int&, extlink_i&, extlink_t const*&) (vol.cpp:3642)
==30374==    by 0xB54120: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3568)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB54238: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3588)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB54238: vol_t::last_reserved_page(unsigned int, lpid_t&, bool&) (vol.cpp:3588)
==30374==    by 0xB20AA5: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1368)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #12
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xC48ABD: sdisk_unix_t::seek(long, int, long&) (sdisk_unix.cpp:404)
==30374==    by 0xC47AD5: sthread_t::lseek(int, long, int, long&) (io.cpp:1060)
==30374==    by 0xC47B8D: sthread_t::lseek(int, long, int) (io.cpp:1071)
==30374==    by 0xC24578: partition_t::flush(int, lsn_t, char const*, long, long, long, long) (partition.cpp:265)
==30374==    by 0xBE09FE: log_core::_flushX(lsn_t, long, long, long, long) (log_core.cpp:358)
==30374==    by 0xBEA137: log_core::flush_daemon_work(lsn_t) (log_core.cpp:3054)
==30374==    by 0xBE9CB8: log_core::flush_daemon() (log_core.cpp:2942)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA375490 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EC0: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==  Address 0x5da375490 is 16 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA375490 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EDB: w_link_t::detach() (w_listm.cpp:61)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EA8: w_link_t::attach(w_link_t*) (w_listm.cpp:47)
==30374==    by 0xAFBEBA: w_list_t<lock_head_t, mcs_lock>::push(lock_head_t*) (w_list.h:352)
==30374==    by 0xAF478A: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1154)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==  Address 0x5da375490 is 16 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF2585: lock_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:993)
==30374==    by 0xB1DDBA: io_m::lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, page_p*, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:182)
==30374==    by 0xB1DF1D: vol_io_shared::io_lock_force(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**) (sm_io.cpp:210)
==30374==    by 0xB4C310: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1457)
==30374==    by 0xB219DD: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1933)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA2F5B78 by thread #51
==30374== Locks held: none
==30374==    at 0xC58EB7: w_link_t::detach() (w_listm.cpp:54)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EC4: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAFAA82: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==  Address 0x5da2f5b78 is 8 bytes inside a block of size 136 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xAFB3D5: lock_core_m::GetNewLockHeadFromPool(lockid_t const&, w_base_t::lock_mode_t) (lock_core.cpp:1087)
==30374==    by 0xAF4749: lock_core_m::find_lock_head(lockid_t const&, bool) (lock_core.cpp:1149)
==30374==    by 0xAF4B0D: lock_core_m::acquire_lock(xct_t*, lockid_t const&, lock_head_t*, lock_request_t**, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t&) (lock_core.cpp:1272)
==30374==    by 0xAF13D5: lock_m::_lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_mode_t&, w_base_t::lock_mode_t&, w_base_t::lock_duration_t, int, bool, lockid_t**, bool) (lock.cpp:649)
==30374==    by 0xAF24F3: lock_m::lock(lockid_t const&, w_base_t::lock_mode_t, w_base_t::lock_duration_t, int, w_base_t::lock_mode_t*, w_base_t::lock_mode_t*, lockid_t**, bool) (lock.cpp:969)
==30374==    by 0xBC1FFC: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3465)
==30374==    by 0xAE44CD: histoid_t::latch_lock_get_slot(unsigned int&, file_p*, unsigned int, bool, bool&, short&, bool) const (histo.cpp:908)
==30374==    by 0xAE3F4F: histoid_t::find_page(unsigned int, bool&, pginfo_t&, file_p*, short&, bool) const (histo.cpp:768)
==30374==    by 0xBB813D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1125)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CAD3F840 by thread #51
==30374== Locks held: none
==30374==    at 0xB5FA5C: xct_list::remove(xct_link*) (xct.cpp:458)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5F7BD: xct_list::insert(xct_link*) (xct.cpp:367)
==30374==    by 0xB61D46: xct_t::join_xlist() (xct.cpp:1451)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==  Address 0x5cad3f840 is 0 bytes inside a block of size 32 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB61D14: xct_t::join_xlist() (xct.cpp:1450)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB240D38 by thread #51
==30374== Locks held: none
==30374==    at 0xB5FA76: xct_list::remove(xct_link*) (xct.cpp:462)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Address 0x5cb240d38 is 24 bytes inside a block of size 32 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB61D14: xct_t::join_xlist() (xct.cpp:1450)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5CB240D28 by thread #51
==30374== Locks held: none
==30374==    at 0xC3202D: tid_t::operator=(tid_t const&) (tid_t.h:96)
==30374==    by 0xB5FB0B: xct_list::remove(xct_link*) (xct.cpp:487)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x15364192: std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5BE47: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_M_insert(std::_List_iterator<std::pair<unsigned int, unsigned int> >, std::pair<unsigned int, unsigned int> const&) (stl_list.h:1554)
==30374==    by 0xB5B20D: std::list<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::push_front(std::pair<unsigned int, unsigned int> const&) (stl_list.h:975)
==30374==    by 0xB55253: vol_t::histo_ext_cache_update(unsigned int, unsigned int) const (vol.cpp:3889)
==30374==    by 0xB52402: vol_t::create_ext_list_on_same_page(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3118)
==30374==    by 0xB51ECD: vol_t::_append_ext_list(unsigned int, unsigned int, unsigned int, unsigned int const*) (vol.cpp:3048)
==30374==    by 0xB4E089: vol_t::alloc_exts(unsigned int, unsigned int, int, unsigned int const*) (vol.cpp:2107)
==30374==    by 0xB21843: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1901)
==30374==  Address 0x5cb240d28 is 8 bytes inside a block of size 32 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB61D14: xct_t::join_xlist() (xct.cpp:1450)
==30374==    by 0xB6285F: xct_t::init(xct_t::xct_core*, sm_stats_info_t*, lsn_t const&, lsn_t const&) (xct.cpp:1563)
==30374==    by 0xB6B2B8: xct_t* object_cache_initializing_factory<xct_t>::init<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t*, xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:279)
==30374==    by 0xB6A97A: xct_t* object_cache<xct_t, object_cache_initializing_factory<xct_t>, 0ul>::acquire<xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t>(xct_t::xct_core*, sm_stats_info_t*, lsn_t, lsn_t) (block_alloc.h:305)
==30374==    by 0xB5FC9C: xct_t::new_xct(sm_stats_info_t*, int) (xct.cpp:572)
==30374==    by 0xB13F8C: ss_m::_begin_xct(sm_stats_info_t*, tid_t&, int) (sm.cpp:2433)
==30374==    by 0xB0F27D: ss_m::begin_xct(int) (sm.cpp:1207)
==30374==    by 0x8405FB: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:202)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13C82E48 by thread #51
==30374== Locks held: none
==30374==    at 0xC32030: tid_t::operator=(tid_t const&) (tid_t.h:96)
==30374==    by 0xB5FB0B: xct_list::remove(xct_link*) (xct.cpp:487)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC3203E: tid_t::next() const (tid_t.h:104)
==30374==    by 0xB6A277: xct_list::oldest_tid() (xct.cpp:194)
==30374==    by 0xB6025F: xct_t::oldest_tid() (xct.cpp:780)
==30374==    by 0xB02226: page_s::space_t::_check_reserve() (page.cpp:119)
==30374==    by 0xAFC6AE: page_s::space_t::usable(xct_t*) (page.cpp:149)
==30374==    by 0xB019AB: page_p::usable_space() (page.h:553)
==30374==    by 0xAFDEB6: page_p::find_slot(unsigned int, short&, short) (page.cpp:1294)
==30374==    by 0xBC1F0F: file_p::_find_and_lock_free_slot(bool, unsigned int, short&, bool) (file.cpp:3456)
==30374==  Address 0x13c82e48 is 8 bytes inside data symbol "_xlist"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13C82E40 by thread #51
==30374== Locks held: none
==30374==    at 0xB5FB14: xct_list::remove(xct_link*) (xct.cpp:488)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==    by 0xC40048: sthread_t::_start() (sthread.cpp:826)
==30374==    by 0xC3FD35: sthread_t::__start(void*) (sthread.cpp:774)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5FB14: xct_list::remove(xct_link*) (xct.cpp:488)
==30374==    by 0xB62D75: xct_t::change_state(smlevel_1::xct_state_t) (xct.cpp:1727)
==30374==    by 0xB61DC3: xct_t::_xct_ended(xct_t::xct_end_type) (xct.cpp:1459)
==30374==    by 0xB648DB: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2246)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==  Address 0x13c82e40 is 0 bytes inside data symbol "_xlist"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA373BD8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536ACB7: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC58EC4: w_link_t::detach() (w_listm.cpp:56)
==30374==    by 0xAF69FC: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2243)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==  Address 0x5da373bd8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CAD86310 by thread #51
==30374== Locks held: none
==30374==    at 0x1536ACA0: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A78B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cad86310 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5DA373BD0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536AB1B: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x77EF55: w_list_base_t::~w_list_base_t() (w_list.h:234)
==30374==    by 0xAFB7B4: w_list_t<lock_request_t, mcs_lock>::~w_list_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFAA92: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==  Address 0x5da373bd0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5DA373BD0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536AC21: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x77EF55: w_list_base_t::~w_list_base_t() (w_list.h:234)
==30374==    by 0xAFB7B4: w_list_t<lock_request_t, mcs_lock>::~w_list_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFAA92: lock_head_t::~lock_head_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAFB431: lock_core_m::FreeLockHeadToPool(lock_head_t*) (lock_core.cpp:1099)
==30374==    by 0xAF6BB7: lock_core_m::wakeup_waiters(lock_head_t*&, lock_request_t*) (lock_core.cpp:2281)
==30374==    by 0xAF6A72: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2253)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==  Address 0x5da373bd0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD413F0 by thread #51
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x8650C0: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:470)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xAE6A77: Heap<pginfo_t, histoid_compare_t>::AddElement(pginfo_t const&) (w_heap.h:338)
==30374==    by 0xAE4924: histoid_t::install(pginfo_t const&) (histo.cpp:986)
==30374==    by 0xAE3CBD: histoid_t::__find_page_in_heap(bool, unsigned int const&) (histo.cpp:628)
==30374==    by 0xAE496D: histoid_t::update_page(unsigned int const&, unsigned int) (histo.cpp:1005)
==30374==    by 0xAE55CE: histoid_update_t::update() (histo.cpp:1336)
==30374==    by 0xBB52DC: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:434)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cad413f0 is 160 bytes inside a block of size 168 alloc'd
==30374==    at 0x14AAEC20: operator new[](unsigned long) (vg_replace_malloc.c:389)
==30374==    by 0xAE6C1B: Heap<pginfo_t, histoid_compare_t>::Heap(histoid_compare_t const&, int) (w_heap.h:242)
==30374==    by 0xAE5FCC: SearchableHeap<pginfo_t, histoid_compare_t>::SearchableHeap(histoid_compare_t const&, int) (histo.cpp:74)
==30374==    by 0xAE308F: histoid_t::histoid_t(stid_t) (histo.cpp:190)
==30374==    by 0xAE3714: histoid_t::acquire(stid_t const&) (histo.cpp:376)
==30374==    by 0xAE5033: histoid_update_t::histoid_update_t(file_p&) (histo.cpp:1171)
==30374==    by 0xBB492D: file_m::create(stid_t, lpid_t&) (file.cpp:184)
==30374==    by 0xB2B6B7: ss_m::_create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:889)
==30374==    by 0xB27AD6: ss_m::create_file(vid_t, stid_t&, smlevel_3::sm_store_property_t, unsigned int) (smfile.cpp:118)
==30374==    by 0xA9786E: shore::table_desc_t::create_physical_table(ss_m*) (shore_table.cpp:127)
==30374==    by 0x83FB3C: tpcc::ShoreTPCCEnv::table_creator_t::work() (shore_tpcc_env.cpp:122)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD829B8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A7EF: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A603: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==  Address 0x5cad829b8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA35D968 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A813: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A603: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB25D7A: std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>::operator++() (stl_tree.h:270)
==30374==    by 0xB21041: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1576)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==  Address 0x5da35d968 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5DA367804 by thread #51
==30374== Locks held: none
==30374==    at 0xB59F02: vol_t::ext_cache_t::ext_info::operator<(vol_t::ext_cache_t::ext_info const&) const (vol.h:500)
==30374==    by 0xB5D578: std::less<vol_t::ext_cache_t::ext_info>::operator()(vol_t::ext_cache_t::ext_info const&, vol_t::ext_cache_t::ext_info const&) const (stl_function.h:235)
==30374==    by 0xB5BFE1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1141)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB49DDB: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:784)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==  Address 0x5da367804 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA3677E8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A57A: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5E1F4: std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>::operator--() (stl_tree.h:204)
==30374==    by 0xB5C9E3: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1433)
==30374==    by 0xB5BB5A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1478)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #50
==30374== Locks held: none
==30374==    at 0x14ECE7CA: __pthread_mutex_unlock_usercnt (pthread_mutex_unlock.c:51)
==30374==    by 0x14ECE7CA: pthread_mutex_unlock (pthread_mutex_unlock.c:310)
==30374==    by 0x14AB4A38: pthread_mutex_unlock (hg_intercepts.c:710)
==30374==    by 0xC43C0E: critical_section<pthread_mutex_t&>::exit() (sthread.h:1097)
==30374==    by 0xC3E1AE: sthread_t::join(int) (sthread.cpp:438)
==30374==    by 0xB46A6D: smthread_t::join(int) (smthread.cpp:474)
==30374==    by 0xAACAD2: shore::ShoreEnv::checkpoint() (shore_env.cpp:937)
==30374==    by 0x83F6BD: tpcc::ShoreTPCCEnv::checkpointer_t::work() (shore_tpcc_env.cpp:105)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374==  Address 0x5da3677e8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA3677F0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A5AC: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5E1F4: std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>::operator--() (stl_tree.h:204)
==30374==    by 0xB5C9E3: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1433)
==30374==    by 0xB5BB5A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1478)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374== 
==30374== This conflicts with a previous write of size 1 by thread #50
==30374== Locks held: none
==30374==    at 0x14ECD3E8: pthread_mutex_destroy (pthread_mutex_destroy.c:36)
==30374==    by 0x14AB42CA: pthread_mutex_destroy (hg_intercepts.c:556)
==30374==    by 0xC3F84D: sthread_t::~sthread_t() (sthread.cpp:681)
==30374==    by 0xB46C1F: smthread_t::~smthread_t() (smthread.cpp:500)
==30374==    by 0x77F159: thread_t::~thread_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAB3924: shore::db_log_smt_t::~db_log_smt_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAB3953: shore::db_log_smt_t::~db_log_smt_t() (shore_helper_loader.h:94)
==30374==    by 0xAACB0B: shore::ShoreEnv::checkpoint() (shore_env.cpp:939)
==30374==  Address 0x5da3677f0 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5DA364270 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A791: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0x1536A75D: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da364270 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5DA3677E0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A79B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374== 
==30374== This conflicts with a previous read of size 1 by thread #50
==30374== Locks held: none
==30374==    at 0x14AB0D39: my_memcmp (hg_intercepts.c:166)
==30374==    by 0x14AB4211: pthread_mutex_destroy (hg_intercepts.c:548)
==30374==    by 0xC3F84D: sthread_t::~sthread_t() (sthread.cpp:681)
==30374==    by 0xB46C1F: smthread_t::~smthread_t() (smthread.cpp:500)
==30374==    by 0x77F159: thread_t::~thread_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAB3924: shore::db_log_smt_t::~db_log_smt_t() (in /home/dcslab/charlie/ELEDA/charlie/eleda-shore-kits/shore_kits)
==30374==    by 0xAB3953: shore::db_log_smt_t::~db_log_smt_t() (shore_helper_loader.h:94)
==30374==    by 0xAACB0B: shore::ShoreEnv::checkpoint() (shore_env.cpp:939)
==30374==  Address 0x5da3677e0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5CB245794 by thread #51
==30374== Locks held: none
==30374==    at 0xB49E0E: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==    by 0xB27D59: ss_m::create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:152)
==30374==    by 0xA9AD9E: shore::table_man_t::add_tuple(ss_m*, shore::table_row_t*, w_base_t::lock_mode_t, lpid_t const&) (shore_table.cpp:1093)
==30374==    by 0x865702: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:513)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #52
==30374== Locks held: none
==30374==    at 0xB49E13: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==    by 0xBB51B0: file_m::_create_rec(stid_t const&, pg_policy_t, unsigned int, sdesc_t&, vec_t const&, vec_t const&, rid_t&, file_p&, bool) (file.cpp:407)
==30374==    by 0xBB4B85: file_m::create_rec(stid_t const&, unsigned int, vec_t const&, vec_t const&, sdesc_t&, rid_t&, bool) (file.cpp:237)
==30374==    by 0xB2C3EE: ss_m::_create_rec(stid_t const&, vec_t const&, unsigned int, vec_t const&, rid_t&, bool) (smfile.cpp:1020)
==30374==  Address 0x5cb245794 is 36 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5F053: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<unsigned int const, int> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5EEB3: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5EA46: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_create_node(std::pair<unsigned int const, int> const&) (stl_tree.h:380)
==30374==    by 0xB5DA4B: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<unsigned int const, int> const&) (stl_tree.h:1023)
==30374==    by 0xB5C14D: std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_tree.h:1482)
==30374==    by 0xB5B587: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::insert(std::_Rb_tree_iterator<std::pair<unsigned int const, int> >, std::pair<unsigned int const, int> const&) (stl_map.h:648)
==30374==    by 0xB5AACD: std::map<unsigned int, int, compare_snum_t, std::allocator<std::pair<unsigned int const, int> > >::operator[](unsigned int const&) (stl_map.h:469)
==30374==    by 0xB49E0D: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:786)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA34ABB8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A9B9: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5C694: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_right(std::_Rb_tree_node_base*) (stl_tree.h:537)
==30374==    by 0xB5C00D: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1144)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5da34abb8 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5CAD882C0 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A910: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374==    by 0xB978DE: btree_impl::_insert(lpid_t const&, bool, smlevel_0::concurrency_t, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:2698)
==30374== 
==30374== This conflicts with a previous read of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5C6A6: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_left(std::_Rb_tree_node_base*) (stl_tree.h:529)
==30374==    by 0xB5BFFB: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_lower_bound(std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, std::_Rb_tree_node<vol_t::ext_cache_t::ext_info>*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1142)
==30374==    by 0xB5B436: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:879)
==30374==    by 0xB5A9AE: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::lower_bound(vol_t::ext_cache_t::ext_info const&) (stl_set.h:684)
==30374==    by 0xB59F4B: vol_t::ext_cache_t::lower_bound(unsigned int) (vol.h:515)
==30374==    by 0xB20DC1: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1478)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==  Address 0x5cad882c0 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A453: get (w_rc.h:279)
==30374==    by 0xC5A453: ptr (w_rc.h:273)
==30374==    by 0xC5A453: clone (w_rc.h:228)
==30374==    by 0xC5A453: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAF6A83: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2255)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x13E815A0 by thread #51
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xAF6A83: lock_core_m::_release_lock(lock_request_t*, bool) (lock_core.cpp:2255)
==30374==    by 0xAF68DA: lock_core_m::release_lock(xct_lock_info_t*, lockid_t const&, lock_head_t*, lock_request_t*, bool) (lock_core.cpp:2193)
==30374==    by 0xAF73B1: lock_core_m::release_duration(xct_lock_info_t*, w_base_t::lock_duration_t, bool, extid_t*) (lock_core.cpp:2478)
==30374==    by 0xAF201E: lock_m::unlock_duration(w_base_t::lock_duration_t, bool, bool) (lock.cpp:906)
==30374==    by 0xB6487C: xct_t::_commit(unsigned int, lsn_t*) (xct.cpp:2240)
==30374==    by 0xB60694: xct_t::commit(bool, lsn_t*) (xct.cpp:926)
==30374==    by 0xB146C2: ss_m::_commit_xct(sm_stats_info_t*&, bool, lsn_t*) (sm.cpp:2504)
==30374==    by 0xB0F637: ss_m::commit_xct(bool, lsn_t*) (sm.cpp:1243)
==30374==    by 0x8661DD: tpcc::ShoreTPCCEnv::xct_populate_one_unit(int, tpcc::populate_one_unit_input_t&) (shore_tpcc_xct.cpp:608)
==30374==    by 0x8406A3: tpcc::ShoreTPCCEnv::table_builder_t::work() (shore_tpcc_env.cpp:210)
==30374==    by 0xACAFDA: thread_t::run() (thread.cpp:138)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #52
==30374== Locks held: none
==30374==    at 0xC5A45A: get (w_rc.h:280)
==30374==    by 0xC5A45A: ptr (w_rc.h:273)
==30374==    by 0xC5A45A: clone (w_rc.h:228)
==30374==    by 0xC5A45A: w_rc_t::w_rc_t(w_rc_t const&) (w_rc.h:162)
==30374==    by 0xB774AB: bf_core_m::grab(bfcb_t*&, bfpid_t const&, bool&, latch_mode_t, int) (bf_core.cpp:791)
==30374==    by 0xB6F523: bf_m::_fix(int, page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.cpp:1113)
==30374==    by 0xB74CC3: bf_m::conditional_fix(page_s*&, lpid_t const&, unsigned short, latch_mode_t, bool, smlevel_0::store_flag_t&, bool, smlevel_0::store_flag_t) (bf.h:314)
==30374==    by 0xAFD479: page_p::_fix(bool, lpid_t const&, page_p::tag_t, latch_mode_t, unsigned int, smlevel_0::store_flag_t&, bool, int) (page.cpp:885)
==30374==    by 0xBBEA61: alloc_file_page_filter_t::accept(lpid_t const&) (file.cpp:2714)
==30374==    by 0xB4C3A3: vol_t::alloc_pages_in_ext(alloc_page_filter_t*, bool, unsigned int, int, unsigned int, int, lpid_t*, int&, int&, bool&, bool, w_base_t::lock_mode_t) (vol.cpp:1476)
==30374==    by 0xB20C47: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1415)
==30374==  Address 0x13e815a0 is 0 bytes inside data symbol "_ZN6w_rc_t5rc_okE"
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA372AD8 by thread #52
==30374== Locks held: none
==30374==    at 0xB5C694: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_S_right(std::_Rb_tree_node_base*) (stl_tree.h:537)
==30374==    by 0xB5CD72: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::equal_range(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1210)
==30374==    by 0xB5BBC2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1769)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==    by 0xBA1677: btree_impl::__split_page(btree_p&, lpid_t&, bool&, short&, int, int, bool) (btree_impl.cpp:5370)
==30374==    by 0xBA1236: btree_impl::_split_leaf(lpid_t const&, btree_p&, cvec_t const&, cvec_t const&, int, bool) (btree_impl.cpp:5322)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A9B0: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da372ad8 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA363F78 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA14: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A873: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da363f78 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA3221B8 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA51: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A89F: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da3221b8 is 8 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 8 at 0x5DA357F70 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA55: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A97D: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da357f70 is 16 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 8 at 0x5DA357F78 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA5F: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 8 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A89B: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da357f78 is 24 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==    by 0xBB884D: file_m::_find_slotted_page_with_space(stid_t const&, pg_policy_t, sdesc_t&, unsigned int, file_p&, short&, bool) (file.cpp:1301)
==30374==  Block was alloc'd by thread #51
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during read of size 4 at 0x5DA3221B0 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA67: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A867: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da3221b0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5CB244440 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA6C: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A867: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5cb244440 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB4A2B8: vol_t::prime_cache(unsigned int) (vol.cpp:877)
==30374==    by 0xB1FECE: io_m::_prime_cache(vol_t*, unsigned int) (sm_io.cpp:929)
==30374==    by 0xB20226: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1069)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Block was alloc'd by thread #49
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Possible data race during write of size 4 at 0x5DA3221B0 by thread #52
==30374== Locks held: none
==30374==    at 0x1536AA6F: std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5C83A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1745)
==30374==    by 0xB5BB1A: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:830)
==30374==    by 0xB5E454: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_erase_aux(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:1760)
==30374==    by 0xB5CEF2: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>, std::_Rb_tree_iterator<vol_t::ext_cache_t::ext_info>) (stl_tree.h:848)
==30374==    by 0xB5BBF1: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1771)
==30374==    by 0xB5AF56: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::erase(vol_t::ext_cache_t::ext_info const&) (stl_set.h:582)
==30374==    by 0xB49E8A: vol_t::ext_cache_t::erase(unsigned int, unsigned int) (vol.cpp:803)
==30374==    by 0xB25A25: autoerase_t::~autoerase_t() (sm_io.cpp:1237)
==30374==    by 0xB21494: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1613)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374== 
==30374== This conflicts with a previous write of size 4 by thread #51
==30374== Locks held: none
==30374==    at 0x1536A867: std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==30374==    by 0xB5CCB0: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1025)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB2032C: io_m::alloc_a_file_page(alloc_page_filter_t*, stid_t const&, lpid_t const&, lpid_t&, w_base_t::lock_mode_t, bool) (sm_io.cpp:1086)
==30374==    by 0xBBECBE: file_m::_alloc_page(stid_t, lpid_t const&, lpid_t&, file_p&, bool) (file.cpp:2805)
==30374==  Address 0x5da3221b0 is 0 bytes inside a block of size 40 alloc'd
==30374==    at 0x14AAE500: operator new(unsigned long) (vg_replace_malloc.c:324)
==30374==    by 0xB5EFA7: __gnu_cxx::new_allocator<std::_Rb_tree_node<vol_t::ext_cache_t::ext_info> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==30374==    by 0xB5ED07: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_get_node() (stl_tree.h:370)
==30374==    by 0xB5E246: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_create_node(vol_t::ext_cache_t::ext_info const&) (stl_tree.h:380)
==30374==    by 0xB5CC91: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1023)
==30374==    by 0xB5BB83: std::_Rb_tree<vol_t::ext_cache_t::ext_info, vol_t::ext_cache_t::ext_info, std::_Identity<vol_t::ext_cache_t::ext_info>, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::_M_insert_unique_(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_tree.h:1482)
==30374==    by 0xB5AF16: std::set<vol_t::ext_cache_t::ext_info, std::less<vol_t::ext_cache_t::ext_info>, std::allocator<vol_t::ext_cache_t::ext_info> >::insert(std::_Rb_tree_const_iterator<vol_t::ext_cache_t::ext_info>, vol_t::ext_cache_t::ext_info const&) (stl_set.h:498)
==30374==    by 0xB49DF6: vol_t::ext_cache_t::insert(unsigned int, unsigned int) (vol.cpp:785)
==30374==    by 0xB21ACB: io_m::_alloc_pages_with_vol_mutex(alloc_page_filter_t*, vol_t*, stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1971)
==30374==    by 0xB20082: io_m::_alloc_pages(stid_t const&, lpid_t const&, int, int&, lpid_t*, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1007)
==30374==    by 0xB2069F: io_m::alloc_a_page(stid_t const&, lpid_t const&, lpid_t&, bool, w_base_t::lock_mode_t, bool) (sm_io.cpp:1169)
==30374==    by 0xB96E61: btree_impl::_alloc_page(lpid_t const&, short, lpid_t const&, btree_p&, unsigned int, bool, bool, smlevel_0::store_flag_t, bool) (btree_impl.cpp:2264)
==30374==  Block was alloc'd by thread #52
==30374== 
==30374== ----------------------------------------------------------------
==30374== 
==30374== Thread #1: Exiting thread still holds 2 locks
==30374==    at 0x14ECC65B: pthread_join (pthread_join.c:92)
==30374==    by 0x14AB0F65: pthread_join_WRK (hg_intercepts.c:335)
==30374==    by 0xC447E4: sthread_core_exit(sthread_core_t*, bool&) (sthread_core_pthread.cpp:203)
==30374==    by 0xC3E1CF: sthread_t::join(int) (sthread.cpp:454)
==30374==    by 0xB46A6D: smthread_t::join(int) (smthread.cpp:474)
==30374==    by 0x842DBA: tpcc::ShoreTPCCEnv::loaddata() (shore_tpcc_env.cpp:574)
==30374==    by 0x77D18F: main (shore_kits.cpp:875)
==30374== 
==30374== 
==30374== For counts of detected and suppressed errors, rerun with: -v
==30374== Use --history-level=approx or =none to gain increased speed, at
==30374== the cost of reduced accuracy of conflicting-access information
==30374== ERROR SUMMARY: 2610726 errors from 508 contexts (suppressed: 250804 from 413)
