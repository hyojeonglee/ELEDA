cscope 15 /home/dcslab/charlie/ELEDA/charlie/eleda-shore-mt               0003521804
	@config/shore-config.h

20 
	#EXPENSIVE_STATS


	)

24 #i‡
deföed
(
__GNUC__
) && __GNUC__==2

25 #i‡
deföed
(
__GNUC_MINOR__
) && __GNUC_MINOR__==96

26 
	#GCC_BROKEN_WARNINGS


	)

35 #i‡
deföed
(
__GNUC__
) && (__GNUC__==3)

36 
	#GCC_VER_3_WARNINGS


	)

47 
	#HAVE_CLOCK_GETTIME
 1

	)

51 
	#HAVE_DECL_MAP_ALIGN
 0

	)

55 
	#HAVE_DECL_MAP_ANON
 1

	)

59 
	#HAVE_DECL_MAP_ANONYMOUS
 1

	)

63 
	#HAVE_DECL_MAP_FIXED
 1

	)

67 
	#HAVE_DECL_MAP_NORESERVE
 1

	)

71 
	#HAVE_DIRENT_H
 1

	)

77 
	#HAVE_FCNTL_H
 1

	)

80 
	#HAVE_GCC_ATOMIC_BUILTINS
 1

	)

86 
	#HAVE_GETOPT
 1

	)

92 
	#HAVE_GETTIMEOFDAY
 1

	)

98 
	#HAVE_INTTYPES_H
 1

	)

101 
	#HAVE_LIBRT
 1

	)

107 
	#HAVE_MEMALIGN
 1

	)

116 
	#HAVE_MEMORY_H
 1

	)

122 
	#HAVE_NETDB_H
 1

	)

125 
	#HAVE_NETINET_IN_H
 1

	)

128 
	#HAVE_POSIX_MEMALIGN
 1

	)

131 
	#HAVE_POSIX_SPAWN
 1

	)

134 
	#HAVE_PTHREAD
 1

	)

137 
	#HAVE_PTHREAD_ATTR_GETSTACK
 1

	)

140 
	#HAVE_PTHREAD_ATTR_GETSTACKSIZE
 1

	)

143 
	#HAVE_PTHREAD_BARRIERS
 1

	)

146 
	#HAVE_PTHREAD_PRIO_INHERIT
 1

	)

149 
	#HAVE_PTRDIFF_T
 1

	)

152 
	#HAVE_SEMAPHORE_H
 1

	)

158 
	#HAVE_STDINT_H
 1

	)

161 
	#HAVE_STDLIB_H
 1

	)

164 
	#HAVE_STRERROR
 1

	)

167 
	#HAVE_STRINGS_H
 1

	)

170 
	#HAVE_STRING_H
 1

	)

173 
	#HAVE_STRUCT_STAT_ST_BLKSIZE
 1

	)

180 
	#HAVE_SYS_IOCTL_H
 1

	)

187 
	#HAVE_SYS_PARAM_H
 1

	)

190 
	#HAVE_SYS_SOCKET_H
 1

	)

193 
	#HAVE_SYS_STAT_H
 1

	)

196 
	#HAVE_SYS_TYPES_H
 1

	)

199 
	#HAVE_TIME_H
 1

	)

208 
	#HAVE_UNAME
 1

	)

211 
	#HAVE_UNISTD_H
 1

	)

223 
	#HAVE_VALLOC
 1

	)

226 
	#HAVE_VPRINTF
 1

	)

232 
	#HUGEPAGESIZE
 2048

	)

259 
	#IS_AMD64_LINUX
 1

	)

298 
	#IS_LINUX
 1

	)

349 #i‚de‡
IS_NT


350 
	#IS_UNIX
 1

	)

358 
	#IS_X86_64_LINUX
 1

	)

364 
	#Löux


	)

382 
	#PACKAGE
 "sh‹e-°‹age-m™agî"

	)

385 
	#PACKAGE_BUGREPORT
 "No⁄e._Sadly-_this_is_unsuµ‹ãd_so·w¨e."

	)

388 
	#PACKAGE_NAME
 "Sh‹e-St‹age-M™agî"

	)

391 
	#PACKAGE_STRING
 "Sh‹e-St‹age-M™agî 7.0.0"

	)

394 
	#PACKAGE_TARNAME
 "sh‹e-°‹age-m™agî"

	)

397 
	#PACKAGE_URL
 ""

	)

400 
	#PACKAGE_VERSION
 "7.0.0"

	)

413 
	#SIZEOF_PTHREAD_T
 8

	)

419 #i‚de‡
SM_PAGESIZE


420 
	#SM_PAGESIZE
 8192

	)

431 
	#STDC_HEADERS
 1

	)

443 
	#TRACECODE
 0

	)

449 
	#VERSION
 "7.0.0"

	)

456 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


457 #i‡
deföed
 
__BIG_ENDIAN__


458 
	#WORDS_BIGENDIAN
 1

	)

461 #i‚de‡
WORDS_BIGENDIAN


467 
	#W_DEBUG_LEVEL
 0

	)

470 
	#W_DEBUG_RC
 1

	)

472 #i‡(
deföed
(
_LARGEFILE_SOURCE
Ë&& deföed(
_FILE_OFFSET_BITS
)Ë|| deföed(
ARCH_LP64
)

473 
	#LARGEFILE_AWARE


	)

477 #i‡
TRACECODE
==1

478 
	#W_TRACE


	)

483 
	#W_USE_COMPAT_STRSTREAM


	)

490 
	#amd64
 1

	)

496 #i‡
deföed
(
hpux
Ë&& deföed(
hp9000s800
)

506 #i‡
deföed
(
mùs
Ë&& deföed(
u…rix
)

522 #i‡
deföed
(
sgi
)

540 
	#x86_64


	)

	@src/api.h

	@src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h

27 #i‚de‡
_IA32_SYS_ASM_LINKAGE_H


28 
	#_IA32_SYS_ASM_LINKAGE_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 
	~"öãl/sys/°ack.h
"

33 
	~"öãl/sys/å≠.h
"

35 #ifdef 
__˝lu•lus


39 #ifde‡
_ASM


49 #i‡!
deföed
(
__GNUC_AS__
)

53 
	#D16
 
d©a16
;

	)

54 
	#A16
 
addr16
;

	)

59 
	#_CONST
(c⁄°Ë[c⁄°]

	)

60 
	#_BITNOT
(c⁄°Ë-1!
	`_CONST
(c⁄°)

	)

61 
	#_MUL
(
a
, 
b
Ë
	`_CONST
◊ \* b)

	)

69 
	#D16
 .
byã
 0x66;

	)

70 
	#A16
 .
byã
 0x67;

	)

72 
	#_CONST
(c⁄°Ë(c⁄°)

	)

73 
	#_BITNOT
(c⁄°Ë~
	`_CONST
(c⁄°)

	)

74 
	#_MUL
(
a
, 
b
Ë
	`_CONST
◊ * b)

	)

82 #i‡
deföed
(
__amd64
)

83 
	#CLONGSHIFT
 3

	)

84 
	#CLONGSIZE
 8

	)

85 
	#CLONGMASK
 7

	)

86 #ñi‡
deföed
(
__i386
)

87 
	#CLONGSHIFT
 2

	)

88 
	#CLONGSIZE
 4

	)

89 
	#CLONGMASK
 3

	)

95 
	#CPTRSHIFT
 
CLONGSHIFT


	)

96 
	#CPTRSIZE
 
CLONGSIZE


	)

97 
	#CPTRMASK
 
CLONGMASK


	)

99 #i‡
CPTRSIZE
 !(1 << 
CPTRSHIFT
Ë|| 
CLONGSIZE
 !(1 << 
CLONGSHIFT
)

103 #i‡
CPTRMASK
 !(
CPTRSIZE
 - 1Ë|| 
CLONGMASK
 !(
CLONGSIZE
 - 1)

107 
	#ASM_ENTRY_ALIGN
 16

	)

113 
	#XMM_SIZE
 16

	)

114 
	#XMM_ALIGN
 16

	)

116 #i‡
deföed
(
__amd64
)

118 
	#SAVE_XMM_PROLOG
(
§eg
, 
ƒeg
) \

119 
subq
 
	`$_CONST
(
	`_MUL
(
XMM_SIZE
, 
ƒeg
)), %
r•
; \

120 
movq
 %
r•
, 
§eg


	)

122 
	#RSTOR_XMM_EPILOG
(
§eg
, 
ƒeg
) \

123 
addq
 
	`$_CONST
(
	`_MUL
(
XMM_SIZE
, 
ƒeg
)), %
r•


	)

125 #ñi‡
deföed
(
__i386
)

127 
	#SAVE_XMM_PROLOG
(
§eg
, 
ƒeg
) \

128 
subl
 
	`$_CONST
(
	`_MUL
(
XMM_SIZE
, 
ƒeg
Ë+ 
XMM_ALIGN
), %
e•
; \

129 
movl
 %
e•
, 
§eg
; \

130 
addl
 
$XMM_ALIGN
, 
§eg
; \

131 
™dl
 
	`$_BITNOT
(
XMM_ALIGN
-1), 
§eg


	)

133 
	#RSTOR_XMM_EPILOG
(
§eg
, 
ƒeg
) \

134 
addl
 
	`$_CONST
(
	`_MUL
(
XMM_SIZE
, 
ƒeg
Ë+ 
XMM_ALIGN
), %
e•
;

	)

142 #ifde‡
GPROF


144 
	#MCOUNT
(
x
) \

145 
pushl
 %
ebp
; \

146 
movl
 %
e•
, %
ebp
; \

147 
ˇŒ
 
_mcou¡
; \

148 
p›l
 %
ebp


	)

152 #ifde‡
PROF


154 
	#MCOUNT
(
x
) \

156 .
lcomm
 .
L_
 
x
 1, 4, 4; \

157 
pushl
 %
ebp
; \

158 
movl
 %
e•
, %
ebp
; \

160 
movl
 
$
.
L_
 
x
 1, %
edx
; \

161 
ˇŒ
 
_mcou¡
; \

162 
p›l
 %
ebp


	)

169 #i‡!
deföed
(
PROF
Ë&& !deföed(
GPROF
)

170 
	#MCOUNT
(
x
)

	)

173 
	#RTMCOUNT
(
x
Ë
	`MCOUNT
(x)

	)

181 
	#ANSI_PRAGMA_WEAK
(
sym
, 
°y≥
) \

183 .
wók
 
_
 
sym
; \

185 .
ty≥
 
_
 
sym
, @
°y≥
; \

187 
_
 
sym
 = 
	)
sym

193 
	#ANSI_PRAGMA_WEAK2
(
sym1
, 
sym2
, 
°y≥
) \

194 .
wók
 
sym1
; \

195 .
ty≥
 
sym1
, @
°y≥
; \

196 
sym1
 = 
sym2


	)

203 
	#ENTRY
(
x
) \

204 .
ãxt
; \

205 .
Æign
 
ASM_ENTRY_ALIGN
; \

206 .
globl
 
x
; \

207 .
ty≥
 
x
, @
fun˘i⁄
; \

208 
x
: 
	`MCOUNT
(x)

	)

210 
	#ENTRY_NP
(
x
) \

211 .
ãxt
; \

212 .
Æign
 
ASM_ENTRY_ALIGN
; \

213 .
globl
 
x
; \

214 .
ty≥
 
x
, @
fun˘i⁄
; \

215 
x
:

	)

217 
	#RTENTRY
(
x
) \

218 .
ãxt
; \

219 .
Æign
 
ASM_ENTRY_ALIGN
; \

220 .
globl
 
x
; \

221 .
ty≥
 
x
, @
fun˘i⁄
; \

222 
x
: 
	`RTMCOUNT
(x)

	)

227 
	#ENTRY2
(
x
, 
y
) \

228 .
ãxt
; \

229 .
Æign
 
ASM_ENTRY_ALIGN
; \

230 .
globl
 
x
, 
y
; \

231 .
ty≥
 
x
, @
fun˘i⁄
; \

232 .
ty≥
 
y
, @
fun˘i⁄
; \

234 
x
: ; \

235 
y
: 
	`MCOUNT
(
x
)

	)

237 
	#ENTRY_NP2
(
x
, 
y
) \

238 .
ãxt
; \

239 .
Æign
 
ASM_ENTRY_ALIGN
; \

240 .
globl
 
x
, 
y
; \

241 .
ty≥
 
x
, @
fun˘i⁄
; \

242 .
ty≥
 
y
, @
fun˘i⁄
; \

244 
x
: ; \

245 
y
:

	)

251 
	#ALTENTRY
(
x
) \

252 .
globl
 
x
; \

253 .
ty≥
 
x
, @
fun˘i⁄
; \

254 
x
:

	)

266 
	#DGDEF2
(
«me
, 
sz
) \

267 .
d©a
; \

268 .
globl
 
«me
; \

269 .
ty≥
 
«me
, @
obje˘
; \

270 .
size
 
«me
, 
sz
; \

271 
«me
:

	)

273 
	#DGDEF3
(
«me
, 
sz
, 
Ægn
) \

274 .
d©a
; \

275 .
Æign
 
Ægn
; \

276 .
globl
 
«me
; \

277 .
ty≥
 
«me
, @
obje˘
; \

278 .
size
 
«me
, 
sz
; \

279 
«me
:

	)

281 
	#DGDEF
(
«me
Ë
	`DGDEF3
“ame, 4, 4)

	)

286 
	#SET_SIZE
(
x
) \

287 .
size
 
x
, [.-x]

	)

292 #i‡
deföed
(
__amd64
)

295 
	#NWORD
 
quad


	)

297 #ñi‡
deföed
(
__i386
)

299 
	#NWORD
 

	)

305 #ifdef 
__˝lu•lus


	@src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h

27 #i‚de‡
_IA32_SYS_STACK_H


28 
	#_IA32_SYS_STACK_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #i‡!
deföed
(
_ASM
)

34 
	~<sys/ty≥s.h
>

38 #ifdef 
__˝lu•lus


64 
	#STACK_ALIGN32
 4

	)

65 
	#STACK_ENTRY_ALIGN32
 4

	)

66 
	#STACK_BIAS32
 0

	)

67 
	#SA32
(
x
Ë(((x)+(
STACK_ALIGN32
-1)Ë& ~(STACK_ALIGN32-1))

	)

68 
	#STACK_RESERVE32
 0

	)

69 
	#MINFRAME32
 0

	)

71 #i‡
deföed
(
__amd64
)

104 
	#STACK_ALIGN64
 16

	)

105 
	#STACK_ENTRY_ALIGN64
 8

	)

106 
	#STACK_BIAS64
 0

	)

107 
	#SA64
(
x
Ë(((x)+(
STACK_ALIGN64
-1)Ë& ~(STACK_ALIGN64-1))

	)

108 
	#STACK_RESERVE64
 128

	)

109 
	#MINFRAME64
 0

	)

111 
	#STACK_ALIGN
 
STACK_ALIGN64


	)

112 
	#STACK_ENTRY_ALIGN
 
STACK_ENTRY_ALIGN64


	)

113 
	#STACK_BIAS
 
STACK_BIAS64


	)

114 
	#SA
(
x
Ë
	`SA64
(x)

	)

115 
	#STACK_RESERVE
 
STACK_RESERVE64


	)

116 
	#MINFRAME
 
MINFRAME64


	)

118 #ñi‡
deföed
(
__i386
)

120 
	#STACK_ALIGN
 
STACK_ALIGN32


	)

121 
	#STACK_ENTRY_ALIGN
 
STACK_ENTRY_ALIGN32


	)

122 
	#STACK_BIAS
 
STACK_BIAS32


	)

123 
	#SA
(
x
Ë
	`SA32
(x)

	)

124 
	#STACK_RESERVE
 
STACK_RESERVE32


	)

125 
	#MINFRAME
 
MINFRAME32


	)

129 #i‡
deföed
(
_KERNEL
Ë&& !deföed(
_ASM
)

131 #i‡
deföed
(
DEBUG
)

132 #i‡
STACK_ALIGN
 == 4

133 
	#ASSERT_STACK_ALIGNED
() \

135 
uöt32_t
 
__tmp
; \

136 
	`ASSERT
((((
uöçå_t
)&
__tmp
Ë& (
STACK_ALIGN
 - 1)) == 0); \

137 }

	)

138 #ñi‡(
STACK_ALIGN
 =16Ë&& (
_LONG_DOUBLE_ALIGNMENT
 == 16)

139 
	#ASSERT_STACK_ALIGNED
() \

141 
__tmp
; \

142 
	`ASSERT
((((
uöçå_t
)&
__tmp
Ë& (
STACK_ALIGN
 - 1)) == 0); \

143 }

	)

146 
	#ASSERT_STACK_ALIGNED
()

	)

149 
ªgs
;

151 
åa˚ªgs
(
ªgs
 *);

152 
åa˚back
(
ˇddr_t
);

156 
	#STACK_GROWTH_DOWN


	)

158 #ifdef 
__˝lu•lus


	@src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h

30 #i‚de‡
_IA32_SYS_TRAP_H


31 
	#_IA32_SYS_TRAP_H


	)

33 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

35 #ifdef 
__˝lu•lus


43 
	#T_ZERODIV
 0x0

	)

44 
	#T_SGLSTP
 0x1

	)

45 
	#T_NMIFLT
 0x2

	)

46 
	#T_BPTFLT
 0x3

	)

47 
	#T_OVFLW
 0x4

	)

48 
	#T_BOUNDFLT
 0x5

	)

49 
	#T_ILLINST
 0x6

	)

50 
	#T_NOEXTFLT
 0x7

	)

51 
	#T_DBLFLT
 0x8

	)

52 
	#T_EXTOVRFLT
 0x9

	)

53 
	#T_TSSFLT
 0x®

	)

54 
	#T_SEGFLT
 0xb

	)

55 
	#T_STKFLT
 0x¯

	)

56 
	#T_GPFLT
 0xd

	)

57 
	#T_PGFLT
 0xê

	)

58 
	#T_EXTERRFLT
 0x10

	)

59 
	#T_ALIGNMENT
 0x11

	)

60 
	#T_MCE
 0x12

	)

61 
	#T_SIMDFPE
 0x13

	)

62 
	#T_DBGENTR
 0x14

	)

63 
	#T_ENDPERR
 0x21

	)

64 
	#T_ENOEXTFLT
 0x20

	)

65 
	#T_FASTTRAP
 0xd2

	)

66 
	#T_SYSCALLINT
 0x91

	)

67 
	#T_DTRACE_RET
 0x7‡

	)

68 
	#T_INT80
 0x80

	)

69 
	#T_SOFTINT
 0x50fd

	)

74 
	#T_INTERRUPT
 0x100

	)

75 
	#T_FAULT
 0x200

	)

76 
	#T_AST
 0x400

	)

77 
	#T_SYSCALL
 0x180

	)

84 
	#PF_ERR_MASK
 0x01

	)

85 
	#PF_ERR_PAGE
 0x00

	)

86 
	#PF_ERR_PROT
 0x01

	)

87 
	#PF_ERR_WRITE
 0x02

	)

88 
	#PF_ERR_USER
 0x04

	)

90 
	#PF_ERR_EXEC
 0x10

	)

95 
	#T_FNULL
 0

	)

96 
	#T_FGETFP
 1

	)

97 
	#T_FSETFP
 2

	)

98 
	#T_GETHRTIME
 3

	)

99 
	#T_GETHRVTIME
 4

	)

100 
	#T_GETHRESTIME
 5

	)

101 
	#T_GETLGRP
 6

	)

103 
	#T_LASTFAST
 6

	)

105 #ifdef 
__˝lu•lus


	@src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/asm_linkage.h

27 #i‚de‡
_SYS_ASM_LINKAGE_H


28 
	#_SYS_ASM_LINKAGE_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #i‡
deföed
(
__i386
Ë|| deföed(
__amd64
)

34 
	~<ü32/sys/asm_lökage.h
>

	@src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/stack.h

27 #i‚de‡
_SYS_STACK_H


28 
	#_SYS_STACK_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #i‡
deföed
(
__i386
Ë|| deföed(
__amd64
)

34 
	~<ü32/sys/°ack.h
>

	@src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/trap.h

27 #i‚de‡
_SYS_TRAP_H


28 
	#_SYS_TRAP_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #i‡
deföed
(
__i386
Ë|| deföed(
__amd64
)

34 
	~<ü32/sys/å≠.h
>

	@src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h

27 #i‚de‡
_SYS_ASM_LINKAGE_H


28 
	#_SYS_ASM_LINKAGE_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 
	~<sys/°ack.h
>

33 
	~<sys/å≠.h
>

35 #ifdef 
__˝lu•lus


39 #ifde‡
_ASM


45 #ifde‡
__•¨cv9


46 
	#CPTRSHIFT
 3

	)

47 
	#CLONGSHIFT
 3

	)

49 
	#CPTRSHIFT
 2

	)

50 
	#CLONGSHIFT
 2

	)

52 
	#CPTRSIZE
 (1<<
CPTRSHIFT
)

	)

53 
	#CLONGSIZE
 (1<<
CLONGSHIFT
)

	)

54 
	#CPTRMASK
 (
CPTRSIZE
 - 1)

	)

55 
	#CLONGMASK
 (
CLONGSIZE
 - 1)

	)

60 
	#RODATA
 ".rod©a"

	)

66 #ifde‡
GPROF


68 
	#MCOUNT_SIZE
 (4*4Ë

	)

69 
	#MCOUNT
(
x
) \

70 
ßve
 %
•
, -
	`SA
(
MINFRAME
), %sp; \

71 
ˇŒ
 
_mcou¡
; \

72 
n›
; \

73 
ª°‹e
;

	)

77 #ifde‡
PROF


79 #i‡
deföed
(
__•¨cv9
)

81 
	#MCOUNT_SIZE
 (9*4Ë

	)

82 
	#MCOUNT
(
x
) \

83 
ßve
 %
•
, -
	`SA
(
MINFRAME
), %sp; \

85 
£thi
 %
	`hh
(.
L_
 
x
 1), %
o0
; \

87 
£thi
 %
	`lm
(.
L_
 
x
 1), %
o1
; \

89 
‹
 %
o0
, %
	`hm
(.
L_
 
x
 1), %o0; \

91 
‹
 %
o1
, %
	`lo
(.
L_
 
x
 1), %o1; \

92 
¶lx
 %
o0
, 32, %o0; \

93 
ˇŒ
 
_mcou¡
; \

94 
‹
 %
o0
, %
o1
, %o0; \

95 
ª°‹e
; \

97 .
comm⁄
 .
L_
 
x
 1, 8, 8

	)

101 
	#MCOUNT_SIZE
 (5*4Ë

	)

102 
	#MCOUNT
(
x
) \

103 
ßve
 %
•
, -
	`SA
(
MINFRAME
), %sp; \

105 
£thi
 %
	`hi
(.
L_
 
x
 1), %
o0
; \

106 
ˇŒ
 
_mcou¡
; \

108 
‹
 %
o0
, %
	`lo
(.
L_
 
x
 1), %o0; \

109 
ª°‹e
; \

111 .
comm⁄
 .
L_
 
x
 1, 4, 4

	)

120 #i‡!
deföed
(
PROF
Ë&& !deföed(
GPROF
)

121 
	#MCOUNT_SIZE
 0

	)

122 
	#MCOUNT
(
x
)

	)

125 
	#RTMCOUNT
(
x
Ë
	`MCOUNT
(x)

	)

133 
	#ANSI_PRAGMA_WEAK
(
sym
, 
°y≥
) \

135 .
wók
 
_
 
sym
; \

137 .
ty≥
 
_
 
sym
, #stype; \

139 
_
 
sym
 = 
	)
sym

145 
	#ANSI_PRAGMA_WEAK2
(
sym1
, 
sym2
, 
°y≥
) \

146 .
wók
 
sym1
; \

147 .
ty≥
 
sym1
, #stype; \

148 
sym1
 = 
sym2


	)

155 
	#ENTRY
(
x
) \

156 .
£˘i⁄
 ".text"; \

157 .
Æign
 4; \

158 .
globÆ
 
x
; \

159 .
ty≥
 
x
, #function; \

160 
x
: 
	`MCOUNT
(x)

	)

162 
	#ENTRY_SIZE
 
MCOUNT_SIZE


	)

164 
	#ENTRY_NP
(
x
) \

165 .
£˘i⁄
 ".text"; \

166 .
Æign
 4; \

167 .
globÆ
 
x
; \

168 .
ty≥
 
x
, #function; \

169 
x
:

	)

171 
	#RTENTRY
(
x
) \

172 .
£˘i⁄
 ".text"; \

173 .
Æign
 4; \

174 .
globÆ
 
x
; \

175 .
ty≥
 
x
, #function; \

176 
x
: 
	`RTMCOUNT
(x)

	)

181 
	#ENTRY2
(
x
, 
y
) \

182 .
£˘i⁄
 ".text"; \

183 .
Æign
 4; \

184 .
globÆ
 
x
, 
y
; \

185 .
ty≥
 
x
, #function; \

186 .
ty≥
 
y
, #function; \

188 
x
: ; \

189 
y
: 
	`MCOUNT
(
x
)

	)

191 
	#ENTRY_NP2
(
x
, 
y
) \

192 .
£˘i⁄
 ".text"; \

193 .
Æign
 4; \

194 .
globÆ
 
x
, 
y
; \

195 .
ty≥
 
x
, #function; \

196 .
ty≥
 
y
, #function; \

198 
x
: ; \

199 
y
:

	)

205 
	#ALTENTRY
(
x
) \

206 .
globÆ
 
x
; \

207 .
ty≥
 
x
, #function; \

208 
x
:

	)

220 
	#DGDEF2
(
«me
, 
sz
) \

221 .
£˘i⁄
 ".data"; \

222 .
globÆ
 
«me
; \

223 .
ty≥
 
«me
, #object; \

224 .
size
 
«me
, 
sz
; \

225 
«me
:

	)

227 
	#DGDEF3
(
«me
, 
sz
, 
Ægn
) \

228 .
£˘i⁄
 ".data"; \

229 .
Æign
 
Ægn
; \

230 .
globÆ
 
«me
; \

231 .
ty≥
 
«me
, #object; \

232 .
size
 
«me
, 
sz
; \

233 
«me
:

	)

235 
	#DGDEF
(
«me
Ë
	`DGDEF3
“ame, 4, 4)

	)

240 
	#SET_SIZE
(
x
) \

241 .
size
 
x
, (.-x)

	)

245 #ifdef 
__˝lu•lus


	@src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h

27 #i‚de‡
_SYS_STACK_H


28 
	#_SYS_STACK_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #i‡!
deföed
(
_ASM
)

34 
	~<sys/ty≥s.h
>

38 #ifdef 
__˝lu•lus


64 
	#WINDOWSIZE32
 (16*4Ë

	)

65 
	#ARGPUSHSIZE32
 (6*4Ë

	)

66 
	#ARGPUSH32
 (
WINDOWSIZE32
 + 4Ë

	)

67 
	#MINFRAME32
 (
WINDOWSIZE32
 + 
ARGPUSHSIZE32
 + 4Ë

	)

69 
	#STACK_GROWTH_DOWN


	)

74 
	#STACK_ALIGN32
 8

	)

75 
	#STACK_ENTRY_ALIGN32
 8

	)

76 
	#SA32
(
X
Ë(((X)+(
STACK_ALIGN32
-1)Ë& ~(STACK_ALIGN32-1))

	)

78 #i‡
deföed
(
__•¨cv9
)

102 
	#WINDOWSIZE64
 (16*8Ë

	)

103 
	#ARGPUSHSIZE64
 (6*8Ë

	)

104 
	#MINFRAME64
 (
WINDOWSIZE64
 + 48Ë

	)

105 
	#ARGPUSH64
 (
WINDOWSIZE64
Ë

	)

106 
	#V9BIAS64
 (2048-1Ë

	)

108 
	#STACK_ALIGN64
 16

	)

109 
	#STACK_ENTRY_ALIGN64
 16

	)

110 
	#SA64
(
X
Ë(((X)+(
STACK_ALIGN64
-1)Ë& ~(STACK_ALIGN64-1))

	)

112 
	#IS_V9STACK
(
x
Ë((((
uöçå_t
)(xË+ 
V9BIAS64
) & \

113 (
STACK_ALIGN64
-1)Ë=0)

	)

115 
	#WINDOWSIZE
 
WINDOWSIZE64


	)

116 
	#ARGPUSHSIZE
 
ARGPUSHSIZE64


	)

117 
	#ARGPUSH
 
ARGPUSH64


	)

118 
	#MINFRAME
 
MINFRAME64


	)

119 
	#STACK_ALIGN
 
STACK_ALIGN64


	)

120 
	#STACK_ENTRY_ALIGN
 
STACK_ENTRY_ALIGN64


	)

121 
	#STACK_BIAS
 
V9BIAS64


	)

122 
	#SA
(
x
Ë
	`SA64
(x)

	)

126 
	#WINDOWSIZE
 
WINDOWSIZE32


	)

127 
	#ARGPUSHSIZE
 
ARGPUSHSIZE32


	)

128 
	#ARGPUSH
 
ARGPUSH32


	)

129 
	#MINFRAME
 
MINFRAME32


	)

130 
	#STACK_ALIGN
 
STACK_ALIGN32


	)

131 
	#STACK_ENTRY_ALIGN
 
STACK_ENTRY_ALIGN32


	)

132 
	#STACK_BIAS
 0

	)

133 
	#SA
(
x
Ë
	`SA32
(x)

	)

134 
	#STACK_V9BIAS64
 (2048-1Ë

	)

138 #i‡
deföed
(
_KERNEL
Ë&& !deföed(
_ASM
)

140 #i‡
deföed
(
DEBUG
)

141 #i‡
STACK_ALIGN
 == 8

142 
	#ASSERT_STACK_ALIGNED
() \

144 
uöt64_t
 
__tmp
; \

145 
	`ASSERT
((((
uöçå_t
)&
__tmp
Ë& (
STACK_ALIGN
 - 1)) == 0); \

146 }

	)

147 #ñi‡(
STACK_ALIGN
 =16Ë&& (
_LONG_DOUBLE_ALIGNMENT
 == 16)

148 
	#ASSERT_STACK_ALIGNED
() \

150 
__tmp
; \

151 
	`ASSERT
((((
uöçå_t
)&
__tmp
Ë& (
STACK_ALIGN
 - 1)) == 0); \

152 }

	)

155 
	#ASSERT_STACK_ALIGNED
()

	)

158 
ªgs
;

160 
Êush_wödows
();

161 
Êush_u£r_wödows
();

162 
Êush_u£r_wödows_to_°ack
(
ˇddr_t
 *);

163 
åash_u£r_wödows
();

164 
åa˚ªgs
(
ªgs
 *);

165 
åa˚back
(
ˇddr_t
);

169 #ifdef 
__˝lu•lus


	@src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h

26 #i‚def 
_SYS_TRAP_H


27 
	#_SYS_TRAP_H


	)

29 #ifdef 
__˝lu•lus


44 
	#ST_OSYSCALL
 0x00

	)

45 
	#ST_BREAKPOINT
 0x01

	)

46 
	#ST_DIV0
 0x02

	)

47 
	#ST_FLUSH_WINDOWS
 0x03

	)

48 
	#ST_CLEAN_WINDOWS
 0x04

	)

49 
	#ST_RANGE_CHECK
 0x05

	)

50 
	#ST_FIX_ALIGN
 0x06

	)

51 
	#ST_INT_OVERFLOW
 0x07

	)

52 
	#ST_SYSCALL
 0x08

	)

53 
	#ST_TRANSACTION_FAILURE
 0x0F

	)

60 
	#ST_GETCC
 0x20

	)

61 
	#ST_SETCC
 0x21

	)

62 
	#ST_GETPSR
 0x22

	)

63 
	#ST_SETPSR
 0x23

	)

64 
	#ST_GETHRTIME
 0x24

	)

65 
	#ST_GETHRVTIME
 0x25

	)

66 
	#ST_SELFXCALL
 0x26

	)

67 
	#ST_GETHRESTIME
 0x27

	)

68 
	#ST_SETV9STACK
 0x28

	)

69 
	#ST_GETLGRP
 0x29

	)

74 
	#ST_DTRACE_PID
 0x38

	)

75 
	#ST_DTRACE_PROBE
 0x39

	)

76 
	#ST_DTRACE_RETURN
 0x3a

	)

78 
	#ST_KMDB_TRAP
 0x7d

	)

79 
	#ST_KMDB_BREAKPOINT
 0x7e

	)

80 
	#ST_MON_BREAKPOINT
 0x7f

	)

82 #ifdef 
__˝lu•lus


	@src/atomic_ops/atomic_ops.h

1 #i‚de‡
SHORE_ATOMICS_H


2 
	#SHORE_ATOMICS_H


	)

3 
	~"sh‹e-c⁄fig.h
"

5 #i‚de‡
HAVE_UCHAR_T


6 
	tuch¨_t
;

8 #i‚de‡
HAVE_USHORT_T


9 
	tush‹t_t
;

11 #i‚de‡
HAVE_UINT_T


12 
	tuöt_t
;

14 #i‚de‡
HAVE_ULONG_T


15 
	tul⁄g_t
;

18 #i‚de‡
HAVE_CHAR_T


19 
	tch¨_t
;

21 #i‚de‡
HAVE_SHORT_T


22 
	tsh‹t_t
;

24 #i‚de‡
HAVE_INT_T


25 
	töt_t
;

27 #i‚de‡
HAVE_LONG_T


28 
	tl⁄g_t
;

32 #i‡
deföed
(
HAVE_ATOMIC_H
Ë&& !deföed(
HAVE_MEMBAR_ENTER
)

33 #îr‹ 
©omic_›s
 
d€s
 
nŸ
 
ö˛ude
 
memb¨_›s


35 #i‡
deföed
(
HAVE_MEMBAR_ENTER
Ë&& !deföed(
HAVE_ATOMIC_H
)

36 #îr‹ 
memb¨_›s
 
deföed
 
but
 
©omic_›s
 
missög


39 #ifde‡
HAVE_ATOMIC_H


40 
	~<©omic.h
>

46 #i‚de‡
_INT64_TYPE


47 
	#_INT64_TYPE


	)

48 
	#_INT64_TYPE_DEFINED


	)

53 #ifde‡
HAVE_GCC_ATOMIC_BUILTINS


54 
	~"©omic_›s_buûtö.h
"

56 
	~"©omic_›s_im∂.h
"

60 #ifde‡
_INT64_TYPE_DEFINED


61 #unde‡
_INT64_TYPE


62 #unde‡
_INT64_TYPE_DEFINED


	@src/atomic_ops/atomic_ops_builtin.h

1 #i‚def 
_SYS_ATOMIC_H


2 
	#_SYS_ATOMIC_H


	)

4 
	~<sys/ty≥s.h
>

5 
	~<öây≥s.h
>

8 #ifdef 
__˝lu•lus


12 #i‡
deföed
(
_KERNEL
Ë|| deföed(
__STDC__
)

16 
ölöe
 
	$©omic_öc_8
(vﬁ©ûê
uöt8_t
 *
±r
) {

17 
	`__sync_add_™d_„tch
(
±r
, 1);

18 
	}
}

19 
ölöe
 
	$©omic_öc_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
) {

20 
	`__sync_add_™d_„tch
(
±r
, 1);

21 
	}
}

22 
ölöe
 
	$©omic_öc_16
(vﬁ©ûê
uöt16_t
 *
±r
) {

23 
	`__sync_add_™d_„tch
(
±r
, 1);

24 
	}
}

25 
ölöe
 
	$©omic_öc_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
) {

26 
	`__sync_add_™d_„tch
(
±r
, 1);

27 
	}
}

28 
ölöe
 
	$©omic_öc_32
(vﬁ©ûê
uöt32_t
 *
±r
) {

29 
	`__sync_add_™d_„tch
(
±r
, 1);

30 
	}
}

31 
ölöe
 
	$©omic_öc_uöt
(vﬁ©ûê
uöt_t
 *
±r
) {

32 
	`__sync_add_™d_„tch
(
±r
, 1);

33 
	}
}

34 
ölöe
 
	$©omic_öc_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
) {

35 
	`__sync_add_™d_„tch
(
±r
, 1);

36 
	}
}

37 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

38 
ölöe
 
	$©omic_öc_64
(vﬁ©ûê
uöt64_t
 *
±r
) {

39 
	`__sync_add_™d_„tch
(
±r
, 1);

40 
	}
}

46 
ölöe
 
	$©omic_dec_8
(vﬁ©ûê
uöt8_t
 *
±r
) {

47 
	`__sync_add_™d_„tch
(
±r
, -1);

48 
	}
}

49 
ölöe
 
	$©omic_dec_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
) {

50 
	`__sync_add_™d_„tch
(
±r
, -1);

51 
	}
}

52 
ölöe
 
	$©omic_dec_16
(vﬁ©ûê
uöt16_t
 *
±r
) {

53 
	`__sync_add_™d_„tch
(
±r
, -1);

54 
	}
}

55 
ölöe
 
	$©omic_dec_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
) {

56 
	`__sync_add_™d_„tch
(
±r
, -1);

57 
	}
}

58 
ölöe
 
	$©omic_dec_32
(vﬁ©ûê
uöt32_t
 *
±r
) {

59 
	`__sync_add_™d_„tch
(
±r
, -1);

60 
	}
}

61 
ölöe
 
	$©omic_dec_uöt
(vﬁ©ûê
uöt_t
 *
±r
) {

62 
	`__sync_add_™d_„tch
(
±r
, -1);

63 
	}
}

64 
ölöe
 
	$©omic_dec_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
) {

65 
	`__sync_add_™d_„tch
(
±r
, -1);

66 
	}
}

67 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

68 
ölöe
 
	$©omic_dec_64
(vﬁ©ûê
uöt64_t
 *
±r
) {

69 
	`__sync_add_™d_„tch
(
±r
, -1);

70 
	}
}

76 
ölöe
 
	$©omic_add_8
(vﬁ©ûê
uöt8_t
 *
±r
, 
öt8_t
 
vÆ
) {

77 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

78 
	}
}

79 
ölöe
 
	$©omic_add_ch¨
(vﬁ©ûê
uch¨_t
 *
±r
, sig√d 
vÆ
) {

80 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

81 
	}
}

82 
ölöe
 
	$©omic_add_16
(vﬁ©ûê
uöt16_t
 *
±r
, 
öt16_t
 
vÆ
) {

83 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

84 
	}
}

85 
ölöe
 
	$©omic_add_sh‹t
(vﬁ©ûê
ush‹t_t
 *
±r
, 
vÆ
) {

86 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

87 
	}
}

88 
ölöe
 
	$©omic_add_32
(vﬁ©ûê
uöt32_t
 *
±r
, 
öt32_t
 
vÆ
) {

89 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

90 
	}
}

91 
ölöe
 
	$©omic_add_öt
(vﬁ©ûê
uöt_t
 *
±r
, 
vÆ
) {

92 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

93 
	}
}

94 
ölöe
 
	$©omic_add_±r
(vﬁ©ûê*
±r
, 
ssize_t
 
vÆ
) {

95 ()
	`__sync_add_™d_„tch
((** vﬁ©ûe)
±r
, 
vÆ
);

96 
	}
}

97 
ölöe
 
	$©omic_add_l⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
, 
vÆ
) {

98 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

99 
	}
}

100 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

101 
ölöe
 
	$©omic_add_64
(vﬁ©ûê
uöt64_t
 *
±r
, 
öt64_t
 
vÆ
) {

102 
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

103 
	}
}

109 
ölöe
 
	$©omic_‹_8
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
vÆ
) {

110 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

111 
	}
}

112 
ölöe
 
	$©omic_‹_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
vÆ
) {

113 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

114 
	}
}

115 
ölöe
 
	$©omic_‹_16
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
vÆ
) {

116 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

117 
	}
}

118 
ölöe
 
	$©omic_‹_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
vÆ
) {

119 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

120 
	}
}

121 
ölöe
 
	$©omic_‹_32
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
vÆ
) {

122 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

123 
	}
}

124 
ölöe
 
	$©omic_‹_uöt
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
vÆ
) {

125 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

126 
	}
}

127 
ölöe
 
	$©omic_‹_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
vÆ
) {

128 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

129 
	}
}

130 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

131 
ölöe
 
	$©omic_‹_64
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
vÆ
) {

132 
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

133 
	}
}

139 
ölöe
 
	$©omic_™d_8
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
vÆ
) {

140 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

141 
	}
}

142 
ölöe
 
	$©omic_™d_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
vÆ
) {

143 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

144 
	}
}

145 
ölöe
 
	$©omic_™d_16
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
vÆ
) {

146 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

147 
	}
}

148 
ölöe
 
	$©omic_™d_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
vÆ
) {

149 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

150 
	}
}

151 
ölöe
 
	$©omic_™d_32
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
vÆ
) {

152 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

153 
	}
}

154 
ölöe
 
	$©omic_™d_uöt
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
vÆ
) {

155 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

156 
	}
}

157 
ölöe
 
	$©omic_™d_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
vÆ
) {

158 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

159 
	}
}

160 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

161 
ölöe
 
	$©omic_™d_64
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
vÆ
) {

162 
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

163 
	}
}

177 
ölöe
 
uöt8_t
 
	$©omic_öc_8_nv
(vﬁ©ûê
uöt8_t
 *
x
) {

178  
	`__sync_add_™d_„tch
(
x
, 1);

179 
	}
}

180 
ölöe
 
uch¨_t
 
	$©omic_öc_uch¨_nv
(vﬁ©ûê
uch¨_t
 *
x
) {

181  
	`__sync_add_™d_„tch
(
x
, 1);

182 
	}
}

183 
ölöe
 
uöt16_t
 
	$©omic_öc_16_nv
(vﬁ©ûê
uöt16_t
 *
x
) {

184  
	`__sync_add_™d_„tch
(
x
, 1);

185 
	}
}

186 
ölöe
 
ush‹t_t
 
	$©omic_öc_ush‹t_nv
(vﬁ©ûê
ush‹t_t
 *
x
) {

187  
	`__sync_add_™d_„tch
(
x
, 1);

188 
	}
}

189 
ölöe
 
uöt32_t
 
	$©omic_öc_32_nv
(vﬁ©ûê
uöt32_t
 *
x
) {

190  
	`__sync_add_™d_„tch
(
x
, 1);

191 
	}
}

192 
ölöe
 
uöt_t
 
	$©omic_öc_uöt_nv
(vﬁ©ûê
uöt_t
 *
x
) {

193  
	`__sync_add_™d_„tch
(
x
, 1);

194 
	}
}

195 
ölöe
 
ul⁄g_t
 
	$©omic_öc_ul⁄g_nv
(vﬁ©ûê
ul⁄g_t
 *
x
) {

196  
	`__sync_add_™d_„tch
(
x
, 1);

197 
	}
}

198 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

199 
ölöe
 
uöt64_t
 
	$©omic_öc_64_nv
(vﬁ©ûê
uöt64_t
 *
x
) {

200  
	`__sync_add_™d_„tch
(
x
, 1);

201 
	}
}

207 
ölöe
 
uöt8_t
 
	$©omic_dec_8_nv
(vﬁ©ûê
uöt8_t
 *
x
) {

208  
	`__sync_add_™d_„tch
(
x
, -1);

209 
	}
}

210 
ölöe
 
uch¨_t
 
	$©omic_dec_uch¨_nv
(vﬁ©ûê
uch¨_t
 *
x
) {

211  
	`__sync_add_™d_„tch
(
x
, -1);

212 
	}
}

213 
ölöe
 
uöt16_t
 
	$©omic_dec_16_nv
(vﬁ©ûê
uöt16_t
 *
x
) {

214  
	`__sync_add_™d_„tch
(
x
, -1);

215 
	}
}

216 
ölöe
 
ush‹t_t
 
	$©omic_dec_ush‹t_nv
(vﬁ©ûê
ush‹t_t
 *
x
) {

217  
	`__sync_add_™d_„tch
(
x
, -1);

218 
	}
}

219 
ölöe
 
uöt32_t
 
	$©omic_dec_32_nv
(vﬁ©ûê
uöt32_t
 *
x
) {

220  
	`__sync_add_™d_„tch
(
x
, -1);

221 
	}
}

222 
ölöe
 
uöt_t
 
	$©omic_dec_uöt_nv
(vﬁ©ûê
uöt_t
 *
x
) {

223  
	`__sync_add_™d_„tch
(
x
, -1);

224 
	}
}

225 
ölöe
 
ul⁄g_t
 
	$©omic_dec_ul⁄g_nv
(vﬁ©ûê
ul⁄g_t
 *
x
) {

226  
	`__sync_add_™d_„tch
(
x
, -1);

227 
	}
}

228 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

229 
ölöe
 
uöt64_t
 
	$©omic_dec_64_nv
(vﬁ©ûê
uöt64_t
 *
x
) {

230  
	`__sync_add_™d_„tch
(
x
, -1);

231 
	}
}

237 
ölöe
 
uöt8_t
 
	$©omic_add_8_nv
(vﬁ©ûê
uöt8_t
 *
±r
, 
öt8_t
 
vÆ
) {

238  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

239 
	}
}

240 
ölöe
 
uch¨_t
 
	$©omic_add_ch¨_nv
(vﬁ©ûê
uch¨_t
 *
±r
, sig√d 
vÆ
) {

241  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

242 
	}
}

243 
ölöe
 
uöt16_t
 
	$©omic_add_16_nv
(vﬁ©ûê
uöt16_t
 *
±r
, 
öt16_t
 
vÆ
) {

244  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

245 
	}
}

246 
ölöe
 
ush‹t_t
 
	$©omic_add_sh‹t_nv
(vﬁ©ûê
ush‹t_t
 *
±r
, 
vÆ
) {

247  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

248 
	}
}

249 
ölöe
 
uöt32_t
 
	$©omic_add_32_nv
(vﬁ©ûê
uöt32_t
 *
±r
, 
öt32_t
 
vÆ
) {

250  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

251 
	}
}

252 
ölöe
 
uöt_t
 
	$©omic_add_öt_nv
(vﬁ©ûê
uöt_t
 *
±r
, 
vÆ
) {

253  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

254 
	}
}

255 
ölöe
 *
	$©omic_add_±r_nv
(vﬁ©ûê*
±r
, 
ssize_t
 
vÆ
) {

256  
	`__sync_add_™d_„tch
((** vﬁ©ûe)
±r
, 
vÆ
);

257 
	}
}

258 
ölöe
 
ul⁄g_t
 
	$©omic_add_l⁄g_nv
(vﬁ©ûê
ul⁄g_t
 *
±r
, 
vÆ
) {

259  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

260 
	}
}

261 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

262 
ölöe
 
uöt64_t
 
	$©omic_add_64_nv
(vﬁ©ûê
uöt64_t
 *
±r
, 
öt64_t
 
vÆ
) {

263  
	`__sync_add_™d_„tch
(
±r
, 
vÆ
);

264 
	}
}

270 
ölöe
 
uöt8_t
 
	$©omic_‹_8_nv
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
vÆ
) {

271  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

272 
	}
}

273 
ölöe
 
uch¨_t
 
	$©omic_‹_uch¨_nv
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
vÆ
) {

274  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

275 
	}
}

276 
ölöe
 
uöt16_t
 
	$©omic_‹_16_nv
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
vÆ
) {

277  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

278 
	}
}

279 
ölöe
 
ush‹t_t
 
	$©omic_‹_ush‹t_nv
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
vÆ
) {

280  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

281 
	}
}

282 
ölöe
 
uöt32_t
 
	$©omic_‹_32_nv
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
vÆ
) {

283  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

284 
	}
}

285 
ölöe
 
uöt_t
 
	$©omic_‹_uöt_nv
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
vÆ
) {

286  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

287 
	}
}

288 
ölöe
 
ul⁄g_t
 
	$©omic_‹_ul⁄g_nv
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
vÆ
) {

289  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

290 
	}
}

291 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

292 
ölöe
 
uöt64_t
 
	$©omic_‹_64_nv
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
vÆ
) {

293  
	`__sync_‹_™d_„tch
(
±r
, 
vÆ
);

294 
	}
}

300 
ölöe
 
uöt8_t
 
	$©omic_™d_8_nv
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
vÆ
) {

301  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

302 
	}
}

303 
ölöe
 
uch¨_t
 
	$©omic_™d_uch¨_nv
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
vÆ
) {

304  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

305 
	}
}

306 
ölöe
 
uöt16_t
 
	$©omic_™d_16_nv
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
vÆ
) {

307  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

308 
	}
}

309 
ölöe
 
ush‹t_t
 
	$©omic_™d_ush‹t_nv
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
vÆ
) {

310  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

311 
	}
}

312 
ölöe
 
uöt32_t
 
	$©omic_™d_32_nv
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
vÆ
) {

313  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

314 
	}
}

315 
ölöe
 
uöt_t
 
	$©omic_™d_uöt_nv
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
vÆ
) {

316  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

317 
	}
}

318 
ölöe
 
ul⁄g_t
 
	$©omic_™d_ul⁄g_nv
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
vÆ
) {

319  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

320 
	}
}

321 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

322 
ölöe
 
uöt64_t
 
	$©omic_™d_64_nv
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
vÆ
) {

323  
	`__sync_™d_™d_„tch
(
±r
, 
vÆ
);

324 
	}
}

330 
ölöe
 
uöt8_t
 
	$©omic_ˇs_8
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
ov
, uöt8_à
nv
) {

331  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

332 
	}
}

333 
ölöe
 
uch¨_t
 
	$©omic_ˇs_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
ov
, uch¨_à
nv
) {

334  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

335 
	}
}

336 
ölöe
 
uöt16_t
 
	$©omic_ˇs_16
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
ov
, uöt16_à
nv
) {

337  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

338 
	}
}

339 
ölöe
 
ush‹t_t
 
	$©omic_ˇs_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
ov
, ush‹t_à
nv
) {

340  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

341 
	}
}

342 
ölöe
 
uöt32_t
 
	$©omic_ˇs_32
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
ov
, uöt32_à
nv
) {

343  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

344 
	}
}

345 
ölöe
 
uöt_t
 
	$©omic_ˇs_uöt
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
ov
, uöt_à
nv
) {

346  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

347 
	}
}

348 
ölöe
 *
	$©omic_ˇs_±r
(vﬁ©ûê*
±r
, * 
ov
, * 
nv
) {

349  
	`__sync_vÆ_com∑ª_™d_sw≠
((** vﬁ©ûe)
±r
, 
ov
, 
nv
);

350 
	}
}

351 
ölöe
 
ul⁄g_t
 
	$©omic_ˇs_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
ov
, ul⁄g_à
nv
) {

352  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

353 
	}
}

354 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
Ë|| deföed(
__GLIBC_HAVE_LONG_LONG
)

355 
ölöe
 
uöt64_t
 
	$©omic_ˇs_64
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
ov
, uöt64_à
nv
) {

356  
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, 
nv
);

357 
	}
}

363 
ölöe
 
uöt8_t
 
	$©omic_sw≠_8
(vﬁ©ûê
uöt8_t
 *
±r
, uöt8_à
vÆ
) {

364  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

365 
	}
}

366 
ölöe
 
uch¨_t
 
	$©omic_sw≠_uch¨
(vﬁ©ûê
uch¨_t
 *
±r
, uch¨_à
vÆ
) {

367  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

368 
	}
}

369 
ölöe
 
uöt16_t
 
	$©omic_sw≠_16
(vﬁ©ûê
uöt16_t
 *
±r
, uöt16_à
vÆ
) {

370  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

371 
	}
}

372 
ölöe
 
ush‹t_t
 
	$©omic_sw≠_ush‹t
(vﬁ©ûê
ush‹t_t
 *
±r
, ush‹t_à
vÆ
) {

373  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

374 
	}
}

375 
ölöe
 
uöt32_t
 
	$©omic_sw≠_32
(vﬁ©ûê
uöt32_t
 *
±r
, uöt32_à
vÆ
) {

376  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

377 
	}
}

378 
ölöe
 
uöt_t
 
	$©omic_sw≠_uöt
(vﬁ©ûê
uöt_t
 *
±r
, uöt_à
vÆ
) {

379  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

380 
	}
}

381 
ölöe
 *
	$©omic_sw≠_±r
(vﬁ©ûê*
±r
, * 
vÆ
) {

382  
	`__sync_lock_ã°_™d_£t
((** vﬁ©ûe)
±r
, 
vÆ
);

383 
	}
}

384 
ölöe
 
ul⁄g_t
 
	$©omic_sw≠_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *
±r
, ul⁄g_à
vÆ
) {

385  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

386 
	}
}

387 #i‡
deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

388 
ölöe
 
uöt64_t
 
	$©omic_sw≠_64
(vﬁ©ûê
uöt64_t
 *
±r
, uöt64_à
vÆ
) {

389  
	`__sync_lock_ã°_™d_£t
(
±r
, 
vÆ
);

390 
	}
}

398 
ölöe
 
	$©omic_£t_l⁄g_ex˛
(vﬁ©ûê
ul⁄g_t
 *
±r
, 
uöt_t
 
bô
) {

399 
ul⁄g_t
 
vÆ
 = 1u»<< 
bô
;

400 
ul⁄g_t
 
ov
 = *
±r
;

402 i‡(
ov
 & 
vÆ
)

405 
ul⁄g_t
 
cur
 = 
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, ov|
vÆ
);

406 i‡(
cur
 =
ov
)

408 
ov
 = 
cur
;

410 
	}
}

412 
ölöe
 
	$©omic_˛ór_l⁄g_ex˛
(vﬁ©ûê
ul⁄g_t
 *
±r
, 
uöt_t
 
bô
) {

413 
ul⁄g_t
 
vÆ
 = 1u»<< 
bô
;

414 
ul⁄g_t
 
ov
 = *
±r
;

416 i‡(! (
ov
 & 
vÆ
))

419 
ul⁄g_t
 
cur
 = 
	`__sync_vÆ_com∑ª_™d_sw≠
(
±r
, 
ov
, ov & ~
vÆ
);

420 i‡(
cur
 =
ov
)

422 
ov
 = 
cur
;

424 
	}
}

433 
ölöe
 
	$memb¨_íãr
() {

434 
	`__sync_synchr⁄ize
();

435 
	}
}

443 
ölöe
 
	$memb¨_exô
() {

444 
	`__sync_synchr⁄ize
();

445 
	}
}

454 
ölöe
 
	$memb¨_¥odu˚r
() {

455 
	`__sync_synchr⁄ize
();

456 
	}
}

465 
ölöe
 
	$memb¨_c⁄sumî
() {

466 
	`__sync_synchr⁄ize
();

467 
	}
}

470 #ifdef 
__˝lu•lus


	@src/atomic_ops/atomic_ops_impl.h

27 #i‚def 
_SYS_ATOMIC_H


28 
	#_SYS_ATOMIC_H


	)

30 
	~<sys/ty≥s.h
>

31 
	~<öây≥s.h
>

34 #ifdef 
__˝lu•lus


38 #i‡
deföed
(
_KERNEL
Ë&& deföed(
__GNUC__
Ë&& deföed(
_ASM_INLINES
) && \

39 (
deföed
(
__i386
Ë|| 
	$deföed
(
__amd64
))

40 
	~<asm/©omic.h
>

43 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
__STDC__
)

47 
	`©omic_öc_8
(vﬁ©ûê
uöt8_t
 *);

48 
	`©omic_öc_uch¨
(vﬁ©ûê
uch¨_t
 *);

49 
	`©omic_öc_16
(vﬁ©ûê
uöt16_t
 *);

50 
	`©omic_öc_ush‹t
(vﬁ©ûê
ush‹t_t
 *);

51 
	`©omic_öc_32
(vﬁ©ûê
uöt32_t
 *);

52 
	`©omic_öc_uöt
(vﬁ©ûê
uöt_t
 *);

53 
	`©omic_öc_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *);

54 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

55 
	`©omic_öc_64
(vﬁ©ûê
uöt64_t
 *);

61 
	`©omic_dec_8
(vﬁ©ûê
uöt8_t
 *);

62 
	`©omic_dec_uch¨
(vﬁ©ûê
uch¨_t
 *);

63 
	`©omic_dec_16
(vﬁ©ûê
uöt16_t
 *);

64 
	`©omic_dec_ush‹t
(vﬁ©ûê
ush‹t_t
 *);

65 
	`©omic_dec_32
(vﬁ©ûê
uöt32_t
 *);

66 
	`©omic_dec_uöt
(vﬁ©ûê
uöt_t
 *);

67 
	`©omic_dec_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *);

68 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

69 
	`©omic_dec_64
(vﬁ©ûê
uöt64_t
 *);

75 
	`©omic_add_8
(vﬁ©ûê
uöt8_t
 *, 
öt8_t
);

76 
	`©omic_add_ch¨
(vﬁ©ûê
uch¨_t
 *, signed );

77 
	`©omic_add_16
(vﬁ©ûê
uöt16_t
 *, 
öt16_t
);

78 
	`©omic_add_sh‹t
(vﬁ©ûê
ush‹t_t
 *, );

79 
	`©omic_add_32
(vﬁ©ûê
uöt32_t
 *, 
öt32_t
);

80 
	`©omic_add_öt
(vﬁ©ûê
uöt_t
 *, );

81 
	`©omic_add_±r
(vﬁ©ûê*, 
ssize_t
);

82 
	`©omic_add_l⁄g
(vﬁ©ûê
ul⁄g_t
 *, );

83 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

84 
	`©omic_add_64
(vﬁ©ûê
uöt64_t
 *, 
öt64_t
);

90 
	`©omic_‹_8
(vﬁ©ûê
uöt8_t
 *, uint8_t);

91 
	`©omic_‹_uch¨
(vﬁ©ûê
uch¨_t
 *, uchar_t);

92 
	`©omic_‹_16
(vﬁ©ûê
uöt16_t
 *, uint16_t);

93 
	`©omic_‹_ush‹t
(vﬁ©ûê
ush‹t_t
 *, ushort_t);

94 
	`©omic_‹_32
(vﬁ©ûê
uöt32_t
 *, uint32_t);

95 
	`©omic_‹_uöt
(vﬁ©ûê
uöt_t
 *, uint_t);

96 
	`©omic_‹_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *, ulong_t);

97 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

98 
	`©omic_‹_64
(vﬁ©ûê
uöt64_t
 *, uint64_t);

104 
	`©omic_™d_8
(vﬁ©ûê
uöt8_t
 *, uint8_t);

105 
	`©omic_™d_uch¨
(vﬁ©ûê
uch¨_t
 *, uchar_t);

106 
	`©omic_™d_16
(vﬁ©ûê
uöt16_t
 *, uint16_t);

107 
	`©omic_™d_ush‹t
(vﬁ©ûê
ush‹t_t
 *, ushort_t);

108 
	`©omic_™d_32
(vﬁ©ûê
uöt32_t
 *, uint32_t);

109 
	`©omic_™d_uöt
(vﬁ©ûê
uöt_t
 *, uint_t);

110 
	`©omic_™d_ul⁄g
(vﬁ©ûê
ul⁄g_t
 *, ulong_t);

111 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

112 
	`©omic_™d_64
(vﬁ©ûê
uöt64_t
 *, uint64_t);

126 
uöt8_t
 
	`©omic_öc_8_nv
(volatile uint8_t *);

127 
uch¨_t
 
	`©omic_öc_uch¨_nv
(volatile uchar_t *);

128 
uöt16_t
 
	`©omic_öc_16_nv
(volatile uint16_t *);

129 
ush‹t_t
 
	`©omic_öc_ush‹t_nv
(volatile ushort_t *);

130 
uöt32_t
 
	`©omic_öc_32_nv
(volatile uint32_t *);

131 
uöt_t
 
	`©omic_öc_uöt_nv
(volatile uint_t *);

132 
ul⁄g_t
 
	`©omic_öc_ul⁄g_nv
(volatile ulong_t *);

133 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

134 
uöt64_t
 
	`©omic_öc_64_nv
(volatile uint64_t *);

140 
uöt8_t
 
	`©omic_dec_8_nv
(volatile uint8_t *);

141 
uch¨_t
 
	`©omic_dec_uch¨_nv
(volatile uchar_t *);

142 
uöt16_t
 
	`©omic_dec_16_nv
(volatile uint16_t *);

143 
ush‹t_t
 
	`©omic_dec_ush‹t_nv
(volatile ushort_t *);

144 
uöt32_t
 
	`©omic_dec_32_nv
(volatile uint32_t *);

145 
uöt_t
 
	`©omic_dec_uöt_nv
(volatile uint_t *);

146 
ul⁄g_t
 
	`©omic_dec_ul⁄g_nv
(volatile ulong_t *);

147 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

148 
uöt64_t
 
	`©omic_dec_64_nv
(volatile uint64_t *);

154 
uöt8_t
 
	`©omic_add_8_nv
(vﬁ©ûêuöt8_à*, 
öt8_t
);

155 
uch¨_t
 
	`©omic_add_ch¨_nv
(volatile uchar_t *, signed );

156 
uöt16_t
 
	`©omic_add_16_nv
(vﬁ©ûêuöt16_à*, 
öt16_t
);

157 
ush‹t_t
 
	`©omic_add_sh‹t_nv
(volatile ushort_t *, );

158 
uöt32_t
 
	`©omic_add_32_nv
(vﬁ©ûêuöt32_à*, 
öt32_t
);

159 
uöt_t
 
	`©omic_add_öt_nv
(volatile uint_t *, );

160 *
	`©omic_add_±r_nv
(vﬁ©ûê*, 
ssize_t
);

161 
ul⁄g_t
 
	`©omic_add_l⁄g_nv
(volatile ulong_t *, );

162 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

163 
uöt64_t
 
	`©omic_add_64_nv
(vﬁ©ûêuöt64_à*, 
öt64_t
);

169 
uöt8_t
 
	`©omic_‹_8_nv
(volatile uint8_t *, uint8_t);

170 
uch¨_t
 
	`©omic_‹_uch¨_nv
(volatile uchar_t *, uchar_t);

171 
uöt16_t
 
	`©omic_‹_16_nv
(volatile uint16_t *, uint16_t);

172 
ush‹t_t
 
	`©omic_‹_ush‹t_nv
(volatile ushort_t *, ushort_t);

173 
uöt32_t
 
	`©omic_‹_32_nv
(volatile uint32_t *, uint32_t);

174 
uöt_t
 
	`©omic_‹_uöt_nv
(volatile uint_t *, uint_t);

175 
ul⁄g_t
 
	`©omic_‹_ul⁄g_nv
(volatile ulong_t *, ulong_t);

176 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

177 
uöt64_t
 
	`©omic_‹_64_nv
(volatile uint64_t *, uint64_t);

183 
uöt8_t
 
	`©omic_™d_8_nv
(volatile uint8_t *, uint8_t);

184 
uch¨_t
 
	`©omic_™d_uch¨_nv
(volatile uchar_t *, uchar_t);

185 
uöt16_t
 
	`©omic_™d_16_nv
(volatile uint16_t *, uint16_t);

186 
ush‹t_t
 
	`©omic_™d_ush‹t_nv
(volatile ushort_t *, ushort_t);

187 
uöt32_t
 
	`©omic_™d_32_nv
(volatile uint32_t *, uint32_t);

188 
uöt_t
 
	`©omic_™d_uöt_nv
(volatile uint_t *, uint_t);

189 
ul⁄g_t
 
	`©omic_™d_ul⁄g_nv
(volatile ulong_t *, ulong_t);

190 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

191 
uöt64_t
 
	`©omic_™d_64_nv
(volatile uint64_t *, uint64_t);

197 
uöt8_t
 
	`©omic_ˇs_8
(volatile uint8_t *, uint8_t, uint8_t);

198 
uch¨_t
 
	`©omic_ˇs_uch¨
(volatile uchar_t *, uchar_t, uchar_t);

199 
uöt16_t
 
	`©omic_ˇs_16
(volatile uint16_t *, uint16_t, uint16_t);

200 
ush‹t_t
 
	`©omic_ˇs_ush‹t
(volatile ushort_t *, ushort_t, ushort_t);

201 
uöt32_t
 
	`©omic_ˇs_32
(volatile uint32_t *, uint32_t, uint32_t);

202 
uöt_t
 
	`©omic_ˇs_uöt
(volatile uint_t *, uint_t, uint_t);

203 *
	`©omic_ˇs_±r
(volatile *, *, *);

204 
ul⁄g_t
 
	`©omic_ˇs_ul⁄g
(volatile ulong_t *, ulong_t, ulong_t);

205 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
Ë|| deföed(
__GLIBC_HAVE_LONG_LONG
)

206 
uöt64_t
 
	`©omic_ˇs_64
(volatile uint64_t *, uint64_t, uint64_t);

212 
uöt8_t
 
	`©omic_sw≠_8
(volatile uint8_t *, uint8_t);

213 
uch¨_t
 
	`©omic_sw≠_uch¨
(volatile uchar_t *, uchar_t);

214 
uöt16_t
 
	`©omic_sw≠_16
(volatile uint16_t *, uint16_t);

215 
ush‹t_t
 
	`©omic_sw≠_ush‹t
(volatile ushort_t *, ushort_t);

216 
uöt32_t
 
	`©omic_sw≠_32
(volatile uint32_t *, uint32_t);

217 
uöt_t
 
	`©omic_sw≠_uöt
(volatile uint_t *, uint_t);

218 *
	`©omic_sw≠_±r
(volatile *, *);

219 
ul⁄g_t
 
	`©omic_sw≠_ul⁄g
(volatile ulong_t *, ulong_t);

220 #i‡
	`deföed
(
_KERNEL
Ë|| deföed(
_INT64_TYPE
)

221 
uöt64_t
 
	`©omic_sw≠_64
(volatile uint64_t *, uint64_t);

229 
	`©omic_£t_l⁄g_ex˛
(vﬁ©ûê
ul⁄g_t
 *, 
uöt_t
);

230 
	`©omic_˛ór_l⁄g_ex˛
(vﬁ©ûê
ul⁄g_t
 *, 
uöt_t
);

239 
	`memb¨_íãr
();

247 
	`memb¨_exô
();

256 
	`memb¨_¥odu˚r
();

265 
	`memb¨_c⁄sumî
();

268 #i‡!
	`deföed
(
_KERNEL
Ë&& !deföed(
__STDC__
)

269 
	`©omic_öc_8
();

270 
	`©omic_öc_uch¨
();

271 
	`©omic_öc_16
();

272 
	`©omic_öc_ush‹t
();

273 
	`©omic_öc_32
();

274 
	`©omic_öc_uöt
();

275 
	`©omic_öc_ul⁄g
();

276 #i‡
	`deföed
(
_INT64_TYPE
)

277 
	`©omic_öc_64
();

279 
	`©omic_dec_8
();

280 
	`©omic_dec_uch¨
();

281 
	`©omic_dec_16
();

282 
	`©omic_dec_ush‹t
();

283 
	`©omic_dec_32
();

284 
	`©omic_dec_uöt
();

285 
	`©omic_dec_ul⁄g
();

286 #i‡
	`deföed
(
_INT64_TYPE
)

287 
	`©omic_dec_64
();

289 
	`©omic_add_8
();

290 
	`©omic_add_ch¨
();

291 
	`©omic_add_16
();

292 
	`©omic_add_sh‹t
();

293 
	`©omic_add_32
();

294 
	`©omic_add_öt
();

295 
	`©omic_add_±r
();

296 
	`©omic_add_l⁄g
();

297 #i‡
	`deföed
(
_INT64_TYPE
)

298 
	`©omic_add_64
();

300 
	`©omic_‹_8
();

301 
	`©omic_‹_uch¨
();

302 
	`©omic_‹_16
();

303 
	`©omic_‹_ush‹t
();

304 
	`©omic_‹_32
();

305 
	`©omic_‹_uöt
();

306 
	`©omic_‹_ul⁄g
();

307 #i‡
	`deföed
(
_INT64_TYPE
)

308 
	`©omic_‹_64
();

310 
	`©omic_™d_8
();

311 
	`©omic_™d_uch¨
();

312 
	`©omic_™d_16
();

313 
	`©omic_™d_ush‹t
();

314 
	`©omic_™d_32
();

315 
	`©omic_™d_uöt
();

316 
	`©omic_™d_ul⁄g
();

317 #i‡
	`deföed
(
_INT64_TYPE
)

318 
	`©omic_™d_64
();

320 
uöt8_t
 
	`©omic_öc_8_nv
();

321 
uch¨_t
 
	`©omic_öc_uch¨_nv
();

322 
uöt16_t
 
	`©omic_öc_16_nv
();

323 
ush‹t_t
 
	`©omic_öc_ush‹t_nv
();

324 
uöt32_t
 
	`©omic_öc_32_nv
();

325 
uöt_t
 
	`©omic_öc_uöt_nv
();

326 
ul⁄g_t
 
	`©omic_öc_ul⁄g_nv
();

327 #i‡
	`deföed
(
_INT64_TYPE
)

328 
uöt64_t
 
	`©omic_öc_64_nv
();

330 
uöt8_t
 
	`©omic_dec_8_nv
();

331 
uch¨_t
 
	`©omic_dec_uch¨_nv
();

332 
uöt16_t
 
	`©omic_dec_16_nv
();

333 
ush‹t_t
 
	`©omic_dec_ush‹t_nv
();

334 
uöt32_t
 
	`©omic_dec_32_nv
();

335 
uöt_t
 
	`©omic_dec_uöt_nv
();

336 
ul⁄g_t
 
	`©omic_dec_ul⁄g_nv
();

337 #i‡
	`deföed
(
_INT64_TYPE
)

338 
uöt64_t
 
	`©omic_dec_64_nv
();

340 
uöt8_t
 
	`©omic_add_8_nv
();

341 
uch¨_t
 
	`©omic_add_ch¨_nv
();

342 
uöt16_t
 
	`©omic_add_16_nv
();

343 
ush‹t_t
 
	`©omic_add_sh‹t_nv
();

344 
uöt32_t
 
	`©omic_add_32_nv
();

345 
uöt_t
 
	`©omic_add_öt_nv
();

346 *
	`©omic_add_±r_nv
();

347 
ul⁄g_t
 
	`©omic_add_l⁄g_nv
();

348 #i‡
	`deföed
(
_INT64_TYPE
)

349 
uöt64_t
 
	`©omic_add_64_nv
();

351 
uöt8_t
 
	`©omic_‹_8_nv
();

352 
uch¨_t
 
	`©omic_‹_uch¨_nv
();

353 
uöt16_t
 
	`©omic_‹_16_nv
();

354 
ush‹t_t
 
	`©omic_‹_ush‹t_nv
();

355 
uöt32_t
 
	`©omic_‹_32_nv
();

356 
uöt_t
 
	`©omic_‹_uöt_nv
();

357 
ul⁄g_t
 
	`©omic_‹_ul⁄g_nv
();

358 #i‡
	`deföed
(
_INT64_TYPE
)

359 
uöt64_t
 
	`©omic_‹_64_nv
();

361 
uöt8_t
 
	`©omic_™d_8_nv
();

362 
uch¨_t
 
	`©omic_™d_uch¨_nv
();

363 
uöt16_t
 
	`©omic_™d_16_nv
();

364 
ush‹t_t
 
	`©omic_™d_ush‹t_nv
();

365 
uöt32_t
 
	`©omic_™d_32_nv
();

366 
uöt_t
 
	`©omic_™d_uöt_nv
();

367 
ul⁄g_t
 
	`©omic_™d_ul⁄g_nv
();

368 #i‡
	`deföed
(
_INT64_TYPE
)

369 
uöt64_t
 
	`©omic_™d_64_nv
();

371 
uöt8_t
 
	`©omic_ˇs_8
();

372 
uch¨_t
 
	`©omic_ˇs_uch¨
();

373 
uöt16_t
 
	`©omic_ˇs_16
();

374 
ush‹t_t
 
	`©omic_ˇs_ush‹t
();

375 
uöt32_t
 
	`©omic_ˇs_32
();

376 
uöt_t
 
	`©omic_ˇs_uöt
();

377 *
	`©omic_ˇs_±r
();

378 
ul⁄g_t
 
	`©omic_ˇs_ul⁄g
();

379 #i‡
	`deföed
(
_INT64_TYPE
)

380 
uöt64_t
 
	`©omic_ˇs_64
();

382 
uöt8_t
 
	`©omic_sw≠_8
();

383 
uch¨_t
 
	`©omic_sw≠_uch¨
();

384 
uöt16_t
 
	`©omic_sw≠_16
();

385 
ush‹t_t
 
	`©omic_sw≠_ush‹t
();

386 
uöt32_t
 
	`©omic_sw≠_32
();

387 
uöt_t
 
	`©omic_sw≠_uöt
();

388 *
	`©omic_sw≠_±r
();

389 
ul⁄g_t
 
	`©omic_sw≠_ul⁄g
();

390 #i‡
	`deföed
(
_INT64_TYPE
)

391 
uöt64_t
 
	`©omic_sw≠_64
();

395 
	`©omic_£t_l⁄g_ex˛
();

396 
	`©omic_˛ór_l⁄g_ex˛
();

398 
	`memb¨_íãr
();

399 
	`memb¨_exô
();

400 
	`memb¨_¥odu˚r
();

401 
	`memb¨_c⁄sumî
();

405 #i‡
	`deföed
(
_KERNEL
)

407 #i‡
	`deföed
(
_LP64
Ë|| deföed(
_ILP32
)

408 
	#©omic_add_ù
 
©omic_add_l⁄g


	)

409 
	#©omic_add_ù_nv
 
©omic_add_l⁄g_nv


	)

410 
	#ˇsù
 
©omic_ˇs_ul⁄g


	)

413 #i‡
	`deföed
(
__•¨c
)

414 
uöt8_t
 
	`ld°ub
(uint8_t *);

420 
uöt8_t
 
	`ˇs8
(uint8_t *, uint8_t, uint8_t);

421 
uöt32_t
 
	`ˇs32
(uint32_t *, uint32_t, uint32_t);

422 
uöt64_t
 
	`ˇs64
(uint64_t *, uint64_t, uint64_t);

423 
ul⁄g_t
 
	`ˇ¶⁄g
(ulong_t *, ulong_t, ulong_t);

424 *
	`ˇ•å
(*, *, *);

425 
	`©omic_™d_l⁄g
(
ul⁄g_t
 *, ulong_t);

426 
	`©omic_‹_l⁄g
(
ul⁄g_t
 *, ulong_t);

427 #i‡
	`deföed
(
__•¨c
)

428 
uöt32_t
 
	`sw≠l
(uint32_t *, uint32_t);

433 #ifdef 
__˝lu•lus


434 
	}
}

	@src/atomic_ops/empty.cpp

1 
	$™Em±yFun˘i⁄
()

4 
	}
}

	@src/common/basics.cpp

30 
	~"w_deföes.h
"

34 
	#BASICS_C


	)

36 #ifde‡
__GNUG__


37 #¥agm®
im∂emíèti⁄


40 
	~<basics.h
>

	@src/common/basics.h

30 #i‚de‡
BASICS_H


31 
	#BASICS_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 #i‚de‡
W_BASE_H


42 
	~<w_ba£.h
>

45 
	gw_ba£_t
::
	töt1_t
 int1_t;

46 
	gw_ba£_t
::
	töt2_t
 int2_t;

47 
	gw_ba£_t
::
	töt4_t
 int4_t;

48 
	gw_ba£_t
::
	tuöt1_t
 uint1_t;

49 
	gw_ba£_t
::
	tuöt2_t
 uint2_t;

50 
	gw_ba£_t
::
	tuöt4_t
 uint4_t;

53 
uöt4_t
 
	tsmsize_t
;

57 
	gw_ba£_t
::
	tuöt4_t
 
	tshpid_t
;

59 #i‚de‡
SM_SOURCE


61 
«me•a˚
 
	glockög
 {

62 
	gw_ba£_t
::
	tlock_duøti⁄_t
Üock_duration_t;

63 
	gw_ba£_t
::
	tlock_mode_t
Üock_mode_t;

64 c⁄° 
lock_mode_t
 
	gNL
 = 
w_ba£_t
::
NL
;

65 c⁄° 
lock_mode_t
 
	gIS
 = 
w_ba£_t
::
IS
;

66 c⁄° 
lock_mode_t
 
	gIX
 = 
w_ba£_t
::
IX
;

67 c⁄° 
lock_mode_t
 
	gSH
 = 
w_ba£_t
::
SH
;

68 c⁄° 
lock_mode_t
 
	gSIX
 = 
w_ba£_t
::
SIX
;

69 c⁄° 
lock_mode_t
 
	gUD
 = 
w_ba£_t
::
UD
;

70 c⁄° 
lock_mode_t
 
	gEX
 = 
w_ba£_t
::
EX
;

72 
usög
 
«me•a˚
 
	glockög
;

74 
«me•a˚
 
	gtwo_pha£_commô
 {

75 
	gw_ba£_t
::
	tvŸe_t
 vote_t;

77 
usög
 
«me•a˚
 
	gtwo_pha£_commô
;

82 
	gw_ba£_t
::
	töt2_t
 
	t¶Ÿid_t
;

85 c⁄° 
öt2_t
 
	gmax_öt2
 = 0x7fff;

86 c⁄° 
öt2_t
 
	gmö_öt2
 = ()0x8000;

87 c⁄° 
öt4_t
 
	gmax_öt4
 = 0x7fffffff;

88 c⁄° 
öt4_t
 
	gmax_öt4_möus1
 = 
max_öt4
 -1;

89 c⁄° 
öt4_t
 
	gmö_öt4
 = 0x80000000;

91 c⁄° 
uöt2_t
 
	gmax_uöt2
 = 0xffff;

92 c⁄° 
uöt2_t
 
	gmö_uöt2
 = 0;

93 c⁄° 
uöt4_t
 
	gmax_uöt4
 = 0xffffffff;

94 c⁄° 
uöt4_t
 
	gmö_uöt4
 = 0;

101 
ölöe
 
	$u4i
(
uöt4_t
 
x
Ë{
	`w_as£π1
(x<=()
max_öt4
);  (x); 
	}
}

107 
ölöe
 
boﬁ
 
	$is_Æig√d
(
smsize_t
 
sz
)

109  
w_ba£_t
::
	`is_Æig√d
(
sz
);

110 
	}
}

112 
ölöe
 
boﬁ
 
	$is_Æig√d
(c⁄° * 
p
)

114  
w_ba£_t
::
	`is_Æig√d
(
p
);

115 
	}
}

	@src/common/bitmap.cpp

30 
	~"w_deföes.h
"

34 
	#BITMAP_C


	)

36 #ifde‡
__GNUC__


37 #¥agm®
im∂emíèti⁄
 "bitmap.h"

40 
	~<c°dlib
>

41 
	~<w_°ªam.h
>

42 
	~"basics.h
"

43 
	~"bôm≠.h
"

44 
	~<w_debug.h
>

46 
ölöe
 
	$div8
(
x
Ë{  x >> 3; 
	}
}

47 
ölöe
 
	$mod8
(
x
Ë{  x & 7; 
	}
}

48 
ölöe
 
	$div32
(
x
Ë{  x >> 5; 
	}
}

49 
ölöe
 
	$mod32
(
x
Ë{  x & 31; 
	}
}

51 
	#OVERFLOW_MASK
 0x100

	)

54 
	$bm_zîo
(
u_ch¨
* 
bm
, 
size
)

56 
n
 = 
	`div8
(
size
 - 1) + 1;

57 
i
 = 0; i < 
n
; i++, 
bm
++)

58 *
bm
 = 0;

59 
	}
}

61 
	$bm_fûl
(
u_ch¨
* 
bm
, 
size
)

63 
n
 = 
	`div8
(
size
 - 1) + 1;

64 
i
 = 0; i < 
n
; i++, 
bm
++)

65 *
bm
 = ~0;

66 
	}
}

68 
boﬁ
 
	$bm_is_£t
(c⁄° 
u_ch¨
* 
bm
, 
off£t
)

70  (
bm
[
	`div8
(
off£t
)] & (1 << 
	`mod8
(offset))) != 0;

71 
	}
}

73 
	$bm_£t
(
u_ch¨
* 
bm
, 
off£t
)

75 
bm
[
	`div8
(
off£t
)] |(1 << 
	`mod8
(offset));

76 
	}
}

78 
	$bm_˛r
(
u_ch¨
* 
bm
, 
off£t
)

80 
bm
[
	`div8
(
off£t
)] &~(1 << 
	`mod8
(offset));

81 
	}
}

83 
	$bm_fú°_£t
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
)

85 #i‡
W_DEBUG_LEVEL
 > 2

86 c⁄° 
u_ch¨
 *
bm0
 = 
bm
;

88 
mask
;

90 
	`w_as£π3
(
°¨t
 >0 && sèπ <
size
);

92 
bm
 +
	`div8
(
°¨t
);

93 
mask
 = 1 << 
	`mod8
(
°¨t
);

95 
size
 -
°¨t
; size; start++, size--) {

96 i‡(*
bm
 & 
mask
) {

97 
	`w_as£π3
(
	`bm_is_£t
(
bm0
, 
°¨t
));

98  
°¨t
;

100 i‡((
mask
 <<1Ë=
OVERFLOW_MASK
) {

101 
mask
 = 1;

102 
bm
++;

107 
	}
}

109 
	$bm_fú°_˛r
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
)

111 
	`w_as£π3
(
°¨t
 >0 && sèπ <
size
);

112 
mask
;

113 #i‡
W_DEBUG_LEVEL
 > 2

114 c⁄° 
u_ch¨
 *
bm0
 = 
bm
;

117 
bm
 +
	`div8
(
°¨t
);

118 
mask
 = 1 << 
	`mod8
(
°¨t
);

120 
size
 -
°¨t
; size; start++, size--) {

121 i‡((*
bm
 & 
mask
) == 0) {

122 
	`w_as£π3
(
	`bm_is_˛r
(
bm0
, 
°¨t
));

123  
°¨t
;

125 i‡((
mask
 <<1Ë=
OVERFLOW_MASK
) {

126 
mask
 = 1;

127 
bm
++;

132 
	}
}

135 
	$bm_œ°_£t
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
)

137 
mask
;

138 #i‡
W_DEBUG_LEVEL
 > 2

139 c⁄° 
u_ch¨
 *
bm0
 = 
bm
;

142 
	`w_as£π3
(
°¨t
 >0 && sèπ < 
size
);

144 
bm
 +
	`div8
(
°¨t
);

145 
mask
 = 1 << 
	`mod8
(
°¨t
);

147 
size
 = 
°¨t
+1; size; start--, size--) {

148 i‡(*
bm
 & 
mask
) {

149 
	`w_as£π3
(
	`bm_is_£t
(
bm0
, 
°¨t
));

150  
°¨t
;

152 i‡((
mask
 >>= 1) == 0) {

153 
mask
 = 0x80;

154 
bm
--;

159 
	}
}

162 
	$bm_œ°_˛r
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
)

164 
mask
;

165 #i‡
W_DEBUG_LEVEL
 > 2

166 c⁄° 
u_ch¨
 *
bm0
 = 
bm
;

169 
	`w_as£π3
(
°¨t
 >0 && sèπ < 
size
);

171 
bm
 +
	`div8
(
°¨t
);

172 
mask
 = 1 << 
	`mod8
(
°¨t
);

174 
size
 = 
°¨t
+1; size; start--, size--) {

175 i‡((*
bm
 & 
mask
) == 0) {

176 
	`w_as£π3
(
	`bm_is_˛r
(
bm0
, 
°¨t
));

177  
°¨t
;

179 i‡((
mask
 >>= 1) == 0) {

180 
mask
 = 0x80;

181 
bm
--;

186 
	}
}

189 
	$bm_num_£t
(c⁄° 
u_ch¨
* 
bm
, 
size
)

191 
cou¡
;

192 
mask
;

193 
cou¡
 = 0, 
mask
 = 1; 
size
; size--) {

194 i‡(*
bm
 & 
mask
)

195 
cou¡
++;

196 i‡((
mask
 <<1Ë=
OVERFLOW_MASK
) {

197 
mask
 = 1;

198 
bm
++;

201  
cou¡
;

202 
	}
}

204 
	$bm_¥öt
(
u_ch¨
* 
bm
, 
size
)

206 
i
 = 0; i < 
size
; i++) {

207 
cout
 << (
	`bm_is_£t
(
bm
, 
i
) != 0);

209 
	}
}

	@src/common/bitmap.h

30 #i‚de‡
BITMAP_H


31 
	#BITMAP_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 "C" 
bm_fú°_£t
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
);

42 "C" 
bm_fú°_˛r
(c⁄° 
u_ch¨
* 
bm
, 
size
, 
°¨t
);

44 "C" 
bm_œ°_£t
(c⁄° 
u_ch¨
 *
bm
, 
size
, 
°¨t
);

45 "C" 
bm_œ°_˛r
(c⁄° 
u_ch¨
 *
bm
, 
size
, 
°¨t
);

47 "C" 
bm_num_£t
(c⁄° 
u_ch¨
* 
bm
, 
size
);

48 "C" 
bm_num_˛r
(c⁄° 
u_ch¨
* 
bm
, 
size
);

50 "C" 
boﬁ
 
bm_is_£t
(c⁄° 
u_ch¨
* 
bm
, 
off£t
);

51 "C" 
boﬁ
 
bm_is_˛r
(c⁄° 
u_ch¨
* 
bm
, 
off£t
);

53 "C" 
bm_zîo
(
u_ch¨
* 
bm
, 
size
);

54 "C" 
bm_fûl
(
u_ch¨
* 
bm
, 
size
);

56 "C" 
bm_£t
(
u_ch¨
* 
bm
, 
off£t
);

57 "C" 
bm_˛r
(
u_ch¨
* 
bm
, 
off£t
);

59 
ölöe
 
boﬁ
 
	$bm_is_˛r
(c⁄° 
u_ch¨
* 
bm
, 
off£t
)

61  !
	`bm_is_£t
(
bm
, 
off£t
);

62 
	}
}

64 
ölöe
 
	$bm_num_˛r
(c⁄° 
u_ch¨
* 
bm
, 
size
)

66  
size
 - 
	`bm_num_£t
(
bm
, size);

67 
	}
}

	@src/common/devid_t.cpp

53 
	~"w_deföes.h
"

57 
	#DEVID_T_C


	)

59 #ifde‡
__GNUC__


60 #¥agm®
im∂emíèti⁄


63 
	~<c°dlib
>

64 
	~<w_°ªam.h
>

65 
	~<w_ba£.h
>

66 
	~"basics.h
"

67 
	~"devid_t.h
"

69 
	~<°hªad.h
>

71 
	gdevid_t
::
	$devid_t
(c⁄° * 
∑th
)

72 : 
	`id
(0),

73 
	$dev
(0)

78 
fd
;

79 
w_rc_t
 
e
;

80 #i‡
W_DEBUG_LEVEL
 > 2

81 c⁄° *
wh©
 = "open";

84 
e
 = 
°hªad_t
::
	`›í
(
∑th
, sthªad_t::
OPEN_RDONLY
, 0, 
fd
);

85 i‡(!
e
.
	`is_îr‹
()) {

86 
°hªad_t
::
fûe°©_t
 
°
;

87 #i‡
W_DEBUG_LEVEL
 > 2

88 
wh©
 = "fstat";

90 
e
 = 
°hªad_t
::
	`f°©
(
fd
, 
°
);

91 i‡(!
e
.
	`is_îr‹
()) {

92 
id
 = 
°
.
°_fûe_id
;

93 
dev
 = 
°
.
°_devi˚_id
;

95 
	`W_COERCE
(
°hªad_t
::
	`˛o£
(
fd
));

99 i‡(
e
.
	`is_îr‹
()) {

100 #i‡
W_DEBUG_LEVEL
 > 2

101 
˚º
 << "devid_t::devid_t(" << 
∑th


102 << "): " << 
wh©
 << ":" << 
ídl
 << 
e
 <<Éndl;

104 *
this
 = 
nuŒ
;

106 
	}
}

108 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gdevid_t
& 
	gd
)

110  
	go
 << 
	gd
.
	gdev
 << "." << d.
	gid
;

113 c⁄° 
devid_t
 
	gdevid_t
::
nuŒ
;

	@src/common/devid_t.h

30 #i‚de‡
DEVID_T_H


31 
	#DEVID_T_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


49 
	sdevid_t
 {

52 
	mw_ba£_t
::
uöt8_t
 
id
;

53 
	mw_ba£_t
::
uöt4_t
 
dev
;

54 #i‡
deföed
(
ZERO_INIT
)

55 
fûl4
 
	mdummy
;

58 
devid_t
(Ë: 
id
(0), 
dev
(0) {};

59 
devid_t
(c⁄° * 
∑th«me
);

61 
boﬁ
 
	m›î©‹
==(c⁄° 
devid_t
& 
d
) const {

62  
id
 =
d
.id && 
dev
 == d.dev;

65 
boﬁ
 
	m›î©‹
!=(c⁄° 
devid_t
& 
d
Ëc⁄° { !(*
this
==d);}

66 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mdevid_t
& 
	md
);

68 c⁄° 
devid_t
 
	mnuŒ
;

	@src/common/hostname.h

30 #i‚de‡
HOSTNAME_H


31 
	#HOSTNAME_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
S∑rc
)

39 
gëho°«me
(*, );

	@src/common/kvl_t.cpp

30 
	~"w_deföes.h
"

34 #ifde‡
__GNUC__


35 #¥agm®
im∂emíèti⁄
 "kvl_t.h"

38 
	#VEC_T_C


	)

39 
	~<c°dlib
>

40 
	~<c°rög
>

41 
	~<w_°ªam.h
>

42 
	~<w_ba£.h
>

43 
	~"basics.h
"

44 
	~"kvl_t.h
"

46 c⁄° 
cvec_t
 
	gkvl_t
::
eof
("\0255EOF", 4);

49 c⁄° 
cvec_t
 
	gkvl_t
::
bof
("\0BOF", 4);

59 
	go°ªam
&

60 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gkvl_t
& 
	gkvl
)

62  
	go
 << "k(" << 
	gkvl
.
	g°id
 << '.' << kvl.
	gh
 << '.' << kvl.
	gg
 << ')';

73 
	gi°ªam
&

74 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	gkvl_t
& 
	gkvl
)

76 
	gc
[6];

77 
	gi
 >> 
	gc
[0] >> c[1] >> 
	gkvl
.
	g°id
 >> c[2]

78 >> 
	gkvl
.
	gh
 >> 
	gc
[3]

79 >> 
	gkvl
.
	gg
 >> 
	gc
[4];

80 
	gc
[5] = '\0';

81 i‡(
	gi
) {

82 i‡(
°rcmp
(
c
, "k(..)")) {

83 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

86  
	gi
;

	@src/common/kvl_t.h

30 #i‚de‡
KVL_T_H


31 
	#KVL_T_H


	)

33 
	~"w_deföes.h
"

41 #ifde‡
__GNUG__


42 #¥agm®
öãrÁ˚


45 #i‚de‡
STID_T_H


46 
	~"°id_t.h
"

48 #i‚de‡
VEC_T_H


49 
	~"vec_t.h
"

57 
	skvl_t
 {

58 
°id_t
 
	m°id
;

59 
	mw_ba£_t
::
uöt4_t
 
h
;

60 
	mw_ba£_t
::
uöt4_t
 
g
;

62 c⁄° 
cvec_t
 
	meof
;

63 c⁄° 
cvec_t
 
	mbof
;

66 
NORET
 
kvl_t
();

68 
NORET
 
kvl_t
(
°id_t
 
id
, c⁄° 
cvec_t
& 
v
);

70 
NORET
 
kvl_t
(

71 
°id_t
 
_°id
,

72 c⁄° 
cvec_t
& 
v1
,

73 c⁄° 
cvec_t
& 
v2
);

75 
	mNORET
 ~
kvl_t
();

77 
NORET
 
kvl_t
(c⁄° kvl_t& 
k
);

79 
	mkvl_t
& 
	m›î©‹
=(c⁄° 
kvl_t
& 
k
);

81 
	mkvl_t
& 
£t
(
°id_t
 
s
, c⁄° 
cvec_t
& 
v
);

82 
	mkvl_t
& 
£t
(
°id_t
 
s
,

83 c⁄° 
cvec_t
& 
v1
,

84 c⁄° 
cvec_t
& 
v2
);

85 
boﬁ
 
	m›î©‹
==(c⁄° 
kvl_t
& 
k
) const;

86 
boﬁ
 
	m›î©‹
!=(c⁄° 
kvl_t
& 
k
) const;

87 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mkvl_t
& 
	mk
);

88 
‰õnd
 
	mi°ªam
& 
	m›î©‹
>>(i°ªam&, 
	mkvl_t
& 
	mk
);

91 
ölöe
 
NORET


92 
	gkvl_t
::
	$kvl_t
()

93 : 
	`°id
(
°id_t
::
nuŒ
), 
	`h
(0), 
	$g
(0)

95 
	}
}

97 
ölöe
 
NORET


98 
	gkvl_t
::
	$kvl_t
(
°id_t
 
id
, c⁄° 
cvec_t
& 
v
)

99 : 
	$°id
(
id
)

101 
v
.
	`ˇlc_kvl
(
h
), 
g
 = 0;

102 
	}
}

104 
ölöe
 
NORET


105 
	gkvl_t
::
	$kvl_t
(
°id_t
 
id
, c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
)

106 : 
	$°id
(
id
)

108 
v1
.
	`ˇlc_kvl
(
h
); 
v2
.ˇlc_kvl(
g
);

109 
	}
}

111 
ölöe
 
NORET


112 
	gkvl_t
::~
	$kvl_t
()

114 
	}
}

116 
ölöe
 
NORET


117 
kvl_t
::
	$kvl_t
(c⁄° 
kvl_t
& 
k
)

118 : 
	`°id
(
k
.
°id
), 
	`h
(k.
h
), 
	$g
(
k
.
g
)

120 
	}
}

122 
ölöe
 
	gkvl_t
&

123 
	gkvl_t
::
›î©‹
=(c⁄° 
kvl_t
& 
k
)

125 
°id
 = 
k
.stid;

126 
	gh
 = 
k
.
h
, 
	gg
 = k.
g
;

127  *
	gthis
;

131 
ölöe
 
	gkvl_t
&

132 
	gkvl_t
::
	$£t
(
°id_t
 
s
, c⁄° 
cvec_t
& 
v
)

134 
°id
 = 
s
, 
v
.
	`ˇlc_kvl
(
h
), 
g
 = 0;

135  *
this
;

136 
	}
}

138 
ölöe
 
	gkvl_t
&

139 
	gkvl_t
::
	$£t
(
°id_t
 
s
, c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
)

141 
°id
 = 
s
, 
v1
.
	`ˇlc_kvl
(
h
), 
v2
.ˇlc_kvl(
g
);

142  *
this
;

143 
	}
}

145 
ölöe
 
boﬁ


146 
	gkvl_t
::
›î©‹
==(c⁄° 
kvl_t
& 
k
) const

148  
h
 =
k
.h && 
g
 == k.g;

151 
ölöe
 
boﬁ


152 
	gkvl_t
::
›î©‹
!=(c⁄° 
kvl_t
& 
k
) const

154  ! (*
this
 =
k
);

	@src/common/latch.cpp

54 
	~"w_deföes.h
"

58 #ifde‡
__GNUC__


59 #¥agm®
im∂emíèti⁄


62 
	~"w.h
"

63 
	~"°hªad.h
"

64 
	~"œtch.h
"

65 
	~"w_debug.h
"

67 
	~<c°rög
>

68 
	~<°hªad_°©s.h
>

69 
	~<li°
>

70 
	~<Æg‹ôhm
>

72 c⁄° * c⁄° 
	gœtch_t
::
œtch_mode_°r
[3] = { "NL", "SH", "EX" };

75 
	gœtch_t
::
	$œtch_t
(c⁄° * c⁄° 
desc
) :

76 #i‡
LATCH_CAN_BLOCK_LONG


77 
	`_blockög
(
Ál£
),

79 
	$_tŸÆ_cou¡
(0)

81 #i‡
LATCH_CAN_BLOCK_LONG


82 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_block_lock
, 
NULL
));

84 
	`£äame
(
desc
);

85 
	}
}

87 
	gœtch_t
::~
	$œtch_t
()

89 #i‡
W_DEBUG_LEVEL
 > 1

90 
t
 = 
_tŸÆ_cou¡
;

92 if(
t
) {

93 
	`Ârötf
(
°dîr
, "t=%d\n", 
t
);

95 
	`w_as£π2
(
t
 == 0);

97 
	`w_as£π2
(
	`mode
(Ë=
LATCH_NL
);

98 
	`w_as£π2
(
	`num_hﬁdîs
() == 0);

99 #i‡
LATCH_CAN_BLOCK_LONG


100 
	`w_as£π2
(
_blocked_li°
.
	`is_em±y
());

101 
	`w_as£π2
(!
_blockög
);

104 
	}
}

126 
__thªad
 
œtch_hﬁdî_t
* 
	gœtch_hﬁdî_t
::
thªad_loˇl_hﬁdîs
(
NULL
);

140 
__thªad
 
œtch_hﬁdî_t
* 
	gœtch_hﬁdî_t
::
thªad_loˇl_‰ìli°
(
NULL
);

151 ˛as†
	chﬁdî_li°


153 
	mœtch_hﬁdî_t
* &
	m_fú°
;

154 
	mpublic
:

155 
	$hﬁdî_li°
(
œtch_hﬁdî_t
* &
fú°
Ë: 
	$_fú°
(
fú°
) { }

158 
	sôî©‹
 {

159 
œtch_hﬁdî_t
* 
_cur
;

160 
public
:

163 
ex∂icô
 
	`ôî©‹
(
œtch_hﬁdî_t
* 
cur
Ë: 
	`_cur
(cur) { }

166 
›î©‹
 
œtch_hﬁdî_t
*(Ëc⁄° {  
_cur
; }

169 
œtch_hﬁdî_t
* 
›î©‹
->(Ëc⁄° {  *
this
; }

172 
ôî©‹
 &
›î©‹
++(Ë{ 
_cur
 = _cur->
_√xt
;  *
this
; }

175 
ôî©‹
 
›î©‹
++(Ë{  ++
	`ôî©‹
(*
this
); }

176 
	}
};

179 
ôî©‹
 
	$begö
(Ë{  
	`ôî©‹
(
_fú°
); 
	}
}

182 
ôî©‹
 
	$íd
(Ë{  
	`ôî©‹
(
NULL
); 
	}
}

185 
	$push_‰⁄t
(
œtch_hﬁdî_t
* 
h
) {

186 
h
->
_√xt
 = 
_fú°
;

187 if(
_fú°
Ë_fú°->
_¥ev
 = 
h
;

188 
h
->
_¥ev
 = 
NULL
;

189 
_fú°
 = 
h
;

190 
	}
}

193 
œtch_hﬁdî_t
* 
	$u∆ök
(
ôî©‹
 c⁄° &
ô
) {

194 if(
ô
->
_√xt
)

195 
ô
->
_√xt
->
_¥ev
 = it->_prev;

197 if(
ô
->
_¥ev
)

198 
ô
->
_¥ev
->
_√xt
 = it->_next;

200 
_fú°
 = 
ô
->
_√xt
;

203  
ô
;

204 
	}
}

220 ˛as†
	chﬁdîs_¥öt


222 
	m¥iv©e
:

223 
hﬁdî_li°
 
_hﬁdîs
;

224 
	$¥öt
(
hﬁdî_li°
 
hﬁdîs
)

226 
hﬁdî_li°
::
ôî©‹
 
ô
=
hﬁdîs
.
	`begö
();

227 ; 
ô
!=
hﬁdîs
.
	`íd
(Ë&& it->
_œtch
; ++it)

229 
ô
->
	`¥öt
(
˚º
);

232 
public
:

233 
	$hﬁdîs_¥öt
(
œtch_hﬁdî_t
 *
li°
)

234 : 
	$_hﬁdîs
(
li°
)

236 
	`¥öt
(
_hﬁdîs
);

237 
	}
}

249 ˛as†
	chﬁdî_£¨ch


251 
	mpublic
:

253 
hﬁdî_li°
::
ôî©‹
 
	$föd
(
hﬁdî_li°
 
hﬁdîs
, 
œtch_t
 c⁄°* 
l
)

255 
hﬁdî_li°
::
ôî©‹
 
ô
=
hﬁdîs
.
	`begö
();

256 ; 
ô
!=
hﬁdîs
.
	`íd
(Ë&& it->
_œtch
 !
l
; ++it) ;

257  
ô
;

261 
	$cou¡
(
hﬁdî_li°
 
hﬁdîs
, 
œtch_t
 c⁄°* 
l
)

263 
hﬁdî_li°
::
ôî©‹
 
ô
=
hﬁdîs
.
	`begö
();

264 
c
=0;

265 ; 
ô
!=
hﬁdîs
.
	`íd
(); ++ôËif(ô->
_œtch
 =
l
Ë
c
++;

266  
c
;

267 
	}
}

269 
	g¥iv©e
:

270 
hﬁdî_li°
 
_hﬁdîs
;

271 
	gœtch_hﬁdî_t
* &
	g_‰ìli°
;

272 
	ghﬁdî_li°
::
ôî©‹
 
_íd
;

273 
	ghﬁdî_li°
::
ôî©‹
 
_ô
;

275 
	gpublic
:

277 
	$hﬁdî_£¨ch
(
œtch_t
 c⁄°* 
l
)

278 : 
	`_hﬁdîs
(
œtch_hﬁdî_t
::
thªad_loˇl_hﬁdîs
),

279 
	`_‰ìli°
(
œtch_hﬁdî_t
::
thªad_loˇl_‰ìli°
),

280 
	`_íd
(
_hﬁdîs
.
	`íd
()),

281 
	`_ô
(
	$föd
(
_hﬁdîs
, 
l
))

287 if(
_ô
 =
_íd
) {

288 
œtch_hﬁdî_t
* 
h
 = 
_‰ìli°
;

289 if(
h
Ë
_‰ìli°
 = h->
_√xt
;

291 if(
h
)

293 
h
 = 
	`√w
(hË
	`œtch_hﬁdî_t
();

295 
h
 = 
√w
 
œtch_hﬁdî_t
;

296 
_hﬁdîs
.
	`push_‰⁄t
(
h
);

297 
_ô
 = 
_hﬁdîs
.
	`begö
();

299 
	`w_as£π2
(
	`cou¡
(
_hﬁdîs
, 
l
) <= 1);

300 
	}
}

302 ~
	$hﬁdî_£¨ch
()

304 if(
_ô
 =
_íd
 || _ô->
_mode
 !
LATCH_NL
)

308 
œtch_hﬁdî_t
* 
h
 = 
_hﬁdîs
.
	`u∆ök
(
_ô
);

309 
h
->
_√xt
 = 
_‰ìli°
;

310 
_‰ìli°
 = 
h
;

311 
	}
}

313 
œtch_hﬁdî_t
* 
	g›î©‹
->(Ë{  
	gthis
->
vÆue
(); }

315 
œtch_hﬁdî_t
* 
	$vÆue
(Ë{  (
_ô
 =
_íd
)?

316 (
œtch_hﬁdî_t
 *)(
NULL
Ë: &(*
_ô
); 
	}
}

323 
	~<m≠
>

324 
	g°d
::
	tm≠
<
	t°hªad_t
*, 
	tœtch_hﬁdî_t
**> 
	thﬁdî_li°_li°_t
;

325 
hﬁdî_li°_li°_t
 
	ghﬁdî_li°_li°
;

329 
queue_ba£d_block_lock_t
 
	ghﬁdî_li°_li°_lock
;

331 
	gœtch_t
::
	$⁄_thªad_öô
(
°hªad_t
 *
who
)

333 
	`CRITICAL_SECTION
(
cs
, 
hﬁdî_li°_li°_lock
);

334 
hﬁdî_li°_li°
.
	`ö£π
(
°d
::
	`make_∑ú
(
who
,

335 &
œtch_hﬁdî_t
::
thªad_loˇl_hﬁdîs
));

336 
	}
}

338 
	gœtch_t
::
	$⁄_thªad_de°roy
(
°hªad_t
 *
who
)

341 
	`CRITICAL_SECTION
(
cs
, 
hﬁdî_li°_li°_lock
);

342 
hﬁdî_li°_li°
.
	`îa£
(
who
);

345 
	`w_as£π3
(!
œtch_hﬁdî_t
::
thªad_loˇl_hﬁdîs
);

346 
œtch_hﬁdî_t
* 
‰ìli°
 =Ü©ch_hﬁdî_t::
thªad_loˇl_‰ìli°
;

347 
‰ìli°
) {

348 
œtch_hﬁdî_t
* 
node
 = 
‰ìli°
;

349 
‰ìli°
 = 
node
->
_√xt
;

350 
dñëe
 
node
;

352 
œtch_hﬁdî_t
::
thªad_loˇl_‰ìli°
 = 
NULL
;

353 
	}
}

357 
w_rc_t


358 
	gœtch_t
::
	$œtch_acquúe
(
œtch_mode_t
 
mode
, 
°hªad_t
::
timeout_ö_ms
 
timeout
)

360 
	`w_as£π1
(
mode
 !
LATCH_NL
);

361 
hﬁdî_£¨ch
 
	`me
(
this
);

362  
	`_acquúe
(
mode
, 
timeout
, 
me
.
	`vÆue
());

363 
	}
}

365 
w_rc_t


366 
	gœtch_t
::
	$upgøde_if_nŸ_block
(
boﬁ
& 
would_block
)

368 
	`DBGTHRD
(<< " w™àtÿupgødê" << *
this
 );

369 
hﬁdî_£¨ch
 
	`me
(
this
);

372 
	`w_as£π3
(
me
.
	`vÆue
(Ë!
NULL
);

375 if(
me
->
_mode
 =
LATCH_EX
) {

376 
would_block
 = 
Ál£
;

377  
RCOK
;

380 
w_rc_t
 
rc
 = 
	`_acquúe
(
LATCH_EX
, 
WAIT_IMMEDIATE
, 
me
.
	`vÆue
());

381 if(
rc
.
	`is_îr‹
()) {

383 
	`w_as£π3
(
rc
.
	`îr_num
(Ë!
°hªad_t
::
°TIMEOUT
);

384 if(
rc
.
	`îr_num
(Ë!
°hªad_t
::
°INUSE
)

385  
	`RC_AUGMENT
(
rc
);

387 
would_block
 = 
åue
;

391 
	`©omic_dec_uöt
(&
_tŸÆ_cou¡
);

392 
me
->
_cou¡
--;

393 
would_block
 = 
Ál£
;

395  
RCOK
;

396 
	}
}

398 
	gœtch_t
::
	$œtch_ªÀa£
()

400 
hﬁdî_£¨ch
 
	`me
(
this
);

402 
	`w_as£π2
(
me
.
	`vÆue
(Ë!
NULL
);

403 
	`_ªÀa£
(
me
.
	`vÆue
());

404 
	}
}

406 
w_rc_t
 
	gœtch_t
::
	$_acquúe
(
œtch_mode_t
 
√w_mode
,

407 
°hªad_t
::
timeout_ö_ms
 
timeout
,

408 
œtch_hﬁdî_t
* 
me
)

410 
	`FUNC
(
œtch_t
::
acquúe
);

411 
	`DBGTHRD
( << "wantÅoácquire in mode "

412 << 
	`W_ENUM
(
√w_mode
Ë<< " " << *
this


414 
	`w_as£π2
(
√w_mode
 !
LATCH_NL
);

415 
	`w_as£π2
(
me
);

418 if(
√w_mode
 =
LATCH_NLS
 ||Çew_modê=
LATCH_NLX
) {

419 if(
me
->
_œtch
 !
this
) {

420 
me
->
_œtch
 = 
this
;

421 
me
->
_cou¡
 = 1;

423 
_lock
.
	`£t_∂p
(
√w_mode
 =
LATCH_NLS
);

424 
me
->
_mode
 = 
√w_mode
;

425  (
RCOK
);

429 
boﬁ
 
is_upgøde
 = 
Ál£
;

430 if(
me
->
_œtch
 =
this
)

433 
	`w_as£π2
(
me
->
_mode
 !
LATCH_NL
);

434 
	`w_as£π2
(
	`mode
(Ë=
me
->
_mode
);

436 if(
	`mode
(Ë=
LATCH_EX
) {

437 
	`w_as£π2
(
	`num_hﬁdîs
() == 1);

439 
√w_mode
 = 
LATCH_EX
;

441 
	`w_as£π2
(
	`num_hﬁdîs
() >= 1);

443 if(
me
->
_mode
 =
√w_mode
) {

444 
	`DBGTHRD
(<< "wêÆªady hñdÜ©ch i¿desúed modê" << *
this
);

445 
	`©omic_öc_uöt
(&
_tŸÆ_cou¡
);

446 
me
->
_cou¡
++;

449  
RCOK
;

450 } if(
√w_mode
 =
LATCH_EX
 && 
me
->
_mode
 =
LATCH_SH
) {

451 
is_upgøde
 = 
åue
;

455 
me
->
_œtch
 = 
this
;

456 
me
->
_mode
 = 
LATCH_NL
;

457 
me
->
_cou¡
 = 0;

462 #i‡!
LATCH_CAN_BLOCK_LONG


463 if(
is_upgøde
) {

464 if(!
_lock
.
	`©ãm±_upgøde
())

465  
	`RC
(
°hªad_t
::
°INUSE
);

467 
	`w_as£π2
(
me
->
_cou¡
 > 0);

468 
	`w_as£π2
(
√w_mode
 =
LATCH_EX
);

469 
me
->
_mode
 = 
√w_mode
;

471 if(
timeout
 =
WAIT_IMMEDIATE
) {

472 
boﬁ
 
suc˚ss
 = (
√w_mode
 =
LATCH_SH
)?

473 
_lock
.
	`©ãm±_ªad
(Ë: _lock.
	`©ãm±_wrôe
();

474 if(!
suc˚ss
)

475  
	`RC
(
°hªad_t
::
°TIMEOUT
);

479 if(
√w_mode
 =
LATCH_SH
) {

480 
_lock
.
	`acquúe_ªad
();

483 
	`w_as£π2
(
√w_mode
 =
LATCH_EX
);

484 
	`w_as£π2
(
me
->
_cou¡
 == 0);

485 
_lock
.
	`acquúe_wrôe
();

488 
	`w_as£π2
(
me
->
_cou¡
 == 0);

489 
me
->
_mode
 = 
√w_mode
;

491 
	`©omic_öc_uöt
(&
_tŸÆ_cou¡
);

492 
me
->
_cou¡
++;

496 #i‡
LATCH_CAN_BLOCK_LONG


497 
	`CRITICAL_SECTION
(
cs
, 
_lock
);

498 
√w_mode
 !
LATCH_NL
) {

499 
w_rc_t
 
rc
;

500 if(
√w_mode
 =
LATCH_SH
) {

502 
	`w_as£π2
(
me
->
_mode
 !
LATCH_EX
);

503 if(
√w_mode
 < 
LATCH_EX
 && 
_blocked_li°
.
	`is_em±y
())

508 
	`w_as£π2
(
me
->
_mode
 !
LATCH_EX
);

509 if(
_mode
 =
LATCH_NL
) {

511 
	`w_as£π2
(
	`hﬁdîs
() == 0);

512 
	`w_as£π2
(
me
->
_mode
 =
LATCH_NL
);

513 
	`w_as£π2
(
me
->
_cou¡
 == 0);

518 if(
me
->
_mode
 =
LATCH_SH
) {

520 
	`w_as£π2
(
is_upgøde
);

522 if(
	`num_hﬁdîs
() == 1)

525  
	`RC
(
°hªad_t
::
°INUSE
);

530 if(
timeout
 !
WAIT_IMMEDIATE
) {

532 
	`DBGTHRD
(<<"abouàtÿawaô " << *
this
);

533 
_blockög
 = 
åue
;

534 
cs
.
	`∑u£
();

535 
	`CRITICAL_SECTION
(
bcs
, 
_block_lock
);

538 if(
_blockög
) {

539 
SthªadSèts
.
œtch_waô
++;

540 
rc
 = 
°hªad_t
::
	`block
(
bcs
.
	`h™d_off
(), 
timeout
, &
_blocked_li°
, 
	`«me
(), 
this
);

543 
cs
.
	`ªsume
();

545 
rc
 = 
	`RC
(
°hªad_t
::
°TIMEOUT
);

548 if(
rc
) {

549 
	`w_as£π2
(
rc
.
	`îr_num
(Ë=
°hªad_t
::
°TIMEOUT
);

550 if(
timeout
 > 0)

551 
SthªadSèts
.
œtch_time
 +
timeout
;

553  
	`RC_AUGMENT
(
rc
);

558 if(
is_upgøde
) {

559 
	`w_as£π2
(
me
->
_mode
 =
LATCH_SH
);

560 
	`w_as£π2
(
_mode
 =
LATCH_SH
);

561 
	`w_as£π2
(
√w_mode
 =
LATCH_EX
);

562 
	`w_as£π2
(
	`num_hﬁdîs
() == 1);

563 
	`w_as£π2
(
me
->
_cou¡
 >= 1);

565 
	`w_as£π2
(
me
->
_cou¡
 == 0);

566 
_hﬁdîs
++;

568 
me
->
_cou¡
++;

569 
	`©omic_öc_uöt
(
_tŸÆ_cou¡
);

570 
√w_mode
 = 
me
->
_mode
 =Çew_mode;

574 
	`w_as£π2
(
_mode
 =
LATCH_SH
 || 
	`num_hﬁdîs
() == 1);

577 
	`DBGTHRD
(<< "acquúed " << *
this
 );

580  
RCOK
;

581 
	}
};

585 
	gœtch_t
::
	$_ªÀa£
(
œtch_hﬁdî_t
* 
me
)

587 
	`FUNC
(
œtch_t
::
ªÀa£
);

588 
	`DBGTHRD
(<< "w™àtÿªÀa£ " << *
this
 );

590 
	`w_as£π2
(
me
->
_œtch
 =
this
);

591 
	`w_as£π2
(
me
->
_mode
 !
LATCH_NL
);

592 
	`w_as£π2
(
me
->
_cou¡
 > 0);

595 if(
me
->
_mode
 =
LATCH_NLS
 || me->_modê=
LATCH_NLX
) {

596 
me
->
_mode
 = 
LATCH_NL
;

597 
me
->
_cou¡
 = 0;

598 
_lock
.
	`un£t_∂p
();

602 
	`©omic_dec_uöt
(&
_tŸÆ_cou¡
);

603 if(--
me
->
_cou¡
) {

604 
	`DBGTHRD
(<< "wa†hñd mu…ùÀÅime†-- stû»" << 
me
->
_cou¡
 << " " << *
this
 );

608 if(
me
->
_mode
 =
LATCH_SH
) {

609 
	`w_as£π2
(
_lock
.
	`has_ªadî
());

610 
_lock
.
	`ªÀa£_ªad
();

613 
	`w_as£π2
(
_lock
.
	`has_wrôî
());

614 
_lock
.
	`ªÀa£_wrôe
();

616 
me
->
_mode
 = 
LATCH_NL
;

618 #i‡
LATCH_CAN_BLOCK_LONG


619 
	`CRITICAL_SECTION
(
cs
, 
_lock
);

620 
	`w_as£π2
(
_mode
 !
LATCH_NL
);

621 
	`w_as£π2
(
me
->
_mode
 == _mode);

623 
boﬁ
 
brﬂdˇ°
;

624 
me
->
_mode
 = 
LATCH_NL
;

625 if(
_mode
 =
LATCH_SH
) {

626 
	`w_as£π3
(
_hﬁdîs
 >= 1);

627 
_hﬁdîs
--;

630 
brﬂdˇ°
 = 
Ál£
;

632 
	`w_as£π3
(
_hﬁdîs
 == 1);

633 
_hﬁdîs
 = 0;

636 
brﬂdˇ°
 = 
åue
;

640 if(
_hﬁdîs
 == 0) {

641 
_mode
 = 
LATCH_NL
;

642 if(!
_blocked_li°
.
	`is_em±y
(Ë|| 
_blockög
) {

643 
cs
.
	`exô
();

644 
	`CRITICAL_SECTION
(
bcs
, 
_block_lock
);

645 
_blockög
 = 
Ál£
;

647 if(
brﬂdˇ°
) {

648 
	`W_COERCE
(
_blocked_li°
.
	`wakeup_Æl
());

651 
	`W_COERCE
(
_blocked_li°
.
	`wakeup_fú°
());

657 
	}
}

659 
	gœtch_t
::
	$downgøde
() {

660 
hﬁdî_£¨ch
 
	`me
(
this
);

662 
	`w_as£π3
(
me
.
	`vÆue
(Ë!
NULL
);

663 
	`_downgøde
(
me
.
	`vÆue
());

664 
	}
}

667 
	gœtch_t
::
	$_downgøde
(
œtch_hﬁdî_t
* 
me
)

669 
	`FUNC
(
œtch_t
::
downgøde
);

670 
	`DBGTHRD
(<< "w™àtÿdowngødê" << *
this
 );

672 
	`w_as£π3
(
me
->
_œtch
 =
this
);

673 
	`w_as£π3
(
me
->
_mode
 =
LATCH_EX
);

674 
	`w_as£π3
(
me
->
_cou¡
 > 0);

676 
_lock
.
	`downgøde
();

677 
me
->
_mode
 = 
LATCH_SH
;

679 #i‡
LATCH_CAN_BLOCK_LONG


680 
	`CRITICAL_SECTION
(
cs
, 
_lock
);

681 
	`w_as£π3
(
_mode
 =
LATCH_EX
);

682 
	`w_as£π3
(
_hﬁdîs
 == 1);

684 
_mode
 = 
me
->_modê
LATCH_SH
;

687 if(!
_blocked_li°
.
	`is_em±y
(Ë|| 
_blockög
) {

688 
cs
.
	`exô
();

689 
	`CRITICAL_SECTION
(
bcs
, 
_block_lock
);

690 
_blockög
 = 
Ál£
;

691 
	`W_COERCE
(
_blocked_li°
.
	`wakeup_Æl
());

694 
	}
}

696 
	gœtch_hﬁdî_t
::
	$¥öt
(
o°ªam
 &
o
) const

698 
o
 << "Hﬁdî " << 
œtch_t
::
œtch_mode_°r
[(
_mode
)]

699 << " c¡=" << 
_cou¡


700 << "Åhªadid/" << ::
hex
 << 
w_ba£_t
::
	`uöt8_t
(
_thªadid
)

702 if(
_œtch
) {

703 
o
 << *
_œtch
 << 
ídl
;

705 
o
 << "NULL" << 
ídl
;

707 
	}
}

714 
	gœtch_t
::
	$hñd_by_me
() const

716 
hﬁdî_£¨ch
 
	`me
(
this
);

717  
me
.
	`vÆue
()? me->
_cou¡
 : 0;

718 
	}
}

720 
boﬁ


721 
	gœtch_t
::
	$is_möe
() const {

722 
hﬁdî_£¨ch
 
	`me
(
this
);

723  
me
.
	`vÆue
()? (me->
_mode
 =
LATCH_EX
 || me->_modê=
LATCH_NLX
Ë: 
Ál£
;

724 
	}
}

728 
	~<w_°ªam.h
>

729 
	go°ªam
 &
	gœtch_t
::
	$¥öt
(
o°ªam
 &
out
) const

731 
out
 << "œtch(" << 
this
 << "): " << 
	`«me
();

732 
out
 << " hñd i¿" << 
œtch_mode_°r
[(
	`mode
())] << " mode ";

733 
out
 << "by " << 
	`num_hﬁdîs
() << "Åhreads " ;

734 
out
 << "tŸÆ " << 
	`œtch_˙t
() << "Åimes " ;

735 
out
 << 
ídl
;

736  
out
;

737 
	}
}

740 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	gout
, c⁄° 
	gœtch_t
& 
	gl
)

742  
	gl
.
¥öt
(
out
);

746 
	$¥öt_œtch
(c⁄° 
œtch_t
 *
l
)

748 if(
l
 !
NULL
Ël->
	`¥öt
(
˚º
);

749 
	}
}

752 
	$¥öt_my_œtches
()

754 
	`FUNC
(
¥öt_my_œtches
);

755 
hﬁdîs_¥öt
 
	`Æl
(
œtch_hﬁdî_t
::
thªad_loˇl_hﬁdîs
);

756 
	}
}

758 
	$¥öt_Æl_œtches
()

760 
	`FUNC
(
¥öt_Æl_œtches
);

765 
cou¡
=0;

767 
hﬁdî_li°_li°_t
::
ôî©‹
 
ôî
;

768 
ôî

hﬁdî_li°_li°
.
	`begö
();

769 
ôî
 !
hﬁdî_li°_li°
.
	`íd
();

770 
ôî
 ++Ë
cou¡
++;

772 
hﬁdî_li°_li°_t
::
ôî©‹
 
ôî
;

773 
˚º
 << "ALL " << 
cou¡
 << " LATCHES {" << 
ídl
;

774 
ôî

hﬁdî_li°_li°
.
	`begö
();

775 
ôî
 !
hﬁdî_li°_li°
.
	`íd
(); iter ++)

777 
	`DBG
(<<"");

778 
°hªad_t
* 
who
 = 
ôî
->
fú°
;

779 
	`DBG
(<<" whÿ" << (*)(
who
));

780 
œtch_hﬁdî_t
 **
who¶i°
 = 
ôî
->
£c⁄d
;

781 
	`DBG
(<<" who¶i° " << (*)(
who¶i°
));

782 if(
who
) {

783 
˚º
 << "{ Thªad id:" << ::
dec
 << 
who
->
id


784 << " @ sthªad/" << ::
hex
 << 
w_ba£_t
::
	`uöt8_t
(
who
)

785 << " @Öthªad/" << ::
hex
 << 
w_ba£_t
::
	`uöt8_t
(
who
->
	`my£lf
())

786 << 
ídl
 << "\t";

788 
˚º
 << "{Émpty }"

789 << 
ídl
 << "\t";

791 
	`DBG
(<<"");

792 
hﬁdîs_¥öt
 
	`who£
(*
who¶i°
);

793 
˚º
 << "} " << 
ídl
 << 
Êush
;

795 
˚º
 << "}" << 
ídl
 << 
Êush
 ;

796 
	}
}

	@src/common/latch.h

54 #i‚de‡
LATCH_H


55 
	#LATCH_H


	)

57 
	~"w_deföes.h
"

61 #i‚de‡
STHREAD_H


62 
	~<°hªad.h
>

65 #ifde‡
__GNUG__


66 #¥agm®
öãrÁ˚


69 
	~<li°
>

73 
	eœtch_mode_t
 { 
	mLATCH_NL
 = 0, 
	mLATCH_SH
 = 1, 
	mLATCH_EX
 = 2,

74 
	mLATCH_NLS
 = 4, 
	mLATCH_NLX
 = 8 };

78 
˛ass
 
	gœtch_t
;

79 
o°ªam
 &
›î©‹
<<(o°ªam &, c⁄° 
œtch_t
 &);

94 ˛as†
	cœtch_hﬁdî_t


96 
	mpublic
:

114 
__thªad
 
œtch_hﬁdî_t
* 
thªad_loˇl_hﬁdîs
;

115 
__thªad
 
œtch_hﬁdî_t
* 
	mthªad_loˇl_‰ìli°
;

117 
œtch_t
* 
	m_œtch
;

118 
œtch_mode_t
 
	m_mode
;

119 
	m_cou¡
;

120 
	m¥iv©e
:

121 
°hªad_t
* 
_thªadid
;

124 
	mœtch_hﬁdî_t
 &
	m›î©‹
=(
œtch_hﬁdî_t
 c⁄° &
Ÿhî
);

125 
	mpublic
:

127 
œtch_hﬁdî_t
* 
_¥ev
;

128 
œtch_hﬁdî_t
* 
	m_√xt
;

130 
	$œtch_hﬁdî_t
()

131 : 
	`_œtch
(
NULL
), 
	`_mode
(
LATCH_NL
), 
	`_cou¡
(0), 
	$_thªadid
(
NULL
)

133 
_thªadid
 = 
°hªad_t
::
	`me
();

136 
boﬁ
 
›î©‹
==(
œtch_hﬁdî_t
 c⁄° &
Ÿhî
) const {

137 if(
_thªadid
 !
Ÿhî
._thªadidË 
Ál£
;

138  
_œtch
 =
Ÿhî
._latch &&

139 
_mode
 =
Ÿhî
._modê&& 
_cou¡
 == other._count;

140 
	}
}

142 
	$¥öt
(
o°ªam
 &
o
) const;

143 
	}
};

145 
	~<iosfwd
>

156 ˛as†
	cœtch_t
 : 
public
 
°hªad_«med_ba£_t
 {

158 
public
:

163 
⁄_thªad_öô
(
°hªad_t
 *);

166 
⁄_thªad_de°roy
(
°hªad_t
 *);

170 
NORET
 
œtch_t
(c⁄° * c⁄° 
desc
 = 0);

171 
	mNORET
 ~
œtch_t
();

174 
	mo°ªam
& 
	$¥öt
(
o°ªam
 &) const;

177 
ölöe
 c⁄° * 
	$id
(Ëc⁄° {  &
_lock
; }

180 
ölöe
 
	`£äame
(c⁄° *c⁄° 
desc
);

183 
w_rc_t
 
	`œtch_acquúe
(

184 
œtch_mode_t
 
m
,

185 
°hªad_t
::
timeout_ö_ms
 
timeout
 =

186 
°hªad_ba£_t
::
WAIT_FOREVER
);

193 
w_rc_t
 
	`upgøde_if_nŸ_block
(
boﬁ
& 
would_block
);

199 
	`downgøde
();

205 
	`œtch_ªÀa£
();

208 
boﬁ
 
	$is_œtched
() const;

219 
	$œtch_˙t
(Ëc⁄° {  
_tŸÆ_cou¡
; 
	}
}

222 
	$num_hﬁdîs
() const;

224 
boﬁ
 
	$is_möe
() const;

226 
	$hñd_by_me
() const;

228 
œtch_mode_t
 
	$mode
() const;

231 c⁄° * c⁄° 
œtch_mode_°r
[3];

233 
¥iv©e
:

235 
w_rc_t
 
	`_acquúe
(
œtch_mode_t
 
m
,

236 
°hªad_t
::
timeout_ö_ms
,

237 
œtch_hﬁdî_t
* 
me
);

238 
	`_ªÀa£
(
œtch_hﬁdî_t
* 
me
);

239 
	`_downgøde
(
œtch_hﬁdî_t
* 
me
);

248 
muèbÀ
 
§wlock_t
 
_lock
;

249 #i‡
LATCH_CAN_BLOCK_LONG


250 
boﬁ
 
_blockög
;

251 
±hªad_muãx_t
 
_block_lock
;

252 
°hªad_¥i‹ôy_li°_t
 
_blocked_li°
;

256 
NORET
 
	`œtch_t
(c⁄° 
œtch_t
&);

257 
œtch_t
& 
›î©‹
=(constÜatch_t&);

259 
w_ba£_t
::
uöt4_t
 
_tŸÆ_cou¡
;

260 
	}
};

264 
ölöe
 

265 
	gœtch_t
::
	$£äame
(c⁄° * c⁄° 
desc
)

267 
	`ª«me
("l:", 
desc
);

268 
	}
}

270 
ölöe
 
boﬁ


271 
	gœtch_t
::
	$is_œtched
() const

281  
_lock
.
	`is_locked
();

282 
	}
}

284 
ölöe
 

285 
	gœtch_t
::
	$num_hﬁdîs
() const

287  
_lock
.
	`num_hﬁdîs
();

288 
	}
}

291 
ölöe
 
œtch_mode_t


292 
	gœtch_t
::
	$mode
() const

294 if(
_lock
.
	`is_∂p
()) {

295 if(
_lock
.
	`is_ªadî
()) {

296  
LATCH_NLS
;

298  
LATCH_NLX
;

301 
_lock
.
	`mode
()) {

302 
mcs_rwlock
::
NONE
:  
LATCH_NL
;

303 
mcs_rwlock
::
WRITER
:  
LATCH_EX
;

304 
mcs_rwlock
::
READER
:  
LATCH_SH
;

305 : 
	`w_as£π1
(0);

306  
LATCH_SH
;

309 
	}
}

312 "C" 
¥öt_my_œtches
();

313 "C" 
¥öt_Æl_œtches
();

314 "C" 
¥öt_œtch
(c⁄° 
œtch_t
 *
l
);

	@src/common/lid_t.cpp

30 
	~"w_deföes.h
"

34 
	#LID_T_C


	)

36 #ifde‡
__GNUC__


37 #¥agm®
im∂emíèti⁄


40 
	~<c°dlib
>

41 
	~<w_°ªam.h
>

42 
	~<c°rög
>

43 
	~"basics.h
"

44 
	~"tid_t.h
"

45 
	~"lid_t.h
"

47 c⁄° 
lvid_t
 
	glvid_t
::
nuŒ
;

49 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glvid_t
& 
	glvid
)

51 c⁄° 
u_ch¨
* 
	gp
 = (c⁄° u_ch¨*Ë&
lvid
.
high
;

55  
	go
 << 
u_öt
(
p
[0]) << '.' << u_int(p[1]) << '.'

56 << 
u_öt
(
p
[2]) << '.' << u_int(p[3]) << ':'

57 << 
	glvid
.
	glow
;

60 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gis
, 
	glvid_t
& 
	glvid
)

62 
	gis
.
˛ór
();

63 
	gw_ba£_t
::
uöt4_t
 
i
;

64 
	gc
;

65 c⁄° 
	gw_ba£_t
::
uöt4_t
 
∑πs
 = (
lvid
.
high
);

66 
	gãmp
[
∑πs
];

70 
	gi
=0; i<
	g∑πs
; i++Ë{ 
	gãmp
[
i
] = 0; }

74 
	gi
=0, 
	gc
='.'; i<
	g∑πs
 && c!='\0'; i++) {

75 
	gis
 >> 
	gãmp
[
i
];

77 i‡(
	gis
.
≥ek
(Ë='.' || 
is
.peek()== ':') {

78 
is
 >> 
c
;

80 
	gc
 = '\0';

84 i‡(
	gi
==1) {

87 
lvid
.
low
 = 
ãmp
[0];

88 
	gãmp
[0]=0;

89 } i‡(
	gc
 == ':') {

94 if(
i
!=
∑πs
) {

95 
is
.
˛ór
(
ios
::
badbô
);

97 
	gis
 >> 
	glvid
.
	glow
;

104 
	gis
.
˛ór
(
ios
::
badbô
);

107 ((*)&
	glvid
.
	ghigh
)[0] = 
ãmp
[0];

108 ((*)&
	glvid
.
	ghigh
)[1] = 
ãmp
[1];

109 ((*)&
	glvid
.
	ghigh
)[2] = 
ãmp
[2];

110 ((*)&
	glvid
.
	ghigh
)[3] = 
ãmp
[3];

112  
	gis
;

121 "C" 
boﬁ
 
lvid_t_is_nuŒ
(c⁄° 
lvid_t
 &
x
);

123 
boﬁ


124 
	$lvid_t_is_nuŒ
(c⁄° 
lvid_t
 &
x
)

126  
x
 =
lvid_t
::
nuŒ
;

127 
	}
}

	@src/common/lid_t.h

30 #i‚de‡
LID_T_H


31 
	#LID_T_H


	)

33 
	~"w_deföes.h
"

37 #i‚de‡
BASICS_H


38 
	~"basics.h
"

41 #ifde‡
__GNUG__


42 #¥agm®
öãrÁ˚


66 
uöt2_t
 
	tVID_T
;

68 
	#LVID_T


	)

80 
	slvid_t
 {

82 
uöt4_t
 
	mhigh
;

84 
uöt4_t
 
	mlow
;

87 
lvid_t
(Ë: 
high
(0), 
low
(0) {}

88 
lvid_t
(
uöt4_t
 
hi
, uöt4_à
lo
Ë: 
high
(hi), 
low
(lo) {}

90 
boﬁ
 
	m›î©‹
==(c⁄° 
lvid_t
& 
s
) const

91 { (
low
 =
s
.lowË&& (
high
 == s.high);}

92 
boﬁ
 
	m›î©‹
!=(c⁄° 
lvid_t
& 
s
) const

93 { (
low
 !
s
.lowË|| (
high
 != s.high);}

96 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mlvid_t
&);

97 
‰õnd
 
	mi°ªam
& 
	m›î©‹
>>(i°ªam&, 
	mlvid_t
&);

100 c⁄° 
lvid_t
 
	mnuŒ
;

104 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(c⁄° 
lvid_t
& 
lv
)

106  
lv
.
high
 +Üv.
low
;

107 
	}
}

	@src/common/lsn.cpp

53 
	~"w_deföes.h
"

57 
	~"l¢.h
"

59 c⁄° 
l¢_t
 
	gl¢_t
::
nuŒ
(0, 0);

60 c⁄° 
l¢_t
 
	gl¢_t
::
max
÷¢_t::
fûe_hwm
,Ü¢_t::
mask
());

	@src/common/lsn.h

53 #i‚de‡
LSN_H


54 
	#LSN_H


	)

56 
	~"w_deföes.h
"

60 
	~"w_ba£.h
"

62 
	#LSN_T


	)

109 
	gw_ba£_t
::
	töt8_t
 
	tsm_diskaddr_t
;

237 ˛as†
	cl¢_t
 {

238 íum { 
	mfûe_hwm
 = 0xffff };

239 
	gpublic
:

240 íum { 
PARTITION_BITS
=16 };

241 íum { 
	gPARTITION_SHIFT
=(64-
PARTITION_BITS
) };

243 
	gw_ba£_t
::
uöt8_t
 
	$mask
() {

244 
w_ba£_t
::
uöt8_t
 c⁄° 
ONE
 = 1;

245  (
ONE
 << 
PARTITION_SHIFT
)-1;

246 
	}
}

248 
	$l¢_t
(Ë: 
	$_d©a
(0Ë{ 
	}
}

250 
	$l¢_t
(
w_ba£_t
::
uöt4_t
 
f
, 
sm_diskaddr_t
 
r
) :

251 
	`_d©a
(
	`‰om_fûe
(
f
Ë| 
	$‰om_rba
(
r
)Ë{ 
	}
}

254 
	$l¢_t
(c⁄° 
l¢_t
 & 
Ÿhî
Ë: 
	$_d©a
(
Ÿhî
.
_d©a
Ë{ 
	}
}

256 
boﬁ
 
	$vÆid
() const {

258 #i‡
W_DEBUG_LEVEL
 > 2

259 
boﬁ
 
fú°
 = 
_d©a
 > 
	`mask
();

260 
boﬁ
 
£c⁄d
 = (
	`fûe
() != 0);

261 
	`w_as£π2
(
fú°
 =
£c⁄d
);

263  (
_d©a
 > 
	`mask
());

264 
	}
}

266 
	gw_ba£_t
::
uöt4_t
 
	$hi
(Ëc⁄° {  
	`fûe
(); 
	}
}

267 
	gw_ba£_t
::
uöt4_t
 
	$fûe
(Ëc⁄° {  
	`to_fûe
(
_d©a
); 
	}
}

269 
sm_diskaddr_t
 
	$lo
(Ëc⁄° {  
	`rba
(); 
	}
}

270 
sm_diskaddr_t
 
	$rba
(Ëc⁄° {  
	`to_rba
(
_d©a
); 
	}
}

273 
	$c›y_rba
(c⁄° 
l¢_t
 &
Ÿhî
) {

274 
_d©a
 = 
	`gë_fûe
(_d©aË| 
	`gë_rba
(
Ÿhî
._d©a); 
	}
}

275 
	$£t_rba
(
sm_diskaddr_t
 &
Ÿhî
) {

276 
_d©a
 = 
	`gë_fûe
(_d©aË| 
	`gë_rba
(
Ÿhî
); 
	}
}

279 
	gl¢_t
& 
	$adv™˚
(
amt
Ë{ 
_d©a
 +amt;  *
this
; 
	}
}

281 
	gl¢_t
 &
	g›î©‹
+=(
dñè
Ë{  
adv™˚
(delta); }

282 
l¢_t
 
	g›î©‹
+(
	gdñè
Ëc⁄° { Ü¢_t(*
this
).
adv™˚
(
dñè
); }

284 
boﬁ
 
	g›î©‹
>(c⁄° 
	gl¢_t
& 
	gl
Ëc⁄° { Ü < *
	gthis
; }

285 
boﬁ
 
	g›î©‹
<(c⁄° 
	gl¢_t
& 
	gl
Ëc⁄° {  
	g_d©a
 <Ü._data; }

286 
boﬁ
 
	g›î©‹
>=(c⁄° 
l¢_t
& 
l
Ëc⁄° {  !(*
this
 <Ü); }

287 
boﬁ
 
	g›î©‹
<=(c⁄° 
l¢_t
& 
l
Ëc⁄° {  !(*
this
 >Ü); }

288 
boﬁ
 
	g›î©‹
==(c⁄° 
l¢_t
& 
l
Ëc⁄° {  
_d©a
 ==Ü._data; }

289 
boﬁ
 
	g›î©‹
!=(c⁄° 
l¢_t
& 
l
Ëc⁄° {  !(*
this
 ==Ü); }

300 c⁄° 
	gsm_diskaddr_max
;

302 c⁄° 
l¢_t
 
	gnuŒ
;

303 c⁄° 
l¢_t
 
	gmax
;

305 
	g¥iv©e
:

306 
w_ba£_t
::
uöt8_t
 
_d©a
;

308 
	gw_ba£_t
::
uöt4_t
 
	$to_fûe
(
w_ba£_t
::
uöt8_t
 
f
) {

309  (
w_ba£_t
::
uöt4_t
Ë(
f
 >> 
PARTITION_SHIFT
); 
	}
}

311 
	gw_ba£_t
::
uöt8_t
 
	$gë_fûe
(
w_ba£_t
::
uöt8_t
 
d©a
) {

312  
d©a
 &~ 
	`mask
(); 
	}
}

314 
	gw_ba£_t
::
uöt8_t
 
	$‰om_fûe
(
w_ba£_t
::
uöt4_t
 
d©a
) {

315  ((
w_ba£_t
::
uöt8_t
Ë
d©a
Ë<< 
PARTITION_SHIFT
; 
	}
}

317 
sm_diskaddr_t
 
	$to_rba
(
w_ba£_t
::
uöt8_t
 
r
) {

318  (
sm_diskaddr_t
Ë(
r
 & 
	`mask
()); 
	}
}

320 
	gw_ba£_t
::
uöt8_t
 
	$gë_rba
(
w_ba£_t
::
uöt8_t
 
d©a
) {

321  
	`to_rba
(
d©a
); 
	}
}

323 
	gw_ba£_t
::
uöt8_t
 
	$‰om_rba
(
sm_diskaddr_t
 
d©a
) {

324  
	`to_rba
(
d©a
); 
	}
}

	@src/common/opt_einfo_bakw_gen.h

1 #i‚de‡
OPT_EINFO_BAKW_GEN_H


2 
	#OPT_EINFO_BAKW_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	g›t_îr‹_öfo_bakw
[] = {

38 { 
OPT_IŒegÆDescLöe
, "OPT_IllegalDescLine" },

39 { 
OPT_IŒegÆCœss
, "OPT_IllegalClass" },

40 { 
OPT_CœssTooL⁄g
, "OPT_ClassTooLong" },

41 { 
OPT_TooM™yCœs£s
, "OPT_TooManyClasses" },

42 { 
OPT_Du∂iˇã
, "OPT_Duplicate" },

43 { 
OPT_NoO±i⁄M©ch
, "OPT_NoOptionMatch" },

44 { 
OPT_NoCœssM©ch
, "OPT_NoClassMatch" },

45 { 
OPT_Sy¡ax
, "OPT_Syntax" },

46 { 
OPT_BadVÆue
, "OPT_BadValue" },

47 { 
OPT_NŸSë
, "OPT_NotSet" },

	@src/common/opt_einfo_gen.h

1 #i‚de‡
OPT_EINFO_GEN_H


2 
	#OPT_EINFO_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	g›t_îr‹_öfo
[] = {

38 { 
OPT_IŒegÆDescLöe
 , "Illegal option descriptionÜine"},

39 { 
OPT_IŒegÆCœss
 , "Illegal option classÇame"},

40 { 
OPT_CœssTooL⁄g
 , "Option classÇameÅooÜong"},

41 { 
OPT_TooM™yCœs£s
 , "Too many option classÜevels"},

42 { 
OPT_Du∂iˇã
 , "OptionÇame isÇot unique"},

43 { 
OPT_NoO±i⁄M©ch
 , "Unknown optionÇame"},

44 { 
OPT_NoCœssM©ch
 , "Unknown option classÇame"},

45 { 
OPT_Sy¡ax
 , "Bad syntax in configuration file"},

46 { 
OPT_BadVÆue
 , "Bad option value"},

47 { 
OPT_NŸSë
 , "AÑequired option wasÇot set"},

	@src/common/opt_errmsg_gen.h

1 #i‚de‡
OPT_ERRMSG_GEN_H


2 
	#OPT_ERRMSG_GEN_H


	)

34 
	~"w_deföes.h
"

37 * 
	g›t_îrmsg
[] = {

51 c⁄° 
	g›t_msg_size
 = 9;

	@src/common/opt_error_def_gen.h

1 #i‚de‡
OPT_ERROR_DEF_GEN_H


2 
	#OPT_ERROR_DEF_GEN_H


	)

34 
	~"w_deföes.h
"

37 
	#OPT_IŒegÆDescLöe
 0x20000

	)

38 
	#OPT_IŒegÆCœss
 0x20001

	)

39 
	#OPT_CœssTooL⁄g
 0x20002

	)

40 
	#OPT_TooM™yCœs£s
 0x20003

	)

41 
	#OPT_Du∂iˇã
 0x20004

	)

42 
	#OPT_NoO±i⁄M©ch
 0x20005

	)

43 
	#OPT_NoCœssM©ch
 0x20006

	)

44 
	#OPT_Sy¡ax
 0x20007

	)

45 
	#OPT_BadVÆue
 0x20008

	)

46 
	#OPT_NŸSë
 0x20009

	)

47 
	#OPT_OK
 0x0

	)

48 
	#OPT_ERRMIN
 0x20000

	)

49 
	#OPT_ERRMAX
 0x20009

	)

	@src/common/option.cpp

53 
	~"w_deföes.h
"

57 
	#OPTION_C


	)

58 #ifde‡
__GNUC__


59 #¥agm®
im∂emíèti⁄


62 
	~"w.h
"

63 
	~<c°rög
>

64 
	~<c˘y≥
>

65 
	~"w_autodñ.h
"

66 
	~"›ti⁄.h
"

67 
	~"w_debug.h
"

69 
	~"ªgex_posix.h
"

71 #ifde‡
EXPLICIT_TEMPLATE


72 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	g›ti⁄_t
,
	gunß„_li°_dummy_lock_t
>;

73 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	g›ti⁄_t
,
	gunß„_li°_dummy_lock_t
>;

77 
	g›ti⁄_t
::
	$›ti⁄_t
(Ë: 
	`_«me
(
NULL
), 
	`_vÆue
(NULL), 
	$_£tFunc
(
NULL
)

79 
	}
}

81 
	g›ti⁄_t
::~
	$›ti⁄_t
()

83 
_lök
.
	`dëach
();

84 i‡(
_vÆue
Ë
	`‰ì
(_value);

85 
_vÆue
 = 
NULL
;

86 
_«me
 = 
NULL
;

87 
	}
}

89 
w_rc_t
 
	g›ti⁄_t
::
	$öô
(c⁄° * 
«me
, c⁄° * 
√wPoss
,

90 c⁄° * 
deÁu…VÆ
, c⁄° * 
des¸
,

91 
boﬁ
 
ªq
, 
O±i⁄SëFunc
 
£tFunc
,

92 
o°ªam
 *
îr_°ªam
)

94 
_«me
 = 
«me
;

95 
_possibÀ_vÆues
 = 
√wPoss
;

96 
_deÁu…_vÆue
 = 
deÁu…VÆ
;

97 
_ªquúed
 = 
ªq
;

98 
_des¸ùti⁄
 = 
des¸
;

99 
_£tFunc
 = 
£tFunc
;

100 
_£t
 = 
Ál£
;

101 i‡(!
_ªquúed
) {

102 i‡(
_deÁu…_vÆue
) {

103 
w_rc_t
 
rc
 = 
	`£t_vÆue
(
_deÁu…_vÆue
, 
Ál£
, 
îr_°ªam
);

104 
_£t
 = 
Ál£
;

105  
rc
;

108  
RCOK
;

109 
	}
}

111 
boﬁ
 
	g›ti⁄_t
::
	$m©ch
(c⁄° * 
m©chName
, 
boﬁ
 
exa˘
)

113 
i
;

114 
boﬁ
 
equÆ
;

116 
i
 = 0;

117 
equÆ
 = 
åue
;

119 
	`DBG
(<<"«mêtÿm©ch i†" << 
m©chName
);

120 
equÆ
) {

121 i‡–(
m©chName
[
i
] !'\0'Ë&& (
_«me
[i] != '\0') ) {

122 i‡(
m©chName
[
i
] !
_«me
[i]) {

123 
	`DBG
(<<"Áû†beˇu£áà" << 
i
 <<

124 " m©chNamêi†" << 
m©chName
[
i
] <<

125 " _«mêi†" << 
_«me
[
i
]

127 
equÆ
 = 
Ál£
;

130 i‡(
m©chName
[
i
] == '\0') {

133 
	`DBG
(<<"Áû†beˇu£áà" << 
i
 <<

134 " m©chNamêi†" << 
m©chName
[
i
] <<

135 " _«mêi†" << 
_«me
[
i
]

137 
equÆ
 = 
Ál£
;

141 
i
++;

144 i‡(
i
 == 0) {

145 
equÆ
 = 
Ál£
;

147 i‡(
exa˘
 && (
m©chName
[
i
] !'\0' || 
_«me
[i] != '\0')) {

148 
equÆ
 = 
Ál£
;

151  
equÆ
;

152 
	}
}

154 
w_rc_t
 
	g›ti⁄_t
::
	$£t_vÆue
(c⁄° * 
vÆue
, 
boﬁ
 
ovîRide
, 
o°ªam
* 
îr_°ªam
)

156 
	`DBG
(<<"›ti⁄_t::£t_vÆuê" << 
	`«me
()

157 << " vÆuê" << 
vÆue
);

158 i‡(
_£t
 && !
ovîRide
) {

160  
RCOK
;

163 i‡(
vÆue
 =
NULL
) {

164 i‡(
_vÆue
) {

165 
	`‰ì
(
_vÆue
);

166 
_£t
 = 
Ál£
;

168  
RCOK
;

170 
	`W_DO
(
	`_£tFunc
(
this
, 
vÆue
, 
îr_°ªam
));

172  
RCOK
;

173 
	}
}

175 
w_rc_t
 
	g›ti⁄_t
::
	$c›yVÆue
(c⁄° * 
vÆue
)

177 * 
√w_vÆue
;

179 i‡(
_vÆue
) {

180 
√w_vÆue
 = (*)
	`ªÆloc
(
_vÆue
, 
	`°æí
(
vÆue
)+1);

182 
√w_vÆue
 = (*)
	`mÆloc
(
	`°æí
(
vÆue
)+1);

184 i‡(!
√w_vÆue
) {

185  
	`RC
(
fcOUTOFMEMORY
);

187 
_vÆue
 = 
√w_vÆue
;

188 
	`°r˝y
(
_vÆue
, 
vÆue
);

189 
_£t
 = 
åue
;

190  
RCOK
;

191 
	}
}

193 
w_rc_t
 
	g›ti⁄_t
::
	$c⁄ˇtVÆue
(c⁄° * 
vÆue
)

195 * 
√w_vÆue
;

196 c⁄° * 
£∑øt‹
 = "\n";

198 i‡(
_vÆue
) {

199 
√w_vÆue
 = (*)
	`ªÆloc
(
_vÆue
, 
	`°æí
(_vÆueË+ såÀn(
£∑øt‹
Ë+ såÀn(
vÆue
)+1);

201 
√w_vÆue
 = (*)
	`mÆloc
(
	`°æí
(
vÆue
)+1);

203 i‡(!
√w_vÆue
) {

204  
	`RC
(
fcOUTOFMEMORY
);

206 
_vÆue
 = 
√w_vÆue
;

207 
	`°rˇt
(
_vÆue
, 
£∑øt‹
);

208 
	`°rˇt
(
_vÆue
, 
vÆue
);

209 
_£t
 = 
åue
;

210  
RCOK
;

211 
	}
}

213 
boﬁ
 
	g›ti⁄_t
::
	$°r_to_boﬁ
(c⁄° * 
°r
, 
boﬁ
& 
badSå
)

215 
badSå
 = 
åue
;

216 i‡(
	`°æí
(
°r
Ë< 1Ë 
Ál£
;

218 
°r
[0]) {

220 
badSå
 = 
Ál£
;

221  
åue
;

224 
badSå
 = 
Ál£
;

225  
Ál£
;

228  
Ál£
;

230 
	}
}

232 
w_rc_t
 
	g›ti⁄_t
::
	$£t_vÆue_boﬁ
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
)

234 
boﬁ
 
badVÆ
;

235 
	`°r_to_boﬁ
(
vÆue
, 
badVÆ
);

236 i‡(
badVÆ
) {

237 i‡(
îr_°ªam
) *err_stream << "value must beÅrue,false,yes,no";

238  
	`RC
(
OPT_BadVÆue
);

240 
	`W_DO
(
›t
->
	`c›yVÆue
(
vÆue
));

241  
RCOK
;

242 
	}
}

244 
w_rc_t


245 
	g›ti⁄_t
::
	$£t_vÆue_öt4
(

246 
›ti⁄_t
* 
›t
,

247 c⁄° * 
vÆue
,

248 
o°ªam
* 
îr_°ªam
)

250 
l
;

251 * 
œ°VÆid
;

253 
î∫o
 = 0;

254 
l
 = 
	`°πﬁ
(
vÆue
, &
œ°VÆid
, 0 );

255 if(((
l
 =
LONG_MAX
Ë|| (»=
LONG_MIN
)Ë&& 
î∫o
 =
ERANGE
) {

257 i‡(
îr_°ªam
) {

258 *
îr_°ªam


260 << 
vÆue
;

261  
	`RC
(
OPT_BadVÆue
);

264 i‡(
œ°VÆid
 =
vÆue
) {

266 i‡(
îr_°ªam
Ë*îr_°ªam << "nÿvÆid i¡egî could bêf‹med from " << 
vÆue
;

267  
	`RC
(
OPT_BadVÆue
);

270 
	`W_DO
(
›t
->
	`c›yVÆue
(
vÆue
));

271  
RCOK
;

272 
	}
}

274 
w_rc_t


275 
	g›ti⁄_t
::
	$£t_vÆue_l⁄g
(

276 
›ti⁄_t
* 
›t
,

277 c⁄° * 
vÆue
,

278 
o°ªam
* 
îr_°ªam
)

281  
	`£t_vÆue_öt4
(
›t
, 
vÆue
, 
îr_°ªam
);

282 
	}
}

284 
w_rc_t


285 
	g›ti⁄_t
::
	$£t_vÆue_öt8
(

286 
›ti⁄_t
* 
›t
,

287 c⁄° * 
vÆue
,

288 
o°ªam
* 
îr_°ªam
)

290 
w_ba£_t
::
öt8_t
 
MAYBE_UNUSED
 
l
;

292 * 
œ°VÆid
;

293 
î∫o
 = 0;

294 
l
 = 
w_ba£_t
::
	`°πoi8
(
vÆue
, &
œ°VÆid
);

295 i‡(
î∫o
 =
ERANGE
) {

297 i‡(
îr_°ªam
) {

298 *
îr_°ªam


300 << 
vÆue
;

301  
	`RC
(
OPT_BadVÆue
);

304 i‡(
œ°VÆid
 =
vÆue
) {

306 i‡(
îr_°ªam
Ë*îr_°ªam << "nÿvÆid i¡egî could bêf‹med from " << 
vÆue
;

307  
	`RC
(
OPT_BadVÆue
);

311 
	`W_DO
(
›t
->
	`c›yVÆue
(
vÆue
));

312  
RCOK
;

313 
	}
}

315 
w_rc_t


316 
	g›ti⁄_t
::
	$£t_vÆue_l⁄g_l⁄g
(

317 
›ti⁄_t
* 
›t
,

318 c⁄° * 
vÆue
,

319 
o°ªam
* 
îr_°ªam
)

321  
	`£t_vÆue_öt8
(
›t
, 
vÆue
, 
îr_°ªam
);

322 
	}
}

324 
w_rc_t
 
	g›ti⁄_t
::
	$£t_vÆue_ch¨°r
(

325 
›ti⁄_t
* 
›t
,

326 c⁄° * 
vÆue
,

327 
o°ªam
 *

330 
	`W_DO
(
›t
->
	`c›yVÆue
(
vÆue
));

331  
RCOK
;

332 
	}
}

338 
boﬁ
 
	g›ti⁄_group_t
::
_îr‹_codes_added
 = 
Ál£
;

340 
	~"›t_eöfo_gí.h
"

342 
	g›ti⁄_group_t
::
	$›ti⁄_group_t
(
maxNameLevñs
)

343 : 
	`_›ti⁄s
(
	`W_LIST_ARG
(
›ti⁄_t
, 
_lök
), 
unß„_nﬁock
),

344 
	`_˛ass_«me
(
NULL
),

345 
	`_ÀvñLoˇti⁄
(
NULL
),

346 
	`_maxLevñs
(
maxNameLevñs
),

347 
	$_numLevñs
(0)

349 i‡(!
_îr‹_codes_added
) {

350 i‡(!(
w_îr‹_t
::
	`ö£π
(

352 
›t_îr‹_öfo
,

353 
OPT_ERRMAX
 - 
OPT_ERRMIN
 + 1)) ) {

354 
	`ab‹t
();

356 
_îr‹_codes_added
 = 
åue
;

360 
_˛ass_«me
 = (*)
	`mÆloc
(1);

361 
_ÀvñLoˇti⁄
 = 
√w
 *[
_maxLevñs
];

363 i‡(
_˛ass_«me
 =
NULL
 || 
_ÀvñLoˇti⁄
 == NULL) {

364 
	`W_FATAL
(
fcOUTOFMEMORY
);

366 
_˛ass_«me
[0] = '\0';

367 
	}
}

369 
	g›ti⁄_group_t
::~
	$›ti⁄_group_t
()

371 
w_li°_i
<
›ti⁄_t
,
unß„_li°_dummy_lock_t
> 
	`sˇn
(
_›ti⁄s
);

373 
sˇn
.
	`√xt
()) {

374 
dñëe
 
sˇn
.
	`cuº
();

376 i‡(
_˛ass_«me
Ë
	`‰ì
(_class_name);

377 i‡(
_ÀvñLoˇti⁄
Ë
dñëe
[] _levelLocation;

378 
	}
}

380 
w_rc_t
 
	g›ti⁄_group_t
::
	$add_›ti⁄
(

381 c⁄° * 
«me
, c⁄° * 
√wPoss
,

382 c⁄° * 
deÁu…_vÆue
, c⁄° * 
des¸ùti⁄
,

383 
boﬁ
 
ªquúed
, 
›ti⁄_t
::
O±i⁄SëFunc
 
£tFunc
,

384 
›ti⁄_t
*& 
√wO±
,

385 
o°ªam
 *
îr_°ªam


388 
	`DBG
(<<"›ti⁄_group_t::add_›ti⁄ " << 
«me
 );

389 
	`W_DO
(
	`lookup
(
«me
, 
åue
, 
√wO±
));

390 i‡(
√wO±
Ë 
	`RC
(
OPT_Du∂iˇã
);

392 
√wO±
 = 
√w
 
	`›ti⁄_t
();

393 i‡(!
√wO±
Ë 
	`RC
(
fcOUTOFMEMORY
);

394 
w_rc_t
 
rc
 = 
√wO±
->
	`öô
(
«me
, 
√wPoss
,

395 
deÁu…_vÆue
, 
des¸ùti⁄
, 
ªquúed
, 
£tFunc
, 
îr_°ªam
);

396 i‡(
rc
.
	`is_îr‹
()) {

397 
dñëe
 
√wO±
;

398 
√wO±
 = 
NULL
;

399  
rc
;

401 
_›ti⁄s
.
	`≠≥nd
(
√wO±
);

402  
RCOK
;

403 
	}
}

405 
w_rc_t
 
	g›ti⁄_group_t
::
	$add_˛ass_Àvñ
(c⁄° * 
«me
)

407 i‡(
_numLevñs
 =
_maxLevñs
) {

408  
	`RC
(
OPT_TooM™yCœs£s
);

411 * 
√w_°r
 = (*)
	`ªÆloc
(
_˛ass_«me
, 
	`°æí
(_˛ass_«me)+°æí(
«me
)+2 );

412 i‡(!
√w_°r
) {

413  
	`RC
(
fcOUTOFMEMORY
);

415 
_˛ass_«me
 = 
√w_°r
;

416 
_ÀvñLoˇti⁄
[
_numLevñs
] = &(
_˛ass_«me
[
	`°æí
(_class_name)]);

417 
_numLevñs
++;

418 
	`°rˇt
(
_˛ass_«me
, 
«me
);

419 
	`°rˇt
(
_˛ass_«me
, ".");

421  
RCOK
;

422 
	}
}

424 #ifde‡
OLD_CODE


425 
w_rc_t
 
	g›ti⁄_group_t
::
	$£tCœssLevñ
(c⁄° * 
«me
, 
Àvñ
)

427 
Àn
;

429 i‡(
Àvñ
 > 
_numLevñs
) {

430  
	`RC
(
OPT_TooM™yCœs£s
);

433 i‡(
Àvñ
 =
_numLevñs
) {

434  (
	`add_˛ass_Àvñ
(
«me
));

437 i‡(
_numLevñs
 =
MaxO±Cœssifiˇti⁄
) {

438  
	`RC
(
OPT_TooM™yCœs£s
);

441 
_ÀvñName
[
Àvñ
] = 
«me
;

444 
_˛assSåögLí
 = 0;

445 
_˛ass_«me
[0] = '\0';

447 
i
 = 0; i < 
_numLevñs
; i++) {

448 
Àn
 = 
	`°æí
(
_ÀvñName
[
i
]) + 1;

450 i‡(
Àn
 > (
MaxO±CœssLígth
-
_˛assSåögLí
) ) {

451  
	`RC
(
OPT_CœssTooL⁄g
);

453 
	`°∫ˇt
(
_˛ass_«me
, 
_ÀvñName
[
i
], 
MaxO±CœssLígth
-
_˛assSåögLí
);

454 
	`°rˇt
(
_˛ass_«me
, ".");

455 
_˛assSåögLí
 +
Àn
;

457  
RCOK
;

458 
	}
}

461 
w_rc_t
 
	g›ti⁄_group_t
::
	$lookup
(c⁄° * 
«me
, 
boﬁ
 
exa˘
, 
›ti⁄_t
*& 
ªtu∫O±i⁄
)

463 
	`DBG
(<<"›ti⁄_group_t::looku∞" << 
«me
 << "Éxa˘=" << 
exa˘
);

464 
w_rc_t
 
rc
;

466 
ªtu∫O±i⁄
 = 
NULL
;

468 
w_li°_i
<
›ti⁄_t
,
unß„_li°_dummy_lock_t
> 
	`sˇn
(
_›ti⁄s
);

469 
sˇn
.
	`√xt
()) {

470 
	`DBG
(<<"sˇn.cuº()==|" << 
sˇn
.
	`cuº
()->
	`«me
() <<"|");

471 i‡(
sˇn
.
	`cuº
()->
	`m©ch
(
«me
, 
exa˘
)) {

472 
	`DBG
(<<"match");

473 i‡(
ªtu∫O±i⁄
 !
NULL
) {

474 
ªtu∫O±i⁄
 = 
NULL
;

475 
rc
 = 
	`RC
(
OPT_Du∂iˇã
);

478 
ªtu∫O±i⁄
 = 
sˇn
.
	`cuº
();

482 
	`DBG
(<<"nomatch");

485 
	`DBG
(<<"›ti⁄_group_t::looku∞" << 
«me
 << " scan done" );

486  
rc
;

487 
	}
}

489 
w_rc_t


490 
	g›ti⁄_group_t
::
	$lookup_by_˛ass
(

491 c⁄° * 
›tCœssName
,

492 
›ti⁄_t
*& 
ªtu∫O±i⁄
,

493 
boﬁ
 
exa˘


496 c⁄° * 
c
;

497 c⁄° * 
œ°S≥cül
;

499 
œ°NewS≥cül
;

500 
w_rc_t
 
rc
;

501 
√wCÀn
;

502 c⁄° * 
ªgex
 = 
NULL
;

503 
boﬁ
 
backSœsh
 = 
Ál£
;

505 
	`DBG
(<<"›ti⁄_group_t::lookup_by_˛as†" << 
›tCœssName
);

509 
√wC_Àn
 = 
	`°æí
(
›tCœssName
)*2;

510 * 
√wC
 = 
√w
 [
√wC_Àn
];

511 i‡(!
√wC
Ë 
	`RC
(
fcOUTOFMEMORY
);

512 
w_auto_dñëe_¨øy_t
<> 
	`√wC_dñëe
(
√wC
);

516 
œ°S≥cül
 = 
›tCœssName
-1;

517 
œ°NewS≥cül
 = 0;

518 
√wC
[
œ°NewS≥cül
] = '^';

519 
c
 = 
›tCœssName
, 
√wCÀn
 = 1; *c != '\0'; c++,ÇewClen++) {

520 i‡(!
backSœsh
) {

521 *
c
) {

523 
√wC
[
√wCÀn
] = '.';

524 
√wCÀn
++;

525 
√wC
[
√wCÀn
] = '*';

526 
œ°S≥cül
 = 
c
;

527 
œ°NewS≥cül
 = 
√wCÀn
;

530 
√wC
[
√wCÀn
] = '\\';

531 
√wCÀn
++;

532 
√wC
[
√wCÀn
] = '.';

533 
œ°S≥cül
 = 
c
;

534 
œ°NewS≥cül
 = 
√wCÀn
;

537 
√wC
[
√wCÀn
++] = '[';

538 
√wC
[
√wCÀn
++] = '^';

539 
√wC
[
√wCÀn
++] = '.';

540 
√wC
[
√wCÀn
++] = ']';

541 
√wC
[
√wCÀn
] = '*';

542 
œ°S≥cül
 = 
c
;

543 
œ°NewS≥cül
 = 
√wCÀn
;

547 
rc
 = 
	`RC
(
OPT_Sy¡ax
);

550 
rc
 = 
	`RC
(
OPT_IŒegÆCœss
);

553 
backSœsh
 = 
åue
;

554 
√wCÀn
--;

557 
√wC
[
√wCÀn
] = *
c
;

561 
√wC
[
√wCÀn
] = *
c
;

562 
backSœsh
 = 
Ál£
;

565 i‡(
œ°NewS≥cül
 =
√wC_Àn
) {

566 
rc
 = 
	`RC
(
OPT_CœssTooL⁄g
);

570 i‡(
rc
.
	`is_îr‹
()) Ñc;

572 i‡(*
c
 != '\0') {

573  
	`RC
(
OPT_Sy¡ax
);

575 
√wC
[
√wCÀn
] = *
c
;

579 i‡(
œ°S≥cül
 =(
›tCœssName
-1)) {

580  
	`RC
(
OPT_IŒegÆCœss
);

583 
√wC
[
œ°NewS≥cül
+1] = '$';

584 
√wC
[
œ°NewS≥cül
+2] = '\0';

586 i‡(
√wC
[1] == '$') {

587 
	`°rˇt
(
√wC
, ".*");

590 
ªgex
 = 
	`ª_comp
(
√wC
);

591 i‡(
ªgex
 !
NULL
) {

592 
˚º
 << "ªguœ∏ex¥essi⁄Éº‹: " << 
ªgex
 << 
ídl
;

593 
rc
 = 
	`RC
(
OPT_IŒegÆCœss
);

595 i‡(
	`ª_exec
(
_˛ass_«me
) == 1) {

596 
	`DBG
(<<"ª_exec("<<
_˛ass_«me
<<")Ñeturned 1");

599 c⁄° * 
›ti⁄
 = 
œ°S≥cül
+1;

600  
	`lookup
(
›ti⁄
, 
exa˘
, 
ªtu∫O±i⁄
);

602 
	`DBG
(<<"ª_exec("<<
_˛ass_«me
<<") failed");

603 
rc
 = 
	`RC
(
OPT_NoCœssM©ch
);

608 
dñëe
 
ªgex
;

609 
ªtu∫O±i⁄
 = 
NULL
;

610  
rc
;

611 
	}
}

613 
w_rc_t


614 
	g›ti⁄_group_t
::
	$£t_vÆue
(

615 c⁄° * 
«me
, 
boﬁ
 
exa˘
,

616 c⁄° * 
vÆue
, 
boﬁ
 
ovîRide
,

617 
o°ªam
* 
îr_°ªam
)

619 
	`DBG
(<<"›ti⁄_group_t::£t_vÆue: " << 
«me


620 << "Éxa˘=" << 
exa˘
);

621 
›ti⁄_t
* 
›t
 = 0;

622 
	`W_DO
(
	`lookup
(
«me
, 
exa˘
, 
›t
));

623 i‡(!
›t
) {

624 
	`DBG
(<<"nomatch");

625  
	`RC
(
OPT_NoO±i⁄M©ch
);

627 
	`DBG
(<<"MATCH");

628 
	`W_DO
(
›t
->
	`£t_vÆue
(
vÆue
, 
ovîRide
, 
îr_°ªam
));

629  
RCOK
;

630 
	}
}

634 
	g›ti⁄_group_t
::
	$¥öt_ußge
(
boﬁ
 
l⁄gF‹m
, 
o°ªam
& 
îr_°ªam
)

636 
›ti⁄_t
* 
cuºít
;

638 
w_li°_i
<
›ti⁄_t
,
unß„_li°_dummy_lock_t
> 
	`sˇn
(
_›ti⁄s
);

639 
sˇn
.
	`√xt
()) {

640 
cuºít
 = 
sˇn
.
	`cuº
();

641 i‡(
cuºít
->
	`is_ªquúed
()) {

642 
îr_°ªam
 << " ";

644 
îr_°ªam
 << " [";

646 i‡(
cuºít
->
	`possibÀ_vÆues
(Ë=
NULL
) {

647 
îr_°ªam
 << "-" << 
cuºít
->
	`«me
();

649 
îr_°ªam
 << "-" << 
cuºít
->
	`«me
()

650 << " <" << 
cuºít
->
	`possibÀ_vÆues
() << ">";

653 i‡(!
cuºít
->
	`is_ªquúed
()Ë
îr_°ªam
 << "]";

655 i‡(
l⁄gF‹m
) {

656 
îr_°ªam
 << "\n\t\t" << 
cuºít
->
	`des¸ùti⁄
() << "\n";

657 i‡(
cuºít
->
	`deÁu…_vÆue
(Ë=
NULL
) {

658 
îr_°ªam
 << "\t\tdefault value: <none>\n";

660 
îr_°ªam
 << "\t\tdeÁu… vÆue: " << 
cuºít
->
	`deÁu…_vÆue
() << "\n";

664 i‡(!
l⁄gF‹m
Ë
îr_°ªam
 << 
ídl
;

665 
îr_°ªam
 << "[bøckë†món†›ti⁄Æ]" << 
ídl
;

668 
	}
}

670 
	g›ti⁄_group_t
::
	$¥öt_vÆues
(
boﬁ
 
l⁄gF‹m
, 
o°ªam
& 
îr_°ªam
)

672 
›ti⁄_t
* 
cuºít
;

674 
îr_°ªam
 << "VÆue†f‹ o±i⁄†o‡˛as†" << 
_˛ass_«me
 << ":";

675 i‡(
l⁄gF‹m
Ë
îr_°ªam
 << "\n";

676 
w_li°_i
<
›ti⁄_t
,
unß„_li°_dummy_lock_t
> 
	`sˇn
(
_›ti⁄s
);

677 
sˇn
.
	`√xt
()) {

678 
cuºít
 = 
sˇn
.
	`cuº
();

679 i‡(
cuºít
->
	`is_£t
()) {

680 i‡(!
cuºít
->
	`is_ªquúed
()) {

681 
îr_°ªam
 << " [-" << 
cuºít
->
	`«me
() << " ";

683 
îr_°ªam
 << " -" << 
cuºít
->
	`«me
() << " ";

685 i‡(
cuºít
->
	`vÆue
(Ë=
NULL
) {

686 
îr_°ªam
 << "<not-set>";

688 
îr_°ªam
 << 
cuºít
->
	`vÆue
();

690 i‡(!
cuºít
->
	`is_ªquúed
()Ë
îr_°ªam
 << "]";

692 i‡(
l⁄gF‹m
Ë
îr_°ªam
 << "\n";

695 i‡(!
l⁄gF‹m
Ë
îr_°ªam
 << 
ídl
;

698 
	}
}

700 
w_rc_t
 
	g›ti⁄_group_t
::
	$check_ªquúed
(
o°ªam
* 
îr_°ªam
)

702 
	`DBG
(<<"option_group_t::check_required");

703 
w_rc_t
 
rc
;

704 
›ti⁄_t
* 
cuº
;

705 
boﬁ
 
©_Àa°_⁄e_nŸ_£t
 = 
Ál£
;

707 
w_li°_i
<
›ti⁄_t
,
unß„_li°_dummy_lock_t
> 
	`sˇn
(
_›ti⁄s
);

708 (
cuº
 = 
sˇn
.
	`√xt
())) {

709 i‡(
cuº
->
	`is_ªquúed
(Ë&& !cuº->
	`is_£t
()) {

710 i‡(
îr_°ªam
Ë*îr_°ªam << "›ti⁄ <" << 
cuº
->
	`«me
() << "> isÑequired butÇot set\n";

711 
©_Àa°_⁄e_nŸ_£t
 = 
åue
;

714 i‡(
©_Àa°_⁄e_nŸ_£t
Ë
rc
 = 
	`RC
(
OPT_NŸSë
);

715  
rc
;

716 
	}
}

718 
w_rc_t
 
	g›ti⁄_group_t
::
	$∑r£_comm™d_löe
(c⁄° ** 
¨gv
, & 
¨gc
, 
size_t
 
mö_Àn
, 
o°ªam
* 
îr_°ªam
)

729 
w_rc_t
 
rc
;

730 
i
;

731 
›ti⁄_t
* 
›t
;

733 
i
 = 0;

734 
i
 < 
¨gc
 && !
rc
.
	`is_îr‹
()) {

735 i‡(
¨gv
[
i
][0] ='-' && 
	`°æí
◊rgv[i]Ë> 
mö_Àn
) {

736 
rc
 = 
	`lookup
(
¨gv
[
i
]+1, 
Ál£
, 
›t
);

737 i‡(!
rc
.
	`is_îr‹
(Ë&& 
›t
) {

739 i‡(
i
+1 =
¨gc
) {

741 i‡(
îr_°ªam
Ë*îr_°ªam << "missögárgumíàf‹ " << 
¨gv
[
i
];

743 
¨gc
--;

744 
rc
 = 
	`RC
(
OPT_BadVÆue
);

747 
rc
 = 
›t
->
	`£t_vÆue
(
¨gv
[
i
+1], 
åue
, 
îr_°ªam
);

748 i‡(
rc
.
	`is_îr‹
()) {

749 i‡(
îr_°ªam
Ë*îr_°ªam << "bad vÆuêf‹árgumíà" << 
¨gv
[
i
];

753 
j
 = 
i
+2; j < 
¨gc
; j++) {

754 
¨gv
[
j
-2] =árgv[j];

756 
¨gc
 -= 2;

758 } i‡(!
rc
.
	`is_îr‹
()) {

760 
i
++;

765 
i
++;

768 (
rc
);

769 
	}
}

775 c⁄° *
	g›ti⁄_°ªam_sˇn_t
::
deÁu…_œbñ
 = "istream";

777 
	g›ti⁄_°ªam_sˇn_t
::
	$›ti⁄_°ªam_sˇn_t
(
i°ªam
 &
is
, 
›ti⁄_group_t
 *
li°
)

778 : 
	`_öput
(
is
),

779 
	`_›tLi°
(
li°
),

780 
	`_löe
(0),

781 
	`_œbñ
(
deÁu…_œbñ
),

782 
	$_löeNum
(0)

784 
	}
}

786 
	g›ti⁄_°ªam_sˇn_t
::~
	$›ti⁄_°ªam_sˇn_t
()

788 i‡(
_löe
) {

789 
dñëe
 [] 
_löe
;

790 
_löe
 = 0;

792 i‡(
_œbñ
 !
deÁu…_œbñ
) {

793 
dñëe
 [] 
_œbñ
;

794 
_œbñ
 = 
deÁu…_œbñ
;

796 
	}
}

799 
	g›ti⁄_°ªam_sˇn_t
::
	$£tLabñ
(c⁄° *
√wLabñ
)

801 i‡(
_œbñ
 !
deÁu…_œbñ
) {

802 
dñëe
 [] 
_œbñ
;

803 
_œbñ
 = 
deÁu…_œbñ
;

805 i‡(
√wLabñ
) {

807 *
s
 = 
√w
 [
	`°æí
(
√wLabñ
) + 1];

808 i‡(
s
) {

809 
	`°r˝y
(
s
, 
√wLabñ
);

810 
_œbñ
 = 
s
;

813 
	}
}

815 
w_rc_t
 
	g›ti⁄_°ªam_sˇn_t
::
	$sˇn
(

816 
boﬁ
 
ovîRide
,

817 
o°ªam
& 
îr_°ªam
,

818 
boﬁ
 
exa˘
,

819 
boﬁ
 
mism©ch_ok


822 
›ti⁄_t
* 
›tInfo
;

823 
›tBegö
, 
›tEnd
, 
vÆBegö
, 
vÆEnd
, 
vÆLígth
;

824 
i
;

825 
boﬁ
 
backSœsh
 = 
Ál£
;

826 c⁄° * 
›ti⁄Name
 = 
NULL
;

828 i‡(!
_löe
) {

829 
_löe
 = 
√w
 [
_maxLöeLí
+1];

830 i‡(!
_löe
)

831  
	`RC
(
fcOUTOFMEMORY
);

834 
	`DBG
(<<"sˇ¬ög o±i⁄†°ªam " << 
_œbñ
);

836 
w_rc_t
 
rc
;

837  !
rc
.
	`is_îr‹
(Ë&& (
_öput
.
	`gëlöe
(
_löe
, 
_maxLöeLí
Ë!
NULL
) ) {

838 
_löeNum
++;

839 
	`DBG
(<<"sˇ¿löê" << 
_löeNum
);

841 i‡(
	`°æí
(
_löe
)+1 >
_maxLöeLí
) {

842 
îr_°ªam
 << "löê" << 
_löeNum
 << " isÅooÜong";

843 
rc
 = 
	`RC
(
OPT_IŒegÆDescLöe
);

850 
›tBegö
 = -1;

851 
›tEnd
 = -1;

852 
i
 = 0; 
_löe
[i] != '\0'; i++) {

853 i‡(
›tBegö
 < 0) {

855 i‡(
	`is•a˚
(
_löe
[
i
])) {

858 
›tBegö
 = 
i
;

861 i‡(
_löe
[
i
] == '\\') {

862 
backSœsh
 = !backSlash;

863 i‡(
backSœsh
) ;

865 i‡(
_löe
[
i
] =':' && !
backSœsh
) {

866 
›tEnd
 = 
i
;

869 
backSœsh
 = 
Ál£
;

873 i‡(
›tBegö
 < 0 || 
_löe
[optBegin] == '#' || _line[optBegin] == '!') {

878 i‡(
›tEnd
 < 0) {

879 
îr_°ªam
 << "sy¡axÉº‹áà" << 
_œbñ
 << ":" << 
_löeNum
;

880 
rc
 = 
	`RC
(
OPT_Sy¡ax
);

883 
_löe
[
›tEnd
] = '\0';

885 
›ti⁄Name
 = 
_löe
+
›tBegö
;

887 
rc
 = 
_›tLi°
->
	`lookup_by_˛ass
(
›ti⁄Name
, 
›tInfo
, 
exa˘
);

888 i‡(!
rc
.
	`is_îr‹
(Ë&& 
›tInfo
 =
NULL
) {

890 
rc
 = 
	`RC
(
OPT_NoO±i⁄M©ch
);

893 
rc
.
	`îr_num
()) {

896 
OPT_NoCœssM©ch
:

899 
OPT_NoO±i⁄M©ch
:

900 if(!
mism©ch_ok
) {

901 
îr_°ªam
 << "unknow¿›ti⁄áà" << 
_œbñ
 << ":" << 
_löeNum
;

904 
OPT_Du∂iˇã
:

905 
îr_°ªam
 << "optionÇame isÇot uniqueát "

906 << 
_œbñ
 << ":" << 
_löeNum
;

908 
OPT_Sy¡ax
:

909 
îr_°ªam
 << "sy¡axÉº‹áà" << 
_œbñ
 << ":" << 
_löeNum
;

911 
OPT_IŒegÆCœss
:

912 
îr_°ªam
 << "illegal/missing option classát "

913 << 
_œbñ
 << ":" << 
_löeNum
;

916 
îr_°ªam
 << "generalÉrror in optionát "

917 << 
_œbñ
 << ":" << 
_löeNum
;

921 i‡(
rc
.
	`is_îr‹
()) {

922 i‡(
rc
.
	`îr_num
(Ë=
OPT_NoCœssM©ch
) {

924 
rc
 = 
RCOK
;

926 i‡(
mism©ch_ok
 && 
rc
.
	`îr_num
(Ë=
OPT_NoO±i⁄M©ch
) {

928 
rc
 = 
RCOK
;

936 
vÆBegö
 = -1;

937 
vÆEnd
 = -1;

938 
i
 = 
›tEnd
+1; 
_löe
[i] != '\0'; i++) {

940 i‡(
	`is•a˚
(
_löe
[
i
])) {

941 i‡(
vÆBegö
 < 0) {

945 i‡(
vÆBegö
 < 0) {

946 
vÆBegö
 = 
i
;

948 
vÆEnd
 = 
i
;

952 i‡(
vÆBegö
 < 0) {

953 
îr_°ªam
 << "syntaxÉrror (missing option value)át "

954 << 
_œbñ
 << ":" << 
_löeNum
;

955 
rc
 = 
	`RC
(
OPT_Sy¡ax
);

960 i‡(
_löe
[
vÆBegö
] == '"') {

961 
vÆBegö
++;

962 i‡(
_löe
[
vÆEnd
] != '"') {

963 
îr_°ªam
 << "syntaxÉrror (missing \")át "

964 << 
_œbñ
 << ":" << 
_löeNum
;

965 
rc
 = 
	`RC
(
OPT_Sy¡ax
);

968 
vÆEnd
--;

970 
vÆLígth
 = 
vÆEnd
 - 
vÆBegö
 + 1;

972 i‡(
vÆLígth
 < 0) {

973 
îr_°ªam
 << "syntaxÉrror (bad option value)át "

974 << 
_œbñ
 << ":" << 
_löeNum
;

975 
rc
 = 
	`RC
(
OPT_Sy¡ax
);

979 i‡(
rc
.
	`is_îr‹
()) {

984 i‡(
›tInfo
 !
NULL
) {

985 
_löe
[
vÆEnd
+1] = '\0';

986 
rc
 = 
›tInfo
->
	`£t_vÆue
(
_löe
+
vÆBegö
, 
ovîRide
, &
îr_°ªam
);

987 i‡(
rc
.
	`is_îr‹
()) {

988 
îr_°ªam
 << "Option valueÉrrorát "

989 << 
_œbñ
 << ":" << 
_löeNum
;

995 
	`DBG
(<<"œ°Üöêsˇ¬ed: " << 
_löeNum
);

997  
rc
;

998 
	}
}

1000 
	g›ti⁄_fûe_sˇn_t
::
	$›ti⁄_fûe_sˇn_t
(c⁄° * 
›tFûe
, 
›ti⁄_group_t
* 
li°
)

1001 : 
	`_fûeName
(
›tFûe
),

1002 
	$_›tLi°
(
li°
)

1004 
	}
}

1006 
	g›ti⁄_fûe_sˇn_t
::~
	$›ti⁄_fûe_sˇn_t
()

1008 
	}
}

1010 
w_rc_t
 
›ti⁄_fûe_sˇn_t
::
	$sˇn
(

1011 
boﬁ
 
ovîRide
,

1012 
o°ªam
& 
îr_°ªam
,

1013 
boﬁ
 
exa˘
,

1014 
boﬁ
 
mism©ch_ok


1017 
w_rc_t
 
e
;

1019 
	`DBG
(<<"sˇ¬ög o±i⁄†fûê" << 
_fûeName
);

1021 
if°ªam
 
	`f
(
_fûeName
);

1023 i‡(!
f
) {

1024 
e
 = 
	`RC
(
fcOS
);

1025 
	`DBG
(<<"sˇn: o≥¿Áûuª fûê" << 
_fûeName
);

1026 
îr_°ªam
 << "CouldÇŸ o≥¿thê›ti⁄ fûê" << 
_fûeName
;

1027  
e
;

1029 
	`DBG
(<<"sˇ¬ög o±i⁄†fûê" << 
_fûeName
);

1031 
›ti⁄_°ªam_sˇn_t
 
	`ss
(
f
, 
_›tLi°
);

1032 
ss
.
	`£tLabñ
(
_fûeName
);

1034  
ss
.
	`sˇn
(
ovîRide
, 
îr_°ªam
, 
exa˘
, 
mism©ch_ok
);

1035 
	}
}

	@src/common/option.h

30 #i‚de‡
OPTION_H


31 
	#OPTION_H


	)

33 
	~"w_deföes.h
"

37 
	~<w_°ªam.h
>

39 #ifde‡
__GNUG__


40 #¥agm®
öãrÁ˚


103 #i‚de‡
__›t_îr‹_def_gí_h__


104 
	~"›t_îr‹_def_gí.h
"

107 
˛ass
 
	g›ti⁄_group_t
;

122 ˛as†
	c›ti⁄_t
 : 
public
 
w_ba£_t
 {

123 
‰õnd
 
˛ass
 
›ti⁄_group_t
;

124 
	mpublic
:

127 
boﬁ
 
m©ch
(c⁄° * 
m©chName
, boﬁ 
exa˘
=
Ál£
);

136 
w_rc_t
 
£t_vÆue
(c⁄° * 
vÆue
, 
boﬁ
 
ovîRide
, 
o°ªam
* 
îr_°ªam
);

139 c⁄° * 
	$vÆue
(Ë{  
_vÆue
;}

141 
boﬁ
 
	$is_£t
(Ë{  
_£t
; 
	}
}

143 
boﬁ
 
	$is_ªquúed
(Ë{  
_ªquúed
; 
	}
}

145 c⁄° * 
	$«me
(Ë{  
_«me
; 
	}
}

147 c⁄° * 
	$possibÀ_vÆues
(){  
_possibÀ_vÆues
; 
	}
}

149 c⁄° * 
	$deÁu…_vÆue
(Ë{  
_deÁu…_vÆue
; 
	}
}

151 c⁄° * 
	$des¸ùti⁄
(Ë{  
_des¸ùti⁄
; 
	}
}

153 
w_rc_t
 
c›yVÆue
(c⁄° * 
vÆue
);

155 
w_rc_t
 
c⁄ˇtVÆue
(c⁄° * 
vÆue
);

159 
w_rc_t
 
£t_vÆue_boﬁ
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

160 
w_rc_t
 
£t_vÆue_öt4
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

161 
w_rc_t
 
£t_vÆue_öt8
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

162 
w_rc_t
 
£t_vÆue_ch¨°r
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

165 
w_rc_t
 
£t_vÆue_l⁄g
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

166 
w_rc_t
 
£t_vÆue_l⁄g_l⁄g
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
);

173 
boﬁ
 
°r_to_boﬁ
(c⁄° * 
°r
, boﬁ& 
bad_°r
);

175 
	g¥iv©e
:

177 
	$w_rc_t
 (*
	tO±i⁄SëFunc
)(
	t›ti⁄_t
*, c⁄° * 
	tvÆue
,

178 
	to°ªam
* 
	tîr_°ªam
);

181 
NORET
 
	`›ti⁄_t
();

182 
NORET
 ~
	`›ti⁄_t
();

184 
w_rc_t
 
	`öô
(c⁄° * 
«me
, c⁄° * 
√wPoss
,

185 c⁄° * 
deÁu…_vÆue
, c⁄° * 
des¸ùti⁄
,

186 
boﬁ
 
ªquúed
, 
O±i⁄SëFunc
 
ˇŒBack
,

187 
o°ªam
 *
îr_°ªam
);

189 c⁄° * 
_«me
;

190 c⁄° * 
_possibÀ_vÆues
;

191 c⁄° * 
_deÁu…_vÆue
;

192 c⁄° * 
_des¸ùti⁄
;

193 
boﬁ
 
_ªquúed
;

194 
boﬁ
 
_£t
;

195 * 
_vÆue
;

196 
w_lök_t
 
_lök
;

205 
O±i⁄SëFunc
 
_£tFunc
;

207 
	}
};

228 ˛as†
	c›ti⁄_group_t
 : 
public
 
w_ba£_t
 {

229 
public
:

230 
NORET
 
›ti⁄_group_t
(
max_˛ass_Àvñs
);

231 
	mNORET
 ~
›ti⁄_group_t
();

234 
w_rc_t
 
add_˛ass_Àvñ
(c⁄° * 
«me
);

262 
w_rc_t
 
add_›ti⁄
(c⁄° * 
«me
,

263 c⁄° * 
possibÀ_vÆues
,

264 c⁄° * 
deÁu…_vÆue
,

265 c⁄° * 
des¸ùti⁄
,

266 
boﬁ
 
ªquúed
,

267 
›ti⁄_t
::
O±i⁄SëFunc
 
£t_func
,

268 
›ti⁄_t
*& 
√w_›t
,

269 
o°ªam
 *
îr_°ªam
 = &
˚º


282 
w_rc_t
 
lookup
(c⁄° * 
«me
, 
boﬁ
 
exa˘
, 
›ti⁄_t
*&
ªt
);

296 
w_rc_t
 
lookup_by_˛ass
(c⁄° * 
›t_˛ass_«me
, 
›ti⁄_t
*&
ªt
,

297 
boﬁ
 
exa˘
=
Ál£
);

311 
w_rc_t
 
£t_vÆue
(c⁄° * 
«me
, 
boﬁ
 
exa˘
,

312 c⁄° * 
vÆue
, 
boﬁ
 
ovîRide
,

313 
o°ªam
* 
îr_°ªam
);

316 
¥öt_ußge
(
boﬁ
 
l⁄gF‹m
, 
o°ªam
& 
îr_°ªam
);

318 
¥öt_vÆues
(
boﬁ
 
l⁄gF‹m
, 
o°ªam
& 
îr_°ªam
);

326 
w_rc_t
 
check_ªquúed
(
o°ªam
* 
îr_°ªam
);

342 
w_rc_t
 
∑r£_comm™d_löe
(c⁄° ** 
¨gv
,

343 & 
¨gc
,

344 
size_t
 
mö_Àn
,

345 
o°ªam
* 
îr_°ªam
);

348 
	mw_li°_t
<
	m›ti⁄_t
,
	munß„_li°_dummy_lock_t
>& 
	$›ti⁄_li°
(Ë{ 
_›ti⁄s
;}

351 
	$num_˛ass_Àvñs
(){  
_numLevñs
; 
	}
}

353 c⁄° * 
	$˛ass_«me
(Ë{  
_˛ass_«me
; 
	}
}

355 
	g¥iv©e
:

356 
w_li°_t
<
›ti⁄_t
,
	gunß„_li°_dummy_lock_t
> 
	g_›ti⁄s
;

357 * 
	g_˛ass_«me
;

359 ** 
	g_ÀvñLoˇti⁄
;

360 
	g_maxLevñs
;

361 
	g_numLevñs
;

363 
boﬁ
 
	g_îr‹_codes_added
;

366 
NORET
 
›ti⁄_group_t
(option_group_t const &);

378 ˛as†
	c›ti⁄_°ªam_sˇn_t
 : 
public
 
w_ba£_t
 {

379 
i°ªam
 &
_öput
;

380 
›ti⁄_group_t
 *
	m_›tLi°
;

381 *
	m_löe
;

382 c⁄° *
	m_œbñ
;

383 
	m_löeNum
;

385 íum { 
	m_maxLöeLí
 = 2000 };

387 c⁄° *
	gdeÁu…_œbñ
;

389 
	gpublic
:

390 
›ti⁄_°ªam_sˇn_t
(
i°ªam
 &
is
, 
›ti⁄_group_t
 *
›ti⁄_group
);

391 ~
›ti⁄_°ªam_sˇn_t
();

394 
£tLabñ
(c⁄° *
œbñ
);

408 
w_rc_t
 
sˇn
(
boﬁ
 
ovî_ride
, 
o°ªam
& 
îr_°ªam
,

409 
boﬁ
 
exa˘
=
Ál£
, boﬁ 
mism©ch_ok
=false);

431 ˛as†
	c›ti⁄_fûe_sˇn_t
 : 
public
 
w_ba£_t
 {

432 
public
:

433 
NORET
 
›ti⁄_fûe_sˇn_t
(c⁄° * 
›t_fûe_∑th
, 
›ti⁄_group_t
* 
›t_group
);

434 
	mNORET
 ~
›ti⁄_fûe_sˇn_t
();

447 
w_rc_t
 
sˇn
(
boﬁ
 
ovî_ride
, 
o°ªam
& 
îr_°ªam
,

448 
boﬁ
 
exa˘
=
Ál£
, boﬁ 
mism©ch_ok
=false);

450 
	m¥Ÿe˘ed
:

451 c⁄° * 
_fûeName
;

452 
›ti⁄_group_t
 *
	m_›tLi°
;

	@src/common/regcomp.cpp

30 
	~"w_deföes.h
"

74 
	~<os_ty≥s.h
>

75 
	~<c°dio
>

76 
	~<c°rög
>

77 
	~<c˘y≥
>

78 
	~<˛imôs
>

79 
	~<c°dlib
>

80 
	~<w_debug.h
>

82 
	~<ªgex.h
>

84 
	~"ªgex_utûs.h
"

85 
	~"ªgex2.h
"

87 
	~"ªgex_c˛ass.h
"

88 
	~"ªgex_˙ame.h
"

90 
w_f‹˚_sh‹e_ªgexec
;

91 
	gw_f‹˚_sh‹e_ªgcomp
;

92 &
	g_w_f‹˚_sh‹e_ªgcomp
=
w_f‹˚_sh‹e_ªgexec
;

98 
	s∑r£
 {

99 *
	m√xt
;

100 *
	míd
;

101 
	mîr‹
;

102 
s›
 *
	m°rù
;

103 
s›no
 
	mssize
;

104 
s›no
 
	m¶í
;

105 
	mncßŒoc
;

106 
ª_guts
 *
	mg
;

107 
	#NPAREN
 10

	)

108 
s›no
 
	mpbegö
[
NPAREN
];

109 
s›no
 
	m≥nd
[
NPAREN
];

112 
	~"ªgcomp_i.h
"

114 
	gnuls
[10];

120 
	#PEEK
(Ë(*
p
->
√xt
)

	)

121 
	#PEEK2
(Ë(*(
p
->
√xt
+1))

	)

122 
	#MORE
(Ë(
p
->
√xt
 <Ö->
íd
)

	)

123 
	#MORE2
(Ë(
p
->
√xt
+1 <Ö->
íd
)

	)

124 
	#SEE
(
c
Ë(
	`MORE
(Ë&& 
	`PEEK
(Ë=(c))

	)

125 
	#SEETWO
(
a
, 
b
Ë(
	`MORE
(Ë&& 
	`MORE2
(Ë&& 
	`PEEK
(Ë=◊Ë&& 
	`PEEK2
(Ë=(b))

	)

126 
	#EAT
(
c
Ë((
	`SEE
(c)Ë? (
	`NEXT
(), 1Ë: 0)

	)

127 
	#EATTWO
(
a
, 
b
Ë((
	`SEETWO
◊, b)Ë? (
	`NEXT2
(), 1Ë: 0)

	)

128 
	#NEXT
(Ë(
p
->
√xt
++)

	)

129 
	#NEXT2
(Ë(
p
->
√xt
 +2)

	)

130 
	#NEXTn
(
n
Ë(
p
->
√xt
 +“))

	)

131 
	#GETNEXT
(Ë(*
p
->
√xt
++)

	)

132 
	#SETERROR
(
e
Ë
	`£ãº
(
p
, (e))

	)

133 
	#REQUIRE
(
co
, 
e
Ë((coË|| 
	`SETERROR
”));

	)

134 
	#MUSTSEE
(
c
, 
e
Ë(
	`REQUIRE
(
	`MORE
(Ë&& 
	`PEEK
(Ë=(c),É))

	)

135 
	#MUSTEAT
(
c
, 
e
Ë(
	`REQUIRE
((
	`MORE
(Ë&& 
	`GETNEXT
(Ë=(c)),É))

	)

136 
	#MUSTNOTSEE
(
c
, 
e
Ë(
	`REQUIRE
(!
	`MORE
(Ë|| 
	`PEEK
(Ë!(c),É))

	)

137 
	#EMIT
(
›
, 
s›nd
Ë
	`d€mô
(
p
, (
s›
)(›), (
size_t
)(s›nd))

	)

138 
	#INSERT
(
›
, 
pos
Ë
	`doö£π
(
p
, (
s›
)(›), 
	`HERE
()-’os)+1,Öos)

	)

139 
	#AHEAD
(
pos
Ë
	`dofwd
(
p
,Öos, 
	`HERE
()-’os))

	)

140 
	#ASTERN
(
s›
, 
pos
Ë
	`EMIT
(s›, 
	`HERE
()-pos)

	)

141 
	#HERE
(Ë(
p
->
¶í
)

	)

142 
	#THERE
(Ë(
p
->
¶í
 - 1)

	)

143 
	#THERETHERE
(Ë(
p
->
¶í
 - 2)

	)

144 
	#DROP
(
n
Ë(
p
->
¶í
 -“))

	)

146 #ifde‡
REDEBUG


147 
	g√vî
 = 0;

149 
	#√vî
 0

	)

165 
	$ªgcomp
(
ªgex_t
 *
¥eg
, c⁄° *
∑âîn
, 
cÊags
)

167 
∑r£
 
∑
;

168 
ª_guts
 *
g
;

169 
∑r£
 *
p
 = &
∑
;

170 
i
;

171 
size_t
 
Àn
;

172 #ifde‡
REDEBUG


173 
	#GOODFLAGS
(
f
Ë(f)

	)

175 
	#GOODFLAGS
(
f
Ë((f)&~
REG_DUMP
)

	)

178 
cÊags
 = 
	`GOODFLAGS
(cflags);

179 i‡((
cÊags
&
REG_EXTENDED
Ë&& (cÊags&
REG_NOSPEC
))

180 (
REG_INVARG
);

182 i‡(
cÊags
&
REG_PEND
) {

183 i‡(
¥eg
->
ª_ídp
 < 
∑âîn
)

184 (
REG_INVARG
);

185 
Àn
 = 
¥eg
->
ª_ídp
 - 
∑âîn
;

187 
Àn
 = 
	`°æí
((*)
∑âîn
);

190 
g
 = (
ª_guts
 *)
	`mÆloc
((re_guts) +

191 (
NC
-1)*(
ˇt_t
));

192 i‡(
g
 =
NULL
)

193 (
REG_ESPACE
);

194 
p
->
ssize
 = 
Àn
/(
size_t
)2*(size_t)3 + (size_t)1;

195 
p
->
°rù
 = (
s›
 *)
	`mÆloc
’->
ssize
 * (sop));

196 
p
->
¶í
 = 0;

197 i‡(
p
->
°rù
 =
NULL
) {

198 
	`‰ì
((*)
g
);

199 (
REG_ESPACE
);

203 
p
->
g
 = g;

204 
p
->
√xt
 = (*)
∑âîn
;

205 
p
->
íd
 =Ö->
√xt
 + 
Àn
;

206 
p
->
îr‹
 = 0;

207 
p
->
ncßŒoc
 = 0;

208 
i
 = 0; i < 
NPAREN
; i++) {

209 
p
->
pbegö
[
i
] = 0;

210 
p
->
≥nd
[
i
] = 0;

212 
g
->
c£tsize
 = 
NC
;

213 
g
->
£ts
 = 
NULL
;

214 
g
->
£tbôs
 = 
NULL
;

215 
g
->
nc£ts
 = 0;

216 
g
->
cÊags
 = cflags;

217 
g
->
iÊags
 = 0;

218 
g
->
nbﬁ
 = 0;

219 
g
->
√ﬁ
 = 0;

220 
g
->
mu°
 = 
NULL
;

221 
g
->
mÀn
 = 0;

222 
g
->
nsub
 = 0;

223 
g
->
nˇãg‹õs
 = 1;

224 
g
->
ˇãg‹õs
 = &g->
ˇt•a˚
[-(
CHAR_MIN
)];

225 (Ë
	`mem£t
((*)
g
->
ˇt•a˚
, 0, 
NC
*(
ˇt_t
));

226 
g
->
backªfs
 = 0;

229 
	`EMIT
(
OEND
, 0);

230 
g
->
fú°°©e
 = 
	`THERE
();

231 i‡(
cÊags
&
REG_EXTENDED
)

232 
	`p_îe
(
p
, 
REGEX_OUT
);

233 i‡(
cÊags
&
REG_NOSPEC
)

234 
	`p_°r
(
p
);

236 
	`p_bª
(
p
, 
REGEX_OUT
, REGEX_OUT);

237 
	`EMIT
(
OEND
, 0);

238 
g
->
œ°°©e
 = 
	`THERE
();

241 
	`ˇãg‹ize
(
p
, 
g
);

242 
	`°rù¢ug
(
p
, 
g
);

243 
	`födmu°
(
p
, 
g
);

244 
g
->
≈lus
 = 
	`∂uscou¡
(
p
, g);

245 
g
->
magic
 = 
MAGIC2
;

246 
¥eg
->
ª_nsub
 = 
g
->
nsub
;

247 
¥eg
->
ª_g
 = 
g
;

248 
¥eg
->
ª_magic
 = 
MAGIC1
;

249 #i‚de‡
REDEBUG


251 i‡(
g
->
iÊags
&
BAD
)

252 
	`SETERROR
(
REG_ASSERT
);

256 i‡(
p
->
îr‹
 != 0)

257 
	`ªg‰ì
(
¥eg
);

258 (
p
->
îr‹
);

259 
	}
}

266 
	$p_îe
(
∑r£
 *
p
, 
°›
)

268 
c
;

269 
s›no
 
¥evback
=0;

270 
s›no
 
¥evfwd
 =0;

271 
s›no
 
c⁄c
;

272 
fú°
 = 1;

276 
c⁄c
 = 
	`HERE
();

277 
	`MORE
(Ë&& (
c
 = 
	`PEEK
()Ë!'|' && c !
°›
)

278 
	`p_îe_exp
(
p
);

280 (Ë
	`REQUIRE
(
	`HERE
(Ë!
c⁄c
, 
REG_EMPTY
);

282 i‡(!
	`EAT
('|'))

285 i‡(
fú°
) {

286 
	`INSERT
(
OCH_
, 
c⁄c
);

287 
¥evfwd
 = 
c⁄c
;

288 
¥evback
 = 
c⁄c
;

289 
fú°
 = 0;

291 
	`ASTERN
(
OOR1
, 
¥evback
);

292 
¥evback
 = 
	`THERE
();

293 
	`AHEAD
(
¥evfwd
);

294 
¥evfwd
 = 
	`HERE
();

295 
	`EMIT
(
OOR2
, 0);

298 i‡(!
fú°
) {

299 
	`AHEAD
(
¥evfwd
);

300 
	`ASTERN
(
O_CH
, 
¥evback
);

303 
	`ª_as£π
(!
	`MORE
(Ë|| 
	`SEE
(
°›
));

304 
	}
}

311 
	$p_îe_exp
(
∑r£
 *
p
)

313 
c
;

314 
s›no
 
pos
;

315 
cou¡
;

316 
cou¡2
;

317 
s›no
 
subno
;

318 
wasˇªt
 = 0;

320 
	`ª_as£π
(
	`MORE
());

321 
c
 = 
	`GETNEXT
();

323 
pos
 = 
	`HERE
();

324 
c
) {

326 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EPAREN
);

327 
p
->
g
->
nsub
++;

328 
subno
 = 
p
->
g
->
nsub
;

329 i‡(
subno
 < 
NPAREN
)

330 
p
->
pbegö
[
subno
] = 
	`HERE
();

331 
	`EMIT
(
OLPAREN
, 
subno
);

332 i‡(!
	`SEE
(')'))

333 
	`p_îe
(
p
, ')');

334 i‡(
subno
 < 
NPAREN
) {

335 
p
->
≥nd
[
subno
] = 
	`HERE
();

336 
	`ª_as£π
(
p
->
≥nd
[
subno
] != 0);

338 
	`EMIT
(
ORPAREN
, 
subno
);

342 (Ë
	`REQUIRE
((
	`MORE
(Ë&& 
	`GETNEXT
(Ë=')'Ë, 
REG_EPAREN
);

345 #i‚de‡
POSIX_MISTAKE


354 
	`SETERROR
(
REG_EPAREN
);

358 
	`EMIT
(
OBOL
, 0);

359 
p
->
g
->
iÊags
 |
USEBOL
;

360 
p
->
g
->
nbﬁ
++;

361 
wasˇªt
 = 1;

364 
	`EMIT
(
OEOL
, 0);

365 
p
->
g
->
iÊags
 |
USEEOL
;

366 
p
->
g
->
√ﬁ
++;

369 
	`SETERROR
(
REG_EMPTY
);

374 
	`SETERROR
(
REG_BADRPT
);

377 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

378 
	`n⁄√wlöe
(
p
);

380 
	`EMIT
(
OANY
, 0);

383 
	`p_bøckë
(
p
);

386 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EESCAPE
);

387 
c
 = 
	`GETNEXT
();

388 
	`‹dö¨y
(
p
, 
c
);

391 (Ë
	`REQUIRE
(!
	`MORE
(Ë|| !
	`isdigô
(
	`PEEK
()), 
REG_BADRPT
);

394 
	`‹dö¨y
(
p
, 
c
);

398 i‡(!
	`MORE
())

400 
c
 = 
	`PEEK
();

402 i‡(!–
c
 == '*' || c == '+' || c == '?' ||

403 (
c
 ='{' && 
	`MORE2
(Ë&& 
	`isdigô
(
	`PEEK2
())) ))

405 
	`NEXT
();

407 (Ë
	`REQUIRE
(!
wasˇªt
, 
REG_BADRPT
);

408 
c
) {

411 
	`INSERT
(
OPLUS_
, 
pos
);

412 
	`ASTERN
(
O_PLUS
, 
pos
);

413 
	`INSERT
(
OQUEST_
, 
pos
);

414 
	`ASTERN
(
O_QUEST
, 
pos
);

417 
	`INSERT
(
OPLUS_
, 
pos
);

418 
	`ASTERN
(
O_PLUS
, 
pos
);

422 
	`INSERT
(
OCH_
, 
pos
);

423 
	`ASTERN
(
OOR1
, 
pos
);

424 
	`AHEAD
(
pos
);

425 
	`EMIT
(
OOR2
, 0);

426 
	`AHEAD
(
	`THERE
());

427 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

430 
cou¡
 = 
	`p_cou¡
(
p
);

431 i‡(
	`EAT
(',')) {

432 i‡(
	`isdigô
(
	`PEEK
())) {

433 
cou¡2
 = 
	`p_cou¡
(
p
);

434 (Ë
	`REQUIRE
(
cou¡
 <
cou¡2
, 
REG_BADBR
);

436 
cou¡2
 = 
REGEX_INFINITY
;

438 
cou¡2
 = 
cou¡
;

439 
	`ª≥©
(
p
, 
pos
, 
cou¡
, 
cou¡2
);

440 i‡(!
	`EAT
('}')) {

441 
	`MORE
(Ë&& 
	`PEEK
() != '}')

442 
	`NEXT
();

443 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACE
);

444 
	`SETERROR
(
REG_BADBR
);

449 i‡(!
	`MORE
())

451 
c
 = 
	`PEEK
();

452 i‡(!–
c
 == '*' || c == '+' || c == '?' ||

453 (
c
 ='{' && 
	`MORE2
(Ë&& 
	`isdigô
(
	`PEEK2
())) ) )

455 
	`SETERROR
(
REG_BADRPT
);

456 
	}
}

463 
	$p_°r
(
∑r£
 *
p
)

465 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EMPTY
);

466 
	`MORE
())

467 
	`‹dö¨y
(
p
, 
	`GETNEXT
());

468 
	}
}

483 
	$p_bª
(
∑r£
 *
p
, 
íd1
, 
íd2
)

485 
s›no
 
°¨t
 = 
	`HERE
();

486 
fú°
 = 1;

487 
wasdﬁœr
 = 0;

489 i‡(
	`EAT
('^')) {

490 
	`EMIT
(
OBOL
, 0);

491 
p
->
g
->
iÊags
 |
USEBOL
;

492 
p
->
g
->
nbﬁ
++;

494 
	`MORE
(Ë&& !
	`SEETWO
(
íd1
, 
íd2
)) {

495 
wasdﬁœr
 = 
	`p_simp_ª
(
p
, 
fú°
);

496 
fú°
 = 0;

498 i‡(
wasdﬁœr
) {

499 
	`DROP
(1);

500 
	`EMIT
(
OEOL
, 0);

501 
p
->
g
->
iÊags
 |
USEEOL
;

502 
p
->
g
->
√ﬁ
++;

505 (Ë
	`REQUIRE
(
	`HERE
(Ë!
°¨t
, 
REG_EMPTY
);

506 
	}
}

513 
	$p_simp_ª
(
∑r£
 *
p
, 
°¨‹dö¨y
)

515 
c
;

516 
cou¡
;

517 
cou¡2
;

518 
s›no
 
pos
;

519 
i
;

520 
s›no
 
subno
;

521 
	#BACKSL
 (1<<
CHAR_BIT
)

	)

523 
pos
 = 
	`HERE
();

525 
	`ª_as£π
(
	`MORE
());

526 
c
 = 
	`GETNEXT
();

527 i‡(
c
 == '\\') {

528 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EESCAPE
);

529 
c
 = 
BACKSL
 | ()
	`GETNEXT
();

531 
c
) {

533 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

534 
	`n⁄√wlöe
(
p
);

536 
	`EMIT
(
OANY
, 0);

539 
	`p_bøckë
(
p
);

541 
BACKSL
|'{':

542 
	`SETERROR
(
REG_BADRPT
);

544 
BACKSL
|'(':

545 
p
->
g
->
nsub
++;

546 
subno
 = 
p
->
g
->
nsub
;

547 i‡(
subno
 < 
NPAREN
)

548 
p
->
pbegö
[
subno
] = 
	`HERE
();

549 
	`EMIT
(
OLPAREN
, 
subno
);

551 i‡(
	`MORE
(Ë&& !
	`SEETWO
('\\', ')'))

552 
	`p_bª
(
p
, '\\', ')');

553 i‡(
subno
 < 
NPAREN
) {

554 
p
->
≥nd
[
subno
] = 
	`HERE
();

555 
	`ª_as£π
(
p
->
≥nd
[
subno
] != 0);

557 
	`EMIT
(
ORPAREN
, 
subno
);

558 (Ë
	`REQUIRE
(
	`EATTWO
('\\', ')'), 
REG_EPAREN
);

560 
BACKSL
|')':

561 
BACKSL
|'}':

562 
	`SETERROR
(
REG_EPAREN
);

564 
BACKSL
|'1':

565 
BACKSL
|'2':

566 
BACKSL
|'3':

567 
BACKSL
|'4':

568 
BACKSL
|'5':

569 
BACKSL
|'6':

570 
BACKSL
|'7':

571 
BACKSL
|'8':

572 
BACKSL
|'9':

573 
i
 = (
c
&~
BACKSL
) - '0';

574 
	`ª_as£π
(
i
 < 
NPAREN
);

575 i‡(
p
->
≥nd
[
i
] != 0) {

576 
	`ª_as£π
(
i
 <(Ë
p
->
g
->
nsub
);

577 
	`EMIT
(
OBACK_
, 
i
);

578 
	`ª_as£π
(
p
->
pbegö
[
i
] != 0);

579 
	`ª_as£π
(
	`OP
(
p
->
°rù
[p->
pbegö
[
i
]]Ë=
OLPAREN
);

580 
	`ª_as£π
(
	`OP
(
p
->
°rù
[p->
≥nd
[
i
]]Ë=
ORPAREN
);

581 (Ë
	`du∂
(
p
,Ö->
pbegö
[
i
]+1,Ö->
≥nd
[i]);

582 
	`EMIT
(
O_BACK
, 
i
);

584 
	`SETERROR
(
REG_ESUBREG
);

585 
p
->
g
->
backªfs
 = 1;

588 (Ë
	`REQUIRE
(
°¨‹dö¨y
, 
REG_BADRPT
);

591 
	`‹dö¨y
(
p
, 
c
 &~ 
BACKSL
);

595 i‡(
	`EAT
('*')) {

597 
	`INSERT
(
OPLUS_
, 
pos
);

598 
	`ASTERN
(
O_PLUS
, 
pos
);

599 
	`INSERT
(
OQUEST_
, 
pos
);

600 
	`ASTERN
(
O_QUEST
, 
pos
);

601 } i‡(
	`EATTWO
('\\', '{')) {

602 
cou¡
 = 
	`p_cou¡
(
p
);

603 i‡(
	`EAT
(',')) {

604 i‡(
	`MORE
(Ë&& 
	`isdigô
(
	`PEEK
())) {

605 
cou¡2
 = 
	`p_cou¡
(
p
);

606 (Ë
	`REQUIRE
(
cou¡
 <
cou¡2
, 
REG_BADBR
);

608 
cou¡2
 = 
REGEX_INFINITY
;

610 
cou¡2
 = 
cou¡
;

611 
	`ª≥©
(
p
, 
pos
, 
cou¡
, 
cou¡2
);

612 i‡(!
	`EATTWO
('\\', '}')) {

613 
	`MORE
(Ë&& !
	`SEETWO
('\\', '}'))

614 
	`NEXT
();

615 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACE
);

616 
	`SETERROR
(
REG_BADBR
);

618 } i‡(
c
 == ()'$')

622 
	}
}

629 
	$p_cou¡
(
∑r£
 *
p
)

631 
cou¡
 = 0;

632 
ndigôs
 = 0;

634 
	`MORE
(Ë&& 
	`isdigô
(
	`PEEK
()Ë&& 
cou¡
 <
DUPMAX
) {

635 
cou¡
 = cou¡*10 + (
	`GETNEXT
() - '0');

636 
ndigôs
++;

639 (Ë
	`REQUIRE
(
ndigôs
 > 0 && 
cou¡
 <
DUPMAX
, 
REG_BADBR
);

640 (
cou¡
);

641 
	}
}

651 
	$p_bøckë
(
∑r£
 *
p
)

653 
c£t
 *
cs
 = 
	`Æloc£t
(
p
);

654 
övît
 = 0;

657 i‡(
p
->
√xt
 + 5 <Ö->
íd
 && 
	`°∫cmp
(p->next, "[:<:]]", 6) == 0) {

658 
	`EMIT
(
OBOW
, 0);

659 
	`NEXTn
(6);

662 i‡(
p
->
√xt
 + 5 <Ö->
íd
 && 
	`°∫cmp
(p->next, "[:>:]]", 6) == 0) {

663 
	`EMIT
(
OEOW
, 0);

664 
	`NEXTn
(6);

668 i‡(
	`EAT
('^'))

669 
övît
++;

670 i‡(
	`EAT
(']'))

671 
	`CHadd
(
cs
, ']');

672 i‡(
	`EAT
('-'))

673 
	`CHadd
(
cs
, '-');

674 
	`MORE
(Ë&& 
	`PEEK
(Ë!']' && !
	`SEETWO
('-', ']'))

675 
	`p_b_ãrm
(
p
, 
cs
);

676 i‡(
	`EAT
('-'))

677 
	`CHadd
(
cs
, '-');

681 (Ë
	`REQUIRE
((
	`MORE
(Ë&& 
	`GETNEXT
(Ë=']'Ë, 
REG_EBRACK
);

683 i‡(
p
->
îr‹
 != 0)

686 i‡(
p
->
g
->
cÊags
&
REG_ICASE
) {

687 
i
;

688 
ci
;

690 
i
 = 
p
->
g
->
c£tsize
 - 1; i >= 0; i--)

691 i‡(
	`CHIN
(
cs
, 
i
Ë&& 
	`ißÕha
(i)) {

692 
ci
 = 
	`Ÿhîˇ£
(
i
);

693 i‡(
ci
 !
i
)

694 
	`CHadd
(
cs
, 
ci
);

696 i‡(
cs
->
mu…is
 !
NULL
)

697 
	`mcˇ£
(
p
, 
cs
);

699 i‡(
övît
) {

700 
i
;

702 
i
 = 
p
->
g
->
c£tsize
 - 1; i >= 0; i--)

703 i‡(
	`CHIN
(
cs
, 
i
))

704 
	`CHsub
(
cs
, 
i
);

706 
	`CHadd
(
cs
, 
i
);

707 i‡(
p
->
g
->
cÊags
&
REG_NEWLINE
)

708 
	`CHsub
(
cs
, '\n');

709 i‡(
cs
->
mu…is
 !
NULL
)

710 
	`mcövît
(
p
, 
cs
);

713 
	`ª_as£π
(
cs
->
mu…is
 =
NULL
);

715 i‡(
	`nch
(
p
, 
cs
) == 1) {

716 
	`‹dö¨y
(
p
, 
	`fú°ch
’, 
cs
));

717 
	`‰ì£t
(
p
, 
cs
);

719 
	`EMIT
(
OANYOF
, 
	`‰ìze£t
(
p
, 
cs
));

720 
	}
}

727 
	$p_b_ãrm
(
∑r£
 *
p
, 
c£t
 *
cs
)

729 
c
;

730 
°¨t
, 
föish
;

731 
i
;

734 (
	`MORE
()Ë? 
	`PEEK
() : '\0') {

736 
c
 = (
	`MORE2
()Ë? 
	`PEEK2
() : '\0';

739 
	`SETERROR
(
REG_ERANGE
);

743 
c
 = '\0';

747 
c
) {

749 
	`NEXT2
();

750 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

751 
c
 = 
	`PEEK
();

752 (Ë
	`REQUIRE
(
c
 !'-' && c !']', 
REG_ECTYPE
);

753 
	`p_b_c˛ass
(
p
, 
cs
);

754 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

755 (Ë
	`REQUIRE
(
	`EATTWO
(':', ']'), 
REG_ECTYPE
);

758 
	`NEXT2
();

759 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

760 
c
 = 
	`PEEK
();

761 (Ë
	`REQUIRE
(
c
 !'-' && c !']', 
REG_ECOLLATE
);

762 
	`p_b_e˛ass
(
p
, 
cs
);

763 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

764 (Ë
	`REQUIRE
(
	`EATTWO
('=', ']'), 
REG_ECOLLATE
);

768 
°¨t
 = 
	`p_b_symbﬁ
(
p
);

769 i‡(
	`SEE
('-'Ë&& 
	`MORE2
(Ë&& 
	`PEEK2
() != ']') {

771 
	`NEXT
();

772 i‡(
	`EAT
('-'))

773 
föish
 = '-';

775 
föish
 = 
	`p_b_symbﬁ
(
p
);

777 
föish
 = 
°¨t
;

779 (Ë
	`REQUIRE
(
°¨t
 <
föish
, 
REG_ERANGE
);

780 
i
 = 
°¨t
; i <
föish
; i++)

781 
	`CHadd
(
cs
, 
i
);

784 
	}
}

791 
	$p_b_c˛ass
(
∑r£
 *
p
, 
c£t
 *
cs
)

793 *
•
 = 
p
->
√xt
;

794 
c˛ass
 *
˝
;

795 
size_t
 
Àn
;

796 c⁄° *
u
;

797 
c
;

799 
	`MORE
(Ë&& 
	`ißÕha
(
	`PEEK
()))

800 
	`NEXT
();

801 
Àn
 = 
p
->
√xt
 - 
•
;

802 
˝
 = 
c˛as£s
; cp->
«me
 !
NULL
; cp++)

803 i‡(
	`°∫cmp
(
˝
->
«me
, 
•
, 
Àn
) == 0 && cp->name[len] == '\0')

805 i‡(
˝
->
«me
 =
NULL
) {

807 
	`SETERROR
(
REG_ECTYPE
);

811 
u
 = 
˝
->
ch¨s
;

812 (
c
 = *
u
++) != '\0')

813 
	`CHadd
(
cs
, 
c
);

814 
u
 = 
˝
->
mu…is
; *u !'\0'; u +
	`°æí
(u) + 1)

815 
	`MCadd
(
p
, 
cs
, 
u
);

816 
	}
}

825 
	$p_b_e˛ass
(
∑r£
 *
p
, 
c£t
 *
cs
)

827 
c
;

829 
c
 = 
	`p_b_cﬁl_ñem
(
p
, '=');

830 
	`CHadd
(
cs
, 
c
);

831 
	}
}

838 
	$p_b_symbﬁ
(
∑r£
 *
p
)

840 
vÆue
;

842 (Ë
	`REQUIRE
(
	`MORE
(), 
REG_EBRACK
);

843 i‡(!
	`EATTWO
('[', '.'))

844 (
	`GETNEXT
());

847 
vÆue
 = 
	`p_b_cﬁl_ñem
(
p
, '.');

848 (Ë
	`REQUIRE
(
	`EATTWO
('.', ']'), 
REG_ECOLLATE
);

849 (
vÆue
);

850 
	}
}

857 
	$p_b_cﬁl_ñem
(
∑r£
 *
p
, 
ídc
)

859 *
•
 = 
p
->
√xt
;

860 
˙ame
 *
˝
;

861 
Àn
;

863 
	`MORE
(Ë&& !
	`SEETWO
(
ídc
, ']'))

864 
	`NEXT
();

865 i‡(!
	`MORE
()) {

866 
	`SETERROR
(
REG_EBRACK
);

869 
Àn
 = 
p
->
√xt
 - 
•
;

870 
˝
 = 
˙ames
; cp->
«me
 !
NULL
; cp++)

871 i‡(
	`°∫cmp
(
˝
->
«me
, 
•
, 
Àn
) == 0 && cp->name[len] == '\0')

872 (
˝
->
code
);

873 i‡(
Àn
 == 1)

874 (*
•
);

875 
	`SETERROR
(
REG_ECOLLATE
);

877 
	}
}

884 
	$Ÿhîˇ£
(
ch
)

886 
	`ª_as£π
(
	`ißÕha
(
ch
));

887 i‡(
	`isuµî
(
ch
))

888 (
	`tﬁowî
(
ch
));

889 i‡(
	`i¶owî
(
ch
))

890 (
	`touµî
(
ch
));

892 (
ch
);

893 
	}
}

902 
	$bŸhˇ£s
(
∑r£
 *
p
, 
ch
)

904 *
ﬁd√xt
 = 
p
->
√xt
;

905 *
ﬁdíd
 = 
p
->
íd
;

906 
bøckë
[3];

908 
	`ª_as£π
(
	`Ÿhîˇ£
(
ch
) != ch);

909 
p
->
√xt
 = 
bøckë
;

910 
p
->
íd
 = 
bøckë
+2;

911 
bøckë
[0] = 
ch
;

912 
bøckë
[1] = ']';

913 
bøckë
[2] = '\0';

914 
	`p_bøckë
(
p
);

915 
	`ª_as£π
(
p
->
√xt
 =
bøckë
+2);

916 
p
->
√xt
 = 
ﬁd√xt
;

917 
p
->
íd
 = 
ﬁdíd
;

918 
	}
}

925 
	$‹dö¨y
(
∑r£
 *
p
, 
ch
)

927 
ˇt_t
 *
ˇp
 = 
p
->
g
->
ˇãg‹õs
;

929 i‡((
p
->
g
->
cÊags
&
REG_ICASE
Ë&& 
	`ißÕha
(
ch
Ë&& 
	`Ÿhîˇ£
(ch) != ch)

930 
	`bŸhˇ£s
(
p
, 
ch
);

932 
	`EMIT
(
OCHAR
, ()
ch
);

933 i‡(
ˇp
[
ch
] == 0)

934 
ˇp
[
ch
] = 
p
->
g
->
nˇãg‹õs
++;

936 
	}
}

945 
	$n⁄√wlöe
(
∑r£
 *
p
)

947 *
ﬁd√xt
 = 
p
->
√xt
;

948 *
ﬁdíd
 = 
p
->
íd
;

949 
bøckë
[4];

951 
p
->
√xt
 = 
bøckë
;

952 
p
->
íd
 = 
bøckë
+3;

953 
bøckë
[0] = '^';

954 
bøckë
[1] = '\n';

955 
bøckë
[2] = ']';

956 
bøckë
[3] = '\0';

957 
	`p_bøckë
(
p
);

958 
	`ª_as£π
(
p
->
√xt
 =
bøckë
+3);

959 
p
->
√xt
 = 
ﬁd√xt
;

960 
p
->
íd
 = 
ﬁdíd
;

961 
	}
}

968 
	$ª≥©
(
∑r£
 *
p
, 
s›no
 
°¨t
, 
‰om
, 
to
)

970 
s›no
 
föish
 = 
	`HERE
();

971 
	#N
 2

	)

972 
	#INF
 3

	)

973 
	#REP
(
f
, 
t
Ë((f)*8 + (t))

	)

974 
	#MAP
(
n
Ë((“Ë<1Ë? (nË: (“Ë=
REGEX_INFINITY
Ë? 
INF
 : 
N
)

	)

975 
s›no
 
c›y
;

977 i‡(
p
->
îr‹
 != 0)

980 
	`ª_as£π
(
‰om
 <
to
);

982 
	`REP
(
	`MAP
(
‰om
), MAP(
to
))) {

983 
	`REP
(0, 0):

984 
	`DROP
(
föish
-
°¨t
);

986 
	`REP
(0, 1):

987 
	`REP
(0, 
N
):

988 
	`REP
(0, 
INF
):

990 
	`INSERT
(
OCH_
, 
°¨t
);

991 
	`ª≥©
(
p
, 
°¨t
+1, 1, 
to
);

992 
	`ASTERN
(
OOR1
, 
°¨t
);

993 
	`AHEAD
(
°¨t
);

994 
	`EMIT
(
OOR2
, 0);

995 
	`AHEAD
(
	`THERE
());

996 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

998 
	`REP
(1, 1):

1001 
	`REP
(1, 
N
):

1003 
	`INSERT
(
OCH_
, 
°¨t
);

1004 
	`ASTERN
(
OOR1
, 
°¨t
);

1005 
	`AHEAD
(
°¨t
);

1006 
	`EMIT
(
OOR2
, 0);

1007 
	`AHEAD
(
	`THERE
());

1008 
	`ASTERN
(
O_CH
, 
	`THERETHERE
());

1009 
c›y
 = 
	`du∂
(
p
, 
°¨t
+1, 
föish
+1);

1010 
	`ª_as£π
(
c›y
 =
föish
+4);

1011 
	`ª≥©
(
p
, 
c›y
, 1, 
to
-1);

1013 
	`REP
(1, 
INF
):

1014 
	`INSERT
(
OPLUS_
, 
°¨t
);

1015 
	`ASTERN
(
O_PLUS
, 
°¨t
);

1017 
	`REP
(
N
, N):

1018 
c›y
 = 
	`du∂
(
p
, 
°¨t
, 
föish
);

1019 
	`ª≥©
(
p
, 
c›y
, 
‰om
-1, 
to
-1);

1021 
	`REP
(
N
, 
INF
):

1022 
c›y
 = 
	`du∂
(
p
, 
°¨t
, 
föish
);

1023 
	`ª≥©
(
p
, 
c›y
, 
‰om
-1, 
to
);

1026 
	`SETERROR
(
REG_ASSERT
);

1029 
	}
}

1036 
	$£ãº
(
∑r£
 *
p
, 
e
)

1038 i‡(
p
->
îr‹
 == 0)

1039 
p
->
îr‹
 = 
e
;

1040 
p
->
√xt
 = 
nuls
;

1041 
p
->
íd
 = 
nuls
;

1043 
	}
}

1049 
c£t
 *

1050 
	$Æloc£t
(
∑r£
 *
p
)

1052 
no
 = 
p
->
g
->
nc£ts
++;

1053 
size_t
 
nc
;

1054 
size_t
 
nbyãs
;

1055 
c£t
 *
cs
;

1056 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1057 
i
;

1059 i‡(
no
 >
p
->
ncßŒoc
) {

1060 
p
->
ncßŒoc
 +
CHAR_BIT
;

1061 
nc
 = 
p
->
ncßŒoc
;

1062 
	`ª_as£π
(
nc
 % 
CHAR_BIT
 == 0);

1063 
nbyãs
 = 
nc
 / 
CHAR_BIT
 * 
css
;

1064 i‡(
p
->
g
->
£ts
 =
NULL
)

1065 
p
->
g
->
£ts
 = (
c£t
 *)
	`mÆloc
(
nc
 * (cset));

1067 
p
->
g
->
£ts
 = (
c£t
 *)
	`ªÆloc
((*)p->g->sets,

1068 
nc
 * (
c£t
));

1069 i‡(
p
->
g
->
£tbôs
 =
NULL
)

1070 
p
->
g
->
£tbôs
 = (
uch
 *)
	`mÆloc
(
nbyãs
);

1072 
p
->
g
->
£tbôs
 = (
uch
 *)
	`ªÆloc
((*)p->g->setbits,

1073 
nbyãs
);

1075 
i
 = 0; i < 
no
; i++)

1076 
p
->
g
->
£ts
[
i
].
±r
 =Ö->g->
£tbôs
 + 
css
*(i/
CHAR_BIT
);

1078 i‡(
p
->
g
->
£ts
 !
NULL
 &&Ö->g->
£tbôs
 != NULL)

1079 (Ë
	`mem£t
((*)
p
->
g
->
£tbôs
 + (
nbyãs
 - 
css
),

1080 0, 
css
);

1082 
no
 = 0;

1083 
	`SETERROR
(
REG_ESPACE
);

1088 
	`ª_as£π
(
p
->
g
->
£ts
 !
NULL
);

1089 
cs
 = &
p
->
g
->
£ts
[
no
];

1090 
cs
->
±r
 = 
p
->
g
->
£tbôs
 + 
css
*((
no
)/
CHAR_BIT
);

1091 
cs
->
mask
 = 1 << ((
no
Ë% 
CHAR_BIT
);

1092 
cs
->
hash
 = 0;

1093 
cs
->
smu…is
 = 0;

1094 
cs
->
mu…is
 = 
NULL
;

1096 (
cs
);

1097 
	}
}

1104 
	$‰ì£t
(
∑r£
 *
p
, 
c£t
 *
cs
)

1106 
size_t
 
i
;

1107 
c£t
 *
t›
 = &
p
->
g
->
£ts
[p->g->
nc£ts
];

1108 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1110 
i
 = 0; i < 
css
; i++)

1111 
	`CHsub
(
cs
, 
i
);

1112 i‡(
cs
 =
t›
-1)

1113 
p
->
g
->
nc£ts
--;

1114 
	}
}

1127 
	$‰ìze£t
(
∑r£
 *
p
, 
c£t
 *
cs
)

1129 
uch
 
h
 = 
cs
->
hash
;

1130 
size_t
 
i
;

1131 
c£t
 *
t›
 = &
p
->
g
->
£ts
[p->g->
nc£ts
];

1132 
c£t
 *
cs2
;

1133 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1136 
cs2
 = &
p
->
g
->
£ts
[0]; cs2 < 
t›
; cs2++)

1137 i‡(
cs2
->
hash
 =
h
 && cs2 !
cs
) {

1139 
i
 = 0; i < 
css
; i++)

1140 i‡(!!
	`CHIN
(
cs2
, 
i
Ë!!!CHIN(
cs
, i))

1142 i‡(
i
 =
css
)

1146 i‡(
cs2
 < 
t›
) {

1147 
	`‰ì£t
(
p
, 
cs
);

1148 
cs
 = 
cs2
;

1151 (()(
cs
 - 
p
->
g
->
£ts
));

1152 
	}
}

1159 
	$fú°ch
(
∑r£
 *
p
, 
c£t
 *
cs
)

1161 
size_t
 
i
;

1162 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1164 
i
 = 0; i < 
css
; i++)

1165 i‡(
	`CHIN
(
cs
, 
i
))

1166 (()
i
);

1167 
	`ª_as£π
(
√vî
);

1169 
	}
}

1176 
	$nch
(
∑r£
 *
p
, 
c£t
 *
cs
)

1178 
size_t
 
i
;

1179 
size_t
 
css
 = (size_t)
p
->
g
->
c£tsize
;

1180 
n
 = 0;

1182 
i
 = 0; i < 
css
; i++)

1183 i‡(
	`CHIN
(
cs
, 
i
))

1184 
n
++;

1185 (
n
);

1186 
	}
}

1194 
	$mˇdd
(
∑r£
 *
p
, 
c£t
 *
cs
, c⁄° *
˝
)

1196 
size_t
 
ﬁdíd
 = 
cs
->
smu…is
;

1198 
cs
->
smu…is
 +
	`°æí
(
˝
) + 1;

1199 i‡(
cs
->
mu…is
 =
NULL
)

1200 
cs
->
mu…is
 = (*)
	`mÆloc
(cs->
smu…is
);

1202 
cs
->
mu…is
 = (*)
	`ªÆloc
(cs->mu…is, cs->
smu…is
);

1203 i‡(
cs
->
mu…is
 =
NULL
) {

1204 
	`SETERROR
(
REG_ESPACE
);

1208 (Ë
	`°r˝y
(
cs
->
mu…is
 + 
ﬁdíd
 - 1, 
˝
);

1209 
cs
->
mu…is
[cs->
smu…is
 - 1] = '\0';

1210 
	}
}

1221 
mcövît
(
∑r£
 *, 
c£t
 * 
	$W_IFDEBUG3
(
cs
))

1223 
	`w_as£π3
(
cs
->
mu…is
 =
NULL
);

1224 
	}
}

1234 
mcˇ£
(
∑r£
 *, 
c£t
 * 
	$W_IFDEBUG3
(
cs
))

1236 
	`w_as£π3
(
cs
->
mu…is
 =
NULL
);

1237 
	}
}

1244 
	$isö£ts
(
ª_guts
 *
g
, 
c
)

1246 
uch
 *
cﬁ
;

1247 
i
;

1248 
ncﬁs
 = (
g
->
nc£ts
+(
CHAR_BIT
-1)) / CHAR_BIT;

1249 
uc
 = ()
c
;

1251 
i
 = 0, 
cﬁ
 = 
g
->
£tbôs
; i < 
ncﬁs
; i++, cﬁ +g->
c£tsize
)

1252 i‡(
cﬁ
[
uc
] != 0)

1255 
	}
}

1262 
	$ßme£ts
(
ª_guts
 *
g
, 
c1
, 
c2
)

1264 
uch
 *
cﬁ
;

1265 
i
;

1266 
ncﬁs
 = (
g
->
nc£ts
+(
CHAR_BIT
-1)) / CHAR_BIT;

1267 
uc1
 = ()
c1
;

1268 
uc2
 = ()
c2
;

1270 
i
 = 0, 
cﬁ
 = 
g
->
£tbôs
; i < 
ncﬁs
; i++, cﬁ +g->
c£tsize
)

1271 i‡(
cﬁ
[
uc1
] !cﬁ[
uc2
])

1274 
	}
}

1281 
	$ˇãg‹ize
(
∑r£
 *
p
, 
ª_guts
 *
g
)

1283 
ˇt_t
 *
ˇts
 = 
g
->
ˇãg‹õs
;

1284 
c
;

1285 
c2
;

1286 
ˇt_t
 
ˇt
;

1289 i‡(
p
->
îr‹
 != 0)

1292 
c
 = 
CHAR_MIN
; c <
CHAR_MAX
; c++)

1293 i‡(
ˇts
[
c
] =0 && 
	`isö£ts
(
g
, c)) {

1294 
ˇt
 = 
g
->
nˇãg‹õs
++;

1295 
ˇts
[
c
] = 
ˇt
;

1296 
c2
 = 
c
+1; c2 <
CHAR_MAX
; c2++)

1297 i‡(
ˇts
[
c2
] =0 && 
	`ßme£ts
(
g
, 
c
, c2))

1298 
ˇts
[
c2
] = 
ˇt
;

1300 
	}
}

1306 
s›no


1307 
	$du∂
(
∑r£
 *
p
, 
s›no
 
°¨t
, s›nÿ
föish
)

1309 
s›no
 
ªt
 = 
	`HERE
();

1310 
s›no
 
Àn
 = 
föish
 - 
°¨t
;

1312 
	`ª_as£π
(
föish
 >
°¨t
);

1313 i‡(
Àn
 == 0)

1314 (
ªt
);

1315 
	`íœrge
(
p
,Ö->
ssize
 + 
Àn
);

1316 
	`ª_as£π
(
p
->
ssize
 >p->
¶í
 + 
Àn
);

1317 (Ë
	`mem˝y
((*)(
p
->
°rù
 +Ö->
¶í
),

1318 (*)(
p
->
°rù
 + 
°¨t
), (
size_t
)
Àn
*(
s›
));

1319 
p
->
¶í
 +
Àn
;

1320 (
ªt
);

1321 
	}
}

1332 
	$d€mô
(
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
)

1335 i‡(
p
->
îr‹
 != 0)

1339 
	`ª_as£π
(
›nd
 < 1<<
OPSHIFT
);

1342 i‡(
p
->
¶í
 >p->
ssize
)

1343 
	`íœrge
(
p
, (p->
ssize
+1) / 2 * 3);

1344 
	`ª_as£π
(
p
->
¶í
 <Ö->
ssize
);

1347 
p
->
°rù
[p->
¶í
++] = 
	`SOP
(
›
, 
›nd
);

1348 
	}
}

1355 
	$doö£π
(
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
, 
s›no
 
pos
)

1357 
s›no
 
¢
;

1358 
s›
 
s
;

1359 
i
;

1362 i‡(
p
->
îr‹
 != 0)

1365 
¢
 = 
	`HERE
();

1366 
	`EMIT
(
›
, 
›nd
);

1367 
	`ª_as£π
(
	`HERE
(Ë=
¢
+1);

1368 
s
 = 
p
->
°rù
[
¢
];

1371 
	`ª_as£π
(
pos
 > 0);

1372 
i
 = 1; i < 
NPAREN
; i++) {

1373 i‡(
p
->
pbegö
[
i
] >
pos
) {

1374 
p
->
pbegö
[
i
]++;

1376 i‡(
p
->
≥nd
[
i
] >
pos
) {

1377 
p
->
≥nd
[
i
]++;

1381 
	`memmove
((*)&
p
->
°rù
[
pos
+1], (*)&p->strip[pos],

1382 (
	`HERE
()-
pos
-1)*(
s›
));

1383 
p
->
°rù
[
pos
] = 
s
;

1384 
	}
}

1391 
	$dofwd
(
∑r£
 *
p
, 
s›no
 
pos
, 
s›
 
vÆue
)

1394 i‡(
p
->
îr‹
 != 0)

1397 
	`ª_as£π
(
vÆue
 < 1<<
OPSHIFT
);

1398 
p
->
°rù
[
pos
] = 
	`OP
’->°rù[pos]Ë| 
vÆue
;

1399 
	}
}

1406 
	$íœrge
(
∑r£
 * 
p
, 
s›no
 
size
)

1408 
s›
 *
•
;

1410 i‡(
p
->
ssize
 >
size
)

1413 
•
 = (
s›
 *)
	`ªÆloc
(
p
->
°rù
, 
size
*(sop));

1414 i‡(
•
 =
NULL
) {

1415 
	`SETERROR
(
REG_ESPACE
);

1418 
p
->
°rù
 = 
•
;

1419 
p
->
ssize
 = 
size
;

1420 
	}
}

1427 
	$°rù¢ug
(
∑r£
 *
p
, 
ª_guts
 *
g
)

1429 
g
->
n°©es
 = 
p
->
¶í
;

1430 
g
->
°rù
 = (
s›
 *)
	`ªÆloc
((*)
p
->°rù,Ö->
¶í
 * (sop));

1431 i‡(
g
->
°rù
 =
NULL
) {

1432 
	`SETERROR
(
REG_ESPACE
);

1433 
g
->
°rù
 = 
p
->strip;

1435 
	}
}

1448 
	$födmu°
(
∑r£
 *
p
, 
ª_guts
 *
g
)

1450 
s›
 *
sˇn
;

1451 
s›
 *
°¨t
=0;

1452 
s›
 *
√w°¨t
=0;

1453 
s›no
 
√wÀn
;

1454 
s›
 
s
;

1455 *
˝
;

1456 
s›no
 
i
;

1459 i‡(
p
->
îr‹
 != 0)

1463 
√wÀn
 = 0;

1464 
sˇn
 = 
g
->
°rù
 + 1;

1466 
s
 = *
sˇn
++;

1467 
	`OP
(
s
)) {

1468 
OCHAR
:

1469 i‡(
√wÀn
 == 0)

1470 
√w°¨t
 = 
sˇn
 - 1;

1471 
√wÀn
++;

1473 
OPLUS_
:

1474 
OLPAREN
:

1475 
ORPAREN
:

1477 
OQUEST_
:

1478 
OCH_
:

1479 
sˇn
--;

1481 
sˇn
 +
	`OPND
(
s
);

1482 
s
 = *
sˇn
;

1484 i‡(
	`OP
(
s
Ë!
O_QUEST
 && OP(sË!
O_CH
 &&

1485 
	`OP
(
s
Ë!
OOR2
) {

1486 
g
->
iÊags
 |
BAD
;

1489 } 
	`OP
(
s
Ë!
O_QUEST
 && OP(sË!
O_CH
);

1492 i‡(
√wÀn
 > 
g
->
mÀn
) {

1493 
°¨t
 = 
√w°¨t
;

1494 
g
->
mÀn
 = 
√wÀn
;

1496 
√wÀn
 = 0;

1499 } 
	`OP
(
s
Ë!
OEND
);

1501 i‡(
g
->
mÀn
 == 0)

1505 
g
->
mu°
 = (*)
	`mÆloc
((
size_t
)g->
mÀn
 + 1);

1506 i‡(
g
->
mu°
 =
NULL
) {

1507 
g
->
mÀn
 = 0;

1510 
˝
 = 
g
->
mu°
;

1511 
sˇn
 = 
°¨t
;

1512 
i
 = 
g
->
mÀn
; i > 0; i--) {

1513 
	`OP
(
s
 = *
sˇn
++Ë!
OCHAR
)

1515 
	`ª_as£π
(
˝
 < 
g
->
mu°
 + g->
mÀn
);

1516 *
˝
++ = ()
	`OPND
(
s
);

1518 
	`ª_as£π
(
˝
 =
g
->
mu°
 + g->
mÀn
);

1519 *
˝
++ = '\0';

1520 
	}
}

1526 
s›no


1527 
	$∂uscou¡
(
∑r£
 *
p
, 
ª_guts
 *
g
)

1529 
s›
 *
sˇn
;

1530 
s›
 
s
;

1531 
s›no
 
∂u¢e°
 = 0;

1532 
s›no
 
max√°
 = 0;

1534 i‡(
p
->
îr‹
 != 0)

1537 
sˇn
 = 
g
->
°rù
 + 1;

1539 
s
 = *
sˇn
++;

1540 
	`OP
(
s
)) {

1541 
OPLUS_
:

1542 
∂u¢e°
++;

1544 
O_PLUS
:

1545 i‡(
∂u¢e°
 > 
max√°
)

1546 
max√°
 = 
∂u¢e°
;

1547 
∂u¢e°
--;

1550 } 
	`OP
(
s
Ë!
OEND
);

1551 i‡(
∂u¢e°
 != 0)

1552 
g
->
iÊags
 |
BAD
;

1553 (
max√°
);

1554 
	}
}

	@src/common/regcomp_i.h

1 #i‚de‡
REGCOMP_I_H


2 
	#REGCOMP_I_H


	)

4 
	~"w_deföes.h
"

50 
p_îe
(
∑r£
 *
p
, 
°›
);

51 
p_îe_exp
(
∑r£
 *
p
);

52 
p_°r
(
∑r£
 *
p
);

53 
p_bª
(
∑r£
 *
p
, 
íd1
, 
íd2
);

54 
p_simp_ª
(
∑r£
 *
p
, 
°¨‹dö¨y
);

55 
p_cou¡
(
∑r£
 *
p
);

56 
p_bøckë
(
∑r£
 *
p
);

57 
p_b_ãrm
(
∑r£
 *
p
, 
c£t
 *
cs
);

58 
p_b_c˛ass
(
∑r£
 *
p
, 
c£t
 *
cs
);

59 
p_b_e˛ass
(
∑r£
 *
p
, 
c£t
 *
cs
);

60 
p_b_symbﬁ
(
∑r£
 *
p
);

61 
p_b_cﬁl_ñem
(
∑r£
 *
p
, 
ídc
);

62 
Ÿhîˇ£
(
ch
);

63 
bŸhˇ£s
(
∑r£
 *
p
, 
ch
);

64 
‹dö¨y
(
∑r£
 *
p
, 
ch
);

65 
n⁄√wlöe
(
∑r£
 *
p
);

66 
ª≥©
(
∑r£
 *
p
, 
s›no
 
°¨t
, 
‰om
, 
to
);

67 
£ãº
(
∑r£
 *
p
, 
e
);

68 
c£t
 *
Æloc£t
(
∑r£
 *
p
);

69 
‰ì£t
(
∑r£
 *
p
, 
c£t
 *
cs
);

70 
‰ìze£t
(
∑r£
 *
p
, 
c£t
 *
cs
);

71 
fú°ch
(
∑r£
 *
p
, 
c£t
 *
cs
);

72 
nch
(
∑r£
 *
p
, 
c£t
 *
cs
);

73 
mˇdd
(
∑r£
 *
p
, 
c£t
 *
cs
, c⁄° *
˝
);

74 
mcövît
(
∑r£
 *
p
, 
c£t
 *
cs
);

75 
mcˇ£
(
∑r£
 *
p
, 
c£t
 *
cs
);

76 
isö£ts
(
ª_guts
 *
g
, 
c
);

77 
ßme£ts
(
ª_guts
 *
g
, 
c1
, 
c2
);

78 
ˇãg‹ize
(
∑r£
 *
p
, 
ª_guts
 *
g
);

79 
s›no
 
du∂
(
∑r£
 *
p
, s›nÿ
°¨t
, s›nÿ
föish
);

80 
d€mô
(
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
);

81 
doö£π
(
∑r£
 *
p
, 
s›
 
›
, 
size_t
 
›nd
, 
s›no
 
pos
);

82 
dofwd
(
∑r£
 *
p
, 
s›no
 
pos
, 
s›
 
vÆue
);

83 
íœrge
(
∑r£
 *
p
, 
s›no
 
size
);

84 
°rù¢ug
(
∑r£
 *
p
, 
ª_guts
 *
g
);

85 
födmu°
(
∑r£
 *
p
, 
ª_guts
 *
g
);

86 
s›no
 
∂uscou¡
(
∑r£
 *
p
, 
ª_guts
 *
g
);

	@src/common/regerror.cpp

30 
	~"w_deföes.h
"

74 
	~<os_ty≥s.h
>

75 
	~<c°dio
>

76 
	~<c°rög
>

77 
	~<c˘y≥
>

78 
	~<˛imôs
>

79 
	~<c°dlib
>

80 
	~<w_debug.h
>

81 
	~<ªgex.h
>

83 
	~"ªgex_utûs.h
"

84 
	~"ªgîr‹_i.h
"

86 
w_f‹˚_sh‹e_ªgcomp
;

87 
	gw_f‹˚_sh‹e_ªgîr‹
=0;

88 &
	g_w_f‹˚_sh‹e_ªgîr‹
=
w_f‹˚_sh‹e_ªgcomp
;

111 
	sªº
 {

112 
	mcode
;

113 c⁄° *
	m«me
;

114 c⁄° *
	mex∂aö
;

115 } 
	gªºs
[] = {

116 { 
REG_OKAY
, "REG_OKAY", "noÉrrors detected"},

117 { 
REG_NOMATCH
, "REG_NOMATCH", "regexec() failedÅo match"},

118 { 
REG_BADPAT
, "REG_BADPAT", "invalidÑegularÉxpression"},

119 { 
REG_ECOLLATE
, "REG_ECOLLATE", "invalid collatingÉlement"},

120 { 
REG_ECTYPE
, "REG_ECTYPE", "invalid character class"},

121 { 
REG_EESCAPE
, "REG_EESCAPE", "trailing backslash (\\)"},

122 { 
REG_ESUBREG
, "REG_ESUBREG", "invalid backreferenceÇumber"},

123 { 
REG_EBRACK
, "REG_EBRACK", "brackets ([ ])Çot balanced"},

124 { 
REG_EPAREN
, "REG_EPAREN", "parenthesesÇot balanced"},

125 { 
REG_EBRACE
, "REG_EBRACE", "bracesÇot balanced"},

126 { 
REG_BADBR
, "REG_BADBR", "invalidÑepetition count(s)"},

127 { 
REG_ERANGE
, "REG_ERANGE", "invalid characterÑange"},

128 { 
REG_ESPACE
, "REG_ESPACE", "out of memory"},

129 { 
REG_BADRPT
, "REG_BADRPT", "repetition-operator operand invalid"},

130 { 
REG_EMPTY
, "REG_EMPTY", "empty (sub)expression"},

131 { 
REG_ASSERT
, "REG_ASSERT", "\"can't happen\" -- you foundá bug"},

132 { 
REG_INVARG
, "REG_INVARG", "invalidárgumentÅoÑegexÑoutine"},

141 
size_t


142 
	$ªgîr‹
(
îrcode
, c⁄° 
ªgex_t
 *
¥eg
, *
îrbuf
, 
size_t
 
îrbuf_size
)

144 
ªº
 *
r
;

145 
size_t
 
Àn
;

146 
èrgë
 = 
îrcode
 &~ 
REG_ITOA
;

147 c⁄° *
s
;

148 
c⁄vbuf
[50];

150 i‡(
îrcode
 =
REG_ATOI
)

151 
s
 = 
	`ªg©oi
(
¥eg
, 
c⁄vbuf
);

153 
r
 = 
ªºs
;Ñ->
code
 >= 0;Ñ++)

154 i‡(
r
->
code
 =
èrgë
)

157 i‡(
îrcode
&
REG_ITOA
) {

158 i‡(
r
->
code
 >= 0)

159 (Ë
	`°r˝y
(
c⁄vbuf
, 
r
->
«me
);

161 
	`•rötf
(
c⁄vbuf
, "REG_0x%x", 
èrgë
);

162 
	`ª_as£π
(
	`°æí
(
c⁄vbuf
) < (convbuf));

163 
s
 = 
c⁄vbuf
;

165 
s
 = 
r
->
ex∂aö
;

168 
Àn
 = 
	`°æí
(
s
) + 1;

169 i‡(
îrbuf_size
 > 0) {

170 i‡(
îrbuf_size
 > 
Àn
)

171 (Ë
	`°r˝y
(
îrbuf
, 
s
);

173 (Ë
	`°∫˝y
(
îrbuf
, 
s
, 
îrbuf_size
-1);

174 
îrbuf
[
îrbuf_size
-1] = '\0';

178 (
Àn
);

179 
	}
}

186 
	$ªg©oi
(c⁄° 
ªgex_t
 *
¥eg
, *
loˇlbuf
)

188 
ªº
 *
r
;

190 
r
 = 
ªºs
;Ñ->
code
 >= 0;Ñ++)

191 i‡(
	`°rcmp
(
r
->
«me
, 
¥eg
->
ª_ídp
) == 0)

193 i‡(
r
->
code
 < 0)

196 
	`•rötf
(
loˇlbuf
, "%d", 
r
->
code
);

197 (
loˇlbuf
);

198 
	}
}

	@src/common/regerror_i.h

30 #i‚de‡
REGERROR_I_H


31 
	#REGERROR_I_H


	)

33 
	~"w_deföes.h
"

79 c⁄° *
ªg©oi
(c⁄° 
ªgex_t
 *
¥eg
, *
loˇlbuf
);

	@src/common/regex.h

8 #i‚de‡
REGEX_H


9 
	#REGEX_H


	)

11 
	~"w_deföes.h
"

54 
	#ªgexec
 
w_ªgexec


	)

55 
	#ªgcomp
 
w_ªgcomp


	)

56 
	#ªgîr‹
 
w_ªgîr‹


	)

57 
	#ªg‰ì
 
w_ªg‰ì


	)

65 
off_t
 
	tªgoff_t
;

67 
ª_magic
;

68 
size_t
 
ª_nsub
;

69 c⁄° *
ª_ídp
;

70 
ª_guts
 *
ª_g
;

71 } 
	tªgex_t
;

73 
ªgoff_t
 
rm_so
;

74 
ªgoff_t
 
rm_eo
;

75 } 
	tªgm©ch_t
;

79 
ªgcomp
(
ªgex_t
 *, const *, );

80 
	#REG_BASIC
 0000

	)

81 
	#REG_EXTENDED
 0001

	)

82 
	#REG_ICASE
 0002

	)

83 
	#REG_NOSUB
 0004

	)

84 
	#REG_NEWLINE
 0010

	)

85 
	#REG_NOSPEC
 0020

	)

86 
	#REG_PEND
 0040

	)

87 
	#REG_DUMP
 0200

	)

91 
	#REG_OKAY
 0

	)

92 
	#REG_NOMATCH
 1

	)

93 
	#REG_BADPAT
 2

	)

94 
	#REG_ECOLLATE
 3

	)

95 
	#REG_ECTYPE
 4

	)

96 
	#REG_EESCAPE
 5

	)

97 
	#REG_ESUBREG
 6

	)

98 
	#REG_EBRACK
 7

	)

99 
	#REG_EPAREN
 8

	)

100 
	#REG_EBRACE
 9

	)

101 
	#REG_BADBR
 10

	)

102 
	#REG_ERANGE
 11

	)

103 
	#REG_ESPACE
 12

	)

104 
	#REG_BADRPT
 13

	)

105 
	#REG_EMPTY
 14

	)

106 
	#REG_ASSERT
 15

	)

107 
	#REG_INVARG
 16

	)

108 
	#REG_ATOI
 255

	)

109 
	#REG_ITOA
 0400

	)

110 
size_t
 
ªgîr‹
(, c⁄° 
ªgex_t
 *, *, size_t);

114 
ªgexec
(c⁄° 
ªgex_t
 *, c⁄° *, 
size_t
, 
ªgm©ch_t
 [], );

115 
	#REG_NOTBOL
 00001

	)

116 
	#REG_NOTEOL
 00002

	)

117 
	#REG_STARTEND
 00004

	)

118 
	#REG_TRACE
 00400

	)

119 
	#REG_LARGE
 01000

	)

120 
	#REG_BACKR
 02000

	)

124 
ªg‰ì
(
ªgex_t
 *);

	@src/common/regex2.h

8 #i‚de‡
REGEX2_H


9 
	#REGEX2_H


	)

11 
	~"w_deföes.h
"

70 
	#MAGIC1
 ((('r'^0200)<<8Ë| 'e')

	)

91 
	ts›
;

92 
	ts›no
;

93 
	#OPRMASK
 0xf8000000

	)

94 
	#OPDMASK
 0x07ffffff

	)

95 
	#OPSHIFT
 (()27)

	)

96 
	#OP
(
n
Ë(“)&
OPRMASK
)

	)

97 
	#OPND
(
n
Ë(“)&
OPDMASK
)

	)

98 
	#SOP
(
›
, 
›nd
Ë((›)|(›nd))

	)

101 
	#OEND
 (1ul<<
OPSHIFT
Ë

	)

102 
	#OCHAR
 (2ul<<
OPSHIFT
Ë

	)

103 
	#OBOL
 (3ul<<
OPSHIFT
Ë

	)

104 
	#OEOL
 (4ul<<
OPSHIFT
Ë

	)

105 
	#OANY
 (5ul<<
OPSHIFT
Ë

	)

106 
	#OANYOF
 (6ul<<
OPSHIFT
Ë

	)

107 
	#OBACK_
 (7ul<<
OPSHIFT
Ë

	)

108 
	#O_BACK
 (8ul<<
OPSHIFT
Ë

	)

109 
	#OPLUS_
 (9ul<<
OPSHIFT
Ë

	)

110 
	#O_PLUS
 (10ul<<
OPSHIFT
Ë

	)

111 
	#OQUEST_
 (11ul<<
OPSHIFT
Ë

	)

112 
	#O_QUEST
 (12ul<<
OPSHIFT
Ë

	)

113 
	#OLPAREN
 (13ul<<
OPSHIFT
Ë

	)

114 
	#ORPAREN
 (14ul<<
OPSHIFT
Ë

	)

115 
	#OCH_
 (15ul<<
OPSHIFT
Ë

	)

116 
	#OOR1
 (16ul<<
OPSHIFT
Ë

	)

117 
	#OOR2
 (17ul<<
OPSHIFT
Ë

	)

118 
	#O_CH
 (18ul<<
OPSHIFT
Ë

	)

119 
	#OBOW
 (19ul<<
OPSHIFT
Ë

	)

120 
	#OEOW
 (20ul<<
OPSHIFT
Ë

	)

135 
uch
 *
	m±r
;

136 
uch
 
	mmask
;

137 
uch
 
	mhash
;

138 
size_t
 
	msmu…is
;

139 *
	mmu…is
;

140 } 
	tc£t
;

142 
	#CHadd
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] |(cs)->
mask
, (cs)->
hash
 +(c))

	)

143 
	#CHsub
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] &~(cs)->
mask
, (cs)->
hash
 -(c))

	)

144 
	#CHIN
(
cs
, 
c
Ë((cs)->
±r
[(
uch
)(c)] & (cs)->
mask
)

	)

145 
	#MCadd
(
p
, 
cs
, 
˝
Ë
	`mˇdd
’, cs, cpË

	)

146 
	#MCsub
(
p
, 
cs
, 
˝
Ë
	`mcsub
’, cs, cp)

	)

147 
	#MCö
(
p
, 
cs
, 
˝
Ë
	`mcö
’, cs, cp)

	)

150 
	tˇt_t
;

155 
	sª_guts
 {

156 
	mmagic
;

157 
	#MAGIC2
 ((('R'^0200)<<8)|'E')

	)

158 
s›
 *
	m°rù
;

159 
	mc£tsize
;

160 
	mnc£ts
;

161 
c£t
 *
	m£ts
;

162 
uch
 *
	m£tbôs
;

163 
	mcÊags
;

164 
s›no
 
	mn°©es
;

165 
s›no
 
	mfú°°©e
;

166 
s›no
 
	mœ°°©e
;

167 
	miÊags
;

168 
	#USEBOL
 01

	)

169 
	#USEEOL
 02

	)

170 
	#BAD
 04

	)

171 
	mnbﬁ
;

172 
	m√ﬁ
;

173 
	mnˇãg‹õs
;

174 
ˇt_t
 *
	mˇãg‹õs
;

175 *
	mmu°
;

176 
	mmÀn
;

177 
size_t
 
	mnsub
;

178 
	mbackªfs
;

179 
s›no
 
	m≈lus
;

181 
ˇt_t
 
	mˇt•a˚
[1];

185 
	#REGEX_OUT
 (
CHAR_MAX
+1Ë

	)

186 
	#ISWORD
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

	@src/common/regex_cclass.h

8 #i‚de‡
REGEX_CCLASS_H


9 
	#REGEX_CCLASS_H


	)

11 
	~"w_deföes.h
"

54 
	sc˛ass
 {

55 c⁄° *
	m«me
;

56 c⁄° *
	mch¨s
;

57 c⁄° *
	mmu…is
;

58 } 
	gc˛as£s
[] = {

82 {
NULL
, 0, "" }

	@src/common/regex_cname.h

8 #i‚de‡
REGEX_CNAME_H


9 
	#REGEX_CNAME_H


	)

11 
	~"w_deföes.h
"

55 
	s˙ame
 {

56 c⁄° *
	m«me
;

57 
	mcode
;

58 } 
	g˙ames
[] = {

154 { 
NULL
, 0},

	@src/common/regex_engine.cpp

8 
	~"w_deföes.h
"

59 #ifde‡
SNAMES


60 
	#m©chî
 
sm©chî


	)

61 
	#Á°
 
sÁ°


	)

62 
	#¶ow
 
s¶ow


	)

63 
	#dis£˘
 
sdis£˘


	)

64 
	#backªf
 
sbackªf


	)

65 
	#°ï
 
s°ï


	)

66 
	#¥öt
 
•röt


	)

67 
	#©
 
ßt


	)

68 
	#m©ch
 
sm©


	)

70 #ifde‡
LNAMES


71 
	#m©chî
 
lm©chî


	)

72 
	#Á°
 
lÁ°


	)

73 
	#¶ow
 
l¶ow


	)

74 
	#dis£˘
 
ldis£˘


	)

75 
	#backªf
 
lbackªf


	)

76 
	#°ï
 
l°ï


	)

77 
	#¥öt
 
Õröt


	)

78 
	#©
 
œt


	)

79 
	#m©ch
 
lm©


	)

83 
	sm©ch
 {

84 
ª_guts
 *
	mg
;

85 
	meÊags
;

86 
ªgm©ch_t
 *
	mpm©ch
;

87 *
	mofÂ
;

88 *
	mbegöp
;

89 *
	mídp
;

90 *
	mcﬁdp
;

91 **
	mœ°pos
;

92 
	mSTATEVARS
;

93 
°©es
 
	m°
;

94 
°©es
 
	m‰esh
;

95 
°©es
 
	mtmp
;

96 
°©es
 
	mem±y
;

99 
	~"ªgex_ígöe_i.h
"

101 #ifde‡
REDEBUG


102 
	#SP
(
t
, 
s
, 
c
Ë
	`¥öt
(
m
,Å, s, c, 
°dout
)

	)

103 
	#AT
(
t
, 
p1
, 
p2
, 
s1
, 
s2
Ë
	`©
(
m
,Å,Ö1,Ö2, s1, s2)

	)

104 
	#NOTE
(
°r
Ë{ i‡(
m
->
eÊags
&
REG_TRACE
Ë
	`¥ötf
("=%s\n", (°r)); }

	)

106 
	#SP
(
t
, 
s
, 
c
Ë

	)

107 
	#AT
(
t
, 
p1
, 
p2
, 
s1
, 
s2
Ë

	)

108 
	#NOTE
(
s
Ë

	)

117 
	$m©chî
(
ª_guts
 *
g
, *
°rög
, 
size_t
 
nm©ch
, 
ªgm©ch_t
 
pm©ch
[],

118 
eÊags
)

120 *
ídp
;

121 
size_t
 
i
;

122 
m©ch
 
mv
;

123 
m©ch
 *
m
 = &
mv
;

124 *
dp
;

125 c⁄° 
s›no
 
gf
 = 
g
->
fú°°©e
+1;

126 c⁄° 
s›no
 
gl
 = 
g
->
œ°°©e
;

127 *
°¨t
;

128 *
°›
;

131 i‡(
g
->
cÊags
&
REG_NOSUB
)

132 
nm©ch
 = 0;

133 i‡(
eÊags
&
REG_STARTEND
) {

134 
°¨t
 = 
°rög
 + 
pm©ch
[0].
rm_so
;

135 
°›
 = 
°rög
 + 
pm©ch
[0].
rm_eo
;

137 
°¨t
 = 
°rög
;

138 
°›
 = 
°¨t
 + 
	`°æí
(start);

140 i‡(
°›
 < 
°¨t
)

141 (
REG_INVARG
);

144 i‡(
g
->
mu°
 !
NULL
) {

145 
dp
 = 
°¨t
; d∞< 
°›
; dp++)

146 i‡(*
dp
 =
g
->
mu°
[0] && 
°›
 - d∞>g->
mÀn
 &&

147 
	`memcmp
(
dp
, 
g
->
mu°
, (
size_t
)g->
mÀn
) == 0)

149 i‡(
dp
 =
°›
)

150 (
REG_NOMATCH
);

154 
m
->
g
 = g;

155 
m
->
eÊags
 =Éflags;

156 
m
->
pm©ch
 = 
NULL
;

157 
m
->
œ°pos
 = 
NULL
;

158 
m
->
ofÂ
 = 
°rög
;

159 
m
->
begöp
 = 
°¨t
;

160 
m
->
ídp
 = 
°›
;

161 
	`STATESETUP
(
m
, 4);

162 
	`SETUP
(
m
->
°
);

163 
	`SETUP
(
m
->
‰esh
);

164 
	`SETUP
(
m
->
tmp
);

165 
	`SETUP
(
m
->
em±y
);

166 
	`CLEAR
(
m
->
em±y
);

170 
ídp
 = 
	`Á°
(
m
, 
°¨t
, 
°›
, 
gf
, 
gl
);

171 i‡(
ídp
 =
NULL
) {

172 
	`STATETEARDOWN
(
m
);

173 (
REG_NOMATCH
);

175 i‡(
nm©ch
 =0 && !
g
->
backªfs
)

179 
	`ª_as£π
(
m
->
cﬁdp
 !
NULL
);

181 
	`NOTE
("finding start");

182 
ídp
 = 
	`¶ow
(
m
, m->
cﬁdp
, 
°›
, 
gf
, 
gl
);

183 i‡(
ídp
 !
NULL
)

185 
	`ª_as£π
(
m
->
cﬁdp
 < m->
ídp
);

186 
m
->
cﬁdp
++;

188 i‡(
nm©ch
 =1 && !
g
->
backªfs
)

192 i‡(
m
->
pm©ch
 =
NULL
)

193 
m
->
pm©ch
 = (
ªgm©ch_t
 *)
	`mÆloc
((m->
g
->
nsub
 + 1) *

194 (
ªgm©ch_t
));

195 i‡(
m
->
pm©ch
 =
NULL
) {

196 
	`STATETEARDOWN
(
m
);

197 (
REG_ESPACE
);

199 
i
 = 1; i <
m
->
g
->
nsub
; i++)

200 
m
->
pm©ch
[
i
].
rm_so
 = m->pm©ch[i].
rm_eo
 = -1;

201 i‡(!
g
->
backªfs
 && !(
m
->
eÊags
&
REG_BACKR
)) {

202 
	`NOTE
("dissecting");

203 
dp
 = 
	`dis£˘
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
);

205 i‡(
g
->
≈lus
 > 0 && 
m
->
œ°pos
 =
NULL
)

206 
m
->
œ°pos
 = (**)
	`mÆloc
((
g
->
≈lus
+1) *

208 i‡(
g
->
≈lus
 > 0 && 
m
->
œ°pos
 =
NULL
) {

209 
	`‰ì
(
m
->
pm©ch
);

210 
	`STATETEARDOWN
(
m
);

211 (
REG_ESPACE
);

213 
	`NOTE
("backref dissect");

214 
dp
 = 
	`backªf
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
, (
s›no
)0);

216 i‡(
dp
 !
NULL
)

220 
	`ª_as£π
(
g
->
backªfs
);

221 
	`ª_as£π
(
g
->
≈lus
 =0 || 
m
->
œ°pos
 !
NULL
);

223 i‡(
dp
 !
NULL
 || 
ídp
 <
m
->
cﬁdp
)

225 
	`NOTE
("backoff");

226 
ídp
 = 
	`¶ow
(
m
, m->
cﬁdp
,Éndp-1, 
gf
, 
gl
);

227 i‡(
ídp
 =
NULL
)

230 #i‚de‡
NDEBUG


231 
i
 = 1; i <
m
->
g
->
nsub
; i++) {

232 
	`ª_as£π
(
m
->
pm©ch
[
i
].
rm_so
 == -1);

233 
	`ª_as£π
(
m
->
pm©ch
[
i
].
rm_eo
 == -1);

236 
	`NOTE
("backoff dissect");

237 
dp
 = 
	`backªf
(
m
, m->
cﬁdp
, 
ídp
, 
gf
, 
gl
, (
s›no
)0);

239 
	`ª_as£π
(
dp
 =
NULL
 || d∞=
ídp
);

240 i‡(
dp
 !
NULL
)

244 
	`NOTE
("falseálarm");

245 
°¨t
 = 
m
->
cﬁdp
 + 1;

246 
	`ª_as£π
(
°¨t
 <
°›
);

250 i‡(
nm©ch
 > 0) {

251 
pm©ch
[0].
rm_so
 = 
m
->
cﬁdp
 - m->
ofÂ
;

252 
pm©ch
[0].
rm_eo
 = 
ídp
 - 
m
->
ofÂ
;

254 i‡(
nm©ch
 > 1) {

255 
	`ª_as£π
(
m
->
pm©ch
 !
NULL
);

256 
i
 = 1; i < 
nm©ch
; i++)

257 i‡(
i
 <
m
->
g
->
nsub
)

258 
pm©ch
[
i
] = 
m
->pmatch[i];

260 
pm©ch
[
i
].
rm_so
 = -1;

261 
pm©ch
[
i
].
rm_eo
 = -1;

265 i‡(
m
->
pm©ch
 !
NULL
)

266 
	`‰ì
((*)
m
->
pm©ch
);

267 i‡(
m
->
œ°pos
 !
NULL
)

268 
	`‰ì
((*)
m
->
œ°pos
);

269 
	`STATETEARDOWN
(
m
);

271 
	}
}

279 
	$dis£˘
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
)

281 
i
;

282 
s›no
 
ss
;

283 
s›no
 
es
;

284 *
•
;

285 *
°p
;

286 *
ª°
;

287 *
èû
;

288 
s›no
 
ssub
;

289 
s›no
 
esub
;

290 *
s•
;

291 *
£p
;

292 *
ﬁds•
;

293 * 
MAYBE_UNUSED
 
dp
;

295 
	`AT
("diss", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

296 
•
 = 
°¨t
;

297 
ss
 = 
°¨t°
; s†< 
°›°
; s†
es
) {

299 
es
 = 
ss
;

300 
	`OP
(
m
->
g
->
°rù
[
es
])) {

301 
OPLUS_
:

302 
OQUEST_
:

303 
es
 +
	`OPND
(
m
->
g
->
°rù
[es]);

305 
OCH_
:

306 
	`OP
(
m
->
g
->
°rù
[
es
]Ë!
O_CH
)

307 
es
 +
	`OPND
(
m
->
g
->
°rù
[es]);

310 
es
++;

313 
	`OP
(
m
->
g
->
°rù
[
ss
])) {

314 
OEND
:

315 
	`ª_as£π
(
n›e
);

317 
OCHAR
:

318 
•
++;

320 
OBOL
:

321 
OEOL
:

322 
OBOW
:

323 
OEOW
:

325 
OANY
:

326 
OANYOF
:

327 
•
++;

329 
OBACK_
:

330 
O_BACK
:

331 
	`ª_as£π
(
n›e
);

334 
OQUEST_
:

335 
°p
 = 
°›
;

338 
ª°
 = 
	`¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

339 
	`ª_as£π
(
ª°
 !
NULL
);

341 
èû
 = 
	`¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

342 i‡(
èû
 =
°›
)

345 
°p
 = 
ª°
 - 1;

346 
	`ª_as£π
(
°p
 >
•
);

348 
ssub
 = 
ss
 + 1;

349 
esub
 = 
es
 - 1;

351 i‡(
	`¶ow
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
Ë!
NULL
) {

352 
dp
 = 
	`dis£˘
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
);

353 
	`ª_as£π
(
dp
 =
ª°
);

355 
	`ª_as£π
(
•
 =
ª°
);

356 
•
 = 
ª°
;

358 
OPLUS_
:

359 
°p
 = 
°›
;

362 
ª°
 = 
	`¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

363 
	`ª_as£π
(
ª°
 !
NULL
);

365 
èû
 = 
	`¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

366 i‡(
èû
 =
°›
)

369 
°p
 = 
ª°
 - 1;

370 
	`ª_as£π
(
°p
 >
•
);

372 
ssub
 = 
ss
 + 1;

373 
esub
 = 
es
 - 1;

374 
s•
 = 
•
;

375 
ﬁds•
 = 
s•
;

377 
£p
 = 
	`¶ow
(
m
, 
s•
, 
ª°
, 
ssub
, 
esub
);

378 i‡(
£p
 =
NULL
 || sï =
s•
)

380 
ﬁds•
 = 
s•
;

381 
s•
 = 
£p
;

383 i‡(
£p
 =
NULL
) {

385 
£p
 = 
s•
;

386 
s•
 = 
ﬁds•
;

388 
	`ª_as£π
(
£p
 =
ª°
);

389 
	`ª_as£π
(
	`¶ow
(
m
, 
s•
, 
£p
, 
ssub
, 
esub
Ë=
ª°
);

390 
dp
 = 
	`dis£˘
(
m
, 
s•
, 
£p
, 
ssub
, 
esub
);

391 
	`ª_as£π
(
dp
 =
£p
);

392 
•
 = 
ª°
;

394 
OCH_
:

395 
°p
 = 
°›
;

398 
ª°
 = 
	`¶ow
(
m
, 
•
, 
°p
, 
ss
, 
es
);

399 
	`ª_as£π
(
ª°
 !
NULL
);

401 
èû
 = 
	`¶ow
(
m
, 
ª°
, 
°›
, 
es
, 
°›°
);

402 i‡(
èû
 =
°›
)

405 
°p
 = 
ª°
 - 1;

406 
	`ª_as£π
(
°p
 >
•
);

408 
ssub
 = 
ss
 + 1;

409 
esub
 = 
ss
 + 
	`OPND
(
m
->
g
->
°rù
[ss]) - 1;

410 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

412 i‡(
	`¶ow
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
) ==Ñest)

415 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

416 
esub
++;

417 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
);

418 
ssub
 = 
esub
 + 1;

419 
esub
 +
	`OPND
(
m
->
g
->
°rù
[esub]);

420 i‡(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
)

421 
esub
--;

423 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
);

425 
dp
 = 
	`dis£˘
(
m
, 
•
, 
ª°
, 
ssub
, 
esub
);

426 
	`ª_as£π
(
dp
 =
ª°
);

427 
•
 = 
ª°
;

429 
O_PLUS
:

430 
O_QUEST
:

431 
OOR1
:

432 
OOR2
:

433 
O_CH
:

434 
	`ª_as£π
(
n›e
);

436 
OLPAREN
:

437 
i
 = 
	`OPND
(
m
->
g
->
°rù
[
ss
]);

438 
	`ª_as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

439 
m
->
pm©ch
[
i
].
rm_so
 = 
•
 - m->
ofÂ
;

441 
ORPAREN
:

442 
i
 = 
	`OPND
(
m
->
g
->
°rù
[
ss
]);

443 
	`ª_as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

444 
m
->
pm©ch
[
i
].
rm_eo
 = 
•
 - m->
ofÂ
;

447 
	`ª_as£π
(
n›e
);

452 
	`ª_as£π
(
•
 =
°›
);

453 (
•
);

454 
	}
}

462 
	$backªf
(
m©ch
 *
m
, *
°¨t
, *
°›
,

463 
s›no
 
°¨t°
, s›nÿ
°›°
, s›nÿ
Àv
)

465 
i
;

466 
s›no
 
ss
;

467 *
•
;

468 
s›no
 
ssub
;

469 
s›no
 
esub
;

470 *
s•
;

471 *
dp
;

472 
size_t
 
Àn
;

473 
h¨d
;

474 
s›
 
s
;

475 
ªgoff_t
 
offßve
;

476 
c£t
 *
cs
;

478 
	`AT
("back", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

479 
•
 = 
°¨t
;

482 
h¨d
 = 0;

483 
ss
 = 
°¨t°
; !
h¨d
 && s†< 
°›°
; ss++)

484 
	`OP
(
s
 = 
m
->
g
->
°rù
[
ss
])) {

485 
OCHAR
:

486 i‡(
•
 =
°›
 || *•++ !()
	`OPND
(
s
))

487 (
NULL
);

489 
OANY
:

490 i‡(
•
 =
°›
)

491 (
NULL
);

492 
•
++;

494 
OANYOF
:

495 
cs
 = &
m
->
g
->
£ts
[
	`OPND
(
s
)];

496 i‡(
•
 =
°›
 || !
	`CHIN
(
cs
, *sp++))

497 (
NULL
);

499 
OBOL
:

500 i‡–(
•
 =
m
->
begöp
 && !(m->
eÊags
&
REG_NOTBOL
)) ||

501 (
•
 < 
m
->
ídp
 && *(sp-1) == '\n' &&

502 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) )

505 (
NULL
);

507 
OEOL
:

508 i‡–(
•
 =
m
->
ídp
 && !(m->
eÊags
&
REG_NOTEOL
)) ||

509 (
•
 < 
m
->
ídp
 && *sp == '\n' &&

510 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) )

513 (
NULL
);

515 
OBOW
:

516 i‡(–(
•
 =
m
->
begöp
 && !(m->
eÊags
&
REG_NOTBOL
)) ||

517 (
•
 < 
m
->
ídp
 && *(sp-1) == '\n' &&

518 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) ||

519 (
•
 > 
m
->
begöp
 &&

520 !
	`ISWORD
(*(
•
-1))) ) &&

521 (
•
 < 
m
->
ídp
 && 
	`ISWORD
(*sp)) )

524 (
NULL
);

526 
OEOW
:

527 i‡(–(
•
 =
m
->
ídp
 && !(m->
eÊags
&
REG_NOTEOL
)) ||

528 (
•
 < 
m
->
ídp
 && *sp == '\n' &&

529 (
m
->
g
->
cÊags
&
REG_NEWLINE
)) ||

530 (
•
 < 
m
->
ídp
 && !
	`ISWORD
(*sp)) ) &&

531 (
•
 > 
m
->
begöp
 && 
	`ISWORD
(*(sp-1))) )

534 (
NULL
);

536 
O_QUEST
:

538 
OOR1
:

539 
ss
++;

540 
s
 = 
m
->
g
->
°rù
[
ss
];

542 
	`ª_as£π
(
	`OP
(
s
Ë=
OOR2
);

543 
ss
 +
	`OPND
(
s
);

544 } 
	`OP
(
s
 = 
m
->
g
->
°rù
[
ss
]Ë!
O_CH
);

548 
h¨d
 = 1;

551 i‡(!
h¨d
) {

552 i‡(
•
 !
°›
)

553 (
NULL
);

554 (
•
);

556 
ss
--;

559 
	`AT
("h¨d", 
•
, 
°›
, 
ss
, 
°›°
);

560 
s
 = 
m
->
g
->
°rù
[
ss
];

561 
	`OP
(
s
)) {

562 
OBACK_
:

563 
i
 = 
	`OPND
(
s
);

564 
	`ª_as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

565 i‡(
m
->
pm©ch
[
i
].
rm_eo
 == -1)

566 (
NULL
);

567 
	`ª_as£π
(
m
->
pm©ch
[
i
].
rm_so
 != -1);

568 
Àn
 = 
m
->
pm©ch
[
i
].
rm_eo
 - m->pm©ch[i].
rm_so
;

569 
	`ª_as£π
(
°›
 - 
m
->
begöp
 >
Àn
);

570 i‡(
•
 > 
°›
 - 
Àn
)

571 (
NULL
);

572 
s•
 = 
m
->
ofÂ
 + m->
pm©ch
[
i
].
rm_so
;

573 i‡(
	`memcmp
(
•
, 
s•
, 
Àn
) != 0)

574 (
NULL
);

575 
m
->
g
->
°rù
[
ss
] !
	`SOP
(
O_BACK
, 
i
))

576 
ss
++;

577 (
	`backªf
(
m
, 
•
+
Àn
, 
°›
, 
ss
+1, 
°›°
, 
Àv
));

579 
OQUEST_
:

580 
dp
 = 
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

581 i‡(
dp
 !
NULL
)

582 (
dp
);

583 (
	`backªf
(
m
, 
•
, 
°›
, 
ss
+
	`OPND
(
s
)+1, 
°›°
, 
Àv
));

585 
OPLUS_
:

586 
	`ª_as£π
(
m
->
œ°pos
 !
NULL
);

587 
	`ª_as£π
(
Àv
+1 <
m
->
g
->
≈lus
);

588 
m
->
œ°pos
[
Àv
+1] = 
•
;

589 (
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
+1));

591 
O_PLUS
:

592 i‡(
•
 =
m
->
œ°pos
[
Àv
])

593 (
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
-1));

595 
m
->
œ°pos
[
Àv
] = 
•
;

596 
dp
 = 
	`backªf
(
m
, 
•
, 
°›
, 
ss
-
	`OPND
(
s
)+1, 
°›°
, 
Àv
);

597 i‡(
dp
 =
NULL
)

598 (
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
-1));

600 (
dp
);

602 
OCH_
:

603 
ssub
 = 
ss
 + 1;

604 
esub
 = 
ss
 + 
	`OPND
(
s
) - 1;

605 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR1
);

607 
dp
 = 
	`backªf
(
m
, 
•
, 
°›
, 
ssub
, 
esub
, 
Àv
);

608 i‡(
dp
 !
NULL
)

609 (
dp
);

611 i‡(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
)

612 (
NULL
);

613 
esub
++;

614 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
);

615 
ssub
 = 
esub
 + 1;

616 
esub
 +
	`OPND
(
m
->
g
->
°rù
[esub]);

617 i‡(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
OOR2
)

618 
esub
--;

620 
	`ª_as£π
(
	`OP
(
m
->
g
->
°rù
[
esub
]Ë=
O_CH
);

623 
OLPAREN
:

624 
i
 = 
	`OPND
(
s
);

625 
	`ª_as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

626 
offßve
 = 
m
->
pm©ch
[
i
].
rm_so
;

627 
m
->
pm©ch
[
i
].
rm_so
 = 
•
 - m->
ofÂ
;

628 
dp
 = 
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

629 i‡(
dp
 !
NULL
)

630 (
dp
);

631 
m
->
pm©ch
[
i
].
rm_so
 = 
offßve
;

632 (
NULL
);

634 
ORPAREN
:

635 
i
 = 
	`OPND
(
s
);

636 
	`ª_as£π
(0 < 
i
 && i <
m
->
g
->
nsub
);

637 
offßve
 = 
m
->
pm©ch
[
i
].
rm_eo
;

638 
m
->
pm©ch
[
i
].
rm_eo
 = 
•
 - m->
ofÂ
;

639 
dp
 = 
	`backªf
(
m
, 
•
, 
°›
, 
ss
+1, 
°›°
, 
Àv
);

640 i‡(
dp
 !
NULL
)

641 (
dp
);

642 
m
->
pm©ch
[
i
].
rm_eo
 = 
offßve
;

643 (
NULL
);

646 
	`ª_as£π
(
n›e
);

651 
	`ª_as£π
(
n›e
);

653  
NULL
;

654 
	}
}

662 
	$Á°
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
)

664 
°©es
 
°
 = 
m
->st;

665 
°©es
 
‰esh
 = 
m
->fresh;

666 
°©es
 
tmp
 = 
m
->tmp;

667 *
p
 = 
°¨t
;

668 
c
 = (
°¨t
 =
m
->
begöp
Ë? 
REGEX_OUT
 : *(start-1);

669 
œ°c
;

670 
Êagch
;

671 
i
;

672 *
cﬁdp
;

674 
	`CLEAR
(
°
);

675 
	`SET1
(
°
, 
°¨t°
);

676 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
NOTHING
, st);

677 
	`ASSIGN
(
‰esh
, 
°
);

678 
	`SP
("°¨t", 
°
, *
p
);

679 
cﬁdp
 = 
NULL
;

682 
œ°c
 = 
c
;

683 
c
 = (
p
 =
m
->
ídp
Ë? 
REGEX_OUT
 : *p;

684 i‡(
	`EQ
(
°
, 
‰esh
))

685 
cﬁdp
 = 
p
;

688 
Êagch
 = '\0';

689 
i
 = 0;

690 i‡–(
œ°c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

691 (
œ°c
 =
REGEX_OUT
 && !(
m
->
eÊags
&
REG_NOTBOL
)) ) {

692 
Êagch
 = 
BOL
;

693 
i
 = 
m
->
g
->
nbﬁ
;

695 i‡–(
c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

696 (
c
 =
REGEX_OUT
 && !(
m
->
eÊags
&
REG_NOTEOL
)) ) {

697 
Êagch
 = (Êagch =
BOL
Ë? 
BOLEOL
 : 
EOL
;

698 
i
 +
m
->
g
->
√ﬁ
;

700 i‡(
i
 != 0) {

701 ; 
i
 > 0; i--)

702 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

703 
	`SP
("bﬁeﬁ", 
°
, 
c
);

707 i‡–(
Êagch
 =
BOL
 || (
œ°c
 !
REGEX_OUT
 && !
	`ISWORD
(lastc))) &&

708 (
c
 !
REGEX_OUT
 && 
	`ISWORD
(c)) ) {

709 
Êagch
 = 
BOW
;

711 i‡–(
œ°c
 !
REGEX_OUT
 && 
	`ISWORD
(lastc)) &&

712 (
Êagch
 =
EOL
 || (
c
 !
REGEX_OUT
 && !
	`ISWORD
(c))) ) {

713 
Êagch
 = 
EOW
;

715 i‡(
Êagch
 =
BOW
 || fœgch =
EOW
) {

716 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

717 
	`SP
("boweow", 
°
, 
c
);

721 i‡(
	`ISSET
(
°
, 
°›°
Ë|| 
p
 =
°›
)

725 
	`ASSIGN
(
tmp
, 
°
);

726 
	`ASSIGN
(
°
, 
‰esh
);

727 
	`ª_as£π
(
c
 !
REGEX_OUT
);

728 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
tmp
, 
c
, st);

729 
	`SP
("a·", 
°
, 
c
);

730 
	`ª_as£π
(
	`EQ
(
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
°
, 
NOTHING
, st), st));

731 
p
++;

734 
	`ª_as£π
(
cﬁdp
 !
NULL
);

735 
m
->
cﬁdp
 = coldp;

736 i‡(
	`ISSET
(
°
, 
°›°
))

737 (
p
+1);

739 (
NULL
);

740 
	}
}

748 
	$¶ow
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
)

750 
°©es
 
°
 = 
m
->st;

751 
°©es
 
em±y
 = 
m
->empty;

752 
°©es
 
tmp
 = 
m
->tmp;

753 *
p
 = 
°¨t
;

754 
c
 = (
°¨t
 =
m
->
begöp
Ë? 
REGEX_OUT
 : *(start-1);

755 
œ°c
;

756 
Êagch
;

757 
i
;

758 *
m©chp
;

760 
	`AT
("¶ow", 
°¨t
, 
°›
, 
°¨t°
, 
°›°
);

761 
	`CLEAR
(
°
);

762 
	`SET1
(
°
, 
°¨t°
);

763 
	`SP
("s°¨t", 
°
, *
p
);

764 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
NOTHING
, st);

765 
m©chp
 = 
NULL
;

768 
œ°c
 = 
c
;

769 
c
 = (
p
 =
m
->
ídp
Ë? 
REGEX_OUT
 : *p;

772 
Êagch
 = '\0';

773 
i
 = 0;

774 i‡–(
œ°c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

775 (
œ°c
 =
REGEX_OUT
 && !(
m
->
eÊags
&
REG_NOTBOL
)) ) {

776 
Êagch
 = 
BOL
;

777 
i
 = 
m
->
g
->
nbﬁ
;

779 i‡–(
c
 ='\n' && 
m
->
g
->
cÊags
&
REG_NEWLINE
) ||

780 (
c
 =
REGEX_OUT
 && !(
m
->
eÊags
&
REG_NOTEOL
)) ) {

781 
Êagch
 = (Êagch =
BOL
Ë? 
BOLEOL
 : 
EOL
;

782 
i
 +
m
->
g
->
√ﬁ
;

784 i‡(
i
 != 0) {

785 ; 
i
 > 0; i--)

786 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

787 
	`SP
("sbﬁeﬁ", 
°
, 
c
);

791 i‡–(
Êagch
 =
BOL
 || (
œ°c
 !
REGEX_OUT
 && !
	`ISWORD
(lastc))) &&

792 (
c
 !
REGEX_OUT
 && 
	`ISWORD
(c)) ) {

793 
Êagch
 = 
BOW
;

795 i‡–(
œ°c
 !
REGEX_OUT
 && 
	`ISWORD
(lastc)) &&

796 (
Êagch
 =
EOL
 || (
c
 !
REGEX_OUT
 && !
	`ISWORD
(c))) ) {

797 
Êagch
 = 
EOW
;

799 i‡(
Êagch
 =
BOW
 || fœgch =
EOW
) {

800 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, st, 
Êagch
, st);

801 
	`SP
("sboweow", 
°
, 
c
);

805 i‡(
	`ISSET
(
°
, 
°›°
))

806 
m©chp
 = 
p
;

807 i‡(
	`EQ
(
°
, 
em±y
Ë|| 
p
 =
°›
)

811 
	`ASSIGN
(
tmp
, 
°
);

812 
	`ASSIGN
(
°
, 
em±y
);

813 
	`ª_as£π
(
c
 !
REGEX_OUT
);

814 
°
 = 
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
tmp
, 
c
, st);

815 
	`SP
("ß·", 
°
, 
c
);

816 
	`ª_as£π
(
	`EQ
(
	`°ï
(
m
->
g
, 
°¨t°
, 
°›°
, 
°
, 
NOTHING
, st), st));

817 
p
++;

820 (
m©chp
);

821 
	}
}

838 
°©es


839 
	$°ï
(
ª_guts
 *
g
, 
s›no
 
°¨t
, s›nÿ
°›
, 
°©es
 
bef
, 
ch
, sèã†
a·
)

841 
c£t
 *
cs
;

842 
s›
 
s
;

843 
s›no
 
pc
;

844 
⁄e°©e
 
hîe
;

845 
s›no
 
look
;

846 
i
;

848 
pc
 = 
°¨t
, 
	`INIT
(
hîe
,Öc);Ö¯!
°›
;Öc++, 
	`INC
(here)) {

849 
s
 = 
g
->
°rù
[
pc
];

850 
	`OP
(
s
)) {

851 
OEND
:

852 
	`ª_as£π
(
pc
 =
°›
-1);

854 
OCHAR
:

856 
	`ª_as£π
(!
	`NONCHAR
(
ch
Ë|| ch !()
	`OPND
(
s
));

857 i‡(
ch
 =()
	`OPND
(
s
))

858 
	`FWD
(
a·
, 
bef
, 1);

860 
OBOL
:

861 i‡(
ch
 =
BOL
 || ch =
BOLEOL
)

862 
	`FWD
(
a·
, 
bef
, 1);

864 
OEOL
:

865 i‡(
ch
 =
EOL
 || ch =
BOLEOL
)

866 
	`FWD
(
a·
, 
bef
, 1);

868 
OBOW
:

869 i‡(
ch
 =
BOW
)

870 
	`FWD
(
a·
, 
bef
, 1);

872 
OEOW
:

873 i‡(
ch
 =
EOW
)

874 
	`FWD
(
a·
, 
bef
, 1);

876 
OANY
:

877 i‡(!
	`NONCHAR
(
ch
))

878 
	`FWD
(
a·
, 
bef
, 1);

880 
OANYOF
:

881 
cs
 = &
g
->
£ts
[
	`OPND
(
s
)];

882 i‡(!
	`NONCHAR
(
ch
Ë&& 
	`CHIN
(
cs
, ch))

883 
	`FWD
(
a·
, 
bef
, 1);

885 
OBACK_
:

886 
O_BACK
:

887 
	`FWD
(
a·
,áft, 1);

889 
OPLUS_
:

890 
	`FWD
(
a·
,áft, 1);

892 
O_PLUS
:

893 
	`FWD
(
a·
,áft, 1);

894 
i
 = 
	`ISSETBACK
(
a·
, 
	`OPND
(
s
));

895 
	`BACK
(
a·
,á·, 
	`OPND
(
s
));

896 i‡(!
i
 && 
	`ISSETBACK
(
a·
, 
	`OPND
(
s
))) {

898 
pc
 -
	`OPND
(
s
) + 1;

899 
	`INIT
(
hîe
, 
pc
);

902 
OQUEST_
:

903 
	`FWD
(
a·
,áft, 1);

904 
	`FWD
(
a·
,á·, 
	`OPND
(
s
));

906 
O_QUEST
:

907 
	`FWD
(
a·
,áft, 1);

909 
OLPAREN
:

910 
ORPAREN
:

911 
	`FWD
(
a·
,áft, 1);

913 
OCH_
:

914 
	`FWD
(
a·
,áft, 1);

915 
	`ª_as£π
(
	`OP
(
g
->
°rù
[
pc
+
	`OPND
(
s
)]Ë=
OOR2
);

916 
	`FWD
(
a·
,á·, 
	`OPND
(
s
));

918 
OOR1
:

919 i‡(
	`ISSTATEIN
(
a·
, 
hîe
)) {

920 
look
 = 1;

921 
	`OP
(
s
 = 
g
->
°rù
[
pc
+
look
]Ë!
O_CH
;

922 
look
 +
	`OPND
(
s
))

923 
	`ª_as£π
(
	`OP
(
s
Ë=
OOR2
);

924 
	`FWD
(
a·
,á·, 
look
);

927 
OOR2
:

928 
	`FWD
(
a·
,áft, 1);

929 i‡(
	`OP
(
g
->
°rù
[
pc
+
	`OPND
(
s
)]Ë!
O_CH
) {

930 
	`ª_as£π
(
	`OP
(
g
->
°rù
[
pc
+
	`OPND
(
s
)]Ë=
OOR2
);

931 
	`FWD
(
a·
,á·, 
	`OPND
(
s
));

934 
O_CH
:

935 
	`FWD
(
a·
,áft, 1);

938 
	`ª_as£π
(
n›e
);

943 (
a·
);

944 
	}
}

946 #ifde‡
REDEBUG


955 
	$¥öt
(
m©ch
 *
m
, *
ˇ±i⁄
, 
°©es
 
°
, 
ch
, 
FILE
 *
d
)

957 
ª_guts
 *
g
 = 
m
->g;

958 
i
;

959 
fú°
 = 1;

961 i‡(!(
m
->
eÊags
&
REG_TRACE
))

964 
	`Ârötf
(
d
, "%s", 
ˇ±i⁄
);

965 i‡(
ch
 != '\0')

966 
	`Ârötf
(
d
, " %s", 
	`pch¨
(
ch
));

967 
i
 = 0; i < 
g
->
n°©es
; i++)

968 i‡(
	`ISSET
(
°
, 
i
)) {

969 
	`Ârötf
(
d
, "%s%d", (
fú°
Ë? "\t" : ", ", 
i
);

970 
fú°
 = 0;

972 
	`Ârötf
(
d
, "\n");

973 
	}
}

983 
	$©
(
m©ch
 *
m
, *
tôÀ
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
)

985 i‡(!(
m
->
eÊags
&
REG_TRACE
))

988 
	`¥ötf
("%†%s-", 
tôÀ
, 
	`pch¨
(*
°¨t
));

989 
	`¥ötf
("%†", 
	`pch¨
(*
°›
));

990 
	`¥ötf
("%ld-%ld\n", ()
°¨t°
, ()
°›°
);

991 
	}
}

993 #i‚de‡
PCHARDONE


994 
	#PCHARDONE


	)

1007 
	$pch¨
(
ch
)

1009 
pbuf
[10];

1011 i‡(
	`i•röt
(
ch
) || ch == ' ')

1012 
	`•rötf
(
pbuf
, "%c", 
ch
);

1014 
	`•rötf
(
pbuf
, "\\%o", 
ch
);

1015 (
pbuf
);

1016 
	}
}

1020 #unde‡
m©chî


1021 #unde‡
Á°


1022 #unde‡
¶ow


1023 #unde‡
dis£˘


1024 #unde‡
backªf


1025 #unde‡
°ï


1026 #unde‡
¥öt


1027 #unde‡
©


1028 #unde‡
m©ch


	@src/common/regex_engine_i.h

8 
	~"w_deföes.h
"

54 
m©chî
(
ª_guts
 *
g
, *
°rög
, 
size_t
 
nm©ch
, 
ªgm©ch_t
 
pm©ch
[], 
eÊags
);

55 *
dis£˘
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
);

56 *
backªf
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
, s›nÿ
Àv
);

57 *
Á°
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
);

58 *
¶ow
(
m©ch
 *
m
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
);

59 
°©es
 
°ï
(
ª_guts
 *
g
, 
s›no
 
°¨t
, s›nÿ
°›
, °©e†
bef
, 
ch
, °©e†
a·
);

60 
	#BOL
 (
REGEX_OUT
+1)

	)

61 
	#EOL
 (
BOL
+1)

	)

62 
	#BOLEOL
 (
BOL
+2)

	)

63 
	#NOTHING
 (
BOL
+3)

	)

64 
	#BOW
 (
BOL
+4)

	)

65 
	#EOW
 (
BOL
+5)

	)

66 
	#CODEMAX
 (
BOL
+5Ë

	)

67 
	#NONCHAR
(
c
Ë((cË> 
CHAR_MAX
)

	)

68 
	#NNONCHAR
 (
CODEMAX
-
CHAR_MAX
)

	)

69 #ifde‡
REDEBUG


70 
¥öt
(
m©ch
 *
m
, *
ˇ±i⁄
, 
°©es
 
°
, 
ch
, 
FILE
 *
d
);

72 #ifde‡
REDEBUG


73 
©
(
m©ch
 *
m
, *
tôÀ
, *
°¨t
, *
°›
, 
s›no
 
°¨t°
, s›nÿ
°›°
);

75 #ifde‡
REDEBUG


76 *
pch¨
(
ch
);

	@src/common/regex_posix.cpp

8 
	~"w_deföes.h
"

17 
	~<c°ddef
>

18 
	~<w_ba£.h
>

19 
	~"ªgex_posix.h
"

21 
ªgex_t
 
	gª_posix_ª
;

22 
boﬁ
 
	gª_ªady
 = 
Ál£
;

23 
	gª_îr‹_°r
[200] = { '\0' };

26 
	$ª_comp_posix
(c⁄° * 
∑âîn
)

30 i‡(
ª_ªady
) {

31 
	`ªg‰ì
(&
ª_posix_ª
);

33 
Êags
 = 
REG_NOSUB
;

35 
ªs
 = 
	`ªgcomp
(&
ª_posix_ª
, 
∑âîn
, 
Êags
);

36 i‡(
ªs
 != 0) {

37 (Ë
	`ªgîr‹
(
ªs
, &
ª_posix_ª
, 
ª_îr‹_°r
, (re_error_str));

38 #ifde‡
DEBUG_REGEX_POSIX


39 
˚º
 << "ª_comp_posix:Éº‹ = " << 
ª_îr‹_°r
 <<
ídl
;

42  
ª_îr‹_°r
;

45 
ª_ªady
 = 
åue
;

46  
NULL
;

47 
	}
}

50 
	$ª_exec_posix
(c⁄° * 
°rög
)

52 
°©us
;

54 if(!
ª_ªady
) {

58 
°©us
 = 
	`ªgexec
(&
ª_posix_ª
, 
°rög
, (
size_t
)0, 
NULL
, 0);

59 i‡(
°©us
 != 0) {

60 (Ë
	`ªgîr‹
(
°©us
, &
ª_posix_ª
,

61 
ª_îr‹_°r
, (re_error_str));

62 #ifde‡
DEBUG_REGEX_POSIX


63 
˚º
 << "ª_exec_posix:Éº‹ = " << 
ª_îr‹_°r
 <<
ídl
;

64 
˚º
 << "ª_exec_posix: såög = " << 
°rög
 <<
ídl
;

66 
	`ªg‰ì
(&
ª_posix_ª
);

67 
ª_ªady
 = 
Ál£
;

70 
	`w_as£π9
 (
°©us
 == 0);

72 
	}
}

	@src/common/regex_posix.h

8 #i‚de‡
REGEX_POSIX_H


9 
	#REGEX_POSIX_H


	)

11 
	~"w_deföes.h
"

20 
	#_INCLUDE_XOPEN_SOURCE


	)

21 
	~"ªgex.h
"

23 
	~<ˇs£π
>

25 
	#ª_comp
 
ª_comp_posix


	)

26 
	#ª_exec
 
ª_exec_posix


	)

29 * 
ª_comp_posix
(c⁄° * 
∑âîn
);

30 
ª_exec_posix
(c⁄° * 
°rög
);

	@src/common/regex_utils.h

8 #i‚de‡
REGEX_UTILS_H


9 
	#REGEX_UTILS_H


	)

11 
	~"w_deföes.h
"

55 #ifde‡
_POSIX2_RE_DUP_MAX


56 
	#DUPMAX
 
_POSIX2_RE_DUP_MAX


	)

58 
	#DUPMAX
 255

	)

60 
	#REGEX_INFINITY
 (
DUPMAX
 + 1)

	)

61 
	#NC
 (
CHAR_MAX
 - 
CHAR_MIN
 + 1)

	)

62 
	tuch
;

65 #i‚de‡
REDEBUG


66 
	#ª_as£π
(
EX
Ëdÿ{ } 0)

	)

74 
	~<ˇs£π
>

75 
	#ª_as£π
(
EX
Ë
	`as£π
(EX)

	)

79 #ifde‡
USEBCOPY


80 
	#memmove
(
d
, 
s
, 
c
Ë
	`bc›y
(s, d, c)

	)

	@src/common/regexec.cpp

8 
	~"w_deföes.h
"

59 
	~<os_ty≥s.h
>

60 
	~<c°dio
>

61 
	~<c°dlib
>

62 
	~<c°rög
>

63 
	~<˛imôs
>

64 
	~<c˘y≥
>

65 
	~<ªgex.h
>

67 
	~"ªgex_utûs.h
"

68 
	~"ªgex2.h
"

70 
w_f‹˚_sh‹e_ªgîr‹
;

71 
	gw_f‹˚_sh‹e_ªgexec
;

72 &
	g_w_f‹˚_sh‹e_ªgexec
=
w_f‹˚_sh‹e_ªgîr‹
;

75 
	#°©es
 

	)

76 
	#°©es1
 
°©es


	)

77 
	#CLEAR
(
v
Ë((vË0)

	)

78 
	#SET0
(
v
, 
n
Ë((vË&~(1u»<< (n)))

	)

79 
	#SET1
(
v
, 
n
Ë((vË|1u»<< (n))

	)

80 
	#ISSET
(
v
, 
n
Ë((vË& (1u»<< (n)))

	)

81 
	#ASSIGN
(
d
, 
s
Ë((dË(s))

	)

82 
	#EQ
(
a
, 
b
Ë(◊Ë=(b))

	)

83 
	#STATEVARS
 
dummy


	)

84 
	#STATESETUP
(
m
, 
n
Ë

	)

85 
	#STATETEARDOWN
(
m
Ë

	)

86 
	#SETUP
(
v
Ë((vË0)

	)

87 
	#⁄e°©e
 

	)

88 
	#INIT
(
o
, 
n
Ë((oË()1 << (n))

	)

89 
	#INC
(
o
Ë((oË<<1)

	)

90 
	#ISSTATEIN
(
v
, 
o
Ë((vË& (o))

	)

93 
	#FWD
(
d°
, 
§c
, 
n
Ë((d°Ë|(()(§c)&(
hîe
)Ë<< (n))

	)

94 
	#BACK
(
d°
, 
§c
, 
n
Ë((d°Ë|(()(§c)&(
hîe
)Ë>> (n))

	)

95 
	#ISSETBACK
(
v
, 
n
Ë((vË& (()
hîe
 >> (n)))

	)

97 
	#SNAMES


	)

99 
	~"ªgex_ígöe.˝p
"

102 #unde‡
°©es


103 #unde‡
CLEAR


104 #unde‡
SET0


105 #unde‡
SET1


106 #unde‡
ISSET


107 #unde‡
ASSIGN


108 #unde‡
EQ


109 #unde‡
STATEVARS


110 #unde‡
STATESETUP


111 #unde‡
STATETEARDOWN


112 #unde‡
SETUP


113 #unde‡
⁄e°©e


114 #unde‡
INIT


115 #unde‡
INC


116 #unde‡
ISSTATEIN


117 #unde‡
FWD


118 #unde‡
BACK


119 #unde‡
ISSETBACK


120 #unde‡
SNAMES


123 
	#°©es
 *

	)

124 
	#CLEAR
(
v
Ë
	`mem£t
(v, 0, 
m
->
g
->
n°©es
)

	)

125 
	#SET0
(
v
, 
n
Ë((v)[n] = 0)

	)

126 
	#SET1
(
v
, 
n
Ë((v)[n] = 1)

	)

127 
	#ISSET
(
v
, 
n
Ë((v)[n])

	)

128 
	#ASSIGN
(
d
, 
s
Ë
	`mem˝y
(d, s, 
m
->
g
->
n°©es
)

	)

129 
	#EQ
(
a
, 
b
Ë(
	`memcmp
◊, b, 
m
->
g
->
n°©es
Ë=0)

	)

130 
	#STATEVARS
 
vn
; *
•a˚


	)

131 
	#STATESETUP
(
m
, 
nv
Ë{ (m)->
•a˚
 = (*)
	`mÆloc
(“v)*(m)->
g
->
n°©es
); \

132 i‡((
m
)->
•a˚
 =
NULL
Ë(
REG_ESPACE
); \

133 (
m
)->
vn
 = 0; }

	)

134 
	#STATETEARDOWN
(
m
Ë{ 
	`‰ì
((m)->
•a˚
); }

	)

135 
	#SETUP
(
v
Ë((vË&
m
->
•a˚
[m->
vn
++ * m->
g
->
n°©es
])

	)

136 
	#⁄e°©e
 

	)

137 
	#INIT
(
o
, 
n
Ë((oË“))

	)

138 
	#INC
(
o
Ë((o)++)

	)

139 
	#ISSTATEIN
(
v
, 
o
Ë((v)[o])

	)

142 
	#FWD
(
d°
, 
§c
, 
n
Ë((d°)[
hîe
+“)] |(§c)[hîe])

	)

143 
	#BACK
(
d°
, 
§c
, 
n
Ë((d°)[
hîe
-“)] |(§c)[hîe])

	)

144 
	#ISSETBACK
(
v
, 
n
Ë((v)[
hîe
 - (n)])

	)

146 
	#LNAMES


	)

148 
	~"ªgex_ígöe.˝p
"

166 
	$ªgexec
(c⁄° 
ªgex_t
 *
¥eg
, c⁄° *
°rög
, 
size_t
 
nm©ch
, 
ªgm©ch_t
 
pm©ch
[], 
eÊags
)

168 
ª_guts
 *
g
 = 
¥eg
->
ª_g
;

169 #ifde‡
REDEBUG


170 
	#GOODFLAGS
(
f
Ë(f)

	)

172 
	#GOODFLAGS
(
f
Ë((f)&(
REG_NOTBOL
|
REG_NOTEOL
|
REG_STARTEND
))

	)

175 i‡(
¥eg
->
ª_magic
 !
MAGIC1
 || 
g
->
magic
 !
MAGIC2
)

176 (
REG_BADPAT
);

177 
	`ª_as£π
(!(
g
->
iÊags
&
BAD
));

178 i‡(
g
->
iÊags
&
BAD
)

179 (
REG_BADPAT
);

180 
eÊags
 = 
	`GOODFLAGS
(eflags);

182 i‡(
g
->
n°©es
 <()(
CHAR_BIT
*(
°©es1
)Ë&& !(
eÊags
&
REG_LARGE
))

183 (
	`sm©chî
(
g
, (*)
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
));

185 (
	`lm©chî
(
g
, (*)
°rög
, 
nm©ch
, 
pm©ch
, 
eÊags
));

186 
	}
}

	@src/common/regfree.cpp

30 
	~"w_deföes.h
"

73 
	~<os_ty≥s.h
>

74 
	~<c°dio
>

75 
	~<c°dlib
>

76 
	~<w_debug.h
>

77 
	~<ªgex.h
>

79 
	~"ªgex_utûs.h
"

80 
	~"ªgex2.h
"

87 
	$ªg‰ì
(
ªgex_t
 *
¥eg
)

89 
ª_guts
 *
g
;

91 i‡(
¥eg
->
ª_magic
 !
MAGIC1
)

94 
g
 = 
¥eg
->
ª_g
;

95 i‡(
g
 =
NULL
 || g->
magic
 !
MAGIC2
)

97 
¥eg
->
ª_magic
 = 0;

98 
g
->
magic
 = 0;

100 i‡(
g
->
°rù
 !
NULL
)

101 
	`‰ì
((*)
g
->
°rù
);

102 i‡(
g
->
£ts
 !
NULL
)

103 
	`‰ì
((*)
g
->
£ts
);

104 i‡(
g
->
£tbôs
 !
NULL
)

105 
	`‰ì
((*)
g
->
£tbôs
);

106 i‡(
g
->
mu°
 !
NULL
)

107 
	`‰ì
(
g
->
mu°
);

108 
	`‰ì
((*)
g
);

109 
	}
}

	@src/common/sm_vas.h

30 #i‚de‡
SM_VAS_H


31 
	#SM_VAS_H


	)

33 
	~"w_deföes.h
"

96 
	~"w.h
"

97 
	~<c°ddef
>

98 
	~<w_°ªam.h
>

100 
	~"›ti⁄.h
"

101 
	~"basics.h
"

102 
	~"lid_t.h
"

103 
	~"vec_t.h
"

104 
	~"tid_t.h
"

105 
	~"°id_t.h
"

107 #unde‡
SM_SOURCE


108 #unde‡
SM_LEVEL


109 
	~"sm.h
"

110 
	~"pö.h
"

111 
	~"sˇn.h
"

112 
	~"kvl_t.h
"

113 
	~"lock_s.h
"

114 
	~"key_ønges_m≠.h
"

116 
	~"s‹t.h
"

117 
	~"s‹t_s.h
"

	@src/common/stid_t.cpp

30 
	~"w_deföes.h
"

34 #ifde‡
__GNUC__


35 #¥agm®
im∂emíèti⁄
 "stid_t.h"

38 
	#VEC_T_C


	)

39 
	~<c°dlib
>

40 
	~<c°rög
>

41 
	~<w_°ªam.h
>

42 
	~<w_ba£.h
>

43 
	~<w_mömax.h
>

44 
	~"basics.h
"

45 
	~"°id_t.h
"

49 c⁄° 
°id_t
 
	g°id_t
::
nuŒ
;

51 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	g°id_t
& 
	g°id
)

53  
	go
 << "s(" << 
	g°id
.
	gvﬁ
 << '.' << stid.
	g°‹e
 << ')';

56 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	g°id_t
& 
	g°id
)

58 
	gc
[5];

59 
mem£t
(
c
, '\0', (c));

60 
	gi
 >> 
	gc
[0];

61 if(
	gi
.
good
())

62 
	gi
 >> 
	gc
[1];

63 if(
	gi
.
good
())

64 
	gi
 >> 
	g°id
.
	gvﬁ
;

65 if(
	gi
.
good
())

66 
	gi
 >> 
	gc
[2];

67 if(
	gi
.
good
())

68 
	gi
 >> 
	g°id
.
	g°‹e
;

69 if(
	gi
.
good
())

70 
	gi
 >> 
	gc
[3];

71 
	gc
[4] = '\0';

72 i‡(
	gi
) {

73 i‡(
°rcmp
(
c
, "s(.)")) {

74 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

77  
	gi
;

	@src/common/stid_t.h

30 #i‚de‡
STID_T_H


31 
	#STID_T_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUC__


38 #¥agm®
im∂emíèti⁄


49 
uöt4_t
 
	t¢um_t
;

51 #i‚de‡
VID_T_H


52 
	~<vid_t.h
>

54 #i‚de‡
DEVID_T_H


55 
	~<devid_t.h
>

58 
	#STID_T


	)

60 
	scom∑ª_¢um_t


62 
boﬁ
 
›î©‹
(Ë(
¢um_t
 c⁄° &
	ma
, snum_àc⁄° &
	mb
) const

64  
	ma
 < 
	mb
;

79 
	s°id_t
 {

80 
vid_t
 
	mvﬁ
;

81 
fûl2
 
	mfûÀr
;

82 
¢um_t
 
	m°‹e
;

83 c⁄° 
°id_t
 
	mnuŒ
;

85 
°id_t
();

86 
°id_t
(c⁄° stid_t& 
s
);

87 
°id_t
(
vid_t
 
vid
, 
¢um_t
 
¢um
);

89 
boﬁ
 
	m›î©‹
==(c⁄° 
°id_t
& 
s
) const;

90 
boﬁ
 
	m›î©‹
!=(c⁄° 
°id_t
& 
s
) const;

91 
boﬁ
 
	m›î©‹
<(c⁄° 
	m°id_t
& 
	ms
) const;

93 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	m°id_t
& 
	ms
);

94 
‰õnd
 
	mi°ªam
& 
	m›î©‹
>>(i°ªam&, 
	m°id_t
& 
	ms
);

97 
›î©‹
 const *() const;

99 
ölöe
 
	g°id_t
::
	$°id_t
(c⁄° 
°id_t
& 
s
Ë: 
	`vﬁ
(s.
vﬁ
), 
	$°‹e
(
s
.
°‹e
)

100 {
	}
}

102 
ölöe
 
	g°id_t
::
	$°id_t
(Ë: 
	`vﬁ
(0), 
	$°‹e
(0)

103 {
	}
}

105 
ölöe
 
	g°id_t
::
	$°id_t
(
vid_t
 
v
, 
¢um_t
 
s
Ë: 
	`vﬁ
(v), 
	$°‹e
(
s
)

106 {
	}
}

108 
ölöe
 
	g°id_t
::
›î©‹
 const *() const

110  
vﬁ
 ? (*) 1 : 0;

113 
ölöe
 
boﬁ
 
	g°id_t
::
›î©‹
==(c⁄° 
°id_t
& 
s
) const

115  (
vﬁ
 =
s
.vﬁË&& (
°‹e
 == s.store);

118 
ölöe
 
boﬁ
 
	g°id_t
::
›î©‹
!=(c⁄° 
°id_t
& 
s
) const

120  ! (*
this
 =
s
);

123 
ölöe
 
boﬁ
 
	g°id_t
::
›î©‹
<(c⁄° 
°id_t
& 
s
) const

125  
vﬁ
 < 
s
.vol ||

126 (
vﬁ
 =
s
.vﬁ && 
°‹e
 < s.store);

129 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(c⁄° 
°id_t
 &
s
)

131  (
s
.
vﬁ
.vﬁ << 16Ë^ s.
°‹e
;

132 
	}
}

	@src/common/store_latch_manager.cpp

54 
	~"w_deföes.h
"

58 
	~"°‹e_œtch_m™agî.h
"

59 
	~<ve˘‹
>

63 #i‡
deföed
(
USE_OCC_LOCK_HERE
)

64 
	#OCCWRITE
 .
	`wrôe_lock
()

	)

65 
	#OCCREAD
 .
	`ªad_lock
()

	)

67 
	#OCCWRITE


	)

68 
	#OCCREAD


	)

71 
	g°‹e_œtch_m™agî
::
	$shutdown
()

73 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

74 
œtch_m≠
::
ôî©‹
 
ô
=
_œtches
.
	`begö
(); ià!_œtches.
	`íd
(); ++it)

76 
	`w_as£π1
(
ô
->
£c⁄d
->
	`mode
(Ë=
LATCH_NL
);

77 
dñëe
 
ô
->
£c⁄d
;

79 
_œtches
.
	`˛ór
();

80 
	}
}

82 
	gœtch_t
 &
	g°‹e_œtch_m™agî
::
	$föd_œtch
(
°id_t
 c⁄° &
°‹e
)

84 
œtch_t
 *
œtch
=
NULL
;

86 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCREAD
);

87 
œtch_m≠
::
ôî©‹
 
pos
=
_œtches
.
	`föd
(
°‹e
);

88 if(
pos
 !
_œtches
.
	`íd
()) {

89 
°id_t
 
MAYBE_UNUSED
 
xxx
 = 
pos
->
fú°
;

90 
	`w_as£π1
(
°‹e
==
xxx
);

91 
œtch
=
pos
->
£c⁄d
;

92  *
œtch
;

97 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

98 if–(
œtch
=
_œtches
[
°‹e
]) ) {

99  *
œtch
;

102 
œtch
 = 
√w
 
œtch_t
;

103 
_œtches
[
°‹e
] = 
œtch
;

104  *
œtch
;

105 
	}
}

108 
	g°‹e_œtch_m™agî
::
	$_de°roy_œtches
(
°id_t
 c⁄° &
°‹e
)

110 
œtch_m≠
::
ôî©‹
 
pos
=
_œtches
.
	`föd
(
°‹e
);

111 if(
pos
 !
_œtches
.
	`íd
())

113 
	`w_as£π1
(
°‹e
 =
pos
->
fú°
);

114 
œtch_t
 *
œtch
 = 
pos
->
£c⁄d
;

115 
_œtches
.
	`îa£
(
pos
);

116 
dñëe
 
œtch
;

119 
	}
}

121 
	g°‹e_œtch_m™agî
::
	$de°roy_œtches
(
°id_t
 c⁄° &
°‹e
)

123 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

124 
	`_de°roy_œtches
(
°‹e
);

125 
	}
}

128 
	g°‹e_œtch_m™agî
::
	$de°roy_œtches
(
vid_t
 c⁄° &
vﬁ
)

130 
i
=0;

131 
°d
::
ve˘‹
<
°id_t
> 
_tmp
;

132 
_tmp
.
	`ª£rve
(30);

134 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

138 
œtch_m≠
::
ôî©‹
 
pos
=
_œtches
.
	`begö
();

139 
pos
 !
_œtches
.
	`íd
();

140 
pos
++

143 
°id_t
 
°id
 = 
pos
->
fú°
;

144 if(
°id
.
vﬁ
 == vol) {

145 
_tmp
.
	`push_back
(
°id
);

151 
i
=0; i < 
_tmp
.
	`size
(); i++)

153 
	`_de°roy_œtches
(
_tmp
[
i
]);

155 
	}
}

157 
	g°‹e_œtch_m™agî
::~
	$°‹e_œtch_m™agî
()

159 
	`shutdown
();

160 
	}
}

	@src/common/store_latch_manager.h

53 #i‚de‡
STORE_LATCH_MGR_H


54 
	#STORE_LATCH_MGR_H


	)

56 
	~"w_deföes.h
"

60 #i‚de‡
BASICS_H


61 
	~"basics.h
"

64 #i‚de‡
STID_T_H


65 
	~"°id_t.h
"

68 #i‚de‡
LATCH_H


69 
	~"œtch.h
"

72 
	~<m≠
>

86 ˛as†
	c°‹e_œtch_m™agî


88 
	m¥iv©e
:

89 
	s°id_cmp
 {

90 
boﬁ
 
›î©‹
(Ë(c⁄° 
°id_t
 &
lhs
, c⁄° 
	m°id_t
 &
	mrhs
) const

91 {  (
	mlhs
.
	mvﬁ
 < 
	mrhs
.vol)

92 || ( (
	mlhs
.
	mvﬁ
 =
rhs
.
vﬁ
Ë&& (
lhs
.
°‹e
 <Ñhs.store)); }

95 
	g°d
::
	tm≠
<
	t°id_t
, 
	tœtch_t
*, 
	t°id_cmp
> 
	tœtch_m≠
;

96 
œtch_m≠
 
	g_œtches
 ;

97 
	#USE_OCC_LOCK_HERE
 1

	)

98 #ifde‡
USE_OCC_LOCK_HERE


99 
occ_rwlock
 
	g_œtch_lock
;

101 
queue_ba£d_lock_t
 
	g_œtch_lock
;

103 
_de°roy_œtches
(
°id_t
 c⁄° &
°‹e
) ;

105 
	gpublic
:

107 
œtch_t
 &
föd_œtch
(
°id_t
 c⁄° &
°‹e
) ;

109 
de°roy_œtches
(
°id_t
 c⁄° &
°‹e
) ;

111 
de°roy_œtches
(
vid_t
 c⁄° &
vﬁume
) ;

113 
shutdown
() ;

114 ~
°‹e_œtch_m™agî
() ;

117 
°‹e_œtch_m™agî
 
°‹e_œtches
;

	@src/common/tests/bitmap.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<w_ba£.h
>

36 
	~<w_gë›t.h
>

37 
	~<basics.h
>

38 
	~<bôm≠.h
>

40 
	~<io°ªam
>

42 
	$maö
(
¨gc
, **
¨gv
)

44 
numBôs
 = 71;

45 
numByãs
;

46 
i
;

47 
îr‹s
 = 0;

48 
ôî©i⁄s
 = 0;

49 
boﬁ
 
øndom_ã°s
 = 
Ál£
;

50 
boﬁ
 
°©ñess_ã°s
 = 
Ál£
;

51 
c
;

53 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:ri:")Ë!
EOF
) {

54 
c
) {

57 
numBôs
 = 
	`©oi
(
›èrg
);

63 
øndom_ã°s
 = 
åue
;

67 
ôî©i⁄s
 = 
	`©oi
(
›èrg
);

70 
îr‹s
++;

74 i‡(
îr‹s
) {

75 
	`W_FORM2
(
˚º
,("usage: %s [-n bits] [-r] [-i iterations]\n",

76 
¨gv
[0]));

79 i‡(!
ôî©i⁄s
)

80 
ôî©i⁄s
 = 
øndom_ã°s
 ? 10000 : 
numBôs
;

84 
°©ñess_ã°s
 = (
øndom_ã°s
 || 
ôî©i⁄s
 > 
numBôs
);

86 
numByãs
 = (
numBôs
 - 1) / 8 + 1;

88 
u_ch¨
 *
m≠
 = 
√w
 u_ch¨[
numByãs
];

89 i‡(!
m≠
)

90 
	`W_FATAL
(
fcOUTOFMEMORY
);

92 
	`W_FORM2
(
cout
,("test bitmap of %d bits, stored in %d bytes (%d bits).\n",

93 
numBôs
, 
numByãs
,ÇumBytes*8));

95 
i
 = 0; i < 
numByãs
; i++)

96 
m≠
[
i
] = 
	`ønd
();

98 
cout
 << "Clear Map: ";

99 
îr‹s
 = 0;

100 
	`bm_zîo
(
m≠
, 
numBôs
);

101 
i
 = 0; i < 
numBôs
; i++) {

102 i‡(
	`bm_is_£t
(
m≠
, 
i
)) {

103 
cout
 << 
i
 << " ";

104 
îr‹s
++;

108 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

110 
cout
 << "Set Map: ";

111 
îr‹s
 = 0;

112 
	`bm_fûl
(
m≠
, 
numBôs
);

113 
i
 = 0; i < 
numBôs
; i++) {

114 i‡–! 
	`bm_is_£t
(
m≠
, 
i
)) {

115 
cout
 << 
i
 << " ";

116 
îr‹s
++;

120 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

122 
cout
 << "Set: ";

123 
îr‹s
 = 0;

124 
	`bm_zîo
(
m≠
, 
numBôs
);

125 
i
 = 0; i < 
ôî©i⁄s
; i++) {

126 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

127 
	`bm_£t
(
m≠
, 
bô
);

128 i‡–! 
	`bm_is_£t
(
m≠
, 
bô
) ) {

129 
cout
 << 
bô
 << " ";

130 
îr‹s
++;

134 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

136 
cout
 << "Clear: ";

137 
îr‹s
 = 0;

138 
	`bm_fûl
(
m≠
, 
numBôs
);

139 
i
 = 0; i < 
ôî©i⁄s
; i++) {

140 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

141 
	`bm_˛r
(
m≠
, 
bô
);

142 i‡(
	`bm_is_£t
(
m≠
, 
bô
)) {

143 
cout
 << 
bô
 << " ";

144 
îr‹s
++;

148 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

150 
cout
 << "First Set: ";

151 
îr‹s
 = 0;

152 
	`bm_zîo
(
m≠
, 
numBôs
);

153 
i
 = 0; i < 
ôî©i⁄s
; i++) {

154 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

155 
	`bm_£t
(
m≠
, 
bô
);

157 i‡(
	`bm_fú°_£t
(
m≠
, 
numBôs
, 0Ë!
bô
) {

158 
cout
 << 
bô
 << " ";

159 
îr‹s
++;

163 i‡(
	`bm_fú°_£t
(
m≠
, 
numBôs
, 
bô
) != bit) {

164 
cout
 << 
bô
 << " ";

165 
îr‹s
++;

169 
	`bm_˛r
(
m≠
, 
bô
);

171 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

173 
cout
 << "First Clear: ";

174 
îr‹s
 = 0;

175 
	`bm_fûl
(
m≠
, 
numBôs
);

176 
i
 = 0; i < 
ôî©i⁄s
; i++) {

177 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

178 
	`bm_˛r
(
m≠
, 
bô
);

179 i‡(
	`bm_fú°_˛r
(
m≠
, 
numBôs
, 0Ë!
bô
) {

180 
cout
 << 
bô
 << " ";

181 
îr‹s
++;

185 i‡(
	`bm_fú°_˛r
(
m≠
, 
numBôs
, 
bô
) != bit) {

186 
cout
 << 
bô
 << " ";

187 
îr‹s
++;

190 
	`bm_£t
(
m≠
, 
bô
);

192 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

194 
cout
 << "Last Set: ";

195 
îr‹s
 = 0;

196 
	`bm_zîo
(
m≠
, 
numBôs
);

197 
i
 = 0; i < 
ôî©i⁄s
; i++) {

198 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

199 
	`bm_£t
(
m≠
, 
bô
);

201 i‡(
	`bm_œ°_£t
(
m≠
, 
numBôs
,ÇumBôs-1Ë!
bô
) {

202 
cout
 << 
bô
 << " ";

203 
îr‹s
++;

207 i‡(
	`bm_œ°_£t
(
m≠
, 
numBôs
, 
bô
) != bit) {

208 
cout
 << 
bô
 << " ";

209 
îr‹s
++;

212 i‡(
°©ñess_ã°s
)

213 
	`bm_˛r
(
m≠
, 
bô
);

215 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

217 
cout
 << "Last Clear: ";

218 
îr‹s
 = 0;

219 
	`bm_fûl
(
m≠
, 
numBôs
);

220 
i
 = 0; i < 
ôî©i⁄s
; i++) {

221 
bô
 = (
øndom_ã°s
 ? 
	`ønd
(Ë: 
i
Ë% 
numBôs
;

222 
	`bm_˛r
(
m≠
, 
bô
);

223 i‡(
	`bm_œ°_˛r
(
m≠
, 
numBôs
,ÇumBôs-1Ë!
bô
) {

224 
cout
 << 
bô
 << " ";

225 
îr‹s
++;

229 i‡(
	`bm_œ°_˛r
(
m≠
, 
numBôs
, 
bô
) != bit) {

230 
cout
 << 
bô
 << " ";

231 
îr‹s
++;

234 i‡(
°©ñess_ã°s
)

235 
	`bm_£t
(
m≠
, 
bô
);

237 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

239 
cout
 << "Num Set: ";

240 
îr‹s
 = 0;

241 
	`bm_zîo
(
m≠
, 
numBôs
);

242 i‡(
	`bm_num_£t
(
m≠
, 
numBôs
) != 0) {

243 
cout
 << "all ";

244 
îr‹s
++;

246 
i
 = 0; i < 
numBôs
; i++) {

247 
	`bm_£t
(
m≠
, 
i
);

249 i‡(
	`bm_num_£t
(
m≠
, 
numBôs
Ë!
i
+1) {

250 
cout
 << 
i
 << " ";

251 
îr‹s
++;

255 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

257 
cout
 << "Num Clear: ";

258 
îr‹s
 = 0;

259 
	`bm_fûl
(
m≠
, 
numBôs
);

260 i‡(
	`bm_num_˛r
(
m≠
, 
numBôs
) != 0) {

261 
cout
 << "all ";

262 
îr‹s
++;

264 
i
 = 0; i < 
numBôs
; i++) {

265 
	`bm_˛r
(
m≠
, 
i
);

267 i‡(
	`bm_num_˛r
(
m≠
, 
numBôs
Ë!
i
+1) {

268 
cout
 << 
i
 << " ";

269 
îr‹s
++;

273 
cout
 << (
îr‹s
 ? "Áûed" : "∑s£d"Ë<< 
ídl
 << 
Êush
;

275 
dñëe
 [] 
m≠
;

277 
cout
 << 
Êush
;

279 
	}
}

	@src/common/tests/errcodes.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<›ti⁄.h
>

37 
	~<io°ªam
>

39 
	$maö
()

41 
cout
 << "ERROR CODES:\n";

42 (Ë
w_îr‹_t
::
	`¥öt
(
cout
);

45 
	}
}

46 
›ti⁄_group_t
 
t
(2);

49 #ifde‡
__GNUC__


50 
	gw_auto_dñëe_¨øy_t
<> 
	tgcc_kludge_1
;

51 
	gw_li°_i
<
	t›ti⁄_t
, 
	tunß„_li°_dummy_lock_t
> 
	tgcc_kludge_0
;

	@src/common/tests/kvl.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<basics.h
>

36 
	~<vec_t.h
>

37 
	~<kvl_t.h
>

39 
	~<io°ªam
>

40 
	~<w_°r°ªam.h
>

42 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

44 if(
¨gc
 != 3 &&árgc != 4) {

45 
˚º
 << "Ußge: " << 
¨gv
[0]

47 << 
ídl
;

51 
v
;

52 
°
;

54 
w_i°r°ªam
 
	`™⁄
(
¨gv
[1]);

55 
dŸ
;

56 
™⁄
 >> 
v
;

57 
™⁄
 >> 
dŸ
;

58 
™⁄
 >> 
°
;

60 
°id_t
 
	`s
(
v
,
°
);

61 
cvec_t
 
	`key
(
¨gv
[2], 
	`°æí
(argv[2]));

63 
cvec_t
 
ñem
;

64 if(
¨gc
 > 3) {

65 
ñem
.
	`put
(
¨gv
[3], 
	`°æí
(argv[3]));

67 
kvl_t
 
	`kvl
(
s
, 
key
, 
ñem
);

69 
cout


70 << "kvl(°‹e" << 
s


71 << " key" << 
key


72 << "ÉÀm" << 
ñem


73 << ")" << 
kvl
 << 
ídl
;

76 
vec_t
 
nul
;

77 
kvl_t
 
	`kvl1
(
s
, 
nul
, 
ñem
);

78 
cout


79 << "kvl(°‹e" << 
s


80 << " key" << 
nul


81 << "ÉÀm" << 
ñem


82 << ")" << 
kvl1
 << 
ídl
;

84 
kvl_t
 
	`kvl3
(
s
, 
key
, 
nul
);

85 
cout


86 << "kvl(°‹e" << 
s


87 << " key" << 
key


88 << "ÉÀm" << 
nul


89 << ")" << 
kvl3
 << 
ídl
;

91 
kvl_t
 
	`kvl2
(
s
, 
nul
,Çul);

92 
cout


93 << "kvl(°‹e" << 
s


94 << " key" << 
nul


95 << "ÉÀm" << 
nul


96 << ")" << 
kvl2
 << 
ídl
;

99 
	}
}

	@src/common/tests/latch1.cpp

30 
	~"w_deföes.h
"

34 
	~<c°dlib
>

35 
	~<˘ime
>

36 
	~<w_ba£.h
>

37 
	~<°hªad.h
>

38 
	~<w_gë›t.h
>

40 #unde‡
ORIG_SM


41 #ifde‡
ORIG_SM


42 
	#joö
 
waô


	)

44 
	~<œtch.h
>

46 
	#RUN_TEST1


	)

47 #unde‡
RUN_TEST2


48 #unde‡
RUN_TEST3


50 
	~<io°ªam
>

51 
	~<w_°r°ªam.h
>

53 
	#NUM_THREADS
 3

	)

54 
	#LAST_THREAD
 (
NUM_THREADS
-1)

	)

57 
œtch_t
 
	gthe_œtch
;

58 
queue_ba£d_block_lock_t
 
	g¥öt_muãx
;

60 
	gd⁄e_cou¡
;

61 
±hªad_c⁄d_t
 
	gd⁄e
;

62 
±hªad_muãx_t
 
	gd⁄e_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

63 
boﬁ
 
vîbo£
(
Ál£
);

64 
	gã°num
 = -1;

65 c⁄° *
¨gv0
(
NULL
);

67 
	$ußge
(
o°ªam
 &
o
, 
ex
)

69 
o
 << "ußge: " << 
¨gv0
 << " -à<1|2|3> [-v]" << 
ídl
;

70 ::
	`exô
(
ex
);

71 
	}
}

73 
	sœtch_thªad_id_t
 {

74 
œtch_thªad_id_t
 (
x
): 
_id
(x) {};

75 
	m_id
;

78 ˛as†
	cœtch_thªad_t
 : 
public
 
°hªad_t
 {

79 
public
:

80 
œtch_thªad_t
(
id
);

81 ~
	$œtch_thªad_t
() {

82 
	`CRITICAL_SECTION
(
cs
, 
lock
);

83 
hasExôed
 = 
åue
;

86 
	`sync_Ÿhî
(
œtch_thªad_t
 *
r
);

88 
¥Ÿe˘ed
:

89 íum { 
Æl_sh
, 
⁄e_ex
, 
Æl_ex
 
	}
} 
	tã°Köd
;

90 c⁄° *
	gköd_°rögs
[];

91 
run
();

92 
ã°1
(
i
, 
ã°Köd
 
t
);

93 
ã°2
(
i
, 
œtch_mode_t
 
mode1
,Ü©ch_mode_à
mode2
);

94 
ã°3
(
i
, 
ã°Köd
 
t
);

95 
ã°4
();

96 
	g¥iv©e
:

97 
œtch_thªad_id_t
 
_£lf
;

98 
boﬁ
 
	gisWaôög
;

99 
boﬁ
 
	gˇnPro˚ed
;

100 
boﬁ
 
	ghasExôed
;

101 
±hªad_c⁄d_t
 
	gquõs˚d
;

102 
±hªad_c⁄d_t
 
	g¥o˚ed
;

103 
±hªad_muãx_t
 
	glock
;

105 
	$sync
() {

106 
	`CRITICAL_SECTION
(
cs
, 
lock
);

107 
isWaôög
=
åue
;

108 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
quõs˚d
));

109 !
ˇnPro˚ed
) {

110 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
¥o˚ed
, &
lock
));

112 
ˇnPro˚ed
 = 
Ál£
;

113 
	}
}

116 
	gœtch_thªad_t
::
	$œtch_thªad_t
(
_id
)

117 : 
	`°hªad_t
(
t_ªguœr
),

118 
	`_£lf
(
_id
),

119 
	`isWaôög
(
Ál£
),
	`ˇnPro˚ed
(Ál£),
	$hasExôed
(
Ál£
)

121 
w_o°r°ªam_buf
 
	`s
(40);

122 
s
 << "œtch_thªad " << 
_id
 << 
íds
;

123 
this
->
	`ª«me
(
s
.
	`c_°r
());

125 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
quõs˚d
, 
NULL
));

126 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
¥o˚ed
, 
NULL
));

127 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
lock
, 
NULL
));

128 
	}
}

130 c⁄° *
	gœtch_thªad_t
::
köd_°rögs
[] = {

136 
	gœtch_thªad_t
::
	$sync_Ÿhî
(
œtch_thªad_t
 *
r
)

138 
	`CRITICAL_SECTION
(
cs
, &
r
->
lock
);

139 !(
r
->
isWaôög
 ||Ñ->
hasExôed
)) {

140 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
r
->
quõs˚d
, &r->
lock
));

142 
r
->
isWaôög
 = 
Ál£
;

143 
r
->
ˇnPro˚ed
 = 
åue
;

144 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
r
->
¥o˚ed
));

145 
	}
}

147 #ifde‡
ORIG_SM


149 
	#œtch_˙t
 
lock_˙t


	)

150 
	#is_œtched
 
is_locked


	)

154 
	$dump
(
o°ªam
 &
o
, 
œtch_t
 &
l
)

156 
o
 << " modê" << 
œtch_t
::
œtch_mode_°r
[ 
l
.
	`mode
() ]

157 << "Çum_hﬁdî†" << 
l
.
	`num_hﬁdîs
()

158 << "Ü©ch_˙à" << 
l
.
	`œtch_˙t
()

159 << " is_œtched " << (c⁄° *)(
l
.
	`is_œtched
()?"true":"false")

160 << " is_möê" << (c⁄° *)(
l
.
	`is_möe
()?"true":"false")

161 << " hñd_by_mê" << 
l
.
	`hñd_by_me
()

162 << 
ídl
;

163 
	}
}

166 
	$check
–
löe
,

167 c⁄° *
msg
,

168 
œtch_t
 &
l
,

169 
œtch_mode_t
 
ex≥˘ed
,

170 
œtch_mode_t
 
m1
,

171 
œtch_mode_t
 
m2
,

172 
hﬁdîs
,

173 
œtch_˙t
,

174 
boﬁ
 
is_œtched
,

175 
boﬁ
 
is_möe
,

176 
hñd_by_me


180 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

181 
cout
 << 
ídl
;

182 
cout
 << " {---------------------- "

183 << 
œtch_t
::
œtch_mode_°r
[
m1
] << " / " <<Ü©ch_t::œtch_mode_°r[
m2
]

184 << " ------------------" << 
löe
 << 
ídl
;

185 
cout
 << "\t" << 
msg
 << 
ídl
;

186 
	`dump
(
cout
, 
l
);

189 
boﬁ
 
	`do_as£πs
(
åue
);

190 if(
do_as£πs
)

192 
	`œ°_Áûuª
(0);

193 
	`Áûuª
(0);

194 if(!(
l
.
	`mode
(Ë=
ex≥˘ed
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

195 if(!(
l
.
	`num_hﬁdîs
(Ë=
hﬁdîs
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

196 if(!(
l
.
	`œtch_˙t
(Ë=
œtch_˙t
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

197 if(!(
l
.
	`is_œtched
(Ë=
is_œtched
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

198 if(!(
l
.
	`is_möe
(Ë=
is_möe
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

199 if(!(
l
.
	`hñd_by_me
(Ë=
hñd_by_me
)Ë{ 
Áûuª
++; 
œ°_Áûuª
=
__LINE__
; }

200 if(
Áûuª
 > 0) {

201 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

202 
cout
 << 
l
 << 
ídl
;

203 
cout
 << "# faûuªs: " << 
Áûuª


204 << "Üa° @" << 
œ°_Áûuª


205 << 
ídl
 <<Éndl;;

206 
	`w_as£π1
(0);

210 
cout
 << " ---------------------------------------------------"

211 << 
löe
 << "}" << 
ídl
;

212 
	}
}

214 
	go°ªam
 &

215 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gœtch_thªad_id_t
 &
	gID
)

217 
	gj
 = 
ID
.
_id
;

218 
	gi
=0; i < 
	gj
; i++) {

219 
	go
 << "-----";

221 
	go
 << "----- " << 
	gID
.
	g_id
 << ":" ;

222  
	go
;

228 
	gœtch_thªad_t
::
	$ã°1
(
i
, 
ã°Köd
 
t
)

230 if(
vîbo£
) {

231 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

232 
˚º
 << 
_£lf
 << " sèπögÅe° 1 id=" << 
i
 << " " << 
köd_°rögs
[(
t
)]

233 << 
ídl
;

234 
˚º
 << 
_£lf
 << "áwaô syn¯@" << 
__LINE__
 << 
ídl
;

237 
	`sync
();

239 if(
vîbo£
) {

240 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

241 
˚º
 << 
_£lf
 << "Åe° 1 gŸ syn¯" << 
ídl
;

242 
˚º
 << 
_£lf
 << "áwaôácquúê@" << 
__LINE__
 << 
ídl
;

245 
œtch_mode_t
 
mode
 = 
LATCH_SH
;

246 
t
) {

247 
⁄e_ex
:

248 if(
i
 =
_£lf
.
_id
Ë
mode
 = 
LATCH_EX
;

250 
Æl_ex
:

251 
mode
 = 
LATCH_EX
;

253 
Æl_sh
:

258 if(
vîbo£
) {

259 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

260 
˚º
 << 
_£lf
 << "Üatch_acquire mode= "

261 << 
mode
 << " @" << 
__LINE__
 << 
ídl
;

262 
	`¥öt_Æl_œtches
();

264 
the_œtch
.
	`œtch_acquúe
(
mode
);

266 
	`yõld
();

268 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
mode
);

269 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() > 0);

270 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() > 0);

271 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

272 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=(
mode
 =
LATCH_EX
));

273 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

275 if(
vîbo£
) {

276 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

277 
˚º
 << 
_£lf
 << "Ü©ch_ªÀa£ @" << 
__LINE__
 << 
ídl
;

280 
the_œtch
.
	`œtch_ªÀa£
();

281 
	`yõld
();

283 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
Ál£
);

284 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 0);

286 if(
vîbo£
) {

287 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

288 
˚º
 << 
_£lf
 << "ÉndÅe° 1 " << 
i
 << 
ídl
;

292 
	`CRITICAL_SECTION
(
cs
, 
d⁄e_muãx
);

293 
d⁄e_cou¡
++;

295 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
d⁄e
));

296 
	}
}

298 c⁄° * c⁄° 
	gœtch_mode_°r
[3] = { "NL", "SH", "EX" };

304 
	gœtch_thªad_t
::
	$ã°2
(
i
, 
œtch_mode_t
 
mode1
,

305 
œtch_mode_t
 
mode2
)

308 if(
vîbo£
) {

309 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

310 
˚º
 << 
_£lf


312 << 
œtch_mode_°r
[(
mode1
)] << ", " <<Ü©ch_mode_°r[(
mode2
)]

313 << 
ídl
;

314 
˚º
 << 
_£lf
 << "áwaô syn¯@" << 
__LINE__
 << 
ídl
;

316 
	`sync
();

318 if(
vîbo£
) {

319 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

320 
˚º
 << 
_£lf
 << "---------Åe°2 gŸ syn¯" << 
ídl
;

323 if(
i
 =
_£lf
.
_id
)

325 
boﬁ
 
	`is_upgøde
(
Ál£
);

329 if(
mode2
 > 
mode1
)

331 
is_upgøde
=
åue
;

334 
	`check
(
__LINE__
,

336 
the_œtch
,

337 
LATCH_NL
 ,

338 
mode1
, 
mode2
,

341 
Ál£
 ,

342 
Ál£
 ,

346 if(
vîbo£
) {

347 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

348 
˚º
 << 
_£lf
 << "Üatch_acquire mode= "

349 << 
mode1
 << " @" << 
__LINE__
 << 
ídl
;

353 
the_œtch
.
	`œtch_acquúe
(
mode1
);

355 
	`check
(
__LINE__
,

357 
the_œtch
,

358 (
mode1
==
LATCH_NL
)?
LATCH_EX
:mode1 ,

359 
mode1
, 
mode2
,

362 
åue
 ,

363 (
mode1
==
LATCH_EX
) ,

364 (
mode1
==
LATCH_NL
)?0:1

367 if(
vîbo£
) {

368 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

369 
˚º
 << 
_£lf
 << " doubleÜatch_acquire mode= "

370 << 
mode2
 << " @" << 
__LINE__
 << 
ídl
;

374 
the_œtch
.
	`œtch_acquúe
(
mode2
);

375 if(
is_upgøde
)

377 #ifde‡
ORIG_SM


380 
	`check
(
__LINE__
,

382 
the_œtch
,

383 
mode2
 ,

384 
mode1
, 
mode2
,

387 
åue
 ,

388 (
mode2
==
LATCH_EX
) ,

392 
	`check
(
__LINE__
,

394 
the_œtch
,

395 
mode2
 ,

396 
mode1
, 
mode2
,

399 
åue
 ,

400 (
mode2
==
LATCH_EX
) ,

407 #ifde‡
ORIG_SM


408 
	`check
(
__LINE__
,

410 
the_œtch
,

411 
mode2
 ,

412 
mode1
, 
mode2
,

417 (
mode2
==
LATCH_EX
)? 1 : 2 ,

419 
åue
 ,

420 (
mode2
==
LATCH_EX
) ,

424 
	`check
(
__LINE__
,

426 
the_œtch
,

427 
mode2
 ,

428 
mode1
, 
mode2
,

431 
åue
 ,

432 (
mode2
==
LATCH_EX
) ,

438 if(
vîbo£
) {

439 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

440 
˚º
 << 
_£lf
 << "Ü©ch_ªÀa£ @" << 
__LINE__
 << 
ídl
;

444 
the_œtch
.
	`œtch_ªÀa£
();

445 if(
is_upgøde
)

447 #ifde‡
ORIG_SM


450 
	`check
(
__LINE__
,

452 
the_œtch
,

453 
LATCH_EX
 ,

454 
mode1
, 
mode2
,

457 
åue
 ,

458 
åue
 ,

462 
	`check
(
__LINE__
,

464 
the_œtch
,

465 
LATCH_EX
 ,

466 
mode1
, 
mode2
,

469 
åue
 ,

470 
åue
 ,

477 
	`check
(
__LINE__
,

479 
the_œtch
,

480 
mode1
 ,

481 
mode1
, 
mode2
,

484 
åue
 ,

485 (
mode1
==
LATCH_EX
) ,

490 if(
vîbo£
) {

491 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

492 
˚º
 << 
_£lf
 << " 2ndÜ©ch_ªÀa£ @" << 
__LINE__
 << 
ídl
;

495 
the_œtch
.
	`œtch_ªÀa£
();

496 
	`check
(
__LINE__
,

498 
the_œtch
,

499 
LATCH_NL
 ,

500 
mode1
, 
mode2
,

503 
Ál£
 ,

504 
Ál£
 ,

511 if(
vîbo£
) {

512 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

513 
˚º
 << 
_£lf
 << "---------Åe°2 VACUOUS" << 
ídl
;

516 if(
vîbo£
) {

517 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

518 
˚º
 << 
_£lf
 << "---------Åe°2 END " << 
mode1
 << ", " << 
mode2
 << 
ídl
;

522 
	`CRITICAL_SECTION
(
cs
, 
d⁄e_muãx
);

523 
d⁄e_cou¡
++;

525 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
d⁄e
));

526 
	}
}

528 
	gœtch_thªad_t
::
	$ã°3
(
i
, 
ã°Köd
 
t
)

530 if(
vîbo£
) {

531 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

532 
˚º
 << 
_£lf
 << " sèπögÅe° 3 id=" << 
i
 << " " << 
köd_°rögs
[(
t
)]

533 << 
ídl
;

534 
˚º
 << 
_£lf
 << "áwaô syn¯@" << 
__LINE__
 << 
ídl
;

537 
	`sync
();

539 if(
vîbo£
) {

540 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

541 
˚º
 << 
_£lf
 << "Åe° 3 gŸ syn¯" << 
ídl
;

542 
˚º
 << 
_£lf
 << "áwaôácquúê@" << 
__LINE__
 << 
ídl
;

545 
œtch_mode_t
 
mode
 = 
LATCH_SH
;

546 
t
) {

547 
⁄e_ex
:

548 if(
i
 =
_£lf
.
_id
Ë
mode
 = 
LATCH_EX
;

550 
Æl_ex
:

551 
mode
 = 
LATCH_EX
;

553 
Æl_sh
:

558 if(
vîbo£
) {

559 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

560 
˚º
 << 
_£lf
 << "Üatch_acquire mode= "

561 << 
mode
 << " @" << 
__LINE__
 << 
ídl
;

563 
the_œtch
.
	`œtch_acquúe
(
mode
);

565 
	`yõld
();

567 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
mode
);

568 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() > 0);

569 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() > 0);

570 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

571 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=(
mode
 =
LATCH_EX
));

572 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

574 if(
vîbo£
) {

575 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

576 
˚º
 << 
_£lf
 << " upgøde_if_nŸ_block @" << 
__LINE__
 << 
ídl
;

579 
boﬁ
 
	`would_block
(
Ál£
);

582 
boﬁ
 
is_ªÆ_upgøde
 = (
mode
 !
LATCH_EX
);

584 
	`W_COERCE
(
the_œtch
.
	`upgøde_if_nŸ_block
(
would_block
));

585 if(
vîbo£
) {

586 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

587 
˚º
 << 
_£lf
 << " upgrade_if_not_block would "

588 << (c⁄° *)(
would_block
?"":" NOT ")

590 << 
__LINE__
 << 
ídl
;

592 if(
would_block
) {

595 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
LATCH_SH
);

596 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() > 0);

597 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() > 0);

598 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

599 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=(
mode
 =
LATCH_EX
));

600 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

601 } if(
is_ªÆ_upgøde
)

604 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
LATCH_EX
);

605 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() == 1);

606 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() == 1);

607 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

608 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
åue
);

609 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

612 
	`w_as£π1
(!
is_ªÆ_upgøde
);

613 
	`w_as£π1
(
mode
 =
LATCH_EX
);

615 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
mode
);

616 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() == 1);

617 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() == 1);

618 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

619 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
åue
);

620 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

623 if(
vîbo£
) {

624 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

625 
˚º
 << 
_£lf
 << "Ü©ch_ªÀa£ @" << 
__LINE__
 << 
ídl
;

628 if–
is_ªÆ_upgøde
 && !
would_block
 ) {

630 
	`w_as£π1
(
the_œtch
.
	`mode
(Ë=
LATCH_EX
);

631 
	`w_as£π1
(
the_œtch
.
	`num_hﬁdîs
() == 1);

632 
	`w_as£π1
(
the_œtch
.
	`œtch_˙t
() == 1);

633 
	`w_as£π1
(
the_œtch
.
	`is_œtched
(Ë=
åue
);

634 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
åue
);

635 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 1);

638 
the_œtch
.
	`œtch_ªÀa£
();

639 
	`yõld
();

641 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
Ál£
);

642 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 0);

645 } if(
would_block
) {

648 
the_œtch
.
	`œtch_ªÀa£
();

649 
	`yõld
();

651 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
Ál£
);

652 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 0);

654 
	`w_as£π1
(!
is_ªÆ_upgøde
);

655 
	`w_as£π1
(!
would_block
);

659 
the_œtch
.
	`œtch_ªÀa£
();

660 
	`yõld
();

662 
	`w_as£π1
(
the_œtch
.
	`is_möe
(Ë=
Ál£
);

663 
	`w_as£π1
(
the_œtch
.
	`hñd_by_me
() == 0);

666 if(
vîbo£
) {

667 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

668 
˚º
 << 
_£lf
 << "ÉndÅe° 3 " << 
i
 << 
ídl
;

672 
	`CRITICAL_SECTION
(
cs
, 
d⁄e_muãx
);

673 
d⁄e_cou¡
++;

675 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
d⁄e
));

676 
	}
}

678 
	gœtch_thªad_t
::
	$ã°4
()

680 
	}
}

682 
œtch_thªad_t
::
	$run
()

684 
œtch_t
::
	`⁄_thªad_öô
(
this
);

685 
ã°num
)

688 
	`ã°1
(-1, 
Æl_sh
);

689 
	`ã°1
(2, 
⁄e_ex
);

690 
	`ã°1
(1, 
⁄e_ex
);

691 
	`ã°1
(0, 
⁄e_ex
);

692 
	`ã°1
(-1, 
Æl_ex
);

696 
	`ã°2
(1, 
LATCH_SH
, LATCH_SH);

697 
	`ã°2
(1, 
LATCH_SH
, 
LATCH_EX
);

698 
	`ã°2
(1, 
LATCH_EX
, LATCH_EX);

714 
	`ã°3
(-1, 
Æl_sh
);

715 
	`ã°3
(2, 
⁄e_ex
);

716 
	`ã°3
(1, 
⁄e_ex
);

717 
	`ã°3
(0, 
⁄e_ex
);

718 
	`ã°3
(-1, 
Æl_ex
);

722 
	`ußge
(
˚º
, 
ã°num
);

727 
	`CRITICAL_SECTION
(
cs
, 
lock
);

728 
hasExôed
 = 
åue
;

730 
œtch_t
::
	`⁄_thªad_de°roy
(
this
);

731 
	}
}

733 
	$sync_Æl
 (
œtch_thªad_t
 **
t
)

736 
	`CRITICAL_SECTION
(
cs
, 
d⁄e_muãx
);

737 
d⁄e_cou¡
=0;

740 if(
vîbo£
) {

741 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

742 
˚º
 << "{ sync_Æ»START syncögáŒ " << 
ídl
;

744 
i
=0; i < 
NUM_THREADS
; i++)

746 
œtch_thªad_t
::
	`sync_Ÿhî
(
t
[
i
]);

749 if(
vîbo£
) {

750 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

751 
˚º
 << "sync_Æ» syn˚dáŒ;áwaôögÅhem " << 
ídl
;

755 
	`CRITICAL_SECTION
(
cs
, 
d⁄e_muãx
);

757 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
d⁄e
, &
d⁄e_muãx
));

758 } 
d⁄e_cou¡
 < 
NUM_THREADS
-1);

761 if(
vîbo£
) {

762 
	`CRITICAL_SECTION
(
cs
, 
¥öt_muãx
);

763  
˚º
 << "sync_Æ» d⁄ê}" << 
ídl
;

765 
	}
}

767 
	$maö
(
¨gc
, ** 
¨gv
)

769 
¨gv0
 = 
¨gv
[0];

770 
îr‹s
=0;

771 
c
;

772 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t:vh")Ë!
EOF
) {

773 
c
) {

775 
vîbo£
=
åue
;

778 
	`ußge
(
cout
, 0);

781 
ã°num
 = 
	`©oi
(
›èrg
);

784 
îr‹s
++;

788 if(
îr‹s
 > 0) {

789 
	`ußge
(
˚º
, 1);

792 
œtch_thªad_t
 **
œtch_thªad
 = 
√w
Ü©ch_thªad_à*[
NUM_THREADS
];

794 
i
;

795 
i
 = 0; i < 
NUM_THREADS
; i++) {

796 
œtch_thªad
[
i
] = 
√w
 
	`œtch_thªad_t
(i);

797 
	`w_as£π1
(
œtch_thªad
[
i
]);

798 
	`W_COERCE
(
œtch_thªad
[
i
]->
	`f‹k
());

800 
ã°num
)

803 
	`sync_Æl
(
œtch_thªad
);

804 
	`sync_Æl
(
œtch_thªad
);

805 
	`sync_Æl
(
œtch_thªad
);

806 
	`sync_Æl
(
œtch_thªad
);

807 
	`sync_Æl
(
œtch_thªad
);

810 
	`sync_Æl
(
œtch_thªad
);

811 
	`sync_Æl
(
œtch_thªad
);

812 
	`sync_Æl
(
œtch_thªad
);

817 
	`sync_Æl
(
œtch_thªad
);

818 
	`sync_Æl
(
œtch_thªad
);

819 
	`sync_Æl
(
œtch_thªad
);

820 
	`sync_Æl
(
œtch_thªad
);

821 
	`sync_Æl
(
œtch_thªad
);

824 
	`ußge
(
˚º
, 
ã°num
);

828 
i
 = 0; i < 
NUM_THREADS
; i++) {

829 
	`W_COERCE
–
œtch_thªad
[
i
]->
	`joö
());

830 
dñëe
 
œtch_thªad
[
i
];

833 
dñëe
 [] 
œtch_thªad
;

836 if(
vîbo£
)

837 
°hªad_t
::
	`dump_°©s
(
cout
);

840 
	}
}

	@src/common/tests/lsns.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

36 
	~<w.h
>

37 
	~<l¢.h
>

39 
	$maö
()

41 
i
=-2; i < 4; i++)

43 
cout
 << 
ídl
;

44 
j
=-2; j<4; j++)

46 
l¢_t
 
	`a
(
i
,
j
);

48 
cout


49 << " i=" << 
i


50 << " j=" << 
j


52 << " vÆid=" << (c⁄° *)(
a
.
	`vÆid
()?"true":"false")

53 << " fûe=" << 
a
.
	`fûe
()

54 << "Ñba=" << 
a
.
	`rba
()

55 << " mask=" << 
a
.
	`mask
()

56 << 
ídl
;

59 
	}
}

	@src/common/tests/mapp.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<w_ba£.h
>

36 
	~<w_gë›t.h
>

37 
	~<basics.h
>

38 
	~<io°ªam
>

40 
	~<°id_t.h
>

41 
	~<m≠
>

42 
	~<£t
>

44 
	g°d
::
	tmu…im≠
<
	t¢um_t
, , 
	tcom∑ª_¢um_t
> 
	tMM
;

45 
	g°d
::
	tmu…i£t
<
	t¢um_t
> 
	tMS
;

48 
	g°d
::
	tm≠
<
	t¢um_t
, > 
	tM
;

49 
	g°d
::
	t£t
<
	t¢um_t
> 
	tS
;

52 
	$dump
(
MM
 &
m
)

54 
cout
 << "---------------------- MULTIMAP:" << 
ídl
;

55 
cout


57 << " sizê" << 
m
.
	`size
(Ë<< 
ídl


58 << 
ídl
;

60 
MM
::
ôî©‹
 
ôî
;

61  
ôî
 = 
m
.
	`begö
(); iã∏!m.
	`íd
(); ++iter ) {

62 
cout
 << "idx: " << 
ôî
->
fú°


63 << " cou¡: " << 
m
.
	`cou¡
(
ôî
->
fú°
)

64 << 
ídl
;

66 
cout
 << "idx: " << 
ôî
->
fú°
 << ", vÆ: " << iãr->
£c⁄d
 << 
ídl
;

68 
	}
}

71 
	$dump
(c⁄° 
MS
 &
m
)

73 
cout
 << "---------------------- MULTISET:" << 
ídl
;

74 
cout


76 << " sizê" << 
m
.
	`size
(Ë<< 
ídl


77 << 
ídl
;

79 
S
::
ôî©‹
 
ôî
;

80  
ôî
 = 
m
.
	`begö
(); iã∏!m.
	`íd
(); ++iter ) {

81 c⁄° 
¢um_t
 
¢um
 = *
ôî
;

82 
cout
 << "idx: " << 
¢um


83 << " cou¡: " << 
m
.
	`cou¡
(
¢um
)

84 << 
ídl
;

86 
	}
}

89 
	$dump
(
M
 &
m
)

91 
cout
 << "------------------- MAP:" << 
ídl
;

93 
M
::
ôî©‹
 
ôî
;

94  
ôî
 = 
m
.
	`begö
(); iã∏!m.
	`íd
(); ++iter ) {

95 
cout
 << "idx: " << 
ôî
->
fú°


96 << " cou¡: " << 
m
.
	`cou¡
(
ôî
->
fú°
)

97 << 
ídl
;

99 
cout
 << "idx: " << 
ôî
->
fú°
 << ", vÆ: " << iãr->
£c⁄d
 << 
ídl
;

101 
cout


103 << " sizê" << 
m
.
	`size
(Ë<< 
ídl


104 << 
ídl
;

105 
	}
}

107 
	$dump
(
S
 &
m
)

109 
cout
 << "---------------------- SET:" << 
ídl
;

110 
cout


112 << " sizê" << 
m
.
	`size
(Ë<< 
ídl


113 << 
ídl
;

115 
S
::
ôî©‹
 
ôî
;

116  
ôî
 = 
m
.
	`begö
(); iã∏!m.
	`íd
(); ++iter ) {

117 c⁄° 
¢um_t
 
¢um
 = *
ôî
;

118 
cout
 << "idx: " << 
¢um


119 << " cou¡: " << 
m
.
	`cou¡
(
¢um
)

120 << 
ídl
;

122 
	}
}

124 
	$maö
(, **)

127 
M
 
m
;

128 
MM
 
mm
;

129 
MS
 
ms
;

130 
S
 
s
;

132 
m
[0] = 100;

133 
m
[0] = 100;

134 
m
[1] = 101;

135 
m
[1] = 101;

136 
m
[2] = 102;

137 
m
[2] = 102;

138 
ã°
=
m
[4];

139 
cout
 << "Åe° " << 
ã°
 << 
ídl
;

140 
	`dump
(
m
);

142 
s
.
	`ö£π
(0);

143 
s
.
	`ö£π
(0);

144 
s
.
	`ö£π
(1);

145 
s
.
	`ö£π
(1);

146 
s
.
	`ö£π
(1);

147 
s
.
	`ö£π
(2);

148 
s
.
	`ö£π
(2);

149 
	`dump
(
s
);

151 
mm
.
	`ö£π
(
°d
::
∑ú
<
¢um_t
, >(0, 100));

152 
mm
.
	`ö£π
(
°d
::
∑ú
<
¢um_t
, >(1, 101));

153 
mm
.
	`ö£π
(
°d
::
∑ú
<
¢um_t
, >(1, 101));

154 
mm
.
	`ö£π
(
°d
::
∑ú
<
¢um_t
, >(1, 101));

155 
mm
.
	`ö£π
(
°d
::
∑ú
<
¢um_t
, >(2, 102));

156 
	`dump
(
mm
);

158 
ms
.
	`ö£π
(0);

159 
ms
.
	`ö£π
(0);

160 
ms
.
	`ö£π
(1);

161 
ms
.
	`ö£π
(1);

162 
ms
.
	`ö£π
(1);

163 
ms
.
	`ö£π
(2);

164 
ms
.
	`ö£π
(2);

165 
	`dump
(
ms
);

168 
	}
}

	@src/common/tests/opaque.cpp

30 
	~"w_deföes.h
"

34 
	~<basics.h
>

35 
	~<ˇs£π
>

36 
	~<tid_t.h
>

38 
	~<io°ªam
>

40 #ifde‡
__GNUG__


41 
ãm∂©e
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &, c⁄° 
	g›aque_qu™tôy
<
	gmax_£rvî_h™dÀ_Àn
> &);

45 
	$maö
()

49 
dummy
[500];

51 *
d
 = &
dummy
[3];

52 
£rvî_h™dÀ_t
 *
s
 = 0;

54 
	`j
(0);

55 &
k
 = *((*)&
dummy
[3]);

56 * 
junk
 = (*)&
k
;

58 
	`mem˝y
(
junk
, &
j
, (j));

59 
	`mem˝y
(&
dummy
[3], &
j
, (j));

63 
s
 = (
£rvî_h™dÀ_t
 *)
dummy
;

64 *
s
 = "COPY";

65 
£rvî_h™dÀ_t
 &
th
 = *
s
;

66 
£rvî_h™dÀ_t
 
ch
 = 
th
;

67 
cout
 << "vÆuêo‡ch = " << 
ch
 << 
ídl
;

68 
cout
 << "Àngth o‡ch = " << 
ch
.
	`Àngth
(Ë<< 
ídl
;

71 
s
 = (
£rvî_h™dÀ_t
 *)
dummy
;

72 *
s
 = "ALIGNED";

74 
˚º
 << "“Ÿá¿îr‹: )addªs†o‡†" << 
	`W_ADDR
(
s
Ë<< 
ídl
;

75 
cout
 << "vÆuêo‡†" << *
s
 << 
ídl
;

76 
cout
 << "Àngth o‡†" << 
s
->
	`Àngth
(Ë<< 
ídl
;

80 
s
 = (
£rvî_h™dÀ_t
 *)
d
;

81 *
s
 = "NOTALIGNED";

82 
˚º
 << "“Ÿá¿îr‹: )addªs†o‡†" << 
	`W_ADDR
(
s
Ë<< 
ídl
;

83 
cout
 << "vÆuêo‡†" << *
s
 << 
ídl
;

84 
cout
 << "Àngth o‡†" << 
s
->
	`Àngth
(Ë<< 
ídl
;

88 
s
 = (
£rvî_h™dÀ_t
 *)
dummy
;

89 *
s
 = "BYTEORDER";

90 
cout
 << "vÆuêo‡†" << *
s
 << 
ídl
;

91 
cout
 << "Àngth o‡†" << 
s
->
	`Àngth
(Ë<< 
ídl
;

92 
s
->
	`ht⁄
();

94 
˚º
 << "ht⁄Üígth o‡†" << 
hex
 << 
s
->
	`Àngth
(Ë<< 
ídl
;

96 
cout
 << "hton bytes of s = ";

99 
uöt4_t
 
l
;

100 
uöt1_t
 
c
[4];

101 } 
un
;

102 
un
.
l
 = 
s
->
	`Àngth
();

103 
i
 = 0; i < (
un
.
c
); i++)

104 
cout
 << ' ' << 
hex
 << (Ë
un
.
c
[
i
];

105 
cout
 << 
ídl
;

107 
s
->
	`¡oh
();

108 
cout
 << "¡ohÜígth o‡†" << 
hex
 << 
s
->
	`Àngth
(Ë<< 
ídl
;

112 
tid_t
 
unöô
;

113 
tid_t
 
t1
 = 
unöô
;

114 
tid_t
 
t2
 = 
	`tid_t
();

115 
tid_t
 
t3
 = 
t2
;

116 
t3
 = 
t1
;

120 
	}
}

	@src/common/tests/vectors.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<basics.h
>

36 
	~<vec_t.h
>

37 
	~<w_debug.h
>

39 
	~<io°ªam
>

40 
	~<w_°r°ªam.h
>

42 c⁄° *
	gd
 = "dddddddddd";

43 c⁄° *
	gdjunk
 = "Djunk";

44 c⁄° *
	gb
 = "bbbbbbbbbb";

45 c⁄° *
	gbjunk
 = "Bjunk";

46 c⁄° *
	gc
 = "cccccccccc";

47 c⁄° *
	gcjunk
 = "Cjunk";

48 c⁄° *
	ga
 = "aaaaaaaaaa";

49 c⁄° *
	gajunk
 = "Ajunk";

51 
	$V
(c⁄° 
vec_t
 &
a
, 
b
, 
c
, vec_à&
d
)

54 
	`DBG
(<<"*******BEGIN TEST(" << 
b
 << "," << 
c
 << ")");

56 
l
 = 0;Ü<100;Ü++) {

57 if(
c
 > (Ë
a
.
	`size
()) ;

58 
a
.
	`mkchunk
(
b
, 
c
, 
d
);

60 
c
+=
b
;

62 
	`DBG
(<<"*******END TEST");

63 
	}
}

66 
	$P
(c⁄° *
s
)

68 
w_i°r°ªam
 
	`™⁄
(
s
);

70 
vec_t
 
t
;

71 
cout
 << "P:" << 
s
 << 
ídl
;

72 
™⁄
 >> 
t
;

74 
cout
 << "öpuà›î©‹:" << 
ídl
;

76 
cout
 << "ouçuà›î©‹:" << 
ídl
;

77 
cout
 << 
t
;

78 
cout
 << 
ídl
;

80 
t
.
	`vecdñ∑πs
();

82 
	}
}

84 
	$maö
()

86 
vec_t
 
ã°
;

87 
vec_t
 
tout
;

89 
	#TD
(
i
,
j
Ë
ã°
.
	`put
(&
d
[i], j);

	)

90 
	#TB
(
i
,
j
Ë
ã°
.
	`put
(&
b
[i], j);

	)

91 
	#TA
(
i
,
j
Ë
ã°
.
	`put
(&
a
[i], j);

	)

92 
	#TC
(
i
,
j
Ë
ã°
.
	`put
(&
c
[i], j);

	)

94 
	`TA
(0,10);

95 
	`TB
(0,10);

96 
	`TC
(0,10);

97 
	`TD
(0,10);

100 
	`V
(
ã°
, 5, 7, 
tout
);

101 
	`V
(
ã°
, 5, 10, 
tout
);

102 
	`V
(
ã°
, 5, 22, 
tout
);

104 
	`V
(
ã°
, 11, 0, 
tout
);

105 
	`V
(
ã°
, 11, 7, 
tout
);

106 
	`V
(
ã°
, 11, 9, 
tout
);

108 
	`V
(
ã°
, 30, 9, 
tout
);

109 
	`V
(
ã°
, 30, 29, 
tout
);

110 
	`V
(
ã°
, 30, 40, 
tout
);

111 
	`V
(
ã°
, 40, 30, 
tout
);

113 
	`V
(
ã°
, 100, 9, 
tout
);

115 
	`P
("{ {1 \"}\" }");

117 
	`P
("{ {3 \"}}}\" }}");

118 
	`P
("{ {30 \"xxxxxxxxxxyyyyyyyyyyzzzzzzzzzz\"} }");

119 
	`P
("{ {30 \"xxxxxxxxxxyyyyyyyyyyzzzzzzzzzz\"}{10 \"abcdefghij\"} }");

122 
vec_t
 
t
;

123 
t
.
	`ª£t
();

124 
t
.
	`put
("abc",3);

125 
cout
 << "FINAL: "<< 
t
 << 
ídl
;

129 
cout
 << "ZVECS: " << 
ídl
;

132 
zvec_t
 
	`z
(0);

133 
cout
 << "z(0).cou¡(Ë" << 
z
.
	`cou¡
(Ë<< 
ídl
;

134 
cout
 << "z(0Ëi†zîÿvec: " << 
z
.
	`is_zvec
(Ë<< 
ídl
;

135 
vec_t
 
zv
;

136 
zv
.
	`£t
(
z
);

137 
cout
 << "zv.£t(z).cou¡(Ë" << 
zv
.
	`cou¡
(Ë<< 
ídl
;

138 
cout
 << "zv i†zîÿvec: " << 
zv
.
	`is_zvec
(Ë<< 
ídl
;

141 
zvec_t
 
z
;

142 
cout
 << "z i†zîÿvec: " << 
z
.
	`is_zvec
(Ë<< 
ídl
;

143 
cout
 << "z.cou¡(Ë" << 
z
.
	`cou¡
(Ë<< 
ídl
;

144 
vec_t
 
zv
;

145 
zv
.
	`£t
(
z
);

146 
cout
 << "zv.£t(z).cou¡(Ë" << 
zv
.
	`cou¡
(Ë<< 
ídl
;

147 
cout
 << "zv(0Ëi†zîÿvec: " << 
zv
.
	`is_zvec
(Ë<< 
ídl
;

155 #ifde‡
WORDS_BIGENDIAN


156 
n
 = 0x03000080;

157 
m
 = 0xfcffffef;

159 
n
 = 0x80000003;

160 
m
 = 0xeffffffc;

162 
vec_t
 
	`num
–(*)&
n
, (n));

163 
vec_t
 
	`num2
–(*)&
m
, (m));

165 
cout
 << "vec containing 0x80000003 (little-endian)"

166 << "Öröt†as: " << 
num
 << 
ídl
;

168 
cout
 << "vec containing 0xeffffffc (little-endian)"

169 << "Öröt†as: " << 
num2
 << 
ídl
;

175 
c
 = 'h';

176 
œ°
 = ()'\377';

177 
œ°1
 = '\377';

178 
œ°2
 = ()0xff;

180 
vec_t
 
	`cv
–(*)&
c
, (c));

181 
vec_t
 
	`œ°v
–(*)&
œ°
, (last));

182 
vec_t
 
	`œ°1v
–(*)&
œ°1
, (last1));

183 
vec_t
 
	`œ°2v
–(*)&
œ°2
, (last2));

185 
boﬁ
 
ªsu…
 = (boﬁ)(
cv
 < 
œ°v
);

186 
cout
 << "cv <œ°v: " << 
ªsu…
 << 
ídl
;

187 
cout
 << "cvÖröt†as: " << 
cv
 <<
ídl
;

188 
cout
 << "œ°vÖröt†as: " << 
œ°v
 <<
ídl
;

189 
cout
 << "œ°1Öröt†as: " << 
œ°1v
 <<
ídl
;

190 
cout
 << "œ°2Öröt†as: " << 
œ°2v
 <<
ídl
;

193 
	}
}

	@src/common/tid_t.cpp

30 
	~"w_deföes.h
"

34 #ifde‡
__GNUG__


35 #¥agm®
im∂emíèti⁄
 "tid_t.h"

38 
	~<w_°ªam.h
>

39 
	~"basics.h
"

40 
	~"tid_t.h
"

42 c⁄° 
tid_t
 
	gtid_t
::
nuŒ
(0, 0);

43 c⁄° 
tid_t
 
	gtid_t
::
Max
—id_t::
hwm
,Åid_t::hwm);

45 #ifde‡
EXPLICIT_TEMPLATE


46 
ãm∂©e
 
˛ass
 
	g›aque_qu™tôy
<
	gmax_gtid_Àn
>;

47 
ãm∂©e
 
˛ass
 
	g›aque_qu™tôy
<
	gmax_£rvî_h™dÀ_Àn
>;

49 
ãm∂©e
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &, c⁄° 
	g›aque_qu™tôy
<
	gmax_gtid_Àn
> &);

50 
ãm∂©e
 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
max_gtid_Àn
> &,

51 c⁄° 
	g›aque_qu™tôy
<
	gmax_gtid_Àn
> &);

52 
ãm∂©e
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &, c⁄° 
	g›aque_qu™tôy
<
	gmax_£rvî_h™dÀ_Àn
> &);

53 
ãm∂©e
 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
max_£rvî_h™dÀ_Àn
> &,

54 c⁄° 
	g›aque_qu™tôy
<
	gmax_£rvî_h™dÀ_Àn
> &);

57 #ifde‡
VCPP_BUG_3


59 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
max_gtid_Àn
> &
l
, c⁄° 
	g›aque_qu™tôy
 <
	gmax_gtid_Àn
> &
	gr
)

61  ((
	gl
.
	g_Àngth
==
r
.
_Àngth
) &&

62 (
memcmp
(
l
.
_›aque
,
r
._›aque,l.
_Àngth
)==0));

64 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
max_£rvî_h™dÀ_Àn
> &
l
, c⁄° 
	g›aque_qu™tôy
 <
	gmax_£rvî_h™dÀ_Àn
> &
	gr
)

66  ((
	gl
.
	g_Àngth
==
r
.
_Àngth
) &&

67 (
memcmp
(
l
.
_›aque
,
r
._›aque,l.
_Àngth
)==0));

70 
	go°ªam
 &

71 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	g›aque_qu™tôy
<
	gmax_£rvî_h™dÀ_Àn
> &
	gb
)

73  
	gb
.
¥öt
(
o
);

76 
	go°ªam
 &

77 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	g›aque_qu™tôy
<
	gmax_gtid_Àn
> &
	gb
)

79  
	gb
.
¥öt
(
o
);

	@src/common/tid_t.h

54 #i‚de‡
TID_T_H


55 
	#TID_T_H


	)

57 
	~"w_deföes.h
"

61 
	~"©omic_ãm∂©es.h
"

63 #ifde‡
__GNUG__


64 #¥agm®
öãrÁ˚


82 ˛as†
	ctid_t
 {

83 
	mpublic
:

84 
uöt64_t
 
	td©um_t
;

85 íum { 
	mhwm
 = 
max_uöt4
 };

87 
	$tid_t
(Ë: 
	$_d©a
(0Ë{ 
	}
}

88 
	$tid_t
(
uöt4_t
 
l
, uöt4_à
h
Ë: 
	`_d©a
–(((
d©um_t
ËhË<< 32Ë|Ü ) { 
	}
}

89 
	$tid_t
(
d©um_t
 
x
Ë: 
	$_d©a
(
x
Ë{ 
	}
}

91 
uöt4_t
 
	$gë_hi
(Ëc⁄° {  (
uöt4_t
Ë(
_d©a
 >> 32); 
	}
}

92 
uöt4_t
 
	$gë_lo
(Ëc⁄° {  (
uöt4_t
Ë
_d©a
; 
	}
}

93 
uöt8_t
 
	$gë_vÆue
(Ëc⁄° {  
_d©a
; 
	}
}

95 
	gtid_t
& 
	g›î©‹
=(c⁄° 
tid_t
& 
t
) {

96 
_d©a
 = 
t
._data;

97  *
	gthis
;

100 
boﬁ
 
	$övÆid
(Ëvﬁ©ûêc⁄° {  
_d©a
 =0; 
	}
}

102 
tid_t
 
	$√xt
() const {

103 
tid_t
 
rvÆ
;

104 
rvÆ
.
_d©a
 = _data+1;

105  
rvÆ
;

106 
	}
}

107 
tid_t
 
	$¥ev
() const {

108 
tid_t
 
rvÆ
;

109 
rvÆ
.
_d©a
 = _data-1;

110  
rvÆ
;

111 
	}
}

113 
d©um_t
 
	$©omic_ö¸
() {

114  
	`©omic_öc_nv
(
_d©a
);

115 
	}
}

116 
	gtid_t
 &
	$©omic_assign_max
(c⁄° 
tid_t
 &
tid
) {

117 
d©um_t
 
ﬁd_vÆue
 = 
_d©a
;

118 
tid
.
_d©a
 > 
ﬁd_vÆue
) {

119 
d©um_t
 
cur_vÆue
 = 
	`©omic_ˇs_64
(&
_d©a
, 
ﬁd_vÆue
, 
tid
._data);

120 
ﬁd_vÆue
 = 
cur_vÆue
;

122  *
this
;

123 
	}
}

124 
	gtid_t
 &
	$©omic_assign_mö
(c⁄° 
tid_t
 &
tid
) {

125 
d©um_t
 
ﬁd_vÆue
 = 
_d©a
;

126 
tid
.
_d©a
 < 
ﬁd_vÆue
) {

127 
d©um_t
 
cur_vÆue
 = 
	`©omic_ˇs_64
(&
_d©a
, 
ﬁd_vÆue
, 
tid
._data);

128 
ﬁd_vÆue
 = 
cur_vÆue
;

130  *
this
;

131 
	}
}

133 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
tid_t
& 
tid
) const {

134  
_d©a
 =
tid
._data;

136 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
tid_t
& 
tid
) const {

137  !(*
this
 =
tid
);

139 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gtid_t
& 
	gtid
) const {

140  
	g_d©a
 < 
	gtid
._data;

142 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° 
tid_t
& 
tid
) const {

143  !(
tid
 < *
this
);

145 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° 
	gtid_t
& 
	gtid
) const {

146  (
	gtid
 < *
	gthis
);

148 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° 
tid_t
& 
tid
) const {

149  !(*
this
 < 
tid
);

152 c⁄° 
tid_t
 
	gMax
;

153 c⁄° 
tid_t
 
	gnuŒ
;

155 
	g¥iv©e
:

157 
d©um_t
 
_d©a
;

166 #ifde‡
COMMON_GTID_LENGTH


167 
	#max_gtid_Àn
 
COMMON_GTID_LENGTH


	)

169 
	#max_gtid_Àn
 96

	)

172 #ifde‡
COMMON_SERVER_HANDLE_LENGTH


173 
	#max_£rvî_h™dÀ_Àn
 
COMMON_SERVER_HANDLE_LENGTH


	)

175 
	#max_£rvî_h™dÀ_Àn
 96

	)

179 
	~<w_°ªam.h
>

181 
ölöe
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gtid_t
& 
	gt
)

183  
	go
 << 
	gt
.
gë_hi
(Ë<< '.' <<Å.
gë_lo
();

186 
ölöe
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gtid_t
& 
	gt
)

188 
	gch
;

189 
uöt4_t
 
	gh
, 
	gl
;

190 
	gi
 >> 
	gh
 >> 
	gch
 >> 
	gl
;

191 
	gt
 = 
tid_t
(
l
,
h
);

192  
	gi
;

196 
	~"w_›aque.h
"

201 
	g›aque_qu™tôy
<
	tmax_gtid_Àn
> 
	tgtid_t
;

205 
	g›aque_qu™tôy
<
	tmax_£rvî_h™dÀ_Àn
> 
	t£rvî_h™dÀ_t
;

	@src/common/umemcmp.h

30 #i‚de‡
UMEMCMP_H


31 
	#UMEMCMP_H


	)

33 
	~"w_deföes.h
"

46 
	~<as£π.h
>

47 
	~<w_ba£.h
>

49 #i‚de‡
W_WORKAROUND_H


50 
	~<w_w‹k¨ound.h
>

54 
ölöe
 
	$__umemcmp
(c⁄° * 
p
, c⁄° * 
q
, 
n
)

56 
i
;

57 
i
 = 0; (ò< 
n
Ë&& (*
p
 =*
q
); i++,Ö++, q++) ;

58  (
i
 < 
n
Ë? *
p
 - *
q
 : 0;

59 
	}
}

69 #i‡
deföed
(
COMMON_USE_UMEMCMP
Ë|| deföed(
S∑rc
)

71 
ölöe
 
uöt
 
	$öt_Æignmít_check
(c⁄° *
i
)

73 
uöt
 
tmp
 = (
±rdiff_t
Ë
i
 & (()-1);

74 
	`w_as£π9
(
tmp
 =(
±rdiff_t
Ë
i
 % ());

75  
tmp
;

76 
	}
}

77 
ölöe
 
boﬁ
 
	$is_öt_Æig√d
(c⁄° *
i
)

79  
	`öt_Æignmít_check
(
i
) == 0;

80 
	}
}

84 
ölöe
 
	$umemcmp_sm¨t
(c⁄° * 
p_
, c⁄° * 
q_
, 
n
)

86 c⁄° * 
p
 = (c⁄° *)
p_
;

87 c⁄° * 
q
 = (c⁄° *)
q_
;

90 i‡(
n
 < ()(2*()))

91  
	`__umemcmp
(
p
, 
q
, 
n
);

94 i‡(
	`öt_Æignmít_check
(
p
Ë=öt_Æignmít_check(
q
)) {

95 i‡(!
	`is_öt_Æig√d
(
p
)) {

97  
	`__umemcmp
(
p
, 
q
, 
n
);

101 
uöt
 
i
;

102 
i
 = 0; i < 
n
/(); i++) {

103 i‡(((*)
p
)[
i
] !((*)
q
)[i]) {

104  (((*)
p
)[
i
] > ((*)
q
)[i]) ? 1 : -1;

108 
j
 = 
i
*();

109 i‡(
j
Ë 
	`__umemcmp
(
p
+j, 
q
+j, 
n
-j);

112  
	`__umemcmp
(
p
, 
q
, 
n
);

115 
	}
}

117 
ölöe
 
	$umemcmp_ﬁd
(c⁄° * 
p
, c⁄° * 
q
, 
n
)

119  
	`__umemcmp
((*)
p
, (*)
q
, 
n
);

120 
	}
}

122 
ölöe
 
	$umemcmp
(c⁄° * 
p
, c⁄° * 
q
, 
n
)

124 #i‡
W_DEBUG_LEVEL
 > 2

126 
t1
 = 
	`umemcmp_sm¨t
(
p
, 
q
, 
n
);

127 
t2
 = 
	`__umemcmp
((*)
p
, (*)
q
, 
n
);

128 
	`as£π
(
t1
 =
t2
 || (t1 < 0 &&Å2 < 0) || (t1 > 0 &&Å2 > 0));

129  
t1
;

131  
	`umemcmp_sm¨t
(
p
, 
q
, 
n
);

133 
	}
}

137 
ölöe
 
	$umemcmp
(c⁄° * 
p
, c⁄° * 
q
, 
n
)

139 #i‡
W_DEBUG_LEVEL
 > 2

141 
t1
 = 
	`memcmp
(
p
, 
q
, 
n
);

142 
t2
 = 
	`__umemcmp
((*)
p
, (*)
q
, 
n
);

143 
	`w_as£π3
(
t1
 =
t2
 || (t1 < 0 &&Å2 < 0) || (t1 > 0 &&Å2 > 0));

144  
t1
;

146  
	`memcmp
(
p
, 
q
, 
n
);

148 
	}
}

	@src/common/vec_mkchunk.cpp

30 
	~"w_deföes.h
"

35 #ifde‡
__GNUC__


36 #¥agm®
im∂emíèti⁄


39 
	#VEC_T_C


	)

40 
	~<c°dlib
>

41 
	~<w_°ªam.h
>

42 
	~<w_ba£.h
>

43 
	~<w_mömax.h
>

44 
	~"basics.h
"

45 
	~"vec_t.h
"

46 
	~"umemcmp.h
"

47 
	~"w_debug.h
"

65 
	gvec_t
::
	$mkchunk
(

66 
maxsize
,

67 
off£t
,

68 
vec_t
 &
ªsu…


71 
i
;

73 
	`w_as£π1
–
_ba£
[0].
±r
 !
zîo_loˇti⁄
 );

75 
	`DBG
(<<"off£à" << 
off£t
 << " in vector :");

76 
ªsu…
.
	`ª£t
();

81 
fú°_chunk
=0, 
fú°_chunk_off£t
=0, 
fú°_chunk_Àn
=0;

84 
skù≥d
=0, 
skùpög
;

86 
i
=0; i<
this
->
	`cou¡
(); i++) {

87 
skùpög
 = 
this
->
	`Àn
(
i
);

88 if(
skù≥d
 + 
skùpög
 > 
off£t
) {

90 
fú°_chunk
 = 
i
;

91 
fú°_chunk_off£t
 = 
off£t
 - 
skù≥d
;

92 
fú°_chunk_Àn
 = 
skùpög
 - 
fú°_chunk_off£t
;

93 if(
fú°_chunk_Àn
 > 
maxsize
) {

94 
fú°_chunk_Àn
 = 
maxsize
;

97 
	`DBG
(<<"puà" << 
	`W_ADDR
(
this
->
	`±r
(
i
)) <<

98 "+" << 
fú°_chunk_off£t
 << ", " << 
fú°_chunk_Àn
);

100 
ªsu…
.
	`put
((*)
this
->
	`±r
(
i
)+
fú°_chunk_off£t
,
fú°_chunk_Àn
);

103 
skù≥d
 +
skùpög
;

105 if(
fú°_chunk_Àn
 == 0) ;

108 if(
fú°_chunk_Àn
 < 
maxsize
) {

110 
u£d
, 
is_usög
 ;

112 
u£d
 = 
fú°_chunk_Àn
;

113 
i
=
fú°_chunk
+1; i<
this
->
	`cou¡
(); i++) {

114 
is_usög
 = 
this
->
	`Àn
(
i
);

115 if(
u£d
 + 
is_usög
 <
maxsize
) {

117 
u£d
 +
is_usög
;

119 
	`DBG
(<<"puà" << 
	`W_ADDR
(
this
->
	`±r
(
i
)Ë<< ", " << 
is_usög
);

120 
ªsu…
.
	`put
(
this
->
	`±r
(
i
),
is_usög
);

123 
ªsu…
.
	`put
(
this
->
	`±r
(
i
),
maxsize
-
u£d
);

124 
u£d
 = 
maxsize
;

129 
	}
}

	@src/common/vec_t.cpp

53 
	~"w_deföes.h
"

57 #ifde‡
__GNUC__


58 #¥agm®
im∂emíèti⁄
 "vec_t.h"

61 
	#VEC_T_C


	)

62 
	~<c°dlib
>

63 
	~<c°rög
>

64 
	~<w_°ªam.h
>

65 
	~<w_ba£.h
>

66 
	~<w_mömax.h
>

67 
	~"basics.h
"

68 
	~"vec_t.h
"

69 
	~"umemcmp.h
"

72 #ifde‡
EXPLICIT_TEMPLATE


75 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gcvec_t
>;

76 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gvec_t
>;

81 
cvec_t
 
	gcvec_t
::
pos_öf
;

82 
cvec_t
 
	gcvec_t
::
√g_öf
;

83 
CADDR_T
 
	gcvec_t
::
zîo_loˇti⁄
=(CADDR_T)&(
cvec_t
::
√g_öf
);

84 
	gvec_t
& vec_t::
pos_öf
 = *(
vec_t
*Ë&
cvec_t
::pos_inf;

85 
	gvec_t
& vec_t::
√g_öf
 = *(
vec_t
*Ë&
cvec_t
::neg_inf;

87 
	gcvec_t
::
	$cvec_t
(c⁄° 
cvec_t
& )

89 
˚º
 << "cvec_t: dißbÀd membî cÆÀd" << 
ídl
;

90 
˚º
 << "Áûedáà\"" << 
__FILE__
 << ":" << 
__LINE__


91 << "\"" << 
ídl
;

92 
	`ab‹t
();

93 
	}
}

95 
	gcvec_t
::~
	$cvec_t
()

97 i‡(
	`_is_œrge
()) {

98 
	`‰ì
(
_ba£
);

100 
	}
}

102 
	gcvec_t
::
	$•lô
(
size_t
 
l1
, 
cvec_t
& 
v1
, cvec_t& 
v2
) const

104 
size_t
 
mö
 = 0;

105 
i
;

106 
i
 = 0; i < 
_˙t
; i++) {

107 i‡(
l1
 > 0) {

108 
mö
 = (
_ba£
[
i
].
Àn
 > 
l1
) ?Ü1 : _base[i].len;

109 
v1
.
	`put
(
_ba£
[
i
].
±r
, 
mö
);

110 
l1
 -
mö
;

112 i‡(
l1
 <= 0) ;

115  ; 
i
 < 
_˙t
; i++) {

116 
v2
.
	`put
(
_ba£
[
i
].
±r
 + 
mö
, _ba£[i].
Àn
 - min);

117 
mö
 = 0;

119 
	}
}

121 
	gcvec_t
& cvec_t::
	$put
(c⁄° 
cvec_t
& 
v
, 
size_t
 
°¨t
, size_à
num_byãs
)

123 
i
;

124 
size_t
 
°¨t_byã
, 
°¨t_ñem
, 
tŸÆ
;

126 i‡(
v
.
	`size
(Ë< 
°¨t
+
num_byãs
) {

127 
	`w_as£π3
(
v
.
	`size
(Ë>
°¨t
+
num_byãs
 );

131 
i
 = 0, 
tŸÆ
 = 0; i < 
v
.
_˙t
 &&ÅŸÆ <
°¨t
; i++) {

132 
tŸÆ
 +
v
.
_ba£
[
i
].
Àn
;

136 i‡(
_˙t
+
v
._˙à> 
max_smÆl
) {

137 
	`_grow
(
_˙t
+
v
._cnt);

140 
°¨t_ñem
 = 
i
-1;

142 
°¨t_byã
 = 
°¨t
 - (
tŸÆ
 - 
v
.
_ba£
[
°¨t_ñem
].
Àn
);

145 
_ba£
[
_˙t
].
±r
 = 
v
._ba£[
°¨t_ñem
].±r+
°¨t_byã
;

146 
_ba£
[
_˙t
].
Àn
 = 
v
._ba£[
°¨t_ñem
].Àn-
°¨t_byã
;

147 
_˙t
++;

148 
	`w_as£π3
(
_˙t
 <
	`_max_˙t
());

149 
i
 = 1, 
tŸÆ
 = 
_ba£
[
_˙t
-1].
Àn
;ÅŸÆ < 
num_byãs
; i++) {

150 
_ba£
[
_˙t
].
±r
 = 
v
._ba£[
°¨t_ñem
+
i
].ptr;

151 
_ba£
[
_˙t
].
Àn
 = 
v
._ba£[
°¨t_ñem
+
i
].len;

152 
tŸÆ
 +
_ba£
[
_˙t
++].
Àn
;

153 
	`w_as£π3
(
_˙t
 <
	`_max_˙t
());

155 
_ba£
[
_˙t
 - 1].
Àn
 -
tŸÆ
-
num_byãs
;

157 
_size
 +
num_byãs
;

158 
	`w_as£π3
(
	`check_size
());

159  *
this
;

160 
	}
}

162 
	gcvec_t
& cvec_t::
	$put
(c⁄° * 
p
, 
size_t
 
l
)

164 i‡(
_˙t
+1 > 
max_smÆl
) {

165 
	`_grow
(
_˙t
+1);

169 
_ba£
[
_˙t
].
±r
 = (*)
p
;

170 
_ba£
[
_˙t
].
Àn
 = 
l
;

171 if(
l
>0) {

172 
_˙t
++;

173 
	`w_as£π3
(
_˙t
 <
	`_max_˙t
());

174 
_size
 +
l
;

176  *
this
;

177 
	}
}

179 
boﬁ
 
	gcvec_t
::
	$check_size
() const

181 
	`w_as£π1
(
_size
 =
	`ªˇlc_size
());

182  
åue
;

183 
	}
}

185 
size_t
 
	gcvec_t
::
	$ªˇlc_size
() const

188 
size_t
 
l
;

189 
i
;

190 
i
 = 0, 
l
 = 0; i < 
_˙t
;Ü +
_ba£
[i++].
Àn
) ;

191  
l
;

192 
	}
}

201 c⁄° 
	gvec_t
& vec_t::
	$c›y_‰om
(

202 c⁄° * 
p
,

203 
size_t
 
limô
,

204 
size_t
 
off£t
) const

206 
	`w_as£π1
(! 
	`is_pos_öf
(Ë&& ! 
	`is_√g_öf
(Ë&& !
	`is_nuŒ
() );

207 
	`w_as£π1
–
_ba£
[0].
±r
 !
zîo_loˇti⁄
 );

209 * 
s
 = (*Ë
p
;

210 
i
 = 0; (ò< 
_˙t
Ë&& (
limô
>0); i++) {

211 i‡–
off£t
 < 
_ba£
[
i
].
Àn
 ) {

212 
size_t
 
ñemÀn
 = ((
_ba£
[
i
].
Àn
 - 
off£t
 > 
limô
)?

213 
limô
 : (
_ba£
[
i
].
Àn
 - 
off£t
)) ;

214 
	`mem˝y
((*)
_ba£
[
i
].
±r
 + 
off£t
, 
s
, 
ñemÀn
);

215 
	`w_as£π3
(
limô
 >
ñemÀn
);

216 
limô
 -
ñemÀn
;

217 
s
 +
ñemÀn
;

219 i‡(
_ba£
[
i
].
Àn
 > 
off£t
) {

220 
off£t
 = 0;

222 
off£t
 -
_ba£
[
i
].
Àn
;

225  *
this
;

226 
	}
}

229 
size_t
 
	gcvec_t
::
	$c›y_to
(* 
p
, 
size_t
 
limô
) const

231 
	`w_as£π1
(! 
	`is_pos_öf
(Ë&& ! 
	`is_√g_öf
() );

232 * 
s
 = (*Ë
p
;

233 
i
 = 0; i < 
_˙t
 && 
limô
 > 0; i++) {

234 
size_t
 
n
 = 
limô
 > 
_ba£
[
i
].
Àn
 ? _base[i].len :Üimit;

235 if(
_ba£
[
i
].
±r
 =
zîo_loˇti⁄
) {

236 
	`mem£t
(
s
, '\0', 
n
);

238 
	`mem˝y
(
s
, 
_ba£
[
i
].
±r
, 
n
);

240 
	`w_as£π3
(
limô
 >
n
);

241 
limô
 -
n
;

242 
s
 +
n
;

244  
s
 - (*)
p
;

245 
	}
}

248 
	gvec_t
& vec_t::
	$c›y_‰om
(c⁄° 
cvec_t
& 
s
)

250 
boﬁ
 
zîoög
=
Ál£
;

251 
j
 = 0;

252 * 
p
 = (*Ë
_ba£
[
j
].
±r
;

253 
size_t
 
l
 = 
_ba£
[
j
].
Àn
;

255 
	`w_as£π1
(
	`size
(Ë>
s
.size());

256 
	`w_as£π1
(
_ba£
[0].
±r
 !
zîo_loˇti⁄
);

258 
i
 = 0; i < 
s
.
_˙t
; i++) {

259 c⁄° * 
µ
 = 
s
.
_ba£
[
i
].
±r
;

260 if(
µ
 =
zîo_loˇti⁄
Ë
zîoög
 = 
åue
;

261 
size_t
 
À·
 = 
s
.
_ba£
[
i
].
Àn
;

262 
l
 <
À·
 && 
j
 < 
_˙t
) {

263 if–
zîoög
) {

264 
	`mem£t
(
p
, '\0', 
l
);

266 
	`mem˝y
(
p
, 
µ
, 
l
);

268 
µ
 +
l
;

269 
À·
 -
l
;

270 
j
++;

271 i‡(
j
 >
_˙t
) ;

272 
l
 = 
_ba£
[
j
].
Àn
;

273 
p
 = (*Ë
_ba£
[
j
].
±r
;

275 i‡(
À·
) {

276 if–
zîoög
) {

277 
	`mem£t
(
p
, '\0', 
À·
);

279 
	`mem˝y
(
p
, 
µ
, 
À·
);

281 
µ
 +
À·
;

282 
	`w_as£π3
(
l
 >
À·
);

283 
l
 -
À·
;

286  *
this
;

287 
	}
}

289 
	gvec_t
& vec_t::
	$c›y_‰om
(c⁄° 
cvec_t
& 
ss
, 
size_t
 
off£t
, size_à
limô
, size_à
myoff£t
)

291 
boﬁ
 
zîoög
=
Ál£
;

292 
vec_t
 
s
;

293 
s
.
	`put
(
ss
, 
off£t
, 
limô
);

295 
	`w_as£π1
(
	`size
(Ë>
s
.size());

296 
	`w_as£π1
(
_ba£
[0].
±r
 !
zîo_loˇti⁄
);

298 
size_t
 
ssz
 = 
s
.
	`size
(), 
dsz
 = size();

299 i‡(
off£t
 > 
ssz
) offset = ssz;

300 i‡(
limô
 > 
ssz
 - 
off£t
)Üimit = ssz - offset;

301 i‡(
myoff£t
 > 
dsz
Ë
off£t
 = dsz;

303 
j
;

304 
j
 = 0; j < 
_˙t
; j++) {

305 i‡(
myoff£t
 > 
_ba£
[
j
].
Àn
)

306 
myoff£t
 -
_ba£
[
j
].
Àn
;

310 * 
p
 = ((*)
_ba£
[
j
].
±r
Ë+ 
myoff£t
;

311 
size_t
 
l
 = 
_ba£
[
j
].
Àn
 - 
myoff£t
;

313 
	`w_as£π1
(
dsz
 <
limô
);

315 
size_t
 
d⁄e
;

316 
i
;

317 
i
 = 0, 
d⁄e
 = 0; i < 
s
.
_˙t
 && d⁄ê< 
limô
; i++) {

318 c⁄° * 
µ
 = 
s
.
_ba£
[
i
].
±r
;

319 if(
µ
 =
zîo_loˇti⁄
Ë
zîoög
 = 
åue
;

320 
size_t
 
À·
 = 
s
.
_ba£
[
i
].
Àn
;

321 i‡(
limô
 - 
d⁄e
 < 
À·
)Üeft =Üimit - done;

322 
l
 < 
À·
) {

323 if(
zîoög
) {

324 
	`mem£t
(
p
, '\0', 
l
);

326 
	`mem˝y
(
p
, 
µ
, 
l
);

328 
d⁄e
 +
l
, 
µ
 +=Ü;

329 
À·
 -
l
;

330 
j
++;

331 i‡(
j
 >
_˙t
) ;

332 
l
 = 
_ba£
[
j
].
Àn
;

333 
p
 = (*Ë
_ba£
[
j
].
±r
;

335 i‡(
À·
) {

336 if(
zîoög
) {

337 
	`mem£t
(
p
, '\0', 
À·
);

339 
	`mem˝y
(
p
, 
µ
, 
À·
);

341 
µ
 +
À·
;

342 
l
 -
À·
;

343 
d⁄e
 +
À·
;

346  *
this
;

347 
	}
}

349 #ifde‡
UNDEF


350 
	gcvec_t
::
	$comm⁄_¥efix
(

351 c⁄° 
cvec_t
& 
v1
,

352 c⁄° 
cvec_t
& 
v2
,

353 
cvec_t
& 
ªt
)

355 
size_t
 
l1
 = 
v1
.
	`size
();

356 
size_t
 
l2
 = 
v2
.
	`size
();

357 
i1
 = 0;

358 
i2
 = 0;

359 
j1
 = 0;

360 
j2
 = 0;

362 
l1
 && 
l2
) {

363 i‡(
v1
.
_±r
[
i1
][
j1
] - 
v2
._±r[
i2
][
j2
]) ;

364 i‡(++
j1
 >
v1
.
_Àn
[
i1
]) { j1 = 0; ++i1; }

365 i‡(++
j2
 >
v2
.
_Àn
[
i2
]) { j2 = 0; ++i2; }

366 --
l1
, --
l2
;

369 i‡(
l1
 < 
v1
.
	`size
()) {

370 
ªt
.
	`put
(
v1
, 0, v1.
	`size
(Ë- 
l1
);

372 
	}
}

375 
	gcvec_t
& cvec_t::
	$put
(c⁄° 
cvec_t
& 
v
)

377 
	`w_as£π1
(! 
	`is_pos_öf
(Ë&& ! 
	`is_√g_öf
());

378 i‡(
_˙t
+
v
._˙à> 
max_smÆl
) {

379 
	`_grow
(
_˙t
+
v
._cnt);

381 
i
 = 0; i < 
v
.
_˙t
; i++) {

382 
_ba£
[
_˙t
 + 
i
].
±r
 = 
v
._base[i].ptr;

383 
_ba£
[
_˙t
 + 
i
].
Àn
 = 
v
._base[i].len;

385 
_˙t
 +
v
._cnt;

386 
	`w_as£π3
(
_˙t
 <
	`_max_˙t
());

387 
_size
 +
v
._size;

389 
	`w_as£π3
(
	`check_size
());

390  *
this
;

391 
	}
}

393 
	gcvec_t
::
	$cmp
(c⁄° * 
s
, 
size_t
 
l
) const

395 i‡(
	`is_pos_öf
())  1;

396 i‡(
	`is_√g_öf
())  -1;

397 i‡(
	`is_nuŒ
()) {

398 if(
l
==0)  0;

403 
size_t
 
acc
 = 0;

404 
i
 = 0; i < 
_˙t
 && 
acc
 < 
l
; i++) {

405 
d
 = 
	`umemcmp
(
_ba£
[
i
].
±r
, ((*)
s
Ë+ 
acc
,

406 
_ba£
[
i
].
Àn
 < 
l
 - 
acc
 ? _base[i].len :Ü -ácc);

407 i‡(
d
)  d;

408 
acc
 +
_ba£
[
i
].
Àn
;

410  
acc
 - 
l
;

411 
	}
}

413 
	gcvec_t
::
	$cmp
(c⁄° 
cvec_t
& 
v
, 
size_t
* 
comm⁄_size
) const

419 i‡(&
v
 =
this
) {

420 i‡(
comm⁄_size
Ë*comm⁄_sizê
v
.
	`size
();

425 i‡(
	`is_nuŒ
(Ë&& !
v
.is_null())  -1;

426 i‡(
	`is_√g_öf
(Ë|| 
v
.
	`is_pos_öf
())  -1;

427 i‡(
	`is_pos_öf
(Ë|| 
v
.
	`is_√g_öf
())  1;

438 
ªsu…
 = 0;

443 
size_t
 
l1
 = 
	`size
();

444 
size_t
 
l2
 = 
v
.
	`size
();

445 
i1
 = 0;

446 
i2
 = 0;

447 
size_t
 
j1
 = 0, 
j2
 = 0;

449 
l1
 && 
l2
) {

450 
	`w_as£π3
(
i1
 < 
_˙t
);

451 
	`w_as£π3
(
i2
 < 
v
.
_˙t
);

452 
size_t
 
mö
 = 
_ba£
[
i1
].
Àn
 - 
j1
;

453 i‡(
v
.
_ba£
[
i2
].
Àn
 - 
j2
 < 
mö
) min = v._base[i2].len - j2;

455 
	`w_as£π3
(
mö
 > 0);

456 
ªsu…
 = 
	`umemcmp
(&
_ba£
[
i1
].
±r
[
j1
], &
v
._ba£[
i2
].±r[
j2
], 
mö
);

457 i‡(
ªsu…
) ;

459 i‡((
j1
 +
mö
Ë>
_ba£
[
i1
].
Àn
) { j1 = 0; ++i1; }

460 i‡((
j2
 +
mö
Ë>
v
.
_ba£
[
i2
].
Àn
) { j2 = 0; ++i2; }

462 
l1
 -
mö
, 
l2
 -= min;

465 i‡(
ªsu…
) {

466 i‡(
comm⁄_size
) {

467 
_ba£
[
i1
].
±r
[
j1
] =
v
._ba£[
i2
].±r[
j2
]) {

468 ++
j1
, ++
j2
;

469 --
l1
;

471 *
comm⁄_size
 = (
l1
 < 
	`size
() ? size() -Ü1 : 0);

474 
ªsu…
 = 
l1
 - 
l2
;

475 i‡(
ªsu…
 && 
comm⁄_size
) {

477 i‡(
l1
 == 0) {

478 *
comm⁄_size
 = 
	`size
();

480 
	`w_as£π3
(
l2
 == 0);

481 *
comm⁄_size
 = 
v
.
	`size
();

483 
	`w_as£π3
(*
comm⁄_size
 =
	`MIN
(
	`size
(), 
v
.size()));

486  
ªsu…
;

487 
	}
}

489 
	gcvec_t
::
	$checksum
() const

491 
sum
 = 0;

492 
	`w_as£π1
(! 
	`is_pos_öf
(Ë&& ! 
	`is_√g_öf
());

493 
i
 = 0; i < 
_˙t
; i++) {

494 
size_t
 
j
=0; j<
_ba£
[
i
].
Àn
; j++Ë
sum
 +((*)_ba£[i].
±r
)[j];

496  
sum
;

497 
	}
}

499 
	gcvec_t
::
	$ˇlc_kvl
(
w_ba£_t
::
uöt4_t
& 
rh
) const

501 i‡(
	`size
(Ë<(
w_ba£_t
::
uöt4_t
)) {

502 
rh
 = 0;

503 
	`c›y_to
(&
rh
, 
	`size
());

505 
w_ba£_t
::
uöt4_t
 
h
 = 0;

506 
i
 = 0; i < 
_˙t
; i++) {

507 c⁄° * 
s
 = 
_ba£
[
i
].
±r
;

508 
size_t
 
j
 = 0; j < 
_ba£
[
i
].
Àn
; j++) {

509 i‡(
h
 & 0xf8000000)

511 
h
 = (h & ~0xf8000000) + (h >> 27);

513 
h
 = (h << 5Ë+ *
s
++;

516 
rh
 = 
h
;

518 
	}
}

520 
	gcvec_t
::
	$_grow
(
tŸÆ_˙t
)

522 
	`w_as£π3
(
tŸÆ_˙t
 > 
max_smÆl
);

523 
	`w_as£π3
(
_˙t
 <
	`_max_˙t
());

525 
¥ev_max
 = 
	`_max_˙t
();

527 i‡(
tŸÆ_˙t
 > 
¥ev_max
) {

530 
grow_to
 = 
	`MAX
(
¥ev_max
*2, 
tŸÆ_˙t
);

531 
vec_∑ú_t
* 
tmp
 = 
NULL
;

533 i‡(
	`_is_œrge
()) {

534 
tmp
 = (
vec_∑ú_t
*Ë
	`ªÆloc
((*)
_ba£
, 
grow_to
 * (*_base));

535 i‡(!
tmp
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

537 
tmp
 = (
vec_∑ú_t
*Ë
	`mÆloc
(
grow_to
 * (*
_ba£
));

538 i‡(!
tmp
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

539 
i
 = 0; i < 
¥ev_max
; i++) {

540 
tmp
[
i
] = 
_ba£
[i];

543 
_∑ú
[0].
Àn
 = 
grow_to
;

544 
_ba£
 = 
tmp
;

546 
	}
}

548 
	~<c˘y≥
>

550 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gcvec_t
& 
	gv
)

552 *
	gp
;

553 
u_ch¨
 
	gc
, 
	gﬁdc
;

554 
	gª≥©ed
;

555 
	g≈¨ts
 = 
v
.
cou¡
();

556 
	gi
 = 0;

557 
size_t
 
	gj
 = 0;

558 
size_t
 
	gl
 = 0;

560 
	go
 << "{ ";

561 
	gi
=0; i< 
	g≈¨ts
; i++) {

563 
	gl
 = (
i
 < 
v
.
_˙t
Ë? v.
_ba£
[i].
Àn
 : 0;

566 
	gp
 = (
i
 < 
v
.
_˙t
Ë? (*)v.
_ba£
[i].
±r
 : (*)
NULL
;

568 
	go
 << "{" << 
	gl
 << " " << "\"" ;

570 
	gª≥©ed
=0;

571 
	gﬁdc
 = '\0';

572 
	gj
=0; j<
	gl
; j++,
	gp
++) {

573 
	gc
 = *
p
;

574 if(
	gc
 =
ﬁdc
) {

575 
ª≥©ed
++;

577 if(
	gª≥©ed
>0) {

578 
	go
 << "<" <<
	gª≥©ed
 << "Åimes>";

579 
	gª≥©ed
 = 0;

581 if–
	gc
 == '"' ) {

582 
o
 << "\\\"" ;

583 } if–
i•röt
(
c
) ) {

584 if–
ißscii
(
c
) ) {

585 
	go
 << 
	gc
 ;

588 
	go
 << "\\0" << 
	go˘
 << 
	gc
 << 
	gdec
 ;

590 } if(
	gc
=='\0') {

591 
o
 << "\\0" ;

593 
	go
 << "\\0" << 
	go˘
 << ()
	gc
 << 
	gdec
 ;

596 
	gﬁdc
 = 
c
;

598 if(
	gª≥©ed
>0) {

599 
	go
 << "<" <<
	gª≥©ed
 << "Åimes>";

600 
	gª≥©ed
 = 0;

602 
	go
 <<"\" }";

603 
w_as£π3
(
j
==
l
);

604 
w_as£π3
(
j
==
v
.
_ba£
[
i
].
Àn
);

606 
	go
 <<"}";

607  
	go
;

610 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gis
, 
	gcvec_t
& 
	gv
)

612 
	gc
=' ';

613 
size_t
 
	gÀn
=0;

614 
	gîr
 = 0;

615 *
	gãmp
 = 0;

616 c⁄° 
	gÀ·bøckë
='{';

617 c⁄° 
	grightbøckë
='}';

619 
	gis
.
˛ór
();

620 
	gv
.
ª£t
();

623 
	g°¨tög
=0,

624 
	ggëtög_≈¨ts
, 
	ggŸ_≈¨ts
,

625 
	ggëtög_∑ú
, 
	ggŸ_Àn
,
	ggŸ_°rög
,

626 
	gd⁄e


627 } 
	g°©e
;

629 
	g°©e
 = 
°¨tög
;

630 
	g°©e
 !
d⁄e
) {

631 
is
 >> 
ws
;

632 
	gc
 = 
is
.
≥ek
();

643 if(
	gis
.
eof
()) {

644 
	gîr
 ++;

646 
	g°©e
) {

647 
	gd⁄e
:

650 
	g°¨tög
:

651 if(
c
==
À·bøckë
) {

652 
is
 >> 
c
;

653 
	g°©e
 = 
gëtög_≈¨ts
;

654 } 
	gîr
 ++;

657 
	ggëtög_≈¨ts
:

658 
is
 >> 
ws
;

659 if(
	gis
.
bad
()Ë{ 
	gîr
 ++; }

660 
	g°©e
 = 
gŸ_≈¨ts
;

663 
	ggŸ_≈¨ts
:

664 
is
 >> 
ws
;

665 if(
	gis
.
≥ek
(Ë=
À·bøckë
) {

666 
°©e
 = 
gëtög_∑ú
;

668 
	gîr
 ++;

672 
	ggëtög_∑ú
:

673 
is
 >> 
ws
;

674 
	gis
 >> 
	gc
;

675 if–
	gc
 =
À·bøckë
 ) {

676 
is
 >> 
ws
;

677 
	gis
 >> 
	gÀn
;

678 if(
	gis
.
bad
()) {

679 
	gîr
 ++;

680 } 
	g°©e
 = 
gŸ_Àn
;

681 } if–
	gc
=
rightbøckë
 ) {

682 
°©e
 = 
d⁄e
;

684 
	gîr
 ++;

688 
	ggŸ_Àn
:

689 if(
c
 == '"') {

690 (Ë
is
.
gë
();

692 *
	gt
;

695 
	gãmp
 = 
√w
 [
Àn
];

696 
size_t
 
	gj
 = 0;

697 
	gt
=
ãmp
; 
	gj
<
	gÀn
; j++,Å++) {

698 
	gis
 >> *
	gt
;

700 
	g°©e
 = 
gŸ_°rög
;

701 
	gc
 = 
is
.
≥ek
();

703 if(
	gc
 != '"') {

704 
îr
++;

706 (Ë
	gis
.
gë
();

710 
	ggŸ_°rög
:

711 
is
 >> 
c
;

712 if(
	gc
 !
rightbøckë
 ) {

713 
îr
 ++;

715 
	gv
.
put
(
ãmp
, 
Àn
);

718 
	gãmp
 = 0;

719 
	gÀn
 = 0;

720 
	g°©e
 = 
gëtög_∑ú
;

735 if(
	gîr
 >0) {

736 #i‡
deföed
(
__SUNPRO_CC
)

738 
	gis
.
˛ór
(
is
.
rd°©e
(Ë| 
ios
::
badbô
);

739 #ñi‡
deföed
(
__GNUC__
)

740 #i‡
W_GCC_THIS_VER
 >
W_GCC_VER
(3,0)

742 
	gis
.
£t°©e
(
ios
::
badbô
);

744 
	gis
.
£t
(
ios
::
badbô
);

747 
	gis
.
£t
(
ios
::
badbô
);

750 
	g°©e
 = 
d⁄e
;

751 
	gîr
 = 
is
.
ãŒg
();

755  
	gis
;

	@src/common/vec_t.h

53 #i‚de‡
VEC_T_H


54 
	#VEC_T_H


	)

56 
	~"w_deföes.h
"

64 #ifde‡
__GNUG__


65 #¥agm®
öãrÁ˚


68 
	#CADDR_T
 c⁄° *

	)

69 
	#MAX_SMALL_VEC_SIZE
 8

	)

80 
	svec_∑ú_t
 {

81 
CADDR_T
 
	m±r
;

82 
size_t
 
	mÀn
;

87 
	sVEC_t
 {

88 
	m_˙t
;

89 
size_t
 
	m_size
;

90 
vec_∑ú_t
* 
	m_ba£
;

92 
vec_∑ú_t
 
	m_∑ú
[
MAX_SMALL_VEC_SIZE
];

97 ˛as†
	ccvec_t
 : 
¥Ÿe˘ed
 
VEC_t
 {

98 
‰õnd
 
˛ass
 
vec_t
;

99 
‰õnd
 
˛ass
 
	mkey_ønges_m≠
;

100 
‰õnd
 
˛ass
 
	md©a_ac˚ss_hi°ogøm
;

102 
	m¥Ÿe˘ed
:

103 
CADDR_T
 
zîo_loˇti⁄
;

105 
	mpublic
:

106 
	edummy_íumid
 { 
max_smÆl
 = 
MAX_SMALL_VEC_SIZE
 };

107 
	gpublic
:

108 
	$cvec_t
() {

109 
_˙t
 = 0;

110 
_size
 = 0;

111 
_ba£
 = &
_∑ú
[0];

112 
	}
}

113 
	$cvec_t
(c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
) {

114 
_ba£
&
_∑ú
[0];

115 
	`£t
(
v1
, 
v2
);

116 
	}
}

117 
	$cvec_t
(c⁄° * 
p
, 
size_t
 
l
) {

118 
_ba£
 = &
_∑ú
[0];

119 
	`£t
(
p
, 
l
);

120 
	}
}

121 
	$cvec_t
(c⁄° 
cvec_t
& 
v
, 
size_t
 
off£t
, size_à
limô
) {

122 
_ba£
 = &
_∑ú
[0];

123 
	`£t
(
v
, 
off£t
, 
limô
);

124 
	}
}

125 ~
cvec_t
();

127 
	$•lô
(
size_t
 
l1
, 
cvec_t
& 
v1
, cvec_t& 
v2
) const;

130 
cvec_t
& 
	`put
(c⁄° cvec_t& 
v
, 
size_t
 
off£t
, size_à
nbyãs
);

132 
cvec_t
& 
	`put
(c⁄° * 
p
, 
size_t
 
l
);

134 
cvec_t
& 
	`put
(c⁄° cvec_t& 
v
);

137 
cvec_t
& 
	$ª£t
() {

138 
_˙t
 = 
_size
 = 0;

139  *
this
;

140 
	}
}

142 
	gcvec_t
& 
	$£t
(c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
) {

143  
	`ª£t
().
	`put
(
v1
).put(
v2
);

144 
	}
}

146 
	gcvec_t
& 
	$£t
(c⁄° 
cvec_t
& 
v
) {

147  
	`ª£t
().
	`put
(
v
);

148 
	}
}

151 
	gcvec_t
& 
	$£t
(c⁄° * 
p
, 
size_t
 
l
) {

152  
	`ª£t
().
	`put
(
p
, 
l
);

153 
	}
}

157 
	gcvec_t
& 
	$£t
(c⁄° 
cvec_t
& 
v
, 
size_t
 
off£t
, size_à
limô
) {

158  
	`ª£t
().
	`put
(
v
, 
off£t
, 
limô
);

159 
	}
}

163 
size_t
 
	$size
() const {

164  
_size
;

165 
	}
}

168 
size_t
 
	$c›y_to
(* 
p
, 
size_t
 
limô
 = 0x7fffffff) const;

170 
	$cmp
(c⁄° 
cvec_t
& 
v
, 
size_t
* 
comm⁄_size
 = 0) const;

171 
	$cmp
(c⁄° * 
s
, 
size_t
 
Àn
) const;

173 
	$cmp
(c⁄° 
cvec_t
& 
v1
,

174 c⁄° 
cvec_t
& 
v2
, 
size_t
* 
comm⁄_size
 = 0) {

175  
v1
.
	`cmp
(
v2
, 
comm⁄_size
);

176 
	}
}

179 
	$cou¡
(Ëc⁄° { 
_˙t
;
	}
}

181 
	$checksum
() const;

182 
	$ˇlc_kvl
(
uöt4_t
& 
h
) const;

183 
	$öô
(Ë{ 
_˙t
 = 
_size
 = 0; 
	}
}

191 
	$vecdñ∑πs
(Ë{ 
_˙t
-->0) {

192 
dñëe
[] 
_ba£
[
_˙t
].
±r
;

193 
_ba£
[
_˙t
].
±r
 = 
NULL
;

194 
_ba£
[
_˙t
].
Àn
 = 0;

196 
	`öô
();

197 
	}
}

198 
	$dñ∑πs
(Ë{ 
_˙t
-->0) {

199 
dñëe
 
_ba£
[
_˙t
].
±r
;

200 
_ba£
[
_˙t
].
±r
 = 
NULL
;

201 
_ba£
[
_˙t
].
Àn
 = 0;

203 
	`öô
();

204 
	}
}

206 
boﬁ
 
	$is_pos_öf
(Ëc⁄° {  
this
 =&
pos_öf
; 
	}
}

207 
boﬁ
 
	$is_√g_öf
(Ëc⁄° {  
this
 =&
√g_öf
; 
	}
}

208 
boﬁ
 
	$is_nuŒ
(Ëc⁄° {  
	`size
(Ë=0; 
	}
}

210 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gcvec_t
& 
	gv1
, c⁄° cvec_t& 
	gv2
);

211 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
);

212 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
);

213 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° 
	gcvec_t
& 
	gv1
, c⁄° cvec_t& 
	gv2
);

214 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
);

215 
‰õnd
 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
);

217 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam&, c⁄° 
	gcvec_t
& 
	gv
);

218 
‰õnd
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam&, 
	gcvec_t
& 
	gv
);

220 
cvec_t
 
	gpos_öf
;

221 
cvec_t
 
	g√g_öf
;

223 
	g¥iv©e
:

225 
cvec_t
(c⁄° cvec_t& 
v
);

228 
boﬁ
 
	$_is_œrge
(Ëc⁄° { 
_ba£
 !&
_∑ú
[0];
	}
}

231 
	$_max_˙t
() const {

232  ()(
	`_is_œrge
(Ë? 
_∑ú
[0].
Àn
 : ()
max_smÆl
);

233 
	}
}

235 
_grow
(
tŸÆ_˙t
);

239 
	gcvec_t
& 
	g›î©‹
=(
cvec_t
);

241 
size_t
 
	$ªˇlc_size
() const;

242 
boﬁ
 
	$check_size
() const;

244 
public
:

245 
boﬁ
 
	$is_zvec
() const {

246 #i‡
W_DEBUG_LEVEL
 > 2

247 if(
	`cou¡
()>0) {

248 if(
_∑ú
[0].
±r
 =
zîo_loˇti⁄
) {

249 
	`w_as£π3
(
	`cou¡
() == 1);

253  (
	`cou¡
()==0)

255 (
	`cou¡
(Ë=1 && 
_∑ú
[0].
±r
 =
zîo_loˇti⁄
);

256 
	}
}

264 ˛as†
	cvec_t
 : 
public
 
cvec_t
 {

265 
public
:

267 
	$vec_t
(Ë: 
	$cvec_t
() {};

269 
	$vec_t
(c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
Ë: 
	$cvec_t
(
v1
, 
v2
Ë{
	}
};

271 
	$vec_t
(c⁄° * 
p
, 
size_t
 
l
Ë: 
	$cvec_t
(
p
, 
l
Ë{
	}
};

273 
	$vec_t
(c⁄° 
vec_t
& 
v
, 
size_t
 
off£t
, size_à
limô
)

274 : 
	$cvec_t
(
v
, 
off£t
, 
limô
Ë{
	}
};

282 c⁄° 
	gvec_t
& 
	$c›y_‰om
(

283 c⁄° * 
p
,

284 
size_t
 
limô
,

285 
size_t
 
off£t
 = 0) const;

293 
vec_t
& 
	`c›y_‰om
(c⁄° 
cvec_t
& 
v
);

301 
vec_t
& 
	`c›y_‰om
(

302 c⁄° 
cvec_t
& 
v
,

303 
size_t
 
off£t
,

304 
size_t
 
limô
,

305 
size_t
 
myoff£t
 = 0);

308 
CADDR_T
 
	$±r
(
ödex
Ëc⁄° {  (ödex >0 && index < 
_˙t
) ?

309 
_ba£
[
ödex
].
±r
 : (
CADDR_T
Ë
NULL
; 
	}
}

311 
size_t
 
	$Àn
(
ödex
Ëc⁄° {  (ödex >0 && index < 
_˙t
) ?

312 
_ba£
[
ödex
].
Àn
 : 0; 
	}
}

317 
	$mkchunk
–
maxsize
,

318 
skù
,

319 
vec_t
 &
ªsu…


324 
vec_t
& 
pos_öf
;

326 
vec_t
& 
√g_öf
;

328 
¥iv©e
:

330 
	$vec_t
(c⁄° 
vec_t
&Ë: 
	$cvec_t
() {

331 
˚º
 << "vec_t: dißbÀd membî cÆÀd" << 
ídl
;

332 
˚º
 << "Áûedáà\"" << 
__FILE__
 << ":" << 
__LINE__
 << "\"" << 
ídl
;

333 
	`W_FATAL
 (
fcINTERNAL
);

334 
	}
}

335 
	g¥iv©e
:

337 
vec_t
& 
›î©‹
=(vec_t);

341 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gcvec_t
& 
	gv1
, c⁄° cvec_t& 
	gv2
)

343  
	gv1
.
cmp
(
v2
) < 0;

346 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
)

348  
	gv1
.
cmp
(
v2
) <= 0;

351 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
)

353  
	gv1
.
cmp
(
v2
) >= 0;

356 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° 
	gcvec_t
& 
	gv1
, c⁄° cvec_t& 
	gv2
)

358  
	gv1
.
cmp
(
v2
) > 0;

361 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
)

363  (&
	gv1
==&
v2
Ë|| 
v1
.
cmp
(v2) == 0;

366 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
cvec_t
& 
v1
, c⁄° 
	gcvec_t
& 
	gv2
)

368  ! (
	gv1
 =
v2
);

380 ˛as†
	czvec_t
 : 
public
 
vec_t
 {

381 
public
:

382 
	$zvec_t
(Ë: 
	$vec_t
(
zîo_loˇti⁄
,0) {};

383 
	$zvec_t
(
size_t
 
l
Ë: 
	$vec_t
(
zîo_loˇti⁄
, 
l
Ë{
	}
};

384 
	gzvec_t
 &
	$put
(
size_t
 
l
Ë{ 
	`ª£t
().
	`put
(
zîo_loˇti⁄
,l);  *
this
; 
	}
}

385 
	g¥iv©e
:

387 
	$zvec_t
(c⁄° 
zvec_t
&Ë:
	$vec_t
(
zîo_loˇti⁄
, 0Ë{
	}
}

388 
	gzvec_t
 &
	g›î©‹
=(
zvec_t
);

390 
zvec_t
(c⁄° 
cvec_t
& 
v1
, c⁄° cvec_t& 
v2
);

391 
zvec_t
(c⁄° * 
p
, 
size_t
 
l
);

392 
zvec_t
(c⁄° 
vec_t
& 
v
, 
size_t
 
off£t
, size_à
limô
);

399 
˛ass
 
	gÕid_t
;

401 
	sñ_fûÀr
 {

402 
size_t
 
	m_ñ_size
;

403 
vec_t
 
	m_ñ
;

409 
vútuÆ
 
w_rc_t
 
fûl_ñ
(
vec_t
& , c⁄° 
Õid_t
& ) {  
	mRCOK
; }

412 
	mvútuÆ
 ~
ñ_fûÀr
() {}

	@src/common/vid_t.cpp

30 
	~"w_deföes.h
"

34 
	#VID_T_C


	)

36 #ifde‡
__GNUC__


37 #¥agm®
im∂emíèti⁄


40 
	~<c°dlib
>

41 
	~<w_°ªam.h
>

42 
	~<w_ba£.h
>

43 
	~"basics.h
"

44 
	~"vid_t.h
"

46 c⁄° 
vid_t
 
	gvid_t
::
nuŒ
;

	@src/common/vid_t.h

30 #i‚de‡
VID_T_H


31 
	#VID_T_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


39 #¥agm®
öãrÁ˚


54 
	svid_t
 {

57 
	mfú°_loˇl
 = 1

60 
vid_t
(Ë: 
vﬁ
(0) {}

61 
vid_t
(
uöt2_t
 
v
Ë: 
vﬁ
(v) {}

62 
öô_loˇl
(Ë{
vﬁ
 = 
fú°_loˇl
;}

64 
ö¸_loˇl
() {

65 
	mvﬁ
++;

71 
›î©‹
 
uöt2_t
 (Ëc⁄° { 
	mvﬁ
;}

74 
uöt2_t
 
	mvﬁ
;

76 c⁄° 
vid_t
 
	mnuŒ
;

77 
‰õnd
 
ölöe
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mvid_t
& 
	mv
);

78 
‰õnd
 
ölöe
 
	mi°ªam
& 
	m›î©‹
>>(i°ªam&, 
	mvid_t
& 
	mv
);

79 
‰õnd
 
boﬁ
 
	m›î©‹
==(c⁄° 
vid_t
& 
v1
, c⁄° 
	mvid_t
& 
	mv2
) {

80  
	mv1
.
	mvﬁ
 =
v2
.
vﬁ
;

82 
‰õnd
 
boﬁ
 
	m›î©‹
!=(c⁄° 
vid_t
& 
v1
, c⁄° 
	mvid_t
& 
	mv2
) {

83  
	mv1
.
	mvﬁ
 !
v2
.
vﬁ
;

85 
‰õnd
 
boﬁ
 
	m›î©‹
<(c⁄° 
	mvid_t
& 
	mv1
, c⁄° vid_t& 
	mv2
) {

86  
	mv1
.
	mvﬁ
 < 
	mv2
.vol;

90 
ölöe
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gvid_t
& 
	gv
)

92  
	go
 << 
	gv
.
	gvﬁ
;

95 
ölöe
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gvid_t
& 
	gv
)

97  
	gi
 >> 
	gv
.
	gvﬁ
;

	@src/common/w_opaque.h

30 #i‚de‡
W_OPAQUE_H


31 
	#W_OPAQUE_H


	)

33 
	~"w_deföes.h
"

37 
	~<c˘y≥
>

38 
	~<c°rög
>

40 #i‚de‡
W_BASE_H


41 
	~<w_ba£.h
>

44 #ifde‡
__GNUC__


49 #i‡
W_GCC_THIS_VER
 < 
W_GCC_VER
(2,95)

50 
	#W_NO_TEMPLATE_FORWARD_DECLS


	)

54 
	gãm∂©e
 <
	gLEN
> 
˛ass
 
	g›aque_qu™tôy
;

55 #i‚de‡
W_NO_TEMPLATE_FORWARD_DECLS


56 
	gãm∂©e
 <
	gLEN
> 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
,

57 c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gr
);

58 
	gãm∂©e
 <
	gLEN
> 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
LEN
> &
l
,

59 c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gr
);

73 
	gãm∂©e
 <
	gLEN
>

74 ˛as†
	c›aque_qu™tôy


77 
	m¥iv©e
:

79 
uöt4_t
 
_Àngth
;

80 
	m_›aque
[
LEN
];

82 
	mpublic
:

83 
	$›aque_qu™tôy
() {

84 (Ë
	`£t_Àngth
(0);

85 #ifde‡
ZERO_INIT


86 
	`mem£t
(
_›aque
, '\0', 
LEN
);

89 
	$›aque_qu™tôy
(c⁄° * 
s
)

91 #ifde‡
ZERO_INIT


92 
	`mem£t
(
_›aque
, '\0', 
LEN
);

94 *
this
 = 
s
;

95 
	}
}

97 
‰õnd
 
boﬁ


98 
	g›î©‹
=<
LEN
> (

99 c⁄° 
›aque_qu™tôy
<
LEN
> &
l
,

100 c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gr
);

102 
‰õnd
 
	go°ªam
 &

103 
	g›î©‹
<< <
	gLEN
> (

104 
	go°ªam
 &
	go
,

105 c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gb
);

107 
	g›aque_qu™tôy
<
	gLEN
> &

108 
	g›î©‹
=(c⁄° 
›aque_qu™tôy
<
LEN
> &
r
)

110 (Ë
£t_Àngth
(
r
.
Àngth
());

111 
mem˝y
(
_›aque
,
r
._›aque,
Àngth
());

112  *
	gthis
;

114 
	g›aque_qu™tôy
<
	gLEN
> &

115 
	g›î©‹
=(c⁄° * 
s
)

117 
w_as£π9
(
°æí
(
s
Ë<
LEN
);

118 (Ë
£t_Àngth
(0);

119 (
	g_›aque
[
Àngth
()] = *
s
++))

120 (Ë
£t_Àngth
(
Àngth
() + 1);

121  *
	gthis
;

123 
	g›aque_qu™tôy
<
	gLEN
> &

124 
	g›î©‹
+=(c⁄° * 
s
)

126 
w_as£π9
(
°æí
(
s
Ë+ 
Àngth
(Ë<
LEN
);

127 (
	g_›aque
[
£t_Àngth
(
Àngth
(Ë+ 1)] = *
s
++))

129  *
	gthis
;

131 
	g›aque_qu™tôy
<
	gLEN
> &

132 
	g›î©‹
-=(
uöt4_t
 
Àn
)

134 
w_as£π9
(
Àn
 <
Àngth
());

135 (Ë
£t_Àngth
(
Àngth
(Ë- 
Àn
);

136  *
	gthis
;

138 
	g›aque_qu™tôy
<
	gLEN
> &

139 
	$≠≥nd
(c⁄° * 
d©a
, 
uöt4_t
 
Àn
)

141 
	`w_as£π9
(
Àn
 + 
	`Àngth
(Ë<
LEN
);

142 
	`mem˝y
((*)&
_›aque
[
	`Àngth
()], 
d©a
, 
Àn
);

143 (Ë
	`£t_Àngth
(
	`Àngth
(Ë+ 
Àn
);

144  *
this
;

145 
	}
}

146 
	g›aque_qu™tôy
<
	gLEN
> &

147 
	$zîo
()

149 (Ë
	`£t_Àngth
(0);

150 
	`mem£t
(
_›aque
, 0, 
LEN
);

151  *
this
;

152 
	}
}

153 
	g›aque_qu™tôy
<
	gLEN
> &

154 
	$˛ór
()

156 (Ë
	`£t_Àngth
(0);

157  *
this
;

158 
	}
}

160 
	$d©a_©_off£t
(
i
) const

162 
	`w_as£π9
(
i
 < 
	`Àngth
());

163  (*)&
_›aque
[
i
];

164 
	}
}

165 
uöt4_t
 
	$whﬁñígth
() const {

166  ((
_Àngth
Ë+ 
	`Àngth
());

167 
	}
}

168 
uöt4_t
 
	$£t_Àngth
(
uöt4_t
 
l
) {

169 if(
	`is_Æig√d
()) {

170 
_Àngth
 = 
l
;

172 *
m
 = (*)&
_Àngth
;

173 
	`mem˝y
(
m
, &
l
, (
_Àngth
));

175  
l
;

176 
	}
}

177 
uöt4_t
 
	$Àngth
() const {

178 if(
	`is_Æig√d
()Ë 
_Àngth
;

180 
uöt4_t
 
l
;

181 *
m
 = (*)&
_Àngth
;

182 
	`mem˝y
(&
l
, 
m
, (
_Àngth
));

183  
l
;

185 
	}
}

187 
	$¡oh
() {

188 if(
	`is_Æig√d
()) {

189 
_Àngth
 = 
w_ba£_t
::
	`w_¡ohl
(_length);

191 
uöt4_t
 
l
 = 
w_ba£_t
::
	`w_¡ohl
(
	`Àngth
());

192 *
m
 = (*)&
l
;

193 
	`mem˝y
(&
_Àngth
, 
m
, (_length));

195 
	}
}

196 
	$ht⁄
() {

197 if(
	`is_Æig√d
()) {

198 
_Àngth
 = 
w_ba£_t
::
	`w_ht⁄l
(_length);

200 
uöt4_t
 
l
 = 
w_ba£_t
::
	`w_ht⁄l
(
	`Àngth
());

201 *
m
 = (*)&
l
;

202 
	`mem˝y
(&
_Àngth
, 
m
, (_length));

204 
	}
}

207 
boﬁ
 
	$is_Æig√d
() const {

208  (((
±rdiff_t
)(&
_Àngth
) & ((_length) - 1)) == 0);

209 
	}
}

211 
	go°ªam
 &
	$¥öt
(
o°ªam
 & 
o
) const {

212 
o
 << "›aque[" << 
	`Àngth
() << "]" ;

214 
uöt4_t
 
¥öt_Àngth
 = 
	`Àngth
();

215 i‡(
¥öt_Àngth
 > 
LEN
) {

216 
o
 << "[TRUNC TO LEN=" << 
LEN
 << "!!]";

217 
¥öt_Àngth
 = 
LEN
;

219 
o
 << '"';

220 c⁄° *
˝
 = &
_›aque
[0];

221 
uöt4_t
 
i
 = 0; i < 
¥öt_Àngth
; i++, 
˝
++) {

222 i‡(
	`i•röt
(*
˝
))

223 
o
 << *
˝
;

225 
	`W_FORM
(
o
)("\\x%02X", *
˝
);

229  
o
 << '"';

230 
	}
}

234 
	gãm∂©e
 <
	gLEN
>

235 
boﬁ
 
	g›î©‹
==(c⁄° 
›aque_qu™tôy
<
LEN
> &
a
,

236 c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gb
)

238  ((
	ga
.
Àngth
()==
b
.length()) &&

239 (
memcmp
(
a
.
_›aque
,
b
._›aque,a.
Àngth
())==0));

242 
	gãm∂©e
 <
	gLEN
>

243 
	go°ªam
 &

244 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	g›aque_qu™tôy
<
	gLEN
> &
	gb
)

246  
	gb
.
¥öt
(
o
);

	@src/fc/atomic_class_pool.h

24 #i‚de‡
__ATOMIC_TRASH_STACK


25 
	#__ATOMIC_TRASH_STACK


	)

27 
	~<©omic_ãm∂©es.h
>

30 
	~<√w
>

31 
	~<ˇs£π
>

32 
	~<°dlib.h
>

33 
	~"©omic_c⁄èöî.h
"

48 
	g©omic_¥óŒoˇãd_poﬁ
 : 
¥Ÿe˘ed
 
©omic_c⁄èöî


50 
©omic_¥óŒoˇãd_poﬁ
(
uöt
 
nbyãs
, 
£ed
=128)

51 : 
©omic_c⁄èöî
(-(
±r
)), 
_nbyãs
(
nbyãs
+(ptr))

54 
±r
* 
	ghód
 = 
NULL
;

55 
	gi
=0; i < 
	g£ed
; i++) {

56 
v≤
 
	gu
 = {
Æloc
()};

57 
	gu
.
	gp
->
	g√xt
 = 
hód
;

58 
	ghód
 = 
u
.
p
;

60 
	gi
=0; i < 
	g£ed
; i++) {

61 
±r
* 
	gp
 = 
hód
;

62 
	ghód
 = 
hód
->
√xt
;

63 
dóŒoc
(
p
);

66 * 
Æloc
() {

67 * 
	gvÆ
 = 
p›
();

68 if(
	gvÆ
)  val;

70 
v≤
 
	gu
 = { 
mÆloc
(
_nbyãs
) };

71 if(!
	gu
.
	gv
Ëu.v = 
nuŒ
();

72  
¥ï¨e
(
u
);

74 
dóŒoc
(* 
vÆ
Ë{ 
push
(val); }

76 ~
©omic_¥óŒoˇãd_poﬁ
() {

77 
v≤
 
	gvÆ
;

78  (
	gvÆ
.
	gv
=
p›
()) ) {

79 
vÆ
.
n
 +
_off£t
;

80 
‰ì
(
vÆ
.
v
);

84 
uöt
 c⁄° 
	g_nbyãs
;

88 
	gãm∂©e
<
˛ass
 
	gT
>

89 
	g©omic_˛ass_poﬁ
;

90 
	gãm∂©e
<
˛ass
 
	gT
>

91 * 
›î©‹
 
√w
(
size_t
 
nbyãs
, 
©omic_˛ass_poﬁ
<
T
>& 
poﬁ
);

92 
	gãm∂©e
<
˛ass
 
	gT
>

93 
ölöe
 
›î©‹
 
dñëe
(* 
±r
, 
©omic_˛ass_poﬁ
<
T
>& 
poﬁ
);

111 
	gãm∂©e
<
˛ass
 
	gT
>

112 
	g©omic_˛ass_poﬁ
 : 
¥Ÿe˘ed
 
©omic_¥óŒoˇãd_poﬁ
 {

121 
©omic_˛ass_poﬁ
(
nbyãs
=(
T
), 
£ed
=128)

122 : 
©omic_¥óŒoˇãd_poﬁ
(
nbyãs
, 
£ed
)

132 
de°roy
(
T
* 
çå
) {

134 uni⁄ { 
T
* 
	gt
; * 
	gv
; } 
	gu
 = {
çå
};

137 
	gu
.
	gt
->~
T
();

138 
dóŒoc
(
u
.
v
);

143 
uöt
 
nbyãs
(Ë{  
	g_nbyãs
; }

146 
‰õnd
 * 
›î©‹
 
	g√w
<>(
	gsize_t
, 
	g©omic_˛ass_poﬁ
<
	gT
> &);

147 
‰õnd
 
›î©‹
 
	gdñëe
<>(*, 
	g©omic_˛ass_poﬁ
<
	gT
> &);

158 
	gãm∂©e
<
˛ass
 
	gT
>

159 
ölöe
 * 
›î©‹
 
√w
(
size_t
 
nbyãs
, 
©omic_˛ass_poﬁ
<
T
>& 
poﬁ
) {

160 
as£π
(
poﬁ
.
nbyãs
() >=Çbytes);

161  
	gpoﬁ
.
Æloc
();

171 
	gãm∂©e
<
˛ass
 
	gT
>

172 
ölöe
 
›î©‹
 
dñëe
(* 
±r
, 
©omic_˛ass_poﬁ
<
T
>& 
poﬁ
) {

173 
	gpoﬁ
.
dóŒoc
(
±r
);

	@src/fc/atomic_container.h

24 #i‚de‡
__ATOMIC_CONTAINER


25 
	#__ATOMIC_CONTAINER


	)

27 
	~"©omic_ãm∂©es.h
"

30 
	~<√w
>

31 
	~<ˇs£π
>

32 
	~<°dlib.h
>

57 ˛as†
	c©omic_c⁄èöî
 {

59 
	m¥Ÿe˘ed
:

60 
	s±r
 { 
±r
* 
√xt
; };

62 
	uv≤
 { * 
	gv
; 
±r
* 
	gp
; 
	gn
; };

63 
	upvn
 { 
±r
* 
	gp
; * 
	gv
; 
	gn
; };

66 
	gpublic
:

67 
	toff£t_typ
;

69 
	$©omic_c⁄èöî
(
off£t_typ
 
off£t
)

70 : 
	`_off£t
(
off£t
), 
	`_locked
(0), 
	`_a˘ive
(0), 
	$_backup
(0)

71 { 
	}
}

76 * 
	$p›
() {

77 
pvn
 
ﬁd_vÆue
 = {*&
_a˘ive
};

78 
	`poöãr
(
ﬁd_vÆue
)) {

80 
pvn
 
√w_vÆue
 = 
	`√xt_poöãr
(
ﬁd_vÆue
);

81 * 
cur_vÆue
 = 
	`©omic_ˇs_±r
(&
_a˘ive
, 
ﬁd_vÆue
.
v
, 
√w_vÆue
.v);

82 if(
ﬁd_vÆue
.
v
 =
cur_vÆue
)

86 
ﬁd_vÆue
.
v
 = 
cur_vÆue
;

90  
	`poöãr
(
ﬁd_vÆue
)? 
	`¥ï¨e
(ﬁd_vÆueË: 
	`¶ow_p›
();

91 
	}
}

94 
	$push
(* 
v
) {

96 
v≤
 
u
 = {
v
};

97 
u
.
n
 +
_off£t
;

100 
pvn
 
ﬁd_vÆue
 = { 
_backup
 };

102 
u
.
p
->
√xt
 = 
ﬁd_vÆue
.p;

103 
	`memb¨_¥odu˚r
();

104 * 
cur_vÆue
 = 
	`©omic_ˇs_±r
(&
_backup
, 
ﬁd_vÆue
.
v
, 
u
.v);

105 if(
ﬁd_vÆue
.
v
 =
cur_vÆue
)

109 
ﬁd_vÆue
.
v
 = 
cur_vÆue
;

111 
	}
}

113 
off£t_typ
 
	$off£t
(Ëc⁄° {  
_off£t
; 
	}
}

115 ~
	$©omic_c⁄èöî
() {

116 
_locked
 = 0; 
_a˘ive
 = 0; 
_backup
 = 0;

117 
	}
}

119 
	g¥Ÿe˘ed
:

121 
ãm∂©e
<
˛ass
 
Uni⁄
>

122 * 
	$¥ï¨e
(
Uni⁄
 
rvÆ
) {

123 
rvÆ
.
n
 = 
	`poöãr
‘vÆË- 
_off£t
;

124  
rvÆ
.
v
;

125 
	}
}

128 * 
	$nuŒ
() {

130 
off£t_typ
 
i
;

131 *
v
;

132 } 
_pun
 = { 
_off£t
 };

133  
_pun
.
v
;

134 
	}
}

136 
off£t_typ
 c⁄° 
	g_off£t
;

138 
	g¥iv©e
:

139 vﬁ©ûê
_locked
;

142 
±r
* vﬁ©ûê
	g_a˘ive
;

145 
±r
* vﬁ©ûê
	g_backup
;

147 #ifde‡
ARCH_LP64


148 íum { 
	gVERSION_MASK
=0x7 };

150 íum { 
	gVERSION_MASK
=0x3 };

154 
	gãm∂©e
<
˛ass
 
	gUni⁄
>

155 
	$poöãr
(
Uni⁄
 
vÆue
Ë{  vÆue.
n
 &~
VERSION_MASK
; 
	}
}

158 
	$vîsi⁄
(
vÆue
Ë{  vÆuê& 
VERSION_MASK
; 
	}
}

163 
pvn
 
	$√xt_poöãr
(
pvn
 
vÆue
) {

164 
vî
 = 
	`vîsi⁄
(
vÆue
.
n
);

165 
vÆue
.
n
 -
vî
;

166 
vÆue
.
p
 = vÆue.p->
√xt
;

167 
vÆue
.
n
 +
vî
;

168  
vÆue
;

169 
	}
}

173 
boﬁ
 
	$©ãm±_lock
() {

174 
boﬁ
 
möe
 = 
Ál£
;

175 
pvn
 
a˘ive
 = { *&
_a˘ive
 };

176 !
möe
) {

177 *&
_locked
 && !
	`poöãr
(
a˘ive
)Ëa˘ive.
p
 = *&
_a˘ive
;

178 if(
	`poöãr
(
a˘ive
)Ë 
Ál£
;

179 
möe
 = !
	`©omic_sw≠_32
(&
_locked
, 
åue
);

181 if(
möe
) {

182 
	`memb¨_íãr
();

183 
a˘ive
.
p
 = *&
_a˘ive
;

184 if(!
	`poöãr
(
a˘ive
))

185  
åue
;

187 
	`ªÀa£_lock
();

189  
Ál£
;

190 
	}
}

192 
	$ªÀa£_lock
() {

193 
	`memb¨_exô
();

194 
_locked
 = 
Ál£
;

195 
	}
}

199 * 
	$¶ow_p›
() {

200 if(!
	`©ãm±_lock
())

201  
	`p›
();

207 
v≤
 
rvÆ
 = { 
	`©omic_sw≠_±r
(&
_backup
, 
NULL
) };

208 if(
rvÆ
.
p
) {

210 
pvn
 
ﬁd_li°
 = { 
_a˘ive
 };

211 
pvn
 
√w_li°
 = {
rvÆ
.
p
->
√xt
};

212 
√w_li°
.
n
 +
	`vîsi⁄
(
ﬁd_li°
.n+1);

213 
_a˘ive
 = 
√w_li°
.
p
;

216 
rvÆ
.
v
 = 
	`nuŒ
();

219 
	`ªÀa£_lock
();

220  
	`¥ï¨e
(
rvÆ
);

221 
	}
}

	@src/fc/atomic_templates.h

68 #i‚de‡
ATOMIC_TEMPLATES_H


69 
	#ATOMIC_TEMPLATES_H


	)

71 
	~"©omic_›s.h
"

80 
	gãm∂©e
<
˛ass
 
	gT
>

81 
©omic_öc
(
T
 vﬁ©ûê&
vÆ
);

82 
	gãm∂©e
<
˛ass
 
	gT
>

83 
©omic_dec
(
T
 vﬁ©ûê&
vÆ
);

85 
	gãm∂©e
<>

86 
ölöe
 
	$©omic_öc
(vﬁ©ûê&
vÆ
)

87 { 
	`©omic_add_öt
–(vﬁ©ûê*)&
vÆ
, 1); 
	}
}

89 
	gãm∂©e
<>

90 
ölöe
 
	$©omic_öc
(vﬁ©ûê&
vÆ
)

91 { 
	`©omic_add_öt
(&
vÆ
, 1); 
	}
}

93 
	gãm∂©e
<>

94 
ölöe
 
	$©omic_öc
(vﬁ©ûê&
vÆ
)

95 { 
	`©omic_add_l⁄g
(&
vÆ
, 1); 
	}
}

97 
	gãm∂©e
<>

98 
ölöe
 
	$©omic_öc
(vﬁ©ûê&
vÆ
)

99 { 
	`©omic_add_64
((vﬁ©ûê
uöt64_t
 *)&
vÆ
, 1); 
	}
}

101 
	gãm∂©e
<>

102 
ölöe
 
	$©omic_dec
(vﬁ©ûê&
vÆ
)

103 { 
	`©omic_add_öt
–(vﬁ©ûê*)&
vÆ
, -1); 
	}
}

106 
	gãm∂©e
<>

107 
ölöe
 
	$©omic_dec
(vﬁ©ûê&
vÆ
)

108 { 
	`©omic_add_öt
(&
vÆ
, -1); 
	}
}

110 
	gãm∂©e
<>

111 
ölöe
 
	$©omic_dec
(vﬁ©ûê&
vÆ
)

112 { 
	`©omic_add_l⁄g
(&
vÆ
, -1); 
	}
}

114 
	gãm∂©e
<>

115 
ölöe
 
	$©omic_dec
(vﬁ©ûê&
vÆ
)

116 { 
	`©omic_add_64
((vﬁ©ûê
uöt64_t
 *)&
vÆ
, -1); 
	}
}

119 
	gãm∂©e
<
˛ass
 
	gT
>

120 
T
 
©omic_öc_nv
(T vﬁ©ûê&
vÆ
);

121 
	gãm∂©e
<
˛ass
 
	gT
>

122 
T
 
©omic_dec_nv
(T vﬁ©ûê&
vÆ
);

124 
	gãm∂©e
<>

125 
ölöe
 
	$©omic_öc_nv
(vﬁ©ûê&
vÆ
)

126 {  
	`©omic_add_öt_nv
((vﬁ©ûe*)&
vÆ
, 1); 
	}
}

127 
	gãm∂©e
<>

128 
ölöe
 
	$©omic_öc_nv
(vﬁ©ûê&
vÆ
)

129 {  
	`©omic_add_öt_nv
(&
vÆ
, 1); 
	}
}

130 
	gãm∂©e
<>

131 
ölöe
 
	$©omic_öc_nv
(vﬁ©ûê&
vÆ
)

132 {  
	`©omic_add_l⁄g_nv
(&
vÆ
, 1); 
	}
}

133 #i‚de‡
ARCH_LP64


134 
ölöe
 
	$©omic_öc_nv
(vﬁ©ûê&
vÆ
)

135 {  
	`©omic_add_64_nv
(&
vÆ
, 1); 
	}
}

138 
	gãm∂©e
<>

139 
ölöe
 
	$©omic_dec_nv
(vﬁ©ûê&
vÆ
)

140 {  
	`©omic_add_öt_nv
((vﬁ©ûe*)&
vÆ
, -1); 
	}
}

141 
	gãm∂©e
<>

142 
ölöe
 
	$©omic_dec_nv
(vﬁ©ûê&
vÆ
)

143 {  
	`©omic_add_öt_nv
(&
vÆ
, -1); 
	}
}

144 
	gãm∂©e
<>

145 
ölöe
 
	$©omic_dec_nv
(vﬁ©ûê&
vÆ
)

146 {  
	`©omic_add_l⁄g_nv
(&
vÆ
, -1); 
	}
}

147 #i‚de‡
ARCH_LP64


148 
ölöe
 
	$©omic_dec_nv
(vﬁ©ûê&
vÆ
)

149 {  
	`©omic_add_64_nv
(&
vÆ
, -1); 
	}
}

155 
	gãm∂©e
<
˛ass
 
	gT
>

156 
©omic_add_öt_dñè
(
T
 vﬁ©ûê&
vÆ
, 
dñè
);

158 
	gãm∂©e
<>

159 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

160 { 
	`©omic_add_öt
(&
vÆ
, 
dñè
); 
	}
}

162 
	gãm∂©e
<>

163 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

164 { 
	`©omic_add_öt
((vﬁ©ûe*)&
vÆ
, 
dñè
); 
	}
}

166 
	gãm∂©e
<>

167 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

168 { 
	`©omic_add_l⁄g
(&
vÆ
, 
dñè
); 
	}
}

170 
	gãm∂©e
<>

171 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

172 { 
	`©omic_add_l⁄g
((vﬁ©ûe*)&
vÆ
, 
dñè
); 
	}
}

174 #i‚de‡
ARCH_LP64


176 
	gãm∂©e
<>

177 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

179 
öt64_t
 
dñèlg
=
dñè
;

180 
	`©omic_add_64
(&
vÆ
, 
dñèlg
);

181 
	}
}

183 
	gãm∂©e
<>

184 
ölöe
 
	$©omic_add_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

186 
öt64_t
 
dñèlg
=
dñè
;

187 
	`©omic_add_64
((vﬁ©ûê*)&
vÆ
, 
dñèlg
);

188 
	}
}

193 
	gãm∂©e
<
˛ass
 
	gT
>

194 
T
 
©omic_add_nv_öt_dñè
(T vﬁ©ûê&
vÆ
, 
dñè
);

196 
	gãm∂©e
<>

197 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

198 {  
	`©omic_add_öt_nv
(&
vÆ
, 
dñè
); 
	}
}

200 
	gãm∂©e
<>

201 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

202 {  
	`©omic_add_öt_nv
((*Ë&
vÆ
, 
dñè
); 
	}
}

204 
	gãm∂©e
<>

205 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

206 {  
	`©omic_add_l⁄g_nv
(&
vÆ
, 
dñè
); 
	}
}

208 
	gãm∂©e
<>

209 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

210 {  
	`©omic_add_l⁄g_nv
((*Ë&
vÆ
, 
dñè
); 
	}
}

212 #i‚de‡
ARCH_LP64


214 
	gãm∂©e
<>

215 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

216 {  
	`©omic_add_64_nv
(&
vÆ
, 
dñè
); 
	}
}

218 
	gãm∂©e
<>

219 
ölöe
 
	$©omic_add_nv_öt_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

220 {  
	`©omic_add_64_nv
((*)&
vÆ
, 
dñè
); 
	}
}

226 
	gãm∂©e
<
˛ass
 
	gT
>

227 
©omic_add_l⁄g_dñè
(
T
 vﬁ©ûê&
vÆ
, 
dñè
);

229 
	gãm∂©e
<>

230 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

231 { 
	`©omic_add_öt
(&
vÆ
, 
dñè
); 
	}
}

233 
	gãm∂©e
<>

234 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

235 { 
	`©omic_add_öt
((vﬁ©ûe*)&
vÆ
, 
dñè
); 
	}
}

237 
	gãm∂©e
<>

238 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

239 { 
	`©omic_add_l⁄g
(&
vÆ
, 
dñè
); 
	}
}

241 
	gãm∂©e
<>

242 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

243 { 
	`©omic_add_l⁄g
((vﬁ©ûe*)&
vÆ
, 
dñè
); 
	}
}

245 #i‚de‡
ARCH_LP64


247 
	gãm∂©e
<>

248 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

250 
öt64_t
 
dñèlg
=
dñè
;

251 
	`©omic_add_64
(&
vÆ
, 
dñèlg
);

252 
	}
}

254 
	gãm∂©e
<>

255 
ölöe
 
	$©omic_add_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

257 
öt64_t
 
dñèlg
=
dñè
;

258 
	`©omic_add_64
((vﬁ©ûê*)&
vÆ
, 
dñèlg
);

259 
	}
}

264 
	gãm∂©e
<
˛ass
 
	gT
>

265 
T
 
©omic_add_nv_l⁄g_dñè
(T vﬁ©ûê&
vÆ
, 
dñè
);

267 
	gãm∂©e
<>

268 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

269 {  
	`©omic_add_öt_nv
(&
vÆ
, 
dñè
); 
	}
}

271 
	gãm∂©e
<>

272 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

273 {  
	`©omic_add_öt_nv
((*Ë&
vÆ
, 
dñè
); 
	}
}

275 
	gãm∂©e
<>

276 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

277 {  
	`©omic_add_l⁄g_nv
(&
vÆ
, 
dñè
); 
	}
}

279 
	gãm∂©e
<>

280 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

281 {  
	`©omic_add_l⁄g_nv
((*Ë&
vÆ
, 
dñè
); 
	}
}

283 #i‚de‡
ARCH_LP64


285 
	gãm∂©e
<>

286 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

287 {  
	`©omic_add_64_nv
(&
vÆ
, 
dñè
); 
	}
}

289 
	gãm∂©e
<>

290 
ölöe
 
	$©omic_add_nv_l⁄g_dñè
(vﬁ©ûê&
vÆ
, 
dñè
)

291 {  
	`©omic_add_64_nv
((*)&
vÆ
, 
dñè
); 
	}
}

	@src/fc/block_alloc.cpp

24 
	~"block_Æloc.h
"

26 
	~<ˇs£π
>

28 
	gdy≈oﬁ
::
	$dy≈oﬁ
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
log2_block_size
, size_à
max_byãs
)

29 : 
	`_chù_size
(
chù_size
)

30 , 
	`_chù_cou¡
(
chù_cou¡
)

31 , 
	`_log2_block_size
(
log2_block_size
)

32 , 
	$_¨r_íd
(0)

34 
	`±hªad_muãx_öô
(&
_lock
, 0);

35 
öôEº‹
 = 
_¨r
.
	`öô
(
max_byãs
, 
	`size_t
(1Ë<< 
_log2_block_size
);

36 i‡(
öôEº‹
!=0)

38 
	`Ârötf
(
°dîr
, "Eº‹ i¿dy≈oﬁ inôüliz©i⁄: %d\n", 
öôEº‹
);

39 
throw
 
°d
::
	`bad_Æloc
();

41 
	}
}

43 
	gdy≈oﬁ
::~
	$dy≈oﬁ
() {

44 
	`±hªad_muãx_de°roy
(&
_lock
);

45 
_¨r
.
	`föi
();

46 
	}
}

48 
	gdy≈oﬁ
::
mblock
* 
dy≈oﬁ
::
	$_acquúe_block
() {

49 
mblock
* 
rvÆ
;

50 
	`±hªad_muãx_lock
(&
_lock
);

51 if(
_‰ì_li°
.
	`em±y
()) {

52 
size_t
 
block_size
 = 
	`size_t
(1Ë<< 
_log2_block_size
;

53 
size_t
 
√w_íd
 = 
_¨r_íd
+
block_size
;

54 
îr
 = 
_¨r
.
	`ísuª_ˇ∑côy
(
√w_íd
);

55 if(
îr
Ë
throw
 
°d
::
	`bad_Æloc
();

56 
rvÆ
 = 
	`√w
 (
_¨r
+
_¨r_íd
Ë
	`mblock
(
_chù_size
, 
_chù_cou¡
, 
block_size
);

57 
_¨r_íd
 = 
√w_íd
;

60 
rvÆ
 = 
_‰ì_li°
.
	`‰⁄t
();

61 
_‰ì_li°
.
	`p›_‰⁄t
();

63 
	`±hªad_muãx_u∆ock
(&
_lock
);

65  
rvÆ
;

66 
	}
}

68 
	gdy≈oﬁ
::
	$_ªÀa£_block
(
mblock
* 
b
) {

69 
	`±hªad_muãx_lock
(&
_lock
);

70 
_‰ì_li°
.
	`push_back
(
b
);

71 
	`±hªad_muãx_u∆ock
(&
_lock
);

72 
	}
}

74 
boﬁ
 
	gdy≈oﬁ
::
	$vÆid©e_poöãr
(* 
±r
) {

76 uni⁄ { * 
v
; * 
c
; } 
u
={
±r
};

77 
size_t
 
off£t
 = 
u
.
c
 - 
_¨r
;

78  
off£t
 < 
_¨r_íd
;

79 
	}
}

81 
	~<m≠
>

82 
	gblob_poﬁ
::
hñ≥r
 {

83 
BLBlob
 : 
és_åicks
::
és_blob
<
BlockLi°
> {

84 
öôülized
;

85 
BLBlob
(Ë: 
öôülized
(
Ál£
) { }

87 
	g°d
::
	tm≠
<*, 
	tBLBlob
> 
	tBLM≠
;

89 íum { 
	gOVERHEAD
=(
mem‹y_block
::
block
) };

90 íum { 
	gMAX_CHIPS
=
mem‹y_block
::
block_bôs
::
MAX_CHIPS
 };

92 
size_t
 
log2
(
n
) {

93 if(
	gn
 <= 0)

95  1 + 
log2
(
n
/2);

98 
size_t
 
compuã_byãs_log2
(
chù_size
) {

99 
	gmö_chùs
 = 
MAX_CHIPS
/2+1;

100 
	gbyãs_√eded
 = 
mö_chùs
*
chù_size
 + 
OVERHEAD
;

101  
log2
(2*
byãs_√eded
 - 1);

104 
size_t
 
compuã_byãs
(
chù_size
) {

105  1 << 
compuã_byãs_log2
(
chù_size
);

108 
size_t
 
compuã_cou¡
(
chù_size
) {

109 
	gbyãs
 = 
compuã_byãs
(
chù_size
);

110 
	gªÆ_cou¡
 = (
byãs
 - 
OVERHEAD
)/
chù_size
;

111  
	g°d
::
mö
<>(
MAX_CHIPS
, 
	gªÆ_cou¡
);

115 
öô_blm≠
() { }

116 
föi_blm≠
() {

117 
BLM≠
* 
	gblm
 = 
blm≠
(
Ál£
);

118 if(!
	gblm
)

121 
	gBLM≠
::
ôî©‹
 
ô
=
blm
->
begö
(); 
	gô
 !blm->
íd
(); ++it) {

122 
as£π
(
ô
->
£c⁄d
.
öôülized
);

123 
	gô
->
	g£c⁄d
.
gë
()->~
BlockLi°
();

125 
	gblm
->~
BLM≠
();

127 
boﬁ
 
öôülize
() {

128 
	gés_åicks
::
és_m™agî
::
ªgi°î_és
(&
öô_blm≠
, &
föi_blm≠
);

129  
	gåue
;

131 
BLM≠
* 
blm≠
(
boﬁ
 
f‹˚
=
åue
) {

136 
__thªad
 
boﬁ
 
blm≠_öôülized
 = 
Ál£
;

137 
__thªad
 
	gés_åicks
::
és_blob
<
BLM≠
> 
és_blm≠
;

138 if(!
	gblm≠_öôülized
) {

139 if(!
	gf‹˚
)

140  
	gNULL
;

142 
	gés_blm≠
.
öô
();

143 
	gblm≠_öôülized
 = 
åue
;

146  
	gés_blm≠
.
gë
();

148 
boﬁ
 
gë_bli°
(
BlockLi°
** 
rbl
, * 
ow√r
) {

149 
	gBLM≠
 &
	gblm
 = *
blm≠
();

150 
	gBLBlob
 &
	gbl
 = 
blm
[
ow√r
];

151 *
	grbl
 = 
bl
.
gë
();

152 if(
	gbl
.
	göôülized
)

153  
	gåue
;

154 
	gbl
.
	göôülized
 = 
åue
;

155  
	gÁl£
;

160 
	#BLOB_POOL_TEMPLATE_ARGS
 
_chù_size
, 
_chù_cou¡
, 
_block_size


	)

162 
	gblob_poﬁ
::
	$blob_poﬁ
(
size_t
 
size
)

163 : 
	`_chù_size
((
size
 + () - 1) & -())

164 , 
	`_block_size
(
hñ≥r
::
	`compuã_byãs
(
_chù_size
))

165 , 
	`_chù_cou¡
(
hñ≥r
::
	`compuã_cou¡
(
_chù_size
))

166 , 
	`_poﬁ
(
_chù_size
, 
_chù_cou¡
,

167 
hñ≥r
::
	`compuã_byãs_log2
(
_chù_size
),

170 
	`as£π
(
size
 >= ());

171 
	}
}

177 * 
	gblob_poﬁ
::
	$acquúe
() {

178 
BlockLi°
* 
bli°
;

179 if(! 
hñ≥r
::
	`gë_bli°
(&
bli°
, &
_poﬁ
))

180 
	`√w
 (
bli°
Ë
	`BlockLi°
(&
_poﬁ
, 
BLOB_POOL_TEMPLATE_ARGS
);

181 * 
±r
 = 
bli°
->
	`acquúe
(
BLOB_POOL_TEMPLATE_ARGS
);

182 
	`as£π
(
_poﬁ
.
	`vÆid©e_poöãr
(
±r
));

183  
±r
;

184 
	}
}

190 
	gblob_poﬁ
::
	$de°roy
(* 
±r
) {

191 
	`as£π
(
_poﬁ
.
	`vÆid©e_poöãr
(
±r
));

192 
mem‹y_block
::
block
::
	`ªÀa£
(
±r
, 
BLOB_POOL_TEMPLATE_ARGS
);

193 
	}
}

	@src/fc/block_alloc.h

24 #i‚de‡
BLOCK_ALLOC_H


25 
	#BLOCK_ALLOC_H


	)

28 
	~"dy«ºay.h
"

29 
	~"mem_block.h
"

32 
	~<√w
>

33 
	~<w.h
>

34 
	~<°dlib.h
>

35 
	~<deque
>

39 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
>

40 
˛ass
 
	gblock_Æloc
;

42 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
>

43 
ölöe


44 * 
›î©‹
 
√w
(
size_t
 
nbyãs
, 
block_Æloc
<
T
, 
MaxByãs
> &
Æloc
);

46 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
>

47 
ölöe


48 
›î©‹
 
dñëe
(* 
±r
, 
block_Æloc
<
T
, 
MaxByãs
> &
Æloc
);

51 
	gdy≈oﬁ
 : 
mem‹y_block
::
block_poﬁ
 {

52 
mem‹y_block
::
	tblock
 
	tmblock
;

53 
±hªad_muãx_t
 
	g_lock
;

54 
dy«ºay
 
	g_¨r
;

55 
	g°d
::
deque
<
mblock
*> 
_‰ì_li°
;

56 
size_t
 
	g_chù_size
;

57 
size_t
 
	g_chù_cou¡
;

58 
size_t
 
	g_log2_block_size
;

59 
size_t
 
	g_¨r_íd
;

61 
NORET
 
dy≈oﬁ
(
size_t
 
chù_size
, size_à
chù_cou¡
,

62 
size_t
 
log2_block_size
, size_à
max_byãs
);

64 
vútuÆ


65 
	gNORET
 ~
dy≈oﬁ
();

67 
vútuÆ


68 
boﬁ
 
vÆid©e_poöãr
(* 
±r
);

70 
	g¥Ÿe˘ed
:

72 
size_t
 
_size
() const;

74 
mblock
* 
_©
(
size_t
 
i
);

76 
vútuÆ


77 
mblock
* 
_acquúe_block
();

79 
vútuÆ


80 
_ªÀa£_block
(
mblock
* 
b
);

125 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gPoﬁ
=
dy≈oﬁ
, 
size_t
 
	gMaxByãs
=0>

126 
	sblock_poﬁ


128 
mem‹y_block
::
	tmëa_block_size
<(
	tT
)> 
	tBlockSize
;

131 
size_t
 
block_size
(Ë{  
	mBlockSize
::
BYTES
; }

132 
size_t
 
chù_cou¡
(Ë{  
	mBlockSize
::
COUNT
; }

133 
size_t
 
chù_size
(Ë{  (
	mT
); }

136 
	#TEMPLATE_ARGS
 
	`chù_size
(), 
	`chù_cou¡
(), 
	`block_size
()

	)

139 
Poﬁ
* 
gë_poﬁ
() {

140 
Poﬁ
 
p
(
chù_size
(), 
chù_cou¡
(), 
BlockSize
::
LOG2
,

141 
MaxByãs
? MaxBytes : 64*1024*1024);

142  &
	mp
;

145 
block_poﬁ
()

146 : 
_bli°
(
gë_poﬁ
(), 
TEMPLATE_ARGS
)

154 
block_poﬁ
(block_pool const &)

155 : 
_bli°
(
gë_poﬁ
(), 
TEMPLATE_ARGS
)

160 
	mblock_poﬁ
 &
	m›î©‹
=(
block_poﬁ
 c⁄°&Ë{  *
this
; }

164 * 
acquúe
() {

165  
	m_bli°
.
acquúe
(
TEMPLATE_ARGS
);

173 
ªÀa£
(* 
±r
) {

174 
as£π
(
gë_poﬁ
()->
vÆid©e_poöãr
(
±r
));

175 
	mmem‹y_block
::
block
::
ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

178 
	m¥iv©e
:

179 
mem‹y_block
::
block_li°
 
_bli°
;

183 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
=0>

184 
	sblock_Æloc
 {

186 
block_poﬁ
<
	tT
, 
	tdy≈oﬁ
, 
	tMaxByãs
> 
	tPoﬁ
;

189 
de°roy_obje˘
(
T
* 
±r
) {

190 
	m±r
->~
T
();

191 
	mPoﬁ
::
ªÀa£
(
±r
);

194 
	m¥iv©e
:

195 
Poﬁ
 
_poﬁ
;

198 
‰õnd
 * 
›î©‹
 
	m√w
<>(
	msize_t
, 
	mblock_Æloc
<
	mT
,
	mMaxByãs
> &);

199 
‰õnd
 
›î©‹
 
	mdñëe
<>(*, 
	mblock_Æloc
<
	mT
,
	mMaxByãs
> &);

202 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
>

203 
ölöe


204 * 
›î©‹
 
√w
(
size_t
 
nbyãs
, 
block_Æloc
<
T
,
MaxByãs
> &
Æloc
)

206 (Ë
	gnbyãs
;

207 
w_as£π1
(
nbyãs
 =(
T
));

208  
	gÆloc
.
	g_poﬁ
.
acquúe
();

215 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gMaxByãs
>

216 
ölöe


217 
›î©‹
 
dñëe
(* 
±r
, 
block_Æloc
<
T
,
MaxByãs
> &
Æloc
)

219 
	gblock_Æloc
<
	gT
,
	gMaxByãs
>::
Poﬁ
::
ªÀa£
(
±r
);

220 
w_as£π2
(0);

223 
ölöe


224 
size_t
 
	gdy≈oﬁ
::
	$_size
() const {

225  
_¨r_íd
 >> 
_log2_block_size
;

226 
	}
}

228 
ölöe


229 
	gdy≈oﬁ
::
mblock
* 
dy≈oﬁ
::
	$_©
(
size_t
 
i
) {

230 
size_t
 
off£t
 = 
i
 << 
_log2_block_size
;

231 uni⁄ { * 
c
; 
mblock
* 
b
; } 
u
 = {
_¨r
+
off£t
};

232  
u
.
b
;

233 
	}
}

237 #unde‡
TEMPLATE_ARGS


240 
	gãm∂©e
<
˛ass
 
	gT
>

241 
	sobje˘_ˇche_deÁu…_Á˘‹y
 {

243 
T
*

244 
c⁄°ru˘
(* 
±r
Ë{  
√w
 (±rË
	mT
; }

247 
de°roy
(
T
* 
t
Ë{ 
	mt
->~T(); }

250 
ª£t
(
T
* 
t
) { }

252 
T
*

253 
öô
(
T
* 
t
Ë{  
	mt
; }

256 
	gãm∂©e
<
˛ass
 
	gT
>

257 
	sobje˘_ˇche_öôülizög_Á˘‹y
 {

259 
T
*

260 
c⁄°ru˘
(* 
±r
Ë{  
√w
 (±rË
	mT
; }

263 
de°roy
(
T
* 
t
Ë{ 
	mt
->~T(); }

266 
ª£t
(
T
* 
t
Ë{ 
	mt
->reset(); }

268 
T
*

269 
öô
(
T
* 
t
Ë{ 
	mt
->init(); Å; }

272 
	mãm∂©e
<
˛ass
 
	mArg1
>

273 
T
* 
öô
(T* 
t
, 
Arg1
 
¨g1
Ë{ 
	mt
->init(arg1); Å; }

274 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
>

275 
T
* 
öô
(T* 
t
, 
Arg1
 
¨g1
, 
Arg2
 
¨g2
Ë{ 
	mt
->init(arg1,árg2); Å; }

276 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
, cœs†
	mArg3
>

277 
T
* 
öô
(T* 
t
, 
Arg1
 
¨g1
, 
Arg2
 
¨g2
, 
Arg3
 
¨g3
Ë{ 
	mt
->init(arg1,árg2,árg3); Å; }

278 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
, cœs†
	mArg3
, cœs†
	mArg4
>

279 
T
* 
öô
(T* 
t
, 
Arg1
 
¨g1
, 
Arg2
 
¨g2
, 
Arg3
 
¨g3
, 
Arg4
 
¨g4
Ë{ 
	mt
->init(arg1,árg2,árg3,árg4); Å; }

283 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gTFa˘‹y
=
obje˘_ˇche_deÁu…_Á˘‹y
<
T
>, 
size_t
 
	gMaxByãs
=0>

284 
	sobje˘_ˇche
 {

287 
T
* 
acquúe
() {

288  
TFa˘‹y
::
öô
(
_acquúe
());

290 
	mãm∂©e
<
˛ass
 
	mArg1
>

291 
T
* 
acquúe
(
Arg1
 
¨g1
) {

292  
	mTFa˘‹y
::
öô
(
_acquúe
(), 
¨g1
);

294 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
>

295 
T
* 
acquúe
(
Arg1
 
¨g1
, 
Arg2
 
¨g2
) {

296  
	mTFa˘‹y
::
öô
(
_acquúe
(), 
¨g1
, 
¨g2
);

298 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
, cœs†
	mArg3
>

299 
T
* 
acquúe
(
Arg1
 
¨g1
, 
Arg2
 
¨g2
, 
Arg3
 
¨g3
) {

300  
	mTFa˘‹y
::
öô
(
_acquúe
(), 
¨g1
, 
¨g2
, 
¨g3
);

303 
	mãm∂©e
<
˛ass
 
	mArg1
, cœs†
	mArg2
, cœs†
	mArg3
, cœs†
	mArg4
>

304 
T
* 
acquúe
(
Arg1
 
¨g1
, 
Arg2
 
¨g2
, 
Arg3
 
¨g3
, 
Arg4
 
¨g4
) {

305  
	mTFa˘‹y
::
öô
(
_acquúe
(), 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
);

308 
T
* 
_acquúe
() {

310 uni⁄ { * 
	mv
; 
T
* 
	mt
; } 
	mu
 = {
_poﬁ
.
acquúe
()};

311  
	mu
.
	mt
;

315 
ªÀa£
(
T
* 
obj
) {

316 
	mTFa˘‹y
::
ª£t
(
obj
);

317 
	mPoﬁ
::
ªÀa£
(
obj
);

320 
	m¥iv©e
:

322 
ˇche_poﬁ
 : 
dy≈oﬁ
 {

325 
NORET
 
ˇche_poﬁ
(
size_t
 
cs
, size_à
cc
, size_à
l2bs
, size_à
mb
)

326 : 
dy≈oﬁ
(
cs
, 
cc
, 
l2bs
, 
mb
)

330 
vútuÆ
 
_ªÀa£_block
(
mblock
* 
b
);

331 
vútuÆ
 
mblock
* 
_acquúe_block
();

332 
vútuÆ
 
	mNORET
 ~
ˇche_poﬁ
();

335 
	mblock_poﬁ
<
	tT
, 
	tˇche_poﬁ
, 
	tMaxByãs
> 
	tPoﬁ
;

337 
Poﬁ
 
	m_poﬁ
;

341 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gTF
, 
size_t
 
	gM
>

342 
ölöe


343 
	gobje˘_ˇche
<
	gT
,
	gTF
,
	gM
>::
ˇche_poﬁ
::
	$_ªÀa£_block
(
mblock
* 
b
) {

344 uni⁄ { 
ˇche_poﬁ
* 
˝
; 
mem‹y_block
::
block_li°
* 
bl
; } 
u
={
this
};

345 
b
->
_ow√r
 = 
u
.
bl
;

346 
dy≈oﬁ
::
	`_ªÀa£_block
(
b
);

347 
	}
}

352 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gTF
, 
size_t
 
	gM
>

353 
ölöe


354 
	gdy≈oﬁ
::
mblock
* 
obje˘_ˇche
<
T
,
	gTF
,
	gM
>::
ˇche_poﬁ
::
	$_acquúe_block
() {

355 
dy≈oﬁ
::
mblock
* 
b
 = dy≈oﬁ::
	`_acquúe_block
();

356 * 
me
 = 
this
;

357 if(
me
 !
b
->
_ow√r
) {

359 
size_t
 
j
=0; j < 
Poﬁ
::
	`chù_cou¡
(); j++)

360 
TF
::
	`c⁄°ru˘
(
b
->
	`_gë
(
j
, 
Poﬁ
::
	`chù_size
()));

361 
b
->
_ow√r
 = 0;

363  
b
;

364 
	}
}

368 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gTF
, 
size_t
 
	gM
>

369 
ölöe


370 
NORET
 
	gobje˘_ˇche
<
	gT
,
	gTF
,
	gM
>::
ˇche_poﬁ
::~
	$ˇche_poﬁ
() {

371 
size_t
 
size
 = 
	`_size
();

372 
size_t
 
i
=0; i < 
size
; i++) {

373 
mblock
* 
b
 = 
	`_©
(
i
);

374 
size_t
 
j
=0; j < 
Poﬁ
::
	`chù_cou¡
(); j++) {

375 uni⁄ { * 
c
; 
T
* 
t
; } 
u
 = {
b
->
	`_gë
(
j
, 
Poﬁ
::
	`chù_size
())};

376 
TF
::
	`de°roy
(
u
.
t
);

379 
	}
}

386 
	sblob_poﬁ


388 
dy≈oﬁ
 
	tPoﬁ
;

389 
	mmem‹y_block
::
	tblock_li°
 
	tBlockLi°
;

391 
	mhñ≥r
;

392 
blob_poﬁ
(
size_t
 
size
);

394 
size_t
 
nbyãs
(Ëc⁄° {  
	m_chù_size
; }

396 * 
acquúe
();

398 
de°roy
(* 
±r
);

400 
	m¥iv©e
:

401 
size_t
 
_chù_size
;

402 
size_t
 
	m_block_size
;

403 
size_t
 
	m_chù_cou¡
;

404 
Poﬁ
 
	m_poﬁ
;

407 
blob_poﬁ
(blob_pool&);

408 
	m›î©‹
=(
blob_poﬁ
&);

411 
ölöe


412 * 
›î©‹
 
√w
(
size_t
 
W_IFDEBUG1
(
nbyãs
), 
blob_poﬁ
 &
Æloc
)

414 
w_as£π1
(
nbyãs
 <
Æloc
.nbytes());

415  
	gÆloc
.
acquúe
();

422 
ölöe


423 
›î©‹
 
	$dñëe
(* 
±r
, 
blob_poﬁ
 &
Æloc
)

425 
Æloc
.
	`de°roy
(
±r
);

426 
	}
}

	@src/fc/common_tmpl.cpp

30 
	~"w_deföes.h
"

37 #ifde‡
EXPLICIT_TEMPLATE


38 
	~"w.h
"

39 
	~"w_mömax.h
"

41 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<>;

43 #i‚de‡
GNUG_BUG_14


44 
ãm∂©e
 
	gmax
<>(, );

45 
ãm∂©e
 
u_l⁄g
 
	gmax
<
	gu_l⁄g
>(u_long, u_long);

46 
ãm∂©e
 
	gmax
<>( , );

47 
ãm∂©e
 
u_öt
 
	gmax
<
	gu_öt
>( u_int, u_int);

48 
ãm∂©e
 
u_sh‹t
 
	gmax
<
	gu_sh‹t
>( u_short, u_short);

	@src/fc/cpu_info.cpp

1 
	~"˝u_öfo.h
"

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	~<c°dlib
>

6 
	~<uni°d.h
>

8 #ifde‡
__x86_64__


9 
	g˝u_öfo
::
im∂_hñ≥r
 {

10 
˝uid
(
a1_b
=
˝uid_a1_b
()) {

11  
a1_b
 >> 24;

13 
sockë_size
(
a1_b
=
˝uid_a1_b
()) {

14  (
a1_b
 >> 16) & 0xff;

16 
˝uid_a1_b
() {

17 
	gouçut
;

18 
asm
("˝uid" : "=b"(
ouçut
) : "a"(1));

19  
	gouçut
;

23 
	g˝u_öfo
::
	$˝uid
() {

24  
im∂_hñ≥r
::
	`˝uid
();

25 
	}
}

27 
	g˝u_öfo
::
	$sockë_£lf
() {

28 
a1b
 = 
im∂_hñ≥r
::
	`˝uid_a1_b
();

29  
im∂_hñ≥r
::
	`˝uid
(
a1b
)/im∂_hñ≥r::
	`sockë_size
(a1b);

30 
	}
}

31 
	g˝u_öfo
::
	$sockë_of
(
˝uid
) {

32  
˝uid
/
im∂_hñ≥r
::
	`sockë_size
();

33 
	}
}

34 
	g˝u_öfo
::
	$öô_im∂
(Ë{ 
	}
}

36 #ñi‡
deföed
(
__SVR4
)

37 
	~<dlf˙.h
>

38 
	~<•awn.h
>

40 * 
	t±hªad_run_‚
(*);

41 
	t±hªad_¸óã_‚
(
	t±hªad_t
*, 
	t±hªad_©å_t
 c⁄°*, 
	t±hªad_run_‚
*, *);

44 
˝u_öfo
::
im∂_hñ≥r
 {

45 
±hªad_run_‚
 
run_wøµî
;

46 
±hªad_¸óã_‚
 
¸óã_wøµî
;

47 
±hªad_¸óã_‚
* 
ﬁd_±hªad_¸óã
;

48 
__thªad
 vﬁ©ûê
dåa˚_˝uid
;

49 
pid_t
 
dåa˚_pid
;

50 
	sru«rgs
 {

51 
±hªad_run_‚
* 
runme
;

52 * 
¨g
;

56 
	g˝u_öfo
::
	$sockë_of
(
cid
) {

57  
cid
/(
	`˝u_cou¡
()/
	`sockë_cou¡
());

58 
	}
}

59 
	g˝u_öfo
::
	$sockë_£lf
(Ë{  
	`sockë_of
(
	`˝uid
()); 
	}
}

60 
	g˝u_öfo
::
	$˝uid
(Ë{  *&
˝u_öfo
::
im∂_hñ≥r
::
dåa˚_˝uid
; 
	}
}

62 
pid_t
 
	g˝u_öfo
::
im∂_hñ≥r
::
dåa˚_pid
 = 0;

63 vﬁ©ûê
	g˝u_öfo
::
im∂_hñ≥r
::
dåa˚_˝uid
 = -1;

67 "C" 
˝u_öfo_dåa˚_globÆ_hook
(vﬁ©ûe* 
ªady
) ;

68 "C" 
˝u_öfo_dåa˚_thªad_hook
(vﬁ©ûe* 
˝uid
) ;

75 
˝u_öfo
::
im∂_hñ≥r
::
	$run_wøµî
(* 
¨g
)

77 
ru«rgs
* 
a
 = (ru«rgs*Ë
¨g
;

78 
±hªad_run_‚
* 
runme
 = 
a
->runme;

79 
¨g
 = 
a
->arg;

80 
dñëe
 
a
;

81 
	`˝u_öfo_dåa˚_thªad_hook
(&
dåa˚_˝uid
);

82  
	`runme
(
¨g
);

83 
	}
}

85 
	$±hªad_¸óã
(
±hªad_t
 *
tid
, 
±hªad_©å_t
 c⁄°* 
©å
,

86 
±hªad_run_‚
* 
runme
, * 
¨g
)

88 
˝u_öfo
::
im∂_hñ≥r
::
ru«rgs
 
a
 = {
runme
, 
¨g
};

89  
˝u_öfo


90 ::
im∂_hñ≥r


91 ::
	`ﬁd_±hªad_¸óã
(
tid
, 
©å
,

92 &
˝u_öfo
::
im∂_hñ≥r
::
run_wøµî
,

93 
√w
 
˝u_öfo
::
im∂_hñ≥r
::
	`ru«rgs
(
a
));

94 
	}
}

96 
±hªad_¸óã_‚
* 
˝u_öfo
::
im∂_hñ≥r
::
ﬁd_±hªad_¸óã
=0;

98 
	g˝u_öfo
::
	$öô_im∂
() {

99 if(
im∂_hñ≥r
::
dåa˚_pid
)

103 
im∂_hñ≥r
::
ﬁd_±hªad_¸óã
 = (
±hªad_¸óã_‚
*)

104 
	`dlsym
(
RTLD_NEXT
, "pthread_create");

110 
	#STR
(
x
Ë
	`STR2
(x)

	)

111 
	#STR2
(
x
Ë#x

	)

112 
	#ALLOCA
(
ty≥
Ë—y≥*Ë
	`Æloˇ
(—y≥))

	)

113 
	#COPYIN
(
±r
, 
ty≥
Ë—y≥*Ë
	`c›yö
((Ë±r, —y≥))

	)

114 
	#COPYOUT
(
§c
, 
de°
Ë
	`c›yout
(§c, (Ëde°, (*§c))

	)

116 
pid°r
[10];

117 * 
¨gv
[] = {

121 
	`STR
(
pid$1
::
˝u_öfo_dåa˚_globÆ_hook
:
íåy


124 
this
->
tmp
 = 
	`ALLOCA
();

125 *
this
->
tmp
 = 1;

126 
	`COPYOUT
(
this
->
tmp
, 
¨g0
);

128 
pid$1
::
˝u_öfo_dåa˚_thªad_hook
:
íåy


131 
£lf
->
˝uid_±r
 = 
¨g0
;

133 
pid$1
::
˝u_öfo_dåa˚_thªad_hook
:
íåy
Ë"," 
	`STR
(

134 
sched
::
ªsume
:
⁄
-
˝u


135 /
£lf
->
˝uid_±r
/ {

136 
this
->
˝uid
 = 
	`ALLOCA
();

137 *
this
->
˝uid
 = 
˝u
;

138 
	`COPYOUT
(
this
->
˝uid
, 
£lf
->
˝uid_±r
);

140 
¥oc
:::
exô


141 /
pid
 =
$1
/ {

142 
	`exô
(0);

145 
pid°r
,

149 
	#ATTEMPT
(
a˘i⁄
) do { \

150 if(
îr
 = 
a˘i⁄
) { \

151 
°d
::
	`Ârötf
(
°dîr
, "%s failed withÉrror %d\n", \

152 #a˘i⁄, 
îr
); \

153 
°d
::
	`exô
(-1); \

155 } 0)

	)

158 
posix_•awn_fûe_a˘i⁄s_t
 
Á
;

159 
	`ATTEMPT
(
	`posix_•awn_fûe_a˘i⁄s_öô
(&
Á
));

160 
	`ATTEMPT
(
	`posix_•awn_fûe_a˘i⁄s_add˛o£
(&
Á
, 
STDIN_FILENO
));

161 
	`ATTEMPT
(
	`posix_•awn_fûe_a˘i⁄s_add˛o£
(&
Á
, 
STDOUT_FILENO
));

162 
	`ATTEMPT
(
	`posix_•awn_fûe_a˘i⁄s_add˛o£
(&
Á
, 
STDERR_FILENO
));

165 
posix_•aw«âr_t
 
ß
;

166 
sig£t_t
 
sm
;

167 
	`sigfûl£t
(&
sm
);

168 
	`sigdñ£t
(&
sm
, 
SIGINT
);

169 
	`ATTEMPT
(
	`posix_•aw«âr_öô
(&
ß
));

170 
	`ATTEMPT
(
	`posix_•aw«âr_£tsigmask
(&
ß
, &
sm
));

171 
	`ATTEMPT
(
	`posix_•aw«âr_£tÊags
(&
ß
, 
POSIX_SPAWN_SETSIGMASK
));

174 
°d
::
	`•rötf
(
pid°r
, "%d", 
	`gëpid
());

177 
	`ATTEMPT
(
	`posix_•awn
(&
im∂_hñ≥r
::
dåa˚_pid
, "/usr/sbin/dtrace",

178 &
Á
, &
ß
, 
¨gv
, 0));

181 vﬁ©ûê
dåa˚_ªady
 = 0;

182 
°d
::
	`Ârötf
(
°dîr
, "Waiting for dtrace...\n");

183  ! *&
dåa˚_ªady
) {

184 
	`˝u_öfo_dåa˚_globÆ_hook
(&
dåa˚_ªady
);

185 
	`u¶ìp
(10*1000);

187 
°d
::
	`¥ötf
("... dtraceÑeady\n");

188 
	`˝u_öfo_dåa˚_thªad_hook
(&
im∂_hñ≥r
::
dåa˚_˝uid
);

189 
	}
}

192 #îr‹ 
S‹ry
, 
no
 
way
 
to
 
idítify
 
the
 
˝u
 
a
 
thªad
 
is
 
ru¬ög
 
⁄


195 #i‡
deföed
(
__löux__
Ë|| deföed(
__CYGWIN__
)

196 
	~<£t
>

197 
	~<f˙é.h
>

198 
	~<f°ªam
>

199 
	#IF_MATCH
(
°r
, 
theSë
) \

200 i‡–(
pos
=
	`°r°r
(
löe
.
	`c_°r
(), 
°r
)) ) { \

201 
id
; \

202 i‡(1 =
	`ssˇnf
(
pos
, 
°r
 "%d", &
id
)) { \

203 
theSë
.
	`ö£π
(
id
); \

205 }

	)

206 
	g˝u_öfo
::
hñ≥r
::
	$compuã_cou¡s
(* 
ccou¡
, * 
scou¡
) {

207 
°d
::
if°ªam
 
	`öfûe
("/proc/cpuinfo");

208 
°d
::
°rög
 
löe
;

209 
°d
::
£t
<> 
˝us
, 
sockës
;

210 
°d
::
	`gëlöe
(
öfûe
, 
löe
)) {

211 c⁄° * 
pos
;

212 
	`IF_MATCH
("¥o˚ss‹ : ", 
˝us
);

213 
	`IF_MATCH
("physiˇ»id : ", 
sockës
);

216 *
ccou¡
 = 
˝us
.
	`size
();

217 *
scou¡
 = 
sockës
.
	`size
();

218 i‡(
nŸ
 *
scou¡
) {

219 
	`Ârötf
(
°dîr
, "No 'physical id' field seen,ássumingá single socket\n");

220 *
scou¡
 = 1;

222 if(
nŸ
 *
ccou¡
) {

223 
	`Ârötf
(
°dîr
, "UnableÅoÑead /proc/cpuinfo\n");

224 
	`exô
(-1);

226 
°d
::
	`Ârötf
(
°dîr
, "cpu_info sees %ld socketsánd %ld cores\n",

227 *
scou¡
, *
ccou¡
);

228 
	}
}

230 #ñi‡
deföed
(
__SVR4
)

231 
	~<k°©.h
>

232 
	g˝u_öfo
::
hñ≥r
::
	$compuã_cou¡s
(* 
ccou¡
, * 
scou¡
) {

233 
sockë_cou¡
 = 0;

234 
˝u_cou¡
 = 0;

235 
k°©_˘l_t
* 
kc
 = 
	`k°©_›í
();

236 
k°©_t
* 
k•
 = 
kc
->
kc_chaö
; k•; k•=k•->
ks_√xt
) {

237 if–! 
°d
::
	`°rcmp
(
k•
->
ks_moduÀ
, "lgrp"))

238 
sockë_cou¡
++;

239 if–! 
°d
::
	`°rcmp
(
k•
->
ks_moduÀ
, "cpu")

240 && ! 
°d
::
	`°rcmp
(
k•
->
ks_«me
, "sys"))

241 
˝u_cou¡
++;

243 
	`k°©_˛o£
(
kc
);

244 
°d
::
	`Ârötf
(
°dîr
, "cpu_info sees %ld socketsánd %ld cores\n",

245 
sockë_cou¡
, 
˝u_cou¡
);

246 *
ccou¡
 = 
˝u_cou¡
;

247 *
scou¡
 = 
sockë_cou¡
;

248 
	}
}

250 #ñi‡
deföed
(
__APPLE__
)

256 
	~<sys/ty≥s.h
>

257 
	~<sys/sys˘l.h
>

260 
	#USE_PHYSICAL_CPUS


	)

262 
	g˝u_öfo
::
hñ≥r
::
	$compuã_cou¡s
(* 
ccou¡
, * 
scou¡
)

265 
sockë_cou¡
 = 1;

266 
˝u_cou¡
 = 1;

271 #ifde‡
USE_PHYSICAL_CPUS


272 
≈hysiˇl
=0;

273 *
ccou¡
 = 
˝u_cou¡
;

274 
size_t
 
≈hysiˇl_size
 = (
≈hysiˇl
);

275 
	`sys˘lby«me
("hw.physiˇl˝u", &
≈hysiˇl
, &
≈hysiˇl_size
, 
NULL
, 0);

276 
˝u_cou¡
 = 
≈hysiˇl
;

278 
n˝us
=0;

279 
size_t
 
n˝us_size
 = (
n˝us
);

280 
	`sys˘lby«me
("hw.n˝u", &
n˝us
, &
n˝us_size
, 
NULL
, 0);

281 
˝u_cou¡
 = 
n˝us
;

284 *
ccou¡
 = 
˝u_cou¡
;

285 *
scou¡
 = 
sockë_cou¡
;

287 
°d
::
	`Ârötf
(
°dîr
, "cpu_info sees %ld socketsánd %ld cores\n",

288 
sockë_cou¡
, 
˝u_cou¡
);

289 
	}
}

292 #îr‹ 
S‹ry
, 
no
 
way
 
to
 
idítify
 
the
 
numbî
 
of
 
sockës
 
ö
 
this
 
machöe


296 
	~<c°dio
>

297 
	$maö
() {

299 
i
=0; i < 5; i++) {

300 
˝uid
 = 
˝u_öfo
::
	`˝uid
();

301 
°d
::
	`¥ötf
("My cpuidÖoöã∏i†%p\n", &
˝u_öfo
::
im∂_hñ≥r
::
dåa˚_˝uid
);

302 
°d
::
	`¥ötf
("I'mÑu¬ög o¿˝u:%ldánd sockë:%ld\n", 
˝uid
, 
˝u_öfo
::
	`sockë_of
(cpuid));

303 
	`¶ìp
(1);

305 
	}
};

	@src/fc/cpu_info.h

1 #i‚de‡
__CPU_INFO_H


2 
	#__CPU_INFO_H


	)

4 
	s˝u_öfo
 {

5 
˝uid
();

6 
sockë_of
(
˝uid
);

8 
sockë_£lf
();

9 
sockë_cou¡
(Ë{  
gë_hñ≥r
()->
	msockë_cou¡
; }

10 
˝u_cou¡
(Ë{  
gë_hñ≥r
()->
	m˝u_cou¡
; }

12 
	shñ≥r
 {

13 
compuã_cou¡s
(*
ccou¡
, * 
scou¡
);

14 
hñ≥r
() {

15 
compuã_cou¡s
(&
˝u_cou¡
, &
sockë_cou¡
);

17 
	msockë_cou¡
;

18 
	m˝u_cou¡
;

20 
hñ≥r
* 
gë_hñ≥r
() {

21 
hñ≥r
 
	mh
;

22  &
	mh
;

24 
	mim∂_hñ≥r
;

25 
öô_im∂
();

28 
	s˝u_öfo_öô
 {

29 
˝u_öfo_öô
() {

30 
	m˝u_öfo
::
gë_hñ≥r
();

31 
	m˝u_öfo
::
öô_im∂
();

33 } 
	g__˝u_öfo_öô
;

	@src/fc/dynarray.cpp

24 
	~"w_deföes.h
"

26 
	~"dy«ºay.h
"

27 
	~"sh‹e-c⁄fig.h
"

28 
	~<sys/mm™.h
>

29 
	~<Æg‹ôhm
>

30 
	~<ˇs£π
>

31 
	~<c°rög
>

32 
	~<c°dio
>

35 
size_t
 c⁄° 
	gMM_PAGE_SIZE
 = 65536;

37 
size_t
 c⁄° 
	gMM_MAX_CAPACITY
 = 
MM_PAGE_SIZE
*1024*1024*1024;

39 #i‡
HAVE_DECL_MAP_ALIGN


40 
	#USE_MAP_ALIGN
 1

	)

43 
	gdy«ºay
::
	$öô
(
size_t
 
max_size
, size_à
Æign
)

46 
max_size
 = 
	`Æign⁄
(max_size, 
MM_PAGE_SIZE
);

47 
Æign
 = 
	`Æign⁄
◊lign, 
MM_PAGE_SIZE
);

50 if(
max_size
 > 
MM_MAX_CAPACITY
)

52 
°d
::
	`Ârötf
(
°dîr
, "dynarray::init EFBIG\n");

53  
EFBIG
;

55 if(
MM_PAGE_SIZE
 > 
max_size
)

57 
°d
::
	`Ârötf
(
°dîr
, "dynarray::init EINVAL\n");

58  
EINVAL
;

61 if((
Æign
 & -align) !=álign)

63 
°d
::
	`Ârötf
(
°dîr
, "dynarray::init EINVAL\n");

64  
EINVAL
;

81 c⁄° 
PROTS
 = 
PROT_NONE
;

82 
Êags
 = 
MAP_NORESERVE
 | 
MAP_ANON
 | 
MAP_PRIVATE
;

85 
Æign
 = 
°d
::
	`max
◊lign, 
MM_PAGE_SIZE
);

86 #i‡
USE_MAP_ALIGN


87 * 
Æign_¨g
 = (*Ë
Æign
;

88 
size_t
 
Æign_exåa
 = 0;

89 
Êags
 |
MAP_ALIGN
;

91 * 
Æign_¨g
 = 0;

92 
size_t
 
Æign_exåa
 = 
Æign
;

94 uni⁄ { * 
v
; 
uöçå_t
 
n
; * 
c
; }

95 
u
={
	`mm≠
(
Æign_¨g
, 
max_size
+
Æign_exåa
, 
PROTS
, 
Êags
, -1, 0)};

97 if(
u
.
v
 =
MAP_FAILED
)

99 
	`Ârötf
(
°dîr
, "dy«ºay::öô MAP_FAILED %d\n", 
î∫o
);

100  ( 
î∫o
 );

103 #i‡!
USE_MAP_ALIGN


119 #ifde‡
TEST_ME


120 
°d
::
	`Ârötf
(
°dîr
, "°¨t: %pÉnd:%p\n", 
u
.
c
, u.c+
max_size
+
Æign_exåa
);

123 
Æig√d_ba£
 = 
	`Æign⁄
(
u
.
n
, 
Æign
);

124 if(
exåa
=
Æig√d_ba£
-
u
.
n
) {

126 #ifde‡
TEST_ME


127 
°d
::
	`Ârötf
(
°dîr
, "chopping off %zx bytes ofÖrefix for start: %zx\n",

128 
exåa
, 
Æig√d_ba£
);

131 
	`munm≠
(
u
.
c
, 
exåa
);

132 
u
.
n
 = 
Æig√d_ba£
;

133 
Æign_exåa
 -
exåa
;

136 if(
Æign_exåa
 > 0)

138 #ifde‡
TEST_ME


139 
°d
::
	`Ârötf
(
°dîr
, "ch›pög %zx byã†o‡po°fix f‹Énd: %p\n", 
Æign_exåa
, 
u
.
c
+
max_size
);

142 
	`munm≠
(
u
.
c
+
max_size
, 
Æign_exåa
);

146 
_ba£
 = 
u
.
c
;

147 
_ˇ∑côy
 = 
max_size
;

148 
_size
 = 0;

150 
	}
}

152 
	gdy«ºay
::
	$öô
(
dy«ºay
 c⁄° &
to_c›y
, 
size_t
 
max_size
) {

153 
max_size
 = 
°d
::
	`max
(max_size, 
to_c›y
.
	`ˇ∑côy
());

154 if(
îr
=
	`öô
(
max_size
))

155  
îr
;

157 
°d
::
	`memmove
(
_ba£
, 
to_c›y
._ba£,Åo_c›y.
	`size
());

159 
	}
}

161 
	gdy«ºay
::
	$föi
() {

162 if(
îr
=
	`munm≠
(
_ba£
, 
_ˇ∑côy
))

163  
îr
;

165 
_ba£
 = 0;

166 
_size
 = 0;

167 
_ˇ∑côy
 = 0;

169 
	}
}

171 
	gdy«ºay
::
	$åunˇã
(
size_t
 
√w_size
) {

172 
√w_size
 = 
	`Æign⁄
“ew_size, 
MM_PAGE_SIZE
);

173 i‡(
_size
 < 
√w_size
)

174  
EINVAL
;

176 i‡(
	`m¥Ÿe˘
(
_ba£
+
√w_size
, 
_size
-√w_size, 
PROT_NONE
))

177  
î∫o
;

179 
_size
 = 
√w_size
;

181 
	}
}

183 
	gdy«ºay
::
	$ªsize
(
size_t
 
√w_size
) {

185 
√w_size
 = 
	`Æign⁄
“ew_size, 
MM_PAGE_SIZE
);

188 if(
_size
 > 
√w_size
)

190  
EINVAL
;

193 c⁄° 
PROTS
 = 
PROT_READ
 | 
PROT_WRITE
;

196 i‡(
	`m¥Ÿe˘
(
_ba£
+
_size
, 
√w_size
-_size, 
PROTS
))

198  
î∫o
;

201 
_size
 = 
√w_size
;

203 
	}
}

205 
	gdy«ºay
::
	$ísuª_ˇ∑côy
(
size_t
 
mö_size
) {

206 
mö_size
 = 
	`Æign⁄
(mö_size, 
MM_PAGE_SIZE
);

207 
îr
 = 0;

208 if(
	`size
(Ë< 
mö_size
) {

209 
size_t
 
√xt_size
 = 
°d
::
	`max
(
mö_size
, 2*
	`size
());

210 
îr
 = 
	`ªsize
(
√xt_size
);

213 if(
îr
 =
EFBIG
)

214 
îr
 = 
	`ªsize
(
mö_size
);

216  
îr
;

217 
	}
}

	@src/fc/dynarray.h

24 #i‚de‡
__DYNARRAY_H


25 
	#__DYNARRAY_H


	)

29 
	~<°ddef.h
>

30 
	~<°döt.h
>

31 
	~<î∫o.h
>

32 
	~<Æg‹ôhm
>

54 
	sdy«ºay
 {

64 
öô
(
size_t
 
max_size
, size_à
Æign
=0);

71 
öô
(
dy«ºay
 c⁄° &
to_c›y
, 
size_t
 
max_size
=0);

76 
föi
();

81 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	m_ˇ∑côy
; }

88 
ªsize
(
size_t
 
√w_size
);

101 
ísuª_ˇ∑côy
(
size_t
 
mö_size
);

104 
åunˇã
(
size_t
 
√w_size
=0);

110 
size_t
 
size
(Ëc⁄° {  
	m_size
; }

112 
›î©‹
 *(Ë{  
	m_ba£
; }

113 
›î©‹
 c⁄°*(Ëc⁄° {  
	m_ba£
; }

115 
dy«ºay
(Ë: 
_ba£
(0), 
_size
(0), 
_ˇ∑côy
(0) { }

117 
	m¥iv©e
:

119 
dy«ºay
(dy«ºay c⁄° &
Ÿhî
);

120 
	mdy«ºay
 &
	m›î©‹
=(
dy«ºay
 c⁄° &
Ÿhî
);

122 * 
	m_ba£
;

123 
size_t
 
	m_size
;

124 
size_t
 
	m_ˇ∑côy
;

132 
	gãm∂©e
<
ty≥«me
 
	gT
>

133 
	sdynve˘‹
 {

139 
öô
(
size_t
 
max_cou¡
) {

140  
	m_¨r
.
öô
(
cou¡2byãs
(
max_cou¡
));

148 
föi
() {

149 
size_t
 
	mi
=0; i < 
	m_size
; i++)

150 (*
	mthis
)[
i
].~
T
();

152 
	m_size
 = 0;

153  
	m_¨r
.
föi
();

159 
size_t
 
limô
() const {

160  
byãs2cou¡
(
_¨r
.
ˇ∑côy
());

166 
size_t
 
ˇ∑côy
() const {

167  
byãs2cou¡
(
_¨r
.
size
());

173 
size_t
 
size
() const {

174  
	m_size
;

186 
ª£rve
(
size_t
 
√w_ˇ∑côy
) {

187  
	m_¨r
.
ísuª_ˇ∑côy
(
cou¡2byãs
(
√w_ˇ∑côy
));

194 
ªsize
(
size_t
 
√w_size
) {

195 if(
	mîr
=
ª£rve
(
√w_size
))

196  
îr
;

198 
size_t
 
	mi
=
size
(); i < 
	m√w_size
; i++)

199 
√w
 (
_©
(
i
).
c
Ë
	mT
;

201 
	m_size
 = 
√w_size
;

209 
push_back
(
T
 c⁄° &
obj
) {

210 
size_t
 
	m√w_size
 = 
_size
+1;

211 if(
	mîr
=
ª£rve
(
√w_size
))

212  
îr
;

214 
√w
 (
_©
(
_size
).
c
Ë
T
(
obj
);

215 
	m_size
 = 
√w_size
;

219 
	mT
 &
back
(Ë{  
	mthis
->
	m›î©‹
[](
size
()-1); }

220 
T
 c⁄° &
back
(Ëc⁄° {  
	mthis
->
	m›î©‹
[](
size
()-1); }

225 
	mT
 &
	m›î©‹
[](
size_t
 
	mi
Ë{  *
_©
(
i
).
	mt
; }

226 
T
 c⁄° &
	m›î©‹
[](
size_t
 
	mi
Ëc⁄° {  *
_©
(
i
).
	mtc
; }

228 
dynve˘‹
(Ë: 
_size
(0), 
_Æign_off£t
(0) { }

230 
	m¥iv©e
:

231 
	u±r
 { c⁄°* 
cc
; 
T
 c⁄°* 
	mtc
; * 
	mc
; T* 
	mt
; };

232 
size_t
 
cou¡2byãs
(size_à
cou¡
Ë{  cou¡*(
	mT
); }

233 
size_t
 
byãs2cou¡
(size_à
byãs
Ë{  
	mbyãs
/(
	mT
); }

235 
±r
 
_©
(
size_t
 
idx
) const {

236 
±r
 
	mrvÆ
 = {
_¨r
 + 
cou¡2byãs
(
idx
)};

237  
	mrvÆ
;

240 
dy«ºay
 
	m_¨r
;

241 
size_t
 
	m_size
;

242 
size_t
 
	m_Æign_off£t
;

	@src/fc/errlog.cpp

30 
	~"w_deföes.h
"

34 
	#__ERRLOG_C__


	)

37 
	~<c°d¨g
>

38 
	~<c°dlib
>

39 
	~<c°ddef
>

40 
	~<c°rög
>

41 
	~<ˇs£π
>

43 #ifde‡
__GNUC__


44 #¥agm®
im∂emíèti⁄
 "errlog.h"

45 #¥agm®
im∂emíèti⁄
 "errlog_s.h"

46 #¥agm®
im∂emíèti⁄
 "w_debug.h"

49 
	~"w.h
"

50 
	~"îæog.h
"

51 
	~<îæog_s.h
>

53 
	~<w_°r°ªam.h
>

54 
	~<c°dio
>

56 #ifde‡
EXPLICIT_TEMPLATE


57 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gEºLogInfo
,
	gunß„_li°_dummy_lock_t
>;

58 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gEºLogInfo
,
	gunß„_li°_dummy_lock_t
>;

59 
ãm∂©e
 
˛ass
 
	gw_keyed_li°_t
<
	gEºLogInfo
,,
unß„_li°_dummy_lock_t
 
	gsim∂e_°rög
>;

63 
	g__c
;

64 
w_o°r°ªam
 
	glog°ªam
::
°©ic_°ªam
(&
__c
,1);

67 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gout
, c⁄° 
sim∂e_°rög
 
	gx
) {

68 
	gout
 << 
	gx
.
	g_s
;

69  
	gout
;

73 #i‡
SM_PAGESIZE
 < 8192

74 
	#ERRLOG_BUF_SIZE
 8192

	)

76 
	#ERRLOG_BUF_SIZE
 
SM_PAGESIZE


	)

78 
	gbuf„r
[
ERRLOG_BUF_SIZE
];

82 
	gEºLogInfo
::
	$EºLogInfo
(
EºLog
 *
e
)

83 : 
	`_idít
(
e
->
	`idít
()), 
	$_e
(
e
)

85 
	}
}

89 
	gw_keyed_li°_t
<
	gEºLogInfo
,
	gunß„_li°_dummy_lock_t
,
	gsim∂e_°rög
>

90 
_èb
(
W_KEYED_ARG
(
EºLogInfo
, 
_idít
, 
hash_lök
), 
unß„_nﬁock
);

94 ˛as†
	cîæog_dummy
 {

100 
‰õnd
 
˛ass
 
	mEºLog
;

102 
	m¥Ÿe˘ed
:

103 
boﬁ
 
èbÀ_˛óªd
;

105 
	mpublic
:

106 
	$îæog_dummy
(){

107 
èbÀ_˛óªd
 = 
Ál£
;

108 #ifde‡
ZERO_INIT


109 
	`mem£t
(
buf„r
, '\0', (buffer));

112 ~
	`îæog_dummy
();

113 
	`dump
();

114 
	}

	g}_d
;

116 
	gîæog_dummy
::~
	$îæog_dummy
() {

117 
EºLogInfo
 *
ei
;

119 (
ei
 = 
_èb
.
	`p›
())) {

120 
dñëe
 
ei
;

122 
èbÀ_˛óªd
 = 
åue
;

123 
	}
}

126 
	gîæog_dummy
::
	$dump
() {

127 
EºLogInfo
 *
ei
;

128 
w_li°_i
 <
EºLogInfo
,
unß„_li°_dummy_lock_t
> 
	`ôî
(
_èb
);

129 (
ei
=
ôî
.
	`√xt
())) {

130 
ei
->
	`dump
();

132 
	}
}

135 
LogPri‹ôy


136 
	gEºLog
::
	$∑r£
(c⁄° *
¨g
, 
boﬁ
 *
ok
)

139 
LogPri‹ôy
 
Àvñ
 = 
log_n⁄e
;

141 if(
	`°rcmp
(
¨g
, "off")==0) {

142 
Àvñ
 = 
log_n⁄e
;

144 if(
	`°rcmp
(
¨g
, "trace")==0 || strcmp(arg,"debug")==0) {

145 
Àvñ
 = 
log_debug
;

147 if(
	`°rcmp
(
¨g
, "info")==0) {

148 
Àvñ
 = 
log_öfo
;

150 if(
	`°rcmp
(
¨g
, "warning")==0) {

151 
Àvñ
 = 
log_w¨nög
;

153 if(
	`°rcmp
(
¨g
, "error")==0) {

154 
Àvñ
 = 
log_îr‹
;

156 if(
	`°rcmp
(
¨g
, "internal")==0 || strcmp(arg,"critical")==0) {

157 
Àvñ
 = 
log_öã∫Æ
;

159 if(
	`°rcmp
(
¨g
, "fatal")==0 || strcmp(arg,"alert")==0) {

160 
Àvñ
 = 
log_Áèl
;

162 if(
	`°rcmp
(
¨g
, "emerg")==0) {

163 
Àvñ
 = 
log_emîg
;

165 i‡(
ok
Ë*ok = 
Ál£
;

167  
Àvñ
;

168 
	}
}

171 
	gEºLog
::
	$_˛o£logfûe
()

173 
	`as£π
(
_fûe
 !
NULL
);

174 
	`f˛o£
(
_fûe
);

175 
	}
}

178 
	gEºLog
::
	$_›ílogfûe
(

179 c⁄° *
‚


182 c⁄° *
fûíame
=
‚
;

183 if(
	`°rcmp
(
fûíame
, "-")==0) {

185 
_de°ö©i⁄
 = 
log_to_°dîr
;

186 
_fûe
 = 
°dîr
;

189 if(
fûíame
) {

190 
_de°ö©i⁄
 = 
log_to_unix_fûe
;

191 if(
	`°∫cmp
(
fûíame
, "unix:", 5) == 0) {

192 
fûíame
 += 5;

193 } i‡(
	`°∫cmp
(
fûíame
, "shore:", 6) == 0) {

194 
fûíame
 += 6;

196 
_fûe
 = 
	`f›í
(
fûíame
, "a+");

197 if(
_fûe
 =
NULL
) {

198 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

199 
˚º
 << "C™nŸ f›í Unix fûê" << 
fûíame
 << 
ídl
;

200 
˚º
 << 
e
 << 
ídl
;

201 
	`W_COERCE
(
e
);

204 
˚º
 << "Unknow¿loggög de°ö©i⁄." << 
ídl
;

205 
	`W_FATAL
(
fcINTERNAL
);

208 
	}
}

211 
	gEºLog
::
	$_öô1
()

213 
˛og
.
	`öô_îæog
(
this
);

214 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

215 
	`InôülizeCrôiˇlSe˘i⁄
(&
_¸ô
);

217 
	`w_ª£t_°r°ªam
(
this
->
˛og
);

218 
	}
}

221 
	gEºLog
::
	$_öô2
()

223 
EºLogInfo
 *
ei
;

224 if((
ei
 = 
_èb
.
	`£¨ch
(
this
->
_idít
)) == 0) {

225 
ei
 = 
√w
 
	`EºLogInfo
(
this
);

226 
_èb
.
	`put_ö_‹dî
(
ei
);

228 
˚º
 << "A¿EºLog cÆÀd " << 
_idít
 << "áÃódyÉxi°s." << 
ídl
;

229 
	`W_FATAL
(
fcINTERNAL
);

231 
	}
}

233 
	gEºLog
::
	$EºLog
(

234 c⁄° *
idít
,

235 
LoggögDe°ö©i⁄
 
de°
,

236 c⁄° *
fûíame
,

237 
LogPri‹ôy
 
Àvñ
,

238 *
ownbuf
,

239 
ownbufsz


242 
	`_de°ö©i⁄
(
de°
),

243 
	`_Àvñ
(
Àvñ
),

244 
	`_fûe
(0),

245 
	`_idít
(
idít
),

246 
	`_buf„r
(
ownbuf
?ownbuf:
buf„r
),

247 
	`_bufsize
(
ownbuf
?
ownbufsz
:(
buf„r
)),

248 
	`˛og
(
ownbuf
?ownbuf:
buf„r
, ownbuf?
ownbufsz
:(buffer)),

249 
	$_magic
(
ERRORLOG__MAGIC
)

251 
	`_öô1
();

253  
de°
 ) {

254 
log_to_unix_fûe
:

256 if(!
fûíame
) {

257 
fûíame
 = "-";

259 
	`_›ílogfûe
(
fûíame
);

263 
log_to_°dîr
:

264 
_fûe
 = 
°dîr
;

267 
log_to_ëhî
:

268 
_fûe
 = 0;

273 
˚º
 << "Badárgumíà2ÅÿEºLog c⁄°ru˘‹" <<
ídl
;

274 
	`W_FATAL_MSG
(
fcINTERNAL
, << "Badárgument 2Åo ErrLog constructor");

277 
	`_öô2
();

278 
	}
}

280 
	gEºLog
::
	$EºLog
(

281 c⁄° *
idít
,

282 
LoggögDe°ö©i⁄
 
de°
,

283 
FILE
 *
fûe
,

284 
LogPri‹ôy
 
Àvñ
,

285 *
ownbuf
,

286 
ownbufsz


289 
	`_de°ö©i⁄
(
de°
),

290 
	`_Àvñ
(
Àvñ
),

291 
	`_fûe
(
fûe
),

292 
	`_idít
(
idít
),

293 
	`_buf„r
(
ownbuf
?ownbuf:
buf„r
),

294 
	`_bufsize
(
ownbuf
?
ownbufsz
:(
buf„r
)),

295 
	`˛og
(
ownbuf
?ownbuf:
buf„r
, ownbuf?
ownbufsz
:(buffer)),

296 
	$_magic
(
ERRORLOG__MAGIC
)

298 
	`_öô1
();

299 
	`w_as£π9
–
de°
 =
log_to_›í_fûe
 );

300 
	`_öô2
();

301 
	}
}

303 
	gEºLog
::~
	$EºLog
()

305 
_de°ö©i⁄
) {

306 
log_to_unix_fûe
:

307 
log_to_›í_fûe
:

308 
	`_˛o£logfûe
();

311 
log_to_°dîr
:

317 
log_to_ëhî
:

320 if–!
_d
.
èbÀ_˛óªd
 ) {

321 
EºLogInfo
 *
ei
 = 
_èb
.
	`£¨ch
(
this
->
_idít
);

322 
	`as£π
(
ei
!=
NULL
);

324 (Ë
ei
->
hash_lök
.
	`dëach
();

325 
dñëe
 
ei
;

327 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

328 
	`DñëeCrôiˇlSe˘i⁄
(&
_¸ô
);

330 
	}
}

333 
	gEºLog
::
	$log
(
LogPri‹ôy
 
¥io
, c⁄° *
f‹m©
, ...)

335 if(
_magic
 !
ERRORLOG__MAGIC
) {

336 
˚º
 << "TryögÅÿu£ unöôülized EºLog." <<
ídl
;

337 ::
	`exô
(1);

339 
va_li°
 
≠
;

340 
	`va_°¨t
(
≠
, 
f‹m©
);

342 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

343 
	`E¡îCrôiˇlSe˘i⁄
(&
_¸ô
);

345 
	`_Êush
(
åue
);

347 i‡(
¥io
 > 
_Àvñ
) {

348 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

349 
	`LóveCrôiˇlSe˘i⁄
(&
_¸ô
);

354 
_de°ö©i⁄
) {

356 
log_to_unix_fûe
:

357 
log_to_›í_fûe
:

358 
log_to_°dîr
:

360 #i‡
HAVE_VPRINTF


361 (Ë
	`vÂrötf
(
_fûe
,
f‹m©
, 
≠
);

363 #îr‹ 
√ed
 
vÂrötf


365 
	`Âutc
('\n', 
_fûe
);

366 
	`fÊush
(
_fûe
);

369 
log_to_ëhî
:

372 
	`va_íd
(
≠
);

375 
	`w_ª£t_°r°ªam
(
this
->
˛og
);

377 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

378 
	`LóveCrôiˇlSe˘i⁄
(&
_¸ô
);

381 
	}
}

384 
	gEºLog
::
_Êush
(
boﬁ


385 #i‡
deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

386 
Æªady_ö_¸ô


390 #i‡
deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

391 if(!
Æªady_ö_¸ô
Ë
E¡îCrôiˇlSe˘i⁄
(&
_¸ô
);

394 if(
	g_magic
 !
ERRORLOG__MAGIC
) {

395 
˚º
 << "F©ÆÉº‹: TryögÅÿu£ unöôülized EºLog." <<
ídl
;

396 ::
exô
(1);

398 
	gthis
->
	g˛og
 << 
	gíds
 ;

400 i‡(
	gthis
->
	g˛og
.
	g_¥io
 <
_Àvñ
) {

401 
_de°ö©i⁄
) {

403 
log_to_unix_fûe
:

404 
log_to_›í_fûe
:

405 
log_to_°dîr
:

406 
Ârötf
(
_fûe
, "%s", 
this
->
˛og
.
c_°r
());

408 
fÊush
(
_fûe
);

411 
	glog_to_ëhî
:

415 
	gthis
->
	g˛og
.
Êush
();

418 
w_ª£t_°r°ªam
(
this
->
˛og
);

419 #i‡
deföed
(
_WIN32
Ë&& deföed(
FC_ERRLOG_WIN32_LOCK
)

420 if(!
	gÆªady_ö_¸ô
Ë
LóveCrôiˇlSe˘i⁄
(&
_¸ô
);

424 
log°ªam
 *

425 
	$is_log°ªam
(
o°ªam
 &
o
)

427 
log°ªam
 *
l
=0;

428 c⁄° 
o°ªam
 *
tõd
 = 
o
.
	`tõ
();

430 if(
tõd
 =&
log°ªam
::
°©ic_°ªam
) {

431 
l
 = (
log°ªam
 *)&
o
;

433 if(
l
) {

438 if(
l
 &&

439 (
l
->
__magic1
 =
log°ªam
::
LOGSTREAM__MAGIC
) &&

440 (
l
->
__magic2
 =
log°ªam
::
LOGSTREAM__MAGIC
) &&

441 (
l
->
_¥io
 >
log_n⁄e
) &&

442 (
l
->
_¥io
 <
log_Æl
) &&

443 (
l
->
_log
->
_magic
 =
EºLog
::
ERRORLOG__MAGIC
)

446  
l
;

449  (
log°ªam
 *)0;

451 
	}
}

453 
	go°ªam
 &

454 
	$Êush_™d_£çrio
(
o°ªam
& 
o
, 
LogPri‹ôy
 
p
)

457 
log°ªam
 *
l
 = 
	`is_log°ªam
(
o
);

458 if(
l
) {

459 
l
->
_log
->
	`_Êush
(
Ál£
);

460 if(
p
 !
log_n⁄e
) {

461 
l
->
_¥io
 = 
p
;

464 
o
 << 
Êush
;

466  
o
;

467 
	}
}

469 
	go°ªam
& 
	$Êushl
(
o°ªam
& 
out
)

471 
out
 << 
ídl
;

472  
	`Êush_™d_£çrio
(
out
, 
log_n⁄e
);

473 
	}
}

474 
	go°ªam
& 
	$emîg_¥io
(
o°ªam
& 
o
){ 
	`Êush_™d_£çrio
(o, 
log_emîg
); 
	}
}

475 
	go°ªam
& 
	$Áèl_¥io
(
o°ªam
& 
o
){ 
	`Êush_™d_£çrio
(o, 
log_Áèl
); 
	}
}

476 
	go°ªam
& 
	$öã∫Æ_¥io
(
o°ªam
& 
o
){  
	`Êush_™d_£çrio
(o, 
log_öã∫Æ
); 
	}
}

477 
	go°ªam
& 
	$îr‹_¥io
(
o°ªam
& 
o
){ 
	`Êush_™d_£çrio
(o, 
log_îr‹
); 
	}
}

478 
	go°ªam
& 
	$w¨nög_¥io
(
o°ªam
& 
o
){  
	`Êush_™d_£çrio
(o, 
log_w¨nög
); 
	}
}

479 
	go°ªam
& 
	$öfo_¥io
(
o°ªam
& 
o
){  
	`Êush_™d_£çrio
(o, 
log_öfo
); 
	}
}

480 
	go°ªam
& 
	$debug_¥io
(
o°ªam
& 
o
){  
	`Êush_™d_£çrio
(o, 
log_debug
); 
	}
}

482 #ifde‡
USE_REGEX


483 
	~"ªgex_posix.h
"

485 
	~"w_debug.˝p
"

487 #i‡
W_DEBUG_LEVEL
 > 3

488 
	$dummy
(Ë{ 
	`DBG
(<<""); 
	}
}

	@src/fc/errlog.h

30 #i‚de‡
ERRLOG_H


31 
	#ERRLOG_H


	)

33 
	~"w_deföes.h
"

39 
	~<ˇs£π
>

40 
	~<c°dlib
>

41 
	~<c°ddef
>

42 
	~<w.h
>

43 
	~<io°ªam
>

44 
	~<w_°r°ªam.h
>

45 
	~<c°dio
>

48 #ifde‡
__GNUG__


49 #¥agm®
öãrÁ˚


52 
˛ass
 
	gEºLog
;

53 
˛ass
 
	glog°ªam
;

55 #i‚de‡ 
_SYSLOG_H


56 
	#LOG_EMERG
 0

	)

57 
	#LOG_ALERT
 1

	)

58 
	#LOG_CRIT
 2

	)

59 
	#LOG_ERR
 3

	)

60 
	#LOG_WARNING
 4

	)

61 
	#LOG_NOTICE
 5

	)

62 
	#LOG_INFO
 6

	)

63 
	#LOG_DEBUG
 7

	)

64 
	#LOG_USER
 8

	)

69 
«me•a˚
 
	gsh‹e_îæog
 {

70 
usög
 
«me•a˚
 
	g°d
;

83 
	eLogPri‹ôy
 {

84 
	glog_n⁄e
 = -1,

85 
	glog_emîg
 = 
LOG_EMERG
,

86 
	glog_Áèl
 = 
LOG_ALERT
,

87 
	glog_Æît
 = 
log_Áèl
,

88 
	glog_öã∫Æ
 = 
LOG_CRIT
,

89 
	glog_îr‹
 = 
LOG_ERR
,

90 
	glog_w¨nög
 = 
LOG_WARNING
,

91 
	glog_öfo
 = 
LOG_INFO
,

92 
	glog_debug
=
LOG_DEBUG
,

93 
	glog_Æl
,

94 
	gdeÁu…_¥io
 = 
log_îr‹


99 
usög
 
«me•a˚
 
	gsh‹e_îæog
;

101 
o°ªam
& 
Êushl
(o°ªam& 
o
);

102 
o°ªam
& 
emîg_¥io
(o°ªam& 
o
);

103 
o°ªam
& 
Áèl_¥io
(o°ªam& 
o
);

104 
o°ªam
& 
öã∫Æ_¥io
(o°ªam& 
o
);

105 
o°ªam
& 
îr‹_¥io
(o°ªam& 
o
);

106 
o°ªam
& 
w¨nög_¥io
(o°ªam& 
o
);

107 
o°ªam
& 
öfo_¥io
(o°ªam& 
o
);

108 
o°ªam
& 
debug_¥io
(o°ªam& 
o
);

109 
£çrio
(
o°ªam
&, 
LogPri‹ôy
);

110 
log°ªam
 *
is_log°ªam
(
o°ªam
 &);

122 ˛as†
	clog°ªam
 : 
public
 
w_o°r°ªam
 {

123 
‰õnd
 
˛ass
 
EºLog
;

124 
‰õnd
 
	mo°ªam
 &
Êush_™d_£çrio
(
o°ªam
& 
o
, 
LogPri‹ôy
 
p
);

125 
‰õnd
 
	mo°ªam
& 
emîg_¥io
(
o°ªam
& 
o
);

126 
‰õnd
 
	mo°ªam
& 
Áèl_¥io
(
o°ªam
& 
o
);

127 
‰õnd
 
	mo°ªam
& 
öã∫Æ_¥io
(
o°ªam
& 
o
);

128 
‰õnd
 
	mo°ªam
& 
îr‹_¥io
(
o°ªam
& 
o
);

129 
‰õnd
 
	mo°ªam
& 
w¨nög_¥io
(
o°ªam
& 
o
);

130 
‰õnd
 
	mo°ªam
& 
öfo_¥io
(
o°ªam
& 
o
);

131 
‰õnd
 
	mo°ªam
& 
debug_¥io
(
o°ªam
& 
o
);

133 
	m__magic1
;

134 
LogPri‹ôy
 
	m_¥io
;

135 
EºLog
* 
	m_log
;

136 
	m__magic2
;

138 
	mpublic
:

140 
‰õnd
 
log°ªam
 *
is_log°ªam
(
o°ªam
 &);

142 íum { 
	mLOGSTREAM__MAGIC
 = 0xad12bc45 };

143 
	g¥iv©e
:

144 
w_o°r°ªam
 
°©ic_°ªam
;

145 
	gpublic
:

146 
	$log°ªam
(*
buf
, 
size_t
 
bufsize
 = 1000)

147 : 
	`w_o°r°ªam
(
buf
, 
bufsize
),

148 
	`__magic1
(
LOGSTREAM__MAGIC
),

149 
	`_¥io
(
log_n⁄e
),

150 
	$__magic2
(
LOGSTREAM__MAGIC
)

153 
	`tõ
(&
°©ic_°ªam
);

154 
	`as£π
(
	`tõ
(Ë=&
°©ic_°ªam
) ;

155 
	`as£π
(
__magic1
==
LOGSTREAM__MAGIC
);

156 
	}
}

158 
	g¥Ÿe˘ed
:

159 
	$öô_îæog
(
EºLog
* 
möe
Ë{ 
_log
 = möe; 
	}
}

167 
	eLoggögDe°ö©i⁄
 {

168 
	mlog_to_ëhî
,

169 
	mlog_to_unix_fûe
,

170 
	mlog_to_›í_fûe
,

171 
	mlog_to_°dîr


174 (*
	tEºLogFunc
)(
	tEºLog
 *, *);

193 ˛as†
	cEºLog
 {

194 
‰õnd
 
˛ass
 
log°ªam
;

195 
‰õnd
 
log°ªam
 *
	`is_log°ªam
(
o°ªam
 &);

196 
‰õnd
 
o°ªam
 &
	`Êush_™d_£çrio
(o°ªam& 
o
, 
LogPri‹ôy
 
p
);

198 
LoggögDe°ö©i⁄
 
_de°ö©i⁄
;

199 
LogPri‹ôy
 
_Àvñ
;

200 
FILE
* 
_fûe
;

201 c⁄° * 
_idít
;

202 * 
_buf„r
;

203 
size_t
 
_bufsize
;

205 íum { 
ERRORLOG__MAGIC
 = 0xa2d29754 };

207 
public
:

219 
	`EºLog
(

220 c⁄° *
idít
,

221 
LoggögDe°ö©i⁄
 
de°
,

222 c⁄° *
fûíame
 = 0,

223 
LogPri‹ôy
 
Àvñ
 = 
deÁu…_¥io
,

224 *
ownbuf
 = 0,

225 
ownbufsz
 = 0

236 
	`EºLog
(

237 c⁄° *
idít
,

238 
LoggögDe°ö©i⁄
 
de°
,

239 
FILE
 *
fûe
 = 0,

240 
LogPri‹ôy
 
Àvñ
 = 
deÁu…_¥io
,

241 *
ownbuf
 = 0,

242 
ownbufsz
 = 0

245 ~
	`EºLog
();

251 
LogPri‹ôy
 
	`∑r£
(c⁄° *
¨g
, 
boﬁ
 *
ok
=0);

260 
log°ªam
 
˛og
;

266 
	`log
(
LogPri‹ôy
 
¥io
, c⁄° *
f‹m©
, ...);

269 c⁄° * 
	$idít
() {

270  
_idít
;

271 
	}
}

272 
LoggögDe°ö©i⁄
 
	$de°ö©i⁄
(Ë{  
_de°ö©i⁄
; 
	}
};

275 
LogPri‹ôy
 
	$gëlogÀvñ
(Ë{  
_Àvñ
; 
	}
}

278 c⁄° * 
	$gëlogÀvñ«me
() {

279 
_Àvñ
) {

280 
log_n⁄e
:

282 
log_emîg
:

284 
log_Áèl
:

286 
log_öã∫Æ
:

288 
log_îr‹
:

290 
log_w¨nög
:

292 
log_öfo
:

294 
log_debug
:

296 
log_Æl
:

302 
	}
}

305 
LogPri‹ôy
 
	$£éogÀvñ
–
LogPri‹ôy
 
¥io
) {

306 
LogPri‹ôy
 
ﬁd
 = 
_Àvñ
;

307 
_Àvñ
 = 
¥io
;

308  
ﬁd
;

309 
	}
}

311 
	g¥iv©e
:

312 
_öô1
();

313 
_öô2
();

314 
_Êush
(
boﬁ
 
ö_¸ô
);

315 
_›ílogfûe
–c⁄° *
fûíame
 );

316 
_˛o£logfûe
();

317 
NORET
 
EºLog
(const ErrLog &);

319 
	g_magic
;

	@src/fc/errlog_s.h

30 #i‚de‡
ERRLOG_S_H


31 
	#ERRLOG_S_H


	)

33 
	~"w_deföes.h
"

37 
	~<w_ba£.h
>

39 #ifde‡
__GNUG__


40 #¥agm®
öãrÁ˚


44 ˛as†
	csim∂e_°rög
 {

45 c⁄° *
	m_s
;

46 
	mpublic
:

48 
	$sim∂e_°rög
(c⁄° *
s
Ë{ 
_s
 = s; }

49 
boﬁ
 
›î©‹
==(c⁄° 
sim∂e_°rög
 &
™Ÿhî
) const {

50  
	`°rcmp
(
this
->
_s
,
™Ÿhî
._s)==0;

51 
	}
}

52 
boﬁ
 
	g›î©‹
!=(c⁄° 
sim∂e_°rög
 &
™Ÿhî
) const {

53  
°rcmp
(
this
->
_s
,
™Ÿhî
._s)!=0;

55 
‰õnd
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gout
, c⁄° 
sim∂e_°rög
 
	gx
);

62 
w_ba£_t
::
uöt4_t
 
w_hash
(const *);

64 
˛ass
 
	gEºLog
;

65 
	sEºLogInfo
 {

66 
	mpublic
:

67 
sim∂e_°rög
 
_idít
;

68 
w_lök_t
 
	mhash_lök
;

70 
EºLog
 *
	m_e
;

72 
EºLogInfo
(
EºLog
 *
e
);

73 
dump
() const {

74 
	m˚º
 << 
	m_idít
;

75 
	m˚º
 << 
	mídl
;

77 
	m¥iv©e
:

78 
NORET
 
EºLogInfo
(const ErrLogInfo &);

79 
NORET
 
EºLogInfo
(ErrLogInfo &);

	@src/fc/fc-noinline.cpp

1 
	~<±hªad.h
>

3 "C" 
	$˝u_öfo_dåa˚_globÆ_hook
(vﬁ©ûe* ) { 
	}
}

4 "C" 
	$˝u_öfo_dåa˚_thªad_hook
(vﬁ©ûe* ) { 
	}
}

	@src/fc/fc_einfo_bakw_gen.h

1 #i‚de‡
FC_EINFO_BAKW_GEN_H


2 
	#FC_EINFO_BAKW_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	gfc_îr‹_öfo_bakw
[] = {

38 { 
FC_INTERNAL
, "FC_INTERNAL" },

39 { 
FC_OS
, "FC_OS" },

40 { 
FC_FULL
, "FC_FULL" },

41 { 
FC_EMPTY
, "FC_EMPTY" },

42 { 
FC_OUTOFMEMORY
, "FC_OUTOFMEMORY" },

43 { 
FC_MMAPFAILED
, "FC_MMAPFAILED" },

44 { 
FC_NOTFOUND
, "FC_NOTFOUND" },

45 { 
FC_NOTIMPLEMENTED
, "FC_NOTIMPLEMENTED" },

46 { 
FC_READONLY
, "FC_READONLY" },

47 { 
FC_MIXED
, "FC_MIXED" },

48 { 
FC_FOUND
, "FC_FOUND" },

49 { 
FC_NOSUCHERROR
, "FC_NOSUCHERROR" },

50 { 
FC_ASSERT
, "FC_ASSERT" },

	@src/fc/fc_einfo_gen.h

1 #i‚de‡
FC_EINFO_GEN_H


2 
	#FC_EINFO_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	gw_îr‹_t
::
îr‹_öfo
[] = {

38 { 
fcINTERNAL
 , "InternalÉrror"},

39 { 
fcOS
 , "Operating systemÉrror "},

40 { 
fcFULL
 , "Container is full"},

41 { 
fcEMPTY
 , "Container isÉmpty"},

42 { 
fcOUTOFMEMORY
 , "Malloc failed : out of memory "},

43 { 
fcMMAPFAILED
 , "Mmap couldÇot mapáligned memory"},

44 { 
fcNOTFOUND
 , "ItemÇot found "},

45 { 
fcNOTIMPLEMENTED
 , "Feature isÇot implemented"},

46 { 
fcREADONLY
 , "Update operation onÑead-only object"},

47 { 
fcMIXED
 , "AttemptingÅo mix staticánd dynamic containers"},

48 { 
fcFOUND
 , "Itemálready found"},

49 { 
fcNOSUCHERROR
 , "unknownÉrror code"},

50 { 
fcASSERT
 , "Assertion Failed"},

54 
	gw_îr‹_t
::
	$öô_îr‹codes
() {

55 i‡(!(
w_îr‹_t
::
	`ö£π
(

56 "Found©i⁄ Cœs£s", 
w_îr‹_t
::
îr‹_öfo
,

57 
fcERRMAX
 - 
fcERRMIN
 +1)) ) {

58 
	`W_FATAL
(
fcINTERNAL
);

60 
	}
}

	@src/fc/fc_errmsg_gen.h

1 #i‚de‡
FC_ERRMSG_GEN_H


2 
	#FC_ERRMSG_GEN_H


	)

34 
	~"w_deföes.h
"

37 * 
	gfc_îrmsg
[] = {

54 c⁄° 
	gfc_msg_size
 = 12;

	@src/fc/fc_error_def_gen.h

1 #i‚de‡
FC_ERROR_DEF_GEN_H


2 
	#FC_ERROR_DEF_GEN_H


	)

34 
	~"w_deföes.h
"

37 
	#FC_INTERNAL
 0x10000

	)

38 
	#FC_OS
 0x10001

	)

39 
	#FC_FULL
 0x10002

	)

40 
	#FC_EMPTY
 0x10003

	)

41 
	#FC_OUTOFMEMORY
 0x10004

	)

42 
	#FC_MMAPFAILED
 0x10005

	)

43 
	#FC_NOTFOUND
 0x10006

	)

44 
	#FC_NOTIMPLEMENTED
 0x10007

	)

45 
	#FC_READONLY
 0x10008

	)

46 
	#FC_MIXED
 0x10009

	)

47 
	#FC_FOUND
 0x1000a

	)

48 
	#FC_NOSUCHERROR
 0x1000b

	)

49 
	#FC_ASSERT
 0x1000c

	)

50 
	#FC_OK
 0x0

	)

51 
	#FC_ERRMIN
 0x10000

	)

52 
	#FC_ERRMAX
 0x1000c

	)

	@src/fc/fc_error_enum_gen.h

1 #i‚de‡
FC_ERROR_ENUM_GEN_H


2 
	#FC_ERROR_ENUM_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	mfcINTERNAL
 = 0x10000,

39 
	mfcOS
 = 0x10001,

40 
	mfcFULL
 = 0x10002,

41 
	mfcEMPTY
 = 0x10003,

42 
	mfcOUTOFMEMORY
 = 0x10004,

43 
	mfcMMAPFAILED
 = 0x10005,

44 
	mfcNOTFOUND
 = 0x10006,

45 
	mfcNOTIMPLEMENTED
 = 0x10007,

46 
	mfcREADONLY
 = 0x10008,

47 
	mfcMIXED
 = 0x10009,

48 
	mfcFOUND
 = 0x1000a,

49 
	mfcNOSUCHERROR
 = 0x1000b,

50 
	mfcASSERT
 = 0x1000c,

51 
	mfcOK
 = 0x0,

52 
	mfcERRMIN
 = 0x10000,

53 
	mfcERRMAX
 = 0x1000c

	@src/fc/gethrtime.cpp

30 
	~"w_deföes.h
"

39 
	~"w_ba£.h
"

40 
	~"gëhπime.h
"

42 #i‚de‡
HAVE_GETHRTIME


44 #i‡
deföed
(
__APPLE__
)

47 
	~<mach/mach_time.h
>

49 
hπime_t
 
	$gëhπime
()

51 
hπime_t
 
°¨t
 = 
	`mach_absﬁuã_time
();

52  (
°¨t
);

53 
	}
}

57 
hπime_t
 
	$gëhπime
()

59 
time•ec
 
t•
;

60 
e
 = 
	`˛ock_gëtime
(
CLOCK_PROCESS_CPUTIME_ID
, &
t•
);

61 
	`w_as£π0
(
e
 == 0);

62  
t•
.
tv_n£c
;

63 
	}
}

	@src/fc/gethrtime.h

30 
	~"w_deföes.h
"

39 
	~<time.h
>

40 
	~<sys/time.h
>

42 #i‚de‡
HAVE_GETHRTIME


44 #i‚de‡
ARCH_LP64


45 
	thπime_t
;

47 
	thπime_t
;

50 "C" 
hπime_t
 
gëhπime
();

	@src/fc/largefile_aware.h

30 #i‚de‡
W_LARGEFILE_AWARE_H


31 
	#W_LARGEFILE_AWARE_H


	)

33 #i‡
deföed
(
_LARGEFILE_SOURCE
)

35 
	#·ñl
(
s
Ë
	`·ñlo
(s)

	)

36 
	#f£ek
(
s
,
o
,
w
Ë
	`f£eko
(s,o,w)

	)

	@src/fc/mem_block.cpp

24 
	~"w.h
"

25 
	~"mem_block.h
"

26 
	~"©omic_›s.h
"

27 
	~<c°dlib
>

28 
	~<°dio.h
>

29 
	~<Æg‹ôhm
>

30 #ifde‡
__löux


31 
	~<mÆloc.h
>

35 #unde‡
as£π


36 
	$as£π_Áûed
(c⁄° *
desc
, c⁄° *
f
, 
l
) {

37 
	`Ârötf
(
°dout
, "As£πi⁄ faûed: %†©Üöê%d fûê%†", 
desc
, 
l
,
f
);

38 
	`w_as£π0
(0);

39 
	}
}

40 
	#as£π
(
x
Ëi‡(!(x)Ë
	`as£π_Áûed
(#x, 
__FILE__
, 
__LINE__
);

	)

42 
	#TEMPLATE_ARGS
 
chù_size
, 
chù_cou¡
, 
block_size


	)

44 
«me•a˚
 
	gmem‹y_block
 {

50 
	tu64
;

51 
ölöe


52 
	$p›c64
(
u64
 
x
) {

53 
u64
 
k1
 = 0x5555555555555555ull;

54 
u64
 
k2
 = 0x3333333333333333ull;

55 
u64
 
k4
 = 0x0f0f0f0f0f0f0f0full;

56 
u64
 
kf
 = 0x0101010101010101ull;

57 
x
 = x - ((x >> 1Ë& 
k1
);

58 
x
 = (x & 
k2
) + ((x >> 2) & k2);

59 
x
 = (x + (x >> 4)Ë& 
k4
 ;

60 
x
 = (x * 
kf
) >> 56;

61  
x
;

62 
	}
}

64 
size_t
 
	gblock_bôs
::
	$_p›c
(
bôm≠
 
bm
) {

65 #ifde‡
__GNUC__


67 #i‡
	`deföed
(
__x86_64
Ë|| deföed(
i386
Ë|| deföed(
__i386__
)

69  
	`__buûtö_p›cou¡Œ
(
bm
);

71 #ñi‡
	`deföed
(
__•¨cv9
)

73 
rvÆ
;

74 
	`__asm__
("p›¯ %[ö], %[out]" : [
out
] "Ù"(
rvÆ
Ë: [
ö
] "r"(
x
));

75  
rvÆ
;

78  
	`p›c64
(
bm
);

83  
	`p›c64
(
bm
);

85 
	}
}

87 
	gblock_bôs
::
	$block_bôs
(
size_t
 
chù_cou¡
)

88 : 
	`_ußbÀ_chùs
(
	`¸óã_mask
(
chù_cou¡
))

89 , 
	$_zombõ_chùs
(0)

91 
	`as£π
(
chù_cou¡
 <8*(
bôm≠
));

92 
	}
}

94 
size_t
 
	gblock_bôs
::
	$acquúe
(
size_t
 
chù_cou¡
) {

95 (Ë
chù_cou¡
;

106 
bôm≠
 
⁄e_bô
 = 
_ußbÀ_chùs
 &- _usable_chips;

107 
size_t
 
ödex
 = 
	`_p›c
(
⁄e_bô
-1);

108 if(
ödex
 < 8*(
bôm≠
)) {

110 
	`as£π
(
ödex
 < 
chù_cou¡
);

111 
_ußbÀ_chùs
 ^
⁄e_bô
;

115 
	`as£π
(
ödex
 =8*(
bôm≠
));

118  
ödex
;

119 
	}
}

121 
	gblock_bôs
::
	$ªÀa£
(
size_t
 
ödex
, size_à
chù_cou¡
) {

123 (Ë
chù_cou¡
;

124 
	`as£π
(
ödex
 < 
chù_cou¡
);

125 
bôm≠
 
to_‰ì
 = 
	`bôm≠
(1Ë<< 
ödex
;

126 
	`as£π
(! (
to_‰ì
 & *
	`ußbÀ_chùs
()));

127 #i‡
I_WISH


128 
bôm≠
 
was_‰ì
 = 
	`__sync_„tch_™d_‹
(&
_zombõ_chùs
, 
to_‰ì
);

130 
	`memb¨_exô
();

131 
bôm≠
 vﬁ©ûe* 
±r
 = &
_zombõ_chùs
;

132 
bôm≠
 
ov
 = *
±r
;

134 
bôm≠
 
nv
 = 
ov
 | 
to_‰ì
;

135 
bôm≠
 
cv
 = 
	`©omic_ˇs_64
(
±r
, 
ov
, 
nv
);

136 if(
cv
 =
ov
)

138 
ov
 = 
cv
;

140 
bôm≠
 
was_‰ì
 = 
ov
;

142 (Ë
was_‰ì
;

143 
	`as£π
(! (
was_‰ì
 & 
to_‰ì
));

144 
	}
}

146 
	gblock_bôs
::
bôm≠
 
block_bôs
::
	$¸óã_mask
(
size_t
 
bôs_£t
) {

148  ~
	`bôm≠
(0Ë>> (8*(
bôm≠
Ë- 
bôs_£t
);

149 
	}
}

151 
	gblock_bôs
::
	$ªcy˛e
() {

160 
bôm≠
 
√wly_ußbÀ
 = *&
_zombõ_chùs
;

161 
_ußbÀ_chùs
 |
√wly_ußbÀ
;

162 #i‡
I_WISH


163 
	`__sync_x‹_™d_„tch
(&
_zombõ_chùs
, 
√wly_ußbÀ
);

165 
	`memb¨_exô
();

166 
bôm≠
 vﬁ©ûe* 
±r
 = &
_zombõ_chùs
;

167 
bôm≠
 
ov
 = *
±r
;

169 
bôm≠
 
nv
 = 
ov
 ^ 
√wly_ußbÀ
;

170 
bôm≠
 
cv
 = 
	`©omic_ˇs_64
(
±r
, 
ov
, 
nv
);

171 if(
cv
 =
ov
)

173 
ov
 = 
cv
;

176 
	}
}

178 * 
	gblock
::
	$acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_t ) {

179 
size_t
 
ödex
 = 
_bôs
.
	`acquúe
(
chù_cou¡
);

180  (
ödex
 < 
chù_cou¡
)? 
	`_gë
(ödex, 
chù_size
) : 0;

181 
	}
}

183 
	gblock
::
	$ªÀa£
(* 
±r
, 
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

191 uni⁄ { * 
v
; 
size_t
 
n
; 
block
* 
b
; * 
c
; } 
u
 = {
±r
}, v=u;

192 
u
.
n
 &-
block_size
;

193 
size_t
 
off£t
 = 
v
.
c
 - 
u
.
b
->
_d©a
;

194 
size_t
 
idx
 = 
off£t
/
chù_size
;

195 
	`as£π
(
u
.
b
->
_d©a
 + 
idx
*
chù_size
 =
±r
);

196 
u
.
b
->
_bôs
.
	`ªÀa£
(
idx
, 
chù_cou¡
);

197 
	}
}

199 * 
	gblock
::
	$_gë
(
size_t
 
ödex
, size_à
chù_size
) {

200  
_d©a
 + 
ödex
*
chù_size
;

201 
	}
}

203 
	gblock
::
	$block
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

204 : 
	`_bôs
(
chù_cou¡
)

205 , 
	`_ow√r
(0)

206 , 
	$_√xt
(0)

209 * 
íd_of_block
 = 
	`_gë
(0, 
chù_size
)-(*
this
)+
block_size
;

210 * 
íd_of_chùs
 = 
	`_gë
(
chù_cou¡
, 
chù_size
);

211 (Ë
íd_of_block
;

212 (Ë
íd_of_chùs
;

213 
	`as£π
(
íd_of_chùs
 <
íd_of_block
);

220 
	}
}

222 * 
	gblock_li°
::
	$acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

224 if(* 
±r
 = 
_èû
->
	`acquúe
(
TEMPLATE_ARGS
)) {

225 
_hô_cou¡
++;

226  
±r
;

230  
	`_¶ow_acquúe
(
TEMPLATE_ARGS
);

231 
	}
}

234 
	gblock_li°
::
	$block_li°
(
block_poﬁ
* 
poﬁ
, 
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

235 : 
	`_Áke_block
(
TEMPLATE_ARGS
)

236 , 
	`_èû
(&
_Áke_block
)

237 , 
	`_poﬁ
(
poﬁ
)

238 , 
	`_hô_cou¡
(0)

239 , 
	$_avg_hô_øã
(0)

251 
_Áke_block
.
_bôs
.
_ußbÀ_chùs
 = 0;

252 
_Áke_block
.
_bôs
.
_zombõ_chùs
 = 0;

253 
	}
}

256 * 
	gblock_li°
::
	$_¶ow_acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

258 
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

259  
	`acquúe
(
TEMPLATE_ARGS
);

260 
	}
}

262 
block
* 
	gblock_li°
::
	$acquúe_block
(
size_t
 
block_size
)

264 uni⁄ { 
block
* 
b
; 
uöçå_t
 
n
; } 
u
 = {
_poﬁ
->
	`acquúe_block
(
this
)};

265 (Ë
block_size
;

266 
	`as£π
((
u
.
n
 & -
block_size
) == u.n);

267  
u
.
b
;

269 
	}
}

270 
	gblock_li°
::
	$_ch™ge_blocks
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
)

272 (Ë
chù_size
;

275 if(
_èû
 =&
_Áke_block
) {

276 
_èû
 = 
	`acquúe_block
(
block_size
);

277 
_èû
->
_√xt
 = _tail;

294 c⁄° 
deˇy_øã
 = 1./5;

296 
size_t
 c⁄° 
max_avaûabÀ
 = 
chù_cou¡
 - 
°d
::
	`max
(()(.1*chip_count), 1);

298 
size_t
 c⁄° 
mö_Æloˇãd
 = (
chù_cou¡
+1)/2;

300 
_avg_hô_øã
 = 
_hô_cou¡
*(1-
deˇy_øã
) + _avg_hit_rate*decay_rate;

301 if(
_hô_cou¡
 < 
mö_Æloˇãd
 && 
_avg_hô_øã
 < min_allocated) {

303 
block
* 
√w_block
 = 
	`acquúe_block
(
block_size
);

304 
√w_block
->
_√xt
 = 
_èû
->_next;

305 
_èû
 = _èû->
_√xt
 = 
√w_block
;

309 
block
* 
¥ev
 = 0;

310 
block
* 
cur
 = 
_èû
;

311 
block
* 
√xt
;

313 
√xt
 = 
cur
->
_√xt
;

314 
√xt
->
	`ªcy˛e
();

315 if(
√xt
->
_bôs
.
	`ußbÀ_cou¡
(Ë<
max_avaûabÀ
)

319 if(
¥ev
) {

320 
	`as£π
(
¥ev
 !
cur
);

321 
	`as£π
(
cur
->
_bôs
.
	`ußbÀ_cou¡
(Ë> 
max_avaûabÀ
);

322 
	`as£π
(
√xt
->
_bôs
.
	`ußbÀ_cou¡
(Ë> 
max_avaûabÀ
);

323 
¥ev
->
_√xt
 = 
√xt
;

324 
_poﬁ
->
	`ªÀa£_block
(
cur
);

325 
cur
 = 
¥ev
;

329 if(
√xt
 =
_èû
)

332 
¥ev
 = 
cur
;

333 
cur
 = 
√xt
;

337 
_èû
 = 
cur
;

340 
_hô_cou¡
 = 0;

341 
	}
}

343 
	gblock_li°
::~
	$block_li°
() {

345 if(
_èû
 =&
_Áke_block
) ;

348 
block
* 
cur
 = 
_èû
->
_√xt
;

349 
_èû
->
_√xt
 = 0;

352  (
cur
=
_poﬁ
->
	`ªÀa£_block
(cur)) ) ;

353 
	}
}

	@src/fc/mem_block.h

24 #i‚de‡
__MEM_BLOCK_H


25 
	#__MEM_BLOCK_H


	)

28 
	~<°ddef.h
>

29 
	~<ˇs£π
>

30 
	~"w_ba£.h
"

32 
	~<°döt.h
>

35 
	#NORET


	)

45 
«me•a˚
 
	gmem‹y_block
 {

55 #ifde‡
__GNUC__


56 
	#EMPTY_ARRAY_DIM


	)

58 
	#EMPTY_ARRAY_DIM
 0

	)

62 
	gblock_li°
;

92 
	sblock_bôs
 {

94 
uöt64_t
 
	tbôm≠
;

96 íum { 
	gMAX_CHIPS
=8*(
bôm≠
) };

98 
NORET
 
block_bôs
(
size_t
 
chù_cou¡
);

100 
size_t
 
acquúe
(size_à
chù_cou¡
);

102 
ªÀa£
(
size_t
 
idx
, size_à
chù_cou¡
);

105 
bôm≠
 
¸óã_mask
(
size_t
 
bôs_£t
);

107 
bôm≠
 vﬁ©ûe* 
ußbÀ_chùs
(Ë{  &
	g_ußbÀ_chùs
; }

109 
size_t
 
ußbÀ_cou¡
(Ëc⁄° {  
_p›c
(
_ußbÀ_chùs
); }

110 
size_t
 
zombõ_cou¡
(Ëc⁄° {  
_p›c
(
_zombõ_chùs
); }

112 
ªcy˛e
();

115 
size_t
 
_p›c
(
bôm≠
 
bm
);

117 
bôm≠
 
	g_ußbÀ_chùs
;

118 
bôm≠
 vﬁ©ûê
	g_zombõ_chùs
;

138 
	sblock
 {

140 
NORET
 
block
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

142 * 
acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

146 
ªÀa£
(* 
±r
, 
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

148 
ªcy˛e
(Ë{ 
	g_bôs
.recycle(); }

150 * 
_gë
(
size_t
 
idx
, size_à
chù_size
);

152 
block_bôs
 
	g_bôs
;

153 
block_li°
* 
	g_ow√r
;

154 
block
* 
	g_√xt
;

155 
	g_d©a
[
EMPTY_ARRAY_DIM
];

159 
	sblock_poﬁ
 {

160 
block
* 
acquúe_block
(
block_li°
* 
ow√r
);

161 
block
* 
ªÀa£_block
(block* 
b
);

164 
vútuÆ
 
boﬁ
 
vÆid©e_poöãr
(* 
±r
)=0;

166 
vútuÆ
 
	gNORET
 ~
block_poﬁ
() { }

168 
	g¥Ÿe˘ed
:

170 
vútuÆ
 
block
* 
_acquúe_block
()=0;

172 
vútuÆ
 
_ªÀa£_block
(
block
* 
b
)=0;

175 
	sblock_li°
 {

176 
NORET
 
block_li°
(
block_poﬁ
* 
poﬁ
, 
size_t
 
chù_size
,

177 
size_t
 
chù_cou¡
, size_à
block_size
);

179 
	gNORET
 ~
block_li°
();

181 * 
acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

182 
block
* 
acquúe_block
(
size_t
 
block_size
);

184 * 
_¶ow_acquúe
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

185 
_ch™ge_blocks
(
size_t
 
chù_size
, size_à
chù_cou¡
, size_à
block_size
);

187 
block
 
	g_Áke_block
;

188 
block
* 
	g_èû
;

189 
block_poﬁ
* 
	g_poﬁ
;

190 
size_t
 
	g_hô_cou¡
;

191 
	g_avg_hô_øã
;

196 
ölöe


197 
block
* 
	gblock_poﬁ
::
acquúe_block
(
block_li°
* 
ow√r
) {

198 
block
* 
b
 = 
_acquúe_block
();

199 
	gb
->
	g_ow√r
 = 
ow√r
;

200 
	gb
->
	g_√xt
 = 0;

201 
	gb
->
	g_bôs
.
ªcy˛e
();

202  
	gb
;

205 
ölöe


206 
block
* 
	gblock_poﬁ
::
ªÀa£_block
(block* 
b
) {

207 
as£π
(
vÆid©e_poöãr
(
b
));

208 
block
* 
	g√xt
 = 
b
->
_√xt
;

209 
	gb
->
	g_√xt
 = 0;

210 
	gb
->
	g_ow√r
 = 0;

211 
_ªÀa£_block
(
b
);

212  
	g√xt
;

220 
	gãm∂©e
<
boﬁ
 
	gB
>

221 
	gÁû_u∆ess
;

223 
	gãm∂©e
<>

224 
	gÁû_u∆ess
<
	gåue
> {

225 
boﬁ
 
vÆid
(Ë{  
	gåue
; }

234 
	gãm∂©e
<
	gN
, 
	gL
, 
	gU
>

235 
	gbounds_check
 : 
Áû_u∆ess
<(
L
 <
N
Ë&& (N <
U
)> {

236 
boﬁ
 
vÆid
(Ë{  
åue
; }

246 
	gãm∂©e
 <
	gN
>

247 
	gmëa_log2
 : 
Áû_u∆ess
<(
N
 > 2)> {

248 íum { 
VALUE
=1+
mëa_log2
<
N
/2>::VALUE };

251 
	gãm∂©e
<>

252 
	gmëa_log2
<2> {

253 íum { 
	gVALUE
=1 };

256 
	gãm∂©e
<>

257 
	gmëa_log2
<1> {

258 íum { 
	gVALUE
=0 };

261 
	gãm∂©e
<
	gA
, 
	gB
>

262 
	smëa_mö
 {

263 íum { 
	gVALUE
 = (
A
 < 
B
)? A : B };

275 
	gãm∂©e
<
	gChùSize
, 
	gOvîhódByãs
=(
mem‹y_block
::
block
), 
	gMaxChùs
=
block_bôs
::
MAX_CHIPS
>

276 
mëa_block_size
 : 
Áû_u∆ess
<(
ChùSize
 > 0 && 
OvîhódByãs
 >= 0)> {

277 íum { 
CHIP_SIZE
 = 
ChùSize
 };

278 íum { 
	gOVERHEAD
 = 
OvîhódByãs
 };

279 íum { 
	gMAX_CHIPS
 = 
MaxChùs
 };

280 íum { 
	gMIN_CHIPS
 = 
MAX_CHIPS
/2 + 1 };

281 íum { 
	gBYTES_NEEDED
 = 
MIN_CHIPS
*
ChùSize
+
OvîhódByãs
 };

282 íum { 
	gLOG2
 = 
mëa_log2
<2*
BYTES_NEEDED
-1>::
VALUE
 };

284 íum { 
	gBYTES
 = 1 << 
LOG2
 };

285 
	gÁû_u∆ess
<((
	gBYTES
 &- BYTESË=
BYTES
)> 
powî_of_two
;

296 íum { 
	gREAL_COUNT
 = (
BYTES
-
OvîhódByãs
)/
ChùSize
 };

297 
	gÁû_u∆ess
<((
	gOVERHEAD
 + 
MIN_CHIPS
*
	gChùSize
Ë> ()
	gBYTES
/2)> 
	gß√_chù_cou¡
;

299 íum { 
	gCOUNT
 = 
mëa_mö
<
MAX_CHIPS
, 
	gREAL_COUNT
>::
VALUE
 };

300 
	gbounds_check
<
	gCOUNT
, 
	gMIN_CHIPS
, 
	gMAX_CHIPS
> 
	gbounds
;

	@src/fc/nbox.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#NBOX_C


	)

36 #ifde‡
__GNUC__


37 #¥agm®
im∂emíèti⁄


40 
	~<w.h
>

41 
	~<nbox.h
>

43 
	~<c°dlib
>

44 
	~<cm©h
>

46 
	~<io°ªam
>

47 
	~<w_°r°ªam.h
>

48 
	~<c°dio
>

50 #i‚de‡
MIN


51 
	#MIN
(
x
,
y
Ë((xË< (yË? (xË: (y))

	)

54 #i‚de‡
MAX


55 
	#MAX
(
x
,
y
Ë((xË> (yË? (xË: (y))

	)

58 #i‚de‡
ABS


59 
	#ABS
(
x
Ë((xË>0 ? (xË: -(x))

	)

63 #ifde‡
WANT_REGISTER


64 
	#REGISTER
 

	)

66 
	#REGISTER


	)

70 
nbox_t
 
__NuŒ__
(0);

71 
	gnbox_t
&Çbox_t::
NuŒ
 = 
__NuŒ__
;

73 c⁄° 
	gnbox_t
::
öt4_t
 
nbox_t
::
max_öt4
 = 
w_ba£_t
::
öt4_max
;

74 c⁄° 
	gnbox_t
::
öt4_t
 
nbox_t
::
mö_öt4
 = 
w_ba£_t
::
öt4_mö
;

76 
	gnbox_t
::
	$nbox_t
(
dimísi⁄
)

77 : 
	$dim
(
dimísi⁄
)

79 
	`w_as£π9
(
dimísi⁄
 <
max_dimísi⁄
);

80 #ifde‡
ZERO_INIT


81 
	`mem£t
(
¨øy
, '\0', (array));

83 
	`nuŒify
();

84 
	}
}

86 
	gnbox_t
::
	$nbox_t
(c⁄° 
nbox_t
& 
r
)

88 *
this
 = 
r
;

89 
	}
}

91 
	gnbox_t
::
	$nbox_t
(
dimísi⁄
, 
box
[])

92 : 
	$dim
(
dimísi⁄
)

94 
	`w_as£π9
(
dimísi⁄
 <
max_dimísi⁄
);

95 #ifde‡
ZERO_INIT


96 
	`mem£t
(
¨øy
, '\0', (array));

98 
i
=0; i<
dim
; i++) {

99 
¨øy
[
i
] = 
box
[i];

100 
¨øy
[
i
+
dim
] = 
box
[i+dim];

102 
	}
}

104 
	gnbox_t
::
	$nbox_t
(c⁄° * 
s
, 
Àn
)

105 : 
	`dim
(
Àn
 / (2 * ()))

107 
	`w_as£π9
(
dim
 <
max_dimísi⁄
);

108 #ifde‡
ZERO_INIT


109 
	`mem£t
(
¨øy
, '\0', (array));

111 
	`mem˝y
((*Ë
¨øy
, (*Ë
s
, 
Àn
);

112 
	}
}

118 
	gnbox_t
::
	$nbox_t
(c⁄° * 
s
)

120 #ifde‡
ZERO_INIT


121 
	`mem£t
(
¨øy
, '\0', (array));

123 i‡(
s
==
NULL
) {

124 
dim
 = 
max_dimísi⁄
;

125 
	`nuŒify
();

129 
	`put
(
s
);

130 
	}
}

132 
boﬁ
 
	gnbox_t
::
	$em±y
() const

134  (
	`¨ó
() < 0.0);

135 
	}
}

137 
	gnbox_t
::
	$¥öt
(
o°ªam
 &
o
, 
Àvñ
) const

139 
REGISTER
 
i
, 
j
;

140 
j
 = 0; j < 5 - 
Àvñ
; j++Ë
o
 << "\t";

141 
o
 << "---------- :\n";

143 if(
dim
 > 0) {

146 
j
 = 0; j < 5 - 
Àvñ
; j++Ë
o
 << "\t";

147 
o
 << 
¨øy
[0] ;

148 
i
=1; i<
dim
; i++) {

149 
o
 << "," << 
¨øy
[
i
] ;

151 
o
 << 
ídl
;

153 
j
 = 0; j < 5 - 
Àvñ
; j++Ë
o
 << "\t";

154 
o
 << 
¨øy
[0+
dim
] ;

155 
i
=1; i<
dim
; i++) {

156 
o
 << "," << 
¨øy
[
i
+
dim
] ;

158 
o
 << 
ídl
;

160 if(
dim
 =0Ë{ 
o
 << "<NULL>" <<
ídl
; }

161 
	}
}

167 
	gnbox_t
::
	$døw
(
Àvñ
, 
o°ªam
 &
DøwFûe
, c⁄° 
nbox_t
& 
CovîAŒ
) const

169 
£ed
;

170 
thick
;

171 
x1
, 
y1
, 
x2
, 
y2
;

172 
S¸ìnSize
, 
W‹ldSize
;

173 
øtio
, 
adju°
;

174 
adj
,
ba£
;

176 i‡(
	`em±y
()) ;

178 
ba£
 = 2147483647.0;

179 
S¸ìnSize
 = 500.0;

180 
W‹ldSize
 = ()
	`MAX
(
CovîAŒ
.
¨øy
[2]-CoverAll.array[0],

181 
CovîAŒ
.
¨øy
[3]-CoverAll.array[1]);

183 
Àvñ
-1) {

184 0: 
thick
 = 5; ;

185 1: 
thick
 = 1; ;

186 2: 
thick
 = 4; ;

187 3: 
thick
 = 2; ;

188 4: 
thick
 = 6; ;

189 : 
thick
 = 3; ;

192 
adju°
 = 0.0;

193 i‡(
thick
 != 5) {

194 
	`§™d
(
£ed
);

195 
adj
 = 
	`ønd
();

196 
adju°
 = (
Àvñ
-1Ë* 5.0 + (
adj
/
ba£
) * 5.0 ;

199 
øtio
 = 
S¸ìnSize
 / 
W‹ldSize
;

201 i‡(
thick
!=5) {

202 
x1
 = -1.0*
øtio
* 
	`ABS
(
¨øy
[0])*0.05;

203 
x2
 = 
øtio
*
	`ABS
(
¨øy
[2])*0.05;

204 
y1
 = -1.0*
øtio
*
	`ABS
(
¨øy
[1])*0.05;

205 
y2
 = 
øtio
*
	`ABS
(
¨øy
[3])*0.05;

207 
x1
 = 
x2
 = 
y1
 = 
y2
 = 0.0;

210 
x1
 = 32.0 + (
¨øy
[0] - 
CovîAŒ
.¨øy[0]Ë* 
øtio
 - 
adju°
;

211 
x2
 = 32.0 + (
¨øy
[2] - 
CovîAŒ
.¨øy[0]Ë* 
øtio
 + 
adju°
;

212 
y1
 = -64.0 + (
¨øy
[1] - 
CovîAŒ
.¨øy[1]Ë* 
øtio
 - 
adju°
;

213 
y2
 = -64.0 + (
¨øy
[3] - 
CovîAŒ
.¨øy[1]Ë* 
øtio
 + 
adju°
;

215 
	`W_FORM
(
DøwFûe
)("VECTOR\n");

216 
	`W_FORM
(
DøwFûe
)("%3.2‡%3.2f\n",
x1
,
y1
);

217 
	`W_FORM
(
DøwFûe
)("%3.2‡%3.2f\n",
x2
,
y1
);

218 
	`W_FORM
(
DøwFûe
)("%3.2‡%3.2f\n",
x2
,
y2
);

219 
	`W_FORM
(
DøwFûe
)("%3.2‡%3.2f\n",
x1
,
y2
);

220 
	`W_FORM
(
DøwFûe
)("%3.2‡%3.2f\n",
x1
,
y1
);

221 
	`W_FORM
(
DøwFûe
)("*\n");

222 
	`W_FORM
(
DøwFûe
)("%1d 0\n",
thick
);

223 
	`W_FORM
(
DøwFûe
)("0\n");

224 
	}
}

226 
boﬁ
 
	gnbox_t
::
›î©‹
==(c⁄° 
nbox_t
& 
Ÿhî
) const

228 
REGISTER
 
i
;

230 
w_as£π9
(
dim
 =
Ÿhî
.dim);

232 
	gi
=0; i<
	gdim
; i++) {

233 i‡(
	g¨øy
[
i
] !
Ÿhî
.
¨øy
[i] ||áºay[i+
dim
] != other.array[i+dim])

234  
Ál£
;

236  
	gåue
;

239 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	gos
, c⁄° 
	gnbox_t
& 
	gbox
)

241 
REGISTER
 
	gi
;

243 
	gos
 << "[";

244 if(
	gbox
.
	gdim
 > 0) {

247 
	gos
 << "<"<< 
	gbox
.
	g¨øy
[0] ;

248 
	gi
=1; i<
	gbox
.
	gdim
; i++) {

249 
	gos
 << "," << 
	gbox
.
	g¨øy
[
i
] ;

251 
	gos
 << ">,<" ;

253 
	gos
 << 
	gbox
.
	g¨øy
[0+
box
.
dim
] ;

254 
	gi
=1; i<
	gbox
.
	gdim
; i++) {

255 
	gos
 << "," << 
	gbox
.
	g¨øy
[
i
+
box
.
dim
] ;

257 
	gos
 << ">";

259 
	gos
 << "] " << 
	gídl
;

261  
	gos
;

264 
	gnbox_t
::
	$¨ó
() const

266 if(
	`is_NuŒ
())  -1.0;

268 
REGISTER
 
i
;

269 
poöt
 = 
åue
;

270 
s
;

271 
¥odu˘
 = 1.0;

272 
i
=0; i<
dim
; i++) {

273 i‡((
s
=
	`side
(
i
)) < 0)  -1.0;

274 i‡((
¥odu˘
 *()
s
Ë< 0Ë (4.0*
max_öt4
*max_int4);

275 
poöt
 = (poöà&& !
s
);

277 i‡(
poöt
)  1.0;

278  
¥odu˘
;

279 
	}
}

281 
	gnbox_t
::
	$m¨gö
()

283 
REGISTER
 
i
, 
sum
 = 0;

284 
i
=0; i<
dim
; i++) {

285 
sum
 +
	`side
(
i
);

287  
sum
;

288 
	}
}

294 
nbox_t
 
	gnbox_t
::
›î©‹
^(c⁄°Çbox_t& 
Ÿhî
) const

296 
REGISTER
 
i
;

297 
w_as£π1
(
dim
 =
Ÿhî
.dim);

298 
	gbox
[2*
max_dimísi⁄
];

300 
	gi
=0; i<
	gdim
; i++) {

301 
	gbox
[
i
] = 
MAX
(
¨øy
[i], 
Ÿhî
.array[i]);

302 
	gbox
[
i
+
dim
] = 
MIN
(
¨øy
[i+dim], 
Ÿhî
.array[i+dim]);

304  
nbox_t
(
dim
, 
box
);

307 
nbox_t
 
	gnbox_t
::
›î©‹
+(c⁄°Çbox_t& 
Ÿhî
) const

309 
REGISTER
 
i
;

310 
w_as£π1
(
dim
 =
Ÿhî
.dim);

311 
	gbox
[2*
max_dimísi⁄
];

313 
	gi
=0; i<
	gdim
; i++) {

314 
	gbox
[
i
] = 
MIN
(
¨øy
[i], 
Ÿhî
.array[i]);

315 
	gbox
[
i
+
dim
] = 
MAX
(
¨øy
[i+dim], 
Ÿhî
.array[i+dim]);

317  
nbox_t
(
dim
, 
box
);

320 
	gnbox_t
&Çbox_t::
›î©‹
+=(c⁄° 
nbox_t
& 
Ÿhî
)

322 
REGISTER
 
i
;

323 
w_as£π1
(
dim
 =
Ÿhî
.dim);

324 
	gi
=0; i<
	gdim
; i++) {

325 
	g¨øy
[
i
] = 
MIN
(
¨øy
[i], 
Ÿhî
.array[i]);

326 
	g¨øy
[
i
+
dim
] = 
MAX
(
¨øy
[i+dim], 
Ÿhî
.array[i+dim]);

328  *
	gthis
;

331 
boﬁ
 
	gnbox_t
::
›î©‹
||(c⁄° 
nbox_t
& 
Ÿhî
) const

333 
REGISTER
 
i
;

335 
w_as£π1
(
dim
 =
Ÿhî
.dim);

337 
	gi
=0; i<
	gdim
; i++)

340 i‡((
	g¨øy
[
i
] > 
	gŸhî
.¨øy[i+
dim
] ||árray[i+dim] < other.array[i]))

341  
	gÁl£
;

343  
	gåue
;

346 
boﬁ
 
	gnbox_t
::
›î©‹
/(c⁄° 
nbox_t
& 
Ÿhî
) const

348 
REGISTER
 
i
;

350 
w_as£π9
(
dim
 =
Ÿhî
.dim);

352 
	gi
=0; i<
	gdim
; i++)

353 i‡(
	g¨øy
[
i
] > 
	gŸhî
.¨øy[i]Ë 
	gÁl£
;

355 
	gi
=
dim
; i<2*
	gdim
; i++)

356 i‡(
	g¨øy
[
i
] < 
	gŸhî
.¨øy[i]Ë 
	gÁl£
;

358  
	gåue
;

361 
boﬁ
 
	gnbox_t
::
›î©‹
>(c⁄° 
nbox_t
& 
Ÿhî
) const

363 
REGISTER
 
i
;

365 
w_as£π1
(
dim
 =
Ÿhî
.dim);

366 
	gi
=0; i<
	gdim
*2; i++) {

367 i‡(
	g¨øy
[
i
] > 
	gŸhî
.¨øy[i]Ë 
	gåue
;

368 i‡(
	g¨øy
[
i
] < 
	gŸhî
.¨øy[i]Ë 
	gÁl£
;

370  
	gÁl£
;

373 
boﬁ
 
	gnbox_t
::
›î©‹
<(c⁄° 
nbox_t
& 
Ÿhî
) const

375 
REGISTER
 
i
;

377 
w_as£π1
(
dim
 =
Ÿhî
.dim);

378 
	gi
=0; i<
	gdim
*2; i++) {

379 i‡(
	g¨øy
[
i
] < 
	gŸhî
.¨øy[i]Ë 
	gåue
;

380 i‡(
	g¨øy
[
i
] > 
	gŸhî
.¨øy[i]Ë 
	gÁl£
;

382  
	gÁl£
;

385 
	gnbox_t
::
›î©‹
*(c⁄° 
nbox_t
& 
Ÿhî
) const

387 
REGISTER
 
i
;

388 
w_as£π1
(
dim
 =
Ÿhî
.dim);

389 
	gsqu¨e
 = 0.0;

390 
	gi
=0; i<
	gdim
; i++) {

391 
	gdiff
 = 
¨øy
[
i
]+¨øy[i+
dim
]-
Ÿhî
.array[i]-other.array[i+dim];

392 
	gsqu¨e
 +(
diff
*diff/4.0);

394  
	gsqu¨e
;

402 
	gnbox_t
::
›î©‹
 *()

404 
s
[40];

405 
w_o°r°ªam
 
ss
(
s
, (s));

407 
W_FORM
(
ss
)("%d.%ld.%ld.%ld.%ld", 
	gdim
,

408 
	g¨øy
[0],árray[1],árray[2],árray[3]);

409 
	gss
 << 
	gíds
;

411  
	gs
;

414 
	gnbox_t
::
	$byãs2box
(c⁄° * 
key
, 
kÀn
)

416 
dim
 = 
kÀn
 / (2*());

417 
	`mem˝y
((*Ë
¨øy
, (*Ë
key
, 
kÀn
);

418 
	}
}

424 
	gnbox_t
::
	$put
(c⁄° * 
s
)

426 
MAYBE_UNUSED
 
n
;

427 
n
 = 
	`ssˇnf
(
C_STRING_BUG
 
s
, "%d.%d.%d.%d.%d", &
dim
,

428 &
¨øy
[0], &array[1], &array[2], &array[3]);

429 
	`w_as£π1
(
n
==5 && 
dim
 == 2);

430 
i
=2*
dim
; i<2*
max_dimísi⁄
; i++) {

431 
¨øy
[
i
] = 0;

433 
	}
}

438 
	gnbox_t
::
	$squ¨ed
()

440 
x_side
 = 
	`side
(0);

441 
y_side
 = 
	`side
(1);

443 i‡(
x_side
 > 
y_side
) {

444 
¨øy
[1] -(
x_side
-
y_side
)/2;

445 
¨øy
[3] +(
x_side
-
y_side
)/2;

447 
¨øy
[0] -(
y_side
-
x_side
)/2;

448 
¨øy
[2] +(
y_side
-
x_side
)/2;

450 
	}
}

452 
	gnbox_t
::
	$nuŒify
()

454 
i
=0; i<
dim
; i++) {

455 
¨øy
[
i
] = 
max_öt4
;

456 
¨øy
[
i
+
dim
] = 
mö_öt4
;

458 
	}
}

463 c⁄° 
	grŸ©i⁄_èbÀ
[4] = { 3, 0, 0, 1};

464 c⁄° 
	g£n£_èbÀ
[4] = {-1, 1, 1, -1};

465 c⁄° 
	gquad_èbÀ
[4][2][2] = { {{0,1}, {3,2}}, {{1,2}, {0,3}},

469 #ifde‡
WINNT


471 #unde‡
log2


474 
	$log2
(
vÆue
)

476 
ground
 = 1;

477 
REGISTER
 
i
 = 0;

478 –
ground
 = (ground<<1)Ë<
vÆue
Ë
i
++;

479  
i
;

480 
	}
}

482 
	$powî
(
ba£
, 
ödex
)

484 
REGISTER
 
vÆ
 = 1;

485 
i
=0; i<
ödex
; i++Ë
vÆ
 *
ba£
;

486  
vÆ
;

487 
	}
}

492 
	gnbox_t
::
	$hvÆue
(c⁄° 
nbox_t
& 
univî£
, 
Àvñ
) const

494 
mö_side
 = 
	`MIN
(
univî£
.
	`side
(0), universe.side(1));

495 i‡(
Àvñ
 == 0)

496 
Àvñ
 = 
	`MIN
(14, 
	`log2
(
mö_side
) );

498 
x_low
 = 
univî£
.
	`bound
(0), 
y_low
 = universe.bound(1);

499 
ªt_vÆ
 = 0;

500 
x
 = 
	`˚¡î
(0), 
y
 = center(1);

502 
cou¡
 = 0, 
rŸ©i⁄
 = 0, 
£n£
 = 1;

504 
REGISTER
 
i
,
j
;

505  
i
=(
univî£
.
	`side
(0)+1)/2, 
j
=(universe.side(1)+1)/2;

506 
i
>0 && 
j
>0 && 
Àvñ
>
cou¡
; i=i/2, j=j/2) {

507 
cou¡
++;

508 
x_vÆ
 = (
x
 - 
x_low
Ë< 
i
 ? 0 : 1;

509 
y_vÆ
 = (
y
 - 
y_low
Ë< 
j
 ? 0 : 1;

510 
quad
 = 
quad_èbÀ
[
rŸ©i⁄
][
x_vÆ
][
y_vÆ
];

511 
x_low
 +(
i
*
x_vÆ
);

512 
y_low
 +(
j
*
y_vÆ
);

513 
ªt_vÆ
 +((((
£n£
==-1)?(3-
quad
):quad)-1)*
	`powî
(4,
Àvñ
-
cou¡
));

514 
rŸ©i⁄
 = (rŸ©i⁄ + 
rŸ©i⁄_èbÀ
[
quad
]) % 4;

516 
£n£
 *
£n£_èbÀ
[
quad
];

519  
ªt_vÆ
;

520 
	}
}

522 
	gnbox_t
::
	$hcmp
(c⁄° 
nbox_t
& 
Ÿhî
, c⁄°Çbox_t& 
univî£
, 
Àvñ
) const

524 
mö_side
 = 
	`MIN
(
univî£
.
	`side
(0), universe.side(1));

525 i‡(
Àvñ
 == 0)

526 
Àvñ
 = 
	`MIN
(14, 
	`log2
(
mö_side
) );

528 
x_low
 = 
univî£
.
	`bound
(0), 
y_low
 = universe.bound(1);

529 
vÆ1
, 
vÆ2
;

530 
x1
 = 
	`˚¡î
(0), 
y1
 = center(1),

531 
x2
 = 
Ÿhî
.
	`˚¡î
(0), 
y2
 = other.center(1);

532 
cou¡
 = 0, 
rŸ©i⁄
 = 0, 
£n£
 = 1;

534 
REGISTER
 
i
,
j
;

535  
i
=(
univî£
.
	`side
(0)+1)/2, 
j
=(universe.side(1)+1)/2;

536 
i
>0 && 
j
>0 && 
Àvñ
>
cou¡
; i=i/2, j=j/2) {

537 
cou¡
++;

538 
x_vÆ
 = (
x2
 - 
x_low
Ë< 
i
 ? 0 : 1;

539 
y_vÆ
 = (
y2
 - 
y_low
Ë< 
j
 ? 0 : 1;

540 
quad
 = 
quad_èbÀ
[
rŸ©i⁄
][
x_vÆ
][
y_vÆ
];

541 
vÆ2
 = (
£n£
==-1)?(3-
quad
):quad;

542 
x_vÆ
 = (
x1
 - 
x_low
Ë< 
i
 ? 0 : 1;

543 
y_vÆ
 = (
y1
 - 
y_low
Ë< 
j
 ? 0 : 1;

544 
quad
 = 
quad_èbÀ
[
rŸ©i⁄
][
x_vÆ
][
y_vÆ
];

545 
vÆ1
 = (
£n£
==-1)?(3-
quad
):quad;

546 i‡(
vÆ1
!=
vÆ2
)  (val1-val2);

548 
rŸ©i⁄
 = (rŸ©i⁄ + 
rŸ©i⁄_èbÀ
[
quad
]) % 4;

549 
£n£
 *
£n£_èbÀ
[
quad
];

550 
x_low
 +(
i
*
x_vÆ
);

551 
y_low
 +(
j
*
y_vÆ
);

555 
	}
}

558 
	gnbox_t
::
	$ˇn⁄ize
()

560 
x
;

561 
i
=0; i<
dim
; i++) {

562 if(
¨øy
[
i
] >áºay[i+
dim
]) {

564 
x
 = 
¨øy
[
i
];

565 
¨øy
[
i
] =áºay[i+
dim
];

566 
¨øy
[
i
+
dim
] = 
x
;

569 
	}
}

	@src/fc/nbox.h

30 #i‚de‡
NBOX_H


31 
	#NBOX_H


	)

33 
	~"w_deföes.h
"

37 
	~<w_ba£.h
>

38 
	~<iosfwd
>

40 #ifde‡
__GNUG__


41 #¥agm®
öãrÁ˚


52 ˛as†
	cnbox_t
 {

53 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam& 
	mos
, c⁄° 
	mnbox_t
& 
	mbox
);

55 
	mpublic
:

56 
w_ba£_t
::
	töt4_t
 int4_t;

58 íum { 
	mmax_dimísi⁄
 = 4 };

59 c⁄° 
öt4_t
 
	gmax_öt4
;

60 c⁄° 
öt4_t
 
	gmö_öt4
;

66 
	gnbox_t
& 
	gNuŒ
;

68 
	gpublic
:

70 
	esob_cmp_t
 { 
t_exa˘
 = 1, 
	gt_ovîœp
, 
	gt_covî
, 
	gt_öside
, 
	gt_bad
 };

72 
boﬁ
 
	$is_NuŒ
(Ëc⁄° {  (
dim
 =0)?
åue
:
Ál£
; 
	}
}

74 
	g¥Ÿe˘ed
:

75 
öt4_t
 
¨øy
[2*
max_dimísi⁄
];

76 
	gdim
;

77 
	g¥iv©e
:

78 
fûl4
 
fûÀr
;

79 
öt4_t
* 
	$box
(Ë{  
¨øy
; 
	}
}

80 
	gpublic
:

84 
nbox_t
(
dimísi⁄
 = 
max_dimísi⁄
);

89 
nbox_t
(
dimísi⁄
, 
box
[]);

93 
nbox_t
(c⁄°Çbox_t& 
nbox
);

98 
nbox_t
(c⁄° * 
s
, 
Àn
);

100 
	gvútuÆ
 ~
	$nbox_t
(Ë{
	}
}

103 
	$dimísi⁄
(Ëc⁄° {  
dim
; 
	}
}

105 
	$bound
(
n
Ëc⁄° {  
¨øy
[n]; 
	}
}

107 
	$side
(
n
Ëc⁄° {  
¨øy
[n+
dim
]-¨øy[n]; 
	}
}

109 
	$˚¡î
(
n
Ëc⁄° {  (
¨øy
[n+
dim
]-¨øy[n])/2+¨øy[n]; 
	}
}

111 
boﬁ
 
	$em±y
() const;

112 
	`squ¨ed
();

113 
	`nuŒify
();

119 
	`ˇn⁄ize
();

123 
	$hvÆue
(c⁄° 
nbox_t
& 
univî£
, 
Àvñ
=0) const;

128 
	$hcmp
(c⁄° 
nbox_t
& 
Ÿhî
, c⁄°Çbox_t& 
univî£
,

129 
Àvñ
=0) const;

131 
	$¥öt
(
o°ªam
 &, 
Àvñ
) const;

132 
	$døw
(
Àvñ
, 
o°ªam
 &
DøwFûe
, c⁄° 
nbox_t
& 
CovîAŒ
) const;

140 
	$¨ó
() const;

144 
	`m¨gö
();

158 
nbox_t
 
›î©‹
^(c⁄°Çbox_t& 
Ÿhî
) const;

159 
nbox_t
 
›î©‹
+(c⁄°Çbox_t& 
Ÿhî
) const;

161 
nbox_t
& 
›î©‹
+=(c⁄°Çbox_t& 
Ÿhî
);

162 
nbox_t
& 
›î©‹
=(c⁄°Çbox_t& 
Ÿhî
);

163 
boﬁ
 
›î©‹
==(c⁄° 
nbox_t
& 
Ÿhî
) const;

164 
boﬁ
 
›î©‹
/(c⁄° 
nbox_t
& 
Ÿhî
) const;

165 
boﬁ
 
	$c⁄èös
(c⁄° 
nbox_t
& 
Ÿhî
Ëc⁄° {  *
this
 / othî; 
	}
}

166 
boﬁ
 
	g›î©‹
||(c⁄° 
	gnbox_t
& 
	gŸhî
) const;

167 
boﬁ
 
	g›î©‹
>(c⁄° 
	gnbox_t
& 
	gŸhî
) const;

168 
boﬁ
 
	g›î©‹
<(c⁄° 
	gnbox_t
& 
	gŸhî
) const;

169 
	g›î©‹
*(c⁄° 
	gnbox_t
& 
	gŸhî
) const;

172 
nbox_t
(c⁄° * 
s
);

174 
›î©‹
 *();

176 
put
(const *);

179 
byãs2box
(c⁄° * 
key
, 
kÀn
);

181 c⁄° * 
	$kvÆ
(Ëc⁄° {  (*Ë
¨øy
; 
	}
}

183 
	$kÀn
(Ëc⁄° {  2*()*
dim
; 
	}
}

187 
ölöe
 
	gnbox_t
&Çbox_t::
›î©‹
=(c⁄° 
nbox_t
 &
r
)

189 i‡(
this
 !&
r
) {

190 
i
;

191 
	gdim
 = 
r
.
dim
;

192 
	gi
 = 0; i < 
	gdim
*2; i++)

193 
	g¨øy
[
i
] = 
r
.
¨øy
[i];

195  *
	gthis
;

	@src/fc/os_types.h

30 #i‚de‡
OS_TYPES_H


31 
	#OS_TYPES_H


	)

33 
	~"w_deföes.h
"

37 
	~<sys/ty≥s.h
>

39 #i‡
deföed
(
LARGEFILE_AWARE
)

	@src/fc/rand48.cpp

54 
	~"w_deföes.h
"

58 
	~"ønd48.h
"

60 
unsig√d48_t
 
	gønd48
::
	$_mask
(
unsig√d48_t
 
x
) const

62  
x
 & 0xffffffffffffull;

63 
	}
}

65 
unsig√d48_t
 
	gønd48
::
	$_upd©e
()

67 
_°©e
 = 
	`_mask
(_state*0x5deece66dull + 0xb);

68  
_°©e
;

69 
	}
}

71 
	gønd48
::
	$dønd
()

90 uni⁄ { 
unsig√d48_t
 
n
; 
d
; } 
u
 = {

91 (0x3ffuŒ << 52Ë| (
	`_upd©e
() << 4)

93  
u
.
d
-1.0;

94 
	}
}

101 
	$out
(
of°ªam
& 
o
, c⁄° 
unsig√d48_t
& 
wh©
)

109 
unsig√d48_t
 
£ed
;

110 
dummy
[(
unsig√d48_t
)/()];

111 } 
PUN
;

112 
PUN
.
£ed
 = 
wh©
;

114 
o
 <<

115 
PUN
.
dummy
[0] << "," <<

116 
PUN
.
dummy
[1] << "," <<

117 
PUN
.
dummy
[2] << "," <<

118 
PUN
.
dummy
[3] << 
ídl
;

119 
	}
}

126 
	$ö
(
if°ªam
& 
i
, 
unsig√d48_t
& 
ªs
)

132 
unsig√d48_t
 
£ed
;

133 
dummy
[(
unsig√d48_t
)/()];

134 } 
PUN
 ;

136 
comma
 = ',';

137 
j
=0;

139  (
comma
 == ',') &&

140 (
j
 < (
PUN
.
dummy
)/()) &&

141 (
i
 >> 
PUN
.
dummy
[
j
])

144 if(
i
.
	`≥ek
(Ë=','Ëò>> 
comma
;

145 
j
++;

147 if(
j
 < (
PUN
.
dummy
)/() ) {

149 
i
.
	`˛ór
(
ios
::
badbô
|i.
	`rd°©e
());

151 
ªs
 = 
PUN
.
£ed
;

152 
	}
}

	@src/fc/rand48.h

54 
	~"w_deföes.h
"

62 
	~"w_ba£.h
"

63 
	#RAND48_INITIAL_SEED
 0x330óbcd1234uŒ

	)

64 
	#RAND48_INITIALIZER
 { 
RAND48_INITIAL_SEED
 }

	)

66 
	gw_ba£_t
::
	töt8_t
 
	tsig√d48_t
;

67 
	gw_ba£_t
::
	tuöt8_t
 
	tunsig√d48_t
;

71 
	~<f°ªam
>

72 
ö
(
if°ªam
& 
i
, 
unsig√d48_t
& 
wh©
);

73 
out
(
of°ªam
& 
o
, c⁄° 
unsig√d48_t
& 
wh©
);

77 ˛as†
	cønd48
 {

78 
	mpublic
:

80 
	$£ed
(
unsig√d48_t
 
£ed
Ë{ 
_°©e
 = 
	`_mask
(seed); }

82 
sig√d48_t
 
	$ønd
() {

83  
	`sig√d48_t
(
	`_upd©e
());

84 
	}
}

86 
dønd
();

89 
sig√d48_t
 
	$øndn
(
sig√d48_t
 
max
Ë{  
	`sig√d48_t
(max*
	`dønd
()); 
	}
}

92 
unsig√d48_t
 
_upd©e
();

93 
unsig√d48_t
 
	$_mask
(
unsig√d48_t
 
x
) const;

95 
public
:

100 
unsig√d48_t
 
_°©e
;

101 
	}
};

	@src/fc/stime.cpp

30 
	~"w_deföes.h
"

35 
	~<˘ime
>

36 
	~<c°rög
>

37 
	~<w_ba£.h
>

38 
	~<°ime.h
>

39 
	~<w_°ªam.h
>

40 
	~<˛imôs
>

53 
	#NS_SECOND
 1000000000

	)

54 
	#US_SECOND
 1000000

	)

55 
	#MS_SECOND
 1000

	)

57 #ifde‡
USE_POSIX_TIME


58 
time•ec
 
	t_°ime_t
;

59 
	#°_tod
 
tv_£c


	)

60 
	#°_húes
 
tv_n£c


	)

61 
	#HR_SECOND
 
NS_SECOND


	)

63 
timevÆ
 
	t_°ime_t
;

64 
	#°_tod
 
tv_£c


	)

65 
	#°_húes
 
tv_u£c


	)

66 
	#HR_SECOND
 
US_SECOND


	)

69 #ifde‡
AÕha


70 
	#TOD_MAX
 
INT_MAX


	)

72 
	#TOD_MAX
 
LONG_MAX


	)

74 
	#HR_MAX
 (
HR_SECOND
-1)

	)

89 
	g°ime_t
::
	$°ime_t
(
time_t
 
tod
, 
húes
)

91 
_time
.
°_tod
 = 
tod
;

92 
_time
.
°_húes
 = 
húes
;

94 
	`n‹mÆize
();

95 
	}
}

98 
	g°ime_t
::
	$°ime_t
(
£cs
)

100 
_time
.
°_tod
 = 
£cs
;

101 
_time
.
°_húes
 = 0;

104 
	}
}

106 
	g°ime_t
::
	$°ime_t
(
£cs
)

108 
_time
.
°_tod
 = 
£cs
;

109 
_time
.
°_húes
 = 0;

112 
	}
}

115 
	g°ime_t
::
	$°ime_t
(
£cs
)

117 
_time
.
°_tod
 = (Ë
£cs
;

118 
_time
.
°_húes
 = (Ë((
£cs
 - _time.
°_tod
Ë* 
HR_SECOND
);

121 
	}
}

124 #ifde‡
USE_POSIX_TIME


125 
	g°ime_t
::
	$°ime_t
(c⁄° 
time•ec
 &
tv
)

127 
_time
.
°_tod
 = 
tv
.
tv_£c
;

128 
_time
.
°_húes
 = 
tv
.
tv_n£c
 * (
HR_SECOND
 / 
NS_SECOND
);

130 
	`n‹mÆize
();

131 
	}
}

134 
	g°ime_t
::
	$°ime_t
(c⁄° 
timevÆ
 &
tv
)

136 
_time
.
°_tod
 = 
tv
.
tv_£c
;

137 
_time
.
°_húes
 = 
tv
.
tv_u£c
 * (
HR_SECOND
 / 
US_SECOND
);

139 
	`n‹mÆize
();

140 
	}
}

143 
boﬁ
 
	g°ime_t
::
›î©‹
==(c⁄° 
°ime_t
 &
r
) const

145  
_time
.
°_tod
 =
r
._time.st_tod &&

146 
_time
.
°_húes
 =
r
._time.st_hires;

150 
boﬁ
 
	g°ime_t
::
›î©‹
<(c⁄° 
°ime_t
 &
r
) const

152 i‡(
_time
.
°_tod
 =
r
._time.st_tod)

153  
_time
.
°_húes
 < 
r
._time.st_hires;

154  
	g_time
.
	g°_tod
 < 
	gr
._time.st_tod;

158 
boﬁ
 
	g°ime_t
::
›î©‹
<=(c⁄° 
°ime_t
 &
r
) const

160  *
this
 =
r
 || *this <Ñ;

164 
ölöe
 
	$sign
(c⁄° 
i
)

166  
i
 > 0 ? 1 : i < 0 ? -1 : 0;

168 
	}
}

175 
	g°ime_t
::
	$signs
()

177 i‡(
_time
.
°_tod
 && _time.
°_húes


178 && 
	`sign
(
_time
.
°_tod
Ë!sign(_time.
°_húes
)) {

180 i‡(
	`sign
(
_time
.
°_tod
) == 1) {

181 
_time
.
°_tod
--;

182 
_time
.
°_húes
 +
HR_SECOND
;

185 
_time
.
°_tod
++;

186 
_time
.
°_húes
 -
HR_SECOND
;

189 
	}
}

192 
	g°ime_t
::
	$_n‹mÆize
()

194 i‡(
	`abs
(
_time
.
°_húes
Ë>
HR_SECOND
) {

195 
_time
.
°_tod
 +
	`sign
(_time.
°_húes
);

196 
_time
.
°_húes
 -
	`sign
(_time.°_húesË* 
HR_SECOND
;

198 
	`signs
();

199 
	}
}

203 
	g°ime_t
::
	$n‹mÆize
()

205 
Á˘‹
;

207 
Á˘‹
 = 
_time
.
°_húes
 / 
HR_SECOND
;

208 i‡(
Á˘‹
) {

209 
_time
.
°_tod
 +
Á˘‹
;

210 
_time
.
°_húes
 -
HR_SECOND
 * 
Á˘‹
;

213 
	`signs
();

214 
	}
}

217 
°ime_t
 
	g°ime_t
::
›î©‹
-() const

219 
°ime_t
 
ªsu…
;

221 
	gªsu…
.
	g_time
.
	g°_tod
 = -
_time
.
°_tod
;

222 
	gªsu…
.
	g_time
.
	g°_húes
 = -
_time
.
°_húes
;

224  
	gªsu…
;

228 
°ime_t
 
	g°ime_t
::
›î©‹
+(c⁄° stime_à&
r
) const

230 
°ime_t
 
ªsu…
;

232 
	gªsu…
.
	g_time
.
	g°_tod
 = 
_time
.
°_tod
 + 
r
._time.st_tod;

233 
	gªsu…
.
	g_time
.
	g°_húes
 = 
_time
.
°_húes
 + 
r
._time.st_hires;

235 
	gªsu…
.
_n‹mÆize
();

237  
	gªsu…
;

241 
°ime_t
 
	g°ime_t
::
›î©‹
-(c⁄° stime_à&
r
) const

243  *
this
 + -
r
;

247 
°ime_t
 
	g°ime_t
::
›î©‹
*(c⁄° 
Á˘‹
) const

249 
°ime_t
 
ªsu…
;

251 
	gªsu…
.
	g_time
.
	g°_tod
 = 
_time
.
°_tod
 * 
Á˘‹
;

252 
	gªsu…
.
	g_time
.
	g°_húes
 = 
_time
.
°_húes
 * 
Á˘‹
;

253 
	gªsu…
.
n‹mÆize
();

255  
	gªsu…
;

268 
°ime_t
 
	g°ime_t
::
›î©‹
/(c⁄° 
Á˘‹
) const

270  *
this
 / ()
Á˘‹
;

274 
°ime_t
 
	g°ime_t
::
›î©‹
*(c⁄° 
Á˘‹
) const

276 
d
 = *
this
;

277 
	gd
 *
Á˘‹
;

278 
°ime_t
 
ªsu…
(
d
);

279 
	gªsu…
.
n‹mÆize
();

281  
	gªsu…
;

285 
°ime_t
 
	g°ime_t
::
›î©‹
/(c⁄° 
Á˘‹
) const

287  *
this
 * (1.0 / 
Á˘‹
);

292 
	g°ime_t
 &°ime_t::
›î©‹
+=(c⁄° 
°ime_t
 &
r
)

294 
_time
.
°_tod
 +
r
._time.st_tod;

295 
	g_time
.
	g°_húes
 +
r
.
_time
.
°_húes
;

297 
_n‹mÆize
();

299  *
	gthis
;

303 
	g°ime_t
 &°ime_t::
›î©‹
-=(c⁄° 
°ime_t
 &
r
)

305 
_time
.
°_tod
 -
r
._time.st_tod;

306 
	g_time
.
	g°_húes
 -
r
.
_time
.
°_húes
;

308 
_n‹mÆize
();

310  *
	gthis
;

314 
	g°ime_t
::
›î©‹
 () const

316  
_time
.
°_tod
 + _time.
°_húes
 / (Ë
HR_SECOND
;

317 
	}
}

320 
	g°ime_t
::
›î©‹
 () const

322 
ªs
 = (Ë*
this
;

323  ()
ªs
;

325 
	}
}

332 #ifde‡
USE_POSIX_TIME


333 
	g°ime_t
::
›î©‹
 
	$time•ec
() const

335 
time•ec
 
tv
;

336 
tv
.
tv_£c
 = 
_time
.
°_tod
;

337 
tv
.
tv_n£c
 = 
_time
.
°_húes
;

338  
tv
;

339 
	}
}

343 
	g°ime_t
::
›î©‹
 
	$timevÆ
() const

345 
timevÆ
 
tv
;

346 
tv
.
tv_£c
 = 
_time
.
°_tod
;

349 
tv
.
tv_u£c
 = 
_time
.
°_húes
 / (
HR_SECOND
 / 
US_SECOND
);

350  
tv
;

351 
	}
}

354 
	g°ime_t
::
	$gëtime
()

356 
kr
;

357 #ifde‡
USE_POSIX_TIME


358 
kr
 = 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
_time
);

360 
kr
 = 
	`gëtimeofday
(&
_time
, 0);

362 i‡(
kr
 == -1)

363 
	`W_FATAL
(
fcOS
);

364 
	}
}

367 
	go°ªam
 &
	g°ime_t
::
	$¥öt
(
o°ªam
 &
s
) const

369 
	`˘ime
(
s
);

371 i‡(
_time
.
°_húes
) {

372 
°ime_t
 
	`tod
(
_time
.
°_tod
, 0);

374 
s
 << "ánd " << 
	`söãrvÆ_t
(*
this
 - 
tod
);

377  
s
;

378 
	}
}

381 
	go°ªam
 &
	g°ime_t
::
	$˘ime
(
o°ªam
 &
s
) const

384 
time_t
 
kludge
 = 
_time
.
°_tod
;

385 c⁄° 
	`buÊí
(26);

386 
buf
[
buÊí
];

389 #ifde‡
_POSIX_PTHREAD_SEMANTICS


390 *
whí
 = 
	`˘ime_r
(&
kludge
, 
buf
);

391 #ñi‡
	`deföed
(
SOLARIS2
)

392 *
whí
 = 
	`˘ime_r
(&
kludge
, 
buf
, 
buÊí
);

394 *
whí
 = 
	`˘ime_r
(&
kludge
, 
buf
);

398 *
∆
 = 
	`°rchr
(
whí
, '\n');

399 i‡(
∆
)

400 *
∆
 = '\0';

402  
s
 << 
whí
;

403 
	}
}

406 
	$Á˘‹_¥öt
(
o°ªam
 &
s
, 
wh©
)

409 c⁄° *
œbñ
;

410 
Á˘‹
;

411 } 
Á˘‹s
[] = {

415 }, *
f
 = 
Á˘‹s
;

416 
möe
;

417 
boﬁ
 
¥öãd
 = 
Ál£
;

418 
boﬁ
 
√g©ive
 = 
wh©
 < 0;

420 i‡(
√g©ive
) {

421 
s
 << '-';

422 
wh©
 = -what;

425 
f
 = 
Á˘‹s
; f->
œbñ
; f++) {

426 
möe
 = 
wh©
 / 
f
->
Á˘‹
;

427 
wh©
 = wh© % 
f
->
Á˘‹
;

428 i‡(
möe
 || 
¥öãd
) {

429 
	`W_FORM
(
s
)(
f
->
œbñ
, 
möe
);

430 
¥öãd
 = 
åue
;

435 
	`W_FORM
(
s
)(
¥öãd
 ? "%02d" : "%d", 
wh©
);

436 
	}
}

439 
	go°ªam
 &
	gsöãrvÆ_t
::
	$¥öt
(
o°ªam
 &
s
) const

441 
	`Á˘‹_¥öt
(
s
, 
_time
.
°_tod
);

443 i‡(
_time
.
°_húes
) {

444 #ifde‡
USE_POSIX_TIME


445 
	`W_FORM
(
s
)(".%09ld", 
_time
.
°_húes
);

447 
	`W_FORM
(
s
)(".%06ld", 
_time
.
°_húes
);

451  
s
;

452 
	}
}

455 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	g°ime_t
 &
	gt
)

457  
	gt
.
¥öt
(
s
);

461 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	gsöãrvÆ_t
 &
	gt
)

463  
	gt
.
¥öt
(
s
);

469 
ölöe
 
	$‰om_löór
(
£c
, 
x£c
,

470 
löór_£cs
, 
_°ime_t
 &
_time
)

472 
_time
.
°_tod
 = 
£c
 + 
x£c
 / 
löór_£cs
;

473 
x£c
 = x£¯% 
löór_£cs
;

474 i‡(
löór_£cs
 > 
HR_SECOND
)

475 
_time
.
°_húes
 = 
x£c
 / (
löór_£cs
 / 
HR_SECOND
);

477 
_time
.
°_húes
 = 
x£c
 * (
HR_SECOND
 / 
löór_£cs
);

478 
	}
}

481 
°ime_t
 
	g°ime_t
::
	$£c
(
£c
)

483 
°ime_t
 
r
;

485 
r
.
_time
.
°_tod
 = 
£c
;

486 
r
.
_time
.
°_húes
 = 0;

488  
r
;

489 
	}
}

492 
°ime_t
 
	g°ime_t
::
	$m£c
(
ms
, 
£c
)

494 
°ime_t
 
r
;

496 
	`‰om_löór
(
£c
, 
ms
, 
MS_SECOND
, 
r
.
_time
);

499  
r
;

500 
	}
}

503 
°ime_t
 
	g°ime_t
::
	$u£c
(
us
, 
£c
)

505 
°ime_t
 
r
;

507 
	`‰om_löór
(
£c
, 
us
, 
US_SECOND
, 
r
.
_time
);

510  
r
;

511 
	}
}

514 
°ime_t
 
	g°ime_t
::
	$n£c
(
ns
, 
£c
)

516 
°ime_t
 
r
;

518 
	`‰om_löór
(
£c
, 
ns
, 
NS_SECOND
, 
r
.
_time
);

521  
r
;

522 
	}
}

525 
°ime_t
 
	g°ime_t
::
	$now
()

527 
°ime_t
 
now
;

528 
now
.
	`gëtime
();

530  
now
;

531 
	}
}

538 
	#HR_ROUNDUP
 (
HR_SECOND
 / 2)

	)

540 
ölöe
 
	$to_löór
(c⁄° 
_°ime_t
 &
_time
, c⁄° 
löór_£cs
)

542 
ªsu…
;

543 
Á˘‹
;

545 
ªsu…
 = 
_time
.
°_tod
 * 
löór_£cs
;

547 i‡(
löór_£cs
 > 
HR_SECOND
) {

548 
Á˘‹
 = 
löór_£cs
 / 
HR_SECOND
;

549 
ªsu…
 +
_time
.
°_húes
 * 
Á˘‹
;

552 
Á˘‹
 = 
HR_SECOND
 / 
löór_£cs
;

553 
ªsu…
 +
_time
.
°_húes
 / 
Á˘‹
;

556  
ªsu…
;

557 
	}
}

560 
	g°ime_t
::
	$£cs
() const

562 
ªsu…
;

564 
ªsu…
 = 
_time
.
°_tod
;

565 i‡(
_time
.
°_húes
 >
HR_ROUNDUP
)

566 
ªsu…
++;

568  
ªsu…
;

569 
	}
}

571 
	g°ime_t
::
	$m£cs
() const

573  
	`to_löór
(
_time
, 
MS_SECOND
);

574 
	}
}

576 
	g°ime_t
::
	$u£cs
() const

578  
	`to_löór
(
_time
, 
US_SECOND
);

579 
	}
}

581 
	g°ime_t
::
	$n£cs
() const

583  
	`to_löór
(
_time
, 
NS_SECOND
);

584 
	}
}

	@src/fc/stime.h

30 #i‚de‡
STIME_H


31 
	#STIME_H


	)

33 
	~"w_deföes.h
"

44 
	~<sys/time.h
>

68 #i‡ 
HAVE_CLOCK_GETTIME


69 #i‚de‡
USE_POSIX_TIME


70 
	#USE_POSIX_TIME
 1

	)

72 #ñi‡ !
HAVE_GETTIMEOFDAY


73 #îr‹ 
No
 
suôabÀ
 
gë
-
time
 
sy°em
 
ˇŒ
. 
C™nŸ
 
buûd
.

76 ˛as†
	c°ime_t
 {

77 
¥Ÿe˘ed
:

78 #ifde‡
USE_POSIX_TIME


79 
time•ec
 
_time
;

81 
timevÆ
 
_time
;

85 
gëtime
();

87 
signs
();

88 
_n‹mÆize
();

89 
n‹mÆize
();

92 
°ime_t
(
time_t
, );

94 
public
:

95 
	$°ime_t
() {

96 
_time
.
tv_£c
 = 0;

97 #ifde‡
USE_POSIX_TIME


98 
_time
.
tv_n£c
 = 0;

100 
_time
.
tv_u£c
 = 0;

104 #ifde‡
USE_POSIX_TIME


105 
	`°ime_t
(c⁄° 
time•ec
 &
ts
);

107 
	`°ime_t
(c⁄° 
timevÆ
 &
tv
);

110 
	`°ime_t
();

111 
	`°ime_t
();

114 
	`°ime_t
();

117 
boﬁ
 
›î©‹
==(c⁄° 
°ime_t
 &) const;

118 
boﬁ
 
›î©‹
<(c⁄° 
°ime_t
 &) const;

119 
boﬁ
 
›î©‹
<=(c⁄° 
°ime_t
 &) const;

121 
boﬁ
 
›î©‹
!=(c⁄° 
°ime_t
 &
r
Ëc⁄° {  !(*
this
 =r); 
	}
}

122 
boﬁ
 
›î©‹
>(c⁄° 
°ime_t
 &
r
Ëc⁄° {  !(*
this
 <=Ñ); }

123 
boﬁ
 
›î©‹
>=(c⁄° 
°ime_t
 &
r
Ëc⁄° {  !(*
this
 <Ñ); }

126 
°ime_t
 
›î©‹
-() const;

129 
°ime_t
 
›î©‹
+(c⁄° stime_à&
r
) const;

130 
°ime_t
 
›î©‹
-(c⁄° stime_à&
r
) const;

134 
°ime_t
 
›î©‹
*(c⁄° 
Á˘‹
) const;

135 
°ime_t
 
›î©‹
/(c⁄° 
Á˘‹
) const;

136 
°ime_t
 
›î©‹
*(c⁄° 
Á˘‹
) const;

137 
°ime_t
 
›î©‹
/(c⁄° 
Á˘‹
) const;

140 
°ime_t
 &
›î©‹
+=(c⁄° stime_à&
r
);

141 
°ime_t
 &
›î©‹
-=(c⁄° stime_à&
r
);

147 
›î©‹
 () const;

148 
›î©‹
 () const;

149 #ifde‡
USE_POSIX_TIME


150 
›î©‹
 
	$time•ec
() const;

154 
›î©‹
 
	$timevÆ
() const;

158 
	$£cs
() const;

159 
	$m£cs
() const;

160 
	$u£cs
() const;

161 
	$n£cs
() const;

164 
°ime_t
 
	`£c
(
£c⁄ds
);

165 
°ime_t
 
	`u£c
(
mi¸o_£c⁄ds
, 
£c⁄ds
 = 0);

166 
°ime_t
 
	`m£c
(
mûli_£c⁄ds
, 
£c⁄ds
 = 0);

167 
°ime_t
 
	`n£c
(
«no_£c⁄ds
, 
£c⁄ds
 = 0);

170 
°ime_t
 
	`now
();

172 
o°ªam
 &
	$¥öt
(
o°ªam
 &
s
) const;

173 
o°ªam
 &
	$˘ime
(
o°ªam
 &
s
) const;

174 
	}
};

180 ˛as†
	csöãrvÆ_t
 : 
public
 
°ime_t
 {

181 
public
:

185 
	$söãrvÆ_t
(Ë: 
	$°ime_t
() { }

186 #ifde‡
USE_POSIX_TIME


187 
	$söãrvÆ_t
(c⁄° 
time•ec
 &
ts
Ë: 
	$°ime_t
(
ts
Ë{ 
	}
}

189 
	$söãrvÆ_t
(c⁄° 
timevÆ
 &
tv
Ë: 
	$°ime_t
(
tv
Ë{ 
	}
}

191 
	$söãrvÆ_t
(c⁄° 
°ime_t
 &
time
Ë: 
	$°ime_t
(
time
Ë{ 
	}
}

192 
	$söãrvÆ_t
(
time
Ë: 
	$°ime_t
(
time
Ë{ 
	}
}

193 
	$söãrvÆ_t
(
time
Ë: 
	$°ime_t
(
time
Ë{ 
	}
}

194 
	$söãrvÆ_t
(
time
Ë: 
	$°ime_t
(
time
Ë{ 
	}
}

196 
o°ªam
 &
	$¥öt
(
o°ªam
 &
s
) const;

197 
	}
};

200 
o°ªam
 &
›î©‹
<<(o°ªam &
s
, c⁄° 
°ime_t
 &
t
);

201 
o°ªam
 &
›î©‹
<<(o°ªam &
s
, c⁄° 
söãrvÆ_t
 &
t
);

	@src/fc/tests/basic_sizes.cpp

30 
	~<w_deföes.h
>

31 
	~<w_ba£.h
>

34 
	$maö
()

36 
°d
::
cout
 << "sizeof(uint4_t) "

37 << (
w_ba£_t
::
uöt4_t
Ë<< 
°d
::
ídl
;

40 
	}
}

	@src/fc/tests/bitvector.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

36 
	~<w.h
>

37 
	~<w_bôve˘‹.h
>

40 
	$maö
()

42 
w_bôve˘‹_t
<256> 
v
, 
w
, 
tmp
;

44 
	`w_as£π1
(
v
.
	`is_em±y
());

45 
	`w_as£π1
(
w
.
	`is_em±y
());

48 
v
.
	`£t_bô
(0);

49 
	`w_as£π1
(
v
.
	`is_£t
(0));

50 
	`w_as£π1
(
v
.
	`is_em±y
()==
Ál£
);

51 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==1);

53 
v
.
	`£t_bô
(1);

54 
	`w_as£π1
(
v
.
	`is_£t
(1));

55 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==2);

57 
v
.
	`£t_bô
(35);

58 
	`w_as£π1
(
v
.
	`is_£t
(35));

59 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==3);

60 
v
.
	`˛ór_bô
(35);

61 
	`w_as£π1
(
v
.
	`is_£t
(35)==
Ál£
);

62 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==2);

63 
v
.
	`£t_bô
(35);

64 
	`w_as£π1
(
v
.
	`is_£t
(35));

65 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==3);

68 
v
.
	`£t_bô
(72);

69 
	`w_as£π1
(
v
.
	`is_£t
(72));

70 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==4);

73 
v
.
	`£t_bô
(172);

74 
	`w_as£π1
(
v
.
	`is_£t
(172));

75 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==5);

78 
v
.
	`£t_bô
(200);

79 
	`w_as£π1
(
v
.
	`is_£t
(200));

80 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==6);

82 
v
.
	`£t_bô
(255);

83 
	`w_as£π1
(
v
.
	`is_£t
(255));

84 
	`w_as£π1
(
v
.
	`num_bôs_£t
()==7);

86 
	`w_as£π1
(
v
.
	`is_em±y
()==
Ál£
);

88 
i
;

89 
i
 = 0; i < 
v
.
	`num_bôs
(); i++) {

90 
w
.
	`£t_bô
(
i
);

91 
	`w_as£π1
(
w
.
	`num_bôs_£t
()==
i
+1);

93 
	`w_as£π1
(
w
.
	`is_em±y
()==
Ál£
);

94 
	`w_as£π1
(
w
.
	`is_fuŒ
()==
åue
);

95 #i‡
	`deföed
(
ARCH_LP64
)

96 
	`w_as£π1
(
w
.
	`num_w‹ds
()==4);

98 
	`w_as£π1
(
w
.
	`num_w‹ds
()==8);

101 
w
.
	`c›y
(
v
);

102 
	`w_as£π1
(
w
.
	`num_bôs_£t
()==7);

103 
	`w_as£π1
(
w
.
	`is_em±y
()==
Ál£
);

104 
	`w_as£π1
(
w
.
	`is_fuŒ
()==
Ál£
);

105 
i
 = 0; i < 
v
.
	`num_w‹ds
(); i++) {

106 
	`w_as£π1
(
w
.
	`gë_bô
(
i
)==
v
.get_bit(i));

109 
w
.
	`˛ór
();

110 
	`w_as£π1
(
w
.
	`is_em±y
()==
åue
);

111 
	`w_as£π1
(
w
.
	`is_fuŒ
()==
Ál£
);

112 
i
 = 0; i < 
v
.
	`num_w‹ds
(); i++) {

113 
	`w_as£π1
(
w
.
	`gë_bô
(
i
)==0);

116 
w
.
	`£t_bô
(0);

117 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

118 #i‡
	`deföed
(
ARCH_LP64
)

119 
	`w_as£π1
(
n
==4);

121 
	`w_as£π1
(
n
==8);

124 
w
.
	`£t_bô
(5);

125 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

127 #i‡
	`deföed
(
ARCH_LP64
)

128 
	`w_as£π1
(
n
==3);

130 
	`w_as£π1
(
n
==7);

132 
w
.
	`˛ór_bô
(5);

133 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

135 #i‡
	`deföed
(
ARCH_LP64
)

136 
	`w_as£π1
(
n
==4);

138 
	`w_as£π1
(
n
==8);

141 
w
.
	`£t_bô
(200);

142 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

143 #i‡
	`deföed
(
ARCH_LP64
)

144 
	`w_as£π1
(
n
==4);

146 
	`w_as£π1
(
n
==8);

149 
w
.
	`£t_bô
(255);

150 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

151 #i‡
	`deföed
(
ARCH_LP64
)

152 
	`w_as£π1
(
n
==4);

154 
	`w_as£π1
(
n
==8);

157 
w
.
	`£t_bô
(72);

158 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

159 #i‡
	`deföed
(
ARCH_LP64
)

160 
	`w_as£π1
(
n
==4);

162 
	`w_as£π1
(
n
==8);

166 
	`w_as£π1
(
w
.
	`ovîœp
(
tmp
,
v
Ë=
åue
);

168 
	`w_as£π1
(
v
.
	`ovîœp
(
tmp
,
w
Ë=
Ál£
);

170 
w
.
	`£t_bô
(172);

171 
	`w_as£π1
(
w
.
	`ovîœp
(
tmp
,
v
Ë=
åue
);

172 
	`w_as£π1
(
v
.
	`ovîœp
(
tmp
,
w
Ë=
Ál£
);

173 
w
.
	`£t_bô
(35);

174 
	`w_as£π1
(
w
.
	`ovîœp
(
tmp
,
v
Ë=
åue
);

175 
	`w_as£π1
(
v
.
	`ovîœp
(
tmp
,
w
Ë=
Ál£
);

177 
w
.
	`£t_bô
(1);

178 
n
=
w
.
	`w‹ds_ovîœp
(
tmp
, 
v
);

179 
	`w_as£π1
(
w
.
	`ovîœp
(
tmp
,
v
Ë=
åue
);

180 
	`w_as£π1
(
v
.
	`ovîœp
(
tmp
,
w
Ë=
åue
);

183 
	}
}

	@src/fc/tests/box.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

37 
	~<nbox.h
>

40 
	$maö
(
¨gc
, *
¨gv
[])

42 if(
¨gc
 < 3) {

43 
˚º
 << "Ußge: dim <box> <box> <box> ..." << 
ídl
;

44 
˚º
 << "whîê<box> i†<poöt>/<poöt>" <<
ídl
;

45 
˚º
 << "whîê<poöt> i†num,num,num" <<
ídl
;

46 
	`exô
(1);

48 
dim
 = 
	`©oi
(
¨gv
[1]);

50 
nbox_t
 
	`u
(
dim
);

56 * 
vÆues
 = 
√w
 [
dim
 * 2];

58 
dim
) {

60 
cout
 << "nŸhög" << 
ídl
;

63 
cout
 << "öãrvÆ†⁄áÜöe"<<
ídl
;

66 
cout
 << "boxe†öáÖœ√"<<
ídl
;

69 
cout
 << "cube†öá sﬁid"<<
ídl
;

71 
cout
 << "movög cube†öá <•a˚,time> c⁄töuum"<<
ídl
;

76 
i
=0; i < 
¨gc
-2; i++) {

77 *
poöt
 = 
¨gv
[
i
+2];

81 
±
 = 0;Öt < 2;Öt++) {

82 
d
 = 0; d < 
dim
; d++) {

85 *
p

poöt
;

86 *
p
 && *p != ',' && *p != '/')Ö++;

87 *
p
 = '\0';

88 
vÆues
[(
±
*
dim
)+
d
] = 
	`©oi
(
poöt
);

89 
poöt
 = 
p
+1;

93 
nbox_t
 
	`box
(
dim
, 
vÆues
);

94 
cout
 << " box" << 
box
 <<
ídl
;

96 
box
.
	`ˇn⁄ize
();

97 
cout
 << " c™⁄iˇ»box" << 
box
 <<
ídl
;

99 
u
 +
box
;

100 
cout
 << " univî£" << 
u
 <<
ídl
;

103 
dñëe
[] 
vÆues
;

105 
	}
}

	@src/fc/tests/container.cpp

30 
	~"w_deföes.h
"

34 
	~"w.h
"

35 
	~"©omic_c⁄èöî.h
"

36 
	~"w_gë›t.h
"

37 
	~<io°ªam
>

39 
åõs
(0);

41 
	tu_ty≥
;

43 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

45 
îr‹s
 = 0;

46 
c
;

48 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:S:")Ë!
EOF
) {

49 
c
) {

51 
åõs
 = 
	`©oi
(
›èrg
);

54 
îr‹s
++;

58 i‡(
îr‹s
) {

59 
˚º


61 << 
¨gv
[0]

63 << 
ídl
;

66  
îr‹s
 ? -1 : 
›töd
;

67 
	}
}

69 
	sTHING
 {

71 
THING
 *
	m_me
;

73 
	mdummy
[43];

75 
	m_i
;

77 
THING
 * 
	m_√xt
;

79 
	mdummy2
[10];

81 
	mdummy3
;

82 
	mdummy4
;

83 
	mpublic
:

84 
THING
(
i
Ë: 
_i
(iË{ 
_me
 = 
this
; }

86 
check
(
i
) const {

87 if(
	mi
 !
_i
) {

88 
cout
 << "öt:Éx≥˘ed " << ::
dec
 << 
i
 << " found " << 
_i
 << 
ídl
;

91 if(
	m_me
 !
this
) {

92 uni⁄ { c⁄° 
THING
 *
p
; 
u_ty≥
 
	mx
; }
	mu
; u.
	mp
 = 
this
;

93 uni⁄ { c⁄° 
THING
 *
	mp
; 
u_ty≥
 
	mx
; }
	mm
; m.p
_me
;

95 
	mcout
 << "±r:Éx≥˘ed " << ::
hex
 << 
u
.
x


96 << " found " << 
m
.
x


97 << ::
dec


98 << 
ídl
;

104 
check
() const {

105 if(
	m_me
 !
this
) {

106 uni⁄ { c⁄° 
THING
 *
p
; 
u_ty≥
 
	mx
; }
	mu
; u.
	mp
 = 
this
;

107 uni⁄ { c⁄° 
THING
 *
	mp
; 
u_ty≥
 
	mx
; }
	mm
; m.p
_me
;

109 
	mcout
 << "±r:Éx≥˘ed " << ::
hex
 << 
u
.
x


110 << " found " << 
m
.
x


111 << ::
dec


112 << 
ídl
;

118 
i
(Ëc⁄° {  
	m_i
; }

120 
©omic_c⁄èöî
 
C
(
w_off£tof
(
THING
, 
_√xt
));

122 * 
	gpushed
, *
	gp›≥d
;

124 
	$push1
(
i
)

126 
THING
 *
v
;

127 
v
 = 
√w
 
	`THING
(
i
);

128 
	`w_as£π1
(
v
 !
NULL
);

129 
	`w_as£π1
(
v
->
	`check
(
i
) == 0);

131 *
v
;

132 
u_ty≥
 
u
;

133 } 
pun
 = {
v
};

135 
cout
 << "Öushög " << ::
hex
 << 
pun
.
u
 << ::
dec
 << 
ídl
;

136 
C
.
	`push
(
v
);

137 
pushed
[
i
]++;

139 
	}
}

141 
	$p›1
(
i
)

143 
THING
 *
v
;

144 
v
 = (
THING
 *)
C
.
	`p›
();

146 *
v
;

147 
u_ty≥
 
u
;

148 } 
pun
 = {
v
};

150 
cout
 << "Ö›pög " << ::
hex
 << 
pun
.
u
 << ::
dec
 << 
ídl
;

151 
	`w_as£π1
(
v
);

152 if(
v
->
	`check
(
i
)) {

153 
dñëe
 
v
;

156 
p›≥d
[
v
->
	`i
()]--;

158 
dñëe
 
v
;

160 
	}
}

161 
	$p›1
()

163 
THING
 *
v
;

166 
v
 = (
THING
 *)
C
.
	`p›
();

168 *
v
;

169 
u_ty≥
 
u
;

170 } 
pun
 = {
v
};

171 
cout
 << "Ö›pög " << ::
hex
 << 
pun
.
u
 << ::
dec
 << 
ídl
;

173 if(!
v
)  -1;

174 if(
v
->
	`check
()) {

175 
dñëe
 
v
;

178 
p›≥d
[
v
->
	`i
()]--;

180 
dñëe
 
v
;

182 
	}
}

185 
	$ã°1
(
åõs
)

187 
	`e
(0);

188 
i
=0; i < 
åõs
; i++)

190 
e
 +
	`push1
(
i
);

191 
e
 +
	`p›1
(
i
);

193 
cout
 << "ã° 1É=" << 
e
 << 
ídl
;

194  
e
;

195 
	}
}

198 
	$ã°2
(
åõs
)

200 
	`e
(0);

202 
i
=0; i < 
åõs
; i++)

204 
e
 +
	`push1
(
i
*2);

205 
e
 +
	`push1
(
i
*3);

206 
e
 +
	`p›1
();

208 
cout
 << "ã° 2É" << 
e
 << 
ídl
;

209  
e
;

210 
	}
}

213 
	$ã°3
()

215 
	`e
(0);

216 
	`f
(0);

221  (
f
 = 
	`p›1
()) >=0 )

223 
e
 +
f
;

225 
cout
 << "ã° 3É=" << 
e
 << 
ídl
;

226  
e
;

227 
	}
}

230 
	$maö
(
¨gc
, *
¨gv
[])

232 
e
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

233 if(
e
<0Ë
	`exô
(e);

235 
cout
 << "OFFSET IS " << 
C
.
	`off£t
(Ë<< 
ídl
;

236 
cout


238 << 
	`w_off£tof
(
THING
, 
_me
Ë<< 
ídl
;

239 
cout


241 << 
	`w_off£tof
(
THING
, 
dummy
Ë<< 
ídl
;

242 
cout


244 << 
	`w_off£tof
(
THING
, 
_i
Ë<< 
ídl
;

245 
cout


247 << 
	`w_off£tof
(
THING
, 
_√xt
Ë<< 
ídl
;

248 
cout


250 << 
	`w_off£tof
(
THING
, 
dummy2
Ë<< 
ídl
;

251 
cout


253 << 
	`w_off£tof
(
THING
, 
dummy3
Ë<< 
ídl
;

254 
cout


256 << 
	`w_off£tof
(
THING
, 
dummy4
Ë<< 
ídl
;

257 
cout
 << "SIZEOF THING IS " << (
THING
Ë<< 
ídl
;

259 
cout
 << "åõ†" << 
åõs
 << 
ídl
;

261 
pushed
 = 
√w
 [
åõs
*3];

262 
p›≥d
 = 
√w
 [
åõs
*3];

263 
i
=0; i < 
åõs
*3; i++Ë
pushed
[i] = 
p›≥d
[i] = 0;

264 
e
 = 
	`ã°1
(
åõs
);

265 
e
 +
	`ã°2
(
åõs
);

266 
e
 +
	`ã°3
(
åõs
);

268 
	`w_as£π1
(
e
==0) ;

269 
dñëe
[] 
pushed
;

270 
dñëe
[] 
p›≥d
;

271 
	}
}

	@src/fc/tests/cuckoo.cpp

30 
	~"w_deföes.h
"

34 
	~"w.h
"

36 
	s°hªad_t


38 
	mw_ba£_t
::
uöt8_t
 
ønd
();

40 
	tuöt2_t
;

42 
	~"w_hashög.h
"

43 
	~"w_föd¥ime.h
"

44 
	~"w_gë›t.h
"

45 
	~"ønd48.h
"

46 
	~<io°ªam
>

49 
__thªad
 
ønd48
 
	gés_∫g
 = 
RAND48_INITIALIZER
;

51 
	gw_ba£_t
::
uöt8_t
 
°hªad_t
::
	$ønd
(Ë{  
és_∫g
.
	`ønd
(); 
	}
}

53 
åõs
(50);

54 íum {
	mH0
, 
	mH1
, 
	mH2
, 
	mH3
, 
	mH4
, 
	mH5
, 
	mH6
, 
	mH7
, 
	mH8
, 
	mH9
, 
	mH10
, 
	mHASH_COUNT
};

55 
	gw_hashög
::
hash2
 
_hash2
[
HASH_COUNT
];

56 
hash_cou¡
(
H2
);

58 
boﬁ
 
debug
(
Ál£
);

59 
boﬁ
 
¥¡
(
Ál£
);

60 
	gw_ba£_t
::
öt8_t
 
_size
(1024);

61 
	gw_ba£_t
::
öt8_t
 
_¥ime_ª∂a˚mít
(1024);

62 
boﬁ
 
u£_¥ime
(
åue
);

64 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

66 
îr‹s
 = 0;

67 
c
;

69 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "dn:ps:h:x:P:")Ë!
EOF
) {

70 
c
) {

72 
hash_cou¡
 = 
w_ba£_t
::
	`öt8_t
(
	`©oi
(
›èrg
));

75 
_size
 = 
w_ba£_t
::
	`öt8_t
(
	`©oi
(
›èrg
));

78 
¥¡
=
åue
;

81 
debug
=
åue
;

84 
_¥ime_ª∂a˚mít
 = 
w_ba£_t
::
	`öt8_t
(
	`©oi
(
›èrg
));

85 
u£_¥ime
 = 
Ál£
;

88 
åõs
 = 
	`©oi
(
›èrg
);

91 
îr‹s
++;

95 i‡(
îr‹s
) {

96 
˚º


98 << 
¨gv
[0]

106 << 
ídl
;

109  
îr‹s
 ? -1 : 
›töd
;

110 
	}
}

112 
	sbÂid_t


114 
uöt2_t
 
	m_vﬁ
;

115 
uöt
 
	m_°‹e
;

116 
uöt
 
	m∑ge
;

118 
bÂid_t
 (
uöt2_t
 
v
, 
uöt
 
s
, uöà
p
) :

119 
_vﬁ
(
v
), 
_°‹e
(
s
), 
∑ge
(
p
) {}

121 
uöt2_t
 
vﬁ
(Ëc⁄° {  
	m_vﬁ
; }

122 
uöt
 
°‹e
(Ëc⁄° {  
	m_°‹e
; }

124 
	go°ªam
 &

125 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gbÂid_t
 &
	gp
)

127 
	go
 << 
	gp
.
	g_vﬁ
 << "." <<Ö.
	g_°‹e
 << "." <<Ö.
	g∑ge
 ;

128  
	go
;

132 
	$hash
(
h
, 
bÂid_t
 c⁄° &
pid
)

134 if(
debug
Ë
cout
 << "h=" << 
h
 << "Öid=" << 
pid
 << 
ídl
;

135 
	`w_as£π1
(
h
 >0 && h < 
HASH_COUNT
);

136 
x
 = 
pid
.
	`vﬁ
();

137 if(
debug
Ë
cout
 << " x" << 
x
 << 
ídl
;

138 
x
 ^
pid
.
∑ge
;

140 if(
debug
Ë
cout
 << " x" << 
x
 << 
ídl
;

141 
	`w_as£π1
(
h
 < 
HASH_COUNT
);

143 
ªtvÆ
 =

144 
_hash2
[
h
](
x
);

146 if(
debug
Ë
cout
 << "ÑëvÆ" << 
ªtvÆ
 << 
ídl
;

147 
ªtvÆ
 %(
_size
);

148 if(
debug
Ë
cout
 << "ÑëvÆ" << 
ªtvÆ
 << 
ídl
;

149  
ªtvÆ
;

150 
	}
}

152 
	#DUMP2
(
i
) \

153 if(
¥¡
Ë
cout
 << 
ídl
 \

155 << ::
hex
 \

156 << 
_hash2
[
i
].
a
.a \

157 << "=_hash2["<<::
dec
<<
i
<<::
hex
<<"].a.a" \

158 << 
ídl
 \

160 << 
_hash2
[
i
].
a
.
b
 \

161 << "=_hash2["<<::
dec
<<
i
<<::
hex
<<"].a.b" \

162 << 
ídl
 \

164 << 
_hash2
[
i
].
b
.
a
 \

165 << "=_hash2["<<::
dec
<<
i
<<::
hex
<<"].b.a" \

166 << 
ídl
 \

168 << 
_hash2
[
i
].
b
.b \

169 << "=_hash2["<<::
dec
<<
i
<<::
hex
<<"].b.b" \

170 << 
ídl


	)

172 
	$dump
()

174 if(
¥¡
)

176 
cout
 << "HASH 1ÅabÀs" << 
ídl
;

178 if(
¥¡
)

180 
cout
 << "HASH 2ÅabÀs" << 
ídl
;

182 
i
=0; i < 
HASH_COUNT
; i++) {

183 
	`DUMP2
(
i
);

185 
	}
}

189 
	$maö
(
¨gc
, *
¨gv
[])

191 
e
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

192 if(
e
<0Ë
	`exô
(e);

194 
cout
 << "åõs=" << 
åõs
 << 
ídl
;

196 
	`dump
();

198 
	#∑ge_sz
 8192uŒ

	)

200 
w_ba£_t
::
öt8_t
 
nbuÂages
=(
_size
 * 1024 - 1)/
∑ge_sz
 + 1;

202 
w_ba£_t
::
öt8_t
 
nbuckës
=(16*
nbuÂages
+8)/9;

204 
w_ba£_t
::
öt8_t
 
_¥ime
 = 
	`w_föd¥ime
(w_ba£_t::
	`öt8_t
(
nbuckës
));

205 if(!
u£_¥ime
) {

206 
_¥ime
 = 
_¥ime_ª∂a˚mít
;

209 
cout
 << "F‹Ñeque°ed b∞sizê"<< 
_size
 << ": "

210 << 
ídl


211 << "\ànbuÂages=" << 
nbuÂages
 << " o‡∑gêsizê" << 
∑ge_sz
 << ","

212 << 
ídl


213 << "\ànbuckë†(‰om bf_c‹e_m c⁄°ru˘‹)=" << 
nbuckës
 << ","

214 << 
ídl
;

215 if(
u£_¥ime
) {

216 
cout
 << "\t useÖrime " ;

218 
cout


219 << " _size=" << 
_¥ime


220 << 
ídl
;

222 
_size
 = 
_¥ime
;

224 *
buckës
 = 
√w
 [
_size
];

225 
i
=0; i < 
_size
; i++)

226 { 
buckës
[
i
]=0; }

228 
i
=0; i < 
åõs
; i++)

230 
	#START
 0

	)

231 
j

START
 + 
i
;

233 
bÂid_t
 
	`p
(1,5,
j
);

234 
k
=0; k < 
hash_cou¡
; k++)

236 
h
=::
	`hash
(
k
,
p
);

237 if(
¥¡
) {

238 
cout
 << ::
hex
 << "0x" << 
h
 << ::
dec


239 << " \à" << 
p


240 << " hash # " << 
k
 ;

241 if(
buckës
[(
h
)] > 0Ë
cout
 << " XXXXXXXXXXXXXXXXXXXX ";

242 
cout
 << 
ídl
;

245 
buckës
[(
h
)]++;

250 
w‹°
=0;

251 
âl
=0;

252 
i
=0; i < 
_size
; i++)

254 
cﬁlisi⁄s
=
buckës
[
i
]-1;

255 if(
cﬁlisi⁄s
 > 0) {

256 
âl
 +
cﬁlisi⁄s
;

257 if(
cﬁlisi⁄s
 > 
w‹°
) worst=collisions;

260 
cout
 << "SUMMARY: buckës: " << 
_size


261 << 
ídl


262 << "Årõs: " << 
åõs
 << "(x " << 
hash_cou¡


263 << " hashes=" << 
åõs
*
hash_cou¡
 << "); "

264 << 
ídl


265 << " cﬁlisi⁄s: " << 
âl


266 << " ( " << 100*(
âl
)/(
åõs
*
hash_cou¡
) << " %) "

267 << 
ídl


268 << " w‹° ca£ (max bkàÀn): " << 
w‹°


269 << 
ídl
;

271 
dñëe
[] 
buckës
;

273 
	}
}

	@src/fc/tests/darray.cpp

24 
	~<sh‹e-c⁄fig.h
>

25 
	~<w_ba£.h
>

26 
	~<dy«ºay.h
>

27 
	~<î∫o.h
>

28 
	~<sys/mm™.h
>

29 
	~<Æg‹ôhm
>

30 
	~<c°dlib
>

31 
	~<ˇs£π
>

32 
	~<c°rög
>

33 
	~<c°dio
>

36 
size_t
 c⁄° 
	gMM_PAGE_SIZE
 = 8192;

38 
size_t
 c⁄° 
	gMM_MAX_CAPACITY
 = 
MM_PAGE_SIZE
*1024*1024*1024;

40 
	~<uni°d.h
>

41 
	~<c°dio
>

43 
	gfoocou¡
 = 0;

44 
	sfoo
 {

45 
	mid
;

46 
foo
(Ë: 
id
(++
foocou¡
Ë{ 
°d
::
Ârötf
(
°dout
, "foo#%d\n", id); }

47 ~
foo
(Ë{ 
	m°d
::
Ârötf
(
°dout
, "~foo#%d\n", 
id
); }

50 
ãm∂©e
 
	gdynve˘‹
<
	gfoo
>;

52 
	$maö
() {

54 
dy«ºay
 
mm
;

55 
w_ba£_t
::
öt8_t
 
îr
;

59 
îr
 = 
mm
.
	`öô
(
	`size_t
(5l*1024*1024*1024));

62 
îr
 = 
mm
.
	`ªsize
(10000);

63 
îr
 = 
mm
.
	`ªsize
(100000);

64 
îr
 = 
mm
.
	`ªsize
(1000000);

65 
îr
 = 
mm
.
	`föi
();

69 
dy«ºay
 
mm
;

70 
îr
;

72 
îr
 = 
mm
.
	`öô
(
	`size_t
(5l*1024*1024*1024), size_t(1024*1024*1024));

76 
îr
;

77 
dynve˘‹
<
foo
> 
dv
;

78 
îr
 = 
dv
.
	`öô
(100000);

79 
°d
::
	`Ârötf
(
°dout
, "size:%llu capacity:%lluÜimit:%llu\n",

80 (Ë
dv
.
	`size
(), (Ëdv.
	`ˇ∑côy
(), (Ëdv.
	`limô
());

81 
îr
 = 
dv
.
	`ªsize
(4);

82 
°d
::
	`Ârötf
(
°dout
, "size:%llu capacity:%lluÜimit:%llu\n",

83 (Ë
dv
.
	`size
(), (Ëdv.
	`ˇ∑côy
(), (Ëdv.
	`limô
());

84 
îr
 = 
dv
.
	`ªsize
(10);

85 
°d
::
	`Ârötf
(
°dout
, "size:%llu capacity:%lluÜimit:%llu\n",

86 (Ë
dv
.
	`size
(), (Ëdv.
	`ˇ∑côy
(), (Ëdv.
	`limô
());

87 
foo
 
f
;

88 
îr
 = 
dv
.
	`push_back
(
f
);

89 
îr
 = 
dv
.
	`push_back
(
f
);

90 
îr
 = 
dv
.
	`push_back
(
f
);

91 
°d
::
	`Ârötf
(
°dout
, "size:%llu capacity:%lluÜimit:%llu\n",

92 (Ë
dv
.
	`size
(), (Ëdv.
	`ˇ∑côy
(), (Ëdv.
	`limô
());

93 
îr
 = 
dv
.
	`ªsize
(16);

94 
°d
::
	`Ârötf
(
°dout
, "size:%llu capacity:%lluÜimit:%llu\n",

95 (Ë
dv
.
	`size
(), (Ëdv.
	`ˇ∑côy
(), (Ëdv.
	`limô
());

96 
îr
 = 
dv
.
	`föi
();

100 
	}
}

	@src/fc/tests/errlogtest.cpp

30 
	~"w_deföes.h
"

34 
	~<îæog.h
>

35 
	~<w_debug.h
>

37 (*
	tã°func
)(
	tEºLog
 &);

39 
	$ã°1
(
EºLog
 &
e
) {

40 
e
.
	`£éogÀvñ
(
log_debug
);

41 
e
.
	`log
–
log_îr‹
, "test1Örintf.");

42 
e
.
˛og
 << 
__LINE__
<< " " << "ã°1 o≥øt‹ <<Énd»" << 
ídl
;

43 
e
.
˛og
 << 
__LINE__
<< " " << "ã°1 o≥øt‹ << flush -Çÿ√wlöê" << 
Êush
;

44 
e
.
˛og
 << 
__LINE__
<< " " << "ã°1 o≥øt‹ << flushl" << 
Êushl
;

45 
cout
 << 
__LINE__
<< " " << "couàã°1 o≥øt‹ << flushl" << 
Êushl
;

46 
˚º
 << 
__LINE__
<< " " << "˚ºÅe°1 o≥øt‹ << flush" << 
Êushl
;

47 
e
.
	`log
–
log_îr‹
, "test1Örintfáfter clog used.");

48 
	}
}

49 
	$ã°2
(
EºLog
 &
e
) {

50 
e
.
˛og
 << 
îr‹_¥io
 << 
__LINE__
<< " " << "Thi†i†ã° 2,Éº‹Örio." << 
Êushl
;

51 
	}
}

52 
	$ã°3
(
EºLog
 &
e
) {

53 
e
.
˛og
 << 
öfo_¥io
 << 
__LINE__
<< " " << "Thi†i†ã° 3, infÿ¥io." << 
Êushl
;

54 
	}
}

55 
	$föÆ
(
EºLog
 &
e
) {

56 
e
.
˛og
 << 
Áèl_¥io
 << 
__LINE__
<< " " << "This isÅest final, fatalÖrio."

57 << 
Êushl
 << "after fatal" ;

58 
	}
}

60 
	$mixed
(
EºLog
 &
e
) {

61 
e
.
˛og
 << 
îr‹_¥io
 << 
__LINE__
<< " " << "This isÅest mixed,ÉrrorÖrio." ;

62 
e
.
˛og
 << 
îr‹_¥io
 << 
__LINE__
<< " " << "Using output operator. " <<Érror_prio;

63 
e
.
	`log
(
log_îr‹
, "Using syslog style");

64 
e
.
˛og
 << 
îr‹_¥io
 << 
__LINE__
<< " " << "Using output operatorágain. " <<Érror_prio;

65 
e
.
	`log
(
log_îr‹
, "Using syslog styleágain");

66 
e
.
˛og
 << 
Êushl
;

67 
	}
}

69 
ã°func
 
	g¨øy
[] = {

70 
ã°1
, 
ã°2
, 
ã°3
, 
mixed
, 
föÆ
, 0

74 
	$Æ…e°s
(
EºLog
 *
e
, *
¨g
)

76 
i
 = (Ë(Ë
¨g
;

77 
ã°func
 
f
 = 
¨øy
[
i
-1];

78 
	`w_as£π9
(
f
);

79 
˚º
 << 
__LINE__
<< " " << "Æ…e°s:Åe° " << 
i
 << " o¿" << 
e
->
	`idít
() << "...";

80 (*
f
)(*
e
);

81 
˚º
 << 
__LINE__
<< " " << " DONE" << 
ídl
;

82 
	}
}

84 
EºLog
 *
	gtfûe
, *
	gt›í
, *
	gtsy¶og
, *
	gãº
, *
	gãthî
;

87 
	$maö
()

89 c⁄° *
∑th
 = "tfile";

106 
tfûe
 = 
√w
 
	`EºLog
("to-fûe", 
log_to_unix_fûe
, 
∑th
, 
log_debug
);

107 
˚º
 << "tfûê¸óãd." << 
ídl
;

109 
	#NITERS
 10

	)

110 
j
=0; j<
NITERS
; j++) {

111 
	`DBG
(<<"DBG ITERATION #" << 
j
);

113 
	`Æ…e°s
(
tfûe
, (*)1);

122 
dñëe
 
tfûe
;

124 
	}
}

	@src/fc/tests/findprime.cpp

30 
	~"w_deföes.h
"

34 
	~"w.h
"

35 
	~"w_föd¥ime.h
"

36 
	~"w_gë›t.h
"

37 
	~<io°ªam
>

39 
	upun


41 
	mi
;

42 
	mui
;

43 } 
	gu
;

46 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

48 
îr‹s
 = 0;

49 
c
;

51 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d:D:o:O:x:X:i:I:n:N:")Ë!
EOF
) {

52 
c
) {

63 
u
.
ui
 = 
	`°πoul
(
›èrg
, 0,0);

66 
îr‹s
++;

70 i‡(
îr‹s
) {

71 
˚º


73 << 
¨gv
[0]

77 << 
ídl
;

80  
îr‹s
 ? -1 : 
›töd
;

81 
	}
}

84 
	$maö
(
¨gc
, *
¨gv
[])

87 
e
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

88 if(
e
<0Ë
	`exô
(e);

90 
w_ba£_t
::
öt8_t
 
P
 = 
	`w_föd¥ime
(
u
.
ui
);

92 
cout


93 << 
P
 << 
ídl
;

95 
	}
}

	@src/fc/tests/findsizes.cpp

30 
	~"w_deföes.h
"

34 
	~"w.h
"

35 
	~"w_föd¥ime.h
"

36 
	~"w_gë›t.h
"

37 
	~<io°ªam
>

39 
boﬁ
 
¥öçrime
(
Ál£
);

40 
boﬁ
 
¥öçowî
(
Ál£
);

41 
boﬁ
 
¥öåeque°
(
Ál£
);

42 
	gw_ba£_t
::
	töt8_t
 
	ti8
;

43 
i8
 
	gba£
;

45 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

47 
îr‹s
 = 0;

48 
c
;

50 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "±r")Ë!
EOF
) {

51 
c
) {

53 
¥öçrime
=
åue
;

56 
¥öçowî
=
åue
;

59 
¥öåeque°
=
åue
;

62 
îr‹s
++;

66 i‡(
îr‹s
) {

67 
˚º


69 << 
¨gv
[0]

71 << 
ídl
;

73 
ba£
 = 
	`°πoul
(
¨gv
[
›töd
], 0,0);

75  
îr‹s
 ? -1 : 
›töd
;

76 
	}
}

78 
boﬁ
 
debug
(
Ál£
);

81 
	$maö
(
¨gc
, *
¨gv
[])

84 
e
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

85 if(
e
<0Ë
	`exô
(e);

88 
i8
 
pwr
 = 0x400;

89 
diff
=2<<30;

90 
i
=0; i < 32; i++)

92 
pwr
<<=1;

93 if(
pwr
 > 
ba£
) {

96 
diff
 = 
ba£
 - 
pwr
;

99 if–(
pwr
 - 
ba£
Ë> 
diff
) {

101 
pwr
 >>=1;

103 
i8
 
p2
 = 
	`w_föd¥ime
(
pwr
);

105 if(
debug
) {

106 
cout


107 << "ba£ " << 
ba£


108 << " clo£°Öowî o‡2 " << 
pwr


109 << " föd¥imê-> " << 
p2


110 << 
ídl
;

112 if(
¥öçowî
Ë
cout
 << 
pwr
 << 
ídl
;

113 if(
¥öçrime
Ë
cout
 << 
p2
 << 
ídl
;

118 
i8
 
nbuÂages
 = ((
p2
 * 9)-8)/16 ;

119 if(
debug
) {

120 
cout
 << "nbuÂage†=" << 
nbuÂages
 << 
ídl
;

123 
	#∑ge_sz
 8192uŒ

	)

125 
i8
 
size
 = ((
∑ge_sz
 * (
nbuÂages
 - 1)) +1)/1024 ;

126 if(
debug
)

128 
cout
 << "ªque° bpoﬁ sizê=" << 
size
 << 
ídl
;

130 if(
¥öåeque°
Ë
cout
 << 
size
 << 
ídl
;

134 
	}
}

	@src/fc/tests/hash1.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

37 
	~<w.h
>

39 c⁄° 
	ghtsz
 = 3;

40 c⁄° 
	gƒecs
 = 20;

42 
	sñemít_t
 {

43 
	mi
;

44 
w_lök_t
 
	mlök
;

47 
	$maö
()

49 
w_hash_t
<
ñemít_t
, 
unß„_li°_dummy_lock_t
, >

50 
	`h
(
htsz
, 
	`W_HASH_ARG
(
ñemít_t
, 
i
, 
lök
), 
unß„_nﬁock
);

51 
ñemít_t
 
¨øy
[
ƒecs
];

53 
i
;

54 
i
 = 0; i < 
ƒecs
; i++) {

55 
¨øy
[
i
].i = i;

56 
h
.
	`push
(&
¨øy
[
i
]);

59 
i
 = 0; i < 
ƒecs
; i++) {

60 #i‡
W_DEBUG_LEVEL
>0

61 
ñemít_t
* 
p
 = 
h
.
	`ªmove
(
i
);

62 
	`w_as£π1
(
p
);

63 
	`w_as£π1
(
p
->
i
 == i);

65 (Ë
h
.
	`ªmove
(
i
);

69 
i
 = 0; i < 
ƒecs
; i++) {

70 
h
.
	`≠≥nd
(&
¨øy
[
i
]);

73 
i
 = 0; i < 
ƒecs
; i++) {

74 
h
.
	`ªmove
(&
¨øy
[
i
]);

78 
	}
}

80 #ifde‡
__BORLANDC__


81 #¥agm®
›ti⁄
 -
Jgd


82 
	~<w_li°.˝p
>

83 
	~<w_hash.˝p
>

84 
	gw_li°_t
<
	tñemít_t
, 
	tunß„_li°_dummy_lock_t
> 
	tw_li°_t_ñemít_t_dummy
;

85 
	gw_hash_t
<
	tñemít_t
, 
	tunß„_li°_dummy_lock_t
, > 
	tw_hash_t_ñemít_t_dummy
;

88 #ifde‡
EXPLICIT_TEMPLATE


89 
ãm∂©e
 
˛ass
 
	gw_hash_t
<
	gñemít_t
, 
	gunß„_li°_dummy_lock_t
, >;

90 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gñemít_t
, 
	gunß„_li°_dummy_lock_t
>;

91 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gñemít_t
, 
	gunß„_li°_dummy_lock_t
>;

	@src/fc/tests/hash2.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

37 
	~<w.h
>

39 c⁄° 
	ghtsz
 = 3;

40 c⁄° 
	gƒecs
 = 20;

42 
	sñem_t
 {

43 
	mi
;

44 
w_lök_t
 
	mlök
;

47 
	$maö
()

49 
w_hash_t
<
ñem_t
, 
unß„_li°_dummy_lock_t
, > 
	`h
(
htsz
, 
	`W_HASH_ARG
”Àm_t, 
i
, 
lök
), 
unß„_nﬁock
);

50 
ñem_t
 
¨øy
[
ƒecs
];

52 
i
;

53 
i
 = 0; i < 
ƒecs
; i++) {

54 
¨øy
[
i
].i = i;

55 
h
.
	`push
(&
¨øy
[
i
]);

58 
i
 = 0; i < 
ƒecs
; i++) {

59 #i‡
W_DEBUG_LEVEL
>0

60 
ñem_t
* 
p
 = 
h
.
	`lookup
(
i
);

61 
	`w_as£π1
(
p
);

62 
	`w_as£π1
(
p
->
i
 == i);

64 (Ë
h
.
	`lookup
(
i
);

69 
Êag
[
ƒecs
];

70 
i
 = 0; i < 
ƒecs
; i++Ë
Êag
[i] = 0;

71 
w_hash_i
<
ñem_t
,
unß„_li°_dummy_lock_t
,> 
	`ôî
(
h
);

73 
ôî
.
	`√xt
()) {

74 
i
 = 
ôî
.
	`cuº
()->i;

75 
	`w_as£π1
(
i
 >0 && i < 
ƒecs
);

76 ++
Êag
[
i
];

79 
i
 = 0; i < 
ƒecs
; i++) {

80 
	`w_as£π1
(
Êag
[
i
] == 1);

84 
i
 = 0; i < 
ƒecs
; i++) {

85 #i‡
W_DEBUG_LEVEL
>0

86 
ñem_t
* 
p
 = 
h
.
	`ªmove
(
i
);

87 
	`w_as£π1
(
p
);

88 
	`w_as£π1
(
p
->
i
 == i);

90 (Ë
h
.
	`ªmove
(
i
);

94 
i
 = 0; i < 
ƒecs
; i++) {

95 
h
.
	`≠≥nd
(&
¨øy
[
i
]);

98 
i
 = 0; i < 
ƒecs
; i++) {

99 
h
.
	`ªmove
(&
¨øy
[
i
]);

103 
	}
}

105 #ifde‡
__BORLANDC__


106 #¥agm®
›ti⁄
 -
Jgd


107 
	~<w_li°.˝p
>

108 
	~<w_hash.˝p
>

109 
	gw_li°_t
<
	tñem_t
, 
	tunß„_li°_dummy_lock_t
> 
	tw_li°_t_ñemít_t_dummy
;

110 
	gw_hash_t
<
	tñem_t
, 
	tunß„_li°_dummy_lock_t
, > 
	tw_hash_t_ñemít_t_dummy
;

113 #ifde‡
EXPLICIT_TEMPLATE


114 
ãm∂©e
 
˛ass
 
	gw_hash_t
<
	gñem_t
, 
	gunß„_li°_dummy_lock_t
, >;

115 
ãm∂©e
 
˛ass
 
	gw_hash_i
<
	gñem_t
, 
	gunß„_li°_dummy_lock_t
, >;

116 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gñem_t
, 
	gunß„_li°_dummy_lock_t
>;

117 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gñem_t
, 
	gunß„_li°_dummy_lock_t
>;

	@src/fc/tests/heap.cpp

30 
	~"w_deföes.h
"

34 
	~"w_hóp.h
"

35 
	~<w.h
>

36 
	~<c°rög
>

39 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	cCmpLessFun˘i⁄


41 
	mpublic
:

42 
boﬁ
 
	$gt
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const;

43 
boﬁ
 
	$cmp
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const;

47 
ãm∂©e
<
˛ass
 
T
> cœs†
	cCmpGª©îFun˘i⁄


49 
public
:

50 
boﬁ
 
	$gt
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const;

51 
boﬁ
 
	$cmp
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const;

55 
ãm∂©e
<
˛ass
 
T
>

56 
ölöe
 
boﬁ
 
CmpLessFun˘i⁄
<
T
>::
	$gt
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const

58  
x
 < 
y
;

59 
	}
}

60 
	gãm∂©e
<
˛ass
 
	gT
>

61 
ölöe
 
boﬁ
 
	gCmpLessFun˘i⁄
<
	gT
>::
	$cmp
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const

63  (
x
 < 
y
) ? 1 : (x==y)? 0 : -1;

64 
	}
}

67 
	gãm∂©e
<
˛ass
 
	gT
>

68 
ölöe
 
boﬁ
 
	gCmpGª©îFun˘i⁄
<
	gT
>::
	$gt
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const

70  
x
 > 
y
;

71 
	}
}

72 
	gãm∂©e
<
˛ass
 
	gT
>

73 
ölöe
 
boﬁ
 
	gCmpGª©îFun˘i⁄
<
	gT
>::
	$cmp
(c⁄° 
T
& 
x
, c⁄° T& 
y
) const

75  (
x
 > 
y
) ? 1 : (x==y)? 0 : -1;

76 
	}
}

80 
	#BY_SMALLEST_HEAP_ORDER


	)

81 #ifde‡
BY_SMALLEST_HEAP_ORDER


82 
	gCmpLessFun˘i⁄
<> 
	tCmpFun˘i⁄
;

84 
	gCmpGª©îFun˘i⁄
<> 
	tCmpFun˘i⁄
;

87 
	gHóp
<, 
	tCmpFun˘i⁄
> 
	tCh¨Hóp
;

89 #ifde‡
EXPLICIT_TEMPLATE


90 
ãm∂©e
 
˛ass
 
	gCmpLessFun˘i⁄
<>;

91 
ãm∂©e
 
˛ass
 
	gCmpGª©îFun˘i⁄
<>;

92 
ãm∂©e
 
˛ass
 
	gHóp
<, 
	gCmpLessFun˘i⁄
<> >;

93 
ãm∂©e
 
˛ass
 
	gHóp
<, 
	gCmpGª©îFun˘i⁄
<> >;

96 
	$Rïœ˚AŒHódsWôhL¨ge°
(
Ch¨Hóp
& 
hóp
)

98 
£c⁄d
 = 0;

99 
i
 = 0; i < 
hóp
.
	`NumEÀmíts
(); ++i) {

100 i‡(
i
 > 1) {

101 
£c⁄d
 = 
hóp
.
	`Sec⁄d
();

103 
hóp
.
	`Fú°
() = '|';

104 
hóp
.
	`Rïœ˚dFú°
();

105 i‡(
i
 > 1) {

106 
	`w_as£π1
(
£c⁄d
 =
hóp
.
	`Fú°
());

108 
hóp
.
	`CheckHóp
();

109 
cout
 << "\n\n-------------------\n\n";

110 
hóp
.
	`Pröt
(
cout
);

112 
	}
}

115 
	$Rïœ˚AŒHódsWôhSmÆÀ°
(
Ch¨Hóp
& 
hóp
)

117 
£c⁄d
 = 0;

118 
i
 = 0; i < 
hóp
.
	`NumEÀmíts
(); ++i) {

119 i‡(
i
 > 1) {

120 
£c⁄d
 = 
hóp
.
	`Sec⁄d
();

122 
hóp
.
	`Fú°
() = '!';

123 
hóp
.
	`Rïœ˚dFú°
();

124 i‡(
i
 > 1) {

125 
	`w_as£π1
(
£c⁄d
 =
hóp
.
	`Fú°
());

127 
hóp
.
	`CheckHóp
();

128 
cout
 << "\n\n-------------------\n\n";

129 
hóp
.
	`Pröt
(
cout
);

131 
	}
}

134 
	$maö
()

136 
£¡í˚
[] = "the quick brown fox jumped overÅheÜazy dogs.";

137 
maxAºaySize
 = 
	`°æí
(
£¡í˚
);

138 *
¨øy
;

140 
CmpFun˘i⁄
 
cmp
;

143 
¨øySize
 = 0;áºaySizê< 
maxAºaySize
; ++arraySize) {

144 
Ch¨Hóp
 
	`hóp
(
cmp
);

146 
cout
 << "\n\¿=========TEST # " << 
¨øySize
 << " =========== \n\n";

147 
¨øy
 = 
√w
 [
¨øySize
 + 1];

148 
	`°∫˝y
(
¨øy
, 
£¡í˚
, 
¨øySize
);

149 
¨øy
[
¨øySize
] = 0;

150 
i
 = 0; i < 
¨øySize
; i++) {

151 i‡(
¨øy
[
i
] == ' ') {

152 
¨øy
[
i
] = '_';

154 
hóp
.
	`AddEÀmítD⁄tHópify
(
¨øy
[
i
]);

156 
cout
 << "\n\¿=========TEST # P1." << 
¨øySize
 << " =========== \n\n";

157 
hóp
.
	`Pröt
(
cout
);

158 
hóp
.
	`Hópify
();

159 
cout
 << "\n\¿=========TEST # P2." << 
¨øySize
 << " =========== \n\n";

160 
hóp
.
	`Pröt
(
cout
);

161 #ifde‡
BY_SMALLEST_HEAP_ORDER


162 
	`Rïœ˚AŒHódsWôhL¨ge°
(
hóp
);

164 
	`Rïœ˚AŒHódsWôhSmÆÀ°
(
hóp
);

166 
cout
 << "\n\¿=========TEST # P3." << 
¨øySize
 << " =========== \n\n";

167 
hóp
.
	`Pröt
(
cout
);

168 
dñëe
[] 
¨øy
;

173 
Ch¨Hóp
 
	`hóp
(
cmp
);

174 
¨øy2
[] = "AAAAAAAAAAAAAAAAAAAAAAA";

175 
i
 = 0; i < 
	`°æí
(
¨øy2
); ++i) {

176 
hóp
.
	`AddEÀmítD⁄tHópify
(
¨øy2
[
i
]);

178 
cout
 << "\n\n ========== TEST # P4. =========== \n\n";

179 
hóp
.
	`Pröt
(
cout
);

180 
hóp
.
	`Hópify
();

181 
hóp
.
	`CheckHóp
();

182 
cout
 << "\n\n ========== TEST # P5. =========== \n\n";

183 
hóp
.
	`Pröt
(
cout
);

184 #ifde‡
BY_SMALLEST_HEAP_ORDER


185 
	`Rïœ˚AŒHódsWôhL¨ge°
(
hóp
);

187 
	`Rïœ˚AŒHódsWôhSmÆÀ°
(
hóp
);

193 
i
;

194 
Ch¨Hóp
 
	`hóp
(
cmp
);

195 
i
 = 0; i < 
maxAºaySize
; ++i) {

196 
hóp
.
	`AddEÀmítD⁄tHópify
(
£¡í˚
[
i
]);

198 
hóp
.
	`Hópify
();

199 
cout
 << "\n\n*******************\n\n";

200 
i
 = 0; i < 
maxAºaySize
; ++i) {

201 
cout
 << 
hóp
.
	`RemoveFú°
();

203 
cout
 << 
ídl
;

204 
	`w_as£π1
(
hóp
.
	`NumEÀmíts
() == 0);

206 
i
 = 0; i < 
maxAºaySize
; ++i) {

207 
hóp
.
	`AddEÀmít
(
£¡í˚
[
i
]);

208 
hóp
.
	`CheckHóp
();

210 
cout
 << "\n\n*******************\n\n";

211 
i
 = 0; i < 
maxAºaySize
; ++i) {

212 
cout
 << 
hóp
.
	`RemoveFú°
();

214 
cout
 << 
ídl
;

217 
	}
}

	@src/fc/tests/io.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<w_°r°ªam.h
>

36 
	~<w_ba£.h
>

40 
	#SHOWBASE
 
	`£tiosÊags
(
ios
::
showba£
)

	)

41 
	#NOSHOWBASE
 
	`ª£tiosÊags
(
ios
::
showba£
)

	)

43 
	gã°numbî
=0;

45 
	~<˚ºno
>

47 
	$ã°
(c⁄° *
s
, 
ba£
, 
times
, 
boﬁ
 )

49 
cout
 << "*************************************** TEST# "

50 << 
ã°numbî


51 << " (" << 
times
 << "Åimes)"

52 <<
ídl
;

54 * 
íd±r
 = 0;

55 
t
=0;

56 
cout
 << " Såög i†" << 
s


57 <<" Ba£ i†" << 
ba£


58 <<
ídl
;

60 
cout
 << "__________________ UNSIGNED " << 
ã°numbî
 <<
ídl
;

62 
°rögdiff1
=0, 
°rögdiff2
=0;

63 
î∫o1
=0, 
î∫o2
=0;

64 
w_ba£_t
::
uöt8_t
 
junk
1, 
junk2
= 1;

66 
°rögdiff1
 = (
íd±r
-
s
);

68 c⁄° *
wh©ˇŒed
 = "strtou8";

69 
î∫o
 = 0;

70 
junk
 = 
junk2
 = 
w_ba£_t
::
	`°πou8
(
s
, &
íd±r
, 
ba£
);

71 
î∫o1
 = 
î∫o2
 = 
î∫o
;

72 
°rögdiff1
 = 
°rögdiff2
 = (
íd±r
-
s
);

73 
°rögdiff2
 = (
íd±r
-
s
);

74 
cout


75 << "T " << 
ã°numbî
 << " "

76 << "Resu… from " << 
wh©ˇŒed
 << " :"

77 << 
hex
 << 
junk2
 << "/x "

78 << 
o˘
 << 
junk2
 << "/o "

79 << 
dec
 << 
junk2
 << "/d "

80 << 
ídl
;

81 if(
î∫o1
 !
î∫o2
) {

82 
cout
 << "ERROR: MISMATCHedÉºno" <<
ídl
;

83 
cout


84 << "î∫o1 = " << 
î∫o1


85 << "Éºno2 = " << 
î∫o2


86 <<
ídl
;

87 } if(
î∫o2
) {

88 
cout
 << "î∫ÿi†" << 
î∫o
 <<
ídl
;

90 if(
junk
 !
junk2
) {

91 
cout
 << "ERROR: MISMATCHed vÆues" <<
ídl
;

93 if(
°rögdiff1
 !
°rögdiff2
) {

94 
cout
 << "ERROR: MISMATCHedÉnd±rs" <<
ídl
;

95 
cout


96 << "íd±r1 @ " << 
°rögdiff1


97 << "Énd±r2 @ " << 
°rögdiff2


98 <<
ídl
;

102 if(
times
 > 1) {

103 
t
 = 0;Å < 
times
;Å++) {

104 
w_i°r°ªam
 
	`tmp
(
s
);

105 
ios
::
	tfmtÊags
 fmtflags;

106 
fmtÊags
 
f
 = 
tmp
.
	`Êags
();

107 
f
 = f & ~(
ios
::
ba£fõld
);

108 
f
 |
ios
::
skùws
 | ios::
dec
;

109 
tmp
.
	`Êags
(
f
);

111 
w_ba£_t
::
uöt8_t
 
u8
;

112 
boﬁ
 
øngîr
=
Ál£
;

113 
w_ba£_t
::
	`_sˇn_uöt8
(
tmp
, 
u8
, 
Ál£
, fÆ£, 
øngîr
);

115 
cout
 << 
ídl
;

119 
cout
 << "__________________ SIGNED " << 
ã°numbî
 <<
ídl
;

121 
w_ba£_t
::
öt8_t
 
junk
-1, 
junk2
 = -1;

122 
°rögdiff1
=0, 
°rögdiff2
=0;

123 
î∫o1
=0, 
î∫o2
=0;

126 c⁄° *
wh©ˇŒed
 = "strtoi8";

127 
î∫o
 = 0;

128 
junk
 = 
junk2
 = 
w_ba£_t
::
	`°πoi8
(
s
, &
íd±r
, 
ba£
);

129 
î∫o1
 = 
î∫o2
 = 
î∫o
;

130 
°rögdiff1
 = 
°rögdiff2
 = (
íd±r
-
s
);

131 
°rögdiff2
 = (
íd±r
-
s
);

132 
cout


133 << "T " << 
ã°numbî
 << " "

134 << "Resu… from " << 
wh©ˇŒed
 << " :"

135 << 
hex
 << 
junk2
 << "/x "

136 << 
o˘
 << 
junk2
 << "/o "

137 << 
dec
 << 
junk2
 << "/d "

138 << 
ídl
;

140 if(
î∫o1
 !
î∫o2
) {

141 
cout
 << "ERROR: MISMATCHedÉºno" <<
ídl
;

142 
cout


143 << "î∫o1 = " << 
î∫o1


144 << "Éºno2 = " << 
î∫o2


145 <<
ídl
;

146 } if(
î∫o2
) {

147 
cout
 << "î∫ÿi†" << 
î∫o
 <<
ídl
;

149 if(
junk
 !
junk2
) {

150 
cout
 << "ERROR: MISMATCHed vÆues" <<
ídl
;

152 if(
°rögdiff1
 !
°rögdiff2
) {

153 
cout
 << "ERROR: MISMATCHedÉnd±rs" <<
ídl
;

154 
cout


155 << "íd±r1 @ " << 
°rögdiff1


156 << "Énd±r2 @ " << 
°rögdiff2


157 <<
ídl
;

161 
ã°numbî
++;

162 
	}
}

165 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

169 c⁄° *
°rögs_odd
[] = {

194 c⁄° *
°rögs_n‹mÆ
[] = {

212 
ba£s
[4] = { 0, 8, 10, 16 };

216 
cout
 << "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<" << 
ídl
;

217 
cout
 << "*** Illegit base:Éxpecting MISMATCHed "

218 << "Éºno, vÆue,Énd±rs" <<
ídl
;

219 
	`ã°
("123", 5, 1, 
åue
);

220 
cout
 << "*** Illegit base:Éxpected MISMATCHed "

221 << "Éºno, vÆue,Énd±rs" <<
ídl
;

222 
cout
 << ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>" << 
ídl
;

224 
cout
 << 
ídl


225 << "Hí˚f‹th, should gë NO mism©ch mesßges... " <<
ídl


226 <<
ídl
;

231 
times
 = 1;

232 if(
¨gc
>1){

233 
times
 = 
	`©oi
(
¨gv
[1]);

234 
cout
 << "Cou¡Åimes=" << 
times
 <<
ídl
;

237 
b
=0; b<4; b++) {

238 
ba£
 = 
ba£s
[
b
];

239 
i
=0;

240 
i
=0; ;i++) {

241 c⁄° *
s
 = 
°rögs_odd
[
i
];

242 if(! *
s
) ;

244 
	`ã°
(
s
, 
ba£
, 1, 
åue
);

246 
i
=0; ;i++) {

247 c⁄° *
s
 = 
°rögs_n‹mÆ
[
i
];

248 if(! *
s
) ;

249 
	`ã°
(
s
, 
ba£
, 
times
, 
Ál£
);

254 
	}
}

	@src/fc/tests/list1.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

38 
	~<w.h
>

40 
	sñem1_t
 {

41 
	mi
;

42 
w_lök_t
 
	mlök
;

45 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gñem1_t
& 
	ge
)

47  
	go
 << 
	ge
.
	gi
;

50 
	$maö
()

52 
w_li°_t
<
ñem1_t
, 
unß„_li°_dummy_lock_t
> 
	`l
(
	`W_LIST_ARG
”Àm1_t, 
lök
),

53 
unß„_nﬁock
);

55 
ñem1_t
 
¨øy
[10];

57 
i
;

58 
i
 = 0; i < 10; i++) {

59 
¨øy
[
i
].i = i;

60 
l
.
	`push
(&
¨øy
[
i
]);

63 
cout
 << 
l
 << 
ídl
;

65 
i
 = 0; i < 10; i++) {

66 #i‡
W_DEBUG_LEVEL
>0

67 
ñem1_t
* 
p
 = 
l
.
	`p›
();

68 
	`w_as£π1
(
p
);

69 
	`w_as£π1
(
p
->
i
 == 9 - i);

71 (Ë
l
.
	`p›
();

75 
	`w_as£π1
(
l
.
	`p›
() == 0);

77 
i
 = 0; i < 10; i++) {

78 
l
.
	`≠≥nd
(&
¨øy
[
i
]);

81 
i
 = 0; i < 10; i++) {

82 #i‡
W_DEBUG_LEVEL
>0

83 
ñem1_t
* 
p
 = 
l
.
	`ch›
();

84 
	`w_as£π1
(
p
);

85 
	`w_as£π1
(
p
->
i
 == 9 - i);

87 (Ë
l
.
	`ch›
();

90 
	`w_as£π1
(
l
.
	`ch›
() == 0);

93 
	}
}

95 #ifde‡
__BORLANDC__


96 #¥agm®
›ti⁄
 -
Jgd


97 
	~<w_li°.˝p
>

98 
	gw_li°_t
<
	tñem1_t
, 
	tunß„_li°_dummy_lock_t
> 
	tw_li°_t_ñem1_t_dummy
;

102 #ifde‡
__GNUG__


104 
ãm∂©e
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gw_li°_t
<
	gñem1_t
, 
	gunß„_li°_dummy_lock_t
>& 
	gl
);

107 #ifde‡
EXPLICIT_TEMPLATE


108 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gñem1_t
, 
	gunß„_li°_dummy_lock_t
>;

109 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gñem1_t
, 
	gunß„_li°_dummy_lock_t
>;

	@src/fc/tests/list2.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

37 
	~<w.h
>

39 
	sñem2_t
 {

40 
	mi
;

41 
w_lök_t
 
	mlök
;

44 
	$maö
()

46 
w_li°_t
<
ñem2_t
, 
unß„_li°_dummy_lock_t
> 
	`l
(
	`W_LIST_ARG
”Àm2_t, 
lök
),

47 
unß„_nﬁock
);

49 
ñem2_t
 
¨øy
[10];

51 
i
;

52 
i
 = 0; i < 10; i++) {

53 
¨øy
[
i
].i = i;

54 
l
.
	`push
(&
¨øy
[
i
]);

58 
w_li°_i
<
ñem2_t
, 
unß„_li°_dummy_lock_t
> 
	`ôî
(
l
);

59 
i
 = 0; i < 10; i++) {

60 #i‡
W_DEBUG_LEVEL
>0

61 
ñem2_t
* 
p
 = 
ôî
.
	`√xt
();

62 
	`w_as£π1
(
p
);

63 
	`w_as£π1
(
p
->
i
 == 9 - i);

65 (Ë
ôî
.
	`√xt
();

68 
	`w_as£π1
(
ôî
.
	`√xt
() == 0);

70 
w_li°_c⁄°_i
<
ñem2_t
, 
unß„_li°_dummy_lock_t
> 
	`c⁄°_ôî
(
l
);

71 
i
 = 0; i < 10; i++) {

72 #i‡
W_DEBUG_LEVEL
>0

73 c⁄° 
ñem2_t
* 
p
 = 
c⁄°_ôî
.
	`√xt
();

74 
	`w_as£π1
(
p
);

75 
	`w_as£π1
(
p
->
i
 == 9 - i);

77 (Ë
c⁄°_ôî
.
	`√xt
();

80 
	`w_as£π1
(
c⁄°_ôî
.
	`√xt
() == 0);

83 
i
 = 0; i < 10; i++) {

84 #i‡
W_DEBUG_LEVEL
>0

85 
ñem2_t
* 
p
 = 
l
.
	`p›
();

86 
	`w_as£π1
(
p
);

87 
	`w_as£π1
(
p
->
i
 == 9 - i);

89 (Ë
l
.
	`p›
();

93 
	`w_as£π1
(
l
.
	`p›
() == 0);

95 
i
 = 0; i < 10; i++) {

96 
l
.
	`≠≥nd
(&
¨øy
[
i
]);

100 
w_li°_i
<
ñem2_t
, 
unß„_li°_dummy_lock_t
> 
	`ôî
(
l
);

101 
i
 = 0; i < 10; i++) {

102 #i‡
W_DEBUG_LEVEL
>0

103 
ñem2_t
* 
p
 = 
ôî
.
	`√xt
();

104 
	`w_as£π1
(
p
);

105 
	`w_as£π1
(
p
->
i
 == i);

107 (Ë
ôî
.
	`√xt
();

112 
i
 = 0; i < 10; i++) {

113 #i‡
W_DEBUG_LEVEL
>0

114 
ñem2_t
* 
p
 = 
l
.
	`ch›
();

115 
	`w_as£π1
(
p
);

116 
	`w_as£π1
(
p
->
i
 == 9 - i);

118 (Ë
l
.
	`ch›
();

121 
	`w_as£π1
(
l
.
	`ch›
() == 0);

124 
	}
}

126 #ifde‡
__BORLANDC__


127 #¥agm®
›ti⁄
 -
Jgd


128 
	~<w_li°.˝p
>

129 
	gw_li°_t
<
	tñem2_t
, 
	tunß„_li°_dummy_lock_t
> 
	tw_li°_t_ñem2_t_dummy
;

132 #ifde‡
EXPLICIT_TEMPLATE


133 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gñem2_t
, 
	gunß„_li°_dummy_lock_t
>;

134 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gñem2_t
, 
	gunß„_li°_dummy_lock_t
>;

135 
ãm∂©e
 
˛ass
 
	gw_li°_c⁄°_i
<
	gñem2_t
, 
	gunß„_li°_dummy_lock_t
>;

	@src/fc/tests/list3.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

37 
	#W_INCL_LIST_EX


	)

38 
	~<w.h
>

40 
	sñem3_t
 {

41 
	mi
;

42 
w_lök_t
 
	mlök
;

45 
	gw_as˚nd_li°_t
<
	tñem3_t
, 
	tunß„_li°_dummy_lock_t
, > 
	tñem_as˚nd_li°_t
;

46 
	gw_des˚nd_li°_t
<
	tñem3_t
, 
	tunß„_li°_dummy_lock_t
, > 
	tñem_des˚nd_li°_t
;

48 
	$maö
()

50 
ñem3_t
 
¨øy
[10];

51 
ñem3_t
* 
p
 = 
NULL
;

53 
i
;

54 
i
 = 0; i < 10; i++)

55 
¨øy
[
i
].i = i;

58 
ñem_as˚nd_li°_t
 
	`u
(
	`W_KEYED_ARG
(
ñem3_t
, 
i
, 
lök
), 
unß„_nﬁock
);

60 
i
 = 0; i < 10; i += 2) {

61 
u
.
	`put_ö_‹dî
(&
¨øy
[9 - 
i
]);

64 
i
 = 0; i < 10; i += 2) {

65 
u
.
	`put_ö_‹dî
(&
¨øy
[
i
]);

68 
i
 = 0; i < 10; i++) {

69 
p
 = 
u
.
	`£¨ch
(
i
);

70 
	`w_as£π9
(
p
 &&Ö->
i
 == i);

74 
w_li°_i
<
ñem3_t
, 
unß„_li°_dummy_lock_t
> 
	`ôî
(
u
);

75 
i
 = 0; i < 10; i++) {

76 
p
 = 
ôî
.
	`√xt
();

77 
	`w_as£π9
(
p
 &&Ö->
i
 == i);

79 
	`w_as£π9
(
ôî
.
	`√xt
() == 0);

82 
p
 = 
u
.
	`fú°
();

83 
	`w_as£π9
(
p
 &&Ö->
i
 == 0);

85 
p
 = 
u
.
	`œ°
();

86 
	`w_as£π9
(
p
 &&Ö->
i
 == 9);

88 
i
 = 0; i < 10; i++) {

89 
p
 = 
u
.
	`fú°
();

90 
	`w_as£π9
(
p
 &&Ö->
i
 == i);

91 
p
 = 
u
.
	`p›
();

92 
	`w_as£π9
(
p
 &&Ö->
i
 == i);

95 
p
 = 
u
.
	`p›
();

96 
	`w_as£π9
(!
p
);

100 
ñem_des˚nd_li°_t
 
	`d
(
	`W_KEYED_ARG
(
ñem3_t
, 
i
, 
lök
), 
unß„_nﬁock
);

102 
i
 = 0; i < 10; i += 2) {

103 
d
.
	`put_ö_‹dî
(&
¨øy
[9 - 
i
]);

106 
i
 = 0; i < 10; i += 2) {

107 
d
.
	`put_ö_‹dî
(&
¨øy
[
i
]);

110 
i
 = 0; i < 10; i++) {

111 
p
 = 
d
.
	`£¨ch
(
i
);

112 
	`w_as£π9
(
p
 =&
¨øy
[
i
]);

116 
w_li°_i
<
ñem3_t
, 
unß„_li°_dummy_lock_t
> 
	`ôî
(
d
);

117 
i
 = 0; i < 10; i++) {

118 
p
 = 
ôî
.
	`√xt
();

119 
	`w_as£π9
(
p
 &&Ö->
i
 == 9 - i);

121 
	`w_as£π9
(
ôî
.
	`√xt
() == 0);

124 
p
 = 
d
.
	`fú°
();

125 
	`w_as£π9
(
p
 &&Ö->
i
 == 9);

127 
p
 = 
d
.
	`œ°
();

128 
	`w_as£π9
(
p
 &&Ö->
i
 == 0);

130 
i
 = 0; i < 10; i++) {

131 
p
 = 
d
.
	`fú°
();

132 
	`w_as£π9
(
p
 &&Ö->
i
 == 9 - i);

133 
p
 = 
d
.
	`p›
();

134 
	`w_as£π9
(
p
 &&Ö->
i
 == 9 - i);

137 
p
 = 
d
.
	`p›
();

138 
	`w_as£π9
(!
p
);

142 
	}
}

144 #ifde‡
EXPLICIT_TEMPLATE


145 
ãm∂©e
 
˛ass
 
	gw_as˚nd_li°_t
<
	gñem3_t
, 
	gunß„_li°_dummy_lock_t
, >;

146 
ãm∂©e
 
˛ass
 
	gw_des˚nd_li°_t
<
	gñem3_t
, 
	gunß„_li°_dummy_lock_t
, >;

147 
ãm∂©e
 
˛ass
 
	gw_keyed_li°_t
<
	gñem3_t
, 
	gunß„_li°_dummy_lock_t
, >;

148 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gñem3_t
, 
	gunß„_li°_dummy_lock_t
>;

149 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gñem3_t
, 
	gunß„_li°_dummy_lock_t
>;

	@src/fc/tests/memblock.cpp

24 
	~"mem_block.h
"

25 
	~"©omic_›s.h
"

26 
	~<c°dlib
>

27 
	~<Æg‹ôhm
>

28 #ifde‡
__löux


29 
	~<mÆloc.h
>

31 
	~"ã°_me.h
"

32 
	~<ve˘‹
>

33 
	~<√w
>

34 
	~<°dlib.h
>

36 
	#TEMPLATE_ARGS
 
chù_size
, 
chù_cou¡
, 
block_size


	)

37 
usög
 
«me•a˚
 
	gmem‹y_block
;

39 
	gã°_block_poﬁ
 : 
block_poﬁ
 {

40 
NORET
 
ã°_block_poﬁ
(
size_t
 
chù_size
, size_à
chù_cou¡
,

41 
size_t
 
block_size
, size_à
block_cou¡
)

42 : 
_d©a
(
block_size
*(
block_cou¡
+1))

43 , 
_acquúe_cou¡
(0)

44 , 
_ªÀa£_cou¡
(0)

45 , 
_d©a_size
(
block_size
*
block_cou¡
)

48 uni⁄ { * 
	gc
; 
	gn
; } 
	gu
 = {&
_d©a
[
block_size
]};

49 
	gu
.
	gn
 &-
block_size
;

50 
	g_d©a_°¨t
 = 
u
.
c
;

53 
size_t
 
	gi
=0; i < 
	gblock_cou¡
; i++) {

54 
block
* 
	gb
 = 
√w
 (
u
.
c
Ëblock(
TEMPLATE_ARGS
);

55 
	g_‰ìli°
.
push_back
(
b
);

56 
	gu
.
	gc
 +
block_size
;

60 
vútuÆ
 
block
* 
_acquúe_block
() {

61 if(
	g_‰ìli°
.
em±y
())

64 
block
* 
	gb
 = 
_‰ìli°
.
back
();

65 
	g_‰ìli°
.
p›_back
();

66 
	g_acquúe_cou¡
++;

67  
	gb
;

71 
vútuÆ
 
_ªÀa£_block
(
block
* 
b
) {

72 
	g_ªÀa£_cou¡
++;

73 
	g_‰ìli°
.
push_back
(
b
);

77 
vútuÆ
 
boﬁ
 
vÆid©e_poöãr
(* 
±r
) {

78 uni⁄ { * 
	gv
; * 
	gc
; } 
	gu
 = {
±r
};

79  (
	gu
.
	gc
 - 
	g_d©a_°¨t
Ë< 
	g_d©a_size
;

82 
	g°d
::
ve˘‹
<> 
_d©a
;

83 
	g°d
::
ve˘‹
<
block
*> 
_‰ìli°
;

84 
size_t
 
	g_acquúe_cou¡
;

85 
size_t
 
	g_ªÀa£_cou¡
;

86 
	g_d©a_size
;

87 * 
	g_d©a_°¨t
;

91 
	$ã°_block_li°
() {

92 
size_t
 c⁄° 
chù_size
 = ();

93 
size_t
 c⁄° 
chù_cou¡
 = 4;

94 
size_t
 c⁄° 
block_size
 = 512;

95 
size_t
 c⁄° 
block_cou¡
 = 4;

97 
ã°_block_poﬁ
 
	`tbp
(
TEMPLATE_ARGS
, 
block_cou¡
);

98 * 
±r
;

102 
block_li°
 
	`bl
(&
tbp
, 
TEMPLATE_ARGS
);

107 
block_li°
 
	`bl
(&
tbp
, 
TEMPLATE_ARGS
);

108 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

109 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

112 
bl
.
_hô_cou¡
 = 
chù_cou¡
;

115 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

116 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

117 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
);

121 * 
±rs
[
chù_cou¡
-1];

122 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

123 
±rs
[
i
] = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

124 
bl
.
_avg_hô_øã
 >(
chù_cou¡
+1)/2)

125 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

127 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-2);

128 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
->_next);

131 
bl
.
_hô_cou¡
 = 
chù_cou¡
;

132 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

133 
block
::
	`ªÀa£
(
±rs
[
i
], 
TEMPLATE_ARGS
);

134 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

135 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

136 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
);

142 * 
±rs
[2*
chù_cou¡
];

143 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

144 
±rs
[
i
] = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

147 
±r
 = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

148 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

150 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-3);

151 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
->_next->_next);

154 
bl
.
_hô_cou¡
 = 
chù_cou¡
;

155 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

156 
block
::
	`ªÀa£
(
±rs
[
i
], 
TEMPLATE_ARGS
);

157 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

158 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

159 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
);

165 * 
±rs
[2*
chù_cou¡
];

166 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

167 
±rs
[
i
] = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

170 
±r
 = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

172 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-3);

173 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
->_next->_next);

176 
bl
.
_hô_cou¡
 = 
chù_cou¡
;

177 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++)

178 
block
::
	`ªÀa£
(
±rs
[
i
], 
TEMPLATE_ARGS
);

179 
bl
.
	`_ch™ge_blocks
(
TEMPLATE_ARGS
);

180 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-2);

181 
	`w_as£π0
(
bl
.
_èû
 =bl._èû->
_√xt
->_next);

182 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

188 
block_li°
 
	`bl
(&
tbp
, 
TEMPLATE_ARGS
);

189 
±r
 = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

190 
	`w_as£π0
(
±r
);

191 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

195 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
);

196 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

200 
block_li°
 
	`bl
(&
tbp
, 
TEMPLATE_ARGS
);

201 
size_t
 
i
=0; i < 
chù_cou¡
+1; i++) {

202 
±r
 = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

203 
	`w_as£π0
(
±r
);

204 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

206 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-1);

208 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
);

212 
block_li°
 
	`bl
(&
tbp
, 
TEMPLATE_ARGS
);

213 * 
±rs
[
chù_cou¡
+1];

214 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++) {

215 
±rs
[
i
] = 
bl
.
	`acquúe
(
TEMPLATE_ARGS
);

216 
	`w_as£π0
(
±rs
[
i
]);

218 
size_t
 
i
=0; i < (
±rs
)/(ptrs[0]); i++) {

219 
block
::
	`ªÀa£
(
±rs
[
i
], 
TEMPLATE_ARGS
);

221 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
-2);

224 
	`w_as£π0
(
tbp
.
_‰ìli°
.
	`size
(Ë=
block_cou¡
);

226 
	}
}

228 
	gãm∂©e
<
˛ass
 
	gT
>

229 
	$¥öt_öfo
() {

230 
	`¥ötf
("ChipSize: %zd Overhead: %zd block: %d chips: %d\n",

231 
T
::
CHIP_SIZE
, T::
OVERHEAD
, T::
BYTES
, T::
COUNT
);

232 
	}
}

234 
	$ã°_hñ≥r_ãm∂©es
() {

238 
Áû_u∆ess
<
åue
>::
	`vÆid
();

245 
	`w_as£π0
(
mëa_log2
<1>::
VALUE
 == 0);

247 
	`w_as£π0
(
mëa_log2
<2>::
VALUE
 == 1);

248 
	`w_as£π0
(
mëa_log2
<3>::
VALUE
 == 1);

250 
	`w_as£π0
(
mëa_log2
<4>::
VALUE
 == 2);

251 
	`w_as£π0
(
mëa_log2
<5>::
VALUE
 == 2);

252 
	`w_as£π0
(
mëa_log2
<6>::
VALUE
 == 2);

253 
	`w_as£π0
(
mëa_log2
<7>::
VALUE
 == 2);

255 
	`w_as£π0
(
mëa_log2
<8>::
VALUE
 == 3);

278 
mëa_block_size
<1,127>();

279 
mëa_block_size
<2,31>();

280 
mëa_block_size
<4, 32>();

281 
mëa_block_size
<4, 7>();

282 
mëa_block_size
<31, 3,64>();

283 
	}
}

285 
	$ã°_block
() {

286 
size_t
 c⁄° 
max_bôs
 = 
block_bôs
::
MAX_CHIPS
;

287 
size_t
 c⁄° 
chù_size
 = ();

288 
size_t
 c⁄° 
chù_cou¡
 = 
max_bôs
-((
block
)+
chù_size
-1)/chip_size;

289 
size_t
 c⁄° 
block_size
 = 
chù_size
*
max_bôs
;

292 
	`EXPECT_ASSERT
(
	`block
((),
max_bôs
+1,512));

294 
	`EXPECT_ASSERT
(
	`block
((),
max_bôs
,
block_size
));

296 #i‡
I_WISH


297 
block
 
	`__©åibuã__
((
	`Æig√d
(8*(
block_bôs
::
bôm≠
)*())))

298 
	`b
(
chù_size
,
chù_cou¡
, 
block_size
);

300 #i‡
	`deföed
(
__APPLE__
)

301 
block
* 
b±r
 = 
	`√w
 (
	`mÆloc
(8*(
block_bôs
::
bôm≠
)*()))

303 
block
* 
b±r
 = 
	`√w
 (
	`memÆign
(8*(
block_bôs
::
bôm≠
)*(), 
block_size
))

305 
	`block
(
chù_size
, 
chù_cou¡
, 
block_size
);

306 
block
 &
b
 = *
b±r
;

310 
size_t
 
i
=0; i < 
chù_cou¡
; i++) {

311 * 
±r
 = 
b
.
	`acquúe
(
TEMPLATE_ARGS
);

312 
	`w_as£π0
(0 !
±r
);

313 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

315 
	`w_as£π0
(0 =
b
.
	`acquúe
(
TEMPLATE_ARGS
));

318 
	`EXPECT_ASSERT
(
block
::
	`ªÀa£
(
b
.
	`_gë
(0, 
chù_size
), 
TEMPLATE_ARGS
));

320 
	`EXPECT_ASSERT
(
block
::
	`ªÀa£
(
b
.
	`_gë
(1, 
chù_size
/2), 
TEMPLATE_ARGS
));

323 
b
.
	`ªcy˛e
();

324 
	`w_as£π0
(
b
.
_bôs
.
	`ußbÀ_cou¡
(Ë=
chù_cou¡
);

325 
	`w_as£π0
(
b
.
_bôs
.
	`zombõ_cou¡
() == 0);

328 
size_t
 
ªÀa£_cou¡
 = 8;

329 
size_t
 
i
=
ªÀa£_cou¡
; i < 
chù_cou¡
; i++) {

330 * 
±r
 = 
b
.
	`acquúe
(
TEMPLATE_ARGS
);

331 if(! (
i
%2)) {

332 
ªÀa£_cou¡
++;

333 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

336 
b
.
	`ªcy˛e
();

337 
	`w_as£π0
(
b
.
_bôs
.
	`ußbÀ_cou¡
(Ë=
ªÀa£_cou¡
);

338 
	`w_as£π0
(
b
.
_bôs
.
	`zombõ_cou¡
() == 0);

341 
size_t
 
i
=0; i < 
chù_cou¡
-
ªÀa£_cou¡
; i++) {

342 if(
i
 % 2) {

343 * 
±r
 = 
b
.
	`_gë
(
i
, 
chù_size
);

344 
block
::
	`ªÀa£
(
±r
, 
TEMPLATE_ARGS
);

347 
	}
}

350 
	$maö
() {

351 
	`ã°_block
();

352 
	`ã°_hñ≥r_ãm∂©es
();

353 
	`ã°_block_li°
();

355 
	}
}

	@src/fc/tests/ntime.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

36 
	~<√w
>

38 
	#__STIME_TESTER__


	)

40 
	~<w.h
>

41 
	~<°ime.h
>

54 #i‚de‡
HR_SECOND


55 #ifde‡
USE_POSIX_TIME


56 
	#HR_SECOND
 1000000000

	)

57 
	#°_tod
 
tv_£c


	)

58 
	#°_húes
 
tv_n£c


	)

60 
	#HR_SECOND
 1000000

	)

61 
	#°_tod
 
tv_£c


	)

62 
	#°_húes
 
tv_u£c


	)

68 ˛as†
	c°ime_ã°_t
 : 
public
 
°ime_t
 {

69 
public
:

70 
	$°ime_ã°_t
(Ë: 
	$°ime_t
() { }

71 
	$°ime_ã°_t
(c⁄° 
°ime_t
 &
time
Ë: 
	$°ime_t
(
time
Ë{ 
	}
}

74 
	$°ime_ã°_t
(
time_t
 
tod
, 
hr
Ë: 
	$°ime_t
() {

75 
_time
.
°_tod
 = 
tod
;

76 
_time
.
°_húes
 = 
hr
;

77 
	}
}

80 
	$signs
(Ë{ 
°ime_t
::
	`signs
(); 
	}
}

81 
	$_n‹mÆize
(Ë{ 
°ime_t
::
	`_n‹mÆize
(); 
	}
}

82 
	$n‹mÆize
(Ë{ 
°ime_t
::
	`n‹mÆize
(); 
	}
}

84 
	go°ªam
 &
	$¥öt
(
o°ªam
 &) const;

85 
	}
};

87 
	go°ªam
 &
	g°ime_ã°_t
::
	$¥öt
(
o°ªam
 &
s
) const

89 
	`W_FORM
(
s
)("(%d %d)", 
_time
.
°_tod
, _time.
°_húes
);

90  
s
;

91 
	}
}

93 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	g°ime_ã°_t
 &
	ggr
)

95  
	ggr
.
¥öt
(
s
);

99 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	gtimevÆ
 &
	gtv
)

101 
W_FORM
(
s
)("timevÆ(£c=%d u£c=%d)", 
	gtv
.
	gtv_£c
,Åv.
	gtv_u£c
);

102  
	gs
;

105 #ifde‡
USE_POSIX_TIME


106 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	gtime•ec
 &
	gts
)

108 
W_FORM
(
s
)("time•ec(£c=%dÇ£c=%d)", 
	gts
.
	gtv_£c
,Ås.
	gtv_n£c
);

109  
	gs
;

114 
	gtod
;

115 
	ghúes
;

118 
	$n‹mÆ
()

120 
i
;

121 
n
;

122 
°ime_ã°_t
 *
øw
;

124 
cout
 << "===========NORMAL ==================" << 
ídl
;

126 
øw
 = 
√w
 
°ime_ã°_t
[100];

127 i‡(!
øw
)

128 
	`W_FATAL
(
fcOUTOFMEMORY
);

129 
n
 = 0;

132 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(0, 8);

133 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(0, -8);

134 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(0, 
húes
 + 8);

135 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(0, -
húes
 - 9);

138 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, 8);

139 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, 
húes
 + 8);

140 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, -8);

141 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, -
húes
 - 8);

144 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, 9);

145 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, -9);

146 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, -9);

147 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, 9);

150 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, 
húes
 + 7);

151 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(
tod
, -
húes
 - 7);

152 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, -
húes
 - 7);

153 
	`√w
 (
øw
 + 
n
++Ë
	`°ime_ã°_t
(-
tod
, 
húes
 + 7);

155 
i
 = 0; i < 
n
; i++) {

156 
°ime_ã°_t
 
_n‹m
, 
n‹m
;

158 
_n‹m
 = 
n‹m
 = 
øw
[
i
];

160 
_n‹m
.
	`_n‹mÆize
();

161 
n‹m
.
	`n‹mÆize
();

163 
	`W_FORM
(
cout
)("[%d] =", 
i
);

164 
cout
 << 
øw
[
i
];

165 
cout
 << "Åÿ" << 
_n‹m
;

166 i‡(
n‹m
 !
_n‹m
)

167 
cout
 << " AND " << 
n‹m
 << " XXX";

169 
cout
 << 
ídl
;

172 
dñëe
 [] 
øw
;

173 
	}
}

176 
	s°ime_∑ú
 {

177 
°ime_ã°_t
 
	ml
;

178 
°ime_ã°_t
 
	mr
;

182 
	$¨ôhmëic
()

184 
i
;

185 
n
;

186 
°ime_∑ú
 *
øw
;

188 
cout
 << "===========ARITHMETIC ==================" << 
ídl
;

190 
øw
 = 
√w
 
°ime_∑ú
[100];

191 i‡(!
øw
)

192 
	`W_FATAL
(
fcOUTOFMEMORY
);

193 
n
 = 0;

195 
øw
[
n
].
l
 = 
	`°ime_ã°_t
(0, 8);

196 
øw
[
n
++].
r
 = 
	`°ime_ã°_t
(0, 5);

198 
øw
[
n
].
l
 = 
	`°ime_ã°_t
(1, 
húes
-7);

199 
øw
[
n
++].
r
 = 
	`°ime_ã°_t
(1, 8);

201 
øw
[
n
].
l
 = 
	`°ime_ã°_t
(1, 
húes
-7);

202 
øw
[
n
++].
r
 = 
	`°ime_ã°_t
(0, 8);

204 
øw
[
n
].
l
 = 
	`°ime_ã°_t
(1, 8);

205 
øw
[
n
++].
r
 = 
	`°ime_ã°_t
(-2, -9);

207 
cout
 << "=================add / subåa˘ =============" << 
ídl
;

208 
i
 = 0; i < 
n
; i++) {

209 
	`W_FORM
(
cout
)("[%d] => ", 
i
);

210 
cout
 << 
øw
[
i
].
l
 << " op ";

211 
cout
 << 
øw
[
i
].
r
 << ": ";

213 
cout
 << " +: " << (
°ime_ã°_t
)(
øw
[
i
].
l
 +Ñaw[i].
r
);

214 
cout
 << ", +': " << (
°ime_ã°_t
)(
øw
[
i
].
r
 +Ñaw[i].
l
);

215 
cout
 << ", -: " << (
°ime_ã°_t
)(
øw
[
i
].
l
 -Ñaw[i].
r
);

216 
cout
 << ", -': " << (
°ime_ã°_t
)(
øw
[
i
].
r
 -Ñaw[i].
l
);

218 
cout
 << 
ídl
;

221 
cout
 << "=================sˇlög ==============" << 
ídl
;

222 
i
 = 0; i < 
n
; i++) {

223 
	`W_FORM
(
cout
)("[%d] => ", 
i
);

224 
cout
 << 
øw
[
i
].
l
;

226 
cout
 << " * " << (
°ime_ã°_t
)(
øw
[
i
].
l
 * 2);

227 
cout
 << " *' " << (
°ime_ã°_t
)(
øw
[
i
].
l
 * 2.0);

229 
cout
 << " / " << (
°ime_ã°_t
)(
øw
[
i
].
l
 / 2);

230 
cout
 << " /' " << (
°ime_ã°_t
)(
øw
[
i
].
l
 / 2.0);

232 
cout
 << 
ídl
;

236 
dñëe
 [] 
øw
;

237 
	}
}

240 
	$c⁄vîsi⁄
()

242 
söãrvÆ_t
 
	`a
(
°ime_t
::
	`m£c
(
húes
));

243 
söãrvÆ_t
 
	`b
(
°ime_t
::
	`u£c
(
húes
));

244 
söãrvÆ_t
 
	`c
(
°ime_t
::
	`n£c
(
húes
));

246 
cout
 << "húe†=" << 
húes
 << 
ídl
;

247 
cout
 << "=====c⁄vîsi⁄ sètic†====" << 
ídl
;

248 
cout
 << "m£¯" << (
°ime_ã°_t
)
a
 << ' ' <<á << 
ídl
;

249 
cout
 << "u£¯" << (
°ime_ã°_t
)
b
 << ' ' << b << 
ídl
;

250 
cout
 << "n£¯" << (
°ime_ã°_t
)
c
 << ' ' << c << 
ídl
;

252 
cout
 << "=====ouçuàc⁄vîsi⁄ i¡egî†======" << 
ídl
;

253 
cout
 << "m£¯" << 
a
.
	`m£cs
(Ë<< 
ídl
;

254 
cout
 << "u£¯" << 
b
.
	`u£cs
(Ë<< 
ídl
;

255 
cout
 << "n£¯" << 
c
.
	`n£cs
(Ë<< 
ídl
;

257 
a
 = 
°ime_t
::
	`m£c
(25);

258 
b
 = 
°ime_t
::
	`u£c
(25);

259 
c
 = 
°ime_t
::
	`n£c
(25);

260 
cout
 << "=====ouçuàc⁄vîsi⁄ i¡egî†2 ======" << 
ídl
;

261 
cout
 << "m£¯" << 
a
.
	`m£cs
(Ë<< ' ' << 
b
.m£cs(Ë<< ' ' << 
c
.m£cs(Ë<< 
ídl
;

262 
cout
 << "u£¯" << 
a
.
	`u£cs
(Ë<< ' ' << 
b
.u£cs(Ë<< ' ' << 
c
.u£cs(Ë<< 
ídl
;

263 
cout
 << "n£¯" << 
a
.
	`n£cs
(Ë<< ' ' << 
b
.n£cs(Ë<< ' ' << 
c
.n£cs(Ë<< 
ídl
;

265 
cout
 << "======ouçuàˇ°†=======" << 
ídl
;

266 
a
 = 
	`°ime_ã°_t
(
tod
, 
húes
);

267 
timevÆ
 
tv
;

268 
tv
 = 
a
;

269 
cout
 << (
°ime_ã°_t
)
a
 << ": " << 
tv
 << 
ídl
;

270 #ifde‡
USE_POSIX_TIME


271 
time•ec
 
ts
;

272 
ts
 = 
a
;

273 
cout
 << (
°ime_ã°_t
)
a
 << ": " << 
ts
 << 
ídl
;

275 
cout
 << "ã° ovîÊow o‡ouçuàˇ°s" << 
ídl
;

276 
a
 = 
	`°ime_ã°_t
(0, 
HR_SECOND
-1);

277 
tv
 = 
a
;

278 
cout
 << (
°ime_ã°_t
)
a
 << ": " << 
tv
 << 
ídl
;

279 #ifde‡
USE_POSIX_TIME


280 
ts
 = 
a
;

281 
cout
 << (
°ime_ã°_t
)
a
 << ": " << 
ts
 << 
ídl
;

285 
°ime_ã°_t
 
	`ãn
(10,0);

286 
°ime_ã°_t
 
	`ã¬
(
ãn
);

287 
ã¬
.
	`n‹mÆize
();

288 
cout
 << "°ime_t(10,0Ë=" << 
ãn
;

289 
cout
 << 
ã¬
 << 
ídl
;

290 
	}
}

293 
	$ouçut
()

295 
cout
 << "=========FORMAT OUTPUT ========" << 
ídl
;

296 
°ime_t
 
now
 = stime_t::
	`now
();

298 
cout
 << "now =" << 
now
 << 
ídl
;

299 
cout
 << "now.ctime == ";

300 
now
.
	`˘ime
(
cout
);

301 
cout
 << 
ídl
;

304 
°ime_t
 
nows
 = 
now
.
	`£cs
();

305 
cout
 << "now.£c† =" << 
nows
 << 
ídl
;

306 
cout
 << "now.secs.ctime == ";

307 
nows
.
	`˘ime
(
cout
);

308 
cout
 << 
ídl
;

310 
°ime_t
 
œãr
 = stime_t::
	`now
();

311 
cout
 << "œã∏ =" << 
œãr
 << 
ídl
;

312 
söãrvÆ_t
 
dñè
 = 
œãr
 - 
now
;

313 
cout
 << "dñè =" << 
dñè
 << 
ídl
;

314 
	}
}

316 
	$misc
()

318 
cout
 << "=========MISCELLANY ========" << 
ídl
;

319 
°ime_t
 
now
 = stime_t::
	`now
();

321 
cout
 << "now = " << 
now
 << 
ídl
;

322 
	}
}

325 
	$maö
(
¨gc
, **
¨gv
)

327 
tod
 = 
¨gc
 > 1 ? 
	`©oi
(
¨gv
[1]) : 1;

328 
húes
 = (
¨gc
 > 2 ? 
	`©oi
(
¨gv
[2]Ë: 1Ë* 
HR_SECOND
;

330 
	`n‹mÆ
();

332 
	`¨ôhmëic
();

334 
	`c⁄vîsi⁄
();

336 
	`ouçut
();

338 
	`misc
();

341 
	}
}

	@src/fc/tests/rand.cpp

30 
	~"w.h
"

31 
	~"w_deföes.h
"

35 
	~"ønd48.h
"

40 #ifde‡
WORDS_BIGENDIAN


42 
	msign
:1;

43 
	mexp⁄ít
:11;

44 
	mm™t1
:20;

45 
	mm™t2
:32;

50 
	mm™t2
:32;

51 
	mm™t1
:20;

52 
	mexp⁄ít
:11;

53 
	msign
:1;

55 } 
	tw_õì_doubÀ
;

59 
	msign
:1;

60 
	mexp⁄ít
:11;

61 
	mm™t1
:20;

62 
	mm™t2
:32;

63 } 
	tw_õì_doubÀ_big
;

66 
	mm™t2
:32;

67 
	mm™t1
:20;

68 
	mexp⁄ít
:11;

69 
	msign
:1;

70 } 
	tw_õì_doubÀ_lôée
;

72 
	tUC
;

73 
UC
 
	t¨y
[8];

77 
	md
;

78 
sig√d48_t
 
	ms
;

79 
	ml
;

80 
w_õì_doubÀ
 
	mõì
;

81 
w_õì_doubÀ_big
 
	mbig
;

82 
w_õì_doubÀ_lôée
 
	mlô
;

83 
¨y
 
	mc
;

84 }
	tPUN
;

85 
p
(c⁄° *
°r
, c⁄° 
PUN
 &
u
);

86 
p
(c⁄° *
°r
, c⁄° 
unsig√d48_t
 &
u
);

87 
p
(c⁄° *
°r
, c⁄° 
sig√d48_t
 &
u
);

88 
p
(c⁄° *
°r
, c⁄° &
u
);

90 
	gønd‹ig
 : 
ønd48
 {

91 
ønd‹ig
(Ë{ 
£ed
(
RAND48_INITIAL_SEED
); }

92 
ønd‹ig
(c⁄° 
ønd48
 &
Ÿhî
Ë{ 
	g_°©e
 = othî.
_°©e
; }

93 
boﬁ
 
	g›î©‹
 =(c⁄° 
ønd‹ig
 & 
Ÿhî
)const

94 {  
_°©e
 =
Ÿhî
._state; }

95 
dump
–c⁄° *
°r
, 
boﬁ
 
debug
)const ;

98 
	gønd‹ig
::
	$dump
–c⁄° *
°r
, 
boﬁ
 
debug
) const

101 
d
;

102 
l
;

103 
w_õì_doubÀ
 
õì
;

104 } 
u
;

105 
u
.
l
 = 
_°©e
;

107 
cout
 << 
°r


108 << " hex: " << ::
hex
 << 
u
.
l
 << ::
dec
;

110 if(
debug
)

112 
cout


113 << " doubÀ: " << 
	`£çªcisi⁄
(21Ë<< 
u
.
d


114 << " sign: " << ::
hex
 << 
u
.
õì
.
sign
 << ::
dec


115 << "Éxp: " << ::
hex
 << 
u
.
õì
.
exp⁄ít
 << ::
dec


116 << " m™t1: " << ::
hex
 << 
u
.
õì
.
m™t1
 << ::
dec


117 << " m™t2: " << ::
hex
 << 
u
.
õì
.
m™t2
 << ::
dec
;

119 
cout
 << 
ídl
;

122 
tmp
 = 
_°©e
;

123 c⁄° 
m∂õr
 = 0x5deece66dull;

124 
tmp
 *
m∂õr
;

125 
cout
 << " _updateÖreview: "

126 << " sèã * 0x5dì˚66duŒ: " << ::
hex
 << 
tmp
 << ::
dec


129 
tmp
 += 0xb;

130 
cout


131 << " sèã + 0xb: " << ::
hex
 << 
tmp
 << ::
dec


133 
tmp
 = 
	`_mask
(tmp);

134 
cout


135 << " _mask(°©e): " << ::
hex
 << 
tmp
 << ::
dec


137 
cout


138 << 
ídl
;

139 
	}
}

144 
	gøndÆt
 : 
ønd‹ig
 {

145 
øndÆt
() { }

146 
øndÆt
(c⁄° 
ønd48
 &
Ÿhî
Ë: 
ønd‹ig
(other) { }

147 
dønd
() ;

150 
	gøndÆt
::
	$dønd
()

153 
d
;

154 
w_õì_doubÀ
 
õì
;

155 } 
u
;

159 
ßve_°©e
 = 
_°©e
;

161 
unsig√d48_t
 
tmp
 = 
	`_upd©e
();

162 
cout
 << 
ídl
;

164 
u
.
õì
.
sign
 = 0x0;

165 
u
.
õì
.
exp⁄ít
 = 0x0;

166 
u
.
õì
.
m™t1
 = 0x0;

167 
u
.
õì
.
m™t2
 = 0x0;

169 
	`p
("ALT cÀ¨ 0x0", 
u
.
d
);

170 
u
.
õì
.
exp⁄ít
 = 0x3ff;

171 
	`p
("ALT sëÉxp⁄íà0x3ff", 
u
.
d
);

172 
cout
 << 
ídl
;

173 
	`p
("ALT _upd©e()", 
tmp
);

175 
tmp
 <<= 4;

176 
	`p
("ALT _upd©e()<<4", 
tmp
);

177 
cout
 << 
ídl
;

179 
unsig√d48_t
 
tmp3
 = 
tmp
 & 0xfffff00000000ull;

180 
	`p
("ALT highÖ¨ào‡_upd©e()<<4", 
tmp3
);

182 
tmp3
 >>= 32;

183 
	`p
("ALT highÖ¨àshi·edÑight", 
tmp3
);

185 
u
.
õì
.
m™t1
 = (
tmp
 & 0xfffff00000000ull)>>32;

186 
	`p
("ALT së m™t1ÅÿhighÖ¨ào‡_upd©e()<<4", 
u
.
d
);

188 
tmp3
 = 
tmp
 & 0x0000ffffffffull;

189 
	`p
("ALTÜowÖ¨ào‡_upd©e()<<4", 
tmp3
);

191 
u
.
õì
.
m™t2
 = 
tmp
 & 0xffffffffull;

192 
	`p
("ALT së m™t2ÅÿlowÖ¨ào‡_upd©e()<<4", 
u
.
d
);

193 
_°©e
 = 
ßve_°©e
;

195 
u
.
õì
.
sign
 = 0x0;

196 
u
.
õì
.
exp⁄ít
 = 0x3ff;

197 
unsig√d48_t
 
tmp
 = 
	`_upd©e
();

198 
tmp
 <<= 4;

199 
unsig√d48_t
 
tmp3
 = 
tmp
 & 0xfffff00000000ull;

200 
tmp3
 >>= 32;

201 
u
.
õì
.
m™t1
 = (
tmp
 & 0xfffff00000000ull)>>32;

202 
tmp3
 = 
tmp
 & 0x0000ffffffffull;

203 
u
.
õì
.
m™t2
 = 
tmp
 & 0xffffffffull;

205  
u
.
d
-1.0;

206 
	}
}

208 
ønd48
 
	gés_∫g
 = 
RAND48_INITIALIZER
;

209 
ønd‹ig
 
	g‹ig
;

210 
øndÆt
 
	gÆt
;

212 
	~<w_gë›t.h
>

213 
	~<io°ªam
>

215 
åõs
(0);

216 
boﬁ
 
vîbo£
(
Ál£
);

217 
boﬁ
 
debug
(
Ál£
);

218 
boﬁ
 
shi·
(
Ál£
);

219 
boﬁ
 
u£_dønd
(
Ál£
);

220 
boﬁ
 
u£_øndn
(
Ál£
);

221 
boﬁ
 
u£_Æt
(
Ál£
);

222 
	g£ed
 = 
RAND48_INITIALIZER
;

223 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

225 
îr‹s
 = 0;

226 
c
;

228 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "adD¡:sS:v")Ë!
EOF
) {

229 
c
) {

231 
u£_Æt
 = 
åue
;

234 
u£_øndn
 = 
åue
;

237 
debug
 = 
åue
;

240 
u£_dønd
 = 
åue
;

243 
vîbo£
 = 
åue
;

247 
åõs
 = 
	`©ﬁ
(
›èrg
);

250 
shi·
 = 
åue
;

253 
£ed
 = ()
	`©ﬁ
(
›èrg
);;

254 
‹ig
.
	`£ed
(
£ed
);

257 
îr‹s
++;

261 i‡(
îr‹s
) {

262 
˚º


264 << 
¨gv
[0]

273 << 
ídl
;

276  
îr‹s
 ? -1 : 
›töd
;

277 
	}
}

278 
	$p
(c⁄° *
°r
, c⁄° 
PUN
 &
u
)

280 
cout
 << 
°r


281 << " doubÀ: " << 
	`£çªcisi⁄
(21Ë<< 
u
.
d


282 << " hex: " << ::
hex
 << 
u
.
l
 << ::
dec


283 << " sign: " << ::
hex
 << 
u
.
õì
.
sign
 << ::
dec


284 << "Éxp: " << ::
hex
 << 
u
.
õì
.
exp⁄ít
 << ::
dec


285 << " m™t1: " << ::
hex
 << 
u
.
õì
.
m™t1
 << ::
dec


286 << " m™t2: " << ::
hex
 << 
u
.
õì
.
m™t2
 << ::
dec
;

287 
cout
 << " -> " ;

289 
i
=0;i < 8; i++) {

290 
cout
 << ::
hex
 << " " << (
u
.
c
[
i
]Ë<< ::
dec
;

292 
cout
 << 
ídl
;

293 
	}
}

294 
	$p
(c⁄° *
°r
, c⁄° &
d
)

296 
PUN
 
u
;

297 
u
.
d
 = d;

298 
	`p
(
°r
, 
u
);

299 
	}
}

300 
	$p
(c⁄° *
°r
, c⁄° 
unsig√d48_t
 &
g
)

302 
PUN
 
u
;

303 
u
.
s
 = 
g
;

304 
	`p
(
°r
, 
u
);

305 
	}
}

306 
	$p
(c⁄° *
°r
, c⁄° 
sig√d48_t
 &
g
)

308 
PUN
 
u
;

309 
u
.
s
 = 
g
;

310 
	`p
(
°r
, 
u
);

311 
	}
}

315 
	$maö
(
¨gc
, *
¨gv
[])

317 if(
vîbo£
) {

318 #ifde‡
WORDS_BIGENDIAN


319 
cout
 << "BIG ENDIAN" << 
ídl
;

321 
cout
 << "LITTLE ENDIAN" << 
ídl
;

323 
PUN
 
u
;

324 
u
.
big
.
sign
 = 0x1;

325 
u
.
big
.
exp⁄ít
 = 0x123;

326 
u
.
big
.
m™t1
 = 0xaaaaa;

327 
u
.
big
.
m™t2
 = 0xbbccddee;

328 
	`p
("£àu.big ", 
u
.
s
);

329 
u
.
lô
.
sign
 = 0x1;

330 
u
.
lô
.
exp⁄ít
 = 0x123;

331 
u
.
lô
.
m™t1
 = 0xaaaaa;

332 
u
.
lô
.
m™t2
 = 0xbbccddee;

333 
	`p
("£àu.lôée", 
u
.
s
);

336 
e
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

337 if(
e
<0Ë
	`exô
(e);

338 
e
 = 0;

340 
Æt
.
_°©e
 = 
‹ig
._state;

344 
unsig√d48_t
 
X
 = 
Æt
.
_°©e
;

345 c⁄° *
fûe
 = "./rand48-test";

346 
of°ªam
 
	`O
(
fûe
, 
ios
::
out
);

347 
	`out
 (
O
,
X
);

348 
if°ªam
 
	`I
(
fûe
);

349 
	`ö
 (
I
, 
X
);

350 if(
X
 !
Æt
.
_°©e
) {

351 
˚º
 << "Lookáà" << 
fûe
 << " : sèã should bê" << 
Æt
.
_°©e


352 << " buàwa†öpuàa†" << 
X


353 << 
ídl
;

357 
i
=0; i < 
åõs
; i++)

359 
cout


361 << 
ídl


362 << ::
dec
 << (
i
+1) << ": " ;

364 if(
vîbo£
 || 
debug
Ë
‹ig
.
	`dump
("ORIG", debug);

365 if((
vîbo£
 || 
debug
Ë&& 
u£_Æt
Ë
Æt
.
	`dump
("ALT ", debug);

367 if–
‹ig
 =
Æt
 )

369 if(
vîbo£
Ë
cout
 << 
__LINE__
 << " --------- MATCH " << 
ídl
;

373 if(
vîbo£
Ë
cout
 << 
__LINE__
 << " --------- MISMATCH " << 
ídl
;

374 if(
vîbo£
Ë
‹ig
.
	`dump
("ORIG", 
debug
);

375 if(
vîbo£
 && 
u£_Æt
Ë
Æt
.
	`dump
("ALT ", 
debug
);

377 if(
u£_dønd
)

379 
d
=
‹ig
.
	`dønd
();

380 
f
=
Æt
.
	`dønd
();

381 if(
vîbo£
 && 
u£_Æt
)

383 if–
‹ig
 =
Æt
 )

385 
cout
 << 
__LINE__
 << " --------- MATCH " << 
ídl
;

389 
cout
 << 
__LINE__
 << " --------- MISMATCH " << 
ídl
;

390 
‹ig
.
	`dump
("ORIG", 
debug
);

391 
Æt
.
	`dump
("ALT ", 
debug
);

394 if(
vîbo£
Ë
‹ig
.
	`dump
("ORIG", 
debug
);

397 
cout
 << 
	`£çªcisi⁄
(21)

398 << " dønd: orig=" << 
d
 ;

400 if(
u£_Æt
)

402 
cout
 << "á…=" << 
f
 ;

404 if(
d
 !
f
) {

405 
cout
 << " ************ERR" << 
ídl
 ;

406 
e
++;

407 
	`p
(" orig.dønd:", 
d
);

408 
	`p
("á….dønd:", 
f
);

411 
cout
 << 
ídl
;

415 
sig√d48_t
 
g

‹ig
.
	`ønd
();

416 
sig√d48_t
 
h
 = 
Æt
.
	`ønd
();

417 
cout
 << "Ñ™d: orig=" << ::
hex
 << 
g
 ;

418 if(
shi·
) {

419 
cout
 << " shi· " << ::
hex
 << (
g
<<32);

422 if(
u£_Æt
) {

423 
cout
 << "á…=" << 
h
 << ::
dec
 ;

424 if(
g
 !
h
) {

425 
cout
 << " ************ERR" ;

426 
e
++;

427 
	`p
(" orig.dønd:", 
g
);

428 
	`p
("á….dønd:", 
h
);

431 
cout
 << 
ídl
;

434 if(
u£_øndn
) {

435 
sig√d48_t
 
g

‹ig
.
	`øndn
(23*
åõs
);

436 
sig√d48_t
 
h
 = 
Æt
.
	`øndn
(23*
åõs
);

437 
cout


438 << "Ñ™dn(" << 23*
åõs
 << "): orig=" << 
g
 ;

439 if(
u£_Æt
) {

440 
cout
 << "á…=" << 
h
 ;

441 if(
g
 !
h
) {

442 
cout
 << " ************ERR" ;

443 
e
++;

444 
	`p
(" orig.dønd:", 
g
);

445 
	`p
("á….dønd:", 
h
);

448 
cout
 << 
ídl
;

451 
	`w_as£π1
(
e
==0) ;

452  
e
;

453 
	}
}

	@src/fc/tests/random.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<ønd48.h
>

37 
ønd48
 
	ggíî©‹
;

40 
	$maö
(
¨gc
, *
¨gv
[])

42 if(
¨gc
 > 1) {

43 
£ed
;

44 if–(
£ed
 = 
	`©oi
(
¨gv
[1])) != 0) {

45 
gíî©‹
.
	`£ed
(
£ed
);

46 
cout
 << 
gíî©‹
.
	`ønd
(Ë<<
ídl
 ;

50 
i
;

51 
i
=1; i<25; i++) {

52 
˚º
 << "i"<< 
i
 << " ";

53 
˚º
 << 
gíî©‹
.
	`ønd
() ;

54 
˚º
 <<
ídl
;

56 
i
=1; i<25; i++) {

57 
˚º
 << "i"<< 
i
 << " ";

58 
	`W_FORM2
(
˚º
, ("%10.10‡",
gíî©‹
.
	`dønd
()) );

59 
˚º
 <<
ídl
;

61 
i
=1; i<25; i++) {

62 
˚º
 << "i"<< 
i
 << " ";

63 
	`W_FORM2
(
˚º
, ("%d (0->25Ë",
gíî©‹
.
	`øndn
(25)) );

64 
˚º
 <<
ídl
;

66 
˚º
 << "d⁄e." << 
ídl
;

69 
	}
}

	@src/fc/tests/rc.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<c°ddef
>

36 
	~<w.h
>

39 
w_rc_t
 
	$ã°ög2
()

42 
w_rc_t
 
rc
 = 
	`RC
(
fcOS
);

43 
	`RC_AUGMENT
(
rc
);

44 
	`RC_AUGMENT
(
rc
);

45 
	`RC_AUGMENT
(
rc
);

46 
	`RC_AUGMENT
(
rc
);

47 
	`RC_AUGMENT
(
rc
);

50 i‡(
rc
.
	`is_îr‹
()) {; }

52  
rc
;

53 
	}
}

54 
w_rc_t
 
	$ã°ög1
()

56  
	`ã°ög2
();

57 
	}
}

59 
w_rc_t
 
	$ã°ög
()

62 
w_rc_t
 
rc
 = 
	`RC
(
fcOS
);

63 
	`RC_AUGMENT
(
rc
);

64 
	`RC_PUSH
(
rc
, 
fcINTERNAL
);

65 
	`RC_AUGMENT
(
rc
);

66 
	`RC_PUSH
(
rc
, 
fcFULL
);

67 
	`RC_AUGMENT
(
rc
);

68 
	`RC_PUSH
(
rc
, 
fcEMPTY
);

69 
	`RC_AUGMENT
(
rc
);

70 
	`RC_PUSH
(
rc
, 
fcNOTFOUND
);

71 
	`RC_AUGMENT
(
rc
);

74 i‡(
rc
.
	`is_îr‹
()) {; }

76  
rc
;

77 
	}
}

79 
w_rc_t
 
	$ã°ög_ok
()

81  
RCOK
;

82 
	}
}

84 
	$maö
()

87 
w_rc_t
::
	`£t_ªtu∫_check
(
åue
, 
Ál£
);

90 
cout
 << "Ex≥˘Åwÿ'îr‹ÇŸ checked' mesßges" << 
ídl
;

92 
w_rc_t
 
rc
;

93 
rc
 = 
	`ã°ög
();

97 
	`ã°ög_ok
();

100 if(
	`ã°ög_ok
().
	`is_îr‹
()) {

101 
cout
 << "FAILURE: Thi†shouldÇevî h≠≥n!" << 
ídl
;

104 
cout
 << "Ex≥˘ 3 f‹m†o‡thê°rög o‡îr‹s" << 
ídl
;

106 
w_rc_t
 
rc
 = 
	`ã°ög
();

111 
cout
 << "*************************************" << 
ídl
;

112 
w_rc_i
 
	`ôî
(
rc
);

113 
cout
 << 
ídl
 << "1 : List ofÉrrorÇumbers:" <<Éndl;

114 
w_ba£_t
::
öt4_t
 
e
 = 
ôî
.
	`√xt_î∫um
();

115 
e
!=0;É = 
ôî
.
	`√xt_î∫um
()) {

116 
cout
 << "îr‹ = " << 
e
 << 
ídl
;

118 
cout
 << "EndÜi° o‡îr‹Çumbîs:" << 
ídl
;

126 
w_rc_i
 
	`ôî
(
rc
);

127 
cout
 << "*************************************" << 
ídl
;

128 
cout
 << 
ídl
 << "2 : List of w_error_t:" <<Éndl;

129 c⁄° 
w_îr‹_t
 *
e
 = 
ôî
.
	`√xt
();

130 
e
;

131 
e
 = 
ôî
.
	`√xt
()) {

132 
cout
 << "îr‹ = " << *
e
 << 
ídl
;

134 
cout
 << "EndÜi° o‡w_îr‹_t:" << 
ídl
;

137 
cout
 << "*************************************" << 
ídl
;

138 
cout
 << 
ídl
 << "3 :ÖrintÅheÑc:" <<Éndl;

139 
cout
 << "îr‹ = " << 
rc
 << 
ídl
;

140 
cout
 << "EndÖröàthêrc:" << 
ídl
;

145 
w_rc_t
 
rc
 = 
	`ã°ög1
();

146 
	`w_as£π1
(
rc
.
	`is_îr‹
());

147 
cout
 << " ORIG:" << 
rc
 << 
ídl
;

148 
w_rc_i
 
	`ô
(
rc
);

150 
w_rc_t
 
	`rc2
(
rc
);

151 
cout
 << " COPY CONSTRUCTOR: " << 
rc2
 << 
ídl
;

153 
rc2
 = 
rc
;

154 
	`w_as£π1
(
rc2
.
	`is_îr‹
());

155 
cout
 << " COPY OPERATOR: " << 
rc2
 << 
ídl
;

159 
	}
}

	@src/fc/tests/ss.cpp

34 
	~"w_°r°ªam.h
"

35 
	~<io°ªam
>

36 
	~<c°dlib
>

38 
	$ã°ô
(
boﬁ
 
ãrmö©e
, 
w_o°r°ªam
 &
s
,

39 
¨gc
, **
¨gv
)

41 
i
 = 2; i < 
¨gc
; i++) {

42 i‡(
i
>2Ë
s
 << ' ' ;

43 
s
 << 
¨gv
[
i
];

46 i‡(
ãrmö©e
)

47 
s
 << 
íds
;

49 
cout
 << "c_°∏@ " << (*Ë
s
.
	`c_°r
(Ë<< 
ídl
;

50 c⁄° *
t
 = 
s
.
	`c_°r
();

51 
cout
 << "°æí = " << 
	`°æí
(
t
Ë<< 
ídl
;

52 
cout
 << "bu‡'" << 
t
 << "'" << 
ídl
;

53 
	}
}

55 
	$maö
(
¨gc
, **
¨gv
)

57 
Àn
 = 30;

58 i‡(
¨gc
 > 1)

59 
Àn
 = 
	`©oi
(
¨gv
[1]);

61 
cout
 << "À¿" << 
Àn
 ;

62 
cout
 << ";árgs = " ;

63 
i
=2; i<
¨gc
; i++)

65 
cout
 << 
¨gv
[
i
];

67 
cout
 << 
ídl
;

68 
boﬁ
 
ãrmö©e
 = 
Ál£
;

69 i‡(
Àn
 < 0) {

70 
ãrmö©e
 = 
åue
;

71 
Àn
 = -len;

73 
w_o°r°ªam_buf
 
	`s
(
Àn
);

74 
w_o°r°ªam
 
s2
;

76 
	`ã°ô
(
ãrmö©e
, 
s
, 
¨gc
, 
¨gv
);

77 
	`ã°ô
(
ãrmö©e
, 
s2
, 
¨gc
, 
¨gv
);

80 
	}
}

	@src/fc/tests/stats.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

37 
	$maö
()

40 
f
= 3.14159;

42 
i
;

43 
i
=0; i < 10000000; i++) {

44 #ifde‡
AÕha


45 
f
 *= 3.0/2.9999;

47 
f
 *= 3.0/2.8;

52 #ifde‡
AÕha


53 
cout
 << "Êﬂàf=" << 
f
 << 
ídl
;

55 
cout
 << "Êﬂàf=" << (
f
Ë<< 
ídl
;

57 
cout
 << 
Êush
;

60 
	}
}

	@src/fc/tests/stats2.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<w_ba£.h
>

36 
	~<w_debug.h
>

38 
	~"w_°©.h
"

39 #unde‡
TEST1


40 #unde‡
TEST2


41 #i‡
deföed
(
TEST1
Ë|| deföed(
TEST2
)

42 
	~"w_°©i°ics.h
"

44 
	~"ã°_°©.h
"

46 
	~<io°ªam
>

48 
°©°e°
();

50 
	$maö
()

53 
	`DBG
(<<"app_test: main");

54 
	`°©°e°
();

56 
	}
}

61 
	#LINENO
 " "

	)

63 
	$°©°e°
()

68 
˛ass
 
ã°_°©
 
TSTA
;

69 
˛ass
 
ã°_°©
 
TSTB
;

70 
w_rc_t
 
e
;

71 
TSTA
.
	`compuã
();

72 
TSTB
.
	`dec
();

77 
cout
 << 
TSTA
;

78 
cout
 << 
TSTB
;

80 #ifde‡
TEST1


83 
cout
 << "ST.¥ötf():" << 
ídl
;

84 
ST
.
	`¥ötf
();

85 
cout
 << 
ídl
;

87 
cout
 << "couà<< ST:" << 
ídl
;

88 
cout
 << 
ST
;

89 
cout
 << 
ídl
;

97 
cout
 << "My ownÖretty formatting for module : "

98 << 
ST
.
	`moduÀ
(
TEST_i
Ë<< 
ídl
;

99 
	`W_FORM2
(
cout
,("\t%-30.30s %10.10d",

100 
ST
.
	`°rög
(
TEST_i
), ST.
	`öt_vÆ
(TEST_i)) );

101 
cout
 << 
ídl
;

102 
	`W_FORM2
(
cout
,("\t%-30.30s %10.10u",

103 
ST
.
	`°rög
(
TEST_j
), ST.
	`uöt_vÆ
(TEST_j)) );

104 
cout
 << 
ídl
;

105 
	`W_FORM2
(
cout
,("\t%-30.30s %10.6f",

106 
ST
.
	`°rög
(
TEST_k
), ST.
	`Êﬂt_vÆ
(TEST_k)) );

107 
cout
 << 
ídl
;

108 
	`W_FORM2
(
cout
,("\t%-30.30s %10.10u",

109 
ST
.
	`°rög
(
TEST_v
), ST.
	`ul⁄g_vÆ
(TEST_v)) );

110 
cout
 << 
ídl
;

111 
cout
 << 
ídl
;

116 
cout
 << "Ex≥˘ somêunknowns--Åhe£áªÉº‹ ca£s:" <<
ídl
;

117 
cout
 << 
ST
.
	`ty≥ch¨
(
TEST_i
Ë<< ST.
	`ty≥°rög
(
TEST_STATMIN
Ë<< 
ídl
;

118 
cout


119 << 
ST
.
	`ty≥°rög
(-1)

120 << 
ST
.
	`°rög
(-1,-1)<< ST.
	`Êﬂt_vÆ
(-1,-1)

121 << 
ídl
;

124 #ifde‡
TEST2


127 c⁄° 
w_°©i°ics_t
 &
CUR
 = 
ST
;

129 
cout
 << 
LINENO
 << 
ídl
;

130 
TSTA
.
	`öc
();

131 
cout
 << 
LINENO
<< " :******* TSTA.öc(): " << 
ídl
;

132 
CUR
.
	`¥ötf
();

133 
cout
 << 
ídl
;

138 
	}
}

	@src/fc/tests/test_me.h

53 #i‚de‡
__TEST_ME_H


54 
	#__TEST_ME_H


	)

56 
	~"w.h
"

57 
	~<c°dio
>

58 
	~<uni°d.h
>

59 
	~<sys/waô.h
>

60 
	~<î∫o.h
>

61 
	~<c°dlib
>

63 
	#EXPECT_ASSERT
(
x
) do { \

64 
°d
::
	`Ârötf
(
°dout
, "\nEx≥˘ögá¿as£πi⁄áàlöê%d...\n", 
__LINE__
); \

65 
°d
::
	`fÊush
(
°dout
); \

66 
pid_t
 
pid
 = 
	`f‹k
(); \

67 if(
pid
 == 0) { \

68 
x
; \

69 
°d
::
	`Ârötf
(
°dout
, "\nExôög 0áàlöê%d\n", 
__LINE__
); \

70 
°d
::
	`exô
(0); \

73 
	`w_as£π0
(
pid
 > 0); \

74 
°©us
; \

75 
îr
 = 
	`waô
(&
°©us
); \

76 
	`w_as£π0
(
îr
 !
ECHILD
); \

77 
	`w_as£π0
(
îr
 !
EINTR
); \

78 
	`w_as£π0
(
îr
 !
EINVAL
); \

79 if(!
	`WIFSIGNALED
(
°©us
)) { \

80 
°d
::
	`Ârötf
(
°dout
, "%s:%d: `%s' didÇotássertásÉxpected\n", \

81 
__FILE__
, 
__LINE__
, #x); \

82 
°d
::
	`Ârötf
(
°dout
, "\naborting...\n"); \

83 
°d
::
	`ab‹t
(); \

85 
°d
::
	`Ârötf
(
°dout
, "\nsuccess...\n"); \

87 } 0)

	)

	@src/fc/tests/test_stat.cpp

30 
	~"w_deföes.h
"

33 
	~"w_°©.h
"

34 #i‡
deföed
(
TEST1
Ë|| deföed(
TEST2
)

35 
	~"w_°©i°ics.h
"

37 
	~"ã°_°©.h
"

38 
	~"ã°_°©_out_gí.˝p
"

40 
	~<io°ªam
>

44 #i‡
deföed
(
TEST1
Ë|| deföed(
TEST2
)

46 
	~"ã°_°©_°©_gí.˝p
"

50 c⁄° *
	gã°_°©
 ::
°©_«mes
[] = {

51 
	~"ã°_°©_msg_gí.h
"

52 
NULL


57 
	gã°_°©
::
	$dec
()

59 
i
--;

60 
j
--;

61 
k
-=1.0;

62 
v
 --;

63 
	`compuã
();

64 
	}
}

66 
	gã°_°©
::
	$öc
()

68 
i
++;

69 
j
++;

70 
k
+=1.0;

71 
v
 ++;

72 
	`compuã
();

73 
	}
}

	@src/fc/tests/test_stat.h

30 #i‚de‡
TEST_STAT_H


31 
	#TEST_STAT_H


	)

33 
	~"w_deföes.h
"

37 
	~<w_°©.h
>

39 ˛as†
	cã°_°©
 {

41 
	~"ã°_°©_°ru˘_gí.h
"

43 
	mpublic
:

44 
	$ã°_°©
() :

45 
	`b
(1),

46 
	`f
(5.4321),

47 
	`i
(300),

48 
	`j
(()0x333),

49 
	`u
(3),

50 
	`k
(()1.2345),

51 
	`l
(4),

52 
	`v
(0xffffffffffffffffull),

53 
	`x
(5),

54 
	`d
(6.789),

55 
	$sum
(0.0) { }

57 
	`öc
();

58 
	`dec
();

59 
	$compuã
() {

60 
sum
 = ()(
i
 + 
j
 + 
k
);

61 
	}
}

	@src/fc/tests/test_stat_collect_enum_gen.h

1 #i‚de‡
TEST_STAT_COLLECT_ENUM_GEN_H


2 
	#TEST_STAT_COLLECT_ENUM_GEN_H


	)

36 
	gVT_b
,

37 
	gVT_f
,

38 
	gVT_i
,

39 
	gVT_j
,

40 
	gVT_u
,

41 
	gVT_k
,

42 
	gVT_l
,

43 
	gVT_v
,

44 
	gVT_x
,

45 
	gVT_d
,

46 
	gVT_sum
,

	@src/fc/tests/test_stat_collect_gen.cpp

1 #i‚de‡
TEST_STAT_COLLECT_GEN_CPP


2 
	#TEST_STAT_COLLECT_GEN_CPP


	)

36 
	gt
.
£t_ba£
(
VT_b
, 
TMP_GET_STAT
(
b
));

37 
	gt
.
£t_ba£
(
VT_f
, 
TMP_GET_STAT
(
f
));

38 
	gt
.
£t_ba£
(
VT_i
, 
TMP_GET_STAT
(
i
));

39 
	gt
.
£t_ba£
(
VT_j
, 
TMP_GET_STAT
(
j
));

40 
	gt
.
£t_ba£
(
VT_u
, 
TMP_GET_STAT
(
u
));

41 
	gt
.
£t_ba£
(
VT_k
, 
TMP_GET_STAT
(
k
));

42 
	gt
.
£t_ba£
(
VT_l
, 
TMP_GET_STAT
(
l
));

43 
	gt
.
£t_ba£
(
VT_v
, 
TMP_GET_STAT
(
v
));

44 
	gt
.
£t_ba£
(
VT_x
, 
TMP_GET_STAT
(
x
));

45 
	gt
.
£t_ba£
(
VT_d
, 
TMP_GET_STAT
(
d
));

46 
	gt
.
£t_ba£
(
VT_sum
, 
TMP_GET_STAT
(
sum
));

	@src/fc/tests/test_stat_dec_gen.cpp

1 #i‚de‡
TEST_STAT_DEC_GEN_CPP


2 
	#TEST_STAT_DEC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gã°_°©
 &

39 
	g›î©‹
-=(
ã°_°©
 &
s
,c⁄° 
	gã°_°©
 &
	gt
)

41 
	gs
.
	gb
 -
t
.
b
;

42 
	gs
.
	gf
 -
t
.
f
;

43 
	gs
.
	gi
 -
t
.
i
;

44 
	gs
.
	gj
 -
t
.
j
;

45 
	gs
.
	gu
 -
t
.
u
;

46 
	gs
.
	gk
 -
t
.
k
;

47 
	gs
.
	gl
 -
t
.
l
;

48 
	gs
.
	gv
 -
t
.
v
;

49 
	gs
.
	gx
 -
t
.
x
;

50 
	gs
.
	gd
 -
t
.
d
;

51 
	gs
.
	gsum
 -
t
.
sum
;

52  
	gs
;

	@src/fc/tests/test_stat_inc_gen.cpp

1 #i‚de‡
TEST_STAT_INC_GEN_CPP


2 
	#TEST_STAT_INC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gã°_°©
 &

39 
	g›î©‹
+=(
ã°_°©
 &
s
,c⁄° 
	gã°_°©
 &
	gt
)

41 
	gs
.
	gb
 +
t
.
b
;

42 
	gs
.
	gf
 +
t
.
f
;

43 
	gs
.
	gi
 +
t
.
i
;

44 
	gs
.
	gj
 +
t
.
j
;

45 
	gs
.
	gu
 +
t
.
u
;

46 
	gs
.
	gk
 +
t
.
k
;

47 
	gs
.
	gl
 +
t
.
l
;

48 
	gs
.
	gv
 +
t
.
v
;

49 
	gs
.
	gx
 +
t
.
x
;

50 
	gs
.
	gd
 +
t
.
d
;

51 
	gs
.
	gsum
 +
t
.
sum
;

52  
	gs
;

	@src/fc/tests/test_stat_msg_gen.h

1 #i‚de‡
TEST_STAT_MSG_GEN_H


2 
	#TEST_STAT_MSG_GEN_H


	)

	@src/fc/tests/test_stat_out_gen.cpp

1 #i‚de‡
TEST_STAT_OUT_GEN_CPP


2 
	#TEST_STAT_OUT_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	go°ªam
 &

39 
	g›î©‹
<<(
	go°ªam
 &
	go
,c⁄° 
	gã°_°©
 &
	gt
)

41 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "b " << 
	gt
.
	gb
 << 
	gídl
;

42 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "‡" << 
	gt
.
	gf
 << 
	gídl
;

43 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "ò" << 
	gt
.
	gi
 << 
	gídl
;

44 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "j " << 
	gt
.
	gj
 << 
	gídl
;

45 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "u " << 
	gt
.
	gu
 << 
	gídl
;

46 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "k " << 
	gt
.
	gk
 << 
	gídl
;

47 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "»" << 
	gt
.
	gl
 << 
	gídl
;

48 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "v " << 
	gt
.
	gv
 << 
	gídl
;

49 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "x " << 
	gt
.
	gx
 << 
	gídl
;

50 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "d " << 
	gt
.
	gd
 << 
	gídl
;

51 
	go
 << 
£tw
(
W_ã°_°©
Ë<< "sum " << 
	gt
.
	gsum
 << 
	gídl
;

52  
	go
;

	@src/fc/tests/test_stat_struct_gen.h

1 #i‚de‡
TEST_STAT_STRUCT_GEN_H


2 
	#TEST_STAT_STRUCT_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	gw_ba£_t
::
ba£_°©_t
 
b
;

39 
	gw_ba£_t
::
ba£_Êﬂt_t
 
f
;

40 
	gw_ba£_t
::
ba£_°©_t
 
i
;

41 
	gw_ba£_t
::
ba£_°©_t
 
j
;

42 
	gw_ba£_t
::
ba£_°©_t
 
u
;

43 
	gw_ba£_t
::
ba£_Êﬂt_t
 
k
;

44 
	gw_ba£_t
::
ba£_°©_t
 
l
;

45 
	gw_ba£_t
::
ba£_°©_t
 
v
;

46 
	gw_ba£_t
::
ba£_°©_t
 
x
;

47 
	gw_ba£_t
::
ba£_Êﬂt_t
 
d
;

48 
	gw_ba£_t
::
ba£_Êﬂt_t
 
sum
;

49 
	gpublic
:

50 
‰õnd
 
o°ªam
 &

51 
›î©‹
<<(
o°ªam
 &
o
,c⁄° 
	gã°_°©
 &
	gt
);

52 
	gpublic
:

53 
‰õnd
 
ã°_°©
 &

54 
›î©‹
+=(
ã°_°©
 &
s
,c⁄° 
	gã°_°©
 &
	gt
);

55 
	gpublic
:

56 
‰õnd
 
ã°_°©
 &

57 
›î©‹
-=(
ã°_°©
 &
s
,c⁄° 
	gã°_°©
 &
	gt
);

58 c⁄° *
	g°©_«mes
[];

59 c⁄° *
	g°©_ty≥s
;

60 
	#W_ã°_°©
 3 + 2

	)

	@src/fc/tls.cpp

25 
	~"és.h
"

26 
usög
 
«me•a˚
 
	gés_åicks
;

28 
	~<ve˘‹
>

29 
	~<utûôy
>

31 
	#STR
(
x
Ë
	`STR2
(x)

	)

32 
	#STR2
(
x
Ë#x

	)

34 
	#ATTEMPT
(
a˘i⁄
) do { \

35 
îr
 = 
a˘i⁄
; \

36 if(
îr
 != 0) { \

37 
°d
::
	`¥ötf
("%†Áûed wôhÉº‹ %d\n", #a˘i⁄, 
îr
); \

38 
°d
::
	`exô
(-1); \

40 } 0)

	)

42 
	g°d
::
	tve˘‹
<
	t°d
::
	t∑ú
<(*)(), (*)()> > 
	tés_fun˘i⁄_li°
;

44 
és_fun˘i⁄_li°
* 
ªgi°îed_és
(
NULL
);

45 
boﬁ
 
	gés_m™agî_öôülized
 = 
Ál£
;

47 
	gés_m™agî
::
	$globÆ_öô
() {

48 if(
és_m™agî_öôülized
)

50 
és_m™agî_öôülized
 = 
åue
;

51 
ªgi°îed_és
 = 
√w
 
és_fun˘i⁄_li°
;

52 
	}
}

53 
	gés_m™agî
::
	$globÆ_föi
() {

54 if(
és_m™agî_öôülized
) {

55 
dñëe
 
ªgi°îed_és
;

56 
ªgi°îed_és
 = 
NULL
;

57 
és_m™agî_öôülized
 = 
Ál£
;

59 
	}
}

61 
	gés_m™agî
::
ªgi°î_és
((*
öô
)(), (*
föi
)()) {

65 (*
öô
)();

66 
ªgi°îed_és
->
	`push_back
(
°d
::
	`make_∑ú
(
öô
, 
föi
));

67 
	}
}

71 
__thªad
 
boﬁ
 
	gés_m™agî
::
_thªad_öôülized
(
Ál£
);

74 
	gés_m™agî
::
	$thªad_öô
() {

75 if(
_thªad_öôülized
)

77 
_thªad_öôülized
 = 
åue
;

78 
és_fun˘i⁄_li°
::
ôî©‹
 
ô
=
ªgi°îed_és
->
	`begö
(); ià!ªgi°îed_és->
	`íd
(); ++it)

79 (*
ô
->
fú°
)();

80 
	}
}

83 
	gés_m™agî
::
	$thªad_föi
() {

84 if(!
_thªad_öôülized
)

86 
_thªad_öôülized
 = 
Ál£
;

87 
és_fun˘i⁄_li°
::
ôî©‹
 
ô
=
ªgi°îed_és
->
	`begö
(); ià!ªgi°îed_és->
	`íd
(); ++it)

88 (*
ô
->
£c⁄d
)();

89 
	}
}

	@src/fc/tls.h

25 #i‚de‡
__TLS_H


26 
	#__TLS_H


	)

28 
	~<±hªad.h
>

29 
	~<√w
>

55 
«me•a˚
 
	gés_åicks
 {

78 ˛as†
	cés_m™agî
 {

79 
	gpublic
:

80 
globÆ_öô
();

81 
globÆ_föi
();

82 
ªgi°î_és
((*
öô
)(), (*
föi
)());

83 
thªad_öô
();

84 
thªad_föi
();

85 
__thªad
 
boﬁ
 
	g_thªad_öôülized
;

97 
	sés_m™agî_schw¨z
 {

99 
és_m™agî_schw¨z
(Ë{ 
	gés_m™agî
::
globÆ_öô
(); }

101 ~
és_m™agî_schw¨z
(Ë{ 
	gés_m™agî
::
globÆ_föi
(); }

103 
és_m™agî_schw¨z
 
	gésm_schw¨z_⁄e_™d_⁄ly
;

111 
	gãm∂©e
<
ty≥«me
 
	gT
>

112 
	sés_blob
 {

113 íum { 
	gMAX_BYTES_NEEDED
 = (
T
)+()-1,

114 
	gARRAY_SIZE
 = 
MAX_BYTES_NEEDED
/() };

117 
	g_ª£rved_•a˚
[
ARRAY_SIZE
];

122 
öô
(Ë{ 
√w
 (
gë
()Ë
	gT
; }

125 
föi
(Ë{ 
gë
()->~
T
(); }

129 
T
* 
gë
() {

130 uni⁄ { * 
	ga
; 
T
* 
	gt
; } 
	gu
 = {
_ª£rved_•a˚
};

131  
	gu
.
	gt
;

173 
	#PROTECT
(...Ë
__VA_ARGS__


	)

200 
	#TLS_STRUCT
(
Ty≥
, 
Name
, 
InôFn
) \

201 
	sName
 { \

202 
és_åicks
::
	tés_blob
< 
	tTy≥
 > 
	tWøµî
; \

203 
Ty≥
 &
›î©‹
*(Ë{  *
	`gë
(); } \

204 
Ty≥
* 
›î©‹
->(Ë{  
	`gë
(); } \

205 
›î©‹
 
Ty≥
*(Ë{  
	`gë
(); } \

206 
Wøµî
* 
	`gë_wøµî
() { \

207 
__thªad
 
Wøµî
 
vÆ
; \

208  &
vÆ
; \

210 
Ty≥
* 
	`gë
(Ë{  
	`gë_wøµî
()->get(); } \

211 
	`öô
(Ë{ 
	`gë_wøµî
()->init(); } \

212 
	`föi
(Ë{ 
	`gë_wøµî
()->fini(); } \

213 
	`InôFn
() { \

214 
boﬁ
 
öôülized
 = 
Ál£
; \

215 if(
öôülized
) \

217 
és_åicks
::
és_m™agî
::
	`ªgi°î_és
(&
öô
, &
föi
); \

218 
öôülized
 = 
åue
; \

220 }

	)

237 
	#DECLARE_TLS
(
Ty≥
, 
Name
) \

239 
	`TLS_STRUCT
(
	`PROTECT
(
Ty≥
), 
Name
##
_és_wøµî
, Name##_és_wøµîË
	)
Name

258 
	#DECLARE_TLS_SCHWARZ
(
Name
) \

259 
Name
##
_és_wøµî_schw¨z
 { \

260 
Name
##
	`_és_wøµî_schw¨z
(); \

261 } 
Name
##
_schw¨z


	)

271 
	#DEFINE_TLS_SCHWARZ
(
Ty≥
, 
Name
) \

272 
	`TLS_STRUCT
(
	`PROTECT
(
Ty≥
), 
Name
##
_és_wøµî
, 
öô_wøµî
) Name; \

273 
Name
##
_és_wøµî_schw¨z
::Name##
	$_és_wøµî_schw¨z
() { \

274 
Name
##
_és_wøµî
::
	`öô_wøµî
(); \

275 
	}

	)
}

	@src/fc/valgrind_help.cpp

30 
	~"w_deföes.h
"

34 #ifde‡
USING_VALGRIND


35 
	~"vÆgröd_hñp.h
"

37 
vÆgröd_check
 
	gVGC
;

39 
	~<as£π.h
>

40 
	~<°dio.h
>

41 
	~<sig«l.h
>

42 
	~<uni°d.h
>

43 
	~<sys/°©.h
>

44 
	~<f˙é.h
>

46 
	$°›_⁄_vg_îr
() {

48 (Ë
	`kûl
(
	`gëpid
(), 
SIGABRT
);

49 
	}
}

56 
	$check_vÆgröd_îr‹s
(, const * ) {

57 
VGC
.
	`check
();

63 if(
VGC
.
	`m‹e
()Ë
	`°›_⁄_vg_îr
();

64 
	}
}

66 ˛as†
	cdummyfûe
 {

67 
	m_fd
;

68 
	mpublic
:

70 
	$dummyfûe
(Ë{ 
_fd
 = 
	`›í
("/tmp/vgdummy", 
O_CREAT
|
O_TRUNC
|
O_RDWR
, 
S_IRWXU
);

71 
	`as£π
(
_fd
>0);

73 ~
	$dummyfûe
(Ë{ 
	`˛o£
(
_fd
); _fd=0; 
	}
}

74 
	$fd
(Ë{  
_fd
; 
	}
}

77 
	$check_deföed√ss
(*
v
, 
size_t
 
Àn
)

86 
dummyfûe
 
D
;

87 
	`l£ek
–
D
.
	`fd
(), 0, 
SEEK_SET
);

88 
	`wrôe
–
D
.
	`fd
(), 
v
, 
Àn
);

89 
	}
}

	@src/fc/valgrind_help.h

30 #i‚de‡
VALGRIND_HELP_H


31 
	#VALGRIND_HELP_H


	)

33 
	~"w_deföes.h
"

39 
	~<sys/ty≥s.h
>

41 ˛as†
	cvÆgröd_check


43 
	m_cuºít_îr‹s
;

44 
	m_îr‹s_œ°_check
;

45 
	m_check_Áûed
;

47 
	mpublic
:

48 
	$vÆgröd_check
(): 
	`_cuºít_îr‹s
(0),

49 
	`_îr‹s_œ°_check
(0), 
	$_check_Áûed
(0) {}

51 
	$check
() {

52 
_cuºít_îr‹s
 = 
VALGRIND_COUNT_ERRORS
;

53 
_check_Áûed
 = 
_cuºít_îr‹s
 - 
_îr‹s_œ°_check
;

54 if(
_check_Áûed
 > 0) {

55 
_îr‹s_œ°_check
 = 
_cuºít_îr‹s
;

57 
	}
}

58 
boﬁ
 
	$m‹e
(Ëc⁄° {  (
_check_Áûed
>0); 
	}
}

59 
	$diff
(Ëc⁄° {  
_check_Áûed
; 
	}
}

60 
	$cuº
(Ëc⁄° {  
_cuºít_îr‹s
; 
	}
}

61 
	$¥ev
(Ëc⁄° {  
_cuºít_îr‹s
 - 
_check_Áûed
; 
	}
} };

64 "C" 
°›_⁄_vg_îr
();

65 "C" 
check_vÆgröd_îr‹s
(
l
, c⁄° *
f
);

66 "C" 
check_deföed√ss
(*
v
, 
size_t
 
Àn
);

	@src/fc/vtable.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<vèbÀ.h
>

37 
	~<w_°r°ªam.h
>

41 
	gvèbÀ_row_t
::
	$£t_uöt
(
a
, 
v
) {

43 
	`w_as£π1
(
a
 < 
N
);

45 
	`w_as£π3
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

48 
w_o°r°ªam
 
	`o
(
	`_ö£π_©åibuã
(
a
), 
	`vÆue_size
());

50 
o
 << 
v
 << 
íds
;

51 
	`_ö£πed
(
a
);

52 
	}
}

55 
	gvèbÀ_row_t
::
	$£t_ba£
(
a
, 
w_ba£_t
::
ba£_Êﬂt_t
 
v
) {

57 
	`w_as£π1
(
a
 < 
N
);

59 
	`w_as£π9
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

60 
w_o°r°ªam
 
	`o
(
	`_ö£π_©åibuã
(
a
), 
	`vÆue_size
());

61 
o
 << 
v
 << 
íds
;

62 
	`_ö£πed
(
a
);

63 
	}
}

66 
	gvèbÀ_row_t
::
	$£t_ba£
(
a
, 
w_ba£_t
::
ba£_°©_t
 
v
) {

68 
	`w_as£π1
(
a
 < 
N
);

70 
	`w_as£π9
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

71 
w_o°r°ªam
 
	`o
(
	`_ö£π_©åibuã
(
a
), 
	`vÆue_size
());

72 
o
 << 
v
 << 
íds
;

73 
	`_ö£πed
(
a
);

74 
	}
}

77 
	gvèbÀ_row_t
::
	$£t_öt
(
a
, 
v
) {

78 
	`w_as£π1
(
a
 < 
N
);

79 
	`w_as£π9
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

80 
w_o°r°ªam
 
	`o
(
	`_ö£π_©åibuã
(
a
), 
	`vÆue_size
());

81 
o
 << 
v
 << 
íds
;

82 
	`_ö£πed
(
a
);

83 
	}
}

86 
	gvèbÀ_row_t
::
	$£t_°rög
(
a
, c⁄° *
v
) {

88 
	`w_as£π1
(
a
 < 
N
);

89 
	`w_as£π1
(()
	`°æí
(
v
Ë< 
	`vÆue_size
());

91 
	`w_as£π9
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

92 
	`°r˝y
(
	`_ö£π_©åibuã
(
a
), 
v
);

93 
	`w_as£π9
(
	`_gë_c⁄°
(
a
)[
	`°æí
(
v
)] == '\0');

94 
	`_ö£πed
(
a
);

95 
	}
}

98 
	gvèbÀ_row_t
::
	$dump
(c⁄° *
msg
) const

100 
	`Ârötf
(
°dîr
, "vèbÀ_row_à(%sË© %∞{\n", 
msg
, 
this
 );

101 
	`Ârötf
(
°dîr
, "N %d M %d _ö_u£ %d\n", 
N
, 
M
, 
_ö_u£
);

102 
	`Ârötf
(
°dîr
, "_li° %∞-> _li°_íd %p\n", 
_li°
, 
_li°_íd
);

104 
i
=0; i<=
_ö_u£
; i++) {

105 c⁄° *
nŸ_yë_£t
 = "Not yet set";

106 c⁄° *
p
 = 
_íåy
[
i
];

107 c⁄° *
A
 = "";

108 if(
p
 < 
_li°
) {

109 
A
 = "BOGUS:áddrÅooÜow";

111 c⁄° *
B
 = "";

112 if(
p
 > 
_li°_íd
) {

113 
B
 = "BOGUS:áddrÅoo high";

115 
	`Ârötf
(
°dîr
, "%s %s _entry[%d] = %p, string= %s \n" ,

116 
A
, 
B
, 
i
, 
p
, (i==
_ö_u£
?
nŸ_yë_£t
:p));

118 
	`Ârötf
(
°dîr
, "}\n");

119 
	}
}

122 
	gvèbÀ_row_t
::
	$_ö£πed
(
a
) {

123 
	`w_as£π0
(
a
 < 
N
);

124 
	`w_as£π0
(
a
 =
_ö_u£
);

125 
l
 = 
	`°æí
(
_íåy
[
a
]);

126 
	`w_as£π0
(*(
_íåy
[
a
] + 
l
 +1) == '\0');

127 if(
a
 =
N
-1) {

129 if(
l
==0)Ü++;

130 
_li°_íd
 = 
_íåy
[
a
] + 
l
;

132 
_íåy
[
a
+1] = _íåy[a] + 
l
 + 1;

133 
_li°_íd
 = 
_íåy
[
a
+1];

137 
_ö_u£
++;

138 
	`w_as£π0
(
_ö_u£
 <
N
);

139 
	}
}

141 
	go°ªam
&

142 
	gvèbÀ_row_t
::
›î©‹
<<(
o°ªam
 &
o
)

145 
i
=0; 
	gi
<
	g_ö_u£
; i++) {

146 if(
°æí
(
_gë_c⁄°
(
i
)) > 0) {

147 
	go
 << 
	gi
 << ": " << 
_gë_c⁄°
(
i
Ë<<
	gídl
;

150 
	go
 << 
	gídl
;

151  
	go
;

156 
	gvèbÀ_t
::
	$öô
(
R
, 
A
, 
S
) {

158 
_rows_fûÀd
 = 0;

159 
_rows
 = 
R
;

160 
_rowsize_©åibuãs
 = 
A
;

165 
_rowsize_byãs
 = 
	`Æign
(
vèbÀ_row_t
::
	`byãs_ªquúed_f‹
(
A
, 
S
));

167 
_¨øy_Æüs
 = 
√w
 [
_rows
 * 
_rowsize_byãs
];

169 if(
_¨øy_Æüs
) {

171 
	`mem£t
(
_¨øy_Æüs
, '\0', 
_rows
 * 
_rowsize_byãs
);

173 
i
=0; i<
_rows
; i++) {

174 
vèbÀ_row_t
 *
row
 = 
	`_gë_row
(
i
);

175 
row
->
	`öô_f‹_©åibuãs
(
_rowsize_©åibuãs
, 
S
);

176 
	`w_as£π1
(
row
->
	`size_ö_byãs
(Ë<
_rowsize_byãs
);

182 
	}
}

185 
	gvèbÀ_t
::
	$fûÀd_⁄e
()

187 
	`W_IFDEBUG1
(
vèbÀ_row_t
 *
t
 = 
	`_gë_row
(
_rows_fûÀd
);)

188 
	`w_as£π1
(
t
->
	`size_ö_byãs
(Ë<
_rowsize_byãs
);

190 
_rows_fûÀd
++;

191 
	`w_as£π9
(
_rows_fûÀd
 <
_rows
);

192 
	}
}

194 
	go°ªam
&

195 
	gvèbÀ_t
::
›î©‹
<<(
o°ªam
 &
o
) const {

197 
i
=0; 
	gi
<
	g_rows
; i++) {

198 
_gë_row
(
i
)->
	g›î©‹
<<(
	go
) ;

200 
	go
 << 
	gídl
;

201  
	go
;

204 
vèbÀ_row_t
*

205 
	gvèbÀ_t
::
	$_gë_row
(
i
) const {

206 
	`w_as£π9
(
i
 >= 0);

207 
	`w_as£π9
(
i
 <
_rows
);

208 
	`w_as£π9
(
_rows_fûÀd
 <
_rows
);

209 
vèbÀ_row_t
* 
v
 =

210 (
vèbÀ_row_t
 *)&
_¨øy_Æüs
[
i
 * 
_rowsize_byãs
];

211  
v
;

212 
	}
}

215 
	gvèbÀ_t
::
	$ªÆloc
()

217 
	`W_FATAL_MSG
(
fcINTERNAL
, <<"vtable_t::realloc isÇot implemented");

219 
	}
}

	@src/fc/vtable.h

30 #i‚de‡
VTABLE_INFO_H


31 
	#VTABLE_INFO_H


	)

33 
	~"w_deföes.h
"

39 
	~<c°rög
>

54 ˛as†
	cvèbÀ_row_t
 {

55 
	m¥iv©e
:

56 
N
;

57 
	mM
;

58 
	m_ö_u£
;

59 *
	m_li°
;

60 *
	m_li°_íd
;

61 * 
	m_íåy
[1];

63 
	mpublic
:

65 
NORET
 
	$vèbÀ_row_t
(Ë: 
	`N
(0), 
	`M
(0), 
	`_ö_u£
(0), 
	`_li°
(
NULL
),

66 
	$_li°_íd
(
NULL
Ë{ 
	`dump
("construct"); }

67 
NORET
 ~
	$vèbÀ_row_t
(Ë{ 
	}
}

70 
	$qu™t
(Ëc⁄° {  
_ö_u£
; 
	}
}

74 *
	$íd
(Ëc⁄° {  
_li°_íd
; 
	}
}

75 
	$size_ö_byãs
(Ëc⁄° {  
_li°_íd
 - (*)
this
; 
	}
}

79 
	$byãs_ªquúed_f‹
(
n
, 
m
) {

81 (
vèbÀ_row_t
)

82 + (
n
-1) * (* )

83 + (
n
 * 
m
);

84 
	}
}

85 
	$vÆue_size
(Ëc⁄° {  
M
; 
	}
}

91 
	$öô_f‹_©åibuãs
(
n
, 
m
)

93 
	`w_as£π0
(
n
>0);

94 
N
 = 
n
;

95 
M
 = 
m
;

98 
	`mem£t
(&
_íåy
[0], '\0', 
n
 * 
m
 +

99 + (
n
*(
_íåy
[0])));

101 
_ö_u£
=0;

102 
_li°
 = (*)&
_íåy
[
N
];

103 
_li°_íd
 = 
_li°
;

104 
_íåy
[0] = 
_li°
;

106 #i‡
W_DEBUG_LEVEL
 > 3

108 
a
=0;á<
n
;á++) {

109 
	`w_as£π3
(
	`°æí
(
	`_gë_c⁄°
(
a
)) == 0);

112 
	`w_as£π1
(
	`size_ö_byãs
(Ë<
	`byãs_ªquúed_f‹
(
n
,
m
));

113 
	}
}

118 
	$ªöô_f‹_©åibuãs
(
n
)

120 
addôi⁄Æ
 = 
n
 - 
N
;

121 if(
addôi⁄Æ
 > 0) {

122 
byãs
 = (
_íåy
[0]Ë* 
addôi⁄Æ
;

125 
	`memmove
((*)&
_li°
[
addôi⁄Æ
], (*)&_li°[0], 
byãs
);

126 
i
=
N
; i < 
n
; i++) {

127 
_íåy
[
i
] = 0;

129 
_li°
 = &_li°[
byãs
];

130 
_li°_íd
 = &_li°_íd[
byãs
];

133 
	}
}

136 
£t_uöt
(
a
, 
v
);

138 
£t_öt
(
a
, 
v
);

140 
£t_ba£
(
a
, 
w_ba£_t
::
ba£_°©_t
 
v
);

142 
£t_ba£
(
a
, 
w_ba£_t
::
ba£_Êﬂt_t
 
v
);

144 
£t_°rög
(
a
, c⁄° *
v
);

147 c⁄° *
	g›î©‹
[](
	ga
) const {

148  
_gë_c⁄°
(
a
);

152 
	go°ªam
& 
	g›î©‹
<<(o°ªam &
	go
);

154 
	$n
(Ëc⁄° {  
N
; 
	}
}

156 
	$dump
(c⁄° *
msg
)const;

157 
¥iv©e
:

158 
	`vèbÀ_row_t
(c⁄° 
vèbÀ_row_t
&);

159 
vèbÀ_row_t
& 
›î©‹
=(const vtable_row_t&);

163 *
	$_ö£π_©åibuã
(
a
) {

164 
	`w_as£π1
(
a
 < 
N
);

165 
	`w_as£π1
(
a
 >= 0);

166 * 
v
 = (*)
_íåy
[
a
];

167 if(
v
==
NULL
) {

168 
v
 = (
_íåy
[
a
] = 
_li°_íd
);

170  
v
;

171 
	}
}

173 c⁄° *
	$_gë_c⁄°
(
a
) const {

174 c⁄° *
x
 = (c⁄° *)
_íåy
[
a
];

175 
	`w_as£π1
(
x
 < 
_li°_íd
);

176  
x
;

177 
	}
}

180 
_ö£πed
(
a
);

207 ˛as†
	cvèbÀ_t
 {

208 
	mpublic
:

209 
NORET
 
	$vèbÀ_t
(Ë: 
	`_rows
(0), 
	`_rows_fûÀd
(0),

210 
	`_rowsize_©åibuãs
(0), 
	`_rowsize_byãs
(0),

211 
	$_¨øy_Æüs
(
NULL
) {}

215 
	`öô
(
R
, 
A
, 
S
);

217 
NORET
 ~
	$vèbÀ_t
() {

218 
dñëe
[] 
_¨øy_Æüs
;

219 
_¨øy_Æüs
 = 
NULL
;

220 
	}
}

222 
	gvèbÀ_row_t
& 
	g›î©‹
[] (
	gi
) const {

225  *
_gë_row
(
i
);

228 
	go°ªam
& 
	g›î©‹
<<(o°ªam &
	go
) const;

231 
	$qu™t
(Ëc⁄° {  
_rows_fûÀd
; 
	}
}

232 
	$size
(Ëc⁄° {  
_rows
; 
	}
}

233 
fûÀd_⁄e
();

234 
	$back_out
(
n
Ë{ 
_rows_fûÀd
 -n; 
	}
}

235 
ªÆloc
();

236 
	g¥iv©e
:

237 
vèbÀ_t
(const vtable_t&);

238 
	gvèbÀ_t
& 
	g›î©‹
=(c⁄° 
vèbÀ_t
&);

240 
vèbÀ_row_t
* 
	$_gë_row
(
i
) const;

242 
_rows
;

243 
_rows_fûÀd
;

244 
_rowsize_©åibuãs
;

245 
_rowsize_byãs
;

246 * 
_¨øy_Æüs
;

248 
	}
};

266 
	gãm∂©e
 <
˛ass
 
	gT
>

267 ˛as†
	cvèbÀ_func


269 
	mpublic
:

270 
NORET
 
	$vèbÀ_func
(
vèbÀ_t
 &
v
): 
	`_cuº
(0), 
	$_¨øy
(
v
) { }

271 
NORET
 ~
	$vèbÀ_func
(Ë{ 
	}
}

273 
	$ö£π_«mes
() {

274 
T
::
	`vèbÀ_cﬁÀ˘_«mes
(
_¨øy
[
_cuº
]);

275 
_¨øy
.
	`fûÀd_⁄e
();

276 
	`w_as£π9
(
_cuº
 < 
_¨øy
.
	`size
());

277 
_cuº
++;

278 
	}
}

281 
	$›î©‹
()(c⁄° 
T
& 
t
)

284 
T
 &
t2
 = (T &)
t
;

285 
t2
.
	`vèbÀ_cﬁÀ˘
–
_¨øy
[
_cuº
] );

288 
_¨øy
.
	`fûÀd_⁄e
();

289 
	`w_as£π9
(
_cuº
 < 
_¨øy
.
	`size
());

290 
_cuº
++;

291 
	}
}

293 
	$back_out
(
n
) {

294 
_cuº
 -
n
;

295 
_¨øy
.
	`back_out
(
n
);

296 
	}
}

298 
	$ªÆloc
() {

299  
_¨øy
.
	`ªÆloc
();

300 
	}
}

302 
	g¥Ÿe˘ed
:

303 
_cuº
;

304 
	gvèbÀ_t
& 
	g_¨øy
;

309 ˛as†
	cvèbÀ_«mes_öô_t
 {

310 
size_t
 
	m_size
;

311 
	m_¨gc
;

312 c⁄° * c⁄° * 
	m_¨gv
;

313 
	mpublic
:

314 
NORET
 
	$vèbÀ_«mes_öô_t
(
¨gc
, c⁄° *c⁄° 
¨gv
[]Ë: 
	`_size
(0),

315 
	`_¨gc
(
¨gc
), 
	$_¨gv
(
¨gv
)

322 
mx
=0;

323 
i
=0; i < 
_¨gc
; i++) {

324 if(
_¨gv
[
i
]==
NULL
) ;

325 
j
 = 
	`°æí
(
_¨gv
[
i
]);

326 if(
j
 > 
mx
) mx = j;

328 
_size
 = 
	`size_t
(
mx
)+1;

329 if(
_size
 < ()) _size = ();

331 c⁄° *
	$«me
(
i
) const {

332  
_¨gv
[
i
];

333 
	}
}

334 
	$cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
) {

335 
i
=0; i < 
_¨gc
; i++)

337 if(
_¨gv
[
i
]Ë
t
.
	`£t_°rög
(i, _argv[i]);

339 
	}
}

340 
	$max_size
(Ëc⁄° {  (
_size
); 
	}
}

	@src/fc/w.h

29 #i‚de‡
W_H


30 
	#W_H


	)

32 
	~"w_deföes.h
"

36 
	~<w_ba£.h
>

37 
	~<w_mömax.h
>

38 
	~<w_li°.h
>

39 
	~<w_hash.h
>

41 #ifde‡
W_INCL_BITMAP


42 
	~<w_bôm≠.h
>

	@src/fc/w_autodel.h

53 #i‚de‡
W_AUTODEL_H


54 
	#W_AUTODEL_H


	)

56 
	~"w_deföes.h
"

93 
	gãm∂©e
 <
˛ass
 
	gT
>

94 ˛as†
	cw_auto_dñëe_t
 {

95 
	mpublic
:

96 
NORET
 
	$w_auto_dñëe_t
()

97 : 
	$obj
(0) {};

98 
NORET
 
	$w_auto_dñëe_t
(
T
* 
t
)

99 : 
	$obj
(
t
Ë{
	}
};

100 
	gNORET
 ~
	$w_auto_dñëe_t
() {

101 i‡(
obj
Ë
dñëe
 obj;

102 
	}
}

103 
	gw_auto_dñëe_t
& 
	$£t
(
T
* 
t
) {

104  
obj
 = 
t
, *
this
;

105 
	}
}

106 
T
* 
	g›î©‹
->(Ë{  
	gobj
; }

107 
	gT
 &
	g›î©‹
*(Ë{  *
	gobj
; }

108 
›î©‹
 
	gT
*(Ë{  
	gobj
; }

109 
T
 c⁄°* 
	g›î©‹
->(Ëc⁄° {  
	gobj
; }

110 
T
 c⁄° &
	g›î©‹
*(Ëc⁄° {  *
	gobj
; }

111 
›î©‹
 
T
 c⁄°*(Ëc⁄° {  
	gobj
; }

112 
	g¥iv©e
:

113 
T
* 
obj
;

116 
NORET
 
	$w_auto_dñëe_t
(c⁄° 
w_auto_dñëe_t
&Ë{
	}
};

117 
	gw_auto_dñëe_t
& 
	g›î©‹
=(c⁄° 
w_auto_dñëe_t
 &Ë{ *
this
;};

147 
	gãm∂©e
 <
˛ass
 
	gT
>

148 ˛as†
	cw_auto_dñëe_¨øy_t
 {

149 
	mpublic
:

150 
NORET
 
	$w_auto_dñëe_¨øy_t
()

151 : 
	$obj
(0) {};

152 
NORET
 
	$w_auto_dñëe_¨øy_t
(
T
* 
t
)

153 : 
	$obj
(
t
Ë{
	}
};

154 
	gNORET
 ~
	$w_auto_dñëe_¨øy_t
() {

155 i‡(
obj
Ë
dñëe
 [] obj;

156 
	}
}

157 
	gw_auto_dñëe_¨øy_t
& 
	$£t
(
T
* 
t
) {

158  
obj
 = 
t
, *
this
;

159 
	}
}

160 
T
* 
	g›î©‹
->(Ë{  
	gobj
; }

161 
	gT
 &
	g›î©‹
*(Ë{  *
	gobj
; }

162 
›î©‹
 
	gT
*(Ë{  
	gobj
; }

164 
	g¥iv©e
:

165 
T
* 
obj
;

168 
NORET
 
	$w_auto_dñëe_¨øy_t
(

169 c⁄° 
w_auto_dñëe_¨øy_t
&Ë{
	}
}

170 
	gw_auto_dñëe_¨øy_t
& 
	g›î©‹
=(c⁄° 
w_auto_dñëe_¨øy_t
 &Ë{ *
this
;};

	@src/fc/w_base.cpp

53 
	~"w_deföes.h
"

57 
	#W_SOURCE


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄
 "w_base.h"

63 
	~<w_ba£.h
>

64 
	~<s°ªam
>

69 c⁄° 
	gw_ba£_t
::
öt1_t
 
w_ba£_t
::
öt1_max
 = 0x7f;

70 c⁄° 
	gw_ba£_t
::
öt1_t
 
w_ba£_t
::
öt1_mö
 = (const w_base_t::int1_t) 0x80u;

71 c⁄° 
	gw_ba£_t
::
uöt1_t
 
w_ba£_t
::
uöt1_max
 = 0xff;

72 c⁄° 
	gw_ba£_t
::
uöt1_t
 
w_ba£_t
::
uöt1_mö
 = 0x0;

73 c⁄° 
	gw_ba£_t
::
öt2_t
 
w_ba£_t
::
öt2_max
 = 0x7fff;

74 c⁄° 
	gw_ba£_t
::
öt2_t
 
w_ba£_t
::
öt2_mö
 = (const w_base_t::int2_t) 0x8000u;

75 c⁄° 
	gw_ba£_t
::
uöt2_t
 
w_ba£_t
::
uöt2_max
 = 0xffff;

76 c⁄° 
	gw_ba£_t
::
uöt2_t
 
w_ba£_t
::
uöt2_mö
 = 0x0;

77 c⁄° 
	gw_ba£_t
::
öt4_t
 
w_ba£_t
::
öt4_max
 = 0x7fffffff;

78 c⁄° 
	gw_ba£_t
::
öt4_t
 
w_ba£_t
::
öt4_mö
 = 0x80000000;

79 c⁄° 
	gw_ba£_t
::
uöt4_t
 
w_ba£_t
::
uöt4_max
 = 0xffffffff;

80 c⁄° 
	gw_ba£_t
::
uöt4_t
 
w_ba£_t
::
uöt4_mö
 = 0x0;

82 
	#LONGLONGCONSTANT
(
i
Ëi##
LL


	)

83 
	#ULONGLONGCONSTANT
(
i
Ëi##
ULL


	)

85 #ifde‡
ARCH_LP64


87 c⁄° 
	gw_ba£_t
::
uöt8_t
 
w_ba£_t
::
uöt8_max
 =

88 
ULONGLONGCONSTANT
(0xffffffffffffffff);

89 c⁄° 
	gw_ba£_t
::
uöt8_t
 
w_ba£_t
::
uöt8_mö
 =

90 
ULONGLONGCONSTANT
(0x0);

91 c⁄° 
	gw_ba£_t
::
öt8_t
 
w_ba£_t
::
öt8_max
 =

92 
LONGLONGCONSTANT
(0x7fffffffffffffff);

93 c⁄° 
	gw_ba£_t
::
öt8_t
 
w_ba£_t
::
öt8_mö
 =

94 
LONGLONGCONSTANT
(0x8000000000000000);

97 c⁄° 
	gw_ba£_t
::
uöt8_t
 
w_ba£_t
::
uöt8_max
 =

98 
ULONGLONGCONSTANT
(0xffffffff);

99 c⁄° 
	gw_ba£_t
::
uöt8_t
 
w_ba£_t
::
uöt8_mö
 =

100 
ULONGLONGCONSTANT
(0x0);

101 c⁄° 
	gw_ba£_t
::
öt8_t
 
w_ba£_t
::
öt8_max
 =

102 
LONGLONGCONSTANT
(0x7fffffff);

103 c⁄° 
	gw_ba£_t
::
öt8_t
 
w_ba£_t
::
öt8_mö
 =

104 
LONGLONGCONSTANT
(0x80000000);

107 
	go°ªam
&

108 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gw_ba£_t
&)

110 
	gw_ba£_t
::
as£π_Áûed
("w_ba£::›î©‹<<(ËˇŒed", 
__FILE__
, 
__LINE__
);

111  
	go
;

115 
	gw_ba£_t
::
	$as£π_Áûed
(

116 c⁄° * 
desc
,

117 c⁄° * 
fûe
,

118 
uöt4_t
 
löe
)

120 
°rög°ªam
 
os
;

122 
os
 << "as£πi⁄ faûuª: " << 
desc
 << 
ídl


124 << 
fûe
 << ':' << 
löe


125 << " As£πi⁄ faûed" << 
ídl


126 << "\tˇŒed from:" << 
ídl


127 << "\t0Ë" << 
fûe
 << ':' << 
löe


128 << 
ídl
 << 
íds
;

129 
	`Ârötf
(
°dîr
, "%s", 
os
.
	`°r
().
	`c_°r
());

130 
	`ab‹t
();

131 
	}
}

134 
	gios
::
	tfmtÊags
 fmtflags;

136 
	~<w_°r°ªam.h
>

139 
	gw_ba£_t
::
uöt8_t


140 
	$__°πou8
(

141 c⁄° *
°r
,

142 **
íd±r
,

143 
ba£
,

144 
boﬁ
 
is_sig√d


147 #i‡
	`deföed
(
ARCH_LP64
)

148  
is_sig√d
? 
	`°πﬁ
(
°r
, 
íd±r
, 
ba£
): 
	`°πoul
(str,Éndptr, base);

150  
is_sig√d
? 
	`°πﬁl
(
°r
, 
íd±r
, 
ba£
): 
	`°πouŒ
(str,Éndptr, base);

152 
	}
}

154 
	gw_ba£_t
::
öt8_t


155 
w_ba£_t
::
	$°πoi8
(

156 c⁄° *
°r
,

157 **
íd±r
,

158 
ba£


161 
w_ba£_t
::
öt8_t
 
i8
;

162 
w_ba£_t
::
öt8_t
 
u8
 =

163 
	`__°πou8
(
°r
, 
íd±r
, 
ba£
, 
åue
);

164 
i8
 = 
w_ba£_t
::
	`öt8_t
(
u8
);

165  
i8
;

166 
	}
}

168 
	gw_ba£_t
::
uöt8_t


169 
w_ba£_t
::
	$°πou8
(

170 c⁄° *
°r
,

171 **
íd±r
,

172 
ba£


175  
	`__°πou8
(
°r
, 
íd±r
, 
ba£
, 
Ál£
);

176 
	}
}

178 #i‡
deföed
(
SOLARIS2
)

179 
	~<õìÂ.h
>

181 
	~<cm©h
>

184 
boﬁ


185 
	gw_ba£_t
::
	$is_föôe
(c⁄° 
f8_t
 
x
)

187 
boﬁ
 
vÆue
 = 
Ál£
;

188 
vÆue
 = 
	`föôe
(
x
);

189  
vÆue
;

190 
	}
}

192 
boﬁ


193 
	gw_ba£_t
::
	$is_öföôe
(c⁄° 
f8_t
 
x
)

195 
boﬁ
 
vÆue
 = 
Ál£
;

196 #i‡
	`deföed
(
SOLARIS2
)

197 
vÆue
 = !
	`föôe
(
x
Ë&& !
	`i¢™d
(x);

198 #ñi‡
	`deföed
(
MacOSX
Ë&& 
W_GCC_THIS_VER
 >
	`W_GCC_VER
(3,0)

199 
vÆue
 = !
	`föôe
(
x
Ë&& !
	`__i¢™d
(x);

201 
vÆue
 = !
	`föôe
(
x
Ë&& !
	`i¢™
(x);

203  
vÆue
;

204 
	}
}

206 
boﬁ


207 
	gw_ba£_t
::
	$is_«n
(c⁄° 
f8_t
 
x
)

209 
boﬁ
 
vÆue
 = 
Ál£
;

210 #i‡
	`deföed
(
SOLARIS2
)

211 
vÆue
 = 
	`i¢™d
(
x
);

212 #ñi‡
	`deföed
(
MacOSX
Ë&& 
W_GCC_THIS_VER
 >
	`W_GCC_VER
(3,0)

213 
vÆue
 = 
	`__i¢™d
(
x
);

215 
vÆue
 = 
	`i¢™
(
x
);

217  
vÆue
;

218 
	}
}

220 
boﬁ


221 
	gw_ba£_t
::
	$is_öföôe_‹_«n
(c⁄° 
f8_t
 
x
)

223 
boﬁ
 
vÆue
 = 
Ál£
;

224 
vÆue
 = !
	`föôe
(
x
);

225  
vÆue
;

226 
	}
}

229 
	gw_ba£_t
::
	$ab‹t
()

231 
cout
.
	`Êush
();

232 
˚º
.
	`Êush
();

233 ::
	`ab‹t
();

234 
	}
}

241 #ifde‡
__GNUG__


242 
	#PURE_VIRTUAL
 "C" 
	`__puª_vútuÆ
()

	)

244 
	#PURE_VIRTUAL
 
	`puª_vútuÆ
()

	)

247 
PURE_VIRTUAL


250 
boﬁ
 
ˇŒed
 = 
Ál£
;

251 i‡(!
ˇŒed
)

252 
˚º
 << "** Puª vútuÆ fun˘i⁄ cÆÀd" << 
ídl
;

253 
ˇŒed
 = 
åue
;

255 
w_ba£_t
::
ab‹t
();

260 
	~<√töë/ö.h
>

261 
w_ba£_t
::
uöt2_t
 w_ba£_t::
	$w_¡ohs
(
w_ba£_t
::
uöt2_t
 
√t
)

263  
	`¡ohs
(
√t
);

264 
	}
}

266 
w_ba£_t
::
uöt2_t
 w_ba£_t::
	$w_ht⁄s
(
w_ba£_t
::
uöt2_t
 
ho°
)

268  
	`ht⁄s
(
ho°
);

269 
	}
}

271 
w_ba£_t
::
uöt4_t
 w_ba£_t::
	$w_¡ohl
(
w_ba£_t
::
uöt4_t
 
√t
)

273  
	`¡ohl
(
√t
);

274 
	}
}

276 
w_ba£_t
::
uöt4_t
 w_ba£_t::
	$w_ht⁄l
(
w_ba£_t
::
uöt4_t
 
ho°
)

278  
	`ht⁄l
(
ho°
);

279 
	}
}

	@src/fc/w_base.h

53 #i‚de‡
W_BASE_H


54 
	#W_BASE_H


	)

56 
	~"w_deföes.h
"

72 #ifde‡
ON


73 #unde‡
ON


76 #ifde‡
OFF


77 #unde‡
OFF


83 
	#W_UNIX


	)

85 #ifde‡
__GNUG__


86 #¥agm®
öãrÁ˚


89 
	~<w_°ªam.h
>

91 #i‚de‡
W_WORKAROUND_H


92 
	~"w_w‹k¨ound.h
"

95 
	#NORET


	)

96 
	#CAST
(
t
,
o
Ë(—)(o))

	)

97 
	#W_UNUSED
(
x
Ë

	)

100 #i‡
W_DEBUG_LEVEL
>0

101 
	#W_IFDEBUG1
(
x
Ë
	)
x

102 
	#W_IFNDEBUG1
(
x
Ë

	)

104 
	#W_IFDEBUG1
(
x
Ë

	)

105 
	#W_IFNDEBUG1
(
x
Ë
	)
x

108 #i‡
W_DEBUG_LEVEL
>1

109 
	#W_IFDEBUG2
(
x
Ë
	)
x

110 
	#W_IFNDEBUG2
(
x
Ë

	)

112 
	#W_IFDEBUG2
(
x
Ë

	)

113 
	#W_IFNDEBUG2
(
x
Ë
	)
x

116 #i‡
W_DEBUG_LEVEL
>2

117 
	#W_IFDEBUG3
(
x
Ë
	)
x

118 
	#W_IFNDEBUG3
(
x
Ë

	)

120 
	#W_IFDEBUG3
(
x
Ë

	)

121 
	#W_IFNDEBUG3
(
x
Ë
	)
x

124 #i‡
W_DEBUG_LEVEL
>3

125 
	#W_IFDEBUG4
(
x
Ë
	)
x

126 
	#W_IFNDEBUG4
(
x
Ë

	)

128 
	#W_IFDEBUG4
(
x
Ë

	)

129 
	#W_IFNDEBUG4
(
x
Ë
	)
x

132 
	#W_IFDEBUG9
(
x
Ë

	)

133 
	#W_IFNDEBUG9
(
x
Ë
	)
x

136 #unde‡
W_IFDEBUG


137 #unde‡
W_IFNDEBUG


138 #i‡
W_DEBUG_LEVEL
==1

139 
	#W_IFDEBUG
(
x
Ë
	`W_IFDEBUG1
(x)

	)

140 
	#W_IFNDEBUG
(
x
Ë
	`W_IFNDEBUG1
(x)

	)

143 #i‡
W_DEBUG_LEVEL
==2

144 
	#W_IFDEBUG
(
x
Ë
	`W_IFDEBUG2
(x)

	)

145 
	#W_IFNDEBUG
(
x
Ë
	`W_IFNDEBUG2
(x)

	)

148 #i‡
W_DEBUG_LEVEL
==3

149 
	#W_IFDEBUG
(
x
Ë
	`W_IFDEBUG3
(x)

	)

150 
	#W_IFNDEBUG
(
x
Ë
	`W_IFNDEBUG3
(x)

	)

153 #i‡
W_DEBUG_LEVEL
==4

154 
	#W_IFDEBUG
(
x
Ë
	`W_IFDEBUG4
(x)

	)

155 
	#W_IFNDEBUG
(
x
Ë
	`W_IFNDEBUG4
(x)

	)

158 #i‚de‡
W_IFDEBUG


159 
	#W_IFDEBUG
(
x
Ë

	)

161 #i‚de‡
W_IFNDEBUG


162 
	#W_IFNDEBUG
(
x
Ë
	)
x

167 #ifde‡
W_TRACE


168 
	#W_IFTRACE
(
x
Ë
	)
x

169 
	#W_IFNTRACE
(
x
Ë

	)

171 
	#W_IFTRACE
(
x
Ë

	)

172 
	#W_IFNTRACE
(
x
Ë
	)
x

175 #i‡
deföed
(
W_DEBUG_SPACE
)

176 
w_•a˚
(
löe
, c⁄° *
fûe
);

177 
	#W_SPACE
 
	`w_•a˚
(
__LINE__
,
__FILE__
)

	)

179 
	#W_SPACE


	)

183 
	#w_as£π0
(
x
) do { \

184 i‡(!(
x
)Ë
w_ba£_t
::
	`as£π_Áûed
(#x, 
__FILE__
, 
__LINE__
); \

185 
W_SPACE
; \

186 } 0)

	)

188 #i‚de‡
W_DEBUG_LEVEL


189 
	#W_DEBUG_LEVEL
 0

	)

193 #i‡
W_DEBUG_LEVEL
>=1

194 
	#w_as£π1
(
x
Ë
	`w_as£π0
(x)

	)

196 
	#w_as£π1
(
x
Ë

	)

200 #i‡
W_DEBUG_LEVEL
>=2

201 
	#w_as£π2
(
x
Ë
	`w_as£π1
(x)

	)

203 
	#w_as£π2
(
x
Ë

	)

207 #i‡
W_DEBUG_LEVEL
>=3

208 
	#w_as£π3
(
x
Ë
	`w_as£π1
(x)

	)

210 
	#w_as£π3
(
x
Ë

	)

214 #i‡
W_DEBUG_LEVEL
>=4

215 
	#w_as£π4
 
	`w_as£π1
(
x
)

	)

217 
	#w_as£π4
(
x
Ë

	)

221 #i‡
W_DEBUG_LEVEL
>=5

222 
	#w_as£π5
 
	`w_as£π1
(
x
)

	)

224 
	#w_as£π5
(
x
Ë

	)

236 
	#w_as£π9
(
x
Ë

	)

245 
	#W_ENUM
(
x
Ë(()(x))

	)

254 
	#W_ADDR
(
x
Ë((*)(x))

	)

256 
˛ass
 
	gw_rc_t
;

266 ˛as†
	cw_ba£_t
 {

267 
	mpublic
:

271 
	tu_ch¨
;

272 
	tu_sh‹t
;

273 #ifde‡
FC_COMPAT_32BIT_ULONG


275 
	tu_l⁄g
;

277 
	tu_l⁄g
;

284 
	töt1_t
;

285 
u_ch¨
 
	tuöt1_t
;

286 
	töt2_t
;

287 
u_sh‹t
 
	tuöt2_t
;

288 
	töt4_t
;

289 
u_öt
 
	tuöt4_t
;

291 #i‡
	$deföed
(
ARCH_LP64
)

292 
	töt8_t
;

293 
	tuöt8_t
;

294 #ñi‡
	$deföed
(
__GNUG__
)

295 
	töt8_t
;

296 
	tuöt8_t
;

298 #îr‹ 
öt8_t
 
NŸ
 
suµ‹ãd
 
this
 
compûî
.

304 
uöt8_t
 
	tœrge_°©_t
;

310 #i‡
	`deföed
(
LARGEFILE_AWARE
Ë|| 
	$deföed
(
ARCH_LP64
)

311 
uöt8_t
 
	tba£_°©_t
;

312 
	tba£_Êﬂt_t
;

314 
uöt4_t
 
	tba£_°©_t
;

315 
	tba£_Êﬂt_t
;

318 
	tf4_t
;

319 
	tf8_t
;

321 c⁄° 
öt1_t
 
öt1_max
, 
öt1_mö
;

322 c⁄° 
öt2_t
 
öt2_max
, 
öt2_mö
;

323 c⁄° 
öt4_t
 
öt4_max
, 
öt4_mö
;

324 c⁄° 
öt8_t
 
öt8_max
, 
öt8_mö
;

326 c⁄° 
uöt1_t
 
uöt1_max
, 
uöt1_mö
;

327 c⁄° 
uöt2_t
 
uöt2_max
, 
uöt2_mö
;

328 c⁄° 
uöt4_t
 
uöt4_max
, 
uöt4_mö
;

329 c⁄° 
uöt8_t
 
uöt8_max
, 
uöt8_mö
;

331 
boﬁ
 
	`is_Æig√d
(
size_t
 
sz
);

332 
boﬁ
 
	`is_Æig√d
(c⁄° * 
s
);

334 
boﬁ
 
	`is_big_ídün
();

335 
boﬁ
 
	`is_lôée_ídün
();

348 
öt8_t
 
	`°πoi8
(c⁄° *, ** 
íd
=0 , 
ba£
=0);

355 
uöt8_t
 
	`°πou8
(c⁄° *, ** 
íd
=0, 
ba£
=0);

358 
i°ªam
& 
	`_sˇn_uöt8
(i°ªam& 
i
, 
uöt8_t
 &,

359 
boﬁ
 
chew_whôe
,

360 
boﬁ
 
is_sig√d
,

361 
boﬁ
& 
øngîr
);

363 
boﬁ
 
	`is_föôe
(c⁄° 
f8_t
 
x
);

364 
boﬁ
 
	`is_öföôe
(c⁄° 
f8_t
 
x
);

365 
boﬁ
 
	`is_«n
(c⁄° 
f8_t
 
x
);

366 
boﬁ
 
	`is_öföôe_‹_«n
(c⁄° 
f8_t
 
x
);

376 
uöt2_t
 
	`w_¡ohs
(uint2_t);

377 
uöt2_t
 
	`w_ht⁄s
(uint2_t);

378 
uöt4_t
 
	`w_¡ohl
(uint4_t);

379 
uöt4_t
 
	`w_ht⁄l
(uint4_t);

382 
‰õnd
 
o°ªam
& 
›î©‹
<<(

383 
o°ªam
& 
o
,

384 c⁄° 
w_ba£_t
& 
obj
);

387 
	`as£π_Áûed
(

388 c⁄° * 
desc
,

389 c⁄° * 
fûe
,

390 
uöt4_t
 
löe
);

393 
	`ab‹t
();

398 
	eCom∑ªOp
 {

399 
badOp
=0x0, 
eqOp
=0x1, 
gtOp
=0x2, 
geOp
=0x3, 
…Op
=0x4, 
ÀOp
=0x5,

401 
NegInf
=0x100, 
eqNegInf
, 
gtNegInf
, 
geNegInf
, 
…NegInf
, 
ÀNegInf
,

402 
PosInf
=0x400, 
eqPosInf
, 
gtPosInf
, 
gePosInf
, 
…PosInf
, 
ÀPosInf


411 
	elock_mode_t
 {

412 
NL
 = 0,

413 
IS
,

414 
IX
,

415 
SH
,

416 
SIX
,

417 
UD
,

418 
EX


419 
	}
};

425 
	elock_duøti⁄_t
 {

426 
	gt_ö°™t
 = 0,

427 
	gt_sh‹t
 = 1,

428 
	gt_medium
 = 2,

429 
	gt_l⁄g
 = 3,

430 
	gt_vîy_l⁄g
 = 4,

431 
	gt_num_duøti⁄s
 = 5

443 
	evŸe_t
 {

444 
	gvŸe_bad
,

445 
	gvŸe_ªad⁄ly
,

446 
	gvŸe_ab‹t
,

447 
	gvŸe_commô


464 #i‡
deföed
 (
__SUNPRO_CC
)

465 
	#w_ª£t_°r°ªam
(
s
) \

467 
s
.
	`˛ór
(); \

468 
s
.
	`£ekp
(0); \

469 } 0)

	)

471 
	#w_ª£t_°r°ªam
(
s
) \

473 
s
.
	`˛ór
(); \

474 
s
.
	`£ekp
(
ios
::
beg
); \

475 } 0)

	)

482 
ölöe
 
boﬁ


483 
	gw_ba£_t
::
	$is_Æig√d
(
size_t
 
sz
)

485  (
	`Æign
(
sz
) == sz);

486 
	}
}

488 
ölöe
 
boﬁ


489 
	gw_ba£_t
::
	$is_Æig√d
(c⁄° * 
s
)

493  
	`is_Æig√d
((
±rdiff_t
)(
s
));

494 
	}
}

499 
ölöe
 
boﬁ
 
	gw_ba£_t
::
	$is_big_ídün
()

501 #ifde‡
WORDS_BIGENDIAN


502  
åue
;

504  
Ál£
;

506 
	}
}

511 
ölöe
 
boﬁ


512 
	gw_ba£_t
::
	$is_lôée_ídün
()

514  ! 
	`is_big_ídün
();

515 
	}
}

519 ˛as†
	cw_vba£_t
 : 
public
 
w_ba£_t
 {

520 
public
:

521 
NORET
 
	$w_vba£_t
() {};

522 
vútuÆ
 
NORET
 ~
	$w_vba£_t
(Ë{
	}
};

535 
	sfûl1
 {

536 
	mw_ba£_t
::
uöt1_t
 
u1
;

537 
fûl1
(Ë: 
u1
(0) {}

541 
	sfûl2
 {

542 
	mw_ba£_t
::
uöt2_t
 
u2
;

543 
fûl2
(Ë: 
u2
(0) {}

547 
	sfûl3
 {

548 
	mw_ba£_t
::
uöt1_t
 
u1
[3];

549 
fûl3
(Ë{ 
	mu1
[0] = 
u1
[1] = u1[2] = 0; }

553 
	sfûl4
 {

554 
	mw_ba£_t
::
uöt4_t
 
u4
;

555 
fûl4
(Ë: 
u4
(0) {}

559 
	~<w_autodñ.h
>

560 
	~<w_îr‹.h
>

561 
	~<w_rc.h
>

563 
	gãm∂©e
<
boﬁ
 
	gB
> 
	gCompûeTimeAs£πi⁄
;

568 
	gãm∂©e
<> 
	gCompûeTimeAs£πi⁄
<
	gåue
> { 
ª„ªn˚
() {} };

587 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	scompûe_time_as£π


589 
compûe_time_as£π
() {

590 
	mCompûeTimeAs£πi⁄
<(Ë=8> 
as£π_8byã_l⁄g
;

591 
	mCompûeTimeAs£πi⁄
<(Ë>(
T
)> 
as£π_l⁄g_hﬁds_T
;

595 #i‡
W_DEBUG_LEVEL
 > 4

596 
	#ASSERT_FITS_IN_LONGLONG
(
T
) { \

597 
CompûeTimeAs£πi⁄
<(Ë>(
T
)> 
as£π__
##T##
__fôs_ö_l⁄gl⁄g
; \

598 
as£π__
##
T
##
__fôs_ö_l⁄gl⁄g
.
	`ª„ªn˚
(); \

599 }

	)

600 
	#ASSERT_FITS_IN_POINTER
(
T
) { \

601 
CompûeTimeAs£πi⁄
<(*Ë>(
T
)> 
as£π__
##T##
__fôs_ö_poöãr
; \

602 
as£π__
##
T
##
__fôs_ö_poöãr
.
	`ª„ªn˚
(); \

603 }

	)

606 
	#ASSERT_FITS_IN_POINTER
(
T
)

	)

607 
	#ASSERT_FITS_IN_LONGLONG
(
T
)

	)

	@src/fc/w_bitmap.cpp

30 
	~"w_deföes.h
"

34 
	#W_SOURCE


	)

35 #ifde‡
__GNUC__


36 #¥agm®
im∂emíèti⁄


39 
	~"w_ba£.h
"

40 
	~<c°rög
>

41 
	~"w_bôm≠.h
"

43 
ölöe
 
	$div8
(
x
Ë{  x >> 3; 
	}
}

44 
ölöe
 
	$mod8
(
x
Ë{  x & 7; 
	}
}

45 
ölöe
 
	$div32
(
x
Ë{  x >> 5; 
	}
}

46 
ölöe
 
	$mod32
(
x
Ë{  x & 31; 
	}
}

49 
	gw_bôm≠_t
::
	$byãsF‹Bôs
(
uöt4_t
 
numBôs
)

51  (
	`div8
(
numBôs
 -1) + 1);

52 
	}
}

55 
NORET


56 
	gw_bôm≠_t
::
	$w_bôm≠_t
(
uöt4_t
 
size
)

57 : 
	`sz
(
size
), 
	$mem_Æloc
(
åue
)

59 
n
 = 
	`byãsF‹Bôs
(
size
);

60 
±r
 = 
√w
 
uöt1_t
[
n
] ;

61 i‡(!
±r
Ë
	`W_FATAL
(
fcOUTOFMEMORY
) ;

62 
	}
}

65 
	gw_bôm≠_t
::
	$zîo
()

67 
n
 = 
	`byãsF‹Bôs
(
sz
);

68 
	`mem£t
(
±r
, 0, 
n
);

69 
	}
}

72 
	gw_bôm≠_t
::
	$fûl
()

74 
n
 = 
	`byãsF‹Bôs
(
sz
);

75 
	`mem£t
(
±r
, 0xff, 
n
);

76 
	}
}

78 
boﬁ


79 
	gw_bôm≠_t
::
	$is_£t
(
uöt4_t
 
off£t
) const

81  (
±r
[
	`div8
(
off£t
)] & (1 << 
	`mod8
(offset))) != 0;

82 
	}
}

85 
	gw_bôm≠_t
::
	$£t
(
uöt4_t
 
off£t
)

87 
±r
[
	`div8
(
off£t
)] |(1 << 
	`mod8
(offset));

88 
	}
}

91 
	gw_bôm≠_t
::
	$˛r
(
uöt4_t
 
off£t
)

93 
±r
[
	`div8
(
off£t
)] &~(1 << 
	`mod8
(offset));

94 
	}
}

96 
	gw_ba£_t
::
öt4_t


97 
w_bôm≠_t
::
	$fú°_£t
(
uöt4_t
 
°¨t
) const

99 
	`w_as£π9
(
°¨t
 < 
sz
);

100 
uöt1_t
* 
p
 = 
±r
 + 
	`div8
(
°¨t
);

101 
uöt4_t
 
mask
 = 1 << 
	`mod8
(
°¨t
);

102 
uöt4_t
 
size
 = 
sz
;

103 
size
 -
°¨t
; size; start++, size--) {

104 i‡(*
p
 & 
mask
) {

105 
	`w_as£π9
(
	`is_£t
(
°¨t
));

106  
°¨t
;

108 i‡((
mask
 <<= 1) == 0x100) {

109 
mask
 = 1;

110 
p
++;

115 
	}
}

117 
	gw_ba£_t
::
öt4_t


118 
w_bôm≠_t
::
	$fú°_˛r
(
uöt4_t
 
°¨t
) const

120 
	`w_as£π9
(
°¨t
 < 
sz
);

121 
uöt1_t
* 
p
 = 
±r
 + 
	`div8
(
°¨t
);

122 
uöt4_t
 
mask
 = 1 << 
	`mod8
(
°¨t
);

123 
uöt4_t
 
size
 = 
sz
;

124 
size
 -
°¨t
; size; start++, size--) {

125 i‡((*
p
 & 
mask
) == 0) {

126  
°¨t
;

128 i‡((
mask
 <<= 1) == 0x100) {

129 
mask
 = 1;

130 
p
++;

135 
	}
}

137 
	gw_ba£_t
::
uöt4_t


138 
w_bôm≠_t
::
	$num_£t
() const

140 
uöt1_t
* 
p
 = 
±r
;

141 
uöt4_t
 
size
 = 
sz
;

142 
cou¡
;

143 
mask
;

144 
cou¡
 = 0, 
mask
 = 1; 
size
; size--) {

145 i‡(*
p
 & 
mask
Ë
cou¡
++;

146 i‡((
mask
 <<= 1) == 0x100) {

147 
mask
 = 1;

148 
p
++;

151  
cou¡
;

152 
	}
}

154 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gw_bôm≠_t
& 
	gobj
)

156 
	gi
 = 0; i < 
	gobj
.
	gsz
; i++) {

157 
	go
 << (
	gobj
.
is_£t
(
i
) != 0);

159  
	go
;

	@src/fc/w_bitmap.h

30 #i‚de‡
W_BITMAP_H


31 
	#W_BITMAP_H


	)

33 
	~"w_deföes.h
"

37 
	~<w_ba£.h
>

39 #ifde‡
__GNUG__


40 #¥agm®
öãrÁ˚


46 ˛as†
	cw_bôm≠_t
 : 
public
 
w_ba£_t
 {

47 
public
:

49 
NORET
 
w_bôm≠_t
(
uöt4_t
 
size
);

51 
NORET
 
w_bôm≠_t
(
uöt1_t
* 
p
, 
uöt4_t
 
size
);

53 
	mNORET
 ~
w_bôm≠_t
();

56 
zîo
();

58 
fûl
();

60 
ª£tPå
(
uöt1_t
* 
p
, 
uöt4_t
 
size
);

62 
£t
(
uöt4_t
 
off£t
);

64 
öt4_t
 
	$fú°_£t
(
uöt4_t
 
°¨t
) const;

66 
uöt4_t
 
	$num_£t
() const;

68 
boﬁ
 
	$is_£t
(
uöt4_t
 
off£t
) const;

71 
	`˛r
(
uöt4_t
 
off£t
);

73 
öt4_t
 
	$fú°_˛r
(
uöt4_t
 
°¨t
) const;

75 
uöt4_t
 
	$num_˛r
() const;

77 
boﬁ
 
	$is_˛r
(
uöt4_t
 
off£t
) const;

80 
uöt4_t
 
	$size
() const;

83 
	`byãsF‹Bôs
(
uöt4_t
 
numBôs
);

86 
uöt1_t
* 
	`addr
();

88 c⁄° 
uöt1_t
* 
	$addr
() const;

90 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
w_bôm≠_t
&);

91 
¥iv©e
:

92 
uöt1_t
* 
±r
;

93 
uöt4_t
 
sz
;

94 
boﬁ
 
mem_Æloc
;

98 
ölöe
 
NORET


99 
w_bôm≠_t
::
	$w_bôm≠_t
(
uöt1_t
* 
p
, 
uöt4_t
 
size
)

100 : 
	`±r
(
p
), 
	`sz
(
size
), 
	$mem_Æloc
(
Ál£
)

102 
	}
}

104 
ölöe
 
NORET


105 
	gw_bôm≠_t
::~
	$w_bôm≠_t
()

107 i‡(
mem_Æloc
Ë
dñëe
 [] 
±r
 ;

108 
	}
}

110 
ölöe
 

111 
	gw_bôm≠_t
::
	$ª£tPå
(
uöt1_t
* 
p
, 
uöt4_t
 
size
)

113 
	`w_as£π9
(!
mem_Æloc
);

114 
sz
 = 
size
;

115 
±r
 = 
p
;

116 
	}
}

118 
ölöe
 
boﬁ


119 
	gw_bôm≠_t
::
	$is_˛r
(
uöt4_t
 
off£t
) const

121  !
	`is_£t
(
off£t
);

122 
	}
}

124 
ölöe
 
	gw_ba£_t
::
uöt4_t


125 
w_bôm≠_t
::
	$size
() const

127  
sz
 ;

128 
	}
}

130 
ölöe
 
	gw_ba£_t
::
uöt4_t


131 
w_bôm≠_t
::
	$num_˛r
() const

133  
sz
 - 
	`num_£t
();

134 
	}
}

136 
ölöe
 
	gw_ba£_t
::
uöt1_t
*

137 
w_bôm≠_t
::
	$addr
()

139  
±r
;

140 
	}
}

142 
ölöe
 c⁄° 
	gw_ba£_t
::
uöt1_t
*

143 
w_bôm≠_t
::
	$addr
() const

145  
±r
;

146 
	}
}

	@src/fc/w_bitvector.h

52 
	~<w.h
>

57 
	gãm∂©e
<
	gBIT_COUNT
>

58 ˛as†
	cw_bôve˘‹_t


60 
	mpublic
:

61 íum { 
BITS
 = 
BIT_COUNT
 };

62 
	tW‹d
;

63 
	g¥iv©e
:

64 íum { 
BITS_PER_WORD
=8*(
W‹d
) };

65 íum { 
	gWORDS
 = (
BITS
+
BITS_PER_WORD
-1)/BITS_PER_WORD };

66 
	gd©a
[
WORDS
];

68 
	gpublic
:

70 
	$w_bôve˘‹_t
(Ë{ 
	`˛ór
(); 
	}
}

73 
	$num_bôs
() const {

74  
BIT_COUNT
;

75 
	}
}

78 
	$num_w‹ds
() const {

79 
n
(
d©a
)/(data[0]);

80 
	`w_as£π1
(
n
==
WORDS
);

81  
n
;

82 
	}
}

90 
boﬁ
 
	$ovîœp
(
w_bôve˘‹_t
 &
mîged
, c⁄° w_bôve˘‹_à&
Ÿhî
) const

92  
	`w‹ds_ovîœp
(
mîged
, 
Ÿhî
Ë=
	`num_w‹ds
();

93 
	}
}

102 
	$w‹ds_ovîœp
(
w_bôve˘‹_t
 &
mîged
, c⁄° w_bôve˘‹_à&
Ÿhî
) const

104 c⁄° *
möe
=&
d©a
[0];

105 c⁄° *
theús
=&
Ÿhî
.
d©a
[0];

106 *
√wvec
=&
mîged
.
d©a
[0];

108 
m©ches
=0;

109 
i
=0; i < 
	`num_w‹ds
(); i++)

111 i‡(*
möe
 =(*möê& *
theús
)Ë
m©ches
++;

112 *
√wvec
 = (*
möe
 | *
theús
);

113 
√wvec
++;

114 
möe
++;

115 
theús
++;

117  
m©ches
;

118 
	}
}

120 
	go°ªam
 &
	$¥öt
(
o°ªam
 &
o
) const

123 c⁄° *
£p
="";

124 
o
 << "{";

125 
i
=0; i < 
BITS
; i++)

127 if(
	`is_£t
(
i
)Ë{ 
o
 << 
£p
 << i; sep="."; }

129 
o
 << "}";

133 c⁄° *
£p
="";

134 
o
 << "(~{";

135 
i
=0; i < 
BITS
; i++)

137 if–!
	`is_£t
(
i
)Ë{ 
o
 << 
£p
 << i; sep="."; }

139 
o
 << "})";

140  
o
;

142 
	}
}

145 
	$˛ór
() {

146 
i
=0; i < 
WORDS
; i++)

147 
d©a
[
i
] = 0;

148 
	}
}

151 
boﬁ
 
	$is_em±y
() const {

152 
W‹d
 
hash
 = 0;

153 
i
=0; i < 
WORDS
; i++)

154 
hash
 |
d©a
[
i
];

155  
hash
 == 0;

156 
	}
}

158 
	$num_bôs_£t
() const {

159 
j
=0;

160 
i
=0; i < 
BITS
; i++)

162 if(
	`is_£t
(
i
)Ë
j
++;

164  
j
;

165 
	}
}

168 
boﬁ
 
	$is_fuŒ
() const {

169  
	`num_bôs_£t
(Ë=
BIT_COUNT
;

170 
	}
}

173 
	$c›y
(c⁄° 
w_bôve˘‹_t
 &
Ÿhî
) {

174 
i
=0; i < 
WORDS
; i++)

175 
d©a
[
i
] = 
Ÿhî
.data[i];

176 
	}
}

178 
	#BIT_VECTOR_PROLOGUE
(
idx
) \

179 
	`w_as£π1
(
idx
 < 
BITS
); \

180 
W‹d
 
wdex
 = 
idx
 / 
BITS_PER_WORD
; \

181 
W‹d
 
bdex
 = 
idx
 % 
BITS_PER_WORD


	)

184 
W‹d
 
	$gë_bô
(
W‹d
 
idx
) const {

185 
	`BIT_VECTOR_PROLOGUE
(
idx
);

186  (
d©a
[
wdex
] >> 
bdex
) & 0x1;

187 
	}
}

189 
boﬁ
 
	$is_£t
(
W‹d
 
idx
) const {

190  (
	`gë_bô
(
idx
) == 0x1);

191 
	}
}

193 
	$£t_bô
(
W‹d
 
idx
) {

194 
	`BIT_VECTOR_PROLOGUE
(
idx
);

195 
d©a
[
wdex
] |(1u»<< 
bdex
);

196 
	}
}

198 
	$˛ór_bô
(
W‹d
 
idx
) {

199 
	`BIT_VECTOR_PROLOGUE
(
idx
);

200 
d©a
[
wdex
] &~(1u»<< 
bdex
);

201 
	}
}

202 #unde‡
BIT_VECTOR_PROLOGUE


	@src/fc/w_compat_strstream.cpp

33 
	~<w_com∑t_°r°ªam.h
>

34 
	~<Æg‹ôhm
>

35 
	~<√w
>

36 
	~<c°dlib
>

37 
	~<c°rög
>

38 
	~<˛imôs
>

41 
«me•a˚
 
	gsh‹e_com∑t
 {

43 
usög
 
«me•a˚
 
	g°d
;

47 
	g°r°ªambuf
::
°r°ªambuf
(
°ªamsize
 
öôül_ˇ∑côy
)

48 : 
_Ba£
(),

49 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

50 
_M_dy«mic
(
åue
),

51 
_M_c⁄°™t
(
Ál£
)

53 
°ªamsize
 
	gn
 = 
max
(
öôül_ˇ∑côy
, streamsize(16));

55 * 
	gbuf
 = 
_M_Æloc
(
n
);

56 i‡(
	gbuf
) {

57 
£ç
(
buf
, bu‡+ 
n
);

58 
£tg
(
buf
, buf, buf);

62 
	g°r°ªambuf
::
°r°ªambuf
(* (*
Æloc_f
)(
size_t
), (*
‰ì_f
)(*))

63 : 
_Ba£
(),

64 
_M_Æloc_fun
(
Æloc_f
), 
_M_‰ì_fun
(
‰ì_f
),

65 
_M_dy«mic
(
åue
),

66 
_M_c⁄°™t
(
Ál£
)

68 
°ªamsize
 
	gn
 = 16;

70 * 
	gbuf
 = 
_M_Æloc
(
n
);

71 i‡(
	gbuf
) {

72 
£ç
(
buf
, bu‡+ 
n
);

73 
£tg
(
buf
, buf, buf);

77 
	g°r°ªambuf
::
°r°ªambuf
(* 
gë
, 
°ªamsize
 
n
, * 
put
)

78 : 
_Ba£
(),

79 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

80 
_M_dy«mic
(
Ál£
),

81 
_M_c⁄°™t
(
Ál£
)

83 
_M_£tup
(
gë
, 
put
, 
n
);

86 
	g°r°ªambuf
::
°r°ªambuf
(sig√d * 
gë
, 
°ªamsize
 
n
, sig√d * 
put
)

87 : 
_Ba£
(),

88 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

89 
_M_dy«mic
(
Ál£
),

90 
_M_c⁄°™t
(
Ál£
)

92 
_M_£tup
(
ªöãΩªt_ˇ°
<*>(
gë
),ÑeöãΩªt_ˇ°<*>(
put
), 
n
);

95 
	g°r°ªambuf
::
°r°ªambuf
(* 
gë
, 
°ªamsize
 
n
,

96 * 
put
)

97 : 
_Ba£
(),

98 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

99 
_M_dy«mic
(
Ál£
),

100 
_M_c⁄°™t
(
Ál£
)

102 
_M_£tup
(
ªöãΩªt_ˇ°
<*>(
gë
),ÑeöãΩªt_ˇ°<*>(
put
), 
n
);

105 
	g°r°ªambuf
::
°r°ªambuf
(c⁄° * 
gë
, 
°ªamsize
 
n
)

106 : 
_Ba£
(),

107 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

108 
_M_dy«mic
(
Ál£
),

109 
_M_c⁄°™t
(
åue
)

111 
_M_£tup
(
c⁄°_ˇ°
<*>(
gë
), 0, 
n
);

114 
	g°r°ªambuf
::
°r°ªambuf
(c⁄° sig√d * 
gë
, 
°ªamsize
 
n
)

115 : 
_Ba£
(),

116 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

117 
_M_dy«mic
(
Ál£
),

118 
_M_c⁄°™t
(
åue
)

120 
_M_£tup
(
ªöãΩªt_ˇ°
<*>(
c⁄°_ˇ°
<sig√d *>(
gë
)), 0, 
n
);

123 
	g°r°ªambuf
::
°r°ªambuf
(c⁄° * 
gë
, 
°ªamsize
 
n
)

124 : 
_Ba£
(),

125 
_M_Æloc_fun
(0), 
_M_‰ì_fun
(0),

126 
_M_dy«mic
(
Ál£
),

127 
_M_c⁄°™t
(
åue
)

129 
_M_£tup
(
ªöãΩªt_ˇ°
<*>(
c⁄°_ˇ°
<*>(
gë
)), 0, 
n
);

132 
	g°r°ªambuf
::~
°r°ªambuf
()

134 i‡(
_M_dy«mic


136 
_M_‰ì
(
eback
());

139 * 
	g°r°ªambuf
::
°r
()

141  
eback
();

144 
	g°r°ªambuf
::
pcou¡
() const

146  
µå
(Ë?Ö±r(Ë- 
pba£
() : 0;

149 
	g°r°ªambuf
::
öt_ty≥
 
°r°ªambuf
::
ovîÊow
(öt_ty≥ 
c
) {

150 i‡(
c
 =
åaôs_ty≥
::
eof
())

151  
åaôs_ty≥
::
nŸ_eof
(
c
);

154 i‡(
µå
(Ë=
ï±r
(Ë&& 
_M_dy«mic


155 && !
_M_c⁄°™t
) {

156 
±rdiff_t
 
ﬁd_size
 = 
ï±r
(Ë- 
pba£
();

157 
±rdiff_t
 
	g√w_size
 = 
max
(2 * 
ﬁd_size
,Ötrdiff_t(1));

159 * 
	gbuf
 = 
_M_Æloc
(
√w_size
);

160 i‡(
	gbuf
) {

161 
mem˝y
(
buf
, 
pba£
(), 
ﬁd_size
);

163 * 
	gﬁd_buf„r
 = 
pba£
();

164 
boﬁ
 
	gªposôi⁄_gë
 = 
Ál£
;

165 
±rdiff_t
 
	gﬁd_gë_off£t
;

166 i‡(
g±r
() != 0) {

167 
ªposôi⁄_gë
 = 
åue
;

168 
	gﬁd_gë_off£t
 = 
g±r
(Ë- 
eback
();

171 
£ç
(
buf
, bu‡+ 
√w_size
);

172 
pbump
(
ﬁd_size
);

174 i‡(
	gªposôi⁄_gë
)

175 
£tg
(
buf
, bu‡+ 
ﬁd_gë_off£t
, bu‡+ 
max
(ﬁd_gë_off£t, 
ﬁd_size
));

177 
_M_‰ì
(
ﬁd_buf„r
);

181 i‡(
µå
(Ë!
ï±r
()) {

182 *
µå
(Ë
c
;

183 
pbump
(1);

184  
	gc
;

187  
	gåaôs_ty≥
::
eof
();

190 
	g°r°ªambuf
::
öt_ty≥
 
°r°ªambuf
::
pbackÁû
(öt_ty≥ 
c
)

192 i‡(
g±r
(Ë!
eback
()) {

193 i‡(
c
 =
_Tøôs
::
eof
()) {

194 
gbump
(-1);

195  
	g_Tøôs
::
nŸ_eof
(
c
);

197 i‡(
	gc
 =
g±r
()[-1]) {

198 
gbump
(-1);

199  
	gc
;

201 i‡(!
	g_M_c⁄°™t
) {

202 
gbump
(-1);

203 *
g±r
(Ë
c
;

204  
	gc
;

208  
	g_Tøôs
::
eof
();

211 
	g°r°ªambuf
::
öt_ty≥
 
°r°ªambuf
::
undîÊow
()

213 i‡(
g±r
(Ë=
eg±r
(Ë&& 
µå
() &&Öptr() >Égptr())

214 
£tg
(
eback
(), 
g±r
(), 
µå
());

216 i‡(
g±r
(Ë!
eg±r
())

217  (Ë*
g±r
();

219  
	g_Tøôs
::
eof
();

222 
	gbasic_°ªambuf
<, 
	gch¨_åaôs
<> >*

223 
	g°r°ªambuf
::
£tbuf
(*, 
°ªamsize
)

225  
	gthis
;

228 
	g°r°ªambuf
::
pos_ty≥


229 
°r°ªambuf
::
£ekoff
(
off_ty≥
 
off
,

230 
ios_ba£
::
£ekdú
 
dú
, ios_ba£::
›ímode
 
mode
)

232 
boﬁ
 
do_gë
 = 
Ál£
;

233 
boﬁ
 
	gdo_put
 = 
Ál£
;

235 i‡((
	gmode
 & (
	gios_ba£
::
ö
 | 
ios_ba£
::
out
)) ==

236 (
ios_ba£
::
ö
 | ios_ba£::
out
) &&

237 (
dú
 =
ios_ba£
::
beg
 || dú =ios_ba£::
íd
))

238 
do_gë
 = 
do_put
 = 
åue
;

239 i‡(
	gmode
 & 
	gios_ba£
::
ö
)

240 
do_gë
 = 
åue
;

241 i‡(
	gmode
 & 
	gios_ba£
::
out
)

242 
do_put
 = 
åue
;

246 i‡((!
	gdo_gë
 && !
	gdo_put
Ë|| (do_puà&& !
µå
()Ë|| !
g±r
())

247  
pos_ty≥
(
off_ty≥
(-1));

249 * 
	g£eklow
 = 
eback
();

250 * 
	g£ekhigh
 = 
ï±r
(Ë?Éµå(Ë: 
eg±r
();

252 
off_ty≥
 
	g√woff
;

253 
	gdú
) {

254 
	gios_ba£
::
beg
:

255 
√woff
 = 0;

257 
	gios_ba£
::
íd
:

258 
√woff
 = 
£ekhigh
 - 
£eklow
;

260 
	gios_ba£
::
cur
:

261 
√woff
 = 
do_put
 ? 
µå
(Ë- 
£eklow
 : 
g±r
() - seeklow;

264  
pos_ty≥
(
off_ty≥
(-1));

267 
	goff
 +
√woff
;

268 i‡(
	goff
 < 0 || of‡> 
	g£ekhigh
 - 
	g£eklow
)

269  
pos_ty≥
(
off_ty≥
(-1));

271 i‡(
	gdo_put
) {

272 i‡(
	g£eklow
 + 
	goff
 < 
pba£
()) {

273 
£ç
(
£eklow
, 
ï±r
());

274 
pbump
(
off
);

277 
£ç
(
pba£
(), 
ï±r
());

278 
pbump
(
off
 - (
pba£
(Ë- 
£eklow
));

281 i‡(
	gdo_gë
) {

282 i‡(
	goff
 <
eg±r
(Ë- 
£eklow
)

283 
£tg
(
£eklow
, sìklow + 
off
, 
eg±r
());

284 i‡(
	goff
 <
µå
(Ë- 
£eklow
)

285 
£tg
(
£eklow
, sìklow + 
off
, 
µå
());

287 
£tg
(
£eklow
, sìklow + 
off
, 
ï±r
());

290  
pos_ty≥
(
√woff
);

293 
	g°r°ªambuf
::
pos_ty≥


294 
°r°ªambuf
::
£ekpos
(
pos_ty≥
 
pos
, 
ios_ba£
::
›ímode
 
mode
)

296  
£ekoff
(
pos
 - 
pos_ty≥
(
off_ty≥
(0)), 
ios_ba£
::
beg
, 
mode
);

300 * 
	g°r°ªambuf
::
_M_Æloc
(
size_t
 
n
)

302 i‡(
_M_Æloc_fun
)

303  
°©ic_ˇ°
<*>(
_M_Æloc_fun
(
n
));

305  
√w
 [
n
];

308 
	g°r°ªambuf
::
_M_‰ì
(* 
p
)

310 i‡(
p
) {

311 i‡(
_M_‰ì_fun
) {

312 
_M_‰ì_fun
(
p
);

315 
	gdñëe
[] 
	gp
;

320 
	g°r°ªambuf
::
_M_£tup
(* 
gë
, * 
put
, 
°ªamsize
 
n
)

322 i‡(
	ggë
) {

323 
size_t
 
	gN
 = 
n
 > 0 ? size_t“Ë:Ç =0 ? 
°æí
(
gë
Ë: size_t(
INT_MAX
);

325 i‡(
	gput
) {

326 
£tg
(
gë
, gë, 
put
);

327 
£ç
(
put
,Öuà+ 
N
);

330 
£tg
(
gë
, gë, gë + 
N
);

338 
	gi°r°ªam
::
i°r°ªam
(* 
s
)

339 : 
basic_ios
<>(), 
	gbasic_i°ªam
<>(0), 
_M_buf
(
s
, 0)

341 
	gbasic_ios
<>::
öô
(&
_M_buf
);

344 
	gi°r°ªam
::
i°r°ªam
(c⁄° * 
s
)

345 : 
basic_ios
<>(), 
	gbasic_i°ªam
<>(0), 
_M_buf
(
s
, 0)

347 
	gbasic_ios
<>::
öô
(&
_M_buf
);

350 
	gi°r°ªam
::
i°r°ªam
(* 
s
, 
°ªamsize
 
n
)

351 : 
basic_ios
<>(), 
	gbasic_i°ªam
<>(0), 
_M_buf
(
s
, 
n
)

353 
	gbasic_ios
<>::
öô
(&
_M_buf
);

356 
	gi°r°ªam
::
i°r°ªam
(c⁄° * 
s
, 
°ªamsize
 
n
)

357 : 
basic_ios
<>(), 
	gbasic_i°ªam
<>(0), 
_M_buf
(
s
, 
n
)

359 
	gbasic_ios
<>::
öô
(&
_M_buf
);

362 
	gi°r°ªam
::~
i°r°ªam
() {}

364 
°r°ªambuf
* 
i°r°ªam
::
rdbuf
() const {

365  
c⁄°_ˇ°
<
°r°ªambuf
*>(&
_M_buf
);

368 * 
	gi°r°ªam
::
°r
(Ë{  
_M_buf
.str(); }

373 
	go°r°ªam
::
o°r°ªam
()

374 : 
basic_ios
<>(), 
	gbasic_o°ªam
<>(0), 
_M_buf
()

376 
	gbasic_ios
<>::
öô
(&
_M_buf
);

379 
	go°r°ªam
::
o°r°ªam
(* 
s
, 
n
, 
ios_ba£
::
›ímode
 
mode
)

380 : 
basic_ios
<>(), 
	gbasic_o°ªam
<>(0),

381 
_M_buf
(
s
, 
n
, 
mode
 & 
ios_ba£
::
≠p
 ? s + 
°æí
(s) : s)

383 
basic_ios
<>::
öô
(&
_M_buf
);

386 
	go°r°ªam
::~
o°r°ªam
() {}

388 
°r°ªambuf
* 
o°r°ªam
::
rdbuf
() const

390  
c⁄°_ˇ°
<
°r°ªambuf
*>(&
_M_buf
);

393 * 
	go°r°ªam
::
°r
()

395  
_M_buf
.
°r
();

398 
	go°r°ªam
::
pcou¡
() const

400  
_M_buf
.
pcou¡
();

	@src/fc/w_compat_strstream.h

33 #i‚de‡
__SGI_STL_STRSTREAM_W_COMPAT_


34 
	#__SGI_STL_STRSTREAM_W_COMPAT_


	)

36 #i‡
deföed
(
__sgi
Ë&& !deföed(
__GNUC__
Ë&& !deföed(
_STANDARD_C_PLUS_PLUS
)

37 #îr‹ 
This
 
hódî
 
fûe
 
ªquúes
 
the
 -
LANG
:
°d
 
›ti⁄


40 
	~<i°ªam
>

41 
	~<°ªambuf
>

42 
	~<o°ªam
>

43 
	~<io°ªam
>

44 
	~<ios
>

48 
«me•a˚
 
	gsh‹e_com∑t
 {

50 
usög
 
«me•a˚
 
	g°d
;

57 
˛ass
 
	g°r°ªambuf
 : 
public
 
basic_°ªambuf
<, 
	gch¨_åaôs
<> >

59 
	gpublic
:

60 
ch¨_åaôs
<> 
	t_Tøôs
;

61 
	gbasic_°ªambuf
<, 
	t_Tøôs
> 
	t_Ba£
;

63 
	gpublic
:

64 
ex∂icô
 
°r°ªambuf
(
°ªamsize
 
__öôül_ˇ∑côy
 = 0);

65 
°r°ªambuf
(* (*
__Æloc
)(
size_t
), (*
__‰ì
)(*));

67 
°r°ªambuf
(* 
__gë
, 
°ªamsize
 
__n
, * 
__put
 = 0);

68 
°r°ªambuf
(sig√d * 
__gë
, 
°ªamsize
 
__n
, sig√d * 
__put
 = 0);

69 
°r°ªambuf
(* 
__gë
, 
°ªamsize
 
__n
, * 
__put
=0);

71 
°r°ªambuf
(c⁄° * 
__gë
, 
°ªamsize
 
__n
);

72 
°r°ªambuf
(c⁄° sig√d * 
__gë
, 
°ªamsize
 
__n
);

73 
°r°ªambuf
(c⁄° * 
__gë
, 
°ªamsize
 
__n
);

75 
	gvútuÆ
 ~
°r°ªambuf
();

77 
	gpublic
:

78 * 
°r
();

79 
pcou¡
() const;

81 
	g¥Ÿe˘ed
:

82 
vútuÆ
 
öt_ty≥
 
ovîÊow
(öt_ty≥ 
__c
 = 
_Tøôs
::
eof
());

83 
vútuÆ
 
öt_ty≥
 
pbackÁû
(öt_ty≥ 
__c
 = 
_Tøôs
::
eof
());

84 
vútuÆ
 
öt_ty≥
 
undîÊow
();

85 
vútuÆ
 
_Ba£
* 
£tbuf
(* 
__buf
, 
°ªamsize
 
__n
);

86 
vútuÆ
 
pos_ty≥
 
£ekoff
(
off_ty≥
 
__off
, 
ios_ba£
::
£ekdú
 
__dú
,

87 
ios_ba£
::
›ímode
 
__mode


88 
ios_ba£
::
ö
 | ios_ba£::
out
);

89 
vútuÆ
 
pos_ty≥
 
£ekpos
’os_ty≥ 
__pos
, 
ios_ba£
::
›ímode
 
__mode


90 
ios_ba£
::
ö
 | ios_ba£::
out
);

92 
	g¥iv©e
:

94 * 
_M_Æloc
(
size_t
);

95 
_M_‰ì
(*);

98 
_M_£tup
(* 
__gë
, * 
__put
, 
°ªamsize
 
__n
);

100 
	g¥iv©e
:

101 * (*
_M_Æloc_fun
)(
size_t
);

102 (*
	g_M_‰ì_fun
)(*);

104 
boﬁ
 
	g_M_dy«mic
 : 1;

105 
boﬁ
 
	g_M_c⁄°™t
 : 1;

109 
˛ass
 
	gi°r°ªam
 : 
public
 
basic_i°ªam
<>

111 
public
:

112 
ex∂icô
 
i°r°ªam
(*);

113 
ex∂icô
 
i°r°ªam
(const *);

114 
i°r°ªam
(* , 
°ªamsize
);

115 
i°r°ªam
(c⁄° *, 
°ªamsize
);

116 
	gvútuÆ
 ~
i°r°ªam
();

118 
°r°ªambuf
* 
rdbuf
() const;

119 * 
°r
();

121 
	g¥iv©e
:

122 
°r°ªambuf
 
_M_buf
;

127 
˛ass
 
	go°r°ªam
 : 
public
 
basic_o°ªam
<>

129 
public
:

130 
o°r°ªam
();

131 
o°r°ªam
(*, , 
ios_ba£
::
›ímode
 = ios_ba£::
out
);

132 
	gvútuÆ
 ~
o°r°ªam
();

134 
°r°ªambuf
* 
rdbuf
() const;

135 * 
°r
();

136 
pcou¡
() const;

138 
	g¥iv©e
:

139 
°r°ªambuf
 
_M_buf
;

	@src/fc/w_debug.cpp

30 
	~"w_deföes.h
"

34 #ifde‡
__GNUG__


35 #¥agm®
im∂emíèti⁄


37 
	~<w_debug.h
>

40 #ifde‡
__ERRLOG_C__


49 
	~<w_°ªam.h
>

50 
	~<io°ªam
>

51 
	~<c°rög
>

52 
	~<c°dlib
>

53 
	~"w_debug.h
"

55 #ifde‡
W_TRACE


56 
w_debug
 
_w_debug
("debug", 
gëív
("DEBUG_FILE"));

60 #ifde‡
USE_REGEX


61 
boﬁ
 
	g_w_debug
::
ª_ªady
 = 
Ál£
;

62 
ªgex_t
 
	g_w_debug
::
ª_posix_ª
;

63 * 
	g_w_debug
::
ª_îr‹_°r
 = "BadÑegularÉxpression";

78 
	gw_debug
::
	$w_debug
(c⁄° *
n
, c⁄° *
f
) :

79 
	`EºLog
(
n
, 
log_to_unix_fûe
, 
f
?f:"-")

81 #ifde‡
USE_REGEX


84 
ª_sy¡ax_›ti⁄s
 = 
RE_NO_BK_VBAR
;

87 
mask
 = 0;

88 c⁄° *
ãmp_Êags
 = 
	`gëív
("DEBUG_FLAGS");

90 if(!
ãmp_Êags
) {

91 
ãmp_Êags
 = "";

92 
mask
 = 
_n⁄e
;

96 
_Êags
 = 
√w
 [
	`°æí
(
ãmp_Êags
)+1];

97 
	`°r˝y
(
_Êags
, 
ãmp_Êags
);

98 
	`as£π
(
_Êags
 !
NULL
);

100 if(!
	`°rcmp
(
_Êags
,"all")) {

101 
mask
 |
_Æl
;

102 #ifde‡
USE_REGEX


103 } if(!
	`n⁄e
()) {

104 *
s
;

105 if((
s
=
	`ª_comp_debug
(
_Êags
)) != 0) {

106 if(
	`°r°r
(
s
, "NoÖreviousÑegularÉxpression")) {

109 
˚º
 << "Eº‹ i¿ªgex, fœg†nŸ së: " << 
s
 << 
ídl
;

111 
mask
 = 
_n⁄e
;

116 
	`as£π
–!–
	`n⁄e
(Ë&& 
	`Æl
() ) );

117 
	}
}

119 
	gw_debug
::~
	$w_debug
()

121 if(
_Êags
Ë
dñëe
 [] _flags;

122 
_Êags
 = 
NULL
;

124 
	}
}

127 
	gw_debug
::
	$£tÊags
(c⁄° *
√wÊags
)

129 if(!
√wÊags
) ;

130 #ifde‡
USE_REGEX


132 *
s
;

133 if((
s
=
	`ª_comp_debug
(
√wÊags
)) != 0) {

134 
˚º
 << "Eº‹ i¿ªgex, fœg†nŸ së: " << 
s
 << 
ídl
;

135 
mask
 = 
_n⁄e
;

141 
mask
 = 0;

142 if(
_Êags
Ë
dñëe
 [] _flags;

143 
_Êags
 = 
√w
 [
	`°æí
(
√wÊags
)+1];

144 
	`°r˝y
(
_Êags
, 
√wÊags
);

145 if(
	`°æí
(
_Êags
)==0) {

146 
mask
 |
_n⁄e
;

147 } if(!
	`°rcmp
(
_Êags
,"all")) {

148 
mask
 |
_Æl
;

150 
	`as£π
–!–
	`n⁄e
(Ë&& 
	`Æl
() ) );

151 
	}
}

153 #ifde‡
USE_REGEX


155 
	gw_debug
::
	$ª_exec_debug
(c⁄° * 
°rög
)

157 i‡(!
ª_ªady
) {

158 
˚º
 << 
__LINE__


159 << " " << 
__FILE__


160 << ": Nÿcompûed såög." <<
ídl
;

163 
m©ch
 = (
	`ª_exec_posix
(
°rög
)==1);

164  
m©ch
;

165 
	}
}

168 
	gw_debug
::
	$ª_comp_debug
(c⁄° * 
∑âîn
)

170 i‡(
ª_ªady
)

171 
	`ªg‰ì
(&
ª_posix_ª
);

172 *
ªs
;

174 
ªs
 = 
	`ª_comp_posix
(
∑âîn
);

175 if(
ªs
) {

176 
˚º
 << 
__LINE__


177 << " " << 
__FILE__


178 << " Eº‹ i¿ª_comp_debug: " << 
ªs
 << 
ídl
;

180 
ª_ªady
 = 
åue
;

181  
NULL
;

182 
	}
}

187 
	gw_debug
::
	$Êag_⁄
(

188 c⁄° *
‚
,

189 c⁄° *
fûe


192 
ªs
 = 0;

193 
	`as£π
–!–
	`n⁄e
(Ë&& 
	`Æl
() ) );

194 if(
_Êags
==
NULL
) {

195 
ªs
 = 0;

197 } if(
	`n⁄e
()) {

198 
ªs
 = 0;

199 } if(
	`Æl
()) {

200 
ªs
 = 1;

201 #ifde‡
USE_REGEX


202 } if(
fûe
 && 
	`ª_exec_debug
(file)) {

203 
ªs
 = 1;

204 } if(
‚
 && 
	`ª_exec_debug
(fn)) {

205 
ªs
 = 1;

210 if(
fûe
 && 
	`°r°r
(
_Êags
,file)) {

211 
ªs
 = 1;

212 } if(
‚
 && 
	`°r°r
(
_Êags
,fn)) {

213 
ªs
 = 1;

215  
ªs
;

216 
	}
}

220 
	gw_debug
::
	$memdump
(*
p
, 
Àn
)

222 
i
;

223 *
c
 = (*)
p
;

225 
˛og
 << "x";

226 
i
=0; i< 
Àn
; i++) {

227 
	`W_FORM2
(
˛og
,("%2.2x", (*(
c
+
i
))&0xff));

228 if(
i
%32 == 31) {

229 
˛og
 << 
ídl
 << "x";

230 } if(
i
%4 == 3) {

231 
˛og
 << " x";

234 
˛og
 << "--d⁄e" << 
ídl
;

235 
	}
}

	@src/fc/w_debug.h

53 #i‚de‡
W_DEBUG_H


54 
	#W_DEBUG_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 #i‚de‡
W_BASE_H


66 
	~<w_ba£.h
>

69 
	~<w_°ªam.h
>

71 #i‚de‡
ERRLOG_H


72 
	~<îæog.h
>

131 
	~<ˇs£π
>

133 #unde‡
USE_REGEX


135 #ifde‡
USE_REGEX


136 
	~"ªgex_posix.h
"

141 
	gios
::
	tfmtÊags
 
	tw_dbg_fmtÊags
;

144 #ifde‡
W_TRACE


146 
	#_°rù_fûíame
(
f
Ë
	)
f

148 
	#DUMP
()\

150 if(
_w_debug
.
	`Êag_⁄
(
__func__
,
__FILE__
)) {\

151 
_w_debug
.
˛og
 << 
__LINE__
 << " " << 
	`_°rù_fûíame
(
__FILE__
Ë<< ": " << 
__func__
\

152 << 
Êushl
; } } 0)

	)

154 
	#FUNC
(
‚
)\

155 
	`DUMP
()

	)

157 
	#RETURN
 \

159 if(
_w_debug
.
	`Êag_⁄
(
__func__
,
__FILE__
)) {\

160 
w_dbg_fmtÊags
 
ﬁd
 = 
_w_debug
.
˛og
.
	`£tf
(
ios
::
dec
, ios::
ba£fõld
); \

161 
_w_debug
.
˛og
 << 
__LINE__
 << " " << 
	`_°rù_fûíame
(
__FILE__
) << ":" ; \

162 
_w_debug
.
˛og
.
	`£tf
(
ﬁd
, 
ios
::
ba£fõld
); \

163 
_w_debug
.
˛og
 << "ªtu∫ from " << 
__func__
 << 
Êushl
; } } 0); \

164 

	)

167 
	#DUMP
(
°r
)

	)

168 
	#FUNC
(
‚
)

	)

169 #unde‡
RETURN


170 
	#RETURN
 

	)

191 ˛as†
	cw_debug
 : 
public
 
EºLog
 {

192 
¥iv©e
:

193 *
_Êags
;

194 íum { 
	m_Æl
 = 0x1, 
	m_n⁄e
 = 0x2 };

195 
	gmask
;

196 
	g_åa˚_Àvñ
;

198 #ifde‡
USE_REGEX


199 
ªgex_t
 
	gª_posix_ª
;

200 
boﬁ
 
	gª_ªady
;

201 * 
	gª_îr‹_°r
;

202 * 
ª_comp_debug
(c⁄° * 
∑âîn
);

203 
ª_exec_debug
(c⁄° * 
°rög
);

206 
	$Æl
(Ë{  (
mask
 & 
_Æl
Ë? 1 : 0; 
	}
}

207 
	$n⁄e
(Ë{  (
mask
 & 
_n⁄e
Ë? 1 : 0; 
	}
}

209 
	gpublic
:

210 
w_debug
(c⁄° *
n
, c⁄° *
f
);

211 ~
w_debug
();

212 
Êag_⁄
(c⁄° *
‚
, c⁄° *
fûe
);

213 c⁄° *
	$Êags
(Ë{  
_Êags
; 
	}
}

214 
£tÊags
(c⁄° *
√wÊags
);

215 
memdump
(*
p
, 
Àn
);

216 
	$åa˚_Àvñ
(Ë{  
_åa˚_Àvñ
; 
	}
}

218 
w_debug
 
_w_debug
;

220 #i‡
deföed
(
W_TRACE
)

222 
	#DBG1
(
a
) do {\

223 if(
_w_debug
.
	`Êag_⁄
(
__func__
,
__FILE__
)) { \

224 
w_dbg_fmtÊags
 
ﬁd
 = 
_w_debug
.
˛og
.
	`£tf
(
ios
::
dec
, ios::
ba£fõld
); \

225 
_w_debug
.
˛og
 << 
	`_°rù_fûíame
(
__FILE__
Ë<< ":" << 
__LINE__
 << ":" ; \

226 
_w_debug
.
˛og
.
	`£tf
(
ﬁd
, 
ios
::
ba£fõld
); \

227 
_w_debug
.
˛og
 
a
 << 
Êushl
; \

228 } } 0)

	)

230 
	#DBG
(
a
Ë
	`DBG1
◊)

	)

233 
	#DBG
(
a
)

	)

238 
	#DBGTHRD
(
¨g
Ë
	`DBG
(<<"Åh."<<
°hªad_t
::
	`me
()->
id
 << " "árg)

	)

	@src/fc/w_defines.h

53 #i‚de‡
W_DEFINES_H


54 
	#W_DEFINES_H


	)

58 
	~"sh‹e.def
"

65 #ifde‡
PACKAGE


66 #unde‡
PACKAGE


68 #ifde‡
PACKAGE_NAME


69 #unde‡
PACKAGE_NAME


71 #ifde‡
PACKAGE_STRING


72 #unde‡
PACKAGE_STRING


74 #ifde‡
PACKAGE_BUGREPORT


75 #unde‡
PACKAGE_BUGREPORT


77 #ifde‡
PACKAGE_TARNAME


78 #unde‡
PACKAGE_TARNAME


80 #ifde‡
PACKAGE_VERSION


81 #unde‡
PACKAGE_VERSION


83 #ifde‡
VERSION


84 #unde‡
VERSION


86 
	~"sh‹e-c⁄fig.h
"

94 #i‡
deföed
(
HAVE_PURIFY_H
Ë|| deföed(
PURIFY
)

95 
	~<purify.h
>

96 
	#ZERO_INIT
 1

	)

99 #ifde‡
HAVE_VALGRIND_H


100 
	#USING_VALGRIND
 1

	)

101 
	~<vÆgröd.h
>

102 
	#ZERO_INIT
 1

	)

103 #ñi‡
HAVE_VALGRIND_VALGRIND_H


104 
	#USING_VALGRIND
 1

	)

105 
	~<vÆgröd/vÆgröd.h
>

106 
	#ZERO_INIT
 1

	)

109 #ifde‡
USING_VALGRIND


110 
	~"vÆgröd_hñp.h
"

113 #ifde‡
__SUNPRO_CC


114 
	~<î∫o.h
>

115 
	~<°ddef.h
>

116 
	~<°dlib.h
>

117 
	~<limôs.h
>

119 
	~<˚ºno
>

120 
	~<c°ddef
>

121 
	~<c°dlib
>

122 
	~<˛imôs
>

125 
	~<uni°d.h
>

127 
	~<öây≥s.h
>

133 #ifde‡
ARCH_LP64


135 #i‡
_SC_V6_LP64_OFF64
 || 
_XBS5_LP64_OFF64
 || 
_SC_V6_LPBIG_OFFBIG
 || 
_XBS5_LPBIG_OFFBIG


137 #w¨nög 
Tu∫ög
 
off
 
ARCH_LP64


138 #unde‡
ARCH_LP64


144 #i‚de‡
ARCH_LP64


146 #i‡
_SC_V6_ILP32_OFFBIG
 || 
_XBS5_ILP32_OFFBIG


148 #w¨nög 
œrge
 
fûe
 
off_t
 
suµ‹t
 
£ems
 
to
 
be
 
missög
 
acc‹ög
Åÿ
sysc⁄f
 !

155 #i‡
SM_PAGESIZE
 > 32768

156 #îr‹ 
SM
 
d€s
 
nŸ
 
suµ‹t
 
∑ges
 
this
 
œrge
.

159 #ifde‡
__GNUC__


160 
	#MAYBE_UNUSED
 
	`__©åibuã__
((
unu£d
))

	)

162 
	#MAYBE_UNUSED


	)

165 
	~<sys/ty≥s.h
>

166 
usög
 
«me•a˚
 
	g°d
;

175 
	gãm∂©e
 <
ty≥«me
 
	gT
>

176 
ölöe


177 
T
 
	$Æign⁄
(
T
 
p
, 
size_t
 
a
) {

178 
size_t
 
n
 = (size_tË
p
;

179 
size_t
 
rvÆ
 = (
n
 + 
a
 - 1) & -a;

180  (
T
Ë
rvÆ
;

181 
	}
}

185 
	#ALIGNON
 0x8

	)

188 
	gãm∂©e
 <
ty≥«me
 
	gT
>

189 
ölöe


190 
T
 
	$Æign
(
T
 
sz
Ë{  
	`Æign⁄
(sz, 
ALIGNON
); 
	}
}

193 
	gãm∂©e
 <
size_t
 
	gN
, size_à
	gK
=
ALIGNON
>

194 
	s°©ic_Æign
 {

195 íum { 
vÆue
=(
N
+
K
-1) & -K };

199 
	gãm∂©e
<
˛ass
 
	gT
>

200 
ölöe
 
T
* 
	$Æig√d_ˇ°
(c⁄°* 
±r
)

203  (
T
*Ë
	`Æign⁄
(
±r
, 
	`__Æignof__
(T));

204 
	}
}

213 
	gãm∂©e
<
	gN
>

214 ˛as†
	cÆloˇN
 {

215 
	m_buf
[
N
+
__Æignof__
(
uöçå_t
)];

216 
	mpublic
:

217 
›î©‹
 *(Ë{  
Æig√d_ˇ°
<
uöçå_t
>(
_buf
); }

	@src/fc/w_error.cpp

53 
	~"w_deföes.h
"

57 #ifde‡
__GNUC__


58 #¥agm®
im∂emíèti⁄
 "w_error.h"

61 
	~<c°rög
>

63 
	#W_SOURCE


	)

64 
	~<w_ba£.h
>

66 
	~<fc_eöfo_gí.h
>

67 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


68 
	~"block_Æloc.h
"

75 
	gw_îr‹_t
::
öfo_t
* 
w_îr‹_t
::
_ønge_°¨t
[w_îr‹_t::
max_ønge
] = {

76 
w_îr‹_t
::
îr‹_öfo
, 0

78 
	gw_ba£_t
::
uöt4_t
 
w_îr‹_t
::
_ønge_˙t
[w_îr‹_t::
max_ønge
] = {

79 
fcERRMAX
 - 
fcERRMIN
 + 1, 0

82 c⁄° *
	gw_îr‹_t
::
_ønge_«me
[
w_îr‹_t
::
max_ønge
]= {

86 
	gw_ba£_t
::
uöt4_t
 
w_îr‹_t
::
_ƒeg
 = 1;

89 c⁄° 
w_îr‹_t
 
	gw_îr‹_t
::
no_îr‹_ö°™˚
(
__FILE__
, 
__LINE__
, 0, 0, 0);

90 
w_îr‹_t
* c⁄° 
	gw_îr‹_t
::
no_îr‹
 = 
c⁄°_ˇ°
<w_îr‹_à*>(&
no_îr‹_ö°™˚
);

92 
	$w_îr‹_t_no_îr‹_code
()

94 
	}
}

96 #i‡
W_DEBUG_LEVEL
 > 3

97 
	#CHECKIT
 do {\

98 
w_îr‹_t
* 
my
 = 
_√xt
; \

99 
w_îr‹_t
* 
p
 = 
my
; \

100 
p
) { \

101 i‡(
p
 =p->
_√xt
 || 
my
 ==Ö->_next) { \

102 
˚º
 << "Recursivêîr‹ dëe˘ed:" << 
ídl
 << *
this
 <<Éndl;\

103 
	`W_FATAL
(
fcINTERNAL
); \

105 
p
 =Ö->
_√xt
; \

107 } 0)

	)

110 
	#CHECKIT


	)

113 
	gw_îr‹_t
&

114 
	gw_îr‹_t
::
	$add_åa˚_öfo
(

115 c⁄° * c⁄° 
fûíame
,

116 
uöt4_t
 
löe_num
)

118 
	`vîify_ow√r
();

119 i‡(
_åa˚_˙t
 < 
max_åa˚
) {

120 
_åa˚_fûe
[
_åa˚_˙t
] = 
fûíame
;

121 
_åa˚_löe
[
_åa˚_˙t
] = 
löe_num
;

122 ++
_åa˚_˙t
;

125  *
this
;

126 
	}
}

128 #i‡
W_DEBUG_LEVEL
 > 1

129 
	#CHECK_STRING
(
x
Ëif((xË!
NULL
Ë
	`w_as£π2
(*(xË!0)

	)

131 
	#CHECK_STRING
(
x
)

	)

134 
	gw_îr‹_t
&

135 
	gw_îr‹_t
::
	$˛ór_m‹e_öfo_msg
()

137 
dñëe
[] 
m‹e_öfo_msg
;

138 
m‹e_öfo_msg
 = 
NULL
;

139  *
this
;

140 
	}
}

142 
	gw_îr‹_t
&

143 
	gw_îr‹_t
::
	$≠≥nd_m‹e_öfo_msg
(c⁄° * 
m‹e_öfo
)

145 
	`CHECK_STRING
(
m‹e_öfo
);

146 
	`vîify_ow√r
();

147 i‡(
m‹e_öfo
)

149 
m‹e_öfo_Àn
 = 
	`°æí
(
m‹e_öfo
);

150 if(
m‹e_öfo_Àn
 > 0)

152 if(
m‹e_öfo
[
m‹e_öfo_Àn
-1] == '\n') more_info_len--;

154 
m‹e_öfo_msg_Àn
 = 
m‹e_öfo_msg
?
	`°æí
(more_info_msg):0;

155 * 
√w_m‹e_öfo_msg
 = 
√w


156 [
m‹e_öfo_Àn
 + 
m‹e_öfo_msg_Àn
 + 2];

157 if(
m‹e_öfo_msg
) {

158 
	`°r˝y
(
√w_m‹e_öfo_msg
, 
m‹e_öfo_msg
);

160 
	`°r˝y
(
√w_m‹e_öfo_msg
 + 
m‹e_öfo_msg_Àn
, 
m‹e_öfo
);

161 
√w_m‹e_öfo_msg
[
m‹e_öfo_msg_Àn
 + 
m‹e_öfo_Àn
] = '\n';

162 
√w_m‹e_öfo_msg
[
m‹e_öfo_msg_Àn
 + 
m‹e_öfo_Àn
 + 1] = '\0';

164 if(
m‹e_öfo_msg
Ë
dñëe
[] more_info_msg;

165 
m‹e_öfo_msg
 = 
√w_m‹e_öfo_msg
;

167 
	`CHECK_STRING
(
m‹e_öfo_msg
);

171  *
this
;

172 
	}
}

175 
	gw_îr‹_t
::
	$gë_m‹e_öfo_msg
() const

177 
	`CHECK_STRING
(
m‹e_öfo_msg
);

178  
m‹e_öfo_msg
;

179 
	}
}

182 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
w_îr‹_t
::
	$˛assify
(
î
)

184 
uöt4_t
 
sys
 = 0;

185 
î
) {

186 
fcOS
:

187 
sys
 = 
î∫o
;

190  
sys
;

191 
	}
}

193 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


194 
DEFINE_TLS_SCHWARZ
(
block_Æloc
<
w_îr‹_t
>, 
w_îr‹_Æloc
);

195 
	gw_îr‹_t
::
›î©‹
 
	$dñëe
(* 
p
) {

196 
block_Æloc
<
w_îr‹_t
>::
	`de°roy_obje˘
((w_îr‹_t*Ë
p
);

197 
	}
}

201 
ölöe


202 
	gw_îr‹_t
::
	$w_îr‹_t
(c⁄° * c⁄° 
fi
,

203 
uöt4_t
 
li
,

204 
îr_num_t
 
î
,

205 
w_îr‹_t
* 
li°
,

206 c⁄° * 
m‹e_öfo
)

207 : 
	`îr_num
(
î
),

208 
	`fûe
(
fi
),

209 
	`löe
(
li
),

210 
	`sys_îr_num
(
	`˛assify
(
î
)),

211 
	`m‹e_öfo_msg
(
m‹e_öfo
),

212 
	`_åa˚_˙t
(0),

213 
	$_√xt
(
li°
)

215 
	`CHECK_STRING
(
m‹e_öfo_msg
);

216 
	`˛aim
();

217 
CHECKIT
;

218 
	}
}

221 
w_îr‹_t
*

222 
	gw_îr‹_t
::
	$make
(

223 c⁄° * c⁄° 
fûíame
,

224 
uöt4_t
 
löe_num
,

225 
îr_num_t
 
îr_num
,

226 
w_îr‹_t
* 
li°
,

227 c⁄° * 
m‹e_öfo
)

229 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


230  
	`√w
 (*
w_îr‹_Æloc
Ë
	`w_îr‹_t
(
fûíame
, 
löe_num
, 
îr_num
, 
li°
, 
m‹e_öfo
);

232  
√w
 
	`w_îr‹_t
(
fûíame
, 
löe_num
, 
îr_num
, 
li°
, 
m‹e_öfo
);

235 
	}
}

237 
ölöe
 
NORET


238 
	gw_îr‹_t
::
	$w_îr‹_t
(

239 c⁄° * c⁄° 
fi
,

240 
uöt4_t
 
li
,

241 
îr_num_t
 
î
,

242 
uöt4_t
 
sys_î
,

243 
w_îr‹_t
* 
li°
,

244 c⁄° * 
m‹e_öfo
)

245 : 
	`îr_num
(
î
),

246 
	`fûe
(
fi
), 
	`löe
(
li
),

247 
	`sys_îr_num
(
sys_î
),

248 
	`m‹e_öfo_msg
(
m‹e_öfo
),

249 
	`_åa˚_˙t
(0),

250 
	$_√xt
(
li°
)

252 
	`CHECK_STRING
(
m‹e_öfo_msg
);

253 
	`˛aim
();

254 
CHECKIT
;

255 
	}
}

257 
w_îr‹_t
*

258 
	gw_îr‹_t
::
	$make
(

259 c⁄° * c⁄° 
fûíame
,

260 
uöt4_t
 
löe_num
,

261 
îr_num_t
 
îr_num
,

262 
uöt4_t
 
sys_îr
,

263 
w_îr‹_t
* 
li°
,

264 c⁄° * 
m‹e_öfo
)

266 
	`CHECK_STRING
(
m‹e_öfo
);

268 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


269  
	`√w
 (*
w_îr‹_Æloc
Ë
	`w_îr‹_t
(
fûíame
, 
löe_num
,

270 
îr_num
, 
sys_îr
, 
li°
, 
m‹e_öfo
);

274  
√w
 
	`w_îr‹_t
(
fûíame
, 
löe_num
, 
îr_num
, 
sys_îr
, 
li°
, 
m‹e_öfo
);

276 
	}
}

282 
boﬁ


283 
	gw_îr‹_t
::
	$ö£π
(

284 c⁄° * 
moduÀ«me
,

285 c⁄° 
öfo_t
 
öfo
[],

286 
uöt4_t
 
cou¡
)

288 i‡(
_ƒeg
 >
max_ønge
)

289  
Ál£
;

291 
îr_num_t
 
°¨t
 = 
öfo
[0].
îr_num
;

293 
uöt4_t
 
i
 = 0; i < 
_ƒeg
; i++) {

294 i‡(
°¨t
 >
_ønge_°¨t
[
i
]->
îr_num
 && sèπ < 
_ønge_˙t
[i])

295  
Ál£
;

296 
uöt4_t
 
íd
 = 
°¨t
 + 
cou¡
;

297 i‡(
íd
 >
_ønge_°¨t
[
i
]->
îr_num
 &&Énd < 
_ønge_˙t
[i])

298  
Ál£
;

300 
_ønge_°¨t
[
_ƒeg
] = 
öfo
;

301 
_ønge_˙t
[
_ƒeg
] = 
cou¡
;

302 
_ønge_«me
[
_ƒeg
] = 
moduÀ«me
;

304 ++
_ƒeg
;

305  
åue
;

306 
	}
}

309 
	gw_îr‹_t
::
	$îr‹_°rög
(
îr_num_t
 
îr_num
)

311 if(
îr_num
 =
w_îr‹_t
::
no_îr‹
->err_num ) {

314 
uöt4_t
 
i
;

315 
i
 = 0; i < 
_ƒeg
; i++) {

316 i‡(
îr_num
 >
_ønge_°¨t
[
i
]->err_num &&

317 
îr_num
 <
_ønge_°¨t
[
i
]->îr_num + 
_ønge_˙t
[i]) {

322 i‡(
i
 =
_ƒeg
) {

323 
	`w_îr‹_t_no_îr‹_code
();

324  
	`îr‹_°rög
–
fcNOSUCHERROR
 );

328 c⁄° 
uöt4_t
 
j
 = 
	`CAST
(, 
îr_num
 - 
_ønge_°¨t
[
i
]->err_num);

329  
_ønge_°¨t
[
i
][
j
].
îr°r
;

330 
	}
}

333 
	gw_îr‹_t
::
	$moduÀ_«me
(
îr_num_t
 
îr_num
)

335 if(
îr_num
 =
w_îr‹_t
::
no_îr‹
->err_num ) {

338 
uöt4_t
 
i
;

339 
i
 = 0; i < 
_ƒeg
; i++) {

340 i‡(
îr_num
 >
_ønge_°¨t
[
i
]->err_num &&

341 
îr_num
 <
_ønge_°¨t
[
i
]->îr_num + 
_ønge_˙t
[i]) {

346 i‡(
i
 =
_ƒeg
) {

349  
_ønge_«me
[
i
];

350 
	}
}

352 
	$f‹m©_unix_îr‹
(
îr
, *
buf
, 
bufsize
)

354 #ifde‡
HAVE_STRERROR


355 *
s
 = 
	`°ªº‹
(
îr
);

357 *
s
 = "No strerror function. Cannot format unixÉrror.";

359 
	`°∫˝y
(
buf
, 
s
, 
bufsize
);

360 
buf
[
bufsize
-1] = '\0';

361 
	}
}

363 
	go°ªam
& 
	gw_îr‹_t
::
	$¥öt_îr‹
(
o°ªam
 &
o
) const

365 i‡(
this
 =
w_îr‹_t
::
no_îr‹
) {

366  
o
 << "noÉrror";

369 
˙t
 = 1;

370 c⁄° 
w_îr‹_t
* 
p
 = 
this
;Ö;Ö =Ö->
_√xt
, ++
˙t
) {

372 c⁄° * 
f
 = 
	`°ºchr
(
p
->
fûe
, '/');

373 
f
 ? ++‡: f = 
p
->
fûe
;

374 
o
 << 
˙t
 << ".Éº‹ i¿" << 
f
 << ':' << 
p
->
löe
 << " ";

375 if(
˙t
 > 1) {

376 if(
p
 =
this
) {

377 
o
 << "Eº‹Ñecur£s, st›pög" << 
ídl
;

380 if(
p
->
_√xt
 ==Ö) {

381 
o
 << "Eº‹Çexài†ßme, st›pög" << 
ídl
;

385 if(
˙t
 > 20) {

386 
o
 << "Eº‹ chaö >20, st›pög" << 
ídl
;

389 
o
 << 
p
->
	`îr‹_°rög
’->
îr_num
);

390 
o
 << " [0x" << 
hex
 << 
p
->
îr_num
 << 
dec
 << "]";

394 
p
->
îr_num
) {

395 
fcOS
: {

396 
buf
[1024];

397 
	`f‹m©_unix_îr‹
(
p
->
sys_îr_num
, 
buf
, (buf));

398 
o
 << " --- " << 
buf
;

403 
o
 << 
ídl
;

405 i‡(
m‹e_öfo_msg
) {

406 
o
 << "\èddôi⁄Æ inf‹m©i⁄: " << 
m‹e_öfo_msg
 << 
ídl
;

409 i‡(
p
->
_åa˚_˙t
) {

410 
o
 << "\tˇŒed from:" << 
ídl
;

411 
i
 = 0; i < 
p
->
_åa˚_˙t
; i++) {

412 
f
 = 
	`°ºchr
(
p
->
_åa˚_fûe
[
i
], '/');

413 
f
 ? ++‡: f = 
p
->
_åa˚_fûe
[
i
];

414 
o
 << "\t" << 
i
 << "Ë" << 
f
 << ':'

415 << 
p
->
_åa˚_löe
[
i
] << 
ídl
;

420  
o
;

421 
	}
}

423 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	gw_îr‹_t
 &
	gobj
)

425  
	gobj
.
¥öt_îr‹
(
o
);

428 
	go°ªam
 &

429 
	gw_îr‹_t
::
	$¥öt
(
o°ªam
 &
out
)

431 
i
 = 0; i < 
_ƒeg
; i++) {

432 
îr_num_t
 
fú°
 = 
_ønge_°¨t
[
i
]->
îr_num
;

433 
œ°
 = 
fú°
 + 
_ønge_˙t
[
i
] - 1;

435 
j
 = 
fú°
; j <
œ°
; j++) {

436 c⁄° *
c
 = 
	`moduÀ_«me
(
j
);

437 c⁄° *
s
 = 
	`îr‹_°rög
(
j
);

439 
out
 << 
c
 << ":" << 
j
 << ":" << 
s
 << 
ídl
;

443  
out
;

444 
	}
}

	@src/fc/w_error.h

53 #i‚de‡
W_ERROR_H


54 
	#W_ERROR_H


	)

56 
	~"w_deföes.h
"

61 #ifde‡
__GNUG__


62 #¥agm®
öãrÁ˚


65 
	~"w_ba£.h
"

66 
	~"fc_îr‹_íum_gí.h
"

67 
	~"és.h
"

69 
	#USE_BLOCK_ALLOC_FOR_W_ERROR_T
 1

	)

70 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


71 
DECLARE_TLS_SCHWARZ
(
w_îr‹_Æloc
);

78 
	sw_îr‹_öfo_t
 {

79 
	mw_ba£_t
::
uöt4_t
 
îr_num
;

80 c⁄° *
	mîr°r
;

88 ˛as†
	cw_îr‹_t
 : 
public
 
w_ba£_t
 {

89 
public
:

90 
w_îr‹_öfo_t
 
	töfo_t
;

98 
uöt4_t
 
	tîr_num_t
;

101 c⁄° 
îr_num_t
 
	mîr_num
;

103 c⁄° * c⁄° 
	mfûe
;

104 c⁄° 
uöt4_t
 
	mlöe
;

105 c⁄° 
öt4_t
 
	msys_îr_num
;

107 
w_îr‹_t
* 
	$√xt
(Ë{  
_√xt
; }

108 
w_îr‹_t
 c⁄°* 
	$√xt
(Ëc⁄° {  
_√xt
; 
	}
}

110 
	gw_îr‹_t
& 
add_åa˚_öfo
(

111 c⁄° * c⁄° 
fûíame
,

112 
uöt4_t
 
löe_num
);

114 
	gw_îr‹_t
& 
˛ór_m‹e_öfo_msg
();

115 
	gw_îr‹_t
& 
≠≥nd_m‹e_öfo_msg
(c⁄° * 
m‹e_öfo
);

116 c⁄° * 
	$gë_m‹e_öfo_msg
() const;

117 
	`˛aim
();

118 
	$vîify_ow√r
() const;

120 
o°ªam
 &
	$¥öt_îr‹
(
o°ªam
 &
o
) const;

122 #i‡
USE_BLOCK_ALLOC_FOR_W_ERROR_T


123 
›î©‹
 
	`dñëe
(* 
p
);

126 
w_îr‹_t
* 
	`make
(

127 c⁄° * c⁄° 
fûíame
,

128 
uöt4_t
 
löe_num
,

129 
îr_num_t
 
îr_num
,

130 
w_îr‹_t
* 
li°
 = 0,

131 c⁄° * 
m‹e_öfo
 = 0);

132 
w_îr‹_t
* 
	`make
(

133 c⁄° * c⁄° 
fûíame
,

134 
uöt4_t
 
löe_num
,

135 
îr_num_t
 
îr_num
,

136 
uöt4_t
 
sys_îr
,

137 
w_îr‹_t
* 
li°
 = 0,

138 c⁄° * 
m‹e_öfo
 = 0);

140 
boﬁ
 
	`ö£π
(

141 c⁄° *
moduÀ«me
,

142 c⁄° 
öfo_t
 
öfo
[],

143 
uöt4_t
 
cou¡
);

145 c⁄° 
w_îr‹_t
 
no_îr‹_ö°™˚
;

146 
w_îr‹_t
* c⁄° 
no_îr‹
;

147 c⁄° * 
	`îr‹_°rög
(
îr_num_t
 
îr_num
);

148 c⁄° * 
	`moduÀ_«me
(
îr_num_t
 
îr_num
);

150 
NORET
 ~
	`w_îr‹_t
();

152 
¥iv©e
:

153 íum { 
max_ønge
 = 10, 
max_åa˚
 = 10 
	}
};

156 
	g¥iv©e
:

157 c⁄° * 
m‹e_öfo_msg
;

159 
‰õnd
 
˛ass
 
	gw_rc_t
;

161 
uöt4_t
 
	g_åa˚_˙t
;

162 
w_îr‹_t
* 
	g_√xt
;

163 c⁄° * 
	g_åa˚_fûe
[
max_åa˚
];

164 
uöt4_t
 
	g_åa˚_löe
[
max_åa˚
];

165 #ifde‡
SM_THREAD_SAFE_ERRORS


166 
±hªad_t
 
	g_ow√r
;

169 
NORET
 
w_îr‹_t
(

170 c⁄° * c⁄° 
fûíame
,

171 
uöt4_t
 
löe_num
,

172 
îr_num_t
 
îr_num
,

173 
w_îr‹_t
* 
li°
,

174 c⁄° * 
m‹e_öfo
);

175 
NORET
 
w_îr‹_t
(

176 c⁄° * c⁄° 
fûíame
,

177 
uöt4_t
 
löe_num
,

178 
îr_num_t
 
îr_num
,

179 
uöt4_t
 
sys_îr
,

180 
w_îr‹_t
* 
li°
,

181 c⁄° * 
m‹e_öfo
);

184 
NORET
 
w_îr‹_t
(const w_error_t&);

185 
	gw_îr‹_t
& 
	g›î©‹
=(c⁄° 
w_îr‹_t
&);

187 c⁄° 
öfo_t
* 
	g_ønge_°¨t
[
max_ønge
];

188 
uöt4_t
 
	g_ønge_˙t
[
max_ønge
];

189 c⁄° * 
	g_ønge_«me
[
max_ønge
];

190 
uöt4_t
 
	g_ƒeg
;

192 
ölöe
 
uöt4_t
 
˛assify
(
îr_num
);

193 
	gpublic
:

195 c⁄° 
öfo_t
 
îr‹_öfo
[];

196 
	go°ªam
 & 
¥öt
(
o°ªam
 &
out
);

197 
	g¥iv©e
:

199 
öô_îr‹codes
();

203 
o°ªam
 &
›î©‹
<<(o°ªam &
o
, c⁄° 
w_îr‹_t
 &
obj
);

205 #ifde‡
SM_THREAD_SAFE_ERRORS


206 
	~<±hªad.h
>

207 
	~<°dlib.h
>

208 
ölöe
 
	gw_îr‹_t
::
	$˛aim
() {

209 
_ow√r
 = 
	`±hªad_£lf
();

210 
	}
}

211 
ölöe
 
	gw_îr‹_t
::
	$vîify_ow√r
() const {

212 
	`w_as£π1
(
	`±hªad_equÆ
(
_ow√r
, 
	`±hªad_£lf
()));

213 
	}
}

215 
ölöe
 
	gw_îr‹_t
::
	$˛aim
(Ë{ 
	}
}

216 
ölöe
 
w_îr‹_t
::
	$vîify_ow√r
(Ëc⁄° { 
	}
}

219 
ölöe
 
NORET


220 
w_îr‹_t
::~
	$w_îr‹_t
()

222 
dñëe
[] 
m‹e_öfo_msg
;

223 
m‹e_öfo_msg
 = 
NULL
;

224 
dñëe
 
_√xt
;

225 
	}
}

	@src/fc/w_findprime.cpp

2 
	~"w_föd¥ime.h
"

3 
	~<ve˘‹
>

6 
	gw_ba£_t
::
öt8_t
 
	$w_föd¥ime
(
w_ba£_t
::
öt8_t
 
mö
)

9 c⁄° 
¥ime_°¨t
[] = {

16 c⁄° 
sõve_°¨t
[] = {

22 
°d
::
ve˘‹
<
w_ba£_t
::
öt8_t
> 
	`¥imes
(
¥ime_°¨t
,Örime_start+(prime_start));

23 
sõve
[60];

24 
	`mem£t
(
sõve
, 0, (sieve));

26 
w_ba£_t
::
uöt8_t
 
i
=0; i < (
sõve_°¨t
); i++)

27 
sõve
[
w_ba£_t
::
	`öt8_t
(
sõve_°¨t
[
i
])] = 1;

34 
w_ba£_t
::
öt8_t
 
x
=
¥imes
.
	`back
()+1;Örimes.back(Ë< 
mö
; x++) {

35 if(!
sõve
[
x
%60])

38 
boﬁ
 
¥ime
 = 
åue
;

39 
w_ba£_t
::
öt8_t
 
i
=0; 
¥ime
 && 
¥imes
[i]*¥imes[i] <
x
; i++)

40 
¥ime
 = (
x
%
¥imes
[
i
]) > 0;

42 if(
¥ime
)

43 
¥imes
.
	`push_back
(
x
);

46  
¥imes
.
	`back
();

47 
	}
}

	@src/fc/w_findprime.h

1 
	~"w_ba£.h
"

2 "C" 
w_ba£_t
::
öt8_t
 
w_föd¥ime
(w_ba£_t::öt8_à
mö
) ;

	@src/fc/w_form.cpp

30 
	~"w_deföes.h
"

69 
	~<c°d¨g
>

70 
	~<c°dio
>

73 
	#BUF_SLOTS
 16

	)

74 
	#MAX_BUFFER
 1024

	)

76 #ifde‡
FORM_PRE_ALLOCATE


77 
	gbuf„rs
[
BUF_SLOTS
][
MAX_BUFFER
];

79 *
	gbuf„rs
[
BUF_SLOTS
];

80 
	gdeÁu…_buf„r
[
MAX_BUFFER
];

82 
	g¶Ÿ
 = 0;

85 
	sf‹m_˛ónup


87 ~
f‹m_˛ónup
() {

88 
	mi
=0; i < 
	mBUF_SLOTS
; i++)

90 
	mdñëe
[] 
	mbuf„rs
[
i
];

91 
	mbuf„rs
[
i
]=
NULL
;

94 } 
	g__˛ónup__
;

100 c⁄° *
	$f‹m
(c⁄° *
f‹m©
, ...)

102 
va_li°
 
≠
;

103 *
buf„r
;

104 
me
;

108 
me
 = 
¶Ÿ
;

109 
¶Ÿ
 = (¶Ÿ + 1Ë% 
BUF_SLOTS
;

111 #i‚de‡
FORM_PRE_ALLOCATE


112 i‡(!
buf„rs
[
me
]) {

113 
buf„rs
[
me
] = 
√w
 [
MAX_BUFFER
];

116 i‡(!
buf„rs
[
me
])

117 
buf„rs
[
me
] = 
deÁu…_buf„r
;

120 
buf„r
 = 
buf„rs
[
me
];

122 
	`va_°¨t
(
≠
, 
f‹m©
);

123 #ifde‡
HAVE_VSNPRINTF


124 
	`v¢¥ötf
(
buf„r
, 
MAX_BUFFER
, 
f‹m©
, 
≠
);

126 #ifde‡
HAVE_VPRINTF


127 
	`v•rötf
(
buf„r
, 
f‹m©
, 
≠
);

129 #îr‹ 
√ed
 
v•rötf


133 
	`va_íd
(
≠
);

135 
buf„r
[
MAX_BUFFER
-1] = '\0';

137  
buf„r
;

138 
	}
}

	@src/fc/w_getopt.cpp

30 
	~"w_deföes.h
"

34 
	~"w_gë›t.h
"

35 #i‚de‡
HAVE_GETOPT


36 
	~<w_°ªam.h
>

37 
	~<c°rög
>

39 * 
	g›èrg
 = 0;

40 
	g›töd
 = 1;

41 
	g›ãº
 = 1;

42 
	g›t›t
 = 0;

86 
PrötEº‹
(c⁄° * 
îrMsg
, c⁄° * 
¥ogName
, 
›tCh¨
);

88 
	$gë›t
(
¨gc
, * c⁄° * 
¨gv
, c⁄° * 
›t°rög
)

92 
¨gIndex
 = 0;

95 i‡(
›töd
 == 0) {

96 
›töd
 = 1;

97 
¨gIndex
 = 0;

100 
›èrg
 = 0;

101 
›t›t
 = 0;

104 i‡(
›töd
 =
¨gc
) {

105  
EOF
;

109 i‡(
¨gIndex
 =0 && 
¨gv
[
›töd
][0] != '-') {

110  
EOF
;

114 i‡(
¨gIndex
 == 0) {

115 
¨gIndex
++;

118 i‡(
¨gv
[
›töd
][
¨gIndex
] == '-' &&árgv[optind][argIndex + 1] == 0) {

119 ++
›töd
;

120 
¨gIndex
 = 0;

121  
EOF
;

125 
›t›t
 = 
¨gv
[
›töd
][
¨gIndex
++];

127 c⁄° * 
›tSåögPos
 = 0;

128 i‡((
›tSåögPos
 = 
	`°rchr
(
›t°rög
, 
›t›t
))) {

129 i‡(
›tSåögPos
[1] == ':') {

132 i‡(
¨gv
[
›töd
][
¨gIndex
] != 0) {

134 
›èrg
 = &
¨gv
[
›töd
][
¨gIndex
];

135 ++
›töd
;

136 
¨gIndex
 = 0;

140 ++
›töd
;

141 
¨gIndex
 = 0;

142 i‡(
¨gv
[
›töd
] != 0) {

143 
›èrg
 = &
¨gv
[
›töd
++][
¨gIndex
];

145  
	`PrötEº‹
("›ti⁄Ñequúe†™árgumít", 
¨gv
[0], 
›t›t
);

150 i‡(
¨gv
[
›töd
][
¨gIndex
] == 0) {

152 ++
›töd
;

153 
¨gIndex
 = 0;

158 i‡(
¨gv
[
›töd
][
¨gIndex
] == 0) {

159 ++
›töd
;

160 
¨gIndex
 = 0;

162  
	`PrötEº‹
("ûÀgÆ o±i⁄", 
¨gv
[0], 
›t›t
);

165  
›t›t
;

166 
	}
}

169 
	$PrötEº‹
(c⁄° * 
îrMsg
, c⁄° * 
¥ogName
, 
›tCh¨
)

171 i‡(
›ãº
)

172 
˚º
 << 
¥ogName
 << ": " << 
îrMsg
 << " -- " << 
›tCh¨
 << 
ídl
;

175 
	}
}

	@src/fc/w_getopt.h

30 
	~"w_deföes.h
"

32 #i‚de‡
GETOPT_H


33 
	#GETOPT_H


	)

35 #ifde‡
HAVE_GETOPT


36 
	~<gë›t.h
>

43 
gë›t
(
¨gc
, *c⁄° *
¨gv
, c⁄° *
›t°rög
);

47 * 
›èrg
;

48 
›töd
, 
›ãº
, 
›t›t
;

	@src/fc/w_gettimeofday.h

30 #i‚de‡
W_GETTIMEOFDAY_H


31 
	#W_GETTIMEOFDAY_H


	)

33 
	~"w_deföes.h
"

37 
	~<sys/time.h
>

	@src/fc/w_hash.h

54 #i‚de‡
W_HASH_H


55 
	#W_HASH_H


	)

57 
	~"w_deföes.h
"

64 
	~<w_ba£.h
>

65 
	~<w_li°.h
>

68 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
> cœs†
	gw_hash_t
;

69 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
> cœs†
	gw_hash_i
;

71 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
l
)

73  (
w_ba£_t
::
uöt4_t
Ë
l
;

74 
	}
}

76 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
l
)

78  (
w_ba£_t
::
uöt4_t
Ë
l
;

79 
	}
}

81 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
w_ba£_t
::
uöt4_t
 
i
) {

82  
i
;

83 
	}
}

85 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
w_ba£_t
::
öt4_t
 
i
) {

86  
	`CAST
(
w_ba£_t
::
uöt4_t
,
i
);

87 
	}
}

89 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
w_ba£_t
::
uöt2_t
 
i
) {

90  
i
;

91 
	}
}

93 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(
w_ba£_t
::
öt2_t
 
i
) {

94  
	`CAST
(
w_ba£_t
::
öt2_t
, 
i
);

95 
	}
}

97 
BIND_FRIEND_OPERATOR_PART_1B
(
T
,
LOCK
,
K
,
w_hash_t
<T,LOCK,K>)

121 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

122 ˛as†
	cw_hash_t
 : 
public
 
w_ba£_t
 {

123 
public
:

141 
NORET
 
w_hash_t
(

142 
uöt4_t
 
sz
,

143 
uöt4_t
 
key_off£t
,

144 
uöt4_t
 
lök_off£t
,

145 c⁄° 
LOCK
 * 
lock
);

146 
	mNORET
 ~
w_hash_t
();

148 
	m¥iv©e
:

149 
uöt4_t
 
	$buckë_f‹
(
K
 c⁄° &
k
) const;

150 
uöt4_t
 
	$buckë_f‹
(
T
 c⁄° *
t
) const;

152 
public
:

154 
w_hash_t
& 
	`push
(
T
* 
t
);

156 
w_hash_t
& 
	`≠≥nd
(
T
* 
t
);

158 
T
* 
	$lookup
(c⁄° 
K
& 
k
) const;

160 
boﬁ
 
	$membî
(
T
 c⁄° *
t
) const;

162 
T
* 
	`ªmove
(c⁄° 
K
& 
k
);

164 
	`ªmove
(
T
* 
t
);

166 
uöt4_t
 
	$num_membîs
(Ëc⁄° {  
_˙t
; }

169 
‰õnd
 
o°ªam
& 
›î©‹
<<

170 
	$BIND_FRIEND_OPERATOR_PART_2B
(
T
,
LOCK
,
K
) (

171 
o°ªam
& 
o
,

172 c⁄° 
w_hash_t
<
T
,
LOCK
,
K
>& 
obj
);

175 
¥iv©e
:

176 
‰õnd
 
˛ass
 
w_hash_i
<
T
,
LOCK
,
K
>;

177 
uöt4_t
 
_t›
;

178 
uöt4_t
 
_mask
;

179 
uöt4_t
 
_˙t
;

180 
uöt4_t
 
_key_off£t
;

181 
uöt4_t
 
_lök_off£t
;

182 
w_li°_t
<
T
, 
LOCK
>* 
_èb
;

184 c⁄° 
K
& 
	$_keyof
(c⁄° 
T
& 
t
) const {

185  * (
K
*Ë(((c⁄° *)&
t
Ë+ 
_key_off£t
);

186 
	}
}

187 
	gw_lök_t
& 
	$_lökof
(
T
& 
t
) const {

188  * (
w_lök_t
*Ë(((*)&
t
Ë+ 
_lök_off£t
);

189 
	}
}

192 
NORET
 
w_hash_t
(const w_hash_t&)

194 
	gw_hash_t
& 
	g›î©‹
=(c⁄° 
w_hash_t
&)

217 
	#W_HASH_ARG
(
˛ass
,
key
,
lök
Ë
	`W_KEYED_ARG
(˛ass, key,Üök)

	)

240 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

241 ˛as†
	cw_hash_i
 : 
public
 
w_ba£_t
 {

242 
public
:

243 
NORET
 
w_hash_i
(c⁄° 
w_hash_t
<
T
,
LOCK
, 
K
>& 
t
Ë: 
_bkt
(
uöt4_max
),

244 
	$_hèb
(
t
) {};

246 
NORET
 ~
	$w_hash_i
(Ë{
	}
};

248 
T
* 
√xt
();

249 
T
* 
	$cuº
(Ë{  
_ôî
.
	`cuº
(); 
	}
}

251 
	g¥iv©e
:

252 
uöt4_t
 
_bkt
;

253 
	gw_li°_i
<
	gT
,
	gLOCK
> 
	g_ôî
;

254 c⁄° 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>& 
	g_hèb
;

256 
NORET
 
w_hash_i
(w_hash_i&);

258 
	gw_hash_i
& 
	g›î©‹
=(
w_hash_i
&)

263 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

264 
	go°ªam
& 
	g›î©‹
<<(

265 
	go°ªam
& 
	go
,

266 c⁄° 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>& 
	gh
)

268 
	gi
 = 0; i < 
	gh
.
	g_t›
; i++) {

269 
	go
 << '[' << 
	gi
 << "] ";

270 
	gw_li°_i
<
	gT
,
	gLOCK
> 
ôî
(
h
.
_èb
[
i
]);

271 
	gôî
.
√xt
()) {

272 
	go
 << 
	gh
.
_keyof
(*
ôî
.
cuº
()) << " ";

274 
	go
 << 
	gídl
;

276  
	go
;

280 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

281 
NORET


282 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$w_hash_t
(

283 
w_ba£_t
::
uöt4_t
 
sz
,

284 
w_ba£_t
::
uöt4_t
 
key_off£t
,

285 
w_ba£_t
::
uöt4_t
 
lök_off£t
,

286 c⁄° 
LOCK
 *)

287 : 
	`_t›
(0), 
	`_˙t
(0), 
	`_key_off£t
(
key_off£t
),

288 
	`_lök_off£t
(
lök_off£t
), 
	$_èb
(0)

290 
_t›
 = 1; _t› < 
sz
; _top <<= 1) ;

291 
_mask
 = 
_t›
 - 1;

293 
	`w_as£π1
(!
_èb
);

294 
_èb
 = 
√w
 
w_li°_t
<
T
,
LOCK
>[
_t›
];

295 
	`w_as£π1
(
_èb
);

296 
i
 = 0; i < 
_t›
; i++) {

297 
_èb
[
i
].
	`£t_off£t
(
_lök_off£t
);

299 
	}
}

301 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

302 
NORET


303 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::~
	$w_hash_t
()

305 
	`w_as£π1
(
_˙t
 == 0);

306 
dñëe
[] 
_èb
;

307 
	}
}

310 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

311 
	gw_ba£_t
::
uöt4_t
 
w_hash_t
<
T
,
	gLOCK
, 
	gK
>::
	$buckë_f‹
(
T
 c⁄°* 
t
) const {

312  
	`buckë_f‹
(
	`_keyof
(*
t
));

313 
	}
}

315 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

316 
	gw_ba£_t
::
uöt4_t
 
w_hash_t
<
T
,
	gLOCK
, 
	gK
>::
	$buckë_f‹
(
K
 c⁄° &
k
) const {

317  
	`w_hash
(
k
Ë& 
_mask
;

318 
	}
}

320 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

321 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>&

322 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$push
(
T
* 
t
)

324 
_èb
[
	`buckë_f‹
(
t
)].
	`push
(t);

325 ++
_˙t
;

326 
	`w_as£π1
((
_˙t
) > 0);

327  *
this
;

328 
	}
}

330 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

331 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>& w_hash_t<T,LOCK, K>::
	$≠≥nd
(
T
* 
t
)

333 
_èb
[
	`buckë_f‹
(
t
)].
	`≠≥nd
(t);

334 ++
_˙t
;

335 
	`w_as£π1
((
_˙t
) > 0);

336  *
this
;

337 
	}
}

339 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

340 
T
*

341 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$lookup
(c⁄° 
K
& 
k
) const

343 
w_li°_t
<
T
,
LOCK
>& 
li°
 = 
_èb
[
	`buckë_f‹
(
k
)];

344 
w_li°_i
<
T
,
LOCK
> 
	`i
–
li°
 );

345 
T
* 
t
;

346 
öt4_t
 
cou¡
;

347 
cou¡
 = 0; (
t
 = 
i
.
	`√xt
()Ë&& ! (
	`_keyof
(*tË=
k
); ++count) ;

352 i‡(0 && 
t
 && 
cou¡
) {

353 
w_lök_t
& 
lök
 = 
	`_lökof
(*
t
);

354 
lök
.
	`dëach
();

355 
li°
.
	`push
(
t
);

358  
t
;

359 
	}
}

360 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

361 
boﬁ


362 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$membî
(
T
 c⁄°* 
t
) const

364 
w_li°_ba£_t
* 
li°
 = &
_èb
[
	`buckë_f‹
(
t
)];

365  
t
->
lök
.
	`membî_of
(Ë=
li°
;

366 
	}
}

368 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

369 
T
*

370 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$ªmove
(c⁄° 
K
& 
k
)

372 
w_li°_i
<
T
,
LOCK
> 
	`i
(
_èb
[
	`buckë_f‹
(
k
)]);

373 
i
.
	`√xt
(Ë&& ! (
	`_keyof
(*i.
	`cuº
()Ë=
k
)) ;

375 
T
 *
tmp
 = 
i
.
	`cuº
();

376 i‡(
tmp
) {

377 --
_˙t
;

378 
	`w_as£π1
((
_˙t
) >= 0);

379 
	`_lökof
(*
tmp
).
	`dëach
();

381  
tmp
;

382 
	}
}

384 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

386 
	gw_hash_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$ªmove
(
T
* 
t
)

388 
	`w_as£π1
(
	`_lökof
(*
t
).
	`membî_of
() ==

389 &
_èb
[
	`buckë_f‹
(
t
)]);

390 
	`_lökof
(*
t
).
	`dëach
();

391 --
_˙t
;

392 
	`w_as£π1
((
_˙t
) >= 0);

393 
	}
}

395 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

396 
T
* 
	gw_hash_i
<
	gT
,
	gLOCK
, 
	gK
>::
	$√xt
()

398 i‡(
_bkt
 =
uöt4_max
) {

399 
_bkt
 = 0;

400 
_ôî
.
	`ª£t
(
_hèb
.
_èb
[
_bkt
++]);

403 i‡(! 
_ôî
.
	`√xt
()) {

404 
_bkt
 < 
_hèb
.
_t›
) {

406 
_ôî
.
	`ª£t
–
_hèb
.
_èb
[ 
_bkt
++ ] );

407 i‡(
_ôî
.
	`√xt
()) ;

410  
_ôî
.
	`cuº
();

411 
	}
}

	@src/fc/w_hashing.h

53 
	~"w_deföes.h
"

57 #i‚de‡
W_CUCKOOHASHFUNCS_H


58 
	#W_CUCKOOHASHFUNCS_H


	)

62 
«me•a˚
 
	gw_hashög
 {

68 ˛as†
	cuhash


70 
	gpublic
:

73 
w_ba£_t
::
	tuöt8_t
 
	tu64
;

74 
u64
 
	ga
;

75 
u64
 
	gb
;

76 
	g¥iv©e
:

77 c⁄° 
bôshi·
= 16;

78 
u64
 
öô
()

81  ((
	gu64
Ë::
ønd
() << 32) | ::rand();

83 
	gpublic
:

85 
uhash
(Ë: 
a
(
öô
()), 
b
(init()) { }

86 ~
uhash
() { }

88 
u64
 
›î©‹
()(u64 
	gx
Ëc⁄° {  (
a
*x+
	gb
Ë>> 
	gbôshi·
; }

105 ˛as†
	chash2
 {

106 
	gpublic
:

109 
uhash
 
a
;

110 
uhash
 
	gb
;

111 
	gpublic
:

112 #ifde‡
ARCH_LP64


113 
›î©‹
()(
x
Ëc⁄° {  
a
(xË^ 
b
(x); }

115 
	gw_ba£_t
::
uöt8_t
 
›î©‹
()(
x
) const {

116  
w_ba£_t
::
uöt8_t
 (
a
(
x
Ë^ 
b
(x)); }

	@src/fc/w_heap.h

30 #i‚de‡
W_HEAP_H


31 
	#W_HEAP_H


	)

33 
	~"w_deföes.h
"

37 
	~"w_ba£.h
"

78 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gCmp
>

79 ˛as†
	cHóp


81 
	mpublic
:

82 
Hóp
(c⁄° 
Cmp
& 
cmpFun˘i⁄
,

83 
öôülNumEÀmíts
 = 32);

84 ~
Hóp
();

87 
	$NumEÀmíts
() const;

90 
T
 
	`RemoveFú°
();

93 
T
 
	`RemoveN
(
i
);

96 
	`AddEÀmít
(c⁄° 
T
& 
ñem
);

99 
	`AddEÀmítD⁄tHópify
(c⁄° 
T
& 
ñem
);

101 
	`Hópify
();

104 
T
& 
	`Fú°
();

107 
T
& 
	`VÆue
(
i
);

110 c⁄° 
T
& 
	$Sec⁄d
() const;

114 
	`Rïœ˚dFú°
();

119 
	`In¸ó£dN
(
i
);

124 
	`De¸ó£dN
(
i
);

127 
	$CheckHóp
() const;

130 
	$Pröt
(
o°ªam
& 
out
) const;

134 
boﬁ
 
	$HópPr›îty
(
roŸ
) const;

136 
¥Ÿe˘ed
:

137 
numEÀmíts
;

138 
maxNumEÀmíts
;

139 
T
* 
ñemíts
;

140 c⁄° 
Cmp
& 
cmp
;

142 
	$Le·Chûd
(
i
) const;

143 
	$RightChûd
(
i
) const;

144 
	$RightSiblög
(
i
) const;

145 
	$P¨ít
(
i
) const;

147 
	$PrötRoŸ
(
o°ªam
& 
out
, 
roŸEÀm
, 
ödítLevñ
) const;

148 
	$CheckHópRoŸ
(
roŸEÀm
) const;

150 
boﬁ
 
	$HópPr›îty
(
lowî
, 
uµî
) const;

153 
	`Si·Down
(
roŸEÀm
);

155 
	`Si·Up
(
roŸEÀm
);

158 
	`GrowEÀmíts
(
√wSize
);

164 
ãm∂©e
<
˛ass
 
T
, cœs†
Cmp
>

165 
ölöe
 
Hóp
<
T
, 
Cmp
>::
	$Le·Chûd
(
i
) const

167  2 * 
i
 + 1;

168 
	}
}

171 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

172 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$RightChûd
(
i
) const

174  2 * 
i
 + 2;

175 
	}
}

178 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

179 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$RightSiblög
(
i
) const

181  
i
 + 1;

182 
	}
}

185 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

186 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$P¨ít
(
i
) const

188  (
i
 - 1) / 2;

189 
	}
}

194 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

195 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$CheckHóp
() const

197 
	`w_as£π9
(
	`HópPr›îty
(0));

198 
	}
}

201 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

202 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$NumEÀmíts
() const

204  
numEÀmíts
;

205 
	}
}

208 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

209 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$Pröt
(
o°ªam
& 
out
) const

211 
	`PrötRoŸ
(
out
, 0, 0);

212 
	}
}

215 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

216 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$Rïœ˚dFú°
()

218 
	`Si·Down
(0);

219 
	}
}

221 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

222 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$In¸ó£dN
(
n
)

224 
	`Si·Up
(
n
);

225 
	}
}

227 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

228 
ölöe
 
	gHóp
<
	gT
, 
	gCmp
>::
	$De¸ó£dN
(
n
)

230 
	`Si·Down
(
n
);

231 
	}
}

234 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

235 
	gHóp
<
	gT
, 
	gCmp
>::
	$Hóp
(c⁄° 
Cmp
& 
cmpFun˘i⁄
, 
öôülNumEÀmíts
)

237 
	`numEÀmíts
(0),

238 
	`maxNumEÀmíts
(
öôülNumEÀmíts
),

239 
	`ñemíts
(0),

240 
	$cmp
(
cmpFun˘i⁄
)

242 
ñemíts
 = 
√w
 
T
[
öôülNumEÀmíts
];

243 
	}
}

246 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

247 
	gHóp
<
	gT
, 
	gCmp
>::~
	$Hóp
()

249 
dñëe
[] 
ñemíts
;

250 
	}
}

255 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

256 
T
 
	gHóp
<
	gT
, 
	gCmp
>::
	$RemoveN
(
i
)

258 
	`w_as£π9
(
numEÀmíts
 > 0);

259 
T
 
ãmp
 = 
ñemíts
[
i
];

260 
boﬁ
 
smÆÀr
 = 
cmp
.
	`gt
(
ñemíts
[
i
],ÉÀmíts[--
numEÀmíts
]);

261 
ñemíts
[
i
] =ÉÀmíts[
numEÀmíts
];

262 if(
smÆÀr
) {

263 
	`Si·Down
(
i
);

265 
	`Si·Up
(
i
);

267  
ãmp
;

268 
	}
}

270 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

271 
T
 
	gHóp
<
	gT
, 
	gCmp
>::
	$RemoveFú°
()

278 
T
 
ãmp
 = 
ñemíts
[0];

279 
ñemíts
[0] =ÉÀmíts[--
numEÀmíts
];

280 
	`Si·Down
(0);

281  
ãmp
;

282 
	}
}

288 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

289 
	gT
& 
	gHóp
<T, 
	gCmp
>::
	$Fú°
()

291 
	`w_as£π9
(
numEÀmíts
 > 0);

292  
ñemíts
[0];

293 
	}
}

295 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

296 
	gT
& 
	gHóp
<T, 
	gCmp
>::
	$VÆue
(
i
)

298 
	`w_as£π9
(
i
 < 
numEÀmíts
 && i >= 0);

299  
ñemíts
[
i
];

300 
	}
}

305 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

306 c⁄° 
	gT
& 
	gHóp
<T, 
	gCmp
>::
	$Sec⁄d
() const

308 
	`w_as£π9
(
numEÀmíts
 > 1);

309 
£c⁄d
 = 
	`Le·Chûd
(0);

310 i‡(
	`RightSiblög
(
£c⁄d
Ë< 
numEÀmíts
) {

311 i‡(
cmp
.
	`gt
(
ñemíts
[
	`RightSiblög
(
£c⁄d
)],Élements[second])) {

312 
£c⁄d
 = 
	`RightSiblög
(second);

315  
ñemíts
[
£c⁄d
];

316 
	}
}

322 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

323 
	gHóp
<
	gT
, 
	gCmp
>::
	$AddEÀmít
(c⁄° 
T
& 
ñem
)

325 i‡(
numEÀmíts
 >
maxNumEÀmíts
) {

326 
	`GrowEÀmíts
(2 * 
maxNumEÀmíts
);

329 
roŸEÀm
 = 
numEÀmíts
++;

330 
roŸEÀm
 > 0) {

331 i‡(
cmp
.
	`gt
(
ñem
, 
ñemíts
[
	`P¨ít
(
roŸEÀm
)])) {

332 
ñemíts
[
roŸEÀm
] =ÉÀmíts[
	`P¨ít
(rootElem)];

333 
roŸEÀm
 = 
	`P¨ít
(rootElem);

338 
ñemíts
[
roŸEÀm
] = 
ñem
;

339 
	}
}

345 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

346 
	gHóp
<
	gT
, 
	gCmp
>::
	$AddEÀmítD⁄tHópify
(c⁄° 
T
& 
ñem
)

348 i‡(
numEÀmíts
 >
maxNumEÀmíts
) {

349 
	`GrowEÀmíts
(2 * 
maxNumEÀmíts
);

351 
ñemíts
[
numEÀmíts
++] = 
ñem
;

352 
	}
}

366 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

367 
	gHóp
<
	gT
, 
	gCmp
>::
	$Si·Down
(
roŸEÀm
)

372 if(
	`Le·Chûd
(
roŸEÀm
Ë< 
numEÀmíts
) {

373 
	`w_as£π9
(
	`HópPr›îty
(
	`Le·Chûd
(
roŸEÀm
)));

376 i‡(
numEÀmíts
 > 1) {

377 c⁄° 
T
 
roŸVÆue
 = 
ñemíts
[
roŸEÀm
];

378 
roŸEÀm
 <
	`P¨ít
(
numEÀmíts
 - 1)) {

379 
	`w_as£π9
(
	`Le·Chûd
(
roŸEÀm
Ë< 
numEÀmíts
);

383 
chûd
 = 
	`Le·Chûd
(
roŸEÀm
);

384 i‡(
	`RightSiblög
(
chûd
Ë< 
numEÀmíts
) {

385 i‡(
cmp
.
	`gt
(
ñemíts
[
	`RightSiblög
(
chûd
)],Élements[child])) {

386 
chûd
 = 
	`RightSiblög
(child);

392 i‡(
cmp
.
	`gt
(
ñemíts
[
chûd
], 
roŸVÆue
)) {

393 
ñemíts
[
roŸEÀm
] =ÉÀmíts[
chûd
];

394 
roŸEÀm
 = 
chûd
;

399 
ñemíts
[
roŸEÀm
] = 
roŸVÆue
;

408 
	`w_as£π9
(
	`HópPr›îty
(
roŸEÀm
));

409 
	}
}

411 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

412 
	gHóp
<
	gT
, 
	gCmp
>::
	$Si·Up
(
roŸEÀm
)

417 if(
roŸEÀm
 > 0) {

418 
	`w_as£π9
(
	`HópPr›îty
(0, 
	`P¨ít
(
roŸEÀm
)));

421 if(
roŸEÀm
 > 0) {

422 c⁄° 
T
 
roŸVÆue
 = 
ñemíts
[
roŸEÀm
];

423 
i
 = 
roŸEÀm
;

424 
i
 > 0) {

425 i‡(
cmp
.
	`gt
(
roŸVÆue
, 
ñemíts
[
	`P¨ít
(
i
)])) {

427 
ñemíts
[
i
] =ÉÀmíts[
	`P¨ít
(i)];

428 
i
 = 
	`P¨ít
(i);

433 
ñemíts
[
i
] = 
roŸVÆue
;

438 
	`w_as£π9
(
	`HópPr›îty
(0, 
roŸEÀm
));

439 
	}
}

450 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

451 
	gHóp
<
	gT
, 
	gCmp
>::
	$Hópify
()

453 i‡(
	`NumEÀmíts
() > 0) {

454 
i
 = 
	`P¨ít
(
	`NumEÀmíts
() - 1); i >= 0; --i) {

455 
	`Si·Down
(
i
);

457 #i‡
W_DEBUG_LEVEL
 > 2

458 
	`CheckHóp
();

461 
	}
}

466 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

467 
	gHóp
<
	gT
, 
	gCmp
>::
	$GrowEÀmíts
(
√wSize
)

469 
	`w_as£π9
(
√wSize
 >
numEÀmíts
);

471 
T
* 
√wEÀmíts
 = 
√w
 T[
√wSize
];

472 
i
 = 0; i < 
numEÀmíts
; ++i) {

473 
√wEÀmíts
[
i
] = 
ñemíts
[i];

475 
dñëe
[] 
ñemíts
;

476 
ñemíts
 = 
√wEÀmíts
;

477 
maxNumEÀmíts
 = 
√wSize
;

478 
	}
}

483 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

484 
	gHóp
<
	gT
, 
	gCmp
>::
	$CheckHópRoŸ
(
roŸEÀm
) const

486 i‡(
roŸEÀm
 < 
numEÀmíts
) {

487 i‡(
	`Le·Chûd
(
roŸEÀm
Ë< 
numEÀmíts
) {

488 
	`w_as£π1
(!
cmp
.
	`gt
(
ñemíts
[
	`Le·Chûd
(
roŸEÀm
)],

489 
ñemíts
[
roŸEÀm
]));

490 
	`CheckHópRoŸ
(
	`Le·Chûd
(
roŸEÀm
));

492 i‡(
	`RightChûd
(
roŸEÀm
Ë< 
numEÀmíts
) {

493 
	`w_as£π1
(!
cmp
.
	`gt
(
ñemíts
[
	`RightChûd
(
roŸEÀm
)],

494 
ñemíts
[
roŸEÀm
]));

495 
	`CheckHópRoŸ
(
	`RightChûd
(
roŸEÀm
));

498 
	}
}

500 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

501 
boﬁ
 
	gHóp
<
	gT
, 
	gCmp
>::
	$HópPr›îty
(
roŸ
) const

503  
	`HópPr›îty
(
roŸ
, 
numEÀmíts
);

504 
	}
}

509 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

510 
boﬁ
 
	gHóp
<
	gT
, 
	gCmp
>::
	$HópPr›îty
(
t›
, 
bŸtom
) const

512 
œ°
 = (
bŸtom
 > 
numEÀmíts
) ?ÇumElements : bottom;

514 
i

	`Le·Chûd
(
t›
); i<
œ°
; i++) {

515 if–
cmp
.
	`gt
–
ñemíts
[
i
] ,ÉÀmíts[
	`P¨ít
(i)] ) )  
Ál£
;

517  
åue
;

518 
	}
}

523 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

524 
	gHóp
<
	gT
, 
	gCmp
>::
	$PrötRoŸ
(
o°ªam
& 
out
, 
roŸEÀm
, 
ödítLevñ
) const

526 i‡(
roŸEÀm
 < 
	`NumEÀmíts
()) {

527 
	`PrötRoŸ
(
out
, 
	`Le·Chûd
(
roŸEÀm
), 
ödítLevñ
 + 1);

528 
i
 = 0; i < 
ödítLevñ
; i++) {

529 
cout
 << '\t';

531 
cout
 << 
ñemíts
[
roŸEÀm
] << '\n';

532 
	`PrötRoŸ
(
out
, 
	`RightChûd
(
roŸEÀm
), 
ödítLevñ
 + 1);

534 
	}
}

	@src/fc/w_input.cpp

30 
	~"w_deföes.h
"

34 
	#W_SOURCE


	)

36 
	~<w_ba£.h
>

37 
	~<c˘y≥
>

38 
	~<io°ªam
>

41 
	e°©es
 { 
	m°¨t
, 
	msg√d
, 
	mÀadz
,

42 
	m√w_hex
, 
	m√w_o˘
, 
	m√w_dec
,

43 
	mis_hex
, 
	mis_o˘
, 
	mis_dec
,

44 
	m_íd
, 
	mîr‹
, 
	mno_hex
, 
	mno_°©e
 };

47 
	ech¨˛ass
 { 
	mzîo
=0, 
	m⁄e
=1, 
	mtwo
=2, 
	mthªe
=3, 
	mfour
=4,

48 
	mfive
=5, 
	msix
=6, 
	m£ví
=7, 
	meight
=8,

49 
	mnöe
=9, 
	mãn
=10, 
	mñeví
=11,

50 
	mtwñve
=12, 
	mthúãí
=13, 
	mfouπìn
=14, 
	mfi·ìn
=15,

51 
	mexx
, 
	mJJJJ
, 
	meofûe
, 
	mwhôe
, 
	msign
, 
	mno_ch¨˛ass


54 
	gequiv
[127] = {

57 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, 
whôe
,

59 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

61 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

63 
JJJJ
, JJJJ, 
whôe
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

65 
JJJJ
, JJJJ, JJJJ, 
sign
, JJJJ, sign, JJJJ, JJJJ, 
zîo
, 
⁄e
,

67 
two
 , 
thªe
, 
four
, 
five
, 
six
, 
£ví
, 
eight
, 
nöe
, 
JJJJ
, JJJJ,

69 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, 
ãn
, 
ñeví
, 
twñve
, 
thúãí
, 
fouπìn
,

71 
fi·ìn
, 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

73 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, 
exx
, JJJJ,

75 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, 
ãn
, 
ñeví
, 
twñve
,

77 
thúãí
, 
fouπìn
, 
fi·ìn
, 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

79 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ,

81 
exx
, 
JJJJ
, JJJJ, JJJJ, JJJJ, JJJJ, JJJJ

84 
°©es
 
	tXTABLE
[
no_ch¨˛ass
][
no_°©e
];

85 
°©es
 
	gèbÀ_unknown
[
no_ch¨˛ass
][
no_°©e
] =

89 { 
Àadz
,Üódz,Üódz, 
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
 },

91 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

92 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

93 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

94 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

95 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

96 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

97 { 
√w_dec
,√w_dec,
√w_o˘
,
is_hex
, 
is_o˘
, 
is_dec
, is_hex, is_o˘, is_dec, 
îr‹
},

99 { 
√w_dec
,√w_dec,√w_dec,
is_hex
, 
_íd
, 
is_dec
, is_hex, 
is_o˘
, is_dec,
îr‹
 },

100 { 
√w_dec
,√w_dec,√w_dec,
is_hex
, 
_íd
, 
is_dec
, is_hex, 
is_o˘
, is_dec,
îr‹
 },

102 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

103 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

104 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

105 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

106 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

107 { 
îr‹
,îr‹,
√w_hex
,
is_hex
, 
_íd
, _end, is_hex, _end, _end,Érror },

109 { 
îr‹
,Éº‹, 
√w_hex
,
_íd
, _end, _end, _end, _end, _end,Érror },

111 { 
îr‹
,Éº‹, 
_íd
, 
no_hex
, _end, _end, _end, _end, _end,Érror },

113 { 
îr‹
,Éº‹, 
_íd
, 
no_hex
, _end, _end, _end, _end, _end,Érror },

115 { 
°¨t
, 
îr‹
, 
_íd
, _end, _end, _end, _end, _end, _end,Érror },

117 { 
sg√d
, 
îr‹
, 
_íd
, 
no_hex
, _end, _end, _end, _end, _end,Érror },

120 
°©es
 
	gèbÀ_ba£16
[
no_ch¨˛ass
][
no_°©e
] =

124 { 
Àadz
,Üódz,Üódz, 
is_hex
, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

126 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

127 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

128 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

129 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

130 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

131 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

132 { 
is_hex
,is_hex, is_hex, is_hex, 
îr‹
,Érror, is_hex,Érror,Érror,Érror },

134 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

135 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

137 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

138 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

139 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

140 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error, is_hex,Érror,Érror,Érror },

141 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error,is_hex,Érror,Érror,Érror },

142 { 
is_hex
, is_hex, is_hex, is_hex, 
îr‹
,error,is_hex,Érror,Érror,Érror },

144 { 
îr‹
,Éº‹, 
√w_hex
, 
_íd
,Érror,error, _end,Érror,Érror,Érror },

146 { 
îr‹
,Éº‹, 
_íd
, 
no_hex
,Érror,error, _end,Érror,Érror,Érror },

148 { 
îr‹
,Éº‹, 
_íd
, 
no_hex
,Érror,error, _end,Érror,Érror,Érror },

150 { 
°¨t
, 
îr‹
, 
_íd
, 
no_hex
,Érror,error, _end,Érror,Érror,Érror },

152 { 
sg√d
, 
îr‹
, 
_íd
, 
no_hex
,Érror,error, _end,Érror,Érror,Érror },

155 
°©es
 
	gèbÀ_ba£8
[
no_ch¨˛ass
][
no_°©e
] =

159 { 
Àadz
,Üódz,Üódz, 
îr‹
,Éº‹,Éº‹,Éº‹, 
is_o˘
,Érror,Érror },

161 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

162 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

163 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

164 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

165 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

166 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

167 { 
is_o˘
,is_o˘, is_o˘, 
îr‹
,Érror,Érror,Érror, is_oct,Érror,error },

169 { 
_íd
, 
îr‹
, _end,Érror,Érror,Érror,Érror, _end,Érror,Érror },

170 { 
_íd
, 
îr‹
, _end,Érror,Érror,Érror,Érror, _end,Érror,Érror },

172 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

173 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

174 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

175 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

176 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

177 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

179 { 
îr‹
,Éº‹, 
√w_hex
,
_íd
,Érror,error, _end,Érror,Érror,Érror },

181 { 
îr‹
,Éº‹, 
_íd
,Érror,Érror,error,Érror, _end,Érror,Érror },

183 { 
îr‹
,Éº‹, 
_íd
,Érror,Érror,error,Érror, _end,Érror,Érror },

185 { 
°¨t
, 
îr‹
, 
_íd
,Érror,Érror,error,Érror, _end,Érror,Érror },

187 { 
sg√d
, 
îr‹
, 
_íd
,Érror,Érror,error,Érror, _end,Érror,Érror },

190 
°©es
 
	gèbÀ_ba£10
[
no_ch¨˛ass
][
no_°©e
] =

196 { 
Àadz
,Üódz,Üódz, 
îr‹
,Éº‹,Éº‹,Éº‹, 
is_o˘
, 
is_dec
,Érror },

198 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

199 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

200 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

201 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

202 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

203 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

204 { 
is_dec
,is_dec, is_dec, 
îr‹
,Érror,Érror,Érror,Érror, is_dec,error },

206 { 
is_dec
,is_dec, 
_íd
, 
îr‹
,Érror,Érror,Érror, _end, is_dec,error },

207 { 
is_dec
,is_dec, 
_íd
, 
îr‹
,Érror,Érror,Érror, _end, is_dec,error },

209 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

210 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

211 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

212 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

213 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

214 { 
_íd
, 
îr‹
, _end,Érror,Érror,error,Érror, _end,Érror,Érror },

216 { 
îr‹
,Éº‹, 
√w_hex
, 
_íd
,Érror,error, _end,Érror,Érror,Érror },

218 { 
îr‹
,Éº‹, 
_íd
,Érror,Érror,error,Érror,Érror, _end,Érror },

220 { 
îr‹
,Éº‹, 
_íd
,Érror,Érror,error,Érror,Érror, _end,Érror },

222 { 
°¨t
, 
îr‹
, 
_íd
,Érror,Érror,error,Érror,Érror, _end,Érror },

224 { 
sg√d
, 
îr‹
, 
_íd
,Érror,Érror,error,Érror,Érror, _end,Érror },

231 #ifde‡
__GNUG__


232 
	#IOS_BACK
(
°ªam
,
ch
Ë(Ë°ªam.
	`ungë
()

	)

234 
	#IOS_BACK
(
°ªam
,
ch
Ë(Ë°ªam.
	`£ekg
(-1, 
ios
::
cur
)

	)

237 #i‡
deföed
–
__GNUG__
)

238 
	#IOS_FAIL
(
°ªam
Ë°ªam.
	`£t°©e
(
ios
::
Áûbô
)

	)

240 
	#IOS_FAIL
(
°ªam
Ë°ªam.
	`£t°©e
(
ios_ba£
::
Áûbô
)

	)

244 
	gios
::
	tfmtÊags
 
	tios_fmtÊags
;

249 
	#LONGLONGCONSTANT
(
i
Ëi##
LL


	)

250 
	#ULONGLONGCONSTANT
(
i
Ëi##
ULL


	)

254 
	gw_ba£_t
::
uöt8_t
 
thªsh_hex_unsig√d
 =

255 
ULONGLONGCONSTANT
(0xf000000000000000);

256 
	gw_ba£_t
::
uöt8_t
 
thªsh_hex_sig√d
 =

257 
LONGLONGCONSTANT
(0xf800000000000000);

258 
	gw_ba£_t
::
uöt8_t
 
thªsh_dec_unsig√d
 =

259 
ULONGLONGCONSTANT
(1844674407370955161) ;

260 
	gw_ba£_t
::
uöt8_t
 
thªsh_dec_sig√d
 =

261 
LONGLONGCONSTANT
(922337203685477580);

262 
	gw_ba£_t
::
uöt8_t
 
thªsh2_dec_unsig√d
 =

263 
ULONGLONGCONSTANT
(18446744073709551610) ;

264 
	gw_ba£_t
::
uöt8_t
 
thªsh2_dec_sig√d
 =

265 
LONGLONGCONSTANT
(9223372036854775800);

266 
	gw_ba£_t
::
uöt8_t
 
thªsh_o˘_unsig√d
 =

267 
ULONGLONGCONSTANT
(0xe000000000000000);

268 
	gw_ba£_t
::
uöt8_t
 
thªsh_o˘_sig√d
 =

269 
LONGLONGCONSTANT
(0xf000000000000000);

275 
	gi°ªam
 &

276 
	gw_ba£_t
::
	$_sˇn_uöt8
(

277 
i°ªam
& 
i
,

278 
w_ba£_t
::
uöt8_t
 &
u8
,

279 
boﬁ
 
chew_whôe
,

280 
boﬁ
 
is_sig√d
,

281 
boﬁ
& 
ønge_îr


284 
w_ba£_t
::
uöt8_t
 
thªsh
=0,

285 
thªsh2
=0 ,

286 
thªsh3
=0, 
thªsh4
=0;

287 
w_ba£_t
::
uöt8_t
 
vÆue
 = 0;

289 
boﬁ
 
√g©e
 = 
Ál£
;

290 
e
=0;

291 
ba£
=0;

292 
boﬁ
 
skù_whôe
 = 
åue
;

293 
°©es
 
s
 = 
°¨t
;

294 
°ªampos
 
ãŒ_°¨t
 = 
i
.
	`ãŒg
();

295 
chewamt
 = 
chew_whôe
? 1 : 0;

296 
XTABLE
 *
èbÀ
=0;

298 
ønge_îr
 = 
Ál£
;

301 
ios_fmtÊags
 
ﬁd
 = 
i
.
	`Êags
();

302 
skù_whôe
 = ((
ﬁd
 & 
ios
::
skùws
) != 0);

303 
ﬁd
 & 
ios
::
ba£fõld
) {

305 
ba£
 = 0;

306 
èbÀ
 = &
èbÀ_unknown
;

309 
ios
::
hex
:

310 
ba£
 = 4;

311 
èbÀ
 = &
èbÀ_ba£16
;

312 
thªsh
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

315 
ios
::
o˘
:

316 
ba£
 = 3;

317 
èbÀ
 = &
èbÀ_ba£8
;

318 
thªsh
 = 
is_sig√d
? 
thªsh_o˘_sig√d
 : 
thªsh_o˘_unsig√d
;

321 
ios
::
dec
:

322 
ba£
 = 10;

323 
èbÀ
 = &
èbÀ_ba£10
;

324 
thªsh
 = 
is_sig√d
? 
thªsh_dec_sig√d
 : 
thªsh_dec_unsig√d
;

325 
thªsh2
 = 
is_sig√d
? 
thªsh2_dec_sig√d
 : 
thªsh2_dec_unsig√d
;

326 
thªsh3
 = 
is_sig√d
? (
√g©e
? 8: 7) : 5;

327 
thªsh4
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

330 
	`W_FATAL
(
fcINTERNAL
);

335 
ich
;

336 
ch
;

337 
s
 < 
_íd
) {

338 
ch
 = 0;

340 
ich
 = 
i
.
	`gë
();

341 i‡(
ich
 !
EOF
) {

342 
ch
 = (
ich
);

344 if(
	`is•a˚
(
ch
)) {

345 
e
 = 
whôe
;

347 
e
 = 
equiv
[(
ch
)];

351 
e
 = 
eofûe
;

357 
s
 = (*
èbÀ
)[
e
][s];

359 
s
) {

360 
°¨t
:

362 if(!
skù_whôe
) {

363 
s
 = 
_íd
;

365 
ãŒ_°¨t
 +
chewamt
;

368 
sg√d
:

369 if(
ch
 == '-') {

370 
√g©e
 = 
åue
;

371 if(
thªsh3
!=0Ëthªsh3 = 
is_sig√d
? (
√g©e
? 8: 7) : 5;

375 
Àadz
:

382 
√w_hex
:

384 if(
ba£
 && (base != 4)) {

386 
	`IOS_BACK
(
i
, 
ch
);

387 
s
 = 
_íd
;

390 
	`w_as£π9
(
ba£
 == 0 || base == 4);

391 if((
ba£
 =0Ë&& (
e
 !
exx
)) {

393 
	`IOS_BACK
(
i
, 
ch
);

394 
s
 = 
_íd
;

405 
ba£
 = 4;

406 if(
e
 !
exx
) {

407 
	`IOS_BACK
(
i
, 
ch
);

411 
ãŒ_°¨t
 = 
i
.
	`ãŒg
();

412 
ãŒ_°¨t
 -= 1;

414 
thªsh
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

417 
√w_o˘
:

419 if(
ba£
==0 || base == 3) {

421 
ba£
 = 3;

422 
thªsh
 = 
is_sig√d
? 
thªsh_o˘_sig√d
 : 
thªsh_o˘_unsig√d
;

423 } if(
ba£
 == 10) {

424 
s
 = 
√w_dec
;

425 
thªsh
 = 
is_sig√d
? 
thªsh_dec_sig√d
 : 
thªsh_dec_unsig√d
;

426 
thªsh2

is_sig√d
?
thªsh2_dec_sig√d
 : 
thªsh2_dec_unsig√d
;

427 
thªsh3
 = 
is_sig√d
? (
√g©e
? 8: 7) : 5;

428 
thªsh4
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

430 
	`w_as£π9
(
ba£
 == 4);

431 
s
 = 
√w_hex
;

432 
thªsh
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

434 
	`IOS_BACK
(
i
, 
ch
);

437 
√w_dec
:

441 if(
e
 =
eight
 ||É =
nöe
) {

442 if(
ba£
 && base != 10) {

444 
	`IOS_BACK
(
i
, 
ch
);

445 
s
 = 
_íd
;

449 if(
ba£
==0 || base == 10) {

451 
ba£
 = 10;

452 
thªsh
 = 
is_sig√d
? 
thªsh_dec_sig√d
 : 
thªsh_dec_unsig√d
;

453 
thªsh2

is_sig√d
?
thªsh2_dec_sig√d
 : 
thªsh2_dec_unsig√d
;

454 
thªsh3
 = 
is_sig√d
? (
√g©e
? 8: 7) : 5;

455 
thªsh4
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

456 } if(
ba£
 == 3) {

457 
s
 = 
√w_o˘
;

458 
thªsh
 = 
is_sig√d
? 
thªsh_o˘_sig√d
 : 
thªsh_o˘_unsig√d
;

460 
	`w_as£π9
(
ba£
 == 4);

461 
thªsh
 = 
is_sig√d
? 
thªsh_hex_sig√d
 : 
thªsh_hex_unsig√d
;

462 
s
 = 
√w_hex
;

464 
	`IOS_BACK
(
i
, 
ch
);

467 
is_hex
:

468 
	`w_as£π9
(
ba£
 == 4);

471 
is_o˘
:

472 if(
vÆue
 & 
thªsh
) {

473 
ønge_îr
 = 
åue
;

479 
vÆue
 <<
ba£
;

480 
vÆue
 +(
e
);

483 
is_dec
:

484 
	`w_as£π9
(
ba£
 == 10);

485 if(
vÆue
 & 
thªsh4
) {

486 if(
vÆue
 > 
thªsh2
) {

488 
ønge_îr
 = 
åue
;

493 
vÆue
 *
ba£
;

494 if((
vÆue
 - 
thªsh2
Ë+ (
e
Ë> 
thªsh3
) {

496 
ønge_îr
 = 
åue
;

503 
vÆue
 *
ba£
;

505 
vÆue
 +(
e
);

508 
îr‹
:

509 
	`IOS_FAIL
(
i
);

510 
i
.
	`£ekg
(
ãŒ_°¨t
);

511 
s
 = 
_íd
;

514 
no_hex
:

515 
i
.
	`£ekg
(
ãŒ_°¨t
);

516 
s
 = 
_íd
;

519 
_íd
:

520 
	`IOS_BACK
(
i
, 
ch
);

523 
no_°©e
:

524 
	`W_FATAL
(
fcINTERNAL
);

528 if(
ønge_îr
) {

530 
u8
 = 
√g©e
 ?

531 –
is_sig√d
? 
w_ba£_t
::
öt8_mö
 : w_ba£_t::
uöt8_max
) :

532 –
is_sig√d
? 
w_ba£_t
::
öt8_max
 : w_ba£_t::
uöt8_max
);

533 
	`IOS_FAIL
(
i
);

535 
u8
 = 
√g©e
 ? (0 - 
vÆue
) : value;

538  
i
;

539 
	}
}

	@src/fc/w_list.h

53 #i‚de‡
W_LIST_H


54 
	#W_LIST_H


	)

56 
	~"w_deföes.h
"

60 #i‚de‡
W_BASE_H


61 
	~<w_ba£.h
>

64 
	~<io°ªam
>

72 
˛ass
 
	gw_li°_ba£_t
;

73 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
> cœs†
	gw_li°_t
;

74 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
> cœs†
	gw_li°_i
;

75 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
> cœs†
	gw_hash_t
;

87 ˛as†
	cunß„_li°_dummy_lock_t


89 
unß„_li°_dummy_lock_t
* c⁄° 
	gunß„_nﬁock
=
NULL
;

101 ˛as†
	cw_lök_t
 {

102 
	mpublic
:

103 
NORET
 
w_lök_t
();

104 
	mNORET
 ~
w_lök_t
();

105 
NORET
 
w_lök_t
(const w_link_t&);

106 
	mw_lök_t
& 
	m›î©‹
=(c⁄° 
w_lök_t
&);

110 
©èch
(
w_lök_t
* 
¥ev_lök
);

111 
	$check
() {

112 
	`w_as£π9
(
_¥ev
 =
this
 && 
_√xt
 ==Åhis);

115 
w_lök_t
* 
	`dëach
();

116 
w_li°_ba£_t
* 
	$membî_of
() const;

118 
w_lök_t
* 
	$√xt
() const;

119 
w_lök_t
* 
	$¥ev
() const;

121 
¥iv©e
:

122 
w_li°_ba£_t
* 
_li°
;

123 
w_lök_t
* 
_√xt
;

124 
w_lök_t
* 
_¥ev
;

126 
‰õnd
 
˛ass
 
w_li°_ba£_t
;

127 
	}
};

132 ˛as†
	cw_li°_ba£_t
 : 
public
 
w_vba£_t
 {

134 
public
:

135 
boﬁ
 
	$is_em±y
() const;

136 
uöt4_t
 
	$num_membîs
() const;

138 
	`dump
();

139 
¥Ÿe˘ed
:

140 
NORET
 
	`w_li°_ba£_t
();

141 
NORET
 
	`w_li°_ba£_t
(
uöt4_t
 
off£t
);

142 
NORET
 ~
	`w_li°_ba£_t
();

144 
	`£t_off£t
(
uöt4_t
 
off£t
);

146 
w_lök_t
 
_èû
;

147 
uöt4_t
 
_˙t
;

148 
uöt4_t
 
_adj
;

150 
¥iv©e
:

151 
NORET
 
	`w_li°_ba£_t
(
w_li°_ba£_t
&);

152 
w_li°_ba£_t
& 
›î©‹
=(w_list_base_t&);

154 
‰õnd
 
˛ass
 
w_lök_t
;

157 
ölöe
 
NORET


158 
w_lök_t
::
	$w_lök_t
()

159 : 
	$_li°
(0)

161 
_√xt
 = 
this
;

162 
_¥ev
 = 
this
;

164 
	}
}

166 
ölöe
 
NORET


167 
	gw_lök_t
::~
	$w_lök_t
()

169 
	`w_as£π1
(
_√xt
 =
this
 && 
_¥ev
 =thi†&& 
_li°
 == 0);

170 
	}
}

172 
ölöe
 
NORET


173 
	gw_lök_t
::
	$w_lök_t
(c⁄° 
w_lök_t
&)

174 : 
	$_li°
(0)

176 
_√xt
 = 
_¥ev
 = 
this
;

177 
	}
}

179 
ölöe
 
	gw_lök_t
&

180 
	gw_lök_t
::
›î©‹
=(c⁄° 
w_lök_t
&)

182 
_li°
 = 0;

183  *(
	g_√xt
 = 
_¥ev
 = 
this
);

186 
ölöe
 
w_li°_ba£_t
*

187 
	gw_lök_t
::
	$membî_of
() const

189  
_li°
;

190 
	}
}

192 
ölöe
 
w_lök_t
*

193 
	gw_lök_t
::
	$¥ev
() const

195  
_¥ev
;

196 
	}
}

198 
ölöe
 
w_lök_t
*

199 
	gw_lök_t
::
	$√xt
() const

201  
_√xt
;

202 
	}
}

204 
ölöe
 
NORET


205 
	gw_li°_ba£_t
::
	$w_li°_ba£_t
()

206 : 
	`_˙t
(0), 
	$_adj
(
uöt4_max
)

211 
_èû
.
_li°
 = 0;

212 
	`w_as£π9
(
_èû
.
_√xt
 =&_èû && _èû.
_¥ev
 == &_tail);

213 
	}
}

215 
ölöe
 
NORET


216 
	gw_li°_ba£_t
::
	$w_li°_ba£_t
(
uöt4_t
 
off£t
)

217 : 
	`_˙t
(0), 
	$_adj
(
off£t
)

219 
_èû
.
_li°
 = 
this
;

220 
	`w_as£π9
(
_èû
.
_√xt
 =&_èû && _èû.
_¥ev
 == &_tail);

221 
	}
}

223 
ölöe
 

224 
	gw_li°_ba£_t
::
	$£t_off£t
(
uöt4_t
 
off£t
)

226 
	`w_as£π9
(
_˙t
 =0 && 
_adj
 =
uöt4_max
 && 
_èû
.
_li°
 == 0);

227 
_èû
.
_li°
 = 
this
;

228 
_adj
 = 
off£t
;

229 
	}
}

231 
ölöe
 
NORET


232 
	gw_li°_ba£_t
::~
	$w_li°_ba£_t
()

234 
_èû
.
_li°
 = 0;

235 
	`w_as£π9
(
_˙t
 == 0);

236 
	}
}

238 
ölöe
 
boﬁ


239 
	gw_li°_ba£_t
::
	$is_em±y
() const

241  
_˙t
 == 0;

242 
	}
}

244 
ölöe
 
	gw_ba£_t
::
uöt4_t


245 
w_li°_ba£_t
::
	$num_membîs
() const

247  
_˙t
;

248 
	}
}

250 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gL
> cœs†
	gw_li°_t
;

252 
BIND_FRIEND_OPERATOR_PART_1
(
T
, 
L
, 
w_li°_t
<T,L>)

263 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
>

264 ˛as†
	cw_li°_t
 : 
public
 
w_li°_ba£_t
 {

265 
¥Ÿe˘ed
:

268 
w_lök_t
* 
	$lök_of
(
T
* 
t
) {

269 
	`w_as£π3
(
t
);

270  
	`CAST
(
w_lök_t
*, CAST(*,
t
)+
_adj
);

274 c⁄° 
w_lök_t
* 
	$lök_of
(c⁄° 
T
* 
t
) const {

275 
	`w_as£π3
(
t
);

276  
	`CAST
(
w_lök_t
*, CAST(*,
t
)+
_adj
);

277 
	}
}

280 
T
* 
	$ba£_of
(
w_lök_t
* 
p
) const {

281 
	`w_as£π3
(
p
);

282  
	`CAST
(
T
*, CAST(*, 
p
Ë- 
_adj
);

283 
	}
}

286 c⁄° 
T
* 
	$ba£_of
(c⁄° 
w_lök_t
* 
p
) const {

287 
	`w_as£π3
(
p
);

288  
	`CAST
(
T
*, CAST(*, 
p
Ë- 
_adj
);

289 
	}
}

291 
	g¥iv©e
:

292 
LOCK
 *
lock
;

293 
	gpublic
:

308 
NORET
 
	$w_li°_t
(
uöt4_t
 
lök_off£t
, 
LOCK
 *
l
)

309 : 
	`w_li°_ba£_t
(
lök_off£t
), 
	$lock
(
l
)

311 #ifde‡
__GNUC__


313 
	`w_as£π2
(
lök_off£t
 + (
w_lök_t
Ë<(
T
));

315 
	}
}

317 
	gpublic
:

321 
NORET
 
	$w_li°_t
(Ë: 
	$lock
(
NULL
Ë{
	}
}

323 
public
:

325 
NORET
 ~
	$w_li°_t
(Ë{
	}
}

331 
	$£t_off£t
(
uöt4_t
 
lök_off£t
) {

332 
w_li°_ba£_t
::
	`£t_off£t
(
lök_off£t
);

333 
	}
}

337 
vútuÆ
 
	$put_ö_‹dî
(
T
* 
t
) {

338 
w_li°_t
<
T
,
LOCK
>::
	`push
(
t
);

339 
	}
}

343 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
	$push_‰⁄t
(
T
* 
t
Ë{  
	`push
—); 
	}
}

344 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
	$push_back
 (
T
* 
t
Ë{  
	`≠≥nd
—); 
	}
}

345 
T
* 
	$‰⁄t
(Ë{  
	`t›
(); 
	}
}

346 
T
* 
	$back
(Ë{  
	`bŸtom
(); 
	}
}

347 
T
* 
	$p›_‰⁄t
(Ë{  
	`p›
(); 
	}
}

348 
T
* 
	$p›_back
(Ë{  
	`ch›
(); 
	}
}

351 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
	$push
(
T
* 
t
) {

352 
	`lök_of
(
t
)->
	`©èch
(&
_èû
);

353  *
this
;

354 
	}
}

357 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
	$≠≥nd
(
T
* 
t
) {

358 
	`lök_of
(
t
)->
	`©èch
(
_èû
.
	`¥ev
());

359  *
this
;

360 
	}
}

363 
T
* 
	$p›
() {

364  
_˙t
 ? 
	`ba£_of
(
_èû
.
	`√xt
()->
	`dëach
()) : 0;

365 
	}
}

368 
T
* 
	$ch›
() {

369  
_˙t
 ? 
	`ba£_of
(
_èû
.
	`¥ev
()->
	`dëach
()) : 0;

370 
	}
}

373 
T
* 
	$t›
() {

374  
_˙t
 ? 
	`ba£_of
(
_èû
.
	`√xt
()) : 0;

375 
	}
}

378 
T
* 
	$bŸtom
(){

379  
_˙t
 ? 
	`ba£_of
(
_èû
.
	`¥ev
()) : 0;

380 
	}
}

383 
T
* 
	$√xt
(
w_lök_t
* 
p
) {

384 
	`w_as£π1
(
p
->
	`membî_of
(Ë=
this
);

385  
	`ba£_of
(
p
->
	`√xt
());

386 
	}
}

389 
T
* 
	$¥ev
(
w_lök_t
* 
p
) {

390 
	`w_as£π1
(
p
->
	`membî_of
(Ë=
this
);

391  
	`ba£_of
(
p
->
	`¥ev
());

392 
	}
}

395 
‰õnd
 
	go°ªam
& 
	g›î©‹
<< 
	$BIND_FRIEND_OPERATOR_PART_2
(
T
, 
LOCK
) (

396 
o°ªam
& 
o
,

397 c⁄° 
w_li°_t
<
T
,
LOCK
>& 
l
);

399 
¥iv©e
:

401 
NORET
 
	`w_li°_t
(c⁄° 
w_li°_t
<
T
,
LOCK
>&
x
) ;

402 
w_li°_t
<
T
,
LOCK
>& 
›î©‹
=(const w_list_t<T,LOCK>&) ;

404 
‰õnd
 
˛ass
 
w_li°_i
<
T
, 
LOCK
>;

405 
	}
};

408 
	#W_LIST_ARG
(
˛ass
,
membî
Ë
	`w_off£tof
(˛ass,membî)

	)

437 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
>

438 ˛as†
	cw_li°_i
 : 
public
 
w_ba£_t
 {

439 
public
:

443 
NORET
 
	$w_li°_i
()

444 : 
	`_li°
(0), 
	`_√xt
(0), 
	`_cuº
(0), 
	$_backw¨ds
(
Ál£
) {};

448 
NORET
 
	`w_li°_i
(c⁄° 
w_li°_t
<
T
,
LOCK
>& 
l
, 
boﬁ
 
backw¨ds
 = 
Ál£
)

449 : 
	`_li°
(&
l
), 
	`_cuº
(0), 
	$_backw¨ds
(
backw¨ds
) {

450 
_√xt
 = (
backw¨ds
 ? 
l
.
_èû
.
	`¥ev
(Ë:Ü._èû.
	`√xt
());

451 
	}
}

453 
	gNORET
 ~
	$w_li°_i
(Ë{
	}
};

457 
ª£t
(c⁄° 
w_li°_t
<
T
, 
LOCK
>& 
l
, 
boﬁ
 
backw¨ds
 = 
Ál£
) {

458 
_li°
 = &
l
;

459 
	g_cuº
 = 0;

460 
	g_backw¨ds
 = 
backw¨ds
;

461 
	g_√xt
 = (
_backw¨ds
 ? 
l
.
_èû
.
¥ev
(Ë:Ü._èû.
√xt
());

469 
T
* 
	$√xt
()

471 i‡(
_√xt
) {

472 
_cuº
 = (
_√xt
 =&(
_li°
->
_èû
)Ë? 0 : _li°->
	`ba£_of
(_next);

473 
_√xt
 = (
_backw¨ds
 ? _√xt->
	`¥ev
(Ë: _√xt->
	`√xt
());

477 
	`w_as£π1
(
_√xt
 !
NULL
);

479  
_cuº
;

480 
	}
}

488 
T
* 
	$cuº
() const {

489  
_cuº
;

490 
	}
}

492 
	g¥Ÿe˘ed
:

493 c⁄° 
w_li°_t
<
T
, 
	gLOCK
>* 
	g_li°
;

494 
	g¥iv©e
:

495 
w_lök_t
* 
_√xt
;

496 
T
* 
	g_cuº
;

497 
boﬁ
 
	g_backw¨ds
;

500 
NORET
 
w_li°_i
(w_li°_i<
T
, 
LOCK
>&) ;

501 
	gw_li°_i
<
	gT
, 
	gLOCK
>& 
	g›î©‹
=(
w_li°_i
<
T
, LOCK>&) ;

510 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
>

511 
˛ass
 
	gw_li°_c⁄°_i
 : 
public
 
w_li°_i
<
T
, 
	gLOCK
> {

512 
	gpublic
:

513 
NORET
 
w_li°_c⁄°_i
() {};

514 
NORET
 
w_li°_c⁄°_i
(c⁄° 
w_li°_t
<
T
,
LOCK
>& 
l
)

515 : 
w_li°_i
<
T
,
	gLOCK
>(* (
	gw_li°_t
<
	gT
,LOCK>*)(&
	gl
)) {};

516 
	gNORET
 ~
w_li°_c⁄°_i
() {};

518 
ª£t
(c⁄° 
w_li°_t
<
T
,
LOCK
>& 
l
) {

519 
	gw_li°_i
<
	gT
,
	gLOCK
>::
ª£t
(* (
w_li°_t
<
T
,
LOCK
>*Ë(&
l
));

522 c⁄° 
T
* 
√xt
(Ë{  
	gw_li°_i
<
	gT
,
	gLOCK
>::next(); }

523 c⁄° 
T
* 
cuº
() const {

524  
	gw_li°_i
<
	gT
,
	gLOCK
>::
cuº
();

526 
	g¥iv©e
:

528 
NORET
 
w_li°_c⁄°_i
(w_li°_c⁄°_i<
T
,
LOCK
>&);

529 
	gw_li°_c⁄°_i
<
	gT
,
	gLOCK
>& 
	g›î©‹
=(
w_li°_c⁄°_i
<
T
,LOCK>&);

537 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

538 
˛ass
 
	gw_keyed_li°_t
 : 
public
 
w_li°_t
<
T
,
	gLOCK
> {

539 
	gpublic
:

540 
T
* 
fú°
(Ë{  
w_li°_t
<T,
	gLOCK
>::
t›
(); }

541 
T
* 
œ°
(Ë{  
	gw_li°_t
<
	gT
,
	gLOCK
>::
bŸtom
(); }

542 
vútuÆ
 
T
* 
£¨ch
(c⁄° 
K
& 
k
);

544 
NORET
 
w_keyed_li°_t
(
LOCK
 *
lock
);

545 
NORET
 
w_keyed_li°_t
(

546 
w_ba£_t
::
uöt4_t
 
key_off£t
,

547 
w_ba£_t
::
uöt4_t
 
lök_off£t
,

548 
LOCK
 * 
lock


551 
	gNORET
 ~
w_keyed_li°_t
() {};

553 
£t_off£t
(

554 
w_ba£_t
::
uöt4_t
 
key_off£t
,

555 
w_ba£_t
::
uöt4_t
 
lök_off£t
);

557 
	g¥Ÿe˘ed
:

558 c⁄° 
K
& 
key_of
(c⁄° 
T
& 
t
) {

559  * (
K
*Ë(((c⁄° *)&
t
Ë+ 
_key_off£t
);

562 
usög
 
	gw_li°_t
<
	gT
,
	gLOCK
>::
_èû
;

563 
usög
 
	gw_li°_t
<
	gT
,
	gLOCK
>::
ba£_of
;

565 
	g¥iv©e
:

567 
NORET
 
w_keyed_li°_t
(c⁄° w_keyed_li°_t<
T
,
LOCK
,
K
>&);

568 
	gw_ba£_t
::
uöt4_t
 
_key_off£t
;

571 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
push
(
T
* 
t
);

572 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
≠≥nd
(
T
* 
t
) ;

573 
T
* 
ch›
();

574 
T
* 
t›
();

575 
T
* 
bŸtom
();

578 
	#W_KEYED_ARG
(
˛ass
,
key
,
lök
) \

579 
	`W_LIST_ARG
(
˛ass
,
key
), W_LIST_ARG(˛ass,
lök
)

	)

587 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

588 
˛ass
 
	gw_as˚nd_li°_t
 : 
public
 
w_keyed_li°_t
<
T
,
	gLOCK
, 
	gK
> {

589 
usög
 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
_èû
;

590 
usög
 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
ba£_of
;

592 
	gpublic
:

593 
NORET
 
w_as˚nd_li°_t
(

594 
w_ba£_t
::
uöt4_t
 
key_off£t
,

595 
w_ba£_t
::
uöt4_t
 
lök_off£t
,

596 
LOCK
 *
lock
)

597 : 
w_keyed_li°_t
<
T
,
	gLOCK
, 
	gK
>(
	gkey_off£t
, 
	glök_off£t
, 
	glock
) { };

598 
	gNORET
 ~
w_as˚nd_li°_t
() {};

600 
vútuÆ
 
T
* 
£¨ch
(c⁄° 
K
& 
k
);

601 
vútuÆ
 
put_ö_‹dî
(
T
* 
t
);

603 
	g¥iv©e
:

604 
NORET
 
w_as˚nd_li°_t
(

605 c⁄° 
w_as˚nd_li°_t
<
T
,
LOCK
,
K
>&);

614 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

615 
˛ass
 
	gw_des˚nd_li°_t
 : 
public
 
w_keyed_li°_t
<
T
,
	gLOCK
, 
	gK
>

617 
usög
 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
_èû
;

618 
usög
 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
ba£_of
;

620 
	gpublic
:

621 
NORET
 
w_des˚nd_li°_t
(

622 
w_ba£_t
::
uöt4_t
 
key_off£t
,

623 
w_ba£_t
::
uöt4_t
 
lök_off£t
,

624 
LOCK
 *
l
)

625 : 
w_keyed_li°_t
<
T
,
	gLOCK
, 
	gK
>(

626 
	gkey_off£t
, 
	glök_off£t
, 
	gl
) { };

627 
	gNORET
 ~
w_des˚nd_li°_t
() {};

629 
vútuÆ
 
T
* 
£¨ch
(c⁄° 
K
& 
k
);

630 
vútuÆ
 
put_ö_‹dî
(
T
* 
t
);

632 
	g¥iv©e
:

633 
NORET
 
w_des˚nd_li°_t
(

634 c⁄° 
w_des˚nd_li°_t
<
T
,
LOCK
,
K
>&);

639 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
>

640 
	go°ªam
&

641 
	g›î©‹
<<(

642 
	go°ªam
& 
	go
,

643 c⁄° 
	gw_li°_t
<
	gT
,
	gLOCK
>& 
	gl
)

645 c⁄° 
w_lök_t
* 
	gp
 = 
l
.
_èû
.
√xt
();

647 
	gcout
 << "˙à" << 
	gl
.
num_membîs
();

649 
	gp
 !&
l
.
_èû
) {

650 c⁄° 
T
* 
t
 = 
l
.
ba£_of
(
p
);

651 i‡(! (
	go
 << 
	gídl
 << '\t' << *
	gt
)) ;

652 
	gp
 = 
p
->
√xt
();

654  
	go
;

658 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

659 
NORET


660 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$w_keyed_li°_t
(

661 
w_ba£_t
::
uöt4_t
 
key_off£t
,

662 
w_ba£_t
::
uöt4_t
 
lök_off£t
,

663 
LOCK
* 
lock


665 : 
w_li°_t
<
T
,
LOCK
>(
lök_off£t
, 
lock
), 
	$_key_off£t
(
key_off£t
)

667 #ifde‡
__GNUC__


669 
	`w_as£π9
(
key_off£t
 + (
K
Ë<(
T
));

671 
	}
}

673 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

674 
NORET


675 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$w_keyed_li°_t
(
LOCK
 *
l
)

676 : 
w_li°_t
<
T
,
LOCK
>(0,
l
), 
	$_key_off£t
(0)

678 
	}
}

680 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

682 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$£t_off£t
(

683 
w_ba£_t
::
uöt4_t
 
key_off£t
,

684 
w_ba£_t
::
uöt4_t
 
lök_off£t
)

686 
	`w_as£π3
(
_key_off£t
 == 0);

687 
w_li°_t
<
T
,
LOCK
>::
	`£t_off£t
(
lök_off£t
);

688 
_key_off£t
 = 
key_off£t
;

689 
	}
}

691 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

692 
T
*

693 
	gw_keyed_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$£¨ch
(c⁄° 
K
& 
k
)

695 
w_lök_t
 *
p
;

696 
p
 = 
_èû
.
	`√xt
();

697 
p
 !&
_èû
 && (
	`key_of
(*
	`ba£_of
’)Ë!
k
);

698 
p
 =Ö->
	`√xt
()) ;

699  (
p
 && (p!=&
_èû
)Ë? 
	`ba£_of
(p) : 0;

700 
	}
}

702 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

703 
T
*

704 
	gw_as˚nd_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$£¨ch
(c⁄° 
K
& 
k
)

706 
w_lök_t
 *
p
;

707 
p
 = 
_èû
.
	`√xt
();

708 
p
 !&
_èû
 && (
	`key_of
(*
	`ba£_of
’)Ë< 
k
);

709 
p
 =Ö->
	`√xt
()) ;

711  
p
 ? 
	`ba£_of
(p) : 0;

712 
	}
}

714 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

716 
	gw_as˚nd_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$put_ö_‹dî
(
T
* 
t
)

718 
w_lök_t
 *
p
;

719 
p
 = 
_èû
.
	`√xt
();

720 
p
 !&
_èû
 && (
	`key_of
(*
	`ba£_of
’)Ë<key_of(*
t
));

721 
p
 =Ö->
	`√xt
()) ;

723 i‡(
p
) {

724 
	`lök_of
(
t
)->
	`©èch
(
p
->
	`¥ev
());

726 
	`lök_of
(
t
)->
	`©èch
(
_èû
.
	`¥ev
());

728 
	}
}

730 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

731 
T
*

732 
	gw_des˚nd_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$£¨ch
(c⁄° 
K
& 
k
)

734 
w_lök_t
 *
p
;

735 
p
 = 
_èû
.
	`√xt
();

736 
p
 !&
_èû
 && (
	`key_of
(*
	`ba£_of
’)Ë> 
k
);

737 
p
 =Ö->
	`√xt
()) ;

739  
p
 ? 
	`ba£_of
(p) : 0;

740 
	}
}

742 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gLOCK
, cœs†
	gK
>

744 
	gw_des˚nd_li°_t
<
	gT
,
	gLOCK
, 
	gK
>::
	$put_ö_‹dî
(
T
* 
t
)

746 
w_lök_t
 *
p
;

747 
p
 = 
_èû
.
	`√xt
();

748 
p
 !&
_èû
 && (
	`key_of
(*
	`ba£_of
’)Ë>key_of(*
t
));

749 
p
 =Ö->
	`√xt
()) ;

751 i‡(
p
) {

752 
	`lök_of
(
t
)->
	`©èch
(
p
->
	`¥ev
());

754 
	`lök_of
(
t
)->
	`©èch
(
_èû
.
	`¥ev
());

756 
	}
}

	@src/fc/w_listm.cpp

30 
	~"w_deföes.h
"

34 
	#W_SOURCE


	)

35 
	~<w_ba£.h
>

36 
	~<w_li°.h
>

40 
	gw_lök_t
::
	$©èch
(
w_lök_t
* 
¥ev_lök
)

42 
	`w_as£π2
(
_¥ev
 =
this
 && 
_√xt
 ==Åhis);

43 
_li°
 = 
¥ev_lök
->_list;

44 
_√xt
 = 
¥ev_lök
->_next;

45 
_¥ev
 = 
¥ev_lök
;

46 
¥ev_lök
->
_√xt
 = 
this
;

47 
_√xt
->
_¥ev
 = 
this
;

48 ++(
_li°
->
_˙t
);

49 
	}
}

51 
w_lök_t
*

52 
	gw_lök_t
::
	$dëach
()

54 i‡(
_√xt
 !
this
) {

55 
	`w_as£π2
(
_¥ev
 !
this
);

56 
_¥ev
->
_√xt
 = _next, _next->_prev = _prev;

57 
_li°
->
_˙t
--;

58 
	`w_as£π2
(
_li°
->
_˙t
 ||

59 (
_li°
->
_èû
.
_¥ev
 == & _list->_tail &&

60 
_li°
->
_èû
.
_√xt
 == & _list->_tail));

61 
_√xt
 = 
_¥ev
 = 
this
, 
_li°
 = 0;

63  
this
;

64 
	}
}

66 
	go°ªam
&

67 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gw_lök_t
& 
	gn
)

69 
	go
 << "_li° = " << 
	gn
.
membî_of
(Ë<< 
	gídl
;

70 
	go
 << "_√xà" << 
	gn
.
√xt
(Ë<< 
	gídl
;

71 
	go
 << "_¥ev = " << 
	gn
.
¥ev
();

72  
	go
;

76 
	gw_li°_ba£_t
::
	$dump
()

78 
cout
 << "_èû = " << 
_èû
 << 
ídl
;

79 
cout
 << "_˙à" << 
_˙t
 << 
ídl
;

80 
cout
 << "_adj = " << 
_adj
 << 
ídl
;

81 
	}
}

	@src/fc/w_minmax.h

30 #i‚de‡
W_MINMAX_H


31 
	#W_MINMAX_H


	)

33 
	~"w_deföes.h
"

37 #i‡!
deföed
(
GNUG_BUG_14
)

43 
	gãm∂©e
 <
˛ass
 
	gT
>

44 
ölöe
 c⁄° 
T


45 
	$max
(c⁄° 
T
 
x
, c⁄° T 
y
)

47  
x
 > 
y
 ? x : y;

48 
	}
}

50 
	gãm∂©e
 <
˛ass
 
	gT
>

51 
ölöe
 c⁄° 
T


52 
	$mö
(c⁄° 
T
 
x
, c⁄° T 
y
)

54  
x
 < 
y
 ? x : y;

55 
	}
}

58 #ifde‡
W_UNIX


59 #i‡
HAVE_SYS_PARAM_H


60 
	~<sys/∑øm.h
>

71 #i‚de‡
MAX


72 
	#MAX
(
x
, 
y
Ë((xË> (yË? (xË: (y))

	)

75 #i‚de‡
MIN


76 
	#MIN
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

	@src/fc/w_rand.cpp

24 
	~"w_ønd.h
"

26 
	~<Æg‹ôhm
>

27 
	~<uni°d.h
>

28 
	~<±hªad.h
>

30 
	gw_ønd
::
	$w_ønd
()

31 : 
	$_°©e
(0)

33 
uöt32_t
 c⁄° 
s
[] = {

34 (
uöt32_t
Ë(
uöçå_t
Ë&
_°©e
,

35 (
uöt32_t
Ë
	`gëpid
(),

36 (
uöt32_t
Ë(
uöçå_t
Ë
	`±hªad_£lf
(),

38 
	`£ed
(
s
);

39 
	}
}

41 
	gw_ønd
::
	$£ed
(
uöt32_t
 c⁄° *
w
, 
size_t
 
n
) {

42 
j
=0; 
n
 
™d
 j < 
R
; j++)

43 
_¨r
[(
R
-
j
Ë& 0xf] = 
w
[(j%
n
)];

46 
i
=0; i < 100; i++)

47 
	`ønd
();

48 
	}
}

52 
uöt32_t
 
	gw_ønd
::
	$ønd
() {

53 
uöt32_t
 
si
 = 
_°©e
;

54 
uöt32_t
 
si7
 = (
si
+7) & 0xf;

55 
uöt32_t
 
si3
 = (
si
+3) & 0xf;

56 
uöt32_t
 
si1
 = (
si
+1) & 0xf;

58 
uöt32_t
 
v0
 = 
_¨r
[
si
];

59 
uöt32_t
 
v7
 = 
_¨r
[
si7
];

60 
uöt32_t
 
v3
 = 
_¨r
[
si3
];

61 
uöt32_t
 
z0
 = 
_¨r
[
si1
];

63 
uöt32_t
 
z1
 = 
v0
 ^ (v0<<16Ë^ 
v3
 ^ (v3<<15);

64 
uöt32_t
 
z2
 = 
v7
 ^ (v7>>11);

65 
uöt32_t
 
z3
 = 
z1
 ^ 
z2
;

66 
uöt32_t
 
z4
 = 
z0
 ^ (z0<<2Ë^ (
z1
<<18Ë^ 
z2
 ^ (z2<<28Ë^ ((
z3
 & 0x6d22169)<<5);

68 
_¨r
[
si
 ] = 
z3
;

69 
_¨r
[
si1
] = 
z4
;

70 
_°©e
 = 
si1
;

71  
z4
;

72 
	}
}

77 
uöt32_t
 
	gw_ønd
::
	$øndn
(
uöt32_t
 
íd
) {

78 i‡(
íd
 < 2)

81 
uöt32_t
 
rvÆ
;

83 
rvÆ
 = 
	`uöt64_t
(
íd
)*
	`ønd
()/~
	`uöt32_t
(0);

84 } 
rvÆ
 >
íd
);

85  
rvÆ
;

86 
	}
}

88 
uöt32_t
 
	gw_ønd
::
	$øndn
(
uöt32_t
 
a
, uöt32_à
b
) {

89 i‡(
b
 < 
a
) {

90 
usög
 
°d
::
sw≠
;

91 
	`sw≠
(
a
, 
b
);

94  
a
 + 
	`øndn
(
b
 -á + 1);

95 
	}
}

120 
	gw_ønd
::
	$dønd
() {

121 
uöt64_t
 
bôs
 = 20;

122 uni⁄ { 
uöt64_t
 
n
; 
d
; } 
u
 = { ((1023+
bôs
Ë<< 52Ë| 
	`ønd
() };

123  
u
.
d
 - (1<<
bôs
);

124 
	}
}

126 #ifde‡
TEST_W_RAND


127 
	~<c°dio
>

129 
__©åibuã__
((
noölöe
)Ë
	$⁄˚
(
w_ønd
 &
∫g
) {

130 
∫g
.
	`ønd
();

131 
	}
}

133 
	$maö
() {

134 
w_ønd
 
∫g
;

135 
i
=0; i < 16; i++) {

136 
j
=0; j < 8; j++)

137 
	`¥ötf
("%08x ", 
∫g
.
	`ønd
());

138 
	`¥ötf
("\n");

141 
	`¥ötf
("\n");

142 
j
=0; j < 20; j++) {

143 
i
=0; i < 40; i++)

144 
	`¥ötf
("%d ", 
∫g
.
	`øndn
(10));

145 
	`¥ötf
("\n");

148 
	`¥ötf
("\n");

149 
j
=0; j < 20; j++) {

150 
i
=0; i < 10; i++)

151 
	`¥ötf
("%.5‡", 
∫g
.
	`dønd
());

152 
	`¥ötf
("\n");

155 
i
=0; i < 1e9; i++)

156 
	`⁄˚
(
∫g
);

157 
	}
}

	@src/fc/w_rand.h

24 #i‚de‡
__W_RAND_H


25 
	#__W_RAND_H


	)

27 
	~<öây≥s.h
>

28 
	~<c°ddef
>

30 
usög
 
	g°d
::
size_t
;

81 
	sw_ønd
 {

83 íum { 
	mR
=16 };

85 
uöt32_t
 
	m_°©e
;

86 
uöt32_t
 
	m_¨r
[
R
];

94 
w_ønd
();

96 
w_ønd
(
uöt32_t
 c⁄° *
w
, 
size_t
 
n
)

97 : 
_°©e
(0)

99 
£ed
(
w
, 
n
);

102 
	mãm∂©e
 <
size_t
 
	mN
>

103 
w_ønd
(
uöt32_t
 c⁄° (&
w
)[
N
])

104 : 
_°©e
(0)

106 
£ed
(
w
);

117 
£ed
(
uöt32_t
 c⁄° *
w
, 
size_t
 
n
);

119 
	mãm∂©e
 <
size_t
 
	mN
>

120 
£ed
(
uöt32_t
 c⁄° (&
w
)[
N
]) { seed(w, N); }

124 
uöt32_t
 
ønd
();

129 
uöt32_t
 
øndn
(uöt32_à
íd
);

132 
uöt32_t
 
›î©‹
()(uöt32_à
	míd
Ë{  
øndn
(
íd
); }

138 
uöt32_t
 
øndn
(uöt32_à
a
, uöt32_à
b
);

143 
dønd
();

	@src/fc/w_rc.cpp

53 
	~"w_deföes.h
"

57 #ifde‡
__GNUC__


58 #¥agm®
im∂emíèti⁄
 "w_rc.h"

61 
	#W_SOURCE


	)

62 
	~<w_ba£.h
>

64 
	~<±hªad.h
>

65 
	~<ve˘‹
>

66 
	~<s°ªam
>

68 
boﬁ
 
	gw_rc_t
::
do_check
 = 
åue
;

70 
boﬁ
 
	gw_rc_t
::
unchecked_is_Áèl
 = 
åue
;

72 c⁄° 
w_rc_t
 
	gw_rc_t
::
rc_ok
(
w_îr‹_t
::
no_îr‹
);

75 
	gw_rc_t
::
	$£t_ªtu∫_check
(
boﬁ
 
⁄_off
, boﬁ 
is_Áèl
)

77 
do_check
 = 
⁄_off
;

78 
unchecked_is_Áèl
 = 
is_Áèl
;

79 
	}
}

81 
NORET


82 
	gw_rc_t
::
	$w_rc_t
(

83 c⁄° * c⁄° 
fûíame
,

84 
w_ba£_t
::
uöt4_t
 
löe_num
,

85 
w_rc_t
::
îrcode_t
 
îr_num
)

86 : 
	`_îr
–
w_îr‹_t
::
	$make
(
fûíame
, 
löe_num
, 
îr_num
) )

88 
	`£t_unchecked
();

89 
	}
}

91 
NORET


92 
	gw_rc_t
::
	$w_rc_t
(

93 c⁄° * c⁄° 
fûíame
,

94 
w_ba£_t
::
uöt4_t
 
löe_num
,

95 
w_rc_t
::
îrcode_t
 
îr_num
,

96 
w_ba£_t
::
öt4_t
 
sys_îr
)

97 : 
	`_îr
–
w_îr‹_t
::
	$make
(
fûíame
, 
löe_num
, 
îr_num
, 
sys_îr
) )

99 
	`£t_unchecked
();

100 
	}
}

102 
	gw_rc_t
&

103 
	gw_rc_t
::
	$push
(

104 c⁄° * c⁄° 
fûíame
,

105 
w_ba£_t
::
uöt4_t
 
löe_num
,

106 
w_rc_t
::
îrcode_t
 
îr_num
)

108 
_îr
 = 
w_îr‹_t
::
	`make
(
fûíame
, 
löe_num
,

109 
îr_num
, 
	`±r
());

110 
	`£t_unchecked
();

111  *
this
;

112 
	}
}

115 
	gw_rc_t
::
	$Áèl
()

117 
°rög°ªam
 
s
;

118 
s
 << *
this
 << 
ídl
;

119 
	`Ârötf
(
°dîr
, "FATAL ERROR: %s\n", 
s
.
	`°r
().
	`c_°r
());

120 
w_ba£_t
::
	`ab‹t
();

121 
	}
}

123 
	gw_rc_t
&

124 
	gw_rc_t
::
	$add_åa˚_öfo
(

125 c⁄° * c⁄° 
fûíame
,

126 
w_ba£_t
::
uöt4_t
 
löe_num
)

128 
	`±r
()->
	`add_åa˚_öfo
(
fûíame
, 
löe_num
);

129 
	`£t_unchecked
();

130  *
this
;

131 
	}
}

134 
	gw_rc_t
::
	$îr‹_nŸ_checked
()

136 
˚º
 << "Eº‹ÇŸ checked:Ñc=" << (*
this
Ë<< 
ídl
;

137 if(
unchecked_is_Áèl
)

138 
	`W_FATAL
(
fcINTERNAL
);

139 
	}
}

141 
	go°ªam
&

142 
	g›î©‹
<<(

143 
	go°ªam
& 
	go
,

144 c⁄° 
	gw_rc_t
& 
	gobj
)

146  
	go
 << *
	gobj
;

151 
w_îr‹_t
 *
	gw_rc_t
::
	$_˛⁄e
() const

154 
	`w_as£π2
–
	`±r
(Ë!
w_îr‹_t
::
no_îr‹
 );

158 
°d
::
ve˘‹
<
w_îr‹_t
 c⁄°*> 
åa˚
;

159 
w_rc_i
 
	`ô
(*
this
);

160 
w_îr‹_t
 c⁄°* 
e
 = 
ô
.
	`√xt
()) {

161 #i‡
W_DEBUG_LEVEL
 > 2

162 (Ë
e
->
	`gë_m‹e_öfo_msg
();

164 
åa˚
.
	`push_back
(
e
);

167 
w_îr‹_t
* 
hód
 = 0;

168 !
åa˚
.
	`em±y
()) {

169 
w_îr‹_t
 c⁄°* 
e
 = 
åa˚
.
	`back
();

170 
åa˚
.
	`p›_back
();

172 
hód
 = 
w_îr‹_t
::
	`make
(
e
->
fûe
,É->
löe
,É->
îr_num
,É->
sys_îr_num
, head);

174 
t
=0;Å<
e
->
_åa˚_˙t
;Å++) {

175 
hód
->
_åa˚_fûe
[
t
] = 
e
->_trace_file[t];

176 
hód
->
_åa˚_löe
[
t
] = 
e
->_trace_line[t];

178 
hód
->
_åa˚_˙t
 = 
e
->_trace_cnt;

180 
hód
->
	`˛ór_m‹e_öfo_msg
();

181 c⁄° *
c
=
e
->
	`gë_m‹e_öfo_msg
();

182 if(
c
Ë
hód
->
	`≠≥nd_m‹e_öfo_msg
(c);

185  
hód
;

186 
	}
}

	@src/fc/w_rc.h

53 #i‚de‡
W_RC_H


54 
	#W_RC_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


65 
	~"w_îr‹.h
"

109 
˛ass
 
	gw_rc_i
;

130 ˛as†
	cw_rc_t


132 
‰õnd
 
˛ass
 
	mw_rc_i
;

133 
	mpublic
:

138 
w_îr‹_t
::
	tîr_num_t
 
	tîrcode_t
;

140 c⁄° 
w_rc_t
 
	mrc_ok
;

143 
NORET
 
w_rc_t
();

146 
ex∂icô
 
NORET
 
w_rc_t
(
w_îr‹_t
* 
e
);

149 
ex∂icô
 
NORET
 
w_rc_t
(

150 c⁄° * c⁄° 
fûíame
,

151 
w_ba£_t
::
uöt4_t
 
löe_num
,

152 
îrcode_t
 
îr_num
);

155 
ex∂icô
 
NORET
 
w_rc_t
(

156 c⁄° * c⁄° 
fûíame
,

157 
w_ba£_t
::
uöt4_t
 
löe_num
,

158 
îrcode_t
 
îr_num
,

159 
w_ba£_t
::
öt4_t
 
sys_îr
);

162 
	$w_rc_t
(c⁄° 
w_rc_t
 &
Ÿhî
Ë: 
	`_îr
(Ÿhî.
	$˛⁄e
()) {

163 
	`£t_unchecked
();

167 
w_rc_t
 &
›î©‹
=(w_rc_àc⁄° &
Ÿhî
) {

168  (
this
 =&
Ÿhî
)? *thi†: 
	`_assign
(Ÿhî.
	`˛⁄e
()); 
	}
}

171 
	gNORET
 ~
w_rc_t
();

174 
£t_ªtu∫_check
(
boﬁ
 
⁄_off
, boﬁ 
Áèl
);

186 
boﬁ
 
	$is_îr‹
() const;

189 
îrcode_t
 
	$îr_num
() const;

192 
w_ba£_t
::
öt4_t
 
	$sys_îr_num
() const;

195 
w_rc_t
& 
	`ª£t
();

198 
w_rc_t
& 
	`add_åa˚_öfo
(

199 c⁄° * c⁄° 
fûíame
,

200 
w_ba£_t
::
uöt4_t
 
löe_num
);

203 
w_rc_t
& 
	`push
(

204 c⁄° * c⁄° 
fûíame
,

205 
w_ba£_t
::
uöt4_t
 
löe_num
,

206 
îrcode_t
 
îr_num
);

208 
	`vîify
();

211 
	`îr‹_nŸ_checked
();

214 
	`Áèl
();

216 
w_îr‹_t
 c⁄°* 
›î©‹
->(Ëc⁄° {  
	`±r
(); 
	}
}

219 
w_îr‹_t
* 
	g›î©‹
->(Ë{  
±r
(); }

222 
w_îr‹_t
* 
dñeg©e
();

223 
	g¥iv©e
:

224 
w_îr‹_t
 &
›î©‹
*(Ë{  *
±r
(); }

225 
w_îr‹_t
 c⁄° &
	g›î©‹
*(Ëc⁄° {  *
±r
(); }

227 
w_îr‹_t
* 
	$˛⁄e
() const {

228  (
	`±r
(Ë=
w_îr‹_t
::
no_îr‹
 ) ?

229 
w_îr‹_t
::
no_îr‹
: 
	`_˛⁄e
();

230 
	}
}

231 
w_îr‹_t
* 
	$_˛⁄e
() const;

236 
‰õnd
 
o°ªam
& 
›î©‹
<<(

237 
o°ªam
& 
o
,

238 c⁄° 
w_rc_t
& 
obj
);

240 
¥iv©e
:

241 
muèbÀ
 
w_îr‹_t
* 
_îr
;

242 
boﬁ
 
do_check
;

243 
boﬁ
 
unchecked_is_Áèl
;

247 #i‡
W_DEBUG_RC


248 
±rdiff_t
 
	$gë_Êag
(Ë{  0x1; 
	}
}

250 
±rdiff_t
 
	$gë_Êag
(Ë{  0x0; 
	}
}

257 
	$£t_unchecked
() {

258 if(
_îr
 =
w_îr‹_t
::
no_îr‹
 || !
	`gë_Êag
())

260 uni⁄ {
w_îr‹_t
* 
e
; 
n
; } 
u
={
_îr
};

261 
u
.
n
 |
	`gë_Êag
();

262 
_îr
 = 
u
.
e
;

263 
	}
}

265 
	gpublic
:

267 
boﬁ
 
	$is_unchecked
() {

268 uni⁄ {
w_îr‹_t
* 
e
; 
n
; } 
u
={
_îr
};

269  
u
.
n
 & 
	`gë_Êag
();

270 
	}
}

271 
	g¥iv©e
:

272 
w_îr‹_t
* 
	$±r
(Ë{  
	`gë
(); 
	}
}

273 
w_îr‹_t
 c⁄°* 
	$±r
(Ëc⁄° {  
	`gë
(); 
	}
}

276 
w_îr‹_t
* 
	$gë
() const {

277 uni⁄ {
w_îr‹_t
* 
e
; 
n
; } 
u
={
_îr
};

278 if(
	`gë_Êag
()) {

279 
u
.
n
 &~
	`gë_Êag
();

280 
_îr
=
u
.
e
;

282  
_îr
;

283 
	}
}

285 
	g¥iv©e
:

289 
w_rc_t
 &
	$_assign
(
w_îr‹_t
* 
Ÿhî
) {

290 
	`w_as£π2
(
Ÿhî
);

291 
	`vîify
();

292 
w_îr‹_t
* 
îr
 = 
	`±r
();

293 if((c⁄° 
w_îr‹_t
 *)
îr
 !w_îr‹_t::
no_îr‹
)

294 
dñëe
 
îr
;

295 
_îr
 = 
Ÿhî
;

296  
	`ª£t
();

297 
	}
}

309 ˛as†
	cw_rc_i
 {

310 
w_îr‹_t
 c⁄° *
	m_√xt
;

311 
	mpublic
:

312 
	$w_rc_i
(
w_rc_t
 c⁄° &
x
Ë: 
	`_√xt
(x.
	$±r
()) {};

314 
w_ba£_t
::
öt4_t
 
	$√xt_î∫um
() {

315 
w_rc_t
::
îrcode_t
 
ãmp
 = 0;

316 if(
_√xt
) {

317 
ãmp
 = 
_√xt
->
îr_num
;

318 
_√xt
 = _√xt->
	`√xt
();

320  
ãmp
;

321 
	}
}

322 
w_îr‹_t
 c⁄° *
	$√xt
() {

323 
w_îr‹_t
 c⁄° *
ãmp
 = 
_√xt
;

324 if(
_√xt
) {

325 
_√xt
 = _√xt->
	`√xt
();

327  
ãmp
;

328 
	}
}

329 
	g¥iv©e
:

331 
w_rc_i
(c⁄° w_rc_ò&
x
);

345 
ölöe
 
NORET


346 
	gw_rc_t
::
	$w_rc_t
()

347 : 
	$_îr
(
w_îr‹_t
::
no_îr‹
)

349 
	}
}

359 
ölöe
 
NORET


360 
w_rc_t
::
	$w_rc_t
(
w_îr‹_t
* 
e
)

361 : 
	$_îr
(
e
)

363 
	`£t_unchecked
();

364 
	}
}

374 
ölöe
 
	gw_rc_t
&

375 
	gw_rc_t
::
	$ª£t
()

377 
	`£t_unchecked
();

378  *
this
;

379 
	}
}

389 
ölöe
 

390 
	gw_rc_t
::
	$vîify
()

394 #i‡
W_DEBUG_RC


395 i‡(
do_check
 && 
	`is_unchecked
())

396 
	`îr‹_nŸ_checked
();

398 #i‡
W_DEBUG_LEVEL
 > 2

399 
w_rc_i
 
	`ô
(*
this
);

400 
w_îr‹_t
 c⁄°* 
e
 = 
ô
.
	`√xt
()) {

401 (Ë
e
->
	`gë_m‹e_öfo_msg
();

404 
	}
}

414 
ölöe
 
w_îr‹_t
*

415 
	gw_rc_t
::
	$dñeg©e
()

417 
w_îr‹_t
* 
t
 = 
	`±r
();

418 
_îr
 = 
w_îr‹_t
::
no_îr‹
;

419  
t
;

420 
	}
}

429 
ölöe
 
NORET


430 
	gw_rc_t
::~
	$w_rc_t
()

432 
	`_assign
(
w_îr‹_t
::
no_îr‹
);

433 
	}
}

443 
ölöe
 
boﬁ


444 
	gw_rc_t
::
	$is_îr‹
() const

447  
	`±r
(Ë!
w_îr‹_t
::
no_îr‹
;

448 
	}
}

458 
ölöe
 
	gw_rc_t
::
îrcode_t


459 
w_rc_t
::
	$îr_num
() const

461  
	`±r
()->
îr_num
;

462 
	}
}

472 
ölöe
 
	gw_ba£_t
::
öt4_t


473 
w_rc_t
::
	$sys_îr_num
() const

475  
	`±r
()->
sys_îr_num
;

476 
	}
}

506 
	#RC
(
e
Ë
	`w_rc_t
(
__FILE__
, 
__LINE__
,É)

	)

517 
	#RC2
(
e
,
s
) \

518 
	`w_rc_t
(
__FILE__
, 
__LINE__
, 
e
, 
s
)

	)

527 
	#RCOK
 
w_rc_t
::
rc_ok


	)

535 
	#MAKERC
(
c⁄dôi⁄
,
e
Ë((c⁄dôi⁄Ë? 
	`RC
”Ë: 
RCOK
)

	)

554 #ifde‡
__GNUC__


560 
	#W_EXPECT
(
rc
Ë
	`__buûtö_ex≥˘
‘c,1)

	)

566 
	#W_EXPECT_NOT
(
rc
Ë
	`__buûtö_ex≥˘
‘c,0)

	)

573 
	#W_EXPECT
(
rc
Ë
	)
rc

579 
	#W_EXPECT_NOT
(
rc
Ë
	)
rc

591 
	#RC_AUGMENT
(
rc
) \

592 
rc
.
	`add_åa˚_öfo
(
__FILE__
, 
__LINE__
)

	)

605 
	#RC_PUSH
(
rc
, 
e
) \

606 
rc
.
	`push
(
__FILE__
, 
__LINE__
, 
e
)

	)

618 
	#RC_APPEND_MSG
(
rc
, 
m
) \

620 
w_o°r°ªam
 
os
; \

621 
os
 
m
 << 
íds
; \

622 
rc
->
	`≠≥nd_m‹e_öfo_msg
(
os
.
	`c_°r
()); \

623 } 0)

	)

628 
	#W_RETURN_RC_MSG
(
e
, 
m
) \

630 
w_rc_t
 
__e
 = 
	`RC
(
e
); \

631 
	`RC_APPEND_MSG
(
__e
, 
m
); \

632  
__e
; \

633 } 0)

	)

645 
	#W_EDO
(
x
) \

647 
w_rc_t
::
îrcode_t
 
	`__e
(
x
); \

648 i‡(
	`W_EXPECT_NOT
(
__e
)Ë 
	`RC
(__e); \

649 } 0)

	)

660 
	#W_DO
(
x
) \

662 
w_rc_t
 
	`__e
(
x
); \

663 i‡(
	`W_EXPECT_NOT
(
__e
.
	`is_îr‹
())Ë 
	`RC_AUGMENT
(__e); \

664 } 0)

	)

672 
	#W_DO_MSG
(
x
, 
m
) \

674 
w_rc_t
 
	`__e
(
x
); \

675 i‡(
	`W_EXPECT_NOT
(
__e
.
	`is_îr‹
())) { \

676 
	`RC_AUGMENT
(
__e
); \

677 
	`RC_APPEND_MSG
(
__e
, 
m
); \

678  
__e
; \

680 } 0)

	)

702 
	#W_DO_GOTO
(
rc
 , 
x
) \

704 (
rc
Ë(
x
); \

705 i‡(
	`W_EXPECT_NOT
(
rc
.
	`is_îr‹
())) { \

706 
	`RC_AUGMENT
(
rc
); \

707 
Áûuª
; \

709 } 0)

	)

717 
	#W_DO_PUSH
(
x
, 
e
) \

719 
w_rc_t
 
	`__e
(
x
); \

720 i‡(
	`W_EXPECT_NOT
(
__e
.
	`is_îr‹
())Ë{  
	`RC_PUSH
(__e, 
e
); } \

721 } 0)

	)

730 
	#W_DO_PUSH_MSG
(
x
, 
e
, 
m
) \

732 
w_rc_t
 
	`__e
(
x
); \

733 i‡(
	`W_EXPECT_NOT
(
__e
.
	`is_îr‹
())) { \

734 
	`RC_PUSH
(
__e
, 
e
); \

735 
	`RC_APPEND_MSG
(
__e
, 
m
); \

736  
__e
; \

738 } 0)

	)

759 
	#W_COERCE
(
x
) \

761 
w_rc_t
 
	`__e
(
x
); \

762 i‡(
	`W_EXPECT_NOT
(
__e
.
	`is_îr‹
())) { \

763 
	`RC_AUGMENT
(
__e
); \

764 
__e
.
	`Áèl
(); \

766 } 0)

	)

771 
	#W_COERCE_MSG
(
x
, 
m
) \

773 
w_rc_t
 
	`__em
(
x
); \

774 i‡(
	`W_EXPECT_NOT
(
__em
.
	`is_îr‹
())) { \

775 
	`RC_APPEND_MSG
(
__em
, 
m
); \

776 
	`W_COERCE
(
__em
); \

778 } 0)

	)

783 
	#W_FATAL
(
e
Ë
	`W_COERCE
(
	`RC
”))

	)

788 
	#W_FATAL_RC
(
rc
Ë
	`W_COERCE
‘c)

	)

793 
	#W_FATAL_MSG
(
e
, 
m
Ë
	`W_COERCE_MSG
(
	`RC
”), m)

	)

798 
	#W_IGNORE
(
x
Ë((Ëx.
	`is_îr‹
())

	)

	@src/fc/w_rusage.h

30 #i‚de‡
W_RUSAGE_H


31 
	#W_RUSAGE_H


	)

33 
	~"w_deföes.h
"

37 
	~<sys/time.h
>

39 #ifde‡
Löux


42 
	~<sys/ªsour˚.h
>

43 #ifde‡
Löux


62 #i‡!
deföed
(
_SYS_RESOURCE_H
Ë&& !deföed(
_SYS_RESOURCE_H_
Ë&& !deföed(
_SYS_RESOURCE_INCLUDED
)

63 
	#_SYS_RESOURCE_H


	)

69 
	#PRIO_PROCESS
 0

	)

70 
	#PRIO_PGRP
 1

	)

71 
	#PRIO_USER
 2

	)

78 
	#RLIMIT_CPU
 0

	)

79 
	#RLIMIT_FSIZE
 1

	)

80 
	#RLIMIT_DATA
 2

	)

81 
	#RLIMIT_STACK
 3

	)

82 
	#RLIMIT_CORE
 4

	)

83 
	#RLIMIT_NOFILE
 5

	)

84 
	#RLIMIT_VMEM
 6

	)

85 
	#RLIMIT_AS
 
RLIMIT_VMEM


	)

87 
	#RLIM_NLIMITS
 7

	)

89 
	#RLIM_INFINITY
 0x7fffffff

	)

91 
	tæim_t
;

93 
	sæimô
 {

94 
æim_t
 
æim_cur
;

95 
æim_t
 
æim_max
;

98 
	#RUSAGE_SELF
 0

	)

99 
	#RUSAGE_CHILDREN
 -1

	)

101 
	srußge
 {

102 
timevÆ
 
ru_utime
;

103 
timevÆ
 
ru_°ime
;

104 
ru_maxrss
;

105 
ru_ixrss
;

106 
ru_idrss
;

107 
ru_i§ss
;

108 
ru_möÊt
;

109 
ru_majÊt
;

110 
ru_nsw≠
;

111 
ru_öblock
;

112 
ru_oublock
;

113 
ru_msg¢d
;

114 
ru_msgrcv
;

115 
ru_nsig«ls
;

116 
ru_nvcsw
;

117 
ru_nivcsw
;

121 #i‚de‡
Löux


122 #i‚de‡
gërußge


123 "C" 
gërußge
(
x
 , 
rußge
* 
u£
);

	@src/fc/w_stat.h

30 #i‚de‡
W_STAT_H


31 
	#W_STAT_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 #i‚de‡
W_BASE_H


42 
	~<w_ba£.h
>

44 #i‚de‡
W_RC_H


45 
	~<w_rc.h
>

48 
˛ass
 
	gw_°©i°ics_t
;

49 
˛ass
 
	gw_°©_moduÀ_t
;

142 ˛as†
	cw_°©_t


144 
‰õnd
 
˛ass
 
	mw_°©i°ics_t
;

145 
‰õnd
 
˛ass
 
	mw_°©_moduÀ_t
;

147 
‰õnd
 
	mo°ªam
 & 
	m›î©‹
<<(o°ªam &
	mout
, c⁄° 
	mw_°©i°ics_t
 &
	ms
);

149 
	m¥Ÿe˘ed
:

151 
w_ba£_t
::
ba£_°©_t
 
i
;

152 
	mw_ba£_t
::
ba£_Êﬂt_t
 
f
;

153 }
	g_u
;

155 
	gpublic
:

157 
	$w_°©_t
(Ë{ 
_u
.
i
=0; 
	}
}

160 
	$w_°©_t
(
i
Ë{ 
_u
.i=i; 
	}
}

161 
›î©‹
 (Ëc⁄° {  
_u
.
i
; 
	}
}

164 
	$w_°©_t
(
w_ba£_t
::
ba£_Êﬂt_t
 
i
Ë{ 
_u
.
f
=i; 
	}
}

167 
›î©‹
 
	gw_ba£_t
::
	$ba£_Êﬂt_t
(Ëc⁄° {  
_u
.
f
; 
	}
}

169 
‰õnd
 
boﬁ
 
	g›î©‹
==(c⁄° 
w_°©_t
 &, c⁄° 
	gw_°©_t
 &);

170 
‰õnd
 
boﬁ
 
	g›î©‹
!=(c⁄° 
w_°©_t
 &, c⁄° 
	gw_°©_t
 &);

	@src/fc/w_stream.h

30 #i‚de‡
W_STREAM_H


31 
	#W_STREAM_H


	)

33 
	~"w_deföes.h
"

37 
	~<f°ªam
>

38 
	~<iom™ù
>

39 
	~<io°ªam
>

40 
	~<w_°r°ªam.h
>

	@src/fc/w_strstream.h

53 #i‚de‡
W_STRSTREAM_H


54 
	#W_STRSTREAM_H


	)

56 
	~"w_deföes.h
"

60 
	~<w_w‹k¨ound.h
>

89 #ifde‡
W_USE_COMPAT_STRSTREAM


90 
	~"w_com∑t_°r°ªam.h
"

92 
	~<°r°ªam
>

94 
	~<c°rög
>

96 #i‡
deföed
(
W_USE_COMPAT_STRSTREAM
)

99 
	#i°r°ªam
 
sh‹e_com∑t
::
i°r°ªam


	)

100 
	#o°r°ªam
 
sh‹e_com∑t
::
o°r°ªam


	)

101 
	#°r°ªambuf
 
sh‹e_com∑t
::
°r°ªambuf


	)

106 ˛as†
	cw_i°r°ªam
 : 
public
 
i°r°ªam
 {

107 
public
:

109 
	$w_i°r°ªam
(c⁄° *
s
)

110 : 
	`i°r°ªam
(
VCPP_BUG_1
 
s
, 
	$°æí
(
s
))

115 
	$w_i°r°ªam
(c⁄° *
s
, 
size_t
 
l
)

116 : 
	$i°r°ªam
(
VCPP_BUG_1
 
s
, 
l
)

118 
	}
}

124 ˛as†
	cw_o°r°ªam
 : 
public
 
o°r°ªam
 {

126 
public
:

128 
	$w_o°r°ªam
()

129 : 
	$o°r°ªam
()

134 
	$w_o°r°ªam
(*
s
, 
size_t
 
l
)

135 : 
	$o°r°ªam
(
s
, 
l
)

137 
	}
}

139 ~
	$w_o°r°ªam
()

141 
	}
}

144 c⁄° *
	$c_°r
()

146 c⁄° *
s
 = 
	`°r
();

147 
l
 = 
	`pcou¡
();

148 
œ°
 = (
l
 == 0 ? 0 :Ü-1);

151 i‡(
s
[
œ°
] != '\0') {

152 *
this
 << 
íds
;

155 
s
 = 
	`°r
();

156 
l2
 = 
	`pcou¡
();

157 
œ°
 = (
l2
 == 0 ? 0 :Ü2-1);

162 i‡(
l
 =
l2
 || 
s
[
œ°
] != '\0')

163 ((*)
s
)[
œ°
] = '\0';

165  
s
;

166 
	}
}

170 c⁄° *
	$d©a
()

172  
	`°r
();

173 
	}
}

177 c⁄° *
	$√w_c_°r
()

180 c⁄° *
s
 = 
	`c_°r
();

181 *
t
 = 
√w
 [
	`°æí
(
s
) + 1];

182 i‡(
t
)

183 
	`°r˝y
(
t
, 
s
);

184  
t
;

185 
	}
}

190 #i‡
deföed
(
__GNUG__
)

192 #i‡
W_GCC_THIS_VER
 < 
W_GCC_VER
(3,0)

193 
	#W_STRSTREAM_NEED_SETB


	)

202 ˛as†
	cw_o°r°ªam_buf
 : 
public
 
w_o°r°ªam
 {

204 íum { 
deÁu…_buf_size
 = 128 };

206 *
	g_buf
;

207 
size_t
 
	g_buf_size
;

209 
	g_deÁu…_buf
[
deÁu…_buf_size
];

212 ˛as†
	cw_o°r°ªambuf
 : 
public
 
°r°ªambuf
 {

213 
public
:

214 
public_£tbuf
(*
°¨t
, 
size_t
 
Àn
)

217 
£tg
(
°¨t
, start, start);

220 
£ç
(
°¨t
, sèπ + 
Àn
);

222 #ifde‡
W_STRSTREAM_NEED_SETB


224 
£tb
(
°¨t
, sèπ+
Àn
);

225 #unde‡
W_STRSTREAM_NEED_SETB


230 
	gpublic
:

231 
	$w_o°r°ªam_buf
(
size_t
 
Àn
)

232 : 
	`w_o°r°ªam
(
_deÁu…_buf
, 
deÁu…_buf_size
),

233 
	`_buf
(
_deÁu…_buf
),

234 
	`_buf_size
(
Àn
 <
deÁu…_buf_size
 ?Üí : (
size_t
)default_buf_size)

236 i‡(
Àn
 > 
_buf_size
)

237 
_buf
 = 
√w
 [
Àn
];

239 i‡(
Àn
 !
_buf_size
) {

240 
_buf_size
 = 
Àn
;

241 ((
w_o°r°ªambuf
*Ë
	`rdbuf
())->
	`public_£tbuf
(
_buf
, 
_buf_size
);

243 
	}
}

245 ~
	$w_o°r°ªam_buf
()

247 i‡(
_buf
 !
_deÁu…_buf
)

248 
dñëe
 [] 
_buf
;

249 
_buf
 = 0;

250 
_buf_size
 = 0;

251 
	}
}

254 #ifde‡
W_USE_COMPAT_STRSTREAM


255 #unde‡
i°r°ªam


256 #unde‡
o°r°ªam


257 #unde‡
°r°ªambuf


	@src/fc/w_temp_alloc.cpp

24 
	~"w_ãmp_Æloc.h
"

26 
	~<±hªad.h
>

27 
	~<c°dio
>

28 
	~<ˇs£π
>

30 #i‡!
HAVE_DECL_MAP_ANONYMOUS


31 #i‡
HAVE_DECL_MAP_ANON


32 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

34 #îr‹ 
I
 
√ed
 
a
 
way
 
to
 
¸óã
 
™⁄ymous
 
¥iv©e
 
m≠pögs
 
wôh
 
mm≠


38 #i‚de‡
SQL_POOL_MMAP_LIMIT


39 
	#SQL_POOL_MMAP_LIMIT
 (10*1024*1024)

	)

42 
	#SQL_POOL_DEBUG


	)

44 #ifde‡
SQL_POOL_DEBUG


45 
	#SPLOG
(
fmt
, ...Ë
	`Ârötf
(
°dîr
, fmt, ##
__VA_ARGS__
)

	)

47 
	#SPLOG
(
fmt
, ...)

	)

50 
	g£¡öñ_poﬁ
 : 
w_ãmp_Æloc
::
poﬁ
 {

51 
vútuÆ
 
w_ãmp_Æloc
::
±r
 
Æloc
(
size_t
 
byãs
);

54 
£¡öñ_poﬁ
 
	g_£¡öñ
;

55 
__thªad
 
	gw_ãmp_Æloc
::
poﬁ
 *
çoﬁ
 = &
_£¡öñ
;

57 
±hªad_key_t
 
	gpoﬁ_key
;

58 
±hªad_⁄˚_t
 
	gpoﬁ_öô_⁄˚
 = 
PTHREAD_ONCE_INIT
;

61 
	gw_ãmp_Æloc
::
±r
 
w_ãmp_Æloc
::
	$Æloc
(
size_t
 
sz
Ë{  
çoﬁ
->
	`Æloc
(sz); 
	}
}

63 
	gw_ãmp_Æloc
::
m¨k
::
	$m¨k
()

64 : 
	`íd
(
çoﬁ
->
íd
)

66 
	}
}

68 
w_ãmp_Æloc
::
m¨k
::~
	$m¨k
() {

69 i‡(
çoﬁ
->
íd
 >Åpoﬁ->
hiw©î
)

70 
çoﬁ
->
hiw©î
 =Åpoﬁ->
íd
;

72 
çoﬁ
->
íd
 =Énd;

73 
	}
}

75 
poﬁ_föi
(
w_ãmp_Æloc
::
poﬁ
 *
p
);

79 
w_ãmp_Æloc_±hªad_exô
(* 
¨g
 
__©åibuã__
((
unu£d
)) ) {

80 
as£π
 (
¨g
 =&
çoﬁ
);

81 
poﬁ_föi
(
çoﬁ
);

85 
w_ãmp_Æloc_©exô
() {

86 
poﬁ_föi
(
çoﬁ
);

89 
w_ãmp_Æloc_öô
() {

90 i‡(
±hªad_key_¸óã
(&
poﬁ_key
, &
w_ãmp_Æloc_±hªad_exô
)) {

91 
Ârötf
(
°dîr
,

95 
©exô
(&
w_ãmp_Æloc_©exô
);

99 
w_ãmp_Æloc
::
±r
 
£¡öñ_poﬁ
::
	$Æloc
(
size_t
 
sz
) {

101 i‡(
	`±hªad_⁄˚
(&
poﬁ_öô_⁄˚
, &
w_ãmp_Æloc_öô
))

102 
throw
 
°d
::
	`bad_Æloc
();

104 
çoﬁ
 = 
√w
 
w_ãmp_Æloc
::
	`dy«ºay_poﬁ
(
SQL_POOL_MMAP_LIMIT
);

107 
	`±hªad_£t•ecific
(
poﬁ_key
, 
çoﬁ
);

108 i‡(
	`±hªad_gë•ecific
(
poﬁ_key
Ë!
çoﬁ
)

109 
	`Ârötf
(
°dîr
,

112 (
uöçå_t
Ë
	`±hªad_£lf
());

114  
çoﬁ
->
	`Æloc
(
sz
);

115 
	}
}

117 
	$poﬁ_föi
(
w_ãmp_Æloc
::
poﬁ
 *
p
) {

118 
	`as£π
 (
p
 =
çoﬁ
);

119 
	`as£π
 (
p
 !&
_£¡öñ
);

121 i‡(
p
->
íd
 >Ö->
hiw©î
)

122 
p
->
hiw©î
 =Ö->
íd
;

124 
	`SPLOG
("Thread %zd w_temp_allocÖeakedát %zd bytes\n",

125 (
size_t
)
	`±hªad_£lf
(), 
p
->
hiw©î
);

127 
dñëe
 
p
;

128 
	}
}

130 
w_ãmp_Æloc
::
±r
 w_ãmp_Æloc::
fixed_poﬁ
::
	$Æloc
(
size_t
 
sz
) {

131 
size_t
 
nbyãs
 = 
	`Æign
(
sz
);

132 i‡(
bufsz
 - 
íd
 < 
nbyãs
)

133 
throw
 
°d
::
	`bad_Æloc
();

135 
uöt32_t
 
off£t
 = 
íd
;

136 
íd
 +
nbyãs
;

137 
±r
 
rvÆ
 = {
sz
, 
buf
 + 
off£t
};

138  
rvÆ
;

139 
	}
}

141 
w_ãmp_Æloc
::
±r
 w_ãmp_Æloc::
dy«ºay_poﬁ
::
	$Æloc
(
size_t
 
sz
) {

142 
size_t
 
nbyãs
 = 
	`Æign
(
sz
);

143 i‡(
d©a
.
	`size
(Ë- 
íd
 < 
nbyãs
 
™d
 d©a.
	`ísuª_ˇ∑côy
(end+nbytes))

144 
throw
 
°d
::
	`bad_Æloc
();

146 
uöt32_t
 
off£t
 = 
íd
;

147 
íd
 +
nbyãs
;

148 
±r
 
rvÆ
 = {
sz
, 
d©a
 + 
off£t
};

149  
rvÆ
;

150 
	}
}

152 
w_ãmp_Æloc
::
poﬁ_sw≠
::
	$poﬁ_sw≠
(
w_ãmp_Æloc
::
poﬁ
 *
p
)

153 : 
	$_ﬁd_poﬁ
(
p
)

155 
°d
::
	`sw≠
(
çoﬁ
, 
_ﬁd_poﬁ
);

156 
	}
}

158 
w_ãmp_Æloc
::
poﬁ_sw≠
::~
	$poﬁ_sw≠
() {

159 
°d
::
	`sw≠
(
çoﬁ
, 
_ﬁd_poﬁ
);

160 
	}
}

	@src/fc/w_temp_alloc.h

24 #i‚de‡
__W_TEMP_ALLOC_H


25 
	#__W_TEMP_ALLOC_H


	)

27 
	~"w_deföes.h
"

28 
	~"dy«ºay.h
"

30 
	~<Æg‹ôhm
>

31 
	~<c°rög
>

58 
	sw_ãmp_Æloc
 {

59 
	sm¨k
 {

60 
size_t
 
	míd
;

61 
m¨k
();

62 ~
m¨k
();

71 
	s±r
 {

72 
size_t
 
	m_bufsz
;

73 *
	m_buf
;

75 
	s_deˇy
 {

76 *
	mbuf
;

77 
	mãm∂©e
 <
ty≥«me
 
	mT
>

78 
›î©‹
 
	mT
*(Ëc⁄° {  (T*Ë
	mbuf
; }

81 
	s_deˇy_c⁄°
 {

82 c⁄° *
	mbuf
;

83 
	mãm∂©e
 <
ty≥«me
 
	mT
>

84 
›î©‹
 
T
 c⁄°*(Ëc⁄° {  (T c⁄°*Ë
	mbuf
; }

87 
boﬁ
 
is_vÆid
(Ëc⁄° {  
	m_buf
; }

88 
size_t
 
size
(Ëc⁄° {  
	m_bufsz
; }

90 
_deˇy
 
deˇy
() {

91 
_deˇy
 
	mªsu…
 = { 
_buf
 };

92  
	mªsu…
;

94 
_deˇy_c⁄°
 
deˇy
() const {

95 
_deˇy_c⁄°
 
	mªsu…
 = { 
_buf
 };

96  
	mªsu…
;

100 
ªsize
(
size_t
 
√wsz
) {

101 i‡(
	m√wsz
 > 
	m_bufsz
)

102 *
	mthis
 = 
Æloc
(
√wsz
);

104 
	m_bufsz
 = 
√wsz
;

107 
˛ór
() {

108 
	m_bufsz
 = 0;

109 
	m_buf
 = 0;

114 
±r
 
Æloc
(
size_t
 
sz
);

125 
ex∂icô
 
w_ãmp_Æloc
(
size_t
 
sz
)

126 : 
_±r
(
Æloc
(
sz
))

130 
›î©‹
 
±r
(Ë{  
_±r
; }

132 
	mãm∂©e
 <
ty≥«me
 
	mT
>

133 
›î©‹
 
	mT
*(Ë{  
	m_±r
.
deˇy
(); }

139 
	mbuf
 : 
±r
 {

140 
ex∂icô
 
buf
(
size_t
 
sz
=0)

141 : 
±r
(
Æloc
(
sz
))

148 
buf
(
size_t
 
sz
, *
±r
) {

149 
	m_bufsz
 = 
sz
;

150 
	m_buf
 = 
±r
;

154 
buf
(bu‡c⁄° &
v
)

155 : 
±r
(
Æloc
(
v
.
_bufsz
))

157 
mem˝y
(
_buf
, 
v
._buf, v.
_bufsz
);

161 
	mbuf
 &
	m›î©‹
=(
buf
 
v
);

163 ~
buf
(Ë{ 
˛ór
(); }

167 
	mãm∂©e
 <
ty≥«me
 
	mT
>

168 
	sÆloˇt‹
 {

169 
T
 
	tvÆue_ty≥
;

171 
T
 *
	tpoöãr
;

172 
T
 c⁄° *
	tc⁄°_poöãr
;

174 
	mT
 &
	tª„ªn˚
;

175 
T
 c⁄° &
	tc⁄°_ª„ªn˚
;

177 
size_t
 
	tsize_ty≥
;

178 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

180 
Æloˇt‹
() { }

181 
Æloˇt‹
(allocator const &) { }

182 
	mãm∂©e
 <
ty≥«me
 
	mU
>

183 
Æloˇt‹
◊Œoˇt‹<
U
> const &) { }

185 
T
* 
Æloˇã
(
size_t
 
n
, * =0) {

186  (
T
*Ë
Æloc
(
n
*(
vÆue_ty≥
)).
deˇy
();

189 
dóŒoˇã
(
T
*, 
size_t
) { }

191 
size_ty≥
 
max_size
(Ëc⁄° {  
size_t
(-8); }

193 
	mãm∂©e
 <
˛ass
 
	mU
> 
	sªböd
 { 
	mÆloˇt‹
<
	tU
> 
	tŸhî
; };

195 #ifde‡
USE_CXX11


196 
	mãm∂©e
 <
	mty≥«me
... 
	mArgs
>

197 
c⁄°ru˘
(
poöãr
 
p
, 
Args
... 
¨gs
) {

198 
√w
 (
p
Ë
vÆue_ty≥
(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...);

202 
c⁄°ru˘
(
poöãr
 
p
, 
c⁄°_ª„ªn˚
 
v
) {

203 
√w
 (
p
Ë
vÆue_ty≥
(
v
);

206 
de°roy
(
poöãr
 
p
) {

207 
	mp
->~
vÆue_ty≥
();

213 
	spoﬁ
 {

214 
size_t
 
	míd
;

215 
size_t
 
	mhiw©î
;

217 
poﬁ
(Ë: 
íd
(0), 
hiw©î
(0) { }

219 
vútuÆ
 
±r
 
Æloc
(
size_t
 
sz
)=0;

220 
	mvútuÆ
 ~
poﬁ
() { }

223 
	mfixed_poﬁ
 : 
poﬁ
 {

224 *
buf
;

225 
size_t
 
	mbufsz
;

226 
fixed_poﬁ
(*
b
, 
size_t
 
bsz
)

227 : 
buf
(
b
), 
bufsz
(
bsz
)

230 
vútuÆ
 
±r
 
Æloc
(
size_t
 
nbyãs
);

233 
	mdy«ºay_poﬁ
 : 
poﬁ
 {

234 
dy«ºay
 
d©a
;

235 
dy«ºay_poﬁ
(
size_t
 
max_size
) {

236 
	md©a
.
öô
(
max_size
, 
ALIGNON
);

238 
vútuÆ
 
±r
 
Æloc
(
size_t
 
nbyãs
);

239 
	mvútuÆ
 ~
dy«ºay_poﬁ
() {

240 
	md©a
.
föi
();

249 
	spoﬁ_sw≠
 {

250 
ex∂icô
 
poﬁ_sw≠
(
poﬁ
 *
ª∂a˚mít
);

251 ~
poﬁ_sw≠
();

252 
	m¥iv©e
:

253 
poﬁ
 *
_ﬁd_poﬁ
;

256 
	sfixed_poﬁ_sw≠
 {

257 
fixed_poﬁ
 
	m_poﬁ
;

258 
poﬁ_sw≠
 
	m_ps
;

259 
ex∂icô
 
fixed_poﬁ_sw≠
(*
buf
, 
size_t
 
bufsz
)

260 : 
_poﬁ
(
buf
, 
bufsz
), 
_ps
(&_pool)

265 
±r
 
	m_±r
;

268 
	s_w_ãmp_Æloc_√w
 {

269 } 
	gw_ãmp_Æloc_√w
;

271 
ölöe


272 *
›î©‹
 
	$√w
(
size_t
 
n
, 
_w_ãmp_Æloc_√w
 &) {

273  
	`w_ãmp_Æloc
(
n
);

274 
	}
}

277 
ölöe


278 
	$sw≠
(
w_ãmp_Æloc
::
buf
 &
a
, w_ãmp_Æloc::bu‡&
b
) {

279 
usög
 
°d
::
sw≠
;

280 
	`sw≠
(
a
.
_bufsz
, 
b
._bufsz);

281 
	`sw≠
(
a
.
_buf
, 
b
._buf);

282 
	}
}

284 
ölöe


285 
	gw_ãmp_Æloc
::
buf
 &
w_ãmp_Æloc
::buf::
›î©‹
=(w_ãmp_Æloc::bu‡
v
) {

286 
usög
 
°d
::
sw≠
;

287 
sw≠
(*
this
, 
v
);

288  *
	gthis
;

293 
	gãm∂©e
 <
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

294 
boﬁ
 
	g›î©‹
==(
w_ãmp_Æloc
::
Æloˇt‹
<
A
> c⁄° &, 
	gw_ãmp_Æloc
::Æloˇt‹<
B
> const &) {

295  
åue
;

298 
	gãm∂©e
 <
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

299 
boﬁ
 
	g›î©‹
!=(
w_ãmp_Æloc
::
Æloˇt‹
<
A
> c⁄° &, 
	gw_ãmp_Æloc
::Æloˇt‹<
B
> const &) {

300  
Ál£
;

	@src/fc/w_workaround.h

53 #i‚de‡
W_WORKAROUND_H


54 
	#W_WORKAROUND_H


	)

56 
	~"w_deföes.h
"

65 #ifde‡
__GNUC__


72 
	#W_GCC_VER
(
maj‹
,
mö‹
Ë(((maj‹Ë<< 16Ë+ (mö‹))

	)

74 #i‚de‡
__GNUC_MINOR__


75 
	#W_GCC_THIS_VER
 
	`W_GCC_VER
(
__GNUC__
,0)

	)

77 
	#W_GCC_THIS_VER
 
	`W_GCC_VER
(
__GNUC__
,
__GNUC_MINOR__
)

	)

82 
	#W_GCC_PREREQ
(
maj‹
,
mö‹
) \

83 (
W_GCC_THIS_VER
 >
	`W_GCC_VER
(
maj‹
,
mö‹
))

	)

85 #i‡ 
W_GCC_THIS_VER
 < 
W_GCC_VER
(2,5)

87 #îr‹ 
This
 
so·w¨e
 
ªquúes
 
gcc
 2.5.x 
‹
 
a
 
œãr
 
ªÀa£
.

88 #îr‹ 
Gcc
 2.6.0 
is
 
¥e„ºed
.

92 #i‡
W_GCC_THIS_VER
 < 
W_GCC_VER
(2,6)

97 
	#GNUG_BUG_2
 1

	)

102 
	#GNUG_BUG_3
 1

	)

110 
	#GNUG_BUG_7
 1

	)

116 
	#GNUG_BUG_8
 1

	)

132 
	#GNUG_BUG_12
(
¨g
Ë
	)
arg

133 #i‡
W_GCC_THIS_VER
 > 
W_GCC_VER
(2,5)

134 #unde‡
GNUG_BUG_12


135 
	#GNUG_BUG_12
(
¨g
Ë◊rg)

	)

138 #i‡
W_GCC_THIS_VER
 > 
W_GCC_VER
(2,5)

144 
	#GNUG_BUG_13
 1

	)

149 
	#GNUG_BUG_14
 1

	)

152 #i‡
W_GCC_THIS_VER
 > 
W_GCC_VER
(2,6)

155 
	#GNUG_BUG_15
 1

	)

164 
	#GNUG_BUG_16


	)

171 #i‡
W_GCC_THIS_VER
 >
W_GCC_VER
(2,90)

179 #i‡
W_GCC_THIS_VER
 < 
W_GCC_VER
(2,8)

181 
	#BIND_FRIEND_OPERATOR_PART_1
(
TYP
,
L
,
TMPLa
,
TMPLb
Ë

	)

182 
	#BIND_FRIEND_OPERATOR_PART_1B
(
TYP1
,
TYP3
,
TYP2
,
TMPLa
,
TMPLc
,
TMPLb
Ë

	)

183 
	#BIND_FRIEND_OPERATOR_PART_2
(
TYP
Ë

	)

184 
	#BIND_FRIEND_OPERATOR_PART_2B
(
TYP1
,
TYP2
Ë

	)

188 
	#BIND_FRIEND_OPERATOR_PART_1
(
TYP
,
L
,
TMPLa
,
TMPLb
) \

189 
ãm∂©e
 <
˛ass
 
TYP
, cœs†
L
> \

190 
o°ªam
 & 
›î©‹
<<(o°ªam&
o
, c⁄° 
TMPLa
,
TMPLb
& 
l
);

	)

192 
	#BIND_FRIEND_OPERATOR_PART_1B
(
TYP1
,
TYP3
, 
TYP2
,
TMPLa
,
TMPLc
,
TMPLb
) \

193 
ãm∂©e
 <
˛ass
 
TYP1
, cœs†
TYP3
, cœs†
TYP2
> \

194 
o°ªam
 & 
›î©‹
<<(o°ªam&
o
, c⁄° 
TMPLa
,
TMPLc
,
TMPLb
& 
l
);

	)

196 
	#BIND_FRIEND_OPERATOR_PART_2
(
TYP
, 
L
)\

197 <
TYP
, 
L
>

	)

199 
	#BIND_FRIEND_OPERATOR_PART_2B
(
TYP1
,
L
,
TYP2
)\

200 <
TYP1
, 
L
, 
TYP2
>

	)

216 #i‡
W_GCC_THIS_VER
 >
W_GCC_VER
(3,0)

217 
	#w_off£tof
(
t
,
f
) \

218 ((
size_t
)((*)&(*(
t
*)—)).
f
 - (*)&(*—*)—))))

	)

223 #ifde‡
__SUNPRO_CC


224 
	#BIND_FRIEND_OPERATOR_PART_1
(
TYP
,
L
,
TMPLa
,
TMPLb
) \

225 
ãm∂©e
 <
˛ass
 
TYP
, cœs†
L
> \

226 
o°ªam
 & 
›î©‹
<<(o°ªam&
o
, c⁄° 
TMPLa
,
TMPLb
& 
l
);

	)

228 
	#BIND_FRIEND_OPERATOR_PART_1B
(
TYP1
,
TYP3
, 
TYP2
,
TMPLa
,
TMPLc
,
TMPLb
) \

229 
ãm∂©e
 <
˛ass
 
TYP1
, cœs†
TYP3
, cœs†
TYP2
> \

230 
o°ªam
 & 
›î©‹
<<(o°ªam&
o
, c⁄° 
TMPLa
,
TMPLc
,
TMPLb
& 
l
);

	)

232 
	#BIND_FRIEND_OPERATOR_PART_2
(
TYP
,
L
)\

233 <
TYP
,
L
>

	)

235 
	#BIND_FRIEND_OPERATOR_PART_2B
(
TYP1
,
L
,
TYP2
)\

236 <
TYP1
,
L
,
TYP2
>

	)

244 #ifde‡
__GNUC__


245 
	#INT64_LITERAL_BUG
(
x
Ëx ## 
LL


	)

247 
	#INT64_LITERAL_BUG
(
x
Ë
	)
x

256 #i‡
deföed
(
__GNUC__
Ë&& __GNUC__ =2 && 
__GNUC_MINOR__
 > 90

257 
	#W_NEWER_STL


	)

270 
	#C_STRING_BUG
 (*)

	)

282 
	#PERL_CVBUG
 (*)

	)

287 
	#PERL_UNUSED_VAR
(
x
Ë()
	)
x

295 #i‡
deföed
(
S«ke
Ë&& !deföed(
__GNUC__
)

300 
	#HP_CC_BUG_1
 1

	)

305 
	#HP_CC_BUG_2
 1

	)

311 
	#HP_CC_BUG_3
 1

	)

325 #i‡
deföed
(
__GNUG__
)

326 #i‡
W_GCC_THIS_VER
 < 
W_GCC_VER
(3,0)

327 
	#FC_IOSTREAM_FORM_METHOD


	)

329 
	#FC_NEED_UNBOUND_FORM


	)

331 #ñi‡
deföed
(
__SUNPRO_CC
)

332 
	#FC_NEED_UNBOUND_FORM


	)

335 #ifde‡
FC_IOSTREAM_FORM_METHOD


336 
	#W_FORM
(
°ªam
Ë°ªam . 
f‹m


	)

338 
	#W_FORM
(
°ªam
Ë°ªam << 
f‹m


	)

342 #ifde‡
FC_NEED_UNBOUND_FORM


344 c⁄° *
f‹m
(const *, ...);

347 
	#W_FORM2
(
°ªam
,
¨gs
Ë
	`W_FORM
(°ªamË
	)
args

357 #i‚de‡
VCPP_BUG_1


358 
	#VCPP_BUG_1


	)

365 #i‚de‡
off£tof


366 
	~<c°ddef
>

368 #i‚de‡
off£tof


369 
	#off£tof
(
ty≥
,
membî
Ë((
size_t
)((&—y≥ *)0)->membî))

	)

372 #i‚de‡
w_off£tof


382 
	#w_off£tof
(
˛ass
,
membî
Ë
	`off£tof
(˛ass,membî)

	)

	@src/internal.h

	@src/mainpage.h

	@src/references.h

	@src/sm/app_support.h

30 #i‚de‡
APP_SUPPORT_H


31 
	#APP_SUPPORT_H


	)

33 
	~"w_deföes.h
"

46 ˛as†
	csh‹e_fûe_∑ge_t
 : 
public
 
∑ge_s
 {

48 
public
:

49 
	$¶Ÿ_cou¡
(Ëc⁄° {  
n¶Ÿs
; }

51 
ªc‹d_t
* 
	$ªc_addr
(
idx
) const {

52  ((
idx
 > 0 && idx < 
n¶Ÿs
 && 
	`¶Ÿ
(idx).
off£t
 >=0) ?

53 (
ªc‹d_t
*Ë(
	`d©a
(Ë+ 
	`¶Ÿ
(
idx
).
off£t
) :

55 
	}
}

63 ˛as†
	cssm_c⁄°™ts
 {

64 
	mpublic
:

73 
max_smÆl_ªc
 = 
∑ge_s
::
d©a_sz
 - (
fûe_p_hdr_t
) -

74 (
∑ge_s
::
¶Ÿ_t
Ë- (
ª˘ag_t
),

75 
	mlg_ªc_∑ge_•a˚
 = 
∑ge_s
::
d©a_sz


	@src/sm/bf.cpp

54 
	~"w_deföes.h
"

58 
	#SM_SOURCE


	)

59 
	#BF_C


	)

62 #ifde‡
__GNUG__


63 #¥agm®
im∂emíèti⁄
 "bf.h"

66 
	~<sm_öt_0.h
>

67 
	~"bf_c‹e.h
"

68 
	~"chk±.h
"

70 #ifde‡
EXPLICIT_TEMPLATE


71 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gbf_˛ó√r_thªad_t
, 
	gqueue_ba£d_block_lock_t
>;

72 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gbf_˛ó√r_thªad_t
, 
	gqueue_ba£d_block_lock_t
>;

76 
	gbfcb_t
::
	$£t_°‹eÊags
(
w_ba£_t
::
uöt4_t
 
f
) {

77 
_°‹e_Êags
 = 
_‰ame
->
	`£t_∑ge_°‹eÊags
(
f
);

78 
	}
}

80 
	gw_ba£_t
::
uöt4_t
 
bfcb_t
::
	$gë_°‹eÊags
() const {

81 
w_ba£_t
::
uöt4_t
 
f
 = 
_‰ame
->
	`gë_∑ge_°‹eÊags
();

82 
	`w_as£π1
(
_°‹e_Êags
 =
f
);

83  
f
;

84 
	}
}

86 
˛ass
 
	tw_li°_t
<
	tbf_˛ó√r_thªad_t
, 
	tqueue_ba£d_block_lock_t
> 
	t˛ó√r_thªad_li°_t
;

88 
	sbf_∑ge_wrôî_c⁄åﬁ_t


90 
±hªad_muãx_t
 
	m_pwc_lock
;

91 
±hªad_c⁄d_t
 
	m_wake_ma°î
;

94 
±hªad_c⁄d_t
 
	m_wake_¶aves
;

97 
Õid_t
* 
	mpids
;

98 
	m∑ges_submôãd
;

99 
	m∑ges_wrôãn
;

100 
	m∑ges_˛aimed
;

101 
boﬁ
* 
	mªtúe
;

102 
boﬁ
 
	mˇn˚l¶aves
;

103 
w_rc_t
 
	mthªad_rc
;

105 
l¢_t
 
	m_mö_c›y_ªc_l¢
;

107 
NORET
 
bf_∑ge_wrôî_c⁄åﬁ_t
(
boﬁ
 *
b±r
) :

108 
pids
(0), 
∑ges_submôãd
(0), 
∑ges_wrôãn
(0),

109 
∑ges_˛aimed
(0),

110 
ªtúe
(
b±r
),

111 
ˇn˚l¶aves
(
Ál£
),

112 
_mö_c›y_ªc_l¢
(
l¢_t
::
max
)

114 
DO_PTHREAD
(
±hªad_muãx_öô
(&
_pwc_lock
, 
NULL
));

115 
DO_PTHREAD
(
±hªad_c⁄d_öô
(&
_wake_¶aves
, 
NULL
));

116 
DO_PTHREAD
(
±hªad_c⁄d_öô
(&
_wake_ma°î
, 
NULL
));

118 
	mNORET
 ~
bf_∑ge_wrôî_c⁄åﬁ_t
() {

119 
DO_PTHREAD
(
±hªad_muãx_de°roy
(&
_pwc_lock
));

120 
DO_PTHREAD
(
±hªad_c⁄d_de°roy
(&
_wake_¶aves
));

121 
DO_PTHREAD
(
±hªad_c⁄d_de°roy
(&
_wake_ma°î
));

124 
bf_∑ge_wrôî_c⁄åﬁ_t
 vﬁ©ûe* 
vthis
(Ë{  
	mthis
; }

135 
	gbf_m
::
	$≈ages
()

137  
_c‹e
->
_num_bufs
;

138 
	}
}

145 
	gbf_m
::
	$_ö¸_∑ge_wrôe
(
numbî
, 
boﬁ
 
bg
)

147 
numbî
) {

149 
	`INC_TSTAT
(
bf_⁄e_∑ge_wrôe
);

152 
	`INC_TSTAT
(
bf_two_∑ge_wrôe
);

155 
	`INC_TSTAT
(
bf_thªe_∑ge_wrôe
);

158 
	`INC_TSTAT
(
bf_four_∑ge_wrôe
);

161 
	`INC_TSTAT
(
bf_five_∑ge_wrôe
);

164 
	`INC_TSTAT
(
bf_six_∑ge_wrôe
);

167 
	`INC_TSTAT
(
bf_£ví_∑ge_wrôe
);

170 
	`INC_TSTAT
(
bf_eight_∑ge_wrôe
);

173 
	`INC_TSTAT
(
bf_m‹e_∑ge_wrôe
);

176 if(
bg
) {

177 
	`ADD_TSTAT
(
bf_wrôe_out
, 
numbî
);

179 
	`ADD_TSTAT
(
bf_ª∂a˚_out
, 
numbî
);

181 
	}
}

192 
	$cmp_Õid
(c⁄° * 
x
, c⁄° * 
y
)

194 c⁄° 
Õid_t
* 
p1
 = (Õid_t*Ë
x
;

195 c⁄° 
Õid_t
* 
p2
 = (Õid_t*Ë
y
;

196 i‡(
p1
->
	`vﬁ
(Ë- 
p2
->vol())

197  
p1
->
	`vﬁ
(Ë- 
p2
->vol();

198 #ifde‡
SOLARIS2


199  (
p1
->
∑ge
 > 
p2
->page ? 1 :

200 
p2
->
∑ge
 > 
p1
->page ? -1 :

203  (
p1
->
∑ge
 > 
p2
->page) ? 1 :

204 ((
p1
->
∑ge
 < 
p2
->page) ? -1 :

207 
	}
}

227 
	gbfcb_t
::
	$upd©e_ªc_l¢
(
œtch_mode_t
 
mode
)

229 
	`DBG
(<<"pid " << 
	`pid
() <<" mode="

230 << (
mode
Ë<< "Ñec_l¢=" << 
this
->
	`cuº_ªc_l¢
());

232 
	`w_as£π1
(
œtch
.
	`mode
(Ë>
mode
);

233 
	`w_as£π1
(
œtch
.
	`is_œtched
());

239 if((
mode
 =
LATCH_EX
 || modê=
LATCH_NLX
) &&

240 
smÀvñ_0
::
log
 && 
	`cuº_ªc_l¢
().
	`vÆid
())

242 
	`w_as£π1
(
œtch
.
	`is_möe
());

244 if–
smÀvñ_0
::
log
->
	`squìzed_by
(
this
->
	`cuº_ªc_l¢
())

245 && !
	`ﬁd_ªc_l¢
().
	`vÆid
()

253 
±hªad_muãx_t
* 
pm
 = 
∑ge_wrôe_muãx_t
::
	`loˇã
(
	`pid
());

254 
rvÆ
 = 
	`±hªad_muãx_åylock
(
pm
);

255 if(
rvÆ
 !
EBUSY
) {

256 
	`w_as£π1
(!
rvÆ
);

257 
	`w_as£π0
(!
	`ﬁd_ªc_l¢
().
	`vÆid
());

259 if(
smÀvñ_0
::
log
->
	`squìzed_by
(
this
->
	`cuº_ªc_l¢
())) {

270 
	`INC_TSTAT
(
bf_Êushed_OHD_∑ge
);

271 
	`W_COERCE
(
bf_m
::
	`_wrôe_out
(
_‰ame
, 1));

274 
	`m¨k_˛ón
();

276 
	`±hªad_muãx_u∆ock
(
pm
);

281 i‡((
mode
 =
LATCH_EX
 || modê=
LATCH_NLX
) &&

282 
this
->
	`cuº_ªc_l¢
(Ë=
l¢_t
::
nuŒ
) {

287 if(
smÀvñ_0
::
log
) {

288 
this
->
	`£t_ªc_l¢
 ( 
smÀvñ_0
::
log
->
	`cuº_l¢
() );

295 
	`w_as£π1
(
	`‰ame
()->
l¢1
 <
	`cuº_ªc_l¢
());

310 
	`DBG
(<<"pid " << 
	`pid
() <<" mode="

311 << (
mode
Ë<< "Ñec_l¢=" << 
this
->
	`cuº_ªc_l¢
());

312 
	}
}

321 ˛as†
	cbf_fûãr_t
 : 
public
 
smÀvñ_0
 {

322 
public
:

323 
	$bf_fûãr_t
() {}

324 
vútuÆ
 ~
	`bf_fûãr_t
();

326 
vútuÆ
 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
&) const = 0;

327 
	}
};

330 
	gbf_fûãr_t
::~
	$bf_fûãr_t
()

332 
	}
}

341 ˛as†
	cbf_fûãr_°‹e_t
 : 
public
 
bf_fûãr_t
 {

342 
public
:

343 
NORET
 
bf_fûãr_°‹e_t
(c⁄° 
°id_t
& 
°id
);

344 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

345 
¥iv©e
:

346 
°id_t
 
_°id
;

350 ˛as†
	cbf_fûãr_vﬁ_t
 : 
public
 
bf_fûãr_t
 {

351 
public
:

352 
NORET
 
	`bf_fûãr_vﬁ_t
(c⁄° 
vid_t
&);

353 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

354 
¥iv©e
:

355 
vid_t
 
_vid
;

359 ˛as†
	cbf_fûãr_n⁄e_t
 : 
public
 
bf_fûãr_t
 {

360 
public
:

361 
NORET
 
	`bf_fûãr_n⁄e_t
();

362 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

367 ˛as†
	cbf_fûãr_l¢_t
 : 
public
 
bf_fûãr_t
 {

368 
public
:

369 
NORET
 
	`bf_fûãr_l¢_t
(c⁄° 
l¢_t
& 
l¢
);

370 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

371 
¥iv©e
:

372 
l¢_t
 
_l¢
;

380 ˛as†
	cbf_fûãr_swìp_t
 : 
public
 
bf_fûãr_t
 {

381 
public
:

382 
NORET
 
	`bf_fûãr_swìp_t
(
boﬁ
 
urgít
, 
vid_t
 
v
);

383 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

384 
¥iv©e
:

385 
boﬁ
 
_urgít
;

386 
vid_t
 
_vﬁ
;

400 ˛as†
	cbf_fûãr_swìp_ﬁd_t
 : 
public
 
bf_fûãr_t
 {

401 
public
:

402 
NORET
 
	`bf_fûãr_swìp_ﬁd_t
(

403 
log_£gmít
,

404 
boﬁ
 
urgít
, 
vid_t
 
v
);

405 
boﬁ
 
	$is_good
(c⁄° 
bfcb_t
& 
p
) const;

406 
¥iv©e
:

407 
_£gmít
;

408 
vid_t
 
_vﬁ
;

409 
boﬁ
 
_urgít
;

412 ˛as†
	c∑ge_wrôî_thªad_t
 : 
public
 
smthªad_t


414 
bf_∑ge_wrôî_c⁄åﬁ_t
* 
_pwc
;

415 
public
:

416 
	$∑ge_wrôî_thªad_t
() :

417 
	`smthªad_t
(
t_ªguœr
, "∑ge_wrôî", 
WAIT_NOT_USED
), 
	$_pwc
(0)

419 
	$öô
(
bf_∑ge_wrôî_c⁄åﬁ_t
* 
pwc
Ë{ 
_pwc
 =Öwc; 
	}
}

420 
vútuÆ
 
run
();

435 ˛as†
	cbf_˛ó√r_thªad_t
 : 
public
 
smthªad_t


437 
‰õnd
 
˛ass
 
bf_m
;

439 
	mpublic
:

440 
NORET
 
bf_˛ó√r_thªad_t
(
vid_t
);

441 
	mNORET
 ~
bf_˛ó√r_thªad_t
();

443 
a˘iv©e
(
boﬁ
 
f‹˚
 = 
Ál£
);

444 
_a˘iv©e_im∂
(
boﬁ
 
f‹˚
, boﬁ 
ªtúe
);

445 
ªtúe
();

446 
vútuÆ
 
run
();

447 c⁄° 
	mvid_t
& 
	$vﬁ
(Ë{  
_vﬁ
; }

448 
¥iv©e
:

449 
vid_t
 
_vﬁ
;

450 
boﬁ
 
_is_ru¬ög
;

451 
boﬁ
 
_ªtúe
;

452 
bf_∑ge_wrôî_c⁄åﬁ_t
 
_pwc
;

453 
∑ge_wrôî_thªad_t
* 
_∑ge_wrôîs
;

456 
_∑ge_wrôî_cou¡
;

458 * 
_hi°ogøm
;

464 
_kick_cou¡
;

465 
_˛ó√r_thªshﬁd
;

466 
±hªad_muãx_t
 
_˛ó√r_muãx
;

467 
±hªad_c⁄d_t
 
_a˘iv©e_c⁄d
;

468 
¥Ÿe˘ed
:

469 
w_lök_t
 
_lök
;

472 
NORET
 
	`bf_˛ó√r_thªad_t
–c⁄° 
bf_˛ó√r_thªad_t
&);

473 
bf_˛ó√r_thªad_t
& 
›î©‹
=(const bf_cleaner_thread_t&);

475 
¥Ÿe˘ed
:

477 
_dúty_thªshﬁd
;

478 
_ndúty
;

479 
	}
};

487 *
	gbf_˛ó√r_thªad_t
::
_hi°ogøm
 = 0;

490 
	gbf_˛ó√r_thªad_t
::
_∑ge_wrôî_cou¡
 = 1;

493 
	gbf_˛ó√r_thªad_t
::
_dúty_thªshﬁd
 = 20;

494 
	gbf_˛ó√r_thªad_t
::
_ndúty
 = 0;

501 
NORET


502 
	gbf_˛ó√r_thªad_t
::
	$bf_˛ó√r_thªad_t
(
vid_t
 
v
)

503 : 
	`smthªad_t
(
t_time_¸ôiˇl
, "bf_˛ó√r", 
WAIT_NOT_USED
),

504 
	`_vﬁ
(
v
),

505 
	`_is_ru¬ög
(
Ál£
),

506 
	`_ªtúe
(
Ál£
),

507 
	`_pwc
(&
_ªtúe
),

508 
	`_kick_cou¡
(0),

509 
	$_˛ó√r_thªshﬁd
(0)

511 
_is_ru¬ög
 = 
åue
;

512 
_˛ó√r_thªshﬁd
 = 
_dúty_thªshﬁd
 >> 1;

513 i‡(
_˛ó√r_thªshﬁd
 == 0)

514 
_˛ó√r_thªshﬁd
 = 1;

515 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_a˘iv©e_c⁄d
, 
NULL
));

516 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_˛ó√r_muãx
, 
NULL
));

518 
	}
}

520 
NORET


521 
	gbf_˛ó√r_thªad_t
::~
	$bf_˛ó√r_thªad_t
()

523 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_a˘iv©e_c⁄d
));

524 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
_˛ó√r_muãx
));

525 
	}
}

535 
	gbf_˛ó√r_thªad_t
::
	$a˘iv©e
(
boﬁ
 
f‹˚
)

539 
	`_a˘iv©e_im∂
(
f‹˚
, 
Ál£
);

540 
	}
}

543 
	gbf_˛ó√r_thªad_t
::
	$_a˘iv©e_im∂
(
boﬁ
 , boﬁ 
ªtúe
)

546 if(
ªtúe
)

547 
_ªtúe
 = 
ªtúe
;

549 
_kick_cou¡
++;

550 
	`INC_TSTAT
(
bf_˛ó√r_sig«Œed
);

551 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_a˘iv©e_c⁄d
));

552 
	}
}

564 
	gbf_˛ó√r_thªad_t
::
	$ªtúe
()

566 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_muãx
);

567 
_ªtúe
 = 
åue
;

568 
_is_ru¬ög
) {

569 
	`_a˘iv©e_im∂
(
åue
,Årue);

571 
cs
.
	`∑u£
();

573 
rc_t
 
rc
 = 
	`joö
(1000);

574 i‡(
rc
.
	`îr_num
(Ë!
°TIMEOUT
) {

575 
	`W_COERCE
(
rc
);

577 
cs
.
	`ªsume
();

579 
	}
}

591 
	gbf_˛ó√r_thªad_t
::
	$run
()

593 
	`FUNC
(
bf_˛ó√r_thªad_t
::
run
);

603 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_muãx
);

605 
boﬁ
 
ªtúe
 = 
_ªtúe
;

606 i‡(
ªtúe
) {

607 
_is_ru¬ög
 = 
Ál£
;

609 if(
ªtúe
)

613 if(
_∑ge_wrôî_cou¡
 > 0) {

614 
_∑ge_wrôîs
 = 
√w
 
∑ge_wrôî_thªad_t
[
_∑ge_wrôî_cou¡
];

615 
i
=0; i < 
_∑ge_wrôî_cou¡
; i++) {

617 
_∑ge_wrôîs
[
i
].
	`öô
(&
_pwc
);

619 
	`w_as£π1
–(
_∑ge_wrôîs
[
i
].
	`°©us
(Ë=
t_vúgö
)

620 || (
_∑ge_wrôîs
[
i
].
	`°©us
(Ë=
t_blocked
));

621 
_∑ge_wrôîs
[
i
].
	`f‹k
();

624 
_∑ge_wrôîs
 = 
NULL
;

627 
Õid_t
* 
pids
 = 
√w
Üpid_t[
bf_m
::
	`≈ages
()];

628 i‡(! 
pids
) {

629 
	`W_FATAL_MSG
(
fcOUTOFMEMORY
, << " cª©ög b‡˛ó√∏∑gêli°" << 
ídl
);

633 
w_auto_dñëe_¨øy_t
<
Õid_t
> 
	`auto_dñ
(
pids
);

635 #ifde‡
W_TRACE


637 
°hªad_ba£_t
::
id_t
 
_id
 = 
	`me
()->
id
;

638 
	`DBG
–<< " cÀ™î " << 
_id
 << "á˘iv©ed" << 
ídl
 );

641 
¡imes
 = 0;

645 
_ndúty
 = 0;

646  !
_ªtúe
 )

648 
	`INC_TSTAT
(
bf_˛ó√r_swìps
);

651 
	`u¶ìp
(100*1000);

652 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_muãx
);

656  !
_kick_cou¡
 && !
_ªtúe
) {

658 
time•ec
 
whí
;

660 
°hªad_t
::
	`timeout_to_time•ec
(10000, 
whí
);

661 
	`DO_PTHREAD_TIMED
(
	`±hªad_c⁄d_timedwaô
(

662 &
_a˘iv©e_c⁄d
, &
_˛ó√r_muãx
, &
whí
));

665 
_kick_cou¡
 = 0;

666 if(
_ªtúe
)

678 
bf_fûãr_t
* 
fûãr
 = 0;

679 
boﬁ
 
¥i‹ôize_ﬁd_∑ges
 = 
Ál£
;

680 if(
smÀvñ_0
::
log
)

682 
ﬁde°_£gmít
 = 
smÀvñ_0
::
log
->
	`globÆ_mö_l¢
().
	`fûe
();

683 
›í_£gmíts
 =

684 
smÀvñ_0
::
log
->
	`cuº_l¢
().
	`fûe
() -

685 
ﬁde°_£gmít
 + 1;

687 if(
›í_£gmíts
 > 2) {

688 
¥i‹ôize_ﬁd_∑ges
 = 
›í_£gmíts
 > 4;

689 
fûãr
 = 
√w
 
	`bf_fûãr_swìp_ﬁd_t
(
ﬁde°_£gmít
,

690 
¥i‹ôize_ﬁd_∑ges
, 
	`vﬁ
());

694 if(!
fûãr
 && 
_ndúty
 > 
_dúty_thªshﬁd
)

697 
boﬁ
 
urgít
 = 
_ndúty
 > 3*
smÀvñ_0
::
bf
->
	`≈ages
()/4;

698 
fûãr
 = 
√w
 
	`bf_fûãr_swìp_t
(
urgít
, 
	`vﬁ
());

700 if(!
fûãr
)

706 
cou¡
 = 0;

708 
i
 = 0; i < 
smÀvñ_0
::
bf
->
	`≈ages
(); i++)

714 i‡–(
bf_c‹e_m
::
_bu·ab
[
i
].
	`£t_hŸbô
(

715 
bf_c‹e_m
::
_bu·ab
[
i
].
	`ªfbô
())

717 
bf_c‹e_m
::
_bu·ab
[
i
].
	`de¸_hŸbô
();

731 
	`w_as£π3
–
bf_c‹e_m
::
_bu·ab
[
i
].
	`hŸbô
() >= 0);

733 i‡–
fûãr
->
	`is_good
(
bf_c‹e_m
::
_bu·ab
[
i
]))

736 
	`w_as£π9
(
bf_c‹e_m
::
_bu·ab
[
i
].
	`pid
().
∑ge
 != 0);

737 
pids
[
cou¡
++] = 
bf_c‹e_m
::
_bu·ab
[
i
].
	`pid
();

740 
dñëe
 
fûãr
;

746 if(
_ªtúe
)

750 
	`w_as£π9
(
cou¡
 >=0 && cou¡ <
bf_m
::
	`≈ages
());

751 
_hi°ogøm
[
cou¡
]++;

753 i‡(
cou¡
 > 0)

760 i‡(
smÀvñ_0
::
log
) {

761 
	`DBG
(<< "flushingÜog");

762 
	`INC_TSTAT
(
bf_log_Êush_Æl
);

763 
	`W_IGNORE
(
smÀvñ_0
::
log
->
	`Êush_Æl
());

766 ++
¡imes
;

770 
w_rc_t
 
rc
 = 
bf_m
::
	`_˛ón_buf
–&
_pwc
,

772 
cou¡
,

773 
pids
, 
WAIT_FOREVER
, &
_ªtúe
);

774 if(
rc
.
	`is_îr‹
()

775 && 
rc
.
	`îr_num
(Ë!
smÀvñ_0
::
eBPFORCEFAILED
) {

776 
w_o°r°ªam
 
åoubÀ
;

777 
åoubÀ
 << "eBPFORCEFAILED i¿bf_m::_˛ón_£gmíà" << 
rc
 ;

778 
	`Ârötf
(
°dîr
, "%s\n", 
åoubÀ
.
	`c_°r
());

779 
	`W_COERCE
(
rc
);

781 
	`©omic_add_öt_dñè
(
_ndúty
, -
cou¡
);

787 #ifde‡
W_TRACE


788 
	`DBG
–<< " cÀ™î " << 
_id
 << "Ñëúed" << 
ídl


789 << "\tswïà" << 
¡imes
 << "Åime†" << 
ídl
 );

790 
	`DBG
–<< 
ídl
 );

795 
	`CRITICAL_SECTION
(
cs
, 
_pwc
.
_pwc_lock
);

796 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
_pwc
.
_wake_¶aves
));

799 
i
=0; i < 
_∑ge_wrôî_cou¡
; i++) {

800 
_∑ge_wrôîs
[
i
].
	`joö
();

801 
	`w_as£π1
(
_∑ge_wrôîs
[
i
].
	`°©us
(Ë=
t_defun˘
);

804 
dñëe
 [] 
_∑ge_wrôîs
;

805 
_∑ge_wrôîs
 = 
NULL
;

807 
_is_ru¬ög
 = 
Ál£
;

809 
	}
}

821 
queue_ba£d_block_lock_t
 
	gbf_m
::
_˛ó√r_thªads_li°_muãx
;

822 
˛ó√r_thªad_li°_t
* 
	gbf_m
::
_˛ó√r_thªads
 = 0;

823 
bf_c‹e_m
* 
	gbf_m
::
_c‹e
 = 0;

834 
	gbf_m
::
	$bf_m
(
uöt4_t
 
max
, *
bp
, uöt4_à
pg_wrôî_˙t
)

836 
_c‹e
 = 
√w
 
	`bf_c‹e_m
(
max
, 
bp
);

837 i‡(! 
_c‹e
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

840 i‡(
pg_wrôî_˙t
>0)

841 
bf_˛ó√r_thªad_t
::
_∑ge_wrôî_cou¡
 = 
pg_wrôî_˙t
;

844 
_˛ó√r_thªads
 = 
√w


845 
	`˛ó√r_thªad_li°_t
(
	`W_LIST_ARG
(
bf_˛ó√r_thªad_t
, 
_lök
),

846 &
_˛ó√r_thªads_li°_muãx
 );

847 i‡(! 
_˛ó√r_thªads
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

849 
bf_˛ó√r_thªad_t
::
_hi°ogøm
 = 
√w
 [
	`≈ages
()+1];

850 
i
=0; i< 
	`≈ages
()+1; i++Ë
bf_˛ó√r_thªad_t
::
_hi°ogøm
[i]=0;

855 
bf_˛ó√r_thªad_t
::
_dúty_thªshﬁd
 = 
	`≈ages
()/8;

856 if(
bf_˛ó√r_thªad_t
::
_dúty_thªshﬁd
 < 4) {

857 
	`W_FATAL_MSG
(
OPT_BadVÆue
, << " Buf„∏poﬁÅoÿsmÆl. " << 
ídl
);

859 
	}
}

869 
	gbf_m
::~
	$bf_m
()

875 
	`W_COERCE
–
	`dißbÀ_background_Êushög
() );

877 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_thªads_li°_muãx
);

878 if(
_˛ó√r_thªads
) {

879 
dñëe
 
_˛ó√r_thªads
;

880 
_˛ó√r_thªads
 = 
NULL
;

887 i‡(
_c‹e
) {

888 
	`W_COERCE
–(
shutdown_˛ón
 ? 
	`f‹˚_Æl
(
åue
Ë: 
	`_disˇrd_Æl
()) );

889 
dñëe
 
_c‹e
;

890 
_c‹e
 = 0;

893 if(
bf_˛ó√r_thªad_t
::
_hi°ogøm
) {

894 
dñëe
[] 
bf_˛ó√r_thªad_t
::
_hi°ogøm
;

895 
bf_˛ó√r_thªad_t
::
_hi°ogøm
 = 0;

898 
	}
}

910 
	gbf_m
::
	$mem_√eded
(
n
)

912  (
∑ge_s
Ë* 
n
;

913 
	}
}

923 
boﬁ
 
	gbf_m
::
	$f‹˚_my_dúty_ﬁd_∑ges
(
Õid_t
 c⁄°* 
wÆ_∑ge
) const

925  
_c‹e
->
	`f‹˚_my_dúty_ﬁd_∑ges
(
wÆ_∑ge
);

926 
	}
}

937 
bfcb_t
* 
	gbf_m
::
	$gë_cb
(c⁄° 
∑ge_s
* 
p
)

939 
idx
 = 
p
 - 
bf_c‹e_m
::
_buÂoﬁ
;

940  (
idx
<0 || idx>=
bf_c‹e_m
::
_num_bufs
Ë? 0 : bf_c‹e_m::
_bu·ab
 + idx;

941 
	}
}

952 
boﬁ


953 
	gbf_m
::
	$is_bf_∑ge
(c⁄° 
∑ge_s
* 
p
, 
boﬁ
 
™d_ö_hèb
 )

955 
bfcb_t
 *
b
 = 
	`gë_cb
(
p
);

956  
b
 ? (
™d_ö_hèb
 ? 
_c‹e
->
	`_ö_hèb
(bË: 
åue
Ë: 
Ál£
;

957 
	}
}

964 
boﬁ


965 
	gbf_m
::
	$is_ˇched
(c⁄° 
bfcb_t
* 
b
)

967  
_c‹e
->
	`_ö_hèb
(
b
);

968 
	}
}

985 
rc_t


986 
	gbf_m
::
	$_fix
(

987 
timeout_ö_ms
 
timeout
,

988 
∑ge_s
*& 
ªt_∑ge
,

989 c⁄° 
Õid_t
& 
pid
,

990 
uöt2_t
 
èg
,

991 
œtch_mode_t
 
mode
,

992 
boﬁ
 
no_ªad
,

993 
°‹e_Êag_t
& 
ªtu∫_°‹e_Êags
,

994 
boﬁ
 
ign‹e_°‹e_id
,

995 
°‹e_Êag_t
 
°‹e_Êags


998 
	`FUNC
(
bf_m
::
fix
);

999 
	`DBGTHRD
–<< "abouàtÿfix " << 
pid
 << " i¿modê" << (
mode
) );

1001 
ªt_∑ge
 = 0;

1003 
boﬁ
 
found
=
Ál£
;

1006 
boﬁ
 
MAYBE_UNUSED
 
ósy_föd
 = 
Ál£
;

1007 
bfcb_t
* 
b
;

1008 
rc_t
 
rc
;

1017 
rc
 = 
_c‹e
->
	`föd
(
b
, 
pid
, 
mode
, 
timeout
);

1018 if(!
rc
.
	`is_îr‹
()) {

1020 
	`w_as£π1
(
b
);

1021 
	`w_as£π1
(
b
->
œtch
.
	`is_möe
() ||

1022 (
mode
 =
LATCH_SH
 && 
b
->
œtch
.
	`hñd_by_me
())

1024 
ósy_föd
 = (
found
=
åue
);

1025 } if–! 
_˛ó√r_thªads
->
	`is_em±y
() ) {

1027 if(
bf_˛ó√r_thªad_t
::
_ndúty
 =
	`≈ages
()) {

1028 
	`INC_TSTAT
(
bf_kick_fuŒ
);

1029 
	`a˘iv©e_background_Êushög
();

1032 i‡(
bf_˛ó√r_thªad_t
::
_ndúty
 =
	`≈ages
()) {

1033 
	`INC_TSTAT
(
bf_¶ìp_awaô_˛ón
);

1037 
	`me
()->
	`¶ìp
(10);

1042 
	`DBGTHRD
–<< "middÀ o‡fix " << 
pid


1043 << " i¿modê" << (
mode
)

1044 << " found " << (
found
)

1047 if(!
found
) {

1048 
bfcb_t
* 
v
 = 
_c‹e
->
	`ª∂a˚mít
();

1049 if(!
v
Ë 
	`RC
(
fcFULL
);

1053 
	`w_as£π1
(
v
->
œtch
.
	`is_möe
(Ë=
åue
);

1054 
	`w_as£π1
(
v
->
œtch
.
	`hñd_by_me
(Ë=
åue
);

1065 if(
v
->
	`ﬁd_pid_vÆid
()) {

1073 i‡(
v
->
	`dúty
()) {

1074 
	`INC_TSTAT
(
bf_kick_ª∂a˚mít
);

1075 
vid_t
 
vid
 = 
v
->
	`pid
().
	`vﬁ
();

1076 
	`a˘iv©e_background_Êushög
(&
vid
);

1078 
	`CRITICAL_SECTION
(
cs
, 
∑ge_wrôe_muãx_t
::
	`loˇã
(
v
->
	`pid
()));

1079 
	`w_as£π0
(!
v
->
	`ﬁd_ªc_l¢
().
	`vÆid
());

1082 
	`W_COERCE
(
	`_ª∂a˚_out
(
v
));

1098 if(
v
->
	`ﬁd_ªc_l¢
().
	`vÆid
()) {

1101 
	`CRITICAL_SECTION
(
cs
, 
∑ge_wrôe_muãx_t
::
	`loˇã
(
v
->
	`pid
()));

1103 
	`INC_TSTAT
(
bf_ª∂a˚d_˛ón
);

1107 
_c‹e
->
	`publish_∑πül
(
v
);

1110 
	`w_as£π1
(
v
->
œtch
.
	`is_möe
());

1112 
b
 = 
v
;

1113 
rc
 = 
_c‹e
->
	`gøb
(
v
, 
pid
, 
found
, 
mode
, 
timeout
);

1121 
	`DBGTHRD
–<< "middÀ o‡fix: gøbÑëu∫†" << 
rc
 );

1122 i‡(
rc
.
	`is_îr‹
()) {

1123  
rc
.
	`ª£t
();

1127 
	`w_as£π2
–
found
? (
b
 !
v
) : (b == v) );

1128 
	`w_as£π2
(

1129 
found
 ? (
v
->
œtch
.
	`mode
(Ë=
mode
Ë: (
b
->œtch.mode(Ë=
LATCH_EX
 || b->œtch.mode(Ë=
LATCH_NLX
)

1132 if(
found
) {

1136 
	`w_as£π2
(
b
 !
v
) ;

1137 
	`w_as£π2
(
v
->
œtch
.
	`mode
(Ë=
mode
) ;

1138 
b
 = 
v
;

1140 
	`w_as£π0
(
b
 =
v
);

1141 
	`w_as£π0
(
b
->
œtch
.
	`mode
(Ë=
LATCH_EX
 || b->œtch.mode(Ë=
LATCH_NLX
);

1149 
	`w_as£π1
(
b
);

1153 i‡(
found
) {

1158 
	`DBG
–<< "foundÖagê" << 
pid
 << " b->pid=" << ((
Õid_t
)
b
->
	`pid
())

1159 << "Ço_ªad " << 
no_ªad


1160 << " st‹e_Êag†" << 
°‹e_Êags


1161 << " o≥øtög_modê" << 
smÀvñ_0
::
›î©ög_mode


1162 << "Öagêl¢1=" << 
b
->
	`‰ame
()->
l¢1
 << "Ü¢2=" << b->‰ame()->
l¢2


1167 if–((
Õid_t
)
b
->
	`pid
(Ë!
pid
Ë|| 
no_ªad
 ) {

1182 i‡(
°‹e_Êags
 =
°_bad
)

1184 
	`DBG
–<< "gë st‹êÊag†f‹Öid " << 
pid
);

1185 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
pid
.
	`°id
(), 
°‹e_Êags
) );

1188 
	`w_as£π9
(
°‹e_Êags
 <= 0xF);

1190 i‡(
°‹e_Êags
 & 
°_ö£π_fûe
) {

1202 
b
->
	`£t_°‹eÊags
(
°_ªguœr
);

1204 
	`DBG
–<< "£à°‹êÊag†Åÿ" << 
°‹e_Êags


1205 << " o¿pid " << 
pid
);

1206 
b
->
	`£t_°‹eÊags
(
°‹e_Êags
);

1209 
b
->
	`£t_pid
(
pid
);

1216 #ifde‡
W_TRACE


1217 
	`DBGTHRD
–<< "nŸ found " << 
pid
 );

1220 
	`DBGTHRD
–<< "ªadÖagê" << 
pid
 << " i¿modê" << (
mode
));

1226 
rc
 = 
	`gë_∑ge
(
pid
, 
b
, 
èg
, 
no_ªad
, 
ign‹e_°‹e_id
);

1227 i‡(
rc
.
	`is_îr‹
()) {

1230 
_c‹e
->
	`publish
(
b
, 
LATCH_NL
, 
rc
.
	`is_îr‹
());

1231  
rc
.
	`ª£t
();

1234 
	`DBGTHRD
–<< "gŸ " << 
pid
 << " fømêpid " << 
b
->
	`‰ame
()->pid );

1239 i‡(
°‹e_Êags
 =
°_bad
)

1241 
	`DBGTHRD
–<< "gëtög st‹êÊag†f‹ st‹ê " << 
pid
.
	`°id
() );

1243 
rc
 = 
io
->
	`gë_°‹e_Êags
(
pid
.
	`°id
(), 
°‹e_Êags
);

1244 i‡(
rc
.
	`is_îr‹
() ) {

1247 
_c‹e
->
	`publish
(
b
, 
LATCH_NL
, 
rc
.
	`is_îr‹
());

1248 
	`DBGTHRD
–<< "îr‹ " << 
pid
 );

1249  
rc
.
	`ª£t
();

1252 
	`w_as£π9
(
°‹e_Êags
 <= 0xF);

1254 i‡(!
no_ªad
 && 
°‹e_Êags
 & 
°_ö£π_fûe
) {

1264 
°‹e_Êags
 = 
°_ªguœr
;

1266 
	`DBG
–<< "£à°‹êÊag†tÿ" << 
°‹e_Êags
 << " f‹Öid " << 
pid
);

1267 
b
->
	`£t_°‹eÊags
(
°‹e_Êags
);

1270 
b
->
	`£t_pid
(
pid
);

1271 
	`w_as£π2
(!
b
->
	`dúty
());

1272 
	`w_as£π2
(
b
->
	`cuº_ªc_l¢
(Ë=
l¢_t
::
nuŒ
);

1276 
_c‹e
->
	`publish
(
b
, 
mode
, 
Ál£
 );

1295 
	`DBGTHRD
–<< "suc˚s†" << 
pid
 );

1297 
	`w_as£π3
(((
Õid_t
)
b
->
	`pid
()Ë=
pid
);

1298 
	`w_as£π3
–(
b
->
	`‰ame
()->
pid
 ==Öid) ||

1299 
no_ªad
 || 
ign‹e_°‹e_id
);

1301 
	`w_as£π1
(
b
->
œtch
.
	`mode
(Ë>
mode
);

1302 
b
->
	`upd©e_ªc_l¢
(
mode
);

1304 
	`DBG
(<<"pid " << 
pid
 <<" mode="

1305 << (
mode
Ë<< "Ñec_l¢=" << 
b
->
	`cuº_ªc_l¢
());

1307 
	`INC_TSTAT
(
∑ge_fix_˙t
);

1309 
ªt_∑ge
 = 
b
->
	`‰ame_n⁄c⁄°
();

1310 
ªtu∫_°‹e_Êags
 = (
°‹e_Êag_t
)
b
->
	`gë_°‹eÊags
();

1312 
	`w_as£π9
(
_c‹e
->
	`œtch_mode
(
b
Ë>
mode
);

1314 
	`w_as£π1
(
b
->
	`pö_˙t
() > 0);

1316  
RCOK
;

1317 
	}
}

1328 
w_rc_t


1329 
	gbf_m
::
	$ªfix
(c⁄° 
∑ge_s
* 
buf
, 
œtch_mode_t
 
mode
)

1331 
	`FUNC
(
bf_m
::
ªfix
);

1332 
	`DBGTHRD
(<<"abouàtÿªfix " << 
buf
->
pid
 << " i¿mode" << (
mode
));

1334 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1335 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1339 
	`W_COERCE
–
_c‹e
->
	`pö
(
b
, 
mode
));

1341 
b
->
	`upd©e_ªc_l¢
(
mode
);

1342 
	`w_as£π9
(
_c‹e
->
	`œtch_mode
(
b
Ë>
mode
);

1343 
	`DBG
(<<"mode=" << (
mode
Ë<< "Ñec_l¢=" << 
b
->
	`cuº_ªc_l¢
());

1345 
	`INC_TSTAT
(
∑ge_ªfix_˙t
);

1346  
RCOK
;

1347 
	}
}

1356 
œtch_mode_t


1357 
	gbf_m
::
	$œtch_mode
(c⁄° 
∑ge_s
* 
buf
)

1359 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1360 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1361  
_c‹e
->
	`œtch_mode
(
b
);

1362 
	}
}

1372 
	gbf_m
::
	$upgøde_œtch
(
∑ge_s
*& 
buf
, 
œtch_mode_t
 
m
)

1374 
	`FUNC
(
bf_m
::
upgøde_œtch
);

1375 
	`DBGTHRD
(<<"abouàtÿupgødêœtch o¿" << 
buf
->
pid
 << "Åo mode "

1376 << (
m
));

1378 
boﬁ
 
would_block
;

1379 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1380 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1381 
_c‹e
->
	`upgøde_œtch_if_nŸ_block
(
b
, 
would_block
);

1382 if(!
would_block
) {

1383 
	`w_as£π9
(
b
->
œtch
.
	`mode
(Ë>
m
);

1385 if(
would_block
) {

1386 
	`INC_TSTAT
(
bf_upgøde_œtch_ø˚
);

1387 #i‚de‡
__GNUC__


1388 #w¨nög 
we
 
ªÀa£
 
the
 
œtch
 
⁄
 
upgøde
 
wôhout
 
w¨nög
 
our
 
ˇŒî
;

1389 #w¨nög 
they
 
dïíd
 
⁄
 
the
 
œtch
 
nŸ
 
ch™gög
Åhey 
wûl
 

1393 
	`w_as£π9
(!
b
->
œtch
.
	`is_möe
());

1394 c⁄° 
Õid_t
& 
pid
 = 
buf
->pid;

1395 
uöt2_t
 
èg
 = 
buf
->tag;

1396 
l¢_t
 
ﬁd_∑ge_l¢
 = 
buf
->
l¢1
;

1397 
	`unfix
(
buf
, 
Ál£
, 1);

1402 
	`w_as£π1
(!
b
->
œtch
.
	`hñd_by_me
());

1405 
°‹e_Êag_t
 
°‹e_Êags
;

1406 
	`W_COERCE
(
	`fix
(
buf
, 
pid
, 
èg
, 
m
, 
Ál£
, 
°‹e_Êags
, false));

1407 
	`w_as£π9
(
b
->
œtch
.
	`mode
(Ë=
m
);

1408 if(
buf
->
l¢1
 !
ﬁd_∑ge_l¢
) {

1409 
	`INC_TSTAT
(
bf_upgøde_œtch_ch™ged
);

1413 
	`w_as£π9
(
b
->
œtch
.
	`mode
(Ë>
m
);

1415 
	`DBGTHRD
(<<"modêo‡œtch o¿" << 
buf
->
pid


1416 << " i†" << (
b
->
œtch
.
	`mode
()));

1418 
	`w_as£π9
–
_c‹e
->
	`œtch_mode
(
b
Ë>
m
 );

1419 
	`DBGTHRD
(<<"c‹êmodêo‡œtch o¿" << 
buf
->
pid
 << " is "

1420 << (
_c‹e
->
	`œtch_mode
(
b
)));

1422 
b
->
	`upd©e_ªc_l¢
(
m
);

1423 
	`DBG
(<<"mode=" << (
m
Ë<< "Ñec_l¢=" << 
b
->
	`cuº_ªc_l¢
());

1424 
	}
}

1434 
	gbf_m
::
	$upgøde_œtch_if_nŸ_block
(c⁄° 
∑ge_s
* 
buf
, 
boﬁ
& 
would_block
)

1436 
	`DBGTHRD
(<<"abouàtÿupgødêœtch o¿" << 
buf
->
pid
 );

1437 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1438 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1439 
_c‹e
->
	`upgøde_œtch_if_nŸ_block
(
b
, 
would_block
);

1444 
œtch_mode_t
 
m
 = 
_c‹e
->
	`œtch_mode
(
b
);

1445 if(
m
 =
LATCH_EX
) {

1446 
b
->
	`upd©e_ªc_l¢
(
m
);

1448 
	}
}

1460 
boﬁ


1461 
	gbf_m
::
	$fixed_by_me
(c⁄° 
∑ge_s
* 
buf
)

1463 
	`FUNC
(
bf_m
::
fixed_by_me
);

1464 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1465 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1466  
_c‹e
->
	`œtched_by_me
(
b
);

1467 
	}
}

1469 
boﬁ


1470 
	gbf_m
::
	$is_möe
(c⁄° 
∑ge_s
* 
buf
)

1472 
	`FUNC
(
bf_m
::
is_möe
);

1473 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1474 if(
b
==
NULL
Ë 
Ál£
;

1475 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1476  
_c‹e
->
	`is_möe
(
b
);

1477 
	}
}

1479 c⁄° 
œtch_t
*

1480 
	gbf_m
::
	$my_œtch
(c⁄° 
∑ge_s
* 
buf
)

1482 
	`FUNC
(
bf_m
::
my_œtch
);

1483 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1484 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1485  
_c‹e
->
	`my_œtch
(
b
);

1486 
	}
}

1505 
	gbf_m
::
	$unfix
(c⁄° 
∑ge_s
* 
buf
, 
boﬁ
 
dúty
, 
ªf_bô
)

1507 
	`FUNC
(
bf_m
::
unfix
);

1508 
boﬁ
 
kick_˛ó√r
 = 
Ál£
;

1509 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1510 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1511 
	`w_as£π1
(
b
->
	`pö_˙t
() > 0);

1512 
	`w_as£π1
(
b
->
œtch
.
	`hñd_by_me
());

1514 
	`DBGTHRD
–<< "abouàtÿunfix " << 
b
->
	`pid
(Ë<< " w/l¢ " << b->
	`cuº_ªc_l¢
() );

1522 i‡(
dúty
) {

1523 if–
	`_£t_dúty
(
b
ËË
kick_˛ó√r
 = 
åue
;

1524 
	`w_as£π2
–
b
->
	`dúty
() );

1529 i‡(! 
b
->
	`dúty
()) {

1567 if(
b
->
œtch
.
	`is_möe
(Ë&& b->œtch.
	`hñd_by_me
() == 1) {

1569 { 
	`w_as£π0
(
dúty
 ? 
b
->
œtch
.
	`is_möe
(): 
åue
); }

1572 
b
->
	`m¨k_˛ón
();

1573 
	`INC_TSTAT
(
bf_unfix_˛ó√d
);

1577 i‡(
b
->
	`dúty
(Ë&& !b->
	`‰ame
()->
l¢1
.
	`vÆid
()) {

1603 
	#BUG_DOUBTFUL_LSN_FIX
 1

	)

1604 #ifde‡
BUG_DOUBTFUL_LSN_FIX


1612 
	`w_as£π1
 ((
b
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
) == 0);

1617 
	`w_as£π0
(
b
->
œtch
.
	`is_möe
());

1618 if(
b
->
	`pö_˙t
() <= 1) {

1620 
b
->
	`m¨k_˛ón
();

1622 { 
	`w_as£π0
(
dúty
 ? 
b
->
œtch
.
	`is_möe
(): 
åue
); }

1626 if–
log
 && 
b
->
	`‰ame
()->
l¢1
 =
	`l¢_t
(0,1) ) {

1627 i‡(
b
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
) {

1632 
b
->
	`m¨k_˛ón
();

1635 if(
log
Ë
	`w_as£π9
–(
b
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
) );

1641 #i‡
W_DEBUG_LEVEL
 > 2

1642 if(
b
->
	`dúty
()) {

1644 if(
log
Ë
	`w_as£π3
–
b
->
	`cuº_ªc_l¢
(Ë!
l¢_t
::
nuŒ
 || b->
	`pö_˙t
() > 0);

1650 
	`DBGTHRD
–<< "abouàtÿunfix " << 
b
->
	`pid
(Ë<< " w/l¢ " << b->
	`cuº_ªc_l¢
() );

1651 
	`w_as£π1
(
b
->
	`pö_˙t
() > 0);

1653 
vid_t
 
v
 = 
b
->
	`pid
().
	`vﬁ
();

1654 
_c‹e
->
	`u≈ö
(
b
, 
ªf_bô
);

1656 
	`INC_TSTAT
(
∑ge_unfix_˙t
);

1658 
buf
 = 0;

1659 i‡(
kick_˛ó√r
) {

1660 
	`a˘iv©e_background_Êushög
(&
v
);

1664 
	}
}

1676 
	gbf_m
::
	$disˇrd_pö√d_∑ge
(c⁄° 
∑ge_s
* 
buf
)

1678 
	`FUNC
(
bf_m
::
disˇrd_pö√d_∑ge
);

1679 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

1680 
	`w_as£π1
(
b
 && b->
	`‰ame
(Ë=
buf
);

1687 
	`w_as£π2
(
b
->
œtch
.
	`is_möe
());

1689 
bfcb_t
* 
tmp
 = 
b
;

1690 
w_rc_t
 
rc
 = 
_c‹e
->
	`ªmove
(
tmp
);

1691 i‡(
rc
.
	`is_îr‹
()) {

1693 
	`w_as£π0
(!
b
->
œtch
.
	`is_möe
());

1694 
	`w_as£π0
(
b
->
	`pid
(Ë=
Õid_t
::
nuŒ
);

1697 
	}
}

1699 
	g∑ge_wrôî_thªad_t
::
	$run
()

1703 
∑ge_s
* 
pbuf
 = 
√w
Öage_s[
smÀvñ_0
::
max_m™y_∑ges
];

1705 
w_auto_dñëe_¨øy_t
<
∑ge_s
> 
	`dñëe_pbuf
(
pbuf
);

1707 
cou¡
 = 0;

1708 
w_rc_t
 
rc
;

1709 
	`w_as£π1
(
_pwc
);

1712 
Õid_t
* 
pids
;

1716 
	`CRITICAL_SECTION
(
cs
, 
_pwc
->
_pwc_lock
);

1719 
_pwc
->
∑ges_wrôãn
 +
cou¡
;

1721 
boﬁ
 
wake_ma°î
 = 
Ál£
;

1722 if(
_pwc
->
∑ges_wrôãn
 =_pwc->
∑ges_submôãd
)

1723 
wake_ma°î
 = 
åue
;

1725 if(
rc
.
	`is_îr‹
()) {

1726 
_pwc
->
thªad_rc
 = 
rc
;

1727 
wake_ma°î
 = 
åue
;

1730 if(
wake_ma°î
) {

1731 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_pwc
->
_wake_ma°î
));

1739 
_pwc
->
	`vthis
()->
∑ges_˛aimed
 >=

1740 
_pwc
->
	`vthis
()->
∑ges_submôãd
)

1742 
boﬁ
* 
ªtúe
 = 
_pwc
->
	`vthis
()->retire;

1743 if(
ªtúe
 && *retire)

1744 
d⁄e
;

1747 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_pwc
->
_wake_¶aves
, &_pwc->
_pwc_lock
));

1752 
ödex
 = 
_pwc
->
∑ges_˛aimed
;

1753 
íd
 = 
°d
::
	`mö
(
_pwc
->
∑ges_submôãd
,

1754 
ödex
 + 8*
smÀvñ_0
::
max_m™y_∑ges
);

1756 
_pwc
->
∑ges_˛aimed
 = 
íd
;

1758 
cou¡
 = 
íd
 - 
ödex
;

1761 
	`w_as£π1
(
_pwc
->
pids
 !
NULL
);

1762 
pids
 = 
_pwc
->pids+
ödex
;

1766 
rc
 = 
smÀvñ_0
::
bf
->
	`_˛ón_£gmít
(
cou¡
, 
pids
, 
pbuf
,

1767 
WAIT_IMMEDIATE
, &
_pwc
->
ˇn˚l¶aves
 );

1770 if(
rc
.
	`is_îr‹
()

1771 && 
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eBPFORCEFAILED
) {

1772 
rc
 = 
RCOK
;

1776 
	`w_as£π0
(!
rc
.
	`is_îr‹
()

1777 || 
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eBPFORCEFAILED
);

1781 
d⁄e
:

1783 
	}
}

1797 
rc_t


1798 
	gbf_m
::
	$_˛ón_buf
(

1799 
bf_∑ge_wrôî_c⁄åﬁ_t
 * 
pwc
,

1802 
cou¡
,

1803 
Õid_t
 
pids
[],

1804 
timeout_ö_ms
 
timeout
,

1806 
boﬁ
* 
ªtúe_Êag
)

1812 
	`qs‹t
(
pids
, 
cou¡
, (
Õid_t
), 
cmp_Õid
);

1814 if(!
pwc
) {

1816 
∑ge_s
* 
pbuf
 = 
√w
Öage_s[
max_m™y_∑ges
];

1817 
w_rc_t
 
rc
 = 
	`_˛ón_£gmít
(
cou¡
, 
pids
, 
pbuf
, 
timeout
, 
ªtúe_Êag
);

1818 
dñëe
 [] 
pbuf
;

1819  
rc
;

1822 
	`CRITICAL_SECTION
(
cs
, 
pwc
->
_pwc_lock
);

1823 
	`w_as£π1
(
pwc
->
∑ges_submôãd
 == 0);

1824 
pwc
->
pids
 =Öids;

1825 
pwc
->
∑ges_submôãd
 = 
cou¡
;

1826 
pwc
->
∑ges_wrôãn
 =Öwc->
∑ges_˛aimed
 = 0;

1827 
pwc
->
ˇn˚l¶aves
 = 
Ál£
;

1828 
pwc
->
thªad_rc
 = 
RCOK
;

1830 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
pwc
->
_wake_¶aves
));

1832 
pwc
->
∑ges_wrôãn
 <Öwc->
∑ges_submôãd
)

1834 if(
pwc
->
thªad_rc
.
	`is_îr‹
())

1835 
pwc
->
ˇn˚l¶aves
 = 1;

1836 if(
ªtúe_Êag
 && *retire_flag) {

1837 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
pwc
->
_wake_¶aves
));

1840 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
pwc
->
_wake_ma°î
, &pwc->
_pwc_lock
));

1843 
pwc
->
∑ges_submôãd
 =Öwc->
∑ges_˛aimed
 =Öwc->
∑ges_wrôãn
 = 0;

1844 
pwc
->
pids
 = 0;

1846  
pwc
->
thªad_rc
;

1847 
	}
}

1849 
	gbfcb_t
::
	$£t_ªc_l¢
(c⁄° 
l¢_t
 &
wh©
) {

1852 
	`w_as£π0
(
œtch
.
	`is_möe
());

1853 
	`w_as£π0
(!
wh©
.
	`vÆid
(Ë|| !
smÀvñ_0
::
log


1854 || 
wh©
 >
smÀvñ_0
::
log
->
	`globÆ_mö_l¢
());

1855 
_ªc_l¢
 = 
wh©
;

1856 
	}
}

1858 
	gbfcb_t
::
	$m¨k_˛ón
() {

1863 
_dúty
 = 
Ál£
;

1864 
	`memb¨_¥odu˚r
();

1865 
_ªc_l¢
 = 
l¢_t
::
nuŒ
;

1866 
	}
}

1900 
rc_t


1901 
	gbf_m
::
	$_˛ón_£gmít
(

1902 
cou¡
,

1903 
Õid_t
* 
pids
,

1904 
∑ge_s
* 
pbuf
,

1906 
timeout_ö_ms
 
timeout
,

1909 
boﬁ
* 
ˇn˚l_Êag


1912 
Õid_t
 
fú°_pid
;

1913 
bfcb_t
* 
b∑ºay
[
max_m™y_∑ges
];

1916 
±hªad_muãx_t
* 
∑ge_locks
[2] = {
NULL
,NULL};

1922 
boﬁ
 
f‹˚_Áûed
 = 
Ál£
;

1925 
c⁄£cutive
 = 0;

1926 
	`w_as£π1
(
∑ge_locks
[0] =
NULL
);

1927 
	`w_as£π1
(
∑ge_locks
[1] =
NULL
);

1930 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
 = 0;)

1932 
i
=0; i < 
cou¡
; i++)

1934 
boﬁ
 
skù≥d
 = 
åue
;

1935 
Õid_t
 &
p
 = 
pids
[
i
];

1936 
bfcb_t
* 
bp
;

1937 
rc_t
 
rc
 = 
_c‹e
->
	`föd
(
bp
, 
p
, 
LATCH_SH
, 
timeout
);

1940 if(!
rc
.
	`is_îr‹
())

1942 if–
bp
->
	`dúty
() )

1944 
skù≥d
 = 
Ál£
;

1945 
±hªad_muãx_t
** 
lock_acquúed
 = 
NULL
;

1947 if(
c⁄£cutive
 == 0) {

1952 
fú°_pid
 = 
p
;

1953 
	`w_as£π2
(
∑ge_locks
[0] =
NULL
);

1954 
	`w_as£π3
(
∑ge_locks_ow√d
 == 0) ;

1955 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(
∑ge_locks
[0] =

1956 
∑ge_wrôe_muãx_t
::
	`loˇã
(
p
)));

1957 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
 ++;)

1958 
lock_acquúed
 = &
∑ge_locks
[0];

1962 
	`w_as£π2
(
∑ge_locks
[1] =
NULL
);

1965 
∑ge_locks
[1] = 
NULL
;

1966 
	`w_as£π3
(
∑ge_locks_ow√d
 == 1);

1970 
	`w_as£π2
(
∑ge_locks
[0] !
NULL
);

1971 
	`w_as£π3
(
∑ge_locks_ow√d
 >= 1);

1973 
	`w_as£π1
(
p
.
∑ge
 ==

1974 
fú°_pid
.
∑ge
+
c⁄£cutive
 && 
p
.
	`vﬁ
() ==

1975 
fú°_pid
.
	`vﬁ
());

1980 
±hªad_muãx_t
* 
m2
 = 
∑ge_wrôe_muãx_t
::
	`loˇã
(
p
);

1985 
	`w_as£π2
((
∑ge_locks
[1] =
NULL
)

1986 || (
∑ge_locks
[1] =
m2
) );

1988 if(
∑ge_locks
[0] !
m2
 &&Öage_locks[1]==
NULL
) {

1989 
	`w_as£π3
(
∑ge_locks_ow√d
 == 1);

1990 
	`±hªad_muãx_lock
(
∑ge_locks
[1] = 
m2
);

1991 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
 ++;)

1992 
lock_acquúed
 = &
∑ge_locks
[1];

1996 
	`w_as£π2
((
∑ge_locks
[1] =
m2
)

1997 || (
∑ge_locks
[0] =
m2
) );

1999 
	`w_as£π3
((
∑ge_locks_ow√d
 == 1)

2000 ||(
∑ge_locks_ow√d
 == 2));

2003 
	`w_as£π2
(
bp
->
œtch
.
	`hñd_by_me
(Ë=
åue
);

2005 if(
_c‹e
->
	`_ö_hèb
(
bp
Ë&& bp->
	`dúty
()) {

2007 
	`w_as£π0
(
bp
->
	`cuº_ªc_l¢
().
	`vÆid
());

2008 
	`w_as£π0
(!
bp
->
	`ﬁd_ªc_l¢
().
	`vÆid
());

2009 
	`w_as£π1
(
c⁄£cutive
 < 
smÀvñ_0
::
max_m™y_∑ges
);

2010 
pbuf
[
c⁄£cutive
] = *
bp
->
	`‰ame
();

2011 
b∑ºay
[
c⁄£cutive
] = 
bp
;

2014 
bp
->
	`ßve_ªc_l¢
();

2015 
bp
->
	`m¨k_˛ón
();

2017 
	`w_as£π2
 (

2019 (
bp
->
	`cuº_ªc_l¢
(Ë<bp->
	`‰ame
()->
l¢1
) ||

2021 ((
bp
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
)

2022 =
smÀvñ_0
::
°_tmp
) ||

2025 
smÀvñ_0
::
	`ö_ªcovîy_ªdo
()

2027 
c⁄£cutive
++;

2033 
skù≥d
 = 
åue
;

2034 
	`w_as£π0
(
lock_acquúed
);

2035 
	`±hªad_muãx_u∆ock
(*
lock_acquúed
);

2036 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
 --;)

2037 
	`INC_TSTAT
(
bf_dúty_∑ge_˛ó√d
);

2038 *
lock_acquúed
 = 
NULL
;

2042 
_c‹e
->
	`u≈ö
(
bp
);

2045 
	`w_as£π1
(
bp
->
œtch
.
	`hñd_by_me
(Ë=
Ál£
);

2046 if(
rc
.
	`îr_num
(Ë=
eFRAMENOTFOUND
) {

2050 
	`INC_TSTAT
(
bf_Æªady_evi˘ed
);

2053 
f‹˚_Áûed
 = 
åue
;

2055 
	`w_as£π2
(
skù≥d
);

2063 if(
c⁄£cutive
 > 0)

2085 
boﬁ
 
should_Êush
 =

2086 
skù≥d


2087 || (
i
+1 =
cou¡
)

2088 || (
c⁄£cutive
 =
max_m™y_∑ges
)

2089 || (
timeout
 !
WAIT_IMMEDIATE
)

2092 if(!
should_Êush
)

2094 
Õid_t
 c⁄° &
√xt_pid
 = 
pids
[
i
+1];

2095 if(
fú°_pid
.
∑ge
+
c⁄£cutive
 !
√xt_pid
.page

2096 || 
fú°_pid
.
	`vﬁ
(Ë!
√xt_pid
.vol())

2099 
should_Êush
 = 
åue
;

2102 if(
∑ge_wrôe_muãx_t
::
	`loˇã
(
√xt_pid
)

2103 < 
∑ge_wrôe_muãx_t
::
	`loˇã
(
fú°_pid
))

2106 
should_Êush
 = 
åue
;

2110 if(
should_Êush
)

2112 #i‡
W_DEBUG_LEVEL
 > 1

2115 
	`w_as£π3
((
∑ge_locks_ow√d
 == 1)

2116 ||(
∑ge_locks_ow√d
 == 2));

2117 
	`w_as£π2
(
∑ge_locks
[0] !
NULL
);

2118 
	`w_as£π3
–(
∑ge_locks_ow√d
 =1Ë=(
∑ge_locks
[1] =
NULL
) );

2121 
	`W_COERCE
–
	`_wrôe_out
(
pbuf
, 
c⁄£cutive
) );

2131 
c⁄£cutive
 > 0)

2138 
c⁄£cutive
--;

2139 
∑ge_s
* 
ps
 = &
pbuf
[
c⁄£cutive
];

2140 
bfcb_t
* 
bp
 = 
b∑ºay
[
c⁄£cutive
];

2142 
boﬁ
 
MAYBE_UNUSED
 
	`bŸh
(
Ál£
);

2143 
±hªad_muãx_t
* 
thi•agñock
 =

2144 
∑ge_wrôe_muãx_t
::
	`loˇã
(
ps
->
pid
);

2145 if(
thi•agñock
 !
∑ge_locks
[1]) {

2146 
	`w_as£π1
(
thi•agñock
 =
∑ge_locks
[0]) ;

2147 
bŸh
 = 
åue
;

2152 
	`w_as£π0
(
ps
->
pid
.
∑ge
 =
bp
->
	`pid
().page);

2154 
	`w_as£π0
(
bp
->
	`ﬁd_ªc_l¢
().
	`vÆid
());

2157 
bp
->
	`˛r_ﬁd_ªc_l¢
();

2161 
	`w_as£π1
(
∑ge_locks
[0] !
NULL
);

2162 if(
∑ge_locks
[1])

2164 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(
∑ge_locks
[1]));

2165 
∑ge_locks
[1] = 0;

2166 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
--;)

2168 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(
∑ge_locks
[0]));

2169 
∑ge_locks
[0] = 0;

2170 
	`W_IFDEBUG3
(
∑ge_locks_ow√d
--;)

2181 i‡(
ˇn˚l_Êag
 && *ˇn˚l_ÊagË 
RCOK
;

2182 
	`w_as£π1
(
∑ge_locks
[0] =
NULL
);

2183 
	`w_as£π1
(
∑ge_locks
[1] =
NULL
);

2188 
	`w_as£π1
(
timeout
 =
WAIT_IMMEDIATE
 || !
f‹˚_Áûed
);

2190  
f‹˚_Áûed
? 
	`RC
(
eBPFORCEFAILED
Ë: 
RCOK
;

2191 
	}
}

2200 
	gbf_m
::
	$a˘iv©e_background_Êushög
(
vid_t
 *
v
)

2203 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_thªads_li°_muãx
);

2204 i‡(
_˛ó√r_thªads
) {

2205 
bf_˛ó√r_thªad_t
 *
t
;

2206 
w_li°_i
<
bf_˛ó√r_thªad_t
, 
queue_ba£d_block_lock_t
>

2207 
	`i
(*
_˛ó√r_thªads
);

2208 (
t
 = 
i
.
	`√xt
())) {

2209 if(
v
) {

2210 if(
t
->
	`vﬁ
(Ë=*
v
) {

2211 
t
->
	`a˘iv©e
();

2214 
t
->
	`a˘iv©e
(
åue
);

2218 if(!
smÀvñ_0
::
shuâög_down
) {

2219 
	`W_IGNORE
(
	`f‹˚_Æl
());

2226 
	}
}

2239 
rc_t


2240 
	gbf_m
::
	$_wrôe_out
(c⁄° 
∑ge_s
* 
pbuf
, 
uöt4_t
 
˙t
)

2242 
uöt4_t
 
i
;

2248 
l¢_t
 
highe°
 =Ü¢_t::
nuŒ
;

2249 
i
 = 0; i < 
˙t
; i++)

2256 i‡(
log
) {

2257 
l¢_t
 
l¢
 = 
pbuf
[
i
].
l¢1
;

2258 i‡(
l¢
.
	`vÆid
()) {

2259 if(
l¢
 > 
highe°
) {

2260 
highe°
 = 
l¢
;

2279 if(
highe°
 > 
l¢_t
::
nuŒ
 && 
log
) {

2280 
	`INC_TSTAT
(
bf_log_Êush_l¢
);

2281 
	`W_COERCE
–
log
->
	`Êush
(
highe°
) );

2284 
io
->
	`wrôe_m™y_∑ges
(
pbuf
, 
˙t
);

2285 
	`_ö¸_∑ge_wrôe
(
˙t
, 
åue
);

2287  
RCOK
;

2288 
	}
}

2309 
rc_t


2310 
	gbf_m
::
	$_ª∂a˚_out
(
bfcb_t
* 
b
)

2312 
	`INC_TSTAT
(
bf_ª∂a˚d_dúty
);

2314 
	`w_as£π3
(
b
);

2315 
	`w_as£π1
(
	`is_ˇched
(
b
Ë=
Ál£
);

2316 
	`w_as£π1
(
b
->
œtch
.
	`is_möe
(Ë=
åue
);

2317 
	`w_as£π1
(
b
->
œtch
.
	`hñd_by_me
(Ë=
åue
);

2319 i‡(
log
) {

2320 
l¢_t
 
l¢
 = 
b
->
	`‰ame
()->
l¢1
;

2321 i‡(
l¢
.
	`vÆid
()) {

2322 
	`INC_TSTAT
(
bf_log_Êush_l¢
);

2324 
	`W_COERCE
(
log
->
	`Êush
(
l¢
));

2328 
	`w_as£π1
(!
b
->
	`dúty
());

2332 #i‡
W_DEBUG_LEVEL
 > 5

2335 
w_o°r°ªam
 
s
;

2336 
s
 << "_ª∂a˚_ouàtm∞pid " << 
b
->
	`pid
()

2337 << "Öagêl¢ " << 
b
->
	`‰ame
()->
l¢1


2339 << (
b
->
	`gë_°‹eÊags
(Ë& 
°_tmp
) ;

2340 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
());

2343 
	`w_as£π1
(
b
->
œtch
.
	`is_möe
(Ë=
åue
);

2344 
	`w_as£π1
(
b
->
œtch
.
	`hñd_by_me
(Ë=
åue
);

2346 
io
->
	`wrôe_m™y_∑ges
(
b
->
	`‰ame
(), 1);

2347 
	`_ö¸_∑ge_wrôe
(1, 
Ál£
);

2354 
	`w_as£π1
(
b
->
œtch
.
	`is_möe
(Ë=
åue
);

2355 
	`w_as£π1
(
b
->
œtch
.
	`hñd_by_me
(Ë=
åue
);

2359 
b
->
	`m¨k_˛ón
();

2361  
RCOK
;

2362 
	}
}

2374 
rc_t


2375 
	gbf_m
::
gë_∑ge
(

2376 c⁄° 
Õid_t
& 
pid
,

2377 
bfcb_t
* 
b
,

2378 
uöt2_t
 
W_IFDEBUG2
(
±ag
),

2379 
boﬁ
 
no_ªad
,

2380 
boﬁ
 
	$W_IFDEBUG2
(
ign‹e_°‹e_id
))

2383 i‡(! 
no_ªad
) {

2384 
	`W_DO
–
io
->
	`ªad_∑ge
(
pid
, *
b
->
	`‰ame_n⁄c⁄°
()) );

2390 i‡(! 
no_ªad
) {

2392 
b
->
	`‰ame_n⁄c⁄°
()->
∑ge_Êags
 &~
∑ge_p
::
t_vúgö
;

2393 
b
->
	`‰ame_n⁄c⁄°
()->
∑ge_Êags
 |
∑ge_p
::
t_wrôãn
;

2395 #i‡
W_DEBUG_LEVEL
>1

2409 i‡(
b
->
	`‰ame
()->
l¢1
 =
l¢_t
::
nuŒ
) {

2410 
	`w_as£π3
(
b
->
	`‰ame
()->
pid
.
∑ge
 == 0);

2412 
	`w_as£π3
(
pid
.
∑ge
 =
b
->
	`‰ame
()->pid.page &&

2413 
pid
.
	`vﬁ
(Ë=
b
->
	`‰ame
()->pid.vol());

2414 if–
pid
.
	`°‹e
(Ë!
b
->
	`‰ame
()->pid.store() ) {

2415 if(! 
ign‹e_°‹e_id
) {

2416 
w_o°r°ªam
 
s
;

2417 
s
 << "bad st‹ênumbî " << 
b
->
	`‰ame
()->
pid
.
	`°‹e
()

2418 << "Éx≥˘ed " << 
pid
.
	`°‹e
()

2419 << ";Öagêèg " << 
b
->
	`‰ame
()->
èg


2420 << "Éx≥˘edÅag " << 
±ag


2421 << "; st‹êÊag†" << 
b
->
	`gë_°‹eÊags
()

2422 << ";Ü¢1 " << 
b
->
	`‰ame
()->
l¢1
;

2423 
	`Ârötf
(
°dîr
, "O¿∑gêfix: %s\n", 
s
.
	`c_°r
());

2426 
	`w_as£π3
(
ign‹e_°‹e_id
 ||

2427 
pid
.
	`°‹e
(Ë=
b
->
	`‰ame
()->pid.store());

2432  
RCOK
;

2433 
	}
}

2445 
rc_t


2446 
	gbf_m
::
	$íabÀ_background_Êushög
(
vid_t
 
v
)

2449 
boﬁ
 
îr‹
;

2450 i‡(!
›ti⁄_t
::
	`°r_to_boﬁ
(
_backgroundÊush
->
	`vÆue
(), 
îr‹
)) {

2452  
RCOK
;

2456 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_thªads_li°_muãx
);

2458 
bf_˛ó√r_thªad_t
 *
t
;

2460 
w_li°_i
<
bf_˛ó√r_thªad_t
, 
queue_ba£d_block_lock_t
> 
	`i
(*
_˛ó√r_thªads
);

2461 (
t
 = 
i
.
	`√xt
())) {

2462 if(
t
->
	`vﬁ
(Ë=
v
) {

2464  
RCOK
;

2472 
t
 = 
√w
 
	`bf_˛ó√r_thªad_t
(
v
);

2473 i‡(! 
t
)

2474  
	`RC
(
eOUTOFMEMORY
);

2475 
_˛ó√r_thªads
->
	`push
(
t
);

2476 
rc_t
 
e
 = 
t
->
	`f‹k
();

2477 i‡(
e
.
	`is_îr‹
()) {

2479 
t
->
_lök
.
	`dëach
();

2480 
dñëe
 
t
;

2481  
e
;

2484  
RCOK
;

2485 
	}
}

2497 
rc_t


2498 
	gbf_m
::
	$dißbÀ_background_Êushög
()

2501 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_thªads_li°_muãx
);

2502 
bf_˛ó√r_thªad_t
 *
t
;

2503 
w_li°_i
<
bf_˛ó√r_thªad_t
, 
queue_ba£d_block_lock_t
>

2504 
	`i
(*
_˛ó√r_thªads
);

2508 (
t
 = 
i
.
	`√xt
())) {

2509 
t
->
	`ªtúe
();

2510 
t
->
_lök
.
	`dëach
();

2511 
dñëe
 
t
;

2514  
RCOK
;

2515 
	}
}

2517 
rc_t


2518 
	gbf_m
::
	$dißbÀ_background_Êushög
(
vid_t
 
v
)

2521 
	`CRITICAL_SECTION
(
cs
, 
_˛ó√r_thªads_li°_muãx
);

2522 
bf_˛ó√r_thªad_t
 *
t
;

2524 
w_li°_i
<
bf_˛ó√r_thªad_t
, 
queue_ba£d_block_lock_t
>

2525 
	`i
(*
_˛ó√r_thªads
);

2528 (
t
 = 
i
.
	`√xt
())) {

2529 if(
t
->
	`vﬁ
(Ë=
v
) {

2531 
t
->
	`ªtúe
();

2532 
	`W_COERCE
(
t
->
	`joö
());

2533 
t
->
_lök
.
	`dëach
();

2534 
dñëe
 
t
;

2538  
RCOK
;

2539 
	}
}

2552 
rc_t


2553 
	gbf_m
::
	$gë_ªc_l¢
(&
°¨t
, &
cou¡
, 
Õid_t
 
pid
[], 
l¢_t
 
ªc_l¢
[],

2554 
l¢_t
 &
mö_ªc_l¢
)

2556 
	`w_as£π9
(
°¨t
 >0 && 
cou¡
 > 0);

2557 
	`w_as£π9
(
°¨t
 + 
cou¡
 <
	`≈ages
());

2559 
i
;

2560 
i
 = 0; i < 
cou¡
 && 
°¨t
 < 
	`≈ages
(); start++) {

2561 i‡(
_c‹e
->
_bu·ab
[
°¨t
].
	`dúty
() &&

2562 
_c‹e
->
_bu·ab
[
°¨t
].
	`pid
().
∑ge


2576 
l¢_t
 
æ¢
 = 
_c‹e
->
_bu·ab
[
°¨t
].
	`ß„_ªc_l¢
();

2577 if(
æ¢
 !
l¢_t
::
nuŒ
) {

2578 
pid
[
i
] = 
_c‹e
->
_bu·ab
[
°¨t
].
	`pid
();

2579 
ªc_l¢
[
i
] = 
æ¢
;

2580 if(
mö_ªc_l¢
 > 
ªc_l¢
[
i
]) min_rec_lsn =Ñec_lsn[i];

2581 
i
++;

2583 
	`w_as£π9
(
_c‹e
->
_bu·ab
[
°¨t
].
	`gë_°‹eÊags
(Ë& 
°_tmp
);

2587 
cou¡
 = 
i
;

2589  
RCOK
;

2590 
	}
}

2600 
l¢_t


2601 
	gbf_m
::
	$mö_ªc_l¢
()

2603 
l¢_t
 
l¢
 =Ü¢_t::
max
;

2604 
i
 = 0; i < 
	`≈ages
(); i++) {

2605 
l¢_t
 
ªc_l¢
 = 
_c‹e
->
_bu·ab
[
i
].
	`ß„_ªc_l¢
();

2606 i‡(
_c‹e
->
_bu·ab
[
i
].
	`dúty
() &&

2607 
_c‹e
->
_bu·ab
[
i
].
	`pid
().
∑ge
 &&

2608 
ªc_l¢
 < 
l¢
)

2609 
l¢
 = 
ªc_l¢
;

2611  
l¢
;

2612 
	}
}

2623 
	gbf_m
::
	$dump
(
o°ªam
 &
o
)

2625 
_c‹e
->
	`dump
(
o
);

2626 if(
bf_˛ó√r_thªad_t
::
_hi°ogøm
) {

2627 
j
;

2628 
i
=0; i< 
	`≈ages
()+1; i++) {

2629 
j
 = 
bf_˛ó√r_thªad_t
::
_hi°ogøm
[
i
];

2630 if(
j
!= 0) {

2631 
o
 << 
i
 << "Öages: " << 
j
 << " swìps" <<
ídl
;

2635 
	}
}

2646 
rc_t


2647 
	gbf_m
::
	$_disˇrd_Æl
()

2649  
	`_sˇn
(
	`bf_fûãr_n⁄e_t
(), 
Ál£
 , 
åue
 );

2650 
	}
}

2660 
rc_t


2661 
	gbf_m
::
	$disˇrd_°‹e
(
°id_t
 
°id
)

2664 
	`_sˇn
(
	`bf_fûãr_°‹e_t
(
°id
), 
Ál£
 , 
åue
 );

2665 
	}
}

2675 
rc_t


2676 
	gbf_m
::
	$disˇrd_vﬁume
(
vid_t
 
vid
)

2678  
	`_sˇn
(
	`bf_fûãr_vﬁ_t
(
vid
), 
Ál£
 , 
åue
 );

2679 
	}
}

2690 
rc_t


2691 
	gbf_m
::
	$f‹˚_Æl
(
boﬁ
 
Êush
)

2693  
	`_sˇn
(
	`bf_fûãr_n⁄e_t
(), 
åue
 , 
Êush
 );

2694 
	}
}

2706 
rc_t


2707 
	gbf_m
::
	$f‹˚_°‹e
(
°id_t
 
°id
, 
boﬁ
 
övÆid©e
)

2709  
	`_sˇn
(
	`bf_fûãr_°‹e_t
(
°id
), 
åue
 , 
övÆid©e
);

2710 
	}
}

2722 
rc_t


2723 
	gbf_m
::
	$f‹˚_vﬁume
(
vid_t
 
vid
, 
boﬁ
 
Êush
)

2728  
	`_sˇn
(
	`bf_fûãr_vﬁ_t
(
vid
), 
åue
 , 
Êush
 );

2729 
	}
}

2747 
rc_t


2748 
	gbf_m
::
	$f‹˚_u¡û_l¢
(c⁄° 
l¢_t
& 
l¢
, 
boﬁ
 
Êush
)

2752  
	`_sˇn
(
	`bf_fûãr_l¢_t
(
l¢
), 
åue
 , 
Êush
 );

2753 
	}
}

2839 
rc_t


2840 
	gbf_m
::
	$_sˇn
(c⁄° 
bf_fûãr_t
& 
fûãr
, 
boﬁ
 
wrôe_dúty
, boﬁ 
disˇrd
)

2842 
	`INC_TSTAT
(
bf_fg_sˇn_˙t
);

2843 if(
wrôe_dúty
) {

2850 i‡(
smÀvñ_0
::
log
) {

2851 
	`DBG
(<< "flushingÜog");

2852 
	`INC_TSTAT
(
bf_log_Êush_Æl
);

2853 
	`W_IGNORE
(
smÀvñ_0
::
log
->
	`Êush_Æl
());

2857 
Õid_t
* 
pids
 = 0;

2858 i‡(
wrôe_dúty
 && (
pids
 = 
√w
 
Õid_t
[
	`≈ages
()]))

2861 
w_auto_dñëe_¨øy_t
<
Õid_t
> 
	`auto_dñ
(
pids
);

2866 
cou¡
 = 0;

2867 
i
 = 0; i < 
	`≈ages
(); i++) {

2868 i‡(
fûãr
.
	`is_good
(
bf_c‹e_m
::
_bu·ab
[
i
]) &&

2869 
_c‹e
->
_bu·ab
[
i
].
	`dúty
()) {

2871 
pids
[
cou¡
++] = 
_c‹e
->
_bu·ab
[
i
].
	`pid
();

2875 
	`w_as£π1
(
cou¡
 <
	`≈ages
());

2878 
	`W_DO
(
	`_˛ón_buf
(
NULL
,

2879 
cou¡
, 
pids
, 
WAIT_FOREVER
, 0) );

2880 
	`©omic_add_öt_dñè
(
bf_˛ó√r_thªad_t
::
_ndúty
, -
cou¡
);

2881 i‡(! 
disˇrd
) {

2882  
RCOK
;

2918 
œtch_mode_t
 
mode
 = 
disˇrd
 ? 
LATCH_EX
 : 
LATCH_SH
;

2927 
w_rc_t
 
rc
;

2928 
i
 = 0; i < 
	`≈ages
(); i++) {

2929 i‡(
fûãr
.
	`is_good
(
_c‹e
->
_bu·ab
[
i
])) {

2930 
bfcb_t
* 
b
 = &
_c‹e
->
_bu·ab
[
i
];

2931 
	`w_as£π2
(! 
b
->
œtch
.
	`hñd_by_me
());

2932 
	`w_as£π2
(! 
b
->
œtch
.
	`is_möe
());

2934 
rc
 = 
_c‹e
->
	`föd
(
b
, _c‹e->
_bu·ab
[
i
].
	`pid
(), 
mode
,

2935 
WAIT_FOREVER
);

2938 i‡(
rc
.
	`is_îr‹
()) {

2940 
b
 = &
_c‹e
->
_bu·ab
[
i
];

2949 
	`w_as£π2
(!
b
->
œtch
.
	`is_möe
());

2950 
rc
 = 
_c‹e
->
	`pö
(
b
, 
mode
);

2953 if(
rc
.
	`is_îr‹
()) {

2956 
	`w_as£π2
(!
b
->
œtch
.
	`is_möe
());

2960 
	`w_as£π2
(
b
->
œtch
.
	`is_möe
());

2963 if(! 
fûãr
.
	`is_good
(*
b
)) {

2964 
_c‹e
->
	`u≈ö
(
b
);

2965 
	`w_as£π2
(!
b
->
œtch
.
	`is_möe
());

2970 
	`w_as£π2
(
b
->
œtch
.
	`is_möe
());

2972 
	`w_as£π2
(
b
 =&
_c‹e
->
_bu·ab
[
i
]);

2973 
	`w_as£π2
(
b
->
œtch
.
	`is_möe
());

2975 #i‡
W_DEBUG_LEVEL
 > 1

2983 if(
disˇrd
) {

2984 
	`w_as£π2
(
b
->
	`pö_˙t
() >= 1);

2985 
	`w_as£π2
(
b
->
œtch
.
	`is_möe
());

2988 
	`w_as£π9
(
fûãr
.
	`is_good
(*
b
));

2990 i‡(
wrôe_dúty
 && 
b
->
	`dúty
()) {

2991 #i‡
W_DEBUG_LEVEL
 > 1

2992 i‡(
b
->
	`gë_°‹eÊags
(Ë& 
°_tmp
) {

2993 
˚º
 << "ˇŒög _wrôe_ouàtm∞pid " << 
b
->
	`pid
(Ë<< 
ídl
;

2996 
	`CRITICAL_SECTION
(
cs
, 
∑ge_wrôe_muãx_t
::
	`loˇã
(
b
->
	`pid
()));

2997 
	`w_as£π0
(!
b
->
	`ﬁd_ªc_l¢
().
	`vÆid
());

2998 
rc_t
 
rc
 = 
	`_wrôe_out
(
b
->
	`‰ame
(), 1);

2999 if(
rc
.
	`is_îr‹
()) {

3002 
	`w_as£π9
(0);

3004  
rc
;

3007 
	`w_as£π0
(
b
->
œtch
.
	`is_möe
());

3008 
b
->
	`m¨k_˛ón
();

3011 
	`w_as£π2
(
fûãr
.
	`is_good
(*
b
));

3012 
	`w_as£π2
(
b
->
œtch
.
	`hñd_by_me
());

3014 i‡(
disˇrd
) {

3016 
bfcb_t
* 
tmp
 = 
b
;

3017 
	`w_as£π2
(
b
->
	`pö_˙t
() >= 1);

3018 
w_rc_t
 
rc
 = 
_c‹e
->
	`ªmove
(
tmp
);

3019 i‡(
rc
.
	`is_îr‹
()) {

3021 
	`w_as£π2
(!
b
->
œtch
.
	`is_möe
());

3022 
	`w_as£π2
(
rc
.
	`îr_num
(Ë=
eHOTPAGE
);

3027 
_c‹e
->
	`u≈ö
(
b
);

3031  
RCOK
;

3032 
	}
}

3047 
boﬁ


3048 
	gbf_m
::
	$_£t_dúty
(
bfcb_t
* 
b
)

3050 if–!
b
->
	`dúty
() ) {

3051 
b
->
	`£t_dúty_bô
();

3052 
	`w_as£π2
(
_c‹e
->
	`œtch_mode
(
b
Ë=
LATCH_EX
 ||

3053 
_c‹e
->
	`œtch_mode
(
b
Ë=
LATCH_NLX
);

3066 #i‡
W_DEBUG_LEVEL
 > 2

3067 i‡(
log
 &&

3068 !
smÀvñ_0
::
	`ö_ªcovîy_ªdo
()

3071 
	`DBG
(<< "pid " << 
b
->
	`pid
() <<" mode="

3072 << (
_c‹e
->
	`œtch_mode
(
b
)Ë<< "Ñec_l¢=" << b->
	`cuº_ªc_l¢
());

3073 
	`w_as£π3
(
b
->
œtch
.
	`mode
(Ë=
LATCH_EX
 || b->œtch.mode(Ë=
LATCH_NLX
);

3074 
	`w_as£π3
(
b
->
	`cuº_ªc_l¢
(Ë!
l¢_t
::
nuŒ
);

3075 
	`w_as£π3
(
b
->
	`dúty
());

3078 
ndúty
 = 
	`©omic_öc_nv
(
bf_˛ó√r_thªad_t
::
_ndúty
);

3079 if(
ndúty
 > 
bf_˛ó√r_thªad_t
::
_dúty_thªshﬁd
) {

3080 if(
ndúty
 % (
bf_˛ó√r_thªad_t
::
_dúty_thªshﬁd
/4) == 0) {

3081 
	`INC_TSTAT
(
bf_kick_thªshﬁd
);

3082  
åue
;

3086  
Ál£
;

3087 
	}
}

3103 
rc_t


3104 
	gbf_m
::
	$£t_dúty
(c⁄° 
∑ge_s
* 
buf
)

3106 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

3107 i‡(!
b
) {

3109  
RCOK
;

3111 
	`w_as£π1
(
b
->
	`‰ame
(Ë=
buf
);

3112 if–
	`_£t_dúty
(
b
) ) {

3113 
vid_t
 
v
 = 
b
->
	`pid
().
	`vﬁ
();

3114 
	`a˘iv©e_background_Êushög
(&
v
);

3117  
RCOK
;

3118 
	}
}

3127 
boﬁ


3128 
	gbf_m
::
	$is_dúty
(c⁄° 
∑ge_s
* 
buf
)

3130 
bfcb_t
* 
b
 = 
	`gë_cb
(
buf
);

3131 
	`w_as£π3
(
b
);

3132 
	`w_as£π3
(
b
->
	`‰ame
(Ë=
buf
);

3133  
b
->
	`dúty
();

3134 
	}
}

3144 
	gbf_m
::
	$¢≠shŸ
(

3145 
u_öt
& 
ndúty
,

3146 
u_öt
& 
n˛ón
,

3147 
u_öt
& 
n‰ì
,

3148 
u_öt
& 
nfixed
)

3150 
nfixed
 = 
n‰ì
 = 
ndúty
 = 
n˛ón
 = 0;

3151 
i
 = 0; i < 
	`≈ages
(); i++) {

3152 i‡(
_c‹e
->
_bu·ab
[
i
].
	`pid
().
∑ge
) {

3153 
_c‹e
->
_bu·ab
[
i
].
	`dúty
(Ë? ++
ndúty
 : ++
n˛ón
;

3156 
_c‹e
->
	`¢≠shŸ
(
nfixed
, 
n‰ì
);

3164 
	}
}

3167 
	gbf_m
::
	$¢≠shŸ_me
(

3168 
u_öt
& 
nsh
,

3169 
u_öt
& 
√x
,

3170 
u_öt
& 
ndiff


3173 
_c‹e
->
	`¢≠shŸ_me
(
nsh
, 
√x
, 
ndiff
);

3174 
	}
}

3183 
	gbf_fûãr_°‹e_t
::
	$bf_fûãr_°‹e_t
(c⁄° 
°id_t
& 
°id
)

3184 : 
	$_°id
(
°id
)

3186 
	}
}

3188 
ölöe
 
boﬁ


3189 
bf_fûãr_°‹e_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3191  
p
.
	`pid
().
∑ge
 && (p.pid().
	`°id
(Ë=
_°id
);

3192 
	}
}

3194 
NORET


3195 
	gbf_fûãr_vﬁ_t
::
	$bf_fûãr_vﬁ_t
(c⁄° 
vid_t
& 
vid
)

3196 : 
	$_vid
(
vid
)

3198 
	}
}

3200 
boﬁ


3201 
bf_fûãr_vﬁ_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3203  
p
.
	`pid
().
∑ge
 && (p.pid().
	`vﬁ
(Ë=
_vid
);

3204 
	}
}

3206 
NORET


3207 
	gbf_fûãr_n⁄e_t
::
	$bf_fûãr_n⁄e_t
()

3209 
	}
}

3211 
boﬁ


3212 
bf_fûãr_n⁄e_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3214  
p
.
	`pid
(Ë!
Õid_t
::
nuŒ
;

3215 
	}
}

3217 
NORET


3218 
	gbf_fûãr_swìp_t
::
	$bf_fûãr_swìp_t
(
boﬁ
 
urgít
, 
vid_t
 
v
)

3219 : 
	`_urgít
(
urgít
), 
	$_vﬁ
(
v
)

3221 
	}
}

3223 
boﬁ


3224 
	gbf_fûãr_swìp_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3226 if–
p
.
	`pid
().
_°id
.
vﬁ
 !
_vﬁ
Ë 
Ál£
;

3227 if–! 
p
.
	`pid
().
∑ge
Ë 
Ál£
;

3229 if–
p
.
	`hŸbô
() ) {

3234 i‡(!
_urgít
) {

3235 
	`INC_TSTAT
(
bf_swìp_∑ge_hŸ_skù≥d
);

3236  
Ál£
;

3239  
p
.
	`dúty
();

3240 
	}
}

3242 
NORET


3243 
	gbf_fûãr_swìp_ﬁd_t
::
	$bf_fûãr_swìp_ﬁd_t
(
log_£gmít
,

3244 
boﬁ
 
urgít
, 
vid_t
 
v
 )

3245 : 
	`_£gmít
(
log_£gmít
), 
	`_vﬁ
(
v
), 
	$_urgít
(
urgít
)

3247 
	}
}

3249 
boﬁ
 
	gbf_fûãr_swìp_ﬁd_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3251 if–
p
.
	`pid
().
_°id
.
vﬁ
 !
_vﬁ
Ë 
Ál£
;

3252 if–! 
p
.
	`pid
().
∑ge
Ë 
Ál£
;

3253 if–! 
p
.
	`cuº_ªc_l¢
().
	`hi
(Ë=
_£gmít
 )  
Ál£
;

3255 if–
p
.
	`hŸbô
() ) {

3260 i‡(!
_urgít
) {

3261 
	`INC_TSTAT
(
bf_swìp_∑ge_hŸ_skù≥d
);

3262  
Ál£
;

3267  
p
.
	`dúty
();

3268 
	}
}

3270 
NORET


3271 
	gbf_fûãr_l¢_t
::
	$bf_fûãr_l¢_t
(c⁄° 
l¢_t
& 
l¢
)

3272 : 
	$_l¢
(
l¢
)

3274 
	}
}

3277 
boﬁ


3278 
bf_fûãr_l¢_t
::
	$is_good
(c⁄° 
bfcb_t
& 
p
) const

3284 #i‡
W_DEBUG_LEVEL
 > 2

3285 if–! 
p
.
	`pid
().
∑ge
 ) {

3286 
	`w_as£π3
(! 
p
.
	`cuº_ªc_l¢
().
	`vÆid
() );

3292 
p
.
	`cuº_ªc_l¢
().
	`vÆid
()

3294 (
p
.
	`cuº_ªc_l¢
(Ë<
_l¢
);

3295 
	}
}

3300 
	gbf_m
::
	$cﬁÀ˘
(
vèbÀ_t
 &
ªs
, 
boﬁ
 
«mes_too
)

3302  
_c‹e
->
	`cﬁÀ˘
(
ªs
, 
«mes_too
);

3303 
	}
}

3307 
	gbf_m
::
	$hèb_°©s
(
bf_hèb_°©s_t
 &
out
) const

3309 if(
_c‹e
Ë_c‹e->
	`hèb_°©s
(
out
);

3310 
	}
}

3314 
boﬁ


3315 
	gbf_m
::
	$check_l¢_öv¨ü¡
(c⁄° 
∑ge_s
 *
∑ge
)

3317 
bfcb_t
 *
b
 = 
bf_m
::
	`gë_cb
(
∑ge
);

3318  
	`check_l¢_öv¨ü¡
(
b
);

3319 
	}
}

3320 
boﬁ


3321 
	gbf_m
::
	$check_l¢_öv¨ü¡
(c⁄° 
bfcb_t
 *
b
)

3326 
	`w_as£π1
(
_c‹e
->
	`_ö_hèb
(
b
));

3328 
boﬁ
 
dúty
 = 
b
->
	`dúty
();

3329 
boﬁ
 
is_tmp
 = (
b
->
	`gë_°‹eÊags
(Ë& 
°_tmp
) == st_tmp;

3330 
l¢_t
 
ªc_l¢
 = 
b
->
	`cuº_ªc_l¢
();

3331 
l¢_t
 
∑ge_l¢
 = 
b
->
	`‰ame
()->
l¢1
;

3333 if(
ªc_l¢
.
	`vÆid
()) {

3335 if(
dúty
) {

3339 
	`w_as£π0
(
is_tmp
 || 
∑ge_l¢
 >
ªc_l¢
);

3349 
	`w_as£π0
(
b
->
œtch
.
	`is_möe
());

3350 
	`w_as£π0
(
is_tmp
 || 
∑ge_l¢
 <
ªc_l¢
);

3354 if(
dúty
) {

3356 
	`w_as£π0
(
smÀvñ_0
::
	`ö_ªcovîy_ªdo
());

3357 
	`w_as£π0
(
b
->
œtch
.
	`is_möe
());

3360 
	`w_as£π0
(
b
->
œtch
.
	`is_möe
()==
Ál£
);

3361 
	`w_as£π0
(
is_tmp
 || 
∑ge_l¢
 >
ªc_l¢
);

3365  
åue
;

3366 
	}
}

	@src/sm/bf.h

53 #i‚de‡
BF_H


54 
	#BF_H


	)

56 
	~"w_deföes.h
"

69 
	~<bf_s.h
>

70 
	~<∑ge_s.h
>

72 #ifde‡
__GNUG__


73 #¥agm®
öãrÁ˚


76 
	gbfcb_t
;

77 
˛ass
 
	g∑ge_p
;

78 
˛ass
 
	gbf_c‹e_m
;

79 
˛ass
 
	gbf_˛ó√r_thªad_t
;

80 
˛ass
 
	gbf_fûãr_t
;

81 
	gbf_∑ge_wrôî_c⁄åﬁ_t
;

83 ˛as†
	cbf_m
 : 
public
 
smÀvñ_0


85 
‰õnd
 
˛ass
 
bf_˛ó√r_thªad_t
;

86 
‰õnd
 
˛ass
 
	m∑ge_wrôî_thªad_t
;

87 
‰õnd
 
˛ass
 
	mbfcb_t
;

88 #ifde‡
HTAB_UNIT_TEST_C


89 
‰õnd
 
˛ass
 
	mhèb_ã°î
;

92 
	mpublic
:

93 
NORET
 
bf_m
(
uöt4_t
 
max
, *
bf
, uöt4_à
pg_wrôî_˙t
);

94 
	mNORET
 ~
bf_m
();

96 
cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

97 
mem_√eded
(
n
);

99 
≈ages
();

101 
boﬁ
 
is_ˇched
(c⁄° 
bfcb_t
* 
e
);

103 
rc_t
 
fix
(

104 
∑ge_s
*& 
∑ge
,

105 c⁄° 
Õid_t
& 
pid
,

106 
uöt2_t
 
èg
,

107 
œtch_mode_t
 
mode
,

108 
boﬁ
 
no_ªad
,

109 
°‹e_Êag_t
& 
out_°Êags
,

110 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

111 
°‹e_Êag_t
 
°Êags
 = 
°_bad


114 
rc_t
 
c⁄dôi⁄Æ_fix
(

115 
∑ge_s
*& 
∑ge
,

116 c⁄° 
Õid_t
& 
pid
,

117 
uöt2_t
 
èg
,

118 
œtch_mode_t
 
mode
,

119 
boﬁ
 
no_ªad
,

120 
°‹e_Êag_t
& 
out_°Êags
,

121 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

122 
°‹e_Êag_t
 
°Êags
 = 
°_bad


125 
rc_t
 
ªfix
(

126 c⁄° 
∑ge_s
* 
p
,

127 
œtch_mode_t
 
mode
);

129 
rc_t
 
gë_∑ge
(

130 c⁄° 
Õid_t
& 
pid
,

131 
bfcb_t
* 
b
,

132 
uöt2_t
 
±ag
,

133 
boﬁ
 
no_ªad
,

134 
boﬁ
 
ign‹e_°‹e_id
);

138 
upgøde_œtch_if_nŸ_block
(

139 c⁄° 
∑ge_s
* 
p
,

141 
boﬁ
& 
would_block
);

143 
œtch_mode_t
 
œtch_mode
(

144 c⁄° 
∑ge_s
* 
p


147 
upgøde_œtch
(

148 
∑ge_s
*& 
p
,

149 
œtch_mode_t
 
m


152 
unfix
(

153 c⁄° 
∑ge_s
* 
buf
,

154 
boﬁ
 
dúty
 = 
Ál£
,

155 
ªfbô
 = 1);

157 
	$unfix_dúty
(

158 c⁄° 
∑ge_s
*& 
buf
,

159 
ªfbô
 = 1) {

160 
	`unfix
(
buf
, 
åue
, 
ªfbô
);

163 
rc_t
 
	`£t_dúty
(c⁄° 
∑ge_s
* 
buf
);

164 
boﬁ
 
	`is_dúty
(c⁄° 
∑ge_s
* 
buf
) ;

166 
	`disˇrd_pö√d_∑ge
(c⁄° 
∑ge_s
* 
buf
);

167 
rc_t
 
	`disˇrd_°‹e
(
°id_t
 
°id
);

168 
rc_t
 
	`disˇrd_vﬁume
(
vid_t
 
vid
);

169 
¥iv©e
:

170 
boﬁ
 
	`_£t_dúty
(
bfcb_t
 *
b
);

171 
rc_t
 
	`_disˇrd_Æl
();

172 
public
:

175 
boﬁ
 
	`check_l¢_öv¨ü¡
(c⁄° 
∑ge_s
 *
∑ge
);

176 
boﬁ
 
	`check_l¢_öv¨ü¡
(c⁄° 
bfcb_t
 *
b
);

178 
rc_t
 
	`f‹˚_°‹e
(

179 
°id_t
 
°id
,

180 
boﬁ
 
Êush
);

181 
rc_t
 
	`f‹˚_∑ge
(

182 c⁄° 
Õid_t
& 
pid
,

183 
boﬁ
 
Êush
 = 
Ál£
);

184 
rc_t
 
	`f‹˚_u¡û_l¢
(

185 c⁄° 
l¢_t
& 
l¢
,

186 
boﬁ
 
Êush
 = 
Ál£
);

187 
rc_t
 
	`f‹˚_Æl
(
boﬁ
 
Êush
 = 
Ál£
);

188 
rc_t
 
	`f‹˚_vﬁume
(

189 
vid_t
 
vid
,

190 
boﬁ
 
Êush
 = 
Ál£
);

192 
boﬁ
 
	`is_möe
(c⁄° 
∑ge_s
* 
buf
) ;

193 c⁄° 
œtch_t
* 
	`my_œtch
(c⁄° 
∑ge_s
* 
buf
) ;

194 
boﬁ
 
	`fixed_by_me
(c⁄° 
∑ge_s
* 
buf
) ;

195 
boﬁ
 
	`is_bf_∑ge
(c⁄° 
∑ge_s
* 
p
,

196 
boﬁ
 
™d_ö_hèb
 = 
åue
);

199 
boﬁ
 
	$f‹˚_my_dúty_ﬁd_∑ges
(
Õid_t
 const*

200 
wÆ_∑ge
=0) const;

202 
bfcb_t
* 
	`gë_cb
(c⁄° 
∑ge_s
*) ;

204 
	`dump
(
o°ªam
 &
o
);

205 
	`°©s
(

206 
u_l⁄g
& 
fixes
,

207 
u_l⁄g
& 
unfixes
,

208 
boﬁ
 
ª£t
);

209 
	$hèb_°©s
(
bf_hèb_°©s_t
 &) const;

212 
	`¢≠shŸ
(

213 
u_öt
& 
ndúty
,

214 
u_öt
& 
n˛ón
,

215 
u_öt
& 
n‰ì
,

216 
u_öt
& 
nfixed
);

218 
	`¢≠shŸ_me
(

219 
u_öt
& 
nsh
,

220 
u_öt
& 
√x
,

221 
u_öt
& 
ndiff


224 
l¢_t
 
	`mö_ªc_l¢
();

225 
rc_t
 
	`gë_ªc_l¢
(

226 &
°¨t_idx
,

227 &
cou¡
,

228 
Õid_t
 
pid
[],

229 
l¢_t
 
ªc_l¢
[],

230 
l¢_t
 &
mö_ªc_l¢


233 
rc_t
 
	`íabÀ_background_Êushög
(
vid_t
 
v
);

234 
rc_t
 
	`dißbÀ_background_Êushög
(
vid_t
 
v
);

235 
rc_t
 
	`dißbÀ_background_Êushög
();

237 
	`a˘iv©e_background_Êushög
(
vid_t
 *
v
=0);

239 
¥iv©e
:

240 
bf_c‹e_m
* 
_c‹e
;

242 
rc_t
 
	`_fix
(

243 
timeout_ö_ms
 
timeout
,

244 
∑ge_s
*& 
∑ge
,

245 c⁄° 
Õid_t
& 
pid
,

246 
uöt2_t
 
èg
,

247 
œtch_mode_t
 
mode
,

248 
boﬁ
 
no_ªad
,

249 
°‹e_Êag_t
& 
ªtu∫_°‹e_Êags
,

250 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

251 
°‹e_Êag_t
 
°Êags
 = 
°_bad


254 
rc_t
 
	`_sˇn
(

255 c⁄° 
bf_fûãr_t
& 
fûãr
,

256 
boﬁ
 
wrôe_dúty
,

257 
boﬁ
 
disˇrd
);

259 
rc_t
 
	`_wrôe_out
(c⁄° 
∑ge_s
* 
b
, 
uöt4_t
 
˙t
);

260 
rc_t
 
	`_ª∂a˚_out
(
bfcb_t
* 
b
);

262 
w_li°_t
<
bf_˛ó√r_thªad_t
, 
queue_ba£d_block_lock_t
>*

263 
_˛ó√r_thªads
;

264 
queue_ba£d_block_lock_t
 
_˛ó√r_thªads_li°_muãx
;

266 
rc_t
 
	`_˛ón_buf
(

267 
bf_∑ge_wrôî_c⁄åﬁ_t
 * 
pwc
,

268 
cou¡
,

269 
Õid_t
 
pids
[],

270 
timeout_ö_ms
 
timeout
,

271 
boﬁ
* 
ªtúe_Êag
);

272 
rc_t
 
	`_˛ón_£gmít
(

273 
cou¡
,

274 
Õid_t
 
pids
[],

275 
∑ge_s
* 
pbuf
,

276 
timeout_ö_ms
 
œ°_∑ss_timeout
,

278 
boﬁ
* 
ˇn˚l_Êag
);

281 
	`_ö¸_∑ge_wrôe
(
numbî
, 
boﬁ
 
bg
);

283 
	}
};

285 
ölöe
 
rc_t


286 
	gbf_m
::
	$fix
(

287 
∑ge_s
*& 
ªt_∑ge
,

288 c⁄° 
Õid_t
& 
pid
,

289 
uöt2_t
 
èg
,

290 
œtch_mode_t
 
mode
,

291 
boﬁ
 
no_ªad
,

292 
°‹e_Êag_t
& 
ªtu∫_°‹e_Êags
,

293 
boﬁ
 
ign‹e_°‹e_id
,

294 
°‹e_Êag_t
 
°Êags


297  
	`_fix
(
WAIT_FOREVER
, 
ªt_∑ge
, 
pid
, 
èg
, 
mode
,

298 
no_ªad
, 
ªtu∫_°‹e_Êags
, 
ign‹e_°‹e_id
, 
°Êags
);

299 
	}
}

301 
ölöe
 
rc_t


302 
	gbf_m
::
	$c⁄dôi⁄Æ_fix
(

303 
∑ge_s
*& 
ªt_∑ge
,

304 c⁄° 
Õid_t
& 
pid
,

305 
uöt2_t
 
èg
,

306 
œtch_mode_t
 
mode
,

307 
boﬁ
 
no_ªad
,

308 
°‹e_Êag_t
& 
ªtu∫_°‹e_Êags
,

309 
boﬁ
 
ign‹e_°‹e_id
,

310 
°‹e_Êag_t
 
°Êags


313  
	`_fix
(
WAIT_IMMEDIATE
, 
ªt_∑ge
, 
pid
, 
èg
, 
mode
,

314 
no_ªad
, 
ªtu∫_°‹e_Êags
, 
ign‹e_°‹e_id
, 
°Êags
);

315 
	}
}

	@src/sm/bf_core.cpp

54 
	~"w_deföes.h
"

59 #i‚de‡
BF_CORE_C


60 
	#BF_CORE_C


	)

62 #ifde‡
__GNUG__


63 #¥agm®
im∂emíèti⁄
 "bf_core.h"

66 
	~<°dio.h
>

67 
	~<c°dlib
>

68 
	~"sm_öt_0.h
"

69 
	~"bf_s.h
"

70 
	~"bf_c‹e.h
"

71 
	~<auto_ªÀa£.h
>

72 
	~"w_föd¥ime.h
"

73 
	~"∑ge_s.h
"

74 
	~"log.h
"

75 
	~<w_°r°ªam.h
>

76 
	~"©omic_ãm∂©es.h
"

77 
	~<ve˘‹
>

78 
	~<Æg‹ôhm
>

79 
	~<s°ªam
>

80 
	~"w_hashög.h
"

81 
	~"bf_hèb.h
"

84 "C" 
bfc‹e_°›hîe
();

85 
	$bfc‹e_°›hîe
()

87 
	}
}

89 
∑ge_wrôe_muãx_t
 
	g∑ge_wrôe_muãx_t
::
∑ge_wrôe_muãx
[∑ge_wrôe_muãx_t::
PWM_COUNT
];

91 "C" 
dum±hªads
();

92 
	$dump_∑ge_muãxes
()

94 
∑ge_wrôe_muãx_t
::
	`dump_Æl
();

95 
	}
}

97 
	g∑ge_wrôe_muãx_t
::
	$dump_Æl
()

99 
i
=0; i < 
PWM_COUNT
; i++)

101 
˚º
 << "Öage_muãx " << 
i
 << " @ "

102 << ::
hex


103 << 
	`u_l⁄g
(&(
∑ge_wrôe_muãx
[
i
].
_∑ge_muãx
)Ë<< ::
dec


104 #ifde‡
Löux


106 << " ow√∏" << 
∑ge_wrôe_muãx
[
i
].
_∑ge_muãx
.
__d©a
.
__ow√r


108 << 
ídl
;

110 
˚º
 << 
Êushl
;

111 
	}
}

113 #i‡
W_DEBUG_LEVEL
 > 1

114 
	gbfcb_t
::
	$check
() const

117 
cou¡
 = 
œtch
.
	`hñd_by_me
();

118 
boﬁ
 
möe
 = 
œtch
.
	`is_möe
();

119 if(
cou¡
 > 0) {

120 if(
möe
) {

124 
	`w_as£π2
(
œtch
.
	`œtch_˙t
(Ë=
cou¡
);

130 
	`w_as£π2
(
_pö_˙t
 >= 1);

140 
	`w_as£π2
(
_pö_˙t
 >= 1);

141 
	`w_as£π2
(
œtch
.
	`mode
(Ë=
LATCH_SH
);

144 
	}
}

147 
	gbfcb_t
::
	$pö_‰ame
() {

148 
	`©omic_öc
(
_pö_˙t
);

149 
	`w_as£π1
(
_pö_˙t
 > 0);

150 
	}
}

152 
	gbfcb_t
::
	$u≈ö_‰ame
() {

153 #i‡
W_DEBUG_LEVEL
 > 1

154 
	`w_as£π2
(
_pö_˙t
 > 0);

156 
	`©omic_dec
(
_pö_˙t
);

157 
	`w_as£π1
(
_pö_˙t
 >= 0);

158 
	}
}

177 
boﬁ
 
	gbfcb_t
::
	$pö_‰ame_if_pö√d
() {

178 
ﬁd_pö_˙t
 = 
_pö_˙t
;

180 if(
ﬁd_pö_˙t
 == 0)

181  
Ál£
;

184 
‹ig_pö_˙t
 = 
	`©omic_ˇs_32
((*Ë&
_pö_˙t
,

185 
ﬁd_pö_˙t
, old_pin_cnt+1);

186 if(
‹ig_pö_˙t
 =
ﬁd_pö_˙t
)

187  
åue
;

191 
ﬁd_pö_˙t
 = 
‹ig_pö_˙t
;

193 
	}
}

195 
	$bf_°›_hîe
(Ë{
	}
};

197 
	$bf_°›
(
bfcb_t
 *
p
)

199 
shpid_t
 
	`pg
(808);

200 
	`i
(0);

201 
	`j
(0);

202 
	`k
(0);

204 
j
 = 
	`©omic_öc_nv
(
i
);

205 if(
p
->
	`pid
().
∑ge
 ==
pg
 || 
j
 =
k
) {

206 
	`bf_°›_hîe
();

207 
˚º
 << "∑gê" << 
pg
 << 
ídl
;

209 
	}
}

223 
queue_ba£d_lock_t
 
	gbf_c‹e_m
::
_bfc_muãx
;

225 
	gbf_c‹e_m
::
_num_bufs
 = 0;

226 
∑ge_s
* 
	gbf_c‹e_m
::
_buÂoﬁ
 = 0;

227 
bfcb_t
* 
	gbf_c‹e_m
::
_bu·ab
 = 0;

229 
	gbf_c‹e_m
::
hèb
* 
bf_c‹e_m
::
_hèb
 = 0;

230 
bfcb_unu£d_li°
 
	gbf_c‹e_m
::
_unu£d
;

232 c⁄°* 
	$db_¥ëty_¥öt
(
Õid_t
 c⁄°* 
pid
, , const*) {

233 
tmp
[100];

234 
	`¢¥ötf
(
tmp
, —mp), "%d.%d.%d", 
pid
->
_°id
.
vﬁ
.vﬁ,Öid->_°id.
°‹e
,Öid->
∑ge
);

235  
tmp
;

236 
	}
}

238 
	~"bf_å™sô_buckë.h
"

239 
å™sô_buckë_t
 
	gå™sô_buckë_t
::
_å™sô_buckës
[

240 
å™sô_buckë_t
::
NUM_TRANSIT_BUCKETS
];

278 
	gbf_c‹e_m
::
_h™d
 = 0;

280 
ölöe
 
	go°ªam
&

281 
	gbfcb_t
::
	$¥öt_‰ame
(
o°ªam
& 
o
, 
boﬁ
 
ö_hèb
)

283 i‡(
ö_hèb
) {

284 
o
 << 
	`pid
() << '\t'

285 << (
	`dúty
() ? "X" : " ") << '\t'

286 << 
	`cuº_ªc_l¢
() << '\t'

287 << 
	`ß„_ªc_l¢
() << '\t'

288 << 
	`pö_˙t
() << '\t'

289 << 
œtch_t
::
œtch_mode_°r
[
œtch
.
	`mode
()] << '\t'

290 << 
œtch
.
	`œtch_˙t
() << '\t'

291 << 
	`is_hŸ
() << '\t'

292 << 
	`ªfbô
() << '\t'

293 << 
œtch
.
	`id
()

294 << 
ídl
;

296 
o
 << 
	`pid
() << '\t'

297 << " InTønsô " << (
	`ﬁd_pid_vÆid
(Ë? (
Õid_t
)
	`ﬁd_pid
(Ë:Üpid_t::
nuŒ
)

298 << 
ídl
 << 
Êush
;

300  
o
;

301 
	}
}

309 
boﬁ


310 
	gbf_c‹e_m
::
	$œtched_by_me
–
bfcb_t
* 
p
) const

312  (
p
->
œtch
.
	`hñd_by_me
() > 0);

313 
	}
}

315 
boﬁ


316 
	gbf_c‹e_m
::
	$f‹˚_my_dúty_ﬁd_∑ges
(
Õid_t
 const* ) const {

317 #w¨nög 
TODO
: 
a˘uÆly
 
look
 
dúty
 
∑ges
 
ö°ód
 
of
 
ju°
 
guessög
 
they
 
exi°


318  
Ál£
;

319 
	}
}

329 
boﬁ


330 
	gbf_c‹e_m
::
	$is_möe
(c⁄° 
bfcb_t
* 
p
) const

332 
	`w_as£π2
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

333 
	`w_as£π2
(
	`_ö_hèb
(
p
));

334  
p
->
œtch
.
	`is_möe
();

335 
	}
}

342 
œtch_mode_t


343 
	gbf_c‹e_m
::
	$œtch_mode
(c⁄° 
bfcb_t
* 
p
) const

345 
	`w_as£π2
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

346 
	`w_as£π2
(
	`_ö_hèb
(
p
));

347  (
œtch_mode_t
Ë
p
->
œtch
.
	`mode
();

348 
	}
}

356 c⁄° 
œtch_t
 *

357 
	gbf_c‹e_m
::
	$my_œtch
(c⁄° 
bfcb_t
* 
p
) const

359 
	`w_as£π2
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

360 
	`w_as£π2
(
	`_ö_hèb
(
p
));

361  &
p
->
œtch
;

362 
	}
}

364 
	gbfcb_t
::
	$öôülize
(c⁄° *c⁄° 
«me
,

365 
∑ge_s
* 
buÂoﬁ‰ame
,

366 
uöt4_t
 
hfunc


369 
_‰ame
 = 
buÂoﬁ‰ame
;

370 
_dúty
 = 
Ál£
;

371 
_pid
 = 
Õid_t
::
nuŒ
;

372 
_ªc_l¢
 = 
l¢_t
::
nuŒ
;

374 
œtch
.
	`£äame
(
«me
);

375 
	`zîo_pö_˙t
();

377 
_ªfbô
 = 0;

378 
_hŸbô
 = 0;

379 
_hash
 = 0;

380 
_hash_func
 = 
hfunc
;

381 
	}
}

395 
	gbf_c‹e_m
::
öô_thªad_t
 : 
public
 
smthªad_t


397 
bf_c‹e_m
* 
_bfc
;

398 
	g_begö
;

399 
	g_íd
;

401 
öô_thªad_t
(
bf_c‹e_m
* 
bfc
, 
b
, 
e
)

402 : 
smthªad_t
(
t_ªguœr
, "bf_c‹e_m::öô_thªad", 
WAIT_NOT_USED
),

403 
_bfc
(
bfc
), 
_begö
(
b
), 
_íd
(
e
)

408 
vútuÆ
 
run
() {

409 c⁄° *
	g«yme
 = 
«me
();

410 
	gi
=
_begö
; i < 
	g_íd
; i++) {

411 
	g_bfc
->
	g_bu·ab
[
i
].
öôülize
(
«yme
, 
_bfc
->
_buÂoﬁ
+i,

412 
hèb
::
HASH_COUNT


414 
	g_bfc
->
	g_unu£d
.
ªÀa£
(
_bfc
->
_bu·ab
+
i
);

420 
NORET


421 
	gbf_c‹e_m
::
	$bf_c‹e_m
(
uöt4_t
 
n
, *
bp
)

423 
_num_bufs
 = 
n
;

425 
_buÂoﬁ
 = (
∑ge_s
 *)
bp
;

426 
	`w_as£π1
(
_buÂoﬁ
);

427 
	`w_as£π1
(
	`is_Æig√d
(
_buÂoﬁ
));

429 
buckës
 = 
	`w_föd¥ime
((16*
n
+8)/9);

430 
_hèb
 = 
√w
 
	`hèb
(
buckës
);

431 i‡(!
_hèb
Ë{ 
	`W_FATAL
(
eOUTOFMEMORY
); }

436 
_bu·ab
 = 
√w
 
bfcb_t
 [
_num_bufs
];

438 i‡(!
_bu·ab
Ë{ 
	`W_FATAL
(
eOUTOFMEMORY
); }

441 c⁄° 
CHUNK_SIZE
 = 1<<16;

442 c⁄° 
MAX_THREADS
 = 30;

443 
thªad_cou¡
 = 
°d
::
	`mö
(

444 (
_num_bufs
+
CHUNK_SIZE
-1)/CHUNK_SIZE,

445 (
MAX_THREADS
));

447 
chunk_size
 = (
_num_bufs
+
thªad_cou¡
-1)/thread_count;

448 
°d
::
ve˘‹
<
öô_thªad_t
*> 
thªads
;

453 
i
=0; i < 
thªad_cou¡
; i++) {

454 
begö
 = 
i
*
chunk_size
;

455 
íd
 = 
°d
::
	`mö
(
begö
+
chunk_size
, 
_num_bufs
);

456 
thªads
.
	`push_back
(
√w
 
	`öô_thªad_t
(
this
, 
begö
, 
íd
 ));

458 
i
=0; i < 
thªads
.
	`size
(); i++) {

459 
	`W_COERCE
(
thªads
[
i
]->
	`f‹k
());

461 
i
=0; i < 
thªads
.
	`size
(); i++) {

462 
	`W_COERCE
(
thªads
[
i
]->
	`joö
());

463 
dñëe
 
thªads
[
i
];

467 #i‡
W_DEBUG_LEVEL
 > 5

472 
∑ge_s
 *
±r
;

473 
u
;

474 } 
pun1
, 
pun2
;

475 
cout
 << " sizeof(page_s) "

476 << ::
hex
 << "0x" << (
∑ge_s
)

477 << ::
dec
 << " " << (
∑ge_s
Ë<< 
ídl
;

478 
i
=0; i < 
_num_bufs
; i++) {

479 
pun2
.
±r
 = 
_bu·ab
[
i
].
‰ame
;

480 
cout
 << " checkÉ¡ry " << 
i


482 << ::
hex


483 << ()(&
_bu·ab
[
i
])

485 << ::
hex
 << 
pun2
.
u
 << ::
dec


486 << 
ídl
;

487 
	`w_as£π1
(
pun2
.
±r
 != 0);

488 if(
i
>0) {

489 
	`w_as£π1
(
pun1
.
u
 + (
∑ge_s
Ë=
pun2
.u);

491 
pun1
.
±r
 = 
pun2
.ptr;

494 
	}
}

505 
NORET


506 
	gbf_c‹e_m
::~
	$bf_c‹e_m
()

508 
i
 = 0; i < 
_num_bufs
; i++) {

509 
	`w_as£π9
(! 
	`_ö_hèb
(
_bu·ab
 + 
i
) );

511 
dñëe
 
_hèb
;

513 
dñëe
 [] 
_bu·ab
;

514 
_unu£d
.
	`shutdown
();

515 
	}
}

525 
boﬁ


526 
	gbf_c‹e_m
::
	$_ö_hèb
(c⁄° 
bfcb_t
* 
e
) const

528  
e
->
	`hash_func
(Ë!
hèb
::
HASH_COUNT
;

529 
	}
}

539 
boﬁ


540 
	gbf_c‹e_m
::
	$gë_cb
(c⁄° 
bÂid_t
& 
p
, 
bfcb_t
*& 
ªt
) const

542 
ªt
 = 0;

549 
bfcb_t
* 
f
 = 
_hèb
->
	`lookup
(
p
);

551 i‡(
f
) {

554 
	`w_as£π2
(
f
->
	`pö_˙t
() > 1);

555 
f
->
	`u≈ö_‰ame
();

556 
ªt
 = 
f
;

557  
åue
;

559  
Ál£
;

560 
	}
}

564 
bfcb_t
* 
	gbfcb_unu£d_li°
::
	$èke
() {

565 uni⁄ {* 
v
; 
bfcb_t
* 
b
; } 
u
 = { 
	`p›
() };

566 if(
u
.
b
) {

567 
u
.
b
->
	`zîo_pö_˙t
();

568 
	`©omic_dec
(
_cou¡
);

570  
u
.
b
;

571 
	}
}

572 
	gbfcb_unu£d_li°
::
	$ªÀa£
(
bfcb_t
* 
‰ame
)

574 
	`w_as£π9
(!
‰ame
->
dúty
);

575 
	`w_as£π9
(
‰ame
->
pö_˙t
 == 0);

576 
	`w_as£π9
(!
‰ame
->
œtch
.
	`is_œtched
());

578 
	`push
(
‰ame
);

579 
	`©omic_öc
(
_cou¡
);

580 
	}
}

583 #i‡
SM_PLP_TRACING


584 
__thªad
 
timevÆ
 
	gmy_time
;

621 
w_rc_t


622 
	gbf_c‹e_m
::
	$gøb
(

623 
bfcb_t
* & 
ªt
,

624 c⁄° 
bÂid_t
& 
pid
,

625 
boﬁ
& 
found
,

627 
œtch_mode_t
 
mode
,

628 
timeout_ö_ms
 
timeout


631 
	`w_as£π2
(
cc_Æg
 =
t_cc_ªc‹d
 || 
mode
 > 
LATCH_NL
);

632 
	`w_as£π2
(
mode
 !
LATCH_NL
);

633 
	`w_as£π2
(
ªt
 !
NULL
);

635 
	`INC_TSTAT
(
bf_look_˙t
);

639 
	`w_as£π1
(
ªt
->
œtch
.
	`is_œtched
());

640 
	`w_as£π1
(
ªt
->
œtch
.
	`is_möe
());

641 
	`w_as£π2
(!
ªt
->
	`pö_˙t
());

642 
ªt
->
	`pö_‰ame
();

643 
ªt
->
	`check
();

654 c⁄° 
COUNT
 = 
hèb
::
HASH_COUNT
;

655 
idx
[
COUNT
];

656 
i
=0; i < 
COUNT
; i++) {

657 
idx
[
i
] = 
_hèb
->
	`hash
(i, 
pid
);

660 
å™sô_buckë_t
* vﬁ©ûê
tb
 = &å™sô_buckë_t::
	`gë
(
pid
);

661 
	`CRITICAL_SECTION
(
cs
, 
tb
->
_tb_muãx
);

663 
tb
->
	`awaô_nŸ_ö_å™sô_out
(
pid
);

678 
i
;

679 
ªsidíts
[
COUNT
];

680 
ßme
 = 0;

682 
bfcb_t
* 
p
 = 
NULL
;

683 
©ãm±
=0; 
p
 =
NULL
 && 
ßme
 !
COUNT
;áttempt++)

685 
ßme
 = 0;

686 
i
=0; i < 
COUNT
; i++) {

687 
hèb
::
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
idx
[
i
]];

688 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

689 
b
.
_lock
.
	`acquúe
();

690 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

696 
p
 = 
b
.
	`gë_‰ame
(
pid
);

697 if(
p
 &&Ö->
	`pid
(Ë=
pid
) {

698 
	`w_as£π2
(
p
->
	`hash
(Ë=
idx
[
i
]);

699 
	`w_as£π2
(
	`_ö_hèb
(
p
));

708 if(
©ãm±
 == 0) {

709 
ªsidíts
[
i
] = 
b
.
_cou¡
;

712 if(
ªsidíts
[
i
] =
b
.
_cou¡
)

713 
ßme
++;

715 
ªsidíts
[
i
] = 
b
.
_cou¡
;

718 
p
 = 
NULL
;

719 
b
.
_lock
.
	`ªÀa£
();

720 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

724 
	`w_as£π1
(
ªt
 !
p
);

725 
found
 = (
p
!=
NULL
);

727 if–
found
 ) {

733 
ªt
->
	`check
();

735 #i‡
SM_PLP_TRACING


736 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

737 
	`gëtimeofday
(&
my_time
, 
NULL
);

738 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

739 
_±ø˚_out
 << 
pid
 << " " << 
	`±hªad_£lf
(Ë<< " " << 
ªt
->
œtch
.
	`mode
() << " "

740 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

741 
∂pcs
.
	`exô
();

745 
ªt
->
œtch
.
	`œtch_ªÀa£
();

747 
ªt
->
	`u≈ö_‰ame
();

748 
_unu£d
.
	`ªÀa£
(
ªt
);

750 
	`INC_TSTAT
(
bf_hô_˙t
);

751 
ªt
 = 
p
;

752 
p
->
	`pö_‰ame
();

756 
_hèb
->
_èbÀ
[
idx
[
i
]].
_lock
.
	`ªÀa£
();

757 
cs
.
	`exô
();

759 
rc_t
 
rc
 = 
p
->
œtch
.
	`œtch_acquúe
(
mode
, 
timeout
);

760 i‡(
rc
.
	`is_îr‹
()) {

766 
p
->
	`u≈ö_‰ame
();

767 
	`INC_TSTAT
(
bf_gøb_œtch_Áûed
);

773  
	`RC_AUGMENT
(
rc
);

775 
p
->
	`check
();

780 
p
 = 
ªt
;

781 
p
->
	`£t_pid
 (
pid
);

784 (Ë
_hèb
->
	`ö£π
(
p
);

785 
cs
.
	`exô
();

787 
	`w_as£π2
(

788 
found
 ? (
ªt
->
œtch
.
	`mode
(Ë=
mode
Ë: (ªt->œtch.mode(Ë=
LATCH_EX
 ||Ñë->œtch.mode(Ë=
LATCH_NLX
)

791  
RCOK
;

792 
	}
}

841 
w_rc_t


842 
	gbf_c‹e_m
::
	$föd
(

843 
bfcb_t
*& 
ªt
,

844 c⁄° 
bÂid_t
& 
_pid
,

845 
œtch_mode_t
 
mode
,

846 
timeout_ö_ms
 
timeout
,

847 
öt4_t
 
ªf_bô


850 c⁄° 
bÂid_t
 
pid
 = 
_pid
;

851 
	`w_as£π3
(
ªf_bô
 >= 0);

853 
	`w_as£π1
(
mode
 !
LATCH_NL
);

854 
bfcb_t
* 
p
 = 
NULL
;

855 
ªt
 = 0;

856 
	`INC_TSTAT
(
bf_look_˙t
);

858 if–(
p
=
_hèb
->
	`lookup
(
pid
)Ë=
NULL
 )

859  
	`RC
(
eFRAMENOTFOUND
);

862 
	`w_as£π2
(
p
->
	`pö_˙t
() > 0);

867 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

868 i‡(
p
->
	`ªfbô
(Ë< 
ªf_bô
Ëp->
	`£t_ªfbô
(ref_bit);

869 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

871 
	`INC_TSTAT
(
bf_hô_˙t
);

873 
w_rc_t
 
rc
 = 
p
->
œtch
.
	`œtch_acquúe
(
mode
, 
timeout
);

874 i‡(
rc
.
	`is_îr‹
()) {

878 
p
->
	`u≈ö_‰ame
();

879  
	`RC_AUGMENT
(
rc
);

882 if(
p
->
	`ﬁd_pid_vÆid
(Ë&&Ö->
	`ﬁd_pid
(Ë=
pid
) {

885 
	`w_as£π1
(
p
->
œtch
.
	`hñd_by_me
() >= 1);

886 
p
->
	`check
();

888 #i‡
SM_PLP_TRACING


889 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

890 
	`gëtimeofday
(&
my_time
, 
NULL
);

891 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

892 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

893 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

894 
∂pcs
.
	`exô
();

898 
p
->
œtch
.
	`œtch_ªÀa£
();

900 
p
->
	`u≈ö_‰ame
();

901  
	`RC
(
fcOS
);

904 
ªt
 = 
p
;

905 
	`w_as£π2
((
pid
 =
p
->
	`‰ame
()->pidË&& (pid =p->
	`pid
()));

906 
	`w_as£π1
(
p
->
œtch
.
	`mode
(Ë>
mode
);

907 
	`w_as£π1
(
p
->
œtch
.
	`hñd_by_me
() >= 1);

908 if(
mode
 =
LATCH_EX
 || modê=
LATCH_NLX
) {

909 
	`w_as£π1
(
p
->
œtch
.
	`is_möe
());

911  
RCOK
;

912 
	}
}

927 
	gbf_c‹e_m
::
	$publish
–
bfcb_t
* 
p
, 
œtch_mode_t
 
mode
, 
boﬁ
 
îr‹_occuºed
)

933 
	`w_as£π2
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

934 
	`w_as£π2
(
p
->
	`pö_˙t
() > 0);

938 
	`w_as£π2
(!
îr‹_occuºed
 || (
mode
 =
LATCH_NL
 &&Érror_occurred));

939 
	`w_as£π2
(
p
->
œtch
.
	`is_möe
(Ë|| (!
îr‹_occuºed
 && 
mode
 =
LATCH_NL
));

941 
	`w_as£π9
(!
p
->
	`ﬁd_pid_vÆid
());

948 i‡(
îr‹_occuºed
) {

957 
p
->
	`£t_ﬁd_pid
();

962 
	`w_as£π2
(
p
->
œtch
.
	`is_möe
());

964 #i‡
SM_PLP_TRACING


965 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

966 
	`gëtimeofday
(&
my_time
, 
NULL
);

967 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

968 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

969 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

970 
∂pcs
.
	`exô
();

974 
p
->
œtch
.
	`œtch_ªÀa£
();

976 
p
->
	`u≈ö_‰ame
();

982 
p
->
	`check
();

984 if(
mode
 =
LATCH_SH
) {

985 
p
->
œtch
.
	`downgøde
();

986 } if(
mode
 =
LATCH_EX
) {

988 } if(
mode
 =
LATCH_NL
) {

992 
	`w_as£π0
(
Ál£
);

993 
p
->
œtch
.
	`œtch_ªÀa£
();

994 } if(
mode
 =
LATCH_NLX
 || modê=
LATCH_NLS
) {

995 #i‡
SM_PLP_TRACING


996 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

997 
	`gëtimeofday
(&
my_time
, 
NULL
);

998 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

999 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
() << " "

1000 << 
p
->
œtch
.
	`mode
() << " "

1001 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

1002 
∂pcs
.
	`exô
();

1007 
	}
}

1030 
	gbf_c‹e_m
::
	$publish_∑πül
(
bfcb_t
* 
p
)

1032 
	`w_as£π9
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

1037 
	`w_as£π2
(
p
->
œtch
.
	`is_œtched
());

1038 
	`w_as£π2
(
p
->
œtch
.
	`is_möe
());

1039 
	`w_as£π2
(
p
->
	`ﬁd_pid_vÆid
());

1044 
Õid_t
 
pid
 = 
p
->
	`ﬁd_pid
();

1045 
p
->
	`˛r_ﬁd_pid
();

1047 
å™sô_buckë_t
 &
tb
 =Åønsô_buckë_t::
	`gë
(
pid
);

1048 
	`CRITICAL_SECTION
(
cs
, 
tb
.
_tb_muãx
);

1050 
tb
.
	`make_nŸ_ö_å™sô_out
(
pid
);

1052 
	}
}

1064 
	gbf_c‹e_m
::
	$¢≠shŸ
–
u_öt
& 
≈ö√d
, u_öt& 
n‰ì
)

1069 
cou¡
 = 0;

1070 
i
 = 
_num_bufs
 - 1; i; i--) {

1071 i‡(
	`_ö_hèb
(&
_bu·ab
[
i
])) {

1072 i‡(
_bu·ab
[
i
].
œtch
.
	`is_œtched
(Ë|| _bu·ab[i].
	`pö_˙t
(Ë> 0Ë++
cou¡
;

1076 
≈ö√d
 = 
cou¡
;

1077 
n‰ì
 = 
_unu£d
.
	`cou¡
();

1078 
	}
}

1090 
	gbf_c‹e_m
::
	$¢≠shŸ_me
–
u_öt
& 
nsh
, u_öt& 
√x
, u_öt& 
ndiff
)

1096 
nsh
 = 
√x
 = 
ndiff
 = 0;

1097 
i
 = 
_num_bufs
 - 1; i; i--) {

1098 i‡(
	`_ö_hèb
(&
_bu·ab
[
i
])) {

1104 i‡(1 || 
_bu·ab
[
i
].
œtch
.
	`is_œtched
() ) {

1107 
times
 = 
_bu·ab
[
i
].
œtch
.
	`hñd_by_me
();

1108 if(
times
 > 0) {

1109 
ndiff
 ++;

1110 i‡(
_bu·ab
[
i
].
œtch
.
	`mode
(Ë=
LATCH_SH
 ) {

1111 
nsh
 +
times
;

1113 
	`w_as£π9
 (
_bu·ab
[
i
].
œtch
.
	`mode
(Ë=
LATCH_EX
 );

1117 
√x
 +
times
;

1123 
	}
}

1132 
w_rc_t


1133 
	gbf_c‹e_m
::
	$pö
(
bfcb_t
* 
p
, 
œtch_mode_t
 
mode
)

1142 
	`w_as£π9
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

1143 
	`w_as£π9
(
	`_ö_hèb
(
p
));

1146 if(!
p
->
	`pö_‰ame_if_pö√d
()) {

1149 
bÂid_t
 
pid
 = 
p
->
	`pid
();

1150 
hèb
::
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
p
->
	`hash
()];

1152 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

1153 
	`CRITICAL_SECTION
(
cs
, 
b
.
_lock
);

1154 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

1155 
p
 = 
b
.
	`gë_‰ame
(
pid
);

1156 if(
p
 =
NULL
 ||Ö->
	`pid
(Ë!
pid
)

1157  
	`RC
(
eFRAMENOTFOUND
);

1159 
p
->
	`pö_‰ame
();

1163 
w_rc_t
 
rc
 = 
p
->
œtch
.
	`œtch_acquúe
(
mode
) ;

1164 
p
->
	`check
();

1165 
	`w_as£π1
(
p
->
	`pö_˙t
() > 0);

1166  
rc
;

1167 
	}
}

1176 
	gbf_c‹e_m
::
	$upgøde_œtch_if_nŸ_block
(
bfcb_t
* 
p
, 
boﬁ
& 
would_block
)

1179 
	`w_as£π9
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

1180 
	`w_as£π9
(
	`_ö_hèb
(
p
));

1183 
	`W_COERCE
–
p
->
œtch
.
	`upgøde_if_nŸ_block
(
would_block
) );

1184 if(!
would_block
) {

1185 
	`w_as£π9
(
p
->
œtch
.
	`mode
(Ë=
LATCH_EX
);

1187 
	}
}

1198 
	gbf_c‹e_m
::
u≈ö
(
bfcb_t
*& 
p
, 
ªf_bô
, 
boﬁ
 
	$W_IFDEBUG4
(
ö_hèb
))

1201 
	`w_as£π3
(
ªf_bô
 >= 0);

1202 
	`w_as£π9
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

1203 
	`w_as£π9
(!
ö_hèb
 || 
	`_ö_hèb
(
p
));

1204 
	`w_as£π1
(
p
->
	`pö_˙t
() > 0);

1212 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

1213 i‡(
p
->
	`ªfbô
(Ë< 
ªf_bô
Ëp->
	`£t_ªfbô
(ref_bit);

1214 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

1228 if(
p
->
	`pö_˙t
() == 1) {

1229 if(
p
->
	`dúty
()) {

1230 
	`w_as£π1
(
p
->
	`cuº_ªc_l¢
().
	`vÆid
());

1257 (
p
->
	`ß„_ªc_l¢
(Ë<p->
	`‰ame
()->
l¢1
)

1259 ((
p
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
)

1260 =
smÀvñ_0
::
°_tmp
)

1262 
smÀvñ_0
::
	`ö_ªcovîy_ªdo
()

1263 Ë=
Ál£
) {

1266 
˚º


1267 << " fømê" << (*)(
p
->
	`‰ame
()Ë<< 
ídl


1268 << "Öid " << 
p
->
	`pid
(Ë<< 
ídl


1269 << " cuº_ªc_l¢ " << 
p
->
	`cuº_ªc_l¢
(Ë<< 
ídl


1270 << " old_ªc_l¢ " << 
p
->
	`ﬁd_ªc_l¢
(Ë<< 
ídl


1271 << " sa„_ªc_l¢ " << 
p
->
	`ß„_ªc_l¢
(Ë<< 
ídl


1272 << " fømêl¢ " << 
p
->
	`‰ame
()->
l¢1
 << 
ídl


1274 << (
p
->
	`ß„_ªc_l¢
(Ë<p->
	`‰ame
()->
l¢1
Ë<< 
ídl


1276 << (
p
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
Ë<< 
ídl


1278 (
smÀvñ_0
::
	`ö_ªcovîy_ªdo
()Ë<< 
ídl


1279 << 
ídl
;

1281 
	`w_as£π0
 (

1282 (
p
->
	`ß„_ªc_l¢
(Ë<p->
	`‰ame
()->
l¢1
) ||

1283 ((
p
->
	`gë_°‹eÊags
(Ë& 
smÀvñ_0
::
°_tmp
)

1284 =
smÀvñ_0
::
°_tmp
) ||

1285 
smÀvñ_0
::
	`ö_ªcovîy_ªdo
()

1306 
	`w_as£π1
(! 
p
->
	`cuº_ªc_l¢
().
	`vÆid
() );

1310 
	`w_as£π1
(
p
->
œtch
.
	`hñd_by_me
());

1311 
p
->
	`check
();

1319 
p
->
	`u≈ö_‰ame
();

1321 #i‡
SM_PLP_TRACING


1322 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

1323 
	`gëtimeofday
(&
my_time
, 
NULL
);

1324 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

1325 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

1326 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

1327 
∂pcs
.
	`exô
();

1331 
p
->
œtch
.
	`œtch_ªÀa£
();

1334 
p
 = 0;

1335 
	}
}

1346 
rc_t


1347 
	gbf_c‹e_m
::
	$_ªmove
(
bfcb_t
*& 
p
)

1349 
	`w_as£π9
(
p
 - 
_bu·ab
 >0 &&Ö - _bu·ab < 
_num_bufs
);

1350 
	`w_as£π9
(
	`_ö_hèb
(
p
));

1352 
	`w_as£π2
(
p
->
œtch
.
	`is_möe
());

1353 
	`w_as£π2
(
p
->
œtch
.
	`œtch_˙t
() == 1);

1354 
p
->
	`check
();

1356 i‡(
p
->
	`is_hŸ
()) {

1358 
	`INC_TSTAT
(
bf_disˇrded_hŸ
);

1359 #i‡
W_DEBUG_LEVEL
 > 2

1362 
˚º
 << "is_hŸ.Ü©ch=" << &(
p
->
œtch
Ë<< 
ídl
;

1363 
	`dum±hªads
();

1374 if(
p
->
	`ﬁd_ªc_l¢
().
	`vÆid
()) {

1375 
	`CRITICAL_SECTION
(
cs
, 
∑ge_wrôe_muãx_t
::
	`loˇã
(
p
->
	`pid
()));

1376 
	`w_as£π0
(!
p
->
	`ﬁd_ªc_l¢
().
	`vÆid
());

1382 
	`CRITICAL_SECTION
(
cs
, 
å™sô_buckë_t
::
	`gë
(
p
->
	`pid
()).
_tb_muãx
);

1383 c⁄° 
PATIENCE
 = 10;

1384 
i
;

1385 
i
=0; i < 
PATIENCE
; i++) {

1386 
hèb
::
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
p
->
	`hash
()];

1389 if(
b
.
	`gë_‰ame
(
p
->
	`pid
()) !=Ö)

1391 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

1394 
	`CRITICAL_SECTION
(
bcs
, 
b
.
_lock
);

1395 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

1397 if(
b
.
	`gë_‰ame
(
p
->
	`pid
()) !=Ö)

1400 #i‡
SM_PLP_TRACING


1401 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

1402 
	`gëtimeofday
(&
my_time
, 
NULL
);

1403 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

1404 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

1405 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

1406 
∂pcs
.
	`exô
();

1410 
p
->
œtch
.
	`œtch_ªÀa£
();

1411 
p
->
	`u≈ö_‰ame
();

1414 
	`w_as£π1
(
b
.
_lock
.
	`is_möe
());

1415 if(!
_hèb
->
	`ªmove
(
p
)) {

1432 
	`w_as£π3
(
p
->
	`pö_˙t
() > 0);

1433  
	`RC
(
eHOTPAGE
);

1436 
p
->
	`˛ór
();

1439 if(
i
 =
PATIENCE
) {

1441 #i‡
SM_PLP_TRACING


1442 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

1443 
	`gëtimeofday
(&
my_time
, 
NULL
);

1444 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

1445 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

1446 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

1447 
∂pcs
.
	`exô
();

1451 
p
->
œtch
.
	`œtch_ªÀa£
();

1452 
p
->
	`u≈ö_‰ame
();

1453  
	`RC
(
eFRAMENOTFOUND
);

1456 
_unu£d
.
	`ªÀa£
(
p
);

1458 
p
 = 
NULL
;

1460  
RCOK
;

1461 
	}
}

1464 
boﬁ
 
	gbf_c‹e_m
::
	$ˇn_ª∂a˚
(
bfcb_t
* 
p
, 
rounds
)

1466 
	`w_as£π0
(
p
 !
NULL
);

1476 
boﬁ
 
found
 =
Ál£
;

1477 if(!
p
->
	`pö_˙t
(Ë&& !p->
	`ﬁd_ªc_l¢
().
	`vÆid
()) {

1478 
rounds
) {

1481 if(!
p
->
	`ªfbô
(Ë&& !p->
	`hŸbô
()) {

1482 
found
=
åue
;

1488 if–!
p
->
	`dúty
(Ë&& !p->
	`ªfbô
(Ë&& !p->
	`hŸbô
() ) {

1489 
found
=
åue
;

1495 
	`w_as£π0
(0);

1496 
found
 = 
Ál£
;

1501 
found
=
åue
;

1507 if(
found
 && 
p
->
	`dúty
()) {

1515 
å™sô_buckë_t
* vﬁ©ûê
buck
 = &å™sô_buckë_t::
	`gë
(
p
->
	`pid
());

1517 
found
 = 
buck
->
	`em±y
();

1518 if(!
found
) {

1519 
	`INC_TSTAT
(
bf_no_å™sô_buckë
);

1526  
found
;

1527 
	}
}

1547 
bfcb_t
*

1548 
	gbf_c‹e_m
::
	$ª∂a˚mít
()

1553 
bfcb_t
* 
p
 = 
_unu£d
.
	`èke
();

1555 if(
p
) {

1556 
	`w_as£π2
(
p
->
	`‰ame
() != 0);

1557 
p
->
	`˛r_ﬁd_pid
();

1558 
p
->
	`m¨k_˛ón
();

1559 
	`w_as£π1
 (! 
	`_ö_hèb
(
p
));

1567 
w_rc_t
 
rc
 = 
p
->
œtch
.
	`œtch_acquúe
(
LATCH_EX
, 
WAIT_IMMEDIATE
);

1568 
	`w_as£π0
(!
rc
.
	`is_îr‹
());

1569  
p
;

1594 
looked_©
 = 0;

1595 
∑tõn˚
 = 4*
_num_bufs
;

1596 
√xt_round
 = 
_num_bufs
;

1597 
rounds
 = 1;

1600 
	`CRITICAL_SECTION
(
cs
, 
_bfc_muãx
);

1601 
°¨t
 = 
_h™d
;

1602 
i
;

1603 
i
 = 
°¨t
; ++
looked_©
 < 
∑tõn˚
; i++) {

1605 i‡(
i
 =
_num_bufs
) {

1606 
i
 = 0;

1608 if–
looked_©
 =
√xt_round
) {

1609 
rounds
++;

1610 
√xt_round
 +
_num_bufs
;

1616 
p
 = 
_bu·ab
 + 
i
;

1617 i‡(! 
	`_ö_hèb
(
p
)) {

1621 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

1622 
	`DBG
(<<"rounds: " << 
rounds


1623 << " dúty:" << 
p
->
	`dúty
()

1624 << "Ñefbô:" << 
p
->
	`ªfbô
()

1625 << " hŸbô:" << 
p
->
	`hŸbô
()

1626 << "Öö_˙t:" << 
p
->
	`pö_˙t
()

1627 << "Üocked:" << 
p
->
œtch
.
	`is_œtched
()

1633 if(
	`ˇn_ª∂a˚
(
p
, 
rounds
)) {

1638 
_h™d
 = (
i
+1 =
_num_bufs
) ? 0 : i+1;

1645 i‡(
p
->
	`ªfbô
()>0Ëp->
	`de¸_ªfbô
();

1646 
	`w_as£π3
(
p
->
	`ªfbô
() >= 0);

1648 if(
looked_©
 >
∑tõn˚
) {

1649 
˚º
 << "bf_c‹e_m: c™nŸ föd fªêªsour˚" << 
ídl
;

1650 
˚º
 << *
this
;

1654  (
bfcb_t
*)0;

1683 
idx
 = 
p
->
	`hash
();

1684 
bÂid_t
 
pid
 = 
p
->
	`pid
();

1686 
å™sô_buckë_t
* vﬁ©ûê
tb
 = &å™sô_buckë_t::
	`gë
(
pid
);

1688 
	`CRITICAL_SECTION
(
tcs
, 
tb
->
_tb_muãx
);

1690 
hèb
::
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
idx
];

1692 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

1694 
	`CRITICAL_SECTION
(
bcs
, 
b
.
_lock
);

1695 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

1697 
w_rc_t
 
rc
 = 
p
->
œtch
.
	`œtch_acquúe
(
LATCH_EX
, 
WAIT_IMMEDIATE
);

1699 if(!
rc
.
	`is_îr‹
())

1709 
±hªad_muãx_t
* 
∑ge_wrôe_muãx
 =

1710 
∑ge_wrôe_muãx_t
::
	`loˇã
(
pid
);

1711 if(
	`±hªad_muãx_åylock
(
∑ge_wrôe_muãx
Ë=
EBUSY
) {

1712 
∑ge_wrôe_muãx
 = 
NULL
;

1718 
auto_ªÀa£_t
<
±hªad_muãx_t
> 
	`cs
(
∑ge_wrôe_muãx
);

1720 if(
∑ge_wrôe_muãx
)

1723 if(
b
.
	`gë_‰ame
(
pid
Ë=
p
 &&

1724 
p
->
	`pid
(Ë=
pid
 &&

1725 
	`_ö_hèb
(
p
) &&

1726 
	`ˇn_ª∂a˚
(
p
, 
rounds
) &&

1727 
_hèb
->
	`ªmove
(
p
))

1729 
	`w_as£π2
(
p
->
	`hash
(Ë=
idx
);

1730 
	`w_as£π2
(!
	`_ö_hèb
(
p
));

1733 
p
->
	`£t_ﬁd_pid
();

1734 if(
p
->
	`dúty
()) {

1735 
tb
->
	`make_ö_å™sô_out
(
p
->
	`pid
());

1737 
	`w_as£π1
(
p
->
	`‰ame
() != 0);

1739 
	`w_as£π1
(
p
->
œtch
.
	`is_möe
(Ë=
åue
);

1740  
p
;

1744 #i‡
SM_PLP_TRACING


1745 i‡(
_±ø˚_Àvñ
>=
PLP_TRACE_PAGE
) {

1746 
	`gëtimeofday
(&
my_time
, 
NULL
);

1747 
	`CRITICAL_SECTION
(
∂pcs
,
_±ø˚_lock
);

1748 
_±ø˚_out
 << 
p
->
	`pid
(Ë<< " " << 
	`±hªad_£lf
(Ë<< " " <<Ö->
œtch
.
	`mode
() << " "

1749 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

1750 
∂pcs
.
	`exô
();

1754 
p
->
œtch
.
	`œtch_ªÀa£
();

1758 
	`w_as£π1
(
p
->
œtch
.
	`is_möe
(Ë=
Ál£
);

1764 
	}
}

1767 #i‡
W_DEBUG_LEVEL
 > 2

1776 
	gbf_c‹e_m
::
	$audô
() const

1778 
tŸÆ_locks
=0 ;

1780 
i
 = 0; i < 
_num_bufs
; i++) {

1781 
bfcb_t
* 
p
 = 
_bu·ab
 + 
i
;

1782 if(
p
->
	`hash_func
(Ë=
hèb
::
HASH_COUNT
)

1785 
idx
 = 
p
->
	`hash
();

1786 
hèb
::
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
idx
];

1788 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

1789 
	`CRITICAL_SECTION
(
bcs
, 
b
.
_lock
);

1790 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

1792 
boﬁ
 
found
=
Ál£
;

1793 
i
=0; i < 
b
.
_cou¡
; i++) {

1794 i‡(
b
.
_¶Ÿs
[
i
] =
p
) {

1795 
found
 = 
åue
;

1796 
	`w_as£π2
(
p
->
	`hash
(Ë=
idx
);

1797 
	`w_as£π2
(
	`_ö_hèb
(
p
));

1798 if(
p
->
œtch
.
	`is_œtched
()) {

1799 
	`w_as£π2
(
p
->
œtch
.
	`œtch_˙t
()>0);

1801 
tŸÆ_locks
 +
p
->
œtch
.
	`œtch_˙t
() ;

1804 if(!
found
) {

1810 
	`DBG
(<< "end of bf_core_m::audit");

1811  
tŸÆ_locks
;

1812 
	}
}

1825 
	gbf_c‹e_m
::
	$dump
(
o°ªam
 &
o
, 
boﬁ
 )const

1827 
o
 << "bf_core_m:"

1828 << ' ' << 
_num_bufs
 << " frames"

1829 << 
ídl
;

1831 
o
 << "frame#"

1841 << 
ídl
 << 
Êush
;

1843 
n
 = 0;

1844 
t
 = 0;

1845 
pö˙t
 = 0;

1846 
i
 = 0; i < 
_num_bufs
; i++) {

1847 
bfcb_t
* 
p
 = 
_bu·ab
 + 
i
;

1848 
pö˙t
 +
p
->
	`pö_˙t
();

1849 i‡(
	`_ö_hèb
(
p
)) {

1850 
n
++;

1851 
o
 << 
i
 << '\t';

1852 
p
->
	`¥öt_‰ame
(
o
, 
åue
);

1856 
o
 << "numbî o‡‰ame†öÅhêHASH TABLE: " << 
n
 << 
ídl
;

1857 
o
 << "numbî o‡‰ame†ö TRANSIT: " << 
t
 << 
ídl
;

1858 
o
 << 
ídl
 << 
Êush
;

1859 
	}
}

1861 
	go°ªam
 &

1862 
	g›î©‹
<<(
	go°ªam
& 
	gout
, c⁄° 
	gbf_c‹e_m
& 
	gmgr
)

1864 
	gmgr
.
dump
(
out
, 0);

1865  
	gout
;

1868 
	~<sm_vèbÀ_íum.h
>

1869 #ifde‡
__GNUG__


1870 
ãm∂©e
 
˛ass
 
	gvèbÀ_func
<
	gbfcb_t
>;

1875 
	mbp_pid_©å
,

1876 
	mbp_pö_˙t_©å
,

1877 
	mbp_mode_©å
,

1878 
	mbp_dúty_©å
,

1879 
	mbp_hŸ_©å
,

1882 
	mbp_œ°


1885 c⁄° *
	gbp_vèbÀ_©å_«mes
[] =

1894 
vèbÀ_«mes_öô_t
 
«mes_öô
(
bp_œ°
, 
bp_vèbÀ_©å_«mes
);

1897 
	gbfcb_t
::
	$vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &
t
)

1899 if(
	`pid
().
	`vÆid
()) {

1904 
w_o°r°ªam
 
o
;

1905 
o
 << 
	`pid
(Ë<< 
íds
;

1906 
t
.
	`£t_°rög
(
bp_pid_©å
, 
o
.
	`c_°r
());

1910 
t
.
	`£t_öt
(
bp_pö_˙t_©å
, 
	`pö_˙t
());

1911 
t
.
	`£t_°rög
(
bp_mode_©å
, 
œtch_t
::
œtch_mode_°r
[
œtch
.
	`mode
()] );

1912 
t
.
	`£t_°rög
(
bp_dúty_©å
,

1913 (c⁄° *Ë(
	`dúty
()?"true":"false") );

1914 
t
.
	`£t_°rög
(
bp_hŸ_©å
,

1915 (c⁄° *)(
	`is_hŸ
()?"true":"false"));

1917 
	}
}

1920 
	gbfcb_t
::
	$vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
)

1922 
«mes_öô
.
	`cﬁÀ˘_«mes
(
t
);

1923 
	}
}

1927 
	gbf_c‹e_m
::
	$cﬁÀ˘
(
vèbÀ_t
 &
v
, 
boﬁ
 
«mes_too
)

1937 
n
 = 
_num_bufs
;

1938 if(
«mes_too
Ë
n
++;

1939 if(
v
.
	`öô
(
n
, 
bp_œ°
, 
«mes_öô
.
	`max_size
()))  -1;

1940 
vèbÀ_func
<
bfcb_t
> 
	`f
(
v
);

1942 if(
«mes_too
Ë
f
.
	`ö£π_«mes
();

1944 
i
 = 0; i < 
_num_bufs
; i++) {

1945 if(
_bu·ab
[
i
].
	`pid
().
	`vÆid
()) {

1946 
	`f
(
_bu·ab
[
i
]);

1951 
	}
}

1954 
	gbf_c‹e_m
::
	$hèb_°©s
(
bf_hèb_°©s_t
 &
out
) const

1956 if(
_hèb
Ë_hèb->
	`°©s
(
out
);

1957 *(&
out
.
bf_hèb_íåõs
Ë
_num_bufs
;

1958 
	}
}

	@src/sm/bf_core.h

55 
	~"w_deföes.h
"

58 #i‚de‡
BF_CORE_H


59 
	#BF_CORE_H


	)

61 
	~"©omic_c⁄èöî.h
"

63 #ifde‡
__GNUG__


64 #¥agm®
öãrÁ˚


67 #i‚de‡
SM_INT_0_H


68 
	~<sm_öt_0.h
>

71 
˛ass
 
	g∑ge_s
;

73 ˛as†
	cbfcb_unu£d_li°
 : 
¥iv©e
 
©omic_c⁄èöî
 {

74 
_cou¡
;

75 
	mpublic
:

76 
	$bfcb_unu£d_li°
()

77 : 
	`©omic_c⁄èöî
(
	`w_off£tof
(
bfcb_t
, 
_√xt_‰ì
)), 
	$_cou¡
(0)

80 ~
	$bfcb_unu£d_li°
(Ë{
	}
}

81 
	$cou¡
(Ëc⁄° {  
_cou¡
; 
	}
}

82 
ªÀa£
(
bfcb_t
* 
b
);

83 
bfcb_t
* 
èke
();

84 
	$shutdown
(Ë{ 
this
->~
	`bfcb_unu£d_li°
(); 
	}
}

87 ˛as†
	cbf_c‹e_m
 : 
public
 
smÀvñ_0


89 
‰õnd
 
˛ass
 
bf_m
;

90 
‰õnd
 
˛ass
 
	mbf_˛ó√r_thªad_t
;

91 
‰õnd
 
˛ass
 
	mbfcb_t
;

93 
	mhèb
;

95 #ifde‡
HTAB_UNIT_TEST_C


99 
‰õnd
 
˛ass
 
	mhèb_ã°î
;

102 #ifde‡
HTAB_UNIT_TEST_C


103 
bf_hèb_°©s_t
 
	tT°©s
;

107 
‰õnd
 
bfcb_t
* 
hèb_lookup
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &);

108 
‰õnd
 
bfcb_t
* 
hèb_ö£π
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &);

109 
‰õnd
 
boﬁ
 
hèb_ªmove
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &);

110 
‰õnd
 
hèb_dum∂ocks
(
bf_c‹e_m
*);

111 
‰õnd
 
hèb_cou¡
(
bf_c‹e_m
 *
c‹e
, &
‰ames
, &
¶Ÿs
);

114 
	mpublic
:

115 
NORET
 
bf_c‹e_m
(

116 
w_ba£_t
::
uöt4_t
 
n
,

117 * 
bp


119 
	mNORET
 ~
bf_c‹e_m
();

121 
cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

123 
boﬁ
 
	$gë_cb
(c⁄° 
bÂid_t
& 
p
, 
bfcb_t
*& 
ªt
) const;

125 
bfcb_t
* 
	`ª∂a˚mít
();

126 
w_rc_t
 
	`gøb
(

127 
bfcb_t
*& 
ªt
,

128 c⁄° 
bÂid_t
& 
p
,

129 
boﬁ
& 
found
,

130 
œtch_mode_t
 
mode
 = 
LATCH_EX
,

131 
timeout_ö_ms
 
timeout
 = 
°hªad_ba£_t
::
WAIT_FOREVER
);

133 
w_rc_t
 
	`föd
(

134 
bfcb_t
*& 
ªt
,

135 c⁄° 
bÂid_t
& 
p
,

136 
œtch_mode_t
 
mode
 = 
LATCH_EX
,

137 
timeout_ö_ms
 
timeout
 = 
°hªad_ba£_t
::
WAIT_FOREVER
,

138 
w_ba£_t
::
öt4_t
 
ªf_bô
 = 0

141 
	`publish_∑πül
(
bfcb_t
* 
p
);

142 
boﬁ
 
	$œtched_by_me
(
bfcb_t
* 
p
) const;

146 
boﬁ
 
	$f‹˚_my_dúty_ﬁd_∑ges
(
Õid_t
 const*

147 
wÆ_∑ge
=0) const;

149 
	`publish
(

150 
bfcb_t
* 
p
,

151 
œtch_mode_t
 
mode
,

152 
boﬁ
 
îr‹_occuªd
);

154 
boﬁ
 
	$is_möe
(c⁄° 
bfcb_t
* 
p
) const;

155 c⁄° 
œtch_t
* 
	$my_œtch
(c⁄° 
bfcb_t
* 
p
) const;

156 
œtch_mode_t
 
	$œtch_mode
(c⁄° 
bfcb_t
* 
p
) const;

158 
w_rc_t
 
	`pö
(

159 
bfcb_t
* 
p
,

160 
œtch_mode_t
 
mode
 = 
LATCH_EX
);

162 
	`upgøde_œtch_if_nŸ_block
(

163 
bfcb_t
* 
p
,

164 
boﬁ
& 
would_block
);

166 
	`u≈ö
(

167 
bfcb_t
*& 
p
,

168 
ªf_bô
 = 0,

169 
boﬁ
 
ö_hèb
 = 
åue
);

171 
w_rc_t
 
	$ªmove
(
bfcb_t
*& 
p
) {

172 
w_rc_t
 
rc
 = 
	`_ªmove
(
p
);

173  
rc
;

176 
	$dump
(
o°ªam
 &
o
, 
boﬁ
 
debuggög
=1)const;

178 #i‡
W_DEBUG_LEVEL
 > 2

179 
	$audô
() const;

182 
	`¢≠shŸ
(
u_öt
& 
≈ö√d
, u_öt& 
n‰ì
);

183 
	`¢≠shŸ_me
(
u_öt
& 
sh
, u_öt& 
ex
, u_öt& 
nd
);

185 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam& 
out
, c⁄° 
bf_c‹e_m
& 
mgr
);

187 
boﬁ
 
	`ˇn_ª∂a˚
(
bfcb_t
* 
p
, 
rounds
);

189 
	$hèb_°©s
(
bf_hèb_°©s_t
 &
out
) const;

191 
¥iv©e
:

192 
öô_thªad_t
;

193 
w_rc_t
 
	`_ªmove
(
bfcb_t
*& 
p
);

194 
boﬁ
 
	$_ö_hèb
(c⁄° 
bfcb_t
* 
e
) const;

197 
boﬁ
 
	$_ö_hèb
(c⁄° 
Õid_t
 &) const;

199 
queue_ba£d_lock_t
 
_bfc_muãx
;

201 
_num_bufs
;

202 
∑ge_s
* 
_buÂoﬁ
;

203 
bfcb_t
* 
_bu·ab
;

205 
hèb
* 
_hèb
;

206 * vﬁ©ûe* 
_hèb_m¨kîs
;

207 
bfcb_t
* vﬁ©ûe* 
_hèb_ˇche
;

208 
bfcb_unu£d_li°
 
_unu£d
;

211 
_h™d
;

214 
NORET
 
	`bf_c‹e_m
(c⁄° 
bf_c‹e_m
&);

215 
bf_c‹e_m
& 
›î©‹
=(const bf_core_m&);

216 
	}
};

219 
o°ªam
& 
›î©‹
<<(o°ªam& 
out
, c⁄° 
bf_c‹e_m
& 
mgr
);

229 ˛as†
	c∑ge_wrôe_muãx_t
 {

230 
	m¥iv©e
:

231 
±hªad_muãx_t
 
_∑ge_muãx
;

232 
›î©‹
 
	m±hªad_muãx_t
*(Ë{  &
	m_∑ge_muãx
; }

233 c⁄° 
	gPWM_COUNT
 = 64;

234 
∑ge_wrôe_muãx_t
 
	g∑ge_wrôe_muãx
[
PWM_COUNT
];

235 
	gpublic
:

237 
	$∑ge_wrôe_muãx_t
(Ë{ 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(*
this
, 
NULL
)); 
	}
}

238 ~
	$∑ge_wrôe_muãx_t
(Ë{ 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(*
this
)); 
	}
}

241 
±hªad_muãx_t
* 
	$loˇã
(
Õid_t
 c⁄° &
pid
)

248 
∑ge_wrôe_muãx
[(
pid
.
∑ge
/
smÀvñ_0
::
max_m™y_∑ges
Ë% 
PWM_COUNT
];

249 
	}
}

250 
dump_Æl
() ;

254 "C" 
dump_∑ge_muãxes
() ;

	@src/sm/bf_htab.cpp

54 
	~"w_deföes.h
"

59 #i‚de‡
BF_CORE_C


60 
	#BF_CORE_C


	)

63 
	~<°dio.h
>

64 
	~<c°dlib
>

65 
	~"sm_öt_0.h
"

67 
	~"bf_s.h
"

68 
	~"bf_c‹e.h
"

78 
	~"w_hashög.h
"

79 
	~"bf_hèb.h
"

90 
boﬁ
 
	gbf_c‹e_m
::
hèb
::
	$cuckﬁd
(
buckë
* 
de°
, buckë* 
§c
, 
which
,

91 
hashfunc
, 
bfcb_t
* &
moved
)

93 
	`ADD_BFSTAT
(
_¶Ÿs_åõd
, 1);

94 if(
de°
->
_cou¡
 < 
SLOT_COUNT
)

96 
	`ADD_BFSTAT
(
_cuckﬁds
, 1);

100 
buckë
* 
b1
 = (
§c
 < 
de°
)? src : dest;

101 
buckë
* 
b2
 = (
§c
 < 
de°
)? dest : src;

103 
	`CRITICAL_SECTION
(
cs1
, 
b1
->
_lock
);

104 
	`CRITICAL_SECTION
(
cs2
, 
b2
->
_lock
);

106 if(
§c
->
_cou¡
 < 
SLOT_COUNT
)

109  
åue
;

112 if(
de°
->
_cou¡
 < 
SLOT_COUNT
)

116 
bfcb_t
 *
b
;

117 
de°
->
_¶Ÿs
[de°->
_cou¡
++] = 
b
 = 
§c
->_¶Ÿs[
which
];

118 
b
->
	`£t_hash_func
(
hashfunc
);

119 
b
->
	`£t_hash
(
de°
-
_èbÀ
);

124 
§c
->
_¶Ÿs
[
which
] = src->_¶Ÿs[--§c->
_cou¡
];

125 
moved
 = 
§c
->
_¶Ÿs
[
which
];

126 
	`CHECK_ENTRY
(
§c
-
_èbÀ
, 
åue
);

127 
	`CHECK_ENTRY
(
de°
-
_èbÀ
, 
åue
);

128  
åue
;

131 
	`CHECK_TABLE
();

132  
Ál£
;

133 
	}
}

151 
boﬁ
 
	gbf_c‹e_m
::
hèb
::
	$ísuª_•a˚
(
h
, &
limô
, 
bfcb_t
 *&
moved
,

152 c⁄° 
bÂid_t
 &
ßve_pid_f‹_debug
)

154 
	`CHECK_ENTRY
(
h
, 
Ál£
);

155 
	`ADD_BFSTAT
(
_ísuªs
, 1);

158 
buckë
* 
b
 = &
_èbÀ
[
h
];

160 if(
b
->
_cou¡
 < 
SLOT_COUNT
)

161  
åue
;

165 c⁄° 
NALTERNATIVES
=
SLOT_COUNT
*(
HASH_COUNT
-1);

166 
	sÆã∫©ive
 {

167 
Ætbuckë
;

168 
¶Ÿödex
;

169 
hashfunc
;

170 } 
Æã∫©ives
[ 
NALTERNATIVES
 ];

171 
Æts_ödex
=0;

179 
i
=0; i < 
b
->
_cou¡
; i++)

181 
bÂid_t
 
pid
 = 
b
->
_¶Ÿs
[
i
]->
	`pid
();

185 
j
=0; j < 
HASH_COUNT
; j++)

188 
Æt
 = 
	`hash
(
j
,
pid
);

191 if(
Æt
 !
h
)

198 
Æã∫©ives
[
Æts_ödex
].
Ætbuckë
 = 
Æt
;

199 
Æã∫©ives
[
Æts_ödex
].
hashfunc
 = 
j
;

200 
Æã∫©ives
[
Æts_ödex
++].
¶Ÿödex
 = 
i
;

203 if(
	`cuckﬁd
(&
_èbÀ
[
Æt
], 
b
, 
i
, 
j
, 
moved
)) {

204  
åue
;

210 if(++
limô
 > 
BMAX
) {

211 
	`ADD_BFSTAT
(
_limô_ex˚eds
, 1);

213  
Ál£
;

224 
idx
[
NALTERNATIVES
];

225 
i
=0; i < 
NALTERNATIVES
; i++Ë
idx
[i] = i;

227 
°d
::
	`øndom_shufÊe
(
idx
,idx+
NALTERNATIVES
, 
bf_c‹e_m
::
hèb
::
ønd
);

229 
a
=0;á < 
NALTERNATIVES
;á++)

232 
Æti
 = 
idx
[
a
];

234 
Æt
 = 
Æã∫©ives
[
Æti
].
Ætbuckë
;

235 
i
 = 
Æã∫©ives
[
Æti
].
¶Ÿödex
;

236 
j
 = 
Æã∫©ives
[
Æti
].
hashfunc
;

240 if–
	`ísuª_•a˚
–
Æt
, 
limô
, 
moved
, 
ßve_pid_f‹_debug
) )

242 if–
	`cuckﬁd
–&
_èbÀ
[
Æt
], 
b
, 
i
, 
j
, 
moved
) ) {

243 
	`CHECK_ENTRY
(
h
, 
Ál£
);

244  
åue
;

249 if(
limô
 > 
BMAX
) {

257 
	`CHECK_ENTRY
(
h
, 
Ál£
);

258  
Ál£
;

259 
	}
}

267 
bfcb_t
* 
	gbf_c‹e_m
::
hèb
::
	$ö£π
(
bfcb_t
* 
t
)

269 
	`ADD_BFSTAT
(
_ö£πi⁄s
, 1);

275 
t
->
	`£t_hash_func
(
HASH_COUNT
);

277 
bfcb_t
 *
	`moved
(
NULL
);

279 
boﬁ
 
ok
 = 
	`_ö£π
(
t
, 
moved
);

280 if(!
ok
)

283 
	`W_FATAL_MSG
(
fcINTERNAL
, << "MustÑebuildÅhe hashÅable");

286  
moved
;

287 
	}
}

293 
	$©omic_max_32
(vﬁ©ûê*
èrgë
, 
¨g
)

295 
‹ig
=0;

296 
œrgî
 = 0;

298 
‹ig
 = *
èrgë
;

299 
œrgî
 = (
¨g
 > 
‹ig
) ?árg : orig;

302 
‹ig
 = (Ë
	`©omic_ˇs_32
((vﬁ©ûê
uöt32_t
 *)
èrgë
, orig, 
œrgî
);

303 } 
‹ig
 !
œrgî
);

304 
	}
};

312 
boﬁ
 
	gbf_c‹e_m
::
hèb
::
	$_ö£π
(
bfcb_t
* 
t
, bfcb_t* &
moved
)

314 
	`CHECK_TABLE
();

315 
buckë
* 
b
[
HASH_COUNT
];

316 
hashes
[
HASH_COUNT
];

319 
i
=0; i < 
HASH_COUNT
; i++)

321 
h
 = 
hashes
[
i
] = 
	`hash
(i,
t
->
	`pid
());

322 
buckë
* 
bb
 = 
b
[
i
] = &
_èbÀ
[
h
];

324 
	`ADD_BFSTAT
(
_¶Ÿs_åõd
, 1);

325 if(
bb
->
_cou¡
 < 
SLOT_COUNT
)

327 
	`CRITICAL_SECTION
(
cs
, 
bb
->
_lock
);

328 if(
bb
->
_cou¡
 < 
SLOT_COUNT
) {

330 
bb
->
_¶Ÿs
[bb->
_cou¡
++] = 
t
;

332 
t
->
	`£t_hash
(
h
);

333 
t
->
	`£t_hash_func
(
i
);

334 
	`w_as£π2
(
bb
->
_lock
.
	`is_möe
());

335 
cs
.
	`exô
();

336 
	`w_as£π2
(
bb
->
_lock
.
	`is_möe
()==
Ál£
);

337 
	`CHECK_ENTRY
(
i
, 
Ál£
);

338  
åue
;

343 #i‡
W_DEBUG_LEVEL
 > 2

348 
q
=0; q < 
HASH_COUNT
-1; q++)

350 if(
hashes
[
q
] == hashes[q+1]) {

351 
	`ADD_BFSTAT
(
_hash_cﬁlisi⁄s
, 1);

356 
bÂid_t
 
ßve_pid_f‹_debug
 = 
t
->
	`pid
();

360 
limô
=0;

361 
i
=0; i < 
HASH_COUNT
; i++)

363 
h
 = 
hashes
[
i
];

367 if(
	`ísuª_•a˚
(
h
, 
limô
, 
moved
, 
ßve_pid_f‹_debug
))

369 
buckë
* 
bÆt
 = 
b
[
i
];

371 
	`ADD_BFSTAT
(
_¶Ÿs_åõd
, 1);

372 
	`CRITICAL_SECTION
(
cs
, 
bÆt
->
_lock
);

373 if(
bÆt
->
_cou¡
 < 
SLOT_COUNT
)

376 
bÆt
->
_¶Ÿs
[bÆt->
_cou¡
++] = 
t
;

378 
t
->
	`£t_hash
(
hashes
[
i
]);

379 
t
->
	`£t_hash_func
(
i
);

380 
	`w_as£π2
(
bÆt
->
_lock
.
	`is_möe
());

381 
cs
.
	`exô
();

382 
	`w_as£π2
(
bÆt
->
_lock
.
	`is_möe
()==
Ál£
);

383 
	`CHECK_TABLE
();

391 if(
limô
 > 0) {

392 
	`ADD_BFSTAT
(
_¶ow_ö£πs
, 1);

396 
	`©omic_max_32
(&
_max_limô
, 
limô
);

399  
åue
;

403 
	`CHECK_TABLE
();

405 if(
limô
 > 1) {

406 
	`ADD_BFSTAT
(
_¶ow_ö£πs
, 1);

409 
	`©omic_max_32
(&
_max_limô
, 
limô
);

411 
	`W_FATAL_MSG
(
fcINTERNAL
, << "MustÑebuildÅhe hashÅable");

412  
Ál£
;

413 
	}
}

418 
bfcb_t
 *
	gbf_c‹e_m
::
hèb
::
	$lookup
(
bÂid_t
 c⁄° &
pid
) const

420 
bfcb_t
* 
p
 = 
NULL
;

421 
	`ADD_BFSTAT
(
_lookups
, 1);

423 
i
=0; i < 
HASH_COUNT
 && !
p
; i++)

425 
idx
 = 
	`hash
(
i
, 
pid
);

427 
buckë
 &
b
 = 
_èbÀ
[
idx
];

430 
s
=0; s < 
b
.
_cou¡
 && !
p
; s++)

432 
p
 = 
b
.
_¶Ÿs
[
s
];

434 if(!
p
) {

435 
	`ADD_BFSTAT
(
_¥obe_em±y
, 1);

438 
	`ADD_BFSTAT
(
_¥obes
, 1);

441 if(
p
->
	`pö_‰ame_if_pö√d
())

445 if(
p
->
	`pid
(Ë!
pid
) {

447 
p
->
	`u≈ö_‰ame
();

448 
p
 = 
NULL
;

456 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

457 
	`CRITICAL_SECTION
(
cs
, 
b
.
_lock
);

458 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
());

459 
p
 = 
b
.
_¶Ÿs
[
s
];

461 if(
p
 !
NULL
 &&Ö->
	`pid
(Ë=
pid
)

462 
p
->
	`pö_‰ame
();

464 
p
 = 
NULL
;

469 if(!
p
Ë∞
	`_lookup_h¨sh
(
pid
);

470 if(!
p
Ë
	`ADD_BFSTAT
(
_lookups_Áûed
, 1);

471  
p
;

472 
	}
}

476 
bfcb_t
 *
	gbf_c‹e_m
::
hèb
::
	$_lookup_h¨sh
(
bÂid_t
 c⁄° &
pid
) const

478 
	`ADD_BFSTAT
(
_h¨sh_lookups
, 1);

480 
hash_cou¡
 = 
HASH_COUNT
;

482 
idx
[
HASH_COUNT
];

484 
i
;

485 
i
=0; i < 
HASH_COUNT
; i++) {

486 
idx
[
i
] = 
	`hash
(i, 
pid
);

487 
	`w_as£π1
(
idx
[
i
] < 
_size
);

488 
	`w_as£π1
(
idx
[
i
] >= 0);

494 
boﬁ
 
ch™ged
=
åue
;

496 
ch™ged
=
Ál£
;

497 
i
=0; i < (
HASH_COUNT
-1); i++) {

498 
j
 = 
i
+1;

499 if(
idx
[
i
] =idx[
j
]) {

506 
	`ADD_BFSTAT
(
_hash_cﬁlisi⁄s
, 1);

507 
idx
[
j
] = 
_size
;

508 
hash_cou¡
--;

509 
	`w_as£π1
(
hash_cou¡
 > 0);

511 if–
idx
[
i
] > idx[
j
]) {

513 
tmp
 = 
idx
[
i
];

514 
idx
[
i
] = idx[
j
];

515 
idx
[
j
] = 
tmp
;

516 
ch™ged
 = 
åue
;

518 
	`w_as£π1
(
idx
[
i
] <idx[
j
]);

520 } 
ch™ged
);

523 
buckë
 *
b
[
HASH_COUNT
];

525 
i
=0; i < 
hash_cou¡
; i++) {

526 
b
[
i
] = &
_èbÀ
[
idx
[i]];

527 
	`w_as£π2
(
i
==0 || (
b
[i] >= b[i-1]));

529 
	`w_as£π1
(
b
[
i
]->
_lock
.
	`is_möe
()==
Ál£
);

530 
	`w_as£π1
(
b
[
i
]!=
NULL
);

531 
b
[
i
]->
_lock
.
	`acquúe
();

534 
bfcb_t
* 
ªsu…
 = 
NULL
;

535 
i
=0; i < 
hash_cou¡
 && 
ªsu…
; i++)

537 
	`w_as£π1
(
b
[
i
]->
_cou¡
 <
SLOT_COUNT
);

538 
s
=0; s < 
b
[
i
]->
_cou¡
 && 
ªsu…
; s++)

540 
bfcb_t
* 
p
 = 
b
[
i
]->
_¶Ÿs
[
s
];

541 
	`ADD_BFSTAT
(
_h¨sh_¥obes
, 1);

542 if(
p
 !
NULL
 &&Ö->
	`pid
(Ë=
pid
) {

543 
ªsu…
 = 
p
;Ñesu…->
	`pö_‰ame
();

548 
i
=0; i < 
hash_cou¡
; i++)

551 
	`w_as£π1
(
b
[
i
]->
_lock
.
	`is_möe
()==
åue
);

552 
b
[
i
]->
_lock
.
	`ªÀa£
();

554  
ªsu…
;

555 
	}
}

557 
boﬁ
 
	gbf_c‹e_m
::
hèb
::
	$ªmove
(
bfcb_t
* 
p
)

559 
	`w_as£π2
(
p
->
	`hash_func
(Ë!
HASH_COUNT
);

560 
	`w_as£π2
(
	`hash
(
p
->
	`hash_func
(),Ö->
	`pid
()) == (p->hash()));

561 
buckë
 &
b
 = 
_èbÀ
[
p
->
	`hash
()];

565 if((
b
.
_lock
.
	`is_möe
()==
Ál£
Ë|| (
p
->
	`pö_˙t
() > 0))  false;

567 
	`ADD_BFSTAT
(
_ªmoves
, 1);

568 
	`w_as£π1
(
b
.
_lock
.
	`is_möe
());

570 
i
=0; i < 
b
.
_cou¡
; i++)

572 if(
b
.
_¶Ÿs
[
i
] =
p
)

574 
p
->
	`£t_hash_func
(
HASH_COUNT
);

575 
b
.
_¶Ÿs
[
i
] = 
NULL
;

576 
b
.
_cou¡
--;

578 
j
=
i
; j < 
b
.
_cou¡
; j++) {

579 
b
.
_¶Ÿs
[
j
] = b._slots[j+1];

582 
	`CHECK_ENTRY
(
i
, 
åue
 );

584  
åue
;

587 
	`CHECK_TABLE
();

589  
Ál£
;

590 
	}
}

597 
boﬁ
 
	gbf_c‹e_m
::
hèb
::
	$_lookup
(c⁄° 
Õid_t
 &
pid
) const

599 c⁄° 
COUNT
 = 
hèb
::
HASH_COUNT
;

600 
idx
;

602 
i
=0; i < 
COUNT
; i++)

604 
idx
 = 
_hèb
->
	`hash
(
i
, 
pid
);

605 
buckë
 &
b
 = 
_hèb
->
_èbÀ
[
idx
];

607 
j
=0; j < 
b
.
_cou¡
; j++)

611 if(
b
.
_¶Ÿs
[
j
] && b._¶Ÿs[j]->
	`pid
(Ë=
pid
)

615  
åue
;

621  
Ál£
;

622 
	}
}

624 #i‡
W_DEBUG_LEVEL
 > 4

626 
	gbf_c‹e_m
::
hèb
::
	$check_èbÀ
() const

628 
sum
=0;

629 
i
=0; i < 
_size
; i++Ë
sum
 +
	`check
(i, 
Ál£
);

630  
sum
;

631 
	}
}

634 
	gbf_c‹e_m
::
hèb
::
	$check_íåy
(
bki
, 
boﬁ
 
have_lock
) const

636 
buckë
 &
b
 = 
_èbÀ
[
bki
];

638 
	`w_as£π1
(
b
.
_cou¡
 <
SLOT_COUNT
);

639 
hashes
[
HASH_COUNT
];

640 
s
=0; s < 
b
.
_cou¡
; s++)

642 
bfcb_t
 *
cb
 = 
b
.
_¶Ÿs
[
s
];

643 
	`w_as£π1
(
cb
 !
NULL
);

644 if(!
have_lock
Ë
	`w_as£π2
(
b
.
_lock
.
	`is_möe
(Ë=
Ál£
);

646 
bÂid_t
 
pid
 = 
cb
->pid;

649 
j
=0; j< 
HASH_COUNT
; j++) {

650 
hashes
[
j
] = 
	`hash
(j,
pid
);

652 
	`w_as£π1
(
cb
->
hash_func
 !
HASH_COUNT
);

653 
	`w_as£π1
(
hashes
[
cb
->
hash_func
] =
bki
);

654 
	`w_as£π1
(
cb
->
hash
 =
bki
);

655 
	`w_as£π1
(
cb
->
pö_˙t
 == 0);

661 if(
cb
->
pö_˙t
 >0) cb->pin_cnt = 0;

663  
b
.
_cou¡
;

664 
	}
}

669 
	gbf_c‹e_m
::
hèb
::
	$°©s
(
bf_hèb_°©s_t
 &
out
) const

671 *(&
out
.
bf_hèb_buckë_size
Ë(
buckë
);

672 *(&
out
.
bf_hèb_èbÀ_size
Ë(
buckë
Ë* 
_size
;

673 *(&
out
.
bf_hèb_buckës
Ë
_size
;

674 *(&
out
.
bf_hèb_¶Ÿ_cou¡
Ë
SLOT_COUNT
;

675 *(&
out
.
bf_hèb_max_limô
Ë
_max_limô
;

676 
	}
}

	@src/sm/bf_htab.h

54 
	~"w_deföes.h
"

57 #i‚de‡
BF_HTAB_H


58 
	#BF_HTAB_H


	)

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


97 
	~<Æg‹ôhm
>

99 ˛as†
	cbf_c‹e_m
::
hèb


101 #ifde‡
HTAB_UNIT_TEST_C


104 
‰õnd
 
bfcb_t
* 
hèb_lookup
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &) ;

105 
‰õnd
 
bfcb_t
* 
hèb_ö£π
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &);

106 
‰õnd
 
boﬁ
 
hèb_ªmove
(
bf_c‹e_m
 *, 
bÂid_t
 c⁄° &
pid
, 
T°©s
 &) ;

107 
‰õnd
 
hèb_dum∂ocks
(
bf_c‹e_m
*);

108 
‰õnd
 
hèb_cou¡
(
bf_c‹e_m
 *
c‹e
, &
‰ames
, &
¶Ÿs
);

110 
‰õnd
 
	mbf_c‹e_m
::
öô_thªad_t
 ;

111 
‰õnd
 
˛ass
 
	mbf_c‹e_m
;

112 
	m¥Ÿe˘ed
:

113 c⁄° 
HASH_COUNT
 = 2;

114 
	m¥iv©e
:

115 c⁄° 
SLOT_COUNT
 = 3;

124 c⁄° 
	mBMAX
 = (
SLOT_COUNT
-1Ë* (
HASH_COUNT
-1) * 10;

127 
	mw_hashög
::
hash2
 
_hash
[
HASH_COUNT
];

128 
	m_size
;

129 
	m_avg
;

131 
	mpublic
:

132 ˛as†
	cbuckë
 {

133 
public
:

136 
èès_lock
 
_lock
;

137 
bfcb_t
* vﬁ©ûê
	m_¶Ÿs
[
SLOT_COUNT
];

138 
	m_cou¡
;

139 
NORET
 
buckë
(Ë: 
_cou¡
(0) {

140 
i
=0; 
	mi
<
	mSLOT_COUNT
; i++Ë
	m_¶Ÿs
[i]=0;

143 
bfcb_t
 *
gë_‰ame
(
bÂid_t
 
pid
) {

144 
	mi
=0; i < 
	m_cou¡
; i++) {

145 
bfcb_t
 *
	mp
 = 
_¶Ÿs
[
i
];

146 if(
	mp
 &&Ö->
pid
(Ë=pidË 
p
;

148  
	mNULL
;

152 
buckë
* 
	g_èbÀ
;

153 
	gpublic
:

154 
	#ADD_BFSTAT
(
x
,
w
Ë
	`me
()->
	`TL_°©s
().
bfht
.
bf_hèb
##x++

	)

155 
muèbÀ
 
	g_max_limô
;

157 
	g¥iv©e
:

158 
boﬁ
 
cuckﬁd
(
buckë
* 
de°
, buckë* 
§c
, 
which
, 
hashfunc
,

159 
bfcb_t
* &
moved
) ;

160 
boﬁ
 
ísuª_•a˚
(
h
, &
limô
, 
bfcb_t
 *&
moved
, c⁄° 
bÂid_t


161 &
ßve_pid_f‹_debug
) ;

162 
	$ønd
(
n
Ë{  
	`me
()->
	`øndn
“); 
	}
}

163 
boﬁ
 
_ö£π
(
bfcb_t
* 
p
, bfcb_à*&
moved
);

165 #i‡
W_DEBUG_LEVEL
 > 4

168 
	$check_èbÀ
() const;

169 
	$check_íåy
(
i
, 
boﬁ
 
have_lock
) const;

170 
	#CHECK_TABLE
(Ë
	$check_èbÀ
()

	)

171 
	#CHECK_ENTRY
(
i
,
j
Ë
	$check_íåy
(
i
,
j
)

	)

173 
	#CHECK_TABLE
()

	)

174 
	#CHECK_ENTRY
(
i
,
j
)

	)

178 
public
:

179 
NORET
 
	$hèb
(
i
Ë: 
	`_size
(iË, 
	`_avg
(0), 
	$_max_limô
(0)

180 { 
_èbÀ
 = 
√w
 
buckë
[
i
]; 
	}
}

182 
	gNORET
 ~
	$hèb
(Ë{ 
dñëe
[] 
_èbÀ
; 
	}
}

184 
	$°©s
(
bf_hèb_°©s_t
 &) const;

186 
bfcb_t
 *
	$lookup
(
bÂid_t
 c⁄° &
pid
) const;

187 
bfcb_t
 *
	$_lookup_h¨sh
(
bÂid_t
 c⁄° &
pid
) const;

188 
boﬁ
 
	$_lookup
(c⁄° 
Õid_t
 &
pid
) const;

192 
bfcb_t
* 
	`ö£π
(bfcb_t* 
p
);

193 
boﬁ
 
	`ªmove
(
bfcb_t
 *
p
);

195 
	$hash
(
h
, 
bÂid_t
 c⁄° &
pid
) const {

196 
	`w_as£π1
(
h
 >0 && h < 
HASH_COUNT
);

197 
x
 = 
pid
.
	`vﬁ
(Ë^Öid.
∑ge
;

198  
_hash
[
h
](
x
Ë% 
_size
;

199 
	}
}

201 
	$¥öt_hi°o
() const;

202 
	$¥öt_hﬁdîs
() const;

203 
	$¥öt_occu∑¡s
() const;

205 
	}
};

	@src/sm/bf_htab_stats_t_collect_enum_gen.h

1 #i‚de‡
BF_HTAB_STATS_T_COLLECT_ENUM_GEN_H


2 
	#BF_HTAB_STATS_T_COLLECT_ENUM_GEN_H


	)

36 
	gVT_bf_hèb_ö£πi⁄s
,

37 
	gVT_bf_hèb_¶ow_ö£πs
,

38 
	gVT_bf_hèb_¶Ÿs_åõd
,

39 
	gVT_bf_hèb_ísuªs
,

40 
	gVT_bf_hèb_cuckﬁds
,

41 
	gVT_bf_hèb_lookups
,

42 
	gVT_bf_hèb_h¨sh_lookups
,

43 
	gVT_bf_hèb_lookups_Áûed
,

44 
	gVT_bf_hèb_¥obes
,

45 
	gVT_bf_hèb_h¨sh_¥obes
,

46 
	gVT_bf_hèb_¥obe_em±y
,

47 
	gVT_bf_hèb_hash_cﬁlisi⁄s
,

48 
	gVT_bf_hèb_ªmoves
,

49 
	gVT_bf_hèb_limô_ex˚eds
,

50 
	gVT_bf_hèb_max_limô
,

51 
	gVT_bf_hèb_ö£π_avg_åõs
,

52 
	gVT_bf_hèb_lookup_avg_¥obes
,

53 
	gVT_bf_hèb_buckë_size
,

54 
	gVT_bf_hèb_èbÀ_size
,

55 
	gVT_bf_hèb_íåõs
,

56 
	gVT_bf_hèb_buckës
,

57 
	gVT_bf_hèb_¶Ÿ_cou¡
,

	@src/sm/bf_htab_stats_t_collect_gen.cpp

1 #i‚de‡
BF_HTAB_STATS_T_COLLECT_GEN_CPP


2 
	#BF_HTAB_STATS_T_COLLECT_GEN_CPP


	)

36 
	gt
.
£t_ba£
(
VT_bf_hèb_ö£πi⁄s
, 
TMP_GET_STAT
(
bf_hèb_ö£πi⁄s
));

37 
	gt
.
£t_ba£
(
VT_bf_hèb_¶ow_ö£πs
, 
TMP_GET_STAT
(
bf_hèb_¶ow_ö£πs
));

38 
	gt
.
£t_ba£
(
VT_bf_hèb_¶Ÿs_åõd
, 
TMP_GET_STAT
(
bf_hèb_¶Ÿs_åõd
));

39 
	gt
.
£t_ba£
(
VT_bf_hèb_ísuªs
, 
TMP_GET_STAT
(
bf_hèb_ísuªs
));

40 
	gt
.
£t_ba£
(
VT_bf_hèb_cuckﬁds
, 
TMP_GET_STAT
(
bf_hèb_cuckﬁds
));

41 
	gt
.
£t_ba£
(
VT_bf_hèb_lookups
, 
TMP_GET_STAT
(
bf_hèb_lookups
));

42 
	gt
.
£t_ba£
(
VT_bf_hèb_h¨sh_lookups
, 
TMP_GET_STAT
(
bf_hèb_h¨sh_lookups
));

43 
	gt
.
£t_ba£
(
VT_bf_hèb_lookups_Áûed
, 
TMP_GET_STAT
(
bf_hèb_lookups_Áûed
));

44 
	gt
.
£t_ba£
(
VT_bf_hèb_¥obes
, 
TMP_GET_STAT
(
bf_hèb_¥obes
));

45 
	gt
.
£t_ba£
(
VT_bf_hèb_h¨sh_¥obes
, 
TMP_GET_STAT
(
bf_hèb_h¨sh_¥obes
));

46 
	gt
.
£t_ba£
(
VT_bf_hèb_¥obe_em±y
, 
TMP_GET_STAT
(
bf_hèb_¥obe_em±y
));

47 
	gt
.
£t_ba£
(
VT_bf_hèb_hash_cﬁlisi⁄s
, 
TMP_GET_STAT
(
bf_hèb_hash_cﬁlisi⁄s
));

48 
	gt
.
£t_ba£
(
VT_bf_hèb_ªmoves
, 
TMP_GET_STAT
(
bf_hèb_ªmoves
));

49 
	gt
.
£t_ba£
(
VT_bf_hèb_limô_ex˚eds
, 
TMP_GET_STAT
(
bf_hèb_limô_ex˚eds
));

50 
	gt
.
£t_ba£
(
VT_bf_hèb_max_limô
, 
TMP_GET_STAT
(
bf_hèb_max_limô
));

51 
	gt
.
£t_ba£
(
VT_bf_hèb_ö£π_avg_åõs
, 
TMP_GET_STAT
(
bf_hèb_ö£π_avg_åõs
));

52 
	gt
.
£t_ba£
(
VT_bf_hèb_lookup_avg_¥obes
, 
TMP_GET_STAT
(
bf_hèb_lookup_avg_¥obes
));

53 
	gt
.
£t_ba£
(
VT_bf_hèb_buckë_size
, 
TMP_GET_STAT
(
bf_hèb_buckë_size
));

54 
	gt
.
£t_ba£
(
VT_bf_hèb_èbÀ_size
, 
TMP_GET_STAT
(
bf_hèb_èbÀ_size
));

55 
	gt
.
£t_ba£
(
VT_bf_hèb_íåõs
, 
TMP_GET_STAT
(
bf_hèb_íåõs
));

56 
	gt
.
£t_ba£
(
VT_bf_hèb_buckës
, 
TMP_GET_STAT
(
bf_hèb_buckës
));

57 
	gt
.
£t_ba£
(
VT_bf_hèb_¶Ÿ_cou¡
, 
TMP_GET_STAT
(
bf_hèb_¶Ÿ_cou¡
));

	@src/sm/bf_htab_stats_t_dec_gen.cpp

1 #i‚de‡
BF_HTAB_STATS_T_DEC_GEN_CPP


2 
	#BF_HTAB_STATS_T_DEC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gbf_hèb_°©s_t
 &

39 
	g›î©‹
-=(
bf_hèb_°©s_t
 &
s
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
)

41 
	gs
.
	gbf_hèb_ö£πi⁄s
 -
t
.
bf_hèb_ö£πi⁄s
;

42 
	gs
.
	gbf_hèb_¶ow_ö£πs
 -
t
.
bf_hèb_¶ow_ö£πs
;

43 
	gs
.
	gbf_hèb_¶Ÿs_åõd
 -
t
.
bf_hèb_¶Ÿs_åõd
;

44 
	gs
.
	gbf_hèb_ísuªs
 -
t
.
bf_hèb_ísuªs
;

45 
	gs
.
	gbf_hèb_cuckﬁds
 -
t
.
bf_hèb_cuckﬁds
;

46 
	gs
.
	gbf_hèb_lookups
 -
t
.
bf_hèb_lookups
;

47 
	gs
.
	gbf_hèb_h¨sh_lookups
 -
t
.
bf_hèb_h¨sh_lookups
;

48 
	gs
.
	gbf_hèb_lookups_Áûed
 -
t
.
bf_hèb_lookups_Áûed
;

49 
	gs
.
	gbf_hèb_¥obes
 -
t
.
bf_hèb_¥obes
;

50 
	gs
.
	gbf_hèb_h¨sh_¥obes
 -
t
.
bf_hèb_h¨sh_¥obes
;

51 
	gs
.
	gbf_hèb_¥obe_em±y
 -
t
.
bf_hèb_¥obe_em±y
;

52 
	gs
.
	gbf_hèb_hash_cﬁlisi⁄s
 -
t
.
bf_hèb_hash_cﬁlisi⁄s
;

53 
	gs
.
	gbf_hèb_ªmoves
 -
t
.
bf_hèb_ªmoves
;

54 
	gs
.
	gbf_hèb_limô_ex˚eds
 -
t
.
bf_hèb_limô_ex˚eds
;

55 
	gs
.
	gbf_hèb_max_limô
 -
t
.
bf_hèb_max_limô
;

56 
	gs
.
	gbf_hèb_ö£π_avg_åõs
 -
t
.
bf_hèb_ö£π_avg_åõs
;

57 
	gs
.
	gbf_hèb_lookup_avg_¥obes
 -
t
.
bf_hèb_lookup_avg_¥obes
;

58 
	gs
.
	gbf_hèb_buckë_size
 -
t
.
bf_hèb_buckë_size
;

59 
	gs
.
	gbf_hèb_èbÀ_size
 -
t
.
bf_hèb_èbÀ_size
;

60 
	gs
.
	gbf_hèb_íåõs
 -
t
.
bf_hèb_íåõs
;

61 
	gs
.
	gbf_hèb_buckës
 -
t
.
bf_hèb_buckës
;

62 
	gs
.
	gbf_hèb_¶Ÿ_cou¡
 -
t
.
bf_hèb_¶Ÿ_cou¡
;

63  
	gs
;

	@src/sm/bf_htab_stats_t_inc_gen.cpp

1 #i‚de‡
BF_HTAB_STATS_T_INC_GEN_CPP


2 
	#BF_HTAB_STATS_T_INC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gbf_hèb_°©s_t
 &

39 
	g›î©‹
+=(
bf_hèb_°©s_t
 &
s
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
)

41 
	gs
.
	gbf_hèb_ö£πi⁄s
 +
t
.
bf_hèb_ö£πi⁄s
;

42 
	gs
.
	gbf_hèb_¶ow_ö£πs
 +
t
.
bf_hèb_¶ow_ö£πs
;

43 
	gs
.
	gbf_hèb_¶Ÿs_åõd
 +
t
.
bf_hèb_¶Ÿs_åõd
;

44 
	gs
.
	gbf_hèb_ísuªs
 +
t
.
bf_hèb_ísuªs
;

45 
	gs
.
	gbf_hèb_cuckﬁds
 +
t
.
bf_hèb_cuckﬁds
;

46 
	gs
.
	gbf_hèb_lookups
 +
t
.
bf_hèb_lookups
;

47 
	gs
.
	gbf_hèb_h¨sh_lookups
 +
t
.
bf_hèb_h¨sh_lookups
;

48 
	gs
.
	gbf_hèb_lookups_Áûed
 +
t
.
bf_hèb_lookups_Áûed
;

49 
	gs
.
	gbf_hèb_¥obes
 +
t
.
bf_hèb_¥obes
;

50 
	gs
.
	gbf_hèb_h¨sh_¥obes
 +
t
.
bf_hèb_h¨sh_¥obes
;

51 
	gs
.
	gbf_hèb_¥obe_em±y
 +
t
.
bf_hèb_¥obe_em±y
;

52 
	gs
.
	gbf_hèb_hash_cﬁlisi⁄s
 +
t
.
bf_hèb_hash_cﬁlisi⁄s
;

53 
	gs
.
	gbf_hèb_ªmoves
 +
t
.
bf_hèb_ªmoves
;

54 
	gs
.
	gbf_hèb_limô_ex˚eds
 +
t
.
bf_hèb_limô_ex˚eds
;

55 
	gs
.
	gbf_hèb_max_limô
 +
t
.
bf_hèb_max_limô
;

56 
	gs
.
	gbf_hèb_ö£π_avg_åõs
 +
t
.
bf_hèb_ö£π_avg_åõs
;

57 
	gs
.
	gbf_hèb_lookup_avg_¥obes
 +
t
.
bf_hèb_lookup_avg_¥obes
;

58 
	gs
.
	gbf_hèb_buckë_size
 +
t
.
bf_hèb_buckë_size
;

59 
	gs
.
	gbf_hèb_èbÀ_size
 +
t
.
bf_hèb_èbÀ_size
;

60 
	gs
.
	gbf_hèb_íåõs
 +
t
.
bf_hèb_íåõs
;

61 
	gs
.
	gbf_hèb_buckës
 +
t
.
bf_hèb_buckës
;

62 
	gs
.
	gbf_hèb_¶Ÿ_cou¡
 +
t
.
bf_hèb_¶Ÿ_cou¡
;

63  
	gs
;

	@src/sm/bf_htab_stats_t_msg_gen.h

1 #i‚de‡
BF_HTAB_STATS_T_MSG_GEN_H


2 
	#BF_HTAB_STATS_T_MSG_GEN_H


	)

	@src/sm/bf_htab_stats_t_out_gen.cpp

1 #i‚de‡
BF_HTAB_STATS_T_OUT_GEN_CPP


2 
	#BF_HTAB_STATS_T_OUT_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	go°ªam
 &

39 
	g›î©‹
<<(
	go°ªam
 &
	go
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
)

41 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_ö£πi⁄†" << 
	gt
.
	gbf_hèb_ö£πi⁄s
 << 
	gídl
;

42 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_¶ow_ö£π†" << 
	gt
.
	gbf_hèb_¶ow_ö£πs
 << 
	gídl
;

43 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_¶Ÿs_åõd " << 
	gt
.
	gbf_hèb_¶Ÿs_åõd
 << 
	gídl
;

44 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_ísuª†" << 
	gt
.
	gbf_hèb_ísuªs
 << 
	gídl
;

45 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_cuckﬁd†" << 
	gt
.
	gbf_hèb_cuckﬁds
 << 
	gídl
;

46 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_lookup†" << 
	gt
.
	gbf_hèb_lookups
 << 
	gídl
;

47 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_h¨sh_lookup†" << 
	gt
.
	gbf_hèb_h¨sh_lookups
 << 
	gídl
;

48 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_lookups_Áûed " << 
	gt
.
	gbf_hèb_lookups_Áûed
 << 
	gídl
;

49 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_¥obe†" << 
	gt
.
	gbf_hèb_¥obes
 << 
	gídl
;

50 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_h¨sh_¥obe†" << 
	gt
.
	gbf_hèb_h¨sh_¥obes
 << 
	gídl
;

51 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_¥obe_em±y " << 
	gt
.
	gbf_hèb_¥obe_em±y
 << 
	gídl
;

52 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_hash_cﬁlisi⁄†" << 
	gt
.
	gbf_hèb_hash_cﬁlisi⁄s
 << 
	gídl
;

53 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_ªmove†" << 
	gt
.
	gbf_hèb_ªmoves
 << 
	gídl
;

54 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_limô_ex˚ed†" << 
	gt
.
	gbf_hèb_limô_ex˚eds
 << 
	gídl
;

55 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_max_limô " << 
	gt
.
	gbf_hèb_max_limô
 << 
	gídl
;

56 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_ö£π_avg_åõ†" << 
	gt
.
	gbf_hèb_ö£π_avg_åõs
 << 
	gídl
;

57 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_lookup_avg_¥obe†" << 
	gt
.
	gbf_hèb_lookup_avg_¥obes
 << 
	gídl
;

58 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_buckë_sizê" << 
	gt
.
	gbf_hèb_buckë_size
 << 
	gídl
;

59 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_èbÀ_sizê" << 
	gt
.
	gbf_hèb_èbÀ_size
 << 
	gídl
;

60 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_íåõ†" << 
	gt
.
	gbf_hèb_íåõs
 << 
	gídl
;

61 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_buckë†" << 
	gt
.
	gbf_hèb_buckës
 << 
	gídl
;

62 
	go
 << 
£tw
(
W_bf_hèb_°©s_t
Ë<< "bf_hèb_¶Ÿ_cou¡ " << 
	gt
.
	gbf_hèb_¶Ÿ_cou¡
 << 
	gídl
;

63  
	go
;

	@src/sm/bf_htab_stats_t_struct_gen.h

1 #i‚de‡
BF_HTAB_STATS_T_STRUCT_GEN_H


2 
	#BF_HTAB_STATS_T_STRUCT_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_ö£πi⁄s
;

39 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_¶ow_ö£πs
;

40 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_¶Ÿs_åõd
;

41 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_ísuªs
;

42 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_cuckﬁds
;

43 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_lookups
;

44 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_h¨sh_lookups
;

45 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_lookups_Áûed
;

46 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_¥obes
;

47 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_h¨sh_¥obes
;

48 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_¥obe_em±y
;

49 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_hash_cﬁlisi⁄s
;

50 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_ªmoves
;

51 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_limô_ex˚eds
;

52 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_max_limô
;

53 
	gw_ba£_t
::
ba£_Êﬂt_t
 
bf_hèb_ö£π_avg_åõs
;

54 
	gw_ba£_t
::
ba£_Êﬂt_t
 
bf_hèb_lookup_avg_¥obes
;

55 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_buckë_size
;

56 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_èbÀ_size
;

57 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_íåõs
;

58 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_buckës
;

59 
	gw_ba£_t
::
ba£_°©_t
 
bf_hèb_¶Ÿ_cou¡
;

60 
	gpublic
:

61 
‰õnd
 
o°ªam
 &

62 
›î©‹
<<(
o°ªam
 &
o
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
);

63 
	gpublic
:

64 
‰õnd
 
bf_hèb_°©s_t
 &

65 
›î©‹
+=(
bf_hèb_°©s_t
 &
s
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
);

66 
	gpublic
:

67 
‰õnd
 
bf_hèb_°©s_t
 &

68 
›î©‹
-=(
bf_hèb_°©s_t
 &
s
,c⁄° 
	gbf_hèb_°©s_t
 &
	gt
);

69 c⁄° *
	g°©_«mes
[];

70 c⁄° *
	g°©_ty≥s
;

71 
	#W_bf_hèb_°©s_t
 25 + 2

	)

	@src/sm/bf_htab_test.cpp

54 
	~"w_deföes.h
"

65 
	~<°dio.h
>

66 
	~<c°dlib
>

67 
	~"sm_öt_0.h
"

69 
	#HTAB_UNIT_TEST_C


	)

70 
	~"bf_s.h
"

71 
	~"bf_c‹e.h
"

72 
	~"w_hashög.h
"

73 
	~"bf_hèb.h
"

89 
	$hèb_dum∂ocks
(
bf_c‹e_m
 *
c‹e
)

91 
sz

c‹e
->
_hèb
->
_size
;

93 
i
=0; i < 
sz
; i++)

95 
bf_c‹e_m
::
hèb
::
buckë
 &
b
 = 
c‹e
->
_hèb
->
_èbÀ
[
i
];

96 if(
b
.
_lock
.
	`is_möe
())

98 
˚º
 << "buckë " << 
i
 << " hñd" << 
ídl
;

101 
	}
}

103 
	$hèb_cou¡
(
bf_c‹e_m
 *
c‹e
, &
‰ames
, &
¶Ÿs
)

105 
¶Ÿs
 = 0;

106 
sz

c‹e
->
_hèb
->
_size
;

107 
i
=0; i < 
sz
; i++)

109 
bf_c‹e_m
::
hèb
::
buckë
 &
b
 = 
c‹e
->
_hèb
->
_èbÀ
[
i
];

110 
¶Ÿs
 +
b
.
_cou¡
;

112 
‰ames
 = 
c‹e
->
_num_bufs
;

113 
	}
}

115 
bfcb_t
* 
	$hèb_lookup
(
bf_c‹e_m
 *
c‹e
, 
bÂid_t
 c⁄° &
pid
,

116 
bf_c‹e_m
::
T°©s
 &
s
)

118 
bfcb_t
 *
ªt
 = 
c‹e
->
_hèb
->
	`lookup
(
pid
);

120 
s
 = 
	`me
()->
	`TL_°©s
().
bfht
;

121  
ªt
;

122 
	}
}

125 
bfcb_t
* 
	$hèb_ö£π
(
bf_c‹e_m
 *
c‹e
, 
bÂid_t
 c⁄° &
pid
, bf_c‹e_m::
T°©s
 &
s
)

128 
boﬁ
 
	`Æªady_thîe
(
Ál£
);

130 
bfcb_t
 *
ªt
 = 
c‹e
->
_hèb
->
	`lookup
(
pid
);

131 if(
ªt
) {

132 
Æªady_thîe
 = 
åue
;

133 
	`hèb_ªmove
(
c‹e
, 
pid
, 
s
);

136 
bfcb_t
 *
ªt2
 = 
c‹e
->
_hèb
->
	`lookup
(
pid
);

137 
	`w_as£π0
(
ªt2
 =
NULL
);

139 
bfcb_t
 *
cb
 ;

140 if(
Æªady_thîe
) {

141 
cb
 = 
ªt
;

145 
ªt
 = 
NULL
;

146 
cb
 = 
c‹e
->
	`ª∂a˚mít
();

147 
	`w_as£π0
(
cb
->
œtch
.
	`is_möe
());

148 
cb
->
œtch
.
	`œtch_ªÀa£
();

150 if(
cb
 =
NULL
) {

151 
˚º
 << " htab_insert couldÇot getáÑeplacement frame "

152 << 
ídl
;

155 if(
cb
) {

156 if(
cb
->
	`ﬁd_pid_vÆid
()) {

160 
cb
->
	`£t_pid
(
pid
);

161 
cb
->
	`zîo_pö_˙t
();

163 
ªt
 = 
c‹e
->
_hèb
->
	`ö£π
(
cb
);

166 
s
 = 
	`me
()->
	`TL_°©s
().
bfht
;

169 #i‡
W_DEBUG_LEVEL
 > 1

170 
sz

c‹e
->
_hèb
->
_size
;

171 
i
=0; i < 
sz
; i++)

173 
bf_c‹e_m
::
hèb
::
buckë
 &
b
 = 
c‹e
->
_hèb
->
_èbÀ
[
i
];

174 
	`w_as£π2
(
b
.
_lock
.
	`is_möe
()==
Ál£
);

178  
ªt
;

179 
	}
}

181 
boﬁ
 
	$hèb_ªmove
(
bf_c‹e_m
 *
c‹e
, 
bÂid_t
 c⁄° &
pid
, bf_c‹e_m::
T°©s
 &
s
)

183 
boﬁ
 
	`ªt
(
Ál£
);

184 
bfcb_t
 *
cb
 = 
c‹e
->
_hèb
->
	`lookup
(
pid
);

186 if(
cb
) {

190 
idx
 = 
c‹e
->
_hèb
->
	`hash
(
cb
->
	`hash_func
(), 
pid
);

191 
bf_c‹e_m
::
hèb
::
buckë
 &
b
 = 
c‹e
->
_hèb
->
_èbÀ
[
idx
];

192 
cb
->
	`zîo_pö_˙t
();

193 
	`CRITICAL_SECTION
(
cs
, 
b
.
_lock
);

195 
boﬁ
 
buŒ
 = 
c‹e
->
_hèb
->
	`ªmove
(
cb
);

196 
	`w_as£π0
(
buŒ
);

197 
	`w_as£π1
(
cb
->
	`pö_˙t
() == 0);

202 if(
ªt
) {

203 
	`w_as£π2
(
cb
->
	`hash_func
(Ë=
bf_c‹e_m
::
hèb
::
HASH_COUNT
);

206 
s
 = 
	`me
()->
	`TL_°©s
().
bfht
;

207  
ªt
;

208 
	}
}

	@src/sm/bf_prefetch.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

59 
	#BF_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄
 "bf_prefetch.h"

65 
	~<sm_öt_0.h
>

66 
	~<bf_¥e„tch.h
>

76 
	gbf_¥e„tch_thªad_t
::
¥e„tch_°©us_t


77 
bf_¥e„tch_thªad_t
::
_èbÀ
[

78 
bf_¥e„tch_thªad_t
::
pf_max_unu£d_°©us
][

79 
bf_¥e„tch_thªad_t
::
pf_max_unu£d_evít
] =

81 
	#INI
 
bf_¥e„tch_thªad_t
::
pf_öô


	)

82 
	#REQ
 
bf_¥e„tch_thªad_t
::
pf_ªque°ed


	)

83 
	#TRS
 
bf_¥e„tch_thªad_t
::
pf_ö_å™sô


	)

84 
	#AVL
 
bf_¥e„tch_thªad_t
::
pf_avaûabÀ


	)

85 
	#GRB
 
bf_¥e„tch_thªad_t
::
pf_gøbbed


	)

86 
	#FAI
 
bf_¥e„tch_thªad_t
::
pf_Áûuª


	)

87 
	#FTL
 
bf_¥e„tch_thªad_t
::
pf_Áèl


	)

88 
	#LST


	)

98 
REQ
, 
INI
, 
FTL
, FTL, FTL, FTL, INI

100 
REQ
, REQ, 
TRS
, 
FTL
, 
GRB
, 
FAI
, REQ

102 
FTL
, 
TRS
, FTL, 
AVL
, 
GRB
, 
FAI
, FTL

104 
FTL
, 
AVL
, FTL, FTL, 
INI
, 
FAI
, INI

106 
FTL
, 
GRB
, FTL, 
INI
, INI, 
FAI
, INI

108 
FAI
, 
INI
, 
FTL
, FAI, FAI, FTL, INI

110 
FTL
, FTL, FTL, FTL, FTL, FTL, FTL

112 
LST
 LST LST LST LST LST LST

114 #unde‡
INI


115 #unde‡
REQ


116 #unde‡
TRS


117 #unde‡
AVL


118 #unde‡
GRB


119 #unde‡
FAI


120 #unde‡
FTL


121 #unde‡
LST


123 
NORET


124 
	gbf_¥e„tch_thªad_t
::
	$bf_¥e„tch_thªad_t
(
i
)

125 : 
	`smthªad_t
(
t_ªguœr
, "bf_prefetch"),

126 
	`_fix_îr‹_i
(0),

127 
	`_n
(
i
+1),

128 
	`_öfo
(0),

129 
	`_f
(0),

130 
	$_ªtúe
(
Ál£
)

132 
	`FUNC
(
bf_¥e„tch_thªad_t
::bf_prefetch_thread_t);

134 
	`w_as£π3
(
i
==1);

135 
	`_öô
(
_n
);

136 
	}
}

139 
	gbf_¥e„tch_thªad_t
::
	$√w_°©e
(
i
, 
¥e„tch_evít_t
 
e
)

141 
	`FUNC
(
bf_¥e„tch_thªad_t
::
√w_°©e
);

144 
¥e„tch_°©us_t
 
nw
;

145 
¥e„tch_°©us_t
 
ﬁd
;

146 
bf_¥e„tch_thªad_t
::
‰ame_öfo
 &
öf
 = 
_öfo
[
i
];

147 
ﬁd
 = 
öf
.
_°©us
;

148 if–(
nw
 = 
_èbÀ
[
ﬁd
][
e
]Ë=
pf_Áèl
) {

149 
˚º
 << "BadÅønsôi⁄ f‹ sèã " << (
ﬁd
)

150 << "ándÉvíà" << (
e
)

151 <<
ídl
;

152 
	`W_FATAL
(
fcINTERNAL
);

154 
	`DBGTHRD
(<< " ch™gê: _èbÀ[" << (
ﬁd
Ë<< "," << (
e
)

155 << "] ->" << (
nw
));

157 
öf
.
_°©us
 = 
nw
;

158 if(
ﬁd
 !
nw
) {

159 
nw
) {

160 
pf_Áûuª
:

161 
	`w_as£π3
(
_fix_îr‹
.
	`is_îr‹
());

162 
_fix_îr‹_i
 = 
i
;

164 
pf_gøbbed
:

165 
	`w_as£π3
(
_n
 == 2);

166 
	`DBGTHRD
(<<"BUMPING INDEX from " << 
_f


167 << "Åÿ" << (1-
_f
)

169 
_f
 = 1-_f;

171 
pf_öô
:

172 if(
ﬁd
 !
pf_Áûuª
) {

173 
öf
.
_∑ge
.
	`unfix
();

176 
pf_avaûabÀ
:

179 
öf
.
_∑ge
.
	`unfix
();

185 
	}
}

188 
	gbf_¥e„tch_thªad_t
::
	$_öô
(
i
)

190 
	`FUNC
(
bf_¥e„tch_thªad_t
::
öô
);

191 
	`DBGTHRD
("initializing ");

192 
_öfo
 = 
√w
 
‰ame_öfo
[
i
];

194 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_a˘iv©e
, 
NULL
));

195 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_¥e„tch_muãx
, 
NULL
));

196 
	}
}

198 
NORET


199 
	gbf_¥e„tch_thªad_t
:: ~
	$bf_¥e„tch_thªad_t
()

201 
	`FUNC
(
bf_¥e„tch_thªad_t
::~bf_prefetch_thread_t);

202 if(
_öfo
) {

203 
	`CRITICAL_SECTION
(
cs
, 
_¥e„tch_muãx
);

204 
j
;

205 
j
=0; j<
_n
; j++) {

206 
	`√w_°©e
(
j
, 
pf_de°ru˘‹
);

208 
cs
.
	`exô
();

210 
dñëe
[] 
_öfo
;

211 
_öfo
 = 0;

213 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
_¥e„tch_muãx
));

214 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_a˘iv©e
));

215 
	}
}

218 
	gbf_¥e„tch_thªad_t
::
	$ªtúe
()

220 
	`FUNC
(
bf_¥e„tch_thªad_t
::
ªtúe
);

222 
	`CRITICAL_SECTION
(
cs
, 
_¥e„tch_muãx
);

223 
_ªtúe
 = 
åue
;

226 
	`w_as£π3
–
	`me
(Ë!
this
 );

228 
w_rc_t
 
e
;

233 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_a˘iv©e
));

234 
e
 = 
	`joö
(1000);

235 i‡(!
e
.
	`is_îr‹
())

237 i‡(
e
.
	`îr_num
(Ë!
smthªad_t
::
°TIMEOUT
)

238 
	`W_COERCE
(
e
);

240 
	}
}

242 
boﬁ


243 
	gbf_¥e„tch_thªad_t
::
	$gë_îr‹
()

245 
	`FUNC
(
bf_¥e„tch_thªad_t
::
gë_îr‹
);

246 
i
 = 
_fix_îr‹_i
;

247 if(
_fix_îr‹
.
	`is_îr‹
()) {

248 
	`√w_°©e
(
i
, 
pf_gë_îr‹
);

249  
åue
;

251  
Ál£
;

252 
	}
}

254 
w_rc_t


255 
	gbf_¥e„tch_thªad_t
::
	$ªque°
(

256 c⁄° 
Õid_t
& 
pid
,

257 
œtch_mode_t
 
mode


260 
	`FUNC
(
bf_¥e„tch_thªad_t
::
ªque°
);

262 
	`w_as£π3
(
mode
 !
LATCH_NL
);

264 
	`CRITICAL_SECTION
(
cs
, 
_¥e„tch_muãx
);

265 if(
	`gë_îr‹
()) {

266 
w_rc_t
 
	`rc
(
_fix_îr‹
.
	`dñeg©e
());

267  
rc
;

270 
i
 = 
_f
;

271 
bf_¥e„tch_thªad_t
::
‰ame_öfo
 &
öf
 = 
_öfo
[
i
];

273 
	`DBGTHRD
(<<"ªque°! i=" << 
i


274 << "Öid " << 
pid


275 << " modê" << (
mode
)

276 << " old sètu†" << (
öf
.
_°©us
)

279 
	`w_as£π3
(
öf
.
_°©us
 =
pf_öô
);

283 
	`INC_TSTAT
(
bf_¥e„tch_ªque°s
);

289 
öf
.
_pid
 = 
pid
;

290 
öf
.
_mode
 = 
mode
;

291 
	`√w_°©e
(
i
, 
pf_ªque°
);

292 
	`w_as£π3
(
öf
.
_°©us
 =
pf_ªque°ed
);

294 
cs
.
	`exô
();

296 
	`DBGTHRD
(<< "released mutex; signalling...");

297 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_a˘iv©e
));

299 
	`DBGTHRD
(<< "returning fromÑequest");

300  
_fix_îr‹
;

301 
	}
}

303 
w_rc_t


304 
	gbf_¥e„tch_thªad_t
::
	$„tch
(

305 c⁄° 
Õid_t
& 
pid
,

306 
∑ge_p
& 
∑ge


309 
	`FUNC
(
bf_¥e„tch_thªad_t
::
„tch
);

310 
boﬁ
 
gŸ
;

311 
œtch_mode_t
 
mode
;

313 
	`DBGTHRD
(<<"fetching --áwaiting mutex...");

314 
	`CRITICAL_SECTION
(
cs
, 
_¥e„tch_muãx
);

316 if(
	`gë_îr‹
()) {

317 
w_rc_t
 
	`rc
(
_fix_îr‹
.
	`dñeg©e
());

318  
rc
;

320 
i
 = 
_f
;

321 
bf_¥e„tch_thªad_t
::
‰ame_öfo
 &
öf
 = 
_öfo
[
i
];

323 
	`w_as£π3
(
öf
.
_°©us
 !
pf_öô
);

326 
mode
 = 
öf
.
_mode
;

328 if(
öf
.
_pid
 =
pid
 && inf.
_°©us
 =
pf_avaûabÀ
 ) {

329 
∑ge
 = 
öf
.
_∑ge
;

330 
gŸ
 = 
åue
;

332 
	`w_as£π3
(
öf
.
_°©us
 =
pf_ªque°ed
 ||

333 
öf
.
_°©us
 =
pf_ö_å™sô
 ||

334 
öf
.
_°©us
 =
pf_gøbbed


337 
gŸ
 = 
Ál£
;

339 
	`√w_°©e
(
i
,
pf_„tch
);

340 
	`w_as£π3
–
öf
.
_°©us
 =
pf_öô
 || inf._°©u†=
pf_gøbbed
);

342 
cs
.
	`exô
();

344 
	`DBGTHRD
(<<"fetching --Ñeleased mutex...");

345 
w_rc_t
 
rc
;

346 if(!
gŸ
) {

354 
	`DBGTHRD
(<<"didÇot get -- fixingÖage...");

355 
smÀvñ_0
::
°‹e_Êag_t
 
°‹e_Êags
 = smÀvñ_0::
°_bad
;

356 
rc
 = 
∑ge
.
	`fix
(
pid
, 
∑ge_p
::
t_™y_p
, 
mode
, 0, 
°‹e_Êags
);

357 if(
rc
.
	`is_îr‹
()) {

358 
	`CRITICAL_SECTION
(
cs2
, 
_¥e„tch_muãx
);

359 
_fix_îr‹
 = 
rc
;

360 
	`√w_°©e
(
i
, 
pf_îr‹
);

363  
rc
;

364 
	}
}

367 
	gbf_¥e„tch_thªad_t
::
	$run
()

369 
	`FUNC
(
bf_¥e„tch_thªad_t
::
run
);

370 
Õid_t
 
√wpid
;

371 
œtch_mode_t
 
mode
;

372 
¥e„tch_°©us_t
 
°©us
;

373 
w_rc_t
 
rc
;

374 
i
;

376 
	`DBGTHRD
(<< "acquiring mutex");

377 
	`CRITICAL_SECTION
(
cs
, 
_¥e„tch_muãx
);

379 
	`DBGTHRD
(<< "awaiting kick");

380 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_a˘iv©e
, &
_¥e„tch_muãx
));

382 !
_ªtúe
) {

383 
i
 = 
_f
;

384 
	`DBGTHRD
(<< "kicked i=" << 
i
);

386 
‰ame_öfo
 &
öf
 = 
_öfo
[
i
];

387 
√wpid
 = 
öf
.
_pid
;

388 
mode
 = 
öf
.
_mode
;

389 
°©us
 = 
öf
.
_°©us
;

390 
	`√w_°©e
(
i
, 
pf_°¨t_fix
);

391 
cs
.
	`∑u£
();

393 
	`DBGTHRD
(<< "Öid " << 
√wpid


394 << " modê" << (
mode
)

395 << " old sètu†" << (
°©us
)

396 << "Çew sètu†" << (
öf
.
_°©us
)

400 
	`w_as£π3
(
öf
.
_°©us
 !
pf_öô
);

402 
	`INC_TSTAT
(
bf_¥e„tches
);

404 if(
°©us
 =
pf_ªque°ed
) {

408 
smÀvñ_0
::
°‹e_Êag_t
 
°‹e_Êags
 = smÀvñ_0::
°_bad
;

409 
rc
 = 
öf
.
_∑ge
.
	`fix
(
√wpid
, 
∑ge_p
::
t_™y_p
, 
mode
, 0,

410 
°‹e_Êags
);

413 
cs
.
	`ªsume
();

415 if(
rc
.
	`is_îr‹
()) {

416 
_fix_îr‹
 = 
	`w_rc_t
(
rc
.
	`dñeg©e
());

417 
	`√w_°©e
(
i
, 
pf_îr‹
);

419 
	`√w_°©e
(
i
, 
pf_íd_fix
);

422 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_a˘iv©e
, &
_¥e„tch_muãx
));

424 
	}
}

	@src/sm/bf_prefetch.h

30 #i‚de‡
BF_PREFETCH_H


31 
	#BF_PREFETCH_H


	)

33 
	~"w_deföes.h
"

37 ˛as†
	cbf_¥e„tch_thªad_t
 : 
public
 
smthªad_t


40 
public
:

41 
NORET
 
bf_¥e„tch_thªad_t
(
i
=1);

42 
	mNORET
 ~
bf_¥e„tch_thªad_t
();

43 
w_rc_t
 
ªque°
(

44 c⁄° 
Õid_t
& 
pid
,

45 
œtch_mode_t
 
mode


49 
w_rc_t
 
„tch
(

50 c⁄° 
Õid_t
& 
pid
,

51 
∑ge_p
& 
∑ge


58 
ªtúe
();

59 
vútuÆ
 
run
();

61 
	m¥iv©e
:

62 
boﬁ
 
gë_îr‹
();

63 
_öô
(
i
);

64 
	mpublic
:

65 
	e¥e„tch_°©us_t
 {

66 
pf_öô
=0, 
	mpf_ªque°ed
, 
	mpf_ö_å™sô
, 
	mpf_avaûabÀ
, 
	mpf_gøbbed
,

67 
	mpf_Áûuª
,

68 
	mpf_Áèl
,

69 
	mpf_max_unu£d_°©us


71 
	g¥iv©e
:

72 
	e¥e„tch_evít_t
 {

73 
pf_ªque°
=0, 
	gpf_gë_îr‹
, 
	gpf_°¨t_fix
, 
	gpf_íd_fix
, 
	gpf_„tch
,

74 
	gpf_îr‹
,

75 
	gpf_de°ru˘‹
,

76 
	gpf_max_unu£d_evít


79 
w_rc_t
 
	g_fix_îr‹
;

80 
	g_fix_îr‹_i
;

81 
	g_n
;

82 
√w_°©e
(
i
, 
¥e„tch_evít_t
 
e
);

83 
	s‰ame_öfo
 {

84 
	gpublic
:

85 
NORET
 
‰ame_öfo
():
_pid
(
Õid_t
::
nuŒ
),
_°©us
(
pf_öô
),

86 
_mode
(
LATCH_NL
){}

88 
	gNORET
 ~
‰ame_öfo
() {}

90 
∑ge_p
 
	g_∑ge
;

91 
Õid_t
 
	g_pid
;

92 
¥e„tch_°©us_t
 
	g_°©us
;

93 
œtch_mode_t
 
	g_mode
;

95 
‰ame_öfo
 *
	g_öfo
;

96 
	g_f
;

101 
boﬁ
 
	g_ªtúe
;

103 
±hªad_muãx_t
 
	g_¥e„tch_muãx
;

104 
±hªad_c⁄d_t
 
	g_a˘iv©e
;

107 
NORET
 
bf_¥e„tch_thªad_t
(

108 c⁄° 
bf_¥e„tch_thªad_t
&);

109 
	gbf_¥e„tch_thªad_t
& 
	g›î©‹
=(c⁄° 
bf_¥e„tch_thªad_t
&);

111 
¥e„tch_°©us_t


112 
	g_èbÀ
[
pf_max_unu£d_°©us
][
pf_max_unu£d_evít
];

	@src/sm/bf_s.h

53 #i‚de‡
BF_S_H


54 
	#BF_S_H


	)

56 
	~"w_deföes.h
"

60 
	~<sm_s.h
>

62 
˛ass
 
	g∑ge_s
;

64 ˛as†
	cbÂid_t
 : 
public
 
Õid_t
 {

65 
public
:

66 
NORET
 
bÂid_t
();

67 
NORET
 
bÂid_t
(c⁄° 
Õid_t
& 
p
);

68 
	mbÂid_t
& 
	m›î©‹
=(c⁄° 
Õid_t
& 
p
);

69 
boﬁ
 
	m›î©‹
==(c⁄° 
bÂid_t
& 
p
) const;

70 c⁄° 
bÂid_t
 
	mnuŒ
;

73 
ölöe
 
NORET


74 
	gbÂid_t
::
	$bÂid_t
()

76 
	}
}

78 
ölöe
 
NORET


79 
bÂid_t
::
	$bÂid_t
(c⁄° 
Õid_t
& 
p
Ë: 
	$Õid_t
(
p
)

81 
	}
}

83 
ölöe
 
bÂid_t
&

84 
bÂid_t
::
›î©‹
=(c⁄° 
Õid_t
& 
p
)

86 *(
Õid_t
*)
this
 = 
p
;

87  *
	gthis
;

90 
ölöe
 
boﬁ


91 
	gbÂid_t
::
›î©‹
==(c⁄° 
bÂid_t
& 
p
) const

93  
vﬁ
(Ë=
p
.vﬁ(Ë&& 
∑ge
 ==Ö.page;

100 ˛as†
	cbfcb_t
 {

101 
‰õnd
 
˛ass
 
	mbfcb_unu£d_li°
;

102 
	m¥iv©e
:

103 
öt4_t
 vﬁ©ûê
_pö_˙t
;

104 
	mw_ba£_t
::
uöt4_t
 
_°‹e_Êags
;

105 
bÂid_t
 
	m_pid
;

106 
bÂid_t
 
	m_ﬁd_pid
;

107 
boﬁ
 
	m_ﬁd_pid_vÆid
;

108 
∑ge_s
* 
	m_‰ame
;

110 
boﬁ
 
	m_dúty
;

111 
l¢_t
 
	m_ªc_l¢
;

112 
l¢_t
 
	m_ﬁd_ªc_l¢
;

114 
bfcb_t
* 
	m_√xt_‰ì
;

116 
öt4_t
 
	m_ªfbô
;

119 
öt4_t
 
	m_hŸbô
;

123 
öt4_t
 
	m_hash_func
;

124 
öt4_t
 vﬁ©ûê
	m_hash
;

125 
	mpublic
:

126 
œtch_t
 
œtch
;

128 
	mpublic
:

129 
NORET
 
	$bfcb_t
() {};

130 
NORET
 ~
	$bfcb_t
(Ë{
	}
};

132 
vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &
t
);

133 
vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
&);

135 
ölöe
 
˛ór
();

137 c⁄° 
∑ge_s
 *
	$‰ame
(Ëc⁄° {  
_‰ame
; 
	}
}

138 
∑ge_s
 *
	$‰ame_n⁄c⁄°
(Ë{  
_‰ame
; 
	}
}

139 
£t_°‹eÊags
(
w_ba£_t
::
uöt4_t
 
f
);

140 
	gw_ba£_t
::
uöt4_t
 
	$gë_°‹eÊags
() const;

141 
w_ba£_t
::
uöt4_t
 
	$gë_°‹eÊags_nocheck
(Ëc⁄° {  
_°‹e_Êags
; 
	}
}

143 c⁄° 
	gbÂid_t
 &
	$pid
(Ëc⁄° {  
_pid
; 
	}
}

144 
	$£t_pid
(c⁄° 
bÂid_t
 &
p
Ë{ 
_pid
 =Ö; 
	}
}

146 
boﬁ
 
	$ﬁd_pid_vÆid
(Ëc⁄° {  
_ﬁd_pid_vÆid
; 
	}
}

147 c⁄° 
	gbÂid_t
 &
	$ﬁd_pid
(Ëc⁄° {  
_ﬁd_pid
; 
	}
}

148 
	$˛r_ﬁd_pid
(Ë{ 
_ﬁd_pid
 = 
Õid_t
::
nuŒ
; 
_ﬁd_pid_vÆid
=
Ál£
; 
	}
}

149 
	$£t_ﬁd_pid
(Ë{ 
_ﬁd_pid
 = 
	`pid
(); 
_ﬁd_pid_vÆid
=
åue
; 
	}
}

151 
boﬁ
 
	$dúty
(Ëc⁄° {  
_dúty
; 
	}
}

152 
	$£t_dúty_bô
(Ë{ 
_dúty
 = 
åue
; 
	}
}

154 
l¢_t
 
	$ß„_ªc_l¢
() const {

165 
l¢_t
 
ﬁd
 = 
_ﬁd_ªc_l¢
;

166  
ﬁd
.
	`vÆid
()? old : 
_ªc_l¢
;

167 
	}
}

169 c⁄° 
	gl¢_t
& 
	$cuº_ªc_l¢
(Ëc⁄° {  
_ªc_l¢
; 
	}
}

170 c⁄° 
	gl¢_t
& 
	$ﬁd_ªc_l¢
(Ëc⁄° {  
_ﬁd_ªc_l¢
; 
	}
}

171 
£t_ªc_l¢
(c⁄° 
l¢_t
 &
wh©
);

172 
	$ßve_ªc_l¢
(Ë{ 
_ﬁd_ªc_l¢
 = 
_ªc_l¢
; 
	}
}

173 
	$˛r_ﬁd_ªc_l¢
(Ë{ 
_ﬁd_ªc_l¢
 = 
l¢_t
::
nuŒ
; 
	}
}

177 
m¨k_˛ón
();

180 
öt4_t
 
	$ªfbô
(Ëc⁄° {  
_ªfbô
; 
	}
}

181 
	$£t_ªfbô
(
uöt4_t
 
b
Ë{ 
_ªfbô
=b; 
	}
}

182 
	$de¸_ªfbô
(Ë{ 
_ªfbô
--; 
	}
}

184 
öt4_t
 
	$hŸbô
(Ëc⁄° {  
_hŸbô
; 
	}
}

185 
uöt4_t
 
	$£t_hŸbô
(
öt4_t
 
b
Ë{  (
_hŸbô
 = b); 
	}
}

186 
	$de¸_hŸbô
(Ë{ 
_hŸbô
--; 
	}
}

188 
upd©e_ªc_l¢
(
œtch_mode_t
);

190 
öôülize
(c⁄° *c⁄° 
_«me
,

191 
∑ge_s
* 
_buÂoﬁ
,

192 
uöt4_t
 
hashfunc


194 
öt4_t
 
	$hash_func
(Ëc⁄° {  
_hash_func
; 
	}
}

195 
	$£t_hash_func
(
öt4_t
 
h
Ë{ 
_hash_func
=h; 
	}
}

197 
öt4_t
 
	$hash
(Ëc⁄° {  
_hash
;
	}
}

198 
	$£t_hash
(
öt4_t
 
h
Ë{ 
_hash
=h;
	}
}

201 
	gpublic
:

202 
ölöe
 
o°ªam
& 
¥öt_‰ame
(o°ªam& 
o
, 
boﬁ
 
ö_hèb
);

203 
u≈ö_‰ame
();

204 
pö_‰ame
();

205 
boﬁ
 
pö_‰ame_if_pö√d
();

206 #i‡
W_DEBUG_LEVEL
 > 1

207 
	$check
() const;

209 
	$check
(Ëc⁄° {
	}
}

214 
	$zîo_pö_˙t
(Ë{ 
_pö_˙t
=0; 
	}
}

215 
öt4_t
 
	$pö_˙t
(Ëc⁄° {  
_pö_˙t
; 
	}
}

221 
boﬁ
 
	$is_hŸ
() const { 

222 
œtch
.
	`œtch_˙t
(Ë< 
_pö_˙t
; 
	}
}

223 
	g¥iv©e
:

226 
NORET
 
bfcb_t
(const bfcb_t&);

227 
	gbfcb_t
& 
	g›î©‹
=(c⁄° 
bfcb_t
&);

230 
ölöe
 

231 
	gbfcb_t
::
	$˛ór
()

233 
_pid
 = 
Õid_t
::
nuŒ
;

234 
_ﬁd_pid
 = 
Õid_t
::
nuŒ
;

235 
_ﬁd_pid_vÆid
 = 
Ál£
;

236 
_dúty
 = 
Ál£
;

237 
_ªc_l¢
 = 
l¢_t
::
nuŒ
;

238 
_hŸbô
 = 0;

239 
_ªfbô
 = 0;

240 
	`w_as£π3
(
	`pö_˙t
() == 0);

241 
	`w_as£π3
(
œtch
.
	`num_hﬁdîs
() <= 1);

242 
	}
}

	@src/sm/bf_transit_bucket.h

54 
	~"w_deföes.h
"

58 #i‚de‡
BF_TRANSIT_BUCKET_H


59 
	#BF_TRANSIT_BUCKET_H


	)

67 ˛as†
	cå™sô_buckë_t


69 
	mpublic
:

70 íum { 
MAX_IN_TRANSIT
=1 };

71 
±hªad_muãx_t
 
	g_tb_muãx
;

72 
	g¥iv©e
:

73 
±hªad_c⁄d_t
 
_tb_c⁄d
;

74 
bÂid_t
 
	g_∑ges
[
MAX_IN_TRANSIT
];

75 
	g_∑ge_cou¡
;

77 c⁄° 
	gNUM_TRANSIT_BUCKETS
 = 128;

78 
å™sô_buckë_t
 
	g_å™sô_buckës
[
NUM_TRANSIT_BUCKETS
];

80 
	gpublic
:

81 
NORET
 
	$å™sô_buckë_t
()

82 : 
	$_∑ge_cou¡
(0)

84 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_tb_muãx
, 
NULL
));

85 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_tb_c⁄d
, 
NULL
));

86 
	}
}

88 
	gNORET
 ~
	$å™sô_buckë_t
()

90 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
_tb_muãx
));

91 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_tb_c⁄d
));

92 
	}
}

95 
boﬁ
 
	$em±y
(Ë{  
_∑ge_cou¡
 < 
å™sô_buckë_t
::
MAX_IN_TRANSIT
; 
	}
}

103 
	$make_ö_å™sô_out
(c⁄° 
bÂid_t
 &
pid
) {

105 #i‡
W_DEBUG_LEVEL
 > 2

106 
i
=0; i < 
_∑ge_cou¡
; i++)

107 
	`w_as£π3
(
_∑ges
[
i
] !
pid
);

110 
	`w_as£π1
(
_∑ge_cou¡
 < 
å™sô_buckë_t
::
MAX_IN_TRANSIT
);

111 
_∑ges
[
_∑ge_cou¡
++] = 
pid
;

112 
	`w_as£π2
(
_∑ge_cou¡
 <
å™sô_buckë_t
::
MAX_IN_TRANSIT
);

113 
	}
}

118 
	$awaô_nŸ_ö_å™sô_out
(c⁄° 
bÂid_t
 &
pid
) {

120 
i
=0; i < 
_∑ge_cou¡
; i++) {

121 if–
_∑ges
[
i
] =
pid
 ) {

122 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_tb_c⁄d
, &
_tb_muãx
));

123 
i
=-1;

127 
	}
}

133 
	$make_nŸ_ö_å™sô_out
(c⁄° 
bÂid_t
 &
pid
)

135 
i
;

136 
i
=0; i < 
_∑ge_cou¡
; i++) {

137 if(
_∑ges
[
i
] =
pid
)

142 if(
i
 < 
_∑ge_cou¡
) {

144 
	`w_as£π1
(
_∑ge_cou¡
 <
å™sô_buckë_t
::
MAX_IN_TRANSIT
);

145 
_∑ges
[
i
] = _∑ges[--
_∑ge_cou¡
];

146 
	`±hªad_c⁄d_brﬂdˇ°
(&
_tb_c⁄d
);

148 
	}
}

152 
	gå™sô_buckë_t
 & 
	$gë
(
bÂid_t
 c⁄° &
pid
)

155  
_å™sô_buckës
[
pid
.
∑ge
 % 
NUM_TRANSIT_BUCKETS
];

156 
	}
}

	@src/sm/btcursor.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#BTREE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "btcursor.h"

64 
	~"sm_öt_2.h
"

65 
	~"Àxify.h
"

66 
	~"båì_p.h
"

67 
	~"btcurs‹.h
"

69 
rc_t


70 
	gbt_curs‹_t
::
	$£t_up
–c⁄° 
Õid_t
& 
roŸ
, 
nkc
, c⁄° 
key_ty≥_s
* 
kc
,

71 
boﬁ
 
unique
, 
c⁄cuºícy_t
 
cc
,

72 
cmp_t
 
c⁄d2
, c⁄° 
cvec_t
& 
bound2
, 
lock_mode_t
 
mode
)

75 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

76 (
cc
 !
t_cc_im
) &&

77 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
)

78 Ë 
	`RC
(
smÀvñ_0
::
eBADCCLEVEL
);

79 
_roŸ
 = 
roŸ
;

80 
_nkc
 = 
nkc
;

81 
_kc
 = 
kc
;

82 
_unique
 = 
unique
;

83 
_cc
 = 
cc
;

84 
_c⁄d2
 = 
c⁄d2
;

85 
_mode
 = 
mode
;

87 i‡(
_bound2_buf
) {

89 
dñëe
 [] 
_bound2_buf
;

90 
_bound2_buf
 = 0;

96 i‡(
bound2
.
	`is_pos_öf
()) {

97 
_bound2
 = &(
cvec_t
::
pos_öf
);

98 } i‡(
bound2
.
	`is_√g_öf
()) {

99 
_bound2
 = &(
cvec_t
::
√g_öf
);

101 
size_t
 
Àn
 = 
bound2
.
	`size
();

102 
_bound2_buf
 = 
√w
 [
Àn
];

103 i‡(! 
_bound2_buf
) {

104  
	`RC
(
eOUTOFMEMORY
);

106 
bound2
.
	`c›y_to
(
_bound2_buf
, 
Àn
);

107 
_bound2
 = &
_bound2_tmp
;

108 
_bound2
->
	`put
(
_bound2_buf
, 
Àn
);

111  
RCOK
;

112 
	}
}

113 
rc_t


114 
	gbt_curs‹_t
::
	$£t_up_∑π_2
(
cmp_t
 
c⁄d1
, c⁄° 
cvec_t
& 
bound1
)

116 
_c⁄d1
 = 
c⁄d1
;

118 i‡(
_bound1_buf
) {

120 
dñëe
 [] 
_bound1_buf
;

121 
_bound1_buf
 = 0;

126 i‡(
bound1
.
	`is_pos_öf
()) {

127 
_bound1
 = &(
cvec_t
::
pos_öf
);

128 } i‡(
bound1
.
	`is_√g_öf
()) {

129 
_bound1
 = &(
cvec_t
::
√g_öf
);

131 
size_t
 
Àn
 = 
bound1
.
	`size
();

132 
_bound1_buf
 = 
√w
 [
Àn
];

133 i‡(! 
_bound1_buf
) {

134  
	`RC
(
eOUTOFMEMORY
);

136 
bound1
.
	`c›y_to
(
_bound1_buf
, 
Àn
);

137 
_bound1
 = &
_bound1_tmp
;

138 
_bound1
->
	`put
(
_bound1_buf
, 
Àn
);

141  
	`check_bounds
();

142 
	}
}

145 
	gbt_curs‹_t
::
£t_roŸs
(
ve˘‹
<
Õid_t
>& 
roŸs
) {

146 
is_mrbt
 = 
åue
;

147 
	g_roŸs
 = 
roŸs
;

148 if(
	g_backw¨d
) {

149 
	g_√xt_roŸ
 = 1;

151 
	g_√xt_roŸ
 = 
roŸs
.
size
() - 2;

155 
boﬁ


156 
	gbt_curs‹_t
::
	$gë_√xt_roŸ
() {

157 if(
_backw¨d
 && (
size_t
Ë
_√xt_roŸ
 !
_roŸs
.
	`size
()) {

158 
_roŸ
 = 
_roŸs
[
_√xt_roŸ
];

159 
_√xt_roŸ
++;

160  
åue
;

161 } if(
_√xt_roŸ
 >= 0) {

162 
_roŸ
 = 
_roŸs
[
_√xt_roŸ
];

163 
_√xt_roŸ
--;

164  
åue
;

166  
Ál£
;

168 
	}
}

189 
boﬁ


190 
	gbt_curs‹_t
::
	$öbounds
(

191 c⁄° 
cvec_t
 &
v
,

192 
boﬁ
 
check_bŸh_bounds
,

193 
boﬁ
& 
_kìp_goög


205 
boﬁ
 
ok1
 = 
Ál£
;

206 
boﬁ
 
ok2
 = 
Ál£
;

207 
boﬁ
 
_ö_bounds
 = 
Ál£
;

209 
boﬁ
 
m‹e
 = 
Ál£
;

213 
	`DBG
(<<"v <bound2(Ë=" << (
boﬁ
)(
v
 <
	`bound2
()) );

214 
	`DBG
(<<"v >bound1(Ë=" << (
boﬁ
)(
v
 <
	`bound1
()) );

215 
	`W_IFDEBUG3
(

216 if(
	`is_backw¨d
()) {

217 if(!
v
.
	`is_nuŒ
()Ë{ 
	`w_as£π3
(v <
	`bound2
()); }

219 if(!
v
.
	`is_nuŒ
()Ë{ 
	`w_as£π3
(v >
	`bound1
()); }

223 
ok1
 = 
	`öbound
(
v
, 
	`c⁄d1
(), 
	`bound1
(), 
m‹e
);

225 
	`DBG
(<< "bound1: " << 
	`bound1
(Ë<< " c⁄d1()=" << (
	`c⁄d1
()));

226 
	`DBG
(<< "ok wπÜowî (bound1): " << 
ok1
);

231 if(!
check_bŸh_bounds
Ë 
ok1
;

233 
boﬁ
 
m‹e2
 = 
Ál£
;

234 if(
ok1
Ë
ok2
 = 
	`öbound
(
v
, 
	`c⁄d2
(), 
	`bound2
(), 
m‹e2
);

236 
	`DBG
(<< "ok wπ uµî (bound2): " << 
ok2
);

237 
	`DBG
(<< "bound2: " << 
	`bound2
(Ë<< " c⁄d2()=" << (
	`c⁄d2
()));

239 if(
ok1
 && 
ok2
) {

240 
_ö_bounds
 = 
åue
;

241 
_kìp_goög
 = 
Ál£
;

243 
_ö_bounds
 = 
Ál£
;

244 
_kìp_goög
 = 
m‹e2
;

249 
	`DBG
(<< "ö_bounds: " << 
_ö_bounds


250 << " kìp_goög: " << 
_kìp_goög
);

251  
_ö_bounds
;

252 
	}
}

254 
boﬁ


255 
	gbt_curs‹_t
::
	$öbound
(

256 c⁄° 
cvec_t
 & 
v
,

257 
cmp_t
 
c⁄d
,

258 c⁄° 
cvec_t
 & 
bound
,

259 
boﬁ
& 
m‹e


262 
boﬁ
 
ok
=
Ál£
;

263 
c⁄d
) {

264 
eq
:

265 
ok
 = (
v
 =
bound
);

266 
m‹e
 = 
_backw¨d
? (
v
 > 
bound
) : (v < bound);

269 
ge
:

270 
ok
 = (
v
 >
bound
);

273 
gt
:

274 if(
_ö˛ude_nuŒs
 && 
v
.
	`is_nuŒ
(Ë&& 
bound
.
	`is_√g_öf
()) {

275 
ok
 = 
åue
;

277 
ok
 = (
v
 > 
bound
);

281 
À
:

282 
ok
(
v
 <
bound
);

285 
…
:

286 if(
_ö˛ude_nuŒs
 && 
v
.
	`is_nuŒ
(Ë&& 
bound
.
	`is_pos_öf
()) {

287 
ok
 = 
åue
;

289 
ok
 = (
v
 < 
bound
);

294 
	`W_FATAL
(
eINTERNAL
);

296 
	`DBG
(<< "ok=" << 
ok


297 << " v=" << 
v


298 << " bound=" << 
bound


299 << " c⁄d=" << (
c⁄d
)

300 << " m‹e=" << 
m‹e


303  
ok
;

304 
	}
}

306 
boﬁ


307 
	gbt_curs‹_t
::
	$öbounds
(

308 c⁄° 
båec_t
 &
r
,

309 
boﬁ
 
check_bŸh_bounds
,

310 
boﬁ
& 
_kìp_goög
)

313  
	`öbounds
(
r
.
	`key
(), 
check_bŸh_bounds
, 
_kìp_goög
);

314 
	}
}

317 
	gbt_curs‹_t
::
	$upd©e_l¢
(c⁄° 
båì_p
& 
∑ge
)

319 if(
_pid
 =
∑ge
.
	`pid
()Ë
_l¢
 =Öage.
	`l¢
();

320 
	}
}

329 
rc_t


330 
	gbt_curs‹_t
::
	$make_ªc
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿ
)

332 
	`FUNC
(
bt_curs‹_t
::
make_ªc
);

334 
	`DBG
(<<" make_ª¯¶Ÿ " << 
¶Ÿ
);

339 
_pid
 = 
∑ge
.
	`pid
();

340 
_l¢
 = 
∑ge
.
	`l¢
();

341 
_¶Ÿ
 = 
¶Ÿ
;

346 
båec_t
 
	`r
(
∑ge
, 
¶Ÿ
);

347 
_kÀn
 = 
r
.
	`kÀn
();

348 
_ñí
 = 
r
.
	`ñí
();

349 i‡(
_kÀn
 + 
_ñí
 > 
_•Àn
) {

350 i‡(
_•a˚
Ë{ 
dñëe
[] _space; _space=0; }

351 i‡(! (
_•a˚
 = 
√w
 [
_•Àn
 = 
_kÀn
 + 
_ñí
])) {

352 
_kÀn
 = 0;

353  
	`RC
(
eOUTOFMEMORY
);

356 
	`w_as£π3
(
_kÀn
 + 
_ñí
 <
_•Àn
);

358 
boﬁ
 
ö_bounds
 = 
	`öbounds
(
r
, 
åue
, 
kìp_goög
);

360 
	`DBG
(<< "ö_bounds: " << 
ö_bounds
 << " kìp_goög: " << 
kìp_goög
);

362 i‡(
ö_bounds
) {

364 
cvec_t
* 
u£r_key
;

365 if(
_kÀn
 > 0) {

366 
	`W_DO
(
bt
->
	`_uns¸ambÀ_key
(
u£r_key
, 
r
.
	`key
(), 
_nkc
, 
_kc
));

367 
u£r_key
->
	`c›y_to
(
_•a˚
);

369 
r
.
	`ñem
().
	`c›y_to
(
_•a˚
 + 
_kÀn
);

370 } if(!
kìp_goög
) {

371 
	`‰ì_ªc
();

374  
RCOK
;

375 
	}
}

377 
rc_t


378 
	gbt_curs‹_t
::
	$check_bounds
()

389 
boﬁ
 
b1
=
Ál£
, 
b2
=false;

390 
	`w_as£π3
(!
_backw¨d
);

392 i‡(! (
	`c⁄d1
(Ë=
eq
 || c⁄d1(Ë=
gt
 || c⁄d1(Ë=
ge
) ) {

393 
b1
 = 
åue
;

396 i‡(! (
	`c⁄d2
(Ë=
eq
 || c⁄d2(Ë=
…
 || c⁄d2(Ë=
À
) ) {

397 
b2
 = 
åue
;

400 i‡(
	`c⁄d1
(Ë=
eq
 || 
	`c⁄d2
()==Éq) {

401 if((
	`c⁄d1
(Ë=
eq
Ë&& (
	`c⁄d2
() ==Éq) ) {

402 i‡(
	`bound1
(Ë!
	`bound2
()) {

403  
	`RC
(
eBADCMPOP
);

407 if(
b1
 !
b2
Ë 
	`RC
(
eBADCMPOP
);

409 if(
b1
 && 
b2
) {

410 i‡(
	`bound1
(Ë>
	`bound2
()) {

411 
_backw¨d
 = 
åue
;

413  
	`RC
(
eBADCMPOP
);

416 i‡(
	`bound1
(Ë> 
	`bound2
()) {

417  
	`RC
(
eBADCMPOP
);

420 if(
	`is_backw¨d
()) {

421 
	`DBG
(<<"BACKWARD SCAN " );

422 
cvec_t
 *
b

_bound2
;

423 
_bound2
 = 
_bound1
;

424 
_bound1
 = 
b
;

426 
cmp_t
 
c
 = 
	`c⁄d2
();

427 
_c⁄d2
 = 
	`c⁄d1
();

428 
_c⁄d1
 = 
c
;

431  
RCOK
;

432 
	}
}

	@src/sm/btcursor.h

53 #i‚de‡
BTCURSOR_H


54 
	#BTCURSOR_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 
˛ass
 
	gbåì_p
;

65 
˛ass
 
	gbåec_t
;

67 ˛as†
	cbt_curs‹_t
 : 
smÀvñ_2


69 
public
:

70 
NORET
 
bt_curs‹_t
(
boﬁ
 
ö˛ude_nuŒs
);

71 
	mNORET
 ~
bt_curs‹_t
() ;

73 
rc_t
 
check_bounds
();

75 
rc_t
 
£t_up
(

76 c⁄° 
Õid_t
& 
roŸ
,

77 
nkc
,

78 c⁄° 
key_ty≥_s
* 
kc
,

79 
boﬁ
 
unique
,

80 
c⁄cuºícy_t
 
cc
,

81 
cmp_t
 
c⁄d2
,

82 c⁄° 
cvec_t
& 
bound2
,

83 
lock_mode_t
 
mode
 = 
SH
);

85 
rc_t
 
£t_up_∑π_2
(

86 
cmp_t
 
c⁄d1
,

87 c⁄° 
cvec_t
& 
bound1


91 
£t_roŸs
(
ve˘‹
<
Õid_t
>& 
roŸs
);

92 
boﬁ
 
gë_√xt_roŸ
();

93 
boﬁ
 
	mis_mrbt
;

94 
	$£t_¶Ÿ
(
¶Ÿ
Ë{ 
_¶Ÿ
 = slot; }

95 
	$£t_pid
(c⁄° 
Õid_t
& 
pid
Ë{ 
_pid
 =Öid; 
	}
}

97 
Õid_t
 
	$roŸ
(Ëc⁄° {  
_roŸ
; 
	}
}

98 c⁄° 
	gÕid_t
& 
	$pid
(Ëc⁄° {  
_pid
; 
	}
}

99 c⁄° 
	gl¢_t
& 
	$l¢
(Ëc⁄° {  
_l¢
; 
	}
}

100 
	$¶Ÿ
(Ëc⁄° {  
_¶Ÿ
; 
	}
}

101 
boﬁ
 
	gfú°_time
;

102 
boﬁ
 
	gkìp_goög
;

103 
boﬁ
 
	$unique
(Ëc⁄° {  
_unique
; 
	}
}

104 
c⁄cuºícy_t
 
	$cc
(Ëc⁄° {  
_cc
; 
	}
}

105 
	$nkc
(Ëc⁄° {  
_nkc
; 
	}
}

106 c⁄° 
key_ty≥_s
* 
	$kc
(Ëc⁄° {  
_kc
; 
	}
}

107 
cmp_t
 
	$c⁄d1
(Ëc⁄° {  
_c⁄d1
;
	}
}

108 c⁄° 
	gcvec_t
& 
	$bound1
(Ëc⁄° {  *
_bound1
;
	}
}

109 
cmp_t
 
	$c⁄d2
(Ëc⁄° {  
_c⁄d2
;
	}
}

110 c⁄° 
	gcvec_t
& 
	$bound2
(Ëc⁄° {  *
_bound2
;
	}
}

111 
lock_mode_t
 
	$mode
(Ëc⁄° {  
_mode
; 
	}
}

113 
boﬁ
 
	$öbounds
(c⁄° 
cvec_t
&, 
boﬁ
 
check_bŸh
,

114 
boﬁ
& 
kìp_goög
) const;

115 
boﬁ
 
	$öbounds
(c⁄° 
båec_t
 &
r
, 
boﬁ
 
check_bŸh
,

116 
boﬁ
& 
kìp_goög
) const;

117 
boﬁ
 
	$öbound
–c⁄° 
cvec_t
 & 
v
,

118 
cmp_t
 
c⁄d
,

119 c⁄° 
cvec_t
 & 
bound
,

120 
boﬁ
& 
m‹e
) const;

122 
boﬁ
 
	$is_vÆid
(Ëc⁄° {  
_¶Ÿ
 >0; 
	}
}

123 
boﬁ
 
	$is_backw¨d
(Ëc⁄° {  
_backw¨d
; 
	}
}

124 
rc_t
 
make_ªc
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿ
);

125 
‰ì_ªc
();

126 
upd©e_l¢
(c⁄° 
båì_p
&
∑ge
);

127 
	$kÀn
(Ëc⁄° {  
_kÀn
; 
	}
}

128 * 
	$key
(Ë{  
_eof
 ? 0 : 
_•a˚
; 
	}
}

129 
boﬁ
 
	$eof
(Ë{  
_eof
; 
	}
}

130 
	$ñí
(Ëc⁄° {  
_ñí
; 
	}
}

131 * 
	$ñem
(Ë{  
_eof
 ? 0 : 
_•a˚
 + 
_kÀn
; 
	}
}

133 
dñeg©e
(*& 
±r
, & 
kl
, & 
ñ
);

135 
	g¥iv©e
:

136 
Õid_t
 
_roŸ
;

139 
	gve˘‹
<
	gÕid_t
> 
	g_roŸs
;

140 
	g_√xt_roŸ
;

142 
boﬁ
 
	g_unique
;

143 
	gsmÀvñ_0
::
c⁄cuºícy_t
 
_cc
;

144 
	g_nkc
;

145 c⁄° 
key_ty≥_s
* 
	g_kc
;

147 
	g_¶Ÿ
;

148 * 
	g_•a˚
;

149 
	g_•Àn
;

150 
	g_kÀn
;

151 
	g_ñí
;

152 
l¢_t
 
	g_l¢
;

153 
Õid_t
 
	g_pid
;

154 
cmp_t
 
	g_c⁄d1
;

155 * 
	g_bound1_buf
;

156 
cvec_t
* 
	g_bound1
;

157 
cvec_t
 
	g_bound1_tmp
;

160 
cmp_t
 
	g_c⁄d2
;

161 * 
	g_bound2_buf
;

162 
cvec_t
* 
	g_bound2
;

163 
cvec_t
 
	g_bound2_tmp
;

165 
lock_mode_t
 
	g_mode
;

166 
boﬁ
 
	g_backw¨d
;

167 
boﬁ
 
	g_eof
;

168 
boﬁ
 
	g_ö˛ude_nuŒs
;

171 
ölöe
 
NORET


172 
	gbt_curs‹_t
::
	$bt_curs‹_t
(
boﬁ
 
ö˛ude_nuŒs
)

173 : 
	`is_mrbt
(
Ál£
), 
	`fú°_time
(Ál£), 
	`kìp_goög
(
åue
), 
	`_¶Ÿ
(-1),

174 
	`_•a˚
(0), 
	`_•Àn
(0), 
	`_kÀn
(0), 
	`_ñí
(0),

175 
	`_bound1_buf
(0), 
	`_bound2_buf
(0), 
	`_backw¨d
(
Ál£
), 
	`_eof
(false),

176 
	$_ö˛ude_nuŒs
(
ö˛ude_nuŒs
)

178 
	}
}

180 
ölöe
 
NORET


181 
	gbt_curs‹_t
::~
	$bt_curs‹_t
()

183 i‡(
_•a˚
) {

184 
dñëe
[] 
_•a˚
;

185 
_•a˚
 = 0;

187 i‡(
_bound1_buf
) {

188 
dñëe
[] 
_bound1_buf
;

189 
_bound1_buf
 = 0;

191 i‡(
_bound2_buf
) {

192 
dñëe
[] 
_bound2_buf
;

193 
_bound2_buf
 = 0;

195 
_¶Ÿ
 = -1;

196 
_pid
 = 
Õid_t
::
nuŒ
;

197 
	}
}

200 
ölöe
 

201 
	gbt_curs‹_t
::
	$‰ì_ªc
()

203 
_eof
 = 
åue
;

204 
_kÀn
 = 
_ñí
 = 0;

205 
_¶Ÿ
 = -1;

206 
_pid
 = 
Õid_t
::
nuŒ
;

207 
_l¢
 = 
l¢_t
::
nuŒ
;

208 
	}
}

210 
ölöe
 

211 
	gbt_curs‹_t
::
	$dñeg©e
(*& 
±r
, & 
kl
, & 
ñ
)

213 
kl
 = 
_kÀn
, 
ñ
 = 
_ñí
;

214 
±r
 = (*Ë
_•a˚
;

215 
_•a˚
 = 0; 
_•Àn
 = 0;

216 
	}
}

	@src/sm/btree.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#BTREE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "btree.h"

62 #¥agm®
im∂emíèti⁄
 "btree_impl.old.h"

65 
	~"sm_öt_2.h
"

66 
	~"båì_p.h
"

67 
	~"båì_im∂.h
"

68 
	~"btcurs‹.h
"

69 
	~"Àxify.h
"

70 
	~"sm_du_°©s.h
"

71 
	~<¸ash.h
>

73 #i‡
W_DEBUG_LEVEL
 > 0

74 
	#BTREE_LOG_COMMENT_ON
 1

	)

76 
	#BTREE_LOG_COMMENT_ON
 0

	)

80 
rc_t
 
	$badcc
() {

82  
	`RC
(
smÀvñ_0
::
eBADCCLEVEL
);

83 
	}
}

92 
smsize_t


93 
	gbåì_m
::
	$max_íåy_size
() {

94  
båì_p
::
max_íåy_size
;

95 
	}
}

104 
rc_t


105 
	gbåì_m
::
	$¸óã
(

106 c⁄° 
°id_t
& 
°id
,

107 
Õid_t
& 
roŸ
,

108 
boﬁ
 
com¥es£d
,

109 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

111 
	`FUNC
(
båì_m
::
¸óã
);

112 
	`DBGTHRD
(<<"°id " << 
°id
);

113 #i‡
BTREE_LOG_COMMENT_ON


115 
w_o°r°ªam
 
s
;

116 
s
 << "båì cª©ê" << 
°id
;

117 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

120 
œtch_mode_t
 
œtch
 = 
LATCH_NLX
;

121 if(!
bIgn‹eL©ches
) {

122 
	`gë_œtches
(
___s
,
___e
);

123 
	`check_œtches
(
___s
,
___e
, ___s+___e);

124 
œtch
 = 
LATCH_EX
;

126 
l¢_t
 
™ch‹
;

127 
x˘_t
* 
xd
 = 
	`x˘
();

129 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

131 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

133 
	`DBGTHRD
(<<"ÆloˇtögáÖagêtÿ°‹ê" << 
°id
);

135 
	`X_DO
–
io
->
	`Æloc_a_∑ge
(
°id
,

136 
Õid_t
::
eof
,

137 
roŸ
,

138 
åue
,

139 
NL
,

140 
åue


141 ), 
™ch‹
 );

142 
	`SSMTEST
("btree.create.1");

145 
	`DBGTHRD
(<<"f‹m©tögÅhê∑gêf‹ st‹ê" << 
°id
);

147 
båì_p
 
∑ge
;

149 
	`X_DO
–
∑ge
.
	`fix
(
roŸ
, 
œtch
,Öage.
t_vúgö
), 
™ch‹
 );

151 
båì_p
::
Êag_t
 
f
 = 
com¥es£d
? båì_p::
t_com¥es£d
: båì_p::
t_n⁄e
;

152 
	`X_DO
–
∑ge
.
	`£t_hdr
(
roŸ
.∑ge, 1, 0, 
f
), 
™ch‹
 );

154 #i‡
W_DEBUG_LEVEL
 > 2

155 if(
com¥es£d
) {

156 
	`w_as£π3
(
∑ge
.
	`is_com¥es£d
());

161 
	`DBGTHRD
(<<"com≥nßägÅhêÖagê¸óã f‹ st‹ê" << 
°id
);

163 i‡(
xd
) {

164 
	`SSMTEST
("btree.create.2");

165 
xd
->
	`com≥nßã
(
™ch‹
, 
Ál£
 
	`LOG_COMMENT_USE
("btree.create.2"));

168 
boﬁ
 
em±y
=
Ál£
;

169 
	`W_DO
(
	`is_em±y
(
roŸ
,
em±y
));

170 if(!
bIgn‹eL©ches
) {

171 
	`check_œtches
(
___s
,
___e
, ___s+___e);

173 if(!
em±y
) {

174 
	`DBGTHRD
(<<"eNDXNOTEMPTY");

175  
	`RC
(
eNDXNOTEMPTY
);

177 
	`DBGTHRD
(<<"ªtu∫ög from båì_¸óã, st‹ê" << 
°id
);

179 
	`INC_TSTAT
(
∑ge_båì_Æloc
);

181  
RCOK
;

182 
	}
}

191 
rc_t


192 
	gbåì_m
::
	$is_em±y
(

193 c⁄° 
Õid_t
& 
roŸ
,

194 
boﬁ
& 
ªt
,

195 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

197 if(!
bIgn‹eL©ches
) {

198 
	`gë_œtches
(
___s
,
___e
);

199 
	`check_œtches
(
___s
,
___e
, ___s+___e);

201 
key_ty≥_s
 
	`kc
(key_ty≥_s::
b
, 0, 4);

202 
curs‹_t
 
	`curs‹
(
åue
);

203 
	`W_DO
–
	`„tch_öô
(
curs‹
, 
roŸ
, 1, &
kc
, 
Ál£
, 
t_cc_n⁄e
,

204 
cvec_t
::
√g_öf
,

205 
cvec_t
::
√g_öf
,

206 
ge
,

207 
À
,

208 
cvec_t
::
pos_öf
,

209 
SH
,

210 
bIgn‹eL©ches
));

211 if(!
bIgn‹eL©ches
) {

212 
	`check_œtches
(
___s
,
___e
, ___s+___e);

215 
	`W_DO
–
	`„tch
(
curs‹
, 
bIgn‹eL©ches
) );

216 if(!
bIgn‹eL©ches
) {

217 
	`check_œtches
(
___s
,
___e
, ___s+___e);

219 
ªt
 = (
curs‹
.
	`key
() == 0);

220  
RCOK
;

221 
	}
}

236 
rc_t


237 
	gbåì_m
::
	$ö£π
(

238 c⁄° 
Õid_t
& 
roŸ
,

239 
nkc
,

240 c⁄° 
key_ty≥_s
* 
kc
,

241 
boﬁ
 
unique
,

242 
c⁄cuºícy_t
 
cc
,

243 c⁄° 
cvec_t
& 
key
,

244 c⁄° 
cvec_t
& 
ñ
,

245 
•lô_Á˘‹
)

247 #i‡
BTREE_LOG_COMMENT_ON


249 
w_o°r°ªam
 
s
;

250 
s
 << "båì in£π " << 
roŸ
;

251 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

255 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

256 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

257 (
cc
 !
t_cc_im
)

258 Ë 
	`badcc
();

259 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

261 if(
key
.
	`size
(Ë+ 
ñ
.size(Ë> 
båì_p
::
max_íåy_size
) {

262 
	`DBGTHRD
(<<"RECWONTFIT: key.size=" << 
key
.
	`size
()

263 << "Él.size=" << 
ñ
.
	`size
());

264  
	`RC
(
eRECWONTFIT
);

266 
rc_t
 
rc
;

268 
cvec_t
* 
ªÆ_key
;

269 
	`DBGTHRD
(<<"");

270 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

271 
	`DBGTHRD
(<<"");

274 
ªåy
:

275 
rc
 = 
båì_im∂
::
	`_ö£π
(
roŸ
, 
unique
, 
cc
, *
ªÆ_key
, 
ñ
, 
•lô_Á˘‹
);

276 if(
rc
.
	`is_îr‹
()) {

277 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

281 
ªåy
;

283 
	`DBGTHRD
(<<"rc=" << 
rc
);

285  
rc
;

286 
	}
}

297 
rc_t


298 
	gbåì_m
::
	$mr_ö£π
(

299 c⁄° 
Õid_t
& 
roŸ
,

300 
boﬁ
 
unique
,

301 
c⁄cuºícy_t
 
cc
,

302 c⁄° 
cvec_t
& 
key
,

303 c⁄° 
cvec_t
& 
ñ
,

304 
•lô_Á˘‹
,

305 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

307 #i‡
BTREE_LOG_COMMENT_ON


309 
w_o°r°ªam
 
s
;

310 
s
 << "mrbåì in£π " << 
roŸ
;

311 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

315 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

316 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

317 (
cc
 !
t_cc_im
)

318 Ë 
	`badcc
();

320 if(
key
.
	`size
(Ë+ 
ñ
.size(Ë> 
båì_p
::
max_íåy_size
) {

321 
	`DBGTHRD
(<<"RECWONTFIT: key.size=" << 
key
.
	`size
()

322 << "Él.size=" << 
ñ
.
	`size
());

323  
	`RC
(
eRECWONTFIT
);

325 
rc_t
 
rc
;

327 
	`DBGTHRD
(<<"");

329 
ªåy
:

330 
rc
 = 
båì_im∂
::
	`_ö£π
(
roŸ
, 
unique
, 
cc
, 
key
, 
ñ
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
);

331 if(
rc
.
	`is_îr‹
()) {

332 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

336 
ªåy
;

338 
	`DBGTHRD
(<<"rc=" << 
rc
);

340  
rc
;

341 
	}
}

351 
rc_t


352 
	gbåì_m
::
	$mr_ö£π_l
(

353 c⁄° 
Õid_t
& 
roŸ
,

354 
boﬁ
 
unique
,

355 
c⁄cuºícy_t
 
cc
,

356 c⁄° 
cvec_t
& 
key
,

358 
ñ_fûÀr
* 
ef
,

359 
size_t
 
ñ_size
,

360 
•lô_Á˘‹
,

361 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

362 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

364 #i‡
BTREE_LOG_COMMENT_ON


366 
w_o°r°ªam
 
s
;

367 
s
 << "mrbåì in£π " << 
roŸ
;

368 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

372 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

373 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

374 (
cc
 !
t_cc_im
)

375 Ë 
	`badcc
();

377 if(
key
.
	`size
(Ë+ 
ñ_size
 > 
båì_p
::
max_íåy_size
) {

378 
	`DBGTHRD
(<<"RECWONTFIT: key.size=" << 
key
.
	`size
()

379 << "Él.size=" << 
ñ_size
);

380  
	`RC
(
eRECWONTFIT
);

382 
rc_t
 
rc
;

384 
	`DBGTHRD
(<<"");

386 
ªåy
:

387 
rc
 = 
båì_im∂
::
	`_mr_ö£π
(
roŸ
, 
unique
, 
cc
, 
key
, 
ef
, 
ñ_size
, 
•lô_Á˘‹
,

388 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
);

389 if(
rc
.
	`is_îr‹
()) {

390 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

394 
ªåy
;

396 
	`DBGTHRD
(<<"rc=" << 
rc
);

398  
rc
;

399 
	}
}

409 
rc_t


410 
	gbåì_m
::
	$mr_ö£π_p
(

411 c⁄° 
Õid_t
& 
roŸ
,

412 
boﬁ
 
unique
,

413 
c⁄cuºícy_t
 
cc
,

414 c⁄° 
cvec_t
& 
key
,

416 
ñ_fûÀr
* 
ef
,

417 
size_t
 
ñ_size
,

418 
•lô_Á˘‹
,

419 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

421 #i‡
BTREE_LOG_COMMENT_ON


423 
w_o°r°ªam
 
s
;

424 
s
 << "mrbåì in£π " << 
roŸ
;

425 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

429 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

430 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

431 (
cc
 !
t_cc_im
)

432 Ë 
	`badcc
();

434 if(
key
.
	`size
(Ë+ 
ñ_size
 > 
båì_p
::
max_íåy_size
) {

435 
	`DBGTHRD
(<<"RECWONTFIT: key.size=" << 
key
.
	`size
()

436 << "Él.size=" << 
ñ_size
);

437  
	`RC
(
eRECWONTFIT
);

439 
rc_t
 
rc
;

441 
	`DBGTHRD
(<<"");

443 
ªåy
:

444 
rc
 = 
båì_im∂
::
	`_mr_ö£π
(
roŸ
, 
unique
, 
cc
, 
key
, 
ef
, 
ñ_size
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
);

445 if(
rc
.
	`is_îr‹
()) {

446 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

450 
ªåy
;

452 
	`DBGTHRD
(<<"rc=" << 
rc
);

454  
rc
;

455 
	}
}

465 
rc_t


466 
	gbåì_m
::
	$mr_ªmove
(

467 c⁄° 
Õid_t
& 
roŸ
,

468 
boﬁ
 
unique
,

469 
c⁄cuºícy_t
 
cc
,

470 c⁄° 
cvec_t
& 
key
,

471 c⁄° 
cvec_t
& 
ñ
,

472 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

474 #i‡
BTREE_LOG_COMMENT_ON


476 
w_o°r°ªam
 
s
;

477 
s
 << "båìÑemovê" << 
roŸ
;

478 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

483 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

484 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

485 (
cc
 !
t_cc_im
)

486 Ë 
	`badcc
();

488 
	`DBGTHRD
(<<"");

489 
ªåy
:

490 
rc_t
 
rc
 = 
båì_im∂
::
	`_ªmove
(
roŸ
, 
unique
, 
cc
, 
key
, 
ñ
, 
bIgn‹eL©ches
);

491 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë=
eRETRY
) {

493 
ªåy
;

496 
	`DBGTHRD
(<<"rc=" << 
rc
);

497  
rc
;

498 
	}
}

508 
rc_t


509 
	gbåì_m
::
	$mr_ªmove_key
(

510 c⁄° 
Õid_t
& 
roŸ
,

511 
nkc
,

512 c⁄° 
key_ty≥_s
* 
kc
,

513 
boﬁ
 
unique
,

514 
c⁄cuºícy_t
 
cc
,

515 c⁄° 
cvec_t
& 
key
,

516 & 
num_ªmoved
,

517 c⁄° 
boﬁ
 
bIgn‹eL©ches


521 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

522 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

523 (
cc
 !
t_cc_im
)

524 Ë 
	`badcc
();

526 
num_ªmoved
 = 0;

536 
curs‹_t
 
	`curs‹
(
åue
);

537 
	`W_DO
–
	`„tch_öô
(
curs‹
, 
roŸ
, 
nkc
, 
kc
,

538 
unique
, 
cc
, 
key
, 
cvec_t
::
√g_öf
,

539 
ge
,

540 
À
, 
key
, 
SH
, 
bIgn‹eL©ches
));

541 
	`W_DO
–
	`„tch
(
curs‹
, 
bIgn‹eL©ches
) );

542 i‡(!
curs‹
.
	`key
()) {

551 c⁄° 
cvec_t
 
	`curs‹_vec_tmp
(
curs‹
.
	`ñem
(), curs‹.
	`ñí
());

552 
	`W_DO
–
	`mr_ªmove
(
roŸ
, 
unique
, 
cc
, 
key
, 
curs‹_vec_tmp
, 
bIgn‹eL©ches
));

553 ++
num_ªmoved
;

555 i‡(
unique
) ;

557 i‡(
num_ªmoved
 == 0) {

558 
	`Ârötf
(
°dîr
, "couldÇot find key\n" );

559  
	`RC
(
eNOTFOUND
);

562  
RCOK
;

563 
	}
}

573 
rc_t


574 
	gbåì_m
::
	$mr_lookup
(

575 c⁄° 
Õid_t
& 
roŸ
,

576 
boﬁ
 
unique
,

577 
c⁄cuºícy_t
 
cc
,

578 c⁄° 
cvec_t
& 
key
,

579 * 
ñ
,

580 
smsize_t
& 
ñí
,

581 
boﬁ
& 
found
,

582 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

585 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

586 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

587 (
cc
 !
t_cc_im
)

588 Ë 
	`badcc
();

590 
	`DBGTHRD
(<<"");

591 
cvec_t
 
nuŒ
;

592 
	`W_DO
–
båì_im∂
::
	`_lookup
(
roŸ
, 
unique
, 
cc
, 
key
, 
nuŒ
, 
found
, 0, 
ñ
, 
ñí
, 
bIgn‹eL©ches
));

593  
RCOK
;

594 
	}
}

609 
rc_t


610 
	gbåì_m
::
	$mr_upd©e
(

611 c⁄° 
Õid_t
& 
roŸ
,

612 
boﬁ
 
unique
,

613 
c⁄cuºícy_t
 
cc
,

614 c⁄° 
cvec_t
& 
key
,

615 c⁄° 
cvec_t
& 
ﬁd_ñ
,

616 c⁄° 
cvec_t
& 
√w_ñ
,

617 
boﬁ
& 
found
,

618 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

621 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

622 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

623 (
cc
 !
t_cc_im
)

624 Ë 
	`badcc
();

626 
	`DBGTHRD
(<<"");

627 
	`W_DO
–
båì_im∂
::
	`_upd©e
(
roŸ
, 
unique
, 
cc
, 
key
, 
ﬁd_ñ
, 
√w_ñ
, 
found
, 
bIgn‹eL©ches
));

628  
RCOK
;

629 
	}
}

638 
rc_t


639 
	gbåì_m
::
	$•lô_åì
(

640 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

641 c⁄° 
Õid_t
& 
roŸ_√w
,

642 c⁄° 
cvec_t
& 
key
,

643 
Õid_t
& 
Àaf_ﬁd
,

644 
Õid_t
& 
Àaf_√w
,

645 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

647 #i‡
BTREE_LOG_COMMENT_ON


649 
w_o°r°ªam
 
s
;

650 
s
 << "båì s∂ô " << 
roŸ_ﬁd
;

651 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

655 
rc_t
 
rc
;

657 
	`DBGTHRD
(<<"");

658 
rc
 = 
båì_im∂
::
	`_•lô_åì
(
roŸ_ﬁd
, 
roŸ_√w
, 
key
, 
Àaf_ﬁd
, 
Àaf_√w
, 
bIgn‹eL©ches
);

660  
rc
;

661 
	}
}

670 
rc_t


671 
	gbåì_m
::
	$ªloˇã_ªcs_l
(

672 
Õid_t
& 
Àaf_ﬁd
,

673 c⁄° 
Õid_t
& 
Àaf_√w
,

674 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

675 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

677 #i‡
BTREE_LOG_COMMENT_ON


679 
w_o°r°ªam
 
s
;

680 
s
 << "ªloˇãÑec‹ds:Üóf_ﬁd" << 
Àaf_ﬁd
 << "Üóf_√w=" << 
Àaf_√w
;

681 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

685 
rc_t
 
rc
;

687 
	`DBGTHRD
(<<"");

688 
rc
 = 
båì_im∂
::
	`_ªloˇã_ªcs_l
(
Àaf_ﬁd
, 
Àaf_√w
, 
Ál£
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
);

690  
rc
;

691 
	}
}

699 
rc_t


700 
	gbåì_m
::
	$ªloˇã_ªcs_p
(

701 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

702 c⁄° 
Õid_t
& 
roŸ_√w
,

703 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

704 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

706 #i‡
BTREE_LOG_COMMENT_ON


708 
w_o°r°ªam
 
s
;

709 
s
 << "ªloˇãÑec‹ds:ÑoŸ_ﬁd=" << 
roŸ_ﬁd
 << "ÑoŸ_√w=" << 
roŸ_√w
;

710 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

714 
rc_t
 
rc
;

716 
	`DBGTHRD
(<<"");

717 
rc
 = 
båì_im∂
::
	`_ªloˇã_ªcs_p
(
roŸ_ﬁd
, 
roŸ_√w
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
);

719  
rc
;

720 
	}
}

729 
rc_t


730 
	gbåì_m
::
	$mîge_åìs
(

731 
Õid_t
& 
roŸ
,

732 c⁄° 
Õid_t
& 
roŸ1
,

733 c⁄° 
Õid_t
& 
roŸ2
,

734 
cvec_t
& 
°¨tKey2
,

735 c⁄° 
boﬁ
 
upd©e_ow√r
,

736 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

738 #i‡
BTREE_LOG_COMMENT_ON


740 
w_o°r°ªam
 
s
;

741 
s
 << "båì mîgêroŸ†" << 
roŸ1
 << "ánd " << 
roŸ2
;

742 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

746 
rc_t
 
rc
;

747 
rc
 = 
båì_im∂
::
	`_mîge_åìs
(
roŸ
, 
roŸ1
, 
roŸ2
, 
°¨tKey2
, 
upd©e_ow√r
, 
bIgn‹eL©ches
);

749  
rc
;

750 
	}
}

761 
rc_t


762 
	gbåì_m
::
	$ªmove_key
(

763 c⁄° 
Õid_t
& 
roŸ
,

764 
nkc
,

765 c⁄° 
key_ty≥_s
* 
kc
,

766 
boﬁ
 
unique
,

767 
c⁄cuºícy_t
 
cc
,

768 c⁄° 
cvec_t
& 
key
,

769 & 
num_ªmoved


773 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

774 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

775 (
cc
 !
t_cc_im
)

776 Ë 
	`badcc
();

778 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

780 
num_ªmoved
 = 0;

790 
curs‹_t
 
	`curs‹
(
åue
);

791 
	`W_DO
–
	`„tch_öô
(
curs‹
, 
roŸ
, 
nkc
, 
kc
,

792 
unique
, 
cc
, 
key
, 
cvec_t
::
√g_öf
,

793 
ge
,

794 
À
, 
key
));

795 
	`W_DO
–
	`„tch
(
curs‹
) );

796 i‡(!
curs‹
.
	`key
()) {

805 c⁄° 
cvec_t
 
	`curs‹_vec_tmp
(
curs‹
.
	`ñem
(), curs‹.
	`ñí
());

806 
	`W_DO
–
	`ªmove
(
roŸ
, 
nkc
, 
kc
, 
unique
, 
cc
, 
key
, 
curs‹_vec_tmp
));

807 ++
num_ªmoved
;

809 i‡(
unique
) ;

811 i‡(
num_ªmoved
 == 0) {

812 
	`Ârötf
(
°dîr
, "couldÇot find key\n" );

813  
	`RC
(
eNOTFOUND
);

816  
RCOK
;

817 
	}
}

827 
rc_t


828 
	gbåì_m
::
	$ªmove
(

829 c⁄° 
Õid_t
& 
roŸ
,

830 
nkc
,

831 c⁄° 
key_ty≥_s
* 
kc
,

832 
boﬁ
 
unique
,

833 
c⁄cuºícy_t
 
cc
,

834 c⁄° 
cvec_t
& 
key
,

835 c⁄° 
cvec_t
& 
ñ
)

837 #i‡
BTREE_LOG_COMMENT_ON


839 
w_o°r°ªam
 
s
;

840 
s
 << "båìÑemovê" << 
roŸ
;

841 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

844 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

847 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

848 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

849 (
cc
 !
t_cc_im
)

850 Ë 
	`badcc
();

852 
cvec_t
* 
ªÆ_key
;

853 
	`DBGTHRD
(<<"");

854 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

856 
	`DBGTHRD
(<<"");

857 
ªåy
:

858 
rc_t
 
rc
 = 
båì_im∂
::
	`_ªmove
(
roŸ
, 
unique
, 
cc
, *
ªÆ_key
, 
ñ
);

859 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë=
eRETRY
) {

861 
ªåy
;

864 
	`DBGTHRD
(<<"rc=" << 
rc
);

865  
rc
;

866 
	}
}

876 
rc_t


877 
	gbåì_m
::
	$lookup
(

878 c⁄° 
Õid_t
& 
roŸ
,

879 
nkc
,

880 c⁄° 
key_ty≥_s
* 
kc
,

881 
boﬁ
 
unique
,

882 
c⁄cuºícy_t
 
cc
,

883 c⁄° 
cvec_t
& 
key
,

884 * 
ñ
,

885 
smsize_t
& 
ñí
,

886 
boﬁ
& 
found
,

887 
boﬁ
 
u£_dúbuf
)

890 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

891 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

892 (
cc
 !
t_cc_im
)

893 Ë 
	`badcc
();

895 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

896 
cvec_t
* 
ªÆ_key
;

897 
	`DBGTHRD
(<<"");

898 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
, 
u£_dúbuf
));

900 
	`DBGTHRD
(<<"");

901 
cvec_t
 
nuŒ
;

902 
	`W_DO
–
båì_im∂
::
	`_lookup
(
roŸ
, 
unique
, 
cc
, *
ªÆ_key
,

903 
nuŒ
, 
found
, 0, 
ñ
, 
ñí
 ));

904  
RCOK
;

905 
	}
}

913 
rc_t


914 
	gbåì_m
::
	$lookup_¥ev
(

915 c⁄° 
Õid_t
& 
roŸ
,

916 
nkc
,

917 c⁄° 
key_ty≥_s
* 
kc
,

918 
boﬁ
 
unique
,

919 
c⁄cuºícy_t
 
cc
,

920 c⁄° 
cvec_t
& 
keyp
,

921 
boﬁ
& 
found
,

922 * 
key_¥ev
,

924 
smsize_t
& 
key_¥ev_Àn


930 
bt_curs‹_t
 * 
_btcurs‹
 = 
√w
 
	`bt_curs‹_t
(
åue
);

931 i‡(! 
_btcurs‹
) {

932 
	`W_FATAL
(
eOUTOFMEMORY
);

935 
rc_t
 
rc
 = 
bt
->
	`„tch_öô
(*
_btcurs‹
, 
roŸ
,

936 
nkc
, 
kc
,

937 
unique
,

938 
cc
,

939 
keyp
, 
cvec_t
::
pos_öf
,

940 
À
, 
ge
, 
cvec_t
::
√g_öf
);

941 
	`DBGTHRD
(<<"rc=" << 
rc
);

942 if(
rc
.
	`is_îr‹
()Ë 
	`RC_AUGMENT
(rc);

944 
	`W_DO
–
bt
->
	`„tch
(*
_btcurs‹
) );

945 
	`DBGTHRD
(<<"");

946 
found
 = (
_btcurs‹
->
	`key
() != 0);

948 
smsize_t
 
mn
 = (
key_¥ev_Àn
 > (smsize_t)
_btcurs‹
->
	`kÀn
()) ?

949 (
smsize_t
)
_btcurs‹
->
	`kÀn
(Ë: 
key_¥ev_Àn
;

950 
key_¥ev_Àn
 = 
_btcurs‹
->
	`kÀn
();

951 
	`DBGTHRD
(<<"kÀ¿" << 
key_¥ev_Àn
);

952 if(
found
) {

953 
	`mem˝y
–
key_¥ev
, 
_btcurs‹
->
	`key
(), 
mn
);

955 
dñëe
 
_btcurs‹
;

956  
RCOK
;

957 
	}
}

972 
rc_t


973 
	gbåì_m
::
	$„tch_öô
(

974 
curs‹_t
& 
curs‹
,

975 c⁄° 
Õid_t
& 
roŸ
,

976 
nkc
,

977 c⁄° 
key_ty≥_s
* 
kc
,

978 
boﬁ
 
unique
,

979 
c⁄cuºícy_t
 
cc
,

980 c⁄° 
cvec_t
& 
ukey
,

981 c⁄° 
cvec_t
& 
ñem
,

982 
cmp_t
 
c⁄d1
,

983 
cmp_t
 
c⁄d2
,

984 c⁄° 
cvec_t
& 
bound2
,

985 
lock_mode_t
 
mode
,

986 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

989 (
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

990 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

991 (
cc
 !
t_cc_im
)

992 Ë 
	`badcc
();

993 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

994 if(!
bIgn‹eL©ches
) {

995 
	`gë_œtches
(
___s
,
___e
);

996 
	`check_œtches
(
___s
,
___e
, ___s+___e);

998 
	`INC_TSTAT
(
bt_sˇn_˙t
);

1003 
cvec_t
* 
key
;

1004 
cvec_t
* 
bound2_key
;

1006 
	`DBGTHRD
(<<"");

1007 
	`W_DO
(
	`_s¸ambÀ_key
(
bound2_key
, 
bound2
, 
nkc
, 
kc
));

1008 
	`W_DO
(
curs‹
.
	`£t_up
(
roŸ
, 
nkc
, 
kc
, 
unique
, 
cc
,

1009 
c⁄d2
, *
bound2_key
, 
mode
));

1011 
	`DBGTHRD
(<<"");

1012 
	`W_DO
(
	`_s¸ambÀ_key
(
key
, 
ukey
, 
nkc
, 
kc
));

1013 
	`W_DO
(
curs‹
.
	`£t_up_∑π_2
–
c⁄d1
, *
key
));

1022 
curs‹
.
fú°_time
 = 
åue
;

1024 if((
cc
 =
t_cc_modkvl
) ) {

1030 if(
c⁄d1
 !
eq
 || 
c⁄d2
 !=Éq) {

1031  
	`RC
(
eBADSCAN
);

1033 
lockid_t
 
k
;

1034 
båì_im∂
::
	`mk_kvl
(
cc
, 
k
, 
roŸ
.
	`°id
(), 
åue
, *
key
);

1036 
	`W_DO
 (
lm
->
	`lock
(
k
, 
mode
, 
t_l⁄g
));

1039 
boﬁ
 
found
=
Ál£
;

1040 
smsize_t
 
ñí
 = 
ñem
.
	`size
();

1042 
	`DBGTHRD
(<<"Sˇ¿i†backw¨d? " << 
curs‹
.
	`is_backw¨d
());

1044 
	`W_DO
 (
båì_im∂
::
	`_lookup
–
curs‹
.
	`roŸ
(), curs‹.
	`unique
(), curs‹.
	`cc
(),

1045 *
key
, 
ñem
, 
found
, &
curs‹
, curs‹.
	`ñem
(), 
ñí
, 
bIgn‹eL©ches
));

1047 
	`DBGTHRD
(<<"found=" << 
found
);

1049 if(!
bIgn‹eL©ches
) {

1050 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1052  
RCOK
;

1053 
	}
}

1066 
rc_t


1067 
	gbåì_m
::
mr_„tch_öô
(

1068 
curs‹_t
& 
curs‹
,

1069 
ve˘‹
<
Õid_t
>& 
roŸs
,

1070 
nkc
,

1071 c⁄° 
key_ty≥_s
* 
kc
,

1072 
boﬁ
 
unique
,

1073 
c⁄cuºícy_t
 
cc
,

1074 c⁄° 
cvec_t
& 
ukey
,

1075 c⁄° 
cvec_t
& 
ñem
,

1076 
cmp_t
 
c⁄d1
,

1077 
cmp_t
 
c⁄d2
,

1078 c⁄° 
cvec_t
& 
bound2
,

1079 
lock_mode_t
 
mode
,

1080 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1083 (
	gcc
 !
t_cc_n⁄e
Ë&& (
cc
 !
t_cc_fûe
) &&

1084 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

1085 (
cc
 !
t_cc_im
)

1086 Ë 
badcc
();

1087 
w_as£π1
(
kc
 && 
nkc
 > 0);

1088 if(!
	gbIgn‹eL©ches
) {

1089 
gë_œtches
(
___s
,
___e
);

1090 
check_œtches
(
___s
,
___e
, ___s+___e);

1092 
INC_TSTAT
(
bt_sˇn_˙t
);

1094 
Õid_t
 
	groŸ
 = 
roŸs
.
back
();

1100 
DBGTHRD
(<<"");

1101 
W_DO
(
curs‹
.
£t_up
(
roŸ
, 
nkc
, 
kc
, 
unique
, 
cc
,

1102 
c⁄d2
, 
bound2
, 
mode
));

1104 
DBGTHRD
(<<"");

1105 
W_DO
(
curs‹
.
£t_up_∑π_2
–
c⁄d1
, 
ukey
));

1107 
	gcurs‹
.
£t_roŸs
(
roŸs
);

1116 
	gcurs‹
.
	gfú°_time
 = 
åue
;

1118 if((
	gcc
 =
t_cc_modkvl
) ) {

1124 if(
c⁄d1
 !
eq
 || 
c⁄d2
 !=Éq) {

1125  
RC
(
eBADSCAN
);

1127 
lockid_t
 
	gk
;

1128 
	gbåì_im∂
::
mk_kvl
(
cc
, 
k
, 
roŸ
.
°id
(), 
åue
, 
ukey
);

1130 
W_DO
 (
lm
->
lock
(
k
, 
mode
, 
t_l⁄g
));

1133 
boﬁ
 
	gfound
=
Ál£
;

1134 
smsize_t
 
	gñí
 = 
ñem
.
size
();

1136 
DBGTHRD
(<<"Sˇ¿i†backw¨d? " << 
curs‹
.
is_backw¨d
());

1138 
W_DO
 (
båì_im∂
::
_lookup
–
curs‹
.
roŸ
(), curs‹.
unique
(), curs‹.
cc
(),

1139 
ukey
, 
ñem
, 
found
, &
curs‹
, curs‹.ñem(), 
ñí
, 
bIgn‹eL©ches
));

1141 
DBGTHRD
(<<"found=" << 
found
);

1143 if(!
	gbIgn‹eL©ches
) {

1144 
check_œtches
(
___s
,
___e
, ___s+___e);

1146  
	gRCOK
;

1158 
rc_t


1159 
	gbåì_m
::
	$„tch_ªöô
(

1160 
curs‹_t
& 
curs‹
,

1161 c⁄° 
boﬁ
 
bIgn‹eL©ches


1164 
smsize_t
 
ñí
 = 
curs‹
.
	`ñí
();

1165 
boﬁ
 
found
 = 
Ál£
;

1167 if(!
bIgn‹eL©ches
) {

1168 
	`gë_œtches
(
___s
,
___e
);

1169 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1179 
curs‹
.
fú°_time
 = 
åue
;

1180 
curs‹
.
kìp_goög
 = 
åue
;

1182 
cvec_t
* 
ªÆ_key
;

1183 
	`DBGTHRD
(<<"");

1184 
cvec_t
 
	`key
(
curs‹
.key(), curs‹.
	`kÀn
());

1185 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
curs‹
.
	`nkc
(), curs‹.
	`kc
()));

1187 c⁄° 
cvec_t
 
	`curs‹_vec_tmp
(
curs‹
.
	`ñem
(), curs‹.
	`ñí
());

1188 
rc_t
 
rc

båì_im∂
::
	`_lookup
(

1189 
curs‹
.
	`roŸ
(), curs‹.
	`unique
(), curs‹.
	`cc
(),

1190 *
ªÆ_key
,

1191 
curs‹_vec_tmp
,

1192 
found
,

1193 &
curs‹
,

1194 
curs‹
.
	`ñem
(), 
ñí
,

1195 
bIgn‹eL©ches
);

1196 if(!
bIgn‹eL©ches
) {

1197 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1199  
rc
;

1200 
	}
}

1211 
rc_t


1212 
	gbåì_m
::
	$„tch
(
curs‹_t
& 
curs‹
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1214 
	`FUNC
(
båì_m
::
„tch
);

1215 
boﬁ
 
__eof
 = 
Ál£
;

1216 
boﬁ
 
__found
 = 
Ál£
;

1218 if(!
bIgn‹eL©ches
) {

1219 
	`gë_œtches
(
___s
,
___e
);

1220 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1222 
	`DBGTHRD
(<<"fú°_time=" << 
curs‹
.
fú°_time


1223 << " kìp_goög=" << 
curs‹
.
kìp_goög
);

1225 
œtch_mode_t
 
mode
 = 
LATCH_SH
;

1227 i‡(
curs‹
.
fú°_time
) {

1234 
curs‹
.
fú°_time
 = 
Ál£
;

1235 if(
curs‹
.
	`key
()) {

1237 if–!
curs‹
.
kìp_goög
 ) {

1239  
RCOK
;

1244  
RCOK
;

1247 
	`w_as£π3
(
curs‹
.
kìp_goög
);

1249 if(!
bIgn‹eL©ches
) {

1250 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1255 
°id_t
 
°id
 = 
curs‹
.
	`roŸ
().
	`°id
();

1256 
¶Ÿid_t
 
¶Ÿ
 = -1;

1257 
rc_t
 
rc
;

1259 
agaö
:

1260 
	`DBGTHRD
(<<"„tch.agaö is_vÆid=" << 
curs‹
.
	`is_vÆid
());

1262 
båì_p
 
p1
, 
p2
;

1263 
	`w_as£π3
(!
p2
.
	`is_fixed
());

1264 if(!
bIgn‹eL©ches
) {

1265 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1268 
curs‹
.
	`is_vÆid
()) {

1273 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1274 
	`W_DO
–
p1
.
	`fix
(
curs‹
.
	`pid
(), 
mode
) );

1275 i‡(
curs‹
.
	`l¢
(Ë=
p1
.lsn()) {

1278 
p1
.
	`unfix
();

1279 
	`W_DO
(
	`„tch_ªöô
(
curs‹
, 
bIgn‹eL©ches
));

1280 
curs‹
.
fú°_time
 = 
Ál£
;

1282 
agaö
;

1285 
¶Ÿ
 = 
curs‹
.
	`¶Ÿ
();

1286 i‡(
curs‹
.
	`is_vÆid
()) {

1287 
	`w_as£π3
(
p1
.
	`pid
(Ë=
curs‹
.pid());

1288 
båì_p
* 
chûd
 = &
p1
;

1296 
	`w_as£π3
(
p1
.
	`is_fixed
());

1297 
	`w_as£π3
(!
p2
.
	`is_fixed
());

1298 
	`W_DO
(
båì_im∂
::
	`_skù_⁄e_¶Ÿ
(
p1
, 
p2
, 
chûd
,

1299 
¶Ÿ
, 
__eof
, 
__found
, 
curs‹
.
	`is_backw¨d
(), 
bIgn‹eL©ches
));

1301 
	`w_as£π3
(
chûd
->
	`is_fixed
());

1302 
	`w_as£π3
(
chûd
->
	`is_Àaf
());

1305 if(
__eof
 && 
curs‹
.
is_mrbt
) {

1306 if(
curs‹
.
	`gë_√xt_roŸ
()) {

1307 
p1
.
	`unfix
();

1308 
Õid_t
 
pid
 = 
curs‹
.
	`roŸ
();

1309 
båì_p
 
∑ge
;

1310 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
mode
) );

1311 
∑ge
.
	`Àvñ
() > 1) {

1312 
pid
.
∑ge
 =Öage.
	`pid0
();

1313 
∑ge
.
	`unfix
();

1314 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
mode
) );

1316 
curs‹
.
	`£t_¶Ÿ
(0);

1317 
curs‹
.
	`£t_pid
(
pid
);

1318 
curs‹
.
	`upd©e_l¢
(
∑ge
);

1319 
agaö
;

1324 if(
__eof
) {

1325 
	`w_as£π3
(
¶Ÿ
 >
chûd
->
	`ƒecs
(Ë|| (
curs‹
.
	`is_backw¨d
()));

1326 
curs‹
.
	`‰ì_ªc
();

1328 } if(!
__found
 ) {

1333 
åì_œtch
 
	`åì_roŸ
(
chûd
->
	`roŸ
());

1334 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1335 
w_îr‹_t
::
îr_num_t
 
r˚
 =

1336 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
mode
, *
chûd
, mode, false,

1337 
chûd
 =&
p1
? &
p2
 : &p1,

1338 
LATCH_NL
, 
bIgn‹eL©ches
);

1339 if(
r˚
Ë 
	`RC
(rce);

1341 
p1
.
	`unfix
();

1342 
p2
.
	`unfix
();

1343 
åì_roŸ
.
	`unfix
();

1344 
	`W_DO
(
	`„tch_ªöô
(
curs‹
, 
bIgn‹eL©ches
));

1345 
curs‹
.
fú°_time
 = 
Ál£
;

1346 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

1347 << (
åì_roŸ
.
	`œtch_mode
())

1349 
agaö
;

1352 
	`w_as£π3
(
__found
) ;

1353 
	`w_as£π3
(
¶Ÿ
 >= 0);

1354 
	`w_as£π3
(
¶Ÿ
 < 
chûd
->
	`ƒecs
());

1361 
	`W_DO
–
curs‹
.
	`make_ªc
(*
chûd
, 
¶Ÿ
) );

1362 if(
curs‹
.
kìp_goög
) {

1368 
p1
.
	`unfix
();

1369 
p2
.
	`unfix
();

1370 
	`DBGTHRD
(<<"->again");

1371 
agaö
;

1375 
	`w_as£π3
(
chûd
->
	`is_fixed
());

1376 
	`w_as£π3
(
chûd
->
	`is_Àaf
());

1377 if(
__eof
) {

1378 
	`w_as£π3
(
¶Ÿ
 >
chûd
->
	`ƒecs
(Ë|| (
curs‹
.
	`is_backw¨d
()));

1380 
	`w_as£π3
(
¶Ÿ
 < 
chûd
->
	`ƒecs
());

1381 
	`w_as£π3
(
¶Ÿ
 >= 0);

1389 i‡(
curs‹
.
	`cc
(Ë!
t_cc_n⁄e
) {

1393 
lockid_t
 
kvl
;

1394 i‡(
¶Ÿ
 >
chûd
->
	`ƒecs
()) {

1395 
båì_im∂
::
	`mk_kvl_eof
(
curs‹
.
	`cc
(), 
kvl
, 
°id
);

1397 
	`w_as£π3
(
¶Ÿ
 < 
chûd
->
	`ƒecs
());

1398 
båec_t
 
	`r
(*
chûd
, 
¶Ÿ
);

1399 
båì_im∂
::
	`mk_kvl
(
curs‹
.
	`cc
(), 
kvl
, 
°id
, curs‹.
	`unique
(), 
r
);

1401 
rc
 = 
lm
->
	`lock
(
kvl
, 
SH
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

1402 i‡(
rc
.
	`is_îr‹
()) {

1403 
	`DBGTHRD
(<<"rc=" << 
rc
);

1404 
	`w_as£π3
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

1406 
Õid_t
 
pid
 = 
chûd
->
	`pid
();

1407 
l¢_t
 
l¢
 = 
chûd
->
	`l¢
();

1408 
p1
.
	`unfix
();

1409 
p2
.
	`unfix
();

1410 
	`W_DO
–
lm
->
	`lock
(
kvl
, 
SH
, 
t_l⁄g
) );

1411 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1412 
	`W_DO
–
chûd
->
	`fix
(
pid
, 
mode
) );

1413 i‡(
l¢
 =
chûd
->
	`l¢
(Ë&& chûd =&
p1
) {

1416 
	`DBGTHRD
(<<"->again");

1417 
agaö
;

1425 
	`DBGTHRD
(<<"ªtu∫ög, is_vÆid=" << 
curs‹
.
	`is_vÆid
());

1426 if(!
bIgn‹eL©ches
) {

1427 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1429  
RCOK
;

1430 
	}
}

1438 
rc_t


1439 
	gbåì_m
::
	$gë_du_°©i°ics
(

1440 c⁄° 
Õid_t
& 
roŸ
,

1441 
båì_°©s_t
& 
_°©s
,

1442 
boﬁ
 
audô
)

1444 
Õid_t
 
pid
 = 
roŸ
;

1445 
Õid_t
 
chûd
 = 
roŸ
;

1446 
chûd
.
∑ge
 = 0;

1448 
ba£_°©_t
 
lf_˙t
 = 0;

1449 
ba£_°©_t
 
öt_˙t
 = 0;

1450 
ba£_°©_t
 
Àvñ_˙t
 = 0;

1452 
båì_p
 
∑ge
[2];

1453 
c
 = 0;

1465 
båì_lf_°©s_t
 
lf_°©s
;

1466 
båì_öt_°©s_t
 
öt_°©s
;

1468 
	`W_DO
–
∑ge
[
c
].
	`fix
(
pid
, 
LATCH_SH
) );

1469 i‡(
∑ge
[
c
].
	`Àvñ
() > 1) {

1470 
öt_˙t
++;;

1471 
	`W_DO
(
∑ge
[
c
].
	`öt_°©s
(
öt_°©s
));

1472 i‡(
audô
) {

1473 
	`W_DO
(
öt_°©s
.
	`audô
());

1475 
_°©s
.
öt_pg
.
	`add
(
öt_°©s
);

1477 
lf_˙t
++;

1478 
	`W_DO
(
∑ge
[
c
].
	`Àaf_°©s
(
lf_°©s
));

1479 i‡(
audô
) {

1480 
	`W_DO
(
lf_°©s
.
	`audô
());

1482 
_°©s
.
Àaf_pg
.
	`add
(
lf_°©s
);

1484 i‡(
∑ge
[
c
].
	`¥ev
() == 0) {

1485 
chûd
.
∑ge
 =Öage[
c
].
	`pid0
();

1486 
Àvñ_˙t
++;

1488 i‡(! (
pid
.
∑ge
 =Öage[
c
].
	`√xt
())) {

1489 
pid
 = 
chûd
;

1490 
chûd
.
∑ge
 = 0;

1492 
c
 = 1 - c;

1497 
	`INC_TSTAT
(
bt_löks
);

1498 } 
pid
.
∑ge
);

1501 
rc_t
 
rc
;

1502 
boﬁ
 
Æloˇãd
;

1503 
ba£_°©_t
 
Æloc_˙t
 = 0;

1504 
ba£_°©_t
 
u∆ök_˙t
 = 0;

1505 
ba£_°©_t
 
u«Œoc_˙t
 = 0;

1506 
rc
 = 
io
->
	`fú°_∑ge
(
roŸ
.
	`°id
(), 
pid
, &
Æloˇãd
);

1507 !
rc
.
	`is_îr‹
()) {

1509 i‡(
Æloˇãd
) {

1510 
Æloc_˙t
++;

1512 
u«Œoc_˙t
++;

1514 
rc
 = 
io
->
	`√xt_∑ge
(
pid
, &
Æloˇãd
);

1516 
u∆ök_˙t
 = 
Æloc_˙t
 - (
lf_˙t
 + 
öt_˙t
);

1517 i‡(
rc
.
	`îr_num
(Ë!
eEOF
) Ñc;

1519 i‡(
audô
) {

1520 i‡(!((
Æloc_˙t
+
u«Œoc_˙t
Ë% 
smÀvñ_0
::
ext_sz
 == 0)) {

1521 #i‡
W_DEBUG_LEVEL
 > 0

1522 
	`Ârötf
(
°dîr
,

1524 (Ë
Æloc_˙t
, (Ë
u«Œoc_˙t
);

1526  
	`RC
(
fcINTERNAL
);

1528 i‡(!((
lf_˙t
 + 
öt_˙t
 + 
u∆ök_˙t
 + 
u«Œoc_˙t
) %

1529 
smÀvñ_0
::
ext_sz
 == 0)) {

1530 #i‡
W_DEBUG_LEVEL
 > 0

1531 
	`Ârötf
(
°dîr
,

1533 (Ë
lf_˙t
, (Ë
öt_˙t
,

1534 (Ë
u∆ök_˙t
, (Ë
u«Œoc_˙t
);

1536  
	`RC
(
fcINTERNAL
);

1541 i‡–
u∆ök_˙t
 != 0) {

1542 
	`Ârötf
(
°dîr
, " found %lu unlinkedÖages\n",

1544 (Ë
u∆ök_˙t
);

1545  
	`RC
(
fcINTERNAL
);

1550 
_°©s
.
u«Œoc_pg_˙t
 +
u«Œoc_˙t
;

1551 
_°©s
.
u∆ök_pg_˙t
 +
u∆ök_˙t
;

1552 
_°©s
.
Àaf_pg_˙t
 +
lf_˙t
;

1553 
_°©s
.
öt_pg_˙t
 +
öt_˙t
;

1554 
_°©s
.
Àvñ_˙t
 = 
	`MAX
(_stats.level_cnt,Üevel_cnt);

1555  
RCOK
;

1556 
	}
}

1570 
rc_t


1571 
	gbåì_m
::
	$_s¸ambÀ_key
(

1572 
cvec_t
*& 
ªt
,

1573 c⁄° 
cvec_t
& 
key
,

1574 
nkc
,

1575 c⁄° 
key_ty≥_s
* 
kc
,

1576 
boﬁ
 
u£_dúbuf
)

1578 
	`FUNC
(
båì_m
::
_s¸ambÀ_key
);

1579 
	`DBGTHRD
(<<" SCømblög " << 
key
 );

1580 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

1582 i‡(&
key
 =&key.
√g_öf
 || &key =&key.
pos_öf
) {

1583 
ªt
 = (
cvec_t
*Ë&
key
;

1584  
RCOK
;

1586 if(
key
.
	`size
() == 0) {

1588 
ªt
 = (
cvec_t
*Ë&
key
;

1589  
RCOK
;

1593 
ªt
 = 
	`me
()->
	`gë_kc_vec
(
u£_dúbuf
);

1594 
ªt
->
	`ª£t
();

1596 * 
p
 = 0;

1597 
i
 = 0; i < 
nkc
; i++) {

1598 
key_ty≥_s
::
ty≥_t
 
t
 = (key_ty≥_s::ty≥_tË
kc
[
i
].
ty≥
;

1600 
t
 =
key_ty≥_s
::
i
 ||

1601 
t
 =
key_ty≥_s
::
I
 ||

1602 
t
 =
key_ty≥_s
::
u
 ||

1603 
t
 =
key_ty≥_s
::
U
 ||

1604 
t
 =
key_ty≥_s
::
f
 ||

1605 
t
 =
key_ty≥_s
::
F


1607 
p
 = 
	`me
()->
	`gë_kc_buf
(
u£_dúbuf
);

1612 i‡(! 
p
) {

1614 
ªt
->
	`put
(
key
);

1619 *
§c
=0;

1620 *
mÆlo˚d
=0;

1621 if(
key
.
	`cou¡
() > 1) {

1622 
mÆlo˚d
 = 
√w
 [
key
.
	`size
()];

1623 
	`w_as£π1
(
mÆlo˚d
);

1624 
key
.
	`c›y_to
(
mÆlo˚d
);

1625 
§c

mÆlo˚d
;

1627 c⁄° 
vec_t
 *
v
 = (c⁄° vec_à*)&
key
;

1628 
§c
(*)(
v
->
	`±r
(0));

1630 * 
s
 = 
p
;

1632 
key_ªmaöög
 = 
key
.
	`size
();

1633 
i
 = 0; i < 
nkc
; i++) {

1634 
	`DBGTHRD
(<<"À¿" << 
kc
[
i
].
Àngth
);

1635 if(!
kc
[
i
].
v¨übÀ
) {

1636 
key_ªmaöög
 -
kc
[
i
].
Àngth
;

1637 if(
key_ªmaöög
 <0) {

1638 if(
mÆlo˚d
Ë
dñëe
[] malloced;

1639  
	`RC
(
eBADKEY
);

1644 if–(*)(
	`Æign⁄
(((
±rdiff_t
)
§c
), (
kc
[
i
].
Àngth
))) != src) {

1649 if(
kc
[
i
].
Àngth
 <= 4) {

1650 if(
mÆlo˚d
Ë
dñëe
[] malloced;

1651 
cout
 << "U«lig√d, s¸ambÀ,Öå=" << (*)
§c


1652 << ",álign=" << 
kc
[
i
].
Àngth
 << 
ídl
;

1653  
	`RC
(
eALIGNPARM
);

1657 if–!
S‹tOrdî
.
	`Àxify
(&
kc
[
i
], 
§c
, 
s
) ) {

1658 
	`w_as£π3
(
kc
[
i
].
v¨übÀ
);

1660 
	`w_as£π3
(
i
 =
nkc
-1);

1662 
	`DBGTHRD
(<<"lexify failed-- doing memcpy of "

1663 << 
key
.
	`size
(Ë- (
s
-
p
)

1665 
	`mem˝y
(
s
, 
§c
, 
key
.
	`size
(Ë- (s-
p
));

1667 
§c
 +
kc
[
i
].
Àngth
;

1668 
s
 +
kc
[
i
].
Àngth
;

1670 if(
mÆlo˚d
Ë
dñëe
[] malloced;

1671 
§c
 = 0;

1672 if(
nkc
 =1 && 
kc
[0].
ty≥
 =
key_ty≥_s
::
b
) {

1674 
	`DBGTHRD
(<<"Ñë->put(" << 
p
 << "," << ()(
s
-p) << ")");

1676 
ªt
->
	`put
(
p
, 
s
 -Ö);

1678 
	`DBGTHRD
(<<" S¸ambÀd " << 
key
 << " i¡ÿ" << *
ªt
);

1679  
RCOK
;

1680 
	}
}

1683 
rc_t


1684 
	gbåì_m
::
	$_uns¸ambÀ_key
(

1685 
cvec_t
*& 
ªt
,

1686 c⁄° 
cvec_t
& 
key
,

1687 
nkc
,

1688 c⁄° 
key_ty≥_s
* 
kc
,

1689 
boﬁ
 
u£_dúbuf
)

1691 
	`FUNC
(
båì_m
::
_uns¸ambÀ_key
);

1692 
	`DBGTHRD
(<<" UNs¸amblög " << 
key
 );

1693 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

1694 
ªt
 = 
	`me
()->
	`gë_kc_vec
(
u£_dúbuf
);

1695 
ªt
->
	`ª£t
();

1696 * 
p
 = 0;

1697 
i
;

1698 #ifde‡
W_TRACE


1699 
i
 = 0; i < 
nkc
; i++) {

1700 
	`DBGTHRD
(<<"keyÅy≥ i†" << 
kc
[
i
].
ty≥
);

1703 
i
 = 0; i < 
nkc
; i++) {

1704 
key_ty≥_s
::
ty≥_t
 
t
 = (key_ty≥_s::ty≥_tË
kc
[
i
].
ty≥
;

1706 
t
 =
key_ty≥_s
::
i
 ||

1707 
t
 =
key_ty≥_s
::
I
 ||

1708 
t
 =
key_ty≥_s
::
U
 ||

1709 
t
 =
key_ty≥_s
::
u
 ||

1710 
t
 =
key_ty≥_s
::
f
 ||

1711 
t
 =
key_ty≥_s
::
F


1713 
p
 = 
	`me
()->
	`gë_kc_buf
(
u£_dúbuf
);

1717 i‡(! 
p
) {

1718 
ªt
->
	`put
(
key
);

1723 *
§c
=0;

1724 *
mÆlo˚d
=0;

1725 if(
key
.
	`cou¡
() > 1) {

1726 
mÆlo˚d
 = 
√w
 [
key
.
	`size
()];

1727 
key
.
	`c›y_to
(
mÆlo˚d
);

1728 
§c

mÆlo˚d
;

1730 c⁄° 
vec_t
 *
v
 = (c⁄° vec_à*)&
key
;

1731 
§c
(*)
v
->
	`±r
(0);

1733 * 
s
 = 
p
;

1734 if(
§c
Ë
i
 = 0; i < 
nkc
; i++) {

1735 if(! 
kc
[
i
].
v¨übÀ
) {

1738 
Àn
 = 
kc
[
i
].
Àngth
;

1741 if(
Àn
 == 8) {Üen = 4; }

1742 if(
Àn
 =4 && (*)(
	`Æign⁄
(((
±rdiff_t
)
§c
),Üen)) != src) {

1743 
˚º
 << "Invalidálignment, unscramble,Ötr="

1744 << (*)
§c
 << ",álign=" << 
Àn
 << 
ídl
;

1745  
	`RC
(
eALIGNPARM
);

1748 if–!
S‹tOrdî
.
	`u∆exify
(&
kc
[
i
], 
§c
, 
s
) ) {

1749 
	`w_as£π3
(
kc
[
i
].
v¨übÀ
);

1751 
	`w_as£π3
(
i
 =
nkc
-1);

1753 
	`DBGTHRD
(<<"unlexify failed-- doing memcpy of "

1754 << 
key
.
	`size
(Ë- (
s
-
p
)

1756 
	`mem˝y
(
s
, 
§c
, 
key
.
	`size
(Ë- (s-
p
));

1758 
§c
 +
kc
[
i
].
Àngth
;

1759 
s
 +
kc
[
i
].
Àngth
;

1761 if(
mÆlo˚d
Ë
dñëe
[] malloced;

1762 
§c
 = 0;

1763 if(
nkc
 =1 && 
kc
[0].
ty≥
 =
key_ty≥_s
::
b
) {

1764 
	`DBGTHRD
(<<"Ñë->put(" << 
p
 << "," << ()(
s
-p) << ")");

1766 
ªt
->
	`put
(
p
, 
s
 -Ö);

1768 
	`DBGTHRD
(<<" UNs¸ambÀd " << 
key
 << " i¡ÿ" << *
ªt
);

1769  
RCOK
;

1770 
	}
}

1781 
	gbåì_m
::
	$¥öt
(c⁄° 
Õid_t
& 
roŸ
,

1782 
s‹t‹dî
::
keyty≥
 
kt
,

1783 
boﬁ
 
¥öt_ñem


1786 
Õid_t
 
nxçid
, 
pid0
;

1787 
nxçid
 = 
pid0
 = 
roŸ
;

1789 
båì_p
 
∑ge
;

1790 
	`W_COERCE
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

1792 
i
 = 0; i < 5 - 
∑ge
.
	`Àvñ
(); i++) {

1793 
cout
 << '\t';

1795 
cout


1796 << (
∑ge
.
	`is_smo
() ? "*" : " ")

1797 << (
∑ge
.
	`is_dñëe
() ? "D" : " ")

1799 << "LEVEL " << 
∑ge
.
	`Àvñ
()

1800 << ",Öagê" << 
∑ge
.
	`pid
().page

1801 << ",Öªv " << 
∑ge
.
	`¥ev
()

1802 << ",Çexà" << 
∑ge
.
	`√xt
()

1803 << ",Çª¯" << 
∑ge
.
	`ƒecs
()

1804 << 
ídl
;

1805 
∑ge
.
	`¥öt
(
kt
, 
¥öt_ñem
);

1806 
cout
 << 
Êush
;

1807 i‡(
∑ge
.
	`√xt
()) {

1808 
nxçid
.
∑ge
 =Öage.
	`√xt
();

1811 i‡–! 
∑ge
.
	`¥ev
(Ë&&Öage.
	`pid0
()) {

1812 
pid0
.
∑ge
 =Öage.
	`pid0
();

1815 i‡(
nxçid
 !
roŸ
) {

1816 
	`¥öt
(
nxçid
, 
kt
, 
¥öt_ñem
);

1818 i‡(
pid0
 !
roŸ
) {

1819 
	`¥öt
(
pid0
, 
kt
, 
¥öt_ñem
);

1821 
	}
}

1825 
rc_t


1826 
	gbåì_m
::
	$_ö£π
(

1827 c⁄° 
Õid_t
& 
roŸ
,

1828 
boﬁ
 
unique
,

1829 
c⁄cuºícy_t
 
cc
,

1830 c⁄° 
cvec_t
& 
key
,

1831 c⁄° 
cvec_t
& 
ñem
,

1832 
•lô_Á˘‹
)

1834  
båì_im∂
::
	`_ö£π
(
roŸ
,
unique
,
cc
, 
key
, 
ñem
, 
•lô_Á˘‹
);

1835 
	}
}

1837 
rc_t


1838 
	gbåì_m
::
	$_ªmove
(

1839 c⁄° 
Õid_t
& 
roŸ
,

1840 
boﬁ
 
unique
,

1841 
c⁄cuºícy_t
 
cc
,

1842 c⁄° 
cvec_t
& 
key
,

1843 c⁄° 
cvec_t
& 
ñem
)

1845  
båì_im∂
::
	`_ªmove
(
roŸ
,
unique
,
cc
, 
key
, 
ñem
);

1846 
	}
}

	@src/sm/btree.h

53 #i‚de‡
BTREE_H


54 
	#BTREE_H


	)

56 
	~"w_deföes.h
"

65 #ifde‡
__GNUG__


66 #¥agm®
öãrÁ˚


69 #i‚de‡
LEXIFY_H


70 
	~<Àxify.h
>

73 
˛ass
 
	gs‹t_°ªam_i
;

74 
˛ass
 
	gbåì_p
;

75 
	gbåì_°©s_t
;

76 
˛ass
 
	gbt_curs‹_t
;

81 ˛as†
	cbåì_m
 : 
public
 
smÀvñ_2
 {

82 
‰õnd
 
˛ass
 
båì_p
;

83 
‰õnd
 
˛ass
 
	mbåì_im∂
;

84 
‰õnd
 
˛ass
 
	mbt_curs‹_t
;

85 
‰õnd
 
˛ass
 
	mbåì_ªmove_log
;

86 
‰õnd
 
˛ass
 
	mbåì_ö£π_log
;

87 
‰õnd
 
˛ass
 
	mbåì_purge_log
;

89 
	mpublic
:

90 
NORET
 
	$båì_m
() {};

91 
NORET
 ~
	$båì_m
(Ë{
	}
};

93 
smsize_t
 
max_íåy_size
();

95 
bt_curs‹_t
 
	tcurs‹_t
;

97 
rc_t
 
¸óã
(

98 c⁄° 
°id_t
 & 
°id
,

99 
Õid_t
& 
roŸ
,

100 
boﬁ
 
com¥es£d
,

101 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


103 
rc_t
 
bulk_lﬂd
(

104 c⁄° 
Õid_t
& 
roŸ
,

105 
n§cs
,

106 c⁄° 
°id_t
* 
§c
,

107 
nkc
,

108 c⁄° 
key_ty≥_s
* 
kc
,

109 
boﬁ
 
unique
,

110 
c⁄cuºícy_t
 
cc
,

111 
båì_°©s_t
& 
°©s
,

112 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

113 
boﬁ
 
Àxify_keys
 = 
åue


115 
rc_t
 
bulk_lﬂd
(

116 c⁄° 
Õid_t
& 
roŸ
,

117 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

118 
nkc
,

119 c⁄° 
key_ty≥_s
* 
kc
,

120 
boﬁ
 
unique
,

121 
c⁄cuºícy_t
 
cc
,

122 
båì_°©s_t
& 
°©s
);

124 
rc_t
 
mr_bulk_lﬂd
(

125 
key_ønges_m≠
& 
∑πôi⁄s
,

126 
n§cs
,

127 c⁄° 
°id_t
* 
§c
,

128 
nkc
,

129 c⁄° 
key_ty≥_s
* 
kc
,

130 
boﬁ
 
unique
,

131 
c⁄cuºícy_t
 
cc
,

132 
båì_°©s_t
& 
°©s
,

133 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

134 
boﬁ
 
Àxify_keys
 = 
åue
,

135 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


137 
rc_t
 
mr_bulk_lﬂd
(

138 
key_ønges_m≠
& 
∑πôi⁄s
,

139 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

140 
nkc
,

141 c⁄° 
key_ty≥_s
* 
kc
,

142 
boﬁ
 
unique
,

143 
c⁄cuºícy_t
 
cc
,

144 
båì_°©s_t
& 
°©s
);

145 
rc_t
 
mr_bulk_lﬂd_l
(

146 
key_ønges_m≠
& 
∑πôi⁄s
,

147 
n§cs
,

148 c⁄° 
°id_t
* 
§c
,

149 
nkc
,

150 c⁄° 
key_ty≥_s
* 
kc
,

151 
boﬁ
 
unique
,

152 
c⁄cuºícy_t
 
cc
,

153 
båì_°©s_t
& 
°©s
,

154 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

155 
boﬁ
 
Àxify_keys
 = 
åue
,

156 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


158 
rc_t
 
mr_bulk_lﬂd_l
(

159 
key_ønges_m≠
& 
∑πôi⁄s
,

160 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

161 
nkc
,

162 c⁄° 
key_ty≥_s
* 
kc
,

163 
boﬁ
 
unique
,

164 
c⁄cuºícy_t
 
cc
,

165 
båì_°©s_t
& 
°©s
);

166 
rc_t
 
•lô_åì
(

167 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

168 c⁄° 
Õid_t
& 
roŸ_√w
,

169 c⁄° 
cvec_t
& 
key
,

170 
Õid_t
& 
Àaf_ﬁd
,

171 
Õid_t
& 
Àaf_√w
,

172 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

173 
rc_t
 
ªloˇã_ªcs_l
(

174 
Õid_t
& 
Àaf_ﬁd
,

175 c⁄° 
Õid_t
& 
Àaf_√w
,

176 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

177 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

178 
rc_t
 
ªloˇã_ªcs_p
(

179 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

180 c⁄° 
Õid_t
& 
roŸ_√w
,

181 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

182 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

183 
rc_t
 
mîge_åìs
(

184 
Õid_t
& 
roŸ
,

185 c⁄° 
Õid_t
& 
roŸ1
,

186 c⁄° 
Õid_t
& 
roŸ2
,

187 
cvec_t
& 
°¨tKey2
,

188 c⁄° 
boﬁ
 
upd©e_ow√r
 = 
Ál£
,

189 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

190 
rc_t
 
mr_ö£π
(

191 c⁄° 
Õid_t
& 
roŸ
,

192 
boﬁ
 
unique
,

193 
c⁄cuºícy_t
 
cc
,

194 c⁄° 
cvec_t
& 
key
,

195 c⁄° 
cvec_t
& 
ñem
,

196 
•lô_Á˘‹
 = 50,

197 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

198 
rc_t
 
mr_ö£π_l
(

199 c⁄° 
Õid_t
& 
roŸ
,

200 
boﬁ
 
unique
,

201 
c⁄cuºícy_t
 
cc
,

202 c⁄° 
cvec_t
& 
key
,

204 
ñ_fûÀr
* 
ef
,

205 
size_t
 
ñ_size
,

206 
•lô_Á˘‹
 = 50,

207 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

208 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

209 
rc_t
 
mr_ö£π_p
(

210 c⁄° 
Õid_t
& 
roŸ
,

211 
boﬁ
 
unique
,

212 
c⁄cuºícy_t
 
cc
,

213 c⁄° 
cvec_t
& 
key
,

215 
ñ_fûÀr
* 
ef
,

216 
size_t
 
ñ_size
,

217 
•lô_Á˘‹
 = 50,

218 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

219 
rc_t
 
mr_ªmove
(

220 c⁄° 
Õid_t
& 
roŸ
,

221 
boﬁ
 
unique
,

222 
c⁄cuºícy_t
 
cc
,

223 c⁄° 
cvec_t
& 
key
,

224 c⁄° 
cvec_t
& 
ñem
,

225 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

226 
rc_t
 
mr_ªmove_key
(

227 c⁄° 
Õid_t
& 
roŸ
,

228 
nkc
,

229 c⁄° 
key_ty≥_s
* 
kc
,

230 
boﬁ
 
unique
,

231 
c⁄cuºícy_t
 
cc
,

232 c⁄° 
cvec_t
& 
key
,

233 & 
num_ªmoved
,

234 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

235 
rc_t
 
mr_lookup
(

236 c⁄° 
Õid_t
& 
roŸ
,

237 
boﬁ
 
unique
,

238 
c⁄cuºícy_t
 
cc
,

239 c⁄° 
cvec_t
& 
key_to_föd
,

240 * 
ñ
,

241 
smsize_t
& 
ñí
,

242 
boﬁ
& 
found
,

243 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

244 
rc_t
 
mr_upd©e
(

245 c⁄° 
Õid_t
& 
roŸ
,

246 
boﬁ
 
unique
,

247 
c⁄cuºícy_t
 
cc
,

248 c⁄° 
cvec_t
& 
key_to_föd
,

249 c⁄° 
cvec_t
& 
ﬁd_ñ
,

250 c⁄° 
cvec_t
& 
√w_ñ
,

251 
boﬁ
& 
found
,

252 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

254 
rc_t
 
ö£π
(

255 c⁄° 
Õid_t
& 
roŸ
,

256 
nkc
,

257 c⁄° 
key_ty≥_s
* 
kc
,

258 
boﬁ
 
unique
,

259 
c⁄cuºícy_t
 
cc
,

260 c⁄° 
cvec_t
& 
key
,

261 c⁄° 
cvec_t
& 
ñem
,

262 
•lô_Á˘‹
 = 50);

263 
rc_t
 
ªmove
(

264 c⁄° 
Õid_t
& 
roŸ
,

265 
nkc
,

266 c⁄° 
key_ty≥_s
* 
kc
,

267 
boﬁ
 
unique
,

268 
c⁄cuºícy_t
 
cc
,

269 c⁄° 
cvec_t
& 
key
,

270 c⁄° 
cvec_t
& 
ñem
);

271 
rc_t
 
ªmove_key
(

272 c⁄° 
Õid_t
& 
roŸ
,

273 
nkc
,

274 c⁄° 
key_ty≥_s
* 
kc
,

275 
boﬁ
 
unique
,

276 
c⁄cuºícy_t
 
cc
,

277 c⁄° 
cvec_t
& 
key
,

278 & 
num_ªmoved
);

280 
¥öt
(c⁄° 
Õid_t
& 
roŸ
,

281 
s‹t‹dî
::
keyty≥
 
kt
 = s‹t‹dî::
kt_b
,

282 
boﬁ
 
¥öt_ñem
 = 
åue
);

284 
rc_t
 
lookup
(

285 c⁄° 
Õid_t
& 
roŸ
,

286 
nkc
,

287 c⁄° 
key_ty≥_s
* 
kc
,

288 
boﬁ
 
unique
,

289 
c⁄cuºícy_t
 
cc
,

290 c⁄° 
cvec_t
& 
key_to_föd
,

291 * 
ñ
,

292 
smsize_t
& 
ñí
,

293 
boﬁ
& 
found
,

294 
boﬁ
 
u£_dúbuf
 = 
Ál£
);

297 
rc_t
 
lookup_¥ev
(

298 c⁄° 
Õid_t
& 
roŸ
,

299 
nkc
,

300 c⁄° 
key_ty≥_s
* 
kc
,

301 
boﬁ
 
unique
,

302 
c⁄cuºícy_t
 
cc
,

303 c⁄° 
cvec_t
& 
key
,

304 
boﬁ
& 
found
,

305 * 
key_¥ev
,

306 
smsize_t
& 
key_¥ev_Àn
);

307 
rc_t
 
„tch_öô
(

308 
curs‹_t
& 
curs‹
,

309 c⁄° 
Õid_t
& 
roŸ
,

310 
nkc
,

311 c⁄° 
key_ty≥_s
* 
kc
,

312 
boﬁ
 
unique
,

313 
c⁄cuºícy_t
 
cc
,

314 c⁄° 
cvec_t
& 
key
,

315 c⁄° 
cvec_t
& 
ñem
,

316 
cmp_t
 
c⁄d1
,

317 
cmp_t
 
c⁄d2
,

318 c⁄° 
cvec_t
& 
bound2
,

319 
lock_mode_t
 
mode
 = 
SH
,

320 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

322 
rc_t
 
mr_„tch_öô
(

323 
curs‹_t
& 
curs‹
,

324 
ve˘‹
<
Õid_t
>& 
roŸs
,

325 
nkc
,

326 c⁄° 
key_ty≥_s
* 
kc
,

327 
boﬁ
 
unique
,

328 
c⁄cuºícy_t
 
cc
,

329 c⁄° 
cvec_t
& 
key
,

330 c⁄° 
cvec_t
& 
ñem
,

331 
cmp_t
 
c⁄d1
,

332 
cmp_t
 
c⁄d2
,

333 c⁄° 
cvec_t
& 
bound2
,

334 
lock_mode_t
 
mode
 = 
SH
,

335 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

337 
rc_t
 
„tch_ªöô
(
curs‹_t
& 
curs‹
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

338 
rc_t
 
„tch
(
curs‹_t
& 
curs‹
,

339 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

340 
rc_t
 
is_em±y
(c⁄° 
Õid_t
& 
roŸ
, 
boﬁ
& 
ªt
, c⁄° boﬁ 
bIgn‹eL©ches
 = 
Ál£
);

341 
rc_t
 
purge
(c⁄° 
Õid_t
& 
roŸ
, 
boﬁ
 
check_em±y
,

342 
boﬁ
 
f‹w¨d_¥o˚ssög
);

343 
rc_t
 
gë_du_°©i°ics
(

344 c⁄° 
Õid_t
& 
roŸ
,

345 
båì_°©s_t
& 
båì_°©s
,

346 
boﬁ
 
audô
);

349 
rc_t
 
_s¸ambÀ_key
(

350 
cvec_t
*& 
ªt
,

351 c⁄° 
cvec_t
& 
key
,

352 
nkc
,

353 c⁄° 
key_ty≥_s
* 
kc
,

354 
boﬁ
 
u£_dúbuf
 = 
Ál£
);

356 
rc_t
 
_uns¸ambÀ_key
(

357 
cvec_t
*& 
ªt
,

358 c⁄° 
cvec_t
& 
key
,

359 
nkc
,

360 c⁄° 
key_ty≥_s
* 
kc
,

361 
boﬁ
 
u£_dúbuf
 = 
Ál£
);

364 
	g¥Ÿe˘ed
:

368 
rc_t
 
_ö£π
(

369 c⁄° 
Õid_t
& 
roŸ
,

370 
boﬁ
 
unique
,

371 
c⁄cuºícy_t
 
cc
,

372 c⁄° 
cvec_t
& 
key
,

373 c⁄° 
cvec_t
& 
ñem
,

374 
•lô_Á˘‹
 = 50);

375 
rc_t
 
_ªmove
(

376 c⁄° 
Õid_t
& 
roŸ
,

377 
boﬁ
 
unique
,

378 
c⁄cuºícy_t
 
cc
,

379 c⁄° 
cvec_t
& 
key
,

380 c⁄° 
cvec_t
& 
ñem
);

382 c⁄° 
	gsmÀvñ_0
::
°‹e_Êag_t
 
bulk_lﬂded_°‹e_ty≥
;

	@src/sm/btree_bl.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#BTREE_C


	)

60 
	~"sm_öt_4.h
"

62 
	~"sm.h
"

64 
	~"båì_p.h
"

65 
	~"båì_im∂.h
"

66 
	~"s‹t.h
"

67 
	~"sm_du_°©s.h
"

68 
	~<¸ash.h
>

69 
	~"umemcmp.h
"

71 #ifde‡
EXPLICIT_TEMPLATE


72 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gªc‹d_t
 *>;

75 c⁄° 
	gsmÀvñ_0
::
°‹e_Êag_t
 
båì_m
::
bulk_lﬂded_°‹e_ty≥


76 
smÀvñ_0
::
°_ö£π_fûe
;

82 
	$ñm_cmp
(c⁄° *
_r1
, c⁄° *
_r2
)

84 c⁄° 
ªc‹d_t
 **
r1
 = (c⁄°Ñec‹d_à**)
_r1
;

85 c⁄° 
ªc‹d_t
 **
r2
 = (c⁄°Ñec‹d_à**)
_r2
;

86 
size1
 = (*
r1
)->
	`body_size
();

87 
size2
 = (*
r2
)->
	`body_size
();

89 
d
 = 
	`umemcmp
((*
r1
)->
	`body
(), (*
r2
)->body(), 
size1
 < 
size2
 ? size1 : size2);

91 i‡(
d
)

92  
d
;

94  
size1
 - 
size2
;

95 
	}
}

115 ˛as†
	cbtsök_t
 : 
¥iv©e
 
båì_m
 {

116 
public
:

118 
NORET
 
btsök_t
(c⁄° 
Õid_t
& 
roŸ
, 
rc_t
& 
rc
);

119 
	mNORET
 ~
	$btsök_t
() {};

121 
	$btsök_t
(Ë{ 
	}
}

122 
rc_t
 
£t
(c⁄° 
Õid_t
& 
roŸ
);

124 
rc_t
 
put
(c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
);

125 
rc_t
 
m≠_to_roŸ
();

127 
uöt2_t
 
	$height
(Ë{  
_height
; 
	}
}

128 
uöt4_t
 
	$num_∑ges
(Ë{  
_num_∑ges
; 
	}
}

129 
uöt4_t
 
	$Àaf_∑ges
(Ë{  
_Àaf_∑ges
; 
	}
}

130 
	g¥iv©e
:

131 
boﬁ
 
_is_com¥es£d
;

132 
uöt2_t
 
	g_height
;

133 
uöt4_t
 
	g_num_∑ges
;

134 
uöt4_t
 
	g_Àaf_∑ges
;

136 
Õid_t
 
	g_roŸ
;

137 
båì_p
 
	g_∑ge
[20];

139 
¶Ÿid_t
 
	g_¶Ÿ
[20];

140 
shpid_t
 
	g_À·_mo°
[20];

141 
	g_t›
;

143 
rc_t
 
_add_∑ge
(
i
, 
shpid_t
 
pid0
);

156 
rc_t


157 
	gbåì_im∂
::
	$_h™dÀ_dup_keys
(

158 
btsök_t
* 
sök
,

159 
¶Ÿid_t
& 
¶Ÿ
,

160 
fûe_p
* 
¥evp
,

161 
fûe_p
* 
cuΩ
,

162 & 
cou¡
,

163 
ªc‹d_t
*& 
r
,

164 
Õid_t
& 
pid
,

165 
nkc
,

166 c⁄° 
key_ty≥_s
* 
kc
,

167 
boﬁ
 
Àxify_keys


170 
cou¡
 = 0;

171 
max_ªc_˙t
 = 500;

173 
ªc‹d_t
** 
ªcs
 = 
√w
Ñec‹d_t* [
max_ªc_˙t
];

174 i‡(!
ªcs
Ë{  
	`RC
(
eOUTOFMEMORY
); }

175 
w_auto_dñëe_¨øy_t
<
ªc‹d_t
*> 
	`auto_dñ_ªcs
(
ªcs
);

177 
boﬁ
 
eod
 = 
Ál£
, 
eof
 = false;

178 
i
;

180 i‡(
¶Ÿ
==1) {

182 
	`W_COERCE
–
¥evp
->
	`gë_ªc
’ªvp->
	`num_¶Ÿs
()-1, 
r
) );

184 
	`W_COERCE
–
cuΩ
->
	`gë_ªc
(
¶Ÿ
-1, 
r
) );

186 
ªcs
[
cou¡
++] = 
r
;

188 
	`W_COERCE
–
cuΩ
->
	`gë_ªc
(
¶Ÿ
, 
r
) );

189 
ªcs
[
cou¡
++] = 
r
;

191 
¶Ÿid_t
 
s
 = 
¶Ÿ
;

192 (
s
 = 
cuΩ
->
	`√xt_¶Ÿ
(s))) {

193 
	`W_COERCE
–
cuΩ
->
	`gë_ªc
(
s
, 
r
) );

194 i‡(
r
->
	`hdr_size
(Ë=
ªcs
[0]->hdr_size() &&

195 !
	`memcmp
(
r
->
	`hdr
(), 
ªcs
[0]->hdr(),Ñ->
	`hdr_size
())) {

196 i‡(
r
->
	`body_size
(Ë=
ªcs
[0]->body_size() &&

197 !
	`memcmp
(
r
->
	`body
(), 
ªcs
[0]->body(), (Ï->
	`body_size
())) {

198  
	`RC
(
eDUPLICATE
);

200 i‡(
cou¡
 =
max_ªc_˙t
) {

201 
max_ªc_˙t
 *= 2;

202 
ªc‹d_t
** 
tmp
 = 
√w
Ñec‹d_t* [
max_ªc_˙t
];

203 i‡(!
tmp
Ë{  
	`RC
(
eOUTOFMEMORY
); }

204 
	`mem˝y
(
tmp
, 
ªcs
, 
cou¡
*(recs));

205 
dñëe
 [] 
ªcs
;

206 
ªcs
 = 
tmp
;

207 
auto_dñ_ªcs
.
	`£t
(
ªcs
);

209 
ªcs
[
cou¡
++] = 
r
;

211 
eod
 = 
åue
;

216 
∑ge_˙t
 = 0, 
max_∑ge_˙t
 = 200;

217 
fûe_p
* 
∑ges
 = 
√w
 fûe_p[
max_∑ge_˙t
];

218 i‡(!
∑ges
Ë{  
	`RC
(
eOUTOFMEMORY
); }

219 
w_auto_dñëe_¨øy_t
<
fûe_p
> 
	`auto_dñ_∑ges
(
∑ges
);

221 i‡(!
eod
) {

222 
	`W_DO
–
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

225 !
eof
 && !
eod
) {

226 
œtch_mode_t
 
œtch
 = 
LATCH_SH
;

227 
	`W_DO
–
∑ges
[
∑ge_˙t
].
	`fix
(
pid
, 
œtch
) );

228 
s
 = 0;

229 (
s
 = 
∑ges
[
∑ge_˙t
].
	`√xt_¶Ÿ
(s))) {

230 
	`W_COERCE
–
∑ges
[
∑ge_˙t
].
	`gë_ªc
(
s
, 
r
) );

232 i‡(
r
->
	`hdr_size
(Ë=
ªcs
[0]->hdr_size() &&

233 !
	`memcmp
(
r
->
	`hdr
(), 
ªcs
[0]->hdr(),Ñ->
	`hdr_size
())) {

234 i‡(
r
->
	`body_size
(Ë=
ªcs
[0]->body_size() &&

235 !
	`memcmp
(
r
->
	`body
(), 
ªcs
[0]->body(), (Ï->
	`body_size
())) {

236  
	`RC
(
eDUPLICATE
);

238 i‡(
cou¡
==
max_ªc_˙t
) {

239 
max_ªc_˙t
 *= 2;

240 
ªc‹d_t
** 
tmp
 = 
√w
Ñec‹d_t* [
max_ªc_˙t
];

241 i‡(!
tmp
Ë{  
	`RC
(
eOUTOFMEMORY
); }

242 
	`mem˝y
(
tmp
, 
ªcs
, 
cou¡
*(recs));

243 
dñëe
 [] 
ªcs
;

244 
ªcs
 = 
tmp
;

245 
auto_dñ_ªcs
.
	`£t
(
ªcs
);

247 
ªcs
[
cou¡
++] = 
r
;

249 
eod
 = 
åue
;

253 
∑ge_˙t
++;

254 i‡(!
eod
) {

255 
	`W_DO
–
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

256 i‡(
∑ge_˙t
 >
max_∑ge_˙t
) {

257 
˚º


259 << "Åoÿm™y du∂iˇã keyÉ¡rõs" << 
ídl
;

260 
˚º
 << "Ñëu∫ög OUT OF SPACEÉº‹" << 
ídl
;

261  
	`RC
(
eOUTOFSPACE
);

281 
	`qs‹t
(
ªcs
, 
cou¡
, (*), 
ñm_cmp
);

283 
vec_t
 
	`key
(
ªcs
[0]->
	`hdr
(),Ñecs[0]->
	`hdr_size
());

284 
i
 = 0; i < 
cou¡
; i++) {

285 
cvec_t
 
	`ñ
(
ªcs
[
i
]->
	`body
(), (Ïecs[i]->
	`body_size
());

286 if(
Àxify_keys
) {

287 
cvec_t
* 
ªÆ_key
=0;

288 
	`DBG
(<<"");

289 
	`W_DO
(
båì_m
::
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

290 
	`W_DO
–
sök
->
	`put
(*
ªÆ_key
, 
ñ
) );

292 
	`DBG
(<<"");

293 
	`W_DO
–
sök
->
	`put
(
key
, 
ñ
) );

297 i‡(
∑ge_˙t
>0) {

298 *
cuΩ
 = 
∑ges
[
∑ge_˙t
-1];

300 
¶Ÿ
 = 
s
;

302 i‡(
eof
Ë
pid
 = 
Õid_t
::
nuŒ
;

304  
RCOK
;

305 
	}
}

316 
rc_t


317 
	gbåì_m
::
	$purge
(

318 c⁄° 
Õid_t
& 
roŸ
,

319 
boﬁ
 
check_em±y
,

320 
boﬁ
 
f‹w¨d_¥o˚ssög
)

322 i‡(
check_em±y
) {

328 
boﬁ
 
Êag
;

329 
	`W_DO
–
	`is_em±y
(
roŸ
, 
Êag
) );

330 i‡(! 
Êag
) {

331 
	`DBG
(<<"eNDXNOTEMPTY");

332  
	`RC
(
eNDXNOTEMPTY
);

336 
l¢_t
 
™ch‹
;

337 
x˘_t
* 
xd
 = 
	`x˘
();

338 
	`w_as£π3
(
xd
);

339 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

340 
™ch‹
 = 
xd
->
	`™ch‹
();

342 
Õid_t
 
pid
;

343 
	`X_DO
–
io
->
	`fú°_∑ge
(
roŸ
.
	`°id
(), 
pid
, 
NULL
 ), 
™ch‹
 );

344 
pid
.
∑ge
) {

348 
Õid_t
 
cur
 = 
pid
;

349 
rc_t
 
rc
 = 
io
->
	`√xt_∑ge
(
pid
);

350 i‡(
cur
.
∑ge
 !
roŸ
.page) {

351 
	`X_DO
–
io
->
	`‰ì_∑ge
(
cur
, 
Ál£
 ), 
™ch‹
 );

353 i‡(
rc
.
	`is_îr‹
()) {

354 i‡(
rc
.
	`îr_num
(Ë!
eEOF
) {

355 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("btbl1"));

356  
	`RC_AUGMENT
(
rc
);

362 
båì_p
 
∑ge
;

363 
	`X_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_EX
), 
™ch‹
 );

364 
	`X_DO
–
∑ge
.
	`£t_hdr
(
roŸ
.page, 1, 0,

365 (
∑ge
.
	`is_com¥es£d
()?
båì_p
::
t_com¥es£d
:båì_p::
t_n⁄e
)

366 ), 
™ch‹
 );

368 
	`SSMTEST
("btree.bulk.3");

369 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.bl.3"));

376 
rc_t
 
rc
 = 
	`log_båì_purge
(
∑ge
);

377 
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eRETRY
)) {

378 
rc
 = 
	`log_båì_purge
(
∑ge
);

380 
	`W_COERCE
(
rc
);

382 if(
f‹w¨d_¥o˚ssög
) {

383 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
roŸ
.
	`°id
(), 
bulk_lﬂded_°‹e_ty≥
) );

385  
RCOK
;

386 
	}
}

405 
rc_t


406 
	gbåì_m
::
	$bulk_lﬂd
(

407 c⁄° 
Õid_t
& 
roŸ
,

408 
n§cs
,

409 c⁄° 
°id_t
* 
§c
,

410 
nkc
,

411 c⁄° 
key_ty≥_s
* 
kc
,

412 
boﬁ
 
unique
,

413 
c⁄cuºícy_t
 
cc_unu£d
,

414 
båì_°©s_t
& 
_°©s
,

415 
boﬁ
 
s‹t_du∂iˇãs
,

416 
boﬁ
 
Àxify_keys


421 i‡(
cc_unu£d
) {}

423 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

424 
	`DBG
(<<"bulk_load "

425 << 
n§cs
 << " sour˚s, fú°=" << 
§c
[0] << " index=" << 
roŸ


426 << " s‹t_dups=" << 
s‹t_du∂iˇãs


427 << "Üexify_keys=" << 
Àxify_keys


433 
_°©s
.
	`˛ór
();

434 
ba£_°©_t
 
uni_˙t
 = 0;

435 
ba£_°©_t
 
˙t
 = 0;

440 
	`W_DO
–
	`purge
(
roŸ
, 
åue
,Årue) );

445 
rc_t
 
rc
;

446 
btsök_t
 
	`sök
(
roŸ
, 
rc
);

447 i‡(
rc
.
	`is_îr‹
()Ë 
	`RC_AUGMENT
(rc);

452 
i
 = 0;

453 
fûe_p
 
∑ge
[2];

455 c⁄° 
ªc‹d_t
* 
¥
 = 0;

456 
Õid_t
 
¥_pid
;

457 
¶Ÿid_t
 
¥_s
 = 0;

458 
§c_ödex
 = 0;

459 
boﬁ
 
skù_œ°
 = 
Ál£
;

461 
§c_ödex
 = 0; src_ödex < 
n§cs
; src_index++) {

462 
Õid_t
 
pid
;

463 
boﬁ
 
eof
 = 
Ál£
;

464 
skù_œ°
 = 
Ál£
;

466 
rc
 = 
fi
->
	`fú°_∑ge
(
§c
[
§c_ödex
], 
pid
, 
NULL
 );

467 !
rc
.
	`is_îr‹
(Ë&& !
eof
;

468 
rc
 = 
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 )) {

472 
	`W_DO
–
∑ge
[
i
].
	`fix
(
pid
, 
LATCH_SH
) );

473 
	`w_as£π3
(
∑ge
[
i
].
	`pid
(Ë=
pid
);

475 
¶Ÿid_t
 
s
 = 
∑ge
[
i
].
	`√xt_¶Ÿ
(0);

476 i‡(! 
s
) {

482  ; 
s
; s = 
∑ge
[
i
].
	`√xt_¶Ÿ
(s)) {

486 
ªc‹d_t
* 
r
;

487 
	`W_COERCE
–
∑ge
[
i
].
	`gë_ªc
(
s
, 
r
) );

489 if(!
s‹t_du∂iˇãs
) {

491 i‡(
∑ge
[1-
i
].
	`is_fixed
()Ë∑ge[1-i].
	`unfix
();

494 i‡(
¥
) {

495 
boﬁ
 
ö£π_⁄e
 = 
Ál£
;

496 
cvec_t
 
	`key
(
¥
->
	`hdr
(),Ör->
	`hdr_size
());

497 
rid_t
 
	`rid
(
¥_pid
, 
¥_s
);

498 
cvec_t
 
	`ñ
((*)(&
rid
), (
rid_t
));

499 
	`DBG
(<<"¥->key_sizê" << 
¥
->
	`hdr_size
());

500 
	`DBG
(<<"¥->ñ_sizê" << 
ñ
.
	`size
());

508 
ªs
 = 
key
.
	`cmp
(
r
->
	`hdr
(),Ñ->
	`hdr_size
());

509 i‡(
ªs
==0) {

513 i‡(
unique
) {

514  
	`RC
(
eDUPLICATE
);

516 if(
s‹t_du∂iˇãs
) {

521 
dup_˙t
;

522 
	`W_DO
–
båì_im∂
::
	`_h™dÀ_dup_keys
(&
sök
, 
s
, &
∑ge
[1-
i
],

523 &
∑ge
[
i
], 
dup_˙t
, 
r
, 
pid
,

524 
nkc
, 
kc
,

525 
Àxify_keys
) );

526 
˙t
 +
dup_˙t
;

527 
eof
 = (
pid
==
Õid_t
::
nuŒ
);

528 
skù_œ°
 = 
eof
;

534 
ö£π_⁄e
 = 
åue
;

544 
ö£π_⁄e
 = 
åue
;

546 if(
ö£π_⁄e
) {

547 ++
˙t
;

548 if(
Àxify_keys
) {

549 
	`DBG
(<<"lexify, before sink.put(key,Él) key = "

550 << 
key
);

551 
cvec_t
* 
ªÆ_key
 = 0;

552 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

553 
	`W_DO
–
sök
.
	`put
(*
ªÆ_key
, 
ñ
) );

555 
	`DBG
(<<"nÿÀxify, sök.put(key,ÉlËkey = " << 
key
);

556 
	`W_DO
–
sök
.
	`put
(
key
, 
ñ
) );

558 
skù_œ°
 = 
Ál£
;

561 ++
uni_˙t
;

564 i‡(
∑ge
[1-
i
].
	`is_fixed
()Ë∑ge[1-i].
	`unfix
();

565 
¥
 = 
r
;

566 
¥_s
 = 
s
;

567 
¥_pid
 = 
pid
;

569 i‡(!
s
) ;

571 
i
 = 1 - i;

572 i‡(
eof
) ;

574 i‡(
rc
.
	`is_îr‹
()) {

575  
rc
.
	`ª£t
();

580 i‡(!
skù_œ°
 && 
¥
) {

581 
cvec_t
 
	`key
(
¥
->
	`hdr
(),Ör->
	`hdr_size
());

582 
rid_t
 
	`rid
(
¥_pid
, 
¥_s
);

583 
cvec_t
 
	`ñ
((*)(&
rid
), (
rid_t
));

584 if(
Àxify_keys
) {

585 
cvec_t
* 
ªÆ_key
;

586 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

587 
	`DBG
(<<"");

588 
	`W_DO
–
sök
.
	`put
(*
ªÆ_key
, 
ñ
) );

590 
	`DBG
(<<"");

591 
	`W_DO
–
sök
.
	`put
(
key
, 
ñ
) );

593 ++
uni_˙t
;

594 ++
˙t
;

597 i‡(
¥
) {

598 
	`W_DO
–
sök
.
	`m≠_to_roŸ
() );

601 
_°©s
.
Àvñ_˙t
 = 
sök
.
	`height
();

602 
_°©s
.
Àaf_pg_˙t
 = 
sök
.
	`Àaf_∑ges
();

603 
_°©s
.
öt_pg_˙t
 = 
sök
.
	`num_∑ges
(Ë- _°©s.
Àaf_pg_˙t
;

605 
_°©s
.
Àaf_pg
.
unique_˙t
 = 
uni_˙t
;

606 
_°©s
.
Àaf_pg
.
íåy_˙t
 = 
˙t
;

608 
	`DBG
(<<"end bulkÜoad OK");

609  
RCOK
;

610 
	}
}

621 
rc_t


622 
	gbåì_m
::
	$bulk_lﬂd
(

623 c⁄° 
Õid_t
& 
roŸ
,

624 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

625 
nkc
,

626 c⁄° 
key_ty≥_s
* 
kc
,

627 
boﬁ
 
unique
,

628 
c⁄cuºícy_t
 
cc_unu£d
,

629 
båì_°©s_t
& 
_°©s
)

631 
	`w_as£π1
(
kc
 && 
nkc
 > 0);

632 
	`DBG
(<<"bulk_lﬂd from s‹ãd såóm, index=" << 
roŸ
);

635 i‡(
cc_unu£d
) {}

640 
_°©s
.
	`˛ór
();

641 
ba£_°©_t
 
uni_˙t
 = 0;

642 
ba£_°©_t
 
˙t
 = 0;

647 
	`W_DO
–
	`purge
(
roŸ
, 
åue
,Årue) );

652 
rc_t
 
rc
;

653 
btsök_t
 
	`sök
(
roŸ
, 
rc
);

654 i‡(
rc
.
	`is_îr‹
()Ë 
	`RC_AUGMENT
(rc);

659 * 
tmp
 = 
√w
 [
∑ge_s
::
d©a_sz
];

660 i‡(! 
tmp
) {

661  
	`RC
(
eOUTOFMEMORY
);

663 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_tmp
(
tmp
);

664 
vec_t
 
	`¥ev_key
(
tmp
, 
∑ge_s
::
d©a_sz
);

669 
boﬁ
 
¥
 = 
Ál£
;

670 
boﬁ
 
eof
 = 
Ál£
;

672 
vec_t
 
key
, 
ñ
;

673 
	`W_DO
 ( 
s‹ãd_°ªam
.
	`gë_√xt
(
key
, 
ñ
, 
eof
) );

675 !
eof
) {

676 ++
˙t
;

678 i‡(! 
¥
) {

679 ++
uni_˙t
;

680 
¥
 = 
åue
;

681 
¥ev_key
.
	`c›y_‰om
(
key
);

682 
¥ev_key
.
	`ª£t
().
	`put
(
tmp
, 
key
.
	`size
());

685 i‡(
key
.
	`cmp
(
¥ev_key
)) {

686 ++
uni_˙t
;

687 
¥ev_key
.
	`ª£t
().
	`put
(
tmp
, 
∑ge_s
::
d©a_sz
);

688 
¥ev_key
.
	`c›y_‰om
(
key
);

689 
¥ev_key
.
	`ª£t
().
	`put
(
tmp
, 
key
.
	`size
());

691 i‡(
unique
) {

692 
	`DBG
(<<"");

693  
	`RC
(
eDUPLICATE
);

696 
	`DBG
(<<"nŸ uniquêuni_˙à" << 
uni_˙t


697 << "Ör=" << 
¥


701 
	`Ârötf
(
°dîr
,

704  
	`RC
(
eNOTIMPLEMENTED
);

708 
cvec_t
* 
ªÆ_key
;

709 
	`DBG
(<<"");

710 
	`W_DO
(
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
nkc
, 
kc
));

711 
	`W_DO
–
sök
.
	`put
(*
ªÆ_key
, 
ñ
) );

712 
key
.
	`ª£t
();

713 
ñ
.
	`ª£t
();

714 
	`W_DO
 ( 
s‹ãd_°ªam
.
	`gë_√xt
(
key
, 
ñ
, 
eof
) );

717 
	`DBG
(<<"");

718 
	`W_DO
–
sök
.
	`m≠_to_roŸ
() );

720 
_°©s
.
Àvñ_˙t
 = 
sök
.
	`height
();

721 
_°©s
.
Àaf_pg_˙t
 = 
sök
.
	`Àaf_∑ges
();

722 
_°©s
.
öt_pg_˙t
 = 
sök
.
	`num_∑ges
(Ë- _°©s.
Àaf_pg_˙t
;

724 
s‹ãd_°ªam
.
	`föish
();

726 
_°©s
.
Àaf_pg
.
unique_˙t
 = 
uni_˙t
;

727 
_°©s
.
Àaf_pg
.
íåy_˙t
 = 
˙t
;

729 
	`DBG
(<<"Ñeturn OK from bulkÜoad");

730  
RCOK
;

731 
	}
}

742 
	gbtsök_t
::
	$btsök_t
(c⁄° 
Õid_t
& 
roŸ
, 
rc_t
& 
rc
)

743 : 
	`_is_com¥es£d
(
Ál£
), 
	`_height
(0), 
	`_num_∑ges
(0), 
	`_Àaf_∑ges
(0),

744 
	`_roŸ
(
roŸ
), 
	$_t›
(0)

746 
båì_p
 
Ω
;

747 
rc
 = 
Ω
.
	`fix
(
roŸ
, 
LATCH_SH
);

748 i‡(
rc
.
	`is_îr‹
()) ;

749 
_is_com¥es£d
 = 
Ω
.
	`is_com¥es£d
();

750 
rc
 = 
	`_add_∑ge
(0, 0);

751 
_À·_mo°
[0] = 
_∑ge
[0].
	`pid
().
∑ge
;

752 
	}
}

763 
rc_t
 
	gbtsök_t
::
	$£t
(c⁄° 
Õid_t
& 
roŸ
)

765 
_is_com¥es£d
 = 
Ál£
;

766 
_height
 = 0;

767 
_num_∑ges
 = 0;

768 
_Àaf_∑ges
 = 0;

769 
_roŸ
 = 
roŸ
;

770 
_t›
 = 0;

772 
rc_t
 
rc
;

773 
båì_p
 
Ω
;

774 
rc
 = 
Ω
.
	`fix
(
roŸ
, 
LATCH_SH
);

775 i‡(!
rc
.
	`is_îr‹
()) {

776 
_is_com¥es£d
 = 
Ω
.
	`is_com¥es£d
();

777 
rc
 = 
	`_add_∑ge
(0, 0);

778 
_À·_mo°
[0] = 
_∑ge
[0].
	`pid
().
∑ge
;

780  
rc
;

781 
	}
}

793 
rc_t


794 
	gbtsök_t
::
	$m≠_to_roŸ
()

796 
l¢_t
 
™ch‹
;

797 
x˘_t
* 
xd
 = 
	`x˘
();

798 
	`w_as£π1
(
xd
);

799 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

800 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

802 
i
 = 0; i <
_t›
; i++) {

803 
	`X_DO
–
	`log_∑ge_image
(
_∑ge
[
i
]), 
™ch‹
 );

809 
båì_p
 
Ω
;

810 
	`X_DO
–
Ω
.
	`fix
(
_roŸ
, 
LATCH_EX
), 
™ch‹
 );

811 
Õid_t
 
chûd_pid
;

813 
båì_p
 
˝
 = 
_∑ge
[
_t›
];

814 
chûd_pid
 = 
˝
.
	`pid
();

816 
_height
 = 
˝
.
	`Àvñ
();

818 i‡(
chûd_pid
 =
_roŸ
) {

822 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("btbl1"));

823  
RCOK
;

829 
	`X_DO
–
Ω
.
	`£t_hdr
(
_roŸ
.
∑ge
, 
˝
.
	`Àvñ
(), cp.
	`pid0
(),

830 (
_is_com¥es£d
?
båì_p
::
t_com¥es£d
:båì_p::
t_n⁄e
)

831 ), 
™ch‹
 );

832 
	`w_as£π1
–!
˝
.
	`√xt
(Ë&& ! cp.
	`¥ev
());

833 
	`w_as£π1
–
Ω
.
	`ƒecs
() == 0);

834 
	`X_DO
–
˝
.
	`shi·
(0, 
Ω
), 
™ch‹
);

836 
_∑ge
[
_t›
] = 
Ω
;

839 i‡(
xd
) {

840 
	`SSMTEST
("btree.bulk.2");

841 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.bl.2"));

848 
	`W_DO
–
io
->
	`‰ì_∑ge
(
chûd_pid
, 
Ál£
 ) );

850  
RCOK
;

851 
	}
}

864 
rc_t


865 
	gbtsök_t
::
	$_add_∑ge
(c⁄° 
i
, 
shpid_t
 
pid0
)

867 
l¢_t
 
™ch‹
;

868 
x˘_t
* 
xd
 = 
	`x˘
();

869 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

870 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

874 
båì_p
 
lsib
 = 
_∑ge
[
i
];

879 
	`X_DO
–
båì_im∂
::
	`_Æloc_∑ge
(
_roŸ
,

880 
i
+1, (
_∑ge
[i].
	`is_fixed
(Ë? _∑ge[i].
	`pid
(Ë: 
_roŸ
),

881 
_∑ge
[
i
], 
pid0
,

882 
Ál£
, 
_is_com¥es£d
,

883 
bulk_lﬂded_°‹e_ty≥
), 
™ch‹
);

889 
_num_∑ges
++;

890 i‡(
i
 =0Ë
_Àaf_∑ges
++;

893 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

897 
shpid_t
 
À·
 = 0;

898 i‡(
lsib
.
	`is_fixed
() != 0) {

899 
À·
 = 
lsib
.
	`pid
().
∑ge
;

901 
	`DBG
(<<"AddögÖagê" << 
_∑ge
[
i
].
	`pid
()

902 << "áàÀvñ " << 
_∑ge
[
i
].
	`Àvñ
()

903 << "Öªv" << 
À·


906 
	`X_DO
–
_∑ge
[
i
].
	`lök_up
(
À·
, 0), 
™ch‹
 );

908 i‡(
lsib
.
	`is_fixed
() != 0) {

912 
	`DBG
(<<"LökögÖagê" << 
lsib
.
	`pid
()

913 << "áàÀvñ " << 
lsib
.
	`Àvñ
()

914 << "Öªv" << 
lsib
.
	`¥ev
()

915 << "Çext" << 
_∑ge
[
i
].
	`pid
().
∑ge


917 
	`X_DO
–
lsib
.
	`lök_up
÷sib.
	`¥ev
(), 
_∑ge
[
i
].
	`pid
().
∑ge
), 
™ch‹
 );

919 
x˘_log_swôch_t
 
	`toggÀ
(
ON
);

920 
	`X_DO
–
	`log_∑ge_image
(
lsib
), 
™ch‹
 );

925 i‡(
xd
) {

926 
	`SSMTEST
("btree.bulk.1");

927 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.bl.1"));

933 
_¶Ÿ
[
i
] = 0;

935  
RCOK
;

936 
	}
}

948 
rc_t


949 
	gbtsök_t
::
	$put
(c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
)

968 
	`w_as£π3
(
_∑ge
[0].
	`gë_°‹e_Êags
(Ë!
°_tmp
);

970 
rc_t
 
rc
;

972 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

978 
rc
 = 
_∑ge
[0].
	`ö£π
(
key
, 
ñ
, 
_¶Ÿ
[0]++);

980 i‡(
rc
.
	`is_îr‹
()) {

982 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

983  
	`RC_AUGMENT
(
rc
);

990 
	`W_DO
–
	`_add_∑ge
(0, 0) );

993 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

994 
	`W_COERCE
–
_∑ge
[0].
	`ö£π
(
key
, 
ñ
, 
_¶Ÿ
[0]++) );

1000 
i
;

1001 
i
 = 1; i <
_t›
; i++) {

1003 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

1004 
rc
 = 
_∑ge
[
i
].
	`ö£π
(
key
, 
ñ
, 
_¶Ÿ
[i]++,

1005 
_∑ge
[
i
-1].
	`pid
().
∑ge
);

1007 i‡(
rc
.
	`is_îr‹
()) {

1008 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

1009  
	`RC_AUGMENT
(
rc
);

1017 
	`W_DO
(
	`_add_∑ge
(
i
, 
_∑ge
[i-1].
	`pid
().
∑ge
));

1029 i‡(
i
 > 
_t›
) {

1030 ++
_t›
;

1031 
	`W_DO
–
	`_add_∑ge
(
_t›
, 
_À·_mo°
[_top-1]) );

1032 
_À·_mo°
[
_t›
] = 
_∑ge
[_t›].
	`pid
().
∑ge
;

1034 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

1035 
	`W_COERCE
–
_∑ge
[
_t›
].
	`ö£π
(
key
, 
ñ
, 
_¶Ÿ
[_top]++,

1036 
_∑ge
[
_t›
-1].
	`pid
().
∑ge
) );

1041  
RCOK
;

1042 
	}
}

	@src/sm/btree_impl.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#BTREE_C


	)

60 #i‡
W_DEBUG_LEVEL
 > 0

61 
	#BTREE_LOG_COMMENT_ON
 1

	)

81 
	~"sm_öt_2.h
"

82 #ifde‡
__GNUG__


83 #¥agm®
im∂emíèti⁄
 "btree_impl.h"

85 
	~"båì_p.h
"

86 
	~"båì_im∂.h
"

87 
	~"btcurs‹.h
"

88 
	~<¸ash.h
>

89 
	~<°‹e_œtch_m™agî.h
>

90 
	~"båì_œtch_m™agî.h
"

92 
°‹e_œtch_m™agî
 
°‹e_œtches
;

93 
båì_œtch_m™agî
 
båì_œtches
;

95 #i‡
W_DEBUG_LEVEL
 > 3

97 
	#¥öt_ßnôy
 
Ál£


	)

98 
	#¥öt_•lô
 
Ál£


	)

99 
	#¥öt_åavî£
 
Ál£


	)

100 
	#¥öt_åavî£
 
Ál£


	)

101 
	#¥öt_±øvî£
 
Ál£


	)

102 
	#¥öt_whﬁëªe
 
Ál£


	)

103 
	#¥öt_ªmove
 
Ál£


	)

104 
	#¥öt_¥›ag©e
 
Ál£


	)

107 
	#¥öt_ßnôy
 
Ál£


	)

108 
	#¥öt_whﬁëªì
 
Ál£


	)

109 
	#¥öt_åavî£
 
Ál£


	)

110 
	#¥öt_±øvî£
 
Ál£


	)

111 
	#¥öt_ªmove
 
Ál£


	)

112 
	#¥öt_¥›ag©e
 
Ál£


	)

117 #ifde‡
BTREE_CHECK_LATCHES


120 
	$_check_œtches
(
löe
, 
uöt
 
_nsh
, uöà
_√x
, uöà
_max
,

121 c⁄° * 
fûe
)

123 
uöt
 
nsh
, 
√x
, 
ndiff
;

124 
boﬁ
 
do°›
=
Ál£
;

125 
smÀvñ_0
::
bf
->
	`¢≠shŸ_me
(
nsh
, 
√x
, 
ndiff
);

128 if(
ndiff
 !
_max
)

130 if((
nsh
 >
_nsh
Ë|| (
√x
 > 
_√x
) ||

131 (
nsh
+
√x
>
_max
)) {

132 
˚º
 << 
löe
 << " " << 
fûe
 << ":Çsh havê" << 
nsh


133 << "–ex≥˘ " << 
_nsh
 << ")"

134 << "Çex havê" << 
√x


135 << "–ex≥˘ " << 
_√x
 << ")"

136 << " # dif‡∑ge†=" << 
ndiff


137 << 
ídl
;

138 
do°›
=
åue
;

141 if(
do°›
Ë
	`b°›
();

142 
	}
}

143 
	$b°›
()

146 
	}
}

147 
	$dum±ªe
(c⁄° 
Õid_t
 &
roŸ
)

150 
båì_m
::
	`¥öt
(
roŸ
, 
s‹t‹dî
::
kt_b
, 
åue
);

151 
	}
}

172 
	gbåì_im∂
::
	$mk_kvl
(
c⁄cuºícy_t
 
cc
, 
lockid_t
& 
kvl
,

173 
°id_t
 
°id
, 
boﬁ
 
unique
,

174 c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
)

176 if(
cc
 > 
t_cc_n⁄e
) {

178 if(
cc
 =
t_cc_im
) {

179 
rid_t
 
r
;

180 
ñ
.
	`c›y_to
(&
r
, (r));

181 
kvl
 = 
r
;

182 #i‡
W_DEBUG_LEVEL
 > 4

183 if(
ñ
.
	`size
(Ë!(
r
)) {

189 
	`w_as£π9
(
cc
 =
t_cc_kvl
 || c¯=
t_cc_modkvl
);

190 
kvl_t
 
k
;

191 i‡(
unique
) {

192 
k
.
	`£t
(
°id
, 
key
);

194 
	`w_as£π9
(&
ñ
 !&
cvec_t
::
√g_öf
);

195 
k
.
	`£t
(
°id
, 
key
, 
ñ
);

197 
kvl
 = 
k
;

201 
	}
}

205 
	gåì_œtch
::
	$åì_œtch
(c⁄° 
Õid_t
 
pid
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

206 : 
	`_pid
(
pid
), 
	`_mode
(
LATCH_NL
),

211 
	`_œtch
(
båì_œtches
.
	`föd_œtch
(
pid
, 
bIgn‹eL©ches
)), 
	$_fixed
(
Ál£
)

213 
	`check
();

216 
	}
}

218 
	gåì_œtch
::~
	$åì_œtch
()

220 
	`unfix
();

221 
	}
}

224 #i‡
SM_PLP_TRACING


225 
__thªad
 
timevÆ
 
	gmy_time
;

229 
	gåì_œtch
::
	$unfix
()

231 
	`check
();

236 if(
_fixed
) {

238 #i‡
SM_PLP_TRACING


239 i‡(
smÀvñ_0
::
_±ø˚_Àvñ
>=smÀvñ_0::
PLP_TRACE_PAGE
) {

240 
	`gëtimeofday
(&
my_time
, 
NULL
);

241 
	`CRITICAL_SECTION
(
∂pcs
,
smÀvñ_0
::
_±ø˚_lock
);

242 
smÀvñ_0
::
_±ø˚_out
 << 
_pid
 << " " << 
	`±hªad_£lf
(Ë<< " " << 
_œtch
.
	`mode
() << " "

243 << 
my_time
.
tv_£c
 << "." << my_time.
tv_u£c
 << 
ídl
;

244 
∂pcs
.
	`exô
();

248 
_œtch
.
	`œtch_ªÀa£
();

249 
_fixed
 = 
Ál£
;

251 
	`w_as£π2
(
_œtch
.
	`hñd_by_me
() == 0);

253 
	}
}

318 
	gw_îr‹_t
::
îr_num_t


319 
åì_œtch
::
	$gë_f‹_smo
(

320 
boﬁ
 
c⁄dôi⁄Æ
,

321 
œtch_mode_t
 
mode
,

322 
båì_p
& 
p1
,

323 
œtch_mode_t
 
p1mode
,

324 
boﬁ
 
ªœtch_p2
,

325 
båì_p
* 
p2
,

326 
œtch_mode_t
 
p2mode
,

327 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

329 
	`check
();

330 if(!
bIgn‹eL©ches
) {

331 
	`gë_œtches
(
___s
,
___e
);

335 
	`w_as£π2
(
p1
.
	`is_fixed
());

337 
Õid_t
 
p1_pid
 = 
p1
.
	`pid
();

338 
l¢_t
 
p1_l¢
 = 
p1
.
	`l¢
();

340 
Õid_t
 
p2_pid
 =Üpid_t::
nuŒ
;

341 
l¢_t
 
p2_l¢
 =Ü¢_t::
nuŒ
;

343 if(
ªœtch_p2
) {

344 
	`w_as£π2
(
p2
);

345 if(
p2
->
	`is_fixed
()) {

346 
p2_pid
 = 
p2
->
	`pid
();

347 
p2_l¢
 = 
p2
->
	`l¢
();

352 
boﬁ
 
do_ªfix
=
Ál£
;

362 if(
	`is_fixed
()) {

365 if(
	`œtch_mode
(Ë!
mode
) {

370 if(
c⁄dôi⁄Æ
) {

372 
	`w_as£π2
(
mode
 =
LATCH_EX
);

373 
boﬁ
 
would_block
 = 
Ál£
;

374 
w_rc_t
 
rc
 = 
_œtch
.
	`upgøde_if_nŸ_block
(
would_block
);

375 if(
rc
.
	`is_îr‹
()ËÑc.
	`îr_num
();

377 if(
would_block
) {

378 
c⁄dôi⁄Æ
 = 
Ál£
;

380 
	`w_as£π2
(
	`œtch_mode
(Ë=
LATCH_EX
 );

383 if(!
c⁄dôi⁄Æ
) {

387 
p1
.
	`unfix
();

388 if(
p2
Ëp2->
	`unfix
();

389 
	`unfix
();

392 
	`W_COERCE
(
_œtch
.
	`œtch_acquúe
(
mode
));

393 
_fixed
=
åue
;

394 
do_ªfix
 = 
åue
;

400 if(
c⁄dôi⁄Æ
) {

405 
w_rc_t
 
rc
 = 
_œtch
.
	`œtch_acquúe
(
mode
, 
WAIT_IMMEDIATE
);

406 
	`DBG
(<<"rc=" << 
rc
);

407 if(
rc
.
	`is_îr‹
() ) {

408 if(
rc
.
	`îr_num
(Ë=
smthªad_t
::
°TIMEOUT
) {

409 
c⁄dôi⁄Æ
 = 
Ál£
;

413 
	`w_as£π1
–!
rc
.
	`is_îr‹
() );

416 
_fixed
 = 
åue
;

420 if(!
c⁄dôi⁄Æ
) {

423 
p1
.
	`unfix
();

424 if(
p2
Ëp2->
	`unfix
();

426 
w_rc_t
 
rc
 = 
_œtch
.
	`œtch_acquúe
(
mode
);

427 if(
rc
.
	`is_îr‹
()ËÑc.
	`îr_num
();

429 
_fixed
 = 
åue
;

430 
do_ªfix
 = 
åue
;

435 
	`w_as£π2
(
	`is_fixed
());

436 
	`w_as£π2
(
	`œtch_mode
(Ë=
mode
);

438 
	`check
();

440 if(
do_ªfix
) {

442 
w_rc_t
 
rc
 = 
p1
.
	`fix
(
p1_pid
, 
p1mode
);

443 if(
rc
.
	`is_îr‹
()ËÑc.
	`îr_num
();

445 
boﬁ
 
∑ge_has_ch™ged
–
p1_l¢
 !
p1
.
	`l¢
() );

447 if(
ªœtch_p2
 && 
p2_pid
.
∑ge
) {

448 
	`w_as£π2
(
p2mode
 > 
LATCH_NL
);

450 
w_rc_t
 
rc
 = 
p2
->
	`fix
(
p2_pid
, 
p2mode
);

451 if(
rc
.
	`is_îr‹
()ËÑc.
	`îr_num
();

453 
∑ge_has_ch™ged
 |(
p2_l¢
 !
p2
->
	`l¢
());

456 if(
∑ge_has_ch™ged
)

458 if(!
bIgn‹eL©ches
) {

459 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+1);

464  
smÀvñ_0
::
eRETRY
;

468 
	`w_as£π2
(
	`is_fixed
());

469 
	`w_as£π9
(
p1
.
	`is_fixed
());

471 if(
ªœtch_p2
 && 
p2_pid
.
∑ge
) {

472 
	`w_as£π2
(
p2
->
	`is_fixed
());

474 if(
p2
) {

475 
p2
->
	`unfix
();

476 
	`w_as£π9
(!
p2
->
	`is_fixed
());

479 if(!
bIgn‹eL©ches
) {

480 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+1);

483 
	`INC_TSTAT
(
bt_posc
);

484 
	`check
();

485  
smÀvñ_0
::
eOK
;

486 
	}
}

497 
rc_t


498 
	gbåì_im∂
::
	$_•lô_åì
(

499 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

500 c⁄° 
Õid_t
& 
roŸ_√w
,

501 c⁄° 
cvec_t
& 
key
,

502 
Õid_t
& 
Àaf_ﬁd
,

503 
Õid_t
& 
Àaf_√w
,

504 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

507 
	`FUNC
(
båì_im∂
::
_•lô_åì
);

509 
	`DBGTHRD
(<<"_•lô_åì: " << " key=" << 
key
 );

511 
båì_p
 
roŸ_∑ge_√w
;

513 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

515 
cvec_t
 
dummy_ñ
;

516 
boﬁ
 
found
 = 
Ál£
;

517 
boﬁ
 
found_ñem
 = 
Ál£
;

518 
¶Ÿid_t
 
ªt_¶Ÿ
;

519 
ve˘‹
<
¶Ÿid_t
> 
ªt_¶Ÿs
;

520 
ve˘‹
<
Õid_t
> 
pids
;

521 
båì_p
 
∑ge
;

522 
shpid_t
 
¥ev_chûd
 = 
roŸ_ﬁd
.
∑ge
;

523 
Õid_t
 
pid
;

524 
pid
.
_°id
 = 
roŸ_ﬁd
._stid;

525 
boﬁ
 
is_Àaf
 = 
Ál£
;

526 
shpid_t
 
pid0
;

529 !
found
 && !
is_Àaf
) {

530 
pid
.
∑ge
 = 
¥ev_chûd
;

531 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch
) );

532 
	`W_DO
–
∑ge
.
	`£¨ch
(
key
, 
dummy_ñ
, 
found
, 
found_ñem
, 
ªt_¶Ÿ
) );

533 
ªt_¶Ÿs
.
	`push_back
(
ªt_¶Ÿ
);

534 
pids
.
	`push_back
(
pid
);

535 
båec_t
 
	`ªc
(
∑ge
, 
ªt_¶Ÿ
-1);

536 
¥ev_chûd
 = 
ªc
.
	`chûd
();

537 
is_Àaf
 = 
∑ge
.
	`is_Àaf
();

538 
∑ge
.
	`unfix
();

541 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

544 
båì_p
 
√xt_∑ge
;

545 
shpid_t
 
√xt_∑ge_id
;

546 
Õid_t
 
√xt_∑ge_pid
;

547 
√xt_∑ge_pid
.
_°id
 = 
roŸ_ﬁd
._stid;

551 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch
) );

552 
båec_t
 
	`ªc
(
∑ge
, 
ªt_¶Ÿ
);

553 
båì_p
 
√w_åì_∑ge
;

554 
pid0
 = 
ªc
.
	`chûd
();

555 if–
pid
 !
roŸ_ﬁd
 ) {

556 
	`W_DO
–
	`_Æloc_∑ge
(
roŸ_√w
, 
∑ge
.
	`Àvñ
(),ÑoŸ_√w, 
√w_åì_∑ge
,

557 
ªc
.
	`chûd
(), 
Ál£
, 
∑ge
.
	`is_com¥es£d
(),

558 
°_ªguœr
, 
bIgn‹eL©ches
) );

559 if(
ªt_¶Ÿ
 < 
∑ge
.
	`ƒecs
()) {

560 
	`W_DO
–
∑ge
.
	`shi·
(
ªt_¶Ÿ
, 
√w_åì_∑ge
) );

562 
pid0
 = 
√w_åì_∑ge
.
	`pid
().
∑ge
;

564 
√xt_∑ge_id
 = 
∑ge
.
	`√xt
();

565 
	`W_DO
–
∑ge
.
	`lök_up
’age.
	`¥ev
(), 0) );

566 
	`W_DO
–
√w_åì_∑ge
.
	`lök_up
(0, 
√xt_∑ge_id
) );

567 if(
√xt_∑ge_id
 != 0) {

568 
√xt_∑ge_pid
.
∑ge
 = 
√xt_∑ge_id
;

569 
	`W_DO
–
√xt_∑ge
.
	`fix
(
√xt_∑ge_pid
, 
œtch
) );

570 
	`W_DO
–
√xt_∑ge
.
	`lök_up
(
pid0
,Çext_∑ge.
	`√xt
()) );

571 
√xt_∑ge
.
	`unfix
();

573 if(
∑ge
.
	`is_Àaf
()) {

576 
	`W_DO
–
√w_åì_∑ge
.
	`£t_pid0
(0) );

577 
Àaf_√w
 = 
√w_åì_∑ge
.
	`pid
();

578 
Àaf_ﬁd
 = 
pid
;

581 
	`W_DO
–
√w_åì_∑ge
.
	`£t_roŸ
(
roŸ_√w
.
∑ge
) );

582 
√w_åì_∑ge
.
	`unfix
();

584 
∑ge
.
	`unfix
();

587 
uöt
 
i
 = 
ªt_¶Ÿs
.
	`size
() - 2; i > 0; i--) {

588 
ªt_¶Ÿ
 = 
ªt_¶Ÿs
[
i
];

589 
pid
 = 
pids
[
i
];

590 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch
) );

591 
båec_t
 
	`ªc
(
∑ge
, 
ªt_¶Ÿ
);

592 
båì_p
 
√w_åì_∑ge
;

593 
	`W_DO
–
	`_Æloc_∑ge
(
roŸ_√w
, 
∑ge
.
	`Àvñ
(),ÑoŸ_√w, 
√w_åì_∑ge
,

594 
pid0
, 
Ál£
, 
∑ge
.
	`is_com¥es£d
(),

595 
°_ªguœr
, 
bIgn‹eL©ches
));

596 if(
ªt_¶Ÿ
 < 
∑ge
.
	`ƒecs
()) {

597 
	`W_DO
–
∑ge
.
	`shi·
(
ªt_¶Ÿ
, 
√w_åì_∑ge
) );

599 
pid0
 = 
√w_åì_∑ge
.
	`pid
().
∑ge
;

601 
√xt_∑ge_id
 = 
∑ge
.
	`√xt
();

602 
	`W_DO
–
∑ge
.
	`lök_up
’age.
	`¥ev
(), 0) );

603 
	`W_DO
–
√w_åì_∑ge
.
	`lök_up
(0, 
√xt_∑ge_id
) );

604 if(
√xt_∑ge_id
 != 0) {

605 
√xt_∑ge_pid
.
∑ge
 = 
√xt_∑ge_id
;

606 
	`W_DO
–
√xt_∑ge
.
	`fix
(
√xt_∑ge_pid
, 
œtch
) );

607 
	`W_DO
–
√xt_∑ge
.
	`lök_up
(
pid0
,Çext_∑ge.
	`√xt
()) );

608 
√xt_∑ge
.
	`unfix
();

610 
∑ge
.
	`unfix
();

612 
	`W_DO
–
√w_åì_∑ge
.
	`£t_roŸ
(
roŸ_√w
.
∑ge
) );

613 
√w_åì_∑ge
.
	`unfix
();

617 
	`W_DO
–
roŸ_∑ge_√w
.
	`fix
(
roŸ_√w
, 
œtch
) );

618 
ªt_¶Ÿ
 = 
ªt_¶Ÿs
[0];

619 
pid
 = 
pids
[0];

620 
	`w_as£π9
–
pid
 =
roŸ_ﬁd
 );

621 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch
) );

622 
	`W_DO
–
roŸ_∑ge_√w
.
	`£t_hdr
(
roŸ_√w
.
∑ge
,

623 
∑ge
.
	`Àvñ
(),

624 
pid0
,

625 
∑ge
.
	`is_com¥es£d
()) );

626 if(
ªt_¶Ÿ
 < 
∑ge
.
	`ƒecs
()) {

627 
	`W_DO
–
∑ge
.
	`shi·
(
ªt_¶Ÿ
, 
roŸ_∑ge_√w
) );

629 if(
∑ge
.
	`is_Àaf
()) {

632 
	`W_DO
–
roŸ_∑ge_√w
.
	`£t_pid0
(0) );

633 
Àaf_√w
 = 
roŸ_√w
;

634 
Àaf_ﬁd
 = 
roŸ_ﬁd
;

636 
∑ge
.
	`unfix
();

637 
roŸ_∑ge_√w
.
	`unfix
();

639  
RCOK
;

640 
	}
}

660 
rc_t


661 
	gbåì_im∂
::
	$_ªloˇã_ªcs_l
(

662 
Õid_t
& 
Àaf_ﬁd
,

663 c⁄° 
Õid_t
& 
Àaf_√w
,

664 c⁄° 
boﬁ
 
was_roŸ
,

665 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

666 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

668 
	`FUNC
(
båì_im∂
::
_ªloˇã_ªcs_l
);

670 
	`DBGTHRD
(<<"_ªloˇã_ªcs_l: " << "Üóf_ﬁd = " << 
Àaf_ﬁd


671 <<"Üóf_√w = " << 
Àaf_√w
);

673 
ve˘‹
<
rid_t
> 
ﬁd_rids
;

674 
ve˘‹
<
rid_t
> 
√w_rids
;

676 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

677 
båì_p
 
Àaf_∑ge_ﬁd
;

678 
båì_p
 
Àaf_∑ge_√w
;

679 
	`W_DO
–
Àaf_∑ge_ﬁd
.
	`fix
(
Àaf_ﬁd
, 
œtch
) );

680 
	`W_DO
–
Àaf_∑ge_√w
.
	`fix
(
Àaf_√w
, 
œtch
) );

682 if(
was_roŸ
) {

683 
Àaf_ﬁd
.
∑ge
 = 
Àaf_∑ge_ﬁd
.
	`pid0
();

684 
Àaf_∑ge_ﬁd
.
	`unfix
();

685 
	`W_DO
–
Àaf_∑ge_ﬁd
.
	`fix
(
Àaf_ﬁd
, 
œtch
) );

696 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> > 
ªcs_m≠_√w
;

697 
m≠
<
rid_t
, 
¶Ÿid_t
> 
¶Ÿ_m≠_√w
;

698 
i
=0; i < 
Àaf_∑ge_√w
.
	`ƒecs
(); i++) {

699 
båec_t
 
	`ªc
(
Àaf_∑ge_√w
, 
i
);

700 
rid_t
 
rid
;

701 
ªc
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

702 
ªcs_m≠_√w
[
rid
.
pid
].
	`push_back
(rid);

703 
¶Ÿ_m≠_√w
[
rid
] = 
i
;

706 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> > 
ªcs_m≠_ﬁd
;

707 
m≠
<
rid_t
, 
¶Ÿid_t
> 
¶Ÿ_m≠_ﬁd
;

708 
i
=0; i < 
Àaf_∑ge_ﬁd
.
	`ƒecs
(); i++) {

709 
båec_t
 
	`ªc
(
Àaf_∑ge_ﬁd
, 
i
);

710 
rid_t
 
rid
;

711 
ªc
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

712 
ªcs_m≠_ﬁd
[
rid
.
pid
].
	`push_back
(rid);

713 
¶Ÿ_m≠_ﬁd
[
rid
] = 
i
;

717 
fûe_mrbt_p
 
hóp_∑ge
;

718 
fûe_mrbt_p
 
√w_∑ge_ﬁd
;

719 
fûe_mrbt_p
 
√w_∑ge_√w
;

720 
boﬁ
 
fú°_ﬁd
 = 
åue
;

721 
boﬁ
 
fú°_√w
 = 
åue
;

722 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> >::
ôî©‹
 
ôî
 = 
ªcs_m≠_√w
.
	`begö
(); iã∏!ªcs_m≠_√w.
	`íd
(); iter++) {

723 
	`W_DO
–
hóp_∑ge
.
	`fix
(
ôî
->
fú°
, 
œtch
) );

724 if–
ªcs_m≠_ﬁd
[
ôî
->
fú°
].
	`size
(Ë> (ôî->
£c⁄d
).size() ) {

726 
	`W_DO
–
	`_move_ªcs_l
((
ôî
->
fú°
).
_°id
,

727 
fú°_√w
,

728 
Àaf_√w
,

729 
Àaf_∑ge_√w
,

730 
√w_∑ge_√w
,

731 
hóp_∑ge
,

732 
ôî
->
£c⁄d
,

733 
¶Ÿ_m≠_√w
,

734 
ﬁd_rids
,

735 
√w_rids
,

736 
bIgn‹eL©ches
) );

737 if(
was_roŸ
) {

738 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
Àaf_ﬁd
) );

740 } if(
ªcs_m≠_ﬁd
[
ôî
->
fú°
].
	`size
() > 0) {

742 
	`W_DO
–
	`_move_ªcs_l
((
ôî
->
fú°
).
_°id
,

743 
fú°_ﬁd
,

744 
Àaf_ﬁd
,

745 
Àaf_∑ge_ﬁd
,

746 
√w_∑ge_ﬁd
,

747 
hóp_∑ge
,

748 
ªcs_m≠_ﬁd
[
ôî
->
fú°
],

749 
¶Ÿ_m≠_ﬁd
,

750 
ﬁd_rids
,

751 
√w_rids
,

752 
bIgn‹eL©ches
) );

753 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
Àaf_√w
) );

755 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
Àaf_√w
) );

757 
hóp_∑ge
.
	`unfix
();

761 if(
√w_∑ge_ﬁd
.
	`is_fixed
()) {

762 
√w_∑ge_ﬁd
.
	`unfix
();

764 if(
√w_∑ge_√w
.
	`is_fixed
()) {

765 
√w_∑ge_√w
.
	`unfix
();

767 
Àaf_∑ge_ﬁd
.
	`unfix
();

768 
Àaf_∑ge_√w
.
	`unfix
();

771 if(
ﬁd_rids
.
	`size
() > 0) {

772 
	`W_DO
–(*
ªloˇã_ˇŒback
)(
ﬁd_rids
, 
√w_rids
) );

775  
RCOK
;

776 
	}
}

787 
rc_t


788 
	gbåì_im∂
::
_move_ªcs_l
(

789 c⁄° 
°id_t
& 
fid
,

790 
boﬁ
& 
fú°
,

791 c⁄° 
Õid_t
& 
Àaf
,

792 
båì_p
& 
Àaf_∑ge
,

793 
fûe_mrbt_p
& 
√w_∑ge
,

794 
fûe_mrbt_p
& 
ﬁd_∑ge
,

795 
ve˘‹
<
rid_t
>& 
ªcs
,

796 
m≠
<
rid_t
, 
¶Ÿid_t
>& 
¶Ÿ_m≠
,

797 
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

798 
ve˘‹
<
rid_t
>& 
√w_rids
,

799 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

801 
Õid_t
 
	g√w_∑ge_id
;

802 
boﬁ
 
	g•a˚_found
 = 
åue
;

803 if(
	gfú°
) {

804 
W_DO
–
fûe_m
::
_Æloc_mrbt_∑ge
(
fid
,

805 
Õid_t
::
eof
,

806 
√w_∑ge_id
,

807 
√w_∑ge
,

808 
åue
) );

809 
W_DO
–
√w_∑ge
.
£t_ow√r
(
Àaf
) );

810 
	gfú°
 = 
Ál£
;

813 
uöt
 
	gi
=0; i < 
	gªcs
.
size
(); i++) {

814 
rid_t
 
	grid
 = 
ªcs
[
i
];

816 
ªc‹d_t
* 
	gªc
;

817 
W_DO
–
ﬁd_∑ge
.
gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

819 
vec_t
 
	ghdr_vec
;

820 
vec_t
 
	gd©a_vec
;

821 * 
	ghdr
 = (*Ë
mÆloc
((*
ªc
).
hdr_size
());

822 
mem˝y
(
hdr
, (*
ªc
).hdr(), (*ªc).
hdr_size
());

823 * 
	gd©a
 = (*Ë
mÆloc
((*
ªc
).
body_size
());

824 
mem˝y
(
d©a
, (*
ªc
).
body
(), (*ªc).
body_size
());

825 
rid_t
 
	g√w_rid
;

826 
	ghdr_vec
.
put
(
hdr
, (*
ªc
).
hdr_size
());

827 
	gd©a_vec
.
put
(
d©a
, (*
ªc
).
body_size
());

828 
W_DO
–
fûe_m
::
move_mrbt_ªc_to_giví_∑ge
(0,

829 
hdr_vec
,

830 
d©a_vec
,

831 
√w_rid
,

832 
√w_∑ge
,

833 
•a˚_found
) );

834 if(!
	g•a˚_found
) {

835 
W_DO
–
fûe_m
::
_Æloc_mrbt_∑ge
(
fid
,

836 
Õid_t
::
eof
,

837 
√w_∑ge_id
,

838 
√w_∑ge
,

839 
åue
) );

840 
W_DO
–
√w_∑ge
.
£t_ow√r
(
Àaf
) );

842 
W_DO
–
fûe_m
::
move_mrbt_ªc_to_giví_∑ge
(0,

843 
hdr_vec
,

844 
d©a_vec
,

845 
√w_rid
,

846 
√w_∑ge
,

847 
•a˚_found
) );

850 
	gﬁd_rids
.
push_back
(
rid
);

851 
	g√w_rids
.
push_back
(
√w_rid
);

853 
W_DO
–
fûe_m
::
de°roy_ªc_¶Ÿ
(
rid
, 
ﬁd_∑ge
, 
bIgn‹eL©ches
) );

855 
båec_t
 
båì_ªc
(
Àaf_∑ge
, 
¶Ÿ_m≠
[
rid
]);

856 
cvec_t
 
	gñem
;

857 
	gñem
.
put
((*)(&
√w_rid
), (
rid_t
));

858 
W_DO
–
Àaf_∑ge
.
ovîwrôe
(
¶Ÿ_m≠
[
rid
]+1, 
båì_ªc
.
kÀn
()+(
öt4_t
), 
ñem
) );

860  
	gRCOK
;

873 
rc_t


874 
	gbåì_im∂
::
	$_ªloˇã_ªcs_p
(

875 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

876 c⁄° 
Õid_t
& 
roŸ_√w
,

877 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

878 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

881 
	`FUNC
(
båì_im∂
::
_ªloˇã_ªcs_p
);

883 
	`DBGTHRD
(<<"_ªloˇã_ªcs_p: " << "ÑoŸ_ﬁd = " << 
roŸ_ﬁd


884 << "ÑoŸ_√w = " << 
roŸ_√w
);

886 
ve˘‹
<
rid_t
> 
ﬁd_rids
;

887 
ve˘‹
<
rid_t
> 
√w_rids
;

889 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

898 
Õid_t
 
	`pid_ﬁd
(
roŸ_ﬁd
.
_°id
,ÑoŸ_ﬁd.
∑ge
);

899 
båì_p
 
∑ge_ﬁd
;

900 
	`W_DO
–
∑ge_ﬁd
.
	`fix
(
pid_ﬁd
, 
œtch
) );

901 
∑ge_ﬁd
.
	`Àvñ
() > 1) {

902 
pid_ﬁd
.
∑ge
 = 
∑ge_ﬁd
.
	`pid0
();

903 
∑ge_ﬁd
.
	`unfix
();

904 
	`W_DO
–
∑ge_ﬁd
.
	`fix
(
pid_ﬁd
, 
œtch
) );

906 
Õid_t
 
	`pid_√w
(
roŸ_√w
.
_°id
,ÑoŸ_√w.
∑ge
);

907 
båì_p
 
∑ge_√w
;

908 
	`W_DO
–
∑ge_√w
.
	`fix
(
pid_√w
, 
œtch
) );

909 
∑ge_√w
.
	`Àvñ
() > 1) {

910 
pid_√w
.
∑ge
 = 
∑ge_√w
.
	`pid0
();

911 
∑ge_√w
.
	`unfix
();

912 
	`W_DO
–
∑ge_√w
.
	`fix
(
pid_√w
, 
œtch
) );

917 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> > 
ªcs_m≠_ﬁd
;

918 
m≠
<
rid_t
, 
¶Ÿid_t
> 
¶Ÿ_m≠_ﬁd
;

919 
m≠
<
rid_t
, 
Õid_t
> 
Àaf_∑ge_m≠_ﬁd
;

920 
i
 = 0;

921 
åue
) {

922 if(
i
 >
∑ge_ﬁd
.
	`ƒecs
()) {

923 
pid_ﬁd
.
∑ge
 = 
∑ge_ﬁd
.
	`√xt
();

924 
∑ge_ﬁd
.
	`unfix
();

925 if(
pid_ﬁd
.
∑ge
 != 0) {

926 
i
 = 0;

927 
	`W_DO
–
∑ge_ﬁd
.
	`fix
(
pid_ﬁd
, 
œtch
) );

932 
båec_t
 
	`ªc
(
∑ge_ﬁd
, 
i
);

933 
rid_t
 
rid
;

934 
ªc
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

935 
ªcs_m≠_ﬁd
[
rid
.
pid
].
	`push_back
(rid);

936 
¶Ÿ_m≠_ﬁd
[
rid
] = 
i
;

937 
Àaf_∑ge_m≠_ﬁd
[
rid
] = 
pid_ﬁd
;

938 
i
++;

941 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> > 
ªcs_m≠_√w
;

942 
m≠
<
rid_t
, 
¶Ÿid_t
> 
¶Ÿ_m≠_√w
;

943 
m≠
<
rid_t
, 
Õid_t
> 
Àaf_∑ge_m≠_√w
;

944 
i
 = 0;

945 
åue
) {

946 if(
i
 >
∑ge_√w
.
	`ƒecs
()) {

947 
pid_√w
.
∑ge
 = 
∑ge_√w
.
	`√xt
();

948 
∑ge_√w
.
	`unfix
();

949 if(
pid_√w
.
∑ge
 != 0) {

950 
i
 = 0;

951 
	`W_DO
–
∑ge_√w
.
	`fix
(
pid_√w
, 
œtch
) );

956 
båec_t
 
	`ªc
(
∑ge_√w
, 
i
);

957 
rid_t
 
rid
;

958 
ªc
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

959 
ªcs_m≠_√w
[
rid
.
pid
].
	`push_back
(rid);

960 
¶Ÿ_m≠_√w
[
rid
] = 
i
;

961 
Àaf_∑ge_m≠_√w
[
rid
] = 
pid_√w
;

962 
i
++;

966 
fûe_mrbt_p
 
hóp_∑ge
;

967 
fûe_mrbt_p
 
√w_∑ge_ﬁd
;

968 
fûe_mrbt_p
 
√w_∑ge_√w
;

969 
boﬁ
 
fú°_ﬁd
 = 
åue
;

970 
boﬁ
 
fú°_√w
 = 
åue
;

971 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

972 
m≠
<
Õid_t
, 
ve˘‹
<
rid_t
> >::
ôî©‹
 
ôî
 = 
ªcs_m≠_√w
.
	`begö
(); iã∏!ªcs_m≠_√w.
	`íd
(); iter++) {

973 
	`W_DO
–
hóp_∑ge
.
	`fix
(
ôî
->
fú°
, 
œtch
) );

974 if–
ªcs_m≠_ﬁd
[
ôî
->
fú°
].
	`size
(Ë> (ôî->
£c⁄d
).size() ) {

976 
	`W_DO
–
	`_move_ªcs_p
((
ôî
->
fú°
).
_°id
,

977 
fú°_√w
,

978 
roŸ_√w
,

979 
√w_∑ge_√w
,

980 
hóp_∑ge
,

981 
ôî
->
£c⁄d
,

982 
¶Ÿ_m≠_√w
,

983 
Àaf_∑ge_m≠_√w
,

984 
ﬁd_rids
,

985 
√w_rids
,

986 
bIgn‹eL©ches
) );

987 } if(
ªcs_m≠_ﬁd
[
ôî
->
fú°
].
	`size
() > 0) {

989 
	`W_DO
–
	`_move_ªcs_p
((
ôî
->
fú°
).
_°id
,

990 
fú°_ﬁd
,

991 
roŸ_ﬁd
,

992 
√w_∑ge_ﬁd
,

993 
hóp_∑ge
,

994 
ªcs_m≠_ﬁd
[
ôî
->
fú°
],

995 
¶Ÿ_m≠_ﬁd
,

996 
Àaf_∑ge_m≠_ﬁd
,

997 
ﬁd_rids
,

998 
√w_rids
,

999 
bIgn‹eL©ches
) );

1000 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
roŸ_√w
) );

1002 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
roŸ_√w
) );

1004 
hóp_∑ge
.
	`unfix
();

1008 if(
√w_∑ge_ﬁd
.
	`is_fixed
()) {

1009 
√w_∑ge_ﬁd
.
	`unfix
();

1011 if(
√w_∑ge_√w
.
	`is_fixed
()) {

1012 
√w_∑ge_√w
.
	`unfix
();

1016 if(
ﬁd_rids
.
	`size
() > 0) {

1017 
	`W_DO
–(*
ªloˇã_ˇŒback
)(
ﬁd_rids
, 
√w_rids
) );

1020  
RCOK
;

1021 
	}
}

1032 
rc_t


1033 
	gbåì_im∂
::
_move_ªcs_p
(

1034 c⁄° 
°id_t
& 
fid
,

1035 
boﬁ
& 
fú°
,

1036 c⁄° 
Õid_t
& 
roŸ
,

1037 
fûe_mrbt_p
& 
√w_∑ge
,

1038 
fûe_mrbt_p
& 
ﬁd_∑ge
,

1039 
ve˘‹
<
rid_t
>& 
ªcs
,

1040 
m≠
<
rid_t
, 
¶Ÿid_t
>& 
¶Ÿ_m≠
,

1041 
m≠
<
rid_t
, 
Õid_t
>& 
Àaf_m≠
,

1042 
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

1043 
ve˘‹
<
rid_t
>& 
√w_rids
,

1044 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1046 
Õid_t
 
	g√w_∑ge_id
;

1047 
boﬁ
 
	g•a˚_found
 = 
åue
;

1048 
båì_p
 
	gÀaf_∑ge
;

1049 
œtch_mode_t
 
	gœtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1050 if(
	gfú°
) {

1051 
W_DO
–
fûe_m
::
_Æloc_mrbt_∑ge
(
fid
,

1052 
Õid_t
::
eof
,

1053 
√w_∑ge_id
,

1054 
√w_∑ge
,

1055 
åue
) );

1056 
W_DO
–
√w_∑ge
.
£t_ow√r
(
roŸ
) );

1057 
	gfú°
 = 
Ál£
;

1060 
uöt
 
	gi
=0; i < 
	gªcs
.
size
(); i++) {

1061 
rid_t
 
	grid
 = 
ªcs
[
i
];

1063 
ªc‹d_t
* 
	gªc
;

1064 
W_DO
–
ﬁd_∑ge
.
gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

1066 
vec_t
 
	ghdr_vec
;

1067 
vec_t
 
	gd©a_vec
;

1068 * 
	ghdr
 = (*Ë
mÆloc
((*
ªc
).
hdr_size
());

1069 
mem˝y
(
hdr
, (*
ªc
).hdr(), (*ªc).
hdr_size
());

1070 * 
	gd©a
 = (*Ë
mÆloc
((*
ªc
).
body_size
());

1071 
mem˝y
(
d©a
, (*
ªc
).
body
(), (*ªc).
body_size
());

1072 
rid_t
 
	g√w_rid
;

1073 
	ghdr_vec
.
put
(
hdr
, (*
ªc
).
hdr_size
());

1074 
	gd©a_vec
.
put
(
d©a
, (*
ªc
).
body_size
());

1075 
W_DO
–
fûe_m
::
move_mrbt_ªc_to_giví_∑ge
(0,

1076 
hdr_vec
,

1077 
d©a_vec
,

1078 
√w_rid
,

1079 
√w_∑ge
,

1080 
•a˚_found
) );

1081 if(!
	g•a˚_found
) {

1082 
W_DO
–
fûe_m
::
_Æloc_mrbt_∑ge
(
fid
,

1083 
Õid_t
::
eof
,

1084 
√w_∑ge_id
,

1085 
√w_∑ge
,

1086 
åue
) );

1087 
W_DO
–
√w_∑ge
.
£t_ow√r
(
roŸ
) );

1089 
W_DO
–
fûe_m
::
move_mrbt_ªc_to_giví_∑ge
(0,

1090 
hdr_vec
,

1091 
d©a_vec
,

1092 
√w_rid
,

1093 
√w_∑ge
,

1094 
•a˚_found
) );

1097 
	gﬁd_rids
.
push_back
(
rid
);

1098 
	g√w_rids
.
push_back
(
√w_rid
);

1100 
W_DO
–
fûe_m
::
de°roy_ªc_¶Ÿ
(
rid
, 
ﬁd_∑ge
, 
bIgn‹eL©ches
) );

1102 
W_DO
–
Àaf_∑ge
.
fix
(
Àaf_m≠
[
rid
], 
œtch
) );

1103 
båec_t
 
båì_ªc
(
Àaf_∑ge
, 
¶Ÿ_m≠
[
rid
]);

1104 
cvec_t
 
	gñem
;

1105 
	gñem
.
put
((*)(&
√w_rid
), (
rid_t
));

1106 
W_DO
–
Àaf_∑ge
.
ovîwrôe
(
¶Ÿ_m≠
[
rid
]+1, 
båì_ªc
.
kÀn
()+(
öt4_t
), 
ñem
) );

1107 
	gÀaf_∑ge
.
unfix
();

1109  
	gRCOK
;

1121 
rc_t


1122 
	gbåì_im∂
::
	$_•lô_Àaf_™d_ªloˇã_ªcs
(

1123 
Õid_t
 c⁄° & 
roŸ_pid
,

1124 
båì_p
& 
Àaf
,

1125 c⁄° 
cvec_t
& 
key
,

1126 c⁄° 
cvec_t
& 
ñ
,

1127 
•lô_Á˘‹
,

1128 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

1129 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

1131 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

1132 
	`w_as£π9
(
Àaf
.
	`œtch_mode
(Ë=
LATCH_EX
 ||Üóf.œtch_mode(Ë=
LATCH_NLX
);

1134 
l¢_t
 
™ch‹
;

1135 
x˘_t
* 
xd
 = 
	`x˘
();

1137 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

1138 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

1140 #i‡
BTREE_LOG_COMMENT_ON


1141 
	`W_DO
(
	`log_commít
("startÜeaf split"));

1144 
addôi⁄
 = 
key
.
	`size
(Ë+ 
ñ
.size() + 2;

1145 
Õid_t
 
rsib_pid
;

1146 
Õid_t
 
Àaf_pid
 = 
Àaf
.
	`pid
();;

1147 
Àvñ
 = 
Àaf
.
	`Àvñ
();

1149 
boﬁ
 
À·_hóvy
;

1150 
¶Ÿid_t
 
¶Ÿ
=1;

1152 
	`w_as£π9
(
Àaf
.
	`ƒecs
()>0);

1154 
	`X_DO
–
	`__•lô_∑ge
(
Àaf
, 
rsib_pid
, 
À·_hóvy
,

1155 
¶Ÿ
, 
addôi⁄
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
), 
™ch‹
 );

1156 
Àaf
.
	`unfix
();

1159 
	`X_DO
(
	`_¥›ag©e
(
roŸ_pid
, 
key
, 
ñ
, 
Àaf_pid
, 
Àvñ
, 
Ál£
 , 
bIgn‹eL©ches
), 
™ch‹
);

1162 #i‡
BTREE_LOG_COMMENT_ON


1163 
	`W_DO
(
	`log_commít
("endÜeaf split"));

1165 i‡(
xd
) {

1166 
	`SSMTEST
("btree.propagate.s.1");

1167 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.prop.1"));

1170 if(
ªloˇã_ˇŒback
 !
NULL
) {

1171 
	`W_DO
–
	`_ªloˇã_ªcs_l
(
Àaf_pid
, 
rsib_pid
, 
roŸ_pid
 =Àaf_pid, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
) );

1174  
RCOK
;

1175 
	}
}

1188 
rc_t
 
	gbåì_im∂
::
	$_lök_a·î_mîge
(c⁄° 
Õid_t
& 
roŸ
,

1189 
shpid_t
 
p1
, shpid_à
p2
,

1190 
boﬁ
 
£t_roŸ1
,

1191 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1193 
	`FUNC
(
båì_im∂
::
_lök_a·î_mîge
);

1195 
	`DBGTHRD
(<<"_lök_a·î_mîge: " << "ÑoŸ = " << 
roŸ


1196 <<"Ö1: " << 
p1
 << "Ö2: " << 
p2
);

1198 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1200 
°id_t
 
°id
 = 
roŸ
.
_°id
;

1201 
Õid_t
 
	`cuºít_p1
(
°id
, 
p1
);

1202 
Õid_t
 
	`cuºít_p2
(
°id
, 
p2
);

1203 
båì_p
 
∑ge1
;

1204 
båì_p
 
∑ge2
;

1206 
	`W_DO
–
∑ge1
.
	`fix
(
cuºít_p1
, 
œtch
) );

1207 
	`W_DO
–
∑ge2
.
	`fix
(
cuºít_p2
, 
œtch
) );

1209 
	`w_as£π0
–
∑ge1
.
	`Àvñ
(Ë=
∑ge2
.level() );

1212 
	`W_DO
–
∑ge1
.
	`lök_up
’age1.
	`¥ev
(), 
p2
) );

1213 
	`W_DO
–
∑ge2
.
	`lök_up
(
p1
,Öage2.
	`√xt
()) );

1216 if(
£t_roŸ1
) {

1217 
	`W_DO
–
∑ge1
.
	`£t_roŸ
(
roŸ
.
∑ge
) );

1219 
	`W_DO
–
∑ge2
.
	`£t_roŸ
(
roŸ
.
∑ge
) );

1223 if(!
∑ge1
.
	`is_Àaf
()) {

1224 
shpid_t
 
√w_p1
 = 
∑ge1
.
	`chûd
’age1.
	`ƒecs
()-1);

1225 
shpid_t
 
√w_p2
 = 
∑ge2
.
	`pid0
();

1227 
∑ge1
.
	`unfix
();

1228 
∑ge2
.
	`unfix
();

1230 
	`W_DO
–
	`_lök_a·î_mîge
(
roŸ
, 
√w_p1
, 
√w_p2
, 
£t_roŸ1
, 
bIgn‹eL©ches
) );

1232 
∑ge1
.
	`unfix
();

1233 
∑ge2
.
	`unfix
();

1236  
RCOK
;

1237 
	}
}

1249 
rc_t
 
	gbåì_im∂
::
	$_upd©e_ow√r
(c⁄° 
Õid_t
& 
√w_ow√r
,

1250 c⁄° 
Õid_t
& 
ﬁd_ow√r
,

1251 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1253 
	`FUNC
(
båì_im∂
::
_upd©e_ow√r
);

1255 
	`DBGTHRD
(<<"_upd©e_ow√r: " << "Çew_ow√∏" << 
√w_ow√r
 <<" old_ow√r: " << 
ﬁd_ow√r
);

1257 
œtch_mode_t
 
Àaf_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1258 
œtch_mode_t
 
hóp_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1261 
Õid_t
 
	`pid
(
ﬁd_ow√r
.
_°id
, old_ow√r.
∑ge
);

1262 
båì_p
 
∑ge
;

1263 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
Àaf_œtch
) );

1264 
∑ge
.
	`Àvñ
() > 1) {

1265 
pid
.
∑ge
 =Öage.
	`pid0
();

1266 
∑ge
.
	`unfix
();

1267 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
Àaf_œtch
) );

1271 
i
 = 0;

1272 
fûe_mrbt_p
 
hóp_∑ge
;

1273 
£t
<
Õid_t
> 
∑ges
;

1274 
åue
) {

1275 if(
i
 >
∑ge
.
	`ƒecs
()) {

1276 
pid
.
∑ge
 =Öage.
	`√xt
();

1277 
∑ge
.
	`unfix
();

1278 if(
pid
.
∑ge
 != 0) {

1279 
i
 = 0;

1280 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
Àaf_œtch
) );

1285 
båec_t
 
	`ªc
(
∑ge
, 
i
);

1286 
rid_t
 
rid
;

1287 
ªc
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

1288 if(
∑ges
.
	`föd
(
rid
.
pid
Ë=∑ges.
	`íd
()) {

1289 
	`W_DO
–
hóp_∑ge
.
	`fix
(
rid
.
pid
, 
hóp_œtch
) );

1290 
	`W_DO
–
hóp_∑ge
.
	`£t_ow√r
(
√w_ow√r
) );

1291 
hóp_∑ge
.
	`unfix
();

1292 
∑ges
.
	`ö£π
(
rid
.
pid
);

1294 
i
++;

1297  
RCOK
;

1298 
	}
}

1308 
rc_t


1309 
	gbåì_im∂
::
	$_mîge_åìs
(

1310 
Õid_t
& 
roŸ
,

1311 c⁄° 
Õid_t
& 
roŸ1
,

1312 c⁄° 
Õid_t
& 
roŸ2
,

1313 
cvec_t
& 
°¨t_key2
,

1314 c⁄° 
boﬁ
 
upd©e_ow√r
,

1315 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1317 
	`FUNC
(
båì_im∂
::
_mîge_åìs
);

1319 
	`DBGTHRD
(<<"_mîge_åìs:ÑoŸ1 = " << 
roŸ1
 << "ÑoŸ2 = " << 
roŸ2
);

1321 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1323 
båì_p
 
roŸ_∑ge_1
;

1324 
båì_p
 
roŸ_∑ge_2
;

1325 
	`W_DO
–
roŸ_∑ge_1
.
	`fix
(
roŸ1
, 
œtch
) );

1326 
	`W_DO
–
roŸ_∑ge_2
.
	`fix
(
roŸ2
, 
œtch
) );

1327 
Àvñ_1
 = 
roŸ_∑ge_1
.
	`Àvñ
();

1328 
Àvñ_2
 = 
roŸ_∑ge_2
.
	`Àvñ
();

1329 
roŸ_∑ge_1
.
	`unfix
();

1330 
roŸ_∑ge_2
.
	`unfix
();

1332 
cvec_t
 
ñem_to_ö£π
;

1333 i‡–
Àvñ_1
 < 
Àvñ_2
 ) {

1335 if(
upd©e_ow√r
) {

1336 
	`W_DO
–
	`_upd©e_ow√r
(
roŸ2
, 
roŸ1
, 
bIgn‹eL©ches
) );

1338 
roŸ
 = 
roŸ2
;

1339 
cvec_t
 
ñem_to_ö£π
;

1341 
båec_t
 
ªc
;

1342 
Õid_t
 
	`pid
(
roŸ2
.
_°id
,ÑoŸ2.
∑ge
);

1343 
båì_p
 
∑ge_to_ö£π
;

1344 
	`W_DO
–
∑ge_to_ö£π
.
	`fix
(
pid
, 
œtch
) );

1345 
∑ge_to_ö£π
.
	`Àvñ
(Ë> 
Àvñ_1
+1) {

1346 
∑ge_to_ö£π
.
	`unfix
();

1347 
ªc
.
	`£t
(
∑ge_to_ö£π
, 0);

1348 
pid
.
∑ge
 = 
ªc
.
	`chûd
();

1349 
	`W_DO
–
∑ge_to_ö£π
.
	`fix
(
pid
, 
œtch
) );

1351 
	`W_DO
–
∑ge_to_ö£π
.
	`ö£π
–
°¨t_key2
, 
ñem_to_ö£π
, 0,Öage_to_ö£π.
	`pid0
()) );

1352 
	`W_DO
–
∑ge_to_ö£π
.
	`£t_pid0
–
roŸ1
.
∑ge
 ) );

1353 
	`W_DO
–
	`_lök_a·î_mîge
(
roŸ
, 
roŸ1
.
∑ge
, 
∑ge_to_ö£π
.
	`chûd
(0), 
åue
, 
bIgn‹eL©ches
) );

1354 
∑ge_to_ö£π
.
	`unfix
();

1356 
båì_œtches
.
	`de°roy_œtches
(
roŸ1
);

1358 i‡–
Àvñ_2
 < 
Àvñ_1
 ) {

1360 if(
upd©e_ow√r
) {

1361 
	`W_DO
–
	`_upd©e_ow√r
(
roŸ1
, 
roŸ2
, 
bIgn‹eL©ches
) );

1363 
roŸ
 = 
roŸ1
;

1365 
båec_t
 
ªc
;

1366 
Õid_t
 
	`pid
(
roŸ1
.
_°id
,ÑoŸ1.
∑ge
);

1367 
båì_p
 
∑ge_to_ö£π
;

1368 
	`W_DO
–
∑ge_to_ö£π
.
	`fix
(
pid
, 
œtch
) );

1369 
∑ge_to_ö£π
.
	`Àvñ
(Ë> 
Àvñ_2
+1) {

1370 
∑ge_to_ö£π
.
	`unfix
();

1371 
ªc
.
	`£t
(
∑ge_to_ö£π
,Öage_to_ö£π.
	`ƒecs
() - 1);

1372 
pid
.
∑ge
 = 
ªc
.
	`chûd
();

1373 
	`W_DO
–
∑ge_to_ö£π
.
	`fix
(
pid
, 
œtch
) );

1375 
	`W_DO
–
∑ge_to_ö£π
.
	`ö£π
–
°¨t_key2
, 
ñem_to_ö£π
,Öage_to_ö£π.
	`ƒecs
(), 
roŸ2
.
∑ge
) );

1376 
	`W_DO
–
	`_lök_a·î_mîge
(
roŸ
, 
∑ge_to_ö£π
.
	`chûd
’age_to_ö£π.
	`ƒecs
()-2),

1377 
roŸ2
.
∑ge
, 
Ál£
, 
bIgn‹eL©ches
) );

1378 
∑ge_to_ö£π
.
	`unfix
();

1380 
båì_œtches
.
	`de°roy_œtches
(
roŸ2
);

1385 if(
upd©e_ow√r
) {

1386 
	`W_DO
–
	`_upd©e_ow√r
(
roŸ1
, 
roŸ2
, 
bIgn‹eL©ches
) );

1388 
båì_p
 
roŸ_∑ge_1
;

1389 
båì_p
 
roŸ_∑ge_2
;

1390 
	`W_DO
–
roŸ_∑ge_1
.
	`fix
(
roŸ1
, 
œtch
) );

1391 
	`W_DO
–
roŸ_∑ge_2
.
	`fix
(
roŸ2
, 
œtch
) );

1392 
ƒecs
 = 
roŸ_∑ge_1
.
	`ƒecs
();

1393 
	`W_DO
–
roŸ_∑ge_1
.
	`ö£π
–
°¨t_key2
, 
ñem_to_ö£π
,

1394 
roŸ_∑ge_1
.
	`ƒecs
(), 
roŸ_∑ge_2
.
	`pid0
()) );

1395 
	`W_DO
–
roŸ_∑ge_2
.
	`shi·
(0, 
roŸ_∑ge_1
.
	`ƒecs
(),Ñoot_page_1) );

1396 
roŸ
 = 
roŸ1
;

1397 
	`W_DO
–
	`_lök_a·î_mîge
(
roŸ
, 
roŸ_∑ge_1
.
	`chûd
(
ƒecs
-1),Ñoot_page_1.child(nrecs),

1398 
Ál£
, 
bIgn‹eL©ches
) );

1399 
roŸ_∑ge_1
.
	`unfix
();

1400 
roŸ_∑ge_2
.
	`unfix
();

1403 
	`W_DO
–
io
->
	`‰ì_∑ge
(
roŸ2
, 
Ál£
 ) );

1405 
båì_œtches
.
	`de°roy_œtches
(
roŸ2
);

1407 
	`INC_TSTAT
(
∑ge_båì_dóŒoc
);

1410  
RCOK
;

1411 
	}
}

1429 
rc_t


1430 
	gbåì_im∂
::
	$_mr_ö£π
(

1431 c⁄° 
Õid_t
& 
roŸ
,

1432 
boﬁ
 
unique
,

1433 
c⁄cuºícy_t
 
cc
,

1434 c⁄° 
cvec_t
& 
key
,

1436 
ñ_fûÀr
* 
ef
,

1437 
size_t
 
ñ_size
,

1438 
•lô_Á˘‹
,

1439 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

1440 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

1442 
	`FUNC
(
båì_im∂
::
_mr_ö£π
);

1443 
Õid_t
 
£¨ch_°¨t_pid
 = 
roŸ
;

1444 
l¢_t
 
£¨ch_°¨t_l¢
 =Ü¢_t::
nuŒ
;

1445 
°id_t
 
°id
 = 
roŸ
.
	`°id
();

1447 * 
tmp_ñ
 = 
	`mÆloc
(
ñ_size
);

1448 
vec_t
 
	`ñ
(
tmp_ñ
, 
ñ_size
);

1449 
vec_t
 
ñ2
;

1451 
	`INC_TSTAT
(
bt_ö£π_˙t
);

1453 
	`DBGTHRD
(<<"_ö£π: uniquê" << 
unique
 << " cc=" << (
cc
)

1454 << " key=" << 
key
 );

1456 if(!
bIgn‹eL©ches
) {

1457 
	`gë_œtches
(
___s
,
___e
);

1461 
åì_œtch
 
	`åì_roŸ
(
roŸ
, 
bIgn‹eL©ches
);

1464 
œtch_mode_t
 
åavî£_œtch
;

1465 
œtch_mode_t
 
smo_mode
;

1466 
œtch_mode_t
 
smo_p1mode
;

1467 
œtch_mode_t
 
fix_œtch
;

1468 
agaö
:

1470 
båì_p
 
Àaf
;

1471 
Õid_t
 
Àaf_pid
;

1472 
l¢_t
 
Àaf_l¢
;

1473 
båì_p
 
∑ª¡
;

1474 
l¢_t
 
∑ª¡_l¢
;

1475 
Õid_t
 
∑ª¡_pid
;

1476 
boﬁ
 
found
 = 
Ál£
;

1477 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

1478 
rc_t
 
rc
;

1481 
	`DBGTHRD
(<<"_insert.again:");

1483 
	`w_as£π9
–!
Àaf
.
	`is_fixed
());

1484 
	`w_as£π9
–!
∑ª¡
.
	`is_fixed
());

1486 if(!
bIgn‹eL©ches
) {

1487 if(
åì_roŸ
.
	`is_fixed
()) {

1488 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+1);

1490 
	`check_œtches
(
___s
,
___e
, ___s+___e);

1499 
åavî£_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1501 
	`W_DO
–
	`_åavî£
(
roŸ
, 
£¨ch_°¨t_pid
,

1502 
£¨ch_°¨t_l¢
,

1503 
key
, 
ñ
, 
found
,

1504 
åavî£_œtch
, 
Àaf
, 
∑ª¡
,

1505 
Àaf_l¢
, 
∑ª¡_l¢
, 
bIgn‹eL©ches
) );

1507 if(!
bIgn‹eL©ches
) {

1508 if(
Àaf
.
	`pid
(Ë=
roŸ
) {

1509 
	`check_œtches
(
___s
,
___e
+2, ___s+___e+2);

1511 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+2);

1515 
	`w_as£π9
–
Àaf
.
	`is_fixed
());

1516 
	`w_as£π9
–
Àaf
.
	`is_Àaf
());

1518 
	`w_as£π9
–
∑ª¡
.
	`is_fixed
());

1519 
	`w_as£π9
–
∑ª¡
.
	`is_node
(Ë|| (∑ª¡.
	`is_Àaf
() &&

1520 
Àaf
.
	`pid
(Ë=
roŸ
 ));

1521 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

1529 
Àaf_pid
 = 
Àaf
.
	`pid
();

1530 
∑ª¡_pid
 = 
∑ª¡
.
	`pid
();

1532 if(
Àaf
.
	`is_smo
(Ë||Üóf.
	`is_dñëe
()) {

1539 
	`w_as£π2
(
∑ª¡
.
	`is_fixed
());

1540 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

1541 
	`w_as£π2
(
∑ª¡
.
	`œtch_mode
()>=
LATCH_SH
);

1542 
	`w_as£π2
(
Àaf
.
	`œtch_mode
()==
LATCH_EX
 ||Üóf.œtch_mode()==
LATCH_NLX
);

1545 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1546 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1547 
w_îr‹_t
::
îr_num_t
 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
,

1548 
Àaf
, 
smo_p1mode
, 
Ál£
, &
∑ª¡
,

1549 
LATCH_NL
, 
bIgn‹eL©ches
);

1551 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

1552 
	`w_as£π9
(
åì_roŸ
.
	`is_fixed
());

1553 
	`w_as£π9
(
Àaf
.
	`œtch_mode
()==
LATCH_EX
 ||Üóf.œtch_mode()==
LATCH_NLX
);

1554 
	`w_as£π9
(
åì_roŸ
.
	`œtch_mode
()>
LATCH_SH
);

1555 
	`w_as£π9
(! 
∑ª¡
.
	`is_fixed
());

1557 if(
r˚
) {

1558 if(
r˚
 =
eRETRY
) {

1559 
Àaf
.
	`unfix
();

1560 
∑ª¡
.
	`unfix
();

1569 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

1570 << (
åì_roŸ
.
	`œtch_mode
())

1572 
agaö
;

1574  
	`RC
(
r˚
);

1576 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

1585 
åì_roŸ
.
	`unfix
();

1586 
∑ª¡
.
	`unfix
();

1591 if(
Àaf
.
	`is_smo
()) {

1592 #i‡
BTREE_LOG_COMMENT_ON


1593 
	`W_DO
(
	`log_commít
("clr_smo/I"));

1595 
	`W_DO
–
Àaf
.
	`˛r_smo
(
åue
) );

1597 
	`SSMTEST
("btree.insert.2");

1598 if(
Àaf
.
	`is_dñëe
()) {

1599 #i‡
BTREE_LOG_COMMENT_ON


1600 
	`W_DO
(
	`log_commít
("clr_delete"));

1602 
	`W_DO
–
Àaf
.
	`˛r_dñëe
() );

1606 
∑ª¡
.
	`unfix
();

1616 
åì_roŸ
.
	`unfix
();

1618 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

1619 
	`w_as£π2
(! 
Àaf
.
	`is_smo
());

1621 
	`w_as£π2
(!
∑ª¡
.
	`is_fixed
());

1622 
	`w_as£π2
(!
åì_roŸ
.
	`is_fixed
() );

1624 
	`w_as£π2
(
Àaf
.
	`ƒecs
(Ë||Üóf.
	`pid
(Ë=
roŸ
 || 
smÀvñ_0
::
	`ö_ªcovîy
());

1640 
¶Ÿid_t
 
¶Ÿ
 = 0;

1642 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
() );

1645 
	`DBG
(<<"D⁄'àö£π i¿Àa‡© slŸ " << 
¶Ÿ


1647 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñ
, 
¶Ÿ
, 0, 
Ál£
);

1648 if(
rc
.
	`is_îr‹
()) {

1649 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
()

1650 << "Ñc" << 
rc


1652 i‡(
rc
.
	`îr_num
(Ë=
eRECWONTFIT
) {

1659 
boﬁ
 
•lô_wôh_smo
 = 
åue
;

1684 
	`w_as£π0
(!
∑ª¡
.
	`is_fixed
());

1685 
Õid_t
 
cousö_pid
 = 
Àaf
.
	`pid
();

1686 
cousö_pid
.
∑ge
 = 
Àaf
.
	`√xt
();

1687 
båì_p
 
cousö
;

1689 if(
cousö_pid
.
∑ge
) {

1690 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1691 
rc
 = 
cousö
.
	`c⁄dôi⁄Æ_fix
(
cousö_pid
, 
fix_œtch
);

1692 
	`W_IFDEBUG1
(

1693 if(!
rc
.
	`is_îr‹
())

1694 
	`w_as£π1
(
cousö
.
	`¥ev
(Ë=
Àaf
.
	`pid
().
∑ge
);)

1696 
rc
 = 
RCOK
;

1699 if(!
rc
.
	`is_îr‹
()) {

1700 
ªquúed_•a˚
 =

1701 2 *(
key
.
	`size
(Ë+ 
ñ_size
 +

1702 
båì_p
::
ovîhód_ªquúemít_≥r_íåy
);

1704 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1705 
rc
 = 
∑ª¡
.
	`c⁄dôi⁄Æ_fix
(
∑ª¡_pid
, 
fix_œtch
);

1706 if(!
rc
.
	`is_îr‹
()) {

1721 if(
∑ª¡
.
	`l¢
(Ë=
∑ª¡_l¢
 &&

1722 
∑ª¡
.
	`ußbÀ_•a˚
(Ë>
ªquúed_•a˚
) {

1728 
l¢_t
 
™ch‹
;

1729 
x˘_t
* 
xd
 = 
	`x˘
();

1730 
Õid_t
 
rsib_pid
;

1731 
boﬁ
 
À·_hóvy
;

1732 
¶Ÿid_t
 
¶Ÿ
 = 1;

1733 
addôi⁄
 = 
key
.
	`size
(Ë+ 
ñ_size
 + 2;

1734 
check_com≥nßãd_›_√°ög
 
	`cc⁄d
(
xd
, 
__LINE__
, 
__FILE__
);

1735 if(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

1736 
	`DBG
(<<" s∂ôtögÖagê" << 
Àaf
.
	`pid
()

1737 << "Ö¨ít.ußbñ_•a˚()" << 
∑ª¡
.
	`ußbÀ_•a˚
()

1738 << "Ñequúed_•a˚ = " << 
ªquúed_•a˚


1739 << "áddôi⁄ = " << 
addôi⁄


1741 
rc
 = 
	`__•lô_∑ge
(
Àaf
, 
rsib_pid
, 
À·_hóvy
, 
¶Ÿ
, 
addôi⁄
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
);

1744 if(
rc
.
	`is_îr‹
()) {

1745 if(
xd
) {

1746 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

1747 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("btimpl1"));

1752 
¶Ÿid_t
 
chûd_¶Ÿ
 = 0;

1753 
boﬁ
 
found_key
 = 
Ál£
;

1754 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

1755 
rc
 = 
∑ª¡
.
	`£¨ch
(
key
, 
ñ
, 
found_key
, 
tŸÆ_m©ch
, 
chûd_¶Ÿ
);

1756 if(!
tŸÆ_m©ch
Ë
chûd_¶Ÿ
--;

1757 if(
rc
.
	`is_îr‹
()) {

1758 if(
xd
) {

1759 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

1760 
xd
->
	`ªÀa£_™ch‹
(
åue


1761 
	`LOG_COMMENT_USE
("btimpl2"));

1766 
boﬁ
 
was_•lô
 = 
Ál£
;

1767 
rc
 = 
	`_¥›ag©e_•lô
(
∑ª¡
, 
Àaf
.
	`pid
(), 
chûd_¶Ÿ
,

1768 
was_•lô
, 
bIgn‹eL©ches
);

1769 if(
rc
.
	`is_îr‹
()) {

1770 if(
xd
) {

1771 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

1772 
xd
->
	`ªÀa£_™ch‹
(
åue


1773 
	`LOG_COMMENT_USE
("btimpl3"));

1777 
	`w_as£π1
(!
was_•lô
);

1778 
•lô_wôh_smo
 = 
Ál£
;

1779 if(
xd
Ëxd->
	`com≥nßã
(
™ch‹
,
Ál£


1780 
	`LOG_COMMENT_USE
("btree1"));

1782 
åì_roŸ
.
	`unfix
();

1783 
agaö
;

1788 
∑ª¡
.
	`unfix
();

1791 
	`w_as£π1
(
Àaf
.
	`is_fixed
());

1792 
	`w_as£π1
(! 
∑ª¡
.
	`is_fixed
());

1796 if(
•lô_wôh_smo
)

1805 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1806 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1807 
w_îr‹_t
::
îr_num_t
 
r˚
 =

1808 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

1809 
Ál£
, 0, 
LATCH_NL
,

1810 
bIgn‹eL©ches
);

1812 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

1813 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

1814 
	`w_as£π9
(! 
∑ª¡
.
	`is_fixed
());

1816 if(
r˚
) {

1817 if(
r˚
=
eRETRY
) {

1824 
åì_roŸ
.
	`unfix
();

1825 
Àaf
.
	`unfix
();

1826 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

1827 << (
åì_roŸ
.
	`œtch_mode
())

1829 
agaö
;

1831  
	`RC
(
r˚
);

1833 
	`w_as£π2
(!
∑ª¡
.
	`is_fixed
());

1834 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

1835 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

1836 
	`W_DO
–
	`_•lô_Àaf_™d_ªloˇã_ªcs
(
åì_roŸ
.
	`pid
(), 
Àaf
, 
key
,

1837 
ñ
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
,

1838 
ªloˇã_ˇŒback
) );

1839 
	`SSMTEST
("btree.insert.3");

1841 
åì_roŸ
.
	`unfix
();

1842 
	`DBG
(<<"split -->again");

1843 
agaö
;

1846  
	`RC_AUGMENT
(
rc
);

1849 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
() );

1852 
¶Ÿid_t
 
¶Ÿ
 = -1;

1861 
båì_p
 
p2
;

1862 
Õid_t
 
p2_pid
 =Üpid_t::
nuŒ
;

1863 
l¢_t
 
p2_l¢
;

1864 
uöt
 
wh©ˇ£
;

1865 
boﬁ
 
eof
=
Ál£
;

1866 
¶Ÿid_t
 
√xt_¶Ÿ
 = 0;

1868 
	`W_DO
–
	`_ßtisfy
(
Àaf
, 
key
, 
ñ
, 
found
,

1869 
tŸÆ_m©ch
, 
¶Ÿ
, 
wh©ˇ£
));

1871 
	`DBGTHRD
(<<"found = " << 
found


1872 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


1873 << "Üóf=" << 
Àaf
.
	`pid
()

1874 << " ca£=" << 
wh©ˇ£


1875 << " slŸ=" << 
¶Ÿ
);

1877 
	`w_as£π9
(!
∑ª¡
.
	`is_fixed
());

1879 
lock_duøti⁄_t
 
this_duøti⁄
 = 
t_l⁄g
;

1880 
lock_duøti⁄_t
 
√xt_duøti⁄
 = 
t_ö°™t
;

1881 
lock_mode_t
 
this_mode
 = 
EX
;

1882 
lock_mode_t
 
√xt_mode
 = 
IX
;

1883 
boﬁ
 
lock_√xt
 = 
åue
;

1885 
boﬁ
 
look_⁄_√xt_∑ge
 = 
Ál£
;

1886 
wh©ˇ£
) {

1888 
m_nŸ_found_íd_of_fûe
:

1890 
	`w_as£π9
–!
tŸÆ_m©ch
 );

1891 
eof
 = 
åue
;

1894 
m_ßtisfyög_key_found_ßme_∑ge
: {

1903 
p2
 = 
Àaf
;

1904 if(!
found
) {

1905 
√xt_¶Ÿ
 = 
¶Ÿ
;

1909 
√xt_¶Ÿ
 = 
¶Ÿ
+1;

1910 if(
√xt_¶Ÿ
 < 
Àaf
.
	`ƒecs
()) {

1912 } if–!
Àaf
.
	`√xt
()) {

1913 
eof
 = 
åue
;

1917 
look_⁄_√xt_∑ge
 = 
åue
;

1920 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
: {

1921 
look_⁄_√xt_∑ge
 = 
åue
;

1924 
m_nŸ_found_∑ge_is_em±y
:

1930 
	`w_as£π9
(
smÀvñ_0
::
	`ö_ªcovîy
());

1931 
	`w_as£π9
(
Àaf
.
	`√xt
());

1932 
look_⁄_√xt_∑ge
 = 
åue
;

1935 if(
look_⁄_√xt_∑ge
) {

1946 
	`w_as£π9
(
Àaf
.
	`ƒecs
(Ë||Üóf.
	`pid
(Ë=
roŸ
 || 
smÀvñ_0
::
	`ö_ªcovîy
());

1954 
∑ª¡
.
	`unfix
();

1956 
	`w_as£π9
(
Àaf
.
	`√xt
());

1957 
p2_pid
 = 
roŸ
;

1958 
p2_pid
.
∑ge
 = 
Àaf
.
	`√xt
();

1960 
	`INC_TSTAT
(
bt_löks
);

1961 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

1962 
	`W_DO
–
p2
.
	`fix
(
p2_pid
, 
fix_œtch
) );

1963 
√xt_¶Ÿ
 = 0;

1965 
	`w_as£π9
(
p2
.
	`ƒecs
());

1967 
	`w_as£π9
–!
found
 || !
tŸÆ_m©ch
 ||

1968 (
wh©ˇ£
 =
m_ßtisfyög_key_found_ßme_∑ge
));

1976 #i‡
W_DEBUG_LEVEL
 > 2

1977 if(
p2_pid
.
∑ge
Ë
	`w_as£π3
(
p2
.
	`is_fixed
());

1980 
lockid_t
 
kvl
;

1981 
	`mk_kvl
(
cc
, 
kvl
, 
°id
, 
unique
, 
key
, 
ñ
);

1988 if(
unique
 && 
found
) {

1995 
this_duøti⁄
 = 
t_l⁄g
;

1996 
this_mode
 = 
SH
;

1997 
lock_√xt
 = 
Ál£
;

1999 } i‡–(!
unique
Ë&& 
tŸÆ_m©ch
 ) {

2001 
this_mode
 = 
IX
;

2002 
this_duøti⁄
 = 
t_l⁄g
;

2003 
lock_√xt
 = 
Ál£
;

2012 
	`w_as£π9
((
unique
 && !
found
) ||

2013 (!
unique
 && !
tŸÆ_m©ch
));

2014 
this_mode
 = 
IX
;

2016 
this_duøti⁄
 = 
t_l⁄g
;

2017 
lock_√xt
 = 
åue
;

2018 
√xt_mode
 = 
IX
;

2019 
√xt_duøti⁄
 = 
t_ö°™t
;

2027 if–(
cc
 =
t_cc_n⁄e
Ë|| (c¯=
t_cc_modkvl
ËË
lock_√xt
 = 
Ál£
;

2029 #i‡
W_DEBUG_LEVEL
 > 2

2030 if(
p2_pid
.
∑ge
Ë
	`w_as£π3
(
p2
.
	`is_fixed
());

2033 if(
lock_√xt
) {

2034 
lockid_t
 
nxt_kvl
;

2036 if(
eof
) {

2037 
	`mk_kvl_eof
(
cc
, 
nxt_kvl
, 
°id
);

2039 
	`w_as£π9
(
p2
.
	`is_fixed
());

2040 
båec_t
 
	`r
(
p2
, 
√xt_¶Ÿ
);

2041 
	`mk_kvl
(
cc
, 
nxt_kvl
, 
°id
, 
unique
, 
r
);

2043 
rc
 = 
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
, 
WAIT_IMMEDIATE
);

2044 i‡(
rc
.
	`is_îr‹
()) {

2045 
	`DBG
(<<"rc" << 
rc
);

2046 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

2048 if(
p2
.
	`is_fixed
()) {

2049 
p2_pid
 = 
p2
.
	`pid
();

2050 
p2_l¢
 = 
p2
.
	`l¢
();

2051 
p2
.
	`unfix
();

2053 
	`w_as£π9
(!
p2_pid
.
	`vÆid
());

2055 
Àaf
.
	`unfix
();

2056 
	`W_DO
(
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
));

2058 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2059 
	`W_DO
(
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

2060 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

2065 
Àaf
.
	`unfix
();

2066 
	`DBG
(<<"-->again");

2067 
agaö
;

2069 if(
p2_pid
.
∑ge
) {

2070 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2071 
	`W_DO
(
p2
.
	`fix
(
p2_pid
, 
fix_œtch
));

2072 if(
p2
.
	`l¢
(Ë!
p2_l¢
) {

2079 
Àaf
.
	`unfix
();

2080 
p2
.
	`unfix
();

2081 
	`DBG
(<<"-->again");

2082 
agaö
;

2087 
p2
.
	`unfix
();

2094 
this_mode
 = 
EX
;

2096 if(
cc
 > 
t_cc_n⁄e
) {

2102 
rc
 = 
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
, 
WAIT_IMMEDIATE
);

2103 i‡(
rc
.
	`is_îr‹
()) {

2104 
	`DBG
(<<"rc=" <<
rc
);

2105 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

2107 if(
p2
.
	`is_fixed
()) {

2108 
p2_pid
 = 
p2
.
	`pid
();

2109 
p2_l¢
 = 
p2
.
	`l¢
();

2110 
p2
.
	`unfix
();

2112 
Àaf
.
	`unfix
();

2113 
	`W_DO
(
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
));

2115 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2116 
	`W_DO
(
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

2117 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

2122 
∑ª¡
.
	`unfix
();

2123 
Àaf
.
	`unfix
();

2124 
	`DBG
(<<"-->again");

2125 
agaö
;

2129 if((
found
 && 
unique
Ë|| 
tŸÆ_m©ch
) {

2135 
	`DBG
(<<"DUPLICATE");

2136  
	`RC
(
eDUPLICATE
);

2141 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

2150 
ñ
.
	`ª£t
();

2151 
	`‰ì
(
tmp_ñ
);

2152 
Õid_t
 
Àaf_∑ge_pid
 = 
Àaf
.
	`pid
();

2153 
Àaf
.
	`unfix
();

2155 
ef
->
	`fûl_ñ
(
ñ2
, 
Àaf_∑ge_pid
);

2156 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2157 
	`W_DO
–
Àaf
.
	`fix
(
Àaf_∑ge_pid
, 
fix_œtch
) );

2165 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

2166 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

2168 
	`w_as£π9
(
¶Ÿ
 >0 && slŸ <
Àaf
.
	`ƒecs
());

2170 
	`DBG
(<<"ö£π i¿Àa‡© slŸ " << 
¶Ÿ
);

2171 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñ2
, 
¶Ÿ
);

2172 if(
rc
.
	`is_îr‹
()) {

2173 
	`DBG
(<<"rc" << 
rc
);

2174 
Àaf
.
	`disˇrd
();

2175  
rc
.
	`ª£t
();

2179 
	`SSMTEST
("btree.insert.4");

2184 
rc
 = 
	`log_båì_ö£π
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ2
, 
unique
);

2185 
cou¡
=10;

2186 
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eRETRY
Ë&& --
cou¡
 > 0) {

2187 
rc
 = 
	`log_båì_ö£π
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ2
, 
unique
);

2190 
	`SSMTEST
("btree.insert.5");

2191 i‡(
rc
.
	`is_îr‹
()) {

2195 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

2196 
	`DBG
(<<"log_båì_ö£π faûed" << 
rc
 );

2198 
w_rc_t
 
rc2
 =

2199 
Àaf
.
	`ªmove
(
¶Ÿ
,Üóf.
	`is_com¥es£d
());

2200 if(
rc2
.
	`is_îr‹
()) {

2201 
	`DBG
(<<"sub£quíàªmovêÁûed" << 
rc2
 );

2202 
Àaf
.
	`disˇrd
();

2203  
rc2
.
	`ª£t
();

2207 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

2208 
Àaf
.
	`disˇrd
();

2210  
rc
.
	`ª£t
();

2212 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

2215 if(!
bIgn‹eL©ches
) {

2216 
	`check_œtches
(
___s
,
___e
, ___s+___e);

2219  
RCOK
;

2220 
	}
}

2241 
rc_t


2242 
	gbåì_im∂
::
	$_Æloc_∑ge
(

2243 c⁄° 
Õid_t
& 
roŸ
,

2244 
öt2_t
 
Àvñ
,

2245 c⁄° 
Õid_t
& 
√¨_p
,

2246 
båì_p
& 
ªt_∑ge
,

2247 
shpid_t
 
pid0
,

2248 
boﬁ
 
£t_ôs_smo
,

2249 
boﬁ
 
com¥es£d
,

2250 
°‹e_Êag_t
 
°f
,

2251 c⁄° 
boﬁ
 
bIgn‹eL©ches


2254 
	`FUNC
(
båì_im∂
::
_Æloc_∑ge
);

2256 
œtch_mode_t
 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2258 
Õid_t
 
pid
;

2259 
	`w_as£π9
(
√¨_p
 !
Õid_t
::
nuŒ
);

2263 
	`DBG
(<<"°id " << 
roŸ
.
	`°id
());

2264 
	`W_DO
(
smÀvñ_0
::
io
->
	`Æloc_a_∑ge
(

2265 
roŸ
.
	`°id
(),

2266 
√¨_p
,

2267 
pid
,

2268 
åue
,

2269 
NL
,

2270 
åue


2272 
	`W_DO
–
ªt_∑ge
.
	`fix
(
pid
, 
mode
,Ñë_∑ge.
t_vúgö
, 
°f
) );

2274 
båì_p
::
Êag_t
 
f
 = 
com¥es£d
? båì_p::
t_com¥es£d
 : båì_p::
t_n⁄e
;

2276 if(
£t_ôs_smo
) {

2277 
f
 = (
båì_p
::
Êag_t
)

2278 (((Ë
f
Ë| ((Ë
båì_p
::
t_smo
));

2280 
	`W_DO
–
ªt_∑ge
.
	`£t_hdr
(
roŸ
.
∑ge
, 
Àvñ
, 
pid0
, (
uöt2_t
)
f
) );

2283 
	`DBGTHRD
(<<"Æloˇãd båìÖagê" << 
pid
 << "áàÀvñ " << 
Àvñ
);

2285 
	`INC_TSTAT
(
∑ge_båì_Æloc
);

2287  
RCOK
;

2288 
	}
}

2298 
rc_t


2299 
	gbåì_im∂
::
	$_ö£π
(

2300 c⁄° 
Õid_t
& 
roŸ
,

2301 
boﬁ
 
unique
,

2302 
c⁄cuºícy_t
 
cc
,

2303 c⁄° 
cvec_t
& 
key
,

2304 c⁄° 
cvec_t
& 
ñ
,

2305 
•lô_Á˘‹
,

2306 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

2308 
	`FUNC
(
båì_im∂
::
_ö£π
);

2309 
Õid_t
 
£¨ch_°¨t_pid
 = 
roŸ
;

2310 
l¢_t
 
£¨ch_°¨t_l¢
 =Ü¢_t::
nuŒ
;

2311 
°id_t
 
°id
 = 
roŸ
.
	`°id
();

2313 
	`INC_TSTAT
(
bt_ö£π_˙t
);

2315 
	`DBGTHRD
(<<"_ö£π: uniquê" << 
unique
 << " cc=" << (
cc
)

2316 << " key=" << 
key
 );

2318 if(!
bIgn‹eL©ches
) {

2319 
	`gë_œtches
(
___s
,
___e
);

2323 
åì_œtch
 
	`åì_roŸ
(
roŸ
, 
bIgn‹eL©ches
);

2326 
œtch_mode_t
 
åavî£_œtch
;

2327 
œtch_mode_t
 
smo_mode
;

2328 
œtch_mode_t
 
smo_p1mode
;

2329 
œtch_mode_t
 
fix_œtch
;

2330 
agaö
:

2332 
båì_p
 
Àaf
;

2333 
Õid_t
 
Àaf_pid
;

2334 
l¢_t
 
Àaf_l¢
;

2335 
båì_p
 
∑ª¡
;

2336 
l¢_t
 
∑ª¡_l¢
;

2337 
Õid_t
 
∑ª¡_pid
;

2338 
boﬁ
 
found
 = 
Ál£
;

2339 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

2340 
rc_t
 
rc
;

2343 
	`DBGTHRD
(<<"_insert.again:");

2345 
	`w_as£π9
–!
Àaf
.
	`is_fixed
());

2346 
	`w_as£π9
–!
∑ª¡
.
	`is_fixed
());

2348 if(!
bIgn‹eL©ches
) {

2349 if(
åì_roŸ
.
	`is_fixed
()) {

2350 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+1);

2352 
	`check_œtches
(
___s
,
___e
, ___s+___e);

2361 
åavî£_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2363 
	`W_DO
–
	`_åavî£
(
roŸ
, 
£¨ch_°¨t_pid
,

2364 
£¨ch_°¨t_l¢
,

2365 
key
, 
ñ
, 
found
,

2366 
åavî£_œtch
, 
Àaf
, 
∑ª¡
,

2367 
Àaf_l¢
, 
∑ª¡_l¢
, 
bIgn‹eL©ches
) );

2369 if(!
bIgn‹eL©ches
) {

2370 if(
Àaf
.
	`pid
(Ë=
roŸ
) {

2371 
	`check_œtches
(
___s
,
___e
+2, ___s+___e+2);

2373 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+2);

2377 
	`w_as£π9
–
Àaf
.
	`is_fixed
());

2378 
	`w_as£π9
–
Àaf
.
	`is_Àaf
());

2380 
	`w_as£π9
–
∑ª¡
.
	`is_fixed
());

2381 
	`w_as£π9
–
∑ª¡
.
	`is_node
(Ë|| (∑ª¡.
	`is_Àaf
() &&

2382 
Àaf
.
	`pid
(Ë=
roŸ
 ));

2383 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

2391 
Àaf_pid
 = 
Àaf
.
	`pid
();

2392 
∑ª¡_pid
 = 
∑ª¡
.
	`pid
();

2394 if(
Àaf
.
	`is_smo
(Ë||Üóf.
	`is_dñëe
()) {

2401 
	`w_as£π2
(
∑ª¡
.
	`is_fixed
());

2402 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

2403 
	`w_as£π2
(
∑ª¡
.
	`œtch_mode
()>=
LATCH_SH
);

2404 
	`w_as£π2
(
Àaf
.
	`œtch_mode
()==
LATCH_EX
 ||Üóf.œtch_mode()==
LATCH_NLX
);

2406 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2407 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2408 
w_îr‹_t
::
îr_num_t
 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
,

2409 
smo_p1mode
, 
Ál£
,

2410 &
∑ª¡
, 
LATCH_NL
,

2411 
bIgn‹eL©ches
);

2413 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

2414 
	`w_as£π9
(
åì_roŸ
.
	`is_fixed
());

2415 
	`w_as£π9
(
Àaf
.
	`œtch_mode
()==
LATCH_EX
 ||Üóf.œtch_mode()==
LATCH_NLX
);

2416 
	`w_as£π9
(
åì_roŸ
.
	`œtch_mode
()>=
LATCH_SH
);

2417 
	`w_as£π9
(!
∑ª¡
.
	`is_fixed
());

2419 if(
r˚
) {

2420 if(
r˚
 =
eRETRY
) {

2421 
Àaf
.
	`unfix
();

2422 
∑ª¡
.
	`unfix
();

2431 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

2432 << (
åì_roŸ
.
	`œtch_mode
())

2434 
agaö
;

2436  
	`RC
(
r˚
);

2438 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

2447 
åì_roŸ
.
	`unfix
();

2448 
∑ª¡
.
	`unfix
();

2453 if(
Àaf
.
	`is_smo
()) {

2454 #i‡
BTREE_LOG_COMMENT_ON


2455 
	`W_DO
(
	`log_commít
("clr_smo/I"));

2457 
	`W_DO
–
Àaf
.
	`˛r_smo
(
åue
) );

2459 
	`SSMTEST
("btree.insert.2");

2460 if(
Àaf
.
	`is_dñëe
()) {

2461 #i‡
BTREE_LOG_COMMENT_ON


2462 
	`W_DO
(
	`log_commít
("clr_delete"));

2464 
	`W_DO
–
Àaf
.
	`˛r_dñëe
() );

2468 
∑ª¡
.
	`unfix
();

2478 
åì_roŸ
.
	`unfix
();

2480 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

2481 
	`w_as£π2
(! 
Àaf
.
	`is_smo
());

2483 
	`w_as£π2
(!
∑ª¡
.
	`is_fixed
());

2484 
	`w_as£π2
(!
åì_roŸ
.
	`is_fixed
() );

2486 
	`w_as£π2
(
Àaf
.
	`ƒecs
(Ë||Üóf.
	`pid
(Ë=
roŸ
 || 
smÀvñ_0
::
	`ö_ªcovîy
());

2502 
¶Ÿid_t
 
¶Ÿ
 = 0;

2504 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
() );

2507 
	`DBG
(<<"D⁄'àö£π i¿Àa‡© slŸ " << 
¶Ÿ


2509 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñ
, 
¶Ÿ
, 0, 
Ál£
);

2510 if(
rc
.
	`is_îr‹
()) {

2511 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
()

2512 << "Ñc" << 
rc


2514 i‡(
rc
.
	`îr_num
(Ë=
eRECWONTFIT
) {

2521 
boﬁ
 
•lô_wôh_smo
 = 
åue
;

2546 
	`w_as£π0
(!
∑ª¡
.
	`is_fixed
());

2547 
Õid_t
 
cousö_pid
 = 
Àaf
.
	`pid
();

2548 
cousö_pid
.
∑ge
 = 
Àaf
.
	`√xt
();

2549 
båì_p
 
cousö
;

2551 if(
cousö_pid
.
∑ge
) {

2552 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2553 
rc
 = 
cousö
.
	`c⁄dôi⁄Æ_fix
(
cousö_pid
, 
fix_œtch
);

2554 
	`W_IFDEBUG1
(

2555 if(!
rc
.
	`is_îr‹
())

2556 
	`w_as£π1
(
cousö
.
	`¥ev
(Ë=
Àaf
.
	`pid
().
∑ge
);)

2558 
rc
 = 
RCOK
;

2561 if(!
rc
.
	`is_îr‹
()) {

2562 
ªquúed_•a˚
 =

2563 2 *(
key
.
	`size
(Ë+ 
ñ
.size() +

2564 
båì_p
::
ovîhód_ªquúemít_≥r_íåy
);

2566 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2567 
rc
 = 
∑ª¡
.
	`c⁄dôi⁄Æ_fix
(
∑ª¡_pid
, 
fix_œtch
);

2568 if(!
rc
.
	`is_îr‹
()) {

2583 if(
∑ª¡
.
	`l¢
(Ë=
∑ª¡_l¢
 &&

2584 
∑ª¡
.
	`ußbÀ_•a˚
(Ë>
ªquúed_•a˚
) {

2590 
l¢_t
 
™ch‹
;

2591 
x˘_t
* 
xd
 = 
	`x˘
();

2592 
Õid_t
 
rsib_pid
;

2593 
boﬁ
 
À·_hóvy
;

2594 
¶Ÿid_t
 
¶Ÿ
 = 1;

2595 
addôi⁄
 = 
key
.
	`size
(Ë+ 
ñ
.size() + 2;

2596 
check_com≥nßãd_›_√°ög
 
	`cc⁄d
(
xd
, 
__LINE__
, 
__FILE__
);

2597 if(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

2598 
	`DBG
(<<" s∂ôtögÖagê" << 
Àaf
.
	`pid
()

2599 << "Ö¨ít.ußbñ_•a˚()" << 
∑ª¡
.
	`ußbÀ_•a˚
()

2600 << "Ñequúed_•a˚ = " << 
ªquúed_•a˚


2601 << "áddôi⁄ = " << 
addôi⁄


2603 
rc
 = 
	`__•lô_∑ge
(
Àaf
, 
rsib_pid
, 
À·_hóvy
, 
¶Ÿ
, 
addôi⁄
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
);

2606 if(
rc
.
	`is_îr‹
()) {

2607 if(
xd
) {

2608 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

2609 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("btimpl1"));

2614 
¶Ÿid_t
 
chûd_¶Ÿ
 = 0;

2615 
boﬁ
 
found_key
 = 
Ál£
;

2616 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

2617 
rc
 = 
∑ª¡
.
	`£¨ch
(
key
, 
ñ
, 
found_key
, 
tŸÆ_m©ch
, 
chûd_¶Ÿ
);

2618 if(!
tŸÆ_m©ch
Ë
chûd_¶Ÿ
--;

2619 if(
rc
.
	`is_îr‹
()) {

2620 if(
xd
) {

2621 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

2622 
xd
->
	`ªÀa£_™ch‹
(
åue


2623 
	`LOG_COMMENT_USE
("btimpl2"));

2628 
boﬁ
 
was_•lô
 = 
Ál£
;

2629 
rc
 = 
	`_¥›ag©e_•lô
(
∑ª¡
, 
Àaf
.
	`pid
(), 
chûd_¶Ÿ
,

2630 
was_•lô
, 
bIgn‹eL©ches
);

2631 if(
rc
.
	`is_îr‹
()) {

2632 if(
xd
) {

2633 
	`W_COERCE
(
xd
->
	`rﬁlback
(
™ch‹
));

2634 
xd
->
	`ªÀa£_™ch‹
(
åue


2635 
	`LOG_COMMENT_USE
("btimpl3"));

2639 
	`w_as£π1
(!
was_•lô
);

2640 
•lô_wôh_smo
 = 
Ál£
;

2641 if(
xd
Ëxd->
	`com≥nßã
(
™ch‹
,
Ál£


2642 
	`LOG_COMMENT_USE
("btree1"));

2644 
åì_roŸ
.
	`unfix
();

2645 
agaö
;

2650 
∑ª¡
.
	`unfix
();

2653 
	`w_as£π1
(
Àaf
.
	`is_fixed
());

2654 
	`w_as£π1
(! 
∑ª¡
.
	`is_fixed
());

2658 if(
•lô_wôh_smo
)

2667 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2668 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2669 
w_îr‹_t
::
îr_num_t
 
r˚
 =

2670 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

2671 
Ál£
, 0, 
LATCH_NL
,

2672 
bIgn‹eL©ches
);

2674 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

2675 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

2676 
	`w_as£π9
(! 
∑ª¡
.
	`is_fixed
());

2678 if(
r˚
) {

2679 if(
r˚
=
eRETRY
) {

2686 
åì_roŸ
.
	`unfix
();

2687 
Àaf
.
	`unfix
();

2688 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

2689 << (
åì_roŸ
.
	`œtch_mode
())

2691 
agaö
;

2693  
	`RC
(
r˚
);

2695 
	`w_as£π2
(!
∑ª¡
.
	`is_fixed
());

2696 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

2697 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

2698 
	`W_DO
–
	`_•lô_Àaf
(
åì_roŸ
.
	`pid
(), 
Àaf
, 
key
,

2699 
ñ
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
) );

2700 
	`SSMTEST
("btree.insert.3");

2702 
åì_roŸ
.
	`unfix
();

2703 
	`DBG
(<<"split -->again");

2704 
agaö
;

2707  
	`RC_AUGMENT
(
rc
);

2710 
	`DBG
(<<"Öagê" << 
Àaf
.
	`pid
(Ë<< "Çªcs()" <<Üóf.
	`ƒecs
() );

2713 
¶Ÿid_t
 
¶Ÿ
 = -1;

2721 
båì_p
 
p2
;

2722 
Õid_t
 
p2_pid
 =Üpid_t::
nuŒ
;

2723 
l¢_t
 
p2_l¢
;

2724 
uöt
 
wh©ˇ£
;

2725 
boﬁ
 
eof
=
Ál£
;

2726 
¶Ÿid_t
 
√xt_¶Ÿ
 = 0;

2728 
	`W_DO
–
	`_ßtisfy
(
Àaf
, 
key
, 
ñ
, 
found
,

2729 
tŸÆ_m©ch
, 
¶Ÿ
, 
wh©ˇ£
));

2731 
	`DBGTHRD
(<<"found = " << 
found


2732 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


2733 << "Üóf=" << 
Àaf
.
	`pid
()

2734 << " ca£=" << 
wh©ˇ£


2735 << " slŸ=" << 
¶Ÿ
);

2737 
	`w_as£π9
(!
∑ª¡
.
	`is_fixed
());

2739 
lock_duøti⁄_t
 
this_duøti⁄
 = 
t_l⁄g
;

2740 
lock_duøti⁄_t
 
√xt_duøti⁄
 = 
t_ö°™t
;

2741 
lock_mode_t
 
this_mode
 = 
EX
;

2742 
lock_mode_t
 
√xt_mode
 = 
IX
;

2743 
boﬁ
 
lock_√xt
 = 
åue
;

2745 
boﬁ
 
look_⁄_√xt_∑ge
 = 
Ál£
;

2746 
wh©ˇ£
) {

2748 
m_nŸ_found_íd_of_fûe
:

2750 
	`w_as£π9
–!
tŸÆ_m©ch
 );

2751 
eof
 = 
åue
;

2754 
m_ßtisfyög_key_found_ßme_∑ge
: {

2763 
p2
 = 
Àaf
;

2764 if(!
found
) {

2765 
√xt_¶Ÿ
 = 
¶Ÿ
;

2769 
√xt_¶Ÿ
 = 
¶Ÿ
+1;

2770 if(
√xt_¶Ÿ
 < 
Àaf
.
	`ƒecs
()) {

2772 } if–!
Àaf
.
	`√xt
()) {

2773 
eof
 = 
åue
;

2777 
look_⁄_√xt_∑ge
 = 
åue
;

2780 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
: {

2781 
look_⁄_√xt_∑ge
 = 
åue
;

2784 
m_nŸ_found_∑ge_is_em±y
:

2790 
	`w_as£π9
(
smÀvñ_0
::
	`ö_ªcovîy
());

2791 
	`w_as£π9
(
Àaf
.
	`√xt
());

2792 
look_⁄_√xt_∑ge
 = 
åue
;

2795 if(
look_⁄_√xt_∑ge
) {

2806 
	`w_as£π9
(
Àaf
.
	`ƒecs
(Ë||Üóf.
	`pid
(Ë=
roŸ
 || 
smÀvñ_0
::
	`ö_ªcovîy
());

2814 
∑ª¡
.
	`unfix
();

2816 
	`w_as£π9
(
Àaf
.
	`√xt
());

2817 
p2_pid
 = 
roŸ
;

2818 
p2_pid
.
∑ge
 = 
Àaf
.
	`√xt
();

2820 
	`INC_TSTAT
(
bt_löks
);

2821 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2822 
	`W_DO
–
p2
.
	`fix
(
p2_pid
, 
fix_œtch
) );

2823 
√xt_¶Ÿ
 = 0;

2825 
	`w_as£π9
(
p2
.
	`ƒecs
());

2827 
	`w_as£π9
–!
found
 || !
tŸÆ_m©ch
 ||

2828 (
wh©ˇ£
 =
m_ßtisfyög_key_found_ßme_∑ge
));

2836 #i‡
W_DEBUG_LEVEL
 > 2

2837 if(
p2_pid
.
∑ge
Ë
	`w_as£π3
(
p2
.
	`is_fixed
());

2840 
lockid_t
 
kvl
;

2841 
	`mk_kvl
(
cc
, 
kvl
, 
°id
, 
unique
, 
key
, 
ñ
);

2848 if(
unique
 && 
found
) {

2855 
this_duøti⁄
 = 
t_l⁄g
;

2856 
this_mode
 = 
SH
;

2857 
lock_√xt
 = 
Ál£
;

2859 } i‡–(!
unique
Ë&& 
tŸÆ_m©ch
 ) {

2861 
this_mode
 = 
IX
;

2862 
this_duøti⁄
 = 
t_l⁄g
;

2863 
lock_√xt
 = 
Ál£
;

2872 
	`w_as£π9
((
unique
 && !
found
) ||

2873 (!
unique
 && !
tŸÆ_m©ch
));

2874 
this_mode
 = 
IX
;

2876 
this_duøti⁄
 = 
t_l⁄g
;

2877 
lock_√xt
 = 
åue
;

2878 
√xt_mode
 = 
IX
;

2879 
√xt_duøti⁄
 = 
t_ö°™t
;

2887 if–(
cc
 =
t_cc_n⁄e
Ë|| (c¯=
t_cc_modkvl
ËË
lock_√xt
 = 
Ál£
;

2889 #i‡
W_DEBUG_LEVEL
 > 2

2890 if(
p2_pid
.
∑ge
Ë
	`w_as£π3
(
p2
.
	`is_fixed
());

2893 if(
lock_√xt
) {

2894 
lockid_t
 
nxt_kvl
;

2896 if(
eof
) {

2897 
	`mk_kvl_eof
(
cc
, 
nxt_kvl
, 
°id
);

2899 
	`w_as£π9
(
p2
.
	`is_fixed
());

2900 
båec_t
 
	`r
(
p2
, 
√xt_¶Ÿ
);

2901 
	`mk_kvl
(
cc
, 
nxt_kvl
, 
°id
, 
unique
, 
r
);

2903 
rc
 = 
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
, 
WAIT_IMMEDIATE
);

2904 i‡(
rc
.
	`is_îr‹
()) {

2905 
	`DBG
(<<"rc" << 
rc
);

2906 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

2908 if(
p2
.
	`is_fixed
()) {

2909 
p2_pid
 = 
p2
.
	`pid
();

2910 
p2_l¢
 = 
p2
.
	`l¢
();

2911 
p2
.
	`unfix
();

2913 
	`w_as£π9
(!
p2_pid
.
	`vÆid
());

2915 
Àaf
.
	`unfix
();

2916 
	`W_DO
(
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
));

2918 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2919 
	`W_DO
(
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

2920 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

2925 
Àaf
.
	`unfix
();

2926 
	`DBG
(<<"-->again");

2927 
agaö
;

2929 if(
p2_pid
.
∑ge
) {

2930 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2931 
	`W_DO
(
p2
.
	`fix
(
p2_pid
, 
fix_œtch
));

2932 if(
p2
.
	`l¢
(Ë!
p2_l¢
) {

2939 
Àaf
.
	`unfix
();

2940 
p2
.
	`unfix
();

2941 
	`DBG
(<<"-->again");

2942 
agaö
;

2947 
p2
.
	`unfix
();

2954 
this_mode
 = 
EX
;

2956 if(
cc
 > 
t_cc_n⁄e
) {

2962 
rc
 = 
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
, 
WAIT_IMMEDIATE
);

2963 i‡(
rc
.
	`is_îr‹
()) {

2964 
	`DBG
(<<"rc=" <<
rc
);

2965 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

2967 if(
p2
.
	`is_fixed
()) {

2968 
p2_pid
 = 
p2
.
	`pid
();

2969 
p2_l¢
 = 
p2
.
	`l¢
();

2970 
p2
.
	`unfix
();

2972 
Àaf
.
	`unfix
();

2973 
	`W_DO
(
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
));

2975 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2976 
	`W_DO
(
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

2977 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

2982 
∑ª¡
.
	`unfix
();

2983 
Àaf
.
	`unfix
();

2984 
	`DBG
(<<"-->again");

2985 
agaö
;

2989 if((
found
 && 
unique
Ë|| 
tŸÆ_m©ch
) {

2995 
	`DBG
(<<"DUPLICATE");

2996  
	`RC
(
eDUPLICATE
);

3001 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3014 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

3015 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

3017 
	`w_as£π9
(
¶Ÿ
 >0 && slŸ <
Àaf
.
	`ƒecs
());

3019 
	`DBG
(<<"ö£π i¿Àa‡© slŸ " << 
¶Ÿ
);

3020 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñ
, 
¶Ÿ
);

3021 if(
rc
.
	`is_îr‹
()) {

3022 
	`DBG
(<<"rc" << 
rc
);

3023 
Àaf
.
	`disˇrd
();

3024  
rc
.
	`ª£t
();

3028 
	`SSMTEST
("btree.insert.4");

3033 
rc
 = 
	`log_båì_ö£π
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ
, 
unique
);

3034 
cou¡
=10;

3035 
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eRETRY
Ë&& --
cou¡
 > 0) {

3036 
rc
 = 
	`log_båì_ö£π
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ
, 
unique
);

3039 
	`SSMTEST
("btree.insert.5");

3040 i‡(
rc
.
	`is_îr‹
()) {

3044 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

3045 
	`DBG
(<<"log_båì_ö£π faûed" << 
rc
 );

3047 
w_rc_t
 
rc2
 =

3048 
Àaf
.
	`ªmove
(
¶Ÿ
,Üóf.
	`is_com¥es£d
());

3049 if(
rc2
.
	`is_îr‹
()) {

3050 
	`DBG
(<<"sub£quíàªmovêÁûed" << 
rc2
 );

3051 
Àaf
.
	`disˇrd
();

3052  
rc2
.
	`ª£t
();

3056 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

3057 
Àaf
.
	`disˇrd
();

3059  
rc
.
	`ª£t
();

3061 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

3064 if(!
bIgn‹eL©ches
) {

3065 
	`check_œtches
(
___s
,
___e
, ___s+___e);

3068  
RCOK
;

3069 
	}
}

3077 
rc_t


3078 
	gbåì_im∂
::
	$_ªmove
(

3079 c⁄° 
Õid_t
& 
roŸ
,

3080 
boﬁ
 
unique
,

3081 
c⁄cuºícy_t
 
cc
,

3082 c⁄° 
cvec_t
& 
key
,

3083 c⁄° 
cvec_t
& 
ñ
,

3084 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

3086 
	`FUNC
(
båì_im∂
::
_ªmove
);

3087 
Õid_t
 
£¨ch_°¨t_pid
 = 
roŸ
;

3088 
l¢_t
 
£¨ch_°¨t_l¢
 =Ü¢_t::
nuŒ
;

3089 
¶Ÿid_t
 
¶Ÿ
;

3090 
°id_t
 
°id
 = 
roŸ
.
	`°id
();

3091 
rc_t
 
rc
;

3093 
	`INC_TSTAT
(
bt_ªmove_˙t
);

3095 
	`DBGTHRD
(<<"_remove:");

3096 #i‡
W_DEBUG_LEVEL
 > 3

3097 if(
¥öt_ªmove
) {

3098 
cout
 << "BEFORE _ªmove" <<
ídl
;

3099 
båì_m
::
	`¥öt
(
roŸ
);

3103 if(!
bIgn‹eL©ches
) {

3104 
	`gë_œtches
(
___s
,
___e
);

3108 
åì_œtch
 
	`åì_roŸ
(
roŸ
, 
bIgn‹eL©ches
);

3111 
œtch_mode_t
 
åavî£_œtch
;

3112 
œtch_mode_t
 
smo_mode
;

3113 
œtch_mode_t
 
smo_p1mode
;

3114 
œtch_mode_t
 
smo_p2mode
;

3115 
œtch_mode_t
 
fix_œtch
;

3117 
agaö
:

3119 
båì_p
 
Àaf
;

3120 
Õid_t
 
Àaf_pid
;

3121 
l¢_t
 
Àaf_l¢
;

3122 
båì_p
 
∑ª¡
;

3123 
l¢_t
 
∑ª¡_l¢
;

3124 
Õid_t
 
∑ª¡_pid
;

3125 
boﬁ
 
found
;

3126 
boﬁ
 
tŸÆ_m©ch
;

3127 
båì_p
 
sib
;

3129 
l¢_t
 
sib_l¢
;

3130 
Õid_t
 
sib_pid
;

3132 
	`w_as£π9
–! 
Àaf
.
	`is_fixed
());

3133 
	`w_as£π9
–! 
∑ª¡
.
	`is_fixed
());

3135 if(!
bIgn‹eL©ches
) {

3136 if(
åì_roŸ
.
	`is_fixed
()) {

3137 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+1);

3139 
	`check_œtches
(
___s
,
___e
, ___s+___e);

3143 
	`DBGTHRD
(<<"_remove.do:");

3151 
åavî£_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3152 
	`W_DO
–
	`_åavî£
(
roŸ
, 
£¨ch_°¨t_pid
, 
£¨ch_°¨t_l¢
, 
key
, 
ñ
, 
found
,

3153 
åavî£_œtch
, 
Àaf
, 
∑ª¡
, 
Àaf_l¢
, 
∑ª¡_l¢
,

3154 
bIgn‹eL©ches
) );

3156 if(!
bIgn‹eL©ches
) {

3157 if(
Àaf
.
	`pid
(Ë=
roŸ
) {

3158 
	`check_œtches
(
___s
,
___e
+2, ___s+___e+2);

3160 
	`check_œtches
(
___s
+1,
___e
+1, ___s+___e+2);

3164 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3165 
	`w_as£π9
(
Àaf
.
	`is_Àaf
());

3167 
	`w_as£π9
(
∑ª¡
.
	`is_fixed
());

3168 
	`w_as£π9
–
∑ª¡
.
	`is_node
(Ë|| (∑ª¡.
	`is_Àaf
() &&

3169 
Àaf
.
	`pid
(Ë=
roŸ
 ));

3170 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

3199 
Àaf_pid
 = 
Àaf
.
	`pid
();

3200 
∑ª¡_pid
 = 
∑ª¡
.
	`pid
();

3202 if(
Àaf
.
	`is_smo
()) {

3203 
w_îr‹_t
::
îr_num_t
 
r˚
;

3204 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3205 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3206 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
, 
smo_p1mode
, 
Ál£
,

3207 &
∑ª¡
, 
LATCH_NL
, 
bIgn‹eL©ches
);

3208 
åì_roŸ
.
	`unfix
();

3210 
	`w_as£π2
(!
åì_roŸ
.
	`is_fixed
() );

3211 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

3212 
	`w_as£π2
–!
∑ª¡
.
	`is_fixed
());

3214 if(
r˚
) {

3215 if(
r˚
 =
eRETRY
) {

3218 if(
Àaf
.
	`is_smo
()) {

3219 #i‡
BTREE_LOG_COMMENT_ON


3220 
	`W_DO
(
	`log_commít
("clr_smo/R1"));

3222 
	`W_DO
–
Àaf
.
	`˛r_smo
(
åue
) );

3224 
Àaf
.
	`unfix
();

3225 
	`DBGTHRD
(<<"POSC done; ->again TREE LATCH MODE "

3226 << (
åì_roŸ
.
	`œtch_mode
())

3228 
agaö
;

3230  
	`RC
(
r˚
);

3232 if(
Àaf
.
	`is_smo
()) {

3233 #i‡
BTREE_LOG_COMMENT_ON


3234 
	`W_DO
(
	`log_commít
("clr_smo/R2"));

3236 
	`W_DO
–
Àaf
.
	`˛r_smo
(
åue
) );

3238 
	`SSMTEST
("btree.remove.1");

3241 
∑ª¡
.
	`unfix
();

3244 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

3245 
	`w_as£π2
(! 
Àaf
.
	`is_smo
());

3247 
	`w_as£π2
(!
∑ª¡
.
	`is_fixed
());

3248 
	`w_as£π2
(!
åì_roŸ
.
	`is_fixed
() );

3250 
sib_pid
 = 
roŸ
;

3251 
sib_pid
.
∑ge
 = 
Àaf
.
	`√xt
();

3257 
uöt
 
wh©ˇ£
;

3258 
	`W_DO
–
	`_ßtisfy
(
Àaf
, 
key
, 
ñ
, 
found
,

3259 
tŸÆ_m©ch
, 
¶Ÿ
, 
wh©ˇ£
));

3261 
	`DBGTHRD
(<<"found = " << 
found


3262 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


3263 << "Üóf=" << 
Àaf
.
	`pid
()

3264 << " ca£=" << 
wh©ˇ£


3265 << " cc=" << (
cc
)

3266 << " slŸ=" << 
¶Ÿ
);

3268 if(
cc
 !
t_cc_n⁄e
) {

3276 
lockid_t
 
nxt_kvl
;

3277 
boﬁ
 
lock_√xt
=
åue
;

3278 
lock_duøti⁄_t
 
this_duøti⁄
 = 
t_l⁄g
;

3279 
lock_mode_t
 
this_mode
 = 
EX
;

3280 
lock_duøti⁄_t
 
√xt_duøti⁄
 = 
t_l⁄g
;

3281 
lock_mode_t
 
√xt_mode
 = 
EX
;

3282 
boﬁ
 
is_œ°_key
 = 
Ál£
;

3283 
boﬁ
 
√xt_⁄_√xt_∑ge
 = 
Ál£
;

3286 if(
cc
 =
t_cc_n⁄e
 || c¯=
t_cc_modkvl
 ) {

3287 
lock_√xt
 = 
Ál£
;

3288 
this_duøti⁄
 = 
t_l⁄g
;

3290 } 
wh©ˇ£
) {

3291 
m_nŸ_found_íd_of_fûe
:

3292 
	`mk_kvl_eof
(
cc
, 
nxt_kvl
, 
°id
);

3293 
lock_√xt
 = 
åue
;

3295 
m_nŸ_found_∑ge_is_em±y
:

3297 
	`w_as£π9
(0);

3300 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
:

3301 
m_ßtisfyög_key_found_ßme_∑ge
: {

3312 i‡(!
tŸÆ_m©ch
 && 
¶Ÿ
 < 
Àaf
.
	`ƒecs
()) {

3314 
	`DBG
(<<"");

3315 
båec_t
 
	`r
(
Àaf
, 
¶Ÿ
);

3316 
	`mk_kvl
(
cc
, 
nxt_kvl
, 
°id
, 
unique
, 
r
);

3317 
lock_√xt
 = 
åue
;

3319 } i‡(
¶Ÿ
 < 
Àaf
.
	`ƒecs
() - 1) {

3321 
	`DBG
(<<"");

3322 
	`w_as£π9
(
tŸÆ_m©ch
);

3323 
båec_t
 
	`s
(
Àaf
, 
¶Ÿ
);

3324 
båec_t
 
	`r
(
Àaf
, 
¶Ÿ
 + 1);

3325 
	`mk_kvl
(
cc
, 
nxt_kvl
, 
°id
, 
unique
, 
r
);

3326 if(
unique
) {

3327 
lock_√xt
 = 
åue
;

3328 } if(
r
.
	`key
(Ë=
s
.key()) {

3329 
lock_√xt
 = 
Ál£
;

3331 
lock_√xt
 = 
åue
;

3332 if(
¶Ÿ
 > 0) {

3334 
båec_t
 
	`q
(
Àaf
, 
¶Ÿ
 - 1);

3335 if(
q
.
	`key
(Ë!
s
.key()) {

3336 
is_œ°_key
 = 
åue
;

3342 i‡(! 
Àaf
.
	`√xt
()) {

3343 
	`DBG
(<<"");

3344 
	`mk_kvl_eof
(
cc
, 
nxt_kvl
, 
°id
);

3345 
lock_√xt
 = 
åue
;

3348 
	`INC_TSTAT
(
bt_löks
);

3349 
	`DBG
(<<"");

3351 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3352 
	`W_DO
–
sib
.
	`fix
(
sib_pid
, 
fix_œtch
) );

3353 
sib_l¢
 = 
sib
.
	`l¢
();

3354 if(
sib
.
	`ƒecs
() > 0) {

3355 
√xt_⁄_√xt_∑ge
 =
åue
;

3356 
båec_t
 
	`r
(
sib
, 0);

3357 
	`mk_kvl
(
cc
, 
nxt_kvl
, 
°id
, 
unique
, 
r
);

3359 if(
unique
 || !
tŸÆ_m©ch
) {

3360 
lock_√xt
 = 
åue
;

3362 
båec_t
 
	`s
(
Àaf
, 
¶Ÿ
);

3363 if(
r
.
	`key
(Ë=
s
.key()) {

3364 
lock_√xt
 = 
Ál£
;

3366 
lock_√xt
 = 
åue
;

3367 if(
¶Ÿ
 > 0) {

3369 
båec_t
 
	`q
(
Àaf
, 
¶Ÿ
 - 1);

3370 if(
q
.
	`key
(Ë!
s
.key()) {

3371 
is_œ°_key
 = 
åue
;

3380 
	`DBG
(<<"");

3381 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3382 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3383 
w_îr‹_t
::
îr_num_t
 
r˚
;

3384 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
,

3385 
smo_p1mode
, 
Ál£
, &
sib
,

3386 
LATCH_NL
, 
bIgn‹eL©ches
);

3387 
åì_roŸ
.
	`unfix
();

3389 
	`w_as£π2
(!
åì_roŸ
.
	`is_fixed
() );

3390 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

3391 if(
r˚
Ë{  
	`RC
(rce); }

3392 
	`DBGTHRD
(<<"POSC done; ->again TREE LATCH MODE "

3393 << (
åì_roŸ
.
	`œtch_mode
())

3395 
agaö
;

3406 if(
is_œ°_key
 || 
unique
) {

3407 
this_duøti⁄
 = 
t_ö°™t
;

3419 if(!
tŸÆ_m©ch
){

3420 
√xt_duøti⁄
 = 
t_l⁄g
;

3421 
√xt_mode
 = 
SH
;

3424 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3426 i‡(
lock_√xt
) {

3427 
	`DBG
(<<"lockÇext");

3429 
rc
 = 
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
, 
WAIT_IMMEDIATE
);

3430 i‡(
rc
.
	`is_îr‹
()) {

3431 
	`DBG
(<<"rc=" << 
rc
);

3432 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

3434 
Àaf
.
	`unfix
();

3435 
sib
.
	`unfix
();

3436 
	`W_DO
–
lm
->
	`lock
(
nxt_kvl
, 
√xt_mode
, 
√xt_duøti⁄
) );

3438 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3439 
	`W_DO
–
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

3440 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

3441 
Àaf
.
	`unfix
();

3442 
	`DBG
(<<"-->again");

3443 
agaö
;

3445 if(
sib_pid
.
∑ge
) {

3446 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3447 
	`W_DO
–
sib
.
	`fix
(
sib_pid
, 
fix_œtch
) );

3448 if(
sib
.
	`l¢
(Ë!
sib_l¢
) {

3449 
Àaf
.
	`unfix
();

3450 
sib
.
	`unfix
();

3451 
	`DBG
(<<"-->again");

3452 
agaö
;

3464 if(
√xt_⁄_√xt_∑ge
) {

3465 
sib
.
	`unfix
();

3472 
lockid_t
 
kvl
;

3473 
	`mk_kvl
(
cc
, 
kvl
, 
°id
, 
unique
, 
key
, 
ñ
);

3476 #i‡
W_DEBUG_LEVEL
 > 2

3477 
	`w_as£π3
(
Àaf
.
	`is_fixed
());

3478 if(
sib
.
	`is_fixed
()) {

3479 
	`w_as£π3
(
sib_pid
 !
Àaf_pid
);

3482 
rc
 = 
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
, 
WAIT_IMMEDIATE
);

3483 i‡(
rc
.
	`is_îr‹
()) {

3484 
	`DBG
(<<"rc=" << 
rc
);

3485 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

3487 
Àaf
.
	`unfix
();

3488 
sib
.
	`unfix
();

3489 
	`W_DO
–
lm
->
	`lock
(
kvl
, 
this_mode
, 
this_duøti⁄
) );

3491 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3492 
	`W_DO
–
Àaf
.
	`fix
(
Àaf_pid
, 
fix_œtch
) );

3493 if(
Àaf
.
	`l¢
(Ë!
Àaf_l¢
) {

3494 
Àaf
.
	`unfix
();

3495 
	`DBG
(<<"-->again");

3496 
agaö
;

3505 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3507 if(!
tŸÆ_m©ch
) {

3508  
	`RC
(
eNOTFOUND
);

3539 if(
¶Ÿ
 =0 || slŸ =
Àaf
.
	`ƒecs
()-1) {

3541 
rc_t
 
rc
;

3550 
œtch_mode_t
 
åì_œtch_mode
 = (
Àaf
.
	`ƒecs
()==1Ë? 
LATCH_EX
 : 
LATCH_SH
;

3552 
	`SSMTEST
("btree.remove.2");

3554 
smo_p1mode
 = 
LATCH_EX
;

3555 if(
bIgn‹eL©ches
) {

3556 
åì_œtch_mode
 = (åì_œtch_mode==
LATCH_EX
)?
LATCH_NLX
:
LATCH_NLS
;

3557 
smo_p1mode
 = 
LATCH_NLX
;

3559 
w_îr‹_t
::
îr_num_t
 
r˚
 =

3560 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
åì_œtch_mode
,

3561 
Àaf
, 
smo_p1mode
, 
sib
.
	`is_fixed
(), &sib, sib.
	`œtch_mode
(), 
bIgn‹eL©ches
);

3563 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

3564 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

3565 
	`w_as£π2
(! 
∑ª¡
.
	`is_fixed
());

3567 if(
r˚
) {

3568 
åì_roŸ
.
	`unfix
();

3569 if(
r˚
 =
eRETRY
) {

3570 
Àaf
.
	`unfix
();

3571 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

3572 << (
åì_roŸ
.
	`œtch_mode
())

3574 
agaö
;

3576  
	`RC
(
r˚
);

3578 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

3582 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3590 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

3592 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

3593 
	`DBGTHRD
(<<"Üóf: " << 
Àaf
.
	`pid
(Ë<< "Ñemovög slŸ " << 
¶Ÿ
);

3595 
	`W_DO
–
Àaf
.
	`ªmove
(
¶Ÿ
,Üóf.
	`is_com¥es£d
() ) );

3596 
	`DBGTHRD
(<<"Ñemoved slŸ " << 
¶Ÿ
);

3598 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

3600 
	`SSMTEST
("btree.remove.3");

3605 
rc_t
 
rc
 = 
	`log_båì_ªmove
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ
, 
unique
);

3606 
cou¡
=10;

3607 
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eRETRY
Ë&& (--
cou¡
 > 0)) {

3608 
rc
 = 
	`log_båì_ªmove
(
Àaf
, 
¶Ÿ
, 
key
, 
ñ
, 
unique
);

3610 
	`SSMTEST
("btree.remove.4");

3611 i‡(
rc
.
	`is_îr‹
()) {

3615 
x˘_log_swôch_t
 
	`toggÀ
(
OFF
);

3616 
	`DBG
(<<"Re-ö£π i¿Àa‡© slŸ " << 
¶Ÿ
);

3617 
w_rc_t
 
rc2
 = 
Àaf
.
	`ö£π
(
key
, 
ñ
, 
¶Ÿ
);

3618 if(
rc2
.
	`is_îr‹
()) {

3619 
	`DBG
(<<"rc" << 
rc
);

3620 
Àaf
.
	`disˇrd
();

3621  
rc2
.
	`ª£t
();

3625 if(
rc
.
	`îr_num
(Ë=
eRETRY
) {

3626 
Àaf
.
	`disˇrd
();

3628  
rc
.
	`ª£t
();

3630 
	`w_as£π9
(!
smÀvñ_1
::
log
 || 
	`me
()->
	`x˘
()->
	`is_log_⁄
());

3631 
	`SSMTEST
("btree.remove.5");

3633 
	`DBGTHRD
(<<"Üogged ");

3643 if–! 
åì_roŸ
.
	`is_fixed
() ) {

3645 
	`w_as£π9
(
Àaf
.
	`is_Àaf
());

3646 
	`SSMTEST
("btree.remove.6");

3647 #i‡
BTREE_LOG_COMMENT_ON


3648 
	`W_DO
(
	`log_commít
("set_delete"));

3650 
	`DBGTHRD
(<<" set_delete ");

3653 
	`W_DO
–
Àaf
.
	`£t_dñëe
() );

3656 
	`SSMTEST
("btree.remove.7");

3657 i‡(
Àaf
.
	`ƒecs
() == 0) {

3658 #i‡
BTREE_LOG_COMMENT_ON


3659 
	`W_DO
(
	`log_commít
("beginÑemoveÜeaf"));

3670 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3671 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3672 
smo_p2mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3673 
w_îr‹_t
::
îr_num_t
 
r˚
;

3674 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
åue
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,Årue,

3675 &
sib
, 
smo_p2mode
, 
bIgn‹eL©ches
);

3678 
	`DBGTHRD
(<<"Ñc" << 
rc
);

3680 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

3681 
	`w_as£π2
(! 
∑ª¡
.
	`is_fixed
());

3682 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

3684 if(
r˚
) {

3685 if(
r˚
 =
eRETRY
) {

3687 
Àaf
.
	`unfix
();

3688 
sib
.
	`unfix
();

3689 
	`SSMTEST
("btree.remove.8");

3690 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

3691 << (
åì_roŸ
.
	`œtch_mode
())

3693 
agaö
;

3695 
åì_roŸ
.
	`unfix
();

3696  
	`RC
(
r˚
);

3699 
	`SSMTEST
("btree.remove.9");

3700 if(
sib_pid
.
∑ge
) {

3706 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

3707 if(!
sib
.
	`is_fixed
()) {

3708 
	`W_DO
(
sib
.
	`fix
(
sib_pid
, 
fix_œtch
));

3709 } i‡(
bIgn‹eL©ches
) {

3713 if(
sib
.
	`œtch_mode
(Ë!
LATCH_NLX
) {

3714 
sib
.
	`unfix
();

3715 
	`W_DO
(
sib
.
	`fix
(
sib_pid
, 
LATCH_NLX
));

3717 } i‡(
sib
.
	`œtch_mode
(Ë!
LATCH_EX
) {

3718 #i‡
COMMENT


3723 
boﬁ
 
would_block
 = 
Ál£
;

3724 
	`W_DO
(
sib
.
	`upgøde_œtch_if_nŸ_block
(
would_block
));

3725 
	`w_as£π9
(!
would_block
);

3727 
sib
.
	`upgøde_œtch
(
LATCH_EX
);

3731 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3732 
	`DBGTHRD
(<<" calling unlink&propogate ");

3733 
	`W_DO
(
Àaf
.
	`u∆ök_™d_¥›ag©e
(
key
, 
ñ
, 
sib
, 
∑ª¡_pid
,

3734 
åì_roŸ
.
	`pid
(), 
bIgn‹eL©ches
));

3735 
	`SSMTEST
("btree.remove.10");

3737 #i‡
BTREE_LOG_COMMENT_ON


3738 
	`W_DO
(
	`log_commít
("endÑemoveÜeaf"));

3744 if(!
bIgn‹eL©ches
) {

3745 
	`check_œtches
(
___s
,
___e
, ___s+___e);

3748  
RCOK
;

3749 
	}
}

3761 
rc_t


3762 
	gbåì_im∂
::
	$_lookup
(

3763 c⁄° 
Õid_t
& 
roŸ
,

3764 
boﬁ
 
unique
,

3765 
c⁄cuºícy_t
 
cc
,

3766 c⁄° 
cvec_t
& 
key
,

3767 c⁄° 
cvec_t
& 
ñem
,

3768 
boﬁ
& 
found
,

3769 
bt_curs‹_t
* 
curs‹
,

3770 * 
ñ
,

3771 
smsize_t
& 
ñí
,

3772 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

3774 
	`FUNC
(
båì_im∂
::
_lookup
);

3776 if(!
bIgn‹eL©ches
) {

3777 
	`gë_œtches
(
___s
,
___e
);

3780 
rc_t
 
rc
;

3782 
	`INC_TSTAT
(
bt_föd_˙t
);

3783 
°id_t
 
°id
 = 
roŸ
.
	`°id
();

3786 
åì_œtch
 
	`åì_roŸ
(
roŸ
, 
bIgn‹eL©ches
);

3787 
Õid_t
 
£¨ch_°¨t_pid
 = 
roŸ
;

3788 
l¢_t
 
£¨ch_°¨t_l¢
 =Ü¢_t::
nuŒ
;

3789 
boﬁ
 
fú°_ª°¨t
 = 
åue
;

3792 
œtch_mode_t
 
åavî£_œtch
;

3793 
œtch_mode_t
 
smo_mode
;

3794 
œtch_mode_t
 
smo_p1mode
;

3795 
œtch_mode_t
 
fix_œtch
;

3797 if(!
bIgn‹eL©ches
) {

3798 
	`check_œtches
(
___s
,
___e
, ___s+___e);

3801 
agaö
:

3802 
	`DBGTHRD
(<<"_lookup.again");

3807 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

3809 
båì_p
 
Àaf
;

3810 
båì_p
 
p2
;

3811 
båì_p
* 
chûd
 = &
Àaf
;

3812 
båì_p
 
∑ª¡
;

3814 
l¢_t
 
Àaf_l¢
, 
∑ª¡_l¢
;

3815 
¶Ÿid_t
 
¶Ÿ
;

3816 
lockid_t
 
kvl
;

3818 
found
 = 
Ál£
;

3825 
åavî£_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3826 
	`W_DO
–
	`_åavî£
(
roŸ
, 
£¨ch_°¨t_pid
, 
£¨ch_°¨t_l¢
, 
key
, 
ñem
, 
found
,

3827 
åavî£_œtch
, 
Àaf
, 
∑ª¡
, 
Àaf_l¢
, 
∑ª¡_l¢
,

3828 
bIgn‹eL©ches
) );

3830 if(!
bIgn‹eL©ches
) {

3831 
	`check_œtches
(
___s
+2,
___e
, ___s+___e+2);

3834 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

3835 
	`w_as£π9
(
Àaf
.
	`is_Àaf
());

3837 
	`w_as£π9
(
∑ª¡
.
	`is_fixed
());

3838 
	`w_as£π9
(
∑ª¡
.
	`is_node
(Ë|| (∑ª¡.
	`is_Àaf
() &&

3839 
Àaf
.
	`pid
(Ë=
roŸ
 ));

3840 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

3848 if(
fú°_ª°¨t
) {

3849 
£¨ch_°¨t_pid
 = 
∑ª¡
.
	`pid
();

3850 
£¨ch_°¨t_l¢
 = 
∑ª¡
.
	`l¢
();

3851 
fú°_ª°¨t
 = 
Ál£
;

3853 
£¨ch_°¨t_pid
 = 
roŸ
;

3854 
£¨ch_°¨t_l¢
 = 
l¢_t
::
nuŒ
;

3865 
uöt
 
wh©ˇ£
;

3866 
	`W_DO
(
	`_ßtisfy
(
Àaf
, 
key
, 
ñem
, 
found
,

3867 
tŸÆ_m©ch
, 
¶Ÿ
, 
wh©ˇ£
));

3869 if(
curs‹
 && curs‹->
	`is_backw¨d
(Ë&& !
tŸÆ_m©ch
) {

3872 if(
¶Ÿ
>0) {

3875 
¶Ÿ
 --;

3876 
	`DBG
(<<" movög slŸ back o√: slŸ=" << 
¶Ÿ
);

3878 if(
¶Ÿ
 < 
Àaf
.
	`ƒecs
()) {

3879 
wh©ˇ£
 = 
m_ßtisfyög_key_found_ßme_∑ge
;

3882 
	`DBGTHRD
(<<"found = " << 
found


3883 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


3884 << "Üóf=" << 
Àaf
.
	`pid
()

3885 << " ca£=" << 
wh©ˇ£


3886 << " slŸ=" << 
¶Ÿ
);

3891 
wh©ˇ£
) {

3892 
m_ßtisfyög_key_found_ßme_∑ge
:{

3897 
∑ª¡
.
	`unfix
();

3900 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
: {

3907 
	`w_as£π9
(
Àaf
.
	`ƒecs
());

3908 
	`w_as£π9
(
Àaf
.
	`√xt
());

3917 
∑ª¡
.
	`unfix
();

3919 
Õid_t
 
pid
 = 
roŸ
;

3920 
pid
.
∑ge
 = 
Àaf
.
	`√xt
();

3922 
	`INC_TSTAT
(
bt_löks
);

3923 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3924 
	`W_DO
–
p2
.
	`fix
(
pid
, 
fix_œtch
) );

3928 
¶Ÿ
 = -1;

3929 
	`W_DO
–
	`_ßtisfy
(
p2
, 
key
, 
ñem
, 
found
, 
tŸÆ_m©ch
,

3930 
¶Ÿ
, 
wh©ˇ£
));

3932 
	`DBGTHRD
(<<"found = " << 
found


3933 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


3934 << "Üóf=" << 
Àaf
.
	`pid
()

3935 << " ca£=" << 
wh©ˇ£


3936 << " slŸ=" << 
¶Ÿ
);

3938 
	`w_as£π9
(
wh©ˇ£
 !
m_nŸ_found_íd_of_fûe
);

3939 if(
wh©ˇ£
 =
m_ßtisfyög_key_found_ßme_∑ge
) {

3946 if(
¶Ÿ
 > 0) {

3947 
Àaf
.
	`unfix
();

3949 
chûd
 = &
p2
;

3953 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3954 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

3955 
w_îr‹_t
::
îr_num_t
 
MAYBE_UNUSED
 
r˚
;

3957 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

3958 
Ál£
, &
p2
, 
LATCH_NL
, 
bIgn‹eL©ches
);

3963 #w¨nög 
Edge
 ?

3965 
åì_roŸ
.
	`unfix
();

3967 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

3968 << (
åì_roŸ
.
	`œtch_mode
())

3973 
	`DBG
(<<"-->again NO TREE LATCH");

3974 
agaö
;

3978 
m_nŸ_found_íd_of_fûe
:{

3981 
¶Ÿ
 = -1;

3982 if(
curs‹
) {

3983 
curs‹
->
kìp_goög
 = 
Ál£
;

3984 
curs‹
->
	`‰ì_ªc
();

3987 
	`w_as£π9
–!
tŸÆ_m©ch
 );

3991 
m_nŸ_found_∑ge_is_em±y
: {

3994 
	`w_as£π9
(
wh©ˇ£
 =
m_nŸ_found_∑ge_is_em±y
);

3995 
	`w_as£π9
(
Àaf
.
	`ƒecs
() == 0);

3998 
	`w_as£π1
(
Àaf
.
	`is_smo
(Ë|| 
roŸ
 =Àaf.
	`pid
());

4000 if(
Àaf
.
	`is_smo
()) {

4001 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4002 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4004 
w_îr‹_t
::
îr_num_t
 
r˚
;

4005 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

4006 
Ál£
, &
∑ª¡
, 
LATCH_NL
,

4007 
bIgn‹eL©ches
);

4008 
åì_roŸ
.
	`unfix
();

4009 if(
r˚
 && (r˚ !
eRETRY
)) {

4010  
	`RC
(
r˚
);

4013 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

4014 << (
åì_roŸ
.
	`œtch_mode
())

4016 
agaö
;

4019 
¶Ÿ
 = -1;

4020 
wh©ˇ£
 = 
m_nŸ_found_íd_of_fûe
;

4025 
	`W_FATAL_MSG
(
fcINTERNAL
, << "bad swôch vÆuêf‹ ca£ :" << 
wh©ˇ£
 );

4029 if(
curs‹
) {

4031 
curs‹
->
	`upd©e_l¢
(*
chûd
);

4044 
båec_t
 
ªc
;

4046 if(
¶Ÿ
 < 0) {

4047 
	`w_as£π9
(
wh©ˇ£
 =
m_nŸ_found_íd_of_fûe
);

4048 if(
cc
 > 
t_cc_n⁄e
Ë
	`mk_kvl_eof
(cc, 
kvl
, 
°id
);

4050 
	`w_as£π9
(
¶Ÿ
 < 
chûd
->
	`ƒecs
());

4051 if(
curs‹
) {

4053 
	`W_DO
(
curs‹
->
	`make_ªc
(*
chûd
, 
¶Ÿ
));

4058 
ªc
.
	`£t
(*
chûd
, 
¶Ÿ
);

4059 if(
cc
 > 
t_cc_n⁄e
Ë
	`mk_kvl
(cc, 
kvl
, 
°id
, 
unique
, 
ªc
);

4062 if–(!
found
 && !
tŸÆ_m©ch
) &&

4063 (
cc
 =
t_cc_modkvl
) ) {

4065 } i‡(
cc
 !
t_cc_n⁄e
) {

4069 
lock_mode_t
 
mode
 = 
curs‹
? curs‹->
	`mode
(Ë: 
SH
;

4070 
rc
 = 
lm
->
	`lock
(
kvl
, 
mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

4071 i‡(
rc
.
	`is_îr‹
()) {

4072 
	`DBG
(<<"rc=" << 
rc
);

4073 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
Ë|| (rc.îr_num(Ë=
eDEADLOCK
));

4079 
l¢_t
 
l¢
 = 
chûd
->
	`l¢
();

4080 
Õid_t
 
pid
 = 
chûd
->
	`pid
();

4081 
Àaf
.
	`unfix
();

4082 
chûd
->
	`unfix
();

4083 
∑ª¡
.
	`unfix
();

4086 
	`W_DO
–
lm
->
	`lock
(
kvl
, 
mode
, 
t_l⁄g
) );

4099 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4100 
	`W_DO
–
chûd
->
	`fix
(
pid
, 
fix_œtch
) );

4102 if(!
bIgn‹eL©ches
) {

4123 if(
curs‹
) {

4125 
	`W_DO
(
curs‹
->
	`make_ªc
(*
chûd
, 
¶Ÿ
));

4127 
ªc
.
	`£t
(*
chûd
, 
¶Ÿ
);

4130 i‡(
l¢
 =
chûd
->
	`l¢
(Ë&& chûd =&
Àaf
) {

4140 
	`DBGTHRD
(<<"->again");

4141 
agaö
;

4146 i‡(
found
) {

4148 if(!
curs‹
) {

4151 i‡(
ñ
) {

4152 i‡(
ñí
 < 
ªc
.
	`ñí
()) {

4153 
	`DBG
(<<"RECWONTFIT");

4154  
	`RC
(
eRECWONTFIT
);

4156 
ñí
 = 
ªc
.
	`ñí
();

4157 
ªc
.
	`ñem
().
	`c›y_to
(
ñ
, 
ñí
);

4168 if(!
bIgn‹eL©ches
) {

4169 
	`check_œtches
(
___s
,
___e
, ___s+___e);

4171  
RCOK
;

4172 
	}
}

4184 
rc_t


4185 
	gbåì_im∂
::
	$_upd©e
(

4186 c⁄° 
Õid_t
& 
roŸ
,

4187 
boﬁ
 
unique
,

4188 
c⁄cuºícy_t
 
cc
,

4189 c⁄° 
cvec_t
& 
key
,

4190 c⁄° 
cvec_t
& 
ﬁd_ñ
,

4191 c⁄° 
cvec_t
& 
√w_ñ
,

4192 
boﬁ
& 
found
,

4193 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

4195 
	`FUNC
(
båì_im∂
::
_upd©e
);

4197 if(!
bIgn‹eL©ches
) {

4198 
	`gë_œtches
(
___s
,
___e
);

4201 
rc_t
 
rc
;

4204 
	`INC_TSTAT
(
bt_upd©e_˙t
);

4205 
°id_t
 
°id
 = 
roŸ
.
	`°id
();

4208 
åì_œtch
 
	`åì_roŸ
(
roŸ
, 
bIgn‹eL©ches
);

4209 
Õid_t
 
£¨ch_°¨t_pid
 = 
roŸ
;

4210 
l¢_t
 
£¨ch_°¨t_l¢
 =Ü¢_t::
nuŒ
;

4213 
œtch_mode_t
 
åavî£_œtch
;

4214 
œtch_mode_t
 
smo_mode
;

4215 
œtch_mode_t
 
smo_p1mode
;

4216 
œtch_mode_t
 
fix_œtch
;

4218 if(!
bIgn‹eL©ches
) {

4219 
	`check_œtches
(
___s
,
___e
, ___s+___e);

4222 
agaö
:

4223 
	`DBGTHRD
(<<"_lookup.again");

4228 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

4230 
båì_p
 
Àaf
;

4231 
båì_p
 
p2
;

4232 
båì_p
* 
chûd
 = &
Àaf
;

4233 
båì_p
 
∑ª¡
;

4235 
l¢_t
 
Àaf_l¢
, 
∑ª¡_l¢
;

4236 
¶Ÿid_t
 
¶Ÿ
;

4237 
lockid_t
 
kvl
;

4239 
found
 = 
Ál£
;

4246 
åavî£_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4247 
	`W_DO
–
	`_åavî£
(
roŸ
, 
£¨ch_°¨t_pid
, 
£¨ch_°¨t_l¢
, 
key
, 
ﬁd_ñ
,

4248 
found
, 
åavî£_œtch
, 
Àaf
, 
∑ª¡
, 
Àaf_l¢
,

4249 
∑ª¡_l¢
, 
bIgn‹eL©ches
) );

4251 if(!
bIgn‹eL©ches
) {

4252 
	`check_œtches
(
___s
+2,
___e
, ___s+___e+2);

4255 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

4256 
	`w_as£π9
(
Àaf
.
	`is_Àaf
());

4258 
	`w_as£π9
(
∑ª¡
.
	`is_fixed
());

4259 
	`w_as£π9
(
∑ª¡
.
	`is_node
(Ë|| (∑ª¡.
	`is_Àaf
() &&

4260 
Àaf
.
	`pid
(Ë=
roŸ
 ));

4261 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

4268 
£¨ch_°¨t_pid
 = 
∑ª¡
.
	`pid
();

4269 
£¨ch_°¨t_l¢
 = 
∑ª¡
.
	`l¢
();

4279 
uöt
 
wh©ˇ£
;

4280 
	`W_DO
(
	`_ßtisfy
(
Àaf
, 
key
, 
ﬁd_ñ
, 
found
,

4281 
tŸÆ_m©ch
, 
¶Ÿ
, 
wh©ˇ£
));

4283 
	`DBGTHRD
(<<"found = " << 
found


4284 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


4285 << "Üóf=" << 
Àaf
.
	`pid
()

4286 << " ca£=" << 
wh©ˇ£


4287 << " slŸ=" << 
¶Ÿ
);

4292 
wh©ˇ£
) {

4293 
m_ßtisfyög_key_found_ßme_∑ge
:{

4298 
∑ª¡
.
	`unfix
();

4301 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
: {

4308 
	`w_as£π9
(
Àaf
.
	`ƒecs
());

4309 
	`w_as£π9
(
Àaf
.
	`√xt
());

4318 
∑ª¡
.
	`unfix
();

4320 
Õid_t
 
pid
 = 
roŸ
;

4321 
pid
.
∑ge
 = 
Àaf
.
	`√xt
();

4323 
	`INC_TSTAT
(
bt_löks
);

4324 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4325 
	`W_DO
–
p2
.
	`fix
(
pid
, 
fix_œtch
) );

4329 
¶Ÿ
 = -1;

4330 
	`W_DO
–
	`_ßtisfy
(
p2
, 
key
, 
ﬁd_ñ
, 
found
, 
tŸÆ_m©ch
,

4331 
¶Ÿ
, 
wh©ˇ£
));

4333 
	`DBGTHRD
(<<"found = " << 
found


4334 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


4335 << "Üóf=" << 
Àaf
.
	`pid
()

4336 << " ca£=" << 
wh©ˇ£


4337 << " slŸ=" << 
¶Ÿ
);

4339 
	`w_as£π9
(
wh©ˇ£
 !
m_nŸ_found_íd_of_fûe
);

4340 if(
wh©ˇ£
 =
m_ßtisfyög_key_found_ßme_∑ge
) {

4347 if(
¶Ÿ
 > 0) {

4348 
Àaf
.
	`unfix
();

4350 
chûd
 = &
p2
;

4354 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4355 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4356 
w_îr‹_t
::
îr_num_t
 
MAYBE_UNUSED
 
r˚
;

4358 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

4359 
Ál£
, &
p2
, 
LATCH_NL
, 
bIgn‹eL©ches
);

4364 #w¨nög 
Edge
 ?

4366 
åì_roŸ
.
	`unfix
();

4368 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

4369 << (
åì_roŸ
.
	`œtch_mode
())

4374 
	`DBG
(<<"-->again NO TREE LATCH");

4375 
agaö
;

4379 
m_nŸ_found_íd_of_fûe
:{

4382 
¶Ÿ
 = -1;

4383 
	`w_as£π9
–!
tŸÆ_m©ch
 );

4387 
m_nŸ_found_∑ge_is_em±y
: {

4390 
	`w_as£π9
(
wh©ˇ£
 =
m_nŸ_found_∑ge_is_em±y
);

4391 
	`w_as£π9
(
Àaf
.
	`ƒecs
() == 0);

4394 
	`w_as£π1
(
Àaf
.
	`is_smo
(Ë|| 
roŸ
 =Àaf.
	`pid
());

4396 if(
Àaf
.
	`is_smo
()) {

4397 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4398 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4400 
w_îr‹_t
::
îr_num_t
 
r˚
;

4401 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
smo_mode
, 
Àaf
, 
smo_p1mode
,

4402 
Ál£
, &
∑ª¡
, 
LATCH_NL
,

4403 
bIgn‹eL©ches
);

4404 
åì_roŸ
.
	`unfix
();

4405 if(
r˚
 && (r˚ !
eRETRY
)) {

4406  
	`RC
(
r˚
);

4409 
	`DBGTHRD
(<<"-->again TREE LATCH MODE "

4410 << (
åì_roŸ
.
	`œtch_mode
())

4412 
agaö
;

4415 
¶Ÿ
 = -1;

4416 
wh©ˇ£
 = 
m_nŸ_found_íd_of_fûe
;

4421 
	`W_FATAL_MSG
(
fcINTERNAL
, << "bad swôch vÆuêf‹ ca£ :" << 
wh©ˇ£
 );

4435 
båec_t
 
ªc
;

4437 if(
¶Ÿ
 < 0) {

4438 
	`w_as£π9
(
wh©ˇ£
 =
m_nŸ_found_íd_of_fûe
);

4439 if(
cc
 > 
t_cc_n⁄e
Ë
	`mk_kvl_eof
(cc, 
kvl
, 
°id
);

4441 
	`w_as£π9
(
¶Ÿ
 < 
chûd
->
	`ƒecs
());

4443 
ªc
.
	`£t
(*
chûd
, 
¶Ÿ
);

4444 if(
cc
 > 
t_cc_n⁄e
Ë
	`mk_kvl
(cc, 
kvl
, 
°id
, 
unique
, 
ªc
);

4447 if–(!
found
 && !
tŸÆ_m©ch
) &&

4448 (
cc
 =
t_cc_modkvl
) ) {

4450 } i‡(
cc
 !
t_cc_n⁄e
) {

4454 
lock_mode_t
 
mode
 = 
EX
;

4455 
rc
 = 
lm
->
	`lock
(
kvl
, 
mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

4456 i‡(
rc
.
	`is_îr‹
()) {

4457 
	`DBG
(<<"rc=" << 
rc
);

4458 
	`w_as£π9
((
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) ||

4459 (
rc
.
	`îr_num
(Ë=
eDEADLOCK
));

4464 
l¢_t
 
l¢
 = 
chûd
->
	`l¢
();

4465 
Õid_t
 
pid
 = 
chûd
->
	`pid
();

4466 
Àaf
.
	`unfix
();

4467 
chûd
->
	`unfix
();

4468 
∑ª¡
.
	`unfix
();

4471 
	`W_DO
–
lm
->
	`lock
(
kvl
, 
mode
, 
t_l⁄g
) );

4484 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

4485 
	`W_DO
–
chûd
->
	`fix
(
pid
, 
fix_œtch
) );

4486 i‡(
l¢
 =
chûd
->
	`l¢
(Ë&& chûd =&
Àaf
) {

4496 
	`DBGTHRD
(<<"->again");

4497 
agaö
;

4503 i‡(
found
) {

4504 
Õid_t
 
pid
 = 
chûd
->
	`pid
();

4505 
chûd
->
	`unfix
();

4506 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

4507 
	`W_DO
–
chûd
->
	`fix
(
pid
, 
fix_œtch
) );

4508 
	`W_DO
–
chûd
->
	`ovîwrôe
(
¶Ÿ
+1, 
ªc
.
	`kÀn
()+(
öt4_t
), 
√w_ñ
) );

4517 if(!
bIgn‹eL©ches
) {

4518 
	`check_œtches
(
___s
,
___e
, ___s+___e);

4520  
RCOK
;

4521 
	}
}

4546 
rc_t


4547 
	gbåì_im∂
::
	$_skù_⁄e_¶Ÿ
(

4548 
båì_p
& 
p1
,

4549 
båì_p
& 
p2
,

4550 
båì_p
*& 
chûd
,

4551 
¶Ÿid_t
& 
¶Ÿ
,

4552 
boﬁ
& 
eof
,

4553 
boﬁ
& 
found
,

4554 
boﬁ
 
backw¨d
,

4555 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

4557 
	`FUNC
(
båì_im∂
::
_skù_⁄e_¶Ÿ
);

4558 
	`w_as£π9
–
p1
.
	`is_fixed
());

4559 
	`w_as£π9
(! 
p2
.
	`is_fixed
());

4560 
	`w_as£π9
(
chûd
 =&
p1
);

4563 
œtch_mode_t
 
fix_œtch
;

4565 
	`w_as£π9
(
¶Ÿ
 <
p1
.
	`ƒecs
());

4566 if(
backw¨d
) {

4567 --
¶Ÿ
;

4569 ++
¶Ÿ
;

4571 
eof
 = 
Ál£
;

4572 
found
 = 
åue
;

4573 
boﬁ
 
time2move
 = 
backw¨d
? 
¶Ÿ
 < 0 : (¶Ÿ >
p1
.
	`ƒecs
());

4575 i‡(
time2move
) {

4579 
Õid_t
 
pid
 = 
p1
.
	`pid
();

4580 i‡(! (
pid
.
∑ge
 = 
backw¨d
? 
p1
.
	`¥ev
(Ë:p1.
	`√xt
())) {

4584 
¶Ÿ
 = 
backw¨d
? -1: 
p1
.
	`ƒecs
();

4585 
eof
 = 
åue
;

4586  
RCOK
;

4588 
p1
.
	`unfix
();

4589 
	`DBGTHRD
(<<"fixög " << 
pid
);

4590 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4591 
	`W_DO
(
p2
.
	`fix
(
pid
, 
fix_œtch
));

4592 if(
p2
.
	`ƒecs
() == 0) {

4593 
	`w_as£π9
(
p2
.
	`is_smo
());

4594 
found
 = 
Ál£
;

4596 
chûd
 = &
p2
;

4597 
¶Ÿ
 = 
backw¨d
? 
p2
.
	`ƒecs
()-1 : 0;

4600 
	`w_as£π9
((
p1
.
	`is_fixed
(Ë&& !
p2
.is_fixed())

4601 || (
p2
.
	`is_fixed
(Ë&& !
p1
.is_fixed()));

4602  
RCOK
;

4603 
	}
}

4614 
rc_t


4615 
	gbåì_im∂
::
	$_shrök_åì
(
båì_p
& 
Ω
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

4617 
	`FUNC
(
båì_im∂
::
_shrök_åì
);

4618 
	`INC_TSTAT
(
bt_shröks
);

4621 
œtch_mode_t
 
fix_œtch
;

4622 
	`w_as£π3
(
Ω
.
	`œtch_mode
(Ë=
LATCH_EX
 ||Ñp.œtch_mode(Ë=
LATCH_NLX
);

4623 
	`w_as£π1
–
Ω
.
	`ƒecs
() == 0);

4624 
	`w_as£π1
–!
Ω
.
	`¥ev
(Ë&& !Ω.
	`√xt
() );

4626 
Õid_t
 
pid
 = 
Ω
.
	`pid
();

4627 i‡((
pid
.
∑ge
 = 
Ω
.
	`pid0
())) {

4632 
båì_p
 
˝
;

4633 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

4634 
	`W_DO
–
˝
.
	`fix
(
pid
, 
fix_œtch
) );

4636 
	`DBG
(<<"shrök " << 
Ω
.
	`pid
()

4637 << " fromÜevñ " << 
Ω
.
	`Àvñ
()

4638 << "Åÿ" << 
˝
.
	`Àvñ
());

4640 
	`w_as£π3
(
Ω
.
	`Àvñ
(Ë=
˝
.level() + 1);

4641 
	`w_as£π3
(!
˝
.
	`√xt
(Ë&& !˝.
	`¥ev
());

4642 
	`W_DO
–
Ω
.
	`£t_hdr
–Ω.
	`roŸ
().
∑ge
,

4643 
Ω
.
	`Àvñ
(Ë- 1, 
˝
.
	`pid0
(),

4644 (
uöt2_t
)(
Ω
.
	`is_com¥es£d
()?

4645 
båì_p
::
t_com¥es£d
: båì_p::
t_n⁄e
)) );

4647 
	`w_as£π3
(
Ω
.
	`Àvñ
(Ë=
˝
.level());

4649 
	`SSMTEST
("btree.shrink.1");

4651 i‡(
˝
.
	`ƒecs
()) {

4652 
	`W_DO
–
˝
.
	`shi·
(0, 
Ω
) );

4654 
	`SSMTEST
("btree.shrink.2");

4656 
	`w_as£π3
(
˝
.
	`œtch_mode
(Ë=
LATCH_EX
 || cp.œtch_mode(Ë=
LATCH_NLX
);

4657 
	`W_DO
–
io
->
	`‰ì_∑ge
(
pid
, 
Ál£
 ) );

4659 
	`INC_TSTAT
(
∑ge_båì_dóŒoc
);

4666 
	`DBG
(<<"shrök " << 
Ω
.
	`pid
()

4667 << " fromÜevñ " << 
Ω
.
	`Àvñ
()

4670 
	`W_DO
–
Ω
.
	`£t_hdr
‘p.
	`roŸ
().
∑ge
, 1, 0,

4671 (
uöt2_t
)(
Ω
.
	`is_com¥es£d
()?

4672 
båì_p
::
t_com¥es£d
: båì_p::
t_n⁄e
)) );

4674 
	`SSMTEST
("btree.shrink.3");

4675  
RCOK
;

4676 
	}
}

4688 
rc_t


4689 
	gbåì_im∂
::
	$_grow_åì
(
båì_p
& 
Ω
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

4691 
	`FUNC
(
båì_im∂
::
_grow_åì
);

4692 
	`INC_TSTAT
(
bt_grows
);

4695 
œtch_mode_t
 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

4700 if(
bIgn‹eL©ches
) {

4701 
Õid_t
 
Ωpid
 = 
Ω
.
	`pid
();

4702 if(
Ω
.
	`is_fixed
()ËΩ.
	`unfix
();

4703 
	`W_DO
(
Ω
.
	`fix
(
Ωpid
, 
fix_œtch
));

4705 
Ω
.
	`upgøde_œtch
(
fix_œtch
);

4707 
	`w_as£π9
(
Ω
.
	`œtch_mode
(Ë=
fix_œtch
);

4708 
	`w_as£π1
(
Ω
.
	`√xt
());

4709 
	`w_as£π9
(
Ω
.
	`is_smo
());

4714 
Õid_t
 
nxçid
 = 
Ω
.
	`pid
();

4715 
nxçid
.
∑ge
 = 
Ω
.
	`√xt
();

4716 
båì_p
 
≈
;

4719 
	`INC_TSTAT
(
bt_löks
);

4721 
	`W_DO
–
≈
.
	`fix
(
nxçid
, 
fix_œtch
) );

4722 
	`w_as£π1
(!
≈
.
	`√xt
());

4729 
båì_p
 
˝
;

4730 
	`W_DO
–
	`_Æloc_∑ge
(
Ω
.
	`pid
(),Ñp.
	`Àvñ
(),

4731 
≈
.
	`pid
(), 
˝
, 
Ω
.
	`pid0
(), 
åue
,Ñp.
	`is_com¥es£d
(),

4732 
°_ªguœr
, 
bIgn‹eL©ches
) );

4734 
	`W_DO
–
˝
.
	`lök_up
(
Ω
.
	`¥ev
(),Ñp.
	`√xt
()) );

4735 
	`W_DO
–
≈
.
	`lök_up
(
˝
.
	`pid
().
∑ge
,Çp.
	`√xt
()) );

4736 
	`W_DO
–
Ω
.
	`shi·
(0, 
˝
) );

4738 
	`w_as£π9
(
Ω
.
	`¥ev
() == 0);

4744 
	`SSMTEST
("btree.grow.1");

4745 
	`W_DO
–
Ω
.
	`lök_up
(0, 0) );

4747 
	`SSMTEST
("btree.grow.2");

4749 
	`DBGTHRD
(<<"growögÅÿÀvñ " << 
Ω
.
	`Àvñ
() + 1);

4750 
	`W_DO
–
Ω
.
	`£t_hdr
‘p.
	`roŸ
().
∑ge
,

4751 
Ω
.
	`Àvñ
() + 1,

4752 
˝
.
	`pid
().
∑ge
,

4753 (
uöt2_t
)(
Ω
.
	`is_com¥es£d
()? 
båì_p
::
t_com¥es£d
: båì_p::
t_n⁄e
)) );

4755 
	`w_as£π9
(
Ω
.
	`ƒecs
() == 0);

4757 
	`SSMTEST
("btree.grow.3");

4758  
RCOK
;

4759 
	}
}

4771 #ifde‡
EXPLICIT_TEMPLATE


4772 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gbåì_p
>;

4774 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<>;

4777 
rc_t


4778 
	gbåì_im∂
::
	$_¥›ag©e
(

4779 
Õid_t
 c⁄°& 
roŸ_pid
,

4780 c⁄° 
cvec_t
& 
key
,

4782 c⁄° 
cvec_t
& 
ñem
,

4783 c⁄° 
Õid_t
& 
_chûd_pid
,

4785 
chûd_Àvñ
,

4786 
boﬁ
 
isdñëe
,

4787 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

4789 
båì_p
 
roŸ
;

4790 
œtch_mode_t
 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4791 
roŸ
.
	`fix
(
roŸ_pid
, 
fix_œtch
);

4792 
	`w_as£π9
(
roŸ
.
	`is_fixed
());

4794 #i‡
BTREE_LOG_COMMENT_ON


4795 
	`W_DO
(
	`log_commít
("startÖropagate"));

4797 
Õid_t
 
chûd_pid
 = 
_chûd_pid
;

4810 
max_Àvñs
 = 
roŸ
.
	`Àvñ
();

4812 if(
max_Àvñs
 == 1) {

4813 i‡(
isdñëe
) {

4814 
	`DBG
(<<"tryingÅo shrinkáwayÅheÑoot");

4816 
	`w_as£π9
(
roŸ
.
	`is_fixed
());

4817 
	`w_as£π9
(
roŸ
.
	`œtch_mode
()==
LATCH_EX
 ||ÑoŸ.œtch_mode()==
LATCH_NLX
);

4818 
	`w_as£π9
(0);

4819  
RCOK
;

4822 
	`w_as£π9
(
chûd_pid
 =
roŸ
.
	`pid
());

4825 
	`DBG
(<<"LEAF == ROOT");

4826 
	`w_as£π9
(
roŸ
.
	`√xt
());

4828 
	`W_DO
(
	`_grow_åì
(
roŸ
, 
bIgn‹eL©ches
));

4829 
	`w_as£π9
(
roŸ
.
	`Àvñ
() > 1);

4830 
	`w_as£π9
(
roŸ
.
	`ƒecs
() == 0);

4831 
	`w_as£π9
(!
roŸ
.
	`√xt
());

4832 
	`w_as£π9
(
roŸ
.
	`pid0
() != 0 );

4834 
chûd_pid
.
∑ge
 = 
roŸ
.
	`pid0
();

4835 
	`DBGTHRD
(<<"Pr›ag©ög s∂ôÜó‡∑gê" << 
chûd_pid


4836 << " i¡ÿroŸÖagê" << 
roŸ
.
	`pid
()

4838 
boﬁ
 
was_•lô
 = 
Ál£
;

4841 
båì_p
 
∑ª¡
 = 
roŸ
;

4842 
	`W_DO
(
	`_¥›ag©e_•lô
(
∑ª¡
, 
chûd_pid
, -1, 
was_•lô
, 
bIgn‹eL©ches
));

4843 
	`w_as£π9
(!
was_•lô
);

4844 
	`w_as£π9
(!
∑ª¡
.
	`is_fixed
());

4845  
RCOK
;

4849 
båì_p
* 
p
 = 
√w
 båì_p[
max_Àvñs
];

4850 
Õid_t
* 
pid
 = 
√w
Üpid_t[
max_Àvñs
];

4851 
¶Ÿid_t
* 
¶Ÿ
 = 
√w
 slŸid_t[
max_Àvñs
];

4853 if(!
p
 || !
pid
 || !
¶Ÿ
) {

4854 
	`W_FATAL
(
eOUTOFMEMORY
);

4856 
w_auto_dñëe_¨øy_t
<
båì_p
> 
	`auto_dñ_p
(
p
);

4857 
w_auto_dñëe_¨øy_t
<
Õid_t
> 
	`auto_dñ_pid
(
pid
);

4858 
w_auto_dñëe_¨øy_t
<
¶Ÿid_t
> 
	`auto_dñ_¶Ÿ
(
¶Ÿ
);

4860 
t›
 = 0;

4861 
pid
[
t›
] = 
roŸ
.
	`pid
();

4862 
p
[
t›
] = 
roŸ
;

4863 
roŸ
.
	`unfix
();

4883  ; 
t›
 < 
max_Àvñs
;Åop++ ) {

4885 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

4886 
boﬁ
 
found_key
 = 
Ál£
;

4888 
	`DBG
(<<"INSPECTING " << 
t›
 << "Öid " << 
pid
[top] );

4889 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

4890 
	`W_DO
–
p
[
t›
].
	`fix
(
pid
[t›], 
fix_œtch
) );

4892 #i‡
W_DEBUG_LEVEL
 > 3

4893 if(
¥öt_¥›ag©e
) {

4894 
	`DBG
(<<"t›=" << 
t›
 << "Öage=" << 
pid
[top]

4895 << " is_Àaf=" << 
p
[
t›
].
	`is_Àaf
());

4896 
p
[
t›
].
	`¥öt
();

4900 
	`w_as£π9
(
p
[
t›
].
	`is_fixed
());

4901 
	`w_as£π9
(
p
[
t›
].
	`is_node
());

4902 
	`w_as£π9
(! 
p
[
t›
].
	`is_smo
() );

4905 
	`w_as£π9
(
p
[
t›
].
	`ƒecs
(Ë> 0 ||Ö[t›].
	`pid0
() != 0);

4908 
	`DBG
(<<"SEARCHING " << 
t›
 << "Öagê" << 
p
[t›].
	`pid
(Ë<< " f‹ " << 
key
);

4909 
	`W_DO
(
p
[
t›
].
	`£¨ch
(
key
, 
ñem
, 
found_key
, 
tŸÆ_m©ch
, 
¶Ÿ
[top]));

4912 
	`w_as£π9
(
¶Ÿ
[
t›
] >= 0);

4913 if(!
tŸÆ_m©ch
Ë--
¶Ÿ
[
t›
];

4915 
¶Ÿid_t
 
chûd_¶Ÿ
 = 
¶Ÿ
[
t›
];

4917 
Õid_t
 
found_pid
 = 
pid
[
t›
];

4918 
found_pid
.
∑ge
 = (
chûd_¶Ÿ
<0Ë? 
p
[
t›
].
	`pid0
() :

4919 
p
[
t›
].
	`chûd
(
chûd_¶Ÿ
) ;

4921 
	`DBG
(<<"LOCATED PID (t›=" << 
t›
 << "Ë∑gê" << 
found_pid


4922 << " f‹ key " << 
key
);

4928 if(
p
[
t›
].
	`Àvñ
(Ë<
chûd_Àvñ
 + 1) {

4929 
	`w_as£π9
(
chûd_pid
 =
found_pid
);

4932 if(
t›
>0Ë
p
[t›].
	`unfix
();

4933 
pid
[
t›
+1] = 
found_pid
;

4942 
	`DBG
(<<"ªached chûdáàÀvñ " << 
p
[
t›
].
	`Àvñ
());

4944 
	`w_as£π9
(
t›
 < 
max_Àvñs
);

4946  
t›
 >= 0 ) {

4947 
	`DBG
(<<"t›=" << 
t›
 << "Öid=" << 
pid
[t›] << " slŸ " << 
¶Ÿ
[top]);

4954 
	`w_as£π9
(
p
[
t›
].
	`is_fixed
());

4955 i‡(
bIgn‹eL©ches
) {

4959 if(
p
[
t›
].
	`œtch_mode
(Ë!
LATCH_NLX
) {

4960 
Õid_t
 
±›pid
 = 
p
[
t›
].
	`pid
();

4961 
p
[
t›
].
	`unfix
();

4962 
	`W_DO
(
p
[
t›
].
	`fix
(
±›pid
, 
LATCH_NLX
));

4964 } if(
p
[
t›
].
	`œtch_mode
(Ë!
LATCH_EX
) {

4966 #i‡
W_DEBUG_LEVEL
 > 3

4967 
boﬁ
 
would_block
 = 
Ál£
;

4968 
	`W_DO
(
p
[
t›
].
	`upgøde_œtch_if_nŸ_block
(
would_block
));

4969 if(
would_block
) {

4971 
	`DBG
(<<"BF-CLEANER? clash" );

4974 
p
[
t›
].
	`upgøde_œtch
(
LATCH_EX
);

4977 if(
isdñëe
) {

4978 
	`DBGTHRD
(<<"Dñëög chûdÖagê" << 
chûd_pid


4979 << "ánd cuâög ià‰om slŸ " << 
¶Ÿ
[
t›
]

4980 << " o‡∑gê" << 
pid
[
t›
]

4983 
	`W_DO
(
p
[
t›
].
	`cut_∑ge
(
chûd_pid
, 
¶Ÿ
[top]));

4985 if(
p
[
t›
].
	`pid0
()) {

4986 
	`DBG
(<<"NŸÉm±y; quôáàt›" << 
t›
);

4987 
p
[
t›
].
	`unfix
();

4991 
	`DBGTHRD
(<<"In£πög chûdÖagê" << 
chûd_pid


4992 << " i¿¶Ÿ " << 
¶Ÿ
[
t›
]

4993 << " o‡∑gê" << 
pid
[
t›
]

4995 #i‡
W_DEBUG_LEVEL
 > 3

4997 
	`DBG
(<<"RE-SEARCHING " << 
t›
 << "Öagê" << 
p
[t›].
	`pid
(Ë<< " f‹ " << 
key
);

4998 
¶Ÿid_t
 
chûd_¶Ÿ
=0;

4999 
boﬁ
 
found_key
=
Ál£
;

5000 
boﬁ
 
tŸÆ_m©ch
=
Ál£
;

5002 
	`W_DO
(
p
[
t›
].
	`£¨ch
(
key
, 
ñem
, 
found_key
,

5003 
tŸÆ_m©ch
, 
chûd_¶Ÿ
));

5004 if(!
tŸÆ_m©ch
Ë
chûd_¶Ÿ
--;

5005 
	`w_as£π3
(
chûd_¶Ÿ
 =
¶Ÿ
[
t›
]);

5008 
	`w_as£π9
(
¶Ÿ
[
t›
] >-1 && slŸ[t›] < 
p
[t›].
	`ƒecs
());

5010 
boﬁ
 
was_•lô
 = 
Ál£
;

5011 
	`DBG
(<<"PROPAGATING SPLIT by inserting <key,pid> ="

5012 << 
key
 << "," << 
chûd_pid


5013 << " INTOÖagê" << 
p
[
t›
].
	`pid
());

5015 
	`W_DO
(
	`_¥›ag©e_•lô
(
p
[
t›
], 
chûd_pid
, 
¶Ÿ
[t›], 
was_•lô
, 
bIgn‹eL©ches
));

5018 if–!
was_•lô
) {

5019 
	`DBG
(<<"Nÿ•lô; quôáàt› =" << 
t›
);

5023 
	`DBG
(<<"t›=" << 
t›
);

5024 if–
t›
 == 0 ) {

5027 
	`w_as£π9
(
roŸ_pid
 =
pid
[
t›
]);

5028 if(
isdñëe
) {

5029 
	`W_DO
(
	`_shrök_åì
(
p
[
t›
], 
bIgn‹eL©ches
));

5033 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5034 
p
[
t›
].
	`fix
(
roŸ_pid
, 
fix_œtch
);

5035 
båì_p
 &
roŸ
 = 
p
[
t›
];

5036 
	`W_DO
(
	`_grow_åì
(
roŸ
, 
bIgn‹eL©ches
));

5037 
	`w_as£π9
(
roŸ
.
	`ƒecs
() == 0);

5038 
	`w_as£π9
(
roŸ
.
	`pid0
());

5039 
	`w_as£π9
(
roŸ
.
	`√xt
()==0);

5040 
chûd_pid
.
∑ge
 = 
roŸ
.
	`pid0
();

5043 #i‡
W_DEBUG_LEVEL
 > 3

5045 
båì_p
 
tmp
;

5046 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5047 
	`W_DO
(
tmp
.
	`fix
(
chûd_pid
, 
fix_œtch
));

5048 
	`w_as£π2
(
tmp
.
	`√xt
() != 0);

5052 
¶Ÿ
[
t›
] = -1;

5057 
p
[
t›
].
	`unfix
();

5058 
chûd_pid
 = 
pid
[
t›
];

5059 --
t›
;

5060 #i‡
W_DEBUG_LEVEL
 > 2

5061 if(
pid
[
t›
] !
roŸ_pid
Ë
	`w_as£π3
(!
p
[t›].
	`is_fixed
());

5064 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5065 
	`W_DO
(
p
[
t›
].
	`fix
(
pid
[t›], 
fix_œtch
));

5070 #i‡
BTREE_LOG_COMMENT_ON


5071 
	`W_DO
(
	`log_commít
("endÖropagate"));

5074  
RCOK
;

5075 
	}
}

5077 
rc_t


5078 
	gbåì_im∂
::
	$_¥›ag©e_•lô
(

5079 
båì_p
& 
∑ª¡
,

5080 c⁄° 
Õid_t
& 
_pid
,

5081 
¶Ÿid_t
 
¶Ÿ
,

5084 
boﬁ
& 
was_•lô
,

5085 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

5088 #i‡
BTREE_LOG_COMMENT_ON


5089 
	`W_DO
(
	`log_commít
("startÖropagate_split"));

5093 
œtch_mode_t
 
fix_œtch
;

5095 
Õid_t
 
pid
 = 
_pid
;

5099 
båì_p
 
c1
;

5100 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5101 
	`W_DO
–
c1
.
	`fix
(
pid
, 
fix_œtch
) );

5102 #i‡
W_DEBUG_LEVEL
 > 3

5103 if(
¥öt_•lô
) {

5104 
	`DBG
(<<"LEAF being split :");

5105 
c1
.
	`¥öt
();

5109 
	`w_as£π9
–
c1
.
	`is_smo
() );

5110 
	`w_as£π9
–
c1
.
	`ƒecs
());

5111 
pid
.
∑ge
 = 
c1
.
	`√xt
();

5112 
båec_t
 
	`r1
(
c1
, c1.
	`ƒecs
() - 1);

5114 
båì_p
 
c2
;

5115 
	`INC_TSTAT
(
bt_löks
);

5118 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5119 
	`W_DO
–
c2
.
	`fix
(
pid
, 
fix_œtch
) );

5120 #i‡
W_DEBUG_LEVEL
 > 3

5121 if(
¥öt_•lô
) {

5122 
	`DBG
(<<"NEWÑight sibling :");

5123 
c2
.
	`¥öt
();

5126 
	`w_as£π9
–
c2
.
	`ƒecs
());

5127 
	`w_as£π9
–
c2
.
	`is_smo
() );

5129 #i‡
W_DEBUG_LEVEL
 > 3

5131 
	`w_as£π9
(
c2
.
	`pid0
() == 0);

5134 
shpid_t
 
chûdpid
 = 
pid
.
∑ge
;

5139 
båec_t
 
	`r2
(
c2
, 0);

5140 
vec_t
 
pkey
;

5141 
vec_t
 
≥Àm
;

5143 i‡(
c2
.
	`is_node
()) {

5144 
pkey
.
	`put
(
r2
.
	`key
());

5145 
≥Àm
.
	`put
(
r2
.
	`ñem
());

5152 
size_t
 
comm⁄_size
 = 0;

5153 
diff
 = 
cvec_t
::
	`cmp
(
r1
.
	`key
(), 
r2
.key(), &
comm⁄_size
);

5154 
	`DBGTHRD
(<<"dif‡" << 
diff
 << " comm⁄_sizê" << 
comm⁄_size
);

5155 i‡(
diff
) {

5156 i‡(
comm⁄_size
 < 
r2
.
	`key
().
	`size
()) {

5157 
pkey
.
	`put
(
r2
.
	`key
(), 0, 
comm⁄_size
 + 1);

5159 
	`w_as£π9
(
comm⁄_size
 =
r2
.
	`key
().
	`size
());

5160 
pkey
.
	`put
(
r2
.
	`key
());

5161 
≥Àm
.
	`put
(
r2
.
	`ñem
(), 0, 1);

5167 
pkey
.
	`put
(
r2
.
	`key
());

5168 
cvec_t
::
	`cmp
(
r1
.
	`ñem
(), 
r2
.ñem(), &
comm⁄_size
);

5169 
	`w_as£π9
(
comm⁄_size
 < 
r2
.
	`ñem
().
	`size
());

5170 
≥Àm
.
	`put
(
r2
.
	`ñem
(), 0, 
comm⁄_size
 + 1);

5173 
c1
.
	`unfix
();

5178 #i‡
W_DEBUG_LEVEL
 > 3

5179 if(
¥öt_•lô
) {

5180 
	`DBG
(<<"PARENT PAGE" );

5181 
∑ª¡
.
	`¥öt
();

5184 
rc_t
 
rc
 = 
∑ª¡
.
	`ö£π
(
pkey
, 
≥Àm
, ++
¶Ÿ
, 
c2
.
	`pid
().
∑ge
);

5186 #i‡
W_DEBUG_LEVEL
 > 3

5187 if(
¥öt_•lô
Ë{ 
∑ª¡
.
	`¥öt
(); }

5190 i‡(
rc
.
	`is_îr‹
()) {

5191 
	`DBG
(<<"rc" << 
rc
);

5192 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

5193  
	`RC_AUGMENT
(
rc
);

5198 
	`DBGTHRD
(<<"parent is full -- splitÖarentÇode");

5200 
Õid_t
 
rsib_∑ge
;

5201 
addôi⁄
 = (
pkey
.
	`size
(Ë+ 
≥Àm
.size(Ë+ 2 + (
shpid_t
));

5202 
boﬁ
 
À·_hóvy
;

5203 
	`SSMTEST
("btree.propagate.s.6");

5206 
	`W_DO
–
	`__•lô_∑ge
(
∑ª¡
, 
rsib_∑ge
, 
À·_hóvy
,

5207 
¶Ÿ
, 
addôi⁄
, 50, 
bIgn‹eL©ches
) );

5209 
	`SSMTEST
("btree.propagate.s.7");

5211 
båì_p
 
rsib
;

5212 
båì_p
& 
èrgë
 = 
rsib
;

5213 if(
À·_hóvy
) {

5214 
	`w_as£π9
(
∑ª¡
.
	`is_fixed
());

5215 
èrgë
 = 
∑ª¡
;

5217 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5218 
	`W_DO
(
èrgë
.
	`fix
(
rsib_∑ge
, 
fix_œtch
));

5219 
	`w_as£π9
(
rsib
.
	`is_fixed
());

5221 
	`SSMTEST
("btree.propagate.s.8");

5222 
	`W_DO
(
èrgë
.
	`ö£π
(
pkey
, 
≥Àm
, 
¶Ÿ
, 
chûdpid
));

5223 
was_•lô
 = 
åue
;

5226 
	`SSMTEST
("btree.propagate.s.3");

5232 
	`W_DO
(
c2
.
	`˛r_smo
());

5237 i‡(
c2
.
	`is_node
()) {

5238 
shpid_t
 
pid0
 = 
c2
.
	`chûd
(0);

5239 
	`DBGTHRD
(<<"ªmovêfú°Ñec‹d,Öid0=" << 
pid0
);

5240 
	`W_DO
(
c2
.
	`ªmove
(0, c2.
	`is_com¥es£d
()));

5241 
	`SSMTEST
("btree.propagate.s.9");

5242 
	`W_DO
(
c2
.
	`£t_pid0
(
pid0
));

5244 
	`SSMTEST
("btree.propagate.s.10");

5245 
c2
.
	`unfix
();

5247 if(
was_•lô
) {

5248 
	`w_as£π9
–
∑ª¡
.
	`is_smo
() );

5250 
	`w_as£π9
(! 
∑ª¡
.
	`is_smo
() );

5257 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5258 
	`W_DO
–
c1
.
	`fix
(
_pid
, 
fix_œtch
) );

5259 
	`W_DO
(
c1
.
	`˛r_smo
());

5260 
∑ª¡
.
	`unfix
();

5262 #i‡
BTREE_LOG_COMMENT_ON


5263 
	`W_DO
(
	`log_commít
("endÖropagate_split"));

5266  
RCOK
;

5267 
	}
}

5291 
rc_t


5292 
	gbåì_im∂
::
	$_•lô_Àaf
(

5293 
Õid_t
 c⁄° & 
roŸ_pid
,

5294 
båì_p
& 
Àaf
,

5295 c⁄° 
cvec_t
& 
key
,

5296 c⁄° 
cvec_t
& 
ñ
,

5297 
•lô_Á˘‹
,

5298 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

5300 
	`w_as£π9
(
Àaf
.
	`is_fixed
());

5301 
	`w_as£π9
(
Àaf
.
	`œtch_mode
(Ë=
LATCH_EX
 ||Üóf.œtch_mode(Ë=
LATCH_NLX
);

5302 
l¢_t
 
™ch‹
;

5303 
x˘_t
* 
xd
 = 
	`x˘
();

5305 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

5306 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

5308 #i‡
BTREE_LOG_COMMENT_ON


5309 
	`W_DO
(
	`log_commít
("startÜeaf split"));

5312 
addôi⁄
 = 
key
.
	`size
(Ë+ 
ñ
.size() + 2;

5313 
Õid_t
 
rsib_pid
;

5314 
Õid_t
 
Àaf_pid
 = 
Àaf
.
	`pid
();;

5315 
Àvñ
 = 
Àaf
.
	`Àvñ
();

5317 
boﬁ
 
À·_hóvy
;

5318 
¶Ÿid_t
 
¶Ÿ
=1;

5320 
	`w_as£π9
(
Àaf
.
	`ƒecs
()>0);

5322 
	`X_DO
–
	`__•lô_∑ge
(
Àaf
, 
rsib_pid
, 
À·_hóvy
,

5323 
¶Ÿ
, 
addôi⁄
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
), 
™ch‹
 );

5324 
Àaf
.
	`unfix
();

5327 
	`X_DO
(
	`_¥›ag©e
(
roŸ_pid
, 
key
, 
ñ
, 
Àaf_pid
, 
Àvñ
, 
Ál£
 , 
bIgn‹eL©ches
), 
™ch‹
);

5329 #i‡
BTREE_LOG_COMMENT_ON


5330 
	`W_DO
(
	`log_commít
("endÜeaf split"));

5332 i‡(
xd
) {

5333 
	`SSMTEST
("btree.propagate.s.1");

5334 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.prop.1"));

5337 
	`INC_TSTAT
(
bt_Àaf_•lôs
);

5338  
RCOK
;

5339 
	}
}

5346 
rc_t


5347 
	gbåì_im∂
::
	$__•lô_∑ge
(

5348 
båì_p
& 
∑ge
,

5349 
Õid_t
& 
siblög_∑ge
,

5350 
boﬁ
& 
À·_hóvy
,

5351 
¶Ÿid_t
& 
¶Ÿ
,

5352 
addôi⁄
,

5353 
•lô_Á˘‹
,

5354 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

5356 
	`FUNC
(
båì_im∂
::
__•lô_∑ge
);

5358 
	`INC_TSTAT
(
bt_•lôs
);

5360 
	`DBGTHRD
–<< "•lôÖagê" << 
∑ge
.
	`pid
(Ë<< "áddôi⁄ " << 
addôi⁄
);

5363 
œtch_mode_t
 
fix_œtch
;

5368 
båì_p
 
siblög
;

5369 
Õid_t
 
roŸ
 = 
∑ge
.
	`roŸ
();

5370 
	`W_DO
–
	`_Æloc_∑ge
(
roŸ
, 
∑ge
.
	`Àvñ
(),Öage.
	`pid
(), 
siblög
, 0, 
åue
,

5371 
∑ge
.
	`is_com¥es£d
(), 
°_ªguœr
, 
bIgn‹eL©ches
) );

5373 
	`w_as£π9
(
siblög
.
	`is_fixed
());

5374 
	`w_as£π9
(
siblög
.
	`œtch_mode
()==
LATCH_EX
 || siblög.œtch_mode()==
LATCH_NLX
);

5375 
	`SSMTEST
("btree.propagate.s.2");

5389 
Õid_t
 
ﬁd_√xt
 = 
∑ge
.
	`pid
();

5390 
ﬁd_√xt
.
∑ge
 =Öage.
	`√xt
();

5392 
	`W_DO
–
siblög
.
	`lök_up
(
∑ge
.
	`pid
().∑ge, 
ﬁd_√xt
.page) );

5393 
siblög_∑ge
 = 
siblög
.
	`pid
();

5396 
	`W_DO
–
∑ge
.
	`£t_smo
() );

5397 
	`SSMTEST
("btree.propagate.s.4");

5398 
	`W_DO
–
∑ge
.
	`lök_up
’age.
	`¥ev
(), 
siblög_∑ge
.page) );

5403 
	`W_DO
–
∑ge
.
	`di°ribuã
(
siblög
, 
À·_hóvy
,

5404 
¶Ÿ
, 
addôi⁄
, 
•lô_Á˘‹
, 
bIgn‹eL©ches
) );

5407 
	`DBGTHRD
(<< "á·î s∂ôÇew siblög " << 
siblög
.
	`pid
()

5408 << "Üe·_hóvy=" << 
À·_hóvy


5409 << " slŸ " << 
¶Ÿ


5410 << "Öage.ƒecs(Ë" << 
∑ge
.
	`ƒecs
()

5411 << " siblög.ƒecs(Ë" << 
siblög
.
	`ƒecs
()

5413 
siblög
.
	`unfix
();

5415 i‡(
ﬁd_√xt
.
∑ge
) {

5416 
båì_p
 
cousö
;

5419 
	`INC_TSTAT
(
bt_löks
);

5420 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5421 
	`W_DO
–
cousö
.
	`fix
(
ﬁd_√xt
, 
fix_œtch
) );

5422 
	`W_DO
–
cousö
.
	`lök_up
(
siblög_∑ge
.
∑ge
, cousö.
	`√xt
()));

5425 
	`SSMTEST
("btree.propagate.s.5");

5431 
	`w_as£π9
(
∑ge
.
	`is_fixed
());

5432 
	`w_as£π9
(!
siblög
.
	`is_fixed
());

5437  
RCOK
;

5438 
	}
}

5467 
rc_t


5468 
	gbåì_im∂
::
	$_åavî£
(

5469 c⁄° 
Õid_t
& 
__roŸ
,

5470 c⁄° 
Õid_t
& 
_°¨t
,

5471 c⁄° 
l¢_t
& 
_°¨t_l¢
,

5472 c⁄° 
cvec_t
& 
key
,

5473 c⁄° 
cvec_t
& 
ñem
,

5474 
boﬁ
& 
found
,

5475 
œtch_mode_t
 
mode
,

5476 
båì_p
& 
Àaf
,

5477 
båì_p
& 
∑ª¡
,

5478 
l¢_t
& 
Àaf_l¢
,

5479 
l¢_t
& 
∑ª¡_l¢
,

5480 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

5482 
	`FUNC
(
båì_im∂
::
_åavî£
);

5483 
l¢_t
 
°¨t_l¢
 = 
_°¨t_l¢
;

5484 
Õid_t
 
°¨t
 = 
_°¨t
;

5485 
rc_t
 
rc
;

5487 if(!
bIgn‹eL©ches
) {

5488 
	`gë_œtches
(
___s
,
___e
);

5491 if(
°¨t
 =
__roŸ
) {

5492 
	`INC_TSTAT
(
bt_åavî£_˙t
);

5494 
	`INC_TSTAT
(
bt_∑πül_åavî£_˙t
);

5497 
åì_œtch
 
	`åì_roŸ
(
__roŸ
, 
bIgn‹eL©ches
);

5499 
¶Ÿid_t
 
¶Ÿ
 = -1;

5502 
œtch_mode_t
 
smo_mode
;

5503 
œtch_mode_t
 
smo_p1mode
;

5504 
œtch_mode_t
 
smo_p2mode
;

5505 
œtch_mode_t
 
fix_œtch
;

5507 
∑gaö
:

5509 if(!
bIgn‹eL©ches
) {

5510 
	`check_œtches
(
___s
,
___e
, ___s+___e);

5512 #i‡
W_DEBUG_LEVEL
 > 3

5513 
	`DBGTHRD
(<<"");

5514 if(
¥öt_±øvî£
) {

5515 
cout
 << "TRAVERSE.∑gaö "<<
ídl
;

5516 
	`¥öt
(
°¨t
);

5519 
	`DBGTHRD
(<<"__åavî£.∑gaö: modê" << (
mode
));

5523 
båì_p
 
p
[2];

5524 
Õid_t
 
pid
[2];

5525 
l¢_t
 
l¢s
[2];

5527 
c
;

5530 
	`w_as£π2
(! 
p
[0].
	`is_fixed
());

5531 
	`w_as£π2
(! 
p
[1].
	`is_fixed
());

5532 
c
 = 0;

5534 
found
 = 
Ál£
;

5536 
pid
[0] = 
°¨t
;

5537 
pid
[1] = 
°¨t
;

5538 
pid
[1].
∑ge
 = 0;

5546 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5547 
	`W_DO
–
p
[
c
].
	`fix
(
pid
[c], 
fix_œtch
) );

5548 
	`w_as£π1
(
p
[
c
].
	`is_fixed
());

5549 
l¢s
[
c
] = 
p
[c].
	`l¢
();

5558 if(
p
[
c
].
	`is_Àaf
(Ë&& (
mode
 !
LATCH_SH
 || modê!
LATCH_NLS
)) {

5559 
p
[
c
].
	`unfix
();

5560 
	`W_DO
–
p
[
c
].
	`fix
(
pid
[c], 
mode
) );

5561 
l¢s
[
c
] = 
p
[c].
	`l¢
();

5564 if(
°¨t_l¢
.
	`vÆid
(Ë&& sèπ_l¢ !
p
[
c
].
	`l¢
()) {

5566 
	`DBGTHRD
(<<"startingÖoint changed;Ñestart");

5567 
°¨t_l¢
 = 
l¢_t
::
nuŒ
;

5568 
°¨t
 = 
__roŸ
;

5569 
	`INC_TSTAT
(
bt_ª°¨t_åavî£_˙t
);

5570 
	`DBGTHRD
(<<"->pagain");

5571 
∑gaö
;

5574 #i‡
W_DEBUG_LEVEL
 > 2

5575 
waôed_f‹_posc
 = 0;

5578 
no_ch™ge
:

5579 
	`w_as£π2
(
p
[
c
].
	`is_fixed
());

5580 
	`w_as£π2
–! 
p
[1-
c
].
	`is_fixed
() );

5581 
	`DBGTHRD
(<<"_åavî£:Çÿch™ge:Öagê" << 
p
[
c
].
	`pid
());

5589  ; 
p
[
c
].
	`is_node
(); c = 1 - c) {

5590 
	`DBGTHRD
(<<"p[c].pid(Ë=" << 
p
[
c
].
	`pid
());

5592 
	`w_as£π2
(
p
[
c
].
	`is_fixed
());

5593 
	`w_as£π2
(
p
[
c
].
	`is_node
());

5594 
	`w_as£π2
(
p
[
c
].
	`pid0
());

5597 
boﬁ
 
tŸÆ_m©ch
 = 
Ál£
;

5598 
boﬁ
 
waô_f‹_posc
 = 
Ál£
;

5600 if(
p
[
c
].
	`is_smo
()) {

5604 
	`DBG
(<<"wait forÖosc because smo bit is set");

5605 
waô_f‹_posc
 = 
åue
;

5607 } if(
p
[
c
].
	`pid0
() ) {

5608 
	`w_as£π9
(
p
[
c
].
	`ƒecs
() >= 0);

5609 
	`W_DO
–
	`_£¨ch
(
p
[
c
], 
key
, 
ñem
, 
found
, 
tŸÆ_m©ch
, 
¶Ÿ
) );

5636 if(!
tŸÆ_m©ch
Ë
¶Ÿ
--;

5639 
	`w_as£π9
(
p
[
c
].
	`ƒecs
() == 0);

5648 
	`DBG
(<<"waô f‹Öos¯beˇu£Ém±yÖage: " << 
p
[
c
].
	`pid
());

5649 if(
p
[
c
].
	`pid
(Ë!
__roŸ
) {

5650 
	`w_as£π9
(
p
[
c
].
	`is_dñëe
());

5651 
waô_f‹_posc
 = 
åue
;

5655 if(
waô_f‹_posc
) {

5656 #i‡
W_DEBUG_LEVEL
 > 2

5657 
	`w_as£π3
(
waôed_f‹_posc
 < 3);

5659 
waôed_f‹_posc
 ++;

5678 
boﬁ
 
was_œtched
 = 
åì_roŸ
.
	`is_fixed
();

5679 #i‡
W_DEBUG_LEVEL
 > 2

5680 
œtch_mode_t
 
ﬁd_mode
 = 
åì_roŸ
.
	`œtch_mode
();

5681 
	`DBG
(<<"ﬁd mode" << (
ﬁd_mode
));

5684 
smo_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5685 
smo_p1mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5686 
smo_p2mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5687 
w_îr‹_t
::
îr_num_t
 
r˚
;

5688 
r˚
 = 
åì_roŸ
.
	`gë_f‹_smo
(
Ál£
, 
smo_mode
, 
p
[
c
], 
smo_p1mode
,

5689 
åue
, &
p
[1-
c
], 
smo_p2mode
,

5690 
bIgn‹eL©ches
);

5692 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

5693 
	`w_as£π2
(
åì_roŸ
.
	`œtch_mode
(Ë>
LATCH_SH
);

5694 #i‡
W_DEBUG_LEVEL
 > 2

5695 if(
was_œtched
) {

5696 
	`w_as£π3
(
åì_roŸ
.
	`œtch_mode
(Ë>
ﬁd_mode
);

5700 if(
p
[
c
].
	`is_smo
()) {

5707 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

5708 if(
p
[
c
].
	`œtch_mode
(Ë< 
fix_œtch
) {

5714 
	`w_as£π2
(
åì_roŸ
.
	`is_fixed
());

5715 
	`w_as£π2
(
åì_roŸ
.
	`pö√d_by_me
());

5719 if(
bIgn‹eL©ches
) {

5720 
Õid_t
 
p˝id
 = 
p
[
c
].
	`pid
();

5721 
p
[
c
].
	`unfix
();

5722 
	`W_DO
(
p
[
c
].
	`fix
(
p˝id
, 
fix_œtch
));

5724 
p
[
c
].
	`upgøde_œtch
(
fix_œtch
);

5727 
	`INC_TSTAT
(
bt_˛r_smo_åavî£
);

5728 #i‡
BTREE_LOG_COMMENT_ON


5729 
	`W_DO
(
	`log_commít
("clr_smo/T"));

5731 
	`W_DO
–
p
[
c
].
	`˛r_smo
(
åue
));

5739 if(
r˚
 && (r˚ !
eRETRY
)) {

5740 
åì_roŸ
.
	`unfix
();

5741  
	`RC
(
r˚
);

5752 if(!
was_œtched
) {

5753 
åì_roŸ
.
	`unfix
();

5761 if(
p
[1-
c
].
	`is_fixed
(Ë&& (p[1-c].
	`l¢
(Ë=
l¢s
[1-c])) {

5762 
°¨t
 = 
pid
[1-
c
];

5763 
p
[
c
].
	`unfix
();

5765 
c
 = 1-c;

5766 
	`DBGTHRD
(<<"-->no_change TREE LATCH MODE "

5767 << (
åì_roŸ
.
	`œtch_mode
())

5769 
no_ch™ge
;

5771 
p
[
c
].
	`unfix
();

5772 
p
[1-
c
].
	`unfix
();

5773 
	`DBGTHRD
(<<"->again");

5774 
∑gaö
;

5777 #i‡
W_DEBUG_LEVEL
 > 2

5778 
waôed_f‹_posc
 =0;

5781 
	`w_as£π9
–
p
[
c
].
	`is_fixed
());

5782 
	`w_as£π9
–!
p
[
c
].
	`is_smo
() );

5783 
	`w_as£π9
–!
p
[
c
].
	`is_dñëe
() );

5785 
p
[1-
c
].
	`unfix
();

5787 
	`DBGTHRD
(<<" found " << 
found


5788 << "ÅŸÆ_m©ch " << 
tŸÆ_m©ch


5789 << " slŸ=" << 
¶Ÿ
);

5797 
pid
[1-
c
].
∑ge
 = ((
¶Ÿ
 < 0Ë? 
p
[c].
	`pid0
(Ë:Ö[c].
	`chûd
(slot));

5799 
fix_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

5800 
œtch_mode_t
 
node_mode
 = 
p
[
c
].
	`is_Àaf_∑ª¡
(Ë? 
mode
 : 
fix_œtch
;

5806 
	`W_DO
–
p
[1-
c
].
	`fix
(
pid
[1-c], 
node_mode
) );

5807 
l¢s
[1-
c
] = 
p
[1-c].
	`l¢
();

5814 
	`w_as£π9
–
p
[
c
].
	`is_Àaf
());

5816 
	`w_as£π9
–
p
[
c
].
	`pid0
() == 0 );

5817 
	`w_as£π9
–
p
[
c
].
	`is_fixed
());

5822 
	`w_as£π9
(
p
[1-
c
].
	`is_fixed
() ||

5823 (
pid
[1-
c
].
∑ge
 =0 &&Öid[c] =
°¨t
));

5825 
Àaf
 = 
p
[
c
];

5826 
Àaf_l¢
 = 
p
[
c
].
	`l¢
();

5827 
p
[
c
].
	`unfix
();

5829 if(
p
[1-
c
].
	`is_fixed
()) {

5830 
	`DBGTHRD
(<<"2-level btree");

5831 
∑ª¡
 = 
p
[1-
c
];

5832 
∑ª¡_l¢
 = 
p
[1-
c
].
	`l¢
();

5833 
p
[1-
c
].
	`unfix
();

5834 
	`w_as£π9
–
∑ª¡
.
	`is_fixed
());

5835 
	`w_as£π9
–
∑ª¡
.
	`is_node
());

5836 
	`w_as£π9
–
∑ª¡
.
	`is_Àaf_∑ª¡
());

5838 
	`DBGTHRD
(<<"shÆlow båì:Ü©ch mode" << (
Àaf
.
	`œtch_mode
()));

5840 
	`w_as£π9
–
Àaf
.
	`pid
(Ë=
°¨t
 );

5844 
	`w_as£π9
–
°¨t
 =
__roŸ
 );

5845 
	`w_as£π9
–
Àaf
.
	`pid
(Ë=
__roŸ
 );

5848 if(
Àaf
.
	`œtch_mode
(Ë!
mode
) {

5849 if(
bIgn‹eL©ches
) {

5850 
Õid_t
 
ÀaÂid
 = 
Àaf
.
	`pid
();

5851 
Àaf
.
	`unfix
();

5852 
	`W_DO
(
Àaf
.
	`fix
(
ÀaÂid
, 
mode
));

5854 
boﬁ
 
would_block
=
Ál£
;

5855 
	`W_DO
(
Àaf
.
	`upgøde_œtch_if_nŸ_block
(
would_block
));

5856 if(
would_block
) {

5857 
Àaf
.
	`unfix
();

5858 
∑ª¡
.
	`unfix
();

5859 
åì_roŸ
.
	`unfix
();

5860 
	`INC_TSTAT
(
bt_upgøde_Áû_ªåy
);

5867 
	`DBG
(<<"-->ágain; cannot upgrade ");

5868 
∑gaö
;

5871 
	`w_as£π9
(
Àaf
.
	`œtch_mode
(Ë=
mode
 );

5875 
∑ª¡
 = 
Àaf
;

5876 
∑ª¡_l¢
 = 
Àaf_l¢
;

5885 
	`w_as£π2
(
Àaf
.
	`is_fixed
());

5886 
	`w_as£π2
(
Àaf
.
	`is_Àaf
());

5887 
	`w_as£π2
(
Àaf
.
	`œtch_mode
(Ë=
mode
 );

5889 #i‡
W_DEBUG_LEVEL
 > 1

5890 if(
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
) {

5891 
	`w_as£π2
–
Àaf_l¢
 !
l¢_t
::
nuŒ
);

5895 
	`w_as£π2
(
∑ª¡
.
	`is_fixed
());

5896 
	`w_as£π2
(
∑ª¡
.
	`is_node
() ||

5897 (
∑ª¡
.
	`is_Àaf
(Ë&& 
Àaf
.
	`pid
(Ë=
°¨t
 ));

5898 
	`w_as£π2
(
∑ª¡
.
	`is_Àaf_∑ª¡
(Ë||Ö¨ít.
	`is_Àaf
());

5900 #i‡
W_DEBUG_LEVEL
 > 1

5901 if(
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
)

5903 
	`w_as£π9
(
∑ª¡_l¢
 !
l¢_t
::
nuŒ
);

5907 if(!
bIgn‹eL©ches
) {

5908 if(
Àaf
.
	`pid
(Ë=
__roŸ
) {

5910 
	`check_œtches
(
___s
+2,
___e
+2, ___s+___e+2);

5913 
	`check_œtches
(
___s
+2,
___e
+1, ___s+___e+2);

5921 
	`DBGTHRD
(<<" found = " << 
found
 << "Üóf.pid()=" << 
Àaf
.
	`pid
()

5922 << " key=" << 
key
);

5923  
rc
;

5924 
	}
}

5938 
rc_t


5939 
	gbåì_im∂
::
	$_£¨ch
(

5940 c⁄° 
båì_p
& 
∑ge
,

5941 c⁄° 
cvec_t
& 
key
,

5942 c⁄° 
cvec_t
& 
ñem
,

5943 
boﬁ
& 
found_key
,

5944 
boﬁ
& 
tŸÆ_m©ch
,

5945 
¶Ÿid_t
& 
ªt_¶Ÿ


5948 i‡(
key
.
	`is_√g_öf
()) {

5949 
found_key
 = (
tŸÆ_m©ch
 = 
Ál£
);

5950 
ªt_¶Ÿ
 = 0;

5951 } i‡(
key
.
	`is_pos_öf
()) {

5952 
found_key
 = (
tŸÆ_m©ch
 = 
Ál£
);

5953 
ªt_¶Ÿ
 = 
∑ge
.
	`ƒecs
();

5955 
rc_t
 
rc
 = 
∑ge
.
	`£¨ch
(
key
, 
ñem
, 
found_key
, 
tŸÆ_m©ch
, 
ªt_¶Ÿ
);

5956 i‡(
rc
.
	`is_îr‹
()ËÑc.
	`ª£t
();

5958  
RCOK
;

5959 
	}
}

5982 
rc_t


5983 
	gbåì_im∂
::
	$_ßtisfy
(

5984 c⁄° 
båì_p
& 
∑ge
,

5985 c⁄° 
cvec_t
& 
key
,

5986 c⁄° 
cvec_t
& 
ñem
,

5987 
boﬁ
& 
found_key
,

5988 
boﬁ
& 
tŸÆ_m©ch
,

5989 
¶Ÿid_t
& 
¶Ÿ
,

5990 
uöt
& 
wˇ£


5993 
m_∑ge_£¨ch_ˇ£s
 
wh©ˇ£
;

5996 
¶Ÿ
 = -1;

5998 
	`W_DO
–
	`_£¨ch
(
∑ge
, 
key
, 
ñem
, 
found_key
, 
tŸÆ_m©ch
, 
¶Ÿ
));

6000 
	`w_as£π9
(
¶Ÿ
 >0 && slŸ <
∑ge
.
	`ƒecs
());

6001 if(
tŸÆ_m©ch
) {

6002 
	`w_as£π9
(
¶Ÿ
 >0 && slŸ < 
∑ge
.
	`ƒecs
());

6005 
	`DBG
(

6006 << " o¿∑gê" << 
∑ge
.
	`pid
()

6007 << " found_key = " << 
found_key


6008 << "ÅŸÆ_m©ch=" << 
tŸÆ_m©ch


6009 << " slŸ=" << 
¶Ÿ


6010 << "Çªcs()=" << 
∑ge
.
	`ƒecs
()

6018 if(
tŸÆ_m©ch
) {

6019 
wh©ˇ£
 = 
m_ßtisfyög_key_found_ßme_∑ge
;

6026 if(
¶Ÿ
 < 
∑ge
.
	`ƒecs
()) {

6028 
	`w_as£π9
(
∑ge
.
	`ƒecs
()>0);

6030 
wh©ˇ£
 = 
m_ßtisfyög_key_found_ßme_∑ge
;

6033 if–!
∑ge
.
	`√xt
() ) {

6035 
wh©ˇ£
 = 
m_nŸ_found_íd_of_fûe
;

6039 if(
∑ge
.
	`ƒecs
()) {

6042 
	`w_as£π9
(
∑ge
.
	`√xt
());

6043 
wh©ˇ£
 = 
m_nŸ_found_íd_of_n⁄_em±y_∑ge
;

6049 
	`w_as£π9
(
∑ge
.
	`√xt
());

6050 
wh©ˇ£
 = 
m_nŸ_found_∑ge_is_em±y
;

6053 
wˇ£
 = (
uöt
Ë
wh©ˇ£
;

6054 
	`DBG
(<<"ªtu∫ög ca£" << (
wh©ˇ£
));

6055  
RCOK
;

6056 
	}
}

	@src/sm/btree_impl.h

53 #i‚de‡
BTREE_IMPL_H


54 
	#BTREE_IMPL_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 
	~<£t
>

66 #i‚de‡
BTREE_H


67 
	~"båì.h
"

69 #i‚de‡
KVL_T_H


70 
	~"kvl_t.h
"

73 íum { 
	mm_nŸ_found_íd_of_fûe
,

74 
	mm_ßtisfyög_key_found_ßme_∑ge
,

75 
	mm_nŸ_found_íd_of_n⁄_em±y_∑ge
,

76 
	mm_nŸ_found_∑ge_is_em±y
 } 
	tm_∑ge_£¨ch_ˇ£s
;

78 
˛ass
 
	gbtsök_t
;

80 ˛as†
	cbåì_im∂
 : 
¥Ÿe˘ed
 
båì_m
 {

81 
‰õnd
 
˛ass
 
båì_m
;

82 
‰õnd
 
˛ass
 
	mbåì_p
;

83 
‰õnd
 
˛ass
 
	mbtsök_t
;

85 
	m¥Ÿe˘ed
:

87 
rc_t
 
_•lô_åì
(

88 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

89 c⁄° 
Õid_t
& 
roŸ_√w
,

90 c⁄° 
cvec_t
& 
key
,

91 
Õid_t
& 
Àaf_ﬁd
,

92 
Õid_t
& 
Àaf_√w
,

93 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

95 
rc_t
 
_ªloˇã_ªcs_l
(

96 
Õid_t
& 
Àaf_ﬁd
,

97 c⁄° 
Õid_t
& 
Àaf_√w
,

98 c⁄° 
boﬁ
 
was_roŸ
,

99 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

100 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

102 
rc_t
 
_ªloˇã_ªcs_p
(

103 c⁄° 
Õid_t
& 
roŸ_ﬁd
,

104 c⁄° 
Õid_t
& 
roŸ_√w
,

105 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

106 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

108 
rc_t
 
_mîge_åìs
(

109 
Õid_t
& 
roŸ
,

110 c⁄° 
Õid_t
& 
roŸ1
,

111 c⁄° 
Õid_t
& 
roŸ2
,

112 
cvec_t
& 
°¨tKey2
,

113 c⁄° 
boﬁ
 
upd©e_ow√r
,

114 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

116 
rc_t
 
_mr_ö£π
(

117 c⁄° 
Õid_t
& 
roŸ
,

118 
boﬁ
 
unique
,

119 
c⁄cuºícy_t
 
cc
,

120 c⁄° 
cvec_t
& 
key
,

121 
ñ_fûÀr
* 
ef
,

122 
size_t
 
ñ_size
,

123 
•lô_Á˘‹
 = 50,

124 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

125 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

127 
rc_t
 
_•lô_Àaf_™d_ªloˇã_ªcs
(

128 c⁄° 
Õid_t
& 
roŸ_pid
,

129 
båì_p
& 
Àaf
,

130 c⁄° 
cvec_t
& 
key
,

131 c⁄° 
cvec_t
& 
ñ
,

132 
•lô_Á˘‹
,

133 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

134 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

136 
rc_t
 
_lök_a·î_mîge
(

137 c⁄° 
Õid_t
& 
roŸ
,

138 
shpid_t
 
p1
,

139 
shpid_t
 
p2
,

140 
boﬁ
 
£t_roŸ1
,

141 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

143 
rc_t
 
_upd©e_ow√r
(

144 c⁄° 
Õid_t
& 
√w_ow√r
,

145 c⁄° 
Õid_t
& 
ﬁd_ow√r
,

146 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

148 
rc_t
 
_move_ªcs_l
(

149 c⁄° 
°id_t
& 
fid
,

150 
boﬁ
& 
fú°
,

151 c⁄° 
Õid_t
& 
Àaf
,

152 
båì_p
& 
Àaf_∑ge
,

153 
fûe_mrbt_p
& 
√w_∑ge
,

154 
fûe_mrbt_p
& 
ﬁd_∑ge
,

155 
ve˘‹
<
rid_t
>& 
ªcs
,

156 
m≠
<
rid_t
, 
¶Ÿid_t
>& 
¶Ÿ_m≠
,

157 
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

158 
ve˘‹
<
rid_t
>& 
√w_rids
,

159 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

161 
rc_t
 
_move_ªcs_p
(

162 c⁄° 
°id_t
& 
fid
,

163 
boﬁ
& 
fú°
,

164 c⁄° 
Õid_t
& 
roŸ
,

165 
fûe_mrbt_p
& 
√w_∑ge
,

166 
fûe_mrbt_p
& 
ﬁd_∑ge
,

167 
ve˘‹
<
rid_t
>& 
ªcs
,

168 
m≠
<
rid_t
, 
¶Ÿid_t
>& 
¶Ÿ_m≠
,

169 
m≠
<
rid_t
, 
Õid_t
>& 
Àaf_m≠
,

170 
ve˘‹
<
rid_t
>& 
ﬁd_rids
,

171 
ve˘‹
<
rid_t
>& 
√w_rids
,

172 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

175 
rc_t
 
_Æloc_∑ge
(

176 c⁄° 
Õid_t
& 
roŸ
,

177 
öt2_t
 
Àvñ
,

178 c⁄° 
Õid_t
& 
√¨
,

179 
båì_p
& 
ªt_∑ge
,

180 
shpid_t
 
pid0
 = 0,

181 
boﬁ
 
£t_ôs_smo
=
Ál£
,

182 
boﬁ
 
com¥ess
=
Ál£
,

183 
°‹e_Êag_t
 
°f
 = 
°_ªguœr
,

184 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

186 
rc_t
 
_ö£π
(

187 c⁄° 
Õid_t
& 
roŸ
,

188 
boﬁ
 
unique
,

189 
c⁄cuºícy_t
 
cc
,

190 c⁄° 
cvec_t
& 
key
,

191 c⁄° 
cvec_t
& 
ñem
,

192 
•lô_Á˘‹
 = 50,

193 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

194 
rc_t
 
_ªmove
(

195 c⁄° 
Õid_t
& 
roŸ
,

196 
boﬁ
 
unique
,

197 
c⁄cuºícy_t
 
cc
,

198 c⁄° 
cvec_t
& 
key
,

199 c⁄° 
cvec_t
& 
ñem
,

200 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

202 
rc_t
 
_lookup
(

203 c⁄° 
Õid_t
& 
roŸ
,

204 
boﬁ
 
unique
,

205 
c⁄cuºícy_t
 
cc
,

206 c⁄° 
cvec_t
& 
key
,

207 c⁄° 
cvec_t
& 
ñem
,

208 
boﬁ
& 
found
,

209 
bt_curs‹_t
* 
curs‹
,

210 * 
ñ
,

211 
smsize_t
& 
ñí
,

212 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

214 
rc_t
 
_upd©e
(

215 c⁄° 
Õid_t
& 
roŸ
,

216 
boﬁ
 
unique
,

217 
c⁄cuºícy_t
 
cc
,

218 c⁄° 
cvec_t
& 
key
,

219 c⁄° 
cvec_t
& 
ﬁd_ñ
,

220 c⁄° 
cvec_t
& 
√w_ñ
,

221 
boﬁ
& 
found
,

222 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

224 
rc_t
 
_skù_⁄e_¶Ÿ
(

225 
båì_p
& 
p1
,

226 
båì_p
& 
p2
,

227 
båì_p
*& 
chûd
,

228 
¶Ÿid_t
& 
¶Ÿ
,

229 
boﬁ
& 
eof
,

230 
boﬁ
& 
found
,

231 
boﬁ
 
backw¨d
=
Ál£
,

232 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

234 
rc_t
 
_¥›ag©e
(

235 c⁄° 
Õid_t
& 
roŸ_pid
,

236 c⁄° 
cvec_t
& 
key
,

237 c⁄° 
cvec_t
& 
ñem
,

238 c⁄° 
Õid_t
& 
_chûd_pid
,

240 
chûd_Àvñ
,

241 
boﬁ
 
isdñëe
,

242 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

243 
_skù_⁄e_¶Ÿ
(

244 
båì_p
& 
p1
,

245 
båì_p
& 
p2
,

246 
båì_p
*& 
chûd
,

247 
¶Ÿid_t
& 
¶Ÿ
,

248 
boﬁ
& 
eof


252 
mk_kvl
(

253 
c⁄cuºícy_t
 
cc
,

254 
lockid_t
& 
kvl
,

255 
°id_t
 
°id
,

256 
boﬁ
 
unique
,

257 c⁄° 
cvec_t
& 
key
,

258 c⁄° 
cvec_t
& 
ñ
 = cvec_t::
√g_öf
);

260 
	$mk_kvl
(

261 
c⁄cuºícy_t
 
cc
,

262 
lockid_t
& 
kvl
,

263 
°id_t
 
°id
,

264 
boﬁ
 
unique
,

265 c⁄° 
båec_t
& 
ªc
) {

266 
	`mk_kvl
(
cc
, 
kvl
, 
°id
,

267 
unique
, 
ªc
.
	`key
(),Ñec.
	`ñem
());

270 
	$mk_kvl_eof
(

271 
c⁄cuºícy_t
 
cc
,

272 
lockid_t
& 
kvl
,

273 
°id_t
 
°id
) {

277 
	`mk_kvl
(
cc
, 
kvl
, 
°id
,

278 
Ál£
, 
kvl_t
::
eof
, kvl_t::eof);

279 
	}
}

280 
	g¥iv©e
:

285 
rc_t
 
_£¨ch
(

286 c⁄° 
båì_p
& 
∑ge
,

287 c⁄° 
cvec_t
& 
key
,

288 c⁄° 
cvec_t
& 
ñem
,

289 
boﬁ
& 
found_key
,

290 
boﬁ
& 
tŸÆ_m©ch
,

291 
¶Ÿid_t
& 
ªt_¶Ÿ
);

292 
rc_t
 
_ßtisfy
(

293 c⁄° 
båì_p
& 
∑ge
,

294 c⁄° 
cvec_t
& 
key
,

295 c⁄° 
cvec_t
& 
ñem
,

296 
boﬁ
& 
found_key
,

297 
boﬁ
& 
tŸÆ_m©ch
,

298 
¶Ÿid_t
& 
¶Ÿ
,

299 
uöt
& 
wˇ£
);

300 
rc_t
 
_åavî£
(

301 c⁄° 
Õid_t
& 
__roŸ
,

302 c⁄° 
Õid_t
& 
_°¨t
,

303 c⁄° 
l¢_t
& 
_°¨t_l¢
,

304 c⁄° 
cvec_t
& 
key
,

305 c⁄° 
cvec_t
& 
ñem
,

306 
boﬁ
& 
found
,

307 
œtch_mode_t
 
mode
,

308 
båì_p
& 
Àaf
,

309 
båì_p
& 
∑ª¡
,

310 
l¢_t
& 
Àaf_l¢
,

311 
l¢_t
& 
∑ª¡_l¢
,

312 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

313 
rc_t
 
_¥›ag©e_•lô
(

314 
båì_p
& 
∑ª¡
,

315 c⁄° 
Õid_t
& 
_pid
,

316 
¶Ÿid_t
 
¶Ÿ
,

318 
boﬁ
& 
was_•lô
,

319 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

320 
rc_t
 
_•lô_Àaf
(

321 c⁄° 
Õid_t
& 
roŸ_pid
,

322 
båì_p
& 
Àaf
,

323 c⁄° 
cvec_t
& 
key
,

324 c⁄° 
cvec_t
& 
ñ
,

325 
•lô_Á˘‹
,

326 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

328 
rc_t
 
__•lô_∑ge
(

329 
båì_p
& 
∑ge
,

330 
Õid_t
& 
siblög_∑ge
,

331 
boﬁ
& 
À·_hóvy
,

332 
¶Ÿid_t
& 
¶Ÿ
,

333 
addôi⁄
,

334 
•lô_Á˘‹
,

335 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

337 
rc_t
 
_grow_åì
(
båì_p
& 
roŸ
,

338 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

339 
rc_t
 
_shrök_åì
(
båì_p
& 
roŸ
,

340 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

343 
rc_t
 
_h™dÀ_dup_keys
(

344 
btsök_t
* 
sök
,

345 
¶Ÿid_t
& 
¶Ÿ
,

346 
fûe_p
* 
¥evp
,

347 
fûe_p
* 
cuΩ
,

348 & 
cou¡
,

349 
ªc‹d_t
*& 
r
,

350 
Õid_t
& 
pid
,

351 
nkc
,

352 c⁄° 
key_ty≥_s
* 
kc
,

353 
boﬁ
 
Àxify_keys
);

364 ˛as†
	cåì_œtch
 {

366 
	m¥iv©e
:

367 
Õid_t
 
_pid
;

368 
œtch_mode_t
 
	m_mode
;

369 
	mœtch_t
& 
	m_œtch
;

370 
boﬁ
 
	m_fixed
;

373 
	mpublic
:

374 
NORET
 
åì_œtch
(c⁄° 
Õid_t
 
pid
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
) ;

376 
	mNORET
 ~
åì_œtch
();

378 
	mw_îr‹_t
::
îr_num_t


379 
gë_f‹_smo
(
boﬁ
 
c⁄dôi⁄Æ
,

380 
œtch_mode_t
 
mode
,

381 
båì_p
& 
p1
,

382 
œtch_mode_t
 
p1mode
,

383 
boﬁ
 
ªœtch_p2
,

384 
båì_p
* 
p2
,

385 
œtch_mode_t
 
p2mode
,

386 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

389 
unfix
();

392 
boﬁ
 
	$is_fixed
(Ëc⁄° { 
	`check
();  
_fixed
; }

393 
boﬁ
 
	$pö√d_by_me
(Ëc⁄° {
	`check
();

394  
_œtch
.
	`hñd_by_me
(); 
	}
}

395 
œtch_mode_t
 
	$œtch_mode
(Ëc⁄° { 
	`check
();  
_œtch
.
	`mode
(); 
	}
}

396 c⁄° 
	gÕid_t
& 
	$pid
(Ëc⁄° { 
	`check
();  
_pid
; 
	}
}

397 
	$check
() const {

406 
	`W_IFDEBUG2
(

407 if(
_fixed
Ë
	`w_as£π2
(
_œtch
.
	`hñd_by_me
() != 0);)

408 
	}
}

411 #i‡
W_DEBUG_LEVEL
 > 4

413 
	#BTREE_CHECK_LATCHES


	)

415 
b°›
();

417 
_check_œtches
(
löe
, 
uöt
 
_nsh
, uöà
_√x
, uöà
_max
,

418 c⁄° *
fûe
);

425 
	#gë_œtches
(
_nsh
, 
_√x
) \

426 
uöt
 
_nsh
=0, 
_√x
=0; { uöà
nd
 = 0;\

427 
smÀvñ_0
::
bf
->
	`¢≠shŸ_me
(
_nsh
, 
_√x
, 
nd
); }

	)

436 
	#check_œtches
(
_nsh
, 
_√x
, 
_max
) \

437 
	`_check_œtches
(
__LINE__
, 
_nsh
, 
_√x
, 
_max
, 
__FILE__
);

	)

440 
	#check_œtches
(
_nsh
, 
_√x
, 
_max
)

	)

441 
	#gë_œtches
(
_nsh
, 
_√x
)

	)

	@src/sm/btree_latch_manager.cpp

54 
	~"w_deföes.h
"

58 
	~"båì_œtch_m™agî.h
"

59 
	~<ve˘‹
>

60 
	~"˝u_öfo.h
"

64 #i‡
deföed
(
USE_OCC_LOCK_HERE
)

65 
	#OCCWRITE
 .
	`wrôe_lock
()

	)

66 
	#OCCREAD
 .
	`ªad_lock
()

	)

68 
	#OCCWRITE


	)

69 
	#OCCREAD


	)

72 
	gbåì_œtch_m™agî
::
	$shutdown
()

74 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

75 
i
=0; i < 
_sockë_cou¡
; i++) {

76 
	`CRITICAL_SECTION
(
cs
, 
_sockë_œtch_locks
[
i
] 
OCCWRITE
);

77 
_sockë_œtches
[
i
].
	`˛ór
();

79 
båì_œtch_m≠
::
ôî©‹
 
ô
=
_œtches
.
	`begö
(); ià!_œtches.
	`íd
(); ++it)

81 
	`w_as£π1
(
ô
->
£c⁄d
->
	`mode
(Ë=
LATCH_NL
);

82 
dñëe
 
ô
->
£c⁄d
;

84 
_œtches
.
	`˛ór
();

85 
	}
}

87 
	gbåì_œtch_m™agî
::
	$båì_œtch_m™agî
()

88 : 
	`_sockë_cou¡
(
˝u_öfo
::
	`sockë_cou¡
())

89 , 
	`_sockë_œtches
(
√w
 
båì_œtch_m≠
[
_sockë_cou¡
])

90 , 
	$_sockë_œtch_locks
(
√w
 
Lock
[
_sockë_cou¡
])

92 
	}
}

94 
	gœtch_t
 &
	gbåì_œtch_m™agî
::
	$föd_œtch
(
Õid_t
 c⁄° &
roŸ
,

95 
boﬁ
 )

97 
sockë
 = 
˝u_öfo
::
	`sockë_£lf
();

98 
œtch_t
 *
œtch
=
NULL
;

100 
	`CRITICAL_SECTION
(
cs
, 
_sockë_œtch_locks
[
sockë
] 
OCCREAD
);

101 
båì_œtch_m≠
::
ôî©‹
 
pos
=
_sockë_œtches
[
sockë
].
	`föd
(
roŸ
);

102 if(
pos
 !
_sockë_œtches
[
sockë
].
	`íd
()) {

103 
Õid_t
 
MAYBE_UNUSED
 
xxx
 = 
pos
->
fú°
;

104 
	`w_as£π1
(
roŸ
==
xxx
);

105 
œtch
=
pos
->
£c⁄d
;

106  *
œtch
;

111 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

112 
	`CRITICAL_SECTION
(
sockë_cs
, 
_sockë_œtch_locks
[
sockë
] 
OCCWRITE
);

113 if–(
œtch
=
_sockë_œtches
[
sockë
][
roŸ
]) ) {

114  *
œtch
;

118 if–! ( 
œtch
=
_œtches
[
roŸ
]) ) {

119 
œtch
 = 
√w
 
œtch_t
;

120 
_œtches
[
roŸ
] = 
œtch
;

122 
_sockë_œtches
[
sockë
][
roŸ
] = 
œtch
;

123  *
œtch
;

124 
	}
}

127 
	gbåì_œtch_m™agî
::
	$_de°roy_œtches
(
Õid_t
 c⁄° &
roŸ
)

129 
i
=0; i < 
_sockë_cou¡
; i++) {

130 
	`CRITICAL_SECTION
(
cs
, 
_sockë_œtch_locks
[
i
] 
OCCWRITE
);

131 
_sockë_œtches
[
i
].
	`îa£
(
roŸ
);

133 
båì_œtch_m≠
::
ôî©‹
 
pos
=
_œtches
.
	`föd
(
roŸ
);

134 if(
pos
 !
_œtches
.
	`íd
())

136 
	`w_as£π1
(
roŸ
 =
pos
->
fú°
);

137 
œtch_t
 *
œtch
 = 
pos
->
£c⁄d
;

138 
_œtches
.
	`îa£
(
pos
);

139 
dñëe
 
œtch
;

142 
	}
}

144 
	gbåì_œtch_m™agî
::
	$de°roy_œtches
(
Õid_t
 c⁄° &
roŸ
)

146 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

147 
	`_de°roy_œtches
(
roŸ
);

148 
	}
}

151 
	gbåì_œtch_m™agî
::
	$de°roy_œtches
(
°id_t
 c⁄° &
°‹e
)

153 
i
=0;

154 
°d
::
ve˘‹
<
Õid_t
> 
_tmp
;

155 
_tmp
.
	`ª£rve
(30);

157 
	`CRITICAL_SECTION
(
cs
, 
_œtch_lock
 
OCCWRITE
);

161 
båì_œtch_m≠
::
ôî©‹
 
pos
=
_œtches
.
	`begö
();

162 
pos
 !
_œtches
.
	`íd
();

163 
pos
++

166 
Õid_t
 
roŸ
 = 
pos
->
fú°
;

167 if(
roŸ
.
_°id
 =
°‹e
) {

168 
_tmp
.
	`push_back
(
roŸ
);

174 
i
=0; i < 
_tmp
.
	`size
(); i++)

176 
	`_de°roy_œtches
(
_tmp
[
i
]);

178 
	}
}

180 
	gbåì_œtch_m™agî
::~
	$båì_œtch_m™agî
()

182 
	`shutdown
();

183 
dñëe
 [] 
_sockë_œtches
;

184 
dñëe
 [] 
_sockë_œtch_locks
;

185 
	}
}

	@src/sm/btree_latch_manager.h

53 #i‚de‡
BTREE_LATCH_MGR_H


54 
	#BTREE_LATCH_MGR_H


	)

56 
	~"w_deföes.h
"

60 #i‚de‡
BASICS_H


61 
	~"basics.h
"

64 #i‚de‡
SM_S_H


65 
	~"sm_s.h
"

68 #i‚de‡
LATCH_H


69 
	~"œtch.h
"

72 
	~<m≠
>

86 ˛as†
	cbåì_œtch_m™agî


88 
	m¥iv©e
:

89 
	sÕid_cmp
 {

90 
boﬁ
 
›î©‹
(Ë(c⁄° 
Õid_t
 &
lhs
, c⁄° 
	mÕid_t
 &
	mrhs
) const

91 {  (
	mlhs
.
	m_°id
.
	mvﬁ
 < 
	mrhs
._stid.vol)

92 || ( (
	mlhs
.
	m_°id
.
	mvﬁ
 =
rhs
.
_°id
.
vﬁ
Ë&& (
lhs
._°id.
°‹e
 <Ñhs._stid.store) )

93 || ( (
lhs
.
_°id
.
vﬁ
 =
rhs
._°id.vﬁË&& (lhs._°id.
°‹e
 ==Ñhs._stid.store)

94 && (
lhs
.
∑ge
 < 
rhs
.page) ); }

96 
	g°d
::
	tm≠
<
	tÕid_t
, 
	tœtch_t
*, 
	tÕid_cmp
> 
	tbåì_œtch_m≠
;

98 
	g_sockë_cou¡
;

100 
båì_œtch_m≠
* 
	g_sockë_œtches
;

101 
båì_œtch_m≠
 
	g_œtches
 ;

103 
	#USE_OCC_LOCK_HERE
 1

	)

104 #ifde‡
USE_OCC_LOCK_HERE


105 
occ_rwlock
 
	tLock
;

107 
queue_ba£d_lock_t
 
	tLock
;

109 
Lock
* 
	g_sockë_œtch_locks
;

110 
Lock
 
	g_œtch_lock
;

112 
_de°roy_œtches
(
Õid_t
 c⁄° &
roŸ
) ;

114 
	gpublic
:

116 
œtch_t
 &
föd_œtch
(
Õid_t
 c⁄° &
roŸ
, 
boﬁ
 c⁄° 
bIgn‹eL©ches
 = 
Ál£
) ;

118 
de°roy_œtches
(
Õid_t
 c⁄° &
roŸ
) ;

120 
de°roy_œtches
(
°id_t
 c⁄° &
°‹e
) ;

122 
shutdown
() ;

123 
båì_œtch_m™agî
();

124 ~
båì_œtch_m™agî
() ;

127 
båì_œtch_m™agî
 
båì_œtches
;

	@src/sm/btree_p.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#BTREE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "btree_p.h"

64 
	~"sm_öt_2.h
"

66 
	~"båì_p.h
"

67 
	~"båì_im∂.h
"

68 
	~"sm_du_°©s.h
"

69 
	~<¸ash.h
>

85 
rc_t


86 
	gbåì_p
::
	$di°ribuã
(

87 
båì_p
& 
rsib
,

88 
boﬁ
& 
À·_hóvy
,

89 
¶Ÿid_t
& 
¢um
,

90 
smsize_t
 
addôi⁄
,

91 
Á˘‹
,

92 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

94 
	`w_as£π3
(
	`is_fixed
());

95 
	`w_as£π3
(
rsib
.
	`is_fixed
());

96 
	`w_as£π3
(
	`œtch_mode
(Ë=
LATCH_EX
 ||Ü©ch_mode(Ë=
LATCH_NLX
);

97 
	`w_as£π3
(
rsib
.
	`œtch_mode
(Ë=
LATCH_EX
 ||Ñsib.œtch_mode(Ë=
LATCH_NLX
);

98 
	`w_as£π1
(
¢um
 >0 && snum <
	`ƒecs
());

105 
addôi⁄
 +(
∑ge_s
::
¶Ÿ_t
);

106 
‹ig
 = 
	`u£d_•a˚
();

107 
ls
 = 
‹ig
 + 
addôi⁄
;

108 c⁄° 
kìp
 = 
Á˘‹
 * 
ls
 / 100;

110 
Êag
 = 1;

116 
rs
 = 
rsib
.
	`u£d_•a˚
();

117 
i
;

118 
i
 = 
	`ƒecs
(); i >= 0; i--) {

119 
c
;

120 i‡(
i
 =
¢um
) {

121 
c
 = 
addôi⁄
, 
Êag
 = 0;

123 
c
 = (
	`Æign
(
	`ªc_size
(
i
-
Êag
)Ë+ (
∑ge_s
::
¶Ÿ_t
));

125 
ls
 -
c
, 
rs
 += c;

126 i‡((
ls
 < 
kìp
 &&Ü†+ 
c
 <
‹ig
Ë|| 
rs
 > orig) {

127 
ls
 +
c
;

128 
rs
 -
c
;

129 i‡(
i
 =
¢um
Ë
Êag
 = 1;

137 
i
 = i + 1 - 
Êag
;

138 i‡(
i
 < 
	`ƒecs
()) {

139 
	`W_DO
–
	`shi·
(
i
, 
rsib
) );

140 
	`w_as£π3
–
rsib
.
	`pid0
() == 0);

142 
	`SSMTEST
("btree.distribute.1");

144 
	`w_as£π3
(
i
 =
	`ƒecs
());

149 i‡(
¢um
 =
	`ƒecs
()) {

150 
À·_hóvy
 = 
Êag
 != 0;

152 
À·_hóvy
 = (
¢um
 < 
	`ƒecs
());

155 i‡(! 
À·_hóvy
) {

156 
¢um
 -
	`ƒecs
();

159 #i‡
W_DEBUG_LEVEL
 > 2

160 
båì_p
& 
p
 = (
À·_hóvy
 ? *
this
 : 
rsib
);

161 
	`w_as£π1
(
¢um
 <
p
.
	`ƒecs
());

162 
	`w_as£π1
(
p
.
	`ußbÀ_•a˚
(Ë>
addôi⁄
);

164 
	`DBG
(<<"di°ribuã: ußbÀ_•a˚(Ë:Üe·=" << 
this
->
	`ußbÀ_•a˚
()

165 << ";Ñight=" << 
rsib
. 
	`ußbÀ_•a˚
() );

169  
RCOK
;

170 
	}
}

182 
rc_t


183 
	gbåì_p
::
	$_u∆ök
(
båì_p
 &
rsib
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

185 
	`DBG
(<<" u∆ökögÖage: " << 
	`pid
()

186 << "Çªc†" << 
	`ƒecs
()

188 
	`w_as£π3
(
	`is_fixed
());

189 
	`w_as£π3
(
	`œtch_mode
(Ë=
LATCH_EX
 ||Ü©ch_mode(Ë=
LATCH_NLX
);

190 if(
rsib
.
	`is_fixed
()) {

192 
	`w_as£π3
(
rsib
.
	`is_fixed
());

193 
	`w_as£π3
(
rsib
.
	`œtch_mode
(Ë=
LATCH_EX
 ||Ñsib.œtch_mode(Ë=
LATCH_NLX
);

195 
Õid_t
 
lsib_pid
 = 
	`pid
();

196 
lsib_pid
.
∑ge
 = 
	`¥ev
();

197 
shpid_t
 
rsib_∑ge
 = 
	`√xt
();

202 
	`W_DO
–
	`£t_smo
() );

203 
	`SSMTEST
("btree.unlink.1");

209 if(
rsib
.
	`is_fixed
()) {

210 
	`W_DO
–
rsib
.
	`lök_up
(
	`¥ev
(),Ñsib.
	`√xt
()) );

211 
	`SSMTEST
("btree.unlink.2");

212 
rsib
.
	`unfix
();

214 
	`unfix
();

216 
båì_p
 
lsib
;

217 if(
lsib_pid
.
∑ge
) {

218 
	`INC_TSTAT
(
bt_löks
);

219 
œtch_mode_t
 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

220 
	`W_DO
–
lsib
.
	`fix
(
lsib_pid
, 
mode
) );

221 
	`SSMTEST
("btree.unlink.3");

222 
	`W_DO
–
lsib
.
	`lök_up
÷sib.
	`¥ev
(), 
rsib_∑ge
) );

226 
	`SSMTEST
("btree.unlink.4");

227 
	`w_as£π3
(! 
rsib
.
	`is_fixed
());

228 
	`w_as£π3
–! 
	`is_fixed
());

229  
RCOK
;

230 
	}
}

232 
rc_t


233 
	gbåì_p
::
	$u∆ök_™d_¥›ag©e
(

234 c⁄° 
cvec_t
& 
key
,

235 c⁄° 
cvec_t
& 
ñem
,

236 
båì_p
& 
rsib
,

237 
Õid_t
& 
∑ª¡_pid
,

238 
Õid_t
 c⁄°& 
roŸ_pid
,

239 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

241 #i‡
W_DEBUG_LEVEL
 > 2

242 
	`W_DO
(
	`log_commít
("start unlink_and_propagate"));

244 
	`w_as£π3
(
this
->
	`is_fixed
());

245 
	`w_as£π3
(
rsib
.
	`is_fixed
(Ë|| 
	`√xt
() == 0);

247 if(
roŸ_pid
 =
	`pid
()) {

248 
	`unfix
();

250 
	`INC_TSTAT
(
bt_cuts
);

252 
Õid_t
 
chûd_pid
 = 
	`pid
();

253 
Àv
 = 
this
->
	`Àvñ
();

255 
l¢_t
 
™ch‹
;

256 
x˘_t
* 
xd
 = 
	`x˘
();

257 if(
xd
Ë
check_com≥nßãd_›_√°ög
 
	`cc⁄
(xd, 
__LINE__
, 
__FILE__
);

258 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

264 
	`X_DO
(
	`_u∆ök
(
rsib
, 
bIgn‹eL©ches
), 
™ch‹
);

265 
	`w_as£π3
–!
rsib
.
	`is_fixed
());

266 
	`w_as£π3
–!
	`is_fixed
());

268 
	`SSMTEST
("btree.propagate.d.1");

275 i‡(
∑ª¡_pid
.
∑ge
) {

276 
cvec_t
 
nuŒ
;

277 
båì_p
 
∑ª¡
;

278 
¶Ÿid_t
 
¶Ÿ
 = -1;

279 
boﬁ
 
found_key
;

280 
boﬁ
 
tŸÆ_m©ch
;

282 
	`w_as£π3
–! 
	`is_fixed
());

284 
œtch_mode_t
 
mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

285 
	`X_DO
(
∑ª¡
.
	`fix
(
∑ª¡_pid
, 
mode
), 
™ch‹
);

286 
	`X_DO
(
∑ª¡
.
	`£¨ch
(
key
, 
ñem
, 
found_key
, 
tŸÆ_m©ch
, 
¶Ÿ
), 
™ch‹
)

289 if(!
tŸÆ_m©ch
) {

290 
¶Ÿ
--;

292 if(
¶Ÿ
<0) {

293 
	`w_as£π3
(
∑ª¡
.
	`pid0
(Ë=
chûd_pid
.
∑ge
);

295 
	`w_as£π3
(
∑ª¡
.
	`chûd
(
¶Ÿ
Ë=
chûd_pid
.
∑ge
);

298 
	`X_DO
(
båì_im∂
::
	`_¥›ag©e
(
roŸ_pid
, 
key
, 
ñem
, 
chûd_pid
, 
Àv
, 
åue
,

299 
bIgn‹eL©ches
), 
™ch‹
);

300 
∑ª¡
.
	`unfix
();

302 
	`SSMTEST
("btree.propagate.d.1");

304 i‡(
xd
) {

305 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree.prop.3"));

307 
	`SSMTEST
("btree.propagate.d.3");

309 
	`w_as£π3
–! 
	`is_fixed
());

310 #i‡
W_DEBUG_LEVEL
 > 2

311 
	`W_DO
(
	`log_commít
("endÖropagate_split"));

313  
RCOK
;

314 
	}
}

327 
rc_t


328 
	gbåì_p
::
cut_∑ge
(
Õid_t
 & 
W_IFDEBUG3
(
chûd_pid
Ë, 
¶Ÿid_t
 
¶Ÿ
)

332 
w_as£π3
(
is_fixed
());

334 
Õid_t
 
	g˝id
 = 
pid
();

335 
	g˝id
.
	g∑ge
 = (
¶Ÿ
 < 0Ë? 
pid0
(Ë: 
chûd
(slot);

337 
w_as£π3
(
chûd_pid
 =
˝id
);

342 
W_DO
–
io
->
‰ì_∑ge
(
˝id
, 
Ál£
 ) );

344 
SSMTEST
("btree.propagate.d.6");

349 i‡(
	g¶Ÿ
 >= 0) {

350 
W_DO
–
ªmove
(
¶Ÿ
, 
this
->
is_com¥es£d
()) );

356 
shpid_t
 
	gpid0
 = 0;

357 i‡(
ƒecs
() > 0) {

358 
	gpid0
 = 
chûd
(0);

359 
W_DO
–
ªmove
(0, 
this
->
is_com¥es£d
()) );

360 
SSMTEST
("btree.propagate.d.4");

362 
W_DO
–
£t_pid0
(
pid0
) );

363 
	g¶Ÿ
 = 0;

365 
SSMTEST
("btree.propagate.d.5");

370 
w_as£π3
(
pid0
(Ë!0 || 
ƒecs
() == 0);

372  
	gRCOK
;

383 
rc_t


384 
	gbåì_p
::
	$£t_hdr
(
shpid_t
 
roŸ
, 
l
, shpid_à
pid0
, 
uöt2_t
 
Êags
)

386 
bt˘æ_t
 
hdr
;

387 
hdr
.
roŸ
 =Ñoot;

388 
hdr
.
pid0
 =Öid0;

389 
hdr
.
Àvñ
 = 
l
;

390 
hdr
.
Êags
 = flags;

392 
vec_t
 
v
;

393 
v
.
	`put
(&
hdr
, (hdr));

394 
	`W_DO
–
zkeyed_p
::
	`£t_hdr
(
v
) );

395  
RCOK
;

396 
	}
}

406 
rc_t


407 
	gbåì_p
::
	$£t_roŸ
(
shpid_t
 
roŸ
)

409 c⁄° 
bt˘æ_t
& 
tmp
 = 
	`_hdr
();

410 
	`W_DO
–
	`£t_hdr
(
roŸ
, 
tmp
.
Àvñ
,Åmp.
pid0
,Åmp.
Êags
) );

411  
RCOK
;

412 
	}
}

422 
rc_t


423 
	gbåì_p
::
	$£t_pid0
(
shpid_t
 
pid0
)

425 c⁄° 
bt˘æ_t
& 
tmp
 = 
	`_hdr
();

426 
	`W_DO
(
	`£t_hdr
(
tmp
.
roŸ
,Åmp.
Àvñ
, 
pid0
,Åmp.
Êags
) );

427  
RCOK
;

428 
	}
}

438 
rc_t


439 
	gbåì_p
::
	$_£t_Êag
–
Êag_t
 
f
, 
boﬁ
 
com≥nßã
)

441 
	`FUNC
(
båì_p
::
£t_Êag
);

442 
	`DBG
(<<"SETÖagêi†" << 
this
->
	`pid
(Ë<< " fœg i†" << (
f
));

444 
l¢_t
 
™ch‹
;

445 
x˘_t
* 
xd
 = 
	`x˘
();

446 if(
xd
Ë
check_com≥nßãd_›_√°ög
 
	`cc⁄
(xd, 
__LINE__
, 
__FILE__
);

447 if(
com≥nßã
) {

448 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

451 c⁄° 
bt˘æ_t
& 
tmp
 = 
	`_hdr
();

455 
w_rc_t
 
__e
 = 
	`£t_hdr
(
tmp
.
roŸ
,Åmp.
Àvñ
,Åmp.
pid0
,

456 (
uöt2_t
)(
tmp
.
Êags
 | 
f
));

457 i‡(
__e
.
	`is_îr‹
()) {

458 if(
xd
 && 
com≥nßã
)

460 
xd
->
	`rﬁlback
(
™ch‹
);

461 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("btreep1"));

463  
	`RC_AUGMENT
(
__e
);

467 if(
com≥nßã
) {

468 i‡(
xd
Ëxd->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree._set_flag"));

470  
RCOK
;

471 
	}
}

482 
rc_t


483 
	gbåì_p
::
	$_˛r_Êag
(
Êag_t
 
f
, 
boﬁ
 
com≥nßã
)

485 
	`FUNC
(
båì_p
::
˛r_Êag
);

486 
	`DBG
(<<"CLRÖagêi†" << 
this
->
	`pid
(Ë<< " fœg = " << (
f
));

488 
l¢_t
 
™ch‹
;

489 
x˘_t
* 
xd
 = 
	`x˘
();

490 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

491 if(
com≥nßã
) {

492 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

495 c⁄° 
bt˘æ_t
& 
tmp
 = 
	`_hdr
();

496 
	`X_DO
–
	`£t_hdr
(
tmp
.
roŸ
,Åmp.
Àvñ
,Åmp.
pid0
,

497 (
uöt2_t
)(
tmp
.
Êags
 & ~
f
)), 
™ch‹
 );

499 if(
com≥nßã
) {

500 i‡(
xd
Ëxd->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("btree._clr_flag"));

502  
RCOK
;

503 
	}
}

513 
rc_t


514 
	gbåì_p
::
	$f‹m©
(

515 c⁄° 
Õid_t
& 
pid
,

516 
èg_t
 
èg
,

517 
uöt4_t
 
∑ge_Êags
,

518 
°‹e_Êag_t
 
°‹e_Êags


522 
bt˘æ_t
 
˘æ
;

523 
˘æ
.
roŸ
 = 0;

524 
˘æ
.
Àvñ
 = 1;

525 
˘æ
.
Êags
 = 0;

526 
˘æ
.
pid0
 = 0;

528 
vec_t
 
vec
;

529 
vec
.
	`put
(&
˘æ
, (ctrl));

531 
	`W_DO
–
zkeyed_p
::
	`f‹m©
(
pid
, 
èg
, 
∑ge_Êags
, 
°‹e_Êags
, 
vec
) );

532  
RCOK
;

533 
	}
}

554 
rc_t


555 
	gbåì_p
::
	$£¨ch
(

556 c⁄° 
cvec_t
& 
key
,

557 c⁄° 
cvec_t
& 
ñ
,

558 
boﬁ
& 
found_key
,

559 
boﬁ
& 
found_key_ñem
,

560 
¶Ÿid_t
& 
ªt_¶Ÿ


563 
	`FUNC
(
båì_p
::
£¨ch
);

564 
	`DBG
(<< "Pagê" << 
	`pid
()

565 << "Çªcs=" << 
	`ƒecs
()

566 << " sórch f‹ key " << 
key


572 
found_key
 = 
Ál£
;

573 
found_key_ñem
 = 
Ál£
;

574 
mi
, 
lo
, 
hi
;

575 
mi
 = 0, 
lo
 = 0, 
hi
 = 
	`ƒecs
() - 1;Üo <= hi; ) {

576 
mi
 = (
lo
 + 
hi
) >> 1;

578 
båec_t
 
	`r
(*
this
, 
mi
);

579 
d
;

580 
	`DBG
(<<"÷o=" << 
lo


581 << ",hi=" << 
hi


582 << "Ëmi=" << 
mi
);

584 i‡((
d
 = 
r
.
	`key
().
	`cmp
(
key
)) == 0) {

585 
	`DBG
–<< "Ñ=("<<
r
.
	`key
()

586 << "ËCMP k=(" <<
key


587 << "Ëd(" << 
d
 << ")");

589 
found_key
 = 
åue
;

590 
	`DBG
(<<"FOUND KEY; com∑rögÉl: " << 
ñ


591 << "Ñ.ñem()=" << 
r
.
	`ñem
());

592 
d
 = 
r
.
	`ñem
().
	`cmp
(
ñ
);

595 
	`DBG
–<< "Ñ=("<<
r
.
	`ñem
()

596 << "ËCMPÉ=(" <<
ñ


597 << "Ëd(" << 
d
 << ")");

599 
	`DBG
–<< "Ñ=("<<
r
.
	`key
()

600 << "ËCMP k=(" <<
key


601 << "Ëd(" << 
d
 << ")");

608 i‡(
d
 < 0)

609 
lo
 = 
mi
 + 1;

610 i‡(
d
 > 0)

611 
hi
 = 
mi
 - 1;

613 
ªt_¶Ÿ
 = 
mi
;

614 
found_key_ñem
 = 
åue
;

615 
	`DBG
(<<"");

616  
RCOK
;

619 
ªt_¶Ÿ
 = (
lo
 > 
mi
) ?Üo : mi;

631 #i‡
W_DEBUG_LEVEL
 > 2

632 
	`w_as£π3
(
ªt_¶Ÿ
 <
	`ƒecs
());

633 if(
ªt_¶Ÿ
 =
	`ƒecs
() ) {

634 
	`w_as£π3
(!
found_key_ñem
);

637 if(
found_key
Ë
	`w_as£π3
(
ªt_¶Ÿ
 <
	`ƒecs
());

638 if(
found_key_ñem
Ë
	`w_as£π3
(
ªt_¶Ÿ
 < 
	`ƒecs
());

641 
	`DBG
(<<"Ñëu∫ög slŸ " << 
ªt_¶Ÿ


642 <<" found_key=" << 
found_key


643 <<" found_key_ñem=" << 
found_key_ñem


645  
RCOK
;

646 
	}
}

658 
rc_t


659 
	gbåì_p
::
	$ö£π
(

660 c⁄° 
cvec_t
& 
key
,

661 c⁄° 
cvec_t
& 
ñ
,

662 
¶Ÿid_t
 
¶Ÿ
,

663 
shpid_t
 
chûd
,

664 
boﬁ
 
do_ô


667 
	`FUNC
(
båì_p
::
ö£π
);

668 
	`DBG
(<<"ö£π " << 
key


669 << " i¡ÿ∑gê" << 
	`pid
()

670 << "áà¶Ÿ " << 
¶Ÿ


671 << " REALLY? " << 
do_ô


672 << "Çªcs=" << 
	`ƒecs
()

675 
cvec_t
 
	`£p
(
key
, 
ñ
);

677 
öt2_t
 
kÀn
 = 
key
.
	`size
();

678 
cvec_t
 
©å
;

679 
©å
.
	`put
(&
kÀn
, (klen));

680 i‡(
	`is_Àaf
()) {

681 
	`w_as£π3
(
chûd
 == 0);

683 
	`w_as£π3
(
chûd
);

684 
©å
.
	`put
(&
chûd
, (child));

686 
	`SSMTEST
("btree.insert.1");

688  
zkeyed_p
::
	`ö£π
(
£p
, 
©å
, 
¶Ÿ
, 
do_ô
,

689 
do_ô
?
this
->
	`is_com¥es£d
():
Ál£
);

690 
	}
}

701 
shpid_t


702 
	gbåì_p
::
	$chûd
(
¶Ÿid_t
 
¶Ÿ
) const

704 
vec_t
 
£p
;

705 c⁄° * 
aux
;

706 
auxÀn
;

708 
	`W_COERCE
–
zkeyed_p
::
	`ªc
(
¶Ÿ
, 
£p
, 
aux
, 
auxÀn
) );

709 
	`w_as£π3
(
	`is_node
(Ë&& 
auxÀn
 =2 + (
shpid_t
));

711 
shpid_t
 
chûd
;

712 
	`mem˝y
(&
chûd
, 
aux
 + 2, (
shpid_t
));

713  
chûd
;

714 
	}
}

717 
rc_t


718 
	gbåì_p
::
	$Àaf_°©s
(
båì_lf_°©s_t
& 
_°©s
)

720 
båec_t
 
ªc
[2];

721 
r
 = 0;

723 
_°©s
.
hdr_bs
 +(
	`hdr_size
(Ë+ (
∑ge_p
::
¶Ÿ_t
) +

724 
	`Æign
(
∑ge_p
::
	`tu∂e_size
(0)));

725 
_°©s
.
unu£d_bs
 +
	`≥rsi°ít_∑π
().
•a˚
.
	`n‰ì
();

727 
n
 = 
	`ƒecs
();

728 
_°©s
.
íåy_˙t
 +
n
;

730 
i
 = 0; i < 
n
; i++) {

731 
ªc
[
r
].
	`£t
(*
this
, 
i
);

732 i‡(
ªc
[
r
].
	`key
() !=Ñec[1-r].key()) {

738 
_°©s
.
unique_˙t
++;

741 if–! 
	`is_com¥es£d
()) {

742 
_°©s
.
key_bs
 +
ªc
[
r
].
	`kÀn
();

743 
_°©s
.
d©a_bs
 +
ªc
[
r
].
	`ñí
();

744 
_°©s
.
íåy_ovîhód_bs
 +(
	`Æign
(
this
->
	`ªc_size
(
i
)) -

745 
ªc
[
r
].
	`kÀn
(Ë-Ñec[r].
	`ñí
() +

746 (
∑ge_s
::
¶Ÿ_t
));

755 
_°©s
.
key_bs
 +(
ªc
[
r
].
	`kÀn
(Ë>Ñec[r].
	`∂í
()) ?

756 (
ªc
[
r
].
	`kÀn
(Ë-Ñec[r].
	`∂í
()) : 0

758 
_°©s
.
d©a_bs
 +(
ªc
[
r
].
	`kÀn
(Ë>Ñec[r].
	`∂í
()) ?

759 
ªc
[
r
].
	`ñí
() :

760 
ªc
[
r
].
	`ñí
(Ë- (ªc[r].
	`∂í
(Ë-Ñec[r].
	`kÀn
())

763 
	`DBG
(<<"ﬁdÉ¡ry_ovîhód_bs: " << 
_°©s
.
íåy_ovîhód_bs
);

764 
	`DBG
(<<"íåy_ovîhód_bs: slŸ:" << (
∑ge_s
::
¶Ÿ_t
)

765 << "Ñec.Æig√d: " <<
	`Æign
(
this
->
	`ªc_size
(
i
))

766 << " kÀn: " <<
ªc
[
r
].
	`kÀn
()

767 << "ÉÀn: " <<
ªc
[
r
].
	`ñí
()

768 << "ÖÀn: " <<
ªc
[
r
].
	`∂í
()

771 
_°©s
.
íåy_ovîhód_bs
 +(
∑ge_s
::
¶Ÿ_t
) +

772 (
	`Æign
(
this
->
	`ªc_size
(
i
)) -

773 ((
ªc
[
r
].
	`kÀn
()+Ñec[r].
	`ñí
())

774 - 
ªc
[
r
].
	`∂í
())

777 
r
 = 1 -Ñ;

779  
RCOK
;

780 
	}
}

783 
rc_t


784 
	gbåì_p
::
	$öt_°©s
(
båì_öt_°©s_t
& 
_°©s
)

786 
_°©s
.
unu£d_bs
 +
	`≥rsi°ít_∑π
().
•a˚
.
	`n‰ì
();

787 
_°©s
.
u£d_bs
 +
∑ge_sz
 - 
	`≥rsi°ít_∑π
().
•a˚
.
	`n‰ì
();

788  
RCOK
;

789 
	}
}

800 
	gbåec_t
&

801 
	gbåec_t
::
	$£t
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
)

803 
	`FUNC
(
båec_t
::
£t
);

804 
	`w_as£π3
(
¶Ÿ
 >0 && slŸ < 
∑ge
.
	`ƒecs
());

808 
_key
.
	`ª£t
();

809 
_ñem
.
	`ª£t
();

811 c⁄° * 
aux
;

812 
auxÀn
;

813 
vec_t
 
£p
;

823 if(
∑ge
.
	`is_com¥es£d
()) {

824 
pxp
;

825 
	`W_COERCE
–
∑ge
.
zkeyed_p
::
	`ªc
(
¶Ÿ
, 
_¥efix_byãs
, 
pxp
, 
£p
, 
aux
, 
auxÀn
) );

826 
	`DBG
(<<"¶Ÿ " << 
¶Ÿ
 << " ha†" << 
_¥efix_byãs
 << "Örefix bytes");

828 
	`W_COERCE
–
∑ge
.
zkeyed_p
::
	`ªc
(
¶Ÿ
, 
£p
, 
aux
, 
auxÀn
) );

831 i‡(
∑ge
.
	`is_Àaf
()) {

832 
	`w_as£π3
(
auxÀn
 == 2);

834 
	`w_as£π3
(
auxÀn
 =2 + (
shpid_t
));

838 
öt2_t
 
k
;

839 
	`mem˝y
(&
k
, 
aux
, (k));

840 
size_t
 
kÀn
 = 
k
;

842 #i‡
W_DEBUG_LEVEL
 > 2

843 
ñí_ã°
 = 
£p
.
	`size
(Ë- 
kÀn
;

844 
	`w_as£π3
(
ñí_ã°
 >= 0);

846 
smsize_t
 
ñí
 = 
£p
.
	`size
(Ë- 
kÀn
;

849 
£p
.
	`•lô
(
kÀn
, 
_key
, 
_ñem
);

850 
	`w_as£π3
(
_key
.
	`size
(Ë=
kÀn
);

851 
	`w_as£π3
(
_ñem
.
	`size
(Ë=
ñí
);

853 i‡(
∑ge
.
	`is_node
()) {

854 
	`w_as£π3
(
auxÀn
 =2 + (
shpid_t
));

855 
	`mem˝y
(&
_chûd
, 
aux
 + 2, (
shpid_t
));

857 
	`DBG
(<<"¶Ÿ " << 
¶Ÿ
 << " ha†∂í " << 
	`∂í
() );

859  *
this
;

860 
	}
}

862 
smsize_t


863 
	gbåì_p
::
ovîhód_ªquúemít_≥r_íåy
 =

868 (
shpid_t
)

871 
smsize_t


872 
	gbåì_p
::
max_íåy_size
 =

874 –(
smÀvñ_0
::
∑ge_sz
 -

876 
∑ge_p
::
_hdr_size
 +

878 (
∑ge_p
::
¶Ÿ_t
) +

879 (
l¢_t
) +

880 
Æign
((
båì_p
::
bt˘æ_t
))

884 
ovîhód_ªquúemít_≥r_íåy


887 & -
ALIGNON


902 
rc_t


903 
	gbåì_p
::
	$£t_dñëe
()

905 
x˘_t
* 
xd
 = 
	`x˘
();

906 i‡(
xd
 && xd->
	`°©e
(Ë=
smÀvñ_1
::
x˘_a˘ive
) {

907  
	`_£t_Êag
(
t_dñëe
, 
åue
);

909  
RCOK
;

911 
	}
}

912 
rc_t


913 
	gbåì_p
::
	$˛r_dñëe
() {

914 
x˘_t
* 
xd
 = 
	`x˘
();

915 i‡(
xd
 && xd->
	`°©e
(Ë=
smÀvñ_1
::
x˘_a˘ive
) {

916  
	`_˛r_Êag
(
t_dñëe
, 
åue
);

918  
RCOK
;

920 
	}
}

922 
	$MAKEPAGECODE
(
båì_p
, 
zkeyed_p
)

925 
båì_p
::
	$¥öt
(

926 
s‹t‹dî
::
keyty≥
 
kt
,

927 
boﬁ
 
¥öt_ñem


930 
i
;

931 
bt˘æ_t
 
hdr
 = 
	`_hdr
();

932 c⁄° 
L
 = 3;

934 
i
 = 0; i < 
L
 - 
hdr
.
Àvñ
; i++Ë
cout
 << '\t';

935 
cout
 << 
	`pid0
(Ë<< "=" <<Öid0(Ë<< 
ídl
;

937 
i
 = 0; i < 
	`ƒecs
(); i++) {

938 
j
 = 0; j < 
L
 - 
hdr
.
Àvñ
; j++Ë
cout
 << '\t' ;

940 
båec_t
 
	`r
(*
this
, 
i
);

941 
cvec_t
* 
ªÆ_key
;

943 if(
r
.
	`key
().
	`size
() == 0) {

945 
cout
 << "<key = " << 
r
.
	`key
() ;

946 } 
kt
) {

947 
s‹t‹dî
::
kt_b
: {

948 
cout
 << "<key = " << 
r
.
	`key
() ;

950 
s‹t‹dî
::
kt_i8
: {

951 
w_ba£_t
::
öt8_t
 
vÆue
;

952 
key_ty≥_s
 
	`k
(key_ty≥_s::
i
, 0, 8);

953 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

954 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

955 
cout
 << "<key = " << 
vÆue
;

957 
s‹t‹dî
::
kt_u8
:{

958 
uöt4_t
 
vÆue
;

959 
key_ty≥_s
 
	`k
(key_ty≥_s::
u
, 0, 8);

960 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

961 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

962 
cout
 << "<key = " << 
vÆue
;

965 
s‹t‹dî
::
kt_i4
: {

966 
öt4_t
 
vÆue
;

967 
key_ty≥_s
 
	`k
(key_ty≥_s::
i
, 0, 4);

968 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

969 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

970 
cout
 << "<key = " << 
vÆue
;

972 
s‹t‹dî
::
kt_u4
:{

973 
uöt4_t
 
vÆue
;

974 
key_ty≥_s
 
	`k
(key_ty≥_s::
u
, 0, 4);

975 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

976 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

977 
cout
 << "<key = " << 
vÆue
;

979 
s‹t‹dî
::
kt_i2
: {

980 
öt2_t
 
vÆue
;

981 
key_ty≥_s
 
	`k
(key_ty≥_s::
i
, 0, 2);

982 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

983 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

984 
cout
 << "<key = " << 
vÆue
;

986 
s‹t‹dî
::
kt_u2
: {

987 
uöt2_t
 
vÆue
;

988 
key_ty≥_s
 
	`k
(key_ty≥_s::
u
, 0, 2);

989 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

990 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

991 
cout
 << "<key = " << 
vÆue
;

993 
s‹t‹dî
::
kt_i1
: {

994 
öt1_t
 
vÆue
;

995 
key_ty≥_s
 
	`k
(key_ty≥_s::
i
, 0, 1);

996 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

997 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

998 
cout
 << "<key = " << 
vÆue
;

1000 
s‹t‹dî
::
kt_u1
: {

1001 
uöt1_t
 
vÆue
;

1002 
key_ty≥_s
 
	`k
(key_ty≥_s::
u
, 0, 1);

1003 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

1004 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

1005 
cout
 << "<key = " << 
vÆue
;

1008 
s‹t‹dî
::
kt_f8
:{

1009 
f8_t
 
vÆue
;

1010 
key_ty≥_s
 
	`k
(key_ty≥_s::
f
, 0, 8);

1011 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

1012 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

1013 
cout
 << "<key = " << 
vÆue
;

1015 
s‹t‹dî
::
kt_f4
:{

1016 
f4_t
 
vÆue
;

1017 
key_ty≥_s
 
	`k
(key_ty≥_s::
f
, 0, 4);

1018 
	`W_COERCE
(
båì_m
::
	`_uns¸ambÀ_key
(
ªÆ_key
, 
r
.
	`key
(), 1, &
k
));

1019 
ªÆ_key
->
	`c›y_to
(&
vÆue
, (value));

1020 
cout
 << "<key = " << 
vÆue
;

1024 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

1028 i‡–
	`is_Àaf
()) {

1029 if(
¥öt_ñem
) {

1030 
rid_t
 
rid
;

1031 
r
.
	`ñem
().
	`c›y_to
(&
rid
, (
rid_t
));

1032 
cout
 << ",ÉÀn=" << 
r
.
	`ñí
(Ë<< " byãs: " << 
rid
;

1035 
cout
 << ",Öid = " << 
r
.
	`chûd
();

1037 
cout
 << ">" << 
ídl
;

1039 
i
 = 0; i < 
L
 - 
hdr
.
Àvñ
; i++Ë
cout
 << '\t';

1040 
cout
 << "]" << 
ídl
;

1041 
	}
}

	@src/sm/btree_p.h

53 #i‚de‡
BTREE_P_H


54 
	#BTREE_P_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 #i‚de‡
ZKEYED_H


65 
	~<zkeyed.h
>

68 
	gbåì_lf_°©s_t
;

69 
	gbåì_öt_°©s_t
;

72 ˛as†
	cbåec_t
 {

73 
	mpublic
:

74 
NORET
 
	$båec_t
() {};

75 
NORET
 
	`båec_t
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
);

76 
NORET
 ~
	$båec_t
(Ë{
	}
};

78 
	gbåec_t
& 
£t
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
);

80 
smsize_t
 
	$kÀn
(Ëc⁄° {  
_key
.
	`size
(); 
	}
}

81 
smsize_t
 
	$ñí
(Ëc⁄° {  
_ñem
.
	`size
(); 
	}
}

82 
smsize_t
 
	$∂í
(Ëc⁄° {  (
smsize_t
)
_¥efix_byãs
; 
	}
}

84 c⁄° 
	gcvec_t
& 
	$key
(Ëc⁄° {  
_key
; 
	}
}

85 c⁄° 
	gcvec_t
& 
	$ñem
(Ëc⁄° {  
_ñem
; 
	}
}

86 
shpid_t
 
	$chûd
(Ëc⁄° {  
_chûd
; 
	}
}

88 
	g¥iv©e
:

89 
shpid_t
 
_chûd
;

90 
cvec_t
 
	g_key
;

91 
cvec_t
 
	g_ñem
;

92 
	g_¥efix_byãs
;

93 
‰õnd
 
˛ass
 
	gbåì_p
;

96 
NORET
 
båec_t
(const btrec_t&);

97 
	gbåec_t
& 
	g›î©‹
=(c⁄° 
båec_t
&);

100 
ölöe
 
NORET


101 
	gbåec_t
::
	$båec_t
(c⁄° 
båì_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
)

103 
	`£t
(
∑ge
, 
¶Ÿ
);

104 
	}
}

106 ˛as†
	cbåì_p
 : 
public
 
zkeyed_p
 {

107 
public
:

108 
‰õnd
 
˛ass
 
båec_t
;

110 
	eÊag_t
{

111 
	mt_n⁄e
 = 0x0,

112 
	mt_smo
 = 0x01,

113 
	mt_dñëe
 = 0x02,

114 
	mt_com¥es£d
 = 0x10

116 
	sbt˘æ_t
 {

117 
shpid_t
 
	groŸ
;

118 
shpid_t
 
	gpid0
;

119 
öt2_t
 
	gÀvñ
;

120 
uöt2_t
 
	gÊags
;

123 
MAKEPAGE
(
båì_p
, 
zkeyed_p
, 1);

126 
	$Àvñ
() const;

127 
shpid_t
 
	$pid0
() const;

128 
Õid_t
 
	$roŸ
() const;

129 
shpid_t
 
	$roŸ_shpid
() const;

130 
boﬁ
 
	$is_Àaf
() const;

131 
boﬁ
 
	$is_Àaf_∑ª¡
() const;

132 
boﬁ
 
	$is_node
() const;

134 
boﬁ
 
	$is_com¥es£d
() const;

135 
boﬁ
 
	$is_smo
() const;

136 
boﬁ
 
	$is_dñëe
() const;

138 
rc_t
 
	`£t_hdr
(

139 
shpid_t
 
roŸ
,

140 
Àvñ
,

141 
shpid_t
 
pid0
,

142 
uöt2_t
 
Êags
);

144 
rc_t
 
	`£t_roŸ
(
shpid_t
 
roŸ
);

146 
rc_t
 
	`£t_pid0
(
shpid_t
 
pid
);

148 
rc_t
 
	`£t_dñëe
();

149 
rc_t
 
	$£t_smo
(
boﬁ
 
com≥nßã
=
Ál£
) {

150  
	`_£t_Êag
(
t_smo
, 
com≥nßã
); 
	}
}

152 
rc_t
 
	$˛r_smo
(
boﬁ
 
com≥nßã
=
Ál£
) {

153  
	`_˛r_Êag
(
t_smo
, 
com≥nßã
); 
	}
}

154 
rc_t
 
˛r_dñëe
();

156 
rc_t
 
u∆ök_™d_¥›ag©e
(

157 c⁄° 
cvec_t
& 
key
,

158 c⁄° 
cvec_t
& 
ñem
,

159 
båì_p
& 
rsib
,

160 
Õid_t
& 
∑ª¡_pid
,

161 c⁄° 
Õid_t
& 
roŸ_pid
,

162 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

163 
rc_t
 
cut_∑ge
(
Õid_t
 &
chûd
, 
¶Ÿid_t
 
¶Ÿ
);

165 
rc_t
 
di°ribuã
(

166 
båì_p
& 
rsib
,

167 
boﬁ
& 
À·_hóvy
,

168 
¶Ÿid_t
& 
¢um
,

169 
smsize_t
 
addôi⁄
,

170 
Á˘‹
,

171 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

173 
¥öt
(
s‹t‹dî
::
keyty≥
 
kt
 = s‹t‹dî::
kt_b
,

174 
boﬁ
 
¥öt_ñem
=
Ál£
);

176 
rc_t
 
shi·
(

177 
¶Ÿid_t
 
¢um
,

178 
båì_p
& 
rsib
);

180 
rc_t
 
shi·
(

181 
¶Ÿid_t
 
¢um
,

182 
¶Ÿid_t
 
¢um_de°
,

183 
båì_p
& 
rsib
);

185 
shpid_t
 
	$chûd
(
¶Ÿid_t
 
idx
) const;

186 
	$ªc_size
(
¶Ÿid_t
 
idx
) const;

187 
	$ƒecs
() const;

189 
rc_t
 
	$£¨ch
(

190 c⁄° 
cvec_t
& 
k
,

191 c⁄° 
cvec_t
& 
e
,

192 
boﬁ
& 
found_key
,

193 
boﬁ
& 
found_key_ñem
,

194 
¶Ÿid_t
& 
ªt_¶Ÿ


196 
rc_t
 
	`ö£π
(

197 c⁄° 
cvec_t
& 
key
,

198 c⁄° 
cvec_t
& 
ñ
,

199 
¶Ÿid_t
 
¶Ÿ
,

200 
shpid_t
 
chûd
 = 0,

201 
boﬁ
 
do_ô
 = 
åue


205 
rc_t
 
	`Àaf_°©s
(
båì_lf_°©s_t
& 
båì_lf
);

207 
rc_t
 
	`öt_°©s
(
båì_öt_°©s_t
& 
båì_öt
);

210 
smsize_t
 
max_íåy_size
;

211 
smsize_t
 
ovîhód_ªquúemít_≥r_íåy
;

213 
¥iv©e
:

214 
rc_t
 
	`_u∆ök
(
båì_p
 &, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

215 
rc_t
 
	`_˛r_Êag
(
Êag_t
, 
boﬁ
 
com≥nßã
=
Ál£
);

216 
rc_t
 
	`_£t_Êag
(
Êag_t
, 
boﬁ
 
com≥nßã
=
Ál£
);

217 
rc_t
 
	`_£t_hdr
(c⁄° 
bt˘æ_t
& 
√w_hdr
);

218 c⁄° 
bt˘æ_t
& 
	$_hdr
() const ;

220 
	}
};

222 
ölöe
 c⁄° 
	gbåì_p
::
bt˘æ_t
&

223 
båì_p
::
	$_hdr
() const

225  * (
bt˘æ_t
*Ë
zkeyed_p
::
	`gë_hdr
();

226 
	}
}

232 
ölöe
 
Õid_t
 
	gbåì_p
::
	$roŸ
() const

234 
Õid_t
 
p
 = 
	`pid
();

235 
p
.
∑ge
 = 
	`_hdr
().
roŸ
;

236  
p
;

237 
	}
}

239 
ölöe
 
shpid_t
 
	gbåì_p
::
	$roŸ_shpid
() const

241  
	`_hdr
().
roŸ
;

242 
	}
}

247 
ölöe
 
	gbåì_p
::
	$Àvñ
() const

249  
	`_hdr
().
Àvñ
;

250 
	}
}

255 
ölöe
 
shpid_t
 
	gbåì_p
::
	$pid0
() const

257  
	`_hdr
().
pid0
;

258 
	}
}

263 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_dñëe
() const

265  (
	`_hdr
().
Êags
 & 
t_dñëe
)!=0;

266 
	}
}

271 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_com¥es£d
() const

274  (
	`_hdr
().
Êags
 & 
t_com¥es£d
) != 0;

275 
	}
}

280 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_smo
() const

282  (
	`_hdr
().
Êags
 & 
t_smo
)!=0;

283 
	}
}

288 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_Àaf
() const

290  
	`Àvñ
() == 1;

291 
	}
}

299 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_Àaf_∑ª¡
() const

301  
	`Àvñ
() == 2;

302 
	}
}

307 
ölöe
 
boﬁ
 
	gbåì_p
::
	$is_node
() const

309  ! 
	`is_Àaf
();

310 
	}
}

312 
ölöe
 
rc_t


313 
	gbåì_p
::
	$shi·
(

314 
¶Ÿid_t
 
¢um
,

315 
båì_p
& 
rsib
)

317 
	`w_as£π9
(
	`Àvñ
(Ë=
rsib
.level());

318  
zkeyed_p
::
	`shi·
(
¢um
, &
rsib
, 
	`is_com¥es£d
());

319 
	}
}

322 
ölöe
 
rc_t


323 
	gbåì_p
::
	$shi·
(

324 
¶Ÿid_t
 
¢um
,

325 
¶Ÿid_t
 
¢um_de°
,

326 
båì_p
& 
rsib
)

328 
	`w_as£π9
(
	`Àvñ
(Ë=
rsib
.level());

329  
zkeyed_p
::
	`shi·
(
¢um
, 
¢um_de°
, &
rsib
, 
	`is_com¥es£d
());

330 
	}
}

333 
ölöe
 

334 
	gbåì_p
::
	$ªc_size
(
¶Ÿid_t
 
idx
) const

336  
zkeyed_p
::
	`ªc_size
(
idx
);

337 
	}
}

339 
ölöe
 

340 
	gbåì_p
::
	$ƒecs
() const

342  
zkeyed_p
::
	`ƒecs
();

343 
	}
}

	@src/sm/chkpt.cpp

53 
	~"w_deföes.h
"

58 
	#SM_SOURCE


	)

59 
	#CHKPT_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄


65 
	~"sm_öt_1.h
"

66 
	~"chk±_£rül.h
"

67 
	~"chk±.h
"

68 
	~"logdef_gí.˝p
"

69 
	~"bf_c‹e.h
"

70 
	~"x˘_dïídít.h
"

71 
	~<√w
>

73 #ifde‡
EXPLICIT_TEMPLATE


74 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gl¢_t
>;

75 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gtid_t
>;

76 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gsmÀvñ_1
::
x˘_°©e_t
>;

89 ˛as†
	cchk±_thªad_t
 : 
public
 
smthªad_t
 {

90 
public
:

91 
NORET
 
chk±_thªad_t
();

92 
	mNORET
 ~
chk±_thªad_t
();

94 
vútuÆ
 
run
();

95 
ªtúe
();

96 
awakí
();

97 
	m¥iv©e
:

98 
boﬁ
 
_ªtúe
;

99 
±hªad_muãx_t
 
	m_ªtúe_awakí_lock
;

100 
±hªad_c⁄d_t
 
	m_ªtúe_awakí_c⁄d
;

101 
boﬁ
 
	m_kicked
;

103 
NORET
 
chk±_thªad_t
(const chkpt_thread_t&);

104 
	mchk±_thªad_t
& 
	m›î©‹
=(c⁄° 
chk±_thªad_t
&);

108 
	sﬁd_x˘_åackî
 {

109 
	mdïídít
 : 
x˘_dïídít_t
 {

110 
w_lök_t
 
_lök
;

111 
ﬁd_x˘_åackî
* 
	m_ow√r
;

113 
dïídít
(
x˘_t
* 
xd
, 
ﬁd_x˘_åackî
* 
ow√r
)

114 : 
x˘_dïídít_t
(
xd
), 
_ow√r
(
ow√r
)

116 
ªgi°î_me
();

119 
vútuÆ
 
x˘_°©e_ch™ged
(
smÀvñ_1
::
x˘_°©e_t
,

120 
smÀvñ_1
::
x˘_°©e_t
 
√w_°©e
)

122 if(
√w_°©e
 =
smÀvñ_1
::
x˘_íded
)

123 
_ow√r
->
ªp‹t_föished
(
xd
());

127 
ﬁd_x˘_åackî
(Ë: 
_li°
(
W_LIST_ARG
(
dïídít
, 
_lök
), 0Ë, 
_cou¡
(0)

129 
±hªad_muãx_öô
(&
_lock
, 0);

130 
±hªad_c⁄d_öô
(&
_c⁄d
, 0);

133 ~
ﬁd_x˘_åackî
() {

134 
w_as£π2
(! 
_cou¡
);

135 
	m_li°
.
p›
()) ;

138 
åack
(
x˘_t
* 
xd
) {

139 
dïídít
* 
	md
 = 
√w
 dïídít(
xd
, 
this
);

140 
±hªad_muãx_lock
(&
_lock
);

141 
	m_cou¡
++;

142 
	m_li°
.
push
(
d
);

143 
±hªad_muãx_u∆ock
(&
_lock
);

146 
boﬁ
 
föished
() const {

147 vﬁ©ûêc⁄°* 
	mcou¡
 = &
_cou¡
;

148  0 =*
cou¡
;

151 
waô_f‹_Æl
() {

152 
±hªad_muãx_lock
(&
_lock
);

153 
	m_cou¡
)

154 
±hªad_c⁄d_waô
(&
_c⁄d
, &
_lock
);

155 
±hªad_muãx_u∆ock
(&
_lock
);

158 
ªp‹t_föished
(
x˘_t
*) {

159 
±hªad_muãx_lock
(&
_lock
);

160 if(! --
	m_cou¡
)

161 
±hªad_c⁄d_sig«l
(&
_c⁄d
);

162 
±hªad_muãx_u∆ock
(&
_lock
);

165 
±hªad_muãx_t
 
	m_lock
;

166 
±hªad_c⁄d_t
 
	m_c⁄d
;

167 
	mw_li°_t
<
	mdïídít
, 
	munß„_li°_dummy_lock_t
> 
	m_li°
;

168 
	m_cou¡
;

180 
NORET


181 
	gchk±_m
::
	$chk±_m
()

182 : 
	`_chk±_thªad
(0), 
	$_chk±_cou¡
(0)

184 
	}
}

193 
NORET


194 
	gchk±_m
::~
	$chk±_m
()

196 i‡(
_chk±_thªad
) {

197 
	`ªtúe_chk±_thªad
();

199 
	}
}

209 
	gchk±_m
::
	$•awn_chk±_thªad
()

211 
	`w_as£π1
(
_chk±_thªad
 == 0);

212 i‡(
smÀvñ_0
::
log
) {

214 
_chk±_thªad
 = 
√w
 
chk±_thªad_t
;

215 i‡(! 
_chk±_thªad
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

216 
	`W_COERCE
(
_chk±_thªad
->
	`f‹k
());

218 
	}
}

230 
	gchk±_m
::
	$ªtúe_chk±_thªad
()

232 i‡(
log
) {

233 
	`w_as£π1
(
_chk±_thªad
);

234 
_chk±_thªad
->
	`ªtúe
();

235 
	`W_COERCE
–
_chk±_thªad
->
	`joö
() );

236 
dñëe
 
_chk±_thªad
;

237 
_chk±_thªad
 = 0;

239 
	}
}

242 
	gchk±_m
::
	$wakeup_™d_èke
()

244 if(
log
 && 
_chk±_thªad
) {

245 
	`INC_TSTAT
(
log_chk±_wake
);

246 
_chk±_thªad
->
	`awakí
();

248 
	}
}

268 
	gchk±_m
::
	$èke
()

270 
	`FUNC
(
chk±_m
::
èke
);

271 i‡(! 
log
) {

277 
	`INC_TSTAT
(
log_chk±_˙t
);

282 
w_auto_dñëe_t
<
logªc_t
> 
	`logªc
(
√w
Üogrec_t);

294 
chk±_£rül_m
::
	`chk±_acquúe
();

295 
ªåy
:

321 
	#LOG_INSERT
(
c⁄°ru˘‹_ˇŒ
, 
æ¢
) \

323 
	`√w
 (
logªc
Ë
c⁄°ru˘‹_ˇŒ
; \

324 
	`W_COERCE
–
log
->
	`ö£π
(*
logªc
, 
æ¢
) ); \

325 if(!
log
->
	`c⁄sume_chk±_ª£rv©i⁄
(
logªc
->
	`Àngth
())) { \

326 
	`W_FATAL
(
eOUTOFLOGSPACE
); \

328 } 0)

	)

343 
cuº_≤um
 = 
log
->
	`cuº_l¢
().
	`fûe
();

344 
too_ﬁd_≤um
 = 
°d
::
	`max
(0l, 
cuº_≤um
 - 
max_›ílog
+1);

345 if(!
log
->
	`vîify_chk±_ª£rv©i⁄
()) {

350 
too_ﬁd_≤um
 = 
log
->
	`globÆ_mö_l¢
().
	`fûe
();

351 if(
too_ﬁd_≤um
 =
cuº_≤um
) {

353 
	`W_FATAL
(
eOUTOFLOGSPACE
);

364 
l¢_t
 
ﬁde°_vÆid_l¢
 = 
log_m
::
	`fú°_l¢
(
too_ﬁd_≤um
+1);

365 
ﬁd_x˘_åackî
 
åackî
;

367 
x˘_i
 
	`ô
(
åue
);

368 
x˘_t
* 
xd
=
ô
.
	`√xt
()) {

369 
l¢_t
 c⁄° &
Ê¢
 = 
xd
->
	`fú°_l¢
();

370 if(
Ê¢
.
	`vÆid
(Ë&& fl¢ < 
ﬁde°_vÆid_l¢
) {

372 
xd
->
	`f‹˚_n⁄blockög
();

373 
åackî
.
	`åack
(
xd
);

383 
chk±_°amp
 = 
_chk±_cou¡
;

384 
chk±_£rül_m
::
	`chk±_ªÀa£
();

388 
	`W_COERCE
(
bf
->
	`f‹˚_u¡û_l¢
(
ﬁde°_vÆid_l¢
, 
Ál£
));

393 if(!
åackî
.
	`föished
())

394 
åackî
.
	`waô_f‹_Æl
();

397 
chk±_£rül_m
::
	`chk±_acquúe
();

398 if(
_chk±_cou¡
 !
chk±_°amp
)

399 
ªåy
;

406 
l¢_t
 
ma°î
;

407 
	`LOG_INSERT
(
	`chk±_begö_log
(
io
->
	`GëLa°Mou¡LSN
()), &
ma°î
);

426 
l¢_t
 
mö_ªc_l¢
 =Ü¢_t::
max
;

428 
bfsz
 = 
bf
->
	`≈ages
();

429 c⁄° 
chunk
 = 
chk±_bf_èb_t
::
max
;

431 
w_auto_dñëe_¨øy_t
<
Õid_t
> 
	`pid
(
√w
Üpid_t[
chunk
]);

432 
w_auto_dñëe_¨øy_t
<
l¢_t
> 
	`ªc_l¢
(
√w
Ü¢_t[
chunk
]);

433 
	`w_as£π1
(
pid
 && 
ªc_l¢
);

435 
tŸÆ_cou¡
 = 0;

436 
i
 = 0; i < 
bfsz
; ) {

440 
cou¡
 = 
chunk
;

443 
	`W_COERCE
–
bf
->
	`gë_ªc_l¢
(
i
, 
cou¡
, 
pid
, 
ªc_l¢
, 
mö_ªc_l¢
) );

444 i‡(
cou¡
) {

445 
tŸÆ_cou¡
+
cou¡
;

451 
	`LOG_INSERT
(
	`chk±_bf_èb_log
(
cou¡
, 
pid
, 
ªc_l¢
), 0);

466 c⁄° 
chunk
 = ()
max_vﬁs
 > ()
chk±_dev_èb_t
::
max


467 ? ()
chk±_dev_èb_t
::
max
 : ()
max_vﬁs
;

468 
dev_˙t
 = 
io
->
	`num_vﬁs
();

470 
i
;

471 **
devs
;

472 
devs
 = 
√w
 *[
chunk
];

473 i‡(!
devs
)

474 
	`W_FATAL
(
fcOUTOFMEMORY
);

475 
i
 = 0; i < 
chunk
; i++) {

476 
devs
[
i
] = 
√w
 [
max_dev«me
+1];

477 i‡(!
devs
[
i
])

478 
	`W_FATAL
(
fcOUTOFMEMORY
);

480 
vid_t
 *
vids
;

481 
vids
 = 
√w
 
vid_t
[
chunk
];

482 i‡(!
vids
)

483 
	`W_FATAL
(
fcOUTOFMEMORY
);

485 
i
 = 0; i < 
dev_˙t
; i +
chunk
) {

487 
ªt
;

488 
	`W_COERCE
–
io
->
	`gë_vﬁs
(
i
, 
	`MIN
(
dev_˙t
 - i, 
chunk
),

489 
devs
, 
vids
, 
ªt
));

490 i‡(
ªt
) {

495 
	`LOG_INSERT
(
	`chk±_dev_èb_log
(
ªt
, (c⁄° **Ë
devs
, 
vids
), 0);

498 
dñëe
 [] 
vids
;

499 
i
 = 0; i < 
chunk
; i++)

500 
dñëe
 [] 
devs
[
i
];

501 
dñëe
 [] 
devs
;

509 
l¢_t
 
mö_x˘_l¢
 =Ü¢_t::
max
;

511 c⁄° 
chunk
 = 
chk±_x˘_èb_t
::
max
;

512 
tid_t
 
younge°
 = 
x˘_t
::
	`younge°_tid
();

513 
w_auto_dñëe_¨øy_t
<
tid_t
> 
	`tid
(
√w
Åid_t[
chunk
]);

514 
w_auto_dñëe_¨øy_t
<
x˘_°©e_t
> 
	`°©e
(
√w
 x˘_°©e_t[
chunk
]);

515 
w_auto_dñëe_¨øy_t
<
l¢_t
> 
	`œ°_l¢
(
√w
Ü¢_t[
chunk
]);

516 
w_auto_dñëe_¨øy_t
<
l¢_t
> 
	`undo_nxt
(
√w
Ü¢_t[
chunk
]);

527 
x˘_i
 
	`x
(
åue
);

529 c⁄° 
x˘_t
* 
xd
 = 0;

531 
i
 = 0;

532 
i
 < 
chunk
 && (
xd
 = 
x
.
	`√xt
())) {

539 if–
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_íded
) {

542 i‡(
xd
->
	`fú°_l¢
().
	`vÆid
()) {

543 
tid
[
i
] = 
xd
->
	`tid
();

544 
°©e
[
i
] = 
xd
->
	`°©e
();

549 i‡(
°©e
[
i
] =
x˘_t
::
x˘_ab‹tög
)

550 
°©e
[
i
] = 
x˘_t
::
x˘_a˘ive
;

553 i‡(
°©e
[
i
] =
x˘_t
::
x˘_¥ï¨ed
) {

554 
	`DBG
(<< 
tid
[
i
] <<" isÖrepared --Üoggingásáctive");

555 
°©e
[
i
] = 
x˘_t
::
x˘_a˘ive
;

564 
œ°_l¢
[
i
] = 
xd
->
	`œ°_l¢
();

565 
undo_nxt
[
i
] = 
xd
->
	`undo_nxt
();

567 i‡(
mö_x˘_l¢
 > 
xd
->
	`fú°_l¢
())

568 
mö_x˘_l¢
 = 
xd
->
	`fú°_l¢
();

570 
i
++;

583 
	`LOG_INSERT
(
	`chk±_x˘_èb_log
(
younge°
, 
i
, 
tid
, 
°©e
,

584 
œ°_l¢
, 
undo_nxt
), 0);

586 } 
xd
);

595 
	`DBG
(<< "checkpointÖreparedÅx");

596 
x˘_i
 
	`x
(
åue
);

597 
x˘_t
* 
xd
 = 0;

598  (
xd
 = 
x
.
	`√xt
()) ) {

599 
	`DBG
(<< 
xd
->
	`tid
(Ë<< " ha†°©ê" << xd->
	`°©e
());

600 i‡(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
) {

601 
	`w_as£π1
(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

602 
	`DBG
(<< 
xd
->
	`tid
() << "LOG PREPARED ");

610 
	`me
()->
	`©èch_x˘
(
xd
);

611 
	`w_as£π1
(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

612 
	`W_COERCE
(
xd
->
	`log_¥ï¨ed
(
åue
));

613 
	`me
()->
	`dëach_x˘
(
xd
);

628 i‡(
mö_ªc_l¢
 > 
ma°î
) min_rec_lsn = master;

629 i‡(
mö_x˘_l¢
 > 
ma°î
) min_xct_lsn = master;

634 
	`LOG_INSERT
(
	`chk±_íd_log
 (
ma°î
, 
mö_ªc_l¢
), 0);

639 
	`W_COERCE
–
log
->
	`Êush_Æl
() );

645 
log
->
	`£t_ma°î
(
ma°î
, 
mö_ªc_l¢
, 
mö_x˘_l¢
);

650 
	`W_COERCE
–
log
->
	`sˇvíge
(
mö_ªc_l¢
, 
mö_x˘_l¢
) );

652 
chk±_£rül_m
::
	`chk±_ªÀa£
();

653 
	}
}

666 
	gchk±_thªad_t
::
	$chk±_thªad_t
()

667 : 
	`smthªad_t
(
t_time_¸ôiˇl
, "chk±", 
WAIT_NOT_USED
),

668 
	`_ªtúe
(
Ál£
), 
	$_kicked
(
Ál£
)

670 
	`ª«me
("chkpt_thread");

671 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_ªtúe_awakí_lock
, 
NULL
));

672 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_ªtúe_awakí_c⁄d
, 
NULL
));

673 
	}
}

683 
	gchk±_thªad_t
::~
	$chk±_thªad_t
()

686 
	}
}

707 
chk±_thªad_t
::
	$run
()

709 ! 
_ªtúe
) {

711 
	`CRITICAL_SECTION
(
cs
, 
_ªtúe_awakí_lock
);

712 !
_kicked
 && !
_ªtúe
) {

713 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_ªtúe_awakí_c⁄d
, &
_ªtúe_awakí_lock
));

715 
_kicked
 = 
Ál£
;

717 if(
_ªtúe
)

720 
smÀvñ_1
::
chk±
->
	`èke
();

722 
	}
}

736 
	gchk±_thªad_t
::
	$ªtúe
()

738 
	`CRITICAL_SECTION
(
cs
, 
_ªtúe_awakí_lock
);

739 
_ªtúe
 = 
åue
;

740 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_ªtúe_awakí_c⁄d
));

741 
	}
}

744 
	gchk±_thªad_t
::
	$awakí
()

746 
	`CRITICAL_SECTION
(
cs
, 
_ªtúe_awakí_lock
);

747 
_kicked
 = 
åue
;

748 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_ªtúe_awakí_c⁄d
));

749 
	}
}

	@src/sm/chkpt.h

53 #i‚de‡
CHKPT_H


54 
	#CHKPT_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 
	~"sm_öt_1.h
"

65 
˛ass
 
	gchk±_thªad_t
;

79 ˛as†
	cchk±_m
 : 
public
 
smÀvñ_1
 {

80 
public
:

81 
NORET
 
chk±_m
();

82 
	mNORET
 ~
chk±_m
();

84 
	mpublic
:

85 
wakeup_™d_èke
();

86 
•awn_chk±_thªad
();

87 
ªtúe_chk±_thªad
();

88 
èke
();

90 
	m¥iv©e
:

91 
chk±_thªad_t
* 
_chk±_thªad
;

92 
	m_chk±_cou¡
;

95 
	mpublic
:

	@src/sm/chkpt_serial.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#CHKPT_SERIAL_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄


65 
	~<sm_öt_0.h
>

66 
	~<chk±_£rül.h
>

78 
occ_rwlock
 
	g_chk±_muãx
;

81 
	gchk±_£rül_m
::
	$åx_ªÀa£
()

83 
_chk±_muãx
.
	`ªÀa£_ªad
();

84 
	}
}

87 
	gchk±_£rül_m
::
	$åx_acquúe
()

89 
_chk±_muãx
.
	`acquúe_ªad
();

90 
	}
}

93 
	gchk±_£rül_m
::
	$chk±_ªÀa£
()

95 
_chk±_muãx
.
	`ªÀa£_wrôe
();

96 
	}
}

99 
	gchk±_£rül_m
::
	$chk±_acquúe
()

101 
_chk±_muãx
.
	`acquúe_wrôe
();

102 
	}
}

	@src/sm/chkpt_serial.h

53 #i‚de‡
CHKPT_SERIAL_H


54 
	#CHKPT_SERIAL_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 ˛as†
	cchk±_£rül_m
 : 
public
 
smÀvñ_0
 {

65 
public
:

66 
åx_acquúe
();

67 
åx_ªÀa£
();

68 
chk±_acquúe
();

69 
chk±_ªÀa£
();

	@src/sm/common_templates.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#LOGREC_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


62 
	~"sm_öt_2.h
"

70 #ifde‡
EXPLICIT_TEMPLATE


74 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<>;

80 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gÕid_t
>;

85 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	glogªc_t
>;

	@src/sm/crash.cpp

30 
	~"w_deföes.h
"

39 
	#SM_SOURCE


	)

40 
	#LOG_C


	)

41 #ifde‡
__GNUG__


42 #¥agm®
im∂emíèti⁄


45 
	~<sm_öt_0.h
>

46 
	~<¸ash.h
>

50 
boﬁ
 
logåa˚
(
Ál£
);

52 #i‡
deföed
(
USE_SSMTEST
)

54 
	sdebugöfo
 {

55 
debugöfo_íum
 
	mköd
;

56 
boﬁ
 
	mvÆid
;

57 
boﬁ
 
	möôülized
;

58 
	mvÆue
;

59 
	mm©ches
;

60 * 
	m«me
;

64 
debugöfo
 
	g_debugöfo
 = {

65 
debug_n⁄e
,

66 
Ál£
,

67 
Ál£
,

72 
	$_£tdebugöfo
(

73 
debugöfo_íum
 
e
,

74 
debugöfo
 &
_d
,

75 c⁄° *
«me
, 
vÆue


78 
	`w_as£π3
(
	`°æí
(
«me
)>0);

80 
_d
.
öôülized
 = 
åue
;

81 
_d
.
vÆid
 = 
åue
;

82 
_d
.
m©ches
 = 0;

83 
_d
.
vÆue
 = value;

84 
_d
.
köd
 = 
e
;

87 if(
_d
.
«me
) {

88 
dñëe
[] 
_d
.
«me
;

89 
_d
.
«me
 = 0;

91 { 
l
 = 
	`°æí
(
«me
)+1;

92 
_d
.
«me
 = 
√w
 [
l
];

93 
	`w_as£π3
(
_d
.
«me
);

94 
	`mem˝y
(
_d
.
«me
,Çame, 
l
);

96 
˚º
 << 
__LINE__
 << ":"

97 << 
_d
.
«me
 << " = " << _d.
vÆue


98 << " inô:" << 
_d
.
öôülized


99 << " vÆid:" << 
_d
.
vÆid


100 << " m©ches:" << 
_d
.
m©ches


101 << " köd:" << (
_d
.
köd
)

102 << 
ídl
;

103 
	}
}

106 
	$gëdebugöfo
(

119 
debugöfo
 &
_d
,

120 c⁄° *
K
,

121 c⁄° *
T
,

122 c⁄° *
V


125 
	`w_as£π3
(
	`°æí
(
T
)>0);

126 
	`w_as£π3
(
	`°æí
(
V
)>0);

127 
	`w_as£π3
(
	`°æí
(
K
)>0);

129 if(
_d
.
öôülized
) ;

131 *
n
=0, *
k
=0; 
vÆ
=0;

132 if–(
k
 = ::
	`gëív
(
K
)) ) {

134 
debugöfo_íum
 
_k
=
debug_n⁄e
;

135 if(
	`°rcmp
(
k
, "¸ash")==0){ 
_k
 = 
debug_¸ash
; }

136 if(
	`°rcmp
(
k
, "ab‹t")==0){ 
_k
 = 
debug_ab‹t
; }

137 if(
	`°rcmp
(
k
, "yõld")==0){ 
_k
 = 
debug_yõld
; }

138 if(
	`°rcmp
(
k
, "dñay")==0){ 
_k
 = 
debug_dñay
; }

140 
˚º
 << 
k
 << ": bad value forÉnvironment variable "

141 << 
K
 << 
ídl
;

144 if–(
n
 = ::
	`gëív
(
T
)) ) {

145 *
v
 = ::
	`gëív
(
V
);

146 if(
v
) {

147 
vÆ
 = 
	`©oi
(
v
);

149 
	`_£tdebugöfo
(
_k
,
_d
,
n
,
vÆ
);

152 
	}
}

154 
	$£tdebugöfo
(

155 
debugöfo_íum
 
köd
,

156 c⁄° *
«me
, 
vÆue


159 
	`_£tdebugöfo
(
köd
, 
_debugöfo
, 
«me
, 
vÆue
);

160 
	}
}

164 
¸ashã°
(

165 
log_m
 * 
log
,

166 c⁄° * 
W_IFTRACE
(
c
),

167 c⁄° *
fûe
,

168 
löe


171 
	g˚º
 << "¸ashã°" << 
	gídl
;

174 if(
	g_debugöfo
.
	gvÆue
 == 0 ||

175 
_debugöfo
.
m©ches
 =_debugöfo.
vÆue
) {

183 if(
log
) {

184 
W_COERCE
(
log
->
Êush
÷og->
cuº_l¢
()));

185 
w_as£π3
(
log
->
duøbÀ_l¢
(Ë=log->
cuº_l¢
());

186 
DBG
–<< "Cøshã° " << 
c


187 << " duøbÀ_l¢ i†" << 
log
->
duøbÀ_l¢
() );

190 
me
()->
yõld
();

193 
Ârötf
(
°dîr
, "CRASH %dát %s from %s %d\n",

194 
_debugöfo
.
vÆue
, _debugöfo.
«me
, 
fûe
, 
löe
);

195 
_exô
(44);

200 
	$dñayã°
(

201 c⁄° *
fûe
,

202 
löe


205 if(
_debugöfo
.
vÆue
 != 0 ) {

209 
˚º
 << "DELAY "

210 << 
_debugöfo
.
vÆue


211 << "áà" << 
_debugöfo
.
«me


212 << "áàlöê" << 
löe


213 << " fûê" << 
fûe


214 << 
ídl
;

215 
	`me
()->
	`¶ìp
(
_debugöfo
.
vÆue
, _debugöfo.
«me
);

217 
	}
}

219 
w_rc_t


220 
	$ab‹âe°
()

222 if–
_debugöfo
.
m©ches
 =_debugöfo.
vÆue
) {

223  
	`RC
(
smÀvñ_0
::
eUSERABORT
);

225  
RCOK
;

226 
	}
}

229 
	$yõldã°
()

231 if–
_debugöfo
.
m©ches
 =_debugöfo.
vÆue
) {

232 
	`me
()->
	`yõld
();

234 
	}
}

236 
w_rc_t


237 
	$ssmã°
(

238 
log_m
 * 
log
,

239 c⁄° *
c
,

240 c⁄° *
fûe
,

241 
löe


244 #unde‡
LOCATING


245 #ifde‡
LOCATING


246 
smÀvñ_0
::
îæog
->
˛og
 << 
emîg_¥io
 << 
c
 << 
Êushl
;

249 
	`w_as£π3
(
	`°æí
(
c
)>0);

252 
	`gëdebugöfo
(
_debugöfo
, "SSMTEST_KIND", "SSMTEST", "SSMTEST_ITER");

253 if(! 
_debugöfo
.
vÆid
Ë 
RCOK
;

254 if(::
	`°rcmp
(
_debugöfo
.
«me
,
c
Ë!0Ë 
RCOK
;

255 ++
_debugöfo
.
m©ches
;

256 
	`Ârötf
(
°dîr
, "SshÅest %s #%d value=%d kind=%d\n",

257 
c
, 
_debugöfo
.
m©ches
,

258 
_debugöfo
.
vÆue
, (_debugöfo.
köd
) );

260 
_debugöfo
.
köd
) {

261 
debug_dñay
:

262 
	`dñayã°
(
fûe
, 
löe
);

264 
debug_¸ash
:

265 
	`¸ashã°
(
log
, 
c
, 
fûe
, 
löe
);

267 
debug_yõld
:

268 
	`yõldã°
();

270 
debug_ab‹t
:

271  
	`ab‹âe°
();

274 
˚º
<< "Unknow¿köd: " << (
_debugöfo
.
köd
Ë<<
ídl
;

275  
RCOK
;

277 if(::
	`°rcmp
(
_debugöfo
.
«me
,
c
Ë!0Ë 
RCOK
;

279  
RCOK
;

280 
	}
}

	@src/sm/crash.h

30 #i‚de‡
CRASH_H


31 
	#CRASH_H


	)

33 
	~"w_deföes.h
"

37 
boﬁ
 
logåa˚
;

38 #i‡
W_DEBUG_LEVEL
 >= 0

39 
	#LOGTRACE
(
¨g
) \

40 if(
logåa˚
) {\

41 
w_o°r°ªam
 
s
; \

42 
s
 <<"Åh."<<
	`me
()->
id
 << " " << "tid." << 
	`x˘
()->
	`tid
(Ë<< " " 
¨g
 ; \

43 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
()); \

44 }

	)

46 
	#LOGTRACE1
(
¨g
) \

47 if(
logåa˚
) {\

48 
w_o°r°ªam
 
s
; \

49 
s
 <<"Åh."<<
	`me
()->
id
 << " " 
¨g
 ; \

50 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
()); \

51 }

	)

54 
	#LOGTRACE
(
¨g
)

	)

55 
	#LOGTRACE1
(
¨g
)

	)

59 
	edebugöfo_íum
 { 
	mdebug_n⁄e
, 
	mdebug_dñay
, 
	mdebug_¸ash
, 
	mdebug_ab‹t
, 
	mdebug_yõld
 };

61 
w_rc_t
 
ssmã°
(
log_m
 *, c⁄° *
c
, c⁄° *
fûe
, 
löe
) ;

62 
£tdebugöfo
(
debugöfo_íum
, const *, );

64 #i‡
deföed
(
USE_SSMTEST
)

66 
	#SSMTEST
(
x
Ë
	`W_DO
(
	`ssmã°
(
smÀvñ_0
::
log
,x,
__FILE__
,
__LINE__
))

	)

67 
	#VOIDSSMTEST
(
x
Ë
	`W_IGNORE
(
	`ssmã°
(
smÀvñ_0
::
log
,x,
__FILE__
,
__LINE__
))

	)

71 
	#SSMTEST
(
x
)

	)

72 
	#VOIDSSMTEST
(
x
)

	)

	@src/sm/data_access_histogram.cpp

35 #ifde‡
__GNUG__


36 #¥agm®
im∂emíèti⁄
 "data_access_histogram.h"

39 
	~"d©a_ac˚ss_hi°ogøm.h
"

53 
	gd©a_ac˚ss_hi°ogøm
::
	$d©a_ac˚ss_hi°ogøm
()

54 : 
	`_is_loˇl
(
Ál£
), 
	`_ödex
(0), 
	$_ages
(1)

56 
_foo_keys
.
	`˛ór
();

57 
	}
}

60 
	gd©a_ac˚ss_hi°ogøm
::
	$d©a_ac˚ss_hi°ogøm
(
key_ønges_m≠
& 
krm
,

61 c⁄° 
comm⁄_gønuœrôy
,

62 c⁄° 
uöt
 
ages
,

63 c⁄° 
boﬁ
 
is_loˇl
)

65 
	`öôülize
(
krm
, 
comm⁄_gønuœrôy
, 
ages
, 
is_loˇl
);

66 
	}
}

69 
	gd©a_ac˚ss_hi°ogøm
::
	$öôülize
(
key_ønges_m≠
& 
krm
,

70 c⁄° 
comm⁄_gønuœrôy
,

71 c⁄° 
uöt
 
ages
,

72 c⁄° 
boﬁ
 
is_loˇl
)

74 
_ödex
 = 0;

75 
_is_loˇl
 = 
is_loˇl
;

76 
_ages
 = 
ages
;

80 
_foo_keys
.
	`˛ór
();

81 
ve˘‹
<
Õid_t
> 
subåìs
;

82 
w_rc_t
 
r
 = 
krm
.
	`gëAŒP¨tôi⁄s
(
subåìs
);

83 i‡(
r
.
	`is_îr‹
()Ë{ 
	`W_FATAL
‘.
	`îr_num
()); }

85 if(!
is_loˇl
) {

86 
_hi°ogøm_lock
.
	`acquúe_wrôe
();

90 
cvec_t
 
°¨t_key
;

91 
cvec_t
 
íd_key
;

92 
uöt
 
∑πsCª©ed
;

93 
uöt
 
numP¨ts
 = 100/
comm⁄_gønuœrôy
;

94 
uöt
 
size
;

95 
uöt
 
i
=0; i < 
subåìs
.
	`size
(); i++) {

97 
krm
.
	`gëBound¨õs
(
subåìs
[
i
], 
°¨t_key
, 
íd_key
);

98 * 
möKey_c
 = (*Ë
	`mÆloc
(
°¨t_key
.
	`size
());

99 
°¨t_key
.
	`c›y_to
(
möKey_c
, sèπ_key.
	`size
());

100 * 
maxKey_c
 = (*Ë
	`mÆloc
(
íd_key
.
	`size
());

101 
íd_key
.
	`c›y_to
(
maxKey_c
,Énd_key.
	`size
());

102 ** 
subP¨ts
 = (**Ë
	`mÆloc
(
numP¨ts
*(*));

103 
size
 = (
°¨t_key
.
	`size
(Ë< 
íd_key
.size()) ? start_key.size() :Énd_key.size();

105 
∑πsCª©ed
 = 
key_ønges_m≠
::
	`di°ribuãS∑˚
(
möKey_c
, 
°¨t_key
.
	`size
(),

106 
maxKey_c
, 
íd_key
.
	`size
(),

107 
numP¨ts
, 
subP¨ts
);

109 
uöt
 
j
=0; j<
∑πsCª©ed
; j++) {

110 
foo
* 
√wkv
 = 
√w
 
	`foo
(
subP¨ts
[
j
], 
size
, 
åue
);

111 
uöt
 
j
=0; j < 
_ages
; j++) {

112 
_ønge_ac˚s£s
[
subåìs
[
i
]][*
√wkv
].
	`push_back
(0);

115 
_foo_keys
[
subåìs
[
i
]].
	`push_back
(
√wkv
);

117 
_gønuœrôõs
[
subåìs
[
i
]] = 
comm⁄_gønuœrôy
;

119 
uöt
 
i
=0; i<
∑πsCª©ed
; i++) {

120 
dñëe
 
subP¨ts
[
i
];

122 
dñëe
 
subP¨ts
;

123 
dñëe
 
möKey_c
;

124 
dñëe
 
maxKey_c
;

127 if(!
is_loˇl
) {

128 
_hi°ogøm_lock
.
	`ªÀa£_wrôe
();

130 
	}
}

133 
	gd©a_ac˚ss_hi°ogøm
::~
	$d©a_ac˚ss_hi°ogøm
()

137 
	`DBG
(<<"DestroyingÅhe dataáccess histogram: ");

139 if(!
_is_loˇl
) {

140 
_hi°ogøm_lock
.
	`acquúe_wrôe
();

150 
of°ªam
 
	`d©a_ac˚s£s
("d©a_ac˚s£s.txt", 
ios
::
≠p
);

151 
ønges_hi°_ôî
 
ønges_ôî
 = 
_ønge_ac˚s£s
.
	`begö
();

152 
ønges_ôî
 !
_ønge_ac˚s£s
.
	`íd
();

153 
ønges_ôî
++) {

154 
d©a_ac˚s£s
 << 
ídl
;

155 
d©a_ac˚s£s
 << 
ønges_ôî
->
fú°
 << 
ídl
;

156 
sub_ønges_hi°_ôî
 
sub_ønges_ôî
 = (
ønges_ôî
->
£c⁄d
).
	`begö
();

157 
sub_ønges_ôî
 !(
ønges_ôî
->
£c⁄d
).
	`íd
();

158 
sub_ønges_ôî
++) {

159 
d©a_ac˚s£s
 << "\t" << (
sub_ønges_ôî
->
fú°
).
_m
 << " : " << (sub_ønges_ôî->
£c⁄d
)[0] << 
ídl
;

165 
key_vÆues_ôî
 
keys_ôî
 = 
_foo_keys
.
	`begö
();

166 
keys_ôî
 !
_foo_keys
.
	`íd
();

167 
keys_ôî
++) {

168 
sub_key_vÆues_ôî
 
sub_keys_ôî
 = (
keys_ôî
->
£c⁄d
).
	`begö
();

169 
sub_keys_ôî
 !(
keys_ôî
->
£c⁄d
).
	`íd
();

170 
sub_keys_ôî
++) {

171 i‡(*
sub_keys_ôî
) {

172 
	`dñëe
 (*
sub_keys_ôî
);

173 *
sub_keys_ôî
 = 
NULL
;

178 if(!
_is_loˇl
) {

179 
_hi°ogøm_lock
.
	`ªÀa£_wrôe
();

181 
	}
}

199 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$öc_ac˚ss_cou¡
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
)

201 
w_rc_t
 
r
 = 
RCOK
;

202 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

206 if(!
_is_loˇl
) {

207 
_hi°ogøm_lock
.
	`acquúe_ªad
();

208 
_roŸ_locks
[
roŸ
].
	`acquúe_ªad
();

213 
ønges_hi°_ôî
 
ønges_ôî
 = 
_ønge_ac˚s£s
.
	`föd
(
roŸ
);

214 if(
ønges_ôî
 =
_ønge_ac˚s£s
.
	`íd
()) {

215 
r
 = 
	`RC
(
hi°_ROOT_DOESNT_EXIST
);

217 
sub_ønges_hi°_ôî
 
sub_ønges_ôî
 = (
ønges_ôî
->
£c⁄d
).
	`lowî_bound
(
kv
);

218 if(
sub_ønges_ôî
 =(
ønges_ôî
->
£c⁄d
).
	`íd
()) {

219 
r
 = 
	`RC
(
hi°_RANGE_DOESNT_EXIST
);

221 
	`©omic_öc
((
sub_ønges_ôî
->
£c⁄d
)[
_ödex
]);

226 if(!
_is_loˇl
) {

228 
_roŸ_locks
[
roŸ
].
	`ªÀa£_ªad
();

229 
_hi°ogøm_lock
.
	`ªÀa£_ªad
();

232  (
r
);

233 
	}
}

248 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$upd©e_ac˚ss_cou¡
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
, 
uöt
 
amou¡
)

250 
w_rc_t
 
r
 = 
RCOK
;

251 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

255 if(!
_is_loˇl
) {

256 
_hi°ogøm_lock
.
	`acquúe_ªad
();

257 
_roŸ_locks
[
roŸ
].
	`acquúe_ªad
();

262 
ønges_hi°_ôî
 
ønges_ôî
 = 
_ønge_ac˚s£s
.
	`föd
(
roŸ
);

263 if(
ønges_ôî
 =
_ønge_ac˚s£s
.
	`íd
()) {

264 
r
 = 
	`RC
(
hi°_ROOT_DOESNT_EXIST
);

266 
sub_ønges_hi°_ôî
 
sub_ønges_ôî
 = (
ønges_ôî
->
£c⁄d
).
	`lowî_bound
(
kv
);

267 if(
sub_ønges_ôî
 =(
ønges_ôî
->
£c⁄d
).
	`íd
()) {

268 
r
 = 
	`RC
(
hi°_RANGE_DOESNT_EXIST
);

270 
	`©omic_add_öt
(&((
sub_ønges_ôî
->
£c⁄d
)[
_ödex
]), 
amou¡
);

275 if(!
_is_loˇl
) {

277 
_roŸ_locks
[
roŸ
].
	`ªÀa£_ªad
();

278 
_hi°ogøm_lock
.
	`ªÀa£_ªad
();

281  (
r
);

282 
	}
}

295 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$add_buckë
(c⁄° 
Õid_t
& , )

297 
	`as£π
(0);

299  (
RCOK
);

300 
	}
}

315 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$add_sub_buckë
(c⁄° 
Õid_t
& , c⁄° 
Key
& , )

317 
	`as£π
(0);

319  (
RCOK
);

320 
	}
}

333 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$dñëe_buckë
(c⁄° 
Õid_t
& )

335 
	`as£π
(0);

337  (
RCOK
);

338 
	}
}

351 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$dñëe_sub_buckë
(c⁄° 
Õid_t
& , c⁄° 
Key
& )

353 
	`as£π
(0);

355  (
RCOK
);

356 
	}
}

376 
w_rc_t
 
	gd©a_ac˚ss_hi°ogøm
::
	$upd©e_gønuœrôy
(c⁄° 
Õid_t
& 
roŸ
, 
√w_gønuœrôy
)

378 
w_rc_t
 
r
 = 
RCOK
;

381 if(!
_is_loˇl
) {

382 
_hi°ogøm_lock
.
	`acquúe_ªad
();

383 
_roŸ_locks
[
roŸ
].
	`acquúe_wrôe
();

387 
gøn_m≠_ôî
 
gøn_ôî
 = 
_gønuœrôõs
.
	`föd
(
roŸ
);

388 if(
gøn_ôî
 =
_gønuœrôõs
.
	`íd
()) {

389 
r
 = 
	`RC
(
hi°_ROOT_DOESNT_EXIST
);

391 
gøn_ôî
->
£c⁄d
 = 
√w_gønuœrôy
;

392 
	`as£π
(0);

396 if(!
_is_loˇl
) {

397 
_roŸ_locks
[
roŸ
].
	`ªÀa£_wrôe
();

398 
_hi°ogøm_lock
.
	`ªÀa£_ªad
();

401  (
r
);

402 
	}
}

409 
	gd©a_ac˚ss_hi°ogøm
& d©a_ac˚ss_hi°ogøm::
›î©‹
=(c⁄° 
d©a_ac˚ss_hi°ogøm
& )

413 
DBG
(<<"CopyingÅhe dataáccess histogram: ");

414 
as£π
(0);

415  *
	gthis
;

422 
	gd©a_ac˚ss_hi°ogøm
::
	$öc_age
() {

423 
_ödex
 = (_ödex+1Ë% 
_ages
;

424 
	}
}

	@src/sm/data_access_histogram.h

36 #i‚de‡
_DATA_ACCESS_HISTOGRAM_H


37 
	#_DATA_ACCESS_HISTOGRAM_H


	)

39 
	~"w_deföes.h
"

41 
	~"key_ønges_m≠.h
"

43 #ifde‡
__GNUG__


44 #¥agm®
öãrÁ˚


47 
usög
 
«me•a˚
 
	g°d
;

59 
	mhi°_ROOT_DOESNT_EXIST
 = 0x830007,

60 
	mhi°_RANGE_DOESNT_EXIST
 = 0x830008

76 ˛as†
	cd©a_ac˚ss_hi°ogøm


78 
	mpublic
:

83 
m≠
< 
	tÕid_t
, 
	tm≠
< 
	tfoo
, 
	tve˘‹
<
	tuöt
>, 
	tcmp_gª©î
 > > 
	tønges_hi°
;

84 
	mm≠
< 
	tÕid_t
, 
	tm≠
< 
	tfoo
, 
	tve˘‹
<
	tuöt
>, 
	tcmp_gª©î
 > >::
	tôî©‹
 
	tønges_hi°_ôî
;

85 
	mm≠
< 
	tÕid_t
, 
	tm≠
< 
	tfoo
, 
	tve˘‹
<
	tuöt
>, 
	tcmp_gª©î
 > >::
	tc⁄°_ôî©‹
 
	tønges_hi°_côî
;

86 
	mm≠
< 
	tfoo
, 
	tve˘‹
<
	tuöt
>, 
	tcmp_gª©î
 >::
	tôî©‹
 
	tsub_ønges_hi°_ôî
;

87 
	mm≠
< 
	tfoo
, 
	tve˘‹
<
	tuöt
>, 
	tcmp_gª©î
 >::
	tc⁄°_ôî©‹
 
	tsub_ønges_hi°_côî
;

88 
	mve˘‹
<
	tuöt
>::
	tôî©‹
 
	tsub_ønges_hi°_buckës_ôî
;

89 
	mve˘‹
<
	tuöt
>::
	tc⁄°_ôî©‹
 
	tsub_ønges_hi°_buckës_côî
;

97 
	mm≠
< 
	tÕid_t
, 
	tocc_rwlock
 > 
	troŸ_locks
;

98 
	mm≠
< 
	tÕid_t
, 
	tocc_rwlock
 >::
	tôî©‹
 
	troŸ_locks_ôî
;

99 
	mm≠
< 
	tÕid_t
, 
	tocc_rwlock
 >::
	tc⁄°_ôî©‹
 
	troŸ_locks_côî
;

101 
	mm≠
< 
	tÕid_t
, > 
	tgøn_m≠
;

102 
	mm≠
< 
	tÕid_t
, >::
	tôî©‹
 
	tgøn_m≠_ôî
;

103 
	mm≠
< 
	tÕid_t
, >::
	tc⁄°_ôî©‹
 
	tgøn_m≠_côî
;

105 
	mm≠
< 
	tÕid_t
, 
	tve˘‹
<
	tfoo
*> > 
	tkey_vÆues
;

106 
	mm≠
< 
	tÕid_t
, 
	tve˘‹
<
	tfoo
*> >::
	tôî©‹
 
	tkey_vÆues_ôî
;

107 
	mm≠
< 
	tÕid_t
, 
	tve˘‹
<
	tfoo
*> >::
	tc⁄°_ôî©‹
 
	tkey_vÆues_côî
;

108 
	mve˘‹
<
	tfoo
*>::
	tôî©‹
 
	tsub_key_vÆues_ôî
;

109 
	mve˘‹
<
	tfoo
*>::
	tc⁄°_ôî©‹
 
	tsub_key_vÆues_côî
;

111 
	m¥iv©e
:

113 
cvec_t
 
	tKey
;

116 
key_vÆues
 
	m_foo_keys
;

119 
ønges_hi°
 
	m_ønge_ac˚s£s
;

124 
gøn_m≠
 
	m_gønuœrôõs
;

129 
boﬁ
 
	m_is_loˇl
;

135 
occ_rwlock
 
	m_hi°ogøm_lock
;

138 
roŸ_locks
 
	m_roŸ_locks
;

158 
uöt
 
	m_ödex
;

161 
uöt
 
	m_ages
;

163 
	mpublic
:

167 
d©a_ac˚ss_hi°ogøm
();

168 
d©a_ac˚ss_hi°ogøm
(
key_ønges_m≠
& 
krm
, c⁄° 
comm⁄_gønuœrôy
,

169 c⁄° 
uöt
 
ages
, c⁄° 
boﬁ
 
is_loˇl
);

171 
öôülize
(
key_ønges_m≠
& 
krm
, c⁄° 
comm⁄_gønuœrôy
,

172 c⁄° 
uöt
 
ages
, c⁄° 
boﬁ
 
is_loˇl
);

175 ~
d©a_ac˚ss_hi°ogøm
();

181 
w_rc_t
 
öc_ac˚ss_cou¡
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
);

184 
w_rc_t
 
upd©e_ac˚ss_cou¡
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
, 
uöt
 
amou¡
);

187 
w_rc_t
 
add_buckë
(c⁄° 
Õid_t
& 
roŸ
, 
gønuœrôy
);

188 
w_rc_t
 
add_sub_buckë
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
, 
amou¡
);

189 
w_rc_t
 
dñëe_buckë
(c⁄° 
Õid_t
& 
roŸ
);

190 
w_rc_t
 
dñëe_sub_buckë
(c⁄° 
Õid_t
& 
roŸ
, c⁄° 
Key
& 
key
);

197 
w_rc_t
 
upd©e_gønuœrôy
(c⁄° 
Õid_t
& 
roŸ
, 
√w_gønuœrôy
);

201 
	md©a_ac˚ss_hi°ogøm
& 
	m›î©‹
=(c⁄° 
d©a_ac˚ss_hi°ogøm
& 
rhs
);

205 
öc_age
();

	@src/sm/device.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#DEVICE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄


64 
	~"sm_öt_0.h
"

65 
	~"devi˚.h
"

67 #ifde‡
EXPLICIT_TEMPLATE


68 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gdevi˚_s
,
	gqueue_ba£d_lock_t
>;

69 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gdevi˚_s
,
	gqueue_ba£d_lock_t
>;

70 
ãm∂©e
 
˛ass
 
	gw_li°_c⁄°_i
<
	gdevi˚_s
,
	gqueue_ba£d_lock_t
>;

75 
queue_ba£d_lock_t
 
	gdevi˚_m
::
_èbÀ_lock
;

77 
	gdevi˚_m
::
	$devi˚_m
()

78 : 
	`_èb
(
	`W_LIST_ARG
(
devi˚_s
, 
lök
), &
_èbÀ_lock
)

80 
	}
}

82 
	gdevi˚_m
::~
	$devi˚_m
()

84 
	`w_as£π1
(
_èb
.
	`is_em±y
());

85 
	}
}

87 
w_rc_t
 
	gdevi˚_m
::
	$mou¡
(

88 c⁄° * 
dev_«me
,

89 c⁄° 
devi˚_hdr_s
& 
dev_hdr
,

90 
u_öt
& 
vﬁ_˙t
)

93 
devi˚_s
* 
_dev
 = 
	`_föd
(
dev_«me
);

94 i‡(!
_dev
) {

95 
devid_t
 
	`devid
(
dev_«me
);

96 
_dev
 = 
	`_föd
(
devid
);

97 i‡(
_dev
) {

99  
	`RC
(
eALREADYMOUNTED
);

101 
_dev
 = 
√w
 
devi˚_s
;

102 i‡(!
_dev
Ë 
	`RC
(
eOUTOFMEMORY
);

103 
	`°∫˝y
(
_dev
->
«me
, 
dev_«me
, (_dev->name)-1);

105 
_dev
->
quŸa_∑ges
 = 
	`shpid_t
(
dev_hdr
.
quŸa_KB
/(
∑ge_sz
/1024));

106 
_dev
->
id
 = 
devid
;

107 
_èb
.
	`≠≥nd
(
_dev
);

111 
vﬁ_˙t
 = 0;

112 i‡(
dev_hdr
.
lvid
 !
lvid_t
::
nuŒ
Ë
vﬁ_˙t
++;

114  
RCOK
;

115 
	}
}

117 
w_rc_t
 
	gdevi˚_m
::
	$dismou¡
(c⁄° * 
dev_«me
)

122 
devi˚_s
* 
_dev
 = 
	`_föd
(
dev_«me
);

123 i‡(!
_dev
Ë 
	`RC
(
eDEVNOTMOUNTED
);

125 
_dev
->
lök
.
	`dëach
();

126 
dñëe
 
_dev
;

127  
RCOK
;

128 
	}
}

130 
w_rc_t
 
	gdevi˚_m
::
	$dismou¡_Æl
()

135 
w_li°_i
<
devi˚_s
,
queue_ba£d_lock_t
> 
	`sˇn
(
_èb
);

136 
sˇn
.
	`√xt
()) {

137 
sˇn
.
	`cuº
()->
lök
.
	`dëach
();

138 
dñëe
 
sˇn
.
	`cuº
();

140 
	`w_as£π1
(
_èb
.
	`is_em±y
());

141  
RCOK
;

142 
	}
}

144 
boﬁ
 
	gdevi˚_m
::
	$is_mou¡ed
(c⁄° * 
dev_«me
)

146 
devi˚_s
* 
_dev
 = 
	`_föd
(
	`devid_t
(
dev_«me
));

147 i‡(!
_dev
Ë 
Ál£
;

148  
åue
;

149 
	}
}

151 
rc_t
 
	gdevi˚_m
::
	$quŸa
(c⁄° * 
dev_«me
, 
smksize_t
& 
quŸa_KB
)

154 
devi˚_s
* 
_dev
 = 
	`_föd
(
dev_«me
);

155 i‡(!
_dev
Ë 
	`RC
(
eDEVNOTMOUNTED
);

156 
quŸa_KB
 = 
_dev
->
quŸa_∑ges
*(
∑ge_sz
/1024);

157  
RCOK
;

158 
	}
}

160 
rc_t
 
	gdevi˚_m
::
	$li°_devi˚s
(c⁄° **& 
dev_li°
, 
devid_t
*& 
devid_li°
, 
u_öt
& 
dev_˙t
)

162 
dev_˙t
 = 
_èb
.
	`num_membîs
();

163 i‡(
dev_˙t
 == 0) {

164 
dev_li°
 = 
NULL
;

165  
RCOK
;

167 
dev_li°
 = 
√w
 c⁄° *[
dev_˙t
];

168 i‡(!
dev_li°
) {

169 
dev_˙t
 = 0;

170  
	`RC
(
eOUTOFMEMORY
);

172 
devid_li°
 = 
√w
 
devid_t
[
dev_˙t
];

173 i‡(!
devid_li°
) {

174 
dev_˙t
 = 0;

175  
	`RC
(
eOUTOFMEMORY
);

177 
w_li°_i
<
devi˚_s
,
queue_ba£d_lock_t
> 
	`sˇn
(
_èb
);

178 
i
 = 0; 
sˇn
.
	`√xt
(); i++) {

179 
dev_li°
[
i
] = 
sˇn
.
	`cuº
()->
«me
;

180 
devid_li°
[
i
] = 
sˇn
.
	`cuº
()->
id
;

182  
RCOK
;

183 
	}
}

185 
	gdevi˚_m
::
	$dump
() const

187 
cout
 << "DEVICE TABLE: " << 
ídl
;

188 
w_li°_c⁄°_i
<
devi˚_s
,
queue_ba£d_lock_t
> 
	`sˇn
(
_èb
);

189 
sˇn
.
	`√xt
()) {

190 
cout
 << 
sˇn
.
	`cuº
()->
«me
 << " id:" << sˇn.cuº()->
id
 << " quŸ®" << sˇn.cuº()->
quŸa_∑ges
 << 
ídl
;

192 
	}
}

194 
devi˚_s
* 
	gdevi˚_m
::
	$_föd
(c⁄° * 
dev_«me
)

196 
w_li°_i
<
devi˚_s
,
queue_ba£d_lock_t
> 
	`sˇn
(
_èb
);

197 
sˇn
.
	`√xt
(Ë&& 
	`°rcmp
(
dev_«me
, sˇn.
	`cuº
()->
«me
)) ;

198  
sˇn
.
	`cuº
();

199 
	}
}

201 
devi˚_s
* 
	gdevi˚_m
::
	$_föd
(c⁄° 
devid_t
& 
devid
)

203 
w_li°_i
<
devi˚_s
,
queue_ba£d_lock_t
> 
	`sˇn
(
_èb
);

204 
sˇn
.
	`√xt
(Ë&& 
devid
 !sˇn.
	`cuº
()->
id
) ;

205  
sˇn
.
	`cuº
();

206 
	}
}

	@src/sm/device.h

30 #i‚de‡
DEVICE_H


31 
	#DEVICE_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


43 
	sdevi˚_s
 {

44 
	m«me
[
smÀvñ_0
::
max_dev«me
+1];

45 
shpid_t
 
	mquŸa_∑ges
;

46 
devid_t
 
	mid
;

48 
w_lök_t
 
	mlök
;

51 
	sdevi˚_hdr_s
 {

52 
devi˚_hdr_s
(
uöt4_t
 
vîsi⁄
,

53 
sm_diskaddr_t
 
quŸa_ö_KB
,

54 
lvid_t
 
v
) :

55 
f‹m©_vîsi⁄
(
vîsi⁄
), 
quŸa_KB
(
quŸa_ö_KB
), 
lvid
(
v
) {}

56 
uöt4_t
 
	mf‹m©_vîsi⁄
;

57 
sm_diskaddr_t
 
	mquŸa_KB
;

58 
lvid_t
 
	mlvid
;

61 ˛as†
	cdevi˚_m
 : 
public
 
smÀvñ_0
 {

62 
public
:

63 íum { 
max
 = 
smÀvñ_0
::
max_vﬁs
 };

64 
devi˚_m
();

65 ~
devi˚_m
();

67 
rc_t
 
mou¡
(c⁄° * 
dev_«me
, c⁄° 
devi˚_hdr_s
& 
dev_hdr
, 
u_öt
& 
vﬁ_˙t
);

68 
boﬁ
 
is_mou¡ed
(c⁄° * 
dev_«me
);

69 
rc_t
 
quŸa
(c⁄° * 
dev_«me
, 
smksize_t
& 
quŸa_KB
);

70 
rc_t
 
dismou¡
(c⁄° * 
dev_«me
);

71 
rc_t
 
dismou¡_Æl
();

72 
rc_t
 
li°_devi˚s
(c⁄° **& 
dev_li°
, 
devid_t
*& 
devs
, 
u_öt
& 
dev_˙t
);

73 
	$dump
() const;

75 
¥iv©e
:

76 
devi˚_s
* 
	`_föd
(c⁄° * 
dev_«me
);

77 
devi˚_s
* 
	`_föd
(c⁄° 
devid_t
& 
devid
);

80 
queue_ba£d_lock_t
 
_èbÀ_lock
;

81 
w_li°_t
<
devi˚_s
,
queue_ba£d_lock_t
> 
_èb
;

84 
	`devi˚_m
(c⁄° 
devi˚_m
&);

85 
devi˚_m
& 
›î©‹
=(const device_m&);

86 
	}
};

	@src/sm/dir.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

59 
	#DIR_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄
 "dir.h"

63 #¥agm®
im∂emíèti⁄
 "sdesc.h"

67 
	~<sm_öt_3.h
>

68 
	~"hi°o.h
"

69 
	~<btcurs‹.h
>

72 
	~"båì_p.h
"

73 
	~"btcurs‹.h
"

75 
	~"ønges_p.h
"

77 #ifde‡
EXPLICIT_TEMPLATE


79 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gsöfo_s
>;

80 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gsmÀvñ_3
::
sm_°‹e_¥›îty_t
>;

87 c⁄° 
	gdú_key_ty≥_size
 = (
¢um_t
);

88 c⁄° 
key_ty≥_s
 
dú_key_ty≥
(key_ty≥_s::
u
, 0, 
dú_key_ty≥_size
);

90 
rc_t


91 
	gdú_vﬁ_m
::
	$_mou¡
(c⁄° * c⁄° 
dev«me
, 
vid_t
 
vid
)

93 i‡(
_˙t
 >
max
Ë 
	`RC
(
eNVOL
);

95 i‡(
vid
 =
vid_t
::
nuŒ
Ë 
	`RC
(
eBADVOL
);

97 
i
;

98 
i
 = 0; i < 
max
; i++) {

99 i‡(
_roŸ
[
i
].
	`vﬁ
(Ë=
vid
Ë 
	`RC
(
eALREADYMOUNTED
);

101 
i
 = 0; i < 
max
 && (
_roŸ
[i] !
Õid_t
::
nuŒ
); i++) ;

102 
	`w_as£π1
(
i
 < 
max
);

104 
	`W_DO
(
io
->
	`mou¡
(
dev«me
, 
vid
));

106 
°id_t
 
°id
;

107 
°id
.
vﬁ
 = 
vid
;

108 
°id
.
°‹e
 = 
°‹e_id_dúe˘‹y
;

110 
Õid_t
 
pid
;

111 
rc_t
 
rc
 = 
io
->
	`fú°_∑ge
(
°id
, 
pid
);

112 i‡(
rc
.
	`is_îr‹
()) {

113 
	`W_COERCE
(
io
->
	`dismou¡
(
vid
, 
Ál£
));

114  
	`RC
(
rc
.
	`îr_num
());

116 
_roŸ
[
i
] = 
pid
;

117 ++
_˙t
;

118  
RCOK
;

119 
	}
}

121 
rc_t


122 
	gdú_vﬁ_m
::
	$_dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

126 
i
;

127 
i
 = 0; i < 
max
 && 
_roŸ
[i].
	`vﬁ
(Ë!
vid
; i++) ;

128 i‡(
i
 >
max
) {

129 
	`DBG
(<<"_dismou¡: BADVOL " << 
vid
);

130  
	`RC
(
eBADVOL
);

133 
lock_mode_t
 
m
 = 
NL
;

134 i‡(!
dismou¡_if_locked
) {

135 
lockid_t
 
	`lockid
(
vid
);

136 
	`W_DO
–
lm
->
	`quîy
(
lockid
, 
m
) );

140 i‡(
m
 !
EX
) {

141 i‡(
Êush
) {

142 
	`W_DO
–
	`_de°roy_ãmps
(
_roŸ
[
i
].
	`vﬁ
()));

144 i‡(
m
 !
IX
 && m !
SIX
) {

145 
	`w_as£π3
(
m
 !
EX
);

146 
	`W_DO
–
io
->
	`dismou¡
(
vid
, 
Êush
) );

148 i‡(
m
 !
IX
 && m !
SIX
) {

149 
	`w_as£π3
(
m
 !
EX
);

150 
_roŸ
[
i
] = 
Õid_t
::
nuŒ
;

151 --
_˙t
;

154  
RCOK
;

155 
	}
}

157 
rc_t


158 
	gdú_vﬁ_m
::
	$_dismou¡_Æl
(
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

160 
	`FUNC
(
dú_vﬁ_m
::
_dismou¡_Æl
);

161 
i
 = 0; i < 
max
; i++) {

162 i‡(
_roŸ
[
i
].
	`vÆid
()) {

163 
	`W_DO
–
	`_dismou¡
(
_roŸ
[
i
].
	`vﬁ
(), 
Êush
, 
dismou¡_if_locked
) );

166  
RCOK
;

167 
	}
}

169 
rc_t


170 
	gdú_vﬁ_m
::
	$_ö£π
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
si
)

172 i‡(!
si
.
°‹e
) {

173 
	`DBG
(<<"_ö£π: BADSTID " << 
si
.
°‹e
);

174  
	`RC
(
eBADSTID
);

177 
i
=0;

178 
	`W_DO
(
	`_föd_roŸ
(
°id
.
vﬁ
, 
i
));

180 
vec_t
 
ñ
;

181 
ñ
.
	`put
(&
si
, (si));

183 
vec_t
 
key
;

184 
key
.
	`put
(&
si
.
°‹e
, (si.store));

185 
	`w_as£π3
((
si
.
°‹e
Ë=
dú_key_ty≥_size
);

186 
	`W_DO
–
bt
->
	`ö£π
(
_roŸ
[
i
], 1, &
dú_key_ty≥
,

187 
åue
, 
t_cc_n⁄e
, 
key
, 
ñ
) );

189  
RCOK
;

190 
	}
}

192 
rc_t


193 
	gdú_vﬁ_m
::
	$_de°roy_ãmps
(
vid_t
 
vid
)

195 
	`FUNC
(
dú_vﬁ_m
::
_de°roy_ãmps
);

196 
rc_t
 
rc
;

197 
i
 = 0;

198 
	`W_DO
(
	`_föd_roŸ
(
vid
, 
i
));

200 
	`w_as£π1
(
i
>=0);

201 
	`w_as£π1
(
	`x˘
() == 0);

211 
x˘_auto_ab‹t_t
 
x˘_auto
;

213 
smksize_t
 
qkb
, 
qukb
;

214 
uöt4_t
 
ext_u£d
;

215 
	`W_DO
(
io
->
	`gë_vﬁume_quŸa
(
vid
, 
qkb
, 
qukb
, 
ext_u£d
));

217 
¢um_t
* 
cuº_key
 = 
√w
 snum_t[
ext_u£d
];

218 
w_auto_dñëe_¨øy_t
<
¢um_t
> 
	`auto_dñ_key
(
cuº_key
);

220 
söfo_s
* 
cuº_vÆue
 = 
√w
 söfo_s[
ext_u£d
];

221 
w_auto_dñëe_¨øy_t
<
söfo_s
> 
	`auto_dñ_vÆue
(
cuº_vÆue
);

223 
num_¥ï¨ed
 = 0;

224 
	`W_DO
–
x˘_t
::
	`quîy_¥ï¨ed
(
num_¥ï¨ed
) );

225 
lock_mode_t
 
m
 = 
NL
;

227 
j
=0;

230 
bt_curs‹_t
 
	`curs‹
(
åue
);

231 
	`W_DO
–
bt
->
	`„tch_öô
(
curs‹
, 
_roŸ
[
i
],

232 1, &
dú_key_ty≥
,

233 
åue
 ,

234 
t_cc_n⁄e
,

235 
vec_t
::
√g_öf
, vec_t::neg_inf,

236 
smÀvñ_0
::
ge
,

237 
smÀvñ_0
::
À
, 
vec_t
::
pos_öf


240  (!(
rc
 = 
bt
->
	`„tch
(
curs‹
)).
	`is_îr‹
()Ë&& curs‹.
	`key
()) {

241 
	`w_as£π1
(
curs‹
.
	`kÀn
(Ë=(
¢um_t
));

242 
	`mem˝y
(&
cuº_key
[
j
], 
curs‹
.
	`key
(), curs‹.
	`kÀn
());

243 
	`mem˝y
(&
cuº_vÆue
[
j
], 
curs‹
.
	`ñem
(), curs‹.
	`ñí
());

245 
°id_t
 
	`s
(
vid
, 
cuº_key
[
j
]);

247 
	`w_as£π1
(
cuº_vÆue
[
j
].
°‹e
 =
s
.store);

248 
	`w_as£π3
(
cuº_vÆue
[
j
].
°y≥
 =
t_ödex


249 || 
cuº_vÆue
[
j
].
°y≥
 =
t_fûe


250 || 
cuº_vÆue
[
j
].
°y≥
 =
t_lgªc


253 i‡(
num_¥ï¨ed
 > 0) {

254 
lockid_t
 
	`lockid
(
s
);

255 
	`W_DO
–
lm
->
	`quîy
(
lockid
, 
m
) );

257 i‡(
m
 !
EX
 && m !
IX
 && m !
SIX
) {

258 
	`DBG
(<< 
s
 << " saved for destruction or update... ");

259 
°‹e_Êag_t
 
°‹e_Êags
;

260 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
s
, 
°‹e_Êags
) );

261 i‡(
°‹e_Êags
 & 
°_tmp
) {

262 
j
++;

264 
	`DBG
–<< 
s
 << " isÇotáÅemp store" );

267 #i‡
W_DEBUG_LEVEL
 > 2

268 i‡(
m
 =
EX
 || m =
IX
 || m =
SIX
) {

269 
	`DBG
–<< 
s
 << " isÜocked" );

277 --
j
; j>=0; j--) {

278 
°id_t
 
	`s
(
vid
, 
cuº_key
[
j
]);

280 
	`DBG
(<<"de°royög st‹ê" << 
cuº_key
[
j
]);

281 
	`W_DO
–
io
->
	`de°roy_°‹e
(
s
, 
Ál£
) );

282 
hi°oid_t
::
	`de°royed_°‹e
(
s
, 0);

284 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
s
) );

287 #i‡
W_DEBUG_LEVEL
 > 2

289 
sdesc_t
 *
sd
 = 
	`x˘
()->
	`sdesc_ˇche
()->
	`lookup
(
s
);

290 
¢um_t
 
œrge_°‹e_num
=0;

291 if(
sd
) {

292 if(
sd
->
	`œrge_°id
()) {

295 
œrge_°‹e_num
 = 
sd
->
	`œrge_°id
().
°‹e
;

299 
	`DBG
(<<"abouàtÿªmovêˇchêíåy " << 
s
);

300 
	`x˘
()->
	`sdesc_ˇche
()->
	`ªmove
(
s
);

304 if(
cuº_vÆue
[
j
].
œrge_°‹e
) {

305 
°id_t
 
	`t
(
vid
, 
cuº_vÆue
[
j
].
œrge_°‹e
);

307 #i‡
W_DEBUG_LEVEL
 > 2

312 i‡(
sd
) {

314 
	`w_as£π3
–
sd
->
	`œrge_°id
());

316 
	`w_as£π3
(
œrge_°‹e_num
 =
cuº_vÆue
[
j
].
œrge_°‹e
);

319 
	`DBG
(<<"de°royög (œrgeË°‹ê" << 
cuº_vÆue
[
j
].
œrge_°‹e
);

321 
	`W_DO
–
io
->
	`de°roy_°‹e
(
t
, 
Ál£
) );

322 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
t
) );

323 #i‡
W_DEBUG_LEVEL
 > 2

325 
	`w_as£π3
(
œrge_°‹e_num
 == 0);

329 
	`DBG
(<<"abouàtÿªmovêdúe˘‹yÉ¡ry " << 
s
);

331 
vec_t
 
key
, 
ñ
;

332 
key
.
	`put
(&
cuº_key
[
j
], (curr_key[j]));

333 
ñ
.
	`put
(&
cuº_vÆue
[
j
], (curr_value[j]));

334 
	`DBG
(<<"abouàtÿªmovêbàíåy " << 
s
);

335 
	`W_DO
–
bt
->
	`ªmove
(
_roŸ
[
i
], 1, &
dú_key_ty≥
,

336 
åue
, 
t_cc_n⁄e
, 
key
, 
ñ
) );

340 
	`W_DO
(
x˘_auto
.
	`commô
());

342 i‡(
rc
.
	`is_îr‹
()) {

343  
	`RC_AUGMENT
(
rc
);

345  
rc
;

346 
	}
}

348 
	gsmÀvñ_3
::
sm_°‹e_¥›îty_t


349 
dú_vﬁ_m
::
	$_make_°‹e_¥›îty
(
°‹e_Êag_t
 
Êag
)

351 
sm_°‹e_¥›îty_t
 
ªsu…
 = 
t_bad_°‹ïr›îty
;

353 
Êag
) {

354 
°_ªguœr
:

355 
ªsu…
 = 
t_ªguœr
;

357 
°_tmp
:

358 
ªsu…
 = 
t_ãmp‹¨y
;

360 
°_ö£π_fûe
:

361 
ªsu…
 = 
t_ö£π_fûe
;

364 
	`W_FATAL
(
eINTERNAL
);

368  
ªsu…
;

369 
	}
}

371 
rc_t


372 
	gdú_vﬁ_m
::
	$_ac˚ss
(c⁄° 
°id_t
& 
°id
, 
söfo_s
& 
si
)

374 
i
 = 0;

375 
	`W_DO
(
	`_föd_roŸ
(
°id
.
vﬁ
, 
i
));

377 
boﬁ
 
found
;

378 
vec_t
 
key
;

379 
key
.
	`put
(&
°id
.
°‹e
, (stid.store));

381 
smsize_t
 
Àn
 = (
si
);

382 
	`W_DO
–
bt
->
	`lookup
(
_roŸ
[
i
], 1, &
dú_key_ty≥
,

383 
åue
, 
t_cc_n⁄e
,

384 
key
, &
si
, 
Àn
, 
found
, 
åue
) );

385 i‡(!
found
) {

386 
	`DBG
(<<"_ac˚ss: BADSTID " << 
°id
.
°‹e
);

387  
	`RC
(
eBADSTID
);

389 
	`w_as£π1
(
Àn
 =(
söfo_s
));

390  
RCOK
;

391 
	}
}

393 
rc_t


394 
	gdú_vﬁ_m
::
	$_ªmove
(c⁄° 
°id_t
& 
°id
)

396 
i
 = 0;

397 
	`W_DO
(
	`_föd_roŸ
(
°id
.
vﬁ
,
i
));

399 
vec_t
 
key
, 
ñ
;

400 
key
.
	`put
(&
°id
.
°‹e
, (stid.store));

401 
söfo_s
 
si
;

402 
	`W_DO
–
	`_ac˚ss
(
°id
, 
si
) );

403 
ñ
.
	`put
(&
si
, (si));

405 
	`W_DO
–
bt
->
	`ªmove
(
_roŸ
[
i
], 1, &
dú_key_ty≥
,

406 
åue
, 
t_cc_n⁄e
, 
key
, 
ñ
) );

408  
RCOK
;

409 
	}
}

411 
rc_t


412 
	gdú_vﬁ_m
::
	$_¸óã_dú
(
vid_t
 
vid
)

415 
°id_t
 
°id
;

416 
	`W_DO
–
io
->
	`¸óã_°‹e
(
vid
, 100 , 
°_ªguœr
, 
°id
) );

417 
	`w_as£π1
(
°id
.
°‹e
 =
°‹e_id_dúe˘‹y
);

419 
Õid_t
 
roŸ
;

420 
	`W_DO
–
bt
->
	`¸óã
(
°id
, 
roŸ
, 
Ál£
) );

423 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100, 
t_uni_båì
, 
t_cc_n⁄e
,

424 
roŸ
.
∑ge
, 0, 
NULL
);

425 
vec_t
 
key
, 
ñ
;

426 
key
.
	`put
(&
söfo
.
°‹e
, (sinfo.store));

427 
ñ
.
	`put
(&
söfo
, (sinfo));

428 
	`W_DO
–
bt
->
	`ö£π
(
roŸ
, 1, &
dú_key_ty≥
, 
åue
,

429 
t_cc_n⁄e
, 
key
, 
ñ
) );

431  
RCOK
;

432 
	}
}

434 
rc_t
 
	gdú_vﬁ_m
::
	$_föd_roŸ
(
vid_t
 
vid
, &
i
)

436 i‡(
vid
 <= 0) {

437 
	`DBG
(<<"_föd_roŸ: BADVOL " << 
vid
);

438  
	`RC
(
eBADVOL
);

440 
i
 = 0; i < 
max
 && 
_roŸ
[i].
	`vﬁ
(Ë!
vid
; i++) ;

441 i‡(
i
 >
max
) {

442 
	`DBG
(<<"_föd_roŸ: BADVOL " << 
vid
);

443  
	`RC
(
eBADVOL
);

446  
RCOK
;

447 
	}
}

449 
rc_t


450 
	gdú_m
::
	$ö£π
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
söfo
)

452 
	`W_DO
(
_dú
.
	`ö£π
(
°id
, 
söfo
));

455 i‡(
	`x˘
()) {

456 
	`w_as£π3
(
	`x˘
()->
	`sdesc_ˇche
());

457 
sdesc_t
 *
sd
 = 
	`x˘
()->
	`sdesc_ˇche
()->
	`add
(
°id
, 
söfo
);

458 
sd
->
	`£t_œ°_pid
(sd->
	`roŸ
().
∑ge
);

461  
RCOK
;

462 
	}
}

464 
rc_t


465 
	gdú_m
::
	$ªmove
(c⁄° 
°id_t
& 
°id
)

467 
	`DBG
(<<"ªmovê°‹ê" << 
°id
);

468 i‡(
	`x˘
()) {

469 
	`w_as£π3
(
	`x˘
()->
	`sdesc_ˇche
());

470 
	`x˘
()->
	`sdesc_ˇche
()->
	`ªmove
(
°id
);

473 
	`W_DO
(
_dú
.
	`ªmove
(
°id
));

474  
RCOK
;

475 
	}
}

483 
rc_t


484 
	gdú_m
::
	$ªmove_n_sw≠
(c⁄° 
°id_t
& 
ﬁd_°id
, c⁄° stid_t& 
√w_°id
)

486 
söfo_s
 
√w_söfo
;

487 
sdesc_t
* 
desc
;

490 
	`W_DO
–
	`ac˚ss
(
√w_°id
, 
desc
, 
EX
) );

491 
√w_söfo
 = 
desc
->
	`söfo
();

494 
	`W_DO
–
	`ac˚ss
(
ﬁd_°id
, 
desc
, 
EX
) );

495 
√w_söfo
.
œrge_°‹e
 = 
desc
->
	`söfo
().large_store;

498 i‡(
	`x˘
()) {

499 
	`w_as£π3
(
	`x˘
()->
	`sdesc_ˇche
());

500 
	`x˘
()->
	`sdesc_ˇche
()->
	`ªmove
(
ﬁd_°id
);

501 
	`x˘
()->
	`sdesc_ˇche
()->
	`ªmove
(
√w_°id
);

505 
	`W_DO
(
_dú
.
	`ªmove
(
ﬁd_°id
));

506 
	`W_DO
(
_dú
.
	`ªmove
(
√w_°id
));

509 
	`W_DO
–
	`ö£π
(
√w_°id
, 
√w_söfo
) );

511  
RCOK
;

512 
	}
}

514 
	~<hi°o.h
>

532 
rc_t


533 
	gdú_m
::
	$ac˚ss
(c⁄° 
°id_t
& 
°id
, 
sdesc_t
*& 
sd
, 
lock_mode_t
 
mode
,

534 
boﬁ
 
lkœrge
)

536 
x˘_t
* 
xd
 = 
	`x˘
();

537 #i‡
W_DEBUG_LEVEL
 > 2

538 if(
xd
) {

539 
	`w_as£π3
(
xd
->
	`sdesc_ˇche
());

543 
sd
 = 
xd
 ? xd->
	`sdesc_ˇche
()->
	`lookup
(
°id
): 0;

544 
	`DBGTHRD
(<<"x˘ sdes¯ˇchêlooku∞f‹ " << 
°id


545 << "Ñëu∫†" << 
sd
);

547 
agaö
:

548 i‡(! 
sd
) {

550 i‡(
mode
 !
NL
) {

551 
	`W_DO
(
lm
->
	`lock
(
°id
, 
mode
, 
t_l⁄g
,

552 
WAIT_SPECIFIED_BY_XCT
));

555 
söfo_s
 
söfo
;

556 
	`W_DO
(
_dú
.
	`ac˚ss
(
°id
, 
söfo
));

557 
	`w_as£π3
(
xd
->
	`sdesc_ˇche
());

558 
sd
 = 
xd
->
	`sdesc_ˇche
()->
	`add
(
°id
, 
söfo
);

562 
	`w_as£π3
(
sd
->
	`roŸ
().
	`°‹e
() != 0);

565 i‡(
lkœrge
 && 
mode
 !
NL
 && 
sd
->
	`œrge_°id
()) {

566 
	`W_DO
(
lm
->
	`lock
(
sd
->
	`œrge_°id
(), 
mode
, 
t_l⁄g
,

567 
WAIT_SPECIFIED_BY_XCT
));

569 
	`INC_TSTAT
(
dú_ˇche_miss
);

570 } i‡(
sd
->
	`is_öhîôed
()) {

573 if(
lm
->
	`¶i_quîy
(
°id
)) {

574 
sd
->
	`£t_öhîôed
(
Ál£
);

575 
	`INC_TSTAT
(
dú_ˇche_öhîô
);

578 
xd
->
	`sdesc_ˇche
()->
	`ªmove
(
°id
);

579 
sd
 = 0;

580 
	`INC_TSTAT
(
dú_ˇche_°Æe
);

582 
agaö
;

586 
	`w_as£π3
(
sd
->
	`roŸ
().
	`°‹e
() != 0);

596 i‡(
mode
 !
IS
 && modê!
NL
) {

597 
	`W_DO
(
lm
->
	`lock
(
°id
, 
mode
,

598 
t_l⁄g
,

599 
WAIT_SPECIFIED_BY_XCT
));

603 i‡(
lkœrge
 && 
mode
 !
IS
 && modê!
NL
 && 
sd
->
	`œrge_°id
()) {

604 
	`W_DO
(
lm
->
	`lock
(
sd
->
	`œrge_°id
(), 
mode
, 
t_l⁄g
,

605 
WAIT_SPECIFIED_BY_XCT
));

608 
	`INC_TSTAT
(
dú_ˇche_hô
);

614 if(!
sd
->
	`°‹e_utûiz©i⁄
()) {

615 
	`DBGTHRD
(<<"nÿ°‹êutû f‹ sd=" << 
sd
);

616 if(
sd
->
	`söfo
().
°y≥
 =
t_fûe
) {

617 
hi°oid_t
 *
h
 = hi°oid_t::
	`acquúe
(
°id
);

618 
sd
->
	`add_°‹e_utûiz©i⁄
(
h
);

622 
	`w_as£π3
(
°id
 =
sd
->
	`°id
());

623  
RCOK
;

624 
	}
}

627 
ölöe
 

628 
	gsdesc_ˇche_t
::
	$_£rülize
() const

631 
	}
}

633 
ölöe
 

634 
sdesc_ˇche_t
::
	$_íd£rül
() const

637 
	}
}

639 
ölöe
 

640 
sdesc_ˇche_t
::
	$_AŒoˇãBuckë
(
uöt4_t
 
buckë
)

642 
	`w_as£π3
(
buckë
 < 
_buckëAºaySize
);

643 
	`w_as£π3
(
buckë
 =
_numVÆidBuckës
);

645 
_sdescsBuckës
[
buckë
] = 
√w
 
sdesc_t
[
	`_ñems_ö_buckë
(bucket)];

646 
_numVÆidBuckës
++;

648 
	`DBG
(<<"_AllocateBucket");

649 
uöt4_t
 
i
 = 0; i < 
	`_ñems_ö_buckë
(
buckë
); i++) {

650 
_sdescsBuckës
[
buckë
][
i
].
	`övÆid©e
();

652 
	}
}

654 
ölöe
 

655 
	gsdesc_ˇche_t
::
	$_AŒoˇãBuckëAºay
(
√wSize
)

657 
sdesc_t
** 
√wSdescsBuckës
 = 
√w
 sdesc_t*[
√wSize
];

658 
uöt4_t
 
i
 = 0; i < 
_buckëAºaySize
; i++) {

659 
	`DBG
(<<"AllocatBucketArray : copying sdescÖtrs");

660 
√wSdescsBuckës
[
i
] = 
_sdescsBuckës
[i];

662 
j
 = 
_buckëAºaySize
; j < 
√wSize
; j++) {

663 
√wSdescsBuckës
[
j
] = 0;

665 
dñëe
 [] 
_sdescsBuckës
;

666 
_sdescsBuckës
 = 
√wSdescsBuckës
;

667 
_buckëAºaySize
 = 
√wSize
;

668 
	}
}

670 
ölöe
 

671 
	gsdesc_ˇche_t
::
	$_DoubÀBuckëAºay
()

673 
	`_AŒoˇãBuckëAºay
(
_buckëAºaySize
 * 2);

674 
	}
}

676 
	gsdesc_ˇche_t
::
	$sdesc_ˇche_t
()

678 
	`_sdescsBuckës
(0),

679 
	`_buckëAºaySize
(0),

680 
	`_numVÆidBuckës
(0),

681 
	`_möFªeBuckë
(0),

682 
	`_möFªeBuckëIndex
(0),

683 
	`_œ°Ac˚ssBuckë
(0),

684 
	$_œ°Ac˚ssBuckëIndex
(0)

686 
	`_£rülize
();

687 
	`_AŒoˇãBuckëAºay
(
mö_num_buckës
);

688 
	`_AŒoˇãBuckë
(0);

689 
	`_íd£rül
();

690 
	}
}

692 
	gsdesc_ˇche_t
::~
	$sdesc_ˇche_t
()

694 
	`_£rülize
();

695 
uöt4_t
 
i
 = 0; i < 
	`_num_buckës
(); i++) {

696 
dñëe
 [] 
_sdescsBuckës
[
i
];

699 
dñëe
 [] 
_sdescsBuckës
;

700 
	`_íd£rül
();

701 
	}
}

703 
sdesc_t
*

704 
	gsdesc_ˇche_t
::
	$lookup
(c⁄° 
°id_t
& 
°id
)

706 
	`_£rülize
();

709 i‡(
_sdescsBuckës
[
_œ°Ac˚ssBuckë
][
_œ°Ac˚ssBuckëIndex
].
	`°id
()

710 =
°id
) {

711 
	`_íd£rül
();

712  &
_sdescsBuckës
[
_œ°Ac˚ssBuckë
][
_œ°Ac˚ssBuckëIndex
];

715 
uöt4_t
 
i
 = 0; i < 
	`_num_buckës
(); i++) {

716 
uöt4_t
 
j
 = 0; j < 
	`_ñems_ö_buckë
(
i
); j++) {

717 i‡(
_sdescsBuckës
[
i
][
j
].
	`°id
(Ë=
°id
) {

718 
_œ°Ac˚ssBuckë
 = 
i
;

719 
_œ°Ac˚ssBuckëIndex
 = 
j
;

720 
	`_íd£rül
();

721  &
_sdescsBuckës
[
i
][
j
];

725 
	`_íd£rül
();

726  
NULL
;

727 
	}
}

730 
	gsdesc_ˇche_t
::
	$ªmove
(c⁄° 
°id_t
& 
°id
)

732 
	`_£rülize
();

733 
	`DBG
(<<"sdesc_ˇche_àªmovê°‹ê" << 
°id
);

734 
uöt4_t
 
i
 = 0; i < 
	`_num_buckës
(); i++) {

735 
uöt4_t
 
j
 = 0; j < 
	`_ñems_ö_buckë
(
i
); j++) {

736 i‡(
_sdescsBuckës
[
i
][
j
].
	`°id
(Ë=
°id
) {

737 
	`DBG
(<<"");

738 
_sdescsBuckës
[
i
][
j
].
	`övÆid©e
();

739 i‡(
i
 < 
_möFªeBuckë
) {

740 
_möFªeBuckë
 = 
i
;

741 
_möFªeBuckëIndex
 = 
j
;

743 if(
i
 =
_möFªeBuckë
 && 
j
 < 
_möFªeBuckëIndex
) {

744 
_möFªeBuckëIndex
 = 
j
;

746 
	`_íd£rül
();

751 
	`_íd£rül
();

752 
	}
}

755 
	gsdesc_ˇche_t
::
	$ªmove_Æl
()

757 
	`_£rülize
();

758 
uöt4_t
 
i
 = 0; i < 
	`_num_buckës
(); i++) {

759 
uöt4_t
 
j
 = 0; j < 
	`_ñems_ö_buckë
(
i
); j++) {

760 
	`DBG
(<<"");

761 
_sdescsBuckës
[
i
][
j
].
	`övÆid©e
();

764 
_möFªeBuckë
 = 0;

765 
_möFªeBuckëIndex
 = 0;

766 
	`_íd£rül
();

767 
	}
}

771 
	gsdesc_ˇche_t
::
	$öhîô_Æl
()

773 
	`_£rülize
();

774 
uöt4_t
 
i
 = 0; i < 
	`_num_buckës
(); i++) {

775 
uöt4_t
 
j
 = 0; j < 
	`_ñems_ö_buckë
(
i
); j++) {

776 
	`DBG
(<<"");

777 
_sdescsBuckës
[
i
][
j
].
	`£t_öhîôed
(
åue
);

780 
	`_íd£rül
();

781 
	}
}

783 
	~<s°ªam
>

784 
	~<io°ªam
>

786 
	s¥ëty_¥öãr
 {

787 
o°rög°ªam
 
	m_out
;

788 
°rög
 
	m_tmp
;

789 
›î©‹
 
	mo°ªam
&(Ë{  
	m_out
; }

790 
›î©‹
 c⁄°*(Ë{ 
	m_tmp
 = 
_out
.
°r
(); 
	m_out
.°r("");  _tmp.
c_°r
(); }

792 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gos
, 
sdesc_t
 c⁄° &
	gsd
) {

793  
	gos
 << 
	gsd
.
°id
();

795 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gos
, 
sdesc_ˇche_t
 c⁄° &
	gsdc
) {

796 
uöt4_t
 
	gi
 = 0; i < 
	gsdc
.
_num_buckës
(); i++) {

797 
uöt4_t
 
	gj
 = 0; j < 
	gsdc
.
_ñems_ö_buckë
(
i
); j++) {

798 
	gos
 << 
	gsdc
.
	g_sdescsBuckës
[
i
][
j
] << " ";

800 
	gos
 << 
	g°d
::
ídl
;

802  
	gos
;

804 c⁄°* 
	$db_¥ëty_¥öt
(
sdesc_t
 c⁄°* 
sd
, 
i
=0, c⁄°* 
s
=0) {

805 
¥ëty_¥öãr
 
µ
;

806 (Ë
i
;

807 (Ë
s
;

808 
µ
 << *
sd
;

809  
µ
;

810 
	}
}

811 c⁄°* 
	$db_¥ëty_¥öt
(
sdesc_ˇche_t
 c⁄°* 
sdc
, 
i
=0, c⁄°* 
s
=0) {

812 
¥ëty_¥öãr
 
µ
;

813 (Ë
i
;

814 (Ë
s
;

815 
µ
 << *
sdc
;

816  
µ
;

817 
	}
}

822 
sdesc_t
* 
	gsdesc_ˇche_t
::
	$add
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
söfo
)

824 
	`_£rülize
();

825 
sdesc_t
 *
ªsu…
=0;

827 
	`w_as£π3
(
°id
 !
°id_t
::
nuŒ
);

829 
uöt4_t
 
buckë
 = 
_möFªeBuckë
;

830 
uöt4_t
 
buckëIndex
 = 
_möFªeBuckëIndex
;

831 
buckë
 < 
	`_num_buckës
()) {

832 
buckëIndex
 < 
	`_ñems_ö_buckë
(
buckë
)) {

833 i‡(
_sdescsBuckës
[
buckë
][
buckëIndex
].
	`°id
(Ë=
°id_t
::
nuŒ
) {

834 
have_‰ì_•Ÿ
;

836 
buckëIndex
++;

838 
buckëIndex
 = 0;

839 
buckë
++;

843 i‡(
buckë
 =
_buckëAºaySize
) {

844 
	`_DoubÀBuckëAºay
();

846 
	`_AŒoˇãBuckë
(
buckë
);

847 
buckëIndex
 = 0;

849 
have_‰ì_•Ÿ
:

851 
_sdescsBuckës
[
buckë
][
buckëIndex
].
	`öô
(
°id
, 
söfo
);

852 
_möFªeBuckë
 = 
buckë
;

853 
_möFªeBuckëIndex
 = 
buckëIndex
 + 1;

855 
ªsu…
 = &
_sdescsBuckës
[
buckë
][
buckëIndex
];

857 
	`_íd£rül
();

858  
ªsu…
;

859 
	}
}

862 
	gsdesc_t
::
	$övÆid©e
()

864 
	`DBGTHRD
(<<"sdesc_t::övÆid©ê°‹ê" << 
_°id
);

865 
_°id
 = 
°id_t
::
nuŒ
;

866 if(
_hi°oid
) {

867 
	`DBG
(<<"Ñeleasing histoid & clobbering store util");

868 if–
_hi°oid
->
	`ªÀa£
(ËË{ 
dñëe
 _histoid; }

869 
	`add_°‹e_utûiz©i⁄
(0);

871 
	}
}

874 
	gsdesc_t
::
	$£t_œ°_pid
(
shpid_t
 
p
)

876 if(
	`x˘
()Ëx˘()->
	`acquúe_1thªad_x˘_muãx
();

877 
_œ°_pid
 = 
p
;

878 if(
	`x˘
()Ëx˘()-> 
	`ªÀa£_1thªad_x˘_muãx
();

879 
	}
}

881 
	gsdesc_t
&

882 
	gsdesc_t
::
›î©‹
=(c⁄° 
sdesc_t
& 
Ÿhî
)

884 i‡(
this
 =&
Ÿhî
)

885  *
this
;

887 
	g_°id
 = 
Ÿhî
.
_°id
;

888 
	g_söfo
 = 
Ÿhî
.
_söfo
;

892 
	g_œ°_pid
 = 
Ÿhî
.
_œ°_pid
;

894 if–
	g_hi°oid
 && _hi°oid->
ªÀa£
())

895 
dñëe
 
	g_hi°oid
;

896 
	g_hi°oid
 = 0;

898 i‡(
	gŸhî
.
	g_hi°oid
) {

899 
DBGTHRD
(<<"copying sdesc_t");

900 
add_°‹e_utûiz©i⁄
(
Ÿhî
.
_hi°oid
->
c›y
());

903 
	g_∑πôi⁄s
 = 
Ÿhî
.
_∑πôi⁄s
;

904 
	g_∑πôi⁄s_fûÀd
 = 
Ÿhî
.
_∑πôi⁄s_fûÀd
;

905 
	g_∑ges_wôh_•a˚
 = 
Ÿhî
.
_∑ges_wôh_•a˚
;

907  *
	gthis
;

910 
	gkey_ønges_m≠
& 
	gsdesc_t
::
	$∑πôi⁄s
()

912 if(!
_∑πôi⁄s_fûÀd
) {

913 
	`fûl_∑πôi⁄s_m≠
();

914 
_∑πôi⁄s_fûÀd
 = 
åue
;

916  
_∑πôi⁄s
;

917 
	}
}

919 
key_ønges_m≠
* 
	gsdesc_t
::
	$gë_∑πôi⁄s_p
()

921 if(!
_∑πôi⁄s_fûÀd
) {

922 
	`fûl_∑πôi⁄s_m≠
();

923 
_∑πôi⁄s_fûÀd
 = 
åue
;

925  (&
_∑πôi⁄s
);

926 
	}
}

928 
rc_t
 
	gsdesc_t
::
	$fûl_∑πôi⁄s_m≠
()

930 
	`W_DO
–
ønges_m
::
	`fûl_ønges_m≠
(
	`roŸ
(), 
_∑πôi⁄s
) );

931  
RCOK
;

932 
	}
}

934 
rc_t
 
	gsdesc_t
::
	$°‹e_∑πôi⁄s
()

936 
	`W_DO
–
ønges_m
::
	`fûl_∑ge
(
	`roŸ
(), 
_∑πôi⁄s
) );

937  
RCOK
;

938 
	}
}

	@src/sm/dir.h

53 #i‚de‡
DIR_H


54 
	#DIR_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


81 ˛as†
	cdú_vﬁ_m
 : 
public
 
smÀvñ_3
 {

82 
public
:

83 íum { 
max
 = 
max_vﬁs
 };

85 
NORET
 
	$dú_vﬁ_m
(Ë: 
	$_˙t
(0Ë{
	}
};

86 
	gNORET
 ~
	$dú_vﬁ_m
()

89 
i
 = 0; i < 
max
; i++) {

90 
	`w_as£π1
(!
_roŸ
[
i
].
	`vÆid
());

92 
	}
}

94 
rc_t
 
¸óã_dú
(
vid_t
 
vid
);

95 
rc_t
 
mou¡
(c⁄° * c⁄° 
dev«me
, 
vid_t
 
vid
);

96 
rc_t
 
dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
 = 
åue
, boﬁ 
dismou¡_if_locked
 =Årue);

97 
rc_t
 
dismou¡_Æl
(
boﬁ
 
Êush
 = 
åue
, boﬁ 
dismou¡_if_locked
 =Årue);

99 
rc_t
 
ö£π
(c⁄° 
°id_t
& 
°pgid
, c⁄° 
söfo_s
& 
si
);

100 
rc_t
 
ªmove
(c⁄° 
°id_t
& 
°pgid
);

101 
rc_t
 
ac˚ss
(c⁄° 
°id_t
& 
°pgid
, 
söfo_s
& 
si
);

102 
rc_t
 
modify
(

103 c⁄° 
°id_t
& 
°pgid
,

104 
uöt4_t
 
d∑ges
,

105 
uöt4_t
 
dˇrd
,

106 c⁄° 
Õid_t
& 
roŸ
);

108 
	g¥iv©e
:

109 
_˙t
;

110 
Õid_t
 
	g_roŸ
[
max
];

116 
occ_rwlock
 
	g_occ
;

118 
rc_t
 
_¸óã_dú
(
vid_t
 
vid
);

119 
rc_t
 
_mou¡
(c⁄° * c⁄° 
dev«me
, 
vid_t
 
vid
);

120 
rc_t
 
_dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
);

121 
rc_t
 
_dismou¡_Æl
(
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
);

122 
rc_t
 
_de°roy_ãmps
(
vid_t
 
vid
);

124 
rc_t
 
_ö£π
(c⁄° 
°id_t
& 
°pgid
, c⁄° 
söfo_s
& 
sd
);

125 
rc_t
 
_ªmove
(c⁄° 
°id_t
& 
°pgid
);

126 
rc_t
 
_ac˚ss
(c⁄° 
°id_t
& 
°pgid
, 
söfo_s
& 
sd
);

128 
rc_t
 
_föd_roŸ
(
vid_t
 
vid
, &
i
);

129 
sm_°‹e_¥›îty_t
 
_make_°‹e_¥›îty
(
°‹e_Êag_t
 
Êag
);

132 
NORET
 
dú_vﬁ_m
(const dir_vol_m&);

133 
	gdú_vﬁ_m
& 
	g›î©‹
=(c⁄° 
dú_vﬁ_m
&);

143 ˛as†
	cdú_m
 : 
public
 
smÀvñ_3
 {

144 
public
:

146 
NORET
 
	$dú_m
() {};

147 
NORET
 ~
	`dú_m
();

149 
rc_t
 
	`¸óã_dú
(
vid_t
 
vid
);

150 
rc_t
 
	`mou¡
(

151 c⁄° * c⁄° 
dev«me
,

152 
vid_t
 
vid
);

153 
rc_t
 
	`dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
 = 
åue
, boﬁ 
dismou¡_if_locked
 =Årue);

154 
rc_t
 
	`dismou¡_Æl
(
boﬁ
 
Êush
 = 
åue
, boﬁ 
dismou¡_if_locked
 =Årue);

156 
rc_t
 
	`ö£π
(c⁄° 
°id_t
& 
°pgid
, c⁄° 
söfo_s
& 
söfo
);

157 
rc_t
 
	`ªmove
(c⁄° 
°id_t
& 
°pgid
);

158 
rc_t
 
	`ac˚ss
(c⁄° 
°id_t
& 
°pgid
, 
sdesc_t
*& 
sd
, 
lock_mode_t
 
lock_mode
,

159 
boﬁ
 
lkœrge
=
Ál£
);

161 
rc_t
 
	`ªmove_n_sw≠
(

162 c⁄° 
°id_t
& 
ﬁd_°id
,

163 c⁄° 
°id_t
& 
√w_°id
);

165 
¥iv©e
:

166 
dú_vﬁ_m
 
_dú
;

169 
NORET
 
	`dú_m
(c⁄° 
dú_m
&);

170 
dú_m
& 
›î©‹
=(const dir_m&);

171 
	}
};

173 
ölöe
 
rc_t


174 
	gdú_vﬁ_m
::
	$mou¡
(c⁄° * c⁄° 
dev«me
, 
vid_t
 
vid
)

176 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

177  
	`_mou¡
(
dev«me
, 
vid
);

178 
	}
}

180 
ölöe
 
rc_t


181 
	gdú_vﬁ_m
::
	$dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

183 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

184  
	`_dismou¡
(
vid
, 
Êush
, 
dismou¡_if_locked
);

185 
	}
}

187 
ölöe
 
rc_t


188 
	gdú_vﬁ_m
::
	$dismou¡_Æl
(
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

190 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

191  
	`_dismou¡_Æl
(
Êush
, 
dismou¡_if_locked
);

192 
	}
}

194 
ölöe
 
rc_t


195 
	gdú_vﬁ_m
::
	$ö£π
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
sd
)

197 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

198  
	`_ö£π
(
°id
, 
sd
);

199 
	}
}

201 
ölöe
 
rc_t


202 
	gdú_vﬁ_m
::
	$ªmove
(c⁄° 
°id_t
& 
°id
)

204 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

205  
	`_ªmove
(
°id
);

206 
	}
}

208 
ölöe
 
rc_t


209 
	gdú_vﬁ_m
::
	$ac˚ss
(c⁄° 
°id_t
& 
°id
, 
söfo_s
& 
sd
)

211 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`ªad_lock
());

212  
	`_ac˚ss
(
°id
, 
sd
);

213 
	}
}

215 
ölöe
 
rc_t


216 
	gdú_vﬁ_m
::
	$¸óã_dú
(
vid_t
 
vid
)

218 
	`CRITICAL_SECTION
(
ocs
, 
_occ
.
	`wrôe_lock
());

219  
	`_¸óã_dú
(
vid
);

220 
	}
}

222 
ölöe
 
rc_t


223 
	gdú_m
::
	$¸óã_dú
(
vid_t
 
vid
)

225  
_dú
.
	`¸óã_dú
(
vid
);

226 
	}
}

228 
ölöe
 
rc_t


229 
	gdú_m
::
	$mou¡
(c⁄° * c⁄° 
dev«me
, 
vid_t
 
vid
)

231  
_dú
.
	`mou¡
(
dev«me
, 
vid
);

232 
	}
}

234 
ölöe
 
rc_t


235 
	gdú_m
::
	$dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

237  
_dú
.
	`dismou¡
(
vid
, 
Êush
, 
dismou¡_if_locked
);

238 
	}
}

240 
ölöe
 
rc_t


241 
	gdú_m
::
	$dismou¡_Æl
(
boﬁ
 
Êush
, boﬁ 
dismou¡_if_locked
)

243  
_dú
.
	`dismou¡_Æl
(
Êush
, 
dismou¡_if_locked
);

244 
	}
}

246 
ölöe
 
NORET


247 
	gdú_m
::~
	$dú_m
()

251 
	}
}

	@src/sm/e_einfo_bakw_gen.h

1 #i‚de‡
E_EINFO_BAKW_GEN_H


2 
	#E_EINFO_BAKW_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	ge_îr‹_öfo_bakw
[] = {

38 { 
E_ASSERT
, "E_ASSERT" },

39 { 
E_USERABORT
, "E_USERABORT" },

40 { 
E_CRASH
, "E_CRASH" },

41 { 
E_OUTOFSPACE
, "E_OUTOFSPACE" },

42 { 
E_ALIGNPARM
, "E_ALIGNPARM" },

43 { 
E_BADSTID
, "E_BADSTID" },

44 { 
E_FRAMENOTFOUND
, "E_FRAMENOTFOUND" },

45 { 
E_SPACENOTFOUND
, "E_SPACENOTFOUND" },

46 { 
E_BADPID
, "E_BADPID" },

47 { 
E_BADVOL
, "E_BADVOL" },

48 { 
E_VOLTOOLARGE
, "E_VOLTOOLARGE" },

49 { 
E_DEVTOOLARGE
, "E_DEVTOOLARGE" },

50 { 
E_DEVICEVOLFULL
, "E_DEVICEVOLFULL" },

51 { 
E_DEVNOTMOUNTED
, "E_DEVNOTMOUNTED" },

52 { 
E_ALREADYMOUNTED
, "E_ALREADYMOUNTED" },

53 { 
E_VOLEXISTS
, "E_VOLEXISTS" },

54 { 
E_BADFORMAT
, "E_BADFORMAT" },

55 { 
E_NVOL
, "E_NVOL" },

56 { 
E_EOF
, "E_EOF" },

57 { 
E_DUPLICATE
, "E_DUPLICATE" },

58 { 
E_BADSTORETYPE
, "E_BADSTORETYPE" },

59 { 
E_BADSTOREFLAGS
, "E_BADSTOREFLAGS" },

60 { 
E_BADNDXTYPE
, "E_BADNDXTYPE" },

61 { 
E_BADSCAN
, "E_BADSCAN" },

62 { 
E_WRONGKEYTYPE
, "E_WRONGKEYTYPE" },

63 { 
E_NDXNOTEMPTY
, "E_NDXNOTEMPTY" },

64 { 
E_BADKEYTYPESTR
, "E_BADKEYTYPESTR" },

65 { 
E_BADKEY
, "E_BADKEY" },

66 { 
E_BADCMPOP
, "E_BADCMPOP" },

67 { 
E_OUTOFLOGSPACE
, "E_OUTOFLOGSPACE" },

68 { 
E_RECWONTFIT
, "E_RECWONTFIT" },

69 { 
E_BADSLOTNUMBER
, "E_BADSLOTNUMBER" },

70 { 
E_RECUPDATESIZE
, "E_RECUPDATESIZE" },

71 { 
E_BADSTART
, "E_BADSTART" },

72 { 
E_BADAPPEND
, "E_BADAPPEND" },

73 { 
E_BADLENGTH
, "E_BADLENGTH" },

74 { 
E_BADSAVEPOINT
, "E_BADSAVEPOINT" },

75 { 
E_PAGECHANGED
, "E_PAGECHANGED" },

76 { 
E_INSUFFICIENTMEM
, "E_INSUFFICIENTMEM" },

77 { 
E_BADARGUMENT
, "E_BADARGUMENT" },

78 { 
E_TWOTRANS
, "E_TWOTRANS" },

79 { 
E_TWOTHREAD
, "E_TWOTHREAD" },

80 { 
E_NOTRANS
, "E_NOTRANS" },

81 { 
E_INTRANS
, "E_INTRANS" },

82 { 
E_TWOQUARK
, "E_TWOQUARK" },

83 { 
E_NOQUARK
, "E_NOQUARK" },

84 { 
E_INQUARK
, "E_INQUARK" },

85 { 
E_NOABORT
, "E_NOABORT" },

86 { 
E_NOTPREPARED
, "E_NOTPREPARED" },

87 { 
E_ISPREPARED
, "E_ISPREPARED" },

88 { 
E_EXTERN2PCTHREAD
, "E_EXTERN2PCTHREAD" },

89 { 
E_NOTEXTERN2PC
, "E_NOTEXTERN2PC" },

90 { 
E_NOSUCHPTRANS
, "E_NOSUCHPTRANS" },

91 { 
E_THREADMAPFULL
, "E_THREADMAPFULL" },

92 { 
E_BADLOCKMODE
, "E_BADLOCKMODE" },

93 { 
E_LOCKTIMEOUT
, "E_LOCKTIMEOUT" },

94 { 
E_NOTBLOCKED
, "E_NOTBLOCKED" },

95 { 
E_DEADLOCK
, "E_DEADLOCK" },

96 { 
E_BADCCLEVEL
, "E_BADCCLEVEL" },

97 { 
E_RETRY
, "E_RETRY" },

98 { 
E_FOUNDEXTTOFREE
, "E_FOUNDEXTTOFREE" },

99 { 
E_CANTWHILEACTIVEXCTS
, "E_CANTWHILEACTIVEXCTS" },

100 { 
E_NOHANDLE
, "E_NOHANDLE" },

101 { 
E_LOGVERSIONTOONEW
, "E_LOGVERSIONTOONEW" },

102 { 
E_LOGVERSIONTOOOLD
, "E_LOGVERSIONTOOOLD" },

103 { 
E_BADMASTERCHKPTFORMAT
, "E_BADMASTERCHKPTFORMAT" },

104 { 
E_ABORTED
, "E_ABORTED" },

105 { 
E_LOGSPACEWARN
, "E_LOGSPACEWARN" },

106 { 
E_BADCOMPENSATION
, "E_BADCOMPENSATION" },

107 { 
E_APPENDFILEINOSCAN
, "E_APPENDFILEINOSCAN" },

108 { 
E_INVALIDHINT
, "E_INVALIDHINT" },

109 { 
E_DUAUDITFAILED
, "E_DUAUDITFAILED" },

110 { 
E_PINACTIVE
, "E_PINACTIVE" },

111 { 
E_HOTPAGE
, "E_HOTPAGE" },

112 { 
E_BPFORCEFAILED
, "E_BPFORCEFAILED" },

	@src/sm/e_einfo_gen.h

1 #i‚de‡
E_EINFO_GEN_H


2 
	#E_EINFO_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	gsmÀvñ_0
::
îr‹_öfo
[] = {

38 { 
eASSERT
 , "Assertion failed"},

39 { 
eUSERABORT
 , "User initiatedábort"},

40 { 
eCRASH
 , "ServerÅoldÅo crash or shutdown immediately"},

41 { 
eOUTOFSPACE
 , "Out of disk space"},

42 { 
eALIGNPARM
 , "Parameter isÇotáligned"},

43 { 
eBADSTID
 , "Malformed or invalid store id"},

44 { 
eFRAMENOTFOUND
 , "FrameÇot found in bufferÖool "},

45 { 
eSPACENOTFOUND
 , "NoÖage with space in store"},

46 { 
eBADPID
 , "invalidÖage id"},

47 { 
eBADVOL
 , "invalid volume id"},

48 { 
eVOLTOOLARGE
 , "volume isÅooÜarge for device"},

49 { 
eDEVTOOLARGE
 , "device isÅooÜarge for OS file interface"},

50 { 
eDEVICEVOLFULL
 , "device cannot holdánymore volumes"},

51 { 
eDEVNOTMOUNTED
 , "device isÇot mounted"},

52 { 
eALREADYMOUNTED
 , "deviceálready mounted"},

53 { 
eVOLEXISTS
 , "volumeálreadyÉxists"},

54 { 
eBADFORMAT
 , "volume has bad format"},

55 { 
eNVOL
 , "too many volumes"},

56 { 
eEOF
 , "end of scan/recordÑeached"},

57 { 
eDUPLICATE
 , "duplicateÉntries found"},

58 { 
eBADSTORETYPE
 , "bad storeÅype"},

59 { 
eBADSTOREFLAGS
 , "bad store flags"},

60 { 
eBADNDXTYPE
 , "bad indexÅype"},

61 { 
eBADSCAN
 , "bad scanárguments"},

62 { 
eWRONGKEYTYPE
 , "keyÅype unsupported for current index"},

63 { 
eNDXNOTEMPTY
 , "index isÇotÉmpty"},

64 { 
eBADKEYTYPESTR
 , "bad keyÅype descriptor"},

65 { 
eBADKEY
 , "bad key value"},

66 { 
eBADCMPOP
 , "bad compare operators"},

67 { 
eOUTOFLOGSPACE
 , "out ofÜog space "},

68 { 
eRECWONTFIT
 , "record willÇot fit"},

69 { 
eBADSLOTNUMBER
 , "record ID slotÇumber is bad"},

70 { 
eRECUPDATESIZE
 , "record updateÑequest isÅooÜarge"},

71 { 
eBADSTART
 , "startÖarameterÜargerÅhanÑecord size"},

72 { 
eBADAPPEND
 , "append sizeÅooÜarge forÅheÑecord"},

73 { 
eBADLENGTH
 , "badÜengthÖarameter"},

74 { 
eBADSAVEPOINT
 , "bad saveÖoint "},

75 { 
ePAGECHANGED
 , "page has changed"},

76 { 
eINSUFFICIENTMEM
 , "memoryÜimit imposed on function was insufficient"},

77 { 
eBADARGUMENT
 , "badárgument or combination ofárgumentsÅo function"},

78 { 
eTWOTRANS
 , "transactionálreadyáttachedÅoÅhread"},

79 { 
eTWOTHREAD
 , "multipleÅhreadsÇotállowed forÅhis operation"},

80 { 
eNOTRANS
 , "noáctiveÅransaction"},

81 { 
eINTRANS
 , "ináctiveÅransaction (notállowed forÅhis operation)"},

82 { 
eTWOQUARK
 , "second quark iná singleÅransaction isÇotállowed"},

83 { 
eNOQUARK
 , "no quark is open"},

84 { 
eINQUARK
 , "a quark is open"},

85 { 
eNOABORT
 , "logging isÅurned off -- cannotÑoll back"},

86 { 
eNOTPREPARED
 , "transactionÅhread isÇotÖrepared -- cannot commit orábort"},

87 { 
eISPREPARED
 , "transactionÅhread isÖrepared -- cannot doÅhis operaton"},

88 { 
eEXTERN2PCTHREAD
 , "transaction is (already)Öarticipating inÉxternal 2-phase commit "},

89 { 
eNOTEXTERN2PC
 , "transaction isÇotÖarticipating inÉxternal 2-phase commit "},

90 { 
eNOSUCHPTRANS
 , "couldÇot findáÖreparedÅransaction with given globalÅransaction id"},

91 { 
eTHREADMAPFULL
 , "No more bits forÅhread maps"},

92 { 
eBADLOCKMODE
 , "invalidÜock mode"},

93 { 
eLOCKTIMEOUT
 , "lockÅimeout"},

94 { 
eNOTBLOCKED
 , "smthread isÇot blocked"},

95 { 
eDEADLOCK
 , "deadlock detected"},

96 { 
eBADCCLEVEL
 , "unsupported concurrency controlÜevel"},

97 { 
eRETRY
 , "retryÅheÑequest (used internally)"},

98 { 
eFOUNDEXTTOFREE
 , "unlock duration foundánÉxtÅo free (used internally)"},

99 { 
eCANTWHILEACTIVEXCTS
 , "can't doÅo volume whileÅhereáreáctiveÅransactions"},

100 { 
eNOHANDLE
 , "Missing coordinator handle"},

101 { 
eLOGVERSIONTOONEW
 , "Log created withÇewer incompatible server"},

102 { 
eLOGVERSIONTOOOLD
 , "Log created with older incompatible server"},

103 { 
eBADMASTERCHKPTFORMAT
 , "Bad format for master checkpoint"},

104 { 
eABORTED
 , "Transactionáborted byánotherÅhread"},

105 { 
eLOGSPACEWARN
 , "log space warning (notÇecessarily out)"},

106 { 
eBADCOMPENSATION
 , "log couldÇotápplyÑequested compensation"},

107 { 
eAPPENDFILEINOSCAN
 , "append_file_i doesÇot support scanning"},

108 { 
eINVALIDHINT
 , "Invalid cluster hint "},

109 { 
eDUAUDITFAILED
 , "Audit failed for du statistics"},

110 { 
ePINACTIVE
 , "Thread has somethingÖinned"},

111 { 
eHOTPAGE
 , "AnotherÅhreadÖinnedÅhisÖage inÅhe bufferÖool"},

112 { 
eBPFORCEFAILED
 , "CouldÇot forceállÅheÇecessaryÖages fromÅhe bufferÖool"},

116 
	gsmÀvñ_0
::
	$öô_îr‹codes
() {

117 i‡(!(
w_îr‹_t
::
	`ö£π
(

118 "St‹agêM™agî", 
smÀvñ_0
::
îr‹_öfo
,

119 
eERRMAX
 - 
eERRMIN
 +1)) ) {

120 
	`W_FATAL
(
fcINTERNAL
);

122 
	}
}

	@src/sm/e_errmsg_gen.h

1 #i‚de‡
E_ERRMSG_GEN_H


2 
	#E_ERRMSG_GEN_H


	)

34 
	~"w_deföes.h
"

37 * 
	ge_îrmsg
[] = {

116 c⁄° 
	ge_msg_size
 = 74;

	@src/sm/e_error_def_gen.h

1 #i‚de‡
E_ERROR_DEF_GEN_H


2 
	#E_ERROR_DEF_GEN_H


	)

34 
	~"w_deföes.h
"

37 
	#E_ASSERT
 0x80000

	)

38 
	#E_USERABORT
 0x80001

	)

39 
	#E_CRASH
 0x80002

	)

40 
	#E_OUTOFSPACE
 0x80003

	)

41 
	#E_ALIGNPARM
 0x80004

	)

42 
	#E_BADSTID
 0x80005

	)

43 
	#E_FRAMENOTFOUND
 0x80006

	)

44 
	#E_SPACENOTFOUND
 0x80007

	)

45 
	#E_BADPID
 0x80008

	)

46 
	#E_BADVOL
 0x80009

	)

47 
	#E_VOLTOOLARGE
 0x8000a

	)

48 
	#E_DEVTOOLARGE
 0x8000b

	)

49 
	#E_DEVICEVOLFULL
 0x8000c

	)

50 
	#E_DEVNOTMOUNTED
 0x8000d

	)

51 
	#E_ALREADYMOUNTED
 0x8000e

	)

52 
	#E_VOLEXISTS
 0x8000f

	)

53 
	#E_BADFORMAT
 0x80010

	)

54 
	#E_NVOL
 0x80011

	)

55 
	#E_EOF
 0x80012

	)

56 
	#E_DUPLICATE
 0x80013

	)

57 
	#E_BADSTORETYPE
 0x80014

	)

58 
	#E_BADSTOREFLAGS
 0x80015

	)

59 
	#E_BADNDXTYPE
 0x80016

	)

60 
	#E_BADSCAN
 0x80017

	)

61 
	#E_WRONGKEYTYPE
 0x80018

	)

62 
	#E_NDXNOTEMPTY
 0x80019

	)

63 
	#E_BADKEYTYPESTR
 0x8001a

	)

64 
	#E_BADKEY
 0x8001b

	)

65 
	#E_BADCMPOP
 0x8001c

	)

66 
	#E_OUTOFLOGSPACE
 0x8001d

	)

67 
	#E_RECWONTFIT
 0x8001e

	)

68 
	#E_BADSLOTNUMBER
 0x8001f

	)

69 
	#E_RECUPDATESIZE
 0x80020

	)

70 
	#E_BADSTART
 0x80021

	)

71 
	#E_BADAPPEND
 0x80022

	)

72 
	#E_BADLENGTH
 0x80023

	)

73 
	#E_BADSAVEPOINT
 0x80024

	)

74 
	#E_PAGECHANGED
 0x80025

	)

75 
	#E_INSUFFICIENTMEM
 0x80026

	)

76 
	#E_BADARGUMENT
 0x80027

	)

77 
	#E_TWOTRANS
 0x80028

	)

78 
	#E_TWOTHREAD
 0x80029

	)

79 
	#E_NOTRANS
 0x8002a

	)

80 
	#E_INTRANS
 0x8002b

	)

81 
	#E_TWOQUARK
 0x8002c

	)

82 
	#E_NOQUARK
 0x8002d

	)

83 
	#E_INQUARK
 0x8002e

	)

84 
	#E_NOABORT
 0x8002f

	)

85 
	#E_NOTPREPARED
 0x80030

	)

86 
	#E_ISPREPARED
 0x80031

	)

87 
	#E_EXTERN2PCTHREAD
 0x80032

	)

88 
	#E_NOTEXTERN2PC
 0x80033

	)

89 
	#E_NOSUCHPTRANS
 0x80034

	)

90 
	#E_THREADMAPFULL
 0x80035

	)

91 
	#E_BADLOCKMODE
 0x80036

	)

92 
	#E_LOCKTIMEOUT
 0x80037

	)

93 
	#E_NOTBLOCKED
 0x80038

	)

94 
	#E_DEADLOCK
 0x80039

	)

95 
	#E_BADCCLEVEL
 0x8003a

	)

96 
	#E_RETRY
 0x8003b

	)

97 
	#E_FOUNDEXTTOFREE
 0x8003c

	)

98 
	#E_CANTWHILEACTIVEXCTS
 0x8003d

	)

99 
	#E_NOHANDLE
 0x8003e

	)

100 
	#E_LOGVERSIONTOONEW
 0x8003f

	)

101 
	#E_LOGVERSIONTOOOLD
 0x80040

	)

102 
	#E_BADMASTERCHKPTFORMAT
 0x80041

	)

103 
	#E_ABORTED
 0x80042

	)

104 
	#E_LOGSPACEWARN
 0x80043

	)

105 
	#E_BADCOMPENSATION
 0x80044

	)

106 
	#E_APPENDFILEINOSCAN
 0x80045

	)

107 
	#E_INVALIDHINT
 0x80046

	)

108 
	#E_DUAUDITFAILED
 0x80047

	)

109 
	#E_PINACTIVE
 0x80048

	)

110 
	#E_HOTPAGE
 0x80049

	)

111 
	#E_BPFORCEFAILED
 0x8004a

	)

112 
	#E_OK
 0x0

	)

113 
	#E_ERRMIN
 0x80000

	)

114 
	#E_ERRMAX
 0x8004a

	)

	@src/sm/e_error_enum_gen.h

1 #i‚de‡
E_ERROR_ENUM_GEN_H


2 
	#E_ERROR_ENUM_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	meASSERT
 = 0x80000,

39 
	meUSERABORT
 = 0x80001,

40 
	meCRASH
 = 0x80002,

41 
	meOUTOFSPACE
 = 0x80003,

42 
	meALIGNPARM
 = 0x80004,

43 
	meBADSTID
 = 0x80005,

44 
	meFRAMENOTFOUND
 = 0x80006,

45 
	meSPACENOTFOUND
 = 0x80007,

46 
	meBADPID
 = 0x80008,

47 
	meBADVOL
 = 0x80009,

48 
	meVOLTOOLARGE
 = 0x8000a,

49 
	meDEVTOOLARGE
 = 0x8000b,

50 
	meDEVICEVOLFULL
 = 0x8000c,

51 
	meDEVNOTMOUNTED
 = 0x8000d,

52 
	meALREADYMOUNTED
 = 0x8000e,

53 
	meVOLEXISTS
 = 0x8000f,

54 
	meBADFORMAT
 = 0x80010,

55 
	meNVOL
 = 0x80011,

56 
	meEOF
 = 0x80012,

57 
	meDUPLICATE
 = 0x80013,

58 
	meBADSTORETYPE
 = 0x80014,

59 
	meBADSTOREFLAGS
 = 0x80015,

60 
	meBADNDXTYPE
 = 0x80016,

61 
	meBADSCAN
 = 0x80017,

62 
	meWRONGKEYTYPE
 = 0x80018,

63 
	meNDXNOTEMPTY
 = 0x80019,

64 
	meBADKEYTYPESTR
 = 0x8001a,

65 
	meBADKEY
 = 0x8001b,

66 
	meBADCMPOP
 = 0x8001c,

67 
	meOUTOFLOGSPACE
 = 0x8001d,

68 
	meRECWONTFIT
 = 0x8001e,

69 
	meBADSLOTNUMBER
 = 0x8001f,

70 
	meRECUPDATESIZE
 = 0x80020,

71 
	meBADSTART
 = 0x80021,

72 
	meBADAPPEND
 = 0x80022,

73 
	meBADLENGTH
 = 0x80023,

74 
	meBADSAVEPOINT
 = 0x80024,

75 
	mePAGECHANGED
 = 0x80025,

76 
	meINSUFFICIENTMEM
 = 0x80026,

77 
	meBADARGUMENT
 = 0x80027,

78 
	meTWOTRANS
 = 0x80028,

79 
	meTWOTHREAD
 = 0x80029,

80 
	meNOTRANS
 = 0x8002a,

81 
	meINTRANS
 = 0x8002b,

82 
	meTWOQUARK
 = 0x8002c,

83 
	meNOQUARK
 = 0x8002d,

84 
	meINQUARK
 = 0x8002e,

85 
	meNOABORT
 = 0x8002f,

86 
	meNOTPREPARED
 = 0x80030,

87 
	meISPREPARED
 = 0x80031,

88 
	meEXTERN2PCTHREAD
 = 0x80032,

89 
	meNOTEXTERN2PC
 = 0x80033,

90 
	meNOSUCHPTRANS
 = 0x80034,

91 
	meTHREADMAPFULL
 = 0x80035,

92 
	meBADLOCKMODE
 = 0x80036,

93 
	meLOCKTIMEOUT
 = 0x80037,

94 
	meNOTBLOCKED
 = 0x80038,

95 
	meDEADLOCK
 = 0x80039,

96 
	meBADCCLEVEL
 = 0x8003a,

97 
	meRETRY
 = 0x8003b,

98 
	meFOUNDEXTTOFREE
 = 0x8003c,

99 
	meCANTWHILEACTIVEXCTS
 = 0x8003d,

100 
	meNOHANDLE
 = 0x8003e,

101 
	meLOGVERSIONTOONEW
 = 0x8003f,

102 
	meLOGVERSIONTOOOLD
 = 0x80040,

103 
	meBADMASTERCHKPTFORMAT
 = 0x80041,

104 
	meABORTED
 = 0x80042,

105 
	meLOGSPACEWARN
 = 0x80043,

106 
	meBADCOMPENSATION
 = 0x80044,

107 
	meAPPENDFILEINOSCAN
 = 0x80045,

108 
	meINVALIDHINT
 = 0x80046,

109 
	meDUAUDITFAILED
 = 0x80047,

110 
	mePINACTIVE
 = 0x80048,

111 
	meHOTPAGE
 = 0x80049,

112 
	meBPFORCEFAILED
 = 0x8004a,

113 
	meOK
 = 0x0,

114 
	meERRMIN
 = 0x80000,

115 
	meERRMAX
 = 0x8004a

	@src/sm/extent.h

53 #i‚de‡
EXTENT_H


54 
	#EXTENT_H


	)

56 
	~"w_deföes.h
"

65 ˛as†
	cexéök_t
 {

67 
Pm≠_Align4
 
	mpm≠
;

68 
	mpublic
:

69 
exäum_t
 
√xt
;

70 
exäum_t
 
	m¥ev
;

71 
¢um_t
 
	mow√r
;

72 
uöt4_t
 
	mpbuckëm≠
;

75 
logged_size
();

76 
NORET
 
exéök_t
();

77 
NORET
 
exéök_t
(c⁄°Éxéök_t& 
e
);

78 
	mexéök_t
& 
	m›î©‹
=(c⁄° 
exéök_t
&);

80 
˛øŒ
();

81 
£èŒ
();

82 
£tm≠
(c⁄° 
Pm≠
 &
m
);

83 
	$gëm≠
(
Pm≠
 &
m
) const;

84 
	`£t
(
i
);

85 
	`˛r
(
i
);

86 
boﬁ
 
	$is_£t
(
i
) const;

87 
boﬁ
 
	$is_˛r
(
i
) const;

88 
	$fú°_£t
(
°¨t
) const;

89 
	$fú°_˛r
(
°¨t
) const;

90 
	$œ°_£t
(
°¨t
) const;

91 
	$œ°_˛r
(
°¨t
) const;

92 
	$num_£t
() const;

93 
	$num_˛r
() const;

95 
•a˚_buckë_t
 
	$gë_∑ge_buckë
(
i
)const;

97 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam &, c⁄° 
exéök_t
 &
e
);

100 
ölöe
 
NORET


101 
exéök_t
::
	$exéök_t
(c⁄° 
exéök_t
& 
e
)

102 : 
	`pm≠
(
e
.
pm≠
),

103 
	`√xt
(
e
.
√xt
),

104 
	`¥ev
(
e
.
¥ev
),

105 
	`ow√r
(
e
.
ow√r
),

106 
	$pbuckëm≠
(
e
.
pbuckëm≠
)

109 
	`w_as£π9
(
	`w_off£tof
(
exéök_t
, 
pm≠
) == 0);

110 
	}
}

112 
ölöe
 
	gexéök_t
&

113 
	gexéök_t
::
›î©‹
=(c⁄° 
exéök_t
& 
e
)

115 
pm≠
 = 
e
.pmap;

116 
	g¥ev
 = 
e
.
¥ev
;

117 
	g√xt
 = 
e
.
√xt
;

118 
	gow√r
 = 
e
.
ow√r
;

119 
	gpbuckëm≠
 = 
e
.
pbuckëm≠
;

120  *
	gthis
;

122 
ölöe
 

123 
	gexéök_t
::
	$£tm≠
(c⁄° 
Pm≠
 &
m
)

125 
pm≠
 = 
m
;

126 
	}
}

127 
ölöe
 

128 
	gexéök_t
::
	$gëm≠
(
Pm≠
 &
m
) const

130 
m
 = 
pm≠
;

131 
	`DBGTHRD
(<<"gëm≠ " << 
m
);

132 
	}
}

134 
ölöe
 

135 
	gexéök_t
::
	$˛øŒ
()

137 
pm≠
.
	`˛ór_Æl
();

138 
	}
}

140 
ölöe
 

141 
	gexéök_t
::
	$£èŒ
()

143 
pm≠
.
	`£t_Æl
();

144 
	}
}

146 
ölöe
 

147 
	gexéök_t
::
	$£t
(
i
)

149 
pm≠
.
	`£t
(
i
);

150 
	}
}

152 
ölöe
 

153 
	gexéök_t
::
	$˛r
(
i
)

155 
pm≠
.
	`˛ór
(
i
);

156 
	}
}

158 
ölöe
 
boﬁ


159 
	gexéök_t
::
	$is_£t
(
i
) const

161 
	`w_as£π9
(
i
 < 
smÀvñ_0
::
ext_sz
);

162  
pm≠
.
	`is_£t
(
i
);

163 
	}
}

165 
ölöe
 
boﬁ


166 
	gexéök_t
::
	$is_˛r
(
i
) const

168  (! 
	`is_£t
(
i
));

169 
	}
}

171 
ölöe
 
	gexéök_t
::
	$fú°_£t
(
°¨t
) const

173  
pm≠
.
	`fú°_£t
(
°¨t
);

174 
	}
}

176 
ölöe
 

177 
	gexéök_t
::
	$fú°_˛r
(
°¨t
) const

179  
pm≠
.
	`fú°_˛ór
(
°¨t
);

180 
	}
}

182 
ölöe
 

183 
	gexéök_t
::
	$œ°_£t
(
°¨t
) const

185  
pm≠
.
	`œ°_£t
(
°¨t
);

186 
	}
}

188 
ölöe
 

189 
	gexéök_t
::
	$œ°_˛r
(
°¨t
) const

191  
pm≠
.
	`œ°_˛ór
(
°¨t
);

192 
	}
}

194 
ölöe
 

195 
	gexéök_t
::
	$num_£t
() const

197  
pm≠
.
	`num_£t
();

198 
	}
}

200 
ölöe
 

201 
	gexéök_t
::
	$num_˛r
() const

203  
pm≠
.
	`num_˛ór
();

204 
	}
}

211 ˛as†
	cexéök_p
 : 
public
 
∑ge_p
 {

212 
public
:

213 
MAKEPAGE
(
exéök_p
, 
∑ge_p
, 2);

217 íum { 
	mmax
 = 
d©a_sz
 / (
exéök_t
) };

219 c⁄° 
	gexéök_t
& 
gë
(
¶Ÿid_t
 
idx
);

220 
put
(
¶Ÿid_t
 
idx
, c⁄° 
exéök_t
& 
e
);

221 
£t_byã
(
¶Ÿid_t
 
idx
, 
u_ch¨
 
bôs
,

222 
∑ge_p
::
logiˇl_›î©i⁄
);

223 
£t_byãs
(
¶Ÿid_t
 
idx
,

224 
smsize_t
 
off£t
,

225 
smsize_t
 
cou¡
,

226 c⁄° 
uöt1_t
* 
bôs
,

227 
∑ge_p
::
logiˇl_›î©i⁄
);

228 
˛r_pm≠_bô
(
¶Ÿid_t
 
idx
, 
bô
);

229 
boﬁ
 
⁄_ßme_∑ge
(
exäum_t
 
e1
,Éxäum_à
e2
);

231 
	g¥iv©e
:

232 
exéök_t
& 
ôem
(
i
);

234 
	sœyout_t
 {

235 
exéök_t
 
	gôem
[
max
];

239 
‰õnd
 
˛ass
 
	g∑ge_lök_log
;

240 
‰õnd
 
˛ass
 
	gexéök_i
;

243 
ölöe
 
boﬁ


244 
	gexéök_p
::
	$⁄_ßme_∑ge
(
exäum_t
 
e1
,Éxäum_à
e2
)

246 
shpid_t
 
p1
 = 
e1
 / (
exéök_p
::
max
);

247 
shpid_t
 
p2
 = 
e2
 / (
exéök_p
::
max
);

248  (
p1
 =
p2
);

249 
	}
}

251 
ölöe
 
	gexéök_t
&

252 
	gexéök_p
::
	$ôem
(
i
)

254 
	`w_as£π9
(
i
 < 
max
);

255  ((
œyout_t
*)
	`tu∂e_addr
(0))->
ôem
[
i
];

256 
	}
}

259 
ölöe
 c⁄° 
	gexéök_t
&

260 
	gexéök_p
::
	$gë
(
¶Ÿid_t
 
idx
)

262  
	`ôem
(
idx
);

263 
	}
}

265 
ölöe
 

266 
	gexéök_t
::
	$logged_size
() {

272  
	`w_off£tof
(
exéök_t
, 
pbuckëm≠
);

273 
	}
}

275 
ölöe
 

276 
	gexéök_p
::
	$put
(
¶Ÿid_t
 
idx
, c⁄° 
exéök_t
& 
e
)

278 
	`DBG
(<<"exéök_p::put(" << 
idx
 << " owner=" <<

279 
e
.
ow√r
 << ", " <<É.
√xt
 << ")");

280 c⁄° 
vec_t
 
	`exã¡_vec_tmp
(&
e
, 
exéök_t
::
	`logged_size
());

281 
	`W_COERCE
(
	`ovîwrôe
(0, 
idx
 * (
exéök_t
), 
exã¡_vec_tmp
));

282 
	}
}

286 
	s°node_t
 {

287 
exäum_t
 
	mhód
;

288 
	mw_ba£_t
::
uöt2_t
 
eff
;

289 
	mw_ba£_t
::
uöt2_t
 
Êags
;

290 
	mw_ba£_t
::
uöt2_t
 
dñëög
;

291 
fûl2
 
	mfûÀr
;

295 ˛as†
	c°node_p
 : 
public
 
∑ge_p
 {

296 
public
:

297 
MAKEPAGE
(
°node_p
, 
∑ge_p
, 1);

300 íum { 
	mmax
 = 
d©a_sz
 / (
°node_t
) };

302 c⁄° 
	g°node_t
& 
gë
(
¶Ÿid_t
 
idx
);

303 
rc_t
 
put
(
¶Ÿid_t
 
idx
, c⁄° 
°node_t
& 
e
);

305 
	g¥iv©e
:

306 
°node_t
& 
ôem
(
¢um_t
 
i
);

307 
	sœyout_t
 {

308 
°node_t
 
	gôem
[
max
];

311 
‰õnd
 
˛ass
 
	g∑ge_lök_log
;

312 
‰õnd
 
˛ass
 
	g°node_i
;

315 
ölöe
 
	g°node_t
&

316 
	g°node_p
::
	$ôem
(
¢um_t
 
i
)

318 
	`w_as£π9
(
i
 < 
max
);

319  ((
œyout_t
*)
	`tu∂e_addr
(0))->
ôem
[
i
];

320 
	}
}

322 
ölöe
 c⁄° 
	g°node_t
&

323 
	g°node_p
::
	$gë
(
¶Ÿid_t
 
idx
)

325  
	`ôem
(
idx
);

326 
	}
}

328 
ölöe
 
w_rc_t


329 
	g°node_p
::
	$put
(
¶Ÿid_t
 
idx
, c⁄° 
°node_t
& 
e
)

331 c⁄° 
vec_t
 
	`°node_vec_tmp
(&
e
, (e));

332 
	`W_DO
(
	`ovîwrôe
(0, 
idx
 * (
°node_t
), 
°node_vec_tmp
));

333  
RCOK
;

334 
	}
}

346 ˛as†
	cexéök_i
 {

347 
	mpublic
:

348 
NORET
 
	$exéök_i
(c⁄° 
Õid_t
& 
roŸ
)

350 
	$_roŸ
(
roŸ
) {

352 
	`w_as£π1
(
roŸ
.
∑ge
 >= 1);

355 
boﬁ
 
	`⁄_ßme_roŸ
(
exäum_t
 
idx
);

357 
Õid_t
 
	$gë_pid
(
exäum_t
 
idx
) const;

358 
rc_t
 
	`gë
(
exäum_t
 
idx
, c⁄° 
exéök_t
* &);

359 
rc_t
 
	`gë
(
exäum_t
 
idx
, 
exéök_t
* &);

360 
rc_t
 
	`gë_c›y
(
exäum_t
 
idx
, 
exéök_t
 &);

361 
rc_t
 
	`put
(
exäum_t
 
idx
, c⁄° 
exéök_t
&);

362 
boﬁ
 
	$⁄_ßme_∑ge
(
exäum_t
 
ext1
,Éxäum_à
ext2
) const ;

364 
rc_t
 
	`upd©e_hi°o
(
exäum_t
 
ext
,

365 
off£t
,

366 
•a˚_buckë_t
 
buckë
);

367 
rc_t
 
	`fix_EX
(
exäum_t
 
idx
);

368 
	`unfix
();

369 
rc_t
 
	`£t_pm≠_bôs
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
 &
bôs
);

370 
rc_t
 
	`˛r_pm≠_bô
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, 
bô
);

372 
rc_t
 
	`˛r_pm≠_bôs
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
 &
bôs
);

373 
rc_t
 
	`£t_√xt
(
exäum_t
 
ext
,Éxäum_à
√w_√xt
, 
boﬁ
 
log_ô
 = 
åue
);

374 c⁄° 
exéök_p
& 
	$∑ge
(Ëc⁄° {  
_∑ge
; 
	}
}

376 
	g¥iv©e
:

377 
extid_t
 
_id
;

378 
Õid_t
 
	g_roŸ
;

379 
exéök_p
 
	g_∑ge
;

381 
ölöe
 
upd©e_pm≠
(
exäum_t
 
idx
,

382 c⁄° 
Pm≠
 &
pm≠
,

383 
∑ge_p
::
logiˇl_›î©i⁄
 
how
);

384 
ölöe
 
upd©e_pbuckëm≠
(
exäum_t
 
idx
,

385 
uöt4_t
 
m≠
,

386 
∑ge_p
::
logiˇl_›î©i⁄
 
how
);

397 ˛as†
	c°node_i
: 
¥iv©e
 
smÀvñ_0
 {

398 
public
:

399 
NORET
 
	$°node_i
(c⁄° 
Õid_t
& 
roŸ
Ë: 
	$_roŸ
(
roŸ
) {

402 
	`w_as£π1
(
roŸ
.
∑ge
 >= 1);

404 
w_rc_t
 
	`gë
(
¢um_t
 
idx
, 
°node_t
 &
°node
);

405 
w_rc_t
 
	`gë
(
¢um_t
 
idx
, c⁄° 
°node_t
 *&
°node
);

406 
w_rc_t
 
	`put
(
¢um_t
 
idx
, c⁄° 
°node_t
& 
°node
);

407 
w_rc_t
 
	`°‹e_›î©i⁄
(c⁄° 
°‹e_›î©i⁄_∑øm
 & 
›
);

408 
¥iv©e
:

409 
Õid_t
 
_roŸ
;

410 
°node_p
 
_∑ge
;

411 
	}
};

	@src/sm/file.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄
 "file.h"

61 #¥agm®
im∂emíèti⁄
 "file_s.h"

64 
	~"sm_öt_2.h
"

66 
	~"båì_p.h
"

67 
	~<£t
>

69 
	#FILE_C


	)

70 
	~"lgªc.h
"

71 
	~"w_mömax.h
"

72 
	~"sm_du_°©s.h
"

74 
	~"hi°o.h
"

75 
	~"¸ash.h
"

77 #ifde‡
EXPLICIT_TEMPLATE


79 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gfûe_p
>;

82 
Õid_t


83 
	gªc‹d_t
::
	$œ°_pid
(c⁄° 
fûe_p
& 
∑ge
) const

85 
Õid_t
 
œ°
;

87 #i‡
W_DEBUG_LEVEL
 > 2

89 c⁄° * 
check
 = (c⁄° *)&
∑ge
.
	`≥rsi°ít_∑π_c⁄°
();

90 
	`w_as£π3
(
check
 < (*)
this
 && (check+(
∑ge_s
)) > (*)this);

93 
	`w_as£π3
(
	`body_size
() > 0);

94 i‡(
èg
.
Êags
 & 
t_œrge_0
) {

95 c⁄° 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
	`body
());

96 
œ°
 = 
lg_hdl
.
	`œ°_pid
();

97 } i‡(
èg
.
Êags
 & (
t_œrge_1
 | 
t_œrge_2
)) {

98 c⁄° 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_ödúe˘_s
*)
	`body
(), 
	`∑ge_cou¡
());

99 
œ°
 = 
lg_hdl
.
	`œ°_pid
();

101 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

104 
	`w_as£π3
(
œ°
.
	`vﬁ
(Ë> 0 &&Üa°.
	`°‹e
(Ë> 0 &&Üa°.
∑ge
 > 0);

105  
œ°
;

106 
	}
}

108 
Õid_t


109 
	gªc‹d_t
::
	$pid_c⁄èöög
(
uöt4_t
 
off£t
, uöt4_t& 
°¨t_byã
, c⁄° 
fûe_p
& 
∑ge
) const

111 #i‡
W_DEBUG_LEVEL
 > 2

113 c⁄° * 
check
 = (c⁄° *)&
∑ge
.
	`≥rsi°ít_∑π_c⁄°
();

114 
	`w_as£π3
(
check
 < (*)
this
 && (check+(
∑ge_s
)) > (*)this);

116 if(
	`body_size
(Ë=0Ë 
Õid_t
::
nuŒ
;

118 i‡(
èg
.
Êags
 & 
t_œrge_0
) {

119 
shpid_t
 
∑ge_num
 = 
off£t
 / 
lgd©a_p
::
d©a_sz
;

120 c⁄° 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
	`body
());

122 
°¨t_byã
 = 
∑ge_num
*
lgd©a_p
::
d©a_sz
;

123  
lg_hdl
.
	`pid
(
∑ge_num
);

124 } i‡(
èg
.
Êags
 & (
t_œrge_1
 | 
t_œrge_2
)) {

125 
shpid_t
 
∑ge_num
 = 
off£t
 / 
lgd©a_p
::
d©a_sz
;

126 c⁄° 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_ödúe˘_s
*)
	`body
(), 
	`∑ge_cou¡
());

128 
°¨t_byã
 = 
∑ge_num
*
lgd©a_p
::
d©a_sz
;

129  
lg_hdl
.
	`pid
(
∑ge_num
);

131 
	`W_FATAL
(
smÀvñ_0
::
eNOTIMPLEMENTED
);

132 
Õid_t
 
dummy
;

133  
dummy
;

134 
	}
}

136 
uöt4_t


137 
	gªc‹d_t
::
	$∑ge_cou¡
() const

139  
	`body_size
(Ë=0 ? 0 : (body_size()-1Ë/ 
lgd©a_p
::
d©a_sz
 +1;

140 
	}
}

142 
ölöe


143 
smsize_t


144 
	gfûe_m
::
	$_•a˚_œ°_∑ge
(
smsize_t
 
ªc_sz
)

146  (
lgd©a_p
::
d©a_sz
 - 
ªc_sz
 %Ügdata_p::data_sz) %

147 
lgd©a_p
::
d©a_sz
;

148 
	}
}

150 
ölöe


151 
smsize_t


152 
	gfûe_m
::
	$_byãs_œ°_∑ge
(
smsize_t
 
ªc_sz
)

154  
ªc_sz
 == 0 ? 0 :

155 
lgd©a_p
::
d©a_sz
 - 
	`_•a˚_œ°_∑ge
(
ªc_sz
);

156 
	}
}

158 
	gfûe_m
::
	$fûe_m
 ()

160 
	`w_as£π1
(
	`is_Æig√d
((
ª˘ag_t
)));

161 
	`W_COERCE
(
hi°oid_t
::
	`öôülize_èbÀ
());

162 
	}
}

164 
	gfûe_m
::~
	$fûe_m
()

166 
hi°oid_t
::
	`de°roy_èbÀ
();

167 
	}
}

169 
rc_t


170 
	gfûe_m
::
	$¸óã
(
°id_t
 
°id
, 
Õid_t
& 
fú°_∑ge
)

172 
fûe_p
 
∑ge
;

173 
	`DBGTHRD
(<<"fûe_m::¸óã cª©êfú°Öagêö st‹ê" << 
°id
);

174 
	`W_DO
(
	`_Æloc_∑ge
–
°id
,

175 
Õid_t
::
eof
,

177 
fú°_∑ge
,

178 
∑ge
,

179 
åue


182 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

184 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

185 
hu
.
	`upd©e
();

186 
	`DBGTHRD
(<<"fûe_m::¸óã(dËfú°Öagêi† " << 
fú°_∑ge
);

187  
RCOK
;

188 
	}
}

192 
rc_t


193 
	gfûe_m
::
	$¸óã_mrbt
(
°id_t
 
°id
, 
Õid_t
& 
fú°_∑ge
)

195 
fûe_mrbt_p
 
∑ge
;

196 
	`DBGTHRD
(<<"fûe_m::¸óã_mrbà¸óã fú°Öagêö st‹ê" << 
°id
);

197 
	`W_DO
(
	`_Æloc_mrbt_∑ge
–
°id
,

198 
Õid_t
::
eof
,

200 
fú°_∑ge
,

201 
∑ge
,

202 
åue


205 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

207 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

208 
hu
.
	`upd©e
();

209 
	`DBGTHRD
(<<"fûe_m::¸óã_mrbt(dËfú°Öagêi† " << 
fú°_∑ge
);

210  
RCOK
;

211 
	}
}

215 
rc_t


216 
	gfûe_m
::
	$¸óã_ªc
(

217 c⁄° 
°id_t
& 
fid
,

219 
smsize_t
 
Àn_höt
,

220 c⁄° 
vec_t
& 
hdr
,

221 c⁄° 
vec_t
& 
d©a
,

222 
sdesc_t
& 
sd
,

223 
rid_t
& 
rid
,

224 c⁄° 
boﬁ
 
bIgn‹eP¨íts


227 
fûe_p
 
∑ge
;

233 
uöt4_t
 
pﬁicy
 = 
t_ˇche
 | 
t_≠≥nd
;

235 
	`DBG
(<<"¸óã_ª¯°‹ê" << 
fid
);

237 
	`W_DO
(
	`_¸óã_ªc
–
fid
, 
	`pg_pﬁicy_t
(
pﬁicy
),

238 
Àn_höt
, 
sd
, 
hdr
, 
d©a
,

239 
rid
, 
∑ge
, 
bIgn‹eP¨íts
 ));

240 
	`DBG
(<<"¸óã_ª¯¸óãd " << 
rid
);

241  
RCOK
;

242 
	}
}

245 
rc_t


246 
	gfûe_m
::
	$¸óã_mrbt_ªc
(

247 c⁄° 
°id_t
& 
fid
,

249 
smsize_t
 
Àn_höt
,

250 c⁄° 
vec_t
& 
hdr
,

251 c⁄° 
vec_t
& 
d©a
,

252 
sdesc_t
& 
sd
,

253 
rid_t
& 
rid
,

254 c⁄° 
boﬁ
 
bIgn‹eP¨íts


257 
fûe_mrbt_p
 
∑ge
;

263 
uöt4_t
 
pﬁicy
 = 
t_ˇche
 | 
t_≠≥nd
;

265 
	`DBG
(<<"¸óã_mrbt_ª¯°‹ê" << 
fid
);

267 
	`W_DO
(
	`_¸óã_mrbt_ªc
–
fid
, 
	`pg_pﬁicy_t
(
pﬁicy
),

268 
Àn_höt
, 
sd
, 
hdr
, 
d©a
,

269 
rid
, 
∑ge
, 
bIgn‹eP¨íts
 ));

270 
	`DBG
(<<"¸óã_mrbt_ª¯¸óãd " << 
rid
);

271  
RCOK
;

272 
	}
}

276 
rc_t


277 
	gfûe_m
::
	$¸óã_ªc_©_íd
(

278 
fûe_p
& 
∑ge
,

279 
uöt4_t
 
Àn_höt
,

280 c⁄° 
vec_t
& 
hdr
,

281 c⁄° 
vec_t
& 
d©a
,

282 
sdesc_t
& 
sd
,

283 
rid_t
& 
rid


286 
	`FUNC
(
fûe_m
::
¸óã_ªc_©_íd
);

288 if(
hdr
.
	`size
(Ë> 
fûe_p
::
d©a_sz
 - (
ª˘ag_t
)) {

289  
	`RC
(
eRECWONTFIT
);

291 
°id_t
 
fid
 = 
sd
.
	`°id
();

293 
	`DBG
(<<"¸óã_ªc_©_íd st‹ê" << 
fid


294 << "Öagêi†fixed: " << 
∑ge
.
	`is_fixed
()

296 
	`W_DO
(
	`_¸óã_ªc
(
fid
, 
t_≠≥nd
, 
Àn_höt
,

297 
sd
, 
hdr
, 
d©a
, 
rid
, 
∑ge
));

298 
	`DBG
(<<"¸óã_ªc_©_íd cª©ed " << 
rid
);

299  
RCOK
;

300 
	}
}

303 
rc_t


304 
	gfûe_m
::
	$¸óã_mrbt_ªc_©_íd
(

305 
fûe_mrbt_p
& 
∑ge
,

306 
uöt4_t
 
Àn_höt
,

307 c⁄° 
vec_t
& 
hdr
,

308 c⁄° 
vec_t
& 
d©a
,

309 
sdesc_t
& 
sd
,

310 
rid_t
& 
rid


313 
	`FUNC
(
fûe_m
::
¸óã_ªc_©_íd
);

315 if(
hdr
.
	`size
(Ë> 
fûe_mrbt_p
::
d©a_sz
 - (
ª˘ag_t
)) {

316  
	`RC
(
eRECWONTFIT
);

318 
°id_t
 
fid
 = 
sd
.
	`°id
();

320 
	`DBG
(<<"¸óã_mrbt_ªc_©_íd st‹ê" << 
fid


321 << "Öagêi†fixed: " << 
∑ge
.
	`is_fixed
()

323 
	`W_DO
(
	`_¸óã_mrbt_ªc
(
fid
, 
t_≠≥nd
, 
Àn_höt
,

324 
sd
, 
hdr
, 
d©a
, 
rid
, 
∑ge
));

325 
	`DBG
(<<"¸óã_mrbt_ªc_©_íd cª©ed " << 
rid
);

326  
RCOK
;

327 
	}
}

333 
rc_t


334 
	gfûe_m
::
	$_¸óã_ªc
(

335 c⁄° 
°id_t
& 
fid
,

336 
pg_pﬁicy_t
 
pﬁicy
,

337 
smsize_t
 
Àn_höt
,

338 
sdesc_t
& 
sd
,

339 c⁄° 
vec_t
& 
hdr
,

340 c⁄° 
vec_t
& 
d©a
,

341 
rid_t
& 
rid
,

342 
fûe_p
& 
∑ge
,

343 c⁄° 
boﬁ
 
bIgn‹eP¨íts


346 
smsize_t
 
•a˚_√eded
;

347 
ªcÊags_t
 
ªc_im∂
;

353 
	`w_as£π3
(
fid
 =
sd
.
	`°id
());

354 
smsize_t
 
e°_d©a_Àn
 = 
	`MAX
((
uöt4_t
)
d©a
.
	`size
(), 
Àn_höt
);

355 
ªc_im∂
 = 
fûe_p
::
	`choo£_ªc_im∂emíèti⁄
–
hdr
.
	`size
(),

356 
e°_d©a_Àn
,

357 
•a˚_√eded
);

359 
	`DBG
(<<"¸óã_ª¯wôhÖﬁicy " << (
pﬁicy
)

360 << " s∑˚_√eded=" << 
•a˚_√eded


361 << "Ñec_im∂=" << (
ªc_im∂
)

362 << "Öagêi†fixed=" << 
∑ge
.
	`is_fixed
()

365 
boﬁ
 
have_∑ge
 = 
Ál£
;

368 
¶Ÿid_t
 
¶Ÿ
 = 0;

370 
	`DBGTHRD
(<<"AboutÅo copy sd");

371 
hi°oid_upd©e_t
 
	`hu
(&
sd
);

373 if(
∑ge
.
	`is_fixed
()) {

374 
	`w_as£π2
(
pﬁicy
 =
t_≠≥nd
);

375 
	`w_as£π2
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

377 
rc_t
 
rc
 = 
∑ge
.
	`föd_™d_lock_√xt_¶Ÿ
(
•a˚_√eded
, 
¶Ÿ
);

379 if(
rc
.
	`is_îr‹
()) {

380 
∑ge
.
	`unfix
();

381 
	`DBG
(<<"rc=" << 
rc
);

382 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

384  
	`RC_AUGMENT
(
rc
);

386 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

387 
	`w_as£π3
(!
have_∑ge
);

389 
	`DBG
(<<"acquúed slŸ " << 
¶Ÿ
);

390 
have_∑ge
 = 
åue
;

391 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

392 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

393 #i‡
W_DEBUG_LEVEL
 > 2

395 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

396 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

397 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

398 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

399 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

406 if(!
have_∑ge
) {

407 
	`W_DO
(
	`_föd_¶Ÿãd_∑ge_wôh_•a˚
(
fid
, 
pﬁicy
, 
sd
,

408 
•a˚_√eded
, 
∑ge
, 
¶Ÿ
,

409 
bIgn‹eP¨íts
));

410 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

413 #i‡
W_DEBUG_LEVEL
 > 2

415 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

416 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

417 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

418 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

426 
	`w_as£π2
(
∑ge
.
	`is_fixed
(Ë&&Öage.
	`œtch_mode
(Ë=
LATCH_EX
);

428 
	`W_DO
(
	`_¸óã_ªc_ö_¶Ÿ
(
∑ge
, 
¶Ÿ
, 
ªc_im∂
,

429 
hdr
, 
d©a
, 
sd
, 
Ál£
,

430 
rid
));

432 
	`w_as£π2
(
∑ge
.
	`is_fixed
(Ë&&Öage.
	`œtch_mode
(Ë=
LATCH_EX
);

434 
hu
.
	`upd©e
();

437 if(
ªc_im∂
 =
t_œrge_0
) {

438 
	`W_DO
(
	`≠≥nd_ªc
(
rid
, 
d©a
, 
sd
));

440  
RCOK
;

441 
	}
}

446 
rc_t


447 
	gfûe_m
::
	$_¸óã_mrbt_ªc
(

448 c⁄° 
°id_t
& 
fid
,

449 
pg_pﬁicy_t
 
pﬁicy
,

450 
smsize_t
 
Àn_höt
,

451 
sdesc_t
& 
sd
,

452 c⁄° 
vec_t
& 
hdr
,

453 c⁄° 
vec_t
& 
d©a
,

454 
rid_t
& 
rid
,

455 
fûe_mrbt_p
& 
∑ge
,

456 c⁄° 
boﬁ
 
bIgn‹eP¨íts


459 
smsize_t
 
•a˚_√eded
;

460 
ªcÊags_t
 
ªc_im∂
;

466 
	`w_as£π3
(
fid
 =
sd
.
	`°id
());

467 
smsize_t
 
e°_d©a_Àn
 = 
	`MAX
((
uöt4_t
)
d©a
.
	`size
(), 
Àn_höt
);

468 
ªc_im∂
 = 
fûe_mrbt_p
::
	`choo£_ªc_im∂emíèti⁄
–
hdr
.
	`size
(),

469 
e°_d©a_Àn
,

470 
•a˚_√eded
);

472 
	`DBG
(<<"¸óã_ª¯wôhÖﬁicy " << (
pﬁicy
)

473 << " s∑˚_√eded=" << 
•a˚_√eded


474 << "Ñec_im∂=" << (
ªc_im∂
)

475 << "Öagêi†fixed=" << 
∑ge
.
	`is_fixed
()

478 
boﬁ
 
have_∑ge
 = 
Ál£
;

481 
¶Ÿid_t
 
¶Ÿ
 = 0;

483 
	`DBGTHRD
(<<"AboutÅo copy sd");

484 
hi°oid_upd©e_t
 
	`hu
(&
sd
);

486 if(
∑ge
.
	`is_fixed
()) {

487 
	`w_as£π2
(
pﬁicy
 =
t_≠≥nd
);

488 
	`w_as£π2
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

490 
rc_t
 
rc
 = 
∑ge
.
	`föd_™d_lock_√xt_¶Ÿ
(
•a˚_√eded
, 
¶Ÿ
);

492 if(
rc
.
	`is_îr‹
()) {

493 
∑ge
.
	`unfix
();

494 
	`DBG
(<<"rc=" << 
rc
);

495 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

497  
	`RC_AUGMENT
(
rc
);

499 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

500 
	`w_as£π3
(!
have_∑ge
);

502 
	`DBG
(<<"acquúed slŸ " << 
¶Ÿ
);

503 
have_∑ge
 = 
åue
;

504 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

505 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

506 #i‡
W_DEBUG_LEVEL
 > 2

508 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

509 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

510 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

511 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

512 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

519 if(!
have_∑ge
) {

520 
	`W_DO
(
	`_föd_¶Ÿãd_mrbt_∑ge_wôh_•a˚
(
fid
, 
pﬁicy
, 
sd
,

521 
•a˚_√eded
, 
∑ge
, 
¶Ÿ
,

522 
bIgn‹eP¨íts
));

523 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

526 #i‡
W_DEBUG_LEVEL
 > 2

528 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

529 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

530 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

531 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

539 
	`w_as£π2
(
∑ge
.
	`is_fixed
(Ë&&Öage.
	`œtch_mode
(Ë=
LATCH_EX
);

541 
	`W_DO
(
	`_¸óã_ªc_ö_¶Ÿ
(
∑ge
, 
¶Ÿ
, 
ªc_im∂
,

542 
hdr
, 
d©a
, 
sd
, 
Ál£
,

543 
rid
));

545 
	`w_as£π2
(
∑ge
.
	`is_fixed
(Ë&&Öage.
	`œtch_mode
(Ë=
LATCH_EX
);

547 
hu
.
	`upd©e
();

550 if(
ªc_im∂
 =
t_œrge_0
) {

551 
	`W_DO
(
	`≠≥nd_mrbt_ªc
(
rid
, 
d©a
, 
sd
));

553  
RCOK
;

554 
	}
}

556 
rc_t


557 
	gfûe_m
::
	$move_mrbt_ªc_to_giví_∑ge
(

558 
smsize_t
 
Àn_höt
,

559 c⁄° 
vec_t
& 
hdr
,

560 c⁄° 
vec_t
& 
d©a
,

561 
rid_t
& 
rid
,

562 
fûe_p
& 
∑ge
,

563 
boﬁ
& 
•a˚_found


566 
smsize_t
 
•a˚_√eded
;

567 
ªcÊags_t
 
MAYBE_UNUSED
 
ªc_im∂
;

568 
•a˚_found
 = 
åue
;

573 
smsize_t
 
e°_d©a_Àn
 = 
	`MAX
((
uöt4_t
)
d©a
.
	`size
(), 
Àn_höt
);

574 
ªc_im∂
 = 
fûe_mrbt_p
::
	`choo£_ªc_im∂emíèti⁄
–
hdr
.
	`size
(),

575 
e°_d©a_Àn
,

576 
•a˚_√eded
);

578 
	`DBG
(<< "create_rec "

579 << " s∑˚_√eded=" << 
•a˚_√eded


580 << "Ñec_im∂=" << (
ªc_im∂
)

581 << "Öagêi†fixed=" << 
∑ge
.
	`is_fixed
()

585 
¶Ÿid_t
 
¶Ÿ
 = 0;

587 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

589 if(
∑ge
.
	`is_fixed
()) {

590 
	`w_as£π2
(
∑ge
.
	`œtch_mode
()==
LATCH_NLX
 ||Öage.œtch_mode()==
LATCH_EX
);

592 
rc_t
 
rc
 = 
∑ge
.
	`föd_™d_lock_√xt_¶Ÿ
(
•a˚_√eded
, 
¶Ÿ
);

594 if(
rc
.
	`is_îr‹
()) {

595 
∑ge
.
	`unfix
();

596 
	`DBG
(<<"rc=" << 
rc
);

597 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

599  
	`RC_AUGMENT
(
rc
);

601 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

602 
•a˚_found
 = 
Ál£
;

603  
RCOK
;

605 
	`DBG
(<<"acquúed slŸ " << 
¶Ÿ
);

606 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

607 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

608 #i‡
W_DEBUG_LEVEL
 > 2

610 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_NLX
 ||

611 
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

612 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

613 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

614 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

615 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

626 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

627 (
∑ge
.
	`œtch_mode
()==
LATCH_NLX
 ||Öage.œtch_mode()==
LATCH_EX
));

629 
	`W_DO
(
	`_¸óã_mrbt_ªc_ö_¶Ÿ
(
∑ge
, 
¶Ÿ
, 
hdr
, 
d©a
, 
rid
));

631 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

632 (
∑ge
.
	`œtch_mode
()==
LATCH_NLX
 ||Öage.œtch_mode()==
LATCH_EX
));

634 
hu
.
	`upd©e
();

637  
RCOK
;

638 
	}
}

640 
rc_t


641 
	gfûe_m
::
	$¸óã_mrbt_ªc_ö_giví_∑ge
(

642 
smsize_t
 
Àn_höt
,

643 
sdesc_t
& 
sd
,

644 c⁄° 
vec_t
& 
hdr
,

645 c⁄° 
vec_t
& 
d©a
,

646 
rid_t
& 
rid
,

647 
fûe_p
& 
∑ge
,

648 
boﬁ
& 
•a˚_found
,

649 c⁄° 
boﬁ
 
bIgn‹eL©ches


652 
smsize_t
 
•a˚_√eded
;

653 
ªcÊags_t
 
ªc_im∂
;

654 
•a˚_found
 = 
åue
;

659 
smsize_t
 
e°_d©a_Àn
 = 
	`MAX
((
uöt4_t
)
d©a
.
	`size
(), 
Àn_höt
);

660 
ªc_im∂
 = 
fûe_mrbt_p
::
	`choo£_ªc_im∂emíèti⁄
–
hdr
.
	`size
(),

661 
e°_d©a_Àn
,

662 
•a˚_√eded
);

664 
	`DBG
(<<"create_rec "

665 << " s∑˚_√eded=" << 
•a˚_√eded


666 << "Ñec_im∂=" << (
ªc_im∂
)

667 << "Öagêi†fixed=" << 
∑ge
.
	`is_fixed
()

671 
¶Ÿid_t
 
¶Ÿ
 = 0;

673 
hi°oid_upd©e_t
 
	`hu
(&
sd
);

675 if(
∑ge
.
	`is_fixed
()) {

676 
	`w_as£π2
(
∑ge
.
	`œtch_mode
()==
LATCH_EX
 ||Öage.œtch_mode()==
LATCH_NLX
);

678 
rc_t
 
rc
 = 
∑ge
.
	`föd_™d_lock_√xt_¶Ÿ
(
•a˚_√eded
, 
¶Ÿ
);

680 if(
rc
.
	`is_îr‹
()) {

681 
∑ge
.
	`unfix
();

682 
	`DBG
(<<"rc=" << 
rc
);

683 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
) {

685  
	`RC_AUGMENT
(
rc
);

687 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

688 
•a˚_found
 = 
Ál£
;

689  
RCOK
;

691 
	`DBG
(<<"acquúed slŸ " << 
¶Ÿ
);

692 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

693 
hu
.
	`ª∂a˚_∑ge
(&
∑ge
);

694 #i‡
W_DEBUG_LEVEL
 > 2

696 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
 ||

697 
∑ge
.
	`œtch_mode
(Ë=
LATCH_NLX
);

698 
•a˚_buckë_t
 
b
 = 
∑ge
.
	`buckë
();

699 if((
∑ge
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

700 
∑ge
.
∑ge_buckë_öfo
.
	`öôülized
()) {

701 
	`W_FATAL_MSG
(
fcINTERNAL
, << "ah ha!");

712 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

713 (
∑ge
.
	`œtch_mode
()==
LATCH_EX
 ||Öage.œtch_mode()==
LATCH_NLX
));

715 
	`W_DO
(
	`_¸óã_ªc_ö_¶Ÿ
(
∑ge
, 
¶Ÿ
, 
ªc_im∂
, 
hdr
, 
d©a
, 
sd
, 
Ál£
, 
rid
));

717 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

718 (
∑ge
.
	`œtch_mode
()==
LATCH_EX
 ||Öage.œtch_mode()==
LATCH_NLX
));

720 
hu
.
	`upd©e
();

723 if(
ªc_im∂
 =
t_œrge_0
) {

724 
	`W_DO
(
	`≠≥nd_mrbt_ªc
(
rid
, 
d©a
, 
sd
, 
bIgn‹eL©ches
));

727  
RCOK
;

728 
	}
}

730 
rc_t


731 
	gfûe_m
::
	$de°roy_ªc_¶Ÿ
(c⁄° 
rid_t
 
rid
, 
fûe_mrbt_p
& 
∑ge
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

734 
	`DBGTHRD
(<<"destroy_rec_slot");

739 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

740 
	`w_as£π2
(
∑ge
.
	`is_œtched_by_me
());

741 
	`w_as£π2
(
∑ge
.
	`is_möe
());

743 
	`W_DO
–
∑ge
.
	`de°roy_ªc
(
rid
.
¶Ÿ
) );

745 i‡(
∑ge
.
	`ªc_cou¡
() == 0) {

746 
	`DBG
(<<"Now freeÖage");

747 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

748 
	`W_DO
(
	`_‰ì_∑ge
(
∑ge
, 
bIgn‹eL©ches
));

749 
	`INC_TSTAT
(
∑ge_fûe_mrbt_dóŒoc
);

750  
RCOK
;

753 
	`DBG
(<<"UpdateÖage utilization");

759 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

760 
hu
.
	`upd©e
();

761  
RCOK
;

762 
	}
}

764 
rc_t


765 
	gfûe_m
::
	$_¸óã_mrbt_ªc_ö_¶Ÿ
(

766 
fûe_p
 &
∑ge
,

767 
¶Ÿid_t
 
¶Ÿ
,

768 c⁄° 
vec_t
& 
hdr
,

769 c⁄° 
vec_t
& 
d©a
,

770 
rid_t
& 
rid


773 
	`FUNC
(
_¸óã_mrbt_ªc_ö_¶Ÿ
);

774 
	`w_as£π2
(
∑ge
.
	`is_fixed
() );

779 
rid
.
pid
 = 
∑ge
.
	`pid
();

780 
rid
.
¶Ÿ
 = slot;

782 
	`w_as£π3
(
rid
.
¶Ÿ
 >= 1);

787 
rc_t
 
rc
;

788 
ª˘ag_t
 
èg
;

789 
èg
.
hdr_Àn
 = 
hdr
.
	`size
();

792 
èg
.
Êags
 = 
t_smÆl
;

793 
èg
.
body_Àn
 = 
d©a
.
	`size
();

794 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

795 (
∑ge
.
	`œtch_mode
(Ë=
LATCH_NLX
 ||Öage.œtch_mode(Ë=
LATCH_EX
));

796 
rc
 = 
∑ge
.
	`fûl_¶Ÿ
(
rid
.
¶Ÿ
, 
èg
, 
hdr
, 
d©a
, 100);

797 i‡(
rc
.
	`is_îr‹
()) {

799 #i‡
W_DEBUG_LEVEL
 >= 2

800 
	`Ârötf
(
°dîr
,

802 
__LINE__
,

803 (Ë
hdr
.
	`size
(), (Ë
d©a
.size(),

804 
∑ge
.
	`ußbÀ_•a˚
(),

805 
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(),

806 
∑ge
.
	`n‰ì
(),Öage.
	`ƒsvd
()

810 
	`w_as£π1
(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
);

811  
	`RC_AUGMENT
(
rc
);

814 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

816  
RCOK
;

817 
	}
}

819 
rc_t


820 
	gfûe_m
::
	$¸óã_mrbt_ªc_l
(

821 c⁄° 
Õid_t
& 
Àaf
,

822 
sdesc_t
& 
sd
,

823 c⁄° 
vec_t
& 
hdr
,

824 c⁄° 
vec_t
& 
d©a
,

825 
smsize_t
 
Àn_höt
,

826 
rid_t
& 
√w_rid
,

827 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

829 
	`FUNC
(
¸óã_mrbt_ªc_l
);

832 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

835 
shpid_t
 
em±y_∑ge
 = 
sd
.
	`gë_∑ge_wôh_•a˚
(
Àaf
);

836 
fûe_mrbt_p
 
cuºít_hóp_∑ge
;

837 
boﬁ
 
•a˚_found
 = 
Ál£
;

838 if(
em±y_∑ge
) {

839 
Õid_t
 
hóp_∑ge_id
;

840 
hóp_∑ge_id
.
_°id
 = 
sd
.
	`°id
();

841 
hóp_∑ge_id
.
∑ge
 = 
em±y_∑ge
;

842 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
hóp_∑ge_id
, 
œtch
 ));

843 
Õid_t
 
ow√r_Àaf
;

844 
cuºít_hóp_∑ge
.
	`gë_ow√r
(
ow√r_Àaf
);

845 if(
ow√r_Àaf
 =
Àaf
) {

846 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

847 
sd
,

848 
hdr
,

849 
d©a
,

850 
√w_rid
,

851 
cuºít_hóp_∑ge
,

852 
•a˚_found
,

853 
bIgn‹eL©ches
) );

857 if(!
•a˚_found
) {

863 
båì_p
 
Àaf_∑ge
;

864 
	`W_DO
–
Àaf_∑ge
.
	`fix
(
Àaf
, 
œtch
) );

865 
£t
<
Õid_t
> 
∑ges
;

866 
rid_t
 
cuºít_rid
;

867 
i
=0; !
•a˚_found
 && i < 
Àaf_∑ge
.
	`ƒecs
(); i++) {

869 
båec_t
 
	`ªc_Àaf
(
Àaf_∑ge
, 
i
);

870 
ªc_Àaf
.
	`ñem
().
	`c›y_to
(&
cuºít_rid
, (
rid_t
));

872 if(
∑ges
.
	`föd
(
cuºít_rid
.
pid
Ë=∑ges.
	`íd
()) {

873 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
cuºít_rid
.
pid
, 
œtch
 ));

874 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

875 
sd
,

876 
hdr
,

877 
d©a
,

878 
√w_rid
,

879 
cuºít_hóp_∑ge
,

880 
•a˚_found
,

881 
bIgn‹eL©ches
) );

882 
∑ges
.
	`ö£π
(
cuºít_rid
.
pid
);

887 if(!
•a˚_found
) {

888 
Õid_t
 
√w_∑ge_id
;

889 
	`W_DO
(
	`_Æloc_mrbt_∑ge
(
sd
.
	`°id
(),

890 
Õid_t
::
eof
,

891 
√w_∑ge_id
,

892 
cuºít_hóp_∑ge
,

893 
åue
) );

894 
	`W_DO
–
cuºít_hóp_∑ge
.
	`£t_ow√r
(
Àaf
) );

895 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

896 
sd
,

897 
hdr
,

898 
d©a
,

899 
√w_rid
,

900 
cuºít_hóp_∑ge
,

901 
•a˚_found
,

902 
bIgn‹eL©ches
) );

903 
sd
.
	`£t_∑ge_wôh_•a˚
(
Àaf
, 
√w_∑ge_id
.
∑ge
);

905 
sd
.
	`£t_∑ge_wôh_•a˚
(
Àaf
, 
cuºít_rid
.
pid
.
∑ge
);

908 
Àaf_∑ge
.
	`unfix
();

912  
RCOK
;

913 
	}
}

915 
rc_t


916 
	gfûe_m
::
	$¸óã_mrbt_ªc_p
(

917 c⁄° 
Õid_t
& 
Àaf
,

918 
sdesc_t
& 
sd
,

919 c⁄° 
vec_t
& 
hdr
,

920 c⁄° 
vec_t
& 
d©a
,

921 
smsize_t
 
Àn_höt
,

922 
rid_t
& 
√w_rid
,

923 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

925 
	`FUNC
(
¸óã_mrbt_ªc_p
);

928 
œtch_mode_t
 
hóp_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

929 
œtch_mode_t
 
Àaf_œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

931 
båì_p
 
Àaf_∑ge
;

932 
	`W_DO
–
Àaf_∑ge
.
	`fix
(
Àaf
, 
Àaf_œtch
) );

933 
Õid_t
 
roŸ
 = 
Àaf_∑ge
.
	`roŸ
();

936 
shpid_t
 
em±y_∑ge
 = 
sd
.
	`gë_∑ge_wôh_•a˚
(
roŸ
);

937 
fûe_mrbt_p
 
cuºít_hóp_∑ge
;

938 
boﬁ
 
•a˚_found
 = 
Ál£
;

939 if(
em±y_∑ge
) {

940 
Õid_t
 
hóp_∑ge_id
;

941 
hóp_∑ge_id
.
_°id
 = 
sd
.
	`°id
();

942 
hóp_∑ge_id
.
∑ge
 = 
em±y_∑ge
;

943 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
hóp_∑ge_id
, 
hóp_œtch
 ));

944 
Õid_t
 
ow√r
;

945 
cuºít_hóp_∑ge
.
	`gë_ow√r
(
ow√r
);

946 if(
ow√r
 =
roŸ
) {

947 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

948 
sd
,

949 
hdr
,

950 
d©a
,

951 
√w_rid
,

952 
cuºít_hóp_∑ge
,

953 
•a˚_found
,

954 
bIgn‹eL©ches
) );

958 if(!
•a˚_found
) {

965 
rid_t
 
cuºít_rid
;

966 
£t
<
Õid_t
> 
∑ges
;

968 
i
=0; !
•a˚_found
 && i < 
Àaf_∑ge
.
	`ƒecs
(); i++) {

970 
båec_t
 
	`ªc_Àaf
(
Àaf_∑ge
, 
i
);

971 
ªc_Àaf
.
	`ñem
().
	`c›y_to
(&
cuºít_rid
, (
rid_t
));

973 if(
∑ges
.
	`föd
(
cuºít_rid
.
pid
Ë=∑ges.
	`íd
()) {

974 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
cuºít_rid
.
pid
, 
hóp_œtch
 ));

975 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

976 
sd
,

977 
hdr
,

978 
d©a
,

979 
√w_rid
,

980 
cuºít_hóp_∑ge
,

981 
•a˚_found
,

982 
bIgn‹eL©ches
) );

983 
∑ges
.
	`ö£π
(
cuºít_rid
.
pid
);

987 if(!
•a˚_found
 && 
Àaf_∑ge
.
	`√xt
() != 0) {

988 
båì_p
 
√xt_Àaf
;

989 
Õid_t
 
	`pid_√xt_Àaf
(
Àaf
.
_°id
, 
Àaf_∑ge
.
	`√xt
());

990 
	`W_DO
–
√xt_Àaf
.
	`fix
(
pid_√xt_Àaf
, 
Àaf_œtch
) );

991 
i
 = 0;

992 !
•a˚_found
) {

993 if(
i
 >
√xt_Àaf
.
	`ƒecs
()) {

994 
pid_√xt_Àaf
.
∑ge
 = 
√xt_Àaf
.
	`√xt
();

995 
√xt_Àaf
.
	`unfix
();

996 if(
pid_√xt_Àaf
.
∑ge
 != 0) {

997 
i
 = 0;

998 
	`W_DO
–
√xt_Àaf
.
	`fix
(
pid_√xt_Àaf
, 
Àaf_œtch
) );

1004 
båec_t
 
	`ªc_Àaf
(
√xt_Àaf
, 
i
);

1005 
ªc_Àaf
.
	`ñem
().
	`c›y_to
(&
cuºít_rid
, (
rid_t
));

1006 if(
∑ges
.
	`föd
(
cuºít_rid
.
pid
Ë=∑ges.
	`íd
()) {

1008 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
cuºít_rid
.
pid
, 
hóp_œtch
 ));

1009 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

1010 
sd
,

1011 
hdr
,

1012 
d©a
,

1013 
√w_rid
,

1014 
cuºít_hóp_∑ge
,

1015 
•a˚_found
,

1016 
bIgn‹eL©ches
) );

1017 
∑ges
.
	`ö£π
(
cuºít_rid
.
pid
);

1019 
i
++;

1023 if(!
•a˚_found
 && 
Àaf_∑ge
.
	`¥ev
() != 0) {

1024 
båì_p
 
¥ev_Àaf
;

1025 
Õid_t
 
	`pid_¥ev_Àaf
(
Àaf
.
_°id
, 
Àaf_∑ge
.
	`¥ev
());

1026 
	`W_DO
–
¥ev_Àaf
.
	`fix
(
pid_¥ev_Àaf
, 
Àaf_œtch
) );

1027 
i
 = 0;

1028 !
•a˚_found
) {

1029 if(
i
 >
¥ev_Àaf
.
	`ƒecs
()) {

1030 
pid_¥ev_Àaf
.
∑ge
 = 
¥ev_Àaf
.
	`√xt
();

1031 
¥ev_Àaf
.
	`unfix
();

1032 if(
pid_¥ev_Àaf
.
∑ge
 != 0) {

1033 
i
 = 0;

1034 
	`W_DO
–
¥ev_Àaf
.
	`fix
(
pid_¥ev_Àaf
, 
Àaf_œtch
) );

1040 
båec_t
 
	`ªc_Àaf
(
¥ev_Àaf
, 
i
);

1041 
ªc_Àaf
.
	`ñem
().
	`c›y_to
(&
cuºít_rid
, (
rid_t
));

1042 if(
∑ges
.
	`föd
(
cuºít_rid
.
pid
Ë=∑ges.
	`íd
()) {

1044 
	`W_DO
–
cuºít_hóp_∑ge
.
	`fix
(
cuºít_rid
.
pid
, 
hóp_œtch
 ));

1045 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

1046 
sd
,

1047 
hdr
,

1048 
d©a
,

1049 
√w_rid
,

1050 
cuºít_hóp_∑ge
,

1051 
•a˚_found
,

1052 
bIgn‹eL©ches
) );

1053 
∑ges
.
	`ö£π
(
cuºít_rid
.
pid
);

1055 
i
++;

1060 if(!
•a˚_found
) {

1061 
Õid_t
 
√w_∑ge_id
;

1062 
	`W_DO
–
	`_Æloc_mrbt_∑ge
(
sd
.
	`°id
(),

1063 
Õid_t
::
eof
,

1064 
√w_∑ge_id
,

1065 
cuºít_hóp_∑ge
,

1066 
åue
) );

1067 
	`W_DO
–
cuºít_hóp_∑ge
.
	`£t_ow√r
(
roŸ
) );

1069 
	`W_DO
–
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
,

1070 
sd
,

1071 
hdr
,

1072 
d©a
,

1073 
√w_rid
,

1074 
cuºít_hóp_∑ge
,

1075 
•a˚_found
,

1076 
bIgn‹eL©ches
) );

1077 
sd
.
	`£t_∑ge_wôh_•a˚
(
roŸ
, 
√w_∑ge_id
.
∑ge
);

1079 
sd
.
	`£t_∑ge_wôh_•a˚
(
roŸ
, 
cuºít_rid
.
pid
.
∑ge
);

1084 
Àaf_∑ge
.
	`unfix
();

1086  
RCOK
;

1087 
	}
}

1090 
rc_t


1091 
	gfûe_m
::
	$_föd_¶Ÿãd_∑ge_wôh_•a˚
(

1092 c⁄° 
°id_t
& 
°id
,

1093 
pg_pﬁicy_t
 
mask
,

1097 
sdesc_t
& 
sd
,

1098 
smsize_t
 
•a˚_√eded
,

1099 
fûe_p
& 
∑ge
,

1100 
¶Ÿid_t
& 
¶Ÿ
,

1101 c⁄° 
boﬁ
 
bIgn‹eP¨íts


1104 
uöt4_t
 
pﬁicy
 = 
	`uöt4_t
(
mask
);

1106 
	`DBG
(<< "_föd_¶Ÿãd_∑ge_wôh_•a˚Çìded=" << 
•a˚_√eded


1107 << "Öﬁicy =" << 
pﬁicy


1108 << "Öagêi†fixed =" << 
∑ge
.
	`is_fixed
()

1111 
boﬁ
 
found
=
Ál£
;

1112 c⁄° 
hi°oid_t
* 
h
 = 
sd
.
	`°‹e_utûiz©i⁄
();

1114 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1120 if(
pﬁicy
 & 
t_ˇche
) {

1121 
	`INC_TSTAT
(
fm_ˇche
);

1122 !
found
) {

1123 
pgöfo_t
 
öfo
;

1124 
	`DBG
(<<"looking in cache");

1125 
	`W_DO
(
h
->
	`föd_∑ge
(
•a˚_√eded
, 
found
, 
öfo
, &
∑ge
, 
¶Ÿ
,

1126 
bIgn‹eP¨íts
));

1128 if(
found
) {

1129 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

1130 
	`DBG
(<<"foundÖagê" << 
öfo
.
	`∑ge
()

1131 << " slŸ " << 
¶Ÿ
);

1132 
	`INC_TSTAT
(
fm_∑geˇche_hô
);

1133  
RCOK
;

1136 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1141 
	`w_as£π2
(!
found
);

1142 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1144 
boﬁ
 
may_£¨ch_fûe
 = 
Ál£
;

1153 if(
pﬁicy
 & 
t_com∑˘
)

1155 
	`INC_TSTAT
(
fm_com∑˘
);

1156 
	`DBG
(<<"lookingát file histogram");

1157 
smsize_t
 
¢
 = 
∑ge_p
::
	`buckë2‰ì_•a˚
(

1158 
∑ge_p
::
	`‰ì_•a˚2buckë
(
•a˚_√eded
)) + 1;

1159 
	`W_DO
(
h
->
	`exi°s_∑ge
(
¢
, 
found
));

1160 if(
found
) {

1161 
	`INC_TSTAT
(
fm_hi°ogøm_hô
);

1167 
Õid_t
 
Õid
;

1169 
	`W_DO
(
	`fú°_∑ge
(
°id
, 
Õid
, 
NULL
 ) );

1170 
	`DBG
(<<"fú°áŒoˇãdÖagêo‡" << 
°id
 << " i†" << 
Õid
);

1173 
boﬁ
 
eof
 = 
Ál£
;

1174  !
eof
 ) {

1175 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1176 
	`W_DO
–
∑ge
.
	`fix
(
Õid
, 
LATCH_SH
, 0 ));

1178 
	`INC_TSTAT
(
fm_£¨ch_∑ges
);

1180 
	`DBG
(<<"ußbÀ s∑˚=" << 
∑ge
.
	`ußbÀ_•a˚
()

1181 << "Çìded" << 
•a˚_√eded
);

1183 i‡(
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë>(
fûe_p
::
¶Ÿ_t
)

1185 
∑ge
.
	`ußbÀ_•a˚
(Ë>
•a˚_√eded
)

1187 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1188 
Õid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1189 
Ál£
,

1190 
found
, 
¶Ÿ
));

1191 if(
found
) {

1192 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1193 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1194 << " slŸ " << 
¶Ÿ
);

1195 
	`INC_TSTAT
(
fm_£¨ch_hô
);

1196  
RCOK
;

1199 
∑ge
.
	`unfix
();

1202 
	`DBG
(<<"gëÇexà∑gêa·î " << 
Õid


1203 << " f‹ s∑˚ " << 
•a˚_√eded
);

1204 
	`W_DO
(
	`√xt_∑ge_wôh_•a˚
(
Õid
, 
eof
,

1205 
fûe_p
::
	`‰ì_•a˚2buckë
(
•a˚_√eded
) + 1));

1206 
	`DBG
(<<"√xà∑gêi†" << 
Õid
);

1210 
	`INC_TSTAT
(
fm_£¨ch_Áûed
);

1211 
found
 = 
Ál£
;

1213 
	`DBG
(<<"not found in file histogram - so don't search file");

1215 
	`w_as£π3
(!
found
);

1216 if(!
found
) {

1219 
may_£¨ch_fûe
 = 
åue
;

1226 
	`w_as£π3
(!
found
);

1227 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1237 if(
pﬁicy
 & 
t_≠≥nd
)

1239 #i‡ 
W_DEBUG_LEVEL
 > 1

1240 if(
pﬁicy
 =
t_≠≥nd
) {

1241 
	`w_as£π1
(
may_£¨ch_fûe
 =
Ál£
);

1245 if(
may_£¨ch_fûe
) {

1246 
	`INC_TSTAT
(
fm_≠≥nd
);

1248 
	`INC_TSTAT
(
fm_≠≥nd⁄ly
);

1250 
Õid_t
 
œ°pid
 = 
	`Õid_t
(
°id
, 
sd
.
	`hog_œ°_pid
());

1252 
	`DBG
(<<"åyÅÿ≠≥ndÅÿfûêœ°pid.∑ge=" << 
œ°pid
.
∑ge
);

1255 if(
œ°pid
.
∑ge
) {

1256 
	`DBG
(<<"look i¿œ°Öagê- which i†" << 
œ°pid
 );

1257 
found
 = 
io
->
	`is_vÆid_∑ge_of
(
œ°pid
, 
°id
.
°‹e
);

1261 
	`INC_TSTAT
(
fm_œ°pid_ˇched
);

1262 
sd
.
	`‰ì_œ°_pid
();

1264 i‡(
found
) {

1265 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1266 
œ°pid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1267 !
may_£¨ch_fûe
,

1268 
found
, 
¶Ÿ
));

1270 if(
found
) {

1271 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1272 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1273 << " slŸ " << 
¶Ÿ
);

1274 
	`INC_TSTAT
(
fm_œ°pid_hô
);

1275 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
∑ge
.
	`pid
(), 
°id
.
°‹e
));

1276  
RCOK
;

1278 
	`DBG
(<<"no slot inÜastÖage ");

1279 
œ°pid
.
∑ge
 = 0;

1281 
sd
.
	`‰ì_œ°_pid
();

1284 
	`DBGTHRD
(<<"ÆloˇãÇewÖagêmay_£¨ch_fûe="<< 
may_£¨ch_fûe
 );

1287 
Õid_t
 
√wpid
;

1301 
	`W_DO
(
	`_Æloc_∑ge
(
°id
, 
œ°pid
, 
√wpid
, 
∑ge
, 
may_£¨ch_fûe
));

1302 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1303 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

1306 if(
may_£¨ch_fûe
) {

1307 
sd
.
	`£t_œ°_pid
(0);

1310 
sd
.
	`£t_œ°_pid
(
√wpid
.
∑ge
);

1316 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1317 
√wpid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1318 !
may_£¨ch_fûe
,

1319 
found
, 
¶Ÿ
));

1321 if(
found
) {

1322 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1323 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1324 << " slŸ " << 
¶Ÿ
);

1325 
	`INC_TSTAT
(
fm_Æloc_pg
);

1326 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
∑ge
.
	`pid
(), 
°id
.
°‹e
));

1327  
RCOK
;

1329 
∑ge
.
	`unfix
();

1331 
	`w_as£π3
(!
found
);

1332 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1334 
	`INC_TSTAT
(
fm_no•a˚
);

1335 
	`DBG
(<<"not found");

1336  
	`RC
(
eSPACENOTFOUND
);

1337 
	}
}

1340 
rc_t


1341 
	gfûe_m
::
	$_föd_¶Ÿãd_mrbt_∑ge_wôh_•a˚
(

1342 c⁄° 
°id_t
& 
°id
,

1343 
pg_pﬁicy_t
 
mask
,

1347 
sdesc_t
& 
sd
,

1348 
smsize_t
 
•a˚_√eded
,

1349 
fûe_mrbt_p
& 
∑ge
,

1350 
¶Ÿid_t
& 
¶Ÿ
,

1351 c⁄° 
boﬁ
 
bIgn‹eP¨íts


1354 
uöt4_t
 
pﬁicy
 = 
	`uöt4_t
(
mask
);

1356 
	`DBG
(<< "_föd_¶Ÿãd_mrbt_∑ge_wôh_•a˚Çìded=" << 
•a˚_√eded


1357 << "Öﬁicy =" << 
pﬁicy


1358 << "Öagêi†fixed =" << 
∑ge
.
	`is_fixed
()

1361 
boﬁ
 
found
=
Ál£
;

1362 c⁄° 
hi°oid_t
* 
h
 = 
sd
.
	`°‹e_utûiz©i⁄
();

1364 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1370 if(
pﬁicy
 & 
t_ˇche
) {

1371 
	`INC_TSTAT
(
fm_ˇche
);

1372 !
found
) {

1373 
pgöfo_t
 
öfo
;

1374 
	`DBG
(<<"looking in cache");

1375 
	`W_DO
(
h
->
	`föd_∑ge
(
•a˚_√eded
, 
found
, 
öfo
, &
∑ge
, 
¶Ÿ
,

1376 
bIgn‹eP¨íts
));

1378 if(
found
) {

1379 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

1380 
	`DBG
(<<"foundÖagê" << 
öfo
.
	`∑ge
()

1381 << " slŸ " << 
¶Ÿ
);

1382 
	`INC_TSTAT
(
fm_∑geˇche_hô
);

1383  
RCOK
;

1386 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1391 
	`w_as£π2
(!
found
);

1392 
	`w_as£π2
(!
∑ge
.
	`is_fixed
());

1394 
boﬁ
 
may_£¨ch_fûe
 = 
Ál£
;

1403 if(
pﬁicy
 & 
t_com∑˘
)

1405 
	`INC_TSTAT
(
fm_com∑˘
);

1406 
	`DBG
(<<"lookingát file histogram");

1407 
smsize_t
 
¢
 = 
∑ge_p
::
	`buckë2‰ì_•a˚
(

1408 
∑ge_p
::
	`‰ì_•a˚2buckë
(
•a˚_√eded
)) + 1;

1409 
	`W_DO
(
h
->
	`exi°s_∑ge
(
¢
, 
found
));

1410 if(
found
) {

1411 
	`INC_TSTAT
(
fm_hi°ogøm_hô
);

1417 
Õid_t
 
Õid
;

1419 
	`W_DO
(
	`fú°_∑ge
(
°id
, 
Õid
, 
NULL
 ) );

1420 
	`DBG
(<<"fú°áŒoˇãdÖagêo‡" << 
°id
 << " i†" << 
Õid
);

1423 
boﬁ
 
eof
 = 
Ál£
;

1424  !
eof
 ) {

1425 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1426 
	`W_DO
–
∑ge
.
	`fix
(
Õid
, 
LATCH_SH
, 0 ));

1428 
	`INC_TSTAT
(
fm_£¨ch_∑ges
);

1430 
	`DBG
(<<"ußbÀ s∑˚=" << 
∑ge
.
	`ußbÀ_•a˚
()

1431 << "Çìded" << 
•a˚_√eded
);

1433 i‡(
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë>(
fûe_p
::
¶Ÿ_t
)

1435 
∑ge
.
	`ußbÀ_•a˚
(Ë>
•a˚_√eded
)

1437 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1438 
Õid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1439 
Ál£
,

1440 
found
, 
¶Ÿ
));

1441 if(
found
) {

1442 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1443 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1444 << " slŸ " << 
¶Ÿ
);

1445 
	`INC_TSTAT
(
fm_£¨ch_hô
);

1446  
RCOK
;

1449 
∑ge
.
	`unfix
();

1452 
	`DBG
(<<"gëÇexà∑gêa·î " << 
Õid


1453 << " f‹ s∑˚ " << 
•a˚_√eded
);

1454 
	`W_DO
(
	`√xt_∑ge_wôh_•a˚
(
Õid
, 
eof
,

1455 
fûe_p
::
	`‰ì_•a˚2buckë
(
•a˚_√eded
) + 1));

1456 
	`DBG
(<<"√xà∑gêi†" << 
Õid
);

1460 
	`INC_TSTAT
(
fm_£¨ch_Áûed
);

1461 
found
 = 
Ál£
;

1463 
	`DBG
(<<"not found in file histogram - so don't search file");

1465 
	`w_as£π3
(!
found
);

1466 if(!
found
) {

1469 
may_£¨ch_fûe
 = 
åue
;

1476 
	`w_as£π3
(!
found
);

1477 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1487 if(
pﬁicy
 & 
t_≠≥nd
)

1489 #i‡ 
W_DEBUG_LEVEL
 > 1

1490 if(
pﬁicy
 =
t_≠≥nd
) {

1491 
	`w_as£π1
(
may_£¨ch_fûe
 =
Ál£
);

1495 if(
may_£¨ch_fûe
) {

1496 
	`INC_TSTAT
(
fm_≠≥nd
);

1498 
	`INC_TSTAT
(
fm_≠≥nd⁄ly
);

1500 
Õid_t
 
œ°pid
 = 
	`Õid_t
(
°id
, 
sd
.
	`hog_œ°_pid
());

1502 
	`DBG
(<<"åyÅÿ≠≥ndÅÿfûêœ°pid.∑ge=" << 
œ°pid
.
∑ge
);

1505 if(
œ°pid
.
∑ge
) {

1506 
	`DBG
(<<"look i¿œ°Öagê- which i†" << 
œ°pid
 );

1507 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
œ°pid
, 
°id
.
°‹e
));

1511 
	`INC_TSTAT
(
fm_œ°pid_ˇched
);

1512 
sd
.
	`‰ì_œ°_pid
();

1514 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1515 
œ°pid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1516 !
may_£¨ch_fûe
,

1517 
found
, 
¶Ÿ
));

1518 if(
found
) {

1519 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1520 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1521 << " slŸ " << 
¶Ÿ
);

1522 
	`INC_TSTAT
(
fm_œ°pid_hô
);

1523 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
∑ge
.
	`pid
(), 
°id
.
°‹e
));

1524  
RCOK
;

1526 
	`DBG
(<<"no slot inÜastÖage ");

1528 
sd
.
	`‰ì_œ°_pid
();

1531 
	`DBGTHRD
(<<"ÆloˇãÇewÖagêmay_£¨ch_fûe="<< 
may_£¨ch_fûe
 );

1534 
Õid_t
 
√wpid
;

1548 
	`W_DO
(
	`_Æloc_mrbt_∑ge
(
°id
, 
œ°pid
, 
√wpid
, 
∑ge
, 
may_£¨ch_fûe
));

1549 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1550 
	`w_as£π3
(
∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

1553 if(
may_£¨ch_fûe
) {

1554 
sd
.
	`£t_œ°_pid
(0);

1557 
sd
.
	`£t_œ°_pid
(
√wpid
.
∑ge
);

1563 
	`W_DO
(
h
->
	`œtch_lock_gë_¶Ÿ
(

1564 
√wpid
.
∑ge
, &∑ge, 
•a˚_√eded
,

1565 !
may_£¨ch_fûe
,

1566 
found
, 
¶Ÿ
));

1568 if(
found
) {

1569 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1570 
	`DBG
(<<"foundÖagê" << 
∑ge
.
	`pid
().page

1571 << " slŸ " << 
¶Ÿ
);

1572 
	`INC_TSTAT
(
fm_Æloc_pg
);

1573 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
∑ge
.
	`pid
(), 
°id
.
°‹e
));

1574  
RCOK
;

1576 
∑ge
.
	`unfix
();

1578 
	`w_as£π3
(!
found
);

1579 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

1581 
	`INC_TSTAT
(
fm_no•a˚
);

1582 
	`DBG
(<<"not found");

1583  
	`RC
(
eSPACENOTFOUND
);

1584 
	}
}

1594 
rc_t


1595 
	gfûe_m
::
	$_¸óã_ªc_ö_¶Ÿ
(

1596 
fûe_p
 &
∑ge
,

1597 
¶Ÿid_t
 
¶Ÿ
,

1598 
ªcÊags_t
 
ªc_im∂
,

1599 c⁄° 
vec_t
& 
hdr
,

1600 c⁄° 
vec_t
& 
d©a
,

1601 
sdesc_t
& 
sd
,

1602 
boﬁ
 
do_≠≥nd
,

1603 
rid_t
& 
rid


1606 
	`FUNC
(
_¸óã_ªc_ö_¶Ÿ
);

1607 
	`w_as£π2
(
∑ge
.
	`is_fixed
() );

1611 
rid
.
pid
 = 
∑ge
.
	`pid
();

1612 
rid
.
¶Ÿ
 = slot;

1614 
	`w_as£π3
(
rid
.
¶Ÿ
 >= 1);

1619 
rc_t
 
rc
;

1620 
ª˘ag_t
 
èg
;

1621 
èg
.
hdr_Àn
 = 
hdr
.
	`size
();

1623 
ªc_im∂
) {

1624 
t_smÆl
:

1626 
èg
.
Êags
 = 
t_smÆl
;

1627 
èg
.
body_Àn
 = 
d©a
.
	`size
();

1628 
	`w_as£π2
(
∑ge
.
	`is_fixed
() &&

1629 (
∑ge
.
	`œtch_mode
()==
LATCH_EX
 ||Öage.œtch_mode()==
LATCH_NLX
));

1630 
rc
 = 
∑ge
.
	`fûl_¶Ÿ
(
rid
.
¶Ÿ
, 
èg
, 
hdr
, 
d©a
, 100);

1631 i‡(
rc
.
	`is_îr‹
()) {

1633 #i‡
W_DEBUG_LEVEL
 >= 2

1634 
	`Ârötf
(
°dîr
,

1636 
__LINE__
,

1637 (Ë
hdr
.
	`size
(), (Ë
d©a
.size(),

1638 
∑ge
.
	`ußbÀ_•a˚
(),

1639 
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(),

1640 
∑ge
.
	`n‰ì
(),Öage.
	`ƒsvd
()

1644 
	`w_as£π1
(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
);

1645  
	`RC_AUGMENT
(
rc
);

1648 
t_œrge_0
:

1650 
	`w_as£π3
(
sd
.
	`œrge_°id
().
°‹e
 > 0);

1654 
lg_èg_chunks_s
 
	`lg_chunks
(
sd
.
	`œrge_°id
().
°‹e
);

1655 
vec_t
 
	`lg_vec
(&
lg_chunks
, (lg_chunks));

1657 
èg
.
Êags
 = 
ªc_im∂
;

1658 
èg
.
body_Àn
 = 0;

1659 
rc
 = 
∑ge
.
	`fûl_¶Ÿ
(
rid
.
¶Ÿ
, 
èg
, 
hdr
, 
lg_vec
, 100);

1660 i‡(
rc
.
	`is_îr‹
()) {

1661 
	`w_as£π1
(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
);

1662  
	`RC_AUGMENT
(
rc
);

1666 if(
do_≠≥nd
) {

1667 
	`W_DO
(
	`≠≥nd_ªc
(
rid
, 
d©a
, 
sd
));

1672 
t_œrge_1
: 
t_œrge_2
:

1675 
	`W_FATAL
(
eINTERNAL
);

1677 
	`w_as£π3
(
∑ge
.
	`is_fixed
(Ë&&Öage.
	`is_fûe_p
());

1678  
RCOK
;

1679 
	}
}

1686 
rc_t


1687 
	gfûe_m
::
	$de°roy_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1689 
fûe_p
 
∑ge
;

1690 
ªc‹d_t
* 
ªc
;

1692 
	`DBGTHRD
(<<"destroy_rec");

1693 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1694 
	`W_DO
(
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
));

1699 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

1700 
	`w_as£π2
(
∑ge
.
	`is_œtched_by_me
());

1701 
	`w_as£π2
(
∑ge
.
	`is_möe
());

1704 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

1705 
	`DBGTHRD
(<<"gŸÑe¯f‹Ñid " << 
rid
);

1707 i‡(
ªc
->
	`is_smÆl
()) {

1709 
	`DBG
(<<"small");

1711 
	`DBG
(<<"œrgê--Årunˇã " << 
rid
 << " sizêi†" << 
ªc
->
	`body_size
());

1712 
	`W_DO
(
	`_åunˇã_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
ªc
->
	`body_size
()));

1715 
	`W_DO
–
∑ge
.
	`de°roy_ªc
(
rid
.
¶Ÿ
) );

1717 i‡(
∑ge
.
	`ªc_cou¡
() == 0) {

1718 
	`DBG
(<<"Now freeÖage");

1719 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

1720 if(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_fûe_p
) {

1721 
	`INC_TSTAT
(
∑ge_fûe_dóŒoc
);

1722 } if(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_fûe_mrbt_p
) {

1723 
	`INC_TSTAT
(
∑ge_fûe_mrbt_dóŒoc
);

1725 
	`W_DO
(
	`_‰ì_∑ge
(
∑ge
, 
bIgn‹eL©ches
));

1726  
RCOK
;

1729 
	`DBG
(<<"UpdateÖage utilization");

1735 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

1736 
hu
.
	`upd©e
();

1737  
RCOK
;

1738 
	}
}

1740 
rc_t


1741 
	gfûe_m
::
	$upd©e_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1743 
fûe_p
 
∑ge
;

1744 
ªc‹d_t
* 
ªc
;

1746 
œtch_mode_t
 
∑ge_œtch_mode
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1747 
	`DBGTHRD
(<<"update_rec");

1748 
	`W_DO
(
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
∑ge_œtch_mode
));

1750 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

1755 i‡(
°¨t
 > 
ªc
->
	`body_size
()) {

1756  
	`RC
(
eBADSTART
);

1758 i‡(
d©a
.
	`size
(Ë> (
ªc
->
	`body_size
()-
°¨t
)) {

1759  
	`RC
(
eRECUPDATESIZE
);

1762 i‡(
ªc
->
	`is_smÆl
()) {

1763 
	`W_DO
–
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 
	`u4i
(
°¨t
), 
d©a
.
	`size
(), data) );

1765 i‡(
ªc
->
èg
.
Êags
 & 
t_œrge_0
) {

1766 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
ªc
->
	`body
());

1767 
	`W_DO
(
lg_hdl
.
	`upd©e
(
°¨t
, 
d©a
));

1769 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_ödúe˘_s
*)
ªc
->
	`body
(),Ñec->
	`∑ge_cou¡
());

1770 
	`W_DO
(
lg_hdl
.
	`upd©e
(
°¨t
, 
d©a
));

1773  
RCOK
;

1774 
	}
}

1776 
rc_t


1777 
	gfûe_m
::
	$≠≥nd_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
, c⁄° 
sdesc_t
& 
sd
)

1779 
fûe_p
 
∑ge
;

1780 
ªc‹d_t
* 
ªc
;

1781 
smsize_t
 
‹ig_size
;

1783 
	`w_as£π3
(
rid
.
	`°id
(Ë=
sd
.stid());

1784 #i‡
W_DEBUG_LEVEL
 > 2

1787 
lock_mode_t
 
m
=
NL
;

1788 
	`W_DO
–
lm
->
	`quîy
(
rid
, 
m
, 
	`x˘
()->
	`tid
()) );

1789 if(
m
 !
EX
) {

1790 
lock_mode_t
 
mp
=
NL
;

1791 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
, 
mp
, 
	`x˘
()->
	`tid
()) );

1792 if(
mp
 !
EX
) {

1793 
lock_mode_t
 
ms
=
NL
;

1794 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
.
	`°id
(), 
ms
, 
	`x˘
()->
	`tid
()) );

1795 if(
ms
 !
EX
) {

1796 
lock_mode_t
 
mv
=
NL
;

1797 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
.
	`°id
().
vﬁ
, 
mv
, 
	`x˘
()->
	`tid
()) );

1798 
	`w_as£π2
(
mv
==
EX
);

1799 
m
 = 
mv
;

1800 } 
m
 = 
ms
;

1801 } 
m
=
mp
;

1803 
	`DBG
(<<"áµídÑe¯tÿrid " << 
rid


1804 << " wôhÜock modê(‹Ö¨íàlock mode)" << 
m


1805 << " f‹Åid " << 
	`x˘
()->
	`tid
());

1811 
	`DBGTHRD
(<<"append_rec");

1812 
	`W_DO
–
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
LATCH_EX
) );

1817 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1818 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

1820 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
));

1822 
‹ig_size
 = 
ªc
->
	`body_size
();

1825 i‡–(
ªc‹d_t
::
max_Àn
 - 
‹ig_size
Ë< 
d©a
.
	`size
() ) {

1826 #i‡
W_DEBUG_LEVEL
 > 2

1827 
˚º
 << "ˇn'àgrow bey⁄d 4GB=" << (
ªc‹d_t
::
max_Àn
)

1828 << " orig_sizê" << (
‹ig_size
)

1829 << "áµíd.size(Ë" << 
d©a
.
	`size
()

1830 << 
ídl
;

1832  
	`RC
(
eBADAPPEND
);

1836 
smsize_t
 
•a˚_√eded
;

1837 i‡–
ªc
->
	`is_smÆl
() &&

1838 
fûe_p
::
	`choo£_ªc_im∂emíèti⁄
(
ªc
->
	`hdr_size
(),

1839 
‹ig_size
 + 
d©a
.
	`size
(), 
•a˚_√eded
Ë=
t_smÆl
) {

1841 i‡(
∑ge
.
	`ußbÀ_•a˚
(Ë< 
d©a
.
	`size
()Ë{  
	`RC
(
eRECWONTFIT
); }

1845 if–
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë< (
fûe_p
::
¶Ÿ_t
)) {

1846  
	`RC
(
eRECWONTFIT
);

1849 
	`W_DO
–
∑ge
.
	`≠≥nd_ªc
(
rid
.
¶Ÿ
, 
d©a
) );

1851 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

1852 } i‡(
ªc
->
	`is_smÆl
()) {

1857 *
tmp
 = 
√w
 [
∑ge_s
::
d©a_sz
];

1858 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
tmp
);

1860 
	`mem˝y
(
tmp
, 
ªc
->
	`body
(), 
‹ig_size
);

1861 
vec_t
 
	`body_vec
(
tmp
, 
‹ig_size
);

1863 
	`w_as£π3
(
sd
.
	`œrge_°id
().
°‹e
 > 0);

1866 
lg_èg_chunks_s
 
	`lg_chunks
(
sd
.
	`œrge_°id
().
°‹e
);

1867 
vec_t
 
	`lg_vec
(&
lg_chunks
, (lg_chunks));

1871 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0, (
¶Ÿ_Àngth_t
)
‹ig_size
, 
lg_vec
));

1872 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_œrge_0
));

1873 
	`W_DO
(
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 0));

1876 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ
 << " body_vec.size "

1877 << 
body_vec
.
	`size
());

1878 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
body_vec
));

1879 
	`DBG
–<< " sëÑe¯À¿ " << 
‹ig_size
);

1880 
	`W_DO
(
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
));

1881 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ
 << " data.size "

1882 << 
d©a
.
	`size
());

1883 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
d©a
));

1886 
	`w_as£π3
(
ªc
->
	`is_œrge
());

1887 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ


1888 << "–‹ig sizê" << 
‹ig_size


1890 << 
d©a
.
	`size
()

1892 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
d©a
));

1894 
	`W_DO
–
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
+
d©a
.
	`size
()) );

1901 
	`DBG
(<<"appendÑec");

1902 
hu
.
	`upd©e
();

1903  
RCOK
;

1904 
	}
}

1907 
rc_t


1908 
	gfûe_m
::
	$≠≥nd_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
, c⁄° 
sdesc_t
& 
sd
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1910 
fûe_mrbt_p
 
∑ge
;

1911 
ªc‹d_t
* 
ªc
;

1912 
smsize_t
 
‹ig_size
;

1914 
	`w_as£π3
(
rid
.
	`°id
(Ë=
sd
.stid());

1915 #i‡
W_DEBUG_LEVEL
 > 2

1918 
lock_mode_t
 
m
=
NL
;

1919 
	`W_DO
–
lm
->
	`quîy
(
rid
, 
m
, 
	`x˘
()->
	`tid
()) );

1920 if(
m
 !
EX
) {

1921 
lock_mode_t
 
mp
=
NL
;

1922 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
, 
mp
, 
	`x˘
()->
	`tid
()) );

1923 if(
mp
 !
EX
) {

1924 
lock_mode_t
 
ms
=
NL
;

1925 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
.
	`°id
(), 
ms
, 
	`x˘
()->
	`tid
()) );

1926 if(
ms
 !
EX
) {

1927 
lock_mode_t
 
mv
=
NL
;

1928 
	`W_DO
–
lm
->
	`quîy
(
rid
.
pid
.
	`°id
().
vﬁ
, 
mv
, 
	`x˘
()->
	`tid
()) );

1929 
	`w_as£π2
(
mv
==
EX
);

1930 
m
 = 
mv
;

1931 } 
m
 = 
ms
;

1932 } 
m
=
mp
;

1934 
	`DBG
(<<"áµídÑe¯tÿrid " << 
rid


1935 << " wôhÜock modê(‹Ö¨íàlock mode)" << 
m


1936 << " f‹Åid " << 
	`x˘
()->
	`tid
());

1942 
	`DBGTHRD
(<<"append_mrbt_rec");

1943 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

1944 
	`W_DO
–
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
) );

1949 
	`w_as£π3
(
∑ge
.
	`is_fixed
());

1950 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

1952 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
));

1954 
‹ig_size
 = 
ªc
->
	`body_size
();

1957 i‡–(
ªc‹d_t
::
max_Àn
 - 
‹ig_size
Ë< 
d©a
.
	`size
() ) {

1958 #i‡
W_DEBUG_LEVEL
 > 2

1959 
˚º
 << "ˇn'àgrow bey⁄d 4GB=" << (
ªc‹d_t
::
max_Àn
)

1960 << " orig_sizê" << (
‹ig_size
)

1961 << "áµíd.size(Ë" << 
d©a
.
	`size
()

1962 << 
ídl
;

1964  
	`RC
(
eBADAPPEND
);

1968 
smsize_t
 
•a˚_√eded
;

1969 i‡–
ªc
->
	`is_smÆl
() &&

1970 
fûe_mrbt_p
::
	`choo£_ªc_im∂emíèti⁄
(
ªc
->
	`hdr_size
(),

1971 
‹ig_size
 + 
d©a
.
	`size
(), 
•a˚_√eded
Ë=
t_smÆl
) {

1973 i‡(
∑ge
.
	`ußbÀ_•a˚
(Ë< 
d©a
.
	`size
()Ë{  
	`RC
(
eRECWONTFIT
); }

1977 if–
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë< (
fûe_p
::
¶Ÿ_t
)) {

1978  
	`RC
(
eRECWONTFIT
);

1981 
	`W_DO
–
∑ge
.
	`≠≥nd_ªc
(
rid
.
¶Ÿ
, 
d©a
) );

1983 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

1984 } i‡(
ªc
->
	`is_smÆl
()) {

1989 *
tmp
 = 
√w
 [
∑ge_s
::
d©a_sz
];

1990 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
tmp
);

1992 
	`mem˝y
(
tmp
, 
ªc
->
	`body
(), 
‹ig_size
);

1993 
vec_t
 
	`body_vec
(
tmp
, 
‹ig_size
);

1995 
	`w_as£π3
(
sd
.
	`œrge_°id
().
°‹e
 > 0);

1998 
lg_èg_chunks_s
 
	`lg_chunks
(
sd
.
	`œrge_°id
().
°‹e
);

1999 
vec_t
 
	`lg_vec
(&
lg_chunks
, (lg_chunks));

2003 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0, (
¶Ÿ_Àngth_t
)
‹ig_size
, 
lg_vec
));

2004 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_œrge_0
));

2005 
	`W_DO
(
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 0));

2008 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ
 << " body_vec.size "

2009 << 
body_vec
.
	`size
());

2010 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
body_vec
));

2011 
	`DBG
–<< " sëÑe¯À¿ " << 
‹ig_size
);

2012 
	`W_DO
(
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
));

2013 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ
 << " data.size "

2014 << 
d©a
.
	`size
());

2015 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
d©a
));

2018 
	`w_as£π3
(
ªc
->
	`is_œrge
());

2019 
	`DBG
–<< "≠≥ndögÜ¨gêrid " << 
rid
.
¶Ÿ


2020 << "–‹ig sizê" << 
‹ig_size


2022 << 
d©a
.
	`size
()

2024 
	`W_DO
(
	`_≠≥nd_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
d©a
));

2026 
	`W_DO
–
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
+
d©a
.
	`size
()) );

2033 
	`DBG
(<<"append mrbtÑec");

2034 
hu
.
	`upd©e
();

2035  
RCOK
;

2036 
	}
}

2039 
rc_t


2040 
	gfûe_m
::
	$åunˇã_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
amou¡
, 
boﬁ
& 
should_f‹w¨d
)

2042 
	`FUNC
(
fûe_m
::
åunˇã_ªc
);

2043 
fûe_p
 
∑ge
;

2044 
ªc‹d_t
* 
ªc
;

2045 
should_f‹w¨d
 = 
Ál£
;

2047 
	`DBGTHRD
(<<"trucate_rec");

2048 
	`W_DO
 (
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
LATCH_EX
));

2053 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

2054 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

2056 
	`W_DO
(
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
));

2058 i‡(
amou¡
 > 
ªc
->
	`body_size
())

2059  
	`RC
(
eRECUPDATESIZE
);

2061 
uöt4_t
 
‹ig_size
 = 
ªc
->
	`body_size
();

2062 
uöt2_t
 
‹ig_Êags
 = 
ªc
->
èg
.
Êags
;

2064 i‡(
ªc
->
	`is_smÆl
()) {

2065 
	`W_DO
–
∑ge
.
	`åunˇã_ªc
(
rid
.
¶Ÿ
, 
amou¡
) );

2066 
ªc
 = 
NULL
;

2068 
	`W_DO
(
	`_åunˇã_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
amou¡
));

2069 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

2073 
smsize_t
 
Àn
 = 
‹ig_size
-
amou¡
;

2074 
smsize_t
 
•a˚_√eded
;

2075 
ªcÊags_t
 
ªc_im∂
;

2076 
ªc_im∂
 = 
fûe_p
::
	`choo£_ªc_im∂emíèti⁄
(
ªc
->
	`hdr_size
(), 
Àn
,

2077 
•a˚_√eded
);

2078 i‡(
ªc_im∂
 =
t_smÆl
) {

2079 
	`DBG
( << "rec wasÜarge,Çow is small");

2081 
vec_t
 
d©a
;

2082 
uöt4_t
 
size_⁄_fûe_∑ge
;

2083 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2084 
size_⁄_fûe_∑ge
 = (
lg_èg_chunks_s
);

2086 
size_⁄_fûe_∑ge
 = (
lg_èg_ödúe˘_s
);

2089 i‡(
Àn
 == 0) {

2090 
	`DBG
( << "rec isÇow is zero bytesÜong");

2091 
	`w_as£π3
(
d©a
.
	`size
() == 0);

2092 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0, (
¶Ÿ_Àngth_t
)
size_⁄_fûe_∑ge
, 
d©a
));

2094 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_smÆl
));

2098 
lgd©a_p
 
lgd©a
;

2099 
	`W_DO
–
lgd©a
.
	`fix
(
ªc
->
	`œ°_pid
(
∑ge
), 
LATCH_SH
) );

2100 
	`w_as£π3
(
lgd©a
.
	`tu∂e_size
(0Ë=
Àn
);

2101 
d©a
.
	`put
(
lgd©a
.
	`tu∂e_addr
(0), 
Àn
);

2111 *
lgtmp
 = 
√w
 [(
lg_èg_chunks_s
)+

2112 (
lg_èg_ödúe˘_s
)];

2113 i‡(!
lgtmp
)

2114 
	`W_FATAL
(
fcOUTOFMEMORY
);

2115 
w_auto_dñëe_¨øy_t
<> 
	`autodñ_lgtmp
(
lgtmp
);

2117 
lg_èg_chunks_s
* 
lg_chunks
 = 
NULL
;

2118 
lg_èg_ödúe˘_s
* 
lg_ödúe˘
 = 
NULL
;

2119 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2120 
	`mem˝y
(
lgtmp
, 
ªc
->
	`body
(), (
lg_èg_chunks_s
));

2121 
lg_chunks
 = (
lg_èg_chunks_s
*Ë
lgtmp
;

2123 
	`mem˝y
(
lgtmp
, 
ªc
->
	`body
(), (
lg_èg_ödúe˘_s
));

2124 
lg_ödúe˘
 = (
lg_èg_ödúe˘_s
*Ë
lgtmp
;

2128 
rc_t
 
rc
 = 
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0,

2129 (
¶Ÿ_Àngth_t
)
size_⁄_fûe_∑ge
, 
d©a
);

2130 i‡(
rc
.
	`is_îr‹
()) {

2131 i‡(
rc
.
	`îr_num
(Ë=
eRECWONTFIT
) {

2133 
should_f‹w¨d
 = 
åue
;

2134 
	`DBG
( << "record should be forwardedáfterÅrunc");

2136  
	`RC_AUGMENT
(
rc
);

2139 
ªc
 = 0;

2142 
	`DBG
( << "removingÜgrecÖortion ofÅruncatedÑec");

2143 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2145 
	`w_as£π3
(
lg_ödúe˘
 =
NULL
);

2146 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *
lg_chunks
);

2147 
	`W_DO
(
lg_hdl
.
	`åunˇã
(1));

2150 
	`w_as£π3
(
lg_chunks
 =
NULL
);

2151 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *
lg_ödúe˘
, 1 );

2152 
	`W_DO
(
lg_hdl
.
	`åunˇã
(1));

2155 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_smÆl
));

2165 
	`DBG
(<<"truncateÑec");

2166 
hu
.
	`upd©e
();

2170 
	`W_DO
(
∑ge
.
	`upd©e_buckë_öfo
());

2172 
	`W_DO
–
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
-
amou¡
) );

2174  
RCOK
;

2175 
	}
}

2178 
rc_t


2179 
	gfûe_m
::
	$åunˇã_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
amou¡
, 
boﬁ
& 
should_f‹w¨d
, c⁄° boﬁ 
bIgn‹eL©ches
)

2181 
	`FUNC
(
fûe_m
::
åunˇã_mrbt_ªc
);

2182 
fûe_mrbt_p
 
∑ge
;

2183 
ªc‹d_t
* 
ªc
;

2184 
should_f‹w¨d
 = 
Ál£
;

2186 
	`DBGTHRD
(<<"trucate_mrbt_rec");

2187 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2188 
	`W_DO
 (
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
));

2193 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

2194 
hi°oid_upd©e_t
 
	`hu
(
∑ge
);

2196 
	`W_DO
(
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
));

2198 i‡(
amou¡
 > 
ªc
->
	`body_size
())

2199  
	`RC
(
eRECUPDATESIZE
);

2201 
uöt4_t
 
‹ig_size
 = 
ªc
->
	`body_size
();

2202 
uöt2_t
 
‹ig_Êags
 = 
ªc
->
èg
.
Êags
;

2204 i‡(
ªc
->
	`is_smÆl
()) {

2205 
	`W_DO
–
∑ge
.
	`åunˇã_ªc
(
rid
.
¶Ÿ
, 
amou¡
) );

2206 
ªc
 = 
NULL
;

2208 
	`W_DO
(
	`_åunˇã_œrge
(
∑ge
, 
rid
.
¶Ÿ
, 
amou¡
));

2209 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

2213 
smsize_t
 
Àn
 = 
‹ig_size
-
amou¡
;

2214 
smsize_t
 
•a˚_√eded
;

2215 
ªcÊags_t
 
ªc_im∂
;

2216 
ªc_im∂
 = 
fûe_mrbt_p
::
	`choo£_ªc_im∂emíèti⁄
(
ªc
->
	`hdr_size
(), 
Àn
,

2217 
•a˚_√eded
);

2218 i‡(
ªc_im∂
 =
t_smÆl
) {

2219 
	`DBG
( << "rec wasÜarge,Çow is small");

2221 
vec_t
 
d©a
;

2222 
uöt4_t
 
size_⁄_fûe_∑ge
;

2223 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2224 
size_⁄_fûe_∑ge
 = (
lg_èg_chunks_s
);

2226 
size_⁄_fûe_∑ge
 = (
lg_èg_ödúe˘_s
);

2229 i‡(
Àn
 == 0) {

2230 
	`DBG
( << "rec isÇow is zero bytesÜong");

2231 
	`w_as£π3
(
d©a
.
	`size
() == 0);

2232 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0, (
¶Ÿ_Àngth_t
)
size_⁄_fûe_∑ge
, 
d©a
));

2234 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_smÆl
));

2238 
lgd©a_p
 
lgd©a
;

2239 
	`W_DO
–
lgd©a
.
	`fix
(
ªc
->
	`œ°_pid
(
∑ge
), 
LATCH_SH
) );

2240 
	`w_as£π3
(
lgd©a
.
	`tu∂e_size
(0Ë=
Àn
);

2241 
d©a
.
	`put
(
lgd©a
.
	`tu∂e_addr
(0), 
Àn
);

2251 *
lgtmp
 = 
√w
 [(
lg_èg_chunks_s
)+

2252 (
lg_èg_ödúe˘_s
)];

2253 i‡(!
lgtmp
)

2254 
	`W_FATAL
(
fcOUTOFMEMORY
);

2255 
w_auto_dñëe_¨øy_t
<> 
	`autodñ_lgtmp
(
lgtmp
);

2257 
lg_èg_chunks_s
* 
lg_chunks
 = 
NULL
;

2258 
lg_èg_ödúe˘_s
* 
lg_ödúe˘
 = 
NULL
;

2259 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2260 
	`mem˝y
(
lgtmp
, 
ªc
->
	`body
(), (
lg_èg_chunks_s
));

2261 
lg_chunks
 = (
lg_èg_chunks_s
*Ë
lgtmp
;

2263 
	`mem˝y
(
lgtmp
, 
ªc
->
	`body
(), (
lg_èg_ödúe˘_s
));

2264 
lg_ödúe˘
 = (
lg_èg_ödúe˘_s
*Ë
lgtmp
;

2268 
rc_t
 
rc
 = 
∑ge
.
	`•li˚_d©a
(
rid
.
¶Ÿ
, 0,

2269 (
¶Ÿ_Àngth_t
)
size_⁄_fûe_∑ge
, 
d©a
);

2270 i‡(
rc
.
	`is_îr‹
()) {

2271 i‡(
rc
.
	`îr_num
(Ë=
eRECWONTFIT
) {

2273 
should_f‹w¨d
 = 
åue
;

2274 
	`DBG
( << "record should be forwardedáfterÅrunc");

2276  
	`RC_AUGMENT
(
rc
);

2279 
ªc
 = 0;

2282 
	`DBG
( << "removingÜgrecÖortion ofÅruncatedÑec");

2283 i‡(
‹ig_Êags
 & 
t_œrge_0
) {

2285 
	`w_as£π3
(
lg_ödúe˘
 =
NULL
);

2286 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *
lg_chunks
);

2287 
	`W_DO
(
lg_hdl
.
	`åunˇã
(1));

2290 
	`w_as£π3
(
lg_chunks
 =
NULL
);

2291 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *
lg_ödúe˘
, 1 );

2292 
	`W_DO
(
lg_hdl
.
	`åunˇã
(1));

2295 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
t_smÆl
));

2305 
	`DBG
(<<"truncate mrbtÑec");

2306 
hu
.
	`upd©e
();

2310 
	`W_DO
(
∑ge
.
	`upd©e_buckë_öfo
());

2312 
	`W_DO
–
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
‹ig_size
-
amou¡
) );

2314  
RCOK
;

2315 
	}
}

2318 
rc_t


2319 
	gfûe_m
::
	$ªad_hdr
(c⁄° 
rid_t
& 
s_rid
, & 
Àn
,

2320 * 
buf
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

2322 
rid_t
 
	`rid
(
s_rid
);

2323 
fûe_p
 
∑ge
;

2325 
	`DBGTHRD
(<<"read_hdr");

2326 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2327 
	`W_DO
(
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
) );

2328 
ªc‹d_t
* 
ªc
;

2329 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

2331 
	`w_as£π1
(
ªc
->
	`is_smÆl
());

2332 i‡(
ªc
->
	`is_smÆl
()) {

2333 i‡(
Àn
 < 
ªc
->
èg
.
hdr_Àn
) {

2334  
	`RC
(
eBADLENGTH
);

2336 i‡(
Àn
 > 
ªc
->
èg
.
hdr_Àn
)

2337 
Àn
 = 
ªc
->
èg
.
hdr_Àn
;

2338 
	`mem˝y
(
buf
, 
ªc
->
	`hdr
(), 
Àn
);

2341  
RCOK
;

2342 
	}
}

2344 
rc_t


2345 
	gfûe_m
::
	$ªad_ªc
(c⁄° 
rid_t
& 
s_rid
,

2346 
°¨t
, 
uöt4_t
& 
Àn
, * 
buf
,

2347 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

2349 
rid_t
 
	`rid
(
s_rid
);

2350 
fûe_p
 
∑ge
;

2352 
	`DBGTHRD
(<<"read_rec");

2353 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

2354 
	`W_DO
–
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
) );

2355 
ªc‹d_t
* 
ªc
;

2356 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

2358 
	`w_as£π1
(
ªc
->
	`is_smÆl
());

2359 i‡(
ªc
->
	`is_smÆl
()) {

2360 i‡(
°¨t
 + 
Àn
 > 
ªc
->
	`body_size
())

2361 
Àn
 = 
ªc
->
	`body_size
(Ë- 
°¨t
;

2362 
	`mem˝y
(
buf
, 
ªc
->
	`body
(Ë+ 
°¨t
, (
uöt
)
Àn
);

2365  
RCOK
;

2366 
	}
}

2368 
rc_t


2369 
	gfûe_m
::
	$•li˚_hdr
(
rid_t
 
rid
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
,

2370 c⁄° 
vec_t
& 
hdr_d©a
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

2372 
fûe_p
 
∑ge
;

2373 
	`DBGTHRD
(<<"splice_hdr");

2374 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2375 
	`W_DO
–
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
œtch
) );

2377 
ªc‹d_t
* 
ªc
;

2378 
	`W_DO
–
∑ge
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ªc
) );

2382 
	`w_as£π3
(
Àn
 =
hdr_d©a
.
	`size
());

2383 
	`W_DO
–
∑ge
.
	`•li˚_hdr
(
rid
.
¶Ÿ
, 
°¨t
, 
Àn
, 
hdr_d©a
));

2384  
RCOK
;

2385 
	}
}

2387 
rc_t


2388 
	gfûe_m
::
	$fú°_∑ge
(c⁄° 
°id_t
& 
fid
, 
Õid_t
& 
pid
, 
boﬁ
* 
Æloˇãd
)

2390 
rc_t
 
rc
 = 
io
->
	`fú°_∑ge
(
fid
, 
pid
, 
Æloˇãd
);

2391 i‡(
rc
.
	`is_îr‹
()) {

2392 
	`w_as£π3
(
rc
.
	`îr_num
(Ë!
eEOF
);

2393 if(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

2396 
	`DBG
(<<"");

2397 
	`W_DO
(
lm
->
	`lock
(
pid
, 
IX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

2399 
	`DBG
(<<"rc="<< 
rc
);

2400  
	`RC_AUGMENT
(
rc
);

2403 
	`DBGTHRD
(<<"fú°_∑gêi†" <<
pid
);

2404  
RCOK
;

2405 
	}
}

2407 
rc_t


2408 
	gfûe_m
::
	$œ°_∑ge
(c⁄° 
°id_t
& 
fid
, 
Õid_t
& 
pid
, 
boﬁ
* 
Æloˇãd
)

2410 
	`FUNC
(
fûe_m
::
œ°_∑ge
);

2411 
rc_t
 
rc
;

2413 
rc
 = 
io
->
	`œ°_∑ge
(
fid
, 
pid
, 
Æloˇãd
, 
IX
);

2414 i‡(
rc
.
	`is_îr‹
()) {

2415 
	`w_as£π3
(
rc
.
	`îr_num
(Ë!
eEOF
);

2416 if(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

2419 
	`DBG
(<<"");

2420 
	`W_DO
(
lm
->
	`lock
(
pid
, 
IX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

2422 
	`DBG
(<<"rc="<< 
rc
);

2423  
	`RC_AUGMENT
(
rc
);

2426 } 
rc
.
	`is_îr‹
());

2427 
	`DBG
(<<"œ°Öagêi† "<< 
pid
);

2428  
RCOK
;

2429 
	}
}

2435 
rc_t


2436 
	gfûe_m
::
	$√xt_∑ge_wôh_•a˚
(
Õid_t
& 
pid
, 
boﬁ
& 
eof
, 
•a˚_buckë_t
 
b
)

2438 
eof
 = 
Ál£
;

2440 
	`DBGTHRD
(<<"findÇext_page_with_space ");

2442 
rc_t
 
rc
 = 
io
->
	`√xt_∑ge_wôh_•a˚
(
pid
, 
b
);

2443 
	`DBGTHRD
(<<"√xt_∑ge_wôh_•a˚Ñëu∫†" << 
rc
);

2444 i‡(
rc
.
	`is_îr‹
()) {

2445 i‡(
rc
.
	`îr_num
(Ë=
eEOF
) {

2446 
eof
 = 
åue
;

2448  
	`RC_AUGMENT
(
rc
);

2451 #i‡
W_DEBUG_LEVEL
 > 2

2452 if(
pid
.
∑ge
) {

2453 
fûe_p
 
∑ge
;

2454 
	`w_as£π3
(!
∑ge
.
	`is_fixed
());

2455 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
LATCH_SH
, 0 ));

2456 
	`DBG
(

2457 <<"Öage=" << 
∑ge
.
	`pid
().page

2458 <<"Öage.ußbÀ_•a˚=" << 
∑ge
.
	`ußbÀ_•a˚
()

2460 << 
∑ge
.
	`ußbÀ_•a˚_f‹_¶Ÿs
()

2461 <<"Öage.buckë=" << (
∑ge
.
	`buckë
())

2462 <<"Çìd buckë" << (
b
)

2464 if–
∑ge
.
	`buckë
(Ë< 
b
) {

2465 
	`w_as£π3
(0);

2469 
	`DBG
(<<"√xà∑gêwôh buckë >" << (
b
Ë<< " i†" << 
pid
);

2470  
RCOK
;

2471 
	}
}

2472 
rc_t


2473 
	gfûe_m
::
	$√xt_∑ge
(
Õid_t
& 
pid
, 
boﬁ
& 
eof
, boﬁ* 
Æloˇãd
)

2475 
eof
 = 
Ál£
;

2476 
rc_t
 
rc
 = 
io
->
	`√xt_∑ge
(
pid
, 
Æloˇãd
);

2477 i‡(
rc
.
	`is_îr‹
()) {

2478 i‡(
rc
.
	`îr_num
(Ë=
eEOF
) {

2479 
eof
 = 
åue
;

2481  
	`RC_AUGMENT
(
rc
);

2484  
RCOK
;

2485 
	}
}

2487 
rc_t


2488 
	gfûe_m
::
	$_loˇã_∑ge
(c⁄° 
rid_t
& 
rid
, 
fûe_p
& 
∑ge
, 
œtch_mode_t
 
mode
)

2490 
	`DBGTHRD
(<<"fûe_m::_loˇã_∑gêrid=" << 
rid
);

2495 
	`W_DO
(
∑ge
.
	`fix
(
rid
.
pid
, 
mode
));

2497 
	`w_as£π2
(
∑ge
.
	`pid
().∑gê=
rid
.
pid
.page);

2500 i‡(
∑ge
.
	`pid
(Ë!
rid
.
pid
) {

2501 
∑ge
.
	`unfix
();

2502  
	`RC
(
eBADPID
);

2505 i‡(
rid
.
¶Ÿ
 < 0 ||Ñid.¶Ÿ >
∑ge
.
	`num_¶Ÿs
()) {

2506  
	`RC
(
eBADSLOTNUMBER
);

2509  
RCOK
;

2510 
	}
}

2525 
rc_t


2526 
	gfûe_m
::
	$_‰ì_∑ge
(
fûe_p
& 
∑ge
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

2528 
	`w_as£π2
(
∑ge
.
	`is_fixed
());

2529 
Õid_t
 
pid
 = 
∑ge
.
	`pid
();

2531 
	`DBGTHRD
(<<"‰ì_∑gê" << 
pid
 << ";Ñe¯cou¡=" << 
∑ge
.
	`ªc_cou¡
());

2532 i‡(
∑ge
.
	`ªc_cou¡
() == 0) {

2534 
Õid_t
 
fú°_pid
;

2535 
	`W_DO
(
	`fú°_∑ge
(
pid
.
	`°id
(), 
fú°_pid
, 
NULL
));

2537 i‡(
pid
 !
fú°_pid
) {

2538 
	`DBGTHRD
(<<"free_page:Çot firstÖage -- goáhead");

2540 
hi°oid_ªmove_t
 
	`hr
(
∑ge
);

2542 
rc_t
 
rc
 = 
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
pid
, 
Ál£
 );

2555 i‡(0 && 
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

2556 
∑ge
.
	`unfix
();

2557 
rc
 = 
lm
->
	`lock_f‹˚
(
pid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
);

2558 if(!
rc
.
	`is_îr‹
()) {

2559 
œtch_mode_t
 
œtch
 = 
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

2561 
	`W_DO
(
∑ge
.
	`c⁄dôi⁄Æ_fix
(
pid
, 
œtch
));

2567 i‡(
∑ge
.
	`ªc_cou¡
() == 0) {

2568 
rc
 = 
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
pid
,

2569 
åue
 );

2572 if(
rc
.
	`is_îr‹
()) {

2573 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) {

2577  
RCOK
;

2579 
	`w_as£π1
(
rc
.
	`îr_num
(Ë!
eLOCKTIMEOUT
);

2587 if(
rc
.
	`îr_num
(Ë!
eDEADLOCK
 &&Ñc.îr_num(Ë!
eLOCKTIMEOUT
)

2588  
rc
.
	`ª£t
();

2596  
RCOK
;

2597 
	}
}

2622 
rc_t


2623 
	gfûe_m
::
	$_undo_Æloc_fûe_∑ge
(
fûe_p
& 
∑ge
)

2625 
	`FUNC
(
fûe_m
::
_undo_Æloc_fûe_∑ge
);

2637 if(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_fûe_p
 ||Öage.èg(Ë=∑ge_p::
t_fûe_mrbt_p
) {

2638  
	`_‰ì_∑ge
(
∑ge
);

2640  
RCOK
;

2641 
	}
}

2653 ˛as†
	cÆloc_fûe_∑ge_fûãr_t
 : 
public
 
Æloc_∑ge_fûãr_t
 {

2654 
¥iv©e
:

2655 
°‹e_Êag_t
 
_Êags
;

2656 
Õid_t
 
	m_pid
;

2657 
boﬁ
 
	m_was_fixed
;

2658 
boﬁ
 
	m_is_fixed
;

2659 
	mfûe_p
& 
	m_∑ge
;

2660 
_ª£t
();

2661 
	mpublic
:

2662 
NORET
 
Æloc_fûe_∑ge_fûãr_t
(
°‹e_Êag_t
 
Êg
, 
fûe_p
 &
pg
);

2663 
	mNORET
 ~
Æloc_fûe_∑ge_fûãr_t
();

2664 
boﬁ
 
ac˚±
(c⁄° 
Õid_t
&);

2665 
ªje˘
();

2666 
	$check
() const;

2667 
boﬁ
 
	$ac˚±ed
() const;

2670 
NORET
 
Æloc_fûe_∑ge_fûãr_t
::
	$Æloc_fûe_∑ge_fûãr_t
(

2671 
°‹e_Êag_t
 
Êg
, 
fûe_p
 &
pg
)

2672 : 
	`Æloc_∑ge_fûãr_t
(), 
	`_Êags
(
Êg
), 
	$_∑ge
(
pg
Ë{ 
	`_ª£t
(); 
	}
}

2674 
NORET
 
	gÆloc_fûe_∑ge_fûãr_t
::~
	$Æloc_fûe_∑ge_fûãr_t
(Ë{
	}
}

2676 
Æloc_fûe_∑ge_fûãr_t
::
	$_ª£t
()

2678 
_pid
 = 
Õid_t
::
nuŒ
;

2679 
_was_fixed
 = 
Ál£
;

2680 
_is_fixed
 = 
Ál£
;

2681 
	}
}

2682 
boﬁ
 
	gÆloc_fûe_∑ge_fûãr_t
::
	$ac˚±
(c⁄° 
Õid_t
& 
pid
)

2684 
_pid
 = 
pid
;

2685 
_was_fixed
 = 
_∑ge
.
	`is_œtched_by_me
();

2687 #i‡
W_DEBUG_LEVEL
 > 4

2689 
w_o°r°ªam
 
o
;

2690 
l¢_t
 
l
 = 
	`l¢_t
(0, 1);

2691 
x˘_t
 *
xd
 = 
	`x˘
();

2696 if(
xd
) {

2697 
l
 = 
xd
->
	`œ°_l¢
();

2698 
o
 << "tid " << 
xd
->
	`tid
(Ë<< "Üa°_l¢ " << 
l
;

2700 
	`Ârötf
(
°dîr
, "ac˚± ? %d %s\n", 
_pid
.
∑ge
, 
o
.
	`c_°r
());

2709 
w_rc_t
 
rc
 = 
_∑ge
.
∑ge_p
::
	`_fix
(
åue
, 
_pid
, _∑ge.
t_fûe_p
,

2710 
LATCH_EX
,

2711 
_∑ge
.
t_vúgö
,

2712 
_Êags
,

2713 
Ál£
 ,

2716 if(
rc
.
	`is_îr‹
()) {

2718 
	`_ª£t
();

2719 
	`check
();

2720 
	`INC_TSTAT
(
fm_Æloc_∑ge_ªje˘
);

2721  
Ál£
;

2724 
_is_fixed
 = 
åue
;

2725 
	`check
();

2726  
åue
;

2727 
	}
}

2729 
boﬁ
 
	gÆloc_fûe_∑ge_fûãr_t
::
	$ac˚±ed
(Ëc⁄° {  
_is_fixed
; 
	}
}

2730 
	gÆloc_fûe_∑ge_fûãr_t
::
	$check
() const

2732 if(
	`ac˚±ed
()) {

2736 
	`w_as£π1
(
_∑ge
.
	`is_fixed
());

2737 
	`w_as£π1
(
_∑ge
.
	`is_œtched_by_me
());

2738 
	`w_as£π1
(
_∑ge
.
	`is_möe
());

2739 
	`w_as£π1
(
_∑ge
.
	`my_œtch
()->
	`mode
(Ë=
LATCH_EX
);

2741 
	}
}

2742 
	gÆloc_fûe_∑ge_fûãr_t
::
	$ªje˘
()

2744 
	`check
();

2745 if(
	`ac˚±ed
(Ë&& !
_was_fixed
) {

2746 
_∑ge
.
	`unfix
();

2748 
	`_ª£t
();

2749 
	}
}

2751 
rc_t


2752 
	gfûe_m
::
	$_Æloc_∑ge
(

2753 
°id_t
 
fid
,

2754 c⁄° 
Õid_t
& 
√¨_p
,

2755 
Õid_t
& 
ÆlocPid
,

2756 
fûe_p
 &
∑ge
,

2757 
boﬁ
 
£¨ch_fûe


2790 
°‹e_Êag_t
 
°‹e_Êags
;

2793 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
fid
, 
°‹e_Êags
));

2794 i‡(
°‹e_Êags
 & 
°_ö£π_fûe
) {

2795 
°‹e_Êags
 = (
°‹e_Êag_t
Ë(°‹e_Êags|
°_tmp
);

2804 
Æloc_fûe_∑ge_fûãr_t
 
	`ok
(
°‹e_Êags
, 
∑ge
);

2805 
	`W_DO
(
io
->
	`Æloc_a_fûe_∑ge
(&
ok
, 
fid
, 
√¨_p
, 
ÆlocPid
, 
IX
,
£¨ch_fûe
));

2806 
	`w_as£π1
(
∑ge
.
	`is_möe
());

2808 
	`W_DO
(
∑ge
.
	`f‹m©
(
ÆlocPid
,Öage.
t_fûe_p
,Öage.
t_vúgö
, 
°‹e_Êags
));

2822 
	`w_as£π2
(
∑ge
.
	`l¢
().
	`vÆid
());

2823 
	`w_as£π2
(
∑ge
.
	`is_möe
());

2825 
	`INC_TSTAT
(
∑ge_fûe_Æloc
);

2827  
RCOK
;

2828 
	}
}

2832 
rc_t


2833 
	gfûe_m
::
	$_Æloc_mrbt_∑ge
(

2834 
°id_t
 
fid
,

2835 c⁄° 
Õid_t
& 
√¨_p
,

2836 
Õid_t
& 
ÆlocPid
,

2837 
fûe_mrbt_p
 &
∑ge
,

2838 
boﬁ
 
£¨ch_fûe


2842 
°‹e_Êag_t
 
°‹e_Êags
;

2845 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
fid
, 
°‹e_Êags
));

2846 i‡(
°‹e_Êags
 & 
°_ö£π_fûe
) {

2847 
°‹e_Êags
 = (
°‹e_Êag_t
Ë(°‹e_Êags|
°_tmp
);

2856 
Æloc_fûe_∑ge_fûãr_t
 
	`ok
(
°‹e_Êags
, 
∑ge
);

2857 
	`W_DO
(
io
->
	`Æloc_a_fûe_∑ge
(&
ok
, 
fid
, 
√¨_p
, 
ÆlocPid
, 
IX
,
£¨ch_fûe
));

2858 
	`w_as£π1
(
∑ge
.
	`is_möe
());

2860 
	`W_DO
(
∑ge
.
	`f‹m©
(
ÆlocPid
,Öage.
t_fûe_mrbt_p
,Öage.
t_vúgö
, 
°‹e_Êags
));

2874 
	`w_as£π2
(
∑ge
.
	`l¢
().
	`vÆid
());

2875 
	`w_as£π2
(
∑ge
.
	`is_möe
());

2877 
	`INC_TSTAT
(
∑ge_fûe_mrbt_Æloc
);

2879  
RCOK
;

2880 
	}
}

2883 
rc_t


2884 
	gfûe_m
::
	$_≠≥nd_œrge
(
fûe_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
, c⁄° 
vec_t
& 
d©a
)

2886 
	`FUNC
(
fûe_m
::
_≠≥nd_œrge
);

2887 
smsize_t
 
À·_to_≠≥nd
 = 
d©a
.
	`size
();

2889 
	`DBG
(<<" d©®Àngth " << 
À·_to_≠≥nd
);

2890 
ªc‹d_t
* 
ªc
;

2892 
	`W_DO
–
∑ge
.
	`gë_ªc
(
¶Ÿ
, 
ªc
) );

2894 
uöt4_t
 
ªc_∑ge_cou¡
 = 
ªc
->
	`∑ge_cou¡
();

2896 
smsize_t
 
•a˚_œ°_∑ge
 = 
	`_•a˚_œ°_∑ge
(
ªc
->
	`body_size
());

2899 i‡(
•a˚_œ°_∑ge
 > 0) {

2900 
lgd©a_p
 
œ°_∑ge
;

2901 
	`W_DO
–
œ°_∑ge
.
	`fix
(
ªc
->
	`œ°_pid
(
∑ge
), 
LATCH_EX
) );

2902 
	`w_as£π1
(
œ°_∑ge
.
	`is_fixed
());

2904 
uöt4_t
 
≠≥nd_amou¡
 = 
	`MIN
(
•a˚_œ°_∑ge
, 
À·_to_≠≥nd
);

2905 
	`W_DO
–
œ°_∑ge
.
	`≠≥nd
(
d©a
, 0, 
≠≥nd_amou¡
) );

2906 
À·_to_≠≥nd
 -
≠≥nd_amou¡
;

2910 c⁄° 
smsize_t
 
max_∑ges
 = 64;

2911 
smsize_t
 
num_∑ges
 = 0;

2912 
uöt
 
∑ges_so_Ár
 = 0;

2913 
boﬁ
 
∑ges_Ælo˚d_Æªady
 = 
Ál£
;

2914 
Õid_t
 *
√w_∑ges
 = 
√w
Üpid_t[
max_∑ges
];

2916 i‡(!
√w_∑ges
)

2917 
	`W_FATAL
(
fcOUTOFMEMORY
);

2918 
w_auto_dñëe_¨øy_t
<
Õid_t
> 
	`ad_√w_∑ges
(
√w_∑ges
);

2920 
À·_to_≠≥nd
 > 0) {

2921 
	`DBG
(<<"À·_to_≠≥nd: " << 
À·_to_≠≥nd
);

2922 
∑ges_Ælo˚d_Æªady
 = 
Ál£
;

2923 
num_∑ges
 = (Ë
	`MIN
(
max_∑ges
,

2924 ((
À·_to_≠≥nd
-1Ë/ 
lgd©a_p
::
d©a_sz
)+1);

2925 
	`DBG
(<<"num_∑ges: " << 
num_∑ges


2926 <<" max_∑ges: " << 
max_∑ges


2927 <<"Ügd©a_p::d©a_sz: " << (
lgd©a_p
::
d©a_sz
));

2928 
smsize_t
 
≠≥nd_˙t
 = 
	`MIN
((smsize_t)(
num_∑ges
*
lgd©a_p
::
d©a_sz
),

2929 
À·_to_≠≥nd
);

2930 
	`DBG
(<<"≠≥nd_˙t: " << 
≠≥nd_˙t
);

2933 i‡(
ªc
->
èg
.
Êags
 & 
t_œrge_0
) {

2935 c⁄° 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
ªc
->
	`body
());

2937 
	`DBGTHRD
(<<"áŒoˇtög " << 
num_∑ges
 << "ÇewÖages" );

2938 
	`W_DO
–
io
->
	`Æloc_∑ge_group
(
lg_hdl
.
	`°id
(),

2939 
lg_hdl
.
	`œ°_pid
(),

2940 
num_∑ges
,

2941 
√w_∑ges
,

2942 
IX


2945 #i‡
W_DEBUG_LEVEL
 > 2

2946 
	`DBGTHRD
(<< "Reque°ed " << 
num_∑ges
 );

2947 
shpid_t
 
j
=0; j<
num_∑ges
; j++) {

2948 
	`DBGTHRD
(<< 
√w_∑ges
[
j
] );

2952 
∑ges_Ælo˚d_Æªady
 = 
åue
;

2953 
lg_èg_chunks_s
 
	`√w_lg_chunks
(
lg_hdl
.
	`chunk_ªf
());

2954 
lg_èg_chunks_h
 
	`√w_lg_hdl
(
∑ge
, 
√w_lg_chunks
);

2956 
rc_t
 
rc
 = 
√w_lg_hdl
.
	`≠≥nd
(
num_∑ges
, 
√w_∑ges
);

2957 i‡(
rc
.
	`is_îr‹
()) {

2958 i‡(
rc
.
	`îr_num
(Ë!
eBADAPPEND
) {

2959  
	`RC_AUGMENT
(
rc
);

2965 
	`DBG
(<<"converting");

2966 
	`W_DO
–
	`_c⁄vît_to_œrge_ödúe˘
(

2967 
∑ge
, 
¶Ÿ
, 
lg_hdl
.
	`∑ge_cou¡
()));

2970 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
¶Ÿ
, 
ªc
) );

2971 
	`w_as£π2
(
ªc
->
èg
.
Êags
 & (
t_œrge_1
|
t_œrge_2
));

2974 
	`DBGTHRD
(<<"√w_lg_hdl" << 
√w_lg_hdl
);

2975 
	`w_as£π3
(
√w_lg_hdl
.
	`∑ge_cou¡
(Ë=
lg_hdl
.∑ge_cou¡(Ë+ 
num_∑ges
);

2977 
vec_t
 
	`lg_vec
(&
√w_lg_chunks
, (new_lg_chunks));

2978 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
¶Ÿ
, 0, 
lg_vec
.
	`size
(),Üg_vec));

2984 i‡(
ªc
->
èg
.
Êags
 & (
t_œrge_1
|
t_œrge_2
)) {

2985 c⁄° 
lg_èg_ödúe˘_h


2986 
	`lg_hdl
(
∑ge
, *(
lg_èg_ödúe˘_s
*)
ªc
->
	`body
(),

2987 
ªc
->
	`∑ge_cou¡
()+
∑ges_so_Ár
);

2989 i‡(!
∑ges_Ælo˚d_Æªady
) {

2990 
	`DBGTHRD
(<<"áŒoˇtög " << 
num_∑ges
 << "ÇewÖages" );

2991 
	`W_DO
(
io
->
	`Æloc_∑ge_group
(

2992 
lg_hdl
.
	`°id
(),

2993 
lg_hdl
.
	`œ°_pid
(),

2994 
num_∑ges
,

2995 
√w_∑ges
,

2996 
IX


2998 
∑ges_Ælo˚d_Æªady
 = 
åue
;

2999 #i‡
W_DEBUG_LEVEL
 > 2

3000 
	`DBGTHRD
(<< "Reque°ed " << 
num_∑ges
 );

3001 
shpid_t
 
j
=0; j<
num_∑ges
; j++) {

3002 
	`DBGTHRD
(<< 
√w_∑ges
[
j
] );

3007 
lg_èg_ödúe˘_s
 
	`√w_lg_ödúe˘
(
lg_hdl
.
	`ödúe˘_ªf
());

3008 
lg_èg_ödúe˘_h
 
	`√w_lg_hdl
(
∑ge
, 
√w_lg_ödúe˘
, 
ªc_∑ge_cou¡
+
∑ges_so_Ár
);

3009 
	`W_DO
(
√w_lg_hdl
.
	`≠≥nd
(
num_∑ges
, 
√w_∑ges
));

3010 i‡(
lg_hdl
.
	`ödúe˘_ªf
(Ë!
√w_lg_ödúe˘
) {

3013 
vec_t
 
	`lg_vec
(&
√w_lg_ödúe˘
, (new_lg_indirect));

3014 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
¶Ÿ
, 0, 
lg_vec
.
	`size
(),Üg_vec));

3017 
	`W_DO
(
	`_≠≥nd_to_œrge_∑ges
(
num_∑ges
, 
√w_∑ges
, 
d©a
,

3018 
À·_to_≠≥nd
) );

3019 
	`w_as£π3
(
À·_to_≠≥nd
 >
≠≥nd_˙t
);

3020 
À·_to_≠≥nd
 -
≠≥nd_˙t
;

3022 
∑ges_so_Ár
 +
num_∑ges
;

3024 
	`w_as£π3
(
d©a
.
	`size
(Ë<
•a˚_œ°_∑ge
 ||

3025 
∑ges_so_Ár
 =((
d©a
.
	`size
()-
•a˚_œ°_∑ge
-1) /

3026 
lgd©a_p
::
d©a_sz
 + 1));

3027  
RCOK
;

3028 
	}
}

3030 
rc_t


3031 
	gfûe_m
::
	$_≠≥nd_to_œrge_∑ges
(
num_∑ges
, c⁄° 
Õid_t
 
√w_∑ges
[],

3032 c⁄° 
vec_t
& 
d©a
, 
smsize_t
 
À·_to_≠≥nd
)

3034 
≠≥nd_˙t
;

3038 
°‹e_Êag_t
 
°‹e_Êags
;

3039 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
√w_∑ges
[0].
	`°id
(), 
°‹e_Êags
));

3040 
	`w_as£π3
(
°‹e_Êags
 !
°_bad
);

3042 i‡(
°‹e_Êags
 & 
°_ö£π_fûe
) {

3043 
°‹e_Êags
 = (
°‹e_Êag_t
Ë(°‹e_Êags|
°_tmp
);

3047 
i
 = 0; i<
num_∑ges
; i++) {

3049 
≠≥nd_˙t
 = 
	`MIN
((
smsize_t
)
lgd©a_p
::
d©a_sz
, 
À·_to_≠≥nd
);

3050 
	`w_as£π3
(
≠≥nd_˙t
 > 0);

3052 
lgd©a_p
 
lgd©a
;

3065 
	`W_DO
(
lgd©a
.
	`fix
(
√w_∑ges
[
i
], 
LATCH_EX
,Ügd©a.
t_vúgö
, 
°‹e_Êags
) );

3069 
	`W_DO
(
lgd©a
.
	`≠≥nd
(
d©a
, d©a.
	`size
(Ë- 
À·_to_≠≥nd
,

3070 
≠≥nd_˙t
));

3071 
lgd©a
.
	`unfix
();

3072 
À·_to_≠≥nd
 -
≠≥nd_˙t
;

3077  
RCOK
;

3078 
	}
}

3080 
rc_t


3081 
	gfûe_m
::
	$_c⁄vît_to_œrge_ödúe˘
(
fûe_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
,

3082 
uöt4_t
 
ªc_∑ge_cou¡
)

3086 
ªc‹d_t
* 
ªc
;

3087 
	`W_COERCE
(
∑ge
.
	`gë_ªc
(
¶Ÿ
, 
ªc
));

3090 c⁄° 
lg_èg_chunks_h
 
	`ﬁd_lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
ªc
->
	`body
()) ;

3091 
lg_èg_ödúe˘_s
 
	`lg_ödúe˘
(
ﬁd_lg_hdl
.
	`°id
().
°‹e
);

3092 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, 
lg_ödúe˘
, 
ªc_∑ge_cou¡
);

3093 
	`W_DO
(
lg_hdl
.
	`c⁄vît
(
ﬁd_lg_hdl
));

3096 
vec_t
 
	`lg_vec
(&
lg_ödúe˘
, (lg_indirect));

3097 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
¶Ÿ
, 0, (
lg_èg_chunks_s
), 
lg_vec
));

3100 
	`W_DO
(
∑ge
.
	`£t_ªc_Êags
(
¶Ÿ
, 
lg_hdl
.
	`ödúe˘_ty≥
(
ªc_∑ge_cou¡
)));

3102  
RCOK
;

3103 
	}
}

3105 
rc_t


3106 
	gfûe_m
::
	$_åunˇã_œrge
(
fûe_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
, 
uöt4_t
 
amou¡
)

3108 
ªc‹d_t
* 
ªc
;

3109 
	`W_COERCE
–
∑ge
.
	`gë_ªc
(
¶Ÿ
, 
ªc
) );

3111 
uöt4_t
 
byãs_œ°_∑ge
 = 
	`_byãs_œ°_∑ge
(
ªc
->
	`body_size
());

3112 
dóŒoc_cou¡
 = 0;

3113 
Õid_t
 
œ°_pid
;

3116 i‡(
amou¡
 >
byãs_œ°_∑ge
) {

3118 
dóŒoc_cou¡
 = 1 + ()(
amou¡
-
byãs_œ°_∑ge
)/
lgd©a_p
::
d©a_sz
;

3121 i‡(
ªc
->
èg
.
Êags
 & 
t_œrge_0
) {

3122 c⁄° 
lg_èg_chunks_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_chunks_s
*)
ªc
->
	`body
()) ;

3123 
lg_èg_chunks_s
 
	`√w_lg_chunks
(
lg_hdl
.
	`chunk_ªf
());

3124 
lg_èg_chunks_h
 
	`√w_lg_hdl
(
∑ge
, 
√w_lg_chunks
) ;

3126 
	`DBG
(<<" dóŒoc_cou¡ " << 
dóŒoc_cou¡
);

3127 i‡(
dóŒoc_cou¡
 > 0) {

3128 
	`W_DO
(
√w_lg_hdl
.
	`åunˇã
(
dóŒoc_cou¡
));

3129 
	`w_as£π3
(
√w_lg_hdl
.
	`∑ge_cou¡
(Ë=
lg_hdl
.∑ge_cou¡(Ë- 
dóŒoc_cou¡
);

3131 
vec_t
 
	`lg_vec
(&
√w_lg_chunks
, (new_lg_chunks));

3132 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
¶Ÿ
, 0, 
lg_vec
.
	`size
(),Üg_vec));

3134 
œ°_pid
 = 
lg_hdl
.
	`œ°_pid
();

3136 
	`w_as£π3
(
ªc
->
èg
.
Êags
 & (
t_œrge_1
|
t_œrge_2
));

3137 c⁄° 
lg_èg_ödúe˘_h
 
	`lg_hdl
(
∑ge
, *(
lg_èg_ödúe˘_s
*)
ªc
->
	`body
(),Ñec->
	`∑ge_cou¡
());

3138 
lg_èg_ödúe˘_s
 
	`√w_lg_ödúe˘
(
lg_hdl
.
	`ödúe˘_ªf
());

3139 
lg_èg_ödúe˘_h
 
	`√w_lg_hdl
(
∑ge
, 
√w_lg_ödúe˘
, 
ªc
->
	`∑ge_cou¡
());

3141 
	`DBG
(<<" dóŒoc_cou¡ " << 
dóŒoc_cou¡
);

3142 i‡(
dóŒoc_cou¡
 > 0) {

3143 
	`W_DO
(
√w_lg_hdl
.
	`åunˇã
(
dóŒoc_cou¡
));

3148 i‡(
lg_hdl
.
	`ödúe˘_ªf
(Ë!
√w_lg_ödúe˘
) {

3149 
vec_t
 
	`lg_vec
(&
√w_lg_ödúe˘
, (new_lg_indirect));

3150 
	`W_DO
(
∑ge
.
	`•li˚_d©a
(
¶Ÿ
, 0, 
lg_vec
.
	`size
(),Üg_vec));

3153 
œ°_pid
 = 
lg_hdl
.
	`œ°_pid
();

3156 i‡(
amou¡
 < 
ªc
->
	`body_size
()) {

3160 
lgd©a_p
 
lgd©a
;

3161 
	`W_DO
–
lgd©a
.
	`fix
(
œ°_pid
, 
LATCH_EX
) );

3163 
öt4_t
 
åunc_⁄_œ°_∑ge
 = 
amou¡
;

3164 i‡(
dóŒoc_cou¡
 > 0) {

3165 
åunc_⁄_œ°_∑ge
 -(
dóŒoc_cou¡
-1)*
lgd©a_p
::
d©a_sz
 + 
byãs_œ°_∑ge
;

3167 
	`w_as£π3
(
åunc_⁄_œ°_∑ge
 >= 0);

3168 
	`W_DO
(
lgd©a
.
	`åunˇã
(
åunc_⁄_œ°_∑ge
));

3170  
RCOK
;

3171 
	}
}

3174 
	$MAKEPAGECODE
(
fûe_mrbt_p
, 
fûe_p
)

3176 
rc_t
 
fûe_mrbt_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
, 
uöt4_t
 
Êags
,

3177 
°‹e_Êag_t
 
°‹e_Êags
)

3181 
	`w_as£π3
(
èg
 =
t_fûe_mrbt_p
);

3183 
fûe_p_hdr_t
 
˘æ
;

3194 
˘æ
.
˛u°î
 = 
DUMMY_CLUSTER_ID
;

3195 
vec_t
 
fûe_p_hdr_vec
;

3196 
fûe_p_hdr_vec
.
	`put
(&
˘æ
, (ctrl));

3199 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

3207 
this
->
	`£t_°‹e_Êags
(
°‹e_Êags
);

3210 
Õid_t
 
ow√r
;

3211 
fûe_p_hdr_vec
.
	`put
((*)(&
ow√r
), (
Õid_t
));

3212 
	`W_COERCE
(
∑ge_p
::
	`ª˛aim
(0, 
fûe_p_hdr_vec
, 
Ál£
 ));

3216 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 0, &
fûe_p_hdr_vec
);

3217 if(
rc
.
	`is_îr‹
()) {

3218 
	`disˇrd
();

3219  
rc
;

3222  
RCOK
;

3223 
	}
}

3233 
rc_t


3234 
	gfûe_mrbt_p
::
	$shi·
(
¶Ÿid_t
 
idx
, 
fûe_mrbt_p
* 
rsib
)

3236 
	`FUNC
(
fûe_mrbt_p
::
shi·
);

3239 
n
 = 
	`num_¶Ÿs
(Ë- 
idx
;

3241 
	`DBG
(<<"file_mrbt_p::SHIFT "

3242 << " fromÖagê" << 
	`pid
().
∑ge
 << " idx " << 
idx


3243 << " #ªc†" << 
n


3246 
°¨t_sim∂e_move
=0;

3247 
rc_t
 
rc
;

3253 c⁄° 
tmp_chunk_size
 = 20;

3254 
vec_t
 *
ç
 = 
√w
 vec_t[
tmp_chunk_size
];

3255 i‡(!
ç
)

3257  
	`RC
(
fcOUTOFMEMORY
);

3260 
w_auto_dñëe_¨øy_t
<
vec_t
> 
	`ad_ç
(
ç
);

3262 
i
 = 
°¨t_sim∂e_move
; i < 
n
 && (! 
rc
.
	`is_îr‹
()); ) {

3263 
j
;

3266 
j
 = 0; j < 
tmp_chunk_size
 && 
i
 < 
n
; j++, i++) {

3267 
ç
[
j
].
	`£t
(
∑ge_p
::
	`tu∂e_addr
(1 + 
idx
 + 
i
),

3268 
∑ge_p
::
	`tu∂e_size
(1 + 
idx
 + 
i
));

3273 
rc
 = 
rsib
->
	`ö£π_ex∑nd
(1 + 
i
 - 
j
, j, 
ç
);

3275 i‡(! 
rc
.
	`is_îr‹
()) {

3276 
	`DBG
(<<"Removög " << 
n
 << " slŸ†°¨tög wôh " << 1+
idx


3277 << " fromÖagê" << 
	`pid
().
∑ge
);

3278 
rc
 = 
	`ªmove_com¥ess
(1 + 
idx
, 
n
);

3280 
	`DBG
(<< "Öagê" << 
	`pid
().
∑ge
 << " ha†" << 
	`num_¶Ÿs
() << " slots");

3281 
	`DBG
(<< "Öagê" << 
rsib
->
	`pid
().
∑ge
 << " ha†" << 
	`num_¶Ÿs
() << " slots");

3283  
rc
.
	`ª£t
();

3285 
	}
}

3288 
rc_t


3289 
	gfûe_p
::
	$fûl_¶Ÿ
(

3290 
¶Ÿid_t
 
idx
,

3291 c⁄° 
ª˘ag_t
& 
èg
,

3292 c⁄° 
vec_t
& 
hdr
,

3293 c⁄° 
vec_t
& 
d©a
,

3296 
vec_t
 
vec
;

3297 
vec
.
	`put
(&
èg
, (tag));

3299 if(
	`W_EXPECT_NOT
(
hdr
.
	`is_zvec
())) {

3304 
vec
.
	`put
(
zîo_∑ge
, 
hdr
.
	`size
());

3306 
vec
.
	`put
(
hdr
);

3309 
hdr_size
 = 
hdr
.
	`size
();

3310 i‡(!
	`is_Æig√d
(
hdr_size
)) {

3311 
vec
.
	`put
(
zîo_∑ge
, (
	`Æign
(
hdr_size
)-hdr_size));

3313 
	`w_as£π3
(
	`is_Æig√d
(
vec
.
	`size
()));

3315 
rc_t
 
rc
;

3316 if(
	`W_EXPECT_NOT
(
d©a
.
	`is_zvec
())) {

3322 if(
d©a
.
	`size
() > 60) {

3323 
rc
 = 
∑ge_p
::
	`ª˛aim
(
idx
, 
vec
);

3325 #i‡
W_DEBUG_LEVEL
 >= 2

3326 if(
rc
.
	`is_îr‹
()) {

3327 
	`Ârötf
(
°dîr
,

3329 
__LINE__
,

3330 (Ë
hdr
.
	`size
(), (Ë
d©a
.size(), 
	`ußbÀ_•a˚
(),

3331 
	`ußbÀ_•a˚_f‹_¶Ÿs
(),

3332 
	`n‰ì
(), 
	`ƒsvd
()

3337 if(!
rc
.
	`is_îr‹
()) {

3338 
rc
 = 
∑ge_p
::
	`•li˚
(
idx
, 
vec
.
	`size
(), 0, 
d©a
);

3341  
rc
;

3345 
vec
.
	`put
(
zîo_∑ge
, 
d©a
.
	`size
());

3349 
vec
.
	`put
(
d©a
);

3351 
	`w_as£π2
(
	`is_fixed
(Ë&& 
	`œtch_mode
(Ë=
LATCH_EX
);

3352 
rc
 = 
∑ge_p
::
	`ª˛aim
(
idx
, 
vec
);

3354 #i‡
W_DEBUG_LEVEL
 >= 2

3355 if(
rc
.
	`is_îr‹
()) {

3356 
	`Ârötf
(
°dîr
,

3358 
__LINE__
,

3359 (Ë(
ª˘ag_t
), (Ë(
¶Ÿ_t
),

3360 (Ë
vec
.
	`size
(), 
	`ußbÀ_•a˚
(),

3361 
	`ußbÀ_•a˚_f‹_¶Ÿs
(),

3362 
	`n‰ì
(), 
	`ƒsvd
(),

3365 
idx
, 
	`n¶Ÿs
()

3370  
rc
;

3371 
	}
}

3373 
rc_t


3374 
	gfûe_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
, 
uöt4_t
 
Êags
,

3375 
°‹e_Êag_t
 
°‹e_Êags
)

3377 
	`w_as£π3
(
èg
 =
t_fûe_p
);

3379 
fûe_p_hdr_t
 
˘æ
;

3390 
˘æ
.
˛u°î
 = 
DUMMY_CLUSTER_ID
;

3391 
vec_t
 
fûe_p_hdr_vec
;

3392 
fûe_p_hdr_vec
.
	`put
(&
˘æ
, (ctrl));

3395 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

3403 
this
->
	`£t_°‹e_Êags
(
°‹e_Êags
);

3405 
	`W_COERCE
(
∑ge_p
::
	`ª˛aim
(0, 
fûe_p_hdr_vec
, 
Ál£
 ));

3409 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 0, &
fûe_p_hdr_vec
);

3410 if(
rc
.
	`is_îr‹
()) {

3411 
	`disˇrd
();

3412  
rc
;

3414  
RCOK
;

3415 
	}
}

3418 
rc_t


3419 
	gfûe_p
::
	$föd_™d_lock_√xt_¶Ÿ
(

3420 
uöt4_t
 
•a˚_√eded
,

3421 
¶Ÿid_t
& 
idx


3424  
	`_föd_™d_lock_‰ì_¶Ÿ
(
åue
, 
•a˚_√eded
, 
idx
);

3425 
	}
}

3426 
rc_t


3427 
	gfûe_p
::
	$föd_™d_lock_‰ì_¶Ÿ
(

3428 
uöt4_t
 
•a˚_√eded
,

3429 
¶Ÿid_t
& 
idx


3432  
	`_föd_™d_lock_‰ì_¶Ÿ
(
Ál£
, 
•a˚_√eded
, 
idx
);

3433 
	}
}

3434 
rc_t


3435 
	gfûe_p
::
	$_föd_™d_lock_‰ì_¶Ÿ
(

3436 
boﬁ
 
≠≥nd_⁄ly
,

3437 
uöt4_t
 
•a˚_√eded
,

3438 
¶Ÿid_t
& 
idx
,

3439 c⁄° 
boﬁ
 
bIgn‹eP¨íts


3442 
	`FUNC
(
föd_™d_lock_‰ì_¶Ÿ
);

3443 
	`w_as£π3
(
	`is_fûe_p
(Ë|| 
	`is_fûe_mrbt_p
());

3444 
¶Ÿid_t
 
°¨t_¶Ÿ
 = 1;

3448 
rc_t
 
rc
;

3450 
	`DBG
(<< "•a˚_√eded " << 
•a˚_√eded
);

3453 if(
≠≥nd_⁄ly
) {

3454 
	`W_DO
(
∑ge_p
::
	`√xt_¶Ÿ
(
•a˚_√eded
, 
idx
));

3456 
	`W_DO
(
∑ge_p
::
	`föd_¶Ÿ
(
•a˚_√eded
, 
idx
, 
°¨t_¶Ÿ
));

3459 
	`w_as£π3
(
idx
 <
	`n¶Ÿs
());

3462 
rid_t
 
	`rid
(
	`pid
(), 
idx
);

3465 
rc
 = 
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
, 0, 0, 0, 
bIgn‹eP¨íts
);

3467 i‡(
rc
.
	`is_îr‹
()) {

3468 i‡(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

3477 
	`DBG
(<< 
__LINE__
 << "Ñc=" << 
rc
);

3478 if(
°¨t_¶Ÿ
 =
	`n¶Ÿs
()) {

3479  
	`RC
(
eRECWONTFIT
);

3481 
°¨t_¶Ÿ
 = 
	`n¶Ÿs
();

3485 
	`DBG
(<< 
__LINE__
 << "Ñc=" << 
rc
);

3486  
	`RC_AUGMENT
(
rc
);

3490 
	`DBG
(<< "tid " << 
	`x˘
()->
	`tid
(Ë<<" foundándÜocked slŸ " << 
idx


3491 << " f‹Ñid " << 
rid
);

3495  
RCOK
;

3496 
	}
}

3498 
rc_t


3499 
	gfûe_p
::
	$gë_ªc
(
¶Ÿid_t
 
idx
, 
ªc‹d_t
*& 
ªc
)

3501 
	`DBGTHRD
(<<"fûe_m::gë_ª¯idx " << 
idx
 << "Öagê" << 
	`pid
().
∑ge
);

3502 
ªc
 = 0;

3503 i‡(! 
	`is_ªc_vÆid
(
idx
)) {

3504  
	`RC
(
eBADSLOTNUMBER
);

3506 
ªc
 = (
ªc‹d_t
*Ë
∑ge_p
::
	`tu∂e_addr
(
idx
);

3507 
	`w_as£π2
(
ªc
 !
NULL
);

3508  
RCOK
;

3509 
	}
}

3511 
rc_t


3512 
	gfûe_p
::
	$£t_hdr
(c⁄° 
fûe_p_hdr_t
& 
√w_hdr
)

3514 
vec_t
 
v
;

3515 
v
.
	`put
(&
√w_hdr
, (new_hdr));

3516 c⁄° 
vec_t
 
	`hdr_vec_tmp
(&
√w_hdr
, (new_hdr));

3517 
	`W_DO
(
∑ge_p
::
	`ª˛aim
(0, 
v
));

3518  
RCOK
;

3519 
	}
}

3521 
rc_t


3522 
	gfûe_p
::
	$gë_hdr
(
fûe_p_hdr_t
& 
hdr
) const

3524 if(
∑ge_p
::
	`n¶Ÿs
() > 0) {

3525 
vec_t
 
v
;

3526 
v
.
	`put
(&
hdr
, (hdr));

3527 
v
.
	`c›y_‰om
(
∑ge_p
::
	`tu∂e_addr
(0), (
hdr
));

3528  
RCOK
;

3530  
	`RC
(
eBADSLOTNUMBER
);

3531 
	}
}

3533 
rc_t


3534 
	gfûe_p
::
	$•li˚_d©a
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
, c⁄° 
vec_t
& 
d©a
)

3536 
ªc‹d_t
* 
ªc
;

3537 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3538 
ba£
 = 
ªc
->
	`body_off£t
();

3540  
∑ge_p
::
	`•li˚
(
idx
, 
ba£
 + 
°¨t
, 
Àn
, 
d©a
);

3541 
	}
}

3543 
rc_t


3544 
	gfûe_p
::
	$≠≥nd_ªc
(
¶Ÿid_t
 
idx
, c⁄° 
vec_t
& 
d©a
)

3546 
ªc‹d_t
* 
ªc
;

3548 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3550 i‡(
ªc
->
	`is_smÆl
()) {

3551 
	`W_DO
–
	`•li˚_d©a
(
idx
, ()
ªc
->
	`body_size
(), 0, 
d©a
) );

3553 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3556  
	`RC
(
smÀvñ_0
::
eNOTIMPLEMENTED
);

3559  
RCOK
;

3560 
	}
}

3562 
rc_t


3563 
	gfûe_p
::
	$åunˇã_ªc
(
¶Ÿid_t
 
idx
, 
uöt4_t
 
amou¡
)

3565 
ªc‹d_t
* 
ªc
;

3566 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3568 
vec_t
 
	`em±y
(
ªc
, 0);

3570 
	`w_as£π2
(
amou¡
 <
ªc
->
	`body_size
());

3571 
	`w_as£π1
(
ªc
->
	`is_smÆl
());

3572 
	`W_DO
–
	`•li˚_d©a
(
idx
, ()(
ªc
->
	`body_size
()-
amou¡
),

3573 ()
amou¡
, 
em±y
) );

3575  
RCOK
;

3576 
	}
}

3578 
rc_t


3579 
	gfûe_p
::
	$£t_ªc_Àn
(
¶Ÿid_t
 
idx
, 
uöt4_t
 
√w_Àn
)

3581 
ªc‹d_t
* 
ªc
;

3582 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3584 
vec_t
 
	`hdr_upd©e
(&(
√w_Àn
), (
ªc
->
èg
.
body_Àn
));

3585 
size_loˇti⁄
 = ((*)&
ªc
->
èg
.
body_Àn
) - ((*)rec);

3587 
	`W_DO
(
	`•li˚
(
idx
, 
size_loˇti⁄
, (
ªc
->
èg
.
body_Àn
), 
hdr_upd©e
) );

3588  
RCOK
;

3589 
	}
}

3591 
rc_t


3592 
	gfûe_p
::
	$£t_ªc_Êags
(
¶Ÿid_t
 
idx
, 
uöt2_t
 
√w_Êags
)

3594 
ªc‹d_t
* 
ªc
;

3595 
	`W_COERCE
–
	`gë_ªc
(
idx
, 
ªc
) );

3597 
vec_t
 
	`Êags_upd©e
(&(
√w_Êags
), (
ªc
->
èg
.
Êags
));

3598 
Êags_loˇti⁄
 = ((*)&(
ªc
->
èg
.
Êags
)) - ((*)rec);

3600 
	`W_DO
(
	`•li˚
(
idx
, 
Êags_loˇti⁄
, (
ªc
->
èg
.
Êags
), 
Êags_upd©e
) );

3601  
RCOK
;

3602 
	}
}

3604 
¶Ÿid_t
 
	gfûe_p
::
	$√xt_¶Ÿ
(
¶Ÿid_t
 
cuº
)

3606 
	`w_as£π3
(
cuº
 >=0);

3609 
cuº
 = cuº+1; cuº < 
	`n¶Ÿs
(); curr++) {

3610 i‡(
	`is_tu∂e_vÆid
(
cuº
)) {

3611  
cuº
;

3616 
	`w_as£π2
(
cuº
 =
	`n¶Ÿs
());

3618 
	}
}

3622 
	gfûe_p
::
	$ªc_cou¡
()

3624 
ƒecs
 = 0;

3625 
n¶Ÿs
 = 
∑ge_p
::
	`n¶Ÿs
();

3627 
¶Ÿid_t
 
¶Ÿ
 = 1; slŸ < 
n¶Ÿs
; slot++) {

3628 i‡(
	`is_tu∂e_vÆid
(
¶Ÿ
)Ë
ƒecs
++;

3631  
ƒecs
;

3632 
	}
}

3634 
ªcÊags_t


3635 
	gfûe_p
::
	$choo£_ªc_im∂emíèti⁄
(

3636 
uöt4_t
 
e°_hdr_Àn
,

3637 
smsize_t
 
e°_d©a_Àn
,

3638 
smsize_t
& 
ªc_size


3641 
e°_hdr_Àn
 = (
ª˘ag_t
Ë+ 
	`Æign
(est_hdr_len);

3642 
	`w_as£π2
(
	`is_Æig√d
(
e°_hdr_Àn
));

3643 
	`w_as£π2
(
	`is_Æig√d
((
ª˘ag_t
)));

3645 i‡–(
e°_d©a_Àn
+
e°_hdr_Àn
Ë<
fûe_p
::
d©a_sz
) {

3648 
ªc_size
 = 
e°_hdr_Àn
 + 
e°_d©a_Àn
 + (
¶Ÿ_t
);

3649 (
t_smÆl
);

3651 
ªc_size
 = 
e°_hdr_Àn
 + 
	`Æign
((
lg_èg_chunks_s
))+(
¶Ÿ_t
);

3652 (
t_œrge_0
);

3655 
	`W_FATAL
(
eNOTIMPLEMENTED
);

3656  
t_badÊag
;

3657 
	}
}

3660 
ªcÊags_t


3661 
	gfûe_mrbt_p
::
	$choo£_ªc_im∂emíèti⁄
(

3662 
uöt4_t
 
e°_hdr_Àn
,

3663 
smsize_t
 
e°_d©a_Àn
,

3664 
smsize_t
& 
ªc_size


3667 
e°_hdr_Àn
 = (
ª˘ag_t
Ë+ 
	`Æign
(est_hdr_len);

3668 
	`w_as£π2
(
	`is_Æig√d
(
e°_hdr_Àn
));

3669 
	`w_as£π2
(
	`is_Æig√d
((
ª˘ag_t
)));

3671 i‡–(
e°_d©a_Àn
+
e°_hdr_Àn
Ë<
fûe_mrbt_p
::
d©a_sz
) {

3674 
ªc_size
 = 
e°_hdr_Àn
 + 
e°_d©a_Àn
 + (
¶Ÿ_t
);

3675 (
t_smÆl
);

3677 
ªc_size
 = 
e°_hdr_Àn
 + 
	`Æign
((
lg_èg_chunks_s
))+(
¶Ÿ_t
);

3678 (
t_œrge_0
);

3681 
	`W_FATAL
(
eNOTIMPLEMENTED
);

3682  
t_badÊag
;

3683 
	}
}

3686 
	$MAKEPAGECODE
(
fûe_p
, 
∑ge_p
)

3689 
rc_t


3690 
fûe_m
::
	$gë_du_°©i°ics
(

3691 c⁄° 
°id_t
& 
fid
,

3692 c⁄° 
°id_t
& 
lfid
,

3693 
fûe_°©s_t
& 
fûe_°©s
,

3694 
boﬁ
 
audô
)

3696 
	`FUNC
(
fûe_m
::
gë_du_°©i°ics
);

3697 
Õid_t
 
Õid
;

3698 
boﬁ
 
eof
 = 
Ál£
;

3699 
fûe_p
 
∑ge
;

3700 
boﬁ
 
Æloˇãd
;

3702 
ba£_°©_t
 
fûe_pg_˙t
 = 0;

3703 
ba£_°©_t
 
u«Œoc_fûe_pg_˙t
 = 0;

3704 
ba£_°©_t
 
lgd©a_pg_˙t
 = 0;

3705 
ba£_°©_t
 
lgödex_pg_˙t
 = 0;

3707 
	`DBG
(<<"™Æyzêfûê" << 
fid
);

3711 
°‹e_Êag_t
 
°‹e_Êags
;

3730 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
fid
, 
°‹e_Êags
));

3731 
	`w_as£π3
(
°‹e_Êags
 !
°_bad
);

3733 
	`DBG
(<<"°‹êÊag†" << 
°‹e_Êags
);

3734 if(
°‹e_Êags
 & 
°_tmp
) {

3735 
SmSt‹eMëaSèts
 
_°©s
;

3736 
_°©s
.
	`CÀ¨
();

3738 
	`W_COERCE
–
io
->
	`gë_°‹e_mëa_°©s
(
fid
, 
_°©s
) );

3739 
	`DBG
(<<"u«Œoc_fûe_pg_˙à+=" << 
_°©s
.
numRe£rvedPages
);

3740 
fûe_°©s
.
u«Œoc_fûe_pg_˙t
 +
_°©s
.
numRe£rvedPages
;

3746 
_°©s
.
	`CÀ¨
();

3747 
	`W_COERCE
–
io
->
	`gë_°‹e_mëa_°©s
(
lfid
, 
_°©s
) );

3748 
	`DBG
(<<"u«Œoc_fûe_pg_˙à+=" << 
_°©s
.
numRe£rvedPages
);

3749 
fûe_°©s
.
u«Œoc_fûe_pg_˙t
 +
_°©s
.
numRe£rvedPages
;

3750  
RCOK
;

3754 
	`W_DO
(
	`fú°_∑ge
(
fid
, 
Õid
, &
Æloˇãd
) );

3755 
	`DBG
(<<"fú°Öagêo‡" << 
fid
 << " is "

3756 << 
Õid
 << " (Æloˇã=" << 
Æloˇãd
 << ")");

3759  !
eof
 ) {

3760 i‡(
Æloˇãd
) {

3761 
fûe_pg_°©s_t
 
fûe_pg_°©s
;

3762 
lgd©a_pg_°©s_t
 
lgd©a_pg_°©s
;

3763 
lgödex_pg_°©s_t
 
lgödex_pg_°©s
;

3764 
fûe_pg_˙t
++;

3768 
	`W_DO
(
lm
->
	`lock_f‹˚
(
Õid
, 
SH
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

3770 
	`W_DO
–
∑ge
.
	`fix
(
Õid
, 
LATCH_SH
, 0 ));

3772 
	`W_DO
(
∑ge
.
	`hdr_°©s
(
fûe_pg_°©s
));

3774 
	`DBG
(<< "gëtög slŸ sèt†f‹Öagê" << 
Õid
);

3775 
	`W_DO
(
∑ge
.
	`¶Ÿ_°©s
(0 ,

3776 
fûe_pg_°©s
,

3777 
lgd©a_pg_°©s
,

3778 
lgödex_pg_°©s
,

3779 
lgd©a_pg_˙t
,

3780 
lgödex_pg_˙t
));

3781 
∑ge
.
	`unfix
();

3783 i‡(
audô
) {

3784 
	`W_DO
(
fûe_pg_°©s
.
	`audô
());

3785 
	`W_DO
(
lgd©a_pg_°©s
.
	`audô
());

3786 
	`W_DO
(
lgödex_pg_°©s
.
	`audô
());

3788 
fûe_°©s
.
fûe_pg
.
	`add
(
fûe_pg_°©s
);

3789 
fûe_°©s
.
lgd©a_pg
.
	`add
(
lgd©a_pg_°©s
);

3790 
fûe_°©s
.
lgödex_pg
.
	`add
(
lgödex_pg_°©s
);

3793 
u«Œoc_fûe_pg_˙t
++;

3797 
	`W_DO
(
	`√xt_∑ge
(
Õid
, 
eof
, &
Æloˇãd
) );

3798 
	`DBG
(<<"√xà∑gêo‡" << 
fid
 << " i†" << 
Õid
 << " (Æloˇã=" << 
Æloˇãd
 << ")");

3802 
	`DBG
(<<"™Æyzêœrgêobje˘ fûê" << 
lfid
);

3803 
	`W_DO
(
	`fú°_∑ge
(
lfid
, 
Õid
, &
Æloˇãd
) );

3805 
	`DBG
(<<"fú°Öagêo‡" << 
lfid
 << " i†" << 
Õid
 << " (Æloˇã=" << 
Æloˇãd
 << ")");

3807 
ba£_°©_t
 
lg_pg_˙t
 = 0;

3808 
ba£_°©_t
 
lg_∑ge_u«Œoc_˙t
 = 0;

3809 
eof
 = 
Ál£
;

3810  !
eof
 ) {

3811 i‡(
Æloˇãd
) {

3812 
lg_pg_˙t
++;

3814 
lg_∑ge_u«Œoc_˙t
++;

3816 
	`DBG
–<< "Õid=" << 
Õid


3817 <<"Üg_pg_˙à" << 
lg_pg_˙t


3818 <<"Üg_∑ge_u«Œoc_˙à" << 
lg_∑ge_u«Œoc_˙t


3820 
	`W_DO
(
	`√xt_∑ge
(
Õid
, 
eof
, &
Æloˇãd
) );

3821 
	`DBG
(<<"√xà∑gêo‡" << 
lfid


3822 << " i†" << 
Õid
 << " (Æloˇãd=" << 
Æloˇãd
 << ")");

3825 if(
audô
) {

3838 if(
lg_pg_˙t
 !
lgd©a_pg_˙t
 + 
lgödex_pg_˙t
) {

3839 
˚º
 << "lg_pg_˙t" << 
lg_pg_˙t


3840 << " BUTÜgd©a_pg_˙t" << 
lgd©a_pg_˙t


3841 << " +Ügödex_pg_˙t" << 
lgödex_pg_˙t


3842 << " = " << 
lgd©a_pg_˙t
 + 
lgödex_pg_˙t


3843 << 
ídl
;

3845 
ba£_°©_t
 
ö_exã¡s
 = 
lg_pg_˙t
;

3846 
ba£_°©_t
 
ª„ªn˚d
 = 
lgd©a_pg_˙t
 + 
lgödex_pg_˙t
;

3847 if(
ö_exã¡s
 < 
ª„ªn˚d
) {

3848 
˚º
 << (
ª„ªn˚d
 - 
ö_exã¡s
)

3850 << 
ídl
;

3852 
˚º
 << (
ö_exã¡s
 - 
ª„ªn˚d
)

3854 << 
ídl
;

3856 
	`W_FATAL_MSG
(
fcINTERNAL
, << "AUDIT FAILURE inÜarge object store!");

3860 if(
audô
) {

3861 
	`w_as£π2
((
lg_pg_˙t
 + 
lg_∑ge_u«Œoc_˙t
Ë% 
smÀvñ_0
::
ext_sz
 == 0);

3862 
	`w_as£π2
(
lg_pg_˙t
 =
lgd©a_pg_˙t
 + 
lgödex_pg_˙t
);

3867 
fûe_°©s
.
fûe_pg_˙t
 += file_pg_cnt;

3868 
fûe_°©s
.
lgd©a_pg_˙t
 +=Ügdata_pg_cnt;

3869 
fûe_°©s
.
lgödex_pg_˙t
 +=Ügindex_pg_cnt;

3870 
fûe_°©s
.
u«Œoc_fûe_pg_˙t
 += unalloc_file_pg_cnt;

3871 
fûe_°©s
.
u«Œoc_œrge_pg_˙t
 +
lg_∑ge_u«Œoc_˙t
;

3873 
	`DBG
(<<"DONEá«lyzêfûê" << 
fid
);

3874  
RCOK
;

3875 
	}
}

3877 
rc_t


3878 
	gfûe_p
::
	$hdr_°©s
(
fûe_pg_°©s_t
& 
fûe_pg_°©s
)

3882 
fûe_pg_°©s
.
hdr_bs
 +
	`hdr_size
(Ë+ (
∑ge_p
::
¶Ÿ_t
Ë+ 
	`Æign
(
	`tu∂e_size
(0));

3883 
fûe_pg_°©s
.
‰ì_bs
 +
	`≥rsi°ít_∑π
().
•a˚
.
	`n‰ì
();

3884  
RCOK
;

3885 
	}
}

3887 
rc_t


3888 
	gfûe_p
::
	$¶Ÿ_°©s
(

3889 
¶Ÿid_t
 
¶Ÿ
,

3890 
fûe_pg_°©s_t
& 
fûe_pg
,

3891 
lgd©a_pg_°©s_t
& 
lgd©a_pg
,

3892 
lgödex_pg_°©s_t
& 
lgödex_pg
,

3893 
ba£_°©_t
& 
lgd©a_pg_˙t
,

3894 
ba£_°©_t
& 
lgödex_pg_˙t
)

3896 
	`FUNC
(
fûe_p
::
¶Ÿ_°©s
);

3898 
¶Ÿid_t
 
°¨t_¶Ÿ
 = 
¶Ÿ
 == 0 ? 1 : slot;

3899 
¶Ÿid_t
 
íd_¶Ÿ
 = 
¶Ÿ
 =0 ? 
	`num_¶Ÿs
()-1 : slot;

3900 
ªc‹d_t
* 
ªc
;

3902 
	`DBG
(<<"°¨t_¶Ÿ=" << 
°¨t_¶Ÿ
 << "Énd_¶Ÿ=" << 
íd_¶Ÿ
);

3904 
¶Ÿid_t
 
¶
 = 
°¨t_¶Ÿ
; s»<
íd_¶Ÿ
; sl++) {

3905 i‡(!
	`is_ªc_vÆid
(
¶
)) {

3906 
fûe_pg
.
¶Ÿs_unu£d_bs
 +(
¶Ÿ_t
);

3908 
fûe_pg
.
¶Ÿs_u£d_bs
 +(
¶Ÿ_t
);

3909 
ªc
 = (
ªc‹d_t
*Ë
∑ge_p
::
	`tu∂e_addr
(
¶
);

3911 
fûe_pg
.
ªc_èg_bs
 +(
ª˘ag_t
);

3912 
fûe_pg
.
ªc_hdr_bs
 +
ªc
->
	`hdr_size
();

3913 
fûe_pg
.
ªc_hdr_Æign_bs
 +
	`Æign
(
ªc
->
	`hdr_size
()) -

3914 
ªc
->
	`hdr_size
();

3916 i‡–
ªc
->
	`is_smÆl
() ) {

3917 
	`DBG
(<<"smallÑec");

3918 
fûe_pg
.
smÆl_ªc_˙t
++;

3919 
fûe_pg
.
ªc_body_bs
 +
ªc
->
	`body_size
();

3920 
fûe_pg
.
ªc_body_Æign_bs
 +
	`Æign
(
ªc
->
	`body_size
()) -

3921 
ªc
->
	`body_size
();

3922 } i‡–
ªc
->
	`is_œrge
() ) {

3923 
	`DBG
(<<"largeÑec");

3924 
fûe_pg
.
lg_ªc_˙t
++;

3931 
ba£_°©_t
 
lgd©a_˙t
 = 
ªc
->
	`∑ge_cou¡
();

3932 
lgd©a_pg_˙t
 +
lgd©a_˙t
;

3934 
lgd©a_pg
.
hdr_bs
 +
lgd©a_˙t
 * (
∑ge_sz
 - 
lgd©a_p
::
d©a_sz
);

3935 
lgd©a_pg
.
d©a_bs
 +
ªc
->
	`body_size
();

3936 
lgd©a_pg
.
unu£d_bs
 +
lgd©a_˙t
*
lgd©a_p
::
d©a_sz
 - 
ªc
->
	`body_size
();

3937 i‡–
ªc
->
èg
.
Êags
 & 
t_œrge_0
 ) {

3938 
fûe_pg
.
ªc_lg_chunk_bs
 +
	`Æign
((
lg_èg_chunks_s
));

3939 #ifde‡
W_TRACE


3941 c⁄° 
lg_èg_chunks_h
 
	`lg_hdl
(*
this
,

3942 *(
lg_èg_chunks_s
*)
ªc
->
	`body
());

3943 
	`DBG
(

3944 <<",Ç∑ge†" << 
lg_hdl
.
	`∑ge_cou¡
()

3945 <<",Üa°Öagê" << 
lg_hdl
.
	`œ°_pid
()

3946 <<", st‹ê" << 
lg_hdl
.
	`°id
() );

3949 } i‡(
ªc
->
èg
.
Êags
 & (
t_œrge_1
|
t_œrge_2
)) {

3950 #ifde‡
W_TRACE


3952 c⁄° 
lg_èg_ödúe˘_h
 
	`lg_hdl
(*
this
,

3953 *(
lg_èg_ödúe˘_s
*)
ªc
->
	`body
(),

3954 
ªc
->
	`∑ge_cou¡
());

3955 
	`DBG
(

3956 <<",Üa°Öagê" << 
lg_hdl
.
	`œ°_pid
()

3957 <<", st‹ê" << 
lg_hdl
.
	`°id
() );

3960 
fûe_pg
.
ªc_lg_ödúe˘_bs
 +
	`Æign
((
lg_èg_ödúe˘_s
));

3961 
ba£_°©_t
 
lgödex_˙t
 = 0;

3962 i‡(
ªc
->
èg
.
Êags
 & 
t_œrge_1
) {

3963 
lgödex_˙t
 = 1;

3965 
lgödex_˙t
 +(
lgd©a_˙t
-1)/
lgödex_p
::
max_pids
+2;

3967 
lgödex_pg
.
u£d_bs
 +
lgödex_˙t
 * (
∑ge_sz
 - 
lgödex_p
::
d©a_sz
);

3968 
lgödex_pg
.
u£d_bs
 +(
lgödex_˙t
-1 + 
lgd©a_˙t
)*(
shpid_t
);

3969 
lgödex_pg
.
unu£d_bs
 +=

3970 (
lgödex_p
::
d©a_sz
*
lgödex_˙t
) -

3971 ((
lgödex_˙t
-1 + 
lgd©a_˙t
)*(
shpid_t
));

3973 
lgödex_pg_˙t
 +
lgödex_˙t
;

3976 
	`W_FATAL
(
eINTERNAL
);

3978 
	`DBG
(<<"lgd©a_˙à‘ec->∑ge_cou¡()Ë" << 
lgd©a_˙t


3979 << "Ñe¯i†¶Ÿ " << 
¶


3980 << "Ügd©a_pg_˙t(sumË" << 
lgd©a_pg_˙t


3983 
	`W_FATAL
(
eINTERNAL
);

3987 
	`DBG
(<<"¶Ÿ_°©†ªtu∫†lgd©a_pg_˙t=" << 
lgd©a_pg_˙t


3988 << "Ügödex_pg_˙t=" << 
lgödex_pg_˙t
 );

3989  
RCOK
;

3990 
	}
}

3996 
rc_t


3997 
	gfûe_m
::
	$upd©e_ª˘ag
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
Àn
, 
uöt2_t
 
Êags
)

3999 
fûe_p
 
∑ge
;

4001 
	`W_DO
(
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
LATCH_EX
) );

4003 
	`W_DO
–
∑ge
.
	`£t_ªc_Àn
(
rid
.
¶Ÿ
, 
Àn
) );

4004 
	`W_DO
–
∑ge
.
	`£t_ªc_Êags
(
rid
.
¶Ÿ
, 
Êags
) );

4006  
RCOK
;

4007 
	}
}

	@src/sm/file.h

53 #i‚de‡
FILE_H


54 
	#FILE_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 
˛ass
 
	gsdesc_t
;

66 #i‚de‡
FILE_S_H


67 
	~"fûe_s.h
"

70 
	gfûe_°©s_t
;

71 
	gfûe_pg_°©s_t
;

72 
	glgd©a_pg_°©s_t
;

73 
	glgödex_pg_°©s_t
;

74 
˛ass
 
	gpö_i
;

76 
˛ass
 
	gfûe_m
;

77 
˛ass
 
	gfûe_mrbt_p
;

83 ˛as†
	cfûe_p
 : 
public
 
∑ge_p
 {

84 
‰õnd
 
˛ass
 
fûe_m
;

85 
‰õnd
 
˛ass
 
	mpö_i
;

87 
	mpublic
:

89 íum { 
d©a_sz
 = 
∑ge_p
::data_sz

90 - 
°©ic_Æign
<(
fûe_p_hdr_t
)>::
vÆue


91 - (
¶Ÿ_t
),

92 
	mmö_ªc_size
 = (
ª˘ag_t
Ë+ (
¶Ÿ_t
)

95 
MAKEPAGE
(
fûe_p
, 
∑ge_p
, 1);

97 
	$num_¶Ÿs
(Ë{  
∑ge_p
::
	`n¶Ÿs
(); 
	}
}

99 
rc_t
 
föd_™d_lock_√xt_¶Ÿ
(

100 
uöt4_t
 
•a˚_√eded
,

101 
¶Ÿid_t
& 
idx
);

103 
rc_t
 
föd_™d_lock_‰ì_¶Ÿ
(

104 
uöt4_t
 
•a˚_√eded
,

105 
¶Ÿid_t
& 
idx
);

107 
rc_t
 
_föd_™d_lock_‰ì_¶Ÿ
(

108 
boﬁ
 
≠≥nd_⁄ly
,

109 
uöt4_t
 
•a˚_√eded
,

110 
¶Ÿid_t
& 
idx
,

111 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

113 
	#DUMMY_CLUSTER_ID
 0

	)

115 
	g¥iv©e
:

117 
	$lök_up
(
shpid_t
 
≈rv
, shpid_à
¬xt
) {

118 
∑ge_p
::
	`lök_up
(
≈rv
, 
¬xt
);

119 
	}
}

121 
boﬁ
 
	$is_fûe_p
() const;

122 
boﬁ
 
	$is_fûe_mrbt_p
() const;

124 
rc_t
 
	`£t_hdr
(c⁄° 
fûe_p_hdr_t
& 
√w_hdr
);

125 
rc_t
 
	$gë_hdr
(
fûe_p_hdr_t
 &
hdr
) const;

127 
rc_t
 
	`fûl_¶Ÿ
(

128 
¶Ÿid_t
 
idx
,

129 c⁄° 
ª˘ag_t
& 
èg
,

130 c⁄° 
vec_t
& 
hdr
,

131 c⁄° 
vec_t
& 
d©a
,

132 
pff
);

134 
rc_t
 
	`de°roy_ªc
(
¶Ÿid_t
 
idx
);

135 
rc_t
 
	`≠≥nd_ªc
(
¶Ÿid_t
 
idx
, c⁄° 
vec_t
& 
d©a
);

136 
rc_t
 
	`åunˇã_ªc
(
¶Ÿid_t
 
idx
, 
uöt4_t
 
amou¡
);

137 
rc_t
 
	`£t_ªc_Àn
(
¶Ÿid_t
 
idx
, 
uöt4_t
 
√w_Àn
);

138 
rc_t
 
	`£t_ªc_Êags
(
¶Ÿid_t
 
idx
, 
uöt2_t
 
√w_Êags
);

140 
boﬁ
 
	$is_ªc_vÆid
(
¶Ÿid_t
 
idx
) {

146 
	`is_tu∂e_vÆid
(
idx
);

147 
	}
}

149 
	g¥Ÿe˘ed
:

150 
rc_t
 
•li˚_d©a
(

151 
¶Ÿid_t
 
idx
,

152 
¶Ÿ_Àngth_t
 
°¨t
,

153 
¶Ÿ_Àngth_t
 
Àn
,

154 c⁄° 
vec_t
& 
d©a
);

156 
	gpublic
:

159 
rc_t
 
•li˚_hdr
(

160 
¶Ÿid_t
 
idx
,

161 
¶Ÿ_Àngth_t
 
°¨t
,

162 
¶Ÿ_Àngth_t
 
Àn
,

163 c⁄° 
vec_t
& 
d©a
);

166 
rc_t
 
gë_ªc
(
¶Ÿid_t
 
idx
, 
ªc‹d_t
*& 
ªc
);

167 
rc_t
 
	$gë_ªc
(
¶Ÿid_t
 
idx
, c⁄° 
ªc‹d_t
*& 
ªc
) {

168  
	`gë_ªc
(
idx
, (
ªc‹d_t
*&Ë
ªc
);

169 
	}
}

171 
¶Ÿid_t
 
√xt_¶Ÿ
(¶Ÿid_à
cuº
);

173 
ªc_cou¡
();

177 
rc_t
 
hdr_°©s
(
fûe_pg_°©s_t
& 
fûe_pg
);

180 
rc_t
 
¶Ÿ_°©s
(
¶Ÿid_t
 
¶Ÿ
,

181 
fûe_pg_°©s_t
& 
fûe_pg
,

182 
lgd©a_pg_°©s_t
& 
lgd©a_p
,

183 
lgödex_pg_°©s_t
& 
lgödex_pg
,

184 
ba£_°©_t
& 
lgd©a_pg_˙t
,

185 
ba£_°©_t
& 
lgödex_pg_˙t
);

188 
ªcÊags_t
 
choo£_ªc_im∂emíèti⁄
(

189 
uöt4_t
 
e°_hdr_Àn
,

190 
smsize_t
 
e°_d©a_Àn
,

191 
smsize_t
& 
ªc_size
);

193 
	g¥iv©e
:

198 
shpid_t
 
¥ev
();

199 
shpid_t
 
√xt
();

200 
‰õnd
 
˛ass
 
	g∑ge_lök_log
;

203 ˛as†
	cfûe_m
 : 
public
 
smÀvñ_2
 {

204 
‰õnd
 
˛ass
 
Æloc_fûe_∑ge_log
;

205 
‰õnd
 
˛ass
 
	mbåì_im∂
;

206 
‰õnd
 
˛ass
 
	mbåì_m
;

208 
	m∑ge_s
::
	t¶Ÿ_Àngth_t
 slot_length_t;

209 
	mpublic
:

210 
NORET
 
fûe_m
();

211 
	mNORET
 ~
fûe_m
();

214 
rc_t
 
¸óã
(
°id_t
 
°id
, 
Õid_t
& 
fú°_∑ge
);

216 
rc_t
 
¸óã_mrbt
(
°id_t
 
°id
, 
Õid_t
& 
fú°_∑ge
);

218 
rc_t
 
¸óã_ªc
(

219 c⁄° 
°id_t
& 
fid
,

221 
smsize_t
 
Àn_höt
,

222 c⁄° 
vec_t
& 
hdr
,

223 c⁄° 
vec_t
& 
d©a
,

224 
sdesc_t
& 
sd
,

225 
rid_t
& 
rid
,

226 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

228 
rc_t
 
¸óã_mrbt_ªc
(

229 c⁄° 
°id_t
& 
fid
,

231 
smsize_t
 
Àn_höt
,

232 c⁄° 
vec_t
& 
hdr
,

233 c⁄° 
vec_t
& 
d©a
,

234 
sdesc_t
& 
sd
,

235 
rid_t
& 
rid
,

236 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

238 
rc_t
 
¸óã_ªc_©_íd
(

239 
fûe_p
& 
∑ge
,

240 
uöt4_t
 
Àn_höt
,

241 c⁄° 
vec_t
& 
hdr
,

242 c⁄° 
vec_t
& 
d©a
,

243 
sdesc_t
& 
sd
,

244 
rid_t
& 
rid


247 
rc_t
 
¸óã_mrbt_ªc_©_íd
(

248 
fûe_mrbt_p
& 
∑ge
,

249 
uöt4_t
 
Àn_höt
,

250 c⁄° 
vec_t
& 
hdr
,

251 c⁄° 
vec_t
& 
d©a
,

252 
sdesc_t
& 
sd
,

253 
rid_t
& 
rid


256 
rc_t
 
¸óã_ªc_©_íd
–
°id_t
 
fid
,

257 
fûe_p
& 
∑ge
,

258 
uöt4_t
 
Àn_höt
,

259 c⁄° 
vec_t
& 
hdr
,

260 c⁄° 
vec_t
& 
d©a
,

261 
sdesc_t
& 
sd
,

262 
rid_t
& 
rid
);

264 
rc_t
 
¸óã_ªc
–
°id_t
 
fid
,

265 c⁄° 
Õid_t
& 
∑ge_höt
,

266 
uöt4_t
 
Àn_höt
,

267 c⁄° 
vec_t
& 
hdr
,

268 c⁄° 
vec_t
& 
d©a
,

269 
sdesc_t
& 
sd
,

270 
rid_t
& 
rid
,

271 
boﬁ
 
f‹w¨d_Æloc
 = 
åue


274 
rc_t
 
move_mrbt_ªc_to_giví_∑ge
(

275 
smsize_t
 
Àn_höt
,

276 c⁄° 
vec_t
& 
hdr
,

277 c⁄° 
vec_t
& 
d©a
,

278 
rid_t
& 
rid
,

279 
fûe_p
& 
∑ge
,

280 
boﬁ
& 
•a˚_found
);

282 
rc_t
 
¸óã_mrbt_ªc_ö_giví_∑ge
(

283 
smsize_t
 
Àn_höt
,

284 
sdesc_t
& 
sd
,

285 c⁄° 
vec_t
& 
hdr
,

286 c⁄° 
vec_t
& 
d©a
,

287 
rid_t
& 
rid
,

288 
fûe_p
& 
∑ge
,

289 
boﬁ
& 
•a˚_found
,

290 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

292 
rc_t
 
¸óã_mrbt_ªc_l
(

293 c⁄° 
Õid_t
& 
Àaf
,

294 
sdesc_t
& 
sd
,

295 c⁄° 
vec_t
& 
hdr
,

296 c⁄° 
vec_t
& 
d©a
,

297 
smsize_t
 
Àn_höt
,

298 
rid_t
& 
√w_rid
,

299 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

301 
rc_t
 
¸óã_mrbt_ªc_p
(

302 c⁄° 
Õid_t
& 
Àaf
,

303 
sdesc_t
& 
sd
,

304 c⁄° 
vec_t
& 
hdr
,

305 c⁄° 
vec_t
& 
d©a
,

306 
smsize_t
 
Àn_höt
,

307 
rid_t
& 
√w_rid
,

308 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

310 
rc_t
 
de°roy_ªc_¶Ÿ
(c⁄° 
rid_t
 
rid
, 
fûe_mrbt_p
& 
∑ge
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

312 
rc_t
 
de°roy_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

314 
rc_t
 
upd©e_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
°¨t
,

315 c⁄° 
vec_t
& 
d©a
,

316 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


319 
rc_t
 
≠≥nd_ªc
(c⁄° 
rid_t
& 
rid
,

320 c⁄° 
vec_t
& 
d©a
,

321 c⁄° 
sdesc_t
& 
sd
);

323 
rc_t
 
≠≥nd_mrbt_ªc
(c⁄° 
rid_t
& 
rid
,

324 c⁄° 
vec_t
& 
d©a
,

325 c⁄° 
sdesc_t
& 
sd
,

326 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

328 
rc_t
 
åunˇã_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
amou¡
,

329 
boﬁ
 &
should_f‹w¨d
);

331 
rc_t
 
åunˇã_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
amou¡
,

332 
boﬁ
 &
should_f‹w¨d
, c⁄° boﬁ 
bIgn‹eL©ches
 = 
Ál£
);

334 
rc_t
 
•li˚_hdr
(
rid_t
 
rid
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
,

335 c⁄° 
vec_t
& 
hdr_d©a
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

337 
rc_t
 
ªad_ªc
(c⁄° 
rid_t
& 
rid
, 
°¨t
, 
uöt4_t
& 
Àn
, * 
buf
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

338 
rc_t
 
	$ªad_ªc
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
& 
Àn
, * 
buf
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
) {

339  
	`ªad_ªc
(
rid
, 0, 
Àn
, 
buf
, 
bIgn‹eL©ches
);

341 
rc_t
 
	`ªad_hdr
(c⁄° 
rid_t
& 
rid
, & 
Àn
, * 
buf
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

348 
rc_t
 
	`fú°_∑ge
(

349 c⁄° 
°id_t
& 
fid
,

350 
Õid_t
& 
pid
,

351 
boﬁ
* 
Æloˇãd
);

353 
rc_t
 
	`√xt_∑ge_wôh_•a˚
(

354 
Õid_t
& 
pid
,

355 
boﬁ
& 
eof
,

356 
•a˚_buckë_t
 
b
);

358 
rc_t
 
	`√xt_∑ge
(

359 
Õid_t
& 
pid
,

360 
boﬁ
& 
eof
,

361 
boﬁ
* 
Æloˇãd
);

363 
rc_t
 
	`œ°_∑ge
(

364 c⁄° 
°id_t
& 
fid
,

365 
Õid_t
& 
pid
,

366 
boﬁ
* 
Æloˇãd
);

368 
rc_t
 
	$loˇã_∑ge
(c⁄° 
rid_t
& 
rid
,

369 
fûe_p
& 
∑ge
,

370 
œtch_mode_t
 
mode
) {

371  
	`_loˇã_∑ge
(
rid
, 
∑ge
, 
mode
); 
	}
}

373 
rc_t
 
gë_du_°©i°ics
(c⁄° 
°id_t
& 
fid
,

374 c⁄° 
°id_t
& 
lg_fid
,

375 
fûe_°©s_t
& 
fûe_°©s
,

376 
boﬁ
 
audô
);

379 
rc_t
 
upd©e_ª˘ag
(c⁄° 
rid_t
& 
rid
, 
uöt4_t
 
Àn
, 
uöt2_t
 
Êags
);

381 
	g¥Ÿe˘ed
:

382 
rc_t
 
_föd_¶Ÿãd_∑ge_wôh_•a˚
(

383 c⁄° 
°id_t
& 
fid
,

384 
pg_pﬁicy_t
 
mask
,

385 
sdesc_t
& 
sd
,

386 
smsize_t
 
•a˚_√eded
,

387 
fûe_p
& 
∑ge
,

388 
¶Ÿid_t
& 
¶Ÿ
,

389 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

391 
rc_t
 
_föd_¶Ÿãd_mrbt_∑ge_wôh_•a˚
(

392 c⁄° 
°id_t
& 
fid
,

393 
pg_pﬁicy_t
 
mask
,

394 
sdesc_t
& 
sd
,

395 
smsize_t
 
•a˚_√eded
,

396 
fûe_mrbt_p
& 
∑ge
,

397 
¶Ÿid_t
& 
¶Ÿ
,

398 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

400 
rc_t
 
_¸óã_ªc
(

401 c⁄° 
°id_t
& 
fid
,

402 
pg_pﬁicy_t
 
pﬁicy
,

403 
smsize_t
 
Àn_höt
,

404 
sdesc_t
& 
sd
,

405 c⁄° 
vec_t
& 
hdr
,

406 c⁄° 
vec_t
& 
d©a
,

407 
rid_t
& 
rid
,

408 
fûe_p
& 
∑ge
,

409 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

411 
rc_t
 
_¸óã_mrbt_ªc
(

412 c⁄° 
°id_t
& 
fid
,

413 
pg_pﬁicy_t
 
pﬁicy
,

414 
smsize_t
 
Àn_höt
,

415 
sdesc_t
& 
sd
,

416 c⁄° 
vec_t
& 
hdr
,

417 c⁄° 
vec_t
& 
d©a
,

418 
rid_t
& 
rid
,

419 
fûe_mrbt_p
& 
∑ge
,

420 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

422 
rc_t
 
_¸óã_ªc_giví_∑ge
(

423 c⁄° 
°id_t
 
fid
,

424 
fûe_p
& 
∑ge
,

425 
Õid_t
& 
pid
,

426 
uöt4_t
 
Àn_höt
,

427 c⁄° 
vec_t
& 
hdr
,

428 c⁄° 
vec_t
& 
d©a
,

429 
sdesc_t
& 
sd
,

430 
rid_t
& 
rid
,

431 
boﬁ
 
f‹w¨d_Æloc
,

432 
boﬁ
 
£¨ch


435 
rc_t
 
_√xt_∑ge_pﬁicy_1
(

436 c⁄° 
°id_t
& 
°id
,

437 
sdesc_t
& 
sd
,

438 
boﬁ
 
f‹w¨d_Æloc
,

439 
Õid_t
& 
pid
);

441 
rc_t
 
_√xt_∑ge_pﬁicy_2
(

442 c⁄° 
°id_t
& 
°id
,

443 
sdesc_t
& 
sd
,

444 
fûe_p
& 
∑ge
,

445 
boﬁ
& 
f‹w¨d_Æloc
,

446 
boﬁ
 
£¨ch_fûe
,

447 
Õid_t
& 
√wpid
);

449 
rc_t
 
_¸óã_ªc_ö_¶Ÿ
(

450 
fûe_p
& 
∑ge
,

451 
¶Ÿid_t
 
¶Ÿ
,

452 
ªcÊags_t
 
ªc_im∂
,

453 c⁄° 
vec_t
& 
hdr
,

454 c⁄° 
vec_t
& 
d©a
,

455 
sdesc_t
& 
sd
,

456 
boﬁ
 
do_≠≥nd
,

457 
rid_t
& 
rid
);

459 
rc_t
 
_¸óã_mrbt_ªc_ö_¶Ÿ
(

460 
fûe_p
& 
∑ge
,

461 
¶Ÿid_t
 
¶Ÿ
,

462 c⁄° 
vec_t
& 
hdr
,

463 c⁄° 
vec_t
& 
d©a
,

464 
rid_t
& 
rid
);

466 
rc_t
 
_undo_Æloc_fûe_∑ge
(
fûe_p
& 
∑ge
);

467 
rc_t
 
_‰ì_∑ge
(
fûe_p
& 
∑ge
, c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

468 
rc_t
 
_Æloc_∑ge
(
°id_t
 
fid
,

469 c⁄° 
Õid_t
& 
√¨
,Üpid_t& 
pid
,

470 
fûe_p
 &
∑ge
,

471 
boﬁ
 
£¨ch_fûe


474 
rc_t
 
_Æloc_mrbt_∑ge
(
°id_t
 
fid
,

475 c⁄° 
Õid_t
& 
√¨
,Üpid_t& 
pid
,

476 
fûe_mrbt_p
 &
∑ge
,

477 
boﬁ
 
£¨ch_fûe


480 
rc_t
 
_loˇã_∑ge
(c⁄° 
rid_t
& 
rid
, 
fûe_p
& 
∑ge
, 
œtch_mode_t
 
mode
);

481 
rc_t
 
_≠≥nd_œrge
(
fûe_p
& 
∑ge
, 
¶Ÿid_t
 
¶Ÿ
, c⁄° 
vec_t
& 
d©a
);

482 
rc_t
 
_≠≥nd_to_œrge_∑ges
(
num_∑ges
,

483 c⁄° 
Õid_t
 
√w_∑ges
[], c⁄° 
vec_t
& 
d©a
,

484 
smsize_t
 
À·_to_≠≥nd
);

485 
rc_t
 
_c⁄vît_to_œrge_ödúe˘
(
fûe_p
& 
∑ge
, 
öt2_t
 
¶Ÿid_t
,

486 
uöt4_t
 
ªc_∑ge_cou¡
);

487 
rc_t
 
_åunˇã_œrge
(
fûe_p
& 
∑ge
, 
öt2_t
 
¶Ÿid_t
, 
uöt4_t
 
amou¡
);

488 
smsize_t
 
_•a˚_œ°_∑ge
(smsize_à
ªc_sz
);

489 
smsize_t
 
_byãs_œ°_∑ge
(smsize_à
ªc_sz
);

491 
	g¥iv©e
:

493 
fûe_m
(const file_m&);

494 
	gfûe_m
& 
	g›î©‹
=(c⁄° 
fûe_m
&);

498 ˛as†
	cfûe_mrbt_p
 : 
public
 
fûe_p
 {

499 
‰õnd
 
˛ass
 
fûe__m
;

500 
‰õnd
 
˛ass
 
	mpö_i
;

502 
	mpublic
:

504 íum { 
d©a_sz
 = 
fûe_p
::d©a_sz - 
°©ic_Æign
<(
Õid_t
)>::
vÆue
 };

506 
MAKEPAGE
(
fûe_mrbt_p
, 
fûe_p
, 1);

508 
rc_t
 
£t_ow√r
(c⁄° 
Õid_t
& 
√w_ow√r
);

509 
rc_t
 
	$gë_ow√r
(
Õid_t
 &
ow√r
) const;

511 
ªcÊags_t
 
	`choo£_ªc_im∂emíèti⁄
(

512 
uöt4_t
 
e°_hdr_Àn
,

513 
smsize_t
 
e°_d©a_Àn
,

514 
smsize_t
& 
ªc_size
);

516 
rc_t
 
	`shi·
(
¶Ÿid_t
 
¢um
, 
fûe_mrbt_p
* 
rsib
);

517 
	}
};

519 
ölöe
 
rc_t
 
	gfûe_mrbt_p
::
	$£t_ow√r
(c⁄° 
Õid_t
& 
ow√r
)

521 
cvec_t
 
ow√r_vec
;

522 
ow√r_vec
.
	`put
(&
ow√r
, (
Õid_t
));

523 
	`W_DO
(
fûe_p
::
	`ovîwrôe
(0, (
fûe_p_hdr_t
), 
ow√r_vec
));

525  
RCOK
;

526 
	}
}

528 
ölöe
 
rc_t
 
	gfûe_mrbt_p
::
	$gë_ow√r
(
Õid_t
& 
ow√r
) const

530 
ow√r
 = *((
Õid_t
*)(((*)
fûe_p
::
	`tu∂e_addr
(0))+(
fûe_p_hdr_t
)));

532  
RCOK
;

533 
	}
}

535 
ölöe
 
boﬁ
 
	gfûe_p
::
	$is_fûe_mrbt_p
() const

538 
	`w_as£π3
(
	`èg
()&(
t_fûe_mrbt_p
|
t_lgd©a_p
|
t_lgödex_p
));

539  (
	`èg
()&
t_fûe_mrbt_p
) != 0;

540 
	}
}

543 
ölöe
 
boﬁ
 
	gfûe_p
::
	$is_fûe_p
() const

546 
	`w_as£π3
(
	`èg
()&(
t_fûe_p
|
t_lgd©a_p
|
t_lgödex_p
));

547  (
	`èg
()&
t_fûe_p
) != 0;

548 
	}
}

550 
ölöe
 
rc_t


551 
	gfûe_p
::
	$de°roy_ªc
(
¶Ÿid_t
 
idx
)

553  
∑ge_p
::
	`m¨k_‰ì
(
idx
);

554 
	}
}

556 
ölöe
 
rc_t


557 
	gfûe_p
::
	$•li˚_hdr
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
, c⁄° 
vec_t
& 
d©a
)

559 
ªc‹d_t
* 
ªc
;

560 
rc_t
 
rc
 = 
	`gë_ªc
(
idx
, 
ªc
);

561 i‡(! 
rc
.
	`is_îr‹
()) {

562 
ba£
 = 
ªc
->
	`hdr
() - (*)Ñec;

563 
rc
 = 
∑ge_p
::
	`•li˚
(
idx
, 
ba£
 + 
°¨t
, 
Àn
, 
d©a
);

565  
rc
.
	`ª£t
();

566 
	}
}

	@src/sm/file_s.h

30 #i‚de‡
FILE_S_H


31 
	#FILE_S_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 
	gw_ba£_t
::
	tuöt8_t
 
	t˛u°_id_t
;

43 
˛ass
 
	gfûe_p
;

45 
	epg_pﬁicy_t
 {

46 
	mt_≠≥nd
 = 0x01,

47 
	mt_ˇche
 = 0x02,

48 
	mt_com∑˘
 = 0x04

66 
	eªcÊags_t
 {

67 
	mt_badÊag
 = 0x00,

68 
	mt_f‹w¨droŸ
 = 0x01,

69 
	mt_f‹w¨dd©a
 = 0x02,

70 
	mt_smÆl
 = 0x04,

71 
	mt_œrge_0
 = 0x08,

72 
	mt_œrge_1
 = 0x10,

73 
	mt_œrge_2
 = 0x20

76 
	sª˘ag_t
 {

77 
uöt2_t
 
	mhdr_Àn
;

78 
uöt2_t
 
	mÊags
;

79 
smsize_t
 
	mbody_Àn
;

83 ˛as†
	cªc‹d_t
 {

84 
‰õnd
 
˛ass
 
	mfûe_m
;

85 
‰õnd
 
˛ass
 
	mfûe_p
;

86 
‰õnd
 
˛ass
 
	mpö_i
;

87 
‰õnd
 
˛ass
 
	mss_m
;

88 
	mpublic
:

89 íum {
max_Àn
 = 
smÀvñ_0
::
max_ªc_Àn
 };

91 
ª˘ag_t
 
	gèg
;

92 
	göfo
[
ALIGNON
];

94 
	$ªc‹d_t
(Ë{
	}
};

95 
boﬁ
 
	$is_œrge
() const;

96 
boﬁ
 
	$is_smÆl
() const;

97 
	$œrge_im∂
() const;

99 
smsize_t
 
	$hdr_size
() const;

100 
smsize_t
 
	$body_size
() const;

102 c⁄° * 
	$hdr
() const;

103 c⁄° * 
	$body
() const;

105 
	$body_off£t
() const {

106  
	`w_off£tof
(
ªc‹d_t
,
öfo
)+
	`Æign
(
èg
.
hdr_Àn
);

107 
	}
}

109 
Õid_t
 
	$pid_c⁄èöög
(
smsize_t
 
off£t
, smsize_t& 
°¨t_byã
, c⁄° 
fûe_p
& 
∑ge
) const;

110 
¥iv©e
:

113 
smsize_t
 
	$∑ge_cou¡
() const;

114 
Õid_t
 
	$œ°_pid
(c⁄° 
fûe_p
& 
∑ge
) const;

115 
	}
};

121 
	sfûe_p_hdr_t
 {

122 
˛u°_id_t
 
	m˛u°î
;

127 
ölöe
 c⁄° * 
	gªc‹d_t
::
	$hdr
() const

129  
öfo
;

130 
	}
}

132 
ölöe
 
boﬁ
 
	gªc‹d_t
::
	$is_œrge
() const

134  (
èg
.
Êags
 & (
t_œrge_0
 | 
t_œrge_1
 | 
t_œrge_2
)) != 0;

135 
	}
}

137 
ölöe
 
	gªc‹d_t
::
	$œrge_im∂
() const

139 ()(
èg
.
Êags
 & (
t_œrge_0
 | 
t_œrge_1
 | 
t_œrge_2
))) {

140 ()
t_œrge_0
:  0;

141 ()
t_œrge_1
:  1;

142 ()
t_œrge_2
:  2;

147 
	}
}

149 
ölöe
 
boﬁ
 
	gªc‹d_t
::
	$is_smÆl
() const

151  (
èg
.
Êags
 & 
t_smÆl
) != 0;

152 
	}
}

154 
ölöe
 c⁄° * 
	gªc‹d_t
::
	$body
() const

156  
öfo
 + 
	`Æign
(
èg
.
hdr_Àn
);

157 
	}
}

159 
ölöe
 
smsize_t
 
	gªc‹d_t
::
	$hdr_size
() const

161  
èg
.
hdr_Àn
;

162 
	}
}

164 
ölöe
 
smsize_t
 
	gªc‹d_t
::
	$body_size
() const

166  
èg
.
body_Àn
;

167 
	}
}

	@src/sm/histo.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#HISTO_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄
 "histo.h"

63 
	~<hi°o.h
>

64 
	~<vﬁ.h
>

71 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

72 
	gSórchabÀHóp
<
	gT
, 
	gCmp
>::
	$SórchabÀHóp
(c⁄° 
Cmp
& 
cmpFun˘i⁄
,

73 
öôülNumEÀmíts
)

74 : 
Hóp
<
T
,
Cmp
>(
cmpFun˘i⁄
, 
öôülNumEÀmíts
)

76 
	}
}

78 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

79 
	gSórchabÀHóp
<
	gT
, 
	gCmp
>::
	$Sórch
(
i
, c⁄° 
T
& 
t
)

81 
	`w_as£π3
(
	`HópPr›îty
(0));

82 
	`DBGTHRD
(<<"Sórch sèπögáà" << 
i


83 << ",ÇumEÀmíts=" << 
numEÀmíts


85 if(
i
 > 
numEÀmíts
-1)  -1;

87 
∑ª¡
 = 
i
;

89 i‡(
∑ª¡
 >0 && (
	`RightSiblög
’¨ítË< 
numEÀmíts
)) {

90 
	`DBGTHRD
(<<"checkÑighàsiblög: " << 
	`RightSiblög
(
∑ª¡
));

91 i‡(
cmp
.
	`ge
(
ñemíts
[
	`RightSiblög
(
∑ª¡
)], 
t
)) {

92  
	`RightSiblög
(
∑ª¡
);

96 
	`DBGTHRD
(<<"∑ª¡=" << 
∑ª¡
);

97 i‡(
cmp
.
	`ge
(
ñemíts
[
∑ª¡
], 
t
)) {

98 
	`DBGTHRD
(<<"Le·Chûd’¨ít)=" << 
	`Le·Chûd
(
∑ª¡
)

99 << "ÇumEÀmít†" << 
numEÀmíts
);

100 
chûd
 = 
	`Le·Chûd
(
∑ª¡
);

101 
chûd
 < 
numEÀmíts
) {

102 
	`DBGTHRD
(<<"chûd=" << 
chûd
);

103 i‡(
cmp
.
	`ge
(
ñemíts
[
chûd
], 
t
)) {

104 
	`DBGTHRD
(<<"èkêchûd=" << 
chûd
);

105 
∑ª¡
 = 
chûd
;

107 
chûd
 = 
	`RightSiblög
(child);

108 
	`DBGTHRD
(<<"åy RightSiblög:=" << 
chûd
);

109 if((
chûd
 < 
numEÀmíts
) &&

110 (
cmp
.
	`ge
(
ñemíts
[
chûd
], 
t
)) ) {

111 
∑ª¡
 = 
chûd
;

112 
	`DBGTHRD
(<<"èkêchûd=" << 
∑ª¡
);

114  
∑ª¡
;

117 
chûd
 = 
	`Le·Chûd
(
∑ª¡
);

119  
∑ª¡
;

121 
	`DBGTHRD
(<<"∑ª¡=" << 
∑ª¡
);

123 
	}
}

125 
	gãm∂©e
<
˛ass
 
	gT
, cœs†
	gCmp
>

126 
	gSórchabÀHóp
<
	gT
, 
	gCmp
>::
	$M©ch
(c⁄° 
T
& 
t
) const

128 
	`w_as£π3
(
	`HópPr›îty
(0));

129 
i
 = 0; i < 
numEÀmíts
; i++) {

130 i‡(
cmp
.
	`m©ch
(
ñemíts
[
i
], 
t
)) {

131  
i
;

135 
	}
}

137 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
,

138 c⁄° 
	gSórchabÀHóp
<
	gpgöfo_t
, 
	ghi°oid_com∑ª_t
> &
	gsh
)

140 
	gsh
.
Pröt
(
o
);

141  
	go
;

144 #ifde‡
EXPLICIT_TEMPLATE


145 
˛ass
 
	ghi°oid_t
;

146 
ãm∂©e
 
˛ass
 
	gHóp
<
	gpgöfo_t
, 
	ghi°oid_com∑ª_t
>;

147 
ãm∂©e
 
˛ass
 
	gSórchabÀHóp
<
	gpgöfo_t
, 
	ghi°oid_com∑ª_t
>;

148 
ãm∂©e
 
˛ass
 
	gw_hash_t
<
	ghi°oid_t
, 
	gocc_rwlock
, 
	g°id_t
>;

149 
ãm∂©e
 
˛ass
 
	gw_hash_i
<
	ghi°oid_t
, 
	gocc_rwlock
, 
	g°id_t
>;

150 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	ghi°oid_t
, 
	gocc_rwlock
>;

151 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	ghi°oid_t
, 
	gocc_rwlock
>;

153 
˛ass
 
	tw_hash_i
<
	thi°oid_t
, 
	tocc_rwlock
, 
	t°id_t
> 
	tw_hash_i_hi°oid_t_°id_t_ôî©‹
;

157 íum { 
	mroŸ
 = 0,

158 
	m∑ges_ö_hóp
 = 20,

159 
	mbuckës_ö_èbÀ
 = 11,

160 
	mmax_°‹es_ö_èbÀ
 = 33 };

176 
queue_ba£d_block_lock_t
 
	ghi°oid_t
::
hèb_muãx_wrôî
;

177 
occ_rwlock
 
	ghi°oid_t
::
hèb_muãx
;

179 
	gw_hash_t
<
	ghi°oid_t
, 
	gocc_rwlock
, 
	g°id_t
> * hi°oid_t::
hèb
 = 
NULL
;

180 
	ghi°oid_t
::
öôülized
 = 0;

182 
NORET


183 
	ghi°oid_t
::
	$hi°oid_t
 (
°id_t
 
s
)

184 : 
	`cmp
(
s
),

185 
	$ªfcou¡
(0)

187 
	`DBGTHRD
(<<"¸óã hi°oid_àf‹ st‹ê" << 
s


188 << "Ñëu∫†this=" << 
this
);

189 
pghóp
 = 
√w
 
SórchabÀHóp
<
pgöfo_t
, 
hi°oid_com∑ª_t
>(

190 
cmp
, 
∑ges_ö_hóp
);

191 
	`w_as£π2
(!
	`_ö_hash_èbÀ
());

192 
	}
}

194 
NORET


195 
	ghi°oid_t
::~
	$hi°oid_t
 ()

197 
	`DBGTHRD
(<<"de°ru˘ hi°oid_àf‹ st‹ê" << 
cmp
.
key


198 << " de°royögÅhis=" << 
this
);

199 
	`w_as£π3
(!
	`_ö_hash_èbÀ
());

200 
	`w_as£π1
(
ªfcou¡
 == 0);

201 
dñëe
 
pghóp
;

202 
pghóp
 = 0;

203 
	}
}

205 
rc_t
 
	ghi°oid_t
::
	$öôülize_èbÀ
()

207 
	`w_as£π1
(
hèb
 =
NULL
);

208 
	`w_as£π0
(
öôülized
==0);

209 
hèb
 = 
√w
 
w_hash_t
<
hi°oid_t
, 
occ_rwlock
, 
°id_t
>–
buckës_ö_èbÀ
,

210 
	`W_HASH_ARG
(
hi°oid_t
, 
cmp
.
key
, 
lök
), &
hèb_muãx
);

212 if(
hèb
Ë
öôülized
++;

213  
	`MAKERC
(!
hèb
, 
eOUTOFMEMORY
);

214 
	}
}

217 
	ghi°oid_t
::
	$de°roy_èbÀ
()

225 
	`CRITICAL_SECTION
(
cs
, 
hèb_muãx_wrôî
);

227 
hèb_muãx
.
	`acquúe_wrôe
();

228 
hi°oid_t
* 
	`h
(
NULL
);

229 
w_hash_i_hi°oid_t_°id_t_ôî©‹
 
	`ôî
(*
hèb
);

231 (
h
 = 
ôî
.
	`√xt
())) {

232 
boﬁ
 
gŸô
 = 
Ál£
;

233 
h
->
	`_gøb_muãx_c⁄d
(
gŸô
);

234 if(
gŸô
) {

235 
	`w_as£π1
(
h
->
ªfcou¡
 == 0);

236 
	`DBGTHRD
(<<"ªmovög " << *
h
);

237 
	`w_as£π1
(
h
->
	`_ö_hash_èbÀ
());

238 
	`w_as£π1
–
hèb
->
	`num_membîs
() >= 1);

239 
hèb
->
	`ªmove
(
h
);

240 
	`w_as£π2
(!
h
->
	`_ö_hash_èbÀ
());

241 
h
->
	`_ªÀa£_muãx
();

242 
dñëe
 
h
;

245 
	`W_FATAL
(
fcINTERNAL
);

249 
hèb_muãx
.
	`ªÀa£_wrôe
();

252 
	`w_as£π1
(
hèb
->
	`num_membîs
() == 0);

253 
dñëe
 
hèb
;

254 
hèb
 = 
NULL
;

255 
öôülized
--;

256 
	`w_as£π0
(
öôülized
==0);

257 
	}
}

260 
	ghi°oid_t
::
	$_vi˘imize
(
howm™y
)

265 
	`DBGTHRD
(<<"_vi˘imizê" << 
howm™y
 );

271 
w_hash_i_hi°oid_t_°id_t_ôî©‹
 
	`ôî
(*
hèb
);

273 
hi°oid_t
 *
h
 = 0;

274  (
h
 = 
ôî
.
	`√xt
()) ) {

275 
boﬁ
 
gŸô
=
Ál£
;

276 
h
->
	`_gøb_muãx_c⁄d
(
gŸô
);

277 if(
gŸô
) {

280 if((
h
->
ªfcou¡
 =0Ë&& h->
	`_ö_hash_èbÀ
())

282 
	`DBGTHRD
(<<"dñëög " << 
h
);

283 
	`w_as£π1
–
hèb
->
	`num_membîs
() >= 1);

284 
hèb
->
	`ªmove
(
h
);

285 
	`w_as£π1
(!
h
->
	`_ö_hash_èbÀ
());

286 
h
->
	`_ªÀa£_muãx
();

287 
	`DBGTHRD
(<<"dñëög " << 
h
);

288 
dñëe
 
h
;

289 if(--
howm™y
 == 0) ;

291 
h
->
	`_ªÀa£_muãx
();

295 
	}
}

297 
boﬁ
 
	$hi°o_pö_if_pö√d
(vﬁ©ûe* 
ªfcou¡
) {

298 
ﬁd_pö_˙t
 = *
ªfcou¡
;

300 if(
ﬁd_pö_˙t
 == 0)

301  
Ál£
;

302 
√w_pö_˙t
 = 
	`©omic_ˇs_32
((*Ë
ªfcou¡
, 
ﬁd_pö_˙t
, old_pin_cnt+1);

303 if(
√w_pö_˙t
 =
ﬁd_pö_˙t
)

304  
åue
;

306 
ﬁd_pö_˙t
 = 
√w_pö_˙t
;

308 
	}
}

316 
hi°oid_t
*

317 
	ghi°oid_t
::
	$c›y
() const

319 
	`DBGTHRD
(<<"ö¸Ñefcou¡ f‹ st‹ê" << 
cmp
.
key


320 << " from " << 
ªfcou¡
);

321 
hi°oid_t
 *
I
 = (hi°oid_à*Ë
this
;

322 if(!
	`hi°o_pö_if_pö√d
(&
I
->
ªfcou¡
)) {

323 
I
->
	`_gøb_muãx
();

324 
	`©omic_öc
(
I
->
ªfcou¡
);

325 
I
->
	`_ªÀa£_muãx
();

327  
I
;

328 
	}
}

330 
hi°oid_t
*

331 
	ghi°oid_t
::
	$acquúe
(c⁄° 
°id_t
& 
s
)

333 
	`DBGTHRD
(<<"acquúêhi°oid f‹ st‹ê" << 
s
);

334 
hèb_muãx
.
	`acquúe_ªad
();

335 
hi°oid_t
 *
h
 = 
hèb
->
	`lookup
(
s
);

336 if(
h
) {

337 
	`DBGTHRD
(<<"exi°ög st‹ê" << 
s
);

338 
boﬁ
 
pö√d
 = 
	`hi°o_pö_if_pö√d
(&
h
->
ªfcou¡
);

339 if(!
pö√d
) {

340 
h
->
	`_gøb_muãx
();

341 
	`w_as£π1
(
h
->
ªfcou¡
 >= 0);

342 
	`DBGTHRD
(<<"ö¸Ñefcou¡ f‹ " << 
s


343 << " from " << 
h
->
ªfcou¡
);

344 
	`©omic_öc
(
h
->
ªfcou¡
);

346 
hèb_muãx
.
	`ªÀa£_ªad
();

347 if(!
pö√d
)

348 
h
->
	`_ªÀa£_muãx
();

353 
hèb_muãx
.
	`ªÀa£_ªad
();

355 if(
hèb
->
	`num_membîs
(Ë>
max_°‹es_ö_èbÀ
) {

359 
	`CRITICAL_SECTION
(
cs
, 
hèb_muãx_wrôî
);

361 
hèb_muãx
.
	`acquúe_wrôe
();

363 if(
hèb
->
	`num_membîs
(Ë>
max_°‹es_ö_èbÀ
)

369 
	`_vi˘imize
(1 + (
hèb
->
	`num_membîs
(Ë- 
max_°‹es_ö_èbÀ
));

371 
hèb_muãx
.
	`ªÀa£_wrôe
();

375 
	`DBGTHRD
(<<"construct histoid_t");

376 
h
 = 
√w
 
	`hi°oid_t
(
s
);

377 
	`w_as£π2
(
h
->
ªfcou¡
 == 0);

378 
	`w_as£π2
(!
h
->
	`_ö_hash_èbÀ
());

383 
	`CRITICAL_SECTION
(
cs
, 
hèb_muãx_wrôî
);

385 
hèb_muãx
.
	`acquúe_wrôe
();

387 
hèb
->
	`push
(
h
);

388 
	`w_as£π2
(
h
->
	`_ö_hash_èbÀ
());

389 
hèb_muãx
.
	`ªÀa£_wrôe
();

391 
h
->
	`_gøb_muãx
();

393 
	`DBGTHRD
(<<"ö¸Ñefcou¡ f‹ " << 
s


394 << " from " << 
h
->
ªfcou¡


395 << " f‹ " << 
h
);

398 
	`w_as£π2
(
h
->
ªfcou¡
 == 0);

399 
√w_cou¡
 = 
	`©omic_öc_nv
(
h
->
ªfcou¡
);

400 
	`w_as£π0
(
√w_cou¡
 == 1);

402 
h
->
	`_ö£π_°‹e_∑ges
(
s
);

403 
h
->
	`_ªÀa£_muãx
();

405 
	`w_as£π2
(
h
);

406 
	`w_as£π2
(
h
->
ªfcou¡
 >= 1);

407 
	`DBGTHRD
(<<"acquúed, st‹e=" << 
s


408 << "Åhis=" << 
h


409 << "Ñefcou¡" << 
h
->
ªfcou¡


411  
h
;

412 
	}
}

415 
	ghi°oid_t
::
	$_ö£π_°‹e_∑ges
(c⁄° 
°id_t
& 
s
)

417 
	`DBGTHRD
(<<"_ö£π_°‹e_∑ge†hi°oid " << 
this
 << " f‹ st‹ê" << 
s
);

418 
	`w_as£π3
(
	`_ö_hash_èbÀ
());

419 
	`w_as£π3
(
	`_have_muãx
());

420 
	`w_as£π3
(
pghóp
->
	`NumEÀmíts
() == 0);

421 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

426 
pgöfo_t
 
∑ges
[
∑ges_ö_hóp
];

427 
num∑ges
 = 
∑ges_ö_hóp
;

428 
	`W_COERCE
(
io
->
	`öô_°‹e_hi°o
(&
hi°ogøm
, 
s
, 
∑ges
, 
num∑ges
));

430 
	`DBGTHRD
(<<"_ö£π_°‹e_∑ge† " << 
this
 << " f‹ st‹ê" << 
cmp
.
key
 );

431 
	`DBGTHRD
(<<"io_m sˇ¿found " << 
num∑ges
 << "Öages" );

439 
pgöfo_t
 
p
;

440 
i
=0; i<
num∑ges
; i++) {

441 
	`DBGTHRD
(<<"∑gêödex." << 
i
 << "ıid " << 
∑ges
[i].
	`∑ge
()

442 << " s∑˚ i†" << 
∑ges
[
i
].
	`•a˚
());

443 
	`DBGTHRD
(<<"pgheap.AddElementDontHeapifyÖage "

444 <<
∑ges
[
i
].
	`∑ge
(Ë<< " s∑˚ " <<Öages[i].
	`•a˚
());

445 
pghóp
->
	`AddEÀmítD⁄tHópify
(
∑ges
[
i
]);

447 
pghóp
->
	`Hópify
();

448 
	`w_as£π3
(
pghóp
->
	`NumEÀmíts
(Ë=
num∑ges
);

449 
	`w_as£π3
(
	`_have_muãx
());

450 
	}
}

452 
boﬁ


453 
	ghi°oid_t
::
	$ªÀa£
()

455 
	`DBGTHRD
(<<"release: decrÑefcount for store "

456 << 
cmp
.
key


457 << "Åhis=" << 
this


458 << " from " << 
ªfcou¡
);

460 
√w_cou¡
 = 
	`©omic_dec_nv
(
ªfcou¡
);

461 
	`w_as£π0
(
√w_cou¡
 >= 0);

462 
boﬁ
 
dñëeô
 = ((
√w_cou¡
==0Ë&& !
	`_ö_hash_èbÀ
());

463  
dñëeô
;

464 
	}
}

466 #i‡
W_DEBUG_LEVEL
 > 2

467 
	#TRACEIT


	)

469 #ifde‡
TRACEIT


470 
	såa˚_öfo
 {

471 
	mlöe
;

472 
	mmembîs
;

473 
hi°oid_t
 *
	mh
;

478 #ifde‡
TRACEIT


479 c⁄° 
	gTRACE_NUM
=10;

480 
__thªad
 
åa˚_öfo
 
	gTRACE_LINE
[
TRACE_NUM
];

481 
__thªad
 
	gTRACE_IDX
=0;

482 
	#T
(
l
,
c
,
h
)\

483 { 
åa˚_öfo
 &
x
=
TRACE_LINE
[
TRACE_IDX
]; \

484 
x
.
löe
=
l
; x.
membîs
=
c
; x.
h
=h; 
TRACE_IDX
++; }

	)

486 
	#T
(
l
,
c
,
h
)

	)

490 
	ghi°oid_t
::
	$de°royed_°‹e
(c⁄° 
°id_t
&
s
, 
sdesc_t
*
sd
)

492 
	`DBGTHRD
(<<"hi°oid_t::de°royed_°‹ê" << 
s
);

494 
boﬁ
 
suc˚ss
 = 
Ál£
;

495 #ifde‡
TRACEIT


496 
TRACE_IDX
=0;

498 !
suc˚ss
) {

501 
	`CRITICAL_SECTION
(
cs
, 
hèb_muãx_wrôî
);

503 
hèb_muãx
.
	`acquúe_wrôe
();

504 
hi°oid_t
 *
h
 = 
hèb
->
	`lookup
(
s
);

505 
	`T
(
__LINE__
, 
hèb
->
	`num_membîs
(), 
h
);

506 if(
h
) {

507 
	`DBGTHRD
(<<"looku∞found " << 
h


508 << "Ñefcou¡ " << 
h
->
ªfcou¡
);

510 
h
->
	`_gøb_muãx_c⁄d
(
suc˚ss
);

511 if(
suc˚ss
) {

512 #i‡
W_DEBUG_LEVEL
 >0

516 if(
sd
)

517 
	`w_as£π1
(
h
->
ªfcou¡
 == 1);

519 
	`w_as£π1
(
h
->
ªfcou¡
 == 0 || h->refcount == 1);

521 
	`T
(
__LINE__
, 
hèb
->
	`num_membîs
(), 
h
);

523 
	`DBGTHRD
(<<"ªmovög " << 
h
 );

525 
	`w_as£π1
–
h
->
	`_ö_hash_èbÀ
());

526 
	`T
(
__LINE__
, 
hèb
->
	`num_membîs
(), 
h
);

527 
	`w_as£π1
–
hèb
->
	`num_membîs
() >= 1);

528 
hèb
->
	`ªmove
(
h
);

529 
	`T
(
__LINE__
, 
hèb
->
	`num_membîs
(), 
h
);

530 
	`w_as£π2
–!
h
->
	`_ö_hash_èbÀ
());

531 
h
->
	`_ªÀa£_muãx
();

534 
suc˚ss
 = 
åue
;

540 
hèb_muãx
.
	`ªÀa£_wrôe
();

541 
cs
.
	`exô
();

543 if(
h
) {

544 
	`w_as£π1
–!
h
->
	`_ö_hash_èbÀ
());

545 
	`DBGTHRD
(<<"h=" << *
h
);

546 if(
sd
 || 
smÀvñ_0
::
	`ö_ªcovîy
() ) {

547 
	`w_as£π1
(
h
->
ªfcou¡
 >= 1);

548 if(
h
->
	`ªÀa£
()) {

549 
	`DBGTHRD
(<<"dñëög " << 
h
);

550 
dñëe
 
h
;

552 
	`w_as£π3
(0);

554 } if(
h
->
ªfcou¡
 == 0) {

555 
	`DBGTHRD
(<<"dñëög " << 
h
);

556 
dñëe
 
h
;

570 
	`T
(
__LINE__
, 
hèb
->
	`num_membîs
(), 
h
);

571 #i‡
W_DEBUG_LEVEL
 >= 0

572 
	`Ârötf
(
°dîr
,

574 
h
->
ªfcou¡
 ,

575 
sd
,

576 
smÀvñ_0
::
	`ö_ªcovîy
()

581 
	`DBGTHRD
(<<"ROLLBACK! c™'àdñëêh" << 
h
);

584 
	`w_as£π1
(
suc˚ss
);

586 if(
sd
) {

588 
sd
->
	`add_°‹e_utûiz©i⁄
(0);

590 
	}
}

602 
	ghi°oid_t
::
	$__föd_∑ge_ö_hóp
(

603 
boﬁ
 
ö£π_if_nŸ_found
,

604 c⁄° 
shpid_t
& 
pid


607 
	`DBGTHRD
(<<"thi†" << 
this
 << " __föd_∑ge_ö_hó∞" << 
pid
 );

609 
hook
;

611 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

612 
hook
 = 
roŸ
; hook < 
pghóp
->
	`NumEÀmíts
(); hook++) {

613 
	`DBG
(<<"checkögáàhook=" << 
hook


614 << "Öage=" << 
pghóp
->
	`VÆue
(
hook
).
	`∑ge
() );

615 if(
pghóp
->
	`VÆue
(
hook
).
	`∑ge
(Ë=
pid
) {

616 
	`DBGTHRD
(<<"gøbbög hook " << 
hook


617 << "Öagê" << 
pghóp
->
	`VÆue
(
hook
).
	`∑ge
()

618 << " s∑˚ " << 
pghóp
->
	`VÆue
(
hook
).
	`•a˚
()

620  
hook
;

623 if(
ö£π_if_nŸ_found
) {

625 
pgöfo_t
 
	`öfo
(
pid
,0);

626 
	`w_as£π3
(
	`_have_muãx
());

627 
	`DBG
(<<"insert ifÇot found");

628 
	`ö°Æl
(
öfo
);

631  
nohook
;

635 
	`W_FATAL
(
eINTERNAL
);

637 
	}
}

658 
	ghi°oid_t
::
	$_föd_∑ge_ªtu∫_öfo
(

659 
boﬁ
 
öô_pgöfo_if_nŸ_found
,

660 c⁄° 
shpid_t
& 
pid
,

661 
boﬁ
& 
found_ö_èbÀ
,

662 
pgöfo_t
& 
ªsu…


666 
	`_gøb_muãx
();

667 
hook
 = 
	`__föd_∑ge_ö_hóp
(
Ál£
, 
pid
);

668 
	`w_as£π3
(
	`_have_muãx
());

670 
found_ö_èbÀ
 = 
	`boﬁ
(
hook
>=0);

671 if(
hook
 < 0 && 
öô_pgöfo_if_nŸ_found
) {

672 
ªsu…
 = 
	`pgöfo_t
(
pid
,0);

673 } if(
hook
 >= 0 ) {

674 
ªsu…
 = 
pghóp
->
	`RemoveN
(
hook
);

675 
	`DBGTHRD
(<<"thi†" << 
this
 << " _find_page_return_info,Ögheap.RemoveNÖage "

676 <<
ªsu…
.
	`∑ge
()

677 << " s∑˚ " << 
ªsu…
.
	`•a˚
());

678 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

680 #i‡
W_DEBUG_LEVEL
 > 1

681 if(
found_ö_èbÀ
)

682 
	`w_as£π2
(
pghóp
->
	`M©ch
(
ªsu…
) == -1);

684 
	`w_as£π2
(
pghóp
->
	`M©ch
(
	`pgöfo_t
(
pid
,0)) == -1);

686 
	`_ªÀa£_muãx
();

687 
	}
}

689 
__thªad
 såu˘ { 
exäum_t
 
	me
; 
¢um_t
 
	ms
; } 
	gœ°_exã¡
 = {0,0};

695 
w_rc_t


696 
	ghi°oid_t
::
	$föd_∑ge
(

697 
smsize_t
 
•a˚_√eded
,

698 
boﬁ
& 
found
,

699 
pgöfo_t
& 
öfo
,

700 
fûe_p
* 
∑gï
,

701 
¶Ÿid_t
& 
idx
,

702 c⁄° 
boﬁ
 
bIgn‹eP¨íts


705 
	`DBGTHRD
(<<"hi°oid_t::föd_∑gêö st‹ê" << 
cmp
.
key


706 << " w/áàÀa° " << 
•a˚_√eded
 << " free bytes "

707 << "Ñefcou¡=" << 
ªfcou¡


710 
	`w_as£π1
(
ªfcou¡
 >= 0);

712 
pgöfo_t
 
	`tmp
(0, 
•a˚_√eded
);

713 
skù
 = 
roŸ
;

714 
hook
;

716 
found
 = 
Ál£
;

718 !
found
) {

719 
	`_gøb_muãx
();

720 
hook
 = 
pghóp
->
	`Sórch
(
skù
, 
tmp
);

721 
	`DBGTHRD
(<<"SórchÑëu∫†hook " << 
hook
);

722 if(
hook
 >
roŸ
) {

724 
	`w_as£π3
(
	`_have_muãx
());

725 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

726 
öfo
 = 
pghóp
->
	`RemoveN
(
hook
);

727 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

728 
	`DBGTHRD
(<<"pgheap.RemoveNÖage "

729 <<
öfo
.
	`∑ge
(Ë<< " s∑˚ " << info.
	`•a˚
());

731 
	`_ªÀa£_muãx
();

733 
	`DBGTHRD
(<<"hi°oid_t::föd_∑gêFOUND " << 
öfo
.
	`∑ge
());

734 
boﬁ
 
suc˚ss
=
Ál£
;

735 
shpid_t
 
pg
 = 
öfo
.
	`∑ge
();

736 
exäum_t
 
ext
 = 
vﬁ_t
::
	`pid2ext
(
pg
);

738 
Õid_t
 
	`pid
(
cmp
.
key
, 
pg
);

750 
suc˚ss
 = 
åue
;

751 if(
suc˚ss
) {

752 
œ°_exã¡
.
e
 = 
ext
;

753 
œ°_exã¡
.
s
 = 
cmp
.
key
.
°‹e
;

754 #i‡
W_DEBUG_LEVEL
 > 1

756 
	`Ârötf
(
°dîr
, "^^^ is_valid_page_of()Ñeturned false!\n");

759 
	`DBGTHRD
(<<" i†vÆidÖage:" << 
suc˚ss
);

760 if(!
suc˚ss
Ë
skù
 = 
hook
;

766 if(
suc˚ss
) {

767 
suc˚ss
=
Ál£
;

768 
	`W_DO
(
	`œtch_lock_gë_¶Ÿ
(
pg
, 
∑gï
, 
•a˚_√eded
,

769 
Ál£
,

770 
suc˚ss
, 
idx
, 
bIgn‹eP¨íts
));

771 if(
suc˚ss
) {

773 
	`w_as£π2
(
∑gï
->
	`pid
().
∑ge
 =
pg
);

774 
	`w_as£π2
(
∑gï
->
	`pid
().
	`°id
().
°‹e
 =
cmp
.
key
.store);

775 
Õid_t
 
	`pid
(
cmp
.
key
, 
∑gï
->pid().
∑ge
);

776 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
pid
, 
cmp
.
key
.
°‹e
));

779 if(
suc˚ss
) {

780 
found
 = 
åue
;

781 
	`w_as£π2
(
∑gï
->
	`is_fixed
());

782 
	`w_as£π2
(
idx
 != 0);

783 
	`w_as£π2
(
cmp
.
key
.
°‹e
 != 0);

784 
	`w_as£π2
(
∑gï
->
	`pid
().
∑ge
 =
pg
);

785 
	`DBGTHRD
(<<"hi°oid_t::föd_∑gêFOUND " << 
∑gï
->
	`pid
().
∑ge
);

787 
Õid_t
 
	`pid
(
cmp
.
key
, 
∑gï
->pid().
∑ge
);

788 
	`w_as£π2
(
io
->
	`is_vÆid_∑ge_of
(
pid
, 
cmp
.
key
.
°‹e
));

789  
RCOK
;

791 if(
œ°_exã¡
.
e
 =
ext
 &&Üa°_exã¡.
s
 =
cmp
.
key
.
°‹e
)

792 
œ°_exã¡
.
s
 = 
	`¢um_t
(-1);

793 
skù
 = 
hook
;

796 
	`_ªÀa£_muãx
();

798 
	`DBGTHRD
(<<"histoid_t::find_page NOT FOUND in cache");

799 
	`w_as£π3
(!
found
);

800  
RCOK
;

804 
	`W_FATAL
(
eINTERNAL
);

805  
RCOK
;

806 
	}
}

808 
w_rc_t


809 
	ghi°oid_t
::
	$œtch_lock_gë_¶Ÿ
(

810 
shpid_t
& 
shpid
,

811 
fûe_p
* 
∑gï
,

812 
smsize_t
 
•a˚_√eded
,

813 
boﬁ
 
≠≥nd_⁄ly
,

814 
boﬁ
& 
suc˚ss
,

815 
¶Ÿid_t
& 
idx
,

816 c⁄° 
boﬁ
 
bIgn‹eP¨íts


819 
suc˚ss
 = 
Ál£
;

820 
Õid_t
 
	`pid
(
cmp
.
key
, 
shpid
);

827 
°‹e_Êag_t
 
junk
 = 
°_bad
;

828 
rc_t
 
rc
 = ((
∑ge_p
 *)
∑gï
)->
	`c⁄dôi⁄Æ_fix
(
pid
,Öage_p::
t_™y_p
,

829 
LATCH_EX
, 0, 
junk
, 
åue
);

832 
	`DBGTHRD
(<<"rc=" << 
rc
);

833 if(
rc
.
	`is_îr‹
()) {

836 if(
rc
.
	`îr_num
(Ë=
smthªad_t
::
°INUSE
 ||

837 
rc
.
	`îr_num
(Ë=
smthªad_t
::
°TIMEOUT
) {

841 
	`INC_TSTAT
(
fm_∑ge_nﬁ©ch
);

842  
RCOK
;

845 
	`DBGTHRD
(<<"rc=" << 
rc
);

846 
	`INC_TSTAT
(
fm_îr‹_nŸ_h™dÀd
);

847  
	`RC_AUGMENT
(
rc
);

850 
	`w_as£π3
(
∑gï
->
	`is_fixed
());

852 if(
∑gï
->
	`pid
().
	`°id
(Ë!
cmp
.
key
)

855 
	`DBGTHRD
(<<"°id ch™gedÅÿ" << 
∑gï
->
	`pid
().
	`°id
());

857 
∑gï
->
	`unfix
();

858 
	`INC_TSTAT
(
fm_∑ge_moved
);

859  
RCOK
;

888 
rc_t
 
rc
 = 
lm
->
	`lock_f‹˚
(
pid
, 
IS
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

889 if(
rc
.
	`is_îr‹
()) {

890 
	`DBGTHRD
(<<"rc=" << 
rc
);

891 
∑gï
->
	`unfix
();

893 
	`INC_TSTAT
(
fm_∑ge_nﬁock
);

894  
RCOK
;

897 if–! 
io_m
::
	`is_vÆid_∑ge_of
(
pid
,Öid.
_°id
.
°‹e
)) {

898 
	`DBGTHRD
(<<"∑gênÿl⁄gî i¿°‹ê" << 
cmp
.
key
);

901 
∑gï
->
	`unfix
();

902 
	`INC_TSTAT
(
fm_∑ge_övÆid
);

903  
RCOK
;

906 
	`DBGTHRD
(<<"TryÅoácquire slot &Üock ");

908 
rc
 = 
∑gï
->
	`_föd_™d_lock_‰ì_¶Ÿ
(
≠≥nd_⁄ly
,

909 
•a˚_√eded
, 
idx
,

910 
bIgn‹eP¨íts
);

911 
	`DBGTHRD
(<<"rc=" <<
rc
);

913 if(
rc
.
	`is_îr‹
()) {

914 
	`DBGTHRD
(<<"rc=" << 
rc
);

916 
∑gï
->
	`unfix
();

918 i‡(
rc
.
	`îr_num
(Ë=
eRECWONTFIT
) {

919 
	`INC_TSTAT
(
fm_∑ge_fuŒ
);

920  
RCOK
;

922 } i‡(
rc
.
	`îr_num
(Ë=
ePAGECHANGED
) {

926 
	`INC_TSTAT
(
fm_∑ge_moved
);

927  
RCOK
;

929 
	`W_FATAL_MSG
(
rc
.
	`îr_num
(), << " ErrorÇot handled");

931 
	`INC_TSTAT
(
fm_îr‹_nŸ_h™dÀd
);

932  
	`RC_AUGMENT
(
rc
);

934 
	`DBGTHRD
(<<"acquúed slŸ " << 
idx
);

935 
	`INC_TSTAT
(
fm_ok
);

936 
suc˚ss
 = 
åue
;

939 
	`w_as£π2
(
∑gï
->
	`is_fixed
());

940  
RCOK
;

941 
	}
}

944 
	ghi°oid_t
::
	$ö°Æl
(c⁄° 
pgöfo_t
 &
öfo
)

946 
	`DBGTHRD
("ö°Æ»öfÿö hóp" << 
öfo
);

947 
	`w_as£π1
–
	`_ö_hash_èbÀ
() );

948 
boﬁ
 
do_ªÀa£
 = 
Ál£
;

949 
boﬁ
 
do_ö°Æl
 = 
åue
;

950 if(!
	`_have_muãx
()) {

951 
	`_gøb_muãx
();

952 
do_ªÀa£
 = 
åue
;

958 #i‡
W_DEBUG_LEVEL
 > 2

960 
pgöfo_t
 
	`tmp
(
öfo
.
	`∑ge
(), 0);

961 
	`w_as£π3
(
pghóp
->
	`M©ch
(
tmp
) == -1);

965 
	`w_as£π3
(
	`_have_muãx
());

967 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

968 
n
 = 
pghóp
->
	`NumEÀmíts
();

969 if(
n
 >
∑ges_ö_hóp
) {

972 
pgöfo_t
& 
t
 = 
pghóp
->
	`VÆue
(
n
-1);

973 if–! 
cmp
.
	`gt
(
öfo
, 
t
) ) {

974 
	`DBGTHRD
(<<"bypassing install:Çew space "

975 << 
öfo
.
	`•a˚
()

977 
t
.
	`•a˚
());

978 
do_ö°Æl
 = 
Ál£
;

980 
pgöfo_t
 
p
 = 
pghóp
->
	`RemoveN
(
n
-1);

982 if(
do_ö°Æl
) {

983 
	`DBGTHRD
(<<"pghóp.AddEÀmíà∑ge" << 
öfo
.
	`∑ge
()

984 << " s∑˚ " << 
öfo
.
	`•a˚
()

986 
pghóp
->
	`AddEÀmít
(
öfo
);

988 if(
do_ªÀa£
) {

989 
	`_ªÀa£_muãx
();

991 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

992 
	}
}

1001 
	ghi°oid_t
::
	$upd©e_∑ge
(c⁄° 
shpid_t
& 
pid
, 
smsize_t
 
amt
)

1003 
	`DBGTHRD
(<<"update_page");

1004 
	`_gøb_muãx
();

1005 
hook
 = 
	`__föd_∑ge_ö_hóp
(
åue
, 
pid
);

1009 
	`w_as£π3
(
	`_have_muãx
());

1011 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

1012 
pgöfo_t
& 
t
 = 
pghóp
->
	`VÆue
(
hook
);

1014 
	`DBGTHRD
(<<"histoid_t::update_page hook "

1015 << 
hook


1016 << "Öagê" << 
t
.
	`∑ge
()

1017 << "ámà" << 
amt
);

1019 
smsize_t
 
ﬁd
 = 
t
.
	`•a˚
();

1020 if(
amt
 !
ﬁd
) {

1021 
	`DBGTHRD
(<<"bef‹êupd©ê•a˚: " << 
t
.
	`•a˚
());

1022 
t
.
	`upd©e_•a˚
(
amt
);

1023 
	`DBGTHRD
(<<"a·î upd©ê•a˚: " << 
t
.
	`•a˚
());

1024 if(
ﬁd
 < 
amt
) {

1025 
	`DBGTHRD
(<<"pghóp.In¸ó£dN hook " << 
hook


1026 << "Öagê" << 
t
.
	`∑ge
()

1027 << " s∑˚ " << 
t
.
	`•a˚
());

1028 
pghóp
->
	`In¸ó£dN
(
hook
);

1030 
	`DBGTHRD
(<<"pghóp.De¸ó£dN hook " << 
hook


1031 << "Öagê" << 
t
.
	`∑ge
()

1032 << " s∑˚ " << 
t
.
	`•a˚
());

1033 
pghóp
->
	`De¸ó£dN
(
hook
);

1036 
	`w_as£π3
(
pghóp
->
	`HópPr›îty
(0));

1037 
	`_ªÀa£_muãx
();

1038 
	}
}

1041 
w_rc_t


1042 
	ghi°oid_t
::
	$exi°s_∑ge
(

1043 
smsize_t
 
•a˚_√eded
,

1044 
boﬁ
& 
found


1047 
•a˚_buckë_t
 
b
 = 
fûe_p
::
	`‰ì_•a˚2buckë
(
•a˚_√eded
);

1048 
	`_gøb_muãx
();

1050 
	`DBGTHRD
(<<"exi°s_∑gê°‹ê" << 
cmp
.
key
);

1051 ! (
found
 = 
hi°ogøm
.
	`exi°s
(
b
))

1052 && 
b
 < (
•a˚_num_buckës
-1)) b++;

1053 
	`_ªÀa£_muãx
();

1054  
RCOK
;

1055 
	}
}

1058 
	ghi°oid_t
::
	$buckë_ch™ge
(

1059 
smsize_t
 
ﬁd_•a˚_À·
,

1060 
smsize_t
 
√w_•a˚_À·


1063 
•a˚_buckë_t
 
ob
 = 
fûe_p
::
	`‰ì_•a˚2buckë
(
ﬁd_•a˚_À·
);

1064 
•a˚_buckë_t
 
nb
 = 
fûe_p
::
	`‰ì_•a˚2buckë
(
√w_•a˚_À·
);

1065 if(
ob
 !
nb
) {

1066 
	`_gøb_muãx
();

1067 
hi°ogøm
.
	`de¸
(
ob
);

1068 
hi°ogøm
.
	`ö¸
(
nb
);

1069 
	`_ªÀa£_muãx
();

1070 
	`DBGTHRD
(<<"ch™ged buckë" << 
hi°ogøm
 );

1072 
	}
}

1076 
	go°ªam
 &
	ghi°oid_t
::
	$¥öt
(
o°ªam
 &
o
) const

1078 
o
 << 
this
;

1079 
o
 << " key=" << 
cmp
.
key


1080 << "Ñefcou¡=" << 
ªfcou¡
;

1081 i‡(
	`_ö_hash_èbÀ
())

1082 
o
 << ", hashed";

1083 
o
 << ", #∑ges=" << 
pghóp
->
	`NumEÀmíts
();

1084 
o
 << " [" << 
hi°ogøm
 << ']';

1086  
o
;

1087 
	}
}

1089 
	go°ªam
 &
	g›î©‹
<<(o°ªam&
	go
, c⁄° 
	ghi°oid_t
&
	gh
)

1091  
	gh
.
¥öt
(
o
);

1095 
	go°ªam
 &
	ghi°oid_t
::
	$¥öt_ˇche
(
o°ªam
 &
o
, 
boﬁ
 
locked
)

1097 i‡(
öôülized
>0 && 
locked
)

1098 
hèb_muãx
.
	`acquúe_ªad
();

1100 
o
 << "HISTOID_T::PRINT_CACHE { " << 
ídl
;

1102 
o
 << "histoid_m:";

1103 i‡(
öôülized
>0)

1104 
o
 << " initialized";

1106 i‡(
hèb
) {

1107 
o
 << ' ' << 
hèb
->
	`num_membîs
(Ë<< "É¡rõs" << 
ídl
;

1109 
w_hash_i_hi°oid_t_°id_t_ôî©‹
 
	`ôî
(*
hèb
);

1110 
hi°oid_t
 *
h
;

1112 (
h
 = 
ôî
.
	`√xt
())) {

1113 i‡(
locked
)

1114 
h
->
	`_gøb_muãx
();

1115 
o
 << '\t' << *
h
 << 
ídl
;

1116 i‡(
locked
)

1117 
h
->
	`_ªÀa£_muãx
();

1120 
o
 << "END PRINT_CACHE } " << 
ídl
;

1122 i‡(
öôülized
>0 && 
locked
)

1123 
hèb_muãx
.
	`ªÀa£_ªad
();

1125  
o
;

1126 
	}
}

1128 
	ghi°oid_ªmove_t
::
	$hi°oid_ªmove_t
(
fûe_p
 &
pg
)

1129 : 
	`_found_ö_èbÀ
(
Ál£
),

1130 
	`_∑ge
(&
pg
),

1131 
	$_h
(
NULL
)

1133 
	`w_as£π2
(
_∑ge
->
	`is_fixed
());

1134 
Õid_t
 
_pid
 = 
_∑ge
->
	`pid
();

1135 
	`DBGTHRD
(<<"hi°oid_ªmove_àc⁄°ru˘‹ fromÖagê" << 
pg
.
	`pid
()

1136 << "Åhi†" << 
this
);

1137 
_h
 = 
√w
 
	`hi°oid_t
(
_pid
.
_°id
);

1138 
	`w_as£π2
(
_h
->
ªfcou¡
 == 0);

1139 
	`w_as£π1
(! 
_h
->
	`_ö_hash_èbÀ
());

1142 
_h
->
	`_föd_∑ge_ªtu∫_öfo
(
Ál£
, 
_∑ge
->
	`pid
().
∑ge
, 
_found_ö_èbÀ
, 
_öfo
);

1143 
	`w_as£π1
(! 
_h
->
	`_ö_hash_èbÀ
());

1144 
	`w_as£π1
–!
_h
->
	`_have_muãx
());

1145 
dñëe
 
_h
;

1146 
	}
}

1149 
	ghi°oid_upd©e_t
::
	$hi°oid_upd©e_t
(
sdesc_t
 *
sd
)

1150 : 
	`_found_ö_èbÀ
(
Ál£
),

1151 
	`_∑ge
(
NULL
),

1152 
	$_h
(
NULL
)

1154 
_h
 = 
sd
->
	`°‹e_utûiz©i⁄
()->
	`c›y
();

1155 
_öfo
.
	`£t
(0,0);

1156 
_ﬁd_•a˚
 = 0;

1157 
	`DBGTHRD
(<<"hi°oid_upd©e_àc⁄°ru˘‹ from sd " << *
this
);

1158 
	}
}

1161 
	ghi°oid_upd©e_t
::
	$hi°oid_upd©e_t
(
fûe_p
& 
pg
)

1162 : 
	`_found_ö_èbÀ
(
Ál£
),

1163 
	`_∑ge
(&
pg
),

1164 
	$_h
(
NULL
)

1166 
	`w_as£π3
(
_∑ge
->
	`is_fixed
());

1167 
Õid_t
 
_pid
 = 
_∑ge
->
	`pid
();

1168 
	`DBGTHRD
(<<"hi°oid_upd©e_àc⁄°ru˘‹ fromÖagê" << 
pg
.
	`pid
()

1169 << "Åhi†" << 
this
);

1171 
_h
 = 
hi°oid_t
::
	`acquúe
(
_pid
.
	`°id
());

1173 
	`w_as£π2
(
_h
->
ªfcou¡
 >= 1);

1175 
	`DBGTHRD
(<<"hi°oid_upd©e_àc⁄°ru˘‹Åhi†" << 
this
);

1176 
_h
->
	`_föd_∑ge_ªtu∫_öfo
(
åue
, 
_pid
.
∑ge
, 
_found_ö_èbÀ
, 
_öfo
);

1177 
_ﬁd_•a˚
 = 
_öfo
.
	`•a˚
();

1180 
smsize_t
 
cuºít_•a˚
 = 
pg
.
	`‰ì_•a˚4buckë
();

1181 if(
cuºít_•a˚
 !
_öfo
.
	`•a˚
()) {

1200 #i‡
W_DEBUG_LEVEL
>4

1202 (
∑ge_p
::
	`‰ì_•a˚2buckë
(
cuºít_•a˚
) ==

1203 
∑ge_p
::
	`‰ì_•a˚2buckë
(
_öfo
.
	`•a˚
()))

1205 (
∑ge_p
::
	`‰ì_•a˚2buckë
(
_öfo
.
	`•a˚
()) == 0)

1212 
_öfo
.
	`£t
(_öfo.
	`∑ge
(), (
_ﬁd_•a˚
 = 
cuºít_•a˚
));

1215 
	`DBGTHRD
(<<"hi°oid_upd©e_àc⁄°ru˘‹Åhi†" << 
this
 << ":" << *this);

1216 
	}
}

1218 
NORET


1219 
	ghi°oid_upd©e_t
::~
	$hi°oid_upd©e_t
()

1221 
	`DBGTHRD
(<<"~histoid_update_t");

1222 
	`DBGTHRD
(<<"DESTRUCT hi°oid_upd©e_t: " << *
this
);

1223 if(
_h
) {

1224 if(
_found_ö_èbÀ
) {

1226 
	`w_as£π3
(!
_h
->
	`_have_muãx
());

1227 if(
_∑ge
 && _∑ge->
	`is_fixed
()) {

1228 
	`w_as£π3
(
_öfo
.
	`∑ge
(Ë=
_∑ge
->
	`pid
().
∑ge
);

1230 
	`DBGTHRD
(<<"ˇŒög buckë ch™gêf‹Öagê" << 
_öfo
.
	`∑ge
());

1231 
_h
->
	`buckë_ch™ge
(
_ﬁd_•a˚
, 
_öfo
.
	`•a˚
());

1232 
	`DBGTHRD
(<<"destructor,Érror case, found inÅable,Öut back");

1233 
_h
->
	`ö°Æl
(
_öfo
);

1235 if(
_h
->
	`ªÀa£
()) {

1237 
dñëe
 
_h
;

1239 
_h
 = 0;

1241 
	`DBGTHRD
(<<"end ~histoid_update_t ");

1242 
	}
}

1244 
	go°ªam
 &

1245 
	g›î©‹
<<(
	go°ªam
&
	go
, c⁄° 
	ghi°oid_upd©e_t
&
	gu
)

1247 
	go
 << " info:Öage" << 
	gu
.
	g_öfo
.
∑ge
(Ë<< " s∑˚=" << u._öfo.
•a˚
();

1248 
	go
 << " found i¿èbÀ: " << 
	gu
.
	g_found_ö_èbÀ
;

1249 
	go
 << " old s∑˚: " << 
	gu
.
	g_ﬁd_•a˚
;

1250 if(
	gu
.
	g_h
) {

1251 
	go
 << 
	gídl
 << "\thi°oid_t:" << *
	gu
.
	g_h
 <<Éndl;

1253  
	go
;

1257 
	ghi°oid_upd©e_t
::
	$ª∂a˚_∑ge
(
fûe_p
 *
p
, 
boﬁ
 
ªö°Æl
)

1259 if(
_∑ge
) {

1260 
	`DBGTHRD
(<<"ª∂a˚Öagê" << 
_∑ge
->
	`pid
().
∑ge


1261 << "Ñefcou¡=" << 
_h
->
ªfcou¡


1268 
boﬁ
 
dif„rs
 = (
_öfo
.
	`∑ge
(Ë!
p
->
	`pid
().
∑ge
) ;

1269 if(
dif„rs
 || 
p
 !
_∑ge
) {

1270 if(
_found_ö_èbÀ
 && 
ªö°Æl
) {

1271 
	`w_as£π3
(!
_h
->
	`_have_muãx
());

1272 
	`DBGTHRD
(<<"buckë ch™gêf‹Öagê" << 
_öfo
.
	`∑ge
());

1273 if(
_∑ge
 && _∑ge->
	`is_fixed
()) {

1274 
	`w_as£π3
(
_öfo
.
	`∑ge
(Ë=
_∑ge
->
	`pid
().
∑ge
);

1276 
_h
->
	`buckë_ch™ge
(
_ﬁd_•a˚
, 
_öfo
.
	`•a˚
());

1277 
	`DBGTHRD
(<<"replaceÖage ");

1278 
_h
->
	`ö°Æl
(
_öfo
);

1280 
_∑ge
 = 
p
;

1281 
	`DBGTHRD
(<<"replaced oldÖage with "

1282 << 
_∑ge
->
	`pid
().
∑ge


1283 << "Ñefcou¡" << 
_h
->
ªfcou¡


1286 
_h
->
	`_föd_∑ge_ªtu∫_öfo
(
åue
, 
_∑ge
->
	`pid
().
∑ge
, 
_found_ö_èbÀ
, 
_öfo
);

1288 
	}
}

1291 
	ghi°oid_upd©e_t
::
	$ªmove
()

1293 
	`FUNC
(
hi°oid_upd©e_t
::
ªmove
);

1295 if(
_∑ge
 && _∑ge->
	`pid
().
∑ge
) {

1296 
	`DBGTHRD
(<<"hi°oid_upd©e_àªmove(Ë’agê‰ì)" << *
this
);

1297 
_h
->
	`_föd_∑ge_ªtu∫_öfo
(
Ál£
, 
_∑ge
->
	`pid
().
∑ge
, 
_found_ö_èbÀ
, 
_öfo
);

1298 
	`w_as£π2
(!
_found_ö_èbÀ
);

1299 
	`w_as£π2
(
_öfo
.
	`∑ge
(Ë=
_∑ge
->
	`pid
().
∑ge
);

1301 
	`DBGTHRD
(<<"ªmovê∑gê" << 
_∑ge
->
	`pid
().
∑ge


1302 << "Ñefcou¡" << 
_h
->
ªfcou¡
);

1303 
_∑ge
 = 0;

1304 
_found_ö_èbÀ
 = 0;

1305 
	`DBGTHRD
(<<"buckë ch™gêf‹Öagê" << 
_öfo
.
	`∑ge
());

1306 
	`w_as£π2
(
_h
);

1308 
_h
->
	`buckë_ch™ge
(
_ﬁd_•a˚
, 
_öfo
.
	`•a˚
());

1309 
_öfo
.
	`£t
(0,0);

1310 if(
_h
->
	`ªÀa£
()) {

1311 
dñëe
 
_h
;

1313 
_h
 = 0;

1314 
	}
}

1317 
	ghi°oid_upd©e_t
::
	$upd©e
()

1320 
	`w_as£π3
(
_h
);

1321 
	`w_as£π3
(
_h
->
ªfcou¡
 > 0);

1322 
	`w_as£π3
(
_∑ge
->
	`is_fixed
());

1323 
	`w_as£π3
(
_∑ge
->
	`œtch_mode
(Ë=
LATCH_EX
);

1325 
smsize_t
 
√wamt
 = 
_∑ge
->
	`ußbÀ_•a˚_f‹_¶Ÿs
();

1327 
	`DBGTHRD
(<<"upd©e(Ë∑gê" << 
_∑ge
->
	`pid
().
∑ge


1328 << "Çewamt=" << 
√wamt


1329 << "Ñefcou¡=" << 
_h
->
ªfcou¡


1332 
	`DBGTHRD
(<<"buckë ch™gêf‹Öagê" << 
_öfo
.
	`∑ge
());

1333 
	`w_as£π3
(
_öfo
.
	`∑ge
(Ë=
_∑ge
->
	`pid
().
∑ge
);

1335 
_h
->
	`buckë_ch™ge
(
_ﬁd_•a˚
, 
√wamt
);

1336 
_h
->
	`upd©e_∑ge
(
_∑ge
->
	`pid
().
∑ge
, 
√wamt
);

1344 
_found_ö_èbÀ
 = 
Ál£
;

1345 
	}
}

1347 
boﬁ


1348 
	ghi°oid_com∑ª_t
::
	$m©ch
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const

1350 if(
À·
.
	`∑ge
(Ë=
right
.page()) {

1351  
åue
;

1353  
Ál£
;

1354 
	}
}

1356 
boﬁ


1357 
	ghi°oid_com∑ª_t
::
	$gt
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const

1364 
	`DBGTHRD
(<<"histoid_compare_t::gtÜeft="

1365 << 
À·
.
	`∑ge
(Ë<< ":" <<Üe·.
	`•a˚
()

1367 << 
right
.
	`∑ge
(Ë<< ":" <<Ñight.
	`•a˚
()

1369 if–
À·
.
	`•a˚
(Ë> 
right
.space() ) {

1370 
	`DBGTHRD
(<< "ÑeturningÅrue" );

1371  
åue
;

1373 
	`DBGTHRD
(<< "Ñeturning false" );

1374  
Ál£
;

1376 #ifde‡
COMMENT


1383 if–
À·
.
	`•a˚
(Ë< 
right
.•a˚(ËË 
Ál£
;

1386 
Õid_t
 
	`p
(
	`key
(), 
right
.
	`∑ge
());

1387 i‡–!
smÀvñ_0
::
bf
->
	`has_‰ame
(
p
)Ë 
åue
;

1392  
Ál£
;

1394 
	}
}

1396 
boﬁ


1397 
	ghi°oid_com∑ª_t
::
	$ge
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const

1401 
	`DBGTHRD
(<<"histoid_compare_t::geÜeft="

1402 << 
À·
.
	`∑ge
(Ë<< ":" <<Üe·.
	`•a˚
()

1404 << 
right
.
	`∑ge
(Ë<< ":" <<Ñight.
	`•a˚
()

1406 if–
À·
.
	`•a˚
(Ë>
right
.space() ) {

1407 
	`DBGTHRD
(<< "ÑeturningÅrue" );

1408  
åue
;

1410 
	`DBGTHRD
(<< "Ñeturning false" );

1411  
Ál£
;

1412 
	}
}

1418 
__thªad
 
	gqueue_ba£d_lock_t
::
ext_qnode
 
hi°oid_me
 = 
QUEUE_EXT_QNODE_INITIALIZER
;

1421 
	ghi°oid_t
::
	$_ªÀa£_muãx
() const

1423 
	`w_as£π2
(
_hi°oid_muãx
.
	`is_möe
(&
hi°oid_me
));

1424 
_hi°oid_muãx
.
	`ªÀa£
(&
hi°oid_me
);

1425 
	}
}

1427 
	ghi°oid_t
::
	$_gøb_muãx
() const

1429 
	`w_as£π2
–! 
_hi°oid_muãx
.
	`is_möe
(&
hi°oid_me
));

1430 
_hi°oid_muãx
.
	`acquúe
(&
hi°oid_me
);

1431 
	}
}

1433 
	ghi°oid_t
::
	$_gøb_muãx_c⁄d
(
boﬁ
& 
gŸ
) const

1435 
	`w_as£π2
–! 
_hi°oid_muãx
.
	`is_möe
(&
hi°oid_me
));

1436 
gŸ
 = 
_hi°oid_muãx
.
	`©ãm±
(&
hi°oid_me
);

1437 
	}
}

1439 
boﬁ


1440 
	ghi°oid_t
::
	$_have_muãx
() const

1442  
_hi°oid_muãx
.
	`is_möe
(&
hi°oid_me
);

1443 
	}
}

	@src/sm/histo.h

53 #i‚de‡
HISTO_H


54 
	#HISTO_H


	)

56 
	~"w_deföes.h
"

115 
	~<w.h
>

116 
	~<w_hóp.h
>

117 
	~<w_hash.h
>

118 
	~<sm_öt_2.h
>

119 
	~<∑ge_h.h
>

121 #ifde‡
__GNUG__


122 #¥agm®
öãrÁ˚


125 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gCmp
>

126 
˛ass
 
	gSórchabÀHóp
 : 
public
 
Hóp
<
T
,
	gCmp
>

128 
usög
 
	gHóp
<
	gT
,
	gCmp
>::
ñemíts
;

129 
usög
 
	gHóp
<
	gT
,
	gCmp
>::
numEÀmíts
;

130 
usög
 
	gHóp
<
	gT
,
	gCmp
>::
Le·Chûd
;

131 
usög
 
	gHóp
<
	gT
,
	gCmp
>::
RightSiblög
;

132 
usög
 
	gHóp
<
	gT
,
	gCmp
>::
cmp
;

133 
	gpublic
:

134 
usög
 
Hóp
<
T
,
	gCmp
>::
HópPr›îty
;

136 
	gpublic
:

137 
SórchabÀHóp
(c⁄° 
Cmp
& 
cmpFun˘i⁄
, 
öôülNumEÀmíts
);

140 
Sórch
(
i
, c⁄° 
T
& 
t
);

144 
M©ch
(c⁄° 
T
& 
t
) const;

150 ˛as†
	chi°oid_com∑ª_t


152 
	mpublic
:

153 
°id_t
 c⁄° 
key
;

154 
	mpublic
:

155 
NORET
 
	$hi°oid_com∑ª_t
(
°id_t
&
s
): 
	$key
(
s
) { }

158 
boﬁ
 
	$gt
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const;

159 
boﬁ
 
	$ge
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const;

162 
boﬁ
 
	$m©ch
(c⁄° 
pgöfo_t
& 
À·
, c⁄°Ögöfo_t& 
right
) const;

163 
	}
};

166 
˛ass
 
	ghi°oid_ªmove_t
;

167 
˛ass
 
	ghi°oid_upd©e_t
;

168 
˛ass
 
	gsdesc_t
;

170 ˛as†
	chi°oid_t
: 
public
 
smÀvñ_0


172 
‰õnd
 
˛ass
 
hi°oid_ªmove_t
 ;

173 
‰õnd
 
˛ass
 
	mhi°oid_upd©e_t
 ;

174 
‰õnd
 
˛ass
 
	msdesc_t
 ;

176 
	m¥Ÿe˘ed
:

181 
NORET
 
hi°oid_t
 (
°id_t
 
s
);

182 
	mNORET
 ~
hi°oid_t
 ();

188 
	mnohook
 = -1

193 
ö°Æl
(c⁄° 
pgöfo_t
& 
öfo
);

196 
upd©e_∑ge
(c⁄° 
shpid_t
& 
p
, 
smsize_t
 
amt
);

198 
	gpublic
:

202 
rc_t
 
öôülize_èbÀ
();

203 
de°roy_èbÀ
();

211 
hi°oid_t
* 
	$c›y
() const;

212 
hi°oid_t
* 
	`acquúe
(c⁄° 
°id_t
& 
s
);

213 
boﬁ
 
	`ªÀa£
();

218 
	`de°royed_°‹e
(c⁄° 
°id_t
&
s
, 
sdesc_t
 *
sd
);

220 
	`buckë_ch™ge
(
smsize_t
 
ﬁd_•a˚
,

221 
smsize_t
 
√w_•a˚
);

224 
w_rc_t
 
	$exi°s_∑ge
(
smsize_t
 
•a˚_√eded
, 
boﬁ
& 
found
) const;

227 
w_rc_t
 
	$föd_∑ge
(

228 
smsize_t
 
•a˚_√eded
,

229 
boﬁ
& 
found
,

230 
pgöfo_t
& 
öfo
,

231 
fûe_p
* 
∑gï
,

232 
¶Ÿid_t
& 
idx
,

233 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£


235 
w_rc_t
 
	$œtch_lock_gë_¶Ÿ
(

236 
shpid_t
& 
shpid
,

237 
fûe_p
* 
pg
,

238 
smsize_t
 
•a˚_√eded
,

239 
boﬁ
 
≠≥nd_⁄ly
,

240 
boﬁ
& 
suc˚ss
,

241 
¶Ÿid_t
& 
idx
,

242 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£


245 
o°ªam
 &
	$¥öt
(
o°ªam
 &) const;

246 
o°ªam
 &
	`¥öt_ˇche
(o°ªam &, 
boﬁ
 
locked
 = 
Ál£
);

248 
¥iv©e
:

250 
	$_gøb_muãx
() const;

251 
	$_gøb_muãx_c⁄d
(
boﬁ
 &) const;

252 
boﬁ
 
	$_have_muãx
() const;

253 
	$_ªÀa£_muãx
() const;

255 
boﬁ
 
	$_ö_hash_èbÀ
() const {

256  (
this
->
lök
.
	`membî_of
() != 0);

257 
	}
}

258 
_ö£π_°‹e_∑ges
(c⁄° 
°id_t
& 
s
);

259 
_vi˘imize
(
howm™y
);

260 
__föd_∑ge_ö_hóp
(

261 
boﬁ
 
ö£π_if_nŸ_found
,

262 c⁄° 
shpid_t
& 
pid


264 
_föd_∑ge_ªtu∫_öfo
(

265 
boﬁ
 
öô_öfo_if_nŸ_found
,

266 c⁄° 
shpid_t
& 
pid
,

267 
boﬁ
& 
found_ö_èbÀ
,

268 
pgöfo_t
& 
öfo


272 
hi°oid_com∑ª_t
 
	gcmp
;

273 
	gªfcou¡
;

274 
	gSórchabÀHóp
<
	gpgöfo_t
, 
	ghi°oid_com∑ª_t
>* 
	gpghóp
;

275 
°‹e_hi°o_t
 
	ghi°ogøm
;

276 
muèbÀ
 
queue_ba£d_lock_t
 
	g_hi°oid_muãx
;

277 
w_lök_t
 
	glök
;

284 
occ_rwlock
 
	ghèb_muãx
;

286 
queue_ba£d_block_lock_t
 
	ghèb_muãx_wrôî
;

288 
	gw_hash_t
<
	ghi°oid_t
, 
	gocc_rwlock
, 
	g°id_t
> * 
	ghèb
;

289 
	göôülized
;

291 
	g¥iv©e
:

292 
hi°oid_t
(const histoid_t &);

293 
	ghi°oid_t
 &
	g›î©‹
=(c⁄° 
hi°oid_t
 &);

296 
o°ªam
 &
›î©‹
<<(o°ªam&, c⁄° 
hi°oid_t
&);

298 
˛ass
 
	gfûe_p
;

300 ˛as†
	chi°oid_ªmove_t


306 
	m¥iv©e
:

307 
boﬁ
 
_found_ö_èbÀ
;

308 
fûe_p
* 
	m_∑ge
;

309 
hi°oid_t
* 
	m_h
;

310 
pgöfo_t
 
	m_öfo
;

311 
	mpublic
:

312 
NORET
 
hi°oid_ªmove_t
(
fûe_p
& 
pg
);

313 
	mNORET
 ~
	$hi°oid_ªmove_t
() {}

314 
	}
};

316 ˛as†
	chi°oid_upd©e_t


324 
	m¥iv©e
:

325 
boﬁ
 
_found_ö_èbÀ
;

326 
fûe_p
* 
	m_∑ge
;

327 
hi°oid_t
* 
	m_h
;

328 
pgöfo_t
 
	m_öfo
;

329 
smsize_t
 
	m_ﬁd_•a˚
;

331 
	mpublic
:

332 
NORET
 
hi°oid_upd©e_t
(
sdesc_t
 *
sd
);

334 
NORET
 
hi°oid_upd©e_t
(
fûe_p
& 
pg
);

336 
	mNORET
 ~
hi°oid_upd©e_t
();

338 
ª∂a˚_∑ge
(
fûe_p
 *
p
, 
boﬁ
 
ªö°Æl
 = 
Ál£
);

340 
ªmove
();

341 
upd©e
();

342 
‰õnd
 
	mo°ªam
 &
	m›î©‹
<<(o°ªam&, c⁄° 
	mhi°oid_upd©e_t
&);

	@src/sm/key_ranges_map.cpp

38 #ifde‡
__GNUG__


39 #¥agm®
im∂emíèti⁄
 "key_ranges_map.h"

42 
	~"key_ønges_m≠.h
"

44 
	~"båì.h
"

45 
	~"sdesc.h
"

48 
	gfoo
::
	$foo
()

49 : 
	`_m
(
NULL
),
	`_Àn
(0),
	$_Æloc
(
Ál£
)

51 
	}
}

53 
	gfoo
::
	$foo
(c⁄° 
foo
& 
v
)

54 : 
	`_m
(
v
.
_m
),
	`_Àn
(v.
_Àn
),
	$_Æloc
(
Ál£
)

56 
	}
}

58 
	gfoo
::
	$foo
(* 
m
, 
uöt4_t
 
Àn
, 
boﬁ
 
Æloc
)

60 
	`as£π
(
m
);

61 
_Àn
 = 
Àn
;

62 i‡(
Æloc
) {

64 
_Æloc
 = 
åue
;

65 
_m
 = (*Ë
	`mÆloc
(
_Àn
);

66 
	`mem˝y
(
_m
, 
m
, 
_Àn
);

70 
_Æloc
 = 
Ál£
;

71 
_m
 = 
m
;

72 
_Àn
 = 
Àn
;

74 
	}
}

76 
	gfoo
::~
	$foo
()

78 i‡(
_Æloc
 && 
_m
) {

79 
	`‰ì
(
_m
);

80 
_m
 = 
NULL
;

82 
	}
}

84 
	gfoo
& foo::
›î©‹
=(c⁄° 
foo
& 
v
)

86 
_m
 = 
v
._m;

87 
	g_Àn
 = 
v
.
_Àn
;

88 
	g_Æloc
 = 
Ál£
;

89  (*
	gthis
);

102 
	gkey_ønges_m≠
::
	$key_ønges_m≠
()

103 : 
	$_numP¨tôi⁄s
(0)

105 
_fookeys
.
	`˛ór
();

106 
	}
}

108 
	gkey_ønges_m≠
::
	$key_ønges_m≠
(c⁄° 
söfo_s
& 
söfo
,

109 c⁄° 
cvec_t
& 
möKey
,

110 c⁄° 
cvec_t
& 
maxKey
,

111 c⁄° 
uöt
 
numP¨ts
,

112 c⁄° 
boﬁ
 
physiˇl
)

113 : 
	$_numP¨tôi⁄s
(0)

115 
_fookeys
.
	`˛ór
();

116 
w_rc_t
 
r
 = 
RCOK
;

117 i‡(
physiˇl
) {

118 
r
 = 
	`RC
(
mrb_NOT_PHYSICAL_MRBT
);

121 
r
 = 
	`n›hy_equÆ_∑πôi⁄s
(
söfo
,
möKey
,
maxKey
,
numP¨ts
);

123 i‡(
r
.
	`is_îr‹
()Ë{ 
	`W_FATAL
‘.
	`îr_num
()); }

124 
	}
}

126 
	gkey_ønges_m≠
::~
	$key_ønges_m≠
()

129 
ve˘‹
<
foo
*>::
ôî©‹
 
ôî
;

131 
	`DBG
(<<"DestroyingÅheÑanges map: ");

133 
_rwlock
.
	`acquúe_wrôe
();

134 
ôî
 = 
_fookeys
.
	`begö
(); iã∏!_fookeys.
	`íd
(); ++iter) {

135 i‡(*
ôî
) {

136 
	`dñëe
 (*
ôî
);

137 *
ôî
 = 
NULL
;

140 
_rwlock
.
	`ªÀa£_wrôe
();

141 
	}
}

155 
w_rc_t
 
	gkey_ønges_m≠
::
	$n›hy_equÆ_∑πôi⁄s
(c⁄° 
söfo_s
& 
söfo
,

156 c⁄° 
cvec_t
& 
möKey
,

157 c⁄° 
cvec_t
& 
maxKey
,

158 c⁄° 
uöt
 
numP¨ts
)

160 
	`as£π
(
numP¨ts
);

163 
cvec_t
* 
s¸ambÀd_key
;

164 
	`W_DO
(
båì_m
::
	`_s¸ambÀ_key
(
s¸ambÀd_key
, 
möKey
, möKey.
	`cou¡
(), 
söfo
.
kc
));

165 
uöt
 
möKey_size
 = 
s¸ambÀd_key
->
	`size
();

166 * 
möKey_c
 = (*Ë
	`mÆloc
(
möKey_size
);

167 
s¸ambÀd_key
->
	`c›y_to
(
möKey_c
, 
möKey_size
);

168 
s¸ambÀd_key
->
	`ª£t
();

169 
	`W_DO
(
båì_m
::
	`_s¸ambÀ_key
(
s¸ambÀd_key
, 
maxKey
, maxKey.
	`cou¡
(), 
söfo
.
kc
));

170 
uöt
 
maxKey_size
 = 
s¸ambÀd_key
->
	`size
();

171 * 
maxKey_c
 = (*Ë
	`mÆloc
(
maxKey_size
);

172 
s¸ambÀd_key
->
	`c›y_to
(
maxKey_c
, 
maxKey_size
);

175 ** 
subP¨ts
 = (**Ë
	`mÆloc
(
numP¨ts
*(*));

176 
uöt
 
∑πsCª©ed
 = 
key_ønges_m≠
::
	`di°ribuãS∑˚
(
möKey_c
, 
möKey_size
,

177 
maxKey_c
, 
maxKey_size
,

178 
numP¨ts
, 
subP¨ts
);

181 
_rwlock
.
	`acquúe_wrôe
();

182 
_keyR™gesM≠
.
	`˛ór
();

183 
_rwlock
.
	`ªÀa£_wrôe
();

184 
uöt
 
size
 = (
möKey_size
 < 
maxKey_size
) ? minKey_size : maxKey_size;

185 
°id_t
 
a°id
;

186 
Õid_t
 
	`roŸ
(
a°id
,0);

187 
uöt
 
i
=0; i<
∑πsCª©ed
; i++) {

188 
s¸ambÀd_key
->
	`ª£t
();

189 
s¸ambÀd_key
->
	`put
(
subP¨ts
[
i
], 
size
);

190 
roŸ
.
∑ge
 = 
i
;

191 
	`W_DO
(
	`addP¨tôi⁄
(*
s¸ambÀd_key
,
roŸ
));

195 
uöt
 
i
=0; i<
∑πsCª©ed
; i++)

198 
	`‰ì
 (
subP¨ts
[
i
]);

199 
subP¨ts
[
i
] = 
NULL
;

202 
	`‰ì
(
subP¨ts
);

203 
	`‰ì
(
möKey_c
);

204 
	`‰ì
(
maxKey_c
);

206  (
RCOK
);

207 
	}
}

223 
w_rc_t
 
	gkey_ønges_m≠
::
	$addP¨tôi⁄
(c⁄° 
cvec_t
& 
key
, 
Õid_t
& 
√wRoŸ
)

225 
w_rc_t
 
r
 = 
RCOK
;

227 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

229 
_rwlock
.
	`acquúe_wrôe
();

230 
KRM≠It
 
ôî
 = 
_keyR™gesM≠
.
	`föd
(
kv
);

232 i‡(
ôî
==
_keyR™gesM≠
.
	`íd
() ) {

233 
foo
* 
√wkv
 = 
√w
 
	`foo
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
åue
);

234 
_keyR™gesM≠
[*
√wkv
] = 
√wRoŸ
;

235 
_numP¨tôi⁄s
++;

236 
_fookeys
.
	`push_back
(
√wkv
);

239 
r
 = 
	`RC
(
mrb_PARTITION_EXISTS
);

241 
_rwlock
.
	`ªÀa£_wrôe
();

244  (
r
);

245 
	}
}

268 
w_rc_t
 
	gkey_ønges_m≠
::
	$_dñëeP¨tôi⁄ByKey
(c⁄° 
foo
& 
kv
,

269 
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

270 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
)

272 
w_rc_t
 
r
 = 
RCOK
;

274 
_rwlock
.
	`acquúe_wrôe
();

276 
KRM≠It
 
ôî
 = 
_keyR™gesM≠
.
	`lowî_bound
(
kv
);

278 if(
ôî
 =
_keyR™gesM≠
.
	`íd
()) {

280 
_rwlock
.
	`ªÀa£_wrôe
();

281  (
	`RC
(
mrb_PARTITION_NOT_FOUND
));

284 
roŸ2
 = 
ôî
->
£c⁄d
;

285 ++
ôî
;

286 if(
ôî
 =
_keyR™gesM≠
.
	`íd
()) {

287 --
ôî
;

288 if(
ôî
 =
_keyR™gesM≠
.
	`begö
()) {

290 
_rwlock
.
	`ªÀa£_wrôe
();

291  (
	`RC
(
mrb_LAST_PARTITION
));

293 
roŸ1
 = 
roŸ2
;

294 
°¨tKey1
.
	`put
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

297 
°¨tKey1
.
	`put
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

298 
roŸ1
 = 
ôî
->
£c⁄d
;

300 --
ôî
;

301 
°¨tKey2
.
	`put
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

302 
roŸ2
 = 
ôî
->
£c⁄d
;

303 
_keyR™gesM≠
.
	`îa£
(
ôî
);

304 
_numP¨tôi⁄s
--;

306 
_rwlock
.
	`ªÀa£_wrôe
();

307  (
r
);

308 
	}
}

310 
w_rc_t
 
	gkey_ønges_m≠
::
	$dñëeP¨tôi⁄ByKey
(c⁄° 
Key
& 
key
,

311 
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

312 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
)

314 
w_rc_t
 
r
 = 
RCOK
;

315 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

316 
r
 = 
	`_dñëeP¨tôi⁄ByKey
(
kv
, 
roŸ1
, 
roŸ2
, 
°¨tKey1
, 
°¨tKey2
);

317  (
r
);

318 
	}
}

320 
w_rc_t
 
	gkey_ønges_m≠
::
	$dñëeP¨tôi⁄
(
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

321 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
)

323 
w_rc_t
 
r
 = 
RCOK
;

324 
boﬁ
 
bFound
 = 
Ál£
;

326 
KRM≠It
 
ôî
;

327 
_rwlock
.
	`acquúe_ªad
();

328 
ôî
 = 
_keyR™gesM≠
.
	`begö
(); iã∏!_keyR™gesM≠.
	`íd
(); ++iter) {

329 i‡(
ôî
->
£c⁄d
 =
roŸ2
) {

330 
bFound
 = 
åue
;

334 
_rwlock
.
	`ªÀa£_ªad
();

336 i‡(
bFound
) {

337 
r
 = 
	`_dñëeP¨tôi⁄ByKey
(
ôî
->
fú°
, 
roŸ1
, 
roŸ2
, 
°¨tKey1
, 
°¨tKey2
);

340  (
	`RC
(
mrb_PARTITION_NOT_FOUND
));

343  (
r
);

344 
	}
}

361 
w_rc_t
 
	gkey_ønges_m≠
::
	$gëP¨tôi⁄ByUns¸ambÀdKey
(c⁄° 
söfo_s
& 
söfo
,

362 c⁄° 
Key
& 
key
,

363 
Õid_t
& 
pid
)

365 
cvec_t
* 
s¸ambÀdKey
 = 
NULL
;

366 
	`W_DO
(
båì_m
::
	`_s¸ambÀ_key
(
s¸ambÀdKey
,
key
,key.
	`cou¡
(),
söfo
.
kc
));

367  (
	`gëP¨tôi⁄ByKey
(*
s¸ambÀdKey
,
pid
));

368 
	}
}

383 
w_rc_t
 
	gkey_ønges_m≠
::
	$gëP¨tôi⁄ByKey
(c⁄° 
Key
& 
key
, 
Õid_t
& 
pid
)

385 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

386 
_rwlock
.
	`acquúe_ªad
();

387 
KRM≠It
 
ôî
 = 
_keyR™gesM≠
.
	`lowî_bound
(
kv
);

388 if(
ôî
 =
_keyR™gesM≠
.
	`íd
()) {

390 
_rwlock
.
	`ªÀa£_ªad
();

391  (
	`RC
(
mrb_PARTITION_NOT_FOUND
));

393 
pid
 = 
ôî
->
£c⁄d
;

394 
_rwlock
.
	`ªÀa£_ªad
();

395  (
RCOK
);

396 
	}
}

414 
w_rc_t
 
	gkey_ønges_m≠
::
gëP¨tôi⁄s
(c⁄° 
Key
& 
key1
, c⁄° Key& 
key2
,

415 
ve˘‹
<
Õid_t
>& 
pidVec
)

417 
w_rc_t
 
	gr
 = 
RCOK
;

419 if(
	gkey2
 < 
	gkey1
) {

421  (
RC
(
mrb_KEY_BOUNDARIES_NOT_ORDERED
));

425 
foo
 
a
((*)
key1
.
_ba£
[0].
±r
,key1._ba£[0].
Àn
,
Ál£
);

428 
foo
 
b
((*)
key2
.
_ba£
[0].
±r
,key2._ba£[0].
Àn
,
Ál£
);

430 
	g_rwlock
.
acquúe_ªad
();

432 
KRM≠It
 
	gôî1
 = 
_keyR™gesM≠
.
lowî_bound
(
a
);

433 
KRM≠It
 
	gôî2
 = 
_keyR™gesM≠
.
lowî_bound
(
b
);

435 i‡(
	gôî1
 =
_keyR™gesM≠
.
íd
(Ë|| 
ôî2
 == _keyRangesMap.end()) {

437 
_rwlock
.
ªÀa£_ªad
();

438  (
RC
(
mrb_PARTITION_NOT_FOUND
));

441 
	gôî1
 !
ôî2
) {

442 
pidVec
.
push_back
(
ôî1
->
£c⁄d
);

443 
	gôî1
--;

446 
	gpidVec
.
push_back
(
ôî1
->
£c⁄d
);

448 
	g_rwlock
.
ªÀa£_ªad
();

449  (
	gr
);

462 
w_rc_t
 
	gkey_ønges_m≠
::
gëAŒP¨tôi⁄s
(
ve˘‹
<
Õid_t
>& 
pidVec
)

464 
_rwlock
.
acquúe_ªad
();

465 
KRM≠It
 
	gôî
 = 
_keyR™gesM≠
.
begö
(); iã∏!_keyR™gesM≠.
íd
(); iter++) {

466 
	gpidVec
.
push_back
(
ôî
->
£c⁄d
);

468 
	g_rwlock
.
ªÀa£_ªad
();

469  (
	gRCOK
);

487 
w_rc_t
 
	gkey_ønges_m≠
::
	$gëBound¨õs
(
Õid_t
 
pid
, 
cvec_t
& 
°¨tKey
, cvec_t& 
ídKey
)

489 
KRM≠It
 
ôî
;

490 
boﬁ
 
bFound
 = 
Ál£
;

492 
_rwlock
.
	`acquúe_ªad
();

493 
ôî
 = 
_keyR™gesM≠
.
	`begö
(); iã∏!_keyR™gesM≠.
	`íd
(); ++iter) {

494 i‡(
ôî
->
£c⁄d
 =
pid
) {

495 
bFound
 = 
åue
;

499 
_rwlock
.
	`ªÀa£_ªad
();

501 if(!
bFound
) {

503  (
	`RC
(
mrb_PARTITION_NOT_FOUND
));

506 
°¨tKey
.
	`£t
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

507 if–
ôî
 !
_keyR™gesM≠
.
	`begö
() ) {

508 
ôî
--;

509 
ídKey
.
	`£t
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

512 
ídKey
.
	`£t
(
cvec_t
::
pos_öf
);

514  (
RCOK
);

515 
	}
}

530 
w_rc_t
 
	gkey_ønges_m≠
::
	$upd©eRoŸ
(c⁄° 
Key
& 
key
, c⁄° 
Õid_t
& 
roŸ
)

532 
foo
 
	`kv
((*)
key
.
_ba£
[0].
±r
,key._ba£[0].
Àn
,
Ál£
);

534 
_rwlock
.
	`acquúe_wrôe
();

535 if(
_keyR™gesM≠
.
	`föd
(
kv
Ë!_keyR™gesM≠.
	`íd
()) {

536 
_keyR™gesM≠
[
kv
] = 
roŸ
;

539 
_rwlock
.
	`ªÀa£_wrôe
();

540  (
	`RC
(
mrb_PARTITION_NOT_FOUND
));

542 
_rwlock
.
	`ªÀa£_wrôe
();

543  (
RCOK
);

544 
	}
}

553 
	gkey_ønges_m≠
::
	$¥ötP¨tôi⁄s
()

555 
KRM≠It
 
ôî
;

556 
uöt
 
i
 = 0;

557 
_rwlock
.
	`acquúe_ªad
();

559 
	`¥ötf
("#P¨tôi⁄†(%d)\n", 
_numP¨tôi⁄s
);

560 * 
c⁄ã¡
 = 
NULL
;

561 
ôî
 = 
_keyR™gesM≠
.
	`begö
(); iã∏!_keyR™gesM≠.
	`íd
(); ++ôî, 
i
++) {

563 
c⁄ã¡
 = (*)
	`mÆloc
(()*(
ôî
->
fú°
.
_Àn
)+1);

564 
	`mem£t
(
c⁄ã¡
,0,
ôî
->
fú°
.
_Àn
+1);

565 
	`mem˝y
(
c⁄ã¡
,
ôî
->
fú°
.
_m
,ôî->fú°.
_Àn
);

566 
	`¥ötf
("RoŸ (%d)\tSèπKey (%s)\n", 
ôî
->
£c⁄d
.
∑ge
, 
c⁄ã¡
);

567 
	`‰ì
 (
c⁄ã¡
);

569 
_rwlock
.
	`ªÀa£_ªad
();

570 
	}
}

572 
	gkey_ønges_m≠
::
	$¥ötP¨tôi⁄sInByãs
()

574 
KRM≠It
 
ôî
;

575 
uöt
 
i
 = 0;

576 
_rwlock
.
	`acquúe_ªad
();

577 
	`¥ötf
("#P¨tôi⁄†(%d)\n", 
_numP¨tôi⁄s
);

578 * 
c⁄ã¡
 = 
NULL
;

579 
ôî
 = 
_keyR™gesM≠
.
	`begö
(); iã∏!_keyR™gesM≠.
	`íd
(); ++ôî, 
i
++) {

581 
c⁄ã¡
 = (*)
	`mÆloc
(()*(
ôî
->
fú°
.
_Àn
)+1);

582 
	`mem£t
(
c⁄ã¡
,0,
ôî
->
fú°
.
_Àn
+1);

583 
	`mem˝y
(
c⁄ã¡
,
ôî
->
fú°
.
_m
,ôî->fú°.
_Àn
);

584 
	`¥ötf
("RoŸ (%d): ", 
ôî
->
£c⁄d
.
∑ge
);

585 
uöt
 
j
=0; j<
ôî
->
fú°
.
_Àn
; j++) {

586 
	`¥ötf
("%d\t", (
uöt
Ë
c⁄ã¡
[
j
]);

588 
	`¥ötf
("\n");

589 
	`‰ì
 (
c⁄ã¡
);

591 
_rwlock
.
	`ªÀa£_ªad
();

592 
	}
}

594 
	gkey_ønges_m≠
::
	$£tNumP¨tôi⁄s
(
uöt
 
numP¨tôi⁄s
)

598 
_rwlock
.
	`acquúe_wrôe
();

599 
_numP¨tôi⁄s
 = 
numP¨tôi⁄s
;

600 
_rwlock
.
	`ªÀa£_wrôe
();

601 
	}
}

603 
	gkey_ønges_m≠
::
	$£tMöKey
(c⁄° 
Key
& )

606 
	`as£π
 (0);

621 
	}
}

623 
	gkey_ønges_m≠
::
	$£tMaxKey
(c⁄° 
Key
& )

626 
	`as£π
 (0);

635 
	}
}

637 
uöt
 
	gkey_ønges_m≠
::
	$gëNumP¨tôi⁄s
() const

639  (
_numP¨tôi⁄s
);

640 
	}
}

642 
	gkey_ønges_m≠
::
KRM≠
 
key_ønges_m≠
::
	$gëM≠
() const

644  (
_keyR™gesM≠
);

645 
	}
}

658 
boﬁ
 
	gkey_ønges_m≠
::
	$is_ßme
(c⁄° 
key_ønges_m≠
& 
krm
)

660 i‡(
_numP¨tôi⁄s
!=
krm
._numP¨tôi⁄sË{  (
Ál£
); }

665 
	`as£π
 (
_keyR™gesM≠
.
	`size
()==
krm
.
	`gëNumP¨tôi⁄s
());

667 
KRM≠It
 
myIt
 = 
_keyR™gesM≠
.
	`begö
();

668 
KRM≠CIt
 
urCIt
 = 
krm
.
_keyR™gesM≠
.
	`begö
();

670 ; 
myIt
 !
_keyR™gesM≠
.
	`íd
(); myIt++,
urCIt
++) {

671 i‡((*
myIt
).
£c⁄d
!=(*
urCIt
).£c⁄dË{  (
Ál£
); }

672 i‡((*
myIt
).
fú°
!=(*
urCIt
).fú°Ë{  (
Ál£
); }

674  (
åue
);

675 
	}
}

678 
	gkey_ønges_m≠
& key_ønges_m≠::
›î©‹
=(c⁄° 
key_ønges_m≠
& 
krm
)

680 
DBG
(<<"CopyingÅheÑanges map: ");

682 
KRM≠CIt
 
	gm≠cô
;

684 
	g_rwlock
.
acquúe_wrôe
();

686 
	g_numP¨tôi⁄s
 = 0;

687 
	g_fookeys
.
˛ór
();

688 
	g_keyR™gesM≠
.
˛ór
();

689 
	gve˘‹
<
	gfoo
*>::
c⁄°_ôî©‹
 
cô
 = 
krm
.
_fookeys
.
begö
() ;

690 
	gcô
 !
krm
.
_fookeys
.
íd
(); ++cit) {

691 
foo
* 
	g√wkv
 = 
√w
 foo((*
cô
)->
_m
, (*cô)->
_Àn
, 
åue
);

692 
	gm≠cô
 = 
krm
.
_keyR™gesM≠
.
lowî_bound
(*(*
cô
));

693 
as£π
 (
m≠cô
 !
krm
.
_keyR™gesM≠
.
íd
());

694 
	g_keyR™gesM≠
[*
√wkv
] = (*
m≠cô
).
£c⁄d
;

695 
	g_fookeys
.
push_back
(
√wkv
);

696 
	g_numP¨tôi⁄s
++;

698 
as£π
 (
_numP¨tôi⁄s
 =
krm
._numPartitions);

700 
	g_rwlock
.
ªÀa£_wrôe
();

702  *
	gthis
;

714 
boﬁ
 
	gkey_ønges_m≠
::
	$isBigEndün
()

716 
i
 = 1;

717  ((*(*)&
i
) == 0);

718 
	}
}

740 
uöt
 
	gkey_ønges_m≠
::
	$di°ribuãS∑˚
(c⁄° * 
mö
, c⁄° 
uöt
 
möSize
,

741 c⁄° * 
max
, c⁄° 
uöt
 
maxSize
,

742 c⁄° 
uöt
 
numP¨ts
, ** 
subP¨ts
)

756 
uöt
 
size
 = (
möSize
 < 
maxSize
) ? minSize : maxSize;

758 
uöt
 
diff_size
 = ();

760 
	`as£π
(
	`umemcmp
(
mö
,
max
,
size
)<0);

764 c⁄° * 
mö_p
 = 
mö
;

765 c⁄° * 
max_p
 = 
max
;

766 
uöt
 
¥e_size
 = 0;

767 
size
-
¥e_size
 > 
diff_size
 && *
mö_p
 =*
max_p
) {

768 
mö_p
++;

769 
max_p
++;

770 
¥e_size
++;

774 
uöt
 
∑πsCª©ed
 = 0;

779 if(
	`isBigEndün
()) {

781 
uöt
 
mö_i
 = *(uöt*Ë
mö_p
;

782 
uöt
 
max_i
 = *(uöt*Ë
max_p
;

784 
diff
 = ()(
max_i
 - 
mö_i
Ë/ ()
numP¨ts
;

785 if(
diff
<1) {

786 
diff
 = 1;

789 
cuºít_d
 = 
mö_i
;

790 
max_d
 = 
max_i
;

791 
cuºít_d
 < 
max_d
) {

792 
uöt
 
cuºít
 = 
cuºít_d
;

793 
subP¨ts
[
∑πsCª©ed
] = (*)
	`mÆloc
(
size
);

794 
	`mem£t
(
subP¨ts
[
∑πsCª©ed
], 0, 
size
);

795 if(
¥e_size
 > 0) {

796 
	`mem˝y
(
subP¨ts
[
∑πsCª©ed
], 
mö
, 
¥e_size
);

798 
	`mem˝y
(&(
subP¨ts
[
∑πsCª©ed
][
¥e_size
]), (*Ë(&
cuºít
), 
diff_size
);

799 
cuºít_d
 = cuºít_d + 
diff
;

800 
∑πsCª©ed
++;

805 * 
mö_p_ªv
 = (*Ë
	`mÆloc
(
diff_size
);

806 * 
max_p_ªv
 = (*Ë
	`mÆloc
(
diff_size
);

807 
uöt
 
i
=0; i<
diff_size
; i++) {

808 
mö_p_ªv
[
i
] = 
mö_p
[
diff_size
-1-i];

809 
max_p_ªv
[
i
] = 
max_p
[
diff_size
-1-i];

812 
uöt
 
mö_i
 = *(uöt*Ë
mö_p_ªv
;

813 
uöt
 
max_i
 = *(uöt*Ë
max_p_ªv
;

815 
diff
 = ()(
max_i
 - 
mö_i
Ë/ ()
numP¨ts
;

816 if(
diff
<1) {

817 
diff
 = 1;

820 
cuºít_d
 = 
mö_i
;

821 
max_d
 = 
max_i
;

822 
∑πsCª©ed
 < 
numP¨ts
 && 
cuºít_d
 < 
max_d
) {

823 
uöt
 
cuºít
 = 
cuºít_d
;

824 
subP¨ts
[
∑πsCª©ed
] = (*)
	`mÆloc
(
size
);

825 
	`mem£t
(
subP¨ts
[
∑πsCª©ed
], 0, 
size
);

826 if(
¥e_size
 > 0) {

827 
	`mem˝y
(
subP¨ts
[
∑πsCª©ed
], 
mö
, 
¥e_size
);

829 * 
cuºít_c
 = (*Ë(&
cuºít
);

830 
uöt
 
i
=0; i<
diff_size
; i++) {

831 
subP¨ts
[
∑πsCª©ed
][
¥e_size
+
i
] = 
cuºít_c
[
diff_size
-1-i];

833 
cuºít_d
 = cuºít_d + 
diff
;

834 
∑πsCª©ed
++;

839  
∑πsCª©ed
;

840 
	}
}

	@src/sm/key_ranges_map.h

39 #i‚de‡
_KEY_RANGES_MAP_H


40 
	#_KEY_RANGES_MAP_H


	)

42 
	~"w_deföes.h
"

44 
	~<io°ªam
>

45 
	~<c°rög
>

46 
	~<m≠
>

47 
	~<ve˘‹
>

48 
	~<utûôy
>

49 
	~<£t
>

50 
	~<m©h.h
>

51 
	~<umemcmp.h
>

53 
	~<sm_öt_2.h
>

55 #i‚de‡
SM_S_H


56 
	~<sm_s.h
>

59 #ifde‡
__GNUG__


60 #¥agm®
öãrÁ˚


63 
usög
 
«me•a˚
 
	g°d
;

65 
	gsöfo_s
;

75 
	mmrb_PARTITION_NOT_FOUND
 = 0x830001,

76 
	mmrb_LAST_PARTITION
 = 0x830002,

77 
	mmrb_KEY_BOUNDARIES_NOT_ORDERED
 = 0x830003,

78 
	mmrb_OUT_OF_BOUNDS
 = 0x830004,

79 
	mmrb_PARTITION_EXISTS
 = 0x830005,

80 
	mmrb_NOT_PHYSICAL_MRBT
 = 0x830006

84 ˛as†
	cfoo


86 
	mpublic
:

87 * 
_m
;

88 
uöt4_t
 
	m_Àn
;

89 
boﬁ
 
	m_Æloc
;

91 
foo
();

92 
foo
(c⁄° foo& 
v
);

93 
foo
(* 
m
, 
uöt4_t
 
Àn
, 
boﬁ
 
Æloc
);

94 ~
foo
();

96 
‰õnd
 
ölöe
 
boﬁ
 
	m›î©‹
<(c⁄° 
	mfoo
& 
	mv1
, c⁄° foo& 
	mv2
);

97 
‰õnd
 
ölöe
 
boﬁ
 
	m›î©‹
>(c⁄° 
	mfoo
& 
	mv1
, c⁄° foo& 
	mv2
);

98 
‰õnd
 
ölöe
 
boﬁ
 
	m›î©‹
==(c⁄° 
foo
& 
v1
, c⁄° 
	mfoo
& 
	mv2
);

99 
‰õnd
 
ölöe
 
boﬁ
 
	m›î©‹
!=(c⁄° 
foo
& 
v1
, c⁄° 
	mfoo
& 
	mv2
);

101 
	mfoo
& 
	m›î©‹
=(c⁄° 
foo
& 
v
);

105 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
foo
& 
v1
, c⁄° 
	gfoo
& 
	gv2
)

107  ((&
	gv1
==&
v2
Ë|| ((
v1
.
_Àn
 =v2._ÀnË&& 
umemcmp
(v1.
_m
,v2._m,v1._len) == 0));

110 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
foo
& 
v1
, c⁄° 
	gfoo
& 
	gv2
)

112  ! (
	gv1
 =
v2
);

115 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gfoo
& 
	gv1
, c⁄° foo& 
	gv2
)

117 
as£π
 (
v1
.
_Àn
 =
v2
._len);

118  (
umemcmp
(
v1
.
_m
,
v2
._m,v1.
_Àn
)<0);

121 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° 
	gfoo
& 
	gv1
, c⁄° foo& 
	gv2
)

123 
as£π
 (
v1
.
_Àn
 =
v2
._len);

124  (
umemcmp
(
v1
.
_m
,
v2
._m,v1.
_Àn
)>0);

129 
	scmp_gª©î


131 
boﬁ
 
›î©‹
()(c⁄° 
	mfoo
& 
	ma
, c⁄° foo& 
	mb
) const;

134 
ölöe
 
boﬁ
 
	gcmp_gª©î
::
	$›î©‹
()(c⁄° 
foo
& 
a
, c⁄° foo& 
b
) const

136  (
a
>
b
);

137 
	}
}

158 ˛as†
	ckey_ønges_m≠


160 
	mpublic
:

162 
m≠
<
	tfoo
, 
	tÕid_t
, 
	tcmp_gª©î
 > 
	tKRM≠
;

163 
	mm≠
<
	tfoo
, 
	tÕid_t
, 
	tcmp_gª©î
 >::
	tôî©‹
 
	tKRM≠It
;

164 
	mm≠
<
	tfoo
, 
	tÕid_t
, 
	tcmp_gª©î
 >::
	tc⁄°_ôî©‹
 
	tKRM≠CIt
;

166 
	m¥iv©e
:

168 
cvec_t
 
	tKey
;

170 
	m¥Ÿe˘ed
:

173 
KRM≠
 
_keyR™gesM≠
;

174 
uöt
 
	m_numP¨tôi⁄s
;

176 
	mve˘‹
<
	mfoo
*> 
	m_fookeys
;

184 
occ_rwlock
 
	m_rwlock
;

192 
vútuÆ
 
w_rc_t
 
_dñëeP¨tôi⁄ByKey
(c⁄° 
foo
& 
kv
,

193 
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

194 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
);

196 
	mpublic
:

200 
key_ønges_m≠
();

201 
key_ønges_m≠
(c⁄° 
söfo_s
& 
söfo
,

202 c⁄° 
cvec_t
& 
möKey
, c⁄° cvec_t& 
maxKey
,

203 c⁄° 
uöt
 
numP¨ts
,

204 c⁄° 
boﬁ
 
physiˇl
);

205 
key_ønges_m≠
(c⁄° key_ønges_m≠& 
rhs
);

206 
	mvútuÆ
 ~
key_ønges_m≠
();

213 
w_rc_t
 
n›hy_equÆ_∑πôi⁄s
(c⁄° 
söfo_s
& 
söfo
,

214 c⁄° 
cvec_t
& 
möKey
, c⁄° cvec_t& 
maxKey
,

215 c⁄° 
uöt
 
numP¨ts
);

222 
w_rc_t
 
addP¨tôi⁄
(c⁄° 
Key
& 
key
, 
Õid_t
& 
√wRoŸ
);

226 
w_rc_t
 
dñëeP¨tôi⁄ByKey
(c⁄° 
Key
& 
key
,

227 
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

228 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
);

232 
w_rc_t
 
dñëeP¨tôi⁄
(
Õid_t
& 
roŸ1
,Üpid_t& 
roŸ2
,

233 
Key
& 
°¨tKey1
, Key& 
°¨tKey2
);

240 
w_rc_t
 
gëP¨tôi⁄ByUns¸ambÀdKey
(c⁄° 
söfo_s
& 
söfo
, c⁄° 
Key
& 
key
, 
Õid_t
& 
pid
);

241 
w_rc_t
 
gëP¨tôi⁄ByKey
(c⁄° 
Key
& 
key
, 
Õid_t
& 
pid
);

246 
w_rc_t
 
gëP¨tôi⁄s
(c⁄° 
Key
& 
key1
, c⁄° Key& 
key2
, 
ve˘‹
<
Õid_t
>& 
pidVec
);

248 
w_rc_t
 
gëAŒP¨tôi⁄s
(
ve˘‹
<
Õid_t
>& 
pidVec
);

252 
w_rc_t
 
gëBound¨õs
(
Õid_t
 
pid
, 
cvec_t
& 
°¨tKey
, cvec_t& 
ídKey
);

256 
w_rc_t
 
upd©eRoŸ
(c⁄° 
Key
& 
key
, c⁄° 
Õid_t
& 
roŸ
);

259 
boﬁ
 
is_ßme
(c⁄° 
key_ønges_m≠
& 
krm
);

262 
£tNumP¨tôi⁄s
(
uöt
 
numP¨tôi⁄s
);

263 
£tMöKey
(c⁄° 
Key
& 
möKey
);

264 
£tMaxKey
(c⁄° 
Key
& 
maxKey
);

267 
uöt
 
	$gëNumP¨tôi⁄s
() const;

268 * 
	$gëMöKey
() const;

269 * 
	$gëMaxKey
() const;

270 
KRM≠
 
	$gëM≠
() const;

273 
	`¥ötP¨tôi⁄s
();

274 
	`¥ötP¨tôi⁄sInByãs
();

277 
key_ønges_m≠
& 
›î©‹
=(c⁄° key_ønges_m≠& 
krm
);

280 
boﬁ
 
	`isBigEndün
();

281 
uöt
 
	`di°ribuãS∑˚
(c⁄° * 
mö
, c⁄° uöà
möSize
,

282 c⁄° * 
max
, c⁄° 
uöt
 
maxSize
,

283 c⁄° 
uöt
 
numP¨ts
, ** 
subP¨ts
);

	@src/sm/keyed.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#KEYED_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄


64 
	~<sm_öt_1.h
>

65 
	~<keyed.h
>

67 
	$MAKEPAGECODE
(
keyed_p
, 
∑ge_p
)

72 
rc_t


73 
keyed_p
::
	$shi·
(
idx
, 
keyed_p
* 
rsib
)

75 
	`w_as£π1
(
idx
 >0 && idx < 
	`ƒecs
());

77 
n
 = 
	`ƒecs
(Ë- 
idx
;

78 
vec_t
* 
ç
 = 
√w
 vec_t[
n
];

79 
	`w_as£π1
(
ç
);

81 
i
 = 0; i < 
n
; i++) {

82 
ç
[
i
].
	`put
(
∑ge_p
::
	`tu∂e_addr
(1 + 
idx
 + i),

83 
∑ge_p
::
	`tu∂e_size
(1 + 
idx
 + 
i
));

90 
rc_t
 
rc
 = 
rsib
->
	`ö£π_ex∑nd
(1, 
n
, 
ç
);

91 i‡(! 
rc
.
	`is_îr‹
()) {

92 
rc
 = 
	`ªmove_com¥ess
(1 + 
idx
, 
n
);

95 
dñëe
[] 
ç
;

97  
rc
.
	`ª£t
();

98 
	}
}

100 
rc_t


101 
	gkeyed_p
::
	$£t_hdr
(c⁄° 
cvec_t
& 
d©a
)

103 
	`W_DO
–
∑ge_p
::
	`ovîwrôe
(0, 0, 
d©a
) );

104  
RCOK
;

105 
	}
}

112 
rc_t


113 
	gkeyed_p
::
	$ö£π
(

114 c⁄° 
cvec_t
& 
key
,

115 c⁄° 
cvec_t
& 
ñ
,

116 
¶Ÿ
,

117 
shpid_t
 
chûd
)

119 
keyªc_t
::
hdr_s
 
hdr
;

120 
hdr
.
kÀn
 = 
key
.
	`size
();

121 
hdr
.
ñí
 = 
ñ
.
	`size
();

122 
hdr
.
chûd
 = child;

124 
vec_t
 
vec
;

125 
vec
.
	`put
(&
hdr
, (hdr)).put(
key
).put(
ñ
);

127 
	`W_DO
–
∑ge_p
::
	`ö£π_ex∑nd
(
¶Ÿ
 + 1, 1, &
vec
) );

129  
RCOK
;

130 
	}
}

135 
rc_t


136 
	gkeyed_p
::
	$ªmove
(
¶Ÿ
)

138 
	`W_DO
–
∑ge_p
::
	`ªmove_com¥ess
(
¶Ÿ
 + 1, 1) );

139  
RCOK
;

140 
	}
}

145 
rc_t


146 
	gkeyed_p
::
	$f‹m©
(c⁄° 
Õid_t
& , 
èg_t
 ,

147 
uöt4_t
 , 
°‹e_Êag_t
 )

153 
	`w_as£π1
(
eINTERNAL
);

154  
RCOK
;

155 
	}
}

157 
rc_t


158 
	gkeyed_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

159 
uöt4_t
 
Êags
,

160 
°‹e_Êag_t
 
°‹e_Êags
,

161 c⁄° 
cvec_t
& 
hdr
)

163 
	`w_as£π3
(
èg
 =
∑ge_p
::
t_πªe_p


164 || 
èg
 =
∑ge_p
::
t_keyed_p


168 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

169 
	`W_COERCE
–
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
hdr
, 
Ál£
 ) );

172 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
hdr
);

173  
rc
;

174 
	}
}

	@src/sm/keyed.h

30 #i‚de‡
KEYED_H


31 
	#KEYED_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 ˛as†
	ckeyªc_t
 {

42 
	mpublic
:

43 
	shdr_s
 {

44 
uöt2_t
 
kÀn
;

45 
uöt2_t
 
	mñí
;

46 
shpid_t
 
	mchûd
;

49 c⁄° * 
	$key
() const;

50 c⁄° * 
	$ñem
() const;

51 c⁄° * 
	$£p
() const;

52 
smsize_t
 
	$kÀn
(Ëc⁄° {  
_hdr
.
kÀn
; 
	}
}

53 
smsize_t
 
	$ñí
(Ëc⁄° {  
_hdr
.
ñí
; 
	}
}

54 
smsize_t
 
	$¶í
(Ëc⁄° {  
_hdr
.
kÀn
 + _hdr.
ñí
; 
	}
}

55 
smsize_t
 
	$æí
(Ëc⁄° {  
	`_body
(Ë+ 
	`¶í
(Ë- (*Ë
this
; 
	}
}

56 
shpid_t
 
	$chûd
(Ëc⁄° {  
_hdr
.
chûd
; 
	}
}

58 
	g¥iv©e
:

59 
hdr_s
 
_hdr
;

60 * 
	$_body
(Ëc⁄° {  ((*Ë&
_hdr
Ë+ (_hdr); 
	}
}

67 ˛as†
	ckeyed_p
 : 
public
 
∑ge_p
 {

68 
public
:

70 
rc_t
 
lök_up
(
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
);

72 
rc_t
 
f‹m©
(

73 c⁄° 
Õid_t
& 
pid
,

74 
èg_t
 
èg
,

75 
uöt4_t
 
Êags
,

76 
°‹e_Êag_t
 
°‹e_Êags
,

77 c⁄° 
cvec_t
& 
hdr
);

79 
rc_t
 
ö£π
(

80 c⁄° 
cvec_t
& 
key
,

81 c⁄° 
cvec_t
& 
ñ
,

82 
¶Ÿ
,

83 
shpid_t
 
chûd
 = 0);

84 
rc_t
 
ªmove
(
¶Ÿ
);

85 
rc_t
 
shi·
(
¢um
, 
keyed_p
* 
rsib
);

88 
	m¥Ÿe˘ed
:

90 
	$MAKEPAGE
(
keyed_p
, 
∑ge_p
, 1)

92 c⁄° 
keyªc_t
& 
	$ªc
(
¶Ÿid_t
 
idx
) const;

94 
	$ªc_size
(
¶Ÿid_t
 
idx
) const;

95 
¶Ÿid_t
 
	$ƒecs
() const;

96 
rc_t
 
	`£t_hdr
(c⁄° 
cvec_t
& 
d©a
);

97 c⁄° * 
	$gë_hdr
() const {

98  
∑ge_p
::
	`tu∂e_addr
(0);

101 
¥iv©e
:

103 * 
	`tu∂e_addr
();

104 
	`tu∂e_size
();

105 
‰õnd
 
˛ass
 
∑ge_lök_log
;

106 
	}
};

108 
ölöe
 c⁄° * 
	gkeyªc_t
::
	$key
(Ëc⁄° {  
	`_body
(); 
	}
}

109 
ölöe
 c⁄° * 
	gkeyªc_t
::
	$ñem
(Ëc⁄° {  
	`_body
(Ë+ 
_hdr
.
kÀn
; 
	}
}

110 
ölöe
 c⁄° * 
	gkeyªc_t
::
	$£p
(Ëc⁄° {  
	`_body
(); 
	}
}

115 
ölöe
 c⁄° 
	gkeyªc_t
&

116 
	gkeyed_p
::
	$ªc
(
¶Ÿid_t
 
idx
) const

118  * (
keyªc_t
*Ë
∑ge_p
::
	`tu∂e_addr
(
idx
 + 1);

119 
	}
}

124 
ölöe
 

125 
	gkeyed_p
::
	$ªc_size
(
¶Ÿid_t
 
idx
) const

127  
∑ge_p
::
	`tu∂e_size
(
idx
 + 1);

128 
	}
}

133 
ölöe
 
¶Ÿid_t


134 
	gkeyed_p
::
	$ƒecs
() const

136  
	`n¶Ÿs
() - 1;

137 
	}
}

142 
ölöe
 
rc_t


143 
	gkeyed_p
::
	$lök_up
(
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
)

145  
∑ge_p
::
	`lök_up
(
√w_¥ev
, 
√w_√xt
);

146 
	}
}

	@src/sm/lexify.cpp

53 
	~"w_deföes.h
"

68 #unde‡
BIGFLOAT


69 #unde‡
BIGFLOAT_VERIFY


71 #unde‡
BIGDOUBLE


72 #unde‡
BIGDOUBLE_VERIFY


74 #i‚de‡
__GNUC__


75 
	#__©åibuã__
(
x
)

	)

107 
	#SM_SOURCE


	)

108 
	#BTREE_C


	)

110 #ifde‡
__GNUG__


111 #¥agm®
im∂emíèti⁄
 "lexify.h"

114 
	~"sm_öt_0.h
"

115 
	~"Àxify.h
"

136 #i‡(!
deföed
(
I386
Ë&& (
ALIGNON
 =0x8)Ë|| deföed(
ARCH_LP64
)

137 
	#STRICT_INT8_ALIGNMENT


	)

138 
	#STRICT_F8_ALIGNMENT


	)

139 #ñi‡
deföed
(
S∑rc
Ë|| deföed(
S«ke
)

141 
	#STRICT_F8_ALIGNMENT


	)

144 #ifde‡
STRICT_INT8_ALIGNMENT


145 
	#_ALIGN_IU8
 0x8

	)

147 
	#_ALIGN_IU8
 0x4

	)

150 #ifde‡
STRICT_F8_ALIGNMENT


151 
	#_ALIGN_F8
 0x8

	)

153 
	#_ALIGN_F8
 0x4

	)

156 
	#ALIGN_MASK_F8
 (
_ALIGN_F8
-1)

	)

157 
	#ALIGN_MASK_F4
 (0x4-1)

	)

159 
	#ALIGN_MASK_IU8
 (
_ALIGN_IU8
-1)

	)

160 
	#ALIGN_MASK_IU4
 (0x4-1)

	)

161 
	#ALIGN_MASK_IU2
 (0x2-1)

	)

164 #ifde‡
EXPLICIT_TEMPLATE


165 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gs‹t‹dî
::
uöt1_t
>;

168 
s‹t‹dî
 
	gS‹tOrdî
;

170 
NORET


171 
	gs‹t‹dî
::
	$s‹t‹dî
()

173 
	`Ibyã‹dî
(
I8≥rm
, 8);

174 
	`Ibyã‹dî
(
I4≥rm
, 4);

175 
	`Ibyã‹dî
(
I2≥rm
, 2);

176 
	`Ibyã‹dî
(
I1≥rm
, 1);

178 
	`Fbyã‹dî
(
F≥rm
);

179 
	`Dbyã‹dî
(
D≥rm
);

180 
	}
}

182 
NORET


183 
	gs‹t‹dî
::~
	$s‹t‹dî
()

185 
	}
}

202 
s‹t‹dî
::
	$Ibyã‹dî
(
≥rmuèti⁄
[4])

207 
magic
 = 0x3f404142;

208 
u_ch¨
 *
p
 = (u_ch¨ *)&
magic
;

209 
i
;

210 
i
=0;i<4;i++)

211 
≥rmuèti⁄
[
i
] = 
p
[i] - 0x3f;

212 #ifde‡
BIGLONG


214 
i
=0;i<4;i++Ë
	`w_as£π1
(
≥rmuèti⁄
[i] == i);

216 
	`w_as£π3
(
w_ba£_t
::
	`is_big_ídün
());

218 #i‡
W_DEBUG_LEVEL
 > 2

220 if(
≥rmuèti⁄
[1] == 1) {

221 
	`w_as£π3
(
w_ba£_t
::
	`is_big_ídün
());

223 
	`w_as£π3
(
w_ba£_t
::
	`is_lôée_ídün
());

227 
	}
}

238 
	gs‹t‹dî
::
	$Ibyã‹dî
(*
≥rmuèti⁄
, 
size
)

240 #i‡
W_DEBUG_LEVEL
 > 2

245 
öt2_t
 
magic
 = 0x1234;

246 
boﬁ
 
my_big_ídün
;

248 
my_big_ídün
 = ((
uöt1_t
 *)&
magic
)[0] == 0x12;

250 i‡(
my_big_ídün
) {

251 
	`w_as£π3
(
w_ba£_t
::
	`is_big_ídün
());

254 
	`w_as£π3
(
w_ba£_t
::
	`is_lôée_ídün
());

258 #ifde‡
BIGLONG


262 
i
;

263 i‡(
w_ba£_t
::
	`is_big_ídün
())

264 
i
 = 0; i < 
size
; i++)

265 
≥rmuèti⁄
[
i
] = i;

267 
i
 = 0; i < 
size
; i++)

268 
≥rmuèti⁄
[
i
] = 
size
 - i - 1;

269 
	}
}

272 
	gs‹t‹dî
::
	$Fbyã‹dî
(
≥rmuèti⁄
[4])

277 
f4_t
 
f
 = 0.7509957552f;

278 
u_ch¨
 *
p
 = (u_ch¨ *)&
f
;

279 
i
=0;i<4;i++)

280 
≥rmuèti⁄
[
i
] = 
p
[i] - 0x3f;

281 #ifde‡
BIGFLOAT_VERIFY


283 
i
=0;i<4;i++)

284 
	`w_as£π1
(
≥rmuèti⁄
[
i
] == i);

286 
	}
}

289 
	gs‹t‹dî
::
	$Dbyã‹dî
(
≥rmuèti⁄
[8])

294 
f8_t
 
d
 = 0.00049606070982314491;

295 
u_ch¨
 *
p
 = (u_ch¨ *)&
d
;

296 
i
;

297 
i
=0;i<8;i++)

298 
≥rmuèti⁄
[
i
] = 
p
[i] - 0x3f;

299 #ifde‡
BIGDOUBLE_VERIFY


301 
i
=0;i<8;i++)

302 
	`w_as£π1
(
≥rmuèti⁄
[
i
] == i);

304 
	}
}

315 
	gs‹t‹dî
::
	$öt_Àxify
(

316 c⁄° *
d
,

317 
boﬁ
 
is_sig√d
,

318 
Àn
,

319 * 
ªs
,

320 
≥rm
[]

323 #ifde‡
BIGLONG


324 
Àn
) {

328 
i
=0;i<8;i++)

329 ((
öt1_t
 *)
ªs
)[
i
] = ((öt1_à*)&
d
)[
≥rm
[i]];

332 ((
öt4_t
 *)
ªs
)[0] = ((öt4_à*)
d
)[0];

335 ((
öt2_t
 *)
ªs
)[0] = ((öt2_à*)
d
)[0];

338 ((
öt1_t
 *)
ªs
)[0] = ((öt1_à*)
d
)[0];

343 
i
=0;i<
Àn
;i++) {

344 ((
uöt1_t
 *)
ªs
)[
i
] = ((uöt1_à*)
d
)[
≥rm
[i]];

348 if(
is_sig√d
) {

350 
uöt1_t
 
x
 = ((uöt1_à*)
ªs
)[0];

351 ((
uöt1_t
 *)
ªs
)[0] = (
x
 ^ 0x80);

353 
	}
}

356 
	gs‹t‹dî
::
	$öt_u∆exify
(

357 c⁄° *
°r
,

358 
boﬁ
 
is_sig√d
,

359 
Àn
,

360 *
ªs
,

361 
≥rm
[]

365 #ifde‡
BIGLONG


366 
Àn
) {

368 ((
w_ba£_t
::
öt8_t
 *)
ªs
)[0] = ((öt8_à*)
°r
)[0] ^ 0x8000000000000000;

371 ((
w_ba£_t
::
öt4_t
 *)
ªs
)[0] = ((öt4_à*)
°r
)[0] ^ 0x80000000;

374 ((
w_ba£_t
::
öt2_t
 *)
ªs
)[0] = ((öt2_à*)
°r
)[0] ^ 0x8000;

377 ((
w_ba£_t
::
öt1_t
 *)
ªs
)[0] = ((öt1_à*)
°r
)[0] ^ 0x80;

382 
uöt1_t
 
˝
[24];

383 
	`w_as£π1
(
Àn
 < ((
˝
)));

385 
	`mem˝y
(
˝
, 
°r
, 
Àn
);

386 
uöt1_t
 
x
 = 
˝
[0];

387 if(
is_sig√d
) {

389 
x
 ^= 0x80;

391 
˝
[0] = 
x
;

393 
i
;

394 
i
=0;i<
Àn
;i++)

395 ((
uöt1_t
 *)
ªs
)[
i
] = 
˝
[
≥rm
[i]];

397 
	}
}

400 
	gs‹t‹dî
::
Êﬂt_Àxify
(

401 
f4_t
 
d
,

402 *
ªs
,

404 #i‚de‡
BIGFLOAT


405 
≥rm


410 #ifde‡
BIGFLOAT


411 ((
	göt4_t
 *)
	gªs
)[0] = ((
öt4_t
 *)&
d
)[0];

414 
	gi
=0;i<4;i++)

415 ((
	göt1_t
 *)
	gªs
)[
i
] = ((
öt1_t
 *)&
d
)[
≥rm
[i]];

419 i‡(*(
	göt1_t
 *)
	gªs
 & 0x80) {

421 ((
	guöt4_t
 *)
	gªs
)[0] ^= 0xffffffff;

425 *(
	göt1_t
 *)
	gªs
 ^= 0x80;

430 
	gs‹t‹dî
::
Êﬂt_u∆exify
(

431 c⁄° *
°r
,

433 #i‚de‡
BIGFLOAT


434 
≥rm


437 
f4_t
 *
ªsu…


440 
FUNC
(
s‹t‹dî
::
Êﬂt_u∆exify
);

441 
f4_t
 
	gªs
 = *(f4_à*)
°r
;

442 
DBG
(<<"Êﬂt_u∆exify c⁄vîtög " << 
ªs
);

444 #ifde‡
BIGFLOAT


446 
uöt4_t
 
	gbôs
 = 0;

447 i‡(*(
	guöt1_t
 *)
	g°r
 & 0x80) {

448 
	gbôs
 = 0x80000000;

450 
	gbôs
 = 0xffffffff;

454 *((
	göt4_t
 *)&
	gªs
Ë*((
öt4_t
 *)
°r
Ë^ 
bôs
;

456 
uöt1_t
 
	g˝
[()];

458 
mem˝y
(
˝
, 
°r
, ());

463 
uöt1_t
 
	gbôs
 = 0;

464 i‡(
	g˝
[0] & 0x80) {

465 
	gbôs
 = 0x80;

467 
	gbôs
 = 0xff;

469 
DBG
(<<"s‹t‹dî::Êﬂt_u∆exify: bôs=" << 
bôs
);

471 
	g˝
[0] ^
bôs
;

472 if(
	gbôs
 =0xffË
i
=1;
	gi
<4;i++Ë{ 
	g˝
[i] ^
bôs
; }

475 
DBG
(<<"s‹t‹dî::Êﬂt_u∆exify: bôs=" << 
bôs
);

476 
	gi
=0;i<4;i++) {

477 ((
	göt1_t
 *)&
	gªs
)[
i
] = 
˝
[
≥rm
[i]];

480 
DBG
(<<"Êﬂt_u∆exifyÑesu… " << 
ªs
);

481 *
	gªsu…
 = 
ªs
;

485 
	gs‹t‹dî
::
dbl_Àxify
(
f8_t
 
d
,

486 *
ªs
,

488 #i‚de‡
BIGDOUBLE


489 
≥rm


495 #ifde‡
BIGDOUBLE


497 ((
	göt4_t
 *)
	gªs
)[0] = ((
öt4_t
 *)&
d
)[0];

498 ((
	göt4_t
 *)
	gªs
)[1] = ((
öt4_t
 *)&
d
)[1];

501 
	gi
=0;i<8;i++)

502 ((
	göt1_t
 *)
	gªs
)[
i
] = ((
öt1_t
 *)&
d
)[
≥rm
[i]];

506 i‡(*(
	göt1_t
 *)
	gªs
 & 0x80) {

508 ((
	guöt4_t
 *)
	gªs
)[0] ^= 0xffffffff;

509 ((
	guöt4_t
 *)
	gªs
)[1] ^= 0xffffffff;

512 *(
	göt1_t
 *)
	gªs
 ^= 0x80;

517 
	gs‹t‹dî
::
dbl_u∆exify
(

518 c⁄° *
°r
,

520 #i‚de‡
BIGDOUBLE


521 
≥rm


524 
f8_t
 *
ªsu…


527 
FUNC
(
dbl_u∆exify
);

528 
	gi
;

529 
f8_t
 
	gªs
;

531 #ifde‡
BIGDOUBLE


532 
uöt4_t
 
	gbôs
 = 0;

533 i‡(*(
	guöt1_t
 *)
	g°r
 & 0x80) {

534 
	gbôs
 = 0x80000000;

536 
	gbôs
 = 0xffffffff;

539 ((
	göt4_t
 *)&
	gªs
)[0] = ((
öt4_t
 *)
°r
)[0] ^ 
bôs
;

540 if(
	gbôs
=0x80000000Ë
bôs
 = 0x0;

541 ((
	göt4_t
 *)&
	gªs
)[1] = ((
öt4_t
 *)
°r
)[1] ^ 
bôs
;

543 
uöt1_t
 
	g˝
[()];

554 
	gi
=0; i<8; i++Ë((*)
	g˝
)[
i
] = ((*)
°r
)[i];

557 
uöt1_t
 
	gbôs
 = 0;

558 i‡(
	g˝
[0] & 0x80) {

559 
	gbôs
 = 0x80;

561 
	gbôs
 = 0xff;

563 
DBG
(<<"s‹t‹dî::Êﬂt_u∆exify: bôs=" << 
bôs
);

564 
	g˝
[0] ^
bôs
;

565 if(
	gbôs
 =0xffË
i
=1;
	gi
<8;i++Ë{ 
	g˝
[i] ^
bôs
; }

566 
DBG
(<<"s‹t‹dî::Êﬂt_u∆exify: bôs=" << 
bôs
);

569 
	gi
=0;i<8;i++)

570 ((
	göt1_t
 *)&
	gªs
)[
i
] = 
˝
[
≥rm
[i]];

586 (
	g±rdiff_t
)
	gªsu…
 & 0x7) {

588 *
ªsu…
 = 
ªs
;

592 
i
=0; 
	gi
<2; i++)

593 ((*)
	gªsu…
)[
i
] = ((*)&
ªs
)[i];

597 
i
=0; 
	gi
<8; i++)

598 ((*)
	gªsu…
)[
i
] = ((*)&
ªs
)[i];

604 
boﬁ


605 
	gs‹t‹dî
::
	$Àxify
(

606 c⁄° 
key_ty≥_s
 *
kp
,

607 c⁄° *
d
,

608 *
ªs


611 
	`FUNC
(
Àxify
);

612 
keyty≥
 
k
 = 
	`c⁄vît
(
kp
);

613 
	`DBG
(<<" k=" << (
k
));

614 
k
) {

615 
kt_nosuch
:

616 
kt_•©ül
:

617  
Ál£
;

619 
kt_i1
:

620 
	`öt_Àxify
(
d
, 
åue
, 1, 
ªs
, 
I1≥rm
);

623 
kt_i2
:

624 
	`öt_Àxify
(
d
, 
åue
, 2, 
ªs
, 
I2≥rm
);

627 
kt_i4
:

628 
	`öt_Àxify
(
d
, 
åue
, 4, 
ªs
, 
I4≥rm
);

631 
kt_i8
:

632 
	`öt_Àxify
(
d
, 
åue
, 8, 
ªs
, 
I8≥rm
);

635 
kt_u1
:

636 
	`öt_Àxify
(
d
, 
Ál£
, 1, 
ªs
, 
I1≥rm
);

639 
kt_u2
:

640 
	`öt_Àxify
(
d
, 
Ál£
, 2, 
ªs
, 
I2≥rm
);

643 
kt_u4
:

644 
	`öt_Àxify
(
d
, 
Ál£
, 4, 
ªs
, 
I4≥rm
);

647 
kt_u8
:

648 
	`öt_Àxify
(
d
, 
Ál£
, 8, 
ªs
, 
I8≥rm
);

651 
kt_f4
:

652 
	`DBG
(<<"");

653 
	`Êﬂt_Àxify
(*(
f4_t
 *)
d
, 
ªs
, 
F≥rm
);

657 
kt_f8
: {

658 
dbl
;

659 
	`mem˝y
(&
dbl
, 
d
, (
f8_t
));

660 
	`dbl_Àxify
(
dbl
, 
ªs
, 
D≥rm
);

664 
kt_b
:

665 if(
kp
->
v¨übÀ
) {

666  
Ál£
;

668 
	`mem˝y
(
ªs
, 
d
, 
kp
->
Àngth
);

671  
åue
;

672 
	}
}

674 
boﬁ


675 
	gs‹t‹dî
::
	$u∆exify
(

676 c⁄° 
key_ty≥_s
 *
kp
,

677 c⁄° *
°r
,

678 *
ªs


681 
	`FUNC
(
u∆exify
);

682 
keyty≥
 
k
 = 
	`c⁄vît
(
kp
);

683 
	`DBG
(<<" k=" << (
k
));

684 
k
) {

685 
kt_nosuch
:

686 
kt_•©ül
:

687  
Ál£
;

690 
kt_i1
:

691 
	`öt_u∆exify
(
°r
, 
åue
, 1, 
ªs
, 
I1≥rm
);

694 
kt_i2
:

696 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU2
) == 0x0);

697 
	`öt_u∆exify
(
°r
, 
åue
, 2, 
ªs
, 
I2≥rm
);

700 
kt_i4
:

701 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU4
) == 0x0);

702 
	`öt_u∆exify
(
°r
, 
åue
, 4, 
ªs
, 
I4≥rm
);

705 
kt_i8
:

706 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU8
) == 0x0);

707 
	`öt_u∆exify
(
°r
, 
åue
, 8, 
ªs
, 
I8≥rm
);

710 
kt_u1
:

711 
	`öt_u∆exify
(
°r
, 
Ál£
, 1, 
ªs
, 
I1≥rm
);

714 
kt_u2
:

715 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU2
) == 0x0);

716 
	`öt_u∆exify
(
°r
, 
Ál£
, 2, 
ªs
, 
I2≥rm
);

719 
kt_u4
:

720 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU4
) == 0x0);

721 
	`öt_u∆exify
(
°r
, 
Ál£
, 4, 
ªs
, 
I4≥rm
);

724 
kt_u8
:

725 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_IU8
) == 0x0);

726 
	`öt_u∆exify
(
°r
, 
Ál£
, 8, 
ªs
, 
I8≥rm
);

729 
kt_f4
:

731 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_F4
) == 0x0);

732 
	`Êﬂt_u∆exify
(
°r
, 
F≥rm
, (
f4_t
 *)
ªs
);

735 
kt_f8
:

739 #ifde‡
BOLO_DEBUG


740 i‡(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_F8
))

741 
˚º
 << "f8 u«lig√d " << 
ªs
 << 
ídl
;

743 
	`w_as£π3
(((
±rdiff_t
)
ªs
 & 
ALIGN_MASK_F8
) == 0x0);

744 
	`dbl_u∆exify
(
°r
, 
D≥rm
, (
f8_t
 *)
ªs
);

747 
kt_b
:

748 if(! 
kp
->
v¨übÀ
) {

749 
	`mem˝y
(
ªs
, 
°r
, 
kp
->
Àngth
);

751  
Ál£
;

755  
åue
;

756 
	}
}

758 
	gs‹t‹dî
::
keyty≥


759 
s‹t‹dî
::
	$c⁄vît
(c⁄° 
key_ty≥_s
 *
kp
)

761 
	`DBG
(<<"c⁄vîàty≥ " << 
kp
->
ty≥


762 << "Üígth " << 
kp
->
Àngth
);

763 
keyty≥
 
ªsu…
 = 
kt_nosuch
;

765 
kp
->
ty≥
) {

766 
key_ty≥_s
::
i
:

767 
key_ty≥_s
::
I
:

768 
key_ty≥_s
::
u
:

769 
key_ty≥_s
::
U
:

770 
	`w_as£π3
(
kp
->
Àngth
 == 1 || kp->length == 2

771 || 
kp
->
Àngth
 == 4

772 || 
kp
->
Àngth
 == 8

774 
	`w_as£π3
(! 
kp
->
v¨übÀ
);

775 
kp
->
Àngth
) {

777 
ªsu…
 = (
kp
->
ty≥
==
key_ty≥_s
::
i


778 || 
kp
->
ty≥
==
key_ty≥_s
::
I
)?

779 
kt_i1
 : 
kt_u1
;

782 
ªsu…
 = (
kp
->
ty≥
==
key_ty≥_s
::
i
 ||

783 
kp
->
ty≥
==
key_ty≥_s
::
I
)?
kt_i2
:
kt_u2
;

786 
ªsu…
 = (
kp
->
ty≥
==
key_ty≥_s
::
i
 ||

787 
kp
->
ty≥
==
key_ty≥_s
::
I
)?
kt_i4
:
kt_u4
;

790 
ªsu…
 = (
kp
->
ty≥
==
key_ty≥_s
::
i
 ||

791 
kp
->
ty≥
==
key_ty≥_s
::
I
)?
kt_i8
:
kt_u8
;

798 
key_ty≥_s
::
f
:

799 
key_ty≥_s
::
F
:

800 
	`w_as£π3
(
kp
->
Àngth
 == 4 || kp->length == 8);

801 
	`w_as£π3
(! 
kp
->
v¨übÀ
);

802 
kp
->
Àngth
) {

804 
ªsu…
 = 
kt_f4
;

807 
ªsu…
 = 
kt_f8
;

814 
key_ty≥_s
::
B
:

815 
key_ty≥_s
::
b
:

817 
ªsu…
 = 
kt_b
;

821 
	`W_FATAL
(
eNOTIMPLEMENTED
);

823 
	`DBG
(<<"c⁄vîàªtu∫†" << (
ªsu…
));

824  
ªsu…
;

825 
	}
}

	@src/sm/lexify.h

30 #i‚de‡
LEXIFY_H


31 
	#LEXIFY_H


	)

33 
	~"w_deföes.h
"

48 #ifde‡
__GNUG__


49 #¥agm®
öãrÁ˚


52 
«me•a˚
 
	gssm_s‹t
 {

53 
˛ass
 
	gs‹t_keys_t
;

59 ˛as†
	cs‹t‹dî
 : 
¥iv©e
 
smÀvñ_0
 {

60 
‰õnd
 
˛ass
 
ssm_s‹t
::
s‹t_keys_t
;

61 
	mw_ba£_t
::
	tf4_t
 f4_t;

62 
	mw_ba£_t
::
	tf8_t
 f8_t;

64 
	mw_ba£_t
::
	tuöt1_t
 uint1_t;

65 
	mw_ba£_t
::
	tuöt2_t
 uint2_t;

66 
	mw_ba£_t
::
	tuöt4_t
 uint4_t;

67 
	mw_ba£_t
::
	tuöt8_t
 uint8_t;

69 
	mw_ba£_t
::
	töt1_t
 int1_t;

70 
	mw_ba£_t
::
	töt2_t
 int2_t;

71 
	mw_ba£_t
::
	töt4_t
 int4_t;

72 
	mw_ba£_t
::
	töt8_t
 int8_t;

73 
	mpublic
:

90 
	ekeyty≥
 {

91 
kt_nosuch
,

93 
	mkt_i1
, 
	mkt_u1
,

95 
	mkt_i2
, 
	mkt_u2
,

97 
	mkt_i4
, 
	mkt_u4
,

99 
	mkt_i8
, 
	mkt_u8
,

101 
	mkt_f4
, 
	mkt_f8
,

103 
	mkt_b
,

105 
	mkt_•©ül


108 
NORET
 
s‹t‹dî
();

109 
	gNORET
 ~
s‹t‹dî
();

121 
boﬁ
 
Àxify
(c⁄° 
key_ty≥_s
 *
kp
, c⁄° *
d
, *
ªs
);

132 
boﬁ
 
u∆exify
(c⁄° 
key_ty≥_s
 *
kp
, c⁄° *
°r
, *
ªs
) ;

134 
	g¥iv©e
:

135 
öt_Àxify
–c⁄° *
d
, 
boﬁ
 
is_sig√d
, 
Àn
,

136 *
ªs
, 
≥rm
[]);

137 
öt_u∆exify
–c⁄° *
°r
, 
boﬁ
 
is_sig√d
, 
Àn
,

138 *
ªs
, 
≥rm
[]);

140 
	gpublic
:

142 
Êﬂt_Àxify
(
w_ba£_t
::
f4_t
 
d
, *
ªs
, 
≥rm
[]) ;

143 
Êﬂt_u∆exify
–c⁄° *
°r
, 
≥rm
[], 
w_ba£_t
::
f4_t
 *
ªsu…
);

144 
dbl_Àxify
(
w_ba£_t
::
f8_t
 
d
, *
ªs
, 
≥rm
[]) ;

145 
dbl_u∆exify
–c⁄° *
°r
, 
≥rm
[], 
w_ba£_t
::
f8_t
 *
ªsu…
);

147 
Ibyã‹dî
(
≥rmuèti⁄
[8]) ;

148 
Ibyã‹dî
(*
≥rmuèti⁄
, 
size
);

149 
Fbyã‹dî
(
≥rmuèti⁄
[4]) ;

150 
Dbyã‹dî
(
≥rmuèti⁄
[8]) ;

154 
keyty≥
 
c⁄vît
(c⁄° 
key_ty≥_s
 *
k
);

156 
	g¥iv©e
:

157 
I1≥rm
[1];

158 
	gI2≥rm
[2];

159 
	gI4≥rm
[4];

160 
	gI8≥rm
[8];

161 
	gF≥rm
[4];

162 
	gD≥rm
[8];

165 
˛ass
 
s‹t‹dî
 
S‹tOrdî
;

	@src/sm/lgrec.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#LGREC_C


	)

36 #ifde‡
__GNUG__


37 #¥agm®
im∂emíèti⁄


40 
	~<sm_öt_2.h
>

41 
	~<lgªc.h
>

81 
rc_t


82 
	glg_èg_chunks_h
::
	$≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
Õid_t
 
√w_∑ges
[])

84 
	`FUNC
(
lg_èg_chunks_h
::
≠≥nd
);

86 
chunk_loc
[
max_chunks
+1];

89 
uöt4_t
 
chunk_cou¡
;

92 
chunk_loc
[0] = 0;

93 
chunk_cou¡
 = 1;

94 
uöt4_t
 
i
;

96 
i
 = 1; i<
num_∑ges
 && 
chunk_cou¡
<=
max_chunks
; i++) {

97 
shpid_t
 
cuº_chunk_Àn
 = 
i
 - 
chunk_loc
[
chunk_cou¡
-1];

98 i‡(
√w_∑ges
[
i
].
∑ge
-
cuº_chunk_Àn
 !√w_∑ges[
chunk_loc
[
chunk_cou¡
-1]].page) {

100 
chunk_loc
[
chunk_cou¡
] = 
i
;

101 
chunk_cou¡
++;

104 i‡(
chunk_cou¡
 > 
max_chunks
) {

106  
	`RC
(
smÀvñ_0
::
eBADAPPEND
);

108 
chunk_loc
[
chunk_cou¡
] = 
i
;

114 
c⁄tig
 = 0;

115 i‡(
_¸ef
.
chunk_˙t
 == 0 ||

116 
√w_∑ges
[0].
∑ge
 =
	`_œ°_pid
()+1Ë
c⁄tig
 = 1;

118 
	`DBG
(<<" chunk_cou¡ = " << 
chunk_cou¡
 << " c⁄tig=" << 
c⁄tig
);

123 i‡((
chunk_cou¡
 + (
_¸ef
.
chunk_˙t
>0 ? _¸ef.chunk_˙à- 
c⁄tig
 : 0)) >

124 
max_chunks
) {

127 #i‡
W_DEBUG_LEVEL
 > 4

128 
˚º
 << "toÿm™y chunks: " << 
chunk_cou¡


129 << " _¸ef.chunk_˙à" << 
_¸ef
.
chunk_˙t


130 << " c⁄tig " << 
c⁄tig


131 << " max_chunk†" << (
max_chunks
)

132 << 
ídl
;

134  
	`RC
(
smÀvñ_0
::
eBADAPPEND
);

141 i‡(
c⁄tig
) {

142 i‡(
_¸ef
.
chunk_˙t
 == 0) {

143 
_¸ef
.
chunk_˙t
 = 1;

144 
_¸ef
.
chunks
[0].
fú°_pid
 = 
√w_∑ges
[0].
∑ge
;

145 
_¸ef
.
chunks
[0].
≈ages
 = 0;

147 
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-1].
≈ages
 +
chunk_loc
[1] - chunk_loc[0];

149 
i
 = 
c⁄tig
; i < 
chunk_cou¡
; i++) {

150 
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-
c⁄tig
+
i
].
fú°_pid
 = 
√w_∑ges
[
chunk_loc
[i]].
∑ge
;

152 
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-
c⁄tig
+
i
].
≈ages
 = 
chunk_loc
[i+1] - chunk_loc[i];

153 
	`DBG
(<<" AddedÅÿchunk " << 
i
 << "Öage " <<

154 
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-
c⁄tig
+
i
].
fú°_pid


156 
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-
c⁄tig
+
i
].
≈ages
 );

158 
	`w_as£π9
((
_¸ef
.
chunk_˙t
 + 
chunk_cou¡
 - 
c⁄tig
Ë<
max_chunks
);

159 
_¸ef
.
chunk_˙t
 +
w_ba£_t
::
	`uöt2_t
(
chunk_cou¡
 - 
c⁄tig
);

160 
	`DBG
(<<"ok");

161  
RCOK
;

162 
	}
}

168 
rc_t


169 
	glg_èg_chunks_h
::
	$åunˇã
(
uöt4_t
 
num_∑ges
)

171 
	`FUNC
(
lg_èg_chunks_h
::
åunˇã
);

172 
smsize_t
 
fú°_dóŒoc
 = 
	`∑ge_cou¡
()-
num_∑ges
;

173 
smsize_t
 
œ°_dóŒoc
 = 
	`∑ge_cou¡
()-1;

174 #i‡
W_DEBUG_LEVEL
 > 2

175 
uöt4_t
 
check_dóŒoc
 = 0;

181 
smsize_t
 
i
 = 
fú°_dóŒoc
; i <
œ°_dóŒoc
; i++) {

182 
	`DBG
(<<"‰ìögÖagê" << 
	`pid
(
i
));

183 
	`W_DO
(
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
	`pid
(
i
), 
Ál£
 ));

184 #i‡
W_DEBUG_LEVEL
 > 2

185 
check_dóŒoc
++;

189 
	`w_as£π3
(
check_dóŒoc
 =
num_∑ges
);

191 
i
 = 
_¸ef
.
chunk_˙t
-1; i >0 && 
num_∑ges
 > 0; i--) {

193 i‡(
_¸ef
.
chunks
[
i
].
≈ages
 <
num_∑ges
) {

194 
num_∑ges
 -
_¸ef
.
chunks
[
i
].
≈ages
;

195 
_¸ef
.
chunk_˙t
--;

197 
_¸ef
.
chunks
[
i
].
≈ages
 -
num_∑ges
;

198 
num_∑ges
 -=Çum_pages;

202 
	`w_as£π9
(
num_∑ges
 == 0);

203  
RCOK
;

204 
	}
}

206 
rc_t


207 
	glg_èg_chunks_h
::
	$upd©e
(
uöt4_t
 
°¨t_byã
, c⁄° 
vec_t
& 
d©a
) const

209 
	`FUNC
(
lg_èg_chunks_h
::
upd©e
);

210 
uöt4_t
 
amou¡
;

211 
uöt4_t
 
pid_cou¡
 = 
°¨t_byã
/
lgd©a_p
::
d©a_sz
;

212 
uöt4_t
 
d©a_size
 = 
d©a
.
	`size
();

214 
Õid_t
 
	`cuº_pid
(
_∑ge
.
	`pid
().
	`vﬁ
(), 
_¸ef
.
°‹e
, 0);

215 
uöt4_t
 
off£t
 = 
°¨t_byã
%
lgd©a_p
::
d©a_sz
;

216 
uöt4_t
 
num_byãs
 = 0;

217 
num_byãs
 < 
d©a_size
) {

218 
amou¡
 = 
	`MIN
(
lgd©a_p
::
d©a_sz
-
off£t
, 
d©a_size
-
num_byãs
);

219 
cuº_pid
.
∑ge
 = 
	`_pid
(
pid_cou¡
);

220 
lgd©a_p
 
lgd©a
;

221 
	`W_DO
–
lgd©a
.
	`fix
(
cuº_pid
, 
LATCH_EX
) );

222 
	`W_DO
(
lgd©a
.
	`upd©e
(
off£t
, 
d©a
, 
num_byãs
, 
amou¡
));

223 
off£t
 = 0;

224 
num_byãs
 +
amou¡
;

225 
pid_cou¡
++;

228 
	`w_as£π9
(
pid_cou¡
-1 =(
°¨t_byã
+
d©a
.
	`size
()-1)/
lgd©a_p
::
d©a_sz
);

229  
RCOK
;

230 
	}
}

232 
shpid_t
 
	glg_èg_chunks_h
::
	$_pid
(
uöt4_t
 
pid_num
) const

234 
	`FUNC
(
lg_èg_chunks_h
::
_pid
);

235 
i
 = 0; i < 
_¸ef
.
chunk_˙t
; i++) {

236 i‡(
_¸ef
.
chunks
[
i
].
≈ages
 > 
pid_num
) {

237  
_¸ef
.
chunks
[
i
].
	`pid
(
pid_num
);

239 
pid_num
 -
_¸ef
.
chunks
[
i
].
≈ages
;

241 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

243 
	}
}

246 
	glg_èg_chunks_h
::
	$¥öt
(
o°ªam
 &
o
) const

248 
	`w_as£π1
(
_∑ge
.
	`is_fixed
());

249 
smsize_t
 
i
 = 0;

250 
i
 <
_¸ef
.
chunk_˙t
;

251 
i
++) {

252 
o
 << 
_¸ef
.
chunks
[
i
].
fú°_pid


253 << " -> " << 
_¸ef
.
chunks
[
i
].
fú°_pid
 +

254 
_¸ef
.
chunks
[
i
].
≈ages
 - 1

255 << " (" << 
_¸ef
.
chunks
[
i
].
≈ages
 << ")"

256 <<
ídl
;

258 
	}
}

260 
	go°ªam
 &
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glg_èg_chunks_h
 &
	gl
)

262 
	gl
.
¥öt
(
o
);

263  
	go
;

266 
rc_t


267 
	glg_èg_ödúe˘_h
::
	$c⁄vît
(c⁄° 
lg_èg_chunks_h
& 
ﬁd_èg
)

269 
	`FUNC
(
lg_èg_ödúe˘_h
::
c⁄vît
);

270 c⁄° 
smsize_t
 
max_∑ges
 = 64;

271 
	`w_as£π3
(
_úef
.
ödúe˘_roŸ
 == 0);

273 
Õid_t
 
∑ge_li°
[
max_∑ges
];

275 
smsize_t
 
ﬁd_˙t
 = 
ﬁd_èg
.
	`∑ge_cou¡
();

277 
_∑ge_˙t
 = 0; _∑ge_˙à< 
ﬁd_˙t
; _∑ge_˙à+
max_∑ges
) {

278 
uöt4_t
 
num_∑ges
;

279 
uöt4_t
 
maxpgs
 = 
	`MIN
(
	`uöt4_t
(
max_∑ges
), 
ﬁd_˙t
 - 
_∑ge_˙t
);

280 
num_∑ges
 = 0;Çum_∑ge†< 
maxpgs
;Çum_pages++ ) {

281 
∑ge_li°
[
num_∑ges
] = 
ﬁd_èg
.
	`pid
(
_∑ge_˙t
+num_pages);

283 
	`W_DO
(
	`≠≥nd
(
num_∑ges
, 
∑ge_li°
));

285  
RCOK
;

286 
	}
}

288 
rc_t


289 
	glg_èg_ödúe˘_h
::
	$≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
Õid_t
 
√w_∑ges
[])

291 
	`FUNC
(
lg_èg_ödúe˘_h
::
≠≥nd
);

292 c⁄° 
uöt
 
max_∑ges
 = 64;

293 
shpid_t
 
∑ge_li°
[
max_∑ges
];

294 
	`w_as£π9
(
num_∑ges
 <
max_∑ges
);

295 
uöt
 
i
=0; i<
num_∑ges
; i++Ë
∑ge_li°
[i]=
√w_∑ges
[i].
∑ge
;

297 i‡(
_úef
.
ödúe˘_roŸ
 == 0) {

299 
Õid_t
 
roŸ_pid
;

300 
	`W_DO
(
smÀvñ_0
::
io
->
	`Æloc_a_∑ge
(
	`°id
(),

301 
Õid_t
::
eof
,

302 
roŸ_pid
,

303 
Ál£
,

304 
EX
,

305 
Ál£


307 
_úef
.
ödúe˘_roŸ
 = 
roŸ_pid
.
∑ge
;

308 
lgödex_p
 
roŸ
;

309 
	`W_DO
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_EX
,ÑoŸ.
t_vúgö
) );

314 
uöt
 
•a˚_⁄_œ°
 = 
lgödex_p
::
max_pids
-

315 
	`_∑ges_⁄_œ°_ödúe˘
();

316 
uöt4_t
 
∑ges_⁄_œ°
 = 
	`MIN
(
num_∑ges
, 
•a˚_⁄_œ°
);

319 
uöt4_t
 
∑ges_⁄_√w
 = 
num_∑ges
 - 
∑ges_⁄_œ°
;

322 
Õid_t
 
	`œ°_ödex_pid
(
	`°id
(), 
	`_œ°_ödúe˘
());

323 
lgödex_p
 
œ°_ödex
;

324 
	`W_DO
–
œ°_ödex
.
	`fix
(
œ°_ödex_pid
, 
LATCH_EX
) );

325 
	`w_as£π1
(
œ°_ödex
.
	`is_fixed
());

327 
	`W_DO
(
œ°_ödex
.
	`≠≥nd
(
∑ges_⁄_œ°
, 
∑ge_li°
));

329 i‡(
∑ges_⁄_√w
) {

330 
Õid_t
 
√w_pid
;

331 
	`W_DO
(
	`_add_√w_ödúe˘
(
√w_pid
));

332 
lgödex_p
 
œ°_ödex
;

333 
	`W_DO
–
œ°_ödex
.
	`fix
(
√w_pid
, 
LATCH_EX
) );

334 
	`w_as£π1
(
œ°_ödex
.
	`is_fixed
());

335 
	`W_DO
(
œ°_ödex
.
	`≠≥nd
(
∑ges_⁄_√w
, 
∑ge_li°
+
∑ges_⁄_œ°
));

338  
RCOK
;

339 
	}
}

345 
rc_t


346 
	glg_èg_ödúe˘_h
::
	$åunˇã
(
uöt4_t
 
num_∑ges
)

348 
	`FUNC
(
lg_èg_ödúe˘_h
::
åunˇã
);

349 
i
;

350 
fú°_dóŒoc
 = ()(
_∑ge_˙t
-
num_∑ges
);

351 
œ°_dóŒoc
 = ()(
_∑ge_˙t
-1);

352 
ªcÊags_t
 
ªc_ty≥
 = 
	`ödúe˘_ty≥
(
_∑ge_˙t
);

354 
i
 = 
fú°_dóŒoc
; i <
œ°_dóŒoc
; i++) {

355 
	`W_DO
(
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
	`pid
(
i
), 
Ál£
 ));

358 
ödúe˘_rm_cou¡
 = 0;

359 
pids_rm_by_ödúe˘
 = 0;

361 
pids_to_rm
 = 0;

364 i‡(
ªc_ty≥
 =
t_œrge_2
) {

365 
uöt
 
pids_⁄_œ°
 = 
	`_∑ges_⁄_œ°_ödúe˘
();

366 i‡(
pids_⁄_œ°
 > 
num_∑ges
) {

367 
ödúe˘_rm_cou¡
 = 0;

369 
ödúe˘_rm_cou¡
 = (
num_∑ges
-1)/
lgödex_p
::
max_pids
+1;

370 
pids_rm_by_ödúe˘
 = 
pids_⁄_œ°
+(
ödúe˘_rm_cou¡
-1)*
lgödex_p
::
max_pids
;

373 
pids_to_rm
 = 
num_∑ges
-
pids_rm_by_ödúe˘
;

376 i‡(
ödúe˘_rm_cou¡
 > 0) {

377 
Õid_t
 
	`roŸ_pid
(
	`°id
(), 
_úef
.
ödúe˘_roŸ
);

378 
lgödex_p
 
roŸ
;

379 
	`W_DO
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_EX
) );

380 
	`w_as£π1
(
roŸ
.
	`is_fixed
());

383 
	`w_as£π9
(
roŸ
.
	`pid_cou¡
() ==

384 
_∑ge_˙t
/
lgödex_p
::
max_pids
 + 1);

385 
fú°_dóŒoc
 = 
roŸ
.
	`pid_cou¡
()-
ödúe˘_rm_cou¡
;

386 
œ°_dóŒoc
 = 
roŸ
.
	`pid_cou¡
()-1;

387 
i
 = 
fú°_dóŒoc
; i <
œ°_dóŒoc
; i++) {

388 
Õid_t
 
	`pid_to_‰ì
(
	`°id
(), 
roŸ
.
	`pids
(
i
));

389 
	`W_DO
(
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
pid_to_‰ì
, 
Ál£
 ));

401 
	`W_DO
(
roŸ
.
	`åunˇã
(
ödúe˘_rm_cou¡
));

405 i‡(
	`ödúe˘_ty≥
(
_∑ge_˙t
-
num_∑ges
Ë=
t_œrge_1
) {

406 
	`w_as£π9
–((
_∑ge_˙t
-1)/
lgödex_p
::
max_pids
+1) -

407 
ödúe˘_rm_cou¡
 == 0);

408 i‡(
roŸ
.
	`pid_cou¡
() > 0) {

411 
_úef
.
ödúe˘_roŸ
 = 
roŸ
.
	`pids
(0);

414 
_úef
.
ödúe˘_roŸ
 = 0;

416 
roŸ
.
	`unfix
();

417 
	`W_DO
(
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
roŸ_pid
, 
Ál£
 ));

423 i‡(
_∑ge_˙t
 > 
num_∑ges
) {

427 
_∑ge_˙t
 -
num_∑ges
;

428 
Õid_t
 
	`œ°_ödex_pid
(
	`°id
(), 
	`_œ°_ödúe˘
());

429 
_∑ge_˙t
 +
num_∑ges
;

431 
lgödex_p
 
œ°_ödex
;

432 
	`W_DO
–
œ°_ödex
.
	`fix
(
œ°_ödex_pid
, 
LATCH_EX
) );

433 
	`w_as£π1
(
œ°_ödex
.
	`is_fixed
());

434 
	`W_DO
(
œ°_ödex
.
	`åunˇã
(
pids_to_rm
));

436 
	`w_as£π9
(
_∑ge_˙t
 =
num_∑ges
);

439 i‡(
_úef
.
ödúe˘_roŸ
 != 0) {

440 
Õid_t
 
	`roŸ_pid
(
	`°id
(), 
_úef
.
ödúe˘_roŸ
);

441 
	`W_DO
(
smÀvñ_0
::
io
->
	`‰ì_∑ge
(
roŸ_pid
, 
Ál£
 ));

442 
_úef
.
ödúe˘_roŸ
 = 0;

445  
RCOK
;

446 
	}
}

448 
rc_t


449 
	glg_èg_ödúe˘_h
::
	$upd©e
(
uöt4_t
 
°¨t_byã
, c⁄° 
vec_t
& 
d©a
) const

451 
	`FUNC
(
lg_èg_ödúe˘_h
::
upd©e
);

452 
uöt4_t
 
amou¡
;

453 
uöt
 
∑ge_to_upd©e
 = 
°¨t_byã
/
lgd©a_p
::
d©a_sz
;

454 
uöt4_t
 
d©a_size
 = 
d©a
.
	`size
();

456 
Õid_t
 
	`cuº_pid
(
	`°id
(), 0);

457 
uöt4_t
 
off£t
 = 
°¨t_byã
%
lgd©a_p
::
d©a_sz
;

458 
uöt4_t
 
num_byãs
 = 0;

459 
num_byãs
 < 
d©a_size
) {

460 
amou¡
 = 
	`MIN
(
lgd©a_p
::
d©a_sz
-
off£t
, 
d©a_size
-
num_byãs
);

461 
cuº_pid
.
∑ge
 = 
	`_pid
(
∑ge_to_upd©e
);

462 
lgd©a_p
 
lgd©a
;

463 
	`W_DO
–
lgd©a
.
	`fix
(
cuº_pid
, 
LATCH_EX
) );

464 
	`W_DO
(
lgd©a
.
	`upd©e
(
off£t
, 
d©a
, 
num_byãs
, 
amou¡
));

465 
off£t
 = 0;

466 
num_byãs
 +
amou¡
;

467 
∑ge_to_upd©e
++;

469 
	`w_as£π9
(
∑ge_to_upd©e
-1 =(
°¨t_byã
+
d©a
.
	`size
()-1)/
lgd©a_p
::
d©a_sz
);

470  
RCOK
;

471 
	}
}

473 
shpid_t
 
	glg_èg_ödúe˘_h
::
	$_œ°_ödúe˘
() const

475 
	`FUNC
(
lg_èg_ödúe˘_h
::
_œ°_ödúe˘
);

476 i‡(
	`ödúe˘_ty≥
(
_∑ge_˙t
Ë=
t_œrge_1
) {

477  
_úef
.
ödúe˘_roŸ
;

481 
Õid_t
 
	`roŸ_pid
(
	`°id
(), 
_úef
.
ödúe˘_roŸ
);

482 
lgödex_p
 
roŸ
;

483 
	`W_IGNORE
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_SH
) );

484 i‡(!
roŸ
.
	`is_fixed
())  0;

486 
shpid_t
* 
pids
 = (shpid_t*)
roŸ
.
	`tu∂e_addr
(0);

487 
	`w_as£π9
(
pids
);

488 (
pids
[(
_∑ge_˙t
-1)/
lgödex_p
::
max_pids
]);

489 
	}
}

491 
rc_t


492 
	glg_èg_ödúe˘_h
::
	$_add_√w_ödúe˘
(
Õid_t
& 
√w_pid
)

494 
	`FUNC
(
lg_èg_ödúe˘_h
::
_add_√w_ödúe˘
);

496 
w_ba£_t
::
uöt4_t
 
Êags
 = 
lgödex_p
::
t_vúgö
;

498 i‡(
	`ödúe˘_ty≥
(
_∑ge_˙t
Ë=
t_œrge_1
) {

500 
Õid_t
 
roŸ_pid
;

501 
	`W_DO
(
smÀvñ_0
::
io
->
	`Æloc_a_∑ge
(
	`°id
(),

502 
Õid_t
::
eof
,

503 
roŸ_pid
,

504 
Ál£
,

505 
EX
,

506 
Ál£


509 
lgödex_p
 
roŸ
;

510 
	`W_DO
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_EX
, 
Êags
) );

511 
	`w_as£π1
(
roŸ
.
	`is_fixed
());

512 
	`W_DO
(
roŸ
.
	`≠≥nd
(1, &
_úef
.
ödúe˘_roŸ
));

513 
	`w_as£π9
(
roŸ_pid
.
	`°id
() == stid());

514 
_úef
.
ödúe˘_roŸ
 = 
roŸ_pid
.
∑ge
;

518 
	`W_DO
(
smÀvñ_0
::
io
->
	`Æloc_a_∑ge
(
	`°id
(),

519 
Õid_t
::
eof
,

520 
√w_pid
,

521 
Ál£
,

522 
EX
,

523 
Ál£


525 
lgödex_p
 
√w_∑ge
;

526 
	`W_DO
–
√w_∑ge
.
	`fix
(
√w_pid
, 
LATCH_EX
, 
Êags
) );

528 
Õid_t
 
	`roŸ_pid
(
	`°id
(), 
_úef
.
ödúe˘_roŸ
);

529 
lgödex_p
 
roŸ
;

530 
	`W_DO
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_EX
) );

531 
	`w_as£π1
(
roŸ
.
	`is_fixed
());

532 
	`W_DO
(
roŸ
.
	`≠≥nd
(1, &
√w_pid
.
∑ge
));

534  
RCOK
;

535 
	}
}

537 
shpid_t
 
	glg_èg_ödúe˘_h
::
	$_œ°_pid
() const

539 
	`FUNC
(
lg_èg_ödúe˘_h
::
_œ°_pid
);

541 
Õid_t
 
	`œ°_ödúe˘_pid
(
	`°id
(), 
	`_œ°_ödúe˘
());

542 i‡(
œ°_ödúe˘_pid
.
∑ge
 == 0)  0;

543 
lgödex_p
 
œ°_ödúe˘
;

544 
	`W_IGNORE
–
œ°_ödúe˘
.
	`fix
(
œ°_ödúe˘_pid
, 
LATCH_SH
) );

545 i‡(!
œ°_ödúe˘
.
	`is_fixed
())  0;

547  
œ°_ödúe˘
.
	`œ°_pid
();

548 
	}
}

550 
shpid_t
 
	glg_èg_ödúe˘_h
::
	$_pid
(
uöt4_t
 
pid_num
) const

552 
	`FUNC
(
lg_èg_ödúe˘_h
::
_pid
);

555 
Õid_t
 
	`roŸ_pid
(
	`°id
(), 
_úef
.
ödúe˘_roŸ
);

556 
lgödex_p
 
roŸ
;

557 
	`W_IGNORE
–
roŸ
.
	`fix
(
roŸ_pid
, 
LATCH_SH
) );

558 i‡(!
roŸ
.
	`is_fixed
())  0;

561 i‡(
	`ödúe˘_ty≥
(
_∑ge_˙t
Ë=
t_œrge_1
) {

562  
roŸ
.
	`pids
(
pid_num
);

564 
	`w_as£π9
(
	`ödúe˘_ty≥
(
_∑ge_˙t
Ë=
t_œrge_2
);

567 
	`w_as£π9
–(
pid_num
/
lgödex_p
::
max_pids
Ë< 
max_uöt2
);

568 
¶Ÿid_t
 
idx
 = (¶Ÿid_t)(
pid_num
/
lgödex_p
::
max_pids
);

569 
Õid_t
 
	`ödúe˘_pid
(
	`°id
(), 
roŸ
.
	`pids
(
idx
));

570 
lgödex_p
 
ödúe˘
;

571 
	`W_IGNORE
–
ödúe˘
.
	`fix
(
ödúe˘_pid
, 
LATCH_SH
) );

572 i‡(!
ödúe˘
.
	`is_fixed
())  0;

574  
ödúe˘
.
	`pids
(
pid_num
 % 
lgödex_p
::
max_pids
);

575 
	}
}

577 
rc_t


578 
	glgd©a_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

579 
uöt4_t
 
Êags
, 
°‹e_Êag_t
 
°‹e_Êags


582 
	`w_as£π9
(
èg
 =
t_lgd©a_p
);

584 
vec_t
 
vec
;

588 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

595 
this
->
	`£t_°‹e_Êags
(
°‹e_Êags
);

597 
	`W_COERCE
–
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
vec
, 
Ál£
 ) );

601 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
vec
);

603  
rc
;

604 
	}
}

606 
rc_t


607 
	glgd©a_p
::
	$≠≥nd
(c⁄° 
vec_t
& 
d©a
, 
uöt4_t
 
°¨t
, uöt4_à
amou¡
)

609 
	`FUNC
(
lgd©a_p
::
≠≥nd
);

612 if(
d©a
.
	`is_zvec
()) {

613 c⁄° 
zvec_t
 
	`amt_vec_tmp
(
amou¡
);

614 
	`W_DO
(
	`•li˚
(0, (
¶Ÿ_Àngth_t
Ë
	`tu∂e_size
(0), 0, 
amt_vec_tmp
));

616 
vec_t
 
	`√w_d©a
(
d©a
, 
	`u4i
(
°¨t
), u4i(
amou¡
));

617 
	`w_as£π9
(
amou¡
 =
√w_d©a
.
	`size
());

618 
	`W_DO
(
	`•li˚
(0, (
¶Ÿ_Àngth_t
Ë
	`tu∂e_size
(0), 0, 
√w_d©a
));

620  
RCOK
;

621 
	}
}

623 
rc_t


624 
	glgd©a_p
::
	$upd©e
(
uöt4_t
 
off£t
, c⁄° 
vec_t
& 
d©a
, uöt4_à
°¨t
,

625 
uöt4_t
 
amou¡
)

627 
	`FUNC
(
lgd©a_p
::
upd©e
);

630 if(
d©a
.
	`is_zvec
()) {

631 c⁄° 
zvec_t
 
	`amt_vec_tmp
(
amou¡
);

632 
	`W_DO
(
	`•li˚
(0, 
	`u4i
(
off£t
), u4i(
amou¡
), 
amt_vec_tmp
));

634 
vec_t
 
	`√w_d©a
(
d©a
, 
	`u4i
(
°¨t
), u4i(
amou¡
));

635 
	`w_as£π9
(
amou¡
 =
√w_d©a
.
	`size
());

636 
	`W_DO
(
	`•li˚
(0, 
	`u4i
(
off£t
), u4i(
amou¡
), 
√w_d©a
));

638  
RCOK
;

639 
	}
}

641 
rc_t


642 
	glgd©a_p
::
	$åunˇã
(
uöt4_t
 
amou¡
)

644 
	`FUNC
(
lgd©a_p
::
åunˇã
);

646 
vec_t
 
em±y
;

647 
	`W_DO
(
	`•li˚
(0, (
¶Ÿ_Àngth_t
)(
	`tu∂e_size
(0)-
	`u4i
(
amou¡
)), u4i◊mou¡), 
em±y
));

648  
RCOK
;

649 
	}
}

651 
rc_t


652 
	glgödex_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

653 
uöt4_t
 
Êags
, 
°‹e_Êag_t
 
°‹e_Êags


656 
	`w_as£π9
(
èg
 =
t_lgödex_p
);

659 
vec_t
 
vec
;

662 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

663 
	`W_COERCE
(
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
vec
, 
Ál£
 ) );

666 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
vec
);

667  
rc
;

668 
	}
}

670 
rc_t


671 
	glgödex_p
::
	$≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
shpid_t
 
√w_pids
[])

674 
vec_t
 
	`d©a
(
√w_pids
, 
	`u4i
(
num_∑ges
)*(new_pids[0]));

675 
	`W_DO
(
	`•li˚
(0, (
¶Ÿ_Àngth_t
)(
	`tu∂e_size
(0)), 0, 
d©a
));

676  
RCOK
;

677 
	}
}

679 
rc_t


680 
	glgödex_p
::
	$åunˇã
(
uöt4_t
 
num_∑ges
)

682 
vec_t
 
em±y
;

683 
byãs_to_åunc
 = 
	`u4i
(
num_∑ges
Ë* (
shpid_t
);

684 
	`W_DO
(
	`•li˚
(0, (
¶Ÿ_Àngth_t
)(
	`tu∂e_size
(0)-
byãs_to_åunc
), byãs_to_åunc, 
em±y
));

685  
RCOK
;

686 
	}
}

688 
	$MAKEPAGECODE
(
lgd©a_p
, 
∑ge_p
)

689 
	`MAKEPAGECODE
(
lgödex_p
, 
∑ge_p
)

	@src/sm/lgrec.h

30 #i‚de‡
LGREC_H


31 
	#LGREC_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


45 
	slg_chunk_s
 {

46 
lg_chunk_s
(Ë: 
fú°_pid
(0), 
≈ages
(0) {}

47 
shpid_t
 
pid
(shpid_à
pid_num
Ëc⁄° {  
	mfú°_pid
+
	mpid_num
; }

48 
shpid_t
 
œ°_pid
(Ëc⁄° {  
	mfú°_pid
+
	m≈ages
-1; }

50 
shpid_t
 
	mfú°_pid
;

51 
uöt4_t
 
	m≈ages
;

54 
	slg_èg_chunks_s
 {

55 
lg_èg_chunks_s
(
¢um_t
 
s
Ë: 
°‹e
(s), 
chunk_˙t
(0) {}

57 íum {
	mmax_chunks
 = 4};

66 
¢um_t
 
	m°‹e
;

68 
fûl2
 
	mfûÀr
;

69 
uöt2_t
 
	mchunk_˙t
;

70 
lg_chunk_s
 
	mchunks
[
max_chunks
];

73 
	slg_èg_ödúe˘_s
 {

74 
lg_èg_ödúe˘_s
(
¢um_t
 
s
Ë: 
ödúe˘_roŸ
(0), 
°‹e
(s) {}

76 
boﬁ
 
	m›î©‹
==(c⁄° 
lg_èg_ödúe˘_s
& 
l
) const

77 { 
ödúe˘_roŸ
 =
l
.indirect_root &&

78 
°‹e
 =
l
.store; }

79 
boﬁ
 
	m›î©‹
!=(c⁄° 
lg_èg_ödúe˘_s
& 
l
Ëc⁄° {  !(*
this
 ==Ü);}

81 
shpid_t
 
	mödúe˘_roŸ
;

88 
¢um_t
 
	m°‹e
;

103 
fûl4
 
	mfûÀr
;

111 ˛as†
	clg_èg_chunks_h
 {

112 
	mpublic
:

115 
	$lg_èg_chunks_h
(c⁄° 
fûe_p
& 
p
, 
lg_èg_chunks_s
& 
chunks
) :

116 
	`_∑ge
(
p
), 
	$_¸ef
(
chunks
) {}

118 c⁄° 
lg_èg_chunks_s
& 
	$chunk_ªf
(Ëc⁄° { 
_¸ef
;
	}
}

120 
Õid_t
 
	$œ°_pid
() const

121 { ((
_¸ef
.
chunk_˙t
 =0Ë? 
Õid_t
::
nuŒ
 :

122 
	`Õid_t
(
	`°id
(), 
	`_œ°_pid
()));
	}
}

123 
Õid_t
 
	$pid
(
uöt4_t
 
pid_num
) const

124 { 
	`Õid_t
(
	`°id
(), 
	`_pid
(
pid_num
));
	}
}

126 íum {
	gmax_chunks
 = 4};

127 
smsize_t
 
	$∑ge_cou¡
() const

128 { 
uöt4_t
 
˙t
 = 0;

129 
smsize_t
 
i
 = 0; i <
_¸ef
.
chunk_˙t
;

130 
˙t
 +
_¸ef
.
chunks
[
i
].
≈ages
, i++) ;

131  
˙t
;
	}
}

132 
rc_t
 
≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
Õid_t
 
√w_∑ges
[]);

133 
rc_t
 
åunˇã
(
uöt4_t
 
num_∑ges
);

134 
rc_t
 
	$upd©e
(
uöt4_t
 
°¨t_byã
, c⁄° 
vec_t
& 
d©a
) const ;

136 
°id_t
 
	$°id
(Ëc⁄° { 
	`°id_t
(
_∑ge
.
	`pid
().
	`vﬁ
(), 
_¸ef
.
°‹e
);
	}
}

137 
	$¥öt
(
o°ªam
 &) const;

138 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
lg_èg_chunks_h
 &);

140 
¥iv©e
:

141 
shpid_t
 
	$_œ°_pid
() const

142 { 
	`w_as£π3
(
_¸ef
.
chunk_˙t
 > 0);

143  
_¸ef
.
chunks
[_¸ef.
chunk_˙t
-1].
	`œ°_pid
(); 
	}
}

144 
shpid_t
 
	$_pid
(
uöt4_t
 
pid_num
) const;

146 c⁄° 
fûe_p
& 
_∑ge
;

147 
lg_èg_chunks_s
& 
_¸ef
;

148 
	}
};

150 ˛as†
	clg_èg_ödúe˘_h
 : 
public
 
w_ba£_t
 {

151 
public
:

152 
	$lg_èg_ödúe˘_h
(c⁄° 
fûe_p
& 
p
, 
lg_èg_ödúe˘_s
& 
i
, 
uöt4_t
 
∑ge_˙t
) :

153 
	`_∑ge
(
p
), 
	`_úef
(
i
), 
	$_∑ge_˙t
(
∑ge_˙t
) {}

155 c⁄° 
lg_èg_ödúe˘_s
& 
	$ödúe˘_ªf
(Ëc⁄° { 
_úef
;
	}
}

157 
Õid_t
 
	$œ°_pid
() const

158 { 
	`Õid_t
(
	`°id
(), 
	`_œ°_pid
());
	}
}

159 
Õid_t
 
	$pid
(
uöt4_t
 
pid_num
 ) const

160 { 
	`Õid_t
(
	`°id
(),
	`_pid
(
pid_num
));
	}
}

161 
rc_t
 
c⁄vît
(c⁄° 
lg_èg_chunks_h
& 
ﬁd_lg_èg
);

162 
rc_t
 
≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
Õid_t
 
√w_∑ges
[]);

163 
rc_t
 
åunˇã
(
uöt4_t
 
num_∑ges
);

164 
rc_t
 
	$upd©e
(
uöt4_t
 
°¨t_byã
, c⁄° 
vec_t
& 
d©a
) const ;

166 
°id_t
 
	$°id
(Ëc⁄° { 
	`°id_t
(
_∑ge
.
	`pid
().
	`vﬁ
(), 
_úef
.
°‹e
);
	}
}

168 
ªcÊags_t
 
ödúe˘_ty≥
(
smsize_t
 
∑ge_cou¡
);

170 
	g¥iv©e
:

177 
shpid_t
 
	$_œ°_ödúe˘
() const;

178 
rc_t
 
	`_add_√w_ödúe˘
(
Õid_t
& 
√w_pid
);

180 
shpid_t
 
	$_œ°_pid
() const;

181 
shpid_t
 
	$_pid
(
uöt4_t
 
pid_num
) const;

183 
uöt4_t
 
	$_∑ges_⁄_œ°_ödúe˘
() const;

185 c⁄° 
fûe_p
& 
_∑ge
;

186 
lg_èg_ödúe˘_s
& 
_úef
;

187 
uöt4_t
 
_∑ge_˙t
;

188 
	}
};

194 ˛as†
	clgd©a_p
 : 
public
 
∑ge_p
 {

195 
public
:

197 íum { 
d©a_sz
 = 
∑ge_p
::data_sz};

199 
MAKEPAGE
(
lgd©a_p
, 
∑ge_p
, 1);

201 
rc_t
 
≠≥nd
(c⁄° 
vec_t
& 
d©a
, 
uöt4_t
 
°¨t
, uöt4_à
amou¡
);

202 
rc_t
 
upd©e
(
uöt4_t
 
off£t
 , c⁄° 
vec_t
& 
d©a
,

203 
uöt4_t
 
°¨t
 , uöt4_à
amou¡
);

204 
rc_t
 
åunˇã
(
uöt4_t
 
amou¡
);

206 
	g¥iv©e
:

212 
shpid_t
 
¥ev
();

213 
shpid_t
 
√xt
();

214 
‰õnd
 
˛ass
 
	g∑ge_lök_log
;

217 ˛as†
	clgödex_p
 : 
public
 
∑ge_p
 {

218 
public
:

220 íum { 
max_pids
 = 
∑ge_p
::
d©a_sz
 / (
shpid_t
)};

222 
MAKEPAGE
(
lgödex_p
, 
∑ge_p
, 1);

224 
rc_t
 
≠≥nd
(
uöt4_t
 
num_∑ges
, c⁄° 
shpid_t
 
√w_pids
[]);

225 
rc_t
 
åunˇã
(
uöt4_t
 
num_∑ges
);

226 
shpid_t
 
	$œ°_pid
() const

227 { 
shpid_t
* 
p
 = (shpid_t*)
	`tu∂e_addr
(0);

228  
p
[
	`tu∂e_size
(0)/(
shpid_t
)-1]; 
	}
}

229 
shpid_t
 
	$pids
(
uöt4_t
 
pid_num
) const

230 { 
shpid_t
* 
p
 = (shpid_t*)
	`tu∂e_addr
(0);

231 
	`w_as£π3
(
pid_num
<
	`tu∂e_size
(0)/(
shpid_t
));

232  
p
[
pid_num
]; 
	}
}

233 
uöt4_t
 
	$pid_cou¡
(Ëc⁄° {  
	`tu∂e_size
(0)/(
shpid_t
); 
	}
}

234 
	g¥iv©e
:

240 
shpid_t
 
¥ev
();

241 
shpid_t
 
√xt
();

242 
‰õnd
 
˛ass
 
	g∑ge_lök_log
;

246 
ölöe
 
ªcÊags_t
 
	glg_èg_ödúe˘_h
::
	$ödúe˘_ty≥
(
smsize_t
 
∑ge_cou¡
)

248  ((
∑ge_cou¡
 > 
lgödex_p
::
max_pids
Ë? 
t_œrge_2
 : 
t_œrge_1
);

249 
	}
}

251 
ölöe
 
uöt4_t
 
	glg_èg_ödúe˘_h
::
	$_∑ges_⁄_œ°_ödúe˘
() const

253  (
_∑ge_˙t
 =0 ? 0 : ((_∑ge_˙à% 
lgödex_p
::
max_pids
) == 0 ?

254 (
uöt4_t
)
lgödex_p
::
max_pids
 :

255 (
_∑ge_˙t
 % 
lgödex_p
::
max_pids
)));

256 
	}
}

	@src/sm/lid.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#LID_C


	)

37 #ifde‡
__GNUG__


38 #¥agm®
im∂emíèti⁄
 "lid.h"

41 
	~<sm_öt_4.h
>

42 
	~<btcurs‹.h
>

44 #ifde‡
HAVE_UTSNAME


45 
	~<sys/ut¢ame.h
>

47 
	~<ho°«me.h
>

50 
	~<√tdb.h
>

52 
rc_t


53 
	glid_m
::
	$gíî©e_√w_vﬁid
(
lvid_t
& 
lvid
)

55 
	`FUNC
(
lid_m
::
_gíî©e_√w_vﬁid
);

64 
œ°_time
 = 0;

65 c⁄° 
max_«me
 = 100;

66 
«me
[
max_«me
+1];

69 
queue_ba£d_block_lock_t
 
lidmgƒt_muãx
;

70 
	`CRITICAL_SECTION
(
cs
, 
lidmgƒt_muãx
);

72 #ifde‡
HAVE_UTSNAME


73 
ut¢ame
 
uts
;

74 i‡(
	`u«me
(&
uts
Ë=-1Ë 
	`RC
(
eOS
);

75 
	`°∫˝y
(
«me
, 
uts
.
nodíame
, 
max_«me
);

77 i‡(
	`gëho°«me
(
«me
, 
max_«me
)Ë 
	`RC
(
eOS
);

80 
ho°ít
* 
ho°öfo
 = 
	`gëho°by«me
(
«me
);

82 i‡(!
ho°öfo
)

83 
	`W_FATAL
(
eINTERNAL
);

85 
	`mem˝y
(&
lvid
.
high
, 
ho°öfo
->
h_addr
, (lvid.high));

86 
	`DBG
–<< "lvid " << 
lvid
 );

92 
°ime_t
 
cuº_time
 = stime_t::
	`now
();

94 i‡(
cuº_time
.
	`£cs
(Ë> 
œ°_time
)

95 
œ°_time
 = 
cuº_time
.
	`£cs
();

97 
œ°_time
++;

99 
lvid
.
low
 = 
œ°_time
;

101  
RCOK
;

102 
	}
}

	@src/sm/lid.h

30 #i‚de‡
LID_H


31 
	#LID_H


	)

33 
	~"w_deföes.h
"

47 #ifde‡
__GNUG__


48 #¥agm®
öãrÁ˚


54 ˛as†
	clid_m
 : 
public
 
smÀvñ_4


56 
public
:

58 
NORET
 
	$lid_m
() {};

59 
NORET
 ~
	$lid_m
(Ë{
	}
};

61 
rc_t
 
gíî©e_√w_vﬁid
(
lvid_t
& 
lvid
);

63 
	g¥iv©e
:

66 
NORET
 
lid_m
(constÜid_m&);

67 
	glid_m
& 
	g›î©‹
=(c⁄° 
lid_m
&);

	@src/sm/lock.cpp

54 
	~"w_deföes.h
"

58 
	#SM_SOURCE


	)

59 
	#LOCK_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄
 "lock.h"

65 
	~<sm_öt_1.h
>

66 
	~<lock_x.h
>

67 
	~<lock_c‹e.h
>

68 
	~<√w
>

70 
	#W_VOID
(
x
Ë
	)
x

72 #ifde‡
EXPLICIT_TEMPLATE


73 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	glock_ªque°_t
>;

74 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	glock_ªque°_t
>;

75 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	glock_hód_t
>;

76 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	glock_hód_t
>;

77 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gX˘WaôsF‹LockEÀm
>;

78 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gX˘WaôsF‹LockEÀm
>;

81 
	gw_hashög
::
uhash
 
lockid_t
::
lockhashfunc
;

83 
	glock_m
::
	$lock_m
(
sz
)

85 
_c‹e
 = 
√w
 
	`lock_c‹e_m
(
sz
);

86 
	`w_as£π1
(
_c‹e
);

87 
	}
}

91 
	glock_m
::
	$as£π_em±y
() const

93 
_c‹e
->
	`as£π_em±y
();

94 
	}
}

96 
	glock_m
::~
	$lock_m
()

98 
	`as£π_em±y
();

99 
dñëe
 
_c‹e
;

100 
	}
}

103 "C" 
lock_dump_locks
();

104 
	$lock_dump_locks
() {

105 
smÀvñ_0
::
lm
->
	`dump
(
˚º
);

106 
˚º
 << 
Êushl
;

107 
	}
}

108 
	glock_m
::
	$dump
(
o°ªam
 &
o
)

110 
_c‹e
->
	`dump
(
o
);

111 
	}
}

113 
boﬁ


114 
	glock_m
::
	$gë_∑ª¡
(c⁄° 
lockid_t
& 
c
,Üockid_t& 
p
)

116 
c
.
	`l•a˚
()) {

117 
lockid_t
::
t_vﬁ
:

119 
lockid_t
::
t_exã¡
:

121 
p
.
	`zîo
();

123 
lockid_t
::
t_°‹e
:

125 
	`√w
 (&
p
Ë
	`lockid_t
(
c
.
	`vid
());

127 
lockid_t
::
t_∑ge
: {

129 
°id_t
 
s
;

130 
c
.
	`exåa˘_°id
(
s
);

131 
	`√w
 (&
p
Ë
	`lockid_t
(
s
);

134 
lockid_t
::
t_kvl
: {

136 
°id_t
 
s
;

137 
c
.
	`exåa˘_°id
(
s
);

138 
	`√w
 (&
p
Ë
	`lockid_t
(
s
);

141 
lockid_t
::
t_ªc‹d
: {

143 
Õid_t
 
pg
;

144 
c
.
	`exåa˘_Õid
(
pg
);

145 
	`√w
 (&
p
Ë
	`lockid_t
(
pg
);

148 
lockid_t
::
t_u£r1
:

150 
p
.
	`zîo
();

152 
lockid_t
::
t_u£r2
: {

153 
lockid_t
::
u£r1_t
 
u
;

154 
c
.
	`exåa˘_u£r1
(
u
);

155 
	`√w
 (&
p
Ë
	`lockid_t
(
u
);

158 
lockid_t
::
t_u£r3
: {

159 
lockid_t
::
u£r2_t
 
u
;

160 
c
.
	`exåa˘_u£r2
(
u
);

161 
	`√w
 (&
p
Ë
	`lockid_t
(
u
);

164 
lockid_t
::
t_u£r4
: {

165 
lockid_t
::
u£r3_t
 
u
;

166 
c
.
	`exåa˘_u£r3
(
u
);

167 
	`√w
 (&
p
Ë
	`lockid_t
(
u
);

171 
	`W_FATAL
(
eINTERNAL
);

173 
	`DBGTHRD
(<< "chûd:" << 
c
 << "Ö¨ít: " << 
p
 );

174 #ifde‡
W_TRACE


175 
boﬁ
 
b
 = 
p
.
	`l•a˚
(Ë!
lockid_t
::
t_bad
;

176 
	`DBGTHRD
(<< "gë_∑ª¡Ñëu∫†" << 
b


177 << " f‹Ö¨íàty≥ " << (
p
.
	`l•a˚
()) );

179  
p
.
	`l•a˚
(Ë!
lockid_t
::
t_bad
;

180 
	}
}

182 
boﬁ
 
	glock_m
::
	$¶i_quîy
(
lockid_t
 c⁄° &
n
)

184 
x˘_t
 * 
xd
 = 
	`x˘
();

185 
boﬁ
 
rvÆ
 = 
Ál£
;

186 i‡(
n
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
 && 
xd


187 && 
xd
->
	`lock_ˇche_íabÀd
()) {

188 
x˘_lock_öfo_t
* c⁄° 
theLockInfo
 = 
xd
->
	`lock_öfo
();

189 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

191 
lock_ˇche_ñem_t
* 
e
 = 
_c‹e
->
	`£¨ch_ˇche
(
theLockInfo
, 
n
, 
åue
);

192 
rvÆ
 = (
e
 &&É->
ªq
->
_¶i_°©us
 =
¶i_a˘ive
);

193 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

195  
rvÆ
;

196 
	}
}

198 
rc_t
 
	glock_m
::
	$quîy
(

199 c⁄° 
lockid_t
& 
n
,

200 
lmode_t
& 
m
,

201 c⁄° 
tid_t
& 
tid
,

202 
boﬁ
 
im∂icô
,

203 
boﬁ
 
ˇche_⁄ly
)

205 
	`DBGTHRD
(<<"lock_m::quîy f‹Üock " << 
n
);

206 
x˘_t
 * 
xd
 = 
	`x˘
();

207 
	`w_as£π9
(!
im∂icô
 || 
tid
 !
tid_t
::
nuŒ
);

209 
	`INC_TSTAT
(
lock_quîy_˙t
);

210 i‡(!
im∂icô
) {

211 
m
 = 
NL
;

215 i‡(
n
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
 && 
xd


216 && 
tid
 =
xd
->
	`tid
(Ë&& xd->
	`lock_ˇche_íabÀd
()) {

217 
x˘_lock_öfo_t
* c⁄° 
theLockInfo
 = 
xd
->
	`lock_öfo
();

218 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

220 
lock_ˇche_ñem_t
* 
e
 = 
_c‹e
->
	`£¨ch_ˇche
(
theLockInfo
, 
n
);

221 i‡(
e
) {

222 
m
 = 
e
->
mode
;

223 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

224  
RCOK
;

226 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

230 if(
ˇche_⁄ly
)

231  
RCOK
;

233 i‡(
tid
 =
tid_t
::
nuŒ
) {

234 
lock_hód_t
* 
lock
 = 
_c‹e
->
	`föd_lock_hód
(
n
, 
Ál£
);

235 i‡(
lock
) {

237 
m
 = 
lock
->
gø¡ed_mode
;

238 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

240  
RCOK
;

242 
	`w_as£π2
(
xd
);

244 
lock_ªque°_t
* 
ªq
 = 0;

245 
lock_hód_t
* 
lock
 = 
_c‹e
->
	`föd_lock_hód
(
n
, 
Ál£
);

246 i‡(
lock
) {

248 
ªq
 = 
lock
->
	`föd_lock_ªque°
(
xd
->
	`lock_öfo
());

250 i‡(
ªq
) {

251 
m
 = 
ªq
->
	`mode
();

252 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

253  
RCOK
;

256 i‡(
lock
)

257 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

258  
RCOK
;

261 
rc_t
 
ªsu…
 = 
	`_quîy_im∂icô
(
n
, 
m
, 
tid
, 
ˇche_⁄ly
);

262  
ªsu…
;

264  
RCOK
;

265 
	}
}

268 
rc_t
 
	glock_m
::
	$_quîy_im∂icô
(

269 c⁄° 
lockid_t
& 
n
,

270 
lmode_t
& 
m
,

271 c⁄° 
tid_t
& 
tid
,

272 
boﬁ
 
ˇche_⁄ly
)

274 
	`w_as£π1
(
tid
 !
tid_t
::
nuŒ
);

275 
m
 = 
NL
;

276 
x˘_t
 *
xd
 = 
	`x˘
();

277 
lockid_t
 
∑th
[lockid_t::
NUMLEVELS
];

278 
boﬁ
 
SIX_found
 = 
Ál£
;

279 
∑thÀn
 = 1;

281 
	`DBGTHRD
(<<"lock_m::_quîy_im∂icô f‹Üock " << 
n
);

283 
∑th
[0] = 
n
;

285 
∑thÀn
 < 
lockid_t
::
NUMLEVELS
 &&

286 
	`gë_∑ª¡
(
∑th
[
∑thÀn
-1],Öath[pathlen])) {

287 
∑thÀn
++;

291 
x˘_lock_öfo_t
* c⁄° 
theLockInfo
 = 
xd
->
	`lock_öfo
();

293 i‡(
xd
 && 
tid
 =xd->
	`tid
(Ë&& xd->
	`lock_ˇche_íabÀd
()) {

294 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

296 
cuº
 = 
∑thÀn
-1; curr >= 0; curr--) {

297 i‡(
∑th
[
cuº
].
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
) {

298 i‡(
lock_ˇche_ñem_t
* 
e
 = 
_c‹e
->
	`£¨ch_ˇche
(

299 
theLockInfo
, 
∑th
[
cuº
])) {

300 
lmode_t
 
cm
 = 
e
->
mode
;

301 i‡(
cuº
 == 0) {

302 
	`w_as£π9
(
∑th
[
cuº
] =
n
);

303 i‡(
SIX_found
)

304 
m
 = 
su¥
[
SH
][
cm
];

306 
m
 = 
cm
;

307 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

308  
RCOK
;

310 i‡(
cm
 =
SH
 || cm =
UD
 || cm =
EX
) {

311 
m
 = 
cm
;

312 } i‡(
cm
 =
SIX
) {

313 
SIX_found
 = 
åue
;

318 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

319  
RCOK
;

326 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

330 if(
ˇche_⁄ly
)

331  
RCOK
;

333 
SIX_found
 = 
Ál£
;

335 
cuº
 = 
∑thÀn
-1; curr >= 0; curr--) {

336 i‡(
lock_hód_t
* 
lock
 =

337 
_c‹e
->
	`föd_lock_hód
(
∑th
[
cuº
], 
Ál£
)

342 
	`DBGTHRD
(<<"Üock " << 
lock
 << "=" << *lock);

343 
lock_ªque°_t
* 
ªq
 = 
lock
->
	`föd_lock_ªque°
(
theLockInfo
);

344 i‡(
ªq
) {

345 
	`w_as£π9
(
ªq
);

346 
	`DBGTHRD
(<<"Ñeq " << 
ªq
 << "=" << *req);

347 i‡(
cuº
 == 0) {

348 
	`w_as£π9
(
∑th
[
cuº
] =
n
);

349 i‡(
SIX_found
)

350 
m
 = 
su¥
[
SH
][
ªq
->
	`mode
()];

352 
m
 = 
ªq
->
	`mode
();

353 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

354  
RCOK
;

356 i‡(
ªq
->
	`mode
(Ë=
SH
 ||Ñeq->mode(Ë=
UD
 ||Ñeq->mode(Ë=
EX
) {

357 
m
 = 
ªq
->
	`mode
();

358 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

359  
RCOK
;

360 } i‡(
ªq
->
	`mode
(Ë=
SIX
) {

361 
SIX_found
 = 
åue
;

362 
m
 = 
SH
;

368 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

372  
RCOK
;

373 
	}
}

375 
rc_t


376 
	glock_m
::
	$›í_qu¨k
()

378 
	`W_DO
(
lm
->
_c‹e
->
	`›í_qu¨k
(
	`x˘
()));

379  
RCOK
;

380 
	}
}

383 
rc_t


384 
	glock_m
::
	$˛o£_qu¨k
(
boﬁ
 
ªÀa£_locks
)

386 
	`W_DO
(
lm
->
_c‹e
->
	`˛o£_qu¨k
(
	`x˘
(), 
ªÀa£_locks
));

387  
RCOK
;

388 
	}
}

390 
	glock_m
::
	$dißbÀ_¶i
(
x˘_lock_öfo_t
* 
theLockInfo
) {

395 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

396 
ªque°_li°_i
 
	`ô
(
theLockInfo
->
¶i_li°
);

397 
lock_ªque°_t
* 
ªq
=
ô
.
	`√xt
())

398 
_c‹e
->
	`¶i_ab™d⁄_ªque°
(
ªq
, 
NULL
);

400 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

401 
theLockInfo
->
_¶i_íabÀd
 = 
Ál£
;

402 
	}
}

405 
rc_t


406 
	glock_m
::
	$_lock
(

407 c⁄° 
lockid_t
& 
_n
,

408 
lmode_t
 
m
,

409 
lmode_t
& 
¥ev_mode
,

410 
lmode_t
& 
¥ev_pgmode
,

411 
duøti⁄_t
 
duøti⁄
,

412 
timeout_ö_ms
 
timeout
,

413 
boﬁ
 
f‹˚
,

414 
lockid_t
** 
«meInLockHód
,

415 c⁄° 
boﬁ
 
bIgn‹eP¨íts
)

417 
	`FUNC
(
lock_m
::
_lock
);

418 
w_rc_t
 
rc
;

419 
x˘_t
* 
xd
 = 
	`x˘
();

420 
boﬁ
 
acquúed
 = 
Ál£
;

421 
x˘_lock_öfo_t
* 
theLockInfo
 = 0;

422 
lock_ªque°_t
* 
theLa°LockReq
 = 0;

423 
lockid_t
 
n
 = 
_n
;

425 
	`INC_TSTAT
(
lock_ªque°_˙t
);

427 #ifde‡
W_TRACE


428 
	`DBGTHRD
(<< "lock " << 
n


429 << " mode=" << (
m
Ë<< " duøti⁄=" << (
duøti⁄
)

430 << "Åimeout=" << 
timeout
 << " f‹˚=" << 
f‹˚
 );

431 i‡(
xd
) {

432 
	`DBGTHRD
–<< " x˘=" << *
xd
 );

434 
	`DBGTHRD
( << " NO XCT" );

438 
¥ev_mode
 = 
NL
;

439 
¥ev_pgmode
 = 
NL
;

441 
	`w_as£π9
(
n
.
	`l•a˚
(Ë!
lockid_t
::
t_exã¡
 ||

442 
duøti⁄
 =
t_l⁄g
 && (
m
 =
EX
 || m =
IX
));

444 
timeout
) {

445 
WAIT_SPECIFIED_BY_XCT
:

447 i‡(
xd
) {

448 
timeout
 = 
xd
->
	`timeout_c
();

454 
WAIT_SPECIFIED_BY_THREAD
:

455 
timeout
 = 
	`me
()->
	`lock_timeout
();

462 
	`w_as£π9
(
timeout
 >0 ||Åimeouà=
WAIT_FOREVER
);

464 i‡(
xd
) {

466 
theLockInfo
 = 
xd
->
	`lock_öfo
();

470 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

476 if(
n
.
	`l•a˚
(Ë>
theLockInfo
->
	`lock_Àvñ
() &&

477 
n
.
	`l•a˚
(Ë!
lockid_t
::
t_exã¡
 &&

478 
n
.
	`l•a˚
(Ë!
lockid_t
::
t_kvl
 &&

479 !
n
.
	`is_u£r_lock
()) {

480 
n
.
	`åunˇã
(
theLockInfo
->
	`lock_Àvñ
());

483 
acquúed
=
åue
;

487 i‡(
n
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
 && 
xd
->
	`lock_ˇche_íabÀd
())

489 i‡(
lock_ˇche_ñem_t
* 
e
 = 
_c‹e
->
	`£¨ch_ˇche
(

490 
theLockInfo
, 
n
, 
åue
)) {

491 
lmode_t
 
cm
 = 
e
->
mode
;

492 i‡(
cm
 =
su¥
[
m
][cm]) {

493 
¥ev_mode
 = 
cm
;

494 i‡(
n
.
	`l•a˚
(Ë=
lockid_t
::
t_∑ge
) {

495 
¥ev_pgmode
 = 
cm
;

497 
theLa°LockReq
 = 
e
->
ªq
;

498 
	`INC_TSTAT
(
lock_ˇche_hô_˙t
);

499 
d⁄e
;

504 
lockid_t
* 
h
 = 
xd
->
	`lock_öfo_hõørchy
();

505 
	`w_as£π9
(
h
);

506 
h
[0] = 
n
;

508 
lmode_t
 
pmode
 = 
∑ª¡_mode
[
m
];

509 
lmode_t
* 
hmode
[
lockid_t
::
NUMLEVELS
];

510 
hmode
[0] = 0;

518 
i
 = 1;

520 i‡(!
bIgn‹eP¨íts
) {

522 i‡(
xd
->
	`lock_ˇche_íabÀd
(Ë&& !
n
.
	`is_u£r_lock
()) {

523 
i
 = 1; i < 
lockid_t
::
NUMLEVELS
; i++) {

525 i‡(!
	`gë_∑ª¡
(
h
[
i
-1], h[i]))

527 
	`DBGTHRD
(<< " gë_∑ª¡Årue" << 
h
[
i
-1] << " " << h[i]);

529 
hmode
[
i
] = 0;

531 
lock_ˇche_ñem_t
* 
e
 =

532 
_c‹e
->
	`£¨ch_ˇche
(
theLockInfo
, 
h
[
i
], 
åue
);

533 
hmode
[
i
] = 
e
 ? &e->
mode
 : 0;

535 i‡(
hmode
[
i
] && 
su¥
[*hmode[i]][
pmode
] == *hmode[i]) {

537 
	`DBGTHRD
(<< " "

538 << 
h
[
i
]

539 << "(mode=" << (*
hmode
[
i
]) << ") cache hit");

540 
theLa°LockReq
 = 
e
->
ªq
;

541 
	`INC_TSTAT
(
lock_ˇche_hô_˙t
);

543 i‡(
h
[
i
].
	`l•a˚
(Ë=
lockid_t
::
t_∑ge
)

544 
¥ev_pgmode
 = *
hmode
[
i
];

546 i‡(! 
f‹˚
) {

547 
lmode_t
 
hñd
 = *
hmode
[
i
];

548 i‡(
hñd
 =
SH
 || hñd =
EX
 ||

549 
hñd
 =
UD
 || (hñd =
SIX
 && 
m
 =
SH
)) {

550 i‡(
hñd
 =
SIX
 && 
n
.
	`l•a˚
(Ë> 
h
[
i
].lspace()) {

555 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

556 
acquúed
 = 
Ál£
;

558 
	`W_DO
(
	`_quîy_im∂icô
(
n
, 
¥ev_mode
, 
xd
->
	`tid
()));

559 i‡(
n
.
	`l•a˚
(Ë=
lockid_t
::
t_ªc‹d
 &&

560 
h
[
i
].
	`l•a˚
(Ë< 
lockid_t
::
t_∑ge
) {

561 
Õid_t
 
tmp_Õid
;

562 
n
.
	`exåa˘_Õid
(
tmp_Õid
);

563 
lockid_t
 
	`tmp_lockid
(
tmp_Õid
);

564 
	`W_DO
–
	`_quîy_im∂icô
(
tmp_lockid
,

565 
¥ev_pgmode
, 
xd
->
	`tid
()) );

567 
¥ev_pgmode
 = 
¥ev_mode
;

570 
¥ev_mode
 = 
hñd
;

571 
¥ev_pgmode
 = 
hñd
;

573 
d⁄e
;

578 #i‡
W_DEBUG_LEVEL
 > 2

579 i‡(
hmode
[
i
]) {

580 
	`DBGTHRD
(<< " "

581 << 
h
[
i
]

582 << "(mode=" << (*
hmode
[
i
])

585 
	`DBGTHRD
(<< " " << 
h
[
i
] << " cache miss");

591 
	`DBGTHRD
(<< " Lock cache disabled or is userÜock. Initialize h[]");

593 
i
 = 1; i < 
lockid_t
::
NUMLEVELS
; i++) {

594 i‡(!
	`gë_∑ª¡
(
h
[
i
-1], h[i]))

596 
	`DBGTHRD
(<< " gë_∑ª¡Årue" << 
h
[
i
-1] << " " << h[i]);

601 
	`DBGTHRD
(<< " i" << 
i
 << " i†˛o£° c‹ª˘ly-hñdán˚°‹ :" << 
h
[i]);

602 
	`DBGTHRD
(<< "Entireárray:");

603 
ii
=0; iò< 
lockid_t
::
NUMLEVELS
; ii++ ) {

606 
	`DBGTHRD
(<< " h[" << 
ii
 << "] = " << 
h
[ii]);

608 if(
theLa°LockReq
) {

609 
	`DBGTHRD
(<< "theLa°LockReq :" << *
theLa°LockReq
);

612 
	`w_as£π3
(
i
 < 
lockid_t
::
NUMLEVELS
 || (i ==Üockid_t::NUMLEVELS &&

613 (
h
[
i
-1].
	`l•a˚
(Ë=
lockid_t
::
t_vﬁ
 ||

614 
h
[
i
-1].
	`l•a˚
(Ë=
lockid_t
::
t_u£r1
)));

620 i‡(
theLockInfo
->
	`ö_qu¨k_sc›e
(Ë&& 
n
.
	`l•a˚
(Ë!
lockid_t
::
t_exã¡
) {

621 i‡(
duøti⁄
 > 
t_sh‹t
) {

622 
duøti⁄
 = 
t_sh‹t
;

631 
j
 = 
i
 - 1; j >= 0; j--) {

632 
lmode_t
 
ªt
;

633 
lmode_t
 
√ed
 = (
j
 =0 ? 
m
 : 
pmode
);

634 
lock_ªque°_t
* 
ªq
 = 0;

636 
	`DBG
(<< "Àvñ j=" << 
j
 << "Çìd modê" << 
√ed
);

638 
w_rc_t
::
îrcode_t
 
	`r˚
(
eOK
);

640 
r˚
 = 
_c‹e
->
	`acquúe_lock
(
xd
,

641 
h
[
j
],

642 
NULL
 ,

643 &
ªq
,

644 
√ed
,

645 
¥ev_mode
,

646 
duøti⁄
,

647 
timeout
,

648 
ªt


650 } 
r˚
 && (r˚ =
eRETRY
));

652 #i‡
W_DEBUG_LEVEL
 >= 8

653 i‡(
r˚
 &&Ñ˚ =
eDEADLOCK
) {

654 
w_o°r°ªam
 
s
;

655 
s
 << 
_n
 << " modê" << 
m
;

656 
	`Ârötf
(
°dîr
,

657 "Dódlock dëe˘edácquúög %s\n", 
s
.
	`c_°r
());

660 i‡(
r˚
) {

661 
rc
 = 
	`RC
(
r˚
);

662 
d⁄e
;

667 i‡(
h
[
j
].
	`l•a˚
(Ë=
lockid_t
::
t_∑ge
)

668 
¥ev_pgmode
 = 
¥ev_mode
;

670 
boﬁ
 
bøke
 = (
ªt
 =
SH
 ||Ñë =
EX
 ||Ñë =
UD
);

672 i‡(
duøti⁄
 =
t_ö°™t
) {

673 #i‡
W_DEBUG_LEVEL
 > 0

674 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
theLockInfo
->
lock_öfo_muãx
));

683 if(
¥ev_mode
 =
NL
) {

684 
	`w_as£π1
(
ªq
->
	`gë_cou¡
() == 1);

687 
	`W_COERCE
–
_c‹e
->
	`ªÀa£_lock
(
theLockInfo
, 
h
[
j
],

688 
ªq
->
	`gë_lock_hód
(),Ñeq, 
Ál£
) );

690 } i‡(
duøti⁄
 >
t_l⁄g
 &&

691 
xd
->
	`lock_ˇche_íabÀd
(Ë&& !
n
.
	`is_u£r_lock
())

693 i‡(
hmode
[
j
])

694 *
hmode
[
j
] = 
ªt
;

695 i‡(
h
[
j
].
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
) {

696 
_c‹e
->
	`put_ö_ˇche
(
theLockInfo
, 
h
[
j
], 
ªt
, 
ªq
);

697 
lock_ˇche_ñem_t
* 
e
 = 
_c‹e
->
	`£¨ch_ˇche
(

698 
theLockInfo
, 
h
[
j
]);

699 
hmode
[
j
] = 
e
? &e->
mode
 : 0;

703 i‡(
¥ev_mode
 !
ªt
 && 
theLa°LockReq
) {

704 i‡(
theLa°LockReq
->
	`num_chûdªn
(Ë>
d⁄tEsˇœã
) {

705 i‡(
theLa°LockReq
->
	`num_chûdªn
(Ë=
d⁄tEsˇœã
) {

706 
ªq
->
	`£t_num_chûdªn
 ( 
d⁄tEsˇœã
 );

712 i‡(
¥ev_mode
 =
NL
)

713 
theLa°LockReq
->
	`öc_num_chûdªn
();

715 
öt4_t
 
thªshﬁd
 =

716 
xd
->
	`GëEsˇœti⁄ThªshﬁdsAºay
()[
h
[
j
 + 1].
	`l•a˚
()];

717 i‡(
thªshﬁd
 < 
d⁄tEsˇœã
 &&

718 
theLa°LockReq
->
	`num_chûdªn
(Ë>
thªshﬁd
) {

722 
lmode_t
 
√w_pmode
 = (
m
 =
SH
 || m =
IS
Ë? SH : 
EX
;

723 
lmode_t
 
√w_¥ev_mode
 = 
NL
;

725 i‡(!
f‹˚
 ||

726 
√w_pmode
 !
su¥
[√w_pmode][
theLa°LockReq
->
	`mode
()]) {

731 
	`DBG
(

732 << "esˇœtög from " << 
n


733 << "(mode=" << (
m
)

734 << "Ëtÿ" << 
h
[
j
+1]

736 << (*
hmode
[
j
+1])

738 << (
√w_pmode
) << ")");

740 
w_rc_t
::
îrcode_t
 
	`esˇœã_rc
(
eOK
);

741 
lock_ªque°_t
* 
esˇœã_ªq
 = 0;

744 
esˇœã_rc
 = 
_c‹e
->
	`acquúe_lock
(
xd
,

745 
h
[
j
+1], 0,

746 &
esˇœã_ªq
, 
√w_pmode
,

747 
√w_¥ev_mode
, 
duøti⁄
, 0, 
ªt
);

748 } 
esˇœã_rc
 &&

749 
esˇœã_rc
 =
eRETRY
);

751 i‡(!
esˇœã_rc
) {

752 
bøke
 = (
ªt
 =
SH
 ||Ñë =
EX
 ||Ñë =
UD
);

754 i‡(
duøti⁄
 >
t_l⁄g
 && 
xd
->
	`lock_ˇche_íabÀd
()) {

755 i‡(
hmode
[
j
+1])

756 *
hmode
[
j
+1] = 
ªt
;

757 i‡(
h
[
j
+1].
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
) {

758 
_c‹e
->
	`put_ö_ˇche
(
theLockInfo
, 
h
[
j
+1],

759 
ªt
, 
esˇœã_ªq
);

763 
h
[
j
 + 1].
	`l•a˚
()) {

764 
lockid_t
::
t_∑ge
:

765 
	`INC_TSTAT
(
lock_esc_to_∑ge
);

767 
lockid_t
::
t_°‹e
:

768 
	`INC_TSTAT
(
lock_esc_to_°‹e
);

770 
lockid_t
::
t_vﬁ
:

771 
	`INC_TSTAT
(
lock_esc_to_vﬁume
);

775 
	`w_as£π1
(
Ál£
);

783 
theLa°LockReq
 = 
ªq
;

785 i‡(
h
[
j
].
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
 && (
bøke
 || 
ªt
 =
SIX
)){

791 
_c‹e
->
	`com∑˘_ˇche
(
theLockInfo
, 
h
[
j
]);

793 
k
 = 
j
-1; k >= 0; k--)

794 
hmode
[
k
] = 
NULL
;

797 i‡(! 
f‹˚
 && (
bøke
 || (
ªt
 =
SIX
 && 
m
 =
SH
))) {

798 i‡(
h
[
j
].
	`l•a˚
(Ë< 
lockid_t
::
t_∑ge
)

799 
¥ev_pgmode
 = 
¥ev_mode
;

836 
	`w_as£π2
(
smÀvñ_0
::
	`ö_ªcovîy_ªdo
());

838 
d⁄e
:

839 i‡(
acquúed
) {

840 
	`w_as£π9
(
xd
 != 0);

841 
	`w_as£π9
(
theLockInfo
 != 0);

842 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

844 i‡(!
rc
.
	`is_îr‹
(Ë&& 
«meInLockHód
) {

846 
	`w_as£π3
(
theLa°LockReq
);

847 *
«meInLockHód
 = &
theLa°LockReq
->
	`gë_lock_hód
()->
«me
;

850  
rc
;

851 
	}
}

854 
rc_t


855 
	glock_m
::
	$u∆ock
(c⁄° 
lockid_t
& 
n
)

857 
	`FUNC
(
lock_m
::
u∆ock
);

858 
	`DBGTHRD
(<< "u∆ock " << 
n
 );

860 
x˘_t
* 
xd
 = 
	`x˘
();

861 
w_rc_t
 
rc
;

862 i‡(
xd
) {

863 
	`W_COERCE
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
.
	`acquúe
());

864 
lockid_t
 
h
[2];

865 
c
 = 0;

866 
h
[
c
] = 
n
;

868 
	`DBGTHRD
(<< " whûêgë_∑ª¡Årue" << 
h
[1-
c
] << " " << h[c]);

869 
c
 = 1 - c;

870 
rc
 = 
_c‹e
->
	`ªÀa£_lock
(
xd
->
	`lock_öfo
(), 
h
[1-
c
], 0, 0, 
Ál£
);

871 i‡(
rc
.
	`is_îr‹
())

873 } 
	`gë_∑ª¡
(
h
[1-
c
], h[c]));

874 
	`W_VOID
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
.
	`ªÀa£
());

877 
	`INC_TSTAT
(
u∆ock_ªque°_˙t
);

878  
rc
;

879 
	}
}

888 
rc_t
 
	glock_m
::
	$u∆ock_duøti⁄
(

889 
duøti⁄_t
 
duøti⁄
,

890 
boﬁ
 
Æl_Àss_th™
,

891 
boﬁ
 
d⁄t_˛ón_exts
)

893 
	`FUNC
(
lock_m
::
u∆ock_duøti⁄
);

894 
	`DBGTHRD
(<< "lock_m::unlock_duration"

895 << " duøti⁄=" << (
duøti⁄
)

896 << "áŒ_Àss_th™=" << 
Æl_Àss_th™


898 
x˘_t
* 
xd
 = 
	`x˘
();

899 
x˘_lock_öfo_t
* 
theLockInfo
 = 
xd
->
	`lock_öfo
();

900 
w_rc_t
 
rc
;

901 i‡(
xd
) {

903 
extid_t
 
extid
;

904 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

906 
rc
 = 
_c‹e
->
	`ªÀa£_duøti⁄
(
theLockInfo
, 
duøti⁄
,

907 
Æl_Àss_th™
, 
d⁄t_˛ón_exts
 ? 0 : &
extid
);

909 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

911 i‡(
rc
.
	`îr_num
(Ë=
eFOUNDEXTTOFREE
) {

912 
	`W_DO
–
smÀvñ_0
::
io
->
	`‰ì_ext_a·î_x˘
(
extid
) );

913 
lockid_t
 
	`«me
(
extid
);

914 
	`W_COERCE
(
theLockInfo
->
lock_öfo_muãx
.
	`acquúe
());

915 
	`W_DO
–
_c‹e
->
	`ªÀa£_lock
(
theLockInfo
, 
«me
, 0, 0, 
åue
) );

916 
	`W_VOID
(
theLockInfo
->
lock_öfo_muãx
.
	`ªÀa£
());

918 } 
rc
.
	`îr_num
(Ë=
eFOUNDEXTTOFREE
);

920  
rc
;

921 
	}
}

925 
rc_t
 
	glock_m
::
	$d⁄t_esˇœã
(c⁄° 
lockid_t
& 
n
, 
boﬁ
 
∑ssOnToDes˚nd™ts
)

927 
	`FUNC
(
lock_m
::
d⁄t_esˇœã
);

928 
	`DBGTHRD
–<< "lock_m::d⁄t_esˇœã(" << 
n
 << ", " << 
∑ssOnToDes˚nd™ts
 << ")" );

930 
x˘_t
* 
xd
 = 
	`x˘
();

931 
lmode_t
 
¥ev_mode
;

932 
lmode_t
 
ªt
;

933 
lock_ªque°_t
* 
ªq
;

935 i‡(
xd
) {

936 
	`W_COERCE
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
.
	`acquúe
());

937 
	`W_EDO
(
_c‹e
->
	`acquúe_lock
(
xd
, 
n
, 0, &
ªq
, 
NL
,

938 
¥ev_mode
, 
t_l⁄g
, 
xd
->
	`timeout_c
(), 
ªt
));

940 
	`w_as£π1
(
ªq
);

941 
ªq
->
	`£t_num_chûdªn
(
∑ssOnToDes˚nd™ts
 ?

942 
d⁄tEsˇœã
 : 
d⁄tEsˇœãD⁄tPassOn
);

943 
	`W_VOID
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
.
	`ªÀa£
());

944  
RCOK
;

946  
	`RC
(
eNOTRANS
);

948 
	}
}

950 
rc_t


951 
	glock_m
::
	$lock
(

952 c⁄° 
lockid_t
& 
n
,

953 
lmode_t
 
m
,

954 
duøti⁄_t
 
duøti⁄
,

955 
timeout_ö_ms
 
timeout
,

956 
lmode_t
* 
¥ev_mode
,

957 
lmode_t
* 
¥ev_pgmode
,

958 
lockid_t
** 
«meInLockHód
,

959 c⁄° 
boﬁ
 
bIgn‹eP¨íts
)

961 #i‡
W_DEBUG_LEVEL
 > 2

962 
	`w_as£π3
 (
n
.
	`l•a˚
(Ë!
lockid_t
::
t_bad
);

965 
lmode_t
 
_¥ev_mode
;

966 
lmode_t
 
_¥ev_pgmode
;

968 
rc_t
 
rc
 = 
	`_lock
(
n
, 
m
, 
_¥ev_mode
, 
_¥ev_pgmode
, 
duøti⁄
, 
timeout
, 
Ál£
,

969 
«meInLockHód
, 
bIgn‹eP¨íts
);

971 i‡(
¥ev_mode
 != 0)

972 *
¥ev_mode
 = 
_¥ev_mode
;

973 i‡(
¥ev_pgmode
 != 0)

974 *
¥ev_pgmode
 = 
_¥ev_pgmode
;

975  
rc
;

976 
	}
}

978 
rc_t


979 
	glock_m
::
	$lock_f‹˚
(

980 c⁄° 
lockid_t
& 
n
,

981 
lmode_t
 
m
,

982 
duøti⁄_t
 
duøti⁄
,

983 
timeout_ö_ms
 
timeout
,

984 
lmode_t
* 
¥ev_mode
,

985 
lmode_t
* 
¥ev_pgmode
,

986 
lockid_t
** 
«meInLockHód
,

987 c⁄° 
boﬁ
 
bIgn‹eP¨íts
)

989 
lmode_t
 
_¥ev_mode
;

990 
lmode_t
 
_¥ev_pgmode
;

992 
rc_t
 
rc
 = 
	`_lock
(
n
, 
m
, 
_¥ev_mode
, 
_¥ev_pgmode
, 
duøti⁄
, 
timeout
, 
åue
,

993 
«meInLockHód
, 
bIgn‹eP¨íts
);

995 i‡(
¥ev_mode
 != 0)

996 *
¥ev_mode
 = 
_¥ev_mode
;

997 i‡(
¥ev_pgmode
 != 0)

998 *
¥ev_pgmode
 = 
_¥ev_pgmode
;

999  
rc
;

1000 
	}
}

	@src/sm/lock.h

53 #i‚de‡
LOCK_H


54 
	#LOCK_H


	)

56 
	~"w_deföes.h
"

60 
	~<kvl_t.h
>

61 
	~<lock_s.h
>

63 
˛ass
 
	gx˘_lock_öfo_t
;

64 
˛ass
 
	glock_c‹e_m
;

66 #ifde‡
__GNUG__


67 #¥agm®
öãrÁ˚


70 ˛as†
	clock_m
 : 
public
 
lock_ba£_t
 {

71 
public
:

73 
‰õnd
 
˛ass
 
x˘_lock_öfo_t
;

74 
‰õnd
 
˛ass
 
	mlock_hód_t
;

75 
	mlock_ba£_t
::
	tlmode_t
Ümode_t;

76 
	mlock_ba£_t
::
	tduøti⁄_t
 duration_t;

77 
	mlock_ba£_t
::
	t°©us_t
 status_t;

80 
⁄_thªad_öô
();

81 
⁄_thªad_de°roy
();

83 
NORET
 
lock_m
(
sz
);

84 
	mNORET
 ~
lock_m
();

86 
cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

87 
	$as£π_em±y
() const;

88 
	`dump
(
o°ªam
 &
o
);

90 
	$°©s
(

91 
u_l⁄g
 & 
buckës_u£d
,

92 
u_l⁄g
 & 
max_buckë_Àn
,

93 
u_l⁄g
 & 
mö_buckë_Àn
,

94 
u_l⁄g
 & 
mode_buckë_Àn
,

95 & 
avg_buckë_Àn
,

96 & 
v¨_buckë_Àn
,

97 & 
°d_buckë_Àn


100 c⁄° 
lmode_t
 
∑ª¡_mode
[
NUM_MODES
];

102 
boﬁ
 
	`gë_∑ª¡
(c⁄° 
lockid_t
& 
c
,Üockid_t& 
p
);

104 
rc_t
 
	`lock
(

105 c⁄° 
lockid_t
& 
n
,

106 
lmode_t
 
m
,

107 
duøti⁄_t
 
duøti⁄
 = 
t_l⁄g
,

108 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_XCT
,

109 
lmode_t
* 
¥ev_mode
 = 0,

110 
lmode_t
* 
¥ev_pgmode
 = 0,

111 
lockid_t
** 
«meInLockHód
 = 0,

112 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

117 
rc_t
 
	`lock_f‹˚
(

118 c⁄° 
lockid_t
& 
n
,

119 
lmode_t
 
m
,

120 
duøti⁄_t
 
duøti⁄
 = 
t_l⁄g
,

121 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_XCT
,

122 
lmode_t
* 
¥ev_mode
 = 0,

123 
lmode_t
* 
¥ev_pgmode
 = 0,

124 
lockid_t
** 
«meInLockHód
 = 0,

125 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

127 
rc_t
 
	`u∆ock
(c⁄° 
lockid_t
& 
n
);

129 
rc_t
 
	`u∆ock_duøti⁄
(

130 
duøti⁄_t
 
duøti⁄
,

131 
boﬁ
 
Æl_Àss_th™
,

132 
boﬁ
 
d⁄t_˛ón_exts
);

134 
rc_t
 
	`d⁄t_esˇœã
(

135 c⁄° 
lockid_t
& 
n
,

136 
boﬁ
 
∑ssOnToDes˚nd™ts
 = 
åue
);

138 
boﬁ
 
	`¶i_quîy
(
lockid_t
 c⁄° &
n
);

140 
rc_t
 
	`quîy
(

141 c⁄° 
lockid_t
& 
n
,

142 
lmode_t
& 
m
,

143 c⁄° 
tid_t
& 
tid
 =Åid_t::
nuŒ
,

144 
boﬁ
 
im∂icô
 = 
Ál£
,

145 
boﬁ
 
ˇche_⁄ly
 = 
Ál£
);

148 
	`lock_°©s
(

149 
u_l⁄g
& 
locks
,

150 
u_l⁄g
& 
acquúes
,

151 
u_l⁄g
& 
ˇche_hôs
,

152 
u_l⁄g
& 
u∆ocks
,

153 
boﬁ
 
ª£t
);

155 
rc_t
 
	`›í_qu¨k
();

156 
rc_t
 
	`˛o£_qu¨k
(
boﬁ
 
ªÀa£_locks
);

158 
	`£t_¶i_íabÀd
(
boﬁ
 
íabÀ
);

159 
	`dißbÀ_¶i
(
x˘_lock_öfo_t
* 
theLockInfo
);

161 
¥iv©e
:

162 
lock_c‹e_m
* 
	$c‹e
(Ëc⁄° {  
_c‹e
; }

164 
rc_t
 
	`_lock
(

165 c⁄° 
lockid_t
& 
n
,

166 
lmode_t
 
m
,

167 
lmode_t
& 
¥ev_mode
,

168 
lmode_t
& 
¥ev_pgmode
,

169 
duøti⁄_t
 
duøti⁄
,

170 
timeout_ö_ms
 
timeout
,

171 
boﬁ
 
f‹˚
,

172 
lockid_t
** 
«meInLockHód
,

173 c⁄° 
boﬁ
 
bIgn‹eP¨íts
 = 
Ál£
);

175 
rc_t
 
	`_quîy_im∂icô
(

176 c⁄° 
lockid_t
& 
n
,

177 
lmode_t
& 
m
,

178 c⁄° 
tid_t
& 
tid
,

179 
boﬁ
 
ˇche_⁄ly
=
Ál£
);

181 
lock_c‹e_m
* 
_c‹e
;

182 
	}
};

	@src/sm/lock_cache.h

54 #i‚de‡
LOCK_CACHE_H


55 
	#LOCK_CACHE_H


	)

57 
	~"w_deföes.h
"

61 
	glock_ˇche_ñem_t
 : 
public
 
w_ba£_t
 {

62 
lockid_t
 
lock_id
;

63 
	glock_ba£_t
::
lmode_t
 
mode
;

64 
lock_ªque°_t
* 
	gªq
;

66 
lock_ˇche_ñem_t
()

67 : 
mode
(
NL
),

68 
ªq
(0)

73 c⁄° 
	glock_ˇche_ñem_t
 &
	g›î©‹
=(c⁄° 
lock_ˇche_ñem_t
 &
r
)

75 
lock_id
 = 
r
.lock_id;

76 
	gmode
 = 
r
.
mode
;

77 
	gªq
 = 
r
.
ªq
;

78  *
	gthis
;

81 
˛ór
() {

82 
	gmode
 = 
NL
;

85 
dump
() const {

86 if(
	gmode
 !
NL
) {

87 
cout
 << "\éock_id " << 
lock_id
 << " modê" << 
mode
 << 
ídl
;

91 
	g¥iv©e
:

93 
lock_ˇche_ñem_t
(constÜock_cache_elem_t &);

97 
	gãm∂©e
 <
	gS
, 
	gL
>

98 ˛as†
	clock_ˇche_t
 : 
public
 
w_ba£_t
 {

99 
lock_ˇche_ñem_t
 
buf
[
S
][
L
];

100 
	mpublic
:

101 
	$dump
() const {

102 
j
=0; j < 
L
; j++)

103 
i
=0; i < 
S
; i++Ë
buf
[i][
j
].
	`dump
();

105 
	$ª£t
() {

109 
j
=0; j < 
L
; j++)

110 
i
=0; i < 
S
; i++Ë
buf
[i][
j
].
	`˛ór
();

111 
	}
}

112 
lock_ˇche_ñem_t
* 
	$¥obe
(c⁄° 
lockid_t
& 
id
, 
l
) {

114 
uöt4_t
 
idx
 = 
	`w_hash
(
id
);

115  &
buf
[
idx
 % 
S
][
l
];

116 
	}
}

117 
lock_ˇche_ñem_t
* 
	$£¨ch
(c⁄° 
lockid_t
& 
id
) {

119 
lock_ˇche_ñem_t
* 
p
 = 
	`¥obe
(
id
, id.
	`l•a˚
());

120  (
p
->
lock_id
 =
id
 &&Ö->
mode
 !
NL
)?Ö : 
NULL
;

123 
	}
}

128 
	$com∑˘
(c⁄° 
lockid_t
 &
_l
)

130 
k
 = 
_l
.
	`l•a˚
(Ë+ 1; k <
lockid_t
::
ˇched_gønuœrôy
; k++)

132 
i
=0; i < 
S
; i++) {

133 
lock_ˇche_ñem_t
 *
p
 = &
buf
[
i
][
k
];

134 if(
p
->
mode
 =
NL
) ;

135 
lockid_t
 
	`l
(
p
->
lock_id
);

136 
l
.
	`åunˇã
(
_l
.
	`l•a˚
());

137 if(
l
 =
_l
) {

138 
p
->
	`˛ór
();

142 
	}
}

143 
	$com∑˘
() {

145 
j
=0; j < 
L
; j++)

146 
i
=0; i < 
S
; i++Ë
	`com∑˘
(
buf
[i][
j
].
lock_id
);

147 
	}
}

148 
boﬁ
 
	$put
(c⁄° 
lockid_t
& 
id
, 
lock_ba£_t
::
lmode_t
 
m
,

149 
lock_ªque°_t
* 
ªq
, 
lock_ˇche_ñem_t
 &
vi˘im
)

151 
lock_ˇche_ñem_t
* 
p
 = 
	`¥obe
(
id
, id.
	`l•a˚
());

152 
boﬁ
 
evi˘ed
 = 
åue
;

154 if(
p
->
mode
 !
NL
) {

158 if(
p
->
lock_id
.
	`l•a˚
(Ë>
id
.lspace())

162 
vi˘im
 = *
p
;

166 
vi˘im
.
lock_id
 = 
id
;

167 
vi˘im
.
ªq
 =Ñeq;

168 
vi˘im
.
mode
 = 
m
;

169  
åue
;

178 
evi˘ed
 = 
Ál£
;

181 
p
->
lock_id
 = 
id
;

182 
p
->
ªq
 =Ñeq;

183 
p
->
mode
 = 
m
;

184  
evi˘ed
;

185 
	}
}

	@src/sm/lock_core.cpp

54 
	~"w_deföes.h
"

58 
	#LOCK_CORE_C


	)

59 
	#SM_SOURCE


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄
 "lock_s.h"

63 #¥agm®
im∂emíèti⁄
 "lock_x.h"

64 #¥agm®
im∂emíèti⁄
 "lock_core.h"

67 
	#USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS
 0

	)

69 #i‡
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS


70 
	~"block_Æloc.h
"

73 
	~"°_îr‹_íum_gí.h
"

74 
	~"sm_öt_1.h
"

75 
	~"kvl_t.h
"

76 
	~"lock_s.h
"

77 
	~"lock_x.h
"

78 
	~"lock_c‹e.h
"

79 
	~"és.h
"

81 
	~<w_°r°ªam.h
>

83 #ifde‡
EXPLICIT_TEMPLATE


84 
ãm∂©e
 
˛ass
 
	gw_li°_c⁄°_i
<
	glock_ªque°_t
, 
	gqueue_ba£d_lock_t
>;

85 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<>;

88 #i‡
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS


89 
DECLARE_TLS
(
block_Æloc
<
lock_hód_t
>, 
lockHódPoﬁ
);

90 
	gobje˘_ˇche
<
	tlock_ªque°_t
, 
	tobje˘_ˇche_öôülizög_Á˘‹y
<lock_ªque°_t> > 
	tlock_ªque°_ˇche_t
;

91 
DECLARE_TLS
(
lock_ªque°_ˇche_t
, 
lock_ªque°_poﬁ
);

94 #i‡
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS


95 
	#NEW_LOCK_REQUEST
 
lock_ªque°_poﬁ
->
acquúe


	)

96 
	#DELETE_LOCK_REQUEST
(
ªq
Ë
lock_ªque°_poﬁ
->
	`ªÀa£
‘eq)

	)

98 
	#NEW_LOCK_REQUEST
 (
√w
 
	`lock_ªque°_t
())->
öô


	)

99 
	#DELETE_LOCK_REQUEST
(
ªq
Ë
dñëe
 
	)
req

109 c⁄° 
	glock_ba£_t
::
lmode_t
 
lock_m
::
∑ª¡_mode
[
NUM_MODES
] = {

110 
NL
, 
IS
, 
IX
, IS, IX, IX, IX

120 c⁄° * c⁄° 
	glock_ba£_t
::
duøti⁄_°r
[
t_num_duøti⁄s
] = {

124 c⁄° * c⁄° 
	glock_ba£_t
::
mode_°r
[
NUM_MODES
] = {

138 c⁄° 
boﬁ
 
	glock_ba£_t
::
com∑t


139 [
NUM_MODES
]

140 [
NUM_MODES
]

143  { 
åue
,Årue,Årue,Årue,Årue,Årue,Årue },

144  { 
åue
,Årue,Årue,Årue,Årue, 
Ál£
, false },

145  { 
åue
,Årue,Årue, 
Ál£
, false, false, false },

146  { 
åue
,Årue, 
Ál£
,Årue, false, false, false },

147  { 
åue
,Årue, 
Ál£
, false, false, false, false },

148  { 
åue
, 
Ál£
, false,Årue, false, false, false },

149  { 
åue
, 
Ál£
, false, false, false, false, false }

161 c⁄° 
	glock_ba£_t
::
lmode_t
 
lock_ba£_t
::
su¥
[
NUM_MODES
][NUM_MODES] = {

163  { 
NL
, 
IS
, 
IX
, 
SH
, 
SIX
, 
UD
, 
EX
 },

164  { 
IS
, IS, 
IX
, 
SH
, 
SIX
, 
UD
, 
EX
 },

165  { 
IX
, IX, IX, 
SIX
, SIX, 
EX
, EX },

166  { 
SH
, SH, 
SIX
, SH, SIX, 
UD
, 
EX
 },

167  { 
SIX
, SIX, SIX, SIX, SIX, SIX, 
EX
 },

168  { 
UD
, UD, 
EX
, UD, 
SIX
, UD, EX },

169  { 
EX
, EX, EX, EX, EX, EX, EX }

172 
	gLockC‹eFunc
::~
	$LockC‹eFunc
()

174 
	}
}

182 ˛as†
	cbuckë_t
 {

183 
public
:

185 
DEF_LOCK_X_TYPE
(3);

187 
lock_x
 
	mmuãx
;

189 
	mlock_c‹e_m
::
chaö_li°_t
 
chaö
;

191 
NORET
 
	$buckë_t
() :

192 
	`chaö
(
	`W_LIST_ARG
(
lock_hód_t
, 
chaö
),

193 &
muãx
.mutex) {

196 
¥iv©e
:

198 
NORET
 
	`buckë_t
(c⁄° 
buckë_t
&);

199 
buckë_t
& 
›î©‹
=(const bucket_t&);

200 
	}
};

202 
	~<m≠
>

203 
	~<s°ªam
>

204 
	~<io°ªam
>

205 
	g¶i_lock_°©s_t
 : 
°d
::
m≠
<
lockid_t
, > {

206 ~
¶i_lock_°©s_t
() {

208 if(!
em±y
()) {

209 
	g°d
::
o°rög°ªam
 
out
;

210 
	gout
 << "t@" << 
±hªad_£lf
() << ": ";

211 
	g¶i_lock_°©s_t
::
ôî©‹
 
ô
=
begö
(); 
	gô
 !
íd
(); ++it) {

212 if(
	gô
->
	g£c⁄d
 < 2)

214 
	gout
 << 
	gô
->
	gfú°
 << "(" << it->
	g£c⁄d
 << ") ";

216 
	gout
 << 
	gídl
 << 
	gíds
;

217 
¥ötf
("%s", 
out
.
°r
().
c_°r
());

222 
DECLARE_TLS
(
¶i_lock_°©s_t
, 
¶i_lock_°©s
);

225 
	s¥ëty_¥öãr
 {

226 
o°rög°ªam
 
	m_out
;

227 
°rög
 
	m_tmp
;

228 
›î©‹
 
	mo°ªam
&(Ë{  
	m_out
; }

229 
›î©‹
 c⁄°*(Ë{ 
	m_tmp
 = 
_out
.
°r
(); 
	m_out
.°r("");  _tmp.
c_°r
(); }

231 
	gx˘_lock_öfo_t
::
	$¥öt_¶i_li°
() {

232 if(
¶i_li°
.
	`is_em±y
()) {

233 
	`Ârötf
(
°dîr
, "<empty>\n");

238 
¥ëty_¥öãr
 
µ
;

239 
ªque°_li°_i
 
	`ô
(
¶i_li°
, 
åue
);

240 
lock_ªque°_t
 c⁄°* 
ªq
 = 
ô
.
	`√xt
()) {

241 
µ
 << 
ªq
->
	`gë_lock_hód
()->
«me
 << " " << *req << "\n";

243 
	`Ârötf
(
°dîr
, "%s\n", (c⁄°*Ë
µ
);

244 
	}
}

246 c⁄°* 
	$db_¥ëty_¥öt
(
lock_ªque°_t
 c⁄°* 
ªq
, 
i
=0, c⁄°* 
s
=0) {

247 
¥ëty_¥öãr
 
µ
;

248 (Ë
i
;

249 (Ë
s
;

250 
lock_hód_t
* 
lock
 = 
ªq
->
	`gë_lock_hód
();

251 if(
lock
)

252 
µ
 << 
lock
->
«me
 << " ";

253 
µ
 << *
ªq
;

254  
µ
;

255 
	}
}

257 c⁄°* 
	$db_¥ëty_¥öt
(
lockid_t
 c⁄°* 
lid
, 
i
=0, c⁄°* 
s
=0) {

258 
¥ëty_¥öãr
 
µ
;

259 (Ë
i
;

260 (Ë
s
;

261 
µ
 << *
lid
;

262  
µ
;

263 
	}
}

264 c⁄°* 
	$db_¥ëty_¥öt
(
lock_hód_t
 c⁄°* 
lock
, 
i
=0, c⁄°* 
s
=0)

266 
¥ëty_¥öãr
 
µ
;

267 (Ë
i
;

268 (Ë
s
;

269 
o°ªam
 &
out
 = 
µ
;

270 
µ
 << 
lock
->
«me
 << ":"

271 << 
lock_ba£_t
::
mode_°r
[
lock
->
gø¡ed_mode
] << " queue: {";

273 
lock_hód_t
::
unß„_queue_ôî©‹_t
 
	`ô
(*
c⁄°_ˇ°
<lock_hód_à*>(
lock
));

275  
lock_ªque°_t
 c⁄°* 
ªq
=
ô
.
	`√xt
() ) {

276 
tid_t
 
tid
 = 
ªq
->
	`gë_lock_öfo
()->
	`tid
();

277 if(
tid
 !
tid_t
::
nuŒ
)

278 
out
 << 
tid
;

280 
out
 << "<noÅid>";

281 
out
 << "(" << 
lock_ba£_t
::
mode_°r
[
ªq
->
	`mode
()];

282 if(
ªq
->
	`°©us
(Ë=
lock_m
::
t_c⁄vîtög
)

283 
out
 << "/" << 
lock_ba£_t
::
mode_°r
[
ªq
->
	`c⁄vît_mode
()];

284 if(
ªq
->
	`°©us
(Ë=
lock_m
::
t_waôög
)

285 
out
 << "*";

286 
out
 << ") ";

288 
out
 << "}";

289  
µ
;

290 
	}
}

292 
boﬁ
 
	gglobÆ_¶i_íabÀd
 = 
Ál£
;

293 
	glock_m
::
	$£t_¶i_íabÀd
(
boﬁ
 
íabÀ
Ë{ 
globÆ_¶i_íabÀd
 =É«bÀ; 
	}
}

300 
	gx˘_lock_öfo_t
::
	$x˘_lock_öfo_t
()

302 
	`_waô_ªque°
(
NULL
),

303 
	`_blockög
(
Ál£
),

304 
	`_¶i_íabÀd
(
globÆ_¶i_íabÀd
),

305 
	`_¶i_purged
(
Ál£
),

306 
	`_¶i_sdesc_ˇche
(0),

307 
	`_lock_Àvñ
(
lockid_t
::
t_ªc‹d
),

308 
	`_qu¨k_m¨kî
(0),

309 
	$_noblock
(
Ál£
)

311 
i
 = 0; i < 
t_num_duøti⁄s
; i++) {

312 
my_ªq_li°
[
i
].
	`£t_off£t
(
	`W_LIST_ARG
(
lock_ªque°_t
, 
xlök
));

319 
¶i_li°
.
	`£t_off£t
(
	`W_LIST_ARG
(
lock_ªque°_t
, 
xlök
));

320 
	}
}

324 
	gx˘_lock_öfo_t
::
	$ª£t
()

326 
_lock_ˇche
.
	`ª£t
();

331 
i
=0; i < 
t_num_duøti⁄s
; i++) {

332 
	`w_as£π1
(
my_ªq_li°
[
i
].
	`is_em±y
());

336 
ªque°_li°_i
 
	`ô
(
¶i_li°
);

337 
lock_ˇche_ñem_t
 
ign‹e_me
;

338 
lock_ªque°_t
* 
ªq
 = 
ô
.
	`√xt
()) {

339 if(
lock_hód_t
* 
lock
=
ªq
->
	`gë_lock_hód
()) {

340 
lockid_t
 c⁄° &
«me
 = 
lock
->name;

341 
ªq
->
kìp_me
 = 
«me
.
	`l•a˚
(Ë<
lockid_t
::
t_°‹e
;

342 
	`put_ˇche
(
«me
, 
ªq
->
	`mode
(),Ñeq, 
ign‹e_me
);

347 
¶i_°©us_t
 
s
 = 
ªq
->
	`vthis
()->
_¶i_°©us
;

348 i‡(
s
 =
¶i_övÆid©ög
)

349 
s
 = 
ªq
->
	`ˇs_¶i_°©us
(s, 
¶i_ab™d⁄ed
);

350 i‡(
s
 !
¶i_övÆid©ög
) {

352 if(
s
 !
¶i_övÆid
)

353 
	`Ârötf
(
°dîr
, "Yikes! sèã i†%d/%d\n", 
s
, 
ªq
->
	`vthis
()->
_¶i_°©us
);

354 
	`w_as£π0
(
s
 =
¶i_övÆid
);

355 
ªq
->
xlök
.
	`dëach
();

356 
	`DELETE_LOCK_REQUEST
(
ªq
);

360 
	`memb¨_exô
();

361 
öhîôed
 = 0;

362 
ô
.
	`ª£t
(
¶i_li°
); 
lock_ªque°_t
* 
ªq
 = it.
	`√xt
(); ++
öhîôed
) {

363 i‡(
ªq
->
	`is_ª˛aimed
())

364 
ªq
->
_¶i_°©us
 = 
¶i_öa˘ive
;

366 
	`ADD_TSTAT
(
¶i_öhîôed
, 
öhîôed
);

370 
	`w_as£π2
(!
_waô_ªque°
);

371 
	`w_as£π2
(!
_blockög
);

380 
_¶i_purged
 = 
Ál£
;

388 
	`w_as£π2
(!
_qu¨k_m¨kî
);

389 
_noblock
 = 
Ál£
;

390 
	}
}

393 
	gx˘_lock_öfo_t
::
	$öô
(
tid_t
 c⁄° &
t
,

394 
lockid_t
::
«me_•a˚_t
 
l
)

396 
	`£t_tid
(
t
);

397 
_¶i_íabÀd
 = 
globÆ_¶i_íabÀd
;

398 
	`£t_lock_Àvñ
(
l
);

399 
	}
}

418 
	gx˘_lock_öfo_t
::
	$£t_n⁄blockög
()

420 
	`w_as£π2
(!
	`MUTEX_IS_MINE
(
lock_öfo_muãx
));

421 
	`MUTEX_ACQUIRE
(
lock_öfo_muãx
);

422 
_noblock
 = 
åue
;

423 if(
_waô_ªque°
) {

425 
	`INC_TSTAT
(
log_fuŒ_ﬁd_x˘
);

426 
	`w_as£π2
(
_waô_ªque°
->
	`thªad
());

427 
	`W_COERCE
(
_waô_ªque°
->
	`thªad
()->
	`smthªad_unblock
(
eDEADLOCK
));

429 
	`MUTEX_RELEASE
(
lock_öfo_muãx
);

430 
	}
}

437 
	gx˘_lock_öfo_t
::~
	$x˘_lock_öfo_t
()

439 
	`MUTEX_ACQUIRE
(
lock_öfo_muãx
);

440 if(
smÀvñ_0
::
lm
)

441 
smÀvñ_0
::
lm
->
_c‹e
->
	`¶i_purge_öa˘ive_locks
(
this
, 
åue
);

442 
	`MUTEX_RELEASE
(
lock_öfo_muãx
);

444 #i‡
W_DEBUG_LEVEL
 > 2

445 
i
 = 0; i < 
t_num_duøti⁄s
; i++) {

446 i‡(! 
my_ªq_li°
[
i
].
	`is_em±y
() ) {

447 
	`DBGTHRD
(<<"mem‹yÜók:Ç⁄-em±yÜi° i¿x˘_lock_öfo_t: " <<
i
);

451 if(
_¶i_sdesc_ˇche
)

452 
x˘_t
::
	`dñëe_sdesc_ˇche_t
(
_¶i_sdesc_ˇche
);

453 
	}
}

456 
	#DEBUG_DEADLOCK
 0

	)

457 
boﬁ
 
	gx˘_lock_öfo_t
::
	$upd©e_waô_m≠
(
©omic_thªad_m≠_t
 c⁄° &
Ÿhî
)

459 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock_öfo_muãx
));

461 
©omic_thªad_m≠_t
 
_waô_m≠_c›y
;

462 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

463 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

465 
_waô_m≠
.
	`lock_f‹_ªad
();

466 
	`w_as£π1
(
_waô_m≠
.
	`has_ªadî
(Ë=
åue
);

467 
_waô_m≠_c›y
 = 
_waô_m≠
;

468 
_waô_m≠
.
	`u∆ock_ªadî
();

470 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

471 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

480 if(
_waô_m≠_c›y
.
	`is_em±y
()) {

482 
_waô_m≠_c›y
 = 
	`me
()->
	`gë_fögî¥öt_m≠
();

484 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

485 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

487 #i‡
DEBUG_DEADLOCK


489 
Ÿhî
.
	`lock_f‹_ªad
();

490 
w_o°r°ªam
 
s
;

491 
s
 << "----------mine "

492 << (*)(
this
)

494 
_waô_m≠_c›y
.
	`¥öt
(
s
Ë<< 
ídl
;

495 
s
 << "----------other "

496 << (*)(&
Ÿhî
)

498 
Ÿhî
.
	`¥öt
(
s
Ë<< 
ídl
;

499 
Ÿhî
.
	`u∆ock_ªadî
();

500 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
());

504 
	`w_as£π1
(
_waô_m≠_c›y
.
	`ovîœp
(_wait_map_copy, _wait_map_copy));;

505 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

506 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

509 
©omic_thªad_m≠_t
 
√w_m≠
;

510 
Ÿhî
.
	`lock_f‹_ªad
();

511 
boﬁ
 
m©ches
 = 
_waô_m≠_c›y
.
	`ovîœp
(
√w_m≠
, 
Ÿhî
);

512 
Ÿhî
.
	`u∆ock_ªadî
();

513 
	`w_as£π1
(
√w_m≠
.
	`has_ªadî
(Ë=
Ál£
);

514 
	`w_as£π1
(
√w_m≠
.
	`has_wrôî
(Ë=
Ál£
);

515 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

516 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

521 if–!
m©ches
)

523 
_waô_m≠
.
	`lock_f‹_wrôe
();

524 
	`w_as£π1
(
_waô_m≠
.
	`has_wrôî
(Ë=
åue
);

525 
_waô_m≠
 = 
√w_m≠
;

526 #i‡
DEBUG_DEADLOCK


528 
w_o°r°ªam
 
s
;

529 
s
 << "----------mine "

530 << (*)(
this
)

532 
_waô_m≠
.
	`¥öt
(
s
Ë<< 
ídl
;

533 
	`Ârötf
(
°dîr
,

534 "%†------ m©ches=%d\n", 
s
.
	`c_°r
(),

535 
m©ches


539 
_waô_m≠
.
	`u∆ock_wrôî
();

540 
	`w_as£π1
(
_waô_m≠
.
	`has_wrôî
(Ë=
Ál£
);

542 
	`w_as£π1
(
√w_m≠
.
	`has_ªadî
(Ë=
Ál£
);

543 
	`w_as£π1
(
√w_m≠
.
	`has_wrôî
(Ë=
Ál£
);

544 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

545 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

546  
åue
;

551 #i‡
DEBUG_DEADLOCK


553 
w_o°r°ªam
 
s
;

554 
s
 << "----------Ÿhî " << (*)(&
Ÿhî
);

555 
Ÿhî
.
	`lock_f‹_ªad
();

556 
Ÿhî
.
	`¥öt
(
s
);

557 
Ÿhî
.
	`u∆ock_ªadî
();

558 
s
 << 
ídl


559 << "----------möê " << (*)(
this
);

560 
_waô_m≠
.
	`¥öt
(
s
Ë<< 
ídl
;

562 
	`Ârötf
(
°dîr
,

563 "%†------ m©ches=%d\n", 
s
.
	`c_°r
(),

564 
m©ches


569 
_waô_m≠
.
	`lock_f‹_wrôe
();

570 
	`w_as£π1
(
_waô_m≠
.
	`has_wrôî
(Ë=
åue
);

571 
_waô_m≠
.
	`˛ór
();

572 
_waô_m≠
.
	`u∆ock_wrôî
();

574 
	`w_as£π1
(
_waô_m≠
.
	`has_wrôî
(Ë=
Ál£
);

576 
	`w_as£π1
(
√w_m≠
.
	`has_ªadî
(Ë=
Ál£
);

577 
	`w_as£π1
(
√w_m≠
.
	`has_wrôî
(Ë=
Ál£
);

578 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_ªadî
(Ë=
Ál£
);

579 
	`w_as£π1
(
_waô_m≠_c›y
.
	`has_wrôî
(Ë=
Ál£
);

580  
Ál£
;

582 
	}
}

584 
	gx˘_lock_öfo_t
::
	$d⁄e_waôög
() {

585 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
lock_öfo_muãx
));

586 
	`£t_waôög_ªque°
(
NULL
);

587 
	`˛ór_waô_m≠
();

588 
	}
}

591 
	go°ªam
 &

592 
	gx˘_lock_öfo_t
::
	$dump_locks
(
o°ªam
 &
out
) const

594 c⁄° 
lock_ªque°_t
 *
ªq
;

595 c⁄° 
lock_hód_t
 *
lh
;

596 
i
;

597 
i
=0; i< 
t_num_duøti⁄s
; i++) {

598 
out
 << "***Duøti⁄ " << 
i
 <<
ídl
;

600 
ªque°_li°_i
 
	`ôî
(
my_ªq_li°
[
i
]);

601 (
ªq
 = 
ôî
.
	`√xt
())) {

602 
	`w_as£π9
(
ªq
->
xd
 =
	`x˘
());

603 
lh
 = 
ªq
->
	`gë_lock_hód
();

604 
out
 << "Lock: " << 
lh
->
«me


605 << " Mode: " << (
ªq
->
	`mode
())

606 << " Sèã: " << (
ªq
->
	`°©us
()Ë<<
ídl
;

609  
out
;

610 
	}
}

612 #i‡
DEBUG_LOCK_HASH


614 
	gl⁄ge°_chaö
=0;

615 
	gsh‹ã°_n⁄em±y_chaö
=999999;

616 
	gavg_chaö_Àngth
=0;

617 c⁄° 
	gmmm
=10;

618 
	gchaö_Àngth
[
mmm
+1];

620 
	glock_c‹e_m
::
	$dump_lock_hash_numbîs
() const

622 
	`Ârötf
(
°dîr
, "lock hashÅable:\n");

623 
	`Ârötf
(
°dîr
, "buckës: %d\n", 
_hèbsz
);

624 
	`Ârötf
(
°dîr
, "avg chaö: %d\n", 
avg_chaö_Àngth
);

625 
	`Ârötf
(
°dîr
, "l⁄ge° chaö: %d\n", 
l⁄ge°_chaö
);

626 
	`Ârötf
(
°dîr
, "sh‹ã° chaö: %d\n", 
sh‹ã°_n⁄em±y_chaö
);

627 
i
=0; i <
mmm
; i++) {

628 
	`Ârötf
(
°dîr
, "chaö†À¿%d: %d\n", 
i
, 
chaö_Àngth
[i]);

630 
	}
}

632 
	glock_c‹e_m
::
	$compuã_lock_hash_numbîs
() const

634 
i
=0; i <=
mmm
; i++Ë
chaö_Àngth
[i]=0;

636 
h
 = 0; h < 
_hèbsz
; h++)

638 
Àn
 =0;

639 
chaö_li°_i
 
	`i
(
_hèb
[
h
].
chaö
);

640 
lock_hód_t
* 
lock
;

641 
lock
 = 
i
.
	`√xt
();

642 
lock
) {

643 
Àn
 ++;

644 
lock
 = 
i
.
	`√xt
();

647 if(
Àn
 > 
l⁄ge°_chaö
)Üongest_chain =Üen;

648 if(
Àn
>0 &&

649 
Àn
 < 
sh‹ã°_n⁄em±y_chaö
 ) shortest_nonempty_chain =Üen;

650 if(
Àn
 >
mmm
Ë
chaö_Àngth
[mmm]++;

651 
chaö_Àngth
[
Àn
]++;

652 
avg_chaö_Àngth
 +
Àn
;

654 
avg_chaö_Àngth
 /
_hèbsz
;

656 
	`dump_lock_hash_numbîs
();

657 
	}
}

661 
rc_t


662 
	gx˘_lock_öfo_t
::
	$gë_lock_tŸÆs
(

663 &
tŸÆ_EX
,

664 &
tŸÆ_IX
,

665 &
tŸÆ_SIX
,

666 &
tŸÆ_exã¡


669 c⁄° 
lock_ªque°_t
 *
ªq
;

670 c⁄° 
lock_hód_t
 *
lh
;

671 
i
;

673 
tŸÆ_EX
=0;

674 
tŸÆ_IX
=0;

675 
tŸÆ_SIX
=0;

676 
tŸÆ_exã¡
 = 0;

679 
i
=0; i< 
t_num_duøti⁄s
; i++) {

680 
ªque°_li°_i
 
	`ôî
(
my_ªq_li°
[
i
]);

681 (
ªq
 = 
ôî
.
	`√xt
())) {

686 
	`w_as£π9
(
ªq
->
	`°©us
(Ë=
t_gø¡ed
);

687 
lh
 = 
ªq
->
	`gë_lock_hód
();

688 if(
lh
->
«me
.
	`l•a˚
(Ë=
lockid_t
::
t_exã¡
) {

690 ++
tŸÆ_exã¡
;

692 if(
ªq
->
	`mode
(Ë=
EX
) {

693 ++
tŸÆ_EX
;

694 } i‡(
ªq
->
	`mode
(Ë=
IX
) {

695 ++
tŸÆ_IX
;

696 } i‡(
ªq
->
	`mode
(Ë=
SIX
) {

697 ++
tŸÆ_SIX
;

701  
RCOK
;

702 
	}
}

719 
rc_t


720 
	gx˘_lock_öfo_t
::
gë_locks
(

721 
lock_mode_t
 
mode
,

722 
W_IFDEBUG9
(
num¶Ÿs
),

723 
lockid_t
 * 
•a˚_l
,

724 
lock_mode_t
 * 
•a˚_m
,

725 
boﬁ
 
exã¡s


728 c⁄° 
lock_ªque°_t
 *
	gªq
;

729 c⁄° 
lock_hód_t
 *
	glh
=0;

730 
	gi
;

732 if(
	gexã¡s
Ë
	gmode
 = 
NL
;

738 
	gj
=0;

739 
	gi

t_sh‹t
; i< 
	gt_num_duøti⁄s
; i++) {

740 
ªque°_li°_i
 
ôî
(
my_ªq_li°
[
i
]);

741 (
	gªq
 = 
ôî
.
√xt
())) {

747 
w_as£π9
(
ªq
->
°©us
(Ë=
t_gø¡ed
);

749 if(
	gmode
 =
NL
) {

757 
w_as£π9
–((
IX
|
SIX
|
EX
) & 0x1) == 0);

758 
w_as£π9
–((
NL
|
IS
|
SH
|
UD
) & 0x1) != 0);

764 
boﬁ
 
	gw™tô
 = 
Ál£
;

765 
	glh
 = 
ªq
->
gë_lock_hód
();

766 if(
	gexã¡s
) {

767 if(
	glh
->
	g«me
.
l•a˚
(Ë=
lockid_t
::
t_exã¡
Ë
w™tô
 = 
åue
;

769 if((
	gªq
->
mode
(Ë& 0x1Ë=0Ë
w™tô
 = 
åue
;

771 if(
	gw™tô
) {

772 
	g•a˚_m
[
j
] = 
ªq
->
mode
();

773 
	g•a˚_l
[
j
] = 
lh
->
«me
;

774 
	gj
++;

777 if(
	gªq
->
mode
() == mode) {

778 
lh
 = 
ªq
->
gë_lock_hód
();

780 
	g•a˚_l
[
j
++] = 
lh
->
«me
;

785 
w_as£π9
(
num¶Ÿs
 =
j
);

786  
	gRCOK
;

795 
	go°ªam
 &

796 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	gx˘_lock_öfo_t
 &
	gx
)

798 
lock_ªque°_t
 *
	gwaôög
 = 
x
.
waôög_ªque°
();

799 i‡(
	gwaôög
) {

800 
	go
 << " waô: " << *
	gwaôög
;

802  
	go
;

814 #i‡
W_DEBUG_LEVEL
 > 0

815 
	~"lock_s_ölöe.h
"

819 
	glockid_t
::
	$åunˇã
(
«me_•a˚_t
 
•a˚
)

821 
	`DBG
(<< "åunˇtög " << 
this


822 << "=" <<*
this


823 << "Åÿ" << (
•a˚
));

824 
	`w_as£π9
(
	`l•a˚
(Ë>
•a˚
 &&Ü•a˚(Ë!
t_exã¡
 &&Ü•a˚(Ë!
t_kvl
);

825 
	`w_as£π9
((
•a˚
 >
t_u£r1
 && s∑˚ <
t_u£r4
Ë=
	`IsU£rLock
());

827 
•a˚
) {

828 
t_vﬁ
:

829 
	`£t_¢um
(0);

830 
	`£t_∑ge
(0);

831 
	`£t_¶Ÿ
(0);

833 
t_°‹e
:

834 
	`£t_∑ge
(0);

835 
	`£t_¶Ÿ
(0);

837 
t_∑ge
:

838 
	`£t_¶Ÿ
(0);

840 
t_ªc‹d
:

843 
t_u£r1
:

844 
	`£t_u2
(0);

845 
	`£t_u3
(0);

846 
	`£t_u4
(0);

848 
t_u£r2
:

849 
	`£t_u3
(0);

850 
	`£t_u4
(0);

852 
t_u£r3
:

853 
	`£t_u4
(0);

855 
t_u£r4
:

859 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

861 
	`£t_l•a˚
(
•a˚
);

862 
	`DBG
(<<"åunˇãdÅÿ" << *
this
);

863 
	}
}

873 
ölöe
 
	glock_ba£_t
::
lmode_t


874 
lock_hód_t
::
	$gø¡ed_mode_Ÿhî
(c⁄° 
lock_ªque°_t
* 
ex˛ude
)

876 
	`w_as£π9
(!
ex˛ude
 ||Éx˛ude->
	`°©us
(Ë=
lock_m
::
t_gø¡ed
 ||

877 
ex˛ude
->
	`°©us
(Ë=
lock_m
::
t_c⁄vîtög
);

879 
lock_ba£_t
::
lmode_t
 
gmode
 = 
smÀvñ_0
::
NL
;

880 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`ôî
(*
this
);

881 
lock_ªque°_t
* 
f
;

882 (
f
 = 
ôî
.
	`√xt
())) {

883 i‡(
f
->
	`°©us
(Ë=
lock_m
::
t_waôög
) ;

887 
	`w_as£π9
(
lock_m
::
com∑t
[
f
->
mode
][
gmode
]

888 || 
lock_m
::
com∑t
[
gmode
][
f
->
mode
]);

890 i‡(
f
 !
ex˛ude
Ë
gmode
 = 
lock_ba£_t
::
su¥
[f->
	`mode
()][gmode];

893  
gmode
;

894 
	}
}

896 
boﬁ


897 
	glock_hód_t
::
	$övÆid©e_¶i
()

900 if(
gø¡ed_mode
 > 
lock_m
::
SH
)

901  
Ál£
;

903 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`ôî
(*
this
);

904 
boﬁ
 
övÆid©ed
 = 
Ál£
;

905 
lock_ªque°_t
* 
f
=
ôî
.
	`√xt
()) {

906 i‡(
smÀvñ_0
::
lm
->
_c‹e
->
	`¶i_övÆid©e_ªque°
(
f
))

907 
övÆid©ed
 = 
åue
;

910  
övÆid©ed
;

911 
	}
}

914 
lock_ªque°_t
*

915 
	glock_hód_t
::
	$föd_lock_ªque°
(c⁄° 
x˘_lock_öfo_t
* 
xdli
)

917 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`ôî
(*
this
);

918 
lock_ªque°_t
* 
ªque°
;

919 (
ªque°
 = 
ôî
.
	`√xt
()Ë&&Ñeque°->
	`gë_lock_öfo
(Ë!
xdli
) ;

920  
ªque°
;

921 
	}
}

924 
NORET


925 
	glock_ªque°_t
::
	$lock_ªque°_t
()

927 
	`ª£t
();

928 
	}
}

937 
ölöe
 

938 
	glock_ªque°_t
::
	$ª£t
() {

940 
	`w_as£π1
(
æök
.
	`membî_of
() == 0);

941 
	`w_as£π1
(
xlök
.
	`membî_of
() == 0);

943 
_°©e
 = 
lock_m
::
t_no_°©us
;

944 
_mode
 = 
NL
;

945 
_c⁄vît_mode
 = 
NL
;

946 
_lock_öfo
 = 0;

947 
_thªad
 = 0;

948 
_ªf_cou¡
 = 0;

949 
_duøti⁄
 = 
t_l⁄g
;

950 
_num_chûdªn
 = 0;

951 
	}
}

961 
ölöe
 
lock_ªque°_t
*

962 
	glock_ªque°_t
::
	$öô
(
x˘_t
* 
x
, 
lmode_t
 
m
, 
duøti⁄_t
 
d
)

964 
	`w_as£π1
(!
_lock_öfo
);

965 
_mode
 = 
m
;

966 
_lock_öfo
 = 
x
->
	`lock_öfo
();

967 
_duøti⁄
 = 
d
;

968 
_¶i_°©us
 = 
¶i_nŸ_öhîôed
;

969 
_num_chûdªn
 = 0;

971 
	`INC_TSTAT
(
lock_ªque°_t_˙t
);

975 
	`w_as£π1
((
d
 =0 || d > 0Ë&& d < 
t_num_duøti⁄s
);

978 
x
->
	`lock_öfo
()->
my_ªq_li°
[
d
].
	`push
(
this
);

979 #i‡
	`deföed
(
W_TRACE
Ë&& 
W_DEBUG_LEVEL
 > 4

981 
w_o°r°ªam
 
o
;

982 
o
 <<"sizêo‡lock_hód_à" << (
lock_hód_t
Ë<< 
ídl
;

983 
o
 <<"sizêo‡ªque°_li°_à" << (
ªque°_li°_t
Ë<< 
ídl
;

984 
	`Ârötf
(
°dîr
, "%s", 
o
.
	`c_°r
());

986 
lock_hód_t
* 
lock
 = 
NULL
;

987 if(
æök
.
	`membî_of
(Ë!0Ë
lock
 = 
this
->
	`gë_lock_hód
();

988 if(
lock
) {

989 
	`w_ª£t_°r°ªam
(
o
);

990 
o
 <<"pushedÜockÑeque° " << 
this
 << 
ídl
;

991 
o
 <<"gë_lock_hódÑëu∫†" << 
lock
 << 
ídl
;

992 
o
 <<"æök.membî_of(Ëªtu∫†" << ((*)
æök
.
	`membî_of
()Ë<< 
ídl
;

993 
	`Ârötf
(
°dîr
, "%s", 
o
.
	`c_°r
());

995 
	`w_ª£t_°r°ªam
(
o
);

996 
o
 << " " << 
lock
->
«me
 << 
ídl
;

997 
	`Ârötf
(
°dîr
, "%s", 
o
.
	`c_°r
());

999 
	`w_ª£t_°r°ªam
(
o
);

1000 
o
 << " o¿my_ªq_li°["<<(
_duøti⁄
)<<"] : " << 
ídl
;

1001 
	`Ârötf
(
°dîr
, "%s", 
o
.
	`c_°r
());

1003 
	`w_ª£t_°r°ªam
(
o
);

1004 
o
 << *
this
 << 
ídl
;

1005 
	`Ârötf
(
°dîr
, "%s", 
o
.
	`c_°r
());

1007 
	`DBGTHRD
(<<"pushedÜockÑeque° " << 
this
 << " "

1009 << " o¿my_ªq_li°["<<(
_duøti⁄
)<<"] : " << *
this
);

1013  
this
;

1014 
	}
}

1021 
lock_ªque°_t
*

1022 
	glock_ªque°_t
::
öô
(
x˘_t
* 
x
,

1023 
boﬁ
 
	$W_IFDEBUG2
(
qu¨k_m¨kî
))

1025 
	`FUNC
(
lock_ªque°_t
::
	`lock_ªque°_t
(
make
 
m¨kî
));

1026 
	`öô
(
x
, 
NL
, 
t_sh‹t
);

1030 
	`w_as£π2
(
	`is_qu¨k_m¨kî
(Ë=
qu¨k_m¨kî
);

1033  
this
;

1034 
	}
}

1040 
boﬁ


1041 
	glock_ªque°_t
::
	$is_qu¨k_m¨kî
() const

1043 i‡(
æök
.
	`membî_of
(Ë=
NULL
) {

1044 
	`w_as£π2
(
_mode
 =
NL
);

1045  
åue
;

1047  
Ál£
;

1048 
	}
}

1057 c⁄° 
uöt4_t
 
	g¥imes
[] = {

1079 
ölöe
 
lock_hód_t
*

1080 
	glock_c‹e_m
::
	$GëNewLockHódFromPoﬁ
(c⁄° 
lockid_t
& 
«me
, 
lmode_t
 
mode
)

1084 #i‡
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS


1085  
	`√w
 (*
lockHódPoﬁ
Ë
	`lock_hód_t
(
«me
, 
mode
);

1087  
√w
 
	`lock_hód_t
(
«me
, 
mode
);

1089 
	}
}

1092 
ölöe
 

1093 
	glock_c‹e_m
::
	$FªeLockHódToPoﬁ
(
lock_hód_t
* 
theLockHód
)

1096 #i‡
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS


1097 
lockHódPoﬁ
->
	`de°roy_obje˘
(
theLockHód
);

1099 
dñëe
 
theLockHód
;

1102 
	}
}

1108 
ölöe
 
lock_hód_t
*

1109 
	glock_c‹e_m
::
	$_föd_lock_hód_ö_chaö
(

1110 
lock_c‹e_m
::
chaö_li°_t
& 
l
, c⁄° 
lockid_t
& 
n
)

1113 
chaö_li°_i
 
	`ôî
(
l
);

1114 
i
=0;

1115 
lock_hód_t
* 
lock
=
NULL
;

1116 (
lock
 = 
ôî
.
	`√xt
()Ë&&Üock->
«me
 !
n
Ë
i
++;

1118 #i‡
DEBUG_LOCK_HASH


1119 if((
W_DEBUG_LEVEL
>1Ë&& 
i
 > 1) {

1120 
uöt4_t
 
idx
 = 
	`_èbÀ_hash
(
	`w_hash
(
n
));

1123 
	`compuã_lock_hash_numbîs
();

1124 
	`Ârötf
(
°dîr
,

1125 "-+-+- Lock hash buckë %d ha†%d o∏m‹êíåõs!\n", 
idx
, 
i
);

1131 if(
lock
)

1132 
	`©omic_öc
(
lock
->
pö_˙t
);

1133  
lock
;

1134 
	}
}

1141 
lock_hód_t
*

1142 
	glock_c‹e_m
::
	$föd_lock_hód
(c⁄° 
lockid_t
& 
n
, 
boﬁ
 
¸óã
)

1144 
uöt4_t
 
idx
 = 
	`_èbÀ_hash
(
	`w_hash
(
n
));

1146 
	`ACQUIRE_BUCKET_MUTEX
(
idx
);

1147 
lock_hód_t
* 
lock
 = 
	`_föd_lock_hód_ö_chaö
(
_hèb
[
idx
].
chaö
, 
n
);

1148 i‡(!
lock
 && 
¸óã
) {

1149 
lock
 = 
	`GëNewLockHódFromPoﬁ
(
n
, 
NL
);

1150 
	`w_as£π1
(
lock
);

1153 
lock
->
pö_˙t
 = 1;

1154 
_hèb
[
idx
].
chaö
.
	`push
(
lock
);

1156 
	`RELEASE_BUCKET_MUTEX
(
idx
);

1158 if(
lock
) {

1159 #i‡
MY_LOCK_DEBUG


1160 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
)==
Ál£
);

1162 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

1165 
	`©omic_dec
(
lock
->
pö_˙t
);

1166 #i‡
MY_LOCK_DEBUG


1167 
	`w_as£π3
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

1171 #ifde‡
W_TRACE


1172 
	`DBGTHRD
(<< " föd_lock_hódÑëu∫†" << 
lock
);

1173 if(
lock
Ë{ 
	`DBGTHRD
(<< "=" << *lock); }

1176  
lock
;

1177 
	}
}

1179 
	glock_c‹e_m
::
	$lock_c‹e_m
(
uöt
 
sz
)

1181 
	`_hèb
(0),

1182 
	`_hèbsz
(0),

1183 
	$_ªque°s_Æloˇãd
(0)

1186 
b
=0;

1187 
_hèbsz
 = 1; _hèbsz < 
sz
; _hèbsz <<1Ë
b
++;

1189 
	`w_as£π1
(!
_hèb
);

1191 
	`w_as£π1
(
_hèbsz
 >= 0x40);

1192 
	`w_as£π1
(
b
 >= 6 && b <= 23);

1198 
b
 -= 6;

1200 
_hèbsz
 = 
¥imes
[
b
];

1202 
_hèb
 = 
√w
 
buckë_t
[
_hèbsz
];

1204 
	`w_as£π1
(
_hèb
);

1205 
	}
}

1207 
	glock_c‹e_m
::~
	$lock_c‹e_m
()

1209 
	`DBG
( << "Üock_core_m::~lock_core_m()" );

1211 #i‡
W_DEBUG_LEVEL
 > 2

1212 
uöt
 
i
 = 0; i < 
_hèbsz
; i++) {

1213 
	`ACQUIRE_BUCKET_MUTEX
(
i
);

1214 
	`w_as£π2
–
_hèb
[
i
].
chaö
.
	`is_em±y
() );

1215 
	`RELEASE_BUCKET_MUTEX
(
i
);

1219 
dñëe
[] 
_hèb
;

1220 
	}
}

1228 "C" 
dum±hªads
();

1230 
	gw_rc_t
::
îrcode_t


1231 
lock_c‹e_m
::
	$acquúe_lock
(

1232 
x˘_t
* 
xd
,

1233 c⁄° 
lockid_t
& 
«me
,

1234 
lock_hód_t
* 
lock
,

1235 
lock_ªque°_t
** 
ªqPå
,

1236 
lmode_t
 
mode
,

1237 
lmode_t
& 
¥ev_mode
,

1238 
duøti⁄_t
 
duøti⁄
,

1239 
timeout_ö_ms
 
timeout
,

1240 
lmode_t
& 
ªt
)

1242 
	`FUNC
(
lock_c‹e_m
::
acquúe
);

1243 
lock_ªque°_t
* 
ªq
 = 
ªqPå
 ? *reqPtr : 0;

1244 
x˘_lock_öfo_t
* 
the_xlöfo
 = 
xd
->
	`lock_öfo
();

1246 #ifde‡
W_TRACE


1247 
	`DBGTHRD
(<<"lock_core_m::acquire "

1248 <<"Üockid=" << 
«me


1249 << "Åid=" << 
xd
->
	`tid
()

1250 << " mode=" << 
lock_ba£_t
::
mode_°r
[
mode
]

1251 << " duøti⁄=" << (
duøti⁄
)

1252 << "Åimeout=" << 
timeout
);

1253 i‡(
lock
) {

1254 
	`DBGTHRD
(<< "Üock=" << *
lock
);

1256 i‡(
ªq
) {

1257 
	`DBGTHRD
(<< "Ñeque°=" << *
ªq
);

1261 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

1262 #i‡
MY_LOCK_DEBUG


1263 i‡(
lock
) {

1264 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

1267 
	`w_as£π2
(
xd
 =
	`x˘
());

1269 
ªt
 = 
NL
;

1271 i‡(!
lock
) {

1272 
lock
 = 
	`föd_lock_hód
(
«me
, 
åue
);

1273 
	`DBGTHRD
(<< " föd_lock_hódÑëu∫†" << 
lock
 <<"=" << *lock);

1276 
boﬁ
 
mu°_wake_waôîs
 = 
Ál£
;

1277 i‡(!
ªq
) {

1278 
ªq
 = 
lock
->
	`föd_lock_ªque°
(
the_xlöfo
);

1279 if(
ªq
) {

1280 if–!(
ªq
=
	`¶i_ª˛aim_ªque°
‘eq, 
RECLAIM_CHECK_PARENT
, &
lock
->
hód_muãx
))) {

1282 #i‡
MY_LOCK_DEBUG


1283 
	`w_as£π1
(
nŸ
 
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

1285 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

1286 
mu°_wake_waôîs
 = 
åue
;

1288 if(
ªq
->
_¶i_°©us
 =
¶i_a˘ive


1289 && 
ªq
->
	`mode
(Ë=
su¥
[
mode
][req->mode()])

1290 
	`INC_TSTAT
(
¶i_found_œã
);

1293 #ifde‡
W_TRACE


1294 i‡(
ªq
) {

1295 
	`DBGTHRD
(<< "Ñeque°=" << *
ªq
);

1297 
	`DBGTHRD
(<< " STILL NO REQUEST" );

1302 
boﬁ
 
upgøded
 = 
Ál£
;

1303 
boﬁ
 
acquúed
 = 
Ál£
;

1310 i‡(
ªq
) {

1312 
	`DBGTHRD
(<< "c⁄vîsi⁄ fromÑeq=" << *
ªq
);

1313 if(
lock
Ë{ 
	`DBGTHRD
(<< " checkÜockágain " <<Üock <<"=" << *lock); }

1315 
¥ev_mode
 = 
ªq
->
	`mode
();

1317 i‡(
ªq
->
	`°©us
(Ë=
lock_m
::
t_waôög
) {

1319 
	`w_as£π9
(
xd
->
	`num_thªads
()>1);

1321 
	`w_as£π9
(
ªq
->
	`°©us
(Ë=
lock_m
::
t_gø¡ed
);

1323 
mode
 = 
su¥
[mode][
ªq
->
	`mode
()];

1327 i‡(
ªq
->
	`mode
(Ë=
mode
) {

1328 
	`INC_TSTAT
(
lock_exå™eous_ªq_˙t
);

1329 if(
lock
Ë{
	`DBGTHRD
(<< " checkÜockágain " <<Üock <<"=" << *lock); }

1330 
	`DBGTHRD
(<<"goto success");

1331 
suc˚ss
;

1333 
	`INC_TSTAT
(
lock_c⁄vîsi⁄_˙t
);

1337 
lmode_t
 
gø¡ed_mode_Ÿhî
 = 
su¥
[
lock
->
gø¡ed_mode
][
mode
];

1338 if(!
com∑t
[
mode
][
gø¡ed_mode_Ÿhî
]) {

1340 
gø¡ed_mode_Ÿhî
 = 
lock
->
	`gø¡ed_mode_Ÿhî
(
ªq
);

1341 
	`w_as£π9
(
lock
->
gø¡ed_mode
 =
su¥
[
gø¡ed_mode_Ÿhî
][
mode
]);

1344 
upgøded
 = 
åue
;

1346 i‡(
com∑t
[
mode
][
gø¡ed_mode_Ÿhî
]) {

1348 
ªq
->
	`£t_mode
(
mode
);

1349 
lock
->
gø¡ed_mode
 = 
su¥
[
gø¡ed_mode_Ÿhî
][
mode
];

1350 
	`DBGTHRD
(<<"goto success");

1351 
suc˚ss
;

1356 
	`w_as£π1
(
lock
->
	`queue_Àngth
() > 1);

1357 if(!
timeout
) {

1358 if(
mu°_wake_waôîs
) {

1359 
	`wakeup_waôîs
(
lock
);

1362 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1365  
eLOCKTIMEOUT
;

1375 if(
the_xlöfo
->
	`waôög_ªque°
()) {

1379 
	`w_as£π1
(
the_xlöfo
->
	`waôög_ªque°
(Ë!
ªq
);

1380 
has_waôî
;

1384 
	`me
()->
	`¥ï¨e_to_block
();

1385 
ªq
->
	`£t_°©us
(
lock_m
::
t_c⁄vîtög
);

1386 
ªq
->
	`£t_c⁄vît_mode
(
mode
);

1387 
ªq
->
	`£t_thªad
(
	`me
());

1391 
¥ev_mode
 = 
NL
;

1393 
	`INC_TSTAT
(
¶i_ªque°ed
);

1394 
boﬁ
 
com∑tibÀ
 = !
lock
->
waôög


1395 && 
com∑t
[
mode
][
lock
->
gø¡ed_mode
];

1397 if(!
com∑tibÀ
) {

1398 if(
«me
.
	`l•a˚
(Ë=
lockid_t
::
t_exã¡
) {

1399 
˚º
 <<

1400 "--- Trx " << 
xd
->
	`tid
().
	`gë_hi
(Ë<< "." << xd->tid().
	`gë_lo
()

1401 << " (t@" << 
	`±hªad_£lf
(Ë<< "Ëªque°ed " << 
mode_°r
[
mode
]

1402 << " o¿" << 
mode_°r
[
lock
->
gø¡ed_mode
]

1403 << "-lockedÉxã¡ " << 
«me
.
	`exã¡
()

1404 << 
ídl
;

1406 #i‡
W_DEBUG_LEVEL
 > 4

1409 
˚º
 << "\à" << *
lock
 << 
ídl
;

1410 
lock_ªque°_t
* 
ªque°
;

1411 
ªque°_li°_i
 
	`r
(
lock
->
_queue
);

1412 (
ªque°
 = 
r
.
	`√xt
())) {

1413 
˚º
 << "\t\t" << *
ªque°
 << 
ídl
;

1431 if(!
timeout
) {

1432 if(
mu°_wake_waôîs
) {

1433 
	`wakeup_waôîs
(
lock
);

1436 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1438  
eLOCKTIMEOUT
;

1440 if(
the_xlöfo
->
	`waôög_ªque°
()) {

1444 
has_waôî
;

1449 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
));

1451 
ªq
 = 
	`NEW_LOCK_REQUEST
(
xd
, 
mode
, 
duøti⁄
);

1454 
	`DBG
(<< "≠≥ndögÑeque° " << 
ªq
 << "Åÿlock " << 
lock


1455 << "ÜockÇame=" << 
lock
->
«me
);

1457 
acquúed
 = 
åue
;

1460 
ªq
->
	`£t_°©us
(
com∑tibÀ
? 
lock_m
::
t_gø¡ed
 :Üock_m::
t_waôög
);

1462 
ªq
->
	`£t_thªad
(
	`me
());

1463 
	`me
()->
	`¥ï¨e_to_block
();

1464 
	`memb¨_¥odu˚r
();

1465 
lock
->
	`queue_≠≥nd
(
ªq
);

1466 i‡(
com∑tibÀ
) {

1468 
lock
->
gø¡ed_mode
 = 
su¥
[
mode
][lock->granted_mode];

1470 
	`DBGTHRD
(<<"goto success");

1471 
suc˚ss
;

1477 
	`w_as£π3
(
ªt
 =
NL
);

1478 
	`DBGTHRD
(<<" will wait");

1480 
	`w_as£π1
(
timeout
 && !
the_xlöfo
->
	`waôög_ªque°
());

1481 
lock
->
waôög
 = 
åue
;

1484 i‡(
the_xlöfo
->
_¶i_íabÀd
 
™d
 
lock
->
	`övÆid©e_¶i
()) {

1485 i‡(
	`wakeup_waôîs
(
lock
, 
ªq
))

1486 
suc˚ss
;

1489 
«me
.
	`l•a˚
()) {

1490 
lockid_t
::
t_bad
:

1493 
lockid_t
::
t_vﬁ
:

1494 
	`INC_TSTAT
(
lk_vﬁ_waô
);

1496 
lockid_t
::
t_°‹e
:

1497 
	`INC_TSTAT
(
lk_°‹e_waô
);

1499 
lockid_t
::
t_∑ge
:

1500 
	`INC_TSTAT
(
lk_∑ge_waô
);

1502 
lockid_t
::
t_kvl
:

1503 
	`INC_TSTAT
(
lk_kvl_waô
);

1505 
lockid_t
::
t_ªc‹d
:

1506 
	`INC_TSTAT
(
lk_ªc_waô
);

1508 
lockid_t
::
t_exã¡
:

1509 
	`INC_TSTAT
(
lk_ext_waô
);

1511 
lockid_t
::
t_u£r1
:

1512 
	`INC_TSTAT
(
lk_u£r1_waô
);

1514 
lockid_t
::
t_u£r2
:

1515 
	`INC_TSTAT
(
lk_u£r2_waô
);

1517 
lockid_t
::
t_u£r3
:

1518 
	`INC_TSTAT
(
lk_u£r3_waô
);

1520 
lockid_t
::
t_u£r4
:

1521 
	`INC_TSTAT
(
lk_u£r4_waô
);

1525 
cou¡
 = 0;

1526 #i‡
W_DEBUG_LEVEL
 > 3

1527 íum { 
DREADLOCKS_INTERVAL_MS
 =1000 };

1529 íum { 
DREADLOCKS_INTERVAL_MS
 =10 };

1531 
max_cou¡
 =

1532 (
timeout
+
DREADLOCKS_INTERVAL_MS
-1)/DREADLOCKS_INTERVAL_MS;

1534 
the_xlöfo
->
	`£t_waôög_ªque°
(
ªq
);

1536 
w_rc_t
::
îrcode_t
 
	`r˚
(
eOK
);

1537 
	`INC_TSTAT
(
lock_waô_˙t
);

1539 
agaö
:

1541 
	`DBGTHRD
(<<"ágaö:Åimeouà" << 
timeout
);

1543 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

1545 
r˚
 = 
	`_check_dódlock
(
xd
, 
cou¡
 =0, 
ªq
);

1546 ++
cou¡
;

1547 i‡(
r˚
 =
eOK
) {

1551 
the_xlöfo
->
	`£t_waôög_ªque°_is_blockög
(
åue
);

1552 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1553 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

1555 
	`DBGTHRD
(<< "waiting (blocking) for:"

1556 << " xd=" << 
xd
->
	`tid
()

1557 << "Çame=" << 
«me


1558 << " mode=" << (
mode
)

1559 << " duøti⁄=" << (
duøti⁄
)

1560 << "Åimeout=" << 
timeout
 );

1562 if(
the_xlöfo
->
	`is_n⁄blockög
()) {

1564 
	`INC_TSTAT
(
log_fuŒ_ﬁd_x˘
);

1565 
r˚
 = 
eDEADLOCK
;

1567 c⁄° * 
block«me
 = "lock";

1569 
	`INC_TSTAT
(
lock_block_˙t
);

1570 
r˚
 = 
	`me
()->
	`smthªad_block
(
DREADLOCKS_INTERVAL_MS
, 0,

1571 
block«me
);

1582 
the_xlöfo
->
	`£t_waôög_ªque°_is_blockög
(
Ál£
);

1585 
	`DBGTHRD
(<< "acquired (unblocked):"

1586 << " xd=" << 
xd
->
	`tid
()

1587 << "Çame="<< 
«me


1588 << " mode="<< (
mode
)

1589 << " duøti⁄=" << (
duøti⁄
)

1590 << "Åimeout=" << 
timeout
 );

1592 #i‡
W_DEBUG_LEVEL
 > 2

1593 i‡(
r˚
) {

1594 
	`w_as£π3
(
r˚
 =
°TIMEOUT


1595 || 
r˚
 =
eDEADLOCK
);

1600 
xd
->
	`lockunblock
();

1602 
	`MUTEX_ACQUIRE
(
the_xlöfo
->
lock_öfo_muãx
);

1603 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

1605 
	`DBGTHRD
(<<" LOCK HEAD==" << (Ë
lock


1606 << "Üock->«mê" << 
lock
->
«me
 << "Çame " <<Çame);

1607 
	`w_as£π9
(
lock
->
«me
 ==Çame);

1608 if((
r˚
 =
°TIMEOUT
)

1609 && (
ªq
->
	`°©us
(Ë!
lock_m
::
t_gø¡ed
) ) {

1610 #i‡
W_DEBUG_LEVEL
 > 0

1611 if(
cou¡
 > 1000000) {

1612 #i‡
W_DEBUG_LEVEL
 > 1

1613 
	`Ârötf
(
°dîr
, "Öossible deadlock :Üocks \n");

1614 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

1615 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1616 
	`dump
();

1617 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

1618 
	`MUTEX_ACQUIRE
(
the_xlöfo
->
lock_öfo_muãx
);

1619 
	`Ârötf
(
°dîr
, "Öossible deadlock:Åhreads \n");

1620 
	`dum±hªads
();

1624 
r˚
 = 
eDEADLOCK
;

1627 if((
timeout
 =
WAIT_FOREVER
Ë|| (
cou¡
 < 
max_cou¡
)) {

1629 
agaö
;

1635 
	`w_as£π9
(
the_xlöfo
->
	`gë_cy˛e
() == 0);

1636 
	`DBGTHRD
(<<"Ñeque°->°©us()=" << (
ªq
->
	`°©us
()));

1647 
the_xlöfo
->
	`d⁄e_waôög
();

1648 if((
ªq
->
	`°©us
(Ë!
lock_m
::
t_gø¡ed
Ë&& 
r˚
) {

1652 
	`w_as£π2
((
r˚
 =
eDEADLOCK
) ||

1653 (
r˚
 =
°TIMEOUT
) );

1655 if(
ªq
->
	`°©us
(Ë=
lock_m
::
t_c⁄vîtög
)

1660 
ªq
->
	`£t_°©us
(
lock_m
::
t_gø¡ed
);

1663 
	`w_as£π1
(
ªq
->
	`°©us
(Ë=
lock_m
::
t_waôög
);

1664 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

1665 
ªq
->
xlök
.
	`dëach
();

1666 
ªq
->
æök
.
	`dëach
();

1667 
	`DELETE_LOCK_REQUEST
(
ªq
);

1669 
ªq
 = 0;

1671 if(
r˚
 =
eDEADLOCK
) {

1672 i‡(
lock
->
	`queue_Àngth
() == 0) {

1680 
lock
->
gø¡ed_mode
 = 
NL
;

1681 
	`w_as£π1
(!
lock
->
waôög
);

1685 
	`w_as£π1
(
r˚
 =
°TIMEOUT
);

1686 
r˚
 = 
eLOCKTIMEOUT
;

1690 
	`w_as£π1
(
ªq
->
	`°©us
(Ë=
lock_m
::
t_gø¡ed
);

1691 
	`DBGTHRD
(<<"goto success");

1692 
suc˚ss
;

1696 
	`DBGTHRD
(<<" waking up waiters");

1697 
	`wakeup_waôîs
(
lock
);

1699 
	`w_as£π9
(
ªt
 =
NL
);

1700 
ªt
 = 
NL
;

1702  
r˚
;

1706 
suc˚ss
:

1707 
	`ADD_TSTAT
(
¶i_acquúed
, 
acquúed
);

1708 
	`ADD_TSTAT
(
¶i_upgødes
, 
upgøded
);

1709 if(
upgøded
 && 
ªq
->
_¶i_°©us
 =
¶i_a˘ive
)

1710 
	`INC_TSTAT
(
¶i_too_wók
);

1712 
	`DBGTHRD
(<< " suc˚ss: checkÜockágaö " << 
lock
 <<"=" << *lock);

1713 
	`w_as£π9
(
ªq
->
	`°©us
(Ë=
lock_m
::
t_gø¡ed
);

1714 
	`w_as£π9
(
lock
);

1716 i‡(
ªq
->
	`gë_duøti⁄
(Ë< 
duøti⁄
) {

1717 
ªq
->
	`£t_duøti⁄
(
duøti⁄
);

1718 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

1719 
ªq
->
xlök
.
	`dëach
();

1720 #ifde‡
W_TRACE


1722 
lock_hód_t
*
lock
 = 
ªq
->
	`gë_lock_hód
();

1723 
	`DBGTHRD
(<<"pushingÜockÑequest "

1724 << 
lock
->
«me


1725 << " o¿my_ªq_li°["<<(
duøti⁄
)<<"] : " << *
ªq
);

1728 
the_xlöfo
->
my_ªq_li°
[
duøti⁄
].
	`push
(
ªq
);

1731 
ªt
 = 
mode
;

1732 i‡(
ªqPå
)

1733 *
ªqPå
 = 
ªq
;

1734 
ªq
->
	`öc_cou¡
();

1735 if(
mu°_wake_waôîs
) {

1736 
	`wakeup_waôîs
(
lock
);

1739 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1741 
	`INC_TSTAT
(
lock_acquúe_˙t
);

1743 
«me
.
	`l•a˚
()) {

1744 
lockid_t
::
t_bad
:

1746 
lockid_t
::
t_vﬁ
:

1747 
	`INC_TSTAT
(
lk_vﬁ_acq
);

1749 
lockid_t
::
t_°‹e
:

1750 
	`INC_TSTAT
(
lk_°‹e_acq
);

1752 
lockid_t
::
t_∑ge
:

1753 
	`INC_TSTAT
(
lk_∑ge_acq
);

1755 
lockid_t
::
t_kvl
:

1756 
	`INC_TSTAT
(
lk_kvl_acq
);

1758 
lockid_t
::
t_ªc‹d
:

1759 
	`INC_TSTAT
(
lk_ªc_acq
);

1761 
lockid_t
::
t_exã¡
:

1762 
	`INC_TSTAT
(
lk_ext_acq
);

1764 
lockid_t
::
t_u£r1
:

1765 
	`INC_TSTAT
(
lk_u£r1_acq
);

1767 
lockid_t
::
t_u£r2
:

1768 
	`INC_TSTAT
(
lk_u£r2_acq
);

1770 
lockid_t
::
t_u£r3
:

1771 
	`INC_TSTAT
(
lk_u£r3_acq
);

1773 
lockid_t
::
t_u£r4
:

1774 
	`INC_TSTAT
(
lk_u£r4_acq
);

1778  
eOK
;

1780 
has_waôî
:

1786 
	`DBGTHRD
(<< "waiting for otherÅhread in :"

1787 << " xd=" << 
xd
->
	`tid
()

1788 << "Çame=" << 
«me


1789 << " mode=" << (
mode
)

1790 << " duøti⁄=" << (
duøti⁄
Ë<< "Åimeout=" << 
timeout
 );

1797 if(
mu°_wake_waôîs
) {

1798 
mu°_wake_waôîs
 = 
Ál£
;

1799 
	`wakeup_waôîs
(
lock
);

1802 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

1804 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

1805 
	`INC_TSTAT
(
lock_awaô_Æt_˙t
);

1806 
w_rc_t
 
rc
 = 
xd
->
	`lockblock
(
timeout
);

1807 
	`MUTEX_ACQUIRE
(
the_xlöfo
->
lock_öfo_muãx
);

1811 i‡(!
rc
.
	`is_îr‹
()) {

1812  
eRETRY
;

1814  
rc
.
	`îr_num
();

1816 
	}
}

1818 
	glock_c‹e_m
::
	$¶i_purge_öa˘ive_locks
(
x˘_lock_öfo_t
* 
theLockInfo
, 
boﬁ
 
f‹˚
) {

1819 if(
theLockInfo
->
_¶i_purged
)

1823 
theLockInfo
->
_¶i_purged
 = 
åue
;

1826 
ªque°_li°_i
 
	`ô
(
theLockInfo
->
¶i_li°
);

1827 
lock_ªque°_t
* 
ªq
=
ô
.
	`√xt
()) {

1828 if(
f‹˚
 || !
ªq
->
kìp_me
) {

1829 
	`INC_TSTAT
(
¶i_purged
);

1830 
	`¶i_ab™d⁄_ªque°
(
ªq
, 
NULL
);

1833 
	}
}

1835 
lock_ªque°_t
* 
	glock_c‹e_m
::
	$¶i_ª˛aim_ªque°
(
lock_ªque°_t
* &
ªq
, 
¶i_∑ª¡_cmd
 
pcmd
, 
lock_hód_t
::
my_lock
* 
lock_muãx
) {

1837 
¶i_°©us_t
 
s
 = 
ªq
->
	`vthis
()->
_¶i_°©us
;

1838 i‡(
ªq
->
	`is_ª˛aimed
(
s
))

1839  
ªq
;

1841 
	`w_as£π2
(
s
 =
¶i_öa˘ive
 || s =
¶i_övÆid
 || s =
¶i_övÆid©ög
);

1842 if(
s
 =
¶i_öa˘ive
) {

1844 
s
 = 
ªq
->
	`ˇs_¶i_°©us
(
¶i_öa˘ive
, 
¶i_a˘ive
);

1847 if(
s
 =
¶i_öa˘ive
) {

1849 
lock_hód_t
* 
lock
 = 
ªq
->
	`gë_lock_hód
();

1850 
x˘_lock_öfo_t
* 
theLockInfo
 = 
ªq
->
	`gë_lock_öfo
();

1851 
boﬁ
 
Áûed
 = 
Ál£
;

1852 if(
lock
->
waôög
 && 
pcmd
 !
RECLAIM_NO_PARENT
) {

1854 
Áûed
 = 
åue
;

1855 
	`INC_TSTAT
(
¶i_waôed_⁄
);

1857 if(
pcmd
 !
RECLAIM_NO_PARENT
) {

1858 
lockid_t
 
≤ame
;

1859 if(
smÀvñ_0
::
lm
->
	`gë_∑ª¡
(
lock
->
«me
, 
≤ame
)) {

1860 #ifde‡
USE_LOCK_HASH


1861 
lock_ˇche_ñem_t
* 
≥
 = 
theLockInfo
->
hash
.
	`£¨ch
(
≤ame
);

1863 
lock_ˇche_ñem_t
* 
≥
 = 
theLockInfo
->
	`£¨ch_ˇche
(
≤ame
);

1880 if(!
≥
 ||Öe->
mode
 =
NL
) {

1881 
Áûed
 = 
åue
;

1884 if(
pcmd
 =
RECLAIM_CHECK_PARENT
 && !
≥
->
ªq
->
	`is_ª˛aimed
()) {

1885 
Áûed
 = 
åue
;

1887 if(
pcmd
 =
RECLAIM_RECLAIM_PARENT
) {

1888 if(!
	`¶i_ª˛aim_ªque°
(
≥
->
ªq
, 
RECLAIM_RECLAIM_PARENT
, 
NULL
)) {

1889 
≥
->
mode
 = 
NL
;

1890 
Áûed
 = 
åue
;

1893 
	`INC_TSTAT
(
¶i_u£d
);

1898 
	`ADD_TSTAT
(
¶i_no_∑ª¡
, 
Áûed
);

1902 if(
Áûed
) {

1903 
	`¶i_ab™d⁄_ªque°
(
ªq
, 
lock_muãx
);

1904 
ªq
 = 0;

1907 
	`w_as£π1
(
ªq
->
xlök
.
	`membî_of
(Ë=&
theLockInfo
->
¶i_li°
);

1908 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
theLockInfo
->
lock_öfo_muãx
));

1909 
ªq
->
xlök
.
	`dëach
();

1910 
theLockInfo
->
my_ªq_li°
[
ªq
->
	`gë_duøti⁄
()].
	`push
(req);

1911 
lockid_t
 c⁄° &
«me
 = 
lock
->name;

1913 #ifde‡
USE_LOCK_HASH


1914 if(
lock_ˇche_ñem_t
* 
e
 = 
theLockInfo
->
hash
.
	`£¨ch
(
«me
)) {

1916 if(
lock_ˇche_ñem_t
* 
e
 = 
theLockInfo
->
	`£¨ch_ˇche
(
«me
)) {

1918 if(!
e
->
ªq
) {

1920 
e
->
ªq
 =Ñeq;

1921 
e
->
mode
 = 
ªq
->
	`mode
();

1925 
	`w_as£π1
(
e
->
mode
 =
ªq
->
	`mode
());

1944  
ªq
;

1946 
	}
}

1948 
w_as£π1
(
ªq
 && !ªq->
is_ª˛aimed
());

1951 
w_as£π1
(
MUTEX_IS_MINE
(
ªq
->
gë_lock_öfo
()->
lock_öfo_muãx
));

1952 
w_as£π1
(
ªq
->
xlök
.
membî_of
(Ë=&ªq->
gë_lock_öfo
()->
¶i_li°
);

1953 
	gªq
->
	gxlök
.
dëach
();

1956 i‡(
	gs
 =
¶i_övÆid©ög
)

1957 
s
 = 
ªq
->
ˇs_¶i_°©us
(s, 
¶i_ab™d⁄ed
);

1960 if(
	gs
 =
¶i_övÆid
) {

1961 
memb¨_c⁄sumî
();

1962 
w_as£π1
(!
ªq
->
xlök
.
membî_of
(Ë&& !ªq->
æök
.member_of());

1963 
DELETE_LOCK_REQUEST
(
ªq
);

1966 i‡(
	glock_muãx
) {

1967 
MUTEX_RELEASE
(*
lock_muãx
);

1971  
	gªq
 = 0;

1974 
boﬁ
 
	glock_c‹e_m
::
	$¶i_övÆid©e_ªque°
(
lock_ªque°_t
* &
ªq
) {

1975 
¶i_°©us_t
 
s
 = 
ªq
->
	`vthis
()->
_¶i_°©us
;

1976 i‡(
ªq
->
	`is_ª˛aimed
(
s
))

1977  
Ál£
;

1980 
	`w_as£π1
(
s
 =
¶i_öa˘ive
);

1981 
s
 = 
ªq
->
	`ˇs_¶i_°©us
(
¶i_öa˘ive
, 
¶i_övÆid©ög
);

1982 
	`memb¨_c⁄sumî
();

1985 if(
ªq
->
	`is_ª˛aimed
(
s
))

1986  
Ál£
;

1989 
	`w_as£π1
(
s
 =
¶i_öa˘ive
);

1990 #i‡
MY_LOCK_DEBUG


1991 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
ªq
->
	`gë_lock_hód
()->
hód_muãx
));

1994 
ªq
->
æök
.
	`dëach
();

1997 
s
 = 
ªq
->
	`ˇs_¶i_°©us
(
¶i_övÆid©ög
, 
¶i_övÆid
);

1998 i‡(
s
 !
¶i_övÆid©ög
) {

2000 
	`w_as£π1
(
s
 =
¶i_ab™d⁄ed
);

2001 
	`memb¨_c⁄sumî
();

2002 
	`w_as£π1
(!
ªq
->
xlök
.
	`membî_of
(Ë&& !ªq->
æök
.member_of());

2003 
	`DELETE_LOCK_REQUEST
(
ªq
);

2007 
	`INC_TSTAT
(
¶i_övÆid©ed
);

2010 
ªq
 = 0;

2011  
åue
;

2012 
	}
}

2014 
	glock_c‹e_m
::
	$¶i_ab™d⁄_ªque°
(
lock_ªque°_t
* &
ªq
, 
lock_hód_t
::
my_lock
* 
lock_muãx
) {

2015 
	`W_IFDEBUG1
(
¶i_°©us_t
 
s
 = 
ªq
->
	`vthis
()->
_¶i_°©us
);

2016 
	`w_as£π1
(
s
 !
¶i_nŸ_öhîôed
);

2019 if(
	`¶i_ª˛aim_ªque°
(
ªq
, 
RECLAIM_NO_PARENT
, 
lock_muãx
)) {

2024 i‡(
lock_muãx
)

2025 
	`w_as£π1
(
lock_muãx
 =&
ªq
->
	`gë_lock_hód
()->
hód_muãx
);

2027 
lock_muãx
 = &
ªq
->
	`gë_lock_hód
()->
hód_muãx
;

2028 
	`W_COERCE
(
lock_muãx
->
	`acquúe
());

2030 #i‡
MY_LOCK_DEBUG


2031 
	`w_as£π1
(
nŸ
 
lock_muãx
 
‹
 
	`MUTEX_IS_MINE
(*lock_mutex));

2033 
	`W_COERCE
(
	`_ªÀa£_lock
(
ªq
, 
åue
));

2037 i‡(
lock_muãx
) {

2038 #i‡
MY_LOCK_DEBUG


2039 
	`w_as£π1
(
nŸ
 
	`MUTEX_IS_MINE
(*
lock_muãx
));

2043 
ªq
 = 0;

2044 
	}
}

2046 
	glock_c‹e_m
::
	$com∑˘_ˇche
(
x˘_lock_öfo_t
* 
theLockInfo
,

2047 
lockid_t
 c⁄° &
«me
 )

2049 
theLockInfo
->
	`com∑˘_ˇche
(
«me
);

2050 
	}
}

2052 
	glock_c‹e_m
::
	$put_ö_ˇche
(
x˘_lock_öfo_t
* 
the_xlöfo
,

2053 
lockid_t
 c⁄° &
«me
,

2054 
lock_mode_t
 
mode
,

2055 
lock_ªque°_t
* 
ªq
)

2057 
lock_ˇche_ñem_t
 
vi˘im
;

2059 
the_xlöfo
->
	`put_ˇche
(
«me
, 
mode
, 
ªq
, 
vi˘im
)

2062 if(
vi˘im
.
ªq
 && !vi˘im.ªq->
	`is_ª˛aimed
()) {

2063 
	`INC_TSTAT
(
¶i_evi˘ed
);

2064 
	`¶i_ab™d⁄_ªque°
(
vi˘im
.
ªq
, 
NULL
);

2067 
	}
}

2069 
lock_ˇche_ñem_t
* 
	glock_c‹e_m
::
	$£¨ch_ˇche
(

2070 
x˘_lock_öfo_t
* 
the_xlöfo
,

2071 
lockid_t
 c⁄° &
«me
, 
boﬁ
 
ª˛aim
)

2073 #i‚de‡
__GNUC__


2074 #w¨nög 
TODO
: 
im∂emít
 
some
 
LRU
-
ish
 
scheme
?

2077 
lock_ˇche_ñem_t
* 
e
 = 
the_xlöfo
->
	`£¨ch_ˇche
(
«me
);

2078 if(
e
) {

2079 if(
e
->
ªq
) {

2081 
	`w_as£π1
((*Ë
e
->
ªq
->
xlök
.
	`membî_of
(Ë!(*Ëe->ªq->xlök.
	`¥ev
());

2082 #w¨nög 
FIXME
: 
is
 
ô
 
Æways
 
c‹ª˘
 
to
 
ª˛aim
 
∑ª¡s
 
ªcursivñy
 
hîe
?

2083 if(
ª˛aim
 && !
	`¶i_ª˛aim_ªque°
(
e
->
ªq
, 
RECLAIM_RECLAIM_PARENT
, 
NULL
)) {

2084 
e
->
mode
 = 
NL
;

2085 
e
 = 0;

2087 if(!
ª˛aim
 && !
e
->
ªq
->
	`is_ª˛aimed
()) {

2088 
e
 = 0;

2092  
e
;

2093 
	}
}

2095 
boﬁ


2096 
	glock_c‹e_m
::
	$_maybe_öhîô
(
lock_ªque°_t
* 
ªque°
, 
boﬁ
 
is_™˚°‹
) {

2097 if(!
ªque°
->
	`gë_lock_öfo
()->
_¶i_íabÀd
)

2098  
Ál£
;

2100 
lock_hód_t
* 
lock
 = 
ªque°
->
	`gë_lock_hód
();

2101 if(
lock
->
«me
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
 && !lock->
waôög
) {

2102 
lock_mode_t
 
m
 = 
ªque°
->
	`mode
();

2103 if((
m
 =
IS
 || m =
IX
 || m =
SH
)) {

2105 
	`INC_TSTAT
(
¶i_ñigibÀ
);

2106 
boﬁ
 
should_öhîô
 = 
ªque°
->
_¶i_°©us
 =
¶i_nŸ_öhîôed


2107 && 
lock
->
hód_muãx
.
	`is_c⁄ãnded
();

2110 
should_öhîô
 |(
lock
->
«me
.
	`l•a˚
(Ë<
lockid_t
::
t_°‹e
);

2111 if(0 || 
is_™˚°‹
 || 
should_öhîô
 || 
ªque°
->
_¶i_°©us
 =
¶i_a˘ive
) {

2112 if(
ªque°
->
_¶i_°©us
 =
¶i_öa˘ive
)

2113 
	`INC_TSTAT
(
¶i_kït
);

2115 
ªque°
->
_num_chûdªn
 = 0;

2116 
ªque°
->
_ªf_cou¡
 = 0;

2119 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
ªque°
->
	`gë_lock_öfo
()->
lock_öfo_muãx
));

2120 
	`w_as£π1
(
ªque°
->
xlök
.
	`membî_of
(Ë=&ªque°->
	`gë_lock_öfo
()->
my_ªq_li°
[ªque°->
	`gë_duøti⁄
()]);

2121 
ªque°
->
xlök
.
	`dëach
();

2122 
ªque°
->
	`gë_lock_öfo
()->
¶i_li°
.
	`push
(request);

2126  
åue
;

2132  
Ál£
;

2133 
	}
}

2135 
rc_t


2136 
	glock_c‹e_m
::
	$ªÀa£_lock
(

2137 
x˘_lock_öfo_t
* 
the_xlöfo
,

2138 c⁄° 
lockid_t
& 
«me
,

2139 
lock_hód_t
* 
lock
,

2140 
lock_ªque°_t
* 
ªque°
,

2141 
boﬁ
 
f‹˚


2146 
	`FUNC
(
lock_c‹e_m
::
ªÀa£
);

2147 
	`DBGTHRD
(<<"lock_c‹e_m::ªÀa£ " << "Üockid " <<
«me
);

2149 
	`w_as£π3
(
the_xlöfo
->
	`tid
(Ë=
	`me
()->
	`x˘
()->tid());

2150 
	`w_as£π3
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

2154 if(
ªque°
 && 
f‹˚
 && 
	`_maybe_öhîô
(request)) {

2156  
RCOK
;

2159 i‡(!
lock
) {

2160 
lock
 = 
	`föd_lock_hód
(
«me
, 
Ál£
);

2163 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

2166 i‡(!
lock
) {

2167  
RCOK
;

2170 i‡(!
ªque°
) {

2171 #i‡
MY_LOCK_DEBUG


2172 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

2174 
ªque°
 = 
lock
->
	`föd_lock_ªque°
(
the_xlöfo
);

2175 if(
ªque°
 && !‘eque°=
	`¶i_ª˛aim_ªque°
‘eque°, 
RECLAIM_CHECK_PARENT
, &
lock
->
hód_muãx
)) ) {

2177 #i‡
MY_LOCK_DEBUG


2178 
	`w_as£π1
(
nŸ
 
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

2180 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

2181 
	`wakeup_waôîs
(
lock
);

2182  
RCOK
;

2186 i‡(! 
ªque°
) {

2188 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2189  
RCOK
;

2192 
	`w_as£π9
(
lock
 =
ªque°
->
	`gë_lock_hód
());

2193  
	`_ªÀa£_lock
(
ªque°
, 
f‹˚
);

2194 
	}
}

2196 
rc_t


2197 
	glock_c‹e_m
::
	$_ªÀa£_lock
(
lock_ªque°_t
* 
ªque°
, 
boﬁ
 
f‹˚


2202 
	`DBGTHRD
(<<"lock_core_m::_release "

2203 << "Ñeque° " <<
ªque°
 << " f‹˚ " << 
f‹˚
);

2205 
lock_hód_t
* 
lock
 = 
ªque°
->
	`gë_lock_hód
();

2206 
x˘_lock_öfo_t
* 
the_xlöfo
 = 
ªque°
->
	`gë_lock_öfo
();

2208 i‡(!
f‹˚
 &&

2211 (
ªque°
->
	`gë_duøti⁄
(Ë>
t_l⁄g


2212 || 
ªque°
->
	`gë_cou¡
() > 1

2218 #i‡
W_DEBUG_LEVEL
 > 0

2223 if(
ªque°
->
	`gë_duøti⁄
(Ë=
t_ö°™t
) {

2224 
	`w_as£π1
(
ªque°
->
	`gë_cou¡
() == 1);

2227 i‡(
ªque°
->
	`gë_cou¡
(Ë> 1Ëªque°->
	`dec_cou¡
();

2228 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2229 
	`DBGTHRD
(<<"lock_core_m::_release dec count only " );

2230  
RCOK
;

2240 #i‡
MY_LOCK_DEBUG


2241 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

2243 
ªque°
->
æök
.
	`dëach
();

2244 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

2245 
ªque°
->
xlök
.
	`dëach
();

2246 
	`DELETE_LOCK_REQUEST
(
ªque°
);

2247 
	`DBGTHRD
(<<"lock_core_m::_release deletedÑequest" );

2250 
	`_upd©e_ˇche
(
the_xlöfo
, 
lock
->
«me
, 
NL
);

2252 
lock
->
gø¡ed_mode
 =Üock->
	`gø¡ed_mode_Ÿhî
(0);

2253 
	`wakeup_waôîs
(
lock
);

2255  
RCOK
;

2256 
	}
}

2258 
boﬁ


2259 
	glock_c‹e_m
::
	$wakeup_waôîs
(
lock_hód_t
*& 
lock
, 
lock_ªque°_t
* 
£lf
)

2267 #i‡
MY_LOCK_DEBUG


2268 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

2271 
boﬁ
 
woke_£lf
 = 
Ál£
;

2272 i‡(
lock
->
	`queue_Àngth
() == 0)

2274 
uöt4_t
 
idx
 = 
	`_èbÀ_hash
(
	`w_hash
(
lock
->
«me
));

2277 
	`ACQUIRE_BUCKET_MUTEX
(
idx
);

2278 if(!
lock
->
pö_˙t
) {

2280 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2281 
	`FªeLockHódToPoﬁ
(
lock
);

2282 
lock
 = 0;

2285 
	`RELEASE_BUCKET_MUTEX
(
idx
);

2287 i‡(!
lock
Ë 
Ál£
;

2290 if(
lock
->
waôög
)

2292 
lock_ªque°_t
* 
ªque°
 = 0;

2294 
lock
->
waôög
 = 
Ál£
;

2295 
boﬁ
 
cvt_≥ndög
 = 
Ál£
;

2296 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`ôî
(*
lock
);

2298 !
lock
->
waôög
 && (
ªque°
 = 
ôî
.
	`√xt
())) {

2299 
boﬁ
 
wake_up
 = 
Ál£
;

2301 
ªque°
->
	`°©us
()) {

2302 
lock_m
::
t_c⁄vîtög
: {

2303 
lmode_t
 
gmode
 = 
lock
->
	`gø¡ed_mode_Ÿhî
(
ªque°
);

2304 
	`w_as£π9
(
lock
->
gø¡ed_mode
 =
su¥
[
gmode
][
ªque°
->
mode
]);

2305 
wake_up
 = 
com∑t
[
ªque°
->
	`c⁄vît_mode
()][
gmode
];

2306 i‡(
wake_up
)

2307 
ªque°
->
	`£t_mode
 (ªque°->
	`c⁄vît_mode
());

2309 
cvt_≥ndög
 = 
åue
;

2312 
lock_m
::
t_waôög
:

2313 i‡(
cvt_≥ndög
) {

2315 
lock
->
waôög
 = 
åue
;

2318 
wake_up
 = 
com∑t
[
ªque°
->
	`mode
()][
lock
->
gø¡ed_mode
];

2319 
lock
->
waôög
 = ! 
wake_up
;

2321 
lock_m
::
t_gø¡ed
:

2323 
lock_m
::
t_no_°©us
:

2325 
	`W_FATAL
(
eINTERNAL
);

2328 i‡(
wake_up
) {

2329 
lock
->
gø¡ed_mode
 = 
su¥
[
ªque°
->
	`mode
()][lock->granted_mode];

2330 
smthªad_t
 *
thr
 = 
ªque°
->
	`thªad
();

2331 
	`w_as£π1
(
thr
);

2335 
	`w_as£π2
(
ªque°
 ==

2336 
ªque°
->
	`gë_lock_öfo
()->
	`waôög_ªque°
());

2337 
ªque°
->
	`£t_°©us
(
lock_m
::
t_gø¡ed
);

2338 i‡(
ªque°
 =
£lf
) {

2339 
woke_£lf
 = 
åue
;

2342 
rc_t
 
rc
 = 
thr
->
	`smthªad_unblock
(
eOK
);

2343 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë=
eNOTBLOCKED
) {

2348 
rc
 = 
RCOK
;

2350 
	`W_COERCE
(
rc
);

2355 i‡(
cvt_≥ndög
Ë
lock
->
waôög
 = 
åue
;

2357 i‡(
nŸ
 
£lf
)

2358 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2359  
woke_£lf
;

2360 
	}
}

2379 
boﬁ


2380 
	glock_c‹e_m
::
	$upgøde_ext_ªq_to_EX_if_should_‰ì
(
lock_ªque°_t
* 
ªq
)

2382 
lock_hód_t
* 
lock
 = 
ªq
->
	`gë_lock_hód
();

2383 
	`w_as£π9
(
lock
->
«me
.
	`l•a˚
(Ë=
lockid_t
::
t_exã¡
);

2385 i‡(
lock
->
gø¡ed_mode
 =
EX
 ||

2386 
lock
->
«me
.
	`ext_has_∑ge_Æloc
(Ë||Üock->
	`unß„_queue_Àngth
() > 1)

2397  
Ál£
;

2400 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

2401 
boﬁ
 
suc˚ss
 = 
Ál£
;

2402 i‡–!(
lock
->
gø¡ed_mode
 =
EX
 ||

2403 
lock
->
«me
.
	`ext_has_∑ge_Æloc
(Ë||Üock->
	`queue_Àngth
() > 1))

2405 
suc˚ss
 = 
åue
;

2406 
lock
->
gø¡ed_mode
 = 
EX
;

2407 
ªq
->
	`£t_mode
(
EX
);

2409 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2410  
suc˚ss
;

2412 
	}
}

2415 
rc_t


2416 
	glock_c‹e_m
::
	$ªÀa£_duøti⁄
(

2417 
x˘_lock_öfo_t
* 
the_xlöfo
,

2418 
duøti⁄_t
 
duøti⁄
,

2419 
boﬁ
 
Æl_Àss_th™
,

2420 
extid_t
* 
ext_to_‰ì
)

2422 
	`FUNC
(
lock_c‹e_m
::
ªÀa£_duøti⁄
);

2423 
	`DBG
(<<"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");

2424 
	`DBGTHRD
(<<"lock_core_m::release_duration "

2425 << "Åid=" << 
the_xlöfo
->
	`tid
()

2426 << " duøti⁄=" << (
duøti⁄
)

2427 << "áŒ_Àss_th™=" << 
Æl_Àss_th™
 );

2428 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

2430 
lock_hód_t
* 
lock
 = 0;

2431 
lock_ªque°_t
* 
ªque°
 = 0;

2432 
	`w_as£π1
((
duøti⁄
 =0 || duøti⁄ > 0Ë&& duøti⁄ < 
t_num_duøti⁄s
);

2438 
i
 = (
Æl_Àss_th™
 ? 
t_ö°™t
 : 
duøti⁄
); i <= duration; i++)

2440 if(
i
 =
t_l⁄g
)

2441 
	`¶i_purge_öa˘ive_locks
(
the_xlöfo
);

2445 
ªque°_li°_t
 &
ªque°s
 = 
the_xlöfo
->
my_ªq_li°
[
i
];

2446 i‡(
i
 < 
t_l⁄g
 || !
ext_to_‰ì
) {

2447 (
ªque°
 = 
ªque°s
.
	`t›
())) {

2448 
	`DBG
(<<"p›≥dÑeque° " << 
ªque°
 << "==" << *request);

2449 i‡(
ªque°
->
	`is_qu¨k_m¨kî
()) {

2451 
	`DELETE_LOCK_REQUEST
(
ªque°
);

2455 
lock
 = 
ªque°
->
	`gë_lock_hód
();

2456 
	`W_COERCE
(
	`ªÀa£_lock
(
the_xlöfo
, 
lock
->
«me
,Üock, 
ªque°
, 
åue
) );

2459 (
ªque°
 = 
ªque°s
.
	`t›
())) {

2460 
	`DBG
(<<"p›≥dÑeque° " << 
ªque°
 << "==" << *request);

2461 i‡(
ªque°
->
	`is_qu¨k_m¨kî
()) {

2463 
	`DELETE_LOCK_REQUEST
(
ªque°
);

2468 
lock
 = 
ªque°
->
	`gë_lock_hód
();

2469 
	`DBG
(<<"t›Ñeque° i†" << 
ªque°
 << "=="

2470 << *
ªque°
 << "Üock " << 
lock
 << "=" <<Üock->
«me
 );

2472 i‡–!(
lock
->
«me
.
	`l•a˚
(Ë=
lockid_t
::
t_exã¡
 &&

2473 
	`upgøde_ext_ªq_to_EX_if_should_‰ì
(
ªque°
)) )

2475 
	`DBGTHRD
(<<"poppedÜockÑequest " <<

2476 
ªque°
<< "on my_req_list["<<

2477 
i
<<"] : " << *
ªque°
);

2478 
	`W_COERCE
(
	`ªÀa£_lock
(
the_xlöfo
, 
lock
->
«me
,Üock, 
ªque°
, 
åue
) );

2489 
lock
->
«me
.
	`exåa˘_exã¡
(*
ext_to_‰ì
);

2490 
	`DBG
(<<" foundÉxã¡Åÿ‰ì : "<< *
ext_to_‰ì
 );

2491  
	`RC
(
eFOUNDEXTTOFREE
);

2496 
	`DBGTHRD
(<<"lock_core_m::release_duration DONE");

2498  
RCOK
;

2499 
	}
}

2505 
rc_t


2506 
	glock_c‹e_m
::
	$›í_qu¨k
(

2507 
x˘_t
* 
xd
)

2509 
	`FUNC
(
lock_c‹e_m
::
›í_qu¨k
);

2510 i‡(
xd
->
	`lock_öfo
()->
	`ö_qu¨k_sc›e
()) {

2512 
	`W_FATAL
(
eINTERNAL
);

2514 
	`MUTEX_ACQUIRE
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
);

2515 
lock_ªque°_t
* 
m¨kî
 = 
	`NEW_LOCK_REQUEST
(
xd
, 
åue
);

2516 
xd
->
	`lock_öfo
()->
	`£t_qu¨k_m¨kî
 (
m¨kî
);

2517 
	`MUTEX_RELEASE
(
xd
->
	`lock_öfo
()->
lock_öfo_muãx
);

2520 i‡(
xd
->
	`lock_öfo
()->
	`qu¨k_m¨kî
(Ë=
NULL
Ë 
	`RC
(
fcOUTOFMEMORY
);

2521  
RCOK
;

2522 
	}
}

2527 
rc_t


2528 
	glock_c‹e_m
::
	$˛o£_qu¨k
(

2529 
x˘_t
* 
xd
,

2530 
boﬁ
 
ªÀa£_locks
)

2533 
	`FUNC
(
lock_c‹e_m
::
˛o£_qu¨k
);

2534 
x˘_lock_öfo_t
* 
the_xlöfo
 = 
xd
->
	`lock_öfo
();

2535 
	`MUTEX_ACQUIRE
(
the_xlöfo
->
lock_öfo_muãx
);

2536 i‡(!
the_xlöfo
->
	`ö_qu¨k_sc›e
()) {

2537 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

2538  
	`RC
(
eNOQUARK
);

2541 i‡(!
ªÀa£_locks
) {

2545 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

2546 
the_xlöfo
->
	`qu¨k_m¨kî
()->
xlök
.
	`dëach
();

2547 
	`DELETE_LOCK_REQUEST
(
the_xlöfo
->
	`qu¨k_m¨kî
());

2548 
the_xlöfo
->
	`£t_qu¨k_m¨kî
(
NULL
);

2551 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

2552  
RCOK
;

2555 
lock_hód_t
* 
lock
 = 0;

2556 
lock_ªque°_t
* 
ªque°
 = 0;

2557 
boﬁ
 
MAYBE_UNUSED
 
found_m¨kî
 = 
Ál£
;

2559 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
the_xlöfo
->
lock_öfo_muãx
));

2562 
ªque°_li°_i
 
	`ôî
(
the_xlöfo
->
my_ªq_li°
[
t_sh‹t
]);

2563 (
ªque°
 = 
ôî
.
	`√xt
())) {

2564 
	`w_as£π9
(
ªque°
->
duøti⁄
 =
t_sh‹t
);

2565 i‡(
ªque°
->
	`is_qu¨k_m¨kî
()) {

2566 
	`w_as£π9
(
ªque°
 =
the_xlöfo
->
	`qu¨k_m¨kî
());

2567 
ªque°
->
xlök
.
	`dëach
();

2568 
	`DBGTHRD
(<<"detachedÜockÑequest in close_quark");

2569 
the_xlöfo
->
	`£t_qu¨k_m¨kî
(
NULL
);

2570 
	`DELETE_LOCK_REQUEST
(
ªque°
);

2572 
found_m¨kî
 = 
åue
;

2575 i‡(
ªque°
->
	`mode
(Ë=
IS
 ||Ñeque°->mode(Ë=
SH
 ||Ñeque°->mode(Ë=
UD
) {

2577 
ªque°
->
xlök
.
	`dëach
();

2579 
lock
 = 
ªque°
->
	`gë_lock_hód
();

2586 
	`W_COERCE
(
	`ªÀa£_lock
(
the_xlöfo
, 
lock
->
«me
,Üock, 
ªque°
, 
åue
) );

2593 
	`MUTEX_RELEASE
(
the_xlöfo
->
lock_öfo_muãx
);

2594 
	`w_as£π9
(
found_m¨kî
);

2595  
RCOK
;

2596 
	}
}

2598 
	gw_rc_t
::
îrcode_t


2599 
lock_c‹e_m
::
	$_check_dódlock
(
x˘_t
* 
£lf
,

2600 
boﬁ
 
fú°_time
,

2601 
lock_ªque°_t
 *
myªq


2605 
x˘_lock_öfo_t
* 
myli
 = 
£lf
->
	`lock_öfo
();

2606 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
myli
->
lock_öfo_muãx
));

2608 
lock_hód_t
* 
lock
 = 
myªq
->
	`gë_lock_hód
();

2609 #i‡
MY_LOCK_DEBUG


2610 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
lock
->
hód_muãx
));

2690 
boﬁ
 
dódlock_found
 = 
Ál£
;

2691 
lock_ªque°_t
* 
ªq
 = 0;

2692 if(
fú°_time
) {

2693 
	`INC_TSTAT
(
lock_dld_fú°_ˇŒ_˙t
);

2695 
	`INC_TSTAT
(
lock_dld_ˇŒ_˙t
);

2698 if(!
dódlock_found
) {

2702 
QÀn
 = 
lock
->
	`queue_Àngth
();

2703 
	`w_as£π2
(
QÀn
> 1);

2709 
boﬁ
 
c⁄vîtög
 = (
myªq
->
	`°©us
(Ë=
lock_m
::
t_c⁄vîtög
) ;

2710 
lmode_t
 
mymode
 = 
c⁄vîtög
 ? 
myªq
->
	`c⁄vît_mode
(Ë: myªq->
	`mode
();

2714 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`ô
(*
lock
);

2715 
boﬁ
 
so_Ár_evîy⁄e_gø¡ed
 = 
åue
;

2716 
boﬁ
 
ahód_of_us
 = 
åue
;

2717 
i
=0; i < 
QÀn
; i++)

2719 
ªq
 = 
ô
.
	`√xt
();

2720 if(
ªq
 =
myªq
)

2722 
ahód_of_us
 = 
Ál£
;

2725 if(!
c⁄vîtög
) {

2726 if(
DEBUG_DEADLOCK
)

2727 
	`Ârötf
(
°dîr
,

2729 
myªq
, 
i
, 
QÀn
);

2735 if(
DEBUG_DEADLOCK
)

2736 
	`Ârötf
(
°dîr
,

2738 
myªq
, 
i
, 
QÀn
);

2749 
boﬁ
 
¥ede˚ss‹_com∑tibÀ
;

2750 i‡(
ahód_of_us
 && (
ªq
->
	`°©us
(Ë=
lock_m
::
t_waôög
 ||Ñeq->°©us(Ë=lock_m::
t_c⁄vîtög
)) {

2751 i‡(
so_Ár_evîy⁄e_gø¡ed
) {

2754 
¥ede˚ss‹_com∑tibÀ
 = 
Ál£
;

2755 
so_Ár_evîy⁄e_gø¡ed
 = 
Ál£
;

2761 i‡(
ªq
->
	`°©us
(Ë=
lock_m
::
t_c⁄vîtög
) {

2762 
¥ede˚ss‹_com∑tibÀ
 = 
com∑t
[
ªq
->
	`mode
()][
mymode
] && com∑t[ªq->
	`c⁄vît_mode
()][mymode];

2764 
¥ede˚ss‹_com∑tibÀ
 = 
com∑t
[
ªq
->
	`mode
()][
mymode
];

2768 
¥ede˚ss‹_com∑tibÀ
 = 
com∑t
[
ªq
->
	`mode
()][
mymode
];

2770 if(
¥ede˚ss‹_com∑tibÀ
) {

2771 if(
DEBUG_DEADLOCK
)

2772 
	`Ârötf
(
°dîr
,

2774 
myªq
, 
i
, 
QÀn
,

2775 
ªq
->
	`°©us
(),Ñeq->
	`mode
(),Ñeq,

2776 
myªq
->
	`°©us
(), 
mymode
);

2784 
x˘_lock_öfo_t
* 
theúli
 = 
ªq
->
	`gë_lock_öfo
();

2785 if(!
myli
->
	`upd©e_waô_m≠
(
theúli
->
	`gë_waô_m≠
())) {

2786 if(
DEBUG_DEADLOCK
)

2787 
	`Ârötf
(
°dîr
,

2789 
myªq
, 
__LINE__
, 
i
, 
QÀn
,

2790 
ªq
->
	`°©us
(),Ñeq->
	`mode
(),Ñeq,

2791 
myªq
->
	`°©us
(), 
mymode
);

2792 
dódlock_found
 = 
åue
;

2796 if(
DEBUG_DEADLOCK
)

2797 
	`Ârötf
(
°dîr
,

2799 
myªq
, 
i
, 
QÀn
,

2800 
ªq
->
	`°©us
(),Ñeq->
	`mode
(),Ñeq);

2806 if(
dódlock_found
) {

2807 
	`INC_TSTAT
(
lock_dódlock_˙t
);

2811 
o°rög°ªam
 
os
;

2812 
os
 << *
lock
 << 
íds
;

2813 
	`Ârötf
(
°dîr
,

2814 "PossibÀ dódlock waôög o¿%†ªq %p\n", 
os
.
	`°r
().
	`c_°r
(),

2815 
ªq
);

2818 
x˘_lock_öfo_t
 *
theú_lock_öfo
 = 
ªq
->
	`gë_lock_öfo
();

2823 if(
myli
->
	`tid
(Ë< 
theú_lock_öfo
->tid()) {

2836 
	`INC_TSTAT
(
lock_dld_vi˘im_Ÿhî_˙t
);

2840 
lock_ªque°_t
 *
th©_waôög
 = 
theú_lock_öfo
->
	`waôög_ªque°
();

2841 if(!
th©_waôög
) {

2843 
	`INC_TSTAT
(
lock_Ál£_dódlock_˙t
);

2844  
eOK
;

2846 
	`w_as£π2
 (
myli
->
	`tid
(Ë!
th©_waôög
->
	`gë_lock_öfo
()->tid());

2848 if(
th©_waôög
->
	`°©us
(Ë!
lock_m
::
t_waôög


2850 
th©_waôög
->
	`°©us
(Ë!
lock_m
::
t_c⁄vîtög
)

2853 
	`INC_TSTAT
(
lock_Ál£_dódlock_˙t
);

2854  
eOK
;

2868 if(
theú_lock_öfo
->
	`waôög_ªque°_is_blockög
()==
Ál£
)

2872 
	`INC_TSTAT
(
lock_dld_Ál£_vi˘im_˙t
);

2873  
eOK
;

2876 
	`DBGTHRD
(<<"abouàtÿunblock " << *
th©_waôög
);

2877 
smthªad_t
 *
thr
 = 
th©_waôög
->
	`thªad
();

2878 if(!
thr
) {

2884 
	`W_FATAL
(
eINTERNAL
);

2887 
rc_t
 
rc
 = 
thr
->
	`smthªad_unblock
(
eDEADLOCK
);

2889 if(
rc
.
	`is_îr‹
()) {

2890 if(
rc
.
	`îr_num
(Ë!
eNOTBLOCKED
) {

2892 
	`W_FATAL
(
rc
.
	`îr_num
());

2896 
o°rög°ªam
 
os
;

2897 
os
 << 
ªq
 << 
íds
;

2898 
	`Ârötf
(
°dîr
,

2900 
os
.
	`°r
().
	`c_°r
());

2902 
	`INC_TSTAT
(
lock_dld_Ál£_vi˘im_˙t
);

2903  
eOK
;

2905  
rc
.
	`îr_num
();

2908 
	`INC_TSTAT
(
lock_dld_vi˘im_£lf_˙t
);

2910  
eDEADLOCK
;

2913  
eOK
;

2914 
	}
}

2924 
	glock_c‹e_m
::
	$_upd©e_ˇche
(
x˘_lock_öfo_t
* 
the_xlöfo
, c⁄° 
lockid_t
& 
«me
, 
lmode_t
 
m
)

2926 i‡(
«me
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
)

2928 i‡(
lock_ˇche_ñem_t
* 
e
 =

2929 
the_xlöfo
->
	`£¨ch_ˇche
(
«me
)

2931 
e
->
mode
 = 
m
;

2932 i‡(
m
 =
NL
)

2935 
e
->
ªq
 = 0;

2938 
	}
}

2949 
	glock_c‹e_m
::
	$dump
(
o°ªam
 & 
o
)

2954 
o
 << "WARNING:Üock_c‹e_m::dum∞i†nŸÅhªad-ß„:" << 
ídl
;

2955 
o
 << "lock_core_m:"

2956 << " _hèbsz=" << 
_hèbsz


2957 << 
ídl
;

2958 
h
 = 0; h < 
_hèbsz
; h++) {

2959 
	`ACQUIRE_BUCKET_MUTEX
(
h
);

2960 
chaö_li°_i
 
	`i
(
_hèb
[
h
].
chaö
);

2961 
lock_hód_t
* 
lock
;

2962 
lock
 = 
i
.
	`√xt
();

2963 i‡(
lock
) {

2964 
o
 << 
h
 << ": ";

2966 
lock
) {

2968 
hh
 = 
	`_èbÀ_hash
(
	`w_hash
(
lock
->
«me
));

2969 if(
hh
 !
h
) {

2970 
o
 << "ERROR! hashÅabÀ buckë h=" << 
h


2971 << " c⁄èö†lock hód " << *
lock


2972 << " which hashe†tÿ" << 
hh


2973 << 
ídl
;

2976 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

2977 
o
 << "\à" << *
lock
 << 
ídl
;

2978 
lock_ªque°_t
* 
ªque°
;

2979 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`r
(*
lock
);

2981 (
ªque°
 = 
r
.
	`√xt
())) {

2982 
o
 << "\t\t" << *
ªque°
 << 
ídl
;

2984 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

2985 
lock
 = 
i
.
	`√xt
();

2987 
	`RELEASE_BUCKET_MUTEX
(
h
);

2989 
	}
}

2992 
	glock_c‹e_m
::
	$dump
()

2994 
	`dump
(
˚º
);

2995 
˚º
 << 
Êushl
;

2996 
	}
}

3008 
	glock_c‹e_m
::
	$as£π_em±y
() const

3010 
found_lock
=0;

3011 
found_ªque°
=0;

3013 
uöt
 
h
 = 0; h < 
_hèbsz
; h++)

3015 
chaö_li°_t
 &
	`C
(
_hèb
[
h
].
chaö
);

3016 if(
C
.
	`is_em±y
()) ;

3018 
chaö_li°_i
 
	`i
(
C
);

3019 
lock_hód_t
* 
lock
;

3020 
lock
 = 
i
.
	`√xt
();

3021 i‡(
lock
) {

3022 
˚º
 << 
h
 << ": ";

3024 
lock
) {

3025 
found_lock
++;

3026 
˚º
 << "\à" << *
lock
 << 
ídl
;

3027 
lock_ªque°_t
* 
ªque°
;

3028 
lock_hód_t
::
unß„_queue_ôî©‹_t
 
	`r
(*
lock
);

3030 (
ªque°
 = 
r
.
	`√xt
())) {

3031 
found_ªque°
++;

3032 
˚º
 << "\t\t" << *
ªque°
 << 
ídl
;

3034 
lock
 = 
i
.
	`√xt
();

3037 
	`w_as£π1
(
found_ªque°
 == 0);

3038 
	`w_as£π1
(
found_lock
 == 0);

3039 
	}
}

3052 
	glock_c‹e_m
::
	$_dump
(
o°ªam
 &
o
)

3054 
uöt
 
h
 = 0; h < 
_hèbsz
; h++) {

3055 
chaö_li°_i
 
	`i
(
_hèb
[
h
].
chaö
);

3056 
lock_hód_t
* 
lock
;

3057 
lock
 = 
i
.
	`√xt
();

3058 i‡(
lock
) {

3059 
o
 << 
h
 << ": ";

3061 
lock
) {

3062 
o
 << "\à" << *
lock
 << 
ídl
;

3063 
lock_ªque°_t
* 
ªque°
;

3064 
lock_hód_t
::
unß„_queue_ôî©‹_t
 
	`r
(*
lock
);

3065 (
ªque°
 = 
r
.
	`√xt
())) {

3066 
o
 << "\t\t" << *
ªque°
 << 
ídl
;

3068 
lock
 = 
i
.
	`√xt
();

3071 
o
 << "--íd o‡lockÅabÀ--" << 
ídl
;

3072 
	}
}

3082 
	go°ªam
&

3083 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	glock_ªque°_t
& 
	gr
)

3085 
	go
 << "x˘:" << 
	gr
.
gë_lock_öfo
()->
tid
()

3086 << " mode:" << 
	glock_ba£_t
::
mode_°r
[
r
.
mode
()]

3087 << " c¡:" << 
r
.
gë_cou¡
()

3088 << "Çum_chûdªn:" << 
r
.
num_chûdªn
()

3089 << " dur:" << 
lock_ba£_t
::
duøti⁄_°r
[
r
.
gë_duøti⁄
()]

3093 
	gr
.
°©us
()) {

3094 
	glock_m
::
t_gø¡ed
:

3095 
o
 << 'G';

3097 
	glock_m
::
t_c⁄vîtög
:

3098 
o
 << 'U' << 
lock_ba£_t
::
mode_°r
[
r
.
c⁄vît_mode
()];

3100 
	glock_m
::
t_waôög
:

3101 
o
 << 'W';

3103 
	glock_m
::
t_no_°©us
:

3105 
o
 << "BAD STATE (" << (
r
.
°©us
()) << ")" ;

3109 
	go
 << " sli:";

3110 
	gr
.
	g_¶i_°©us
) {

3111 
	g¶i_nŸ_öhîôed
:

3112 
o
 << "-";

3114 
	g¶i_a˘ive
:

3115 
o
 << "A";

3117 
	g¶i_öa˘ive
:

3118 
o
 << "I";

3120 
	g¶i_övÆid©ög
:

3121 
o
 << "i*";

3123 
	g¶i_övÆid
:

3124 
o
 << "i";

3126 
	g¶i_ab™d⁄ed
:

3127 
o
 << "a";

3130 
o
 << "<BAD>";

3134  
	go
;

3146 
	go°ªam
&

3147 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	glock_hód_t
& 
	gl
)

3149 
	go
 << 
	gl
.
	g«me
 << ' ' << 
	glock_ba£_t
::
mode_°r
[
l
.
gø¡ed_mode
];

3150 i‡(
	gl
.
	gwaôög
Ë
	go
 << " W";

3151  
	go
;

3164 
	go°ªam
&

3165 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	glockid_t
& 
	gi
)

3167 
	go
 << "L(";

3168 
	gi
.
l•a˚
()) {

3169 
	glockid_t
::
t_vﬁ
:

3170 
o
 << 
i
.
vid
();

3172 
	glockid_t
::
t_°‹e
: {

3173 
°id_t
 
s
;

3174 
	gi
.
exåa˘_°id
(
s
);

3175 
	go
 << 
	gs
;

3178 
	glockid_t
::
t_exã¡
: {

3179 
extid_t
 
e
;

3180 
	gi
.
exåa˘_exã¡
(
e
);

3181 
	go
 << 
	ge
 << (
	gi
.
ext_has_∑ge_Æloc
() ? "[PageAllocs]" : "[NoPageAllocs]");

3184 
	glockid_t
::
t_∑ge
: {

3185 
Õid_t
 
p
;

3186 
	gi
.
exåa˘_Õid
(
p
);

3187 
	go
 << 
	gp
;

3190 
	glockid_t
::
t_kvl
: {

3191 
kvl_t
 
k
;

3192 
	gi
.
exåa˘_kvl
(
k
);

3193 
	go
 << 
	gk
;

3196 
	glockid_t
::
t_ªc‹d
: {

3197 
rid_t
 
r
;

3198 
	gi
.
exåa˘_rid
(
r
);

3199 
	go
 << 
	gr
;

3202 
	glockid_t
::
t_u£r1
: {

3203 
lockid_t
::
u£r1_t
 
u
;

3204 
	gi
.
exåa˘_u£r1
(
u
);

3205 
	go
 << 
	gu
;

3208 
	glockid_t
::
t_u£r2
: {

3209 
lockid_t
::
u£r2_t
 
u
;

3210 
	gi
.
exåa˘_u£r2
(
u
);

3211 
	go
 << 
	gu
;

3214 
	glockid_t
::
t_u£r3
: {

3215 
lockid_t
::
u£r3_t
 
u
;

3216 
	gi
.
exåa˘_u£r3
(
u
);

3217 
	go
 << 
	gu
;

3220 
	glockid_t
::
t_u£r4
: {

3221 
lockid_t
::
u£r4_t
 
u
;

3222 
	gi
.
exåa˘_u£r4
(
u
);

3223 
	go
 << 
	gu
;

3228 
o
 << "t_bad";

3231  
	go
 << ')';

3242 
	gi°ªam
&

3243 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	glockid_t
::
u£r1_t
& 
u
)

3245 
cU
, 
	gc1
, 
	gcLP¨í
, 
	gcRP¨í
;

3246 
	gi
 >> 
	gcU
 >> 
	gc1
 >> 
	gcLP¨í
 >> 
	gu
.
	gu1
 >> 
	gcRP¨í
;

3247 
w_as£π9
(
cU
 ='u' && 
c1
 ='1' && 
cLP¨í
 ='(' && 
cRP¨í
 == ')');

3248  
	gi
;

3259 
	gi°ªam
&

3260 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	glockid_t
::
u£r2_t
& 
u
)

3262 
cU
, 
	gc2
, 
	gcLP¨í
, 
	gcSï1
, 
	gcRP¨í
;

3263 
	gi
 >> 
	gcU
 >> 
	gc2
 >> 
	gcLP¨í
 >> 
	gu
.
	gu1
 >> 
	gcSï1
 >> u.
	gu2
 >> 
	gcRP¨í
;

3264 
w_as£π9
(
cU
 ='u' && 
c2
 ='2' && 
cLP¨í
 ='(' && 
cSï1
 ='.' && 
cRP¨í
 == ')');

3265  
	gi
;

3276 
	gi°ªam
&

3277 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	glockid_t
::
u£r3_t
& 
u
)

3279 
cU
, 
	gc3
, 
	gcLP¨í
, 
	gcSï1
, 
	gcSï2
, 
	gcRP¨í
;

3280 
	gi
 >> 
	gcU
 >> 
	gc3
 >> 
	gcLP¨í
 >> 
	gu
.
	gu1
 >> 
	gcSï1
 >> u.
	gu2
 >> 
	gcSï2
 >> u.
	gu3
 >> 
	gcRP¨í
;

3281 
w_as£π9
(
cU
 ='u' && 
c3
 ='3' && 
cLP¨í
 ='(' && 
cSï1
 ='.' && 
cSï2
 ='.' && 
cRP¨í
 == ')');

3282  
	gi
;

3293 
	gi°ªam
&

3294 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	glockid_t
::
u£r4_t
& 
u
)

3296 
cU
, 
	gc4
, 
	gcLP¨í
, 
	gcSï1
, 
	gcSï2
, 
	gcSï3
, 
	gcRP¨í
;

3297 
	gi
 >> 
	gcU
 >> 
	gc4
 >> 
	gcLP¨í
 >> 
	gu
.
	gu1
 >> 
	gcSï1
 >> u.
	gu2
 >> 
	gcSï2
 >> u.
	gu3
 >> 
	gcSï3
 >> u.
	gu4
 >> 
	gcRP¨í
;

3298 
w_as£π9
(
cU
 ='u' && 
c4
 ='4' && 
cLP¨í
 ='(' && 
cSï1
 == '.'

3299 && 
cSï2
 ='.' && 
cSï3
 ='.' && 
cRP¨í
 == ')');

3300  
	gi
;

3304 
uöt4_t


3305 
	glock_c‹e_m
::
	$_èbÀ_hash
(
uöt4_t
 
id
) const

3307  
id
 % 
_hèbsz
;

3308 
	}
}

3318 
	glock_m
::
	$cﬁÀ˘
–
vèbÀ_t
 & 
ªs
, 
boﬁ
 
«mes_too
)

3320  
_c‹e
->
	`cﬁÀ˘
(
ªs
, 
«mes_too
);

3321 
	}
}

3323 
	~<vèbÀ.h
>

3324 
	~<sm_vèbÀ_íum.h
>

3329 
	mlock_«me_©å
,

3330 
	mlock_mode_©å
,

3331 
	mlock_duøti⁄_©å
,

3332 
	mlock_chûdªn_©å
,

3333 
	mlock_tid_©å
,

3334 
	mlock_°©us_©å
,

3337 
	mlock_œ°


3340 c⁄° *
	glock_vèbÀ_©å_«mes
[] =

3350 
vèbÀ_«mes_öô_t
 
«mes_öô
(
lock_œ°
, 
lock_vèbÀ_©å_«mes
);

3353 
	glock_c‹e_m
::
	$cﬁÀ˘
–
vèbÀ_t
& 
v
, 
boﬁ
 
«mes_too
)

3357 
n
 = 
_ªque°s_Æloˇãd
 ;

3358 
	`w_as£π1
(
n
>=0);

3359 
found
 = 0;

3360 
≥r_buckë
 = 0;

3362 if(
«mes_too
Ë
n
++;

3367 
max_size
 = 
«mes_öô
.
	`max_size
();

3368 
max_size
 = max_size < 100 ? 100 : max_size;

3369 if(
v
.
	`öô
(
n
, 
lock_œ°
, 
max_size
))  -1;

3371 
vèbÀ_func
<
lock_ªque°_t
> 
	`f
(
v
);

3372 if(
«mes_too
Ë
f
.
	`ö£π_«mes
();

3374 i‡(
n
 > 0) {

3375 
uöt
 
h
 = 0; h < 
_hèbsz
; h++) {

3376 
	`w_as£π9
(
v
.
	`size
(Ë=
n
);

3377 
≥r_buckë
=0;

3378 
lock_hód_t
* 
lock
;

3379 
	`ACQUIRE_BUCKET_MUTEX
(
h
);

3380 
chaö_li°_i
 
	`i
(
_hèb
[
h
].
chaö
);

3381 
lock
 = 
i
.
	`√xt
();

3382 
lock
) {

3383 
	`MUTEX_ACQUIRE
(
lock
->
hód_muãx
);

3384 
lock_ªque°_t
* 
ªque°
;

3385 
lock_hód_t
::
ß„_queue_ôî©‹_t
 
	`r
(*
lock
);

3386 (
ªque°
 = 
r
.
	`√xt
())) {

3387 if(
found
 <
n
) {

3388 
	`f
(*
ªque°
);

3389 
≥r_buckë
++;

3390 
found
++;

3393 
f
.
	`back_out
(
≥r_buckë
);

3397 
	`MUTEX_RELEASE
(
lock
->
hód_muãx
);

3398 if(
found
 <
n
) {

3399 
lock
 = 
i
.
	`√xt
();

3401 
lock
 = 0;

3404 
	`RELEASE_BUCKET_MUTEX
(
h
);

3405 if(
found
 > 
n
) {

3407 if(
f
.
	`ªÆloc
()<0)  -1;

3408 
h
--;

3409 
found
 -
≥r_buckë
;

3410 
n
 = 
v
.
	`size
();

3414 
	`w_as£π9
(
found
 <
n
);

3416 
	}
}

3418 #ifde‡
__GNUG__


3419 
ãm∂©e
 
˛ass
 
	gvèbÀ_func
<
	glock_ªque°_t
>;

3423 
	glock_ªque°_t
::
	$vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
)

3425 
«mes_öô
.
	`cﬁÀ˘_«mes
(
t
);

3426 
	}
}

3431 
	glock_ªque°_t
::
	$vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 & 
t
)

3435 c⁄° 
lock_hód_t
 *
lh
 = 
	`gë_lock_hód
();

3438 
w_o°r°ªam
 
o
;

3439 
o
<< 
lh
->
«me
 <<
íds
;

3440 
t
.
	`£t_°rög
(
lock_«me_©å
, 
o
.
	`c_°r
());

3442 
t
.
	`£t_°rög
(
lock_mode_©å
, 
lock_ba£_t
::
mode_°r
[
	`mode
()]);

3443 
t
.
	`£t_°rög
(
lock_duøti⁄_©å
, 
lock_ba£_t
::
duøti⁄_°r
[
	`gë_duøti⁄
()] );

3444 
t
.
	`£t_öt
(
lock_chûdªn_©å
, 
	`num_chûdªn
());

3447 
w_o°r°ªam
 
o
;

3448 
o
 << 
	`gë_lock_öfo
()->
	`tid
(Ë<< 
íds
;

3449 
t
.
	`£t_°rög
(
lock_tid_©å
, 
o
.
	`c_°r
());

3452 c⁄° *
c
=0;

3453 
	`°©us
()) {

3454 
lock_m
::
t_gø¡ed
:

3455 
c
 = "G";

3457 
lock_m
::
t_c⁄vîtög
:

3458 
c
 = "U";

3461 
lock_m
::
t_waôög
:

3462 
c
 = "W";

3464 
lock_m
::
t_no_°©us
:

3466 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

3468 
t
.
	`£t_°rög
(
lock_°©us_©å
, 
c
);

3469 
	}
}

	@src/sm/lock_core.h

54 #i‚de‡
LOCK_CORE_H


55 
	#LOCK_CORE_H


	)

57 
	~"w_deföes.h
"

61 #ifde‡
__GNUG__


62 #¥agm®
öãrÁ˚


66 ˛as†
	cLockC‹eFunc
 {

67 
	mpublic
:

68 
vútuÆ
 ~
LockC‹eFunc
();

70 
vútuÆ
 
	$›î©‹
()(c⁄° 
x˘_t
* 
x˘
) = 0;

74 
˛ass
 
buckë_t
;

76 ˛as†
	clock_c‹e_m
 : 
public
 
lock_ba£_t
{

77 íum { 
BPB
=
CHAR_BIT
 };

79 
public
:

80 
lock_ba£_t
::
	tlmode_t
Ümode_t;

81 
lock_ba£_t
::
	tduøti⁄_t
 duration_t;

83 
NORET
 
	`lock_c‹e_m
(
uöt
 
sz
);

84 
NORET
 ~
	`lock_c‹e_m
();

86 
	`cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

88 
	$as£π_em±y
() const;

89 
	`dump
();

90 
	`dump
(
o°ªam
 &
o
);

91 
	`_dump
(
o°ªam
 &
o
);

94 
lock_hód_t
* 
	`föd_lock_hód
(

95 c⁄° 
lockid_t
& 
n
,

96 
boﬁ
 
¸óã
);

97 
public
:

98 
w_li°_t
<
	tlock_hód_t
,
	tqueue_ba£d_lock_t
> 
	tchaö_li°_t
;

99 
w_li°_i
<
	tlock_hód_t
,
	tqueue_ba£d_lock_t
> 
	tchaö_li°_i
;

101 
¥iv©e
:

102 
lock_hód_t
* 
	`_föd_lock_hód_ö_chaö
(

103 
chaö_li°_t
 &
l
,

104 c⁄° 
lockid_t
& 
n
);

106 
public
:

107 
w_rc_t
::
îrcode_t
 
	`acquúe_lock
(

108 
x˘_t
* 
xd
,

109 c⁄° 
lockid_t
& 
«me
,

110 
lock_hód_t
* 
lock
,

111 
lock_ªque°_t
** 
ªque°
,

112 
lmode_t
 
mode
,

113 
lmode_t
& 
¥ev_mode
,

114 
duøti⁄_t
 
duøti⁄
,

115 
timeout_ö_ms
 
timeout
,

116 
lmode_t
& 
ªt
);

118 
rc_t
 
	`ªÀa£_lock
(

119 
x˘_lock_öfo_t
* 
theLockInfo
,

120 c⁄° 
lockid_t
& 
«me
,

121 
lock_hód_t
* 
lock
,

122 
lock_ªque°_t
* 
ªque°
,

123 
boﬁ
 
f‹˚
);

125 
boﬁ
 
	`wakeup_waôîs
(
lock_hód_t
*& 
lock
, 
lock_ªque°_t
* 
£lf
=
NULL
);

127 
boﬁ
 
	`upgøde_ext_ªq_to_EX_if_should_‰ì
(

128 
lock_ªque°_t
* 
ªq
);

130 
rc_t
 
	`ªÀa£_duøti⁄
(

131 
x˘_lock_öfo_t
* 
theLockInfo
,

132 
duøti⁄_t
 
duøti⁄
,

133 
boﬁ
 
Æl_Àss_th™
,

134 
extid_t
* 
ext_to_‰ì
);

136 
rc_t
 
	`›í_qu¨k
(
x˘_t
* 
xd
);

137 
rc_t
 
	`˛o£_qu¨k
(

138 
x˘_t
* 
xd
,

139 
boﬁ
 
ªÀa£_locks
);

141 
lock_hód_t
* 
	`GëNewLockHódFromPoﬁ
(

142 c⁄° 
lockid_t
& 
«me
,

143 
lmode_t
 
mode
);

145 
	`FªeLockHódToPoﬁ
(
lock_hód_t
* 
theLockHód
);

147 
	e¶i_∑ª¡_cmd
 { 
RECLAIM_NO_PARENT
, 
RECLAIM_CHECK_PARENT
, 
RECLAIM_RECLAIM_PARENT
 
	}
};

148 
lock_ªque°_t
* 
¶i_ª˛aim_ªque°
÷ock_ªque°_t* &
ªq
, 
¶i_∑ª¡_cmd
 
pcmd
, 
lock_hód_t
::
my_lock
* 
lock_muãx
);

149 
boﬁ
 
¶i_övÆid©e_ªque°
(
lock_ªque°_t
* &
ªq
);

150 
¶i_ab™d⁄_ªque°
(
lock_ªque°_t
* &
ªq
, 
lock_hód_t
::
my_lock
* 
lock_muãx
);

151 
¶i_purge_öa˘ive_locks
(
x˘_lock_öfo_t
* 
theLockInfo
, 
boﬁ
 
f‹˚
=
Ál£
);

158 
lock_ˇche_ñem_t
* 
£¨ch_ˇche
(

159 
x˘_lock_öfo_t
* 
theLockInfo
,

160 
lockid_t
 c⁄° &
«me
,

161 
boﬁ
 
ª˛aim
=
Ál£
);

163 
put_ö_ˇche
(
x˘_lock_öfo_t
* 
theLockInfo
,

164 
lockid_t
 c⁄° &
«me
,

165 
lock_mode_t
 
mode
,

166 
lock_ªque°_t
* 
ªq
);

167 
com∑˘_ˇche
(
x˘_lock_öfo_t
* 
theLockInfo
,

168 
lockid_t
 c⁄° &
«me
 );

170 
	g¥iv©e
:

171 
uöt4_t
 
	$_èbÀ_hash
(
uöt4_t
) const;

172 
w_rc_t
::
îrcode_t
 
	`_check_dódlock
(
x˘_t
* 
xd
, 
boﬁ
 
fú°_time
,

173 
lock_ªque°_t
 *
myªq
);

174 
	`_upd©e_ˇche
(
x˘_lock_öfo_t
 *
theLockInfo
, c⁄° 
lockid_t
& 
«me
, 
lmode_t
 
m
);

175 
boﬁ
 
	`_maybe_öhîô
(
lock_ªque°_t
* 
ªque°
, boﬁ 
is_™˚°‹
=
Ál£
);

178 
rc_t
 
	`_ªÀa£_lock
(
lock_ªque°_t
* 
ªque°
, 
boﬁ
 
f‹˚
);

180 
	#DEBUG_LOCK_HASH
 0

	)

181 #i‡
DEBUG_LOCK_HASH


182 
	$compuã_lock_hash_numbîs
() const;

183 
	$dump_lock_hash_numbîs
() const;

185 
buckë_t
* 
_hèb
;

186 
uöt4_t
 
_hèbsz
;

187 
_ªque°s_Æloˇãd
;

189 
	}
};

192 
	#ACQUIRE_BUCKET_MUTEX
(
i
Ë
	`MUTEX_ACQUIRE
(
_hèb
[i].
muãx
);

	)

193 
	#RELEASE_BUCKET_MUTEX
(
i
Ë
	`MUTEX_RELEASE
(
_hèb
[i].
muãx
);

	)

194 
	#BUCKET_MUTEX_IS_MINE
(
i
Ë
	`w_as£π3
(
	`MUTEX_IS_MINE
(
_hèb
[i].
muãx
));

	)

	@src/sm/lock_s.h

53 #i‚de‡
LOCK_S_H


54 
	#LOCK_S_H


	)

56 
	~"w_deföes.h
"

60 
	~<w_hashög.h
>

62 #ifde‡
__GNUG__


63 #¥agm®
öãrÁ˚


67 ˛as†
	clock_ba£_t
 : 
public
 
smÀvñ_1
 {

68 
public
:

71 
	e°©us_t
 {

72 
t_no_°©us
 = 0,

73 
	mt_gø¡ed
 = 1,

74 
	mt_c⁄vîtög
 = 2,

75 
	mt_waôög
 = 4

78 
	gsmÀvñ_0
::
	tlock_mode_t
 
	tlmode_t
;

80 
	gsmÀvñ_0
::
	tlock_duøti⁄_t
 
	tduøti⁄_t
;

83 
	gMIN_MODE
 = 
NL
, 
	gMAX_MODE
 = 
EX
,

84 
	gNUM_MODES
 = 
MAX_MODE
 - 
MIN_MODE
 + 1

87 c⁄° * c⁄° 
	gmode_°r
[
NUM_MODES
];

88 c⁄° * c⁄° 
	gduøti⁄_°r
[
t_num_duøti⁄s
];

89 c⁄° 
boﬁ
 
	gcom∑t
[
NUM_MODES
][NUM_MODES];

90 c⁄° 
lmode_t
 
	gsu¥
[
NUM_MODES
][NUM_MODES];

94 #i‚de‡
LOCK_S


215 ˛as†
	clockid_t
 {

216 
	mpublic
:

226 íum { 
NUMNODES
 = 6 };

228 íum { 
	gNUMLEVELS
 = 4 };

231 
	e«me_•a˚_t
 {

232 
	gt_bad
 = 10,

233 
	gt_vﬁ
 = 0,

234 
	gt_°‹e
 = 1,

235 
	gt_∑ge
 = 2,

236 
	gt_kvl
 = 3,

237 
	gt_ªc‹d
 = 4,

238 
	gt_exã¡
 = 5,

239 
	gt_u£r1
 = 6,

240 
	gt_u£r2
 = 7,

241 
	gt_u£r3
 = 8,

242 
	gt_u£r4
 = 9

245 c⁄° 
	gˇched_gønuœrôy
 = 
t_∑ge
;

247 
uöt4_t
 
	t∑ge_bôs_t
;

250 
	su£r1_t
 {

251 
uöt2_t
 
	gu1
;

252 
u£r1_t
(Ë: 
u1
(0) {}

253 
u£r1_t
(
uöt2_t
 
v1
Ë: 
u1
(v1) {}

257 
	gu£r2_t
 : 
public
 
u£r1_t
 {

258 
uöt4_t
 
u2
;

259 
u£r2_t
(Ë: 
u2
(0) {}

260 
u£r2_t
(
uöt2_t
 
v1
, 
uöt4_t
 
v2
): 
u£r1_t
(v1), 
u2
(v2) {}

264 
	gu£r3_t
 : 
public
 
u£r2_t
 {

265 
uöt4_t
 
u3
;

266 
u£r3_t
(Ë: 
u3
(0) {}

267 
u£r3_t
(
uöt2_t
 
v1
, 
uöt4_t
 
v2
, uöt4_à
v3
)

268 : 
u£r2_t
(
v1
, 
v2
), 
u3
(
v3
) {}

272 
	gu£r4_t
 : 
public
 
u£r3_t
 {

273 
uöt4_t
 
u4
;

274 
u£r4_t
(Ë: 
u4
(0) {}

275 
u£r4_t
(
uöt2_t
 
v1
, 
uöt4_t
 
v2
, uöt4_à
v3
, uöt4_à
v4
)

276 : 
u£r3_t
(
v1
, 
v2
, 
v3
), 
u4
(
v4
) {}

279 íum { 
	g∑geWödex
=2, 
	g¶ŸWödex
=3, 
	gu£r4Wödex
=3 };

280 íum { 
	g∑geSödex
=4, 
	g¶ŸSödex
=6, 
	gu£r4Södex
=6 };

282 
	g¥iv©e
:

285 
w_ba£_t
::
uöt8_t
 
l
[2];

288 
	gw_ba£_t
::
uöt4_t
 
w
[4];

293 
	gw_ba£_t
::
uöt2_t
 
s
[8];

303 
	gpublic
:

305 
boﬁ
 
›î©‹
<(
lockid_t
 c⁄° &
p
) const;

307 
boﬁ
 
	g›î©‹
==(c⁄° 
lockid_t
& 
p
) const;

309 
boﬁ
 
	g›î©‹
!=(c⁄° 
lockid_t
& 
p
) const;

310 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
& 
	gi
);

311 
	gpublic
:

313 
uöt4_t
 
	$hash
() const;

315 
	`zîo
();

317 
¥iv©e
:

318 
w_hashög
::
uhash
 
lockhashfunc
;

323 
public
:

325 
«me_•a˚_t
 
	$l•a˚
() const;

326 
¥iv©e
:

327 
	`£t_l•a˚
(
lockid_t
::
«me_•a˚_t
 
vÆue
);

328 
uöt1_t
 
	$l•a˚_bôs
() const;

333 
public
:

335 
vid_t
 
	$vid
() const;

336 
¥iv©e
:

337 
	`£t_vid
(c⁄° 
vid_t
 & 
v
);

338 
uöt2_t
 
	$vid_bôs
() const;

343 
public
:

345 c⁄° 
¢um_t
& 
	$°‹e
() const;

346 
¥iv©e
:

347 
	`£t_¢um
(c⁄° 
¢um_t
 & 
s
);

348 
	`£t_°‹e
(c⁄° 
°id_t
 & 
s
);

349 
uöt4_t
 
	$°‹e_bôs
() const;

354 
public
:

356 c⁄° 
exäum_t
& 
	$exã¡
() const;

357 
¥iv©e
:

358 
	`£t_exã¡
(c⁄° 
exäum_t
 & 
e
);

359 
uöt4_t
 
	$exã¡_bôs
() const;

364 
public
:

366 c⁄° 
shpid_t
& 
	$∑ge
() const;

367 
¥iv©e
:

368 
	`£t_∑ge
(c⁄° 
shpid_t
 & 
p
);

369 
uöt4_t
 
	$∑ge_bôs
() const ;

370 
	`£t_∑ge_bôs
(
lockid_t
::
∑ge_bôs_t
);

374 
public
:

376 
¶Ÿid_t
 
	$¶Ÿ
() const;

377 
¥iv©e
:

378 
	`£t_¶Ÿ
(c⁄° 
¶Ÿid_t
 & 
e
);

379 
uöt2_t
 
	$¶Ÿ_bôs
() const;

380 
uöt4_t
 
	$¶Ÿ_kvl_bôs
() const;

385 
public
:

387 
uöt2_t
 
	$u1
() const;

388 
¥iv©e
:

389 
	`£t_u1
(
uöt2_t
 
i
);

394 
public
:

396 
uöt4_t
 
	$u2
() const;

397 
¥iv©e
:

398 
	`£t_u2
(
uöt4_t
 
i
);

403 
public
:

405 
uöt4_t
 
	$u3
() const;

406 
¥iv©e
:

407 
	`£t_u3
(
uöt4_t
 
i
);

412 
public
:

414 
uöt4_t
 
	$u4
() const;

415 
¥iv©e
:

416 
	`£t_u4
(
uöt4_t
 
i
);

418 
public
:

471 
	`£t_ext_has_∑ge_Æloc
(
boﬁ
 
vÆue
);

477 
boﬁ
 
	$ext_has_∑ge_Æloc
() const ;

480 
NORET
 
	`lockid_t
() ;

482 
NORET
 
	`lockid_t
(c⁄° 
vid_t
& 
vid
);

484 
NORET
 
	`lockid_t
(c⁄° 
extid_t
& 
extid
);

486 
NORET
 
	`lockid_t
(c⁄° 
°id_t
& 
°id
);

488 
NORET
 
	`lockid_t
(c⁄° 
Õid_t
& 
Õid
);

490 
NORET
 
	`lockid_t
(c⁄° 
rid_t
& 
rid
);

492 
NORET
 
	`lockid_t
(c⁄° 
kvl_t
& 
kvl
);

494 
NORET
 
	`lockid_t
(c⁄° 
lockid_t
& 
i
);

496 
NORET
 
	`lockid_t
(c⁄° 
u£r1_t
& 
u
);

498 
NORET
 
	`lockid_t
(c⁄° 
u£r2_t
& 
u
);

500 
NORET
 
	`lockid_t
(c⁄° 
u£r3_t
& 
u
);

502 
NORET
 
	`lockid_t
(c⁄° 
u£r4_t
& 
u
);

505 
	$exåa˘_exã¡
(
extid_t
 &
e
) const;

507 
	$exåa˘_°id
(
°id_t
 &
s
) const;

509 
	$exåa˘_Õid
(
Õid_t
 &
p
) const;

511 
	$exåa˘_rid
(
rid_t
 &
r
) const;

513 
	$exåa˘_kvl
(
kvl_t
 &
k
) const;

515 
	$exåa˘_u£r1
(
u£r1_t
 &
u
) const;

517 
	$exåa˘_u£r2
(
u£r2_t
 &
u
) const;

519 
	$exåa˘_u£r3
(
u£r3_t
 &
u
) const;

521 
	$exåa˘_u£r4
(
u£r4_t
 &
u
) const;

524 
boﬁ
 
	$is_u£r_lock
() const;

531 
	`åunˇã
(
«me_•a˚_t
 
•a˚
);

534 
lockid_t
& 
›î©‹
=(c⁄°Üockid_t& 
i
);

536 
	}
};

540 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r1_t
& 
u
);

541 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r2_t
& 
u
);

542 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r3_t
& 
u
);

543 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r4_t
& 
u
);

545 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	go
, 
	glockid_t
::
u£r1_t
& 
u
);

546 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	go
, 
	glockid_t
::
u£r2_t
& 
u
);

547 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	go
, 
	glockid_t
::
u£r3_t
& 
u
);

548 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	go
, 
	glockid_t
::
u£r4_t
& 
u
);

552 #i‡
W_DEBUG_LEVEL
>0

554 
	~"lock_s_ölöe.h
"

558 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(c⁄° 
lockid_t
& 
id
)

560  
id
.
	`hash
();

561 
	}
}

	@src/sm/lock_s_inline.h

53 #i‚de‡
LOCK_S_ölöe_H


54 
	#LOCK_S_ölöe_H


	)

56 
	~"w_deföes.h
"

72 #i‡
W_DEBUG_LEVEL
 > 0

74 
	#ölöe


	)

77 
	#ölöe
 
ölöe


	)

80 
ölöe


81 
uöt1_t


82 
	glockid_t
::
	$l•a˚_bôs
() const

85  (
s
[0] >> 8);

86 
	}
}

87 
ölöe


88 
	glockid_t
::
«me_•a˚_t


89 
lockid_t
::
	$l•a˚
() const

91  (
lockid_t
::
«me_•a˚_t
Ë
	`l•a˚_bôs
();

92 
	}
}

94 
ölöe


96 
	glockid_t
::
	$£t_l•a˚
(
lockid_t
::
«me_•a˚_t
 
vÆue
)

99 
uöt1_t
 
low_byã
 = 
s
[0] & 0xff;

100 
	`w_as£π9
((
low_byã
 == 1) || (low_byte == 0));

101 
s
[0] = (
vÆue
 << 8Ë| 
low_byã
;

102 
	}
}

104 
ölöe


105 
uöt2_t


106 
	glockid_t
::
	$¶Ÿ_bôs
() const

108  
s
[
¶ŸSödex
];

109 
	}
}

111 
ölöe


112 
uöt4_t


113 
	glockid_t
::
	$¶Ÿ_kvl_bôs
() const

115  
w
[
¶ŸWödex
];

116 
	}
}

118 
ölöe


119 
¶Ÿid_t


120 
	glockid_t
::
	$¶Ÿ
() const

122 
	`w_as£π9
((
s
[0]&0xff) == 0);

123  
	`¶Ÿid_t
(
	`¶Ÿ_bôs
()) ;

124 
	}
}

126 
ölöe


128 
	glockid_t
::
	$£t_¶Ÿ
(c⁄° 
¶Ÿid_t
 & 
e
)

130 
	`w_as£π9
((
s
[0]&0xff) == 0);

131 
	`w_as£π9
((
¶Ÿid_t
Ë=(
s
[
¶ŸSödex
]));

132 
w
[
¶ŸWödex
] = 0;

133 
s
[
¶ŸSödex
] = 
e
;

134 
	}
}

136 
ölöe


137 
	glockid_t
::
∑ge_bôs_t


138 
lockid_t
::
	$∑ge_bôs
() const

140 
	`w_as£π9
((
shpid_t
Ë=(
w
[
∑geWödex
]));

141 
	`w_as£π9
((
uöt4_t
Ë=(
w
[
∑geWödex
]));

142  
w
[
∑geWödex
];

143 
	}
}

145 
ölöe


147 
	glockid_t
::
	$£t_∑ge_bôs
(
lockid_t
::
∑ge_bôs_t
 
bôs
)

149 
	`DBG
(<<"lockid_t::£t_∑ge_bôs(Ë" << "bôs" << 
bôs
);

150 
	`w_as£π9
((
shpid_t
Ë=(
w
[
∑geWödex
]));

151 
	`w_as£π9
((
∑ge_bôs_t
Ë=(
w
[
∑geWödex
]));

152 
w
[
∑geWödex
] = 
bôs
;

153 
	}
}

155 
ölöe


156 c⁄° 
	gshpid_t
&

157 
	glockid_t
::
	$∑ge
() const

159 
	`w_as£π9
(
	`l•a˚
(Ë!
t_exã¡
);

160 
	`w_as£π9
((
s
[0]&0xff) == 0);

161 
	`w_as£π9
((
shpid_t
Ë=(
w
[
∑geWödex
]));

162  *(
shpid_t
 *Ë(&
w
[
∑geWödex
]);

164 
	}
}

166 
ölöe


168 
	glockid_t
::
	$£t_∑ge
(c⁄° 
shpid_t
 & 
p
)

170 
	`w_as£π9
(
	`l•a˚
(Ë!
t_exã¡
);

171 
	`w_as£π9
((
s
[0]&0xff) == 0);

172 
	`£t_∑ge_bôs
((
∑ge_bôs_t
)
p
);

173 
	}
}

175 
ölöe


176 
vid_t


177 
	glockid_t
::
	$vid
() const

179  (
vid_t
Ë
s
[1];

180 
	}
}

182 
ölöe


184 
	glockid_t
::
	$£t_vid
(c⁄° 
vid_t
 & 
v
)

186 
	`w_as£π9
((
vid_t
Ë=(
s
[1]));

187 
s
[1] = (
uöt2_t
Ë
v
.
vﬁ
;

188 
	}
}

190 
ölöe


191 
uöt2_t


192 
	glockid_t
::
	$vid_bôs
() const

194  
s
[1];

195 
	}
}

197 
ölöe


198 c⁄° 
	g¢um_t
&

199 
	glockid_t
::
	$°‹e
() const

201 
	`w_as£π9
((
¢um_t
Ë=(
w
[1]));

202 
	`w_as£π9
(
	`l•a˚
(Ë!
t_exã¡
);

203 
	`w_as£π9
((
s
[0]&0xff) == 0);

204  *(
¢um_t
 *Ë(&
w
[1]);

205 
	}
}

207 
ölöe


209 
	glockid_t
::
	$£t_¢um
(c⁄° 
¢um_t
 & 
_s
)

211 
	`w_as£π9
((
¢um_t
Ë=(
w
[1]));

212 
	`w_as£π9
(
	`l•a˚
(Ë!
t_exã¡
);

213 
	`w_as£π9
((
this
->
s
[0]&0xff) == 0);

214 
w
[1] = (
uöt4_t
Ë
_s
;

215 
	}
}

217 
ölöe


219 
	glockid_t
::
	$£t_°‹e
(c⁄° 
°id_t
 & 
_s
)

221 
	`w_as£π9
(
	`l•a˚
(Ë!
t_exã¡
);

222 
	`w_as£π9
((
this
->
s
[0]&0xff) == 0);

223 
	`£t_¢um
(
_s
.
°‹e
);

224 
	`£t_vid
(
_s
.
vﬁ
);

225 
	}
}

227 
ölöe


228 
uöt4_t


229 
	glockid_t
::
	$°‹e_bôs
() const

231 
	`w_as£π9
((
uöt4_t
Ë=(
w
[1]));

232 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

234  
w
[1];

235 
	}
}

237 
ölöe


238 c⁄° 
	gexäum_t
&

239 
	glockid_t
::
	$exã¡
() const

241 
	`w_as£π9
((
exäum_t
Ë=(
w
[1]));

242 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

243 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

244  *(
exäum_t
 *Ë(&
w
[1]);

245 
	}
}

247 
ölöe


249 
	glockid_t
::
	$£t_exã¡
(c⁄° 
exäum_t
 & 
e
)

251 
	`w_as£π9
((
exäum_t
Ë=(
w
[1]));

252 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

253 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

254 
w
[1] = (
uöt4_t
Ë
e
;

255 
	}
}

257 
ölöe


258 
uöt4_t


259 
	glockid_t
::
	$exã¡_bôs
() const

261 
	`w_as£π9
((
uöt4_t
Ë=(
w
[1]));

262 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

263 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

264  
w
[1];

265 
	}
}

267 
ölöe


269 
	glockid_t
::
	$£t_ext_has_∑ge_Æloc
(
boﬁ
 
vÆue
)

272 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

273 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

274 
	`DBG
(<<"s[0] = " << 
s
[0] << " sëÜow byãÅÿ" << 
vÆue
);

275 
uöt2_t
 
high_byã
 = 
s
[0] & 0xff00;

276 if(
vÆue
) {

277 
s
[0] = 
high_byã
 | 0x1;

279 
s
[0] = 
high_byã
 | 0x0;

281 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

282 
	`DBG
(<<"s[0] = " << ()
s
[0]);

283 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

284 
	}
}

286 
ölöe


287 
boﬁ


288 
	glockid_t
::
	$ext_has_∑ge_Æloc
() const

290 
	`w_as£π9
(
	`l•a˚
(Ë=
t_exã¡
);

291 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

292  ((
s
[0] & 0xff) != 0);

293 
	}
}

295 
ölöe


297 
	glockid_t
::
	$exåa˘_exã¡
(
extid_t
 &
e
) const

299 
	`w_as£π9
–
	`l•a˚
(Ë=
t_exã¡
);

300 
	`w_as£π9
(((
s
[0]&0xff) == 1) || ((s[0]&0xff) == 0));

301 
e
.
vﬁ
 = 
	`vid
();

302 
e
.
ext
 = 
	`exã¡
();

303 
	}
}

305 
ölöe


307 
	glockid_t
::
	$exåa˘_°id
(
°id_t
 &
_s
) const

309 
	`w_as£π9
(

310 
	`l•a˚
(Ë=
t_°‹e
 ||

311 
	`l•a˚
(Ë=
t_∑ge
 ||

312 
	`l•a˚
(Ë=
t_kvl
 ||

313 
	`l•a˚
(Ë=
t_ªc‹d
);

314 
	`w_as£π9
((
this
->
s
[0]&0xff) == 0);

315 
_s
.
vﬁ
 = 
	`vid
();

316 
_s
.
°‹e
 = 
	`°‹e
();

317 
	}
}

319 
ölöe


321 
	glockid_t
::
	$exåa˘_Õid
(
Õid_t
 &
p
) const

323 
	`w_as£π9
(
	`l•a˚
(Ë=
t_∑ge
 ||Ü•a˚(Ë=
t_ªc‹d
);

324 
	`w_as£π9
((
s
[0]&0xff) == 0);

325 
	`exåa˘_°id
(
p
.
_°id
);

326 
p
.
∑ge
 = 
	`∑ge
();

327 
	}
}

329 
ölöe


331 
	glockid_t
::
	$exåa˘_rid
(
rid_t
 &
r
) const

333 
	`w_as£π9
(
	`l•a˚
(Ë=
t_ªc‹d
);

334 
	`w_as£π9
((
s
[0]&0xff) == 0);

335 
	`exåa˘_Õid
(
r
.
pid
);

336 
r
.
¶Ÿ
 = 
	`¶Ÿ
();

337 
	}
}

339 
ölöe


341 
	glockid_t
::
	$exåa˘_kvl
(
kvl_t
 &
k
) const

343 
	`w_as£π9
((
s
[0]&0xff) == 0);

344 
	`w_as£π9
(
	`l•a˚
(Ë=
t_kvl
);

345 
	`exåa˘_°id
(
k
.
°id
);

346 
k
.
h
 = 
w
[
∑geWödex
];

347 
k
.
g
 = 
w
[
¶ŸWödex
];

348 
	}
}

350 
ölöe


352 
	glockid_t
::
	$exåa˘_u£r1
(
u£r1_t
 &
u
) const

354 
	`w_as£π9
((
s
[0]&0xff) == 0);

355 
	`w_as£π9
(

356 
	`l•a˚
(Ë=
t_u£r1
 ||

357 
	`l•a˚
(Ë=
t_u£r2
 ||

358 
	`l•a˚
(Ë=
t_u£r3
 ||

359 
	`l•a˚
(Ë=
t_u£r4
);

360 
u
.
u1
 = 
s
[1];

361 
	}
}

363 
ölöe


365 
	glockid_t
::
	$exåa˘_u£r2
(
u£r2_t
 &
u
) const

367 
	`w_as£π9
(

368 
	`l•a˚
(Ë=
t_u£r2
 ||

369 
	`l•a˚
(Ë=
t_u£r3
 ||

370 
	`l•a˚
(Ë=
t_u£r4
);

371 
	`exåa˘_u£r1
(
u
);

372 
u
.
u2
 = 
w
[1];

373 
	}
}

375 
ölöe


377 
	glockid_t
::
	$exåa˘_u£r3
(
u£r3_t
 &
u
) const

379 
	`w_as£π9
(

380 
	`l•a˚
(Ë=
t_u£r3
 ||

381 
	`l•a˚
(Ë=
t_u£r4
);

382 
	`exåa˘_u£r2
(
u
);

383 
u
.
u3
 = 
w
[
∑geWödex
];

384 
	}
}

386 
ölöe


388 
	glockid_t
::
	$exåa˘_u£r4
(
u£r4_t
 &
u
) const

390 
	`w_as£π9
(
	`l•a˚
(Ë=
t_u£r4
);

391 
	`exåa˘_u£r3
(
u
);

392 
u
.
u4
 = 
w
[
u£r4Wödex
];

393 
	}
}

395 
ölöe


396 
boﬁ


397 
	glockid_t
::
	$is_u£r_lock
() const

399  (
	`l•a˚
(Ë>
t_u£r1
 &&Ü•a˚(Ë<
t_u£r4
);

400 
	}
}

402 
ölöe


403 
uöt2_t


404 
	glockid_t
::
	$u1
() const

406  
s
[1];

407 
	}
}

409 
ölöe


411 
	glockid_t
::
	$£t_u1
(
uöt2_t
 
u
)

413 
s
[1] = 
u
;

414 
	}
}

416 
ölöe


417 
uöt4_t


418 
	glockid_t
::
	$u2
() const

420  
w
[1];

421 
	}
}

423 
ölöe


425 
	glockid_t
::
	$£t_u2
(
uöt4_t
 
u
)

427 
w
[1] = 
u
;

428 
	}
}

430 
ölöe


431 
uöt4_t


432 
	glockid_t
::
	$u3
() const

434  
w
[
∑geWödex
];

435 
	}
}

437 
ölöe


439 
	glockid_t
::
	$£t_u3
(
uöt4_t
 
u
)

441 
w
[
∑geWödex
] = 
u
;

442 
	}
}

444 
ölöe


445 
uöt4_t


446 
	glockid_t
::
	$u4
() const

448  
w
[
u£r4Wödex
];

449 
	}
}

451 
ölöe


453 
	glockid_t
::
	$£t_u4
(
uöt4_t
 
u
)

455 
w
[
u£r4Wödex
] = 
u
;

456 
	}
}

460 
ölöe
 

461 
	glockid_t
::
	$zîo
()

466 
s
[0] = (
t_bad
 << 8);

468 
	`£t_vid
(0);

469 
	`£t_¢um
(0);

470 
	`£t_∑ge
(0);

472 
w
[
u£r4Wödex
] = 0;

473 
	}
}

476 
ölöe
 
NORET


477 
	glockid_t
::
	$lockid_t
()

479 
	`zîo
();

480 
	}
}

482 
ölöe
 
NORET


483 
	glockid_t
::
	$lockid_t
(c⁄° 
vid_t
& 
vid
)

485 
	`zîo
();

486 
	`£t_l•a˚
(
t_vﬁ
);

487 
	`£t_vid
(
vid
);

488 
	}
}

490 
ölöe
 
NORET


491 
	glockid_t
::
	$lockid_t
(c⁄° 
extid_t
& 
extid
)

493 
	`zîo
();

494 
	`£t_l•a˚
(
t_exã¡
);

495 
	`£t_vid
(
extid
.
vﬁ
);

496 
	`£t_exã¡
(
extid
.
ext
);

497 
	}
}

499 
ölöe
 
NORET


500 
	glockid_t
::
	$lockid_t
(c⁄° 
°id_t
& 
°id
)

502 
	`zîo
();

503 
	`£t_l•a˚
(
t_°‹e
);

504 
	`£t_vid
(
°id
.
vﬁ
);

505 
	`£t_¢um
(
°id
.
°‹e
);

506 
	}
}

508 
ölöe
 
NORET


509 
	glockid_t
::
	$lockid_t
(c⁄° 
Õid_t
& 
Õid
)

511 
	`zîo
();

512 
	`£t_l•a˚
(
t_∑ge
);

513 
	`£t_vid
(
Õid
.
	`vﬁ
());

514 
	`£t_¢um
(
Õid
.
	`°‹e
());

515 
	`£t_∑ge
(
Õid
.
∑ge
);

516 
	}
}

518 
ölöe
 
NORET


519 
	glockid_t
::
	$lockid_t
(c⁄° 
rid_t
& 
rid
)

521 
	`zîo
();

522 
	`£t_l•a˚
(
t_ªc‹d
);

529 
	`£t_vid
(
rid
.
pid
.
	`vﬁ
());

530 
	`£t_¢um
(
rid
.
pid
.
	`°‹e
());

531 
	`£t_∑ge
(
rid
.
pid
.
∑ge
);

532 
	`£t_¶Ÿ
(
rid
.
¶Ÿ
);

533 
	}
}

535 
ölöe
 
NORET


536 
	glockid_t
::
	$lockid_t
(c⁄° 
kvl_t
& 
kvl
)

538 
	`zîo
();

539 
	`£t_l•a˚
(
t_kvl
);

540 
	`w_as£π9
((
kvl_t
Ë=(
w
[1])*2 + (
°id_t
));

541 
	`£t_°‹e
(
kvl
.
°id
);

543 
∑ge_bôs_t
 
bôs
 = 
kvl
.
h
;

544 
	`£t_∑ge_bôs
(
bôs
);

545 
w
[
¶ŸWödex
] = 
kvl
.
g
;

546 
	}
}

548 
ölöe
 
NORET


549 
	glockid_t
::
	$lockid_t
(c⁄° 
u£r1_t
& 
u
)

551 
	`zîo
();

552 
	`£t_l•a˚
(
t_u£r1
);

553 
s
[1] = 
u
.
u1
;

554 
	}
}

556 
ölöe
 
NORET


557 
	glockid_t
::
	$lockid_t
(c⁄° 
u£r2_t
& 
u
)

559 
	`zîo
();

560 
	`£t_l•a˚
(
t_u£r2
);

561 
s
[1] = 
u
.
u1
;

562 
w
[1] = 
u
.
u2
;

563 
	}
}

565 
ölöe
 
NORET


566 
	glockid_t
::
	$lockid_t
(c⁄° 
u£r3_t
& 
u
)

568 
	`zîo
();

569 
	`£t_l•a˚
(
t_u£r3
);

570 
s
[1] = 
u
.
u1
;

571 
w
[1] = 
u
.
u2
;

572 
w
[
∑geWödex
] = 
u
.
u3
;

573 
	}
}

575 
ölöe
 
NORET


576 
	glockid_t
::
	$lockid_t
(c⁄° 
u£r4_t
& 
u
)

578 
	`zîo
();

579 
	`£t_l•a˚
(
t_u£r4
);

580 
s
[1] = 
u
.
u1
;

581 
w
[1] = 
u
.
u2
;

583 
∑ge_bôs_t
 
tmp
 = 
u
.
u3
;

584 
	`£t_∑ge_bôs
(
tmp
);

586 
w
[
¶ŸWödex
] = 
u
.
u4
;

587 
	}
}

590 
ölöe
 
	glockid_t
&

591 
	glockid_t
::
›î©‹
=(c⁄° 
lockid_t
& 
i
)

598 
w
[0] = 
i
.w[0];

599 
	gw
[1] = 
i
.
w
[1];

600 
£t_∑ge_bôs
(
i
.
∑ge_bôs
());

601 
	gw
[
¶ŸWödex
] = 
i
.
w
[slotWindex];

602  *
	gthis
;

605 
	#COMPARE_LT
(
a
, 
b
Ë{ if◊ < bË 
åue
; if(b <áË 
Ál£
; }

	)

606 
ölöe
 
boﬁ


607 
	glockid_t
::
›î©‹
<(
lockid_t
 c⁄° &
lid
) const

610 
COMPARE_LT
(
l•a˚_bôs
(), 
lid
.lspace_bits());

611 
COMPARE_LT
(
vid_bôs
(), 
lid
.vid_bits());

612 
COMPARE_LT
(
°‹e_bôs
(), 
lid
.store_bits());

613 
COMPARE_LT
(
∑ge_bôs
(), 
lid
.page_bits());

614 
COMPARE_LT
(
¶Ÿ_kvl_bôs
(), 
lid
.slot_kvl_bits());

615  
	gÁl£
;

618 
ölöe
 
boﬁ


619 
	glockid_t
::
›î©‹
==(c⁄° 
lockid_t
& 
lid
) const

623  !((
l•a˚_bôs
(Ë^ 
lid
.lspace_bits()) |

624 (
vid_bôs
(Ë^ 
lid
.vid_bits()) |

625 (
°‹e_bôs
(Ë^ 
lid
.store_bits()) |

626 (
∑ge_bôs
(Ë^ 
lid
.page_bits()) |

627 (
¶Ÿ_kvl_bôs
(Ë^ 
lid
.slot_kvl_bits()) );

640 
ölöe
 
NORET


641 
	glockid_t
::
	$lockid_t
(c⁄° 
lockid_t
& 
i
)

643 (Ë
this
->
›î©‹
=(
i
);

644 
	}
}

646 
ölöe
 
boﬁ


647 
	glockid_t
::
›î©‹
!=(c⁄° 
lockid_t
& 
lid
) const

649  ! (*
this
 =
lid
);

658 
ölöe
 
uöt4_t


659 
	glockid_t
::
	$hash
() const

666  
	`uöt4_t
(

667 
	`lockhashfunc
(
	`l•a˚_bôs
()) +

668 
	`lockhashfunc
(
w
[1]) +

669 
	`lockhashfunc
(
l
[1]));

671 
	}
}

674 
ölöe


675 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r1_t
& 
u
)

677  
o
 << "u1(" << 
u
.
u1
 << ")";

680 
ölöe


681 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r2_t
& 
u
)

683  
o
 << "u2(" << 
u
.
u1
 << "," << u.
u2
 << ")";

686 
ölöe


687 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r3_t
& 
u
)

689  
o
 << "u3(" << 
u
.
u1
 << "," << u.
u2
 << "," << u.
u3
 << ")";

692 
ölöe


693 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glockid_t
::
u£r4_t
& 
u
)

695  
o
 << "u4(" << 
u
.
u1
 << "," << u.
u2
 << "," << u.
u3
 << "," << u.
u4
 << ")";

	@src/sm/lock_x.h

54 #i‚de‡
LOCK_X_H


55 
	#LOCK_X_H


	)

57 
	~"w_deföes.h
"

102 #ifde‡
__GNUG__


103 #¥agm®
öãrÁ˚


106 
˛ass
 
	glock_hód_t
;

107 
˛ass
 
	gx˘_im∂
;

108 
˛ass
 
	gx˘_lock_öfo_t
;

116 
	e¶i_°©us_t
 {

117 
	m¶i_nŸ_öhîôed
,

118 
	m¶i_a˘ive
,

120 
	m¶i_öa˘ive
,

122 
	m¶i_övÆid©ög
,

123 
	m¶i_övÆid
,

124 
	m¶i_ab™d⁄ed
,

128 
	#ªque°_li°_t
 
w_li°_t
<
lock_ªque°_t
,
queue_ba£d_lock_t
>

	)

130 
	#ªque°_li°_i
 
w_li°_i
<
lock_ªque°_t
,
queue_ba£d_lock_t
>

	)

147 ˛as†
	clock_ªque°_t
 : 
public
 
w_ba£_t
 {

148 
public
:

149 
‰õnd
 
˛ass
 
lock_c‹e_m
;

150 
	mlock_ba£_t
::
	tlmode_t
Ümode_t;

151 
	mlock_ba£_t
::
	tduøti⁄_t
 duration_t;

152 
	mlock_ba£_t
::
	t°©us_t
 status_t;

153 
	m¥iv©e
:

154 
lock_ba£_t
::
°©us_t
 
_°©e
;

155 
lmode_t
 
	m_mode
;

156 
lmode_t
 
	m_c⁄vît_mode
;

157 
x˘_lock_öfo_t
* 
	m_lock_öfo
;

158 
smthªad_t
* 
	m_thªad
;

159 
	m_ªf_cou¡
;

160 
duøti⁄_t
 
	m_duøti⁄
;

161 
öt4_t
 
	m_num_chûdªn
;

164 
	mpublic
:

166 
smthªad_t
* 
	$thªad
(Ëc⁄° {  
_thªad
;}

169 
	$£t_thªad
(
smthªad_t
 *
t
Ë{ 
_thªad
Ò;
	}
}

172 
duøti⁄_t
 
	$gë_duøti⁄
(Ëc⁄° {  
_duøti⁄
; 
	}
}

175 
	$£t_duøti⁄
(
duøti⁄_t
 
d
Ë{ 
_duøti⁄
=d; 
	}
}

179 
	$gë_cou¡
(Ëc⁄° {  
_ªf_cou¡
; 
	}
}

181 
	$öc_cou¡
(Ë{  ++
_ªf_cou¡
; 
	}
}

183 
	$dec_cou¡
(Ë{  --
_ªf_cou¡
; 
	}
}

184 
w_lök_t
 
	gæök
;

190 
w_lök_t
 
	gxlök
;

192 
öt4_t
 
	$num_chûdªn
(Ëc⁄° {  
_num_chûdªn
;
	}
}

193 
	$£t_num_chûdªn
(
öt4_t
 
n
Ë{ 
_num_chûdªn
Ú;
	}
}

194 
öt4_t
 
	$öc_num_chûdªn
(Ë{  ++
_num_chûdªn
; 
	}
}

242 
¶i_°©us_t
 
	g_¶i_°©us
;

243 
boﬁ
 
	gkìp_me
;

245 
lock_ªque°_t
 vﬁ©ûe* 
	$vthis
(Ë{  
this
; 
	}
}

253 
¶i_°©us_t
 
	$ˇs_¶i_°©us
(
¶i_°©us_t
 
ex≥˘
, sli_°©us_à
assign
) {

254  (
¶i_°©us_t
Ë
	`©omic_ˇs_32
((*)&
_¶i_°©us
, 
ex≥˘
, 
assign
);

255 
	}
}

258 
lmode_t
 
	$c⁄vît_mode
(Ëc⁄° {  
_c⁄vît_mode
; 
	}
}

262 
	$£t_c⁄vît_mode
(
lmode_t
 
m
Ë{ 
_c⁄vît_mode
=m; 
	}
}

265 
lmode_t
 
	$mode
(Ëc⁄° {  
_mode
; 
	}
}

273 
	$£t_mode
(
lmode_t
 
m
Ë{ 
_mode
=m; 
	}
}

276 
°©us_t
 
	$°©us
(Ëc⁄° {  (
°©us_t
Ë
_°©e
; 
	}
}

283 
	$£t_°©us
(
°©us_t
 
s
Ë{ 
_°©e
 = s; 
	}
}

285 
NORET
 
lock_ªque°_t
();

287 
lock_ªque°_t
* 
öô
(

288 
x˘_t
* 
x
,

289 
lmode_t
 
m
,

290 
duøti⁄_t
 
d
);

292 
lock_ªque°_t
* 
öô
(

293 
x˘_t
* 
x
,

294 
boﬁ
 
is_qu¨k_m¨kî
);

296 
ª£t
();

298 
	gNORET
 ~
lock_ªque°_t
();

300 
vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &
t
);

301 
vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
);

303 
lock_hód_t
* 
	$gë_lock_hód
() const;

304 
x˘_lock_öfo_t
* 
	$gë_lock_öfo
(Ëc⁄° {  
_lock_öfo
; 
	}
}

306 
boﬁ
 
	$is_ª˛aimed
(
¶i_°©us_t
 
s
) {

307  
s
 < 
¶i_öa˘ive
;

308 
	}
}

309 
boﬁ
 
	$is_ª˛aimed
() {

310  
	`is_ª˛aimed
(
	`vthis
()->
_¶i_°©us
);

311 
	}
}

313 
boﬁ
 
	$is_qu¨k_m¨kî
() const;

315 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
lock_ªque°_t
& 
l
);

317 
¥iv©e
:

319 
	`lock_ªque°_t
(c⁄° 
lock_ªque°_t
 &);

320 
lock_ªque°_t
 &
›î©‹
=(constÜock_request_t &);

321 
	}
};

323 
	~"lock_ˇche.h
"

339 
	#DEF_LOCK_X_TYPE
(
N
) \

340 
	slock_x
 { \

341 
queue_ba£d_lock_t
::
	text_qnode
 
	tqnode
; \

342 
queue_ba£d_lock_t
 
muãx
; \

343 
qnode
* 
	`gë_me
() { \

344  &(
	`me
()->
gë_me
##
	`N
()); \

346 
rc_t
 
	`acquúe
() { \

347 
muãx
.
	`acquúe
(
	`gë_me
()); \

348  
RCOK
; \

350 
rc_t
 
	`ªÀa£
() { \

351 
muãx
.
	`ªÀa£
(
	`gë_me
()); \

352  
RCOK
; \

354 
boﬁ
 
	`is_möe
() { \

355  
muãx
.
	`is_möe
(
	`gë_me
()); \

357 }

	)

362 ˛as†
	cx˘_lock_öfo_t
 : 
¥iv©e
 
lock_ba£_t
 {

364 
public
:

365 
NORET
 
x˘_lock_öfo_t
();

366 
	mNORET
 ~
x˘_lock_öfo_t
();

371 
öô
(
tid_t
 c⁄° &
t
, 
lockid_t
::
«me_•a˚_t
 
l
);

372 
ª£t
();

377 
lock_ªque°_t
 * 
	$waôög_ªque°
(Ëc⁄° {  
_waô_ªque°
; }

380 
	$£t_waôög_ªque°
(
lock_ªque°_t
*
r
Ë{ 
_waô_ªque°
Ù; 
	}
}

383 
boﬁ
 
	$waôög_ªque°_is_blockög
(Ëc⁄° {  
_blockög
; 
	}
}

386 
	$£t_waôög_ªque°_is_blockög
(
boﬁ
 
b
Ë{ 
_blockög
=b; 
	}
}

389 
‰õnd
 
	go°ªam
 & 
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	gx˘_lock_öfo_t
 &
	gx
);

392 
	go°ªam
 & 
	$dump_locks
(
o°ªam
 &
out
) const;

395 
rc_t
 
	$gë_locks
(

396 
lock_mode_t
 
mode
,

397 
num¶Ÿs
,

398 
lockid_t
 * 
•a˚_l
,

399 
lock_mode_t
 * 
•a˚_m
 = 0,

400 
boﬁ
 
exã¡s
=
Ál£


404 
rc_t
 
	$gë_lock_tŸÆs
–& 
tŸÆ_EX
,

405 & 
tŸÆ_IX
,

406 & 
tŸÆ_SIX
,

407 & 
tŸÆ_exã¡
 ) const;

409 íum { 
lock_ˇche_size
 = 25
	}
};

412 
tid_t
 
	$tid
(Ëc⁄° {  
_tid
; 
	}
}

414 
	$£t_tid
(c⁄° 
tid_t
 &
t
Ë{ 
_tid
Ò; 
	}
}

418 
©omic_thªad_m≠_t
 c⁄° &
	$gë_waô_m≠
(Ëc⁄° {  
_waô_m≠
; 
	}
}

419 
	$˛ór_waô_m≠
() {

420 
_waô_m≠
.
	`lock_f‹_wrôe
();

421 
_waô_m≠
.
	`˛ór
();

422 
_waô_m≠
.
	`u∆ock_wrôî
();

423 
	}
}

424 
boﬁ
 
upd©e_waô_m≠
(
©omic_thªad_m≠_t
 c⁄° &
pm≠
);

426 
d⁄e_waôög
();

431 
	glockid_t
::
«me_•a˚_t
 
	$lock_Àvñ
(Ëc⁄° {  
_lock_Àvñ
;
	}
}

432 
	$£t_lock_Àvñ
(
lockid_t
::
«me_•a˚_t
 
l
) {

433 
_lock_Àvñ
 =
l
;
	}
}

436 
boﬁ
 
	$ö_qu¨k_sc›e
(Ëc⁄° { 
_qu¨k_m¨kî
 !0;
	}
}

438 
lock_ªque°_t
* 
	$qu¨k_m¨kî
(Ëc⁄° {  
_qu¨k_m¨kî
; 
	}
}

440 
	$£t_qu¨k_m¨kî
(
lock_ªque°_t
* 
m
Ë{ 
_qu¨k_m¨kî
=m; 
	}
}

443 
lock_ˇche_ñem_t
* 
	$£¨ch_ˇche
(c⁄° 
lockid_t
& 
«me
) {

444  
_lock_ˇche
.
	`£¨ch
(
«me
); 
	}
}

446 
boﬁ
 
	$put_ˇche
(c⁄° 
lockid_t
 &
«me
,

447 
lock_mode_t
 
mode
,

448 
lock_ªque°_t
 *
ªq
,

449 
lock_ˇche_ñem_t
 & 
vi˘im
) {

450  
_lock_ˇche
.
	`put
(
«me
, 
mode
, 
ªq
, 
vi˘im
);

451 
	}
}

452 
	$com∑˘_ˇche
(c⁄° 
lockid_t
 &
«me
) {

453 
_lock_ˇche
.
	`com∑˘
(
«me
);

454 
	}
}

457 
£t_n⁄blockög
();

458 
boﬁ
 
	$is_n⁄blockög
(Ëc⁄° {  
_noblock
; 
	}
}

460 
¥öt_¶i_li°
();

461 
	g¥iv©e
:

462 
lock_ˇche_t
<
lock_ˇche_size
,(
	glockid_t
::
ˇched_gønuœrôy
+1)> 
_lock_ˇche
;

463 
DEF_LOCK_X_TYPE
(2);

464 
	gpublic
:

466 
lock_x
 
lock_öfo_muãx
;

477 
ªque°_li°_t
 
	gmy_ªq_li°
[
t_num_duøti⁄s
];

478 
ªque°_li°_t
 
	g¶i_li°
;

480 
	g¥iv©e
:

484 
tid_t
 
_tid
;

485 
lock_ªque°_t
* 
	g_waô_ªque°
;

486 
boﬁ
 
	g_blockög
;

489 
©omic_thªad_m≠_t
 
	g_waô_m≠
;

491 
	gpublic
:

492 
boﬁ
 
_¶i_íabÀd
;

493 
boﬁ
 
	g_¶i_purged
;

494 
sdesc_ˇche_t
* 
	g_¶i_sdesc_ˇche
;

496 
	g¥iv©e
:

499 
lockid_t
::
«me_•a˚_t
 
_lock_Àvñ
;

502 
lock_ªque°_t
* 
	g_qu¨k_m¨kî
;

505 
boﬁ
 
	g_noblock
;

507 
	g¥iv©e
:

509 
x˘_lock_öfo_t
(xct_lock_info_t&);

510 
	gx˘_lock_öfo_t
 &
	g›î©‹
=(c⁄° 
x˘_lock_öfo_t
 &);

514 ˛as†
	clock_hód_t
 {

515 
‰õnd
 
lock_hód_t
* 
	mlock_ªque°_t
::
	$gë_lock_hód
() const;

516 
public
:

517 
lock_ba£_t
::
	tlmode_t
Ümode_t;

518 
lock_ba£_t
::
	tduøti⁄_t
 duration_t;

523 íum { 
t_purged
 = 1,

524 
t_ad≠tive
 = 2,

525 
t_≥ndög
 = 8,

526 
t_ª≥©_cb
 = 16

530 
w_lök_t
 
chaö
;

532 
lock_hód_t
* 
_√xt
;

533 
lockid_t
 
«me
;

535 
lmode_t
 
gø¡ed_mode
;

536 
boﬁ
 
waôög
;

557 
public
:

558 vﬁ©ûê
pö_˙t
;

559 
	smy_lock
 {

560 
queue_ba£d_lock_t
 
muãx
;

563 
tŸÆ_acquúes
;

564 
c⁄ãnded_acquúes
;

565 
boﬁ
 
_c⁄ãnded
;

566 
	#MY_LOCK_DEBUG
 0

	)

567 #i‡
MY_LOCK_DEBUG


568 
°hªad_t
* 
_hﬁdî
;

578 
boﬁ
 
	`is_c⁄ãnded
() {

579 if(!
_c⁄ãnded
 && 
c⁄ãnded_acquúes
 > 1024*6)

580 
_c⁄ãnded
 = 
åue
;

581 if(
_c⁄ãnded
 && 
c⁄ãnded_acquúes
 < 1024*1)

582 
_c⁄ãnded
 = 
Ál£
;

583  
_c⁄ãnded
;

585 
queue_ba£d_lock_t
::
ext_qnode
* 
	`gë_me
() {

587  &
	`me
()->
	`gë_me1
();

589 
rc_t
 
	`acquúe
() {

590 
boﬁ
 
c⁄ãnded
 = 
muãx
.
	`acquúe
(
	`gë_me
());

591 if(
c⁄ãnded
)

592 
c⁄ãnded_acquúes
 = ((contended_acquires*7) >> 3) + 1024;

593 #i‡
MY_LOCK_DEBUG


594 
_hﬁdî
 = 
	`me
();

596  
RCOK
;

598 
rc_t
 
	`ªÀa£
() {

599 #i‡
MY_LOCK_DEBUG


600 
_hﬁdî
 = 0;

602 
muãx
.
	`ªÀa£
(
	`gë_me
());

603  
RCOK
;

605 #i‡
MY_LOCK_DEBUG


606 
boﬁ
 
	`is_möe
(Ë{  
_hﬁdî
 =
	`me
(); }

608 
	`my_lock
(c⁄°* = 
NULL
)

609 : 
	`tŸÆ_acquúes
(5)

610 , 
	`c⁄ãnded_acquúes
(0)

611 #i‡
MY_LOCK_DEBUG


612 , 
	`_hﬁdî
(0)

615 
	}
};

616 
my_lock
 
	ghód_muãx
;

618 
NORET
 
lock_hód_t
(

619 c⁄° 
lockid_t
& 
«me
,

620 
lmode_t
 
mode
);

622 
	gNORET
 ~
	$lock_hód_t
(Ë{ 
chaö
.
	`dëach
(); 
	}
}

624 
lmode_t
 
gø¡ed_mode_Ÿhî
(c⁄° 
lock_ªque°_t
* 
ex˛ude
);

627 
boﬁ
 
övÆid©e_¶i
();

629 
lock_ªque°_t
* 
föd_lock_ªque°
(c⁄° 
x˘_lock_öfo_t
* 
xdli
);

630 
	$queue_Àngth
() const {

631 #i‡
MY_LOCK_DEBUG


632 
	`w_as£π2
(
	`MUTEX_IS_MINE
(

633 
c⁄°_ˇ°
<
lock_hód_t
 *>(
this
)->
hód_muãx
));

635  
_queue
.
	`num_membîs
();

636 
	}
}

637 
	$unß„_queue_Àngth
(Ëc⁄° {  
_queue
.
	`num_membîs
(); 
	}
}

638 
	$queue_≠≥nd
(
lock_ªque°_t
 * 
r
) {

639 #i‡
MY_LOCK_DEBUG


640 
	`w_as£π1
(
	`MUTEX_IS_MINE
(
hód_muãx
));

642 
	`w_as£π1
(
r
->
	`°©us
());

643 
_queue
.
	`≠≥nd
(
r
);

644 
	}
}

645 
lock_ªque°_t
* 
	$queue_¥ev
(
lock_ªque°_t
 *
ªq
) {

646 #i‡
MY_LOCK_DEBUG


647 
	`w_as£π2
(
	`MUTEX_IS_MINE
(
hód_muãx
));

649  
_queue
.
	`¥ev
(&
ªq
->
æök
);

650 
	}
}

653 
	gunß„_queue_ôî©‹_t
 : 
public
 
ªque°_li°_i


655 
NORET
 
unß„_queue_ôî©‹_t
(
lock_hód_t
 &
l
)

657 
ª£t
(
l
.
_queue
, 
Ál£
);

659 
	gNORET
 ~
unß„_queue_ôî©‹_t
() {}

665 
	gß„_queue_ôî©‹_t
 : 
public
 
ªque°_li°_i


668 
NORET
 
ß„_queue_ôî©‹_t
(
lock_hód_t
 &
l
)

670 #i‡
MY_LOCK_DEBUG


671 
w_as£π1
(
MUTEX_IS_MINE
(
l
.
hód_muãx
));

673 
ª£t
(
l
.
_queue
, 
Ál£
);

675 
	gNORET
 ~
ß„_queue_ôî©‹_t
() {}

678 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam&, c⁄° 
	glock_hód_t
& 
	gl
);

680 
	g¥iv©e
:

682 
NORET
 
lock_hód_t
(lock_head_t&);

683 
	glock_hód_t
& 
	g›î©‹
=(c⁄° 
lock_hód_t
&);

686 
ªque°_li°_t
 
	g_queue
;

689 
ölöe
 
NORET


690 
	glock_hód_t
::
	$lock_hód_t
–c⁄° 
lockid_t
& 
n
, 
lmode_t
 
m
)

692 
	`«me
(
n
),

693 
	`gø¡ed_mode
(
m
),

694 
	`waôög
(
Ál£
),

695 
	`pö_˙t
(0),

696 
	`hód_muãx
(
	`W_IFDEBUG
("m:lkhdt")),

697 
	`_queue
(
	`W_LIST_ARG
(
lock_ªque°_t
, 
æök
), &
hód_muãx
.
muãx
)

699 
	`INC_TSTAT
(
lock_hód_t_˙t
);

700 
	}
}

703 
ölöe
 
lock_hód_t
*

704 
	glock_ªque°_t
::
	$gë_lock_hód
() const

708 
w_li°_ba£_t
* 
li°
;

709 
n
;

710 
lock_hód_t
* 
hód
;

711 } 
u
 = {
æök
.
	`membî_of
()};

712 i‡(
u
.
li°
)

713 
u
.
n
-
	`w_off£tof
(
lock_hód_t
, 
_queue
);

714  
u
.
hód
;

715 
	}
}

717 
ölöe
 
NORET


718 
	glock_ªque°_t
::~
	$lock_ªque°_t
()

720 
	`w_as£π1
(
æök
.
	`membî_of
() == 0

722 
	`w_as£π1
(
xlök
.
	`membî_of
() == 0 ||

723 
	`MUTEX_IS_MINE
(
	`gë_lock_öfo
()->
lock_öfo_muãx
));

724 
	`£t_thªad
(
NULL
);

725 
	}
}

	@src/sm/log.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#LOG_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


63 
	~"sm_öt_1.h
"

64 
	~"logdef_gí.˝p
"

65 
	~"log.h
"

66 
	~"log_c‹e.h
"

67 
	~"¸ash.h
"

68 
	~<Æg‹ôhm
>

69 
	~<°dio.h
>

71 
	gsmÀvñ_0
::
	tfûeoff_t
 fileoff_t;

81 
boﬁ
 
	glog_i
::
	$√xt
(
l¢_t
& 
l¢
, 
logªc_t
*& 
r
)

83 
boﬁ
 
eof
 = (
curs‹
 =
nuŒ_l¢
);

84 i‡(! 
eof
) {

85 
l¢
 = 
curs‹
;

86 
rc_t
 
rc
 = 
log
.
	`„tch
(
l¢
, 
r
, &
curs‹
);

90 
log
.
	`ªÀa£
();

92 i‡(
rc
.
	`is_îr‹
()) {

93 
œ°_rc
 = 
rc
;

94 
	`RC_AUGMENT
(
œ°_rc
);

95 
	`RC_APPEND_MSG
(
œ°_rc
, << "åyögÅÿ„tchÜ¢ " << 
curs‹
);

97 i‡(
œ°_rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eEOF
)

98 
eof
 = 
åue
;

100 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


101 << "F©ÆÉº‹ : " << 
	`RC_PUSH
(
œ°_rc
, 
smÀvñ_0
::
eINTERNAL
Ë<< 
Êushl
;

105  ! 
eof
;

106 
	}
}

121 
uöt4_t
 c⁄° 
	glog_m
::
_vîsi⁄_maj‹
 = 4;

122 
uöt4_t
 c⁄° 
	glog_m
::
_vîsi⁄_mö‹
 = 0;

123 c⁄° 
	glog_m
::
_SLASH
 = '/';

124 c⁄° 
	glog_m
::
_ma°î_¥efix
[] = "chk.";

125 c⁄° 
	glog_m
::
_log_¥efix
[] = "log.";

126 
	glog_m
::
_logdú
[
max_dev«me
];

129 
	glog_m
::
	$shutdown
()

131 
log_c‹e
::
THE_LOG
->
	`shutdown
();

132 
dñëe
 
log_c‹e
::
THE_LOG
;

133 
	}
}

136 
NORET
 
	glog_m
::~
	$log_m
()

140 
	}
}

144 
fûeoff_t
 
log_m
::
	$£gmít_size
()

145 {  
log_c‹e
::
THE_LOG
->
	`£gmít_size
(); 
	}
}

147 
fûeoff_t
 
	glog_m
::
	$∑πôi⁄_size
(
psize
)

148 {  
log_c‹e
::
	`∑πôi⁄_size
(
psize
); 
	}
}

150 
fûeoff_t
 
	glog_m
::
	$mö_∑πôi⁄_size
()

151 {  
log_c‹e
::
	`mö_∑πôi⁄_size
(); 
	}
}

153 
fûeoff_t
 
	glog_m
::
	$max_∑πôi⁄_size
() {

154 
fûeoff_t
 
tmp
 = 
°hªad_t
::
max_os_fûe_size
;

155 
tmp
 =Åm∞> 
l¢_t
::
max
.
	`lo
() ?Üsn_t::max.lo() :Åmp;

156  
	`∑πôi⁄_size
(
tmp
);

157 
	}
}

160 c⁄°* 
	$∑ge_èg_to_°r
(
∑ge_èg
) {

161 
∑ge_èg
) {

162 
∑ge_p
::
t_exéök_p
:

164 
∑ge_p
::
t_°node_p
:

166 
∑ge_p
::
t_keyed_p
:

168 
∑ge_p
::
t_båì_p
:

170 
∑ge_p
::
t_πªe_p
:

172 
∑ge_p
::
t_fûe_p
:

174 
∑ge_p
::
t_ønges_p
:

176 
∑ge_p
::
t_fûe_mrbt_p
:

181 
	}
}

185 
	$db_¥ëty_¥öt
(
logªc_t
 c⁄°* 
ªc
, , const* )

187 
tmp_d©a
[1024];

190 c⁄°* 
	t°r
;

191 
°r
 
undo
=(
ªc
->
	`is_undo
()? "undo " : ""),

192 
ªdo
=(
ªc
->
	`is_ªdo
()? "redo " : ""),

193 
˝¢
=(
ªc
->
	`is_˝¢
()? "cpsn " : ""),

194 
logiˇl
=(
ªc
->
	`is_logiˇl
()? "logical " : "");

196 
s¸©ch
[100];

197 
°r
 
exåa
 = 
s¸©ch
;

198 
ªc
->
	`ty≥
()) {

200 
logªc_t
::
t_∑ge_m¨k
:

201 
logªc_t
::
t_∑ge_ª˛aim
:

202 
	`¢¥ötf
(
s¸©ch
, (scratch), " { idx=%d,Üen=%d }\n",

203 *(*Ë
ªc
->
	`d©a
(), *(*) (rec->data()+()));

206 
exåa
 = "";

210 
	`¢¥ötf
(
tmp_d©a
, (tmp_data),

222 
ªc
->
	`Àngth
(),

223 
ªc
->
	`ty≥_°r
(),

224 
logiˇl
, 
undo
, 
ªdo
, 
˝¢
,

225 
ªc
->
	`tid
().
	`gë_hi
(),Ñec->tid().
	`gë_lo
(),

226 
ªc
->
	`c⁄°ru˘_pid
().
	`vﬁ
().
vﬁ
,

227 
ªc
->
	`c⁄°ru˘_pid
().
	`°‹e
(),

228 
ªc
->
	`c⁄°ru˘_pid
().
∑ge
,

229 
	`∑ge_èg_to_°r
(
ªc
->
	`èg
()),

230 (
ªc
->
	`¥ev
().
	`hi
()), ()‘ec->¥ev().
	`lo
()),

231 (
ªc
->
	`gë_l¢_ck
().
	`hi
()), ()‘ec->gë_l¢_ck().
	`lo
()),

232 
exåa


234  
tmp_d©a
;

235 
	}
}

237 
	glog_m
::
	$log_m
()

239 
	`_mö_chk±_ªc_l¢
(
	`fú°_l¢
(1)),

240 
	`_•a˚_avaûabÀ
(0),

241 
	`_•a˚_rsvd_f‹_chk±
(0),

242 
	`_∑πôi⁄_size
(0),

243 
	`_∑πôi⁄_d©a_size
(0),

244 
	`_log_c‹ru±i⁄
(
Ál£
),

245 
	$_waôög_f‹_•a˚
(
Ál£
)

247 
	`±hªad_muãx_öô
(&
_•a˚_lock
, 0);

248 
	`±hªad_c⁄d_öô
(&
_•a˚_c⁄d
, 0);

249 
	}
}

257 
	glog_m
::
	$£t_ma°î
(
l¢_t
 
ml¢
,Ü¢_à
mö_ªc_l¢
,Ü¢_à
mö_x˘_l¢
)

259 
	`CRITICAL_SECTION
(
cs
, 
_∑πôi⁄_lock
);

260 
l¢_t
 
mö_l¢
 = 
°d
::
	`mö
(
mö_ªc_l¢
, 
mö_x˘_l¢
);

263 
	`w_as£π1
(
log_c‹e
::
THE_LOG
 !
NULL
);

264 
	`_wrôe_ma°î
(
ml¢
, 
mö_l¢
);

266 
_ma°î_l¢
 = 
ml¢
;

267 
_mö_chk±_ªc_l¢
 = 
mö_l¢
;

268 
	}
}

270 
rc_t


271 
	glog_m
::
	$√w_log_m
(
log_m
 *&
the_log
,

272 c⁄° *
∑th
,

273 
wrbufsize
,

274 
boﬁ
 
ªf‹m©
)

276 
	`FUNC
(
log_m
::
√w_log_m
);

278 
	`w_as£π1
(
	`°æí
(
∑th
Ë< (
_logdú
));

279 
	`°r˝y
(
_logdú
, 
∑th
);

281 
rc_t
 
rc
 = 
log_c‹e
::
	`√w_log_m
(
the_log
, 
wrbufsize
, 
ªf‹m©
);

283 
	`w_as£π1
(
the_log
 !
NULL
);

285 if(!
rc
.
	`is_îr‹
()) {

286 
log_c‹e
::
THE_LOG
->
	`°¨t_Êush_d´m⁄
();

288  
rc
.
	`ª£t
();

289 
	}
}

299 
	glog_m
::
	$make_log_«me
(
uöt4_t
 
idx
, * 
buf
, 
bufsz
)

302 
w_o°r°ªam
 
	`s
(
buf
, (Ë
bufsz
);

303 
s
 << 
_logdú
 << 
_SLASH


304 << 
_log_¥efix
 << 
idx
 << 
íds
;

305 
	`w_as£π1
(
s
);

306  
buf
;

307 
	}
}

309 
rc_t


310 
	glog_m
::
	$sˇvíge
(
l¢_t
 
mö_ªc_l¢
,Ü¢_à
mö_x˘_l¢
)

311 {  
log_c‹e
::
THE_LOG
->
	`sˇvíge
(
mö_ªc_l¢
, 
mö_x˘_l¢
); 
	}
}

314 
	glog_m
:: 
	$ªÀa£
()

315 { 
log_c‹e
::
THE_LOG
->
	`ªÀa£
(); 
	}
}

317 
rc_t


318 
	glog_m
::
	$„tch
(
l¢_t
 &
l¢
, 
logªc_t
* &
ªc
,Ü¢_t* 
nxt
)

319 {  
log_c‹e
::
THE_LOG
->
	`„tch
(
l¢
, 
ªc
, 
nxt
); 
	}
}

321 
rc_t


322 
	glog_m
::
	$ö£π
(
logªc_t
 &
r
, 
l¢_t
* 
ªt
)

327 i‡(
_log_c‹ru±i⁄
) {

328 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


329 << "Gíî©ög c‹ru±ÜogÑec‹dáàl¢: " << 
	`cuº_l¢
(Ë<< 
Êushl
;

330 
r
.
	`c‹ru±
();

332 
_log_c‹ru±i⁄
 = 
Ál£
;

334  
log_c‹e
::
THE_LOG
->
	`ö£π
(
r
, 
ªt
);

335 
	}
}

337 
rc_t


338 
	glog_m
::
	$Êush
(
l¢_t
 
l¢
, 
boﬁ
 
block
)

339 {  
log_c‹e
::
THE_LOG
->
	`Êush
(
l¢
, 
block
); 
	}
}

341 
rc_t


342 
	glog_m
::
	$com≥nßã
(
l¢_t
 
‹ig_l¢
,Ü¢_à
undo_l¢
)

343 {  
log_c‹e
::
THE_LOG
->
	`com≥nßã
(
‹ig_l¢
, 
undo_l¢
); 
	}
}

353 
	glog_m
::
	$_make_ma°î_«me
(

354 c⁄° 
l¢_t
& 
ma°î_l¢
,

355 c⁄° 
l¢_t
& 
mö_chk±_ªc_l¢
,

356 * 
buf
,

357 
bufsz
,

358 
boﬁ
 
ﬁd_°yÀ
)

360 
w_o°r°ªam
 
	`s
(
buf
, (Ë
bufsz
);

362 
s
 << 
_logdú
 << 
_SLASH
 << 
_ma°î_¥efix
;

363 
l¢_t
 
¨øy
[2];

364 
¨øy
[0] = 
ma°î_l¢
;

365 
¨øy
[1] = 
mö_chk±_ªc_l¢
;

367 
	`_¸óã_ma°î_chk±_°rög
(
s
, 2, 
¨øy
, 
ﬁd_°yÀ
);

368 
s
 << 
íds
;

369 
	`w_as£π1
(
s
);

370 
	}
}

373 
	glog_m
::
	$_wrôe_ma°î
(
l¢_t
 
l
,Ü¢_à
mö
)

378 
_chk±_mëa_buf
[
CHKPT_META_BUF
];

379 
	`_make_ma°î_«me
(
l
, 
mö
, 
_chk±_mëa_buf
, 
CHKPT_META_BUF
);

380 
	`DBGTHRD
(<< "wrôög checkpoöàma°î: " << 
_chk±_mëa_buf
);

382 
FILE
* 
f
 = 
	`f›í
(
_chk±_mëa_buf
, "a");

383 i‡(! 
f
) {

384 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

385 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


387 << 
_chk±_mëa_buf
 << 
Êushl
;

388 
	`W_COERCE
(
e
);

392 
l¢_t
 
¨øy
[
PARTITION_COUNT
];

394 
j
=0;

395 
i
=0; i < 
PARTITION_COUNT
; i++) {

396 c⁄° 
∑πôi⁄_t
 *
p
 = 
this
->
	`_∑πôi⁄
(
i
);

397 if(
p
->
	`num
(Ë> 0 && (p->
	`œ°_skù_l¢
().
	`hi
() ==Ö->num())) {

398 
¨øy
[
j
++] = 
p
->
	`œ°_skù_l¢
();

402 
j
 = 
log_c‹e
::
THE_LOG
->
	`gë_œ°_l¢s
(
¨øy
);

404 if(
j
 > 0) {

405 
w_o°r°ªam
 
	`s
(
_chk±_mëa_buf
, 
CHKPT_META_BUF
);

406 
	`_¸óã_ma°î_chk±_c⁄ã¡s
(
s
, 
j
, 
¨øy
);

408 
	`mem£t
(
_chk±_mëa_buf
, '\0', 1);

410 
Àngth
 = 
	`°æí
(
_chk±_mëa_buf
) + 1;

411 
	`DBG
(<< " #l¢s=" << 
j


413 
_chk±_mëa_buf
);

415 if(
	`fwrôe
(
_chk±_mëa_buf
, 
Àngth
, 1, 
f
) != 1) {

416 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

417 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


419 << 
_chk±_mëa_buf
 << 
Êushl
;

420 
	`W_COERCE
(
e
);

423 
	`f˛o£
(
f
);

428 
	`_make_ma°î_«me
(
_ma°î_l¢
,

429 
_mö_chk±_ªc_l¢
, 
_chk±_mëa_buf
, 
CHKPT_META_BUF
);

430 (Ë
	`u∆ök
(
_chk±_mëa_buf
);

431 
	}
}

443 
	glog_m
::
	$_¸óã_ma°î_chk±_°rög
(

444 
o°ªam
& 
s
,

445 
¨øysize
,

446 c⁄° 
l¢_t
* 
¨øy
,

447 
boﬁ
 
ﬁd_°yÀ
)

449 
	`w_as£π1
(
¨øysize
 >= 2);

450 i‡(
ﬁd_°yÀ
) {

451 
s
 << 
¨øy
[0] << '.' <<árray[1];

454 
s
 << 'v' << 
_vîsi⁄_maj‹
 << '.' << 
_vîsi⁄_mö‹
 ;

455 
i
=0; i< 
¨øysize
; i++) {

456 
s
 << '_' << 
¨øy
[
i
];

459 
	}
}

470 
rc_t


471 
	glog_m
::
	$_check_vîsi⁄
(
uöt4_t
 
maj‹
, uöt4_à
mö‹
)

473 i‡(
maj‹
 =
_vîsi⁄_maj‹
 && 
mö‹
 <
_vîsi⁄_mö‹
)

474  
RCOK
;

476 
îr
 = (
maj‹
 < 
_vîsi⁄_maj‹
)

477 ? 
eLOGVERSIONTOOOLD
 : 
eLOGVERSIONTOONEW
;

479 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


481 << ((
îr
 =
eLOGVERSIONTOOOLD
) ? "old" : "new")

483 << 
_vîsi⁄_maj‹
 << " . " << 
_vîsi⁄_mö‹


485 << 
maj‹
 << " . " << 
mö‹


486 << 
Êushl
;

488  
	`RC
(
îr
);

489 
	}
}

493 
	glog_m
::
	$_¸óã_ma°î_chk±_c⁄ã¡s
(

494 
o°ªam
& 
s
,

495 
¨øysize
,

496 c⁄° 
l¢_t
* 
¨øy


499 
i
=0; i< 
¨øysize
; i++) {

500 
s
 << '_' << 
¨øy
[
i
];

502 
s
 << 
íds
;

503 
	}
}

506 
rc_t


507 
	glog_m
::
	$_∑r£_ma°î_chk±_c⁄ã¡s
(

508 
i°ªam
& 
s
,

509 & 
li°Àngth
,

510 
l¢_t
* 
l¢li°


513 
li°Àngth
 = 0;

514 
£∑øt‹
;

515 !
s
.
	`eof
()) {

516 
s
 >> 
£∑øt‹
;

517 if(!
s
.
	`eof
()) {

518 
	`w_as£π9
(
£∑øt‹
 == '_' || separator == '.');

519 
s
 >> 
l¢li°
[
li°Àngth
];

520 
	`DBG
(<< 
li°Àngth
 << ":ÉxtraÜsn = " <<

521 
l¢li°
[
li°Àngth
]);

522 if(!
s
.
	`Áû
()) {

523 
li°Àngth
++;

527  
RCOK
;

528 
	}
}

539 
rc_t


540 
	glog_m
::
	$_∑r£_ma°î_chk±_°rög
(

541 
i°ªam
& 
s
,

542 
l¢_t
& 
ma°î_l¢
,

543 
l¢_t
& 
mö_chk±_ªc_l¢
,

544 & 
numbî_of_Ÿhîs
,

545 
l¢_t
* 
Ÿhîs
,

546 
boﬁ
& 
ﬁd_°yÀ
)

548 
uöt4_t
 
maj‹
 = 1;

549 
uöt4_t
 
mö‹
 = 0;

550 
£∑øt‹
;

552 
s
 >> 
£∑øt‹
;

554 i‡(
£∑øt‹
 == 'v') {

555 
ﬁd_°yÀ
 = 
Ál£
;

556 
s
 >> 
maj‹
 >> 
£∑øt‹
 >> 
mö‹
;

557 
	`w_as£π9
(
£∑øt‹
 == '.');

558 
s
 >> 
£∑øt‹
;

559 
	`w_as£π9
(
£∑øt‹
 == '_');

561 
ﬁd_°yÀ
 = 
åue
;

562 
s
.
	`putback
(
£∑øt‹
);

565 
s
 >> 
ma°î_l¢
 >> 
£∑øt‹
 >> 
mö_chk±_ªc_l¢
;

566 
	`w_as£π9
(
£∑øt‹
 == '_' || separator == '.');

568 i‡(!
s
) {

569  
	`RC
(
eBADMASTERCHKPTFORMAT
);

572 
numbî_of_Ÿhîs
 = 0;

573 !
s
.
	`eof
()) {

574 
s
 >> 
£∑øt‹
;

575 if(
£∑øt‹
 == '\0') ;

577 if(!
s
.
	`eof
()) {

578 
	`w_as£π9
(
£∑øt‹
 == '_' || separator == '.');

579 
s
 >> 
Ÿhîs
[
numbî_of_Ÿhîs
];

580 
	`DBG
(<< 
numbî_of_Ÿhîs
 << ":ÉxtraÜsn = " <<

581 
Ÿhîs
[
numbî_of_Ÿhîs
]);

582 if(!
s
.
	`Áû
()) {

583 
numbî_of_Ÿhîs
++;

588  
	`_check_vîsi⁄
(
maj‹
, 
mö‹
);

589 
	}
}

594 
	glog_m
::
	$max_chk±_size
() const

600 c⁄° 
GUESS_MAX_XCT_COUNT
 = 10000;

601 c⁄° 
FUDGE
 = (
logªc_t
);

602 
bf_èb_size
 = 
bf
->
	`≈ages
()*(
chk±_bf_èb_t
::
bªc_t
);

603 
x˘_èb_size
 = 
GUESS_MAX_XCT_COUNT
*(
chk±_x˘_èb_t
::
xªc_t
);

604  
FUDGE
 + 
bf_èb_size
 + 
x˘_èb_size
;

605 
	}
}

607 
w_rc_t


608 
	glog_m
::
	$_ªad_ma°î
(

609 c⁄° *
‚ame
,

610 
¥efix_Àn
,

611 
l¢_t
 &
tmp
,

612 
l¢_t
& 
tmp1
,

613 
l¢_t
* 
l¢li°
,

614 & 
li°Àngth
,

615 
boﬁ
& 
ﬁd_°yÀ


618 
rc_t
 
rc
;

621 
Àn
 = 
	`°æí
(
‚ame
+
¥efix_Àn
) + 1;

622 *
buf
 = 
√w
 [
Àn
];

623 
	`mem˝y
(
buf
, 
‚ame
+
¥efix_Àn
, 
Àn
);

624 
w_i°r°ªam
 
	`s
(
buf
);

626 
rc
 = 
	`_∑r£_ma°î_chk±_°rög
(
s
, 
tmp
, 
tmp1
,

627 
li°Àngth
, 
l¢li°
, 
ﬁd_°yÀ
);

628 
dñëe
 [] 
buf
;

629 i‡(
rc
.
	`is_îr‹
()) {

630 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


631 << "bad ma°îÜog fûê\"" << 
‚ame
 << "\"" << 
Êushl
;

632 
	`W_COERCE
(
rc
);

634 
	`DBG
(<<"_∑r£_ma°î_chk±_°rögÑëu∫†tmp" << 
tmp


635 << "Åmp1=" << 
tmp1


636 << " old_°yÀ=" << 
ﬁd_°yÀ
);

643 * 
buf
 = 
√w
 [
smÀvñ_0
::
max_dev«me
];

644 i‡(!
buf
)

645 
	`W_FATAL
(
fcOUTOFMEMORY
);

646 
w_auto_dñëe_¨øy_t
<> 
	`ad_‚ame
(
buf
);

647 
w_o°r°ªam
 
	`s
(
buf
, (
smÀvñ_0
::
max_dev«me
));

648 
s
 << 
_logdú
 << 
_SLASH
 << 
‚ame
 << 
íds
;

650 
FILE
* 
f
 = 
	`f›í
(
buf
, "r");

651 if(
f
) {

652 
_chk±_mëa_buf
[
CHKPT_META_BUF
];

653 
n
 = 
	`‰ód
(
_chk±_mëa_buf
, 1, 
CHKPT_META_BUF
, 
f
);

654 if(
n
 > 0) {

658 *
nuŒ
 = 
	`memchr
(
_chk±_mëa_buf
, '\0', 
CHKPT_META_BUF
);

659 i‡(!
nuŒ
) {

660 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


662 << 
buf
 << "\"" << 
Êushl
;

663 
	`W_FATAL
(
eINTERNAL
);

666 
w_i°r°ªam
 
	`s
(
_chk±_mëa_buf
);

667 
rc
 = 
	`_∑r£_ma°î_chk±_c⁄ã¡s
(
s
, 
li°Àngth
, 
l¢li°
);

668 i‡(
rc
.
	`is_îr‹
()) {

669 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


671 << 
buf
 << "\"" << 
Êushl
;

672 
	`W_COERCE
(
rc
);

675 
	`f˛o£
(
f
);

680 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

681 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


683 << 
buf
 << 
Êushl
;

684 
	`W_COERCE
(
e
);

687  
RCOK
;

688 
	}
}

690 
fûeoff_t
 
	glog_m
::
	$èke_•a˚
(
fûeoff_t
 vﬁ©ûe* 
±r
, 
amt
)

692 
fûeoff_t
 
ov
 = *
±r
;

694 if(
ov
 < 
amt
)

696 
fûeoff_t
 
nv
 = 
ov
 - 
amt
;

697 
fûeoff_t
 
cv
 = 
	`©omic_ˇs_64
((
uöt64_t
*)
±r
, 
ov
, 
nv
);

698 if(
ov
 =
cv
)

699  
amt
;

700 
ov
 = 
cv
;

702 
	}
}

704 
fûeoff_t
 
	glog_m
::
	$ª£rve_•a˚
(
fûeoff_t
 
amt
) {

706 #i‡
USE_LOG_RESERVATIONS


707  (
amt
 > 0)? 
	`èke_•a˚
(&
_•a˚_avaûabÀ
,ámt) : 0;

709  (
_•a˚_avaûabÀ
 > 
amt
) ? _space_available -ámt : 0;

711 
	}
}

713 
fûeoff_t
 
	glog_m
::
	$c⁄sume_chk±_ª£rv©i⁄
(
fûeoff_t
 
amt
) {

714 #i‡
USE_LOG_RESERVATIONS


715 if(
›î©ög_mode
 !
t_f‹w¨d_¥o˚ssög
)

716  
amt
;

718  (
amt
 > 0)?

719 
	`èke_•a˚
(&
_•a˚_rsvd_f‹_chk±
, 
amt
) : 0;

721  
amt
;

723 
	}
}

726 
boﬁ
 
	glog_m
::
	$vîify_chk±_ª£rv©i⁄
()

728 #i‡
USE_LOG_RESERVATIONS


729 
fûeoff_t
 
•a˚_√eded
 = 
	`max_chk±_size
();

730 *&
_•a˚_rsvd_f‹_chk±
 < 2*
•a˚_√eded
) {

731 if(
	`ª£rve_•a˚
(
•a˚_√eded
)) {

733 
	`èke_•a˚
(&
_•a˚_rsvd_f‹_chk±
, -
•a˚_√eded
);

734 } if(*&
_•a˚_rsvd_f‹_chk±
 < 
•a˚_√eded
) {

740 
	`W_FATAL
(
eOUTOFLOGSPACE
);

743  
Ál£
;

747  
åue
;

748 
	}
}

750 
	glog_m
::
	$ªÀa£_•a˚
(
fûeoff_t
 
amt
)

752 
log_c‹e
::
THE_LOG
->
	`ªÀa£_•a˚
(
amt
);

753 
	}
}

755 #i‡
USE_LOG_RESERVATIONS


756 
rc_t
 
	glog_m
::
	$waô_f‹_•a˚
(
fûeoff_t
 &
amt
, 
timeout_ö_ms
 
timeout
)

758  
log_c‹e
::
THE_LOG
->
	`waô_f‹_•a˚
(
amt
, 
timeout
);

759 
	}
}

761 
rc_t
 
	glog_m
::
	$waô_f‹_•a˚
(
fûeoff_t
 &, 
timeout_ö_ms
 )

763  
RCOK
;

764 
	}
}

768 
	glog_m
::
	$a˘iv©e_ª£rv©i⁄s
()

770 
log_c‹e
::
THE_LOG
->
	`a˘iv©e_ª£rv©i⁄s
();

771 
	}
}

776 
boﬁ


777 
	glog_m
::
	$squìzed_by
(c⁄° 
l¢_t
 &
£lf
) const

781 ((
	`cuº_l¢
().
	`fûe
(Ë- 
	`globÆ_mö_l¢
().fûe()Ë>(
PARTITION_COUNT
-2))

783 (
£lf
.
	`fûe
(Ë=
	`globÆ_mö_l¢
().file())

786 
	}
}

788 
rc_t


789 
	glog_m
::
	$fûe_was_¨chived
(c⁄° *
fûe
)

793  
log_c‹e
::
THE_LOG
->
	`fûe_was_¨chived
(
fûe
);

794 
	}
}

	@src/sm/log.h

53 #i‚de‡
LOG_H


54 
	#LOG_H


	)

56 
	~"w_deföes.h
"

60 #unde‡
ACQUIRE


62 #ifde‡
__GNUG__


63 #¥agm®
öãrÁ˚


67 
˛ass
 
	glogªc_t
;

68 
˛ass
 
	glog_buf
;

83 ˛as†
	clog_m
 : 
public
 
smÀvñ_0


85 
uöt4_t
 c⁄° 
_vîsi⁄_maj‹
;

86 
uöt4_t
 c⁄° 
	m_vîsi⁄_mö‹
;

87 c⁄° 
	m_ma°î_¥efix
[];

88 c⁄° 
	m_log_¥efix
[];

89 
	m_logdú
[
max_dev«me
];

91 
	m¥Ÿe˘ed
:

92 c⁄° 
_SLASH
;

95 
muèbÀ
 
queue_ba£d_block_lock_t
 
	m_∑πôi⁄_lock
;

96 
l¢_t
 
	m_cuº_l¢
;

97 
l¢_t
 
	m_duøbÀ_l¢
;

98 
l¢_t
 
	m_ma°î_l¢
;

99 
l¢_t
 
	m_mö_chk±_ªc_l¢
;

100 
fûeoff_t
 vﬁ©ûê
	m_•a˚_avaûabÀ
;

101 
fûeoff_t
 vﬁ©ûê
	m_•a˚_rsvd_f‹_chk±
;

102 
fûeoff_t
 
	m_∑πôi⁄_size
;

103 
fûeoff_t
 
	m_∑πôi⁄_d©a_size
;

104 
boﬁ
 
	m_log_c‹ru±i⁄
;

105 
boﬁ
 
	m_waôög_f‹_•a˚
;

106 
±hªad_muãx_t
 
	m_•a˚_lock
;

107 
±hªad_c⁄d_t
 
	m_•a˚_c⁄d
;

109 
	m¥Ÿe˘ed
:

110 
log_m
();

112 c⁄° *
	$ma°î_¥efix
(Ë{  
_ma°î_¥efix
; }

113 c⁄° *
	$log_¥efix
(Ë{  
_log_¥efix
; 
	}
}

114 
fûeoff_t
 
	$∑πôi⁄_d©a_size
() const {

115  
_∑πôi⁄_d©a_size
; 
	}
}

117 
w_rc_t
 
_ªad_ma°î
(

118 c⁄° *
‚ame
,

119 
¥efix_Àn
,

120 
l¢_t
 &
tmp
,

121 
l¢_t
& 
tmp1
,

122 
l¢_t
* 
l¢li°
,

123 & 
li°Àngth
,

124 
boﬁ
& 
ﬁd_°yÀ


126 
_make_ma°î_«me
(

127 c⁄° 
l¢_t
& 
ma°î_l¢
,

128 c⁄° 
l¢_t
& 
mö_chk±_ªc_l¢
,

129 * 
buf
,

130 
bufsz
,

131 
boﬁ
 
ﬁd_°yÀ
 = 
Ál£
);

133 
	gpublic
:

139 
l¢_t
 
	$mö_chk±_ªc_l¢
() const {

140 
	`ASSERT_FITS_IN_POINTER
(
l¢_t
);

142  
_mö_chk±_ªc_l¢
;

143 
	}
}

145 
rc_t
 
fûe_was_¨chived
(c⁄° *
fûe
);

147 
	g¥iv©e
:

149 
_¸óã_ma°î_chk±_c⁄ã¡s
(

150 
o°ªam
& 
s
,

151 
¨øysize
,

152 c⁄° 
l¢_t
* 
¨øy


156 
_¸óã_ma°î_chk±_°rög
(

157 
o°ªam
& 
o
,

158 
¨øysize
,

159 c⁄° 
l¢_t
* 
¨øy
,

160 
boﬁ
 
ﬁd_°yÀ
 = 
Ál£


164 
rc_t
 
_∑r£_ma°î_chk±_c⁄ã¡s
(

165 
i°ªam
& 
s
,

166 & 
li°Àngth
,

167 
l¢_t
* 
l¢li°


171 
rc_t
 
_∑r£_ma°î_chk±_°rög
(

172 
i°ªam
& 
s
,

173 
l¢_t
& 
ma°î_l¢
,

174 
l¢_t
& 
mö_chk±_ªc_l¢
,

175 & 
numbî_of_Ÿhîs
,

176 
l¢_t
* 
Ÿhîs
,

177 
boﬁ
& 
ﬁd_°yÀ


181 
rc_t
 
_check_vîsi⁄
(

182 
uöt4_t
 
maj‹
,

183 
uöt4_t
 
mö‹


186 
_wrôe_ma°î
(
l¢_t
 
l
,Ü¢_à
mö
);

189 
	gpublic
:

195 
shutdown
();

197 
	g¥Ÿe˘ed
:

199 
vútuÆ
 
NORET
 ~
log_m
();

200 
	gpublic
:

203 
rc_t
 
£t_log_„©uªs
(c⁄°* 
„©uªs
);

204 c⁄°* 
gë_log_„©uªs
();

216 
rc_t
 
√w_log_m
(

217 
log_m
 *&
the_log
,

218 c⁄° *
∑th
,

219 
wæogbufsize
,

220 
boﬁ
 
ªf‹m©
);

226 
fûeoff_t
 
£gmít_size
();

227 
fûeoff_t
 
∑πôi⁄_size
(
psize
);

228 
fûeoff_t
 
mö_∑πôi⁄_size
();

229 
fûeoff_t
 
max_∑πôi⁄_size
();

235 c⁄° * 
	$dú_«me
(Ë{  
_logdú
; 
	}
}

241 
fûeoff_t
 
	$•a˚_À·
(Ëc⁄° {  *&
_•a˚_avaûabÀ
; 
	}
}

247 c⁄° * 
make_log_«me
(
uöt4_t
 
n
,

248 * 
buf
,

249 
bufsz
);

260 
	$°¨t_log_c‹ru±i⁄
(Ë{ 
_log_c‹ru±i⁄
 = 
åue
; 
	}
}

266 
l¢_t
 
	$fú°_l¢
(
uöt4_t
 
≤um
Ë{  
	`l¢_t
’num, 0); 
	}
}

276 
l¢_t
 
	$cuº_l¢
() const {

279  
_cuº_l¢
;

280 
	}
}

282 
boﬁ
 
	$squìzed_by
(c⁄° 
l¢_t
 &) const ;

286 
l¢_t
 
	$duøbÀ_l¢
() const {

287 
	`ASSERT_FITS_IN_POINTER
(
l¢_t
);

289  
_duøbÀ_l¢
;

290 
	}
}

292 
l¢_t
 
	$ma°î_l¢
() const {

293 
	`ASSERT_FITS_IN_POINTER
(
l¢_t
);

295  
_ma°î_l¢
;

296 
	}
}

299 
rc_t
 
sˇvíge
(
l¢_t
 
mö_ªc_l¢
,Ü¢_à
mö_x˘_l¢
);

300 
rc_t
 
ö£π
(
logªc_t
 &
r
, 
l¢_t
* 
ªt
);

301 
rc_t
 
com≥nßã
(
l¢_t
 
‹ig_l¢
,Ü¢_à
undo_l¢
);

303 
rc_t
 
„tch
(
l¢_t
 &
l¢
, 
logªc_t
* &
ªc
,Ü¢_t* 
nxt
=
NULL
);

306 
vútuÆ
 
ªÀa£
();

307 
vútuÆ
 
rc_t
 
Êush
(
l¢_t
 
l¢
, 
boﬁ
 
block
=
åue
);

309 
fûeoff_t
 
ª£rve_•a˚
(fûeoff_à
howmuch
);

310 
ªÀa£_•a˚
(
fûeoff_t
 
howmuch
);

311 
rc_t
 
waô_f‹_•a˚
(
fûeoff_t
 &
amt
, 
timeout_ö_ms
 
timeout
);

312 
fûeoff_t
 
èke_•a˚
(fûeoff_àvﬁ©ûe* 
±r
, 
amt
) ;

314 
	$max_chk±_size
() const;

315 
boﬁ
 
	`vîify_chk±_ª£rv©i⁄
();

316 
fûeoff_t
 
	`c⁄sume_chk±_ª£rv©i⁄
(fûeoff_à
howmuch
);

317 
	`a˘iv©e_ª£rv©i⁄s
() ;

319 
	`£t_ma°î
(
l¢_t
 
ma°î_l¢
,Ü¢_à
mö_l¢
,Ü¢_à
mö_x˘_l¢
);

323 
l¢_t
 
	$globÆ_mö_l¢
() const {

324  
°d
::
	`mö
(
	`ma°î_l¢
(), 
	`mö_chk±_ªc_l¢
()); 
	}
}

325 
l¢_t
 
	$globÆ_mö_l¢
(
l¢_t
 c⁄° &
a
) const {

326  
°d
::
	`mö
(
	`globÆ_mö_l¢
(), 
a
); 
	}
}

328 
l¢_t
 
	$globÆ_mö_l¢
(
l¢_t
 c⁄° &
a
,Ü¢_àc⁄° &
b
) const {

329  
°d
::
	`mö
(
	`globÆ_mö_l¢
(
a
), 
b
); 
	}
}

335 
rc_t
 
	$Êush_Æl
(
boﬁ
 
block
=
åue
) {

336  
	`Êush
(
	`cuº_l¢
().
	`adv™˚
(-1), 
block
); 
	}
}

338 
	gpublic
:

340 
fûeoff_t
 
	$limô
(Ëc⁄° {  
_∑πôi⁄_size
; 
	}
}

342 
	g¥iv©e
:

344 
log_m
 &
›î©‹
=(log_m const &);

345 
log_m
(log_m const &);

352 ˛as†
	clog_i
 {

353 
	mpublic
:

355 
NORET
 
log_i
(
log_m
& 
l
, c⁄° 
l¢_t
& 
l¢
) ;

356 
	mNORET
 ~
log_i
();

359 
boﬁ
 
√xt
(
l¢_t
& 
l¢
, 
logªc_t
*& 
r
);

361 
	mw_rc_t
& 
gë_œ°_rc
();

362 
	m¥iv©e
:

363 
log_m
& 
log
;

364 
l¢_t
 
	mcurs‹
;

365 
w_rc_t
 
	mœ°_rc
;

368 
ölöe
 
NORET


369 
	glog_i
::
	$log_i
(
log_m
& 
l
, c⁄° 
l¢_t
& 
l¢
)

370 : 
	`log
(
l
), 
	$curs‹
(
l¢
)

371 { 
	}
}

373 
ölöe


374 
	glog_i
::~
	$log_i
()

375 { 
œ°_rc
.
	`vîify
(); 
	}
}

377 
ölöe
 
	gw_rc_t
&

378 
	glog_i
::
	$gë_œ°_rc
()

379 {  
œ°_rc
; 
	}
}

	@src/sm/log_core.cpp

53 
	~"w_deföes.h
"

57 
	#debug_log
 
Ál£


	)

59 
	#SM_SOURCE


	)

60 
	#LOG_CORE_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄


65 #ifde‡
__SUNPRO_CC


66 
	~<°dio.h
>

68 
	~<c°dio
>

70 
	~<sys/ty≥s.h
>

71 
	~<sys/°©.h
>

72 
	~<os_öãrÁ˚.h
>

73 
	~<œrgefûe_aw¨e.h
>

75 
	~"sm_öt_1.h
"

76 
	~"logty≥_gí.h
"

78 
	~"log.h
"

79 
	~"log_c‹e.h
"

82 
	~"chk±.h
"

84 
	~<s°ªam
>

85 
	~<w_°r°ªam.h
>

88 
	~"logdef_gí.˝p
"

90 
	~<m≠
>

91 
	~<m©h.h
>

93 
boﬁ
 
	glog_c‹e
::
_öôülized
 = 
Ál£
;

97 
log_c‹e
 *
	glog_c‹e
::
THE_LOG
(
NULL
);

101 
	glog_c‹e
::
	$∑πôi⁄_size
(
psize
) {

102 
p
 = 
psize
 - 
BLOCK_SIZE
;

103  
	`_Êo‹
(
p
, 
SEGMENT_SIZE
Ë+ 
BLOCK_SIZE
;

104 
	}
}

106 
	glog_c‹e
::
	$mö_∑πôi⁄_size
() {

107  
	`_Êo‹
(
SEGMENT_SIZE
, SEGMENT_SIZEË+ 
BLOCK_SIZE
;

108 
	}
}

117 
w_rc_t


118 
	glog_c‹e
::
	$√w_log_m
(

119 
log_m
 *&
log_p
,

120 
wrbufsize
,

121 
boﬁ
 
ªf‹m©


124 
rc_t
 
rc
;

126 if(
THE_LOG
 !
NULL
) {

128 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io
 << "Logálready created. "

129 << 
ídl
 << 
Êushl
;

130  
	`RC
(
eINTERNAL
);

133 if(
rc
.
	`is_îr‹
()) {

135 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


136 << "Eº‹: c™nŸ o≥¿thêlog fûe(sË" << 
	`dú_«me
()

137 << ":" << 
ídl
 << 
rc
 << 
Êushl
;

138  
rc
;

142 
log_c‹e
 *
l
 = 0;

144 
	`DBGTHRD
(<<"Üog is unix file" );

145 i‡(
max_logsz
 == 0) {

148 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


150 << 
Êushl
;

152  
	`RC
(
eOUTOFLOGSPACE
);

155 
l
 = 
√w
 
	`log_c‹e
(
wrbufsize
, 
ªf‹m©
);

157 i‡(
rc
.
	`is_îr‹
())

158  
rc
;

160 
log_p
 = 
l
;

161 
THE_LOG
 = 
l
;

162  
RCOK
;

163 
	}
}

166 
	glog_c‹e
::
	$_acquúe
()

168 
_∑πôi⁄_lock
.
	`acquúe
(&
	`me
()->
	`gë_log_me_node
());

169 
	}
}

171 
	glog_c‹e
::
	$ªÀa£
()

173 
_∑πôi⁄_lock
.
	`ªÀa£
(
	`me
()->
	`gë_log_me_node
());

174 
	}
}

177 
∑πôi⁄_ödex_t


178 
	glog_c‹e
::
	$_gë_ödex
(
uöt4_t
 
n
) const

180 c⁄° 
∑πôi⁄_t
 *
p
;

181 
i
=0; i<
PARTITION_COUNT
; i++) {

182 
p
 = 
	`_∑πôi⁄
(
i
);

183 if(
p
->
	`num
()==
n
Ë 
i
;

186 
	}
}

188 
∑πôi⁄_t
 *

189 
	glog_c‹e
::
	$_n_∑πôi⁄
(
∑πôi⁄_numbî_t
 
n
) const

191 
∑πôi⁄_ödex_t
 
i
 = 
	`_gë_ödex
(
n
);

192  (
i
<0)? (
∑πôi⁄_t
 *)0 : 
	`_∑πôi⁄
(i);

193 
	}
}

196 
∑πôi⁄_t
 *

197 
	glog_c‹e
::
	$cuº_∑πôi⁄
() const

199 
	`w_as£π3
(
	`∑πôi⁄_ödex
() >= 0);

200  
	`_∑πôi⁄
(
	`∑πôi⁄_ödex
());

201 
	}
}

220 
rc_t


221 
	glog_c‹e
::
	$sˇvíge
(
l¢_t
 
mö_ªc_l¢
,Ü¢_à
mö_x˘_l¢
)

223 
	`FUNC
(
log_c‹e
::
sˇvíge
);

224 
	`CRITICAL_SECTION
(
cs
, 
_∑πôi⁄_lock
);

225 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
_sˇvíge_lock
));

227 #i‡
W_DEBUG_LEVEL
 > 2

228 
	`_ßnôy_check
();

230 
∑πôi⁄_t
 *
p
;

232 
l¢_t
 
l¢
 = 
	`globÆ_mö_l¢
(
mö_ªc_l¢
,
mö_x˘_l¢
);

233 
∑πôi⁄_numbî_t
 
mö_num
;

238 
mö_num
 = 
	`∑πôi⁄_num
();

239 
uöt
 
i
 = 0; i < 
PARTITION_COUNT
; i++) {

240 
p
 = 
	`_∑πôi⁄
(
i
);

241 if–
p
->
	`num
(Ë> 0 &&Ö->num(Ë< 
mö_num
 )

242 
mö_num
 = 
p
->
	`num
();

246 
	`DBGTHRD
–<< "sˇvígêu¡ûÜ¢ " << 
l¢
 << ", min_num is "

247 << 
mö_num
 << 
ídl
 );

253 
cou¡
=0;

254  ; 
mö_num
 < 
l¢
.
	`hi
(); ++min_num) {

255 
p
 = 
	`_n_∑πôi⁄
(
mö_num
);

256 
	`w_as£π3
(
p
);

257 i‡(
	`duøbÀ_l¢
(Ë< 
p
->
	`fú°_l¢
() ) {

258 
	`W_FATAL
(
fcINTERNAL
);

261 
	`w_as£π3
(
	`duøbÀ_l¢
(Ë>
p
->
	`fú°_l¢
());

262 
	`DBGTHRD
–<< "sˇvígögÜog " << 
p
->
	`num
(Ë<< 
ídl
 );

263 
cou¡
++;

264 
p
->
	`˛o£
(
åue
);

265 
p
->
	`de°roy
();

267 if(
cou¡
 > 0) {

278 
fûeoff_t
 
ª˛aimed
 = 
	`ªcovîabÀ_•a˚
(
cou¡
);

279 
fûeoff_t
 
max_chk±
 = 
	`max_chk±_size
();

280 !
	`vîify_chk±_ª£rv©i⁄
(Ë&& 
ª˛aimed
 > 0) {

281 
skimmed
 = 
°d
::
	`mö
(
max_chk±
, 
ª˛aimed
);

282 
	`©omic_add_64
((
uöt64_t
*)&
_•a˚_rsvd_f‹_chk±
, 
skimmed
);

283 
ª˛aimed
 -
skimmed
;

285 
	`ªÀa£_•a˚
(
ª˛aimed
);

286 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_sˇvíge_c⁄d
));

288 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
_sˇvíge_lock
));

290  
RCOK
;

291 
	}
}

308 
	glog_c‹e
::
	$_ÊushX
(
l¢_t
 
°¨t_l¢
,

309 
°¨t1
, 
íd1
, 
°¨t2
, 
íd2
)

316 
∑πôi⁄_t
* 
p
 = 
	`cuº_∑πôi⁄
();

317 if(
°¨t_l¢
.
	`fûe
(Ë!
p
->
	`num
()) {

318 
∑πôi⁄_numbî_t
 
n
 = 
p
->
	`num
();

319 
	`w_as£π3
(
°¨t_l¢
.
	`fûe
(Ë=
n
+1);

320 
	`w_as£π3
(
n
 != 0);

328 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
_sˇvíge_lock
));

329 
ªåy
:

330 
bf
->
	`a˘iv©e_background_Êushög
();

331 
smÀvñ_1
::
chk±
->
	`wakeup_™d_èke
();

332 
u_öt
 
ﬁde°
 = 
log
->
	`globÆ_mö_l¢
().
	`hi
();

333 if(
ﬁde°
 + 
PARTITION_COUNT
 =
°¨t_l¢
.
	`fûe
()) {

334 
	`Ârötf
(
°dîr
, "Can't openÖartition %d untilÖartition %d isÑeclaimed\n",

335 
°¨t_l¢
.
	`fûe
(), 
ﬁde°
);

336 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_sˇvíge_c⁄d
, &
_sˇvíge_lock
));

337 
ªåy
;

339 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
_sˇvíge_lock
));

342 
	`CRITICAL_SECTION
(
cs
, 
_∑πôi⁄_lock
);

343 
p
->
	`˛o£
();

344 
	`un£t_cuºít
();

345 
	`DBG
(<<"ábouàtÿ›í " << 
n
+1);

347 
p
 = 
	`_›í_∑πôi⁄_f‹_≠≥nd
(
n
+1, 
l¢_t
::
nuŒ
, 
Ál£
, false);

351 
	`w_as£π3
(
	`cuº_∑πôi⁄
()->
	`size
()== 0);

352 
	`w_as£π3
(
	`∑πôi⁄_num
() != 0);

356 
p
->
	`Êush
’->
	`fhdl_≠p
(), 
°¨t_l¢
, 
_buf
, 
°¨t1
, 
íd1
, 
°¨t2
, 
íd2
);

357 
wrôãn
 = (
íd2
 - 
°¨t2
Ë+ (
íd1
 - 
°¨t1
);

358 
p
->
	`£t_size
(
°¨t_l¢
.
	`lo
()+
wrôãn
);

360 #i‡
W_DEBUG_LEVEL
 > 2

361 
	`_ßnôy_check
();

363 
	}
}

370 
	glog_c‹e
::
	$_¥ime
(
fd
, 
fûeoff_t
 
°¨t
, 
l¢_t
 
√xt
)

372 
	`w_as£π1
(
_duøbÀ_l¢
 =
_cuº_l¢
);

373 
boff£t
 = 
	`¥ime
(
_buf
, 
fd
, 
°¨t
, 
√xt
);

374 
_duøbÀ_l¢
 = 
_Êush_l¢
 = 
_cuº_l¢
 = 
√xt
;

380 
off£t
 = 
√xt
.
	`lo
(Ë% 
	`£gsize
();

381 
ba£
 = 
√xt
.
	`lo
(Ë- 
off£t
;

382 
l¢_t
 
	`°¨t_l¢
(
√xt
.
	`hi
(), 
ba£
);

388 
	`w_as£π1
(
_Êush_d´m⁄_ru¬ög
 =
Ál£
);

389 
_buf_ïoch
 = 
_cur_ïoch
 = 
	`ïoch
(
°¨t_l¢
, 
ba£
, 
off£t
, offset);

390 
_íd
 = 
_°¨t
 = 
√xt
.
	`lo
();

393 
	`memmove
(
_buf
+
off£t
-
boff£t
, _buf, boffset);

394 
	}
}

419 
	glog_c‹e
::
	$¥ime
(* 
buf
, 
fd
, 
fûeoff_t
 
°¨t
, 
l¢_t
 
√xt
)

421 
	`FUNC
(
log_c‹e
::
¥ime
);

423 
	`w_as£π1
(
°¨t
 == 0);

426 
fûeoff_t
 
b
 = 
	`_Êo‹
(
√xt
.
	`lo
(), 
BLOCK_SIZE
);

428 
l¢_t
 
fú°
 = 
	`l¢_t
(
	`uöt4_t
(
√xt
.
	`hi
()), 
	`sm_diskaddr_t
(
b
));

431 if(
fú°
 !
√xt
) {

432 
	`w_as£π3
(
fú°
.
	`lo
(Ë< 
√xt
.lo());

433 
fûeoff_t
 
off£t
 = 
°¨t
 + 
fú°
.
	`lo
();

435 
	`DBG
(<<"Ñódög " << (
BLOCK_SIZE
Ë<< " o¿fd " << 
fd
 );

436 
n
 = 0;

437 
w_rc_t
 
e
 = 
	`me
()->
	`¥ód
(
fd
, 
buf
, 
BLOCK_SIZE
, 
off£t
);

438 i‡(
e
.
	`is_îr‹
()) {

440 
	`W_FATAL_MSG
(
e
.
	`îr_num
(),

441 << "ˇ¬ŸÑódÜog:Ü¢ " << 
fú°


442 << "¥ód(): " << 
e


443 << "¥ód(Ëªtu∫†" << 
n
 << 
ídl
);

446  
√xt
.
	`lo
(Ë- 
fú°
.lo();

447 
	}
}

450 
	glog_c‹e
::
	$_ßnôy_check
() const

452 if(!
_öôülized
) ;

454 #i‡
W_DEBUG_LEVEL
 > 1

455 
∑πôi⁄_ödex_t
 
i
;

456 c⁄° 
∑πôi⁄_t
* 
p
;

457 
boﬁ
 
found_cuºít
=
Ál£
;

458 
boﬁ
 
found_mö_l¢
=
Ál£
;

464 if–
_cuº_ödex
 >= 0 ) {

465 
	`w_as£π1
(
_cuº_num
 > 0);

468 
	`w_as£π1
(
_cuº_num
 == 1);

470 
	`w_as£π1
(
	`duøbÀ_l¢
(Ë<
	`cuº_l¢
());

471 
	`w_as£π1
(
	`duøbÀ_l¢
(Ë>
	`fú°_l¢
(1));

473 
i
=0; i<
PARTITION_COUNT
; i++) {

474 
p
 = 
	`_∑πôi⁄
(
i
);

475 
p
->
	`ßnôy_check
();

477 
	`w_as£π1
(
i
 =
p
->
	`ödex
());

480 if(
p
->
	`num
()>0) {

481 
	`w_as£π1
(
p
->
	`exi°s
());

482 
	`w_as£π1
(
i
 =
	`_gë_ödex
(
p
->
	`num
()));

483 
	`w_as£π1
(
p
 =
	`_n_∑πôi⁄
’->
	`num
()));

485 if(
p
->
	`is_cuºít
()) {

486 
	`w_as£π1
(!
found_cuºít
);

487 
found_cuºít
 = 
åue
;

489 
	`w_as£π1
(
p
 =
	`cuº_∑πôi⁄
());

490 
	`w_as£π1
(
p
->
	`num
(Ë=
	`∑πôi⁄_num
());

491 
	`w_as£π1
(
i
 =
	`∑πôi⁄_ödex
());

493 
	`w_as£π1
(
p
->
	`is_›í_f‹_≠≥nd
());

494 } if(
p
->
	`is_›í_f‹_≠≥nd
()) {

500 if(
	`globÆ_mö_l¢
().
	`hi
(Ë=
p
->
	`num
()) {

503 
found_mö_l¢
 = 
åue
;

506 
	`w_as£π1
(!
p
->
	`is_cuºít
());

507 
	`w_as£π1
(!
p
->
	`exi°s
());

510 
	`w_as£π1
(
found_mö_l¢
 || (
	`globÆ_mö_l¢
()=
l¢_t
::
nuŒ
));

512 
	}
}

529 
rc_t


530 
	glog_c‹e
::
	$„tch
(
l¢_t
& 
Œ
, 
logªc_t
*& 
Ω
,Ü¢_t* 
nxt
)

532 
	`FUNC
(
log_c‹e
::
„tch
);

534 
	`DBGTHRD
(<<"„tchögÜ¢ " << 
Œ


535 << " , _cuº_l¢ = " << 
	`cuº_l¢
()

536 << " , _duøbÀ_l¢ = " << 
	`duøbÀ_l¢
());

538 #i‡
W_DEBUG_LEVEL
 > 0

539 
	`_ßnôy_check
();

545 
	`W_DO
(
	`Êush
(
Œ
+(
logªc_t
)));

548 
	`_acquúe
();

554 
∑πôi⁄_t
 *
p
 = 0;

555 
uöt4_t
 
œ°_hi
=0;

556 !
p
) {

557 if(
œ°_hi
 =
Œ
.
	`hi
()) {

560 
	`DBGTHRD
(<<"nÿsuchÖ¨tôi⁄ " << 
Œ
 );

561  
	`RC
(
eEOF
);

563 i‡(
Œ
 >
	`cuº_l¢
()) {

568 
	`DBGTHRD
(<<"„tcháàl¢ " << 
Œ
 << "ÑeturnsÉof -- _curr_lsn="

569 << 
	`cuº_l¢
());

570  
	`RC
(
eEOF
);

572 
œ°_hi
 = 
Œ
.
	`hi
();

574 
	`DBG
(<<"ábouàtÿ›í " << 
Œ
.
	`hi
());

576 i‡((
p
 = 
	`_›í_∑πôi⁄_f‹_ªad
(
Œ
.
	`hi
(), 
l¢_t
::
nuŒ
, 
åue
, 
Ál£
))) {

579 
	`DBGTHRD
(<<"›íed...Ö->size()=" << 
p
->
	`size
());

581 i‡–
Œ
.
	`lo
(Ë>
p
->
	`size
() ||

582 (
p
->
	`size
(Ë=
∑πôi⁄_t
::
nosize
 && 
Œ
.
	`lo
(Ë>
	`limô
())) {

583 
	`DBGTHRD
(<<"£ekögÅÿ" << 
Œ
.
	`lo
() << "; beyondÖ->size() ... OR ...");

584 
	`DBGTHRD
(<<"limô()=" << 
	`limô
() << " &Ö->size()=="

585 << (
∑πôi⁄_t
::
nosize
));

587 
Œ
 = 
	`fú°_l¢
÷l.
	`hi
() + 1);

588 
	`DBGTHRD
(<<"gëtögÇexà∑πôi⁄: " << 
Œ
);

589 
p
 = 0; ;

594 
	`W_COERCE
(
p
->
	`ªad
(
Ω
, 
Œ
));

596 
logªc_t
 &
r
 = *
Ω
;

598 i‡(
r
.
	`ty≥
(Ë=
logªc_t
::
t_skù
 &&Ñ.
	`gë_l¢_ck
(Ë=
Œ
) {

600 
	`DBGTHRD
(<<"£ekedÅÿskù" << 
Œ
 );

601 
	`DBGTHRD
(<<"gettingÇextÖartition.");

602 
Œ
 = 
	`fú°_l¢
÷l.
	`hi
() + 1);

605 
p
 = 
	`_n_∑πôi⁄
(
Œ
.
	`hi
());

606 if(!
p
)

607 
p
 = 
	`_›í_∑πôi⁄_f‹_ªad
(
Œ
.
	`hi
(), 
l¢_t
::
nuŒ
, 
Ál£
, false);

611 
	`W_COERCE
(
p
->
	`ªad
(
Ω
, 
Œ
));

614 
logªc_t
 &
r
 = *
Ω
;

616 i‡(
r
.
	`l¢_ck
().
	`hi
(Ë!
Œ
.hi()) {

617 
	`W_FATAL_MSG
(
fcINTERNAL
,

618 << "F©ÆÉº‹:ÜogÑec‹d " << 
Œ


620 << 
r
.
	`gë_l¢_ck
()

621 << 
ídl
);

622 } i‡(
r
.
	`l¢_ck
().
	`lo
(Ë!
Œ
.lo()) {

623 
	`W_FATAL_MSG
(
fcINTERNAL
,

624 << "F©ÆÉº‹:ÜogÑec‹d " << 
Œ


626 << 
r
.
	`gë_l¢_ck
()

627 << 
ídl
);

630 i‡(
nxt
) {

631 
l¢_t
 
tmp
 = 
Œ
;

632 *
nxt
 = 
tmp
.
	`adv™˚
(
r
.
	`Àngth
());

635 #ifde‡
UNDEF


636 
ßved
 = 
r
.
_checksum
;

637 
r
.
_checksum
 = 0;

638 
c
 = 0, 
i
 = 0; i < 
r
.
	`Àngth
(); c += ((*)&r)[i++]);

639 
	`w_as£π1
(
c
 =
ßved
);

642 
	`DBGTHRD
(<<"„tcháàl¢ " << 
Œ
 << "Ñëu∫†" << 
r
);

643 #i‡
W_DEBUG_LEVEL
 > 2

644 
	`_ßnôy_check
();

648  
RCOK
;

649 
	}
}

664 
∑πôi⁄_t
 *

665 
	glog_c‹e
::
	$_˛o£_mö
(
∑πôi⁄_numbî_t
 
n
)

668 
bf
->
	`a˘iv©e_background_Êushög
();

670 
	`FUNC
(
log_c‹e
::
˛o£_mö
);

680 
åõs
=0;

681 
agaö
:

682 
∑πôi⁄_ödex_t
 
i
 = ()((
n
-1Ë% 
PARTITION_COUNT
);

683 
∑πôi⁄_numbî_t
 
mö
 = 
	`mö_chk±_ªc_l¢
().
	`hi
();

684 
∑πôi⁄_t
 *
vi˘im
;

686 
vi˘im
 = 
	`_∑πôi⁄
(
i
);

687 if((
vi˘im
->
	`num
() == 0) ||

688 (
vi˘im
->
	`num
(Ë< 
mö
)) {

692 
vi˘im
 = 0;

695 i‡(
vi˘im
) {

696 
	`w_as£π3
–
vi˘im
->
	`ödex
(Ë=(
∑πôi⁄_ödex_t
)((
n
-1Ë% 
PARTITION_COUNT
));

701 if(!
vi˘im
) {

708 
w_o°r°ªam
 
msg
;

709 
msg
 << 
îr‹_¥io


710 << "Thªad " << 
	`me
()->
id
 << " "

712 << 
	`•a˚_À·
()

714 << 
ídl
;

715 
	`Ârötf
(
°dîr
, "%s\n", 
msg
.
	`c_°r
());

718 if(
åõs
++ > 8Ë
	`W_FATAL
(
smÀvñ_0
::
eOUTOFLOGSPACE
);

719 
bf
->
	`a˘iv©e_background_Êushög
();

720 
	`me
()->
	`¶ìp
(1000);

721 
agaö
;

723 
	`w_as£π1
(
vi˘im
);

729 if(
vi˘im
->
	`exi°s
()) {

733 if(
vi˘im
->
	`num
(Ë>
	`mö_chk±_ªc_l¢
().
	`hi
()) {

734 
w_o°r°ªam
 
msg
;

735 
msg
 << " C™nŸ clo£ möÖ¨tôi⁄ -- stû»ö u£!" << 
ídl
;

737 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io
 << 
msg
.
	`c_°r
(Ë<< 
Êushl
;

739 
	`w_as£π1
(
vi˘im
->
	`num
(Ë< 
	`mö_chk±_ªc_l¢
().
	`hi
());

741 
vi˘im
->
	`˛o£
(
åue
);

742 
vi˘im
->
	`de°roy
();

745 
	`w_as£π3
(! 
vi˘im
->
	`is_›í_f‹_≠≥nd
());

746 
	`w_as£π3
(! 
vi˘im
->
	`is_›í_f‹_ªad
());

748 
	`w_as£π1
(! 
vi˘im
->
	`is_cuºít
() );

750 
vi˘im
->
	`˛ór
();

752  
vi˘im
;

753 
	}
}

782 
∑πôi⁄_t
 *

783 
	glog_c‹e
::
	$_›í_∑πôi⁄
(
∑πôi⁄_numbî_t
 
__num
,

784 c⁄° 
l¢_t
& 
íd_höt
,

785 
boﬁ
 
exi°ög
,

786 
boﬁ
 
f‹≠≥nd
,

787 
boﬁ
 
durög_ªcovîy


790 
	`w_as£π3
(
__num
 > 0);

792 #i‡
W_DEBUG_LEVEL
 > 2

796 
boﬁ
 
ˇ£2
 = (
exi°ög
 && 
f‹≠≥nd
 && !
durög_ªcovîy
);

801 
boﬁ
 
ˇ£7
 = (!
exi°ög
 && !
f‹≠≥nd
 && 
durög_ªcovîy
);

802 
boﬁ
 
ˇ£8
 = (!
exi°ög
 && !
f‹≠≥nd
 && !
durög_ªcovîy
);

804 
	`w_as£π3
–! 
ˇ£2
);

805 
	`w_as£π3
–! 
ˇ£7
);

806 
	`w_as£π3
–! 
ˇ£8
);

812 
∑πôi⁄_t
 *
p
 = 
	`_n_∑πôi⁄
(
__num
);

814 #i‡
W_DEBUG_LEVEL
 > 2

815 if(
f‹≠≥nd
) {

816 
	`w_as£π3
(
	`∑πôi⁄_ödex
() == -1);

818 
∑πôi⁄_t
 *
c
;

819 
i
;

820 
i
 = 0; i < 
PARTITION_COUNT
; i++) {

821 
c
 = 
	`_∑πôi⁄
(
i
);

822 
	`w_as£π3
(! 
c
->
	`is_cuºít
());

827 if(!
p
) {

831 
	`DBG
(<<"findáÇewÖartition structureÅo use " );

832 
p
 = 
	`_˛o£_mö
(
__num
);

833 
	`w_as£π1
(
p
);

834 
p
->
	`≥ek
(
__num
, 
íd_höt
, 
durög_ªcovîy
);

839 if(
exi°ög
 && !
f‹≠≥nd
) {

840 
	`DBG
(<<"aboutÅo open forÑead");

841 
w_rc_t
 
îr
 = 
p
->
	`›í_f‹_ªad
(
__num
);

842 if(
îr
.
	`is_îr‹
()) {

844 if(
smÀvñ_0
::
log_¨chived_ˇŒback
) {

845 
buf
[
max_dev«me
];

846 
	`make_log_«me
(
__num
, 
buf
, 
max_dev«me
);

847 
îr
 = (*
smÀvñ_0
::
log_¨chived_ˇŒback
)(

848 
buf
,

849 
__num


851 if(!
îr
.
	`is_îr‹
()) {

853 
îr
 = 
p
->
	`›í_f‹_ªad
(
__num
);

857 if(
îr
.
	`is_îr‹
()) {

858 
	`Ârötf
(
°dîr
,

860 
__num
);

861 
	`W_FATAL
(
eINTERNAL
);

865 
	`w_as£π3
(
p
->
	`is_›í_f‹_ªad
());

866 
	`w_as£π3
(
p
->
	`num
(Ë=
__num
);

867 
	`w_as£π3
(
p
->
	`exi°s
());

871 if(
f‹≠≥nd
) {

875 
p
->
	`›í_f‹_≠≥nd
(
__num
, 
íd_höt
);

876 if(
durög_ªcovîy
) {

881 
	`w_as£π1
(
	`duøbÀ_l¢
(Ë=
	`cuº_l¢
());

882 
	`_¥ime
(
p
->
	`fhdl_≠p
(),Ö->
	`°¨t
(), 
	`duøbÀ_l¢
());

884 
	`w_as£π3
(
p
->
	`exi°s
());

885 
	`w_as£π3
(
p
->
	`is_›í_f‹_≠≥nd
());

893 if(
smÀvñ_1
::
chk±
 !
NULL
ËsmÀvñ_1::chk±->
	`wakeup_™d_èke
();

895  
p
;

896 
	}
}

899 
	glog_c‹e
::
	$un£t_cuºít
()

901 
_cuº_ödex
 = -1;

902 
_cuº_num
 = 0;

903 
	}
}

906 
	glog_c‹e
::
	$£t_cuºít
(

907 
∑πôi⁄_ödex_t
 
i
,

908 
∑πôi⁄_numbî_t
 
num


911 
	`w_as£π3
(
_cuº_ödex
 == -1);

912 
	`w_as£π3
(
_cuº_num
 == 0 || _curr_num == 1);

913 
_cuº_ödex
 = 
i
;

914 
_cuº_num
 = 
num
;

915 
	}
}

918 ˛as†
	cÊush_d´m⁄_thªad_t
 : 
public
 
smthªad_t
 {

919 
log_c‹e
* 
_log
;

920 
	mpublic
:

921 
	$Êush_d´m⁄_thªad_t
(
log_c‹e
* 
log
) :

922 
	`smthªad_t
(
t_ªguœr
, "Êush_d´m⁄", 
WAIT_NOT_USED
), 
	$_log
(
log
) { }

924 
vútuÆ
 
	$run
(Ë{ 
_log
->
	`Êush_d´m⁄
(); 
	}
}

929 
	glog_c‹e
::
	$°¨t_Êush_d´m⁄
()

931 
_Êush_d´m⁄_ru¬ög
 = 
åue
;

932 
_Êush_d´m⁄
->
	`f‹k
();

933 
	}
}

936 
	glog_c‹e
::
	$shutdown
()

947 
_shuâög_down
 = 
åue
;

948 *&
_shuâög_down
) {

949 
	`CRITICAL_SECTION
(
cs
, 
_waô_Êush_lock
);

952 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
_Êush_c⁄d
));

954 
_Êush_d´m⁄
->
	`joö
();

955 
_Êush_d´m⁄_ru¬ög
 = 
Ál£
;

956 
dñëe
 
_Êush_d´m⁄
;

957 
_Êush_d´m⁄
=
NULL
;

958 
	}
}

961 
	shacked_qnode


963 
	mmcs_lock
::
qnode
* 
_√xt
;

964 
uöt64_t
 
	m_°©e
;

968 
	mmcs_lock
::
qnode
 
q
;

969 
hacked_qnode
 
	mhq
;

970 } c⁄° 
	gWAITING
 = {{0,1,0}}, 
	gABORT_ME
 = {{0,1,1}};

973 íum { 
	mSLOT_ARRAY_SIZE
=256 };

974 íum { 
	mSLOT_ACTIVE_COUNT
=1 };

975 íum { 
	mSLOT_AVAILABLE
=0,

976 
	mSLOT_UNUSED
=-1,

977 
	mSLOT_PENDING
=-2,

978 
	mSLOT_FINISHED
=-4

980 
	glog_c‹e
::
ö£π_öfo
 {

981 
l¢_t
 
l¢
;

982 
	gﬁd_íd
;

983 
	g°¨t_pos
;

984 
	gpos
;

985 
	g√w_íd
;

986 
	g√w_ba£
;

989 
	gcou¡
;

990 
	gîr‹
;

991 
	gmcs_lock
::
qnode
 
me
;

993 
	gmcs_lock
::
qnode
 
me2
;

994 
hacked_qnode
 
	gme2h
;

996 
	gmcs_lock
::
qnode
* 
¥ed2
;

998 
ö£π_öfo
 vﬁ©ûe* 
vthis
(Ë{  
	gthis
; }

1000 
ö£π_öfo
(Ë: 
cou¡
(
SLOT_UNUSED
), 
îr‹
(0) { }

1003 
	glog_c‹e
::
ö£π_öfo_¨øy
 {

1004 
_tŸÆ_¶Ÿs
;

1005 
	g_¶Ÿ_m¨k
;

1006 
ö£π_öfo
* 
	g_¶Ÿ_¨øy
;

1008 
ö£π_öfo_¨øy
(
cou¡
=16)

1009 : 
_tŸÆ_¶Ÿs
(
cou¡
)

1010 , 
_¶Ÿ_m¨k
(0)

1011 , 
_¶Ÿ_¨øy
(
√w
 
ö£π_öfo
[
cou¡
])

1015 ~
ö£π_öfo_¨øy
()

1018 
	gi
=0; i < 
	g_tŸÆ_¶Ÿs
; i++)

1020 
Æloˇã
(
Ál£
);

1022 
	gdñëe
 [] 
	g_¶Ÿ_¨øy
;

1025 
ödexof
(
ö£π_öfo
 c⁄°* 
öfo
) const {

1026  
	göfo
 - 
	g_¶Ÿ_¨øy
;

1029 
ö£π_öfo
* 
Æloˇã
(
boﬁ
 
be_∑tõ¡
=
åue
)

1031 
‹ig_¶Ÿ_m¨k
 = 
_¶Ÿ_m¨k
;

1032 
	gSLOT_UNUSED
 !
_¶Ÿ_¨øy
[
_¶Ÿ_m¨k
].
cou¡
)

1034 if(++
_¶Ÿ_m¨k
 =
_tŸÆ_¶Ÿs
)

1036 
_¶Ÿ_m¨k
 = 0;

1038 
w_as£π0
(
be_∑tõ¡
 || 
_¶Ÿ_m¨k
 !
‹ig_¶Ÿ_m¨k
);

1040 
ö£π_öfo
* 
	gi2
 = &
_¶Ÿ_¨øy
[
_¶Ÿ_m¨k
];

1041 
	gi2
->
	gcou¡
 = 
SLOT_AVAILABLE
;

1042  
	gi2
;

1046 
±hªad_muãx_t
 
	gglobÆ_hi°o_lock
 = 
PTHREAD_MUTEX_INITIALIZER
;

1048 
	shi°o
 {

1049 
	m°d
::
	tm≠
<, > 
	tbuckë_m≠
;

1050 
buckë_m≠
 
	m_buckës
;

1052 
	mhi°o
 &
	m›î©‹
+=(
hi°o
 c⁄° &
Ÿhî
) {

1053 
buckë_m≠
::
c⁄°_ôî©‹
 
ô
=
Ÿhî
.
_buckës
.
begö
(); 
	mô
 !Ÿhî._buckës.
íd
(); ++it) {

1054 
	m_buckës
[
ô
->
fú°
] +ô->
£c⁄d
;

1056  *
	mthis
;

1058 &
	m›î©‹
[](
	midx
) {

1060  
	m_buckës
[
ûogb
((
idx
))];

1063 
¥öt
() const {

1064 
Ârötf
(
°dîr
, "Log working set histogram (log-2 buckets):\n");

1065 
	mbuckë_m≠
::
c⁄°_ôî©‹
 
ô
=
_buckës
.
begö
(); 
	mô
 !_buckës.
íd
(); ++it) {

1066 
Ârötf
(
°dîr
, "\t%d: %ld\n", 
ô
->
fú°
, it->
£c⁄d
);

1070 
hi°o
 
	mglobÆ_hi°o
;

1072 ~
hi°o
() {

1073 
±hªad_muãx_lock
(&
globÆ_hi°o_lock
);

1074 
	mglobÆ_hi°o
 +*
this
;

1075 
±hªad_muãx_u∆ock
(&
globÆ_hi°o_lock
);

1079 
hi°o
 
	ghi°o
::
globÆ_hi°o
;

1081 
DECLARE_TLS
(
log_c‹e
::
ö£π_öfo_¨øy
, 
és_öfo_¨øy
);

1082 
DECLARE_TLS
(
hi°o
, 
és_hi°o
);

1099 
NORET


1100 
	glog_c‹e
::
	$log_c‹e
(

1101 
bsize
,

1102 
boﬁ
 
ªf‹m©
)

1105 
	`_ª£rv©i⁄s_a˘ive
(
Ál£
),

1106 
	`_waôög_f‹_•a˚
(
Ál£
),

1107 
	`_waôög_f‹_Êush
(
Ál£
),

1108 
	`_°¨t
(0),

1109 
	`_íd
(0),

1110 
	`_√eds_Êushed
(0),

1111 
	`_£gsize
(
	`_˚û
(
bsize
, 
SEGMENT_SIZE
)),

1113 
	`_buf
(
√w
 [
_£gsize
]),

1114 
	`_shuâög_down
(
Ál£
),

1115 
	`_Êush_d´m⁄_ru¬ög
(
Ál£
),

1116 
	`_¶Ÿ_¨øy
(
√w
 
	`ö£π_öfo_¨øy
(
SLOT_ARRAY_SIZE
)),

1117 
	`_a˘ive_¶Ÿs
(
SLOT_ACTIVE_COUNT
),

1118 
	`_¶Ÿs
(
√w
 
ö£π_öfo
* vﬁ©ûe[
SLOT_ACTIVE_COUNT
]),

1119 
	`_cuº_ödex
(-1),

1120 
	`_cuº_num
(1),

1121 
	`_ªadbuf
(
√w
 [
BLOCK_SIZE
*4]),

1122 
	$_skù_log
(
√w
 
skù_log
)

1124 
	`FUNC
(
log_c‹e
::log_core);

1125 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_waô_Êush_lock
, 
NULL
));

1126 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_waô_c⁄d
, 
NULL
));

1127 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_Êush_c⁄d
, 
NULL
));

1128 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_sˇvíge_lock
, 
NULL
));

1129 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_sˇvíge_c⁄d
, 
NULL
));

1131 
i
=0; i < 
_a˘ive_¶Ÿs
; i++)

1132 
	`_Æloˇã_¶Ÿ
(
i
);

1135 
_Êush_d´m⁄
 = 
√w
 
	`Êush_d´m⁄_thªad_t
(
this
);

1137 i‡(
bsize
 < 64 * 1024) {

1140 
îæog
->
˛og
 << 
îr‹_¥io


1142 << 
bsize
 << ",ÑequireátÜeast " << 64 * 1024

1143 << 
ídl
;

1144 
îæog
->
˛og
 << 
îr‹_¥io
 << 
ídl
;

1145 
	`Ârötf
(
°dîr
,

1147 
bsize
, 64*1024);

1148 
	`W_FATAL
(
OPT_BadVÆue
);

1151 
	`w_as£π1
(
	`is_Æig√d
(
_ªadbuf
));

1156 
	`_£t_size
(
max_logsz
);

1161 
	`CRITICAL_SECTION
(
cs
, 
_∑πôi⁄_lock
);

1163 
∑πôi⁄_numbî_t
 
œ°_∑πôi⁄
 = 
	`∑πôi⁄_num
();

1164 
boﬁ
 
œ°_∑πôi⁄_exi°s
 = 
Ál£
;

1168 
fûeoff_t
 
eof

	`fûeoff_t
(0);

1170 
os_dúít_t
 *
dd
=0;

1171 
os_dú_t
 
ldú
 = 
	`os_›ídú
(
	`dú_«me
());

1172 i‡(! 
ldú
)

1174 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1175 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1176 << "Eº‹: couldÇŸ o≥¿thêlog dúe˘‹y " << 
	`dú_«me
(Ë<<
Êushl
;

1177 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1179 "\àÅhêsm_logdú o±i⁄." << 
Êushl
;

1180 
	`W_COERCE
(
e
);

1182 
	`DBGTHRD
(<<"›ídú " << 
	`dú_«me
() << " succeeded");

1188 
_ma°î_l¢
 = 
nuŒ_l¢
;

1190 
uöt4_t
 
mö_ödex
 = 
max_uöt4
;

1192 *
‚ame
 = 
√w
 [
smÀvñ_0
::
max_dev«me
];

1193 i‡(!
‚ame
)

1194 
	`W_FATAL
(
fcOUTOFMEMORY
);

1195 
w_auto_dñëe_¨øy_t
<> 
	`ad_‚ame
(
‚ame
);

1201 
l¢_t
 
l¢li°
[
PARTITION_COUNT
];

1202 
li°Àngth
=0;

1207 
∑πôi⁄_ödex_t
 
i
;

1208 
i
 = 0; i < 
PARTITION_COUNT
; i++) {

1209 
_∑π
[
i
].
	`öô_ödex
(i);

1210 
_∑π
[
i
].
	`öô
(
this
);

1214 
	`DBGTHRD
(<<"ªf‹m©" << 
ªf‹m©


1215 << "Üa°_∑πôi⁄ " << 
œ°_∑πôi⁄


1216 << "Üa°_∑πôi⁄_exi°†" << 
œ°_∑πôi⁄_exi°s


1218 i‡(
ªf‹m©
)

1220 
smÀvñ_0
::
îæog
->
˛og
 << 
emîg_¥io


1221 << "Ref‹m©tögÜogs..." << 
ídl
;

1223 (
dd
 = 
	`os_ªaddú
(
ldú
)))

1225 
	`DBGTHRD
(<<"ma°î_¥efix" << 
	`ma°î_¥efix
());

1227 
«mñí
 = 
	`°æí
(
	`log_¥efix
());

1228 
«mñí
 =Çamñí > 
	`°æí
(
	`ma°î_¥efix
())?Çamelen :

1229 
	`°æí
(
	`ma°î_¥efix
());

1231 c⁄° *
d
 = 
dd
->
d_«me
;

1232 
‹ig_«mñí
 = 
	`°æí
(
d
);

1233 
«mñí
 =Çamñí > 
‹ig_«mñí
 ?Çamelen : orig_namelen;

1235 *
«me
 = 
√w
 [
«mñí
+1];

1236 
w_auto_dñëe_¨øy_t
<> 
	`˛ónup
(
«me
);

1238 
	`mem£t
(
«me
, '\0', 
«mñí
+1);

1239 
	`°∫˝y
(
«me
, 
d
, 
‹ig_«mñí
);

1240 
	`DBGTHRD
(<<"«me" << 
«me
);

1242 
boﬁ
 
∑r£_ok
 = (
	`°∫cmp
(
«me
,
	`ma°î_¥efix
(),
	`°æí
(master_prefix()))==0);

1243 if(!
∑r£_ok
) {

1244 
∑r£_ok
 = (
	`°∫cmp
(
«me
,
	`log_¥efix
(),
	`°æí
(log_prefix()))==0);

1246 if(
∑r£_ok
) {

1247 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1248 << "\t" << 
«me
 << "..." << 
ídl
;

1251 
w_o°r°ªam
 
	`s
(
‚ame
, (Ë
smÀvñ_0
::
max_dev«me
);

1252 
s
 << 
	`dú_«me
(Ë<< 
_SLASH
 << 
«me
 << 
íds
;

1253 
	`w_as£π1
(
s
);

1254 if–
	`u∆ök
(
‚ame
) < 0) {

1255 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

1256 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1257 << "u∆ök(" << 
‚ame
 << "):"

1258 << 
ídl
 << 
e
 <<Éndl;

1265 
	`w_as£π3
(!
œ°_∑πôi⁄_exi°s
);

1268 
	`DBGTHRD
(<<"aboutÅoÑeaddir"

1269 << "Üa°_∑πôi⁄ " << 
œ°_∑πôi⁄


1270 << "Üa°_∑πôi⁄_exi°†" << 
œ°_∑πôi⁄_exi°s


1273 (
dd
 = 
	`os_ªaddú
(
ldú
)))

1275 
	`DBGTHRD
(<<"dd->d_«me=" << 
dd
->
d_«me
);

1278 c⁄° 
¥efix_Àn
 = 
	`°æí
(
	`ma°î_¥efix
());

1279 
	`w_as£π3
(
¥efix_Àn
 < 
smÀvñ_0
::
max_dev«me
);

1281 *
buf
 = 
√w
 [
smÀvñ_0
::
max_dev«me
+1];

1282 i‡(!
buf
)

1283 
	`W_FATAL
(
fcOUTOFMEMORY
);

1284 
w_auto_dñëe_¨øy_t
<> 
	`ad_buf
(
buf
);

1286 
«mñí
 = 
¥efix_Àn
;

1287 c⁄° * 
dn
 = 
dd
->
d_«me
;

1288 
‹ig_«mñí
 = 
	`°æí
(
dn
);

1290 
«mñí
 =Çamñí > 
‹ig_«mñí
 ?Çamelen : orig_namelen;

1291 * 
«me
 = 
√w
 [
«mñí
+1];

1292 
w_auto_dñëe_¨øy_t
<> 
	`˛ónup
(
«me
);

1294 
	`mem£t
(
«me
, '\0', 
«mñí
+1);

1295 
	`°∫˝y
(
«me
, 
dn
, 
‹ig_«mñí
);

1297 
	`°∫˝y
(
buf
, 
«me
, 
¥efix_Àn
);

1298 
buf
[
¥efix_Àn
] = '\0';

1300 
	`DBGTHRD
(<<"«me" << 
«me
);

1302 
boﬁ
 
∑r£_ok
 = ((
	`°æí
(
buf
)Ë=
¥efix_Àn
);

1304 
	`DBGTHRD
(<<"∑r£_ok = " << 
∑r£_ok


1305 << " bu‡" << 
buf


1306 << "Öªfix_À¿" << 
¥efix_Àn


1307 << " såÀn(bufË" << 
	`°æí
(
buf
));

1308 i‡(
∑r£_ok
) {

1309 
l¢_t
 
tmp
;

1310 i‡(
	`°rcmp
(
buf
, 
	`ma°î_¥efix
()) == 0)

1312 
	`DBGTHRD
(<<"foundÜog fûê" << 
buf
);

1317 
l¢_t
 
tmp1
;

1318 
boﬁ
 
ﬁd_°yÀ
=
Ál£
;

1319 
rc_t
 
rc
 = 
	`_ªad_ma°î
(
«me
, 
¥efix_Àn
,

1320 
tmp
, 
tmp1
, 
l¢li°
, 
li°Àngth
,

1321 
ﬁd_°yÀ
);

1322 
	`W_COERCE
(
rc
);

1324 i‡(
tmp
 < 
	`ma°î_l¢
()) {

1328 
°d
::
	`sw≠
(
_ma°î_l¢
, 
tmp
);

1329 
°d
::
	`sw≠
(
_mö_chk±_ªc_l¢
, 
tmp1
);

1334 i‡(
_ma°î_l¢
 !
l¢_t
::
nuŒ
) {

1335 
	`_make_ma°î_«me
(
_ma°î_l¢
,

1336 
_mö_chk±_ªc_l¢
,

1337 
‚ame
,

1338 
smÀvñ_0
::
max_dev«me
);

1339 (Ë
	`u∆ök
(
‚ame
);

1344 
_ma°î_l¢
 = 
tmp
;

1345 
_mö_chk±_ªc_l¢
 = 
tmp1
;

1346 
	`DBG
(<<" _ma°î_l¢=" << 
_ma°î_l¢


1347 <<" _mö_chk±_ªc_l¢=" << 
_mö_chk±_ªc_l¢
);

1349 
	`DBG
(<<"∑r£_ok = " << 
∑r£_ok
);

1351 } i‡(
	`°rcmp
(
buf
, 
	`log_¥efix
()) == 0) {

1352 
	`DBGTHRD
(<<"foundÜog fûê" << 
buf
);

1357 
w_i°r°ªam
 
	`s
(
«me
 + 
¥efix_Àn
);

1358 
uöt4_t
 
cuº
;

1359 i‡(! (
s
 >> 
cuº
)) {

1360 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1361 << "badÜog fûê\"" << 
«me
 << "\"" << 
Êushl
;

1362 
	`W_FATAL
(
eINTERNAL
);

1365 
	`DBGTHRD
(<<"cuº " << 
cuº


1366 << "Ö¨tôi⁄_num()==" << 
	`∑πôi⁄_num
()

1367 << "Üa°_∑πôi⁄_exi°†" << 
œ°_∑πôi⁄_exi°s


1370 i‡(
cuº
 >
œ°_∑πôi⁄
) {

1371 
œ°_∑πôi⁄
 = 
cuº
;

1372 
œ°_∑πôi⁄_exi°s
 = 
åue
;

1373 
	`DBGTHRD
(<<"√wÜa°_∑πôi⁄ " << 
cuº


1376 i‡(
cuº
 < 
mö_ödex
) {

1377 
mö_ödex
 = 
cuº
;

1380 
	`DBGTHRD
(<<"NO MATCH");

1381 
	`DBGTHRD
(<<"_ma°î_¥efix" << 
	`ma°î_¥efix
());

1382 
	`DBGTHRD
(<<"_log_¥efix" << 
	`log_¥efix
());

1383 
	`DBGTHRD
(<<"buf" << 
buf
);

1384 
∑r£_ok
 = 
Ál£
;

1392 i‡(!
∑r£_ok
 && ! (
	`°rcmp
(
«me
, ".") == 0 ||

1393 
	`°rcmp
(
«me
, "..") == 0)) {

1394 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1395 << "log_c‹e: c™nŸÖ¨£ " << 
«me
 << 
Êushl
;

1396 
	`W_FATAL
(
fcINTERNAL
);

1399 
	`os_˛o£dú
(
ldú
);

1401 
	`DBGTHRD
(<<"after closedir "

1402 << "Üa°_∑πôi⁄ " << 
œ°_∑πôi⁄


1403 << "Üa°_∑πôi⁄_exi°†" << 
œ°_∑πôi⁄_exi°s


1406 #i‡
W_DEBUG_LEVEL
 > 2

1407 if(
ªf‹m©
) {

1408 
	`w_as£π3
(
	`∑πôi⁄_num
() == 1);

1409 
	`w_as£π3
(
_mö_chk±_ªc_l¢
.
	`hi
() == 1);

1410 
	`w_as£π3
(
_mö_chk±_ªc_l¢
.
	`lo
(Ë=
	`fú°_l¢
(1).lo());

1414 
	`w_as£π3
(
	`∑πôi⁄_ödex
() == -1);

1417 
	`DBGTHRD
(<<"La°Ö¨tôi⁄ i†" << 
œ°_∑πôi⁄


1418 << "Éxi°ög = " << 
œ°_∑πôi⁄_exi°s


1428 
∑πôi⁄_numbî_t
 
n
;

1429 
∑πôi⁄_t
 *
p
;

1431 
	`DBGTHRD
(<<" mö_chk±_ªc_l¢ " << 
	`mö_chk±_ªc_l¢
()

1432 << "Üa°_∑πôi⁄ " << 
œ°_∑πôi⁄
);

1433 
	`w_as£π3
(
	`mö_chk±_ªc_l¢
().
	`hi
(Ë<
œ°_∑πôi⁄
);

1435 
n
 = 
mö_ödex
;Ç < 
	`mö_chk±_ªc_l¢
().
	`hi
();Ç++) {

1437 
	`DBGTHRD
(<<" de°roy_fûê" << 
n
 << "false");

1438 
	`de°roy_fûe
(
n
, 
Ál£
);

1440 
n
 = 
_mö_chk±_ªc_l¢
.
	`hi
();Ç <
œ°_∑πôi⁄
;Ç++) {

1445 
l¢_t
 
œ°höt
;

1446 
q
=0; q<
li°Àngth
; q++) {

1447 if(
l¢li°
[
q
].
	`hi
(Ë=
n
) {

1448 
œ°höt
 = 
l¢li°
[
q
];

1453 
	`DBGTHRD
(<<" o≥¿" << 
n
 << "true, false,Årue");

1457 
p
 = 
	`_›í_∑πôi⁄_f‹_ªad
(
n
, 
œ°höt
, 
åue
,Årue);

1458 
	`w_as£π3
(
p
 =
	`_n_∑πôi⁄
(
n
));

1459 
p
->
	`˛o£
();

1460 
	`un£t_cuºít
();

1461 
	`DBGTHRD
(<<" d⁄êw/ o≥¿" << 
n
 );

1469 
fûeoff_t
 
pos
 = 0;

1472 
	`DBGTHRD
(<<"ÅruncateÜast completeÜogÑec ");

1497 
	`make_log_«me
(
œ°_∑πôi⁄
, 
‚ame
, 
smÀvñ_0
::
max_dev«me
);

1498 
	`DBGTHRD
(<<" checkög " << 
‚ame
);

1500 
FILE
 *
f
 = 
	`f›í
(
‚ame
, "r");

1501 
	`DBGTHRD
(<<" o≥√d " << 
‚ame
 << " f∞" << 
f
 << "Öo†" << 
pos
);

1503 
fûeoff_t
 
°¨t_pos
 = 
pos
;

1505 #i‚de‡
SM_LOG_UNIX_NO_SKIP_SEEK


1512 c⁄° 
l¢_t
 &
£ek_l¢
 = 
_ma°î_l¢
;

1514 i‡(
f
 && 
£ek_l¢
.
	`hi
(Ë=
œ°_∑πôi⁄
) {

1515 
°¨t_pos
 = 
£ek_l¢
.
	`lo
();

1517 
	`DBG
(<<" sìkögÅÿ°¨t_po†" << 
°¨t_pos
);

1518 i‡(
	`f£ek
(
f
, 
°¨t_pos
, 
SEEK_SET
)) {

1519 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


1520 << "logÑód: c™'à£ekÅÿ" << 
°¨t_pos


1522 << 
ídl
;

1523 
°¨t_pos
 = 
pos
;

1526 
pos
 = 
°¨t_pos
;

1529 
	`DBG
(<<"Öo†i†now " << 
pos
);

1531 i‡(
f
) {

1532 
ÆloˇN
<
logªc_t
::
hdr_sz
> 
buf
;

1534 
	`DBGTHRD
(<<"‰ód " << 
‚ame
 << " sz" << 
logªc_t
::
hdr_sz
);

1535 
n
;

1536 (
n
 = 
	`‰ód
(
buf
, 1, 
logªc_t
::
hdr_sz
, 
f
))

1537 =
logªc_t
::
hdr_sz
)

1539 
	`DBG
(<<"Öo†i†now " << 
pos
);

1540 
logªc_t
 *
l
 = (logªc_t*Ë(*Ë
buf
;

1542 if–
l
->
	`ty≥
(Ë=
logªc_t
::
t_skù
) {

1546 
smsize_t
 
Àn
 = 
l
->
	`Àngth
();

1547 
	`DBGTHRD
(<<"sˇ¬edÜogÑe¯ty≥=" << (
l
->
	`ty≥
())

1548 << "Üígth=" << 
l
->
	`Àngth
());

1550 if(
Àn
 < 
logªc_t
::
hdr_sz
) {

1553 
	`w_as£π1
(
pos
 =
°¨t_pos
);

1555 
	`w_as£π1
(
Àn
 >
logªc_t
::
hdr_sz
);

1557 
	`DBGTHRD
(<<"hdr_sz " << 
logªc_t
::
hdr_sz
 );

1558 
	`DBGTHRD
(<<"À¿" << 
Àn
 );

1563 
Àn
 -(
logªc_t
::
hdr_sz
 + (
l¢_t
));

1566 
	`DBG
(<<"Öo†i†now " << 
pos
);

1567 
	`DBGTHRD
(<<"£ekáddôi⁄Æ +" << 
Àn
 << " forÜsn_ck");

1568 i‡(
	`f£ek
(
f
, 
Àn
, 
SEEK_CUR
)) {

1569 i‡(
	`„of
(
f
)) ;

1571 
	`DBGTHRD
(<<"·ñ»ßy†po†i†" << 
	`·ñl
(
f
));

1573 
l¢_t
 
l¢_ck
;

1574 
n
 = 
	`‰ód
(&
l¢_ck
, 1, ÷¢_ck), 
f
);

1575 
	`DBGTHRD
(<<"ªadÜ¢_ckÑëu∫ #byãs=" << 
n
 );

1576 i‡(
n
 !(
l¢_ck
)) {

1577 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1579 i‡(! 
	`„of
(
f
)) {

1580 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1581 << "ERROR: u√x≥˘edÜog fûêöc⁄si°ícy." << 
Êushl
;

1582 
	`W_COERCE
(
e
);

1586 
	`DBGTHRD
(<<"po†" << 
pos


1587 << "Ü¢_ck = " <<
l¢_ck
);

1590 i‡–(
l¢_ck
.
	`lo
(Ë!
pos
) ||

1591 (
l¢_ck
.
	`hi
(Ë!(
uöt4_t
Ë
œ°_∑πôi⁄
 ) ) {

1593 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io
 <<

1595 << 
Êushl
;

1596 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io
 <<

1597 " Recovîy wû»c⁄töuê..." << 
Êushl
;

1602 
pos
 = 
	`·ñl
(
f
) ;

1605 
	`f˛o£
(
f
);

1608 
	`DBGTHRD
(<<"ex∂icôÅrunˇtög " << 
‚ame
 << "Åÿ" << 
pos
);

1609 
	`os_åunˇã
(
‚ame
, 
pos
 );

1615 
	`DBGTHRD
(<<"ex∂icô o≥nög " << 
‚ame
 );

1616 
f
 = 
	`f›í
(
‚ame
, "a");

1617 i‡(!
f
) {

1618 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

1619 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1620 << "f›í(" << 
‚ame
 << "):" << 
ídl
 << 
e
 <<Éndl;

1621 
	`W_COERCE
(
e
);

1623 
skù_log
 *
s
 = 
√w
 skip_log;

1624 
s
->
	`£t_l¢_ck
–
	`l¢_t
(
	`uöt4_t
(
œ°_∑πôi⁄
), 
	`sm_diskaddr_t
(
pos
)) );

1626 
	`DBGTHRD
(<<"wrôög skù_logáàpo†" << 
pos
 << " withÜsn "

1627 << 
s
->
	`gë_l¢_ck
()

1628 << "™d sizê" << 
s
->
	`Àngth
()

1630 #ifde‡
W_TRACE


1632 
fûeoff_t
 
eof2
 = 
	`·ñl
(
f
);

1633 
	`DBGTHRD
(<<"eo‡i†now " << 
eof2
);

1637 i‡–
	`fwrôe
(
s
, s->
	`Àngth
(), 1, 
f
) != 1) {

1638 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1639 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io
 <<

1640 " fwrôe: c™'àwrôêskùÑe¯tÿlog ..." << 
Êushl
;

1641 
	`W_COERCE
(
e
);

1643 #ifde‡
W_TRACE


1645 
fûeoff_t
 
eof2
 = 
	`·ñl
(
f
);

1646 
	`DBGTHRD
(<<"eo‡i†now " << 
eof2
);

1649 
fûeoff_t
 
o
 = 
pos
;

1650 
o
 +
s
->
	`Àngth
();

1651 
o
 = o % 
BLOCK_SIZE
;

1652 
	`DBGTHRD
(<<"BLOCK_SIZE " << (
BLOCK_SIZE
));

1653 if(
o
 > 0) {

1654 
o
 = 
BLOCK_SIZE
 - o;

1655 *
junk
 = 
√w
 [(
o
)];

1656 i‡(!
junk
)

1657 
	`W_FATAL
(
fcOUTOFMEMORY
);

1658 #i‡
ZERO_INIT


1659 
	`Ârötf
(
°dîr
, "CÀ¨ög bef‹êwrôê%d %s\n", 
__LINE__


1660 , 
__FILE__
);

1661 
	`mem£t
(
junk
,'\0', (
o
));

1664 
	`DBGTHRD
(<<"wrôög junk o‡Àngth " << 
o
);

1665 #ifde‡
W_TRACE


1667 
fûeoff_t
 
eof2
 = 
	`·ñl
(
f
);

1668 
	`DBGTHRD
(<<"eo‡i†now " << 
eof2
);

1671 
n
 = 
	`fwrôe
(
junk
, (
o
), 1, 
f
);

1672 i‡–
n
 != 1) {

1673 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1674 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io
 <<

1675 " fwrôe: c™'àround ouàlog block sizê..." << 
Êushl
;

1676 
	`W_COERCE
(
e
);

1678 #ifde‡
W_TRACE


1680 
fûeoff_t
 
eof2
 = 
	`·ñl
(
f
);

1681 
	`DBGTHRD
(<<"eo‡i†now " << 
eof2
);

1684 
dñëe
[] 
junk
;

1685 
o
 = 0;

1687 
dñëe
 
s
;

1689 
eof
 = 
	`·ñl
(
f
);

1690 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1691 
	`DBGTHRD
(<<"eo‡i†now " << 
eof
);

1694 if(((
eof
Ë% 
BLOCK_SIZE
) != 0) {

1695 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io
 <<

1696 " fãŒ: c™'àwrôêskùÑe¯tÿlog ..." << 
Êushl
;

1697 
	`W_COERCE
(
e
);

1699 
	`W_IGNORE
(
e
);

1701 i‡(
	`os_fsync
(
	`fûío
(
f
)) < 0) {

1702 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1703 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io
 <<

1704 " fsync: c™'àsyn¯fsyn¯åunˇãdÜog ..." << 
Êushl
;

1705 
	`W_COERCE
(
e
);

1708 #i‡
W_DEBUG_LEVEL
 > 2

1710 
w_rc_t
 
e
;

1711 
os_°©_t
 
°©buf
;

1712 
e
 = 
	`MAKERC
(
	`os_f°©
(
	`fûío
(
f
), &
°©buf
Ë=-1, 
eOS
);

1713 i‡(
e
.
	`is_îr‹
()) {

1714 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1715 << " C™nŸ sèàfd " << 
	`fûío
(
f
)

1716 << ":" << 
ídl
 << 
e
 <<Énd»<< 
Êushl
;

1717 
	`W_COERCE
(
e
);

1719 
	`DBGTHRD
(<< "sizêo‡" << 
‚ame
 << " i†" << 
°©buf
.
°_size
);

1722 
	`f˛o£
(
f
);

1726 
	`w_as£π3
(!
œ°_∑πôi⁄_exi°s
);

1735 
	`DBGTHRD
–<< "∑πôi⁄Çum = " << 
	`∑πôi⁄_num
()

1736 <<" cuºít_l¢ " << 
	`cuº_l¢
()

1737 <<" duøbÀ_l¢ " << 
	`duøbÀ_l¢
());

1739 
l¢_t
 
	`√w_l¢
(
œ°_∑πôi⁄
, 
pos
);

1740 
_cuº_l¢
 = 
_duøbÀ_l¢
 = 
_Êush_l¢
 = 
√w_l¢
;

1742 
	`DBGTHRD
–<< "∑πôi⁄Çum = " << 
	`∑πôi⁄_num
()

1743 <<" cuºít_l¢ " << 
	`cuº_l¢
()

1744 <<" duøbÀ_l¢ " << 
	`duøbÀ_l¢
());

1758 
l¢_t
 
œ°höt
;

1759 
q
=0; q<
li°Àngth
; q++) {

1760 if(
l¢li°
[
q
].
	`hi
(Ë=
œ°_∑πôi⁄
) {

1761 
œ°höt
 = 
l¢li°
[
q
];

1764 
∑πôi⁄_t
 *
p
 = 
	`_›í_∑πôi⁄_f‹_≠≥nd
(
œ°_∑πôi⁄
, 
œ°höt
,

1765 
œ°_∑πôi⁄_exi°s
, 
åue
);

1768 if(!
p
) {

1769 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1771 << 
œ°_∑πôi⁄
 << 
Êushl
;

1772 
	`W_FATAL
(
eINTERNAL
);

1775 
	`w_as£π3
(
p
->
	`num
(Ë=
œ°_∑πôi⁄
);

1776 
	`w_as£π3
(
	`∑πôi⁄_num
(Ë=
œ°_∑πôi⁄
);

1777 
	`w_as£π3
(
	`∑πôi⁄_ödex
(Ë=
p
->
	`ödex
());

1780 
	`DBGTHRD
–<< "∑πôi⁄Çum = " << 
	`∑πôi⁄_num
()

1781 <<" cuºít_l¢ " << 
	`cuº_l¢
()

1782 <<" duøbÀ_l¢ " << 
	`duøbÀ_l¢
());

1784 
cs
.
	`exô
();

1787 
îæog
->
˛og
 << 
öfo_¥io


1788 << "Log max_∑πôi⁄_sizê" << 
	`max_∑πôi⁄_size
(Ë<< 
ídl


1790 << 
	`max_∑πôi⁄_size
(Ë* 
PARTITION_COUNT
 << 
ídl


1791 << "Log mö_∑πôi⁄_sizê" << 
	`mö_∑πôi⁄_size
(Ë<< 
ídl


1793 << 
	`mö_∑πôi⁄_size
(Ë* 
PARTITION_COUNT
 << 
ídl
;

1795 
îæog
->
˛og
 << 
öfo_¥io


1796 << "Log BLOCK_SIZE (log wrôêsizeË" << 
BLOCK_SIZE


1797 << 
ídl


1798 << "Log segsize(Ë÷og buf„∏sizeË" << 
	`£gsize
()

1799 << 
ídl


1800 << "Log segsize()/BLOCK_SIZE " << (
	`£gsize
())/(
BLOCK_SIZE
)

1801 << 
ídl
;

1803 
îæog
->
˛og
 << 
öfo_¥io


1804 << "U£r-›ti⁄ smÀvñ_0::max_logsz " << 
max_logsz
 << 
ídl


1805 << "Log _∑πôi⁄_d©a_sizê" << 
_∑πôi⁄_d©a_size


1806 << 
ídl


1808 << (
_∑πôi⁄_d©a_size
)/(
	`£gsize
())

1809 << 
ídl


1811 << 
_∑πôi⁄_d©a_size
 + 
BLOCK_SIZE


1812 << 
ídl
;

1814 
îæog
->
˛og
 << 
öfo_¥io


1815 << "Log _°¨à" << 
	`°¨t_byã
(Ë<< "Énd_byã(Ë" << 
	`íd_byã
()

1816 << 
ídl


1817 << "Log _cuº_l¢ " << 
_cuº_l¢


1818 << " _duøbÀ_l¢ " << 
_duøbÀ_l¢


1819 << 
ídl
;

1820 
îæog
->
˛og
 << 
öfo_¥io


1821 << "CuºÉpoch ba£_l¢ " << 
_cur_ïoch
.
ba£_l¢


1822 << 
ídl


1823 << "CuºÉpoch ba£ " << 
_cur_ïoch
.
ba£


1824 << 
ídl


1825 << "CuºÉpoch sèπ " << 
_cur_ïoch
.
°¨t


1826 << 
ídl


1827 << "CuºÉpochÉnd " << 
_cur_ïoch
.
íd


1828 << 
ídl
;

1829 
îæog
->
˛og
 << 
öfo_¥io


1830 << "OldÉpoch ba£_l¢ " << 
_ﬁd_ïoch
.
ba£_l¢


1831 << 
ídl


1832 << "OldÉpoch ba£ " << 
_ﬁd_ïoch
.
ba£


1833 << 
ídl


1834 << "OldÉpoch sèπ " << 
_ﬁd_ïoch
.
°¨t


1835 << 
ídl


1836 << "OldÉpochÉnd " << 
_ﬁd_ïoch
.
íd


1837 << 
ídl
;

1839 
	}
}

1847 
boﬁ
 
	gu£_decou∂ed_mem˝y
 = 
åue
;

1848 
boﬁ
 
	gíabÀ_Á°∑th
 = 
Ál£
;

1849 
boﬁ
 
	gíabÀ_mcs_expo£
 = 
åue
;

1850 
boﬁ
 
	gu£_combö©i⁄_¨øy
 = 
åue
;

1851 
boﬁ
 
	gu£_expo£_groups
 = 
åue
;

1852 
boﬁ
 
	g¥öt_l¢_groups
 = 
Ál£
;

1853 
boﬁ
 
	g¥öt_expo£_groups
 = 
Ál£
;

1854 
boﬁ
 
	g¥öt_w‹kög_£t
 = 
Ál£
;

1856 
	s„©uª_£t
 {

1857 c⁄°* 
	m°r
;

1858 
boﬁ
 
	m›î©‹
[](
	mc
) const {

1859  
°rchr
(
°r
, 
touµî
(
c
)Ë|| såchr(°r, 
tﬁowî
(c));

1862 
rc_t


1863 
	glog_m
::
	$£t_log_„©uªs
(c⁄°* 
„©uªs
) {

1864 
„©uª_£t
 
fs
 = {
„©uªs
};

1865 if(
fs
['f'] && !fs['c'])

1866  
	`RC
(
eBADARGUMENT
);

1867 if(
fs
['m'] && !fs['d'])

1868  
	`RC
(
eBADARGUMENT
);

1869 if(
fs
['e'] && !fs['m'])

1870  
	`RC
(
eBADARGUMENT
);

1871 if(
fs
['x'] && !fs['e'])

1872  
	`RC
(
eBADARGUMENT
);

1873 if(
fs
['l'] && !fs['c'])

1874  
	`RC
(
eBADARGUMENT
);

1875 
íabÀ_Á°∑th
 = 
fs
['f'];

1876 
u£_combö©i⁄_¨øy
 = 
fs
['c'];

1877 
u£_decou∂ed_mem˝y
 = 
fs
['d'];

1878 
íabÀ_mcs_expo£
 = 
fs
['m'];

1879 
u£_expo£_groups
 = 
fs
['e'];

1880 
¥öt_expo£_groups
 = 
fs
['x'];

1881 
¥öt_l¢_groups
 = 
fs
['l'];

1882 
¥öt_w‹kög_£t
 = 
fs
['w'];

1883  
RCOK
;

1884 
	}
}

1888 
	glog_m
::
	$gë_log_„©uªs
() {

1889 c⁄° 
„©uªs
[] = {

1890 
u£_combö©i⁄_¨øy
? 'c' : '-',

1891 
íabÀ_Á°∑th
? 'f' : '-',

1892 
¥öt_l¢_groups
? 'l' : '-',

1893 
u£_decou∂ed_mem˝y
? 'd' : '-',

1894 
íabÀ_mcs_expo£
? 'm' : '-',

1895 
u£_expo£_groups
? 'e' : '-',

1896 
¥öt_expo£_groups
? 'x' : '-',

1897 
¥öt_w‹kög_£t
? 'w' : '-',

1900 * 
rvÆ
 = 
√w
 [(
„©uªs
)];

1901 
	`°r˝y
(
rvÆ
, 
„©uªs
);

1902  
rvÆ
;

1903 
	}
}

1907 
	glog_c‹e
::~
	$log_c‹e
()

1909 if(
THE_LOG
 !
NULL
)

1911 
∑πôi⁄_t
 *
p
;

1912 
uöt
 
i
 = 0; i < 
PARTITION_COUNT
; i++) {

1913 
p
 = 
	`_∑πôi⁄
(
i
);

1914 
p
->
	`˛o£_f‹_ªad
();

1915 
p
->
	`˛o£_f‹_≠≥nd
();

1916 
	`DBG
(<< " calling clear");

1917 
p
->
	`˛ór
();

1919 
dñëe
 [] 
_ªadbuf
;

1920 
dñëe
 
_skù_log
;

1921 
	`w_as£π1
(
_duøbÀ_l¢
 =
_cuº_l¢
);

1922 
dñëe
 [] 
_buf
;

1924 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
_waô_Êush_lock
));

1925 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_waô_c⁄d
));

1926 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_Êush_c⁄d
));

1927 
THE_LOG
 = 
NULL
;

1928 
i
=0; i < 
_a˘ive_¶Ÿs
; i++) {

1929 
ﬁd_cou¡
 = 
	`©omic_sw≠_ul⁄g
((*Ë&
_¶Ÿs
[
i
]->
cou¡
, 
SLOT_UNUSED
);

1930 if(
ﬁd_cou¡
 !
SLOT_AVAILABLE
 && old_cou¡ !
SLOT_UNUSED
) {

1931 
	`Ârötf
(
°dîr
, "ﬁd_cou¡ = %ld", 
ﬁd_cou¡
);

1932 
	`w_as£π1
(
ﬁd_cou¡
 =
SLOT_AVAILABLE
 || old_cou¡ =
SLOT_UNUSED
);

1935 
dñëe
 [] 
_¶Ÿs
;

1936 
dñëe
 
_¶Ÿ_¨øy
;

1938 
	}
}

1940 
∑πôi⁄_t
 *

1941 
	glog_c‹e
::
	$_∑πôi⁄
(
∑πôi⁄_ödex_t
 
i
) const

1943  
i
<0 ? (
∑πôi⁄_t
 *)0: (∑πôi⁄_à*Ë&
_∑π
[i];

1944 
	}
}

1948 
	glog_c‹e
::
	$de°roy_fûe
(
∑πôi⁄_numbî_t
 
n
, 
boﬁ
 
pmsg
)

1950 *
‚ame
 = 
√w
 [
smÀvñ_0
::
max_dev«me
];

1951 i‡(!
‚ame
)

1952 
	`W_FATAL
(
fcOUTOFMEMORY
);

1953 
w_auto_dñëe_¨øy_t
<> 
	`ad_‚ame
(
‚ame
);

1954 
	`make_log_«me
(
n
, 
‚ame
, 
smÀvñ_0
::
max_dev«me
);

1955 i‡(
	`u∆ök
(
‚ame
) == -1) {

1956 
w_rc_t
 
e
 = 
	`RC
(
eOS
);

1957 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


1958 << "de°roy_fûê" << 
n
 << " " << 
‚ame
 << ":" <<
ídl


1959 << 
e
 << 
ídl
;

1960 if(
pmsg
) {

1961 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


1963 << 
‚ame
 << '\"' << 
Êushl
;

1964 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


1965 << " " << 
e
 << 
Êushl
;

1968 
	}
}

1979 
	glog_c‹e
::
	$_£t_size
(
fûeoff_t
 
size
)

1988 
fûeoff_t
 
ußbÀ_psize
 = 
size
/
PARTITION_COUNT
 - 
BLOCK_SIZE
;

1991 if(
ußbÀ_psize
 < 
_£gsize
)

1992 
	`W_FATAL
(
eOUTOFLOGSPACE
);

1995 
_∑πôi⁄_d©a_size
 = 
	`_Êo‹
(
ußbÀ_psize
, (
	`£gsize
()));

1997 if(
_∑πôi⁄_d©a_size
 == 0)

2000 
	`Ârötf
(
°dîr
,

2002 ()
size
, (Ë
ußbÀ_psize
, (Ë
	`£gsize
(), 
BLOCK_SIZE
);

2004 
	`Ârötf
(
°dîr
, "needátÜeast %ld (%ld * 1024 = %lld) \n",

2005 (Ë
	`_gë_mö_size
(),

2006 (Ë
	`_gë_mö_size
()/1024,

2007 (Ë1024 *(
	`_gë_mö_size
()/1024)

2009 
	`W_FATAL
(
eOUTOFLOGSPACE
);

2011 
_∑πôi⁄_size
 = 
_∑πôi⁄_d©a_size
 + 
BLOCK_SIZE
;

2024 
	`ªÀa£_•a˚
(
	`ªcovîabÀ_•a˚
(
PARTITION_COUNT
));

2025 if(!
	`vîify_chk±_ª£rv©i⁄
()

2026 || 
_•a˚_rsvd_f‹_chk±
 > 
_∑πôi⁄_d©a_size
) {

2027 
	`Ârötf
(
°dîr
,

2031 ()
_∑πôi⁄_d©a_size
, ()
_•a˚_rsvd_f‹_chk±
);

2032 
	`W_FATAL
(
eOUTOFLOGSPACE
);

2034 
	}
}

2036 
	glog_c‹e
::
	$_acquúe_buf„r_•a˚_f‹_óch
(
ö£π_öfo
* 
öfo
, 
ªcsize
)

2038 
	`INC_TSTAT
(
log_ö£πs
);

2040 i‡(
nŸ
 
u£_combö©i⁄_¨øy
) {

2041 
	`w_as£π2
(()(
ªcsize
Ë<(
logªc_t
));

2043 
	`w_as£π2
(
ªcsize
 > 0);

2081 *&
_waôög_f‹_•a˚
 ||

2082 
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë+ 
ªcsize
 > 
	`£gsize
(Ë- 2*
BLOCK_SIZE
)

2084 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2086 
	`CRITICAL_SECTION
(
cs
, 
_waô_Êush_lock
);

2087 
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë+ 
ªcsize
 > 
	`£gsize
(Ë- 2*
BLOCK_SIZE
)

2089 
_waôög_f‹_•a˚
 = 
åue
;

2092 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_Êush_c⁄d
));

2093 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_waô_c⁄d
, &
_waô_Êush_lock
));

2096 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2166 
	`w_as£π2
(
_buf_ïoch
.
íd
 >0 && _buf_ïoch.íd <
	`£gsize
());

2170 
	`w_as£π2
(
_buf_ïoch
.
íd
 % 
	`£gsize
(Ë=
	`íd_byã
() % segsize());

2176 
	`w_as£π2
(
_buf_ïoch
.
íd
 % 
	`£gsize
(Ë=
_cuº_l¢
.
	`lo
() % segsize());

2180 
	`w_as£π2
(
	`íd_byã
(Ë>
	`°¨t_byã
());

2185 
	`w_as£π2
(
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë<
	`£gsize
(Ë- 2 * 
BLOCK_SIZE
);

2188 
íd
 = 
_buf_ïoch
.end;

2189 
ﬁd_íd
 = 
_buf_ïoch
.
ba£
 + 
íd
;

2190 
√w_íd
 = 
íd
 + 
ªcsize
;

2193 
•ûlsize
 = 
√w_íd
 - 
	`£gsize
();

2194 
l¢_t
 
cuº_l¢
 = 
_cuº_l¢
;

2195 
l¢_t
 
√xt_l¢
 = 
_buf_ïoch
.
ba£_l¢
 + 
√w_íd
;

2196 
√w_ba£
 = -1;

2197 
°¨t_pos
 = 
íd
;

2199 if(
•ûlsize
 <= 0) {

2201 
_buf_ïoch
.
íd
 = 
√w_íd
;

2203 if(
√xt_l¢
.
	`lo
(Ë<
_∑πôi⁄_d©a_size
) {

2205 
_buf_ïoch
.
ba£_l¢
 +
_£gsize
;

2206 
_buf_ïoch
.
ba£
 +
_£gsize
;

2207 
_buf_ïoch
.
°¨t
 = 0;

2208 
_buf_ïoch
.
íd
 = 
√w_íd
 = 
•ûlsize
;

2212 
À·ovîs
 = 
_∑πôi⁄_d©a_size
 - 
cuº_l¢
.
	`lo
();

2213 
	`w_as£π2
(
À·ovîs
 >= 0);

2214 if(
À·ovîs
 && !
	`ª£rve_•a˚
(leftovers)) {

2215 
öfo
->
îr‹
 = 
eOUTOFLOGSPACE
;

2216 if(
u£_decou∂ed_mem˝y
)

2217 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2221 
cuº_l¢
 = 
	`fú°_l¢
(
√xt_l¢
.
	`hi
()+1);

2222 
√xt_l¢
 = 
cuº_l¢
 + 
ªcsize
;

2223 
√w_ba£
 = 
_buf_ïoch
.
ba£
 + 
_£gsize
;

2224 
°¨t_pos
 = 0;

2225 
_buf_ïoch
 = 
	`ïoch
(
cuº_l¢
, 
√w_ba£
, 0, 
√w_íd
=
ªcsize
);

2229 
_cuº_l¢
 = 
√xt_l¢
;

2230 
_íd
 = 
_buf_ïoch
.
ba£
 + 
√w_íd
;

2232 if(
íabÀ_mcs_expo£
) {

2234 
öfo
->
me2
.
_∑ddög
 = 0;

2235 
öfo
->
¥ed2
 = 
_expo£_lock
.
	`__unß„_begö_acquúe
(&öfo->
me2
);

2238 if(
u£_decou∂ed_mem˝y
)

2239 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2240 if(
¥öt_w‹kög_£t
)

2241 (*
és_hi°o
)[
_íd
 - 
_°¨t
]++;

2243 
öfo
->
l¢
 = 
cuº_l¢
;

2244 
öfo
->
ﬁd_íd
 = old_end;

2245 
öfo
->
°¨t_pos
 = start_pos;

2246 
öfo
->
pos
 = 
°¨t_pos
 + 
ªcsize
;

2247 
öfo
->
√w_íd
 =Çew_end;

2248 
öfo
->
√w_ba£
 =Çew_base;

2249 
öfo
->
îr‹
 = 0;

2250 
	}
}

2252 
	glog_c‹e
::
	$_acquúe_buf„r_•a˚
(
ö£π_öfo
* 
öfo
, 
ªcsize
)

2254 
	`INC_TSTAT
(
log_ö£πs
);

2256 i‡(
nŸ
 
u£_combö©i⁄_¨øy
) {

2257 
	`w_as£π2
(()(
ªcsize
Ë<(
logªc_t
));

2259 
	`w_as£π2
(
ªcsize
 > 0);

2297 *&
_waôög_f‹_•a˚
 ||

2298 
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë+ 
ªcsize
 > 
	`£gsize
(Ë- 2 * 
BLOCK_SIZE
)

2300 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2302 
	`CRITICAL_SECTION
(
cs
, 
_waô_Êush_lock
);

2303 
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë+ 
ªcsize
 > 
	`£gsize
(Ë- 2*
BLOCK_SIZE
)

2305 
_waôög_f‹_•a˚
 = 
åue
;

2308 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_Êush_c⁄d
));

2309 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_waô_c⁄d
, &
_waô_Êush_lock
));

2312 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2382 
	`w_as£π2
(
_buf_ïoch
.
íd
 >0 && _buf_ïoch.íd <
	`£gsize
());

2386 
	`w_as£π2
(
_buf_ïoch
.
íd
 % 
	`£gsize
(Ë=
	`íd_byã
() % segsize());

2392 
	`w_as£π2
(
_buf_ïoch
.
íd
 % 
	`£gsize
(Ë=
_cuº_l¢
.
	`lo
() % segsize());

2396 
	`w_as£π2
(
	`íd_byã
(Ë>
	`°¨t_byã
());

2401 
	`w_as£π2
(
	`íd_byã
(Ë- 
	`°¨t_byã
(Ë<
	`£gsize
(Ë- 2 * 
BLOCK_SIZE
);

2404 
íd
 = 
_buf_ïoch
.end;

2405 
ﬁd_íd
 = 
_buf_ïoch
.
ba£
 + 
íd
;

2406 
√w_íd
 = 
íd
 + 
ªcsize
;

2409 
•ûlsize
 = 
√w_íd
 - 
	`£gsize
();

2410 
l¢_t
 
cuº_l¢
 = 
_cuº_l¢
;

2411 
l¢_t
 
√xt_l¢
 = 
_buf_ïoch
.
ba£_l¢
 + 
√w_íd
;

2412 
√w_ba£
 = -1;

2413 
°¨t_pos
 = 
íd
;

2415 if(
•ûlsize
 <= 0) {

2417 
_buf_ïoch
.
íd
 = 
√w_íd
;

2419 if(
√xt_l¢
.
	`lo
(Ë<
_∑πôi⁄_d©a_size
) {

2421 
_buf_ïoch
.
ba£_l¢
 +
_£gsize
;

2422 
_buf_ïoch
.
ba£
 +
_£gsize
;

2423 
_buf_ïoch
.
°¨t
 = 0;

2424 
_buf_ïoch
.
íd
 = 
√w_íd
 = 
•ûlsize
;

2428 
À·ovîs
 = 
_∑πôi⁄_d©a_size
 - 
cuº_l¢
.
	`lo
();

2429 
	`w_as£π2
(
À·ovîs
 >= 0);

2430 if(
À·ovîs
 && !
	`ª£rve_•a˚
(leftovers)) {

2431 
öfo
->
îr‹
 = 
eOUTOFLOGSPACE
;

2432 if(
u£_decou∂ed_mem˝y
)

2433 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2437 
cuº_l¢
 = 
	`fú°_l¢
(
√xt_l¢
.
	`hi
()+1);

2438 
√xt_l¢
 = 
cuº_l¢
 + 
ªcsize
;

2439 
√w_ba£
 = 
_buf_ïoch
.
ba£
 + 
_£gsize
;

2440 
°¨t_pos
 = 0;

2441 
_buf_ïoch
 = 
	`ïoch
(
cuº_l¢
, 
√w_ba£
, 0, 
√w_íd
=
ªcsize
);

2445 
_cuº_l¢
 = 
√xt_l¢
;

2446 
_íd
 = 
_buf_ïoch
.
ba£
 + 
√w_íd
;

2448 if(
íabÀ_mcs_expo£
) {

2450 
öfo
->
me2
.
_∑ddög
 = 0;

2451 
öfo
->
¥ed2
 = 
_expo£_lock
.
	`__unß„_begö_acquúe
(&öfo->
me2
);

2454 if(
u£_decou∂ed_mem˝y
)

2455 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2456 if(
¥öt_w‹kög_£t
)

2457 (*
és_hi°o
)[
_íd
 - 
_°¨t
]++;

2459 
öfo
->
l¢
 = 
cuº_l¢
;

2460 
öfo
->
ﬁd_íd
 = old_end;

2461 
öfo
->
°¨t_pos
 = start_pos;

2462 
öfo
->
pos
 = 
°¨t_pos
 + 
ªcsize
;

2463 
öfo
->
√w_íd
 =Çew_end;

2464 
öfo
->
√w_ba£
 =Çew_base;

2465 
öfo
->
îr‹
 = 0;

2466 
	}
}

2468 
l¢_t
 
	glog_c‹e
::
	$_c›y_to_buf„r
(
logªc_t
 &
ªc
, 
pos
, 
ªcsize
, 
ö£π_öfo
* 
öfo
)

2473 
l¢_t
 
æ¢
 = 
öfo
->
l¢
 + 
pos
;

2474 
ªc
.
	`£t_l¢_ck
(
æ¢
);

2477 
pos
 +
öfo
->
°¨t_pos
;

2478 if(
pos
 >
_£gsize
)

2479 
pos
 -
_£gsize
;

2481 c⁄°* 
d©a
 = (c⁄°*Ë&
ªc
;

2482 
•ûlsize
 = 
pos
 + 
ªcsize
 - 
_£gsize
;

2483 if(
•ûlsize
 <= 0) {

2485 
	`mem˝y
(
_buf
+
pos
, 
d©a
, 
ªcsize
);

2500 
∑πsize
 = 
ªcsize
 - 
•ûlsize
;

2504 
	`mem˝y
(
_buf
+
pos
, 
d©a
, 
∑πsize
);

2505 
	`mem˝y
(
_buf
, 
d©a
+
∑πsize
, 
•ûlsize
);

2508  
æ¢
;

2509 
	}
}

2511 c⁄° 
	gMAX_THREADS
 = 256;

2512 
	gcombö©i⁄_°©s
[
MAX_THREADS
];

2513 
	gexpo£_°©s
[1000*
MAX_THREADS
];

2516 
boﬁ
 
	glog_c‹e
::
	$_waô_f‹_expo£
(
ö£π_öfo
* 
öfo
, 
boﬁ
 
©ãm±_ab‹t
) {

2517 
	`w_as£π1
(
SLOT_FINISHED
 =
öfo
->
	`vthis
()->
cou¡
);

2518 
	`memb¨_¥odu˚r
();

2519 if(
íabÀ_mcs_expo£
) {

2520 if(
©ãm±_ab‹t
 && 
öfo
->
¥ed2
 && 
_¶Ÿ_¨øy
->
	`ödexof
(info) % 32) {

2521 
waôög
 = 
WAITING
.
hq
.
_°©e
;

2522 
	`memb¨_exô
();

2523 if(
öfo
->
me2h
.
_°©e
 =
waôög
 &&

2524 
waôög
 =
	`©omic_ˇs_64
(&
öfo
->
me2h
.
_°©e
, waôög, 
ABORT_ME
.
hq
._state))

2527  
åue
;

2530 
_expo£_lock
.
	`__unß„_íd_acquúe
(&
öfo
->
me2
, info->
¥ed2
);

2533 
	`_•ö_⁄_ïoch
(
öfo
->
ﬁd_íd
);

2535  
Ál£
;

2536 
	}
}

2538 
boﬁ
 
	glog_c‹e
::
	$_upd©e_ïochs
(
ö£π_öfo
* 
öfo
, 
boﬁ
 
©ãm±_ab‹t
) {

2545 if–
	`_waô_f‹_expo£
(
öfo
, 
©ãm±_ab‹t
))

2546  
åue
;

2553 
cou¡
 = 0;

2554 
do_upd©e
:

2555 ++
cou¡
;

2556 
	`w_as£π1
(*&
_cur_ïoch
.
	`vthis
()->
íd
 + *&_cur_ïoch.vthis()->
ba£
 =
öfo
->
ﬁd_íd
);

2557 if(
öfo
->
√w_ba£
 > 0) {

2568 
	`CRITICAL_SECTION
(
cs
, 
_Êush_lock
);

2569 
	`w_as£π3
(
_ﬁd_ïoch
.
°¨t
 =_ﬁd_ïoch.
íd
);

2570 
_ﬁd_ïoch
 = 
_cur_ïoch
;

2571 
_cur_ïoch
 = 
	`ïoch
(
öfo
->
l¢
, info->
√w_ba£
, 0, info->
√w_íd
);

2573 if(
öfo
->
pos
 > 
_£gsize
) {

2575 
	`CRITICAL_SECTION
(
cs
, 
_Êush_lock
);

2576 
	`w_as£π3
(
_ﬁd_ïoch
.
°¨t
 =_ﬁd_ïoch.
íd
);

2577 
_ﬁd_ïoch
 = 
	`ïoch
(
_cur_ïoch
.
ba£_l¢
, _cur_ïoch.
ba£
,

2578 
_cur_ïoch
.
°¨t
, 
	`£gsize
());

2579 
_cur_ïoch
.
ba£_l¢
 +
	`£gsize
();

2580 
_cur_ïoch
.
ba£
 +
	`£gsize
();

2581 
_cur_ïoch
.
°¨t
 = 0;

2582 
_cur_ïoch
.
íd
 = 
öfo
->
√w_íd
;

2586 
	`w_as£π1
(
_cur_ïoch
.
°¨t
 < 
öfo
->
√w_íd
);

2587 
_cur_ïoch
.
íd
 = 
öfo
->
√w_íd
;

2589 if(
íabÀ_mcs_expo£
) {

2598 
	`as£π
(
SLOT_FINISHED
 =
öfo
->
	`vthis
()->
cou¡
);

2599 
	`memb¨_exô
();

2601 
mcs_lock
::
qnode
* 
q
;

2602 
ö£π_öfo
* 
i
;

2603 
n
;

2604 } 
√xt
 = { 
öfo
->
me2
.
	`vthis
()->
_√xt
 }, 
off£t
 = {0};

2605 if(!
√xt
.
q
) {

2606 if(&
öfo
->
me2
 !
_expo£_lock
.
_èû
 || &öfo->me2 !
	`©omic_ˇs_±r
(&_expo£_lock._èû, &öfo->me2, 
NULL
))

2607 
√xt
.
q
 = 
_expo£_lock
.
	`•ö_⁄_√xt
(&
öfo
->
me2
);

2610 if(
√xt
.
q
) {

2611 
√xt
.
n
 -(Ë&
off£t
.
i
->
me2
.
_√xt
;

2612 
vÆue
 = 
	`©omic_ˇs_64
(&
√xt
.
i
->
me2h
.
_°©e
, 
WAITING
.
hq
._state, 0);

2613 if(
vÆue
 =
ABORT_ME
.
hq
.
_°©e
) {

2615 
	`w_as£π1
(
SLOT_FINISHED
 =
√xt
.
i
->
	`vthis
()->
cou¡
);

2616 
	`w_as£π1
(
√xt
.
i
->
¥ed2
 =&
öfo
->
me2
);

2617 
	`memb¨_¥odu˚r
();

2618 
öfo
->
	`vthis
()->
cou¡
 = 
SLOT_UNUSED
;

2619 
öfo
 = 
√xt
.
i
;

2620 
do_upd©e
;

2625 #w¨nög 
dól
 
wôh
 
vÆgröd
 
checks


2628 
	`memb¨_¥odu˚r
();

2629 
öfo
->
cou¡
 = 
SLOT_UNUSED
;

2630 if(
¥öt_expo£_groups
)

2631 
	`©omic_öc_ul⁄g
((*Ë&
expo£_°©s
[
cou¡
]);

2632  
Ál£
;

2633 
	}
}

2635 
	g°d
::
	tm≠
<,> 
	t°©_m≠
;

2636 
°©_m≠
 
	glog_°©s
;

2637 
	$¥öt_log_°©s
() {

2638 if(
¥öt_l¢_groups
) {

2639 
	`Ârötf
(
°dîr
, "Consolidationárray group size distribution:\n");

2640 
i
=0; i < ()((
combö©i⁄_°©s
)/(combination_stats[0])); i++) {

2641 
cou¡
 = 
combö©i⁄_°©s
[
i
];

2642 if(
cou¡
) {

2643 
	`Ârötf
(
°dîr
, " %ld %ld\n", 
i
, 
cou¡
);

2644 
combö©i⁄_°©s
[
i
] = 0;

2649 if(
¥öt_expo£_groups
) {

2650 
	`Ârötf
(
°dîr
, "Exposure group size distribution:\n");

2651 
i
=0; i < ()((
expo£_°©s
)/(expose_stats[0])); i++) {

2652 
cou¡
 = 
expo£_°©s
[
i
];

2653 if(
cou¡
) {

2654 
	`Ârötf
(
°dîr
, " %ld %ld\n", 
i
, 
cou¡
);

2655 
expo£_°©s
[
i
] = 0;

2659 if(
¥öt_w‹kög_£t
) {

2660 
hi°o
::
globÆ_hi°o
.
	`¥öt
();

2662 
	}
}

2664 c⁄° 
	gONE
 = 1l<<32;

2666 
	glog_c‹e
::
ö£π_öfo
* 
log_c‹e
::
	$_joö_¶Ÿ
(&
idx
, &
°¨t
, 
size
) {

2667 
	`w_as£π1
(
size
 > 0);

2668 
¥obe_¶Ÿ
:

2669 
idx
 %
_a˘ive_¶Ÿs
;

2670 
ö£π_öfo
* 
öfo
 = 
_¶Ÿs
[
idx
];

2672 
ﬁd_cou¡
 = 
öfo
->
	`vthis
()->
cou¡
;

2673 
joö_¶Ÿ
:

2674 if(
ﬁd_cou¡
 < 
SLOT_AVAILABLE
) {

2675 ++
idx
;

2676 
¥obe_¶Ÿ
;

2680 
√w_cou¡
 = 
ﬁd_cou¡
 + 
size
 + 
ONE
;

2681 
cur_cou¡
 = 
	`©omic_ˇs_ul⁄g
((*)&
öfo
->
cou¡
, 
ﬁd_cou¡
, 
√w_cou¡
);

2682 if(
cur_cou¡
 !
ﬁd_cou¡
) {

2683 
ﬁd_cou¡
 = 
cur_cou¡
;

2684 
joö_¶Ÿ
;

2686 
°¨t
 = 
ﬁd_cou¡
;

2687  
öfo
;

2688 
	}
}

2690 
	glog_c‹e
::
	$_Æloˇã_¶Ÿ
(
idx
) {

2691 
_¶Ÿs
[
idx
] = 
_¶Ÿ_¨øy
->
	`Æloˇã
();

2692 
	}
}

2695 
rc_t
 
	glog_c‹e
::
	$ö£π
(
logªc_t
 &
ªc
, 
l¢_t
* 
æ¢
) {

2696 
size
 = 
ªc
.
	`Àngth
();

2697 
	`w_as£π1
((
size_t
)
size
 <(
logªc_t
));

2707 
l¢_t
 
ªc_l¢
;

2708 
ö£π_öfo
* 
öfo
 = 0;

2709 
pos
 = 0;

2710 
boﬁ
 
acquúed
 = 
Ál£
;

2711 
ﬁd_cou¡
;

2712 
ãmp_cou¡
;

2713 if(
íabÀ_Á°∑th
 || !
u£_combö©i⁄_¨øy
) {

2714 
öfo
 = 
és_öfo_¨øy
->
	`Æloˇã
();

2715 if(
u£_combö©i⁄_¨øy
) {

2716 
acquúed
 = 
_ö£π_lock
.
	`©ãm±
(&
öfo
->
me
);

2719 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2720 
acquúed
 = 
åue
;

2722 if(
acquúed
) {

2723 
combö©i⁄_°©s
[0]++;

2724 
öfo
->
cou¡
 = 
SLOT_FINISHED
 - 
size
;

2725 
pos
 = 0;

2728 
	`_acquúe_buf„r_•a˚
(
öfo
, 
size
);

2729 if(
öfo
->
îr‹
) {

2731 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2732  
	`RC
(
öfo
->
îr‹
);

2737 
öfo
->
cou¡
 = 
SLOT_UNUSED
;

2741 if(!
acquúed
) {

2743 
idx
 = ()
	`±hªad_£lf
();

2744 
°¨t_pos
;

2745 
öfo
 = 
	`_joö_¶Ÿ
(
idx
, 
ﬁd_cou¡
, 
size
);

2746 
pos
 = 
ﬁd_cou¡
 & (
ONE
-1);

2751 if(
ﬁd_cou¡
 =
SLOT_AVAILABLE
) {

2752 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2753 
	`_Æloˇã_¶Ÿ
(
idx
);

2755 
cout
 << "Åhi†i†f‹ debug " << 
ídl
;

2756 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2759 
group_size
 = 
ﬁd_cou¡
 / 
ONE
;

2760 
combö©i⁄_°©s
[
group_size
]++;

2761 
ãmp_cou¡
 = 
ﬁd_cou¡
;

2762 
ﬁd_cou¡
 &
ONE
 - 1;

2763 
	`_acquúe_buf„r_•a˚_f‹_óch
(
öfo
, 
ﬁd_cou¡
);

2764 
	`memb¨_¥odu˚r
();

2765 if(!
öfo
->
îr‹
)

2766 
ªc_l¢
 = 
	`_c›y_to_buf„r
(
ªc
, 
pos
, 
size
, 
öfo
);

2769 if(
ﬁd_cou¡
 =
SLOT_AVAILABLE
) {

2774 
_ö£π_lock
.
	`acquúe
(&
öfo
->
me
);

2776 
	`as£π
(
öfo
->
	`vthis
()->
cou¡
 > 
SLOT_AVAILABLE
);

2779 
	`_Æloˇã_¶Ÿ
(
idx
);

2782 
ﬁd_cou¡
 = 
	`©omic_sw≠_ul⁄g
((*Ë&
öfo
->
cou¡
, 
SLOT_PENDING
);

2783 
group_size
 = 
ﬁd_cou¡
/
ONE
;

2784 
combö©i⁄_°©s
[
group_size
]++;

2785 
ﬁd_cou¡
 &(
ONE
-1);

2788 
	`_acquúe_buf„r_•a˚
(
öfo
, 
ﬁd_cou¡
);

2791 
	`memb¨_¥odu˚r
();

2792 
öfo
->
cou¡
 = 
SLOT_FINISHED
 - 
ﬁd_cou¡
;

2797 
	`as£π
(
ﬁd_cou¡
 > 
SLOT_AVAILABLE
);

2798 
ﬁd_cou¡
 = 
	`_•ö_⁄_cou¡
(&
öfo
->
cou¡
, 
SLOT_FINISHED
);

2809 
íd_cou¡
 = 
	`©omic_add_l⁄g_nv
((*)&
öfo
->
cou¡
, 
size
);

2810 
	`w_as£π3
(
íd_cou¡
 <
SLOT_FINISHED
);

2811 if(
íd_cou¡
 =
SLOT_FINISHED
) {

2812 if(!
öfo
->
îr‹
)

2813 
	`_upd©e_ïochs
(
öfo
, 
u£_expo£_groups
 && 
u£_decou∂ed_mem˝y
);

2814 if(!
u£_decou∂ed_mem˝y
)

2815 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2818 if(
ãmp_cou¡
 + 
size
 + 
ONE
 =
öfo
->
	`vthis
()->
cou¡
) {

2819 if(!
öfo
->
îr‹
)

2820 
	`_upd©e_ïochs
(
öfo
, 
u£_expo£_groups
 && 
u£_decou∂ed_mem˝y
);

2821 if(!
u£_decou∂ed_mem˝y
)

2822 
_ö£π_lock
.
	`ªÀa£
(&
öfo
->
me
);

2826 if(
öfo
->
îr‹
)

2827  
	`RC
(
öfo
->
îr‹
);

2829 if(
æ¢
Ë*æ¢ = 
ªc_l¢
;

2831 
	`ADD_TSTAT
(
log_byãs_gíî©ed
,
size
);

2832  
RCOK
;

2833 
	}
}

2835 
boﬁ
 
	gdißbÀ_waô_f‹_Êush
 = 
Ál£
;

2839 
rc_t
 
	glog_c‹e
::
	$Êush
(
l¢_t
 
l¢
, 
boﬁ
 
block
)

2841 
	`ASSERT_FITS_IN_POINTER
(
l¢_t
);

2845 
l¢
 = 
°d
::
	`mö
÷¢, (*&
_cuº_l¢
)+ -1);

2848 if(
l¢
 >*&
_duøbÀ_l¢
) {

2849 i‡(
dißbÀ_waô_f‹_Êush
 || !
block
) {

2850 *&
_waôög_f‹_Êush
 = 
åue
;

2851 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_Êush_c⁄d
));

2854 
	`CRITICAL_SECTION
(
cs
, 
_waô_Êush_lock
);

2855 
l¢
 >*&
_duøbÀ_l¢
) {

2856 *&
_waôög_f‹_Êush
 = 
åue
;

2859 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_Êush_c⁄d
));

2860 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_waô_c⁄d
, &
_waô_Êush_lock
));

2864 
	`INC_TSTAT
(
log_dup_sync_˙t
);

2866  
RCOK
;

2867 
	}
}

2874 
	glog_c‹e
::
	$Êush_d´m⁄
()

2880 
l¢_t
 
œ°_com∂ëed_Êush_l¢
;

2881 
boﬁ
 
suc˚ss
 = 
Ál£
;

2888 if(
dißbÀ_waô_f‹_Êush
)

2889 
	`u¶ìp
(1000);

2890 
	`CRITICAL_SECTION
(
cs
, 
_waô_Êush_lock
);

2891 if(
suc˚ss
 && (*&
_waôög_f‹_•a˚
 || *&
_waôög_f‹_Êush
)) {

2892 
_waôög_f‹_Êush
 = 
_waôög_f‹_•a˚
 = 
Ál£
;

2893 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
_waô_c⁄d
));

2897 if(*&
_shuâög_down
) {

2898 
_shuâög_down
 = 
Ál£
;

2903 if(!
suc˚ss
 && !*&
_waôög_f‹_•a˚
 && !*&
_waôög_f‹_Êush
) {

2906 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_Êush_c⁄d
, &
_waô_Êush_lock
));

2907 
	`INC_TSTAT
(
log_sync_˙t
);

2913 
l¢_t
 
l¢
 = 
	`Êush_d´m⁄_w‹k
(
œ°_com∂ëed_Êush_l¢
);

2916 
suc˚ss
 = (
l¢
 !
œ°_com∂ëed_Êush_l¢
);

2917 
œ°_com∂ëed_Êush_l¢
 = 
l¢
;

2921 
l¢_t
 
l¢
;

2922 (
l¢
=
	`Êush_d´m⁄_w‹k
(
œ°_com∂ëed_Êush_l¢
)) !=

2923 
œ°_com∂ëed_Êush_l¢
;

2924 
œ°_com∂ëed_Êush_l¢
=
l¢
) ;

2925 
	}
}

2942 
l¢_t
 
	glog_c‹e
::
	$Êush_d´m⁄_w‹k
(
l¢_t
 
ﬁd_m¨k
)

2944 
l¢_t
 
ba£_l¢_bef‹e
, 
ba£_l¢_a·î
;

2945 
ba£
, 
°¨t1
, 
íd1
, 
°¨t2
, 
íd2
;

2947 
	`CRITICAL_SECTION
(
cs
, 
_Êush_lock
);

2948 
ba£_l¢_bef‹e
 = 
_ﬁd_ïoch
.
ba£_l¢
;

2949 
ba£_l¢_a·î
 = 
_cur_ïoch
.
ba£_l¢
;

2950 
ba£
 = 
_cur_ïoch
.base;

2961 if(
_ﬁd_ïoch
.
°¨t
 =_ﬁd_ïoch.
íd
) {

2963 
°¨t2
 = 
_cur_ïoch
.
°¨t
;

2964 
íd2
 = 
_cur_ïoch
.
íd
;

2967 if(
°¨t2
 =
íd2
)

2968  
ﬁd_m¨k
;

2970 
_cur_ïoch
.
°¨t
 = 
íd2
;

2972 
°¨t1
 = 
°¨t2
;

2973 
íd1
 = 
°¨t2
;

2975 
ba£_l¢_bef‹e
 = 
ba£_l¢_a·î
;

2977 if(
ba£_l¢_bef‹e
.
	`fûe
(Ë=
ba£_l¢_a·î
.file()) {

2979 
°¨t2
 = 
_cur_ïoch
.
°¨t
;

2983 
íd2
 = 
_cur_ïoch
.
íd
;

2984 
_cur_ïoch
.
°¨t
 = 
íd2
;

2986 
°¨t1
 = 
_ﬁd_ïoch
.
°¨t
;

2987 
íd1
 = 
_ﬁd_ïoch
.
íd
;

2988 
_ﬁd_ïoch
.
°¨t
 = 
íd1
;

2990 
	`w_as£π1
(
ba£_l¢_bef‹e
 + 
	`£gsize
(Ë=
ba£_l¢_a·î
);

2996 
°¨t2
 = 0;

2997 
íd2
 = 0;

2999 
°¨t1
 = 
_ﬁd_ïoch
.
°¨t
;

3000 
íd1
 = 
_ﬁd_ïoch
.
íd
;

3003 
_ﬁd_ïoch
.
°¨t
 = 
íd1
;

3005 
	`w_as£π1
(
ba£_l¢_bef‹e
.
	`fûe
()+1 =
ba£_l¢_a·î
.file());

3009 
l¢_t
 
°¨t_l¢
 = 
ba£_l¢_bef‹e
 + 
°¨t1
;

3010 
l¢_t
 
íd_l¢
 = 
ba£_l¢_a·î
 + 
íd2
;

3011 
√w_°¨t
 = 
ba£
 + 
íd2
;

3014 
	`CRITICAL_SECTION
(
cs
, 
_comp_lock
);

3015 
_Êush_l¢
 = 
íd_l¢
;

3018 
	`w_as£π1
(
íd_l¢
 =
	`fú°_l¢
(
°¨t_l¢
.
	`hi
()+1)

3019 || 
íd_l¢
.
	`lo
(Ë- 
°¨t_l¢
.lo(Ë=(
íd1
-
°¨t1
Ë+ (
íd2
-
°¨t2
));

3025 
	`_ÊushX
(
°¨t_l¢
, 
°¨t1
, 
íd1
, 
°¨t2
, 
íd2
);

3027 
_duøbÀ_l¢
 = 
íd_l¢
;

3028 
_°¨t
 = 
√w_°¨t
;

3030  
íd_l¢
;

3031 
	}
}

3035 
rc_t
 
	glog_c‹e
::
	$com≥nßã
(
l¢_t
 
‹ig_l¢
,Ü¢_à
undo_l¢
)

3039 if(
‹ig_l¢
 =
undo_l¢
)

3040  
RCOK
;

3044 
	`w_as£π1
(
‹ig_l¢
 <
_cuº_l¢
);

3047 if(
‹ig_l¢
 < 
_Êush_l¢
)

3048  
	`RC
(
eBADCOMPENSATION
);

3050 
	`CRITICAL_SECTION
(
cs
, 
_comp_lock
);

3052 
l¢_t
 
Ê¢
 = 
_Êush_l¢
;

3053 if(
‹ig_l¢
 < 
Ê¢
)

3054  
	`RC
(
eBADCOMPENSATION
);

3063 
pos
 = 
‹ig_l¢
.
	`lo
(Ë% 
	`£gsize
();

3064 if(
pos
 >
	`£gsize
(Ë- 
logªc_t
::
hdr_sz
)

3065  
	`RC
(
eBADCOMPENSATION
);

3068 
	`w_as£π1
((
pos
 & 0x7) == 0);

3071 
logªc_t
* 
s
 = (logªc_t*Ë&
_buf
[
pos
];

3074 
	`w_as£π1
((
s
->
	`Àngth
() & 0x7) == 0);

3077 if(
pos
 + (
s
->
	`Àngth
()Ë> 
	`£gsize
())

3078  
	`RC
(
eBADCOMPENSATION
);

3080 
l¢_t
 
l¢_ck
 = 
s
->
	`gë_l¢_ck
();

3081 if(
l¢_ck
 !
‹ig_l¢
) {

3084 
	`Ârötf
(
°dîr
, "\nlsn_ck = %d.%lld, orig_lsn = %d.%lld\n",

3085 
l¢_ck
.
	`hi
(),

3086 ()(
l¢_ck
.
	`lo
()),

3087 
‹ig_l¢
.
	`hi
(),

3088 ()(
‹ig_l¢
.
	`lo
()));

3089 
˚º


3090 << 
__LINE__
 << " " 
__FILE__
 << " "

3091 << "logÑe¯i† " << *
s
 << 
ídl
;

3092  
	`RC
(
eBADCOMPENSATION
);

3094 
	`w_as£π1
(
s
->
	`¥ev
(Ë=
l¢_t
::
nuŒ
 || s->¥ev(Ë>
undo_l¢
);

3096 if(
s
->
	`is_undﬂbÀ_˛r
())

3097  
	`RC
(
eBADCOMPENSATION
);

3100 
	`DBGTHRD
(<<"COMPENSATING LOG RECORD " << 
undo_l¢
 << " : " << *
s
);

3101 
s
->
	`£t_˛r
(
undo_l¢
);

3102  
RCOK
;

3103 
	}
}

3106 
	glog_c‹e
::
	$gë_œ°_l¢s
(
l¢_t
 *
¨øy
)

3108 
j
=0;

3109 
i
=0; i < 
PARTITION_COUNT
; i++) {

3110 c⁄° 
∑πôi⁄_t
 *
p
 = 
this
->
	`_∑πôi⁄
(
i
);

3111 if(
p
->
	`num
(Ë> 0 && (p->
	`œ°_skù_l¢
().
	`hi
() ==Ö->num())) {

3112 
¨øy
[
j
++] = 
p
->
	`œ°_skù_l¢
();

3115  
j
;

3116 
	}
}

3119 
	g°d
::
deque
<
log_c‹e
::
waôög_x˘
*>Üog_c‹e::
_log_•a˚_waôîs
;

3121 
rc_t
 
	glog_c‹e
::
	$waô_f‹_•a˚
(
fûeoff_t
 &
amt
, 
timeout_ö_ms
 
timeout
)

3123 
	`DBG
(<<"log_c‹e::waô_f‹_•a˚ " << 
amt
);

3125 if(
amt
 > 
_∑πôi⁄_d©a_size
)

3126  
	`RC
(
eOUTOFLOGSPACE
);

3129 
	`w_as£π0
(
amt
 > 0);

3130 
time•ec
 
whí
;

3131 if(
timeout
 !
WAIT_FOREVER
)

3132 
°hªad_t
::
	`timeout_to_time•ec
(
timeout
, 
whí
);

3134 
±hªad_c⁄d_t
 
c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

3135 
waôög_x˘
* 
waô
 = 
√w
 
	`waôög_x˘
(&
amt
, &
c⁄d
);

3136 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
_•a˚_lock
));

3137 
_waôög_f‹_•a˚
 = 
åue
;

3138 
_log_•a˚_waôîs
.
	`push_back
(
waô
);

3139 
amt
) {

3145 if(
	`ª£rve_•a˚
(
amt
)) {

3146 
amt
 = 0;

3149 
waô
->
√eded
 = 0;

3152 
_log_•a˚_waôîs
.
	`size
(Ë&& ! _log_•a˚_waôîs.
	`back
()->
√eded
) {

3153 
dñëe
 
_log_•a˚_waôîs
.
	`back
();

3154 
_log_•a˚_waôîs
.
	`p›_back
();

3158 
smÀvñ_1
::
chk±
->
	`wakeup_™d_èke
();

3159 if(
timeout
 =
WAIT_FOREVER
) {

3160 
	`Ârötf
(
°dîr
,

3162 ()(
	`x˘
()->
	`tid
().
	`gë_hi
()),

3163 ()(
	`x˘
()->
	`tid
().
	`gë_lo
()),

3164 (Ë
amt
);

3165 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
c⁄d
, &
_•a˚_lock
));

3167 
	`Ârötf
(
°dîr
,

3169 ()(
	`x˘
()->
	`tid
().
	`gë_hi
()),

3170 ()(
	`x˘
()->
	`tid
().
	`gë_lo
()),

3171 (Ë
amt
);

3172 
îr
 = 
	`±hªad_c⁄d_timedwaô
(&
c⁄d
, &
_•a˚_lock
, &
whí
);

3173 if(
îr
 =
ETIMEDOUT
)

3177 
	`Ârötf
(
°dîr
, "* - * - *Åid %lld.%lld done waiting (%lld bytes stillÇeeded)\n",

3178 ()(
	`x˘
()->
	`tid
().
	`gë_hi
()),

3179 ()(
	`x˘
()->
	`tid
().
	`gë_lo
()),

3180 (Ë
amt
);

3182 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
_•a˚_lock
));

3183  
amt
? 
	`RC
(
°hªad_t
::
°TIMEOUT
Ë: 
RCOK
;

3184 
	}
}

3186 
	glog_c‹e
::
	$ªÀa£_•a˚
(
fûeoff_t
 
amt
)

3188 
	`DBG
(<<"log_c‹e::ªÀa£_•a˚ " << 
amt
);

3189 
	`w_as£π0
(
amt
 >= 0);

3200 if(
_waôög_f‹_•a˚
) {

3201 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
_•a˚_lock
));

3202 
amt
 > 0 && 
_log_•a˚_waôîs
.
	`size
()) {

3203 
boﬁ
 
föished_⁄e
 = 
Ál£
;

3204 
waôög_x˘
* 
wx
 = 
_log_•a˚_waôîs
.
	`‰⁄t
();

3205 if–! 
wx
->
√eded
) {

3206 
föished_⁄e
 = 
åue
;

3209 
fûeoff_t
 
ˇn_give
 = 
°d
::
	`mö
(
amt
, *
wx
->
√eded
);

3210 *
wx
->
√eded
 -
ˇn_give
;

3211 
amt
 -
ˇn_give
;

3212 if(! *
wx
->
√eded
) {

3213 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(
wx
->
c⁄d
));

3214 
föished_⁄e
 = 
åue
;

3218 if(
föished_⁄e
) {

3219 
dñëe
 
wx
;

3220 
_log_•a˚_waôîs
.
	`p›_‰⁄t
();

3223 if(
_log_•a˚_waôîs
.
	`em±y
())

3224 
_waôög_f‹_•a˚
 = 
Ál£
;

3226 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
_•a˚_lock
));

3229 
	`©omic_add_l⁄g_dñè
(
_•a˚_avaûabÀ
, 
amt
);

3230 
	}
}

3233 
	glog_c‹e
::
	$a˘iv©e_ª£rv©i⁄s
()

3235 #i‡
USE_LOG_RESERVATIONS


3244 
	`w_as£π1
(
›î©ög_mode
 =
t_f‹w¨d_¥o˚ssög
);

3248 
	`w_as£π1
(!
_ª£rv©i⁄s_a˘ive
);

3251 
ﬁde°_≤um
 = 
_mö_chk±_ªc_l¢
.
	`hi
();

3252 
√we°_≤um
 = 
	`cuº_l¢
().
	`hi
();

3253 
fuŒ_∑πôi⁄s
 = 
√we°_≤um
 - 
ﬁde°_≤um
;

3254 
_•a˚_avaûabÀ
 -
	`ªcovîabÀ_•a˚
(
fuŒ_∑πôi⁄s
);

3257 
_•a˚_avaûabÀ
 -
	`cuº_l¢
().
	`lo
();

3258 
_ª£rv©i⁄s_a˘ive
 = 
åue
;

3260 
	}
}

3262 
rc_t


3263 
	glog_c‹e
::
	$fûe_was_¨chived
(const * )

3267 
_•a˚_avaûabÀ
 +
	`ªcovîabÀ_•a˚
(1);

3268  
RCOK
;

3269 
	}
}

	@src/sm/log_core.h

54 #i‚de‡
LOG_CORE_H


55 
	#LOG_CORE_H


	)

56 
	~"w_deföes.h
"

60 
	~<log.h
>

62 #ifde‡
__GNUG__


63 #¥agm®
öãrÁ˚


68 
	gsmÀvñ_0
::
	t∑πôi⁄_numbî_t
Öartition_number_t;

69 íum { 
	mPARTITION_COUNT

smÀvñ_0
::
max_›ílog
 };

70 
˛ass
 
	g∑πôi⁄_t
 ;

71 
	t∑πôi⁄_ödex_t
;

73 
	#CHKPT_META_BUF
 512

	)

76 
˛ass
 
	gskù_log
;

78 
	~<∑πôi⁄.h
>

79 
	~<deque
>

81 ˛as†
	clog_c‹e
 : 
public
 
log_m


83 
	swaôög_x˘
 {

84 
fûeoff_t
* 
√eded
;

85 
±hªad_c⁄d_t
* 
	mc⁄d
;

86 
NORET
 
waôög_x˘
(
fûeoff_t
 *
amt
, 
±hªad_c⁄d_t
* 
c
)

87 : 
√eded
(
amt
), 
c⁄d
(
c
)

91 
	g°d
::
deque
<
log_c‹e
::
waôög_x˘
*> 
_log_•a˚_waôîs
;

92 
	gpublic
:

93 
ö£π_öfo
;

94 
	gö£π_öfo_¨øy
;

96 
	g¥iv©e
:

97 
boﬁ
 
_öôülized
;

98 
boﬁ
 
	g_ª£rv©i⁄s_a˘ive
;

100 vﬁ©ûê
	g_waôög_f‹_•a˚
;

101 vﬁ©ûê
	g_waôög_f‹_Êush
;

102 vﬁ©ûê
	g_°¨t
;

103 
	$°¨t_byã
(Ëc⁄° {  
_°¨t
; 
	}
}

105 vﬁ©ûê
	g_íd
;

106 
	$íd_byã
(Ëc⁄° {  
_íd
; 
	}
}

108 vﬁ©ûê
	g_√eds_Êushed
;

109 
	g_£gsize
;

110 
	$£gsize
(Ëc⁄° {  
_£gsize
; 
	}
}

112 * 
	g_buf
;

115 íum { 
	gövÆid_fhdl
 = -1 };

119 
	sïoch
 {

120 
l¢_t
 
	gba£_l¢
;

122 
	gba£
;

124 
	g°¨t
;

125 
	gíd
;

127 
ïoch
()

128 : 
ba£_l¢
(
l¢_t
::
nuŒ
), 
ba£
(0), 
°¨t
(0), 
íd
(0)

131 
ïoch
(
l¢_t
 
l
, 
b
, 
s
, 
e
)

132 : 
ba£_l¢
(
l
), 
ba£
(
b
), 
°¨t
(
s
), 
íd
(
e
)

135 
ïoch
 vﬁ©ûe* 
vthis
(Ë{  
	gthis
; }

138 
ïoch
 
	g_buf_ïoch
;

139 
ïoch
 
	g_cur_ïoch
;

140 
ïoch
 
	g_ﬁd_ïoch
;

188 
l¢_t
 
	g_Êush_l¢
;

190 
èès_lock
 
	g_Êush_lock
;

191 
	g_∑ddög2
[16];

192 
èès_lock
 
	g_comp_lock
;

193 
	g_∑ddög3
[16];

194 
queue_ba£d_lock_t
 
	g_ö£π_lock
;

195 
	g_∑ddög4
[16];

196 
mcs_lock
 
	g_expo£_lock
;

197 
	g_∑ddög5
[16];

200 
±hªad_muãx_t
 
	g_waô_Êush_lock
;

201 
±hªad_c⁄d_t
 
	g_waô_c⁄d
;

202 
±hªad_c⁄d_t
 
	g_Êush_c⁄d
;

204 
°hªad_t
* 
	g_Êush_d´m⁄
;

205 
boﬁ
 vﬁ©ûê
	g_shuâög_down
;

206 
boﬁ
 vﬁ©ûê
	g_Êush_d´m⁄_ru¬ög
;

209 
ö£π_öfo_¨øy
* 
	g_¶Ÿ_¨øy
;

210 
	g_a˘ive_¶Ÿs
;

211 
ö£π_öfo
* vﬁ©ûe* 
	g_¶Ÿs
;

215 
∑πôi⁄_ödex_t
 
	g_cuº_ödex
;

216 
∑πôi⁄_numbî_t
 
	g_cuº_num
;

217 * 
	g_ªadbuf
;

219 
skù_log
* 
	g_skù_log
;

220 
±hªad_muãx_t
 
	g_sˇvíge_lock
;

221 
±hªad_c⁄d_t
 
	g_sˇvíge_c⁄d
;

222 
∑πôi⁄_t
 
	g_∑π
[
PARTITION_COUNT
];

223 
	gpublic
:

224 íum { 
BLOCK_SIZE
=
∑πôi⁄_t
::
XFERSIZE
 };

225 íum { 
	gPAGE_IN_BLOCKS

SM_PAGESIZE
/
BLOCK_SIZE
 };

235 #i‡
SM_PAGESIZE
 <= 32768

236 íum { 
	gSEGMENT_SIZE
128 * 
BLOCK_SIZE
 };

237 #ñi‡
SM_PAGESIZE
 <= 65536

238 íum { 
	gSEGMENT_SIZE
256 * 
BLOCK_SIZE
 };

240 #îr‹ 
SM_PAGESIZE
 
is
 
too
 
big
. 
SEGMENT_SIZE
 
mu°
 
accommod©e
 
∑ge
 
size
.

244 
rc_t
 
√w_log_m
(

245 
log_m
 *&
the_log
,

246 
wæogbufsize
,

247 
boﬁ
 
ªf‹m©
);

250 
log_c‹e
 *
	gTHE_LOG
;

253 
gë_œ°_l¢s
(
l¢_t
* 
¨øy
);

256 
de°roy_fûe
(
∑πôi⁄_numbî_t
 
n
, 
boﬁ
 
e
);

257 * 
	$ªadbuf
(Ë{  
_ªadbuf
; 
	}
}

260 
skù_log
* 
	$gë_skù_log
(Ë{  
_skù_log
; 
	}
}

262 
NORET
 
log_c‹e
(

263 
wrbufsize
,

264 
boﬁ
 
ªf‹m©
);

265 
	gNORET
 ~
log_c‹e
();

267 
shutdown
();

270 
	$£gmít_size
(Ëc⁄° {  
SEGMENT_SIZE
; 
	}
}

273 
rc_t
 
ö£π
(
logªc_t
 &
r
, 
l¢_t
* 
l
);

274 
rc_t
 
Êush
(
l¢_t
 
l¢
, 
boﬁ
 
block
=
åue
);

275 
rc_t
 
com≥nßã
(
l¢_t
 
‹ig_l¢
,Ü¢_à
undo_l¢
);

276 
°¨t_Êush_d´m⁄
();

277 
rc_t
 
„tch
(
l¢_t
 &
l¢
, 
logªc_t
* &
ªc
,Ü¢_t* 
nxt
);

278 
rc_t
 
sˇvíge
(
l¢_t
 
mö_ªc_l¢
,Ü¢_à
mö_x˘_l¢
);

279 
ªÀa£_•a˚
(
fûeoff_t
 
howmuch
);

280 
a˘iv©e_ª£rv©i⁄s
() ;

281 
fûeoff_t
 
c⁄sume_chk±_ª£rv©i⁄
(fûeoff_à
howmuch
);

282 
rc_t
 
waô_f‹_•a˚
(
fûeoff_t
 &
amt
, 
timeout_ö_ms
 
timeout
);

283 
boﬁ
 
	$ª£rv©i⁄s_a˘ive
(Ëc⁄° {  
_ª£rv©i⁄s_a˘ive
; 
	}
}

284 
rc_t
 
fûe_was_¨chived
(const * );

292 
size_t
 
	$ªcovîabÀ_•a˚
(
pcou¡
) const {

295  
pcou¡
*(
_∑πôi⁄_d©a_size
 - 
BLOCK_SIZE
);

296 
	}
}

299 
Êush_d´m⁄
();

300 
l¢_t
 
Êush_d´m⁄_w‹k
÷¢_à
ﬁd_m¨k
);

302 
	g¥iv©e
:

303 
_ÊushX
(
l¢_t
 
ba£_l¢
, 
°¨t1
, 
íd1
, 
°¨t2
, 
íd2
);

304 
_£t_size
(
fûeoff_t
 
psize
);

305 
fûeoff_t
 
	$_gë_mö_size
() const {

308  ( 
	`£gsize
(Ë+ 
BLOCK_SIZE
Ë* 
PARTITION_COUNT
;

309 
	}
}

310 
∑πôi⁄_t
 * 
	$_∑πôi⁄
(
∑πôi⁄_ödex_t
 
i
) const;

312 
	`_acquúe_buf„r_•a˚
(
ö£π_öfo
* 
öfo
, 
size
);

314 
	`_acquúe_buf„r_•a˚_f‹_óch
(
ö£π_öfo
* 
öfo
, 
size
);

316 
l¢_t
 
	`_c›y_to_buf„r
(
logªc_t
 &
ªc
, 
pos
, 
size
, 
ö£π_öfo
* 
öfo
);

317 
boﬁ
 
	`_upd©e_ïochs
(
ö£π_öfo
* 
öfo
, boﬁ 
©ãm±_ab‹t
);

318 
boﬁ
 
	`_waô_f‹_expo£
(
ö£π_öfo
* 
öfo
, boﬁ 
©ãm±_ab‹t
);

319 
	`_•ö_⁄_ïoch
(
ﬁd_íd
);

320 
	`_•ö_⁄_cou¡
(vﬁ©ûe* 
cou¡
, 
bound
);

323 
ö£π_öfo
* 
	`_joö_¶Ÿ
(&
idx
, &
cou¡
, 
size
);

324 
	`_Æloˇã_¶Ÿ
(
idx
);

326 
public
:

328 
	`un£t_cuºít
();

329 
	`£t_cuºít
(
∑πôi⁄_ödex_t
, 
∑πôi⁄_numbî_t
);

330 
∑πôi⁄_ödex_t
 
	$∑πôi⁄_ödex
(Ëc⁄° {  
_cuº_ödex
; 
	}
}

331 
∑πôi⁄_numbî_t
 
	$∑πôi⁄_num
(Ëc⁄° {  
_cuº_num
; 
	}
}

332 
	$Êo‹2
(
off£t
, 
block_size
)

333 {  
off£t
 & -
block_size
; 
	}
}

334 
	$˚û2
(
off£t
, 
block_size
)

336 
	`Êo‹2
(
off£t
 + 
block_size
 - 1, block_size); 
	}
}

337 
∑πôi⁄_size
(
psize
);

338 
mö_∑πôi⁄_size
();

341 
¥ime
(* 
buf
, 
fd
, 
fûeoff_t
 
°¨t
, 
l¢_t
 
√xt
);

342 
	g¥iv©e
:

343 
_¥ime
(
fd
, 
fûeoff_t
 
°¨t
, 
l¢_t
 
√xt
);

344 
	$_Êo‹
(
off£t
, 
block_size
)

345 {  (
off£t
/
block_size
)*block_size; 
	}
}

346 
	$_˚û
(
off£t
, 
block_size
)

347 {  
	`_Êo‹
(
off£t
 + 
block_size
 - 1, block_size); 
	}
}

350 
	gpublic
:

351 
ªÀa£
();

352 
	g¥iv©e
:

353 
_acquúe
();

354 
	gpublic
:

357 
¥iv©e
:

359 
∑πôi⁄_t
 * 
_˛o£_mö
(
∑πôi⁄_numbî_t
 
n
);

363 
∑πôi⁄_t
 * 
_›í_∑πôi⁄
(
∑πôi⁄_numbî_t
 
n
,

364 c⁄° 
l¢_t
& 
íd_höt
,

365 
boﬁ
 
exi°ög
,

366 
boﬁ
 
f‹≠≥nd
,

367 
boﬁ
 
durög_ªcovîy


369 
∑πôi⁄_t
 * 
	$_›í_∑πôi⁄_f‹_≠≥nd
(
∑πôi⁄_numbî_t
 
n
,

370 c⁄° 
l¢_t
& 
íd_höt
,

371 
boﬁ
 
exi°ög
,

372 
boﬁ
 
durög_ªcovîy


373 Ë{  
	`_›í_∑πôi⁄
(
n
,

374 
íd_höt
, 
exi°ög
,

375 
åue
, 
durög_ªcovîy
);

376 
	}
}

377 
∑πôi⁄_t
 * 
	$_›í_∑πôi⁄_f‹_ªad
(
∑πôi⁄_numbî_t
 
n
,

378 c⁄° 
l¢_t
& 
íd_höt
,

379 
boﬁ
 
exi°ög
,

380 
boﬁ
 
durög_ªcovîy


381 Ë{  
	`_›í_∑πôi⁄
(
n
,

382 
íd_höt
, 
exi°ög
,

383 
Ál£
, 
durög_ªcovîy
);

384 
	}
}

385 
∑πôi⁄_t
 * 
	$_n_∑πôi⁄
(
∑πôi⁄_numbî_t
 
n
) const;

386 
public
:

388 
∑πôi⁄_t
 * 
	$cuº_∑πôi⁄
() const;

391 
¥iv©e
:

392 
	$_ßnôy_check
() const;

393 
∑πôi⁄_ödex_t
 
	$_gë_ödex
(
∑πôi⁄_numbî_t
)const;

395 
public
:

396 
¥Ÿe˘ed
:

397 
	}
};

	@src/sm/logdef_gen.cpp

31 
	~"w_deföes.h
"

36 ˛as†
	ccommít_log
 : 
public
 
logªc_t
 {

37 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

38 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_commít
;

39 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

41 
public
:

42 
	`commít_log
 (c⁄° * 
msg
);

43 
	$commít_log
 (
logªc_t
*Ë{
	}
};

45 
ªdo
(
∑ge_p
*);

46 
undo
(
∑ge_p
*);

49 ˛as†
	ccom≥nßã_log
 : 
public
 
logªc_t
 {

50 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

51 
_ˇt
 = 0|
t_logiˇl
, 
_ty≥
 = 
t_com≥nßã
;

52 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

54 
public
:

55 
	`com≥nßã_log
 (
l¢_t
 
ªc_l¢
);

56 
	$com≥nßã_log
 (
logªc_t
*Ë{
	}
};

62 ˛as†
	cskù_log
 : 
public
 
logªc_t
 {

63 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

64 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_skù
;

65 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

67 
public
:

68 
	`skù_log
 ();

69 
	$skù_log
 (
logªc_t
*Ë{
	}
};

75 ˛as†
	cchk±_begö_log
 : 
public
 
logªc_t
 {

76 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

77 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_chk±_begö
;

78 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

80 
public
:

81 
	`chk±_begö_log
 (c⁄° 
l¢_t
 &
œ°Mou¡LSN
);

82 
	$chk±_begö_log
 (
logªc_t
*Ë{
	}
};

88 ˛as†
	cchk±_bf_èb_log
 : 
public
 
logªc_t
 {

89 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

90 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_chk±_bf_èb
;

91 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

93 
public
:

94 
	`chk±_bf_èb_log
 (
˙t
, c⁄° 
Õid_t
* 
pid
, c⁄° 
l¢_t
* 
ªc_l¢
);

95 
	$chk±_bf_èb_log
 (
logªc_t
*Ë{
	}
};

101 ˛as†
	cchk±_x˘_èb_log
 : 
public
 
logªc_t
 {

102 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

103 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_chk±_x˘_èb
;

104 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

106 
public
:

107 
	`chk±_x˘_èb_log
 (c⁄° 
tid_t
& 
younge°
, 
˙t
, c⁄°Åid_t* 
tid
, c⁄° 
smÀvñ_1
::
x˘_°©e_t
* 
°©e
, c⁄° 
l¢_t
* 
œ°_l¢
, c⁄°Ü¢_t* 
undo_nxt
);

108 
	$chk±_x˘_èb_log
 (
logªc_t
*Ë{
	}
};

114 ˛as†
	cchk±_dev_èb_log
 : 
public
 
logªc_t
 {

115 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

116 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_chk±_dev_èb
;

117 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

119 
public
:

120 
	`chk±_dev_èb_log
 (
˙t
, c⁄° **
dev_«me
, c⁄° 
vid_t
* 
vid
);

121 
	$chk±_dev_èb_log
 (
logªc_t
*Ë{
	}
};

127 ˛as†
	cchk±_íd_log
 : 
public
 
logªc_t
 {

128 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

129 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_chk±_íd
;

130 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

132 
public
:

133 
	`chk±_íd_log
 (c⁄° 
l¢_t
& 
ma°î
, c⁄°Ü¢_t& 
mö_ªc_l¢
);

134 
	$chk±_íd_log
 (
logªc_t
*Ë{
	}
};

140 ˛as†
	cmou¡_vﬁ_log
 : 
public
 
logªc_t
 {

141 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

142 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_mou¡_vﬁ
;

143 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

145 
public
:

146 
	`mou¡_vﬁ_log
 (c⁄° *
dev_«me
, c⁄° 
vid_t
 &
vid
);

147 
	$mou¡_vﬁ_log
 (
logªc_t
*Ë{
	}
};

149 
ªdo
(
∑ge_p
*);

153 ˛as†
	cdismou¡_vﬁ_log
 : 
public
 
logªc_t
 {

154 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

155 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_dismou¡_vﬁ
;

156 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

158 
public
:

159 
	`dismou¡_vﬁ_log
 (c⁄° *
dev_«me
, c⁄° 
vid_t
 &
vid
);

160 
	$dismou¡_vﬁ_log
 (
logªc_t
*Ë{
	}
};

162 
ªdo
(
∑ge_p
*);

166 ˛as†
	cx˘_ab‹t_log
 : 
public
 
logªc_t
 {

167 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

168 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_x˘_ab‹t
;

169 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

171 
public
:

172 
	`x˘_ab‹t_log
 ();

173 
	$x˘_ab‹t_log
 (
logªc_t
*Ë{
	}
};

179 ˛as†
	cx˘_‰ìög_•a˚_log
 : 
public
 
logªc_t
 {

180 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

181 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_x˘_‰ìög_•a˚
;

182 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

184 
public
:

185 
	`x˘_‰ìög_•a˚_log
 ();

186 
	$x˘_‰ìög_•a˚_log
 (
logªc_t
*Ë{
	}
};

192 ˛as†
	cx˘_íd_log
 : 
public
 
logªc_t
 {

193 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

194 
_ˇt
 = 
t_°©us
, 
_ty≥
 = 
t_x˘_íd
;

195 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

197 
public
:

198 
	`x˘_íd_log
 ();

199 
	$x˘_íd_log
 (
logªc_t
*Ë{
	}
};

205 ˛as†
	cx˘_¥ï¨e_°_log
 : 
public
 
logªc_t
 {

206 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

207 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_x˘_¥ï¨e_°
;

208 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

210 
public
:

211 
	`x˘_¥ï¨e_°_log
 (c⁄° 
gtid_t
* 
g
, c⁄° 
£rvî_h™dÀ_t
& 
h
);

212 
	$x˘_¥ï¨e_°_log
 (
logªc_t
*Ë{
	}
};

214 
ªdo
(
∑ge_p
*);

218 ˛as†
	cx˘_¥ï¨e_lk_log
 : 
public
 
logªc_t
 {

219 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

220 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_x˘_¥ï¨e_lk
;

221 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

223 
public
:

224 
	`x˘_¥ï¨e_lk_log
 (
num
, 
lock_mode_t
 
mode
, 
lockid_t
* 
lks
);

225 
	$x˘_¥ï¨e_lk_log
 (
logªc_t
*Ë{
	}
};

227 
ªdo
(
∑ge_p
*);

231 ˛as†
	cx˘_¥ï¨e_Æk_log
 : 
public
 
logªc_t
 {

232 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

233 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_x˘_¥ï¨e_Æk
;

234 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

236 
public
:

237 
	`x˘_¥ï¨e_Æk_log
 (
num
, 
lockid_t
* 
lks
, 
lock_mode_t
* 
modes
);

238 
	$x˘_¥ï¨e_Æk_log
 (
logªc_t
*Ë{
	}
};

240 
ªdo
(
∑ge_p
*);

244 ˛as†
	cx˘_¥ï¨e_°‹es_log
 : 
public
 
logªc_t
 {

245 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

246 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_x˘_¥ï¨e_°‹es
;

247 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

249 
public
:

250 
	`x˘_¥ï¨e_°‹es_log
 (
num
, c⁄° 
°id_t
* 
°ids
);

251 
	$x˘_¥ï¨e_°‹es_log
 (
logªc_t
*Ë{
	}
};

253 
ªdo
(
∑ge_p
*);

257 ˛as†
	cx˘_¥ï¨e_fi_log
 : 
public
 
logªc_t
 {

258 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

259 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_x˘_¥ï¨e_fi
;

260 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

262 
public
:

263 
	`x˘_¥ï¨e_fi_log
 (
numex
, 
numix
, 
numsix
, 
numexã¡
, c⁄° 
l¢_t
& 
fú°
);

264 
	$x˘_¥ï¨e_fi_log
 (
logªc_t
*Ë{
	}
};

266 
ªdo
(
∑ge_p
*);

270 ˛as†
	cÆloc_fûe_∑ge_log
 : 
public
 
logªc_t
 {

271 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

272 
_ˇt
 = 0|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_Æloc_fûe_∑ge
;

273 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

275 
public
:

276 
	`Æloc_fûe_∑ge_log
 (c⁄° 
Õid_t
& 
pid
);

277 
	$Æloc_fûe_∑ge_log
 (
logªc_t
*Ë{
	}
};

280 
undo
(
∑ge_p
*);

283 ˛as†
	cÆloc_∑ges_ö_ext_log
 : 
public
 
logªc_t
 {

284 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

285 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_Æloc_∑ges_ö_ext
;

286 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

288 
public
:

289 
	`Æloc_∑ges_ö_ext_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
);

290 
	$Æloc_∑ges_ö_ext_log
 (
logªc_t
*Ë{
	}
};

292 
ªdo
(
∑ge_p
*);

293 
undo
(
∑ge_p
*);

296 ˛as†
	c‰ì_∑ges_ö_ext_log
 : 
public
 
logªc_t
 {

297 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

298 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_‰ì_∑ges_ö_ext
;

299 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

301 
public
:

302 
	`‰ì_∑ges_ö_ext_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
);

303 
	$‰ì_∑ges_ö_ext_log
 (
logªc_t
*Ë{
	}
};

305 
ªdo
(
∑ge_p
*);

306 
undo
(
∑ge_p
*);

309 ˛as†
	c¸óã_ext_li°_log
 : 
public
 
logªc_t
 {

310 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

311 
_ˇt
 = 0|
t_ªdo
|
t_logiˇl
, 
_ty≥
 = 
t_¸óã_ext_li°
;

312 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

314 
public
:

315 
	`¸óã_ext_li°_log
 (c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
¥ev
,Éxäum_à
√xt
,Éxäum_à
cou¡
, c⁄°Éxäum_t* 
li°
);

316 
	$¸óã_ext_li°_log
 (
logªc_t
*Ë{
	}
};

318 
ªdo
(
∑ge_p
*);

322 ˛as†
	c‰ì_ext_li°_log
 : 
public
 
logªc_t
 {

323 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

324 
_ˇt
 = 0|
t_ªdo
|
t_logiˇl
, 
_ty≥
 = 
t_‰ì_ext_li°
;

325 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

327 
public
:

328 
	`‰ì_ext_li°_log
 (c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
hód
,Éxäum_à
cou¡
);

329 
	$‰ì_ext_li°_log
 (
logªc_t
*Ë{
	}
};

331 
ªdo
(
∑ge_p
*);

335 ˛as†
	c£t_ext_√xt_log
 : 
public
 
logªc_t
 {

336 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

337 
_ˇt
 = 0|
t_ªdo
|
t_logiˇl
, 
_ty≥
 = 
t_£t_ext_√xt
;

338 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

340 
public
:

341 
	`£t_ext_√xt_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
exäum_t
 
ext
,Éxäum_à
√w_√xt
);

342 
	$£t_ext_√xt_log
 (
logªc_t
*Ë{
	}
};

344 
ªdo
(
∑ge_p
*);

348 ˛as†
	c°‹e_›î©i⁄_log
 : 
public
 
logªc_t
 {

349 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

350 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_°‹e_›î©i⁄
;

351 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

353 
public
:

354 
	`°‹e_›î©i⁄_log
 (c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°‹e_›î©i⁄_∑øm
& 
›
);

355 
	$°‹e_›î©i⁄_log
 (
logªc_t
*Ë{
	}
};

357 
ªdo
(
∑ge_p
*);

358 
undo
(
∑ge_p
*);

361 ˛as†
	c∑ge_lök_log
 : 
public
 
logªc_t
 {

362 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

363 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_lök
;

364 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

366 
public
:

367 
	`∑ge_lök_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
);

368 
	$∑ge_lök_log
 (
logªc_t
*Ë{
	}
};

370 
ªdo
(
∑ge_p
*);

371 
undo
(
∑ge_p
*);

374 ˛as†
	c∑ge_ö£π_log
 : 
public
 
logªc_t
 {

375 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

376 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_ö£π
;

377 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

379 
public
:

380 
	`∑ge_ö£π_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
);

381 
	$∑ge_ö£π_log
 (
logªc_t
*Ë{
	}
};

383 
ªdo
(
∑ge_p
*);

384 
undo
(
∑ge_p
*);

387 ˛as†
	c∑ge_ªmove_log
 : 
public
 
logªc_t
 {

388 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

389 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_ªmove
;

390 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

392 
public
:

393 
	`∑ge_ªmove_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
);

394 
	$∑ge_ªmove_log
 (
logªc_t
*Ë{
	}
};

396 
ªdo
(
∑ge_p
*);

397 
undo
(
∑ge_p
*);

400 ˛as†
	c∑ge_f‹m©_log
 : 
public
 
logªc_t
 {

401 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

402 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_f‹m©
;

403 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

405 
public
:

406 
	`∑ge_f‹m©_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
);

407 
	$∑ge_f‹m©_log
 (
logªc_t
*Ë{
	}
};

409 
ªdo
(
∑ge_p
*);

410 
undo
(
∑ge_p
*);

413 ˛as†
	c∑ge_m¨k_log
 : 
public
 
logªc_t
 {

414 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

415 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_m¨k
;

416 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

418 
public
:

419 
	`∑ge_m¨k_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
);

420 
	$∑ge_m¨k_log
 (
logªc_t
*Ë{
	}
};

422 
ªdo
(
∑ge_p
*);

423 
undo
(
∑ge_p
*);

426 ˛as†
	c∑ge_ª˛aim_log
 : 
public
 
logªc_t
 {

427 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

428 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_ª˛aim
;

429 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

431 
public
:

432 
	`∑ge_ª˛aim_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
vec
);

433 
	$∑ge_ª˛aim_log
 (
logªc_t
*Ë{
	}
};

435 
ªdo
(
∑ge_p
*);

436 
undo
(
∑ge_p
*);

439 ˛as†
	c∑ge_shi·_log
 : 
public
 
logªc_t
 {

440 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

441 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_shi·
;

442 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

444 
public
:

445 
	`∑ge_shi·_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx2
, 
∑ge_s
::
¶Ÿ_Àngth_t
 
off2
,Öage_s::¶Ÿ_Àngth_à
Àn2
, 
idx1
,Öage_s::¶Ÿ_Àngth_à
off1
);

446 
	$∑ge_shi·_log
 (
logªc_t
*Ë{
	}
};

448 
ªdo
(
∑ge_p
*);

449 
undo
(
∑ge_p
*);

452 ˛as†
	c∑ge_•li˚_log
 : 
public
 
logªc_t
 {

453 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

454 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_•li˚
;

455 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

457 
public
:

458 
	`∑ge_•li˚_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, c⁄° 
cvec_t
& 
vec
);

459 
	$∑ge_•li˚_log
 (
logªc_t
*Ë{
	}
};

461 
ªdo
(
∑ge_p
*);

462 
undo
(
∑ge_p
*);

465 ˛as†
	c∑ge_•li˚z_log
 : 
public
 
logªc_t
 {

466 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

467 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_•li˚z
;

468 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

470 
public
:

471 
	`∑ge_•li˚z_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, 
oßve
, 
nßve
, c⁄° 
cvec_t
& 
vec
);

472 
	$∑ge_•li˚z_log
 (
logªc_t
*Ë{
	}
};

474 
ªdo
(
∑ge_p
*);

475 
undo
(
∑ge_p
*);

478 ˛as†
	c∑ge_£t_byã_log
 : 
public
 
logªc_t
 {

479 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

480 
_ˇt
 = 0|
t_ªdo
|
t_undo
, 
_ty≥
 = 
t_∑ge_£t_byã
;

481 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

483 
public
:

484 
	`∑ge_£t_byã_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
u_ch¨
 
ﬁd
, u_ch¨ 
bôs
, 
›
);

485 
	$∑ge_£t_byã_log
 (
logªc_t
*Ë{
	}
};

487 
ªdo
(
∑ge_p
*);

488 
undo
(
∑ge_p
*);

491 ˛as†
	c∑ge_image_log
 : 
public
 
logªc_t
 {

492 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

493 
_ˇt
 = 0|
t_ªdo
, 
_ty≥
 = 
t_∑ge_image
;

494 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

496 
public
:

497 
	`∑ge_image_log
 (c⁄° 
∑ge_p
& 
∑ge
);

498 
	$∑ge_image_log
 (
logªc_t
*Ë{
	}
};

500 
ªdo
(
∑ge_p
*);

504 ˛as†
	cbåì_purge_log
 : 
public
 
logªc_t
 {

505 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

506 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_båì_purge
;

507 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

509 
public
:

510 
	`båì_purge_log
 (c⁄° 
∑ge_p
& 
∑ge
);

511 
	$båì_purge_log
 (
logªc_t
*Ë{
	}
};

513 
ªdo
(
∑ge_p
*);

514 
undo
(
∑ge_p
*);

517 ˛as†
	cbåì_ö£π_log
 : 
public
 
logªc_t
 {

518 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

519 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_båì_ö£π
;

520 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

522 
public
:

523 
	`båì_ö£π_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
);

524 
	$båì_ö£π_log
 (
logªc_t
*Ë{
	}
};

526 
ªdo
(
∑ge_p
*);

527 
undo
(
∑ge_p
*);

530 ˛as†
	cbåì_ªmove_log
 : 
public
 
logªc_t
 {

531 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

532 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_båì_ªmove
;

533 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

535 
public
:

536 
	`båì_ªmove_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
);

537 
	$båì_ªmove_log
 (
logªc_t
*Ë{
	}
};

539 
ªdo
(
∑ge_p
*);

540 
undo
(
∑ge_p
*);

543 ˛as†
	cπªe_ö£π_log
 : 
public
 
logªc_t
 {

544 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

545 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_πªe_ö£π
;

546 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

548 
public
:

549 
	`πªe_ö£π_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
);

550 
	$πªe_ö£π_log
 (
logªc_t
*Ë{
	}
};

552 
ªdo
(
∑ge_p
*);

553 
undo
(
∑ge_p
*);

556 ˛as†
	cπªe_ªmove_log
 : 
public
 
logªc_t
 {

557 
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
l
) {

558 
_ˇt
 = 0|
t_ªdo
|
t_undo
|
t_logiˇl
, 
_ty≥
 = 
t_πªe_ªmove
;

559 
logªc_t
::
	`fûl
(
p
, 
èg
, 
l
);

561 
public
:

562 
	`πªe_ªmove_log
 (c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
);

563 
	$πªe_ªmove_log
 (
logªc_t
*Ë{
	}
};

565 
ªdo
(
∑ge_p
*);

566 
undo
(
∑ge_p
*);

	@src/sm/logfunc_gen.h

1 #i‚de‡
LOGFUNC_GEN_H


2 
	#LOGFUNC_GEN_H


	)

34 
	~"w_deföes.h
"

39 "C" 
rc_t
 
log_commít
(c⁄° * 
msg
);

40 "C" 
rc_t
 
log_com≥nßã
(
l¢_t
 
ªc_l¢
);

41 "C" 
rc_t
 
log_x˘_ab‹t
();

42 "C" 
rc_t
 
log_x˘_‰ìög_•a˚
();

43 "C" 
rc_t
 
log_x˘_íd
();

44 "C" 
rc_t
 
log_x˘_¥ï¨e_°
(c⁄° 
gtid_t
* 
g
, c⁄° 
£rvî_h™dÀ_t
& 
h
);

45 "C" 
rc_t
 
log_x˘_¥ï¨e_lk
(
num
, 
lock_mode_t
 
mode
, 
lockid_t
* 
lks
);

46 "C" 
rc_t
 
log_x˘_¥ï¨e_Æk
(
num
, 
lockid_t
* 
lks
, 
lock_mode_t
* 
modes
);

47 "C" 
rc_t
 
log_x˘_¥ï¨e_°‹es
(
num
, c⁄° 
°id_t
* 
°ids
);

48 "C" 
rc_t
 
log_x˘_¥ï¨e_fi
(
numex
, 
numix
, 
numsix
, 
numexã¡
, c⁄° 
l¢_t
& 
fú°
);

49 "C" 
rc_t
 
log_Æloc_fûe_∑ge
(c⁄° 
Õid_t
& 
pid
);

50 "C" 
rc_t
 
log_Æloc_∑ges_ö_ext
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
);

51 "C" 
rc_t
 
log_‰ì_∑ges_ö_ext
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
);

52 "C" 
rc_t
 
log_¸óã_ext_li°
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
¥ev
,Éxäum_à
√xt
,Éxäum_à
cou¡
, c⁄°Éxäum_t* 
li°
);

53 "C" 
rc_t
 
log_‰ì_ext_li°
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
hód
,Éxäum_à
cou¡
);

54 "C" 
rc_t
 
log_£t_ext_√xt
(c⁄° 
∑ge_p
& 
∑ge
, 
exäum_t
 
ext
,Éxäum_à
√w_√xt
);

55 "C" 
rc_t
 
log_°‹e_›î©i⁄
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°‹e_›î©i⁄_∑øm
& 
›
);

56 "C" 
rc_t
 
log_∑ge_lök
(c⁄° 
∑ge_p
& 
∑ge
, 
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
);

57 "C" 
rc_t
 
log_∑ge_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
);

58 "C" 
rc_t
 
log_∑ge_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
);

59 "C" 
rc_t
 
log_∑ge_f‹m©
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
);

60 "C" 
rc_t
 
log_∑ge_m¨k
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
);

61 "C" 
rc_t
 
log_∑ge_ª˛aim
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
vec
);

62 "C" 
rc_t
 
log_∑ge_shi·
(c⁄° 
∑ge_p
& 
∑ge
, 
idx2
, 
∑ge_s
::
¶Ÿ_Àngth_t
 
off2
,Öage_s::¶Ÿ_Àngth_à
Àn2
, 
idx1
,Öage_s::¶Ÿ_Àngth_à
off1
);

63 "C" 
rc_t
 
log_∑ge_•li˚
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, c⁄° 
cvec_t
& 
vec
);

64 "C" 
rc_t
 
log_∑ge_•li˚z
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, 
oßve
, 
nßve
, c⁄° 
cvec_t
& 
vec
);

65 "C" 
rc_t
 
log_∑ge_£t_byã
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
u_ch¨
 
ﬁd
, u_ch¨ 
bôs
, 
›
);

66 "C" 
rc_t
 
log_∑ge_image
(c⁄° 
∑ge_p
& 
∑ge
);

67 "C" 
rc_t
 
log_båì_purge
(c⁄° 
∑ge_p
& 
∑ge
);

68 "C" 
rc_t
 
log_båì_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
);

69 "C" 
rc_t
 
log_båì_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
);

70 "C" 
rc_t
 
log_πªe_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
);

71 "C" 
rc_t
 
log_πªe_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
);

	@src/sm/logrec.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#LOGREC_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


62 
	~"sm_öt_2.h
"

63 
	~"logdef_gí.˝p
"

65 
	~"exã¡.h
"

67 
	~"hi°o.h
"

69 
	~"båì_p.h
"

70 
	~"πªe_p.h
"

72 
	~<iom™ù
>

73 
	gios
::
	tfmtÊags
 
	tios_fmtÊags
;

75 
	~<√w
>

77 íum { 
	meINTERNAL
 = 
smÀvñ_0
::
eINTERNAL
,

78 
	meOUTOFMEMORY
 = 
smÀvñ_0
::
eOUTOFMEMORY


89 
	glogªc_t
::
	$ˇt_°r
() const

91 
	`ˇt
()) {

92 
t_logiˇl
:

95 
t_logiˇl
 | 
t_˝¢
:

98 
t_°©us
:

101 
t_undo
:

104 
t_ªdo
:

107 
t_ªdo
 | 
t_˝¢
:

110 
t_undo
 | 
t_ªdo
:

113 
t_undo
 | 
t_ªdo
 | 
t_logiˇl
:

116 
t_ªdo
 | 
t_logiˇl
 | 
t_˝¢
:

119 
t_ªdo
 | 
t_logiˇl
 :

122 
t_undo
 | 
t_logiˇl
 | 
t_˝¢
:

125 
t_undo
 | 
t_logiˇl
 :

128 #i‡
W_DEBUG_LEVEL
 > 0

129 
t_bad_ˇt
:

136 #i‡
W_DEBUG_LEVEL
 > 2

137 
˚º
 << "unexpectedÜogÑecord flags: ";

138 if–
_ˇt
 & 
t_undo
 ) 
˚º
 << "t_undo ";

139 if–
_ˇt
 & 
t_ªdo
 ) 
˚º
 << "t_redo ";

140 if–
_ˇt
 & 
t_logiˇl
 ) 
˚º
 << "t_logical ";

141 if–
_ˇt
 & 
t_˝¢
 ) 
˚º
 << "t_cpsn ";

142 if–
_ˇt
 & 
t_°©us
 ) 
˚º
 << "t_status ";

143 
˚º
 << 
ídl
;

146 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

148 
	}
}

159 
	glogªc_t
::
	$ty≥_°r
() const

161 
_ty≥
) {

162 
	~"log°r_gí.˝p
"

170 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

172 
	}
}

185 
	glogªc_t
::
	$fûl
(c⁄° 
Õid_t
* 
p
, 
uöt2_t
 
èg
, 
smsize_t
 
l
)

187 
	`w_as£π9
(
hdr_sz
 =
_d©a
 - (*Ë
this
);

188 
	`w_as£π9
(
w_ba£_t
::
	`is_Æig√d
(
_d©a
));

191 
x˘_t
 *
x
 = 
	`x˘
();

192 if(
smÀvñ_0
::
	`ö_ªcovîy_undo
() ||

193 (
x
 && x->
	`°©e
(Ë=
smÀvñ_1
::
x˘_ab‹tög
))

195 
_ˇt
 |
t_rﬁlback
;

197 
	`£t_pid
(
Õid_t
::
nuŒ
);

198 
_¥ev
 = 
l¢_t
::
nuŒ
;

199 
_∑ge_èg
 = 
èg
;

200 i‡(
p
Ë
	`£t_pid
(*p);

201 i‡(
l
 !
	`Æign
(l)) {

203 
	`mem£t
(
_d©a
+
l
, 0, 
	`Æign
(l)-l);

205 
tmp
 = 
	`Æign
(
l
Ë+ 
hdr_sz
 + (
l¢_t
);

206 
tmp
 = (tmp + 7) & -8;

207 
	`w_as£π1
(
tmp
 <
max_sz
);

208 
_Àn
 = 
tmp
;

209 if(
	`ty≥
(Ë!
t_skù
) {

210 
	`DBG
–<< "Cª©ÜogÑec: " << *
this


211 << " size: " << 
_Àn
 << "Öªvl¢: " << 
_¥ev
 );

213 
	}
}

225 
	glogªc_t
::
	$fûl_x˘_©å
(c⁄° 
tid_t
& 
tid
, c⁄° 
l¢_t
& 
œ°
)

227 
_tid
 = 
tid
;

228 if(
_¥ev
.
	`vÆid
()) {

229 
	`w_as£π2
(
	`is_˝¢
());

231 
_¥ev
 = 
œ°
;

233 
	}
}

238 
boﬁ


239 
	glogªc_t
::
	$vÆid_hódî
(c⁄° 
l¢_t
 & 
l¢
) const

241 i‡(
_Àn
 < 
hdr_sz
 || 
_ty≥
 > 100 || 
	`ˇt
(Ë=
t_bad_ˇt
 ||

242 
l¢
 !*
	`_l¢_ck
()) {

243  
Ál£
;

245  
åue
;

246 
	}
}

256 
	glogªc_t
::
	$ªdo
(
∑ge_p
* 
∑ge
)

258 
	`FUNC
(
logªc_t
::
ªdo
);

259 
	`DBG
–<< "RedÿÜogÑec: " << *
this


260 << " size: " << 
_Àn
 << "Öªvl¢: " << 
_¥ev
 );

262 
_ty≥
) {

263 
	~"ªdo_gí.˝p
"

275 if(
∑ge
Ë∑ge->
	`£t_dúty
();

276 
	}
}

290 
	glogªc_t
::
	$undo
(
∑ge_p
* 
∑ge
)

292 
	`FUNC
(
logªc_t
::
undo
);

293 
	`DBG
–<< "UndÿÜogÑec: " << *
this


294 << " size: " << 
_Àn
 << "Öªvl¢: " << 
_¥ev
);

295 
_ty≥
) {

296 
	~"undo_gí.˝p
"

298 
	`x˘
()->
	`com≥nßã_undo
(
_¥ev
);

299 
	}
}

310 
	glogªc_t
::
	$c‹ru±
()

312 * 
íd_of_c‹ru±i⁄
 = ((*)
this
)+
	`Àngth
();

313 * 
°¨t_of_c‹ru±i⁄
 = (*)&
_ty≥
;

314 
size_t
 
byãs_to_c‹ru±
 = 
íd_of_c‹ru±i⁄
 - 
°¨t_of_c‹ru±i⁄
;

315 
	`mem£t
(
°¨t_of_c‹ru±i⁄
, 0, 
byãs_to_c‹ru±
);

316 
	}
}

327 
	gx˘_‰ìög_•a˚_log
::
	$x˘_‰ìög_•a˚_log
()

329 
	`fûl
(0, 0, 0);

330 
	}
}

341 
	gx˘_íd_log
::
	$x˘_íd_log
()

343 
	`fûl
(0, 0, 0);

344 
	}
}

347 
	gx˘_ab‹t_log
::
	$x˘_ab‹t_log
()

349 
	`fûl
(0, 0, 0);

350 
	}
}

364 
	gx˘_¥ï¨e_°_log
::
	$x˘_¥ï¨e_°_log
(c⁄° 
gtid_t
 *
g
,

365 c⁄° 
£rvî_h™dÀ_t
 &
h
)

367 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`¥ï¨e_öfo_t
(
g
, 
h
))->
	`size
());

369 
	}
}

371 
	gx˘_¥ï¨e_°_log
::
	$ªdo
(
∑ge_p
 *)

376 c⁄° 
¥ï¨e_öfo_t
* 
±
 = (¥ï¨e_öfo_t*Ë
_d©a
;

377 
x˘_t
 * 
xd
 = x˘_t::
	`look_up
(
_tid
);

378 
	`w_as£π9
(
xd
);

379 if(
±
->
is_exã∫Æ
==1) {

380 
	`W_COERCE
(
xd
->
	`íãr2pc
(
±
->
g
));

382 
xd
->
	`£t_co‹dö©‹
(
±
->
h
);

383 
	}
}

386 
	gx˘_¥ï¨e_lk_log
::
	$x˘_¥ï¨e_lk_log
(
num
,

387 
lock_ba£_t
::
lmode_t
 
mode
, 
lockid_t
 *
locks
)

389 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`¥ï¨e_lock_t
(
num
, 
mode
, 
locks
))->
	`size
());

390 
	}
}

392 
	gx˘_¥ï¨e_Æk_log
::
	$x˘_¥ï¨e_Æk_log
(
num
,

393 
lockid_t
 *
locks
,

394 
lock_ba£_t
::
lmode_t
 *
modes


397 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`¥ï¨e_Æl_lock_t
(
num
, 
locks
, 
modes
))->
	`size
());

398 
	}
}

401 
	gx˘_¥ï¨e_lk_log
::
	$ªdo
(
∑ge_p
 *)

408 c⁄° 
¥ï¨e_lock_t
* 
±
 = (¥ï¨e_lock_t*Ë
_d©a
;

409 
x˘_t
 * 
xd
 = x˘_t::
	`look_up
(
_tid
);

410 
	`me
()->
	`©èch_x˘
(
xd
);

411 
	`W_COERCE
(
xd
->
	`obèö_locks
(
±
->
mode
,Öt->
num_locks
,Öt->
«me
));

412 
	`me
()->
	`dëach_x˘
(
xd
);

413 
	}
}

416 
	gx˘_¥ï¨e_Æk_log
::
	$ªdo
(
∑ge_p
 *)

423 c⁄° 
¥ï¨e_Æl_lock_t
* 
±
 = (¥ï¨e_Æl_lock_t*Ë
_d©a
;

424 
x˘_t
 * 
xd
 = x˘_t::
	`look_up
(
_tid
);

425 
	`me
()->
	`©èch_x˘
(
xd
);

426 
uöt4_t
 
i
;

427 
i
=0; i<
±
->
num_locks
; i++) {

428 
	`W_COERCE
(
xd
->
	`obèö_⁄e_lock
(
±
->
∑ú
[
i
].
mode
,Öt->∑ú[i].
«me
));

430 
	`me
()->
	`dëach_x˘
(
xd
);

431 
	}
}

434 
	gx˘_¥ï¨e_fi_log
::
	$x˘_¥ï¨e_fi_log
(
num_ex
, 
num_ix
, 
num_six
, 
numexã¡
,

435 c⁄° 
l¢_t
 &
fú°
)

437 
	`fûl
(0, 0, (
	`√w
 (
_d©a
)

438 
	`¥ï¨e_lock_tŸÆs_t
(
num_ex
, 
num_ix
, 
num_six
, 
numexã¡
, 
fú°
))->
	`size
());

439 
	}
}

441 
	gx˘_¥ï¨e_fi_log
::
	$ªdo
(
∑ge_p
 *)

450 
x˘_t
 * 
xd
 = x˘_t::
	`look_up
(
_tid
);

451 c⁄° 
¥ï¨e_lock_tŸÆs_t
* 
±
 =

452 (
¥ï¨e_lock_tŸÆs_t
*Ë
_d©a
;

453 
	`me
()->
	`©èch_x˘
(
xd
);

454 
	`W_COERCE
(
xd
->
	`check_lock_tŸÆs
(
±
->
num_EX
,Öt->
num_IX
,Öt->
num_SIX
,Öt->
num_exã¡s
));

455 
xd
->
	`ch™ge_°©e
(
x˘_t
::
x˘_¥ï¨ed
);

457 
	`w_as£π9
–
xd
->
	`fú°_l¢
(Ë=
l¢_t
::
nuŒ
 );

458 
xd
->
	`£t_fú°_l¢
(
±
->
fú°_l¢
);

460 
	`me
()->
	`dëach_x˘
(
xd
);

461 
	`w_as£π9
(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

462 
	}
}

464 
	gx˘_¥ï¨e_°‹es_log
::
	$x˘_¥ï¨e_°‹es_log
(
num
, c⁄° 
°id_t
* 
°ids
)

466 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`¥ï¨e_°‹es_to_‰ì_t
(
num
, 
°ids
))->
	`size
());

467 
	}
}

470 
	gx˘_¥ï¨e_°‹es_log
::
	$ªdo
(
∑ge_p
 *)

472 
x˘_t
* 
xd
 = x˘_t::
	`look_up
(
_tid
);

473 c⁄° 
¥ï¨e_°‹es_to_‰ì_t
* 
öfo
 = (¥ï¨e_°‹es_to_‰ì_t*)
_d©a
;

474 
	`me
()->
	`©èch_x˘
(
xd
);

475 
uöt4_t
 
i
 = 0; i < 
öfo
->
num
; i++) {

476 
xd
->
	`AddSt‹eToFªe
(
öfo
->
°ids
[
i
]);

478 
	`me
()->
	`dëach_x˘
(
xd
);

479 
	`w_as£π9
(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

480 
	}
}

490 
	gcommít_log
::
	$commít_log
(c⁄° *
msg
)

492 
	`w_as£π1
(
	`°æí
(
msg
Ë< (
_d©a
));

493 
	`mem˝y
(
_d©a
, 
msg
, 
	`°æí
(msg)+1);

494 
	`DBG
(<<"commít_log: L: " << (c⁄° *)
_d©a
);

495 
	`fûl
(0, 0, 
	`°æí
(
msg
)+1);

496 
	}
}

499 
	gcommít_log
::
ªdo
(
∑ge_p
 * 
	$W_IFDEBUG9
(
∑ge
))

501 
	`w_as£π9
(
∑ge
 == 0);

502 
	`DBG
(<<"commít_log: R: " << (c⁄° *)
_d©a
);

504 
	}
}

507 
	gcommít_log
::
undo
(
∑ge_p
 * 
	$W_IFDEBUG9
(
∑ge
))

509 
	`w_as£π9
(
∑ge
 == 0);

510 
	`DBG
(<<"commít_log: U: " << (c⁄° *)
_d©a
);

512 
	}
}

522 
	gcom≥nßã_log
::
	$com≥nßã_log
(
l¢_t
 
ªc_l¢
)

524 
	`fûl
(0, 0, 0);

525 
	`£t_˛r
(
ªc_l¢
);

526 
	}
}

536 
	gskù_log
::
	$skù_log
()

538 
	`fûl
(0, 0, 0);

539 
	}
}

548 
	gchk±_begö_log
::
	$chk±_begö_log
(c⁄° 
l¢_t
 &
œ°Mou¡LSN
)

550 
	`√w
 (
_d©a
Ë
	`l¢_t
(
œ°Mou¡LSN
);

551 
	`fûl
(0, 0, (
l¢_t
));

552 
	}
}

566 
	gchk±_íd_log
::
	$chk±_íd_log
(c⁄° 
l¢_t
 &
l¢
, c⁄°Ü¢_t& 
mö_ªc_l¢
)

569 
l¢_t
 *
l
 = 
	`√w
 (
_d©a
Ë
	`l¢_t
(
l¢
);

570 
l
++;

571 *
l
 = 
mö_ªc_l¢
;

573 
	`fûl
(0, 0, 2 * (
l¢_t
));

574 
	}
}

587 
	gchk±_bf_èb_t
::
	$chk±_bf_èb_t
(

588 
˙t
,

589 c⁄° 
Õid_t
* 
pids
,

590 c⁄° 
l¢_t
* 
æ¢s
)

591 : 
	$cou¡
(
˙t
)

593 
	`w_as£π9
–
	`SIZEOF
(*
this
Ë<
logªc_t
::
d©a_sz
 );

594 
	`w_as£π1
(
cou¡
 <
max
);

595 
uöt
 
i
 = 0; i < 
cou¡
; i++) {

596 
bªc
[
i
].
pid
 = 
pids
[i];

597 
bªc
[
i
].
ªc_l¢
 = 
æ¢s
[i];

599 
	}
}

602 
	gchk±_bf_èb_log
::
	$chk±_bf_èb_log
(

603 
˙t
,

604 c⁄° 
Õid_t
* 
pid
,

605 c⁄° 
l¢_t
* 
ªc_l¢
)

607 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`chk±_bf_èb_t
(
˙t
, 
pid
, 
ªc_l¢
))->
	`size
());

608 
	}
}

622 
	gchk±_x˘_èb_t
::
	$chk±_x˘_èb_t
(

623 c⁄° 
tid_t
& 
_younge°
,

624 
˙t
,

625 c⁄° 
tid_t
* 
tid
,

626 c⁄° 
smÀvñ_1
::
x˘_°©e_t
* 
°©e
,

627 c⁄° 
l¢_t
* 
œ°_l¢
,

628 c⁄° 
l¢_t
* 
undo_nxt
)

629 : 
	`younge°
(
_younge°
), 
	$cou¡
(
˙t
)

631 
	`w_as£π1
(
cou¡
 <
max
);

632 
	`w_as£π9
–
	`SIZEOF
(*
this
Ë<
logªc_t
::
d©a_sz
);

633 
uöt
 
i
 = 0; i < 
cou¡
; i++) {

634 
xªc
[
i
].
tid
 =Åid[i];

635 
xªc
[
i
].
°©e
 = state[i];

636 
xªc
[
i
].
œ°_l¢
 =Üast_lsn[i];

637 
xªc
[
i
].
undo_nxt
 = undo_nxt[i];

639 
	}
}

641 
	gchk±_x˘_èb_log
::
	$chk±_x˘_èb_log
(

642 c⁄° 
tid_t
& 
younge°
,

643 
˙t
,

644 c⁄° 
tid_t
* 
tid
,

645 c⁄° 
smÀvñ_1
::
x˘_°©e_t
* 
°©e
,

646 c⁄° 
l¢_t
* 
œ°_l¢
,

647 c⁄° 
l¢_t
* 
undo_nxt
)

649 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`chk±_x˘_èb_t
(
younge°
, 
˙t
, 
tid
, 
°©e
,

650 
œ°_l¢
, 
undo_nxt
))->
	`size
());

651 
	}
}

664 
	gchk±_dev_èb_t
::
	$chk±_dev_èb_t
(

665 
˙t
,

666 c⁄° **
dev
,

667 c⁄° 
vid_t
* 
vid
)

668 : 
	$cou¡
(
˙t
)

670 
	`w_as£π9
–(*
this
Ë<
logªc_t
::
d©a_sz
 );

671 
	`w_as£π1
(
cou¡
 <
max
);

672 
uöt
 
i
 = 0; i < 
cou¡
; i++) {

674 
	`mem£t
(
devªc
[
i
].
dev_«me
, 0, (devrec[i].dev_name));

675 
	`°∫˝y
(
devªc
[
i
].
dev_«me
, 
dev
[i], (devrec[i].dev_name)-1);

676 
devªc
[
i
].
vid
 = vid[i];

678 
	}
}

680 
	gchk±_dev_èb_log
::
	$chk±_dev_èb_log
(

681 
˙t
,

682 c⁄° **
dev
,

683 c⁄° 
vid_t
* 
vid
)

685 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`chk±_dev_èb_t
(
˙t
, 
dev
, 
vid
))->
	`size
());

686 
	}
}

696 
	gmou¡_vﬁ_log
::
	$mou¡_vﬁ_log
(

697 c⁄° * 
dev
,

698 c⁄° 
vid_t
& 
vid
)

700 c⁄° *
devAºay
[1];

702 
devAºay
[0] = 
dev
;

703 
	`DBG
(<< "mou¡_vﬁ_log dev_«me=" << 
devAºay
[0] << " vﬁid =" << 
vid
);

704 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`chk±_dev_èb_t
(1, 
devAºay
, &
vid
))->
	`size
());

705 
	}
}

708 
	gmou¡_vﬁ_log
::
ªdo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

710 
	`w_as£π9
(
∑ge
 == 0);

711 
chk±_dev_èb_t
* 
dp
 = (chk±_dev_èb_t*Ë
_d©a
;

713 
	`w_as£π9
(
dp
->
cou¡
 == 1);

718 
	`W_IGNORE
(
io_m
::
	`mou¡
(
dp
->
devªc
[0].
dev_«me
, dp->devªc[0].
vid
));

719 
	}
}

729 
	gdismou¡_vﬁ_log
::
	$dismou¡_vﬁ_log
(

730 c⁄° * 
dev
,

731 c⁄° 
vid_t
& 
vid
)

733 c⁄° *
devAºay
[1];

735 
devAºay
[0] = 
dev
;

736 
	`DBG
(<< "dismou¡_vﬁ_log dev_«me=" << 
devAºay
[0] << " vﬁid =" << 
vid
);

737 
	`fûl
(0, 0, (
	`√w
 (
_d©a
Ë
	`chk±_dev_èb_t
(1, 
devAºay
, &
vid
))->
	`size
());

738 
	}
}

741 
	gdismou¡_vﬁ_log
::
ªdo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

743 
	`w_as£π9
(
∑ge
 == 0);

744 
chk±_dev_èb_t
* 
dp
 = (chk±_dev_èb_t*Ë
_d©a
;

746 
	`w_as£π9
(
dp
->
cou¡
 == 1);

750 
	`W_IGNORE
(
io_m
::
	`dismou¡
(
dp
->
devªc
[0].
vid
, 
åue
));

751 
	}
}

760 ˛as†
	c∑ge_öô_t
 {

761 
	m¥iv©e
:

763 
uöt2_t
 
_∑ge_èg
;

764 
uöt2_t
 
	m_∑ge_Êag
;

766 
uöt2_t
 
	m_°‹e_Êag
;

767 
fûl2
 
	m_fûl
;

768 
	mpublic
:

770 
∑ge_p
::
èg_t
 
	$∑ge_èg
() const {

771  
∑ge_p
::
	`èg_t
(
_∑ge_èg
); }

774 
∑ge_p
::
∑ge_Êag_t
 
	$∑ge_Êag
() const {

775  
∑ge_p
::
	`∑ge_Êag_t
(
_∑ge_Êag
); 
	}
}

778 
	gsmÀvñ_0
::
°‹e_Êag_t
 
	$°‹e_Êag
() const {

779  
smÀvñ_0
::
	`°‹e_Êag_t
(
_°‹e_Êag
); 
	}
}

781 
	$∑ge_öô_t
(
uöt2_t
 
t
, uöt2_à
pf
, uöt2_à
sf
):

782 
	`_∑ge_èg
(
t
), 
	`_∑ge_Êag
(
pf
), 
	$_°‹e_Êag
(
sf
Ë{
	}
};

784 
	$size
(Ë{  (*
this
); 
	}
}

785 
ªdo_öô
(
∑ge_p
 *
p
, c⁄° 
Õid_t
& 
pid
);

790 
	g∑ge_öô_t
::
	$ªdo_öô
(
∑ge_p
* 
∑ge
, c⁄° 
Õid_t
& 
pid
)

792 
	`w_as£π2
–
∑ge
->
	`is_fixed
());

799 
∑ge
->
	`£t_°‹e_Êags
(
	`°‹e_Êag
());

804 
	`W_COERCE
–
∑ge
->
	`_f‹m©
(
pid
,

805 
	`∑ge_èg
(),

806 
	`∑ge_Êag
(),

807 
	`°‹e_Êag
()) );

808 
	}
}

818 
	s∑ge_lök_t
 {

819 
shpid_t
 
	mﬁd_¥ev
, 
	mﬁd_√xt
;

820 
shpid_t
 
	m√w_¥ev
, 
	m√w_√xt
;

822 
∑ge_lök_t
(
shpid_t
 
›
, shpid_à
⁄
, shpid_à
≈
, shpid_à
¬
)

823 : 
ﬁd_¥ev
(
›
), 
ﬁd_√xt
(
⁄
), 
√w_¥ev
(
≈
), 
√w_√xt
(
¬
) {};

825 
size
(Ë{  (*
	mthis
); }

828 
	g∑ge_lök_log
::
	$∑ge_lök_log
(

829 c⁄° 
∑ge_p
& 
∑ge
,

830 
shpid_t
 
√w_¥ev
,

831 
shpid_t
 
√w_√xt
)

833 
	`w_as£π2
(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_båì_p
);

834 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

835 (
	`√w
 (
_d©a
Ë
	`∑ge_lök_t
(
∑ge
.
	`¥ev
(),Öage.
	`√xt
(),

836 
√w_¥ev
, 
√w_√xt
))->
	`size
());

837 
	}
}

840 
	g∑ge_lök_log
::
	$ªdo
(
∑ge_p
* 
p
)

842 
∑ge_lök_t
* 
dp
 = (∑ge_lök_t*Ë
_d©a
;

843 
	`w_as£π9
(
p
->
	`√xt
(Ë=
dp
->
ﬁd_√xt
);

844 
	`w_as£π9
(
p
->
	`¥ev
(Ë=
dp
->
ﬁd_¥ev
);

846 
	`W_COERCE
(
p
->
	`lök_up
(
dp
->
√w_¥ev
, dp->
√w_√xt
));

847 
	}
}

850 
	g∑ge_lök_log
::
	$undo
(
∑ge_p
* 
p
)

852 
∑ge_lök_t
* 
dp
 = (∑ge_lök_t*Ë
_d©a
;

853 
	`w_as£π9
(
p
->
	`√xt
(Ë=
dp
->
√w_√xt
);

854 
	`w_as£π9
(
p
->
	`¥ev
(Ë=
dp
->
√w_¥ev
);

855 
	`W_COERCE
(
p
->
	`lök_up
(
dp
->
ﬁd_¥ev
, dp->
ﬁd_√xt
));

856 
	}
}

867 ˛as†
	c∑ge_ö£π_t
 {

868 
	mpublic
:

869 
öt2_t
 
idx
;

870 
öt2_t
 
	m˙t
;

871 íum { 
	mmax
 = ((
logªc_t
::
d©a_sz
 - 2*(
uöt2_t
)Ë- (
∑ge_öô_t
)) };

874 
	gd©a
[
max
];

876 
∑ge_ö£π_t
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
);

877 
∑ge_ö£π_t
(
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
);

878 
cvec_t
* 
unÊ©ãn
(
˙t
, cvec_à
vec
[]);

879 
size
();

880 
ªdo
(
∑ge_p
* 
∑ge
);

881 
undo
(
∑ge_p
* 
∑ge
);

884 
	g∑ge_ö£π_t
::
	$∑ge_ö£π_t
(c⁄° 
∑ge_p
& 
∑ge
, 
i
, 
c
)

885 : 
	`idx
(
i
), 
	$˙t
(
c
)

887 if(
˙t
) {

888 
	`w_as£π1
(
˙t
 * (
öt2_t
Ë< (
d©a
));

889 
öt2_t
* 
À≈
 = (öt2_t*Ë
d©a
;

890 
tŸÆ
 = 0;

891 
i
 = 0; i < 
˙t
; 
tŸÆ
 +
À≈
[i++]) {

895 
À≈
[
i
] = (
öt2_t
Ë
∑ge
.
	`tu∂e_size
(
idx
 + i);

897 
	`w_as£π1
(
tŸÆ
 + 
˙t
 * (
öt2_t
Ë< (
d©a
));

899 * 
p
 = 
d©a
 + (
öt2_t
Ë* 
˙t
;

900 
i
 = 0; i < 
c
; i++) {

901 
	`mem˝y
(
p
, 
∑ge
.
	`tu∂e_addr
(
idx
 + 
i
), 
À≈
[i]);

902 
p
 +
À≈
[
i
];

905 
	}
}

908 
	g∑ge_ö£π_t
::
	$∑ge_ö£π_t
(
i
, 
c
, c⁄° 
cvec_t
* 
v
)

909 : 
	`idx
(
i
), 
	$˙t
(
c
)

911 if(
˙t
) {

912 
	`w_as£π1
(
˙t
 * (
öt2_t
Ë< (
d©a
));

913 
öt2_t
* 
À≈
 = (öt2_t*Ë
d©a
;

914 
tŸÆ
 = 0;

915 
i
 = 0; i < 
˙t
; 
tŸÆ
 +
À≈
[i++]) {

916 
À≈
[
i
] = 
v
[i].
	`size
();

918 
	`w_as£π1
(
tŸÆ
 + 
˙t
 * (
öt2_t
Ë< (
d©a
));

920 * 
p
 = 
d©a
 + (
öt2_t
Ë* 
˙t
;

921 
i
 = 0; i < 
c
; i++) {

922 
p
 +
v
[
i
].
	`c›y_to
(p);

924 
	`w_as£π1
((
uöt
)(
p
 - 
d©a
Ë=
tŸÆ
 + 
˙t
 * (
öt2_t
));

926 
	}
}

928 
cvec_t
* 
	g∑ge_ö£π_t
::
unÊ©ãn
(
W_IFDEBUG9
(
c
), cvec_à
vec
[])

930 
w_as£π9
(
c
 =
˙t
);

931 
öt2_t
* 
	gÀ≈
 = (öt2_t*Ë
d©a
;

932 * 
	gp
 = 
d©a
 + (
öt2_t
Ë* 
˙t
;

933 
	gi
 = 0; i < 
	g˙t
; i++) {

934 
	gvec
[
i
].
put
(
p
, 
À≈
[i]);

935 
	gp
 +
À≈
[
i
];

937  
	gvec
;

941 
	g∑ge_ö£π_t
::
	$size
()

943 
öt2_t
* 
À≈
 = (öt2_t*Ë
d©a
;

944 * 
p
 = 
d©a
 + (
öt2_t
Ë* 
˙t
;

945 
i
 = 0; i < 
˙t
; i++Ë
p
 +
À≈
[i];

946  
p
 - (*Ë
this
;

947 
	}
}

951 
	g∑ge_ö£π_t
::
	$ªdo
(
∑ge_p
* 
∑ge
)

953 if(
˙t
) {

954 
cvec_t
* 
vec
 = 
√w
 cvec_t[
˙t
];

955 i‡(! 
vec
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

956 
w_auto_dñëe_¨øy_t
<
cvec_t
> 
	`auto_dñ
(
vec
);

958 
	`W_COERCE
(
∑ge
->
	`ö£π_ex∑nd
(
idx
, 
˙t
,

959 
	`unÊ©ãn
(
˙t
, 
vec
)) );

961 
	}
}

964 
	g∑ge_ö£π_t
::
	$undo
(
∑ge_p
* 
∑ge
)

966 if(
˙t
) {

967 #i‡
W_DEBUG_LEVEL
 > 1

968 
uöt2_t
* 
À≈
 = (uöt2_t*Ë
d©a
;

969 * 
p
 = 
d©a
 + (
öt2_t
Ë* 
˙t
;

970 
i
 = 0; i < 
˙t
; i++) {

971 
	`w_as£π2
(
À≈
[
i
] =
∑ge
->
	`tu∂e_size
(ò+ 
idx
));

972 
	`w_as£π2
(
	`memcmp
(
p
, 
∑ge
->
	`tu∂e_addr
(
i
 + 
idx
), 
À≈
[i]) == 0);

973 
p
 +
À≈
[
i
];

976 
	`W_COERCE
(
∑ge
->
	`ªmove_com¥ess
(
idx
, 
˙t
));

978 
	}
}

980 
	g∑ge_ö£π_log
::
	$∑ge_ö£π_log
(

981 c⁄° 
∑ge_p
& 
∑ge
,

982 
idx
,

983 
˙t
,

984 c⁄° 
cvec_t
* 
vec
)

986 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

987 (
	`√w
 (
_d©a
Ë
	`∑ge_ö£π_t
(
idx
, 
˙t
, 
vec
))->
	`size
());

988 
	}
}

993 
	g∑ge_ö£π_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

995 
∑ge_ö£π_t
* 
dp
 = (∑ge_ö£π_t*Ë
_d©a
;

996 
dp
->
	`ªdo
(
∑ge
);

997 
	}
}

1001 
	g∑ge_ö£π_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1003 
∑ge_ö£π_t
* 
dp
 = (∑ge_ö£π_t*Ë
_d©a
;

1004 
dp
->
	`undo
(
∑ge
);

1005 
	}
}

1016 
∑ge_ö£π_t
 
	t∑ge_ªmove_t
;

1018 
	g∑ge_ªmove_log
::
	$∑ge_ªmove_log
(

1019 c⁄° 
∑ge_p
& 
∑ge
,

1020 
idx
,

1021 
˙t
)

1023 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1024 (
	`√w
 (
_d©a
Ë
	`∑ge_ªmove_t
(
∑ge
, 
idx
, 
˙t
))->
	`size
());

1025 
	}
}

1027 
	g∑ge_ªmove_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1029 ((
∑ge_ö£π_log
*)
this
)->
	`undo
(
∑ge
);

1030 
	}
}

1032 
	g∑ge_ªmove_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1034 ((
∑ge_ö£π_log
*)
this
)->
	`ªdo
(
∑ge
);

1035 
	}
}

1053 ˛as†
	c∑ge_m¨k_t
 {

1054 
	mpublic
:

1055 
öt2_t
 
idx
;

1056 
uöt2_t
 
	mÀn
;

1064 íum { 
	mmax
 = ((
logªc_t
::
d©a_sz
 - 2*(
uöt2_t
)Ë- (
∑ge_öô_t
)) };

1065 
	gd©a
[
max
];

1067 
	$∑ge_m¨k_t
(
i
, 
smsize_t
 
l
, c⁄° * 
d
Ë: 
	`idx
(i), 
	`Àn
((
uöt2_t
)l) {

1068 
	`w_as£π1
(
l
 <(
d©a
));

1069 
	`mem˝y
(
d©a
, 
d
, 
l
);

1070 
	}
}

1071 
	$∑ge_m¨k_t
(
i
, c⁄° 
cvec_t
& 
v
Ë: 
	`idx
(i), 
	`Àn
((
uöt2_t
)v.
	$size
()) {

1072 
	`w_as£π1
(
v
.
	`size
(Ë<(
d©a
));

1073 if(
Àn
>0) {

1074 
v
.
	`c›y_to
(
d©a
);

1076 
	}
}

1077 
	$size
() {

1078  
d©a
 + 
Àn
 - (*Ë
this
;

1079 
	}
}

1080 
ªdo
(
∑ge_p
* 
∑ge
);

1081 
undo
(
∑ge_p
* 
∑ge
);

1085 
	g∑ge_m¨k_t
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1087 if(
Àn
>0) {

1088 if((
idx
 >0 && idx < 
∑ge
->
	`n¶Ÿs
())==
Ál£
) {

1093 
	`w_as£π1
(
idx
 >0 && idx < 
∑ge
->
	`n¶Ÿs
());

1095 
	`w_as£π1
–
∑ge
->
	`tu∂e_size
(
idx
Ë=
Àn
);

1096 
	`w_as£π1
–
	`memcmp
(
∑ge
->
	`tu∂e_addr
(
idx
), 
d©a
, 
Àn
) == 0);

1097 
	`W_COERCE
–
∑ge
->
	`m¨k_‰ì
(
idx
) );

1099 
	}
}

1102 
	g∑ge_m¨k_t
::
	$undo
(
∑ge_p
* 
∑ge
)

1104 if(
Àn
>0) {

1105 
cvec_t
 
	`v
(
d©a
, 
Àn
);

1106 
	`W_COERCE
–
∑ge
->
	`ª˛aim
(
idx
, 
v
) );

1108 
	}
}

1110 
	g∑ge_m¨k_log
::
	$∑ge_m¨k_log
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
)

1112 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1113 (
	`√w
 (
_d©a
Ë
	`∑ge_m¨k_t
(
idx
, 
∑ge
.
	`tu∂e_size
(idx),

1114 
∑ge
.
	`tu∂e_addr
(
idx
)))->
	`size
() );

1115 
	}
}

1118 
	g∑ge_m¨k_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1120 
∑ge_m¨k_t
* 
dp
 = (∑ge_m¨k_t*Ë
_d©a
;

1121 
dp
->
	`ªdo
(
∑ge
);

1122 
	}
}

1125 
	g∑ge_m¨k_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1127 
∑ge_m¨k_t
* 
dp
 = (∑ge_m¨k_t*Ë
_d©a
;

1128 
dp
->
	`undo
(
∑ge
);

1129 
	}
}

1141 
∑ge_m¨k_t
 
	t∑ge_ª˛aim_t
;

1143 
	g∑ge_ª˛aim_log
::
	$∑ge_ª˛aim_log
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
,

1144 c⁄° 
cvec_t
& 
vec
)

1146 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1147 (
	`√w
 (
_d©a
Ë
	`∑ge_ª˛aim_t
(
idx
, 
vec
))->
	`size
()) ;

1148 
	}
}

1151 
	g∑ge_ª˛aim_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1153 
∑ge_m¨k_t
* 
dp
 = (∑ge_m¨k_t*Ë
_d©a
;

1155 
dp
->
	`undo
(
∑ge
);

1156 
	}
}

1159 
	g∑ge_ª˛aim_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1161 
∑ge_m¨k_t
* 
dp
 = (∑ge_m¨k_t*Ë
_d©a
;

1163 
dp
->
	`ªdo
(
∑ge
);

1164 
	}
}

1173 ˛as†
	c∑ge_shi·_t
 {

1174 
	mpublic
:

1175 
∑ge_s
::
	t¶Ÿ_Àngth_t
 slot_length_t;

1177 
öt2_t
 
	midx1
;

1178 
¶Ÿ_Àngth_t
 
	moff1
;

1180 
¶Ÿ_Àngth_t
 
	mÀn1
;

1181 
öt2_t
 
	midx2
;

1182 
¶Ÿ_Àngth_t
 
	moff2
;

1184 
NORET
 
	$∑ge_shi·_t
(

1185 
i
,

1186 
¶Ÿ_Àngth_t
 
o1
,

1187 
¶Ÿ_Àngth_t
 
l1
,

1188 
j
,

1189 
¶Ÿ_Àngth_t
 
o2
 ) : 
	`idx1
(
i
), 
	`off1
(
o1
), 
	`Àn1
(
l1
),

1190 
	`idx2
(
j
), 
	$off2
(
o2
){};

1192 
	$size
(Ë{  (*
this
); 
	}
}

1195 
	g∑ge_shi·_log
::
	$∑ge_shi·_log
(

1196 c⁄° 
∑ge_p
& 
∑ge
,

1197 
idx
,

1198 
∑ge_shi·_t
::
¶Ÿ_Àngth_t
 
off1
,

1199 
∑ge_shi·_t
::
¶Ÿ_Àngth_t
 
Àn1
,

1200 
idx2
,

1201 
∑ge_shi·_t
::
¶Ÿ_Àngth_t
 
off2


1204 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1205 (
	`√w
 (
_d©a
Ë
	`∑ge_shi·_t
(
idx
, 
off1
, 
Àn1
,

1206 
idx2
, 
off2
))->
	`size
());

1207 
	}
}

1211 
	g∑ge_shi·_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1213 
∑ge_shi·_t
* 
dp
 = (∑ge_shi·_t*Ë
_d©a
;

1215 
	`W_COERCE
(
∑ge
->
	`shi·
(
dp
->
idx1
, dp->
off1
, dp->
Àn1
,

1216 
dp
->
idx2
, dp->
off2
));

1217 
	}
}

1220 
	g∑ge_shi·_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1222 
∑ge_shi·_t
* 
dp
 = (∑ge_shi·_t*Ë
_d©a
;

1224 
	`W_COERCE
(
∑ge
->
	`shi·
(
dp
->
idx2
, dp->
off2
, dp->
Àn1
,

1225 
dp
->
idx1
, dp->
off1
));

1226 
	}
}

1236 
	s∑ge_•li˚_t
 {

1237 
öt2_t
 
	midx
;

1238 
uöt2_t
 
	m°¨t
;

1239 
uöt2_t
 
	mﬁd_Àn
;

1241 
uöt2_t
 
	m√w_Àn
;

1242 
	md©a
[
logªc_t
::
d©a_sz
 - 4 * (
öt2_t
)];

1244 
NORET
 
∑ge_•li˚_t
(

1245 
i
,

1246 
uöt
 
°¨t
,

1247 
uöt
 
Àn
,

1248 c⁄° * 
tu∂e
,

1249 c⁄° 
cvec_t
& 
v
);

1250 * 
ﬁd_image
(Ë{  
	md©a
; }

1251 * 
√w_image
(Ë{  
	md©a
 + 
	mﬁd_Àn
; }

1252 
size
() {

1253  
	md©a
 + 
	mﬁd_Àn
 + 
	m√w_Àn
 - (*Ë
	mthis
;

1257 
	g∑ge_•li˚_t
::
	$∑ge_•li˚_t
(

1258 
i
,

1259 
uöt
 
°¨t_
,

1260 
uöt
 
Àn_
,

1261 c⁄° * 
tu∂e
,

1262 c⁄° 
cvec_t
& 
v
)

1263 : 
	`idx
(
i
), 
	`°¨t
(
°¨t_
),

1264 
	`ﬁd_Àn
(
Àn_
), 
	`√w_Àn
(
v
.
	$size
())

1266 
	`w_as£π1
((
size_t
)(
ﬁd_Àn
 + 
√w_Àn
Ë< (
d©a
));

1267 
	`mem˝y
(
	`ﬁd_image
(), ((*)
tu∂e
)+
°¨t
, 
ﬁd_Àn
);

1268 
v
.
	`c›y_to
(
	`√w_image
());

1269 
	}
}

1271 
	g∑ge_•li˚_log
::
	$∑ge_•li˚_log
(

1272 c⁄° 
∑ge_p
& 
∑ge
,

1273 
idx
,

1274 
°¨t
,

1275 
Àn
,

1276 c⁄° 
cvec_t
& 
v
)

1278 
	`w_as£π9
(
Àn
 <
smÀvñ_0
::
∑ge_sz
);

1279 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1280 (
	`√w
 (
_d©a
Ë
	`∑ge_•li˚_t
(
idx
, 
°¨t
, 
Àn
,

1281 
∑ge
.
	`tu∂e_addr
(
idx
), 
v
))->
	`size
());

1282 
	}
}

1285 
	g∑ge_•li˚_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1287 
∑ge_•li˚_t
* 
dp
 = (∑ge_•li˚_t*Ë
_d©a
;

1288 #i‡
W_DEBUG_LEVEL
 > 0

1289 * 
p
 = ((*Ë
∑ge
->
	`tu∂e_addr
(
dp
->
idx
)Ë+ dp->
°¨t
;

1290 if(
	`memcmp
(
dp
->
	`ﬁd_image
(), 
p
, dp->
ﬁd_Àn
) != 0) {

1291 
	`Ârötf
(
°dîr
, "Thög†gÿbad i¿tu∂ê%d\n", 
dp
->
idx
);

1292 
u_ch¨
 *
ﬁd
 = (u_ch¨ *)
dp
->
	`ﬁd_image
();

1293 
u_ch¨
 *
tu∂e
 = (u_ch¨ *)
p
;

1294 
Àn
 = 
dp
->
ﬁd_Àn
;

1295 
	`Ârötf
(
°dîr
,

1297 
Àn
,

1298 
ﬁd
, 
dp
->
°¨t
, 
p
);

1300 
i
=0; i < 
Àn
; i++) {

1301 if(*
ﬁd
 !*
tu∂e
) {

1302 
	`Ârötf
(
°dîr
, "OK u¡û off£à%d\n", 
i
);

1303 
	`Ârötf
(
°dîr
, "ﬁd imagê0x%xÖagê0x%x\n", *
ﬁd
, *
tu∂e
);

1305 
ﬁd
++;

1306 
tu∂e
++;

1307 
i
++;

1310 
	`w_as£π1
(
	`memcmp
(
dp
->
	`ﬁd_image
(), 
p
, dp->
ﬁd_Àn
) == 0);

1313 c⁄° 
vec_t
 
	`√w_vec_tmp
(
dp
->
	`√w_image
(), dp->
√w_Àn
);

1314 
	`W_COERCE
(
∑ge
->
	`•li˚
(
dp
->
idx
, dp->
°¨t
, dp->
ﬁd_Àn
, 
√w_vec_tmp
));

1315 
	}
}

1318 
	g∑ge_•li˚_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1320 
∑ge_•li˚_t
* 
dp
 = (∑ge_•li˚_t*Ë
_d©a
;

1321 #i‡
W_DEBUG_LEVEL
 > 1

1322 i‡(
∑ge
->
	`èg
(Ë!
∑ge_p
::
t_exéök_p
) {

1327 * 
p
 = ((*Ë
∑ge
->
	`tu∂e_addr
(
dp
->
idx
)Ë+ dp->
°¨t
;

1328 
	`w_as£π1
(
	`memcmp
(
dp
->
	`√w_image
(), 
p
, dp->
√w_Àn
) == 0);

1330 
	`w_as£π1
(
dp
->
√w_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1331 
	`w_as£π1
(
dp
->
ﬁd_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1334 c⁄° 
vec_t
 
	`ﬁd_vec_tmp
(
dp
->
	`ﬁd_image
(), dp->
ﬁd_Àn
);

1335 
	`W_COERCE
(
∑ge
->
	`•li˚
(
dp
->
idx
, dp->
°¨t
, dp->
√w_Àn
, 
ﬁd_vec_tmp
));

1336 
	}
}

1348 
	s∑ge_•li˚z_t
 {

1349 
öt2_t
 
	midx
;

1350 
uöt2_t
 
	m°¨t
;

1351 
uöt2_t
 
	mﬁd_Àn
;

1353 
uöt2_t
 
	mﬁí
;

1354 
uöt2_t
 
	m√w_Àn
;

1355 
uöt2_t
 
	m∆í
;

1356 
	md©a
[
logªc_t
::
d©a_sz
 - 6 * (
öt2_t
)];

1358 
NORET
 
∑ge_•li˚z_t
(

1359 
i
,

1360 
uöt
 
°¨t
,

1361 
uöt
 
Àn
,

1362 
uöt
 
ﬁí_
,

1363 
uöt
 
∆í_
,

1364 c⁄° * 
tu∂e
,

1365 c⁄° 
cvec_t
& 
v
);

1366 * 
ﬁd_image
(Ë{  
	md©a
; }

1367 * 
√w_image
(Ë{  
	md©a
 + 
	mﬁí
; }

1368 
size
() {

1369  
	md©a
 + 
	mﬁí
 + 
	m∆í
 - (*Ë
	mthis
;

1372 
	g∑ge_•li˚z_t
::
	$∑ge_•li˚z_t
(

1373 
i
,

1374 
uöt
 
°¨t_
,

1375 
uöt
 
Àn_
,

1376 
uöt
 
ßve_
,

1377 
uöt
 
zÀn
,

1378 c⁄° * 
tu∂e
,

1379 c⁄° 
cvec_t
& 
v
)

1380 : 
	`idx
(
i
), 
	`°¨t
(
°¨t_
), 
	`ﬁd_Àn
(
Àn_
),

1381 
	`ﬁí
(
ßve_
),

1382 
	`√w_Àn
(
v
.
	`size
()),

1383 
	$∆í
(
zÀn
)

1385 
	`w_as£π1
((
size_t
)(
ﬁd_Àn
 + 
√w_Àn
Ë< (
d©a
));

1386 
	`w_as£π1
(
ﬁd_Àn
 =
ﬁí
 || olen == 0);

1387 
	`w_as£π1
(
√w_Àn
 =
∆í
 ||Çlen == 0);

1389 if(
ﬁí
=
ﬁd_Àn
) {

1390 
	`mem˝y
(
	`ﬁd_image
(), ((*)
tu∂e
)+
°¨t
, 
ﬁd_Àn
);

1392 if(
∆í
=
√w_Àn
) {

1393 
	`w_as£π1
(
∆í
 =
v
.
	`size
());

1394 
v
.
	`c›y_to
(
	`√w_image
());

1397 
	`DBG
(<<"splicezÜog: "

1398 << " oÀn: " << 
ﬁí


1399 << " old_Àn: " << 
ﬁd_Àn


1400 << "Çew_Àn: " << 
√w_Àn


1402 
	}
}

1404 
	g∑ge_•li˚z_log
::
	$∑ge_•li˚z_log
(

1405 c⁄° 
∑ge_p
& 
∑ge
,

1406 
idx
,

1407 
°¨t
,

1408 
Àn
,

1409 
ﬁí
,

1410 
∆í
,

1411 c⁄° 
cvec_t
& 
v
)

1414 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1415 (
	`√w
 (
_d©a
Ë
	`∑ge_•li˚z_t
(
idx
, 
°¨t
, 
Àn
, 
ﬁí
, 
∆í
,

1416 
∑ge
.
	`tu∂e_addr
(
idx
), 
v
))->
	`size
());

1417 
	}
}

1420 
	g∑ge_•li˚z_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1422 
∑ge_•li˚z_t
* 
dp
 = (∑ge_•li˚z_t*Ë
_d©a
;

1424 #i‡
W_DEBUG_LEVEL
 > 0

1426 * 
p
 = ((*Ë
∑ge
->
	`tu∂e_addr
(
dp
->
idx
)Ë+ dp->
°¨t
;

1431 
	`w_as£π1
(
dp
->
ﬁí
 =0 || dp->
∆í
 == 0);

1432 
	`w_as£π1
–
dp
->
√w_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1433 
	`w_as£π1
–
dp
->
ﬁd_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1441 if(
dp
->
ﬁd_Àn
 > 0) {

1443 if(
dp
->
ﬁí
 == 0) {

1446 
	`w_as£π1
(
	`memcmp
(
smÀvñ_0
::
zîo_∑ge
, 
p
, 
dp
->
ﬁd_Àn
) == 0);

1449 
	`w_as£π1
(
	`memcmp
(
dp
->
	`ﬁd_image
(), 
p
, dp->
ﬁd_Àn
) == 0);

1454 
vec_t
 
z
;

1456 if(
dp
->
∆í
 == 0) {

1457 c⁄° 
zvec_t
 
	`√w_vec_tmp
(
dp
->
√w_Àn
);

1458 
z
.
	`£t
(
√w_vec_tmp
);

1460 
z
.
	`£t
(
dp
->
	`√w_image
(), dp->
√w_Àn
);

1463 
	`W_COERCE
(
∑ge
->
	`•li˚
(
dp
->
idx
, dp->
°¨t
, dp->
ﬁd_Àn
, 
z
));

1464 
	}
}

1467 
	g∑ge_•li˚z_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1469 
∑ge_•li˚z_t
* 
dp
 = (∑ge_•li˚z_t*Ë
_d©a
;

1470 #i‡
W_DEBUG_LEVEL
 > 2

1471 i‡(
∑ge
->
	`èg
(Ë!
∑ge_p
::
t_exéök_p
) {

1475 * 
p
 = ((*Ë
∑ge
->
	`tu∂e_addr
(
dp
->
idx
)Ë+ dp->
°¨t
;

1479 
	`w_as£π1
(
dp
->
ﬁí
 =0 || dp->
∆í
 == 0);

1480 
	`w_as£π1
–
dp
->
√w_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1481 
	`w_as£π1
–
dp
->
ﬁd_Àn
 <
smÀvñ_0
::
∑ge_sz
);

1488 if(
dp
->
∆í
 == 0) {

1491 
	`w_as£π1
(
	`memcmp
(
smÀvñ_0
::
zîo_∑ge
, 
p
, 
dp
->
√w_Àn
) == 0);

1494 
	`w_as£π1
(
	`memcmp
(
dp
->
	`√w_image
(), 
p
, dp->
√w_Àn
) == 0);

1498 
	`DBG
(<<"splicez undo: "

1499 << " oÀ¿(°‹edË: " << 
dp
->
ﬁí


1500 << " old_À¿(‹ig): " << 
dp
->
ﬁd_Àn


1501 << "ÇÀ¿(°‹edË: " << 
dp
->
∆í


1502 << "Çew_À¿(‹ig): " << 
dp
->
√w_Àn


1505 
vec_t
 
z
;

1506 if(
dp
->
ﬁí
 == 0) {

1507 c⁄° 
zvec_t
 
	`ﬁd_vec_tmp
(
dp
->
ﬁd_Àn
);

1508 
z
.
	`£t
(
ﬁd_vec_tmp
);

1510 
z
.
	`£t
(
dp
->
	`ﬁd_image
(), dp->
ﬁd_Àn
);

1512 
	`W_COERCE
(
∑ge
->
	`•li˚
(
dp
->
idx
, dp->
°¨t
, dp->
√w_Àn
, 
z
));

1513 
	}
}

1522 
	s∑ge_£t_byã_t
 {

1523 
uöt2_t
 
	midx
;

1524 
fûl2
 
	mfûÀr
;

1525 
u_ch¨
 
	mﬁd_vÆue
;

1526 
u_ch¨
 
	mbôs
;

1527 
	m›î©i⁄
;

1528 
NORET
 
∑ge_£t_byã_t
(
uöt2_t
 
i
, 
u_ch¨
 
ﬁd
, u_ch¨ 
›î
, 
›
) :

1529 
idx
(
i
), 
ﬁd_vÆue
(
ﬁd
), 
bôs
(
›î
), 
›î©i⁄
(
›
) {};

1530 
size
(Ë{  (*
	mthis
); }

1533 
	g∑ge_£t_byã_log
::
	$∑ge_£t_byã_log
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
,

1534 
u_ch¨
 
wh©
, u_ch¨ 
bôs
, 
›
)

1536 
	`w_as£π2
(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_exéök_p
);

1537 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1538 (
	`√w
 (
_d©a
Ë
	`∑ge_£t_byã_t
(
idx
, 
wh©
, 
bôs
, 
›
))->
	`size
());

1539 
	}
}

1542 
	g∑ge_£t_byã_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1544 
∑ge_£t_byã_t
* 
dp
 = (∑ge_£t_byã_t*Ë
_d©a
;

1546 
	`W_COERCE
–
∑ge
->
	`£t_byã
(
dp
->
idx
, dp->
ﬁd_vÆue
, 
∑ge_p
::
l_£t
) );

1547 
	}
}

1550 
	g∑ge_£t_byã_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1552 
∑ge_£t_byã_t
* 
dp
 = (∑ge_£t_byã_t*Ë
_d©a
;

1553 
	`W_COERCE
–
∑ge
->
	`£t_byã
(
dp
->
idx
, dp->
bôs
, (
∑ge_p
::
logiˇl_›î©i⁄
)

1554 (
dp
->
›î©i⁄
)) );

1555 
	}
}

1565 
	s∑ge_image_t
 {

1566 
	mimage
[(
∑ge_s
)];

1567 
∑ge_image_t
(c⁄° 
∑ge_p
& 
∑ge
) {

1568 
mem˝y
(
image
, &
∑ge
.
≥rsi°ít_∑π_c⁄°
(), (image));

1570 
size
(Ë{  (*
	mthis
); }

1573 
	g∑ge_image_log
::
	$∑ge_image_log
(c⁄° 
∑ge_p
& 
∑ge
)

1576 
	`w_as£π2
(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_båì_p


1578 
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_πªe_p
);

1580 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`∑ge_image_t
’age))->
	`size
());

1581 
	}
}

1584 
	g∑ge_image_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1586 
∑ge_image_t
* 
dp
 = (∑ge_image_t*Ë
_d©a
;

1587 
	`mem˝y
(&
∑ge
->
	`≥rsi°ít_∑π
(), 
dp
->
image
, (dp->image));

1588 
	}
}

1599 
	sbåì_purge_t
 {

1600 
Õid_t
 
	mroŸ
;

1601 
båì_purge_t
(c⁄° 
Õid_t
& 
pid
Ë: 
roŸ
(pid) {};

1602 
size
(Ë{  (*
	mthis
); }

1606 
	gbåì_purge_log
::
	$båì_purge_log
(c⁄° 
∑ge_p
& 
∑ge
)

1608 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1609 (
	`√w
 (
_d©a
Ë
	`båì_purge_t
(
∑ge
.
	`pid
()))->
	`size
());

1610 
	}
}

1614 
	gbåì_purge_log
::
	$undo
(
∑ge_p
* 
∑ge
)

1617 i‡(
∑ge
) {}

1626 
båì_purge_t
* 
dp
 = (båì_purge_t*Ë
_d©a
;

1627 
	`W_COERCE
–
smÀvñ_2
::
bt
->
	`purge
(
dp
->
roŸ
, 
Ál£
, false));

1628 
	}
}

1632 
	gbåì_purge_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1640 
båì_p
* 
bp
 = (båì_p*Ë
∑ge
;

1641 
båì_purge_t
* 
dp
 = (båì_purge_t*Ë
_d©a
;

1642 
	`W_COERCE
–
bp
->
	`£t_hdr
(
dp
->
roŸ
.
∑ge
, 1, 0,

1643 (
uöt2_t
)(
bp
->
	`is_com¥es£d
()?

1644 
båì_p
::
t_com¥es£d
: båì_p::
t_n⁄e
)) );

1653 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`£t_°‹e_Êags
(
dp
->
roŸ
.
	`°id
(),

1654 
båì_m
::
bulk_lﬂded_°‹e_ty≥
) );

1655 
	}
}

1667 
	sbåì_ö£π_t
 {

1668 
Õid_t
 
	mroŸ
;

1669 
öt2_t
 
	midx
;

1670 
uöt2_t
 
	mkÀn
;

1671 
uöt2_t
 
	mñí
;

1672 
öt2_t
 
	munique
;

1673 
	md©a
[
logªc_t
::
d©a_sz
 - (
Õid_t
Ë- 4*(
öt2_t
)];

1675 
båì_ö£π_t
(c⁄° 
båì_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
,

1676 c⁄° 
cvec_t
& 
ñ
, 
boﬁ
 
unique
);

1677 
size
(Ë{  
	md©a
 + 
	mkÀn
 + 
	mñí
 - (*Ë
	mthis
; }

1680 
	gbåì_ö£π_t
::
	$båì_ö£π_t
(

1681 c⁄° 
båì_p
& 
_∑ge
,

1682 
_idx
,

1683 c⁄° 
cvec_t
& 
key
,

1684 c⁄° 
cvec_t
& 
ñ
,

1685 
boﬁ
 
uni
)

1686 : 
	`idx
(
_idx
), 
	`kÀn
(
key
.
	`size
()), 
	`ñí
(
ñ
.size()), 
	$unique
(
uni
)

1688 
roŸ
 = 
_∑ge
.
	`roŸ
();

1689 
	`w_as£π1
((
size_t
)(
kÀn
 + 
ñí
Ë< (
d©a
));

1690 
key
.
	`c›y_to
(
d©a
);

1691 
ñ
.
	`c›y_to
(
d©a
 + 
kÀn
);

1692 
	}
}

1694 
	gbåì_ö£π_log
::
	$båì_ö£π_log
(

1695 c⁄° 
∑ge_p
& 
∑ge
,

1696 
idx
,

1697 c⁄° 
cvec_t
& 
key
,

1698 c⁄° 
cvec_t
& 
ñ
,

1699 
boﬁ
 
unique
)

1701 c⁄° 
båì_p
& 
bp
 = * (båì_p*Ë&
∑ge
;

1702 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1703 (
	`√w
 (
_d©a
Ë
	`båì_ö£π_t
(
bp
, 
idx
, 
key
, 
ñ
, 
unique
))->
	`size
());

1704 
	}
}

1707 
	gbåì_ö£π_log
::
undo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

1709 
	`w_as£π9
(
∑ge
 == 0);

1710 
båì_ö£π_t
* 
dp
 = (båì_ö£π_t*Ë
_d©a
;

1712 
cvec_t
 
key
, 
ñ
;

1713 
key
.
	`put
(
dp
->
d©a
, dp->
kÀn
);

1714 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1717 
rc_t
 
rc
;

1718 
agaö
:

1719 
rc
 = 
smÀvñ_2
::
bt
->
	`_ªmove
(
dp
->
roŸ
, (dp->
unique
 != 0),

1720 
smÀvñ_0
::
t_cc_n⁄e
, 
key
, 
ñ
);

1721 if(
rc
.
	`is_îr‹
()) {

1722 if(
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eRETRY
) {

1723 
	`Ârötf
(
°dîr
, "Retrying undo of btree insert dueÅoÉRETRY\n");

1724 
agaö
;

1726 
smÀvñ_2
::
bt
->
	`¥öt
(
dp
->
roŸ
);

1727 
˚º
 << " key=" << 
key
 << 
ídl


1728 << "É»=" << 
ñ
 << 
ídl


1729 << "Ñ¯=" << 
rc


1730 <<
ídl
;

1731 
	`W_FATAL
(
rc
.
	`îr_num
());

1733 
	}
}

1736 
	gbåì_ö£π_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1738 
båì_p
* 
bp
 = (båì_p*Ë
∑ge
;

1739 
båì_ö£π_t
* 
dp
 = (båì_ö£π_t*Ë
_d©a
;

1740 
vec_t
 
key
, 
ñ
;

1741 
key
.
	`put
(
dp
->
d©a
, dp->
kÀn
);

1742 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1748 
w_rc_t
 
rc
;

1749 
agaö
:

1750 
rc
 = 
bp
->
	`ö£π
(
key
, 
ñ
, 
dp
->
idx
);

1751 if(
rc
.
	`is_îr‹
()) {

1752 if(
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eRETRY
) {

1753 
	`Ârötf
(
°dîr
, "RetryingÑedo of btree insert dueÅoÉRETRY\n");

1754 
agaö
;

1757 
	`W_FATAL_MSG
(
fcINTERNAL
, << "btree_insert_log::redo " );

1759 
	}
}

1770 
båì_ö£π_t
 
	tbåì_ªmove_t
;

1772 
	gbåì_ªmove_log
::
	$båì_ªmove_log
(

1773 c⁄° 
∑ge_p
& 
∑ge
,

1774 
idx
,

1775 c⁄° 
cvec_t
& 
key
,

1776 c⁄° 
cvec_t
& 
ñ
,

1777 
boﬁ
 
unique
)

1779 c⁄° 
båì_p
& 
bp
 = * (båì_p*Ë&
∑ge
;

1780 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1781 (
	`√w
 (
_d©a
Ë
	`båì_ªmove_t
(
bp
, 
idx
, 
key
, 
ñ
, 
unique
))->
	`size
());

1782 
	}
}

1785 
	gbåì_ªmove_log
::
undo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

1787 
	`w_as£π9
(
∑ge
 == 0);

1788 
båì_ªmove_t
* 
dp
 = (båì_ªmove_t*Ë
_d©a
;

1790 
cvec_t
 
key
, 
ñ
;

1791 
key
.
	`put
(
dp
->
d©a
, dp->
kÀn
);

1792 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1802 
rc_t
 
rc
;

1803 
rc
 = 
smÀvñ_2
::
bt
->
	`_ö£π
(
dp
->
roŸ
, (dp->
unique
 != 0),

1804 
smÀvñ_0
::
t_cc_n⁄e
, 
key
, 
ñ
);

1805 if(
rc
.
	`is_îr‹
()) {

1806 
smÀvñ_2
::
bt
->
	`¥öt
(
dp
->
roŸ
);

1807 
˚º
 << " key=" << 
key
 << 
ídl


1808 << "É»=" << 
ñ
 << 
ídl


1809 << "Ñ¯=" << 
rc


1810 <<
ídl
;

1811 
	`W_FATAL
(
rc
.
	`îr_num
());

1813 
	}
}

1816 
	gbåì_ªmove_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1818 
båì_p
* 
bp
 = (båì_p*Ë
∑ge
;

1819 
båì_ªmove_t
* 
dp
 = (båì_ªmove_t*Ë
_d©a
;

1821 #i‡
W_DEBUG_LEVEL
 > 2

1822 
cvec_t
 
key
, 
ñ
;

1823 
key
.
	`put
(
dp
->
d©a
, dp->
kÀn
);

1824 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1826 
båec_t
 
	`r
(*
bp
, 
dp
->
idx
);

1827 
	`w_as£π3
(
ñ
 =
r
.
	`ñem
());

1828 
	`w_as£π3
(
key
 =
r
.
	`key
());

1834 
w_rc_t
 
rc
;

1835 
rc
 = 
bp
->
	`ªmove
(
dp
->
idx
, bp->
	`is_com¥es£d
());

1836 if(
rc
.
	`is_îr‹
()) {

1838 
	`w_as£π1
(0);

1840 
	}
}

1849 
	sπªe_ö£π_t
 {

1850 
Õid_t
 
	mroŸ
;

1851 
öt2_t
 
	midx
;

1852 
uöt2_t
 
	mkÀn
;

1853 
uöt2_t
 
	mñí
;

1854 
	md©a
[
logªc_t
::
d©a_sz
 - (
Õid_t
Ë- 3*(
öt2_t
)];

1856 
πªe_ö£π_t
(c⁄° 
πªe_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
,

1857 c⁄° 
cvec_t
& 
ñ
);

1858 
size
(Ë{  
	md©a
 + 
	mkÀn
 + 
	mñí
 - (*Ë
	mthis
; }

1861 
	gπªe_ö£π_t
::
	$πªe_ö£π_t
(c⁄° 
πªe_p
& 
_∑ge
, 
_idx
,

1862 c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
)

1863 : 
	`idx
(
_idx
), 
	`kÀn
(
key
.kÀn()), 
	`ñí
(
ñ
.
	$size
())

1865 
_∑ge
.
	`roŸ
(
roŸ
);

1866 
	`w_as£π1
((
size_t
)(
kÀn
 + 
ñí
Ë< (
d©a
));

1867 
	`mem˝y
(
d©a
, 
key
.
	`kvÆ
(), 
kÀn
);

1868 
ñ
.
	`c›y_to
(
d©a
 + 
kÀn
);

1869 
	}
}

1871 
	gπªe_ö£π_log
::
	$πªe_ö£π_log
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
,

1872 c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
)

1874 c⁄° 
πªe_p
& 
Ω
 = * (πªe_p*Ë&
∑ge
;

1875 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1876 (
	`√w
 (
_d©a
Ë
	`πªe_ö£π_t
(
Ω
, 
idx
, 
key
, 
ñ
))->
	`size
());

1877 
	}
}

1880 
	gπªe_ö£π_log
::
undo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

1882 
	`w_as£π9
(
∑ge
 == 0);

1883 
πªe_ö£π_t
* 
dp
 = (πªe_ö£π_t*Ë
_d©a
;

1885 
nbox_t
 
	`key
(
dp
->
d©a
, dp->
kÀn
);

1886 
cvec_t
 
ñ
;

1887 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1888 
	`W_COERCE
–
smÀvñ_2
::
π
->
	`ªmove
(
dp
->
roŸ
, 
key
, 
ñ
) );

1889 
	}
}

1892 
	gπªe_ö£π_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1894 
πªe_p
* 
Ω
 = (πªe_p*Ë
∑ge
;

1895 
πªe_ö£π_t
* 
dp
 = (πªe_ö£π_t*Ë
_d©a
;

1897 
nbox_t
 
	`key
(
dp
->
d©a
, dp->
kÀn
);

1898 
cvec_t
 
ñ
;

1899 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1901 
	`W_COERCE
–
Ω
->
	`ö£π
(
key
, 
ñ
) );

1902 
	}
}

1911 
πªe_ö£π_t
 
	tπªe_ªmove_t
;

1913 
	gπªe_ªmove_log
::
	$πªe_ªmove_log
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
,

1914 c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
)

1916 c⁄° 
πªe_p
& 
Ω
 = * (πªe_p*Ë&
∑ge
;

1917 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

1918 (
	`√w
 (
_d©a
Ë
	`πªe_ªmove_t
(
Ω
, 
idx
, 
key
, 
ñ
))->
	`size
());

1919 
	}
}

1922 
	gπªe_ªmove_log
::
undo
(
∑ge_p
* 
	$W_IFDEBUG9
(
∑ge
))

1924 
	`w_as£π9
(
∑ge
 == 0);

1925 
πªe_ªmove_t
* 
dp
 = (πªe_ªmove_t*Ë
_d©a
;

1927 
nbox_t
 
	`key
(
dp
->
d©a
, dp->
kÀn
);

1928 
cvec_t
 
ñ
;

1929 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1930 
	`W_COERCE
–
smÀvñ_2
::
π
->
	`ö£π
(
dp
->
roŸ
, 
key
, 
ñ
) );

1931 
	}
}

1934 
	gπªe_ªmove_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

1936 
πªe_p
* 
Ω
 = (πªe_p*Ë
∑ge
;

1937 
πªe_ªmove_t
* 
dp
 = (πªe_ªmove_t*Ë
_d©a
;

1939 #i‡
W_DEBUG_LEVEL
 > 2

1940 
nbox_t
 
	`key
(
dp
->
d©a
, dp->
kÀn
);

1941 
cvec_t
 
ñ
;

1942 
ñ
.
	`put
(
dp
->
d©a
 + dp->
kÀn
, dp->
ñí
);

1943 
	`w_as£π3
(
ñ
.
	`cmp
(
Ω
->
	`ªc
(
dp
->
idx
).
	`ñem
(),Ñp->ªc(dp->idx).
	`ñí
()) == 0);

1944 
	`w_as£π3
(
	`memcmp
(
key
.
	`kvÆ
(), 
Ω
->
	`ªc
(
dp
->
idx
).
	`key
(),

1945 
Ω
->
	`ªc
(
dp
->
idx
).
	`kÀn
()) == 0);

1948 
	`W_COERCE
–
Ω
->
	`ªmove
(
dp
->
idx
) );

1949 
	}
}

1960 
	s∑ges_ö_ext_t
 {

1961 
¢um_t
 
	m¢um
;

1962 
exäum_t
 
	mext
;

1963 
Pm≠_Align4
 
	mpm≠
;

1967 
∑ges_ö_ext_t
(
¢um_t
 
theSt‹e
, 
exäum_t
 
theExt
, c⁄° 
Pm≠
& 
thePm≠
);

1968 
size
(Ëc⁄° {  (*
	mthis
); }

1972 
	g∑ges_ö_ext_t
::
	$∑ges_ö_ext_t
(
¢um_t
 
theSt‹e
, 
exäum_t
 
theExt
, c⁄° 
Pm≠
& 
thePm≠
)

1973 : 
	`¢um
(
theSt‹e
), 
	$ext
(
theExt
)

1975 
pm≠
 = 
thePm≠
;

1976 
	`w_as£π9
(&
thePm≠
 != 0);

1977 
	`w_as£π9
(
theExt
);

1978 
	`w_as£π9
(
theSt‹e
);

1979 
	}
}

1982 
	gÆloc_∑ges_ö_ext_log
::
	$Æloc_∑ges_ö_ext_log
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
ext
, c⁄° 
Pm≠
& 
pm≠
)

1984 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`∑ges_ö_ext_t
(
¢um
, 
ext
, 
pm≠
))->
	`size
());

1985 
	}
}

1988 
	gÆloc_∑ges_ö_ext_log
::
	$ªdo
(
∑ge_p
* )

1990 
∑ges_ö_ext_t
* 
thePages
 = (∑ges_ö_ext_t*)
_d©a
;

1991 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`_ªcovî_∑ges_ö_ext
(
	`vid
(), 
thePages
->
¢um
,ÅhePages->
ext
,ÅhePages->
pm≠
, 
åue
) );

1992 
	}
}

1995 
	gÆloc_∑ges_ö_ext_log
::
	$undo
(
∑ge_p
* )

1997 
∑ges_ö_ext_t
* 
thePages
 = (∑ges_ö_ext_t*)
_d©a
;

1998 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`ªcovî_∑ges_ö_ext
(
	`vid
(), 
thePages
->
¢um
,ÅhePages->
ext
,ÅhePages->
pm≠
, 
Ál£
) );

1999 
	}
}

2002 
	g‰ì_∑ges_ö_ext_log
::
	$‰ì_∑ges_ö_ext_log
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
ext
, c⁄° 
Pm≠
& 
pm≠
)

2004 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`∑ges_ö_ext_t
(
¢um
, 
ext
, 
pm≠
))->
	`size
());

2005 
	}
}

2008 
	g‰ì_∑ges_ö_ext_log
::
	$ªdo
(
∑ge_p
* )

2010 
∑ges_ö_ext_t
* 
thePages
 = (∑ges_ö_ext_t*)
_d©a
;

2011 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`_ªcovî_∑ges_ö_ext
(
	`vid
(), 
thePages
->
¢um
,ÅhePages->
ext
,ÅhePages->
pm≠
, 
Ál£
) );

2012 
	}
}

2015 
	g‰ì_∑ges_ö_ext_log
::
	$undo
(
∑ge_p
* )

2017 
∑ges_ö_ext_t
* 
thePages
 = (∑ges_ö_ext_t*)
_d©a
;

2018 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`ªcovî_∑ges_ö_ext
(
	`vid
(), 
thePages
->
¢um
,ÅhePages->
ext
,ÅhePages->
pm≠
, 
åue
) );

2019 
	}
}

2032 
	s‰ì_ext_li°_t
 {

2033 
°id_t
 
	m°id
;

2034 
exäum_t
 
	mhód
;

2035 
exäum_t
 
	mcou¡
;

2037 
‰ì_ext_li°_t
(c⁄° 
°id_t
& 
theStid
, 
exäum_t
 
theHód
,Éxäum_à
theCou¡
)

2038 : 
°id
(
theStid
), 
hód
(
theHód
), 
cou¡
(
theCou¡
)

2040 
size
()

2041 {  (*
	mthis
); }

2045 
	g‰ì_ext_li°_log
::
	$‰ì_ext_li°_log
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
hód
,Éxäum_à
cou¡
)

2047 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`‰ì_ext_li°_t
(
°id
, 
hód
, 
cou¡
))->
	`size
());

2048 
	}
}

2050 
	g‰ì_ext_li°_log
::
	$ªdo
(
∑ge_p
* )

2052 
‰ì_ext_li°_t
* 
‰ìExtInfo
 = (‰ì_ext_li°_t*)
_d©a
;

2053 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`‰ì_exts_⁄_ßme_∑ge
(
‰ìExtInfo
->
°id
, fªeExtInfo->
hód
, fªeExtInfo->
cou¡
) );

2054 
	}
}

2066 
	s£t_ext_√xt_t
 {

2067 
exäum_t
 
	mext
;

2068 
exäum_t
 
	m√w_√xt
;

2070 
£t_ext_√xt_t
(
exäum_t
 
theExt
,Éxäum_à
theNew_√xt
)

2071 : 
ext
(
theExt
), 
√w_√xt
(
theNew_√xt
)

2073 
size
()

2074 {  (*
	mthis
); }

2078 
	g£t_ext_√xt_log
::
	$£t_ext_√xt_log
(c⁄° 
∑ge_p
& 
∑ge
,

2079 
exäum_t
 
ext
,Éxäum_à
√w_√xt
)

2081 
	`w_as£π2
(
∑ge
.
	`èg
(Ë=
∑ge_p
::
t_exéök_p
);

2082 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(),

2083 (
	`√w
 (
_d©a
Ë
	`£t_ext_√xt_t
(
ext
, 
√w_√xt
))->
	`size
());

2084 
	}
}

2086 
	g£t_ext_√xt_log
::
	$ªdo
(
∑ge_p
* )

2088 
£t_ext_√xt_t
* 
öfo
 = (£t_ext_√xt_t*)
_d©a
;

2089 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`£t_ext_√xt
(
	`vid
(),

2090 
öfo
->
ext
, info->
√w_√xt
) );

2091 
	}
}

2103 
	s¸óã_ext_li°_t
 {

2105 
°id_t
 
	m°id
;

2106 
exäum_t
 
	m¥ev
;

2107 
exäum_t
 
	m√xt
;

2108 
exäum_t
 
	mcou¡
;

2109 
exäum_t
 
	mli°
[
°node_p
::
max
];

2111 
¸óã_ext_li°_t
(c⁄° 
°id_t
& 
theStid
, 
exäum_t
 
thePªv
,Éxäum_à
theNext
,Éxäum_à
theCou¡
, c⁄°Éxäum_t* 
theLi°
)

2112 : 
°id
(
theStid
), 
¥ev
(
thePªv
), 
√xt
(
theNext
), 
cou¡
(
theCou¡
)

2114 
w_as£π9
(
cou¡
);

2115 
	mtheCou¡
--)

2116 
	mli°
[
theCou¡
] = 
theLi°
[theCount];

2118 
size
()

2119 {  ((*)&
	mthis
->
	mli°
[
cou¡
] - (*)this); }

2122 
	g¸óã_ext_li°_log
::
	$¸óã_ext_li°_log
(

2123 c⁄° 
∑ge_p
& 
∑ge
,

2124 c⁄° 
°id_t
& 
°id
,

2125 
exäum_t
 
¥ev
,

2126 
exäum_t
 
√xt
,

2127 
exäum_t
 
cou¡
,

2128 c⁄° 
exäum_t
* 
li°
)

2130 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`¸óã_ext_li°_t
(
°id
, 
¥ev
, 
√xt
, 
cou¡
, 
li°
))->
	`size
());

2131 
	}
}

2133 
	g¸óã_ext_li°_log
::
	$ªdo
(
∑ge_p
* )

2135 
¸óã_ext_li°_t
* 
öfo
 = (¸óã_ext_li°_t*)
_d©a
;

2136 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`¸óã_ext_li°_⁄_ßme_∑ge
(
öfo
->
°id
, info->
¥ev
, info->
√xt
, info->
cou¡
, info->
li°
) );

2137 
	}
}

2148 
	g°‹e_›î©i⁄_log
::
	$°‹e_›î©i⁄_log
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
)

2150 
	`fûl
(&
∑ge
.
	`pid
(),Öage.
	`èg
(), (
	`√w
 (
_d©a
Ë
	`°‹e_›î©i⁄_∑øm
(
∑øm
))->
	`size
());

2151 
	}
}

2153 
	g°‹e_›î©i⁄_log
::
	$ªdo
(
∑ge_p
* )

2155 
°‹e_›î©i⁄_∑øm
& 
∑øm
 = *(°‹e_›î©i⁄_∑øm*)
_d©a
;

2156 
	`DBG
–<< "°‹e_›î©i⁄_log::ªdo’age=" << 
	`pid
()

2157 << ",Ö¨am=" << 
∑øm
 << ")" );

2158 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`°‹e_›î©i⁄
(
	`vid
(), 
∑øm
) );

2159 
	}
}

2161 
	g°‹e_›î©i⁄_log
::
	$undo
(
∑ge_p
* )

2163 
°‹e_›î©i⁄_∑øm
& 
∑øm
 = *(°‹e_›î©i⁄_∑øm*)
_d©a
;

2164 
	`DBG
–<< "°‹e_›î©i⁄_log::undo’age=" << 
	`shpid
(Ë<< ",Ö¨am=" << 
∑øm
 << ")" );

2166 
∑øm
.
	`›
()) {

2167 
smÀvñ_0
::
t_dñëe_°‹e
:

2170 
smÀvñ_0
::
t_¸óã_°‹e
:

2172 
°id_t
 
	`°id
(
	`vid
(), 
∑øm
.
	`¢um
());

2173 
hi°oid_t
::
	`de°royed_°‹e
(
°id
, 0);

2174 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`de°roy_°‹e
(
°id
) );

2177 
smÀvñ_0
::
t_£t_dñëög
:

2178 
∑øm
.
	`√w_dñëög_vÆue
()) {

2179 
smÀvñ_0
::
t_nŸ_dñëög_°‹e
:

2180 
smÀvñ_0
::
t_dñëög_°‹e
:

2182 
°‹e_›î©i⁄_∑øm
 
	`√w_∑øm
(
∑øm
.
	`¢um
(),

2183 
smÀvñ_0
::
t_£t_dñëög
,

2184 
∑øm
.
	`ﬁd_dñëög_vÆue
(),

2185 
∑øm
.
	`√w_dñëög_vÆue
());

2186 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`°‹e_›î©i⁄
(
	`vid
(),

2187 
√w_∑øm
) );

2190 
smÀvñ_0
::
t_°‹e_‰ìög_exts
:

2193 
smÀvñ_0
::
t_unknown_dñëög
:

2194 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

2198 
smÀvñ_0
::
t_£t_°‹e_Êags
:

2200 
°‹e_›î©i⁄_∑øm
 
	`√w_∑øm
(
∑øm
.
	`¢um
(),

2201 
smÀvñ_0
::
t_£t_°‹e_Êags
,

2202 
∑øm
.
	`ﬁd_°‹e_Êags
(),Ö¨am.
	`√w_°‹e_Êags
());

2203 
	`W_COERCE
–
smÀvñ_0
::
io
->
	`°‹e_›î©i⁄
(
	`vid
(),

2204 
√w_∑øm
) );

2207 
smÀvñ_0
::
t_£t_fú°_ext
:

2211 
	}
}

2223 
	~"logty≥_gí.h
"

2224 
	go°ªam
&

2225 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	glogªc_t
& 
	gl
)

2227 
ios_fmtÊags
 
	gf
 = 
o
.
Êags
();

2228 
	go
.
£tf
(
ios
::
À·
, ios::left);

2230 c⁄° *
	grb
 = 
l
.
is_rﬁlback
()? "U" : "F";

2232 
	go
 << 
	gl
.
	g_tid
 << ' ';

2233 
W_FORM
(
o
)("%19s%5s:%1s", 
	gl
.
ty≥_°r
(),Ü.
ˇt_°r
(), 
	grb
 );

2234 
	go
 << " " << 
	gl
.
pid
();

2236 
	gl
.
ty≥
()) {

2237 
	gt_commít
 :

2239 
o
 << (c⁄° *)
l
.
_d©a
;

2242 
	gt_∑ge_f‹m©
:

2244 
∑ge_öô_t
* 
öfo
 = (∑ge_öô_t*)
l
.
_d©a
;

2245 
	go
 << "Åag=" << 
	göfo
->
∑ge_èg
()

2246 << "ÖagêÊags=" << 
	göfo
->
∑ge_Êag
()

2247 << " st‹êÊags=" << 
	göfo
->
°‹e_Êag
();

2250 
	gt_∑ge_ª˛aim
 :

2251 
t_∑ge_m¨k
 :

2253 
∑ge_m¨k_t
 *
t
 = (∑ge_m¨k_à*)
l
.
_d©a
;

2254 
	go
 << 
	gt
->
	gidx
 ;

2258 
	gt_‰ì_ext_li°
:

2260 
‰ì_ext_li°_t
* 
öfo
 = (‰ì_ext_li°_t*)
l
.
_d©a
;

2261 
	go
 << " stid=" << 
	göfo
->
	g°id


2262 << " hód=" << 
	göfo
->
	ghód


2263 << " cou¡=" << 
	göfo
->
	gcou¡
;

2267 
	gt_£t_ext_√xt
:

2269 
£t_ext_√xt_t
* 
öfo
 = (£t_ext_√xt_t*)
l
.
_d©a
;

2270 
	go
 << "Éxt=" << 
	göfo
->
	gext


2271 << "Çew_√xt=" << 
	göfo
->
	g√w_√xt
;

2275 
	gt_¸óã_ext_li°
:

2277 
¸óã_ext_li°_t
* 
öfo
 = (¸óã_ext_li°_t*)
l
.
_d©a
;

2278 
	go
 << " stid=" << 
	göfo
->
	g°id


2279 << "Öªv=" << 
	göfo
->
	g¥ev


2280 << "Çext=" << 
	göfo
->
	g√xt


2281 << " cou¡=" << 
	göfo
->
	gcou¡


2283 
	gi
 = 0; i < 
	göfo
->
	gcou¡
; i++)

2284 
	go
 << ' ' << 
	göfo
->
	gli°
[
i
];

2285 
	go
 << " ]";

2289 
	gt_°‹e_›î©i⁄
:

2291 
°‹e_›î©i⁄_∑øm
& 
∑øm
 = *(°‹e_›î©i⁄_∑øm*)
l
.
_d©a
;

2292 
	go
 << ' ' << 
	g∑øm
;

2296 
	gt_Æloc_∑ges_ö_ext
:

2297 
t_‰ì_∑ges_ö_ext
:

2299 
∑ges_ö_ext_t
* 
öfo
 = (∑ges_ö_ext_t*)
l
.
_d©a
;

2300 
	go
 << "Éxt=" << 
	göfo
->
	gext
;

2301 
	go
 << "Öm≠=" << 
	göfo
->
	gpm≠
;

2304 
	gnum
 = 
öfo
->
pm≠
.
num_£t
();

2305 
	gbô
 = 0;

2306 
	gsz
 = 
öfo
->
pm≠
.
_cou¡
;

2307 
	gi
=0; i< 
	gnum
; i++) {

2308 
	gbô
 = 
öfo
->
pm≠
.
fú°_£t
(
bô
);

2309 
shpid_t
 
	gp
 = 
öfo
->
ext
 * 
sz
;

2310 
	gp
 +
bô
;

2311 
	go
 << "Ög# " << 
	gp
 ;

2318 
	gt_Æloc_fûe_∑ge
:

2323 i‡(
	gl
.
is_˝¢
()Ë
	go
 << " (" <<Ü.
undo_nxt
() << ')';

2324 
	go
 << " [" << 
	gl
.
¥ev
() << "]";

2326 
	go
.
Êags
(
f
);

2327  
	go
;

2337 ˛as†
	c∑ge_f‹m©_t
 {

2338 
	mpublic
:

2339 
∑ge_öô_t
 
_öô
;

2340 
∑ge_öô_t
* 
	$öô
(Ë{  &
_öô
; }

2342 íum { 
max
 = (
logªc_t
::
d©a_sz
 - (
∑ge_öô_t
)Ë
	}
};

2344 
	gd©a
[
max
];

2346 
∑ge_ö£π_t
* 
	$ö£π
(Ë{  (
∑ge_ö£π_t
 *)
d©a
; 
	}
}

2347 
∑ge_ª˛aim_t
* 
	$ª˛aim
(Ë{  (
∑ge_ª˛aim_t
 *)&
d©a
; 
	}
}

2352 
	$∑ge_f‹m©_t
–
uöt2_t
 
èg
, 
uöt4_t
 
∑ge_Êag
, uöt4_à
°‹e_Êag
,

2353 
idx
,

2354 
˙t
,

2355 c⁄° 
cvec_t
* 
vec
) :

2356 
	$_öô
(
èg
, 
∑ge_Êag
, 
°‹e_Êag
)

2358 
	`w_as£π3
(
èg
 !
∑ge_p
::
t_fûe_p
 &&Åag !∑ge_p::
t_fûe_mrbt_p
);

2359 
	`w_as£π2
(
˙t
 == 1);

2360 
	`√w
 (
d©a
Ë
	`∑ge_ö£π_t
(
idx
, 
˙t
, 
vec
);

2361 
	}
}

2366 
	$∑ge_f‹m©_t
–
uöt2_t
 
èg
, 
uöt4_t
 
∑ge_Êag
, uöt4_à
°‹e_Êag
,

2367 
idx
,

2368 c⁄° 
cvec_t
* 
vec
) :

2369 
	$_öô
(
èg
, 
∑ge_Êag
, 
°‹e_Êag
)

2371 
	`w_as£π3
(
èg
 =
∑ge_p
::
t_fûe_p
 ||Åag =∑ge_p::
t_fûe_mrbt_p
);

2372 
zvec_t
 
zv
;

2373 if(
vec
==0Ëve¯&
zv
;

2374 
	`√w
 (
d©a
Ë
	`∑ge_ª˛aim_t
(
idx
, *
vec
);

2375 
	}
}

2377 
	$size
(Ë{  
_öô
.
	`size
() +

2378 ((
_öô
.
	`∑ge_èg
(Ë=
∑ge_p
::
t_fûe_p
 ||

2379 
_öô
.
	`∑ge_èg
(Ë=
∑ge_p
::
t_fûe_mrbt_p
Ë? 
	`ª˛aim
()->
	`size
(Ë: 
	`ö£π
()->size());

2380 
	}
}

2387 
	g∑ge_f‹m©_log
::
	$∑ge_f‹m©_log
(c⁄° 
∑ge_p
& 
p
,

2388 
idx
,

2389 
˙t
,

2390 c⁄° 
cvec_t
* 
vec
)

2392 
	`w_as£π3
(
p
.
	`pid
(Ë!
Õid_t
::
nuŒ
);

2394 #i‡
W_DEBUG_LEVEL
 > 1

2395 i‡–(
p
.
	`gë_°‹e_Êags
(Ë&Ö.
°_tmp
) != 0 )

2401 
	`w_as£π2
(
p
.
	`èg
(Ë=
∑ge_p
::
t_lgd©a_p


2403 
p
.
	`èg
(Ë=
∑ge_p
::
t_lgödex_p


2405 
p
.
	`èg
(Ë=
∑ge_p
::
t_πªe_p


2407 
p
.
	`èg
(Ë=
∑ge_p
::
t_båì_p


2409 
p
.
	`èg
(Ë=
∑ge_p
::
t_fûe_p


2411 
p
.
	`èg
(Ë=
∑ge_p
::
t_fûe_mrbt_p


2416 i‡(
p
.
	`èg
(Ë=
∑ge_p
::
t_fûe_p
 ||Ö.èg(Ë=∑ge_p::
t_fûe_mrbt_p
) {

2419 
	`w_as£π2
(
˙t
==0);

2421 
	`fûl
(&
p
.
	`pid
(),Ö.
	`èg
(),

2422 (
	`√w
 (
_d©a
)

2423 
	`∑ge_f‹m©_t
–
p
.
	`èg
(),Ö.
	`∑ge_Êags
(),

2424 
p
.
	`gë_°‹e_Êags
(), 
idx
, 
vec
)

2425 Ë->
	`size
());

2430 
	`w_as£π2
(
˙t
==1);

2431 
	`w_as£π3
(

2432 
p
.
	`èg
(Ë=
∑ge_p
::
t_exéök_p


2434 
p
.
	`èg
(Ë=
∑ge_p
::
t_°node_p


2436 
p
.
	`èg
(Ë=
∑ge_p
::
t_lgd©a_p


2438 
p
.
	`èg
(Ë=
∑ge_p
::
t_lgödex_p


2440 
p
.
	`èg
(Ë=
∑ge_p
::
t_πªe_p


2442 
p
.
	`èg
(Ë=
∑ge_p
::
t_båì_p


2445 
	`fûl
(&
p
.
	`pid
(),Ö.
	`èg
(),

2446 (
	`√w
 (
_d©a
)

2447 
	`∑ge_f‹m©_t
–
p
.
	`èg
(),Ö.
	`∑ge_Êags
(),

2448 
p
.
	`gë_°‹e_Êags
(), 
idx
, 
˙t
, 
vec
)

2449 Ë->
	`size
());

2451 
	}
}

2455 
	g∑ge_f‹m©_log
::
	$ªdo
(
∑ge_p
* 
∑ge
)

2457 
∑ge_f‹m©_t
* 
df
 = (∑ge_f‹m©_t*Ë
_d©a
;

2458 
df
->
	`öô
()->
	`ªdo_öô
(
∑ge
, 
	`pid
());

2459 if(
∑ge
->
	`èg
(Ë=
∑ge_p
::
t_fûe_p
 ||Öage->èg(Ë=∑ge_p::
t_fûe_mrbt_p
) {

2462 
df
->
	`ª˛aim
()->
	`undo
(
∑ge
);

2464 
df
->
	`ö£π
()->
	`ªdo
(
∑ge
);

2466 
	}
}

2469 
	g∑ge_f‹m©_log
::
	$undo
(
∑ge_p
* 
∑ge
)

2471 
∑ge_f‹m©_t
* 
df
 = (∑ge_f‹m©_t*Ë
_d©a
;

2474 if(
∑ge
->
	`èg
(Ë=
∑ge_p
::
t_fûe_p
 ||Öage->èg(Ë=∑ge_p::
t_fûe_mrbt_p
) {

2477 
df
->
	`ª˛aim
()->
	`ªdo
(
∑ge
);

2479 
df
->
	`ö£π
()->
	`undo
(
∑ge
);

2481 
	}
}

2483 
	gÆloc_fûe_∑ge_log
::
	$Æloc_fûe_∑ge_log
(c⁄° 
Õid_t
& 
p
)

2486 
	`fûl
(&
p
, 0, 0);

2487 
	}
}

2490 
	gÆloc_fûe_∑ge_log
::
undo
(
∑ge_p
* 
	$W_IFDEBUG1
(
Æªady_fixed
))

2492 
	`w_as£π1
(
Æªady_fixed
==
NULL
);

2504 
∑ge_p
 
∑ge
;

2506 
smÀvñ_0
::
°‹e_Êag_t
 
°‹e_Êags
 = smÀvñ_0::
°_bad
;

2507 
w_rc_t
 
rc
 = 
∑ge
.
	`fix
(
this
->
	`pid
(), 
∑ge_p
::
t_™y_p
, 
LATCH_EX
,

2508 0 , 
°‹e_Êags
, 
åue
 );

2510 if(
rc
.
	`is_îr‹
()) {

2511 
	`W_FATAL_MSG
(
eINTERNAL
,<< "C™nŸ fixÖagê" << 
this
->
	`pid
()

2512 << " beˇu£ " << 
rc
);

2515 if(
∑ge
.
	`l¢
(Ë> 
	`l¢_ck
()) {

2518 
	`w_as£π3
(
∑ge
.
	`pid
(Ë=
this
->pid());

2519 
	`w_as£π3
(
∑ge
.
	`pid
().
_°id
.
°‹e
 =
this
->pid()._stid.store);

2526 
fûe_p
 *
Â
 = (fûe_∞*)&
∑ge
;

2527 
rc
 = 
fûe_m
::
	`_undo_Æloc_fûe_∑ge
(*
Â
);

2528 if(
rc
.
	`is_îr‹
()) {

2529 
	`W_FATAL_MSG
(
eINTERNAL
,<< "undÿÆlo¯o‡∑gê" << 
this
->
	`pid
()

2530 << " beˇu£ " << 
rc
);

2547 
	}
}

	@src/sm/logrec.h

53 #i‚de‡
LOGREC_H


54 
	#LOGREC_H


	)

56 
	~"w_deföes.h
"

60 
˛ass
 
	gnbox_t
;

61 
˛ass
 
	gønge£t_t
;

63 
	gsmÀvñ_0
::
	tlock_mode_t
Üock_mode_t;

65 
	~"logfunc_gí.h
"

66 
	~"x˘.h
"

68 #ifde‡
__GNUG__


69 #¥agm®
öãrÁ˚


72 ˛as†
	clogªc_t
 {

73 
	mpublic
:

74 
‰õnd
 
rc_t
 
x˘_t
::
give_logbuf
(
logªc_t
*, c⁄° 
∑ge_p
 *);

76 
	~"logty≥_gí.h
"

77 
fûl
(

78 c⁄° 
Õid_t
* 
pid
,

79 
uöt2_t
 
èg
,

80 
smsize_t
 
Àngth
);

81 
fûl_x˘_©å
(

82 c⁄° 
tid_t
& 
tid
,

83 c⁄° 
l¢_t
& 
œ°_l¢
);

84 
boﬁ
 
	$is_∑ge_upd©e
() const;

85 
boﬁ
 
	$is_ªdo
() const;

86 
boﬁ
 
	$is_skù
() const;

87 
boﬁ
 
	$is_undo
() const;

88 
boﬁ
 
	$is_˝¢
() const;

89 
boﬁ
 
	$is_rﬁlback
() const;

90 
boﬁ
 
	$is_undﬂbÀ_˛r
() const;

91 
boﬁ
 
	$is_logiˇl
() const;

92 
boﬁ
 
	$vÆid_hódî
(c⁄° 
l¢_t
 & 
l¢_ck
) const;

94 
	`ªdo
(
∑ge_p
*);

95 
	`undo
(
∑ge_p
*);

98 
max_sz
 = 3 * (
∑ge_s
),

99 
hdr_sz
 = (

100 (
uöt2_t
) +

101 (
u_ch¨
) +

102 (
u_ch¨
) +

103 (
tid_t
) +

105 (
shpid_t
) +

106 (
vid_t
) +

107 (
uöt2_t
) +

108 (
¢um_t
) +

109 (
l¢_t
) +

116 
d©a_sz
 = 
max_sz
 - (
hdr_sz
 + (
l¢_t
))

117 
	}
};

118 c⁄° 
	gtid_t
& 
	$tid
() const;

119 c⁄° 
vid_t
& 
	$vid
() const;

120 c⁄° 
shpid_t
& 
	$shpid
() const;

123 
Õid_t
 
	$c⁄°ru˘_pid
() const;

124 
¥Ÿe˘ed
:

125 
Õid_t
 
	$pid
() const;

126 
¥iv©e
:

127 
	`£t_pid
(c⁄° 
Õid_t
& 
p
);

128 
public
:

129 
boﬁ
 
	$nuŒ_pid
() const;

130 
uöt2_t
 
	$èg
() const;

131 
smsize_t
 
	$Àngth
() const;

132 c⁄° 
l¢_t
& 
	$undo_nxt
() const;

133 c⁄° 
l¢_t
& 
	$¥ev
() const;

134 
	`£t_˛r
(c⁄° 
l¢_t
& 
c
);

135 
köd_t
 
	$ty≥
() const;

136 c⁄° * 
	$ty≥_°r
() const;

137 c⁄° * 
	$ˇt_°r
() const;

138 c⁄° * 
	$d©a
() const;

139 c⁄° 
l¢_t
& 
	$l¢_ck
(Ëc⁄° {  *
	`_l¢_ck
(); 
	}
}

140 c⁄° 
l¢_t
 
	$gë_l¢_ck
() const {

141 
l¢_t
 
tmp
 = *
	`_l¢_ck
();

142  
tmp
;

143 
	}
}

144 
	$£t_l¢_ck
(c⁄° 
l¢_t
 &
l¢_ck
) {

146 
l¢_t
& 
whîe
 = *
	`_l¢_ck
();

147 
whîe
 = 
l¢_ck
;

148 
	}
}

149 
c‹ru±
();

151 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam&, c⁄° 
	glogªc_t
&);

153 
	g¥Ÿe˘ed
:

154 
	eˇãg‹y_t
 {

155 
t_bad_ˇt
 = 0,

156 
	gt_°©us
 = 01,

157 
	gt_undo
 = 02,

158 
	gt_ªdo
 = 04,

159 
	gt_logiˇl
 = 010,

164 
	gt_˝¢
 = 020,

165 
	gt_rﬁlback
 = 040

168 
u_ch¨
 
	$ˇt
() const;

170 
uöt2_t
 
_Àn
;

171 
u_ch¨
 
_ty≥
;

172 
u_ch¨
 
_ˇt
;

178 
shpid_t
 
_shpid
;

180 
tid_t
 
_tid
;

184 
vid_t
 
_vid
;

185 
uöt2_t
 
_∑ge_èg
;

187 
¢um_t
 
_¢um
;

189 
l¢_t
 
_¥ev
;

208 
_d©a
[
d©a_sz
 + (
l¢_t
)];

213 
l¢_t
* 
	$_l¢_ck
() const {

214 
size_t
 
lo_off£t
 = 
_Àn
 - (
hdr_sz
 + (
l¢_t
));

215 
	`w_as£π3
(
	`Æign⁄
(
_d©a
+
lo_off£t
, 8));

216 
l¢_t
 *
whîe
 = (l¢_t*)(
_d©a
+
lo_off£t
);

217  
whîe
;

218 
	}
}

222 ˛as†
	cext_log_öfo_t
 {

223 
	mpublic
:

224 
exäum_t
 
¥ev
;

225 
exäum_t
 
	m√xt
;

227 
exäum_t
 
	mext
;

228 
Pm≠_Align4
 
	mpm≠
;

229 
NORET
 
	$ext_log_öfo_t
() :

230 
	`¥ev
(0),

231 
	`√xt
(0),

232 
	$ext
(0) {

234 
	}
};

237 
	schk±_bf_èb_t
 {

238 
	sbªc_t
 {

239 
Õid_t
 
	mpid
;

240 
fûl4
 
	mfûl
;

241 
l¢_t
 
	mªc_l¢
;

245 íum { 
	mmax
 = (
logªc_t
::
d©a_sz
 - 2 * (
uöt4_t
)Ë/ (
bªc_t
) };

246 
uöt4_t
 
	mcou¡
;

247 
fûl4
 
	mfûÀr
;

248 
bªc_t
 
	mbªc
[
max
];

250 
NORET
 
chk±_bf_èb_t
(

251 
˙t
,

252 c⁄° 
Õid_t
* 
p
,

253 c⁄° 
l¢_t
* 
l
);

255 
size
();

258 
	s¥ï¨e_°‹es_to_‰ì_t


260 íum { 
	mmax
 = (
logªc_t
::
d©a_sz
 - (
uöt4_t
)Ë/ (
°id_t
) };

261 
uöt4_t
 
	mnum
;

262 
°id_t
 
	m°ids
[
max
];

264 
¥ï¨e_°‹es_to_‰ì_t
(
uöt4_t
 
theNum
, c⁄° 
°id_t
* 
theStids
)

265 : 
num
(
theNum
)

267 
w_as£π3
(
theNum
 <
max
);

268 
uöt4_t
 
	mi
 = 0; i < 
	mnum
; i++)

269 
	m°ids
[
i
] = 
theStids
[i];

272 
size
(Ë{  (
	muöt4_t
Ë+ 
num
 * (
	m°id_t
); };

275 
	schk±_x˘_èb_t
 {

276 
	sxªc_t
 {

277 
tid_t
 
	mtid
;

278 
l¢_t
 
	mœ°_l¢
;

279 
l¢_t
 
	mundo_nxt
;

280 
	msmÀvñ_1
::
x˘_°©e_t
 
°©e
;

284 íum { 
	mmax
 = ((
logªc_t
::
d©a_sz
 - (
tid_t
) -

285 2 * (
uöt4_t
)Ë/ (
xªc_t
))

287 
tid_t
 
	myounge°
;

288 
uöt4_t
 
	mcou¡
;

289 
fûl4
 
	mfûÀr
;

290 
xªc_t
 
	mxªc
[
max
];

292 
NORET
 
chk±_x˘_èb_t
(

293 c⁄° 
tid_t
& 
younge°
,

294 
cou¡
,

295 c⁄° 
tid_t
* 
tid
,

296 c⁄° 
smÀvñ_1
::
x˘_°©e_t
* 
°©e
,

297 c⁄° 
l¢_t
* 
œ°_l¢
,

298 c⁄° 
l¢_t
* 
undo_nxt
);

299 
size
();

302 
	schk±_dev_èb_t


304 
	sdevªc_t
 {

306 
	mdev_«me
[
smÀvñ_0
::
max_dev«me
+1];

307 
fûl1
 
	mbyã
;

308 
vid_t
 
	mvid
;

309 
fûl2
 
	mhÆfw‹d
;

313 íum { 
	mmax
 = ((
logªc_t
::
d©a_sz
 - 2*(
uöt4_t
)Ë/ (
devªc_t
))

315 
uöt4_t
 
	mcou¡
;

316 
fûl4
 
	mfûÀr
;

317 
devªc_t
 
	mdevªc
[
max
];

319 
NORET
 
chk±_dev_èb_t
(

320 
cou¡
,

321 c⁄° **
dev_«me
,

322 c⁄° 
vid_t
* 
vid
);

323 
size
();

331 
	s¥ï¨e_lock_tŸÆs_t
 {

332 
	mnum_EX
;

333 
	mnum_IX
;

334 
	mnum_SIX
;

335 
	mnum_exã¡s
;

336 
fûl4
 
	mfûÀr
;

337 
l¢_t
 
	mfú°_l¢
;

338 
¥ï¨e_lock_tŸÆs_t
(
a
, 
b
, 
c
, 
d
, c⁄° 
l¢_t
 &
l
) :

339 
num_EX
(
a
), 
num_IX
(
b
), 
num_SIX
(
c
), 
num_exã¡s
(
d
),

340 
fú°_l¢
(
l
){ }

341 
size
() const

342 {  4 * (Ë+ (
	ml¢_t
Ë+ (
	mfûl4
); }

344 
	s¥ï¨e_öfo_t
 {

346 
	mis_exã∫Æ
;

347 
fûl1
 
	mdummy1
;

348 
fûl2
 
	mdummy2
;

349 
£rvî_h™dÀ_t
 
	mh
;

350 
gtid_t
 
	mg
;

351 
¥ï¨e_öfo_t
(c⁄° 
gtid_t
 *
_g
,

352 c⁄° 
£rvî_h™dÀ_t
 &
_h
)

354 #ifde‡
ZERO_INIT


355 
mem£t
(&
g
, '\0', (g));

356 
mem£t
(&
h
, '\0', (h));

358 if(
	m_g
) {

359 
	mis_exã∫Æ
 = 1; 
	mg
 = *
_g
;

360 } 
	mis_exã∫Æ
 = 0;

361 
	mh
 = 
_h
;

363 
size
() const {

364  (
	mis_exã∫Æ
) +

365 (
	mdummy1
Ë+ (
	mdummy2
) +

366 (
	m£rvî_h™dÀ_t
) +

367 (
	mis_exã∫Æ
? (
	mgtid_t
) :0);

371 
	s¥ï¨e_lock_t


376 
lock_mode_t
 
	mmode
;

377 
uöt4_t
 
	mnum_locks
;

378 íum { 
	mmax_locks_logged
 = (
logªc_t
::
d©a_sz
 - (
lock_mode_t
Ë- (
uöt4_t
)Ë/ (
lockid_t
) };

380 
lockid_t
 
	m«me
[
max_locks_logged
];

382 
¥ï¨e_lock_t
(
uöt4_t
 
num
, 
lock_ba£_t
::
lmode_t
 
_mode
,

383 
lockid_t
 *
locks
){

384 
	mnum_locks
 = 
num
;

385 
	mmode
 = 
_mode
;

386 
uöt4_t
 
	mi
;

387 
	mi
=0; i<
	mnum
; i++Ë{ 
	m«me
[
i
]=
locks
[i]; }

389 
size
() const

391 
w_as£π3
(((
num_locks
 * (
lockid_t
))

392 + (
mode
Ë+ (
num_locks
)) <=

393 
logªc_t
::
d©a_sz
);

394  (
num_locks
 * (
	mlockid_t
))

395 + (
	mmode
Ë+ (
	mnum_locks
);

399 
	s¥ï¨e_Æl_lock_t


404 
	sLockAndModePaú
 {

405 
lockid_t
 
	m«me
;

406 
lock_mode_t
 
	mmode
;

409 
uöt4_t
 
	mnum_locks
;

410 íum { 
	mmax_locks_logged
 = (
logªc_t
::
d©a_sz
 - (
uöt4_t
)Ë/ (
LockAndModePaú
) };

412 
LockAndModePaú
 
	m∑ú
[
max_locks_logged
];

415 
¥ï¨e_Æl_lock_t
(
uöt4_t
 
num
,

416 
lockid_t
 *
locks
,

417 
lock_mode_t
 *
modes


419 
	mnum_locks
 = 
num
;

420 
uöt4_t
 
	mi
;

421 
	mi
=0; i<
	mnum
; i++Ë{ 
	m∑ú
[
i
].
	m«me
=
locks
[i];Öaú[i].
	mmode
 = 
modes
[i]; }

423 
size
() const

424 {  
num_locks
 * (
	m∑ú
[0]Ë+ (
	mnum_locks
); }

427 
ölöe
 c⁄° 
	gtid_t
&

428 
	glogªc_t
::
	$tid
() const

430  
_tid
;

431 
	}
}

433 
ölöe
 c⁄° 
	gshpid_t
&

434 
	glogªc_t
::
	$shpid
() const

436  
_shpid
;

437 
	}
}

439 
ölöe
 c⁄° 
	gvid_t
&

440 
	glogªc_t
::
	$vid
() const

442  
_vid
;

443 
	}
}

445 
ölöe
 
Õid_t


446 
	glogªc_t
::
	$pid
() const

448  
	`Õid_t
(
_vid
, 
_¢um
, 
_shpid
);

449 
	}
}

451 
ölöe
 
Õid_t


452 
	glogªc_t
::
	$c⁄°ru˘_pid
() const

455  
	`Õid_t
(
_vid
, 
_¢um
, 
_shpid
);

456 
	}
}

458 
ölöe
 

459 
	glogªc_t
::
	$£t_pid
(c⁄° 
Õid_t
& 
p
)

461 
_shpid
 = 
p
.
∑ge
;

462 
_vid
 = 
p
.
	`vﬁ
();

463 
_¢um
 = 
p
.
	`°‹e
();

464 
	}
}

466 
ölöe
 
boﬁ


467 
	glogªc_t
::
	$nuŒ_pid
() const

471 
boﬁ
 
ªsu…
 = (
_shpid
 == 0);

472 
	`w_as£π3
(
ªsu…
 =(
	`pid
().
	`is_nuŒ
()));

473  
ªsu…
;

474 
	}
}

476 
ölöe
 
uöt2_t


477 
	glogªc_t
::
	$èg
() const

479  
_∑ge_èg
;

480 
	}
}

482 
ölöe
 
smsize_t


483 
	glogªc_t
::
	$Àngth
() const

485  
_Àn
;

486 
	}
}

488 
ölöe
 c⁄° 
	gl¢_t
&

489 
	glogªc_t
::
	$undo_nxt
() const

495  
_¥ev
;

496 
	}
}

498 
ölöe
 c⁄° 
	gl¢_t
&

499 
	glogªc_t
::
	$¥ev
() const

501  
_¥ev
;

502 
	}
}

504 
ölöe
 
	glogªc_t
::
köd_t


505 
logªc_t
::
	$ty≥
() const

507  (
köd_t
Ë
_ty≥
;

508 
	}
}

510 
ölöe
 const *

511 
	glogªc_t
::
	$d©a
() const

513  
_d©a
;

514 
	}
}

516 
ölöe
 
u_ch¨


517 
	glogªc_t
::
	$ˇt
() const

519  
_ˇt
 & ~
t_rﬁlback
;

520 
	}
}

522 
ölöe
 
boﬁ


523 
	glogªc_t
::
	$is_rﬁlback
() const

525  (
_ˇt
 & 
t_rﬁlback
) != 0;

526 
	}
}

528 
ölöe
 

529 
	glogªc_t
::
	$£t_˛r
(c⁄° 
l¢_t
& 
c
)

531 
_ˇt
 &~
t_undo
;

534 
_ˇt
 |
t_˝¢
;

540 
_¥ev
 = 
c
;

541 
	}
}

543 
ölöe
 
boﬁ


544 
	glogªc_t
::
	$is_undﬂbÀ_˛r
() const

546  
Ál£
;

549 
	}
}

552 
ölöe
 
boﬁ


553 
	glogªc_t
::
	$is_ªdo
() const

555  (
_ˇt
 & 
t_ªdo
) != 0;

556 
	}
}

558 
ölöe
 
boﬁ


559 
	glogªc_t
::
	$is_skù
() const

561  
	`ty≥
(Ë=
t_skù
;

562 
	}
}

565 
ölöe
 
boﬁ


566 
	glogªc_t
::
	$is_undo
() const

568  (
_ˇt
 & 
t_undo
) != 0;

569 
	}
}

572 
ölöe
 
boﬁ


573 
	glogªc_t
::
	$is_˝¢
() const

575  (
_ˇt
 & 
t_˝¢
) != 0;

576 
	}
}

578 
ölöe
 
boﬁ


579 
	glogªc_t
::
	$is_∑ge_upd©e
() const

582  
	`is_ªdo
(Ë&& !
	`is_˝¢
(Ë&& (!
	`nuŒ_pid
());

583 
	}
}

585 
ölöe
 
boﬁ


586 
	glogªc_t
::
	$is_logiˇl
() const

588  (
_ˇt
 & 
t_logiˇl
) != 0;

589 
	}
}

591 
ölöe
 

592 
	gchk±_bf_èb_t
::
	$size
()

594  (*Ë&
bªc
[
cou¡
] - (*Ë
this
;

595 
	}
}

597 
ölöe
 

598 
	gchk±_x˘_èb_t
::
	$size
()

600  (*Ë&
xªc
[
cou¡
] - (*Ë
this
;

601 
	}
}

603 
ölöe
 

604 
	gchk±_dev_èb_t
::
	$size
()

606  (*Ë&
devªc
[
cou¡
] - (*Ë
this
;

607 
	}
}

	@src/sm/logstr_gen.cpp

31 
	~"w_deföes.h
"

36 
	gt_commít
 :

38 
	gt_com≥nßã
 :

40 
	gt_skù
 :

42 
	gt_chk±_begö
 :

44 
	gt_chk±_bf_èb
 :

46 
	gt_chk±_x˘_èb
 :

48 
	gt_chk±_dev_èb
 :

50 
	gt_chk±_íd
 :

52 
	gt_mou¡_vﬁ
 :

54 
	gt_dismou¡_vﬁ
 :

56 
	gt_x˘_ab‹t
 :

58 
	gt_x˘_‰ìög_•a˚
 :

60 
	gt_x˘_íd
 :

62 
	gt_x˘_¥ï¨e_°
 :

64 
	gt_x˘_¥ï¨e_lk
 :

66 
	gt_x˘_¥ï¨e_Æk
 :

68 
	gt_x˘_¥ï¨e_°‹es
 :

70 
	gt_x˘_¥ï¨e_fi
 :

72 
	gt_Æloc_fûe_∑ge
 :

74 
	gt_Æloc_∑ges_ö_ext
 :

76 
	gt_‰ì_∑ges_ö_ext
 :

78 
	gt_¸óã_ext_li°
 :

80 
	gt_‰ì_ext_li°
 :

82 
	gt_£t_ext_√xt
 :

84 
	gt_°‹e_›î©i⁄
 :

86 
	gt_∑ge_lök
 :

88 
	gt_∑ge_ö£π
 :

90 
	gt_∑ge_ªmove
 :

92 
	gt_∑ge_f‹m©
 :

94 
	gt_∑ge_m¨k
 :

96 
	gt_∑ge_ª˛aim
 :

98 
	gt_∑ge_shi·
 :

100 
	gt_∑ge_•li˚
 :

102 
	gt_∑ge_•li˚z
 :

104 
	gt_∑ge_£t_byã
 :

106 
	gt_∑ge_image
 :

108 
	gt_båì_purge
 :

110 
	gt_båì_ö£π
 :

112 
	gt_båì_ªmove
 :

114 
	gt_πªe_ö£π
 :

116 
	gt_πªe_ªmove
 :

	@src/sm/logstub.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#LOGSTUB_C


	)

36 
	~"sm_öt_1.h
"

37 
	~<√w
>

38 
	~"logdef_gí.˝p
"

39 
	~"log°ub_gí.˝p
"

	@src/sm/logstub_gen.cpp

31 
	~"w_deföes.h
"

36 
rc_t
 
	$log_commít
(c⁄° * 
msg
)

38 
x˘_t
* 
xd
 = 
	`x˘
();

39 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


40 && 
xd
 && xd->
	`is_log_⁄
();

41 i‡(
should_log
) {

42 
logªc_t
* 
logªc
;

43 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

44 
	`√w
 (
logªc
Ë
	`commít_log
(
msg
);

45 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

47  
RCOK
;

48 
	}
}

49 
rc_t
 
	$log_com≥nßã
(
l¢_t
 
ªc_l¢
)

51 
x˘_t
* 
xd
 = 
	`x˘
();

52 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


53 && 
xd
 && xd->
	`is_log_⁄
();

54 i‡(
should_log
) {

55 
logªc_t
* 
logªc
;

56 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

57 
	`√w
 (
logªc
Ë
	`com≥nßã_log
(
ªc_l¢
);

58 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

60  
RCOK
;

61 
	}
}

62 
rc_t
 
	$log_x˘_ab‹t
()

64 
x˘_t
* 
xd
 = 
	`x˘
();

65 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


66 && 
xd
 && xd->
	`is_log_⁄
();

67 i‡(
should_log
) {

68 
logªc_t
* 
logªc
;

69 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

70 
	`√w
 (
logªc
Ë
	`x˘_ab‹t_log
();

71 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

73  
RCOK
;

74 
	}
}

75 
rc_t
 
	$log_x˘_‰ìög_•a˚
()

77 
x˘_t
* 
xd
 = 
	`x˘
();

78 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


79 && 
xd
 && xd->
	`is_log_⁄
();

80 i‡(
should_log
) {

81 
logªc_t
* 
logªc
;

82 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

83 
	`√w
 (
logªc
Ë
	`x˘_‰ìög_•a˚_log
();

84 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

86  
RCOK
;

87 
	}
}

88 
rc_t
 
	$log_x˘_íd
()

90 
x˘_t
* 
xd
 = 
	`x˘
();

91 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


92 && 
xd
 && xd->
	`is_log_⁄
();

93 i‡(
should_log
) {

94 
logªc_t
* 
logªc
;

95 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

96 
	`√w
 (
logªc
Ë
	`x˘_íd_log
();

97 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

99  
RCOK
;

100 
	}
}

101 
rc_t
 
	$log_x˘_¥ï¨e_°
(c⁄° 
gtid_t
* 
g
, c⁄° 
£rvî_h™dÀ_t
& 
h
)

103 
x˘_t
* 
xd
 = 
	`x˘
();

104 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


105 && 
xd
 && xd->
	`is_log_⁄
();

106 i‡(
should_log
) {

107 
logªc_t
* 
logªc
;

108 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

109 
	`√w
 (
logªc
Ë
	`x˘_¥ï¨e_°_log
(
g
, 
h
);

110 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

112  
RCOK
;

113 
	}
}

114 
rc_t
 
	$log_x˘_¥ï¨e_lk
(
num
, 
lock_mode_t
 
mode
, 
lockid_t
* 
lks
)

116 
x˘_t
* 
xd
 = 
	`x˘
();

117 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


118 && 
xd
 && xd->
	`is_log_⁄
();

119 i‡(
should_log
) {

120 
logªc_t
* 
logªc
;

121 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

122 
	`√w
 (
logªc
Ë
	`x˘_¥ï¨e_lk_log
(
num
, 
mode
, 
lks
);

123 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

125  
RCOK
;

126 
	}
}

127 
rc_t
 
	$log_x˘_¥ï¨e_Æk
(
num
, 
lockid_t
* 
lks
, 
lock_mode_t
* 
modes
)

129 
x˘_t
* 
xd
 = 
	`x˘
();

130 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


131 && 
xd
 && xd->
	`is_log_⁄
();

132 i‡(
should_log
) {

133 
logªc_t
* 
logªc
;

134 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

135 
	`√w
 (
logªc
Ë
	`x˘_¥ï¨e_Æk_log
(
num
, 
lks
, 
modes
);

136 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

138  
RCOK
;

139 
	}
}

140 
rc_t
 
	$log_x˘_¥ï¨e_°‹es
(
num
, c⁄° 
°id_t
* 
°ids
)

142 
x˘_t
* 
xd
 = 
	`x˘
();

143 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


144 && 
xd
 && xd->
	`is_log_⁄
();

145 i‡(
should_log
) {

146 
logªc_t
* 
logªc
;

147 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

148 
	`√w
 (
logªc
Ë
	`x˘_¥ï¨e_°‹es_log
(
num
, 
°ids
);

149 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

151  
RCOK
;

152 
	}
}

153 
rc_t
 
	$log_x˘_¥ï¨e_fi
(
numex
, 
numix
, 
numsix
, 
numexã¡
, c⁄° 
l¢_t
& 
fú°
)

155 
x˘_t
* 
xd
 = 
	`x˘
();

156 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


157 && 
xd
 && xd->
	`is_log_⁄
();

158 i‡(
should_log
) {

159 
logªc_t
* 
logªc
;

160 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

161 
	`√w
 (
logªc
Ë
	`x˘_¥ï¨e_fi_log
(
numex
, 
numix
, 
numsix
, 
numexã¡
, 
fú°
);

162 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

164  
RCOK
;

165 
	}
}

166 
rc_t
 
	$log_Æloc_fûe_∑ge
(c⁄° 
Õid_t
& 
pid
)

168 
x˘_t
* 
xd
 = 
	`x˘
();

169 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

170 i‡(
should_log
) {

171 
logªc_t
* 
logªc
;

172 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
));

173 
	`√w
 (
logªc
Ë
	`Æloc_fûe_∑ge_log
(
pid
);

174 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
));

176  
RCOK
;

177 
	}
}

178 
rc_t
 
	$log_Æloc_∑ges_ö_ext
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
)

180 
x˘_t
* 
xd
 = 
	`x˘
();

181 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

182 i‡(
should_log
) {

183 
logªc_t
* 
logªc
;

184 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

185 
	`√w
 (
logªc
Ë
	`Æloc_∑ges_ö_ext_log
(
∑ge
, 
¢um
, 
idx
, 
pm≠
);

186 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

188 
∑ge
.
	`£t_dúty
();

189  
RCOK
;

190 
	}
}

191 
rc_t
 
	$log_‰ì_∑ges_ö_ext
(c⁄° 
∑ge_p
& 
∑ge
, 
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
)

193 
x˘_t
* 
xd
 = 
	`x˘
();

194 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

195 i‡(
should_log
) {

196 
logªc_t
* 
logªc
;

197 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

198 
	`√w
 (
logªc
Ë
	`‰ì_∑ges_ö_ext_log
(
∑ge
, 
¢um
, 
idx
, 
pm≠
);

199 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

201 
∑ge
.
	`£t_dúty
();

202  
RCOK
;

203 
	}
}

204 
rc_t
 
	$log_¸óã_ext_li°
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
¥ev
,Éxäum_à
√xt
,Éxäum_à
cou¡
, c⁄°Éxäum_t* 
li°
)

206 
x˘_t
* 
xd
 = 
	`x˘
();

207 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

208 i‡(
should_log
) {

209 
logªc_t
* 
logªc
;

210 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

211 
	`√w
 (
logªc
Ë
	`¸óã_ext_li°_log
(
∑ge
, 
°id
, 
¥ev
, 
√xt
, 
cou¡
, 
li°
);

212 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

214 
∑ge
.
	`£t_dúty
();

215  
RCOK
;

216 
	}
}

217 
rc_t
 
	$log_‰ì_ext_li°
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°id_t
& 
°id
, 
exäum_t
 
hód
,Éxäum_à
cou¡
)

219 
x˘_t
* 
xd
 = 
	`x˘
();

220 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

221 i‡(
should_log
) {

222 
logªc_t
* 
logªc
;

223 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

224 
	`√w
 (
logªc
Ë
	`‰ì_ext_li°_log
(
∑ge
, 
°id
, 
hód
, 
cou¡
);

225 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

227 
∑ge
.
	`£t_dúty
();

228  
RCOK
;

229 
	}
}

230 
rc_t
 
	$log_£t_ext_√xt
(c⁄° 
∑ge_p
& 
∑ge
, 
exäum_t
 
ext
,Éxäum_à
√w_√xt
)

232 
x˘_t
* 
xd
 = 
	`x˘
();

233 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

234 i‡(
should_log
) {

235 
logªc_t
* 
logªc
;

236 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

237 
	`√w
 (
logªc
Ë
	`£t_ext_√xt_log
(
∑ge
, 
ext
, 
√w_√xt
);

238 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

240 
∑ge
.
	`£t_dúty
();

241  
RCOK
;

242 
	}
}

243 
rc_t
 
	$log_°‹e_›î©i⁄
(c⁄° 
∑ge_p
& 
∑ge
, c⁄° 
°‹e_›î©i⁄_∑øm
& 
›
)

245 
x˘_t
* 
xd
 = 
	`x˘
();

246 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
;

247 i‡(
should_log
) {

248 
logªc_t
* 
logªc
;

249 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

250 
	`√w
 (
logªc
Ë
	`°‹e_›î©i⁄_log
(
∑ge
, 
›
);

251 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

253 
∑ge
.
	`£t_dúty
();

254  
RCOK
;

255 
	}
}

256 
rc_t
 
	$log_∑ge_lök
(c⁄° 
∑ge_p
& 
∑ge
, 
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
)

258 
x˘_t
* 
xd
 = 
	`x˘
();

259 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


260 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

261 && 
xd
 && xd->
	`is_log_⁄
();

262 i‡(
should_log
) {

263 
logªc_t
* 
logªc
;

264 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

265 
	`√w
 (
logªc
Ë
	`∑ge_lök_log
(
∑ge
, 
√w_¥ev
, 
√w_√xt
);

266 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

268 
∑ge
.
	`£t_dúty
();

269  
RCOK
;

270 
	}
}

271 
rc_t
 
	$log_∑ge_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
)

273 
x˘_t
* 
xd
 = 
	`x˘
();

274 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


275 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

276 && 
xd
 && xd->
	`is_log_⁄
();

277 i‡(
should_log
) {

278 
logªc_t
* 
logªc
;

279 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

280 
	`√w
 (
logªc
Ë
	`∑ge_ö£π_log
(
∑ge
, 
idx
, 
˙t
, 
vec
);

281 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

283 
∑ge
.
	`£t_dúty
();

284  
RCOK
;

285 
	}
}

286 
rc_t
 
	$log_∑ge_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
)

288 
x˘_t
* 
xd
 = 
	`x˘
();

289 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


290 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

291 && 
xd
 && xd->
	`is_log_⁄
();

292 i‡(
should_log
) {

293 
logªc_t
* 
logªc
;

294 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

295 
	`√w
 (
logªc
Ë
	`∑ge_ªmove_log
(
∑ge
, 
idx
, 
˙t
);

296 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

298 
∑ge
.
	`£t_dúty
();

299  
RCOK
;

300 
	}
}

301 
rc_t
 
	$log_∑ge_f‹m©
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
˙t
, c⁄° 
cvec_t
* 
vec
)

303 
x˘_t
* 
xd
 = 
	`x˘
();

304 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


305 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

306 && 
xd
 && xd->
	`is_log_⁄
();

307 i‡(
should_log
) {

308 
logªc_t
* 
logªc
;

309 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

310 
	`√w
 (
logªc
Ë
	`∑ge_f‹m©_log
(
∑ge
, 
idx
, 
˙t
, 
vec
);

311 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

313 
∑ge
.
	`£t_dúty
();

314  
RCOK
;

315 
	}
}

316 
rc_t
 
	$log_∑ge_m¨k
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
)

318 
x˘_t
* 
xd
 = 
	`x˘
();

319 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


320 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

321 && 
xd
 && xd->
	`is_log_⁄
();

322 i‡(
should_log
) {

323 
logªc_t
* 
logªc
;

324 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

325 
	`√w
 (
logªc
Ë
	`∑ge_m¨k_log
(
∑ge
, 
idx
);

326 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

328 
∑ge
.
	`£t_dúty
();

329  
RCOK
;

330 
	}
}

331 
rc_t
 
	$log_∑ge_ª˛aim
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
vec
)

333 
x˘_t
* 
xd
 = 
	`x˘
();

334 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


335 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

336 && 
xd
 && xd->
	`is_log_⁄
();

337 i‡(
should_log
) {

338 
logªc_t
* 
logªc
;

339 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

340 
	`√w
 (
logªc
Ë
	`∑ge_ª˛aim_log
(
∑ge
, 
idx
, 
vec
);

341 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

343 
∑ge
.
	`£t_dúty
();

344  
RCOK
;

345 
	}
}

346 
rc_t
 
	$log_∑ge_shi·
(c⁄° 
∑ge_p
& 
∑ge
, 
idx2
, 
∑ge_s
::
¶Ÿ_Àngth_t
 
off2
,Öage_s::¶Ÿ_Àngth_à
Àn2
, 
idx1
,Öage_s::¶Ÿ_Àngth_à
off1
)

348 
x˘_t
* 
xd
 = 
	`x˘
();

349 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


350 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

351 && 
xd
 && xd->
	`is_log_⁄
();

352 i‡(
should_log
) {

353 
logªc_t
* 
logªc
;

354 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

355 
	`√w
 (
logªc
Ë
	`∑ge_shi·_log
(
∑ge
, 
idx2
, 
off2
, 
Àn2
, 
idx1
, 
off1
);

356 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

358 
∑ge
.
	`£t_dúty
();

359  
RCOK
;

360 
	}
}

361 
rc_t
 
	$log_∑ge_•li˚
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, c⁄° 
cvec_t
& 
vec
)

363 
x˘_t
* 
xd
 = 
	`x˘
();

364 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


365 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

366 && 
xd
 && xd->
	`is_log_⁄
();

367 i‡(
should_log
) {

368 
logªc_t
* 
logªc
;

369 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

370 
	`√w
 (
logªc
Ë
	`∑ge_•li˚_log
(
∑ge
, 
idx
, 
°¨t
, 
Àn
, 
vec
);

371 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

373 
∑ge
.
	`£t_dúty
();

374  
RCOK
;

375 
	}
}

376 
rc_t
 
	$log_∑ge_•li˚z
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
°¨t
, 
Àn
, 
oßve
, 
nßve
, c⁄° 
cvec_t
& 
vec
)

378 
x˘_t
* 
xd
 = 
	`x˘
();

379 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


380 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

381 && 
xd
 && xd->
	`is_log_⁄
();

382 i‡(
should_log
) {

383 
logªc_t
* 
logªc
;

384 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

385 
	`√w
 (
logªc
Ë
	`∑ge_•li˚z_log
(
∑ge
, 
idx
, 
°¨t
, 
Àn
, 
oßve
, 
nßve
, 
vec
);

386 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

388 
∑ge
.
	`£t_dúty
();

389  
RCOK
;

390 
	}
}

391 
rc_t
 
	$log_∑ge_£t_byã
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, 
u_ch¨
 
ﬁd
, u_ch¨ 
bôs
, 
›
)

393 
x˘_t
* 
xd
 = 
	`x˘
();

394 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


395 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

396 && 
xd
 && xd->
	`is_log_⁄
();

397 i‡(
should_log
) {

398 
logªc_t
* 
logªc
;

399 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

400 
	`√w
 (
logªc
Ë
	`∑ge_£t_byã_log
(
∑ge
, 
idx
, 
ﬁd
, 
bôs
, 
›
);

401 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

403 
∑ge
.
	`£t_dúty
();

404  
RCOK
;

405 
	}
}

406 
rc_t
 
	$log_∑ge_image
(c⁄° 
∑ge_p
& 
∑ge
)

408 
x˘_t
* 
xd
 = 
	`x˘
();

409 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


410 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

411 && 
xd
 && xd->
	`is_log_⁄
();

412 i‡(
should_log
) {

413 
logªc_t
* 
logªc
;

414 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

415 
	`√w
 (
logªc
Ë
	`∑ge_image_log
(
∑ge
);

416 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

418 
∑ge
.
	`£t_dúty
();

419  
RCOK
;

420 
	}
}

421 
rc_t
 
	$log_båì_purge
(c⁄° 
∑ge_p
& 
∑ge
)

423 
x˘_t
* 
xd
 = 
	`x˘
();

424 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


425 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

426 && 
xd
 && xd->
	`is_log_⁄
();

427 i‡(
should_log
) {

428 
logªc_t
* 
logªc
;

429 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

430 
	`√w
 (
logªc
Ë
	`båì_purge_log
(
∑ge
);

431 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

433 
∑ge
.
	`£t_dúty
();

434  
RCOK
;

435 
	}
}

436 
rc_t
 
	$log_båì_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
)

438 
x˘_t
* 
xd
 = 
	`x˘
();

439 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


440 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

441 && 
xd
 && xd->
	`is_log_⁄
();

442 i‡(
should_log
) {

443 
logªc_t
* 
logªc
;

444 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

445 
	`√w
 (
logªc
Ë
	`båì_ö£π_log
(
∑ge
, 
idx
, 
key
, 
ñ
, 
unique
);

446 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

448 
∑ge
.
	`£t_dúty
();

449  
RCOK
;

450 
	}
}

451 
rc_t
 
	$log_båì_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñ
, 
boﬁ
 
unique
)

453 
x˘_t
* 
xd
 = 
	`x˘
();

454 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


455 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

456 && 
xd
 && xd->
	`is_log_⁄
();

457 i‡(
should_log
) {

458 
logªc_t
* 
logªc
;

459 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

460 
	`√w
 (
logªc
Ë
	`båì_ªmove_log
(
∑ge
, 
idx
, 
key
, 
ñ
, 
unique
);

461 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

463 
∑ge
.
	`£t_dúty
();

464  
RCOK
;

465 
	}
}

466 
rc_t
 
	$log_πªe_ö£π
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
)

468 
x˘_t
* 
xd
 = 
	`x˘
();

469 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


470 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

471 && 
xd
 && xd->
	`is_log_⁄
();

472 i‡(
should_log
) {

473 
logªc_t
* 
logªc
;

474 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

475 
	`√w
 (
logªc
Ë
	`πªe_ö£π_log
(
∑ge
, 
idx
, 
key
, 
ñ
);

476 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

478 
∑ge
.
	`£t_dúty
();

479  
RCOK
;

480 
	}
}

481 
rc_t
 
	$log_πªe_ªmove
(c⁄° 
∑ge_p
& 
∑ge
, 
idx
, c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
)

483 
x˘_t
* 
xd
 = 
	`x˘
();

484 
boﬁ
 
should_log
 = 
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd


485 && (
∑ge
.
	`gë_°‹e_Êags
(Ë&Öage.
°_tmp
) == 0

486 && 
xd
 && xd->
	`is_log_⁄
();

487 i‡(
should_log
) {

488 
logªc_t
* 
logªc
;

489 
	`W_DO
(
xd
->
	`gë_logbuf
(
logªc
, &
∑ge
));

490 
	`√w
 (
logªc
Ë
	`πªe_ªmove_log
(
∑ge
, 
idx
, 
key
, 
ñ
);

491 
	`W_DO
(
xd
->
	`give_logbuf
(
logªc
, &
∑ge
));

493 
∑ge
.
	`£t_dúty
();

494  
RCOK
;

495 
	}
}

	@src/sm/logtype_gen.h

31 
	~"w_deföes.h
"

36 
	eköd_t
 {

37 
	mt_commít
 = 0,

38 
	mt_com≥nßã
 = 1,

39 
	mt_skù
 = 2,

40 
	mt_chk±_begö
 = 3,

41 
	mt_chk±_bf_èb
 = 4,

42 
	mt_chk±_x˘_èb
 = 5,

43 
	mt_chk±_dev_èb
 = 6,

44 
	mt_chk±_íd
 = 7,

45 
	mt_mou¡_vﬁ
 = 8,

46 
	mt_dismou¡_vﬁ
 = 9,

47 
	mt_x˘_ab‹t
 = 10,

48 
	mt_x˘_‰ìög_•a˚
 = 11,

49 
	mt_x˘_íd
 = 12,

50 
	mt_x˘_¥ï¨e_°
 = 13,

51 
	mt_x˘_¥ï¨e_lk
 = 14,

52 
	mt_x˘_¥ï¨e_Æk
 = 15,

53 
	mt_x˘_¥ï¨e_°‹es
 = 16,

54 
	mt_x˘_¥ï¨e_fi
 = 17,

55 
	mt_Æloc_fûe_∑ge
 = 18,

56 
	mt_Æloc_∑ges_ö_ext
 = 19,

57 
	mt_‰ì_∑ges_ö_ext
 = 20,

58 
	mt_¸óã_ext_li°
 = 21,

59 
	mt_‰ì_ext_li°
 = 22,

60 
	mt_£t_ext_√xt
 = 23,

61 
	mt_°‹e_›î©i⁄
 = 24,

62 
	mt_∑ge_lök
 = 25,

63 
	mt_∑ge_ö£π
 = 26,

64 
	mt_∑ge_ªmove
 = 27,

65 
	mt_∑ge_f‹m©
 = 28,

66 
	mt_∑ge_m¨k
 = 29,

67 
	mt_∑ge_ª˛aim
 = 30,

68 
	mt_∑ge_shi·
 = 31,

69 
	mt_∑ge_•li˚
 = 32,

70 
	mt_∑ge_•li˚z
 = 33,

71 
	mt_∑ge_£t_byã
 = 34,

72 
	mt_∑ge_image
 = 35,

73 
	mt_båì_purge
 = 36,

74 
	mt_båì_ö£π
 = 37,

75 
	mt_båì_ªmove
 = 38,

76 
	mt_πªe_ö£π
 = 39,

77 
	mt_πªe_ªmove
 = 40,

78 
	mt_max_logªc
 = 41

	@src/sm/newsort.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#NEWSORT_C


	)

60 
	~"sm_öt_4.h
"

61 
	~"lgªc.h
"

62 
	~"sm.h
"

63 
	~"pö.h
"

64 
	~"¥ﬁogue.h
"

66 
	~<w_hóp.h
>

67 
	~<umemcmp.h
>

68 
	~<√w
>

70 #ifde‡
USE_PURIFY


71 
	~<purify.h
>

74 
	gssm_s‹t
::
	ts‹t_keys_t
 sort_keys_t;

75 
	gssm_s‹t
::
	tkey_öfo_t
 key_info_t;

76 
	gssm_s‹t
::
	tkey_cookõ_t
 key_cookie_t;

77 
	gssm_s‹t
::
	tÁ˘‹y_t
 factory_t;

78 
	gssm_s‹t
::
	tskey_t
 skey_t;

79 
	gssm_s‹t
::
	tobje˘_t
 object_t;

80 
	gssm_s‹t
::
	tCF
 CF;

81 
	gssm_s‹t
::
	tMOF
 MOF;

82 
	gssm_s‹t
::
	tUMOF
 UMOF;

83 
	gssm_s‹t
::
	tCSKF
 CSKF;

84 
	gssm_s‹t
::
	trun_mgr
Ñun_mgr;

87 
key_cookõ_t
 
	gkey_cookõ_t
::
nuŒ
(0);

90 "C" 
	$s‹t°›hîe
()

92 
	`as£π
(0);

93 
	}
}

105 
	#STRICT_INT8_ALIGNMENT


	)

106 
	#STRICT_F8_ALIGNMENT


	)

108 #i‡
deföed
(
I386
)

109 
	#_ALIGN_F8
 0x4

	)

110 
	#_ALIGN_IU8
 0x4

	)

112 
	#_ALIGN_F8
 0x8

	)

113 
	#_ALIGN_IU8
 0x8

	)

116 
	#ALIGN_MASK_F8
 (
_ALIGN_F8
-1)

	)

117 
	#ALIGN_MASK_IU8
 (
_ALIGN_IU8
-1)

	)

120 c⁄° 
max_keys_h™dÀd
 = 5;

122 
˛ass
 
	gè≥_t
;

124 
	gHóp
<
	tè≥_t
 *, 
	trun_mgr
> 
	tRunHóp
;

125 #ifde‡
EXPLICIT_TEMPLATE


126 
ãm∂©e
 
˛ass
 
	gHóp
<
	gè≥_t
 *, 
	grun_mgr
>;

127 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	gRunHóp
>;

130 ˛as†
	cno_Á˘‹y_t
 : 
public
 
Á˘‹y_t
 {

131 
public
:

132 
	$‰ìfunc
(c⁄° *, 
smsize_t
 ) { }

133 * 
	$Ælocfunc
(
smsize_t
) {

134 
	`W_FATAL_MSG
(
fcINTERNAL
, << "Ælocfunc");  0; 
	}
}

135 } 
	g_n⁄e
;

136 
Á˘‹y_t
* 
	gÁ˘‹y_t
::
n⁄e
 = &
_n⁄e
;

138 ˛as†
	c˝p_ch¨_Á˘‹y_t
 : 
public
 
Á˘‹y_t
 {

139 
_«Œocs
;

140 
	m_n‰ìs
;

141 
	mpublic
:

142 
NORET
 
	$˝p_ch¨_Á˘‹y_t
(Ë{ 
_«Œocs
=0; 
_n‰ìs
=0; }

143 
NORET
 ~
	$˝p_ch¨_Á˘‹y_t
(Ë{ 
	}
}

144 * 
	$Ælocfunc
(
smsize_t
 
l
) {

145 
smsize_t
 
size_ö_dbl
 = 
l
 / ();

146 if(
l
 - 
size_ö_dbl
 > 0) {

147 
size_ö_dbl
++;

149 *
p
 = 
√w
 [
size_ö_dbl
];

150 if(!
p
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

151 
	`DBG
(<<"˝p_ch¨_Á˘‹y_t.Ælocfunc(sz=" << 
l
 << "Ë√w " << 
p
 );

152 
_«Œocs
++;

153  (*)
p
;

154 
	}
}

155 
‰ìfunc
(c⁄° *
p
, 
smsize_t


156 #ifde‡
W_TRACE


157 
t


160 
	g_n‰ìs
++;

161 
DBG
(<<"˝p_ch¨_Á˘‹y_t.‰ìfunc(sz=" << 
t
 << "Ëdñëê" << 
p
);

162 *
	gd
 = (*)
p
;

163 
	gdñëe
[] 
	gd
;

165 } 
	g_˝p_ve˘‹
;

166 
Á˘‹y_t
* 
	gÁ˘‹y_t
::
˝p_ve˘‹
 = &
_˝p_ve˘‹
;

167 
	g˝p_ch¨_Á˘‹y_t
::
_«Œocs
 =0;

168 
	g˝p_ch¨_Á˘‹y_t
::
_n‰ìs
 =0;

170 #ifde‡
INSTRUMENT_SORT


172 
	#INC_STAT_SORT
(
x
Ë
	`INC_TSTAT
(x)

	)

173 
	#ADD_TSTAT_SORT
(
x
, 
y
Ë
	`ADD_TSTAT
(x, y)

	)

174 
	#GET_TSTAT_SORT
(
x
Ë
	`GET_TSTAT
(x)

	)

175 
	#SET_TSTAT_SORT
(
x
, 
y
Ë
	`SET_TSTAT
(x, y)

	)

179 
	#INC_STAT_SORT
(
x
)

	)

180 
	#ADD_TSTAT_SORT
(
x
, 
y
)

	)

181 
	#GET_TSTAT_SORT
(
x
Ë0

	)

182 
	#SET_TSTAT_SORT
(
x
, 
y
)

	)

186 #ifde‡
INSTRUMENT_SORT


188 
ölöe
 

189 
	$ªc‹d_mÆloc
(
smsize_t
 
amt
)

191 
a
 = ()(
amt
);

192 
	`INC_STAT_SORT
(
s‹t_mÆlocs
);

193 
	`ADD_TSTAT_SORT
(
s‹t_mÆloc_byãs
, 
a
);

194 
	`ADD_TSTAT_SORT
(
s‹t_mÆloc_cuº
, 
a
);

195 
ba£_°©_t
 
m
 = 
	`GET_TSTAT_SORT
(
s‹t_mÆloc_max
);

196 if(
m
 < 
a
Ë{ 
	`SET_TSTAT_SORT
(
s‹t_mÆloc_max
,á);}

199 
c
 = 
	`GET_TSTAT_SORT
(
s‹t_mÆloc_cuº
);

200 
m
 = 
	`GET_TSTAT_SORT
(
s‹t_mÆloc_hiw©
);

201 if(
c
 > 
m
) {

203 
	`SET_TSTAT_SORT
(
s‹t_mÆloc_hiw©
, 
c
);

205 
	}
}

207 
ölöe
 

208 
	$ªc‹d_‰ì
(
smsize_t
 
amt
)

211 
c
 = 
	`GET_TSTAT_SORT
(
s‹t_mÆloc_cuº
);

212 
c
 -()(
amt
);

213 
	`SET_TSTAT_SORT
(
s‹t_mÆloc_cuº
, 
c
);

214 
	}
}

217 
ölöe
 

218 
	$ªc‹d_mÆloc
(
smsize_t
 )

220 
	}
}

222 
ölöe
 

223 
	$ªc‹d_‰ì
(
smsize_t
 )

225 
	}
}

229 
˛ass
 
	glimôed_•a˚
 : 
public
 
smÀvñ_t›
,Öubli¯
	gÁ˘‹y_t


244 
	g¥iv©e
:

245 * 
_d_s¸©ch
;

246 * 
	g_s¸©ch
;

247 * 
	g_ª£t_poöt
;

248 
smsize_t
 
	g_À·
;

249 
smsize_t
 
	g_buf„r_sz
;

250 
smsize_t
 
	g_buf_hiw©
;

252 
_¸óã_buf
();

254 
	gpublic
:

255 * 
_ÆignAddr
(*
˝
) {

256  (*Ë
Æign
(
˝
);

259 
NORET
 
limôed_•a˚
(
smsize_t
 
buf„r_sz
) :

260 
_d_s¸©ch
(0),

261 
_s¸©ch
(0),

262 
_ª£t_poöt
(0),

263 
_À·
(0),

264 
_buf„r_sz
(
buf„r_sz
),

265 
_buf_hiw©
(0)

269 if(
	g_buf„r_sz
 & 0x3ff) {

270 
	g_buf„r_sz
 &= ~0x3ff;

271 
	g_buf„r_sz
 += 0x400;

273 
ªc‹d_mÆloc
((*
this
));

274 
_¸óã_buf
();

277 
	gNORET
 ~
limôed_•a˚
() {

278 
	gdñëe
[] 
	g_d_s¸©ch
;

279 
ªc‹d_‰ì
((
_buf„r_sz
 / ())*());

282 
£t_ª£t_poöt
() {

283 
	g_ª£t_poöt
 = 
_s¸©ch
;

285 
ª£t
() {

286 
DBG
(<<"RESET!");

287 
	g_s¸©ch
 = 
_ª£t_poöt
;

288 
	g_À·
 = 
_s¸©ch
 ? 
_buf„r_sz
 : 0;

291 
smsize_t
 
À·
(Ëc⁄° {  
	g_À·
; }

292 
smsize_t
 
bufhiw©
(Ëc⁄° {  
	g_buf_hiw©
; }

300 * 
b‹row_buf
(
smsize_t
& 
how_much_À·
) {

301 *
	gªsu…
 = 
_ÆignAddr
(
_s¸©ch
);

302 
	glo°_to_Æignmít
 = (
ªsu…
 - 
_s¸©ch
);

303 
DBG
(<<"b‹row_bu‡:Üo°ÅÿÆignmíà" << 
lo°_to_Æignmít
);

304 
	ghow_much_À·
 = 
_À·
 - 
lo°_to_Æignmít
;

307  
	gªsu…
;

309 
w_rc_t
 
kìp_buf
(
smsize_t
 
amt
, c⁄° * 
b
);

314 
w_rc_t
 
gë_buf
(
smsize_t
 
amt
, *&
ªsu…
);

319 
w_rc_t
 
give_buf
(
smsize_t
 
amt
, *
whîe
);

321 
‰ìfunc
(c⁄° *
p
, 
smsize_t
 
l
);

322 * 
Ælocfunc
(
smsize_t
 
l
);

327 
	glimôed_•a˚
::
	$Ælocfunc
(
smsize_t
 
l
) {

328 *
p
=0;

329 
w_rc_t
 
rc
 = 
	`gë_buf
(
l
, 
p
);

330 
	`DBG
(<<"gë_bu‡f‹ s‹àkey i¿Ælocfun¯ªtu∫†rc=" << 
rc
);

331 if(
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eINSUFFICIENTMEM
)) {

332 
p
 = 0;

334 
	`DBG
(<<"limôed_•a˚::Ælocfunc(sz=" << 
l
 << "Ëgë†" << (*)
p
);

335  (*)
p
;

336 
	}
}

339 
	glimôed_•a˚
::
	$‰ìfunc
(c⁄° *
p
, 
smsize_t
 
l
) {

340 
w_rc_t
 
rc
 = 
	`give_buf
(
l
, (*)
p
);

341 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë!
eBADSTART
) {

344 
	`W_COERCE
(
rc
);

347 
	}
}

350 
w_rc_t


351 
	glimôed_•a˚
::
	$give_buf
(
smsize_t
 
amt
, *
whîe
)

354 
amt
 = 
	`Æign
(amt);

355 if(
whîe
 + 
amt
 !
_s¸©ch
) {

356  
	`RC
(
eBADSTART
);

358 
_s¸©ch
 = 
whîe
;

359 
_À·
 +
amt
;

361  
RCOK
;

362 
	}
}

364 
w_rc_t


365 
	glimôed_•a˚
::
	$gë_buf
(
smsize_t
 
amt
, *&
ªsu…
)

368 
amt
 = 
	`Æign
(amt);

369 if(
	`smsize_t
((
_s¸©ch
 + 
amt
Ë- (*)
_d_s¸©ch
Ë> 
_buf„r_sz
) {

370 
	`DBG
(<<"");

371  
	`RC
(
eINSUFFICIENTMEM
);

373 
ªsu…
 = 
_s¸©ch
;

374 
_s¸©ch
 +
amt
;

375 
_À·
 -
amt
;

376 if(
_buf„r_sz
 - 
_À·
 > 
_buf_hiw©
)

377 
_buf_hiw©
 = (
_buf„r_sz
 - 
_À·
);

378 
	`w_as£π3
(
	`_ÆignAddr
(
_s¸©ch
) == _scratch);

379  
RCOK
;

380 
	}
}

382 
w_rc_t


383 
	glimôed_•a˚
::
kìp_buf
(
smsize_t
 
amt
, c⁄° * 
	$W_IFDEBUG3
(
b
))

385 
	`DBG
(<<"íã∏kìp_buf:ámt=" << 
amt
 << " _s¸©ch = " << (*)
_s¸©ch
);

386 *
√ws¸©ch
 = 
	`_ÆignAddr
(
_s¸©ch
);

387 
	`w_as£π3
(
√ws¸©ch
 =
b
);

389 
smsize_t
 
lo°_to_Æignmít
 = 
	`smsize_t
(
√ws¸©ch
 - 
_s¸©ch
);

391 
amt
 = 
	`Æign
(amt);

393 if(
	`smsize_t
((
√ws¸©ch
 + 
amt
Ë- (*)
_d_s¸©ch
Ë> 
_buf„r_sz
) {

394 
	`DBG
(<<"");

395  
	`RC
(
eINSUFFICIENTMEM
);

397 
_s¸©ch
 = 
√ws¸©ch
 + 
amt
;

398 
_À·
 -
lo°_to_Æignmít
;

399 
_À·
 -
amt
;

401 if((
_buf„r_sz
 - 
_À·
Ë> 
_buf_hiw©
)

402 
_buf_hiw©
 = (
_buf„r_sz
 - 
_À·
);

403 
	`w_as£π3
(
	`_ÆignAddr
(
_s¸©ch
) == _scratch);

405 
	`DBG
(<<"Üóvêkìp_buf:ámt=" << 
amt
 << "Çew _s¸©ch = " << (*)
_s¸©ch
);

406  
RCOK
;

407 
	}
}

411 
	glimôed_•a˚
::
	$_¸óã_buf
()

413 
	`w_as£π3
(
_À·
 == 0);

417 
	`DBG
(<<"√w" << 
_buf„r_sz
 / ());

418 
_d_s¸©ch
 = 
√w
 [
_buf„r_sz
 / ()];

419 
	`ªc‹d_mÆloc
((
_buf„r_sz
 / ())*());

420 if(!
_d_s¸©ch
) {

421 
	`DBG
(<<"");

422 
	`W_FATAL
(
eOUTOFMEMORY
);

424 
_s¸©ch
 = (*)
_d_s¸©ch
;

425 
_À·
 = 
_buf„r_sz
;

426 
	`w_as£π3
(
	`_ÆignAddr
(
_s¸©ch
) == _scratch);

427 
	}
}

434 ˛as†
	csm_obje˘_t
 : 
public
 
obje˘_t


436 
public
:

437 
NORET
 
	$sm_obje˘_t
(Ë: 
	$obje˘_t
(Ë{ 
	`övÆid©e
(); }

438 
NORET
 
	$sm_obje˘_t
(
fûe_p
&
Â
, 
¶Ÿid_t
 
s
):
	$obje˘_t
()

439 { 
	`_c⁄°ru˘
(
Â
, 
s
); 
	}
}

441 
	$c⁄°ru˘
(
fûe_p
&
Â
, 
¶Ÿid_t
 
s
)

442 { 
	`_c⁄°ru˘
(
Â
, 
s
); 
	}
}

444 
	$c⁄°ru˘_‰om_bufs
(

445 c⁄° *
hdr
, 
smsize_t
 
hdæí
, 
Á˘‹y_t
* 
hf
,

446 c⁄° *
body
, 
smsize_t
 
bodyÀn
, 
Á˘‹y_t
* 
_bf


448 
	`_c⁄°ru˘
(
hdr
, 
hdæí
, 
hf
, 
body
, 
bodyÀn
, 
_bf
);

449 
	}
}

451 
	$ª∂a˚
(c⁄° 
obje˘_t
& 
o
Ë{ 
	`_ª∂a˚
(o); 
	}
}

452 
	$ˇŒback_¥ﬁogue
(Ëc⁄° { 
	`_ˇŒback_¥ﬁogue
(); 
	}
}

453 
	$ˇŒback_ïûogue
(Ëc⁄° { 
	`_ˇŒback_ïûogue
(); 
	}
}

454 
	$övÆid©e
(Ë{ 
	`_övÆid©e
(); 
	}
}

457 c⁄° 
sm_obje˘_t
 
	gno_obje˘
;

458 c⁄° 
	gobje˘_t
& obje˘_t::
n⁄e
 = 
no_obje˘
;

464 ˛as†
	csm_skey_t
 : 
public
 
skey_t


466 
public
:

468 
NORET
 
	$sm_skey_t
(Ë: 
	$skey_t
() {}

470 
NORET
 
	$sm_skey_t
(
sm_obje˘_t
&
o
, 
smsize_t
 
off
, smsize_à
l
, 
boﬁ
 
h
)

471 : 
	$skey_t
(
o
, 
off
, 
l
, 
h
Ë{ 
	}
}

473 
smsize_t
 
	$off£t
(Ëc⁄° {  
_off£t
; 
	}
}

474 
	$c⁄°ru˘
(
sm_obje˘_t
& 
o
, 
smsize_t
 
off
, smsize_à
l
, 
boﬁ
 
h
) {

475 
	`_c⁄°ru˘
(&
o
, 
off
, 
l
, 
h
);

476 
	}
}

477 
	$c⁄°ru˘
(*
buf
, 
smsize_t
 
off
, smsize_à
l
, 
Á˘‹y_t
* 
f
) {

478 
	`_c⁄°ru˘
(
buf
, 
off
, 
l
, 
f
);

479 
	}
}

480 
	$ª∂a˚
(c⁄° 
skey_t
& 
k
Ë{ 
	`_ª∂a˚
(k); 
	}
}

481 
	$ª∂a˚_ªœtive_to_obj
(c⁄° 
obje˘_t
 &
o
, c⁄° 
skey_t
& 
k
) {

482 
	`_ª∂a˚_ªœtive_to_obj
(
o
, 
k
);

483 
	}
}

484 
	$övÆid©e
(Ë{ 
	`_övÆid©e
(); 
	}
}

485 
boﬁ
 
	$is_ö_œrge_obj
(Ëc⁄° {  
	`is_ö_obj
() &&

486 (!
	`is_ö_hdr
()) &&

487 
_obj
->
	`is_vÆid
(Ë&& _obj->
	`is_ö_buf„r_poﬁ
()

488 && (
_obj
->
	`c⁄tig_body_size
(Ë!_obj->
	`body_size
());

490 
	}
}

499 ˛as†
	cfib_t


501 
	m¥iv©e
:

502 
_‹dî
;

503 
	m_Àvñs
;

504 * 
	m_f
;

505 * 
	m_p
;

506 
	m_tŸÆ
;

508 
	$_sw≠
(*& 
a
, *& 
b
) {

509 *
tmp
 = 
a
;

510 
a
 = 
b
;

511 
b
 = 
tmp
;

515 
	`_compuã_Àvñ
(
Àvñ
, *
_œ°
, *
_√xt
);

516 
	$_¥öt_Àvñ
(
o°ªam
& 
o
, *
row
) const {

517 
t
 = 0;

518 
j
=0; j<
_‹dî
; j++) {

519 
o
 << " " << 
row
[
j
];

520 
t
 +
row
[
j
];

522 
o
 << "ÅŸÆ=" <<
t
 <<
ídl
;

523 
o
 << "--d⁄e--" <<
ídl
;

524 
	}
}

526 
	gpublic
:

527 
NORET
 
fib_t
(
‹dî
);

529 
	gNORET
 ~
	$fib_t
() {

530 
	`ªc‹d_‰ì
(
this
->
	`size
());

531 
dñëe
[] 
_f
;

532 
dñëe
[] 
_p
;

533 
	}
}

534 
	$Àvñs
(Ëc⁄° {  
_Àvñs
; 
	}
}

535 
	$‹dî
(Ëc⁄° {  
_‹dî
; 
	}
}

536 
	$tŸÆ
(Ëc⁄° {  
_tŸÆ
; 
	}
}

537 
	$num
(
i
Ëc⁄° {  
_f
[i]; 
	}
}

538 
	$dummõs
(
i
Ëc⁄° {  
_p
[i]; 
	}
}

542 
compuã
(
gﬂl
);

544 
compuã_dummõs
(
gﬂl
);

546 
	$¥öt
(
o°ªam
& 
o
) const {

547 
o
 << "fib_à#†o‡‹dî " << 
_‹dî
 <<
ídl
;

548 
	`_¥öt_Àvñ
(
o
, 
_f
);

549 
	}
}

551 
size_t
 
	$size
() const {

552  (
fib_t
Ë+ (()*2*(
_‹dî
));

553 
	}
}

555 
NORET


556 
	gfib_t
::
	$fib_t
(
‹dî
Ë: 
	`_‹dî
(‹dî), 
	`_f
(0), 
	$_p
(0)

558 
	`w_as£π1
(
‹dî
 >= 2);

559 
	`DBG
(<<"√w" << (Ë* 
‹dî
);

560 
_f
 = 
√w
 [
‹dî
];

562 if(!
_f
Ë{ 
	`DBG
(<<""); 
	`W_FATAL
(
ss_m
::
eOUTOFMEMORY
); }

564 
	`DBG
(<<"√w" << (Ë* 
‹dî
);

565 
_p
 = 
√w
 [
‹dî
];

567 if(!
_p
Ë{ 
	`DBG
(<<""); 
	`W_FATAL
(
ss_m
::
eOUTOFMEMORY
); }

569 
j
=0; j<
‹dî
; j++Ë{ 
_p
[j]= -1; }

570 
	`_compuã_Àvñ
(0, 
_p
, 
_f
);

573 
	`ªc‹d_mÆloc
(
this
->
	`size
());

574 
	}
}

577 
	gfib_t
::
	$compuã
(
gﬂl
)

579 * 
_œ°
 = 
_f
;

580 * 
_√xt
 = 
_p
;

581 
Àvñ
 = 0;

582 
_tŸÆ
 = 1;

584  (
_tŸÆ
 = 
	`_compuã_Àvñ
(++
Àvñ
, 
_œ°
, 
_√xt
)Ë< 
gﬂl
) {

585 
	`_sw≠
(
_œ°
, 
_√xt
);

587 
_f
 = 
_√xt
;

588 
_p
 = 
_œ°
;

589 
_Àvñs
 = 
Àvñ
;

590  
_tŸÆ
;

591 
	}
}

593 
	gfib_t
::
	$compuã_dummõs
(
gﬂl
)

596 
j
;

597 
j
 = 0; j < 
_‹dî
; j++Ë
_p
[j] = 0;

598 
d
 = 
_tŸÆ
 - 
gﬂl
;

599 
	`w_as£π3
(
j
 =
_‹dî
);

600 
j
 = 0;

601 
d
-- > 0) {

602 
_p
[
j
++]++;

603 
	`w_as£π3
(
_p
[
j
-1] <
_f
[0]);

604 if(
j
 =
_‹dî
) j = 0;

606  
_tŸÆ
 - 
gﬂl
;

607 
	}
}

610 
	gfib_t
::
	$_compuã_Àvñ
(
Àvñ
, *
_œ°
, *
_√xt
)

612 
tŸÆ
 = 0;

613 if(
Àvñ
 == 0) {

614 
j
;

615 
j
 = 1; j < 
_‹dî
; j++) {

616 
_√xt
[
j
] = 0;

618 
_√xt
[0] = 1;

621 
ba£
 = 
_œ°
[0];

622 
œ°
 = 0;

624 
j
 = 
_‹dî
-1; j >=0 ; j--) {

625 
_√xt
[
j
] = 
ba£
 + 
œ°
;

626 
œ°
 = 
_œ°
[
j
];

627 
tŸÆ
 +
_√xt
[
j
];

630 #i‡
W_DEBUG_LEVEL
 > 1

632 
	`_¥öt_Àvñ
(
cout
, 
_√xt
);

635  
tŸÆ
;

636 
	}
}

642 ˛as†
	crun_t


644 
shpid_t
 
	m_fú°_∑ge
;

645 
shpid_t
 
	m_œ°_∑ge
;

646 
¶Ÿid_t
 
	m_fú°_¶Ÿ
;

647 
¶Ÿid_t
 
	m_œ°_¶Ÿ
;

648 
	mpublic
:

649 
shpid_t
 
	$fú°_∑ge
(Ëc⁄° {  
_fú°_∑ge
; }

650 
shpid_t
 
	$œ°_∑ge
(Ëc⁄° {  
_œ°_∑ge
; 
	}
}

651 
¶Ÿid_t
 
	$fú°_¶Ÿ
(Ëc⁄° {  
_fú°_¶Ÿ
; 
	}
}

652 
¶Ÿid_t
 
	$œ°_¶Ÿ
(Ëc⁄° {  
_œ°_¶Ÿ
; 
	}
}

654 
	$£t_fú°
(c⁄° 
shpid_t
& 
p
, c⁄° 
¶Ÿid_t
& 
s
) {

655 
_fú°_∑ge
 = 
p
;

656 
_fú°_¶Ÿ
 = 
s
;

657 
	}
}

658 
	$£t_fú°
(c⁄° 
rid_t
& 
x
) {

659 
	`£t_fú°
(
x
.
pid
.
∑ge
, x.
¶Ÿ
);

660 
	}
}

661 
	$£t_œ°
(c⁄° 
shpid_t
& 
p
, c⁄° 
¶Ÿid_t
& 
s
) {

662 
_œ°_∑ge
 = 
p
;

663 
_œ°_¶Ÿ
 = 
s
;

664 
	}
}

665 
	$£t_œ°
(c⁄° 
rid_t
& 
x
) {

666 
	`£t_œ°
(
x
.
pid
.
∑ge
, x.
¶Ÿ
);

667 
	}
}

668 
size_t
 
	$size_ö_byãs
() const {

669  (
run_t
);

670 
	}
}

671 
boﬁ
 
	$em±y
() const {

672  
_fú°_¶Ÿ
 == 0;

673 
	}
}

674 
w_rc_t
 
	$√xt
(
fûe_p
& 
Â
) {

675 
	`DBG
(<<"Ñun_t::next: ENTER first="

676 << 
	`fú°_∑ge
(Ë<< "." << 
	`fú°_¶Ÿ
()

677 << "Üa°" << 
	`œ°_∑ge
(Ë<< "." << 
	`œ°_¶Ÿ
() );

679 
	`w_as£π3
(
	`fú°_∑ge
() != 0);

680 
_fú°_¶Ÿ
++;

683 if(
_fú°_∑ge
 =
_œ°_∑ge
) {

684 if(
_fú°_¶Ÿ
 > 
_œ°_¶Ÿ
) {

685 
_fú°_∑ge
 = 0;

686 
_fú°_¶Ÿ
 = 0;

688 
	`w_as£π3
(
_fú°_¶Ÿ
 < 
Â
.
	`n¶Ÿs
());

690 if(
_fú°_¶Ÿ
 >
Â
.
	`n¶Ÿs
()) {

691 
boﬁ
 
eof
;

692 
Õid_t
 
pid
 = 
Â
.
	`pid
();

693 
	`w_as£π1
(
pid
.
∑ge
 =
_fú°_∑ge
);

694 
	`W_DO
(
ss_m
::
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ));

695 
	`DBG
(<<"Ñun_t::nextÖageáfter "

696 << 
_fú°_∑ge
 << " i†" << 
pid
);

697 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes
);

698 
_fú°_∑ge
 = 
pid
.
∑ge
;

699 
_fú°_¶Ÿ
 = (
eof
? 0 : 1);

702 
	`DBG
(<<"Ñun_t::√xài†" << 
_fú°_∑ge
 << "." << 
_fú°_¶Ÿ
);

703  
RCOK
;

704 
	}
}

706 
‰õnd
 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	grun_t
& 
	gr
) ;

709 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	grun_t
& 
	gr
)

711 c⁄° *
	gi£m±y
 = 
r
.
em±y
() ? " Empty" : "";

712 c⁄° *
	gisdummy
 = (
r
.
_fú°_∑ge
==0) ? " Dummy" : "";

713 
	go
 << 
	gr
.
	g_fú°_∑ge
 << "." <<Ñ.
	g_fú°_¶Ÿ


714 << "-> " << 
	gr
.
	g_œ°_∑ge
 << "." <<Ñ.
	g_œ°_¶Ÿ


715 << 
	gisdummy


716 << 
	gi£m±y
;

717  
	go
;

725 ˛as†
	cpha£_mgr
 : 
public
 
smÀvñ_t›


727 c⁄° 
fib_t
* 
_fib
;

728 
	m_‹dî
;

729 
	m_Àvñ
;

730 * 
	m_f
;

731 
	m_tŸÆ
;

732 
	m_ŸŸÆ
;

733 
	m_high
;

734 
	m_low
;

735 
	m_way
;

736 
	m_èrgë
;

738 
	m¥iv©e
:

739 
	$_compuã_high_low
() {

740 
_high
 = 0;

741 
_low
 = 
_tŸÆ
;

742 
_way
 = 0;

743 
_tŸÆ
 = 0;

744 
i
=0; i<
_‹dî
; i++) {

745 if(
_f
[
i
] > 
_high
) _high = _f[i];

746 if(
_f
[
i
]>0) {

747 i‡(
_f
[
i
] < 
_low
) _low = _f[i];

748 
_way
++;

749 
_tŸÆ
 +
_f
[
i
];

753 
	$_add_dummõs
() {

754 
i
=0; i< 
_‹dî
; i++) {

755 
_f
[
i
] +
_fib
->
	`dummõs
(i);

756 
_ŸŸÆ
 +
_f
[
i
];

759 
dñëe
 
_fib
;

760 
_fib
=0;

761 
	}
}

763 
	gpublic
:

765 
NORET
 
	$pha£_mgr
(c⁄° 
fib_t
 *
f
) :

766 
	`_fib
(
f
),

767 
	`_‹dî
(
f
->
	`‹dî
()),

768 
	`_Àvñ
(
f
->
	`Àvñs
()),

769 
	`_f
(0),

770 
	`_tŸÆ
(
f
->
	`tŸÆ
()),

771 
	`_ŸŸÆ
(0),

772 
	`_high
(0),

773 
	`_low
(0), 
	`_way
(0), 
	$_èrgë
(
_‹dî
)

775 
	`DBG
(<<"√w" << (Ë* (
_‹dî
+1));

776 
_f
 = 
√w
 [
_‹dî
+1];

778 if(!
_f
Ë{ 
	`DBG
(<<""); 
	`W_FATAL
(
eOUTOFMEMORY
); }

780 
i
=0; i< 
_‹dî
; i++) {

782 
_f
[
i
] = (
f
->
	`num
(iË- f->
	`dummõs
(i));

784 
_f
[
_‹dî
] = 0;

787 
	`_compuã_high_low
();

789 
	`ªc‹d_mÆloc
(
this
->
	`size
());

790 
	}
}

791 
	$s‹t_pha£_d⁄e
() {

792 
	`_add_dummõs
();

793 
	`_compuã_high_low
();

794 
	}
}

795 
	gNORET
 ~
	$pha£_mgr
() {

796 
	`ªc‹d_‰ì
(
this
->
	`size
());

797 
dñëe
[] 
_f
;

798 
dñëe
 
_fib
;

799 
	}
}

801 
size_t
 
	$size
() {

802  (
pha£_mgr
Ë+ (()*2*(
_‹dî
+1));

803 
	}
}

804 
	$‹dî
(Ëc⁄°{  
_‹dî
; 
	}
}

805 
	$tŸÆ
(Ëc⁄°{  
_tŸÆ
; 
	}
}

806 
	$pha£s_À·
(Ëc⁄°{  
_Àvñ
; 
	}
}

807 
	$way
(Ëc⁄°{  
_way
; 
	}
}

808 
	$high
(Ëc⁄°{  
_high
; 
	}
}

809 
	$low
(Ëc⁄° {  
_low
; 
	}
}

810 
boﬁ
 
	$œ°
(Ëc⁄° {  (
_high
 =1)? 
åue
 : 
Ál£
; 
	}
}

811 
boﬁ
 
	$d⁄e
(Ëc⁄° {  (
_way
 =1)? 
åue
 : 
Ál£
; 
	}
}

812 
	$num
(
i
Ëc⁄° {  
_f
[i]; 
	}
}

813 
	$èrgë
(Ëc⁄° {  
_èrgë
; 
	}
}

815 
	$föish_pha£
()

817 
	`DBG
(<<"finish_phase");

818 
ﬁd_èrgë
 = 
_èrgë
;

819 
	`w_as£π3
(
_f
[
ﬁd_èrgë
] == 0);

820 
_èrgë
 = -1;

821 
i
=0; i<
_‹dî
; i++) {

822 
_f
[
i
] -
	`low
();

823 if(
_f
[
i
] <= 0) {

824 
_f
[
i
] = 0;

826 if(
i
 !
ﬁd_èrgë
) {

827 if(
_f
[
i
]==0) {

828 if(
_èrgë
 < 0) {

829 
_èrgë
 = 
i
;

834 
_f
[
ﬁd_èrgë
] = 
	`low
();

836 
	`_compuã_high_low
();

837 
_Àvñ
--;

838 
	`w_as£π3
–
	`pha£s_À·
() >= 0);

839 if–
	`pha£s_À·
() == 1) {

840 
	`w_as£π3
(
	`high
() == 1);

841 
	`w_as£π3
(
	`way
() > 1);

842 
	`w_as£π3
(
	`tŸÆ
() > 1);

844 if–
	`pha£s_À·
() == 0) {

845 
	`w_as£π3
(
	`high
() == 1);

846 
	`w_as£π3
(
	`way
() == 1);

847 
	`w_as£π3
(
	`tŸÆ
() == 1);

849 
	}
}

850 
	$¥öt
(
o°ªam
 &
o
) const {

851 
i
=0; i<
	`‹dî
()+1; i++) {

852 
o
 << " " <<
	`num
(
i
)

855 if(
	`œ°
()Ë
o
 << " LAST " ;

856 if(
	`d⁄e
()Ë
o
 << " DONE " ;

857 
o
 <<
ídl
;

858 
	}
}

867 ˛as†
	cmëa_hódî_t


869 
	mpublic
:

871 
uöt4_t
 
	t‹döÆ_numbî_t
;

873 
	m¥iv©e
:

877 
	s_≥rsi°ít
 {

881 
‹döÆ_numbî_t
 
_‹döÆ
;

883 
shpid_t
 
	m_∑ge
;

884 
¶Ÿid_t
 
	m_¶Ÿ
;

885 
uöt1_t
 
	m_nkeys
;

889 
uöt1_t
 
	tboﬁóns_t
;

890 
boﬁóns_t
 
	m_boﬁóns
;

892 
	m_is_dup
=0x1,

893 
	m_has_ödex_key
=0x2,

894 
	m_mu°_com∑ª_ö_põ˚s
 = 0x8

920 
smsize_t
 
	m_hdrsize
;

922 
smsize_t
 
	m_bodysize
;

923 
smsize_t
 
	m_lgmëa
;

925 
smsize_t
 
	m_ikeysize
;

927 
smsize_t
 
	m_Ànoff
[
max_keys_h™dÀd
*2];

931 
NORET
 
_≥rsi°ít
() :

932 
_‹döÆ
(0),

933 
_∑ge
(0),

934 
_¶Ÿ
(0),

935 
_nkeys
(0),

936 
_boﬁóns
(0),

937 
_hdrsize
(0), 
_bodysize
(0), 
_lgmëa
(0), 
_ikeysize
(0)

939 
	mi
=0; i<
	mmax_keys_h™dÀd
*2; i++) {

940 
	m_Ànoff
[
i
] = 0;

943 
NORET
 
_≥rsi°ít
(c⁄° _≥rsi°íà&
Ÿhî
) :

944 
_‹döÆ
(0),

945 
_∑ge
(
Ÿhî
._page),

946 
_¶Ÿ
(
Ÿhî
._slot),

947 
_nkeys
(
Ÿhî
._nkeys),

948 
_boﬁóns
(
Ÿhî
._booleans),

949 
_hdrsize
(
Ÿhî
._hdrsize), 
_bodysize
(other._bodysize),

950 
_lgmëa
(
Ÿhî
._lgmeta),

951 
_ikeysize
(
Ÿhî
._ikeysize)

953 
W_FATAL_MSG
(
fcINTERNAL
, << "shouldn't use copy constructor");

954 
	mi
 = 0; i < 
	mmax_keys_h™dÀd
*2; i++) {

955 
	m_Ànoff
[
i
] = 
Ÿhî
.
_Ànoff
[i];

959 } 
	g__≥rsi°ít_∑π
;

961 
	gpublic
:

962 
‹döÆ_numbî_t
 
	$‹döÆ
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_‹döÆ
; 
	}
}

963 
£t_‹döÆ
();

964 
˛r_‹döÆ
();

966 
shpid_t
 
	$∑ge
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_∑ge
; 
	}
}

967 
¶Ÿid_t
 
	$¶Ÿ
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_¶Ÿ
; 
	}
}

968 
	$nkeys
(Ëc⁄° {  (
__≥rsi°ít_∑π
.
_nkeys
); 
	}
}

969 
smsize_t
 
	$hdrsize
(Ëc⁄° {  
	`smsize_t
(
__≥rsi°ít_∑π
.
_hdrsize
); 
	}
}

970 
smsize_t
 
	$bodysize
(Ëc⁄° {  
	`smsize_t
(
__≥rsi°ít_∑π
.
_bodysize
); 
	}
}

971 
smsize_t
 
	$lgmëasize
(Ëc⁄° {  
	`smsize_t
(
__≥rsi°ít_∑π
.
_lgmëa
); 
	}
}

972 
smsize_t
 
	$ikeysize
(Ëc⁄° {  
	`smsize_t
(
__≥rsi°ít_∑π
.
_ikeysize
); 
	}
}

974 
	$£t_hdrsize
(
smsize_t
 
s
Ë{ 
__≥rsi°ít_∑π
.
_hdrsize
 = s; 
	}
}

975 
	$£t_bodysize
(
smsize_t
 
s
Ë{ 
__≥rsi°ít_∑π
.
_bodysize
 = s; 
	}
}

976 
	$£t_lgmëasize
(
smsize_t
 
s
Ë{ 
__≥rsi°ít_∑π
.
_lgmëa
 = s; 
	}
}

977 
	$£t_ikeysize
(
smsize_t
 
s
Ë{ 
__≥rsi°ít_∑π
.
_ikeysize
 = s; 
	}
}

979 
smsize_t
 
	$≥rsi°ít_size
() const {

980  ((
__≥rsi°ít_∑π
) -

981 ((
max_keys_h™dÀd
 - 
__≥rsi°ít_∑π
.
_nkeys
)*(
smsize_t
)*2));

982 
	}
}

984 
	gsmsize_t
& 
	$__Àn
(
k
Ë{  
__≥rsi°ít_∑π
.
_Ànoff
[k<<1]; 
	}
}

985 
	gsmsize_t
& 
	$__off
(
k
Ë{  
__≥rsi°ít_∑π
.
_Ànoff
[(k<<1)+1]; 
	}
}

986 c⁄° 
	gsmsize_t
& 
	$__c⁄°_Àn
(
k
) const{

987  
__≥rsi°ít_∑π
.
_Ànoff
[
k
<<1]; 
	}
}

988 c⁄° 
	gsmsize_t
& 
	$__c⁄°_off
(
k
) const{

989  
__≥rsi°ít_∑π
.
_Ànoff
[(
k
<<1)+1]; 
	}
}

991 
boﬁ
 
	$is_dup
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_boﬁóns
 &

992 
_≥rsi°ít
::
_is_dup
; 
	}
}

993 
	$m¨k_dup
(Ë{ 
__≥rsi°ít_∑π
.
_boﬁóns
 |=

994 
_≥rsi°ít
::
_is_dup
; 
	}
}

995 
	$unm¨k_dup
(Ë{ 
__≥rsi°ít_∑π
.
_boﬁóns
 &= ~

996 
_≥rsi°ít
::
_is_dup
; 
	}
}

998 
boﬁ
 
	$põ˚s
(
k
) const { 

999 (
__≥rsi°ít_∑π
.
_boﬁóns
 &

1000 –
_≥rsi°ít
::
_mu°_com∑ª_ö_põ˚s
<<
k
)) ?

1001 
åue
:
Ál£
;

1002 
	}
}

1003 
	$m¨k_põ˚s
(
k
) {

1004 
__≥rsi°ít_∑π
.
_boﬁóns
 |=

1005 –
_≥rsi°ít
::
_mu°_com∑ª_ö_põ˚s
 << 
k
);

1006 
	}
}

1007 
	$unm¨k_põ˚s
(
k
) {

1008 
__≥rsi°ít_∑π
.
_boﬁóns
 &=

1009 ~(
_≥rsi°ít
::
_mu°_com∑ª_ö_põ˚s
<<
k
);

1010 
	}
}

1012 
	$£t
(
fûe_p
 &
_Â
, 
¶Ÿid_t
 
¶Ÿ
) {

1013 
__≥rsi°ít_∑π
.
_∑ge
 = 
_Â
.
	`pid
().
∑ge
;

1014 
__≥rsi°ít_∑π
.
_¶Ÿ
 = 
¶Ÿ
;

1015 
	}
}

1016 
	$£t_nkey
(
nk
Ë{ 
__≥rsi°ít_∑π
.
_nkeys
 =Çk; 
	}
}

1018 
	$unm¨shÆ_s‹tkeys
() {

1019 
k
=0; k < 
	`nkeys
(); k++) {

1020 c⁄° 
sm_skey_t
& 
sk
 = 
	`s‹t_key
(
k
);

1021 
	`__Àn
(
k
Ë
sk
.
	`size
();

1022 
	`__off
(
k
Ë
sk
.
	`off£t
();

1024 
	}
}

1025 
m¨shÆ_s‹tkeys
(
Á˘‹y_t
& 
Á˘
);

1030 
	g¥iv©e
:

1032 
sm_obje˘_t
 
_whﬁe_obje˘
;

1033 
sm_skey_t
 
	g_s‹t_key
[
max_keys_h™dÀd
];

1034 
sm_skey_t
 
	g_ödex_key
;

1035 
sm_skey_t
 
	g_lgmëad©a
;

1036 
	gpublic
:

1037 c⁄° 
sm_skey_t
& 
	$lgmëad©a
(Ëc⁄° {  
_lgmëad©a
; 
	}
}

1038 
	gsm_skey_t
& 
	$lgmëad©a_n⁄_c⁄°
(Ë{  
_lgmëad©a
; 
	}
}

1039 c⁄° 
	gsm_obje˘_t
& 
	$whﬁe_obje˘
(Ëc⁄° {  
_whﬁe_obje˘
; 
	}
}

1040 
	gsm_obje˘_t
& 
	$whﬁe_obje˘_n⁄_c⁄°
(Ë{  
_whﬁe_obje˘
; 
	}
}

1041 c⁄° 
	gsm_skey_t
& 
	$s‹t_key
(
i
Ëc⁄° {  
_s‹t_key
[i]; 
	}
}

1042 
	gsm_skey_t
& 
	$s‹t_key_n⁄_c⁄°
(
i
Ë{  
_s‹t_key
[i]; 
	}
}

1043 c⁄° 
	gsm_skey_t
& 
	$ödex_key
(Ëc⁄° {  
_ödex_key
; 
	}
}

1044 
	gsm_skey_t
& 
	$ödex_key_n⁄_c⁄°
(Ë{  
_ödex_key
; 
	}
}

1046 
	gpublic
:

1047 
NORET
 
	$mëa_hódî_t
() :

1048 
	`__≥rsi°ít_∑π
(),

1049 
	$_whﬁe_obje˘
()

1051 
	`w_as£π1
((
max_keys_h™dÀd
) < ((

1052 
__≥rsi°ít_∑π
.
_boﬁóns
)*8)-1);

1053 
i
 = 0; i < 
max_keys_h™dÀd
; i++) {

1054 #i‡
W_DEBUG_LEVEL
 > 1

1062 
uöt4_t
 
tmp
;

1063 
tmp
 = 
_≥rsi°ít
::
_mu°_com∑ª_ö_põ˚s
 << (
max_keys_h™dÀd
-1);

1064 
_≥rsi°ít
::
boﬁóns_t
 
boo
;

1065 
boo
 = 
_≥rsi°ít
::
_mu°_com∑ª_ö_põ˚s
 << (
max_keys_h™dÀd
-1);

1066 
	`w_as£π3
(
	`uöt4_t
(
boo
Ë=
tmp
);

1070 
	}
}

1072 
	gNORET
 ~
	$mëa_hódî_t
(Ë{ 
	}
}

1074 
	g¥iv©e
:

1076 
NORET
 
mëa_hódî_t
(c⁄° mëa_hódî_à&
Ÿhî
) ;

1078 
	gpublic
:

1079 
	$‰ì•a˚
() {

1091 
	`lgmëad©a_n⁄_c⁄°
().
	`‰ì•a˚
();

1093 
	`ödex_key_n⁄_c⁄°
().
	`‰ì•a˚
();

1094 
k
=
	`nkeys
()-1; k >=0; k--) {

1096 
	`s‹t_key_n⁄_c⁄°
(
k
).
	`‰ì•a˚
();

1097 
	`unm¨k_põ˚s
(
k
);

1100 
	`whﬁe_obje˘_n⁄_c⁄°
().
	`‰ì•a˚
();

1101 
	}
}

1103 
	$as£π_nobuf„rs
() const {

1104 
k
=0; k < 
	`nkeys
(); k++) {

1105 
	`s‹t_key
(
k
).
	`as£π_nobuf„rs
();

1107 
	`ödex_key
().
	`as£π_nobuf„rs
();

1108 
	`whﬁe_obje˘
().
	`as£π_nobuf„rs
();

1109 
	}
}

1111 
	$as£π_c⁄si°ít
() const {

1112 
k
=0; k < 
	`nkeys
(); k++) {

1113 
	`w_as£π3
(
	`s‹t_key
(
k
).
	`c⁄si°ít_wôh_obje˘
(
	`whﬁe_obje˘
()));

1115 
	`w_as£π3
(
	`ödex_key
().
	`c⁄si°ít_wôh_obje˘
(
	`whﬁe_obje˘
()));

1116 
	}
}

1117 
boﬁ
 
	$is_c⁄si°ít
(Ëc⁄° { 
	`as£π_c⁄si°ít
();  
åue
; 
	}
}

1119 
	$˛ór
() {

1120 
__≥rsi°ít_∑π
.
_nkeys
 = 0;

1121 
__≥rsi°ít_∑π
.
_∑ge
 = 0;

1122 
__≥rsi°ít_∑π
.
_¶Ÿ
 = 0;

1123 
	`unm¨k_dup
();

1124 
	}
}

1126 
boﬁ
 
	$is_nuŒ
() const {

1127 
i
=0; i<
	`nkeys
(); i++) {

1128 if(
	`s‹t_key
(
i
).
	`size
(Ë> 0Ë 
Ál£
;

1130  
åue
;

1131 
	}
}

1133 c⁄° 
	g¶Ÿid_t
& 
	$¶Ÿid
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_¶Ÿ
; 
	}
}

1134 c⁄° 
	gshpid_t
& 
	$shpid
(Ëc⁄° {  
__≥rsi°ít_∑π
.
_∑ge
; 
	}
}

1136 
shrid_t
 
	$shrid
(
¢um_t
 
°‹e
) const {

1137  
	`shrid_t
(
__≥rsi°ít_∑π
.
_∑ge
,

1138 
°‹e
, 
__≥rsi°ít_∑π
.
_¶Ÿ
); 
	}
}

1141 
move_s‹t_keys
(
mëa_hódî_t
& 
Ÿhî
);

1142 
	g¥iv©e
:

1146 
	gmëa_hódî_t
::
	$m¨shÆ_s‹tkeys
(

1147 
Á˘‹y_t
& 
Á˘


1151 
k
=0; k < 
	`nkeys
(); k++) {

1152 
sm_skey_t
& 
sk
 = 
	`s‹t_key_n⁄_c⁄°
(
k
);

1156 if(
	`põ˚s
(
k
)) {

1158 
sk
.
	`c⁄°ru˘
(
	`whﬁe_obje˘_n⁄_c⁄°
(),

1159 
	`__c⁄°_off
(
k
), 
	`__c⁄°_Àn
(k), 
Ál£
);

1168 *
buf„r
 = 0;

1169 
Á˘‹y_t
 *
f
 = &
Á˘
;

1170 if(
	`__c⁄°_Àn
(
k
) > 0) {

1171 
	`DBG
(<<"Ælocfun¯f‹ s‹àkey " << 
k


1172 <<" ordöÆ=" << 
	`‹döÆ
() );

1173 
buf„r
 = (*)
Á˘
.
	`Ælocfunc
(
	`__c⁄°_Àn
(
k
));

1174 
	`DBG
(<<"Ælocfun¯Áûed f‹ key " << 
k
 );

1175 if(
buf„r
==0) {

1176 
	`DBG
(<<"dif„ª¡áŒocfun¯f‹ s‹àkey " << 
k


1177 <<" ordöÆ=" << 
	`‹döÆ
() );

1178 
f
 = 
Á˘‹y_t
::
˝p_ve˘‹
;

1179 
buf„r
 = (*)
f
->
	`Ælocfunc
(
	`__c⁄°_Àn
(
k
));

1181 
	`w_as£π3
(
buf„r
);

1182 
sk
.
	`c⁄°ru˘
((*)
buf„r
, 0, 
	`__c⁄°_Àn
(
k
), 
f
);

1184 
sk
.
	`c⁄°ru˘
(0, 0, 0, 
Á˘‹y_t
::
n⁄e
);

1189 
	}
}

1192 
	gmëa_hódî_t
::
	$move_s‹t_keys
(
mëa_hódî_t
& 
Ÿhî
)

1195 
	`DBG
(<<"move_sort_keys");

1196 
Ÿhî
.
	`as£π_c⁄si°ít
();

1198 
	`as£π_c⁄si°ít
();

1199 
	`‰ì•a˚
();

1200 
	`as£π_c⁄si°ít
();

1201 
	`as£π_nobuf„rs
();

1204 
	`whﬁe_obje˘_n⁄_c⁄°
().
	`ª∂a˚
(
Ÿhî
.
	`whﬁe_obje˘
());

1206 
	`£t_nkey
(
Ÿhî
.
	`nkeys
());

1207 
i
=0; i<
	`nkeys
(); i++) {

1208 
sm_skey_t
& 
k
 = 
	`s‹t_key_n⁄_c⁄°
(
i
);

1209 
	`DBG
(<<"movês‹àkey " << 
i
);

1214 
k
.
	`ª∂a˚_ªœtive_to_obj
(
	`whﬁe_obje˘
(),

1215 
Ÿhî
.
	`s‹t_key_n⁄_c⁄°
(
i
));

1216 
Ÿhî
.
	`s‹t_key_n⁄_c⁄°
(
i
).
	`övÆid©e
();

1217 
Ÿhî
.
	`s‹t_key
(
i
).
	`as£π_nobuf„rs
();

1219 
	`as£π_c⁄si°ít
();

1221 
Ÿhî
.
	`whﬁe_obje˘_n⁄_c⁄°
().
	`övÆid©e
();

1222 
	}
}

1225 
ölöe
 

1226 
	gmëa_hódî_t
::
	$£t_‹döÆ
(Ë{ 
__≥rsi°ít_∑π
.
_‹döÆ
 = ++
	`me
()->
	`gë__‹döÆ
(); 
	}
}

1227 
ölöe
 

1228 
	gmëa_hódî_t
::
	$˛r_‹döÆ
(Ë{ 
	`me
()->
	`gë__‹döÆ
(Ë0; 
	}
}

1230 ˛as†
	cè≥_t
 : 
public
 
smÀvñ_t›


1232 
public
:

1233 
_è≥_numbî
;

1234 
	m¥iv©e
:

1235 
¢um_t
 
_°‹e
;

1236 
vid_t
 
	m_vﬁ
;

1237 
	m_maxruns
;

1238 
	m_fú°_run
;

1239 
	m_œ°_run
;

1240 
run_t
* 
	m_li°
;

1241 
	m_cou¡_put
;

1242 
	m_cou¡_gë
;

1245 
mëa_hódî_t
 *
	m_mëa
;

1246 
boﬁ
 
	m_¥imed_f‹_öput
;

1247 
boﬁ
 
	m_¥imed_f‹_ouçut
;

1248 
fûe_p
 
	m_mëaÂ
;

1249 
fûe_p
 
	m_‹igÂ
;

1253 
lgd©a_p
 
	m_lg∑ge
;

1255 
sdesc_t
* 
	m_sd
;

1258 
w_rc_t
 
	$_√xt_mëa_rid
() {

1259  
_li°
[
	`fú°_run
()].
	`√xt
(
	`mëaÂ
());

1262 
w_rc_t
 
	`_¸óã_tmpfûe
(
vid_t
 
v
);

1263 
w_rc_t
 
	`_ªwöd
(
boﬁ
 
¸óã_√w
);

1264 
public
:

1265 
NORET
 
	$è≥_t
 () :

1266 #ifde‡
W_TRACE


1267 
	`_è≥_numbî
(0),

1269 
	`_°‹e
(0), 
	`_vﬁ
(0), 
	`_maxruns
(0),

1270 
	`_fú°_run
(-1), 
	`_œ°_run
(0), 
	`_li°
(0),

1271 
	`_cou¡_put
(0),

1272 
	`_cou¡_gë
(0),

1273 
	`_mëa
(0),

1274 
	`_¥imed_f‹_öput
(
Ál£
), 
	`_¥imed_f‹_ouçut
(false),

1275 
	$_sd
(0)

1277 
	}
}

1279 
	gNORET
 ~
	$è≥_t
 () {

1281 
_mëaÂ
.
	`unfix
();

1282 
_‹igÂ
.
	`unfix
();

1283 
_lg∑ge
.
	`unfix
();

1284 
	`W_COERCE
(
	`_ªwöd
(
Ál£
));

1286 
	`DBG
(<<"~è≥ "<<
_è≥_numbî
);

1288 
	`ªc‹d_‰ì
((
run_t
)* 
_maxruns
);

1289 
dñëe
[] 
_li°
;

1290 
_li°
 = 0;

1291 
	}
}

1293 
	$öc_cou¡_put
(Ë{ 
_cou¡_put
++; 
	}
}

1294 
	$öc_cou¡_gë
(Ë{ 
_cou¡_gë
++; 
	}
}

1295 
	$˛r_cou¡_put
(Ë{ 
_cou¡_put
=0; 
	}
}

1296 
	$˛r_cou¡_gë
(Ë{ 
_cou¡_gë
=0; 
	}
}

1297 
	$cou¡_put
(Ëc⁄° {  
_cou¡_put
; 
	}
}

1298 
	$cou¡_gë
(Ëc⁄° {  
_cou¡_gë
; 
	}
}

1300 #i‡
W_DEBUG_LEVEL
 > 2

1301 
shrid_t
 
	$ªÆ_shrid
(
¢um_t
 
°‹e
) const {

1302  
_mëa
->
	`shrid
(
°‹e
);

1303 
	}
}

1304 
	$_checksd
() const {

1305 if(
_°‹e
 != 0) {

1306 
	`w_as£π3
(
	`tmp_fid
(Ë=
	`sdesc
()->
	`°id
());

1308 
	`w_as£π3
(
_sd
 == 0);

1310 
	}
}

1312 
ölöe
 
	$_checksd
(Ëc⁄° {
	}
}

1315 c⁄° 
mëa_hódî_t
 *
	$mëa
(Ëc⁄° {  
_mëa
; 
	}
}

1316 
	$fú°_run
(Ëc⁄° {  
_fú°_run
; 
	}
}

1317 
	$œ°_run
(Ëc⁄° {  
_œ°_run
; 
	}
}

1318 
boﬁ
 
	$¥imed_f‹_ouçut
()c⁄° {  
_¥imed_f‹_ouçut
; 
	}
}

1319 
boﬁ
 
	$¥imed_f‹_öput
()c⁄° {  
_¥imed_f‹_öput
; 
	}
}

1320 
°id_t
 
	$tmp_fid
(Ëc⁄° {  
	`°id_t
(
_vﬁ
, 
_°‹e
); 
	}
}

1324 
rid_t
 
	$run_íd
() const {

1325 
rid_t
 
	`rid
(
_vﬁ
, 
	`shrid_t
(
_li°
[
	`fú°_run
()].
	`œ°_∑ge
(),

1326 
_°‹e
,

1327 
_li°
[
	`fú°_run
()].
	`œ°_¶Ÿ
()));

1328  
rid
;

1329 
	}
}

1332 
rid_t
 
	$run_beg
() const {

1333 
rid_t
 
	`rid
(
_vﬁ
, 
	`shrid_t
(
_li°
[
	`fú°_run
()].
	`fú°_∑ge
(),

1334 
_°‹e
,

1335 
_li°
[
	`fú°_run
()].
	`fú°_¶Ÿ
()));

1336  
rid
;

1337 
	}
}

1338 
rid_t
 
	$mëa_rid
(Ëc⁄° {  
	`run_beg
(); 
	}
}

1339 
sdesc_t
* 
	$sdesc
(Ëc⁄° {  
_sd
; 
	}
}

1340 
boﬁ
 
	$is_dummy_run
() const {

1341 if(
_li°
[
	`fú°_run
()].
	`fú°_∑ge
(Ë=0Ë 
åue
;

1342  
Ál£
;

1343 
	}
}

1347 
boﬁ
 
	$cuº_run_em±y
() const {

1349 
	`w_as£π1
–(
	`fú°_run
() >=0) &&

1350 (
	`fú°_run
(Ë< 
	`œ°_run
()));

1351  
_li°
[
	`fú°_run
()].
	`em±y
();

1352 
	}
}

1358 
boﬁ
 
	$is_em±y
() const {

1361 i‡(
	`œ°_run
() == 0) {

1362 
	`w_as£π3
(
	`fú°_run
() == -1);

1363  
åue
;

1368 i‡(
	`fú°_run
(Ë>
	`œ°_run
()Ë 
åue
;

1370  
Ál£
;

1382 
	}
}

1384 
size_t
 
	$size_ö_byãs
() const {

1385  (
è≥_t
Ë+ ((
run_t
)*
_maxruns
);

1386 
	}
}

1388 
öô_vid
(
vid_t
 
v
);

1389 
Æloc_runs
(
m
);

1391 
	gfûe_p
& 
	$mëaÂ
(Ë{  
_mëaÂ
; 
	}
}

1392 
	gfûe_p
& 
	$‹igÂ
(Ë{  
_‹igÂ
; 
	}
}

1393 
	$ªÀa£_∑ge
(
fûe_p
&
f
Ë{ f.
	`unfix
(); 
	}
}

1394 
	$£t_°‹e
(
°id_t
 
f
) {

1395 
_°‹e
 = 
f
.
°‹e
;

1396 
_vﬁ
 = 
f
.
vﬁ
;

1397 
	}
}

1398 
¢um_t
 
	$gë_°‹e
()c⁄° {  
_°‹e
; 
	}
}

1399 
	$add_dummy_run
() {

1400 
_li°
[
	`œ°_run
()].
	`£t_fú°
(0,0);

1402 
	`DBG
(<<"ADD DUMMY RUN" << 
_è≥_numbî
);

1403 
_œ°_run
++;

1404 
	}
}

1405 
	$add_run_fú°
(c⁄° 
shpid_t
& 
p
, c⁄° 
¶Ÿid_t
& 
s
) {

1406 
	`DBG
(<<"START WRITING RUN " << 
	`œ°_run
()

1407 << " o¿è≥ " << 
_è≥_numbî


1408 << " st‹ê" << 
_°‹e


1410 
_li°
[
	`œ°_run
()].
	`£t_fú°
(
p
,
s
);

1411 
	}
}

1412 
	$add_run_œ°
(c⁄° 
shpid_t
& 
p
, c⁄° 
¶Ÿid_t
& 
s
) {

1413 
_li°
[
	`œ°_run
()].
	`£t_œ°
(
p
,
s
);

1414 
	`DBG
(<<"FINISH WRITING RUN " << 
	`œ°_run
()

1415 << " o¿è≥ " << 
_è≥_numbî


1416 << " st‹ê" << 
_°‹e


1417 << " wôhÇow " << 
_cou¡_put
 << "Ñecords"

1419 
_œ°_run
++;

1420 
	}
}

1422 
	$com∂ëed_run
() {

1423 
	`DBG
(<<"COMPLETED (READINGËRUN " << 
	`fú°_run
()

1424 << " o¿è≥ " << 
_è≥_numbî


1425 << " st‹ê" << 
_°‹e


1426 << " wôh " << 
_cou¡_put
 << "Ñecords"

1427 << " o‡which " << 
_cou¡_gë
 << " wereÑead"

1429 
_fú°_run
++;

1430 
	`w_as£π1
(
	`fú°_run
() >= 0);

1431 
	`w_as£π3
(
	`fú°_run
(Ë<
	`œ°_run
());

1433 
	}
}

1435 
¥ï¨e_è≥_buf„r
(
mëa_hódî_t
 *
m
);

1436 
¥ime_è≥_f‹_öput
();

1437 
w_rc_t
 
¥ime_è≥_f‹_ouçut
();

1439 
w_rc_t
 
¥ime_ªc‹d
(c⁄° 
s‹t_keys_t
 &
öfo
, 
run_mgr
&,

1440 
Á˘‹y_t
&);

1441 
w_rc_t
 
pö_‹ig_ªc
(
fûe_p
& 
ifûe_∑ge
, 
°id_t
&
f
,

1442 
ªc‹d_t
 *&
ªc
, 
rid_t
& 
r
);

1444 
‰õnd
 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	gè≥_t
& 
	gt
) ;

1446 
	$check_è≥_fûe
(
boﬁ
 
¥öèŒ
) const;

1447 
	}
};

1449 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	gè≥_t
& 
	gt
)

1451 
	go
 << 
	gt
.
	g_è≥_numbî


1452 <<" st‹ê" << 
	gt
.
	g_°‹e


1453 <<"Öut†" << 
	gt
.
	g_cou¡_put


1454 <<" gë†" << 
	gt
.
	g_cou¡_gë


1455 <<" cuº_run" << 
	gt
.
	g_fú°_run


1456 << 
	gídl


1458 
	gi
 = 
t
.
_fú°_run
;

1459 if(
	gi
<0) i=0;

1460 ; 
	gi
 < 
	gt
.
	g_œ°_run
; i++) {

1461 
	grun_t
& 
	gR
 = 
t
.
_li°
[
i
];

1462 
	go
 <<", (" << 
	gR
 << ")" << 
	gídl
 ;

1464  
	go
;

1467 
	gè≥_t
::
check_è≥_fûe
(
boﬁ
 
	$W_IFDEBUG3
(
¥öèŒ
)) const

1469 #i‡
W_DEBUG_LEVEL
 > 2

1475 
bad
=0;

1476 
°id_t
 
	`fid
(
_vﬁ
, 
_°‹e
);

1477 
Õid_t
 
pid
;

1478 
rid_t
 
fú°_rid
;

1479 
rid_t
 
œ°_rid
;

1480 
fûe_p
 
∑ge
;

1481 
¶Ÿid_t
 
¶Ÿ
=0;

1482 
¶Ÿid_t
 
œ°_¶Ÿ
=0;

1485 
boﬁ
 
is_fú°
=
åue
;

1486 
boﬁ
 
eof
=
Ál£
;

1487 
numªc‹ds
=0;

1488 if(
¥öèŒ
) {

1489 
	`DBG
(<< 
ídl
 <<"START check_è≥_fûê" << 
_è≥_numbî
);

1492 
	`W_COERCE
–
fi
->
	`fú°_∑ge
(
fid
, 
pid
, 
NULL
 ) );

1493 ! 
eof
) {

1494 
	`w_as£π1
(
pid
.
∑ge
 != 0);

1495 
	`W_COERCE
(
∑ge
.
	`fix
(
pid
, 
LATCH_SH
));

1497 
¶Ÿ
 = 
∑ge
.
	`√xt_¶Ÿ
(0);

1499 if(
is_fú°
) {

1502 if(
¶Ÿ
) {

1503 
fú°_rid
 = 
	`rid_t
(
pid
, 
¶Ÿ
);

1504 
is_fú°
 = 
Ál£
;

1509 
¶Ÿ
) {

1510 
numªc‹ds
++;

1511 
œ°_¶Ÿ
 = 
¶Ÿ
;

1512 
¶Ÿ
 = 
∑ge
.
	`√xt_¶Ÿ
(slot);

1516 
œ°_rid
 = 
	`rid_t
(
pid
, 
œ°_¶Ÿ
);

1518 if(
¥öèŒ
) {

1519 
	`DBG
(<<"check_è≥_fûe:Öagê" << 
pid


1520 << " fú° vÆid slŸ (sÿÁrË" << 
fú°_rid


1521 << "Üa° vÆid slŸ (sÿÁrË" << 
œ°_rid


1522 << " cumu #ªcs" << 
numªc‹ds


1526 
∑ge
.
	`unfix
();

1527 
	`W_COERCE
(
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ));

1533 
f
 = 0;

1534 
_li°
[
f
].
	`fú°_∑ge
() == 0) f++;

1536 
°id_t
 
	`s
(
_vﬁ
, 
_°‹e
);

1538 
run_t
 &
R
 = 
_li°
[
f
];

1539 
Õid_t
 
	`p
(
s
, 
R
.
	`fú°_∑ge
());

1540 
rid_t
 
rid
 = 
	`rid_t
(
p
, 
R
.
	`fú°_¶Ÿ
());

1541 if(
rid
 !
fú°_rid
) {

1542 
bad
++;

1543 if(
¥öèŒ
) {

1544 
	`DBG
–<< "BOGUS TAPE: found fú°_rid " << 
fú°_rid


1545 << "Å≠e: " << *
this
);

1549 if(
	`œ°_run
()>0)

1551 
run_t
 &
R
 = 
_li°
[
	`œ°_run
()-1];

1552 
Õid_t
 
	`p
(
s
, 
R
.
	`œ°_∑ge
());

1553 
rid_t
 
rid
 = 
	`rid_t
(
p
, 
R
.
	`œ°_¶Ÿ
());

1554 if(
rid
 !
œ°_rid
) {

1555 
bad
++;

1556 if(
¥öèŒ
) {

1557 
	`DBG
–<< "BOGUS TAPE: foundÜa°_rid " << 
œ°_rid


1558 << "Å≠e: " << *
this
);

1563 if(
numªc‹ds
 !
	`cou¡_put
()) {

1564 
bad
++;

1565 if(
¥öèŒ
) {

1566 
	`DBG
–<< "BOGUS TAPE: found " << 
numªc‹ds


1567 << "Ñec‹ds, buàcou¡_put(Ëi†" << 
	`cou¡_put
());

1572 if(
bad
>0 && !
¥öèŒ
Ë
	`check_è≥_fûe
(
åue
);

1573 if(
¥öèŒ
) {

1574 
	`DBG
(<<"END check_è≥_fûê" << 
_è≥_numbî
 << 
ídl
 <<Éndl);

1577 
	}
}

1579 
˛ass
 
	gssm_s‹t
::
run_mgr
 : 
public
 
smÀvñ_t›
, 
	gx˘_dïídít_t


1581 
	gpublic
:

1583 
boﬁ
 
gt
(c⁄° 
è≥_t
 *, constÅape_t *) const;

1585 
	g¥iv©e
:

1587 
limôed_•a˚
 & 
_s¸©ch_•a˚
;

1588 
°id_t
 
	g_ifid
;

1590 
	g_NRUNS
;

1591 
	g_NTAPES
;

1592 
	g_num¶Ÿs
;

1593 
	g_√xt_run
;

1595 
	g_M
;

1596 
è≥_t
* 
	g_è≥s
;

1597 
pha£_mgr
* 
	g_pha£
;

1599 
	gs‹t_keys_t
 &
	göfo
;

1600 
mëa_hódî_t
** 
	gªc_li°
;

1601 
mëa_hódî_t
* 
	gªc_fú°
;

1602 
mëa_hódî_t
* 
	gªc_cuº
;

1603 
mëa_hódî_t
* 
	gªc_œ°
;

1604 
mëa_hódî_t
* 
	gªc_fú°_to‰ì
;

1607 
boﬁ
 
	g_ªcompuã
;

1608 
boﬁ
 
	g_mëa_mÆlo˚d
;

1609 
	g_ßve_pö_cou¡
;

1610 
boﬁ
 
	g_ab‹ãd
;

1613 
fûe_p
 
	gœ°_öputfûe_∑ge_ªad
;

1617 
x˘_°©e_ch™ged
(
x˘_°©e_t
 
ﬁd°©e
, x˘_°©e_à
√w°©e
);

1623 
_QuickS‹t
(
mëa_hódî_t
* 
a
[], 
˙t
);

1626 
ªc‹d_t
 * 
_ªc_ö_run
(
fûe_p
 *
Â
, fûe_p*& 
Âout
, 
mëa_hódî_t
 *
m
)const;

1630 
w_rc_t
 
_¥ï¨e_key
(

1631 
sm_obje˘_t
& 
obj
,

1632 
k
,

1633 
fûe_p
& 
smÆl
,

1634 c⁄° 
ªc‹d_t
& 
ªc
,

1635 
boﬁ
& 
com∑ª_ö_põ˚s
,

1636 
sm_skey_t
& 
kd


1640 
w_rc_t
 
_ouçut_ödex_ªc
(

1641 
°id_t
& 
ofid
,

1642 
rid_t
& 
‹ig
,

1643 c⁄° 
mëa_hódî_t
* 
m
,

1644 
ªc‹d_t
* 
ªc
,

1645 
fûe_p
& 
œ°_∑ge_wrôãn
,

1646 
sdesc_t
* 
sd


1649 
w_rc_t
 
_ouçut_pö√d_ªc
(

1650 
°id_t
& 
ofid
,

1651 
rid_t
& 
‹ig
,

1652 
ªc‹d_t
* 
ªc
,

1653 
fûe_p
& 
‹ig_ªc_∑ge
,

1654 
fûe_p
& 
œ°_∑ge_wrôãn
,

1655 
sdesc_t
* 
sd
,

1656 
boﬁ
& 
sw≠


1658 
w_rc_t
 
_ouçut_ªc
(

1659 
°id_t
& ,

1660 
mëa_hódî_t
 *
m
,

1661 
fûe_p
& 
œ°_∑ge_wrôãn
,

1662 
sdesc_t
* 
sd
,

1663 
boﬁ
& 
sw≠


1668 
è≥_t
* 
_√xt_è≥
();

1673 
CF
 
_keycmp
(
i
Ëc⁄° {  
	göfo
.
keycmp
(i); }

1674 
_KeyCmp
(c⁄° 
mëa_hódî_t
 *
k1
, c⁄° mëa_hódî_t* 
k2
) const;

1680 
w_rc_t
 
_mîge
(

1681 
RunHóp
* 
h
,

1682 
mëa_hódî_t
* 
l
,

1683 
boﬁ
 
œ°_∑ss
,

1684 
è≥_t
* 
ouâ≠e
,

1685 
°id_t
 
outfûe
,

1686 
boﬁ
& 
sw≠


1689 
w_rc_t
 
_ouçut_më¨ec
(

1690 
mëa_hódî_t
* 
m
,

1691 
è≥_t
* 
t
,

1692 
rid_t
& 
ªsu…_rid


1695 
_˛ór_mëa_buf„rs
(
boﬁ
);

1696 
	gpublic
:

1697 
NORET
 ~
run_mgr
() {

1698 
DBG
(<<"_NTAPES");

1699 if(
	g_NTAPES
) {

1700 
ªc‹d_‰ì
(
_NTAPES
 * 
_è≥s
[0].
size_ö_byãs
());

1702 
	gdñëe
[] 
	g_è≥s
;

1703 
	g_è≥s
 = 0;

1706 
dñëe
 
	g_pha£
;

1707 
	g_pha£
 = 0;

1709 
DBG
(<<" ~run_mgr");

1710 
_˛ór_mëa_buf„rs
(
åue
);

1713 
NORET
 
run_mgr
(

1714 
˛ass
 
limôed_•a˚
 &
ss
,

1715 c⁄° 
°id_t
& 
_ifid
,

1716 
_run_size
,

1717 
_num_runs
,

1718 
_¡≠es
,

1719 
è≥_t
* 
_è≥¶i°
,

1720 
smsize_t
 
_mö_ªc_size
,

1721 
s‹t_keys_t
 & 
_öfo
,

1722 
w_rc_t
& 
ªsu…


1725 
nkeys
(Ëc⁄° {  
	göfo
.nkeys(); }

1728 
w_rc_t
 
put_ªc
(
fûe_p
 &, 
¶Ÿid_t
 );

1731 
¥ﬁogue
();

1732 
w_rc_t
 
Êush_run
(
boﬁ
 
Êush
);

1733 
ïûogue
();

1736 
w_rc_t
 
ouçut_sögÀ_run
(
fûe_p
* 
Â
, 
°id_t
, 
boﬁ
&);

1739 
w_rc_t
 
mîge
(
°id_t
, 
boﬁ
&);

1742 
w_rc_t
 
ö£π
(
RunHóp
* , 
è≥_t
* , ) const;

1745 
ˇŒback_¥ﬁogue
() const {

1746 #i‡
W_DEBUG_LEVEL
 > 1

1751 *
	gßve_pö_cou¡
 = (*)&
_ßve_pö_cou¡
;

1752 *
	gßve_pö_cou¡
 = 
me
()->
pö_cou¡
();

1753 
w_as£π3
(
_ßve_pö_cou¡
 == 0);

1755 #i‡
W_DEBUG_LEVEL
 > 2

1759 
me
()->
check_pö_cou¡
(0);

1760 
me
()->
ö_sm
(
Ál£
);

1763 
ˇŒback_ïûogue
() const {

1764 #i‡
W_DEBUG_LEVEL
 > 2

1771 
me
()->
check_a˘uÆ_pö_cou¡
(
_ßve_pö_cou¡
);

1772 
me
()->
ö_sm
(
åue
);

1775 c⁄° 
	g°id_t
& 
ifid
(Ë{  
	g_ifid
; }

1780 
NORET


1781 
	grun_mgr
::
	$run_mgr
(

1782 
˛ass
 
limôed_•a˚
 &
ss
,

1783 c⁄° 
°id_t
& 
__ifid
,

1784 
_run_size
,

1785 
_ƒuns
,

1786 
_¡≠es
,

1787 
è≥_t
* 
_è≥¶i°
,

1788 
smsize_t
 
_mö_ªc_sz
,

1789 
s‹t_keys_t
 &
_öfo
,

1790 
w_rc_t
 &
ªsu…


1793 
	`x˘_dïídít_t
(
	`x˘
()),

1794 
	`_s¸©ch_•a˚
(
ss
),

1795 
	`_ifid
(
__ifid
),

1796 
	`_NRUNS
(
_ƒuns
),

1797 
	`_NTAPES
(
_¡≠es
),

1798 
	`_num¶Ÿs
(0),

1799 
	`_√xt_run
(0),

1800 
	`_M
(
_run_size
),

1801 
	`_è≥s
(
_è≥¶i°
),

1802 
	`_pha£
(0),

1803 
	`öfo
(
_öfo
),

1804 
	`ªc_li°
(0), 
	`ªc_fú°
(0), 
	`ªc_cuº
(0), 
	`ªc_œ°
(0),

1805 
	`_ªcompuã
(
Ál£
),

1806 
	`_mëa_mÆlo˚d
(
Ál£
),

1807 
	`_ßve_pö_cou¡
(0),

1808 
	$_ab‹ãd
(
Ál£
)

1816 
smsize_t
 
•a˚_√eded
;

1817 #ifde‡
W_TRACE


1818 
t
 =

1822 
fûe_p
::
	`choo£_ªc_im∂emíèti⁄
(0,

1823 
_mö_ªc_sz
,

1824 
•a˚_√eded


1826 
_num¶Ÿs
 = (
fûe_p
::
d©a_sz
Ë/ 
	`Æign
(
•a˚_√eded
);

1827 
	`w_as£π3
(
_num¶Ÿs
 > 0);

1828 
	`DBG
–<<"_mö_ªc_sz" << 
_mö_ªc_sz


1829 << " s∑˚_√eded" << 
•a˚_√eded


1830 << " _num¶Ÿs" << 
_num¶Ÿs


1831 << " köd" << 
t


1834 
_num¶Ÿs
 *
_M
;

1836 
	`ªc‹d_mÆloc
((*
this
));

1838 if(
_NTAPES
 > 0) {

1839 
	`DBG
(<<"√w fib_t" << (
fib_t
));

1840 
‹dî
 = 
_NTAPES
-1;

1841 
fib_t
 *
fib
 = 
√w
 
	`fib_t
(
‹dî
);

1843 if(!
fib
) {

1844 
	`DBG
(<<"");

1845 
ªsu…
 = 
	`RC
(
eOUTOFMEMORY
);

1849 
fib
->
	`compuã
(
_NRUNS
);

1850 
	`DBG
(<<"fib f‹ gﬂ»" << 
_NRUNS
);

1851 
fib
->
	`compuã_dummõs
(
_NRUNS
);

1853 
	`DBG
(<<"√wÖha£_mgr" << (
pha£_mgr
));

1854 
_pha£
 = 
√w
 
	`pha£_mgr
(
fib
);

1856 if(!
_pha£
) {

1857 
	`DBG
(<<"");

1858 
ªsu…
 = 
	`RC
(
eOUTOFMEMORY
);

1872 
j
;

1873 
low
=0;

1874 
j
=0; j< 
‹dî
; j++) {

1875 
	`DBG
(<<"áŒo¯num=" << 
fib
->
	`num
(
j
)

1876 << " dummõs=" << 
fib
->
	`dummõs
(
j
)

1877 << " max #Ñun†f‹Å≠ê" << 
j
 );

1878 
_è≥s
[
j
].
	`Æloc_runs
(
fib
->
	`num
(j));

1879 
	`ªc‹d_mÆloc
(
_è≥s
[
j
].
	`size_ö_byãs
());

1881 if(
low
==0) {

1882 
low
 = 
fib
->
	`num
(
j
);

1884 if(
fib
->
	`num
(
j
Ë< 
low
)Üow = fib->num(j) ;

1887 
	`w_as£π3
(
low
 != 0);

1891 
	`w_as£π3
(
j
 =
‹dî
);

1892 
	`DBG
(<<"áŒo¯" << 
low
 << " max #Ñun†f‹Å≠ê" << 
j
 );

1893 
_è≥s
[
j
].
	`Æloc_runs
(
low
);

1901 
ªc_fú°
 = 
√w
 
mëa_hódî_t
[
_num¶Ÿs
];

1902 if(!
ªc_fú°
) {

1903 
ªsu…
 = 
	`RC
(
eOUTOFMEMORY
);

1906 
	`ªc‹d_mÆloc
(
_num¶Ÿs
 * (
mëa_hódî_t
));

1911 
mëa_hódî_t
 *
	tmëahódî±r
;

1912 
ªc_li°
 = 
√w
 
mëahódî±r
[
_num¶Ÿs
];

1913 if(!
ªc_li°
) {

1914 
ªsu…
 = 
	`RC
(
eOUTOFMEMORY
);

1917 
	`ªc‹d_mÆloc
(
_num¶Ÿs
 * (
mëa_hódî_t
 *));

1919 
ªc_cuº
 = 
ªc_fú°
;

1920 
	`DBG
(<<"Ñec_cuº i†now " << 
ªc_cuº
);

1921 
ªc_œ°
 = 
ªc_fú°
 + 
_num¶Ÿs
 - 1;

1923 
	`DBG
(<<"Ñec_œ° i†now " << 
ªc_œ°
 << " based on _numslots "

1924 << 
_num¶Ÿs
);

1926 
_s¸©ch_•a˚
.
	`£t_ª£t_poöt
();

1927 
	`ªgi°î_me
();

1928 
	}
}

1931 
	grun_mgr
::
	$_˛ór_mëa_buf„rs
(
boﬁ
 
dñëëhem
)

1933 
	`DBG
(<<"_clear_meta_buffers");

1934 if(
ªc_fú°
) {

1935 
mëa_hódî_t
 *
m
=
ªc_œ°
;m>=
ªc_fú°
;m--) {

1936 
m
->
	`unm¨k_dup
();

1937 
m
->
	`‰ì•a˚
();

1939 if(
dñëëhem
) {

1940 
dñëe
[] 
ªc_fú°
;

1941 
ªc_fú°
 = 0;

1942 
ªc_œ°
 = 0;

1943 
	`DBG
(<<"Ñec_œ° i†now " << 
ªc_œ°
 );

1945 
	`ªc‹d_‰ì
((
mëa_hódî_t
Ë* 
_num¶Ÿs
);

1947 
dñëe
[] 
ªc_li°
;

1948 
	`ªc‹d_‰ì
((
mëa_hódî_t
 *Ë* 
_num¶Ÿs
);

1949 
ªc_li°
 = 0;

1954 
_mëa_mÆlo˚d
 = 
åue
;

1955 
	}
}

1961 
w_rc_t


1962 
	grun_mgr
::
	$ö£π
(
RunHóp
* 
runhóp
, 
è≥_t
* 
r
, ) const

1964 
	`DBG
(<<"ö£πÅ≠ê" << 
r
->
_è≥_numbî
);

1965 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

1967 
runhóp
->
	`AddEÀmít
(
r
);

1968 
	`w_as£π2
(
runhóp
->
	`NumEÀmíts
() > 0);

1970  
RCOK
;

1971 
	}
}

1974 
	grun_mgr
::
	$x˘_°©e_ch™ged
(
x˘_°©e_t
 , x˘_°©e_à
√w_°©e
)

1976 i‡(
√w_°©e
 !
x˘_a˘ive
) {

1977 
_ab‹ãd
 = 
åue
;

1979 
	}
}

1985 
ölöe
 
smsize_t
 
	$ªc_size
(c⁄° 
ªc‹d_t
* 
ªc
)

1989  (
ªc
->
èg
.
Êags
 & 
t_smÆl
Ë? 
	`smsize_t
 (ªc->
	`body_size
()) :

1990 ((
ªc
->
èg
.
Êags
 & 
t_œrge_0
) ?

1991 
	`smsize_t
((
lg_èg_chunks_s
)):

1992 
	`smsize_t
((
lg_èg_ödúe˘_s
))

2001 
	}
}

2007 
w_rc_t


2008 
	grun_mgr
::
	$put_ªc
(
fûe_p
 &
Â
, 
¶Ÿid_t
 
¶Ÿ
)

2010 
	`FUNC
(
run_mgr
::
put
);

2014 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

2019 
nkeys
 = 
öfo
.
	`nkeys
();

2020 if(
öfo
.
	`is_f‹_ödex
()) {

2021 if(
nkeys
 > 1) {

2022  
	`RC
(
eBADARGUMENT
);

2026 
	`w_as£π3
(
Â
.
	`is_fixed
());

2027 c⁄° 
ªc‹d_t
 *
ªc
;

2028 
	`W_DO
(
Â
.
	`gë_ªc
(
¶Ÿ
, 
ªc
));

2029 
rid_t
 
	`rid
(
Â
.
	`pid
(), 
¶Ÿ
);

2031 
	`DBG
(<<"put_ªc:Ñid " << 
rid
);

2032 if(
ªc_cuº
 > 
ªc_œ°
) {

2033 #i‡
W_DEBUG_LEVEL
 > 0

2035 
w_o°r°ªam
 
s
;

2036 
s
 <<

2037 "I¡î«»îr‹: @ " << 
__LINE__


2038 << " " << 
__FILE__


2039 << 
ídl


2040 << "_num¶Ÿ†" << 
_num¶Ÿs


2041 << "Ñec_cuº " << 
ªc_cuº


2042 << "Ñec_œ° " << 
ªc_œ°


2043 << "Üimô " << (
ªc_œ°
 - 
ªc_fú°
 + 1)

2044 << " sizeof(*ªc_œ°)" << (*
ªc_œ°
)

2045 << "Ñid " << 
rid


2046 << " f‹ slŸ slŸ " << 
¶Ÿ


2047 << 
ídl


2050 
s
 <<

2052 << 
ídl
;

2053 
s
 <<

2056 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
());

2058 
	`s‹t°›hîe
();

2060  
	`RC
(
eINTERNAL
);

2063 
ªc_cuº
->
	`£t_nkey
(
öfo
.
	`nkeys
());

2064 
ªc_cuº
->
	`£t_‹döÆ
();

2066 
sm_obje˘_t
& 
obje˘
 = 
ªc_cuº
->
	`whﬁe_obje˘_n⁄_c⁄°
();

2067 
obje˘
.
	`c⁄°ru˘
(
Â
, 
¶Ÿ
);

2076 
MOF
 
m¨shÆ
 = 
öfo
.
	`m¨shÆ_func
();

2077 if(
m¨shÆ
 !
s‹t_keys_t
::
noMOF
) {

2078 
	`DBG
(<<"MOF " << 
rid
);

2080 
sm_obje˘_t
 
√wobje˘
;

2082 
	`ˇŒback_¥ﬁogue
();

2083 
	`W_DO
–(*
m¨shÆ
)(
rid
, 
obje˘
, 
öfo
.
	`m¨shÆ_cookõ
(), &
√wobje˘
) );

2084 
	`ˇŒback_ïûogue
();

2085 
	`INC_STAT_SORT
(
s‹t_mof_˙t
);

2088 
obje˘
.
	`ª∂a˚
(
√wobje˘
);

2099 
k
=0; k<
nkeys
; k++) {

2100 
	`DBG
(<<"ö•e˘ög key " << 
k
);

2101 
CSKF
 
¸óã_s‹t_key
 = 
öfo
.
	`key¸óã
(
k
);

2106 
sm_skey_t
& 
key
 = 
ªc_cuº
->
	`s‹t_key_n⁄_c⁄°
(
k
);

2108 
key
.
	`övÆid©e
();

2110 if(
¸óã_s‹t_key
!
s‹t_keys_t
::
noCSKF
) {

2111 
	`INC_STAT_SORT
(
s‹t_gëöfo_˙t
);

2112 
	`DBG
(<<"CSKF " << 
rid
);

2114 
skey_t
 
√wkey
;

2116 
ªc_cuº
->
	`as£π_c⁄si°ít
();

2118 
	`ˇŒback_¥ﬁogue
();

2119 
	`W_DO
–(*
¸óã_s‹t_key
)(

2120 
rid
,

2121 
obje˘
,

2122 
öfo
.
	`cookõ
(
k
),

2123 
_s¸©ch_•a˚
,

2124 &
√wkey
) );

2125 
	`ˇŒback_ïûogue
();

2128 
key
.
	`ª∂a˚
(
√wkey
);

2130 
ªc_cuº
->
	`as£π_c⁄si°ít
();

2134 
	`w_as£π3
(
öfo
.
	`is_fixed
(
k
));

2139 if(
öfo
.
	`ö_hdr
(
k
)) {

2140 if(
obje˘
.
	`hdr_size
(Ë< 
öfo
.
	`off£t
(
k
)+ info.
	`Àngth
(k)) {

2141  
	`RC
(
eBADLENGTH
);

2143 if(
obje˘
.
	`hdr_size
(Ë< 
öfo
.
	`off£t
(
k
)) {

2144  
	`RC
(
eBADSTART
);

2147 if(
obje˘
.
	`body_size
(Ë< 
öfo
.
	`off£t
(
k
)) {

2149 if(
ªc
->
	`body_size
(Ë< 
öfo
.
	`off£t
(
k
)) {

2150  
	`RC
(
eBADSTART
);

2151 } if(
ªc
->
	`body_size
(Ë< 
öfo
.
	`off£t
(
k
Ë+ info.
	`Àngth
(k)) {

2152  
	`RC
(
eBADLENGTH
);

2157 
key_loˇti⁄_t
& 
tmp
 = 
öfo
.
	`gë_loˇti⁄
(
k
);

2159 
key
.
	`c⁄°ru˘
(

2160 
obje˘
, 
tmp
.
_off
,Åmp.
_Àngth
,

2161 
öfo
.
	`ö_hdr
(
k
));

2163 
	`w_as£π3
(
key
.
	`is_vÆid
());

2165 if(
key
.
	`is_ö_obj
()) {

2166 
boﬁ
 
mu°_com∑ª_ö_põ˚s
=
Ál£
;

2172 if(
key
.
	`size
() > 0) {

2173 
	`DBG
(<<"s‹àkey i¿buf„∏poﬁ, sizêi†" << 
key
.
	`size
());

2174 
	`W_DO
(
	`_¥ï¨e_key
(
ªc_cuº
->
	`whﬁe_obje˘_n⁄_c⁄°
(),

2175 
k
, 
Â
,

2176 *
ªc
,

2177 
mu°_com∑ª_ö_põ˚s
, 
key
));

2180 if(
mu°_com∑ª_ö_põ˚s
) {

2181 
_ªcompuã
 = 
åue
;

2182 
ªc_cuº
->
	`m¨k_põ˚s
(
k
);

2184 
	`DBG
(<<"s‹àkey i¿BP, sizêi†" << 
key
.
	`size
());

2186 
	`DBG
(<<"s‹àkey i¿mem, sizêi†" << 
key
.
	`size
());

2194 if(
öfo
.
	`is_f‹_ödex
() ) {

2195 
	`DBG
(<<" is_for_index");

2196 
	`w_as£π3
(
nkeys
 == 1);

2209 c⁄° 
sm_skey_t
& 
s‹tkey
 = 
ªc_cuº
->
	`s‹t_key
(0);

2210 
smsize_t
 
ikeysize
=
s‹tkey
.
	`size
();

2211 
	`DBG
(<<"s‹tkey(0).sizêi†" << 
ikeysize
);

2213 
CSKF
 
Àx_ikey
 = 
öfo
.
	`Àxify_ödex_key
();

2215 if((
ikeysize
 > 0) &&

2217 (
Àx_ikey
 !
s‹t_keys_t
::
noCSKF
)) {

2219 
	`DBG
(<<"Üexify " << 
rid
);

2221 
	`INC_STAT_SORT
(
s‹t_Àxödx_˙t
);

2223 
ªc_cuº
->
	`as£π_c⁄si°ít
();

2226 
skey_t
 
ödexkey
;

2228 
	`ˇŒback_¥ﬁogue
();

2229 
	`W_DO
–(*
Àx_ikey
)(
rid
,

2230 
obje˘
,

2231 
öfo
.
	`Àxify_ödex_key_cookõ
(),

2232 
_s¸©ch_•a˚
,

2233 &
ödexkey
) );

2234 
	`ˇŒback_ïûogue
();

2236 
ªc_cuº
->
	`ödex_key_n⁄_c⁄°
().
	`ª∂a˚
(
ödexkey
);

2237 
ªc_cuº
->
	`as£π_c⁄si°ít
();

2239 
ªc_cuº
->
	`ödex_key_n⁄_c⁄°
().
	`‰ì•a˚
();

2240 
ªc_cuº
->
	`ödex_key_n⁄_c⁄°
().
	`övÆid©e
();

2242 
ªc_cuº
->
	`£t_ikeysize
(
ikeysize
);

2251 if(
öfo
.
	`is_f‹_fûe
(Ë&& 
ªc
->
	`is_œrge
(Ë&& !öfo.
	`dìp_c›y
()) {

2252 
	`DBG
(<<" is_for_file,Üarge, !deep_copy");

2253 * 
buf„r
 = 0;

2254 
smsize_t
 
Àngth
 = 
	`ªc_size
(
ªc
);

2266 
smsize_t
 
√eded
 = 
Àngth
 + (
ª˘ag_t
);

2267 
	`DBG
(<<"gë_bu‡f‹ s‹àkey ordöÆ=" << 
ªc_cuº
->
	`‹döÆ
());

2268 
	`W_DO
(
_s¸©ch_•a˚
.
	`gë_buf
(
√eded
, 
buf„r
));

2269 
	`w_as£π3
(
buf„r
);

2271 
ªc_cuº
->
	`lgmëad©a_n⁄_c⁄°
().
	`c⁄°ru˘
(
buf„r
,

2272 0, 
√eded
, &
_s¸©ch_•a˚
);

2275 
	`mem˝y
(
buf„r
, &
ªc
->
èg
, (
ª˘ag_t
));

2276 
	`mem˝y
(
buf„r
+(
ª˘ag_t
), 
ªc
->
	`body
(), 
Àngth
);

2280 
ªc_cuº
->
	`£t_lgmëasize
(
√eded
);

2281 
	`DBG
(<<"Ügmëasize" << 
√eded
);

2285 
ªc_cuº
->
	`£t_lgmëasize
(0);

2286 
	`DBG
(<<"Ügmetasize= " << 0);

2289 
	`DBG
(<<"ªc_cuº->£t(Â,¶Ÿ), slŸ" << 
¶Ÿ
);

2291 
ªc_cuº
->
	`£t
(
Â
, 
¶Ÿ
);

2292 #i‡
W_DEBUG_LEVEL
 > 2

2293 if(
ªc_cuº
->
	`ödex_key
().
	`is_vÆid
()) {

2294 if(
ªc_cuº
->
	`ödex_key
().
	`size
() > 0) {

2295 if(
ªc_cuº
->
	`ödex_key
().
	`is_ö_obj
(Ë=
Ál£
) {

2296 
	`w_as£π3
(
ªc_cuº
->
	`ödex_key
().
	`±r
(0) != 0);

2303 
ªc_cuº
->
	`as£π_c⁄si°ít
();

2305 
ªc_cuº
++;

2306 
	`DBG
(<<"Ñec_cuº i†now " << 
ªc_cuº
);

2308 #i‡
W_DEBUG_LEVEL
 > 2

2311 
mëa_hódî_t
* 
m

ªc_cuº
 - 1;

2312 
	`DBG
(<<"endÖut: origÑec=" <<

2313 
m
->
	`shrid
(
_ifid
.
°‹e
)

2314 << "Üí(0)=" << 
m
->
	`s‹t_key
(0).
	`size
()

2316 (*)((
m
->
	`s‹t_key
(0).
	`is_ö_obj
())?"true":"false")

2317 << " off£t(0)=" << 
m
->
	`s‹t_key
(0).
	`off£t
()

2318 << "Öõ˚s(0)=" << 
m
->
	`põ˚s
(0)

2320 if–(
m
->
	`lgmëasize
(Ë> 0Ë&& !
öfo
.
	`dìp_c›y
()) {

2321 c⁄° 
ª˘ag_t
 *
ª˘ag
 =(c⁄°Ñe˘ag_à*)(
m
->
	`lgmëad©a
().
	`±r
(0));

2322 
	`w_as£π3
(
ª˘ag
);

2323 
	`w_as£π3
((
ª˘ag
->
Êags
 & 
t_smÆl
) == 0);

2327 
	`DBG
(<<"ídÖut_ª¯Â.pid=" << 
Â
.
	`pid
(Ë<< " slŸ " << 
¶Ÿ
);

2328  
RCOK
;

2329 
	}
}

2333 
	grun_mgr
::
	$¥ﬁogue
()

2336 
ªc_cuº
 = 
ªc_fú°
;

2337 
	`DBG
(<<"Ñec_cuº i†nowÑec_fú°: " << 
ªc_cuº
);

2338 
	}
}

2342 
	grun_mgr
::
	$ïûogue
()

2344 
	`DBG
(<<"run_mgr::epilogue");

2345 
	`_˛ór_mëa_buf„rs
(
Ál£
);

2346 
_s¸©ch_•a˚
.
	`ª£t
();

2348 
	}
}

2350 
è≥_t
*

2351 
	grun_mgr
::
	$_√xt_è≥
()

2353 
	`DBG
(<<"√xt_è≥:Çexàru¿i†" << 
_√xt_run
);

2357 
j
++
_√xt_run
;

2358 
i
=0; i<
_pha£
->
	`‹dî
(); i++) {

2359 
	`DBG
(<<"j = " << 
j
 << ", subåa˘ög " << 
_pha£
->
	`num
(
i
));

2360 
j
 -
_pha£
->
	`num
(
i
);

2361 if(
j
 <= 0) {

2362 
è≥_t
 *
ªsu…
 = &
_è≥s
[
i
];

2363 if(!
ªsu…
->
	`¥imed_f‹_ouçut
()) {

2364 
	`W_COERCE
(
ªsu…
->
	`¥ime_è≥_f‹_ouçut
());

2366 
ªsu…
->
	`_checksd
();

2367 
	`DBG
(<<"FoundÑesu…Å≠ê" << 
i
 << " is fixed " <<

2368 
ªsu…
->
	`mëaÂ
().
	`is_fixed
());

2369  
ªsu…
;

2373 
	`w_as£π3
(
_√xt_run
 =
_pha£
->
	`tŸÆ
());

2374 
	`w_as£π3
(0);

2376 
	}
}

2378 
w_rc_t


2379 
	grun_mgr
::
	$_ouçut_më¨ec
(

2380 
mëa_hódî_t
* 
m
,

2381 
è≥_t
* 
t
,

2382 
rid_t
& 
ªsu…_rid


2385 
	`me
()->
	`gë___më¨ecs
()++;

2386 
t
->
	`öc_cou¡_put
();

2387 
	`FUNC
(
run_mgr
::
_ouçut_më¨ec
);

2388 
w_auto_dñëe_¨øy_t
<> 
autodñtmp
;

2389 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

2391 
	`DBG
(<<"è≥ #" << 
t
->
_è≥_numbî


2392 << "Öage-is-fixed=" << 
t
->
	`mëaÂ
().
	`is_fixed
());

2393 
m
->
	`as£π_c⁄si°ít
();

2395 
	`w_as£π3
(
t
->
	`¥imed_f‹_ouçut
());

2398 
	`DBG
(<<"è≥ #" << 
t
->
_è≥_numbî


2399 << "Öage-is-fixed=" << 
t
->
	`mëaÂ
().
	`is_fixed
());

2402 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*)
m
;

2403 
n⁄_c⁄°
->
	`unm¨shÆ_s‹tkeys
();

2406 
vec_t
 
hdr
, 
d©a
;

2407 
d©a
.
	`ª£t
();

2408 
hdr
.
	`ª£t
().
	`put
(
m
, m->
	`≥rsi°ít_size
());

2438 
boﬁ
 
ˇºy_œrge_obje˘
 = 
Ál£
;

2439 
body_∑πs
=0;

2440 
smsize_t
 
body_Àn
=0;

2441 
k
=0; k < 
	`nkeys
(); k++) {

2442 if–!
m
->
	`põ˚s
(
k
)) {

2447 c⁄° 
sm_skey_t
 &
s‹tkey
 = 
m
->
	`s‹t_key
(
k
);

2448 if(
s‹tkey
.
	`size
() > 0) {

2449 
body_∑πs
++;

2450 
body_Àn
 +
s‹tkey
.
	`size
();

2451 
d©a
.
	`put
(
s‹tkey
.
	`±r
(0), s‹tkey.
	`size
());

2455 
	`DBG
(<<" sort keys fill "

2456 << 
body_∑πs
 << " bodyÖarts "

2457 << 
body_Àn
 << " bytes of body"

2459 if(
öfo
.
	`is_f‹_ödex
()) {

2460 
	`w_as£π3
(
	`nkeys
() == 1);

2461 
	`DBG
(<<"is_f‹_ödex: key sizê" << 
m
->
	`ikeysize
());

2462 if(
m
->
	`ikeysize
() > 0) {

2463 c⁄° 
sm_skey_t
 &
ikey
 = 
m
->
	`ödex_key
();

2464 
body_∑πs
++;

2465 
body_Àn
 +
ikey
.
	`size
();

2467 if(
ikey
.
	`is_ö_œrge_obj
()) {

2469 *
tmp
 = 
√w
 [
ikey
.
	`size
()];

2470 if(!
tmp
) {

2471  
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

2474 
autodñtmp
.
	`£t
(
tmp
);

2475 
vec_t
 
	`v
(
tmp
, 
ikey
.
	`size
());

2476 
	`W_DO
(
ikey
.
	`c›y_out
(
v
));

2477 
d©a
.
	`put
(
v
);

2479 
d©a
.
	`put
(
ikey
.
	`±r
(0), ikey.
	`size
());

2481 
	`DBG
(<<" including index key, "

2482 << 
body_∑πs
 << " bodyÖarts "

2483 << 
body_Àn
 << " bytes of body"

2488 
	`DBG
(<<"is_for_file:Ügmetasize="

2489 << 
m
->
	`lgmëasize
()

2491 << 
m
->
	`lgmëad©a
().
	`size
());

2493 if–(
m
->
	`lgmëasize
(Ë> 0Ë&& !
öfo
.
	`dìp_c›y
()) {

2497 #i‡
W_DEBUG_LEVEL
 > 2

2498 c⁄° 
ª˘ag_t
 *
ª˘ag
 =(c⁄°Ñe˘ag_à*)(
m
->
	`lgmëad©a
().
	`±r
(0));

2499 
	`w_as£π3
((
ª˘ag
->
Êags
 & 
t_smÆl
) == 0);

2500 
	`w_as£π3
((
ª˘ag
->
Êags
 & (
t_œrge_0
|
t_œrge_1
|
t_œrge_2
)) != 0);

2502 
d©a
.
	`put
(
m
->
	`lgmëad©a
().
	`±r
(0), m->lgmëad©a().
	`size
());

2503 
	`w_as£π3
–
m
->
	`lgmëad©a
().
	`size
() > 0);

2504 
body_∑πs
 ++;

2505 
body_Àn
 +
m
->
	`lgmëad©a
().
	`size
();

2508 if(
öfo
.
	`ˇºy_obj
()) {

2509 
sm_obje˘_t
 &
obje˘
 = 
m
->
	`whﬁe_obje˘_n⁄_c⁄°
();

2513 
Õid_t
 
	`™⁄
(
	`ifid
(), 
m
->
	`shpid
());

2514 
rid_t
 
	`rid
(
™⁄
, 
m
->
	`¶Ÿid
());

2515 
UMOF
 
unm¨shÆ
 = 
öfo
.
	`unm¨shÆ_func
();

2516 if(
unm¨shÆ
 !
s‹t_keys_t
::
noUMOF
) {

2518 
sm_obje˘_t
 
√wobje˘
;

2519 
	`ˇŒback_¥ﬁogue
();

2520 
	`W_DO
–(*
unm¨shÆ
)(

2521 
rid
,

2522 
obje˘
,

2523 
öfo
.
	`m¨shÆ_cookõ
(),

2524 &
√wobje˘
) );

2525 
	`w_as£π3
–!
obje˘
.
	`is_ö_buf„r_poﬁ
());

2526 
	`ˇŒback_ïûogue
();

2527 
	`INC_STAT_SORT
(
s‹t_umof_˙t
);

2529 
obje˘
.
	`ª∂a˚
(
√wobje˘
);

2532 if–
obje˘
.
	`hdr_size
()> 0) {

2533 
d©a
.
	`put
(
obje˘
.
	`hdr
(0), obje˘.
	`hdr_size
());

2534 
body_∑πs
++;

2535 
body_Àn
 +
obje˘
.
	`hdr_size
();

2536 
m
->
	`£t_hdrsize
(
obje˘
.
	`hdr_size
());

2538 if(
obje˘
.
	`body_size
() > 0) {

2539 if(
obje˘
.
	`body_size
(Ë> obje˘.
	`c⁄tig_body_size
()) {

2540 
ˇºy_œrge_obje˘
 = 
åue
;

2544 
	`w_as£π3
(
obje˘
.
	`body
(0) != 0 ||

2545 
obje˘
.
	`body_size
() == 0);

2546 if(
obje˘
.
	`body_size
() > 0) {

2547 
d©a
.
	`put
(
obje˘
.
	`body
(0), obje˘.
	`body_size
());

2548 
body_∑πs
++;

2549 
body_Àn
 +
obje˘
.
	`body_size
();

2551 
m
->
	`£t_bodysize
(
obje˘
.
	`body_size
());

2555 
	`DBG
(<<" including whole object, "

2556 << 
body_∑πs
 << " bodyÖarts "

2557 << 
body_Àn
 << " bytes of body"

2564 
t
->
	`_checksd
();

2566 
	`DBG
(<<"è≥ #" << 
t
->
_è≥_numbî


2567 << "Öage-is-fixed=" << 
t
->
	`mëaÂ
().
	`is_fixed
());

2569 
smsize_t
 
size_höt
 = 
hdr
.
	`size
(Ë+ 
d©a
.size();

2570 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
(

2571 
t
->
	`mëaÂ
(),

2572 
size_höt
, 
hdr
, 
d©a
,

2573 *(
t
->
	`sdesc
()), 
ªsu…_rid
) );

2575 
	`DBG
(<<"Cª©edÅm∞(OUTPUT METARECËª¯" << 
ªsu…_rid


2576 << " f‹ origöÆÑec‹d " << 
m
->
	`shrid
(
_ifid
.
°‹e
)

2577 << " hdr.size(Ë=" << 
hdr
.
	`size
()

2578 << " d©a.size(Ë=" << 
d©a
.
	`size
()

2580 << (c⁄° *)(
t
->
	`mëaÂ
().
	`is_fixed
() ? "yes" : "no")

2583 if(
ˇºy_œrge_obje˘
) {

2584 
	`W_FATAL
(
eNOTIMPLEMENTED
);

2586 
	`INC_STAT_SORT
(
s‹t_tmpfûe_˙t
);

2587 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, (
hdr
.
	`size
(Ë+ 
d©a
.size()));

2589  
RCOK
;

2590 
	}
}

2592 
ölöe
 

2593 
check_ª˛i°_f‹_du∂iˇãs
(
mëa_hódî_t
 * 
W_IFDEBUG2
(
l
)[],

2594 
	$W_IFDEBUG2
(
n
))

2596 #i‡
W_DEBUG_LEVEL
 > 1

2598 
i
=0; i < 
n
; i++) {

2599 
mëa_hódî_t
* 
m
=
l
[
i
];

2600 
j
=
i
+1; j < 
n
; j++) {

2601 
	`w_as£π0
(
l
[
j
] !
m
);

2605 
	}
}

2606 
w_rc_t


2607 
	grun_mgr
::
	$Êush_run
(
boﬁ
 
Êush_to_tmpfûe
)

2609 
	`me
()->
	`gë___më¨ecs
()=0;

2610 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

2612 
x˘_t
 *
_vi˘im_ign‹ed
 = 0;

2613 
	`W_DO
(
x˘_log_w¨n_check_t
::
	`check
(
_vi˘im_ign‹ed
));

2616 
√Àmíts
;

2621 
i
=0;

2622 
mëa_hódî_t
* 
m
=
ªc_fú°
;

2623 ; 
m
 < 
ªc_cuº
; m++) {

2624 
ªc_li°
[
i
++] = 
m
;

2626 
√Àmíts
 = 
i
;

2628 
	`w_as£π1
(
√Àmíts
 =(
ªc_cuº
 - 
ªc_fú°
));

2629 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

2630 
	`check_ª˛i°_f‹_du∂iˇãs
(
ªc_li°
, 
√Àmíts
);

2631 
	`DBG
(<<"Êush_ru¿√Àmíts=" << 
√Àmíts


2632 << " flush_to_tmpfûe=" << 
Êush_to_tmpfûe
);

2633 
	`_QuickS‹t
–
ªc_li°
, 
√Àmíts
 );

2634 
	`check_ª˛i°_f‹_du∂iˇãs
(
ªc_li°
, 
√Àmíts
);

2636 if(
Êush_to_tmpfûe
) {

2637 
è≥_t
 *
t
 = 
	`_√xt_è≥
();

2638 
	`DBG
(<<"ÊushÅÿtmpfûê⁄Å≠ê#" << 
t
 - 
_è≥s
);

2651 
fûe_p
 
œ°_∑ge_wrôãn
;

2652 
rid_t
 
rid
;

2653 
boﬁ
 
is_fú°
 = 
åue
;

2654 
w_rc_t
 
rc
;

2656 
i
;

2657 
num_ªcs_ouçut
=0;

2658 
num_ªcs_ñim
=0;

2659 
i
=0; i < 
√Àmíts
; i++) {

2660 
mëa_hódî_t
 *
m
 = 
ªc_li°
[
i
];

2662 if(
m
->
	`is_dup
()) {

2663 if(
öfo
.
	`is_unique
() ||

2664 (
öfo
.
	`nuŒ_unique
(Ë&& 
m
->
	`is_nuŒ
())) {

2665 
num_ªcs_ñim
++;

2666 
	`DBG
(<<"skù: ELIMÉlimö©ög origÑid" << 
m
->
	`shrid
(
_ifid
.
°‹e
));

2667 
	`INC_STAT_SORT
(
s‹t_du∂iˇãs
);

2672 
	`DBG
(<<"****ábouàtÿouçuàmë¨e¯tÿè≥ " << 
t
->
_è≥_numbî


2673 << " wôhÖage-is-fixed=" << 
t
->
	`mëaÂ
().
	`is_fixed
());

2674 
rc
 = 
	`_ouçut_më¨ec
(
m
, 
t
, 
rid
);

2675 if(
rc
.
	`is_îr‹
()) {

2676 
	`DBG
(<<"******************* gotÉrror from output_metarec");

2679 
num_ªcs_ouçut
++;

2681 if(
is_fú°
) {

2683 
	`DBG
(<<" fú°Ñec‹d o‡thi†ru¿i†" << 
rid


2684 << " from ordöÆ " << 
m
->
	`‹döÆ
());

2685 
t
->
	`add_run_fú°
(
rid
.
pid
.
∑ge
,Ñid.
¶Ÿ
);

2686 
is_fú°
 = 
Ál£
;

2689 
i

√Àmíts
-1; i>=0; i--) {

2690 
mëa_hódî_t
 *
m
 = 
ªc_li°
[
i
];

2692 
m
->
	`‰ì•a˚
();

2695 
	`w_as£π0
(
num_ªcs_ouçut
 + 
num_ªcs_ñim
 =
√Àmíts
);

2697 if(
rc
.
	`is_îr‹
()) Ñc;

2699 
	`w_as£π2
(!
is_fú°
);

2704 
	`DBG
(<<"Üa°Ñec‹d o‡thi†ru¿i†" << 
rid
 );

2705 
t
->
	`add_run_œ°
(
rid
.
pid
.
∑ge
,Ñid.
¶Ÿ
);

2706 
t
->
	`ªÀa£_∑ge
—->
	`mëaÂ
());

2708 
	`DBG
(<<"Åhi†run: havêouçuà" << 
	`me
()->
	`gë___më¨ecs
() << " metarecs");

2709  
RCOK
;

2710 
	}
}

2714 
__thªad
 
	gøndx
 = 1;

2721 
	grun_mgr
::
	$_QuickS‹t
(

2722 
mëa_hódî_t
* 
a
[],

2723 
˙t


2726 
	`DBG
(<<"_QuickS‹à" << 
˙t
);

2742 c⁄° 
MAXSTACKDEPTH
 = 30;

2743 c⁄° 
LIMIT
 = 10;

2746 
	sqs_°ack_ôem
 {

2747 
l
, 
r
;

2750 
	`DBG
(<<"√w sèck" << (
qs_°ack_ôem
Ë* 
MAXSTACKDEPTH
);

2751 
qs_°ack_ôem
 *
°ack
 = 
√w
 qs_°ack_ôem[
MAXSTACKDEPTH
];

2752 i‡(!
°ack
) {

2753 
	`DBG
(<<"");

2754 
	`W_FATAL
(
eOUTOFMEMORY
);

2756 
	`ªc‹d_mÆloc
(
MAXSTACKDEPTH
 * (
qs_°ack_ôem
));

2759 
•
 = 0;

2760 
l
, 
r
;

2761 
mëa_hódî_t
* 
tmp
;

2762 
i
, 
j
;

2763 
mëa_hódî_t
* 
pivŸ
;

2764 
pivŸi
;

2766 
l
 = 0, 
r
 = 
˙t
 - 1; ; ) {

2767 i‡(
r
 - 
l
 < 
LIMIT
) {

2768 i‡(
•
-- <= 0) ;

2769 
l
 = 
°ack
[
•
].l, 
r
 = stack[sp].r;

2772 
øndx
 = (randx * 1103515245 + 12345) & 0x7fffffff;

2773 
øndx
 %(
r
-
l
);

2774 
	`DBG
(<<"øndx=" << 
øndx
 << " modulus‘-l)=" << (
r
-
l
));

2776 
pivŸi
 = 
l
+
øndx
;

2777 if(
pivŸi
==
r
)Öivoti--;

2778 if(
pivŸi
==
l
)Öivoti++;

2780 
pivŸ
 = 
a
[
pivŸi
];

2781 
i
 = 
l
, 
j
 = 
r
; i <= j; ) {

2783 (
i
 !
pivŸi
Ë&& (
	`_KeyCmp
(
a
[i], 
pivŸ
) < 0)) i++;

2786 (
pivŸi
 !
j
Ë&& (
	`_KeyCmp
(
pivŸ
, 
a
[j]) < 0)) j--;

2788 i‡(
i
 < 
j
Ë{ 
tmp
=
a
[i];á[i]=a[j];á[j]=tmp; }

2789 i‡(
i
 <
j
) i++, j--;

2792 i‡(
j
 - 
l
 < 
r
 - 
i
) {

2793 i‡(
i
 < 
r
) {

2794 if(
•
 >
MAXSTACKDEPTH
) {

2795 
îr‹
;

2797 
°ack
[
•
].
l
 = 
i
, sèck[•++].
r
 =Ñ;

2799 
r
 = 
j
;

2801 i‡(
l
 < 
j
) {

2802 if(
•
 >
MAXSTACKDEPTH
) {

2803 
îr‹
;

2805 
°ack
[
•
].
l
 =Ü, sèck[•++].
r
 = 
j
;

2807 
l
 = 
i
;

2810 
i
 = 1; i < 
˙t
; 
a
[
j
+1] = 
pivŸ
, i++)

2811 
j
 = 
i
 - 1, 
pivŸ
 = 
a
[i];

2812 
j
 >0 && (
	`_KeyCmp
(
pivŸ
, 
a
[j]) < 0);

2813 
a
[
j
+1] =á[j], j--) ;

2815 
dñëe
 [] 
°ack
;

2816 
	`ªc‹d_‰ì
(
MAXSTACKDEPTH
 * (
qs_°ack_ôem
));

2818 #i‡
W_DEBUG_LEVEL
 > 1

2819 
	`DBG
(<<"_QuickSort verifying");

2820 
i
=0; i < 
˙t
-1; i++) {

2821 
	`w_as£π2
(
	`_KeyCmp
(
a
[
i
],á[i+1]) <= 0);

2823 
	`DBG
(<<"_QuickSort verify DONE");

2827 
îr‹
:

2828 
dñëe
 [] 
°ack
;

2829 
	`ªc‹d_‰ì
(
MAXSTACKDEPTH
 * (
qs_°ack_ôem
));

2831 
˚º
 << "_QuickS‹t: sèckÅoÿsmÆl" <<
ídl
;

2832 
	`DBG
(<<"");

2833 
	`W_FATAL
(
eOUTOFMEMORY
);

2834 
	}
}

2836 
	#PRINT_KEYCMP
 0

	)

2864 ˛as†
	cblob
 : 
public
 
w_ba£_t


2866 
rid_t
 
_rid1
;

2867 c⁄° * 
	m_key1
;

2868 
pö_i
 
	m_p1
;

2869 
	mk
;

2870 
smsize_t
 
	m_œ°1
;

2871 
smsize_t
 
	m_s1
;

2872 
smsize_t
 
	m_ps1
;

2873 
smsize_t
 
	m_∂1
;

2874 
smsize_t
 
	m_Àn1
;

2876 
	m_ßve_pö_cou¡
;

2877 
boﬁ
 
	m_ö_œrge_obje˘
;

2882 
	mpublic
:

2883 
	$blob
(c⁄° 
rid_t
& 
rid
) :

2884 
	`_rid1
(
rid
),

2885 
	`_key1
(0),

2886 
	`k
(-1),

2887 
	`_œ°1
(0), 
	`_s1
(0), 
	`_ps1
(0), 
	`_∂1
(0), 
	`_Àn1
(0), 
	`_ßve_pö_cou¡
(0),

2888 
	$_ö_œrge_obje˘
(
Ál£
)

2892 ~
	$blob
(Ë{ 
_p1
.
	`u≈ö
(); 
	}
}

2894 
smsize_t
 
	$hdr_size
() const {

2895  
_p1
.
	`hdr_size
();

2896 
	}
}

2897 
smsize_t
 
	$body_size
() const {

2898 
	`w_as£π3
(
_p1
.
	`pö√d
());

2899  
_p1
.
	`body_size
();

2900 
	}
}

2901 
¥ime
(c⁄° 
sm_skey_t
 &
key
);

2902 
√xt
(c⁄° *&
key1
, 
smsize_t
& 
l
);

2903 
boﬁ
 
	$m‹e
() {

2904  (
_s1
 < 
_œ°1
)?
åue
:
Ál£
;

2905 
	}
}

2906 
	$c⁄sumed
(
smsize_t
 
l
) {

2907 
_s1
 +
l
;

2908 
_Àn1
 -
l
;

2909 
	}
}

2911 
	g¥iv©e
:

2913 
	$ˇŒback_¥ﬁogue
() const {

2914 #i‡
W_DEBUG_LEVEL
 > 2

2919 *
ßve_pö_cou¡
 = (*)&
_ßve_pö_cou¡
;

2920 *
ßve_pö_cou¡
 = 
	`me
()->
	`pö_cou¡
();

2921 
	`w_as£π3
(
_ßve_pö_cou¡
 == 0);

2922 
	`me
()->
	`check_pö_cou¡
(0);

2923 
	`me
()->
	`ö_sm
(
Ál£
);

2925 
	}
}

2926 
	$ˇŒback_ïûogue
() const {

2927 #i‡
W_DEBUG_LEVEL
 > 2

2931 
	`me
()->
	`check_a˘uÆ_pö_cou¡
(
_ßve_pö_cou¡
);

2932 
	`me
()->
	`ö_sm
(
åue
);

2934 
	}
}

2938 
ölöe
 

2939 
	gblob
::
	$¥ime
(c⁄° 
sm_skey_t
 &
key
)

2941 
_Àn1
 = 
key
.
	`size
();

2943 if(
key
.
	`size
(Ë=key.
	`c⁄tig_Àngth
()Ë
_ö_œrge_obje˘
 = 
Ál£
;

2944 
_ö_œrge_obje˘
 = 
åue
;

2946 
w_rc_t
 
rc
;

2947 if(
_ö_œrge_obje˘
) {

2948 
	`ˇŒback_¥ﬁogue
();

2949 
rc
 = 
_p1
.
	`pö
(
_rid1
, 
key
.
	`off£t
(), 
SH
);

2950 
	`ˇŒback_ïûogue
();

2951 if(
rc
.
	`is_îr‹
()) {

2952 
	`W_FATAL_MSG
(
fcINTERNAL
, << "C™nŸÖö " << 
_rid1


2953 << "áàoff£à" << 
key
.
	`off£t
(Ë<< 
ídl
 << "Ñc=" << 
rc
);

2955 
	`INC_STAT_SORT
(
s‹t_ªc_pös
);

2956 
_œ°1
 = 
_Àn1
 + 
key
.
	`off£t
();

2959 
_s1
 = 
key
.
	`off£t
();

2961 
_key1
 = (c⁄° *)
key
.
	`±r
(0);

2964 
_œ°1
 = 
_Àn1
 + 0;

2965 
_s1
 = 0;

2967 
	}
}

2969 
ölöe
 

2970 
	gblob
::
	$√xt
(c⁄° *&
key1
, 
smsize_t
& 
l
)

2972 
w_rc_t
 
rc
;

2973 #i‡
W_DEBUG_LEVEL
 > 2

2974 if(
_s1
 >
_œ°1
) {

2976 
	`w_as£π3
(0);

2979 if(
_ö_œrge_obje˘
) {

2980 
_ps1
 = 
_s1
 - 
_p1
.
	`°¨t_byã
();

2981 
_∂1
 = 
_p1
.
	`Àngth
(Ë- 
_ps1
;

2982 if(
_∂1
 == 0) {

2984 
boﬁ
 
eof
;

2985 
	`DBG
(<<"GëtögÇexà∑gêo‡ªc‹d " << 
_p1
.
	`rid
());

2986 
	`ˇŒback_¥ﬁogue
();

2987 
rc
 = 
_p1
.
	`√xt_byãs
(
eof
);

2988 
	`ˇŒback_ïûogue
();

2989 if(
rc
.
	`is_îr‹
()) {

2990 
	`W_FATAL_MSG
(
fcINTERNAL
,

2991 << "C™nŸ gëÇext_byã†" << 
_rid1


2992 << 
ídl


2993 << "Ñc" <<
rc
);

2995 
	`INC_STAT_SORT
(
s‹t_ªc_pös
);

2996 
_ps1
 = 
_s1
 - 
_p1
.
	`°¨t_byã
();

2997 
_∂1
 = 
_p1
.
	`Àngth
(Ë- 
_ps1
;

2999 
_∂1
 = (
_Àn1
 < _pl1)? _len1 : _pl1;

3000 
key1
 = 
_p1
.
	`body
(Ë+ 
_ps1
;

3001 
l
 = 
_∂1
;

3003 
	`DBG
–<<"RID:Ñid " << 
_rid1
 );

3004 
	`DBG
–<<" START BYTES: " << 
_s1
);

3005 
	`DBG
–<<" #PINNED BYTESÜe·: " << 
_∂1
 );

3006 
	`DBG
–<<" START BYTES i¿pg: " << 
_ps1
);

3008 
	`DBG
–<<"RID:Ñid " << 
_rid1
 );

3009 
	`DBG
–<<" START BYTES: " << 
_s1
);

3010 
	`DBG
–<<" BYTESÜe·: " << 
_Àn1
);

3011 
key1
 = 
_key1
 + 
_s1
;

3012 
l
 = 
_Àn1
;

3014 
	}
}

3022 
	gè≥_t
::
	$Æloc_runs
(
m
)

3024 
_maxruns
 = 
m
;

3025 
	`DBG
(<<"√w" << (
run_t
Ë* (
_maxruns
));

3026 
_li°
 = 
√w
 
run_t
[
_maxruns
];

3027 
	`ªc‹d_mÆloc
((
run_t
)* 
_maxruns
);

3028 if(!
_li°
Ë{ 
	`DBG
(<<""); 
	`W_FATAL
(
eOUTOFMEMORY
); }

3029 
	}
}

3032 
	gè≥_t
::
	$öô_vid
–
vid_t
 
v
)

3034 
	`DBG
(<<" inô_vid " << 
v
);

3035 #ifde‡
W_TRACE


3036 
_è≥_numbî
 = 
	`GET_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

3038 
	`INC_STAT_SORT
(
s‹t_fûes_¸óãd
);

3039 
_vﬁ
 = 
v
;

3040 
	}
}

3042 
w_rc_t


3043 
	gè≥_t
::
	$_ªwöd
(
boﬁ
 
¸óã_√w
)

3045 
vid_t
 
v
 = 
_vﬁ
;

3046 if(
_°‹e
 != 0) {

3047 
	`DBG
(<<" de°royögÅm∞fûê" << 
	`tmp_fid
());

3048 
	`W_DO
–
SSM
->
	`_de°roy_fûe
(
	`tmp_fid
()));

3051 
_sd
 = 0;

3052 
	`£t_°‹e
(
°id_t
::
nuŒ
);

3053 if(
¸óã_√w
) {

3054  
	`_¸óã_tmpfûe
(
v
);

3056  
RCOK
;

3057 
	}
}

3059 
w_rc_t


3060 
	gè≥_t
::
	$_¸óã_tmpfûe
(
vid_t
 
v
)

3062 
°id_t
 
tmpfid
;

3063 
	`W_DO
–
SSM
->
	`_¸óã_fûe
(
v
, 
tmpfid
, 
t_ãmp‹¨y
) );

3064 
	`DBG
(<<" cª©edÅm∞fûê" << 
tmpfid
);

3065 
	`w_as£π3
(
_sd
 == 0);

3066 
	`W_DO
–
dú
->
	`ac˚ss
(
tmpfid
, 
_sd
, 
NL
) );

3067 
	`£t_°‹e
(
tmpfid
);

3068  
RCOK
;

3069 
	}
}

3071 
w_rc_t


3072 
	gè≥_t
::
	$¥ime_è≥_f‹_ouçut
()

3074 
	`DBG
(<<"PRIME_TAPE_FOR_OUTPUT " << 
_è≥_numbî
 );

3075 
	`w_as£π2
–! 
	`mëaÂ
().
	`is_fixed
());

3076 
	`w_as£π1
(
	`is_em±y
());

3078 
	`˛r_cou¡_put
();

3079 
	`˛r_cou¡_gë
();

3081 
	`ªÀa£_∑ge
(
	`‹igÂ
());

3083 
_fú°_run
 = -1;

3084 
_œ°_run
 = 0;

3086 
	`w_as£π1
(
_maxruns
 > 0);

3092 
	`W_DO
 (
	`_ªwöd
(
åue
));

3094 
	`w_as£π1
(
_°‹e
 != 0);

3095 
	`w_as£π1
(
_sd
 != 0);

3098 
_¥imed_f‹_ouçut
 = 
åue
;

3099 
_¥imed_f‹_öput
 = 
Ál£
;

3100 
	`w_as£π2
–! 
	`mëaÂ
().
	`is_fixed
());

3101 
	`W_IFDEBUG3
(
	`check_è≥_fûe
(
Ál£
));

3102  
RCOK
;

3103 
	}
}

3106 
	gè≥_t
::
	$¥ime_è≥_f‹_öput
()

3108 
	`DBG
(<<"PRIME_TAPE_FOR_INPUT " << *
this
 );

3109 
	`w_as£π3
–! 
	`mëaÂ
().
	`is_fixed
());

3116 if(
_fú°_run
 < 0) _first_run = 0;

3117 
	`W_IFDEBUG3
(
	`check_è≥_fûe
(
Ál£
));

3118 
	`˛r_cou¡_gë
();

3119 
	}
}

3122 
	gè≥_t
::
	$¥ï¨e_è≥_buf„r
(
mëa_hódî_t
 *
m
)

3124 
	`w_as£π3
–! 
	`mëaÂ
().
	`is_fixed
());

3125 
_mëa
 = 
m
;

3126 
	`DBG
(<<"PREPAREÅ≠ê" << 
_è≥_numbî
 << " with meta_header struct");

3127 #i‡
W_DEBUG_LEVEL
 > 2

3128 
m
->
	`as£π_nobuf„rs
();

3130 
	}
}

3156 
w_rc_t


3157 
	gè≥_t
::
	$¥ime_ªc‹d
(

3158 c⁄° 
s‹t_keys_t
 &
öfo
,

3159 
run_mgr
 &
R
,

3160 
Á˘‹y_t
 &
Á˘


3163 
	`DBG
(<<"PRIME_RECORD_FOR_INPUT " << *
this
);

3166 
	`ªÀa£_∑ge
(
	`‹igÂ
());

3168 
	`w_as£π3
(
_mëa
);

3170 
nk
 = 
öfo
.
	`nkeys
();

3173 
rid_t
 
_rid
 = 
	`mëa_rid
();

3174 
	`DBG
(<<"Örime_ªc‹dÑódög i¿mëa_rid(Ë" << 
_rid
);

3175 
Õid_t
 
ﬁd_pid
;

3177 if(
	`mëaÂ
().
	`is_fixed
()) {

3178 
ﬁd_pid
 = 
	`mëaÂ
().
	`pid
();

3181 if(
ﬁd_pid
.
∑ge
 !
_rid
.
pid
.page) {

3182 
	`DBG
(<<"Fixög mëaÂ(ËwôhÖagê" << 
_rid
.
pid
);

3183 
	`W_DO
(
	`mëaÂ
().
	`fix
(
_rid
.
pid
, 
LATCH_SH
));

3184 
	`w_as£π1
(
	`mëaÂ
().
	`èg
(Ë=
∑ge_p
::
t_fûe_p
);

3185 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes_2
);

3193 
k
=0;

3194 
ªc‹d_t
* 
ªc
;

3195 
¶Ÿid_t
 
¶Ÿ
 = 
_rid
.slot;

3197 
	`DBG
(<<"Örime_ªc‹d gëtögÑe¯" << 
	`mëaÂ
().
	`pid
(Ë<< "." << 
¶Ÿ
 );

3198 
	`me
()->
	`gë___më¨ecs_ö
()++;

3200 
	`öc_cou¡_gë
();

3202 
	`W_DO
(
	`mëaÂ
().
	`gë_ªc
(
¶Ÿ
, 
ªc
));

3203 
	`w_as£π3
(
ªc
->
	`hdr_size
(Ë<(
mëa_hódî_t
));

3204 
	`w_as£π3
(
_mëa
); w_as£π3(
ªc
->
	`hdr
());

3205 
	`mem˝y
(
_mëa
, 
ªc
->
	`hdr
(),Ñec->
	`hdr_size
());

3206 
	`w_as£π3
(
ªc
->
	`hdr_size
(Ë=
_mëa
->
	`≥rsi°ít_size
());

3208 
	`DBG
(<<"¥ime_ªc‹d: gŸ mëad©®f‹ ordöÆ=" << 
_mëa
->
	`‹döÆ
());

3210 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3211 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
_mëa
->
	`≥rsi°ít_size
());

3224 
sm_obje˘_t
& 
obje˘
 = 
_mëa
->
	`whﬁe_obje˘_n⁄_c⁄°
();

3236 
smsize_t
 
hódî_Àngth
 = 
_mëa
->
	`hdrsize
();

3237 
smsize_t
 
body_Àngth
 = 
_mëa
->
	`bodysize
();

3238 
smsize_t
 
ch¨s_ªad
 = 0;

3244 *
buf
 = 0;

3245 
smsize_t
 
whﬁe_Àn
 = 
	`Æign
(
hódî_Àngth
Ë+álign(
body_Àngth
);

3249 
Á˘‹y_t
 *
f
 = &
Á˘
;

3250 
boﬁ
 
mu°_Æloc
 = 
åue
;

3251 if(
obje˘
.
	`is_vÆid
(Ë&& !obje˘.
	`is_ö_buf„r_poﬁ
()) {

3252 if((
obje˘
.
	`body_size
(Ë>
	`Æign
(
body_Àngth
))

3253 && (
obje˘
.
	`hdr_size
(Ë>
	`Æign
(
hódî_Àngth
)) )

3256 
mu°_Æloc
 = 
Ál£
;

3259 
obje˘
.
	`‰ì•a˚
();

3262 if(
mu°_Æloc
) {

3263 
	`DBG
(<<"Ælocfun¯f‹ ordöÆ=" << 
_mëa
->
	`‹döÆ
() );

3264 
buf
 = (*)
f
->
	`Ælocfunc
(
whﬁe_Àn
);

3265 if(
buf
==0) {

3266 
f
 = 
Á˘‹y_t
::
˝p_ve˘‹
;

3267 
buf
 = (*)
f
->
	`Ælocfunc
(
whﬁe_Àn
);

3268 if(
buf
==0) {

3269 
	`W_FATAL
(
eOUTOFMEMORY
);

3272 
obje˘
.
	`c⁄°ru˘_‰om_bufs
(

3274 
buf
, 
hódî_Àngth
, 
f
,

3276 
buf
 + 
	`Æign
(
hódî_Àngth
),

3277 
body_Àngth
, 
Á˘‹y_t
::
n⁄e
);

3281 
	`w_as£π3
(
obje˘
.
	`body
(0) != 0);

3282 
	`w_as£π3
(
obje˘
.
	`hdr
(0) != 0);

3287 
smsize_t
 
off£t
 = 0;

3289 
_mëa
->
	`m¨shÆ_s‹tkeys
(
Á˘
);

3298 
	`DBG
(

3299 << 
this


3300 <<" :Ród i¿tm∞ª¯" << 
_rid


3301 << " f‹ origöÆÑec‹d " << 
_mëa
->
	`shpid
()

3302 << "." << 
_mëa
->
	`¶Ÿid
()

3316 
sm_obje˘_t
 
	`mëaobje˘
(
	`mëaÂ
(), 
¶Ÿ
);

3318 
blob
 
	`blob
(
_rid
);

3320 
smsize_t
 
kÀn
 = 0;

3321 
smsize_t
 
off£t_öto_mëaobje˘
 = 
off£t
;

3322 
k
=0; k < 
nk
; k++) {

3323 
sm_skey_t
 
	`Ákekey
(
mëaobje˘
, 
off£t_öto_mëaobje˘
,

3324 
_mëa
->
	`s‹t_key
(
k
).
	`size
(),

3325 
Ál£
 );

3326 
off£t_öto_mëaobje˘
 +
_mëa
->
	`s‹t_key
(
k
).
	`size
();

3332 if(
_mëa
->
	`põ˚s
(
k
)) {

3347 c⁄° 
sm_skey_t
 &
sk
 = 
_mëa
->
	`s‹t_key
(
k
);

3348 
kÀn
 = 
sk
.
	`size
();

3349 
	`DBG
(<<"kÀn=" << 
kÀn
);

3350 
	`w_as£π3
(
ªc
->
	`body_size
(Ë>
	`smsize_t
(
off£t
 + 
kÀn
));

3351 if(
kÀn
 > 0) {

3352 *
buf
 = (*)
sk
.
	`±r
(0);

3353 c⁄° *
whîe
 = 0;

3354 
smsize_t
 
∂1
;

3356 
blob
.
	`¥ime
(
Ákekey
);

3358 
smsize_t
 
kl
 = 
kÀn
;

3360  
blob
.
	`m‹e
(Ë&& 
kl
>0 ) {

3361 
blob
.
	`√xt
(
whîe
, 
∂1
);

3362 
	`w_as£π3
(
buf
); w_as£π3(
whîe
);

3363 if(
∂1
 > 
kl
)Öl1 = kl;

3364 
	`mem˝y
(
buf
, 
whîe
, 
∂1
);

3365 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3366 
buf
 +
∂1
;

3367 
blob
.
	`c⁄sumed
(
∂1
);

3368 
ch¨s_ªad
 +
∂1
;

3369 
kl
 -
∂1
;

3371 
off£t
 +
kÀn
;

3379 if(
öfo
.
	`is_f‹_ödex
()) {

3380 
	`w_as£π3
(! 
öfo
.
	`ˇºy_obj
());

3381 
	`DBG
(<<"ikeysizêi†" << 
_mëa
->
	`ikeysize
());

3382 
sm_skey_t
 &
ik
 = 
_mëa
->
	`ödex_key_n⁄_c⁄°
();

3383 if(
_mëa
->
	`ikeysize
() > 0) {

3388 
smsize_t
 
Àngth
 = 
_mëa
->
	`ikeysize
();

3389 
	`w_as£π3
(
ªc
->
	`body_size
(Ë- 
off£t
 >
Àngth
);

3390 *
buf„r
 = 0;

3391 
Á˘‹y_t
 *
f
 = &
Á˘
;

3392 
	`DBG
(<<"Ælocfun¯f‹ ordöÆ=" << 
_mëa
->
	`‹döÆ
() );

3393 
buf„r
 = (*)
f
->
	`Ælocfunc
(
Àngth
);

3394 if(
buf„r
==0) {

3395 
f
 = 
Á˘‹y_t
::
˝p_ve˘‹
;

3396 
buf„r
 = (*)
f
->
	`Ælocfunc
(
Àngth
);

3397 if(
buf„r
==0) {

3398 
	`W_FATAL
(
eOUTOFMEMORY
);

3401 
	`w_as£π3
(
buf„r
);

3402 
ik
.
	`c⁄°ru˘
((*)
buf„r
, 
	`smsize_t
(0), 
Àngth
, 
f
);

3408 
sm_obje˘_t
 
	`mëaobje˘
(
	`mëaÂ
(), 
¶Ÿ
);

3409 
sm_skey_t
 
	`Ákekey
(
mëaobje˘
, 
off£t
,

3410 
_mëa
->
	`ödex_key
().
	`size
(), 
Ál£
 );

3411 
off£t
 +
_mëa
->
	`ödex_key
().
	`size
();

3414 
blob
 
	`blob
(
_rid
);

3417 
blob
.
	`¥ime
(
Ákekey
);

3418 
	`w_as£π3
(
nk
 == 1);

3420 *
buf
 = (*)
ik
.
	`±r
(0);

3421 c⁄° *
whîe
 = 0;

3422 
smsize_t
 
∂1
;

3424  
blob
.
	`m‹e
(Ë&& 
Àngth
 > 0) {

3425 
blob
.
	`√xt
(
whîe
, 
∂1
);

3426 
	`w_as£π3
(
buf
); w_as£π3(
whîe
);

3427 if(
∂1
 > 
Àngth
)Öl1=length;

3428 
	`mem˝y
(
buf
, 
whîe
, 
∂1
);

3429 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3430 
buf
 +
∂1
;

3431 
blob
.
	`c⁄sumed
(
∂1
);

3432 
ch¨s_ªad
 +
∂1
;

3433 
Àngth
 -
∂1
;

3435 
	`DBG
(<< 
ch¨s_ªad
 << " chars in index key" );

3437 
ik
.
	`‰ì•a˚
();

3438 
ik
.
	`övÆid©e
();

3446 
smsize_t
 
lgmëa_Àngth
 = 
_mëa
->
	`lgmëasize
();

3447 
	`DBG
(<<"lgmëa_Àngth i†" << 
lgmëa_Àngth
);

3448 if(
lgmëa_Àngth
) {

3449 
	`w_as£π3
(! 
öfo
.
	`dìp_c›y
());

3453 *
buf„r
 = 0;

3454 
Á˘‹y_t
 *
f
 = &
Á˘
;

3455 
	`DBG
(<<"Ælocfun¯f‹ ordöÆ=" << 
_mëa
->
	`‹döÆ
() );

3456 
buf„r
 = (*)
f
->
	`Ælocfunc
(
lgmëa_Àngth
);

3457 if(
buf„r
==0) {

3458 
f
 = 
Á˘‹y_t
::
˝p_ve˘‹
;

3459 
buf„r
 = (*)
f
->
	`Ælocfunc
(
lgmëa_Àngth
);

3460 if(
buf„r
==0) {

3461 
	`W_FATAL
(
eOUTOFMEMORY
);

3464 
	`w_as£π3
(
buf„r
);

3465 
_mëa
->
	`lgmëad©a_n⁄_c⁄°
().
	`c⁄°ru˘
(
buf„r
, 0,

3466 
lgmëa_Àngth
, 
f
);

3467 
_mëa
->
	`£t_lgmëasize
(
lgmëa_Àngth
);

3468 
	`DBG
(<<"Örime_ªc‹d:Ügmëasize=" << 
lgmëa_Àngth
);

3474 
sm_obje˘_t
 
	`mëaobje˘
(
	`mëaÂ
(), 
¶Ÿ
);

3475 
sm_skey_t
 
	`Ákekey
(
mëaobje˘
,

3476 
ch¨s_ªad
,

3477 
lgmëa_Àngth
,

3478 
Ál£
 );

3481 
blob
 
	`blob
(
_rid
);

3483 c⁄° *
whîe
 = 0;

3484 c⁄° *
buf
 = 
buf„r
;

3485 
smsize_t
 
∂1
;

3486 
blob
.
	`¥ime
(
Ákekey
);

3487  
blob
.
	`m‹e
()) {

3488 
blob
.
	`√xt
(
whîe
, 
∂1
);

3489 
	`w_as£π3
(
buf
); w_as£π3(
whîe
);

3490 
	`mem˝y
((*)
buf
, 
whîe
, 
∂1
);

3491 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3492 
buf
 +
∂1
;

3493 
blob
.
	`c⁄sumed
(
∂1
);

3494 
ch¨s_ªad
 +
∂1
;

3498 #i‡
W_DEBUG_LEVEL
 > 2

3499 c⁄° 
ª˘ag_t
 *
ª˘ag
 =(c⁄°Ñe˘ag_à*)
buf„r
;

3500 
	`w_as£π3
((
ª˘ag
->
Êags
 & 
t_smÆl
) == 0);

3501 
	`w_as£π3
((
ª˘ag
->
Êags
 & (
t_œrge_0
|
t_œrge_1
|
t_œrge_2
)) != 0);

3506 
_mëa
->
	`£t_lgmëasize
(0);

3509 i‡(
öfo
.
	`ˇºy_obj
()) {

3514 
sm_obje˘_t
 
	`mëaobje˘
(
	`mëaÂ
(), 
¶Ÿ
);

3515 
sm_skey_t
 
	`Ákekey1
(
mëaobje˘
, 
off£t
, 
hódî_Àngth
,

3516 
Ál£
 );

3517 
off£t
 +
hódî_Àngth
;

3519 
sm_skey_t
 
	`Ákekey2
(
mëaobje˘
, 
off£t
, 
body_Àngth
,

3520 
Ál£
 );

3528 
blob
 
	`blob
(
_rid
);

3530 c⁄° *
whîe
 = 0;

3531 c⁄° *
buf
 = (c⁄° *)
obje˘
.
	`hdr
(0);

3536 
	`w_as£π3
(
obje˘
.
	`hdr
(0) != 0);

3537 
smsize_t
 
∂1
;

3538 
blob
.
	`¥ime
(
Ákekey1
);

3539  
blob
.
	`m‹e
() ) {

3540 
blob
.
	`√xt
(
whîe
, 
∂1
);

3541 
	`w_as£π3
(
buf
); w_as£π3(
whîe
);

3542 
	`mem˝y
((*)
buf
, 
whîe
, 
∂1
);

3543 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3544 
buf
 +
∂1
;

3545 
blob
.
	`c⁄sumed
(
∂1
);

3546 
ch¨s_ªad
 +
∂1
;

3550 
buf
 = (c⁄° *)
obje˘
.
	`body
(0);

3551 
	`w_as£π3
(
buf
 != 0);

3553 
blob
.
	`¥ime
(
Ákekey2
);

3554  
blob
.
	`m‹e
()) {

3555 
blob
.
	`√xt
(
whîe
, 
∂1
);

3556 
	`w_as£π3
(
buf
); w_as£π3(
whîe
);

3557 
	`mem˝y
((*)
buf
, 
whîe
, 
∂1
);

3558 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

3559 
buf
 +
∂1
;

3560 
blob
.
	`c⁄sumed
(
∂1
);

3561 
ch¨s_ªad
 +
∂1
;

3567 
	`w_as£π3
(
obje˘
.
	`hdr_size
() == 0);

3568 
	`w_as£π3
(
obje˘
.
	`body_size
() == 0);

3578 
Õid_t
 
	`™⁄
(
R
.
	`ifid
(), 
_mëa
->
	`shpid
());

3579 
rid_t
 
	`rid
(
™⁄
, 
_mëa
->
	`¶Ÿid
());

3580 
MOF
 
m¨shÆ
 = 
öfo
.
	`m¨shÆ_func
();

3581 if(
m¨shÆ
 !
s‹t_keys_t
::
noMOF
) {

3583 
sm_obje˘_t
 
√wobje˘
;

3585 
R
.
	`ˇŒback_¥ﬁogue
();

3586 
	`W_DO
–(*
m¨shÆ
)(
rid
,

3587 
obje˘
,

3588 
öfo
.
	`m¨shÆ_cookõ
(),

3589 &
√wobje˘
) );

3590 
R
.
	`ˇŒback_ïûogue
();

3591 
	`INC_STAT_SORT
(
s‹t_mof_˙t
);

3593 
obje˘
.
	`ª∂a˚
(
√wobje˘
);

3594 } if(
öfo
.
	`ˇºy_obj
(Ë&& !öfo.
	`dìp_c›y
()) {

3598 
	`DBG
(<<" ****************** TODO");

3601 
_¥imed_f‹_öput
 = 
åue
;

3602 
_¥imed_f‹_ouçut
 = 
Ál£
;

3603 
	`W_DO
(
	`_√xt_mëa_rid
());

3605 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
ch¨s_ªad
);

3607 
_mëa
->
	`as£π_c⁄si°ít
();

3609  
RCOK
;

3610 
	}
}

3612 
w_rc_t


3613 
	gè≥_t
::
	$pö_‹ig_ªc
(
fûe_p
& 
ifûe_∑ge
,

3614 
°id_t
 &
ifid
, 
ªc‹d_t
 *&
ªc
, 
rid_t
 &
r
)

3616 
	`w_as£π3
(
	`¥imed_f‹_öput
());

3618 
r
 = 
	`rid_t
(
	`Õid_t
(
ifid
.
vﬁ
, ifid.
°‹e
, 
_mëa
->
	`shpid
()), _mëa->
	`¶Ÿid
());

3619 
	`DBG
(<<"Öin_orig_rec forÑun with meta_rid "

3620 << 
	`mëa_rid
()

3621 << " origöÆÑid = " << 
r


3624 if–! 
ifûe_∑ge
.
	`is_fixed
() ) {

3626 
	`W_DO
(
ifûe_∑ge
.
	`fix
(
r
.
pid
, 
LATCH_SH
));

3627 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes
);

3630 if–
ifûe_∑ge
.
	`pid
(Ë!
r
.
pid
) {

3631 
ifûe_∑ge
.
	`unfix
();

3632 
	`W_DO
(
ifûe_∑ge
.
	`fix
(
r
.
pid
, 
LATCH_SH
));

3633 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes
);

3636 
	`w_as£π1
(
ifûe_∑ge
.
	`èg
(Ë=
∑ge_p
::
t_fûe_p
);

3637 
	`w_as£π3
(
ifûe_∑ge
.
	`pid
(Ë=
r
.
pid
);

3638 
	`w_as£π3
(
ifûe_∑ge
.
	`n¶Ÿs
(Ë> 
r
.
¶Ÿ
);

3639 
	`W_DO
(
ifûe_∑ge
.
	`gë_ªc
(
r
.
¶Ÿ
, 
ªc
));

3640  
RCOK
;

3641 
	}
}

3648 
	grun_mgr
::
	$_KeyCmp
(c⁄° 
mëa_hódî_t
 *
_k1
, c⁄° mëa_hódî_t* 
_k2
) const

3650 
w_rc_t
 
rc
;

3651 if(
_k1
 =
_k2
) {

3652 #ifde‡
PRINT_KEYCMP


3653 
	`DBG
(<<"KEYCMP: self");

3658 
	`INC_STAT_SORT
(
s‹t_keycmp_˙t
);

3660 
	`ˇŒback_¥ﬁogue
();

3662 
∑πül_ªsu…
 = 0;

3663 c⁄° 
mëa_hódî_t
 &
k1
 = *
_k1
;

3664 c⁄° 
mëa_hódî_t
 &
k2
 = *
_k2
;

3666 #ifde‡
PRINT_KEYCMP


3667 
	`DBG
(<<"KEYCMP "

3668 << "Ñid " << 
k1
.
	`shrid
(
_ifid
.
°‹e
)

3670 << "Ñid " << 
k2
.
	`shrid
(
_ifid
.
°‹e
)

3673 
	`w_as£π3
(

3674 (
k1
.
	`shpid
(Ë!
k2
.shpid()Ë|| (k1.
	`¶Ÿid
() != k2.slotid())

3677 
_nkeys
 = 
this
->
	`nkeys
();

3679 
k
=0; k<
_nkeys
; k++ ) {

3680 c⁄° 
sm_skey_t
& 
kd1
 = 
k1
.
	`s‹t_key
(
k
);

3681 c⁄° 
sm_skey_t
& 
kd2
 = 
k2
.
	`s‹t_key
(
k
);

3682 
smsize_t
 
Àn1
 = 
kd1
.
	`size
();

3683 
smsize_t
 
Àn2
 = 
kd2
.
	`size
();

3685 #ifde‡
PRINT_KEYCMP


3686 
	`DBG
(<<"KEYCMP "

3687 << "Üí1 " << 
Àn1


3688 << "Üí2 " << 
Àn2


3691 if(
Àn1
 =0 || 
Àn2
 == 0) {

3695 
∑πül_ªsu…
 = 
Àn1
 - 
Àn2
;

3696 if(
∑πül_ªsu…
 != 0) {

3697 
	`DBG
(<<"∑πül_ªsu… = " << 
∑πül_ªsu…
);

3698 
d⁄e
;

3702 
CF
 
cmp
 = 
this
->
	`_keycmp
(
k
);

3705 
rid_t
 
	`rid1
(
	`Õid_t
(
_ifid
.
vﬁ
, _ifid.
°‹e
,

3706 
k1
.
	`shpid
()), k1.
	`¶Ÿid
());

3707 
rid_t
 
	`rid2
(
	`Õid_t
(
_ifid
.
vﬁ
, _ifid.
°‹e
,

3708 
k2
.
	`shpid
()),k2.
	`¶Ÿid
());

3709 
blob
 
	`b1
(
rid1
);

3710 
blob
 
	`b2
(
rid2
);

3712 c⁄° * 
key1
;

3713 c⁄° * 
key2
;

3714 
smsize_t
 
∂1
;

3715 
smsize_t
 
∂2
;

3717 
b1
.
	`¥ime
(
k1
.
	`s‹t_key
(
k
));

3718 
b2
.
	`¥ime
(
k2
.
	`s‹t_key
(
k
));

3720  
b1
.
	`m‹e
(Ë&& 
b2
.more() ) {

3721 
b1
.
	`√xt
(
key1
, 
∂1
);

3722 
b2
.
	`√xt
(
key2
, 
∂2
);

3723 
smsize_t
 
Àn
 = (
∂1
 < 
∂2
) ?Öl1 :Öl2;

3725 
	`DBG
(<<"*cm∞∑π†o‡À¿" << 
Àn
);

3727 
∑πül_ªsu…
 = (*
cmp
Ë(
Àn
, 
key1
,Üí, 
key2
);

3729 if(
∑πül_ªsu…
 != 0) {

3730 
	`DBG
(<<"∑πül_ªsu… = " << 
∑πül_ªsu…
);

3731 
d⁄e
;

3733 
b1
.
	`c⁄sumed
(
Àn
);

3734 
b2
.
	`c⁄sumed
(
Àn
);

3736 if–
b1
.
	`m‹e
()) {

3738 
∑πül_ªsu…
 = 1;

3739 #ifde‡
PRINT_KEYCMP


3740 
	`DBG
(<<"key1Üonger" );

3742 
d⁄e
;

3743 } i‡(
b2
.
	`m‹e
()) {

3745 
∑πül_ªsu…
 = -1;

3746 #ifde‡
PRINT_KEYCMP


3747 
	`DBG
(<<"key2Üonger" );

3749 
d⁄e
;

3754 if(
∑πül_ªsu…
 == 0) {

3755 #ifde‡
PRINT_KEYCMP


3756 
	`DBG
(<<"DUPLICATE " << 
∑πül_ªsu…
 );

3767 
	`w_as£π3
((
k1
.
	`shpid
(Ë!
k2
.shpid()Ë|| (k1.
	`¶Ÿid
() != k2.slotid()));

3778 
r
 = 0;

3779 
boﬁ
 
s‹t_by_rid
 = 
Ál£
;

3781 if(
this
->
öfo
.
	`is_unique
() ||

3782 (
this
->
öfo
.
	`nuŒ_unique
(Ë&& 
k1
.
	`is_nuŒ
())) {

3783 
s‹t_by_rid
 = 
åue
;

3784 
	`DBG
(<<" unique orÇull_unique");

3785 } if(
öfo
.
	`is_°abÀ
()) {

3786 
r
 = (
k1
.
	`‹döÆ
(Ë> 
k2
.ordinal())? 1 : -1;

3787 
	`DBG
(<<" stable");

3788 } if(
öfo
.
	`is_f‹_ödex
()) {

3789 
	`DBG
(<<" for_index");

3804 
s‹t_by_rid
 = 
åue
;

3809 
	`DBG
(<<" s‹t_by_rid " << 
s‹t_by_rid
);

3811 if(
s‹t_by_rid
) {

3812 
r
 = 
	`umemcmp
(&
k1
.
	`shpid
(), &
k2
.shpid(), (
shpid_t
));

3813 if(
r
==0) {

3814 
	`w_as£π2
(
k1
.
	`¶Ÿid
(Ë!
k2
.slotid());

3815 
r
 = 
	`umemcmp
(&
k1
.
	`¶Ÿid
(), &
k2
.¶Ÿid(), (
¶Ÿid_t
));

3818 
	`DBG
(<<"");

3822 if(
this
->
öfo
.
	`is_unique
() ||

3823 (
this
->
öfo
.
	`nuŒ_unique
(Ë&& 
k1
.
	`is_nuŒ
())) {

3834 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*Ë((
r
 < 0Ë? 
_k2
 : 
_k1
);

3835 
n⁄_c⁄°
->
	`m¨k_dup
();

3837 #ifde‡
PRINT_KEYCMP


3838 
	`DBG
(<<"MARK " << " origÑid" << 
n⁄_c⁄°
->
	`shrid
(
_ifid
.
°‹e
));

3841 
∑πül_ªsu…
 = 
r
;

3842 
	`DBG
(<<"STABLE ovîride,Ö¨tü»ªsu…Çow " << 
∑πül_ªsu…
 );

3845 
d⁄e
:

3846 #ifde‡
PRINT_KEYCMP


3847 
	`DBG
(<<"KEYCMPÑeturning "

3848 << 
∑πül_ªsu…
 << " is_as˚ndög:" << 
öfo
.
	`is_as˚ndög
() );

3851 
	`ˇŒback_ïûogue
();

3853 i‡(
∑πül_ªsu…
 > 0)Öartial_result = 1;

3854 if(
∑πül_ªsu…
 < 0)Öartial_result = -1;

3856 if(
öfo
.
	`is_as˚ndög
()Ë 
∑πül_ªsu…
 ;

3857  (0-
∑πül_ªsu…
);

3858 
	}
}

3864 
w_rc_t


3865 
	grun_mgr
::
	$_¥ï¨e_key
(

3866 
sm_obje˘_t
& 
obje˘
,

3867 
k
,

3868 
fûe_p
 & 
Â
,

3869 c⁄° 
ªc‹d_t
& 
ªc
,

3870 
boﬁ
& 
com∑ª_ö_põ˚s
,

3871 
sm_skey_t
& 
kdesc


3874 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

3885 
smsize_t
 
off£t
 = 
kdesc
.
	`off£t
();

3886 
smsize_t
 
Àngth
 = 
kdesc
.
	`size
();

3887 
boﬁ
 
ö_hdr
 = 
öfo
.
	`ö_hdr
(
k
);

3889 
boﬁ
 
mu°_c›y
 = 
Ál£
;

3890 
boﬁ
 
mu°_mÆloc
 = 
Ál£
;

3891 
boﬁ
 
Æl_⁄_⁄e_∑ge
 = 
åue
;

3893 
com∑ª_ö_põ˚s
 = 
Ál£
;

3895 if(!
ö_hdr
) {

3896 if(
ªc
.
	`is_œrge
()) {

3897 
smsize_t
 
pgoff£t
=0;

3898 
Õid_t
 
pid1
 = 
ªc
.
	`pid_c⁄èöög
(
off£t
, 
pgoff£t
, 
Â
);

3899 
Õid_t
 
pid2
 = 
ªc
.
	`pid_c⁄èöög
(
off£t
+
Àngth
, 
pgoff£t
, 
Â
);

3900 if(
pid1
!=
pid2
) {

3901 
Æl_⁄_⁄e_∑ge
 = 
Ál£
;

3905 i‡(
Æl_⁄_⁄e_∑ge
) {

3906 if–!
öfo
.
	`is_Æig√d
(
k
) ) {

3907 
mu°_c›y
 = 
åue
;

3908 } if(
ªc
.
	`is_smÆl
()) {

3909 
mu°_c›y
 = 
Ál£
;

3911 
mu°_c›y
 = 
åue
;

3912 if(
Àngth
 <
_s¸©ch_•a˚
.
	`À·
()) {

3915 
mu°_mÆloc
 = 
åue
;

3920 
	`w_as£π3
(! 
ªc
.
	`is_smÆl
());

3921 if(
öfo
.
	`is_Àxico
(
k
)) {

3922 
mu°_c›y
 = 
Ál£
;

3923 
com∑ª_ö_põ˚s
 = 
åue
;

3924 
	`w_as£π1
(
öfo
.
	`is_Æig√d
(
k
));

3926 
mu°_c›y
 = 
åue
;

3927 if(
Àngth
 <
_s¸©ch_•a˚
.
	`À·
()) {

3931 
mu°_mÆloc
 = 
åue
;

3935 
	`DBG
(<<"mu°_c›y=" << 
mu°_c›y


3936 << " com∑ª_ö_põ˚s=" << 
com∑ª_ö_põ˚s
);

3938 *
buf„r
 = 0;

3939 
Á˘‹y_t
* 
Á˘
 = fa˘‹y_t::
n⁄e
;

3940 if(
mu°_c›y
) {

3946 if(
mu°_mÆloc
) {

3947 
Á˘
 = 
Á˘‹y_t
::
˝p_ve˘‹
;

3948 
buf„r
 = (*)
Á˘
->
	`Ælocfunc
(
Àngth
);

3950 
Á˘
 = &
_s¸©ch_•a˚
;

3951 
	`W_DO
(
_s¸©ch_•a˚
.
	`gë_buf
(
Àngth
, 
buf„r
));

3954 
vec_t
 
	`de°
(
buf„r
, 
Àngth
);

3955 
	`W_DO
(
obje˘
.
	`c›y_out
(
Ál£
, 
off£t
, 
Àngth
, 
de°
));

3956 
kdesc
.
	`c⁄°ru˘
(
buf„r
, 0, 
Àngth
, 
Á˘
);

3965 
	`w_as£π3
(
kdesc
.
	`is_ö_obj
());

3967 
	`DBG
(<<"Àavê_¥ï¨e_key, keyloc=" << 
	`W_ADDR
(
buf„r
));

3970  
RCOK
;

3971 
	}
}

3973 
w_rc_t


3974 
	grun_mgr
::
	$ouçut_sögÀ_run
(

3975 
fûe_p
* 
Âli°
,

3976 
°id_t
 
ofid
,

3977 
boﬁ
& 
sw≠


3980 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

3986 
fûe_p
* 
Â
;

3988 
	`SET_TSTAT_SORT
(
s‹t_runs
, 1);

3990 
sdesc_t
* 
sd
=0;

3991 
	`W_COERCE
–
dú
->
	`ac˚ss
(
ofid
, 
sd
, 
EX
) );

3993 
vec_t
 
hdr
, 
d©a
;

3994 
fûe_p
 
œ°_∑ge_wrôãn
;

3995 
ªc‹d_t
* 
ªc
;

3996 
mëa_hódî_t
* 
œ°_ªc_wrôãn_key
=0;

3998 
√Àmíts
 = 
ªc_cuº
 - 
ªc_fú°
;

3999 
	`DBG
(<<"ouçuàsögÀÑu¿wôh " << 
√Àmíts
 << " items");

4000 
i
=0; i < 
√Àmíts
; i++) {

4001 
mëa_hódî_t
 *
m
 = 
ªc_li°
[
i
];

4003 
m
->
	`as£π_c⁄si°ít
();

4004 if–(!
m
->
	`is_dup
()Ë&& (
öfo
.
	`is_unique
() ||

4005 (
öfo
.
	`nuŒ_unique
(Ë&& 
m
->
	`is_nuŒ
()))

4011 
j
 = -1;

4012 if(
œ°_ªc_wrôãn_key
 && (œ°_ªc_wrôãn_key->
	`shpid
() != 0)) {

4013 
	`DBG
(<<"keycmp for DUPÉlimination");

4014 
j
 = 
	`_KeyCmp
(
œ°_ªc_wrôãn_key
, 
m
);

4016 if(
j
==0) {

4017 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*Ë
m
;

4018 
n⁄_c⁄°
->
	`m¨k_dup
();

4019 
	`DBG
(<<"MARK " << 
m
->
	`shrid
(
_ifid
.
°‹e
));

4020 
	`w_as£π3
(
m
->
	`is_dup
());

4024 if(
m
->
	`is_dup
()) {

4025 
	`DBG
(<<"ñimö©ög origÑid" << 
m
->
	`shrid
(
_ifid
.
°‹e
));

4026 
	`INC_STAT_SORT
(
s‹t_du∂iˇãs
);

4030 
rid_t
 
	`rid
(
	`Õid_t
(
_ifid
.
vﬁ
, _ifid.
°‹e
, 
m
->
	`shpid
()), m->
	`¶Ÿid
());

4031 
ªc
 = 
	`_ªc_ö_run
(
Âli°
, 
Â
, 
m
);

4033 
	`DBG
(<<"ò" << 
i
 << "/" << 
√Àmíts
 << ": ouçuâögÑid " << 
rid
);

4035 if(
öfo
.
	`is_f‹_ödex
()) {

4036 
	`DBG
(<<"ouçuâögÅÿödex " << 
ofid
 << "Ñid " << 
rid
 );

4037 
	`W_DO
(
	`_ouçut_ödex_ªc
(
ofid
, 
rid
, 
m
, 
ªc
, 
œ°_∑ge_wrôãn
, 
sd
));

4039 
	`w_as£π2
(
Â
->
	`pid
().
∑ge
 =
rid
.
pid
.page);

4040 
	`DBG
(<<"ouçuâögÅÿfûê" << 
ofid
 << "Ñid " << 
rid
 );

4041 
	`W_DO
(
	`_ouçut_pö√d_ªc
(
ofid
, 
rid
, 
ªc
,

4042 *
Â
, 
œ°_∑ge_wrôãn
, 
sd
,

4043 
sw≠
));

4045 
m
->
	`as£π_c⁄si°ít
();

4046 
œ°_ªc_wrôãn_key
 = 
m
;

4048 
	`DBG
(<<"");

4050  
RCOK
;

4051 
	}
}

4058 
w_rc_t


4059 
	grun_mgr
::
_ouçut_ödex_ªc
(

4060 
°id_t
& 
W_IFDEBUG3
(
ofid
),

4061 
rid_t
& 
rid
,

4062 c⁄° 
mëa_hódî_t
* 
m
,

4063 
ªc‹d_t
* ,

4064 
fûe_p
& 
œ°_∑ge_wrôãn
,

4065 
sdesc_t
* 
sd


4068 if(
	g_ab‹ãd
Ë 
RC
(
eABORTED
);

4070 
	gm
->
as£π_c⁄si°ít
();

4072 
w_rc_t
 
	grc
;

4073 
vec_t
 
	ghdr
, 
	gd©a
;

4074 c⁄° 
	gsm_skey_t
& 
	gikey
 = 
m
->
ödex_key
();

4075 * 
	gªsu…
 = 
√w
 [
ikey
.
size
()];;

4083 if(
	gikey
.
is_ö_obj
()) {

4085 
rid_t
 
tm¥id
(

4086 
Õid_t
(
_ifid
.
vﬁ
, _ifid.
°‹e
, 
m
->
shpid
()),

4087 
m
->
¶Ÿid
());

4088 
blob
 
b1
(
tm¥id
);

4089 c⁄° * 
	gkey1
;

4090 * 
	gr
 = 
ªsu…
;

4091 
smsize_t
 
	g∂1
;

4093 
	gb1
.
¥ime
(
m
->
ödex_key
());

4097 
w_as£π3
(
ikey
.
size
(Ë<
ss_m
::
∑ge_sz
);

4099  
	gb1
.
m‹e
()) {

4100 
	gb1
.
√xt
(
key1
, 
∂1
);

4101 
DBG
(<<"key=" << 0 << "Öl1=" << 
∂1
);

4102 
mem˝y
((*)
r
, 
key1
, 
∂1
);

4103 
	gr
 +
∂1
;

4104 
	gb1
.
c⁄sumed
(
∂1
);

4106 
w_as£π3
(
smsize_t
(
r
-
ªsu…
Ë=
ikey
.
size
());

4107 
	ghdr
.
put
(
ªsu…
, 
ikey
.
size
());

4109 
	ghdr
.
put
(
ikey
.
±r
(0), ikey.
size
());

4113 if(!
	grc
.
is_îr‹
()) {

4117 
	gd©a
.
ª£t
().
put
(&
rid
, (rid));

4119 
rid_t
 
	g√wrid
;

4120 
smsize_t
 
	gsize_höt
 = 
hdr
.
size
(Ë+ 
d©a
.size();

4121 
w_as£π3
(
ofid
 =
sd
->
°id
());

4122 
	grc
 = 
fi
->
¸óã_ªc_©_íd
–
œ°_∑ge_wrôãn
,

4123 
size_höt
, 
hdr
, 
d©a
, *
sd
, 
√wrid
);

4124 if(
	grc
.
is_îr‹
(Ë&&Ñc.
îr_num
(Ë=
eRECWONTFIT
) {

4125 
RC_PUSH
(
rc
, 
eBADKEY
);

4127 if(!
	grc
.
is_îr‹
()) {

4128 
DBG
(<<"Cª©edÑe¯OUTPUT INDEX " << 
√wrid


4129 << " hdr_sizê" << 
hdr
.
size
()

4130 << " body_sizê" << 
d©a
.
size
()

4132 
INC_STAT_SORT
(
s‹t_ªcs_¸óãd
);

4133 
ADD_TSTAT_SORT
(
s‹t_ªc_byãs
, 
size_höt
);

4136 
	gdñëe
[] 
	gªsu…
;

4137  
	grc
;

4143 
w_rc_t


4144 
	grun_mgr
::
_ouçut_pö√d_ªc
(

4145 
°id_t
& 
W_IFDEBUG3
(
ofid
),

4146 
rid_t
& ,

4147 
ªc‹d_t
* 
ªc
,

4148 
fûe_p
& 
‹ig_ªc_∑ge
,

4149 
fûe_p
& 
œ°_∑ge_wrôãn
,

4150 
sdesc_t
* 
sd
,

4151 
boﬁ
& 
sw≠


4154 if(
	g_ab‹ãd
Ë 
RC
(
eABORTED
);

4156 #ifde‡
W_TRACE


4157 if(!
	gªc
->
is_smÆl
()) {

4158 
DBG
(<<"ªc->èg.Êags=" << 
ªc
->
èg
.
Êags
);

4159 
smsize_t
 
	g°¨t
;

4160 
Õid_t
 
	gtmp
 = 
ªc
->
pid_c⁄èöög
(0, 
°¨t
,

4161 
‹ig_ªc_∑ge
);

4162 
DBG
(<<"fú°Öagêo‡‹ig obje˘ =" << 
tmp
);

4166 
vec_t
 
	ghdr
, 
	gd©a
;

4168 
	ghdr
.
put
(
ªc
->
hdr
(),Ñec->
hdr_size
());

4170 
smsize_t
 
	gª˛í
;

4171 
smsize_t
 
	gsize_höt
 = 
hdr
.
size
();

4172 if–
	gªc
->
	gèg
.
	gÊags
 & 
	gt_smÆl
 || !
	göfo
.
dìp_c›y
() ) {

4176 
	gª˛í
 = 
ªc_size
(
ªc
);

4179 
	gd©a
.
put
(
ªc
->
body
(), 
ª˛í
);

4180 
	gsize_höt
 +
d©a
.
size
();

4182 
	gª˛í
 = 
smsize_t
(
ªc
->
body_size
());

4183 
	gsize_höt
 +
ª˛í
;

4186 
rid_t
 
	g√wrid
;

4187 
w_as£π3
(
ofid
 =
sd
->
°id
());

4188 
W_DO
 ( 
fi
->
¸óã_ªc_©_íd
–
œ°_∑ge_wrôãn
,

4189 
size_höt
, 
hdr
, 
d©a
, *
sd
, 
√wrid
) );

4191 
DBG
(<<"Cª©ed OUTPUT PINNEDÑe¯" << 
√wrid


4192 << " hdr_sizê" << 
hdr
.
size
()

4193 << " body_sizê" << 
d©a
.
size
()

4195 
INC_STAT_SORT
(
s‹t_ªcs_¸óãd
);

4196 
ADD_TSTAT_SORT
(
s‹t_ªc_byãs
, 
size_höt
);

4198 if–!(
	gªc
->
	gèg
.
	gÊags
 & 
	gt_smÆl
)) {

4199 if(
	göfo
.
dìp_c›y
()) {

4206 
lgd©a_p
 
	glg
;

4207 
smsize_t
 
	goff£t
 = 0; off£à< 
	gª˛í
;) {

4213 
smsize_t
 
	g°¨t_byã
=0;

4214 
Õid_t
 
	glgpid
 = 
ªc
->
pid_c⁄èöög
(
off£t
, 
°¨t_byã
,

4215 
‹ig_ªc_∑ge
);

4216 
w_as£π3
(
°¨t_byã
 =
off£t
);

4217 
W_DO
(
lg
.
fix
(
lgpid
, 
LATCH_SH
));

4218 
	gd©a
.
ª£t
().
put
(
lg
.
tu∂e_addr
(0),Üg.
tu∂e_size
(0));

4219 
W_DO
(
fi
->
≠≥nd_ªc
(
√wrid
, 
d©a
, *
sd
));

4220 
	goff£t
 +
lg
.
tu∂e_size
(0);

4221 
	glg
.
unfix
();

4225 
DBG
(<<"shÆlow c›yÅÿ" << 
√wrid
 << "ÑealÜen="

4226 << 
ªc
->
èg
.
body_Àn
 << " slŸãdÖagê∑πÜí=" << 
d©a
.
size
());

4229 
W_DO
–
fi
->
upd©e_ª˘ag
(
√wrid
,

4230 
ªc
->
èg
.
body_Àn
,Ñec->èg.
Êags
) );

4232 #ifde‡
W_TRACE


4234 
ªc‹d_t
 *
	gªc
;

4235 
boﬁ
 
	gdidfix
=
Ál£
;

4236 if(! 
	gœ°_∑ge_wrôãn
.
is_fixed
()) {

4237 
W_DO
(
œ°_∑ge_wrôãn
.
fix
(
√wrid
.
pid
, 
LATCH_SH
));

4238 
	gdidfix
=
åue
;

4240 
W_DO
(
œ°_∑ge_wrôãn
.
gë_ªc
(
√wrid
.
¶Ÿ
, 
ªc
));

4241 if(
	gªc
->
is_smÆl
()) {

4242 
DBG
(<<"new obj is small");

4244 
smsize_t
 
	g°¨t
;

4245 
Õid_t
 
	gtmp
 = 
ªc
->
pid_c⁄èöög
(0, 
°¨t
,

4246 
œ°_∑ge_wrôãn
);

4247 
DBG
(<<"fú°Öagêo‡√w obj =" << 
tmp
);

4249 if(
	gdidfix
Ë
	gœ°_∑ge_wrôãn
.
unfix
();

4252 
	gsw≠
 = 
åue
;

4255  
	gRCOK
;

4262 
w_rc_t


4263 
	grun_mgr
::
_ouçut_ªc
(

4264 
°id_t
& 
W_IFDEBUG3
(
ofid
),

4265 
mëa_hódî_t
 *
m
,

4266 
fûe_p
& 
œ°_∑ge_wrôãn
,

4267 
sdesc_t
* 
sd
,

4268 
boﬁ
& 
sw≠


4271 if(
	g_ab‹ãd
Ë 
RC
(
eABORTED
);

4272 
	gm
->
as£π_c⁄si°ít
();

4274 
	gsm_obje˘_t
& 
	gobje˘
 = 
m
->
whﬁe_obje˘_n⁄_c⁄°
();

4275 c⁄° 
vec_t
 
hdr
(
obje˘
.hdr(0), obje˘.
hdr_size
());

4276 
vec_t
 
	gd©a
;

4278 
smsize_t
 
	gª˛í
;

4279 
smsize_t
 
	gsize_höt
 = 
hdr
.
size
();

4282 
boﬁ
 
	gis_œrge
 = (
m
->
lgmëad©a
().
size
(Ë> 0)?
åue
:
Ál£
;

4283 
boﬁ
 
	gmu°_do_dìp_c›y
 = 
Ál£
;

4285 c⁄° 
ª˘ag_t
* 
	gª˘ag
 = 0;

4286 if–
	gis_œrge
 && !
	göfo
.
dìp_c›y
() ) {

4290 
	gª˛í
 = 
m
->
lgmëasize
();

4291 c⁄° *
	gc
 = (c⁄° *)
m
->
lgmëad©a
().
±r
(0);

4292 
	gª˘ag
 =(c⁄° 
ª˘ag_t
 *)
c
;

4293 
w_as£π3
((
ª˘ag
->
Êags
 & 
t_smÆl
) == 0);

4294 
w_as£π3
((
ª˘ag
->
Êags
 & (
t_œrge_0
|
t_œrge_1
|
t_œrge_2
)) != 0);

4295 
	gc
 +(
ª˘ag_t
);

4296 
	gª˛í
 -(
ª˘ag_t
);

4297 
	gd©a
.
put
(
c
, 
ª˛í
);

4298 
	gsize_höt
 +
d©a
.
size
();

4300 if(
	gobje˘
.
body_size
(Ë> obje˘.
c⁄tig_body_size
()) {

4301 
	gmu°_do_dìp_c›y
 = 
åue
;

4304 
w_as£π3
(
obje˘
.
body
(0) != 0 ||

4305 
obje˘
.
body_size
() == 0);

4306 if(
	gobje˘
.
body_size
() > 0) {

4307 
	gd©a
.
put
(
obje˘
.
body
(0), obje˘.
body_size
());

4310 
	gsize_höt
 +
obje˘
.
body_size
();

4313 
rid_t
 
	g√wrid
;

4314 
w_as£π3
(
ofid
 =
sd
->
°id
());

4316 
W_DO
 ( 
fi
->
¸óã_ªc_©_íd
–
œ°_∑ge_wrôãn
,

4317 
size_höt
, 
hdr
, 
d©a
, *
sd
, 
√wrid
) );

4319 
DBG
(<<"Cª©ed OUTPUT REC " << 
√wrid


4320 << " hdr_sizê" << 
hdr
.
size
()

4321 << " body_sizê" << 
d©a
.
size
()

4323 
INC_STAT_SORT
(
s‹t_ªcs_¸óãd
);

4324 
ADD_TSTAT_SORT
(
s‹t_ªc_byãs
, 
size_höt
);

4326 if–
	gis_œrge
) {

4327 
w_as£π3
(
ª˘ag
!=0);

4328 if(! 
	göfo
.
dìp_c›y
()) {

4333 
W_DO
–
fi
->
upd©e_ª˘ag
(
√wrid
, 
ª˘ag
->
body_Àn
,Ñe˘ag->
Êags
) );

4335 #ifde‡
W_TRACE


4337 
ªc‹d_t
 *
	gªc
;

4338 
boﬁ
 
	gdidfix
=
Ál£
;

4339 if(! 
	gœ°_∑ge_wrôãn
.
is_fixed
()) {

4340 
W_DO
(
œ°_∑ge_wrôãn
.
fix
(
√wrid
.
pid
, 
LATCH_SH
));

4341 
	gdidfix
=
åue
;

4343 
W_DO
(
œ°_∑ge_wrôãn
.
gë_ªc
(
√wrid
.
¶Ÿ
, 
ªc
));

4344 if(!
	gis_œrge
) {

4345 
DBG
(<<"new obj is small");

4347 
smsize_t
 
	g°¨t
;

4348 
Õid_t
 
	gtmp
 = 
ªc
->
pid_c⁄èöög
(0, 
°¨t
,

4349 
œ°_∑ge_wrôãn
);

4350 
DBG
(<<"fú°Öagêo‡√w obj =" << 
tmp
);

4352 if(
	gdidfix
Ë
	gœ°_∑ge_wrôãn
.
unfix
();

4355 
	gsw≠
 = 
åue
;

4358 if(
	gmu°_do_dìp_c›y
) {

4359  
RC
(
eNOTIMPLEMENTED
);

4361  
	gRCOK
;

4366 
rc_t


4367 
	gss_m
::
	$s‹t_fûe
(

4368 c⁄° 
°id_t
& 
fid
,

4369 c⁄° 
°id_t
& 
s‹ãd_fid
,

4372 
nvids
,

4373 c⁄° 
vid_t
* 
vid
,

4374 
s‹t_keys_t
& 
kl
,

4375 
smsize_t
 
mö_ªc_sz
,

4376 
run_size
,

4377 
tmp_•a˚


4380 
	`SM_PROLOGUE_RC
(
ss_m
::
s‹t_fûe
, 
ö_x˘
, 
ªad_wrôe
, 0);

4382 
w_rc_t
 
rc
 =

4383 
	`_s‹t_fûe
(
fid
, 
s‹ãd_fid
, 
nvids
, 
vid
,

4384 
kl
, 
mö_ªc_sz
, 
run_size
,

4385 
tmp_•a˚


4388 
	`DBG
(<<"Ñëu∫ög from s‹t_fûê" << 
rc
);

4389  
rc
;

4390 
	}
}

4399 
ªc‹d_t
 *

4400 
	grun_mgr
::
	$_ªc_ö_run
(

4401 
fûe_p
* 
Â
,

4402 
fûe_p
*& 
Âout
,

4403 
mëa_hódî_t
* 
m


4406 
ªc‹d_t
 *
ªc
;

4408 
i
=0; i<
_M
; i++) {

4409 
	`DBG
(<<"_ªc_ö_ru¿lookögáài=" << 
i


4410 << "Öagê" << 
Â
[
i
].
	`pid
().
∑ge


4411 << "Öagêha†" << 
Â
[
i
].
	`n¶Ÿs
()

4414 if(
Â
[
i
].
	`pid
().
∑ge
 =
m
->
	`shpid
()) {

4415 
	`w_as£π3
(
Â
[
i
].
	`n¶Ÿs
(Ë> 
m
->
	`¶Ÿid
());

4416 
	`DBG
(<<"Öagê" << 
Â
[
i
].
	`pid
()

4417 << " slŸ " << 
m
->
	`¶Ÿid
());

4418 
w_rc_t
 
rc
 = 
Â
[
i
].
	`gë_ªc
(
m
->
	`¶Ÿid
(), 
ªc
);

4419 if(
rc
.
	`is_îr‹
()) {

4420 
	`W_COERCE
(
rc
);

4422 
Âout
 = &
Â
[
i
];

4423  
ªc
;

4426 
	`W_FATAL
(
eINTERNAL
);

4428 
	}
}

4431 
rc_t


4432 
	gss_m
::
	$_s‹t_fûe
(

4433 c⁄° 
°id_t
& 
ifid
,

4434 c⁄° 
°id_t
& 
ofid
,

4437 
nvids
,

4438 c⁄° 
vid_t
* 
vids
,

4439 
s‹t_keys_t
& 
öfo1
,

4440 
smsize_t
 
mö_ªc_sz
,

4441 
run_size
,

4444 
s¸©ch_mem


4448 
mëa_hódî_t
::
	`˛r_‹döÆ
();

4450 
	`FUNC
(
_s‹t_fûe
);

4473 
nkeys
 = 
öfo1
.
	`nkeys
();

4478 if(
öfo1
.
	`is_f‹_ödex
()) {

4479 if(
öfo1
.
	`nkeys
() > 1) {

4481 
	`DBG
(<<"");

4482  
	`RC
(
eBADARGUMENT
);

4484 if(
öfo1
.
	`is_°abÀ
()) {

4487 
	`DBG
(<<"");

4488  
	`RC
(
eBADARGUMENT
);

4493 if(
öfo1
.
	`dìp_c›y
()) {

4494 
	`DBG
(<<"");

4495  
	`RC
(
eBADARGUMENT
);

4499 if(!
öfo1
.
	`kìp_‹ig
()) {

4500 
	`DBG
(<<"");

4501  
	`RC
(
eBADARGUMENT
);

4509 if(
öfo1
.
	`Àxify_ödex_key
()=
s‹t_keys_t
::
noCSKF
) {

4515 if(
öfo1
.
	`is_°abÀ
()) {

4516 if(
öfo1
.
	`is_f‹_ödex
()) {

4519 
	`DBG
(<<"");

4520  
	`RC
(
eBADARGUMENT
);

4523 if(
ofid
 =
ifid
) {

4524 
	`DBG
(<<"");

4525  
	`RC
(
eBADARGUMENT
);

4527 
k
=0; k<
nkeys
; k++) {

4528 if(! 
öfo1
.
	`is_fixed
(
k
)) {

4530 if–(!
öfo1
.
	`key¸óã
(
k
)) ||

4531 (
öfo1
.
	`key¸óã
(
k
Ë=
s‹t_keys_t
::
noCSKF
)) {

4532 
	`DBG
(<<"");

4533  
	`RC
(
eBADARGUMENT
);

4537 if(
öfo1
.
	`key¸óã
(
k
) &&

4538 (
öfo1
.
	`key¸óã
(
k
Ë!
s‹t_keys_t
::
noCSKF
)) {

4543  
	`RC
(
eBADARGUMENT
);

4570 if(
öfo1
.
	`is_Àxico
(
k
)) {

4571 if(! 
öfo1
.
	`is_Æig√d
(
k
) ) {

4572 
	`DBG
(<<"");

4573  
	`RC
(
eBADARGUMENT
);

4588 if(!
öfo1
.
	`keycmp
(
k
)) {

4589 
	`DBG
(<<"");

4590  
	`RC
(
eBADARGUMENT
);

4592 
smsize_t
 
Àn
=0;

4593 if–(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
öt8_cmp
) ||

4594 (
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
uöt8_cmp
)) {

4595 
Àn
 = (
w_ba£_t
::
öt8_t
);

4596 } if–(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
öt4_cmp
) ||

4597 (
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
uöt4_cmp
)) {

4598 
Àn
 = (
w_ba£_t
::
öt4_t
);

4599 } if–(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
öt2_cmp
) ||

4600 (
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
uöt2_cmp
)) {

4601 
Àn
 = (
w_ba£_t
::
öt2_t
);

4602 } if–(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
öt1_cmp
) ||

4603 (
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
uöt1_cmp
)) {

4604 
Àn
 = (
w_ba£_t
::
öt1_t
);

4605 } i‡(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
f8_cmp
) {

4606 
Àn
 = (
w_ba£_t
::
f8_t
);

4607 } i‡(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
f4_cmp
) {

4608 
Àn
 = (
w_ba£_t
::
f4_t
);

4609 } if(
öfo1
.
	`keycmp
(
k
Ë=
s‹t_keys_t
::
°rög_cmp
) {

4613 if(! 
öfo1
.
	`is_Àxico
(
k
)) {

4614 
	`DBG
(<<"");

4617  
	`RC
(
eBADARGUMENT
);

4621 if(
Àn
 && 
öfo1
.
	`is_fixed
(
k
Ë&& (öfo1.
	`Àngth
(k) !=Üen)) {

4622 
	`DBG
(<<"");

4623  
	`RC
(
eBADARGUMENT
);

4630 
boﬁ
 
sw≠_œrge_obje˘_°‹e
 = 
Ál£
;

4634 
boﬁ
 
⁄˚
=
Ál£
;

4636 if(
nvids
 <= 0) {

4637 
	`DBG
(<<"");

4638  
	`RC
(
eBADARGUMENT
);

4641 
	`DBG
(<<"run_size" << 
run_size
);

4643 
M
;

4644 
NRUNS
;

4645 
NTAPES
=0;

4649 
ba£_°©_t
 
pcou¡
=0;

4650 
ba£_°©_t
 
œrgïcou¡
=0;

4658 
SmFûeMëaSèts
 
fûe_°©s
;

4659 
fûe_°©s
.
smÆlSnum
 = 
ifid
.
°‹e
;

4661 
	`W_DO
(
io
->
	`gë_fûe_mëa_°©s
(
ifid
.
vﬁ
, 1, &
fûe_°©s
));

4662 
pcou¡
 = 
fûe_°©s
.
smÆl
.
numAŒocPages
;

4663 
œrgïcou¡
 = 
fûe_°©s
.
œrge
.
numAŒocPages
;

4666 if(
œrgïcou¡
>0) {

4667 
run_size
--;

4672 
	`DBG
(<<"run_size" << 
run_size
);

4674 
M
 = 
run_size
 - 1;

4676 
⁄˚
 = ((
pcou¡
)<=
M
);

4677 
	`DBG
(<<"M" << 
M
);

4678 i‡(
⁄˚
) {

4679 
	`DBG
(<<"ONCE! Fits in oneÑun");

4680 if(
M
 < 1) {

4682 
	`DBG
(<<"");

4683  
	`RC
(
eINSUFFICIENTMEM
);

4685 if(
M
 > (
pcou¡
)) {

4686 
M
 = (
pcou¡
);

4687 
	`DBG
(<<"M" << 
M
);

4689 
nvids
 = 0;

4690 } if(
M
 < 2) {

4692 
	`DBG
(<<"NOT ONCE! NeedsátÜeast 2-way merge");

4693  
	`RC
(
eINSUFFICIENTMEM
);

4697 
NRUNS
 = (
pcou¡
Ë/ 
M
;

4699 
	`DBG
(<<"Öcou¡=" << 
pcou¡


4700 <<" M=" << 
M


4701 <<" NRUNS=" << 
NRUNS


4704 if–(
NRUNS
 * 
M
Ë< (
pcou¡
)) {

4705 
NRUNS
++;

4706 
	`DBG
(<<"NRUNS" << 
NRUNS
);

4709 if(!
⁄˚
) {

4718 
NTAPES
 = 
run_size
;

4721 
	`SET_TSTAT_SORT
(
s‹t_run_size
, 
M
);

4726 
s
 = 
s¸©ch_mem
 / 
ss_m
::
∑ge_sz
;

4727 
s
 *
ss_m
::
∑ge_sz
;

4728 if(
s
 < 
s¸©ch_mem
Ës+
ss_m
::
∑ge_sz
;

4729 
s¸©ch_mem
 = 
s
;

4731 
limôed_•a˚
 
	`s¸©ch_•a˚
(
s¸©ch_mem
);

4732 
	`DBG
(<<"s¸©ch_•a˚ " << 
s¸©ch_mem
 << " bytes");

4741 
è≥_t
 * 
è≥s
 =0;

4742 if(
NTAPES
 > 0) {

4743 
	`DBG
(<<"√wÅ≠e_t[" << 
NTAPES
 << "]Åake†" << (
è≥_t
) * NTAPES

4746 
è≥s
 = 
√w
 
è≥_t
[
NTAPES
];

4747 if(!
è≥s
) {

4748 
	`DBG
(<<"");

4749 
	`W_FATAL
(
eOUTOFMEMORY
);

4751 
	`ªc‹d_mÆloc
(
NTAPES
 * 
è≥s
[0].
	`size_ö_byãs
());

4753 
v
 = 0;

4754 
j
=0; j<
NTAPES
; j++) {

4755 
v
 = 
j
 % 
nvids
;

4756 
è≥s
[
j
].
	`öô_vid
(
vids
[
v
]);

4758 
	`DBG
(<<"√w" << 
NTAPES
 * (
è≥_t
));

4762 
w_rc_t
 
rc
;

4763 
run_mgr
 
	`run
(

4764 
s¸©ch_•a˚
,

4765 
ifid
,

4766 
M
,

4767 
NRUNS
,

4768 
NTAPES
,

4769 
è≥s
,

4770 
mö_ªc_sz
,

4771 
öfo1
,

4772 
rc
);

4773 if(
rc
.
	`is_îr‹
()ËÑc.
	`ª£t
();

4781 
lgd©a_p
 
lg∑ge
;

4784 
	`DBG
(<<"√w fûe_p†u£ " << 
M
 << "Öages");

4785 
fûe_p
* 
Â
 = 
√w
 fûe_p[
M
];

4786 if(!
Â
) {

4787 
	`DBG
(<<"");

4788 
	`W_FATAL
(
eOUTOFMEMORY
);

4790 
	`ªc‹d_mÆloc
(
M
 * (
fûe_p
));

4791 
w_auto_dñëe_¨øy_t
<
fûe_p
> 
	`auto_dñ_Â
(
Â
);

4794 
Õid_t
 
pid
, 
fú°_pid
;

4795 
	`W_DO
–
fi
->
	`fú°_∑ge
(
ifid
, 
pid
, 
NULL
 ) );

4796 
fú°_pid
 = 
pid
;

4797 
run_numbî
 = 0;

4799 
	`DBG
(<<"fú°Öagêi†" << 
pid
);

4801 
boﬁ
 
eof
;

4802 
numªc‹ds
=0;

4803 
eof
 = 
Ál£
; !Éof; ) {

4804 
	`DBG
(<<"{ÑunÖrologue");

4805 
run
.
	`¥ﬁogue
();

4806 
numñemíts
=0;

4807 
i
=0; i<
M
 && !
eof
; i++) {

4809 
x˘_t
 *
_vi˘im_ign‹ed
 = 0;

4810 
	`W_DO
(
x˘_log_w¨n_check_t
::
	`check
(
_vi˘im_ign‹ed
));

4813 
	`W_DO
–
Â
[
i
].
	`fix
(
pid
, 
LATCH_SH
) );

4814 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes
);

4815 
	`DBG
(<<"∑gê" << 
pid
 << " contains "

4816 << 
Â
[
i
].
	`n¶Ÿs
() << " slots (maybeÇotáll full)" );

4817 #i‡
W_DEBUG_LEVEL
 > 1

4818 { 
k
=0;

4819 
¶Ÿid_t
 
j
 = 
Â
[
i
].
	`√xt_¶Ÿ
(0);

4820 
j
;

4821 
j
 = 
Â
[
i
].
	`√xt_¶Ÿ
(j)Ë
k
++;

4822 
	`DBG
(<<"∑gê" << 
pid
 << " contains "

4823 << 
k
 << " full slots" );

4830 
¶Ÿid_t
 
j
 = 
Â
[
i
].
	`√xt_¶Ÿ
(0);

4831 
j
;

4832 
j
 = 
Â
[
i
].
	`√xt_¶Ÿ
(j)) {

4838 
	`W_DO
(
run
.
	`put_ªc
(
Â
[
i
], 
j
));

4839 
numñemíts
++;

4840 
numªc‹ds
++;

4842 
	`DBG
(<<"gëÇexà∑gêa·îÖid=" << 
pid
);

4843 
	`W_DO
(
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ));

4844 
	`INC_STAT_SORT
(
s‹t_∑ge_fixes
);

4849 if(
⁄˚
 && (++
run_numbî
 > 1)) {

4850 
	`W_FATAL
(
eINTERNAL
);

4852 
	`DBG
(<<"⁄˚=" << 
⁄˚


4853 << "Ñun_numbî=" << 
run_numbî


4854 << "Çumñemíts=" << 
numñemíts


4855 << "Çumªc‹ds(öput)=" << 
numªc‹ds


4860 
	`W_DO
(
run
.
	`Êush_run
(!
⁄˚
));

4862 if(!
⁄˚
) {

4863 
run
.
	`ïûogue
();

4865  
	`DBG
(<<"runÉpilogue }");

4869 
	`DBG
(<<"sortÖhase over ");

4871 
UMOF
 
unm¨shÆ
 = 
öfo1
.
	`unm¨shÆ_func
();

4872 
MOF
 
m¨shÆ
 = 
öfo1
.
	`m¨shÆ_func
();

4873 if((
unm¨shÆ
 =
s‹t_keys_t
::
noUMOF
Ë&& (
m¨shÆ
 !s‹t_keys_t::
noMOF
) ) {

4883 
öfo1
.
	`£t_obje˘_m¨shÆ
(
s‹t_keys_t
::
noMOF
, s‹t_keys_t::
noUMOF
,

4884 
key_cookõ_t
::
nuŒ
);

4893 i‡(
⁄˚
) {

4894 
	`W_DO
(
run
.
	`ouçut_sögÀ_run
(
Â
, 
ofid
, 
sw≠_œrge_obje˘_°‹e
));

4895 
run
.
	`ïûogue
();

4896 
dñëe
[] 
Â
;

4897 
auto_dñ_Â
.
	`£t
(0);

4898 
	`ªc‹d_‰ì
((
fûe_p
Ë* 
M
);

4903 
dñëe
[] 
Â
;

4904 
auto_dñ_Â
.
	`£t
(0);

4905 
	`ªc‹d_‰ì
((
fûe_p
Ë* 
M
);

4907 
	`W_DO
(
run
.
	`mîge
(
ofid
, 
sw≠_œrge_obje˘_°‹e
 ));

4914 
boﬁ
 
de°roy
 = 
Ál£
;

4916 if(!
öfo1
.
	`kìp_‹ig
()) {

4918 
	`w_as£π3
(!
öfo1
.
	`is_f‹_ödex
());

4921 if(
öfo1
.
	`dìp_c›y
()) {

4923 
de°roy
 = 
åue
;

4925 i‡(
sw≠_œrge_obje˘_°‹e
) {

4926 
	`DBG
(<<"destroyÇ swap");

4928 
	`W_DO
 ( 
	`_de°roy_n_sw≠_fûe
(
ifid
, 
ofid
) );

4930 
de°roy
 = 
åue
;

4935 
	`w_as£π3
(
öfo1
.
	`dìp_c›y
(Ë|| info1.
	`is_f‹_ödex
());

4937 if(
de°roy
) {

4938 
	`W_DO
 ( 
	`_de°roy_fûe
(
ifid
) );

4941 
	`DBG
(<<"Ñeturning from sort_file");

4942  
RCOK
;

4943 
	}
}

4945 
w_rc_t


4946 
	grun_mgr
::
	$mîge
(

4947 
°id_t
 
ofid
,

4948 
boﬁ
& 
sw≠


4951 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

4953 
	`w_as£π3
(
_pha£
);

4954 
	`w_as£π3
–! 
_pha£
->
	`d⁄e
());

4956 
	`DBG
(<<" { BEGINÑun_mgr::mîgê" << 
ofid
 << " sw≠=" << 
sw≠
);

4958 if(
_ªcompuã
) {

4961 
	`w_as£π1
(0);

4967 
√w¡≠es
=(
_NTAPES
-1)/2;

4969 i‡(
√w¡≠es
 < 2) {

4970 
	`DBG
(<<"");

4971  
	`RC
(
eINSUFFICIENTMEM
);

4974 
	`DBG
(<<"RECOMPUTEÇew fib_t" << (
fib_t
));

4975 
fib_t
 *
fib
 = 
√w
 
	`fib_t
(
√w¡≠es
-1);

4977 if(!
fib
) {

4978 
	`DBG
(<<"");

4979 
	`W_FATAL
(
eOUTOFMEMORY
);

4981 
fib
->
	`compuã
(
√w¡≠es
);

4982 
fib
->
	`compuã_dummõs
(
√w¡≠es
);

4983 
	`DBG
(<<"RECOMPUTEÇewÖha£_mgr" << (
pha£_mgr
));

4984 
pha£_mgr
* 
√wmgr
 = 
√w
 
	`pha£_mgr
(
fib
);

4986 if(!
√wmgr
) {

4987 
	`DBG
(<<"");

4988 
	`W_FATAL
(
eOUTOFMEMORY
);

4995 
	`W_FATAL
(
eNOTIMPLEMENTED
);

4997 
dñëe
 
_pha£
;

4999 
_pha£
 = 
√wmgr
;

5003 
_pha£
->
	`s‹t_pha£_d⁄e
();

5007 
t
;

5009 
t
 = 0;Å < 
_pha£
->
	`‹dî
();Å++) {

5010 
è≥_t
 *
ç
 = &
_è≥s
[
t
];

5011 
runs
 = 
_pha£
->
	`num
(
t
Ë- 
ç
->
	`œ°_run
();

5012 
	`DBG
(<<"Addög " << 
runs
 << " dummõ†tÿè≥ " << 
t
);

5013  
runs
-- > 0 ) { 
ç
->
	`add_dummy_run
(); }

5016 
	`w_as£π3
(
_√xt_run
 > 1);

5017 
	`SET_TSTAT_SORT
(
s‹t_runs
, 
_√xt_run
);

5019 
	`DBG
(<<"√wÑunhóp" << (
RunHóp
));

5020 
RunHóp
 *
runhóp
 = 
√w
 
	`RunHóp
(*
this
, 
_NTAPES
);

5021 
w_auto_dñëe_t
<
RunHóp
> 
	`autodñhóp
(
runhóp
);

5022 
	`ªc‹d_mÆloc
((
runhóp
));

5024 
	`SET_TSTAT_SORT
(
s‹t_¡≠es
, 
_NTAPES
);

5025 
	`SET_TSTAT_SORT
(
s‹t_pha£s
, 0);

5032 
	`DBG
(<<"run_mgr::mid-merge");

5033 
	`_˛ór_mëa_buf„rs
(
åue
);

5035 
	`w_as£π3
(
_pha£
->
	`‹dî
(Ë=
_NTAPES
-1);

5037 
ªc_fú°
 = 
√w
 
mëa_hódî_t
[
_NTAPES
+1];

5044 
mëa_hódî_t
 *
œ°_ªc_wrôãn_key
 = 
ªc_fú°
;

5048 
mëa_hódî_t
 *
m
 = 
œ°_ªc_wrôãn_key
+1;

5049 
t
 = 0;Å < 
_NTAPES
;Å++) {

5050 
è≥_t
 *
ç
 = &
_è≥s
[
t
];

5052 
m
->
	`£t_nkey
(
öfo
.
	`nkeys
());

5053 
	`w_as£π3
(
m
 > 
œ°_ªc_wrôãn_key
);

5054 
ç
->
	`¥ï¨e_è≥_buf„r
(
m
);

5055 
m
++;

5057 
	`w_as£π3
((
m
 > 
ªc_fú°
Ë&& (m-ªc_fú° =
_NTAPES
+1));

5066 
	`DBG
–<< 
_pha£
->
	`way
(Ë<< "-way mîge: TO " << _pha£->
	`èrgë
() );

5067 
è≥_t
 *
ç
;

5068 
è≥_t
 *
ç_limô
 = 
_è≥s
 + 
_NTAPES
;

5070 
è≥_t
* 
ouçut_è≥
 = &
_è≥s
[
_pha£
->
	`èrgë
()];

5071 
	`W_DO
(
ouçut_è≥
->
	`¥ime_è≥_f‹_ouçut
());

5072 
	`w_as£π1
(
ouçut_è≥
->
	`is_em±y
());

5074 
ç
 = 
_è≥s
;Å∞< 
ç_limô
;Åp++) {

5075 if(
ç
 !
ouçut_è≥
) {

5076 
ç
->
	`¥ime_è≥_f‹_öput
();

5077 
	`DBG
–<< " from " << *
ç
);

5089 
runs
=
_pha£
->
	`low
();Ñuns > 0;Ñuns--) {

5091 
	`w_as£π3
(
runhóp
->
	`NumEÀmíts
() == 0);

5094 
	`me
()->
	`gë___më¨ecs_ö
() = 0;

5101 
ç
 = 
_è≥s
;Å∞< 
ç_limô
;Åp++) {

5102 if(
ç
 !
ouçut_è≥
) {

5105 if(!
ç
->
	`is_em±y
(Ë&& !ç->
	`is_dummy_run
()) {

5107 
	`DBG
(<<"¥ime_ªc‹d o¿ç " << 
ç
->
	`gë_°‹e
());

5108 
	`W_DO
(
ç
->
	`¥ime_ªc‹d
(
öfo
, *
this
, 
_s¸©ch_•a˚
));

5109 
	`w_as£π3
(
ç
->
	`ªÆ_shrid
(
_ifid
.
°‹e
).
∑ge
!= 0);

5110 
	`W_DO
(
	`ö£π
(
runhóp
, 
ç
, 
	`nkeys
()));

5119 
	`DBG
(<< "ru¿" << 
runs
 <<": _merge firstÑun "

5120 << (
ç_limô
 - 
_è≥s
Ë<< "Å≠es, ouçuàè≥=" << 
ouçut_è≥
);

5121 
	`W_DO
–
	`_mîge
–
runhóp
, 
œ°_ªc_wrôãn_key
,

5122 
_pha£
->
	`œ°
(), 
ouçut_è≥
, 
ofid
, 
sw≠
) );

5127 
ç
 = 
_è≥s
;Å∞< 
ç_limô
;Åp++) {

5128 #i‡
W_DEBUG_LEVEL
 > 1

5129 if(
ç
 =
ouçut_è≥
) {

5130 
	`DBG
(<<" ouçuàè≥ " << *
ç
);

5135 if(
_pha£
->
	`œ°
()) {

5136 
	`w_as£π3
(
ç
->
	`is_em±y
());

5143 if(
ç
 !
ouçut_è≥
) {

5146 
	`DBG
(<<" i≈uàè≥ " << *
ç
);

5147 if(!
ç
->
	`is_em±y
()) {

5148 
	`w_as£π1
(
ç
->
	`cuº_run_em±y
());

5149 
	`DBG
(<< "************* ???? com∂ëedÑu¿#" << 
runs
);

5150 
ç
->
	`com∂ëed_run
();

5156 
	`w_as£π3
(
runhóp
->
	`NumEÀmíts
() == 0);

5159 
œ°_ªc_wrôãn_key
->
	`‰ì•a˚
();

5161 #i‡
W_DEBUG_LEVEL
 > 1

5166 
found
 = 0;

5167 
ç
 = 
_è≥s
;Å∞< 
ç_limô
;Åp++) {

5168 if(
ç
 =
ouçut_è≥
) {

5169 if(
_pha£
->
	`œ°
()) {

5171 
	`w_as£π3
(
ç
->
	`is_em±y
());

5177 
	`w_as£π3
(!
ç
->
	`is_em±y
());

5181 if(
_pha£
->
	`œ°
()) {

5183 
	`w_as£π3
(
ç
->
	`is_em±y
());

5186 if(
found
>0) {

5187 
	`w_as£π3
(!
ç
->
	`is_em±y
());

5191 if(
ç
->
	`is_em±y
()Ë{ 
found
++; }

5194 if(!
_pha£
->
	`œ°
()) {

5197 
	`w_as£π3
(
found
 == 1);

5202 
	`w_as£π3
(
found
 =
_NTAPES
);

5206 
	`INC_STAT_SORT
(
s‹t_pha£s
);

5208 
_pha£
->
	`föish_pha£
();

5209 } !
_pha£
->
	`d⁄e
());

5211 
	`w_as£π3
(
runhóp
->
	`NumEÀmíts
() == 0);

5212  
	`DBG
(<<"ENDÑun_mgr::mîgê" << 
ofid
 << " sw≠=" << 
sw≠
 << "}"

5214  
RCOK
;

5215 
	}
}

5217 
w_rc_t


5218 
	grun_mgr
::
	$_mîge
(

5219 
RunHóp
* 
runhóp
,

5220 
mëa_hódî_t
 *
œ°_ªc_wrôãn_key
,

5221 
boﬁ
 
œ°_∑ss
,

5222 
è≥_t
 *
èrgë
,

5223 
°id_t
 
ofid
,

5224 
boﬁ
& 
sw≠


5227 if(
_ab‹ãd
Ë 
	`RC
(
eABORTED
);

5228 
	`me
()->
	`gë___më¨ecs
() = 0;

5243 
œ°_ªc_wrôãn_key
->
	`‰ì•a˚
();

5244 
œ°_ªc_wrôãn_key
->
	`˛ór
();

5245 
œ°_ªc_wrôãn_key
->
	`£t_nkey
(
öfo
.
	`nkeys
());

5246 
	`w_as£π3
(
œ°_ªc_wrôãn_key
->
	`shpid
() == 0);

5247 
œ°_ªc_wrôãn_key
->
	`as£π_nobuf„rs
();

5248 
œ°_ªc_wrôãn_key
->
	`as£π_c⁄si°ít
();

5250 
	`DBG
(<<" { _mîge:Ñunhóp->NumEÀmíts()=" << 
runhóp
->
	`NumEÀmíts
());

5251 if(
œ°_ªc_wrôãn_key
) {

5252 
	`DBG
(<<"Üa°_ªc_wrôãn_key ordöÆ i†" << 
œ°_ªc_wrôãn_key
->
	`‹döÆ
());

5255 
è≥_t
* 
t›
;

5256 
fûe_p
& 
œ°_∑ge_wrôãn
 = 
èrgë
->
	`mëaÂ
();

5257 
fûe_p
 
œ°_∑ge_ªad
;

5258 
boﬁ
 
is_fú°
 = 
åue
;

5259 
rid_t
 
√wrid
;

5261 
sdesc_t
* 
sd
=0;

5262 if(
œ°_∑ss
) {

5263 
	`W_COERCE
–
dú
->
	`ac˚ss
(
ofid
, 
sd
, 
EX
) );

5266 
ƒec‹ds_¥o˚s£d
 = 0;

5268 
runhóp
->
	`NumEÀmíts
() > 0) {

5270 
	`DBG
–<< "Çªc‹ds_¥o˚s£d " << 
ƒec‹ds_¥o˚s£d


5271 <<"Ñunhóp->NumEÀmíts()=" << 
runhóp
->
	`NumEÀmíts
()

5274 
t›
 = 
runhóp
->
	`RemoveFú°
();

5276 
ƒec‹ds_¥o˚s£d
++;

5277 c⁄° 
mëa_hódî_t
 *
tm
 = 
t›
->
	`mëa
();

5278 
	`w_as£π3
(
tm
 > 
œ°_ªc_wrôãn_key
);

5280 
	`DBG
(<<"t›/tm i†c⁄si°ít: " << 
tm
->
	`‹döÆ
());

5281 
tm
->
	`as£π_c⁄si°ít
();

5282 
œ°_ªc_wrôãn_key
->
	`as£π_c⁄si°ít
();

5284 if–(!
tm
->
	`is_dup
()) &&

5285 (
öfo
.
	`is_unique
() ||

5286 (
öfo
.
	`nuŒ_unique
(Ë&& 
tm
->
	`is_nuŒ
()) ) ) {

5291 
j
 = -1;

5292 
	`DBG
(<< "last_rec_written_key->shpid() = " <<

5293 
œ°_ªc_wrôãn_key
->
	`shpid
()

5295 
œ°_ªc_wrôãn_key
->
	`¶Ÿ
()

5297 if(
œ°_ªc_wrôãn_key
->
	`shpid
() != 0) {

5298 
	`DBG
(<<"keycmp for DUPÉlimination");

5299 
j
 = 
	`_KeyCmp
(
œ°_ªc_wrôãn_key
, 
tm
);

5301 if(
j
 == 0) {

5302 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*Ë
tm
;

5303 
n⁄_c⁄°
->
	`m¨k_dup
();

5304 
	`DBG
(<<"MARK " << 
tm
->
	`shrid
(
_ifid
.
°‹e
));

5305 
	`w_as£π3
(
tm
->
	`is_dup
());

5309 
	`w_as£π3
(
j
<0 || 
is_fú°
);

5312 
	`DBG
(<<"nŸ uniq ca£ " << 
tm
->
	`‹döÆ
());

5315 if(!
tm
->
	`is_dup
()) {

5316 
	`DBG
(<<"nŸ du∂iˇã " << 
tm
->
	`‹döÆ
());

5318 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*Ë
tm
;

5319 
n⁄_c⁄°
->
	`as£π_c⁄si°ít
();

5320 
œ°_ªc_wrôãn_key
->
	`as£π_c⁄si°ít
();

5322 if(
œ°_∑ss
) {

5323 
Õid_t
 
	`pid
(
	`ifid
(), 
tm
->
	`shpid
());

5324 
rid_t
 
	`‹ig
(
pid
, 
tm
->
	`¶Ÿid
());

5328 
	`DBG
(<<"LAST PASS ordöÆ:" << 
tm
->
	`‹döÆ
());

5330 if(
öfo
.
	`is_f‹_ödex
()) {

5331 
	`DBG
(<<"OUTPUT INDEX REC orig " << 
‹ig
 << " ordöÆ " << 
tm
->
	`‹döÆ
() );

5332 
	`W_DO
(
	`_ouçut_ödex_ªc
(
ofid
, 
‹ig
, 
tm
,

5334 
œ°_∑ge_wrôãn
, 
sd
));

5352 if((
tm
->
	`lgmëad©a
().
	`size
(Ë> 0Ë&& !
öfo
.
	`dìp_c›y
()) {

5359 
	`DBG
(<<"OUTPUT REC orig " << 
‹ig
 << " ordöÆ " << 
tm
->
	`‹döÆ
() );

5360 
	`W_DO
(
	`_ouçut_ªc
(
ofid
, 
n⁄_c⁄°
, 
œ°_∑ge_wrôãn
,

5361 
sd
, 
sw≠
));

5366 if(
öfo
.
	`ˇºy_obj
()) {

5369 
UMOF
 
unm¨shÆ
 = 
öfo
.
	`unm¨shÆ_func
();

5370 if(
unm¨shÆ
 !
s‹t_keys_t
::
noUMOF
) {

5371 
sm_obje˘_t
&
obj
 =

5372 
n⁄_c⁄°
-> 
	`whﬁe_obje˘_n⁄_c⁄°
();

5375 
sm_obje˘_t
 
√wobj
;

5377 
	`ˇŒback_¥ﬁogue
();

5378 
	`W_DO
–(*
unm¨shÆ
)(
‹ig
,

5379 
obj
,

5380 
öfo
.
	`m¨shÆ_cookõ
(),

5381 &
√wobj
) );

5382 
	`ˇŒback_ïûogue
();

5383 
	`INC_STAT_SORT
(
s‹t_umof_˙t
);

5386 
obj
.
	`ª∂a˚
(
√wobj
);

5389 
n⁄_c⁄°
->
	`as£π_c⁄si°ít
();

5391 
	`DBG
(<<"whatÅo do here???");

5393 
	`DBG
(<<"OUTPUT REC orig " << 
‹ig
 << " ordöÆ " << 
tm
->
	`‹döÆ
() );

5394 
	`W_DO
(
	`_ouçut_ªc
(
ofid
, 
n⁄_c⁄°
,

5395 
œ°_∑ge_wrôãn
, 
sd
, 
sw≠
));

5402 
ªc‹d_t
* 
ªc
;

5403 
rid_t
 
_‹ig
;

5404 
	`W_DO
(
t›
->
	`pö_‹ig_ªc
(
œ°_∑ge_ªad
, 
_ifid
, 
ªc
, 
_‹ig
));

5405 
	`DBG
(<<"OUTPUT PINNED REC orig " << 
‹ig
 << " ordöÆ " << 
tm
->
	`‹döÆ
() );

5406 
	`W_DO
(
	`_ouçut_pö√d_ªc
(
ofid
, 
_‹ig
, 
ªc
,

5407 
œ°_∑ge_ªad
, 
œ°_∑ge_wrôãn
, 
sd
,

5408 
sw≠
));

5413 
	`DBG
(<<"OUTPUT METARECÇotÜastÖass");

5418 
	`W_DO
(
	`_ouçut_më¨ec
(
n⁄_c⁄°
, 
èrgë
, 
√wrid
));

5419 if(
is_fú°
) {

5421 
èrgë
->
	`add_run_fú°
(
√wrid
.
pid
.
∑ge
,Çewrid.
¶Ÿ
);

5422 
is_fú°
 = 
Ál£
;

5425 
œ°_ªc_wrôãn_key
->
	`as£π_c⁄si°ít
();

5426 
n⁄_c⁄°
->
	`as£π_c⁄si°ít
();

5428 
œ°_ªc_wrôãn_key
->
	`move_s‹t_keys
(*
n⁄_c⁄°
);

5429 
	`DBG
(<<"SAVEDÑid for dup chk "

5430 << 
œ°_ªc_wrôãn_key
->
	`shrid
(
_ifid
.
°‹e
));

5431 
	`w_as£π3
(! 
tm
->
	`is_dup
());

5433 
n⁄_c⁄°
->
	`‰ì•a˚
();

5434 
n⁄_c⁄°
->
	`as£π_c⁄si°ít
();

5438 
	`DBG
(<<"skù: ELIMÑid" << 
tm
->
	`shrid
(
_ifid
.
°‹e
));

5439 
	`INC_STAT_SORT
(
s‹t_du∂iˇãs
);

5440 
mëa_hódî_t
 *
n⁄_c⁄°
 = (mëa_hódî_à*Ë
tm
;

5441 
n⁄_c⁄°
->
	`‰ì•a˚
();

5442 
n⁄_c⁄°
->
	`as£π_c⁄si°ít
();

5446 if–
t›
->
	`cuº_run_em±y
() ) {

5448 
t›
->
	`ªÀa£_∑ge
—›->
	`mëaÂ
());

5452 
	`DBG
(<<"¥ime_ªc‹d o¿ç " << 
t›
->
	`gë_°‹e
());

5453 
	`W_DO
(
t›
->
	`¥ime_ªc‹d
–
öfo
, *
this
, 
_s¸©ch_•a˚
));

5455 
	`DBG
(<<"pushög o¡ÿhó∞ç " << 
t›
->
	`gë_°‹e
());

5456 
	`W_DO
(
	`ö£π
(
runhóp
, 
t›
, 
	`nkeys
()));

5457 
	`w_as£π3
(
runhóp
->
	`NumEÀmíts
() > 0);

5459 
	`DBG
(<<"end ofÜoop");

5461  
	`DBG
(<<"_mîgê:Çªc‹ds_¥o˚s£d =" << 
ƒec‹ds_¥o˚s£d


5462 << " më¨ec†ªad i¿" << 
	`me
()->
	`gë___më¨ecs_ö
()

5463 << " më¨ec†ouà" << 
	`me
()->
	`gë___më¨ecs
()

5465 if(!
œ°_∑ss
) {

5469 
	`w_as£π3
(!
is_fú°
 ||

5470 (
œ°_ªc_wrôãn_key
->
	`shpid
() != 0) );

5471 if(!
is_fú°
) {

5473 
èrgë
->
	`add_run_œ°
(
√wrid
.
pid
.
∑ge
,Çewrid.
¶Ÿ
);

5474 
èrgë
->
	`ªÀa£_∑ge
—¨gë->
	`mëaÂ
());

5477  
RCOK
;

5478 
	}
}

5488 
boﬁ


5489 
	grun_mgr
::
	$gt
(c⁄° 
è≥_t
* 
a
, c⁄°Å≠e_t* 
b
) const

5501 
j
;

5502 if(
a
==
b
) {

5503 
j
 = 0;

5504 
	`w_as£π0
(0);

5507 
j
 = 
	`_KeyCmp
(
a
->
	`mëa
(), 
b
->meta());

5511 
	`DBG
(<<"gt:Ñevîsög:Ñëu∫ " << ((
j
 <=0)?"true":"false"));

5514  (
j
 < 0Ë? 
åue
 : 
Ál£
;

5515 
	}
}

5517 #ifde‡
OLDSORT_COMPATIBILITY


5521 
w_rc_t


5522 
	$°rögCSKF
(

5523 c⁄° 
rid_t
& ,

5524 c⁄° 
obje˘_t
& 
obj
,

5525 
key_cookõ_t
 
cookõ
,

5527 
Á˘‹y_t
& ,

5528 
skey_t
* 
out


5531 
boﬁ
 
ö_hdr
 = (
cookõ
.
	`make_±r
(Ë=
	`key_cookõ_t
(1).make_ptr());

5535 
smsize_t
 
Àngth
 = 
ö_hdr
? 
obj
.
	`hdr_size
(Ë: obj.
	`body_size
();

5536 
	`√w
(
out
Ë
	`skey_t
(
obj
, 0, 
Àngth
, 
ö_hdr
);

5538  
RCOK
;

5539 
	}
}

5541 
	shûbît_cooky
 {

5542 
boﬁ
 
	mö_hdr
;

5543 
nbox_t
* 
	munivî£
;

5546 
w_rc_t


5547 
	$hûbît
 (

5548 c⁄° 
rid_t
& ,

5549 c⁄° 
obje˘_t
& 
obj
,

5550 
key_cookõ_t
 
cookõ
,

5551 
Á˘‹y_t
& 
öã∫Æ
,

5552 
skey_t
* 
out


5555 
hûbît_cooky
 *
h
 = (hûbît_cooky *)
cookõ
.
	`make_±r
();

5556 
	`w_as£π1
(
obj
.
	`is_ö_buf„r_poﬁ
());

5559 
smsize_t
 
Àngth
 = ();

5561 
nbox_t
 
	`box
(2);

5562 
smsize_t
 
kÀn
 = 
box
.
	`kÀn
();

5564 
nbox_t
& 
univî£
 = *(
h
->universe);

5567 if(
h
->
ö_hdr
) {

5568 c⁄° *
±r
 = (c⁄° *)
obj
.
	`hdr
(0);

5569 
box
.
	`byãs2box
(
±r
, 
kÀn
);

5571 *
±r
 = 
√w
 [
kÀn
];

5572 if(!
±r
) {

5573  
	`RC
(
smÀvñ_t›
::
eOUTOFMEMORY
);

5575 
vec_t
 
	`v
(
±r
, 
kÀn
);

5576 
w_rc_t
 
rc
 = 
obj
.
	`c›y_out
(
Ál£
,0,
kÀn
, 
v
);

5577 
box
.
	`byãs2box
((c⁄° *)
±r
, 
kÀn
);

5578 
dñëe
[] 
±r
;

5579 if(
rc
.
	`is_îr‹
()ËÑc.
	`ª£t
();

5581 
hvÆue
 = 
box
.
	`hvÆue
(
univî£
);

5583 *
buf
 = 
öã∫Æ
.
	`Ælocfunc
(
Àngth
);

5584 
	`mem˝y
(
buf
, &
hvÆue
, 
Àngth
);

5586 
	`√w
(
out
Ë
	`skey_t
(
buf
, 0, 
Àngth
, 
öã∫Æ
);

5588  
RCOK
;

5589 
	}
}

5592 
rc_t


5593 
	gss_m
::
	$√w_s‹t_fûe
(

5594 c⁄° 
°id_t
& 
ö_fid
,

5595 
vid_t
 
out_vid
,

5596 
°id_t
& 
out_fid
,

5597 
°‹e_¥›îty_t
 
¥›îty
,

5598 c⁄° 
key_öfo_t
& 
ki
,

5599 
run_size
,

5600 
boﬁ
 
as˚ndög
,

5601 
boﬁ
 
unique
,

5602 
boﬁ
 
de°ru˘ive


5607 
	`W_DO
(
	`¸óã_fûe
(
out_vid
, 
out_fid
, 
¥›îty
));

5609 
	`W_DO
(
	`_√w_s‹t_fûe
(
ö_fid
,

5610 
out_fid
,

5611 
ki
,

5612 
run_size
,

5613 
as˚ndög
,

5614 
unique
,

5615 !
de°ru˘ive
));

5616  
RCOK
;

5617 
	}
}

5619 
rc_t


5620 
	gss_m
::
	$_√w_s‹t_fûe
(

5621 c⁄° 
°id_t
& 
ö_fid
,

5622 c⁄° 
°id_t
& 
out_fid
,

5623 c⁄° 
key_öfo_t
& 
ki
,

5624 
run_size
,

5625 
boﬁ
 
as˚ndög
,

5626 
boﬁ
 
unique
,

5627 
boﬁ
 
kìp_‹ig


5631 
key_öfo_t
 
köfo
 = 
ki
;

5632 
s‹t_keys_t
 
	`kl
(1);

5634 
key_cookõ_t
 
	`cookõs
(0);

5635 
nbox_t
 
	`_univî£_
(
köfo
.
univî£
);

5637 
CF
 
cmp
 = 
s‹t_°ªam_i
::
	`gë_cmp_func
(
köfo
.
ty≥
, 
åue
);

5639 
hûbît_cooky
 
C
;

5640 
C
.
ö_hdr
 = (
köfo
.
whîe
 =
key_öfo_t
::
t_hdr
)?
åue
:
Ál£
;

5643 if(
köfo
.
ty≥
 =
s‹t‹dî
::
kt_•©ül
) {

5645 
köfo
.
Àn
 = ();

5646 
C
.
univî£
 = &
_univî£_
;

5648 
cmp
 = 
s‹t_keys_t
::
öt4_cmp
;

5650 
cookõs
 = 
	`key_cookõ_t
(&
C
);

5652 if(
köfo
.
ty≥
 =
s‹t‹dî
::
kt_•©ül
) {

5653 
kl
.
	`£t_s‹tkey_dîived
(0,

5654 
hûbît
,

5655 
cookõs
,

5656 
C
.
ö_hdr
,

5657 
åue
,

5658 
åue
,

5659 
cmp


5661 } if(
köfo
.
ty≥
 =
s‹t‹dî
::
kt_b
) {

5664 
kl
.
	`£t_s‹tkey_dîived
(0,

5665 
°rögCSKF
,

5666 
	`key_cookõ_t
(
C
.
ö_hdr
?1:0),

5667 
C
.
ö_hdr
,

5668 
åue
,

5669 
åue
,

5670 
cmp


5673 
kl
.
	`£t_s‹tkey_fixed
(0,

5674 
köfo
.
off£t
,

5675 
köfo
.
Àn
,

5676 
C
.
ö_hdr
,

5677 
åue
,

5678 
Ál£
,

5679 
cmp


5683 if–
kl
.
	`£t_as˚ndög
(
as˚ndög
)

5684 || 
kl
.
	`£t_unique
(
unique
) ) {

5685  
	`RC
(
eBADARGUMENT
);

5688 i‡(
kl
.
	`£t_nuŒ_unique
(
Ál£
)) {

5691  
	`RC
(
eBADARGUMENT
);

5698 
kl
.
	`£t_°abÀ
(
Ál£
);

5702 (Ë
kl
.
	`£t_f‹_fûe
(
kìp_‹ig
, kìp_‹ig, 
Ál£
);

5707 
	`w_as£π3
(!
kl
.
	`is_f‹_ödex
());

5709 
	`W_DO
(
	`s‹t_fûe
(
ö_fid
,

5710 
out_fid
,

5711 1, &
out_fid
.
vﬁ
,

5712 
kl
,

5713 
köfo
.
e°_ª˛í
,

5714 
run_size
,

5715 
ss_m
::
∑ge_sz
 * 
run_size


5717 
	`DBG
(<<"Ñeturning fromÇew_sort_file");

5719  
RCOK
;

5720 
	}
}

5728 
	gs‹t_keys_t
::
	$°rög_cmp
(

5729 
uöt4_t
 
kÀn1
, c⁄° * 
kvÆ1
, uöt4_à
kÀn2
, c⁄° * 
kvÆ2
)

5731 * 
p1
 = (*Ë
kvÆ1
;

5732 * 
p2
 = (*Ë
kvÆ2
;

5735 
ªsu…
 = 0;

5737 
uöt4_t
 
i
 = 
kÀn1
 < 
kÀn2
 ? klen1 : klen2;

5740 
i
 > 0 &&

5741 ! (
ªsu…
 = *
p1
 - *
p2
);

5742 
i
--, 
p1
++, 
p2
++) ;

5745  
ªsu…
 ?Ñesu… : 
kÀn1
 - 
kÀn2
;

5746 
	}
}

5752 
	gs‹t_keys_t
::
uöt8_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5753 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5755 
w_as£π3
(
kÀn1
 =
kÀn2
);

5756 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
uöt8_t
));

5758 #ifde‡
STRICT_INT8_ALIGNMENT


5759 
	gw_ba£_t
::
uöt8_t
 
u1
;

5760 
	gw_ba£_t
::
uöt8_t
 
u2
;

5761 
mem˝y
(&
u1
, 
kvÆ1
, (u1));

5762 
mem˝y
(&
u2
, 
kvÆ2
, (u2));

5763 
ADD_TSTAT_SORT
(
s‹t_mem˝y_˙t
, 2);

5764 
ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 2*(
w_ba£_t
::
uöt8_t
));

5766 
w_as£π3
(((
±rdiff_t
)
kvÆ1
 & 
ALIGN_MASK_IU8
) == 0);

5767 
w_as£π3
(((
±rdiff_t
)
kvÆ2
 & 
ALIGN_MASK_IU8
) == 0);

5768 c⁄° 
	gw_ba£_t
::
uöt8_t
 &
u1
 = *(c⁄° 
w_ba£_t
::uöt8_à*Ë
kvÆ1
;

5769 c⁄° 
	gw_ba£_t
::
uöt8_t
 &
u2
 = *(c⁄° 
w_ba£_t
::uöt8_à*Ë
kvÆ2
;

5771 
boﬁ
 
	gªt
 = 
u1
 < 
u2
;

5772  
	gªt
 ? -1 : (
u1
 =
u2
) ? 0 : 1;

5778 
	gs‹t_keys_t
::
öt8_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5779 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5781 
w_as£π3
(
kÀn1
 =
kÀn2
);

5782 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
öt8_t
));

5784 #ifde‡
STRICT_INT8_ALIGNMENT


5785 
	gw_ba£_t
::
öt8_t
 
i1
;

5786 
	gw_ba£_t
::
öt8_t
 
i2
;

5787 
mem˝y
(&
i1
, 
kvÆ1
, (i1));

5788 
mem˝y
(&
i2
, 
kvÆ2
, (i2));

5789 
ADD_TSTAT_SORT
(
s‹t_mem˝y_˙t
, 2);

5790 
ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 2*(
w_ba£_t
::
öt8_t
));

5792 
w_as£π3
(((
±rdiff_t
)
kvÆ1
 & 
ALIGN_MASK_IU8
) == 0);

5793 
w_as£π3
(((
±rdiff_t
)
kvÆ2
 & 
ALIGN_MASK_IU8
) == 0);

5794 c⁄° 
	gw_ba£_t
::
öt8_t
 &
i1
 = *(c⁄° 
w_ba£_t
::öt8_à*Ë
kvÆ1
;

5795 c⁄° 
	gw_ba£_t
::
öt8_t
 &
i2
 = *(c⁄° 
w_ba£_t
::öt8_à*Ë
kvÆ2
;

5797 
boﬁ
 
	gªt
 = 
i1
 < 
i2
;

5798  
	gªt
 ? -1 : (
i1
 =
i2
) ? 0 : 1;

5804 
	gs‹t_keys_t
::
uöt4_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5805 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5807 
w_as£π3
(
kÀn1
 =
kÀn2
);

5808 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
uöt4_t
));

5809 
boﬁ
 
	gªt
 = (* (
w_ba£_t
::
uöt4_t
*Ë
kvÆ1
Ë< (* (w_ba£_t::uöt4_t*Ë
kvÆ2
);

5810  
	gªt
? -1 :

5811 ((* (
w_ba£_t
::
uöt4_t
*Ë
kvÆ1
Ë=(* (w_ba£_t::uöt4_t*Ë
kvÆ2
))? 0:

5817 
	gs‹t_keys_t
::
öt4_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5818 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5820 
w_as£π3
(
kÀn1
 =
kÀn2
);

5821 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
öt4_t
));

5825 
boﬁ
 
	gªt
 = (* (
w_ba£_t
::
öt4_t
*Ë
kvÆ1
Ë< (* (w_ba£_t::öt4_t*Ë
kvÆ2
);

5826  
	gªt
? -1 :

5827 ((* (
w_ba£_t
::
öt4_t
*Ë
kvÆ1
Ë=(* (w_ba£_t::öt4_t*Ë
kvÆ2
) )? 0 : 1;

5832 
	gs‹t_keys_t
::
uöt2_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5833 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5835 
w_as£π3
(
kÀn1
 =
kÀn2
);

5836 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
uöt2_t
));

5837  (* (
	gw_ba£_t
::
uöt2_t
*Ë
kvÆ1
Ë- (* (
w_ba£_t
::uöt2_t*Ë
kvÆ2
);

5843 
	gs‹t_keys_t
::
öt2_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5844 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5846 
w_as£π3
(
kÀn1
 =
kÀn2
);

5847 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
öt2_t
));

5848  (* (
	gw_ba£_t
::
öt2_t
*Ë
kvÆ1
Ë- (* (
w_ba£_t
::öt2_t*Ë
kvÆ2
);

5857 
	gs‹t_keys_t
::
uöt1_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5858 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5860 
w_as£π3
(
kÀn1
 =
kÀn2
);

5861 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
uöt1_t
));

5862  (* (
	gw_ba£_t
::
uöt1_t
*Ë
kvÆ1
Ë- (* (
w_ba£_t
::uöt1_t*Ë
kvÆ2
);

5865 
	gs‹t_keys_t
::
öt1_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5866 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5868 
w_as£π3
(
kÀn1
 =
kÀn2
);

5869 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
öt1_t
));

5872 
	gw_ba£_t
::
öt1_t
 *
k1
 = (
w_ba£_t
::öt1_t*Ë(
kvÆ1
);

5873 
	gw_ba£_t
::
öt1_t
 *
k2
 = (
w_ba£_t
::öt1_t*Ë(
kvÆ2
);

5874 
	gªs
 = *
k1
 - *
k2
;

5875 
	gªs
 = (
ªs
 < 0) ? -1 : (res == 0) ? 0: 1;

5876 
DBG
(<<"öt1_cm∞" << (*
k1
Ë<< " " << (*
k2
Ë<< "Ñe†" << 
ªs
);

5877  
	gªs
;

5883 
	gs‹t_keys_t
::
f4_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5884 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5886 
w_as£π3
(
kÀn1
 =
kÀn2
);

5887 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
f4_t
));

5890 
boﬁ
 
	gªs
 = (* (
w_ba£_t
::
f4_t
*Ë
kvÆ1
Ë< (* (w_ba£_t::f4_t*Ë
kvÆ2
);

5891  
	gªs
 ? -1 : (

5892 ((* (
w_ba£_t
::
f4_t
*Ë
kvÆ1
Ë=(* (w_ba£_t::f4_t*Ë
kvÆ2
))

5896 
	gs‹t_keys_t
::
f8_cmp
(
uöt4_t
 
W_IFDEBUG3
(
kÀn1
), c⁄° * 
kvÆ1
,

5897 
uöt4_t
 
W_IFDEBUG3
(
kÀn2
), c⁄° * 
kvÆ2
)

5899 
w_as£π3
(
kÀn1
 =
kÀn2
);

5900 
w_as£π3
(
kÀn1
 =(
w_ba£_t
::
f8_t
));

5902 #ifde‡
STRICT_F8_ALIGNMENT


5903 
	gw_ba£_t
::
f8_t
 
d1
;

5904 
	gw_ba£_t
::
f8_t
 
d2
;

5905 
mem˝y
(&
d1
, 
kvÆ1
, (
w_ba£_t
::
f8_t
));

5906 
mem˝y
(&
d2
, 
kvÆ2
, (
w_ba£_t
::
f8_t
));

5907 
ADD_TSTAT_SORT
(
s‹t_mem˝y_˙t
, 2);

5908 
ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 2*(
w_ba£_t
::
f8_t
));

5910 
w_as£π3
(((
±rdiff_t
)
kvÆ1
 & 
ALIGN_MASK_F8
) == 0);

5911 
w_as£π3
(((
±rdiff_t
)
kvÆ2
 & 
ALIGN_MASK_F8
) == 0);

5912 c⁄° 
	gw_ba£_t
::
f8_t
 &
d1
 = *(c⁄° 
w_ba£_t
::f8_à*Ë
kvÆ1
;

5913 c⁄° 
	gw_ba£_t
::
f8_t
 &
d2
 = *(c⁄° 
w_ba£_t
::f8_à*Ë
kvÆ2
;

5916 
boﬁ
 
	gªt
 = 
d1
 < 
d2
;

5917  
	gªt
 ? -1 : (
d1
 =
d2
) ? 0 : 1;

5924 
	~<Àxify.h
>

5926 
w_rc_t
 
	gs‹t_keys_t
::
	$f8_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5927 
w_ba£_t
::
f8_t
 
dbl
;

5928 
	`mem˝y
(&
dbl
, 
d
, (
w_ba£_t
::
f8_t
));

5929 
S‹tOrdî
.
	`dbl_Àxify
(
dbl
, 
ªs
, S‹tOrdî.
D≥rm
);

5930  
RCOK
;

5931 
	}
}

5932 
w_rc_t
 
	gs‹t_keys_t
::
	$f4_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5933 
S‹tOrdî
.
	`Êﬂt_Àxify
(*(
w_ba£_t
::
f4_t
 *)
d
, 
ªs
, S‹tOrdî.
F≥rm
);

5934  
RCOK
;

5935 
	}
}

5936 
w_rc_t
 
	gs‹t_keys_t
::
	$u8_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5937 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
Ál£
, 8, 
ªs
, S‹tOrdî.
I8≥rm
);

5938  
RCOK
;

5939 
	}
}

5940 
w_rc_t
 
	gs‹t_keys_t
::
	$i8_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5941 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
åue
, 8, 
ªs
, S‹tOrdî.
I8≥rm
);

5942  
RCOK
;

5943 
	}
}

5944 
w_rc_t
 
	gs‹t_keys_t
::
	$u4_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5945 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
Ál£
, 4, 
ªs
, S‹tOrdî.
I4≥rm
);

5946  
RCOK
;

5947 
	}
}

5948 
w_rc_t
 
	gs‹t_keys_t
::
	$i4_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5949 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
åue
, 4, 
ªs
, S‹tOrdî.
I4≥rm
);

5950  
RCOK
;

5951 
	}
}

5952 
w_rc_t
 
	gs‹t_keys_t
::
	$u2_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5953 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
Ál£
, 2, 
ªs
, S‹tOrdî.
I2≥rm
);

5954  
RCOK
;

5955 
	}
}

5956 
w_rc_t
 
	gs‹t_keys_t
::
	$i2_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5957 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
åue
, 2, 
ªs
, S‹tOrdî.
I2≥rm
);

5958  
RCOK
;

5959 
	}
}

5960 
w_rc_t
 
	gs‹t_keys_t
::
	$u1_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5961 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
Ál£
, 1, 
ªs
, S‹tOrdî.
I1≥rm
);

5962  
RCOK
;

5963 
	}
}

5964 
w_rc_t
 
	gs‹t_keys_t
::
	$i1_Àx
(c⁄° *
d
, 
smsize_t
 , * 
ªs
){

5965 
S‹tOrdî
.
	`öt_Àxify
(
d
, 
åue
, 1, 
ªs
, S‹tOrdî.
I1≥rm
);

5966  
RCOK
;

5967 
	}
}

5979 
w_rc_t


5980 
	gs‹t_keys_t
::
	$gíîic_CSKF
(

5981 c⁄° 
rid_t
& ,

5982 c⁄° 
obje˘_t
& 
ö_obj
,

5983 
key_cookõ_t
 
cookõ
,

5984 
Á˘‹y_t
& 
öã∫Æ
,

5985 
skey_t
* 
out


5988 
gíîic_CSKF_cookõ
 *
c
 = (gíîic_CSKF_cookõ *)
cookõ
.
	`make_±r
();

5989 if(
c
->
Àngth
 <0Ë{  
RCOK
; }

5992 
LEXFUNC
 
Àx
;

5993 
Àx
 = 
c
->
func
;

6004 
	`√w
(
out
Ë
	`skey_t
(
ö_obj
, 
c
->
off£t
, c->
Àngth
, c->
ö_hdr
);

6005 if(
Àx
 !
noLEXFUNC
) {

6007 *
buf
 = (*)
öã∫Æ
.
	`Ælocfunc
(
c
->
Àngth
);

6009 if(
out
->
	`c⁄tig_Àngth
(Ë=out->
	`size
()) {

6012 
	`W_DO
((*
Àx
)(
out
->
	`±r
(0), 
c
->
Àngth
, 
buf
));

6015 *
tmp
 = (*)
√w
 [
c
->
Àngth
];

6016 if(!
tmp
) {

6017  
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

6019 
vec_t
 
	`v
(
tmp
, 
c
->
Àngth
);

6020 
	`W_DO
(
out
->
	`c›y_out
(
v
));

6021 
	`W_DO
((*
Àx
)(
tmp
, 
c
->
Àngth
, 
buf
));

6025 
	`√w
(
out
Ë
	`skey_t
(
buf
, 0, 
c
->
Àngth
, 
öã∫Æ
);

6027  
RCOK
;

6028 
	}
}

6030 
w_rc_t


6031 
	$gíîic_MOF
(

6032 c⁄° 
rid_t
& ,

6033 c⁄° 
obje˘_t
& 
obj_ö
,

6034 
key_cookõ_t
 ,

6035 
obje˘_t
* 
obj_out


6042 
Á˘‹y_t
 &
Á˘
 = *Á˘‹y_t::
˝p_ve˘‹
;

6044 
smsize_t
 
hdæí
 = 
obj_ö
.
	`hdr_size
();

6045 
smsize_t
 
bodyÀn
 = 
obj_ö
.
	`body_size
();

6047 *
hdrbuf
=0, *
bodybuf
=0;

6048 if(
hdæí
>0){

6049 
hdrbuf
 = (*)
Á˘
.
	`Ælocfunc
(
hdæí
);

6050 if(!
hdrbuf
Ë 
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

6051 
	`mem˝y
(
hdrbuf
, 
obj_ö
.
	`hdr
(0), 
hdæí
);

6053 if(
bodyÀn
>0){

6054 
bodybuf
 = (*)
Á˘
.
	`Ælocfunc
(
bodyÀn
);

6055 if(!
bodybuf
Ë 
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

6056 
vec_t
 
	`v
(
bodybuf
, 
bodyÀn
);

6057 
	`W_DO
(
obj_ö
.
	`c›y_out
(
Ál£
, 0, 
bodyÀn
, 
v
));

6059 
	`√w
 (
obj_out
Ë
	`obje˘_t
–
hdrbuf
, 
hdæí
, 
Á˘
,

6060 
bodybuf
, 
bodyÀn
, 
Á˘
);

6061  
RCOK
;

6062 
	}
}

6064 
w_rc_t


6065 
	$gíîic_UMOF
(

6066 c⁄° 
rid_t
& 
rid
,

6067 c⁄° 
obje˘_t
& 
obj_ö
,

6068 
key_cookõ_t
 
cookõ
,

6069 
obje˘_t
* 
obj_out


6072  
	`gíîic_MOF
(
rid
, 
obj_ö
, 
cookõ
, 
obj_out
);

6073 
	}
}

6076 
w_rc_t


6077 
	gs‹t_keys_t
::

6078 
	$noLEXFUNC
 (c⁄° *
‰om
, 
smsize_t
 
howmuch
 , *
to
)

6080 
	`mem˝y
((*)
to
, (c⁄° *)
‰om
, 
howmuch
);

6081  
RCOK
;

6082 
	}
}

6084 
w_rc_t


6085 
	gs‹t_keys_t
::
	$noCSKF
(

6086 c⁄° 
rid_t
& ,

6087 c⁄° 
obje˘_t
& ,

6088 
key_cookõ_t
 ,

6089 
Á˘‹y_t
& ,

6090 
skey_t
*

6093 
	`w_as£π3
(0);

6094  
RCOK
;

6095 
	}
}

6097 
w_rc_t


6098 
	gs‹t_keys_t
::
	$noMOF
 (

6099 c⁄° 
rid_t
& ,

6100 c⁄° 
obje˘_t
& ,

6101 
key_cookõ_t
 ,

6102 
obje˘_t
*

6104 { 
	`w_as£π3
(0);  
RCOK
; 
	}
}

6106 
w_rc_t


6107 
	gs‹t_keys_t
::
	$noUMOF
 (

6108 c⁄° 
rid_t
& ,

6109 c⁄° 
obje˘_t
& ,

6110 
key_cookõ_t
 ,

6111 
obje˘_t
*

6114 
	`w_as£π3
(0);

6115  
RCOK
;

6116 
	}
}

6120 
NORET


6121 
	gobje˘_t
::
	$obje˘_t
() :

6122 
	`_vÆid
(
Ál£
),

6123 
	`_ö_bp
(
Ál£
),

6124 
	`_ªc
(0),

6125 
	`_Â
(0),

6126 
	`_hdrÁ˘
(
Á˘‹y_t
::
n⁄e
),

6127 
	`_hdæí
(0),

6128 
	`_hdrbuf
(0),

6129 
	`_bodyÁ˘
(
Á˘‹y_t
::
n⁄e
),

6130 
	`_bodyÀn
(0),

6131 
	$_bodybuf
(0)

6132 { 
	}
}

6135 
	gobje˘_t
::
	$_c⁄°ru˘
(
fûe_p
& 
Â
, 
¶Ÿid_t
 
¶Ÿ
)

6137 
_vÆid
 = 
åue
;

6138 
_ö_bp
 = 
åue
;

6139 
_ªc
 = 0;

6140 
	`W_COERCE
(
Â
.
	`gë_ªc
(
¶Ÿ
, 
_ªc
));

6141 
_hdæí
 = 
_ªc
->
	`hdr_size
();

6142 
_bodyÀn
 = 
_ªc
->
	`body_size
();

6143 
_Â
 = &
Â
;

6144 
	}
}

6147 
	gobje˘_t
::
	$_c⁄°ru˘
(c⁄° *
hdr
, 
smsize_t
 
hdæí
, 
Á˘‹y_t
* 
hf
,

6148 c⁄° *
body
, 
smsize_t
 
bodyÀn
, 
Á˘‹y_t
* 
_bf
)

6150 
_vÆid
=
åue
;

6151 
_ö_bp
=
Ál£
;

6152 
_ªc
 = 0;

6153 
_Â
=0;

6154 
_hdrÁ˘
=
hf
; 
_hdæí
=
hdæí
; 
_hdrbuf
=
hdr
;

6155 
_bodyÁ˘
=
_bf
; 
_bodyÀn
=
bodyÀn
; 
_bodybuf
=
body
;

6156 
	}
}

6158 
NORET
 
	gobje˘_t
::~
	$obje˘_t
()

6161 
	}
}

6164 
obje˘_t
::
	$_ª∂a˚
(c⁄° 
obje˘_t
& 
Ÿhî
)

6166 
	`‰ì•a˚
();

6167 
	`as£π_nobuf„rs
();

6169 
_vÆid
 = 
åue
;

6170 
_ö_bp
 = 
Ÿhî
._in_bp;

6171 
_ªc
 = 
Ÿhî
._rec;

6172 
_Â
 = 
Ÿhî
._fp;

6173 
_hdrÁ˘
 = 
Ÿhî
._hdrfact;

6174 
_bodyÁ˘
 = 
Ÿhî
._bodyfact;

6175 
_hdrbuf
 = 
Ÿhî
._hdrbuf;

6176 
_bodybuf
 = 
Ÿhî
._bodybuf;

6177 
_hdæí
 = 
Ÿhî
._hdrlen;

6178 
_bodyÀn
 = 
Ÿhî
._bodylen;

6179 
_ßve_pö_cou¡
 = 0;

6180 
	}
}

6183 
	gobje˘_t
::
	$hdr
(
smsize_t
 
off£t
) const

6185 c⁄° *
h
 = 0;

6186 if(
_ö_bp
) {

6187 
h
 = 
_ªc
->
	`hdr
();

6189 
h
 = (c⁄° *)
_hdrbuf
;

6191  (c⁄° *)(
h
+
off£t
);

6192 
	}
}

6195 
	gobje˘_t
::
	$body
(
smsize_t
 
off£t
) const

6197 c⁄° *
b
 = 0;

6198 if(
_ö_bp
) {

6199 if(
_ªc
->
	`is_œrge
()) {

6205 
b
 = 
_ªc
->
	`body
();

6207 
b
 = (c⁄° *)
_bodybuf
;

6209  (c⁄° *)(
b
+
off£t
);

6210 
	}
}

6213 
	gobje˘_t
::
	$‰ì•a˚
()

6215 if(
_ö_bp
) {

6217 
	`w_as£π3
(!
_bodybuf
);

6218 
	`w_as£π3
(!
_hdrbuf
);

6222 if(
_bodybuf
Ë
_bodyÁ˘
->
	`‰ìfunc
(_bodybuf, 
_bodyÀn
);

6223 
_bodybuf
=0;

6224 
_bodyÀn
 = 0;

6225 if(
_hdrbuf
Ë
_hdrÁ˘
->
	`‰ìfunc
(_hdrbuf, 
_hdæí
);

6226 
_hdrbuf
=0;

6227 
_hdæí
 = 0;

6229 
	`_övÆid©e
();

6230 
	}
}

6233 
	gobje˘_t
::
	$as£π_nobuf„rs
() const

6237 
	`w_as£π1
(
_hdrbuf
 == 0);

6238 
	`w_as£π1
(
_bodybuf
 == 0);

6239 
	}
}

6241 
w_rc_t


6242 
	gobje˘_t
::
	$c›y_out
(

6243 
boﬁ
 
ö_hdr
,

6244 
smsize_t
 
off£t
,

6245 
smsize_t
 
Àngth
,

6246 
vec_t
&
de°
) const

6248 
	`w_as£π3
(
Àngth
 <
de°
.
	`size
());

6249 if(!
	`is_ö_buf„r_poﬁ
()) {

6251 if(
ö_hdr
) {

6252 
	`w_as£π3
(
off£t
 + 
Àngth
 <
_hdæí
);

6253 *
whîe
 = ((*)
_hdrbuf
Ë+ 
off£t
;

6254 
de°
.
	`c›y_‰om
–
whîe
, 
Àngth
, 0 );

6256 
	`w_as£π3
(
off£t
 + 
Àngth
 <
_bodyÀn
);

6257 *
whîe
 = ((*)
_bodybuf
Ë+ 
off£t
;

6258 
de°
.
	`c›y_‰om
–(*)
whîe
, 
Àngth
, 0 );

6264 if(
ö_hdr
) {

6265 
	`w_as£π3
(
off£t
 + 
Àngth
 <
_ªc
->
	`hdr_size
());

6266 
de°
.
	`c›y_‰om
–
_ªc
->
	`hdr
(Ë+ 
off£t
, 
Àngth
, 0 );

6267 } if(
_ªc
->
	`is_smÆl
()) {

6268 
	`w_as£π3
(
off£t
 + 
Àngth
 <
_ªc
->
	`body_size
());

6269 
de°
.
	`c›y_‰om
–
_ªc
->
	`body
(Ë+ 
off£t
, 
Àngth
, 0 );

6272 
	`w_as£π3
(
off£t
 + 
Àngth
 <
_ªc
->
	`body_size
());

6274 
	`w_as£π3
(
_Â
 != 0);

6275 
smsize_t
 
∑geoff£t
= 0;

6276 
smsize_t
 
pö√d_Àngth
 = 0;

6277 
Õid_t
 
pid
 = 
_ªc
->
	`pid_c⁄èöög
(
off£t
, 
∑geoff£t
, *
_Â
);

6280 
pö√d_Àngth
 = 
	`MIN
(((
smsize_t
)
lgd©a_p
::
d©a_sz
),

6281 
_ªc
->
	`body_size
()-
∑geoff£t
);

6283 
∑geoff£t
 = 
off£t
 -Öageoffset;

6287 
	`w_as£π3
(
∑geoff£t
 < 
pö√d_Àngth
);

6288 
	`DBG
(<<"ö body÷¨geË∑geoff£t=" << 
∑geoff£t


6289 << "Öö√dÜígth=" << 
pö√d_Àngth
);

6291 
lgd©a_p
 
lg∑ge
;

6292 
	`W_DO
(
lg∑ge
.
	`fix
(
pid
, 
LATCH_SH
));

6293 
	`INC_STAT_SORT
(
s‹t_lg_∑ge_fixes
);

6296 c⁄° *
body
=0;

6298 
smsize_t
 
vecoff£t
 = 0;

6299 
smsize_t
 
À·
 = 
Àngth
;

6300 
smsize_t
 
thi•¨t
=0;

6301 
À·
 > 0) {

6302 
thi•¨t
 = 
À·
 < (
pö√d_Àngth
-
∑geoff£t
)

6303 ? 
À·
 :

6304 
pö√d_Àngth
 - 
∑geoff£t
;

6306 
	`DBG
(<<"c›y_ouà" << 
∑geoff£t


6307 << " off£t, " << 
thi•¨t
 << " bytes ");

6309 
body
 = (*)
lg∑ge
.
	`tu∂e_addr
(0);

6310 
de°
.
	`c›y_‰om
(
body
 + 
∑geoff£t
, 
thi•¨t
, 
vecoff£t
);

6311 
	`INC_STAT_SORT
(
s‹t_mem˝y_˙t
);

6312 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
thi•¨t
);

6314 
vecoff£t
 +
thi•¨t
;

6315 
À·
 -
thi•¨t
;

6316 
off£t
 +
thi•¨t
;

6318 
lg∑ge
.
	`unfix
();

6319 if(
À·
 > 0) {

6320 
	`w_as£π3
(
_ªc
->
	`is_œrge
());

6321 
	`w_as£π3
(
off£t
 < 
_ªc
->
	`body_size
());

6322 
smsize_t
 
junk
 = 
	`smsize_t
(
lgd©a_p
::
d©a_sz
);

6323 
pö√d_Àngth
 = 
	`MIN
–
junk
, (
_ªc
->
	`body_size
()-
off£t
));

6324 
	`DBG
(<<"c›y_out: off£à" << 
off£t
 );

6325 
Õid_t
 
pid
;

6326 
pid
 = 
_ªc
->
	`pid_c⁄èöög
(
off£t
, 
∑geoff£t
, *
_Â
);

6327 
	`DBG
(<<"PönögÜ¨gê∑gê" << 
pid


6328 << " f‹ obje˘ off£à" << 
off£t


6329 << "áà∑gêoff£à" << 
∑geoff£t
);

6330 
	`W_DO
(
lg∑ge
.
	`fix
(
pid
, 
LATCH_SH
));

6331 
	`INC_STAT_SORT
(
s‹t_lg_∑ge_fixes
);

6332 
∑geoff£t
 = 
off£t
 -Öageoffset;

6333 
	`w_as£π3
(
∑geoff£t
 == 0);

6336 
	`INC_STAT_SORT
(
s‹t_key˝y_˙t
);

6339  
RCOK
;

6340 
	}
}

6342 
smsize_t


6343 
	gobje˘_t
::
	$c⁄tig_body_size
() const

6345 if(
	`is_ö_buf„r_poﬁ
()) {

6346 if(
_ªc
->
	`is_œrge
()) {

6349  
_ªc
->
	`body_size
();

6352  
_bodyÀn
;

6354 
	}
}

6360 
	gskey_t
::
	$_övÆid©e
()

6362 
_vÆid
=
Ál£
;

6363 
_ö_obj
=
Ál£
;

6364 
_obj
=0;

6365 
_Àngth
=0;

6366 
_off£t
=0;

6367 
_ö_hdr
=
Ál£
;

6368 
_Á˘
 = 
Á˘‹y_t
::
n⁄e
;

6369 
_buf
=0;

6370 
	}
}

6373 
	gskey_t
::
	$±r
(
smsize_t
 
off£t
) const

6375 if(
	`is_ö_obj
()) {

6376 if(
_ö_hdr
) {

6377  
_obj
->
	`hdr
(
_off£t
 + 
off£t
);

6379  
_obj
->
	`body
(
_off£t
 + 
off£t
);

6382  (*)((*)(
_buf
Ë+ 
_off£t
 + 
off£t
);

6384 
	}
}

6386 
	gskey_t
::
	$‰ì•a˚
()

6390 if(
_buf
Ë
_Á˘
->
	`‰ìfunc
(_buf, 
_Àngth
);

6391 
_buf
 = 0;

6392 
	}
}

6395 
	gskey_t
::
	$as£π_nobuf„rs
()const

6398 if(
	`is_ö_obj
()) {

6399 
_obj
->
	`as£π_nobuf„rs
();

6401 
	`w_as£π1
(
_buf
 == 0);

6403 
	}
}

6405 
smsize_t


6406 
	gskey_t
::
	$c⁄tig_Àngth
() const

6410 if(
	`is_ö_obj
()) {

6411 
smsize_t
 
ﬁ
 = 0;

6412 if(
_ö_hdr
) {

6413 
ﬁ
 = 
_obj
->
	`hdr_size
();

6415 
ﬁ
 = 
_obj
->
	`c⁄tig_body_size
();

6417 
	`w_as£π3
((
_off£t
 + 
_Àngth
 <
ﬁ
) || ol==0);

6418 if(
ﬁ
 >
_off£t
 + 
_Àngth
) {

6420  
_Àngth
;

6423 
	`w_as£π3
(
ﬁ
==0);

6424  
ﬁ
;

6427  
_Àngth
;

6428 
	}
}

6431 
	gskey_t
::
	$_ª∂a˚
(c⁄° 
skey_t
&
Ÿhî
)

6433 
	`‰ì•a˚
();

6434 
	`as£π_nobuf„rs
();

6435 if(
Ÿhî
.
	`is_ö_obj
()) {

6437 
	`_c⁄°ru˘
(
Ÿhî
.
_obj
, othî.
_off£t
, othî.
_Àngth
, othî.
_ö_hdr
);

6439 
	`_c⁄°ru˘
(
Ÿhî
.
_buf
, othî.
_off£t
, othî.
_Àngth
, othî.
_Á˘
);

6441 
	}
}

6444 
	gskey_t
::
	$_ª∂a˚_ªœtive_to_obj
(c⁄° 
obje˘_t
 &
o
, c⁄° 
skey_t
&
Ÿhî
)

6446 
	`‰ì•a˚
();

6453 if(
Ÿhî
.
	`is_ö_obj
()) {

6455 
	`_c⁄°ru˘
(&
o
, 
Ÿhî
.
_off£t
, othî.
_Àngth
, othî.
_ö_hdr
);

6457 
	`_c⁄°ru˘
(
Ÿhî
.
_buf
, othî.
_off£t
, othî.
_Àngth
, othî.
_Á˘
);

6459 
	}
}

6461 
w_rc_t


6462 
	gskey_t
::
	$c›y_out
(
vec_t
&
de°
) const

6464 
	`w_as£π3
(
	`is_vÆid
());

6465 if(
	`is_ö_obj
()) {

6466 
	`W_DO
(
_obj
->
	`c›y_out
(
_ö_hdr
, 
_off£t
, 
_Àngth
, 
de°
));

6468 
de°
.
	`c›y_‰om
(
	`±r
(0), 
_Àngth
);

6470  
RCOK
;

6471 
	}
}

	@src/sm/page.cpp

53 
	~"w_deföes.h
"

58 
	#SM_SOURCE


	)

59 
	#PAGE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "page.h"

62 #¥agm®
im∂emíèti⁄
 "page_s.h"

63 #¥agm®
im∂emíèti⁄
 "page_h.h"

65 
	~<sm_öt_1.h
>

66 
	~<∑ge.h
>

67 
	~<∑ge_h.h
>

75 
	gw_ba£_t
::
w_ba£_t
::
uöt4_t


76 
∑ge_p
::
	$gë_°‹e_Êags
() const

78  
_µ
->
	`gë_∑ge_°‹eÊags
();

79 
	}
}

82 
	g∑ge_p
::
	$£t_°‹e_Êags
(
w_ba£_t
::
uöt4_t
 
f
)

86 
bfcb_t
 *
b
 = 
bf_m
::
	`gë_cb
(
_µ
);

87 if(
b
 && 
	`is_möe
()) {

88 
b
->
	`£t_°‹eÊags
(
f
);

95 
_µ
->
	`£t_∑ge_°‹eÊags
(
f
);

97 
	}
}

100 "C" 
	$∑ge°›hîe
()

102 
	}
}

112 
ölöe
 
∑ge_s
::
•a˚_t
::
	$_check_ª£rve
()

114 
	`w_as£π3
(
	`rÊag
());

115 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

116 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

117 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

119 i‡(
_tid
 < 
x˘_t
::
	`ﬁde°_tid
()) {

126 
_tid
 = 
	`tid_t
();

127 
_ƒsvd
 = 
_x˘_rsvd
 = 0;

129 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

130 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

131 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

132 
	}
}

143 
∑ge_s
::
•a˚_t
::
	$ußbÀ
(
x˘_t
* 
xd
)

145 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

146 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

147 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

149 i‡(
	`rÊag
()Ë
	`_check_ª£rve
();

150 
avaû
 = 
	`n‰ì
(Ë- 
	`ƒsvd
();

152 i‡(
	`rÊag
()) {

153 if(
xd
) {

154 i‡(
xd
->
	`°©e
(Ë=
smÀvñ_1
::
x˘_ab‹tög
)

159 
avaû
 +
	`ƒsvd
();

160 } i‡(
xd
->
	`tid
(Ë=
_tid
) {

168 
avaû
 +
	`x˘_rsvd
();

170 } i‡(
smÀvñ_0
::
ªdo_tid
 &&

171 *
smÀvñ_0
::
ªdo_tid
 =
_tid
) {

181 
avaû
 +
	`x˘_rsvd
();

184 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

185 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

186 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

188  
avaû
;

189 
	}
}

222 
∑ge_s
::
•a˚_t
::
	$undo_ªÀa£
(
amt
, 
x˘_t
* 
xd
)

224 
	`DBG
(<<"{•a˚_t::undo_ªÀa£ámt=" << 
amt


225 << " _tid=" << 
_tid


226 << "Ç‰ì()=" << 
	`n‰ì
()

227 << "Çrsvd()=" << 
	`ƒsvd
()

228 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

230 
	`w_as£π2
(
	`n‰ì
(Ë>
	`ƒsvd
());

231 
	`w_as£π2
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

232 
	`w_as£π2
(
	`n‰ì
() >= 0);

233 
	`w_as£π2
(
	`x˘_rsvd
() >= 0);

234 
	`w_as£π2
(
	`ƒsvd
() >= 0);

236 
_n‰ì
 -
amt
;

241 
_ƒsvd
 -
amt
;

242 i‡(
xd
 && xd->
	`tid
(Ë=
_tid
)

243 
_x˘_rsvd
 -
amt
;

245 
	`DBG
(<<" s∑˚_t::undo_ªÀa£ámt=" << 
amt


246 << " _tid=" << 
_tid


247 << "Ç‰ì()=" << 
	`n‰ì
()

248 << "Çrsvd()=" << 
	`ƒsvd
()

249 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

252 
	`w_as£π1
(
	`ƒsvd
() >= 0);

253 
	`w_as£π1
(
	`x˘_rsvd
() >= 0);

254 
	`w_as£π1
(
	`n‰ì
() >= 0);

255 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

256 
	`w_as£π1
(
	`n‰ì
(Ë>
	`ƒsvd
());

257 
	}
}

289 
∑ge_s
::
•a˚_t
::
	$undo_acquúe
(
amt
, 
x˘_t
* 
xd
)

291 
	`DBG
(<<"{•a˚_t::undo_acquúêamt=" << 
amt


292 << " _tid=" << 
_tid


293 << "Ç‰ì()=" << 
	`n‰ì
()

294 << "Çrsvd()=" << 
	`ƒsvd
()

295 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

297 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

298 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

299 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

301 
_n‰ì
 +
amt
;

325 i‡(
	`rÊag
(Ë&& 
xd
 && 
_tid
 >xd->
	`tid
())

327 
_ƒsvd
 +
amt
;

329 i‡(
_tid
 =
xd
->
	`tid
())

330 
_x˘_rsvd
 +
amt
;

333 
	`DBG
(<<"•a˚_t::undo_acquúêamt=" << 
amt


334 << " _tid=" << 
_tid


335 << "Ç‰ì()=" << 
	`n‰ì
()

336 << "Çrsvd()=" << 
	`ƒsvd
()

337 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

340 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

341 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

342 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

343 
	}
}

362 
rc_t


363 
∑ge_s
::
•a˚_t
::
	$acquúe
(
amt
, 
¶Ÿ_byãs
, 
x˘_t
* 
xd
,

364 
boﬁ
 
do_ô
 )

367 #ifde‡
W_TRACE


369 
tid_t
 
_tmp
;

370 if(
xd
Ë
_tmp
=xd->
	`tid
();

371 
	`DBG
(<<"{•a˚_t::acquúêamt=" << 
amt
 << " slŸ_byãs=" << 
¶Ÿ_byãs


372 << " _tmp=" << 
_tmp


373 << "Ç‰ì()=" << 
	`n‰ì
()

374 << "Çrsvd()=" << 
	`ƒsvd
()

375 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

376 << " doô=" << 
do_ô


380 
	`w_as£π2
(
	`n‰ì
(Ë>
	`ƒsvd
());

381 
	`w_as£π2
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

382 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

385 if(
do_ô
) if (

386 
	`rÊag
() &&

387 
xd
 &&

388 ((
xd
->
	`°©e
(Ë=
smÀvñ_1
::
x˘_ab‹tög
)

389 || 
smÀvñ_0
::
	`ö_ªcovîy_undo
())

401 
	`undo_ªÀa£
(
amt
, 
xd
);

402 
	`DBG
(<<"ab‹tögÅx -- did undÿªÀa£ o‡" << 
amt
 << "}" );

404 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

405 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

406 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

408  
RCOK
;

411 
avaû
 = 
	`ußbÀ
(
xd
);

412 
tŸÆ
 = 
amt
 + 
¶Ÿ_byãs
;

413 
avaû4¶Ÿs
 = 
	`ußbÀ_f‹_√w_¶Ÿs
();

415 i‡(
avaû
 < 
tŸÆ


416 || 
avaû4¶Ÿs
 < 
¶Ÿ_byãs


420 
	`DBG
(<<"eRECWONTFIT }" );

421 
	`DBG
(<< "•a˚_t::acquúê@ " << 
__LINE__


422 << " :ávaû " << 
avaû


423 << "ámà" << 
amt


424 << "ávaû f‹ slŸ†" << 
avaû4¶Ÿs


425 << " slŸ_byã†" << 
¶Ÿ_byãs
);

426  
	`RC
(
smÀvñ_0
::
eRECWONTFIT
);

428 if–!
do_ô
Ë 
RCOK
;

434 
	`w_as£π1
(
	`n‰ì
(Ë>
tŸÆ
);

435 
_n‰ì
 -
tŸÆ
;

445 i‡(
	`rÊag
(Ë&& 
xd
 && xd->
	`tid
(Ë=
_tid
) {

446 
	`w_as£π1
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

447 i‡(
amt
 > 
	`x˘_rsvd
())

452 
_ƒsvd
 -
	`x˘_rsvd
();

453 
_x˘_rsvd
 = 0;

458 
_ƒsvd
 -
amt
;

459 
_x˘_rsvd
 -
amt
;

463 
	`DBG
(<<" s∑˚_t::acquúêamt=" << 
amt


464 << " slŸ_byãs=" << 
¶Ÿ_byãs


465 << " _tid=" << 
	`tid
()

466 << "Ç‰ì()=" << 
	`n‰ì
()

467 << "Çrsvd()=" << 
	`ƒsvd
()

468 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

472 
	`w_as£π2
(
	`n‰ì
(Ë>
	`ƒsvd
());

473 
	`w_as£π2
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

474 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

475  
RCOK
;

476 
	}
}

503 
∑ge_s
::
•a˚_t
::
	$ªÀa£
(
amt
, 
x˘_t
* 
xd
)

505 
	`DBG
(<<"{•a˚_t::ªÀa£ámt=" << 
amt


506 << " _tid=" << 
_tid


507 << "Ç‰ì()=" << 
	`n‰ì
()

508 << "Çrsvd()=" << 
	`ƒsvd
()

509 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

511 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

512 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

513 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

515 i‡(
	`rÊag
(Ë&& 
xd
 &&

516 (
xd
->
	`°©e
(Ë=
smÀvñ_1
::
x˘_ab‹tög


517 || 
smÀvñ_0
::
	`ö_ªcovîy_undo
()

533 
	`undo_acquúe
(
amt
, 
xd
);

535 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

536 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

537 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

538 
	`DBG
(<< "•a˚_t::ªÀa£ @ " << 
__LINE__


539 << ":Çrsvd(Ë" << 
	`ƒsvd
()

540 << "Ç‰ì(Ë" << 
	`n‰ì
()

541 << "ámà" << 
amt


542 << " x˘_rsvd(Ë" << 
	`x˘_rsvd
());

547 i‡(
	`rÊag
()Ë
	`_check_ª£rve
();

548 
_n‰ì
 +
amt
;

549 i‡(
	`rÊag
()) {

550 i‡(
xd
) {

551 
_ƒsvd
 +
amt
;

552 i‡–
_tid
 =
xd
->
	`tid
()) {

554 
_x˘_rsvd
 +
amt
;

555 } i‡–
_tid
 < 
xd
->
	`tid
() ) {

557 
_tid
 = 
xd
->
	`tid
();

559 
_x˘_rsvd
 = 
amt
;

563 
	`DBG
(<<"•a˚_t::ªÀa£ámt=" << 
amt


564 << " _tid=" << 
_tid


565 << "Ç‰ì()=" << 
	`n‰ì
()

566 << "Çrsvd()=" << 
	`ƒsvd
()

567 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

569 
	`w_as£π3
(
	`n‰ì
(Ë>
	`ƒsvd
());

570 
	`w_as£π3
(
	`ƒsvd
(Ë>
	`x˘_rsvd
());

571 
	`w_as£π1
(
	`n‰ì
(Ë>0 && 
	`ƒsvd
(Ë>0 && 
	`x˘_rsvd
() >= 0);

572 
	}
}

596 
∑ge_p
::
	$ª∑ú_ªc_l¢
(
boﬁ
 
was_dúty
, 
l¢_t
 c⁄° &
√w_æ¢
) {

597 
bfcb_t
* 
bp
 = 
bf_m
::
	`gë_cb
(
_µ
);

598 c⁄° 
l¢_t
 &
ªc_l¢
 = 
bp
->
	`cuº_ªc_l¢
();

599 
	`w_as£π2
(
	`is_œtched_by_me
());

600 
	`w_as£π2
(
	`is_möe
());

601 if(
was_dúty
) {

603 
	`w_as£π0
(
ªc_l¢
 <
	`l¢
());

606 
	`w_as£π0
(
ªc_l¢
 > 
	`l¢
());

607 if(
√w_æ¢
.
	`vÆid
()) {

608 
	`w_as£π0
(
√w_æ¢
 <
	`l¢
());

609 
	`w_as£π2
(
bp
->
	`dúty
());

610 
bp
->
	`£t_ªc_l¢
(
√w_æ¢
);

611 
	`INC_TSTAT
(
ª°¨t_ª∑ú_ªc_l¢
);

614 
bp
->
	`m¨k_˛ón
();

617 
	}
}

627 
∑ge_p
::
	$èg_«me
(
èg_t
 
t
)

629 
t
) {

630 
t_exéök_p
:

632 
t_°node_p
:

634 
t_keyed_p
:

636 
t_båì_p
:

638 
t_πªe_p
:

640 
t_fûe_p
:

642 
t_ønges_p
:

644 
t_fûe_mrbt_p
:

647 
	`W_FATAL
(
eINTERNAL
);

650 
	`W_FATAL
(
eINTERNAL
);

652 
	}
}

668 
rc_t


669 
∑ge_p
::
	$_f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

670 
uöt4_t
 
∑ge_Êags
,

671 
°‹e_Êag_t


674 
uöt4_t
 
sf
;

676 
	`w_as£π3
((
∑ge_Êags
 & ~
t_vúgö
) == 0);

680 
	`w_as£π3
(
	`is_Æig√d
(
d©a_sz
));

681 
	`w_as£π3
(
	`is_Æig√d
(
_µ
->
	`d©a
() - (*) _pp));

682 
	`w_as£π3
((
∑ge_s
Ë=
∑ge_sz
);

683 
	`w_as£π3
(
	`is_Æig√d
(
_µ
->
	`d©a
()));

704 
sf
 = 
_µ
->
	`gë_∑ge_°‹eÊags
();

705 #i‡
	`deföed
(
SM_FORMAT_WITH_GARBAGE
Ë|| deföed(
ZERO_INIT
)

710 
	`mem£t
(
_µ
, '\017', (*_pp));

714 
this
->
	`£t_°‹e_Êags
(
sf
);

717 #i‡
W_DEBUG_LEVEL
 > 2

719 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_ö_undo
)

721 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_f‹w¨d_¥o˚ssög
)

723 
	`w_as£π3
(
sf
 !
°_bad
);

748 
l¢_t
 
l
 = 
	`l¢_t
(0, 1);

749 
x˘_t
 *
xd
 = 
	`x˘
();

755 if(
xd
) {

756 
l
 = 
xd
->
	`œ°_l¢
();

757 
	`w_as£π2
(
l
.
	`vÆid
(Ë|| !
log
);

759 #i‡
W_DEBUG_LEVEL
 > 1

760 if(
sf
 =
°_tmp
)

763 
	`w_as£π2
(
l
.
	`vÆid
(Ë|| !
log
);

765 if(!
l
.
	`vÆid
()) {

766 
	`w_as£π2
–
xd
 =
NULL
 || !
log
 );

770 
_µ
->
l¢1
 = _µ->
l¢2
 = 
l
;

771 
_µ
->
pid
 =Öid;

772 
_µ
->
√xt
 = _µ->
¥ev
 = 0;

773 
_µ
->
∑ge_Êags
 =Öage_flags;

774 
	`w_as£π3
(
èg
 !
t_bad_p
);

775 
_µ
->
èg
 =Åag;

776 
_µ
->
•a˚
.
	`öô_•a˚_t
(
d©a_sz
 + 2*(
¶Ÿ_t
), 
	`rsvd_mode
() != 0);

777 
_µ
->
íd
 = _µ->
n¶Ÿs
 = _µ->
nvaˇ¡
 = 0;

780 if(
_µ
->
èg
 !
t_fûe_p
 || _µ->èg !
t_fûe_mrbt_p
) {

787 
∑ge_buckë_öfo
.
	`nocheck√˚sßry
();

790  
RCOK
;

791 
	}
}

810 
rc_t


811 
∑ge_p
::
	$_fix
(

812 
boﬁ
 
c⁄dl
,

813 c⁄° 
Õid_t
& 
pid
,

814 
èg_t
 
±ag
,

815 
œtch_mode_t
 
m
,

816 
uöt4_t
 
∑ge_Êags
,

817 
°‹e_Êag_t
& 
°‹e_Êags
,

818 
boﬁ
 
ign‹e_°‹e_id
,

819 
ªfbô
)

821 
	`w_as£π3
(!
_µ
 || 
bf
->
	`is_bf_∑ge
(_µ, 
Ál£
));

822 
°‹e_Êag_t
 
ªt_°‹e_Êags
 = 
°‹e_Êags
;

832 i‡(
°‹e_Êags
 & 
°_ö£π_fûe
) {

833 
°‹e_Êags
 = (
°‹e_Êag_t
Ë(°‹e_Êags|
°_tmp
);

837 
	`w_as£π1
((
∑ge_Êags
 & ~
t_vúgö
) == 0);

839 i‡(
_µ
 && _µ->
pid
 ==Öid) {

840 if(
_mode
 >
m
) {

844 } if(
m
 =
LATCH_NLX
) {

845 
bf
->
	`unfix
(
_µ
, 
Ál£
, 
_ªfbô
);

846 
	`W_DO
–
bf
->
	`fix
(
_µ
, 
pid
, 
±ag
, 
m
,

847 (
∑ge_Êags
 & 
t_vúgö
) != 0,

848 
ªt_°‹e_Êags
,

849 
ign‹e_°‹e_id
, 
°‹e_Êags
) );

850 } if(
c⁄dl
) {

851 
boﬁ
 
would_block
 = 
Ál£
;

852 
bf
->
	`upgøde_œtch_if_nŸ_block
(
_µ
, 
would_block
);

853 if(
would_block
)

854  
	`RC
(
°hªad_t
::
°INUSE
);

855 
	`w_as£π2
(
_µ
 && 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

856 
_mode
 = 
bf
->
	`œtch_mode
(
_µ
);

862 
bf
->
	`upgøde_œtch
(
_µ
, 
m
);

863 
	`w_as£π2
(
_µ
 && 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

864 
_mode
 = 
bf
->
	`œtch_mode
(
_µ
);

865 
	`w_as£π3
(
_mode
 >
m
);

872 i‡(
_µ
) {

878 
	`W_DO
(
	`upd©e_buckë_öfo
());

879 
bf
->
	`unfix
(
_µ
, 
Ál£
, 
_ªfbô
);

880 
_µ
 = 0;

884 if(
c⁄dl
) {

885 
	`W_DO
–
bf
->
	`c⁄dôi⁄Æ_fix
(
_µ
, 
pid
, 
±ag
, 
m
,

886 (
∑ge_Êags
 & 
t_vúgö
) != 0,

887 
ªt_°‹e_Êags
,

888 
ign‹e_°‹e_id
, 
°‹e_Êags
) );

889 
	`w_as£π2
(
_µ
 && 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

891 
	`W_DO
–
bf
->
	`fix
(
_µ
, 
pid
, 
±ag
, 
m
,

892 (
∑ge_Êags
 & 
t_vúgö
) != 0,

893 
ªt_°‹e_Êags
,

894 
ign‹e_°‹e_id
, 
°‹e_Êags
) );

895 
	`w_as£π2
(
_µ
 && 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

898 #i‡
W_DEBUG_LEVEL
 > 2

899 if–(
∑ge_Êags
 & 
t_vúgö
) != 0 ) {

901 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_ö_undo
)

903 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_f‹w¨d_¥o˚ssög
)

905 
	`w_as£π3
(
ªt_°‹e_Êags
 !
°_bad
);

908 
_mode
 = 
bf
->
	`œtch_mode
(
_µ
);

909 
	`w_as£π3
(
_mode
 >
m
);

912 
_ªfbô
 = 
ªfbô
;

920 
	`öô_buckë_öfo
(
±ag
, 
∑ge_Êags
);

921 
	`w_as£π3
(
_mode
 >
m
);

922 
°‹e_Êags
 = 
ªt_°‹e_Êags
;

924 
	`w_as£π2
(
	`is_fixed
());

925 
	`w_as£π2
(
_µ
 && 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

926  
RCOK
;

927 
	}
}

929 
boﬁ


930 
∑ge_p
::
	$is_œtched_by_me
() const

932  
_µ
 ? 
bf
->
	`fixed_by_me
(_µË: 
Ál£
;

933 
	}
}

935 c⁄° 
œtch_t
 *

936 
∑ge_p
::
	$my_œtch
() const

938  
_µ
 ? 
bf
->
	`my_œtch
(_µË: 
NULL
;

939 
	}
}

941 
boﬁ


942 
∑ge_p
::
	$is_möe
() const

944  
_µ
 ? 
bf
->
	`is_möe
(_µË: 
Ál£
;

945 
	}
}

947 
rc_t


948 
∑ge_p
::
	$fix
(

949 c⁄° 
Õid_t
& 
pid
,

950 
èg_t
 
±ag
,

951 
œtch_mode_t
 
mode
,

952 
uöt4_t
 
∑ge_Êags
,

953 
°‹e_Êag_t
& 
°‹e_Êags
,

954 
boﬁ
 
ign‹e_°‹e_id
,

955 
ªfbô


958  
	`_fix
(
Ál£
, 
pid
, 
±ag
, 
mode
, 
∑ge_Êags
, 
°‹e_Êags
,

959 
ign‹e_°‹e_id
, 
ªfbô
);

960 
	}
}

962 
rc_t


963 
∑ge_p
::
	$c⁄dôi⁄Æ_fix
(

964 c⁄° 
Õid_t
& 
pid
,

965 
èg_t
 
±ag
,

966 
œtch_mode_t
 
mode
,

967 
uöt4_t
 
∑ge_Êags
,

968 
°‹e_Êag_t
& 
°‹e_Êags
,

969 
boﬁ
 
ign‹e_°‹e_id
,

970 
ªfbô


973  
	`_fix
(
åue
, 
pid
, 
±ag
, 
mode
, 
∑ge_Êags
, 
°‹e_Êags
,

974 
ign‹e_°‹e_id
, 
ªfbô
);

975 
	}
}

986 
rc_t


987 
∑ge_p
::
	$lök_up
(
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
)

992 
	`W_DO
–
	`log_∑ge_lök
(*
this
, 
√w_¥ev
, 
√w_√xt
) );

997 
_µ
->
¥ev
 = 
√w_¥ev
, _µ->
√xt
 = 
√w_√xt
;

999  
RCOK
;

1000 
	}
}

1034 
rc_t


1035 
∑ge_p
::
	$m¨k_‰ì
(
¶Ÿid_t
 
idx
)

1040 
	`w_as£π1
–
	`rsvd_mode
() );

1045 
	`w_as£π2
–
	`ö_ªcovîy_ªdo
(Ë|| 
	`x˘
() );

1050 #i‡
W_DEBUG_LEVEL
 > 0

1051 i‡(!(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
) ) {

1054 
w_o°r°ªam
 
s
;

1055 
s
 << " slŸ " << 
idx


1056 << " #∑ge†¶Ÿ†" << 
_µ
->
n¶Ÿs


1057 << "Öagê" << 
_µ
->
pid


1058 << "Åag " << 
	`èg
()

1059 << "Öagêl¢ " << 
_µ
->
l¢1


1061 
	`Ârötf
(
°dîr
, "Bogu†m¨k fªe: %s\n", 
s
.
	`c_°r
());

1065 
	`w_as£π1
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

1066 
	`w_as£π1
(
_µ
->
	`¶Ÿ
(
idx
).
off£t
 >= 0);

1086 if(
idx
 =0 && (
	`èg
(Ë=
t_fûe_p
 ||Åag(Ë=
t_fûe_mrbt_p
))

1088 
	`w_as£π1
(
	`œtch_mode
(Ë=
LATCH_EX
 ||Ü©ch_mode(Ë=
LATCH_NLX
);

1095 if(
_µ
->
n¶Ÿs
 - _µ->
nvaˇ¡
 > 1 ) {

1097  
RCOK
;

1105 
	`W_DO
–
	`log_∑ge_m¨k
(*
this
, 
idx
) );

1112 
_µ
->
•a˚
.
	`ªÀa£
((
	`Æign
(_µ->
	`¶Ÿ
(
idx
).
Àngth
)), 
	`x˘
());

1113 
_µ
->
	`¶Ÿ
(
idx
).
Àngth
 = 0;

1114 
_µ
->
	`¶Ÿ
(
idx
).
off£t
 = -1;

1115 ++
_µ
->
nvaˇ¡
;

1117  
RCOK
;

1118 
	}
}

1134 
rc_t


1135 
∑ge_p
::
	$ª˛aim
(
¶Ÿid_t
 
idx
, c⁄° 
cvec_t
& 
vec
, 
boﬁ
 
log_ô
)

1137 #ifde‡
W_TRACE


1139 
x˘_t
* 
xd
 = 
	`x˘
();

1140 
tid_t
 
_tid
;

1141 if(
xd
Ë
_tid
=xd->
	`tid
();

1142 
	`DBG
(<<"{ª˛aim idx=" << 
idx
 << " vec.size=" << 
vec
.
	`size
()

1143 << " _tid=" << 
_tid


1144 << "Ç‰ì()=" << 
	`n‰ì
()

1145 << "Çrsvd()=" << 
	`ƒsvd
()

1146 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

1155 
	`w_as£π1
–
	`rsvd_mode
() );

1160 
	`w_as£π1
(
idx
 >0 && idx <
_µ
->
n¶Ÿs
);

1166 
smsize_t
 
√ed
 = 
	`Æign
(
vec
.
	`size
());

1167 
smsize_t
 
√ed_¶Ÿs
 = (
idx
 =
_µ
->
n¶Ÿs
Ë? (
¶Ÿ_t
) : 0;

1172 
	`W_DO
(
_µ
->
•a˚
.
	`acquúe
(
√ed
, 
√ed_¶Ÿs
, 
	`x˘
()));

1176 
	`W_DO
(
	`upd©e_buckë_öfo
());

1179 if(
log_ô
) {

1183 
w_rc_t
 
rc
 = 
	`log_∑ge_ª˛aim
(*
this
, 
idx
, 
vec
);

1184 i‡(
rc
.
	`is_îr‹
()) {

1189 
_µ
->
•a˚
.
	`undo_acquúe
(
√ed
, 
	`x˘
());

1193 
	`W_COERCE
(
	`upd©e_buckë_öfo
());

1195 
	`DBG
(<<"logÖagêª˛aim faûedáàlöê" << 
__LINE__
 );

1196  
	`RC_AUGMENT
(
rc
);

1209 i‡(
	`c⁄tig_•a˚
(Ë< 
√ed
 + 
√ed_¶Ÿs
) {

1213 
	`_com¥ess
((
idx
 =
_µ
->
n¶Ÿs
 ? -1 : idx));

1215 
	`w_as£π1
(
	`c⁄tig_•a˚
(Ë>
√ed
 + 
√ed_¶Ÿs
);

1217 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

1218 i‡(
idx
 =
_µ
->
n¶Ÿs
) {

1222 
_µ
->
n¶Ÿs
++;

1227 
	`w_as£π1
(
s
.
Àngth
 == 0);

1228 
	`w_as£π1
(
s
.
off£t
 == -1);

1229 
	`w_as£π1
(
_µ
->
nvaˇ¡
 > 0);

1230 --
_µ
->
nvaˇ¡
;

1237 * 
èrgë
 = 
_µ
->
	`d©a
(Ë+ (
s
.
off£t
 = _µ->
íd
);

1238 
	`w_as£π3
((
ˇddr_t
)(
èrgë
 + 
vec
.
	`size
()) <=

1239 (
ˇddr_t
)&
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
-1));

1240 
vec
.
	`c›y_to
(
èrgë
);

1241 
_µ
->
íd
 +(
	`Æign
–(
s
.
Àngth
 = 
vec
.
	`size
()) ));

1243 
	`W_IFDEBUG3
(
	`W_COERCE
(
	`check
()));

1245 #ifde‡
W_TRACE


1247 
x˘_t
* 
xd
 = 
	`x˘
();

1248 
tid_t
 
_tid
;

1249 if(
xd
Ë
_tid
=xd->
	`tid
();

1250 
	`DBG
(<<"Ñe˛aim idx=" << 
idx
 << " vec.size=" << 
vec
.
	`size
()

1251 << " _tid=" << 
_tid


1252 << "Ç‰ì()=" << 
	`n‰ì
()

1253 << "Çrsvd()=" << 
	`ƒsvd
()

1254 << " x˘_rsvd()=" << 
	`x˘_rsvd
()

1260  
RCOK
;

1261 
	}
}

1275 
rc_t


1276 
∑ge_p
::
	$föd_¶Ÿ
(
uöt4_t
 
•a˚_√eded
,

1277 
¶Ÿid_t
& 
ªt_idx
, slŸid_à
°¨t_£¨ch
)

1286 
	`w_as£π1
–
	`rsvd_mode
() );

1294 i‡–
	`ußbÀ_•a˚
(Ë< 
•a˚_√eded


1296 
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë< (
¶Ÿ_t
) )

1298  
	`RC
(
eRECWONTFIT
);

1306 
	`W_DO
(
	`upd©e_buckë_öfo
());

1312 
¶Ÿid_t
 
idx
 = 
_µ
->
n¶Ÿs
;

1313 i‡(
_µ
->
nvaˇ¡
) {

1314 
¶Ÿid_t
 
i
 = 
°¨t_£¨ch
; i < 
_µ
->
n¶Ÿs
; ++i) {

1315 i‡(
_µ
->
	`¶Ÿ
(
i
).
off£t
 == -1) {

1316 
	`w_as£π3
(
_µ
->
	`¶Ÿ
(
i
).
Àngth
 == 0);

1317 
idx
 = 
i
;

1325 
	`w_as£π2
(
idx
 > 0);

1326 
	`w_as£π3
(
idx
 <
_µ
->
n¶Ÿs
);

1328 
ªt_idx
 = 
idx
;

1332 if(
idx
 =
_µ
->
n¶Ÿs
) {

1333 i‡–
	`ußbÀ_•a˚
(Ë< 
•a˚_√eded
 + (
¶Ÿ_t
) )

1335  
	`RC
(
eRECWONTFIT
);

1339  
RCOK
;

1340 
	}
}

1342 
rc_t


1343 
∑ge_p
::
	$√xt_¶Ÿ
(

1344 
uöt4_t
 
•a˚_√eded
,

1345 
¶Ÿid_t
& 
ªt_idx


1351 
	`w_as£π1
–
	`rsvd_mode
() );

1360 i‡–
	`ußbÀ_•a˚_f‹_¶Ÿs
(Ë< (
¶Ÿ_t
) ||

1361 
	`ußbÀ_•a˚
(Ë< 
•a˚_√eded
)

1363  
	`RC
(
eRECWONTFIT
);

1370 
¶Ÿid_t
 
idx
 = 
_µ
->
n¶Ÿs
;

1371 i‡(
_µ
->
nvaˇ¡
) {

1374 
i
 = 
_µ
->
n¶Ÿs
-1; i>=0; i--) {

1375 i‡(
_µ
->
	`¶Ÿ
(
i
).
off£t
 == -1) {

1376 
	`w_as£π3
(
_µ
->
	`¶Ÿ
(
i
).
Àngth
 == 0);

1378 
idx
 = 
i
+1;

1384 
	`w_as£π3
(
idx
 >0 && idx <
_µ
->
n¶Ÿs
);

1385 
ªt_idx
 = 
idx
;

1389 if(
idx
 =
_µ
->
n¶Ÿs
) {

1390 i‡–
	`ußbÀ_•a˚
(Ë< 
•a˚_√eded
 + (
¶Ÿ_t
) )

1392  
	`RC
(
eRECWONTFIT
);

1396  
RCOK
;

1397 
	}
}

1418 
rc_t


1419 
∑ge_p
::
	$ö£π_ex∑nd
(
¶Ÿid_t
 
idx
, 
˙t
, c⁄° 
cvec_t
 *
vec
,

1420 
boﬁ
 
log_ô
, boﬁ 
do_ô
)

1422 
	`w_as£π1
(! 
	`rsvd_mode
() );

1423 
	`w_as£π1
(
idx
 >0 && idx <
_µ
->
n¶Ÿs
);

1424 
	`w_as£π1
(
˙t
 > 0);

1429 
uöt
 
tŸÆ
 = 0;

1430 
i
;

1431 
i
 = 0; i < 
˙t
; i++) {

1432 
tŸÆ
 +(
	`Æign
(
vec
[
i
].
	`size
()Ë+ (
¶Ÿ_t
));

1438 
	`DBG
(<<"∑ge_p::ö£π_ex∑nd idx=" << 
idx


1439 << " c¡=" << 
˙t
 << "Üog_ô " << 
log_ô


1440 << " do_ô " << 
do_ô
);

1441 
	`W_DO
–
_µ
->
•a˚
.
	`acquúe
(
tŸÆ
, 0, 
	`x˘
(), 
do_ô
) );

1442 if(! 
do_ô
Ë 
RCOK
;

1444 
	`w_as£π3
(! 
	`rsvd_mode
() );

1452 if(
log_ô
) {

1456 
rc_t
 
rc
 = 
	`log_∑ge_ö£π
(*
this
, 
idx
, 
˙t
, 
vec
);

1457 i‡(
rc
.
	`is_îr‹
()) {

1461 
	`DBG
(<<"page_p::insert_expand manuallyÑelease spaceácquired");

1462 
_µ
->
•a˚
.
	`undo_acquúe
(
tŸÆ
, 
	`x˘
());

1463  
	`RC_AUGMENT
(
rc
);

1472 i‡(
	`c⁄tig_•a˚
(Ë< 
tŸÆ
) {

1476 
	`_com¥ess
();

1477 
	`w_as£π3
(
	`c⁄tig_•a˚
(Ë>
tŸÆ
);

1480 i‡(
idx
 !
_µ
->
n¶Ÿs
) {

1484 
	`memmove
(&
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
 + 
˙t
 - 1),

1485 &
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
 - 1),

1486 (
_µ
->
n¶Ÿs
 - 
idx
Ë* (
¶Ÿ_t
));

1492 
¶Ÿ_t
* 
p
 = &
_µ
->
	`¶Ÿ
(
idx
);

1493 
i
 = 0; i < 
˙t
; i++, 
p
--) {

1494 
p
->
off£t
 = 
_µ
->
íd
;

1495 
p
->
Àngth
 = 
vec
[
i
].
	`c›y_to
(
_µ
->
	`d©a
(Ë+Ö->
off£t
);

1496 
_µ
->
íd
 +(
	`Æign
(
p
->
Àngth
));

1499 
_µ
->
n¶Ÿs
 +
˙t
;

1501 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1503  
RCOK
;

1504 
	}
}

1520 
rc_t


1521 
∑ge_p
::
	$ªmove_com¥ess
(
¶Ÿid_t
 
idx
, 
˙t
)

1523 
	`w_as£π1
(! 
	`rsvd_mode
() );

1524 
	`w_as£π1
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

1525 
	`w_as£π1
(
˙t
 > 0 && c¡ + 
idx
 <
_µ
->
n¶Ÿs
);

1527 #i‡
W_DEBUG_LEVEL
 > 2

1528 
ﬁd_num_¶Ÿs
 = 
_µ
->
n¶Ÿs
;

1534 
	`W_DO
–
	`log_∑ge_ªmove
(*
this
, 
idx
, 
˙t
) );

1539 
¶Ÿ_t
* 
p
 = &
_µ
->
	`¶Ÿ
(
idx
);

1540 
¶Ÿ_t
* 
q
 = &
_µ
->
	`¶Ÿ
(
idx
 + 
˙t
);

1541 
amt_‰ìd
 = 0;

1542  ; 
p
 !
q
;Ö--) {

1543 
	`w_as£π3
(
p
->
Àngth
 < 
∑ge_s
::
d©a_sz
+1);

1544 
amt_‰ìd
 +(
	`Æign
(
p
->
Àngth
Ë+ (
¶Ÿ_t
));

1550 
p
 = &
_µ
->
	`¶Ÿ
(
idx
);

1551 
q
 = &
_µ
->
	`¶Ÿ
(
idx
 + 
˙t
);

1552 
¶Ÿ_t
* 
e
 = &
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
); 
q
 !e; 
p
--, q--) *p = *q;

1553 
_µ
->
n¶Ÿs
 -
˙t
;

1558 
_µ
->
•a˚
.
	`ªÀa£
(
amt_‰ìd
, 
	`x˘
());

1561 #i‡
W_DEBUG_LEVEL
 > 2

1562 
	`W_COERCE
(
	`check
());

1565 
	`w_as£π3
(
ﬁd_num_¶Ÿs
 - 
˙t
 =
_µ
->
n¶Ÿs
);

1567  
RCOK
;

1568 
	}
}

1578 
rc_t


1579 
∑ge_p
::
	$£t_byã
(
¶Ÿid_t
 
idx
, 
u_ch¨
 
bôs
, 
logiˇl_›î©i⁄
 
›
)

1581 
	`w_as£π3
(
	`œtch_mode
(Ë=
LATCH_EX
 ||Ü©ch_mode(Ë=
LATCH_NLX
);

1585 
u_ch¨
* 
p
 = (u_ch¨*Ë
	`tu∂e_addr
(0Ë+ 
idx
;

1592 
	`W_DO
–
	`log_∑ge_£t_byã
(*
this
, 
idx
, *
p
, 
bôs
, 
›
) );

1594 
›
) {

1595 
l_n⁄e
:

1598 
l_£t
:

1599 *
p
 = 
bôs
;

1602 
l_™d
:

1603 *
p
 = (*∞& 
bôs
);

1606 
l_‹
:

1607 *
p
 = (*∞| 
bôs
);

1610 
l_x‹
:

1611 *
p
 = (*∞^ 
bôs
);

1614 
l_nŸ
:

1615 *
p
 = (*∞& ~
bôs
);

1619  
RCOK
;

1620 
	}
}

1631 
rc_t


1632 
∑ge_p
::
	$•li˚
(
¶Ÿid_t
 
idx
, 
˙t
, 
•li˚_öfo_t
 
öfo
[])

1634 
	`DBGTHRD
(<<"∑ge_p::•li˚ idx=" << 
idx
 << " c¡=" << 
˙t
);

1635 
i
 = 
˙t
; i >= 0; i--) {

1637 
	`W_COERCE
(
	`•li˚
(
idx
, 
öfo
[
i
].
°¨t
, info[i].
Àn
, info[i].
d©a
));

1639  
RCOK
;

1640 
	}
}

1659 
rc_t


1660 
∑ge_p
::
	$•li˚
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
, c⁄° 
cvec_t
& 
vec
)

1662 
	`FUNC
(
∑ge_p
::
•li˚
);

1663 
	`DBGTHRD
(<<"{∑ge_p::•li˚ idx=" << 
idx


1664 << " sèπ=" << 
°¨t


1665 << "Üí=" << 
Àn


1667 
vecsz
 = 
vec
.
	`size
();

1668 
	`w_as£π1
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

1669 
	`w_as£π1
(
vecsz
 >= 0);

1673 i‡((
idx
==0Ë&& (
	`pid
().
∑ge
 == 1))

1675 
	`cou¡
(0);

1676 
cou¡
++;

1677 
	`DBGTHRD
(<< "cou¡ " << 
cou¡
);

1680 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

1684 #i‡
W_DEBUG_LEVEL
 > 1

1685 if((
°¨t
 + 
Àn
 <
s
.
Àngth
)==
Ál£
) {

1686 
˚º
 << "Assertion failure onÖage "

1687 << 
_µ
->
pid


1688 << "l¢ " <<
_µ
->
l¢1


1689 << "s.Àngth " << 
s
.
Àngth


1690 << "bu‡°¨à+Üí = " << 
°¨t
 + 
Àn


1691 << 
ídl
;

1694 
	`w_as£π1
(
°¨t
 + 
Àn
 <
s
.
Àngth
);

1700 
√ed
 = 
vecsz
 - 
Àn
;

1701 
adju°mít
 = (
	`Æign
(
s
.
Àngth
 + 
√ed
) -álign(s.length));

1703 i‡(
adju°mít
 > 0) {

1707 
	`DBG
(<<"•a˚.acquúêadju°mít=" << 
adju°mít
 );

1708 
	`W_DO
(
_µ
->
•a˚
.
	`acquúe
(
adju°mít
, 0, 
	`x˘
()));

1709 if(
	`rsvd_mode
()) {

1710 
	`W_DO
(
	`upd©e_buckë_öfo
());

1725 
oßve
=
Àn
, 
nßve
=
vec
.
	`size
();

1726 
boﬁ
 
zî€s_found
=
Ál£
;

1728 
	`DBG
(

1729 <<"°¨t=" << 
°¨t


1730 <<"Üí=" << 
Àn


1731 <<" vec.sizê" << 
nßve


1733 if(
vec
.
	`is_zvec
()) {

1734 
	`DBG
(<<"•li˚ i¿" << 
vec
.
	`size
() << " zeroes");

1735 
nßve
 = 0; 
zî€s_found
 = 
åue
;

1743 
	#FUDGE
 0

	)

1745 i‡((
size_t
)
Àn
 > 
FUDGE
 + (2 * (
öt2_t
))) {

1746 *
c
;

1747 
l
;

1748 
l
 = 
Àn
, 
c
 = (*)
	`tu∂e_addr
(
idx
)+
°¨t
;

1749 
l
 > 0 && *
c
++ == '\0';Ü--)

1752 
	`DBG
(<<"ﬁd d©®¨ê0 u∞tÿbyã " << 
Àn
 - 
l


1753 << "Ü = " << 
l


1754 << "Üí = " << 
Àn


1756 if(
l
==0) {

1757 
oßve
 = 0;

1758 
zî€s_found
 = 
åue
;

1761 
	`w_as£π3
(
Àn
 <
smÀvñ_0
::
∑ge_sz
);

1766 
rc_t
 
rc
;

1768 if(
zî€s_found
) {

1769 
	`DBG
(<<"Z spliceávoid saving old="

1770 << (
Àn
 - 
oßve
)

1772 << (
vec
.
	`size
()-
nßve
));

1773 
rc
 = 
	`log_∑ge_•li˚z
(*
this
, 
idx
, 
°¨t
, 
Àn
, 
oßve
, 
nßve
, 
vec
);

1775 
	`DBG
(<<"log s∂i˚ idx=" << 
idx
 << " sèπ=" << 
°¨t


1776 << "Üí=" << 
Àn
 );

1777 
rc
 = 
	`log_∑ge_•li˚
(*
this
, 
idx
, 
°¨t
, 
Àn
, 
vec
);

1779 i‡(
rc
.
	`is_îr‹
()) {

1780 
	`DBG
(<<"LOG FAILUREÑc=" << 
rc
 );

1784 i‡(
adju°mít
 > 0) {

1785 
_µ
->
•a˚
.
	`undo_acquúe
(
adju°mít
, 
	`x˘
());

1786 if(
	`rsvd_mode
()) {

1787 
	`W_DO
(
	`upd©e_buckë_öfo
());

1790  
	`RC_AUGMENT
(
rc
);

1792 
	`DBGTHRD
(<<"adju°míà=" << 
adju°mít
);

1794 i‡(
adju°mít
 == 0) {

1797 } i‡(
adju°mít
 < 0) {

1801 
	`DBG
(<<"ªÀa£:ádju°mít=" << 
adju°mít
 );

1802 
_µ
->
•a˚
.
	`ªÀa£
(-
adju°mít
, 
	`x˘
());

1803 if(
	`rsvd_mode
()) {

1804 
	`W_DO
(
	`upd©e_buckë_öfo
());

1807 } i‡(
adju°mít
 > 0) {

1812 
	`w_as£π3
(
√ed
 > 0);

1813 i‡(
	`c⁄tig_•a˚
(Ë< (
uöt
)
adju°mít
) {

1817 
	`_com¥ess
(
idx
);

1818 
	`w_as£π1
(
	`c⁄tig_•a˚
(Ë>(
uöt
)
adju°mít
);

1824 i‡(
s
.
off£t
 + 
∑ge_s
::
	`¶Ÿ_off£t_t
(
	`Æign
(s.
Àngth
)Ë=
_µ
->
íd
) {

1828 } i‡(
	`c⁄tig_•a˚
(Ë> 
	`Æign
(
s
.
Àngth
 + 
√ed
)) {

1832 
	`mem˝y
(
_µ
->
	`d©a
(Ë+ _µ->
íd
,

1833 
_µ
->
	`d©a
(Ë+ 
s
.
off£t
, s.
Àngth
);

1834 
s
.
off£t
 = 
_µ
->
íd
;

1835 
_µ
->
íd
 +(
	`Æign
(
s
.
Àngth
));

1841 
	`_com¥ess
(
idx
);

1845 
_µ
->
íd
 +
adju°mít
;

1851 * 
p
 = 
_µ
->
	`d©a
(Ë+ 
s
.
off£t
;

1852 i‡(
√ed
 && (
s
.
Àngth
 !
°¨t
 + 
Àn
)) {

1862 
di°™˚_moved
 = 
√ed
;

1863 
amou¡_moved
 = 
s
.
Àngth
 - 
°¨t
 - 
Àn
;

1865 
	`w_as£π1
(
amou¡_moved
 > 0);

1867 if(
di°™˚_moved
 > 0 && (
amou¡_moved
 > distance_moved)) {

1873 
chunksize
 = 
di°™˚_moved
;

1874 
amt2move
 = 
amou¡_moved
;

1875 *
‰om
 = ((
p
 + 
°¨t
 + 
Àn
Ë+ 
amt2move
Ë- 
chunksize
;

1876 *
to

‰om
 + 
di°™˚_moved
;

1878 
amt2move
 > 0) {

1879 
	`w_as£π1
(
amt2move
 > 0);

1880 
	`w_as£π1
(
chunksize
 > 0);

1881 
	`DBG
(<<"c›yög " << 
chunksize


1882 << "ámàÀ·=" << 
amt2move


1883 << " from =" << 
	`W_ADDR
(
‰om
)

1884 << "Åÿ=" << 
	`W_ADDR
(
to
)

1886 
	`mem˝y
(
to
, 
‰om
, 
chunksize
);

1887 
amt2move
 -
chunksize
;

1888 
chunksize
 = 
amt2move
 > chunksize ? chunksize :ámt2move;

1889 
to
 -
chunksize
;

1890 
‰om
 -
chunksize
;

1892 
	`w_as£π3
(
amt2move
 == 0);

1898 
	`mem˝y
(
p
 + 
°¨t
 + 
Àn
 + 
di°™˚_moved
,

1899 
p
 + 
°¨t
 + 
Àn
,

1900 
amou¡_moved
);

1903 i‡(
vecsz
 > 0) {

1904 
	`w_as£π3
(()(
s
.
off£t
 + 
°¨t
 + 
vec
.
	`size
(Ë<
d©a_sz
));

1906 
	`w_as£π3
((
ˇddr_t
)(
p
 + 
°¨t
 + 
vec
.
	`size
()Ë<(ˇddr_t)&
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
-1));

1908 
vec
.
	`c›y_to
(
p
 + 
°¨t
);

1910 
_µ
->
	`¶Ÿ
(
idx
).
Àngth
 +
√ed
;

1913 #i‡
W_DEBUG_LEVEL
 > 2

1914 
	`W_COERCE
(
	`check
());

1916 
	`DBGTHRD
(<<"∑ge_p::•li˚ idx=" << 
idx


1917 << " sèπ=" << 
°¨t


1918 << "Üí=" << 
Àn


1922  
RCOK
;

1923 
	}
}

1936 
rc_t


1937 
∑ge_p
::
	$mîge_¶Ÿs
(
¶Ÿid_t
 
idx
, 
¶Ÿ_off£t_t
 
off1
, slŸ_off£t_à
off2
)

1939 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1940 
idx2
 = 
idx
+1;

1942 
	`w_as£π1
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

1943 
	`w_as£π1
(
idx2
 >0 && idx2 < 
_µ
->
n¶Ÿs
);

1949 
rc_t
 
rc
;

1951 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

1956 
	`DBG
(<<"cuà" << 
idx
 << ","

1957 << 
off1
 << ","

1958 << 
s
.
Àngth
-
off1
);

1959 
	`W_DO
(
	`cut
(
idx
, 
off1
, 
s
.
Àngth
-off1));

1964 
	`DBG
(<<"cuà" << 
idx2
 << ","

1966 << 
off2
 );

1968 
	`W_DO
(
	`cut
(
idx2
, 0, 
off2
));

1970 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

1971 
¶Ÿ_t
& 
t
 = 
_µ
->
	`¶Ÿ
(
idx2
);

1973 
	`DBG
(<<"shi· " << 
idx2
 << "," << 0 << ","

1974 << 
t
.
Àngth
 << "," << 
idx
 << "," << 
s
.length);

1976 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1980 
rc
 = 
∑ge_p
::
	`shi·
(
idx2
, 0, 
t
.
Àngth
, 
idx
, 
s
.length);

1981 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1983 
	`W_DO
(
	`ªmove_com¥ess
(
idx2
, 1));

1985 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1986  
rc
;

1987 
	}
}

1999 
rc_t


2000 
∑ge_p
::
	$•lô_¶Ÿ
(
¶Ÿid_t
 
idx
, 
¶Ÿ_off£t_t
 
off
, c⁄° 
cvec_t
& 
v1
,

2001 c⁄° 
cvec_t
& 
v2
)

2003 
	`FUNC
(
∑ge_p
::
•lô_¶Ÿ
);

2004 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2009 
smsize_t
 
√ed
 = 
	`Æign
(
v1
.
	`size
()Ë+álign(
v2
.size());

2010 
smsize_t
 
√ed_¶Ÿs
 = (
¶Ÿ_t
);

2017 
	`DBG
(<<"v1.sizê" << 
v1
.
	`size
(Ë<< " v2.sizê" << 
v2
.size());

2018 
	`DBG
(<<"Æig√d: " << 
	`Æign
(
v1
.
	`size
()Ë<< " " <<álign(
v2
.size()));

2019 
	`DBG
(<<"¶Ÿ size: " << (
¶Ÿ_t
));

2020 
	`DBG
(<<"√eded " << 
√ed
 << "Çìd_¶Ÿ†" << 
√ed_¶Ÿs
);

2021 
	`DBG
(<<" ußbÀ i†now " << 
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
()) );

2022 
	`DBG
(<<"Ç‰ì(Ë" << 
_µ
->
•a˚
.
	`n‰ì
()

2023 <<"Çrsvd(Ë" << 
_µ
->
•a˚
.
	`ƒsvd
()

2024 <<" x˘_rsvd(Ë" << 
_µ
->
•a˚
.
	`x˘_rsvd
()

2025 <<" _tid " << 
_µ
->
•a˚
.
	`tid
()

2026 <<" x˘(Ë" << 
	`x˘
()->
	`tid
()

2028 if(()(
√ed
 + 
√ed_¶Ÿs
Ë> 
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
())) {

2029  
	`RC
(
smÀvñ_0
::
eRECWONTFIT
);

2035 
idx2
 = 
idx
+1;

2036 
	`W_DO
(
	`ö£π_ex∑nd
(
idx2
, 1, &
v2
, 
åue
));

2037 
	`DBG
(<<" ußbÀ i†now " << 
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
()) );

2038 
	`DBG
(<<"Ç‰ì(Ë" << 
_µ
->
•a˚
.
	`n‰ì
()

2039 <<"Çrsvd(Ë" << 
_µ
->
•a˚
.
	`ƒsvd
()

2040 <<" x˘_rsvd(Ë" << 
_µ
->
•a˚
.
	`x˘_rsvd
()

2041 <<" _tid " << 
_µ
->
•a˚
.
	`tid
()

2042 <<" x˘(Ë" << 
	`x˘
()->
	`tid
()

2045 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2047 
	`w_as£π1
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

2048 
	`w_as£π1
(
idx2
 >0 && idx2 < 
_µ
->
n¶Ÿs
);

2050 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

2051 
¶Ÿ_t
& 
t
 = 
_µ
->
	`¶Ÿ
(
idx2
);

2053 
	`DBG
(<<"shi· " << 
idx2
 << "," << 0 << ","

2054 << 
t
.
Àngth
 << "," << 
idx
 << "," << 
s
.length);

2059 #i‡
W_DEBUG_LEVEL
 > 2

2060 
ßvñígth1
 = 
s
.
Àngth
;

2061 
ßvñígth2
 = 
t
.
Àngth
;

2063 
	`w_as£π3
(
ßvñígth2
 =()
v2
.
	`size
());

2065 
	`W_COERCE
(
∑ge_p
::
	`shi·
(
idx
, 
off
, 
s
.
Àngth
-off, 
idx2
, 
t
.length));

2066 
	`DBG
(<<" ußbÀ i†now " << 
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
()) );

2067 
	`DBG
(<<"Ç‰ì(Ë" << 
_µ
->
•a˚
.
	`n‰ì
()

2068 <<"Çrsvd(Ë" << 
_µ
->
•a˚
.
	`ƒsvd
()

2069 <<" x˘_rsvd(Ë" << 
_µ
->
•a˚
.
	`x˘_rsvd
()

2070 <<" _tid " << 
_µ
->
•a˚
.
	`tid
()

2071 <<" x˘(Ë" << 
	`x˘
()->
	`tid
()

2074 
	`w_as£π3
(
	`¶Ÿ_off£t_t
(
s
.
Àngth
Ë=
off
);

2075 
	`w_as£π3
(
	`¶Ÿ_off£t_t
(
t
.
Àngth
Ë=(
ßvñígth1
-
off
Ë+ 
ßvñígth2
);

2076 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2082 
	`DBG
(<<"∑°ê" << 
idx
 << "," << 
off
 << "," << 
v1
.
	`size
());

2083 
	`W_COERCE
(
	`∑°e
(
idx
, 
off
, 
v1
));

2085 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2086  
RCOK
;

2087 
	}
}

2099 
rc_t


2100 
∑ge_p
::
	$shi·
(

2101 
¶Ÿid_t
 
idx2
, 
¶Ÿ_off£t_t
 
off2
, 
¶Ÿ_Àngth_t
 
Àn2
,

2102 
¶Ÿid_t
 
idx1
, 
¶Ÿ_off£t_t
 
off1


2105 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2110 
w_rc_t
 
rc
;

2111 
rc
 = 
	`log_∑ge_shi·
(*
this
, 
idx2
, 
off2
, 
Àn2
, 
idx1
, 
off1
);

2112 i‡(
rc
.
	`is_îr‹
()) {

2113  
	`RC_AUGMENT
(
rc
);

2120 
¶Ÿ_t
& 
t
 = 
_µ
->
	`¶Ÿ
(
idx1
);

2121 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx2
);

2123 
adju°mít
 =

2125 
	`Æign
(
s
.
Àngth
 - 
Àn2
)

2127 
	`Æign
(
t
.
Àngth
 + 
Àn2
)

2129 
	`Æign
(
s
.
Àngth
)

2131 
	`Æign
(
t
.
Àngth
)

2134 
	`DBG
(<<"∑ge_p::shi·ádju°mít=" << 
adju°mít
);

2135 i‡(
adju°mít
 > 0) {

2136 
	`W_DO
(
_µ
->
•a˚
.
	`acquúe
(
adju°mít
, 0, 
	`x˘
()));

2137 if–
	`rsvd_mode
() ) {

2138 
	`W_DO
(
	`upd©e_buckë_öfo
());

2141 
_µ
->
•a˚
.
	`ªÀa£
–-
adju°mít
, 
	`x˘
());

2142 if–
	`rsvd_mode
() ) {

2143 
	`W_DO
(
	`upd©e_buckë_öfo
());

2151 
	`_shi·_com¥ess
(
idx2
, 
off2
, 
Àn2
, 
idx1
, 
off1
);

2153 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

2155  
RCOK
;

2156 
	}
}

2171 
∑ge_p
::
	$_shi·_com¥ess
(
¶Ÿid_t
 
‰om
,

2172 
¶Ÿ_off£t_t
 
‰om_off
,

2173 
¶Ÿ_Àngth_t
 
‰om_Àn
,

2174 
¶Ÿid_t
 
to
,

2175 
¶Ÿ_off£t_t
 
to_off
)

2177 
	`DBG
(<<"íd bef‹ê" << 
_µ
->
íd
);

2181 
queue_ba£d_block_lock_t
 
∑ge_shi·_com¥ess_muãx
;

2182 
shi·_s¸©ch
[(
_µ
->
_¶Ÿs
.
d©a
)];

2187 
	`CRITICAL_SECTION
(
cs
, 
∑ge_shi·_com¥ess_muãx
);

2189 
	`w_as£π3
(
‰om
 >0 && from < 
_µ
->
n¶Ÿs
);

2190 
	`w_as£π3
(
to
 >0 &&Åÿ< 
_µ
->
n¶Ÿs
);

2195 
	`mem˝y
(&
shi·_s¸©ch
, 
_µ
->
	`d©a
(), (shift_scratch));

2200 * 
p
 = 
_µ
->
	`d©a
();

2201 
¶Ÿid_t
 
n¶Ÿs
 = 
_µ
->nslots;

2202 
¶Ÿid_t
 
i
 = 0; i < 
n¶Ÿs
; i++) {

2203 i‡(
i
 =
‰om
) ;

2204 i‡(
i
 =
to
) ;

2205 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
i
);

2206 i‡(
s
.
off£t
 != -1) {

2207 
	`w_as£π3
(
s
.
off£t
 >= 0);

2208 
	`mem˝y
(
p
, 
shi·_s¸©ch
+
s
.
off£t
, s.
Àngth
);

2209 
s
.
off£t
 = 
p
 - 
_µ
->
	`d©a
();

2210 
p
 +
	`Æign
(
s
.
Àngth
);

2218 
¶Ÿ_off£t_t
 
fú°∑πoff
;

2219 
¶Ÿ_Àngth_t
 
fú°∑πÀn
;

2220 
¶Ÿ_off£t_t
 
middÀoff
;

2221 
¶Ÿ_Àngth_t
 
middÀÀn
;

2222 
¶Ÿ_off£t_t
 
£c⁄d∑πoff
;

2223 
¶Ÿ_Àngth_t
 
£c⁄d∑πÀn
;

2224 * 
ba£_p
;

2225 
¶Ÿ_off£t_t
 
s_ﬁd_off£t
;

2228 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
‰om
);

2229 
	`DBG
(<<" c›y from slŸ " << 
‰om


2230 << " wôhÅu∂êsizê" << 
	`tu∂e_size
(
‰om
)

2231 << " off£à" << 
s
.
off£t


2233 
	`w_as£π3
(
‰om_off
 <
	`¶Ÿ_off£t_t
(
s
.
Àngth
));

2234 
	`w_as£π3
(
s
.
off£t
 != -1);

2235 
	`w_as£π3
(
s
.
Àngth
 <
‰om_off
 + 
‰om_Àn
);

2240 
fú°∑πoff
 = 0;

2241 
fú°∑πÀn
 = 
‰om_off
;

2242 
middÀoff
 = 
fú°∑πoff
 + 
fú°∑πÀn
;

2243 
middÀÀn
 = 
‰om_Àn
;

2244 
£c⁄d∑πoff
 = 
middÀÀn
 + 
fú°∑πÀn
;

2245 
£c⁄d∑πÀn
 = 
s
.
Àngth
 - 
£c⁄d∑πoff
;

2246 
ba£_p
 = 
p
;

2249 if(
fú°∑πÀn
) {

2250 
	`DBG
(<<"memcpy("

2251 << 
	`W_ADDR
(
p
) << ","

2252 << 
	`W_ADDR
(
shi·_s¸©ch
 + 
s
.
off£t
 + 
fú°∑πoff
) << ","

2253 << 
fú°∑πÀn
 );

2254 
	`mem˝y
(
p
, 
shi·_s¸©ch
 + 
s
.
off£t
 + 
fú°∑πoff
, 
fú°∑πÀn
);

2255 
p
 +
fú°∑πÀn
;

2258 if(
£c⁄d∑πÀn
) {

2259 
	`DBG
(<<"memcpy("

2260 << 
	`W_ADDR
(
p
) << ","

2261 << 
	`W_ADDR
(
shi·_s¸©ch
 + 
s
.
off£t
 + 
£c⁄d∑πoff
) << ","

2262 << 
£c⁄d∑πÀn
 );

2263 
	`mem˝y
(
p
, 
shi·_s¸©ch
 + 
s
.
off£t
 + 
£c⁄d∑πoff
 , 
£c⁄d∑πÀn
);

2264 
p
 +
£c⁄d∑πÀn
;

2267 
s
.
Àngth
 -
middÀÀn
;

2268 
s_ﬁd_off£t
 = 
s
.
off£t
;

2269 
s
.
off£t
 = 
ba£_p
 - 
_µ
->
	`d©a
();

2270 
p
 = 
ba£_p
 + 
	`Æign
(
s
.
Àngth
);

2273 
¶Ÿ_t
& 
t
 = 
_µ
->
	`¶Ÿ
(
to
);

2274 
	`DBG
(<<" c›y i¡ÿ¶Ÿ " << 
to


2275 << " wôhÅu∂êsizê" << 
	`tu∂e_size
(
to
)

2276 << " off£à" << 
t
.
off£t


2278 
	`w_as£π3
(
t
.
off£t
 != -1);

2279 
	`w_as£π3
(
to_off
 <
	`¶Ÿ_off£t_t
(
t
.
Àngth
));

2285 
fú°∑πoff
 = 0;

2286 
fú°∑πÀn
 = 
to_off
;

2287 
£c⁄d∑πoff
 = 
to_off
;

2288 
£c⁄d∑πÀn
 = 
t
.
Àngth
 - 
£c⁄d∑πoff
;

2289 
ba£_p
 = 
p
;

2291 if(
fú°∑πÀn
) {

2292 
	`DBG
(<<"bef‹êmem˝y:Å.off£à" << 
t
.
off£t


2293 << " fú°∑πof‡" << 
fú°∑πoff


2294 << " fú°∑πÀ¿" << 
fú°∑πÀn
);

2295 
	`DBG
(<<"memcpy("

2296 << 
	`W_ADDR
(
p
) << ","

2297 << 
	`W_ADDR
(
shi·_s¸©ch
 + 
t
.
off£t
 + 
fú°∑πoff
) << ","

2298 << 
fú°∑πÀn
 );

2299 
	`mem˝y
(
p
, 
shi·_s¸©ch
 + 
t
.
off£t
 + 
fú°∑πoff
, 
fú°∑πÀn
);

2300 
p
 +
fú°∑πÀn
;

2302 
	`w_as£π1
(
middÀÀn
);

2303 
	`DBG
(<<"bef‹êmem˝y: s.off£à" << 
s_ﬁd_off£t


2304 << " middÀof‡" << 
middÀoff


2305 << " middÀÀ¿" << 
middÀÀn


2307 
	`DBG
(<<"memcpy("

2308 << 
	`W_ADDR
(
p
) << ","

2309 << 
	`W_ADDR
(
shi·_s¸©ch
 + 
s_ﬁd_off£t
 + 
middÀoff
) << ","

2310 << 
middÀÀn
 );

2311 
	`mem˝y
(
p
, 
shi·_s¸©ch
 + 
s_ﬁd_off£t
 + 
middÀoff
, 
middÀÀn
);

2312 
p
 +
middÀÀn
;

2314 if(
£c⁄d∑πÀn
) {

2315 
	`DBG
(<<"memcpy("

2316 << 
	`W_ADDR
(
p
) << ","

2317 << 
	`W_ADDR
(
shi·_s¸©ch
 + 
t
.
off£t
 + 
£c⁄d∑πoff
) << ","

2318 << 
£c⁄d∑πÀn
 );

2319 
	`mem˝y
(
p
, 
shi·_s¸©ch
 + 
t
.
off£t
 + 
£c⁄d∑πoff
, 
£c⁄d∑πÀn
);

2320 
p
 +
£c⁄d∑πÀn
;

2323 
t
.
off£t
 = 
ba£_p
 - 
_µ
->
	`d©a
();

2324 
t
.
Àngth
 +
middÀÀn
;

2325 
p
 = 
ba£_p
 + 
	`Æign
(
t
.
Àngth
);

2327 
_µ
->
íd
 = 
p
 - _µ->
	`d©a
();

2328 
	`DBG
(<<"ídá·î " << 
_µ
->
íd
);

2334 
	}
}

2348 
∑ge_p
::
	$_com¥ess
(
¶Ÿid_t
 
idx
)

2353 
queue_ba£d_block_lock_t
 
∑ge_com¥ess_muãx
;

2354 
s¸©ch
[(
_µ
->
_¶Ÿs
.
d©a
)];

2359 
	`CRITICAL_SECTION
(
cs
, 
∑ge_com¥ess_muãx
);

2361 
	`w_as£π3
(
idx
 < 0 || idx < 
_µ
->
n¶Ÿs
);

2366 
	`mem˝y
(&
s¸©ch
, 
_µ
->
	`d©a
(), (scratch));

2371 * 
p
 = 
_µ
->
	`d©a
();

2372 
¶Ÿid_t
 
n¶Ÿs
 = 
_µ
->nslots;

2373 
¶Ÿid_t
 
i
 = 0; i < 
n¶Ÿs
; i++) {

2374 i‡(
i
 =
idx
) ;

2375 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
i
);

2376 i‡(
s
.
off£t
 != -1) {

2377 
	`w_as£π3
(
s
.
off£t
 >= 0);

2378 
	`mem˝y
(
p
, 
s¸©ch
+
s
.
off£t
, s.
Àngth
);

2379 
s
.
off£t
 = 
p
 - 
_µ
->
	`d©a
();

2380 
p
 +
	`Æign
(
s
.
Àngth
);

2387 i‡(
idx
 >= 0) {

2388 
¶Ÿ_t
& 
s
 = 
_µ
->
	`¶Ÿ
(
idx
);

2389 i‡(
s
.
off£t
 != -1) {

2390 
	`w_as£π3
(
s
.
off£t
 >= 0);

2391 
	`mem˝y
(
p
, 
s¸©ch
 + 
s
.
off£t
, s.
Àngth
);

2392 
s
.
off£t
 = 
p
 - 
_µ
->
	`d©a
();

2393 
p
 +
	`Æign
(
s
.
Àngth
);

2397 
_µ
->
íd
 = 
p
 - _µ->
	`d©a
();

2402 
	}
}

2414 
boﬁ


2415 
∑ge_p
::
	$pö√d_by_me
() const

2417  
bf
->
	`fixed_by_me
(
_µ
);

2418 
	}
}

2427 
boﬁ
 
∑ge_check_íabÀd
 = 
åue
;

2428 
rc_t


2429 
	g∑ge_p
::
	$check
()

2433 if(!
∑ge_check_íabÀd
)

2434  
RCOK
;

2440 *
m≠
 = 
	`me
()->
	`gë_∑ge_check_m≠
();

2445 
	`mem£t
(
m≠
, 0, 
SM_PAGESIZE
);

2451 
END
 = 0;

2452 
NFREE
 = 
d©a_sz
 + 2 * (
¶Ÿ_t
);

2454 
¶Ÿ_t
* 
p
 = &
_µ
->
	`¶Ÿ
(0);

2455 
i
 = 0; i < 
_µ
->
n¶Ÿs
; i++, 
p
--) {

2456 
Àn
 = (
	`Æign
(
p
->
Àngth
));

2457 
j
;

2458 
j
 = 
p
->
off£t
; j <Ö->off£à+ 
Àn
; j++) {

2459 
	`w_as£π1
(
m≠
[
j
] == 0);

2460 
m≠
[
j
] = 1;

2462 i‡(
END
 < 
j
) END = j;

2463 
NFREE
 -
Àn
 + (
¶Ÿ_t
);

2469 
	`w_as£π1
(
END
 <
_µ
->
íd
);

2470 
	`w_as£π1
(
_µ
->
•a˚
.
	`n‰ì
(Ë=
NFREE
);

2471 
	`w_as£π1
(
_µ
->
íd
 <
∑ge_s
::
	`¶Ÿ_off£t_t
(
d©a_sz
 + 2 * (
¶Ÿ_t
) -

2472 (
¶Ÿ_t
Ë* 
_µ
->
n¶Ÿs
));

2479  
RCOK
;

2480 
	}
}

2492 
	g∑ge_p
::~
	$∑ge_p
()

2494 
	`de°ru˘‹
();

2495 
	}
}

2506 
w_rc_t


2507 
	g∑ge_p
::
	$_c›y
(c⁄° 
∑ge_p
& 
p
)

2509 
_ªfbô
 = 
p
._refbit;

2510 
_mode
 = 
p
._mode;

2511 
_µ
 = 
p
._pp;

2512 
∑ge_buckë_öfo
.
	`nocheck√˚sßry
();

2513 i‡(
_µ
) {

2514 if–
bf
->
	`is_bf_∑ge
(
_µ
)) {

2526 
•a˚_buckë_t
 
b
 = 
p
.
	`buckë
();

2527 if((
p
.
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

2528 
p
.
∑ge_buckë_öfo
.
	`öôülized
()) {

2529 
	`DBG
(<<"");

2530 
	`w_as£π3
(! 
p
.
	`rsvd_mode
());

2532 
	`W_DO
(
bf
->
	`ªfix
(
_µ
, 
_mode
));

2533 
	`öô_buckë_öfo
();

2536  
RCOK
;

2537 
	}
}

2539 
	g∑ge_p
&

2540 
	g∑ge_p
::
›î©‹
=(c⁄° 
∑ge_p
& 
p
)

2542 i‡(
this
 !&
p
) {

2543 if(
_µ
) {

2544 i‡(
bf
->
is_bf_∑ge
(
_µ
)) {

2545 
W_COERCE
(
upd©e_buckë_öfo
());

2546 
	gbf
->
unfix
(
_µ
, 
Ál£
, 
_ªfbô
);

2547 
	g_µ
 = 0;

2549 
	g∑ge_buckë_öfo
.
nocheck√˚sßry
();

2552 
W_COERCE
(
_c›y
(
p
));

2554  *
	gthis
;

2566 
	g∑ge_p
::
	$upgøde_œtch
(
œtch_mode_t
 
m
)

2568 
	`w_as£π3
(
bf
->
	`is_bf_∑ge
(
_µ
));

2569 
bf
->
	`upgøde_œtch
(
_µ
, 
m
);

2570 
_mode
 = 
bf
->
	`œtch_mode
(
_µ
);

2571 
	}
}

2580 
rc_t


2581 
	g∑ge_p
::
	$upgøde_œtch_if_nŸ_block
(
boﬁ
& 
would_block
)

2583 
	`w_as£π3
(
bf
->
	`is_bf_∑ge
(
_µ
));

2584 
bf
->
	`upgøde_œtch_if_nŸ_block
(
_µ
, 
would_block
);

2585 i‡(!
would_block
Ë
_mode
 = 
LATCH_EX
;

2586  
RCOK
;

2587 
	}
}

2597 
	g∑ge_p
::
	$∑ge_ußge
(& 
d©a_size
, & 
hódî_size
, & 
unu£d
,

2598 & 
Æignmít
, 
∑ge_p
::
èg_t
& 
t
, 
¶Ÿid_t
& 
no_¶Ÿs
)

2604 c⁄° 
hdr_sz
 = 
∑ge_sz
 - 
d©a_sz
 - 2 *  (
¶Ÿ_t
 );

2606 
d©a_size
 = 
hódî_size
 = 
unu£d
 = 
Æignmít
 = 0;

2609 
¶Ÿ_size
 = 
_µ
->
n¶Ÿs
 *  (
¶Ÿ_t
);

2612 i‡–
_µ
->
n¶Ÿs
 == 0 )

2613 
hódî_size
 = 
hdr_sz
 + 2 *  ( 
¶Ÿ_t
 );

2614 
hódî_size
 = 
hdr_sz
 + 
¶Ÿ_size
;

2617 
i
=0 ; i<
_µ
->
n¶Ÿs
; i++) {

2619 i‡–
_µ
->
	`¶Ÿ
(
i
).
off£t
 != -1 ) {

2620 
d©a_size
 +
_µ
->
	`¶Ÿ
(
i
).
Àngth
;

2621 
Æignmít
 +(
	`Æign
(
_µ
->
	`¶Ÿ
(
i
).
Àngth
) -

2622 
_µ
->
	`¶Ÿ
(
i
).
Àngth
);

2626 i‡–
_µ
->
n¶Ÿs
 == 0 ) {

2627 
unu£d
 = 
d©a_sz
;

2629 
unu£d
 = 
∑ge_sz
 - 
hódî_size
 - 
d©a_size
 - 
Æignmít
;

2636 
t
 = 
	`èg
();

2637 
no_¶Ÿs
 = 
_µ
->
n¶Ÿs
;

2639 
	`as£π
(
d©a_size
 + 
hódî_size
 + 
unu£d
 + 
Æignmít
 =
∑ge_sz
);

2640 
	}
}

2643 
	g∑ge_p
::
	$öô_buckë_öfo
(
∑ge_p
::
èg_t
 
±ag
,

2644 
uöt4_t
 
∑ge_Êags


2650 if(
±ag
 =
∑ge_p
::
t_™y_p
Ë±ag = 
	`èg
();

2651 if(
	`rsvd_mode
(
±ag
)) {

2656 
•a˚_buckë_t
 
b
;

2658 if(
∑ge_Êags
 & 
t_vúgö
) {

2661 
b
 = (
•a˚_num_buckës
-1);

2663 
b
 = 
	`buckë
();

2665 
	`w_as£π3
(
b
 !
	`•a˚_buckë_t
(-1));

2666 
∑ge_buckë_öfo
.
	`öô
(
b
);

2670 
∑ge_buckë_öfo
.
	`nocheck√˚sßry
();

2672 
	}
}

2674 
w_rc_t


2675 
	g∑ge_p
::
	$upd©e_buckë_öfo
()

2681 
	`w_as£π2
(
_µ
);

2682 
	`w_as£π2
(
bf
->
	`is_bf_∑ge
(
_µ
));

2684 if(
	`rsvd_mode
(Ë&& 
bf
->
	`is_bf_∑ge
(
_µ
, 
åue
) ) {

2707 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_ö_undo
)

2709 (
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_f‹w¨d_¥o˚ssög
)

2712 
•a˚_buckë_t
 
b
 = 
	`buckë
();

2713 if((
∑ge_buckë_öfo
.
	`ﬁd
(Ë!
b
) &&

2714 
∑ge_buckë_öfo
.
	`öôülized
()) {

2715 
	`DBG
(<<"upd©ögÉxã¡ hi°ÿf‹Ög " << 
	`pid
());

2716 
	`W_DO
(
io
->
	`upd©e_ext_hi°o
(
	`pid
(), 
b
));

2717 
	`DBG
(<<"∑ge_buckë_öfo.öô " << (
b
));

2718 
	`w_as£π2
(
b
 !
	`•a˚_buckë_t
(-1));

2720 
∑ge_buckë_öfo
.
	`öô
(
b
);

2723 
∑ge_buckë_öfo
.
	`nocheck√˚sßry
();

2726  
RCOK
;

2727 
	}
}

2733 
smsize_t


2734 
	g∑ge_p
::
	$buckë2‰ì_•a˚
(
•a˚_buckë_t
 
b
)

2736 
smsize_t
 
X
[
•a˚_num_buckës
] = {

2737 
buckë_0_max_‰ì
,

2738 
buckë_1_max_‰ì
,

2739 
buckë_2_max_‰ì
,

2740 
buckë_3_max_‰ì
,

2741 #i‡
HBUCKETBITS
>=3

2742 
buckë_4_max_‰ì
,

2743 
buckë_5_max_‰ì
,

2744 
buckë_6_max_‰ì
,

2745 
buckë_7_max_‰ì
,

2746 #i‡
HBUCKETBITS
==4

2747 
buckë_8_max_‰ì
,

2748 
buckë_9_max_‰ì
,

2749 
buckë_10_max_‰ì
,

2750 
buckë_11_max_‰ì
,

2751 
buckë_12_max_‰ì
,

2752 
buckë_13_max_‰ì
,

2753 
buckë_14_max_‰ì
,

2754 
buckë_15_max_‰ì


2758  
X
[
b
];

2759 
	}
}

2761 
•a˚_buckë_t


2762 
	g∑ge_p
::
	$‰ì_•a˚2buckë
(
smsize_t
 
•
)

2765 
uöt4_t
 
mask
 = 
•a˚_buckë_mask_high_bôs
;

2772 
•
 & 
mask
) {

2773 
buckë_0_mö_‰ì
:  0;

2774 
buckë_1_mö_‰ì
:  1;

2775 
buckë_2_mö_‰ì
:  2;

2776 #i‡
HBUCKETBITS
>=3

2777 
buckë_3_mö_‰ì
:  3;

2778 
buckë_4_mö_‰ì
:  4;

2779 
buckë_5_mö_‰ì
:  5;

2780 
buckë_6_mö_‰ì
:  6;

2781 #i‡
HBUCKETBITS
>=4

2782 
buckë_7_mö_‰ì
:  7;

2783 
buckë_8_mö_‰ì
:  8;

2784 
buckë_9_mö_‰ì
:  9;

2785 
buckë_10_mö_‰ì
:  10;

2786 
buckë_11_mö_‰ì
:  11;

2787 
buckë_12_mö_‰ì
:  12;

2788 
buckë_13_mö_‰ì
:  13;

2789 
buckë_14_mö_‰ì
:  14;

2795 #i‡
W_DEBUG_LEVEL
 > 4

2796 
	`DBG
(<<"‰ì_•a˚2buckë: s∑˚ =" << (
•
)

2797 << " masked" << (
•
&
mask
) );

2798 
	`DBG
(<<"buckë 0 =" << (
buckë_0_mö_‰ì
 ));

2799 
	`DBG
(<<"buckë 1 =" << (
buckë_1_mö_‰ì
 ));

2800 
	`DBG
(<<"buckë 2 =" << (
buckë_2_mö_‰ì
 ));

2801 
	`DBG
(<<"buckë 3 =" << (
buckë_3_mö_‰ì
 ));

2802 #i‡
HBUCKETBITS
>=3

2803 
	`DBG
(<<"buckë 4 =" << (
buckë_4_mö_‰ì
 ));

2804 
	`DBG
(<<"buckë 5 =" << (
buckë_5_mö_‰ì
 ));

2805 
	`DBG
(<<"buckë 6 =" << (
buckë_6_mö_‰ì
 ));

2806 
	`DBG
(<<"buckë 7 =" << (
buckë_7_mö_‰ì
 ));

2807 #i‡
HBUCKETBITS
>=4

2808 
	`DBG
(<<"buckë 8 =" << (
buckë_8_mö_‰ì
 ));

2809 
	`DBG
(<<"buckë 9 =" << (
buckë_9_mö_‰ì
 ));

2810 
	`DBG
(<<"buckë 10 =" << (
buckë_10_mö_‰ì
 ));

2811 
	`DBG
(<<"buckë 11 =" << (
buckë_11_mö_‰ì
 ));

2812 
	`DBG
(<<"buckë 12 =" << (
buckë_12_mö_‰ì
 ));

2813 
	`DBG
(<<"buckë 13 =" << (
buckë_13_mö_‰ì
 ));

2814 
	`DBG
(<<"buckë 14 =" << (
buckë_14_mö_‰ì
 ));

2815 
	`DBG
(<<"buckë 15 =" << (
buckë_15_mö_‰ì
 ));

2821 #i‡
HBUCKETBITS
>=4

2822 
smsize_t
 
maximum
 = 
buckë_15_mö_‰ì
;

2823 
•a˚_buckë_t
 
ªsu…
 = 15;

2824 #ñi‡
HBUCKETBITS
>=3

2825 
smsize_t
 
maximum
 = 
buckë_7_mö_‰ì
;

2826 
•a˚_buckë_t
 
ªsu…
 = 7;

2828 
smsize_t
 
maximum
 = 
buckë_3_mö_‰ì
;

2829 
•a˚_buckë_t
 
ªsu…
 = 3;

2832 
	`w_as£π0
(
•
 < 
smÀvñ_0
::
∑ge_sz
 && s∞>
maximum
);

2833  
ªsu…
;

2834 
	}
}

2837 
	go°ªam
 &

2838 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	g°‹e_hi°o_t
&
	gs
)

2840 
shpid_t
 
	gp
=0;Ö < 
	g•a˚_num_buckës
;Ö++) {

2841 
	go
 << " " << 
	gs
.
	gbuckë
[
p
] << "/" ;

2843 
	go
<<
	gídl
;

2844  
	go
;

	@src/sm/page.h

53 #i‚de‡
PAGE_H


54 
	#PAGE_H


	)

56 
	~"w_deföes.h
"

60 
˛ass
 
	g°node_p
;

61 
˛ass
 
	gexéök_p
;

62 
˛ass
 
	gkeyed_p
;

64 #ifde‡
__GNUG__


65 #¥agm®
öãrÁ˚


68 
uöt1_t
 
	t•a˚_buckë_t
;

75 ˛as†
	c∑ge_p
 : 
public
 
smÀvñ_0


78 
‰õnd
 
˛ass
 
dú_vﬁ_m
;

80 
‰õnd
 
˛ass
 
	mbåì_im∂
;

82 
	m¥Ÿe˘ed
:

83 
∑ge_s
::
	t¶Ÿ_t
 slot_t;

84 
	m∑ge_s
::
	t¶Ÿ_off£t_t
 slot_offset_t;

85 
	m∑ge_s
::
	t¶Ÿ_Àngth_t
 slot_length_t;

87 
	mpublic
:

95 
d©a_sz
 = 
∑ge_s
::data_sz,

96 
	mmax_¶Ÿ
 = 
d©a_sz
 / (
¶Ÿ_t
) + 2

98 
	elogiˇl_›î©i⁄
 {

99 
	gl_n⁄e
=0,

100 
	gl_£t
,

101 
	gl_‹
,

102 
	gl_™d
,

103 
	gl_x‹
,

104 
	gl_nŸ


106 
	eèg_t
 {

107 
	gt_bad_p
 = 0,

108 
	gt_exéök_p
 = 1,

109 
	gt_°node_p
 = 2,

110 
	gt_keyed_p
 = 3,

111 
	gt_zkeyed_p
 = 4,

112 
	gt_båì_p
 = 5,

113 
	gt_fûe_p
 = 6,

114 
	gt_πªe_ba£_p
 = 7,

115 
	gt_πªe_p
 = 8,

116 
	gt_lgd©a_p
 = 9,

117 
	gt_lgödex_p
 = 10,

118 
	gt_ønges_p
 = 11,

119 
	gt_fûe_mrbt_p
 = 12,

120 
	gt_™y_p
 = 13

122 
	e∑ge_Êag_t
 {

123 
	gt_vúgö
 = 0x02,

124 
	gt_wrôãn
 = 0x08

128 
	g¥Ÿe˘ed
:

129 ˛as†
	c∑ge_buckë_öfo_t
 : 
smÀvñ_0
 {

130 íum { 
unöô
 = 
•a˚_buckë_t
(-1) };

131 
	gpublic
:

132 
NORET
 
∑ge_buckë_öfo_t
(Ë: 
_ﬁd
(
unöô
), 
_checked
(1) { }

133 
	gNORET
 ~
∑ge_buckë_öfo_t
(Ë{ 
w_as£π3
(
_checked
==1); }

134 
boﬁ
 
öôülized
(Ëc⁄° {  
	g_ﬁd
 !
unöô
; }

135 
öô
(
•a˚_buckë_t
 
buckë
) {

136 
	g_ﬁd
 = 
buckë
;

137 
	g_checked
 = 0;

139 
nocheck√˚sßry
(Ë{ 
	g_checked
=1; }

140 
•a˚_buckë_t
 
ﬁd
(Ëc⁄° {  
	g_ﬁd
; }

142 
	g¥iv©e
:

144 
•a˚_buckë_t
 
_ﬁd
;

145 
	g_checked
;

147 
w_rc_t
 
upd©e_buckë_öfo
();

148 
öô_buckë_öfo
(
∑ge_p
::
èg_t
 
p
, 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
);

149 
öô_buckë_öfo
();

151 
	gpublic
:

152 
•a˚_buckë_t
 
‰ì_•a˚2buckë
(
smsize_t
 
‰ì_•a˚
);

154 
smsize_t
 
buckë2‰ì_•a˚
(
•a˚_buckë_t
 
b
);

155 
•a˚_buckë_t
 
	$buckë
() const;

156 
smsize_t
 
	$‰ì_•a˚4buckë
() const;

160 
boﬁ
 
	$rsvd_mode
() const;

161 
boﬁ
 
	`rsvd_mode
(
èg_t
) ;

162 c⁄° * 
	`èg_«me
(
èg_t
 
t
);

164 c⁄° 
l¢_t
& 
	$l¢
() const;

165 
	`£t_l¢s
(c⁄° 
l¢_t
& 
l¢
);

166 
	`ª∑ú_ªc_l¢
(
boﬁ
 
was_dúty
,

167 
l¢_t
 c⁄° &
√w_æ¢
);

169 
shpid_t
 
	$√xt
() const;

170 
shpid_t
 
	$¥ev
() const;

171 c⁄° 
Õid_t
& 
	$pid
() const;

174 
	`£t_vid
(
vid_t
 
vid
);

176 
smsize_t
 
	`u£d_•a˚
();

177 
smsize_t
 
	$n‰ì
() const;

178 c⁄° 
tid_t
 & 
	$tid
() const;

179 
smsize_t
 
	$ƒsvd
() const;

180 
smsize_t
 
	$x˘_rsvd
() const;

182 
smsize_t
 
	`ußbÀ_•a˚
();

187 
smsize_t
 
	$ußbÀ_•a˚_f‹_¶Ÿs
() const;

188 
smsize_t
 
	`c⁄tig_•a˚
();

190 
rc_t
 
	`check
();

191 
boﬁ
 
	$pö√d_by_me
() const;

193 
¶Ÿid_t
 
	$n¶Ÿs
() const;

195 
¶Ÿid_t
 
	$nvaˇ¡
() const;

197 
smsize_t
 
	$tu∂e_size
(
¶Ÿid_t
 
idx
) const;

198 * 
	$tu∂e_addr
(
¶Ÿid_t
 
idx
) const;

199 
boﬁ
 
	$is_tu∂e_vÆid
(
¶Ÿid_t
 
idx
) const;

201 
w_ba£_t
::
uöt4_t
 
	$∑ge_Êags
() const;

202 
w_ba£_t
::
uöt4_t
 
	$gë_°‹e_Êags
() const;

203 
	`£t_°‹e_Êags
(
w_ba£_t
::
uöt4_t
);

204 
∑ge_s
& 
	`≥rsi°ít_∑π
();

205 c⁄° 
∑ge_s
& 
	$≥rsi°ít_∑π_c⁄°
() const;

206 
boﬁ
 
	$is_fixed
() const;

207 
boﬁ
 
	$is_œtched_by_me
() const;

208 
boﬁ
 
	$is_möe
() const;

209 c⁄° 
œtch_t
* 
	$my_œtch
() const;

210 
	$£t_dúty
() const;

211 
boﬁ
 
	$is_dúty
() const;

213 
NORET
 
	$∑ge_p
(Ë: 
	`_µ
(0), 
	`_mode
(
LATCH_NL
), 
	$_ªfbô
(0Ë{
	}
};

214 
NORET
 
	$∑ge_p
(
∑ge_s
* 
s
,

215 
w_ba£_t
::
uöt4_t
 
°‹e_Êags
,

216 
ªfbô
 = 1)

217 : 
	`_µ
(
s
), 
	`_mode
(
LATCH_NL
), 
	$_ªfbô
(
ªfbô
) {

220 
	`£t_°‹e_Êags
 (
°‹e_Êags
);

221 
	}
}

222 
NORET
 
	$∑ge_p
(c⁄° 
∑ge_p
& 
p
Ë{ 
	`W_COERCE
(
	`_c›y
’)); 
	}
}

223 
vútuÆ
 
	gNORET
 ~
∑ge_p
();

224 
de°ru˘‹
();

225 
	g∑ge_p
& 
	g›î©‹
=(c⁄° 
∑ge_p
& 
p
);

226 
rc_t
 
c⁄dôi⁄Æ_fix
(

227 c⁄° 
Õid_t
& 
pid
,

228 
èg_t
 
èg
,

229 
œtch_mode_t
 
mode
,

230 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
,

231 
°‹e_Êag_t
& 
°‹e_Êags
,

232 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

233 
ªfbô
 = 1);

234 
rc_t
 
fix
(

235 c⁄° 
Õid_t
& 
pid
,

236 
èg_t
 
èg
,

237 
œtch_mode_t
 
mode
,

238 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
,

239 
°‹e_Êag_t
& 
°‹e_Êags
,

240 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

241 
ªfbô
 = 1) ;

242 
rc_t
 
_fix
(

243 
boﬁ
 
c⁄dôi⁄Æ
,

244 c⁄° 
Õid_t
& 
pid
,

245 
èg_t
 
èg
,

246 
œtch_mode_t
 
mode
,

247 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
,

248 
°‹e_Êag_t
& 
°‹e_Êags
,

249 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
,

250 
ªfbô
 = 1);

251 
unfix
();

252 
disˇrd
();

253 
unfix_dúty
();

256 
	$£t_ªf_bô
(
vÆue
Ë{
_ªfbô
 = vÆue;
	}
}

260 
upgøde_œtch
(
œtch_mode_t
 
m
);

262 
rc_t
 
upgøde_œtch_if_nŸ_block
(

263 
boﬁ
& 
would_block
);

267 
	$˛ór_∑ge_p
(Ë{
_µ
 = 0;
	}
}

268 
œtch_mode_t
 
	$œtch_mode
() const;

269 
boﬁ
 
	$check_l¢_öv¨ü¡
() const;

271 íum { 
_hdr_size
 = (
∑ge_sz
 - 
d©a_sz
 - 2 *  (
¶Ÿ_t
 )Ë
	}
};

273 
smsize_t
 
	$hdr_size
() {

274  
_hdr_size
;

275 
	}
}

278 
∑ge_ußge
(

279 & 
d©a_sz
,

280 & 
hdr_sz
,

281 & 
unu£d
,

282 & 
Æignmt
,

283 
èg_t
& 
t
,

284 
¶Ÿid_t
& 
no_u£d_¶Ÿs
);

286 
rc_t
 
•lô_¶Ÿ
(

287 
¶Ÿid_t
 
idx
,

288 
¶Ÿ_off£t_t
 
off
,

289 c⁄° 
cvec_t
& 
v1
,

290 c⁄° 
cvec_t
& 
v2
);

291 
rc_t
 
mîge_¶Ÿs
(

292 
¶Ÿid_t
 
idx
,

293 
¶Ÿ_off£t_t
 
off1
,

294 
¶Ÿ_off£t_t
 
off2
);

295 
rc_t
 
shi·
(

296 
¶Ÿid_t
 
idx2
,

297 
¶Ÿ_off£t_t
 
off2
,

298 
¶Ÿ_Àngth_t
 
Àn2
,

299 
¶Ÿid_t
 
idx1
,

300 
¶Ÿ_off£t_t
 
off1


303 
èg_t
 
	$èg
() const;

305 
¥iv©e
:

306 
w_rc_t
 
	`_c›y
(c⁄° 
∑ge_p
& 
p
) ;

307 
	`_shi·_com¥ess
(
¶Ÿid_t
 
‰om
,

308 
¶Ÿ_off£t_t
 
‰om_off
,

309 
¶Ÿ_Àngth_t
 
‰om_Àn
,

310 
¶Ÿid_t
 
to
,

311 
¶Ÿ_off£t_t
 
to_off
);

314 
¥Ÿe˘ed
:

315 
	s•li˚_öfo_t
 {

316 
¶Ÿ_Àngth_t
 
°¨t
;

317 
¶Ÿ_Àngth_t
 
Àn
;

318 c⁄° 
vec_t
& 
d©a
;

320 
	`•li˚_öfo_t
(
s
, 
l
, c⁄° 
vec_t
& 
d
) :

321 
	`°¨t
(
s
), 
	`Àn
(
l
), 
	`d©a
(
d
) {};

322 
	}
};

333 
rc_t
 
_f‹m©
(

334 c⁄° 
Õid_t
& 
pid
,

335 
èg_t
 
èg
,

336 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
,

337 
°‹e_Êag_t
 
°‹e_Êags


339 
rc_t
 
lök_up
(
shpid_t
 
¥ev
, shpid_à
√xt
);

341 
rc_t
 
√xt_¶Ÿ
(

342 
w_ba£_t
::
uöt4_t
 
•a˚_√eded
,

343 
¶Ÿid_t
& 
idx


345 
rc_t
 
föd_¶Ÿ
(

346 
w_ba£_t
::
uöt4_t
 
•a˚_√eded
,

347 
¶Ÿid_t
& 
idx
,

348 
¶Ÿid_t
 
°¨t_£¨ch
 = 0);

350 
rc_t
 
ö£π_ex∑nd
(

351 
¶Ÿid_t
 
idx
,

352 
˙t
,

353 c⁄° 
cvec_t
 *
ç
,

354 
boﬁ
 
log_ô
 = 
åue
,

355 
boﬁ
 
do_ô
 = 
åue
);

357 
rc_t
 
ªmove_com¥ess
(
¶Ÿid_t
 
idx
, 
˙t
);

358 
rc_t
 
m¨k_‰ì
(
¶Ÿid_t
 
idx
);

362 
rc_t
 
ª˛aim
(
¶Ÿid_t
 
idx
, c⁄° 
cvec_t
& 
vec
,

363 
boﬁ
 
log_ô
 = 
åue
);

365 
rc_t
 
£t_byã
(
¶Ÿid_t
 
idx
, 
u_ch¨
 
bôs
,

366 
logiˇl_›î©i⁄
 
›
);

368 
rc_t
 
•li˚
(
¶Ÿid_t
 
idx
,

369 
˙t
,

370 
•li˚_öfo_t
 
•
[]);

371 
rc_t
 
•li˚
(

372 
¶Ÿid_t
 
idx
,

373 
¶Ÿ_Àngth_t
 
°¨t
,

374 
¶Ÿ_Àngth_t
 
Àn
,

375 c⁄° 
cvec_t
& 
d©a
);

377 
rc_t
 
ovîwrôe
(

378 
¶Ÿid_t
 
idx
,

379 
¶Ÿ_Àngth_t
 
°¨t
,

380 c⁄° 
cvec_t
& 
d©a
);

382 
rc_t
 
∑°e
(
¶Ÿid_t
 
idx
,

383 
¶Ÿ_Àngth_t
 
°¨t
,

384 c⁄° 
cvec_t
& 
d©a
);

386 
rc_t
 
cut
(
¶Ÿid_t
 
idx
,

387 
¶Ÿ_Àngth_t
 
°¨t
,

388 
¶Ÿ_Àngth_t
 
Àn
);

390 
boﬁ
 
	$fôs
() const;

395 
∑ge_s
* 
_µ
;

396 
œtch_mode_t
 
_mode
;

397 
_ªfbô
;

398 
∑ge_buckë_öfo_t
 
∑ge_buckë_öfo
;

400 
¥iv©e
:

402 
	`_com¥ess
(
¶Ÿid_t
 
idx
 = -1);

404 
‰õnd
 
˛ass
 
∑ge_lök_log
;

405 
‰õnd
 
˛ass
 
∑ge_ö£π_log
;

406 
‰õnd
 
˛ass
 
∑ge_ªmove_log
;

407 
‰õnd
 
˛ass
 
∑ge_•li˚_log
;

408 
‰õnd
 
˛ass
 
∑ge_•li˚z_log
;

409 
‰õnd
 
˛ass
 
∑ge_£t_byã_log
;

410 
‰õnd
 
˛ass
 
∑ge_£t_bô_log
;

411 
‰õnd
 
˛ass
 
∑ge_˛r_bô_log
;

412 
‰õnd
 
˛ass
 
∑ge_ª˛aim_log
;

413 
‰õnd
 
˛ass
 
∑ge_m¨k_log
;

414 
‰õnd
 
˛ass
 
∑ge_öô_log
;

415 
‰õnd
 
˛ass
 
∑ge_m¨k_t
;

416 
‰õnd
 
˛ass
 
∑ge_öô_t
;

417 
‰õnd
 
˛ass
 
∑ge_ö£π_t
;

418 
‰õnd
 
˛ass
 
∑ge_image_t›_log
;

419 
‰õnd
 
˛ass
 
∑ge_image_bŸtom_log
;

421 
	}
};

423 
	#MAKEPAGE
(
x
, 
ba£
,
_ªfbô_
) \

424 
	`x
() {}; \

425 
	`x
(
∑ge_s
* 
s
, 
w_ba£_t
::
uöt4_t
 
°‹e_Êags
Ë: 
	`ba£
(s, store_flags) \

430 ~
	`x
() {}; \

431 
x
& 
›î©‹
=(c⁄° x& 
p
Ë{ 
ba£
::›î©‹=’);  *
this
; } \

432 
rc_t
 
	`_fix
(
boﬁ
 
c⁄dôi⁄Æ
, c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

433 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
, \

434 
°‹e_Êag_t
 
°‹e_Êags
, \

435 
boﬁ
 
ign‹e_°‹e_id
, \

436 
ªfbô
); \

437 
rc_t
 
	`fix
(c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

438 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
 = 0, \

439 
°‹e_Êag_t
 
°‹e_Êags
 = 
°_bad
, \

440 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
, \

441 
ªfbô
 = 
_ªfbô_
); \

442 
rc_t
 
	`c⁄dôi⁄Æ_fix
(c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

443 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
 = 0, \

444 
°‹e_Êag_t
 
°‹e_Êags
 = 
°_bad
, \

445 
boﬁ
 
ign‹e_°‹e_id
 = 
Ál£
, \

446 
ªfbô
 = 
_ªfbô_
); \

447 
	`de°ru˘‹
(Ë{
ba£
::destructor();} \

448 
rc_t
 
	`f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
, 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
, \

449 
°‹e_Êag_t
 
°‹e_Êags
); \

450 
	`x
(c⁄° 
x
&
p
Ë: 
	`ba£
(p) \

451 { }

	)

454 
	#MAKEPAGECODE
(
x
, 
ba£
) \

455 
rc_t
 
x
::
	`fix
(c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

456 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
, \

457 
°‹e_Êag_t
 
°‹e_Êags
 , \

458 
boﬁ
 
ign‹e_°‹e_id
 , \

459 
ªfbô
 ){ \

460  
	`_fix
(
Ál£
, 
pid
, 
mode
, 
∑ge_Êags
, 
°‹e_Êags
, \

461 
ign‹e_°‹e_id
, 
ªfbô
); \

463 
rc_t
 
x
::
	`c⁄dôi⁄Æ_fix
(c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

464 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
, \

465 
°‹e_Êag_t
 
°‹e_Êags
 , \

466 
boﬁ
 
ign‹e_°‹e_id
 , \

467 
ªfbô
 ){ \

468  
	`_fix
(
åue
, 
pid
, 
mode
, 
∑ge_Êags
, 
°‹e_Êags
, \

469 
ign‹e_°‹e_id
, 
ªfbô
); \

471 
rc_t
 
x
::
	`_fix
(
boﬁ
 
c⁄dl
, c⁄° 
Õid_t
& 
pid
, 
œtch_mode_t
 
mode
, \

472 
w_ba£_t
::
uöt4_t
 
∑ge_Êags
, \

473 
°‹e_Êag_t
 
°‹e_Êags
, \

474 
boﬁ
 
ign‹e_°‹e_id
, \

475 
ªfbô
) \

477 
°‹e_Êag_t
 
°‹e_Êags_ßve
 = 
°‹e_Êags
; \

478 
	`w_as£π2
((
∑ge_Êags
 & ~
t_vúgö
) == 0); \

479 
	`W_DO
–
∑ge_p
::
	`_fix
(
c⁄dl
, 
pid
, 
t_
 ## 
x
, 
mode
, 
∑ge_Êags
, 
°‹e_Êags
, \

480 
ign‹e_°‹e_id
,
ªfbô
));\

481 i‡(
∑ge_Êags
 & 
t_vúgö
Ë
	`W_DO
(
	`f‹m©
(
pid
, 
t_
 ## 
x
,Öage_flags, \

482 
°‹e_Êags_ßve
)); \

483 
	`w_as£π3
(
	`èg
(Ë=
t_
 ## 
x
); \

484  
RCOK
; \

485 }

	)

487 
ölöe
 
smsize_t


488 
	g∑ge_p
::
	$‰ì_•a˚4buckë
() const {

490  (
_µ
->
•a˚
.
	`n‰ì
(Ë- _µ->•a˚.
	`ƒsvd
())

491 + 
_µ
->
•a˚
.
	`x˘_rsvd
();

492 
	}
}

494 
ölöe
 
•a˚_buckë_t


495 
	g∑ge_p
::
	$buckë
() const {

496  
	`‰ì_•a˚2buckë
–
	`‰ì_•a˚4buckë
() );

497 
	}
}

499 
ölöe
 
shpid_t


500 
	g∑ge_p
::
	$√xt
() const

502  
_µ
->
√xt
;

503 
	}
}

505 
ölöe
 
shpid_t


506 
	g∑ge_p
::
	$¥ev
() const

508  
_µ
->
¥ev
;

509 
	}
}

511 
ölöe
 c⁄° 
	gÕid_t
&

512 
	g∑ge_p
::
	$pid
() const

514  
_µ
->
pid
;

515 
	}
}

517 
ölöe
 

518 
	g∑ge_p
::
	$£t_vid
(
vid_t
 
vid
)

520 
_µ
->
pid
.
_°id
.
vﬁ
 = 
vid
;

521 
	}
}

523 
ölöe
 c⁄° 
	gtid_t
 &

524 
	g∑ge_p
::
	$tid
() const

526  
_µ
->
•a˚
.
	`tid
();

527 
	}
}

528 
ölöe
 
smsize_t


529 
	g∑ge_p
::
	$x˘_rsvd
() const

531  
_µ
->
•a˚
.
	`x˘_rsvd
();

532 
	}
}

533 
ölöe
 
smsize_t


534 
	g∑ge_p
::
	$ƒsvd
() const

536  
_µ
->
•a˚
.
	`ƒsvd
();

537 
	}
}

538 
ölöe
 
smsize_t


539 
	g∑ge_p
::
	$n‰ì
() const

541  
_µ
->
•a˚
.
	`n‰ì
();

542 
	}
}

544 
ölöe
 
smsize_t


545 
	g∑ge_p
::
	$u£d_•a˚
()

547  (
d©a_sz
 + 2 * (
¶Ÿ_t
Ë- 
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
()));

548 
	}
}

550 
ölöe
 
smsize_t


551 
	g∑ge_p
::
	$ußbÀ_•a˚
()

553  
_µ
->
•a˚
.
	`ußbÀ
(
	`x˘
());

554 
	}
}

556 
ölöe
 
smsize_t


557 
	g∑ge_p
::
	$ußbÀ_•a˚_f‹_¶Ÿs
() const

559  
_µ
->
•a˚
.
	`ußbÀ_f‹_√w_¶Ÿs
();

560 
	}
}

562 
ölöe
 
smsize_t


563 
	g∑ge_p
::
	$tu∂e_size
(
¶Ÿid_t
 
idx
) const

565 
	`w_as£π3
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

566  
_µ
->
	`¶Ÿ
(
idx
).
Àngth
;

567 
	}
}

569 
ölöe
 *

570 
	g∑ge_p
::
	$tu∂e_addr
(
¶Ÿid_t
 
idx
) const

572 
	`w_as£π3
(
idx
 >0 && idx < 
_µ
->
n¶Ÿs
);

573  (*Ë(
_µ
->
	`d©a
(Ë+ _µ->
	`¶Ÿ
(
idx
).
off£t
);

574 
	}
}

576 
ölöe
 
boﬁ


577 
	g∑ge_p
::
	$is_tu∂e_vÆid
(
¶Ÿid_t
 
idx
) const

579  (
idx
 >= 0) &&

580 (
idx
 < 
_µ
->
n¶Ÿs
) &&

581 (
_µ
->
	`¶Ÿ
(
idx
).
off£t
 >=0);

582 
	}
}

584 
ölöe
 
	gw_ba£_t
::
w_ba£_t
::
uöt4_t


585 
∑ge_p
::
	$∑ge_Êags
() const

587  
_µ
->
∑ge_Êags
;

588 
	}
}

590 
ölöe
 
	g∑ge_s
&

591 
	g∑ge_p
::
	$≥rsi°ít_∑π
()

593  *(
∑ge_s
*Ë
_µ
;

594 
	}
}

596 
ölöe
 c⁄° 
	g∑ge_s
&

597 
	g∑ge_p
::
	$≥rsi°ít_∑π_c⁄°
() const

599  *(
∑ge_s
*Ë
_µ
;

600 
	}
}

602 
ölöe
 
boﬁ


603 
	g∑ge_p
::
	$is_fixed
() const

605 #i‡
W_DEBUG_LEVEL
 > 1

609 if(
_µ
 && 
bf_m
::
	`gë_cb
(_µ)Ë
	`w_as£π1
(
	`is_œtched_by_me
());

611  
_µ
 != 0;

612 
	}
}

614 
ölöe
 
œtch_mode_t


615 
	g∑ge_p
::
	$œtch_mode
() const

617 #i‡
W_DEBUG_LEVEL
 > 1

627 if(
_µ
) {

628 
boﬁ
 
möe
 = 
	`is_möe
();

629 if(
_mode
 =
LATCH_EX
 || _modê=
LATCH_NLX
Ë
	`w_as£π2
(
möe
);

632  
_µ
 ? 
_mode
 : 
LATCH_NL
;

633 
	}
}

635 
ölöe
 
boﬁ


636 
	g∑ge_p
::
	$check_l¢_öv¨ü¡
() const

638 if(
_µ
Ë 
bf_m
::
	`check_l¢_öv¨ü¡
(_pp);

639  
åue
;

640 
	}
}

642 
ölöe
 
	g∑ge_p
::
èg_t


643 
∑ge_p
::
	$èg
() const

645  (
èg_t
Ë
_µ
->
èg
;

646 
	}
}

648 
ölöe
 

649 
	g∑ge_p
::
	$öô_buckë_öfo
() {

650 
	`öô_buckë_öfo
(
	`èg
(), 0);

651 
	}
}

657 
ölöe
 
¶Ÿid_t


658 
	g∑ge_p
::
	$n¶Ÿs
() const

660  
_µ
->
n¶Ÿs
;

661 
	}
}

666 
ölöe
 
¶Ÿid_t


667 
	g∑ge_p
::
	$nvaˇ¡
() const

669  
_µ
->
nvaˇ¡
;

670 
	}
}

675 
ölöe
 c⁄° 
	gl¢_t
&

676 
	g∑ge_p
::
	$l¢
() const

678 
	`w_as£π1
(
_µ
->
l¢1
 =_µ->
l¢2
);

679  
_µ
->
l¢1
;

680 
	}
}

685 
ölöe
 

686 
	g∑ge_p
::
	$£t_l¢s
(c⁄° 
l¢_t
& 
l¢
)

688 
_µ
->
l¢1
 = _µ->
l¢2
 = 
l¢
;

689 
	}
}

694 
ölöe
 
smsize_t


695 
	g∑ge_p
::
	$c⁄tig_•a˚
()

697  ((*Ë&
_µ
->
	`¶Ÿ
(_µ->
n¶Ÿs
-1)Ë- (_µ->
	`d©a
(Ë+ _µ->
íd
);

698 
	}
}

703 
ölöe
 
rc_t


704 
	g∑ge_p
::
	$∑°e
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, c⁄° 
cvec_t
& 
d©a
)

706  
	`•li˚
(
idx
, 
°¨t
, 0, 
d©a
);

707 
	}
}

712 
ölöe
 
rc_t


713 
	g∑ge_p
::
	$cut
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, slŸ_Àngth_à
Àn
)

715 
cvec_t
 
v
;

716  
	`•li˚
(
idx
, 
°¨t
, 
Àn
, 
v
);

717 
	}
}

723 
ölöe
 

724 
	g∑ge_p
::
	$disˇrd
()

726 
	`w_as£π3
(!
_µ
 || 
bf
->
	`is_bf_∑ge
(_pp));

727 i‡(
_µ
Ë
bf
->
	`disˇrd_pö√d_∑ge
(_pp);

728 
_µ
 = 0;

729 
	}
}

740 
ölöe
 
boﬁ


741 
	g∑ge_p
::
	$rsvd_mode
(
èg_t
 
t
)

743 i‡(
t
 =
t_fûe_p
 ||Å =
t_fûe_mrbt_p
 ||Å =
t_ønges_p
) {

744  
åue
;

746  
Ál£
;

747 
	}
}

749 
ölöe
 
boﬁ


750 
	g∑ge_p
::
	$rsvd_mode
() const

752  
	`rsvd_mode
(
	`èg
());

753 
	}
}

758 
ölöe
 

759 
	g∑ge_p
::
	$unfix
()

761 
	`w_as£π2
(!
_µ
 || 
bf
->
	`is_bf_∑ge
(_µ, 
åue
));

762 if(
_µ
) {

763 
	`W_COERCE
(
	`upd©e_buckë_öfo
());

764 
bf
->
	`unfix
(
_µ
, 
Ál£
, 
_ªfbô
);

766 
_µ
 = 0;

767 
	}
}

772 
ölöe
 

773 
	g∑ge_p
::
	$unfix_dúty
()

775 
	`w_as£π2
(!
_µ
 || 
bf
->
	`is_bf_∑ge
(_pp));

776 i‡(
_µ
) {

777 
	`W_COERCE
(
	`upd©e_buckë_öfo
());

778 
bf
->
	`unfix
(
_µ
, 
åue
, 
_ªfbô
);

780 
_µ
 = 0;

781 
	}
}

786 
ölöe
 

787 
	g∑ge_p
::
	$£t_dúty
() const

789 i‡(
bf
->
	`is_bf_∑ge
(
_µ
)Ë
	`W_COERCE
(bf->
	`£t_dúty
(_pp));

790 
	}
}

796 
ölöe
 
boﬁ


797 
	g∑ge_p
::
	$is_dúty
() const

799 i‡(
bf
->
	`is_bf_∑ge
(
_µ
)Ë bf->
	`is_dúty
(_pp);

800  
Ál£
;

801 
	}
}

806 
ölöe
 
rc_t


807 
	g∑ge_p
::
	$ovîwrôe
(
¶Ÿid_t
 
idx
, 
¶Ÿ_Àngth_t
 
°¨t
, c⁄° 
cvec_t
& 
d©a
)

809  
	`•li˚
(
idx
, 
°¨t
, 
d©a
.
	`size
(), data);

810 
	}
}

815 
ölöe
 

816 
	g∑ge_p
::
	$de°ru˘‹
()

818 i‡(
bf
->
	`is_bf_∑ge
(
_µ
)Ë
	`unfix
();

819 
_µ
 = 0;

820 
	}
}

827 ˛as†
	cÆloc_∑ge_fûãr_t
 : 
public
 
smÀvñ_0
 {

828 
public
:

829 
NORET
 
	$Æloc_∑ge_fûãr_t
() {}

830 
vútuÆ
 
NORET
 ~
	$Æloc_∑ge_fûãr_t
(Ë{
	}
}

832 
vútuÆ
 
boﬁ
 
ac˚±
(c⁄° 
Õid_t
&) = 0;

833 
vútuÆ
 
	$check
() const = 0 ;

834 
vútuÆ
 
boﬁ
 
	$ac˚±ed
() const = 0;

835 
vútuÆ
 
	`ªje˘
() = 0;

836 
	}
};

838 ˛as†
	cÆloc_∑ge_fûãr_yes_t
: 
public
 
Æloc_∑ge_fûãr_t
 {

839 
public
:

840 
boﬁ
 
	$ac˚±
(c⁄° 
Õid_t
&Ë{  
åue
; }

841 
	$check
(Ëc⁄° {
	}
}

842 
boﬁ
 
	$ac˚±ed
(Ëc⁄° {  
åue
; 
	}
}

843 
	$ªje˘
(Ë{
	}
}

844 
	gNORET
 ~
	$Æloc_∑ge_fûãr_yes_t
(Ë{
	}
}

	@src/sm/page_alias.h

30 #i‚de‡
PAGE_ALIAS_H


31 
	#PAGE_ALIAS_H


	)

33 
	~"w_deföes.h
"

45 #i‡
deföed
(
ARCH_LP64
)

46 
	#PAGE_ALIAS
 40

	)

48 
	#PAGE_ALIAS
 24

	)

51 
	#PAGE_ALIAS_FILE
 (
PAGE_ALIAS
)

	)

52 
	#PAGE_ALIAS_LGDATA
 (
PAGE_ALIAS
)

	)

	@src/sm/page_h.h

30 #i‚de‡
PAGE_H_H


31 
	#PAGE_H_H


	)

33 
	~"w_deföes.h
"

51 
	#HBUCKETBITS
 4

	)

53 #i‡
HBUCKETBITS
==4

54 
	m•a˚_num_buckës
 = 16,

55 #ñi‡
HBUCKETBITS
==3

56 
	m•a˚_num_buckës
 = 8,

58 
	m•a˚_num_buckës
 = 4,

60 
	m•a˚_buckë_size_ö_bôs
 = 
HBUCKETBITS
,

61 
	m•a˚_buckë_mask
 = (1<<
•a˚_buckë_size_ö_bôs
) - 1

71 
	m∑ge_sz
 = 
smÀvñ_0
::
∑ge_sz


75 
	m≥r˚¡_07
 = (
∑ge_sz
 >> 4),

77 
	m≥r˚¡_12
 = (
∑ge_sz
 >> 3),

78 
	m≥r˚¡_19
 = (
≥r˚¡_12
 | 
≥r˚¡_07
),

80 
	m≥r˚¡_25
 = (
∑ge_sz
 >> 2),

81 
	m≥r˚¡_32
 = (
≥r˚¡_25
 | 
≥r˚¡_07
),

82 
	m≥r˚¡_37
 = (
≥r˚¡_25
 | 
≥r˚¡_12
),

83 
	m≥r˚¡_44
 = (
≥r˚¡_25
 | 
≥r˚¡_12
 | 
≥r˚¡_07
),

85 
	m≥r˚¡_50
 = (
∑ge_sz
 >> 1),

87 
	m≥r˚¡_57
 = (
≥r˚¡_50
 | 
≥r˚¡_07
),

88 
	m≥r˚¡_62
 = (
≥r˚¡_50
 | 
≥r˚¡_12
),

89 
	m≥r˚¡_69
 = (
≥r˚¡_50
 | 
≥r˚¡_12
 | 
≥r˚¡_07
),

90 
	m≥r˚¡_75
 = (
≥r˚¡_50
 | 
≥r˚¡_25
),

91 
	m≥r˚¡_82
 = (
≥r˚¡_50
 | 
≥r˚¡_25
 | 
≥r˚¡_07
),

92 
	m≥r˚¡_87
 = (
≥r˚¡_50
 | 
≥r˚¡_25
 | 
≥r˚¡_12
),

93 
	m≥r˚¡_94
 = (
≥r˚¡_50
 | 
≥r˚¡_25
 | 
≥r˚¡_12
 | 
≥r˚¡_07
),

95 
	m≥r˚¡_100
 = 
∑ge_sz
,

97 
	m∑ge_ovîhód
 = (
∑ge_sz
 - 
∑ge_s
::
d©a_sz
Ë+ 2*’age_s::
¶Ÿ_t
),

100 #i‡
HBUCKETBITS
==4

101 
	mbuckë_15_max_‰ì
 = 
≥r˚¡_100
 - 
∑ge_ovîhód
,

102 
	mbuckë_15_mö_‰ì
 = 
≥r˚¡_94
,

104 
	mbuckë_14_max_‰ì
 = 
buckë_15_mö_‰ì
 -1,

105 
	mbuckë_14_mö_‰ì
 = 
≥r˚¡_87
,

107 
	mbuckë_13_max_‰ì
 = 
buckë_14_mö_‰ì
 -1,

108 
	mbuckë_13_mö_‰ì
 = 
≥r˚¡_82
,

110 
	mbuckë_12_max_‰ì
 = 
buckë_13_mö_‰ì
 -1,

111 
	mbuckë_12_mö_‰ì
 = 
≥r˚¡_75
,

113 
	mbuckë_11_max_‰ì
 = 
buckë_12_mö_‰ì
 -1,

114 
	mbuckë_11_mö_‰ì
 = 
≥r˚¡_69
,

116 
	mbuckë_10_max_‰ì
 = 
buckë_11_mö_‰ì
 -1,

117 
	mbuckë_10_mö_‰ì
 = 
≥r˚¡_62
,

119 
	mbuckë_9_max_‰ì
 = 
buckë_10_mö_‰ì
 -1,

120 
	mbuckë_9_mö_‰ì
 = 
≥r˚¡_57
,

122 
	mbuckë_8_max_‰ì
 = 
buckë_9_mö_‰ì
 -1,

123 
	mbuckë_8_mö_‰ì
 = 
≥r˚¡_50
,

125 
	mbuckë_7_max_‰ì
 = 
buckë_8_mö_‰ì
 -1,

126 
	mbuckë_7_mö_‰ì
 = 
≥r˚¡_44
,

128 
	mbuckë_6_max_‰ì
 = 
buckë_7_mö_‰ì
 - 1,

129 
	mbuckë_6_mö_‰ì
 = 
≥r˚¡_37
,

131 
	mbuckë_5_max_‰ì
 = 
buckë_6_mö_‰ì
 - 1,

132 
	mbuckë_5_mö_‰ì
 = 
≥r˚¡_32
,

134 
	mbuckë_4_max_‰ì
 = 
buckë_5_mö_‰ì
 - 1,

135 
	mbuckë_4_mö_‰ì
 = 
≥r˚¡_25
,

137 
	mbuckë_3_max_‰ì
 = 
buckë_4_mö_‰ì
 - 1,

138 
	mbuckë_3_mö_‰ì
 = 
≥r˚¡_19
,

140 
	mbuckë_2_max_‰ì
 = 
buckë_3_mö_‰ì
 - 1,

141 
	mbuckë_2_mö_‰ì
 = 
≥r˚¡_12
,

143 
	mbuckë_1_max_‰ì
 = 
buckë_2_mö_‰ì
 - 1,

144 
	mbuckë_1_mö_‰ì
 = 
≥r˚¡_07
,

146 #ñi‡
HBUCKETBITS
==3

147 
	mbuckë_7_max_‰ì
 = 
≥r˚¡_100
 - 
∑ge_ovîhód
,

148 
	mbuckë_7_mö_‰ì
 = 
≥r˚¡_87
,

150 
	mbuckë_6_max_‰ì
 = 
buckë_7_mö_‰ì
 - 1,

151 
	mbuckë_6_mö_‰ì
 = 
≥r˚¡_75
,

153 
	mbuckë_5_max_‰ì
 = 
buckë_6_mö_‰ì
 - 1,

154 
	mbuckë_5_mö_‰ì
 = 
≥r˚¡_62
,

156 
	mbuckë_4_max_‰ì
 = 
buckë_5_mö_‰ì
 - 1,

157 
	mbuckë_4_mö_‰ì
 = 
≥r˚¡_50
,

159 
	mbuckë_3_max_‰ì
 = 
buckë_4_mö_‰ì
 - 1,

160 
	mbuckë_3_mö_‰ì
 = 
≥r˚¡_37
,

162 
	mbuckë_2_max_‰ì
 = 
buckë_3_mö_‰ì
 - 1,

163 
	mbuckë_2_mö_‰ì
 = 
≥r˚¡_25
,

165 
	mbuckë_1_max_‰ì
 = 
buckë_2_mö_‰ì
 - 1,

166 
	mbuckë_1_mö_‰ì
 = 
≥r˚¡_12
,

168 #ñi‡
HBUCKETBITS
==2

169 
	mbuckë_3_max_‰ì
 = 
≥r˚¡_100
 - 
∑ge_ovîhód
,

170 
	mbuckë_3_mö_‰ì
 = 
≥r˚¡_75
,

172 
	mbuckë_2_max_‰ì
 = 
buckë_3_mö_‰ì
 - 1,

173 
	mbuckë_2_mö_‰ì
 = 
≥r˚¡_50
,

175 
	mbuckë_1_max_‰ì
 = 
buckë_2_mö_‰ì
 - 1,

176 
	mbuckë_1_mö_‰ì
 = 
≥r˚¡_25
,

180 #îr‹ 
numbî
 
of
 
bôs
 
hi°o
 
buckës
 
nŸ
 
deföed
 
¥›îly


184 
	mbuckë_0_max_‰ì
 = 
buckë_1_mö_‰ì
 - 1,

185 
	mbuckë_0_mö_‰ì
 = 0,

187 #i‡
HBUCKETBITS
 == 4

188 
	m•a˚_buckë_mask_high_bôs
 =

189 –
≥r˚¡_07
 | 
≥r˚¡_12
 | 
≥r˚¡_25
 | 
≥r˚¡_50
 )

190 #ñi‡
HBUCKETBITS
 == 3

191 
•a˚_buckë_mask_high_bôs
 =

192 –
≥r˚¡_12
 | 
≥r˚¡_25
 | 
≥r˚¡_50
 )

194 
•a˚_buckë_mask_high_bôs
 =

195 –
≥r˚¡_25
 | 
≥r˚¡_50
 )

200 ˛as†
	cpgöfo_t
 {

201 
	m¥iv©e
:

202 
smsize_t
 
_•a˚_À·
;

203 
shpid_t
 
	m_pgid
;

204 
	mpublic
:

205 
NORET
 
	$pgöfo_t
(): 
	`_•a˚_À·
(0), 
	$_pgid
(0) {}

206 
NORET
 
	$pgöfo_t
(c⁄° 
shpid_t
& 
pg
, 
smsize_t
 
¶
):

207 
	`_•a˚_À·
(
¶
), 
	$_pgid
(
pg
Ë{ 
	}
}

208 
NORET
 
	$pgöfo_t
(c⁄° 
pgöfo_t
& 
Ÿhî
):

209 
	`_•a˚_À·
(
Ÿhî
.
_•a˚_À·
),

210 
	$_pgid
(
Ÿhî
.
_pgid
Ë{ 
	}
}

212 
	gNORET
 ~
	$pgöfo_t
(Ë{ 
	}
}

214 
smsize_t
 
	$•a˚
(Ëc⁄° {  
_•a˚_À·
; 
	}
}

215 
shpid_t
 
	$∑ge
(Ëc⁄° {  
_pgid
; 
	}
}

216 
	$upd©e_•a˚
(
smsize_t
 
v
) {

217 
_•a˚_À·
 = 
v
;

218 
	}
}

219 
£t_buckë
(c⁄° 
shpid_t
& 
pg
, 
•a˚_buckë_t
 
b
);

220 
	$£t
(c⁄° 
shpid_t
& 
pg
, 
smsize_t
 
v
) {

221 
_•a˚_À·
 = 
v
;

222 
_pgid
 = 
pg
;

223 
	}
}

224 
‰õnd
 
	go°ªam
 &
	g›î©‹
<<(o°ªam&, c⁄° 
	gpgöfo_t
&
	gp
);

227 
ölöe
 

228 
	gpgöfo_t
::
	$£t_buckë
(c⁄° 
shpid_t
& 
pg
, 
•a˚_buckë_t
 
b
)

231 
_•a˚_À·
 = 
∑ge_p
::
	`buckë2‰ì_•a˚
(
b
);

232 
_pgid
 = 
pg
;

233 
	}
}

235 
ölöe


236 
	go°ªam
 &
	g›î©‹
<<(o°ªam&
	go
, c⁄° 
	gpgöfo_t
&
	gp
) {

237 
	go
 << 
	gp
.
	g_pgid
 << ":" <<Ö.
	g_•a˚_À·
 << 
	gíds
;

238  
	go
;

241 ˛as†
	c°‹e_hi°o_t
 {

242 
	mpublic
:

243 
NORET
 
°‹e_hi°o_t
();

244 
de¸
(
•a˚_buckë_t
 
b
);

245 
	$ö¸
(
•a˚_buckë_t
 
b
) {

246 
buckë
[
b
]++;

248 
boﬁ
 
	$exi°s
(
•a˚_buckë_t
 
b
) const {

249  
buckë
[
b
] > 0;

250 
	}
}

251 
‰õnd
 
	go°ªam
 &
	g›î©‹
<<(o°ªam&, c⁄° 
	g°‹e_hi°o_t
&);

252 
	g¥iv©e
:

253 
shpid_t
 
buckë
[
•a˚_num_buckës
];

255 
ölöe
 
NORET


256 
	g°‹e_hi°o_t
::
	$°‹e_hi°o_t
()

258 
shpid_t
 
p
=0;Ö < 
•a˚_num_buckës
;Ö++) {

262 
buckë
[
p
] = 0;

264 
	}
}

266 
ölöe
 

267 
	g°‹e_hi°o_t
::
	$de¸
(
•a˚_buckë_t
 
b
)

269 
buckë
[
b
]--;

270 if((
buckë
[
b
])<0) bucket[b] = 0;

271 
	}
}

	@src/sm/page_s.h

53 #i‚de‡
PAGE_S_H


54 
	#PAGE_S_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


65 
˛ass
 
	gx˘_t
;

73 ˛as†
	c∑ge_s
 {

74 
	mpublic
:

75 
öt2_t
 
	t¶Ÿ_off£t_t
;

76 
uöt2_t
 
	t¶Ÿ_Àngth_t
;

77 
¶Ÿ_off£t_t
 
	t∑ge_byãs_t
;

78 
¶Ÿ_off£t_t
 
	t¶Ÿ_ödex_t
;

79 
	s¶Ÿ_t
 {

80 
¶Ÿ_off£t_t
 
	moff£t
;

81 
¶Ÿ_Àngth_t
 
	mÀngth
;

84 ˛as†
	c•a˚_t
 {

85 
	gpublic
:

86 
•a˚_t
() {};

87 ~
•a˚_t
() {};

90 
öô_•a˚_t
(
n‰ì
, 
boﬁ
 
rÊag
) {

91 
	g_tid
 = 
tid_t
(0, 0);

92 
	g_n‰ì
 = 
n‰ì
;

93 
	g_ƒsvd
 = 
_x˘_rsvd
 = 0;

95 
	g_rÊag
 = 
rÊag
;

98 
n‰ì
(Ëc⁄° {  
	g_n‰ì
; }

102 
boﬁ
 
rÊag
(Ëc⁄° {  
	g_rÊag
!=0; }

104 
ußbÀ_f‹_√w_¶Ÿs
() const {

105  
n‰ì
(Ë- 
ƒsvd
();

107 
ußbÀ
(
x˘_t
* 
xd
);

109 
rc_t
 
acquúe
(
amt
, 
¶Ÿ_byãs
, 
x˘_t
* 
xd
,

110 
boﬁ
 
do_ô
=
åue
);

111 
ªÀa£
(
amt
, 
x˘_t
* 
xd
);

112 
undo_acquúe
(
amt
, 
x˘_t
* 
xd
);

113 
undo_ªÀa£
(
amt
, 
x˘_t
* 
xd
);

114 c⁄° 
	gtid_t
& 
tid
(Ëc⁄° {  
	g_tid
; }

115 
∑ge_byãs_t
 
ƒsvd
(Ëc⁄° {  
	g_ƒsvd
; }

116 
∑ge_byãs_t
 
x˘_rsvd
(Ëc⁄° {  
	g_x˘_rsvd
; }

119 
	g¥iv©e
:

121 
_check_ª£rve
();

123 
tid_t
 
	g_tid
;

125 #i‡
SM_PAGESIZE
 > 32768

126 #îr‹ 
Page
 
sizes
 
this
 
big
 
¨e
 
nŸ
 
suµ‹ãd
.

128 
∑ge_byãs_t
 
	g_n‰ì
;

129 
∑ge_byãs_t
 
	g_ƒsvd
;

130 
∑ge_byãs_t
 
	g_x˘_rsvd
;

131 
∑ge_byãs_t
 
	g_rÊag
;

135 
	gfoŸî_sz
 = (0

136 + 2 * (
¶Ÿ_t
)

137 + (
l¢_t
)

140 
	g_hdr_sz
 = (0

141 + (
l¢_t
)

142 + (
Õid_t
)

143 + 2 * (
shpid_t
)

144 + (
uöt2_t
)

145 + (
fûl2
)

146 + (
•a˚_t
)

147 + (
¶Ÿ_ödex_t
)

148 + 2 * (
¶Ÿ_off£t_t
)

149 + (
fûl2
)

150 + (
w_ba£_t
::
uöt4_t
)

151 + (
w_ba£_t
::
uöt4_t
)

153 
	ghdr_sz
 = (
_hdr_sz
 + 
°©ic_Æign
<
foŸî_sz
>::
vÆue
),

154 
	gd©a_sz
 = 
smÀvñ_0
::
∑ge_sz
 - 
hdr_sz
,

155 
	gmax_¶Ÿ
 = 
d©a_sz
 / (
¶Ÿ_t
) + 2

161 
l¢_t
 
	gl¢1
;

163 
Õid_t
 
	gpid
;

165 
shpid_t
 
	g√xt
;

167 
shpid_t
 
	g¥ev
;

169 
uöt2_t
 
	gèg
;

171 
fûl2
 
	g_fûl2
;

174 
•a˚_t
 
	g•a˚
;

177 
¶Ÿ_off£t_t
 
	gíd
;

179 
¶Ÿ_ödex_t
 
	gn¶Ÿs
;

181 
¶Ÿ_off£t_t
 
	gnvaˇ¡
;

183 
fûl2
 
	g_fûl2b
;

185 
	gw_ba£_t
::
uöt4_t
 
_¥iv©e_°‹e_Êags
;

188 
	gw_ba£_t
::
uöt4_t
 
	$gë_∑ge_°‹eÊags
(Ëc⁄° {  
_¥iv©e_°‹e_Êags
;
	}
}

189 
	gw_ba£_t
::
uöt4_t
 
	$£t_∑ge_°‹eÊags
(
uöt4_t
 
f
) {

190  (
_¥iv©e_°‹e_Êags
=
f
);
	}
}

192 
	gw_ba£_t
::
uöt4_t
 
∑ge_Êags
;

195 
	u¶Ÿ_¨øy
 {

196 
	gd©a
[
d©a_sz
];

197 
¶Ÿ_t
 
	g¶Ÿ
[
max_¶Ÿ
];

198 } 
	g_¶Ÿs
;

200 
	g¶Ÿ_t
 &
	$¶Ÿ
(
¶Ÿid_t
 
idx
Ë{  
_¶Ÿs
.
¶Ÿ
[
max_¶Ÿ
-idx-1]; 
	}
}

201 *
	$d©a
(Ë{  
_¶Ÿs
.
d©a
; 
	}
}

203 
¶Ÿ_t
 c⁄° &
	$¶Ÿ
(
¶Ÿid_t
 
idx
Ëc⁄° {  
_¶Ÿs
.
¶Ÿ
[
max_¶Ÿ
-idx-1]; 
	}
}

204 c⁄° *
	$d©a
(Ëc⁄° {  
_¶Ÿs
.
d©a
; 
	}
}

208 
l¢_t
 
	gl¢2
;

210 
	$∑ge_s
(Ë{ 
	}
}

211 ~
	$∑ge_s
(Ë{ 
	}
}

	@src/sm/partition.cpp

53 
	~"w_deföes.h
"

57 
	#debug_log
 
Ál£


	)

59 
	#SM_SOURCE


	)

60 
	#PARTITION_C


	)

61 #ifde‡
__GNUG__


62 #¥agm®
im∂emíèti⁄


65 
	~"sm_öt_1.h
"

66 
	~"logty≥_gí.h
"

67 
	~"log.h
"

68 
	~"log_c‹e.h
"

72 
	~"logdef_gí.˝p
"

76 ˛as†
	cblock_of_zî€s
 {

77 
	m¥iv©e
:

78 
_block
[
log_c‹e
::
BLOCK_SIZE
];

79 
	mpublic
:

80 
NORET
 
	$block_of_zî€s
() {

81 
	`mem£t
(&
_block
[0], 0, 
log_c‹e
::
BLOCK_SIZE
);

83 *
	$block
(Ë{  
_block
; 
	}
}

86 *
	$block_of_zîos
() {

88 
block_of_zî€s
 
z
;

89  
z
.
	`block
();

90 
	}
}

93 
	g∑πôi⁄_t
::
	$_ªadbuf
(Ë{  
_ow√r
->
	`ªadbuf
(); 
	}
}

94 #i‡
W_DEBUG_LEVEL
 > 2

96 
	g∑πôi⁄_t
::
	$check_fhdl_rd
() const {

97 
boﬁ
 
is›í
 = 
	`is_›í_f‹_ªad
();

98 if(
_fhdl_rd
 =
övÆid_fhdl
) {

99 
	`w_as£π3
–!
is›í
 );

101 
	`w_as£π3
(
is›í
);

103 
	}
}

105 
	g∑πôi⁄_t
::
	$check_fhdl_≠p
() const {

106 if(
_fhdl_≠p
 !
övÆid_fhdl
) {

107 
	`w_as£π3
(
	`is_›í_f‹_≠≥nd
());

109 
	`w_as£π3
(! 
	`is_›í_f‹_≠≥nd
());

111 
	}
}

114 
boﬁ


115 
	g∑πôi⁄_t
::
	$is_cuºít
() const

118 if(
	`ödex
(Ë=
_ow√r
->
	`∑πôi⁄_ödex
()) {

119 
	`w_as£π3
(
	`num
()>0);

120 
	`w_as£π3
(
_ow√r
->
	`∑πôi⁄_num
(Ë=
	`num
());

121 
	`w_as£π3
(
	`exi°s
());

122 
	`w_as£π3
(
_ow√r
->
	`cuº_∑πôi⁄
(Ë=
this
);

123 
	`w_as£π3
(
_ow√r
->
	`∑πôi⁄_ödex
(Ë=
	`ödex
());

124 
	`w_as£π3
(
this
->
	`is_›í_f‹_≠≥nd
());

126  
åue
;

128 #i‡
W_DEBUG_LEVEL
 > 2

129 if(
	`num
() == 0) {

130 
	`w_as£π3
(!
this
->
	`exi°s
());

133  
Ál£
;

134 
	}
}

144 
	g∑πôi⁄_t
::
	$›í_f‹_≠≥nd
(
∑πôi⁄_numbî_t
 
__num
,

145 c⁄° 
l¢_t
& 
íd_höt
)

147 
	`FUNC
(
∑πôi⁄
::
›í_f‹_≠≥nd
);

150 
	`w_as£π3
(!
	`is_›í_f‹_≠≥nd
());

156 
fd
;

158 
	`DBG
(<<"›í_f‹_≠≥ndÇum()=" << 
	`num
()

159 << "__num=" << 
__num


160 << "_num=" << 
_num


173 
	`≥ek
(
__num
, 
íd_höt
, 
åue
, &
fd
);

174 
	`w_as£π3
(
fd
);

175 if(
	`size
(Ë=
nosize
) {

177 
	`£t_size
(0);

180 
_num
 = 
__num
;

182 
	`w_as£π1
(
	`size
(Ë!
∑πôi⁄_t
::
nosize
);

184 
	`_£t_fhdl_≠p
(
fd
);

185 
	`_£t_°©e
(
m_Êushed
);

186 
	`_£t_°©e
(
m_exi°s
);

187 
	`_£t_°©e
(
m_›í_f‹_≠≥nd
);

189 
_ow√r
->
	`£t_cuºít
–
	`ödex
(), 
	`num
() );

191 
	}
}

194 
	g∑πôi⁄_t
::
	$˛ór
()

196 
_num
=0;

197 
_size
 = 
nosize
;

198 
_mask
=0;

199 
	`_˛r_°©e
(
m_›í_f‹_ªad
);

200 
	`_˛r_°©e
(
m_›í_f‹_≠≥nd
);

201 
	`DBGTHRD
(<<"∑πôi⁄ " << 
	`num
() << " clear is clobbering "

202 << 
_fhdl_rd
 << "ánd " << 
_fhdl_≠p
);

203 
_fhdl_rd
 = 
övÆid_fhdl
;

204 
_fhdl_≠p
 = 
övÆid_fhdl
;

205 
	}
}

208 
	g∑πôi⁄_t
::
	$öô
(
log_c‹e
 *
ow√r
)

210 
_°¨t
 = 0;

211 
_ow√r
 = 
ow√r
;

212 
_e›
 = 
ow√r
->
	`limô
();

213 
	`˛ór
();

214 
	}
}

226 
	g∑πôi⁄_t
::
	$Êush
(

227 
fd
,

229 
l¢_t
 
l¢
,

230 c⁄° * c⁄° 
buf
,

231 
°¨t1
,

232 
íd1
,

233 
°¨t2
,

234 
íd2
)

236 
size
 = (
íd2
 - 
°¨t2
Ë+ (
íd1
 - 
°¨t1
);

237 
wrôe_size
 = 
size
;

240 
	`DBGTHRD
–<< "Sync-ögÜogÜ¢ " << 
l¢


241 << " sèπ1 " << 
°¨t1


242 << "Énd1 " << 
íd1


243 << " sèπ2 " << 
°¨t2


244 << "Énd2 " << 
íd2
 );

249 
fûe_off£t
 = 
log_c‹e
::
	`Êo‹2
(
l¢
.
	`lo
(),Üog_c‹e::
BLOCK_SIZE
);

252 
dñè
 = 
l¢
.
	`lo
(Ë- 
fûe_off£t
;

255 
	`w_as£π1
(
°¨t1
 >
dñè
);

257 
wrôe_size
 +
dñè
;

258 
°¨t1
 -
dñè
;

264 
fûeoff_t
 
whîe
 = 
	`°¨t
(Ë+ 
fûe_off£t
;

265 
w_rc_t
 
e
 = 
	`me
()->
	`l£ek
(
fd
, 
whîe
, 
°hªad_t
::
SEEK_AT_SET
);

266 i‡(
e
.
	`is_îr‹
()) {

267 
	`W_FATAL_MSG
(
e
.
	`îr_num
(), << "ERROR: couldÇot seekÅo "

268 << 
fûe_off£t


269 << " + " << 
	`°¨t
()

271 << 
ídl
);

279 
skù_log
* 
s
 = 
_ow√r
->
	`gë_skù_log
();

280 
s
->
	`£t_l¢_ck
(
l¢
+
size
);

282 #ifde‡
W_TRACE


283 
off_t
 
posôi⁄
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
);

284 
	`DBGTHRD
(<<"settingÜsn_ck in skip_logátÖos "

285 << 
posôi⁄
 << " withÜsn "

286 << 
s
->
	`gë_l¢_ck
()

287 << "™d sizê" << 
s
->
	`Àngth
()

297 
tŸÆ
 = 
wrôe_size
 + 
s
->
	`Àngth
();

302 
gønd_tŸÆ
 = 
log_c‹e
::
	`˚û2
(
tŸÆ
,Üog_c‹e::
BLOCK_SIZE
);

304 
	`w_as£π2
(
gønd_tŸÆ
 % 
log_c‹e
::
BLOCK_SIZE
 == 0);

306 
sdisk_ba£_t
::
	tiovec_t
 iovec_t;

308 
iovec_t
 
iov
[] = {

310 
	`iovec_t
((*)
buf
+
°¨t1
, 
íd1
-start1),

312 
	`iovec_t
((*)
buf
+
°¨t2
, 
íd2
-start2),

313 
	`iovec_t
(
s
, s->
	`Àngth
()),

314 
	`iovec_t
(
	`block_of_zîos
(), 
gønd_tŸÆ
-
tŸÆ
),

317 
w_rc_t
 
e
 = 
	`me
()->
	`wrôev
(
fd
, 
iov
, (iov)/(
iovec_t
));

318 i‡(
e
.
	`is_îr‹
()) {

319 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


321 << " fd=" << 
fd


323 << 
log_c‹e
::
BLOCK_SIZE


325 << " " << 
iov
[0].
iov_Àn


326 << " " << 
iov
[1].
iov_Àn


327 << " " << 
iov
[2].
iov_Àn


328 << " " << 
iov
[3].
iov_Àn


329 << ":" << 
ídl


330 << 
e


331 << 
Êushl
;

332 
˚º


334 << " fd=" << 
fd


335 << " x„rsize=" << 
log_c‹e
::
BLOCK_SIZE


336 << 
log_c‹e
::
BLOCK_SIZE


338 << " " << 
iov
[0].
iov_Àn


339 << " " << 
iov
[1].
iov_Àn


340 << " " << 
iov
[2].
iov_Àn


341 << " " << 
iov
[3].
iov_Àn


342 << ":" << 
ídl


343 << 
e


344 << 
Êushl
;

345 
	`W_COERCE
(
e
);

349 
this
->
	`Êush
(
fd
);

350 
	}
}

370 
	g∑πôi⁄_t
::
	$_≥ek
(

371 
∑πôi⁄_numbî_t
 
num_w™ãd
,

372 
fûeoff_t
 
≥ek_loc
,

373 
fûeoff_t
 
whﬁe_size
,

374 
boﬁ
 
ªcovîy
,

375 
fd


378 
	`FUNC
(
∑πôi⁄_t
::
_≥ek
);

379 
	`w_as£π3
(
	`num
(Ë=0 ||Çum(Ë=
num_w™ãd
);

380 
	`˛ór
();

382 
	`_˛r_°©e
(
m_exi°s
);

383 
	`_˛r_°©e
(
m_Êushed
);

384 
	`_˛r_°©e
(
m_›í_f‹_ªad
);

386 
	`w_as£π3
(
fd
);

388 
logªc_t
 *
l
 = 
NULL
;

397 
boﬁ
 
≥eked_high
 = 
Ál£
;

398 if–(
≥ek_loc
 !
∑πôi⁄_t
::
nosize
)

399 && (
≥ek_loc
 <
this
->
_e›
)

400 && (
≥ek_loc
 < 
whﬁe_size
) ) {

401 
≥eked_high
 = 
åue
;

403 
≥ek_loc
 = 0;

404 
≥eked_high
 = 
Ál£
;

406 
agaö
:

407 
l¢_t
 
pos
 = 
	`l¢_t
(
	`uöt4_t
(
	`num
()), 
	`sm_diskaddr_t
(
≥ek_loc
));

409 
l¢_t
 
l¢_ck
 = 
pos
 ;

410 
w_rc_t
 
rc
;

412 
pos
.
	`lo
(Ë< 
this
->
_e›
) {

413 
	`DBGTHRD
("pos.lo(Ë" << 
pos
.
	`lo
()

414 << "ándÉ›=" << 
this
->
_e›
);

415 if(
ªcovîy
) {

418 if(
pos
.
	`hi
(Ë=
_ow√r
->
	`ma°î_l¢
().hi() &&

419 
pos
.
	`lo
(Ë< 
_ow√r
->
	`ma°î_l¢
().lo()) {

420 if(!
debug_log
) {

421 
pos
 = 
_ow√r
->
	`ma°î_l¢
();

425 
	`DBGTHRD
–<<"ªadögÖos=" << 
pos
 <<"É›=" << 
this
->
_e›
);

427 
rc
 = 
	`ªad
(
l
, 
pos
, 
fd
);

428 
	`DBGTHRD
(<<"POS " << 
pos
 << ":Åx." << *
l
);

430 if(
rc
.
	`îr_num
(Ë=
smÀvñ_0
::
eEOF
) {

432 
	`DBGTHRD
(<<"EOF--Skipping!");

433 
	`_skù
(
pos
, 
fd
);

437 
	`w_as£π1
(
l
 !
NULL
);

439 
	`DBGTHRD
(<<"≥ek index " << 
_ödex


440 << "Ü->Àngth " << 
l
->
	`Àngth
()

441 << "Ü->ty≥ " << (
l
->
	`ty≥
()));

443 
	`w_as£π1
(
l
->
	`Àngth
(Ë>
logªc_t
::
hdr_sz
);

446 
l¢_ck
 = 
l
->
	`gë_l¢_ck
();

447 
îr
 = 0;

449 
	`DBGTHRD
–<<"l¢ck=" << 
l¢_ck
 << "Öos=" << 
pos


450 <<"Ü.Àngth=" << 
l
->
	`Àngth
() );

453 if––
l
->
	`Àngth
(Ë< 
logªc_t
::
hdr_sz
 )

455 –
l
->
	`Àngth
(Ë> (
logªc_t
) )

457 –
l¢_ck
.
	`lo
(Ë!
pos
.lo() )

459 (
num_w™ãd
 && (
l¢_ck
.
	`hi
() !=Çum_wanted) )

461 
îr
++;

464 if–
num_w™ãd
 && (
l¢_ck
.
	`hi
() !=Çum_wanted) ) {

466 
	`DBGTHRD
(<<"NOSTASH becauseÇum_wanted="

467 << 
num_w™ãd


469 << 
l¢_ck


474 
	`DBGTHRD
–<<"ty≥()=" << (
l
->
	`ty≥
())

475 << " index()=" << 
this
->
	`ödex
()

476 << "Ü¢_ck=" << 
l¢_ck


477 << "Éº=" << 
îr
 );

487 #i‡
W_DEBUG_LEVEL
 > 1

488 if–
l
->
	`ty≥
(Ë=
logªc_t
::
t_skù
 ) {

489 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 <<

490 "Found skùÑec‹d " << "áà" << 
pos


491 << 
Êushl
;

494 if–
l
->
	`ty≥
(Ë=
logªc_t
::
t_skù
 &&

495 
pos
 =
	`fú°_l¢
()) {

497 if–
l¢_ck
 !
l¢_t
::
nuŒ
 ) {

498 
	`DBGTHRD
–<<" fú°Ñe¯i†skùánd ha†l¢ " << 
l¢_ck
 );

499 
îr
 = 1;

503 i‡–(
l¢_ck
.
	`hi
()-1Ë% 
PARTITION_COUNT
 !(
uöt4_t
)
this
->
	`ödex
()) {

504 
	`DBGTHRD
( <<"unexpectedÉnd ofÜog");

505 
îr
 = 2;

508 if(
îr
 > 0) {

512 if(
îr
 > 1) {

513 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io
 <<

516 << 
Êushl
;

519 if(
≥eked_high
) {

521 
	`DBGTHRD
–<<"Pìk high faûedáàlo¯" << 
pos
);

522 
≥ek_loc
 = 0;

523 
≥eked_high
 = 
Ál£
;

524 
agaö
;

530 #i‡
W_DEBUG_LEVEL
 > 2

531 if(
pos
.
	`hi
() != 0) {

532 
	`w_as£π3
(
pos
.
	`hi
(Ë=
num_w™ãd
);

539 
l¢_ck
 = 
	`l¢_t
(
num_w™ãd
, 
pos
.
	`lo
());

540 
	`_skù
(
l¢_ck
, 
fd
);

545 
pos
 = 
l¢_ck
;

547 
	`DBGTHRD
(<< "Ñecovîy=" << 
ªcovîy


548 << " ma°î=" << 
_ow√r
->
	`ma°î_l¢
()

550 if–
l
->
	`ty≥
(Ë=
logªc_t
::
t_skù


551 || !
ªcovîy
) {

562 
	`DBGTHRD
(<<" BREAK EARLY ");

565 
pos
.
	`adv™˚
(
l
->
	`Àngth
());

571 
	`w_as£π1
(
l
 !
NULL
);

572 
	`DBGTHRD
(<<"pos" << 
pos
 << "l->ty≥()=" << (
l
->
	`ty≥
()));

574 #i‡
W_DEBUG_LEVEL
 > 2

575 if(
pos
.
	`lo
(Ë> 
	`fú°_l¢
().lo()) {

576 
	`w_as£π3
(
l
!=0);

580 if–
pos
.
	`lo
(Ë> 
	`fú°_l¢
().lo(Ë|| 
l
->
	`ty≥
(Ë!
logªc_t
::
t_skù
 ) {

582 
_num
 = 
pos
.
	`hi
();

590 if(
pos
.
	`lo
()> 
	`fú°_l¢
().lo()Ë
	`£t_size
(pos.lo());

596 
	`_£t_°©e
(
m_exi°s
);

598 
	`DBGTHRD
(<<"STASHEDÇum()=" << 
	`num
()

599 << " size()=" << 
	`size
()

602 
	`w_as£π3
(
	`num
() == 0);

603 
	`w_as£π3
(
	`size
(Ë=
nosize
 || size() == 0);

606 
	`DBGTHRD
(<<"SIZE NOT STASHED ");

608 
	}
}

613 
	g∑πôi⁄_t
::
	$_skù
(c⁄° 
l¢_t
 &
Œ
, 
fd
)

615 
	`FUNC
(
∑πôi⁄_t
::
skù
);

618 
	`w_as£π1
(
_num
 =0 || _num !
_ow√r
->
	`∑πôi⁄_num
());

620 
	`DBGTHRD
(<<"skùáà" << 
Œ
);

622 * 
_skùbuf
 = 
√w
 [
log_c‹e
::
BLOCK_SIZE
*2];

625 
off£t
 = 
_ow√r
->
	`¥ime
(
_skùbuf
, 
fd
, 
	`°¨t
(), 
Œ
);

628 
this
->
	`Êush
(
fd
, 
Œ
, 
_skùbuf
, 
off£t
, offset, offset, offset);

629 
dñëe
 [] 
_skùbuf
;

630 
	`DBGTHRD
(<<"wrŸê™d flushed skùÑec‹dáà" << 
Œ
);

632 
	`_£t_œ°_skù_l¢
(
Œ
);

633 
	}
}

650 
w_rc_t


651 
	g∑πôi⁄_t
::
	$ªad
(
logªc_t
 *&
Ω
, 
l¢_t
 &
Œ
, 
fd
)

653 
	`FUNC
(
∑πôi⁄
::
ªad
);

655 
	`INC_TSTAT
(
log_„tches
);

657 if(
fd
 =
övÆid_fhdl
Ëfd = 
	`fhdl_rd
();

659 #i‡
W_DEBUG_LEVEL
 > 2

660 
	`w_as£π3
(
fd
);

661 if(
	`exi°s
()) {

662 if(
fd
Ë
	`w_as£π3
(
	`is_›í_f‹_ªad
());

663 
	`w_as£π3
(
	`num
(Ë=
Œ
.
	`hi
());

667 
fûeoff_t
 
pos
 = 
Œ
.
	`lo
();

668 
fûeoff_t
 
lowî
 = 
pos
 / 
XFERSIZE
;

670 
lowî
 *
XFERSIZE
;

671 
fûeoff_t
 
off
 = 
pos
 - 
lowî
;

673 
	`DBGTHRD
(<<"£ekÅÿl¢ " << 
Œ


674 << " index=" << 
_ödex
 << " fd=" << 
fd


675 << "Öos=" << 
pos


676 << "Üowî=" << 
lowî
 << " + " << 
	`°¨t
()

677 << " fd=" << 
fd


684 
b
 = 0;

685 
fûeoff_t
 
À·ovî
 = 
logªc_t
::
hdr_sz
;

686 
boﬁ
 
fú°_time
 = 
åue
;

688 
Ω
 = (
logªc_t
 *)(
	`_ªadbuf
(Ë+ 
off
);

690 
	`DBGTHRD
(<< "off" << (()
off
)

691 << "_ªadbuf()@ " << 
	`W_ADDR
(
	`_ªadbuf
())

692 << "Ñp@ " << 
	`W_ADDR
(
Ω
)

695 
À·ovî
 > 0) {

697 
	`DBGTHRD
(<<"À·ovî=" << (
À·ovî
Ë<< " b=" << 
b
);

699 
w_rc_t
 
e
 = 
	`me
()->
	`¥ód
(
fd
, (*)(
	`_ªadbuf
(Ë+ 
b
), 
XFERSIZE
, 
	`°¨t
(Ë+ 
lowî
 + b);

700 
	`DBGTHRD
(<<"a·î me()->ªad(Ësize" << (
XFERSIZE
));

703 i‡(
e
.
	`is_îr‹
()) {

705 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


706 << "ªad(" << (
XFERSIZE
Ë<< ")" << 
Êushl
;

707 
	`W_COERCE
(
e
);

709 
b
 +
XFERSIZE
;

716 i‡(
fú°_time
) {

717 if–
Ω
->
	`Àngth
(Ë> (
logªc_t
) ||

718 
Ω
->
	`Àngth
(Ë< 
logªc_t
::
hdr_sz
 ) {

719 
	`w_as£π1
(
Œ
.
	`hi
() == 0);

720  
	`RC
(
smÀvñ_0
::
eEOF
);

722 
fú°_time
 = 
Ál£
;

723 
À·ovî
 = 
Ω
->
	`Àngth
(Ë- (
b
 - 
off
);

724 
	`DBGTHRD
(<<"Üe·ovîÇow=" << 
À·ovî
);

726 
À·ovî
 -
XFERSIZE
;

727 
	`w_as£π3
(
À·ovî
 =()
Ω
->
	`Àngth
(Ë- (
b
 - 
off
));

728 
	`DBGTHRD
(<<"Üe·ovîÇow=" << 
À·ovî
);

731 
	`DBGTHRD
–<< "_ªadbuf()@ " << 
	`W_ADDR
(
	`_ªadbuf
())

733 << ()(*((*)
	`_ªadbuf
()))

734 << ()(*((*)
	`_ªadbuf
()+1))

735 << ()(*((*)
	`_ªadbuf
()+2))

736 << ()(*((*)
	`_ªadbuf
()+3))

738 
	`w_as£π1
(
Ω
 !
NULL
);

739  
RCOK
;

740 
	}
}

743 
w_rc_t


744 
	g∑πôi⁄_t
::
	$›í_f‹_ªad
(

745 
∑πôi⁄_numbî_t
 
__num
,

746 
boﬁ
 
îr


749 
	`FUNC
(
∑πôi⁄_t
::
›í_f‹_ªad
);

753 
	`DBGTHRD
(<<"°¨à›í f‹Ö¨à" << 
__num
 << "Éº=" << 
îr
);

755 
	`w_as£π1
(
__num
 != 0);

760 if(
	`fhdl_rd
(Ë=
övÆid_fhdl
) {

761 *
‚ame
 = 
√w
 [
smÀvñ_0
::
max_dev«me
];

762 i‡(!
‚ame
)

763 
	`W_FATAL
(
fcOUTOFMEMORY
);

764 
w_auto_dñëe_¨øy_t
<> 
	`ad_‚ame
(
‚ame
);

766 
log_m
::
	`make_log_«me
(
__num
, 
‚ame
, 
smÀvñ_0
::
max_dev«me
);

768 
fd
;

769 
w_rc_t
 
e
;

770 
	`DBGTHRD
(<< "∑πôi⁄ " << 
__num


771 << "›í_f‹_ªad OPEN " << 
‚ame
);

772 
Êags
 = 
smthªad_t
::
OPEN_RDONLY
;

774 
e
 = 
	`me
()->
	`›í
(
‚ame
, 
Êags
, 0, 
fd
);

776 
	`DBGTHRD
(<< " OPEN " << 
‚ame
 << "Ñëu∫ed " << 
fd
);

778 i‡(
e
.
	`is_îr‹
()) {

779 if(
îr
) {

780 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


782 << 
__num
 << " fd" << 
fd
 << 
Êushl
;

784 
	`W_DO
(
e
);

786 
	`w_as£π3
(! 
	`exi°s
());

787 
	`w_as£π3
(
_fhdl_rd
 =
övÆid_fhdl
);

789 
	`_˛r_°©e
(
m_›í_f‹_ªad
);

790 
	`DBGTHRD
(<<"fhdl_≠p(Ëi†" << 
_fhdl_≠p
);

791  
RCOK
;

795 
	`w_as£π3
(
_fhdl_rd
 =
övÆid_fhdl
);

796 
_fhdl_rd
 = 
fd
;

798 
	`DBGTHRD
(<<"sizêi†" << 
	`size
());

802 
	`_£t_°©e
(
m_exi°s
);

803 
	`_£t_°©e
(
m_›í_f‹_ªad
);

805 
_num
 = 
__num
;

806 
	`w_as£π3
(
	`exi°s
());

807 
	`w_as£π3
(
	`is_›í_f‹_ªad
());

813 
	`w_as£π3
(
_fhdl_rd
 !
övÆid_fhdl
);

814 
	`DBGTHRD
(<<"_fhdl_rd = " <<
_fhdl_rd
 );

815  
RCOK
;

816 
	}
}

823 
	g∑πôi⁄_t
::
	$˛o£
(
boﬁ
 
bŸh
)

825 
boﬁ
 
îr_ícou¡îed
=
Ál£
;

826 
w_rc_t
 
e
;

830 if(
	`is_cuºít
()) {

836 
_ow√r
->
	`un£t_cuºít
();

838 i‡(
bŸh
) {

839 i‡(
	`fhdl_rd
(Ë!
övÆid_fhdl
) {

840 
	`DBGTHRD
(<< " CLOSE " << 
	`fhdl_rd
());

841 
e
 = 
	`me
()->
	`˛o£
(
	`fhdl_rd
());

842 i‡(
e
.
	`is_îr‹
()) {

843 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


845 << 
e
 << 
ídl
 << 
Êushl
;

846 
îr_ícou¡îed
 = 
åue
;

849 
_fhdl_rd
 = 
övÆid_fhdl
;

850 
	`_˛r_°©e
(
m_›í_f‹_ªad
);

853 i‡(
	`is_›í_f‹_≠≥nd
()) {

854 
	`DBGTHRD
(<< " CLOSE " << 
	`fhdl_rd
());

855 
e
 = 
	`me
()->
	`˛o£
(
	`fhdl_≠p
());

856 i‡(
e
.
	`is_îr‹
()) {

857 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


859 << 
ídl
 << 
e
 <<Énd»<< 
Êushl
;

860 
îr_ícou¡îed
 = 
åue
;

862 
_fhdl_≠p
 = 
övÆid_fhdl
;

863 
	`_˛r_°©e
(
m_›í_f‹_≠≥nd
);

864 
	`DBGTHRD
(<<"fhdl_≠p(Ëi†" << 
_fhdl_≠p
);

867 
	`_˛r_°©e
(
m_Êushed
);

868 i‡(
îr_ícou¡îed
) {

869 
	`W_COERCE
(
e
);

871 
	}
}

875 
	g∑πôi⁄_t
::
	$ßnôy_check
() const

877 if(
	`num
() == 0) {

879 
	`w_as£π3
(
	`size
(Ë=
nosize
);

880 
	`w_as£π3
(!
	`is_›í_f‹_ªad
());

881 
	`w_as£π3
(!
	`is_›í_f‹_≠≥nd
());

882 
	`w_as£π3
(!
	`exi°s
());

885 
	`w_as£π3
(
	`exi°s
());

886 (Ë
	`is_›í_f‹_ªad
();

887 (Ë
	`is_›í_f‹_≠≥nd
();

889 if(
	`is_cuºít
()) {

890 
	`w_as£π3
(
	`is_›í_f‹_≠≥nd
());

892 
	}
}

904 
	g∑πôi⁄_t
::
	$de°roy
()

906 
	`w_as£π3
(
	`num
(Ë< 
_ow√r
->
	`globÆ_mö_l¢
().
	`hi
());

908 if(
	`num
()>0) {

909 
	`w_as£π3
(
	`exi°s
());

910 
	`w_as£π3
(! 
	`is_cuºít
() );

911 
	`w_as£π3
(! 
	`is_›í_f‹_ªad
() );

912 
	`w_as£π3
(! 
	`is_›í_f‹_≠≥nd
() );

914 
log_c‹e
::
	`de°roy_fûe
(
	`num
(), 
åue
);

915 
	`_˛r_°©e
(
m_exi°s
);

917 
	`DBG
(<< " calling clear");

918 
	`˛ór
();

920 
	`w_as£π3
–!
	`exi°s
());

921 
	`ßnôy_check
();

922 
	}
}

926 
	g∑πôi⁄_t
::
	$≥ek
(

927 
∑πôi⁄_numbî_t
 
__num
,

928 c⁄° 
l¢_t
& 
íd_höt
,

929 
boﬁ
 
ªcovîy
,

930 * 
fdp


933 
	`FUNC
(
∑πôi⁄_t
::
≥ek
);

936 
fd
;

940 
	`w_as£π2
(
	`num
(Ë=0 ||Çum(Ë=
__num
);

941 
	`w_as£π3
(
__num
 != 0);

943 if–
	`num
() ) {

944 
	`˛o£_f‹_ªad
();

945 
	`˛o£_f‹_≠≥nd
();

946 
	`DBG
(<< " calling clear");

947 
	`˛ór
();

950 
	`_˛r_°©e
(
m_exi°s
);

951 
	`_˛r_°©e
(
m_Êushed
);

953 *
‚ame
 = 
√w
 [
smÀvñ_0
::
max_dev«me
];

954 i‡(!
‚ame
)

955 
	`W_FATAL
(
fcOUTOFMEMORY
);

956 
w_auto_dñëe_¨øy_t
<> 
	`ad_‚ame
(
‚ame
);

957 
log_m
::
	`make_log_«me
(
__num
, 
‚ame
, 
smÀvñ_0
::
max_dev«me
);

959 
smÀvñ_0
::
fûeoff_t
 
∑π_size
 = 
	`fûeoff_t
(0);

961 
	`DBGTHRD
(<<"∑πôi⁄ " << 
__num
 << "Öìk o≥nög " << 
‚ame
);

964 
Êags
 = 
smthªad_t
::
OPEN_RDWR
 | smthªad_t::
OPEN_SYNC


965 | 
smthªad_t
::
OPEN_CREATE
;

966 
w_rc_t
 
e
;

967 
e
 = 
	`me
()->
	`›í
(
‚ame
, 
Êags
, 0744, 
fd
);

968 i‡(
e
.
	`is_îr‹
()) {

969 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


970 << "ERROR: c™nŸ o≥¿log fûe: " << 
ídl
 << 
e
 << 
Êushl
;

971 
	`W_COERCE
(
e
);

973 
	`DBGTHRD
(<<"∑πôi⁄ " << 
__num
 << "Öìk o≥√d " << 
‚ame
);

975 
w_rc_t
 
e
;

976 
°hªad_ba£_t
::
fûe°©_t
 
°©buf
;

977 
e
 = 
	`me
()->
	`f°©
(
fd
, 
°©buf
);

978 i‡(
e
.
	`is_îr‹
()) {

979 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


980 << " C™nŸ sèàfd " << 
fd
 << ":"

981 << 
ídl
 << 
e
 << 
Êushl
;

982 
	`W_COERCE
(
e
);

984 
∑π_size
 = 
°©buf
.
°_size
;

985 
	`DBGTHRD
(<< "∑πôi⁄ " << 
__num
 << "Öeek "

986 << "sizêo‡" << 
‚ame
 << " i†" << 
°©buf
.
°_size
);

997 if–
∑π_size
 > 0 ) {

998 
	`w_as£π3
(
__num
 =
íd_höt
.
	`hi
() ||Énd_hint.hi() == 0);

999 
	`_≥ek
(
__num
, 
íd_höt
.
	`lo
(), 
∑π_size
, 
ªcovîy
, 
fd
);

1007 
	`DBGTHRD
(<<"Öìk DESTROYING PARTITION " << 
__num
 << " o¿fd " << 
fd
);

1010 
w_rc_t
 
e
 = 
	`me
()->
	`·runˇã
(
fd
, 
log_c‹e
::
BLOCK_SIZE
 );

1011 i‡(
e
.
	`is_îr‹
()) {

1012 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1013 << "ˇ¬Ÿ wrôêg¨bagêblock " << 
Êushl
;

1014 
	`W_COERCE
(
e
);

1019 
	`_skù
(
	`fú°_l¢
(
__num
), 
fd
);

1022 
e
 = 
	`me
()->
	`fsync
(
fd
);

1023 i‡(
e
.
	`is_îr‹
()) {

1024 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1025 << "ˇ¬Ÿ syn¯a·î skù block " << 
Êushl
;

1026 
	`W_COERCE
(
e
);

1030 
	`£t_size
(0);

1033 i‡(
fdp
) {

1034 
	`DBGTHRD
(<< "∑πôi⁄ " << 
__num
 << " SAVED, NOT CLOSED fd " << 
fd
);

1035 *
fdp
 = 
fd
;

1037 
	`DBGTHRD
(<< " CLOSE " << 
fd
);

1038 
w_rc_t
 
e
 = 
	`me
()->
	`˛o£
(
fd
);

1039 i‡(
e
.
	`is_îr‹
()) {

1040 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1041 << "ERROR: couldÇŸ clo£Åhêlog fûe." << 
Êushl
;

1042 
	`W_COERCE
(
e
);

1046 
	}
}

1049 
	g∑πôi⁄_t
::
	$Êush
(
fd
)

1054 
	`INC_TSTAT
(
log_fsync_˙t
);

1056 
w_rc_t
 
e
 = 
	`me
()->
	`fsync
(
fd
);

1057 i‡(
e
.
	`is_îr‹
()) {

1058 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1059 << "ˇ¬Ÿ syn¯a·î skù block " << 
Êushl
;

1060 
	`W_COERCE
(
e
);

1062 
	}
}

1065 
	g∑πôi⁄_t
::
	$˛o£_f‹_≠≥nd
()

1067 
f
 = 
	`fhdl_≠p
();

1068 i‡(
f
 !
övÆid_fhdl
) {

1069 
w_rc_t
 
e
;

1070 
	`DBGTHRD
(<< " CLOSE " << 
f
);

1071 
e
 = 
	`me
()->
	`˛o£
(
f
);

1072 i‡(
e
.
	`is_îr‹
()) {

1073 
smÀvñ_0
::
îæog
->
˛og
 << 
w¨nög_¥io


1075 << 
ídl
 << 
e
 <<Éndl;

1077 
_fhdl_≠p
 = 
övÆid_fhdl
;

1079 
	}
}

1082 
	g∑πôi⁄_t
::
	$˛o£_f‹_ªad
()

1084 
f
 = 
	`fhdl_rd
();

1085 i‡(
f
 !
övÆid_fhdl
) {

1086 
w_rc_t
 
e
;

1087 
	`DBGTHRD
(<< " CLOSE " << 
f
);

1088 
e
 = 
	`me
()->
	`˛o£
(
f
);

1089 i‡(
e
.
	`is_îr‹
()) {

1090 
smÀvñ_0
::
îæog
->
˛og
 << 
w¨nög_¥io


1092 << 
ídl
 << 
e
 <<Éndl;

1094 
_fhdl_rd
 = 
övÆid_fhdl
;

1096 
	}
}

	@src/sm/partition.h

54 #i‚de‡
PARTITION_H


55 
	#PARTITION_H


	)

56 
	~"w_deföes.h
"

61 
	mm_exi°s
=0x2,

62 
	mm_›í_f‹_ªad
=0x4,

63 
	mm_›í_f‹_≠≥nd
=0x8,

64 
	mm_Êushed
=0x10

65 } 
	t∑πôi⁄_mask_vÆues
;

67 
˛ass
 
	glog_c‹e
;

68 ˛as†
	c∑πôi⁄_t
 {

69 
	mpublic
:

70 
smÀvñ_0
::
	tfûeoff_t
 fileoff_t;

71 íum { 
	mXFERSIZE
 = 8192 };

72 íum { 
	gövÆid_fhdl
 = -1 };

73 íum { 
	gnosize
 = -1 };

75 
NORET
 
	$∑πôi⁄_t
() :

76 
	`_°¨t
(0),

77 
	`_ödex
(0),

78 
	`_num
(0),

79 
	`_mask
(0),

80 
	`_size
(0),

81 
	`_e›
(0),

82 
	`_ow√r
(0),

83 
	`_fhdl_rd
(
övÆid_fhdl
),

84 
	$_fhdl_≠p
(
övÆid_fhdl
Ë{
	}
}

86 ~
	$∑πôi⁄_t
(){
	}
}

90 
	g¥iv©e
:

91 
fûeoff_t
 
_°¨t
;

92 
∑πôi⁄_ödex_t
 
	g_ödex
;

93 
∑πôi⁄_numbî_t
 
	g_num
;

94 
	gw_ba£_t
::
uöt4_t
 
_mask
;

96 
fûeoff_t
 
	g_size
;

98 
fûeoff_t
 
	g_e›
;

99 
log_c‹e
* 
	g_ow√r
;

100 
l¢_t
 
	g_œ°_skù_l¢
;

103 
	g_fhdl_rd
;

104 
	g_fhdl_≠p
;

106 
	g¥iv©e
:

110 
Êush
(
fd
);

111 
l¢_t
 
	$fú°_l¢
(
uöt4_t
 
≤um
Ëc⁄° {  
	`l¢_t
–≤um, 0); 
	}
}

113 
	gpublic
:

115 
öô
(
log_c‹e
 *
ow√r
);

116 
	$öô_ödex
(
∑πôi⁄_ödex_t
 
i
Ë{ 
_ödex
=i; 
	}
}

117 
˛ór
();

121 
fûeoff_t
 
	$°¨t
(Ëc⁄° { 
	`w_as£π1
(
_°¨t
==0);  _°¨t; 
	}
}

123 
fûeoff_t
 
	$size
(Ëc⁄° {  
_size
; 
	}
}

124 
	$£t_size
(
fûeoff_t
 
v
Ë{ 
_size
 = v; 
	}
}

125 
∑πôi⁄_numbî_t
 
	$num
(Ëc⁄° {  
_num
; 
	}
}

126 
∑πôi⁄_ödex_t
 
	$ödex
(Ëc⁄° {  
_ödex
; 
	}
}

127 
l¢_t
 
	$fú°_l¢
() const { 

128 
	`fú°_l¢
(
w_ba£_t
::
	`uöt4_t
(
_num
)); 
	}
}

129 
›í_f‹_≠≥nd
(
∑πôi⁄_numbî_t
 
n
, c⁄° 
l¢_t
& 
höt
);

130 
w_rc_t
 
›í_f‹_ªad
(
∑πôi⁄_numbî_t
 
n
, 
boﬁ
 
îr
=
åue
);

131 
˛o£_f‹_≠≥nd
();

132 
˛o£_f‹_ªad
();

133 
boﬁ
 
	$is_cuºít
() const;

134 
	`≥ek
(
∑πôi⁄_numbî_t
 
n
,

135 c⁄° 
l¢_t
& 
íd_höt
,

136 
boﬁ
,

137 * 
fd
=0);

138 
w_rc_t
 
	`ªad
(
logªc_t
 *&
r
, 
l¢_t
 &
Œ
, 
fd
 = 
övÆid_fhdl
);

139 
	`Êush
(
fd
,

140 
l¢_t
 
l¢
,

141 c⁄° * c⁄° 
buf
,

142 
°¨t1
,

143 
íd1
,

144 
°¨t2
,

145 
íd2
);

146 c⁄° 
l¢_t
& 
	$œ°_skù_l¢
(Ëc⁄° {  
_œ°_skù_l¢
; 
	}
}

147 #i‡
W_DEBUG_LEVEL
 > 2

148 
	$check_fhdl_rd
() const ;

149 
	$check_fhdl_≠p
() const ;

151 
	$check_fhdl_rd
(Ëc⁄° { 
	}
}

152 
	$check_fhdl_≠p
(Ëc⁄° { 
	}
}

154 
	$fhdl_rd
(Ëc⁄° { 
	`check_fhdl_rd
();  
_fhdl_rd
; 
	}
}

155 
	$fhdl_≠p
(Ëc⁄° { 
	`check_fhdl_≠p
();  
_fhdl_≠p
; 
	}
}

156 
boﬁ
 
	$exi°s
() const {

157 
boﬁ
 
ªs
 = (
_mask
 & 
m_exi°s
) != 0;

158 #i‡
W_DEBUG_LEVEL
 > 2

159 if(
ªs
Ë{ 
	`w_as£π3
(
	`num
() != 0); }

161  
ªs
;

162 
	}
}

163 
boﬁ
 
	$is_›í_f‹_ªad
() const {

164  ((
_mask
 & 
m_›í_f‹_ªad
) != 0);

165 
	}
}

167 
boﬁ
 
	$is_›í_f‹_≠≥nd
() const {

168  ((
_mask
 & 
m_›í_f‹_≠≥nd
) != 0);

169 
	}
}

170 
˛o£
(
boﬁ
 
bŸh
);

171 
	$˛o£
(Ë{ 
this
->
	`˛o£
(
Ál£
); 
	}
}

172 
de°roy
();

173 
	$ßnôy_check
() const;

175 
¥iv©e
:

176 * 
	`_ªadbuf
();

177 
	$_£t_°©e
(
w_ba£_t
::
uöt4_t
 
m
Ë{ 
_mask
 |m ; 
	}
}

178 
	$_˛r_°©e
(
w_ba£_t
::
uöt4_t
 
m
Ë{ 
_mask
 &~m ; 
	}
}

179 
_skù
(c⁄° 
l¢_t
 &
Œ
, 
fd
);

181 
_≥ek
(
∑πôi⁄_numbî_t
 
n
,

182 
fûeoff_t
 
°¨éoc
,

183 
fûeoff_t
 
whﬁesize
,

184 
boﬁ
, 
fd
);

185 
	$_£t_œ°_skù_l¢
(c⁄° 
l¢_t
 &
l
Ë{ 
_œ°_skù_l¢
 =Ü;
	}
}

188 
	$_£t_fhdl_≠p
(
fd
) {

189 
	`w_as£π3
(
	`fhdl_≠p
(Ë=
övÆid_fhdl
);

190 
_fhdl_≠p
 = 
fd
;

191 
	}
}

192 
	gpublic
:

	@src/sm/pin.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#PIN_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "pin.h"

64 
	~<sm_öt_4.h
>

65 
	~<pö.h
>

66 
	~<lgªc.h
>

67 
	~<sm.h
>

69 
	~<√w
>

72 
	#RETURN_RC
–
_îr
) \

73 dÿ{ 
w_rc_t
 
rc
 = 
	`rc_t
(
_îr
); Ñc; } 0)

	)

75 #i‡
W_DEBUG_LEVEL
 > 1

76 
ölöe
 
	gpö_i
::
	$_£t_l¢
() {

80 
_hdr_l¢
 = 
	`_hdr_∑ge
().
	`l¢
();

81 
	}
}

86 
	gfûe_p
& 
	gpö_i
::
	$_hdr_∑ge
() const

88  *
Æig√d_ˇ°
<
fûe_p
>(
_hdr_∑ge_Æüs
);

89 
	}
}

91 
	glgd©a_p
& 
	gpö_i
::
	$_d©a_∑ge
() const

93  *
Æig√d_ˇ°
<
lgd©a_p
>(
_d©a_∑ge_Æüs
);

94 
	}
}

96 
	gpö_i
::~
	$pö_i
()

98 
	`u≈ö
();

103 
	`_hdr_∑ge
().
	`de°ru˘‹
();

104 
	`_d©a_∑ge
().
	`de°ru˘‹
();

105 
	}
}

107 
rc_t
 
	gpö_i
::
	$pö
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, 
lock_mode_t
 
lmode
,

108 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

110 
œtch_mode_t
 
œtch_mode
 = 
	`lock_to_œtch
(
lmode
, 
bIgn‹eL©ches
);

111  
	`pö
(
rid
, 
°¨t
, 
lmode
, 
œtch_mode
);

112 
	}
}

114 
rc_t
 
	gpö_i
::
	$pö
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
,

115 
lock_mode_t
 
lmode
, 
œtch_mode_t
 
œtch_mode
)

117 
	`SM_PROLOGUE_RC
(
pö_i
::
pö
, 
ö_x˘
, 
ªad_⁄ly
, 2);

118 i‡(
lmode
 !
SH
 &&Ümodê!
UD
 &&Ümodê!
EX
 &&Ümodê!
NL
)

119  
	`RC
(
eBADLOCKMODE
);

120 
	`W_DO
(
	`_pö
(
rid
, 
°¨t
, 
lmode
, 
œtch_mode
));

121 
	`_£t_l¢
();

122  
RCOK
;

123 
	}
}

126 
	gpö_i
::
	$u≈ö
()

128 i‡(
	`pö√d
()) {

129 i‡(
_Êags
 & 
pö_lg_d©a_pö√d
) {

130 
	`_d©a_∑ge
().
	`unfix
();

132 
	`_hdr_∑ge
().
	`unfix
();

133 
_Êags
 = 
pö_em±y
;

134 
_ªc
 = 
NULL
;

136 
	`INC_TSTAT
(
ªc_u≈ö_˙t
);

138 
	`w_as£π2
(!
	`pö√d
());

139 
	}
}

142 
boﬁ


143 
	gpö_i
::
	$is_möe
() const

145 
boﬁ
 
möe
 = 
Ál£
;

146 
boﬁ
 
d_Ÿhîs
 = 
Ál£
;

147 
boﬁ
 
h_Ÿhîs
 = 
Ál£
;

149 if(
	`_d©a_∑ge
().
	`is_fixed
()) {

150 if(
	`_d©a_∑ge
().
	`pö√d_by_me
()Ë
möe
 = 
åue
;

151 
d_Ÿhîs
 = 
åue
;

154 if–
	`_hdr_∑ge
().
	`is_fixed
()) {

155 if–
	`_hdr_∑ge
().
	`pö√d_by_me
()) {

156 if(
d_Ÿhîs
) {

159 
	`W_FATAL
(
eINTERNAL
);

161 
möe
 = 
åue
;

163 
h_Ÿhîs
 = 
åue
;

166 if(
h_Ÿhîs
 && 
möe
) {

169 
	`W_FATAL
(
eINTERNAL
);

173  
möe
;

174 
	}
}

176 
	gpö_i
::
	$£t_ªf_bô
(
vÆue
)

178 i‡(
	`pö√d
()) {

179 i‡(
	`is_œrge
()) {

180 i‡(
_Êags
 & 
pö_lg_d©a_pö√d
) {

181 
	`_d©a_∑ge
().
	`£t_ªf_bô
(
vÆue
);

184 
	`_hdr_∑ge
().
	`£t_ªf_bô
(
vÆue
);

187 
	}
}

189 
rc_t
 
	gpö_i
::
	$ªpö
(
lock_mode_t
 
lmode
)

191 
	`SM_PROLOGUE_RC
(
pö_i
::
ªpö
, 
ö_x˘
, 
ªad_⁄ly
, 2);

192 i‡(
lmode
 !
SH
 &&Ümodê!
UD
 &&Ümodê!
EX
Ë 
	`RC
(
eBADLOCKMODE
);

193 
	`DBG
(<<"Ñïö " << 
this
->
_rid
);

194 
	`W_DO
(
	`_ªpö
(
lmode
));

195  
RCOK
;

196 
	}
}

199 
rc_t
 
	gpö_i
::
	$√xt_byãs
(
boﬁ
& 
eof
)

201 
	`SM_PROLOGUE_RC
(
pö_i
::
√xt_byãs
, 
ö_x˘
, 
ªad_⁄ly
, 0);

202 
smsize_t
 
√w°¨t
;

203 
	`_check_l¢
();

205 
eof
 = 
Ál£
;

206 i‡(
_ªc
->
	`is_œrge
()) {

207 
	`w_as£π3
(
_°¨t
 % 
lgd©a_p
::
d©a_sz
 == 0);

208 
√w°¨t
 = 
_°¨t
 + 
lgd©a_p
::
d©a_sz
;

209 i‡(
√w°¨t
 < 
_ªc
->
	`body_size
()) {

210 
_Àn
 = 
	`MIN
(((
smsize_t
)
lgd©a_p
::
d©a_sz
),

211 
_ªc
->
	`body_size
()-
√w°¨t
);

212 
_Êags
 &~
pö_lg_d©a_pö√d
;

213 
_°¨t
 = 
√w°¨t
;

214  
RCOK
;

217 
eof
 = 
åue
;

219  
RCOK
;

220 
	}
}

222 
rc_t
 
	gpö_i
::
	$upd©e_ªc
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

223 c⁄° 
boﬁ
 
bIgn‹eLocks
)

225 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

226 
w_rc_t
 
rc
;

228 
	`SM_PROLOGUE_RC
(
pö_i
::
upd©e_ªc
, 
ö_x˘
, 
ªad_wrôe
, 0);

229 
	`DBG
(<<"upd©e_ª¯" << 
this
->
_rid
 << " #byãs=" << 
d©a
.
	`size
());

231 i‡(
was_pö√d
 && 
_ªc
->
	`is_smÆl
()) {

233 i‡(
was_pö√d
) {

234 
	`DBG
(<<"pinned");

235 
	`_check_l¢
();

237 
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
, 
bIgn‹eLocks
));

238 
	`w_as£π3
(
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
LATCH_EX
);

239 
	`w_as£π3
((
_lmode
 =
EX
Ë|| 
bIgn‹eLocks
);

247 i‡(
°¨t
 >
	`ªc
()->
	`body_size
()) {

248  
	`RC
(
eBADSTART
);

250 i‡(
d©a
.
	`size
(Ë> (
	`ªc
()->
	`body_size
()-
°¨t
)) {

251  
	`RC
(
eRECUPDATESIZE
);

253 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`•li˚_d©a
(
_rid
.
¶Ÿ
, 
	`u4i
(
°¨t
), 
d©a
.
	`size
(), data));

257 i‡(
bIgn‹eLocks
) {

258 
	`W_DO_GOTO
(
rc
, 
SSM
->
	`_upd©e_ªc
(
_rid
, 
°¨t
, 
d©a
, 
bIgn‹eLocks
));

262 i‡(
was_pö√d
 && 
_lmode
 !
EX
Ë
	`u≈ö
();

264 
	`W_DO_GOTO
(
rc
, 
SSM
->
	`_upd©e_ªc
(
_rid
, 
°¨t
, 
d©a
));

265 
_lmode
 = 
EX
;

266 i‡(
was_pö√d
Ë
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
));

273 i‡(
was_pö√d
) {

274 
	`w_as£π2
(
	`pö√d
());

275 
	`_£t_l¢
();

277 
	`u≈ö
();

279 
	`w_as£π2
(
was_pö√d
 =
	`pö√d
());

280  
RCOK
;

282 
Áûuª
:

283 i‡(
was_pö√d
 && !
	`pö√d
()) {

298 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

300 
	`W_COERCE
(
	`_ªpö
(
SH
));

302 
	`w_as£π2
(
was_pö√d
 =
	`pö√d
());

304  
rc
;

305 
	}
}

307 
rc_t
 
	gpö_i
::
	$upd©e_mrbt_ªc
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

308 c⁄° 
boﬁ
 
bIgn‹eLocks
,

309 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

311 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

312 
w_rc_t
 
rc
;

314 
	`SM_PROLOGUE_RC
(
pö_i
::
upd©e_mrbt_ªc
, 
ö_x˘
, 
ªad_wrôe
, 0);

315 
	`DBG
(<<"upd©e_ª¯" << 
this
->
_rid
 << " #byãs=" << 
d©a
.
	`size
());

317 i‡(
was_pö√d
 && 
_ªc
->
	`is_smÆl
()) {

319 i‡(
was_pö√d
) {

320 
	`DBG
(<<"pinned");

321 
	`_check_l¢
();

323 
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
bIgn‹eL©ches
?
NL
:
EX
, 
bIgn‹eLocks
, bIgnoreLatches));

324 
	`w_as£π3
(
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
LATCH_EX
 ||

325 
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
LATCH_NLX
);

326 
	`w_as£π3
((
_lmode
 =
EX
Ë|| 
bIgn‹eLocks
);

334 i‡(
°¨t
 >
	`ªc
()->
	`body_size
()) {

335  
	`RC
(
eBADSTART
);

337 i‡(
d©a
.
	`size
(Ë> (
	`ªc
()->
	`body_size
()-
°¨t
)) {

338  
	`RC
(
eRECUPDATESIZE
);

340 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`•li˚_d©a
(
_rid
.
¶Ÿ
, 
	`u4i
(
°¨t
), 
d©a
.
	`size
(), data));

344 i‡(
bIgn‹eLocks
) {

345 
	`W_DO_GOTO
(
rc
, 
SSM
->
	`_upd©e_mrbt_ªc
(
_rid
, 
°¨t
, 
d©a
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

349 i‡(
was_pö√d
 && 
_lmode
 !
EX
Ë
	`u≈ö
();

351 
	`W_DO_GOTO
(
rc
, 
SSM
->
	`_upd©e_mrbt_ªc
(
_rid
, 
°¨t
, 
d©a
,

352 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

353 
_lmode
 = 
EX
;

354 i‡(
was_pö√d
)

355 
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

362 i‡(
was_pö√d
) {

363 
	`w_as£π2
(
	`pö√d
());

364 
	`_£t_l¢
();

366 
	`u≈ö
();

368 
	`w_as£π2
(
was_pö√d
 =
	`pö√d
());

369  
RCOK
;

371 
Áûuª
:

372 i‡(
was_pö√d
 && !
	`pö√d
()) {

387 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

389 
	`W_COERCE
(
	`_ªpö
(
SH
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

391 
	`w_as£π2
(
was_pö√d
 =
	`pö√d
());

393  
rc
;

394 
	}
}

396 
rc_t
 
	gpö_i
::
	$upd©e_ªc_hdr
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
,

397 c⁄° 
boﬁ
 
bIgn‹eLocks
)

399 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

400 
rc_t
 
rc
;

401 i‡(
was_pö√d
) {

402 
	`DBG
(<<"pinned");

403 
	`_check_l¢
();

406 
	`SM_PROLOGUE_RC
(
pö_i
::
upd©e_ªc_hdr
, 
ö_x˘
, 
ªad_wrôe
, 0);

408 
lock_mode_t
 
ªpö_lock_mode
 = 
EX
;

409 i‡(
bIgn‹eLocks
Ë
ªpö_lock_mode
 = 
SH
;

410 
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
ªpö_lock_mode
));

411 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`•li˚_hdr
(
_rid
.
¶Ÿ
, 
	`u4i
(
°¨t
), 
hdr
.
	`size
(), hdr));

414 i‡(
was_pö√d
) {

415 
	`w_as£π3
(
	`pö√d
());

416 
	`_£t_l¢
();

418 
	`u≈ö
();

420 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

421 
	`w_as£π1
(
rc
.
	`is_îr‹
()==
Ál£
);

422  
rc
;

424 
Áûuª
:

425 i‡(
was_pö√d
 && !
	`pö√d
()) {

427 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

428 
	`W_COERCE
(
	`_ªpö
(
SH
));

430 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

431  
rc
;

432 
	}
}

434 
rc_t
 
	gpö_i
::
	$≠≥nd_ªc
(c⁄° 
vec_t
& 
d©a
)

436 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

438 
	`SM_PROLOGUE_RC
(
pö_i
::
≠≥nd_ªc
, 
ö_x˘
, 
ªad_wrôe
,0);

439 
	`DBG
(<< 
this
->
_rid
 << " #byãs=" << 
d©a
.
	`size
());

440 
rid_t
 
rid
;

445 i‡(
was_pö√d
Ë
	`u≈ö
();

447 
rc_t
 
rc
 = 
SSM
->
	`_≠≥nd_ªc
(
_rid
, 
d©a
);

448 
	`DBG
(<<"rc=" << 
rc
);

449 i‡(
rc
.
	`is_îr‹
()) {

450 
Áûuª
;

454 
_lmode
 = 
EX
;

456 i‡(
was_pö√d
Ë
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
));

459 i‡(
was_pö√d
) {

460 
	`w_as£π3
(
	`pö√d
());

461 
	`_£t_l¢
();

463 
	`u≈ö
();

465 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

466 
	`w_as£π2
(
rc
.
	`is_îr‹
(Ë=
Ál£
);

467  
rc
;

469 
Áûuª
:

470 i‡(
was_pö√d
 && !
	`pö√d
()) {

472 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

473 
	`W_COERCE
(
	`_ªpö
(
SH
));

475 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

476  
rc
;

477 
	}
}

479 
rc_t
 
	gpö_i
::
	$≠≥nd_mrbt_ªc
(c⁄° 
vec_t
& 
d©a
,

480 c⁄° 
boﬁ
 
bIgn‹eLocks
,

481 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

483 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

485 
	`SM_PROLOGUE_RC
(
pö_i
::
≠≥nd_mrbt_ªc
, 
ö_x˘
, 
ªad_wrôe
,0);

486 
	`DBG
(<< 
this
->
_rid
 << " #byãs=" << 
d©a
.
	`size
());

487 
rid_t
 
rid
;

492 i‡(
was_pö√d
Ë
	`u≈ö
();

494 
rc_t
 
rc
 = 
SSM
->
	`_≠≥nd_mrbt_ªc
(
_rid
, 
d©a
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
);

495 
	`DBG
(<<"rc=" << 
rc
);

496 i‡(
rc
.
	`is_îr‹
()) {

497 
Áûuª
;

501 
_lmode
 = 
EX
;

503 i‡(
was_pö√d
Ë
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

506 i‡(
was_pö√d
) {

507 
	`w_as£π3
(
	`pö√d
());

508 
	`_£t_l¢
();

510 
	`u≈ö
();

512 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

513 
	`w_as£π2
(
rc
.
	`is_îr‹
(Ë=
Ál£
);

514  
rc
;

516 
Áûuª
:

517 i‡(
was_pö√d
 && !
	`pö√d
()) {

519 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

520 
	`W_COERCE
(
	`_ªpö
(
SH
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

522 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

523  
rc
;

524 
	}
}

526 
rc_t
 
	gpö_i
::
	$åunˇã_ªc
(
smsize_t
 
amou¡
)

528 
boﬁ
 
was_pö√d
 = 
	`pö√d
();

529 
rc_t
 
rc
;

530 
	`SM_PROLOGUE_RC
(
pö_i
::
åunˇã_ªc
, 
ö_x˘
, 
ªad_wrôe
, 0);

531 
	`DBG
(<< 
this
->
_rid
 << " #byãs" << 
amou¡
);

533 
rid_t
 
rid
;

534 
boﬁ
 
should_f‹w¨d
;

539 i‡(
was_pö√d
Ë
	`u≈ö
();

541 
	`W_DO_GOTO
(
rc
, 
SSM
->
	`_åunˇã_ªc
(
_rid
, 
amou¡
, 
should_f‹w¨d
));

544 
_lmode
 = 
EX
;

546 i‡(
was_pö√d
Ë
	`W_DO_GOTO
(
rc
, 
	`_ªpö
(
EX
));

549 i‡(
was_pö√d
) {

550 
	`w_as£π3
(
	`pö√d
());

551 
	`_£t_l¢
();

553 
	`u≈ö
();

555 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

556 
	`w_as£π2
(
rc
.
	`is_îr‹
()==
Ál£
);

557  
rc
;

559 
Áûuª
:

560 i‡(
was_pö√d
 && !
	`pö√d
()) {

562 if(
rc
.
	`îr_num
(Ë=
eDEADLOCK
) Ñc;

563 
	`W_COERCE
(
	`_ªpö
(
SH
));

565 
	`w_as£π3
(
was_pö√d
 =
	`pö√d
());

566  
rc
;

567 
	}
}

569 c⁄° * 
	gpö_i
::
	$hdr_∑ge_d©a
()

571 
	`_check_l¢
();

572 i‡(!
	`pö√d
()Ë 
NULL
;

573  (c⁄° *Ë&(
	`_hdr_∑ge
().
	`≥rsi°ít_∑π
());

574 
	}
}

576 
Õid_t


577 
	gpö_i
::
	$∑ge_c⁄èöög
(
smsize_t
 
off£t
, smsize_t& 
°¨t_byã
) const

579 
	`_check_l¢
();

580 if(
	`is_smÆl
()) {

581 
	`w_as£π3
(!
	`is_œrge
());

582 
°¨t_byã
 = 0;

583  
	`_gë_hdr_∑ge
()->
	`pid
();

585 
	`w_as£π3
(!
	`is_smÆl
());

586  
	`ªc
()->
	`pid_c⁄èöög
(
off£t
, 
°¨t_byã
, 
	`_hdr_∑ge
());

588 
	}
}

590 c⁄° 
	gl¢_t
& 
	gpö_i
::
	$_gë_hdr_l¢
(Ëc⁄° {  
	`_hdr_∑ge
().
	`l¢
(); 
	}
}

595 
rc_t
 
	gpö_i
::
	$_pö_d©a
()

597 
smsize_t
 
°¨t_vîify
 = 0;

598 
	`w_as£π3
(!(
_Êags
 & 
pö_lg_d©a_pö√d
));

599 
Õid_t
 
d©a_pid
 = 
_ªc
->
	`pid_c⁄èöög
(
_°¨t
, 
°¨t_vîify
, 
	`_hdr_∑ge
());

600 if(
d©a_pid
 =
Õid_t
::
nuŒ
) {

601 
	`w_as£π3
(
_ªc
->
	`body_size
() == 0);

602  
	`RC
(
eEOF
);

604 
	`w_as£π3
(
°¨t_vîify
 =
_°¨t
);

605 
	`W_DO
–
	`_d©a_∑ge
().
	`fix
(
d©a_pid
, 
LATCH_SH
) );

606 
	`w_as£π1
(
	`_d©a_∑ge
().
	`is_fixed
());

608 
_Êags
 |
pö_lg_d©a_pö√d
;

609  
RCOK
;

610 
	}
}

612 
	gpö_i
::
	$_öô_c⁄°ru˘‹
()

615 
	`w_as£π2
((
_hdr_∑ge_Æüs
Ë>(
fûe_p
Ë+ 
	`__Æignof__
(file_p));

616 
	`w_as£π2
((
_d©a_∑ge_Æüs
) >=

617 (
lgd©a_p
Ë+ 
	`__Æignof
(lgdata_p));

619 
_Êags
 = 
pö_em±y
;

620 
_ªc
 = 
NULL
;

621 
_lmode
 = 
NL
;

622 
	`√w
 (&
	`_hdr_∑ge
()Ë
	`fûe_p
();

623 
	`√w
 (&
	`_d©a_∑ge
()Ë
	`lgd©a_p
();

624 
	}
}

626 c⁄° * 
	gpö_i
::
	$_body_œrge
()

628 
	`_check_l¢
();

629 i‡(!(
_Êags
 & 
pö_lg_d©a_pö√d
)) {

630 
w_rc_t
 
rc
 = 
	`_pö_d©a
();

631 i‡(
rc
.
	`is_îr‹
()Ë 
NULL
;

633  (*Ë
	`_d©a_∑ge
().
	`tu∂e_addr
(0);

634 
	}
}

636 
rc_t
 
	gpö_i
::
	$_pö
(c⁄° 
rid_t
& 
rid
,

637 
smsize_t
 
°¨t
,

638 
lock_mode_t
 
lock_mode
,

639 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

641 
œtch_mode_t
 
œtch_mode
 = 
	`lock_to_œtch
(
lock_mode
, 
bIgn‹eL©ches
);

642  
	`_pö
(
rid
, 
°¨t
, 
lock_mode
, 
œtch_mode
);

643 
	}
}

645 
rc_t
 
	gpö_i
::
	$_pö
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
,

646 
lock_mode_t
 
lmode
,

647 
œtch_mode_t
 
œtch_mode
)

649 
rc_t
 
rc
;

650 
boﬁ
 
pö_∑ge
 = 
Ál£
;

652 
	`w_as£π3
(
lmode
 =
SH
 ||Ümodê=
EX
 ||Ümodê=
UD
 ||

653 
lmode
 =
NL
 );

655 
	`DBGTHRD
(<<"enter _pin");

656 i‡(
	`pö√d
()) {

657 
	`DBG
(<<"pinned");

658 i‡(
_Êags
 & 
pö_lg_d©a_pö√d
) {

659 
	`w_as£π3
(
_Êags
 & 
pö_£∑øã_d©a
 && 
	`_d©a_∑ge
().
	`is_fixed
());

660 
	`_d©a_∑ge
().
	`unfix
();

672 i‡(
rid
.
pid
 !
_rid
.pid || 
lmode
 !
NL
) {

673 
	`_hdr_∑ge
().
	`unfix
();

674 
pö_∑ge
 = 
åue
;

675 
	`INC_TSTAT
(
ªc_u≈ö_˙t
);

679 
	`DBG
(<<"notÖinned");

680 
pö_∑ge
 = 
åue
;

684 i‡(
lmode
 !
NL
) {

685 
	`DBG
(<<"acquiringÜock");

686 
	`W_DO_GOTO
(
rc
, 
lm
->
	`lock
(
rid
, 
lmode
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

687 
	`DBG
(<<"lock isácquired");

688 
_lmode
 = 
lmode
;

691 i‡(
œtch_mode
 !
LATCH_NLX
 &&Ü©ch_modê!
LATCH_NLS
 && 
_lmode
 =
NL
) {

692 
_lmode
 = 
SH
;

695 
	`w_as£π3
(
_lmode
 > 
NL
);

697 i‡(
pö_∑ge
) {

698 
	`DBGTHRD
(<<"pin");

699 
	`W_DO_GOTO
(
rc
, 
fi
->
	`loˇã_∑ge
(
rid
, 
	`_hdr_∑ge
(), 
œtch_mode
));

700 
	`INC_TSTAT
(
ªc_pö_˙t
);

704 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`gë_ªc
(
rid
.
¶Ÿ
, 
_ªc
));

705 i‡(
_ªc
 =
NULL
Ë
Áûuª
;

706 i‡(
°¨t
 > 0 && sèπ >
_ªc
->
	`body_size
()) {

707 
rc
 = 
	`RC
(
eBADSTART
);

708 
Áûuª
;

711 
_Êags
 = 
pö_ªc_pö√d
;

712 
_rid
 = 
rid
;

718 i‡(
rid
.
¶Ÿ
 =0 || 
_ªc
->
	`is_smÆl
()) {

719 
_°¨t
 = 0;

720 
_Àn
 = 
_ªc
->
	`body_size
()-
_°¨t
;

722 
_°¨t
 = (
°¨t
/
lgd©a_p
::
d©a_sz
)*lgdata_p::data_sz;

723 
_Àn
 = 
	`MIN
(((
smsize_t
)
lgd©a_p
::
d©a_sz
),

724 
_ªc
->
	`body_size
()-
_°¨t
);

725 
_Êags
 |
pö_£∑øã_d©a
;

729 
	`_£t_l¢
();

730 
	`w_as£π2
(
rc
.
	`is_îr‹
()==
Ál£
);

731  
rc
;

733 
Áûuª
:

734 i‡(
pö_∑ge
) {

735 
	`_hdr_∑ge
().
	`unfix
();

736 
	`INC_TSTAT
(
ªc_u≈ö_˙t
);

739 
_Êags
 = 
pö_em±y
;

740  
rc
;

741 
	}
}

743 
rc_t
 
	gpö_i
::
	$_ªpö
(
lock_mode_t
 
lmode
,

744 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

746 
rc_t
 
rc
;

748 
	`w_as£π3
(
lmode
 =
SH
 ||Ümodê=
UD
 ||Ümodê=
EX
);

752 i‡((
_lmode
 < 
lmode
Ë&& !
bIgn‹eLocks
)

754 
	`DBG
(<<"acquiringÜock");

756 
rc
 = 
lm
->
	`lock
(
_rid
, 
lmode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

757 i‡(
rc
.
	`is_îr‹
()) {

758 i‡(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

760 i‡(
	`pö√d
()Ë
	`u≈ö
();

761 
	`W_DO_GOTO
(
rc
, 
lm
->
	`lock
(
_rid
, 
lmode
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

763 
	`W_DO_GOTO
(
rc
,Ñc.
	`ª£t
());

766 
	`DBG
(<<"lock isácquired");

767 
_lmode
 = 
lmode
;

770 i‡(
	`pö√d
()) {

771 
	`w_as£π3
(
	`_hdr_∑ge
().
	`is_fixed
());

772 i‡(
_Êags
 & 
pö_lg_d©a_pö√d
) {

773 
	`w_as£π3
(
_Êags
 & 
pö_£∑øã_d©a
 && 
	`_d©a_∑ge
().
	`is_fixed
());

778 if(
bIgn‹eL©ches
) {

779 if(
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
LATCH_NLS
) {

780 
Õid_t
 
hdΩid
 = 
	`_hdr_∑ge
().
	`pid
();

781 
	`_hdr_∑ge
().
	`unfix
();

782 
	`_hdr_∑ge
().
	`fix
(
hdΩid
, 
LATCH_NLX
);

784 } i‡(
	`_hdr_∑ge
().
	`œtch_mode
(Ë< 
	`lock_to_œtch
(
_lmode
)) {

785 
	`w_as£π3
(
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
LATCH_SH
);

786 
	`w_as£π3
(
_lmode
 =
EX
 || _lmodê=
UD
 || 
bIgn‹eLocks
);

788 
boﬁ
 
would_block
 = 
Ál£
;

789 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`upgøde_œtch_if_nŸ_block
(
would_block
));

790 i‡(
would_block
) {

791 
	`u≈ö
();

810 
rc
 = 
lm
->
	`lock
(
_rid
.
pid
, 
lmode
, 
t_ö°™t
, 
WAIT_IMMEDIATE
);

811 i‡(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

813 
	`INC_TSTAT
(
ªc_ªpö_cvt
);

814 
	`W_DO_GOTO
(
rc
,

815 
lm
->
	`lock
(
_rid
.
pid
, 
lmode
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

821 
	`w_as£π3
(
	`_hdr_∑ge
().
	`œtch_mode
(Ë=
	`lock_to_œtch
(
_lmode
));

826 i‡(
	`pö√d
()) {

827 #i‡
W_DEBUG_LEVEL
 > 2

829 
ªc‹d_t
* 
tmp
;

830 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`gë_ªc
(
_rid
.
¶Ÿ
, 
tmp
) );

831 
	`w_as£π3
(
tmp
 =
_ªc
);

835 
	`DBGTHRD
(<<"repin");

836 
	`W_DO_GOTO
(
rc
, 
fi
->
	`loˇã_∑ge
(
_rid
, 
	`_hdr_∑ge
(),

837 
	`lock_to_œtch
(
_lmode
, 
bIgn‹eL©ches
)));

838 
	`W_DO_GOTO
(
rc
, 
	`_hdr_∑ge
().
	`gë_ªc
(
_rid
.
¶Ÿ
, 
_ªc
) );

839 
	`w_as£π3
(
_ªc
);

840 i‡(
_°¨t
 > 0 && _°¨à>
_ªc
->
	`body_size
()) {

841 
rc
 = 
	`RC
(
eBADSTART
);

842 
Áûuª
;

844 
_Êags
 = 
pö_ªc_pö√d
;

850 i‡(
_rid
.
¶Ÿ
 =0 || 
_ªc
->
	`is_smÆl
()) {

851 
_°¨t
 = 0;

852 
_Àn
 = 
_ªc
->
	`body_size
()-
_°¨t
;

855 
_Àn
 = 
	`MIN
(((
smsize_t
)
lgd©a_p
::
d©a_sz
),

856 
_ªc
->
	`body_size
()-
_°¨t
);

857 
_Êags
 |
pö_£∑øã_d©a
;

859 
	`INC_TSTAT
(
ªc_pö_˙t
);

863 
	`_£t_l¢
();

864 
	`_check_l¢
();

865 
	`w_as£π1
(
rc
.
	`is_îr‹
(Ë=
Ál£
);

866  
RCOK
;

868 
Áûuª
:

869 
_Êags
 = 
pö_em±y
;

870  
rc
;

871 
	}
}

873 c⁄° * 
	gpö_i
::
	$body
()

875 
	`_check_l¢
();

876 i‡(!
	`pö√d
(Ë|| (
_Êags
 & 
pö_hdr_⁄ly
)) {

877  
NULL
;

878 } i‡(
_Êags
 & 
pö_£∑øã_d©a
) {

879  
	`_body_œrge
();

883 
	`_check_l¢
();

884 
	`w_as£π3
(
	`is_Æig√d
(
_ªc
->
	`body
()));

885  
_ªc
->
	`body
();

886 
	}
}

	@src/sm/pin.h

53 #i‚de‡
PIN_H


54 
	#PIN_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 #i‚de‡
FILE_S_H


65 
	~<fûe_s.h
>

68 
	~<∑ge_Æüs.h
>

103 
˛ass
 
	gfûe_p
;

104 
˛ass
 
	glgd©a_p
;

105 
˛ass
 
	gªc‹d_t
;

184 ˛as†
	cpö_i
 : 
public
 
smÀvñ_t›
 {

185 
‰õnd
 
˛ass
 
sˇn_fûe_i
;

186 
	mpublic
:

188 
	eÊags_t
 {

189 
pö_em±y
 = 0x0,

190 
	mpö_ªc_pö√d
 = 0x01,

191 
	mpö_hdr_⁄ly
 = 0x02,

192 
	mpö_£∑øã_d©a
 = 0x04,

193 
	mpö_lg_d©a_pö√d
 = 0x08

198 
NORET
 
	$pö_i
(Ë{
	`_öô_c⁄°ru˘‹
();
	}
}

201 
	gNORET
 ~
pö_i
();

226 
rc_t
 
pö
(

227 c⁄° 
rid_t
 & 
rid
,

228 
smsize_t
 
°¨t
,

229 
lock_mode_t
 
lmode
 = 
SH
,

230 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

237 
rc_t
 
pö
(

238 c⁄° 
rid_t
 & 
rid
,

239 
smsize_t
 
°¨t
,

240 
lock_mode_t
 
lock_mode
,

241 
œtch_mode_t
 
œtch_mode
);

244 
u≈ö
();

247 
boﬁ
 
	$is_möe
() const;

260 
	`£t_ªf_bô
(
vÆue
);

267 
rc_t
 
	`ªpö
(
lock_mode_t
 
lmode
 = 
SH
);

275 
rc_t
 
	`√xt_byãs
(
boﬁ
& 
eof
);

278 
boﬁ
 
	$pö√d
(Ëc⁄° {  
_Êags
 & 
pö_ªc_pö√d
; 
	}
}

281 
boﬁ
 
	$pö√d_Æl
() const

282 {  
	`pö√d
(Ë&& 
_°¨t
==0 && 
_Àn
==
	`body_size
();
	}
}

290 
boﬁ
 
	$up_to_d©e
() const

291 {  
	`pö√d
(Ë&& (
_hdr_l¢
 =
	`_gë_hdr_l¢
());
	}
}

294 
smsize_t
 
	$°¨t_byã
(Ëc⁄° { 
	`_check_l¢
();  
_°¨t
;
	}
}

296 
smsize_t
 
	$Àngth
(Ëc⁄° { 
	`_check_l¢
();  
_Àn
;
	}
}

298 
smsize_t
 
	$hdr_size
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
->
	`hdr_size
();
	}
}

300 
smsize_t
 
	$body_size
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
->
	`body_size
();
	}
}

302 
boﬁ
 
	$is_œrge
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
->
	`is_œrge
();
	}
}

304 
boﬁ
 
	$is_smÆl
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
->
	`is_smÆl
();
	}
}

314 
	$œrge_im∂
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
->
	`œrge_im∂
();
	}
}

317 c⁄° 
	grid_t
& 
	$rid
(Ëc⁄° {
	`_check_l¢
();  
_rid
;
	}
}

325 c⁄° * 
	$hdr
() const

326 { 
	`_check_l¢
();  
	`pö√d
(Ë? 
_ªc
->
	`hdr
(Ë: 0;
	}
}

334 c⁄° * 
body
();

348 
rc_t
 
upd©e_ªc
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

349 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

351 
rc_t
 
upd©e_mrbt_ªc
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

352 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

353 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

362 
rc_t
 
upd©e_ªc_hdr
(
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
,

363 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

371 
rc_t
 
≠≥nd_ªc
(c⁄° 
vec_t
& 
d©a
);

373 
rc_t
 
≠≥nd_mrbt_ªc
(c⁄° 
vec_t
& 
d©a
,

374 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

375 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

383 
rc_t
 
åunˇã_ªc
(
smsize_t
 
amou¡
);

385 c⁄° 
ªc‹d_t
* 
	$ªc
(Ëc⁄° { 
	`_check_l¢
();  
_ªc
;
	}
}

394 c⁄° * 
hdr_∑ge_d©a
();

405 
Õid_t
 
	$∑ge_c⁄èöög
(
smsize_t
 
off£t
, smsize_t& 
°¨t_byã
) const;

407 
¥iv©e
:

409 
	`_öô_c⁄°ru˘‹
();

411 
rc_t
 
	`_pö_d©a
();

413 c⁄° * 
	`_body_œrge
();

415 
rc_t
 
	`_pö
(c⁄° 
rid_t
 &
rid
, 
smsize_t
 
°¨t
, 
lock_mode_t
 
m
,

416 
œtch_mode_t
 
l
);

418 
rc_t
 
	`_pö
(c⁄° 
rid_t
 &
rid
, 
smsize_t
 
°¨t
, 
lock_mode_t
 
m
,

419 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

421 
rc_t
 
	`_ªpö
(
lock_mode_t
 
lmode
,

422 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

423 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

425 
fûe_p
* 
	$_gë_hdr_∑ge_no_l¢_check
() const {

426  
	`pö√d
(Ë? &
	`_hdr_∑ge
(Ë: 0;
	}
}

427 
fûe_p
* 
	$_gë_hdr_∑ge
() const {

428 
	`_check_l¢
();  
	`_gë_hdr_∑ge_no_l¢_check
();
	}
}

436 #i‡
W_DEBUG_LEVEL
 > 1

437 
	$_check_l¢
(Ëc⁄° {
	`w_as£π2
(
	`up_to_d©e
());
	}
}

441 
_£t_l¢
();

442 
_£t_l¢_f‹_sˇn
();

444 
	$_check_l¢
(Ëc⁄° {
	}
}

445 
	$_£t_l¢
(Ë{
	}
}

446 
	$_£t_l¢_f‹_sˇn
(Ë{
	}
}

449 c⁄° 
	gl¢_t
& 
	$_gë_hdr_l¢
() const;

451 
rid_t
 
_rid
;

452 
smsize_t
 
_Àn
;

453 
smsize_t
 
_°¨t
;

454 
ªc‹d_t
* 
_ªc
;

455 
w_ba£_t
::
uöt4_t
 
_Êags
;

461 
l¢_t
 
_hdr_l¢
;

462 
lock_mode_t
 
_lmode
;

478 
fûe_p
& 
	$_hdr_∑ge
() const;

479 
lgd©a_p
& 
	$_d©a_∑ge
() const;

481 
_hdr_∑ge_Æüs
[
PAGE_ALIAS_FILE
];

482 
_d©a_∑ge_Æüs
[
PAGE_ALIAS_LGDATA
];

485 
NORET
 
	`pö_i
(c⁄° 
pö_i
&);

486 
NORET
 
pö_i
& 
›î©‹
=(constÖin_i&);

488 
public
:

491 
œtch_mode_t
 
	`lock_to_œtch
(
lock_mode_t
 
m
, 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

493 
	}
};

496 
ölöe
 
œtch_mode_t
 
	gpö_i
::
	$lock_to_œtch
(
lock_mode_t
 
m
, 
boﬁ
 
bIgn‹eL©ches
) {

497 
m
) {

498 
SH
:

499 
UD
:

500 
NL
:

501  
bIgn‹eL©ches
 ? 
LATCH_NLS
 : 
LATCH_SH
;

502 
EX
:

503  
bIgn‹eL©ches
 ? 
LATCH_NLX
 : 
LATCH_EX
;

506 
	`W_FATAL
(
smÀvñ_0
::
eNOTIMPLEMENTED
);

508  
LATCH_NL
;

509 
	}
};

	@src/sm/pmap.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#PMAP_C


	)

36 #ifde‡
__GNUG__


37 #¥agm®
im∂emíèti⁄


39 
	~"sm_öt_0.h
"

41 
	go°ªam
 &
	gPm≠
::
	$¥öt
(
o°ªam
 &
s
) const

43 
i
 = 0; i < (
bôs
); i++)

45 
	`W_FORM
(
s
)("%02x", 
bôs
[
i
]);

47  
s
;

48 
	}
}

50 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gs
, c⁄° 
	gPm≠
 &
	gpm≠
)

52  
	gpm≠
.
¥öt
(
s
);

	@src/sm/pmap.h

30 #i‚de‡
PMAP_H


31 
	#PMAP_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 
	~<bôm≠.h
>

43 
	sPm≠


46 íum { 
	m_cou¡
 = 
smÀvñ_0
::
ext_sz
 };

48 íum { 
	m_size
 = 
smÀvñ_0
::
ext_m≠_sz_ö_byãs
 };

50 
u_ch¨
 
	mbôs
[
_size
];

52 
ölöe
 
Pm≠
() {

53 
˛ór_Æl
();

56 
ölöe
 
£t
(
bô
Ë{ 
bm_£t
(
bôs
, bit); }

57 
ölöe
 
˛ór
(
bô
Ë{ 
bm_˛r
(
bôs
, bit); }

59 
ölöe
 
boﬁ
 
is_£t
(
bô
Ëc⁄° {  
bm_is_£t
(
bôs
, bit); }

60 
ölöe
 
boﬁ
 
is_˛ór
(
bô
Ëc⁄° {  
bm_is_˛r
(
bôs
, bit);}

62 
ölöe
 
num_£t
(Ëc⁄° {  
bm_num_£t
(
bôs
, 
_cou¡
); }

63 
ölöe
 
num_˛ór
(Ëc⁄° {  
bm_num_˛r
(
bôs
, 
_cou¡
); }

65 
ölöe
 
fú°_£t
(
°¨t
) const {

66  
bm_fú°_£t
(
bôs
, 
_cou¡
, 
°¨t
);

68 
ölöe
 
fú°_˛ór
(
°¨t
) const {

69  
bm_fú°_˛r
(
bôs
, 
_cou¡
, 
°¨t
);

71 
ölöe
 
œ°_£t
(
°¨t
) const {

72  
bm_œ°_£t
(
bôs
, 
_cou¡
, 
°¨t
);

74 
ölöe
 
œ°_˛ór
(
°¨t
) const {

75  
bm_œ°_˛r
(
bôs
, 
_cou¡
, 
°¨t
);

78 
ölöe
 
size
(Ëc⁄° {  
	m_size
; }

79 
ölöe
 
cou¡
(Ëc⁄° {  
	m_cou¡
; }

83 
ölöe
 
boﬁ
 
is_em±y
() const {

84 
	mi
;

85 
	mi
 = 0; i < 
	m_size
; i++)

86 i‡(
	mbôs
[
i
])

88  (
	mi
 =
_size
);

90 
ölöe
 
˛ór_Æl
(Ë{ 
bm_zîo
(
bôs
, 
_cou¡
); }

91 
ölöe
 
£t_Æl
(Ë{ 
bm_fûl
(
bôs
, 
_cou¡
); }

93 
	mo°ªam
 &
¥öt
(
o°ªam
 &
s
) const;

96 
o°ªam
 &
›î©‹
<<(o°ªam &, c⁄° 
Pm≠
 &
pm≠
);

107 
	#SM_EXTENTSIZE_IN_BYTES
 ((
SM_EXTENTSIZE
+7)/8)

	)

108 #i‡((
SM_EXTENTSIZE_IN_BYTES
/4)*4)==(SM_EXTENTSIZE_IN_BYTES)

110 
Pm≠
 
	tPm≠_Align4
;

112 ˛as†
	cPm≠_Align4
 : 
public
 
Pm≠
 {

113 
public
:

114 
ölöe
 
Pm≠_Align4
 &
›î©‹
=(c⁄° 
Pm≠
 &
‰om
) {

115 *(
Pm≠
 *)
this
 = 
‰om
;

116  *
	mthis
;

118 
	g¥iv©e
:

119 #i‡((
SM_EXTENTSIZE_IN_BYTES
 & 0x3)==0x3)

121 
fûl1
 
fûÀr
;

122 #ñi‡((
SM_EXTENTSIZE_IN_BYTES
 & 0x2)==0x2)

124 
fûl2
 
	gfûÀr
;

125 #ñi‡((
SM_EXTENTSIZE_IN_BYTES
 & 0x1)==0x1)

127 
fûl1
 
	gfûÀr1
;

128 
fûl2
 
	gfûÀr2
;

130 #îr‹ 
Progømmî
 
Áûuª
: 
SM_EXTENTSIZE_IN_BYTES
 
SM_EXTENTSIZE


	@src/sm/prologue.h

53 #i‚de‡
PROLOGUE_H


54 
	#PROLOGUE_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


76 
	#SM_PROLOGUE_RC
(
func_«me
, 
is_ö_x˘
, 
c⁄°∫t
, 
pö_˙t_ch™ge
) \

77 
	`FUNC
(
func_«me
); \

78 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
is_ö_x˘
, \

79 
¥ﬁogue_rc_t
::
c⁄°∫t
, (
pö_˙t_ch™ge
)); \

80 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()ËÖrﬁogue.
	`rc
();

	)

85 
	#INIT_SCAN_PROLOGUE_RC
(
func_«me
, 
ªadwrôe
, 
pö_˙t_ch™ge
) \

86 
	`FUNC
(
func_«me
); \

87 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
ö_x˘
, 
ªadwrôe
, \

88 (
pö_˙t_ch™ge
)); \

89 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()) { \

90 
_îr‹_occuºed
 = 
¥ﬁogue
.
	`rc
(); \

92 }

	)

95 
	#SCAN_METHOD_PROLOGUE
(
func_«me
, 
c⁄°øöt
, 
pö_˙t_ch™ge
) \

96 
	`FUNC
(
func_«me
); \

97 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
ö_x˘
,Örﬁogue_rc_t::
c⁄°øöt
, \

98 (
pö_˙t_ch™ge
)); \

99 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()) { \

100 
_îr‹_occuºed
 = 
¥ﬁogue
.
	`rc
(); \

101  
	`w_rc_t
(
_îr‹_occuºed
); \

103 if(
_îr‹_occuºed
.
	`is_îr‹
()) { \

104  
	`w_rc_t
(
_îr‹_occuºed
); \

105 }

	)

108 ˛as†
	c¥ﬁogue_rc_t
 {

109 
	mpublic
:

110 
	ex˘_°©e_t
 {

111 
ö_x˘
,

112 
	mcommôabÀ_x˘
,

114 
	mnŸ_ö_x˘
,

115 
	mˇn_be_ö_x˘
,

116 
	mab‹èbÀ_x˘


118 
	ex˘_c⁄°øöt_t
 {

119 
	gªad_⁄ly
,

121 
	gªad_wrôe


125 
¥ﬁogue_rc_t
(
x˘_°©e_t
 
is_ö_x˘
, 
x˘_c⁄°øöt_t
, 
pö_˙t_ch™ge
);

126 ~
¥ﬁogue_rc_t
();

127 
no_l⁄gî_ö_x˘
();

128 
boﬁ
 
	$îr‹_occuºed
(Ëc⁄° { 
_rc
.
	`is_îr‹
();
	}
}

129 
rc_t
 
	$rc
(Ë{ 
_rc
;
	}
}

131 
	g¥iv©e
:

132 
x˘_°©e_t
 
_x˘_°©e
;

133 
x˘_t
 * 
	g_the_x˘
;

134 
x˘_c⁄°øöt_t
 
	g_c⁄°øöt
;

135 
	g_pö_˙t_ch™ge
;

136 
rc_t
 
	g_rc
;

137 
x˘_log_swôch_t
* 
	g_toggÀ
;

138 
x˘_t
* 
	g_vi˘im
;

141 íum { 
	gSIZEOF_TOGGLE
=32 };

142 
	g__toggÀ_d©a
[
SIZEOF_TOGGLE
/()];

148 #i‡
deföed
(
SM_C
)

150 
	g¥ﬁogue_rc_t
::
	$¥ﬁogue_rc_t
(

151 
x˘_°©e_t
 
is_ö_x˘
,

152 
x˘_c⁄°øöt_t
 
c⁄°øöt
,

153 
pö_˙t_ch™ge
) :

154 
	`_x˘_°©e
(
is_ö_x˘
),

155 
	`_c⁄°øöt
(
c⁄°øöt
),

156 
	`_pö_˙t_ch™ge
(
pö_˙t_ch™ge
),

157 
	`_toggÀ
(0), 
	$_vi˘im
(0)

159 
	`w_as£π2
(!
	`me
()->
	`is_ö_sm
());

161 
_the_x˘
 = 
	`x˘
();

163 if(
_the_x˘
) {

167 
	`w_as£π0
(! 
_the_x˘
->
	`is_1thªad_log_muãx_möe
());

170 
boﬁ
 
check_log
 = 
åue
;

171 
boﬁ
 
check_1thªad
 = 
Ál£
;

173 
_x˘_°©e
)

175 
ö_x˘
:

176 i‡–(!
_the_x˘
)

177 || (
_the_x˘
->
	`°©e
(Ë!
smÀvñ_1
::
x˘_a˘ive
)) {

179 
_rc
 = 
	`rc_t
(
__FILE__
, 
__LINE__
,

180 (
_the_x˘
 && _the_x˘->
	`°©e
(Ë=
smÀvñ_1
::
x˘_¥ï¨ed
)?

181 
smÀvñ_0
::
eISPREPARED
 :

182 
smÀvñ_0
::
eNOTRANS


184 
check_log
 = 
Ál£
;

188 
commôabÀ_x˘
: {

194 
îr‹
 = 0;

195 i‡–! 
_the_x˘
 ) {

196 
îr‹
 = 
smÀvñ_0
::
eNOTRANS
;

197 } i‡(
_the_x˘
->
	`is_exã∫2pc
() &&

198 (
_the_x˘
->
	`°©e
(Ë!
smÀvñ_1
::
x˘_¥ï¨ed
) )

200 
îr‹
 = 
smÀvñ_0
::
eNOTPREPARED
;

201 } if–(
_the_x˘
->
	`°©e
(Ë!
smÀvñ_1
::
x˘_a˘ive
)

202 && (
_the_x˘
->
	`°©e
(Ë!
smÀvñ_1
::
x˘_¥ï¨ed
)

204 
îr‹
 = 
smÀvñ_0
::
eNOTRANS
;

207 if(
îr‹
) {

208 
_rc
 = 
	`rc_t
(
__FILE__
, 
__LINE__
, 
îr‹
);

209 
check_log
 = 
Ál£
;

210 
	`no_l⁄gî_ö_x˘
();

212 
check_1thªad
 = 
åue
;

216 
ab‹èbÀ_x˘
:

221 i‡(! 
_the_x˘
 || (_the_x˘->
	`°©e
(Ë!
smÀvñ_1
::
x˘_a˘ive
 &&

222 
_the_x˘
->
	`°©e
(Ë!
smÀvñ_1
::
x˘_¥ï¨ed
)) {

223 
_rc
 = 
	`rc_t
(
__FILE__
, 
__LINE__
, 
smÀvñ_0
::
eNOTRANS
);

224 
check_log
 = 
Ál£
;

226 
check_1thªad
 = 
åue
;

229 
nŸ_ö_x˘
:

230 i‡(
_the_x˘
) {

231 
_rc
 = 
	`rc_t
(
__FILE__
, 
__LINE__
, 
smÀvñ_0
::
eINTRANS
);

233 
check_log
 = 
Ál£
;

236 
ˇn_be_ö_x˘
:

241 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

245 #i‡
W_DEBUG_LEVEL
 > 2

246 
	`me
()->
	`m¨k_pö_cou¡
();

247 
	`me
()->
	`ö_sm
(
åue
);

250 if(
_x˘_°©e
 !
nŸ_ö_x˘
) {

252 
	`w_as£π1
((
__toggÀ_d©a
Ë>(
x˘_log_swôch_t
));

253 
_toggÀ
 = 
	`√w
(
__toggÀ_d©a
Ë
	`x˘_log_swôch_t
(
smÀvñ_0
::
ON
);

257 if(
_rc
.
	`is_îr‹
()) {

261 if(
check_1thªad
)

263 
_rc
 = 
_the_x˘
->
	`check_⁄e_thªad_©èched
();

265 if(
_rc
.
	`is_îr‹
()) {

272 if(
_the_x˘
 && (
_c⁄°øöt
 =
ªad_wrôe
)) {

273 
_the_x˘
->
	`©èch_upd©e_thªad
();

275 
check_log
 = 
Ál£
;

277 if(
check_log
 && !
smÀvñ_0
::
	`ö_ªcovîy
() )

279 
_rc
 = 
x˘_log_w¨n_check_t
::
	`check
(
_vi˘im
);

280 if(
_rc
.
	`is_îr‹
()) {

284 
	}
}

287 
	g¥ﬁogue_rc_t
::~
	$¥ﬁogue_rc_t
()

289 if(
_the_x˘
 && (
_c⁄°øöt
 =
ªad_wrôe
)) {

290 
_the_x˘
->
	`dëach_upd©e_thªad
();

293 #i‡
W_DEBUG_LEVEL
 > 2

294 
	`me
()->
	`check_pö_cou¡
(
_pö_˙t_ch™ge
);

295 
	`me
()->
	`ö_sm
(
Ál£
);

298 if(
_toggÀ
Ë{ _toggÀ->~
	`x˘_log_swôch_t
(); }

300 if(
_vi˘im
) {

301 
sm_°©s_öfo_t
 * 
°©s
 = 
_vi˘im
->
	`is_ö°rumíãd
() ?

302 
_vi˘im
->
	`°ól_°©s
() : 0;

303 
	`W_COERCE
(
_vi˘im
->
	`ab‹t
());

304 
	`INC_TSTAT
(
log_w¨n_ab‹t_˙t
);

306 
x˘_t
::
	`de°roy_x˘
(
_vi˘im
);

307 
dñëe
 
°©s
;

308 
_vi˘im
 = 0;

310 
	}
}

312 
ölöe
 

313 
	g¥ﬁogue_rc_t
::
	$no_l⁄gî_ö_x˘
()

315 
_x˘_°©e
 = 
nŸ_ö_x˘
;

316 
_the_x˘
 = 
NULL
;

317 
	}
}

	@src/sm/ranges_p.cpp

35 
	#SM_SOURCE


	)

36 
	#RANGES_C


	)

38 #ifde‡
__GNUG__


39 #¥agm®
im∂emíèti⁄
 "ranges_p.h"

42 
	~"sm_öt_2.h
"

44 
	~"ønges_p.h
"

47 
rc_t
 
	gønges_m
::
	$¸óã
(c⁄° 
°id_t
 
°id
, 
Õid_t
& 
pid
, c⁄°Üpid_t& 
subroŸ
)

49 
	`W_DO
(
io
->
	`Æloc_a_∑ge
(
°id
, 
Õid_t
::
eof
, 
pid
, 
åue
, 
IX
,Årue));

50 
ønges_p
 
∑ge
;

51 
	`W_DO
(
∑ge
.
	`fix
(
pid
, 
LATCH_EX
,Öage.
t_vúgö
));

53 
cvec_t
 
°¨tKey
;

54 
i
 = 0;

55 
°¨tKey
.
	`put
((*)(&
i
),(i));

56 
	`W_DO
–
∑ge
.
	`add_deÁu…_∑πôi⁄
(
°¨tKey
, 
subroŸ
) );

57 
∑ge
.
	`unfix
();

58  
RCOK
;

59 
	}
}

61 
rc_t
 
	gønges_m
::
¸óã
(c⁄° 
°id_t
 
°id
, 
Õid_t
& 
pid
, 
ve˘‹
<
cvec_t
*>& 
keys
, ve˘‹<Õid_t>& 
subroŸs
)

63 
W_DO
(
io
->
Æloc_a_∑ge
(
°id
, 
Õid_t
::
eof
, 
pid
, 
åue
, 
IX
,Årue));

64 
ønges_p
 
	g∑ge
;

65 
W_DO
(
∑ge
.
fix
(
pid
, 
LATCH_EX
,Öage.
t_vúgö
));

67 
W_DO
–
∑ge
.
fûl_∑ge
(
keys
, 
subroŸs
) );

68 
	g∑ge
.
unfix
();

69  
	gRCOK
;

72 
rc_t
 
	gønges_m
::
	$add_∑πôi⁄
(c⁄° 
Õid_t
& 
pid
, 
cvec_t
& 
key
, c⁄°Üpid_t& 
roŸ
)

74 
ønges_p
 
∑ge
;

75 
	`W_DO
(
∑ge
.
	`fix
(
pid
, 
LATCH_EX
));

76 
	`W_DO
(
∑ge
.
	`add_∑πôi⁄
(
key
, 
roŸ
));

77 
∑ge
.
	`unfix
();

78  
RCOK
;

79 
	}
}

81 
rc_t
 
	gønges_m
::
	$dñëe_∑πôi⁄
(c⁄° 
Õid_t
& 
pid
, c⁄°Üpid_t& 
roŸ_to_dñëe
,

82 c⁄° 
Õid_t
& 
roŸ_to_upd©e_ﬁd
, c⁄°Üpid_t& 
roŸ_to_upd©e_√w
)

84 
ønges_p
 
∑ge
;

85 
	`W_DO
(
∑ge
.
	`fix
(
pid
, 
LATCH_EX
));

86 
	`W_DO
(
∑ge
.
	`dñëe_∑πôi⁄
(
roŸ_to_dñëe
, 
roŸ_to_upd©e_ﬁd
, 
roŸ_to_upd©e_√w
));

87 
∑ge
.
	`unfix
();

88  
RCOK
;

89 
	}
}

91 
rc_t
 
	gønges_m
::
	$fûl_ønges_m≠
(c⁄° 
Õid_t
& 
pid
, 
key_ønges_m≠
& 
∑πôi⁄s
)

93 
ønges_p
 
∑ge
;

94 
	`W_DO
(
∑ge
.
	`fix
(
pid
, 
LATCH_SH
));

95 
	`W_DO
(
∑ge
.
	`fûl_ønges_m≠
(
∑πôi⁄s
));

96 
∑ge
.
	`unfix
();

97  
RCOK
;

98 
	}
}

100 
rc_t
 
	gønges_m
::
	$fûl_∑ge
(c⁄° 
Õid_t
& 
pid
, 
key_ønges_m≠
& 
∑πôi⁄s
)

102 
ønges_p
 
∑ge
;

103 
	`W_DO
(
∑ge
.
	`fix
(
pid
, 
LATCH_EX
));

104 
	`W_DO
(
∑ge
.
	`fûl_∑ge
(
∑πôi⁄s
));

105 
∑ge
.
	`unfix
();

106  
RCOK
;

107 
	}
}

109 
	$MAKEPAGECODE
(
ønges_p
, 
∑ge_p
)

111 
rc_t
 
ønges_p
::
	$fûl_ønges_m≠
(
key_ønges_m≠
& 
∑πôi⁄s
)

114 * 
hdr_±r
 = (*Ë
∑ge_p
::
	`tu∂e_addr
(0);

115 
uöt4_t
 
num_∑ús
 = *((uöt4_t*)
hdr_±r
);

117 
cuºít_¶Ÿ_size
 = 0;

118 
uöt4_t
 
i
=1; i <
num_∑ús
; i++) {

119 
cuºít_¶Ÿ_size
 = 
∑ge_p
::
	`tu∂e_size
(
i
);

120 i‡(
cuºít_¶Ÿ_size
 != 0) {

122 * 
∑ú
 = (*Ë
∑ge_p
::
	`tu∂e_addr
(
i
);

123 
cvec_t
 
∑ú_vec
;

124 
∑ú_vec
.
	`put
(
∑ú
, 
cuºít_¶Ÿ_size
);

126 
cvec_t
 
roŸ_vec
;

127 
cvec_t
 
key
;

128 
∑ú_vec
.
	`•lô
((
Õid_t
), 
roŸ_vec
, 
key
);

129 
Õid_t
 
roŸ_id
;

130 
roŸ_vec
.
	`c›y_to
(&
roŸ_id
, (
Õid_t
));

132 
∑πôi⁄s
.
	`addP¨tôi⁄
(
key
, 
roŸ_id
);

136  
RCOK
;

137 
	}
}

139 
rc_t
 
	gønges_p
::
	$fûl_∑ge
(
key_ønges_m≠
& 
∑πôi⁄s
)

141 
key_ønges_m≠
::
KRM≠
 
∑πôi⁄s_m≠
 = 
∑πôi⁄s
.
	`gëM≠
();

143 
∑ge_p
::
	`m¨k_‰ì
(1);

144 
uöt4_t
 
i
 = 1;

147 
key_ønges_m≠
::
KRM≠It
 
ôî
 = 
∑πôi⁄s_m≠
.
	`begö
();

148 
ôî
 !
∑πôi⁄s_m≠
.
	`íd
();

149 
ôî
++, 
i
++) {

150 
cvec_t
 
v
;

152 
v
.
	`put
((*)&
ôî
->
£c⁄d
, (
Õid_t
));

154 
v
.
	`put
((*
ôî
).
fú°
.
_m
,(*ôî).fú°.
_Àn
);

156 
	`W_DO
(
∑ge_p
::
	`ª˛aim
(
i
, 
v
, 
åue
));

160 
cvec_t
 
hdr
;

161 
hdr
.
	`put
((*)(&
i
), (
uöt4_t
));

162 
	`W_DO
(
∑ge_p
::
	`ovîwrôe
(0, 0, 
hdr
));

164  
RCOK
;

165 
	}
}

167 
rc_t
 
	gønges_p
::
fûl_∑ge
(
ve˘‹
<
cvec_t
*>& 
keys
, ve˘‹<
Õid_t
>& 
subroŸs
)

171 
uöt4_t
 
	gi
 = 0;

184 ; 
	gi
 < 
	gkeys
.
size
(); i++) {

185 
cvec_t
 
	gv
;

187 
	gv
.
put
((*)(&
subroŸs
[
i
]), (
Õid_t
));

189 
	gv
.
put
(*(
keys
[
i
]));

191 
W_DO
(
∑ge_p
::
ª˛aim
(
i
+1, 
v
, 
åue
));

195 
cvec_t
 
	ghdr
;

196 
	ghdr
.
put
((*)(&
i
), (
uöt4_t
));

197 
W_DO
(
∑ge_p
::
ovîwrôe
(0, 0, 
hdr
));

199  
	gRCOK
;

202 
rc_t
 
	gønges_p
::
	$add_∑πôi⁄
(
cvec_t
& 
key
, c⁄° 
Õid_t
& 
roŸ
)

205 * 
hdr_±r
 = (*Ë
∑ge_p
::
	`tu∂e_addr
(0);

206 
uöt4_t
 
num_∑ús
 = *((uöt4_t*)
hdr_±r
);

209 
num_∑ús
++;

212 
cvec_t
 
v
;

214 
v
.
	`put
((*)(&
roŸ
), (
Õid_t
));

216 
v
.
	`put
(
key
);

218 
	`W_DO
(
∑ge_p
::
	`ª˛aim
(
num_∑ús
, 
v
, 
åue
));

220 
cvec_t
 
hdr
;

221 
hdr
.
	`put
((*)(&
num_∑ús
), (
uöt4_t
));

223 
	`W_DO
(
∑ge_p
::
	`ovîwrôe
(0, 0, 
hdr
));

225  
RCOK
;

226 
	}
}

228 
rc_t
 
	gønges_p
::
	$dñëe_∑πôi⁄
(c⁄° 
Õid_t
& 
roŸ_to_dñëe
,

229 c⁄° 
Õid_t
& 
roŸ_to_upd©e_ﬁd
,

230 c⁄° 
Õid_t
& 
roŸ_to_upd©e_√w
)

232 
uöt4_t
 
n¶Ÿs
 = 
∑ge_p
::
	`n¶Ÿs
();

234 
uöt4_t
 
i
=1;

235 
uöt4_t
 
¶Ÿ_to_dñëe
 = 0;

236 
boﬁ
 
roŸ_upd©ed
 = (
roŸ_to_upd©e_ﬁd
 =
roŸ_to_upd©e_√w
);

237 
boﬁ
 
roŸ_dñëed
 = 
Ál£
;

238 ; !(
roŸ_upd©ed
 && 
roŸ_dñëed
Ë&& 
i
 < 
n¶Ÿs
; i++) {

240 * 
∑ú
 = (*Ë
∑ge_p
::
	`tu∂e_addr
(
i
);

241 
cvec_t
 
∑ú_vec
;

242 
∑ú_vec
.
	`put
(
∑ú
, 
∑ge_p
::
	`tu∂e_size
(
i
));

244 
Õid_t
 
cuºít_roŸ_id
;

245 
∑ú_vec
.
	`c›y_to
(&
cuºít_roŸ_id
, (
Õid_t
));

247 if(!
roŸ_dñëed
 && 
cuºít_roŸ_id
 =
roŸ_to_dñëe
) {

248 
¶Ÿ_to_dñëe
 = 
i
;

249 
roŸ_dñëed
 = 
åue
;

251 if(!
roŸ_upd©ed
 && 
cuºít_roŸ_id
 =
roŸ_to_upd©e_ﬁd
) {

252 
cvec_t
 
roŸ_vec
;

253 
cvec_t
 
key
;

254 
∑ú_vec
.
	`•lô
((
Õid_t
), 
roŸ_vec
, 
key
);

255 
cvec_t
 
√w_∑ú_vec
;

256 
√w_∑ú_vec
.
	`put
((*)(&
roŸ_to_upd©e_√w
), (
Õid_t
));

257 
√w_∑ú_vec
.
	`put
(
key
);

258 
	`W_DO
(
∑ge_p
::
	`ovîwrôe
(
i
, 0, 
√w_∑ú_vec
));

259 
roŸ_upd©ed
 = 
åue
;

266 if(
¶Ÿ_to_dñëe
 == 0) {

268 
cout
 << "ERROR" << 
ídl
;

272  
∑ge_p
::
	`m¨k_‰ì
(
¶Ÿ_to_dñëe
);

273 
	}
}

275 
rc_t
 
	gønges_p
::
	$add_deÁu…_∑πôi⁄
(
cvec_t
& 
key
, c⁄° 
Õid_t
& 
roŸ
)

277 
uöt4_t
 
num_∑ús
 = 1;

280 
cvec_t
 
v
;

282 
v
.
	`put
((*)(&
roŸ
), (
Õid_t
));

284 
v
.
	`put
(
key
);

286 
	`W_DO
(
∑ge_p
::
	`ª˛aim
(
num_∑ús
, 
v
, 
åue
));

288 
cvec_t
 
hdr
;

289 
hdr
.
	`put
((*)(&
num_∑ús
), (
uöt4_t
));

291 
	`W_DO
(
∑ge_p
::
	`ovîwrôe
(0, 0, 
hdr
));

293  
RCOK
;

294 
	}
}

296 
rc_t
 
	gønges_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
, 
uöt4_t
 
Êags
,

297 
°‹e_Êag_t
 
°‹e_Êags
)

301 
	`w_as£π3
(
èg
 =
t_ønges_p
);

304 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

312 
this
->
	`£t_°‹e_Êags
(
°‹e_Êags
);

315 
cvec_t
 
hdr
;

316 
num_∑ús
 = 0;

317 
hdr
.
	`put
((*)(&
num_∑ús
), (
uöt4_t
));

318 
	`W_COERCE
(
∑ge_p
::
	`ª˛aim
(0, 
hdr
, 
åue
));

320  
RCOK
;

321 
	}
}

	@src/sm/ranges_p.h

36 #i‚de‡
RANGES_P_H


37 
	#RANGES_P_H


	)

39 
	~"w_deföes.h
"

41 #ifde‡
__GNUG__


42 #¥agm®
öãrÁ˚


45 
	~"key_ønges_m≠.h
"

47 ˛as†
	cønges_p
 : 
public
 
∑ge_p
 {

49 
public
:

51 
MAKEPAGE
(
ønges_p
, 
∑ge_p
, 1);

54 
rc_t
 
fûl_ønges_m≠
(
key_ønges_m≠
& 
∑πôi⁄s
);

57 
rc_t
 
fûl_∑ge
(
key_ønges_m≠
& 
∑πôi⁄s
);

62 
rc_t
 
fûl_∑ge
(
ve˘‹
<
cvec_t
*>& 
keys
, ve˘‹<
Õid_t
>& 
subroŸs
);

65 
rc_t
 
add_∑πôi⁄
(
cvec_t
& 
key
, c⁄° 
Õid_t
& 
roŸ
);

68 
rc_t
 
dñëe_∑πôi⁄
(c⁄° 
Õid_t
& 
roŸ_to_dñëe
,

69 c⁄° 
Õid_t
& 
roŸ_to_upd©e_ﬁd
,

70 c⁄° 
Õid_t
& 
roŸ_to_upd©e_√w
);

73 
rc_t
 
add_deÁu…_∑πôi⁄
(
cvec_t
& 
key
, c⁄° 
Õid_t
& 
roŸ
);

83 ˛as†
	cønges_m
 : 
public
 
smÀvñ_2
 {

85 
public
:

87 
NORET
 
	$ønges_m
() {};

88 
NORET
 ~
	$ønges_m
(Ë{
	}
};

90 
rc_t
 
¸óã
(c⁄° 
°id_t
 
°id
, 
Õid_t
& 
pid
, c⁄°Üpid_t& 
subroŸ
);

91 
rc_t
 
¸óã
(c⁄° 
°id_t
 
°id
, 
Õid_t
& 
pid
, 
ve˘‹
<
cvec_t
*>& 
keys
, ve˘‹<Õid_t>& 
subroŸs
);

92 
rc_t
 
add_∑πôi⁄
(c⁄° 
Õid_t
& 
pid
, 
cvec_t
& 
key
, c⁄°Üpid_t& 
roŸ
);

93 
rc_t
 
dñëe_∑πôi⁄
(c⁄° 
Õid_t
& 
pid
, c⁄°Üpid_t& 
roŸ_to_dñëe
,

94 c⁄° 
Õid_t
& 
roŸ_to_upd©e_ﬁd
, c⁄°Üpid_t& 
roŸ_to_upd©e_√w
);

95 
rc_t
 
fûl_ønges_m≠
(c⁄° 
Õid_t
& 
pid
, 
key_ønges_m≠
& 
∑πôi⁄s
);

96 
rc_t
 
fûl_∑ge
(c⁄° 
Õid_t
& 
pid
, 
key_ønges_m≠
& 
∑πôi⁄s
);

	@src/sm/redo_gen.cpp

31 
	~"w_deföes.h
"

36 
	gt_commít
 :

37 ((
commít_log
 *Ë
this
)->
ªdo
(
∑ge
);

39 
	gt_com≥nßã
 :

40 
W_FATAL
(
eINTERNAL
);

42 
	gt_skù
 :

43 
W_FATAL
(
eINTERNAL
);

45 
	gt_chk±_begö
 :

46 
W_FATAL
(
eINTERNAL
);

48 
	gt_chk±_bf_èb
 :

49 
W_FATAL
(
eINTERNAL
);

51 
	gt_chk±_x˘_èb
 :

52 
W_FATAL
(
eINTERNAL
);

54 
	gt_chk±_dev_èb
 :

55 
W_FATAL
(
eINTERNAL
);

57 
	gt_chk±_íd
 :

58 
W_FATAL
(
eINTERNAL
);

60 
	gt_mou¡_vﬁ
 :

61 ((
mou¡_vﬁ_log
 *Ë
this
)->
ªdo
(
∑ge
);

63 
	gt_dismou¡_vﬁ
 :

64 ((
dismou¡_vﬁ_log
 *Ë
this
)->
ªdo
(
∑ge
);

66 
	gt_x˘_ab‹t
 :

67 
W_FATAL
(
eINTERNAL
);

69 
	gt_x˘_‰ìög_•a˚
 :

70 
W_FATAL
(
eINTERNAL
);

72 
	gt_x˘_íd
 :

73 
W_FATAL
(
eINTERNAL
);

75 
	gt_x˘_¥ï¨e_°
 :

76 ((
x˘_¥ï¨e_°_log
 *Ë
this
)->
ªdo
(
∑ge
);

78 
	gt_x˘_¥ï¨e_lk
 :

79 ((
x˘_¥ï¨e_lk_log
 *Ë
this
)->
ªdo
(
∑ge
);

81 
	gt_x˘_¥ï¨e_Æk
 :

82 ((
x˘_¥ï¨e_Æk_log
 *Ë
this
)->
ªdo
(
∑ge
);

84 
	gt_x˘_¥ï¨e_°‹es
 :

85 ((
x˘_¥ï¨e_°‹es_log
 *Ë
this
)->
ªdo
(
∑ge
);

87 
	gt_x˘_¥ï¨e_fi
 :

88 ((
x˘_¥ï¨e_fi_log
 *Ë
this
)->
ªdo
(
∑ge
);

90 
	gt_Æloc_fûe_∑ge
 :

91 
W_FATAL
(
eINTERNAL
);

93 
	gt_Æloc_∑ges_ö_ext
 :

94 ((
Æloc_∑ges_ö_ext_log
 *Ë
this
)->
ªdo
(
∑ge
);

96 
	gt_‰ì_∑ges_ö_ext
 :

97 ((
‰ì_∑ges_ö_ext_log
 *Ë
this
)->
ªdo
(
∑ge
);

99 
	gt_¸óã_ext_li°
 :

100 ((
¸óã_ext_li°_log
 *Ë
this
)->
ªdo
(
∑ge
);

102 
	gt_‰ì_ext_li°
 :

103 ((
‰ì_ext_li°_log
 *Ë
this
)->
ªdo
(
∑ge
);

105 
	gt_£t_ext_√xt
 :

106 ((
£t_ext_√xt_log
 *Ë
this
)->
ªdo
(
∑ge
);

108 
	gt_°‹e_›î©i⁄
 :

109 ((
°‹e_›î©i⁄_log
 *Ë
this
)->
ªdo
(
∑ge
);

111 
	gt_∑ge_lök
 :

112 ((
∑ge_lök_log
 *Ë
this
)->
ªdo
(
∑ge
);

114 
	gt_∑ge_ö£π
 :

115 ((
∑ge_ö£π_log
 *Ë
this
)->
ªdo
(
∑ge
);

117 
	gt_∑ge_ªmove
 :

118 ((
∑ge_ªmove_log
 *Ë
this
)->
ªdo
(
∑ge
);

120 
	gt_∑ge_f‹m©
 :

121 ((
∑ge_f‹m©_log
 *Ë
this
)->
ªdo
(
∑ge
);

123 
	gt_∑ge_m¨k
 :

124 ((
∑ge_m¨k_log
 *Ë
this
)->
ªdo
(
∑ge
);

126 
	gt_∑ge_ª˛aim
 :

127 ((
∑ge_ª˛aim_log
 *Ë
this
)->
ªdo
(
∑ge
);

129 
	gt_∑ge_shi·
 :

130 ((
∑ge_shi·_log
 *Ë
this
)->
ªdo
(
∑ge
);

132 
	gt_∑ge_•li˚
 :

133 ((
∑ge_•li˚_log
 *Ë
this
)->
ªdo
(
∑ge
);

135 
	gt_∑ge_•li˚z
 :

136 ((
∑ge_•li˚z_log
 *Ë
this
)->
ªdo
(
∑ge
);

138 
	gt_∑ge_£t_byã
 :

139 ((
∑ge_£t_byã_log
 *Ë
this
)->
ªdo
(
∑ge
);

141 
	gt_∑ge_image
 :

142 ((
∑ge_image_log
 *Ë
this
)->
ªdo
(
∑ge
);

144 
	gt_båì_purge
 :

145 ((
båì_purge_log
 *Ë
this
)->
ªdo
(
∑ge
);

147 
	gt_båì_ö£π
 :

148 ((
båì_ö£π_log
 *Ë
this
)->
ªdo
(
∑ge
);

150 
	gt_båì_ªmove
 :

151 ((
båì_ªmove_log
 *Ë
this
)->
ªdo
(
∑ge
);

153 
	gt_πªe_ö£π
 :

154 ((
πªe_ö£π_log
 *Ë
this
)->
ªdo
(
∑ge
);

156 
	gt_πªe_ªmove
 :

157 ((
πªe_ªmove_log
 *Ë
this
)->
ªdo
(
∑ge
);

	@src/sm/restart.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#RESTART_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "restart.h"

62 #¥agm®
im∂emíèti⁄
 "restart_s.h"

65 
	~<sm_öt_1.h
>

66 
	~"ª°¨t.h
"

67 
	~"ª°¨t_s.h
"

68 
	~"w_hóp.h
"

70 
	~"¸ash.h
"

73 #ifde‡
EXPLICIT_TEMPLATE


74 
ãm∂©e
 
˛ass
 
	gw_hash_t
<
	gdp_íåy_t
, 
	gunß„_li°_dummy_lock_t
, 
	gbÂid_t
>;

75 
ãm∂©e
 
˛ass
 
	gw_hash_i
<
	gdp_íåy_t
, 
	gunß„_li°_dummy_lock_t
, 
	gbÂid_t
>;

76 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gdp_íåy_t
, 
	gunß„_li°_dummy_lock_t
>;

77 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gdp_íåy_t
, 
	gunß„_li°_dummy_lock_t
>;

78 
ãm∂©e
 
˛ass
 
	gHóp
<
	gx˘_t
*, 
	gCmpX˘UndoL¢s
>;

81 
˛ass
 
	tHóp
<
	tx˘_t
*, 
	tCmpX˘UndoL¢s
> 
	tX˘PåHóp
;

83 
tid_t
 
	gª°¨t_m
::
_ªdo_tid
;

95 ˛as†
	cdúty_∑ges_èb_t
 {

96 
	mpublic
:

97 
NORET
 
dúty_∑ges_èb_t
(
sz
);

98 
	mNORET
 ~
dúty_∑ges_èb_t
();

100 
	mdúty_∑ges_èb_t
& 
ö£π
(

101 c⁄° 
Õid_t
& 
pid
,

102 c⁄° 
l¢_t
& 
l¢
);

104 
	mdúty_∑ges_èb_t
& 
ªmove
(c⁄° 
Õid_t
& 
pid
);

106 
boﬁ
 
look_up
(

107 c⁄° 
Õid_t
& 
pid
,

108 
l¢_t
** 
l¢
 = 0);

110 
l¢_t
 
mö_ªc_l¢
();

112 
	$size
(Ëc⁄° {  
èb
.
	`num_membîs
(); }

114 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
dúty_∑ges_èb_t
& 
s
);

116 
¥iv©e
:

117 
w_hash_t
<
dp_íåy_t
, 
unß„_li°_dummy_lock_t
, 
bÂid_t
> 
èb
;

120 
NORET
 
	`dúty_∑ges_èb_t
(c⁄° 
dúty_∑ges_èb_t
&);

121 
dúty_∑ges_èb_t
& 
›î©‹
=(const dirty_pages_tab_t&);

123 
l¢_t
 
ˇchedMöRecLSN
;

124 
boﬁ
 
vÆidCachedMöRecLSN
;

125 
	}
};

137 
	gª°¨t_m
::
	$ªcovî
(
l¢_t
 
ma°î
)

139 
	`FUNC
(
ª°¨t_m
::
ªcovî
);

140 
dúty_∑ges_èb_t
 
	`d±ab
(2 * 
bf
->
	`≈ages
());

141 
l¢_t
 
ªdo_l¢
;

142 
boﬁ
 
found_x˘_‰ìög_•a˚
 = 
Ál£
;

146 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Re°¨àªcovîy:" << 
Êushl
;

147 #i‡
W_DEBUG_LEVEL
 > 2

149 
	`DBG
(<<"TX TABLE beforeánalysis:");

150 
x˘_i
 
	`ôî
(
åue
);

151 
x˘_t
* 
xd
;

152 (
xd
 = 
ôî
.
	`√xt
())) {

153 
	`w_as£π2
–
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_a˘ive
 ||

154 
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
 ||

155 
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_‰ìög_•a˚
 );

156 
	`DBG
(<< "å™ß˘i⁄ " << 
xd
->
	`tid
(Ë<< " ha†°©ê" << xd->
	`°©e
());

158 
	`DBG
(<<"END TX TABLE beforeánalysis:");

166 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "A«lysi†..." << 
Êushl
;

169 
	`DBG
(<<"°¨tögá«lysi†© " << 
ma°î
 << "Ñedo_l¢ = " << 
ªdo_l¢
);

170 
	`™Æysis_∑ss
(
ma°î
, 
d±ab
, 
ªdo_l¢
, 
found_x˘_‰ìög_•a˚
);

172 if(
d±ab
.
	`size
(Ë|| 
x˘_t
::
	`num_a˘ive_x˘s
()) {

173 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


174 << "Log c⁄èö†" << 
d±ab
.
	`size
()

175 << " dútyÖage†™d " << 
x˘_t
::
	`num_a˘ive_x˘s
()

176 << "á˘ivêå™ß˘i⁄s" << 
Êushl
;

179 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


180 << "D©aba£ i†˛ón" << 
Êushl
;

189 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Redÿ..." << 
Êushl
;

190 
l¢_t
 
cuº_l¢
 = 
log
->
	`cuº_l¢
();

192 #i‡
W_DEBUG_LEVEL
 > 2

194 
	`DBG
(<<"TX TABLEátÉnd ofánalysis:");

195 
x˘_i
 
	`ôî
(
åue
);

196 
x˘_t
* 
xd
;

197 (
xd
 = 
ôî
.
	`√xt
())) {

198 
	`w_as£π1
–
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_a˘ive
 ||

199 
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

200 
	`DBG
(<< "Tønß˘i⁄ " << 
xd
->
	`tid
(Ë<< " ha†°©ê" << xd->
	`°©e
());

202 
	`DBG
(<<"END TX TABLEátÉnd ofánalysis:");

206 
	`DBG
(<<"°¨tögÑedÿ© " << 
ªdo_l¢
 << " highe°_l¢ " << 
cuº_l¢
);

207 
	`ªdo_∑ss
(
ªdo_l¢
, 
cuº_l¢
, 
d±ab
);

211 
	`w_as£π1
(
cuº_l¢
 =
log
->
	`cuº_l¢
());

221 
	`W_COERCE
(
bf
->
	`f‹˚_Æl
(
åue
));

230 i‡(
found_x˘_‰ìög_•a˚
) {

231 
x˘_t
* 
xd
 = x˘_t::
	`√w_x˘
();

232 
	`w_as£π1
(
xd
);

233 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Fªeög st‹e†bef‹êundÿ..." << 
Êushl
;

234 
	`W_COERCE
–
io_m
::
	`‰ì_°‹es_durög_ªcovîy
(
t_°‹e_‰ìög_exts
) );

235 
	`W_COERCE
–
xd
->
	`commô
(
Ál£
) );

236 
x˘_t
::
	`de°roy_x˘
(
xd
);

243 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
<< "Undo ..."

244 << " cuº_l¢ = " << 
cuº_l¢


245 << 
Êushl
;

247 
	`undo_∑ss
();

254 i‡(
found_x˘_‰ìög_•a˚
) {

255 
x˘_t
* 
xd
 = x˘_t::
	`√w_x˘
();

256 
	`w_as£π1
(
xd
);

257 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Fªeög st‹e†..." << 
Êushl
;

258 
	`W_COERCE
–
io_m
::
	`‰ì_°‹es_durög_ªcovîy
(
t_dñëög_°‹e
) );

259 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "FªeögÉxã¡†..." << 
Êushl
;

260 
	`W_COERCE
–
io_m
::
	`‰ì_exts_durög_ªcovîy
() );

261 
	`W_COERCE
–
xd
->
	`commô
(
Ál£
) );

262 
x˘_t
::
	`de°roy_x˘
(
xd
);

265 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "OldestáctiveÅransaction is "

266 << 
x˘_t
::
	`ﬁde°_tid
(Ë<< 
Êushl
;

267 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


269 << 
x˘_t
::
	`younge°_tid
(Ë<< 
Êushl
;

271 #i‡
W_DEBUG_LEVEL
 >= 0

277 
numbî
=0;

279 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


280 << "Pª∑ªdÅønß˘i⁄s:" << 
ídl
;

281 
	`DBG
(<<"TX TABLEátÉnd ofÑecovery:");

282 
x˘_i
 
	`ôî
(
åue
);

283 
x˘_t
* 
xd
;

284 (
xd
 = 
ôî
.
	`√xt
())) {

285 
	`w_as£π0
(
xd
->
	`°©e
()==
x˘_t
::
x˘_¥ï¨ed
);

286 
£rvî_h™dÀ_t
 
ch
 = 
xd
->
	`gë_co‹dö©‹
();

287 c⁄° 
gtid_t
 *
gtid
 = 
xd
->
	`gtid
();

288 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


289 << "Tid: " <<
xd
->
	`tid
(Ë<< 
ídl
;

290 if(
gtid
) {

291 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


292 << "\àGlobÆÅid: " << *
gtid
 << 
ídl
;

294 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


295 << "\àNÿglobÆÅid. " << 
ídl
;

297 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


298 << "\àCo‹dö©‹: " << 
ch


299 << 
Êushl
;

300 
numbî
++;

302 if(
numbî
 == 0) {

303 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Ç⁄e." << 
ídl
;

305 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


307 << 
ídl


308 << 
ídl


310 << 
ídl


311 << 
ídl


313 << 
ídl
;

315 
	`DBG
(<<"END TX TABLEátÉnd ofÑecovery:");

319 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << "Re°¨àsuc˚ssful." << 
Êushl
;

320 
	}
}

332 
	gª°¨t_m
::
	$™Æysis_∑ss
(

333 
l¢_t
 
ma°î
,

334 
dúty_∑ges_èb_t
& 
d±ab
,

335 
l¢_t
& 
ªdo_l¢
,

336 
boﬁ
& 
found_x˘_‰ìög_•a˚


339 
	`FUNC
(
ª°¨t_m
::
™Æysis_∑ss
);

341 
AutoTu∫OffLoggög
 
tu∫edOnWhíDe°royed
;

343 
ªdo_l¢
 = 
nuŒ_l¢
;

344 
found_x˘_‰ìög_•a˚
 = 
Ál£
;

345 i‡(
ma°î
 =
nuŒ_l¢
) ;

347 
smÀvñ_0
::
›î©ög_mode
 = smÀvñ_0::
t_ö_™Æysis
;

352 
log_i
 
	`sˇn
(*
log
, 
ma°î
);

353 
logªc_t
* 
log_ªc_buf
;

354 
l¢_t
 
l¢
;

356 
l¢_t
 
theLa°Mou¡LSNBef‹eChk±
;

363 i‡(! 
sˇn
.
	`√xt
(
l¢
, 
log_ªc_buf
)) {

364 
	`W_COERCE
(
sˇn
.
	`gë_œ°_rc
());

366 
logªc_t
& 
r
 = *
log_ªc_buf
;

367 
	`w_as£π1
(
r
.
	`ty≥
(Ë=
logªc_t
::
t_chk±_begö
);

368 
theLa°Mou¡LSNBef‹eChk±
 = *(
l¢_t
 *)
r
.
	`d©a
();

369 
	`DBG
–<< "œ° mou¡ LSN from chk±_begö=" << 
theLa°Mou¡LSNBef‹eChk±
);

372 
cur_£gmít
 = 0;

381 
num_chk±_íd_h™dÀd
 = 0;

383 
sˇn
.
	`√xt
(
l¢
, 
log_ªc_buf
)) {

384 
logªc_t
& 
r
 = *
log_ªc_buf
;

389 
	`LOGTRACE1
–<< 
l¢
 << " A: " << 
r
 );

390 
	`w_as£π1
(
l¢
 =
r
.
	`l¢_ck
());

392 if(
l¢
.
	`hi
(Ë!
cur_£gmít
) {

393 
cur_£gmít
 = 
l¢
.
	`hi
();

394 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


395 << "A«lyzögÜog segmíà" << 
cur_£gmít
 << 
Êushl
;

398 
x˘_t
* 
xd
 = 0;

404 i‡((
r
.
	`tid
(Ë!
tid_t
::
nuŒ
Ë&& ! (
xd
 = 
x˘_t
::
	`look_up
(r.tid()))) {

405 
	`DBG
(<<"™Æysis: in£πögÅx " << 
r
.
	`tid
() << "áctive ");

406 
xd
 = 
x˘_t
::
	`√w_x˘
(
r
.
	`tid
(), x˘_t::
x˘_a˘ive
, 
l¢
,Ñ.
	`¥ev
());

407 
	`w_as£π1
(
xd
);

413 i‡(
xd
) {

414 
xd
->
	`£t_œ°_l¢
(
l¢
);

415 
	`w_as£π1
–
xd
->
	`tid
(Ë=
r
.tid() );

418 
r
.
	`ty≥
()) {

419 
logªc_t
::
t_x˘_¥ï¨e_°
:

420 
logªc_t
::
t_x˘_¥ï¨e_lk
:

421 
logªc_t
::
t_x˘_¥ï¨e_Æk
:

422 
logªc_t
::
t_x˘_¥ï¨e_°‹es
:

423 
logªc_t
::
t_x˘_¥ï¨e_fi
:

424 i‡(
num_chk±_íd_h™dÀd
 == 0) {

431 
r
.
	`ªdo
(0);

435 
logªc_t
::
t_chk±_begö
:

441 
logªc_t
::
t_chk±_bf_èb
:

442 i‡(
num_chk±_íd_h™dÀd
 == 0) {

449 c⁄° 
chk±_bf_èb_t
* 
dp
 = (chk±_bf_èb_t*Ë
r
.
	`d©a
();

450 
uöt
 
i
 = 0; i < 
dp
->
cou¡
; i++) {

451 
l¢_t
* 
ªc_l¢
;

452 i‡(! 
d±ab
.
	`look_up
(
dp
->
bªc
[
i
].
pid
, &
ªc_l¢
)) {

453 
	`DBG
(<<"dptab.insert dirtyÖg "

454 << 
dp
->
bªc
[
i
].
pid
 << " " << dp->bªc[i].
ªc_l¢
);

455 
d±ab
.
	`ö£π
(
dp
->
bªc
[
i
].
pid
, dp->bªc[i].
ªc_l¢
);

457 
	`DBG
(<<"dptab.update dirtyÖg "

458 << 
dp
->
bªc
[
i
].
pid
 << " " << dp->bªc[i].
ªc_l¢
);

459 *
ªc_l¢
 = 
dp
->
bªc
[
i
].rec_lsn;

465 
logªc_t
::
t_chk±_x˘_èb
:

466 i‡(
num_chk±_íd_h™dÀd
 == 0) {

472 c⁄° 
chk±_x˘_èb_t
* 
dp
 = (chk±_x˘_èb_t*Ë
r
.
	`d©a
();

473 
uöt
 
i
 = 0; i < 
dp
->
cou¡
; i++) {

474 
x˘_t
* 
xd
 = x˘_t::
	`look_up
(
dp
->
xªc
[
i
].
tid
);

475 i‡(!
xd
) {

476 i‡(
dp
->
xªc
[
i
].
°©e
 !
x˘_t
::
x˘_íded
) {

477 
xd
 = 
x˘_t
::
	`√w_x˘
(
dp
->
xªc
[
i
].
tid
,

478 
dp
->
xªc
[
i
].
°©e
,

479 
dp
->
xªc
[
i
].
œ°_l¢
,

480 
dp
->
xªc
[
i
].
undo_nxt
);

481 
	`DBG
(<<"add x˘ " << 
dp
->
xªc
[
i
].
tid


482 << " sèã " << 
dp
->
xªc
[
i
].
°©e


483 << "Üa°Ü¢ " << 
dp
->
xªc
[
i
].
œ°_l¢


484 << " undÿ" << 
dp
->
xªc
[
i
].
undo_nxt


486 
	`w_as£π1
(
xd
);

492 
	`w_as£π9
(
dp
->
xªc
[
i
].
°©e
 !
x˘_t
::
x˘_íded
);

498 
logªc_t
::
t_chk±_dev_èb
:

499 i‡(
num_chk±_íd_h™dÀd
 == 0) {

504 c⁄° 
chk±_dev_èb_t
* 
dv
 = (chk±_dev_èb_t*Ë
r
.
	`d©a
();

505 
uöt
 
i
 = 0; i < 
dv
->
cou¡
; i++) {

506 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


507 << "Devi˚ " << 
dv
->
devªc
[
i
].
dev_«me


508 << " wû»bêªcovîedá†vid " << 
dv
->
devªc
[
i
].
vid


509 << 
Êushl
;

510 
	`W_COERCE
(
io_m
::
	`mou¡
(
dv
->
devªc
[
i
].
dev_«me
,

511 
dv
->
devªc
[
i
].
vid
));

513 
	`w_as£π9
(
io_m
::
	`is_mou¡ed
(
dv
->
devªc
[
i
].
vid
));

518 
logªc_t
::
t_dismou¡_vﬁ
:

519 
logªc_t
::
t_mou¡_vﬁ
:

531 
	`w_as£π9
(
num_chk±_íd_h™dÀd
 > 0);

534 i‡(
l¢
 < 
d±ab
.
	`mö_ªc_l¢
()) {

535 
r
.
	`ªdo
(0);

539 
logªc_t
::
t_chk±_íd
:

544 #i‡
W_DEBUG_LEVEL
 > 4

546 
l¢_t
 
l
, 
l2
;

547 vﬁ©ûê
i
 = (
l¢_t
);

552 
	`mem˝y
(&
l
, (
l¢_t
*Ë
r
.
	`d©a
(), 
i
);

553 
	`mem˝y
(&
l2
, ((
l¢_t
*Ë
r
.
	`d©a
())+1, 
i
);

555 
	`DBG
(<<"check±Énd: ma°î=" << 
l


556 << " mö_ªc_l¢" << 
l2
);

558 if(
l¢
 =
l
) {

559 
	`w_as£π9
(
l2
 =
d±ab
.
	`mö_ªc_l¢
());

563 i‡(
num_chk±_íd_h™dÀd
 > 2) {

571 
smÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


573 <<
Êushl
;

584 
num_chk±_íd_h™dÀd
++;

588 
logªc_t
::
t_x˘_‰ìög_•a˚
:

589 
xd
->
	`ch™ge_°©e
(
x˘_t
::
x˘_‰ìög_•a˚
);

592 
logªc_t
::
t_x˘_ab‹t
:

593 
logªc_t
::
t_x˘_íd
:

597 i‡(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
 || xd->°©e(Ë=x˘_t::
x˘_‰ìög_•a˚
)

604 
	`me
()->
	`©èch_x˘
(
xd
);

607 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
,Årue) );

608 
	`me
()->
	`dëach_x˘
(
xd
);

610 
xd
->
	`ch™ge_°©e
(
x˘_t
::
x˘_íded
);

611 
x˘_t
::
	`de°roy_x˘
(
xd
);

615 
Õid_t
 
∑ge_of_öãª°
 = 
r
.
	`c⁄°ru˘_pid
();

616 i‡(
r
.
	`is_∑ge_upd©e
()) {

617 i‡(
r
.
	`is_undo
()) {

621 
xd
->
	`£t_undo_nxt
(
l¢
);

623 i‡(
r
.
	`is_ªdo
(Ë&& !(
d±ab
.
	`look_up
(
∑ge_of_öãª°
))) {

628 
	`DBG
(<<"d±ab.ö£π dútyÖg " << 
∑ge_of_öãª°


629 << " " << 
l¢
);

630 
d±ab
.
	`ö£π
–
∑ge_of_öãª°
, 
l¢
 );

633 } i‡(
r
.
	`is_˝¢
()) {

637 if(
r
.
	`is_undo
()) {

642 
xd
->
	`£t_undo_nxt
(
l¢
);

644 
xd
->
	`£t_undo_nxt
(
r
.
	`undo_nxt
());

646 i‡(
r
.
	`is_ªdo
(Ë&& !(
d±ab
.
	`look_up
(
∑ge_of_öãª°
))) {

651 
	`DBG
(<<"d±ab.ö£π dútyÖg " << 
∑ge_of_öãª°


652 << " " << 
l¢
);

653 
d±ab
.
	`ö£π
–
∑ge_of_öãª°
, 
l¢
 );

655 } i‡((
r
.
	`ty≥
()!=
logªc_t
::
t_commít
)

656 && (
r
.
	`ty≥
()!=
logªc_t
::
t_Æloc_fûe_∑ge
)

658 
	`W_FATAL
(
eINTERNAL
);

668 
ªdo_l¢
 = 
d±ab
.
	`mö_ªc_l¢
();

673 
	`DBG
–<< ((
theLa°Mou¡LSNBef‹eChk±
 !
l¢_t
::
nuŒ
 &&

674 
theLa°Mou¡LSNBef‹eChk±
 > 
ªdo_l¢
) \

680 
logªc_t
* 
__c›y__buf
 = 
√w
Üogrec_t;

681 if(! 
__c›y__buf
Ë{ 
	`W_FATAL
(
eOUTOFMEMORY
); }

682 
w_auto_dñëe_t
<
logªc_t
> 
	`auto_dñ
(
__c›y__buf
);

683 
logªc_t
& 
c›y
 = *
__c›y__buf
;

685 
theLa°Mou¡LSNBef‹eChk±
 !
l¢_t
::
nuŒ


686 && 
theLa°Mou¡LSNBef‹eChk±
 > 
ªdo_l¢
) {

688 
	`W_COERCE
(
log
->
	`„tch
(
theLa°Mou¡LSNBef‹eChk±
, 
log_ªc_buf
, 0));

695 
logªc_t
& 
r
 = *
log_ªc_buf
;

698 
	`mem˝y
(
__c›y__buf
, &
r
,Ñ.
	`Àngth
());

699 
log
->
	`ªÀa£
();

701 
	`DBG
–<< 
theLa°Mou¡LSNBef‹eChk±
 << ": " << 
c›y
 );

703 
	`w_as£π9
(
c›y
.
	`ty≥
(Ë=
logªc_t
::
t_dismou¡_vﬁ
 ||

704 
c›y
.
	`ty≥
(Ë=
logªc_t
::
t_mou¡_vﬁ
);

706 
chk±_dev_èb_t
 *
dp
 = (chk±_dev_èb_t*)
c›y
.
	`d©a
();

707 
	`w_as£π9
(
dp
->
cou¡
 == 1);

714 i‡(
c›y
.
	`ty≥
(Ë=
logªc_t
::
t_dismou¡_vﬁ
) {

715 
	`W_IGNORE
(
io_m
::
	`mou¡
(
dp
->
devªc
[0].
dev_«me
, dp->devªc[0].
vid
));

717 
	`W_IGNORE
(
io_m
::
	`dismou¡
(
dp
->
devªc
[0].
vid
));

720 
theLa°Mou¡LSNBef‹eChk±
 = 
c›y
.
	`¥ev
();

726 
io_m
::
	`SëLa°Mou¡LSN
(
theLa°Mou¡LSNBef‹eChk±
);

734 
x˘_i
 
ôî
;

735 
x˘_t
* 
√xt
;

737 
x˘_t
* 
xd
=
ôî
.
	`√xt
(); xd; xd=
√xt
) {

738 i‡(
xd
->
	`°©e
(Ë=
x˘_‰ìög_•a˚
) {

739 
	`DBG
–<< 
xd
->
	`tid
() << " was found freeing spaceáfteránalysis, deleting" );

740 
found_x˘_‰ìög_•a˚
 = 
åue
;

741 
	`me
()->
	`©èch_x˘
(
xd
);

742 
√xt
 = 
ôî
.
	`îa£_™d_√xt
();

743 
	`W_COERCE
–
xd
->
	`di•o£
() );

744 
x˘_t
::
	`de°roy_x˘
(
xd
);

746 
	`DBG
–<< 
xd
->
	`tid
() << " wasÇot freeing spaceáfteránalysis" );

747 
√xt
 = 
ôî
.
	`√xt
(
åue
);

753 
w_ba£_t
::
ba£_°©_t
 
f
 = 
	`GET_TSTAT
(
log_„tches
);

754 
w_ba£_t
::
ba£_°©_t
 
i
 = 
	`GET_TSTAT
(
log_ö£πs
);

755 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


757 << 
f
 << "Üog_fetches, "

758 << 
i
 << "Üog_ö£π†" << 
Êushl
;

760 
	}
}

773 
	gª°¨t_m
::
ªdo_∑ss
(

774 
l¢_t
 
ªdo_l¢
,

775 c⁄° 
l¢_t
 & 
W_IFDEBUG3
(
highe°_l¢
),

776 
dúty_∑ges_èb_t
& 
d±ab


779 
FUNC
(
ª°¨t_m
::
ªdo_∑ss
);

780 
	gsmÀvñ_0
::
›î©ög_mode
 = 
smÀvñ_0
::
t_ö_ªdo
;

782 
AutoTu∫OffLoggög
 
	gtu∫edOnWhíDe°royed
;

787 
DBG
(<<"SèπÑedÿsˇ¬ögáàªdo_l¢ = " << 
ªdo_l¢
);

788 
log_i
 
sˇn
(*
log
, 
ªdo_l¢
);

789 
l¢_t
 
	gcur_l¢
 = 
log
->
cuº_l¢
();

790 if(
	gªdo_l¢
 < 
	gcur_l¢
) {

791 
DBG
(<< "RedoögÜog from " << 
ªdo_l¢


792 << "Åÿ" << 
cur_l¢
);

793 
	gsmÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


794 << "RedoögÜog from " << 
ªdo_l¢


795 << "Åÿ" << 
cur_l¢
 << 
Êushl
;

801 
logªc_t
* 
	glog_ªc_buf
=0;

803 
l¢_t
 
	gl¢
;

804 
	gsˇn
.
√xt
(
l¢
, 
log_ªc_buf
)) {

805 
	glogªc_t
& 
	gr
 = *
log_ªc_buf
;

809 
l¢_t
* 
	gªc_l¢
 = 0;

811 i‡(!
	gr
.
vÆid_hódî
(
l¢
)) {

812 
	gsmÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


813 << "I¡î«»îr‹ durögÑedÿªcovîy." << 
Êushl
;

814 
	gsmÀvñ_0
::
îæog
->
˛og
 << 
îr‹_¥io


815 << "ÜogÑec‹dáàposôi⁄: " << 
l¢


816 << "áµór†övÆid." << 
ídl
 << 
Êushl
;

817 
ab‹t
();

820 
boﬁ
 
	gªd⁄e
 = 
Ál£
;

821 
LOGTRACE1
–<< 
l¢
 << " R: " << 
r
 );

822 
w_as£π1
(
l¢
 =
r
.
l¢_ck
());

823 i‡–
	gr
.
is_ªdo
() ) {

824 i‡(
	gr
.
nuŒ_pid
()) {

834 i‡(
	gr
.
tid
(Ë!
tid_t
::
nuŒ
) {

835 
x˘_t
 *
xd
 = x˘_t::
look_up
(
r
.
tid
());

836 i‡(
	gxd
) {

837 i‡(
	gxd
->
°©e
(Ë=
x˘_t
::
x˘_a˘ive
) {

838 
DBG
(<<"ªdÿ-Çÿ∑ge, x˘ i†" << 
r
.
tid
());

839 
	gr
.
ªdo
(0);

840 
	gªd⁄e
 = 
åue
;

842 
DBG
(<<"nÿ∑ge,Öª∑ªd x˘ " << 
r
.
tid
());

843 
w_as£π1
(
xd
->
°©e
(Ë=
x˘_t
::
x˘_¥ï¨ed
);

844 
w_as£π2
(
r
.
ty≥
(Ë=
logªc_t
::
t_x˘_¥ï¨e_°


845 || 
r
.
ty≥
(Ë=
logªc_t
::
t_x˘_¥ï¨e_lk


846 || 
r
.
ty≥
(Ë=
logªc_t
::
t_x˘_¥ï¨e_Æk


847 || 
r
.
ty≥
(Ë=
logªc_t
::
t_x˘_¥ï¨e_°‹es


848 || 
r
.
ty≥
(Ë=
logªc_t
::
t_x˘_¥ï¨e_fi
);

862 
w_as£π9
(
r
.
ty≥
(Ë=
logªc_t
::
t_dismou¡_vﬁ
 ||

863 
r
.
ty≥
(Ë=
logªc_t
::
t_mou¡_vﬁ
);

864 
DBG
(<<"redo -ÇoÖage,Ço xct ");

865 
	gr
.
ªdo
(0);

866 
	gio_m
::
SëLa°Mou¡LSN
(
l¢
);

867 
	gªd⁄e
 = 
åue
;

871 
Õid_t
 
	g∑ge_upd©ed
 = 
r
.
c⁄°ru˘_pid
();

872 if(
	gd±ab
.
look_up
(
∑ge_upd©ed
, &
ªc_l¢
Ë&& 
	gl¢
 >= *rec_lsn) {

877 
DBG
(<<"redoÖage update,Öid "

878 << 
r
.
shpid
()

879 << "(" << 
∑ge_upd©ed
 << ")"

880 << "Ñec_l¢: " << *
ªc_l¢


881 << "ÜogÑec‹d: " << 
l¢


883 
w_as£π1
(
r
.
shpid
());

888 
∑ge_p
 
	g∑ge
;

921 
°‹e_Êag_t
 
	g°‹e_Êags
 = 
°_bad
;

922 
DBG
(<< "TRUST_PAGE_LSN");

923 
W_COERCE
–
∑ge
.
fix
(
∑ge_upd©ed
,

924 
∑ge_p
::
t_™y_p
,

925 
LATCH_EX
,

927 
°‹e_Êags
,

928 
åue


931 #i‡
W_DEBUG_LEVEL
 > 2

932 if(
	g∑ge_upd©ed
 !
∑ge
.
pid
()) {

933 
DBG
(<<"Pid†d⁄'àm©ch:Éx≥˘ed " << 
∑ge_upd©ed


934 << " gŸ " << 
∑ge
.
pid
());

938 
l¢_t
 
	g∑ge_l¢
 = 
∑ge
.
l¢
();

939 
LOGTRACE1
(<<"L¢ " << 
l¢
 << "Öage'†l¢ " << 
∑ge_l¢


940 << " wû»ªdo: " << (
∑ge_l¢
 < 
l¢
));

941 i‡(
	g∑ge_l¢
 < 
	gl¢
)

963 
x˘_t
* 
	gxd
 = 0;

964 i‡(
	gr
.
tid
(Ë!
tid_t
::
nuŒ
) {

965 i‡((
xd
 = 
x˘_t
::
look_up
(
r
.
tid
()))) {

971 
me
()->
©èch_x˘
(
xd
);

979 
boﬁ
 
	gwas_dúty
 = 
∑ge
.
is_dúty
();

980 
	gªd⁄e
 = 
åue
;

982 
	g_ªdo_tid
 = 
r
.
tid
();

983 
	gr
.
ªdo
(
∑ge
.
is_fixed
() ? &page : 0);

984 
	g_ªdo_tid
 = 
tid_t
::
nuŒ
;

985 
	g∑ge
.
£t_l¢s
(
l¢
);

1015 
	g∑ge
.
ª∑ú_ªc_l¢
(
was_dúty
, 
l¢
);

1018 i‡(
	gxd
Ë
me
()->
dëach_x˘
(
xd
);

1021 #i‡
W_DEBUG_LEVEL
>2

1022 if(
	g∑ge_l¢
 >
highe°_l¢
) {

1023 
˚º
 << "WAL violation!Öage "

1024 << 
∑ge
.
pid
()

1025 << " ha†l¢ " << 
∑ge_l¢


1026 << "Énd o‡log i†ªc‹dÖri‹Åÿ" << 
highe°_l¢


1027 << 
ídl
;

1029 
W_FATAL
(
eINTERNAL
);

1038 *
	gªc_l¢
 = 
∑ge_l¢
.
adv™˚
(1);

1044 
DBG
(<<"nŸ found i¿d±ab:ÜogÑec‹d/l¢" << 
l¢


1045 << "Öage_upd©ed=" << 
∑ge_upd©ed


1046 << "Öage=" << 
r
.
shpid
()

1048 (
l¢_t
)(
ªc_l¢
?(*ªc_l¢):÷¢_t::
nuŒ
))

1053 
LOGTRACE1
–<< (
ªd⁄e
 ? "Ñedo" : " skip") );

1056 
	gw_ba£_t
::
ba£_°©_t
 
f
 = 
GET_TSTAT
(
log_„tches
);

1057 
	gw_ba£_t
::
ba£_°©_t
 
i
 = 
GET_TSTAT
(
log_ö£πs
);

1058 
	gsmÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1060 << 
f
 << "Üog_fetches, "

1061 << 
i
 << "Üog_ö£π†" << 
Êushl
;

1066 #ifde‡
CONCURRENT_UNDO


1075 ˛as†
	csm_undo_thªad_t
 : 
public
 
smthªad_t
 {

1076 
public
:

1077 
NORET
 
sm_undo_thªad_t
(

1078 
x˘_t
* 
xd
);

1079 
	mNORET
 ~
	$sm_undo_thªad_t
() {};

1081 
vútuÆ
 
	`run
();

1082 
¥iv©e
:

1083 
x˘_t
* 
_xd
;

1084 
	}
};

1111 
	gª°¨t_m
::
	$undo_∑ss
()

1113 
	`FUNC
(
ª°¨t_m
::
undo_∑ss
);

1115 
smÀvñ_0
::
›î©ög_mode
 = smÀvñ_0::
t_ö_undo
;

1117 
CmpX˘UndoL¢s
 
cmp
;

1118 
X˘PåHóp
 
	`hóp
(
cmp
);

1119 
x˘_t
* 
xd
;

1121 
w_o°r°ªam
 
s
;

1122 
s
 << "restart undo_pass";

1123 (Ë
	`log_commít
(
s
.
	`c_°r
());

1127 
x˘_i
 
	`ôî
(
åue
);

1128 (
xd
 = 
ôî
.
	`√xt
())) {

1129 
	`DBG
–<< "Tønß˘i⁄ " << 
xd
->
	`tid
()

1130 << " ha†°©ê" << 
xd
->
	`°©e
() );

1132 i‡(
xd
->
	`°©e
(Ë=
x˘_t
::
x˘_a˘ive
) {

1133 
hóp
.
	`AddEÀmítD⁄tHópify
(
xd
);

1137 
hóp
.
	`Hópify
();

1140 if(
hóp
.
	`NumEÀmíts
() > 0) {

1141 
	`DBG
(<<"Undoög " << 
hóp
.
	`NumEÀmíts
() << "áctiveÅransactions ");

1142 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1143 << "Undoög " << 
hóp
.
	`NumEÀmíts
() << "áctiveÅransactions "

1144 << 
Êushl
;

1150 i‡(
hóp
.
	`NumEÀmíts
() > 1) {

1151 
hóp
.
	`Fú°
()->
	`undo_nxt
(Ë!
l¢_t
::
nuŒ
)

1153 
xd
 = 
hóp
.
	`Fú°
();

1155 
	`DBG
–<< "Tønß˘i⁄ " << 
xd
->
	`tid
()

1156 << " wôh undo_nxàl¢ " << 
xd
->
	`undo_nxt
()

1157 << "Ñﬁlög backÅÿ" << 
hóp
.
	`Sec⁄d
()->
	`undo_nxt
()

1166 
	`me
()->
	`©èch_x˘
(
xd
);

1168 #i‡
W_DEBUG_LEVEL
 > 1

1170 
l¢_t
 
tmp
 = 
hóp
.
	`Sec⁄d
()->
	`undo_nxt
();

1171 if(
tmp
 =
l¢_t
::
nuŒ
) {

1172 
	`Ârötf
(
°dîr
,

1179 
	`W_COERCE
–
xd
->
	`rﬁlback
(
hóp
.
	`Sec⁄d
()->
	`undo_nxt
()) );

1180 
	`me
()->
	`dëach_x˘
(
xd
);

1182 
	`w_as£π9
(
xd
->
	`undo_nxt
(Ë< 
hóp
.
	`Sec⁄d
()->undo_nxt()

1183 || 
xd
->
	`undo_nxt
(Ë=
l¢_t
::
nuŒ
);

1185 
hóp
.
	`Rïœ˚dFú°
();

1190 
hóp
.
	`NumEÀmíts
() > 0)

1192 
xd
 = 
hóp
.
	`RemoveFú°
();

1194 
	`w_as£π9
(
xd
->
	`undo_nxt
(Ë=
l¢_t
::
nuŒ
 || 
hóp
.
	`NumEÀmíts
() == 0);

1196 
	`DBG
–<< "Tønß˘i⁄ " << 
xd
->
	`tid
()

1199 
	`me
()->
	`©èch_x˘
(
xd
);

1200 
	`W_COERCE
–
xd
->
	`ab‹t
() );

1201 
x˘_t
::
	`de°roy_x˘
(
xd
);

1204 
w_ba£_t
::
ba£_°©_t
 
f
 = 
	`GET_TSTAT
(
log_„tches
);

1205 
w_ba£_t
::
ba£_°©_t
 
i
 = 
	`GET_TSTAT
(
log_ö£πs
);

1206 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1208 << 
f
 << "Üog_fetches, "

1209 << 
i
 << "Üog_ö£π†" << 
Êushl
;

1211 
	}
}

1222 
NORET


1223 
	gdúty_∑ges_èb_t
::
	$dúty_∑ges_èb_t
(
sz
)

1224 : 
	`èb
(
sz
, 
	`W_HASH_ARG
(
dp_íåy_t
, 
pid
, 
lök
), 
unß„_nﬁock
),

1225 
	`ˇchedMöRecLSN
(
l¢_t
::
nuŒ
),

1226 
	$vÆidCachedMöRecLSN
(
Ál£
)

1228 
	}
}

1237 
NORET


1238 
	gdúty_∑ges_èb_t
::~
	$dúty_∑ges_èb_t
()

1244 
w_hash_i
<
dp_íåy_t
, 
unß„_li°_dummy_lock_t
, 
bÂid_t
> 
	`ôî
(
èb
);

1245 
dp_íåy_t
* 
p
 = 
ôî
.
	`√xt
();

1246 if–!
p
) ;

1247 
èb
.
	`ªmove
(
p
);

1248 
dñëe
 
p
;

1250 
	}
}

1257 
NORET


1258 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gdúty_∑ges_èb_t
& 
	gs
)

1260 
	go
 << " DútyÖagêèbÀ: " <<
	gídl
;

1262 
	gw_hash_i
<
	gdp_íåy_t
, 
	gunß„_li°_dummy_lock_t
, 
	gbÂid_t
> 
ôî
(
s
.
èb
);

1263 c⁄° 
dp_íåy_t
* 
	gp
;

1264 (
	gp
 = 
ôî
.
√xt
())) {

1265 
o
 << " Pagê" << 
p
->
pid


1266 << "Ü¢ " << 
p
->
ªc_l¢


1267 << 
ídl
;

1269  
	go
;

1280 
l¢_t


1281 
	gdúty_∑ges_èb_t
::
	$mö_ªc_l¢
()

1283 
l¢_t
 
l
 = 
max_l¢
;

1284 i‡(
vÆidCachedMöRecLSN
) {

1285 
l
 = 
ˇchedMöRecLSN
;

1287 
w_hash_i
<
dp_íåy_t
, 
unß„_li°_dummy_lock_t
, 
bÂid_t
> 
	`ôî
(
èb
);

1288 
dp_íåy_t
* 
p
;

1289 (
p
 = 
ôî
.
	`√xt
())) {

1290 i‡(
l
 > 
p
->
ªc_l¢
 &&Ö->ªc_l¢ !
nuŒ_l¢
) {

1291 
l
 = 
p
->
ªc_l¢
;

1294 
ˇchedMöRecLSN
 = 
l
;

1295 
vÆidCachedMöRecLSN
 = 
åue
;

1298  
l
;

1299 
	}
}

1309 
	gdúty_∑ges_èb_t
&

1310 
	gdúty_∑ges_èb_t
::
	$ö£π
(

1311 c⁄° 
Õid_t
& 
pid
,

1312 c⁄° 
l¢_t
& 
l¢
)

1314 i‡(
vÆidCachedMöRecLSN
 && 
l¢
 < 
ˇchedMöRecLSN
) {

1315 
ˇchedMöRecLSN
 = 
l¢
;

1317 
	`w_as£π1
(! 
èb
.
	`lookup
(
pid
) );

1318 
dp_íåy_t
* 
p
 = 
√w
 
	`dp_íåy_t
(
pid
, 
l¢
);

1319 
	`w_as£π1
(
p
);

1320 
èb
.
	`push
(
p
);

1321  *
this
;

1322 
	}
}

1335 
boﬁ


1336 
	gdúty_∑ges_èb_t
::
	$look_up
(c⁄° 
Õid_t
& 
pid
, 
l¢_t
** 
l¢
)

1338 i‡(
l¢
)

1339 *
l¢
 = 0;

1341 
dp_íåy_t
* 
p
 = 
èb
.
	`lookup
(
pid
);

1342 i‡(
p
 && 
l¢
Ë*l¢ = &p->
ªc_l¢
;

1343  (
p
 != 0);

1344 
	}
}

1354 
	gdúty_∑ges_èb_t
&

1355 
	gdúty_∑ges_èb_t
::
	$ªmove
(c⁄° 
Õid_t
& 
pid
)

1357 
vÆidCachedMöRecLSN
 = 
Ál£
;

1358 
dp_íåy_t
* 
p
 = 
èb
.
	`ªmove
(
pid
);

1359 
	`w_as£π1
(
p
);

1360 
dñëe
 
p
;

1361  *
this
;

1362 
	}
}

1366 #ifde‡
CONCURRENT_UNDO


1374 
NORET


1375 
	gsm_undo_thªad_t
::
	$sm_undo_thªad_t
(
x˘_t
 *
xd
)

1376 : 
	`smthªad_t
(
t_ªguœr
, "sm_undo" ),

1377 
	$_xd
(
xd
)

1379 
	}
}

1391 
	gsm_undo_thªad_t
::
	$run
()

1393 
	`me
()->
	`©èch_x˘
(
_xd
);

1394 
	`W_COERCE
–
_xd
->
	`ab‹t
() );

1396 
dñëe
 
_xd
;

1397 
	}
}

	@src/sm/restart.h

30 #i‚de‡
RESTART_H


31 
	#RESTART_H


	)

33 
	~"w_deföes.h
"

37 
˛ass
 
	gdúty_∑ges_èb_t
;

39 #ifde‡
__GNUG__


40 #¥agm®
öãrÁ˚


43 #i‚de‡
BF_S_H


44 
	~<bf_s.h
>

47 #i‚de‡
RESTART_S_H


48 
	~<ª°¨t_s.h
>

51 ˛as†
	cª°¨t_m
 : 
public
 
smÀvñ_1
 {

52 
public
:

53 
NORET
 
	$ª°¨t_m
() {};

54 
NORET
 ~
	$ª°¨t_m
(Ë{
	}
};

56 
ªcovî
(
l¢_t
 
ma°î
);

58 
	g¥iv©e
:

60 
™Æysis_∑ss
(

61 
l¢_t
 
ma°î
,

62 
dúty_∑ges_èb_t
& 
±ab
,

63 
l¢_t
& 
ªdo_l¢
,

64 
boﬁ
& 
found_x˘_‰ìög_•a˚


67 
ªdo_∑ss
(

68 
l¢_t
 
ªdo_l¢
,

69 c⁄° 
l¢_t
 &
highe°
,

70 
dúty_∑ges_èb_t
& 
±ab
);

72 
undo_∑ss
();

74 
	g¥iv©e
:

77 
tid_t
 
_ªdo_tid
;

78 
	gpublic
:

79 
tid_t
 *
	$ªdo_tid
(Ë{  &
_ªdo_tid
; 
	}
}

84 ˛as†
	cAutoTu∫OffLoggög
 {

85 
	mpublic
:

86 
	$AutoTu∫OffLoggög
()

88 
	`w_as£π1
(
smÀvñ_0
::
loggög_íabÀd
);

89 
smÀvñ_0
::
loggög_íabÀd
 = 
Ál£
;

92 ~
	$AutoTu∫OffLoggög
()

94 
	`w_as£π1
(!
smÀvñ_0
::
loggög_íabÀd
);

95 
smÀvñ_0
::
loggög_íabÀd
 = 
åue
;

96 
	}
};

97 
	g¥iv©e
:

98 
AutoTu∫OffLoggög
& 
›î©‹
=(const AutoTurnOffLogging&);

99 
AutoTu∫OffLoggög
(const AutoTurnOffLogging&);

103 ˛as†
	cCmpX˘UndoL¢s


105 
	mpublic
:

106 
boﬁ
 
	$gt
(c⁄° 
x˘_t
* 
x
, c⁄° x˘_t* 
y
) const;

110 
ölöe
 
boﬁ


111 
CmpX˘UndoL¢s
::
	$gt
(c⁄° 
x˘_t
* 
x
, c⁄° x˘_t* 
y
) const

113  
x
->
	`undo_nxt
(Ë> 
y
->undo_nxt();

114 
	}
}

	@src/sm/restart_s.h

30 #i‚de‡
RESTART_S_H


31 
	#RESTART_S_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 
	sdp_íåy_t
 {

42 
bÂid_t
 
	mpid
;

43 
l¢_t
 
	mªc_l¢
;

44 
w_lök_t
 
	mlök
;

46 
dp_íåy_t
(Ë: 
ªc_l¢
(0, 0) {};

47 
dp_íåy_t
(c⁄° 
Õid_t
& 
p
, c⁄° 
l¢_t
& 
l
)

48 : 
pid
(
p
), 
ªc_l¢
(
l
) {};

	@src/sm/rtree.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#RTREE_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "rtree.h"

62 #¥agm®
im∂emíèti⁄
 "rtree_p.h"

65 
	~<cm©h
>

66 
	~<sm_öt_2.h
>

67 
	~<πªe_p.h
>

68 
	~"sm_du_°©s.h
"

70 
	~<¸ash.h
>

72 #i‚de‡
MIN


73 
	#MIN
(
x
,
y
Ë((xË< (yË? (xË: (y))

	)

76 #i‚de‡
MAX


77 
	#MAX
(
x
,
y
Ë((xË> (yË? (xË: (y))

	)

80 #i‚de‡
ABS


81 
	#ABS
(
x
Ë((xË>0 ? (xË: -(x))

	)

85 #ifde‡
EXPLICIT_TEMPLATE


86 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gwrk_bønch_t
>;

90 
ölöe
 

91 
	$SWITCH
(
öt2_t
& 
x
, i¡2_t& 
y
)

93 { 
öt2_t
 
_ãmp_
 = 
x
; x = 
y
; y = _temp_; }

94 
	}
}

96 c⁄° 
	gMaxDoubÀ
 = 4.0*
max_öt4
*max_int4;

99 
	gπ°k_t
::
	$dr›_Æl_but_œ°
()

101 
	`w_as£π1
(! 
	`is_em±y
());

102 
_t›
>1) {

103 
_°k
[--
_t›
].
∑ge
.
	`unfix
();

105 
	}
}

107 
	g·°k_t
::
	$·°k_t
() {

108 
_t›
 = 0;

109 
i
=0; i<
·°k_chunk
; i++) {

110 
_ödúe˘
[
i
] = 
NULL
;

112 
	}
}

114 
	g·°k_t
::~
	$·°k_t
() {

115 
shpid_t
 
MAYBE_UNUSED
 
tmp
;

116 
_t›
>0) {

117 
tmp
 = 
	`p›
();

120 
	}
}

123 
	g·°k_t
::
	$em±y_Æl
() {

124 
_t›
 > 0) {

125 
_t›
--;

126 i‡(
_t›
>=
·°k_chunk
 && _top%ftstk_chunk==0) {

127 
dñëe
 
_ödúe˘
[
_t›
/
·°k_chunk
 - 1];

130 
	}
}

138 ˛as†
	cπw‹k_p
 : 
public
 
smÀvñ_0
 {

139 
∑ge_s
* 
_buf
;

140 
πªe_p
 
	m_pg
;

141 
nbox_t
* 
	mmbb
;

143 
	mpublic
:

144 
	$πw‹k_p
()

145 : 
	`_buf
(
√w
 
∑ge_s
), 
	$_pg
(
_buf
, 
°_tmp
) {

146 
	`w_as£π3
(
_pg
.
	`is_fixed
());

147 
mbb
 = 
√w
 
	`nbox_t
(2);

150 
	$πw‹k_p
(c⁄° 
Õid_t
& 
pid
, 
öt2_t
 
l
, i¡2_à
d
 = 2)

151 : 
	`_buf
(
√w
 
∑ge_s
), 
	$_pg
(
_buf
, 
°_tmp
) {

155 
x˘_log_swôch_t
 
	`log_off
(
smÀvñ_0
::
OFF
);

156 
	`W_COERCE
–
_pg
.
	`f‹m©
(
pid
, 
πªe_p
::
t_πªe_p
, _pg.
t_vúgö
,

157 
°_ªguœr
) );

158 
	`W_COERCE
–
_pg
.
	`£t_Àvñ
(
l
) );

159 
	`W_COERCE
–
_pg
.
	`£t_dim
(
d
) );

160 
mbb
 = 
√w
 
	`nbox_t
(
d
);

161 
	}
}

163 ~
	$πw‹k_p
(Ë{ i‡(
_buf
Ë
dñëe
 _buf; i‡(
mbb
Ëdñëêmbb; 
	}
}

165 
	$öô
(
öt2_t
 
l
, i¡2_à
d
 = 2) {

166 
Õid_t
 
pid
;

170 
x˘_log_swôch_t
 
	`log_off
(
smÀvñ_0
::
OFF
);

172 
	`W_COERCE
–
_pg
.
	`f‹m©
(
pid
, 
πªe_p
::
t_πªe_p
, _pg.
t_vúgö
,

173 
°_ªguœr
) ) ;

174 
	`W_COERCE
–
_pg
.
	`£t_Àvñ
(
l
)) ;

175 
	`W_COERCE
–
_pg
.
	`£t_dim
(
d
)) ;

176 i‡(!
mbb
Ëmbb = 
√w
 
	`nbox_t
(
d
);

177 
	}
}

179 
	$sw≠
(
πw‹k_p
& 
∑ge
) {

180 
πªe_p
 
tmp
 = 
_pg
; _pg = 
∑ge
._pg;Öage._pg =Åmp;

181 
∑ge_s
* 
tmp_buf
 = 
_buf
; _bu‡
∑ge
._buf;Öage._buf =Åmp_buf;

182 
nbox_t
* 
tmp_box
;Åmp_box = 
mbb
; mbb = 
∑ge
.mbb;Öage.mbb =Åmp_box;

183 
	}
}

185 c⁄° 
	gnbox_t
& 
	$bound
(Ë{  *
mbb
; 
	}
}

187 
rc_t
 
	$ˇlc_£t_bound
() {

188  
_pg
.
	`ˇlc_bound
(*
mbb
);

189 
	}
}

191 
	$ex≤_bound
(c⁄° 
nbox_t
& 
key
) {

192 if(!
key
.
	`is_NuŒ
()) {

193 (*
mbb
Ë+
key
;

195 
	}
}

197 
πªe_p
* 
	$Ω
(Ë{  &
_pg
; 
	}
}

207 ˛as†
	cπld_ˇche_t
 {

208 
πw‹k_p
 
	mbuf
[3];

209 
öt2_t
 
	m_idx
;

210 
nbox_t
* 
	mœ°_box
;

212 
	mpublic
:

213 
	$πld_ˇche_t
(Ë{ 
_idx
 = -1; 
œ°_box
=
NULL
; }

214 ~
	$πld_ˇche_t
(Ë{ i‡(
œ°_box
Ë
dñëe
Üa°_box; 
	}
}

216 
öt2_t
 
	$cou¡
(Ë{  
_idx
+1; 
	}
}

217 
	$ö¸_˙t
(Ë{ 
_idx
++; 
	`w_as£π1
(_idx<3); 
	}
}

219 
öô_buf
(
öt2_t
 
lvl
);

221 
πw‹k_p
* 
	$t›
() {

222 
	`w_as£π1
(
_idx
 >= 0);

223  &
buf
[
_idx
];

224 
	}
}

226 
πw‹k_p
* 
	$bŸtom
() {

227 
	`w_as£π1
(
_idx
 >= 0);

228  &
buf
[0];

229 
	}
}

231 
rc_t
 
f‹˚
(

232 
πw‹k_p
& 
w‹k
,

233 
boﬁ
& 
out
,

234 
nbox_t
* 
univî£
);

244 ˛as†
	cπld_°k_t
 {

245 íum { 
	mmax_ld°k_sz
 = 10 };

246 
πªe_p
 
	gΩ
;

247 
πld_ˇche_t
* 
	gœyîs
;

248 
	g_t›
;

249 
πld_desc_t
 
	gdc
;

251 
	$öô_√xt_œyî
() {

252 
_t›
++;

253 
œyîs
[
_t›
].
	`öô_buf
(_top+1);

254 
œyîs
[
_t›
].
	`ö¸_˙t
();

255 
	}
}

257 
rc_t
 
tmp2ªÆ
(
πw‹k_p
* 
tmp
, 
πªe_p
* 
ªÆ
);

259 
	gpublic
:

260 
uöt2_t
 
height
;

261 
uöt4_t
 
	gÀaf_∑ges
;

262 
uöt4_t
 
	gnum_∑ges
;

263 
uöt4_t
 
	gfûl_sum
;

265 
	$πld_°k_t
(c⁄° 
πªe_p
& 
πp
, c⁄° 
πld_desc_t
& 
desc
) :

266 
	`Ω
(
πp
),

267 
	`œyîs
(0),

268 
	`_t›
(-1),

269 
	`height
(0),

270 
	`Àaf_∑ges
(0),

271 
	`num_∑ges
(0),

272 
	$fûl_sum
(0)

274 
œyîs
 = 
√w
 
πld_ˇche_t
[
max_ld°k_sz
];

275 
dc
 = 
desc
;

276 
	}
}

278 ~
	$πld_°k_t
(Ë{ i‡(
œyîs
Ë
dñëe
[]Üayîs; 
	}
}

280 
rc_t
 
add_to_°k
(

281 c⁄° 
nbox_t
& 
key
,

282 c⁄° 
cvec_t
& 
ñ
,

283 
shpid_t
 
chûd
,

284 
öt2_t
 
Àvñ
);

285 
rc_t
 
wøp_up
();

293 
	$_s‹t_cmp_¨ó_
(c⁄° * 
k1
, c⁄° * 
k2
)

295 
wrk_bønch_t
 &
b1
 = *(wrk_bønch_à*Ë
k1
;

296 
wrk_bønch_t
 &
b2
 = *(wrk_bønch_à*Ë
k2
;

298 
diff
 = 
b1
.
¨ó
 - 
b2
.area;

300 i‡(
diff
 > 0.0)  1;

301 i‡(
diff
 < 0.0)  -1;

303 
	}
}

309 
	ss‹t_c⁄ãxt
 {

310 
	m_axis
;

311 
queue_ba£d_block_lock_t
 
	m_s‹t_c⁄ãxt_lock
;

314 
s‹t_c⁄ãxt
 
	gs‹t_c⁄ãxt
;

318 
	$_s‹t_cmp_axis_
(c⁄° * 
k1
, c⁄° * 
k2
)

320 
wrk_bønch_t
 &
b1
 = *(wrk_bønch_à*Ë
k1
;

321 
wrk_bønch_t
 &
b2
 = *(wrk_bønch_à*Ë
k2
;

322 
diff
;

323 
axis
 = 
s‹t_c⁄ãxt
.
_axis
;

325 
diff
 = ()
b1
.
ª˘
.
	`bound
(
axis
Ë- ()
b2
.rect.bound(axis);

326 i‡(
diff
==0.0) {

327 
diff
 = ()(
b1
.
ª˘
.
	`bound
(
axis
 + b1.ª˘.
	`dimísi⁄
()))

328 - ()(
b2
.
ª˘
.
	`bound
(
axis
 + b2.ª˘.
	`dimísi⁄
()));

331 i‡(
diff
 > 0.0)  1;

332 i‡(
diff
 < 0.0)  -1;

334 
	}
}

338 
	$quick_s‹t
(
wrk_bønch_t
 
key
[], 
öt2_t
 
num
, 
axis
)

340 i‡(
axis
 == -1)

341 
	`qs‹t
(
key
, 
num
, (
wrk_bønch_t
), 
_s‹t_cmp_¨ó_
);

344 
	`CRITICAL_SECTION
(
cs
, 
s‹t_c⁄ãxt
.
_s‹t_c⁄ãxt_lock
);

345 
s‹t_c⁄ãxt
.
_axis
 = 
axis
;

346 
	`qs‹t
(
key
, 
num
, (
wrk_bønch_t
), 
_s‹t_cmp_axis_
);

348 
	}
}

355 
	$ovîœp
(c⁄° 
nbox_t
& 
èrgë
, 
öt2_t
 
ödex
,

356 
wrk_bønch_t
 
li°
[], 
öt2_t
 
num
)

358 
i
;

359 
sum
 = 0.0, 
¨ó
;

361 
i
=0; i<
num
; i++) {

362 i‡(
i
==
ödex
) ;

363 i‡((
¨ó
 = (
èrgë
^
li°
[
i
].
ª˘
).
	`¨ó
()) < 0.0 ) ;

364 
sum
 +
¨ó
;

366  
sum
;

367 
	}
}

372 
rc_t


373 
	gπªe_ba£_p
::
	$£t_hdr
(c⁄° 
π˘æ_t
& 
√w_hdr
)

375 
vec_t
 
v
;

376 
v
.
	`put
(&
√w_hdr
, (new_hdr));

377 
vec_t
 
	`hdr_vec_tmp
(&
√w_hdr
, (new_hdr));

378 
	`W_DO
–
	`ovîwrôe
(0, 0, 
hdr_vec_tmp
) );

379  
RCOK
;

380 
	}
}

382 
rc_t


383 
	gπªe_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

384 
uöt4_t
 
Êags
, 
°‹e_Êag_t
 
°‹e_Êags
)

386 
	`W_DO
–
πªe_ba£_p
::
	`f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

387  
RCOK
;

388 
	}
}

390 
	$MAKEPAGECODE
(
πªe_p
, 
πªe_ba£_p
)

391 
	$MAKEPAGECODE
(
πªe_ba£_p
, 
keyed_p
)

396 
rc_t


397 
πªe_ba£_p
::
	$£t_Àvñ
(
öt2_t
 
l
)

399 
π˘æ_t
 
tmp
;

401 
tmp
 = 
	`_hdr
();

402 i‡(
tmp
.
Àvñ
 =
l
Ë 
RCOK
;

403 
tmp
.
Àvñ
 = 
l
;

404 
	`W_DO
–
	`£t_hdr
(
tmp
) );

405  
RCOK
;

406 
	}
}

411 
rc_t


412 
	gπªe_ba£_p
::
	$£t_dim
(
öt2_t
 
d
)

414 
π˘æ_t
 
tmp
;

416 
tmp
 = 
	`_hdr
();

417 i‡(
tmp
.
dim
 =
d
Ë 
RCOK
;

418 
tmp
.
dim
 = 
d
;

419 
	`W_DO
–
	`£t_hdr
(
tmp
) );

420  
RCOK
;

421 
	}
}

426 
rc_t


427 
	gπªe_p
::
	$ˇlc_bound
(
nbox_t
& 
nb
)

429 
i
;

430 
nbox_t
 
cur
;

431 
nb
.
	`nuŒify
();

433 
i
=
	`ƒecs
()-1; i>=0; i--) {

434 
cur
.
	`byãs2box
(
	`ªc
(
i
).
	`key
(),Ñec(i).
	`kÀn
());

435 if(!
cur
.
	`is_NuŒ
()) {

436 
nb
 +
cur
;

440  
RCOK
;

441 
	}
}

447 
	gπªe_p
::
	$¥öt
()

449 
i
, 
j
;

450 
nbox_t
 
key
;

452 
i
=0; i<
	`ƒecs
(); i++) {

453 
key
.
	`byãs2box
(
	`ªc
(
i
).
	`key
(),Ñec(i).
	`kÀn
());

454 
key
.
	`¥öt
(
cout
, 
	`Àvñ
() );

456 
j
=0; j<5-
	`Àvñ
(); j++Ë
cout
 << "\t";

457 i‡–
	`is_node
() )

458 
cout
 << ":-Öid = " << 
	`ªc
(
i
).
	`chûd
(Ë<< 
ídl
;

460 
cout
 << "ñem=(" << 
	`ªc
(
i
).
	`ñem
(Ë<< ")" << 
ídl
;

462 
cout
 << 
ídl
;

463 
	}
}

469 
	gπªe_p
::
	$døw
(
o°ªam
 &
DøwFûe
, 
nbox_t
 &
CovîAŒ
)

471 
i
;

472 
nbox_t
 
key
;

474 
i
=0; i<
	`ƒecs
(); i++) {

475 
key
.
	`byãs2box
(
	`ªc
(
i
).
	`key
(),Ñec(i).
	`kÀn
());

476 
key
.
	`døw
(
	`Àvñ
(), 
DøwFûe
, 
CovîAŒ
);

478 
	}
}

485 
uöt2_t


486 
	gπªe_p
::
	$ovp
()

488 
i
, 
j
;

489 
nbox_t
 
key1
, 
key2
;

490 
Æl_sum
 = 0.0, 
ovp_sum
 = 0.0, 
¨ó
;

492 
i
=0; i<
	`ƒecs
(); i++) {

493 
key1
.
	`byãs2box
(
	`ªc
(
i
).
	`key
(),Ñec(i).
	`kÀn
());

494 i‡((
¨ó
 = 
key1
.
	`¨ó
()) < 0.0) ;

495 
Æl_sum
 +
¨ó
;

496 
j
=0; j<
	`ƒecs
(); j++) {

497 i‡(
i
!=
j
) {

498 
key2
.
	`byãs2box
(
	`ªc
(
j
).
	`key
(),Ñec(j).
	`kÀn
());

499 i‡((
¨ó
 = (
key1
^
key2
).
	`¨ó
()) < 0.0) ;

500 
ovp_sum
 +
¨ó
;

505 i‡(
Æl_sum
 == 0.0)  0;

506  (
uöt2_t
Ë(
ovp_sum
*50.0 / 
Æl_sum
);

507 
	}
}

512 
rc_t


513 
	gπªe_ba£_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

514 
uöt4_t
 
Êags
, 
°‹e_Êag_t
 
°‹e_Êags
)

516 
π˘æ_t
 
πc
;

517 
πc
.
Àvñ
 = 1;

518 
πc
.
dim
 = 2;

519 
vec_t
 
vec
;

520 
vec
.
	`put
(&
πc
, (
π˘æ_t
));

522 
	`W_DO
–
keyed_p
::
	`f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
, 
vec
) );

524  
RCOK
;

525 
	}
}

531 
	gπªe_p
::
	$pick_›timum
(c⁄° 
nbox_t
& 
key
, 
¶Ÿid_t
& 
ªt_¶Ÿ
)

533 
	`w_as£π3
–
	`is_node
() );

535 
ªt_¶Ÿ
 = -1;

536 
i
;

537 
mö_¨ó
 = 
MaxDoubÀ
;

538 
öt2_t
 
mö_idx
 = -1, 
cou¡
 = 
	`ƒecs
();

539 
wrk_bønch_t
* 
w‹k
 = 
√w
 wrk_bønch_t[
cou¡
];

540 
	`w_as£π1
(
w‹k
);

541 
w_auto_dñëe_¨øy_t
<
wrk_bønch_t
> 
	`auto_dñ_w‹k
(
w‹k
);

544 
i
=0; i<
cou¡
; i++) {

545 
w‹k
[
i
].
ª˘
.
	`byãs2box
(
	`ªc
(i).
	`key
(),Ñec(i).
	`kÀn
());

546 
w‹k
[
i
].
¨ó
 = w‹k[i].
ª˘
.
	`¨ó
();

547 
w‹k
[
i
].
idx
 = i;

548 if(
key
.
	`is_NuŒ
()) {

550 if–
w‹k
[
i
].
¨ó
 < 
mö_¨ó
 ) {

551 
mö_¨ó
 = 
w‹k
[
i
].
¨ó
; 
ªt_¶Ÿ
 = i;

554 if–
w‹k
[
i
].
ª˘
 / 
key
 && w‹k[i].
¨ó
 < 
mö_¨ó
 ) {

555 
mö_¨ó
 = 
w‹k
[
i
].
¨ó
; 
ªt_¶Ÿ
 = i;

557 
w‹k
[
i
].
¨ó
 = (w‹k[i].
ª˘
+
key
).
	`¨ó
() - work[i].area;

561 i‡(
this
->
	`Àvñ
()==2) {

563 
mö_diff
 = 
MaxDoubÀ
;

564 i‡(
ªt_¶Ÿ
!=-1) {

568 
	`quick_s‹t
(
w‹k
, 
cou¡
, -1);

572 if(
key
.
	`is_NuŒ
()) {

573 
mö_idx
 = 
	`MIN
(32, 
cou¡
)-1;

574 } 
i
=
	`MIN
(32, 
cou¡
)-1; i>=0; i--) {

575 
diff
 = 
	`ovîœp
((
key
 + 
w‹k
[
i
].
ª˘
), i, w‹k, 
cou¡
) -

576 
	`ovîœp
(
w‹k
[
i
].
ª˘
, i, w‹k, 
cou¡
);

577 i‡(
diff
 < 
mö_diff
Ë{ mö_dif‡diff; 
mö_idx
 = 
i
; }

581 
mö_idx
 = 0;

582 
i
=1; i<
cou¡
; i++) {

583 
diff
 = 
w‹k
[
mö_idx
].
¨ó
 - w‹k[
i
].area;

584 i‡(
diff
 > 0.0) {

585 
mö_idx
 = 
i
; ;

587 i‡(
diff
==0.0 && 
w‹k
[
i
].
ª˘
.
	`¨ó
()<w‹k[
mö_idx
].rect.area())

588 
mö_idx
 = 
i
;

592 
ªt_¶Ÿ
 = 
w‹k
[
mö_idx
].
idx
;

593 
	}
}

598 
rc_t


599 
	gπªe_p
::
	$ov_ªmove
(
πªe_p
* 
d°
, c⁄° 
nbox_t
& 
key
, c⁄°Çbox_t& 
bound
)

601 
i
, 
j
;

602 
öt2_t
 
cou¡
 = 
this
->
	`ƒecs
();

603 
öt2_t
 
num_ªm
 = (öt2_tË((
cou¡
+1Ë* 
REMOVE_RATIO
 + 0.5);

604 
wrk_bønch_t
* 
w‹k
 = 
√w
 wrk_bønch_t[
cou¡
+1];

605 i‡(!
w‹k
Ë 
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

606 
w_auto_dñëe_¨øy_t
<
wrk_bønch_t
> 
	`auto_dñ_w‹k
(
w‹k
);

609 
i
=0; i<
cou¡
; i++) {

610 
w‹k
[
i
].
ª˘
.
	`byãs2box
(
	`ªc
(i).
	`key
(),Ñec(i).
	`kÀn
());

611 
w‹k
[
i
].
¨ó
 = -1.0 * (w‹k[i].
ª˘
*
bound
);

612 
w‹k
[
i
].
idx
 = i;

614 
w‹k
[
cou¡
].
¨ó
 = -1.0 * (
key
 * 
bound
);

615 
w‹k
[
cou¡
].
idx
 = count;

616 
w‹k
[
cou¡
].
ª˘
 = 
key
;

619 
	`quick_s‹t
(
w‹k
, 
cou¡
+1, -1);

622 
i
=0; i<
num_ªm
; i++) {

623 
öt2_t
 
ödex
 = 
w‹k
[
i
].
idx
;

625 
j
=
i
+1; j<
num_ªm
; j++)

626 i‡(
ödex
 < 
w‹k
[
j
].
idx
Ë{ 
	`SWITCH
(index, work[j].idx); }

627 i‡(
ödex
 !
cou¡
) {

631 c⁄° 
πªc_t
& 
tu∂e
 = 
	`ªc
(
ödex
);

632 
	`W_DO
–
d°
->
	`ö£π
(
tu∂e
) );

633 
	`W_DO
–
this
->
	`ªmove
(
ödex
) );

637  
RCOK
;

638 
	}
}

643 
rc_t


644 
	gπªe_p
::
	$ö£π
(c⁄° 
πªc_t
& 
tu∂e
)

646 
nbox_t
 
	`key
(
tu∂e
.key(),Åu∂e.
	`kÀn
());

647 
vec_t
 
	`ñ
((c⁄° *Ë
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
());

648 
shpid_t
 
chûd
 = 
tu∂e
.
	`chûd
();

650  ( 
	`ö£π
(
key
, 
ñ
, 
chûd
) );

651 
	}
}

656 
rc_t


657 
	gπªe_p
::
	$ö£π
(c⁄° 
nbox_t
& 
key
, c⁄° 
cvec_t
& 
ñ
, 
shpid_t
 
chûd
)

659 i‡(
chûd
==0Ë{ 
	`w_as£π3
(
	`is_Àaf
()); }

660 { 
	`w_as£π3
(!
	`is_Àaf
()); }

662 
¶Ÿid_t
 
num_¶Ÿ
 = 0;

663 
u_ch¨
 *
sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
];

664 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ
(
sm≠
);

667 i‡–
	`£¨ch
(
key
, 
nbox_t
::
t_exa˘
, 
sm≠
, 
num_¶Ÿ
, key.
	`is_NuŒ
(), &
ñ
, 
chûd
) ) {

668 
	`DBG
(<<"du∂iˇã, key=" << 
key
);

669  
	`RC
(
eDUPLICATE
);

671 
keyªc_t
::
hdr_s
 
hdr
;

672 
hdr
.
kÀn
 = 
key
.
	`kÀn
();

673 
hdr
.
ñí
 = 
ñ
.
	`size
();

674 
hdr
.
chûd
 = child;

676 
vec_t
 
vec
;

677 
vec
.
	`put
(&
hdr
, (hdr)).put(
key
.
	`kvÆ
(), key.
	`kÀn
()).put(
ñ
);

678 
	`W_DO
–
keyed_p
::
	`ö£π_ex∑nd
–
	`bm_fú°_£t
(
sm≠
, 
	`ƒecs
()+1, 0) + 1,

679 1, &
vec
) );

680  
RCOK
;

682 
	}
}

687 
rc_t


688 
	gπªe_ba£_p
::
	$ªmove
(
¶Ÿid_t
 
¶Ÿ
)

690 
	`W_DO
–
keyed_p
::
	`ªmove_com¥ess
(
¶Ÿ
 + 1, 1) );

691  
RCOK
;

692 
	}
}

699 
boﬁ


700 
	gπªe_p
::
	$_key_m©ch
(c⁄° 
nbox_t
& 
key
, 
¶Ÿ
, 
boﬁ
 
ö˛ude_nuŒs
,

701 
boﬁ
& 
biggî
) const

703 
boﬁ
 
ªsu…
 = 
Ál£
;

704 c⁄° 
πªc_t
& 
tu∂e
 = 
	`ªc
(
¶Ÿ
);

705 
nbox_t
 
box
;

707 
box
.
	`byãs2box
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

711 if(
box
.
	`is_NuŒ
()) {

712 if(
ö˛ude_nuŒs
) {

713 if(
key
.
	`is_NuŒ
()) {

715 
ªsu…
 = 
åue
;

718 
biggî
 = 
åue
;

722 
biggî
 = 
åue
;

724 } if(
key
.
	`is_NuŒ
()) {

725 if(
ö˛ude_nuŒs
) {

726 if(
box
.
	`is_NuŒ
()) {

728 
ªsu…
 = 
åue
;

733 
ªsu…
 = 
Ál£
;

735 } i‡(
box
==
key
) {

736 
ªsu…
 = 
åue
;

737 } i‡(
box
<
key
) {

738 
biggî
 = 
åue
;

740  
ªsu…
;

741 
	}
}

749 
boﬁ


750 
	gπªe_p
::
	$exa˘_m©ch
(c⁄° 
nbox_t
& 
key
, 
u_ch¨
 
sm≠
[], c⁄° 
cvec_t
& 
ñ
,

751 c⁄° 
shpid_t
 
chûd
, 
boﬁ
 
ö˛ude_nuŒs
)

753 
low
, 
high
, 
mid
;

754 
diff
;

755 
öt2_t
 
˙t
 = 
	`ƒecs
();

756 
nbox_t
 
box
;

758 
	`DBG
(<<"_exa˘_m©ch: c¡=" << 
˙t
 << " in˛ude_nuŒs=" <<
ö˛ude_nuŒs
 );

759 
	`bm_zîo
(
sm≠
, 
˙t
+1);

760 if(
key
.
	`is_NuŒ
(Ë&& !
ö˛ude_nuŒs
Ë 
Ál£
;

762 
low
=
mid
=0, 
high
=
˙t
-1;Üow<=high; ) {

763 
mid
 = (
low
 + 
high
) >> 1;

764 
boﬁ
 
keym©ch
=
Ál£
;

765 
boﬁ
 
keybiggî
=
Ál£
;

766 
keym©ch
 = 
	`_key_m©ch
(
key
, 
mid
, 
ö˛ude_nuŒs
, 
keybiggî
);

767 
	`DBG
(<<"keym©ch=" << 
keym©ch
);

768 i‡(
keym©ch
) {

769 i‡(
	`is_Àaf
()) {

770 i‡(
ñ
.
	`size
()==0) {

771 
	`DBG
(<<" mid=" << 
mid
);

772 
	`bm_£t
(
sm≠
, 
mid
);

784 
¶Ÿ
=
mid
;

785 
¶Ÿ
 < 
high
 && (
keym©ch
 =

786 
	`_key_m©ch
(
key
, ++
¶Ÿ
, 
ö˛ude_nuŒs
, 
keybiggî
))) {

787 
	`bm_£t
(
sm≠
, 
¶Ÿ
);

793 
¶Ÿ
 = 
mid
;

794 
¶Ÿ
 > 0 && (
keym©ch
 =

795 
	`_key_m©ch
(
key
, --
¶Ÿ
, 
ö˛ude_nuŒs
, 
keybiggî
))) {

796 
	`bm_£t
(
sm≠
, 
¶Ÿ
);

798  
åue
;

800 c⁄° 
πªc_t
& 
tu∂e
 = 
	`ªc
(
mid
);

801 i‡((
diff
 = 
ñ
.
	`cmp
(
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
())) > 0) {

802 
low
 = 
mid
 + 1;

803 } i‡(
diff
 < 0) {

804 
high
 = 
mid
 - 1;

806 
	`DBG
(<<" mid=" << 
mid
);

807 
	`bm_£t
(
sm≠
, 
mid
);

808  
åue
;

811 c⁄° 
πªc_t
& 
tu∂e
 = 
	`ªc
(
mid
);

812 i‡(
tu∂e
.
	`chûd
(Ë=
chûd
) {

813 
	`bm_£t
(
sm≠
, 
mid
);

814  
åue
;

816 i‡(
chûd
 > 
tu∂e
.
	`chûd
())

817 
low
 = 
mid
 + 1;

819 
high
 = 
mid
 -1;

821 } i‡(
keybiggî
) {

822 
low
 = 
mid
 + 1;

824 
high
 = 
mid
 - 1;

828 
	`bm_£t
(
sm≠
, ((
low
 > 
mid
) ?Üow : mid));

830  
Ál£
;

831 
	}
}

834 (*
	tSPATIAL_CMP_FUNC
)(c⁄° 
	tnbox_t
&, c⁄°Çbox_t&,Çbox_t::
	tsob_cmp_t
);

839 
	$sob_cmp
(c⁄° 
nbox_t
& 
key
, c⁄°Çbox_t& 
box
,Çbox_t::
sob_cmp_t
 
ty≥
)

841 
boﬁ
 
ªsu…
;

843 
ty≥
) {

844 
nbox_t
::
t_ovîœp
:

846 if(
key
.
	`is_NuŒ
(Ë|| 
box
.is_Null() ) {

847 
	`DBG
(<<"sob_cmp NullárgumentÑeturns false");

848  
Ál£
;

850 
ªsu…
 = (
box
 || 
key
);

853 
nbox_t
::
t_covî
:

855 if(
key
.
	`is_NuŒ
(Ë|| 
box
.is_Null() ) {

856 
	`DBG
(<<"sob_cmp NullárgumentÑeturns false");

857  
Ál£
;

859 
ªsu…
 = (
key
 / 
box
);

862 
nbox_t
::
t_öside
:

870 if(
box
.
	`is_NuŒ
() ) {

871 
	`DBG
(<<"sob_cmp boxÇull,Ñeturns false");

872  
Ál£
;

875 if(
key
.
	`is_NuŒ
()) {

876 
	`DBG
(<<"sob_cmpÅ_inside Null keyÑeturnsÅrue");

877  
åue
;

879 
ªsu…
 = (
box
 / 
key
);

883 
	`W_FATAL
(
fcINTERNAL
);

884 
ªsu…
 = 
Ál£
;

887 
	`DBG
(<<"sob_cm∞" << 
key
 << " , " << 
box
 << "Ñëu∫†" << 
ªsu…
);

888  
ªsu…
;

889 
	}
}

895 
	$sob_cmp_nuŒs
(c⁄° 
nbox_t
& 
key
, c⁄°Çbox_t& 
box
,Çbox_t::
sob_cmp_t
 
ty≥
)

897 
boﬁ
 
ªsu…
;

898 
ty≥
) {

899 
nbox_t
::
t_ovîœp
:

901 if(
box
.
	`is_NuŒ
(Ë|| 
key
.is_Null()) {

902 
	`DBG
(<<"");

903 
ªsu…
 = 
åue
;

905 
	`DBG
(<<"");

906 
ªsu…
 = (
box
 || 
key
);

910 
nbox_t
::
t_covî
:

912 if(
key
.
	`is_NuŒ
()) {

913 
	`DBG
(<<"");

914 
ªsu…
 = 
box
.
	`is_NuŒ
();

915 } if(
box
.
	`is_NuŒ
()) {

917 
	`DBG
(<<"");

918 
ªsu…
 = 
åue
;

920 
	`DBG
(<<"");

921 
ªsu…
 = (
key
 / 
box
);

925 
nbox_t
::
t_öside
:

927 if(
key
.
	`is_NuŒ
()) {

928 
	`DBG
(<<"");

929 
ªsu…
 = 
åue
;

930 } if(
box
.
	`is_NuŒ
()) {

932 
	`DBG
(<<"");

933 
ªsu…
 = 
key
.
	`is_NuŒ
();

935 
	`DBG
(<<"");

936 
ªsu…
 = (
box
 / 
key
);

941 
	`W_FATAL
(
fcINTERNAL
);

942 
ªsu…
 = 
Ál£
;

945 
	`DBG
(<<"sob_cmp_nuŒ†" << 
key
 << " , " << 
box
 << "Ñëu∫†" << 
ªsu…
);

946  
ªsu…
;

947 
	}
}

973 
boﬁ


974 
	gπªe_p
::
	$•©ül_§ch
(c⁄° 
nbox_t
& 
key
,Çbox_t::
sob_cmp_t
 
˘y≥
,

975 
u_ch¨
 
sm≠
[], 
¶Ÿid_t
& 
num_¶Ÿ
,

976 
boﬁ
 
ö˛ude_nuŒs
)

978 
i
;

979 
boﬁ
 
d⁄e
 = (
num_¶Ÿ
 == -1);

980 
num_¶Ÿ
 = 0;

981 
öt2_t
 
˙t
 = 
	`ƒecs
();

982 
nbox_t
 
box
;

984 
SPATIAL_CMP_FUNC
 
cmp
 = 
ö˛ude_nuŒs
 ?

985 
sob_cmp_nuŒs
 : 
sob_cmp
;

987 
	`bm_zîo
(
sm≠
, 
˙t
);

988 
i
=0; i<
˙t
; i++) {

989 c⁄° 
πªc_t
& 
tu∂e
 = 
	`ªc
(
i
);

990 
box
.
	`byãs2box
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

991 i‡((*
cmp
)(
key
, 
box
, 
˘y≥
)) {

992 
	`bm_£t
(
sm≠
, 
i
);

993 
num_¶Ÿ
++;

994 i‡(
d⁄e
) ;

998  (
num_¶Ÿ
>0);

999 
	}
}

1004 
boﬁ


1005 
	gπªe_p
::
	$quîy
(c⁄° 
nbox_t
& 
key
,Çbox_t::
sob_cmp_t
 
˘y≥
, 
u_ch¨
 
sm≠
[],

1006 
¶Ÿid_t
& 
num_¶Ÿ
,

1007 
boﬁ
 
ö˛ude_nuŒs
)

1009 
boﬁ
 
found
=
Ál£
;

1010 
	`w_as£π3
(!
	`is_Àaf
());

1011 
nbox_t
::
sob_cmp_t
 
c⁄d
 =

1012 (
˘y≥
==
nbox_t
::
t_exa˘
)?Çbox_t::
t_öside
 :Çbox_t::
t_ovîœp
;

1013 
found
 = 
	`£¨ch
(
key
, 
c⁄d
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
);

1015 
	`DBG
(<<"∑ge.quîy: key" << 
key


1016 << " in˛ude_nuŒs=" << 
ö˛ude_nuŒs


1017 << " found" << 
found


1018 << "Çum_¶Ÿ=" << 
num_¶Ÿ


1019 << " c⁄d=" << (
c⁄d
)

1021  
found
;

1022 
	}
}

1027 
boﬁ


1028 
	gπªe_p
::
	$£¨ch
(

1029 c⁄° 
nbox_t
& 
key
,

1030 
nbox_t
::
sob_cmp_t
 
˘y≥
,

1031 
u_ch¨
 
sm≠
[],

1032 
¶Ÿid_t
& 
num_¶Ÿ
,

1033 
boﬁ
 
ö˛ude_nuŒs
,

1034 c⁄° 
cvec_t
* 
ñ
,

1035 c⁄° 
shpid_t
 
chûd


1038 
boﬁ
 
found
=
Ál£
;

1039 
˘y≥
) {

1040 
nbox_t
::
t_exa˘
:

1041 if(
key
.
	`is_NuŒ
(Ë&& !
ö˛ude_nuŒs
Ë 
Ál£
;

1042 
num_¶Ÿ
 = 1;

1043 
	`DBG
(<<"setÇum_slotÅo 1");

1044 i‡(!
ñ
) {

1045 
cvec_t
 
_dummy
;

1046 
found
 = 
	`exa˘_m©ch
(
key
, 
sm≠
, 
_dummy
, 
chûd
, 
ö˛ude_nuŒs
);

1049 
found
 = 
	`exa˘_m©ch
(
key
, 
sm≠
, *
ñ
, 
chûd
, 
ö˛ude_nuŒs
);

1052 
nbox_t
::
t_ovîœp
:

1054 
nbox_t
::
t_covî
:

1055 
nbox_t
::
t_öside
:

1056 
	`DBG
(<<"num_¶Ÿ goög i¡ÿ•©ül_§c=" << 
num_¶Ÿ
);

1057 
found
 = 
	`•©ül_§ch
(
key
, 
˘y≥
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
);

1060 
found
 = 
Ál£
;

1063 
	`DBG
(<<"∑ge.£¨ch: key" << 
key
 << " in˛ude_nuŒs=" << 
ö˛ude_nuŒs


1064 << " found=" << 
found
 << "Çum_¶Ÿ=" << 
num_¶Ÿ


1066  
found
;

1067 
	}
}

1073 
rc_t


1074 
	gπªe_m
::
	$_Æloc_∑ge
(

1075 c⁄° 
Õid_t
& 
roŸ
,

1076 
öt2_t
 
Àvñ
,

1077 c⁄° 
πªe_p
& 
√¨_p
,

1078 
öt2_t
 
dim
,

1079 
Õid_t
& 
pid
)

1081 
	`w_as£π3
(
√¨_p
.
	`is_fixed
());

1082 
	`W_DO
–
io
->
	`Æloc_a_∑ge
(
roŸ
.
	`°id
(),

1083 
√¨_p
.
	`pid
(),

1084 
pid
,

1085 
åue
,

1086 
NL
,

1087 
åue


1090 
πªe_p
 
∑ge
;

1091 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
LATCH_EX
,Öage.
t_vúgö
) );

1093 
π˘æ_t
 
hdr
;

1094 
hdr
.
roŸ
 =Ñoot;

1095 
hdr
.
Àvñ
 =Üevel;

1096 
hdr
.
dim
 = dim;

1097 
	`W_DO
–
∑ge
.
	`£t_hdr
(
hdr
) );

1099  
RCOK
;

1100 
	}
}

1105 
boﬁ


1106 
	gπªe_m
::
	$is_em±y
(c⁄° 
Õid_t
& 
roŸ
)

1108 
πªe_p
 
∑ge
;

1109 
	`W_IGNORE
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

1110  (
∑ge
.
	`ƒecs
()==0);

1111 
	}
}

1116 
rc_t


1117 
	gπªe_m
::
	$_£¨ch
(

1118 c⁄° 
Õid_t
& 
roŸ
,

1119 c⁄° 
nbox_t
& 
key
,

1120 c⁄° 
cvec_t
& 
ñ
,

1121 
boﬁ
& 
found
,

1122 
π°k_t
& 
∂
,

1123 
›î_t
 
›î
,

1124 
boﬁ
 
ö˛ude_nuŒs
)

1127 
œtch_mode_t
 
œtch_m
 = (
›î
 =
t_ªad
Ë? 
LATCH_SH
 : 
LATCH_EX
;

1129 
πªe_p
 
∑ge
;

1130 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
œtch_m
) );

1134 
∂
.
	`push
(
∑ge
, -1);

1137 
	`W_DO
 ( 
	`_åavî£
(
key
, 
ñ
, 
found
, 
∂
, 
›î
, 
ö˛ude_nuŒs
) );

1139  
RCOK
;

1140 
	}
}

1145 
rc_t


1146 
	gπªe_m
::
	$_åavî£
(

1147 c⁄° 
nbox_t
& 
key
,

1148 c⁄° 
cvec_t
& 
ñ
,

1149 
boﬁ
& 
found
,

1150 
π°k_t
& 
∂
,

1151 
›î_t
 
›î
,

1152 
boﬁ
 
ö˛ude_nuŒs
)

1154 
i
;

1156 
œtch_mode_t
 
œtch_m
 = (
›î
 =
t_ªad
Ë? 
LATCH_SH
 : 
LATCH_EX
;

1158 
πªe_p
 
∑ge
;

1160 
Õid_t
 
pid
 = 
∂
.
	`t›
().
∑ge
.
	`pid
();

1161 
öt2_t
 
cou¡
 = 
∂
.
	`t›
().
∑ge
.
	`ƒecs
();

1162 
¶Ÿid_t
 
num_¶Ÿ
 = 0;

1163 
	`DBG
(<<"initÜocalÇum_slotÅo 0");

1165 
u_ch¨
 *
sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
];

1166 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ
(
sm≠
);

1168 i‡(! 
∂
.
	`t›
().
∑ge
.
	`is_Àaf
()) {

1170 
found
 = ((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`£¨ch
(
key
, 
nbox_t
::
t_öside
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
);

1171 i‡(!
found
) {

1172  
RCOK
;

1175 
fú°
 = -1;

1176 
i
=0; i<
num_¶Ÿ
; i++) {

1177 
fú°
 = 
	`bm_fú°_£t
(
sm≠
, 
cou¡
, ++first);

1178 
∂
.
	`upd©e_t›
((
öt2_t
)
fú°
);

1181 
pid
.
∑ge
 = 
∂
.
	`t›
().∑ge.
	`ªc
(
fú°
).
	`chûd
();

1182 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch_m
) );

1185 
∂
.
	`push
(
∑ge
, -1);

1186 
	`W_DO
 ( 
	`_åavî£
(
key
, 
ñ
, 
found
, 
∂
, 
›î
, 
ö˛ude_nuŒs
) );

1187 i‡(
found
Ë{  
RCOK
; }

1190 
∂
.
	`p›
();

1194 
found
 = 
Ál£
;

1195  
RCOK
;

1199 
found
 = ((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`£¨ch
(
key
, 
nbox_t
::
t_exa˘
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
, &
ñ
);

1200 i‡(
found
Ë{ 
∂
.
	`upd©e_t›
((
öt2_t
)
	`bm_fú°_£t
(
sm≠
, 
cou¡
, 0)); }

1202  
RCOK
;

1203 
	}
}

1208 
rc_t


1209 
	gπªe_m
::
	$_dfs_£¨ch
(

1210 c⁄° 
Õid_t
& 
roŸ
,

1211 c⁄° 
nbox_t
& 
key
,

1212 
boﬁ
& 
found
,

1213 
nbox_t
::
sob_cmp_t
 
˘y≥
,

1214 
·°k_t
& 
Ê
,

1215 
boﬁ
 
ö˛ude_nuŒs
)

1217 
i
;

1218 
πªe_p
 
∑ge
;

1219 
Õid_t
 
pid
 = 
roŸ
;

1221 i‡(
Ê
.
	`is_em±y
()Ë{ 
found
 = 
Ál£
;  
RCOK
; }

1224 
pid
.
∑ge
 = 
Ê
.
	`p›
();

1226 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
LATCH_SH
) );

1227 
¶Ÿid_t
 
num_¶Ÿ
 = 0;

1228 
¶Ÿid_t
 
cou¡
 = 
∑ge
.
	`ƒecs
();

1230 
u_ch¨
 *
sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
];

1231 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ
(
sm≠
);

1233 
	`DBG
(<<"_dfs_search");

1235 i‡(! 
∑ge
.
	`is_Àaf
()) {

1237 
found
 = 
∑ge
.
	`quîy
(
key
, 
˘y≥
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
);

1238 
	`DBG
(<<"∑ge.quîy: key" << 
key
 << " in˛ude_nuŒs=" << 
ö˛ude_nuŒs


1239 << " found=" << 
found
 << "Çum_¶Ÿ=" << 
num_¶Ÿ


1241 i‡(!
found
) {

1244  
RCOK
;

1247 
fú°
 = -1;

1248 
i
=0; i<
num_¶Ÿ
; i++) {

1249 
fú°
 = 
	`bm_fú°_£t
(
sm≠
, 
cou¡
, ++first);

1250 
pid
.
∑ge
 =Öage.
	`ªc
(
fú°
).
	`chûd
();

1253 
Ê
.
	`push
(
pid
.
∑ge
);

1258 
found
 = 
Ál£
;

1259 !
found
 && !
Ê
.
	`is_em±y
()) {

1260 
	`W_DO
 ( 
	`_dfs_£¨ch
(
roŸ
, 
key
, 
found
, 
˘y≥
, 
Ê
, 
ö˛ude_nuŒs
) );

1263  
RCOK
;

1269 
num_¶Ÿ
 = -1;

1270 
	`DBG
(<<"num_slot <- -1 for spatial search");

1272 
found
 = 
∑ge
.
	`£¨ch
(
key
, 
˘y≥
, 
sm≠
, 
num_¶Ÿ
, 
ö˛ude_nuŒs
);

1274 i‡(
found
Ë{ 
Ê
.
	`push
(
pid
.
∑ge
); }

1276  
RCOK
;

1277 
	}
}

1282 
rc_t


1283 
	gπªe_m
::
	$_pick_bønch
(

1284 c⁄° 
Õid_t
& 
roŸ
,

1285 c⁄° 
nbox_t
& 
key
,

1286 
π°k_t
& 
∂
,

1287 
öt2_t
 
lvl
,

1288 
›î_t
 
›î
)

1290 
¶Ÿid_t
 
¶Ÿ
 = 0;

1291 
Õid_t
 
pid
 = 
roŸ
;

1292 
πªe_p
 
∑ge
;

1294 
œtch_mode_t
 
œtch_m
 = (
›î
 =
t_ªad
Ë? 
LATCH_SH
 : 
LATCH_EX
;

1296 i‡(
∂
.
	`is_em±y
()) {

1298 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
œtch_m
) );

1299 
∂
.
	`push
(
∑ge
, -1);

1303 
∂
.
	`t›
().
∑ge
.
	`Àvñ
(Ë> 
lvl
) {

1304 ((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`pick_›timum
(
key
, 
¶Ÿ
);

1305 
∂
.
	`upd©e_t›
(
¶Ÿ
);

1308 
pid
.
∑ge
 = 
∂
.
	`t›
().∑ge.
	`ªc
(
¶Ÿ
).
	`chûd
();

1310 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
œtch_m
) );

1311 
pid
 = 
∑ge
.
	`pid
();

1312 
∂
.
	`push
(
∑ge
, -1);

1315  
RCOK
;

1316 
	}
}

1322 
rc_t


1323 
	gπªe_m
::
	$_ov_åót
(

1324 c⁄° 
Õid_t
& 
roŸ
,

1325 
π°k_t
& 
∂
,

1326 c⁄° 
nbox_t
& 
key
,

1327 
πªe_p
& 
ªt_∑ge
,

1328 
boﬁ
* 
lvl_•lô
)

1331 
i
;

1332 
πªe_p
 
∑ge
 = 
∂
.
	`t›
().page;

1333 
öt2_t
 
Àvñ
 = 
∑ge
.
	`Àvñ
();

1334 
	`w_as£π3
(
∑ge
.
	`pid
()!=
roŸ
 && !
lvl_•lô
[
Àvñ
]);

1337 c⁄° 
πªc_t
& 
tu∂e
 = 
∂
.
	`£c⁄d
().
∑ge
.
	`ªc
’l.£c⁄d().
idx
);

1338 
nbox_t
 
	`bound
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

1341 
πw‹k_p
 
	`w‹k_∑ge
(
∑ge
.
	`pid
(),Öage.
	`Àvñ
(),Öage.
	`dim
());

1343 
	`W_DO
–
∑ge
.
	`ov_ªmove
(
w‹k_∑ge
.
	`Ω
(), 
key
, 
bound
) );

1344 
	`W_DO
–
	`_¥›ag©e_ªmove
(
∂
, 
Ál£
) );

1345 
lvl_•lô
[
Àvñ
] = 
åue
;

1347 
∂
.
	`dr›_Æl_but_œ°
();

1348 
i
=0; i<
w‹k_∑ge
.
	`Ω
()->
	`ƒecs
(); i++) {

1350 
	`W_DO
 ( 
	`_ªö£π
(
roŸ
, 
w‹k_∑ge
.
	`Ω
()->
	`ªc
(
i
), 
∂
, 
Àvñ
, 
lvl_•lô
) );

1351 
∂
.
	`dr›_Æl_but_œ°
();

1355 
	`W_DO
–
	`_pick_bønch
(
roŸ
, 
key
, 
∂
, 
Àvñ
, 
t_ö£π
) );

1356 
ªt_∑ge
 = 
∂
.
	`t›
().
∑ge
;

1357 
	`w_as£π3
(
ªt_∑ge
.
	`Àvñ
()==
Àvñ
);

1359  
RCOK
;

1360 
	}
}

1362 
swìp_n_•lô
(
axis
, 
wrk_bønch_t
 
w‹k
[], 
u_ch¨
 
sm≠
[],

1363 & 
m¨gö
, 
max_num
, 
mö_num
, 
nbox_t
* 
exåa
=
NULL
);

1368 
rc_t


1369 
	gπªe_m
::
	$_•lô_∑ge
(

1370 c⁄° 
Õid_t
& 
roŸ
,

1371 
π°k_t
& 
∂
,

1372 c⁄° 
nbox_t
& 
key
,

1373 
πªe_p
& 
ªt_∑ge
,

1374 
boﬁ
* 
lvl_•lô
)

1376 
i
;

1377 
πªe_p
 
	`∑ge
(
∂
.
	`p›
().
∑ge
);

1378 
öt2_t
 
cou¡
 = 
∑ge
.
	`ƒecs
();

1380 
wrk_bønch_t
* 
w‹k
 = 
√w
 wrk_bønch_t[
cou¡
+1];

1381 i‡(!
w‹k
Ë 
	`RC
(
eOUTOFMEMORY
);

1382 #i‡
ZERO_INIT


1383 
	`mem£t
(
w‹k
, '\0', (
wrk_bønch_t
Ë* (
cou¡
 +1) );

1385 
w_auto_dñëe_¨øy_t
<
wrk_bønch_t
> 
	`auto_dñ_w‹k
(
w‹k
);

1388 
i
=0; i<
cou¡
; i++) {

1389 c⁄° 
πªc_t
& 
tu∂e
 = 
∑ge
.
	`ªc
(
i
);

1390 
w‹k
[
i
].
ª˘
.
	`byãs2box
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

1391 
w‹k
[
i
].
¨ó
 = 0.0;

1392 
w‹k
[
i
].
idx
 = i;

1394 
w‹k
[
cou¡
].
¨ó
 = 0.0;

1395 
w‹k
[
cou¡
].
idx
 = count;

1396 
w‹k
[
cou¡
].
ª˘
 = 
key
;

1398 
mö_m¨gö
 = 
max_öt4
, 
m¨gö
;

1400 
u_ch¨
 *
ßve_sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
];

1401 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ_ßve
(
ßve_sm≠
);

1403 
u_ch¨
 *
sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
];

1404 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ
(
sm≠
);

1407 
i
=0; i<
key
.
	`dimísi⁄
(); i++) {

1408 
	`swìp_n_•lô
(
i
, 
w‹k
, 
sm≠
, 
m¨gö
, 
cou¡
+1,

1409 (
öt2_t
Ë(
cou¡
*
MIN_RATIO
));

1410 i‡(
m¨gö
 < 
mö_m¨gö
) {

1411 
mö_m¨gö
 = 
m¨gö
;

1412 
byãs_of_bôs_to_c›y
 = 
cou¡
/8 + 1;

1413 
	`mem˝y
(
ßve_sm≠
, 
sm≠
, 
byãs_of_bôs_to_c›y
);

1418 
Õid_t
 
siblög
;

1419 
	`W_DO
–
	`_Æloc_∑ge
(
roŸ
, 
∑ge
.
	`Àvñ
(),Öage,Öage.
	`dim
(), 
siblög
) );

1421 
πªe_p
 
siblög_p
;

1422 
	`W_DO
–
siblög_p
.
	`fix
(
siblög
, 
LATCH_EX
) );

1425 
i
=
cou¡
-1; i>=0; i--) {

1426 i‡(
	`bm_is_£t
(
ßve_sm≠
, 
i
)) {

1428 
	`W_DO
–
siblög_p
.
	`ö£π
(
∑ge
.
	`ªc
(
i
)) );

1429 
	`W_DO
–
∑ge
.
	`ªmove
(
i
) );

1434 
nbox_t
 
	`siblög_bound
(
∑ge
.
	`dim
()),

1435 
	`∑ge_bound
(
∑ge
.
	`dim
());

1436 
	`W_DO
–
∑ge
.
	`ˇlc_bound
(
∑ge_bound
) );

1437 
	`W_DO
–
siblög_p
.
	`ˇlc_bound
(
siblög_bound
) );

1438 i‡(
	`bm_is_£t
(
ßve_sm≠
, 
cou¡
)) {

1439 
ªt_∑ge
 = 
siblög_p
;

1440 if(!
key
.
	`is_NuŒ
()) {

1441 
siblög_bound
 +
key
;

1444 
ªt_∑ge
 = 
∑ge
;

1445 if(!
key
.
	`is_NuŒ
()) {

1446 
∑ge_bound
 +
key
;

1451 i‡(
∑ge
.
	`pid
(Ë=
roŸ
) {

1454 
Õid_t
 
du∂iˇã
;

1455 
	`W_DO
–
	`_Æloc_∑ge
(
roŸ
, 
∑ge
.
	`Àvñ
(),Öage,Öage.
	`dim
(), 
du∂iˇã
) );

1457 
πªe_p
 
du∂iˇã_p
;

1458 
	`W_DO
–
du∂iˇã_p
.
	`fix
(
du∂iˇã
, 
LATCH_EX
) );

1461 
	`W_DO
–
∑ge
.
	`shi·
(0, &
du∂iˇã_p
) );

1462 
	`W_DO
–
∑ge
.
	`£t_Àvñ
’age.
	`Àvñ
()+1) );

1465 
vec_t
 
	`ñ
((*)&
siblög
, 0);

1466 
	`W_DO
–
∑ge
.
	`ö£π
(
siblög_bound
, 
ñ
, 
siblög
.page) );

1467 
	`W_DO
–
∑ge
.
	`ö£π
(
∑ge_bound
, 
ñ
, 
du∂iˇã
.page) );

1469 
∂
.
	`push
(
∑ge
, -1);

1472 i‡(
siblög_p
.
	`pid
(Ë!
ªt_∑ge
.pid()) {

1473 
ªt_∑ge
 = 
du∂iˇã_p
;

1480 
πªe_p
 
	`∑ª¡
(
∂
.
	`t›
().
∑ge
);

1481 
ödex
 = 
∂
.
	`t›
().
idx
;

1485 c⁄° 
πªc_t
& 
tu∂e
 = 
∑ª¡
.
	`ªc
(
ödex
);

1486 
nbox_t
 
	`ﬁd_bound
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

1487 
vec_t
 
	`ñ
((c⁄° *Ë
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
());

1488 
shpid_t
 
chûd
 = 
tu∂e
.
	`chûd
();

1490 
	`W_DO
–
∑ª¡
.
	`ªmove
(
ödex
) );

1491 
	`W_DO
–
∑ª¡
.
	`ö£π
(
∑ge_bound
, 
ñ
, 
chûd
) );

1494 i‡(
siblög_p
.
	`pid
(Ë!
ªt_∑ge
.pid()) {

1501 
	`W_DO
–
	`_√w_node
(
roŸ
, 
∂
, 
siblög_bound
, 
siblög_p
, 
lvl_•lô
) );

1504  
RCOK
;

1505 
	}
}

1510 
rc_t


1511 
	gπªe_m
::
	$_√w_node
(

1512 c⁄° 
Õid_t
& 
roŸ
,

1513 
π°k_t
& 
∂
,

1514 c⁄° 
nbox_t
& 
key
,

1515 
πªe_p
& 
subåì
,

1516 
boﬁ
* 
lvl_•lô
)

1518 
πªe_p
 
	`∑ge
(
∂
.
	`t›
().
∑ge
);

1519 
vec_t
 
	`ñ
((c⁄° *Ë&
subåì
.
	`pid
().
∑ge
, 0);

1520 
boﬁ
 
MAYBE_UNUSED
 
•lô
 = 
Ál£
;

1522 
rc_t
 
rc
 = 
∑ge
.
	`ö£π
(
key
, 
ñ
, 
subåì
.
	`pid
().page);

1523 i‡(
rc
.
	`is_îr‹
()) {

1524 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
Ë 
	`RC_AUGMENT
(rc);

1527 i‡(
∑ge
.
	`pid
()!=
roŸ
 && !
lvl_•lô
[∑ge.
	`Àvñ
()]) {

1528 
	`W_DO
 ( 
	`_ov_åót
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1530 
	`W_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1531 
•lô
 = 
åue
;

1535 
rc
 = 
∑ge
.
	`ö£π
(
key
, 
ñ
, 
subåì
.
	`pid
().page);

1536 i‡(
rc
.
	`is_îr‹
()) {

1537 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
Ë 
	`RC_AUGMENT
(rc);

1538 
	`w_as£π1
(! 
•lô
);

1539 
	`W_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1540 
	`W_DO
–
∑ge
.
	`ö£π
(
key
, 
ñ
, 
subåì
.
	`pid
().page) );

1541 
•lô
 = 
åue
;

1545 i‡(
∑ge
.
	`pid
(Ë!
roŸ
) {

1547 
	`W_DO
 ( 
	`_¥›ag©e_ö£π
(
∂
, 
Ál£
) );

1552  
RCOK
;

1553 
	}
}

1558 
rc_t


1559 
	gπªe_m
::
	$__¥›ag©e_ö£π
(

1560 
x˘_t
* ,

1561 
π°k_t
& 
∂


1564 
nbox_t
 
	`chûd_bound
(
∂
.
	`t›
().
∑ge
.
	`dim
());

1566 
i
=
∂
.
	`size
()-1; i>0; i--) {

1568 
	`W_DO
–((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`ˇlc_bound
(
chûd_bound
) );

1570 
∂
.
	`p›
();

1573 
öt2_t
 
ödex
 = 
∂
.
	`t›
().
idx
;

1574 c⁄° 
πªc_t
& 
tu∂e
 = 
∂
.
	`t›
().
∑ge
.
	`ªc
(
ödex
);

1575 
nbox_t
 
	`ﬁd_bound
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

1581 if(
chûd_bound
.
	`is_NuŒ
()) ;

1582 i‡–
ﬁd_bound
.
	`is_NuŒ
() ) {

1583 
ﬁd_bound
 = 
chûd_bound
;

1585 i‡(
ﬁd_bound
 =
chûd_bound
) ;

1586 i‡(
ﬁd_bound
 / 
chûd_bound
) ;

1587 
ﬁd_bound
 +
chûd_bound
;

1591 
vec_t
 
	`ñ
((c⁄° *Ë
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
());

1592 
shpid_t
 
chûd
 = 
tu∂e
.
	`chûd
();

1593 
	`W_DO
–
∂
.
	`t›
().
∑ge
.
	`ªmove
(
ödex
) );

1594 
	`W_DO
–((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`ö£π
(
ﬁd_bound
, 
ñ
, 
chûd
) );

1597  
RCOK
;

1598 
	}
}

1600 
rc_t


1601 
	gπªe_m
::
	$_¥›ag©e_ö£π
(

1602 
π°k_t
& 
∂
,

1603 
boﬁ
 
com≥nßã
)

1605 
l¢_t
 
™ch‹
;

1606 
x˘_t
* 
xd
 = 
	`x˘
();

1607 
	`w_as£π3
(
xd
);

1608 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

1609 i‡(
xd
 && 
com≥nßã
) {

1610 
™ch‹
 = 
xd
->
	`™ch‹
();

1611 
	`X_DO
(
	`__¥›ag©e_ö£π
(
xd
, 
∂
), 
™ch‹
);

1612 
	`SSMTEST
("rtree.1");

1613 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("rtree.1"));

1615 
	`W_DO
(
	`__¥›ag©e_ö£π
(
xd
, 
∂
));

1618  
RCOK
;

1619 
	}
}

1624 
rc_t


1625 
	gπªe_m
::
	$__¥›ag©e_ªmove
(

1626 
x˘_t
* ,

1627 
π°k_t
& 
∂


1630 
nbox_t
 
	`chûd_bound
(
∂
.
	`t›
().
∑ge
.
	`dim
());

1632 
i
=
∂
.
	`size
()-1; i>0; i--) {

1634 
	`W_DO
–((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`ˇlc_bound
(
chûd_bound
) );

1636 
∂
.
	`p›
();

1639 
öt2_t
 
ödex
 = 
∂
.
	`t›
().
idx
;

1640 c⁄° 
πªc_t
& 
tu∂e
 = 
∂
.
	`t›
().
∑ge
.
	`ªc
(
ödex
);

1641 
nbox_t
 
	`key
(
tu∂e
.key(),Åu∂e.
	`kÀn
());

1642 i‡(
key
==
chûd_bound
) { ; }

1645 
vec_t
 
	`ñ
((c⁄° *Ë
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
());

1646 
shpid_t
 
chûd
 = 
tu∂e
.
	`chûd
();

1647 
	`W_DO
–
∂
.
	`t›
().
∑ge
.
	`ªmove
(
ödex
) );

1648 
	`W_DO
–((
πªe_p
)
∂
.
	`t›
().
∑ge
).
	`ö£π
(
chûd_bound
, 
ñ
, 
chûd
));

1650  
RCOK
;

1651 
	}
}

1653 
rc_t


1654 
	gπªe_m
::
	$_¥›ag©e_ªmove
(

1655 
π°k_t
& 
∂
,

1656 
boﬁ
 
com≥nßã
)

1658 
l¢_t
 
™ch‹
;

1659 
x˘_t
* 
xd
 = 
	`x˘
();

1660 
	`w_as£π3
(
xd
);

1661 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

1662 i‡(
xd
 && 
com≥nßã
) {

1663 
™ch‹
 = 
xd
->
	`™ch‹
();

1664 
	`X_DO
(
	`__¥›ag©e_ªmove
(
xd
,
∂
), 
™ch‹
);

1665 
	`SSMTEST
("rtree.2");

1666 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("rtree.2"));

1668 
	`W_DO
(
	`__¥›ag©e_ªmove
(
xd
,
∂
));

1671  
RCOK
;

1672 
	}
}

1677 
rc_t


1678 
	gπªe_m
::
	$_ªö£π
(

1679 c⁄° 
Õid_t
& 
roŸ
,

1680 c⁄° 
πªc_t
& 
tu∂e
,

1681 
π°k_t
& 
∂
,

1682 
öt2_t
 
Àvñ
,

1683 
boﬁ
* 
lvl_•lô
)

1685 
nbox_t
 
	`key
(
tu∂e
.key(),Åu∂e.
	`kÀn
());

1686 
vec_t
 
	`ñ
((c⁄° *Ë
tu∂e
.
	`ñem
(),Åu∂e.
	`ñí
());

1687 
shpid_t
 
chûd
 = 
tu∂e
.
	`chûd
();

1688 
boﬁ
 
•lô
 = 
Ál£
;

1690 
	`W_DO
–
	`_pick_bønch
(
roŸ
, 
key
, 
∂
, 
Àvñ
, 
t_ö£π
) );

1692 
πªe_p
 
	`∑ge
(
∂
.
	`t›
().
∑ge
);

1693 
	`w_as£π3
(
∑ge
.
	`Àvñ
()==
Àvñ
);

1695 
rc_t
 
rc
 = 
∑ge
.
	`ö£π
(
key
, 
ñ
, 
chûd
);

1696 i‡(
rc
.
	`is_îr‹
()) {

1697 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
Ë 
	`RC_AUGMENT
(rc);

1700 
•lô
 = 
Ál£
;

1701 i‡(
∑ge
.
	`pid
()!=
roŸ
 && !
lvl_•lô
[
Àvñ
]) {

1702 
	`W_DO
 ( 
	`_ov_åót
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1704 
	`W_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1705 
•lô
 = 
åue
;

1707 
rc
 = 
∑ge
.
	`ö£π
(
key
, 
ñ
, 
chûd
);

1708 i‡(
rc
.
	`is_îr‹
()) {

1709 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
Ë 
	`RC_AUGMENT
(rc);

1710 
	`w_as£π1
(! 
•lô
);

1711 
	`W_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
∑ge
, 
lvl_•lô
) );

1712 
	`W_DO
–
∑ge
.
	`ö£π
(
key
, 
ñ
, 
chûd
) );

1713 
•lô
 = 
åue
;

1718 i‡(!
•lô
 && 
∑ge
.
	`pid
()!=
roŸ
) {

1719 
	`W_DO
–
	`_¥›ag©e_ö£π
(
∂
, 
Ál£
) );

1724  
RCOK
;

1725 
	}
}

1730 
rc_t


1731 
	gπªe_m
::
	$¸óã
(

1732 
°id_t
 
°id
,

1733 
Õid_t
& 
roŸ
,

1734 
öt2_t
 
dim
)

1736 
l¢_t
 
™ch‹
;

1737 
x˘_t
* 
xd
 = 
	`x˘
();

1738 
	`w_as£π3
(
xd
);

1739 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

1740 
™ch‹
 = 
xd
->
	`™ch‹
();

1742 
	`X_DO
–
io
->
	`Æloc_a_∑ge
(
°id
,

1743 
Õid_t
::
eof
,

1744 
roŸ
,

1745 
åue
,

1746 
NL
,

1747 
åue


1748 ), 
™ch‹
 );

1750 
πªe_p
 
∑ge
;

1751 
	`X_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_EX
,Öage.
t_vúgö
), 
™ch‹
 );

1753 
π˘æ_t
 
hdr
;

1754 
hdr
.
roŸ
 =Ñoot;

1755 
hdr
.
Àvñ
 = 1;

1756 
hdr
.
dim
 = dim;

1757 
	`X_DO
–
∑ge
.
	`£t_hdr
(
hdr
), 
™ch‹
 );

1759 
	`SSMTEST
("rtree.3");

1760 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("rtree.3"));

1762  
RCOK
;

1763 
	}
}

1770 
rc_t


1771 
	gπªe_m
::
	$lookup
(

1772 c⁄° 
Õid_t
& 
roŸ
,

1773 c⁄° 
nbox_t
& 
key
,

1774 * 
ñ
,

1775 
smsize_t
& 
ñí
,

1776 
boﬁ
& 
found
 )

1778 
vec_t
 
ñvec
;

1779 
π°k_t
 
∂
;

1782 
	`W_DO
 ( 
	`_£¨ch
(
roŸ
, 
key
, 
ñvec
, 
found
, 
∂
, 
t_ªad
, key.
	`is_NuŒ
()) );

1784 i‡(
found
) {

1785 c⁄° 
πªc_t
& 
tu∂e
 = 
∂
.
	`t›
().
∑ge
.
	`ªc
’l.t›().
idx
);

1786 i‡(
ñí
 < 
tu∂e
.
	`ñí
()Ë 
	`RC
(
eRECWONTFIT
);

1787 
	`DBG
(<<"tu∂e.ñí==" <<
tu∂e
.
	`ñí
());

1788 
	`mem˝y
(
ñ
, 
tu∂e
.
	`ñem
(), 
ñí
 =Åu∂e.
	`ñí
());

1790 
	`DBG
(<<"KeyÇŸ found: " << 
key
 );

1793  
RCOK
;

1794 
	}
}

1799 
rc_t


1800 
	gπªe_m
::
	$ö£π
(

1801 c⁄° 
Õid_t
& 
roŸ
,

1802 c⁄° 
nbox_t
& 
key
,

1803 c⁄° 
cvec_t
& 
ñem
)

1806 
π°k_t
 
∂
;

1807 
boﬁ
 
found
 = 
Ál£
, 
•lô
 = false;

1810 
	`W_DO
–
	`_£¨ch
(
roŸ
, 
key
, 
ñem
, 
found
, 
∂
, 
t_ö£π
, key.
	`is_NuŒ
()) );

1811 i‡(
found
) {

1812 
	`DBG
(<<"du∂iˇã, key=" << 
key
);

1813  
	`RC
(
eDUPLICATE
);

1817 
∂
.
	`dr›_Æl_but_œ°
();

1818 
	`W_DO
–
	`_pick_bønch
(
roŸ
, 
key
, 
∂
, 1, 
t_ö£π
) );

1820 
πªe_p
 
	`Àaf
(
∂
.
	`t›
().
∑ge
);

1821 
	`w_as£π3
(
Àaf
.
	`is_Àaf
());

1823 
rc_t
 
rc
;

1828 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

1829 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñem
);

1832 i‡(
rc
.
	`is_îr‹
()) {

1833 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
)

1834  
	`RC_AUGMENT
(
rc
);

1836 
l¢_t
 
™ch‹
;

1837 
x˘_t
* 
xd
 = 
	`x˘
();

1838 
	`w_as£π3
(
xd
);

1839 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

1840 if(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

1843 
boﬁ
 
lvl_•lô
[
π°k_t
::
max_π°k_sz
];

1844 
i
=0; i<
π°k_t
::
max_π°k_sz
; i++Ë
lvl_•lô
[i] = 
Ál£
;

1845 i‡(
Àaf
.
	`pid
()!=
roŸ
) {

1846 
	`X_DO
 ( 
	`_ov_åót
(
roŸ
, 
∂
, 
key
, 
Àaf
, 
lvl_•lô
), 
™ch‹
 );

1848 
	`X_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
Àaf
, 
lvl_•lô
), 
™ch‹
 );

1849 
•lô
 = 
åue
;

1856 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

1857 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñem
);

1859 i‡–
rc
.
	`is_îr‹
() ) {

1860 i‡(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
Ë 
	`RC_AUGMENT
(rc);

1861 
	`w_as£π1
(! 
•lô
);

1863 
	`X_DO
–
	`_•lô_∑ge
(
roŸ
, 
∂
, 
key
, 
Àaf
, 
lvl_•lô
), 
™ch‹
 );

1865 
•lô
 = 
åue
;

1870 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

1871 
rc
 = 
Àaf
.
	`ö£π
(
key
, 
ñem
);

1872 i‡–
rc
.
	`is_îr‹
() ) {

1873 
	`w_as£π1
(
rc
.
	`îr_num
(Ë!
eRECWONTFIT
);

1874 
xd
->
	`ªÀa£_™ch‹
(
åue
 
	`LOG_COMMENT_USE
("rtree1"));

1875  
	`RC_AUGMENT
(
rc
);

1879 i‡(
xd
) {

1880 
	`SSMTEST
("rtree.4");

1881 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("rtree.4"));

1886 i‡(!
•lô
 && 
Àaf
.
	`pid
()!=
roŸ
) {

1887 
	`W_DO
–
	`_¥›ag©e_ö£π
(
∂
) );

1891 
	`W_DO
–
	`log_πªe_ö£π
(
Àaf
, 0, 
key
, 
ñem
) );

1893  
RCOK
;

1894 
	}
}

1899 
rc_t


1900 
	gπªe_m
::
	$ªmove
(

1901 c⁄° 
Õid_t
& 
roŸ
,

1902 c⁄° 
nbox_t
& 
key
,

1903 c⁄° 
cvec_t
& 
ñem
)

1905 
π°k_t
 
∂
;

1906 
boﬁ
 
found
 = 
Ál£
;

1908 
	`W_DO
–
	`_£¨ch
(
roŸ
, 
key
, 
ñem
, 
found
, 
∂
, 
t_ªmove
, key.
	`is_NuŒ
()) );

1909 i‡(! 
found
)

1910  
	`RC
(
eNOTFOUND
);

1912 
πªe_p
 
	`Àaf
(
∂
.
	`t›
().
∑ge
);

1913 
¶Ÿid_t
 
¶Ÿ
 = 
∂
.
	`t›
().
idx
;

1914 
	`w_as£π3
(
Àaf
.
	`is_Àaf
());

1920 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

1921 
	`W_DO
–
Àaf
.
	`ªmove
(
¶Ÿ
) );

1927 
	`W_DO
–
	`log_πªe_ªmove
(
Àaf
, 
¶Ÿ
, 
key
, 
ñem
) );

1929  
RCOK
;

1930 
	}
}

1935 
rc_t


1936 
	gπªe_m
::
	$¥öt
(c⁄° 
Õid_t
& 
roŸ
)

1938 
πªe_p
 
∑ge
;

1939 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) ) ;

1941 i‡(
roŸ
.
∑ge
 =∑ge.
	`roŸ
()) {

1943 
nbox_t
 
	`bound
(
∑ge
.
	`dim
());

1944 
	`W_DO
(
∑ge
.
	`ˇlc_bound
(
bound
));

1945 
cout
 << "Universe:\n";

1946 
bound
.
	`¥öt
(
cout
, 5);

1949 
i
;

1950 
i
 = 0; i < 5 - 
∑ge
.
	`Àvñ
(); i++Ë{ 
cout
 << "\t"; }

1951 
cout
 << "LEVEL " << 
∑ge
.
	`Àvñ
() << ",Öage "

1952 << 
∑ge
.
	`pid
().page << ":\n";

1953 
∑ge
.
	`¥öt
();

1955 
Õid_t
 
sub_åì
 = 
∑ge
.
	`pid
();

1956 i‡(
∑ge
.
	`Àvñ
() != 1) {

1957 
i
 = 0; i < 
∑ge
.
	`ƒecs
(); i++) {

1958 
sub_åì
.
∑ge
 =Öage.
	`ªc
(
i
).
	`chûd
();

1959 
	`W_DO
–
	`¥öt
(
sub_åì
) );

1962  
RCOK
;

1963 
	}
}

1965 #ifde‡
UNDEF


1969 
rc_t


1970 
	gπªe_m
::
	$¥öt
(c⁄° 
Õid_t
& 
roŸ
)

1972 
πªe_p
 
∑ge
;

1973 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

1975 i‡(
∑ge
.
	`Àvñ
() == 1) {

1976 
nbox_t
 
	`bound
(
∑ge
.
	`dim
());

1977 
	`W_DO
(
∑ge
.
	`ˇlc_bound
(
bound
));

1978 
cout
 << 
ídl
;

1979 
cout
 << 
∑ge
.
	`ƒecs
(Ë<< 
ídl
;

1980 
cout
 << 
bound
.
	`bound
(0Ë<< " " << bound.bound(1Ë<< 
ídl
;

1981 
cout
 << 
bound
.
	`bound
(0Ë<< " " << bound.bound(3Ë<< 
ídl
;

1982 
cout
 << 
bound
.
	`bound
(2Ë<< " " << bound.bound(3Ë<< 
ídl
;

1983 
cout
 << 
bound
.
	`bound
(2Ë<< " " << bound.bound(1Ë<< 
ídl
;

1984 
cout
 << 
ídl
;

1986 
Õid_t
 
sub_åì
 = 
∑ge
.
	`pid
();

1987 
i
 = 0; i < 
∑ge
.
	`ƒecs
(); i++) {

1988 
sub_åì
.
∑ge
 =Öage.
	`ªc
(
i
).
	`chûd
();

1989 
	`W_DO
–
	`¥öt
(
sub_åì
) );

1992  
RCOK
;

1993 
	}
}

1999 
rc_t


2000 
	gπªe_m
::
	$døw
(

2001 c⁄° 
Õid_t
& 
roŸ
,

2002 
o°ªam
 &
DøwFûe
,

2003 
boﬁ
 
skù
)

2005 
πªe_p
 
∑ge
;

2006 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

2008 
nbox_t
 
	`rbound
(
∑ge
.
	`dim
());

2009 
	`W_DO
(
∑ge
.
	`ˇlc_bound
(
rbound
));

2011 
nbox_t
 
CovîAŒ
 = 
rbound
;

2013 
	`W_FORM
(
DøwFûe
)("sungremlinfile\n");

2014 
	`W_FORM
(
DøwFûe
)("0 0.00 0.00\n");

2016 
CovîAŒ
.
	`døw
(
∑ge
.
	`Àvñ
()+1, 
DøwFûe
, CoverAll);

2017 
	`W_DO
 ( 
	`_døw
(
roŸ
, 
DøwFûe
, 
CovîAŒ
, 
skù
) );

2019 
	`W_FORM
(
DøwFûe
)("-1");

2021  
RCOK
;

2022 
	}
}

2024 
rc_t


2025 
	gπªe_m
::
	$_døw
(

2026 c⁄° 
Õid_t
& 
pid
,

2027 
o°ªam
 &
DøwFûe
,

2028 
nbox_t
 &
CovîAŒ
,

2029 
boﬁ
 
skù
)

2031 
πªe_p
 
∑ge
;

2032 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
LATCH_SH
) );

2034 i‡(!
skù
 || 
∑ge
.
	`is_Àaf
()Ë∑ge.
	`døw
(
DøwFûe
, 
CovîAŒ
);

2036 
Õid_t
 
sub_åì
 = 
∑ge
.
	`pid
();

2037 i‡(
∑ge
.
	`Àvñ
() != 1) {

2038 
i
 = 0; i < 
∑ge
.
	`ƒecs
(); i++) {

2039 
sub_åì
.
∑ge
 =Öage.
	`ªc
(
i
).
	`chûd
();

2040 
	`W_DO
–
	`_døw
(
sub_åì
, 
DøwFûe
, 
CovîAŒ
, 
skù
) );

2044  
RCOK
;

2045 
	}
}

2051 
rc_t


2052 
	gπªe_m
::
	$°©s
(

2053 c⁄° 
Õid_t
& 
roŸ
,

2054 
πªe_°©s_t
& 
°©
,

2055 
uöt2_t
 
size
,

2056 
uöt2_t
* 
ovp
,

2057 
boﬁ
 
audô
)

2059 
πªe_p
 
∑ge
;

2060 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

2061 
ba£_°©_t
 
ovp_sum
 = 0, 
fûl_sum
 = 0;

2062 
ba£_°©_t
 
num_∑ges_°‹e_sˇn
 = 0;

2064 
°©
.
	`˛ór
();

2069 
Õid_t
 
pid
;

2070 
boﬁ
 
Æloˇãd
;

2071 
rc_t
 
rc
;

2072 
rc
 = 
io
->
	`fú°_∑ge
(
roŸ
.
	`°id
(), 
pid
, &
Æloˇãd
);

2073 !
rc
.
	`is_îr‹
()) {

2074 i‡(
Æloˇãd
) {

2075 
num_∑ges_°‹e_sˇn
++;

2077 
°©
.
u«Œoc_pg_˙t
++;

2079 
rc
 = 
io
->
	`√xt_∑ge
(
pid
, &
Æloˇãd
);

2081 
	`w_as£π3
(
rc
.
	`is_îr‹
());

2082 i‡(
rc
.
	`îr_num
(Ë!
eEOF
) Ñc;

2085 
°©
.
Àvñ_˙t
 = 
∑ge
.
	`Àvñ
();

2087 i‡(
size
>0 && 
ovp
) {

2088 
ovp
[0] = 
∑ge
.
	`ovp
();

2091 
Õid_t
 
sub_åì
 = 
∑ge
.
	`pid
();

2092 i‡(
∑ge
.
	`Àvñ
() != 1) {

2093 
i
 = 0; i < 
∑ge
.
	`ƒecs
(); i++) {

2094 
sub_åì
.
∑ge
 =Öage.
	`ªc
(
i
).
	`chûd
();

2095 
	`W_DO
–
	`_°©s
(
sub_åì
, 
°©
, 
fûl_sum
, 
size
, 
ovp
) );

2096 i‡(
size
>0 && 
ovp
) {

2097 i‡(
°©
.
Àvñ_˙t
 + 1 - 
∑ge
.
	`Àvñ
(Ë< 
size
) {

2098 
ovp_sum
 +
ovp
[
°©
.
Àvñ_˙t
 - 
∑ge
.
	`Àvñ
() + 1];

2102 i‡(
size
>0 && 
ovp
) {

2103 i‡(
°©
.
Àvñ_˙t
 + 1 - 
∑ge
.
	`Àvñ
(Ë< 
size
) {

2104 
ovp_sum
 /
∑ge
.
	`ƒecs
();

2107 
°©
.
öt_pg_˙t
++;

2108 
°©
.
fûl_≥r˚¡
 = (
uöt2_t
Ë(
fûl_sum
/°©.
Àaf_pg_˙t
);

2110 
°©
.
Àaf_pg_˙t
 = 1;

2111 
°©
.
fûl_≥r˚¡
 = (
∑ge
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2112 
°©
.
íåy_˙t
 = 
∑ge
.
	`ƒecs
();

2115 i‡(
audô
 && 
num_∑ges_°‹e_sˇn
 !(
°©
.
Àaf_pg_˙t
+°©.
öt_pg_˙t
)) {

2117  
	`RC
(
fcINTERNAL
);

2120 
°©
.
unique_˙t
 = sèt.
íåy_˙t
;

2122  
RCOK
;

2123 
	}
}

2125 
rc_t


2126 
	gπªe_m
::
	$_°©s
(

2127 c⁄° 
Õid_t
& 
roŸ
,

2128 
πªe_°©s_t
& 
°©
,

2129 
ba£_°©_t
& 
fûl_sum
,

2130 
uöt2_t
 
size
,

2131 
uöt2_t
* 
ovp
)

2133 
πªe_p
 
∑ge
;

2134 
	`W_DO
–
∑ge
.
	`fix
(
roŸ
, 
LATCH_SH
) );

2135 
uöt
 
ovp_sum
 = 0;

2137 i‡(
ovp
 && (
°©
.
Àvñ_˙t
-
∑ge
.
	`Àvñ
()<
size
)) {

2138 
ovp
[
°©
.
Àvñ_˙t
 - 
∑ge
.
	`Àvñ
()] =Öage.
	`ovp
();

2141 
Õid_t
 
sub_åì
 = 
∑ge
.
	`pid
();

2142 i‡(
∑ge
.
	`Àvñ
() != 1) {

2143 
i
 = 0; i < 
∑ge
.
	`ƒecs
(); i++) {

2144 
sub_åì
.
∑ge
 =Öage.
	`ªc
(
i
).
	`chûd
();

2145 
	`W_DO
–
	`_°©s
(
sub_åì
, 
°©
, 
fûl_sum
, 
size
, 
ovp
) );

2146 i‡(
ovp
 && (
°©
.
Àvñ_˙t
+1-
∑ge
.
	`Àvñ
(Ë< 
size
)) {

2147 
ovp_sum
 +
ovp
[
°©
.
Àvñ_˙t
 - 
∑ge
.
	`Àvñ
() + 1];

2150 i‡(
ovp
 && (
°©
.
Àvñ_˙t
+1-
∑ge
.
	`Àvñ
()<
size
)) {

2151 
ovp_sum
 /
∑ge
.
	`ƒecs
();

2153 
°©
.
öt_pg_˙t
++;

2155 
°©
.
Àaf_pg_˙t
 += 1;

2156 
fûl_sum
 +((
uöt4_t
)
∑ge
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2157 
°©
.
íåy_˙t
 +
∑ge
.
	`ƒecs
();

2160  
RCOK
;

2161 
	}
}

2167 
rc_t


2168 
	gπªe_m
::
	$„tch_öô
(

2169 c⁄° 
Õid_t
& 
roŸ
,

2170 
π_curs‹_t
& 
curs‹
)

2172 
boﬁ
 
found
 = 
Ál£
;

2173 
Õid_t
 
pid
 = 
roŸ
;

2176 i‡(! 
curs‹
.
Ê
.
	`is_em±y
(ËË{ curs‹.Ê.
	`em±y_Æl
(); }

2177 
curs‹
.
Ê
.
	`push
(
pid
.
∑ge
);

2181 
	`DBG
(<<"");

2182 
rc_t
 
rc
 = 
	`_dfs_£¨ch
(
roŸ
, 
curs‹
.
qbox
, 
found
,

2183 
curs‹
.
c⁄d
, curs‹.
Ê
, curs‹.
_ö˛ude_nuŒs
);

2184 i‡(
rc
.
	`is_îr‹
()) {

2185 
curs‹
.
Ê
.
	`em±y_Æl
();

2186  
	`RC_AUGMENT
(
rc
);

2189 i‡(!
found
Ë{  
RCOK
; }

2191 
curs‹
.
num_¶Ÿ
 = 0;

2192 
pid
.
∑ge
 = 
curs‹
.
Ê
.
	`p›
();

2193 
	`W_DO
–
curs‹
.
∑ge
.
	`fix
(
pid
, 
LATCH_SH
) );

2195 
	`w_as£π3
(
curs‹
.
∑ge
.
	`is_Àaf
());

2196 
	`DBG
(<<"");

2198 
found
 = 
curs‹
.
∑ge
.
	`£¨ch
(curs‹.
qbox
, curs‹.
c⁄d
,

2199 
curs‹
.
sm≠
, curs‹.
num_¶Ÿ
,

2200 
curs‹
.
_ö˛ude_nuŒs
);

2201 
	`w_as£π3
(
found
);

2202 
curs‹
.
idx
 = 
	`bm_fú°_£t
(curs‹.
sm≠
, curs‹.
∑ge
.
	`ƒecs
(), 0);

2203 
	`DBG
(<<"Àavê„tch_öô w/ curs‹.num_¶Ÿ=" << 
curs‹
.
num_¶Ÿ


2204 << " curs‹.idx=" << 
curs‹
.
idx
);

2206  
RCOK
;

2207 
	}
}

2212 
rc_t


2213 
	gπªe_m
::
	$„tch
(

2214 
π_curs‹_t
& 
curs‹
,

2215 
nbox_t
& 
key
,

2216 * 
ñ
,

2217 
smsize_t
& 
ñí
,

2218 
boﬁ
& 
eof
,

2219 
boﬁ
 
skù
)

2221 
	`DBG
(<<"íã∏„tch w/ curs‹.num_¶Ÿ=" << 
curs‹
.
num_¶Ÿ


2222 <<" curs‹.idx=" << 
curs‹
.
idx
);

2223 i‡((
eof
 = !
curs‹
.
∑ge
.
	`is_fixed
())Ë{  
RCOK
; }

2226 c⁄° 
πªc_t
& 
r
 = 
curs‹
.
∑ge
.
	`ªc
(curs‹.
idx
);

2227 
key
.
	`byãs2box
(
r
.
	`key
(),Ñ.
	`kÀn
());

2228 i‡(
ñí
 >
r
.
	`ñí
()) {

2229 
	`mem˝y
(
ñ
, 
r
.
	`ñem
(),Ñ.
	`ñí
());

2230 
ñí
 = 
r
.
	`ñí
();

2232 i‡(
ñí
 == 0) { ; }

2233 {  
	`RC
(
eRECWONTFIT
); }

2236 
boﬁ
 
found
 = 
Ál£
;

2237 
Õid_t
 
roŸ
;

2238 
curs‹
.
∑ge
.
	`roŸ
(
roŸ
);

2239 
Õid_t
 
pid
 = 
curs‹
.
∑ge
.
	`pid
();

2242 
	`DBG
(<<"skù=" << 
skù
 << " curs‹.idx=" << 
curs‹
.
idx
);

2243 i‡(
skù
 && ++
curs‹
.
idx
 < curs‹.
∑ge
.
	`ƒecs
()) {

2244 
curs‹
.
idx
 = 
	`bm_fú°_£t
(curs‹.
sm≠
, curs‹.
∑ge
.
	`ƒecs
(),

2245 
curs‹
.
idx
);

2247 
	`DBG
(<<"curs‹.idx=" << 
curs‹
.
idx
);

2249 i‡(
curs‹
.
idx
 =-1 || curs‹.idx >curs‹.
∑ge
.
	`ƒecs
()) {

2251 
curs‹
.
∑ge
.
	`unfix
();

2253 
found
 = 
Ál£
;

2254 !
found
 && !
curs‹
.
Ê
.
	`is_em±y
()) {

2255 
	`DBG
(<<"doing _dfs_search");

2256 
rc_t
 
rc
 = 
	`_dfs_£¨ch
(
roŸ
, 
curs‹
.
qbox
, 
found
,

2257 
curs‹
.
c⁄d
, curs‹.
Ê
,

2258 
curs‹
.
_ö˛ude_nuŒs
);

2259 i‡(
rc
.
	`is_îr‹
()) {

2260 
curs‹
.
Ê
.
	`em±y_Æl
();

2261  
	`RC_AUGMENT
(
rc
);

2264 i‡(!
found
) {

2265  
RCOK
;

2267 
pid
.
∑ge
 = 
curs‹
.
Ê
.
	`p›
();

2268 
	`W_DO
–
curs‹
.
∑ge
.
	`fix
(
pid
, 
LATCH_SH
) );

2269 
	`w_as£π3
(
curs‹
.
∑ge
.
	`is_Àaf
());

2270 
	`DBG
(<<"curs‹.num_¶Ÿ=" << 
curs‹
.
num_¶Ÿ
);

2271 
found
 = 
curs‹
.
∑ge
.
	`£¨ch
(curs‹.
qbox
, curs‹.
c⁄d
,

2272 
curs‹
.
sm≠
, curs‹.
num_¶Ÿ
,

2273 
curs‹
.
_ö˛ude_nuŒs
);

2274 
	`DBG
(<<"curs‹.num_¶Ÿ=" << 
curs‹
.
num_¶Ÿ
);

2275 
	`w_as£π3
(
found
);

2276 
curs‹
.
idx
 = 
	`bm_fú°_£t
(curs‹.
sm≠
, curs‹.
∑ge
.
	`ƒecs
(), 0);

2277 
	`DBG
(<<"curs‹.idx=" << 
curs‹
.
idx
);

2280 
	`DBG
(<<"Àavê„tch w/ curs‹.num_¶Ÿ=" << 
curs‹
.
num_¶Ÿ


2281 <<" curs‹.idx=" << 
curs‹
.
idx
);

2283  
RCOK
;

2284 
	}
}

2290 
	$swìp_n_•lô
(
axis
, 
wrk_bønch_t
 
w‹k
[], 
u_ch¨
 
sm≠
[], & 
m¨gö
,

2291 
max_num
, 
mö_num
, 
nbox_t
* 
exåa
)

2293 
i
,
j
;

2294 
m¨gö
 = 0;

2295 i‡(
mö_num
 =0Ëmö_num = (Ë(
MIN_RATIO
*
max_num
 + 0.5);

2296 
•lô
 = -1, 
diff
 = 
max_num
 - 
mö_num
;

2299 
	`quick_s‹t
(
w‹k
, 
max_num
, 
axis
);

2301 
	`bm_zîo
(
sm≠
, 
max_num
);

2302 
	`bm_£t
(
sm≠
, 
w‹k
[0].
idx
);

2304 
nbox_t
 
	`box1
(
w‹k
[0].
ª˘
);

2305 
i
=1; i<
mö_num
; i++) {

2306 
box1
 +
w‹k
[
i
].
ª˘
;

2307 
	`bm_£t
(
sm≠
, 
w‹k
[
i
].
idx
);

2310 
nbox_t
 
	`box2_ba£
(
w‹k
[
max_num
-1].
ª˘
);

2311 
i
=
diff
+1; i<
max_num
-1; i++)

2312 
box2_ba£
 +
w‹k
[
i
].
ª˘
;

2314 
•lô
 = 
mö_num
;

2315 
ovîœp
;

2316 
bound_¨ó
 = 0;

2317 
mö_ovp
 = 
MaxDoubÀ
, 
mö_¨ó
 = MaxDouble;

2320 
i
 = 
mö_num
; i <
max_num
-min_num; i++) {

2321 
nbox_t
 
	`box2
(
box2_ba£
);

2322 
j
=
i
; j<=
diff
; j++)

2323 
box2
 +
w‹k
[
j
].
ª˘
;

2325 
m¨gö
 +(
box1
.
	`m¨gö
()+
box2
.margin());

2326 
ovîœp
 = (
box1
^
box2
).
	`¨ó
();

2327 i‡(
exåa
) {

2328 
ovîœp
 +(
box1
^(*
exåa
)).
	`¨ó
();

2329 
ovîœp
 +(
box2
^(*
exåa
)).
	`¨ó
();

2332 i‡(
ovîœp
 < 
mö_ovp
) {

2333 
mö_ovp
 = 
ovîœp
;

2334 
mö_¨ó
 = (
box1
+
box2
).
	`¨ó
();

2335 
•lô
 = 
i
;

2336 } i‡(
ovîœp
 =
mö_ovp
 &&

2337 (
bound_¨ó
 = (
box1
+
box2
).
	`¨ó
()Ë< 
mö_¨ó
) {

2338 
mö_¨ó
 = 
bound_¨ó
;

2339 
•lô
 = 
i
;

2342 
box1
 +
w‹k
[
i
].
ª˘
;

2345 
i
 = 
mö_num
; i < 
•lô
; i++)

2346 
	`bm_£t
(
sm≠
, 
w‹k
[
i
].
idx
);

2347 
	}
}

2351 
	gπld_ˇche_t
::
	$öô_buf
(
öt2_t
 
lvl
)

2353 
buf
[0].
	`öô
(
lvl
);

2354 
buf
[1].
	`öô
(
lvl
);

2355 
buf
[2].
	`öô
(
lvl
);

2356 
	}
}

2362 
rc_t


2363 
	gπld_ˇche_t
::
	$f‹˚
(

2364 
πw‹k_p
& 
ªt_p
,

2365 
boﬁ
& 
out
,

2366 
nbox_t
* 
univî£
)

2368 
i
,
j
;

2369 
out
 = 
Ál£
;

2371 i‡(
_idx
==0Ë 
RCOK
;

2374 
uöt2_t
 
size
 = 0, 
˙t
 = 0;

2375 
i
=0; i<=1; i++) {

2376 
size
 +(
uöt2_t
Ë
buf
[
i
].
	`Ω
()->
	`u£d_•a˚
();

2377 
˙t
 +
buf
[
i
].
	`Ω
()->
	`ƒecs
();

2381 i‡(
size
 < 
πªe_p
::
d©a_sz
) {

2382 
i
=1; i>0; i--) {

2383 
j
=
buf
[
i
].
	`Ω
()->
	`ƒecs
()-1; j>=0; j--) {

2384 
	`W_DO
–
buf
[0].
	`Ω
()->
	`ö£π
(buf[
i
].Ω()->
	`ªc
(
j
)) );

2385 
	`W_DO
–
buf
[1].
	`Ω
()->
	`ªmove
(
j
) );

2389 
	`W_DO
–
buf
[0].
	`ˇlc_£t_bound
() );

2390 
	`W_DO
–
buf
[1].
	`ˇlc_£t_bound
() );

2392 i‡(
_idx
==2Ë{ 
buf
[1].
	`sw≠
(buf[2]); }

2393 
_idx
--;

2394  
RCOK
;

2397 
ªt_p
.
	`öô
(
buf
[0].
	`Ω
()->
	`Àvñ
());

2400 i‡((
buf
[0].
	`bound
()^buf[1].bound()).
	`¨ó
()/buf[0].bound().area()

2401 < 0.01 || 
univî£
==
NULL
) {

2403 
ªt_p
.
	`sw≠
(
buf
[0]);

2404 
buf
[0].
	`sw≠
(buf[1]);

2405 i‡(
_idx
==2Ë
buf
[1].
	`sw≠
(buf[2]);

2406 
_idx
--;

2407 
out
 = 
åue
;

2408 i‡(!
œ°_box
) {

2409 
œ°_box
 = 
√w
 
	`nbox_t
(
ªt_p
.
	`bound
());

2410 
	`w_as£π1
(
œ°_box
);

2412 *
œ°_box
 = 
ªt_p
.
	`bound
();

2414  
RCOK
;

2419 
wrk_bønch_t
* 
w‹k
 = 
√w
 wrk_bønch_t[
˙t
];

2420 i‡(!
w‹k
Ë 
	`RC
(
smÀvñ_0
::
eOUTOFMEMORY
);

2421 
w_auto_dñëe_¨øy_t
<
wrk_bønch_t
> 
	`auto_dñ_w‹k
(
w‹k
);

2423 
˙t1
 = 
buf
[0].
	`Ω
()->
	`ƒecs
(), 
ödex
 = 0;

2424 
i
=0; i<=1; i++) {

2425 
j
=0; j<
buf
[
i
].
	`Ω
()->
	`ƒecs
(); j++) {

2426 c⁄° 
πªc_t
& 
tu∂e
 = 
buf
[
i
].
	`Ω
()->
	`ªc
(
j
);

2427 
w‹k
[
ödex
].
ª˘
.
	`byãs2box
(
tu∂e
.
	`key
(),Åu∂e.
	`kÀn
());

2428 
w‹k
[
ödex
].
idx
 = index;

2429 
ödex
++;

2433 
m¨gö
;

2434 
u_ch¨
 *
sm≠
 = 
√w
 u_ch¨[
πªe_p
::
sm≠_sz
*2];

2435 
w_auto_dñëe_¨øy_t
<
u_ch¨
> 
	`auto_dñ
(
sm≠
);

2437 
mö_˙t
 = 
˙t
 - 
πªe_p
::
d©a_sz
*
buf
[0].
	`Ω
()->
	`ƒecs
()

2438 / 
buf
[0].
	`Ω
()->
	`u£d_•a˚
();

2439 
mö_˙t
 = (mö_˙à+ 
˙t
/2) / 2;

2442 
x0
 = 
buf
[0].
	`bound
().
	`˚¡î
(0);

2443 
x1
 = 
buf
[1].
	`bound
().
	`˚¡î
(0);

2444 
y0
 = 
buf
[0].
	`bound
().
	`˚¡î
(1);

2445 
y1
 = 
buf
[1].
	`bound
().
	`˚¡î
(1);

2446 
boﬁ
 
boun˚_x
 = 
Ál£
, 
boun˚_y
 = false;

2448 i‡(
_idx
 == 2) {

2449 
x2
 = 
buf
[2].
	`bound
().
	`˚¡î
(0);

2450 
y2
 = 
buf
[2].
	`bound
().
	`˚¡î
(1);

2452 i‡((
x1
-
x2
)*(x1-
x0
Ë> 0Ë
boun˚_x
 = 
åue
;

2453 i‡((
y1
-
y2
)*(y1-
y0
Ë> 0Ë
boun˚_y
 = 
åue
;

2457 i‡(
boun˚_x
 && 
boun˚_y
)

2458 i‡(
	`ABS
(
x1
-
x0
Ë>ABS(
y1
-
y0
))

2459 
	`swìp_n_•lô
(1, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2461 
	`swìp_n_•lô
(0, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2462 i‡(
boun˚_x
)

2463 
	`swìp_n_•lô
(1, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2464 i‡(
boun˚_y
)

2465 
	`swìp_n_•lô
(0, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2467 i‡(
	`ABS
(
x1
-
x0
Ë>ABS(
y1
-
y0
))

2468 
	`swìp_n_•lô
(0, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2470 
	`swìp_n_•lô
(1, 
w‹k
, 
sm≠
, 
m¨gö
, 
˙t
, 
mö_˙t
, 
œ°_box
);

2474 
i
=
˙t
-1; i>=0; i--) {

2475 i‡(
	`bm_is_£t
(
sm≠
, 
i
)) {

2476 
idx
 = (
i
>=
˙t1
)? 1: 0;

2477 
off£t
 = (
i
>=
˙t1
)? i - cnt1: i;

2478 
	`W_DO
–
ªt_p
.
	`Ω
()->
	`ö£π
(
buf
[
idx
].Ω()->
	`ªc
(
off£t
)) );

2479 
	`W_DO
–
buf
[
idx
].
	`Ω
()->
	`ªmove
(
off£t
) );

2484 
i
=
buf
[1].
	`Ω
()->
	`ƒecs
()-1; i>=0; i--) {

2485 
	`W_DO
–
buf
[0].
	`Ω
()->
	`ö£π
(buf[1].Ω()->
	`ªc
(
i
)) );

2486 
	`W_DO
–
buf
[1].
	`Ω
()->
	`ªmove
(
i
) );

2489 
	`W_DO
–
buf
[0].
	`ˇlc_£t_bound
() );

2490 
	`W_DO
–
buf
[1].
	`ˇlc_£t_bound
() );

2491 
	`W_DO
–
ªt_p
.
	`ˇlc_£t_bound
() );

2494 i‡(
_idx
 == 2) {

2495 i‡(
univî£
) {

2496 i‡(
ªt_p
.
	`bound
().
	`hcmp
(
buf
[0].bound(), *
univî£
) > 0)

2497 
ªt_p
.
	`sw≠
(
buf
[0]);

2499 i‡((
ªt_p
.
	`bound
()^
buf
[2].bound()).
	`¨ó
()

2500 > (
buf
[0].
	`bound
()^buf[2].bound()).
	`¨ó
())

2501 
ªt_p
.
	`sw≠
(
buf
[0]);

2503 
buf
[1].
	`sw≠
(buf[2]);

2506 
_idx
--;

2507 
out
 = 
åue
;

2508 i‡(!
œ°_box
) {

2509 
œ°_box
 = 
√w
 
	`nbox_t
(
ªt_p
.
	`bound
());

2511 *
œ°_box
 = 
ªt_p
.
	`bound
();

2514  
RCOK
;

2515 
	}
}

2521 
rc_t


2522 
	gπld_°k_t
::
	$tmp2ªÆ
(

2523 
πw‹k_p
* 
tmp
,

2524 
πªe_p
* 
ªÆ
)

2527 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

2530 
i
=0; i<
tmp
->
	`Ω
()->
	`ƒecs
(); i++) {

2531 
	`W_DO
–
ªÆ
->
	`ö£π
(
tmp
->
	`Ω
()->
	`ªc
(
i
)) );

2537 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
ON
);

2538 
	`W_DO
–
	`log_∑ge_image
(*
ªÆ
) );

2540  
RCOK
;

2541 
	}
}

2546 c⁄° 
	g_h_size
 = 20;

2547 
	gex≤_èbÀ
[
_h_size
] =

2560 
boﬁ


2561 
	$heuri°ic_cut
(

2562 
πw‹k_p
* 
∑ge
,

2563 c⁄° 
nbox_t
& 
key
)

2565 
off£t
 = (
∑ge
->
	`Ω
()->
	`u£d_•a˚
()*20/
πªe_p
::
d©a_sz
);

2566 i‡(
off£t
 <4Ë 
Ál£
;

2567 
nbox_t
 
	`c⁄sidî
(
∑ge
->
	`bound
());

2568 if(!
key
.
	`is_NuŒ
()) {

2569 
c⁄sidî
 +
key
;

2571 i‡(
c⁄sidî
.
	`¨ó
() >

2572 
∑ge
->
	`bound
().
	`¨ó
()*
ex≤_èbÀ
[
off£t
-1]/100.0)

2573  
åue
;

2575  
Ál£
;

2576 
	}
}

2585 
rc_t


2586 
	gπld_°k_t
::
	$add_to_°k
(

2587 c⁄° 
nbox_t
& 
key
,

2588 c⁄° 
cvec_t
& 
ñ
,

2589 
shpid_t
 
chûd
,

2590 
öt2_t
 
Àvñ
)

2592 
	`w_as£π1
(
Àvñ
<=
_t›
+1);

2593 i‡(
Àvñ
 =
_t›
+1Ë{ 
	`öô_√xt_œyî
(); }

2596 
πw‹k_p
* 
∑ge
 = 
œyîs
[
Àvñ
].
	`t›
();

2598 i‡(
dc
.
h
 != 0) {

2600 i‡(
	`heuri°ic_cut
(
∑ge
, 
key
)) {

2604 
rc_t
 
rc
 = 
∑ge
->
	`Ω
()->
	`ö£π
(
key
, 
ñ
, 
chûd
);

2605 i‡(
rc
.
	`is_îr‹
()) {

2607 i‡(
rc
.
	`îr_num
(Ë!
smÀvñ_0
::
eRECWONTFIT
) {

2608  
	`RC_AUGMENT
(
rc
);

2612 
∑ge
->
	`ex≤_bound
(
key
);

2613  
RCOK
;

2617 
rc_t
 
rc
 = 
∑ge
->
	`Ω
()->
	`ö£π
(
key
, 
ñ
, 
chûd
);

2618 i‡(
rc
.
	`is_îr‹
()) {

2620 i‡(
rc
.
	`îr_num
(Ë!
smÀvñ_0
::
eRECWONTFIT
) {

2621  
	`RC_AUGMENT
(
rc
);

2625 
∑ge
->
	`ex≤_bound
(
key
);

2626  
RCOK
;

2630 i‡(
œyîs
[
Àvñ
].
	`cou¡
()==3) {

2632 
πw‹k_p
 
out_∑ge
;

2633 
boﬁ
 
out
=
Ál£
;

2635 
	`W_DO
–
œyîs
[
Àvñ
].
	`f‹˚
(
out_∑ge
, 
out
, 
dc
.
univî£
) );

2636 i‡(
out
) {

2637 
Õid_t
 
≈id
;

2638 
vec_t
 
e
;

2641 
	`W_DO
–
πªe_m
::
	`_Æloc_∑ge
(
Ω
.
	`pid
(), 
Àvñ
+1,

2642 
Ω
,Ñp.
	`dim
(), 
≈id
) );

2645 
πªe_p
 
≈
;

2646 
	`W_DO
–
≈
.
	`fix
(
≈id
, 
LATCH_EX
) );

2647 
	`W_DO
–
	`tmp2ªÆ
(&
out_∑ge
, &
≈
) );

2649 
num_∑ges
++;

2650 i‡(
Àvñ
==0) {

2651 
Àaf_∑ges
++;

2652 
fûl_sum
 +(
uöt4_t
Ë(
≈
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2656 
	`W_DO
–
	`add_to_°k
(
out_∑ge
.
	`bound
(), 
e
, 
≈id
.
∑ge
, 
Àvñ
+1) );

2662 
œyîs
[
Àvñ
].
	`ö¸_˙t
();

2663 
	`W_DO
–
œyîs
[
Àvñ
].
	`t›
()->
	`Ω
()->
	`ö£π
(
key
, 
ñ
, 
chûd
) );

2664 
œyîs
[
Àvñ
].
	`t›
()->
	`ex≤_bound
(
key
);

2666  
RCOK
;

2667 
	}
}

2672 
rc_t


2673 
	gπld_°k_t
::
	$wøp_up
()

2675 
πw‹k_p
 
out_∑ge
;

2676 
boﬁ
 
out
;

2677 
Õid_t
 
≈id
;

2678 
πªe_p
 
≈
;

2679 
vec_t
 
e
;

2682 
i
=0; i<
_t›
; i++) {

2684 
out
 = 
Ál£
;

2685 !
out
 && 
œyîs
[
i
].
	`cou¡
() > 1) {

2686 
	`W_DO
–
œyîs
[
i
].
	`f‹˚
(
out_∑ge
, 
out
, 
dc
.
univî£
) );

2688 i‡(
out
) {

2690 
	`W_DO
–
πªe_m
::
	`_Æloc_∑ge
(
Ω
.
	`pid
(), 
i
+1,

2691 
Ω
,Ñp.
	`dim
(), 
≈id
) );

2692 
	`W_DO
–
≈
.
	`fix
(
≈id
, 
LATCH_EX
) );

2693 
	`W_DO
–
	`tmp2ªÆ
(&
out_∑ge
, &
≈
) );

2695 
num_∑ges
++;

2696 i‡(
i
==0) {

2697 
Àaf_∑ges
++;

2698 
fûl_sum
 +(
uöt4_t
)(
≈
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2702 
	`W_DO
–
	`add_to_°k
(
out_∑ge
.
	`bound
(), 
e
, 
≈id
.
∑ge
, 
i
+1) );

2705 } 
œyîs
[
i
].
	`cou¡
() > 1);

2708 
	`W_DO
(
πªe_m
::
	`_Æloc_∑ge
(
Ω
.
	`pid
(), 
i
+1,Ñp,Ñp.
	`dim
(), 
≈id
));

2709 
	`W_DO
–
≈
.
	`fix
(
≈id
, 
LATCH_EX
) );

2710 
	`W_DO
–
	`tmp2ªÆ
(
œyîs
[
i
].
	`bŸtom
(), &
≈
) );

2712 
num_∑ges
++;

2713 i‡(
i
==0) {

2714 
Àaf_∑ges
++;

2715 
fûl_sum
 +(
uöt4_t
Ë(
≈
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2719 
	`W_DO
–
	`add_to_°k
(
œyîs
[
i
].
	`bŸtom
()->
	`bound
(), 
e
, 
≈id
.
∑ge
, i+1) );

2723 
out
 = 
Ál£
;

2724 !
out
 && 
œyîs
[
_t›
].
	`cou¡
() > 1) {

2725 
	`W_DO
–
œyîs
[
_t›
].
	`f‹˚
(
out_∑ge
, 
out
, 
dc
.
univî£
) );

2728 i‡(
out
) {

2731 
num_∑ges
++;

2732 
	`W_DO
–
Ω
.
	`£t_Àvñ
(
_t›
+2) );

2733 
πªe_p
 
≈
;

2737 
	`W_DO
–
πªe_m
::
	`_Æloc_∑ge
(
Ω
.
	`pid
(),
_t›
+1,Ω,Ω.
	`dim
(),
≈id
) );

2738 
	`W_DO
–
≈
.
	`fix
(
≈id
, 
LATCH_EX
) );

2739 
	`W_DO
–
	`tmp2ªÆ
(&
out_∑ge
, &
≈
) );

2741 
num_∑ges
++;

2742 i‡(
_t›
==0) {

2743 
Àaf_∑ges
++;

2744 
fûl_sum
 +(
uöt4_t
Ë(
≈
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2747 
	`W_COERCE
–
Ω
.
	`ö£π
(
out_∑ge
.
	`bound
(), 
e
, 
≈
.
	`pid
().
∑ge
) );

2749 
out
 = 
Ál£
;

2750 !
out
 && 
œyîs
[
_t›
].
	`cou¡
() > 1) {

2751 
	`W_DO
–
œyîs
[
_t›
].
	`f‹˚
(
out_∑ge
, 
out
, 
dc
.
univî£
) );

2753 } 
out
);

2756 
	`W_DO
–
πªe_m
::
	`_Æloc_∑ge
(
Ω
.
	`pid
(), 
_t›
+1,Ñp,Ñp.
	`dim
(), 
≈id
) );

2757 
	`W_DO
–
≈
.
	`fix
(
≈id
, 
LATCH_EX
) );

2758 
	`W_DO
–
	`tmp2ªÆ
(
œyîs
[
_t›
].
	`bŸtom
(), &
≈
) );

2759 
	`W_COERCE
–
Ω
.
	`ö£π
(
œyîs
[
_t›
].
	`bŸtom
()->
	`bound
(),

2760 
e
, 
≈
.
	`pid
().
∑ge
) );

2761 
num_∑ges
++;

2762 i‡(
_t›
==0) {

2763 
Àaf_∑ges
++;

2764 
fûl_sum
 +(
uöt4_t
Ë(
≈
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2766 
height
 = 
_t›
+2;

2771 
	`W_DO
–
Ω
.
	`£t_Àvñ
(
_t›
+1) );

2772 
	`W_DO
–
	`tmp2ªÆ
(
œyîs
[
_t›
].
	`bŸtom
(), &
Ω
) );

2773 
num_∑ges
++;

2774 i‡(
_t›
==0) {

2775 
Àaf_∑ges
++;

2776 
fûl_sum
 +(
uöt4_t
Ë(
Ω
.
	`u£d_•a˚
()*100/
πªe_p
::
d©a_sz
);

2778 
height
 = 
_t›
+1;

2781  
RCOK
;

2782 
	}
}

2784 #unde‡
SM_LEVEL


2785 
	~<sm_öt_4.h
>

2789 
rc_t


2790 
	gπªe_m
::
	$bulk_lﬂd
(

2791 c⁄° 
Õid_t
& 
roŸ
,

2792 
n§cs
,

2793 c⁄° 
°id_t
* 
§c
,

2794 c⁄° 
πld_desc_t
& 
desc
,

2795 
πªe_°©s_t
& 
°©s
)

2797 
	`DBG
(<<"bulk_lﬂd sour˚=" << 
§c
 << " index=" << 
roŸ


2799 
°©s
.
	`˛ór
();

2800 i‡(!
	`is_em±y
(
roŸ
)) {

2801  
	`RC
(
eNDXNOTEMPTY
);

2804 
l¢_t
 
™ch‹
;

2805 
x˘_t
* 
xd
 = 
	`x˘
();

2806 
	`w_as£π3
(
xd
);

2807 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

2808 i‡(
xd
Ë
™ch‹
 = xd->
	`™ch‹
();

2810 
Õid_t
 
pid
;

2811 
πªe_p
 
Ω
;

2812 
	`X_DO
–
Ω
.
	`fix
(
roŸ
, 
LATCH_EX
), 
™ch‹
 );

2813 
πld_°k_t
 
	`ld_°ack
(
Ω
, 
desc
);

2817 
nbox_t
 
	`key
(
Ω
.
	`dim
());

2818 
kÀn
 = 
key
.
	`kÀn
();

2823 
i
 = 0;

2824 
fûe_p
 
∑ge
[2];

2825 c⁄° 
ªc‹d_t
* 
¥
 = 0;

2826 
ba£_°©_t
 
˙t
=0, 
uni_˙t
=0;

2828 
§c_ödex
=0; src_ödex<
n§cs
; src_index++) {

2829 
	`X_DO
–
fi
->
	`fú°_∑ge
(
§c
[
§c_ödex
], 
pid
, 
NULL
 ), 
™ch‹
 );

2830 
boﬁ
 
eof
 = 
Ál£
; !Éof; ) {

2831 
	`X_DO
–
∑ge
[
i
].
	`fix
(
pid
, 
LATCH_SH
), 
™ch‹
 );

2832 
¶Ÿid_t
 
s
 = 
∑ge
[
i
].
	`√xt_¶Ÿ
(0); s; s =Öage[i].next_slot(s)) {

2833 c⁄° 
ªc‹d_t
* 
r
;

2834 
	`W_COERCE
–
∑ge
[
i
].
	`gë_ªc
(
s
, 
r
) );

2837 
	`w_as£π3
(
r
->
	`hdr_size
(Ë<(
smsize_t
)
kÀn
);

2838 
key
.
	`byãs2box
(
r
->
	`hdr
(),Ñ->
	`hdr_size
());

2839 
vec_t
 
	`ñ
(
r
->
	`body
(), (Ï->
	`body_size
());

2841 ++
˙t
;

2842 i‡(!
¥
Ë++ 
uni_˙t
;

2845 if(
r
->
	`hdr_size
(Ë=0 && 
¥
->hdr_size() == 0) {

2849 
	`w_as£π1
(
¥
->
	`is_smÆl
());

2850 i‡(
ñ
.
	`cmp
(
¥
->
	`body
(), (Ìr->
	`body_size
())==0) {

2852 
	`X_DO
(
	`RC
(
eDUPLICATE
), 
™ch‹
);

2854 } i‡(
	`memcmp
(
¥
->
	`hdr
(), 
r
->hdr(), 
kÀn
)) {

2855 ++ 
uni_˙t
;

2859 
	`X_DO
–
ld_°ack
.
	`add_to_°k
(
key
, 
ñ
, 0, 0), 
™ch‹
 );

2860 
¥
 = 
r
;

2862 
i
 = 1 - i;

2863 
	`X_DO
–
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ), 
™ch‹
 );

2866 i‡(
˙t
 > 0)

2868 
	`X_DO
–
ld_°ack
.
	`wøp_up
(), 
™ch‹
 );

2871 i‡(
xd
) {

2872 
	`SSMTEST
("rtree.5");

2873 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("rtree.5"));

2876 
°©s
.
íåy_˙t
 = 
˙t
;

2877 
°©s
.
unique_˙t
 = 
uni_˙t
;

2878 
°©s
.
Àvñ_˙t
 = 
ld_°ack
.
height
;

2879 
°©s
.
Àaf_pg_˙t
 = 
ld_°ack
.
Àaf_∑ges
;

2880 
°©s
.
öt_pg_˙t
 = 
ld_°ack
.
num_∑ges
 - sèts.
Àaf_pg_˙t
;

2881 if(
ld_°ack
.
Àaf_∑ges
 == 0) {

2882 
°©s
.
fûl_≥r˚¡
 = 0;

2884 
°©s
.
fûl_≥r˚¡
 = (
uöt2_t
Ë(
ld_°ack
.
fûl_sum
/ld_°ack.
Àaf_∑ges
);

2887  
RCOK
;

2888 
	}
}

2893 
rc_t


2894 
	gπªe_m
::
	$bulk_lﬂd
(

2895 c⁄° 
Õid_t
& 
roŸ
,

2896 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

2897 c⁄° 
πld_desc_t
& 
desc
,

2898 
πªe_°©s_t
& 
°©s
)

2900 
	`mem£t
(&
°©s
, 0, (stats));

2901 i‡(!
	`is_em±y
(
roŸ
)) {

2902  
	`RC
(
eNDXNOTEMPTY
);

2908 
uöt4_t
 
˙t
=0, 
uni_˙t
=0;

2911 
πªe_p
 
Ω
;

2912 
	`W_DO
–
Ω
.
	`fix
(
roŸ
, 
LATCH_EX
) );

2913 
πld_°k_t
 
	`ld_°ack
(
Ω
, 
desc
);

2917 
nbox_t
 
	`box
(
Ω
.
	`dim
());

2918 
kÀn
 = 
box
.
	`kÀn
();

2920 * 
tmp
 = 
√w
 [
kÀn
];

2921 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_tmp
(
tmp
);

2923 * 
¥ev_tmp
 = 
√w
 [
kÀn
];

2924 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_¥ev_tmp
(
¥ev_tmp
);

2926 
boﬁ
 
¥ev
 = 
Ál£
;

2927 
boﬁ
 
eof
 = 
Ál£
;

2928 
vec_t
 
key
, 
ñ
;

2929 
	`W_DO
 ( 
s‹ãd_°ªam
.
	`gë_√xt
(
key
, 
ñ
, 
eof
) );

2931 !
eof
) {

2932 ++
˙t
;

2934 
key
.
	`c›y_to
(
tmp
, 
kÀn
);

2935 
box
.
	`byãs2box
(
tmp
, 
kÀn
);

2937 i‡(!
¥ev
) {

2938 
¥ev
 = 
åue
;

2939 
	`mem˝y
(
¥ev_tmp
, 
tmp
, 
kÀn
);

2940 
uni_˙t
++;

2942 i‡(
	`memcmp
(
¥ev_tmp
, 
tmp
, 
kÀn
)) {

2943 
uni_˙t
++;

2944 
	`mem˝y
(
¥ev_tmp
, 
tmp
, 
kÀn
);

2948 
	`W_DO
–
ld_°ack
.
	`add_to_°k
(
box
, 
ñ
, 0, 0) );

2949 
key
.
	`ª£t
();

2950 
ñ
.
	`ª£t
();

2951 
	`W_DO
 ( 
s‹ãd_°ªam
.
	`gë_√xt
(
key
, 
ñ
, 
eof
) );

2954 i‡(
˙t
 > 0)

2956 
	`W_DO
–
ld_°ack
.
	`wøp_up
() );

2959 
°©s
.
Àvñ_˙t
 = 
ld_°ack
.
height
;

2960 
°©s
.
Àaf_pg_˙t
 = 
ld_°ack
.
Àaf_∑ges
;

2961 
°©s
.
öt_pg_˙t
 = 
ld_°ack
.
num_∑ges
 - sèts.
Àaf_pg_˙t
;

2962 
°©s
.
fûl_≥r˚¡
 = (
uöt2_t
Ë(
ld_°ack
.
fûl_sum
 /Üd_°ack.
Àaf_∑ges
);

2965 
°©s
.
íåy_˙t
 = 
˙t
;

2966 
°©s
.
unique_˙t
 = 
uni_˙t
;

2967  
RCOK
;

2968 
	}
}

	@src/sm/rtree.h

30 #i‚de‡
RTREE_H


31 
	#RTREE_H


	)

33 
	~"w_deföes.h
"

37 #i‚de‡
NBOX_H


38 
	~<nbox.h
>

41 #ifde‡
__GNUG__


42 #¥agm®
öãrÁ˚


45 
	gπªe_°©s_t
;

47 c⁄° 
	gMIN_RATIO
 = ()0.4;

48 c⁄° 
	gREMOVE_RATIO
 = ()0.3;

50 
	e›î_t
 { 
	mt_ªad
 = 0, 
	mt_ö£π
, 
	mt_ªmove
 };

52 
˛ass
 
	gs‹t_°ªam_i
;

53 
˛ass
 
	gπ_curs‹_t
;

54 
˛ass
 
	gπªe_ba£_p
;

55 
˛ass
 
	gπªe_p
;

56 
˛ass
 
	gπ°k_t
;

57 
˛ass
 
	g·°k_t
;

58 
˛ass
 
	gπªc_t
;

63 
	sπld_desc_t
 {

64 
	mw_ba£_t
::
uöt1_t
 
h
;

69 
fûl1
 
	mdummy1
;

70 
fûl2
 
	mdummy2
;

72 
öt2_t
 
	mh_fûl
;

73 
öt2_t
 
	mh_ex≤
;

74 
nbox_t
* 
	munivî£
;

76 
πld_desc_t
() {

77 
	mh_fûl
 = 65;

78 
	mh_ex≤
 = 120;

79 
	mh
 = 
åue
;

80 
	munivî£
 = 
NULL
;

83 
πld_desc_t
(
nbox_t
* 
u
, 
öt2_t
 
hff
, i¡2_à
hef
) {

84 
	mh_fûl
 = 
hff
;

85 
	mh_ex≤
 = 
hef
;

86 
	mh
 = (
hff
<100 && 
hef
>100)?1:0;

87 
	munivî£
 = 
u
;

91 ˛as†
	cπªe_m
 : 
public
 
smÀvñ_2
 {

92 
public
:

93 
	$πªe_m
() {};

94 ~
	$πªe_m
(Ë{
	}
};

96 
rc_t
 
¸óã
(

97 
°id_t
 
°id
,

98 
Õid_t
& 
roŸ
,

99 
öt2_t
 
dim
);

101 
rc_t
 
lookup
(

102 c⁄° 
Õid_t
& 
roŸ
,

103 c⁄° 
nbox_t
& 
key
,

104 * 
ñ
,

105 
smsize_t
& 
ñí
,

106 
boﬁ
& 
found
 );

108 
rc_t
 
ö£π
(

109 c⁄° 
Õid_t
& 
roŸ
,

110 c⁄° 
nbox_t
& 
key
,

111 c⁄° 
cvec_t
& 
ñem
);

113 
rc_t
 
ªmove
(

114 c⁄° 
Õid_t
& 
roŸ
,

115 c⁄° 
nbox_t
& 
key
,

116 c⁄° 
cvec_t
& 
ñem
);

118 
rc_t
 
„tch_öô
(

119 c⁄° 
Õid_t
& 
roŸ
,

120 
π_curs‹_t
& 
curs‹


123 
rc_t
 
„tch
(

124 
π_curs‹_t
& 
curs‹
,

125 
nbox_t
& 
key
,

126 * 
ñ
,

127 
smsize_t
& 
ñí
,

128 
boﬁ
& 
eof
,

129 
boﬁ
 
skù
);

131 
rc_t
 
¥öt
(c⁄° 
Õid_t
& 
roŸ
);

133 
rc_t
 
døw
(

134 c⁄° 
Õid_t
& 
roŸ
,

135 
o°ªam
 &
DøwFûe
,

136 
boﬁ
 
skù
 = 
Ál£
);

138 
rc_t
 
°©s
(

139 c⁄° 
Õid_t
& 
roŸ
,

140 
πªe_°©s_t
& 
°©
,

141 
uöt2_t
 
size
 = 0,

142 
uöt2_t
* 
ovp
 = 
NULL
,

143 
boﬁ
 
audô
 = 
åue
);

145 
rc_t
 
bulk_lﬂd
(

146 c⁄° 
Õid_t
& 
roŸ
,

147 
n§cs
,

148 c⁄° 
°id_t
* 
§c
,

149 c⁄° 
πld_desc_t
& 
desc
,

150 
πªe_°©s_t
& 
°©s
);

151 
rc_t
 
bulk_lﬂd
(

152 c⁄° 
Õid_t
& 
roŸ
,

153 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

154 c⁄° 
πld_desc_t
& 
desc
,

155 
πªe_°©s_t
& 
°©s
);

157 
boﬁ
 
is_em±y
(c⁄° 
Õid_t
& 
roŸ
);

159 
	g¥iv©e
:

161 
‰õnd
 
˛ass
 
πld_°k_t
;

163 
rc_t
 
_Æloc_∑ge
(

164 c⁄° 
Õid_t
& 
roŸ
,

165 
öt2_t
 
Àvñ
,

166 c⁄° 
πªe_p
& 
√¨
,

167 
öt2_t
 
dim
,

168 
Õid_t
& 
pid
);

170 
rc_t
 
_£¨ch
(

171 c⁄° 
Õid_t
& 
roŸ
,

172 c⁄° 
nbox_t
& 
key
,

173 c⁄° 
cvec_t
& 
ñ
,

174 
boﬁ
& 
found
,

175 
π°k_t
& 
∂
,

176 
›î_t
 
›î
,

177 
boﬁ
 
ö˛ude_nuŒs
);

179 
rc_t
 
_åavî£
(

180 c⁄° 
nbox_t
& 
key
,

181 c⁄° 
cvec_t
& 
ñ
,

182 
boﬁ
& 
found
,

183 
π°k_t
& 
∂
,

184 
›î_t
 
›î
,

185 
boﬁ
 
ö˛ude_nuŒs
);

187 
rc_t
 
_dfs_£¨ch
(

188 c⁄° 
Õid_t
& 
roŸ
,

189 c⁄° 
nbox_t
& 
key
,

190 
boﬁ
& 
found
,

191 
nbox_t
::
sob_cmp_t
 
˘y≥
,

192 
·°k_t
& 
Ê
,

193 
boﬁ
 
ö˛ude_nuŒs
);

195 
rc_t
 
_pick_bønch
(

196 c⁄° 
Õid_t
& 
roŸ
,

197 c⁄° 
nbox_t
& 
key
,

198 
π°k_t
& 
∂
,

199 
öt2_t
 
lvl
,

200 
›î_t
 
›î
);

202 
rc_t
 
_ov_åót
(

203 c⁄° 
Õid_t
& 
roŸ
,

204 
π°k_t
& 
∂
,

205 c⁄° 
nbox_t
& 
key
,

206 
πªe_p
& 
ªt_∑ge
,

207 
boﬁ
* 
lvl_•lô
);

209 
rc_t
 
_•lô_∑ge
(

210 c⁄° 
Õid_t
& 
roŸ
,

211 
π°k_t
& 
∂
,

212 c⁄° 
nbox_t
& 
key
,

213 
πªe_p
& 
ªt_∑ge
,

214 
boﬁ
* 
lvl_•lô
);

216 
rc_t
 
_√w_node
(

217 c⁄° 
Õid_t
& 
roŸ
,

218 
π°k_t
& 
∂
,

219 c⁄° 
nbox_t
& 
key
,

220 
πªe_p
& 
subåì
,

221 
boﬁ
* 
lvl_•lô
);

223 
rc_t
 
_ªö£π
(

224 c⁄° 
Õid_t
& 
roŸ
,

225 c⁄° 
πªc_t
& 
tu∂e
,

226 
π°k_t
& 
∂
,

227 
öt2_t
 
Àvñ
,

228 
boﬁ
* 
lvl_•lô
);

231 
rc_t
 
__¥›ag©e_ö£π
(

232 
x˘_t
 * 
xd
,

233 
π°k_t
& 
∂
);

235 
rc_t
 
_¥›ag©e_ö£π
(

236 
π°k_t
& 
∂
,

237 
boﬁ
 
com≥nßã
 = 
åue
);

240 
rc_t
 
__¥›ag©e_ªmove
(

241 
x˘_t
 * 
xd
,

242 
π°k_t
& 
∂
);

244 
rc_t
 
_¥›ag©e_ªmove
(

245 
π°k_t
& 
∂
,

246 
boﬁ
 
com≥nßã
 = 
åue
);

248 
rc_t
 
_døw
(

249 c⁄° 
Õid_t
& 
pid
,

250 
o°ªam
 &
DøwFûe
,

251 
nbox_t
 &
CovîAŒ
,

252 
boﬁ
 
skù
);

254 
rc_t
 
_°©s
(

255 c⁄° 
Õid_t
& 
roŸ
,

256 
πªe_°©s_t
& 
°©
,

257 
ba£_°©_t
& 
fûl_sum
,

258 
uöt2_t
 
size
,

259 
uöt2_t
* 
ovp
);

	@src/sm/rtree_p.h

30 #i‚de‡
RTREE_P_H


31 
	#RTREE_P_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 #i‚de‡
KEYED_P_H


42 
	~<keyed.h
>

48 
	sπ˘æ_t
 {

49 
Õid_t
 
	mroŸ
;

50 
öt2_t
 
	mÀvñ
;

51 
öt2_t
 
	mdim
;

54 #ifde‡
__GNUC__


55 ˛as†
	c_πªc_t_dummy_
 {

56 
‰õnd
 
˛ass
 
	m_πªc_t
;

57 
	mpublic
:

61 ˛as†
	cπªc_t
 : 
public
 
keyªc_t
 {

62 
public
:

63 #ifde‡
__GNUC__


64 
‰õnd
 
˛ass
 
_πªc_t_dummy_
;

66 
	m¥iv©e
:

67 
	$πªc_t
() {};

68 
	}
};

70 ˛as†
	cπªe_ba£_p
 : 
public
 
keyed_p
 {

71 
¥Ÿe˘ed
:

72 
π˘æ_t
& 
_hdr
();

73 c⁄° 
	mπ˘æ_t
& 
	$_hdr
() const;

75 
public
:

76 
	`MAKEPAGE
(
πªe_ba£_p
, 
keyed_p
, 1);

80 
max_s˙t
 = (
d©a_sz
 - (
π˘æ_t
)) /

81 ((
πªc_t
Ë+ 5*(Ë+ (
¶Ÿ_t
)) + 1,

82 
sm≠_sz
 = 
max_s˙t
 / (
u_ch¨
) + 1

85 
rc_t
 
	`£t_hdr
(c⁄° 
π˘æ_t
& 
√w_hdr
);

86 
rc_t
 
	`£t_Àvñ
(
öt2_t
 
l
);

87 
rc_t
 
	`£t_dim
(
öt2_t
 
d
=2);

89 
boﬁ
 
	$is_Àaf
() const;

90 
boﬁ
 
	$is_node
() const;

92 
	$Àvñ
() const;

93 
	$dim
() const;

95 
	$roŸ
(
Õid_t
& 
r
) const;

96 
shpid_t
 
	$roŸ
() const;

98 
rc_t
 
	`ö£π
(

99 c⁄° 
cvec_t
& 
key
,

100 c⁄° 
cvec_t
& 
ñ
,

101 
¶Ÿ
,

102 
shpid_t
 
chûd
 = 0);

103 
rc_t
 
	`ªmove
(
¶Ÿid_t
 
¶Ÿ
);

104 
rc_t
 
	$ªmove
(
¶Ÿ
Ë{  
	`ªmove
(
	`¶Ÿid_t
(¶Ÿ)); 
	}
}

106 
rc_t
 
shi·
(
¢um
, 
πªe_ba£_p
* 
rsib
);

107 c⁄° 
	gπªc_t
& 
	$ªc
(
idx
) const;

108 
	$ƒecs
() const;

110 
‰õnd
 
˛ass
 
∑ge_lök_log
;

111 
	}
};

113 ˛as†
	cπªe_p
 : 
public
 
πªe_ba£_p
 {

115 
boﬁ
 
	$_key_m©ch
(c⁄° 
nbox_t
& 
key
, 
¶Ÿ
, 
boﬁ
 
ö˛ude_nuŒs
,

116 
boﬁ
& 
biggî
) const;

117 
boﬁ
 
	`exa˘_m©ch
(

118 c⁄° 
nbox_t
& 
key
, 
u_ch¨
 
sm≠
[], c⁄° 
cvec_t
& 
ñ
,

119 c⁄° 
shpid_t
 
chûd
,

120 
boﬁ
 
ö˛ude_nuŒs


122 
boﬁ
 
	`•©ül_§ch
(c⁄° 
nbox_t
& 
key
,Çbox_t::
sob_cmp_t
 
˘y≥
, 
u_ch¨
 
sm≠
[],

123 
öt2_t
& 
numSlŸ
,

124 
boﬁ
 
ö˛ude_nuŒs
);

126 
public
:

128 
	`MAKEPAGE
(
πªe_p
, 
πªe_ba£_p
, 1);

130 
NORET
 
	`πªe_p
(c⁄° 
πªe_ba£_p
 &
rbp
);

131 
rc_t
 
	`ˇlc_bound
(
nbox_t
& 
nbound
);

132 
	`pick_›timum
(

133 c⁄° 
nbox_t
& 
key
,

134 
öt2_t
& 
ªt_¶Ÿ
);

136 
rc_t
 
	`ö£π
(c⁄° 
πªc_t
& 
tu∂e
);

137 
rc_t
 
	`ö£π
(

138 c⁄° 
nbox_t
& 
key
,

139 c⁄° 
cvec_t
& 
ñ
,

140 
shpid_t
 
chûd
 = 0);

142 
rc_t
 
	`ov_ªmove
(

143 
πªe_p
* 
tmp
,

144 c⁄° 
nbox_t
& 
key
,

145 c⁄° 
nbox_t
& 
bound
);

146 
boﬁ
 
	`£¨ch
(

147 c⁄° 
nbox_t
& 
key
,

148 
nbox_t
::
sob_cmp_t
 
˘y≥
,

149 
u_ch¨
 
sm≠
[],

150 
öt2_t
& 
num_¶Ÿ
,

151 
boﬁ
 
ö˛ude_nuŒs
,

152 c⁄° 
cvec_t
* 
ñ
 = 0,

153 c⁄° 
shpid_t
 
chûd
 = 0

155 
boﬁ
 
	`quîy
(

156 c⁄° 
nbox_t
& 
key
,

157 
nbox_t
::
sob_cmp_t
 
˘y≥
,

158 
u_ch¨
 
sm≠
[],

159 
öt2_t
& 
num_¶Ÿ
,

160 
boﬁ
 
ö˛ude_nuŒs
);

162 
	`¥öt
();

163 
	`døw
(
o°ªam
 &, 
nbox_t
 &);

164 
uöt2_t
 
	`ovp
();

172 
	sπ°k_íåy
 {

173 
πªe_ba£_p
 
∑ge
;

174 
öt2_t
 
idx
;

177 ˛as†
	cπ°k_t
 {

178 
public
:

179 íum { 
max_π°k_sz
 = 10 };

181 
¥iv©e
:

182 
π°k_íåy
 
_°k
[
max_π°k_sz
];

183 
öt2_t
 
_t›
;

185 
public
:

186 
NORET
 
	`π°k_t
();

187 
NORET
 ~
	`π°k_t
();

189 
	`push
(c⁄° 
πªe_ba£_p
& 
∑ge
, 
öt2_t
 
ödex
);

191 
π°k_íåy
& 
	`p›
();

192 
π°k_íåy
& 
	`t›
();

193 
π°k_íåy
& 
	`£c⁄d
();

194 
π°k_íåy
& 
	`bŸtom
();

196 
	`upd©e_t›
(
öt2_t
 
ödex
);

198 
	`dr›_Æl_but_œ°
();

200 
öt2_t
 
	$size
(Ë{  
_t›
; 
	}
}

202 
boﬁ
 
	$is_fuŒ
(Ë{  
_t›
 >
max_π°k_sz
; 
	}
}

203 
boﬁ
 
	$is_em±y
(Ë{  
_t›
 =0; 
	}
}

209 c⁄° 
	g·°k_chunk
 = 50;

211 ˛as†
	c·°k_t
 {

212 
	m¥iv©e
:

213 
öt2_t
 
_t›
;

214 
shpid_t
 
	m_°k
[
·°k_chunk
];

215 
shpid_t
* 
	m_ödúe˘
[
·°k_chunk
];

217 
	mpublic
:

218 
·°k_t
();

219 ~
·°k_t
();

221 
	$push
(c⁄° 
shpid_t
 
pid
) {

222 
	`w_as£π1
(! 
	`is_fuŒ
());

223 i‡(
_t›
 < 
·°k_chunk
Ë
_°k
[_t›++] = 
pid
;

225 
öt2_t
 
pos
 = 
_t›
 / 
·°k_chunk
 - 1;

226 
öt2_t
 
off
 = 
_t›
 % 
·°k_chunk
;

227 i‡(!
_ödúe˘
[
pos
])

228 
_ödúe˘
[
pos
] = 
√w
 
shpid_t
[
·°k_chunk
];

229 
_ödúe˘
[
pos
][
off
] = 
pid
;

230 
_t›
++;

234 
shpid_t
 
	$p›
() {

235 
	`w_as£π1
(! 
	`is_em±y
());

236 i‡(
_t›
 <
·°k_chunk
Ë 
_°k
[--_top];

238 
_t›
--;

239 
shpid_t
 
pid
 = 
_ödúe˘
[
_t›
/
·°k_chunk
-1][_top%ftstk_chunk];

240 i‡(
_t›
>=
·°k_chunk
 && _top%ftstk_chunk==0) {

241 
dñëe
 
_ödúe˘
[
_t›
/
·°k_chunk
 - 1];

242 
_ödúe˘
[
_t›
/
·°k_chunk
 - 1] = 0;

244  
pid
;

246 
	}
}

248 
em±y_Æl
();

250 
boﬁ
 
	$is_fuŒ
(Ë{  
_t›
 >
·°k_chunk
+·°k_chunk*·°k_chunk; 
	}
}

251 
boﬁ
 
	$is_em±y
(Ë{  
_t›
 =0; 
	}
}

254 ˛as†
	cπ_curs‹_t
 {

255 
	mpublic
:

256 
boﬁ
 
_ö˛ude_nuŒs
;

257 
	mnbox_t
::
sob_cmp_t
 
c⁄d
;

258 
nbox_t
 
	mqbox
;

259 
·°k_t
 
	mÊ
;

261 
öt2_t
 
	mnum_¶Ÿ
;

262 
öt2_t
 
	midx
;

263 
u_ch¨
 
	msm≠
[
πªe_p
::
sm≠_sz
];

264 
πªe_p
 
	m∑ge
;

266 
	$π_curs‹_t
(
boﬁ
 
ö˛ude_nuŒs
=
Ál£
Ë: 
	$_ö˛ude_nuŒs
(
ö˛ude_nuŒs
) {

267 
num_¶Ÿ
 = 
idx
 = 0; 
	`bm_zîo
(
sm≠
, (
u_ch¨
)*8);

269 
boﬁ
 
	$thªad_ˇn_dñëe
() const {

270 if(
∑ge
.
	`is_fixed
()ËÖage.
	`pö√d_by_me
();

271  
åue
;

272 
	}
}

275 
	swrk_bønch_t
 {

276 
nbox_t
 
	mª˘
;

277 
öt2_t
 
	midx
;

278 
	m¨ó
;

281 
ölöe
 
	gπ˘æ_t
&

282 
	gπªe_ba£_p
::
	$_hdr
()

284  * (
π˘æ_t
*Ë
keyed_p
::
	`gë_hdr
();

285 
	}
}

287 
ölöe
 c⁄° 
	gπ˘æ_t
&

288 
	gπªe_ba£_p
::
	$_hdr
() const

290  * (
π˘æ_t
*Ë
keyed_p
::
	`gë_hdr
();

291 
	}
}

296 
ölöe
 
	gπªe_ba£_p
::
	$roŸ
(
Õid_t
& 
r
) const

298 
r
 = 
	`_hdr
().
roŸ
;

299 
	}
}

301 
ölöe
 
shpid_t
 
	gπªe_ba£_p
::
	$roŸ
() const

303  
	`_hdr
().
roŸ
.
∑ge
;

304 
	}
}

306 
ölöe
 
	gπªe_ba£_p
::
	$Àvñ
() const

308  
	`_hdr
().
Àvñ
;

309 
	}
}

311 
ölöe
 
	gπªe_ba£_p
::
	$dim
() const

313  
	`_hdr
().
dim
;

314 
	}
}

316 
ölöe
 
boﬁ
 
	gπªe_ba£_p
::
	$is_Àaf
() const

318  
	`Àvñ
() == 1;

319 
	}
}

321 
ölöe
 
boﬁ
 
	gπªe_ba£_p
::
	$is_node
() const

323  ! 
	`is_Àaf
();

324 
	}
}

326 
ölöe
 
rc_t


327 
	gπªe_ba£_p
::
	$ö£π
(

328 c⁄° 
cvec_t
& 
key
,

329 c⁄° 
cvec_t
& 
ñ
,

330 
¶Ÿ
,

331 
shpid_t
 
chûd
)

333  
keyed_p
::
	`ö£π
(
key
, 
ñ
, 
¶Ÿ
, 
chûd
);

334 
	}
}

337 
ölöe
 
rc_t


338 
	gπªe_ba£_p
::
	$shi·
(
¢um
, 
πªe_ba£_p
* 
rsib
)

340 
	`w_as£π3
(
	`Àvñ
(Ë=
rsib
->level());

341  
keyed_p
::
	`shi·
(
¢um
, 
rsib
);

342 
	}
}

344 
ölöe
 c⁄° 
	gπªc_t
&

345 
	gπªe_ba£_p
::
	$ªc
(
idx
) const

347  (
πªc_t
&Ë
keyed_p
::
	`ªc
(
idx
);

348 
	}
}

350 
ölöe
 

351 
	gπªe_ba£_p
::
	$ƒecs
() const

353  
keyed_p
::
	`ƒecs
();

354 
	}
}

356 
ölöe
 
NORET


357 
	gπªe_p
::
	$πªe_p
(c⁄° 
πªe_ba£_p
& 
rbp
)

358 : 
	$πªe_ba£_p
(
rbp
)

360 
	}
}

362 
ölöe
 
NORET


363 
π°k_t
::
	$π°k_t
()

364 : 
	$_t›
(0)

366 
	}
}

368 
ölöe
 
NORET


369 
π°k_t
::~
	$π°k_t
()

371 
	}
}

373 
ölöe
 

374 
π°k_t
::
	$push
(c⁄° 
πªe_ba£_p
& 
∑ge
, 
öt2_t
 
ödex
)

376 
	`w_as£π1
(! 
	`is_fuŒ
());

377 
_°k
[
_t›
].
∑ge
 =Öage;

378 
_°k
[
_t›
++].
idx
 = 
ödex
;

379 
	}
}

381 
ölöe
 
	gπ°k_íåy
&

382 
	gπ°k_t
::
	$p›
()

384 
	`w_as£π1
(! 
	`is_em±y
());

385  
_°k
[--
_t›
];

386 
	}
}

388 
ölöe
 
	gπ°k_íåy
&

389 
	gπ°k_t
::
	$t›
()

391 
	`w_as£π1
(! 
	`is_em±y
());

392  
_°k
[
_t›
-1];

393 
	}
}

395 
ölöe
 
	gπ°k_íåy
&

396 
	gπ°k_t
::
	$£c⁄d
()

398 
	`w_as£π1
–
_t›
>1 );

399  
_°k
[
_t›
-2];

400 
	}
}

402 
ölöe
 
	gπ°k_íåy
&

403 
	gπ°k_t
::
	$bŸtom
()

405 
	`w_as£π1
(! 
	`is_em±y
());

406  
_°k
[0];

407 
	}
}

409 
ölöe
 

410 
	gπ°k_t
::
	$upd©e_t›
(
öt2_t
 
ödex
)

412 
	`w_as£π1
(! 
	`is_em±y
());

413 
_°k
[
_t›
-1].
idx
 = 
ödex
;

414 
	}
}

	@src/sm/scan.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SCAN_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


62 
	~<sm_öt_4.h
>

63 
	~<sm.h
>

64 
	~<lgªc.h
>

65 
	~<pö.h
>

66 
	~<sˇn.h
>

67 
	~<bf_¥e„tch.h
>

68 
	~<btcurs‹.h
>

69 
	~<πªe_p.h
>

71 #i‡
W_DEBUG_LEVEL
 > 1

72 
ölöe
 
	gpö_i
::
	$_£t_l¢_f‹_sˇn
() {

73 
_hdr_l¢
 = 
	`_hdr_∑ge
().
	`l¢
();

74 
	}
}

92 
	#SCAN_METHOD_PROLOGUE1
 \

94 if(
_îr‹_occuºed
.
	`is_îr‹
()) \

95  
	`RC
(
_îr‹_occuºed
.
	`îr_num
()); \

96 } 0)

	)

101 
	gfûe_p
& 
	g≠≥nd_fûe_i
::
	$_∑ge
()

103  *
Æig√d_ˇ°
<
fûe_p
>(
_∑ge_Æüs
);

104 
	}
}

116 
	gsˇn_ödex_i
::
	$sˇn_ödex_i
(

117 c⁄° 
°id_t
& 
°id_
,

118 
cmp_t
 
c1
,

119 c⁄° 
cvec_t
& 
bound1_
,

120 
cmp_t
 
c2
,

121 c⁄° 
cvec_t
& 
bound2_
,

122 
boﬁ
 
ö˛ude_nuŒs
,

123 
c⁄cuºícy_t
 
cc
,

124 
lock_mode_t
 
mode
,

125 c⁄° 
boﬁ
 
bIgn‹eL©ches


127 : 
	`x˘_dïídít_t
(
	`x˘
()),

128 
	`_°id
(
°id_
),

129 
	`¡y≥
(
ss_m
::
t_bad_ndx_t
),

130 
	`_eof
(
Ál£
),

131 
	`_îr‹_occuºed
(),

132 
	`_btcurs‹
(0),

133 
	`_skù_nuŒs
–! 
ö˛ude_nuŒs
 ),

134 
	`_cc
(
cc
),

135 
	$_bIgn‹eL©ches
(
bIgn‹eL©ches
)

137 
	`INIT_SCAN_PROLOGUE_RC
(
sˇn_ödex_i
::sˇn_ödex_i, 
¥ﬁogue_rc_t
::
ªad_⁄ly
, 1);

139 
	`_öô
(
c1
, 
bound1_
, 
c2
, 
bound2_
, 
mode
, 
bIgn‹eL©ches
);

140 
	`ªgi°î_me
();

141 
	}
}

144 
	gsˇn_ödex_i
::~
	$sˇn_ödex_i
()

146 
	`föish
();

147 
	}
}

160 
	gsˇn_ödex_i
::
	$_öô
(

161 
cmp_t
 
c⁄d
,

162 c⁄° 
cvec_t
& 
bound
,

163 
cmp_t
 
c2
,

164 c⁄° 
cvec_t
& 
b2
,

165 
lock_mode_t
 
mode
,

166 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

168 
_föished
 = 
Ál£
;

173 
lock_mode_t
 
ödex_lock_mode
;

174 
c⁄cuºícy_t
 
key_lock_Àvñ
;

181 
_cc
) {

182 
t_cc_n⁄e
:

183 
ödex_lock_mode
 = 
lock_m
::
∑ª¡_mode
[
mode
];

184 
key_lock_Àvñ
 = 
t_cc_n⁄e
;

187 
t_cc_im
:

188 
t_cc_kvl
:

189 
ödex_lock_mode
 = 
lock_m
::
∑ª¡_mode
[
mode
];

190 
key_lock_Àvñ
 = 
_cc
;

193 
t_cc_modkvl
:

194 
ödex_lock_mode
 = 
lock_m
::
∑ª¡_mode
[
mode
];

197 
key_lock_Àvñ
 = 
t_cc_n⁄e
;

200 
t_cc_fûe
:

201 
ödex_lock_mode
 = 
mode
;

202 
key_lock_Àvñ
 = 
t_cc_n⁄e
;

204 
t_cc_≠≥nd
:

206 
_îr‹_occuºed
 = 
	`RC
(
eBADLOCKMODE
);

214 
tid
 = 
	`x˘
()->
	`tid
();

219 
sdesc_t
* 
sd
 = 0;

220 
_îr‹_occuºed
 = 
dú
->
	`ac˚ss
(
_°id
, 
sd
, 
ödex_lock_mode
);

221 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

225 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
) {

226 
_îr‹_occuºed
 = 
	`RC
(
eBADSTORETYPE
);

230 if((
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
 !
key_lock_Àvñ
) {

231 (
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
) {

232 
t_cc_n⁄e
:

236 
t_cc_modkvl
:

238 if(
_cc
 =
t_cc_n⁄e
 || _c¯=
t_cc_fûe
) {

239 
key_lock_Àvñ
 = 
t_cc_n⁄e
;

241 
key_lock_Àvñ
 = (
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
;

245 
t_cc_im
:

246 
t_cc_kvl
:

249 if(
_cc
 =
t_cc_fûe
) {

250 
key_lock_Àvñ
 = 
t_cc_fûe
;

253 
key_lock_Àvñ
 = (
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
;

257 
_îr‹_occuºed
 = 
	`RC
(
eBADCCLEVEL
);

265 
¡y≥
 = (
ndx_t
Ë
sd
->
	`söfo
().ntype) {

266 
t_bad_ndx_t
:

267 
_îr‹_occuºed
 = 
	`RC
(
eBADNDXTYPE
);

270 
t_båì
:

271 
t_uni_båì
:

273 
_btcurs‹
 = 
√w
 
	`bt_curs‹_t
(!
_skù_nuŒs
);

274 i‡(! 
_btcurs‹
) {

275 
_îr‹_occuºed
 = 
	`RC
(
eOUTOFMEMORY
);

278 
boﬁ
 
ö˛usive
 = (
c⁄d
 =
eq
 || c⁄d =
ge
 || c⁄d =
À
);

280 
cvec_t
* 
ñem
 = 0;

282 if(
_btcurs‹
->
	`is_backw¨d
()) {

283 
ñem
 = &(
ö˛usive
 ? 
cvec_t
::
pos_öf
 : cvec_t::
√g_öf
);

285 
ñem
 = &(
ö˛usive
 ? 
cvec_t
::
√g_öf
 : cvec_t::
pos_öf
);

288 
_îr‹_occuºed
 = 
bt
->
	`„tch_öô
(*
_btcurs‹
, 
sd
->
	`roŸ
(),

289 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

290 
¡y≥
 =
t_uni_båì
,

291 
key_lock_Àvñ
,

292 
bound
, *
ñem
,

293 
c⁄d
, 
c2
, 
b2
, 
mode
);

294 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

306 
t_mrbåì
:

307 
t_uni_mrbåì
:

308 
t_mrbåì_l
:

309 
t_uni_mrbåì_l
:

310 
t_mrbåì_p
:

311 
t_uni_mrbåì_p
:

313 
_btcurs‹
 = 
√w
 
	`bt_curs‹_t
(!
_skù_nuŒs
);

314 i‡(! 
_btcurs‹
) {

315 
_îr‹_occuºed
 = 
	`RC
(
eOUTOFMEMORY
);

318 
boﬁ
 
ö˛usive
 = (
c⁄d
 =
eq
 || c⁄d =
ge
 || c⁄d =
À
);

320 
cvec_t
* 
ñem
 = 0;

322 if(
_btcurs‹
->
	`is_backw¨d
()) {

323 
ñem
 = &(
ö˛usive
 ? 
cvec_t
::
pos_öf
 : cvec_t::
√g_öf
);

325 
ñem
 = &(
ö˛usive
 ? 
cvec_t
::
√g_öf
 : cvec_t::
pos_öf
);

329 
ve˘‹
<
Õid_t
> 
roŸs
;

330 
cvec_t
* 
bound_key
;

331 
cvec_t
* 
b2_key
;

332 
_îr‹_occuºed
 = 
bt
->
	`_s¸ambÀ_key
(
bound_key
, 
bound
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
);

333 * 
bound_sc
 = (*Ë
	`mÆloc
((*
bound_key
).
	`size
());

334 (*
bound_key
).
	`c›y_to
(
bound_sc
, (*bound_key).
	`size
());

335 
cvec_t
 
	`b1
(
bound_sc
, (*
bound_key
).
	`size
());

336 
_îr‹_occuºed
 = 
bt
->
	`_s¸ambÀ_key
(
b2_key
, 
b2
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
);

338 if(&
bound
 =&
vec_t
::
√g_öf
 && &
b2
 =&vec_t::
pos_öf
) {

339 
_îr‹_occuºed
 = 
sd
->
	`∑πôi⁄s
().
	`gëAŒP¨tôi⁄s
(
roŸs
);

341 
_îr‹_occuºed
 = 
sd
->
	`∑πôi⁄s
().
	`gëP¨tôi⁄s
(
b1
, *
b2_key
, 
roŸs
);

343 
_îr‹_occuºed
 = 
bt
->
	`mr_„tch_öô
(*
_btcurs‹
, 
roŸs
,

344 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

345 
¡y≥
 =
t_uni_båì
,

346 
key_lock_Àvñ
,

347 
b1
, *
ñem
,

348 
c⁄d
, 
c2
, *
b2_key
, 
mode
,

349 
bIgn‹eL©ches
);

350 
	`‰ì
(
bound_sc
);

352 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

366 
	`W_FATAL
(
eINTERNAL
);

369 
	}
}

384 
	gsˇn_ödex_i
::
	$x˘_°©e_ch™ged
(

385 
x˘_°©e_t
 ,

386 
x˘_°©e_t
 
√w_°©e
)

388 i‡(
√w_°©e
 =
x˘_ab‹tög
 ||Çew_°©ê=
x˘_commôtög
) {

389 
	`föish
();

391 
	}
}

402 
	gsˇn_ödex_i
::
	$föish
()

404 
_eof
 = 
åue
;

405 
¡y≥
) {

406 
t_båì
:

407 
t_uni_båì
:

408 
t_mrbåì
:

409 
t_uni_mrbåì
:

410 
t_mrbåì_l
:

411 
t_uni_mrbåì_l
:

412 
t_mrbåì_p
:

413 
t_uni_mrbåì_p
:

414 i‡(
_btcurs‹
) {

415 
dñëe
 
_btcurs‹
;

416 
_btcurs‹
 = 0;

419 
t_bad_ndx_t
:

423 
	`W_FATAL
(
eINTERNAL
);

425 
	}
}

436 
rc_t


437 
	gsˇn_ödex_i
::
	$_„tch
(

438 
vec_t
* 
key
,

439 
smsize_t
* 
kÀn
,

440 
vec_t
* 
ñ
,

441 
smsize_t
* 
ñí
,

442 
boﬁ
 
skù
)

445 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

446 if(
_îr‹_occuºed
.
	`îr_num
(Ë=
eBADCMPOP
) {

447 
_eof
 = 
åue
;

448  
RCOK
;

450  
	`w_rc_t
(
_îr‹_occuºed
);

453 
	`SM_PROLOGUE_RC
(
sˇn_ödex_i
::
_„tch
, 
ö_x˘
, 
ªad_⁄ly
, 0);

458 i‡(
_föished
) {

459  
	`RC
(
eBADSCAN
);

461 i‡(
_eof
) {

462  
	`RC
(
eEOF
);

464 
	`w_as£π1
(
	`x˘
()->
	`tid
(Ë=
tid
);

465 
¡y≥
) {

466 
t_båì
:

467 
t_uni_båì
:

468 
t_mrbåì
:

469 
t_uni_mrbåì
:

470 
t_mrbåì_l
:

471 
t_uni_mrbåì_l
:

472 
t_mrbåì_p
:

473 
t_uni_mrbåì_p
:

474 i‡(
skù
) {

479 
	`DBG
(<<"");

480 
	`W_DO
–
bt
->
	`„tch
(*
_btcurs‹
, 
_bIgn‹eL©ches
) );

481 if(
_btcurs‹
->
	`eof
()) ;

482 } 
_skù_nuŒs
 && (
_btcurs‹
->
	`kÀn
() == 0));

486 
t_bad_ndx_t
:

488 
	`W_FATAL
(
eINTERNAL
);

494 i‡(
_btcurs‹
->
	`eof
()) {

495 
	`DBG
(<<"eof");

496 
_eof
 = 
åue
;

498 
	`w_as£π3
(
_btcurs‹
->
	`key
());

499 
	`DBG
(<<"notÉof");

500 i‡(
kÀn
Ë*kÀ¿
_btcurs‹
->
	`kÀn
();

501 i‡(
ñí
Ë*ñí = 
_btcurs‹
->
	`ñí
();

503 
boﬁ
 
k_ok
 = ((
key
 =0Ë|| key->
	`size
(Ë>(
size_t
)
_btcurs‹
->
	`kÀn
());

505 
boﬁ
 
e_ok
 = ((
ñ
 =0Ë|| (ñ->
	`size
(Ë>(
size_t
)
_btcurs‹
->
	`ñí
()) );

507 i‡(! (
e_ok
 && 
k_ok
)) {

508  
	`RC
(
eRECWONTFIT
);

511 i‡(
key
) {

512 
key
->
	`c›y_‰om
(
_btcurs‹
->
	`key
(), _btcurs‹->
	`kÀn
());

514 i‡(
ñ
) {

515 
ñ
->
	`c›y_‰om
(
_btcurs‹
->
	`ñem
(), _btcurs‹->
	`ñí
());

519  
RCOK
;

520 
	}
}

523 
	gsˇn_π_i
::
	$sˇn_π_i
(c⁄° 
°id_t
& 
°id_
,

524 
nbox_t
::
sob_cmp_t
 
c
,

525 c⁄° 
nbox_t
& 
qbox
,

526 
boﬁ
 
ö˛ude_nuŒs
,

527 
c⁄cuºícy_t
 
cc
)

528 : 
	`x˘_dïídít_t
(
	`x˘
()), 
	`°id
(
°id_
), 
	`¡y≥
(
t_bad_ndx_t
),

529 
	`_eof
(
Ál£
), 
	`_îr‹_occuºed
(),

530 
	`_curs‹
(0), 
	`_skù_nuŒs
–!
ö˛ude_nuŒs
 ), 
	$_cc
(
cc
)

532 
	`INIT_SCAN_PROLOGUE_RC
(
sˇn_π_i
::scan_rt_i,

533 
cc
 =
t_cc_≠≥nd
? 
¥ﬁogue_rc_t
::
ªad_wrôe
 :Örﬁogue_rc_t::
ªad_⁄ly
,

535 
	`_öô
(
c
, 
qbox
);

536 
	`ªgi°î_me
();

537 
	}
}

540 
	gsˇn_π_i
::~
	$sˇn_π_i
()

542 
	`föish
();

543 
	}
}

546 
	gsˇn_π_i
::
	$föish
()

548 
_eof
 = 
åue
;

549 i‡(
_curs‹
 ) {

550 if(
_curs‹
->
	`thªad_ˇn_dñëe
()) {

551 
dñëe
 
_curs‹
;

552 
_curs‹
 = 0;

555 
	}
}

557 
	gsˇn_π_i
::
	$_öô
(
nbox_t
::
sob_cmp_t
 
c
, c⁄°Çbox_t& 
qbox
)

559 
_föished
 = 
Ál£
;

561 
tid
 = 
	`x˘
()->
	`tid
();

564 
lock_mode_t
 
ödex_lock_mode
;

565 
_cc
) {

566 
t_cc_n⁄e
:

567 
ödex_lock_mode
 = 
IS
;

569 
t_cc_∑ge
:

570 
ödex_lock_mode
 = 
IS
;

572 
t_cc_fûe
:

573 
ödex_lock_mode
 = 
SH
;

575 
t_cc_≠≥nd
:

577 
_îr‹_occuºed
 = 
	`RC
(
eBADLOCKMODE
);

582 
sdesc_t
* 
sd
 = 0;

583 
_îr‹_occuºed
 = 
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_lock_mode
);

584 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

588 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
) {

589 
_îr‹_occuºed
 = 
	`RC
(
eBADSTORETYPE
);

593 
_curs‹
 = 
√w
 
	`π_curs‹_t
(!
_skù_nuŒs
);

594 
	`w_as£π1
(
_curs‹
);

595 
_curs‹
->
qbox
 = qbox;

596 
_curs‹
->
c⁄d
 = 
c
;

598 
¡y≥
 = (
ndx_t
Ë
sd
->
	`söfo
().ntype) {

599 
t_bad_ndx_t
:

600 
_îr‹_occuºed
 = 
	`RC
(
eBADNDXTYPE
);

602 
t_πªe
:

603 
_îr‹_occuºed
 = 
π
->
	`„tch_öô
(
sd
->
	`roŸ
(), *
_curs‹
);

604 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

609 
	`W_FATAL
(
eINTERNAL
);

611 
	}
}

613 
rc_t


614 
	gsˇn_π_i
::
	$_„tch
(
nbox_t
& 
key
, * 
ñ
, 
smsize_t
& 
ñí
, 
boﬁ
& 
eof
, boﬁ 
skù
)

616 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

617  
_îr‹_occuºed
;

620 
	`SM_PROLOGUE_RC
(
sˇn_π_i
::
_„tch
, 
ö_x˘
, 
ªad_⁄ly
, 0);

622 i‡(
_föished
) {

623  
	`RC
(
eBADSCAN
);

626 
	`w_as£π1
(
	`x˘
()->
	`tid
(Ë=
tid
);

628 
¡y≥
) {

629 
t_πªe
:

630 
_îr‹_occuºed
 = 
π
->
	`„tch
(*
_curs‹
, 
key
, 
ñ
, 
ñí
, 
_eof
, 
skù
);

631 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

632  
	`w_rc_t
(
_îr‹_occuºed
);

635 
t_bad_ndx_t
:

637 
	`W_FATAL
(
eINTERNAL
);

639 
eof
 = 
_eof
;

641  
RCOK
;

642 
	}
}

655 
	gsˇn_π_i
::
	$x˘_°©e_ch™ged
(

656 
x˘_°©e_t
 ,

657 
x˘_°©e_t
 
√w_°©e
)

659 i‡(
√w_°©e
 =
x˘_ab‹tög
 ||Çew_°©ê=
x˘_commôtög
) {

660 
	`föish
();

662 
	}
}

665 
	gsˇn_fûe_i
::
	$sˇn_fûe_i
(

666 c⁄° 
°id_t
& 
°id_
, c⁄° 
rid_t
& 
°¨t
,

667 
c⁄cuºícy_t
 
cc
, 
boﬁ
 
¥e
,

668 
lock_mode_t
,

669 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

670 : 
	`x˘_dïídít_t
(
	`x˘
()),

671 
	`°id
(
°id_
),

672 
	`cuº_rid
(
°¨t
),

673 
	`_eof
(
Ál£
),

674 
	`_cc
(
cc
),

675 
	`_bIgn‹eL©ches
(
bIgn‹eL©ches
),

676 
	`_do_¥e„tch
(
¥e
),

677 
	$_¥e„tch
(0)

679 
	`INIT_SCAN_PROLOGUE_RC
(
sˇn_fûe_i
::scan_file_i,

680 
cc
 =
t_cc_≠≥nd
 ? 
¥ﬁogue_rc_t
::
ªad_wrôe
 :Örﬁogue_rc_t::
ªad_⁄ly
,

684 
	`W_IGNORE
(
	`_öô
(
cc
 =
t_cc_≠≥nd
));

685 #i‡
W_DEBUG_LEVEL
 > 1

686 (Ë
_curs‹
.
	`is_möe
();

689 
	`ªgi°î_me
();

690 
	}
}

692 
	gsˇn_fûe_i
::
	$sˇn_fûe_i
(c⁄° 
°id_t
& 
°id_
, 
c⁄cuºícy_t
 
cc
,

693 
boﬁ
 
¥e
,

694 
lock_mode_t
,

695 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

696 : 
	`x˘_dïídít_t
(
	`x˘
()),

697 
	`°id
(
°id_
),

698 
	`_eof
(
Ál£
),

699 
	`_cc
(
cc
),

700 
	`_bIgn‹eL©ches
(
bIgn‹eL©ches
),

701 
	`_do_¥e„tch
(
¥e
),

702 
	$_¥e„tch
(0)

704 
	`INIT_SCAN_PROLOGUE_RC
(
sˇn_fûe_i
::scan_file_i,

705 
cc
 =
t_cc_≠≥nd
?
¥ﬁogue_rc_t
::
ªad_wrôe
:¥ﬁogue_rc_t::
ªad_⁄ly
, 0);

708 
	`W_IGNORE
(
	`_öô
(
cc
 =
t_cc_≠≥nd
));

709 #i‡
W_DEBUG_LEVEL
 > 1

710 (Ë
_curs‹
.
	`is_möe
();

713 
	`ªgi°î_me
();

714 
	}
}

716 
	gsˇn_fûe_i
::~
	$sˇn_fûe_i
()

718 #i‡
W_DEBUG_LEVEL
 > 1

719 (Ë
_curs‹
.
	`is_möe
();

722 
	`föish
();

723 
	}
}

728 
rc_t
 
	gsˇn_fûe_i
::
	$_öô
(
boﬁ
 
f‹_≠≥nd
)

732 
this
->
_¥e„tch
 = 0;

734 
boﬁ
 
eof
 = 
Ál£
;

736 
tid
 = 
	`x˘
()->
	`tid
();

738 
sdesc_t
* 
sd
 = 0;

743 
lock_mode_t
 
mode
 = 
NL
;

745 
_cc
) {

746 
t_cc_n⁄e
:

747 
mode
 = 
IS
;

748 
_∑ge_lock_mode
 = 
NL
;

749 
_ªc_lock_mode
 = 
NL
;

752 
t_cc_ªc‹d
:

765 
mode
 = 
IS
;

766 
_∑ge_lock_mode
 = 
SH
;

767 
_ªc_lock_mode
 = 
NL
;

770 
t_cc_∑ge
:

771 
mode
 = 
IS
;

772 
_∑ge_lock_mode
 = 
SH
;

773 
_ªc_lock_mode
 = 
NL
;

776 
t_cc_≠≥nd
:

777 
mode
 = 
IX
;

778 
_∑ge_lock_mode
 = 
EX
;

779 
_ªc_lock_mode
 = 
EX
;

782 
t_cc_fûe
:

783 
mode
 = 
SH
;

784 
_∑ge_lock_mode
 = 
NL
;

785 
_ªc_lock_mode
 = 
NL
;

789 
_îr‹_occuºed
 = 
	`RC
(
eBADLOCKMODE
);

790  
	`w_rc_t
(
_îr‹_occuºed
);

794 
	`DBGTHRD
(<<"sˇn_fûe_òˇŒögác˚s†f‹ stid " << 
°id
);

795 
_îr‹_occuºed
 = 
dú
->
	`ac˚ss
(
°id
, 
sd
, 
mode
);

796 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

797  
	`w_rc_t
(
_îr‹_occuºed
);

800 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

801  
	`w_rc_t
(
_îr‹_occuºed
);

806 i‡(
cuº_rid
 =
rid_t
::
nuŒ
) {

807 if(
f‹_≠≥nd
) {

808 
_îr‹_occuºed
 = 
fi
->
	`œ°_∑ge
(
°id
,

809 
cuº_rid
.
pid
, 
NULL
 );

811 
_îr‹_occuºed
 = 
fi
->
	`fú°_∑ge
(
°id
,

812 
cuº_rid
.
pid
, 
NULL
 );

815 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

816  
	`w_rc_t
(
_îr‹_occuºed
);

818 
cuº_rid
.
¶Ÿ
 = 0;

823 i‡(
cuº_rid
.
¶Ÿ
 > 0 && !
f‹_≠≥nd
) curr_rid.slot--;

826 i‡(
_∑ge_lock_mode
 !
NL
) {

827 
	`w_as£π3
(
cuº_rid
.
pid
.
∑ge
 != 0);

828 
_îr‹_occuºed
 = 
lm
->
	`lock
(
cuº_rid
.
pid
, 
_∑ge_lock_mode
,

829 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
);

830 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

831  
	`w_rc_t
(
_îr‹_occuºed
);

836 
_√xt_pid
 = 
cuº_rid
.
pid
;

837 
_îr‹_occuºed
 = 
fi
->
	`√xt_∑ge
(
_√xt_pid
, 
eof
, 
NULL
 );

838 if(
f‹_≠≥nd
) {

839 
	`w_as£π3
(
eof
);

840 } i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

841  
	`w_rc_t
(
_îr‹_occuºed
);

843 i‡(
eof
) {

844 
_√xt_pid
 = 
Õid_t
::
nuŒ
;

847 if(
smÀvñ_0
::
do_¥e„tch
 && 
this
->
_do_¥e„tch
 && !
f‹_≠≥nd
) {

849 
this
->
_¥e„tch
 = 
√w
 
bf_¥e„tch_thªad_t
;

850 i‡(
this
->
_¥e„tch
) {

851 
	`W_COERCE
–
this
->
_¥e„tch
->
	`f‹k
());

853 
	`DBGTHRD
(<<"Ñeque°ög fú°Öage: " << 
cuº_rid
.
pid
);

855 
	`W_COERCE
(
this
->
_¥e„tch
->
	`ªque°
(
cuº_rid
.
pid
,

856 
pö_i
::
	`lock_to_œtch
(
_∑ge_lock_mode
, 
_bIgn‹eL©ches
)));

859 #i‡
W_DEBUG_LEVEL
 > 1

860 (Ë
_curs‹
.
	`is_möe
();

863  
RCOK
;

864 
	}
}

866 
rc_t


867 
	gsˇn_fûe_i
::
	$√xt
(
pö_i
*& 
pö_±r
, 
smsize_t
 
°¨t
, 
boﬁ
& 
eof
)

870 #i‡
W_DEBUG_LEVEL
 > 1

871 (Ë
_curs‹
.
	`is_möe
();

874  
	`_√xt
(
pö_±r
, 
°¨t
, 
eof
);

875 
	}
}

877 
rc_t


878 
	gsˇn_fûe_i
::
	$_√xt
(
pö_i
*& 
pö_±r
, 
smsize_t
 
°¨t
, 
boﬁ
& 
eof
)

880 
SCAN_METHOD_PROLOGUE1
;

881 
fûe_p
* 
cuº
;

883 
	`w_as£π1
(
	`x˘
()->
	`tid
(Ë=
tid
);

886 !
_eof
) {

887 #i‡
W_DEBUG_LEVEL
 > 1

888 (Ë
_curs‹
.
	`is_möe
();

891 i‡(!
_curs‹
.
	`pö√d
()) {

893 
rid_t
 
ãmp_rid
 = 
cuº_rid
;

894 
ãmp_rid
.
¶Ÿ
 = 0;

895 if(
this
->
_¥e„tch
) {

897 
	`DBGTHRD
(<<" fëchögÖage: " << 
ãmp_rid
.
pid
);

898 
_îr‹_occuºed
 = 
this
->
_¥e„tch
->
	`„tch
(
ãmp_rid
.
pid
,

899 
_curs‹
.
	`_hdr_∑ge
());

900 if(!
_îr‹_occuºed
.
	`is_îr‹
()) {

901 if(
_√xt_pid
 !
Õid_t
::
nuŒ
) {

903 i‡(
_∑ge_lock_mode
 !
NL
) {

904 
	`DBGTHRD
(<<"Üockög " << 
_√xt_pid
);

905 
	`w_as£π3
(
_√xt_pid
.
∑ge
 != 0);

906 
_îr‹_occuºed
 = 
lm
->
	`lock
(
_√xt_pid
,

907 
_∑ge_lock_mode
,

908 
t_l⁄g
,

909 
WAIT_SPECIFIED_BY_XCT
);

910 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

911  
	`w_rc_t
(
_îr‹_occuºed
);

914 
	`DBGTHRD
(<<"Ñeque°ögÇexà∑ge: " << 
_√xt_pid
);

915 
	`W_COERCE
(
this
->
_¥e„tch
->
	`ªque°
(
_√xt_pid
,

916 
pö_i
::
	`lock_to_œtch
(
_∑ge_lock_mode
,

917 
_bIgn‹eL©ches
)));

921 
_îr‹_occuºed
 = 
_curs‹
.
	`_pö
(
ãmp_rid
, 
°¨t
,

922 
_ªc_lock_mode
);

923 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

924  
	`w_rc_t
(
_îr‹_occuºed
);

926 
_curs‹
.
	`_£t_l¢_f‹_sˇn
();

928 #i‡
W_DEBUG_LEVEL
 > 1

929 (Ë
_curs‹
.
	`is_möe
();

932 
cuº
 = 
_curs‹
.
	`_gë_hdr_∑ge_no_l¢_check
();

933 #i‡
W_DEBUG_LEVEL
 > 1

934 (Ë
_curs‹
.
	`is_möe
();

938 
¶Ÿid_t
 
¶Ÿ
;

941 
¶Ÿ
 = 
cuº
->
	`√xt_¶Ÿ
(
cuº_rid
.slot);

942 
cuº_rid
.
¶Ÿ
 = slot;

943 if(
_ªc_lock_mode
 !
NL
) {

944 
	`w_as£π3
(
cuº_rid
.
pid
.
∑ge
 != 0);

945 
_îr‹_occuºed
 = 
lm
->
	`lock
(
cuº_rid
,

946 
_ªc_lock_mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

947 i‡(
_îr‹_occuºed
.
	`is_îr‹
())

949 i‡(
_îr‹_occuºed
.
	`îr_num
(Ë!
eLOCKTIMEOUT
) {

950  
	`w_rc_t
(
_îr‹_occuºed
);

957 
_curs‹
.
	`u≈ö
();

958 
_îr‹_occuºed
 = 
RCOK
;

959 
_îr‹_occuºed
.
	`ª£t
();

963 
cuº_rid
.
¶Ÿ
 = slot;

965 #i‡
W_DEBUG_LEVEL
 > 1

966 (Ë
_curs‹
.
	`is_möe
();

969 i‡(
cuº_rid
.
¶Ÿ
 == 0)

972 #i‡
W_DEBUG_LEVEL
 > 1

973 (Ë
_curs‹
.
	`is_möe
();

976 
_curs‹
.
	`u≈ö
();

977 
cuº_rid
.
pid
 = 
_√xt_pid
;

978 i‡(
_√xt_pid
 =
Õid_t
::
nuŒ
) {

979 
_eof
 = 
åue
;

981 if(
this
->
_¥e„tch
 == 0) {

982 i‡(
_∑ge_lock_mode
 !
NL
) {

983 
	`DBGTHRD
(<<"Üockög " << 
cuº_rid
.
pid
);

984 
_îr‹_occuºed
 = 
lm
->
	`lock
(
cuº_rid
.
pid
,

985 
_∑ge_lock_mode
,

986 
t_l⁄g
,

987 
WAIT_SPECIFIED_BY_XCT
);

988 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

989  
	`w_rc_t
(
_îr‹_occuºed
);

1000 
	`DBGTHRD
(<<"ÜoˇtögÖagêa·î " << 
_√xt_pid
);

1001 
boﬁ
 
tmp_eof
;

1002 
_îr‹_occuºed
 = 
fi
->
	`√xt_∑ge
(
_√xt_pid
, 
tmp_eof
, 
NULL
 );

1003 i‡(
_îr‹_occuºed
.
	`is_îr‹
()) {

1004  
	`w_rc_t
(
_îr‹_occuºed
);

1006 i‡(
tmp_eof
) {

1007 
_√xt_pid
 = 
Õid_t
::
nuŒ
;

1009 
	`DBGTHRD
(<<"Çexà∑gêi†" << 
_√xt_pid
);

1011 #i‡
W_DEBUG_LEVEL
 > 1

1012 (Ë
_curs‹
.
	`is_möe
();

1017 
_îr‹_occuºed
 = 
_curs‹
.
	`_pö
(
cuº_rid
, 
°¨t
, 
_ªc_lock_mode
);

1018 if(
_îr‹_occuºed
.
	`is_îr‹
()) {

1019  
	`w_rc_t
(
_îr‹_occuºed
);

1021 
_curs‹
.
	`_£t_l¢_f‹_sˇn
();

1025 #i‡
W_DEBUG_LEVEL
 > 1

1026 (Ë
_curs‹
.
	`is_möe
();

1030 
eof
 = 
_eof
;

1032 #i‡
W_DEBUG_LEVEL
 > 1

1033 (Ë
_curs‹
.
	`is_möe
();

1037 
pö_±r
 = &
_curs‹
;

1038  
RCOK
;

1039 
	}
}

1041 
rc_t


1042 
	gsˇn_fûe_i
::
	$√xt_∑ge
(
pö_i
*& 
pö_±r
, 
smsize_t
 
°¨t
, 
boﬁ
& 
eof
)

1044 
SCAN_METHOD_PROLOGUE1
;

1045 
	`SCAN_METHOD_PROLOGUE
(
sˇn_fûe_i
::
√xt_∑ge
, 
ªad_⁄ly
, 1);

1047 #i‡
W_DEBUG_LEVEL
 > 1

1048 (Ë
_curs‹
.
	`is_möe
();

1058 i‡(
_curs‹
.
	`pö√d
()) {

1059 
cuº_rid
.
¶Ÿ
 = 
_curs‹
.
	`_hdr_∑ge
().
	`num_¶Ÿs
()-1;

1061  
	`_√xt
(
pö_±r
, 
°¨t
, 
eof
);

1062 
	}
}

1064 
	gsˇn_fûe_i
::
	$föish
()

1069 #i‡
W_DEBUG_LEVEL
 > 1

1070 (Ë
_curs‹
.
	`is_möe
();

1073 
_eof
 = 
åue
;

1075 if(
_curs‹
.
	`is_möe
()) {

1079 
_curs‹
.
	`u≈ö
();

1082 i‡(
this
->
_¥e„tch
) {

1083 
this
->
_¥e„tch
->
	`ªtúe
();

1084 
dñëe
 
this
->
_¥e„tch
;

1085 
this
->
_¥e„tch
 = 0;

1087 
	}
}

1100 
	gsˇn_fûe_i
::
	$x˘_°©e_ch™ged
(

1101 
x˘_°©e_t
 ,

1102 
x˘_°©e_t
 
√w_°©e
)

1104 i‡(
√w_°©e
 =
x˘_ab‹tög
 ||Çew_°©ê=
x˘_commôtög
) {

1105 
	`föish
();

1107 
	}
}

1109 
	g≠≥nd_fûe_i
::
	$≠≥nd_fûe_i
(c⁄° 
°id_t
& 
°id_
)

1110 : 
	$sˇn_fûe_i
(
°id_
, 
t_cc_≠≥nd
)

1112 
	`INIT_SCAN_PROLOGUE_RC
(
≠≥nd_fûe_i
::≠≥nd_fûe_i, 
¥ﬁogue_rc_t
::
ªad_wrôe
, 0);

1113 
	`_öô_c⁄°ru˘‹
();

1114 
	`W_IGNORE
(
	`_öô
(
åue
));

1115 if(
_îr‹_occuºed
.
	`is_îr‹
()) ;

1116 
_îr‹_occuºed
 = 
lm
->
	`lock
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
);

1117 if(
_îr‹_occuºed
.
	`is_îr‹
()) ;

1118 
sdesc_t
 *
sd
;

1119 
_îr‹_occuºed
 = 
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IX
);

1123 
_ˇched_sdesc
 = *
sd
;

1124 
	`w_as£π3
–!
	`_∑ge
().
	`is_fixed
() );

1125 
	}
}

1128 
	g≠≥nd_fûe_i
::
	$_öô_c⁄°ru˘‹
()

1130 
	`FUNC
(
≠≥nd_fûe_i
::
_öô_c⁄°ru˘‹
);

1132 
	`w_as£π3
((
_∑ge_Æüs
Ë>(
fûe_p
Ë+ 
	`__Æignof__
(file_p));

1134 
	`√w
 (&
	`_∑ge
()Ë
	`fûe_p
();

1135 
	`w_as£π3
–!
	`_∑ge
().
	`is_fixed
() );

1137 
	}
}

1139 
	g≠≥nd_fûe_i
::~
	$≠≥nd_fûe_i
()

1141 
	`FUNC
(
≠≥nd_fûe_i
::~append_file_i);

1142 if(
	`_∑ge
().
	`is_fixed
()) {

1143 
	`_∑ge
().
	`unfix
();

1145 
	`DBG
–<< (
	`_∑ge
().
	`is_fixed
()? "IS FIXED-- ERROR" : "OK") );

1146 
	`_∑ge
().
	`de°ru˘‹
();

1149 
	`DBGTHRD
(<<"invalidating cached descr");

1150 
_ˇched_sdesc
.
	`övÆid©e_sdesc
();

1151 
	`föish
();

1152 
	}
}

1154 
rc_t


1155 
	g≠≥nd_fûe_i
::
	$√xt
(
pö_i
*&, 
smsize_t
, 
boﬁ
& )

1157  
	`RC
(
eAPPENDFILEINOSCAN
);

1158 
	}
}

1160 
rc_t


1161 
	g≠≥nd_fûe_i
::
	$¸óã_ªc
(

1162 c⁄° 
vec_t
& 
hdr
,

1163 
smsize_t
 
Àn_höt
,

1164 c⁄° 
vec_t
& 
d©a
,

1165 
rid_t
& 
rid


1168 
	`SCAN_METHOD_PROLOGUE
(
≠≥nd_fûe_i
::
¸óã_ªc
, 
ªad_wrôe
, 1);

1170 #i‡
W_DEBUG_LEVEL
 > 2

1171 if(
	`_∑ge
().
	`is_fixed
()) {

1172 
	`DBG
(<<"IS FIXED! ");

1176 
	`W_DO
–
fi
->
	`¸óã_ªc_©_íd
(
	`_∑ge
(),

1177 
Àn_höt
, 
hdr
, 
d©a
, 
_ˇched_sdesc
, 
cuº_rid
) );

1179 
rid
 = 
cuº_rid
;

1180  
RCOK
;

1181 
	}
}

	@src/sm/scan.h

53 #i‚de‡
SCAN_H


54 
	#SCAN_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 #i‚de‡
XCT_DEPENDENT_H


65 
	~<x˘_dïídít.h
>

68 
	~<∑ge_Æüs.h
>

118 
˛ass
 
	gbt_curs‹_t
;

160 
˛ass
 
	gsˇn_ödex_i
 : 
public
 
smÀvñ_t›
,Öubli¯
	gx˘_dïídít_t
 {

161 
	gpublic
:

220 
NORET
 
sˇn_ödex_i
(

221 c⁄° 
°id_t
& 
°id
,

222 
cmp_t
 
c1
,

223 c⁄° 
cvec_t
& 
bound1
,

224 
cmp_t
 
c2
,

225 c⁄° 
cvec_t
& 
bound2
,

226 
boﬁ
 
ö˛ude_nuŒs
 = 
Ál£
,

227 
c⁄cuºícy_t
 
cc
 = 
t_cc_kvl
,

228 
lock_mode_t
 
mode
 = 
SH
,

229 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


233 
	gNORET
 ~
sˇn_ödex_i
();

244 
rc_t
 
cuº
(

245 
vec_t
* 
key
,

246 
smsize_t
& 
kÀn
,

247 
vec_t
* 
ñ
,

248 
smsize_t
& 
ñí
) {

249  
_„tch
(
key
, &
kÀn
, 
ñ
, &
ñí
, 
Ál£
);

257 
rc_t
 
√xt
(
boﬁ
& 
eof
) {

258 
rc_t
 
	grc
 = 
_„tch
(0, 0, 0, 0, 
åue
);

259 
	geof
 = 
_eof
;

260  
	grc
.
ª£t
();

265 
föish
();

268 
boﬁ
 
eof
(Ë{  
	g_eof
; }

271 
tid_t
 
xid
(Ëc⁄° {  
	gtid
; }

272 
ndx_t
 
ndx
(Ëc⁄° {  
	g¡y≥
; }

273 c⁄° 
	grc_t
 & 
îr‹_code
(Ëc⁄° {  
	g_îr‹_occuºed
; }

275 
	g¥iv©e
:

276 
°id_t
 
_°id
;

277 
tid_t
 
	gtid
;

278 
ndx_t
 
	g¡y≥
;

279 
cmp_t
 
	gc⁄d2
;

280 
boﬁ
 
	g_eof
;

282 
w_rc_t
 
	g_îr‹_occuºed
;

283 
bt_curs‹_t
* 
	g_btcurs‹
;

284 
boﬁ
 
	g_föished
;

285 
boﬁ
 
	g_skù_nuŒs
;

286 
c⁄cuºícy_t
 
	g_cc
;

287 
lock_mode_t
 
	g_mode
;

288 
boﬁ
 
	g_bIgn‹eL©ches
;

290 
rc_t
 
_„tch
(

291 
vec_t
* 
key
,

292 
smsize_t
* 
kÀn
,

293 
vec_t
* 
ñ
,

294 
smsize_t
* 
ñí
,

295 
boﬁ
 
skù
);

297 
_öô
(

298 
cmp_t
 
c⁄d
,

299 c⁄° 
cvec_t
& 
bound
,

300 
cmp_t
 
c2
,

301 c⁄° 
cvec_t
& 
b2
,

302 
lock_mode_t
 
mode
 = 
SH
,

303 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

305 
x˘_°©e_ch™ged
(

306 
x˘_°©e_t
 
ﬁd_°©e
,

307 
x˘_°©e_t
 
√w_°©e
);

310 
NORET
 
sˇn_ödex_i
(const scan_index_i&);

311 
	gsˇn_ödex_i
& 
	g›î©‹
=(c⁄° 
sˇn_ödex_i
&);

316 
˛ass
 
	gπ_curs‹_t
;

330 
˛ass
 
	gsˇn_π_i
 : 
public
 
smÀvñ_t›
,Öubli¯
	gx˘_dïídít_t
 {

331 
	gpublic
:

334 
°id_t
 
°id
;

336 
tid_t
 
	gtid
;

338 
ndx_t
 
	g¡y≥
;

353 
NORET
 
sˇn_π_i
(

354 c⁄° 
°id_t
& 
°id
,

355 
nbox_t
::
sob_cmp_t
 
c
,

356 c⁄° 
nbox_t
& 
box
,

357 
boﬁ
 
ö˛ude_nuŒs
 = 
Ál£
,

358 
c⁄cuºícy_t
 
cc
 = 
t_cc_∑ge
);

360 
	gNORET
 ~
sˇn_π_i
();

362 
rc_t
 
√xt
(

363 
nbox_t
& 
key
,

364 * 
ñ
,

365 
smsize_t
& 
ñí
,

366 
boﬁ
& 
eof
) {

367  
_„tch
(
key
, 
ñ
, 
ñí
, 
eof
, 
åue
);

375 
föish
();

377 
boﬁ
 
eof
(Ë{  
	g_eof
; }

378 c⁄° 
	grc_t
 & 
îr‹_code
(Ëc⁄° {  
	g_îr‹_occuºed
; }

379 
	g¥iv©e
:

380 
boﬁ
 
_eof
;

381 
rc_t
 
	g_îr‹_occuºed
;

382 
π_curs‹_t
* 
	g_curs‹
;

383 
boﬁ
 
	g_föished
;

384 
boﬁ
 
	g_skù_nuŒs
;

385 
c⁄cuºícy_t
 
	g_cc
;

387 
rc_t
 
_„tch
(

388 
nbox_t
& 
key
,

389 * 
ñ
,

390 
smsize_t
& 
ñí
,

391 
boﬁ
& 
eof
,

392 
boﬁ
 
skù
);

393 
_öô
(

394 
nbox_t
::
sob_cmp_t
 
c
,

395 c⁄° 
nbox_t
& 
qbox
);

397 
x˘_°©e_ch™ged
(

398 
x˘_°©e_t
 
ﬁd_°©e
,

399 
x˘_°©e_t
 
√w_°©e
);

402 
NORET
 
sˇn_π_i
(const scan_rt_i&);

403 
	gsˇn_π_i
& 
	g›î©‹
=(c⁄° 
sˇn_π_i
&);

406 
˛ass
 
	gbf_¥e„tch_thªad_t
;

440 
˛ass
 
	gsˇn_fûe_i
 : 
public
 
smÀvñ_t›
,Öubli¯
	gx˘_dïídít_t
 {

441 
	gpublic
:

442 
°id_t
 
°id
;

443 
rid_t
 
	gcuº_rid
;

462 
NORET
 
sˇn_fûe_i
(

463 c⁄° 
°id_t
& 
°id
,

464 c⁄° 
rid_t
& 
°¨t
,

465 
c⁄cuºícy_t
 
cc
 = 
t_cc_fûe
,

466 
boﬁ
 
¥e„tch
=
Ál£
,

467 
lock_mode_t
 
ign‹ed
 = 
SH
,

468 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

491 
NORET
 
sˇn_fûe_i
(

492 c⁄° 
°id_t
& 
°id
,

493 
c⁄cuºícy_t
 
cc
 = 
t_cc_fûe
,

494 
boﬁ
 
¥e„tch
=
Ál£
,

495 
lock_mode_t
 
ign‹ed
 = 
SH
,

496 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

498 
	gNORET
 ~
sˇn_fûe_i
();

507 
curs‹
(

508 
pö_i
*& 
pö_±r
,

509 
boﬁ
& 
eof


510 Ë{ 
	gpö_±r
 = &
_curs‹
; 
	geof
 = 
_eof
; }

522 
rc_t
 
√xt
(

523 
pö_i
*& 
pö_±r
,

524 
smsize_t
 
°¨t_off£t
,

525 
boﬁ
& 
eof
);

541 
rc_t
 
√xt_∑ge
(

542 
pö_i
*& 
pö_±r
,

543 
smsize_t
 
°¨t_off£t
,

544 
boﬁ
& 
eof
);

549 
föish
();

551 
boﬁ
 
eof
(Ë{  
	g_eof
; }

553 c⁄° 
	grc_t
 & 
îr‹_code
(Ëc⁄° {  
	g_îr‹_occuºed
; }

555 
tid_t
 
xid
(Ëc⁄° {  
	gtid
; }

557 
	g¥Ÿe˘ed
:

558 
tid_t
 
tid
;

559 
boﬁ
 
	g_eof
;

560 
w_rc_t
 
	g_îr‹_occuºed
;

561 
pö_i
 
	g_curs‹
;

562 
Õid_t
 
	g_√xt_pid
;

563 
c⁄cuºícy_t
 
	g_cc
;

564 
lock_mode_t
 
	g_∑ge_lock_mode
;

565 
lock_mode_t
 
	g_ªc_lock_mode
;

567 
boﬁ
 
	g_bIgn‹eL©ches
;

570 
rc_t
 
_öô
(
boﬁ
 
f‹_≠≥nd
=
Ál£
);

572 
rc_t
 
_√xt
(

573 
pö_i
*& 
pö_±r
,

574 
smsize_t
 
°¨t_off£t
,

575 
boﬁ
& 
eof
);

577 
x˘_°©e_ch™ged
(

578 
x˘_°©e_t
 
ﬁd_°©e
,

579 
x˘_°©e_t
 
√w_°©e
);

581 
	g¥iv©e
:

582 
boﬁ
 
_do_¥e„tch
;

583 
bf_¥e„tch_thªad_t
* 
	g_¥e„tch
;

586 
NORET
 
sˇn_fûe_i
(const scan_file_i&);

587 
	gsˇn_fûe_i
& 
	g›î©‹
=(c⁄° 
sˇn_fûe_i
&);

590 
	~<c°rög
>

591 #i‚de‡
SDESC_H


592 
	~"sdesc.h
"

616 ˛as†
	c≠≥nd_fûe_i
 : 
public
 
sˇn_fûe_i


618 
public
:

622 
NORET
 
≠≥nd_fûe_i
–c⁄° 
°id_t
& 
°id
);

624 
	mNORET
 ~
≠≥nd_fûe_i
();

630 
rc_t
 
√xt
(

631 
pö_i
*& 
pö_±r
,

632 
smsize_t
 
°¨t_off£t
,

633 
boﬁ
& 
eof
);

643 
rc_t
 
¸óã_ªc
(

644 c⁄° 
vec_t
& 
hdr
,

645 
smsize_t
 
Àn_höt
,

646 c⁄° 
vec_t
& 
d©a
,

647 
rid_t
& 
rid
);

648 
	m¥iv©e
:

649 
_öô_c⁄°ru˘‹
();

653 
	mfûe_p
& 
_∑ge
();

654 
	m_∑ge_Æüs
[
PAGE_ALIAS_FILE
];

655 
sdesc_t
 
	m_ˇched_sdesc
;

	@src/sm/sdesc.h

53 #i‚de‡
SDESC_H


54 
	#SDESC_H


	)

56 
	~"w_deföes.h
"

60 
	~"key_ønges_m≠.h
"

73 #ifde‡
__GNUG__


74 #¥agm®
öãrÁ˚


78 
	ssöfo_s
 {

79 
	mpublic
:

80 
smÀvñ_0
::
	t°‹e_t
 store_t;

82 
¢um_t
 
	m°‹e
;

83 
u_ch¨
 
	m°y≥
;

84 
u_ch¨
 
	m¡y≥
;

85 
u_ch¨
 
	mcc
;

99 
u_ch¨
 
	meff
;

103 
u_ch¨
 
	misf
;

105 
fûl1
 
	m_f1
;

106 
fûl2
 
	m_f2
;

107 
fûl4
 
	m_f3
;

118 
¢um_t
 
	mœrge_°‹e
;

120 
shpid_t
 
	mroŸ
;

122 
	mw_ba£_t
::
uöt4_t
 
nkc
;

123 
key_ty≥_s
 
	mkc
[
smÀvñ_0
::
max_keycomp
];

125 
söfo_s
() {};

126 
söfo_s
(
¢um_t
 
°‹e_
, 
°‹e_t
 
°y≥_
,

127 
u_ch¨
 
eff_
,

128 
smÀvñ_0
::
ndx_t
 
¡y≥_
, 
u_ch¨
 
cc_
,

129 c⁄° 
shpid_t
& 
roŸ_
,

130 
w_ba£_t
::
uöt4_t
 
nkc_
, c⁄° 
key_ty≥_s
* 
kc_
)

131 : 
°‹e
(
°‹e_
), 
°y≥
(
°y≥_
), 
¡y≥
(
¡y≥_
),

132 
cc
(
cc_
), 
eff
(
eff_
),

133 
isf
(50),

134 
œrge_°‹e
(0),

135 
roŸ
(
roŸ_
),

136 
nkc
(
nkc_
)

138 
w_as£π1
(
nkc
 < ((
kc
) / (kc[0])));

139 
mem˝y
(
kc
, 
kc_
, ()((
key_ty≥_s
Ë* 
nkc
));

140 i‡(
	mnkc
 < (
	mkc
)) {

141 
mem£t
(
kc
+
nkc
, 0, (kc)-nkc);

145 
	msöfo_s
& 
	m›î©‹
=(c⁄° 
söfo_s
& 
Ÿhî
) {

146 
°‹e
 = 
Ÿhî
.store;

147 
	m°y≥
 = 
Ÿhî
.
°y≥
;

148 
	m¡y≥
 = 
Ÿhî
.
¡y≥
;

149 
	mcc
 = 
Ÿhî
.
cc
;

151 
	meff
 = 
Ÿhî
.
eff
;

152 
	misf
 = 
Ÿhî
.
isf
;

153 
	mroŸ
 = 
Ÿhî
.
roŸ
;

154 
	mnkc
 = 
Ÿhî
.
nkc
;

155 
mem˝y
(
kc
, 
Ÿhî
.kc, (kc));

156 
	mœrge_°‹e
 = 
Ÿhî
.
œrge_°‹e
;

157  *
	mthis
;

160 
£t_œrge_°‹e
(c⁄° 
¢um_t
& 
_°‹e
Ë{
	mœrge_°‹e
 = _store;}

163 
˛ass
 
	ghi°oid_t
;

164 
˛ass
 
	g≠≥nd_fûe_
;

165 
˛ass
 
	gsdesc_ˇche_t
;

167 ˛as†
	csdesc_t
 {

168 
‰õnd
 
˛ass
 
	m≠≥nd_fûe_i
;

169 
‰õnd
 
˛ass
 
	msdesc_ˇche_t
;

171 
	m¥iv©e
:

172 
key_ønges_m≠
 
_∑πôi⁄s
;

173 
boﬁ
 
	m_∑πôi⁄s_fûÀd
;

174 
	mm≠
< 
	mÕid_t
, 
	mshpid_t
 > 
	m_∑ges_wôh_•a˚
;

177 
	mpublic
:

178 
smÀvñ_0
::
	t°‹e_t
 store_t;

180 
NORET
 
	$sdesc_t
(Ë: 
	`_∑πôi⁄s_fûÀd
(
Ál£
), 
	`_hi°oid
(0), 
	`_œ°_pid
(0), 
	$_öhîôed
(
Ál£
) {};

182 
NORET
 ~
	$sdesc_t
(Ë{ 
	`övÆid©e
(); 
	}
}

184 
	$öô
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
s
)

185 { 
_°id
 = 
°id
;

186 
_söfo
 = 
s
;

187 
_hi°oid
 = 0;

188 
_öhîôed
 = 
Ál£
;

189 
	}
}

191 
ölöe


192 c⁄° 
	g°id_t
& 
	$°id
(Ëc⁄° { 
_°id
;
	}
}

194 
shpid_t
 
	$hog_œ°_pid
(Ëc⁄° {  *&
_œ°_pid
; 
	}
}

195 
	$‰ì_œ°_pid
(Ëc⁄° {
	}
}

196 
£t_œ°_pid
(
shpid_t
 
p
);

198 
ölöe


199 c⁄° 
Õid_t
 
	$roŸ
() const {

200 
Õid_t
 
	`r
(
_°id
.
vﬁ
, _°id.
°‹e
, 
_söfo
.
roŸ
);

201  
r
;

202 
	}
}

204 
ölöe


205 c⁄° 
Õid_t
 
	$roŸ
(c⁄° 
cvec_t
& 
key
) {

206 
Õid_t
 
r
;

207 
	`∑πôi⁄s
().
	`gëP¨tôi⁄ByKey
(
key
, 
r
);

208  
r
;

209 
	}
}

212 
ölöe


213 c⁄° 
°id_t
 
	$œrge_°id
() const {

214  
_söfo
.
œrge_°‹e
?

215 
	`°id_t
(
_°id
.
vﬁ
, 
_söfo
.
œrge_°‹e
)

216 : 
°id_t
::
nuŒ
;

217 
	}
}

218 
ölöe


219 c⁄° 
	gsöfo_s
& 
	$söfo
(Ëc⁄° { 
_söfo
;
	}
}

221 
	$add_°‹e_utûiz©i⁄
(
hi°oid_t
 *
h
) {

222 
_hi°oid
 = 
h
;

223 
	}
}

224 c⁄° 
hi°oid_t
* 
	$°‹e_utûiz©i⁄
() const {

225  
_hi°oid
;

226 
	}
}

227 
	$övÆid©e_sdesc
(Ë{ 
	`övÆid©e
(); 
	}
}

229 
	$£t_öhîôed
(
boﬁ
 
Êag
Ë{ 
_öhîôed
 = fœg; 
	}
}

230 
boﬁ
 
	$is_öhîôed
(Ëc⁄° {  
_öhîôed
; 
	}
}

232 
‰õnd
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gos
, 
sdesc_t
 c⁄° &
	gsd
);

234 
ölöe
 
°id_t
 
	$°id
(Ë{  
_°id
; 
	}
}

235 
ölöe
 
boﬁ
 
	$has_∑πôi⁄s
(Ë{  
_∑πôi⁄s_fûÀd
; 
	}
}

241 
ölöe
 
shpid_t
 
	$gë_∑ge_wôh_•a˚
(c⁄° 
Õid_t
& 
båì_∑ge
) {

242 
m≠
< 
Õid_t
, 
shpid_t
 >::
ôî©‹
 
ôî
 = 
_∑ges_wôh_•a˚
.
	`föd
(
båì_∑ge
);

243 if(
ôî
 =
_∑ges_wôh_•a˚
.
	`íd
()) {

246  
_∑ges_wôh_•a˚
[
båì_∑ge
];

248 
	}
}

249 
ölöe
 
	$£t_∑ge_wôh_•a˚
(c⁄° 
Õid_t
& 
båì_∑ge
,

250 c⁄° 
shpid_t
 
∑ge
) {

251 
_∑ges_wôh_•a˚
[
båì_∑ge
] = 
∑ge
;

252 
	}
}

254 
	gkey_ønges_m≠
& 
∑πôi⁄s
();

255 
key_ønges_m≠
* 
gë_∑πôi⁄s_p
();

256 
rc_t
 
fûl_∑πôi⁄s_m≠
();

257 
rc_t
 
°‹e_∑πôi⁄s
();

259 
	g¥Ÿe˘ed
:

260 
sdesc_t
& 
›î©‹
=(c⁄° sdesc_t& 
Ÿhî
);

261 
övÆid©e
();

263 
	g¥iv©e
:

264 
NORET
 
	$sdesc_t
(c⁄° 
sdesc_t
&Ë{
	}
};

267 
söfo_s
 
	g_söfo
;

274 
hi°oid_t
* 
	g_hi°oid
;

275 
shpid_t
 
	g_œ°_pid
;

276 
°id_t
 
	g_°id
;

277 
boﬁ
 
	g_öhîôed
;

285 ˛as†
	csdesc_ˇche_t
 {

286 
	mpublic
:

296 
mö_sdesc
 = 4,

297 
	mmö_num_buckës
 = 8

300 
NORET
 
sdesc_ˇche_t
();

301 ~
sdesc_ˇche_t
();

302 
sdesc_t
* 
lookup
(c⁄° 
°id_t
& 
°id
);

303 
ªmove
(c⁄° 
°id_t
& 
°id
);

304 
ªmove_Æl
();

305 
öhîô_Æl
();

306 
sdesc_t
* 
add
(c⁄° 
°id_t
& 
°id
, c⁄° 
söfo_s
& 
söfo
);

308 
c›y
–c⁄° 
sdesc_ˇche_t
 &
Ÿhî
);

309 
‰õnd
 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	gos
, 
sdesc_ˇche_t
 c⁄° &
	gsdc
);

312 
	g¥iv©e
:

313 
	$_£rülize
() const;

314 
	$_íd£rül
() const;

315 
w_ba£_t
::
uöt4_t
 
	$_num_buckës
(Ëc⁄° {  
_numVÆidBuckës
; 
	}
}

316 
	gw_ba£_t
::
uöt4_t
 
	$_num_Æloˇãd_buckës
() const {

317  
_buckëAºaySize
; 
	}
}

318 
	gw_ba£_t
::
uöt4_t
 
	$_ñems_ö_buckë
(
i
Ëc⁄° {  
mö_sdesc
 << i; 
	}
}

319 
_AŒoˇãBuckë
(
w_ba£_t
::
uöt4_t
 
buckë
);

320 
_AŒoˇãBuckëAºay
(
√wSize
);

321 
_DoubÀBuckëAºay
();

323 
sdesc_t
** 
	g_sdescsBuckës
;

324 
	gw_ba£_t
::
uöt4_t
 
_buckëAºaySize
;

325 
	gw_ba£_t
::
uöt4_t
 
_numVÆidBuckës
;

326 
	gw_ba£_t
::
uöt4_t
 
_möFªeBuckë
;

327 
	gw_ba£_t
::
uöt4_t
 
_möFªeBuckëIndex
;

329 
	gw_ba£_t
::
uöt4_t
 
_œ°Ac˚ssBuckë
;

330 
	gw_ba£_t
::
uöt4_t
 
_œ°Ac˚ssBuckëIndex
;

	@src/sm/sm-no-inline.cpp

25 
	~"w_deföes.h
"

27 
	#SM_SOURCE


	)

28 
	#LOG_CORE_C


	)

29 
	~"sm_öt_1.h
"

30 
	~"log.h
"

31 
	~"log_c‹e.h
"

33 
	glog_c‹e
::
	$_•ö_⁄_ïoch
(
ﬁd_íd
) {

34 *&
_cur_ïoch
.
	`vthis
()->
íd
 + *&_cur_ïoch.vthis()->
ba£
 !
ﬁd_íd
) ;

35 
	}
}

37 
	glog_c‹e
::
	$_•ö_⁄_cou¡
(vﬁ©ûe* 
cou¡
, 
bound
) {

38 
ﬁd_cou¡
;

39  (
ﬁd_cou¡
=*
cou¡
Ë>
bound
) ;

40 
	`memb¨_íãr
();

41  
ﬁd_cou¡
;

42 
	}
}

	@src/sm/sm.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SM_C


	)

60 #ifde‡
__GNUG__


61 
˛ass
 
	g¥ﬁogue_rc_t
;

62 #¥agm®
im∂emíèti⁄
 "sm.h"

63 #¥agm®
im∂emíèti⁄
 "prologue.h"

64 #¥agm®
im∂emíèti⁄
 "sm_base.h"

67 
	~"w.h
"

68 
	~"›ti⁄.h
"

69 
	~"sm_öt_4.h
"

70 
	~"pö.h
"

71 
	~"chk±.h
"

72 
	~"lgªc.h
"

73 
	~"sm.h
"

74 
	~"sm_vèbÀ_íum.h
"

75 
	~"¥ﬁogue.h
"

76 
	~"devi˚.h
"

77 
	~"vﬁ.h
"

78 
	~"¸ash.h
"

79 
	~"ª°¨t.h
"

80 
	~"hi°o.h
"

82 
	~"≠p_suµ‹t.h
"

84 #ifde‡
EXPLICIT_TEMPLATE


85 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	gSmSt‹eMëaSèts
*>;

88 #ifde‡ 
FORCE_EGCS


89 
	#W_IFEGCS
(
x
Ë
	)
x

91 
	#W_IFEGCS
(
x
)

	)

94 
boﬁ
 
	gsmÀvñ_0
::
shutdown_˛ón
 = 
åue
;

95 
boﬁ
 
	gsmÀvñ_0
::
shuâög_down
 = 
Ál£
;

97 
	gsmÀvñ_0
::
›î©ög_mode_t


98 
smÀvñ_0
::
›î©ög_mode
 = smÀvñ_0::
t_nŸ_°¨ãd
;

101 
boﬁ
 
	gsmÀvñ_0
::
loggög_íabÀd
 = 
åue
;

102 
boﬁ
 
	gsmÀvñ_0
::
do_¥e„tch
 = 
Ál£
;

104 #i‚de‡
SM_LOG_WARN_EXCEED_PERCENT


105 
	#SM_LOG_WARN_EXCEED_PERCENT
 40

	)

107 
	gsmÀvñ_0
::
fûeoff_t
 
smÀvñ_0
::
log_w¨n_åiggî
 = 0;

108 
	gsmÀvñ_0
::
log_w¨n_ex˚ed_≥r˚¡
 =

109 
SM_LOG_WARN_EXCEED_PERCENT
;

110 
	gss_m
::
LOG_WARN_CALLBACK_FUNC


111 
smÀvñ_0
::
log_w¨n_ˇŒback
 = 0;

112 
	gss_m
::
LOG_ARCHIVED_CALLBACK_FUNC


113 
smÀvñ_0
::
log_¨chived_ˇŒback
 = 0;

116 
	gsmÀvñ_0
::
fûeoff_t
 
smÀvñ_0
::
max_logsz
 = 0;

117 
	gsmÀvñ_0
::
fûeoff_t
 
smÀvñ_0
::
chk±_di•œ˚mít
 = 0;

129 
öt4_t
 
	gsmÀvñ_0
::
deÁu…LockEsˇœãToPageThªshﬁd
 = 
d⁄tEsˇœã
;

130 
öt4_t
 
	gsmÀvñ_0
::
deÁu…LockEsˇœãToSt‹eThªshﬁd
 = 
d⁄tEsˇœã
;

131 
öt4_t
 
	gsmÀvñ_0
::
deÁu…LockEsˇœãToVﬁumeThªshﬁd
 = 
d⁄tEsˇœã
;

167 
	#VOLUME_FORMAT
 18

	)

169 
uöt4_t
 
	gsmÀvñ_0
::
vﬁume_f‹m©_vîsi⁄
 = 
VOLUME_FORMAT
;

183 #i‡
VOLUME_OPS_USE_OCC


184 
occ_rwlock
 
	tsm_vﬁ_rwlock_t
;

185 
	gocc_rwlock
::
	tocc_æock
 
	tsm_vﬁ_æock_t
;

186 
	gocc_rwlock
::
	tocc_wlock
 
	tsm_vﬁ_wlock_t
;

187 
	#SM_VOL_WLOCK
(
ba£
Ë(ba£).
	`wrôe_lock
()

	)

188 
	#SM_VOL_RLOCK
(
ba£
Ë(ba£).
	`ªad_lock
()

	)

191 
queue_ba£d_lock_t
 
	tsm_vﬁ_rwlock_t
;

192 
queue_ba£d_lock_t
 
	tsm_vﬁ_æock_t
;

193 
queue_ba£d_lock_t
 
	tsm_vﬁ_wlock_t
;

194 
	#SM_VOL_WLOCK
(
ba£
Ë&(ba£)

	)

195 
	#SM_VOL_RLOCK
(
ba£
Ë&(ba£)

	)

198 
sm_vﬁ_rwlock_t
 
	g_begö_x˘_muãx
;

200 
	gsmÀvñ_0
::
c⁄cuºícy_t
 
smÀvñ_0
::
cc_Æg
 = 
t_cc_ªc‹d
;

201 
boﬁ
 
	gsmÀvñ_0
::
cc_ad≠tive
 = 
åue
;

203 
devi˚_m
* 
	gsmÀvñ_0
::
dev
 = 0;

204 
io_m
* 
	gsmÀvñ_0
::
io
 = 0;

205 
bf_m
* 
	gsmÀvñ_0
::
bf
 = 0;

206 
log_m
* 
	gsmÀvñ_0
::
log
 = 0;

207 
tid_t
 *
	gsmÀvñ_0
::
ªdo_tid
 = 0;

209 
lock_m
* 
	gsmÀvñ_0
::
lm
 = 0;

211 
EºLog
* 
	gsmÀvñ_0
::
îæog
;

214 
	gsmÀvñ_0
::
zîo_∑ge
[
∑ge_sz
];

216 
chk±_m
* 
	gsmÀvñ_1
::
chk±
 = 0;

218 
båì_m
* 
	gsmÀvñ_2
::
bt
 = 0;

219 
fûe_m
* 
	gsmÀvñ_2
::
fi
 = 0;

220 
πªe_m
* 
	gsmÀvñ_2
::
π
 = 0;

221 
ønges_m
* 
	gsmÀvñ_2
::
ø
 = 0;

225 
dú_m
* 
	gsmÀvñ_3
::
dú
 = 0;

227 
lid_m
* 
	gsmÀvñ_4
::
lid
 = 0;

229 
ss_m
* 
	gsmÀvñ_4
::
SSM
 = 0;

232 
›ti⁄_group_t
* 
	gss_m
::
_›ti⁄s
 = 
NULL
;

234 #i‡
deföed
(
S∑rc
Ë&& deföed(
SOLARIS2
Ë&& deföed(
SOLARIS2_PSETS
)

235 
	~<sys/ty≥s.h
>

236 
	~<sys/¥o˚ss‹.h
>

237 
	~<sys/¥oc£t.h
>

238 
	~<sys/p£t.h
>

240 
›ti⁄_t
* 
	gss_m
::
_hugëlbfs_∑th
 = 
NULL
;

241 
›ti⁄_t
* 
	gss_m
::
_ªf‹m©_log
 = 
NULL
;

242 
›ti⁄_t
* 
	gss_m
::
_¥e„tch
 = 
NULL
;

243 
›ti⁄_t
* 
	gss_m
::
_buÂoﬁsize
 = 
NULL
;

244 
›ti⁄_t
* 
	gss_m
::
_lockèbÀsize
 = 
NULL
;

245 
›ti⁄_t
* 
	gss_m
::
_logdú
 = 
NULL
;

246 
›ti⁄_t
* 
	gsmÀvñ_0
::
_backgroundÊush
 = 
NULL
;

247 
›ti⁄_t
* 
	gss_m
::
_logsize
 = 
NULL
;

248 
›ti⁄_t
* 
	gss_m
::
_logbufsize
 = 
NULL
;

249 
›ti⁄_t
* 
	gss_m
::
_îr‹_log
 = 
NULL
;

250 
›ti⁄_t
* 
	gss_m
::
_îr‹_logÀvñ
 = 
NULL
;

251 
›ti⁄_t
* 
	gss_m
::
_lockEsˇœãToPageThªshﬁd
 = 
NULL
;

252 
›ti⁄_t
* 
	gss_m
::
_lockEsˇœãToSt‹eThªshﬁd
 = 
NULL
;

253 
›ti⁄_t
* 
	gss_m
::
_lockEsˇœãToVﬁumeThªshﬁd
 = 
NULL
;

254 
›ti⁄_t
* 
	gss_m
::
_cc_Æg_›ti⁄
 = 
NULL
;

255 
›ti⁄_t
* 
	gss_m
::
_log_w¨n_≥r˚¡
 = 
NULL
;

256 
›ti⁄_t
* 
	gss_m
::
_num_∑ge_wrôîs
 = 
NULL
;

257 
›ti⁄_t
* 
	gss_m
::
_loggög
 = 
NULL
;

262 
rc_t


263 
	gsm_qu¨k_t
::
	$›í
() {

264 
	`SM_PROLOGUE_RC
(
sm_qu¨k_t
::
›í
, 
ö_x˘
, 
ªad_⁄ly
, 0);

265 i‡(
_tid
 !
tid_t
::
nuŒ
) {

266  
	`RC
(
ss_m
::
eTWOQUARK
);

268 
_tid
 = 
	`x˘
()->
	`tid
();

269 if–
	`x˘
()->
	`num_thªads
() > 1) {

270  
	`RC
(
ss_m
::
eTWOTHREAD
);

272 
	`W_DO
(
ss_m
::
lm
->
	`›í_qu¨k
());

273  
RCOK
;

274 
	}
}

277 
NORET


278 
	gsm_qu¨k_t
::~
	$sm_qu¨k_t
()

280 i‡(
_tid
 !
tid_t
::
nuŒ
) {

281 
	`W_COERCE
(
	`˛o£
());

283 
	}
}

285 
rc_t


286 
	gsm_qu¨k_t
::
	$˛o£
(
boﬁ
 
ªÀa£
) {

287 
	`SM_PROLOGUE_RC
(
sm_qu¨k_t
::
˛o£
, 
ö_x˘
, 
ªad_⁄ly
, 0);

288 if(!
ªÀa£
) {

290  
	`RC
(
fcNOTIMPLEMENTED
);

292 i‡(
_tid
 =
tid_t
::
nuŒ
) {

293  
	`RC
(
ss_m
::
eNOQUARK
);

295 if–
	`x˘
()->
	`num_thªads
() > 1) {

296  
	`RC
(
ss_m
::
eTWOTHREAD
);

298 
	`W_DO
(
ss_m
::
lm
->
	`˛o£_qu¨k
(
åue
));

299 
_tid
 = 
tid_t
::
nuŒ
;

300  
RCOK
;

301 
	}
}

303 
	go°ªam
&

304 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gsm_qu¨k_t
& 
	gq
)

306  
	go
 << "q." << 
	gq
.
	g_tid
;

309 
	gi°ªam
&

310 
	g›î©‹
>>(
	gi°ªam
& 
	gi
, 
	gsm_qu¨k_t
& 
	gq
)

312 
	gch
;

313 
	gi
 >> 
	gch
;

314 
w_as£π3
(
ch
 == 'q');

315 
	gi
 >> 
	gch
;

316 
w_as£π3
(
ch
 == '.');

317  
	gi
 >> 
	gq
.
	g_tid
;

327 
	gss_m
::
_ö°™˚_˙t
 = 0;

332 
	~<e_eöfo_gí.h
>

334 c⁄° *
	$four_∑ges_mö
(
kb
) {

335 
buf
[48];

337 
four
 = 4 * 
SM_PAGESIZE
/1024;

339 
	`•rötf
(
buf
, "%d", ::
	`max
(
four
, 
kb
));

341  
buf
;

342 
	}
}

344 
rc_t
 
	gss_m
::
	$£tup_›ti⁄s
(
›ti⁄_group_t
* 
›ti⁄s
)

346 
°hªad_t
::
	`öôülize_°hªads_∑ckage
();

348 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_reformat_log", "yes/no", "no",

350 
Ál£
, 
›ti⁄_t
::
£t_vÆue_boﬁ
, 
_ªf‹m©_log
));

352 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_prefetch", "yes/no", "no",

354 
Ál£
, 
›ti⁄_t
::
£t_vÆue_boﬁ
, 
_¥e„tch
));

356 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_buÂoﬁsize", "#>=8192", 
NULL
,

358 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
, 
_buÂoﬁsize
));

360 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_locktablesize", "#>64", "64000",

362 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
, 
_lockèbÀsize
));

366 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_hugetlbfs_path", "absoluteÖath",

367 
HUGETLBFS_PATH
,

369 
Ál£
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
_hugëlbfs_∑th
));

371 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_logdú", "dúe˘‹yÇame", 
NULL
,

373 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
_logdú
));

375 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_backgroundflush", "yes/no", "yes",

377 
Ál£
, 
›ti⁄_t
::
£t_vÆue_boﬁ
, 
_backgroundÊush
));

379 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_logbufsize", "(>=4ánd <=128)*(page size)",

381 
	`four_∑ges_mö
(128),

383 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
, 
_logbufsize
));

385 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_logsize", "#>8256 or 0", "10000",

387 
Ál£
, 
_£t_›ti⁄_logsize
, 
_logsize
));

389 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_errlog", "string", "-",

391 
Ál£
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
_îr‹_log
));

393 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_errlog_level", "string", "error",

395 
Ál£
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
_îr‹_logÀvñ
));

397 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_lock_escalate_to_page_threshold", "0 (don't) or >0", "5",

399 
Ál£
, 
_£t_›ti⁄_lock_esˇœã_to_∑ge
, 
_lockEsˇœãToPageThªshﬁd
));

401 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_lock_escalate_to_store_threshold", "0 (don't) or >0", "25",

403 
Ál£
, 
_£t_›ti⁄_lock_esˇœã_to_°‹e
, 
_lockEsˇœãToSt‹eThªshﬁd
));

405 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_lock_escalate_to_volume_threshold", "0 (don't) or >0", "0",

407 
Ál£
, 
_£t_›ti⁄_lock_esˇœã_to_vﬁume
, 
_lockEsˇœãToVﬁumeThªshﬁd
));

410 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_cc_alg", "file/page/record/none", "record",

412 
Ál£
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
_cc_Æg_›ti⁄
));

414 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_log_warn", "0-100", "0",

416 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
, 
_log_w¨n_≥r˚¡
));

418 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_num_page_writers", ">=0", "2",

420 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
, 
_num_∑ge_wrôîs
));

422 
	`W_DO
(
›ti⁄s
->
	`add_›ti⁄
("sm_logging", "yes/no", "yes",

424 
Ál£
, 
›ti⁄_t
::
£t_vÆue_boﬁ
, 
_loggög
));

426 
_›ti⁄s
 = 
›ti⁄s
;

427  
RCOK
;

428 
	}
}

430 
rc_t
 
	gss_m
::
	$_£t_›ti⁄_logsize
(

431 
›ti⁄_t
* 
›t
,

432 c⁄° * 
vÆue
,

433 
o°ªam
* 
_îr_°ªam


436 
o°ªam
* 
îr_°ªam
 = 
_îr_°ªam
;

438 i‡(
îr_°ªam
 =
NULL
) {

439 
îr_°ªam
 = &
˚º
;

444 i‡(
smÀvñ_0
::
log
Ë 
RCOK
;

446 
	`w_as£π3
(
›t
 =
_logsize
);

448 
w_rc_t
 
e
;

449 i‡((
fûeoff_t
) == 8)

450 
e
 = 
›ti⁄_t
::
	`£t_vÆue_öt8
(
›t
, 
vÆue
, 
îr_°ªam
);

452 
e
 = 
›ti⁄_t
::
	`£t_vÆue_öt4
(
›t
, 
vÆue
, 
îr_°ªam
);

453 
	`W_DO
(
e
);

455 
fûeoff_t
 
maxlogsize
 = 
	`fûeoff_t
(

456 #i‡
	`deföed
(
LARGEFILE_AWARE
Ë|| deföed(
ARCH_LP64
)

457 
w_ba£_t
::
	`°πoi8
(
_logsize
->
	`vÆue
())

459 
	`©oi
(
_logsize
->
	`vÆue
())

463 
maxlogsize
 *= 1024;

473 
fûeoff_t
 
psize
 = 
maxlogsize
 / 
smÀvñ_0
::
max_›ílog
;

475 
psize
 = 
log_m
::
	`∑πôi⁄_size
(psize);

484 i‡(
psize
 > 
log_m
::
	`max_∑πôi⁄_size
()) {

486 
fûeoff_t
 
tmp
 = 
log_m
::
	`max_∑πôi⁄_size
();

487 
tmp
 /= 1024;

489 *
îr_°ªam
 << "P¨tôi⁄ sizê" << 
psize


490 << "Éx˚ed†limô (" << 
log_m
::
	`max_∑πôi⁄_size
() << ") "

491 <<
ídl
;

492 *
îr_°ªam
 << " Choo£á smÆÀ∏sm_logsize." <<
ídl
;

493 *
îr_°ªam
 << " Maximum i†:" << 
tmp
 << 
ídl
;

494  
	`RC
(
OPT_BadVÆue
);

497 i‡(
psize
 < 
log_m
::
	`mö_∑πôi⁄_size
()) {

498 
fûeoff_t
 
tmp
 = 
	`fûeoff_t
(
log_m
::
	`mö_∑πôi⁄_size
());

499 
tmp
 *
smÀvñ_0
::
max_›ílog
;

500 
tmp
 /= 1024;

501 *
îr_°ªam


503 << 
maxlogsize
/1024 << "Ëi†toÿsmÆl. " << 
ídl


504 << " D€†nŸáŒowáÖ¨tôi⁄ (" << 
psize
 << ")"

506 << 
log_m
::
	`mö_∑πôi⁄_size
(Ë<< ")" << 
ídl


507 << " Möimum i†:" << 
tmp
 << 
ídl
;

508  
	`RC
(
OPT_BadVÆue
);

513 
max_logsz
 = 
	`fûeoff_t
(
psize
 * 
smÀvñ_0
::
max_›ílog
);

516 
chk±_di•œ˚mít
 = 
log_m
::
	`£gmít_size
() * 3;

518  
RCOK
;

519 
	}
}

521 
rc_t
 
	gss_m
::
	$_£t_›ti⁄_lock_esˇœã_to_∑ge
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
)

523 
	`w_as£π3
(
›t
 =
_lockEsˇœãToPageThªshﬁd
);

524 
	`W_DO
(
›ti⁄_t
::
	`£t_vÆue_l⁄g
(
›t
, 
vÆue
, 
îr_°ªam
));

525 
deÁu…LockEsˇœãToPageThªshﬁd
 = 
	`°πﬁ
(
›t
->
	`vÆue
(), 
NULL
, 0);

526 i‡(
deÁu…LockEsˇœãToPageThªshﬁd
 == 0)

527 
deÁu…LockEsˇœãToPageThªshﬁd
 = 
d⁄tEsˇœã
;

528 i‡(
deÁu…LockEsˇœãToPageThªshﬁd
 < 0) {

529 *
îr_°ªam
 << "Default mininum childrenÅoÉscalateÅoáÖageÜock must be >= 0."

530 << 
ídl
;

531  
	`RC
(
OPT_BadVÆue
);

533 
	`DBG
(<<"defaultÉscalate-to-page-thresh is "

534 << 
deÁu…LockEsˇœãToPageThªshﬁd
);

536  
RCOK
;

537 
	}
}

539 
rc_t
 
	gss_m
::
	$_£t_›ti⁄_lock_esˇœã_to_°‹e
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
)

541 
	`w_as£π3
(
›t
 =
_lockEsˇœãToSt‹eThªshﬁd
);

542 
	`W_DO
(
›ti⁄_t
::
	`£t_vÆue_l⁄g
(
›t
, 
vÆue
, 
îr_°ªam
));

543 
deÁu…LockEsˇœãToSt‹eThªshﬁd
 = 
	`°πﬁ
(
›t
->
	`vÆue
(), 
NULL
, 0);

544 i‡(
deÁu…LockEsˇœãToSt‹eThªshﬁd
 == 0)

545 
deÁu…LockEsˇœãToSt‹eThªshﬁd
 = 
d⁄tEsˇœã
;

546 i‡(
deÁu…LockEsˇœãToSt‹eThªshﬁd
 < 0) {

547 *
îr_°ªam
 << "Default mininum childrenÅoÉscalateÅoá storeÜock must be >= 0."

548 << 
ídl
;

549  
	`RC
(
OPT_BadVÆue
);

552  
RCOK
;

553 
	}
}

555 
rc_t
 
	gss_m
::
	$_£t_›ti⁄_lock_esˇœã_to_vﬁume
(
›ti⁄_t
* 
›t
, c⁄° * 
vÆue
, 
o°ªam
* 
îr_°ªam
)

557 
	`w_as£π3
(
›t
 =
_lockEsˇœãToVﬁumeThªshﬁd
);

558 
	`W_DO
(
›ti⁄_t
::
	`£t_vÆue_l⁄g
(
›t
, 
vÆue
, 
îr_°ªam
));

559 
deÁu…LockEsˇœãToVﬁumeThªshﬁd
 = 
	`°πﬁ
(
›t
->
	`vÆue
(), 
NULL
, 0);

560 i‡(
deÁu…LockEsˇœãToVﬁumeThªshﬁd
 == 0)

561 
deÁu…LockEsˇœãToVﬁumeThªshﬁd
 = 
d⁄tEsˇœã
;

562 i‡(
deÁu…LockEsˇœãToVﬁumeThªshﬁd
 < 0) {

563 *
îr_°ªam
 << "Default mininum childrenÅoÉscalateÅoá volumeÜock must be >= 0."

564 << 
ídl
;

565  
	`RC
(
OPT_BadVÆue
);

568  
RCOK
;

569 
	}
}

576 
	gss_m
::
°‹e_Êag_t


577 
ss_m
::
	$_make_°‹e_Êag
(
°‹e_¥›îty_t
 
¥›îty
)

579 
°‹e_Êag_t
 
Êag
 = 
°_bad
;

581 
¥›îty
) {

582 
t_ªguœr
:

583 
Êag
 = 
°_ªguœr
;

585 
t_ãmp‹¨y
:

586 
Êag
 = 
°_tmp
;

588 
t_lﬂd_fûe
:

589 
Êag
 = 
°_lﬂd_fûe
;

591 
t_ö£π_fûe
:

592 
Êag
 = 
°_ö£π_fûe
;

594 
t_bad_°‹ïr›îty
:

596 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad st‹ê¥›îty :" << 
¥›îty
 );

600  
Êag
;

601 
	}
}

604 
queue_ba£d_block_lock_t
 
	gssm_⁄˚_muãx
;

606 
	gss_m
::
	$ss_m
(

607 
smÀvñ_0
::
LOG_WARN_CALLBACK_FUNC
 
ˇŒbackw¨n
 ,

608 
smÀvñ_0
::
LOG_ARCHIVED_CALLBACK_FUNC
 
ˇŒbackgë


611 
	`FUNC
(
ss_m
::ss_m);

612 
°hªad_t
::
	`öôülize_°hªads_∑ckage
();

617 
	`CRITICAL_SECTION
(
cs
, 
ssm_⁄˚_muãx
);

618 
	`_c⁄°ru˘_⁄˚
(
ˇŒbackw¨n
, 
ˇŒbackgë
);

619 
	}
}

622 
	gss_m
::
	$_c⁄°ru˘_⁄˚
(

623 
smÀvñ_0
::
LOG_WARN_CALLBACK_FUNC
 
w¨n
,

624 
smÀvñ_0
::
LOG_ARCHIVED_CALLBACK_FUNC
 
gë


627 
	`FUNC
(
ss_m
::
_c⁄°ru˘_⁄˚
);

629 
smÀvñ_0
::
log_w¨n_ˇŒback
 = 
w¨n
;

630 
smÀvñ_0
::
log_¨chived_ˇŒback
 = 
gë
;

635 
smthªad_t
::
	`öô_fögî¥öt_m≠
();

637 
boﬁ
 
öôülized
 = 
Ál£
;

638 i‡(! 
öôülized
) {

639 
smÀvñ_0
::
	`öô_îr‹codes
();

640 
öôülized
 = 
åue
;

642 i‡(
_ö°™˚_˙t
++) {

644 if(
îæog
) {

645 
îæog
->
˛og
 << 
Áèl_¥io


647 << 
Êushl
;

649 
	`W_FATAL_MSG
(
eINTERNAL
, << "instantiating smÅwice");

655 
îæog
 = 
√w
 
	`EºLog
("ss_m", 
log_to_unix_fûe
, 
_îr‹_log
->
	`vÆue
());

656 if(!
îæog
) {

657 
	`W_FATAL
(
eOUTOFMEMORY
);

659 if(
_îr‹_logÀvñ


661 
îæog
->
	`£éogÀvñ
(
EºLog
::
	`∑r£
(
_îr‹_logÀvñ
->
	`vÆue
()));

670 
	`w_as£π1
(
∑ge_sz
 >= 1024);

673 
	`w_as£π1
(
_›ti⁄s
);

678 
shuâög_down
 = 
Ál£
;

679 
shutdown_˛ón
 = 
åue
;

681 if(
_cc_Æg_›ti⁄


685 c⁄° *
cc
 = 
_cc_Æg_›ti⁄
->
	`vÆue
();

686 if(
	`°rcmp
(
cc
, "record")==0) {

687 
cc_Æg
 = 
t_cc_ªc‹d
;

688 } if(
	`°rcmp
(
cc
, "page")==0) {

689 
cc_Æg
 = 
t_cc_∑ge
;

690 } if(
	`°rcmp
(
cc
, "file")==0) {

691 
cc_Æg
 = 
t_cc_fûe
;

692 } if(
	`°rcmp
(
cc
, "none")==0) {

693 
cc_Æg
 = 
t_cc_n⁄e
;

701 
uöt4_t
 
nbuÂages
 = (
	`°πoul
(
_buÂoﬁsize
->
	`vÆue
(), 
NULL
, 0Ë* 1024»- 1Ë/ 
∑ge_sz
 + 1;

702 i‡(
nbuÂages
 < 10) {

703 
îæog
->
˛og
 << 
Áèl_¥io
 << "ERROR: buffer size ("

704 << 
_buÂoﬁsize
->
	`vÆue
()

705 << "-KBËi†toÿsmÆl" << 
Êushl
;

706 
îæog
->
˛og
 << 
Áèl_¥io
 << "áàÀa° " << 32 * 
∑ge_sz
 / 1024

707 << "-KB i†√eded" << 
Êushl
;

708 
	`W_FATAL
(
eCRASH
);

710 
•a˚_√eded
 = 
bf_m
::
	`mem_√eded
(
nbuÂages
);

713 
öt4_t
 
≈gwrôîs
 = 
	`öt4_t
(
	`°πoul
(
_num_∑ge_wrôîs
->
	`vÆue
(), 
NULL
, 0));

714 if(
≈gwrôîs
 < 0) {

715 
îæog
->
˛og
 << 
Áèl_¥io
 << "ERROR:ÇumÖage writers must beÖositive : "

716 << 
_num_∑ge_wrôîs
->
	`vÆue
()

717 << 
Êushl
;

718 
	`W_FATAL
(
eCRASH
);

722 
logbufsize
 = 
	`°πoul
(
_logbufsize
->
	`vÆue
(), 
NULL
, 0) * 1024;

725 i‡((
logbufsize
Ë< 4 * 
ss_m
::
∑ge_sz
) {

726 
îæog
->
˛og
 << 
Áèl_¥io


727 << "Log bu‡sizê(sm_logbufsizê" << ()
logbufsize


729 << (
ss_m
::
∑ge_sz
) << " bytes."

730 << 
Êushl
;

731 
îæog
->
˛og
 << 
Áèl_¥io


732 << "NìdÅÿhﬁdáàÀa° 4Öage†–" << 4 * 
ss_m
::
∑ge_sz


734 << 
Êushl
;

735 
	`W_FATAL
(
OPT_BadVÆue
);

737 i‡(
w_ba£_t
::
	`uöt8_t
(
logbufsize
Ë> w_ba£_t::uöt8_t(
max_öt4
)) {

738 
îæog
->
˛og
 << 
Áèl_¥io


739 << "Log bu‡sizê(sm_logbufsizê" << ()
logbufsize


741 << 
Êushl
;

742 
	`W_FATAL
(
OPT_BadVÆue
);

744 
	`DBG
(<<"SHM Nìd " << 
•a˚_√eded
 << " for bufferÖool" );

749 *
shmba£
;

750 
w_rc_t
 
e
;

751 #ifde‡
HAVE_HUGETLBFS


753 
e
 = 
smthªad_t
::
	`£t_hugëlbfs_∑th
(
_hugëlbfs_∑th
->
	`vÆue
());

755 if(
_hugëlbfs_∑th
->
	`is_£t
() ) {

756 
˚º
 << "Warning: sm_hugetlbfs_path option " <<

757 
_hugëlbfs_∑th
->
	`vÆue
()

759 << 
ídl
;

762 
e
 = 
smthªad_t
::
	`£t_bufsize
(
•a˚_√eded
, 
shmba£
);

763 i‡(
e
.
	`is_îr‹
()) {

764 
	`W_COERCE
(
e
);

766 
	`w_as£π1
(
	`is_Æig√d
(
shmba£
));

767 
	`DBG
(<<"SHMáàaddªss" << 
	`W_ADDR
(
shmba£
));

774 
bf
 = 
√w
 
	`bf_m
(
nbuÂages
, 
shmba£
, 
≈gwrôîs
);

775 i‡(! 
bf
) {

776 
	`W_FATAL
(
eOUTOFMEMORY
);

778 
shmba£
 +
bf_m
::
	`mem_√eded
(
nbuÂages
);

781 
boﬁ
 
badVÆ
 = 
Ál£
;

783 
lm
 = 
√w
 
	`lock_m
(
	`°πﬁ
(
_lockèbÀsize
->
	`vÆue
(), 
NULL
, 0));

784 i‡(! 
lm
) {

785 
	`W_FATAL
(
eOUTOFMEMORY
);

788 
dev
 = 
√w
 
devi˚_m
;

789 i‡(! 
dev
) {

790 
	`W_FATAL
(
eOUTOFMEMORY
);

793 
io
 = 
√w
 
io_m
;

794 i‡(! 
io
) {

795 
	`W_FATAL
(
eOUTOFMEMORY
);

803 #i‚de‡
DEAD


804 
›ti⁄_t
::
	`°r_to_boﬁ
(
_loggög
->
	`vÆue
(), 
badVÆ
)

806 
åue


810 
	`w_as£π3
(!
badVÆ
);

812 
boﬁ
 
ªf‹m©_log
 =

813 
›ti⁄_t
::
	`°r_to_boﬁ
(
_ªf‹m©_log
->
	`vÆue
(), 
badVÆ
);

814 
	`w_as£π3
(!
badVÆ
);

816 if(
max_logsz
 < 8*(
logbufsize
)) {

817 
îæog
->
˛og
 << 
w¨nög_¥io
 <<

819 << 
Êushl
;

821 
rc_t
 
e
;

822 
e
 = 
log_m
::
	`√w_log_m
(
log
,

823 
_logdú
->
	`vÆue
(),

824 
logbufsize
,

825 
ªf‹m©_log
);

826 
	`W_COERCE
(
e
);

828 
≥r˚¡
=0;

829 if(
_log_w¨n_≥r˚¡


831 
≥r˚¡
 = 
	`°πﬁ
(
_log_w¨n_≥r˚¡
->
	`vÆue
(), 
NULL
, 0);

836 i‡(
≥r˚¡
 > 0) {

837 
smÀvñ_0
::
log_w¨n_åiggî
 = () (

839 
log
->
	`limô
(Ë* 
max_›ílog
 *

840 (100.0 - ()
smÀvñ_0
::
log_w¨n_ex˚ed_≥r˚¡
) / 100.00);

845 
îæog
->
˛og
 << 
w¨nög_¥io
 <<

847 << 
Êushl
;

848 #i‡
W_DEBUG_LEVEL
>0

849 
	`Ârötf
(
°dîr
,

853 
	`DBG
(<<"Level 2");

859 
bt
 = 
√w
 
båì_m
;

860 i‡(! 
bt
) {

861 
	`W_FATAL
(
eOUTOFMEMORY
);

864 
fi
 = 
√w
 
fûe_m
;

865 i‡(! 
fi
) {

866 
	`W_FATAL
(
eOUTOFMEMORY
);

869 
π
 = 
√w
 
πªe_m
;

870 i‡(! 
π
) {

871 
	`W_FATAL
(
eOUTOFMEMORY
);

874 
ø
 = 
√w
 
ønges_m
;

875 i‡(! 
ø
) {

876 
	`W_FATAL
(
eOUTOFMEMORY
);

880 
	`DBG
(<<"Level 3");

884 
chk±
 = 
√w
 
chk±_m
;

885 i‡(! 
chk±
) {

886 
	`W_FATAL
(
eOUTOFMEMORY
);

889 
dú
 = 
√w
 
dú_m
;

890 i‡(! 
dú
) {

891 
	`W_FATAL
(
eOUTOFMEMORY
);

894 
	`DBG
(<<"Level 4");

898 
SSM
 = 
this
;

900 
lid
 = 
√w
 
	`lid_m
();

901 i‡(! 
lid
) {

902 
	`W_FATAL
(
eOUTOFMEMORY
);

905 
	`me
()->
	`m¨k_pö_cou¡
();

920 #i‚de‡
DEAD


921 
›ti⁄_t
::
	`°r_to_boﬁ
(
_loggög
->
	`vÆue
(), 
badVÆ
)

923 
åue


926 
	`w_as£π3
(!
badVÆ
);

928 
ª°¨t_m
 
ª°¨t
;

929 
smÀvñ_0
::
ªdo_tid
 = 
ª°¨t
.
	`ªdo_tid
();

930 
ª°¨t
.
	`ªcovî
(
log
->
	`ma°î_l¢
());

934 
num_vﬁumes_mou¡ed
 = 0;

935 
i
;

936 **
d«me
;

937 
d«me
 = 
√w
 *[
max_vﬁs
];

938 i‡(!
d«me
) {

939 
	`W_FATAL
(
fcOUTOFMEMORY
);

941 
i
 = 0; i < 
max_vﬁs
; i++) {

942 
d«me
[
i
] = 
√w
 [
smÀvñ_0
::
max_dev«me
+1];

943 i‡(!
d«me
[
i
]) {

944 
	`W_FATAL
(
fcOUTOFMEMORY
);

947 
vid_t
 *
vid
 = 
√w
 vid_t[
max_vﬁs
];

948 i‡(!
vid
) {

949 
	`W_FATAL
(
fcOUTOFMEMORY
);

952 
	`W_COERCE
–
io
->
	`gë_vﬁs
(0, 
max_vﬁs
, 
d«me
, 
vid
, 
num_vﬁumes_mou¡ed
) );

956 
	`W_COERCE
–
io
->
	`dismou¡_Æl
(
åue
 ) );

961 
i
 = 0; i < 
num_vﬁumes_mou¡ed
; i++) {

962 
uöt
 
vﬁ_˙t
;

963 
rc_t
 
rc
;

964 
rc
 = 
	`_mou¡_dev
(
d«me
[
i
], 
vﬁ_˙t
, 
vid
[i]) ;

965 if(
rc
.
	`is_îr‹
()) {

966 
ss_m
::
îæog
->
˛og
 << 
w¨nög_¥io


967 << "Vﬁumê⁄ devi˚ " << 
d«me
[
i
]

969 << 
Êushl
;

971 
	`W_COERCE
–
	`_dismou¡_dev
(
d«me
[
i
], 
Ál£
));

974 
dñëe
 [] 
vid
;

975 
i
 = 0; i < 
max_vﬁs
; i++)

976 
dñëe
 [] 
d«me
[
i
];

977 
dñëe
 [] 
d«me
;

980 
smÀvñ_0
::
ªdo_tid
 = 0;

984 
smÀvñ_0
::
›î©ög_mode
 = 
t_f‹w¨d_¥o˚ssög
;

985 if(
log
Ëlog->
	`a˘iv©e_ª£rv©i⁄s
();

991 if(
log
) {

992 
bf
->
	`f‹˚_u¡û_l¢
(
log
->
	`cuº_l¢
());

993 
chk±
->
	`wakeup_™d_èke
();

996 
	`me
()->
	`check_pö_cou¡
(0);

1000 
sm_c⁄fig_öfo_t
 
c⁄f
;

1001 
	`W_COERCE
(
	`c⁄fig_öfo
(
c⁄f
));

1002 if(
c⁄f
.
max_smÆl_ªc
 !
ssm_c⁄°™ts
::max_small_rec)

1004 
°d
::
˚º
 << " constants don't match config info: "

1005 << "c⁄f.max_smÆl_ª¯" << 
c⁄f
.
max_smÆl_ªc


1007 
ssm_c⁄°™ts
::
max_smÆl_ªc


1008 << 
ídl
;

1010 
	`w_as£π1
(
c⁄f
.
max_smÆl_ªc
 =
ssm_c⁄°™ts
::max_small_rec);

1011 
	`w_as£π1
(
c⁄f
.
lg_ªc_∑ge_•a˚
 =
ssm_c⁄°™ts
::lg_rec_page_space);

1014 
chk±
->
	`•awn_chk±_thªad
();

1016 
do_¥e„tch
 =

1017 
›ti⁄_t
::
	`°r_to_boﬁ
(
_¥e„tch
->
	`vÆue
(), 
badVÆ
);

1018 
	`w_as£π3
(!
badVÆ
);

1019 
	`DBG
(<<"constructor done");

1020 
	}
}

1022 
	gss_m
::~
	$ss_m
()

1027 
	`CRITICAL_SECTION
(
cs
, 
ssm_⁄˚_muãx
);

1028 
	`_de°ru˘_⁄˚
();

1029 
	}
}

1032 
	gss_m
::
	$_de°ru˘_⁄˚
()

1034 
	`FUNC
(
ss_m
::~ss_m);

1036 --
_ö°™˚_˙t
;

1038 i‡(
_ö°™˚_˙t
) {

1039 if(
îæog
) {

1040 
îæog
->
˛og
 << 
w¨nög_¥io
 << "ss_m::~ss_m() : \n"

1042 << "\tign‹ed" << 
Êushl
;

1044 
˚º
 << "ss_m::~ss_m() : \n"

1046 << "\tign‹ed" << 
ídl
;

1052 
	`W_COERCE
(
bf
->
	`dißbÀ_background_Êushög
());

1054 
shuâög_down
 = 
åue
;

1058 if(
	`x˘
()) {

1059 
	`me
()->
	`dëach_x˘
(
	`x˘
());

1062 
≈ª∑ªd
 = 
x˘_t
::
	`˛ónup
();

1064 i‡(
shutdown_˛ón
) {

1070 
	`W_COERCE
–
dú
->
	`dismou¡_Æl
(
shutdown_˛ón
, 
Ál£
) );

1072 
	`W_COERCE
–
bf
->
	`f‹˚_Æl
(
åue
) );

1073 
	`me
()->
	`check_a˘uÆ_pö_cou¡
(0);

1080 if(
log
Ë
bf
->
	`f‹˚_u¡û_l¢
÷og->
	`cuº_l¢
());

1081 
chk±
->
	`wakeup_™d_èke
();

1084 
chk±
->
	`ªtúe_chk±_thªad
();

1086 i‡(
≈ª∑ªd
 > 0)

1090 
AutoTu∫OffLoggög
 
tu∫edOnWhíDe°royed
;

1093 
	`W_COERCE
–
dú
->
	`dismou¡_Æl
(
shutdown_˛ón
, 
åue
) );

1096 
	`W_COERCE
–
dev
->
	`dismou¡_Æl
() );

1101 
chk±
->
	`ªtúe_chk±_thªad
();

1103 
log_m
* 
ßved_log
 = 
log
;

1104 
log
 = 0;

1106 
	`W_COERCE
–
dú
->
	`dismou¡_Æl
(
shutdown_˛ón
) );

1107 
	`W_COERCE
–
dev
->
	`dismou¡_Æl
() );

1109 
log
 = 
ßved_log
;

1112 
≈ª∑ªd
 = 
x˘_t
::
	`˛ónup
(
åue
);

1113 
	`w_as£π1
(
≈ª∑ªd
 == 0);

1114 
	`w_as£π1
(
x˘_t
::
	`num_a˘ive_x˘s
() == 0);

1116 
lm
->
	`as£π_em±y
();

1118 #ifde‡
SM_HISTOGRAM


1119 
	`W_COERCE
–
	`de°roy_Æl_hi°ogøms
() );

1125 
dñëe
 
lid
;Üid=0;

1130 
dñëe
 
dú
; dir = 0;

1131 
dñëe
 
chk±
; chkpt = 0;

1137 
dñëe
 
ø
;Ña = 0;

1138 
dñëe
 
π
;Ñt = 0;

1139 
dñëe
 
fi
; fi = 0;

1140 
dñëe
 
bt
; bt = 0;

1148 
dñëe
 
lm
;Üm = 0;

1150 
dñëe
 
bf
; bf = 0;

1152 if(
log
) {

1153 
log
->
	`shutdown
();

1156 
log
 = 0;

1158 
dñëe
 
io
; io = 0;

1159 
dñëe
 
dev
; dev = 0;

1163 i‡(
îæog
) {

1164 
dñëe
 
îæog
;Érrlog = 0;

1170 
w_rc_t
 
e
;

1171 *
unu£d
;

1172 
e
 = 
smthªad_t
::
	`£t_bufsize
(0, 
unu£d
);

1173 i‡(
e
.
	`is_îr‹
()) {

1174 
˚º
 << "ss_m: W¨nög: së_bufsize(0):" << 
ídl
 << 
e
 <<Éndl;

1176 
	}
}

1178 
	gss_m
::
	$£t_shutdown_Êag
(
boﬁ
 
˛ón
)

1180 
shutdown_˛ón
 = 
˛ón
;

1181 
	}
}

1192 
rc_t


1193 
	gss_m
::
	$begö_x˘
(

1194 
sm_°©s_öfo_t
* 
_°©s
,

1195 
timeout_ö_ms
 
timeout
)

1197 
	`SM_PROLOGUE_RC
(
ss_m
::
begö_x˘
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1198 
tid_t
 
tid
;

1199 
	`W_DO
(
	`_begö_x˘
(
_°©s
, 
tid
, 
timeout
));

1200  
RCOK
;

1201 
	}
}

1202 
rc_t


1203 
	gss_m
::
	$begö_x˘
(
timeout_ö_ms
 
timeout
)

1205 
	`SM_PROLOGUE_RC
(
ss_m
::
begö_x˘
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1206 
tid_t
 
tid
;

1207 
	`W_DO
(
	`_begö_x˘
(0, 
tid
, 
timeout
));

1208  
RCOK
;

1209 
	}
}

1214 
rc_t


1215 
	gss_m
::
	$begö_x˘
(
tid_t
& 
tid
, 
timeout_ö_ms
 
timeout
)

1217 
	`SM_PROLOGUE_RC
(
ss_m
::
begö_x˘
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1218 
	`W_DO
(
	`_begö_x˘
(0, 
tid
, 
timeout
));

1219  
RCOK
;

1220 
	}
}

1225 
rc_t


1226 
	gss_m
::
	$commô_x˘
(
sm_°©s_öfo_t
*& 
_°©s
, 
boﬁ
 
œzy
,

1227 
l¢_t
* 
∂a°l¢
)

1229 
	`SM_PROLOGUE_RC
(
ss_m
::
commô_x˘
, 
commôabÀ_x˘
, 
ªad_wrôe
, 0);

1231 
	`W_DO
(
	`_commô_x˘
(
_°©s
, 
œzy
, 
∂a°l¢
));

1232 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1234  
RCOK
;

1235 
	}
}

1237 
rc_t


1238 
	gss_m
::
	$commô_x˘
(
boﬁ
 
œzy
, 
l¢_t
* 
∂a°l¢
)

1240 
	`SM_PROLOGUE_RC
(
ss_m
::
commô_x˘
, 
commôabÀ_x˘
, 
ªad_⁄ly
, 0);

1242 
sm_°©s_öfo_t
* 
_°©s
=0;

1243 
	`W_DO
(
	`_commô_x˘
(
_°©s
,
œzy
,
∂a°l¢
));

1244 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1248 
dñëe
 
_°©s
;

1250  
RCOK
;

1251 
	}
}

1256 
rc_t


1257 
	gss_m
::
	$¥ï¨e_x˘
(
vŸe_t
 &
v
)

1259 
sm_°©s_öfo_t
* 
_°©s
=0;

1260 
rc_t
 
e
 = 
	`¥ï¨e_x˘
(
_°©s
, 
v
);

1264 
dñëe
 
_°©s
;

1265  
e
;

1266 
	}
}

1267 
rc_t


1268 
	gss_m
::
	$¥ï¨e_x˘
(
sm_°©s_öfo_t
*& 
_°©s
, 
vŸe_t
 &
v
)

1270 
v
 = 
vŸe_bad
;

1275 
	`SM_PROLOGUE_RC
(
ss_m
::
¥ï¨e_x˘
, 
ab‹èbÀ_x˘
, 
ªad_wrôe
, 0);

1276 
x˘_t
& 
x
 = *
	`x˘
();

1277 if–
x
.
	`is_exã∫2pc
(Ë&& x.
	`°©e
()==
x˘_t
::
x˘_¥ï¨ed
) {

1279 
v
 = (
vŸe_t
)
x
.
	`vŸe
();

1280  
RCOK
;

1287 
w_rc_t
 
rc
 = 
	`_¥ï¨e_x˘
(
_°©s
, 
v
);

1291 if(
rc
.
	`is_îr‹
(Ë&& !
	`x˘
()) {

1293 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1294 } 
v
) {

1300 
vŸe_ab‹t
:

1301 
vŸe_ªad⁄ly
:

1302 
	`w_as£π3
(!
	`x˘
());

1303 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1305 
vŸe_bad
:

1307 
vŸe_commô
:

1308 
	`w_as£π3
(
	`x˘
());

1312  
rc
;

1313 
	}
}

1318 
rc_t


1319 
	gss_m
::
	$ab‹t_x˘
(
sm_°©s_öfo_t
*& 
_°©s
)

1321 
	`SM_PROLOGUE_RC
(
ss_m
::
ab‹t_x˘
, 
ab‹èbÀ_x˘
, 
ªad_⁄ly
, 0);

1326 
	`W_DO
(
	`_ab‹t_x˘
(
_°©s
));

1327 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1329  
RCOK
;

1330 
	}
}

1331 
rc_t


1332 
	gss_m
::
	$ab‹t_x˘
()

1334 
	`SM_PROLOGUE_RC
(
ss_m
::
ab‹t_x˘
, 
ab‹èbÀ_x˘
, 
ªad_⁄ly
, 0);

1335 
sm_°©s_öfo_t
* 
_°©s
;

1338 
	`W_DO
(
	`_ab‹t_x˘
(
_°©s
));

1342 
dñëe
 
_°©s
;

1343 
¥ﬁogue
.
	`no_l⁄gî_ö_x˘
();

1345  
RCOK
;

1346 
	}
}

1351 
rc_t


1352 
	gss_m
::
	$£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &
h
)

1354 
	`SM_PROLOGUE_RC
(
ss_m
::
£t_co‹dö©‹
, 
ö_x˘
, 
ªad_⁄ly
, 0);

1355  
	`_£t_co‹dö©‹
(
h
);

1356 
	}
}

1361 
rc_t


1362 
	gss_m
::
	$f‹˚_vŸe_ªad⁄ly
()

1364 
	`SM_PROLOGUE_RC
(
ss_m
::
f‹˚_vŸe_ªad⁄ly
, 
ö_x˘
, 
ªad_⁄ly
, 0);

1366 
	`W_DO
(
	`_f‹˚_vŸe_ªad⁄ly
());

1367  
RCOK
;

1368 
	}
}

1373 
rc_t


1374 
	gss_m
::
	$íãr_2pc
(c⁄° 
gtid_t
 &
gtid
)

1376 
	`SM_PROLOGUE_RC
(
ss_m
::
íãr_2pc
, 
ö_x˘
, 
ªad_⁄ly
, 0);

1378 
	`W_DO
(
	`_íãr_2pc
(
gtid
));

1379 
	`SSMTEST
("enter.2pc.1");

1381  
RCOK
;

1382 
	}
}

1387 
rc_t


1388 
	gss_m
::
	$ªcovî_2pc
(c⁄° 
gtid_t
 &
gtid
,

1389 
boﬁ
 
mayblock
,

1390 
tid_t
 &
tid


1393 
	`SM_PROLOGUE_RC
(
ss_m
::
ªcovî_2pc
, 
nŸ_ö_x˘
, 
ªad_⁄ly
,0);

1395 
	`SSMTEST
("recover.2pc.1");

1396 
	`W_DO
(
	`_ªcovî_2pc
(
gtid
, 
mayblock
, 
tid
));

1397 
	`SSMTEST
("recover.2pc.2");

1399  
RCOK
;

1400 
	}
}

1405 
rc_t


1406 
	gss_m
::
	$ßve_w‹k
(
sm_ßve_poöt_t
& 
•
)

1411 
	`SM_PROLOGUE_RC
(
ss_m
::
ßve_w‹k
, 
ö_x˘
, 
ªad_wrôe
, 0);

1412 
	`W_DO
–
	`_ßve_w‹k
(
•
) );

1413  
RCOK
;

1414 
	}
}

1419 
rc_t


1420 
	gss_m
::
	$rﬁlback_w‹k
(c⁄° 
sm_ßve_poöt_t
& 
•
)

1422 
	`SM_PROLOGUE_RC
(
ss_m
::
rﬁlback_w‹k
, 
ö_x˘
, 
ªad_wrôe
, 0);

1423 
	`W_DO
–
	`_rﬁlback_w‹k
(
•
) );

1424  
RCOK
;

1425 
	}
}

1430 
	gw_ba£_t
::
uöt4_t


1431 
ss_m
::
	$num_a˘ive_x˘s
()

1433  
x˘_t
::
	`num_a˘ive_x˘s
();

1434 
	}
}

1438 
x˘_t
* 
	gss_m
::
	$tid_to_x˘
(c⁄° 
tid_t
& 
tid
)

1440  
x˘_t
::
	`look_up
(
tid
);

1441 
	}
}

1446 
tid_t
 
	gss_m
::
	$x˘_to_tid
(c⁄° 
x˘_t
* 
x
)

1448 
	`w_as£π3
(
x
 !
NULL
);

1449  
x
->
	`tid
();

1450 
	}
}

1455 
rc_t
 
	gss_m
::
	$dump_x˘s
(
o°ªam
& 
o
)

1457 
x˘_t
::
	`dump
(
o
);

1458  
RCOK
;

1459 
	}
}

1464 
	gss_m
::
x˘_°©e_t
 
ss_m
::
	$°©e_x˘
(c⁄° 
x˘_t
* 
x
)

1466 
	`w_as£π3
(
x
 !
NULL
);

1467  
x
->
	`°©e
();

1468 
	}
}

1470 
	gsmÀvñ_0
::
fûeoff_t
 
ss_m
::
	$x˘_log_•a˚_√eded
()

1472 
	`w_as£π3
(
	`x˘
(Ë!
NULL
);

1473  
	`x˘
()->
	`gë_log_•a˚_u£d
();

1474 
	}
}

1476 
rc_t
 
	gss_m
::
	$x˘_ª£rve_log_•a˚
(
fûeoff_t
 
amt
) {

1477 
	`w_as£π3
(
	`x˘
(Ë!
NULL
);

1478  
	`x˘
()->
	`waô_f‹_log_•a˚
(
amt
);

1479 
	}
}

1484 
	gsmÀvñ_0
::
c⁄cuºícy_t
 
ss_m
::
	$x˘_lock_Àvñ
()

1487 
	`FUNC
(
ss_m
::
x˘_lock_Àvñ
);

1488 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
ö_x˘
,Örﬁogue_rc_t::
ªad_⁄ly
, 0);

1489 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()) {

1490 
	`W_FATAL_MSG
(
¥ﬁogue
.
	`rc
().
	`îr_num
(), << "Entering "

1493  
	`x˘
()->
	`gë_lock_Àvñ
();

1497 
	`w_as£π1
(
	`x˘
());

1498  
	`x˘
()->
	`gë_lock_Àvñ
();

1499 
	}
}

1504 
	gss_m
::
	$£t_x˘_lock_Àvñ
(
c⁄cuºícy_t
 
l
)

1507 
	`FUNC
(
ss_m
::
£t_x˘_lock_Àvñ
);

1508 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
ö_x˘
,¥ﬁogue_rc_t::
ªad_⁄ly
, 0);

1509 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()) {

1510 
	`W_FATAL_MSG
(
¥ﬁogue
.
	`rc
().
	`îr_num
(), << "Entering "

1516 
	`w_as£π1
(
	`x˘
());

1517 
	`W_COERCE
(
	`x˘
()->
	`check_⁄e_thªad_©èched
());

1518 
	`w_as£π1
(
l
 =
t_cc_ªc‹d
 ||Ü =
t_cc_∑ge
 ||Ü =
t_cc_fûe
);

1520 
	`x˘
()->
	`lock_Àvñ
(
l
);

1521 
	}
}

1526 
rc_t


1527 
	gss_m
::
	$chaö_x˘
–
sm_°©s_öfo_t
*& 
_°©s
, 
boﬁ
 
œzy
)

1529 
	`SM_PROLOGUE_RC
(
ss_m
::
chaö_x˘
, 
commôabÀ_x˘
, 
ªad_⁄ly
, 0);

1530 
	`W_DO
–
	`_chaö_x˘
(
_°©s
, 
œzy
) );

1531  
RCOK
;

1532 
	}
}

1533 
rc_t


1534 
	gss_m
::
	$chaö_x˘
(
boﬁ
 
œzy
)

1536 
	`SM_PROLOGUE_RC
(
ss_m
::
chaö_x˘
, 
commôabÀ_x˘
, 
ªad_⁄ly
, 0);

1537 
sm_°©s_öfo_t
 *
_°©s
 = 0;

1538 
	`W_DO
–
	`_chaö_x˘
(
_°©s
, 
œzy
) );

1542 
dñëe
 
_°©s
;

1543  
RCOK
;

1544 
	}
}

1550 
rc_t


1551 
	gss_m
::
	$Êushlog
()

1554 
bf
->
	`f‹˚_u¡û_l¢
(
log
->
	`cuº_l¢
(), 
Ál£
);

1555  (
RCOK
);

1556 
	}
}

1562 
rc_t


1563 
	gss_m
::
	$checkpoöt
()

1566 
chk±
->
	`wakeup_™d_èke
();

1567  
RCOK
;

1568 
	}
}

1574 
rc_t


1575 
	gss_m
::
	$f‹˚_buf„rs
(
boﬁ
 
Êush
)

1577 
	`W_DO
–
bf
->
	`f‹˚_Æl
(
Êush
) );

1579  
RCOK
;

1580 
	}
}

1582 
rc_t


1583 
	gss_m
::
	$f‹˚_vﬁ_hdr_buf„rs
(c⁄° 
vid_t
& 
vid
)

1585 i‡(
vid
 =
vid_t
::
nuŒ
Ë 
	`RC
(
eBADVOL
);

1588 
°id_t
 
	`°id
(
vid
, 0);

1589 
	`W_DO
–
bf
->
	`f‹˚_°‹e
(
°id
, 
åue
 ) );

1590  
RCOK
;

1591 
	}
}

1597 
rc_t


1598 
	gss_m
::
	$f‹˚_°‹e_buf„rs
(c⁄° 
°id_t
& 
°id
, 
boﬁ
 
övÆid©e
)

1600 
	`W_DO
–
bf
->
	`f‹˚_°‹e
(
°id
, 
övÆid©e
) );

1601  
RCOK
;

1602 
	}
}

1608 
rc_t


1609 
	gss_m
::
	$dump_buf„rs
(
o°ªam
 &
o
)

1611 
bf
->
	`dump
(
o
);

1612  
RCOK
;

1613 
	}
}

1619 
rc_t


1620 
	gss_m
::
	$dump_exts
(
o°ªam
 &
o
, 
vid_t
 
vid
, 
exäum_t
 
°¨t
,Éxäum_à
íd
)

1622 
	`W_DO
–
io
->
	`dump_exts
(
o
, 
vid
, 
°¨t
, 
íd
) );

1623  
RCOK
;

1624 
	}
}

1630 
rc_t


1631 
	gss_m
::
	$dump_°‹es
(
o°ªam
 &
o
, 
vid_t
 
vid
, 
°¨t
, 
íd
)

1633 
	`W_DO
–
io
->
	`dump_°‹es
(
o
, 
vid
, 
°¨t
, 
íd
) );

1634  
RCOK
;

1635 
	}
}

1641 
rc_t
 
	gss_m
::
	$dump_hi°o
(
o°ªam
 &
o
, 
boﬁ
 
locked
)

1643 
hi°oid_t
::
	`¥öt_ˇche
(
o
, 
locked
);

1644 
o
 << 
ídl
;

1645  
RCOK
;

1646 
	}
}

1652 
rc_t


1653 
	gss_m
::
	$¢≠shŸ_buf„rs
(
u_öt
& 
ndúty
,

1654 
u_öt
& 
n˛ón
,

1655 
u_öt
& 
n‰ì
,

1656 
u_öt
& 
nfixed
)

1658 
bf_m
::
	`¢≠shŸ
(
ndúty
, 
n˛ón
, 
n‰ì
, 
nfixed
);

1659  
RCOK
;

1660 
	}
}

1666 
rc_t


1667 
	gss_m
::
	$c⁄fig_öfo
(
sm_c⁄fig_öfo_t
& 
öfo
)

1669 
öfo
.
∑ge_size
 = 
ss_m
::
∑ge_sz
;

1671 #i‡
W_DEBUG_LEVEL
 > 1

1673 if–
	`w_off£tof
(
∑ge_s
,
l¢2
Ë+ (
l¢_t
Ë!
ss_m
::
∑ge_sz
)

1675 
°d
::
˚º
 << "page sizeárithmetic is broken! "

1676 << 
ídl


1677 << "Öage_sz " << 
ss_m
::
∑ge_sz


1678 << 
ídl


1680 << 
	`w_off£tof
(
∑ge_s
,
l¢2
Ë+ (
l¢_t
)

1681 << 
ídl


1682 << " d©a_sz " << 
∑ge_s
::
d©a_sz


1683 << 
ídl


1684 << " foŸî_sz " << 
∑ge_s
::
foŸî_sz


1685 << 
ídl


1686 << "álign(foŸî_szË" << 
	`Æign
(
∑ge_s
::
foŸî_sz
)

1687 << 
ídl


1688 << " _hdr_sz " << 
∑ge_s
::
_hdr_sz


1689 << 
ídl


1690 << " hdr_sz " << 
∑ge_s
::
hdr_sz


1691 << 
ídl


1692 << " slŸ_à" << (
∑ge_s
::
¶Ÿ_t
)

1693 << 
ídl


1694 << "Ü¢_à" << (
l¢_t
)

1695 << 
ídl


1696 << "Üpid_à" << (
Õid_t
)

1697 << 
ídl


1698 << " shpid_à" << (
shpid_t
)

1699 << 
ídl


1700 << " s∑˚_à" << (
∑ge_s
::
•a˚_t
)

1701 << 
ídl


1703 (
∑ge_s
::
d©a_sz
 +Öage_s::
hdr_sz
)

1704 << 
ídl
;

1705 
°d
::
˚º
 << " off£to‡l¢1 " << 
	`w_off£tof
(
∑ge_s
,
l¢1
Ë<< std::
ídl
;

1706 
°d
::
˚º
 << " ---> " <<

1707 
	`w_off£tof
(
∑ge_s
,
l¢1
Ë+ (
l¢_t
Ë<< 
°d
::
ídl
;

1709 
°d
::
˚º
 << " off£to‡pid " << 
	`w_off£tof
(
∑ge_s
,
pid
Ë<< std::
ídl
;

1710 
°d
::
˚º
 << " ---> " <<

1711 
	`w_off£tof
(
∑ge_s
,
pid
Ë+ (
Õid_t
Ë<< 
°d
::
ídl
;

1713 
°d
::
˚º
 << " off£to‡√xà" << 
	`w_off£tof
(
∑ge_s
,
√xt
Ë<< std::
ídl
;

1714 
°d
::
˚º
 << " ---> " <<

1715 
	`w_off£tof
(
∑ge_s
,
√xt
Ë+ (
shpid_t
Ë<< 
°d
::
ídl
;

1717 
°d
::
˚º
 << " off£to‡¥ev " << 
	`w_off£tof
(
∑ge_s
,
¥ev
Ë<< std::
ídl
;

1718 
°d
::
˚º
 << " ---> " <<

1719 
	`w_off£tof
(
∑ge_s
,
¥ev
Ë+ (
shpid_t
Ë<< 
°d
::
ídl
;

1721 
°d
::
˚º
 << " off£to‡èg " << 
	`w_off£tof
(
∑ge_s
,
èg
Ë<< std::
ídl
;

1722 
°d
::
˚º
 << " ---> " <<

1723 
	`w_off£tof
(
∑ge_s
,
èg
Ë+ (
uöt2_t
Ë<< 
°d
::
ídl
;

1725 
°d
::
˚º
 <<" off£to‡fûl2 "<< 
	`w_off£tof
(
∑ge_s
,
_fûl2
Ë<< std::
ídl
;

1726 
°d
::
˚º
 << " ---> " <<

1727 
	`w_off£tof
(
∑ge_s
,
_fûl2
Ë+ (
fûl2
Ë<< 
°d
::
ídl
;

1729 
°d
::
˚º
 << " off£to‡•a˚ " << 
	`w_off£tof
(
∑ge_s
,
•a˚
Ë<< std::
ídl
;

1730 
°d
::
˚º
 << " ---> " <<

1731 
	`w_off£tof
(
∑ge_s
,
•a˚
Ë+ ’age_s::
•a˚_t
Ë<< 
°d
::
ídl
;

1733 
°d
::
˚º
 << " off£to‡íd " << 
	`w_off£tof
(
∑ge_s
,
íd
Ë<< std::
ídl
;

1734 
°d
::
˚º
 << " ---> " <<

1735 
	`w_off£tof
(
∑ge_s
,
íd
Ë+ ’age_s::
¶Ÿ_off£t_t
Ë<< 
°d
::
ídl
;

1737 
°d
::
˚º
 << " off£to‡n¶Ÿ†" << 
	`w_off£tof
(
∑ge_s
,
n¶Ÿs
Ë<< std::
ídl
;

1738 
°d
::
˚º
 << " ---> " <<

1739 
	`w_off£tof
(
∑ge_s
,
n¶Ÿs
Ë+ ’age_s::
¶Ÿ_off£t_t
Ë<< 
°d
::
ídl
;

1740 
°d
::
˚º
 << " off£to‡nvaˇ¡ " << 
	`w_off£tof
(
∑ge_s
,
nvaˇ¡
Ë<< std::
ídl
;

1741 
°d
::
˚º
 << " ---> " <<

1742 
	`w_off£tof
(
∑ge_s
,
nvaˇ¡
 ) + ’age_s::
¶Ÿ_off£t_t
Ë<< 
°d
::
ídl
;

1743 
°d
::
˚º
 <<" off£to‡fûl2b "<< 
	`w_off£tof
(
∑ge_s
,
_fûl2b
Ë<< std::
ídl
;

1744 
°d
::
˚º
 << " ---> " <<

1745 
	`w_off£tof
(
∑ge_s
,
_fûl2b
Ë+ (
fûl2
Ë<< 
°d
::
ídl
;

1747 
°d
::
˚º
 << " offsetof _private_store_flags "

1748 << 
	`w_off£tof
(
∑ge_s
,
_¥iv©e_°‹e_Êags
Ë<< 
°d
::
ídl
;

1749 
°d
::
˚º
 << " ---> " <<

1750 
	`w_off£tof
(
∑ge_s
,
_¥iv©e_°‹e_Êags
) +

1751 (
uöt4_t
Ë<< 
°d
::
ídl
;

1754 
°d
::
˚º
 << " off£to‡∑ge_Êag†" << 
	`w_off£tof
(
∑ge_s
,
∑ge_Êags
Ë<< std::
ídl
;

1755 
°d
::
˚º
 << " ---> " <<

1756 
	`w_off£tof
(
∑ge_s
,
∑ge_Êags
) +

1757 (
uöt4_t
Ë<< 
°d
::
ídl
;

1759 
°d
::
˚º
 << " off£to‡d©®" << 
	`w_off£tof
(
∑ge_s
,
_¶Ÿs
.
d©a
Ë<< std::
ídl
;

1760 
°d
::
˚º
 << " -- sizeof(prior data) "

1761 << (
l¢_t
Ë+ (
Õid_t
)

1762 + (
shpid_t
)

1763 + (
shpid_t
)

1764 + (
uöt2_t
)

1765 + (
fûl2
)

1766 + 3*(
∑ge_s
::
¶Ÿ_off£t_t
)

1767 + (
∑ge_s
::
•a˚_t
)

1768 + (
uöt4_t
)

1769 + (
uöt4_t
)

1770 << 
°d
::
ídl
;

1771 
°d
::
˚º
 << " off£to‡ª£rved_¶Ÿ " << 
	`w_off£tof
(
∑ge_s
,
_¶Ÿs
.
¶Ÿ
[∑ge_s::
max_¶Ÿ
-2]Ë<< std::
ídl
;

1772 
°d
::
˚º
 << " off£to‡¶Ÿ " << 
	`w_off£tof
(
∑ge_s
,
_¶Ÿs
.
¶Ÿ
[∑ge_s::
max_¶Ÿ
-1]Ë<< std::
ídl
;

1773 
°d
::
˚º
 << " off£to‡l¢2 " << 
	`w_off£tof
(
∑ge_s
,
l¢2
Ë<< std::
ídl
;

1774 
	`W_FATAL_MSG
(
eINTERNAL
, << "page-sizeárithmetic ");

1776 
°d
::
˚º
 << " sizeo‡ª˘ag_à" << (
ª˘ag_t
Ë<< std::
ídl
;

1777 
°d
::
˚º
 << " fûe_p::d©a_sz " << 
fûe_p
::
d©a_sz
 << std::
ídl
;

1778 
°d
::
˚º
 << " fûe_mrbt_p::d©a_sz " << 
fûe_mrbt_p
::
d©a_sz
 << std::
ídl
;

1779 
°d
::
˚º
 << " sizeo‡fûe_p_hdr_à" << (
fûe_p_hdr_t
Ë<< std::
ídl
;

1791 
öfo
.
max_smÆl_ªc
 = 
fûe_p
::
d©a_sz
 - (
ª˘ag_t
);

1793 
öfo
.
lg_ªc_∑ge_•a˚
 = 
lgd©a_p
::
d©a_sz
;

1794 
öfo
.
buf„r_poﬁ_size
 = 
bf_m
::
	`≈ages
(Ë* 
ss_m
::
∑ge_sz
 / 1024;

1795 
öfo
.
max_båì_íåy_size
 = 
båì_m
::
	`max_íåy_size
();

1796 
öfo
.
exts_⁄_∑ge
 = 
io
->
	`max_exã¡s_⁄_∑ge
();

1797 
öfo
.
∑ges_≥r_ext
 = 
smÀvñ_0
::
ext_sz
;

1799 
öfo
.
loggög
 = (
ss_m
::
log
 != 0);

1801 
öfo
.
mu…i_thªaded_x˘
 = 
åue
;

1803  
RCOK
;

1804 
	}
}

1809 
rc_t


1810 
	gss_m
::
	$£t_disk_dñay
(
u_öt
 
mûli_£c
)

1812 
	`W_DO
(
io_m
::
	`£t_disk_dñay
(
mûli_£c
));

1813  
RCOK
;

1814 
	}
}

1819 
rc_t


1820 
	gss_m
::
	$°¨t_log_c‹ru±i⁄
()

1822 
	`SM_PROLOGUE_RC
(
ss_m
::
°¨t_log_c‹ru±i⁄
, 
ö_x˘
, 
ªad_⁄ly
, 0);

1823 if(
log
) {

1826 
îæog
->
˛og
 << 
emîg_¥io
 << "Sèπög Log C‹ru±i⁄" << 
Êushl
;

1827 
log
->
	`°¨t_log_c‹ru±i⁄
();

1829  
RCOK
;

1830 
	}
}

1835 
rc_t


1836 
	gss_m
::
	$sync_log
(
boﬁ
 
block
)

1838  
log
?Üog->
	`Êush_Æl
(
block
Ë: 
RCOK
;

1839 
	}
}

1844 
rc_t


1845 
	gss_m
::
	$Êush_u¡û
(
l¢_t
& 
™l¢
, 
boﬁ
 
block
)

1847  
log
->
	`Êush
(
™l¢
, 
block
);

1848 
	}
}

1853 
rc_t


1854 
	gss_m
::
	$gë_cuº_l¢
(
l¢_t
& 
™l¢
)

1856 
™l¢
 = 
log
->
	`cuº_l¢
();

1857  (
RCOK
);

1858 
	}
}

1863 
rc_t


1864 
	gss_m
::
	$gë_duøbÀ_l¢
(
l¢_t
& 
™l¢
)

1866 
™l¢
 = 
log
->
	`duøbÀ_l¢
();

1867  (
RCOK
);

1868 
	}
}

1877 
rc_t


1878 
	gss_m
::
	$f‹m©_dev
(c⁄° * 
devi˚
, 
smksize_t
 
size_ö_KB
, 
boﬁ
 
f‹˚
)

1881 
	`FUNC
(
ss_m
::
f‹m©_dev
);

1883 if(
size_ö_KB
 > 
°hªad_t
::
max_os_fûe_size
 / 1024) {

1884  
	`RC
(
eDEVTOOLARGE
);

1887 
¥ﬁogue_rc_t
 
	`¥ﬁogue
’rﬁogue_rc_t::
nŸ_ö_x˘
,

1888 
¥ﬁogue_rc_t
::
ªad_⁄ly
,0);

1889 i‡(
¥ﬁogue
.
	`îr‹_occuºed
()ËÖrﬁogue.
	`rc
();

1891 
boﬁ
 
ªsu…
 = 
dev
->
	`is_mou¡ed
(
devi˚
);

1892 if(
ªsu…
) {

1893  
	`RC
(
eALREADYMOUNTED
);

1895 
	`DBG
–<< "Æªady mou¡ed=" << 
ªsu…
 );

1897 
	`W_DO
(
vﬁ_t
::
	`f‹m©_dev
(
devi˚
,

1899 
	`shpid_t
(
size_ö_KB
/(
∑ge_sz
/1024)), 
f‹˚
));

1901  
RCOK
;

1902 
	}
}

1907 
rc_t


1908 
	gss_m
::
	$mou¡_dev
(c⁄° * 
devi˚
, 
u_öt
& 
vﬁ_˙t
, 
devid_t
& 
devid
, 
vid_t
 
loˇl_vid
)

1910 
	`SM_PROLOGUE_RC
(
ss_m
::
mou¡_dev
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1912 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

1915 
	`W_DO
(
	`_mou¡_dev
(
devi˚
, 
vﬁ_˙t
, 
loˇl_vid
));

1919 
devid
 = 
	`devid_t
(
devi˚
);

1920 
	`w_as£π3
(
devid
 !
devid_t
::
nuŒ
);

1921  
RCOK
;

1922 
	}
}

1929 
rc_t


1930 
	gss_m
::
	$dismou¡_dev
(c⁄° * 
devi˚
)

1932 
	`SM_PROLOGUE_RC
(
ss_m
::
dismou¡_dev
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1934 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

1936 i‡(
x˘_t
::
	`num_a˘ive_x˘s
()) {

1937 
	`Ârötf
(
°dîr
, "ActiveÅransactions: %d : cannot dismount %s\n",

1938 
x˘_t
::
	`num_a˘ive_x˘s
(), 
devi˚
);

1939  
	`RC
(
eCANTWHILEACTIVEXCTS
);

1941 
	`W_DO
–
	`_dismou¡_dev
(
devi˚
) );

1945 
chk±
->
	`èke
();

1947 
	`DBG
(<<"dismount_dev ok");

1949  
RCOK
;

1950 
	}
}

1957 
rc_t


1958 
	gss_m
::
	$dismou¡_Æl
()

1960 
	`SM_PROLOGUE_RC
(
ss_m
::
dismou¡_Æl
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

1962 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

1966 i‡(
x˘_t
::
	`num_a˘ive_x˘s
()) {

1967 
	`Ârötf
(
°dîr
,

1969 
x˘_t
::
	`num_a˘ive_x˘s
());

1970  
	`RC
(
eCANTWHILEACTIVEXCTS
);

1972 
	`W_DO
–
dú
->
	`dismou¡_Æl
() );

1976 
chk±
->
	`èke
();

1979 
	`W_DO
–
io
->
	`dismou¡_Æl_dev
() );

1981  
RCOK
;

1982 
	}
}

1987 
rc_t


1988 
	gss_m
::
	$li°_devi˚s
(c⁄° **& 
dev_li°
, 
devid_t
*& 
devid_li°
, 
u_öt
& 
dev_˙t
)

1990 
	`SM_PROLOGUE_RC
(
ss_m
::
li°_devi˚s
, 
nŸ_ö_x˘
, 
ªad_⁄ly
,0);

1991 
	`W_DO
(
io
->
	`li°_devi˚s
(
dev_li°
, 
devid_li°
, 
dev_˙t
));

1992  
RCOK
;

1993 
	}
}

1995 
rc_t


1996 
	gss_m
::
	$li°_vﬁumes
(c⁄° * 
devi˚
,

1997 
lvid_t
*& 
lvid_li°
,

1998 
u_öt
& 
lvid_˙t
)

2000 
	`SM_PROLOGUE_RC
(
ss_m
::
li°_vﬁumes
, 
ˇn_be_ö_x˘
, 
ªad_⁄ly
, 0);

2001 
lvid_˙t
 = 0;

2002 
lvid_li°
 = 
NULL
;

2006 
lvid_t
 
lvid
;

2007 
	`W_DO
(
io
->
	`gë_lvid
(
devi˚
, 
lvid
));

2008 i‡(
lvid
 !
lvid_t
::
nuŒ
) {

2009 
lvid_li°
 = 
√w
 
lvid_t
[1];

2010 
lvid_li°
[0] = 
lvid
;

2011 i‡(
lvid_li°
 =
NULL
Ë 
	`RC
(
eOUTOFMEMORY
);

2012 
lvid_˙t
 = 1;

2014  
RCOK
;

2015 
	}
}

2020 
rc_t


2021 
	gss_m
::
	$gë_devi˚_quŸa
(c⁄° * 
devi˚
, 
smksize_t
& 
quŸa_KB
, smksize_t& 
quŸa_u£d_KB
)

2023 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_devi˚_quŸa
, 
ˇn_be_ö_x˘
, 
ªad_⁄ly
, 0);

2024 
	`W_DO
(
io
->
	`gë_devi˚_quŸa
(
devi˚
, 
quŸa_KB
, 
quŸa_u£d_KB
));

2025  
RCOK
;

2026 
	}
}

2028 
rc_t


2029 
	gss_m
::
	$gíî©e_√w_lvid
(
lvid_t
& 
lvid
)

2031 
	`SM_PROLOGUE_RC
(
ss_m
::
gíî©e_√w_lvid
, 
ˇn_be_ö_x˘
, 
ªad_⁄ly
, 0);

2032 
	`W_DO
(
lid
->
	`gíî©e_√w_vﬁid
(
lvid
));

2033  
RCOK
;

2034 
	}
}

2039 
rc_t


2040 
	gss_m
::
	$¸óã_vﬁ
(c⁄° * 
dev_«me
, c⁄° 
lvid_t
& 
lvid
,

2041 
smksize_t
 
quŸa_KB
, 
boﬁ
 
skù_øw_öô
, 
vid_t
 
loˇl_vid
,

2042 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
, c⁄° 
Áke_disk_œãncy
)

2044 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_vﬁ
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

2046 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

2049 i‡(!
io
->
	`is_mou¡ed
(
dev_«me
)Ë 
	`RC
(
eDEVNOTMOUNTED
);

2052 
vid_t
 
vid
 = 
io
->
	`gë_vid
(
lvid
);

2053 i‡(
vid
 !
vid_t
::
nuŒ
Ë 
	`RC
(
eVOLEXISTS
);

2055 
	`W_DO
(
	`_¸óã_vﬁ
(
dev_«me
, 
lvid
, 
quŸa_KB
, 
skù_øw_öô
,

2056 
≠∂y_Áke_io_œãncy
, 
Áke_disk_œãncy
));

2059 
u_öt
 
vﬁ_˙t
;

2060 
	`W_DO
(
	`_mou¡_dev
(
dev_«me
, 
vﬁ_˙t
, 
loˇl_vid
));

2061 
	`w_as£π3
(
vﬁ_˙t
 > 0);

2062  
RCOK
;

2063 
	}
}

2068 
rc_t


2069 
	gss_m
::
	$de°roy_vﬁ
(c⁄° 
lvid_t
& 
lvid
)

2071 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_vﬁ
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

2073 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

2075 i‡(
x˘_t
::
	`num_a˘ive_x˘s
()) {

2076 
	`Ârötf
(
°dîr
,

2078 
x˘_t
::
	`num_a˘ive_x˘s
());

2079  
	`RC
(
eCANTWHILEACTIVEXCTS
);

2082 
vid_t
 
vid
 = 
io
->
	`gë_vid
(
lvid
);

2084 i‡(
vid
 =
vid_t
::
nuŒ
)

2085  
	`RC
(
eBADVOL
);

2086 *
dev_«me
 = 
√w
 [
smÀvñ_0
::
max_dev«me
+1];

2087 i‡(!
dev_«me
)

2088 
	`W_FATAL
(
fcOUTOFMEMORY
);

2090 
w_auto_dñëe_¨øy_t
<> 
	`ad_dev_«me
(
dev_«me
);

2091 c⁄° * 
dev_«me_±r
 = 
io
->
	`dev_«me
(
vid
);

2092 
	`w_as£π1
(
dev_«me_±r
 !
NULL
);

2093 
	`°∫˝y
(
dev_«me
, 
dev_«me_±r
, 
smÀvñ_0
::
max_dev«me
);

2094 
	`w_as£π3
(
io
->
	`is_mou¡ed
(
dev_«me
));

2097 
smksize_t
 
quŸa_KB
;

2098 
	`W_DO
(
dev
->
	`quŸa
(
dev_«me
, 
quŸa_KB
));

2105 
	`W_DO
(
dú
->
	`dismou¡
(
vid
));

2107 
	`W_DO
(
vﬁ_t
::
	`f‹m©_dev
(
dev_«me
, 
	`shpid_t
(
quŸa_KB
/(
∑ge_sz
/1024)), 
åue
));

2109 
chk±
->
	`èke
();

2112 
u_öt
 
vﬁ_˙t
;

2113 
	`W_DO
(
	`_mou¡_dev
(
dev_«me
, 
vﬁ_˙t
, 
vid_t
::
nuŒ
));

2114 
	`w_as£π3
(
vﬁ_˙t
 == 0);

2116  
RCOK
;

2117 
	}
}

2124 
rc_t


2125 
	gss_m
::
	$gë_vﬁume_quŸa
(c⁄° 
lvid_t
& 
lvid
, 
smksize_t
& 
quŸa_KB
, smksize_t& 
quŸa_u£d_KB
)

2127 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_vﬁume_quŸa
, 
ˇn_be_ö_x˘
, 
ªad_⁄ly
, 0);

2128 
vid_t
 
vid
 = 
io
->
	`gë_vid
(
lvid
);

2129 
uöt4_t
 
_dummy
;

2130 
	`W_DO
(
io
->
	`gë_vﬁume_quŸa
(
vid
, 
quŸa_KB
, 
quŸa_u£d_KB
, 
_dummy
));

2131  
RCOK
;

2132 
	}
}

2135 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gextid_t
& 
	gx
)

2137  
	go
 << "x(" << 
	gx
.
	gvﬁ
 << '.' << x.
	gext
 << ')';

2141 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gextid_t
 &
	gextid
)

2143 
	gc
[5];

2144 
mem£t
(
c
, '\0', (c));

2145 
	gi
 >> 
	gc
[0];

2146 if(
	gi
.
good
())

2147 
	gi
 >> 
	gc
[1];

2148 if(
	gi
.
good
())

2149 
	gi
 >> 
	gextid
.
	gvﬁ
;

2150 if(
	gi
.
good
())

2151 
	gi
 >> 
	gc
[2];

2152 if(
	gi
.
good
())

2153 
	gi
 >> 
	gextid
.
	gext
;

2154 if(
	gi
.
good
())

2155 
	gi
 >> 
	gc
[3];

2156 
	gc
[4] = '\0';

2157 i‡(
	gi
) {

2158 i‡(
°rcmp
(
c
, "x(.)")) {

2159 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

2162  
	gi
;

2166 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gÕid_t
& 
	gpid
)

2168  
	go
 << "p(" << 
	gpid
.
vﬁ
(Ë<< '.' <<Öid.
°‹e
(Ë<< '.' <<Öid.
	g∑ge
 << ')';

2171 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gÕid_t
& 
	gpid
)

2173 
	gc
[6];

2174 
mem£t
(
c
, 0, (c));

2175 
	gi
 >> 
	gc
[0] >> c[1] >> 
	gpid
.
	g_°id
.
	gvﬁ
 >> c[2]

2176 >> 
	gpid
.
	g_°id
.
	g°‹e
 >> 
	gc
[3] >>Öid.
	g∑ge
 >> c[4];

2177 
	gc
[5] = '\0';

2178 i‡(
	gi
) {

2179 i‡(
°rcmp
(
c
, "p(..)")) {

2180 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

2183  
	gi
;

2186 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gshrid_t
& 
	gr
)

2188  
	go
 << "sr("

2189 << 
	gr
.
	g°‹e
 << '.'

2190 << 
	gr
.
	g∑ge
 << '.'

2191 << 
	gr
.
	g¶Ÿ
 << ')';

2194 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gshrid_t
& 
	gr
)

2196 
	gc
[7];

2197 
mem£t
(
c
, 0, (c));

2198 
	gi
 >> 
	gc
[0] >> c[1] >> c[2]

2199 >> 
	gr
.
	g°‹e
 >> 
	gc
[3]

2200 >> 
	gr
.
	g∑ge
 >> 
	gc
[4]

2201 >> 
	gr
.
	g¶Ÿ
 >> 
	gc
[5];

2202 
	gc
[6] = '\0';

2203 i‡(
	gi
) {

2204 i‡(
°rcmp
(
c
, "sr(..)")) {

2205 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

2208  
	gi
;

2211 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	grid_t
& 
	grid
)

2213  
	go
 << "r(" << 
	grid
.
	gpid
.
vﬁ
() << '.'

2214 << 
	grid
.
	gpid
.
°‹e
() << '.'

2215 << 
	grid
.
	gpid
.
	g∑ge
 << '.'

2216 << 
	grid
.
	g¶Ÿ
 << ')';

2219 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	grid_t
& 
	grid
)

2221 
	gc
[7];

2222 
mem£t
(
c
, 0, (c));

2223 
	gi
 >> 
	gc
[0] >> c[1] >> 
	grid
.
	gpid
.
	g_°id
.
	gvﬁ
 >> c[2]

2224 >> 
	grid
.
	gpid
.
	g_°id
.
	g°‹e
 >> 
	gc
[3]

2225 >> 
	grid
.
	gpid
.
	g∑ge
 >> 
	gc
[4]

2226 >> 
	grid
.
	g¶Ÿ
 >> 
	gc
[5];

2227 
	gc
[6] = '\0';

2228 i‡(
	gi
) {

2229 i‡(
°rcmp
(
c
, "r(...)")) {

2230 
	gi
.
˛ór
(
ios
::
badbô
|
i
.
rd°©e
());

2233  
	gi
;

2237 #i‡
deföed
(
__GNUC__
Ë&& 
__GNUC_MINOR__
 > 6

2238 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsmÀvñ_1
::
x˘_°©e_t
& 
x˘_°©e
)

2242 c⁄° * 
«mes
[] = {"xct_stale",

2251 
	go
 << 
	g«mes
[
x˘_°©e
];

2252  
	go
;

2260 
rc_t


2261 
	gss_m
::
	$dump_locks
(
o°ªam
 &
o
)

2263 
lm
->
	`dump
(
o
);

2264  
RCOK
;

2265 
	}
}

2267 
rc_t


2268 
	gss_m
::
	$dump_locks
() {

2269  
	`dump_locks
(
°d
::
cout
);

2270 
	}
}

2278 
	gss_m
::
	$£t_¶i_íabÀd
(
boﬁ
 
íabÀ
)

2280 
lm
->
	`£t_¶i_íabÀd
(
íabÀ
);

2281 
	}
}

2283 
	gss_m
::
	$£t_ñr_íabÀd
(
boﬁ
 
íabÀ
)

2285 
x˘_t
::
	`£t_ñr_íabÀd
(
íabÀ
);

2286 
	}
}

2288 
rc_t
 
	gss_m
::
	$£t_log_„©uªs
(c⁄°* 
„©uªs
)

2290  
log
->
	`£t_log_„©uªs
(
„©uªs
);

2291 
	}
}

2293 c⁄°* 
	gss_m
::
	$gë_log_„©uªs
()

2295  
log
->
	`gë_log_„©uªs
();

2296 
	}
}

2298 #i‡
SM_PLP_TRACING


2299 #w¨nög 
PLP
 
åacög
 
íabÀd


2300 
uöt
 
	gsmÀvñ_0
::
_±ø˚_Àvñ
 = 0;

2301 
mcs_lock
 
	gsmÀvñ_0
::
_±ø˚_lock
;

2302 
of°ªam
 
	gsmÀvñ_0
::
_±ø˚_out
("plp_tracing.txt");

2303 
	gss_m
::
	$£t_∂p_åacög
(c⁄° 
uöt
 
åacög_Àvñ
)

2305 
smÀvñ_0
::
_±ø˚_Àvñ
 = 
åacög_Àvñ
;

2306 
	}
}

2314 
rc_t


2315 
	gss_m
::
	$lock
(c⁄° 
lockid_t
& 
n
, 
lock_mode_t
 
m
,

2316 
lock_duøti⁄_t
 
d
, 
timeout_ö_ms
 
timeout
)

2318 
	`SM_PROLOGUE_RC
(
ss_m
::
lock
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2319 
	`W_DO
–
lm
->
	`lock
(
n
, 
m
, 
d
, 
timeout
) );

2320  
RCOK
;

2321 
	}
}

2326 
rc_t


2327 
	gss_m
::
	$u∆ock
(c⁄° 
lockid_t
& 
n
)

2329 
	`SM_PROLOGUE_RC
(
ss_m
::
u∆ock
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2330 
	`W_DO
–
lm
->
	`u∆ock
(
n
) );

2331  
RCOK
;

2332 
	}
}

2337 
rc_t


2338 
	gss_m
::
	$d⁄t_esˇœã
(c⁄° 
lockid_t
& 
n
, 
boﬁ
 
∑ssOnToDes˚nd™ts
)

2340 
	`SM_PROLOGUE_RC
(
ss_m
::
d⁄t_esˇœã
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2342 
	`W_DO
–
lm
->
	`d⁄t_esˇœã
(
n
, 
∑ssOnToDes˚nd™ts
) );

2343  
RCOK
;

2344 
	}
}

2349 
rc_t


2350 
	gss_m
::
	$gë_esˇœti⁄_thªshﬁds
(
öt4_t
& 
toPage
, i¡4_t& 
toSt‹e
, i¡4_t& 
toVﬁume
)

2352 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_esˇœti⁄_thªshﬁds
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2354 
x˘_t
* 
xd
 = 
	`x˘
();

2355 
xd
->
	`GëEsˇœti⁄Thªshﬁds
(
toPage
, 
toSt‹e
, 
toVﬁume
);

2357  
RCOK
;

2358 
	}
}

2363 
rc_t


2364 
	gss_m
::
	$£t_esˇœti⁄_thªshﬁds
(
öt4_t
 
toPage
, i¡4_à
toSt‹e
, i¡4_à
toVﬁume
)

2366 
	`SM_PROLOGUE_RC
(
ss_m
::
£t_esˇœti⁄_thªshﬁds
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2368 
x˘_t
* 
xd
 = 
	`x˘
();

2369 
xd
->
	`SëEsˇœti⁄Thªshﬁds
(
toPage
, 
toSt‹e
, 
toVﬁume
);

2371  
RCOK
;

2372 
	}
}

2377 
rc_t


2378 
	gss_m
::
	$quîy_lock
(c⁄° 
lockid_t
& 
n
, 
lock_mode_t
& 
m
, 
boﬁ
 
im∂icô
)

2380 
	`SM_PROLOGUE_RC
(
ss_m
::
quîy_lock
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2381 
	`W_DO
–
lm
->
	`quîy
(
n
, 
m
, 
	`x˘
()->
	`tid
(), 
im∂icô
) );

2383  
RCOK
;

2384 
	}
}

2389 
rc_t


2390 
	gss_m
::
	$£t_lock_ˇche_íabÀ
(
boﬁ
 
íabÀ
)

2392 
	`SM_PROLOGUE_RC
(
ss_m
::
£t_lock_ˇche_íabÀ
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2393 
x˘_t
* 
x
 = 
	`x˘
();

2394 
	`w_as£π3
(
x
);

2395 (Ë
x
->
	`£t_lock_ˇche_íabÀ
(
íabÀ
);

2396  
RCOK
;

2397 
	}
}

2402 
rc_t


2403 
	gss_m
::
	$lock_ˇche_íabÀd
(
boﬁ
& 
íabÀ
)

2405 
	`SM_PROLOGUE_RC
(
ss_m
::
lock_ˇche_íabÀd
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2406 
x˘_t
* 
x
 = 
	`x˘
();

2407 
	`w_as£π3
(
x
);

2408 
íabÀ
 = 
x
->
	`lock_ˇche_íabÀd
();

2409  
RCOK
;

2410 
	}
}

2425 
rc_t


2426 
	gss_m
::
	$_begö_x˘
(
sm_°©s_öfo_t
 *
_°©s
, 
tid_t
& 
tid
, 
timeout_ö_ms
 
timeout
)

2428 
	`w_as£π3
(
	`x˘
() == 0);

2430 
x˘_t
* 
x
;

2432 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_RLOCK
(
_begö_x˘_muãx
));

2433 
x
 = 
x˘_t
::
	`√w_x˘
(
_°©s
, 
timeout
);

2436 i‡(!
x
)

2437  
	`RC
(
eOUTOFMEMORY
);

2439 
	`w_as£π3
(
	`x˘
(Ë=
x
);

2440 
	`w_as£π3
(
x
->
	`°©e
(Ë=
x˘_t
::
x˘_a˘ive
);

2441 
tid
 = 
x
->
	`tid
();

2443  
RCOK
;

2444 
	}
}

2449 
rc_t


2450 
	gss_m
::
	$_¥ï¨e_x˘
(
sm_°©s_öfo_t
*& 
_°©s
, 
vŸe_t
 &
v
)

2452 
	`w_as£π3
(
	`x˘
() != 0);

2453 
x˘_t
& 
x
 = *
	`x˘
();

2455 
	`DBG
(<<"prepare " );

2457 if–!
x
.
	`is_exã∫2pc
() ) {

2458  
	`rc_t
(
__FILE__
, 
__LINE__
, 
smÀvñ_0
::
eNOTEXTERN2PC
);

2461 
	`W_DO
–
x
.
	`¥ï¨e
() );

2462 if(
x
.
	`is_ö°rumíãd
()Ë
_°©s
 = x.
	`°ól_°©s
();

2464 
v
 = (
vŸe_t
)
x
.
	`vŸe
();

2465 if(
v
 =
vŸe_ªad⁄ly
) {

2466 
	`SSMTEST
("prepare.readonly.1");

2467 
	`W_DO
–
x
.
	`commô
() );

2468 
	`SSMTEST
("prepare.readonly.2");

2469 
x˘_t
::
	`de°roy_x˘
(&
x
);

2470 
	`w_as£π3
(
	`x˘
() == 0);

2471 } if(
v
 =
vŸe_ab‹t
) {

2472 
	`SSMTEST
("prepare.abort.1");

2473 
	`W_DO
–
x
.
	`ab‹t
() );

2474 
	`SSMTEST
("prepare.abort.2");

2475 
x˘_t
::
	`de°roy_x˘
(&
x
);

2476 
	`w_as£π3
(
	`x˘
() == 0);

2477 } if(
v
 =
vŸe_bad
) {

2478 
	`W_DO
–
x
.
	`ab‹t
() );

2479 
x˘_t
::
	`de°roy_x˘
(&
x
);

2480 
	`w_as£π3
(
	`x˘
() == 0);

2482  
RCOK
;

2483 
	}
}

2487 
rc_t


2488 
	gss_m
::
	$_commô_x˘
(
sm_°©s_öfo_t
*& 
_°©s
, 
boﬁ
 
œzy
,

2489 
l¢_t
* 
∂a°l¢
)

2491 
	`w_as£π3
(
	`x˘
() != 0);

2492 
x˘_t
& 
x
 = *
	`x˘
();

2494 
	`DBG
(<<"commô " << ((*)
œzy
?" LAZY":""Ë<< 
x
 );

2497 if(
x
.
	`is_exã∫2pc
()) {

2498 
	`w_as£π3
(
x
.
	`°©e
()==
x˘_¥ï¨ed
);

2499 
	`SSMTEST
("extern2pc.commit.1");

2501 
	`w_as£π3
(
x
.
	`°©e
()==
x˘_a˘ive
);

2504 
	`W_DO
–
x
.
	`commô
(
œzy
,
∂a°l¢
) );

2506 if(
x
.
	`is_ö°rumíãd
()Ë
_°©s
 = x.
	`°ól_°©s
();

2507 
x˘_t
::
	`de°roy_x˘
(&
x
);

2508 
	`w_as£π3
(
	`x˘
() == 0);

2510  
RCOK
;

2511 
	}
}

2516 
rc_t


2517 
	gss_m
::
	$_£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &
h
)

2519 
	`w_as£π3
(
	`x˘
() != 0);

2520 
x˘_t
& 
x
 = *
	`x˘
();

2522 
	`DBG
(<<"set_coordinator " );

2523 
x
.
	`£t_co‹dö©‹
(
h
);

2524  
RCOK
;

2525 
	}
}

2530 
rc_t


2531 
	gss_m
::
	$_f‹˚_vŸe_ªad⁄ly
()

2533 
	`w_as£π3
(
	`x˘
() != 0);

2534 
x˘_t
& 
x
 = *
	`x˘
();

2536 
	`DBG
(<<"forceÑeadonly " );

2537 
x
.
	`f‹˚_ªad⁄ly
();

2538  
RCOK
;

2539 
	}
}

2544 
rc_t


2545 
	gss_m
::
	$_íãr_2pc
(c⁄° 
gtid_t
 &
gtid
)

2547 
	`w_as£π3
(
	`x˘
() != 0);

2548 
x˘_t
& 
x
 = *
	`x˘
();

2550 
	`DBG
(<<"enter 2pc " );

2551 
	`W_DO
–
x
.
	`íãr2pc
(
gtid
) );

2552  
RCOK
;

2553 
	}
}

2558 
rc_t


2559 
	gss_m
::
	$_ªcovî_2pc
(c⁄° 
gtid_t
 &
gtid
,

2560 
boﬁ
 
mayblock
,

2561 
tid_t
 &
t


2567 
	`w_as£π3
(
	`x˘
() == 0);

2568 
	`DBG
(<<"recover 2pc " );

2570 
x˘_t
 *
x
;

2571 
	`W_DO
(
x˘_t
::
	`ªcovî2pc
(
gtid
,
mayblock
,
x
));

2572 if(
x
) {

2573 
t
 = 
x
->
	`tid
();

2574 
	`me
()->
	`©èch_x˘
(
x
);

2576  
RCOK
;

2577 
	}
}

2583 
rc_t


2584 
	gss_m
::
	$quîy_¥ï¨ed_x˘
(&
numtids
)

2586 
	`SM_PROLOGUE_RC
(
ss_m
::
quîy_¥ï¨ed_x˘
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

2587  
x˘_t
::
	`quîy_¥ï¨ed
(
numtids
);

2588 
	}
}

2590 
rc_t


2591 
	gss_m
::
	$quîy_¥ï¨ed_x˘
(
numtids
, 
gtid_t
 
li°
[])

2593 
	`SM_PROLOGUE_RC
(
ss_m
::
quîy_¥ï¨ed_x˘
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

2594  
x˘_t
::
	`quîy_¥ï¨ed
(
numtids
, 
li°
);

2595 
	}
}

2602 
rc_t


2603 
	gss_m
::
	$_chaö_x˘
(

2604 
sm_°©s_öfo_t
*& 
_°©s
,

2605 
boﬁ
 
œzy
)

2607 
sm_°©s_öfo_t
* 
√w_°©s
 = 
_°©s
;

2608 
	`w_as£π3
(
	`x˘
() != 0);

2609 
x˘_t
* 
x
 = 
	`x˘
();

2611 
	`W_DO
–
x
->
	`chaö
(
œzy
) );

2612 
	`w_as£π3
(
	`x˘
(Ë=
x
);

2613 if(
x
->
	`is_ö°rumíãd
()Ë
_°©s
 = x->
	`°ól_°©s
();

2614 
x
->
	`give_°©s
(
√w_°©s
);

2616  
RCOK
;

2617 
	}
}

2622 
rc_t


2623 
	gss_m
::
	$_ab‹t_x˘
(
sm_°©s_öfo_t
*& 
_°©s
)

2625 
	`w_as£π3
(
	`x˘
() != 0);

2626 
x˘_t
& 
x
 = *
	`x˘
();

2628 
	`W_DO
–
x
.
	`ab‹t
(
åue
 ) );

2629 
_°©s
 = (
x
.
	`is_ö°rumíãd
(Ë? x.
	`°ól_°©s
() : 0);

2631 
x˘_t
::
	`de°roy_x˘
(&
x
);

2632 
	`w_as£π3
(
	`x˘
() == 0);

2634  
RCOK
;

2635 
	}
}

2640 
rc_t


2641 
	gss_m
::
	$_ßve_w‹k
(
sm_ßve_poöt_t
& 
•
)

2643 
	`w_as£π3
(
	`x˘
() != 0);

2644 
x˘_t
* 
x
 = 
	`x˘
();

2646 
	`W_DO
(
x
->
	`ßve_poöt
(
•
));

2647 
•
.
_tid
 = 
x
->
	`tid
();

2648 #i‡
W_DEBUG_LEVEL
 > 4

2650 
w_o°r°ªam
 
s
;

2651 
s
 << "ßve_poöà@ " << (*)(&
•
)

2652 << " " << 
•


2653 << " cª©ed f‹Åid " << 
x
->
	`tid
();

2654 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
());

2657  
RCOK
;

2658 
	}
}

2663 
rc_t


2664 
	gss_m
::
	$_rﬁlback_w‹k
(c⁄° 
sm_ßve_poöt_t
& 
•
)

2666 
	`w_as£π3
(
	`x˘
() != 0);

2667 
x˘_t
* 
x
 = 
	`x˘
();

2668 #i‡
W_DEBUG_LEVEL
 > 4

2670 
w_o°r°ªam
 
s
;

2671 
s
 << "rﬁlback_w‹k f‹ " << (*)(&
•
)

2672 << " " << 
•


2673 << " i¿tid " << 
x
->
	`tid
();

2674 
	`Ârötf
(
°dîr
, "%s\n", 
s
.
	`c_°r
());

2677 i‡(
•
.
_tid
 !
x
->
	`tid
()) {

2678  
	`RC
(
eBADSAVEPOINT
);

2680 
	`W_DO
–
x
->
	`rﬁlback
(
•
) );

2681  
RCOK
;

2682 
	}
}

2684 
rc_t


2685 
	gss_m
::
	$_mou¡_dev
(c⁄° * 
devi˚
, 
u_öt
& 
vﬁ_˙t
, 
vid_t
 
loˇl_vid
)

2687 
vid_t
 
vid
;

2690 
	`W_DO
(
io
->
	`mou¡_dev
(
devi˚
, 
vﬁ_˙t
));

2691 i‡(
vﬁ_˙t
 =0Ë 
RCOK
;

2694 
lvid_t
 
lvid
;

2695 
	`W_DO
(
io
->
	`gë_lvid
(
devi˚
, 
lvid
));

2696 
vid
 = 
io
->
	`gë_vid
(
lvid
);

2697 i‡(
vid
 !
vid_t
::
nuŒ
) {

2699  
RCOK
;

2702 i‡(
loˇl_vid
 =
vid_t
::
nuŒ
) {

2703 
	`W_DO
(
io
->
	`gë_√w_vid
(
vid
));

2705 i‡(
io
->
	`is_mou¡ed
(
loˇl_vid
)) {

2707  
	`RC
(
eBADVOL
);

2709 
vid
 = 
loˇl_vid
;

2712 
rc_t
 
rc
 = 
dú
->
	`mou¡
(
devi˚
, 
vid
);

2713 i‡(
rc
.
	`is_îr‹
()) {

2714 i‡(
rc
.
	`îr_num
(Ë!
eALREADYMOUNTED
) {

2715 
îæog
->
˛og
 << 
w¨nög_¥io
 << "w¨nög: devi˚ \"" << 
devi˚


2716 << "\"ÇŸ mou¡ed -- " << 
rc
 << 
Êushl
;

2717  
rc
;

2722 
chk±
->
	`èke
();

2724  
RCOK
;

2725 
	}
}

2727 
rc_t


2728 
	gss_m
::
	$_dismou¡_dev
(c⁄° * 
devi˚
, 
boﬁ
 
dismou¡_if_locked
)

2730 
vid_t
 
vid
;

2731 
lvid_t
 
lvid
;

2732 
rc_t
 
rc
;

2733 
lock_mode_t
 
m
 = 
NL
;

2735 
	`DBG
(<<"dismount_dev");

2736 
	`W_DO
(
io
->
	`gë_lvid
(
devi˚
, 
lvid
));

2737 
	`DBG
(<<"dismou¡_dev" << 
lvid
);

2738 i‡(
lvid
 !
lvid_t
::
nuŒ
) {

2739 
vid
 = 
io
->
	`gë_vid
(
lvid
);

2740 
	`DBG
(<<"dismou¡_dev" << 
vid
);

2741 i‡(
vid
 =
vid_t
::
nuŒ
Ë 
	`RC
(
eDEVNOTMOUNTED
);

2743 i‡(!
dismou¡_if_locked
) {

2744 
lockid_t
 
	`lockid
(
vid
);

2745 
	`W_DO
–
lm
->
	`quîy
(
lockid
, 
m
) );

2753 
	`W_DO
–
dú
->
	`dismou¡
(
vid
, 
åue
, 
dismou¡_if_locked
) );

2756 i‡(
m
 !
IX
 && m !
SIX
 && m !
EX
) {

2757 
	`W_DO
–
io
->
	`dismou¡_dev
(
devi˚
) );

2760  
RCOK
;

2761 
	}
}

2766 
rc_t


2767 
	gss_m
::
	$_¸óã_vﬁ
(c⁄° * 
dev_«me
, c⁄° 
lvid_t
& 
lvid
,

2768 
smksize_t
 
quŸa_KB
, 
boﬁ
 
skù_øw_öô
,

2769 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
,

2770 c⁄° 
Áke_disk_œãncy
)

2772 
	`W_DO
(
vﬁ_t
::
	`f‹m©_vﬁ
(
dev_«me
, 
lvid
,

2774 
	`shpid_t
(
quŸa_KB
/(
∑ge_sz
/1024)), 
skù_øw_öô
));

2776 
vid_t
 
tmp_vid
;

2777 
	`W_DO
(
io
->
	`gë_√w_vid
(
tmp_vid
));

2778 
	`DBG
(<<"gŸÇew vid " << 
tmp_vid


2779 << " mou¡ög " << 
dev_«me
);

2780 
	`W_DO
(
io
->
	`mou¡
(
dev_«me
, 
tmp_vid
, 
≠∂y_Áke_io_œãncy
, 
Áke_disk_œãncy
));

2781 
x˘_auto_ab‹t_t
 
x˘_auto
;

2783 
	`W_DO
(
dú
->
	`¸óã_dú
(
tmp_vid
));

2785 
	`W_DO
(
x˘_auto
.
	`commô
());

2786 
	`W_DO
(
io
->
	`dismou¡
(
tmp_vid
));

2791 
rc_t
 
rc
 = 
dú
->
	`mou¡
(
dev_«me
, 
tmp_vid
);

2792 i‡(
rc
.
	`is_îr‹
()) {

2793 i‡(
rc
.
	`îr_num
(Ë=
eALREADYMOUNTED
)

2794 
	`W_FATAL
(
eINTERNAL
);

2795 
îæog
->
˛og
 << 
w¨nög_¥io
 << "w¨nög: devi˚ \"" << 
dev_«me


2796 << "\"ÇŸ mou¡ed -- " << 
rc
 << 
Êushl
;

2797  
rc
.
	`ª£t
();

2805 
°id_t
 
roŸ_iid
;

2806 
	`W_DO
(
	`vﬁ_roŸ_ödex
(
tmp_vid
, 
roŸ_iid
));

2807 
sdesc_t
* 
sd
;

2808 
x˘_auto_ab‹t_t
 
x˘_auto
;

2810 
	`W_DO
(
lm
->
	`lock
(
tmp_vid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

2813 
rc
 = 
dú
->
	`ac˚ss
(
roŸ_iid
, 
sd
, 
NL
);

2814 i‡(!
rc
.
	`is_îr‹
()) {

2815 
	`W_FATAL
(
eINTERNAL
);

2819 
rc
 = 
	`_¸óã_ödex
(
tmp_vid
, 
t_uni_båì
, 
t_ªguœr
, "b*1000",

2820 
t_cc_kvl
, 
roŸ_iid
);

2821 i‡(!
rc
.
	`is_îr‹
()) {

2823 
°id_t
 
ãmp
;

2824 
	`W_COERCE
(
	`vﬁ_roŸ_ödex
(
tmp_vid
, 
ãmp
));

2825 
	`w_as£π1
(
ãmp
 =
roŸ_iid
);

2829 i‡(
rc
.
	`is_îr‹
()) {

2830 
	`W_COERCE
(
x˘_auto
.
	`ab‹t
());

2832 
	`W_COERCE
(
x˘_auto
.
	`commô
());

2836 
rc_t
 
rc
 = 
dú
->
	`dismou¡
(
tmp_vid
);

2837 i‡(
rc
.
	`is_îr‹
()) {

2838 i‡(
rc
.
	`îr_num
(Ë!
eBADVOL
ËÑc.
	`ª£t
();

2842  
rc
.
	`ª£t
();

2843 
	}
}

2848 
rc_t


2849 
	gss_m
::
	$gë_du_°©i°ics
(
vid_t
 
vid
, 
sm_du_°©s_t
& 
du
, 
boﬁ
 
audô
)

2851 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_du_°©i°ics
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2852 
	`W_DO
(
	`_gë_du_°©i°ics
(
vid
, 
du
, 
audô
));

2853  
RCOK
;

2854 
	}
}

2860 
rc_t


2861 
	gss_m
::
	$gë_du_°©i°ics
(c⁄° 
°id_t
& 
°id
, 
sm_du_°©s_t
& 
du
, 
boﬁ
 
audô
)

2863 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_du_°©i°ics
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2864 
	`W_DO
(
	`_gë_du_°©i°ics
(
°id
, 
du
, 
audô
));

2865  
RCOK
;

2866 
	}
}

2871 
rc_t


2872 
	gss_m
::
	$_gë_du_°©i°ics
–c⁄° 
°id_t
& 
°pgid
, 
sm_du_°©s_t
& 
du
, 
boﬁ
 
audô
)

2874 
sdesc_t
* 
sd
;

2881 
	`W_DO
(
dú
->
	`ac˚ss
(
°pgid
, 
sd
, 
audô
 ? 
SH
 : 
IS
));

2883 
sd
->
	`söfo
().
°y≥
) {

2884 
t_fûe
:

2886 
	`DBG
(<<"t_file");

2887 
fûe_°©s_t
 
fûe_°©s
;

2888 
	`W_DO
–
fi
->
	`gë_du_°©i°ics
(
°pgid
, 
sd
->
	`œrge_°id
(),

2889 
fûe_°©s
, 
audô
));

2890 i‡(
audô
) {

2891 
	`W_DO
(
fûe_°©s
.
	`audô
());

2893 
du
.
fûe
.
	`add
(
fûe_°©s
);

2894 
du
.
fûe_˙t
++;

2898 
t_ödex
:

2899 
	`DBG
(<<"t_index");

2900 
sd
->
	`söfo
().
¡y≥
) {

2901 
t_båì
:

2902 
	`DBG
(<<"t_btree");

2903 
t_uni_båì
:

2904 
	`DBG
(<<"t_uni_btree");

2905 
t_mrbåì
:

2906 
	`DBG
(<<"t_mrbtree");

2907 
t_uni_mrbåì
:

2908 
	`DBG
(<<"t_uni_mrbtree");

2909 
t_mrbåì_l
:

2910 
	`DBG
(<<"t_mrbtree_l");

2911 
t_uni_mrbåì_l
:

2912 
	`DBG
(<<"t_uni_mrbtree_l");

2913 
t_mrbåì_p
:

2914 
	`DBG
(<<"t_mrbtree_p");

2915 
t_uni_mrbåì_p
:

2916 
	`DBG
(<<"t_uni_mrbtree_p");

2918 
båì_°©s_t
 
båì_°©s
;

2919 
	`W_DO
–
bt
->
	`gë_du_°©i°ics
(
sd
->
	`roŸ
(), 
båì_°©s
, 
audô
));

2920 i‡(
audô
) {

2921 
	`W_DO
(
båì_°©s
.
	`audô
());

2923 
du
.
båì
.
	`add
(
båì_°©s
);

2924 
du
.
båì_˙t
++;

2928 
t_πªe
:

2929 
	`DBG
(<<"t_rtree");

2931 
πªe_°©s_t
 
πªe_°©s
;

2932 
	`W_DO
(
π
->
	`°©s
(
sd
->
	`roŸ
(), 
πªe_°©s
, 0, 0, 
audô
));

2933 i‡(
audô
) {

2934 
	`W_DO
(
πªe_°©s
.
	`audô
());

2936 
du
.
πªe
.
	`add
(
πªe_°©s
);

2937 
du
.
πªe_˙t
++;

2942 
	`Ârötf
(
°dîr
, "Unsupported indexÅype %d\n",

2943 (
sd
->
	`söfo
().
¡y≥
));

2944 
	`W_FATAL
(
eINTERNAL
);

2948 
	`Ârötf
(
°dîr
, "Unsupported storeÅype %d\n",

2949 (
sd
->
	`söfo
().
°y≥
));

2950 
	`W_FATAL
(
eINTERNAL
);

2952 
	`DBG
(<<"");

2953  
RCOK
;

2954 
	}
}

2962 
rc_t


2963 
	gss_m
::
	$check_vﬁume_∑ge_ty≥s
(
vid_t
 
vid
)

2965 
	`SM_PROLOGUE_RC
(
ss_m
::
check_vﬁume_∑ge_ty≥s
, 
ö_x˘
, 
ªad_⁄ly
, 0);

2970 if(
smÀvñ_0
::
	`ö_ªcovîy
()) {

2971  
RCOK
;

2974 if(!
io
) {

2975 
	`W_FATAL_MSG
(
eINTERNAL
, << "io managerÇot insantiated");

2978 
	`W_DO
(
lm
->
	`lock
(
vid
, 
SH
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

2980 
¢um_t
 
skù
 = 0;

2986 
°id_t
 
°id
 = 
	`°id_t
(
vid
, 0);

2987 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
, 
∑ge_p
::
t_exéök_p
));

2988 
skù
 = 
	`MAX
(skù, 
°id
.
°‹e
);

2992 
°id_t
 
°id
 = 
	`°id_t
(
vid
, 1);

2993 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
, 
∑ge_p
::
t_båì_p
));

2994 
skù
 = 
	`MAX
(skù, 
°id
.
°‹e
);

2999 
°id_t
 
°id
;

3000 
	`W_DO
(
	`vﬁ_roŸ_ödex
(
vid
, 
°id
));

3001 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
, 
∑ge_p
::
t_båì_p
));

3002 
skù
 = 
	`MAX
(skù, 
°id
.
°‹e
);

3007 
rc_t
 
rc
;

3008 
¢um_t
 
œ°
 ;

3009 
sdesc_t
* 
sd
;

3010 
	`W_DO
(
io
->
	`max_°‹e_id_ö_u£
(
vid
, 
œ°
));

3011 
°id_t
 
	`°id
(
vid
, 
skù
+1); 
°id
.
°‹e
 <
œ°
; stid.store++) {

3012 
	`DBG
(<<"lookáà°‹ê" << 
°id
 << "Üa°=" << 
œ°
 );

3014 
w_rc_t
 
rc
 = 
dú
->
	`ac˚ss
(
°id
, 
sd
, 
NL
);

3015 if(
rc
.
	`is_îr‹
()) {

3016 if(
rc
.
	`îr_num
(Ë=
eBADSTID
) {

3017 
	`DBG
(<<"Nÿsuch st‹ê" << 
°id
 << ", ignoring..." );

3021 
	`w_as£π1
(0);

3024 c⁄° 
söfo_s
& 
s

sd
->
	`söfo
();

3026 
s
.
°y≥
) {

3027 
t_ödex
:

3028 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
,

3029 (
s
.
¡y≥
==
t_πªe
Ë? 
∑ge_p
::
t_πªe_p
 :Öage_p::
t_båì_p
));

3031 
t_fûe
:

3032 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
, 
∑ge_p
::
t_fûe_p
));

3034 
t_lgªc
:

3035 
	`W_DO
–
io
->
	`check_°‹e_∑ges
(
°id
, 
∑ge_p
::
t_lgd©a_p
));

3040 
	`DBG
(<<"íd f‹Üo› wôh st‹ê" << 
°id
.
°‹e
 );

3042  
RCOK
;

3043 
	}
}

3049 
rc_t


3050 
	gss_m
::
	$_gë_du_°©i°ics
(
vid_t
 
vid
, 
sm_du_°©s_t
& 
du
, 
boﬁ
 
audô
)

3056 if(
smÀvñ_0
::
	`ö_ªcovîy
()) {

3057  
RCOK
;

3059 
	`W_DO
(
lm
->
	`lock
(
vid
, 
audô
 ? 
SH
 : 
IS
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

3060 
sm_du_°©s_t
 
√w_°©s
;

3066 
¢um_t
 
skù
 = 0;

3067 
sdesc_t
* 
sd
;

3068 
°id_t
 
°id
;

3072 
°id
 = 
	`°id_t
(
vid
, 1);

3073 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
NL
));

3074 
båì_°©s_t
 
båì_°©s
;

3075 
	`W_DO
–
bt
->
	`gë_du_°©i°ics
(
sd
->
	`roŸ
(), 
båì_°©s
, 
audô
));

3076 i‡(
audô
) {

3077 
	`W_DO
(
båì_°©s
.
	`audô
());

3079 
√w_°©s
.
vﬁume_m≠
.
°‹e_dúe˘‹y
.
	`add
(
båì_°©s
);

3080 
skù
 = 
	`MAX
(skù, 
°id
.
°‹e
);

3085 
°id_t
 
°id
;

3086 
	`W_DO
(
	`vﬁ_roŸ_ödex
(
vid
, 
°id
));

3087 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
NL
));

3088 
båì_°©s_t
 
båì_°©s
;

3089 
	`W_DO
–
bt
->
	`gë_du_°©i°ics
(
sd
->
	`roŸ
(), 
båì_°©s
, 
audô
));

3090 i‡(
audô
) {

3091 
	`W_DO
(
båì_°©s
.
	`audô
());

3093 
√w_°©s
.
vﬁume_m≠
.
roŸ_ödex
.
	`add
(
båì_°©s
);

3094 
skù
 = 
	`MAX
(skù, 
°id
.
°‹e
);

3101 
rc_t
 
rc
;

3103 
¢um_t
 
œ°
 ;

3104 
	`W_DO
(
io
->
	`max_°‹e_id_ö_u£
(
vid
, 
œ°
));

3105 
°id_t
 
	`s
(
vid
, 
skù
+1); 
s
.
°‹e
 <
œ°
; s.store++) {

3106 
	`DBG
(<<"lookáà°‹ê" << 
s
 << "Üa°=" << 
œ°
 );

3108 
°‹e_Êag_t
 
Êags
;

3109 
rc
 = 
io
->
	`gë_°‹e_Êags
(
s
, 
Êags
);

3110 i‡(
rc
.
	`is_îr‹
()) {

3111 i‡(
rc
.
	`îr_num
(Ë=
eBADSTID
) {

3112 
	`DBG
(<<"skùpög bad STID " << 
s
 );

3115  
rc
;

3118 
	`DBG
(<<" gëtög sèt†f‹ st‹ê" << 
s
 << " fœgs=" << 
Êags
);

3119 
rc
 = 
	`_gë_du_°©i°ics
(
s
, 
√w_°©s
, 
audô
);

3120 i‡(
rc
.
	`is_îr‹
()) {

3121 i‡(
rc
.
	`îr_num
(Ë=
eBADSTID
) {

3122 
	`DBG
(<<"skùpögÜ¨gêobje˘ o∏missög st‹ê" << 
s
 );

3128  
rc
;

3131 
	`DBG
(<<"íd f‹Üo› wôh s=" << 
s
 );

3134 
	`W_DO
–
io
->
	`gë_du_°©i°ics
(
vid
, 
√w_°©s
.
vﬁume_hdr
, 
audô
));

3136 i‡(
audô
) {

3137 
	`W_DO
(
√w_°©s
.
	`audô
());

3139 
du
.
	`add
(
√w_°©s
);

3141  
RCOK
;

3142 
	}
}

3149 
rc_t


3150 
	gss_m
::
	$íabÀ_Áke_disk_œãncy
(
vid_t
 
vid
)

3152 
	`SM_PROLOGUE_RC
(
ss_m
::
íabÀ_Áke_disk_œãncy
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

3153 
	`W_DO
–
io
->
	`íabÀ_Áke_disk_œãncy
(
vid
) );

3154  
RCOK
;

3155 
	}
}

3157 
rc_t


3158 
	gss_m
::
	$dißbÀ_Áke_disk_œãncy
(
vid_t
 
vid
)

3160 
	`SM_PROLOGUE_RC
(
ss_m
::
dißbÀ_Áke_disk_œãncy
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

3161 
	`W_DO
–
io
->
	`dißbÀ_Áke_disk_œãncy
(
vid
) );

3162  
RCOK
;

3163 
	}
}

3165 
rc_t


3166 
	gss_m
::
	$£t_Áke_disk_œãncy
(
vid_t
 
vid
, c⁄° 
adñay
)

3168 
	`SM_PROLOGUE_RC
(
ss_m
::
£t_Áke_disk_œãncy
, 
nŸ_ö_x˘
, 
ªad_⁄ly
, 0);

3169 
	`W_DO
–
io
->
	`£t_Áke_disk_œãncy
(
vid
,
adñay
) );

3170  
RCOK
;

3171 
	}
}

3176 
rc_t


3177 
	gss_m
::
	$gë_vﬁume_mëa_°©s
(
vid_t
 
vid
, 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
, 
c⁄cuºícy_t
 
cc
)

3179 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_vﬁume_mëa_°©s
, 
ö_x˘
, 
ªad_⁄ly
, 0);

3180 
	`W_DO
–
	`_gë_vﬁume_mëa_°©s
(
vid
, 
vﬁume_°©s
, 
cc
) );

3181  
RCOK
;

3182 
	}
}

3187 
rc_t


3188 
	gss_m
::
	$_gë_vﬁume_mëa_°©s
(
vid_t
 
vid
, 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
, 
c⁄cuºícy_t
 
cc
)

3190 i‡(
cc
 =
t_cc_vﬁ
) {

3191 
	`W_DO
–
lm
->
	`lock
(
vid
, 
SH
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
) );

3192 } i‡(
cc
 !
t_cc_n⁄e
) {

3193  
	`RC
(
eBADCCLEVEL
);

3196 
	`W_DO
–
io
->
	`gë_vﬁume_mëa_°©s
(
vid
, 
vﬁume_°©s
) );

3198  
RCOK
;

3199 
	}
}

3204 
rc_t


3205 
	gss_m
::
	$gë_fûe_mëa_°©s
(
vid_t
 
vid
,

3206 
uöt4_t
 
num_fûes
,

3207 
SmFûeMëaSèts
* 
fûe_°©s
,

3208 
boﬁ
 
b©ch_ˇlcuœã
,

3209 
c⁄cuºícy_t
 
cc
)

3211 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_fûe_mëa_°©s
, 
ö_x˘
, 
ªad_⁄ly
, 0);

3212 
	`W_DO
(
	`_gë_fûe_mëa_°©s
(
vid
, 
num_fûes
, 
fûe_°©s
, 
b©ch_ˇlcuœã
, 
cc
) );

3213  
RCOK
;

3214 
	}
}

3219 
rc_t


3220 
	gss_m
::
	$_gë_fûe_mëa_°©s
(

3221 
vid_t
 
vid
,

3222 
uöt4_t
 
num_fûes
,

3223 
SmFûeMëaSèts
* 
fûe_°©s
,

3224 
boﬁ
 
b©ch_ˇlcuœã
,

3225 
c⁄cuºícy_t
 
cc
)

3227 
lock_mode_t
 
mode
 = 
NL
;

3228 i‡(
cc
 =
t_cc_fûe
) {

3229 
mode
 = 
SH
;

3230 } i‡(
cc
 !
t_cc_n⁄e
) {

3231  
	`RC
(
eBADCCLEVEL
);

3235 
¢um_t
 
max_°‹e
 = 0;

3236 
°id_t
 
	`°id
(
vid
, 0);

3237 
uöt4_t
 
i
 = 0; i < 
num_fûes
; ++i) {

3238 
°id
.
°‹e
 = 
fûe_°©s
[
i
].
smÆlSnum
;

3239 
sdesc_t
* 
sd
;

3240 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
mode
) );

3241 
fûe_°©s
[
i
].
œrgeSnum
 = 
sd
->
	`œrge_°id
().
°‹e
;

3243 i‡(
max_°‹e
 < 
fûe_°©s
[
i
].
smÆlSnum
) {

3244 
max_°‹e
 = 
fûe_°©s
[
i
].
smÆlSnum
;

3247 i‡(
max_°‹e
 < 
fûe_°©s
[
i
].
œrgeSnum
) {

3248 
max_°‹e
 = 
fûe_°©s
[
i
].
œrgeSnum
;

3253 i‡(
b©ch_ˇlcuœã
) {

3254 ++
max_°‹e
;

3256 
SmSt‹eMëaSèts
** 
m≠pög
 = 
√w
 SmSt‹eMëaSèts*[
max_°‹e
];

3258 
i
;

3259 
i
 = 0; i < 
max_°‹e
; ++i) {

3260 
m≠pög
[
i
] = 0;

3263 
w_auto_dñëe_t
<
SmSt‹eMëaSèts
*> 
	`auto_dñëe
(
m≠pög
);

3266 
uöt4_t
 
i
;

3267 
i
 = 0; i < 
num_fûes
; ++i) {

3268 
	`w_as£π3
–
fûe_°©s
[
i
].
smÆlSnum
 != 0 );

3269 
	`w_as£π3
–
m≠pög
[
fûe_°©s
[
i
].
smÆlSnum
] == 0 );

3270 
m≠pög
[
fûe_°©s
[
i
].
smÆlSnum
] = &fûe_°©s[i].
smÆl
;

3272 i‡(
fûe_°©s
[
i
].
œrgeSnum
) {

3273 
	`w_as£π3
–
m≠pög
[
fûe_°©s
[
i
].
œrgeSnum
] == 0 );

3274 
m≠pög
[
fûe_°©s
[
i
].
œrgeSnum
] = &fûe_°©s[i].
œrge
;

3279 
	`W_DO
–
io
->
	`gë_fûe_mëa_°©s_b©ch
(
vid
, 
max_°‹e
, 
m≠pög
) );

3281 
	`W_DO
–
io
->
	`gë_fûe_mëa_°©s
(
vid
, 
num_fûes
, 
fûe_°©s
) );

3284  
RCOK
;

3285 
	}
}

3294 
rc_t


3295 
	gss_m
::
	$g©hî_x˘_°©s
(
sm_°©s_öfo_t
& 
_°©s
, 
boﬁ
 
ª£t
)

3297 
	`SM_PROLOGUE_RC
(
ss_m
::
g©hî_x˘_°©s
, 
commôabÀ_x˘
, 
ªad_⁄ly
, 0);

3299 
	`w_as£π3
(
	`x˘
() != 0);

3300 
x˘_t
& 
x
 = *
	`x˘
();

3302 if(
x
.
	`is_ö°rumíãd
()) {

3309 
	`me
()->
	`dëach_x˘
(&
x
);

3310 
	`me
()->
	`©èch_x˘
(&
x
);

3313 
_°©s
 = 
x
.
	`c⁄°_°©s_ªf
();

3315 if(
ª£t
) {

3316 
	`DBG
(<<"clearing stats " );

3319 
x
.
	`˛ór_°©s
();

3321 #ifde‡
COMMENT


3325 
bffix_SH
[];

3326 
bffix_EX
[];

3327 c⁄° *
«mes
[] = {

3349 
cout
 << "PAGE FIXES " <<
ídl
;

3350 
i
=0; i<=14; i++) {

3351 
cout
 << 
«mes
[
i
] << "="

3352 << '\t' << 
bffix_SH
[
i
] << "+"

3353 << '\t' << 
bffix_EX
[
i
] << "="

3354 << '\t' << 
bffix_EX
[
i
] + 
bffix_SH
[i]

3355 << 
ídl
;

3358 
sumSH
=0, 
sumEX
=0;

3359 
i
=0; i<=14; i++) {

3360 
sumSH
 +
bffix_SH
[
i
];

3361 
sumEX
 +
bffix_EX
[
i
];

3363 
cout
 << "TOTALS" << "="

3364 << '\t' << 
sumSH
<< "+"

3365 << '\t' << 
sumEX
 << "="

3366 << '\t' << 
sumSH
+
sumEX


3367 << 
ídl
;

3369 if(
ª£t
) {

3370 
bffix_SH
[];

3371 
bffix_EX
[];

3372 
i
=0; i<=14; i++) {

3373 
bffix_SH
[
i
] = 0;

3374 
bffix_EX
[
i
] = 0;

3379 
	`DBG
(<<"xctÇot instrumented");

3382  
RCOK
;

3383 
	}
}

3393 
rc_t


3394 
	gss_m
::
	$g©hî_°©s
(
sm_°©s_öfo_t
& 
_°©s
)

3396 ˛as†
	cG©hîSmthªadSèts
 : 
public
 
SmthªadFunc


3398 
public
:

3399 
	`G©hîSmthªadSèts
(
sm_°©s_öfo_t
 &
s
Ë: 
	`_°©s
(s)

3401 
	`√w
 (&
_°©s
Ë
sm_°©s_öfo_t
;

3404 
	`›î©‹
()(c⁄° 
smthªad_t
& 
t
)

3406 
t
.
	`add_‰om_TL_°©s
(
_°©s
);

3408 
	`compuã
(Ë{ 
_°©s
.compute(); }

3409 
¥iv©e
:

3410 
sm_°©s_öfo_t
 &
_°©s
;

3411 
	}
} 
F
(
_°©s
);

3415 
	gsmthªad_t
::
f‹_óch_smthªad
(
F
);

3416 
	gF
.
compuã
();

3422 
add_‰om_globÆ_°©s
(
_°©s
);

3423  
	gRCOK
;

3426 #i‡
W_DEBUG_LEVEL
 > 0

3427 
dump_Æl_sm_°©s
();

3428 
	$dump_Æl_sm_°©s
()

3430 
sm_°©s_öfo_t
 
s
;

3431 
	`W_COERCE
(
ss_m
::
	`g©hî_°©s
(
s
));

3432 
w_o°r°ªam
 
o
;

3433 
o
 << 
s
 << 
ídl
;

3434 
	`Ârötf
(
°dîr
, "%s\n", 
o
.
	`c_°r
());

3435 
	}
}

3438 
	go°ªam
 &

3439 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	gsm_°©s_öfo_t
 &
	gs
)

3441 
	go
 << 
	gs
.
	gsm
;

3442  
	go
;

3449 
rc_t


3450 
	gss_m
::
	$gë_°‹e_öfo
(

3451 c⁄° 
°id_t
& 
°pgid
,

3452 
sm_°‹e_öfo_t
& 
öfo
)

3454 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_°‹e_öfo
, 
ö_x˘
, 
ªad_⁄ly
, 0);

3455 
	`W_DO
(
	`_gë_°‹e_öfo
(
°pgid
, 
öfo
));

3456  
RCOK
;

3457 
	}
}

3460 
	go°ªam
&

3461 
	g›î©‹
<<(
	go°ªam
& 
	go
, 
	gsmÀvñ_3
::
sm_°‹e_¥›îty_t
 
p
)

3463 i‡(
p
 =
smÀvñ_3
::
t_ªguœr
Ë
o
 << "regular";

3464 i‡(
	gp
 =
smÀvñ_3
::
t_ãmp‹¨y
Ë
o
 << "temporary";

3465 i‡(
	gp
 =
smÀvñ_3
::
t_lﬂd_fûe
Ë
o
 << "load_file";

3466 i‡(
	gp
 =
smÀvñ_3
::
t_ö£π_fûe
Ë
o
 << "insert_file";

3467 i‡(
	gp
 =
smÀvñ_3
::
t_bad_°‹ïr›îty
Ë
o
 << "bad_storeproperty";

3468 i‡(
	gp
 & !(
	gsmÀvñ_3
::
t_ªguœr


3469 | 
smÀvñ_3
::
t_ãmp‹¨y


3470 | 
smÀvñ_3
::
t_lﬂd_fûe


3471 | 
smÀvñ_3
::
t_ö£π_fûe


3472 | 
smÀvñ_3
::
t_bad_°‹ïr›îty
)) {

3473 
o
 << "unknown_property";

3474 
w_as£π3
(1);

3476  
	go
;

3479 
	go°ªam
&

3480 
	g›î©‹
<<(
	go°ªam
& 
	go
, 
	gsmÀvñ_0
::
°‹e_Êag_t
 
Êag
)

3482 i‡(
Êag
 =
smÀvñ_0
::
°_bad
Ë
o
 << "|bad";

3483 i‡(
	gÊag
 & 
	gsmÀvñ_0
::
°_ªguœr
Ë
o
 << "|regular";

3484 i‡(
	gÊag
 & 
	gsmÀvñ_0
::
°_tmp
Ë
o
 << "|tmp";

3485 i‡(
	gÊag
 & 
	gsmÀvñ_0
::
°_lﬂd_fûe
Ë
o
 << "|load_file";

3486 i‡(
	gÊag
 & 
	gsmÀvñ_0
::
°_ö£π_fûe
Ë
o
 << "|insert_file";

3487 i‡(
	gÊag
 & 
	gsmÀvñ_0
::
°_em±y
Ë
o
 << "|empty";

3488 i‡(
	gÊag
 & !(
	gsmÀvñ_0
::
°_bad


3489 | 
smÀvñ_0
::
°_ªguœr


3490 | 
smÀvñ_0
::
°_tmp


3491 | 
smÀvñ_0
::
°_lﬂd_fûe


3492 | 
smÀvñ_0
::
°_ö£π_fûe


3493 | 
smÀvñ_0
::
°_em±y
)) {

3494 
o
 << "|unknown";

3495 
w_as£π3
(1);

3498  
	go
 << "|";

3501 
	go°ªam
&

3502 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gsmÀvñ_0
::
°‹e_›î©i⁄_t
 
›
)

3504 c⁄° *
«mes
[] = {"delete_store",

3510 i‡(
	g›
 <
smÀvñ_0
::
t_£t_fú°_ext
) {

3511  
o
 << 
«mes
[
›
];

3513  
	go
 << "unknown";

3514 
w_as£π3
(1);

3518 
	go°ªam
&

3519 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gsmÀvñ_0
::
°‹e_dñëög_t
 
vÆue
)

3521 c⁄° *
«mes
[] = { "not_deleting_store",

3526 i‡(
	gvÆue
 <
smÀvñ_0
::
t_unknown_dñëög
) {

3527  
o
 << 
«mes
[
vÆue
];

3529  
	go
 << "unknown_deleting_store_value";

3530 
w_as£π3
(1);

3534 
rc_t


3535 
	gss_m
::
	$log_fûe_was_¨chived
(c⁄° * 
logfûe
)

3537 if(
log
ËÜog->
	`fûe_was_¨chived
(
logfûe
);

3539  
RCOK
;

3540 
	}
}

3546 
sm_dum∂ocks
()

3548 i‡(
smÀvñ_0
::
lm
) {

3549 
W_IGNORE
(
ss_m
::
dump_locks
(
cout
));

3552 
cout
 << "nÿsmÀvñ_0::lm" << 
ídl
;

3553 
cout
 << 
Êush
;

3556 
sm_dumpx˘s
()

3558 
W_IGNORE
(
ss_m
::
dump_x˘s
(
cout
));

3559 
cout
 << 
Êush
;

3562 
sm_dumpbuf„rs
()

3564 
W_IGNORE
(
ss_m
::
dump_buf„rs
(
cout
));

3565 
cout
 << 
Êush
;

3568 
sm_dum≥xts
(
vﬁ
, 
exäum_t
 
°¨t
,Éxäum_à
íd
)

3570 
W_IGNORE
–
ss_m
::
dump_exts
(
cout
, 
vﬁ
, 
°¨t
, 
íd
) );

3571 
cout
 << 
Êush
;

3574 
sm_dump°‹es
(
vﬁ
, 
°¨t
, 
íd
)

3576 
W_IGNORE
–
ss_m
::
dump_°‹es
(
cout
, 
vﬁ
, 
°¨t
, 
íd
) );

3577 
cout
 << 
Êush
;

3580 
sm_dumphi°o
(
boﬁ
 
locked
)

3582 
ss_m
::
dump_hi°o
(
cout
, 
locked
);

3583 
cout
 << 
Êush
;

	@src/sm/sm.h

53 #i‚de‡
SM_H


54 
	#SM_H


	)

56 
	~"w_deföes.h
"

66 #ifde‡
__GNUG__


67 #¥agm®
öãrÁ˚


70 #i‚de‡
SM_INT_4_H


71 
	~<sm_öt_4.h
>

74 #i‚de‡
SM_DU_STATS_H


75 
	~<sm_du_°©s.h
>

78 #i‚de‡
SM_STATS_H


79 
	~<sm°©s.h
>

82 #i‚de‡
SM_S_H


83 
	~<sm_s.h
>

86 #i‚de‡
LEXIFY_H


87 
	~<Àxify.h
>

90 #i‚de‡
NBOX_H


91 
	~<nbox.h
>

94 #i‚de‡
SORT_S_H


95 
	~<s‹t_s.h
>

445 
˛ass
 
	g∑ge_p
;

446 
˛ass
 
	gx˘_t
;

447 
˛ass
 
	gdevi˚_m
;

448 
˛ass
 
	gvec_t
;

449 
˛ass
 
	glog_m
;

450 
˛ass
 
	glock_m
;

451 
˛ass
 
	gbåì_m
;

452 
˛ass
 
	gfûe_m
;

453 
˛ass
 
	gpoﬁ_m
;

454 
˛ass
 
	gdú_m
;

455 
˛ass
 
	gchk±_m
;

456 
˛ass
 
	glid_m
;

457 
˛ass
 
	gsm_°©s_ˇche_t
;

458 
˛ass
 
	g›ti⁄_group_t
;

459 
˛ass
 
	g›ti⁄_t
;

460 
˛ass
 
	g¥ﬁogue_rc_t
;

461 
˛ass
 
	gπªe_m
;

462 
˛ass
 
	gs‹t_°ªam_i
;

464 
˛ass
 
	gønges_m
;

465 
˛ass
 
	gkey_ønges_m≠
;

466 
	gsöfo_s
;

486 ˛as†
	csm_ßve_poöt_t
 : 
public
 
l¢_t
 {

487 
public
:

488 
NORET
 
	$sm_ßve_poöt_t
(): 
	$_tid
(0,0) {};

489 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam& 
o
, c⁄° 
sm_ßve_poöt_t
& 
p
) {

490  
o
 << 
p
.
_tid
 << ':' << (c⁄° 
l¢_t
&)Ö;

491 
	}
}

492 
‰õnd
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gsm_ßve_poöt_t
& 
	gp
) {

493 
	gch
;

494  
	gi
 >> 
	gp
.
	g_tid
 >> 
	gch
 >> (
	gl¢_t
&)Ö;

496 
tid_t
 
	$tid
(Ëc⁄° {  
_tid
; 
	}
}

497 
	g¥iv©e
:

498 
‰õnd
 
˛ass
 
ss_m
;

499 
tid_t
 
	g_tid
;

542 ˛as†
	csm_qu¨k_t
 {

543 
	mpublic
:

544 
NORET
 
	$sm_qu¨k_t
() {}

545 
NORET
 ~
	`sm_qu¨k_t
();

547 
rc_t
 
	`›í
();

548 
rc_t
 
	`˛o£
(
boﬁ
 
ªÀa£
=
åue
);

550 
tid_t
 
	$tid
()c⁄° {  
_tid
; 
	}
}

551 
›î©‹
 
	$boﬁ
()c⁄° {  (
_tid
 !
tid_t
::
nuŒ
); 
	}
}

552 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsm_qu¨k_t
& 
	gq
);

553 
‰õnd
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gsm_qu¨k_t
& 
	gq
);

555 
	g¥iv©e
:

556 
‰õnd
 
˛ass
 
ss_m
;

557 
tid_t
 
	g_tid
;

560 
sm_qu¨k_t
(const sm_quark_t&);

561 
	gsm_qu¨k_t
& 
	g›î©‹
=(c⁄° 
sm_qu¨k_t
&);

565 
˛ass
 
	gsm_°‹e_öfo_t
;

566 
˛ass
 
	glog_íåy
;

567 
˛ass
 
	gco‹dö©‹
;

568 
˛ass
 
	gè≥_t
;

574 ˛as†
	css_m
 : 
public
 
smÀvñ_t›


576 
‰õnd
 
˛ass
 
pö_i
;

577 
‰õnd
 
˛ass
 
	ms‹t_°ªam_i
;

578 
‰õnd
 
˛ass
 
	m¥ﬁogue_rc_t
;

579 
‰õnd
 
˛ass
 
	mlog_íåy
;

580 
‰õnd
 
˛ass
 
	mco‹dö©‹
;

581 
‰õnd
 
˛ass
 
	mè≥_t
;

582 
	mpublic
:

584 
smÀvñ_0
::
	tLOG_WARN_CALLBACK_FUNC
 LOG_WARN_CALLBACK_FUNC;

585 
	msmÀvñ_0
::
	tLOG_ARCHIVED_CALLBACK_FUNC
 LOG_ARCHIVED_CALLBACK_FUNC;

586 
	msmÀvñ_0
::
	tndx_t
Çdx_t;

587 
	msmÀvñ_0
::
	tc⁄cuºícy_t
 concurrency_t;

588 
	msmÀvñ_1
::
	tx˘_°©e_t
 xct_state_t;

590 
	msmÀvñ_0
::
	tRELOCATE_RECORD_CALLBACK_FUNC
 RELOCATE_RECORD_CALLBACK_FUNC;

592 
sm_°‹e_¥›îty_t
 
	t°‹e_¥›îty_t
;

594 #i‡
COMMENT


623 
	mpublic
:

638 
rc_t
 
£tup_›ti⁄s
(
›ti⁄_group_t
* 
gΩ
);

687 
ss_m
(
LOG_WARN_CALLBACK_FUNC
 
w¨n
=
NULL
, 
LOG_ARCHIVED_CALLBACK_FUNC
 
gë
=NULL);

696 ~
ss_m
();

717 
£t_shutdown_Êag
(
boﬁ
 
˛ón
);

725 
rc_t
 
log_fûe_was_¨chived
(c⁄° * 
logfûe
);

727 
	m¥iv©e
:

728 
_c⁄°ru˘_⁄˚
(
LOG_WARN_CALLBACK_FUNC
 
x
=
NULL
,

729 
LOG_ARCHIVED_CALLBACK_FUNC
 
y
=
NULL
);

730 
_de°ru˘_⁄˚
();

733 
	mpublic
:

758 
rc_t
 
begö_x˘
(

759 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_THREAD
);

783 
rc_t
 
begö_x˘
(

784 
sm_°©s_öfo_t
* 
°©s
,

785 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_THREAD
);

801 
rc_t
 
begö_x˘
(

802 
tid_t
& 
tid
,

803 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_THREAD
);

805 #unde‡
FORK_LOG_STREAM


806 #i‡
FORK_LOG_STREAM


886 
rc_t
 
f‹k_log_°ªam
(
x˘_t
* 
f‹kme
);

899 
rc_t
 
˛o£_log_°ªam
();

941 
rc_t
 
©èch_°©s
(
sm_°©s_öfo_t
* 
s
);

951 
rc_t
 
dëach_°©s
();

1031 
rc_t
 
íãr_2pc
(c⁄° 
gtid_t
 &
gtid
);

1045 
rc_t
 
£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &
h
);

1064 
rc_t
 
¥ï¨e_x˘
(

1065 
sm_°©s_öfo_t
*& 
°©s
,

1066 
vŸe_t
& 
vŸe
);

1079 
rc_t
 
¥ï¨e_x˘
(
vŸe_t
 &
vŸe
);

1091 
rc_t
 
f‹˚_vŸe_ªad⁄ly
();

1107 
rc_t
 
ªcovî_2pc
(c⁄° 
gtid_t
 & 
gtid
,

1108 
boﬁ
 
mayblock
,

1109 
tid_t
 & 
loˇl


1121 
rc_t
 
quîy_¥ï¨ed_x˘
(&
numtids
);

1149 
rc_t
 
quîy_¥ï¨ed_x˘
(
numtids
, 
gtid_t
 
l
[]);

1165 
rc_t
 
commô_x˘
(

1166 
boﬁ
 
œzy
 = 
Ál£
,

1167 
l¢_t
* 
∂a°l¢
=
NULL
);

1183 
rc_t
 
commô_x˘
(

1184 
sm_°©s_öfo_t
*& 
°©s
,

1185 
boﬁ
 
œzy
 = 
Ál£
,

1186 
l¢_t
* 
∂a°l¢
=
NULL
);

1203 
rc_t
 
chaö_x˘
(

1204 
sm_°©s_öfo_t
*& 
°©s
,

1205 
boﬁ
 
œzy
 = 
Ál£
);

1221 
rc_t
 
chaö_x˘
(
boﬁ
 
œzy
 = 
Ál£
);

1230 
rc_t
 
ab‹t_x˘
(
sm_°©s_öfo_t
*& 
°©s
);

1237 
rc_t
 
ab‹t_x˘
();

1249 
rc_t
 
ßve_w‹k
(
sm_ßve_poöt_t
& 
•
);

1263 
rc_t
 
rﬁlback_w‹k
(c⁄° 
sm_ßve_poöt_t
& 
•
);

1272 
	mw_ba£_t
::
uöt4_t
 
num_a˘ive_x˘s
();

1279 
	$©èch_x˘
(
x˘_t
 *
x
Ë{ 
	`me
()->
	`©èch_x˘
(x); }

1327 
	$dëach_x˘
(Ë{ 
x˘_t
 *
x
 = 
	`me
()->
	`x˘
();

1328 if(
x
Ë
	`me
()->
	`dëach_x˘
(x); 
	}
}

1337 
x˘_t
* 
tid_to_x˘
(c⁄° 
tid_t
& 
tid
);

1344 
tid_t
 
x˘_to_tid
(c⁄° 
x˘_t
* 
x
);

1352 
rc_t
 
dump_x˘s
(
o°ªam
 &
o
);

1362 
x˘_°©e_t
 
°©e_x˘
(c⁄° 
x˘_t
* 
x
);

1372 
	gsmÀvñ_0
::
fûeoff_t
 
x˘_log_•a˚_√eded
();

1386 
rc_t
 
x˘_ª£rve_log_•a˚
(
fûeoff_t
 
amt
);

1391 
c⁄cuºícy_t
 
x˘_lock_Àvñ
();

1402 
£t_x˘_lock_Àvñ
(
c⁄cuºícy_t
 
l
);

1417 
rc_t
 
x˘_cﬁÀ˘
(
vèbÀ_t
&
v
, 
boﬁ
 
«mes_too
=
åue
);

1434 
rc_t
 
bp_cﬁÀ˘
(
vèbÀ_t
&
v
, 
boﬁ
 
«mes_too
=
åue
);

1450 
rc_t
 
lock_cﬁÀ˘
(
vèbÀ_t
&
v
, 
boﬁ
 
«mes_too
=
åue
);

1465 
rc_t
 
thªad_cﬁÀ˘
(
vèbÀ_t
&
v
, 
boﬁ
 
«mes_too
=
åue
);

1469 
rc_t
 
Êushlog
();

1483 
rc_t
 
checkpoöt
();

1496 
rc_t
 
f‹˚_buf„rs
(
boﬁ
 
övÆid©e
 = 
Ál£
);

1509 
rc_t
 
f‹˚_vﬁ_hdr_buf„rs
–c⁄° 
vid_t
& 
vid
);

1525 
rc_t
 
f‹˚_°‹e_buf„rs
(c⁄° 
°id_t
 & 
°id
,

1526 
boﬁ
 
övÆid©e
);

1531 
rc_t
 
dump_buf„rs
(
o°ªam
 &
o
);

1532 
rc_t
 
dump_locks
(
o°ªam
 &
o
);

1533 
rc_t
 
dump_locks
();

1534 
rc_t
 
dump_exts
(
o°ªam
 &
o
,

1535 
vid_t
 
v
,

1536 
exäum_t
 
°¨t
,

1537 
exäum_t
 
íd
);

1539 
rc_t
 
dump_°‹es
(
o°ªam
 &
o
,

1540 
vid_t
 
v
,

1541 
°¨t
,

1542 
íd
);

1544 
rc_t
 
dump_hi°o
(
o°ªam
 &
o
, 
boﬁ
 
locked
);

1546 
rc_t
 
¢≠shŸ_buf„rs
(

1547 
u_öt
& 
ndúty
,

1548 
u_öt
& 
n˛ón
,

1549 
u_öt
& 
n‰ì
,

1550 
u_öt
& 
nfixed
);

1559 
rc_t
 
g©hî_x˘_°©s
(

1560 
sm_°©s_öfo_t
& 
°©s
,

1561 
boﬁ
 
ª£t
 = 
Ál£
);

1568 
rc_t
 
g©hî_°©s
(

1569 
sm_°©s_öfo_t
& 
°©s


1577 
rc_t
 
c⁄fig_öfo
(
sm_c⁄fig_öfo_t
& 
öfo
);

1587 
rc_t
 
£t_disk_dñay
(
u_öt
 
mûli_£c
);

1598 
rc_t
 
°¨t_log_c‹ru±i⁄
();

1602 
rc_t
 
sync_log
(
boﬁ
 
block
=
åue
);

1603 
rc_t
 
Êush_u¡û
(
l¢_t
& 
™l¢
, 
boﬁ
 
block
=
åue
);

1606 
rc_t
 
gë_cuº_l¢
(
l¢_t
& 
™l¢
);

1607 
rc_t
 
gë_duøbÀ_l¢
(
l¢_t
& 
™l¢
);

1725 
rc_t
 
f‹m©_dev
(

1726 c⁄° * 
devi˚
,

1727 
smksize_t
 
quŸa_ö_KB
,

1728 
boﬁ
 
f‹˚
);

1749 
rc_t
 
mou¡_dev
(

1750 c⁄° * 
devi˚
,

1751 
u_öt
& 
vﬁ_˙t
,

1752 
devid_t
& 
devid
,

1753 
vid_t
 
loˇl_vid
 = vid_t::
nuŒ
);

1770 
rc_t
 
dismou¡_dev
(c⁄° * 
devi˚
);

1778 
rc_t
 
dismou¡_Æl
();

1803 
rc_t
 
li°_devi˚s
(

1804 c⁄° **& 
dev_li°
,

1805 
devid_t
*& 
devid_li°
,

1806 
u_öt
& 
dev_˙t
);

1823 
rc_t
 
li°_vﬁumes
(

1824 c⁄° * 
devi˚
,

1825 
lvid_t
*& 
lvid_li°
,

1826 
u_öt
& 
lvid_˙t


1846 
rc_t
 
gë_devi˚_quŸa
(

1847 c⁄° * 
devi˚
,

1848 
smksize_t
& 
quŸa_KB
,

1849 
smksize_t
& 
quŸa_u£d_KB
);

1867 
rc_t
 
£t_Áke_disk_œãncy
(
vid_t
 
vid
, c⁄° 
adñay
);

1878 
rc_t
 
íabÀ_Áke_disk_œãncy
(
vid_t
 
vid
);

1886 
rc_t
 
dißbÀ_Áke_disk_œãncy
(
vid_t
 
vid
);

1900 
rc_t
 
gíî©e_√w_lvid
(
lvid_t
& 
lvid
);

1921 
rc_t
 
¸óã_vﬁ
(

1922 c⁄° * 
devi˚_«me
,

1923 c⁄° 
lvid_t
& 
lvid
,

1924 
smksize_t
 
quŸa_KB
,

1925 
boﬁ
 
skù_øw_öô
 = 
Ál£
,

1926 
vid_t
 
loˇl_vid
 = vid_t::
nuŒ
,

1927 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
 = 
Ál£
,

1928 c⁄° 
Áke_disk_œãncy
 = 0);

1938 
rc_t
 
de°roy_vﬁ
(c⁄° 
lvid_t
& 
lvid
);

1947 
rc_t
 
gë_vﬁume_quŸa
(

1948 c⁄° 
lvid_t
& 
lvid
,

1949 
smksize_t
& 
quŸa_KB
,

1950 
smksize_t
& 
quŸa_u£d_KB
);

1954 
rc_t
 
check_vﬁume_∑ge_ty≥s
(
vid_t
 
vid
);

1976 
rc_t
 
gë_du_°©i°ics
(

1977 
vid_t
 
vid
,

1978 
sm_du_°©s_t
& 
du
,

1979 
boﬁ
 
audô
 = 
åue
);

1993 
rc_t
 
gë_du_°©i°ics
(

1994 c⁄° 
°id_t
& 
°id
,

1995 
sm_du_°©s_t
& 
du
,

1996 
boﬁ
 
audô
 = 
åue
);

2009 
rc_t
 
gë_vﬁume_mëa_°©s
(

2010 
vid_t
 
vid
,

2011 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
,

2012 
c⁄cuºícy_t
 
cc
 = 
t_cc_n⁄e


2040 
rc_t
 
gë_fûe_mëa_°©s
(

2041 
vid_t
 
vid
,

2042 
w_ba£_t
::
uöt4_t
 
num_fûes
,

2043 
SmFûeMëaSèts
* 
fûe_°©s
,

2044 
boﬁ
 
b©ch_ˇlcuœã
 = 
Ál£
,

2045 
c⁄cuºícy_t
 
cc
 = 
t_cc_n⁄e


2059 
rc_t
 
	$vﬁ_roŸ_ödex
(

2060 c⁄° 
vid_t
& 
v
,

2061 
°id_t
& 
iid


2062 Ë{ 
iid
.
vﬁ
 = 
v
; iid.
°‹e
 = 
°‹e_id_roŸ_ödex
;  
RCOK
; 
	}
}

2109 
rc_t
 
£t_°‹e_¥›îty
(

2110 
°id_t
 
°id
,

2111 
°‹e_¥›îty_t
 
¥›îty


2124 
rc_t
 
gë_°‹e_¥›îty
(

2125 
°id_t
 
°id
,

2126 
°‹e_¥›îty_t
& 
¥›îty
);

2137 
rc_t
 
gë_°‹e_öfo
(

2138 c⁄° 
°id_t
& 
°id
,

2139 
sm_°‹e_öfo_t
& 
öfo
);

2255 
rc_t
 
¸óã_ödex
(

2256 
vid_t
 
vid
,

2257 
ndx_t
 
¡y≥
,

2258 
°‹e_¥›îty_t
 
¥›îty
,

2259 c⁄° * 
key_desc
,

2260 
c⁄cuºícy_t
 
cc
,

2261 
°id_t
& 
°id


2268 
rc_t
 
¸óã_ödex
(

2269 
vid_t
 
vid
,

2270 
ndx_t
 
¡y≥
,

2271 
°‹e_¥›îty_t
 
¥›îty
,

2272 c⁄° * 
key_desc
,

2273 
°id_t
& 
°id


2281 
rc_t
 
de°roy_ödex
(c⁄° 
°id_t
& 
iid
);

2317 
rc_t
 
bulkld_ödex
(

2318 c⁄° 
°id_t
& 
°id
,

2319 
n§cs
,

2320 c⁄° 
°id_t
* 
sour˚
,

2321 
sm_du_°©s_t
& 
°©s
,

2322 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

2323 
boﬁ
 
Àxify_keys
 = 
åue


2340 
rc_t
 
bulkld_ödex
(

2341 c⁄° 
°id_t
& 
°id
,

2342 c⁄° 
°id_t
& 
sour˚
,

2343 
sm_du_°©s_t
& 
°©s
,

2344 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

2345 
boﬁ
 
Àxify_keys
 = 
åue


2357 
rc_t
 
bulkld_ödex
(

2358 c⁄° 
°id_t
& 
°id
,

2359 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

2360 
sm_du_°©s_t
& 
°©s
);

2363 
rc_t
 
¥öt_ödex
(
°id_t
 
°id
);

2376 
rc_t
 
¸óã_assoc
(

2377 
°id_t
 
°id
,

2378 c⁄° 
vec_t
& 
key
,

2379 c⁄° 
vec_t
& 
ñ
,

2380 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

2388 
rc_t
 
de°roy_assoc
(

2389 
°id_t
 
°id
,

2390 c⁄° 
vec_t
& 
key
,

2391 c⁄° 
vec_t
& 
ñ
,

2392 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

2400 
rc_t
 
de°roy_Æl_assoc
(

2401 
°id_t
 
°id
,

2402 c⁄° 
vec_t
& 
key
,

2403 & 
num_ªmoved


2423 
rc_t
 
föd_assoc
(

2424 
°id_t
 
°id
,

2425 c⁄° 
vec_t
& 
key
,

2426 * 
ñ
,

2427 
smsize_t
& 
ñí
,

2428 
boﬁ
& 
found
,

2429 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

2455 
rc_t
 
¸óã_mr_ödex
(

2456 
vid_t
 
vid
,

2457 
ndx_t
 
¡y≥
,

2458 
°‹e_¥›îty_t
 
¥›îty
,

2459 c⁄° * 
key_desc
,

2460 
c⁄cuºícy_t
 
cc
,

2461 
°id_t
& 
°id
,

2462 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


2487 
rc_t
 
¸óã_mr_ödex
(

2488 
vid_t
 
vid
,

2489 
ndx_t
 
¡y≥
,

2490 
°‹e_¥›îty_t
 
¥›îty
,

2491 c⁄° * 
key_desc
,

2492 
c⁄cuºícy_t
 
cc
,

2493 
°id_t
& 
°id
,

2494 
key_ønges_m≠
& 
ønges
,

2495 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


2503 
rc_t
 
de°roy_mr_ödex
(c⁄° 
°id_t
& 
iid
);

2506 
rc_t
 
¥öt_mr_ödex
(
°id_t
 
°id
);

2519 
rc_t
 
¸óã_mr_assoc
(

2520 
°id_t
 
°id
,

2521 c⁄° 
vec_t
& 
key
,

2522 
ñ_fûÀr
& 
ef
,

2523 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

2524 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2525 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
,

2526 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

2535 
rc_t
 
de°roy_mr_assoc
(

2536 
°id_t
 
°id
,

2537 c⁄° 
vec_t
& 
key
,

2538 c⁄° 
vec_t
& 
ñ
,

2539 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

2540 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2541 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

2550 
rc_t
 
de°roy_mr_Æl_assoc
(

2551 
°id_t
 
°id
,

2552 c⁄° 
vec_t
& 
key
,

2553 & 
num_ªmoved
,

2554 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

2555 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2556 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

2576 
rc_t
 
föd_mr_assoc
(

2577 
°id_t
 
°id
,

2578 c⁄° 
vec_t
& 
key
,

2579 * 
ñ
,

2580 
smsize_t
& 
ñí
,

2581 
boﬁ
& 
found
,

2582 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

2583 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2584 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

2600 
rc_t
 
upd©e_mr_assoc
(

2601 
°id_t
 
°id
,

2602 c⁄° 
vec_t
& 
key
,

2603 c⁄° 
vec_t
& 
ﬁd_ñ
,

2604 c⁄° 
vec_t
& 
√w_ñ
,

2605 
boﬁ
& 
found
,

2606 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

2607 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2608 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

2611 #ifde‡
SM_HISTOGRAM


2615 
rc_t
 
de°roy_Æl_hi°ogøms
();

2624 
rc_t
 
gë_ønge_m≠
(
°id_t
 
°id
, 
key_ønges_m≠
*& 
øngem≠
);

2626 
rc_t
 
gë_°‹e_öfo
(
°id_t
 
°id
, 
söfo_s
& 
söfo
);

2638 
rc_t
 
make_equÆ_∑πôi⁄s
(
°id_t
 
°id
,

2639 c⁄° 
vec_t
& 
möKey
,

2640 c⁄° 
vec_t
& 
maxKey
,

2641 
uöt
 
numP¨ts
);

2652 
rc_t
 
add_∑πôi⁄_öô
(
°id_t
 
°id
,

2653 c⁄° 
vec_t
& 
key
,

2654 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

2662 
rc_t
 
add_∑πôi⁄
(
°id_t
 
°id
,

2663 c⁄° 
vec_t
& 
key
,

2664 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

2665 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
 = 
NULL
);

2674 
rc_t
 
dñëe_∑πôi⁄
(
°id_t
 
°id
,

2675 c⁄° 
vec_t
& 
key
,

2676 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

2685 
rc_t
 
dñëe_∑πôi⁄
(
°id_t
 
°id
,

2686 
Õid_t
& 
roŸ
,

2687 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

2754 
rc_t
 
¸óã_md_ödex
(

2755 
vid_t
 
vid
,

2756 
ndx_t
 
¡y≥
,

2757 
°‹e_¥›îty_t
 
¥›îty
,

2758 
°id_t
& 
°id
,

2759 
öt2_t
 
dim
 = 2

2767 
rc_t
 
de°roy_md_ödex
(c⁄° 
°id_t
& 
iid
);

2780 
rc_t
 
bulkld_md_ödex
(

2781 c⁄° 
°id_t
& 
°id
,

2782 
n§cs
,

2783 c⁄° 
°id_t
* 
sour˚
,

2784 
sm_du_°©s_t
& 
°©s
,

2785 
öt2_t
 
hff
=75,

2786 
öt2_t
 
hef
=120,

2787 
nbox_t
* 
univî£
=
NULL
);

2799 
rc_t
 
bulkld_md_ödex
(

2800 c⁄° 
°id_t
& 
°id
,

2801 c⁄° 
°id_t
& 
sour˚
,

2802 
sm_du_°©s_t
& 
°©s
,

2803 
öt2_t
 
hff
=75,

2804 
öt2_t
 
hef
=120,

2805 
nbox_t
* 
univî£
=
NULL
);

2817 
rc_t
 
bulkld_md_ödex
(

2818 c⁄° 
°id_t
& 
°id
,

2819 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

2820 
sm_du_°©s_t
& 
°©s
,

2821 
öt2_t
 
hff
=75,

2822 
öt2_t
 
hef
=120,

2823 
nbox_t
* 
univî£
=
NULL
);

2825 
rc_t
 
¥öt_md_ödex
(
°id_t
 
°id
);

2839 
rc_t
 
föd_md_assoc
(

2840 
°id_t
 
°id
,

2841 c⁄° 
nbox_t
& 
key
,

2842 * 
ñ
,

2843 
smsize_t
& 
ñí
,

2844 
boﬁ
& 
found
);

2853 
rc_t
 
¸óã_md_assoc
(

2854 
°id_t
 
°id
,

2855 c⁄° 
nbox_t
& 
key
,

2856 c⁄° 
vec_t
& 
ñ
);

2865 
rc_t
 
de°roy_md_assoc
(

2866 
°id_t
 
°id
,

2867 c⁄° 
nbox_t
& 
key
,

2868 c⁄° 
vec_t
& 
ñ
);

2872 
rc_t
 
døw_πªe
(c⁄° 
°id_t
& 
°id
, 
o°ªam
 &);

2892 
rc_t
 
πªe_°©s
(

2893 c⁄° 
°id_t
& 
°id
,

2894 
πªe_°©s_t
& 
°©
,

2895 
uöt2_t
 
size
 = 0,

2896 
uöt2_t
* 
ovp
 = 
NULL
,

2897 
boﬁ
 
audô
 = 
Ál£
);

2964 
rc_t
 
¸óã_fûe
(

2965 
vid_t
 
vid
,

2966 
°id_t
& 
fid
,

2967 
°‹e_¥›îty_t
 
¥›îty
,

2968 
shpid_t
 
˛u°î_höt
 = 0

2976 
rc_t
 
de°roy_fûe
(c⁄° 
°id_t
& 
fid
);

2993 
rc_t
 
¸óã_ªc
(

2994 c⁄° 
°id_t
& 
fid
,

2995 c⁄° 
vec_t
& 
hdr
,

2996 
smsize_t
 
Àn_höt
,

2997 c⁄° 
vec_t
& 
d©a
,

2998 
rid_t
& 
√w_rid
,

2999 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3006 
rc_t
 
de°roy_ªc
(c⁄° 
rid_t
& 
rid
,

3007 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3022 
rc_t
 
upd©e_ªc
(

3023 c⁄° 
rid_t
& 
rid
,

3024 
smsize_t
 
°¨t
,

3025 c⁄° 
vec_t
& 
d©a
);

3043 
rc_t
 
upd©e_ªc_hdr
(

3044 c⁄° 
rid_t
& 
rid
,

3045 
smsize_t
 
°¨t
,

3046 c⁄° 
vec_t
& 
hdr
);

3058 
rc_t
 
≠≥nd_ªc
(

3059 c⁄° 
rid_t
& 
rid
,

3060 c⁄° 
vec_t
& 
d©a


3071 
rc_t
 
åunˇã_ªc
(

3072 c⁄° 
rid_t
& 
rid
,

3073 
smsize_t
 
amou¡


3088 
rc_t
 
åunˇã_ªc
(

3089 c⁄° 
rid_t
& 
rid
,

3090 
smsize_t
 
amou¡
,

3091 
boﬁ
& 
should_f‹w¨d


3113 
rc_t
 
¸óã_mrbt_fûe
(

3114 
vid_t
 
vid
,

3115 
°id_t
& 
fid
,

3116 
°‹e_¥›îty_t
 
¥›îty
,

3117 
shpid_t
 
˛u°î_höt
 = 0

3120 
rc_t
 
de°roy_mrbt_fûe
(c⁄° 
°id_t
& 
fid
);

3122 
rc_t
 
¸óã_mrbt_ªc
(

3123 c⁄° 
°id_t
& 
fid
,

3124 c⁄° 
vec_t
& 
hdr
,

3125 
smsize_t
 
Àn_höt
,

3126 c⁄° 
vec_t
& 
d©a
,

3127 
rid_t
& 
√w_rid
,

3128 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3148 
rc_t
 
¸óã_mrbt_ªc_ö_∑ge
(

3149 c⁄° 
°id_t
& 
fid
,

3150 
fûe_p
& 
∑ge
,

3151 c⁄° 
vec_t
& 
hdr
,

3152 
smsize_t
 
Àn_höt
,

3153 c⁄° 
vec_t
& 
d©a
,

3154 
rid_t
& 
√w_rid
,

3155 
boﬁ
& 
•a˚_found
,

3156 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3157 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3176 
rc_t
 
föd_∑ge_™d_¸óã_mrbt_ªc
(

3177 c⁄° 
°id_t
& 
fid
,

3178 c⁄° 
Õid_t
& 
Àaf
,

3179 c⁄° 
vec_t
& 
hdr
,

3180 
smsize_t
 
Àn_höt
,

3181 c⁄° 
vec_t
& 
d©a
,

3182 
rid_t
& 
√w_rid
,

3183 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3184 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3186 
rc_t
 
de°roy_mrbt_ªc
(c⁄° 
rid_t
& 
rid
,

3187 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3188 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3190 
rc_t
 
upd©e_mrbt_ªc
(

3191 c⁄° 
rid_t
& 
rid
,

3192 
smsize_t
 
°¨t
,

3193 c⁄° 
vec_t
& 
d©a
,

3194 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3195 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3197 
rc_t
 
upd©e_mrbt_ªc_hdr
(

3198 c⁄° 
rid_t
& 
rid
,

3199 
smsize_t
 
°¨t
,

3200 c⁄° 
vec_t
& 
hdr
,

3201 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3202 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3204 
rc_t
 
≠≥nd_mrbt_ªc
(

3205 c⁄° 
rid_t
& 
rid
,

3206 c⁄° 
vec_t
& 
d©a
,

3207 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3208 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


3211 
rc_t
 
åunˇã_mrbt_ªc
(

3212 c⁄° 
rid_t
& 
rid
,

3213 
smsize_t
 
amou¡
,

3214 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3215 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


3218 
rc_t
 
åunˇã_mrbt_ªc
(

3219 c⁄° 
rid_t
& 
rid
,

3220 
smsize_t
 
amou¡
,

3221 
boﬁ
& 
should_f‹w¨d
,

3222 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3223 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


3227 #ifde‡
OLDSORT_COMPATIBILITY


3228 
	gssm_s‹t
::
	tkey_öfo_t
 key_info_t;

3234 
rc_t
 
s‹t_fûe
(

3235 c⁄° 
°id_t
& 
fid
,

3236 
vid_t
 
vid
,

3237 
°id_t
& 
sfid
,

3238 
°‹e_¥›îty_t
 
¥›îty
,

3239 c⁄° 
key_öfo_t
& 
key_öfo
,

3240 
run_size
,

3241 
boﬁ
 
as˚ndög
 = 
åue
,

3242 
boﬁ
 
unique
 = 
Ál£
,

3243 
boﬁ
 
de°ru˘ive
 = 
Ál£
,

3244 
boﬁ
 
u£_√w_s‹t
 = 
åue
);

3249 
rc_t
 
√w_s‹t_fûe
(

3250 c⁄° 
°id_t
& 
fid
,

3251 
vid_t
 
vid
,

3252 
°id_t
& 
sfid
,

3253 
°‹e_¥›îty_t
 
¥›îty
,

3254 c⁄° 
key_öfo_t
& 
key_öfo
,

3255 
run_size
,

3256 
boﬁ
 
as˚ndög
 = 
åue
,

3257 
boﬁ
 
unique
 = 
Ál£
,

3258 
boﬁ
 
de°ru˘ive
 = 
Ál£


3262 
	gssm_s‹t
::
	ts‹t_keys_t
 sort_keys_t;

3298 
rc_t
 
s‹t_fûe
(

3299 c⁄° 
°id_t
& 
fid
,

3300 c⁄° 
°id_t
& 
s‹ãd_fid
,

3301 
nvids
,

3302 c⁄° 
vid_t
* 
vid
,

3306 
s‹t_keys_t
& 
kl
,

3307 
smsize_t
 
mö_ªc_sz
,

3308 
run_size
,

3309 
ãmp_•a˚


3319 
rc_t
 
lvid_to_vid
(

3320 c⁄° 
lvid_t
& 
lvid
,

3321 
vid_t
& 
vid
);

3330 
rc_t
 
vid_to_lvid
(

3331 
vid_t
 
vid
,

3332 
lvid_t
& 
lvid
);

3346 
£t_¶i_íabÀd
(
boﬁ
 
íabÀd
);

3347 
£t_ñr_íabÀd
(
boﬁ
 
íabÀd
);

3349 
rc_t
 
£t_log_„©uªs
(c⁄°* 
„©uªs
);

3350 c⁄°* 
gë_log_„©uªs
();

3352 #i‡
SM_PLP_TRACING


3356 
£t_∂p_åacög
(c⁄° 
uöt
 
åacög_Àvñ
);

3382 
rc_t
 
lock
(

3383 c⁄° 
lockid_t
& 
n
,

3384 
lock_mode_t
 
m
,

3385 
lock_duøti⁄_t
 
d
 = 
t_l⁄g
,

3386 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_XCT


3395 
rc_t
 
u∆ock
(c⁄° 
lockid_t
& 
n
);

3405 
rc_t
 
d⁄t_esˇœã
(

3406 c⁄° 
lockid_t
& 
n
,

3407 
boﬁ
 
∑ssOnToDes˚nd™ts
 = 
åue


3417 
rc_t
 
gë_esˇœti⁄_thªshﬁds
(

3418 
w_ba£_t
::
öt4_t
& 
toPage
,

3419 
w_ba£_t
::
öt4_t
& 
toSt‹e
,

3420 
w_ba£_t
::
öt4_t
& 
toVﬁume
);

3429 
rc_t
 
£t_esˇœti⁄_thªshﬁds
(

3430 
w_ba£_t
::
öt4_t
 
toPage
,

3431 
w_ba£_t
::
öt4_t
 
toSt‹e
,

3432 
w_ba£_t
::
öt4_t
 
toVﬁume
);

3443 
rc_t
 
quîy_lock
(

3444 c⁄° 
lockid_t
& 
n
,

3445 
lock_mode_t
& 
m
,

3446 
boﬁ
 
im∂icô
 = 
Ál£


3478 
rc_t
 
£t_lock_ˇche_íabÀ
(
boﬁ
 
íabÀ
);

3486 
rc_t
 
lock_ˇche_íabÀd
(
boﬁ
& 
íabÀd
);

3488 
›ti⁄_group_t
 *
	$gë_›ti⁄s
(Ë{  
_›ti⁄s
; 
	}
}

3490 
	g¥iv©e
:

3492 
_ö°™˚_˙t
;

3493 
›ti⁄_group_t
* 
	g_›ti⁄s
;

3494 
›ti⁄_t
* 
	g_hugëlbfs_∑th
;

3495 
›ti⁄_t
* 
	g_ªf‹m©_log
;

3496 
›ti⁄_t
* 
	g_¥e„tch
;

3497 
›ti⁄_t
* 
	g_buÂoﬁsize
;

3498 
›ti⁄_t
* 
	g_lockèbÀsize
;

3499 
›ti⁄_t
* 
	g_logdú
;

3500 
›ti⁄_t
* 
	g_logsize
;

3501 
›ti⁄_t
* 
	g_logbufsize
;

3502 
›ti⁄_t
* 
	g_îr‹_log
;

3503 
›ti⁄_t
* 
	g_îr‹_logÀvñ
;

3504 
›ti⁄_t
* 
	g_lockEsˇœãToPageThªshﬁd
;

3505 
›ti⁄_t
* 
	g_lockEsˇœãToSt‹eThªshﬁd
;

3506 
›ti⁄_t
* 
	g_lockEsˇœãToVﬁumeThªshﬁd
;

3507 
›ti⁄_t
* 
	g_cc_Æg_›ti⁄
;

3508 
›ti⁄_t
* 
	g_log_w¨n_≥r˚¡
;

3509 
›ti⁄_t
* 
	g_num_∑ge_wrôîs
;

3510 
›ti⁄_t
* 
	g_loggög
;

3512 
rc_t
 
_£t_›ti⁄_logsize
(

3513 
›ti⁄_t
* 
›t
,

3514 c⁄° * 
vÆue
,

3515 
o°ªam
* 
îr_°ªam
);

3517 
rc_t
 
_£t_›ti⁄_lock_esˇœã_to_∑ge
(

3518 
›ti⁄_t
* 
›t
,

3519 c⁄° * 
vÆue
,

3520 
o°ªam
* 
îr_°ªam
);

3522 
rc_t
 
_£t_›ti⁄_lock_esˇœã_to_°‹e
(

3523 
›ti⁄_t
* 
›t
,

3524 c⁄° * 
vÆue
,

3525 
o°ªam
* 
îr_°ªam
);

3527 
rc_t
 
_£t_›ti⁄_lock_esˇœã_to_vﬁume
(

3528 
›ti⁄_t
* 
›t
,

3529 c⁄° * 
vÆue
,

3530 
o°ªam
* 
îr_°ªam
);

3532 
rc_t
 
_£t_°‹e_¥›îty
(

3533 
°id_t
 
°id
,

3534 
°‹e_¥›îty_t
 
¥›îty
);

3536 
rc_t
 
_gë_°‹e_¥›îty
(

3537 
°id_t
 
°id
,

3538 
°‹e_¥›îty_t
& 
¥›îty
);

3540 
rc_t
 
_begö_x˘
(

3541 
sm_°©s_öfo_t
* 
°©s
,

3542 
tid_t
& 
tid
,

3543 
timeout_ö_ms
 
timeout
);

3545 
rc_t
 
_commô_x˘
(

3546 
sm_°©s_öfo_t
*& 
°©s
,

3547 
boﬁ
 
œzy
,

3548 
l¢_t
* 
∂a°l¢
);

3550 
rc_t
 
_¥ï¨e_x˘
(

3551 
sm_°©s_öfo_t
*& 
°©s
,

3552 
vŸe_t
& 
v
);

3554 
rc_t
 
_£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &);

3556 
rc_t
 
_íãr_2pc
(c⁄° 
gtid_t
 &);

3557 
rc_t
 
_f‹˚_vŸe_ªad⁄ly
();

3558 
rc_t
 
_ªcovî_2pc
(c⁄° 
gtid_t
 &,

3559 
boﬁ
 
mayblock
,

3560 
tid_t
 &

3562 
rc_t
 
_chaö_x˘
(

3563 
sm_°©s_öfo_t
*& 
°©s
,

3564 
boﬁ
 
œzy
);

3566 
rc_t
 
_ab‹t_x˘
(

3567 
sm_°©s_öfo_t
*& 
°©s
);

3569 
rc_t
 
_ßve_w‹k
(
sm_ßve_poöt_t
& 
•
);

3571 
rc_t
 
_rﬁlback_w‹k
(c⁄° 
sm_ßve_poöt_t
& 
•
);

3572 
rc_t
 
_mou¡_dev
(

3573 c⁄° * 
devi˚
,

3574 
u_öt
& 
vﬁ_˙t
,

3575 
vid_t
 
loˇl_vid
);

3577 
rc_t
 
_dismou¡_dev
(

3578 c⁄° * 
devi˚
,

3579 
boﬁ
 
dismou¡_if_locked
 = 
åue


3581 
rc_t
 
_¸óã_vﬁ
(

3582 c⁄° * 
devi˚_«me
,

3583 c⁄° 
lvid_t
& 
lvid
,

3584 
smksize_t
 
quŸa_KB
,

3585 
boﬁ
 
skù_øw_öô
,

3586 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
,

3587 c⁄° 
Áke_disk_œãncy
);

3589 
rc_t
 
_¸óã_ödex
(

3590 
vid_t
 
vid
,

3591 
ndx_t
 
¡y≥
,

3592 
°‹e_¥›îty_t
 
¥›îty
,

3593 c⁄° * 
key_desc
,

3594 
c⁄cuºícy_t
 
cc
,

3595 
°id_t
& 
°id


3598 
rc_t
 
_de°roy_ödex
(c⁄° 
°id_t
& 
iid
);

3600 
rc_t
 
_gë_°‹e_öfo
(

3601 c⁄° 
°id_t
 & 
°id
,

3602 
sm_°‹e_öfo_t
& 
öfo
);

3604 
rc_t
 
_bulkld_ödex
(

3605 c⁄° 
°id_t
& 
°id
,

3606 
n§cs
,

3607 c⁄° 
°id_t
* 
sour˚
,

3608 
sm_du_°©s_t
& 
°©s
,

3609 
boﬁ
 
s‹t_du∂iˇãs
 = 
åue
,

3610 
boﬁ
 
Àxify_keys
 = 
åue


3613 
rc_t
 
_bulkld_ödex
(

3614 c⁄° 
°id_t
& 
°id
,

3615 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

3616 
sm_du_°©s_t
& 
°©s


3619 
rc_t
 
_¥öt_ödex
(c⁄° 
°id_t
 &
iid
);

3621 
rc_t
 
_¸óã_assoc
(

3622 c⁄° 
°id_t
 & 
°id
,

3623 c⁄° 
vec_t
& 
key
,

3624 c⁄° 
vec_t
& 
ñ
,

3625 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3627 
rc_t
 
_de°roy_assoc
(

3628 c⁄° 
°id_t
 & 
°id
,

3629 c⁄° 
vec_t
& 
key
,

3630 c⁄° 
vec_t
& 
ñ
,

3631 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3633 
rc_t
 
_de°roy_Æl_assoc
(

3634 c⁄° 
°id_t
& 
°id
,

3635 c⁄° 
vec_t
& 
key
,

3636 & 
num_ªmoved


3638 
rc_t
 
_föd_assoc
(

3639 c⁄° 
°id_t
& 
°id
,

3640 c⁄° 
vec_t
& 
key
,

3641 * 
ñ
,

3642 
smsize_t
& 
ñí
,

3643 
boﬁ
& 
found
,

3644 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3647 
rc_t
 
_¸óã_mr_ödex
(

3648 
vid_t
 
vid
,

3649 
ndx_t
 
¡y≥
,

3650 
°‹e_¥›îty_t
 
¥›îty
,

3651 c⁄° * 
key_desc
,

3652 
c⁄cuºícy_t
 
cc
,

3653 
°id_t
& 
°id
,

3654 c⁄° 
boﬁ
 
bIgn‹eL©ches


3657 
rc_t
 
_¸óã_mr_ödex
(

3658 
vid_t
 
vid
,

3659 
ndx_t
 
¡y≥
,

3660 
°‹e_¥›îty_t
 
¥›îty
,

3661 c⁄° * 
key_desc
,

3662 
c⁄cuºícy_t
 
cc
,

3663 
°id_t
& 
°id
,

3664 
key_ønges_m≠
& 
ønges
,

3665 c⁄° 
boﬁ
 
bIgn‹eL©ches


3668 
rc_t
 
_de°roy_mr_ödex
(c⁄° 
°id_t
& 
iid
);

3670 
rc_t
 
_¥öt_mr_ödex
(c⁄° 
°id_t
 &
iid
);

3672 
rc_t
 
_¸óã_mr_assoc
(

3673 c⁄° 
°id_t
 & 
°id
,

3674 c⁄° 
vec_t
& 
key
,

3675 
ñ_fûÀr
& 
eg
,

3676 c⁄° 
boﬁ
 
bIgn‹eLocks
,

3677 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

3678 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
,

3679 c⁄° 
Õid_t
& 
roŸ
);

3681 
rc_t
 
_de°roy_mr_assoc
(

3682 c⁄° 
°id_t
 & 
°id
,

3683 c⁄° 
vec_t
& 
key
,

3684 c⁄° 
vec_t
& 
ñ
,

3685 c⁄° 
boﬁ
 
bIgn‹eLocks
,

3686 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

3687 c⁄° 
Õid_t
& 
roŸ
);

3689 
rc_t
 
_de°roy_mr_Æl_assoc
(

3690 c⁄° 
°id_t
& 
°id
,

3691 c⁄° 
vec_t
& 
key
,

3692 & 
num_ªmoved
,

3693 c⁄° 
boﬁ
 
bIgn‹eLocks
,

3694 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

3695 c⁄° 
Õid_t
& 
roŸ
);

3697 
rc_t
 
_föd_mr_assoc
(

3698 c⁄° 
°id_t
& 
°id
,

3699 c⁄° 
vec_t
& 
key
,

3700 * 
ñ
,

3701 
smsize_t
& 
ñí
,

3702 
boﬁ
& 
found
,

3703 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

3704 c⁄° 
boﬁ
 
bIgn‹eLocks
,

3705 c⁄° 
Õid_t
& 
roŸ
);

3707 
rc_t
 
_upd©e_mr_assoc
(

3708 c⁄° 
°id_t
& 
°id
,

3709 c⁄° 
vec_t
& 
key
,

3710 c⁄° 
vec_t
& 
ﬁd_ñ
,

3711 c⁄° 
vec_t
& 
√w_ñ
,

3712 
boﬁ
& 
found
,

3713 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3714 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
,

3715 c⁄° 
Õid_t
& 
roŸ
 =Üpid_t::
nuŒ
);

3717 #ifde‡
SM_HISTOGRAM


3718 
rc_t
 
_de°roy_Æl_hi°ogøms
();

3721 
rc_t
 
_gë_ønge_m≠
(
°id_t
 
°id
, 
key_ønges_m≠
*& 
øngem≠
);

3723 
rc_t
 
_gë_°‹e_öfo
(
°id_t
 
°id
, 
söfo_s
& 
söfo
);

3726 
rc_t
 
_make_equÆ_∑πôi⁄s
(
°id_t
 
°id
,

3727 c⁄° 
vec_t
& 
möKey
,

3728 c⁄° 
vec_t
& 
maxKey
,

3729 
uöt
 
numP¨ts
);

3731 
rc_t
 
_add_∑πôi⁄_öô
(
°id_t
 
°id
,

3732 c⁄° 
vec_t
& 
key
,

3733 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

3735 
rc_t
 
_add_∑πôi⁄
(
°id_t
 
°id
,

3736 c⁄° 
vec_t
& 
key
,

3737 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

3738 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
);

3740 
rc_t
 
_dñëe_∑πôi⁄
(
°id_t
 
°id
,

3741 c⁄° 
vec_t
& 
key
,

3742 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

3744 
rc_t
 
_dñëe_∑πôi⁄
(
°id_t
 
°id
,

3745 
Õid_t
& 
roŸ
,

3746 c⁄° 
boﬁ
 
bIgn‹eL©ches
);

3750 
rc_t
 
_¸óã_md_ödex
(

3751 
vid_t
 
vid
,

3752 
ndx_t
 
¡y≥
,

3753 
°‹e_¥›îty_t
 
¥›îty
,

3754 
°id_t
& 
°id
,

3755 
öt2_t
 
dim
=2

3758 
rc_t
 
_de°roy_md_ödex
(c⁄° 
°id_t
& 
iid
);

3760 
rc_t
 
_de°roy_md_assoc
(

3761 
°id_t
 
°id
,

3762 c⁄° 
nbox_t
& 
key
,

3763 c⁄° 
vec_t
& 
ñ
);

3765 
rc_t
 
_bulkld_md_ödex
(

3766 c⁄° 
°id_t
& 
°id
,

3767 
n§cs
,

3768 c⁄° 
°id_t
* 
sour˚
,

3769 
sm_du_°©s_t
& 
°©s
,

3770 
öt2_t
 
hff
,

3771 
öt2_t
 
hef
,

3772 
nbox_t
* 
univî£
);

3774 
rc_t
 
_bulkld_md_ödex
(

3775 c⁄° 
°id_t
& 
°id
,

3776 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

3777 
sm_du_°©s_t
& 
°©s
,

3778 
öt2_t
 
hff
,

3779 
öt2_t
 
hef
,

3780 
nbox_t
* 
univî£
);

3782 
rc_t
 
_¥öt_md_ödex
(
°id_t
 
°id
);

3784 
rc_t
 
_¸óã_md_assoc
(

3785 
°id_t
 
°id
,

3786 c⁄° 
nbox_t
& 
key
,

3787 c⁄° 
vec_t
& 
ñ
);

3789 
rc_t
 
_föd_md_assoc
(

3790 
°id_t
 
°id
,

3791 c⁄° 
nbox_t
& 
key
,

3792 * 
ñ
,

3793 
smsize_t
& 
ñí
,

3794 
boﬁ
& 
found
);

3799 
rc_t
 
_de°roy_n_sw≠_fûe
(

3800 c⁄° 
°id_t
& 
ﬁd_fid
,

3801 c⁄° 
°id_t
& 
√w_fid
);

3803 
rc_t
 
_¸óã_fûe
(

3804 
vid_t
 
vid
,

3805 
°id_t
& 
fid
,

3806 
°‹e_¥›îty_t
 
¥›îty
,

3807 
shpid_t
 
˛u°î_höt
 = 0

3810 
rc_t
 
_de°roy_fûe
(c⁄° 
°id_t
& 
fid
);

3812 
rc_t
 
_¸óã_ªc
(

3813 c⁄° 
°id_t
& 
fid
,

3814 c⁄° 
vec_t
& 
hdr
,

3815 
smsize_t
 
Àn_höt
,

3816 c⁄° 
vec_t
& 
d©a
,

3817 
rid_t
& 
√w_rid
,

3818 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3820 
rc_t
 
_de°roy_ªc
(

3821 c⁄° 
rid_t
& 
rid
,

3822 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3824 
rc_t
 
_upd©e_ªc
(

3825 c⁄° 
rid_t
& 
rid
,

3826 
smsize_t
 
°¨t
,

3827 c⁄° 
vec_t
& 
d©a
,

3828 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3830 
rc_t
 
_upd©e_ªc_hdr
(

3831 c⁄° 
rid_t
& 
rid
,

3832 
smsize_t
 
°¨t
,

3833 c⁄° 
vec_t
& 
hdr
,

3834 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3836 
rc_t
 
_≠≥nd_ªc
(

3837 c⁄° 
rid_t
& 
rid
,

3838 c⁄° 
vec_t
& 
d©a


3841 
rc_t
 
_åunˇã_ªc
(

3842 c⁄° 
rid_t
& 
rid
,

3843 
smsize_t
 
amou¡
,

3844 
boﬁ
& 
should_f‹w¨d


3848 
rc_t
 
_¸óã_mrbt_fûe
(

3849 
vid_t
 
vid
,

3850 
°id_t
& 
fid
,

3851 
°‹e_¥›îty_t
 
¥›îty
,

3852 
shpid_t
 
˛u°î_höt
 = 0

3855 
rc_t
 
_¸óã_mrbt_ªc
(

3856 c⁄° 
°id_t
& 
fid
,

3857 c⁄° 
vec_t
& 
hdr
,

3858 
smsize_t
 
Àn_höt
,

3859 c⁄° 
vec_t
& 
d©a
,

3860 
rid_t
& 
√w_rid
,

3861 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
);

3863 
rc_t
 
_¸óã_mrbt_ªc_ö_∑ge
(

3864 c⁄° 
°id_t
& 
fid
,

3865 
fûe_p
& 
∑ge
,

3866 c⁄° 
vec_t
& 
hdr
,

3867 
smsize_t
 
Àn_höt
,

3868 c⁄° 
vec_t
& 
d©a
,

3869 
rid_t
& 
√w_rid
,

3870 
boﬁ
& 
•a˚_found
,

3871 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3872 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3874 
rc_t
 
_föd_∑ge_™d_¸óã_mrbt_ªc
(

3875 c⁄° 
°id_t
& 
fid
,

3876 c⁄° 
Õid_t
& 
Àaf
,

3877 c⁄° 
vec_t
& 
hdr
,

3878 
smsize_t
 
Àn_höt
,

3879 c⁄° 
vec_t
& 
d©a
,

3880 
rid_t
& 
√w_rid
,

3881 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3882 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3884 
rc_t
 
_de°roy_mrbt_ªc
(c⁄° 
rid_t
& 
rid
,

3885 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3886 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3888 
rc_t
 
_upd©e_mrbt_ªc
(

3889 c⁄° 
rid_t
& 
rid
,

3890 
smsize_t
 
°¨t
,

3891 c⁄° 
vec_t
& 
d©a
,

3892 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3893 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3895 
rc_t
 
_upd©e_mrbt_ªc_hdr
(

3896 c⁄° 
rid_t
& 
rid
,

3897 
smsize_t
 
°¨t
,

3898 c⁄° 
vec_t
& 
d©a
,

3899 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3900 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3902 
rc_t
 
_≠≥nd_mrbt_ªc
(

3903 c⁄° 
rid_t
& 
rid
,

3904 c⁄° 
vec_t
& 
d©a
,

3905 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3906 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£
);

3908 
rc_t
 
_åunˇã_mrbt_ªc
(

3909 c⁄° 
rid_t
& 
rid
,

3910 
smsize_t
 
amou¡
,

3911 
boﬁ
& 
should_f‹w¨d
,

3912 c⁄° 
boﬁ
 
bIgn‹eLocks
 = 
Ál£
,

3913 c⁄° 
boﬁ
 
bIgn‹eL©ches
 = 
Ál£


3917 
rc_t
 
_døw_πªe
(c⁄° 
°id_t
& 
°id
, 
o°ªam
 &);

3919 
rc_t
 
_πªe_°©s
(

3920 c⁄° 
°id_t
& 
°id
,

3921 
πªe_°©s_t
& 
°©
,

3922 
uöt2_t
 
size
,

3923 
uöt2_t
* 
ovp
,

3924 
boﬁ
 
audô


3927 #ifde‡
OLDSORT_COMPATIBILITY


3929 
rc_t
 
_s‹t_fûe
(

3930 c⁄° 
°id_t
& 
fid
,

3931 
vid_t
 
vid
,

3932 
°id_t
& 
sfid
,

3933 
°‹e_¥›îty_t
 
¥›îty
,

3934 c⁄° 
key_öfo_t
& 
key_öfo
,

3935 
run_size
,

3936 
boﬁ
 
as˚ndög
,

3937 
boﬁ
 
unique
,

3938 
boﬁ
 
de°ru˘ive


3943 
rc_t
 
_s‹t_fûe
(

3944 c⁄° 
°id_t
& 
fid
,

3945 c⁄° 
°id_t
& 
s‹ãd_fid
,

3948 
nvids
,

3949 c⁄° 
vid_t
* 
vid
,

3950 
s‹t_keys_t
& 
kl
,

3951 
smsize_t
 
mö_ªc_sz
,

3952 
run_size
,

3953 
ãmp_•a˚


3957 #ifde‡
OLDSORT_COMPATIBILITY


3959 
rc_t
 
_√w_s‹t_fûe
(

3960 c⁄° 
°id_t
& 
ö_fid
,

3961 c⁄° 
°id_t
& 
out_fid
,

3962 c⁄° 
key_öfo_t
& 
ki
,

3963 
run_size
,

3964 
boﬁ
 
as˚ndög
,

3965 
boﬁ
 
unique
,

3966 
boﬁ
 
kìp_‹ig


3970 
°‹e_Êag_t
 
_make_°‹e_Êag
(
°‹e_¥›îty_t
 
¥›îty
);

3976 
rc_t
 
_gë_du_°©i°ics
(

3977 
vid_t
 
vid
,

3978 
sm_du_°©s_t
& 
du
,

3979 
boﬁ
 
audô
);

3981 
rc_t
 
_gë_du_°©i°ics
(

3982 c⁄° 
°id_t
 & 
°id
,

3983 
sm_du_°©s_t
& 
du
,

3984 
boﬁ
 
audô
);

3986 
rc_t
 
_gë_vﬁume_mëa_°©s
(

3987 
vid_t
 
vid
,

3988 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
,

3989 
c⁄cuºícy_t
 
cc
);

3991 
rc_t
 
_gë_fûe_mëa_°©s
(

3992 
vid_t
 
vid
,

3993 
w_ba£_t
::
uöt4_t
 
num_fûes
,

3994 
SmFûeMëaSèts
* 
fûe_°©s
,

3995 
boﬁ
 
b©ch_ˇlcuœã
,

3996 
c⁄cuºícy_t
 
cc
);

4004 ˛as†
	csm_°‹e_öfo_t
 {

4005 
	mpublic
:

4006 
NORET
 
	$sm_°‹e_öfo_t
(
Àn
) :

4007 
	`°‹e
(0), 
	`°y≥
(
ss_m
::
t_bad_°‹e_t
),

4008 
	`¡y≥
(
ss_m
::
t_bad_ndx_t
), 
	`cc
(ss_m::
t_cc_bad
),

4009 
	`eff
(0), 
	`œrge_°‹e
(0), 
	`roŸ
(0),

4010 
	`nkc
(0), 
	$keydes¸Àn
(
Àn
)

4011 { 
keydes¸
 = 
√w
 [
Àn
]; }

4013 
NORET
 ~
	$sm_°‹e_öfo_t
(Ë{ i‡(
keydes¸
Ë
dñëe
[] keydes¸; 
	}
}

4016 
¢um_t
 
	g°‹e
;

4018 
u_ch¨
 
	g°y≥
;

4020 
u_ch¨
 
	g¡y≥
;

4022 
u_ch¨
 
	gcc
;

4025 
u_ch¨
 
	geff
;

4028 
¢um_t
 
	gœrge_°‹e
;

4030 
shpid_t
 
	groŸ
;

4032 
	gw_ba£_t
::
uöt4_t
 
nkc
;

4034 
	gkeydes¸Àn
;

4042 *
	gkeydes¸
;

4046 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gvid_t
& 
	gv
);

4047 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gvid_t
& 
	gv
);

4048 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gextid_t
& 
	gx
);

4049 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	go
, 
	gextid_t
 &
	gx
);

4050 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	g°id_t
& 
	g°id
);

4051 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	g°id_t
& 
	g°id
);

4052 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gÕid_t
& 
	gpid
);

4053 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gÕid_t
& 
	gpid
);

4054 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gshrid_t
& 
	gr
);

4055 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gshrid_t
& 
	gr
);

4056 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	grid_t
& 
	grid
);

4057 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	grid_t
& 
	grid
);

4058 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsm_°©s_öfo_t
& 
	gs
);

4059 
	gãm∂©e
<
˛ass
 
	go°ªam
>

4060 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsm_c⁄fig_öfo_t
& 
	gs
)

4062 
	go
 << "Öage_sizê" << 
	gs
.
	g∑ge_size


4063 << " max_smÆl_ª¯" << 
	gs
.
	gmax_smÆl_ªc


4064 << "Üg_ªc_∑ge_•a˚ " << 
	gs
.
	glg_ªc_∑ge_•a˚


4065 << " buf„r_poﬁ_sizê" << 
	gs
.
	gbuf„r_poﬁ_size


4066 << " max_båì_íåy_sizê" << 
	gs
.
	gmax_båì_íåy_size


4067 << "Éxts_⁄_∑gê" << 
	gs
.
	gexts_⁄_∑ge


4068 << "Öages_≥r_exà" << 
	gs
.
	g∑ges_≥r_ext


4069 << " mu…i_thªaded_x˘ " << 
	gs
.
	gmu…i_thªaded_x˘


4070 << "Üoggög " << 
	gs
.
	gloggög


4072  
	go
;

4076 #i‚de‡
VEC_T_H


4077 
	~<vec_t.h
>

4080 #i‚de‡
SM_ESCALATION_H


4081 
	~<sm_esˇœti⁄.h
>

	@src/sm/sm_base.h

53 #i‚de‡
SM_BASE_H


54 
	#SM_BASE_H


	)

56 
	~"w_deföes.h
"

64 #ifde‡
__GNUG__


65 #¥agm®
öãrÁ˚


68 
	~<˛imôs
>

69 #i‚de‡
OPTION_H


70 
	~"›ti⁄.h
"

72 #i‚de‡
__›t_îr‹_def_gí_h__


73 
	~"›t_îr‹_def_gí.h
"

76 
	~<ve˘‹
>

78 
˛ass
 
	gEºLog
;

79 
˛ass
 
	gsm_°©s_öfo_t
;

80 
˛ass
 
	gx˘_t
;

81 
˛ass
 
	gx˘_i
;

83 
˛ass
 
	gdevi˚_m
;

84 
˛ass
 
	gio_m
;

85 
˛ass
 
	gbf_m
;

86 
˛ass
 
	gcomm_m
;

87 
˛ass
 
	glog_m
;

88 
˛ass
 
	glock_m
;

90 
˛ass
 
	gtid_t
;

91 
˛ass
 
	g›ti⁄_t
;

93 
˛ass
 
	g°id_t
;

94 
˛ass
 
	grid_t
;

96 #i‚de‡ 
SM_EXTENTSIZE


97 
	#SM_EXTENTSIZE
 8

	)

99 #i‚de‡ 
SM_LOG_PARTITIONS


100 
	#SM_LOG_PARTITIONS
 8

	)

103 
w_rc_t
 
	trc_t
;

125 #i‡
W_DEBUG_LEVEL
 > 0

126 
	#CHECK_NESTING_VARIABLES
 1

	)

128 
	#CHECK_NESTING_VARIABLES
 0

	)

130 
	scheck_com≥nßãd_›_√°ög
 {

131 #i‡
CHECK_NESTING_VARIABLES


132 
x˘_t
* 
	m_xd
;

133 
	m_dïth
;

134 
	m_dïth_of_acquúes
;

135 
	m_löe
;

136 c⁄° *c⁄° 
	m_fûe
;

139 
com≥nßãd_›_dïth
(
x˘_t
* 
xd
, 
dÊt
);

140 
acquúe_1thªad_log_dïth
(
x˘_t
* 
xd
, 
dÊt
);

142 
check_com≥nßãd_›_√°ög
(
x˘_t
* 
xd
, 
löe
, c⁄° *c⁄° 
fûe
)

143 : 
_xd
(
xd
),

144 
_dïth
(
_xd
? 
com≥nßãd_›_dïth
(_xd, 0) : 0),

145 
_dïth_of_acquúes
(
_xd
? 
acquúe_1thªad_log_dïth
(_xd, 0) : 0),

146 
_löe
(
löe
),

147 
_fûe
(
fûe
)

151 ~
check_com≥nßãd_›_√°ög
() {

152 if(
	m_xd
) {

153 if–
	m_dïth
 !
com≥nßãd_›_dïth
(
_xd
, 
_dïth
) ) {

154 
Ârötf
(
°dîr
,

156 
°hªad_t
::
me
()->
id
,

157 
_löe
, 
_fûe
, 
_dïth
, 
com≥nßãd_›_dïth
(
_xd
, _depth));

160 if(
	m_dïth_of_acquúes
 !
acquúe_1thªad_log_dïth
(
_xd
, 
_dïth
)) {

161 
Ârötf
(
°dîr
,

163 
°hªad_t
::
me
()->
id
,

164 
_löe
, 
_fûe
, 
_dïth_of_acquúes
,

165 
acquúe_1thªad_log_dïth
(
_xd
, 
_dïth
));

168 
w_as£π0
(
_dïth
 =
com≥nßãd_›_dïth
(
_xd
, _depth));

169 
w_as£π0
(
_dïth_of_acquúes
 =
acquúe_1thªad_log_dïth
(
_xd
, 
_dïth
));

173 
check_com≥nßãd_›_√°ög
(
x˘_t
*, , const *const) { }

182 ˛as†
	csmÀvñ_0
 : 
public
 
w_ba£_t
 {

183 
public
:

184 íum { 
eNOERROR
 = 0, 
	meFAILURE
 = -1 };

186 
	g∑ge_sz
 = 
SM_PAGESIZE
,

187 
	gext_sz
 = 
SM_EXTENTSIZE
,

188 
	gmax_exts
 = 
max_öt4
,

189 #i‡
deföed
(
_POSIX_PATH_MAX
)

190 
	gmax_dev«me
 = 
_POSIX_PATH_MAX
,

194 #ñi‡
deföed
(
MAXPATHLEN
)

195 
	gmax_dev«me
 = 
MAXPATHLEN
,

197 
	gmax_dev«me
 = 1024,

199 
	gmax_vﬁs
 = 20,

200 
	gmax_x˘_thªad
 = 20,

201 
	gmax_£rvîs
 = 15,

202 
	gmax_keycomp
 = 20,

203 
	gmax_›ílog
 = 
SM_LOG_PARTITIONS
,

204 
	gmax_dú_ˇche
 = 
max_vﬁs
 * 10,

209 
	gmax_m™y_∑ges
 = 8,

211 
	g§vid_m≠_sz
 = (
max_£rvîs
 - 1) / 8 + 1,

212 
	gext_m≠_sz_ö_byãs
 = ((
ext_sz
 + 7) / 8),

214 
	gdummy
 = 0

218 
	gmax_ªc_Àn
 = 
max_uöt4


221 
	g°hªad_ba£_t
::
	tfûeoff_t
 fileoff_t;

227 
	g°hªad_t
::
	tfûeoff_t
 
	tsmksize_t
;

228 
	gw_ba£_t
::
	tba£_°©_t
 base_stat_t;

277 
	$w_rc_t
 (*
	tLOG_WARN_CALLBACK_FUNC
) (

278 
	tx˘_i
* 
	tôî
,

279 
	tx˘_t
 *& 
	tvi˘im
,

280 
	tfûeoff_t
 
	tcuº
,

281 
	tfûeoff_t
 
	tthªsh
,

282 c⁄° *
	tlogfûe


307 
w_ba£_t
::
	tuöt4_t
 
	t∑πôi⁄_numbî_t
;

308 
	$w_rc_t
 (*
	tLOG_ARCHIVED_CALLBACK_FUNC
) (

309 c⁄° *
	t‚ame
,

310 
	t∑πôi⁄_numbî_t
 
	tnum


313 
	$w_rc_t
 (*
	tRELOCATE_RECORD_CALLBACK_FUNC
) (

314 
	tve˘‹
<
	trid_t
>& 
	tﬁd_rids
,

315 
	tve˘‹
<
	trid_t
>& 
	t√w_rids


319 
	eswôch_t
 {

320 
ON
 = 1,

321 
OFF
 = 0

322 
	}
};

329 
	ecmp_t
 { 
	gbad_cmp_t
=
badOp
, 
	geq
=
eqOp
,

330 
	ggt
=
gtOp
, 
	gge
=
geOp
, 
	g…
=
…Op
, 
	gÀ
=
ÀOp
 };

334 
	eesˇœti⁄_›ti⁄s
 {

335 
	gd⁄tEsˇœã
 = 
max_öt4_möus1
,

336 
	gd⁄tEsˇœãD⁄tPassOn
,

337 
	gd⁄tModifyThªshﬁd
 = -1

343 
	e°‹e_t
 {

344 
	gt_bad_°‹e_t
,

346 
	gt_ödex
,

348 
	gt_fûe
,

351 
	gt_lgªc


357 
	endx_t
 {

358 
	gt_bad_ndx_t
,

359 
	gt_båì
,

360 
	gt_uni_båì
,

361 
	gt_πªe
,

362 
	gt_mrbåì
,

363 
	gt_uni_mrbåì
,

364 
	gt_mrbåì_l
,

365 
	gt_uni_mrbåì_l
,

366 
	gt_mrbåì_p
,

367 
	gt_uni_mrbåì_p


385 
	ec⁄cuºícy_t
 {

386 
	gt_cc_bad
,

387 
	gt_cc_n⁄e
,

388 
	gt_cc_ªc‹d
,

389 
	gt_cc_∑ge
,

390 
	gt_cc_fûe
,

391 
	gt_cc_vﬁ
,

392 
	gt_cc_kvl
,

393 
	gt_cc_im
,

394 
	gt_cc_modkvl
,

395 
	gt_cc_≠≥nd


405 
	e›î©ög_mode_t
 {

406 
	gt_nŸ_°¨ãd
 = 0,

407 
	gt_ö_™Æysis
 = 0x1,

408 
	gt_ö_ªdo
 = 0x2,

409 
	gt_ö_undo
 = 0x4,

410 
	gt_f‹w¨d_¥o˚ssög
 = 0x8

413 
c⁄cuºícy_t
 
	gcc_Æg
;

414 
boﬁ
 
	gcc_ad≠tive
;

416 
	~"e_îr‹_íum_gí.h
"

418 c⁄° 
w_îr‹_öfo_t
 
	gîr‹_öfo
[];

419 
öô_îr‹codes
();

421 
add_to_globÆ_°©s
(c⁄° 
sm_°©s_öfo_t
 &
‰om
);

422 
add_‰om_globÆ_°©s
(
sm_°©s_öfo_t
 &
to
);

424 
devi˚_m
* 
	gdev
;

425 
io_m
* 
	gio
;

426 
bf_m
* 
	gbf
;

427 
lock_m
* 
	glm
;

429 
log_m
* 
	glog
;

430 
tid_t
* 
	gªdo_tid
;

432 
LOG_WARN_CALLBACK_FUNC
 
	glog_w¨n_ˇŒback
;

433 
LOG_ARCHIVED_CALLBACK_FUNC
 
	glog_¨chived_ˇŒback
;

434 
fûeoff_t
 
	glog_w¨n_åiggî
;

435 
	glog_w¨n_ex˚ed_≥r˚¡
;

437 
	gdcommô_timeout
;

440 
EºLog
* 
	gîæog
;

442 
boﬁ
 
	gshutdown_˛ón
;

443 
boﬁ
 
	gshuâög_down
;

444 
boﬁ
 
	gloggög_íabÀd
;

445 
boﬁ
 
	gdo_¥e„tch
;

447 
›î©ög_mode_t
 
	g›î©ög_mode
;

448 
boﬁ
 
	$ö_ªcovîy
() {

449  ((
›î©ög_mode
 &

450 (
t_ö_ªdo
 | 
t_ö_undo
 | 
t_ö_™Æysis
)Ë!=0); 
	}
}

451 
boﬁ
 
	$ö_ªcovîy_™Æysis
() {

452  ((
›î©ög_mode
 & 
t_ö_™Æysis
Ë!=0); 
	}
}

453 
boﬁ
 
	$ö_ªcovîy_undo
() {

454  ((
›î©ög_mode
 & 
t_ö_undo
 ) !=0); 
	}
}

455 
boﬁ
 
	$ö_ªcovîy_ªdo
() {

456  ((
›î©ög_mode
 & 
t_ö_ªdo
 ) !=0); 
	}
}

459 
	gw_ba£_t
::
öt4_t
 
deÁu…LockEsˇœãToPageThªshﬁd
;

460 
	gw_ba£_t
::
öt4_t
 
deÁu…LockEsˇœãToSt‹eThªshﬁd
;

461 
	gw_ba£_t
::
öt4_t
 
deÁu…LockEsˇœãToVﬁumeThªshﬁd
;

464 
fûeoff_t
 
	gmax_logsz
;

469 
fûeoff_t
 
	gchk±_di•œ˚mít
;

476 
	gw_ba£_t
::
uöt4_t
 
vﬁume_f‹m©_vîsi⁄
;

480 
	gzîo_∑ge
[
∑ge_sz
];

483 
›ti⁄_t
* 
	g_backgroundÊush
;

493 
	g°‹e_id_exã¡m≠
 = 0,

494 
	g°‹e_id_dúe˘‹y
 = 1,

495 
	g°‹e_id_roŸ_ödex
 = 2

503 
	geINTERNAL
 = 
fcINTERNAL
,

504 
	geOS
 = 
fcOS
,

505 
	geOUTOFMEMORY
 = 
fcOUTOFMEMORY
,

506 
	geNOTFOUND
 = 
fcNOTFOUND
,

507 
	geNOTIMPLEMENTED
 = 
fcNOTIMPLEMENTED


510 
	e°‹e_Êag_t
 {

513 
	g°_bad
 = 0x0,

514 
	g°_ªguœr
 = 0x01,

515 
	g°_tmp
 = 0x02,

517 
	g°_lﬂd_fûe
 = 0x04,

522 
	g°_ö£π_fûe
 = 0x08,

524 
	g°_em±y
 = 0x100

536 
	e°‹e_›î©i⁄_t
 {

537 
	gt_dñëe_°‹e
,

538 
	gt_¸óã_°‹e
,

539 
	gt_£t_dñëög
,

540 
	gt_£t_°‹e_Êags
,

541 
	gt_£t_fú°_ext
};

543 
	e°‹e_dñëög_t
 {

544 
	gt_nŸ_dñëög_°‹e
,

545 
	gt_dñëög_°‹e
,

546 
	gt_°‹e_‰ìög_exts
,

547 
	gt_unknown_dñëög
};

550 #i‡
SM_PLP_TRACING


551 
uöt
 
	g_±ø˚_Àvñ
;

552 
mcs_lock
 
	g_±ø˚_lock
;

553 
of°ªam
 
	g_±ø˚_out
;

554 
	e∂p_åacög_Àvñ_t
 {

555 
	gPLP_TRACE_NONE
 = 0x0,

556 
	gPLP_TRACE_PAGE
 = 0x01,

557 
	gPLP_TRACE_CS
 = 0x02

564 
	go°ªam
&

565 
	g›î©‹
<<(
	go°ªam
& 
	go
, 
	gsmÀvñ_0
::
°‹e_Êag_t
 
Êag
);

567 
	go°ªam
&

568 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gsmÀvñ_0
::
°‹e_›î©i⁄_t
 
›
);

570 
	go°ªam
&

571 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gsmÀvñ_0
::
°‹e_dñëög_t
 
vÆue
);

	@src/sm/sm_du_stats.cpp

30 
	~"w_deföes.h
"

34 
	#SM_DU_STATS_C


	)

36 #ifde‡
__GNUG__


37 #¥agm®
im∂emíèti⁄


40 
	~<w.h
>

41 
	~<c°rög
>

42 
	~<w_°ªam.h
>

43 
	~<w_debug.h
>

44 
	~<w_li°.h
>

45 
	~<w_mömax.h
>

46 
	#SM_SOURCE


	)

47 
	~<basics.h
>

48 
	~"lid_t.h
"

49 
	~"sm_s.h
"

50 
	~"sm_öt_1.h
"

51 
	~"sm_du_°©s.h
"

53 #i‡
W_DEBUG_LEVEL
>=0

54 
	#DEBUG_GNATS_77
 1

	)

61 
w_rc_t


62 
°©s_audô_Áûed
(

63 #i‡
DEBUG_GNATS_77


64 
löe


68 #i‡
DEBUG_GNATS_77


69 
	g˚º
 << "°©†audô faûedáàlöê" << 
	glöe


70 << " o‡fûê" 
	g__FILE__
 << 
	gídl
;

71 
w_as£π1
(0);

73  
RC
(
smÀvñ_0
::
eDUAUDITFAILED
);

77 
	gfûe_pg_°©s_t
::
	$˛ór
()

79 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

80 
uöt
 
i
 = 0; i < (*
this
)/(
ba£_°©_t
); i++) {

81 ((
ba£_°©_t
*)
this
)[
i
] = 0;

83 
	}
}

86 
	gfûe_pg_°©s_t
::
	$add
(c⁄° 
fûe_pg_°©s_t
& 
°©s
)

88 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

89 
uöt
 
i
 = 0; i < (*
this
)/(
hdr_bs
); i++) {

90 ((
ba£_°©_t
*)
this
)[
i
] +((ba£_°©_t*)&
°©s
)[i];

92 
	}
}

94 
w_rc_t


95 
	gfûe_pg_°©s_t
::
	$audô
() const

97 
	`FUNC
(
fûe_pg_°©s_t
::
audô
);

98 
rc_t
 
ªsu…
;

101 i‡(
	`tŸÆ_byãs
(Ë% 
smÀvñ_0
::
∑ge_sz
 != 0) {

102 
	`DBG
(

103 << " fûe_pg_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

104 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

106 #i‡
DEBUG_GNATS_77


107 
˚º
 << " fûe_pg_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

108 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
Ë<< 
ídl
;

110 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

114 i‡(
lg_ªc_˙t
) {

115 i‡(
ªc_lg_chunk_bs
 + 
ªc_lg_ödúe˘_bs
 == 0) {

116 
	`DBG
–<< "Üg_ªc_˙t" << 
lg_ªc_˙t
);

117 
	`DBG
–<< "Ñec_lg_chunk_bs" << 
ªc_lg_chunk_bs
);

118 
	`DBG
–<< "Ñec_lg_ödúe˘_bs" << 
ªc_lg_ödúe˘_bs
);

119 if(
ªsu…
.
	`is_îr‹
()) {}

120 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

123 
	`DBG
(<<"file_pg_stats_táudit ok");

124  
ªsu…
;

125 
	}
}

127 
ba£_°©_t


128 
	gfûe_pg_°©s_t
::
	$tŸÆ_byãs
() const

130 
ba£_°©_t
 
tŸÆ
 = 0;

131 
tŸÆ
 +
hdr_bs
;

132 
tŸÆ
 +
¶Ÿs_u£d_bs
;

133 
tŸÆ
 +
¶Ÿs_unu£d_bs
;

134 
tŸÆ
 +
ªc_èg_bs
;

135 
tŸÆ
 +
ªc_hdr_bs
;

136 
tŸÆ
 +
ªc_hdr_Æign_bs
;

137 
tŸÆ
 +
ªc_body_bs
;

138 
tŸÆ
 +
ªc_body_Æign_bs
;

139 
tŸÆ
 +
ªc_lg_chunk_bs
;

140 
tŸÆ
 +
ªc_lg_ödúe˘_bs
;

141 
tŸÆ
 +
‰ì_bs
;

142  
tŸÆ
;

143 
	}
}

146 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gfûe_pg_°©s_t
& 
	gs
)

167 
	gs
.
¥öt
(
o
, "");

168  
	go
;

171 
	gfûe_pg_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

173 c⁄° 
fûe_pg_°©s_t
 &
s
 = *
this
;

174 
o


175 << 
pfx
 << "hdr_b†" << 
s
.
hdr_bs
 << 
ídl


176 << 
pfx
 << "¶Ÿs_u£d_b†" << 
s
.
¶Ÿs_u£d_bs
 << 
ídl


177 << 
pfx
 << "¶Ÿs_unu£d_b†" << 
s
.
¶Ÿs_unu£d_bs
 << 
ídl


178 << 
pfx
 << "ªc_èg_b†" << 
s
.
ªc_èg_bs
 << 
ídl


179 << 
pfx
 << "ªc_hdr_b†" << 
s
.
ªc_hdr_bs
 << 
ídl


180 << 
pfx
 << "ªc_hdr_Æign_b†" << 
s
.
ªc_hdr_Æign_bs
 << 
ídl


181 << 
pfx
 << "ªc_body_b†" << 
s
.
ªc_body_bs
 << 
ídl


182 << 
pfx
 << "ªc_body_Æign_b†" << 
s
.
ªc_body_Æign_bs
 << 
ídl


184 << 
pfx
 << "ªc_lg_chunk_b†" << 
s
.
ªc_lg_chunk_bs
 << 
ídl


185 << 
pfx
 << "ªc_lg_ödúe˘_b†" << 
s
.
ªc_lg_ödúe˘_bs
 << 
ídl


186 << 
pfx
 << "‰ì_b†" << 
s
.
‰ì_bs
 << 
ídl


188 << 
pfx
 << "smÆl_ªc_˙à" << 
s
.
smÆl_ªc_˙t
 << 
ídl


189 << 
pfx
 << "lg_ªc_˙à" << 
s
.
lg_ªc_˙t
 << 
ídl


191 
	}
}

197 
	glgd©a_pg_°©s_t
::
	$˛ór
()

199 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

200 
uöt
 
i
 = 0; i < (*
this
)/(
hdr_bs
); i++) {

201 ((
ba£_°©_t
*)
this
)[
i
] = 0;

203 
	}
}

206 
	glgd©a_pg_°©s_t
::
	$add
(c⁄° 
lgd©a_pg_°©s_t
& 
°©s
)

208 
	`w_as£π3
((*
this
Ë% (
hdr_bs
) == 0);

209 
uöt
 
i
 = 0; i < (*
this
)/(
hdr_bs
); i++) {

210 ((
ba£_°©_t
*)
this
)[
i
] +((ba£_°©_t*)&
°©s
)[i];

212 
	}
}

214 
w_rc_t


215 
	glgd©a_pg_°©s_t
::
	$audô
() const

218 
	`FUNC
(
lgd©a_pg_°©s_t
::
audô
);

219 
w_rc_t
 
ªsu…
;

220 i‡(
	`tŸÆ_byãs
(Ë% 
smÀvñ_0
::
∑ge_sz
 != 0) {

221 
	`DBG
(

222 << "Ügd©a_pg_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

223 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

225 if(
ªsu…
.
	`is_îr‹
()) {}

226 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

228 
	`DBG
(<<"lgdata_pg_stats_táudit ok");

229  
ªsu…
;

230 
	}
}

232 
ba£_°©_t


233 
	glgd©a_pg_°©s_t
::
	$tŸÆ_byãs
() const

235  
hdr_bs
 + 
d©a_bs
 + 
unu£d_bs
;

236 
	}
}

239 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glgd©a_pg_°©s_t
& 
	gs
)

248 
	gs
.
¥öt
(
o
, "");

249  
	go
;

252 
	glgd©a_pg_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

254 c⁄° 
lgd©a_pg_°©s_t
 &
s
 = *
this
;

255 
o


256 << 
pfx
 << "hdr_b†" << 
s
.
hdr_bs
 << 
ídl


257 << 
pfx
 << "d©a_b†" << 
s
.
d©a_bs
 << 
ídl


258 << 
pfx
 << "unu£d_b†" << 
s
.
unu£d_bs
 << 
ídl


260 
	}
}

263 
	glgödex_pg_°©s_t
::
	$˛ór
()

265 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

266 
uöt
 
i
 = 0; i < (*
this
)/(
ba£_°©_t
); i++) {

267 ((
ba£_°©_t
*)
this
)[
i
] = 0;

269 
	}
}

272 
	glgödex_pg_°©s_t
::
	$add
(c⁄° 
lgödex_pg_°©s_t
& 
°©s
)

274 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

275 
uöt
 
i
 = 0; i < (*
this
)/(
u£d_bs
); i++) {

276 ((
ba£_°©_t
*)
this
)[
i
] +((ba£_°©_t*)&
°©s
)[i];

278 
	}
}

280 
w_rc_t


281 
	glgödex_pg_°©s_t
::
	$audô
() const

284 
	`FUNC
(
lgödex_pg_°©s_t
::
audô
);

285 
w_rc_t
 
ªsu…
;

286 i‡(
	`tŸÆ_byãs
(Ë% 
smÀvñ_0
::
∑ge_sz
 != 0) {

287 
	`DBG
(

288 << "Ügödex_pg_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

289 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

291 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

293 
	`DBG
(<<"lgindex_pg_stats_táudit ok");

294  
ªsu…
;

295 
	}
}

297 
ba£_°©_t


298 
	glgödex_pg_°©s_t
::
	$tŸÆ_byãs
() const

300  
u£d_bs
 + 
unu£d_bs
;

301 
	}
}

303 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	glgödex_pg_°©s_t
& 
	gs
)

311 
	gs
.
¥öt
(
o
, "");

312  
	go
;

315 
	glgödex_pg_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

317 c⁄° 
lgödex_pg_°©s_t
 &
s
 = *
this
;

318 
o


319 << 
pfx
 << "u£d_b†" << 
s
.
u£d_bs
 << 
ídl


320 << 
pfx
 << "unu£d_b†" << 
s
.
unu£d_bs
 << 
ídl


322 
	}
}

326 
	gfûe_°©s_t
::
	$˛ór
()

328 
fûe_pg
.
	`˛ór
();

329 
lgd©a_pg
.
	`˛ór
();

330 
lgödex_pg
.
	`˛ór
();

332 
fûe_pg_˙t
 = 0;

333 
lgd©a_pg_˙t
 = 0;

334 
lgödex_pg_˙t
 = 0;

335 
u«Œoc_fûe_pg_˙t
 = 0;

336 
u«Œoc_œrge_pg_˙t
 = 0;

337 
	}
}

340 
	gfûe_°©s_t
::
	$add
(c⁄° 
fûe_°©s_t
& 
°©s
)

342 
fûe_pg
.
	`add
(
°©s
.file_pg);

343 
lgd©a_pg
.
	`add
(
°©s
.lgdata_pg);

344 
lgödex_pg
.
	`add
(
°©s
.lgindex_pg);

346 
fûe_pg_˙t
 +
°©s
.file_pg_cnt;

347 
lgd©a_pg_˙t
 +
°©s
.lgdata_pg_cnt;

348 
lgödex_pg_˙t
 +
°©s
.lgindex_pg_cnt;

349 
u«Œoc_fûe_pg_˙t
 +
°©s
.unalloc_file_pg_cnt;

350 
u«Œoc_œrge_pg_˙t
 +
°©s
.unalloc_large_pg_cnt;

351 
	}
}

353 
w_rc_t


354 
	gfûe_°©s_t
::
	$audô
() const

356 
	`FUNC
(
fûe_°©s_t
::
audô
);

358 
	`W_DO
(
fûe_pg
.
	`audô
());

359 
	`W_DO
(
lgd©a_pg
.
	`audô
());

360 
	`W_DO
(
lgödex_pg
.
	`audô
());

362 
ba£_°©_t
 
tŸÆ_Æloc_pgs
 = 
	`Æloc_pg_˙t
();

364 
w_rc_t
 
ªsu…
;

365 i‡(
tŸÆ_Æloc_pgs
*
smÀvñ_0
::
∑ge_sz
 !
	`tŸÆ_byãs
()) {

366 
	`DBG
(

367 << "ÅŸÆ_Æloc_pgs" << 
tŸÆ_Æloc_pgs


368 << " fûe_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

369 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

371 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

373 i‡–(
tŸÆ_Æloc_pgs
 + 
u«Œoc_fûe_pg_˙t
 + 
u«Œoc_œrge_pg_˙t
Ë% 
smÀvñ_0
::
ext_sz
 != 0) {

374 
	`DBG
(

375 << "ÅŸÆ_Æloc_pgs" << 
tŸÆ_Æloc_pgs


376 << " u«Œoc_fûe_pg_˙t" << 
u«Œoc_fûe_pg_˙t


377 << " u«Œoc_œrge_pg_˙t" << 
u«Œoc_œrge_pg_˙t


378 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

380 #i‡
DEBUG_GNATS_77


381 
˚º


382 << "ÅŸÆ_Æloc_pgs" << 
tŸÆ_Æloc_pgs


383 << " u«Œoc_fûe_pg_˙t" << 
u«Œoc_fûe_pg_˙t


384 << " u«Œoc_œrge_pg_˙t" << 
u«Œoc_œrge_pg_˙t


385 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

386 << 
ídl
;

388 if(
ªsu…
.
	`is_îr‹
()) {}

389 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

390 if(
ªsu…
.
	`is_îr‹
()) {}

392 
	`DBG
(<<"file_stats_táudit ok");

393  
ªsu…
;

394 
	}
}

396 
ba£_°©_t


397 
	gfûe_°©s_t
::
	$tŸÆ_byãs
() const

399  
fûe_pg
.
	`tŸÆ_byãs
(Ë+ 
lgd©a_pg
.total_bytes() +

400 
lgödex_pg
.
	`tŸÆ_byãs
();

401 
	}
}

403 
ba£_°©_t


404 
	gfûe_°©s_t
::
	$Æloc_pg_˙t
() const

406  
fûe_pg_˙t
 + 
lgd©a_pg_˙t
 + 
lgödex_pg_˙t
;

407 
	}
}

410 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gfûe_°©s_t
& 
	gs
)

422 
	gs
.
¥öt
(
o
,"");

423  
	go
;

426 
	gfûe_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

428 c⁄° 
fûe_°©s_t
 &
s
 = *
this
;

430 
pfxÀn
 = 
	`°æí
(
pfx
);

431 *
pfx1
 = 
√w
 [
	`°æí
(
pfx
) + 30];

432 
	`mem˝y
(
pfx1
, 
pfx
, 
pfxÀn
);

433 
	`mem˝y
(
pfx1
+
pfxÀn
, "fipg.", 6);

434 
s
.
fûe_pg
.
	`¥öt
(
o
,
pfx1
);

436 
	`mem˝y
(
pfx1
+
pfxÀn
, "lgpg.", 6);

437 
s
.
lgd©a_pg
.
	`¥öt
(
o
,
pfx1
);

439 
	`mem˝y
(
pfx1
+
pfxÀn
, "lgix.", 6);

440 
s
.
lgödex_pg
.
	`¥öt
(
o
,
pfx1
);

441 
dñëe
[] 
pfx1
;

443 
o


444 << 
pfx
<< "fûe_pg_˙à" << 
s
.
fûe_pg_˙t
 << 
ídl


445 << 
pfx
<< "lgd©a_pg_˙à" << 
s
.
lgd©a_pg_˙t
 << 
ídl


446 << 
pfx
<< "lgödex_pg_˙à" << 
s
.
lgödex_pg_˙t
 << 
ídl


447 << 
pfx
<< "u«Œoc_fûe_pg_˙à" << 
s
.
u«Œoc_fûe_pg_˙t
 << 
ídl


448 << 
pfx
<< "u«Œoc_œrge_pg_˙à" << 
s
.
u«Œoc_œrge_pg_˙t
 << 
ídl


450 
	}
}

455 
	gbåì_lf_°©s_t
::
	$˛ór
()

457 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

458 
uöt
 
i
 = 0; i < (*
this
)/(
ba£_°©_t
); i++) {

459 ((
ba£_°©_t
*)
this
)[
i
] = 0;

461 
	}
}

464 
	gbåì_lf_°©s_t
::
	$add
(c⁄° 
båì_lf_°©s_t
& 
°©s
)

466 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

467 
uöt
 
i
 = 0; i < (*
this
)/(
hdr_bs
); i++) {

468 ((
ba£_°©_t
*)
this
)[
i
] +((ba£_°©_t*)&
°©s
)[i];

470 
	}
}

472 
w_rc_t


473 
	gbåì_lf_°©s_t
::
	$audô
() const

475 
	`FUNC
(
båì_lf_°©s_t
::
audô
);

476 
w_rc_t
 
ªsu…
;

477 i‡(
	`tŸÆ_byãs
(Ë% 
smÀvñ_0
::
∑ge_sz
 != 0) {

478 
	`DBG
(

479 << " båì_lf_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

480 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

482 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

484 
	`DBG
(<<"btree_lf_stats_táudit ok");

485  
ªsu…
;

486 
	}
}

488 
ba£_°©_t


489 
	gbåì_lf_°©s_t
::
	$tŸÆ_byãs
() const

491  
hdr_bs
 + 
key_bs
 + 
d©a_bs
 + 
íåy_ovîhód_bs
 + 
unu£d_bs
;

492 
	}
}

495 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gbåì_lf_°©s_t
& 
	gs
)

509 
	gs
.
¥öt
(
o
,"");

510  
	go
;

513 
	gbåì_lf_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

515 c⁄° 
båì_lf_°©s_t
 &
s
 = *
this
;

516 
o


517 << 
pfx
 << "hdr_b†" << 
s
.
hdr_bs
 << 
ídl


518 << 
pfx
 << "key_b†" << 
s
.
key_bs
 << 
ídl


519 << 
pfx
 << "d©a_b†" << 
s
.
d©a_bs
 << 
ídl


520 << 
pfx
 << "íåy_ovîhód_b†" << 
s
.
íåy_ovîhód_bs
 << 
ídl


521 << 
pfx
 << "unu£d_b†" << 
s
.
unu£d_bs
 << 
ídl


522 << 
pfx
 << "íåy_˙à" << 
s
.
íåy_˙t
 << 
ídl


523 << 
pfx
 << "unique_˙à" << 
s
.
unique_˙t
 << 
ídl


525 
	}
}

529 
	gbåì_öt_°©s_t
::
	$˛ór
()

531 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

532 
uöt
 
i
 = 0; i < (*
this
)/(
ba£_°©_t
); i++) {

533 ((
ba£_°©_t
*)
this
)[
i
] = 0;

535 
	}
}

538 
	gbåì_öt_°©s_t
::
	$add
(c⁄° 
båì_öt_°©s_t
& 
°©s
)

540 
	`w_as£π3
((*
this
Ë% (
ba£_°©_t
) == 0);

541 
uöt
 
i
 = 0; i < (*
this
)/(
ba£_°©_t
); i++) {

542 ((
ba£_°©_t
*)
this
)[
i
] +((ba£_°©_t*)&
°©s
)[i];

544 
	}
}

546 
w_rc_t


547 
	gbåì_öt_°©s_t
::
	$audô
() const

549 
	`FUNC
(
båì_öt_°©s_t
::
audô
);

550 
w_rc_t
 
ªsu…
;

551 i‡(
	`tŸÆ_byãs
(Ë% 
smÀvñ_0
::
∑ge_sz
 != 0) {

552 
	`DBG
(

553 << " båì_öt_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

554 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

556 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

558 
	`DBG
(<<"btree_int_stats_táudit ok");

559  
ªsu…
;

560 
	}
}

562 
ba£_°©_t


563 
	gbåì_öt_°©s_t
::
	$tŸÆ_byãs
() const

565  
u£d_bs
 + 
unu£d_bs
;

566 
	}
}

569 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gbåì_öt_°©s_t
& 
	gs
)

577 
	gs
.
¥öt
(
o
,"");

578  
	go
;

581 
	gbåì_öt_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

583 c⁄° 
båì_öt_°©s_t
 &
s
 = *
this
;

584 
o


585 << 
pfx
 << "u£d_b†" << 
s
.
u£d_bs
 << 
ídl


586 << 
pfx
 << "unu£d_b†" << 
s
.
unu£d_bs
 << 
ídl


588 
	}
}

592 
	gbåì_°©s_t
::
	$˛ór
()

594 
Àaf_pg
.
	`˛ór
();

595 
öt_pg
.
	`˛ór
();

597 
Àaf_pg_˙t
 = 0;

598 
öt_pg_˙t
 = 0;

599 
u∆ök_pg_˙t
 = 0;

600 
u«Œoc_pg_˙t
 = 0;

601 
Àvñ_˙t
 = 0;

602 
	}
}

605 
	gbåì_°©s_t
::
	$add
(c⁄° 
båì_°©s_t
& 
°©s
)

607 
Àaf_pg
.
	`add
(
°©s
.leaf_pg);

608 
öt_pg
.
	`add
(
°©s
.int_pg);

610 
Àaf_pg_˙t
 +
°©s
.leaf_pg_cnt;

611 
öt_pg_˙t
 +
°©s
.int_pg_cnt;

612 
u∆ök_pg_˙t
 +
°©s
.unlink_pg_cnt;

613 
u«Œoc_pg_˙t
 +
°©s
.unalloc_pg_cnt;

614 
Àvñ_˙t
 = 
	`MAX
÷evñ_˙t, 
°©s
.level_cnt);

615 
	}
}

617 
w_rc_t


618 
	gbåì_°©s_t
::
	$audô
() const

620 
	`FUNC
(
båì_°©s_t
::
audô
);

622 
	`W_DO
(
Àaf_pg
.
	`audô
());

623 
	`W_DO
(
öt_pg
.
	`audô
());

625 
w_rc_t
 
ªsu…
;

626 
ba£_°©_t
 
tŸÆ_Æloc_pgs
 = 
	`Æloc_pg_˙t
();

629 i‡(
tŸÆ_Æloc_pgs
*
smÀvñ_0
::
∑ge_sz
 !
	`tŸÆ_byãs
()) {

630 
	`DBG
(

631 << "Üóf_pg_˙t" << 
Àaf_pg_˙t


632 << " i¡_pg_˙t" << 
öt_pg_˙t


633 << " båì_°©s_t::tŸÆ_byãs" << 
	`tŸÆ_byãs
()

634 << " smÀvñ_0::∑ge_sz" << (
smÀvñ_0
::
∑ge_sz
)

636 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

640 i‡–(
tŸÆ_Æloc_pgs
 + 
u∆ök_pg_˙t
 + 
u«Œoc_pg_˙t
) %

641 
smÀvñ_0
::
ext_sz
 != 0) {

642 
	`DBG
(

643 << "Üóf_pg_˙t" << 
Àaf_pg_˙t


644 << " i¡_pg_˙t" << 
öt_pg_˙t


645 << " u∆ök_pg_˙t" << 
u∆ök_pg_˙t


646 << " u«Œoc_pg_˙t" << 
u«Œoc_pg_˙t


647 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

649 if(
ªsu…
.
	`is_îr‹
()) {}

650 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

653 i‡–
u∆ök_pg_˙t
 > 0) {

656 if(
ªsu…
.
	`is_îr‹
()) {}

657 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

659 
	`DBG
(<<"btree_stats_táudit ok");

660  
ªsu…
;

661 
	}
}

663 
ba£_°©_t


664 
	gbåì_°©s_t
::
	$tŸÆ_byãs
() const

666  
Àaf_pg
.
	`tŸÆ_byãs
(Ë+ 
öt_pg
.total_bytes();

667 
	}
}

669 
ba£_°©_t


670 
	gbåì_°©s_t
::
	$Æloc_pg_˙t
() const

672  
Àaf_pg_˙t
 + 
öt_pg_˙t
;

673 
	}
}

676 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gbåì_°©s_t
& 
	gs
)

687 
	gs
.
¥öt
(
o
,"");

688  
	go
;

691 
	gbåì_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

693 c⁄° 
båì_°©s_t
 &
s
 = *
this
;

694 
pfxÀn
 = 
	`°æí
(
pfx
);

695 *
pfx1
 = 
√w
 [
	`°æí
(
pfx
) + 30];

696 
	`mem˝y
(
pfx1
, 
pfx
, 
pfxÀn
);

697 
	`mem˝y
(
pfx1
+
pfxÀn
, "lfpg.", 6);

698 
s
.
Àaf_pg
.
	`¥öt
(
o
,
pfx1
);

700 
	`mem˝y
(
pfx1
+
pfxÀn
, "inpg.", 6);

701 
s
.
öt_pg
.
	`¥öt
(
o
,
pfx1
);

702 
dñëe
[] 
pfx1
;

704 
o


705 << 
pfx
 << "Àaf_pg_˙à" << 
s
.
Àaf_pg_˙t
 << 
ídl


706 << 
pfx
 << "öt_pg_˙à" << 
s
.
öt_pg_˙t
 << 
ídl


707 << 
pfx
 << "u∆ök_pg_˙à" << 
s
.
u∆ök_pg_˙t
 << 
ídl


708 << 
pfx
 << "u«Œoc_pg_˙à" << 
s
.
u«Œoc_pg_˙t
 << 
ídl


709 << 
pfx
 << "Àvñ_˙à" << 
s
.
Àvñ_˙t
 << 
ídl


711 
	}
}

715 
	gπªe_°©s_t
::
	$˛ór
()

717 
íåy_˙t
 = 0;

718 
unique_˙t
 = 0;

719 
Àaf_pg_˙t
 = 0;

720 
öt_pg_˙t
 = 0;

721 
u«Œoc_pg_˙t
 = 0;

722 
fûl_≥r˚¡
 = 0;

723 
Àvñ_˙t
 = 0;

724 
	}
}

727 
	gπªe_°©s_t
::
	$add
(c⁄° 
πªe_°©s_t
& 
°©s
)

729 
íåy_˙t
 +
°©s
.entry_cnt;

730 
unique_˙t
 +
°©s
.unique_cnt;

731 
Àaf_pg_˙t
 +
°©s
.leaf_pg_cnt;

732 
öt_pg_˙t
 +
°©s
.int_pg_cnt;

733 
u«Œoc_pg_˙t
 +
°©s
.unalloc_pg_cnt;

735 
fûl_≥r˚¡
 = 
	`MAX
(fûl_≥r˚¡, 
°©s
.fill_percent);

736 
Àvñ_˙t
 = 
	`MAX
÷evñ_˙t, 
°©s
.level_cnt);

737 
	}
}

739 
w_rc_t


740 
	gπªe_°©s_t
::
	$audô
() const

742 
	`FUNC
(
πªe_°©s_t
::
audô
);

743 
w_rc_t
 
ªsu…
;

744 i‡–(
Àaf_pg_˙t
 + 
öt_pg_˙t
 + 
u«Œoc_pg_˙t
Ë% 
smÀvñ_0
::
ext_sz
 != 0) {

745 
	`DBG
(

746 << "Üóf_pg_˙t" << 
Àaf_pg_˙t


747 << " i¡_pg_˙t" << 
öt_pg_˙t


748 << " u«Œoc_pg_˙t" << 
u«Œoc_pg_˙t


749 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

751 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

753 
	`DBG
(<<"rtree_stats_táudit ok");

754  
ªsu…
;

755 
	}
}

757 
ba£_°©_t


758 
	gπªe_°©s_t
::
	$tŸÆ_byãs
() const

760  (
Àaf_pg_˙t
 + 
öt_pg_˙t
Ë* 
smÀvñ_0
::
∑ge_sz
;

761 
	}
}

764 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gπªe_°©s_t
& 
	gs
)

777 
	gs
.
¥öt
(
o
, "");

778  
	go
;

781 
	gπªe_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

783 c⁄° 
πªe_°©s_t
 &
s
 = *
this
;

784 
o


785 << 
pfx
 << "íåy_˙à" << 
s
.
íåy_˙t
 << 
ídl


786 << 
pfx
 << "unique_˙à" << 
s
.
unique_˙t
 << 
ídl


787 << 
pfx
 << "Àaf_pg_˙à" << 
s
.
Àaf_pg_˙t
 << 
ídl


788 << 
pfx
 << "öt_pg_˙à" << 
s
.
öt_pg_˙t
 << 
ídl


789 << 
pfx
 << "u«Œoc_pg_˙à" << 
s
.
u«Œoc_pg_˙t
 << 
ídl


790 << 
pfx
 << "fûl_≥r˚¡ " << 
s
.
fûl_≥r˚¡
 << 
ídl


791 << 
pfx
 << "Àvñ_˙à" << 
s
.
Àvñ_˙t
 << 
ídl


793 
	}
}

797 
	gvﬁume_hdr_°©s_t
::
	$˛ór
()

799 
hdr_ext_˙t
 = 0;

800 
Æloc_ext_˙t
 = 0;

801 
u«Œoc_ext_˙t
 = 0;

802 
exã¡_size
 = 0;

803 
	}
}

806 
	gvﬁume_hdr_°©s_t
::
	$add
(c⁄° 
vﬁume_hdr_°©s_t
& 
°©s
)

808 
hdr_ext_˙t
 +
°©s
.hdr_ext_cnt;

809 
Æloc_ext_˙t
 +
°©s
.alloc_ext_cnt;

810 
u«Œoc_ext_˙t
 +
°©s
.unalloc_ext_cnt;

811 
exã¡_size
 = 
	`MAX
”xã¡_size, 
°©s
.extent_size);

812 
	}
}

814 
w_rc_t


815 
	gvﬁume_hdr_°©s_t
::
	$audô
() const

817 
	`FUNC
(
vﬁume_hdr_°©s_t
::
audô
);

818 
w_rc_t
 
ªsu…
;

819 i‡(
exã¡_size
 !
smÀvñ_0
::
ext_sz
) {

820 
	`DBG
(

821 << "Éxã¡_size" << 
exã¡_size


822 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

824 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

826 
	`DBG
(<<"volume_hdr_stats_táudit ok");

827  
ªsu…
;

828 
	}
}

830 
ba£_°©_t


831 
	gvﬁume_hdr_°©s_t
::
	$tŸÆ_byãs
() const

833  
hdr_ext_˙t
 * 
smÀvñ_0
::
ext_sz
 * smÀvñ_0::
∑ge_sz
;

834 
	}
}

836 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gvﬁume_hdr_°©s_t
& 
	gs
)

846 
	gs
.
¥öt
(
o
, "");

847  
	go
;

850 
	gvﬁume_hdr_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

852 c⁄° 
vﬁume_hdr_°©s_t
 &
s
 = *
this
;

853 
o


854 << 
pfx
 << "hdr_ext_˙à" << 
s
.
hdr_ext_˙t
 << 
ídl


855 << 
pfx
 << "Æloc_ext_˙à" << 
s
.
Æloc_ext_˙t
 << 
ídl


856 << 
pfx
 << "u«Œoc_ext_˙à" << 
s
.
u«Œoc_ext_˙t
 << 
ídl


857 << 
pfx
 << "exã¡_sizê" << 
s
.
exã¡_size
 << 
ídl


859 
	}
}

863 
	gvﬁume_m≠_°©s_t
::
	$˛ór
()

865 
°‹e_dúe˘‹y
.
	`˛ór
();

866 
roŸ_ödex
.
	`˛ór
();

867 
	}
}

870 
	gvﬁume_m≠_°©s_t
::
	$add
(c⁄° 
vﬁume_m≠_°©s_t
& 
°©s
)

872 
°‹e_dúe˘‹y
.
	`add
(
°©s
.store_directory);

873 
roŸ_ödex
.
	`add
(
°©s
.root_index);

874 
	}
}

876 
w_rc_t


877 
	gvﬁume_m≠_°©s_t
::
	$audô
() const

879 
	`FUNC
(
vﬁume_m≠_°©s_t
::
audô
);

880 
	`W_DO
(
°‹e_dúe˘‹y
.
	`audô
());

881 
	`W_DO
(
roŸ_ödex
.
	`audô
());

883 
w_rc_t
 
ªsu…
;

884 i‡–(
	`Æloc_pg_˙t
(Ë+ 
	`u«Œoc_pg_˙t
()) %

885 
smÀvñ_0
::
ext_sz
 != 0) {

886 
	`DBG
(

887 << "áŒoc_pg_˙t" << 
	`Æloc_pg_˙t
()

888 << " u«Œoc_pg_˙t" << 
	`u«Œoc_pg_˙t
()

889 << " smÀvñ_0::ext_sz" << (
smÀvñ_0
::
ext_sz
)

891 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

893 
	`DBG
(<<"volume_hdr_stats_táudit ok");

894  
ªsu…
;

895 
	}
}

897 
ba£_°©_t


898 
	gvﬁume_m≠_°©s_t
::
	$tŸÆ_byãs
() const

900  
°‹e_dúe˘‹y
.
	`tŸÆ_byãs
() +

901 
roŸ_ödex
.
	`tŸÆ_byãs
();

902 
	}
}

904 
ba£_°©_t


905 
	gvﬁume_m≠_°©s_t
::
	$Æloc_pg_˙t
() const

907  
°‹e_dúe˘‹y
.
	`Æloc_pg_˙t
() +

908 
roŸ_ödex
.
	`Æloc_pg_˙t
();

909 
	}
}

911 
ba£_°©_t


912 
	gvﬁume_m≠_°©s_t
::
	$u«Œoc_pg_˙t
() const

914  
°‹e_dúe˘‹y
.
u«Œoc_pg_˙t
 +

915 
roŸ_ödex
.
u«Œoc_pg_˙t
 +

916 
°‹e_dúe˘‹y
.
u∆ök_pg_˙t
 +

917 
roŸ_ödex
.
u∆ök_pg_˙t
;

918 
	}
}

920 
ba£_°©_t


921 
	gvﬁume_m≠_°©s_t
::
	$u∆ök_pg_˙t
() const

923  
°‹e_dúe˘‹y
.
u∆ök_pg_˙t
 +

924 
roŸ_ödex
.
u∆ök_pg_˙t
;

925 
	}
}

928 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gvﬁume_m≠_°©s_t
& 
	gs
)

933 
	gs
.
¥öt
(
o
, "");

934  
	go
;

937 
	gvﬁume_m≠_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

939 c⁄° 
vﬁume_m≠_°©s_t
 &
s
 = *
this
;

940 
pfxÀn
 = 
	`°æí
(
pfx
);

941 *
pfx1
 = 
√w
 [
	`°æí
(
pfx
) + 30];

942 
	`mem˝y
(
pfx1
, 
pfx
, 
pfxÀn
);

944 
	`mem˝y
(
pfx1
+
pfxÀn
, "sdir.", 6);

945 
s
.
°‹e_dúe˘‹y
.
	`¥öt
(
o
,
pfx1
);

947 
	`mem˝y
(
pfx1
+
pfxÀn
, "rind.", 6);

948 
s
.
roŸ_ödex
.
	`¥öt
(
o
,
pfx1
);

950 
dñëe
[] 
pfx1
;

951 
	}
}

954 
	gsm_du_°©s_t
::
	$˛ór
()

956 
fûe
.
	`˛ór
();

957 
båì
.
	`˛ór
();

958 
πªe
.
	`˛ór
();

959 
vﬁume_hdr
.
	`˛ór
();

960 
vﬁume_m≠
.
	`˛ór
();

962 
fûe_˙t
 = 0;

963 
båì_˙t
 = 0;

964 
πªe_˙t
 = 0;

965 
	}
}

968 
	gsm_du_°©s_t
::
	$add
(c⁄° 
sm_du_°©s_t
& 
°©s
)

970 
fûe
.
	`add
(
°©s
.file);

971 
båì
.
	`add
(
°©s
.btree);

972 
πªe
.
	`add
(
°©s
.rtree);

973 
vﬁume_hdr
.
	`add
(
°©s
.volume_hdr);

974 
vﬁume_m≠
.
	`add
(
°©s
.volume_map);

976 
fûe_˙t
 +
°©s
.file_cnt;

977 
båì_˙t
 +
°©s
.btree_cnt;

978 
πªe_˙t
 +
°©s
.rtree_cnt;

979 
	}
}

981 
w_rc_t


982 
	gsm_du_°©s_t
::
	$audô
() const

984 
	`FUNC
(
sm_du_°©s_t
::
audô
);

985 
	`W_DO
(
fûe
.
	`audô
());

986 
	`W_DO
(
båì
.
	`audô
());

987 
	`W_DO
(
πªe
.
	`audô
());

989 
	`W_DO
(
vﬁume_hdr
.
	`audô
());

990 
	`W_DO
(
vﬁume_m≠
.
	`audô
());

992 
ba£_°©_t
 
u«Œoc_pg_˙t
 =

993 (
fûe
.
u«Œoc_fûe_pg_˙t
 +

994 
fûe
.
u«Œoc_œrge_pg_˙t
 +

996 
båì
.
u«Œoc_pg_˙t
 +

998 
båì
.
u∆ök_pg_˙t
 +

1000 
πªe
.
u«Œoc_pg_˙t
 +

1003 
vﬁume_m≠
.
	`u«Œoc_pg_˙t
()

1007 
ba£_°©_t
 
Æloc_pg_˙t2
 =

1009 (
båì
.
Àaf_pg_˙t
 +

1010 
båì
.
öt_pg_˙t
 +

1011 
πªe
.
Àaf_pg_˙t
 +

1012 
πªe
.
öt_pg_˙t
 +

1014 
vﬁume_m≠
.
	`Æloc_pg_˙t
() +

1017 
fûe
.
fûe_pg_˙t
 +

1018 
fûe
.
lgd©a_pg_˙t
 +

1020 
fûe
.
lgödex_pg_˙t


1024 
ba£_°©_t
 
u∆ök_pg_˙t3
 =

1025 
båì
.
u∆ök_pg_˙t
 +

1026 
vﬁume_m≠
.
	`u∆ök_pg_˙t
()

1029 
ba£_°©_t
 
Æloc_™d_u«Œoc_˙t
 = 
Æloc_pg_˙t2
 + 
u«Œoc_pg_˙t
;

1031 
x˘_t
* 
x
 = 
	`me
()->
	`x˘
();

1032 
ba£_°©_t
 
m¨ked_f‹_dñëi⁄_by_me
;

1033 
x
->
	`num_exã¡s_m¨ked_f‹_dñëi⁄
(
m¨ked_f‹_dñëi⁄_by_me
);

1035 
w_rc_t
 
ªsu…
;

1036 i‡(
Æloc_™d_u«Œoc_˙t
 !=

1037 (
vﬁume_hdr
.
Æloc_ext_˙t
 - 
m¨ked_f‹_dñëi⁄_by_me
)

1038 * 
smÀvñ_0
::
ext_sz
 ) {

1039 
	`DBG
(

1040 << "áŒoc2ÅŸÆÖage†" << 
Æloc_pg_˙t2


1041 << " u«Œo¯tŸÆÖage†" << 
u«Œoc_pg_˙t


1042 << " m¨ked_f‹_dñëi⁄_by_mê" << 
m¨ked_f‹_dñëi⁄_by_me


1043 << "ÉxàtŸÆÖage†" << (
vﬁume_hdr
.
Æloc_ext_˙t
 * 
smÀvñ_0
::
ext_sz
)

1044 << " u∆ökedÖage†" << 
u∆ök_pg_˙t3


1046 #i‡
DEBUG_GNATS_77


1047 c⁄° *
ªœti⁄
 = " > ";

1048 i‡(
Æloc_™d_u«Œoc_˙t
 <

1049 (
vﬁume_hdr
.
Æloc_ext_˙t
 - 
m¨ked_f‹_dñëi⁄_by_me
)

1050 * 
smÀvñ_0
::
ext_sz
 )

1056 
ªœti⁄
 = " < ";

1061 
˚º
 << "PagesÑeferenced in store structures "

1062 << 
Æloc_™d_u«Œoc_˙t


1063 << 
ªœti⁄


1065 << 
u∆ök_pg_˙t3


1067 << 
ídl
;

1068 
˚º


1070 << 
Æloc_™d_u«Œoc_˙t


1071 << " ("<<
Æloc_pg_˙t2
<<"+" << 
u«Œoc_pg_˙t
 << ")"

1073 << ((
vﬁume_hdr
.
Æloc_ext_˙t
 - 
m¨ked_f‹_dñëi⁄_by_me
)*

1074 
smÀvñ_0
::
ext_sz
 )

1075 << "((" << 
vﬁume_hdr
.
Æloc_ext_˙t
 << "-"

1076 << 
m¨ked_f‹_dñëi⁄_by_me
 << ")*Éxtsize)"

1077 << 
ídl
;

1078 
˚º


1079 << "áŒoc2ÅŸÆÖage†" << 
Æloc_pg_˙t2


1080 << " u«Œo¯tŸÆÖage†" << 
u«Œoc_pg_˙t


1081 << " m¨ked_f‹_dñëi⁄_by_mê" << 
m¨ked_f‹_dñëi⁄_by_me


1082 << "ÉxàtŸÆÖage†" << (
vﬁume_hdr
.
Æloc_ext_˙t
 * 
smÀvñ_0
::
ext_sz
)

1083 << 
ídl
;

1085 
˚º


1088 << 
båì
.
Àaf_pg_˙t


1090 << 
båì
.
öt_pg_˙t


1092 << 
fûe
.
fûe_pg_˙t


1094 << 
fûe
.
lgd©a_pg_˙t


1096 << 
fûe
.
lgödex_pg_˙t


1098 << 
vﬁume_m≠
.
	`Æloc_pg_˙t
()

1099 << 
ídl
;

1101 
˚º


1105 
fûe
.
u«Œoc_fûe_pg_˙t


1107 
fûe
.
u«Œoc_œrge_pg_˙t


1109 
båì
.
u«Œoc_pg_˙t


1111 
båì
.
u∆ök_pg_˙t


1113 
vﬁume_m≠
.
	`u«Œoc_pg_˙t
()

1114 << 
ídl
;

1116 
˚º


1117 << "vﬁume_m≠.roŸ_ödex " << 
vﬁume_m≠
.
roŸ_ödex


1118 << 
ídl


1119 << "vﬁume_m≠.°‹e_dúe˘‹y " << 
vﬁume_m≠
.
°‹e_dúe˘‹y


1120 << 
ídl
;

1123 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

1127 
ba£_°©_t
 
Æloc_pg_˙t
 =

1128 –
vﬁume_hdr
.
Æloc_ext_˙t
 + vﬁume_hdr.
hdr_ext_˙t
 )

1129 * 
smÀvñ_0
::
ext_sz
;

1130 
Æloc_pg_˙t
 -
u«Œoc_pg_˙t
;

1131 
Æloc_pg_˙t
 -(
m¨ked_f‹_dñëi⁄_by_me
 * 
smÀvñ_0
::
ext_sz
);

1134 i‡–
Æloc_pg_˙t
 * 
smÀvñ_0
::
∑ge_sz
 !
	`tŸÆ_byãs
()) {

1135 
	`DBG
(

1136 << "áŒoc_pg_˙t" << 
Æloc_pg_˙t


1137 << " u«Œoc_pg_˙t" << 
u«Œoc_pg_˙t


1138 << " m¨ked_f‹_dñëi⁄_by_me=" << 
m¨ked_f‹_dñëi⁄_by_me


1139 << "Öage_sz = " << (
smÀvñ_0
::
∑ge_sz
)

1140 << "ÅŸÆ byãs" << 
	`tŸÆ_byãs
()

1142 if(
ªsu…
.
	`is_îr‹
()) {}

1143 
ªsu…
 = 
	`°©s_audô_Áûed
(
__LINE__
);

1145 
	`DBG
(<<"sm_du_stats_táudit ok");

1146  
ªsu…
;

1147 
	}
}

1149 
ba£_°©_t


1150 
	gsm_du_°©s_t
::
	$tŸÆ_byãs
() const

1152  
fûe
.
	`tŸÆ_byãs
(Ë+ 
båì
.total_bytes() +

1153 
πªe
.
	`tŸÆ_byãs
() +

1154 
vﬁume_hdr
.
	`tŸÆ_byãs
(Ë+ 
vﬁume_m≠
.total_bytes()

1156 
	}
}

1158 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsm_du_°©s_t
& 
	gs
)

1168 
	gs
.
¥öt
(
o
,"");

1169  
	go
;

1172 
	gsm_du_°©s_t
::
	$¥öt
(
o°ªam
& 
o
, c⁄° *
pfx
) const

1174 c⁄° 
sm_du_°©s_t
 &
s
 = *
this
;

1175 
pfxÀn
 = 
	`°æí
(
pfx
);

1176 *
pfx1
 = 
√w
 [
	`°æí
(
pfx
) + 30];

1177 
	`mem˝y
(
pfx1
, 
pfx
, 
pfxÀn
);

1179 
	`mem˝y
(
pfx1
+
pfxÀn
, "file.", 6);

1180 
s
.
fûe
.
	`¥öt
(
o
,
pfx1
);

1182 
	`mem˝y
(
pfx1
+
pfxÀn
, "btre.", 6);

1183 
s
.
båì
.
	`¥öt
(
o
,
pfx1
);

1185 
	`mem˝y
(
pfx1
+
pfxÀn
, "rtre.", 6);

1186 
s
.
πªe
.
	`¥öt
(
o
,
pfx1
);

1188 
	`mem˝y
(
pfx1
+
pfxÀn
, "volh.", 6);

1189 
s
.
vﬁume_hdr
.
	`¥öt
(
o
,
pfx1
);

1191 
	`mem˝y
(
pfx1
+
pfxÀn
, "volm.", 6);

1192 
s
.
vﬁume_m≠
.
	`¥öt
(
o
,
pfx1
);

1194 
dñëe
[] 
pfx1
;

1196 
o


1197 << 
pfx
 << "fûe_˙à" << 
s
.
fûe_˙t
 << 
ídl


1198 << 
pfx
 << "båì_˙à" << 
s
.
båì_˙t
 << 
ídl


1199 << 
pfx
 << "πªe_˙à" << 
s
.
πªe_˙t
 << 
ídl


1201 
	}
}

	@src/sm/sm_du_stats.h

30 #i‚de‡
SM_DU_STATS_H


31 
	#SM_DU_STATS_H


	)

33 
	~"w_deföes.h
"

37 
	~"°id_t.h
"

43 #ifde‡
__GNUG__


44 #¥agm®
öãrÁ˚


59 
	gw_ba£_t
::
	tba£_°©_t
 base_stat_t;

61 
	sfûe_pg_°©s_t
 {

62 
ba£_°©_t
 
	mhdr_bs
;

64 
ba£_°©_t
 
	m¶Ÿs_unu£d_bs
;

65 
ba£_°©_t
 
	m¶Ÿs_u£d_bs
;

68 
ba£_°©_t
 
	mªc_èg_bs
;

69 
ba£_°©_t
 
	mªc_hdr_bs
;

70 
ba£_°©_t
 
	mªc_hdr_Æign_bs
;

73 
ba£_°©_t
 
	msmÆl_ªc_˙t
;

74 
ba£_°©_t
 
	mªc_body_bs
;

75 
ba£_°©_t
 
	mªc_body_Æign_bs
;

82 
ba£_°©_t
 
	mlg_ªc_˙t
;

84 
ba£_°©_t
 
	mªc_lg_chunk_bs
;

86 
ba£_°©_t
 
	mªc_lg_ödúe˘_bs
;

89 
ba£_°©_t
 
	m‰ì_bs
;

94 
NORET
 
fûe_pg_°©s_t
(Ë{
˛ór
();}

95 
add
(c⁄° 
fûe_pg_°©s_t
& 
°©s
);

96 
˛ór
();

97 
w_rc_t
 
audô
() const;

98 
ba£_°©_t
 
tŸÆ_byãs
() const;

100 
¥öt
(
o°ªam
&, const *) const;

102 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mfûe_pg_°©s_t
& 
	ms
);

105 
	slgd©a_pg_°©s_t
 {

106 
ba£_°©_t
 
	mhdr_bs
;

107 
ba£_°©_t
 
	md©a_bs
;

108 
ba£_°©_t
 
	munu£d_bs
;

110 
NORET
 
lgd©a_pg_°©s_t
(Ë{
˛ór
();}

111 
add
(c⁄° 
lgd©a_pg_°©s_t
& 
°©s
);

112 
˛ór
();

113 
w_rc_t
 
audô
() const;

114 
ba£_°©_t
 
tŸÆ_byãs
() const;

115 
¥öt
(
o°ªam
&, const *) const;

116 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mlgd©a_pg_°©s_t
& 
	ms
);

120 
	slgödex_pg_°©s_t
 {

121 
ba£_°©_t
 
	mu£d_bs
;

122 
ba£_°©_t
 
	munu£d_bs
;

124 
NORET
 
lgödex_pg_°©s_t
(Ë{
˛ór
();}

125 
add
(c⁄° 
lgödex_pg_°©s_t
& 
°©s
);

126 
˛ór
();

127 
w_rc_t
 
audô
() const;

128 
ba£_°©_t
 
tŸÆ_byãs
() const;

129 
¥öt
(
o°ªam
&, const *) const;

130 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mlgödex_pg_°©s_t
& 
	ms
);

133 
	sfûe_°©s_t
 {

135 
fûe_pg_°©s_t
 
	mfûe_pg
;

136 
lgd©a_pg_°©s_t
 
	mlgd©a_pg
;

137 
lgödex_pg_°©s_t
 
	mlgödex_pg
;

138 
ba£_°©_t
 
	mfûe_pg_˙t
;

139 
ba£_°©_t
 
	mlgd©a_pg_˙t
;

143 
ba£_°©_t
 
	mlgödex_pg_˙t
;

146 
ba£_°©_t
 
	mu«Œoc_fûe_pg_˙t
;

152 
ba£_°©_t
 
	mu«Œoc_œrge_pg_˙t
;

154 
NORET
 
fûe_°©s_t
(Ë{
˛ór
();}

155 
add
(c⁄° 
fûe_°©s_t
& 
°©s
);

156 
˛ór
();

157 
w_rc_t
 
audô
() const;

158 
ba£_°©_t
 
tŸÆ_byãs
() const;

159 
ba£_°©_t
 
Æloc_pg_˙t
() const;

160 
¥öt
(
o°ªam
&, const *) const;

161 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mfûe_°©s_t
& 
	ms
);

167 
	sbåì_lf_°©s_t
 {

168 
ba£_°©_t
 
	mhdr_bs
;

169 
ba£_°©_t
 
	mkey_bs
;

170 
ba£_°©_t
 
	md©a_bs
;

171 
ba£_°©_t
 
	míåy_ovîhód_bs
;

172 
ba£_°©_t
 
	munu£d_bs
;

173 
ba£_°©_t
 
	míåy_˙t
;

174 
ba£_°©_t
 
	munique_˙t
;

176 
NORET
 
båì_lf_°©s_t
(Ë{
˛ór
();}

177 
add
(c⁄° 
båì_lf_°©s_t
& 
°©s
);

178 
˛ór
();

179 
w_rc_t
 
audô
() const;

180 
ba£_°©_t
 
tŸÆ_byãs
() const;

181 
¥öt
(
o°ªam
&, const *) const;

182 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mbåì_lf_°©s_t
& 
	ms
);

188 
	sbåì_öt_°©s_t
 {

189 
ba£_°©_t
 
	mu£d_bs
;

190 
ba£_°©_t
 
	munu£d_bs
;

192 
NORET
 
båì_öt_°©s_t
(Ë{
˛ór
();}

193 
add
(c⁄° 
båì_öt_°©s_t
& 
°©s
);

194 
˛ór
();

195 
w_rc_t
 
audô
() const;

196 
ba£_°©_t
 
tŸÆ_byãs
() const;

197 
¥öt
(
o°ªam
&, const *) const;

198 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mbåì_öt_°©s_t
& 
	ms
);

203 
	sbåì_°©s_t
 {

204 
båì_lf_°©s_t
 
	mÀaf_pg
;

205 
båì_öt_°©s_t
 
	möt_pg
;

207 
ba£_°©_t
 
	mÀaf_pg_˙t
;

208 
ba£_°©_t
 
	möt_pg_˙t
;

209 
ba£_°©_t
 
	mu∆ök_pg_˙t
;

222 
ba£_°©_t
 
	mu«Œoc_pg_˙t
;

223 
ba£_°©_t
 
	mÀvñ_˙t
;

225 
NORET
 
båì_°©s_t
(Ë{
˛ór
();}

226 
add
(c⁄° 
båì_°©s_t
& 
°©s
);

227 
˛ór
();

228 
w_rc_t
 
audô
() const;

229 
ba£_°©_t
 
tŸÆ_byãs
() const;

230 
ba£_°©_t
 
Æloc_pg_˙t
() const;

231 
¥öt
(
o°ªam
&, const *) const;

232 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mbåì_°©s_t
& 
	ms
);

235 
	sπªe_°©s_t
 {

236 
ba£_°©_t
 
	míåy_˙t
;

237 
ba£_°©_t
 
	munique_˙t
;

238 
ba£_°©_t
 
	mÀaf_pg_˙t
;

239 
ba£_°©_t
 
	möt_pg_˙t
;

240 
ba£_°©_t
 
	mu«Œoc_pg_˙t
;

241 
ba£_°©_t
 
	mfûl_≥r˚¡
;

242 
ba£_°©_t
 
	mÀvñ_˙t
;

244 
NORET
 
πªe_°©s_t
(Ë{
˛ór
();}

245 
add
(c⁄° 
πªe_°©s_t
& 
°©s
);

246 
˛ór
();

247 
w_rc_t
 
audô
() const;

248 
ba£_°©_t
 
tŸÆ_byãs
() const;

249 
¥öt
(
o°ªam
&, const *) const;

250 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mπªe_°©s_t
& 
	ms
);

253 
	svﬁume_hdr_°©s_t
 {

254 
ba£_°©_t
 
	mhdr_ext_˙t
;

255 
ba£_°©_t
 
	mÆloc_ext_˙t
;

257 
ba£_°©_t
 
	mu«Œoc_ext_˙t
;

258 
ba£_°©_t
 
	mexã¡_size
;

260 
NORET
 
vﬁume_hdr_°©s_t
(Ë{
˛ór
();}

261 
add
(c⁄° 
vﬁume_hdr_°©s_t
& 
°©s
);

262 
˛ór
();

263 
w_rc_t
 
audô
() const;

264 
ba£_°©_t
 
tŸÆ_byãs
() const;

265 
¥öt
(
o°ªam
&, const *) const;

266 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mvﬁume_hdr_°©s_t
& 
	ms
);

269 
	svﬁume_m≠_°©s_t
 {

270 
båì_°©s_t
 
	m°‹e_dúe˘‹y
;

271 
båì_°©s_t
 
	mroŸ_ödex
;

273 
NORET
 
vﬁume_m≠_°©s_t
(Ë{
˛ór
();}

274 
add
(c⁄° 
vﬁume_m≠_°©s_t
& 
°©s
);

275 
˛ór
();

276 
w_rc_t
 
audô
() const;

277 
ba£_°©_t
 
tŸÆ_byãs
() const;

278 
ba£_°©_t
 
Æloc_pg_˙t
() const;

279 
ba£_°©_t
 
u«Œoc_pg_˙t
() const;

280 
ba£_°©_t
 
u∆ök_pg_˙t
() const;

281 
¥öt
(
o°ªam
&, const *) const;

282 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mvﬁume_m≠_°©s_t
& 
	ms
);

286 
	ssm_du_°©s_t
 {

287 
fûe_°©s_t
 
	mfûe
;

288 
båì_°©s_t
 
	mbåì
;

289 
πªe_°©s_t
 
	mπªe
;

290 
vﬁume_hdr_°©s_t
 
	mvﬁume_hdr
;

291 
vﬁume_m≠_°©s_t
 
	mvﬁume_m≠
;

293 
ba£_°©_t
 
	mfûe_˙t
;

294 
ba£_°©_t
 
	mbåì_˙t
;

295 
ba£_°©_t
 
	mπªe_˙t
;

297 
NORET
 
sm_du_°©s_t
(Ë{
˛ór
();}

298 
add
(c⁄° 
sm_du_°©s_t
& 
°©s
);

299 
˛ór
();

300 
w_rc_t
 
audô
() const;

301 
ba£_°©_t
 
tŸÆ_byãs
() const;

302 
¥öt
(
o°ªam
&, const *) const;

303 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	msm_du_°©s_t
& 
	ms
);

307 ˛as†
	cSmVﬁumeMëaSèts


309 
	mpublic
:

310 
SmVﬁumeMëaSèts
();

311 
CÀ¨
();

312 
In¸emítPages
(
numRe£rved
, 
numAŒoc
);

313 
	mSmVﬁumeMëaSèts
& 
	m›î©‹
+=(c⁄° 
SmVﬁumeMëaSèts
& 
vﬁumeSèts
);

315 
ba£_°©_t
 
	mnumPages
;

316 
ba£_°©_t
 
	mnumSy°emPages
;

317 
ba£_°©_t
 
	mnumRe£rvedPages
;

318 
ba£_°©_t
 
	mnumAŒocPages
;

319 
ba£_°©_t
 
	mnumSt‹es
;

320 
ba£_°©_t
 
	mnumAŒocSt‹es
;

329 ˛as†
	cSmSt‹eMëaSèts


331 
	mpublic
:

332 
NORET
 
SmSt‹eMëaSèts
();

333 
CÀ¨
();

334 
In¸emítPages
(
numRe£rved
, 
numAŒoc
);

335 
	mSmSt‹eMëaSèts
& 
	m›î©‹
+=(c⁄° 
SmSt‹eMëaSèts
& 
°‹eSèts
);

337 
ba£_°©_t
 
	mnumRe£rvedPages
;

338 
ba£_°©_t
 
	mnumAŒocPages
;

342 ˛as†
	cSmFûeMëaSèts


344 
	mpublic
:

345 
SmFûeMëaSèts
();

346 
CÀ¨
();

347 
	mSmFûeMëaSèts
& 
	m›î©‹
+=(c⁄° 
SmFûeMëaSèts
& 
fûeSèts
);

349 
¢um_t
 
	msmÆlSnum
;

350 
¢um_t
 
	mœrgeSnum
;

351 
SmSt‹eMëaSèts
 
	msmÆl
;

352 
SmSt‹eMëaSèts
 
	mœrge
;

355 
ölöe
 
	gSmVﬁumeMëaSèts
::
	$CÀ¨
()

357 
numPages
 = 0;

358 
numSy°emPages
 = 0;

359 
numRe£rvedPages
 = 0;

360 
numAŒocPages
 = 0;

361 
numSt‹es
 = 0;

362 
numAŒocSt‹es
 = 0;

363 
	}
}

365 
ölöe
 
	gSmVﬁumeMëaSèts
::
	$SmVﬁumeMëaSèts
()

367 
	`CÀ¨
();

368 
	}
}

370 
ölöe
 
	gSmVﬁumeMëaSèts
::
	$In¸emítPages
(
numRe£rved
, 
numAŒoc
)

372 
numRe£rvedPages
 +
numRe£rved
;

373 
numAŒocPages
 +
numAŒoc
;

374 
	}
}

376 
ölöe
 
	gSmVﬁumeMëaSèts
& SmVﬁumeMëaSèts::
›î©‹
+=(c⁄° 
SmVﬁumeMëaSèts
& 
vﬁumeSèts
)

378 
numPages
 +
vﬁumeSèts
.numPages;

379 
	gnumSy°emPages
 +
vﬁumeSèts
.
numSy°emPages
;

380 
	gnumRe£rvedPages
 +
vﬁumeSèts
.
numRe£rvedPages
;

381 
	gnumAŒocPages
 +
vﬁumeSèts
.
numAŒocPages
;

382 
	gnumSt‹es
 +
vﬁumeSèts
.
numSt‹es
;

383 
	gnumAŒocSt‹es
 +
vﬁumeSèts
.
numAŒocSt‹es
;

385  *
	gthis
;

388 
ölöe
 
	gSmSt‹eMëaSèts
::
	$CÀ¨
()

390 
numRe£rvedPages
 = 0;

391 
numAŒocPages
 = 0;

392 
	}
}

394 
ölöe
 
	gSmSt‹eMëaSèts
::
	$In¸emítPages
(
numRe£rved
, 
numAŒoc
)

396 
numRe£rvedPages
 +
numRe£rved
;

397 
numAŒocPages
 +
numAŒoc
;

398 
	}
}

400 
ölöe
 
	gSmSt‹eMëaSèts
::
	$SmSt‹eMëaSèts
()

402 
	`CÀ¨
();

403 
	}
}

405 
ölöe
 
	gSmSt‹eMëaSèts
& SmSt‹eMëaSèts::
›î©‹
+=(c⁄° 
SmSt‹eMëaSèts
& 
°‹eSèts
)

407 
numRe£rvedPages
 +
°‹eSèts
.numReservedPages;

408 
	gnumAŒocPages
 +
°‹eSèts
.
numAŒocPages
;

410  *
	gthis
;

413 
ölöe
 
	gSmFûeMëaSèts
::
	$SmFûeMëaSèts
()

415 
smÆlSnum
 = 0;

416 
œrgeSnum
 = 0;

417 
	}
}

419 
ölöe
 
	gSmFûeMëaSèts
::
	$CÀ¨
()

421 
smÆl
.
	`CÀ¨
();

422 
œrge
.
	`CÀ¨
();

423 
	}
}

425 
ölöe
 
	gSmFûeMëaSèts
& SmFûeMëaSèts::
›î©‹
+=(c⁄° 
SmFûeMëaSèts
& 
fûeSèts
)

427 
smÆl
 +
fûeSèts
.small;

428 
	gœrge
 +
fûeSèts
.
œrge
;

430  *
	gthis
;

	@src/sm/sm_escalation.h

30 #i‚de‡
SM_ESCALATION_H


31 
	#SM_ESCALATION_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 ˛as†
	csm_esˇœti⁄_t
 {

42 
	mpublic
:

43 
NORET
 
sm_esˇœti⁄_t
(

44 
w_ba£_t
::
öt4_t
 
p
 = 
smÀvñ_0
::
d⁄tEsˇœã
,

45 
w_ba£_t
::
öt4_t
 
s
 = 
smÀvñ_0
::
d⁄tEsˇœã
,

46 
w_ba£_t
::
öt4_t
 
v
 = 
smÀvñ_0
::
d⁄tEsˇœã
);

47 
	mNORET
 ~
sm_esˇœti⁄_t
();

48 
	m¥iv©e
:

49 
w_ba£_t
::
öt4_t
 
_p
;

50 
	mw_ba£_t
::
öt4_t
 
_s
;

51 
	mw_ba£_t
::
öt4_t
 
_v
;

53 
sm_esˇœti⁄_t
(const sm_escalation_t&);

54 
	msm_esˇœti⁄_t
& 
	m›î©‹
=(c⁄° 
sm_esˇœti⁄_t
&);

	@src/sm/sm_int_0.h

30 #i‚de‡
SM_INT_0_H


31 
	#SM_INT_0_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
SM_SOURCE
Ë&& !deföed(
SM_LEVEL
)

38 
	#SM_LEVEL
 0

	)

41 
	~<w_debug.h
>

42 
	~<sysdefs.h
>

43 
	~<basics.h
>

44 
	~<°hªad.h
>

45 
	~<vec_t.h
>

46 
	~<œtch.h
>

47 
	~<lid_t.h
>

48 #i‡
deföed
(
SM_SOURCE
)

50 
	~<sm_s.h
>

52 
	~<smthªad.h
>

53 
	~<tid_t.h
>

54 
	~"sm°©s.h
"

56 #i‡
deföed
(
SM_SOURCE
Ë&& (
SM_LEVEL
 >= 0)

57 
	~<bf.h
>

58 
	~<∑ge.h
>

59 
	~<pm≠.h
>

60 
	~<sm_io.h
>

61 
	~<log.h
>

	@src/sm/sm_int_1.h

30 #i‚de‡
SM_INT_1_H


31 
	#SM_INT_1_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
SM_SOURCE
Ë&& !deföed(
SM_LEVEL
)

38 
	#SM_LEVEL
 1

	)

41 #i‚de‡
SM_INT_0_H


42 
	~"sm_öt_0.h
"

46 
˛ass
 
	gchk±_m
;

50 ˛as†
	csmÀvñ_1
 : 
public
 
smÀvñ_0
 {

51 
public
:

56 
	ex˘_°©e_t
 { 
x˘_°Æe
 = 0x0,

57 
	mx˘_a˘ive
 = 0x1,

59 
	mx˘_¥ï¨ed
 = 0x2,

60 
	mx˘_ab‹tög
 = 0x3,

61 
	mx˘_chaöög
 = 0x4,

62 
	mx˘_commôtög
 = 0x5,

63 
	mx˘_‰ìög_•a˚
 = 0x6,

64 
	mx˘_íded
 = 0x7

66 
chk±_m
* 
	gchk±
;

69 #i‡(
SM_LEVEL
 >= 1)

70 
	~<lock.h
>

71 
	~<logªc.h
>

72 
	~<x˘.h
>

75 ˛as†
	cx˘_log_w¨n_check_t
 : 
public
 
smÀvñ_0
 {

76 
public
:

77 
w_rc_t
 
check
(
x˘_t
*&);

79 #i‡
deföed
(
__GNUC__
Ë&& 
__GNUC_MINOR__
 > 6

80 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gsmÀvñ_1
::
x˘_°©e_t
& 
x˘_°©e
);

	@src/sm/sm_int_2.h

30 #i‚de‡
SM_INT_2_H


31 
	#SM_INT_2_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
SM_SOURCE
Ë&& !deföed(
SM_LEVEL
)

38 
	#SM_LEVEL
 2

	)

41 #i‚de‡
SM_INT_1_H


42 
	~"sm_öt_1.h
"

45 
˛ass
 
	gbåì_m
;

46 
˛ass
 
	gfûe_m
;

47 
˛ass
 
	gπªe_m
;

48 
˛ass
 
	gønges_m
;

50 ˛as†
	csmÀvñ_2
 : 
public
 
smÀvñ_1
 {

51 
public
:

52 
båì_m
* 
bt
;

53 
fûe_m
* 
	mfi
;

54 
πªe_m
* 
	mπ
;

55 
ønges_m
* 
	mø
;

58 #i‡(
SM_LEVEL
 >= 2)

59 
	~<sdesc.h
>

60 #ifde‡
BTREE_C


61 
	#RTREE_H


	)

63 #ifde‡
RTREE_C


64 
	#BTREE_H


	)

66 #i‡
deföed
(
FILE_C
Ë|| deföed(
SMFILE_C
)

67 
	#BTREE_H


	)

68 
	#RTREE_H


	)

70 
	~<båì.h
>

71 
	~<nbox.h
>

72 
	~<πªe.h
>

73 
	~<fûe.h
>

74 
	~<ønges_p.h
>

	@src/sm/sm_int_3.h

30 #i‚de‡
SM_INT_3_H


31 
	#SM_INT_3_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
SM_SOURCE
Ë&& !deföed(
SM_LEVEL
)

38 
	#SM_LEVEL
 3

	)

41 #i‚de‡
SM_INT_2_H


42 
	~"sm_öt_2.h
"

45 
˛ass
 
	gdú_m
;

48 ˛as†
	csmÀvñ_3
 : 
public
 
smÀvñ_2
 {

49 
public
:

131 
	esm_°‹e_¥›îty_t
 {

133 
t_ªguœr
 = 0x1,

136 
	mt_ãmp‹¨y
 = 0x2,

140 
	mt_lﬂd_fûe
 = 0x4,

145 
	mt_ö£π_fûe
 = 0x08,

147 
	mt_bad_°‹ïr›îty
 = 0x80

150 
dú_m
* 
	gdú
;

154 
	go°ªam
&

155 
	g›î©‹
<<(
	go°ªam
& 
	go
, 
	gsmÀvñ_3
::
sm_°‹e_¥›îty_t
 
p
);

157 #i‡(
SM_LEVEL
 >= 3)

158 
	~<dú.h
>

	@src/sm/sm_int_4.h

30 #i‚de‡
SM_INT_4_H


31 
	#SM_INT_4_H


	)

33 
	~"w_deföes.h
"

37 #i‡
deföed
(
SM_SOURCE
Ë&& !deföed(
SM_LEVEL
)

38 
	#SM_LEVEL
 4

	)

41 #i‚de‡
SM_INT_3_H


42 
	~"sm_öt_3.h
"

45 
˛ass
 
	gss_m
;

46 
˛ass
 
	glid_m
;

48 ˛as†
	csmÀvñ_4
 : 
public
 
smÀvñ_3
 {

49 
public
:

50 
ss_m
* 
SSM
;

51 
lid_m
* 
	mlid
;

53 
smÀvñ_4
 
	tsmÀvñ_t›
;

55 #i‡(
SM_LEVEL
 >= 4)

56 
	~<btcurs‹.h
>

57 
	~<lid.h
>

58 
	~<x˘_dïídít.h
>

59 
	~<s‹t.h
>

60 
	~<¥ﬁogue.h
>

	@src/sm/sm_io.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#IO_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄


64 #i‡
W_DEBUG_LEVEL
 > 1

66 "C" 
io°›hîe
();

67 
	$io°›hîe
(Ë{ 
	}
}

69 
	#io°›hîe
()

	)

72 
	~"sm_öt_2.h
"

73 
	~"chk±_£rül.h
"

74 
	~"sm_du_°©s.h
"

75 
	~"devi˚.h
"

76 
	~"lock.h
"

77 
	~"x˘.h
"

78 
	~"logªc.h
"

79 
	~"logdef_gí.˝p
"

80 
	~"¸ash.h
"

81 
	~"vﬁ.h
"

82 
	~<auto_ªÀa£.h
>

83 
	~<°‹e_œtch_m™agî.h
>

85 
°‹e_œtch_m™agî
 
	g°‹e_œtches
;

87 
	~<√w
>

88 
	~<m≠
>

89 
	~<£t
>

90 
	~"sm_vèbÀ_íum.h
"

92 #ifde‡
EXPLICIT_TEMPLATE


93 
ãm∂©e
 
˛ass
 
	gvèbÀ_func
<
	gvﬁ_t
>;

107 
uöt4_t
 
	gio_m
::
_m£c_disk_dñay
 = 0;

108 
	gio_m
::
vﬁ_˙t
 = 0;

109 
vﬁ_t
* 
	gio_m
::
vﬁ
[
io_m
::
max_vﬁs
] = { 0 };

110 
l¢_t
 
	gio_m
::
_œ°Mou¡LSN
 =Ü¢_t::
nuŒ
;

114 
	gio_m
::
auto_Àave_t
::
	$⁄_íãrög
()

116 if(
_x
->
	`upd©e_thªads
()Ë_x->
	`°¨t_¸ô
();

117 
_x
 = 
NULL
;

118 
	}
}

120 
	gio_m
::
auto_Àave_t
::
	$⁄_Àavög
() const

122 
_x
->
	`°›_¸ô
();

123 
	}
}

129 ˛as†
	cio_m
::
auto_Àave_™d_åx_ªÀa£_t
 {

130 
¥iv©e
:

131 
x˘_t
 *
_x
;

132 
	$⁄_íãrög
() {

133 if(
_x
Ë_x->
	`°¨t_¸ô
();

134 
_x
 = 
NULL
;

136 
	$⁄_Àavög
(Ëc⁄° { 
_x
->
	`°›_¸ô
(); 
	}
}

137 
	gpublic
:

138 
	$auto_Àave_™d_åx_ªÀa£_t
(Ë: 
	`_x
(
	$x˘
()) {

139 
chk±_£rül_m
::
	`åx_acquúe
();

140 if(
_x
Ë
	`⁄_íãrög
();

141 
	}
}

142 ~
	$auto_Àave_™d_åx_ªÀa£_t
() {

143 if(
_x
Ë
	`⁄_Àavög
();

144 
chk±_£rül_m
::
	`åx_ªÀa£
();

145 
	}
}

150 
	gio_m
::
	$max_exã¡s_⁄_∑ge
()

152  
vﬁ_t
::
	`max_exã¡s_⁄_∑ge
();

153 
	}
}

155 
rc_t


156 
	gio_m
::
	$lock_f‹˚
(

157 c⁄° 
lockid_t
& 
n
,

158 
lock_mode_t
 
m
,

159 
lock_duøti⁄_t
 
d
,

160 
timeout_ö_ms
 
timeout
,

161 
∑ge_p
 *
∑ge
,

162 
lock_mode_t
* 
¥ev_mode
,

163 
lock_mode_t
* 
¥ev_pgmode
,

164 
lockid_t
** 
«meInLockHód


181 
rc_t
 
rc
 = 
lm
->
	`lock_f‹˚
(
n
, 
m
, 
d
, 
WAIT_IMMEDIATE
,

182 
¥ev_mode
, 
¥ev_pgmode
, 
«meInLockHód
);

183 if(
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eLOCKTIMEOUT
)

184 && 
timeout
 !
WAIT_IMMEDIATE
) {

185 
	`w_as£π9
(
	`me
()->
	`x˘
());

186 if(
∑ge
 &&Öage->
	`is_fixed
()) {

187 
∑ge
->
	`unfix
();

190 
rc
 = 
lm
->
	`lock_f‹˚
(
n
, 
m
, 
d
, 
timeout
,

191 
¥ev_mode
, 
¥ev_pgmode
, 
«meInLockHód
);

194  
rc
;

195 
	}
}

198 
rc_t


199 
	gvﬁ_io_sh¨ed
::
	$io_lock_f‹˚
(

200 c⁄° 
lockid_t
& 
n
,

201 
lock_mode_t
 
m
,

202 
lock_duøti⁄_t
 
d
,

203 
timeout_ö_ms
 
timeout
,

204 
lock_mode_t
* 
¥ev_mode
,

205 
lock_mode_t
* 
¥ev_pgmode
,

206 
lockid_t
** 
«meInLockHód


209  
smÀvñ_0
::
io
->
	`lock_f‹˚
(
n
,
m
,
d
,
timeout
, 0 ,

210 
¥ev_mode
, 
¥ev_pgmode
, 
«meInLockHód
);

211 
	}
}

213 
	gio_m
::
	$io_m
()

215 
_œ°Mou¡LSN
 = 
l¢_t
::
nuŒ
;

217 
	}
}

226 
	gio_m
::~
	$io_m
()

228 
	`W_COERCE
(
	`_dismou¡_Æl
(
shutdown_˛ón
));

229 
°‹e_œtches
.
	`shutdown
();

230 
	}
}

241 
	gio_m
::
	$_föd
(
vid_t
 
vid
)

243 i‡(!
vid
)  -1;

244 
uöt4_t
 
i
;

245 
i
 = 0; i < 
max_vﬁs
; i++) {

246 i‡(
vﬁ
[
i
] && vﬁ[i]->
	`vid
(Ë=
vid
) ;

248  (
i
 >
max_vﬁs
) ? -1 : (i);

249 
	}
}

251 
ölöe
 
vﬁ_t
 *

252 
	gio_m
::
	$_föd_™d_gøb
(
vid_t
 
vid
, 
lock_°©e
* 
_me
,

253 
boﬁ
 
f‹_wrôe
)

255 i‡(!
vid
) {

256 
	`DBG
(<<"vid " << 
vid
);

259 
vﬁ_t
** 
v
 = &
vﬁ
[0];

260 
uöt4_t
 
i
;

261 
i
 = 0; i < 
max_vﬁs
; i++, 
v
++) {

262 i‡(*
v
) {

263 i‡((*
v
)->
	`vid
(Ë=
vid
) ;

266 i‡(
i
 < 
max_vﬁs
) {

267 
	`w_as£π1
(*
v
);

268 (*
v
)->
	`as£π_muãx_nŸmöe
(
_me
);

269 (*
v
)->
	`acquúe_muãx
(
_me
, 
f‹_wrôe
);

270 
	`w_as£π3
(*
v
 && (*v)->
	`vid
(Ë=
vid
);

271  *
v
;

275 
	}
}

286 
boﬁ


287 
	gio_m
::
	$is_mou¡ed
(
vid_t
 
vid
)

289 
auto_Àave_t
 
íãr
;

290  (
	`_föd
(
vid
) >= 0);

291 
	}
}

304 
rc_t


305 
	gio_m
::
	$_dismou¡_Æl
(
boﬁ
 
Êush
)

307 
i
 = 0; i < 
max_vﬁs
; i++) {

308 i‡(
vﬁ
[
i
]) {

309 if(
îæog
) {

310 
îæog
->
˛og


311 << 
w¨nög_¥io


312 << "w¨nög: vﬁumê" << 
vﬁ
[
i
]->
	`vid
() << " still mounted\n"

313 << "áutom©i¯dismou¡" << 
Êushl
;

315 
	`W_DO
(
	`_dismou¡
(
vﬁ
[
i
]->
	`vid
(), 
Êush
));

319 
	`w_as£π3
(
vﬁ_˙t
 == 0);

321 
	`SET_TSTAT
(
vﬁ_ªads
,0);

322 
	`SET_TSTAT
(
vﬁ_wrôes
,0);

323  
RCOK
;

324 
	}
}

336 
rc_t


337 
	gio_m
::
	$sync_Æl_disks
()

339 
i
 = 0; i < 
max_vﬁs
; i++) {

340 i‡(
_m£c_disk_dñay
 > 0)

341 
	`me
()->
	`¶ìp
(
_m£c_disk_dñay
, "io_m::sync_all_disks");

342 i‡(
vﬁ
[
i
])

343 
vﬁ
[
i
]->
	`sync
();

345  
RCOK
;

346 
	}
}

360 
	gio_m
::
	$_dev_«me
(
vid_t
 
vid
)

362 
i
 = 
	`_föd
(
vid
);

363  
i
 >0 ? 
vﬁ
[i]->
	`dev«me
() : 0;

364 
	}
}

374 
boﬁ


375 
	gio_m
::
	$is_mou¡ed
(c⁄° * 
dev_«me
)

377 
auto_Àave_t
 
íãr
;

378  
dev
->
	`is_mou¡ed
(
dev_«me
);

379 
	}
}

388 
rc_t


389 
	gio_m
::
	$mou¡_dev
(c⁄° * 
dev_«me
, 
u_öt
& 
_vﬁ_˙t
)

391 
auto_Àave_t
 
íãr
;

392 
	`FUNC
(
io_m
::
_mou¡_dev
);

394 
vﬁhdr_t
 
vhdr
;

395 
	`W_DO
(
vﬁ_t
::
	`ªad_vhdr
(
dev_«me
, 
vhdr
));

398 
devi˚_hdr_s
 
	`dev_hdr
(
vhdr
.
	`f‹m©_vîsi⁄
(),

399 
vhdr
.
	`devi˚_quŸa_KB
(), vhdr.
	`lvid
());

400 
rc_t
 
ªsu…
 = 
dev
->
	`mou¡
(
dev_«me
, 
dev_hdr
, 
_vﬁ_˙t
);

401  
ªsu…
;

402 
	}
}

411 
rc_t


412 
	gio_m
::
	$dismou¡_dev
(c⁄° * 
dev_«me
)

414 
auto_Àave_t
 
íãr
;

415  
dev
->
	`dismou¡
(
dev_«me
);

416 
	}
}

424 
rc_t


425 
	gio_m
::
	$dismou¡_Æl_dev
()

427 
auto_Àave_t
 
íãr
;

428  
dev
->
	`dismou¡_Æl
();

429 
	}
}

437 
rc_t


438 
	gio_m
::
	$li°_devi˚s
(

439 c⁄° **& 
dev_li°
,

440 
devid_t
*& 
devid_li°
,

441 
u_öt
& 
dev_˙t
)

443 
auto_Àave_t
 
íãr
;

444  
dev
->
	`li°_devi˚s
(
dev_li°
, 
devid_li°
, 
dev_˙t
);

445 
	}
}

453 
vid_t


454 
	gio_m
::
	$_gë_vid
(c⁄° 
lvid_t
& 
lvid
)

456 
uöt4_t
 
i
;

457 
i
 = 0; i < 
max_vﬁs
; i++) {

458 i‡(
vﬁ
[
i
] && vﬁ[i]->
	`lvid
(Ë=
lvid
) ;

463 if(
i
 >
max_vﬁs
) {

464  
vid_t
::
nuŒ
;

466  
vﬁ
[
i
]->
	`vid
();

468 
	}
}

474 
rc_t


475 
	gio_m
::
	$gë_devi˚_quŸa
(c⁄° * 
devi˚
, 
smksize_t
& 
quŸa_KB
,

476 
smksize_t
& 
quŸa_u£d_KB
)

478 
auto_Àave_t
 
íãr
;

479 
	`W_DO
(
dev
->
	`quŸa
(
devi˚
, 
quŸa_KB
));

481 
lvid_t
 
lvid
;

482 
	`W_DO
(
	`_gë_lvid
(
devi˚
, 
lvid
));

483 i‡(
lvid
 =
lvid_t
::
nuŒ
) {

485 
quŸa_u£d_KB
 = 0;

487 
smksize_t
 
_dummy
;

488 
uöt4_t
 
dummy2
;

489 
	`W_DO
(
	`_gë_vﬁume_quŸa
(
	`_gë_vid
(
lvid
), 
quŸa_u£d_KB
, 
_dummy
, 
dummy2
));

491  
RCOK
;

492 
	}
}

500 
rc_t


501 
	gio_m
::
	$_gë_lvid
(c⁄° * 
dev_«me
, 
lvid_t
& 
lvid
)

503 i‡(!
dev
->
	`is_mou¡ed
(
dev_«me
)Ë 
	`RC
(
eDEVNOTMOUNTED
);

504 
uöt4_t
 
i
;

505 
i
 = 0; i < 
max_vﬁs
; i++) {

506 i‡(
vﬁ
[
i
] && (
	`°rcmp
(vﬁ[i]->
	`dev«me
(), 
dev_«me
) == 0) ) ;

508 
lvid
 = (
i
 >
max_vﬁs
Ë? 
lvid_t
::
nuŒ
 : 
vﬁ
[i]->
	`lvid
();

509  
RCOK
;

510 
	}
}

523 
rc_t


524 
	gio_m
::
	$gë_vﬁs
(

525 
°¨t
,

526 
cou¡
,

527 **
d«me
,

528 
vid_t
 
vid
[],

529 & 
ªt_˙t
)

531 
auto_Àave_t
 
íãr
;

532 
ªt_˙t
 = 0;

533 
	`w_as£π1
(
°¨t
 + 
cou¡
 <
max_vﬁs
);

538 
i
, 
j
;

539 
i
 = 
°¨t
, 
j
 = 0; i < 
max_vﬁs
; i++) {

540 i‡(
vﬁ
[
i
]) {

541 
	`w_as£π0
(
j
 < 
cou¡
);

542 
vid
[
j
] = 
vﬁ
[
i
]->
	`vid
();

543 
	`°∫˝y
(
d«me
[
j
], 
vﬁ
[
i
]->
	`dev«me
(), 
max_dev«me
);

544 
j
++;

547 
ªt_˙t
 = 
j
;

548  
RCOK
;

549 
	}
}

558 
lvid_t


559 
	gio_m
::
	$gë_lvid
(c⁄° 
vid_t
 
vid
)

561 
auto_Àave_t
 
íãr
;

562 
i
 = 
	`_föd
(
vid
);

563  (
i
 >
max_vﬁs
Ë? 
lvid_t
::
nuŒ
 : 
vﬁ
[i]->
	`lvid
();

564 
	}
}

572 
rc_t


573 
	gio_m
::
	$gë_lvid
(c⁄° * 
dev_«me
, 
lvid_t
& 
lvid
)

575 
auto_Àave_t
 
íãr
;

576  
	`_gë_lvid
(
dev_«me
, 
lvid
);

577 
	}
}

586 
rc_t


587 
	gio_m
::
	$mou¡
(c⁄° * 
devi˚
, 
vid_t
 
vid
,

588 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
, c⁄° 
Áke_disk_œãncy
)

590 
	`FUNC
(
io_m
::
mou¡
);

593 
auto_Àave_™d_åx_ªÀa£_t
 
acquúe_™d_íãr
;

594 
	`DBG
–<< "_mou¡“ame=" << 
devi˚
 << ", vid=" << 
vid
 << ")");

595 
uöt4_t
 
i
;

596 
i
 = 0; i < 
max_vﬁs
 && 
vﬁ
[i]; i++) ;

597 i‡(
i
 >
max_vﬁs
Ë 
	`RC
(
eNVOL
);

599 
vﬁ_t
* 
v
 = 
√w
 
	`vﬁ_t
(
≠∂y_Áke_io_œãncy
,
Áke_disk_œãncy
);

600 i‡(! 
v
Ë 
	`RC
(
eOUTOFMEMORY
);

602 
w_rc_t
 
rc
 = 
v
->
	`mou¡
(
devi˚
, 
vid
);

603 i‡(
rc
.
	`is_îr‹
()) {

604 
dñëe
 
v
;

605  
	`RC_AUGMENT
(
rc
);

608 
j
 = 
	`_föd
(
vid
);

609 i‡(
j
 >= 0) {

610 
	`W_COERCE
–
v
->
	`dismou¡
(
Ál£
) );

611 
dñëe
 
v
;

612  
	`RC
(
eALREADYMOUNTED
);

615 ++
vﬁ_˙t
;

617 
	`w_as£π9
(
vﬁ
[
i
] == 0);

618 
vﬁ
[
i
] = 
v
;

620 i‡(
log
 && 
smÀvñ_0
::
loggög_íabÀd
) {

621 
logªc_t
* 
logªc
 = 
√w
Üogrec_t;

622 
	`w_as£π1
(
logªc
);

624 
	`√w
 (
logªc
Ë
	`mou¡_vﬁ_log
(
devi˚
, 
vid
);

625 
logªc
->
	`fûl_x˘_©å
(
tid_t
::
nuŒ
, 
	`GëLa°Mou¡LSN
());

626 
l¢_t
 
theLSN
;

627 
	`W_COERCE
–
log
->
	`ö£π
(*
logªc
, &
theLSN
) );

629 
	`DBG
–<< "mou¡_vﬁ_log(" << 
devi˚
 << ", vid=" << 
vid


630 << "Ël¢=" << 
theLSN
 << "ÖªvLSN=" << 
	`GëLa°Mou¡LSN
());

631 
	`SëLa°Mou¡LSN
(
theLSN
);

633 
dñëe
 
logªc
;

636 
	`SSMTEST
("io_m::_mount.1");

638  
RCOK
;

639 
	}
}

650 
rc_t


651 
	gio_m
::
	$dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
)

656 
auto_Àave_™d_åx_ªÀa£_t
 
acquúe_™d_íãr
;

657  
	`_dismou¡
(
vid
, 
Êush
);

658 
	}
}

661 
rc_t


662 
	gio_m
::
	$_dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
)

664 
	`FUNC
(
io_m
::
_dismou¡
);

665 
	`DBG
–<< "_dismou¡(" << "vid=" << 
vid
 << ")");

666 
i
 = 
	`_föd
(
vid
);

667 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

669 
	`W_COERCE
(
vﬁ
[
i
]->
	`dismou¡
(
Êush
));

671 i‡(
log
 && 
smÀvñ_0
::
loggög_íabÀd
) {

672 
logªc_t
* 
logªc
 = 
√w
Üogrec_t;

673 
	`w_as£π1
(
logªc
);

675 
	`√w
 (
logªc
Ë
	`dismou¡_vﬁ_log
(
	`_dev_«me
(
vid
), vid);

676 
logªc
->
	`fûl_x˘_©å
(
tid_t
::
nuŒ
, 
	`GëLa°Mou¡LSN
());

677 
l¢_t
 
theLSN
;

678 
	`W_COERCE
–
log
->
	`ö£π
(*
logªc
, &
theLSN
) );

679 
	`DBG
–<< "dismou¡_vﬁ_log(" << 
	`_dev_«me
(
vid
)

680 << 
ídl


681 << ", vid=" << 
vid
 << "Ël¢=" << 
theLSN
 << "ÖªvLSN=" << 
	`GëLa°Mou¡LSN
());;

682 
	`SëLa°Mou¡LSN
(
theLSN
);

684 
dñëe
 
logªc
;

687 
dñëe
 
vﬁ
[
i
];

688 
vﬁ
[
i
] = 0;

690 --
vﬁ_˙t
;

692 
	`SSMTEST
("io_m::_dismount.1");

694 
	`DBG
( << "_dismount done.");

695  
RCOK
;

696 
	}
}

706 
rc_t


707 
	gio_m
::
	$íabÀ_Áke_disk_œãncy
(
vid_t
 
vid
)

709 
auto_Àave_t
 
íãr
;

710 
i
 = 
	`_föd
(
vid
);

711 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

713 
vﬁ
[
i
]->
	`íabÀ_Áke_disk_œãncy
();

714  (
RCOK
);

715 
	}
}

717 
rc_t


718 
	gio_m
::
	$dißbÀ_Áke_disk_œãncy
(
vid_t
 
vid
)

720 
auto_Àave_t
 
íãr
;

721 
i
 = 
	`_föd
(
vid
);

722 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

724 
vﬁ
[
i
]->
	`dißbÀ_Áke_disk_œãncy
();

725  (
RCOK
);

726 
	}
}

728 
rc_t


729 
	gio_m
::
	$£t_Áke_disk_œãncy
(
vid_t
 
vid
, c⁄° 
adñay
)

731 
auto_Àave_t
 
íãr
;

732 
i
 = 
	`_föd
(
vid
);

733 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

735 i‡(!
vﬁ
[
i
]->
	`£t_Áke_disk_œãncy
(
adñay
))

736  
	`RC
(
eBADVOL
);

738  (
RCOK
);

739 
	}
}

751 
rc_t


752 
	gio_m
::
	$_gë_vﬁume_quŸa
(
vid_t
 
vid
, 
smksize_t
& 
quŸa_KB
, smksize_t& 
quŸa_u£d_KB
, 
uöt4_t
 &
u£d
)

754 
i
 = 
	`_föd
(
vid
);

755 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

757 
	`W_DO
–
vﬁ
[
i
]->
	`num_u£d_exts
(
u£d
) );

758 
quŸa_u£d_KB
 = 
u£d
*
ext_sz
*(
∑ge_sz
/1024);

760 
quŸa_KB
 = 
vﬁ
[
i
]->
	`num_exts
()*
ext_sz
*(
∑ge_sz
/1024);

761  
RCOK
;

762 
	}
}

774 "C" 
check_disk
(c⁄° 
vid_t
 &
vid
);

775 
	$check_disk
(c⁄° 
vid_t
 &
vid
)

777 
	`W_COERCE
(
io_m
::
	`check_disk
(
vid
));

778 
	}
}

783 
	#GRAB_R
 \

784 
lock_°©e
 
rme_node
; \

785 
vﬁ_t
 *
v
 = 
	`_föd_™d_gøb
(
vﬁid
, &
rme_node
, 
Ál£
); \

786 i‡(!
v
Ë 
	`RC
(
eBADVOL
); \

787 
auto_ªÀa£_r_t
<
VﬁumeLock
> 
	`ªÀa£_⁄_ªtu∫
(
v
->
	`vﬁ_muãx
());

	)

789 
	#GRAB_W
 \

790 
lock_°©e
 
wme_node
; \

791 
vﬁ_t
 *
v
 = 
	`_föd_™d_gøb
(
vﬁid
, &
wme_node
, 
åue
); \

792 i‡(!
v
Ë 
	`RC
(
eBADVOL
); \

793 
auto_ªÀa£_w_t
<
VﬁumeLock
> 
	`ªÀa£_⁄_ªtu∫
(
v
->
	`vﬁ_muãx
());

	)

795 
rc_t


796 
	gio_m
::
	$check_disk
(c⁄° 
vid_t
 &
vﬁid
)

798 
auto_Àave_t
 
íãr
;

799 
GRAB_R
;

801 
	`W_DO
–
v
->
	`check_disk
() );

803  
RCOK
;

804 
	}
}

812 
rc_t


813 
	gio_m
::
	$gë_√w_vid
(
vid_t
& 
vid
)

815 
auto_Àave_t
 
íãr
;

816 
vid
 = 
	`vid_t
(1); vid !
vid_t
::
nuŒ
; vid.
	`ö¸_loˇl
()) {

817 
i
 = 
	`_föd
(
vid
);

818 i‡(
i
 < 0Ë 
RCOK
;;

820  
	`RC
(
eNVOL
);

821 
	}
}

824 
vid_t


825 
	gio_m
::
	$gë_vid
(c⁄° 
lvid_t
& 
lvid
)

827 
auto_Àave_t
 
íãr
;

828  
	`_gë_vid
(
lvid
);

829 
	}
}

840 
rc_t


841 
	gio_m
::
	$ªad_∑ge
(c⁄° 
Õid_t
& 
pid
, 
∑ge_s
& 
buf
)

843 
	`FUNC
(
io_m
::
ªad_∑ge
);

850 i‡(
_m£c_disk_dñay
 > 0)

851 
	`me
()->
	`¶ìp
(
_m£c_disk_dñay
, "io_m::read_page");

853 
i
 = 
	`_föd
(
pid
.
	`vﬁ
());

854 i‡(
i
 < 0) {

855  
	`RC
(
eBADVOL
);

857 
	`DBG
–<< "ªadögÖage: " << 
pid
 );

859 
	`W_DO
–
vﬁ
[
i
]->
	`ªad_∑ge
(
pid
.
∑ge
, 
buf
) );

861 
	`INC_TSTAT
(
vﬁ_ªads
);

862 
buf
.
pid
.
_°id
.
vﬁ
 =Öid.
	`vﬁ
();

874 #i‡
W_DEBUG_LEVEL
 > 2

875 i‡(
buf
.
l¢1
 =
l¢_t
::
nuŒ
) {

876 if(
smÀvñ_1
::
log
 && 
smÀvñ_0
::
loggög_íabÀd
) {

877 
	`w_as£π3
(
buf
.
pid
.
∑ge
 == 0);

880 
	`w_as£π3
(
buf
.
pid
.
∑ge
 =pid.∑gê&& buf.pid.
	`vﬁ
() ==Öid.vol());

882 
	`DBG
(<<"buf.pid.∑ge=" << 
buf
.
pid
.
∑ge
 << " buf.l¢1=" << buf.
l¢1
);

885  
RCOK
;

886 
	}
}

898 
	gio_m
::
	$wrôe_m™y_∑ges
(c⁄° 
∑ge_s
* 
bufs
, 
˙t
)

901 
vid_t
 
vid
 = 
bufs
->
pid
.
	`vﬁ
();

902 
i
 = 
	`_föd
(
vid
);

903 
	`w_as£π1
(
i
 >= 0);

905 i‡(
_m£c_disk_dñay
 > 0)

906 
	`me
()->
	`¶ìp
(
_m£c_disk_dñay
, "io_m::write_many_pages");

908 #i‡
W_DEBUG_LEVEL
 > 2

910 
j
 = 1; j < 
˙t
; j++) {

911 
	`w_as£π1
(
bufs
[
j
].
pid
.
∑ge
 - 1 == bufs[j-1].pid.page);

912 
	`w_as£π1
(
bufs
[
j
].
pid
.
	`vﬁ
(Ë=
vid
);

917 
	`W_COERCE
–
vﬁ
[
i
]->
	`wrôe_m™y_∑ges
(
bufs
[0].
pid
.
∑ge
, bufs, 
˙t
) );

918 
	`INC_TSTAT
(
vﬁ_wrôes
);

919 
	`ADD_TSTAT
(
vﬁ_blks_wrôãn
, 
˙t
);

920 
	}
}

922 
rc_t


923 
	gio_m
::
	$_¥ime_ˇche
(
vﬁ_t
 *
v
, 
¢um_t
 
s
)

926 if(
v
->
	`is_¥imed
(
s
)Ë 
RCOK
;

929  
v
->
	`¥ime_ˇche
(
s
);

930 
	}
}

973 
boﬁ
 
	gdo_¥ime_ˇches
 = 
åue
;

975 
rc_t


976 
	gio_m
::
	$_Æloc_∑ges
(

977 c⁄° 
°id_t
& 
°id
,

978 c⁄° 
Õid_t
& 
√¨_p
,

979 
≈ages
,

980 & 
ngŸ
,

981 
Õid_t
 
pids
[],

982 
boﬁ
 
may_ªÆloc
,

983 
lock_mode_t
 
desúed_lock_mode
,

984 
boﬁ
 
£¨ch_fûe


987 
	`FUNC
(
io_m
::
_Æloc_∑ges
);

988 
auto_Àave_t
 
íãr
;

993 
	`DBG
(<<"°id " << 
°id
);

994 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

996 
GRAB_W
;

999 if(
do_¥ime_ˇches
Ë
	`W_DO
(
	`_¥ime_ˇche
(
v
, 
°id
.
°‹e
));

1001 
Æloc_∑ge_fûãr_yes_t
 
ok
;

1003 
rc_t
 
r
 =

1004 
	`_Æloc_∑ges_wôh_vﬁ_muãx
(

1005 &
ok
,

1006 
v
, 
°id
, 
√¨_p
, 
≈ages
, 
ngŸ
, 
pids
,

1007 
may_ªÆloc
, 
desúed_lock_mode
, 
£¨ch_fûe
);

1009  
r
;

1010 
	}
}

1046 
rc_t


1047 
	gio_m
::
	$Æloc_a_fûe_∑ge
(

1048 
Æloc_∑ge_fûãr_t
 *
fûãr
,

1049 c⁄° 
°id_t
& 
fid
,

1050 c⁄° 
Õid_t
& 
√¨_p
,

1057 
Õid_t
& 
ÆlocPid
,

1058 
lock_mode_t
 
desúed_lock_mode
,

1059 
boﬁ
 
£¨ch_fûe


1062 
	`FUNC
(
io_m
::
Æloc_a_fûe_∑ge
);

1063 
auto_Àave_t
 
íãr
;

1064 
vid_t
 
vﬁid
 = 
fid
.
vﬁ
;

1066 
GRAB_W
;

1069 if(
do_¥ime_ˇches
Ë
	`W_DO
(
	`_¥ime_ˇche
(
v
, 
fid
.
°‹e
));

1081 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
	`x˘
(), 
__LINE__
, 
__FILE__
);

1082 
auto_ªÀa£_™ch‹_t
 
	`auto_™ch‹
(
åue
 , 
__LINE__
);

1085 
ngŸ
=0;

1086 
	`W_DO
–
	`_Æloc_∑ges_wôh_vﬁ_muãx
(

1087 
fûãr
,

1088 
v
, 
fid
, 
√¨_p
, 1, 
ngŸ
,

1089 &
ÆlocPid
,

1095 
Ál£
,

1097 
desúed_lock_mode
, 
£¨ch_fûe
));

1099 
	`w_as£π1
(
ngŸ
 == 1);

1100 
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());

1101 
fûãr
->
	`check
();

1111 
auto_™ch‹
.
	`com≥nßã
();

1123 
rc_t
 
rc
 = 
	`log_Æloc_fûe_∑ge
(
ÆlocPid
);

1124 
cou¡
=10;

1125 
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eRETRY
Ë&& (--
cou¡
 > 0)) {

1126 
rc
 = 
	`log_Æloc_fûe_∑ge
(
ÆlocPid
);

1128 if(
rc
.
	`is_îr‹
()) {

1133 
	`Ârötf
(
°dîr
, "couldÇotÜog_alloc_file_page\n");

1134 
rc
 = 
	`_‰ì_∑ge
(
ÆlocPid
, 
v
, 
Ál£
 );

1143 
	`W_COERCE
(
rc
);

1151 
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());

1152 
fûãr
->
	`check
();

1153  
RCOK
;

1154 
	}
}

1156 
rc_t


1157 
	gio_m
::
	$Æloc_a_∑ge
(

1158 c⁄° 
°id_t
& 
°id
,

1159 c⁄° 
Õid_t
& 
√¨_p
,

1160 
Õid_t
& 
pid
,

1161 
boﬁ
 
may_ªÆloc
,

1162 
lock_mode_t
 
desúed_lock_mode
,

1163 
boﬁ
 
£¨ch_fûe


1166 
	`FUNC
(
io_m
::
Æloc_a_∑ge
);

1167 
ngŸ
=0;

1168  
	`_Æloc_∑ges
(
°id
, 
√¨_p
,

1169 1, 
ngŸ
, &
pid
, 
may_ªÆloc
, 
desúed_lock_mode
, 
£¨ch_fûe
);

1170 
	}
}

1179 
rc_t


1180 
	gio_m
::
	$Æloc_∑ge_group
(

1181 c⁄° 
°id_t
& 
°id
,

1182 c⁄° 
Õid_t
& 
√¨_p
,

1183 
˙t
,

1184 
Õid_t
 
pids
[],

1185 
lock_mode_t
 
desúed_lock_mode


1188 
	`FUNC
(
io_m
::
Æloc_∑ge_group
);

1189 
	`w_as£π1
(
desúed_lock_mode
==
IX
);

1191 
ngŸ
=0;

1192 
	`DBG
(<<"áŒoc_∑ge_grou∞w™t†" << 
˙t
 << "Öages" );

1193 
w_rc_t
 
rc
 = 
	`_Æloc_∑ges
(
°id
, 
√¨_p
,

1194 
˙t
, 
ngŸ
, 
pids
,

1195 
Ál£
 ,

1196 
desúed_lock_mode
,

1197 
Ál£
 );

1205 if(
ngŸ
 < 
˙t
) {

1206 
	`w_as£π1
(
rc
.
	`is_îr‹
());

1207 
	`DBG
(<<"Æloc_∑ge_grou∞w™à" << 
˙t
 << " gŸ " << 
ngŸ


1208 << "Éº‹=" << 
rc
);

1211 
i
=0; i < 
ngŸ
; i++) {

1212 
	`DBG
(<<"Æloc_∑ge_grou∞‰ìögÖids["<< 
i
<< " ]=" << 
pids
[i]);

1213 
	`W_COERCE
(
	`‰ì_∑ge
(
pids
[
i
], 
Ál£
 ));

1216 
	`w_as£π1
(!
rc
.
	`is_îr‹
());

1223  
rc
;

1224 
	}
}

1226 ˛as†
	caut€ø£_t
 {

1227 
	mpublic
:

1228 
	$aut€ø£_t
(
vﬁ_t
 *
v
, 
¢um_t
 
¢um
Ë: 
	`_v
(v), 
	$_°‹e
(
¢um
) {}

1229 ~
	$aut€ø£_t
() {

1230 
exäum_t
 
e
;

1231 
size_t
 
i
 = 
_li°
.
	`size
();

1232  
i
-- > 0 ) {

1233 
e
 = 
_li°
.
	`back
();

1234 
	`w_as£π1
(
e
);

1235 
	`DBG
(<<"Éøsög (°‹e,exã¡Ë" << 
_°‹e


1236 << "," << 
e
);

1237 
_v
->
	`‰ì_ext_ˇche
().
	`îa£
(
_°‹e
, 
e
);

1238 
_li°
.
	`p›_‰⁄t
();

1240 
	}
}

1241 
	$add
(
exäum_t
 
e
) {

1242 
	`DBG
(<<"áddögÉxã¡ " << 
e
 << " f‹ st‹ê" << 
_°‹e
);

1243 
_li°
.
	`push_back
(
e
);

1244 
	}
}

1246 
	g¥iv©e
:

1247 
°d
::
li°
<
exäum_t
> 
_li°
;

1248 
vﬁ_t
* 
	g_v
;

1249 
¢um_t
 
	g_°‹e
;

1275 
rc_t


1276 
	gio_m
::
	$_Æloc_∑ges_wôh_vﬁ_muãx
(

1277 
Æloc_∑ge_fûãr_t
 *
fûãr
,

1278 
vﬁ_t
 * 
v
,

1279 c⁄° 
°id_t
& 
°id
,

1280 c⁄° 
Õid_t
& 
√¨_p
,

1287 
≈agesw™ãd
,

1288 &
Pcou¡
,

1289 
Õid_t
 
pids
[],

1290 
boﬁ
 
may_ªÆloc
,

1291 
lock_mode_t
 
desúed_lock_mode
,

1292 
boﬁ
 
£¨ch_fûe


1296 c⁄° 
	`≈ages
(
≈agesw™ãd
);

1297 
Pcou¡
 = 0;

1299 
	`FUNC
(
io_m
::
_Æloc_∑ges_wôh_vﬁ_muãx
);

1300 
	`w_as£π2
(
≈ages
 > 0);

1310 
exäum_t
 
œ°_ext_ö_°‹e
 = 0;

1311 
boﬁ
 
is_œ°_ext_ö_°‹e
 = 
Ál£
;

1325 
exäum_t
 
exã¡
=0;

1326 
ƒesvd
=0;

1328 
boﬁ
 
nŸ_w‹th_åyög
=
Ál£
;

1333 
Õid_t
 
√¨_pid
 =Üpid_t::
nuŒ
;

1335 i‡(&
√¨_p
 =&
Õid_t
::
eof
) {

1336 
	`W_DO
(
v
->
	`œ°_ª£rved_∑ge
(
°id
.
°‹e
, 
√¨_pid
, 
nŸ_w‹th_åyög
));

1337 
	`w_as£π9
(
√¨_pid
.
∑ge
);

1338 
is_œ°_ext_ö_°‹e
 = 
åue
;

1339 } i‡(&
√¨_p
 =&
Õid_t
::
bof
) {

1340 
	`W_DO
(
v
->
	`fú°_∑ge
(
°id
.
°‹e
, 
√¨_pid
, &
nŸ_w‹th_åyög
));

1341 
	`w_as£π9
(
√¨_pid
.
∑ge
);

1342 } i‡(
√¨_p
.
∑ge
) {

1343 
√¨_pid
 = 
√¨_p
;

1346 
	`DBGTHRD
(<<"√¨_pid = " << 
√¨_pid
);

1355 if(
√¨_pid
.
∑ge
) {

1357 
	`DBGTHRD
(<<"givíÇór_pid " << 
√¨_pid
);

1358 
exã¡
 = 
v
->
	`pid2ext
(
√¨_pid
);

1360 if–
exã¡
 && !
v
->
	`is_Æloc_ext_of
”xã¡, 
°id
.
°‹e
) ) {

1362 
√¨_pid
 = 
Õid_t
::
nuŒ
;

1364 
ƒesvd
=1;

1367 if(!
√¨_pid
.
∑ge
) {

1368 
	`W_DO
(
v
->
	`œ°_ª£rved_∑ge
(
°id
.
°‹e
,
√¨_pid
, 
nŸ_w‹th_åyög
));

1369 
	`DBGTHRD
(<<"gŸÜa°Öagê" << 
√¨_pid
);

1370 
	`w_as£π1
(
√¨_pid
.
∑ge
);

1371 
is_œ°_ext_ö_°‹e
 = 
åue
;

1373 
ƒesvd
 = 
nŸ_w‹th_åyög
? 0: 1;

1374 if(
√¨_pid
.
∑ge
) {

1375 
exã¡
 = 
v
->
	`pid2ext
(
√¨_pid
);

1377 
	`w_as£π1
(
exã¡
 != 0);

1379 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
exã¡
, 
°id
.
°‹e
));

1382 if(
is_œ°_ext_ö_°‹e
) {

1383 
œ°_ext_ö_°‹e
 = 
exã¡
;

1386 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
exã¡
, 
°id
.
°‹e
));

1393 
eff
 = 100;

1394 #i‡
COMMENT


1395 
eff
 = 
v
->
	`fûl_Á˘‹
(
°id
.
°‹e
);

1396 if(
eff
 < 100) {

1402  
	`RC
(
fcNOTIMPLEMENTED
);

1412 if(!
£¨ch_fûe
) {

1413 
ªmaöög_ö_ext
=0;

1414 
Æloˇãd
 = 0;

1415 
	`W_DO
(
v
->
	`Æloc_∑ges_ö_ext
(

1416 
fûãr
,

1417 !
£¨ch_fûe
,

1418 
exã¡
,

1419 
eff
,

1420 
°id
.
°‹e
,

1421 
≈ages
-
Pcou¡
,

1422 
pids
+
Pcou¡
,

1423 
Æloˇãd
,

1424 
ªmaöög_ö_ext
,

1425 
is_œ°_ext_ö_°‹e
,

1426 
may_ªÆloc
,

1427 
desúed_lock_mode
));

1428 
	`W_IFDEBUG1
(if(
Æloˇãd
==1Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

1429 
fûãr
->
	`check
();

1431 
Pcou¡
 +
Æloˇãd
;

1432 
ƒesvd
 -
Æloˇãd
;

1434 
	`w_as£π3
(
Pcou¡
 <
≈ages
);

1435 if(
Pcou¡
 =
≈ages
) {

1436 
	`DBGTHRD
–<< "Æloˇãd " << 
≈ages
);

1437 
	`ADD_TSTAT
(
∑ge_Æloc_˙t
, 
Pcou¡
);

1438  
RCOK
;

1444 if(
£¨ch_fûe
)

1460 
boﬁ
 
mu°_£¨ch
 = 
Ál£
;

1462 
aut€ø£_t
 
	`‰om_ext_ˇche
(
v
, 
°id
.
°‹e
);

1474 
‰ì_cou¡
 = 
v
->
	`‰ì_ext_ˇche
().
	`cou¡
(
°id
.
°‹e
);

1475 if(
‰ì_cou¡
 > 0)

1477 
vﬁ_t
::
ext_ˇche_t
::
ˇche_ôî©‹
 
lo
 =

1478 
v
->
	`‰ì_ext_ˇche
().
	`lowî_bound
(
°id
.
°‹e
);

1480 
known
;

1482 
known
=0;

1483 
Pcou¡
 < 
≈ages
 && 
lo
 !
v
->
	`‰ì_ext_ˇche
().
	`íd
()

1484 && 
lo
->
¢um
 =
°id
.
°‹e
;

1485 
known
++)

1488 
ªmaöög_ö_ext
=0;

1489 
Æloˇãd
=0;

1493 
exäum_t
 
E
 = 
lo
->
ext
;

1494 if–! 
v
->
	`is_Æloc_ext_of
(
E
, 
°id
.
°‹e
) )

1501 #i‡
W_DEBUG_LEVEL
 > 1

1503 
exäum_t
 
E
 = 
lo
->
ext
;

1504 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
E
, 
°id
.
°‹e
));

1505 
	`DBGTHRD
(

1506 << "Üo->exà" << 
E


1507 << " st‹ê" << 
°id


1508 << " fªe_cou¡ " << 
‰ì_cou¡


1509 << " know¿" << 
known


1510 << " Pcou¡ " << 
Pcou¡


1511 << "Ç∑ge†" << 
≈ages


1512 << "Üo->exà " << 
E
);

1516 
	`W_DO
(
v
->
	`Æloc_∑ges_ö_ext
(

1517 
fûãr
,

1518 !
£¨ch_fûe
,

1519 
lo
->
ext
,

1520 
eff
,

1521 
°id
.
°‹e
,

1522 
≈ages
-
Pcou¡
,

1523 
pids
+
Pcou¡
,

1524 
Æloˇãd
,

1525 
ªmaöög_ö_ext
,

1526 
is_œ°_ext_ö_°‹e
,

1527 
may_ªÆloc
,

1528 
desúed_lock_mode
));

1529 
	`W_IFDEBUG1
(if(
Æloˇãd
==1Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

1530 
fûãr
->
	`check
();

1538 #i‡
W_DEBUG_LEVEL
 > 2

1540 
exäum_t
 
E
 = 
lo
->
ext
;

1541 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
E
, 
°id
.
°‹e
));

1542 
	`DBGTHRD
(

1543 << "Üo->exà" << 
E


1544 << " st‹ê" << 
°id


1545 << "áŒoˇãd " << 
Æloˇãd


1546 << "Ñemaöög_ö_exà" << 
ªmaöög_ö_ext


1547 << " is_œ°_ext_ö_°‹ê" << 
is_œ°_ext_ö_°‹e


1548 << " may_ªÆlo¯" << 
may_ªÆloc


1549 << " desúed_lock_modê" << 
desúed_lock_mode


1553 if(
Æloˇãd
 > 0) {

1554 
	`ADD_TSTAT
(
vﬁ_ªsv_ˇche_hô
, 
Æloˇãd
);

1556 
	`INC_TSTAT
(
vﬁ_ªsv_ˇche_Áû
);

1558 
Pcou¡
 +
Æloˇãd
;

1559 
ƒesvd
 -
Æloˇãd
;

1561 if(
ªmaöög_ö_ext
 == 0) {

1565 
‰om_ext_ˇche
.
	`add
(
lo
->
ext
);

1566 
lo
++;

1567 if(
‰ì_cou¡
 > 0) {

1570 
‰ì_cou¡
--;

1571 
known
--;

1576 ++
lo
;

1581 if(
known
 !
‰ì_cou¡
) {

1583 
mu°_£¨ch
 = 
åue
;

1587 if(
mu°_£¨ch
)

1589 
	`INC_TSTAT
(
io_m_löór_£¨ches
);

1601 
exäum_t
 
°¨tög_poöt
 = 
exã¡
;

1602 
	`DBGTHRD
(<<"°¨tögÖoöt=" << 
exã¡


1603 << "Çªsvd=" << 
ƒesvd


1606 #i‡
W_DEBUG_LEVEL
 > 4

1607 
	`DBGTHRD
–<< " mu°_£¨ch " << 
mu°_£¨ch


1608 << "Çªsvd " << 
ƒesvd


1609 << " Pcou¡ " << 
Pcou¡


1610 << "Ç∑ge†" << 
≈ages
);

1613  (
ƒesvd
>0Ë&& (
Pcou¡
 < 
≈ages
Ë&& (
exã¡
 != 0) ) {

1614 
	`INC_TSTAT
(
io_m_löór_£¨ch_exã¡s
);

1623 
ªmaöög_ö_ext
=0;

1624 
Æloˇãd
=0;

1626 
is_œ°_ext_ö_°‹e
 = 
Ál£
;

1628 
	`W_DO
(
v
->
	`Æloc_∑ges_ö_ext
(

1629 
fûãr
,

1630 !
£¨ch_fûe
,

1631 
exã¡
,

1632 
eff
,

1633 
°id
.
°‹e
,

1634 
≈ages
 - 
Pcou¡
,

1635 
pids
 + 
Pcou¡
,

1636 
Æloˇãd
,

1637 
ªmaöög_ö_ext
,

1638 
is_œ°_ext_ö_°‹e
,

1639 
may_ªÆloc
,

1640 
desúed_lock_mode
));

1642 
	`W_IFDEBUG1
(if(
Æloˇãd
==1Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

1643 
fûãr
->
	`check
();

1651 if(
is_œ°_ext_ö_°‹e
) {

1652 
œ°_ext_ö_°‹e
 = 
exã¡
;

1655 
	`DBGTHRD
(<<" ALLOCATED " << 
Æloˇãd


1656 <<"Ñeque°ed=" << 
≈ages
-
Pcou¡


1657 << "Öage†ö " << 
exã¡


1658 << "Ñemaöög: " << 
ªmaöög_ö_ext


1659 << "Çªsvd" << 
ƒesvd


1660 << " is_œ°_ext_ö_°‹ê" << 
°id
.
°‹e


1661 << " = " << 
is_œ°_ext_ö_°‹e


1668 
Pcou¡
 +
Æloˇãd
;

1669 
ƒesvd
 -
Æloˇãd
;

1671 #i‡
W_DEBUG_LEVEL
 > 4

1677 if(
ªmaöög_ö_ext
 > 
ƒesvd
) {

1678 
ƒesvd
 = 
ªmaöög_ö_ext
;

1680 
	`w_as£π9
(
ƒesvd
 >= 0);

1681 
	`w_as£π9
(
ªmaöög_ö_ext
 <
ƒesvd
);

1684 if(
Pcou¡
 < 
≈ages
) {

1686 
exäum_t
 
åy_√xt
=0;

1693 if(
£¨ch_fûe
) {

1694 if(
is_œ°_ext_ö_°‹e
) {

1695 
	`W_DO
(
v
->
	`fú°_ext
(
°id
.
°‹e
, 
åy_√xt
));

1697 
	`W_DO
(
v
->
	`√xt_ext
(
exã¡
, 
åy_√xt
));

1701 
ƒesvd
 = 0;

1703 
	`DBGTHRD
(

1704 << "Åry_√xà" << 
åy_√xt


1705 << " sèπög_poöà" << 
°¨tög_poöt


1706 << "Éxã¡ " << 
exã¡


1707 << "Çªsvd " << 
ƒesvd


1711 if(
åy_√xt
 =
°¨tög_poöt
) {

1719 
ƒesvd
 = 0;

1721 
exã¡
 = 
åy_√xt
;

1722 
	`INC_TSTAT
(
exã¡_l£¨ch
);

1738 i‡(
Pcou¡
 < 
≈ages
)

1743 
X√eded
 = 0;

1747 #i‡
W_DEBUG_LEVEL
 > 2

1748 
_ext_sz
 = 
v
->
	`ext_size
(Ë* 
eff
 / 100;

1749 
	`w_as£π3
(
_ext_sz
 > 0);

1751 
X√eded
 = (
≈ages
 - 
Pcou¡
 - 1Ë/ 
ext_sz
 + 1;

1754 #i‡
W_DEBUG_LEVEL
 > 4

1755 
	`DBGTHRD
–<< " X√eded " << 
X√eded


1756 << "Ç∑ge†" << 
≈ages


1757 << " Pcou¡ " << 
Pcou¡
);

1765 
exäum_t
* 
exã¡li°
 = 0;

1766 
exã¡li°
 = 
√w
 
exäum_t
[
X√eded
];

1767 i‡(! 
exã¡li°
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

1768 
w_auto_dñëe_¨øy_t
<
exäum_t
> 
	`autodñ
(
exã¡li°
);

1773 
numfound
=0;

1778 
rc_t
 
rc
 = 
v
->
	`föd_‰ì_exts
(
X√eded
, 
exã¡li°
, 
numfound
, 0);

1779 #i‡
W_DEBUG_LEVEL
 > 2

1780 i‡(
	`shpid_t
(
numfound
 * 
v
->
	`ext_size
()Ë< shpid_t(
≈ages
 - 
Pcou¡
)) {

1783 
	`w_as£π3
(
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eOUTOFSPACE
));

1784 
rc
.
	`ª£t
();

1787 i‡(
rc
.
	`is_îr‹
()) {

1796 if(
rc
.
	`îr_num
(Ë=
eOUTOFSPACE
) {

1797 if((
eff
 < 100) ) {

1798 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

1800 c⁄° *
visibÀ
=

1802 
	`Ârötf
(
°dîr
,

1803 "\n\¿%s\n%†©Üöê%d fûê%s\n", 
visibÀ
,

1805 
__LINE__
, 
__FILE__
 );

1806 
	`Ârötf
(
°dîr
, "%s\n",
visibÀ
);

1807 
	`io°›hîe
();

1809  
rc
;

1812 
	`W_FATAL
(
rc
.
	`îr_num
());

1816 
	`w_as£π1
(
numfound
 =
X√eded
);

1835 #unde‡
USE_EMPTY_EXT_FOUND


1836 #ifde‡
USE_EMPTY_EXT_FOUND


1837 
°¨tög_ext
 = 0;

1838 
√eded_exts
 = 
X√eded
;

1843 if–
œ°_ext_ö_°‹e
==0 )

1854 
boﬁ
 
	`is_em±y
(
åue
);

1855 
	`W_DO
(
v
->
	`œ°_exã¡
(
°id
.
°‹e
, 
œ°_ext_ö_°‹e
, &
is_em±y
));

1858 
	`w_as£π1
(
œ°_ext_ö_°‹e
 != 0);

1859 
	`w_as£π3
(
v
->
	`is_Æloc_ext_of
(
œ°_ext_ö_°‹e
, 
°id
.
°‹e
));

1860 #ifde‡
USE_EMPTY_EXT_FOUND


1861 if(
is_em±y
)

1871 
√eded_exts
-- ;

1872 
kk
=
√eded_exts
; kk > 0; kk--)

1877 
exã¡li°
[
kk
] =Éxtentlist[kk-1];

1879 
exã¡li°
[0] = 
œ°_ext_ö_°‹e
;

1880 
°¨tög_ext
 = 1;

1885 #ifde‡
USE_EMPTY_EXT_FOUND


1886 if(
√eded_exts
>0)

1891 
	`W_DO
(
v
->
	`Æloc_exts
(
°id
.
°‹e
,
œ°_ext_ö_°‹e
, 
√eded_exts
,

1892 &
exã¡li°
[
°¨tög_ext
]));

1893 #i‡
W_DEBUG_LEVEL
 > 2

1894 
kk
 = 
°¨tög_ext
; kk< 
√eded_exts
; kk++) {

1895 
	`w_as£π3
(
v
->
	`is_Æloc_ext_of
(
exã¡li°
[
kk
], 
°id
.
°‹e
));

1901 
	`W_DO
(
v
->
	`Æloc_exts
(
°id
.
°‹e
,
œ°_ext_ö_°‹e
,
X√eded
,
exã¡li°
));

1903 #i‡
W_DEBUG_LEVEL
 > 2

1904 
kk
 = 0; kk< 
X√eded
; kk++) {

1905 
	`w_as£π3
(
v
->
	`is_Æloc_ext_of
(
exã¡li°
[
kk
], 
°id
.
°‹e
));

1911 #ifde‡
USE_EMPTY_EXT_FOUND


1917 
ƒesvd
 = (
X√eded
 * 
v
->
	`ext_size
());

1924 
ªmaöög_ö_ext
=0;

1925 
i
=0;

1926 
i
 = 0; i < 
X√eded
 && 
Pcou¡
 < 
≈ages
; i++)

1928 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
exã¡li°
[
i
], 
°id
.
°‹e
));

1930 i‡(
i
 =
X√eded
 - 1Ë
eff
 = 100;

1932 
PÆloˇãd
 =0;

1933 
	`W_COERCE
(

1934 
v
->
	`Æloc_∑ges_ö_ext
(

1935 
fûãr
,

1936 !
£¨ch_fûe
,

1937 
exã¡li°
[
i
], 
eff
,

1938 
°id
.
°‹e
, 
≈ages
 - 
Pcou¡
,

1939 
pids
 + 
Pcou¡
, 
PÆloˇãd
,

1940 
ªmaöög_ö_ext
,

1941 
is_œ°_ext_ö_°‹e
,

1942 
may_ªÆloc
, 
desúed_lock_mode


1944 
	`W_IFDEBUG1
(if(
PÆloˇãd
==1Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

1945 
fûãr
->
	`check
();

1952 
	`w_as£π1
(
v
->
	`is_Æloc_ext_of
(
exã¡li°
[
i
], 
°id
.
°‹e
));

1955 
	`DBGTHRD
(<<"ALLOCATED " << 
PÆloˇãd


1956 << "Öage†ö " << 
exã¡li°
[
i
]

1957 << "Ñemaöög: " << 
ªmaöög_ö_ext


1960 
Pcou¡
 +
PÆloˇãd
;

1963 
ƒesvd
 -
PÆloˇãd
;

1964 
exã¡
 = 
exã¡li°
[
i
];

1970 if(
PÆloˇãd
>0 && 
ªmaöög_ö_ext
) {

1971 
v
->
	`‰ì_ext_ˇche
().
	`ö£π
(
°id
.
°‹e
, 
exã¡li°
[
i
]);

1981 
	`w_as£π2
(
is_œ°_ext_ö_°‹e
);

1983 if(
Pcou¡
 !
≈ages
 || 
i
 !
X√eded
) {

1984 
	`Ârötf
(
°dîr
, "Pcount %d !=Çpages %d; %d !- Xneeded %d",

1985 
Pcou¡
, 
≈ages
, 
i
, 
X√eded
);

1986 
	`w_as£π1
(
Pcou¡
 =
≈ages
);

1987 
	`w_as£π1
(
i
 =
X√eded
);

1998 
	`w_as£π1
(
Pcou¡
 =
≈ages
);

1999 
	`DBGTHRD
–<< "Æloˇãd " << 
≈ages
);

2000 
	`ADD_TSTAT
(
∑ge_Æloc_˙t
, 
Pcou¡
);

2002 
	`W_IFDEBUG1
(if(
≈ages
 > 0Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

2004  
RCOK
;

2005 
	}
}

2015 
rc_t


2016 
	gio_m
::
	$‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
, 
boﬁ
 
check_°‹e_membîshù
)

2018 
	`FUNC
(
io_m
::
‰ì_∑ge
);

2019 
auto_Àave_t
 
íãr
;

2021 
vid_t
 
vﬁid
 = 
pid
.
	`vﬁ
();

2022 
GRAB_W
;

2023 
	`w_as£π3
(
v
->
	`vid
(Ë=
pid
.
	`vﬁ
());

2025  
	`_‰ì_∑ge
(
pid
, 
v
, 
check_°‹e_membîshù
);

2026 
	}
}

2028 
rc_t


2029 
	gio_m
::
	$_‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
, 
vﬁ_t
 *
v
, 
boﬁ
 
check_°‹e_membîshù
)

2056 
	`DBGTHRD
(<<"‰ìögÖagê" << 
pid
 );

2060 
	`W_DO
–
v
->
	`‰ì_∑ge
(
pid
, 
check_°‹e_membîshù
) );

2062 
	`DBGTHRD
–<< "‰ìdÖid: " << 
pid
 );

2064 
	`INC_TSTAT
(
∑ge_dóŒoc_˙t
);

2066 
exäum_t
 
ext
 = 
v
->
	`pid2ext
(
pid
);

2067 
v
->
	`‰ì_ext_ˇche
().
	`ö£π
(
pid
.
	`°id
().
°‹e
, 
ext
);

2069 
	`w_as£π9
(
v
->
	`vid
(Ë=
pid
.
	`vﬁ
());

2071  
RCOK
;

2072 
	}
}

2088 
boﬁ


2089 
	gio_m
::
	$is_vÆid_∑ge_of
(c⁄° 
Õid_t
& 
pid
, 
¢um_t
 
s
)

2091 
	`FUNC
(
io_m
::
is_vÆid_∑ge_of
);

2092 
auto_Àave_t
 
íãr
;

2093 
vid_t
 
vﬁid
 = 
pid
.
_°id
.
vﬁ
;

2096 
lock_°©e
 
rme_node
 ;

2097 
vﬁ_t
 *
v
 = 
	`_föd_™d_gøb
(
vﬁid
, &
rme_node
, 
Ál£
);

2098 i‡(!
v
Ë 
Ál£
;

2099 
auto_ªÀa£_r_t
<
VﬁumeLock
> 
	`ªÀa£_⁄_ªtu∫
(
v
->
	`vﬁ_muãx
());

2101 
boﬁ
 
ªsu…
 = 
v
->
	`is_vÆid_∑ge_of
(
pid
, 
s
);

2103  
ªsu…
;

2105 
	}
}

2115 
rc_t


2116 
	gio_m
::
	$_£t_°‹e_Êags
(c⁄° 
°id_t
& 
°id
, 
°‹e_Êag_t
 
Êags
, 
boﬁ
 
sync_vﬁume
)

2118 
	`FUNC
(
io_m
::
_£t_°‹e_Êags
);

2119 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2120 
GRAB_W
;

2122 
	`W_DO
–
v
->
	`£t_°‹e_Êags
(
°id
.
°‹e
, 
Êags
, 
sync_vﬁume
) );

2123 i‡((
Êags
 & 
°_ö£π_fûe
Ë&& !
smÀvñ_0
::
	`ö_ªcovîy
()) {

2124 
	`x˘
()->
	`AddLﬂdSt‹e
(
°id
);

2126  
RCOK
;

2127 
	}
}

2137 
rc_t


2138 
	gio_m
::
	$gë_°‹e_Êags
(c⁄° 
°id_t
& 
°id
, 
°‹e_Êag_t
& 
Êags
)

2145 
i
 = 
	`_föd
(
°id
.
vﬁ
);

2146 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2147 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2149 i‡(!
v
Ë
	`W_FATAL
(
eINTERNAL
);

2150 
	`W_DO
–
v
->
	`gë_°‹e_Êags
(
°id
.
°‹e
, 
Êags
) );

2151  
RCOK
;

2152 
	}
}

2167 
rc_t


2168 
	gio_m
::
	$¸óã_°‹e
(

2169 
vid_t
 
vﬁid
,

2170 
eff
,

2171 
°‹e_Êag_t
 
Êags
,

2172 
°id_t
& 
°id
,

2173 
exäum_t
 
fú°_ext
,

2174 
exäum_t
 
num_exts
)

2176 
rc_t
 
r
;

2178 
auto_Àave_t
 
íãr
;

2180 
r
 = 
	`_¸óã_°‹e
(
vﬁid
, 
eff
, 
Êags
, 
°id
, 
fú°_ext
, 
num_exts
);

2184 if(
r
.
	`is_îr‹
()) Ñ;

2187 i‡(
Êags
 & 
°_lﬂd_fûe
 || fœg†& 
°_ö£π_fûe
) {

2188 
	`x˘
()->
	`AddLﬂdSt‹e
(
°id
);

2191  
r
;

2192 
	}
}

2194 
rc_t


2195 
	gio_m
::
	$_¸óã_°‹e
(

2196 
vid_t
 
vﬁid
,

2197 
eff
,

2198 
°‹e_Êag_t
 
Êags
,

2199 
°id_t
& 
°id
,

2200 
exäum_t
 
fú°_ext
,

2201 
exäum_t
 
num_exã¡s
)

2203 
	`FUNC
(
io_m
::
¸óã_°‹e
);

2204 
	`w_as£π1
(
Êags
);

2206 
GRAB_W
;

2211 
°id
.
vﬁ
 = 
vﬁid
;

2212 
	`W_DO
(
v
->
	`föd_‰ì_°‹e
(
°id
.
°‹e
));

2214 
rc_t
 
rc
;

2216 
exäum_t
 *
ext
 = 0;

2217 if(
num_exã¡s
>0) {

2218 
ext
 = 
√w
 
exäum_t
[
num_exã¡s
];

2219 
	`w_as£π1
(
ext
);

2222 
w_auto_dñëe_¨øy_t
<
exäum_t
> 
	`autodñ
(
ext
);

2224 if(
num_exã¡s
>0) {

2228 
found
;

2229 
	`W_DO
(
v
->
	`föd_‰ì_exts
(
num_exã¡s
, 
ext
, 
found
, 
fú°_ext
));

2230 
	`w_as£π2
(
found
 =(
num_exã¡s
));

2232 i‡(
v
->
	`ext_size
(Ë* 
eff
 / 100 == 0)

2233 
eff
 = 99 / 
v
->
	`ext_size
() + 1;

2244 i‡(
Êags
 & 
°_lﬂd_fûe
) {

2245 
Êags
 = (
°‹e_Êag_t
Ë(Êag†| 
°_tmp
);

2255 
	`DBG
(<<"abouàtÿÆloc_°‹ê" << 
°id
.
°‹e
);

2256 
	`W_DO
–
v
->
	`Æloc_°‹e
(
°id
.
°‹e
, 
eff
, 
Êags
) );

2258 if(
num_exã¡s
> 0) {

2259 
	`W_DO
–
v
->
	`Æloc_exts
(
°id
.
°‹e
, 0 ,

2260 
num_exã¡s
, 
ext
) );

2261 
	`w_as£π3
(
v
->
	`is_Æloc_ext_of
(
ext
[0], 
°id
.
°‹e
));

2264  
rc
;

2265 
	}
}

2283 
rc_t


2284 
	gio_m
::
	$de°roy_°‹e
(c⁄° 
°id_t
& 
°id
, 
boﬁ
 
acquúe_lock
)

2286 
	`FUNC
(
io_m
::
de°roy_°‹e
);

2287 
auto_Àave_t
 
íãr
;

2288 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2290 
GRAB_W
;

2292 i‡(!
v
->
	`is_vÆid_°‹e
(
°id
.
°‹e
)) {

2293 
	`DBG
(<<"destroy_store: BADSTID");

2294  
	`RC
(
eBADSTID
);

2296 
	`W_DO
–
v
->
	`‰ì_°‹e
(
°id
.
°‹e
, 
acquúe_lock
) );

2297 
v
->
	`‰ì_ext_ˇche
().
	`îa£_Æl
(
°id
.
°‹e
);

2298 
°‹e_œtches
.
	`de°roy_œtches
(
°id
);

2300  
RCOK
;

2301 
	}
}

2313 
rc_t


2314 
	gio_m
::
	$‰ì_°‹e_a·î_x˘
(c⁄° 
°id_t
& 
°id
)

2316 
auto_Àave_t
 
íãr
;

2317 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2319 
GRAB_W
;

2321 
	`W_DO
–
v
->
	`‰ì_°‹e_a·î_x˘
(
°id
.
°‹e
) );

2323  
RCOK
;

2324 
	}
}

2334 
rc_t


2335 
	gio_m
::
	$‰ì_ext_a·î_x˘
(c⁄° 
extid_t
& 
extid
)

2337 
auto_Àave_t
 
íãr
;

2338 
vid_t
 
vﬁid
 = 
extid
.
vﬁ
;

2340 
GRAB_W
;

2342 
¢um_t
 
ow√r
=0;

2343 
	`W_DO
–
v
->
	`‰ì_ext_a·î_x˘
(
extid
.
ext
, 
ow√r
) );

2345 
	`DBG
(<<"_‰ì_ext_a·î_x˘ " << 
extid
 );

2348 
°id_t
 
	`°id
(
vﬁid
, 
ow√r
);

2350 
v
->
	`‰ì_ext_ˇche
().
	`îa£
(
°id
.
°‹e
, 
extid
.
ext
);

2352  
RCOK
;

2353 
	}
}

2363 
boﬁ


2364 
	gio_m
::
	$is_vÆid_°‹e
(c⁄° 
°id_t
& 
°id
)

2366 
auto_Àave_t
 
íãr
;

2367 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2370 
lock_°©e
 
rme_node
 ;

2371 
vﬁ_t
 *
v
 = 
	`_föd_™d_gøb
(
vﬁid
, &
rme_node
, 
Ál£
);

2372 i‡(!
v
Ë 
Ál£
;

2373 
auto_ªÀa£_r_t
<
VﬁumeLock
> 
	`ªÀa£_⁄_ªtu∫
(
v
->
	`vﬁ_muãx
());

2375 i‡–! 
v
->
	`is_vÆid_°‹e
(
°id
.
°‹e
) ) {

2376  
Ál£
;

2379  
v
->
	`is_Æloc_°‹e
(
°id
.
°‹e
);

2380 
	}
}

2390 
rc_t


2391 
	gio_m
::
	$max_°‹e_id_ö_u£
(
vid_t
 
vﬁid
, 
¢um_t
& 
¢um
)

2393 
auto_Àave_t
 
íãr
;

2394 
	`FUNC
(
io_m
::
_max_°‹e_id_ö_u£
);

2395 
GRAB_R
;

2397 
¢um
 = 
v
->
	`max_°‹e_id_ö_u£
();

2398  
RCOK
;

2399 
	}
}

2410 
rc_t


2411 
	gio_m
::
	$gë_vﬁume_mëa_°©s
(
vid_t
 
vﬁid
, 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
)

2413 
auto_Àave_t
 
íãr
;

2414 
	`FUNC
(
io_m
::
_gë_vﬁume_mëa_°©s
);

2415 
GRAB_R
;

2417 
	`W_DO
–
v
->
	`gë_vﬁume_mëa_°©s
(
vﬁume_°©s
) );

2418  
RCOK
;

2419 
	}
}

2432 
rc_t


2433 
	gio_m
::
	$gë_fûe_mëa_°©s
(
vid_t
 
vﬁid
, 
uöt4_t
 
num_fûes
, 
SmFûeMëaSèts
* 
fûe_°©s
)

2435 
auto_Àave_t
 
íãr
;

2436 
GRAB_R
;

2437 
	`W_DO
–
v
->
	`gë_fûe_mëa_°©s
(
num_fûes
, 
fûe_°©s
) );

2438  
RCOK
;

2439 
	}
}

2452 
rc_t


2453 
	gio_m
::
	$gë_fûe_mëa_°©s_b©ch
(
vid_t
 
vﬁid
, 
uöt4_t
 
max_°‹e
, 
SmSt‹eMëaSèts
** 
m≠pög
)

2455 
auto_Àave_t
 
íãr
;

2456 
GRAB_R
;

2458 
	`W_DO
–
v
->
	`gë_fûe_mëa_°©s_b©ch
(
max_°‹e
, 
m≠pög
) );

2459  
RCOK
;

2460 
	}
}

2469 
rc_t


2470 
	gio_m
::
	$gë_°‹e_mëa_°©s
(
°id_t
 
°id
, 
SmSt‹eMëaSèts
& 
m≠pög
)

2472 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2473 
GRAB_R
;

2474 
	`W_DO
–
v
->
	`gë_°‹e_mëa_°©s
(
°id
.
°‹e
, 
m≠pög
) );

2475  
RCOK
;

2476 
	}
}

2488 
rc_t


2489 
	gio_m
::
	$fú°_∑ge
(

2490 c⁄° 
°id_t
& 
°id
,

2491 
Õid_t
& 
pid
,

2492 
boﬁ
* 
Æloˇãd
,

2493 
lock_mode_t
 
lock
)

2495 
auto_Àave_t
 
íãr
;

2496 
	`FUNC
(
io_m
::
_fú°_∑ge
);

2497 
vid_t
 
vﬁid
 = 
°id
.
vﬁ
;

2498 
GRAB_R
;

2500 
	`W_DO
–
v
->
	`fú°_∑ge
(
°id
.
°‹e
, 
pid
, 
Æloˇãd
) );

2502 i‡(
lock
 !
NL
) {

2504 
	`W_DO
(
	`lock_f‹˚
(
pid
, 
lock
, 
t_l⁄g
, 
WAIT_IMMEDIATE
));

2507  
RCOK
;

2508 
	}
}

2521 
rc_t


2522 
	gio_m
::
	$œ°_∑ge
(

2523 c⁄° 
°id_t
& 
°id
,

2524 
Õid_t
& 
pid
,

2525 
boﬁ
* 
Æloˇãd
,

2526 
lock_mode_t
 
desúed_lock_mode


2529 
auto_Àave_t
 
íãr
;

2530 
	`FUNC
(
io_m
::
_œ°_∑ge
);

2531 
vid_t
 
vﬁid
=
°id
.
vﬁ
;

2532 
GRAB_R
;

2534 if(
Æloˇãd
) {

2535 
	`W_DO
–
v
->
	`œ°_Æloˇãd_∑ge
(
°id
.
°‹e
, 
pid
) );

2536 *
Æloˇãd
 = 
åue
;

2539 
boﬁ
 
d⁄åóŒyˇª
;

2540 
	`W_DO
–
v
->
	`œ°_ª£rved_∑ge
(
°id
.
°‹e
, 
pid
, 
d⁄åóŒyˇª
) );

2543 i‡(
desúed_lock_mode
 !
NL
) {

2545 
	`W_DO
(
	`lock_f‹˚
(
pid
, 
desúed_lock_mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
));

2548  
RCOK
;

2549 
	}
}

2561 
rc_t
 
	gio_m
::
	$√xt_∑ge
(

2562 
Õid_t
& 
pid
,

2563 
boﬁ
* 
Æloˇãd
,

2564 
lock_mode_t
 
lock
)

2566 
auto_Àave_t
 
íãr
;

2567 
	`FUNC
(
io_m
::
_√xt_∑ge
);

2568 
vid_t
 
vﬁid
 = 
pid
.
_°id
.
vﬁ
;

2569 
GRAB_R
;

2571 
	`W_DO
–
v
->
	`√xt_∑ge
(
pid
, 
Æloˇãd
));

2573 i‡(
lock
 !
NL
)

2574 
	`W_DO
(
	`lock_f‹˚
(
pid
, 
lock
, 
t_l⁄g
, 
WAIT_IMMEDIATE
));

2576  
RCOK
;

2577 
	}
}

2586 
rc_t
 
	gio_m
::
	$√xt_∑ge_wôh_•a˚
(

2587 
Õid_t
& 
pid
,

2588 
•a˚_buckë_t
 
√eded
,

2589 
lock_mode_t
 
lock


2592 
auto_Àave_t
 
íãr
;

2593 
	`FUNC
(
io_m
::
_√xt_∑ge_wôh_•a˚
);

2594 
vid_t
 
vﬁid
 = 
pid
.
_°id
.
vﬁ
;

2595 
GRAB_R
;

2597 
	`W_DO
–
v
->
	`√xt_∑ge_wôh_•a˚
(
pid
, 
√eded
));

2598 
	`DBGTHRD
(<<"√xà∑gêwôh s∑˚ i†" << 
pid
);

2600 i‡(
lock
 !
NL
) {

2601 
	`DBGTHRD
(<<"lockögÖid " << 
pid
);

2602 
	`W_DO
(
	`lock_f‹˚
(
pid
, 
lock
, 
t_l⁄g
, 
WAIT_IMMEDIATE
));

2605  
RCOK
;

2606 
	}
}

2608 
rc_t


2609 
	gio_m
::
	$check_°‹e_∑ges
(c⁄° 
°id_t
 &
°id
, 
∑ge_p
::
èg_t
 
èg
)

2611 
i
 = 
	`_föd
(
°id
.
vﬁ
);

2612 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2614 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2615 
	`w_as£π9
(
v
->
	`vid
(Ë=
°id
.
vﬁ
);

2617  
v
->
	`check_°‹e_∑ges
(
°id
.
°‹e
, 
èg
);

2618 
	}
}

2625 
rc_t
 
	gio_m
::
	$gë_du_°©i°ics
(
vid_t
 
vﬁid
, 
vﬁume_hdr_°©s_t
& 
_°©s
, 
boﬁ
 
audô
)

2627 
auto_Àave_t
 
íãr
;

2628 
GRAB_R
;

2629 
	`W_DO
–
v
->
	`gë_du_°©i°ics
(
_°©s
, 
audô
) );

2631  
RCOK
;

2632 
	}
}

2634 
rc_t


2635 
	gio_m
::
	$ªcovî_∑ges_ö_ext
(
vid_t
 
vid
,

2636 
¢um_t
 
¢um
, 
exäum_t
 
ext
, c⁄° 
Pm≠
& 
pm≠
, 
boﬁ
 
is_Æloc
)

2638 
auto_Àave_t
 
íãr
;

2639  
	`_ªcovî_∑ges_ö_ext
(
vid
, 
¢um
, 
ext
, 
pm≠
, 
is_Æloc
);

2640 
	}
}

2642 
rc_t


2643 
	gio_m
::
	$_ªcovî_∑ges_ö_ext
(
vid_t
 
vﬁid
,

2644 
¢um_t
 
¢um
, 
exäum_t
 
ext
, c⁄° 
Pm≠
& 
pm≠
, 
boﬁ
 
is_Æloc
)

2646 
	`FUNC
(
io_m
::
_ªcovî_∑ges_ö_ext
);

2648 
GRAB_W
;

2650 
	`w_as£π3
(
v
->
	`vid
(Ë=
vﬁid
);

2652 
	`DBGTHRD
(<<"ªcovî_∑ges_ö_exà" << 
ext


2653 << " m≠=" << 
pm≠


2654 << " is_Æloc=" << 
is_Æloc
);

2655 
	`W_COERCE
–
v
->
	`ªcovî_∑ges_ö_ext
(
¢um
, 
ext
, 
pm≠
, 
is_Æloc
) );

2657  
RCOK
;

2658 
	}
}

2660 
rc_t


2661 
	gio_m
::
	$°‹e_›î©i⁄
(
vid_t
 
vﬁid
, c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
)

2663 
	`FUNC
(
io_m
::
°‹e_›î©i⁄
);

2664 
auto_Àave_t
 
íãr
;

2666 
GRAB_W
;

2668 
	`w_as£π3
(
v
->
	`vid
(Ë=
vﬁid
);

2670 
	`W_DO
–
v
->
	`°‹e_›î©i⁄
(
∑øm
) );

2672  
RCOK
;

2673 
	}
}

2680 
rc_t


2681 
	gio_m
::
	$‰ì_exts_⁄_ßme_∑ge
(c⁄° 
°id_t
& 
°id
, 
exäum_t
 
ext
,Éxäum_à
cou¡
)

2683 
	`w_as£π1
(
smÀvñ_0
::
	`ö_ªcovîy_ªdo
());

2685 
i
 = 
	`_föd
(
°id
.
vﬁ
);

2686 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2688 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2689 
	`w_as£π9
(
v
->
	`vid
(Ë=
°id
.
vﬁ
);

2691 
	`W_DO
–
v
->
	`‰ì_exts_⁄_ßme_∑ge
(
ext
, 
°id
.
°‹e
, 
cou¡
) );

2693  
RCOK
;

2694 
	}
}

2700 
rc_t


2701 
	gio_m
::
	$£t_ext_√xt
(
vid_t
 
vid
, 
exäum_t
 
ext
,Éxäum_à
√w_√xt
)

2703 
	`w_as£π9
(
smÀvñ_0
::
	`ö_ªcovîy
());

2705 
i
 = 
	`_föd
(
vid
);

2706 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2708 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2709 
	`w_as£π9
(
v
->
	`vid
(Ë=
vid
);

2711 
	`W_DO
–
v
->
	`£t_ext_√xt
(
ext
, 
√w_√xt
) );

2713  
RCOK
;

2714 
	}
}

2723 
rc_t


2724 
	gio_m
::
	$‰ì_°‹es_durög_ªcovîy
(
°‹e_dñëög_t
 
ty≥ToRecovî
)

2726 
	`w_as£π9
(
smÀvñ_0
::
	`ö_ªcovîy
());

2728 
i
 = 0; i < 
max_vﬁs
; i++) {

2729 i‡(
vﬁ
[
i
]) {

2730 
	`W_DO
–
vﬁ
[
i
]->
	`‰ì_°‹es_durög_ªcovîy
(
ty≥ToRecovî
) );

2734  
RCOK
;

2735 
	}
}

2741 
rc_t


2742 
	gio_m
::
	$‰ì_exts_durög_ªcovîy
()

2744 
	`w_as£π9
(
smÀvñ_0
::
	`ö_ªcovîy
());

2746 
i
 = 0; i < 
max_vﬁs
; i++) {

2747 i‡(
vﬁ
[
i
]) {

2748 
	`W_DO
–
vﬁ
[
i
]->
	`‰ì_exts_durög_ªcovîy
() );

2752  
RCOK
;

2753 
	}
}

2759 
rc_t


2760 
	gio_m
::
	$¸óã_ext_li°_⁄_ßme_∑ge
(c⁄° 
°id_t
& 
°id
, 
exäum_t
 
¥ev
,Éxäum_à
√xt
,Éxäum_à
cou¡
,Éxäum_t* 
li°
)

2762 
	`w_as£π1
(
smÀvñ_0
::
	`ö_ªcovîy_ªdo
());

2764 
i
 = 
	`_föd
(
°id
.
vﬁ
);

2765 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2767 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2768 
	`w_as£π9
(
v
->
	`vid
(Ë=
°id
.
vﬁ
);

2770 
	`W_DO
–
v
->
	`¸óã_ext_li°_⁄_ßme_∑ge
(
°id
.
°‹e
, 
¥ev
, 
√xt
, 
cou¡
, 
li°
) );

2772  
RCOK
;

2773 
	}
}

2775 
rc_t


2776 
	gio_m
::
	$_upd©e_ext_hi°o
(c⁄° 
Õid_t
& 
pid
, 
•a˚_buckë_t
 
b
)

2779 
i
 = 
	`_föd
(
pid
.
_°id
.
vﬁ
);

2780 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2782 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2783 
	`w_as£π9
(
v
->
	`vid
(Ë=
pid
.
_°id
.
vﬁ
);

2785 
	`DBGTHRD
(<<"upd©ög hi°ÿf‹Öid " << 
pid
);

2786 
	`W_DO
–
v
->
	`upd©e_ext_hi°o
(
pid
, 
b
) );

2787  
RCOK
;

2788 
	}
}

2790 
rc_t


2791 
	gio_m
::
	$_öô_°‹e_hi°o
(
°‹e_hi°o_t
 *
h
, c⁄° 
°id_t
& 
°id
,

2792 
pgöfo_t
* 
∑ges
, & 
num∑ges
)

2795 
i
 = 
	`_föd
(
°id
.
vﬁ
);

2796 i‡(
i
 < 0Ë 
	`RC
(
eBADVOL
);

2798 
vﬁ_t
 *
v
 = 
vﬁ
[
i
];

2799 
	`w_as£π9
(
v
->
	`vid
(Ë=
°id
.
vﬁ
);

2801 
	`W_DO
–
v
->
	`öô_hi°o
(
h
, 
°id
.
°‹e
, 
∑ges
, 
num∑ges
) );

2802  
RCOK
;

2803 
	}
}

2805 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	g°‹e_›î©i⁄_∑øm
& 
	g∑øm
)

2807 
	go
 << "¢um=" << 
	g∑øm
.
¢um
()

2808 << ", op=" << 
	g∑øm
.
›
();

2810 
	g∑øm
.
›
()) {

2811 
	gsmÀvñ_0
::
t_dñëe_°‹e
:

2813 
	gsmÀvñ_0
::
t_¸óã_°‹e
:

2814 
o
 << ", fœgs=" << 
∑øm
.
√w_°‹e_Êags
()

2815 << ",Éff=" << 
∑øm
.
eff
();

2817 
	gsmÀvñ_0
::
t_£t_dñëög
:

2818 
o
 << ",ÇewVÆue=" << 
∑øm
.
√w_dñëög_vÆue
()

2819 << ", oldVÆue=" << 
∑øm
.
ﬁd_dñëög_vÆue
();

2821 
	gsmÀvñ_0
::
t_£t_°‹e_Êags
:

2822 
o
 << ",ÇewFœgs=" << 
∑øm
.
√w_°‹e_Êags
()

2823 << ", oldFœgs=" << 
∑øm
.
ﬁd_°‹e_Êags
();

2825 
	gsmÀvñ_0
::
t_£t_fú°_ext
:

2826 
o
 << ",Éxt=" << 
∑øm
.
fú°_ext
();

2830  
	go
;

2838 
rc_t


2839 
	gio_m
::
	$dump_exts
(
o°ªam
& 
o
, 
vid_t
 
vid
, 
exäum_t
 
°¨t
,Éxäum_à
íd
)

2841 
i
 = 
	`_föd
(
vid
);

2842 i‡(
i
 == -1) {

2843  
	`RC
(
eBADVOL
);

2846 
	`W_DO
–
vﬁ
[
i
]->
	`dump_exts
(
o
, 
°¨t
, 
íd
) );

2848  
RCOK
;

2849 
	}
}

2851 
rc_t


2852 
	gio_m
::
	$dump_°‹es
(
o°ªam
& 
o
, 
vid_t
 
vid
, 
°¨t
, 
íd
)

2854 
i
 = 
	`_föd
(
vid
);

2855 i‡(
i
 == -1) {

2856  
	`RC
(
eBADVOL
);

2859 
	`W_DO
–
vﬁ
[
i
]->
	`dump_°‹es
(
o
, 
°¨t
, 
íd
) );

2861  
RCOK
;

2862 
	}
}

	@src/sm/sm_io.h

53 #i‚de‡
SM_IO_H


54 
	#SM_IO_H


	)

56 
	~"w_deföes.h
"

60 
˛ass
 
	gvﬁ_t
;

61 
˛ass
 
	gsdesc_t
;

62 
˛ass
 
	gexéök_p
;

63 
˛ass
 
	gSmVﬁumeMëaSèts
;

64 
˛ass
 
	gSmFûeMëaSèts
;

65 
˛ass
 
	gSmSt‹eMëaSèts
;

66 
˛ass
 
	g°‹e_hi°o_t
;

67 
˛ass
 
	gpgöfo_t
;

68 
˛ass
 
	gx˘_t
;

70 #ifde‡
__GNUG__


71 #¥agm®
öãrÁ˚


74 
	gvﬁume_hdr_°©s_t
;

76 ˛as†
	c°‹e_›î©i⁄_∑øm
 {

77 
‰õnd
 
	mo°ªam
 & 
	m›î©‹
<<(o°ªam&, c⁄° 
	m°‹e_›î©i⁄_∑øm
 &);

79 
	mpublic
:

80 
w_ba£_t
::
	tuöt2_t
 uint2_t;

82 
	msmÀvñ_0
::
	t°‹e_›î©i⁄_t
 store_operation_t;

83 
	msmÀvñ_0
::
	t°‹e_Êag_t
 store_flag_t;

84 
	msmÀvñ_0
::
	t°‹e_dñëög_t
 store_deleting_t;

86 
	m¥iv©e
:

87 
¢um_t
 
_¢um
;

88 
uöt2_t
 
	m_›
;

89 
fûl2
 
	m_fûÀr
;

92 
uöt2_t
 
	m_vÆue1
;

93 
uöt2_t
 
	m_vÆue2
;

94 } 
	mvÆues
;

95 
exäum_t
 
	mexã¡
;

96 } 
	g_u
;

99 
	gpublic
:

101 
	$°‹e_›î©i⁄_∑øm
(
¢um_t
 
¢um
, 
°‹e_›î©i⁄_t
 
theOp
)

103 
	`_¢um
(
¢um
), 
	$_›
(
theOp
)

105 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_dñëe_°‹e
);

106 
_u
.
exã¡
=0;

107 
	}
};

109 
	$°‹e_›î©i⁄_∑øm
(
¢um_t
 
¢um
, 
°‹e_›î©i⁄_t
 
theOp
,

110 
°‹e_Êag_t
 
theFœgs
, 
uöt2_t
 
theEff
)

112 
	`_¢um
(
¢um
), 
	$_›
(
theOp
)

114 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_¸óã_°‹e
);

115 
_u
.
vÆues
.
_vÆue1
 = 
theFœgs
;

116 
_u
.
vÆues
.
_vÆue2
 = 
theEff
;

117 
	}
};

118 
	$°‹e_›î©i⁄_∑øm
(
¢um_t
 
¢um
, 
°‹e_›î©i⁄_t
 
theOp
,

119 
°‹e_dñëög_t
 
√wVÆue
,

120 
°‹e_dñëög_t
 
ﬁdVÆue
 = 
smÀvñ_0
::
t_unknown_dñëög
)

122 
	`_¢um
(
¢um
), 
	$_›
(
theOp
)

124 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_dñëög
);

125 
_u
.
vÆues
.
_vÆue1
=
√wVÆue
;

126 
_u
.
vÆues
.
_vÆue2
=
ﬁdVÆue
;

127 
	}
};

128 
	$°‹e_›î©i⁄_∑øm
(
¢um_t
 
¢um
, 
°‹e_›î©i⁄_t
 
theOp
,

129 
°‹e_Êag_t
 
√wFœgs
,

130 
°‹e_Êag_t
 
ﬁdFœgs
 = 
smÀvñ_0
::
°_bad
)

132 
	`_¢um
(
¢um
), 
	$_›
(
theOp
)

134 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_°‹e_Êags
);

135 
_u
.
vÆues
.
_vÆue1
=
√wFœgs
;

136 
_u
.
vÆues
.
_vÆue2
=
ﬁdFœgs
;

137 
	}
};

138 
	$°‹e_›î©i⁄_∑øm
(
¢um_t
 
¢um
, 
°‹e_›î©i⁄_t
 
theOp
,

139 
exäum_t
 
theExt
)

141 
	`_¢um
(
¢um
), 
	$_›
(
theOp
)

143 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_fú°_ext
);

144 
_u
.
exã¡
=
theExt
;

145 
	}
};

146 
¢um_t
 
	$¢um
() const

148  
_¢um
;

149 
	}
};

150 
°‹e_›î©i⁄_t
 
	$›
() const

152  (
°‹e_›î©i⁄_t
)
_›
;

153 
	}
};

154 
°‹e_Êag_t
 
	$√w_°‹e_Êags
() const

156 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_¸óã_°‹e


157 || 
_›
 =
smÀvñ_0
::
t_£t_°‹e_Êags
);

158  (
°‹e_Êag_t
)
_u
.
vÆues
.
_vÆue1
;

159 
	}
};

160 
°‹e_Êag_t
 
	$ﬁd_°‹e_Êags
() const

162 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_°‹e_Êags
);

163  (
°‹e_Êag_t
)
_u
.
vÆues
.
_vÆue2
;

164 
	}
};

165 
	$£t_ﬁd_°‹e_Êags
(
°‹e_Êag_t
 
Êag
)

167 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_°‹e_Êags
);

168 
_u
.
vÆues
.
_vÆue2
 = 
Êag
;

169 
	}
}

170 
exäum_t
 
	$fú°_ext
() const

172 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_fú°_ext
);

173  
_u
.
exã¡
;

174 
	}
};

175 
°‹e_dñëög_t
 
	$√w_dñëög_vÆue
() const

177 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_dñëög
);

178  (
°‹e_dñëög_t
)
_u
.
vÆues
.
_vÆue1
;

179 
	}
};

180 
°‹e_dñëög_t
 
	$ﬁd_dñëög_vÆue
() const

182 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_dñëög
);

183  (
°‹e_dñëög_t
)
_u
.
vÆues
.
_vÆue2
;

184 
	}
};

185 
	$£t_ﬁd_dñëög_vÆue
(
°‹e_dñëög_t
 
ﬁd_vÆue
)

187 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_£t_dñëög
);

188 
_u
.
vÆues
.
_vÆue2
 = 
ﬁd_vÆue
;

189 
	}
}

190 
uöt2_t
 
	$eff
() const

192 
	`w_as£π9
(
_›
 =
smÀvñ_0
::
t_¸óã_°‹e
);

193  
_u
.
vÆues
.
_vÆue2
;

194 
	}
};

195 
	$size
() const

197   (*
this
);

198 
	}
};

200 
	g¥iv©e
:

201 
°‹e_›î©i⁄_∑øm
();

213 ˛as†
	cvﬁ_io_sh¨ed
 : 
public
 
w_ba£_t
 {

214 
public
:

215 
rc_t
 
io_lock_f‹˚
–c⁄° 
lockid_t
& 
n
,

216 
lock_mode_t
 
m
,

217 
lock_duøti⁄_t
 
d
,

218 
timeout_ö_ms
 
timeout
,

219 
lock_mode_t
* 
¥ev_mode
 = 0,

220 
lock_mode_t
* 
¥ev_pgmode
 = 0,

221 
lockid_t
** 
«meInLockHód
 = 0

228 ˛as†
	cio_m
 : 
public
 
smÀvñ_0


230 
‰õnd
 
rc_t
 
vﬁ_io_sh¨ed
::
io_lock_f‹˚
–c⁄° 
lockid_t
& 
n
,

231 
lock_mode_t
 
m
,

232 
lock_duøti⁄_t
 
d
,

233 
timeout_ö_ms
 
timeout
,

234 
lock_mode_t
* 
¥ev_mode
 = 0,

235 
lock_mode_t
* 
¥ev_pgmode
 = 0,

236 
lockid_t
** 
«meInLockHód
 = 0

238 
	mpublic
:

239 
NORET
 
io_m
();

240 
	mNORET
 ~
io_m
();

242 
max_exã¡s_⁄_∑ge
();

243 
˛ór_°©s
();

244 
num_vﬁs
();

250 
boﬁ
 
is_mou¡ed
(c⁄° * 
dev_«me
);

251 
rc_t
 
mou¡_dev
(c⁄° * 
devi˚
, 
u_öt
& 
vﬁ_˙t
);

252 
rc_t
 
dismou¡_dev
(c⁄° * 
devi˚
);

253 
rc_t
 
dismou¡_Æl_dev
();

254 
rc_t
 
gë_lvid
(c⁄° * 
dev_«me
, 
lvid_t
& 
lvid
);

255 
rc_t
 
li°_devi˚s
(

256 c⁄° **& 
dev_li°
,

257 
devid_t
*& 
devid_li°
,

258 
u_öt
& 
dev_˙t
);

260 
rc_t
 
gë_devi˚_quŸa
(

261 c⁄° * 
devi˚
,

262 
smksize_t
& 
quŸa_KB
,

263 
smksize_t
& 
quŸa_u£d_KB
);

270 
rc_t
 
gë_vﬁs
(

271 
°¨t
,

272 
cou¡
,

273 **
d«me
,

274 
vid_t
 
vid
[],

275 & 
ªtu∫_˙t
);

276 
rc_t
 
check_disk
(c⁄° 
vid_t
 &
vid
);

277 
rc_t
 
check_°‹e_∑ges
(c⁄° 
°id_t
 &
°id
,

278 
∑ge_p
::
èg_t
);

280 
rc_t
 
gë_√w_vid
(
vid_t
& 
vid
);

281 
boﬁ
 
is_mou¡ed
(
vid_t
 
vid
);

282 
vid_t
 
gë_vid
(c⁄° 
lvid_t
& 
lvid
);

283 
lvid_t
 
gë_lvid
(c⁄° 
vid_t
 
vid
);

284 c⁄° * 
dev_«me
(
vid_t
 
vid
);

285 
l¢_t
 
GëLa°Mou¡LSN
();

286 
SëLa°Mou¡LSN
(
l¢_t
 
theLSN
);

288 
rc_t
 
ªad_∑ge
(

289 c⁄° 
Õid_t
& 
pid
,

290 
∑ge_s
& 
buf
);

291 
wrôe_m™y_∑ges
(c⁄° 
∑ge_s
* 
bufs
, 
˙t
);

293 
rc_t
 
mou¡
(

294 c⁄° * 
devi˚
,

295 
vid_t
 
vid
,

296 c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
 = 
Ál£
,

297 c⁄° 
Áke_disk_œãncy
 = 0);

298 
rc_t
 
dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
 = 
åue
);

299 
rc_t
 
dismou¡_Æl
(
boﬁ
 
Êush
 = 
åue
);

300 
rc_t
 
sync_Æl_disks
();

304 
rc_t
 
íabÀ_Áke_disk_œãncy
(
vid_t
 
vid
);

305 
rc_t
 
dißbÀ_Áke_disk_œãncy
(
vid_t
 
vid
);

306 
rc_t
 
£t_Áke_disk_œãncy
(

307 
vid_t
 
vid
,

308 c⁄° 
adñay
);

311 
rc_t
 
gë_vﬁume_quŸa
(

312 
vid_t
 
vid
,

313 
smksize_t
& 
quŸa_KB
,

314 
smksize_t
& 
quŸa_u£d_KB
,

315 
w_ba£_t
::
uöt4_t
& 
exts_u£d


319 
rc_t
 
Æloc_a_fûe_∑ge
(

320 
Æloc_∑ge_fûãr_t
 *
fûãr
,

321 c⁄° 
°id_t
& 
°id
,

322 c⁄° 
Õid_t
& 
√¨
,

323 
Õid_t
& 
pids
,

324 
lock_mode_t
 
desúed_lock_mode
,

325 
boﬁ
 
£¨ch_fûe


328 
rc_t
 
Æloc_a_∑ge
(

329 c⁄° 
°id_t
& 
°id
,

330 c⁄° 
Õid_t
& 
√¨
,

331 
Õid_t
& 
pids
,

332 
boﬁ
 
may_ªÆloc
,

333 
lock_mode_t
 
desúed_lock_mode
,

334 
boﬁ
 
£¨ch_fûe


338 
rc_t
 
Æloc_∑ge_group
(

339 c⁄° 
°id_t
& 
°id
,

340 c⁄° 
Õid_t
& 
√¨
,

341 
˙t
,

342 
Õid_t
 
pids
[],

343 
lock_mode_t
 
desúed_lock_mode


346 
	m¥iv©e
:

351 
rc_t
 
_Æloc_∑ges
(

352 c⁄° 
°id_t
& 
°id
,

353 c⁄° 
Õid_t
& 
√¨
,

354 
˙t
,

355 & 
˙t_gŸ
,

356 
Õid_t
 
pids
[],

357 
boﬁ
 
may_ªÆloc
,

358 
lock_mode_t
 
desúed_lock_mode
,

359 
boﬁ
 
£¨ch_fûe


362 
rc_t
 
_‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
,

363 
vﬁ_t
 *
v
, 
boﬁ
 
chk_°_mmb
);

364 
	mpublic
:

367 
rc_t
 
‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
, 
boﬁ
 
chk_°_mmb
);

368 
boﬁ
 
is_vÆid_∑ge_of
(c⁄° 
Õid_t
& 
pid
, 
¢um_t
 
s
);

370 
rc_t
 
¸óã_°‹e
(

371 
vid_t
 
vid
,

372 
EFF
,

373 
°‹e_Êag_t
 
Êags
,

374 
°id_t
& 
°id
,

375 
exäum_t
 
fú°_ext
 = 0,

376 
exäum_t
 
num_exts
 = 1);

377 
rc_t
 
de°roy_°‹e
(

378 c⁄° 
°id_t
& 
°id
,

379 
boﬁ
 
acquúe_lock
 = 
åue
);

380 
rc_t
 
‰ì_°‹e_a·î_x˘
(c⁄° 
°id_t
& 
°id
);

381 
rc_t
 
‰ì_ext_a·î_x˘
(c⁄° 
extid_t
& 
extid
);

382 
rc_t
 
gë_°‹e_Êags
(

383 c⁄° 
°id_t
& 
°id
,

384 
°‹e_Êag_t
& 
Êags
);

385 
rc_t
 
£t_°‹e_Êags
(

386 c⁄° 
°id_t
& 
°id
,

387 
°‹e_Êag_t
 
Êags
,

388 
boﬁ
 
sync_vﬁume
 = 
åue
);

389 
boﬁ
 
is_vÆid_°‹e
(c⁄° 
°id_t
& 
°id
);

390 
rc_t
 
max_°‹e_id_ö_u£
(

391 
vid_t
 
vid
,

392 
¢um_t
& 
¢um
);

393 
rc_t
 
upd©e_ext_hi°o
(

394 c⁄° 
Õid_t
& 
pid
,

395 
•a˚_buckë_t
 
b
);

396 
rc_t
 
öô_°‹e_hi°o
(

397 
°‹e_hi°o_t
* 
h
,

398 c⁄° 
°id_t
& 
°id
,

399 
pgöfo_t
* 
∑ges
,

400 & 
num∑ges
);

407 
rc_t
 
gë_vﬁume_mëa_°©s
(

408 
vid_t
 
vid
,

409 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
);

410 
rc_t
 
gë_fûe_mëa_°©s
(

411 
vid_t
 
vid
,

412 
w_ba£_t
::
uöt4_t
 
num_fûes
,

413 
SmFûeMëaSèts
* 
fûe_°©s
);

414 
rc_t
 
gë_fûe_mëa_°©s_b©ch
(

415 
vid_t
 
vid
,

416 
w_ba£_t
::
uöt4_t
 
max_°‹e
,

417 
SmSt‹eMëaSèts
** 
m≠pög
);

418 
rc_t
 
gë_°‹e_mëa_°©s
(

419 
°id_t
 
¢um
,

420 
SmSt‹eMëaSèts
& 
°‹eSèts
);

427 
rc_t
 
fú°_∑ge
(

428 c⁄° 
°id_t
& 
°id
,

429 
Õid_t
& 
pid
,

430 
boﬁ
* 
Æloˇãd
 = 
NULL
,

431 
lock_mode_t
 
lock
 = 
NL
);

432 
rc_t
 
œ°_∑ge
(

433 c⁄° 
°id_t
& 
°id
,

434 
Õid_t
& 
pid
,

435 
boﬁ
* 
Æloˇãd
 = 
NULL
,

436 
lock_mode_t
 
mode
 = 
NL
);

437 
rc_t
 
√xt_∑ge
(

438 
Õid_t
& 
pid
,

439 
boﬁ
* 
Æloˇãd
 = 
NULL
,

440 
lock_mode_t
 
lock
 = 
NL
);

441 
rc_t
 
√xt_∑ge_wôh_•a˚
(

442 
Õid_t
& 
pid
,

443 
•a˚_buckë_t
 
√eded
,

444 
lock_mode_t
 
lock
 = 
NL
);

447 
rc_t
 
gë_du_°©i°ics
(

448 
vid_t
 
vid
,

449 
vﬁume_hdr_°©s_t
& 
°©s
,

450 
boﬁ
 
audô
);

455 
rc_t
 
	$£t_disk_dñay
(

456 
w_ba£_t
::
uöt4_t
 
mûli_£c
) {

457 
_m£c_disk_dñay
 = 
mûli_£c
;

458  
RCOK
;

464 
	`io_°©s
(

465 
u_l⁄g
& 
ªads
,

466 
u_l⁄g
& 
wrôes
,

467 
u_l⁄g
& 
Ælocs
,

468 
u_l⁄g
& 
dóŒocs
,

469 
boﬁ
 
ª£t
);

472 
rc_t
 
	`°‹e_›î©i⁄
(

473 
vid_t
 
vid
,

474 c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
);

476 
rc_t
 
	`‰ì_exts_⁄_ßme_∑ge
(

477 c⁄° 
°id_t
& 
°id
,

478 
exäum_t
 
ext
,

479 
exäum_t
 
cou¡
);

481 
rc_t
 
	`£t_ext_√xt
(

482 
vid_t
 
vid
,

483 
exäum_t
 
ext
,

484 
exäum_t
 
√w_√xt
);

486 
rc_t
 
	`‰ì_°‹es_durög_ªcovîy
(

487 
°‹e_dñëög_t
 
ty≥ToRecovî
);

489 
rc_t
 
	`‰ì_exts_durög_ªcovîy
();

491 
rc_t
 
	`¸óã_ext_li°_⁄_ßme_∑ge
(

492 c⁄° 
°id_t
& 
°id
,

493 
exäum_t
 
√xt
,

494 
exäum_t
 
¥ev
,

495 
exäum_t
 
cou¡
,

496 
exäum_t
* 
li°
);

498 
¥iv©e
:

503 ˛as†
	cauto_Àave_t
 {

504 
¥iv©e
:

505 
x˘_t
 *
_x
;

506 
check_com≥nßãd_›_√°ög
 
cc⁄
;

507 
	`⁄_íãrög
();

508 
	`⁄_Àavög
() const;

509 
public
:

510 
	`auto_Àave_t
(): 
	`_x
(
	`x˘
()), 
	`cc⁄
(
_x
, 
__LINE__
, 
__FILE__
) {\

511 if(
_x
Ë
	`⁄_íãrög
(); }

512 ~
	`auto_Àave_t
(Ë{ if(
_x
Ë
	`⁄_Àavög
(); }

513 
	}
};

518 
˛ass
 
	gauto_Àave_™d_åx_ªÀa£_t
;

521 
rc_t
 
_¥ime_ˇche
(
vﬁ_t
 *
v
, 
¢um_t
 
s
);

523 
	gvﬁ_˙t
;

524 
vﬁ_t
* 
	gvﬁ
[
max_vﬁs
];

525 
	gw_ba£_t
::
uöt4_t
 
_m£c_disk_dñay
;

526 
l¢_t
 
	g_œ°Mou¡LSN
;

528 
	g¥Ÿe˘ed
:

533 
rc_t
 
lock_f‹˚
(

534 c⁄° 
lockid_t
& 
n
,

535 
lock_mode_t
 
m
,

536 
lock_duøti⁄_t
 
d
,

537 
timeout_ö_ms
 
timeout
,

538 
∑ge_p
* 
∑ge
 = 0,

539 
lock_mode_t
* 
¥ev_mode
 = 0,

540 
lock_mode_t
* 
¥ev_pgmode
 = 0,

541 
lockid_t
** 
«meInLockHód
 = 0

544 
	gpublic
:

548 
rc_t
 
ªcovî_∑ges_ö_ext
(

549 
vid_t
 
vid
,

550 
¢um_t
 
¢um
,

551 
exäum_t
 
ext
,

552 c⁄° 
Pm≠
& 
pm≠
,

553 
boﬁ
 
is_Æloc
);

555 
rc_t
 
_ªcovî_∑ges_ö_ext
(

556 
vid_t
 
vid
,

557 
¢um_t
 
¢um
,

558 
exäum_t
 
ext
,

559 c⁄° 
Pm≠
& 
pm≠
,

560 
boﬁ
 
is_Æloc
);

565 
rc_t
 
dump_exts
(

566 
o°ªam
& 
o
,

567 
vid_t
 
vid
,

568 
exäum_t
 
°¨t
,

569 
exäum_t
 
íd
);

570 
rc_t
 
dump_°‹es
(

571 
o°ªam
& 
o
,

572 
vid_t
 
vid
,

573 
°¨t
,

574 
íd
);

576 
	g¥iv©e
:

578 
rc_t
 
_mou¡_dev
(c⁄° * 
devi˚
, 
u_öt
& 
vﬁ_˙t
);

579 
rc_t
 
_dismou¡_dev
(c⁄° * 
devi˚
);

580 
rc_t
 
_gë_lvid
(c⁄° * 
dev_«me
, 
lvid_t
& 
lvid
);

582 c⁄° * 
_dev_«me
(
vid_t
 
vid
);

583 
_föd
(
vid_t
 
vid
);

589 
mcs_rwlock
 
	tVﬁumeLock
;

590 * 
	tlock_°©e
;

592 
vﬁ_t
* 
_föd_™d_gøb
(

593 
vid_t
 
vid
,

594 
lock_°©e
* 
me
,

595 
boﬁ
 
f‹_wrôe


598 
rc_t
 
_gë_vﬁume_quŸa
(

599 
vid_t
 
vid
,

600 
smksize_t
& 
quŸa_KB
,

601 
smksize_t
& 
quŸa_u£d_KB
,

602 
w_ba£_t
::
uöt4_t
& 
exts_u£d


605 
vid_t
 
_gë_vid
(c⁄° 
lvid_t
& 
lvid
);

606 
lvid_t
 
_gë_lvid
(c⁄° 
vid_t
 
vid
);

607 
rc_t
 
_dismou¡
(
vid_t
 
vid
, 
boﬁ
 
Êush
);

608 
rc_t
 
_dismou¡_Æl
(
boﬁ
 
Êush
);

609 
rc_t
 
_Æloc_∑ges_wôh_vﬁ_muãx
(

610 
Æloc_∑ge_fûãr_t
 *
fûãr
,

611 
vﬁ_t
* 
v
,

612 c⁄° 
°id_t
& 
°id
,

613 c⁄° 
Õid_t
& 
√¨
,

614 
˙t
,

615 & 
˙t_gŸ
,

616 
Õid_t
 
pids
[],

617 
boﬁ
 
may_ªÆloc
,

618 
lock_mode_t
 
desúed_lock_mode
,

619 
boﬁ
 
£¨ch_fûe


621 
rc_t
 
_¸óã_°‹e
(

622 
vid_t
 
vid
,

623 
EFF
,

624 
°‹e_Êag_t
 
Êags
,

625 
°id_t
& 
°id
,

626 
exäum_t
 
fú°_ext
 = 0,

627 
exäum_t
 
num_exts
 = 1);

628 
rc_t
 
_gë_°‹e_Êags
(

629 c⁄° 
°id_t
& 
°id
,

630 
°‹e_Êag_t
& 
Êags
);

631 
rc_t
 
_£t_°‹e_Êags
(

632 c⁄° 
°id_t
& 
°id
,

633 
°‹e_Êag_t
 
Êags
,

634 
boﬁ
 
sync_vﬁume
);

636 
rc_t
 
_upd©e_ext_hi°o
(

637 c⁄° 
Õid_t
& 
pid
,

638 
•a˚_buckë_t
 
b
);

639 
rc_t
 
_öô_°‹e_hi°o
(

640 
°‹e_hi°o_t
* 
h
,

641 c⁄° 
°id_t
& 
°id
,

642 
pgöfo_t
* 
∑ges
,

643 & 
num∑ges
);

644 
	gpublic
:

651 
ölöe
 

652 
	gio_m
::
	$num_vﬁs
()

654  
vﬁ_˙t
;

655 
	}
}

657 
ölöe
 const *

658 
	gio_m
::
	$dev_«me
(
vid_t
 
vid
)

660 
auto_Àave_t
 
íãr
;

661  
	`_dev_«me
(
vid
);

662 
	}
}

664 
ölöe
 
l¢_t


665 
	gio_m
::
	$GëLa°Mou¡LSN
()

667  
_œ°Mou¡LSN
;

668 
	}
}

670 
ölöe
 

671 
	gio_m
::
	$SëLa°Mou¡LSN
(
l¢_t
 
theLSN
)

673 
	`w_as£π9
(
theLSN
 >
_œ°Mou¡LSN
);

674 
_œ°Mou¡LSN
 = 
theLSN
;

675 
	}
}

678 
ölöe
 
rc_t


679 
	gio_m
::
	$gë_vﬁume_quŸa
(

680 
vid_t
 
vid
,

681 
smksize_t
& 
quŸa_KB
,

682 
smksize_t
& 
quŸa_u£d_KB
,

683 
w_ba£_t
::
uöt4_t
& 
ext_u£d


686 
auto_Àave_t
 
íãr
;

687  
	`_gë_vﬁume_quŸa
(
vid
, 
quŸa_KB
, 
quŸa_u£d_KB
, 
ext_u£d
);

688 
	}
}

691 
ölöe
 
rc_t


692 
	gio_m
::
	$dismou¡_Æl
(
boﬁ
 
Êush
)

694 
auto_Àave_t
 
íãr
;

695  
	`_dismou¡_Æl
(
Êush
);

696 
	}
}

698 
ölöe
 
rc_t


699 
	gio_m
::
	$£t_°‹e_Êags
(c⁄° 
°id_t
& 
°id
, 
°‹e_Êag_t
 
Êags
, 
boﬁ
 
sync_vﬁume
)

701 
rc_t
 
r
;

702 i‡(
°id
.
°‹e
) {

703 
auto_Àave_t
 
íãr
;

704 
r
 = 
	`_£t_°‹e_Êags
(
°id
, 
Êags
, 
sync_vﬁume
);

707  
r
;

708 
	}
}

710 
ölöe
 
rc_t


711 
	gio_m
::
	$upd©e_ext_hi°o
(c⁄° 
Õid_t
& 
pid
, 
•a˚_buckë_t
 
b
)

718 
rc_t
 
r
;

719 i‡(
pid
.
_°id
.
°‹e
) {

720 
r
 = 
	`_upd©e_ext_hi°o
(
pid
, 
b
);

722  
r
;

723 
	}
}

725 
ölöe
 
rc_t


726 
	gio_m
::
	$öô_°‹e_hi°o
(
°‹e_hi°o_t
* 
h
, c⁄° 
°id_t
& 
°id
,

727 
pgöfo_t
* 
∑ges
, & 
num∑ges
)

729 
rc_t
 
r
;

730 i‡(
°id
.
°‹e
) {

731 
r
 = 
	`_öô_°‹e_hi°o
(
h
, 
°id
, 
∑ges
, 
num∑ges
);

733  
r
;

734 
	}
}

	@src/sm/sm_s.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 #ifde‡
__GNUG__


59 #¥agm®
im∂emíèti⁄
 "sm_s.h"

62 
	~<sm_öt_0.h
>

64 
	~<w_°r°ªam.h
>

65 
	~<°dio.h
>

67 c⁄° 
rid_t
 
	grid_t
::
nuŒ
;

68 c⁄° 
Õid_t
 
	gÕid_t
::
bof
;

69 c⁄° 
Õid_t
 
	gÕid_t
::
eof
;

70 c⁄° 
Õid_t
 
	gÕid_t
::
nuŒ
;

74 
	$db_¥ëty_¥öt
(
l¢_t
 c⁄°* 
l¢
, , const* )

76 
size_t
 
nbyãs
 = 100;

77 *
tmp
 = (*Ë::
	`vÆloc
(
nbyãs
);

78 
	`¢¥ötf
(
tmp
, 
nbyãs
, "%d.%Œd", 
l¢
->
	`hi
(), ()÷¢->
	`lo
()));

79  
tmp
;

80 
	}
}

82 
	~<©omic_ãm∂©es.h
>

139 
boﬁ
 
	gÕid_t
::
	$vÆid
() const

141 #i‡
W_DEBUG_LEVEL
 > 2

143 if(
_°id
.
vﬁ
.vﬁ && ! 
∑ge
Ë
	`w_as£π3
(0);

145  
_°id
.
vﬁ
.vol != 0;

146 
	}
}

155 
w_rc_t
 
	gkey_ty≥_s
::
	$∑r£_key_ty≥
(

156 c⁄° * 
s
,

157 
uöt4_t
& 
cou¡
,

158 
key_ty≥_s
 
kc
[])

160 
w_i°r°ªam
 
	`is
(
s
);

162 
uöt
 
j
;

163 
j
 = 0; j < 
cou¡
; j++) {

164 
kc
[
j
].
v¨übÀ
 = 0;

165 i‡(! (
is
 >> 
kc
[
j
].
ty≥
)) {

166 i‡(
is
.
	`eof
()) ;

167  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

169 i‡(
is
.
	`≥ek
() == '*') {

173 i‡(! (
is
 >> 
kc
[
j
].
v¨übÀ
))

174  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

176 i‡(! (
is
 >> 
kc
[
j
].
Àngth
))

177  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

178 i‡(
kc
[
j
].
Àngth
 > 
key_ty≥_s
::
max_Àn
)

179  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

181 
kc
[
j
].
ty≥
) {

183 
key_ty≥_s
::
I
:

184 
key_ty≥_s
::
U
:

185 
kc
[
j
].
com¥es£d
 = 
åue
;

187 
key_ty≥_s
::
i
:

188 
key_ty≥_s
::
u
:

189 i‡–(
kc
[
j
].
Àngth
 != 1

190 && 
kc
[
j
].
Àngth
 != 2

191 && 
kc
[
j
].
Àngth
 != 4

192 && 
kc
[
j
].
Àngth
 != 8 )

193 || 
kc
[
j
].
v¨übÀ
)

194  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

197 
key_ty≥_s
::
F
:

198 
kc
[
j
].
com¥es£d
 = 
åue
;

200 
key_ty≥_s
::
f
:

201 i‡((
kc
[
j
].
Àngth
 != 4 && kc[j].length != 8)

202 || 
kc
[
j
].
v¨übÀ
)

203  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

206 
key_ty≥_s
::
B
:

207 
kc
[
j
].
com¥es£d
 = 
åue
;

209 
key_ty≥_s
::
b
:

210 
	`w_as£π3
(
kc
[
j
].
Àngth
 > 0);

214  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

217 
cou¡
 = 
j
;

219 
j
 = 0; j < 
cou¡
; j++) {

220 i‡(
kc
[
j
].
v¨übÀ
 && j !
cou¡
 - 1)

221  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

224  
RCOK
;

225 
	}
}

228 
w_rc_t
 
	gkey_ty≥_s
::
	$gë_key_ty≥
(

229 * 
s
,

230 
buÊí
,

231 
uöt4_t
 
cou¡
,

232 c⁄° 
key_ty≥_s
* 
kc
)

234 
w_o°r°ªam
 
	`o
(
s
, 
buÊí
);

236 
uöt
 
j
;

237 
c
;

238 
j
 = 0; j < 
cou¡
; j++) {

239 if(
o
.
	`Áû
()) ;

241 
kc
[
j
].
ty≥
) {

242 
key_ty≥_s
::
I
:

243 
c
 = 'I';

245 
key_ty≥_s
::
i
:

246 
c
 = 'i';

248 
key_ty≥_s
::
U
:

249 
c
 = 'U';

251 
key_ty≥_s
::
u
:

252 
c
 = 'u';

254 
key_ty≥_s
::
F
:

255 
c
 = 'F';

257 
key_ty≥_s
::
f
:

258 
c
 = 'f';

260 
key_ty≥_s
::
B
:

261 
c
 = 'B';

263 
key_ty≥_s
::
b
:

264 
c
 = 'b';

267  
	`RC
(
smÀvñ_0
::
eBADKEYTYPESTR
);

269 
o
 << 
c
;

270 if(
kc
[
j
].
v¨übÀ
Ë
o
 << '*';

271 
o
 << 
kc
[
j
].
Àngth
;

273 
o
 << 
íds
;

274 if(
o
.
	`Áû
()Ë 
	`RC
(
smÀvñ_0
::
eRECWONTFIT
);

275  
RCOK
;

276 
	}
}

	@src/sm/sm_s.h

53 #i‚de‡
SM_S_H


54 
	#SM_S_H


	)

56 
	~"w_deföes.h
"

64 
	gw_ba£_t
::
	tuöt4_t
 
	texäum_t
;

66 #i‚de‡
STHREAD_H


67 
	~<°hªad.h
>

70 #i‚de‡
STID_T_H


71 
	~<°id_t.h
>

74 #ifde‡
__GNUG__


75 #¥agm®
öãrÁ˚


84 ˛as†
	cextid_t
 {

85 
	mpublic
:

86 
vid_t
 
vﬁ
;

87 
fûl2
 
	mfûÀr
;

88 
exäum_t
 
	mext
;

90 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	mextid_t
& 
	mx
);

91 
‰õnd
 
	mi°ªam
& 
	m›î©‹
>>(i°ªam&, 
	mextid_t
 &
	mx
);

94 
	#LPID_T


	)

95 ˛as†
	cÕid_t
 {

96 
	mpublic
:

97 
°id_t
 
_°id
;

98 
shpid_t
 
	m∑ge
;

100 
Õid_t
();

101 
Õid_t
(c⁄° 
°id_t
& 
s
, 
shpid_t
 
p
);

102 
Õid_t
(
vid_t
 
v
, 
¢um_t
 
s
, 
shpid_t
 
p
);

104 
boﬁ
 
	$vÆid
() const;

106 
vid_t
 
	$vﬁ
(Ëc⁄° { 
_°id
.
vﬁ
;}

107 
¢um_t
 
	$°‹e
(Ëc⁄° { 
_°id
.
°‹e
;
	}
}

108 c⁄° 
	g°id_t
& 
	$°id
(Ëc⁄° { 
_°id
;
	}
}

112 
boﬁ
 
	$is_nuŒ
(Ëc⁄° {  
∑ge
 =0; 
	}
}

114 
boﬁ
 
	g›î©‹
==(c⁄° 
Õid_t
& 
p
) const;

115 
boﬁ
 
	g›î©‹
!=(c⁄° 
Õid_t
& 
p
) const;

116 
boﬁ
 
	g›î©‹
<(c⁄° 
	gÕid_t
& 
	gp
) const;

117 
boﬁ
 
	g›î©‹
<=(c⁄° 
Õid_t
& 
p
) const;

118 
boﬁ
 
	g›î©‹
>(c⁄° 
	gÕid_t
& 
	gp
) const;

119 
boﬁ
 
	g›î©‹
>=(c⁄° 
Õid_t
& 
p
) const;

120 
‰õnd
 
	go°ªam
& 
	g›î©‹
<<(o°ªam&, c⁄° 
	gÕid_t
& 
	gp
);

121 
‰õnd
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam&, 
	gÕid_t
& 
	gp
);

123 c⁄° 
Õid_t
 
	gbof
;

124 c⁄° 
Õid_t
 
	geof
;

125 c⁄° 
Õid_t
 
	gnuŒ
;

130 
˛ass
 
	grid_t
;

143 ˛as†
	cshrid_t
 {

144 
	mpublic
:

145 
shpid_t
 
∑ge
;

146 
¢um_t
 
	m°‹e
;

147 
¶Ÿid_t
 
	m¶Ÿ
;

148 
fûl2
 
	mfûÀr
;

150 
shrid_t
();

151 
shrid_t
(c⁄° 
rid_t
& 
r
);

152 
	$shrid_t
(
shpid_t
 
p
, 
¢um_t
 
°
, 
¶Ÿid_t
 
¶
Ë: 
	`∑ge
’), 
	`°‹e
(°), 
	$¶Ÿ
(
¶
) {}

153 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
shrid_t
& 
s
);

154 
‰õnd
 
i°ªam
& 
›î©‹
>>(i°ªam&, 
shrid_t
& 
s
);

155 
	}
};

158 
	#RID_T


	)

171 ˛as†
	crid_t
 {

172 
	mpublic
:

173 
Õid_t
 
pid
;

174 
¶Ÿid_t
 
	m¶Ÿ
;

175 
fûl2
 
	mfûÀr
;

177 
rid_t
();

178 
rid_t
(
vid_t
 
vid
, c⁄° 
shrid_t
& 
shrid
);

179 
	$rid_t
(c⁄° 
Õid_t
& 
p
, 
¶Ÿid_t
 
s
Ë: 
	`pid
’), 
	$¶Ÿ
(
s
) {};

181 
°id_t
 
	$°id
() const;

183 
boﬁ
 
›î©‹
==(c⁄° 
rid_t
& 
r
) const;

184 
boﬁ
 
›î©‹
!=(c⁄° 
rid_t
& 
r
) const;

185 
boﬁ
 
›î©‹
<(c⁄° 
rid_t
& 
r
) const;

187 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
rid_t
& 
s
);

188 
‰õnd
 
i°ªam
& 
›î©‹
>>(i°ªam&, 
rid_t
& 
s
);

190 c⁄° 
rid_t
 
nuŒ
;

191 
	}
};

193 
	~<l¢.h
>

195 
	skey_ty≥_s
 {

196 
	ety≥_t
 {

197 
	mi
 = 'i',

198 
	mI
 = 'I',

199 
	mu
 = 'u',

200 
	mU
 = 'U',

201 
	mf
 = 'f',

202 
	mF
 = 'F',

203 
	mb
 = 'b',

204 
	mB
 = 'B'

212 íum { 
	mmax_Àn
 = 2000 };

213 
	mty≥
;

214 
	mv¨übÀ
;

215 
uöt2_t
 
	mÀngth
;

216 
	mcom¥es£d
;

217 #ifde‡
__GNUG__


218 
fûl1
 
	mdummy
;

221 
key_ty≥_s
(
ty≥_t
 
t
 = (ty≥_t)0, 
v
 = 0, 
uöt2_t
 
l
 = 0)

222 : 
ty≥
((Ë
t
), 
v¨übÀ
(
v
), 
Àngth
(
l
), 
com¥es£d
(
Ál£
) {};

229 
w_rc_t
 
∑r£_key_ty≥
(c⁄° * 
s
, 
w_ba£_t
::
uöt4_t
& 
cou¡
, 
key_ty≥_s
 
kc
[]);

230 
w_rc_t
 
gë_key_ty≥
(* 
s
, 
buÊí
, 
w_ba£_t
::
uöt4_t
 
cou¡
, c⁄° 
key_ty≥_s
 *
kc
);

233 
	#nuŒ_l¢
 (
l¢_t
::
nuŒ
)

	)

234 
	#max_l¢
 (
l¢_t
::
max
)

	)

236 
ölöe
 
	go°ªam
& 
	g›î©‹
<<(o°ªam& 
	go
, c⁄° 
	gl¢_t
& 
	gl
)

238  
	go
 << 
	gl
.
fûe
(Ë<< '.' <<Ü.
rba
();

241 
ölöe
 
	gi°ªam
& 
	g›î©‹
>>(i°ªam& 
	gi
, 
	gl¢_t
& 
	gl
)

243 
sm_diskaddr_t
 
	gd
;

244 
	gc
;

245 
	gw_ba£_t
::
uöt8_t
 
f
;

246 
	gi
 >> 
	gf
 >> 
	gc
 >> 
	gd
;

247 
	gl
 = 
l¢_t
(
f
, 
d
);

248  
	gi
;

251 
ölöe
 
	gÕid_t
::
	$Õid_t
(Ë: 
	$∑ge
(0Ë{
	}
}

253 
ölöe
 
Õid_t
::
	$Õid_t
(c⁄° 
°id_t
& 
s
, 
shpid_t
 
p
Ë: 
	`_°id
(s), 
	$∑ge
(
p
)

254 {
	}
}

256 
ölöe
 
	gÕid_t
::
	$Õid_t
(
vid_t
 
v
, 
¢um_t
 
s
, 
shpid_t
 
p
) :

257 
	`_°id
(
v
, 
s
), 
	$∑ge
(
p
)

258 {
	}
}

260 
ölöe
 
	gshrid_t
::
	$shrid_t
(Ë: 
	`∑ge
(0), 
	`°‹e
(0), 
	$¶Ÿ
(0)

261 {
	}
}

262 
ölöe
 
	gshrid_t
::
	$shrid_t
(c⁄° 
rid_t
& 
r
) :

263 
	`∑ge
(
r
.
pid
.
∑ge
), 
	`°‹e
‘.pid.°‹e()), 
	$¶Ÿ
(
r
.
¶Ÿ
)

264 {
	}
}

266 
ölöe
 
	grid_t
::
	$rid_t
(Ë: 
	$¶Ÿ
(0)

267 {
	}
}

269 
ölöe
 
rid_t
::
	$rid_t
(
vid_t
 
vid
, c⁄° 
shrid_t
& 
shrid
) :

270 
	`pid
(
vid
, 
shrid
.
°‹e
, shrid.
∑ge
), 
	$¶Ÿ
(
shrid
.
¶Ÿ
)

271 {
	}
}

273 
ölöe
 
°id_t
 
	grid_t
::
	$°id
() const

275  
pid
.
	`°id
();

276 
	}
}

278 
ölöe
 
boﬁ
 
	gÕid_t
::
›î©‹
==(c⁄° 
Õid_t
& 
p
) const

280  (
∑ge
 =
p
.∑geË&& (
°id
() ==Ö.stid());

283 
ölöe
 
boﬁ
 
	gÕid_t
::
›î©‹
!=(c⁄° 
Õid_t
& 
p
) const

285  !(*
this
 =
p
);

288 
ölöe
 
boﬁ
 
	gÕid_t
::
›î©‹
<(c⁄° 
Õid_t
& 
p
) const

290  
_°id
 =
p
._°id && 
∑ge
 <Ö.page;

293 
ölöe
 
boﬁ
 
	gÕid_t
::
›î©‹
<=(c⁄° 
Õid_t
& 
p
) const

295  
_°id
 =
p
._°id && 
∑ge
 <=Ö.page;

298 
ölöe
 
boﬁ
 
	gÕid_t
::
›î©‹
>=(c⁄° 
Õid_t
& 
p
) const

300  
_°id
 =
p
._°id && 
∑ge
 >=Ö.page;

303 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(c⁄° 
Õid_t
& 
p
)

305  
p
.
_°id
.
vﬁ
 ^ (p.
∑ge
 + 113);

306 
	}
}

308 
ölöe
 
	gw_ba£_t
::
uöt4_t
 
	$w_hash
(c⁄° 
vid_t
 
v
)

310  
v
;

311 
	}
}

315 
ölöe
 
boﬁ
 
	grid_t
::
›î©‹
==(c⁄° 
rid_t
& 
r
) const

317  (
pid
 =
r
.pid && 
¶Ÿ
 ==Ñ.slot);

320 
ölöe
 
boﬁ
 
	grid_t
::
›î©‹
!=(c⁄° 
rid_t
& 
r
) const

322  !(*
this
 =
r
);

325 
ölöe
 
boﬁ
 
	grid_t
::
›î©‹
<(c⁄° 
rid_t
& 
r
) const

327  
pid
 < 
r
.pid || (pid =r.pid && 
¶Ÿ
 <Ñ.slot);

	@src/sm/sm_stats_t_collect_enum_gen.h

1 #i‚de‡
SM_STATS_T_COLLECT_ENUM_GEN_H


2 
	#SM_STATS_T_COLLECT_ENUM_GEN_H


	)

36 
	gVT_bf_⁄e_∑ge_wrôe
,

37 
	gVT_bf_two_∑ge_wrôe
,

38 
	gVT_bf_thªe_∑ge_wrôe
,

39 
	gVT_bf_four_∑ge_wrôe
,

40 
	gVT_bf_five_∑ge_wrôe
,

41 
	gVT_bf_six_∑ge_wrôe
,

42 
	gVT_bf_£ví_∑ge_wrôe
,

43 
	gVT_bf_eight_∑ge_wrôe
,

44 
	gVT_bf_m‹e_∑ge_wrôe
,

45 
	gVT_bf_˛ó√r_swìps
,

46 
	gVT_bf_˛ó√r_sig«Œed
,

47 
	gVT_bf_Æªady_evi˘ed
,

48 
	gVT_bf_dúty_∑ge_˛ó√d
,

49 
	gVT_bf_Êushed_OHD_∑ge
,

50 
	gVT_bf_kick_fuŒ
,

51 
	gVT_bf_kick_ª∂a˚mít
,

52 
	gVT_bf_kick_thªshﬁd
,

53 
	gVT_bf_swìp_∑ge_hŸ_skù≥d
,

54 
	gVT_bf_disˇrded_hŸ
,

55 
	gVT_bf_log_Êush_Æl
,

56 
	gVT_bf_log_Êush_l¢
,

57 
	gVT_bf_wrôe_out
,

58 
	gVT_bf_¶ìp_awaô_˛ón
,

59 
	gVT_bf_fg_sˇn_˙t
,

60 
	gVT_bf_c‹e_u≈ö_˛ó√d
,

61 
	gVT_bf_unfix_˛ó√d
,

62 
	gVT_bf_look_˙t
,

63 
	gVT_bf_hô_˙t
,

64 
	gVT_bf_gøb_œtch_Áûed
,

65 
	gVT_bf_ª∂a˚_out
,

66 
	gVT_bf_ª∂a˚d_dúty
,

67 
	gVT_bf_ª∂a˚d_˛ón
,

68 
	gVT_bf_no_å™sô_buckë
,

69 
	gVT_bf_¥e„tch_ªque°s
,

70 
	gVT_bf_¥e„tches
,

71 
	gVT_bf_upgøde_œtch_ø˚
,

72 
	gVT_bf_upgøde_œtch_ch™ged
,

73 
	gVT_ª°¨t_ª∑ú_ªc_l¢
,

74 
	gVT_vﬁ_ªads
,

75 
	gVT_vﬁ_wrôes
,

76 
	gVT_vﬁ_blks_wrôãn
,

77 
	gVT_vﬁ_Æloc_exts
,

78 
	gVT_vﬁ_‰ì_exts
,

79 
	gVT_io_m_löór_£¨ches
,

80 
	gVT_io_m_löór_£¨ch_exã¡s
,

81 
	gVT_vﬁ_ˇche_¥imes
,

82 
	gVT_vﬁ_ˇche_˛órs
,

83 
	gVT_vﬁ_œ°_exã¡_£¨ch
,

84 
	gVT_vﬁ_œ°_exã¡_£¨ch_co°
,

85 
	gVT_vﬁ_œ°_∑ge_ˇche_upd©e
,

86 
	gVT_vﬁ_œ°_∑ge_ˇche_föd
,

87 
	gVT_vﬁ_œ°_∑ge_ˇche_föd_hô
,

88 
	gVT_vﬁ_hi°o_ext_ˇche_upd©e
,

89 
	gVT_vﬁ_hi°o_ext_ˇche_föd
,

90 
	gVT_vﬁ_hi°o_ext_ˇche_föd_hô
,

91 
	gVT_vﬁ_ªsv_ˇche_ö£π
,

92 
	gVT_vﬁ_ªsv_ˇche_îa£
,

93 
	gVT_vﬁ_ªsv_ˇche_hô
,

94 
	gVT_vﬁ_ªsv_ˇche_Áû
,

95 
	gVT_vﬁ_lock_nﬂŒoc
,

96 
	gVT_log_dup_sync_˙t
,

97 
	gVT_log_sync_˙t
,

98 
	gVT_log_fsync_˙t
,

99 
	gVT_log_chk±_˙t
,

100 
	gVT_log_chk±_wake
,

101 
	gVT_log_„tches
,

102 
	gVT_log_ö£πs
,

103 
	gVT_log_fuŒ
,

104 
	gVT_log_fuŒ_ﬁd_x˘
,

105 
	gVT_log_fuŒ_ﬁd_∑ge
,

106 
	gVT_log_fuŒ_waô
,

107 
	gVT_log_fuŒ_f‹˚
,

108 
	gVT_log_fuŒ_giveup
,

109 
	gVT_log_fûe_wøp
,

110 
	gVT_log_byãs_gíî©ed
,

111 
	gVT_lock_dódlock_˙t
,

112 
	gVT_lock_Ál£_dódlock_˙t
,

113 
	gVT_lock_dld_ˇŒ_˙t
,

114 
	gVT_lock_dld_fú°_ˇŒ_˙t
,

115 
	gVT_lock_dld_Ál£_vi˘im_˙t
,

116 
	gVT_lock_dld_vi˘im_£lf_˙t
,

117 
	gVT_lock_dld_vi˘im_Ÿhî_˙t
,

118 
	gVT_n⁄unique_fögî¥öts
,

119 
	gVT_unique_fögî¥öts
,

120 
	gVT_ªc_pö_˙t
,

121 
	gVT_ªc_u≈ö_˙t
,

122 
	gVT_ªc_ªpö_cvt
,

123 
	gVT_fm_∑geˇche_hô
,

124 
	gVT_fm_∑ge_nﬁ©ch
,

125 
	gVT_fm_∑ge_moved
,

126 
	gVT_fm_∑ge_övÆid
,

127 
	gVT_fm_∑ge_nﬁock
,

128 
	gVT_fm_Æloc_∑ge_ªje˘
,

129 
	gVT_fm_∑ge_fuŒ
,

130 
	gVT_fm_îr‹_nŸ_h™dÀd
,

131 
	gVT_fm_ok
,

132 
	gVT_fm_hi°ogøm_hô
,

133 
	gVT_fm_£¨ch_∑ges
,

134 
	gVT_fm_£¨ch_Áûed
,

135 
	gVT_fm_£¨ch_hô
,

136 
	gVT_fm_œ°pid_ˇched
,

137 
	gVT_fm_œ°pid_hô
,

138 
	gVT_fm_Æloc_pg
,

139 
	gVT_fm_ext_touch
,

140 
	gVT_fm_ext_touch_n›
,

141 
	gVT_fm_no•a˚
,

142 
	gVT_fm_ˇche
,

143 
	gVT_fm_com∑˘
,

144 
	gVT_fm_≠≥nd
,

145 
	gVT_fm_≠≥nd⁄ly
,

146 
	gVT_bt_föd_˙t
,

147 
	gVT_bt_ö£π_˙t
,

148 
	gVT_bt_ªmove_˙t
,

149 
	gVT_bt_åavî£_˙t
,

150 
	gVT_bt_∑πül_åavî£_˙t
,

151 
	gVT_bt_ª°¨t_åavî£_˙t
,

152 
	gVT_bt_posc
,

153 
	gVT_bt_sˇn_˙t
,

154 
	gVT_bt_•lôs
,

155 
	gVT_bt_Àaf_•lôs
,

156 
	gVT_bt_cuts
,

157 
	gVT_bt_grows
,

158 
	gVT_bt_shröks
,

159 
	gVT_bt_löks
,

160 
	gVT_bt_upgøde_Áû_ªåy
,

161 
	gVT_bt_˛r_smo_åavî£
,

162 
	gVT_bt_pcom¥ess
,

163 
	gVT_bt_∂max
,

164 
	gVT_bt_upd©e_˙t
,

165 
	gVT_s‹t_keycmp_˙t
,

166 
	gVT_s‹t_Àxödx_˙t
,

167 
	gVT_s‹t_gëöfo_˙t
,

168 
	gVT_s‹t_mof_˙t
,

169 
	gVT_s‹t_umof_˙t
,

170 
	gVT_s‹t_mem˝y_˙t
,

171 
	gVT_s‹t_mem˝y_byãs
,

172 
	gVT_s‹t_key˝y_˙t
,

173 
	gVT_s‹t_mÆlocs
,

174 
	gVT_s‹t_mÆloc_byãs
,

175 
	gVT_s‹t_mÆloc_hiw©
,

176 
	gVT_s‹t_mÆloc_max
,

177 
	gVT_s‹t_mÆloc_cuº
,

178 
	gVT_s‹t_tmpfûe_˙t
,

179 
	gVT_s‹t_tmpfûe_byãs
,

180 
	gVT_s‹t_du∂iˇãs
,

181 
	gVT_s‹t_∑ge_fixes
,

182 
	gVT_s‹t_∑ge_fixes_2
,

183 
	gVT_s‹t_lg_∑ge_fixes
,

184 
	gVT_s‹t_ªc_pös
,

185 
	gVT_s‹t_fûes_¸óãd
,

186 
	gVT_s‹t_ªcs_¸óãd
,

187 
	gVT_s‹t_ªc_byãs
,

188 
	gVT_s‹t_runs
,

189 
	gVT_s‹t_run_size
,

190 
	gVT_s‹t_pha£s
,

191 
	gVT_s‹t_¡≠es
,

192 
	gVT_∑ge_fix_˙t
,

193 
	gVT_∑ge_ªfix_˙t
,

194 
	gVT_∑ge_unfix_˙t
,

195 
	gVT_∑ge_Æloc_˙t
,

196 
	gVT_∑ge_dóŒoc_˙t
,

197 
	gVT_∑ge_båì_Æloc
,

198 
	gVT_∑ge_fûe_Æloc
,

199 
	gVT_∑ge_fûe_mrbt_Æloc
,

200 
	gVT_∑ge_båì_dóŒoc
,

201 
	gVT_∑ge_fûe_dóŒoc
,

202 
	gVT_∑ge_fûe_mrbt_dóŒoc
,

203 
	gVT_ext_lookup_hôs
,

204 
	gVT_ext_lookup_mis£s
,

205 
	gVT_Æloc_∑ge_ö_ext
,

206 
	gVT_exã¡_l£¨ch
,

207 
	gVT_begö_x˘_˙t
,

208 
	gVT_commô_x˘_˙t
,

209 
	gVT_ab‹t_x˘_˙t
,

210 
	gVT_log_w¨n_ab‹t_˙t
,

211 
	gVT_¥ï¨e_x˘_˙t
,

212 
	gVT_rﬁlback_ßvït_˙t
,

213 
	gVT_m∂_©èch_˙t
,

214 
	gVT_™ch‹s
,

215 
	gVT_com≥nßã_ö_log
,

216 
	gVT_com≥nßã_ö_x˘
,

217 
	gVT_com≥nßã_ªc‹ds
,

218 
	gVT_com≥nßã_skù≥d
,

219 
	gVT_log_swôches
,

220 
	gVT_awaô_1thªad_log
,

221 
	gVT_acquúe_1thªad_log
,

222 
	gVT_gë_logbuf
,

223 
	gVT_awaô_1thªad_x˘
,

224 
	gVT_awaô_vﬁ_m⁄ô‹
,

225 
	gVT_√ed_vﬁ_lock_r
,

226 
	gVT_√ed_vﬁ_lock_w
,

227 
	gVT_awaô_vﬁ_lock_r
,

228 
	gVT_awaô_vﬁ_lock_w
,

229 
	gVT_awaô_vﬁ_lock_r_p˘
,

230 
	gVT_awaô_vﬁ_lock_w_p˘
,

231 
	gVT_s_¥ï¨ed
,

232 
	gVT_lock_quîy_˙t
,

233 
	gVT_u∆ock_ªque°_˙t
,

234 
	gVT_lock_ªque°_˙t
,

235 
	gVT_lock_acquúe_˙t
,

236 
	gVT_lock_hód_t_˙t
,

237 
	gVT_lock_awaô_Æt_˙t
,

238 
	gVT_lock_exå™eous_ªq_˙t
,

239 
	gVT_lock_c⁄vîsi⁄_˙t
,

240 
	gVT_lock_ˇche_hô_˙t
,

241 
	gVT_lock_ªque°_t_˙t
,

242 
	gVT_lock_esc_to_∑ge
,

243 
	gVT_lock_esc_to_°‹e
,

244 
	gVT_lock_esc_to_vﬁume
,

245 
	gVT_lk_vﬁ_acq
,

246 
	gVT_lk_°‹e_acq
,

247 
	gVT_lk_∑ge_acq
,

248 
	gVT_lk_kvl_acq
,

249 
	gVT_lk_ªc_acq
,

250 
	gVT_lk_ext_acq
,

251 
	gVT_lk_u£r1_acq
,

252 
	gVT_lk_u£r2_acq
,

253 
	gVT_lk_u£r3_acq
,

254 
	gVT_lk_u£r4_acq
,

255 
	gVT_lock_waô_˙t
,

256 
	gVT_lock_block_˙t
,

257 
	gVT_lk_vﬁ_waô
,

258 
	gVT_lk_°‹e_waô
,

259 
	gVT_lk_∑ge_waô
,

260 
	gVT_lk_kvl_waô
,

261 
	gVT_lk_ªc_waô
,

262 
	gVT_lk_ext_waô
,

263 
	gVT_lk_u£r1_waô
,

264 
	gVT_lk_u£r2_waô
,

265 
	gVT_lk_u£r3_waô
,

266 
	gVT_lk_u£r4_waô
,

267 
	gVT_¶i_ªque°ed
,

268 
	gVT_¶i_acquúed
,

269 
	gVT_¶i_upgødes
,

270 
	gVT_¶i_ñigibÀ
,

271 
	gVT_¶i_öhîôed
,

272 
	gVT_¶i_u£d
,

273 
	gVT_¶i_too_wók
,

274 
	gVT_¶i_found_œã
,

275 
	gVT_¶i_purged
,

276 
	gVT_¶i_övÆid©ed
,

277 
	gVT_¶i_kït
,

278 
	gVT_¶i_evi˘ed
,

279 
	gVT_¶i_no_∑ª¡
,

280 
	gVT_¶i_waôed_⁄
,

281 
	gVT_dú_ˇche_hô
,

282 
	gVT_dú_ˇche_miss
,

283 
	gVT_dú_ˇche_öhîô
,

284 
	gVT_dú_ˇche_°Æe
,

	@src/sm/sm_stats_t_collect_gen.cpp

1 #i‚de‡
SM_STATS_T_COLLECT_GEN_CPP


2 
	#SM_STATS_T_COLLECT_GEN_CPP


	)

36 
	gt
.
£t_ba£
(
VT_bf_⁄e_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_⁄e_∑ge_wrôe
));

37 
	gt
.
£t_ba£
(
VT_bf_two_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_two_∑ge_wrôe
));

38 
	gt
.
£t_ba£
(
VT_bf_thªe_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_thªe_∑ge_wrôe
));

39 
	gt
.
£t_ba£
(
VT_bf_four_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_four_∑ge_wrôe
));

40 
	gt
.
£t_ba£
(
VT_bf_five_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_five_∑ge_wrôe
));

41 
	gt
.
£t_ba£
(
VT_bf_six_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_six_∑ge_wrôe
));

42 
	gt
.
£t_ba£
(
VT_bf_£ví_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_£ví_∑ge_wrôe
));

43 
	gt
.
£t_ba£
(
VT_bf_eight_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_eight_∑ge_wrôe
));

44 
	gt
.
£t_ba£
(
VT_bf_m‹e_∑ge_wrôe
, 
TMP_GET_STAT
(
bf_m‹e_∑ge_wrôe
));

45 
	gt
.
£t_ba£
(
VT_bf_˛ó√r_swìps
, 
TMP_GET_STAT
(
bf_˛ó√r_swìps
));

46 
	gt
.
£t_ba£
(
VT_bf_˛ó√r_sig«Œed
, 
TMP_GET_STAT
(
bf_˛ó√r_sig«Œed
));

47 
	gt
.
£t_ba£
(
VT_bf_Æªady_evi˘ed
, 
TMP_GET_STAT
(
bf_Æªady_evi˘ed
));

48 
	gt
.
£t_ba£
(
VT_bf_dúty_∑ge_˛ó√d
, 
TMP_GET_STAT
(
bf_dúty_∑ge_˛ó√d
));

49 
	gt
.
£t_ba£
(
VT_bf_Êushed_OHD_∑ge
, 
TMP_GET_STAT
(
bf_Êushed_OHD_∑ge
));

50 
	gt
.
£t_ba£
(
VT_bf_kick_fuŒ
, 
TMP_GET_STAT
(
bf_kick_fuŒ
));

51 
	gt
.
£t_ba£
(
VT_bf_kick_ª∂a˚mít
, 
TMP_GET_STAT
(
bf_kick_ª∂a˚mít
));

52 
	gt
.
£t_ba£
(
VT_bf_kick_thªshﬁd
, 
TMP_GET_STAT
(
bf_kick_thªshﬁd
));

53 
	gt
.
£t_ba£
(
VT_bf_swìp_∑ge_hŸ_skù≥d
, 
TMP_GET_STAT
(
bf_swìp_∑ge_hŸ_skù≥d
));

54 
	gt
.
£t_ba£
(
VT_bf_disˇrded_hŸ
, 
TMP_GET_STAT
(
bf_disˇrded_hŸ
));

55 
	gt
.
£t_ba£
(
VT_bf_log_Êush_Æl
, 
TMP_GET_STAT
(
bf_log_Êush_Æl
));

56 
	gt
.
£t_ba£
(
VT_bf_log_Êush_l¢
, 
TMP_GET_STAT
(
bf_log_Êush_l¢
));

57 
	gt
.
£t_ba£
(
VT_bf_wrôe_out
, 
TMP_GET_STAT
(
bf_wrôe_out
));

58 
	gt
.
£t_ba£
(
VT_bf_¶ìp_awaô_˛ón
, 
TMP_GET_STAT
(
bf_¶ìp_awaô_˛ón
));

59 
	gt
.
£t_ba£
(
VT_bf_fg_sˇn_˙t
, 
TMP_GET_STAT
(
bf_fg_sˇn_˙t
));

60 
	gt
.
£t_ba£
(
VT_bf_c‹e_u≈ö_˛ó√d
, 
TMP_GET_STAT
(
bf_c‹e_u≈ö_˛ó√d
));

61 
	gt
.
£t_ba£
(
VT_bf_unfix_˛ó√d
, 
TMP_GET_STAT
(
bf_unfix_˛ó√d
));

62 
	gt
.
£t_ba£
(
VT_bf_look_˙t
, 
TMP_GET_STAT
(
bf_look_˙t
));

63 
	gt
.
£t_ba£
(
VT_bf_hô_˙t
, 
TMP_GET_STAT
(
bf_hô_˙t
));

64 
	gt
.
£t_ba£
(
VT_bf_gøb_œtch_Áûed
, 
TMP_GET_STAT
(
bf_gøb_œtch_Áûed
));

65 
	gt
.
£t_ba£
(
VT_bf_ª∂a˚_out
, 
TMP_GET_STAT
(
bf_ª∂a˚_out
));

66 
	gt
.
£t_ba£
(
VT_bf_ª∂a˚d_dúty
, 
TMP_GET_STAT
(
bf_ª∂a˚d_dúty
));

67 
	gt
.
£t_ba£
(
VT_bf_ª∂a˚d_˛ón
, 
TMP_GET_STAT
(
bf_ª∂a˚d_˛ón
));

68 
	gt
.
£t_ba£
(
VT_bf_no_å™sô_buckë
, 
TMP_GET_STAT
(
bf_no_å™sô_buckë
));

69 
	gt
.
£t_ba£
(
VT_bf_¥e„tch_ªque°s
, 
TMP_GET_STAT
(
bf_¥e„tch_ªque°s
));

70 
	gt
.
£t_ba£
(
VT_bf_¥e„tches
, 
TMP_GET_STAT
(
bf_¥e„tches
));

71 
	gt
.
£t_ba£
(
VT_bf_upgøde_œtch_ø˚
, 
TMP_GET_STAT
(
bf_upgøde_œtch_ø˚
));

72 
	gt
.
£t_ba£
(
VT_bf_upgøde_œtch_ch™ged
, 
TMP_GET_STAT
(
bf_upgøde_œtch_ch™ged
));

73 
	gt
.
£t_ba£
(
VT_ª°¨t_ª∑ú_ªc_l¢
, 
TMP_GET_STAT
(
ª°¨t_ª∑ú_ªc_l¢
));

74 
	gt
.
£t_ba£
(
VT_vﬁ_ªads
, 
TMP_GET_STAT
(
vﬁ_ªads
));

75 
	gt
.
£t_ba£
(
VT_vﬁ_wrôes
, 
TMP_GET_STAT
(
vﬁ_wrôes
));

76 
	gt
.
£t_ba£
(
VT_vﬁ_blks_wrôãn
, 
TMP_GET_STAT
(
vﬁ_blks_wrôãn
));

77 
	gt
.
£t_ba£
(
VT_vﬁ_Æloc_exts
, 
TMP_GET_STAT
(
vﬁ_Æloc_exts
));

78 
	gt
.
£t_ba£
(
VT_vﬁ_‰ì_exts
, 
TMP_GET_STAT
(
vﬁ_‰ì_exts
));

79 
	gt
.
£t_ba£
(
VT_io_m_löór_£¨ches
, 
TMP_GET_STAT
(
io_m_löór_£¨ches
));

80 
	gt
.
£t_ba£
(
VT_io_m_löór_£¨ch_exã¡s
, 
TMP_GET_STAT
(
io_m_löór_£¨ch_exã¡s
));

81 
	gt
.
£t_ba£
(
VT_vﬁ_ˇche_¥imes
, 
TMP_GET_STAT
(
vﬁ_ˇche_¥imes
));

82 
	gt
.
£t_ba£
(
VT_vﬁ_ˇche_˛órs
, 
TMP_GET_STAT
(
vﬁ_ˇche_˛órs
));

83 
	gt
.
£t_ba£
(
VT_vﬁ_œ°_exã¡_£¨ch
, 
TMP_GET_STAT
(
vﬁ_œ°_exã¡_£¨ch
));

84 
	gt
.
£t_ba£
(
VT_vﬁ_œ°_exã¡_£¨ch_co°
, 
TMP_GET_STAT
(
vﬁ_œ°_exã¡_£¨ch_co°
));

85 
	gt
.
£t_ba£
(
VT_vﬁ_œ°_∑ge_ˇche_upd©e
, 
TMP_GET_STAT
(
vﬁ_œ°_∑ge_ˇche_upd©e
));

86 
	gt
.
£t_ba£
(
VT_vﬁ_œ°_∑ge_ˇche_föd
, 
TMP_GET_STAT
(
vﬁ_œ°_∑ge_ˇche_föd
));

87 
	gt
.
£t_ba£
(
VT_vﬁ_œ°_∑ge_ˇche_föd_hô
, 
TMP_GET_STAT
(
vﬁ_œ°_∑ge_ˇche_föd_hô
));

88 
	gt
.
£t_ba£
(
VT_vﬁ_hi°o_ext_ˇche_upd©e
, 
TMP_GET_STAT
(
vﬁ_hi°o_ext_ˇche_upd©e
));

89 
	gt
.
£t_ba£
(
VT_vﬁ_hi°o_ext_ˇche_föd
, 
TMP_GET_STAT
(
vﬁ_hi°o_ext_ˇche_föd
));

90 
	gt
.
£t_ba£
(
VT_vﬁ_hi°o_ext_ˇche_föd_hô
, 
TMP_GET_STAT
(
vﬁ_hi°o_ext_ˇche_föd_hô
));

91 
	gt
.
£t_ba£
(
VT_vﬁ_ªsv_ˇche_ö£π
, 
TMP_GET_STAT
(
vﬁ_ªsv_ˇche_ö£π
));

92 
	gt
.
£t_ba£
(
VT_vﬁ_ªsv_ˇche_îa£
, 
TMP_GET_STAT
(
vﬁ_ªsv_ˇche_îa£
));

93 
	gt
.
£t_ba£
(
VT_vﬁ_ªsv_ˇche_hô
, 
TMP_GET_STAT
(
vﬁ_ªsv_ˇche_hô
));

94 
	gt
.
£t_ba£
(
VT_vﬁ_ªsv_ˇche_Áû
, 
TMP_GET_STAT
(
vﬁ_ªsv_ˇche_Áû
));

95 
	gt
.
£t_ba£
(
VT_vﬁ_lock_nﬂŒoc
, 
TMP_GET_STAT
(
vﬁ_lock_nﬂŒoc
));

96 
	gt
.
£t_ba£
(
VT_log_dup_sync_˙t
, 
TMP_GET_STAT
(
log_dup_sync_˙t
));

97 
	gt
.
£t_ba£
(
VT_log_sync_˙t
, 
TMP_GET_STAT
(
log_sync_˙t
));

98 
	gt
.
£t_ba£
(
VT_log_fsync_˙t
, 
TMP_GET_STAT
(
log_fsync_˙t
));

99 
	gt
.
£t_ba£
(
VT_log_chk±_˙t
, 
TMP_GET_STAT
(
log_chk±_˙t
));

100 
	gt
.
£t_ba£
(
VT_log_chk±_wake
, 
TMP_GET_STAT
(
log_chk±_wake
));

101 
	gt
.
£t_ba£
(
VT_log_„tches
, 
TMP_GET_STAT
(
log_„tches
));

102 
	gt
.
£t_ba£
(
VT_log_ö£πs
, 
TMP_GET_STAT
(
log_ö£πs
));

103 
	gt
.
£t_ba£
(
VT_log_fuŒ
, 
TMP_GET_STAT
(
log_fuŒ
));

104 
	gt
.
£t_ba£
(
VT_log_fuŒ_ﬁd_x˘
, 
TMP_GET_STAT
(
log_fuŒ_ﬁd_x˘
));

105 
	gt
.
£t_ba£
(
VT_log_fuŒ_ﬁd_∑ge
, 
TMP_GET_STAT
(
log_fuŒ_ﬁd_∑ge
));

106 
	gt
.
£t_ba£
(
VT_log_fuŒ_waô
, 
TMP_GET_STAT
(
log_fuŒ_waô
));

107 
	gt
.
£t_ba£
(
VT_log_fuŒ_f‹˚
, 
TMP_GET_STAT
(
log_fuŒ_f‹˚
));

108 
	gt
.
£t_ba£
(
VT_log_fuŒ_giveup
, 
TMP_GET_STAT
(
log_fuŒ_giveup
));

109 
	gt
.
£t_ba£
(
VT_log_fûe_wøp
, 
TMP_GET_STAT
(
log_fûe_wøp
));

110 
	gt
.
£t_ba£
(
VT_log_byãs_gíî©ed
, 
TMP_GET_STAT
(
log_byãs_gíî©ed
));

111 
	gt
.
£t_ba£
(
VT_lock_dódlock_˙t
, 
TMP_GET_STAT
(
lock_dódlock_˙t
));

112 
	gt
.
£t_ba£
(
VT_lock_Ál£_dódlock_˙t
, 
TMP_GET_STAT
(
lock_Ál£_dódlock_˙t
));

113 
	gt
.
£t_ba£
(
VT_lock_dld_ˇŒ_˙t
, 
TMP_GET_STAT
(
lock_dld_ˇŒ_˙t
));

114 
	gt
.
£t_ba£
(
VT_lock_dld_fú°_ˇŒ_˙t
, 
TMP_GET_STAT
(
lock_dld_fú°_ˇŒ_˙t
));

115 
	gt
.
£t_ba£
(
VT_lock_dld_Ál£_vi˘im_˙t
, 
TMP_GET_STAT
(
lock_dld_Ál£_vi˘im_˙t
));

116 
	gt
.
£t_ba£
(
VT_lock_dld_vi˘im_£lf_˙t
, 
TMP_GET_STAT
(
lock_dld_vi˘im_£lf_˙t
));

117 
	gt
.
£t_ba£
(
VT_lock_dld_vi˘im_Ÿhî_˙t
, 
TMP_GET_STAT
(
lock_dld_vi˘im_Ÿhî_˙t
));

118 
	gt
.
£t_ba£
(
VT_n⁄unique_fögî¥öts
, 
TMP_GET_STAT
(
n⁄unique_fögî¥öts
));

119 
	gt
.
£t_ba£
(
VT_unique_fögî¥öts
, 
TMP_GET_STAT
(
unique_fögî¥öts
));

120 
	gt
.
£t_ba£
(
VT_ªc_pö_˙t
, 
TMP_GET_STAT
(
ªc_pö_˙t
));

121 
	gt
.
£t_ba£
(
VT_ªc_u≈ö_˙t
, 
TMP_GET_STAT
(
ªc_u≈ö_˙t
));

122 
	gt
.
£t_ba£
(
VT_ªc_ªpö_cvt
, 
TMP_GET_STAT
(
ªc_ªpö_cvt
));

123 
	gt
.
£t_ba£
(
VT_fm_∑geˇche_hô
, 
TMP_GET_STAT
(
fm_∑geˇche_hô
));

124 
	gt
.
£t_ba£
(
VT_fm_∑ge_nﬁ©ch
, 
TMP_GET_STAT
(
fm_∑ge_nﬁ©ch
));

125 
	gt
.
£t_ba£
(
VT_fm_∑ge_moved
, 
TMP_GET_STAT
(
fm_∑ge_moved
));

126 
	gt
.
£t_ba£
(
VT_fm_∑ge_övÆid
, 
TMP_GET_STAT
(
fm_∑ge_övÆid
));

127 
	gt
.
£t_ba£
(
VT_fm_∑ge_nﬁock
, 
TMP_GET_STAT
(
fm_∑ge_nﬁock
));

128 
	gt
.
£t_ba£
(
VT_fm_Æloc_∑ge_ªje˘
, 
TMP_GET_STAT
(
fm_Æloc_∑ge_ªje˘
));

129 
	gt
.
£t_ba£
(
VT_fm_∑ge_fuŒ
, 
TMP_GET_STAT
(
fm_∑ge_fuŒ
));

130 
	gt
.
£t_ba£
(
VT_fm_îr‹_nŸ_h™dÀd
, 
TMP_GET_STAT
(
fm_îr‹_nŸ_h™dÀd
));

131 
	gt
.
£t_ba£
(
VT_fm_ok
, 
TMP_GET_STAT
(
fm_ok
));

132 
	gt
.
£t_ba£
(
VT_fm_hi°ogøm_hô
, 
TMP_GET_STAT
(
fm_hi°ogøm_hô
));

133 
	gt
.
£t_ba£
(
VT_fm_£¨ch_∑ges
, 
TMP_GET_STAT
(
fm_£¨ch_∑ges
));

134 
	gt
.
£t_ba£
(
VT_fm_£¨ch_Áûed
, 
TMP_GET_STAT
(
fm_£¨ch_Áûed
));

135 
	gt
.
£t_ba£
(
VT_fm_£¨ch_hô
, 
TMP_GET_STAT
(
fm_£¨ch_hô
));

136 
	gt
.
£t_ba£
(
VT_fm_œ°pid_ˇched
, 
TMP_GET_STAT
(
fm_œ°pid_ˇched
));

137 
	gt
.
£t_ba£
(
VT_fm_œ°pid_hô
, 
TMP_GET_STAT
(
fm_œ°pid_hô
));

138 
	gt
.
£t_ba£
(
VT_fm_Æloc_pg
, 
TMP_GET_STAT
(
fm_Æloc_pg
));

139 
	gt
.
£t_ba£
(
VT_fm_ext_touch
, 
TMP_GET_STAT
(
fm_ext_touch
));

140 
	gt
.
£t_ba£
(
VT_fm_ext_touch_n›
, 
TMP_GET_STAT
(
fm_ext_touch_n›
));

141 
	gt
.
£t_ba£
(
VT_fm_no•a˚
, 
TMP_GET_STAT
(
fm_no•a˚
));

142 
	gt
.
£t_ba£
(
VT_fm_ˇche
, 
TMP_GET_STAT
(
fm_ˇche
));

143 
	gt
.
£t_ba£
(
VT_fm_com∑˘
, 
TMP_GET_STAT
(
fm_com∑˘
));

144 
	gt
.
£t_ba£
(
VT_fm_≠≥nd
, 
TMP_GET_STAT
(
fm_≠≥nd
));

145 
	gt
.
£t_ba£
(
VT_fm_≠≥nd⁄ly
, 
TMP_GET_STAT
(
fm_≠≥nd⁄ly
));

146 
	gt
.
£t_ba£
(
VT_bt_föd_˙t
, 
TMP_GET_STAT
(
bt_föd_˙t
));

147 
	gt
.
£t_ba£
(
VT_bt_ö£π_˙t
, 
TMP_GET_STAT
(
bt_ö£π_˙t
));

148 
	gt
.
£t_ba£
(
VT_bt_ªmove_˙t
, 
TMP_GET_STAT
(
bt_ªmove_˙t
));

149 
	gt
.
£t_ba£
(
VT_bt_åavî£_˙t
, 
TMP_GET_STAT
(
bt_åavî£_˙t
));

150 
	gt
.
£t_ba£
(
VT_bt_∑πül_åavî£_˙t
, 
TMP_GET_STAT
(
bt_∑πül_åavî£_˙t
));

151 
	gt
.
£t_ba£
(
VT_bt_ª°¨t_åavî£_˙t
, 
TMP_GET_STAT
(
bt_ª°¨t_åavî£_˙t
));

152 
	gt
.
£t_ba£
(
VT_bt_posc
, 
TMP_GET_STAT
(
bt_posc
));

153 
	gt
.
£t_ba£
(
VT_bt_sˇn_˙t
, 
TMP_GET_STAT
(
bt_sˇn_˙t
));

154 
	gt
.
£t_ba£
(
VT_bt_•lôs
, 
TMP_GET_STAT
(
bt_•lôs
));

155 
	gt
.
£t_ba£
(
VT_bt_Àaf_•lôs
, 
TMP_GET_STAT
(
bt_Àaf_•lôs
));

156 
	gt
.
£t_ba£
(
VT_bt_cuts
, 
TMP_GET_STAT
(
bt_cuts
));

157 
	gt
.
£t_ba£
(
VT_bt_grows
, 
TMP_GET_STAT
(
bt_grows
));

158 
	gt
.
£t_ba£
(
VT_bt_shröks
, 
TMP_GET_STAT
(
bt_shröks
));

159 
	gt
.
£t_ba£
(
VT_bt_löks
, 
TMP_GET_STAT
(
bt_löks
));

160 
	gt
.
£t_ba£
(
VT_bt_upgøde_Áû_ªåy
, 
TMP_GET_STAT
(
bt_upgøde_Áû_ªåy
));

161 
	gt
.
£t_ba£
(
VT_bt_˛r_smo_åavî£
, 
TMP_GET_STAT
(
bt_˛r_smo_åavî£
));

162 
	gt
.
£t_ba£
(
VT_bt_pcom¥ess
, 
TMP_GET_STAT
(
bt_pcom¥ess
));

163 
	gt
.
£t_ba£
(
VT_bt_∂max
, 
TMP_GET_STAT
(
bt_∂max
));

164 
	gt
.
£t_ba£
(
VT_bt_upd©e_˙t
, 
TMP_GET_STAT
(
bt_upd©e_˙t
));

165 
	gt
.
£t_ba£
(
VT_s‹t_keycmp_˙t
, 
TMP_GET_STAT
(
s‹t_keycmp_˙t
));

166 
	gt
.
£t_ba£
(
VT_s‹t_Àxödx_˙t
, 
TMP_GET_STAT
(
s‹t_Àxödx_˙t
));

167 
	gt
.
£t_ba£
(
VT_s‹t_gëöfo_˙t
, 
TMP_GET_STAT
(
s‹t_gëöfo_˙t
));

168 
	gt
.
£t_ba£
(
VT_s‹t_mof_˙t
, 
TMP_GET_STAT
(
s‹t_mof_˙t
));

169 
	gt
.
£t_ba£
(
VT_s‹t_umof_˙t
, 
TMP_GET_STAT
(
s‹t_umof_˙t
));

170 
	gt
.
£t_ba£
(
VT_s‹t_mem˝y_˙t
, 
TMP_GET_STAT
(
s‹t_mem˝y_˙t
));

171 
	gt
.
£t_ba£
(
VT_s‹t_mem˝y_byãs
, 
TMP_GET_STAT
(
s‹t_mem˝y_byãs
));

172 
	gt
.
£t_ba£
(
VT_s‹t_key˝y_˙t
, 
TMP_GET_STAT
(
s‹t_key˝y_˙t
));

173 
	gt
.
£t_ba£
(
VT_s‹t_mÆlocs
, 
TMP_GET_STAT
(
s‹t_mÆlocs
));

174 
	gt
.
£t_ba£
(
VT_s‹t_mÆloc_byãs
, 
TMP_GET_STAT
(
s‹t_mÆloc_byãs
));

175 
	gt
.
£t_ba£
(
VT_s‹t_mÆloc_hiw©
, 
TMP_GET_STAT
(
s‹t_mÆloc_hiw©
));

176 
	gt
.
£t_ba£
(
VT_s‹t_mÆloc_max
, 
TMP_GET_STAT
(
s‹t_mÆloc_max
));

177 
	gt
.
£t_ba£
(
VT_s‹t_mÆloc_cuº
, 
TMP_GET_STAT
(
s‹t_mÆloc_cuº
));

178 
	gt
.
£t_ba£
(
VT_s‹t_tmpfûe_˙t
, 
TMP_GET_STAT
(
s‹t_tmpfûe_˙t
));

179 
	gt
.
£t_ba£
(
VT_s‹t_tmpfûe_byãs
, 
TMP_GET_STAT
(
s‹t_tmpfûe_byãs
));

180 
	gt
.
£t_ba£
(
VT_s‹t_du∂iˇãs
, 
TMP_GET_STAT
(
s‹t_du∂iˇãs
));

181 
	gt
.
£t_ba£
(
VT_s‹t_∑ge_fixes
, 
TMP_GET_STAT
(
s‹t_∑ge_fixes
));

182 
	gt
.
£t_ba£
(
VT_s‹t_∑ge_fixes_2
, 
TMP_GET_STAT
(
s‹t_∑ge_fixes_2
));

183 
	gt
.
£t_ba£
(
VT_s‹t_lg_∑ge_fixes
, 
TMP_GET_STAT
(
s‹t_lg_∑ge_fixes
));

184 
	gt
.
£t_ba£
(
VT_s‹t_ªc_pös
, 
TMP_GET_STAT
(
s‹t_ªc_pös
));

185 
	gt
.
£t_ba£
(
VT_s‹t_fûes_¸óãd
, 
TMP_GET_STAT
(
s‹t_fûes_¸óãd
));

186 
	gt
.
£t_ba£
(
VT_s‹t_ªcs_¸óãd
, 
TMP_GET_STAT
(
s‹t_ªcs_¸óãd
));

187 
	gt
.
£t_ba£
(
VT_s‹t_ªc_byãs
, 
TMP_GET_STAT
(
s‹t_ªc_byãs
));

188 
	gt
.
£t_ba£
(
VT_s‹t_runs
, 
TMP_GET_STAT
(
s‹t_runs
));

189 
	gt
.
£t_ba£
(
VT_s‹t_run_size
, 
TMP_GET_STAT
(
s‹t_run_size
));

190 
	gt
.
£t_ba£
(
VT_s‹t_pha£s
, 
TMP_GET_STAT
(
s‹t_pha£s
));

191 
	gt
.
£t_ba£
(
VT_s‹t_¡≠es
, 
TMP_GET_STAT
(
s‹t_¡≠es
));

192 
	gt
.
£t_ba£
(
VT_∑ge_fix_˙t
, 
TMP_GET_STAT
(
∑ge_fix_˙t
));

193 
	gt
.
£t_ba£
(
VT_∑ge_ªfix_˙t
, 
TMP_GET_STAT
(
∑ge_ªfix_˙t
));

194 
	gt
.
£t_ba£
(
VT_∑ge_unfix_˙t
, 
TMP_GET_STAT
(
∑ge_unfix_˙t
));

195 
	gt
.
£t_ba£
(
VT_∑ge_Æloc_˙t
, 
TMP_GET_STAT
(
∑ge_Æloc_˙t
));

196 
	gt
.
£t_ba£
(
VT_∑ge_dóŒoc_˙t
, 
TMP_GET_STAT
(
∑ge_dóŒoc_˙t
));

197 
	gt
.
£t_ba£
(
VT_∑ge_båì_Æloc
, 
TMP_GET_STAT
(
∑ge_båì_Æloc
));

198 
	gt
.
£t_ba£
(
VT_∑ge_fûe_Æloc
, 
TMP_GET_STAT
(
∑ge_fûe_Æloc
));

199 
	gt
.
£t_ba£
(
VT_∑ge_fûe_mrbt_Æloc
, 
TMP_GET_STAT
(
∑ge_fûe_mrbt_Æloc
));

200 
	gt
.
£t_ba£
(
VT_∑ge_båì_dóŒoc
, 
TMP_GET_STAT
(
∑ge_båì_dóŒoc
));

201 
	gt
.
£t_ba£
(
VT_∑ge_fûe_dóŒoc
, 
TMP_GET_STAT
(
∑ge_fûe_dóŒoc
));

202 
	gt
.
£t_ba£
(
VT_∑ge_fûe_mrbt_dóŒoc
, 
TMP_GET_STAT
(
∑ge_fûe_mrbt_dóŒoc
));

203 
	gt
.
£t_ba£
(
VT_ext_lookup_hôs
, 
TMP_GET_STAT
(
ext_lookup_hôs
));

204 
	gt
.
£t_ba£
(
VT_ext_lookup_mis£s
, 
TMP_GET_STAT
(
ext_lookup_mis£s
));

205 
	gt
.
£t_ba£
(
VT_Æloc_∑ge_ö_ext
, 
TMP_GET_STAT
(
Æloc_∑ge_ö_ext
));

206 
	gt
.
£t_ba£
(
VT_exã¡_l£¨ch
, 
TMP_GET_STAT
(
exã¡_l£¨ch
));

207 
	gt
.
£t_ba£
(
VT_begö_x˘_˙t
, 
TMP_GET_STAT
(
begö_x˘_˙t
));

208 
	gt
.
£t_ba£
(
VT_commô_x˘_˙t
, 
TMP_GET_STAT
(
commô_x˘_˙t
));

209 
	gt
.
£t_ba£
(
VT_ab‹t_x˘_˙t
, 
TMP_GET_STAT
(
ab‹t_x˘_˙t
));

210 
	gt
.
£t_ba£
(
VT_log_w¨n_ab‹t_˙t
, 
TMP_GET_STAT
(
log_w¨n_ab‹t_˙t
));

211 
	gt
.
£t_ba£
(
VT_¥ï¨e_x˘_˙t
, 
TMP_GET_STAT
(
¥ï¨e_x˘_˙t
));

212 
	gt
.
£t_ba£
(
VT_rﬁlback_ßvït_˙t
, 
TMP_GET_STAT
(
rﬁlback_ßvït_˙t
));

213 
	gt
.
£t_ba£
(
VT_m∂_©èch_˙t
, 
TMP_GET_STAT
(
m∂_©èch_˙t
));

214 
	gt
.
£t_ba£
(
VT_™ch‹s
, 
TMP_GET_STAT
(
™ch‹s
));

215 
	gt
.
£t_ba£
(
VT_com≥nßã_ö_log
, 
TMP_GET_STAT
(
com≥nßã_ö_log
));

216 
	gt
.
£t_ba£
(
VT_com≥nßã_ö_x˘
, 
TMP_GET_STAT
(
com≥nßã_ö_x˘
));

217 
	gt
.
£t_ba£
(
VT_com≥nßã_ªc‹ds
, 
TMP_GET_STAT
(
com≥nßã_ªc‹ds
));

218 
	gt
.
£t_ba£
(
VT_com≥nßã_skù≥d
, 
TMP_GET_STAT
(
com≥nßã_skù≥d
));

219 
	gt
.
£t_ba£
(
VT_log_swôches
, 
TMP_GET_STAT
(
log_swôches
));

220 
	gt
.
£t_ba£
(
VT_awaô_1thªad_log
, 
TMP_GET_STAT
(
awaô_1thªad_log
));

221 
	gt
.
£t_ba£
(
VT_acquúe_1thªad_log
, 
TMP_GET_STAT
(
acquúe_1thªad_log
));

222 
	gt
.
£t_ba£
(
VT_gë_logbuf
, 
TMP_GET_STAT
(
gë_logbuf
));

223 
	gt
.
£t_ba£
(
VT_awaô_1thªad_x˘
, 
TMP_GET_STAT
(
awaô_1thªad_x˘
));

224 
	gt
.
£t_ba£
(
VT_awaô_vﬁ_m⁄ô‹
, 
TMP_GET_STAT
(
awaô_vﬁ_m⁄ô‹
));

225 
	gt
.
£t_ba£
(
VT_√ed_vﬁ_lock_r
, 
TMP_GET_STAT
(
√ed_vﬁ_lock_r
));

226 
	gt
.
£t_ba£
(
VT_√ed_vﬁ_lock_w
, 
TMP_GET_STAT
(
√ed_vﬁ_lock_w
));

227 
	gt
.
£t_ba£
(
VT_awaô_vﬁ_lock_r
, 
TMP_GET_STAT
(
awaô_vﬁ_lock_r
));

228 
	gt
.
£t_ba£
(
VT_awaô_vﬁ_lock_w
, 
TMP_GET_STAT
(
awaô_vﬁ_lock_w
));

229 
	gt
.
£t_ba£
(
VT_awaô_vﬁ_lock_r_p˘
, 
TMP_GET_STAT
(
awaô_vﬁ_lock_r_p˘
));

230 
	gt
.
£t_ba£
(
VT_awaô_vﬁ_lock_w_p˘
, 
TMP_GET_STAT
(
awaô_vﬁ_lock_w_p˘
));

231 
	gt
.
£t_ba£
(
VT_s_¥ï¨ed
, 
TMP_GET_STAT
(
s_¥ï¨ed
));

232 
	gt
.
£t_ba£
(
VT_lock_quîy_˙t
, 
TMP_GET_STAT
(
lock_quîy_˙t
));

233 
	gt
.
£t_ba£
(
VT_u∆ock_ªque°_˙t
, 
TMP_GET_STAT
(
u∆ock_ªque°_˙t
));

234 
	gt
.
£t_ba£
(
VT_lock_ªque°_˙t
, 
TMP_GET_STAT
(
lock_ªque°_˙t
));

235 
	gt
.
£t_ba£
(
VT_lock_acquúe_˙t
, 
TMP_GET_STAT
(
lock_acquúe_˙t
));

236 
	gt
.
£t_ba£
(
VT_lock_hód_t_˙t
, 
TMP_GET_STAT
(
lock_hód_t_˙t
));

237 
	gt
.
£t_ba£
(
VT_lock_awaô_Æt_˙t
, 
TMP_GET_STAT
(
lock_awaô_Æt_˙t
));

238 
	gt
.
£t_ba£
(
VT_lock_exå™eous_ªq_˙t
, 
TMP_GET_STAT
(
lock_exå™eous_ªq_˙t
));

239 
	gt
.
£t_ba£
(
VT_lock_c⁄vîsi⁄_˙t
, 
TMP_GET_STAT
(
lock_c⁄vîsi⁄_˙t
));

240 
	gt
.
£t_ba£
(
VT_lock_ˇche_hô_˙t
, 
TMP_GET_STAT
(
lock_ˇche_hô_˙t
));

241 
	gt
.
£t_ba£
(
VT_lock_ªque°_t_˙t
, 
TMP_GET_STAT
(
lock_ªque°_t_˙t
));

242 
	gt
.
£t_ba£
(
VT_lock_esc_to_∑ge
, 
TMP_GET_STAT
(
lock_esc_to_∑ge
));

243 
	gt
.
£t_ba£
(
VT_lock_esc_to_°‹e
, 
TMP_GET_STAT
(
lock_esc_to_°‹e
));

244 
	gt
.
£t_ba£
(
VT_lock_esc_to_vﬁume
, 
TMP_GET_STAT
(
lock_esc_to_vﬁume
));

245 
	gt
.
£t_ba£
(
VT_lk_vﬁ_acq
, 
TMP_GET_STAT
(
lk_vﬁ_acq
));

246 
	gt
.
£t_ba£
(
VT_lk_°‹e_acq
, 
TMP_GET_STAT
(
lk_°‹e_acq
));

247 
	gt
.
£t_ba£
(
VT_lk_∑ge_acq
, 
TMP_GET_STAT
(
lk_∑ge_acq
));

248 
	gt
.
£t_ba£
(
VT_lk_kvl_acq
, 
TMP_GET_STAT
(
lk_kvl_acq
));

249 
	gt
.
£t_ba£
(
VT_lk_ªc_acq
, 
TMP_GET_STAT
(
lk_ªc_acq
));

250 
	gt
.
£t_ba£
(
VT_lk_ext_acq
, 
TMP_GET_STAT
(
lk_ext_acq
));

251 
	gt
.
£t_ba£
(
VT_lk_u£r1_acq
, 
TMP_GET_STAT
(
lk_u£r1_acq
));

252 
	gt
.
£t_ba£
(
VT_lk_u£r2_acq
, 
TMP_GET_STAT
(
lk_u£r2_acq
));

253 
	gt
.
£t_ba£
(
VT_lk_u£r3_acq
, 
TMP_GET_STAT
(
lk_u£r3_acq
));

254 
	gt
.
£t_ba£
(
VT_lk_u£r4_acq
, 
TMP_GET_STAT
(
lk_u£r4_acq
));

255 
	gt
.
£t_ba£
(
VT_lock_waô_˙t
, 
TMP_GET_STAT
(
lock_waô_˙t
));

256 
	gt
.
£t_ba£
(
VT_lock_block_˙t
, 
TMP_GET_STAT
(
lock_block_˙t
));

257 
	gt
.
£t_ba£
(
VT_lk_vﬁ_waô
, 
TMP_GET_STAT
(
lk_vﬁ_waô
));

258 
	gt
.
£t_ba£
(
VT_lk_°‹e_waô
, 
TMP_GET_STAT
(
lk_°‹e_waô
));

259 
	gt
.
£t_ba£
(
VT_lk_∑ge_waô
, 
TMP_GET_STAT
(
lk_∑ge_waô
));

260 
	gt
.
£t_ba£
(
VT_lk_kvl_waô
, 
TMP_GET_STAT
(
lk_kvl_waô
));

261 
	gt
.
£t_ba£
(
VT_lk_ªc_waô
, 
TMP_GET_STAT
(
lk_ªc_waô
));

262 
	gt
.
£t_ba£
(
VT_lk_ext_waô
, 
TMP_GET_STAT
(
lk_ext_waô
));

263 
	gt
.
£t_ba£
(
VT_lk_u£r1_waô
, 
TMP_GET_STAT
(
lk_u£r1_waô
));

264 
	gt
.
£t_ba£
(
VT_lk_u£r2_waô
, 
TMP_GET_STAT
(
lk_u£r2_waô
));

265 
	gt
.
£t_ba£
(
VT_lk_u£r3_waô
, 
TMP_GET_STAT
(
lk_u£r3_waô
));

266 
	gt
.
£t_ba£
(
VT_lk_u£r4_waô
, 
TMP_GET_STAT
(
lk_u£r4_waô
));

267 
	gt
.
£t_ba£
(
VT_¶i_ªque°ed
, 
TMP_GET_STAT
(
¶i_ªque°ed
));

268 
	gt
.
£t_ba£
(
VT_¶i_acquúed
, 
TMP_GET_STAT
(
¶i_acquúed
));

269 
	gt
.
£t_ba£
(
VT_¶i_upgødes
, 
TMP_GET_STAT
(
¶i_upgødes
));

270 
	gt
.
£t_ba£
(
VT_¶i_ñigibÀ
, 
TMP_GET_STAT
(
¶i_ñigibÀ
));

271 
	gt
.
£t_ba£
(
VT_¶i_öhîôed
, 
TMP_GET_STAT
(
¶i_öhîôed
));

272 
	gt
.
£t_ba£
(
VT_¶i_u£d
, 
TMP_GET_STAT
(
¶i_u£d
));

273 
	gt
.
£t_ba£
(
VT_¶i_too_wók
, 
TMP_GET_STAT
(
¶i_too_wók
));

274 
	gt
.
£t_ba£
(
VT_¶i_found_œã
, 
TMP_GET_STAT
(
¶i_found_œã
));

275 
	gt
.
£t_ba£
(
VT_¶i_purged
, 
TMP_GET_STAT
(
¶i_purged
));

276 
	gt
.
£t_ba£
(
VT_¶i_övÆid©ed
, 
TMP_GET_STAT
(
¶i_övÆid©ed
));

277 
	gt
.
£t_ba£
(
VT_¶i_kït
, 
TMP_GET_STAT
(
¶i_kït
));

278 
	gt
.
£t_ba£
(
VT_¶i_evi˘ed
, 
TMP_GET_STAT
(
¶i_evi˘ed
));

279 
	gt
.
£t_ba£
(
VT_¶i_no_∑ª¡
, 
TMP_GET_STAT
(
¶i_no_∑ª¡
));

280 
	gt
.
£t_ba£
(
VT_¶i_waôed_⁄
, 
TMP_GET_STAT
(
¶i_waôed_⁄
));

281 
	gt
.
£t_ba£
(
VT_dú_ˇche_hô
, 
TMP_GET_STAT
(
dú_ˇche_hô
));

282 
	gt
.
£t_ba£
(
VT_dú_ˇche_miss
, 
TMP_GET_STAT
(
dú_ˇche_miss
));

283 
	gt
.
£t_ba£
(
VT_dú_ˇche_öhîô
, 
TMP_GET_STAT
(
dú_ˇche_öhîô
));

284 
	gt
.
£t_ba£
(
VT_dú_ˇche_°Æe
, 
TMP_GET_STAT
(
dú_ˇche_°Æe
));

	@src/sm/sm_stats_t_dec_gen.cpp

1 #i‚de‡
SM_STATS_T_DEC_GEN_CPP


2 
	#SM_STATS_T_DEC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gsm_°©s_t
 &

39 
	g›î©‹
-=(
sm_°©s_t
 &
s
,c⁄° 
	gsm_°©s_t
 &
	gt
)

41 
	gs
.
	gbf_⁄e_∑ge_wrôe
 -
t
.
bf_⁄e_∑ge_wrôe
;

42 
	gs
.
	gbf_two_∑ge_wrôe
 -
t
.
bf_two_∑ge_wrôe
;

43 
	gs
.
	gbf_thªe_∑ge_wrôe
 -
t
.
bf_thªe_∑ge_wrôe
;

44 
	gs
.
	gbf_four_∑ge_wrôe
 -
t
.
bf_four_∑ge_wrôe
;

45 
	gs
.
	gbf_five_∑ge_wrôe
 -
t
.
bf_five_∑ge_wrôe
;

46 
	gs
.
	gbf_six_∑ge_wrôe
 -
t
.
bf_six_∑ge_wrôe
;

47 
	gs
.
	gbf_£ví_∑ge_wrôe
 -
t
.
bf_£ví_∑ge_wrôe
;

48 
	gs
.
	gbf_eight_∑ge_wrôe
 -
t
.
bf_eight_∑ge_wrôe
;

49 
	gs
.
	gbf_m‹e_∑ge_wrôe
 -
t
.
bf_m‹e_∑ge_wrôe
;

50 
	gs
.
	gbf_˛ó√r_swìps
 -
t
.
bf_˛ó√r_swìps
;

51 
	gs
.
	gbf_˛ó√r_sig«Œed
 -
t
.
bf_˛ó√r_sig«Œed
;

52 
	gs
.
	gbf_Æªady_evi˘ed
 -
t
.
bf_Æªady_evi˘ed
;

53 
	gs
.
	gbf_dúty_∑ge_˛ó√d
 -
t
.
bf_dúty_∑ge_˛ó√d
;

54 
	gs
.
	gbf_Êushed_OHD_∑ge
 -
t
.
bf_Êushed_OHD_∑ge
;

55 
	gs
.
	gbf_kick_fuŒ
 -
t
.
bf_kick_fuŒ
;

56 
	gs
.
	gbf_kick_ª∂a˚mít
 -
t
.
bf_kick_ª∂a˚mít
;

57 
	gs
.
	gbf_kick_thªshﬁd
 -
t
.
bf_kick_thªshﬁd
;

58 
	gs
.
	gbf_swìp_∑ge_hŸ_skù≥d
 -
t
.
bf_swìp_∑ge_hŸ_skù≥d
;

59 
	gs
.
	gbf_disˇrded_hŸ
 -
t
.
bf_disˇrded_hŸ
;

60 
	gs
.
	gbf_log_Êush_Æl
 -
t
.
bf_log_Êush_Æl
;

61 
	gs
.
	gbf_log_Êush_l¢
 -
t
.
bf_log_Êush_l¢
;

62 
	gs
.
	gbf_wrôe_out
 -
t
.
bf_wrôe_out
;

63 
	gs
.
	gbf_¶ìp_awaô_˛ón
 -
t
.
bf_¶ìp_awaô_˛ón
;

64 
	gs
.
	gbf_fg_sˇn_˙t
 -
t
.
bf_fg_sˇn_˙t
;

65 
	gs
.
	gbf_c‹e_u≈ö_˛ó√d
 -
t
.
bf_c‹e_u≈ö_˛ó√d
;

66 
	gs
.
	gbf_unfix_˛ó√d
 -
t
.
bf_unfix_˛ó√d
;

67 
	gs
.
	gbf_look_˙t
 -
t
.
bf_look_˙t
;

68 
	gs
.
	gbf_hô_˙t
 -
t
.
bf_hô_˙t
;

69 
	gs
.
	gbf_gøb_œtch_Áûed
 -
t
.
bf_gøb_œtch_Áûed
;

70 
	gs
.
	gbf_ª∂a˚_out
 -
t
.
bf_ª∂a˚_out
;

71 
	gs
.
	gbf_ª∂a˚d_dúty
 -
t
.
bf_ª∂a˚d_dúty
;

72 
	gs
.
	gbf_ª∂a˚d_˛ón
 -
t
.
bf_ª∂a˚d_˛ón
;

73 
	gs
.
	gbf_no_å™sô_buckë
 -
t
.
bf_no_å™sô_buckë
;

74 
	gs
.
	gbf_¥e„tch_ªque°s
 -
t
.
bf_¥e„tch_ªque°s
;

75 
	gs
.
	gbf_¥e„tches
 -
t
.
bf_¥e„tches
;

76 
	gs
.
	gbf_upgøde_œtch_ø˚
 -
t
.
bf_upgøde_œtch_ø˚
;

77 
	gs
.
	gbf_upgøde_œtch_ch™ged
 -
t
.
bf_upgøde_œtch_ch™ged
;

78 
	gs
.
	gª°¨t_ª∑ú_ªc_l¢
 -
t
.
ª°¨t_ª∑ú_ªc_l¢
;

79 
	gs
.
	gvﬁ_ªads
 -
t
.
vﬁ_ªads
;

80 
	gs
.
	gvﬁ_wrôes
 -
t
.
vﬁ_wrôes
;

81 
	gs
.
	gvﬁ_blks_wrôãn
 -
t
.
vﬁ_blks_wrôãn
;

82 
	gs
.
	gvﬁ_Æloc_exts
 -
t
.
vﬁ_Æloc_exts
;

83 
	gs
.
	gvﬁ_‰ì_exts
 -
t
.
vﬁ_‰ì_exts
;

84 
	gs
.
	gio_m_löór_£¨ches
 -
t
.
io_m_löór_£¨ches
;

85 
	gs
.
	gio_m_löór_£¨ch_exã¡s
 -
t
.
io_m_löór_£¨ch_exã¡s
;

86 
	gs
.
	gvﬁ_ˇche_¥imes
 -
t
.
vﬁ_ˇche_¥imes
;

87 
	gs
.
	gvﬁ_ˇche_˛órs
 -
t
.
vﬁ_ˇche_˛órs
;

88 
	gs
.
	gvﬁ_œ°_exã¡_£¨ch
 -
t
.
vﬁ_œ°_exã¡_£¨ch
;

89 
	gs
.
	gvﬁ_œ°_exã¡_£¨ch_co°
 -
t
.
vﬁ_œ°_exã¡_£¨ch_co°
;

90 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_upd©e
 -
t
.
vﬁ_œ°_∑ge_ˇche_upd©e
;

91 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_föd
 -
t
.
vﬁ_œ°_∑ge_ˇche_föd
;

92 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_föd_hô
 -
t
.
vﬁ_œ°_∑ge_ˇche_föd_hô
;

93 
	gs
.
	gvﬁ_hi°o_ext_ˇche_upd©e
 -
t
.
vﬁ_hi°o_ext_ˇche_upd©e
;

94 
	gs
.
	gvﬁ_hi°o_ext_ˇche_föd
 -
t
.
vﬁ_hi°o_ext_ˇche_föd
;

95 
	gs
.
	gvﬁ_hi°o_ext_ˇche_föd_hô
 -
t
.
vﬁ_hi°o_ext_ˇche_föd_hô
;

96 
	gs
.
	gvﬁ_ªsv_ˇche_ö£π
 -
t
.
vﬁ_ªsv_ˇche_ö£π
;

97 
	gs
.
	gvﬁ_ªsv_ˇche_îa£
 -
t
.
vﬁ_ªsv_ˇche_îa£
;

98 
	gs
.
	gvﬁ_ªsv_ˇche_hô
 -
t
.
vﬁ_ªsv_ˇche_hô
;

99 
	gs
.
	gvﬁ_ªsv_ˇche_Áû
 -
t
.
vﬁ_ªsv_ˇche_Áû
;

100 
	gs
.
	gvﬁ_lock_nﬂŒoc
 -
t
.
vﬁ_lock_nﬂŒoc
;

101 
	gs
.
	glog_dup_sync_˙t
 -
t
.
log_dup_sync_˙t
;

102 
	gs
.
	glog_sync_˙t
 -
t
.
log_sync_˙t
;

103 
	gs
.
	glog_fsync_˙t
 -
t
.
log_fsync_˙t
;

104 
	gs
.
	glog_chk±_˙t
 -
t
.
log_chk±_˙t
;

105 
	gs
.
	glog_chk±_wake
 -
t
.
log_chk±_wake
;

106 
	gs
.
	glog_„tches
 -
t
.
log_„tches
;

107 
	gs
.
	glog_ö£πs
 -
t
.
log_ö£πs
;

108 
	gs
.
	glog_fuŒ
 -
t
.
log_fuŒ
;

109 
	gs
.
	glog_fuŒ_ﬁd_x˘
 -
t
.
log_fuŒ_ﬁd_x˘
;

110 
	gs
.
	glog_fuŒ_ﬁd_∑ge
 -
t
.
log_fuŒ_ﬁd_∑ge
;

111 
	gs
.
	glog_fuŒ_waô
 -
t
.
log_fuŒ_waô
;

112 
	gs
.
	glog_fuŒ_f‹˚
 -
t
.
log_fuŒ_f‹˚
;

113 
	gs
.
	glog_fuŒ_giveup
 -
t
.
log_fuŒ_giveup
;

114 
	gs
.
	glog_fûe_wøp
 -
t
.
log_fûe_wøp
;

115 
	gs
.
	glog_byãs_gíî©ed
 -
t
.
log_byãs_gíî©ed
;

116 
	gs
.
	glock_dódlock_˙t
 -
t
.
lock_dódlock_˙t
;

117 
	gs
.
	glock_Ál£_dódlock_˙t
 -
t
.
lock_Ál£_dódlock_˙t
;

118 
	gs
.
	glock_dld_ˇŒ_˙t
 -
t
.
lock_dld_ˇŒ_˙t
;

119 
	gs
.
	glock_dld_fú°_ˇŒ_˙t
 -
t
.
lock_dld_fú°_ˇŒ_˙t
;

120 
	gs
.
	glock_dld_Ál£_vi˘im_˙t
 -
t
.
lock_dld_Ál£_vi˘im_˙t
;

121 
	gs
.
	glock_dld_vi˘im_£lf_˙t
 -
t
.
lock_dld_vi˘im_£lf_˙t
;

122 
	gs
.
	glock_dld_vi˘im_Ÿhî_˙t
 -
t
.
lock_dld_vi˘im_Ÿhî_˙t
;

123 
	gs
.
	gn⁄unique_fögî¥öts
 -
t
.
n⁄unique_fögî¥öts
;

124 
	gs
.
	gunique_fögî¥öts
 -
t
.
unique_fögî¥öts
;

125 
	gs
.
	gªc_pö_˙t
 -
t
.
ªc_pö_˙t
;

126 
	gs
.
	gªc_u≈ö_˙t
 -
t
.
ªc_u≈ö_˙t
;

127 
	gs
.
	gªc_ªpö_cvt
 -
t
.
ªc_ªpö_cvt
;

128 
	gs
.
	gfm_∑geˇche_hô
 -
t
.
fm_∑geˇche_hô
;

129 
	gs
.
	gfm_∑ge_nﬁ©ch
 -
t
.
fm_∑ge_nﬁ©ch
;

130 
	gs
.
	gfm_∑ge_moved
 -
t
.
fm_∑ge_moved
;

131 
	gs
.
	gfm_∑ge_övÆid
 -
t
.
fm_∑ge_övÆid
;

132 
	gs
.
	gfm_∑ge_nﬁock
 -
t
.
fm_∑ge_nﬁock
;

133 
	gs
.
	gfm_Æloc_∑ge_ªje˘
 -
t
.
fm_Æloc_∑ge_ªje˘
;

134 
	gs
.
	gfm_∑ge_fuŒ
 -
t
.
fm_∑ge_fuŒ
;

135 
	gs
.
	gfm_îr‹_nŸ_h™dÀd
 -
t
.
fm_îr‹_nŸ_h™dÀd
;

136 
	gs
.
	gfm_ok
 -
t
.
fm_ok
;

137 
	gs
.
	gfm_hi°ogøm_hô
 -
t
.
fm_hi°ogøm_hô
;

138 
	gs
.
	gfm_£¨ch_∑ges
 -
t
.
fm_£¨ch_∑ges
;

139 
	gs
.
	gfm_£¨ch_Áûed
 -
t
.
fm_£¨ch_Áûed
;

140 
	gs
.
	gfm_£¨ch_hô
 -
t
.
fm_£¨ch_hô
;

141 
	gs
.
	gfm_œ°pid_ˇched
 -
t
.
fm_œ°pid_ˇched
;

142 
	gs
.
	gfm_œ°pid_hô
 -
t
.
fm_œ°pid_hô
;

143 
	gs
.
	gfm_Æloc_pg
 -
t
.
fm_Æloc_pg
;

144 
	gs
.
	gfm_ext_touch
 -
t
.
fm_ext_touch
;

145 
	gs
.
	gfm_ext_touch_n›
 -
t
.
fm_ext_touch_n›
;

146 
	gs
.
	gfm_no•a˚
 -
t
.
fm_no•a˚
;

147 
	gs
.
	gfm_ˇche
 -
t
.
fm_ˇche
;

148 
	gs
.
	gfm_com∑˘
 -
t
.
fm_com∑˘
;

149 
	gs
.
	gfm_≠≥nd
 -
t
.
fm_≠≥nd
;

150 
	gs
.
	gfm_≠≥nd⁄ly
 -
t
.
fm_≠≥nd⁄ly
;

151 
	gs
.
	gbt_föd_˙t
 -
t
.
bt_föd_˙t
;

152 
	gs
.
	gbt_ö£π_˙t
 -
t
.
bt_ö£π_˙t
;

153 
	gs
.
	gbt_ªmove_˙t
 -
t
.
bt_ªmove_˙t
;

154 
	gs
.
	gbt_åavî£_˙t
 -
t
.
bt_åavî£_˙t
;

155 
	gs
.
	gbt_∑πül_åavî£_˙t
 -
t
.
bt_∑πül_åavî£_˙t
;

156 
	gs
.
	gbt_ª°¨t_åavî£_˙t
 -
t
.
bt_ª°¨t_åavî£_˙t
;

157 
	gs
.
	gbt_posc
 -
t
.
bt_posc
;

158 
	gs
.
	gbt_sˇn_˙t
 -
t
.
bt_sˇn_˙t
;

159 
	gs
.
	gbt_•lôs
 -
t
.
bt_•lôs
;

160 
	gs
.
	gbt_Àaf_•lôs
 -
t
.
bt_Àaf_•lôs
;

161 
	gs
.
	gbt_cuts
 -
t
.
bt_cuts
;

162 
	gs
.
	gbt_grows
 -
t
.
bt_grows
;

163 
	gs
.
	gbt_shröks
 -
t
.
bt_shröks
;

164 
	gs
.
	gbt_löks
 -
t
.
bt_löks
;

165 
	gs
.
	gbt_upgøde_Áû_ªåy
 -
t
.
bt_upgøde_Áû_ªåy
;

166 
	gs
.
	gbt_˛r_smo_åavî£
 -
t
.
bt_˛r_smo_åavî£
;

167 
	gs
.
	gbt_pcom¥ess
 -
t
.
bt_pcom¥ess
;

168 
	gs
.
	gbt_∂max
 -
t
.
bt_∂max
;

169 
	gs
.
	gbt_upd©e_˙t
 -
t
.
bt_upd©e_˙t
;

170 
	gs
.
	gs‹t_keycmp_˙t
 -
t
.
s‹t_keycmp_˙t
;

171 
	gs
.
	gs‹t_Àxödx_˙t
 -
t
.
s‹t_Àxödx_˙t
;

172 
	gs
.
	gs‹t_gëöfo_˙t
 -
t
.
s‹t_gëöfo_˙t
;

173 
	gs
.
	gs‹t_mof_˙t
 -
t
.
s‹t_mof_˙t
;

174 
	gs
.
	gs‹t_umof_˙t
 -
t
.
s‹t_umof_˙t
;

175 
	gs
.
	gs‹t_mem˝y_˙t
 -
t
.
s‹t_mem˝y_˙t
;

176 
	gs
.
	gs‹t_mem˝y_byãs
 -
t
.
s‹t_mem˝y_byãs
;

177 
	gs
.
	gs‹t_key˝y_˙t
 -
t
.
s‹t_key˝y_˙t
;

178 
	gs
.
	gs‹t_mÆlocs
 -
t
.
s‹t_mÆlocs
;

179 
	gs
.
	gs‹t_mÆloc_byãs
 -
t
.
s‹t_mÆloc_byãs
;

180 
	gs
.
	gs‹t_mÆloc_hiw©
 -
t
.
s‹t_mÆloc_hiw©
;

181 
	gs
.
	gs‹t_mÆloc_max
 -
t
.
s‹t_mÆloc_max
;

182 
	gs
.
	gs‹t_mÆloc_cuº
 -
t
.
s‹t_mÆloc_cuº
;

183 
	gs
.
	gs‹t_tmpfûe_˙t
 -
t
.
s‹t_tmpfûe_˙t
;

184 
	gs
.
	gs‹t_tmpfûe_byãs
 -
t
.
s‹t_tmpfûe_byãs
;

185 
	gs
.
	gs‹t_du∂iˇãs
 -
t
.
s‹t_du∂iˇãs
;

186 
	gs
.
	gs‹t_∑ge_fixes
 -
t
.
s‹t_∑ge_fixes
;

187 
	gs
.
	gs‹t_∑ge_fixes_2
 -
t
.
s‹t_∑ge_fixes_2
;

188 
	gs
.
	gs‹t_lg_∑ge_fixes
 -
t
.
s‹t_lg_∑ge_fixes
;

189 
	gs
.
	gs‹t_ªc_pös
 -
t
.
s‹t_ªc_pös
;

190 
	gs
.
	gs‹t_fûes_¸óãd
 -
t
.
s‹t_fûes_¸óãd
;

191 
	gs
.
	gs‹t_ªcs_¸óãd
 -
t
.
s‹t_ªcs_¸óãd
;

192 
	gs
.
	gs‹t_ªc_byãs
 -
t
.
s‹t_ªc_byãs
;

193 
	gs
.
	gs‹t_runs
 -
t
.
s‹t_runs
;

194 
	gs
.
	gs‹t_run_size
 -
t
.
s‹t_run_size
;

195 
	gs
.
	gs‹t_pha£s
 -
t
.
s‹t_pha£s
;

196 
	gs
.
	gs‹t_¡≠es
 -
t
.
s‹t_¡≠es
;

197 
	gs
.
	g∑ge_fix_˙t
 -
t
.
∑ge_fix_˙t
;

198 
	gs
.
	g∑ge_ªfix_˙t
 -
t
.
∑ge_ªfix_˙t
;

199 
	gs
.
	g∑ge_unfix_˙t
 -
t
.
∑ge_unfix_˙t
;

200 
	gs
.
	g∑ge_Æloc_˙t
 -
t
.
∑ge_Æloc_˙t
;

201 
	gs
.
	g∑ge_dóŒoc_˙t
 -
t
.
∑ge_dóŒoc_˙t
;

202 
	gs
.
	g∑ge_båì_Æloc
 -
t
.
∑ge_båì_Æloc
;

203 
	gs
.
	g∑ge_fûe_Æloc
 -
t
.
∑ge_fûe_Æloc
;

204 
	gs
.
	g∑ge_fûe_mrbt_Æloc
 -
t
.
∑ge_fûe_mrbt_Æloc
;

205 
	gs
.
	g∑ge_båì_dóŒoc
 -
t
.
∑ge_båì_dóŒoc
;

206 
	gs
.
	g∑ge_fûe_dóŒoc
 -
t
.
∑ge_fûe_dóŒoc
;

207 
	gs
.
	g∑ge_fûe_mrbt_dóŒoc
 -
t
.
∑ge_fûe_mrbt_dóŒoc
;

208 
	gs
.
	gext_lookup_hôs
 -
t
.
ext_lookup_hôs
;

209 
	gs
.
	gext_lookup_mis£s
 -
t
.
ext_lookup_mis£s
;

210 
	gs
.
	gÆloc_∑ge_ö_ext
 -
t
.
Æloc_∑ge_ö_ext
;

211 
	gs
.
	gexã¡_l£¨ch
 -
t
.
exã¡_l£¨ch
;

212 
	gs
.
	gbegö_x˘_˙t
 -
t
.
begö_x˘_˙t
;

213 
	gs
.
	gcommô_x˘_˙t
 -
t
.
commô_x˘_˙t
;

214 
	gs
.
	gab‹t_x˘_˙t
 -
t
.
ab‹t_x˘_˙t
;

215 
	gs
.
	glog_w¨n_ab‹t_˙t
 -
t
.
log_w¨n_ab‹t_˙t
;

216 
	gs
.
	g¥ï¨e_x˘_˙t
 -
t
.
¥ï¨e_x˘_˙t
;

217 
	gs
.
	grﬁlback_ßvït_˙t
 -
t
.
rﬁlback_ßvït_˙t
;

218 
	gs
.
	gm∂_©èch_˙t
 -
t
.
m∂_©èch_˙t
;

219 
	gs
.
	g™ch‹s
 -
t
.
™ch‹s
;

220 
	gs
.
	gcom≥nßã_ö_log
 -
t
.
com≥nßã_ö_log
;

221 
	gs
.
	gcom≥nßã_ö_x˘
 -
t
.
com≥nßã_ö_x˘
;

222 
	gs
.
	gcom≥nßã_ªc‹ds
 -
t
.
com≥nßã_ªc‹ds
;

223 
	gs
.
	gcom≥nßã_skù≥d
 -
t
.
com≥nßã_skù≥d
;

224 
	gs
.
	glog_swôches
 -
t
.
log_swôches
;

225 
	gs
.
	gawaô_1thªad_log
 -
t
.
awaô_1thªad_log
;

226 
	gs
.
	gacquúe_1thªad_log
 -
t
.
acquúe_1thªad_log
;

227 
	gs
.
	ggë_logbuf
 -
t
.
gë_logbuf
;

228 
	gs
.
	gawaô_1thªad_x˘
 -
t
.
awaô_1thªad_x˘
;

229 
	gs
.
	gawaô_vﬁ_m⁄ô‹
 -
t
.
awaô_vﬁ_m⁄ô‹
;

230 
	gs
.
	g√ed_vﬁ_lock_r
 -
t
.
√ed_vﬁ_lock_r
;

231 
	gs
.
	g√ed_vﬁ_lock_w
 -
t
.
√ed_vﬁ_lock_w
;

232 
	gs
.
	gawaô_vﬁ_lock_r
 -
t
.
awaô_vﬁ_lock_r
;

233 
	gs
.
	gawaô_vﬁ_lock_w
 -
t
.
awaô_vﬁ_lock_w
;

234 
	gs
.
	gawaô_vﬁ_lock_r_p˘
 -
t
.
awaô_vﬁ_lock_r_p˘
;

235 
	gs
.
	gawaô_vﬁ_lock_w_p˘
 -
t
.
awaô_vﬁ_lock_w_p˘
;

236 
	gs
.
	gs_¥ï¨ed
 -
t
.
s_¥ï¨ed
;

237 
	gs
.
	glock_quîy_˙t
 -
t
.
lock_quîy_˙t
;

238 
	gs
.
	gu∆ock_ªque°_˙t
 -
t
.
u∆ock_ªque°_˙t
;

239 
	gs
.
	glock_ªque°_˙t
 -
t
.
lock_ªque°_˙t
;

240 
	gs
.
	glock_acquúe_˙t
 -
t
.
lock_acquúe_˙t
;

241 
	gs
.
	glock_hód_t_˙t
 -
t
.
lock_hód_t_˙t
;

242 
	gs
.
	glock_awaô_Æt_˙t
 -
t
.
lock_awaô_Æt_˙t
;

243 
	gs
.
	glock_exå™eous_ªq_˙t
 -
t
.
lock_exå™eous_ªq_˙t
;

244 
	gs
.
	glock_c⁄vîsi⁄_˙t
 -
t
.
lock_c⁄vîsi⁄_˙t
;

245 
	gs
.
	glock_ˇche_hô_˙t
 -
t
.
lock_ˇche_hô_˙t
;

246 
	gs
.
	glock_ªque°_t_˙t
 -
t
.
lock_ªque°_t_˙t
;

247 
	gs
.
	glock_esc_to_∑ge
 -
t
.
lock_esc_to_∑ge
;

248 
	gs
.
	glock_esc_to_°‹e
 -
t
.
lock_esc_to_°‹e
;

249 
	gs
.
	glock_esc_to_vﬁume
 -
t
.
lock_esc_to_vﬁume
;

250 
	gs
.
	glk_vﬁ_acq
 -
t
.
lk_vﬁ_acq
;

251 
	gs
.
	glk_°‹e_acq
 -
t
.
lk_°‹e_acq
;

252 
	gs
.
	glk_∑ge_acq
 -
t
.
lk_∑ge_acq
;

253 
	gs
.
	glk_kvl_acq
 -
t
.
lk_kvl_acq
;

254 
	gs
.
	glk_ªc_acq
 -
t
.
lk_ªc_acq
;

255 
	gs
.
	glk_ext_acq
 -
t
.
lk_ext_acq
;

256 
	gs
.
	glk_u£r1_acq
 -
t
.
lk_u£r1_acq
;

257 
	gs
.
	glk_u£r2_acq
 -
t
.
lk_u£r2_acq
;

258 
	gs
.
	glk_u£r3_acq
 -
t
.
lk_u£r3_acq
;

259 
	gs
.
	glk_u£r4_acq
 -
t
.
lk_u£r4_acq
;

260 
	gs
.
	glock_waô_˙t
 -
t
.
lock_waô_˙t
;

261 
	gs
.
	glock_block_˙t
 -
t
.
lock_block_˙t
;

262 
	gs
.
	glk_vﬁ_waô
 -
t
.
lk_vﬁ_waô
;

263 
	gs
.
	glk_°‹e_waô
 -
t
.
lk_°‹e_waô
;

264 
	gs
.
	glk_∑ge_waô
 -
t
.
lk_∑ge_waô
;

265 
	gs
.
	glk_kvl_waô
 -
t
.
lk_kvl_waô
;

266 
	gs
.
	glk_ªc_waô
 -
t
.
lk_ªc_waô
;

267 
	gs
.
	glk_ext_waô
 -
t
.
lk_ext_waô
;

268 
	gs
.
	glk_u£r1_waô
 -
t
.
lk_u£r1_waô
;

269 
	gs
.
	glk_u£r2_waô
 -
t
.
lk_u£r2_waô
;

270 
	gs
.
	glk_u£r3_waô
 -
t
.
lk_u£r3_waô
;

271 
	gs
.
	glk_u£r4_waô
 -
t
.
lk_u£r4_waô
;

272 
	gs
.
	g¶i_ªque°ed
 -
t
.
¶i_ªque°ed
;

273 
	gs
.
	g¶i_acquúed
 -
t
.
¶i_acquúed
;

274 
	gs
.
	g¶i_upgødes
 -
t
.
¶i_upgødes
;

275 
	gs
.
	g¶i_ñigibÀ
 -
t
.
¶i_ñigibÀ
;

276 
	gs
.
	g¶i_öhîôed
 -
t
.
¶i_öhîôed
;

277 
	gs
.
	g¶i_u£d
 -
t
.
¶i_u£d
;

278 
	gs
.
	g¶i_too_wók
 -
t
.
¶i_too_wók
;

279 
	gs
.
	g¶i_found_œã
 -
t
.
¶i_found_œã
;

280 
	gs
.
	g¶i_purged
 -
t
.
¶i_purged
;

281 
	gs
.
	g¶i_övÆid©ed
 -
t
.
¶i_övÆid©ed
;

282 
	gs
.
	g¶i_kït
 -
t
.
¶i_kït
;

283 
	gs
.
	g¶i_evi˘ed
 -
t
.
¶i_evi˘ed
;

284 
	gs
.
	g¶i_no_∑ª¡
 -
t
.
¶i_no_∑ª¡
;

285 
	gs
.
	g¶i_waôed_⁄
 -
t
.
¶i_waôed_⁄
;

286 
	gs
.
	gdú_ˇche_hô
 -
t
.
dú_ˇche_hô
;

287 
	gs
.
	gdú_ˇche_miss
 -
t
.
dú_ˇche_miss
;

288 
	gs
.
	gdú_ˇche_öhîô
 -
t
.
dú_ˇche_öhîô
;

289 
	gs
.
	gdú_ˇche_°Æe
 -
t
.
dú_ˇche_°Æe
;

290  
	gs
;

	@src/sm/sm_stats_t_inc_gen.cpp

1 #i‚de‡
SM_STATS_T_INC_GEN_CPP


2 
	#SM_STATS_T_INC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	gsm_°©s_t
 &

39 
	g›î©‹
+=(
sm_°©s_t
 &
s
,c⁄° 
	gsm_°©s_t
 &
	gt
)

41 
	gs
.
	gbf_⁄e_∑ge_wrôe
 +
t
.
bf_⁄e_∑ge_wrôe
;

42 
	gs
.
	gbf_two_∑ge_wrôe
 +
t
.
bf_two_∑ge_wrôe
;

43 
	gs
.
	gbf_thªe_∑ge_wrôe
 +
t
.
bf_thªe_∑ge_wrôe
;

44 
	gs
.
	gbf_four_∑ge_wrôe
 +
t
.
bf_four_∑ge_wrôe
;

45 
	gs
.
	gbf_five_∑ge_wrôe
 +
t
.
bf_five_∑ge_wrôe
;

46 
	gs
.
	gbf_six_∑ge_wrôe
 +
t
.
bf_six_∑ge_wrôe
;

47 
	gs
.
	gbf_£ví_∑ge_wrôe
 +
t
.
bf_£ví_∑ge_wrôe
;

48 
	gs
.
	gbf_eight_∑ge_wrôe
 +
t
.
bf_eight_∑ge_wrôe
;

49 
	gs
.
	gbf_m‹e_∑ge_wrôe
 +
t
.
bf_m‹e_∑ge_wrôe
;

50 
	gs
.
	gbf_˛ó√r_swìps
 +
t
.
bf_˛ó√r_swìps
;

51 
	gs
.
	gbf_˛ó√r_sig«Œed
 +
t
.
bf_˛ó√r_sig«Œed
;

52 
	gs
.
	gbf_Æªady_evi˘ed
 +
t
.
bf_Æªady_evi˘ed
;

53 
	gs
.
	gbf_dúty_∑ge_˛ó√d
 +
t
.
bf_dúty_∑ge_˛ó√d
;

54 
	gs
.
	gbf_Êushed_OHD_∑ge
 +
t
.
bf_Êushed_OHD_∑ge
;

55 
	gs
.
	gbf_kick_fuŒ
 +
t
.
bf_kick_fuŒ
;

56 
	gs
.
	gbf_kick_ª∂a˚mít
 +
t
.
bf_kick_ª∂a˚mít
;

57 
	gs
.
	gbf_kick_thªshﬁd
 +
t
.
bf_kick_thªshﬁd
;

58 
	gs
.
	gbf_swìp_∑ge_hŸ_skù≥d
 +
t
.
bf_swìp_∑ge_hŸ_skù≥d
;

59 
	gs
.
	gbf_disˇrded_hŸ
 +
t
.
bf_disˇrded_hŸ
;

60 
	gs
.
	gbf_log_Êush_Æl
 +
t
.
bf_log_Êush_Æl
;

61 
	gs
.
	gbf_log_Êush_l¢
 +
t
.
bf_log_Êush_l¢
;

62 
	gs
.
	gbf_wrôe_out
 +
t
.
bf_wrôe_out
;

63 
	gs
.
	gbf_¶ìp_awaô_˛ón
 +
t
.
bf_¶ìp_awaô_˛ón
;

64 
	gs
.
	gbf_fg_sˇn_˙t
 +
t
.
bf_fg_sˇn_˙t
;

65 
	gs
.
	gbf_c‹e_u≈ö_˛ó√d
 +
t
.
bf_c‹e_u≈ö_˛ó√d
;

66 
	gs
.
	gbf_unfix_˛ó√d
 +
t
.
bf_unfix_˛ó√d
;

67 
	gs
.
	gbf_look_˙t
 +
t
.
bf_look_˙t
;

68 
	gs
.
	gbf_hô_˙t
 +
t
.
bf_hô_˙t
;

69 
	gs
.
	gbf_gøb_œtch_Áûed
 +
t
.
bf_gøb_œtch_Áûed
;

70 
	gs
.
	gbf_ª∂a˚_out
 +
t
.
bf_ª∂a˚_out
;

71 
	gs
.
	gbf_ª∂a˚d_dúty
 +
t
.
bf_ª∂a˚d_dúty
;

72 
	gs
.
	gbf_ª∂a˚d_˛ón
 +
t
.
bf_ª∂a˚d_˛ón
;

73 
	gs
.
	gbf_no_å™sô_buckë
 +
t
.
bf_no_å™sô_buckë
;

74 
	gs
.
	gbf_¥e„tch_ªque°s
 +
t
.
bf_¥e„tch_ªque°s
;

75 
	gs
.
	gbf_¥e„tches
 +
t
.
bf_¥e„tches
;

76 
	gs
.
	gbf_upgøde_œtch_ø˚
 +
t
.
bf_upgøde_œtch_ø˚
;

77 
	gs
.
	gbf_upgøde_œtch_ch™ged
 +
t
.
bf_upgøde_œtch_ch™ged
;

78 
	gs
.
	gª°¨t_ª∑ú_ªc_l¢
 +
t
.
ª°¨t_ª∑ú_ªc_l¢
;

79 
	gs
.
	gvﬁ_ªads
 +
t
.
vﬁ_ªads
;

80 
	gs
.
	gvﬁ_wrôes
 +
t
.
vﬁ_wrôes
;

81 
	gs
.
	gvﬁ_blks_wrôãn
 +
t
.
vﬁ_blks_wrôãn
;

82 
	gs
.
	gvﬁ_Æloc_exts
 +
t
.
vﬁ_Æloc_exts
;

83 
	gs
.
	gvﬁ_‰ì_exts
 +
t
.
vﬁ_‰ì_exts
;

84 
	gs
.
	gio_m_löór_£¨ches
 +
t
.
io_m_löór_£¨ches
;

85 
	gs
.
	gio_m_löór_£¨ch_exã¡s
 +
t
.
io_m_löór_£¨ch_exã¡s
;

86 
	gs
.
	gvﬁ_ˇche_¥imes
 +
t
.
vﬁ_ˇche_¥imes
;

87 
	gs
.
	gvﬁ_ˇche_˛órs
 +
t
.
vﬁ_ˇche_˛órs
;

88 
	gs
.
	gvﬁ_œ°_exã¡_£¨ch
 +
t
.
vﬁ_œ°_exã¡_£¨ch
;

89 
	gs
.
	gvﬁ_œ°_exã¡_£¨ch_co°
 +
t
.
vﬁ_œ°_exã¡_£¨ch_co°
;

90 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_upd©e
 +
t
.
vﬁ_œ°_∑ge_ˇche_upd©e
;

91 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_föd
 +
t
.
vﬁ_œ°_∑ge_ˇche_föd
;

92 
	gs
.
	gvﬁ_œ°_∑ge_ˇche_föd_hô
 +
t
.
vﬁ_œ°_∑ge_ˇche_föd_hô
;

93 
	gs
.
	gvﬁ_hi°o_ext_ˇche_upd©e
 +
t
.
vﬁ_hi°o_ext_ˇche_upd©e
;

94 
	gs
.
	gvﬁ_hi°o_ext_ˇche_föd
 +
t
.
vﬁ_hi°o_ext_ˇche_föd
;

95 
	gs
.
	gvﬁ_hi°o_ext_ˇche_föd_hô
 +
t
.
vﬁ_hi°o_ext_ˇche_föd_hô
;

96 
	gs
.
	gvﬁ_ªsv_ˇche_ö£π
 +
t
.
vﬁ_ªsv_ˇche_ö£π
;

97 
	gs
.
	gvﬁ_ªsv_ˇche_îa£
 +
t
.
vﬁ_ªsv_ˇche_îa£
;

98 
	gs
.
	gvﬁ_ªsv_ˇche_hô
 +
t
.
vﬁ_ªsv_ˇche_hô
;

99 
	gs
.
	gvﬁ_ªsv_ˇche_Áû
 +
t
.
vﬁ_ªsv_ˇche_Áû
;

100 
	gs
.
	gvﬁ_lock_nﬂŒoc
 +
t
.
vﬁ_lock_nﬂŒoc
;

101 
	gs
.
	glog_dup_sync_˙t
 +
t
.
log_dup_sync_˙t
;

102 
	gs
.
	glog_sync_˙t
 +
t
.
log_sync_˙t
;

103 
	gs
.
	glog_fsync_˙t
 +
t
.
log_fsync_˙t
;

104 
	gs
.
	glog_chk±_˙t
 +
t
.
log_chk±_˙t
;

105 
	gs
.
	glog_chk±_wake
 +
t
.
log_chk±_wake
;

106 
	gs
.
	glog_„tches
 +
t
.
log_„tches
;

107 
	gs
.
	glog_ö£πs
 +
t
.
log_ö£πs
;

108 
	gs
.
	glog_fuŒ
 +
t
.
log_fuŒ
;

109 
	gs
.
	glog_fuŒ_ﬁd_x˘
 +
t
.
log_fuŒ_ﬁd_x˘
;

110 
	gs
.
	glog_fuŒ_ﬁd_∑ge
 +
t
.
log_fuŒ_ﬁd_∑ge
;

111 
	gs
.
	glog_fuŒ_waô
 +
t
.
log_fuŒ_waô
;

112 
	gs
.
	glog_fuŒ_f‹˚
 +
t
.
log_fuŒ_f‹˚
;

113 
	gs
.
	glog_fuŒ_giveup
 +
t
.
log_fuŒ_giveup
;

114 
	gs
.
	glog_fûe_wøp
 +
t
.
log_fûe_wøp
;

115 
	gs
.
	glog_byãs_gíî©ed
 +
t
.
log_byãs_gíî©ed
;

116 
	gs
.
	glock_dódlock_˙t
 +
t
.
lock_dódlock_˙t
;

117 
	gs
.
	glock_Ál£_dódlock_˙t
 +
t
.
lock_Ál£_dódlock_˙t
;

118 
	gs
.
	glock_dld_ˇŒ_˙t
 +
t
.
lock_dld_ˇŒ_˙t
;

119 
	gs
.
	glock_dld_fú°_ˇŒ_˙t
 +
t
.
lock_dld_fú°_ˇŒ_˙t
;

120 
	gs
.
	glock_dld_Ál£_vi˘im_˙t
 +
t
.
lock_dld_Ál£_vi˘im_˙t
;

121 
	gs
.
	glock_dld_vi˘im_£lf_˙t
 +
t
.
lock_dld_vi˘im_£lf_˙t
;

122 
	gs
.
	glock_dld_vi˘im_Ÿhî_˙t
 +
t
.
lock_dld_vi˘im_Ÿhî_˙t
;

123 
	gs
.
	gn⁄unique_fögî¥öts
 +
t
.
n⁄unique_fögî¥öts
;

124 
	gs
.
	gunique_fögî¥öts
 +
t
.
unique_fögî¥öts
;

125 
	gs
.
	gªc_pö_˙t
 +
t
.
ªc_pö_˙t
;

126 
	gs
.
	gªc_u≈ö_˙t
 +
t
.
ªc_u≈ö_˙t
;

127 
	gs
.
	gªc_ªpö_cvt
 +
t
.
ªc_ªpö_cvt
;

128 
	gs
.
	gfm_∑geˇche_hô
 +
t
.
fm_∑geˇche_hô
;

129 
	gs
.
	gfm_∑ge_nﬁ©ch
 +
t
.
fm_∑ge_nﬁ©ch
;

130 
	gs
.
	gfm_∑ge_moved
 +
t
.
fm_∑ge_moved
;

131 
	gs
.
	gfm_∑ge_övÆid
 +
t
.
fm_∑ge_övÆid
;

132 
	gs
.
	gfm_∑ge_nﬁock
 +
t
.
fm_∑ge_nﬁock
;

133 
	gs
.
	gfm_Æloc_∑ge_ªje˘
 +
t
.
fm_Æloc_∑ge_ªje˘
;

134 
	gs
.
	gfm_∑ge_fuŒ
 +
t
.
fm_∑ge_fuŒ
;

135 
	gs
.
	gfm_îr‹_nŸ_h™dÀd
 +
t
.
fm_îr‹_nŸ_h™dÀd
;

136 
	gs
.
	gfm_ok
 +
t
.
fm_ok
;

137 
	gs
.
	gfm_hi°ogøm_hô
 +
t
.
fm_hi°ogøm_hô
;

138 
	gs
.
	gfm_£¨ch_∑ges
 +
t
.
fm_£¨ch_∑ges
;

139 
	gs
.
	gfm_£¨ch_Áûed
 +
t
.
fm_£¨ch_Áûed
;

140 
	gs
.
	gfm_£¨ch_hô
 +
t
.
fm_£¨ch_hô
;

141 
	gs
.
	gfm_œ°pid_ˇched
 +
t
.
fm_œ°pid_ˇched
;

142 
	gs
.
	gfm_œ°pid_hô
 +
t
.
fm_œ°pid_hô
;

143 
	gs
.
	gfm_Æloc_pg
 +
t
.
fm_Æloc_pg
;

144 
	gs
.
	gfm_ext_touch
 +
t
.
fm_ext_touch
;

145 
	gs
.
	gfm_ext_touch_n›
 +
t
.
fm_ext_touch_n›
;

146 
	gs
.
	gfm_no•a˚
 +
t
.
fm_no•a˚
;

147 
	gs
.
	gfm_ˇche
 +
t
.
fm_ˇche
;

148 
	gs
.
	gfm_com∑˘
 +
t
.
fm_com∑˘
;

149 
	gs
.
	gfm_≠≥nd
 +
t
.
fm_≠≥nd
;

150 
	gs
.
	gfm_≠≥nd⁄ly
 +
t
.
fm_≠≥nd⁄ly
;

151 
	gs
.
	gbt_föd_˙t
 +
t
.
bt_föd_˙t
;

152 
	gs
.
	gbt_ö£π_˙t
 +
t
.
bt_ö£π_˙t
;

153 
	gs
.
	gbt_ªmove_˙t
 +
t
.
bt_ªmove_˙t
;

154 
	gs
.
	gbt_åavî£_˙t
 +
t
.
bt_åavî£_˙t
;

155 
	gs
.
	gbt_∑πül_åavî£_˙t
 +
t
.
bt_∑πül_åavî£_˙t
;

156 
	gs
.
	gbt_ª°¨t_åavî£_˙t
 +
t
.
bt_ª°¨t_åavî£_˙t
;

157 
	gs
.
	gbt_posc
 +
t
.
bt_posc
;

158 
	gs
.
	gbt_sˇn_˙t
 +
t
.
bt_sˇn_˙t
;

159 
	gs
.
	gbt_•lôs
 +
t
.
bt_•lôs
;

160 
	gs
.
	gbt_Àaf_•lôs
 +
t
.
bt_Àaf_•lôs
;

161 
	gs
.
	gbt_cuts
 +
t
.
bt_cuts
;

162 
	gs
.
	gbt_grows
 +
t
.
bt_grows
;

163 
	gs
.
	gbt_shröks
 +
t
.
bt_shröks
;

164 
	gs
.
	gbt_löks
 +
t
.
bt_löks
;

165 
	gs
.
	gbt_upgøde_Áû_ªåy
 +
t
.
bt_upgøde_Áû_ªåy
;

166 
	gs
.
	gbt_˛r_smo_åavî£
 +
t
.
bt_˛r_smo_åavî£
;

167 
	gs
.
	gbt_pcom¥ess
 +
t
.
bt_pcom¥ess
;

168 
	gs
.
	gbt_∂max
 +
t
.
bt_∂max
;

169 
	gs
.
	gbt_upd©e_˙t
 +
t
.
bt_upd©e_˙t
;

170 
	gs
.
	gs‹t_keycmp_˙t
 +
t
.
s‹t_keycmp_˙t
;

171 
	gs
.
	gs‹t_Àxödx_˙t
 +
t
.
s‹t_Àxödx_˙t
;

172 
	gs
.
	gs‹t_gëöfo_˙t
 +
t
.
s‹t_gëöfo_˙t
;

173 
	gs
.
	gs‹t_mof_˙t
 +
t
.
s‹t_mof_˙t
;

174 
	gs
.
	gs‹t_umof_˙t
 +
t
.
s‹t_umof_˙t
;

175 
	gs
.
	gs‹t_mem˝y_˙t
 +
t
.
s‹t_mem˝y_˙t
;

176 
	gs
.
	gs‹t_mem˝y_byãs
 +
t
.
s‹t_mem˝y_byãs
;

177 
	gs
.
	gs‹t_key˝y_˙t
 +
t
.
s‹t_key˝y_˙t
;

178 
	gs
.
	gs‹t_mÆlocs
 +
t
.
s‹t_mÆlocs
;

179 
	gs
.
	gs‹t_mÆloc_byãs
 +
t
.
s‹t_mÆloc_byãs
;

180 
	gs
.
	gs‹t_mÆloc_hiw©
 +
t
.
s‹t_mÆloc_hiw©
;

181 
	gs
.
	gs‹t_mÆloc_max
 +
t
.
s‹t_mÆloc_max
;

182 
	gs
.
	gs‹t_mÆloc_cuº
 +
t
.
s‹t_mÆloc_cuº
;

183 
	gs
.
	gs‹t_tmpfûe_˙t
 +
t
.
s‹t_tmpfûe_˙t
;

184 
	gs
.
	gs‹t_tmpfûe_byãs
 +
t
.
s‹t_tmpfûe_byãs
;

185 
	gs
.
	gs‹t_du∂iˇãs
 +
t
.
s‹t_du∂iˇãs
;

186 
	gs
.
	gs‹t_∑ge_fixes
 +
t
.
s‹t_∑ge_fixes
;

187 
	gs
.
	gs‹t_∑ge_fixes_2
 +
t
.
s‹t_∑ge_fixes_2
;

188 
	gs
.
	gs‹t_lg_∑ge_fixes
 +
t
.
s‹t_lg_∑ge_fixes
;

189 
	gs
.
	gs‹t_ªc_pös
 +
t
.
s‹t_ªc_pös
;

190 
	gs
.
	gs‹t_fûes_¸óãd
 +
t
.
s‹t_fûes_¸óãd
;

191 
	gs
.
	gs‹t_ªcs_¸óãd
 +
t
.
s‹t_ªcs_¸óãd
;

192 
	gs
.
	gs‹t_ªc_byãs
 +
t
.
s‹t_ªc_byãs
;

193 
	gs
.
	gs‹t_runs
 +
t
.
s‹t_runs
;

194 
	gs
.
	gs‹t_run_size
 +
t
.
s‹t_run_size
;

195 
	gs
.
	gs‹t_pha£s
 +
t
.
s‹t_pha£s
;

196 
	gs
.
	gs‹t_¡≠es
 +
t
.
s‹t_¡≠es
;

197 
	gs
.
	g∑ge_fix_˙t
 +
t
.
∑ge_fix_˙t
;

198 
	gs
.
	g∑ge_ªfix_˙t
 +
t
.
∑ge_ªfix_˙t
;

199 
	gs
.
	g∑ge_unfix_˙t
 +
t
.
∑ge_unfix_˙t
;

200 
	gs
.
	g∑ge_Æloc_˙t
 +
t
.
∑ge_Æloc_˙t
;

201 
	gs
.
	g∑ge_dóŒoc_˙t
 +
t
.
∑ge_dóŒoc_˙t
;

202 
	gs
.
	g∑ge_båì_Æloc
 +
t
.
∑ge_båì_Æloc
;

203 
	gs
.
	g∑ge_fûe_Æloc
 +
t
.
∑ge_fûe_Æloc
;

204 
	gs
.
	g∑ge_fûe_mrbt_Æloc
 +
t
.
∑ge_fûe_mrbt_Æloc
;

205 
	gs
.
	g∑ge_båì_dóŒoc
 +
t
.
∑ge_båì_dóŒoc
;

206 
	gs
.
	g∑ge_fûe_dóŒoc
 +
t
.
∑ge_fûe_dóŒoc
;

207 
	gs
.
	g∑ge_fûe_mrbt_dóŒoc
 +
t
.
∑ge_fûe_mrbt_dóŒoc
;

208 
	gs
.
	gext_lookup_hôs
 +
t
.
ext_lookup_hôs
;

209 
	gs
.
	gext_lookup_mis£s
 +
t
.
ext_lookup_mis£s
;

210 
	gs
.
	gÆloc_∑ge_ö_ext
 +
t
.
Æloc_∑ge_ö_ext
;

211 
	gs
.
	gexã¡_l£¨ch
 +
t
.
exã¡_l£¨ch
;

212 
	gs
.
	gbegö_x˘_˙t
 +
t
.
begö_x˘_˙t
;

213 
	gs
.
	gcommô_x˘_˙t
 +
t
.
commô_x˘_˙t
;

214 
	gs
.
	gab‹t_x˘_˙t
 +
t
.
ab‹t_x˘_˙t
;

215 
	gs
.
	glog_w¨n_ab‹t_˙t
 +
t
.
log_w¨n_ab‹t_˙t
;

216 
	gs
.
	g¥ï¨e_x˘_˙t
 +
t
.
¥ï¨e_x˘_˙t
;

217 
	gs
.
	grﬁlback_ßvït_˙t
 +
t
.
rﬁlback_ßvït_˙t
;

218 
	gs
.
	gm∂_©èch_˙t
 +
t
.
m∂_©èch_˙t
;

219 
	gs
.
	g™ch‹s
 +
t
.
™ch‹s
;

220 
	gs
.
	gcom≥nßã_ö_log
 +
t
.
com≥nßã_ö_log
;

221 
	gs
.
	gcom≥nßã_ö_x˘
 +
t
.
com≥nßã_ö_x˘
;

222 
	gs
.
	gcom≥nßã_ªc‹ds
 +
t
.
com≥nßã_ªc‹ds
;

223 
	gs
.
	gcom≥nßã_skù≥d
 +
t
.
com≥nßã_skù≥d
;

224 
	gs
.
	glog_swôches
 +
t
.
log_swôches
;

225 
	gs
.
	gawaô_1thªad_log
 +
t
.
awaô_1thªad_log
;

226 
	gs
.
	gacquúe_1thªad_log
 +
t
.
acquúe_1thªad_log
;

227 
	gs
.
	ggë_logbuf
 +
t
.
gë_logbuf
;

228 
	gs
.
	gawaô_1thªad_x˘
 +
t
.
awaô_1thªad_x˘
;

229 
	gs
.
	gawaô_vﬁ_m⁄ô‹
 +
t
.
awaô_vﬁ_m⁄ô‹
;

230 
	gs
.
	g√ed_vﬁ_lock_r
 +
t
.
√ed_vﬁ_lock_r
;

231 
	gs
.
	g√ed_vﬁ_lock_w
 +
t
.
√ed_vﬁ_lock_w
;

232 
	gs
.
	gawaô_vﬁ_lock_r
 +
t
.
awaô_vﬁ_lock_r
;

233 
	gs
.
	gawaô_vﬁ_lock_w
 +
t
.
awaô_vﬁ_lock_w
;

234 
	gs
.
	gawaô_vﬁ_lock_r_p˘
 +
t
.
awaô_vﬁ_lock_r_p˘
;

235 
	gs
.
	gawaô_vﬁ_lock_w_p˘
 +
t
.
awaô_vﬁ_lock_w_p˘
;

236 
	gs
.
	gs_¥ï¨ed
 +
t
.
s_¥ï¨ed
;

237 
	gs
.
	glock_quîy_˙t
 +
t
.
lock_quîy_˙t
;

238 
	gs
.
	gu∆ock_ªque°_˙t
 +
t
.
u∆ock_ªque°_˙t
;

239 
	gs
.
	glock_ªque°_˙t
 +
t
.
lock_ªque°_˙t
;

240 
	gs
.
	glock_acquúe_˙t
 +
t
.
lock_acquúe_˙t
;

241 
	gs
.
	glock_hód_t_˙t
 +
t
.
lock_hód_t_˙t
;

242 
	gs
.
	glock_awaô_Æt_˙t
 +
t
.
lock_awaô_Æt_˙t
;

243 
	gs
.
	glock_exå™eous_ªq_˙t
 +
t
.
lock_exå™eous_ªq_˙t
;

244 
	gs
.
	glock_c⁄vîsi⁄_˙t
 +
t
.
lock_c⁄vîsi⁄_˙t
;

245 
	gs
.
	glock_ˇche_hô_˙t
 +
t
.
lock_ˇche_hô_˙t
;

246 
	gs
.
	glock_ªque°_t_˙t
 +
t
.
lock_ªque°_t_˙t
;

247 
	gs
.
	glock_esc_to_∑ge
 +
t
.
lock_esc_to_∑ge
;

248 
	gs
.
	glock_esc_to_°‹e
 +
t
.
lock_esc_to_°‹e
;

249 
	gs
.
	glock_esc_to_vﬁume
 +
t
.
lock_esc_to_vﬁume
;

250 
	gs
.
	glk_vﬁ_acq
 +
t
.
lk_vﬁ_acq
;

251 
	gs
.
	glk_°‹e_acq
 +
t
.
lk_°‹e_acq
;

252 
	gs
.
	glk_∑ge_acq
 +
t
.
lk_∑ge_acq
;

253 
	gs
.
	glk_kvl_acq
 +
t
.
lk_kvl_acq
;

254 
	gs
.
	glk_ªc_acq
 +
t
.
lk_ªc_acq
;

255 
	gs
.
	glk_ext_acq
 +
t
.
lk_ext_acq
;

256 
	gs
.
	glk_u£r1_acq
 +
t
.
lk_u£r1_acq
;

257 
	gs
.
	glk_u£r2_acq
 +
t
.
lk_u£r2_acq
;

258 
	gs
.
	glk_u£r3_acq
 +
t
.
lk_u£r3_acq
;

259 
	gs
.
	glk_u£r4_acq
 +
t
.
lk_u£r4_acq
;

260 
	gs
.
	glock_waô_˙t
 +
t
.
lock_waô_˙t
;

261 
	gs
.
	glock_block_˙t
 +
t
.
lock_block_˙t
;

262 
	gs
.
	glk_vﬁ_waô
 +
t
.
lk_vﬁ_waô
;

263 
	gs
.
	glk_°‹e_waô
 +
t
.
lk_°‹e_waô
;

264 
	gs
.
	glk_∑ge_waô
 +
t
.
lk_∑ge_waô
;

265 
	gs
.
	glk_kvl_waô
 +
t
.
lk_kvl_waô
;

266 
	gs
.
	glk_ªc_waô
 +
t
.
lk_ªc_waô
;

267 
	gs
.
	glk_ext_waô
 +
t
.
lk_ext_waô
;

268 
	gs
.
	glk_u£r1_waô
 +
t
.
lk_u£r1_waô
;

269 
	gs
.
	glk_u£r2_waô
 +
t
.
lk_u£r2_waô
;

270 
	gs
.
	glk_u£r3_waô
 +
t
.
lk_u£r3_waô
;

271 
	gs
.
	glk_u£r4_waô
 +
t
.
lk_u£r4_waô
;

272 
	gs
.
	g¶i_ªque°ed
 +
t
.
¶i_ªque°ed
;

273 
	gs
.
	g¶i_acquúed
 +
t
.
¶i_acquúed
;

274 
	gs
.
	g¶i_upgødes
 +
t
.
¶i_upgødes
;

275 
	gs
.
	g¶i_ñigibÀ
 +
t
.
¶i_ñigibÀ
;

276 
	gs
.
	g¶i_öhîôed
 +
t
.
¶i_öhîôed
;

277 
	gs
.
	g¶i_u£d
 +
t
.
¶i_u£d
;

278 
	gs
.
	g¶i_too_wók
 +
t
.
¶i_too_wók
;

279 
	gs
.
	g¶i_found_œã
 +
t
.
¶i_found_œã
;

280 
	gs
.
	g¶i_purged
 +
t
.
¶i_purged
;

281 
	gs
.
	g¶i_övÆid©ed
 +
t
.
¶i_övÆid©ed
;

282 
	gs
.
	g¶i_kït
 +
t
.
¶i_kït
;

283 
	gs
.
	g¶i_evi˘ed
 +
t
.
¶i_evi˘ed
;

284 
	gs
.
	g¶i_no_∑ª¡
 +
t
.
¶i_no_∑ª¡
;

285 
	gs
.
	g¶i_waôed_⁄
 +
t
.
¶i_waôed_⁄
;

286 
	gs
.
	gdú_ˇche_hô
 +
t
.
dú_ˇche_hô
;

287 
	gs
.
	gdú_ˇche_miss
 +
t
.
dú_ˇche_miss
;

288 
	gs
.
	gdú_ˇche_öhîô
 +
t
.
dú_ˇche_öhîô
;

289 
	gs
.
	gdú_ˇche_°Æe
 +
t
.
dú_ˇche_°Æe
;

290  
	gs
;

	@src/sm/sm_stats_t_msg_gen.h

1 #i‚de‡
SM_STATS_T_MSG_GEN_H


2 
	#SM_STATS_T_MSG_GEN_H


	)

	@src/sm/sm_stats_t_out_gen.cpp

1 #i‚de‡
SM_STATS_T_OUT_GEN_CPP


2 
	#SM_STATS_T_OUT_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	go°ªam
 &

39 
	g›î©‹
<<(
	go°ªam
 &
	go
,c⁄° 
	gsm_°©s_t
 &
	gt
)

41 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_⁄e_∑ge_wrôê" << 
	gt
.
	gbf_⁄e_∑ge_wrôe
 << 
	gídl
;

42 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_two_∑ge_wrôê" << 
	gt
.
	gbf_two_∑ge_wrôe
 << 
	gídl
;

43 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_thªe_∑ge_wrôê" << 
	gt
.
	gbf_thªe_∑ge_wrôe
 << 
	gídl
;

44 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_four_∑ge_wrôê" << 
	gt
.
	gbf_four_∑ge_wrôe
 << 
	gídl
;

45 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_five_∑ge_wrôê" << 
	gt
.
	gbf_five_∑ge_wrôe
 << 
	gídl
;

46 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_six_∑ge_wrôê" << 
	gt
.
	gbf_six_∑ge_wrôe
 << 
	gídl
;

47 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_£ví_∑ge_wrôê" << 
	gt
.
	gbf_£ví_∑ge_wrôe
 << 
	gídl
;

48 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_eight_∑ge_wrôê" << 
	gt
.
	gbf_eight_∑ge_wrôe
 << 
	gídl
;

49 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_m‹e_∑ge_wrôê" << 
	gt
.
	gbf_m‹e_∑ge_wrôe
 << 
	gídl
;

50 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_˛ó√r_swìp†" << 
	gt
.
	gbf_˛ó√r_swìps
 << 
	gídl
;

51 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_˛ó√r_sig«Œed " << 
	gt
.
	gbf_˛ó√r_sig«Œed
 << 
	gídl
;

52 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_Æªady_evi˘ed " << 
	gt
.
	gbf_Æªady_evi˘ed
 << 
	gídl
;

53 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_dúty_∑ge_˛ó√d " << 
	gt
.
	gbf_dúty_∑ge_˛ó√d
 << 
	gídl
;

54 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_Êushed_OHD_∑gê" << 
	gt
.
	gbf_Êushed_OHD_∑ge
 << 
	gídl
;

55 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_kick_fuŒ " << 
	gt
.
	gbf_kick_fuŒ
 << 
	gídl
;

56 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_kick_ª∂a˚míà" << 
	gt
.
	gbf_kick_ª∂a˚mít
 << 
	gídl
;

57 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_kick_thªshﬁd " << 
	gt
.
	gbf_kick_thªshﬁd
 << 
	gídl
;

58 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_swìp_∑ge_hŸ_skù≥d " << 
	gt
.
	gbf_swìp_∑ge_hŸ_skù≥d
 << 
	gídl
;

59 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_disˇrded_hŸ " << 
	gt
.
	gbf_disˇrded_hŸ
 << 
	gídl
;

60 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_log_Êush_Æ»" << 
	gt
.
	gbf_log_Êush_Æl
 << 
	gídl
;

61 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_log_Êush_l¢ " << 
	gt
.
	gbf_log_Êush_l¢
 << 
	gídl
;

62 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_wrôe_ouà" << 
	gt
.
	gbf_wrôe_out
 << 
	gídl
;

63 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_¶ìp_awaô_˛ó¿" << 
	gt
.
	gbf_¶ìp_awaô_˛ón
 << 
	gídl
;

64 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_fg_sˇn_˙à" << 
	gt
.
	gbf_fg_sˇn_˙t
 << 
	gídl
;

65 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_c‹e_u≈ö_˛ó√d " << 
	gt
.
	gbf_c‹e_u≈ö_˛ó√d
 << 
	gídl
;

66 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_unfix_˛ó√d " << 
	gt
.
	gbf_unfix_˛ó√d
 << 
	gídl
;

67 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_look_˙à" << 
	gt
.
	gbf_look_˙t
 << 
	gídl
;

68 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_hô_˙à" << 
	gt
.
	gbf_hô_˙t
 << 
	gídl
;

69 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_gøb_œtch_Áûed " << 
	gt
.
	gbf_gøb_œtch_Áûed
 << 
	gídl
;

70 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_ª∂a˚_ouà" << 
	gt
.
	gbf_ª∂a˚_out
 << 
	gídl
;

71 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_ª∂a˚d_dúty " << 
	gt
.
	gbf_ª∂a˚d_dúty
 << 
	gídl
;

72 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_ª∂a˚d_˛ó¿" << 
	gt
.
	gbf_ª∂a˚d_˛ón
 << 
	gídl
;

73 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_no_å™sô_buckë " << 
	gt
.
	gbf_no_å™sô_buckë
 << 
	gídl
;

74 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_¥e„tch_ªque°†" << 
	gt
.
	gbf_¥e„tch_ªque°s
 << 
	gídl
;

75 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_¥e„tche†" << 
	gt
.
	gbf_¥e„tches
 << 
	gídl
;

76 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_upgøde_œtch_ø˚ " << 
	gt
.
	gbf_upgøde_œtch_ø˚
 << 
	gídl
;

77 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bf_upgøde_œtch_ch™ged " << 
	gt
.
	gbf_upgøde_œtch_ch™ged
 << 
	gídl
;

78 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ª°¨t_ª∑ú_ªc_l¢ " << 
	gt
.
	gª°¨t_ª∑ú_ªc_l¢
 << 
	gídl
;

79 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ªad†" << 
	gt
.
	gvﬁ_ªads
 << 
	gídl
;

80 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_wrôe†" << 
	gt
.
	gvﬁ_wrôes
 << 
	gídl
;

81 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_blks_wrôã¿" << 
	gt
.
	gvﬁ_blks_wrôãn
 << 
	gídl
;

82 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_Æloc_ext†" << 
	gt
.
	gvﬁ_Æloc_exts
 << 
	gídl
;

83 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_‰ì_ext†" << 
	gt
.
	gvﬁ_‰ì_exts
 << 
	gídl
;

84 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "io_m_löór_£¨che†" << 
	gt
.
	gio_m_löór_£¨ches
 << 
	gídl
;

85 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "io_m_löór_£¨ch_exã¡†" << 
	gt
.
	gio_m_löór_£¨ch_exã¡s
 << 
	gídl
;

86 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ˇche_¥ime†" << 
	gt
.
	gvﬁ_ˇche_¥imes
 << 
	gídl
;

87 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ˇche_˛ór†" << 
	gt
.
	gvﬁ_ˇche_˛órs
 << 
	gídl
;

88 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_œ°_exã¡_£¨ch " << 
	gt
.
	gvﬁ_œ°_exã¡_£¨ch
 << 
	gídl
;

89 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_œ°_exã¡_£¨ch_co° " << 
	gt
.
	gvﬁ_œ°_exã¡_£¨ch_co°
 << 
	gídl
;

90 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_œ°_∑ge_ˇche_upd©ê" << 
	gt
.
	gvﬁ_œ°_∑ge_ˇche_upd©e
 << 
	gídl
;

91 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_œ°_∑ge_ˇche_föd " << 
	gt
.
	gvﬁ_œ°_∑ge_ˇche_föd
 << 
	gídl
;

92 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_œ°_∑ge_ˇche_föd_hô " << 
	gt
.
	gvﬁ_œ°_∑ge_ˇche_föd_hô
 << 
	gídl
;

93 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_hi°o_ext_ˇche_upd©ê" << 
	gt
.
	gvﬁ_hi°o_ext_ˇche_upd©e
 << 
	gídl
;

94 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_hi°o_ext_ˇche_föd " << 
	gt
.
	gvﬁ_hi°o_ext_ˇche_föd
 << 
	gídl
;

95 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_hi°o_ext_ˇche_föd_hô " << 
	gt
.
	gvﬁ_hi°o_ext_ˇche_föd_hô
 << 
	gídl
;

96 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ªsv_ˇche_ö£π " << 
	gt
.
	gvﬁ_ªsv_ˇche_ö£π
 << 
	gídl
;

97 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ªsv_ˇche_îa£ " << 
	gt
.
	gvﬁ_ªsv_ˇche_îa£
 << 
	gídl
;

98 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ªsv_ˇche_hô " << 
	gt
.
	gvﬁ_ªsv_ˇche_hô
 << 
	gídl
;

99 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_ªsv_ˇche_Áû " << 
	gt
.
	gvﬁ_ªsv_ˇche_Áû
 << 
	gídl
;

100 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "vﬁ_lock_nﬂŒo¯" << 
	gt
.
	gvﬁ_lock_nﬂŒoc
 << 
	gídl
;

101 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_dup_sync_˙à" << 
	gt
.
	glog_dup_sync_˙t
 << 
	gídl
;

102 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_sync_˙à" << 
	gt
.
	glog_sync_˙t
 << 
	gídl
;

103 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fsync_˙à" << 
	gt
.
	glog_fsync_˙t
 << 
	gídl
;

104 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_chk±_˙à" << 
	gt
.
	glog_chk±_˙t
 << 
	gídl
;

105 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_chk±_wakê" << 
	gt
.
	glog_chk±_wake
 << 
	gídl
;

106 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_„tche†" << 
	gt
.
	glog_„tches
 << 
	gídl
;

107 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_ö£π†" << 
	gt
.
	glog_ö£πs
 << 
	gídl
;

108 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ " << 
	gt
.
	glog_fuŒ
 << 
	gídl
;

109 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ_ﬁd_x˘ " << 
	gt
.
	glog_fuŒ_ﬁd_x˘
 << 
	gídl
;

110 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ_ﬁd_∑gê" << 
	gt
.
	glog_fuŒ_ﬁd_∑ge
 << 
	gídl
;

111 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ_waô " << 
	gt
.
	glog_fuŒ_waô
 << 
	gídl
;

112 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ_f‹˚ " << 
	gt
.
	glog_fuŒ_f‹˚
 << 
	gídl
;

113 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fuŒ_giveu∞" << 
	gt
.
	glog_fuŒ_giveup
 << 
	gídl
;

114 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_fûe_wø∞" << 
	gt
.
	glog_fûe_wøp
 << 
	gídl
;

115 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_byãs_gíî©ed " << 
	gt
.
	glog_byãs_gíî©ed
 << 
	gídl
;

116 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dódlock_˙à" << 
	gt
.
	glock_dódlock_˙t
 << 
	gídl
;

117 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_Ál£_dódlock_˙à" << 
	gt
.
	glock_Ál£_dódlock_˙t
 << 
	gídl
;

118 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dld_ˇŒ_˙à" << 
	gt
.
	glock_dld_ˇŒ_˙t
 << 
	gídl
;

119 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dld_fú°_ˇŒ_˙à" << 
	gt
.
	glock_dld_fú°_ˇŒ_˙t
 << 
	gídl
;

120 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dld_Ál£_vi˘im_˙à" << 
	gt
.
	glock_dld_Ál£_vi˘im_˙t
 << 
	gídl
;

121 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dld_vi˘im_£lf_˙à" << 
	gt
.
	glock_dld_vi˘im_£lf_˙t
 << 
	gídl
;

122 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_dld_vi˘im_Ÿhî_˙à" << 
	gt
.
	glock_dld_vi˘im_Ÿhî_˙t
 << 
	gídl
;

123 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "n⁄unique_fögî¥öt†" << 
	gt
.
	gn⁄unique_fögî¥öts
 << 
	gídl
;

124 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "unique_fögî¥öt†" << 
	gt
.
	gunique_fögî¥öts
 << 
	gídl
;

125 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ªc_pö_˙à" << 
	gt
.
	gªc_pö_˙t
 << 
	gídl
;

126 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ªc_u≈ö_˙à" << 
	gt
.
	gªc_u≈ö_˙t
 << 
	gídl
;

127 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ªc_ªpö_cvà" << 
	gt
.
	gªc_ªpö_cvt
 << 
	gídl
;

128 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑geˇche_hô " << 
	gt
.
	gfm_∑geˇche_hô
 << 
	gídl
;

129 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑ge_nﬁ©ch " << 
	gt
.
	gfm_∑ge_nﬁ©ch
 << 
	gídl
;

130 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑ge_moved " << 
	gt
.
	gfm_∑ge_moved
 << 
	gídl
;

131 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑ge_övÆid " << 
	gt
.
	gfm_∑ge_övÆid
 << 
	gídl
;

132 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑ge_nﬁock " << 
	gt
.
	gfm_∑ge_nﬁock
 << 
	gídl
;

133 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_Æloc_∑ge_ªje˘ " << 
	gt
.
	gfm_Æloc_∑ge_ªje˘
 << 
	gídl
;

134 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_∑ge_fuŒ " << 
	gt
.
	gfm_∑ge_fuŒ
 << 
	gídl
;

135 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_îr‹_nŸ_h™dÀd " << 
	gt
.
	gfm_îr‹_nŸ_h™dÀd
 << 
	gídl
;

136 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_ok " << 
	gt
.
	gfm_ok
 << 
	gídl
;

137 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_hi°ogøm_hô " << 
	gt
.
	gfm_hi°ogøm_hô
 << 
	gídl
;

138 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_£¨ch_∑ge†" << 
	gt
.
	gfm_£¨ch_∑ges
 << 
	gídl
;

139 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_£¨ch_Áûed " << 
	gt
.
	gfm_£¨ch_Áûed
 << 
	gídl
;

140 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_£¨ch_hô " << 
	gt
.
	gfm_£¨ch_hô
 << 
	gídl
;

141 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_œ°pid_ˇched " << 
	gt
.
	gfm_œ°pid_ˇched
 << 
	gídl
;

142 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_œ°pid_hô " << 
	gt
.
	gfm_œ°pid_hô
 << 
	gídl
;

143 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_Æloc_pg " << 
	gt
.
	gfm_Æloc_pg
 << 
	gídl
;

144 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_ext_touch " << 
	gt
.
	gfm_ext_touch
 << 
	gídl
;

145 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_ext_touch_n› " << 
	gt
.
	gfm_ext_touch_n›
 << 
	gídl
;

146 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_no•a˚ " << 
	gt
.
	gfm_no•a˚
 << 
	gídl
;

147 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_ˇchê" << 
	gt
.
	gfm_ˇche
 << 
	gídl
;

148 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_com∑˘ " << 
	gt
.
	gfm_com∑˘
 << 
	gídl
;

149 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_≠≥nd " << 
	gt
.
	gfm_≠≥nd
 << 
	gídl
;

150 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "fm_≠≥nd⁄ly " << 
	gt
.
	gfm_≠≥nd⁄ly
 << 
	gídl
;

151 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_föd_˙à" << 
	gt
.
	gbt_föd_˙t
 << 
	gídl
;

152 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_ö£π_˙à" << 
	gt
.
	gbt_ö£π_˙t
 << 
	gídl
;

153 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_ªmove_˙à" << 
	gt
.
	gbt_ªmove_˙t
 << 
	gídl
;

154 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_åavî£_˙à" << 
	gt
.
	gbt_åavî£_˙t
 << 
	gídl
;

155 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_∑πül_åavî£_˙à" << 
	gt
.
	gbt_∑πül_åavî£_˙t
 << 
	gídl
;

156 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_ª°¨t_åavî£_˙à" << 
	gt
.
	gbt_ª°¨t_åavî£_˙t
 << 
	gídl
;

157 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_pos¯" << 
	gt
.
	gbt_posc
 << 
	gídl
;

158 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_sˇn_˙à" << 
	gt
.
	gbt_sˇn_˙t
 << 
	gídl
;

159 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_•lô†" << 
	gt
.
	gbt_•lôs
 << 
	gídl
;

160 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_Àaf_•lô†" << 
	gt
.
	gbt_Àaf_•lôs
 << 
	gídl
;

161 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_cut†" << 
	gt
.
	gbt_cuts
 << 
	gídl
;

162 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_grow†" << 
	gt
.
	gbt_grows
 << 
	gídl
;

163 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_shrök†" << 
	gt
.
	gbt_shröks
 << 
	gídl
;

164 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_lök†" << 
	gt
.
	gbt_löks
 << 
	gídl
;

165 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_upgøde_Áû_ªåy " << 
	gt
.
	gbt_upgøde_Áû_ªåy
 << 
	gídl
;

166 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_˛r_smo_åavî£ " << 
	gt
.
	gbt_˛r_smo_åavî£
 << 
	gídl
;

167 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_pcom¥es†" << 
	gt
.
	gbt_pcom¥ess
 << 
	gídl
;

168 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_∂max " << 
	gt
.
	gbt_∂max
 << 
	gídl
;

169 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "bt_upd©e_˙à" << 
	gt
.
	gbt_upd©e_˙t
 << 
	gídl
;

170 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_keycmp_˙à" << 
	gt
.
	gs‹t_keycmp_˙t
 << 
	gídl
;

171 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_Àxödx_˙à" << 
	gt
.
	gs‹t_Àxödx_˙t
 << 
	gídl
;

172 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_gëöfo_˙à" << 
	gt
.
	gs‹t_gëöfo_˙t
 << 
	gídl
;

173 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mof_˙à" << 
	gt
.
	gs‹t_mof_˙t
 << 
	gídl
;

174 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_umof_˙à" << 
	gt
.
	gs‹t_umof_˙t
 << 
	gídl
;

175 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mem˝y_˙à" << 
	gt
.
	gs‹t_mem˝y_˙t
 << 
	gídl
;

176 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mem˝y_byã†" << 
	gt
.
	gs‹t_mem˝y_byãs
 << 
	gídl
;

177 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_key˝y_˙à" << 
	gt
.
	gs‹t_key˝y_˙t
 << 
	gídl
;

178 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mÆloc†" << 
	gt
.
	gs‹t_mÆlocs
 << 
	gídl
;

179 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mÆloc_byã†" << 
	gt
.
	gs‹t_mÆloc_byãs
 << 
	gídl
;

180 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mÆloc_hiw© " << 
	gt
.
	gs‹t_mÆloc_hiw©
 << 
	gídl
;

181 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mÆloc_max " << 
	gt
.
	gs‹t_mÆloc_max
 << 
	gídl
;

182 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_mÆloc_cuº " << 
	gt
.
	gs‹t_mÆloc_cuº
 << 
	gídl
;

183 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_tmpfûe_˙à" << 
	gt
.
	gs‹t_tmpfûe_˙t
 << 
	gídl
;

184 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_tmpfûe_byã†" << 
	gt
.
	gs‹t_tmpfûe_byãs
 << 
	gídl
;

185 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_du∂iˇã†" << 
	gt
.
	gs‹t_du∂iˇãs
 << 
	gídl
;

186 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_∑ge_fixe†" << 
	gt
.
	gs‹t_∑ge_fixes
 << 
	gídl
;

187 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_∑ge_fixes_2 " << 
	gt
.
	gs‹t_∑ge_fixes_2
 << 
	gídl
;

188 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_lg_∑ge_fixe†" << 
	gt
.
	gs‹t_lg_∑ge_fixes
 << 
	gídl
;

189 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_ªc_pö†" << 
	gt
.
	gs‹t_ªc_pös
 << 
	gídl
;

190 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_fûes_¸óãd " << 
	gt
.
	gs‹t_fûes_¸óãd
 << 
	gídl
;

191 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_ªcs_¸óãd " << 
	gt
.
	gs‹t_ªcs_¸óãd
 << 
	gídl
;

192 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_ªc_byã†" << 
	gt
.
	gs‹t_ªc_byãs
 << 
	gídl
;

193 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_run†" << 
	gt
.
	gs‹t_runs
 << 
	gídl
;

194 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_run_sizê" << 
	gt
.
	gs‹t_run_size
 << 
	gídl
;

195 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_pha£†" << 
	gt
.
	gs‹t_pha£s
 << 
	gídl
;

196 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s‹t_¡≠e†" << 
	gt
.
	gs‹t_¡≠es
 << 
	gídl
;

197 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_fix_˙à" << 
	gt
.
	g∑ge_fix_˙t
 << 
	gídl
;

198 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_ªfix_˙à" << 
	gt
.
	g∑ge_ªfix_˙t
 << 
	gídl
;

199 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_unfix_˙à" << 
	gt
.
	g∑ge_unfix_˙t
 << 
	gídl
;

200 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_Æloc_˙à" << 
	gt
.
	g∑ge_Æloc_˙t
 << 
	gídl
;

201 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_dóŒoc_˙à" << 
	gt
.
	g∑ge_dóŒoc_˙t
 << 
	gídl
;

202 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_båì_Ælo¯" << 
	gt
.
	g∑ge_båì_Æloc
 << 
	gídl
;

203 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_fûe_Ælo¯" << 
	gt
.
	g∑ge_fûe_Æloc
 << 
	gídl
;

204 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_fûe_mrbt_Ælo¯" << 
	gt
.
	g∑ge_fûe_mrbt_Æloc
 << 
	gídl
;

205 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_båì_dóŒo¯" << 
	gt
.
	g∑ge_båì_dóŒoc
 << 
	gídl
;

206 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_fûe_dóŒo¯" << 
	gt
.
	g∑ge_fûe_dóŒoc
 << 
	gídl
;

207 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "∑ge_fûe_mrbt_dóŒo¯" << 
	gt
.
	g∑ge_fûe_mrbt_dóŒoc
 << 
	gídl
;

208 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ext_lookup_hô†" << 
	gt
.
	gext_lookup_hôs
 << 
	gídl
;

209 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ext_lookup_mis£†" << 
	gt
.
	gext_lookup_mis£s
 << 
	gídl
;

210 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "Æloc_∑ge_ö_exà" << 
	gt
.
	gÆloc_∑ge_ö_ext
 << 
	gídl
;

211 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "exã¡_l£¨ch " << 
	gt
.
	gexã¡_l£¨ch
 << 
	gídl
;

212 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "begö_x˘_˙à" << 
	gt
.
	gbegö_x˘_˙t
 << 
	gídl
;

213 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "commô_x˘_˙à" << 
	gt
.
	gcommô_x˘_˙t
 << 
	gídl
;

214 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "ab‹t_x˘_˙à" << 
	gt
.
	gab‹t_x˘_˙t
 << 
	gídl
;

215 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_w¨n_ab‹t_˙à" << 
	gt
.
	glog_w¨n_ab‹t_˙t
 << 
	gídl
;

216 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¥ï¨e_x˘_˙à" << 
	gt
.
	g¥ï¨e_x˘_˙t
 << 
	gídl
;

217 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "rﬁlback_ßvït_˙à" << 
	gt
.
	grﬁlback_ßvït_˙t
 << 
	gídl
;

218 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "m∂_©èch_˙à" << 
	gt
.
	gm∂_©èch_˙t
 << 
	gídl
;

219 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "™ch‹†" << 
	gt
.
	g™ch‹s
 << 
	gídl
;

220 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "com≥nßã_ö_log " << 
	gt
.
	gcom≥nßã_ö_log
 << 
	gídl
;

221 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "com≥nßã_ö_x˘ " << 
	gt
.
	gcom≥nßã_ö_x˘
 << 
	gídl
;

222 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "com≥nßã_ªc‹d†" << 
	gt
.
	gcom≥nßã_ªc‹ds
 << 
	gídl
;

223 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "com≥nßã_skù≥d " << 
	gt
.
	gcom≥nßã_skù≥d
 << 
	gídl
;

224 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "log_swôche†" << 
	gt
.
	glog_swôches
 << 
	gídl
;

225 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_1thªad_log " << 
	gt
.
	gawaô_1thªad_log
 << 
	gídl
;

226 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "acquúe_1thªad_log " << 
	gt
.
	gacquúe_1thªad_log
 << 
	gídl
;

227 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "gë_logbu‡" << 
	gt
.
	ggë_logbuf
 << 
	gídl
;

228 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_1thªad_x˘ " << 
	gt
.
	gawaô_1thªad_x˘
 << 
	gídl
;

229 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_vﬁ_m⁄ô‹ " << 
	gt
.
	gawaô_vﬁ_m⁄ô‹
 << 
	gídl
;

230 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "√ed_vﬁ_lock_∏" << 
	gt
.
	g√ed_vﬁ_lock_r
 << 
	gídl
;

231 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "√ed_vﬁ_lock_w " << 
	gt
.
	g√ed_vﬁ_lock_w
 << 
	gídl
;

232 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_vﬁ_lock_∏" << 
	gt
.
	gawaô_vﬁ_lock_r
 << 
	gídl
;

233 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_vﬁ_lock_w " << 
	gt
.
	gawaô_vﬁ_lock_w
 << 
	gídl
;

234 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_vﬁ_lock_r_p˘ " << 
	gt
.
	gawaô_vﬁ_lock_r_p˘
 << 
	gídl
;

235 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "awaô_vﬁ_lock_w_p˘ " << 
	gt
.
	gawaô_vﬁ_lock_w_p˘
 << 
	gídl
;

236 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "s_¥ï¨ed " << 
	gt
.
	gs_¥ï¨ed
 << 
	gídl
;

237 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_quîy_˙à" << 
	gt
.
	glock_quîy_˙t
 << 
	gídl
;

238 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "u∆ock_ªque°_˙à" << 
	gt
.
	gu∆ock_ªque°_˙t
 << 
	gídl
;

239 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_ªque°_˙à" << 
	gt
.
	glock_ªque°_˙t
 << 
	gídl
;

240 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_acquúe_˙à" << 
	gt
.
	glock_acquúe_˙t
 << 
	gídl
;

241 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_hód_t_˙à" << 
	gt
.
	glock_hód_t_˙t
 << 
	gídl
;

242 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_awaô_Æt_˙à" << 
	gt
.
	glock_awaô_Æt_˙t
 << 
	gídl
;

243 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_exå™eous_ªq_˙à" << 
	gt
.
	glock_exå™eous_ªq_˙t
 << 
	gídl
;

244 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_c⁄vîsi⁄_˙à" << 
	gt
.
	glock_c⁄vîsi⁄_˙t
 << 
	gídl
;

245 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_ˇche_hô_˙à" << 
	gt
.
	glock_ˇche_hô_˙t
 << 
	gídl
;

246 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_ªque°_t_˙à" << 
	gt
.
	glock_ªque°_t_˙t
 << 
	gídl
;

247 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_esc_to_∑gê" << 
	gt
.
	glock_esc_to_∑ge
 << 
	gídl
;

248 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_esc_to_°‹ê" << 
	gt
.
	glock_esc_to_°‹e
 << 
	gídl
;

249 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_esc_to_vﬁumê" << 
	gt
.
	glock_esc_to_vﬁume
 << 
	gídl
;

250 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_vﬁ_acq " << 
	gt
.
	glk_vﬁ_acq
 << 
	gídl
;

251 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_°‹e_acq " << 
	gt
.
	glk_°‹e_acq
 << 
	gídl
;

252 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_∑ge_acq " << 
	gt
.
	glk_∑ge_acq
 << 
	gídl
;

253 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_kvl_acq " << 
	gt
.
	glk_kvl_acq
 << 
	gídl
;

254 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_ªc_acq " << 
	gt
.
	glk_ªc_acq
 << 
	gídl
;

255 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_ext_acq " << 
	gt
.
	glk_ext_acq
 << 
	gídl
;

256 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r1_acq " << 
	gt
.
	glk_u£r1_acq
 << 
	gídl
;

257 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r2_acq " << 
	gt
.
	glk_u£r2_acq
 << 
	gídl
;

258 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r3_acq " << 
	gt
.
	glk_u£r3_acq
 << 
	gídl
;

259 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r4_acq " << 
	gt
.
	glk_u£r4_acq
 << 
	gídl
;

260 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_waô_˙à" << 
	gt
.
	glock_waô_˙t
 << 
	gídl
;

261 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lock_block_˙à" << 
	gt
.
	glock_block_˙t
 << 
	gídl
;

262 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_vﬁ_waô " << 
	gt
.
	glk_vﬁ_waô
 << 
	gídl
;

263 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_°‹e_waô " << 
	gt
.
	glk_°‹e_waô
 << 
	gídl
;

264 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_∑ge_waô " << 
	gt
.
	glk_∑ge_waô
 << 
	gídl
;

265 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_kvl_waô " << 
	gt
.
	glk_kvl_waô
 << 
	gídl
;

266 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_ªc_waô " << 
	gt
.
	glk_ªc_waô
 << 
	gídl
;

267 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_ext_waô " << 
	gt
.
	glk_ext_waô
 << 
	gídl
;

268 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r1_waô " << 
	gt
.
	glk_u£r1_waô
 << 
	gídl
;

269 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r2_waô " << 
	gt
.
	glk_u£r2_waô
 << 
	gídl
;

270 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r3_waô " << 
	gt
.
	glk_u£r3_waô
 << 
	gídl
;

271 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "lk_u£r4_waô " << 
	gt
.
	glk_u£r4_waô
 << 
	gídl
;

272 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_ªque°ed " << 
	gt
.
	g¶i_ªque°ed
 << 
	gídl
;

273 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_acquúed " << 
	gt
.
	g¶i_acquúed
 << 
	gídl
;

274 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_upgøde†" << 
	gt
.
	g¶i_upgødes
 << 
	gídl
;

275 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_ñigibÀ " << 
	gt
.
	g¶i_ñigibÀ
 << 
	gídl
;

276 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_öhîôed " << 
	gt
.
	g¶i_öhîôed
 << 
	gídl
;

277 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_u£d " << 
	gt
.
	g¶i_u£d
 << 
	gídl
;

278 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_too_wók " << 
	gt
.
	g¶i_too_wók
 << 
	gídl
;

279 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_found_œã " << 
	gt
.
	g¶i_found_œã
 << 
	gídl
;

280 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_purged " << 
	gt
.
	g¶i_purged
 << 
	gídl
;

281 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_övÆid©ed " << 
	gt
.
	g¶i_övÆid©ed
 << 
	gídl
;

282 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_kïà" << 
	gt
.
	g¶i_kït
 << 
	gídl
;

283 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_evi˘ed " << 
	gt
.
	g¶i_evi˘ed
 << 
	gídl
;

284 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_no_∑ª¡ " << 
	gt
.
	g¶i_no_∑ª¡
 << 
	gídl
;

285 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "¶i_waôed_⁄ " << 
	gt
.
	g¶i_waôed_⁄
 << 
	gídl
;

286 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "dú_ˇche_hô " << 
	gt
.
	gdú_ˇche_hô
 << 
	gídl
;

287 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "dú_ˇche_mis†" << 
	gt
.
	gdú_ˇche_miss
 << 
	gídl
;

288 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "dú_ˇche_öhîô " << 
	gt
.
	gdú_ˇche_öhîô
 << 
	gídl
;

289 
	go
 << 
£tw
(
W_sm_°©s_t
Ë<< "dú_ˇche_°Æê" << 
	gt
.
	gdú_ˇche_°Æe
 << 
	gídl
;

290  
	go
;

	@src/sm/sm_stats_t_struct_gen.h

1 #i‚de‡
SM_STATS_T_STRUCT_GEN_H


2 
	#SM_STATS_T_STRUCT_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	gw_ba£_t
::
ba£_°©_t
 
bf_⁄e_∑ge_wrôe
;

39 
	gw_ba£_t
::
ba£_°©_t
 
bf_two_∑ge_wrôe
;

40 
	gw_ba£_t
::
ba£_°©_t
 
bf_thªe_∑ge_wrôe
;

41 
	gw_ba£_t
::
ba£_°©_t
 
bf_four_∑ge_wrôe
;

42 
	gw_ba£_t
::
ba£_°©_t
 
bf_five_∑ge_wrôe
;

43 
	gw_ba£_t
::
ba£_°©_t
 
bf_six_∑ge_wrôe
;

44 
	gw_ba£_t
::
ba£_°©_t
 
bf_£ví_∑ge_wrôe
;

45 
	gw_ba£_t
::
ba£_°©_t
 
bf_eight_∑ge_wrôe
;

46 
	gw_ba£_t
::
ba£_°©_t
 
bf_m‹e_∑ge_wrôe
;

47 
	gw_ba£_t
::
ba£_°©_t
 
bf_˛ó√r_swìps
;

48 
	gw_ba£_t
::
ba£_°©_t
 
bf_˛ó√r_sig«Œed
;

49 
	gw_ba£_t
::
ba£_°©_t
 
bf_Æªady_evi˘ed
;

50 
	gw_ba£_t
::
ba£_°©_t
 
bf_dúty_∑ge_˛ó√d
;

51 
	gw_ba£_t
::
ba£_°©_t
 
bf_Êushed_OHD_∑ge
;

52 
	gw_ba£_t
::
ba£_°©_t
 
bf_kick_fuŒ
;

53 
	gw_ba£_t
::
ba£_°©_t
 
bf_kick_ª∂a˚mít
;

54 
	gw_ba£_t
::
ba£_°©_t
 
bf_kick_thªshﬁd
;

55 
	gw_ba£_t
::
ba£_°©_t
 
bf_swìp_∑ge_hŸ_skù≥d
;

56 
	gw_ba£_t
::
ba£_°©_t
 
bf_disˇrded_hŸ
;

57 
	gw_ba£_t
::
ba£_°©_t
 
bf_log_Êush_Æl
;

58 
	gw_ba£_t
::
ba£_°©_t
 
bf_log_Êush_l¢
;

59 
	gw_ba£_t
::
ba£_°©_t
 
bf_wrôe_out
;

60 
	gw_ba£_t
::
ba£_°©_t
 
bf_¶ìp_awaô_˛ón
;

61 
	gw_ba£_t
::
ba£_°©_t
 
bf_fg_sˇn_˙t
;

62 
	gw_ba£_t
::
ba£_°©_t
 
bf_c‹e_u≈ö_˛ó√d
;

63 
	gw_ba£_t
::
ba£_°©_t
 
bf_unfix_˛ó√d
;

64 
	gw_ba£_t
::
ba£_°©_t
 
bf_look_˙t
;

65 
	gw_ba£_t
::
ba£_°©_t
 
bf_hô_˙t
;

66 
	gw_ba£_t
::
ba£_°©_t
 
bf_gøb_œtch_Áûed
;

67 
	gw_ba£_t
::
ba£_°©_t
 
bf_ª∂a˚_out
;

68 
	gw_ba£_t
::
ba£_°©_t
 
bf_ª∂a˚d_dúty
;

69 
	gw_ba£_t
::
ba£_°©_t
 
bf_ª∂a˚d_˛ón
;

70 
	gw_ba£_t
::
ba£_°©_t
 
bf_no_å™sô_buckë
;

71 
	gw_ba£_t
::
ba£_°©_t
 
bf_¥e„tch_ªque°s
;

72 
	gw_ba£_t
::
ba£_°©_t
 
bf_¥e„tches
;

73 
	gw_ba£_t
::
ba£_°©_t
 
bf_upgøde_œtch_ø˚
;

74 
	gw_ba£_t
::
ba£_°©_t
 
bf_upgøde_œtch_ch™ged
;

75 
	gw_ba£_t
::
ba£_°©_t
 
ª°¨t_ª∑ú_ªc_l¢
;

76 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ªads
;

77 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_wrôes
;

78 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_blks_wrôãn
;

79 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_Æloc_exts
;

80 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_‰ì_exts
;

81 
	gw_ba£_t
::
ba£_°©_t
 
io_m_löór_£¨ches
;

82 
	gw_ba£_t
::
ba£_°©_t
 
io_m_löór_£¨ch_exã¡s
;

83 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ˇche_¥imes
;

84 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ˇche_˛órs
;

85 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_œ°_exã¡_£¨ch
;

86 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_œ°_exã¡_£¨ch_co°
;

87 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_œ°_∑ge_ˇche_upd©e
;

88 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_œ°_∑ge_ˇche_föd
;

89 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_œ°_∑ge_ˇche_föd_hô
;

90 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_hi°o_ext_ˇche_upd©e
;

91 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_hi°o_ext_ˇche_föd
;

92 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_hi°o_ext_ˇche_föd_hô
;

93 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ªsv_ˇche_ö£π
;

94 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ªsv_ˇche_îa£
;

95 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ªsv_ˇche_hô
;

96 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_ªsv_ˇche_Áû
;

97 
	gw_ba£_t
::
ba£_°©_t
 
vﬁ_lock_nﬂŒoc
;

98 
	gw_ba£_t
::
ba£_°©_t
 
log_dup_sync_˙t
;

99 
	gw_ba£_t
::
ba£_°©_t
 
log_sync_˙t
;

100 
	gw_ba£_t
::
ba£_°©_t
 
log_fsync_˙t
;

101 
	gw_ba£_t
::
ba£_°©_t
 
log_chk±_˙t
;

102 
	gw_ba£_t
::
ba£_°©_t
 
log_chk±_wake
;

103 
	gw_ba£_t
::
ba£_°©_t
 
log_„tches
;

104 
	gw_ba£_t
::
ba£_°©_t
 
log_ö£πs
;

105 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ
;

106 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ_ﬁd_x˘
;

107 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ_ﬁd_∑ge
;

108 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ_waô
;

109 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ_f‹˚
;

110 
	gw_ba£_t
::
ba£_°©_t
 
log_fuŒ_giveup
;

111 
	gw_ba£_t
::
ba£_°©_t
 
log_fûe_wøp
;

112 
	gw_ba£_t
::
ba£_°©_t
 
log_byãs_gíî©ed
;

113 
	gw_ba£_t
::
ba£_°©_t
 
lock_dódlock_˙t
;

114 
	gw_ba£_t
::
ba£_°©_t
 
lock_Ál£_dódlock_˙t
;

115 
	gw_ba£_t
::
ba£_°©_t
 
lock_dld_ˇŒ_˙t
;

116 
	gw_ba£_t
::
ba£_°©_t
 
lock_dld_fú°_ˇŒ_˙t
;

117 
	gw_ba£_t
::
ba£_°©_t
 
lock_dld_Ál£_vi˘im_˙t
;

118 
	gw_ba£_t
::
ba£_°©_t
 
lock_dld_vi˘im_£lf_˙t
;

119 
	gw_ba£_t
::
ba£_°©_t
 
lock_dld_vi˘im_Ÿhî_˙t
;

120 
	gw_ba£_t
::
ba£_°©_t
 
n⁄unique_fögî¥öts
;

121 
	gw_ba£_t
::
ba£_°©_t
 
unique_fögî¥öts
;

122 
	gw_ba£_t
::
ba£_°©_t
 
ªc_pö_˙t
;

123 
	gw_ba£_t
::
ba£_°©_t
 
ªc_u≈ö_˙t
;

124 
	gw_ba£_t
::
ba£_°©_t
 
ªc_ªpö_cvt
;

125 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑geˇche_hô
;

126 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑ge_nﬁ©ch
;

127 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑ge_moved
;

128 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑ge_övÆid
;

129 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑ge_nﬁock
;

130 
	gw_ba£_t
::
ba£_°©_t
 
fm_Æloc_∑ge_ªje˘
;

131 
	gw_ba£_t
::
ba£_°©_t
 
fm_∑ge_fuŒ
;

132 
	gw_ba£_t
::
ba£_°©_t
 
fm_îr‹_nŸ_h™dÀd
;

133 
	gw_ba£_t
::
ba£_°©_t
 
fm_ok
;

134 
	gw_ba£_t
::
ba£_°©_t
 
fm_hi°ogøm_hô
;

135 
	gw_ba£_t
::
ba£_°©_t
 
fm_£¨ch_∑ges
;

136 
	gw_ba£_t
::
ba£_°©_t
 
fm_£¨ch_Áûed
;

137 
	gw_ba£_t
::
ba£_°©_t
 
fm_£¨ch_hô
;

138 
	gw_ba£_t
::
ba£_°©_t
 
fm_œ°pid_ˇched
;

139 
	gw_ba£_t
::
ba£_°©_t
 
fm_œ°pid_hô
;

140 
	gw_ba£_t
::
ba£_°©_t
 
fm_Æloc_pg
;

141 
	gw_ba£_t
::
ba£_°©_t
 
fm_ext_touch
;

142 
	gw_ba£_t
::
ba£_°©_t
 
fm_ext_touch_n›
;

143 
	gw_ba£_t
::
ba£_°©_t
 
fm_no•a˚
;

144 
	gw_ba£_t
::
ba£_°©_t
 
fm_ˇche
;

145 
	gw_ba£_t
::
ba£_°©_t
 
fm_com∑˘
;

146 
	gw_ba£_t
::
ba£_°©_t
 
fm_≠≥nd
;

147 
	gw_ba£_t
::
ba£_°©_t
 
fm_≠≥nd⁄ly
;

148 
	gw_ba£_t
::
ba£_°©_t
 
bt_föd_˙t
;

149 
	gw_ba£_t
::
ba£_°©_t
 
bt_ö£π_˙t
;

150 
	gw_ba£_t
::
ba£_°©_t
 
bt_ªmove_˙t
;

151 
	gw_ba£_t
::
ba£_°©_t
 
bt_åavî£_˙t
;

152 
	gw_ba£_t
::
ba£_°©_t
 
bt_∑πül_åavî£_˙t
;

153 
	gw_ba£_t
::
ba£_°©_t
 
bt_ª°¨t_åavî£_˙t
;

154 
	gw_ba£_t
::
ba£_°©_t
 
bt_posc
;

155 
	gw_ba£_t
::
ba£_°©_t
 
bt_sˇn_˙t
;

156 
	gw_ba£_t
::
ba£_°©_t
 
bt_•lôs
;

157 
	gw_ba£_t
::
ba£_°©_t
 
bt_Àaf_•lôs
;

158 
	gw_ba£_t
::
ba£_°©_t
 
bt_cuts
;

159 
	gw_ba£_t
::
ba£_°©_t
 
bt_grows
;

160 
	gw_ba£_t
::
ba£_°©_t
 
bt_shröks
;

161 
	gw_ba£_t
::
ba£_°©_t
 
bt_löks
;

162 
	gw_ba£_t
::
ba£_°©_t
 
bt_upgøde_Áû_ªåy
;

163 
	gw_ba£_t
::
ba£_°©_t
 
bt_˛r_smo_åavî£
;

164 
	gw_ba£_t
::
ba£_°©_t
 
bt_pcom¥ess
;

165 
	gw_ba£_t
::
ba£_°©_t
 
bt_∂max
;

166 
	gw_ba£_t
::
ba£_°©_t
 
bt_upd©e_˙t
;

167 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_keycmp_˙t
;

168 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_Àxödx_˙t
;

169 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_gëöfo_˙t
;

170 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mof_˙t
;

171 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_umof_˙t
;

172 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mem˝y_˙t
;

173 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mem˝y_byãs
;

174 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_key˝y_˙t
;

175 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mÆlocs
;

176 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mÆloc_byãs
;

177 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mÆloc_hiw©
;

178 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mÆloc_max
;

179 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_mÆloc_cuº
;

180 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_tmpfûe_˙t
;

181 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_tmpfûe_byãs
;

182 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_du∂iˇãs
;

183 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_∑ge_fixes
;

184 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_∑ge_fixes_2
;

185 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_lg_∑ge_fixes
;

186 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_ªc_pös
;

187 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_fûes_¸óãd
;

188 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_ªcs_¸óãd
;

189 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_ªc_byãs
;

190 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_runs
;

191 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_run_size
;

192 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_pha£s
;

193 
	gw_ba£_t
::
ba£_°©_t
 
s‹t_¡≠es
;

194 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_fix_˙t
;

195 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_ªfix_˙t
;

196 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_unfix_˙t
;

197 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_Æloc_˙t
;

198 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_dóŒoc_˙t
;

199 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_båì_Æloc
;

200 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_fûe_Æloc
;

201 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_fûe_mrbt_Æloc
;

202 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_båì_dóŒoc
;

203 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_fûe_dóŒoc
;

204 
	gw_ba£_t
::
ba£_°©_t
 
∑ge_fûe_mrbt_dóŒoc
;

205 
	gw_ba£_t
::
ba£_°©_t
 
ext_lookup_hôs
;

206 
	gw_ba£_t
::
ba£_°©_t
 
ext_lookup_mis£s
;

207 
	gw_ba£_t
::
ba£_°©_t
 
Æloc_∑ge_ö_ext
;

208 
	gw_ba£_t
::
ba£_°©_t
 
exã¡_l£¨ch
;

209 
	gw_ba£_t
::
ba£_°©_t
 
begö_x˘_˙t
;

210 
	gw_ba£_t
::
ba£_°©_t
 
commô_x˘_˙t
;

211 
	gw_ba£_t
::
ba£_°©_t
 
ab‹t_x˘_˙t
;

212 
	gw_ba£_t
::
ba£_°©_t
 
log_w¨n_ab‹t_˙t
;

213 
	gw_ba£_t
::
ba£_°©_t
 
¥ï¨e_x˘_˙t
;

214 
	gw_ba£_t
::
ba£_°©_t
 
rﬁlback_ßvït_˙t
;

215 
	gw_ba£_t
::
ba£_°©_t
 
m∂_©èch_˙t
;

216 
	gw_ba£_t
::
ba£_°©_t
 
™ch‹s
;

217 
	gw_ba£_t
::
ba£_°©_t
 
com≥nßã_ö_log
;

218 
	gw_ba£_t
::
ba£_°©_t
 
com≥nßã_ö_x˘
;

219 
	gw_ba£_t
::
ba£_°©_t
 
com≥nßã_ªc‹ds
;

220 
	gw_ba£_t
::
ba£_°©_t
 
com≥nßã_skù≥d
;

221 
	gw_ba£_t
::
ba£_°©_t
 
log_swôches
;

222 
	gw_ba£_t
::
ba£_°©_t
 
awaô_1thªad_log
;

223 
	gw_ba£_t
::
ba£_°©_t
 
acquúe_1thªad_log
;

224 
	gw_ba£_t
::
ba£_°©_t
 
gë_logbuf
;

225 
	gw_ba£_t
::
ba£_°©_t
 
awaô_1thªad_x˘
;

226 
	gw_ba£_t
::
ba£_°©_t
 
awaô_vﬁ_m⁄ô‹
;

227 
	gw_ba£_t
::
ba£_°©_t
 
√ed_vﬁ_lock_r
;

228 
	gw_ba£_t
::
ba£_°©_t
 
√ed_vﬁ_lock_w
;

229 
	gw_ba£_t
::
ba£_°©_t
 
awaô_vﬁ_lock_r
;

230 
	gw_ba£_t
::
ba£_°©_t
 
awaô_vﬁ_lock_w
;

231 
	gw_ba£_t
::
ba£_°©_t
 
awaô_vﬁ_lock_r_p˘
;

232 
	gw_ba£_t
::
ba£_°©_t
 
awaô_vﬁ_lock_w_p˘
;

233 
	gw_ba£_t
::
ba£_°©_t
 
s_¥ï¨ed
;

234 
	gw_ba£_t
::
ba£_°©_t
 
lock_quîy_˙t
;

235 
	gw_ba£_t
::
ba£_°©_t
 
u∆ock_ªque°_˙t
;

236 
	gw_ba£_t
::
ba£_°©_t
 
lock_ªque°_˙t
;

237 
	gw_ba£_t
::
ba£_°©_t
 
lock_acquúe_˙t
;

238 
	gw_ba£_t
::
ba£_°©_t
 
lock_hód_t_˙t
;

239 
	gw_ba£_t
::
ba£_°©_t
 
lock_awaô_Æt_˙t
;

240 
	gw_ba£_t
::
ba£_°©_t
 
lock_exå™eous_ªq_˙t
;

241 
	gw_ba£_t
::
ba£_°©_t
 
lock_c⁄vîsi⁄_˙t
;

242 
	gw_ba£_t
::
ba£_°©_t
 
lock_ˇche_hô_˙t
;

243 
	gw_ba£_t
::
ba£_°©_t
 
lock_ªque°_t_˙t
;

244 
	gw_ba£_t
::
ba£_°©_t
 
lock_esc_to_∑ge
;

245 
	gw_ba£_t
::
ba£_°©_t
 
lock_esc_to_°‹e
;

246 
	gw_ba£_t
::
ba£_°©_t
 
lock_esc_to_vﬁume
;

247 
	gw_ba£_t
::
ba£_°©_t
 
lk_vﬁ_acq
;

248 
	gw_ba£_t
::
ba£_°©_t
 
lk_°‹e_acq
;

249 
	gw_ba£_t
::
ba£_°©_t
 
lk_∑ge_acq
;

250 
	gw_ba£_t
::
ba£_°©_t
 
lk_kvl_acq
;

251 
	gw_ba£_t
::
ba£_°©_t
 
lk_ªc_acq
;

252 
	gw_ba£_t
::
ba£_°©_t
 
lk_ext_acq
;

253 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r1_acq
;

254 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r2_acq
;

255 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r3_acq
;

256 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r4_acq
;

257 
	gw_ba£_t
::
ba£_°©_t
 
lock_waô_˙t
;

258 
	gw_ba£_t
::
ba£_°©_t
 
lock_block_˙t
;

259 
	gw_ba£_t
::
ba£_°©_t
 
lk_vﬁ_waô
;

260 
	gw_ba£_t
::
ba£_°©_t
 
lk_°‹e_waô
;

261 
	gw_ba£_t
::
ba£_°©_t
 
lk_∑ge_waô
;

262 
	gw_ba£_t
::
ba£_°©_t
 
lk_kvl_waô
;

263 
	gw_ba£_t
::
ba£_°©_t
 
lk_ªc_waô
;

264 
	gw_ba£_t
::
ba£_°©_t
 
lk_ext_waô
;

265 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r1_waô
;

266 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r2_waô
;

267 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r3_waô
;

268 
	gw_ba£_t
::
ba£_°©_t
 
lk_u£r4_waô
;

269 
	gw_ba£_t
::
ba£_°©_t
 
¶i_ªque°ed
;

270 
	gw_ba£_t
::
ba£_°©_t
 
¶i_acquúed
;

271 
	gw_ba£_t
::
ba£_°©_t
 
¶i_upgødes
;

272 
	gw_ba£_t
::
ba£_°©_t
 
¶i_ñigibÀ
;

273 
	gw_ba£_t
::
ba£_°©_t
 
¶i_öhîôed
;

274 
	gw_ba£_t
::
ba£_°©_t
 
¶i_u£d
;

275 
	gw_ba£_t
::
ba£_°©_t
 
¶i_too_wók
;

276 
	gw_ba£_t
::
ba£_°©_t
 
¶i_found_œã
;

277 
	gw_ba£_t
::
ba£_°©_t
 
¶i_purged
;

278 
	gw_ba£_t
::
ba£_°©_t
 
¶i_övÆid©ed
;

279 
	gw_ba£_t
::
ba£_°©_t
 
¶i_kït
;

280 
	gw_ba£_t
::
ba£_°©_t
 
¶i_evi˘ed
;

281 
	gw_ba£_t
::
ba£_°©_t
 
¶i_no_∑ª¡
;

282 
	gw_ba£_t
::
ba£_°©_t
 
¶i_waôed_⁄
;

283 
	gw_ba£_t
::
ba£_°©_t
 
dú_ˇche_hô
;

284 
	gw_ba£_t
::
ba£_°©_t
 
dú_ˇche_miss
;

285 
	gw_ba£_t
::
ba£_°©_t
 
dú_ˇche_öhîô
;

286 
	gw_ba£_t
::
ba£_°©_t
 
dú_ˇche_°Æe
;

287 
	gpublic
:

288 
‰õnd
 
o°ªam
 &

289 
›î©‹
<<(
o°ªam
 &
o
,c⁄° 
	gsm_°©s_t
 &
	gt
);

290 
	gpublic
:

291 
‰õnd
 
sm_°©s_t
 &

292 
›î©‹
+=(
sm_°©s_t
 &
s
,c⁄° 
	gsm_°©s_t
 &
	gt
);

293 
	gpublic
:

294 
‰õnd
 
sm_°©s_t
 &

295 
›î©‹
-=(
sm_°©s_t
 &
s
,c⁄° 
	gsm_°©s_t
 &
	gt
);

296 c⁄° *
	g°©_«mes
[];

297 c⁄° *
	g°©_ty≥s
;

298 
	#W_sm_°©s_t
 28 + 2

	)

	@src/sm/sm_vtable_enum.h

30 #i‚de‡
SM_VTABLE_ENUM_H


31 
	#SM_VTABLE_ENUM_H


	)

33 
	~"w_deföes.h
"

45 
	~<vèbÀ.h
>

46 
	~"°hªad_vèbÀ_íum.h
"

50 
	mx˘_¡hªads_©å
,

51 
	mx˘_gtid_©å
,

52 
	mx˘_tid_©å
,

53 
	mx˘_°©e_©å
,

54 
	mx˘_co‹dö©‹_©å
,

55 
	mx˘_f‹˚d_ªad⁄ly_©å
,

58 
	mx˘_œ°


63 
	~"bf_hèb_°©s_t_cﬁÀ˘_íum_gí.h
"

64 
	~"sm_°©s_t_cﬁÀ˘_íum_gí.h
"

65 
	msm_œ°


68 
	~<°hªad_vèbÀ_íum.h
>

71 
	msmthªad_«me_©å
 = 
°hªad_œ°
,

72 
	msmthªad_thªad_ty≥_©å
,

73 
	msmthªad_pö_cou¡_©å
,

74 
	msmthªad_is_ö_sm_©å
,

75 
	msmthªad_tid_©å
,

76 
	msmthªad_œ°


	@src/sm/smfile.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SMFILE_C


	)

60 
	~"w.h
"

61 
	~"›ti⁄.h
"

62 
	~"sm_öt_4.h
"

63 
	~"btcurs‹.h
"

64 
	~"lgªc.h
"

65 
	~"devi˚.h
"

66 
	~"≠p_suµ‹t.h
"

67 
	~"sm.h
"

70 #i‡
W_DEBUG_LEVEL
 > 0

71 
	#FILE_LOG_COMMENT_ON
 1

	)

73 
	#FILE_LOG_COMMENT_ON
 0

	)

83 
rc_t


84 
	gss_m
::
	$£t_°‹e_¥›îty
(
°id_t
 
°id
, 
°‹e_¥›îty_t
 
¥›îty
)

86 
	`SM_PROLOGUE_RC
(
ss_m
::
£t_°‹e_¥›îty
, 
ö_x˘
, 
ªad_wrôe
, 0);

87 
	`W_DO
–
	`_£t_°‹e_¥›îty
–
°id
, 
¥›îty
) );

88  
RCOK
;

89 
	}
}

94 
rc_t


95 
	gss_m
::
	$gë_°‹e_¥›îty
(
°id_t
 
°id
, 
°‹e_¥›îty_t
& 
¥›îty
)

97 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_°‹e_¥›îty
, 
ö_x˘
,
ªad_⁄ly
, 0);

98 
	`W_DO
–
	`_gë_°‹e_¥›îty
–
°id
, 
¥›îty
) );

99  
RCOK
;

100 
	}
}

105 
rc_t


106 
	gss_m
::
	$¸óã_fûe
(

107 
vid_t
 
vid
,

108 
°id_t
& 
fid
,

109 
°‹e_¥›îty_t
 
¥›îty
,

110 
shpid_t
 
˛u°î_höt


113 #i‡
FILE_LOG_COMMENT_ON


114 
	`W_DO
(
	`log_commít
("create_file"));

116 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_fûe
, 
ö_x˘
, 
ªad_wrôe
, 0);

117 
	`DBGTHRD
(<<"¸óã_fûê" <<
vid
 << " " << 
¥›îty
 );

118 
	`W_DO
(
	`_¸óã_fûe
(
vid
, 
fid
, 
¥›îty
, 
˛u°î_höt
));

119 
	`DBGTHRD
(<<"¸óã_fûêªtu∫†" << 
fid
);

120  
RCOK
;

121 
	}
}

126 
rc_t


127 
	gss_m
::
	$de°roy_fûe
(c⁄° 
°id_t
& 
fid
)

129 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_fûe
, 
ö_x˘
,
ªad_wrôe
, 0);

130 
	`DBGTHRD
(<<"de°roy_fûê" <<
fid
);

131 
	`W_DO
(
	`_de°roy_fûe
(
fid
));

132  
RCOK
;

133 
	}
}

138 
rc_t


139 
	gss_m
::
	$¸óã_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
vec_t
& 
hdr
,

140 
smsize_t
 
Àn_höt
, c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
,

141 c⁄° 
boﬁ
 
bIgn‹eLocks


144 #i‡
FILE_LOG_COMMENT_ON


146 
w_o°r°ªam
 
s
;

147 
s
 << "¸óã_ª¯" << 
fid
;

148 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

151 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

152 
	`W_DO
(
	`_¸óã_ªc
(
fid
, 
hdr
, 
Àn_höt
, 
d©a
, 
√w_rid
, 
bIgn‹eLocks
));

153  
RCOK
;

154 
	}
}

159 
rc_t


160 
	gss_m
::
	$de°roy_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
boﬁ
 
bIgn‹eLocks
)

162 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

163 
	`DBG
(<<"de°roy_ª¯" <<
rid
);

164 
	`W_DO
(
	`_de°roy_ªc
(
rid
, 
bIgn‹eLocks
));

165  
RCOK
;

166 
	}
}

171 
rc_t


172 
	gss_m
::
	$upd©e_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
)

174 #i‡
FILE_LOG_COMMENT_ON


176 
w_o°r°ªam
 
s
;

177 
s
 << "upd©e_ª¯" << 
rid
;

178 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

181 
	`SM_PROLOGUE_RC
(
ss_m
::
upd©e_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

182 
	`W_DO
(
	`_upd©e_ªc
(
rid
, 
°¨t
, 
d©a
));

183  
RCOK
;

184 
	}
}

189 
rc_t


190 
	gss_m
::
	$upd©e_ªc_hdr
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
)

192 
	`SM_PROLOGUE_RC
(
ss_m
::
upd©e_ªc_hdr
, 
ö_x˘
,
ªad_wrôe
, 0);

193 
	`W_DO
(
	`_upd©e_ªc_hdr
(
rid
, 
°¨t
, 
hdr
));

194  
RCOK
;

195 
	}
}

200 
rc_t


201 
	gss_m
::
	$≠≥nd_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
)

203 #i‡
FILE_LOG_COMMENT_ON


205 
w_o°r°ªam
 
s
;

206 
s
 << "≠≥nd_ª¯" << 
rid
;

207 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

210 
	`SM_PROLOGUE_RC
(
ss_m
::
≠≥nd_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

211 
	`W_DO
(
	`_≠≥nd_ªc
(
rid
, 
d©a
));

212  
RCOK
;

213 
	}
}

218 
rc_t


219 
	gss_m
::
	$åunˇã_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
, 
boﬁ
 &
should_f‹w¨d
)

221 #i‡
FILE_LOG_COMMENT_ON


223 
w_o°r°ªam
 
s
;

224 
s
 << "åunˇã_ª¯" << 
rid
;

225 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

228 
	`SM_PROLOGUE_RC
(
ss_m
::
åunˇã_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

229 
	`W_DO
(
	`_åunˇã_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
));

230 i‡(
should_f‹w¨d
) {

236  
RCOK
;

237 
	}
}

239 
rc_t


240 
	gss_m
::
	$åunˇã_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
)

242 #i‡
FILE_LOG_COMMENT_ON


244 
w_o°r°ªam
 
s
;

245 
s
 << "åunˇã_ª¯" << 
rid
;

246 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

249 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

250 
boﬁ
 
should_f‹w¨d
;

251 
	`W_DO
(
fi
->
	`åunˇã_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
));

252  
RCOK
;

253 
	}
}

256 
rc_t


257 
	gss_m
::
	$lvid_to_vid
(c⁄° 
lvid_t
& 
lvid
, 
vid_t
& 
vid
)

259 
	`SM_PROLOGUE_RC
(
ss_m
::
lvid_to_vid
, 
ˇn_be_ö_x˘
,
ªad_⁄ly
, 0);

260 
vid
 = 
io
->
	`gë_vid
(
lvid
);

261 i‡(
vid
 =
vid_t
::
nuŒ
Ë 
	`RC
(
eBADVOL
);

262  
RCOK
;

263 
	}
}

265 
rc_t


266 
	gss_m
::
	$vid_to_lvid
(
vid_t
 
vid
, 
lvid_t
& 
lvid
)

268 
	`SM_PROLOGUE_RC
(
ss_m
::
lvid_to_vid
, 
ˇn_be_ö_x˘
,
ªad_⁄ly
, 0);

269 
lvid
 = 
io
->
	`gë_lvid
(
vid
);

270 i‡(
lvid
 =
lvid_t
::
nuŒ
Ë 
	`RC
(
eBADVOL
);

271  
RCOK
;

272 
	}
}

278 
rc_t


279 
	gss_m
::
	$¸óã_mrbt_fûe
(

280 
vid_t
 
vid
,

281 
°id_t
& 
fid
,

282 
°‹e_¥›îty_t
 
¥›îty
,

283 
shpid_t
 
˛u°î_höt


286 #i‡
FILE_LOG_COMMENT_ON


287 
	`W_DO
(
	`log_commít
("create_mrbt_file"));

289 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mrbt_fûe
, 
ö_x˘
, 
ªad_wrôe
, 0);

290 
	`DBGTHRD
(<<"¸óã_mrbt_fûê" <<
vid
 << " " << 
¥›îty
 );

291 
	`W_DO
(
	`_¸óã_mrbt_fûe
(
vid
, 
fid
, 
¥›îty
, 
˛u°î_höt
));

292 
	`DBGTHRD
(<<"¸óã_mrbt_fûêªtu∫†" << 
fid
);

293  
RCOK
;

294 
	}
}

299 
rc_t


300 
	gss_m
::
	$de°roy_mrbt_fûe
(c⁄° 
°id_t
& 
fid
)

302 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_mrbt_fûe
, 
ö_x˘
,
ªad_wrôe
, 0);

303 
	`DBGTHRD
(<<"de°roy_mrbt_fûê" <<
fid
);

304 
	`W_DO
(
	`_de°roy_fûe
(
fid
));

305  
RCOK
;

306 
	}
}

311 
rc_t


312 
	gss_m
::
	$¸óã_mrbt_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
vec_t
& 
hdr
,

313 
smsize_t
 
Àn_höt
, c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
,

314 c⁄° 
boﬁ
 
bIgn‹eLocks


317 #i‡
FILE_LOG_COMMENT_ON


319 
w_o°r°ªam
 
s
;

320 
s
 << "¸óã_mrbt_ª¯" << 
fid
;

321 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

324 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

325 
	`W_DO
(
	`_¸óã_mrbt_ªc
(
fid
, 
hdr
, 
Àn_höt
, 
d©a
, 
√w_rid
, 
bIgn‹eLocks
));

326  
RCOK
;

327 
	}
}

332 
rc_t


333 
	gss_m
::
	$¸óã_mrbt_ªc_ö_∑ge
(c⁄° 
°id_t
& 
fid
, 
fûe_p
& 
∑ge
, c⁄° 
vec_t
& 
hdr
,

334 
smsize_t
 
Àn_höt
, c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
, 
boﬁ
& 
•a˚_found
,

335 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

337 #i‡
FILE_LOG_COMMENT_ON


339 
w_o°r°ªam
 
s
;

340 
s
 << "¸óã_mrbt_ªc_ö_∑ge: fûe=" << 
fid
 << "Öage=" << 
∑ge
.
	`pid
() ;

341 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

344 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mrbt_ªc_ö_∑ge
, 
ö_x˘
,
ªad_wrôe
, 0);

345 
	`W_DO
(
	`_¸óã_mrbt_ªc_ö_∑ge
(
fid
, 
∑ge
, 
hdr
, 
Àn_höt
, 
d©a
, 
√w_rid
,

346 
•a˚_found
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

348  
RCOK
;

349 
	}
}

354 
rc_t


355 
	gss_m
::
	$föd_∑ge_™d_¸óã_mrbt_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
Õid_t
& 
Àaf
, c⁄° 
vec_t
& 
hdr
,

356 
smsize_t
 
Àn_höt
, c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
,

357 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

359 #i‡
FILE_LOG_COMMENT_ON


361 
w_o°r°ªam
 
s
;

362 
s
 << "föd_∑ge_™d_¸óã_mrbt_ªc: fûe=" << 
fid
 ;

363 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

366 
	`SM_PROLOGUE_RC
(
ss_m
::
föd_∑ge_™d_¸óã_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

367 
	`W_DO
(
	`_föd_∑ge_™d_¸óã_mrbt_ªc
(
fid
, 
Àaf
, 
hdr
, 
Àn_höt
, 
d©a
, 
√w_rid
,

368 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

369  
RCOK
;

370 
	}
}

375 
rc_t


376 
	gss_m
::
	$de°roy_mrbt_ªc
(c⁄° 
rid_t
& 
rid
,

377 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches


380 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

381 
	`DBG
(<<"de°roy_mrbt_ª¯" <<
rid
);

382 
	`W_DO
(
	`_de°roy_mrbt_ªc
(
rid
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

383  
RCOK
;

384 
	}
}

389 
rc_t


390 
	gss_m
::
	$upd©e_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

391 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

393 #i‡
FILE_LOG_COMMENT_ON


395 
w_o°r°ªam
 
s
;

396 
s
 << "upd©e_mrbt_ª¯" << 
rid
;

397 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

400 
	`SM_PROLOGUE_RC
(
ss_m
::
upd©e_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

401 
	`W_DO
(
	`_upd©e_mrbt_ªc
(
rid
, 
°¨t
, 
d©a
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

402  
RCOK
;

403 
	}
}

408 
rc_t


409 
	gss_m
::
	$upd©e_mrbt_ªc_hdr
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
,

410 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

412 
	`SM_PROLOGUE_RC
(
ss_m
::
upd©e_mrbt_ªc_hdr
, 
ö_x˘
,
ªad_wrôe
, 0);

413 
	`W_DO
(
	`_upd©e_mrbt_ªc_hdr
(
rid
, 
°¨t
, 
hdr
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

414  
RCOK
;

415 
	}
}

420 
rc_t


421 
	gss_m
::
	$≠≥nd_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
,

422 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

424 #i‡
FILE_LOG_COMMENT_ON


426 
w_o°r°ªam
 
s
;

427 
s
 << "≠≥nd_mrbt_ª¯" << 
rid
;

428 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

431 
	`SM_PROLOGUE_RC
(
ss_m
::
≠≥nd_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

432 
	`W_DO
(
	`_≠≥nd_mrbt_ªc
(
rid
, 
d©a
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
));

433  
RCOK
;

434 
	}
}

439 
rc_t


440 
	gss_m
::
	$åunˇã_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
, 
boﬁ
 &
should_f‹w¨d
,

441 c⁄° 
boﬁ
 , c⁄° boﬁ 
bIgn‹eL©ches
)

443 #i‡
FILE_LOG_COMMENT_ON


445 
w_o°r°ªam
 
s
;

446 
s
 << "åunˇã_mrbt_ª¯" << 
rid
;

447 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

450 
	`SM_PROLOGUE_RC
(
ss_m
::
åunˇã_mrbt_ªc
, 
ö_x˘
,
ªad_wrôe
, 0);

451 
	`W_DO
(
	`_åunˇã_mrbt_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
, 
bIgn‹eL©ches
));

452 i‡(
should_f‹w¨d
) {

458  
RCOK
;

459 
	}
}

461 
rc_t


462 
	gss_m
::
	$åunˇã_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
,

463 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

465 #i‡
FILE_LOG_COMMENT_ON


467 
w_o°r°ªam
 
s
;

468 
s
 << "åunˇã_mrbt_ª¯" << 
rid
;

469 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

472 if(!
bIgn‹eLocks
) {

473 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

475 
boﬁ
 
should_f‹w¨d
;

476 
	`W_DO
(
fi
->
	`åunˇã_mrbt_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
, 
bIgn‹eL©ches
));

477  
RCOK
;

478 
	}
}

483 
rc_t


484 
	gss_m
::
	$_¸óã_mrbt_fûe
(
vid_t
 
vid
, 
°id_t
& 
fid
,

485 
°‹e_¥›îty_t
 
¥›îty
,

486 
shpid_t
 
˛u°î_höt


489 
	`FUNC
(
ss_m
::
_¸óã_mrbt_fûe
);

490 
	`DBG
–<< "Aâem±ögÅÿ¸óãá fûê⁄ vﬁumê" << 
vid
.
vﬁ
 );

492 
°‹e_Êag_t
 
°_Êag
 = 
	`_make_°‹e_Êag
(
¥›îty
);

493 
exäum_t
 
fú°_exã¡
 = 
	`exäum_t
(
˛u°î_höt
? clu°î_höà/ 
ss_m
::
ext_sz
 : 0);

495 
	`DBGTHRD
(<<"abouàtÿ¸óãá st‹ê°¨tögábouàexã¡ " << 
fú°_exã¡
);

496 
	`W_DO
–
io
->
	`¸óã_°‹e
(
vid
, 100 , 
°_Êag
, 
fid
, 
fú°_exã¡
) );

498 
	`DBGTHRD
(<<"¸óãd fú° st‹ê" << 
fid
 << "Çow create 2nd...");

507 
°id_t
 
lg_°id
;

508 
w_rc_t
 
rc

io
->
	`¸óã_°‹e
(
vid
, 100 ,

509 
°_Êag
, 
lg_°id
, 
fú°_exã¡
, 1);

510 if(
rc
.
	`is_îr‹
()) {

513 
	`DBGTHRD
(<<"2nd cª©êÁûed; de°royög fú°" << 
fid
);

514 
	`W_DO
–
io
->
	`de°roy_°‹e
(
fid
) );

515  
rc
;

518 
	`DBGTHRD
(<<"¸óãd 2nd st‹ê(f‹ÜgÑecsË" << 
lg_°id
);

526 
	`W_DO
(
lm
->
	`lock
(
fid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

528 
	`DBGTHRD
(<<"locked " << 
fid
);

530 
Õid_t
 
fú°
;

534 
söfo_s
 
	`söfo
(
fid
.
°‹e
, 
t_fûe
, 100 ,

535 
t_bad_ndx_t
, 
t_cc_n⁄e
 , 
fú°
.
∑ge
, 0, 0);

536 
söfo
.
	`£t_œrge_°‹e
(
lg_°id
.
°‹e
);

537 
	`W_DO
–
dú
->
	`ö£π
(
fid
, 
söfo
) );

539 
	`DBGTHRD
(<<"ö£πed " << 
fid
.
°‹e
);

541  
RCOK
;

542 
	}
}

547 
rc_t


548 
	gss_m
::
	$_¸óã_mrbt_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
vec_t
& 
hdr
, 
smsize_t
 
Àn_höt
,

549 c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
, c⁄° 
boﬁ
 
bIgn‹eLocks


552 
	`FUNC
(
ss_m
::
_¸óã_mrbt_ªc
);

553 
sdesc_t
* 
sd
;

555 
lock_mode_t
 
lmode
 = 
IX
;

556 i‡(
bIgn‹eLocks
Ë
lmode
 = 
NL
;

558 
	`W_DO
–
dú
->
	`ac˚ss
(
fid
, 
sd
, 
lmode
) );

560 
	`DBG
–<< "¸óã i¿fid " << 
fid
 << " d©a.sizê" << 
d©a
.
	`size
());

562 
	`W_DO
(
fi
->
	`¸óã_mrbt_ªc
(
fid
, 
Àn_höt
, 
hdr
, 
d©a
, *
sd
, 
√w_rid
, 
bIgn‹eLocks
));

567  
RCOK
;

568 
	}
}

573 
rc_t


574 
	gss_m
::
	$_¸óã_mrbt_ªc_ö_∑ge
(c⁄° 
°id_t
& 
fid
, 
fûe_p
& 
∑ge
, c⁄° 
vec_t
& 
hdr
, 
smsize_t
 
Àn_höt
,

575 c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
, 
boﬁ
& 
•a˚_found
,

576 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

578 
	`FUNC
(
ss_m
::
_¸óã_mrbt_ªc_ö_∑ge
);

579 
sdesc_t
* 
sd
;

581 
lock_mode_t
 
lmode
 = 
IX
;

582 i‡(
bIgn‹eLocks
Ë
lmode
 = 
NL
;

584 
	`W_DO
–
dú
->
	`ac˚ss
(
fid
, 
sd
, 
lmode
) );

586 
	`DBG
–<< "¸óã i¿fid " << 
fid
 << " i¿∑gê" << 
∑ge
.
	`pid
(Ë<< " d©a.sizê" << 
d©a
.
	`size
());

588 
	`W_DO
–
fi
->
	`¸óã_mrbt_ªc_ö_giví_∑ge
(
Àn_höt
, *
sd
, 
hdr
, 
d©a
, 
√w_rid
, 
∑ge
, 
•a˚_found
, 
bIgn‹eL©ches
) );

590  
RCOK
;

591 
	}
}

596 
rc_t


597 
	gss_m
::
	$_föd_∑ge_™d_¸óã_mrbt_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
Õid_t
& 
Àaf
, c⁄° 
vec_t
& 
hdr
,

598 
smsize_t
 
Àn_höt
, c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
,

599 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

601 
	`FUNC
(
ss_m
::
_föd_∑ge_™d_¸óã_mrbt_ªc
);

602 
sdesc_t
* 
sd_hóp
;

603 
sdesc_t
* 
sd_ödex
;

605 
lock_mode_t
 
lmode
 = 
IX
;

606 i‡(
bIgn‹eLocks
Ë
lmode
 = 
NL
;

608 
	`W_DO
–
dú
->
	`ac˚ss
(
fid
, 
sd_hóp
, 
lmode
) );

609 
	`W_DO
–
dú
->
	`ac˚ss
(
Àaf
.
_°id
, 
sd_ödex
, 
lmode
) );

611 
	`DBG
–<< "¸óã i¿fid " << 
fid
 << " d©a.sizê" << 
d©a
.
	`size
());

613 i‡(
sd_ödex
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

614 
sd_ödex
->
	`söfo
().
¡y≥
) {

615 
t_mrbåì_l
:

616 
t_uni_mrbåì_l
:

618 
	`W_DO
–
fi
->
	`¸óã_mrbt_ªc_l
(
Àaf
, *
sd_hóp
, 
hdr
, 
d©a
, 
Àn_höt
, 
√w_rid
, 
bIgn‹eL©ches
) );

621 
t_mrbåì_p
:

622 
t_uni_mrbåì_p
:

624 
	`W_DO
–
fi
->
	`¸óã_mrbt_ªc_p
(
Àaf
, *
sd_hóp
, 
hdr
, 
d©a
, 
Àn_höt
, 
√w_rid
, 
bIgn‹eL©ches
) );

628  
	`RC
(
eBADNDXTYPE
);

631  
RCOK
;

632 
	}
}

637 
rc_t


638 
	gss_m
::
	$_de°roy_mrbt_ªc
(c⁄° 
rid_t
& 
rid
,

639 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches


642 
	`DBG
(<<"_de°roy_ª¯" << 
rid
);

643 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
,

645 0, 0, 0, 
bIgn‹eLocks
));

646 
	`W_DO
(
fi
->
	`de°roy_ªc
(
rid
, 
bIgn‹eL©ches
));

647  
RCOK
;

648 
	}
}

653 
rc_t


654 
	gss_m
::
	$_upd©e_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

655 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

657 i‡(!
bIgn‹eLocks
Ë
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

658 
	`W_DO
(
fi
->
	`upd©e_ªc
(
rid
, 
°¨t
, 
d©a
, 
bIgn‹eL©ches
));

659  
RCOK
;

660 
	}
}

665 
rc_t


666 
	gss_m
::
	$_upd©e_mrbt_ªc_hdr
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
,

667 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

669 i‡(!
bIgn‹eLocks
) {

670 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

672 
	`W_DO
(
fi
->
	`•li˚_hdr
(
rid
, 
	`u4i
(
°¨t
), 
hdr
.
	`size
(), hdr, 
bIgn‹eL©ches
));

673  
RCOK
;

674 
	}
}

679 
rc_t


680 
	gss_m
::
	$_≠≥nd_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
,

681 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

683 
sdesc_t
* 
sd
;

684 
lock_mode_t
 
lmode
 = 
IX
;

685 i‡(
bIgn‹eLocks
Ë
lmode
 = 
NL
;

686 
	`W_DO
–
dú
->
	`ac˚ss
(
rid
.
	`°id
(), 
sd
, 
lmode
) );

687 i‡(!
bIgn‹eLocks
) {

688 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

690 
	`W_DO
(
fi
->
	`≠≥nd_mrbt_ªc
(
rid
, 
d©a
, *
sd
, 
bIgn‹eL©ches
));

691  
RCOK
;

692 
	}
}

697 
rc_t


698 
	gss_m
::
	$_åunˇã_mrbt_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
, 
boﬁ
& 
should_f‹w¨d
,

699 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
)

701 i‡(!
bIgn‹eLocks
) {

702 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

704 
	`W_DO
(
fi
->
	`åunˇã_mrbt_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
, 
bIgn‹eL©ches
));

705  
RCOK
;

706 
	}
}

712 
rc_t


713 
	gss_m
::
	$_£t_°‹e_¥›îty
(

714 
°id_t
 
°id
,

715 
°‹e_¥›îty_t
 
¥›îty
)

722 i‡(
¥›îty
 & 
°_lﬂd_fûe
) {

723  
	`RC
(
eBADSTOREFLAGS
);

732 
°‹e_Êag_t
 
√wÊags
 = 
	`_make_°‹e_Êag
(
¥›îty
);

733 i‡(
√wÊags
 =
°_tmp
) {

734  
	`RC
(
eBADSTOREFLAGS
);

740 
°‹e_Êag_t
 
ﬁdÊags
 = 
°_bad
;

742 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
°id
, 
ﬁdÊags
) );

744 i‡(
ﬁdÊags
 =
√wÊags
) {

745  
RCOK
;

749 
sdesc_t
* 
sd
;

750 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
) );

752 i‡(
√wÊags
 =
°_ªguœr
) {

766 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
°id
, 
√wÊags
) );

768 i‡(
sd
->
	`œrge_°id
()) {

769 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
sd
->
	`œrge_°id
(), 
√wÊags
) ) ;

771 } i‡(
√wÊags
 =
°_ö£π_fûe
) {

773 i‡(
sd
->
	`söfo
().
°y≥
 !
t_fûe
) {

774  
	`RC
(
eBADSTOREFLAGS
);

777 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
°id
, 
√wÊags
) );

779 i‡(
sd
->
	`œrge_°id
()) {

780 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
sd
->
	`œrge_°id
(), 
√wÊags
) );

783 
	`W_FATAL
(
eINTERNAL
);

786  
RCOK
;

787 
	}
}

792 
rc_t


793 
	gss_m
::
	$_gë_°‹e_¥›îty
(

794 
°id_t
 
°id
,

795 
°‹e_¥›îty_t
& 
¥›îty
)

797 
°‹e_Êag_t
 
Êags
 = 
°_bad
;

798 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
°id
, 
Êags
) );

800 i‡(
Êags
 & 
°_ªguœr
) {

801 
	`w_as£π2
((
Êags
 & (
°_tmp
|
°_lﬂd_fûe
|
°_ö£π_fûe
)) == 0);

802 
¥›îty
 = 
t_ªguœr
;

803  
RCOK
;

805 i‡(
Êags
 & 
°_lﬂd_fûe
) {

809 
	`w_as£π2
((
Êags
 & (
°_ö£π_fûe
|
°_ªguœr
)) == 0);

810 
	`w_as£π2
((
Êags
 & 
°_tmp
) == st_tmp);

811 
¥›îty
 = 
t_lﬂd_fûe
;

812  
RCOK
;

815 i‡(
Êags
 & 
°_ö£π_fûe
) {

822 
	`w_as£π2
((
Êags
 & (
°_lﬂd_fûe
|
°_ªguœr
)) == 0);

823 
	`w_as£π2
((
Êags
 & 
°_tmp
) == 0);

824 
¥›îty
 = 
t_ö£π_fûe
;

825  
RCOK
;

828 i‡(
Êags
 & 
°_tmp
) {

829 
¥›îty
 = 
t_ãmp‹¨y
;

831 
	`W_FATAL
(
eINTERNAL
);

834  
RCOK
;

835 
	}
}

841 
rc_t


842 
	gss_m
::
	$_¸óã_fûe
(
vid_t
 
vid
, 
°id_t
& 
fid
,

843 
°‹e_¥›îty_t
 
¥›îty
,

844 
shpid_t
 
˛u°î_höt


847 
	`FUNC
(
ss_m
::
_¸óã_fûe
);

848 
	`DBG
–<< "Aâem±ögÅÿ¸óãá fûê⁄ vﬁumê" << 
vid
.
vﬁ
 );

850 
°‹e_Êag_t
 
°_Êag
 = 
	`_make_°‹e_Êag
(
¥›îty
);

851 
exäum_t
 
fú°_exã¡
 = 
	`exäum_t
(
˛u°î_höt
? clu°î_höà/ 
ss_m
::
ext_sz
 : 0);

853 
	`DBGTHRD
(<<"abouàtÿ¸óãá st‹ê°¨tögábouàexã¡ " << 
fú°_exã¡
);

854 
	`W_DO
–
io
->
	`¸óã_°‹e
(
vid
, 100 , 
°_Êag
, 
fid
, 
fú°_exã¡
) );

856 
	`DBGTHRD
(<<"¸óãd fú° st‹ê" << 
fid
 << "Çow create 2nd...");

865 
°id_t
 
lg_°id
;

866 
w_rc_t
 
rc

io
->
	`¸óã_°‹e
(
vid
, 100 ,

867 
°_Êag
, 
lg_°id
, 
fú°_exã¡
, 1);

868 if(
rc
.
	`is_îr‹
()) {

871 
	`DBGTHRD
(<<"2nd cª©êÁûed; de°royög fú°" << 
fid
);

872 
	`W_DO
–
io
->
	`de°roy_°‹e
(
fid
) );

873  
rc
;

876 
	`DBGTHRD
(<<"¸óãd 2nd st‹ê(f‹ÜgÑecsË" << 
lg_°id
);

884 
	`W_DO
(
lm
->
	`lock
(
fid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

886 
	`DBGTHRD
(<<"locked " << 
fid
);

888 
Õid_t
 
fú°
;

889 
	`W_DO
–
fi
->
	`¸óã
(
fid
, 
fú°
) );

890 
	`DBGTHRD
(<<"locked &¸óãd --Öuàö st‹êdúe˘‹y: " << 
fid
);

892 
söfo_s
 
	`söfo
(
fid
.
°‹e
, 
t_fûe
, 100 ,

893 
t_bad_ndx_t
, 
t_cc_n⁄e
 , 
fú°
.
∑ge
, 0, 0);

894 
söfo
.
	`£t_œrge_°‹e
(
lg_°id
.
°‹e
);

895 
	`W_DO
–
dú
->
	`ö£π
(
fid
, 
söfo
) );

897 
	`DBGTHRD
(<<"ö£πed " << 
fid
.
°‹e
);

899  
RCOK
;

900 
	}
}

903 
	~"hi°o.h
"

908 
rc_t


909 
	gss_m
::
	$_de°roy_fûe
(c⁄° 
°id_t
& 
fid
)

911 
	`FUNC
(
ss_m
::
_de°roy_fûe
);

912 #i‡
FILE_LOG_COMMENT_ON


914 
w_o°r°ªam
 
s
;

915 
s
 << "_de°roy_fûê" << 
fid
;

916 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

920 
sdesc_t
* 
sd
;

922 
	`DBGTHRD
(<<"w™àtÿde°roy st‹ê" << 
fid
);

923 
	`W_DO
–
dú
->
	`ac˚ss
(
fid
, 
sd
, 
EX
) );

925 i‡(
sd
->
	`söfo
().
°y≥
 !
t_fûe
Ë 
	`RC
(
eBADSTORETYPE
);

927 
°‹e_Êag_t
 
°‹e_Êags
;

928 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
fid
, 
°‹e_Êags
) );

930 
	`DBGTHRD
(<<"de°royög st‹ê" << 
fid
 << " st‹e_Êag†" << 
°‹e_Êags
);

931 
	`W_DO
–
io
->
	`de°roy_°‹e
(
fid
) );

936 
hi°oid_t
::
	`de°royed_°‹e
(
fid
, 
sd
);

938 
	`DBGTHRD
(<<"de°royög st‹ê" << 
sd
->
	`œrge_°id
());

940 
	`W_DO
–
io
->
	`de°roy_°‹e
(
sd
->
	`œrge_°id
()) );

942 i‡(
°‹e_Êags
 & 
°_tmp
) {

945 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
fid
) );

946 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
sd
->
	`œrge_°id
()) );

949 
	`DBGTHRD
(<<"abouàtÿªmovêdúe˘‹yÉ¡ry " << 
fid
);

950 
	`W_DO
–
dú
->
	`ªmove
(
fid
) );

951 
	`DBGTHRD
(<<"ªmoved dúe˘‹yÉ¡ry " << 
fid
);

952  
RCOK
;

953 
	}
}

960 
rc_t


961 
	gss_m
::
	$_de°roy_n_sw≠_fûe
(c⁄° 
°id_t
& 
ﬁd_fid
, c⁄° stid_t& 
√w_fid
)

963 
sdesc_t
 *
sd1
, *
sd2
;

965 
	`W_DO
–
dú
->
	`ac˚ss
(
ﬁd_fid
, 
sd1
, 
EX
) );

966 i‡(
sd1
->
	`söfo
().
°y≥
 !
t_fûe
Ë 
	`RC
(
eBADSTORETYPE
);

968 
	`W_DO
–
dú
->
	`ac˚ss
(
√w_fid
, 
sd2
, 
EX
) );

969 i‡(
sd2
->
	`söfo
().
°y≥
 !
t_fûe
Ë 
	`RC
(
eBADSTORETYPE
);

971 
°‹e_Êag_t
 
ﬁd_°‹e_Êags
 = 
°_bad
;

972 
°‹e_Êag_t
 
√w_°‹e_Êags
 = 
°_bad
;

973 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
ﬁd_fid
, 
ﬁd_°‹e_Êags
) );

974 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
√w_fid
, 
√w_°‹e_Êags
) );

977 
	`W_DO
–
io
->
	`de°roy_°‹e
(
ﬁd_fid
) );

978 
hi°oid_t
::
	`de°royed_°‹e
(
ﬁd_fid
, 
sd1
);

981 
	`W_DO
–
io
->
	`de°roy_°‹e
(
sd2
->
	`œrge_°id
()) );

983 i‡(
ﬁd_°‹e_Êags
 & 
°_tmp
) {

986 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
ﬁd_fid
) );

989 i‡(
√w_°‹e_Êags
 & 
°_tmp
) {

992 
	`W_IGNORE
–
bf
->
	`disˇrd_°‹e
(
sd2
->
	`œrge_°id
()) );

996 
	`W_DO
–
dú
->
	`ªmove_n_sw≠
(
ﬁd_fid
, 
√w_fid
) );

998  
RCOK
;

999 
	}
}

1005 
rc_t


1006 
	gss_m
::
	$_¸óã_ªc
(c⁄° 
°id_t
& 
fid
, c⁄° 
vec_t
& 
hdr
, 
smsize_t
 
Àn_höt
,

1007 c⁄° 
vec_t
& 
d©a
, 
rid_t
& 
√w_rid
, c⁄° 
boﬁ
 
bIgn‹eLocks


1010 
	`FUNC
(
ss_m
::
_¸óã_ªc
);

1011 
sdesc_t
* 
sd
;

1013 
lock_mode_t
 
lmode
 = 
IX
;

1014 i‡(
bIgn‹eLocks
Ë
lmode
 = 
NL
;

1016 
	`W_DO
–
dú
->
	`ac˚ss
(
fid
, 
sd
, 
lmode
) );

1018 
	`DBG
–<< "¸óã i¿fid " << 
fid
 << " d©a.sizê" << 
d©a
.
	`size
());

1020 
	`W_DO
(
fi
->
	`¸óã_ªc
(
fid
, 
Àn_höt
, 
hdr
, 
d©a
, *
sd
, 
√w_rid
, 
bIgn‹eLocks
));

1025  
RCOK
;

1026 
	}
}

1031 
rc_t


1032 
	gss_m
::
	$_de°roy_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
boﬁ
 
bIgn‹eLocks
)

1034 
	`DBG
(<<"_de°roy_ª¯" << 
rid
);

1035 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
,

1037 0, 0, 0, 
bIgn‹eLocks
));

1038 
	`W_DO
(
fi
->
	`de°roy_ªc
(
rid
));

1039  
RCOK
;

1040 
	}
}

1045 
rc_t


1046 
	gss_m
::
	$_upd©e_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
d©a
,

1047 c⁄° 
boﬁ
 
bIgn‹eLocks


1050 i‡(!
bIgn‹eLocks
Ë
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1051 
	`W_DO
(
fi
->
	`upd©e_ªc
(
rid
, 
°¨t
, 
d©a
, 
bIgn‹eLocks
));

1052  
RCOK
;

1053 
	}
}

1058 
rc_t


1059 
	gss_m
::
	$_upd©e_ªc_hdr
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
°¨t
, c⁄° 
vec_t
& 
hdr
,

1060 c⁄° 
boﬁ
 
bIgn‹eLocks


1063 i‡(!
bIgn‹eLocks
) {

1064 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1066 
	`W_DO
(
fi
->
	`•li˚_hdr
(
rid
, 
	`u4i
(
°¨t
), 
hdr
.
	`size
(), hdr));

1067  
RCOK
;

1068 
	}
}

1073 
rc_t


1074 
	gss_m
::
	$_≠≥nd_ªc
(c⁄° 
rid_t
& 
rid
, c⁄° 
vec_t
& 
d©a
)

1076 
sdesc_t
* 
sd
;

1077 
	`W_DO
–
dú
->
	`ac˚ss
(
rid
.
	`°id
(), 
sd
, 
IX
) );

1078 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1079 
	`W_DO
(
fi
->
	`≠≥nd_ªc
(
rid
, 
d©a
, *
sd
));

1080  
RCOK
;

1081 
	}
}

1086 
rc_t


1087 
	gss_m
::
	$_åunˇã_ªc
(c⁄° 
rid_t
& 
rid
, 
smsize_t
 
amou¡
, 
boﬁ
& 
should_f‹w¨d
)

1089 
	`W_DO
(
lm
->
	`lock
(
rid
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1090 
	`W_DO
(
fi
->
	`åunˇã_ªc
(
rid
, 
amou¡
, 
should_f‹w¨d
));

1091  
RCOK
;

1092 
	}
}

	@src/sm/smindex.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SMINDEX_C


	)

59 
	~"sm_öt_4.h
"

60 
	~"sm_du_°©s.h
"

61 
	~"sm.h
"

63 
	~"ønges_p.h
"

64 
	~"båì_œtch_m™agî.h
"

65 #ifde‡
SM_HISTOGRAM


66 
	~"d©a_ac˚ss_hi°ogøm.h
"

70 
båì_œtch_m™agî
 
	gbåì_œtches
;

72 #ifde‡
SM_HISTOGRAM


74 
	gm≠
< 
	g°id_t
, 
	gd©a_ac˚ss_hi°ogøm
* > 
	gd©a_ac˚s£s
;

87 
rc_t


88 
	gss_m
::
	$¸óã_ödex
(

89 
vid_t
 
vid
,

90 
ndx_t
 
¡y≥
,

91 
°‹e_¥›îty_t
 
¥›îty
,

92 c⁄° * 
key_desc
,

93 
°id_t
& 
°id


96  
	`¸óã_ödex
(
vid
, 
¡y≥
, 
¥›îty
, 
key_desc
, 
t_cc_kvl
, 
°id
);

97 
	}
}

99 
rc_t


100 
	gss_m
::
	$¸óã_ödex
(

101 
vid_t
 
vid
,

102 
ndx_t
 
¡y≥
,

103 
°‹e_¥›îty_t
 
¥›îty
,

104 c⁄° * 
key_desc
,

105 
c⁄cuºícy_t
 
cc
,

106 
°id_t
& 
°id


109 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

110 if(
¥›îty
 =
t_ãmp‹¨y
) {

111  
	`RC
(
eBADSTOREFLAGS
);

113 
	`W_DO
(
	`_¸óã_ödex
(
vid
, 
¡y≥
, 
¥›îty
, 
key_desc
, 
cc
, 
°id
));

116  
RCOK
;

117 
	}
}

119 
rc_t


120 
	gss_m
::
	$¸óã_md_ödex
(

121 
vid_t
 
vid
,

122 
ndx_t
 
¡y≥
,

123 
°‹e_¥›îty_t
 
¥›îty
,

124 
°id_t
& 
°id
,

125 
öt2_t
 
dim


128 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_md_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

129 
	`W_DO
(
	`_¸óã_md_ödex
(
vid
, 
¡y≥
, 
¥›îty
,

130 
°id
, 
dim
));

131  
RCOK
;

132 
	}
}

138 
rc_t


139 
	gss_m
::
	$de°roy_ödex
(c⁄° 
°id_t
& 
iid
)

141 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

142 
	`W_DO
–
	`_de°roy_ödex
(
iid
) );

143  
RCOK
;

144 
	}
}

146 
rc_t


147 
	gss_m
::
	$de°roy_md_ödex
(c⁄° 
°id_t
& 
iid
)

149 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_md_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

150 
	`W_DO
–
	`_de°roy_md_ödex
(
iid
) );

151  
RCOK
;

152 
	}
}

158 
rc_t


159 
	gss_m
::
	$bulkld_ödex
(

160 c⁄° 
°id_t
& 
°id
,

161 
n§cs
,

162 c⁄° 
°id_t
* 
sour˚
,

163 
sm_du_°©s_t
& 
_°©s
,

164 
boﬁ
 
s‹t_du∂iˇãs
,

165 
boﬁ
 
Àxify_keys


168 
	`SM_PROLOGUE_RC
(
ss_m
::
bulkld_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

169 
	`W_DO
(
	`_bulkld_ödex
(
°id
, 
n§cs
, 
sour˚
, 
_°©s
, 
s‹t_du∂iˇãs
, 
Àxify_keys
) );

170  
RCOK
;

171 
	}
}

173 
w_rc_t
 
	gss_m
::
	$bulkld_ödex
(

174 c⁄° 
°id_t
 &
°id
,

175 c⁄° 
°id_t
 &
sour˚
,

176 
sm_du_°©s_t
 &
_°©s
,

177 
boﬁ
 
s‹t_du∂iˇãs
,

178 
boﬁ
 
Àxify_keys


181  
	`bulkld_ödex
(
°id
, 1, &
sour˚
, 
_°©s
,

182 
s‹t_du∂iˇãs
, 
Àxify_keys
);

183 
	}
}

185 
rc_t


186 
	gss_m
::
	$bulkld_md_ödex
(

187 c⁄° 
°id_t
& 
°id
,

188 
n§cs
,

189 c⁄° 
°id_t
* 
sour˚
,

190 
sm_du_°©s_t
& 
_°©s
,

191 
öt2_t
 
hff
,

192 
öt2_t
 
hef
,

193 
nbox_t
* 
univî£
)

195 
	`SM_PROLOGUE_RC
(
ss_m
::
bulkld_md_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

196 
	`W_DO
(
	`_bulkld_md_ödex
(
°id
, 
n§cs
, 
sour˚
, 
_°©s
, 
hff
, 
hef
, 
univî£
));

197  
RCOK
;

198 
	}
}

200 
w_rc_t


201 
	gss_m
::
	$bulkld_md_ödex
(

202 c⁄° 
°id_t
 &
°id
,

203 c⁄° 
°id_t
 &
sour˚
,

204 
sm_du_°©s_t
 &
_°©s
,

205 
öt2_t
 
hff
,

206 
öt2_t
 
hef
,

207 
nbox_t
 *
univî£


210  
	`bulkld_md_ödex
(
°id
, 1, &
sour˚
, 
_°©s
, 
hff
, 
hef
, 
univî£
);

211 
	}
}

213 
rc_t


214 
	gss_m
::
	$bulkld_ödex
(

215 c⁄° 
°id_t
& 
°id
,

216 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

217 
sm_du_°©s_t
& 
_°©s
)

219 
	`SM_PROLOGUE_RC
(
ss_m
::
bulkld_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

220 
	`W_DO
(
	`_bulkld_ödex
(
°id
, 
s‹ãd_°ªam
, 
_°©s
) );

221 
	`DBG
(<<"bulkld_ödex " <<
°id
<<"Ñeturning RCOK");

222  
RCOK
;

223 
	}
}

225 
rc_t


226 
	gss_m
::
	$bulkld_md_ödex
(

227 c⁄° 
°id_t
& 
°id
,

228 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

229 
sm_du_°©s_t
& 
_°©s
,

230 
öt2_t
 
hff
,

231 
öt2_t
 
hef
,

232 
nbox_t
* 
univî£
)

234 
	`SM_PROLOGUE_RC
(
ss_m
::
bulkld_md_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

235 
	`W_DO
(
	`_bulkld_md_ödex
(
°id
, 
s‹ãd_°ªam
, 
_°©s
, 
hff
, 
hef
, 
univî£
));

236  
RCOK
;

237 
	}
}

242 
rc_t


243 
	gss_m
::
	$¥öt_ödex
(
°id_t
 
°id
)

245 
	`SM_PROLOGUE_RC
(
ss_m
::
¥öt_ödex
, 
ö_x˘
, 
ªad_⁄ly
, 0);

246 
	`W_DO
(
	`_¥öt_ödex
(
°id
));

247  
RCOK
;

248 
	}
}

250 
rc_t


251 
	gss_m
::
	$¥öt_md_ödex
(
°id_t
 
°id
)

253 
	`SM_PROLOGUE_RC
(
ss_m
::
¥öt_ödex
, 
ö_x˘
, 
ªad_⁄ly
, 0);

254 
	`W_DO
(
	`_¥öt_md_ödex
(
°id
));

255  
RCOK
;

256 
	}
}

261 
rc_t


262 
	gss_m
::
	$¸óã_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° vec_t& 
ñ
,

263 c⁄° 
boﬁ
 
bIgn‹eLocks
)

265 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

266 
	`W_DO
(
	`_¸óã_assoc
(
°id
, 
key
, 
ñ
, 
bIgn‹eLocks
));

267  
RCOK
;

268 
	}
}

273 
rc_t


274 
	gss_m
::
	$de°roy_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° vec_t& 
ñ
,

275 c⁄° 
boﬁ
 
bIgn‹eLocks
)

277 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

278 
	`W_DO
(
	`_de°roy_assoc
(
°id
, 
key
, 
ñ
, 
bIgn‹eLocks
));

279  
RCOK
;

280 
	}
}

287 
rc_t


288 
	gss_m
::
	$de°roy_Æl_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, & 
num
)

290 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

291 
	`W_DO
(
	`_de°roy_Æl_assoc
(
°id
, 
key
, 
num
));

292  
RCOK
;

293 
	}
}

298 
rc_t


299 
	gss_m
::
	$föd_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
,

300 * 
ñ
, 
smsize_t
& 
ñí
, 
boﬁ
& 
found
,

301 c⁄° 
boﬁ
 
bIgn‹eLocks
)

303 
	`SM_PROLOGUE_RC
(
ss_m
::
föd_assoc
, 
ö_x˘
, 
ªad_⁄ly
, 0);

304 
	`W_DO
(
	`_föd_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
, 
bIgn‹eLocks
));

305  
RCOK
;

306 
	}
}

311 
rc_t


312 
	gss_m
::
	$¸óã_md_assoc
(
°id_t
 
°id
, c⁄° 
nbox_t
& 
key
, c⁄° 
vec_t
& 
ñ
)

314 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_md_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

315 
	`W_DO
(
	`_¸óã_md_assoc
(
°id
, 
key
, 
ñ
));

316  
RCOK
;

317 
	}
}

323 
rc_t


324 
	gss_m
::
	$föd_md_assoc
(
°id_t
 
°id
, c⁄° 
nbox_t
& 
key
,

325 * 
ñ
, 
smsize_t
& 
ñí
, 
boﬁ
& 
found
)

327 
	`SM_PROLOGUE_RC
(
ss_m
::
föd_assoc
, 
ö_x˘
, 
ªad_⁄ly
, 0);

328 
	`W_DO
(
	`_föd_md_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
));

329  
RCOK
;

330 
	}
}

336 
rc_t


337 
	gss_m
::
	$de°roy_md_assoc
(
°id_t
 
°id
, c⁄° 
nbox_t
& 
key
, c⁄° 
vec_t
& 
ñ
)

339 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_md_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

340 
	`W_DO
(
	`_de°roy_md_assoc
(
°id
, 
key
, 
ñ
));

341  
RCOK
;

342 
	}
}

348 
rc_t


349 
	gss_m
::
	$døw_πªe
(c⁄° 
°id_t
& 
°id
, 
o°ªam
 &
s
)

351 
	`SM_PROLOGUE_RC
(
ss_m
::
døw_πªe
, 
ö_x˘
, 
ªad_⁄ly
, 0);

352 
	`W_DO
(
	`_døw_πªe
(
°id
, 
s
));

353  
RCOK
;

354 
	}
}

359 
rc_t


360 
	gss_m
::
	$πªe_°©s
(c⁄° 
°id_t
& 
°id
, 
πªe_°©s_t
& 
°©
,

361 
uöt2_t
 
size
, uöt2_t* 
ovp
, 
boﬁ
 
audô
)

363 
	`SM_PROLOGUE_RC
(
ss_m
::
πªe_°©s
, 
ö_x˘
, 
ªad_⁄ly
, 0);

364 
	`W_DO
(
	`_πªe_°©s
(
°id
, 
°©
, 
size
, 
ovp
, 
audô
));

365  
RCOK
;

366 
	}
}

370 #i‡
VOLUME_OPS_USE_OCC


371 
occ_rwlock
 
	tsm_vﬁ_rwlock_t
;

372 
	gocc_rwlock
::
	tocc_æock
 
	tsm_vﬁ_æock_t
;

373 
	gocc_rwlock
::
	tocc_wlock
 
	tsm_vﬁ_wlock_t
;

374 
	#SM_VOL_WLOCK
(
ba£
Ë(ba£).
	`wrôe_lock
()

	)

375 
	#SM_VOL_RLOCK
(
ba£
Ë(ba£).
	`ªad_lock
()

	)

377 
queue_ba£d_lock_t
 
	tsm_vﬁ_rwlock_t
;

378 
queue_ba£d_lock_t
 
	tsm_vﬁ_æock_t
;

379 
queue_ba£d_lock_t
 
	tsm_vﬁ_wlock_t
;

380 
	#SM_VOL_WLOCK
(
ba£
Ë&(ba£)

	)

381 
	#SM_VOL_RLOCK
(
ba£
Ë&(ba£)

	)

384 
sm_vﬁ_rwlock_t
 
	g_begö_x˘_muãx
;

389 
rc_t
 
	gss_m
::
	$¸óã_mr_ödex
(
vid_t
 
vid
,

390 
ndx_t
 
¡y≥
,

391 
°‹e_¥›îty_t
 
¥›îty
,

392 c⁄° * 
key_desc
,

393 
c⁄cuºícy_t
 
cc
,

394 
°id_t
& 
°id
,

395 c⁄° 
boﬁ
 
bIgn‹eL©ches


398 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mr_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

399 if(
¥›îty
 =
t_ãmp‹¨y
) {

400  
	`RC
(
eBADSTOREFLAGS
);

402 
	`W_DO
(
	`_¸óã_mr_ödex
(
vid
, 
¡y≥
, 
¥›îty
, 
key_desc
, 
cc
, 
°id
, 
bIgn‹eL©ches
));

403  
RCOK
;

404 
	}
}

409 
rc_t
 
	gss_m
::
	$¸óã_mr_ödex
(
vid_t
 
vid
,

410 
ndx_t
 
¡y≥
,

411 
°‹e_¥›îty_t
 
¥›îty
,

412 c⁄° * 
key_desc
,

413 
c⁄cuºícy_t
 
cc
,

414 
°id_t
& 
°id
,

415 
key_ønges_m≠
& 
ønges
,

416 c⁄° 
boﬁ
 
bIgn‹eL©ches


419 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mr_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

420 if(
¥›îty
 =
t_ãmp‹¨y
) {

421  
	`RC
(
eBADSTOREFLAGS
);

423 
	`W_DO
(
	`_¸óã_mr_ödex
(
vid
, 
¡y≥
, 
¥›îty
, 
key_desc
, 
cc
, 
°id
, 
ønges
, 
bIgn‹eL©ches
));

424  
RCOK
;

425 
	}
}

430 
rc_t
 
	gss_m
::
	$de°roy_mr_ödex
(c⁄° 
°id_t
& 
iid
)

432 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_mr_ödex
, 
ö_x˘
, 
ªad_wrôe
, 0);

433 
	`W_DO
(
	`_de°roy_mr_ödex
(
iid
));

434  
RCOK
;

435 
	}
}

440 
rc_t
 
	gss_m
::
	$¥öt_mr_ödex
(
°id_t
 
°id
)

442 
	`SM_PROLOGUE_RC
(
ss_m
::
¥öt_mr_ödex
, 
ö_x˘
, 
ªad_⁄ly
, 0);

443 
	`W_DO
(
	`_¥öt_mr_ödex
(
°id
));

444  
RCOK
;

445 
	}
}

450 
rc_t
 
	gss_m
::
	$¸óã_mr_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, 
ñ_fûÀr
& 
ef
,

451 c⁄° 
boﬁ
 
bIgn‹eLocks
,

452 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

453 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
,

454 c⁄° 
Õid_t
& 
roŸ
)

456 
	`SM_PROLOGUE_RC
(
ss_m
::
¸óã_mr_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

457 
	`W_DO
(
	`_¸óã_mr_assoc
(
°id
, 
key
, 
ef
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
, 
roŸ
));

458  
RCOK
;

459 
	}
}

464 
rc_t
 
	gss_m
::
	$de°roy_mr_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° vec_t& 
ñ
,

465 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

466 c⁄° 
Õid_t
& 
roŸ
)

468 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_mr_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

469 
	`W_DO
(
	`_de°roy_mr_assoc
(
°id
, 
key
, 
ñ
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
, 
roŸ
));

470  
RCOK
;

471 
	}
}

476 
rc_t
 
	gss_m
::
	$de°roy_mr_Æl_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, & 
num
,

477 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

478 c⁄° 
Õid_t
& 
roŸ
)

480 
	`SM_PROLOGUE_RC
(
ss_m
::
de°roy_mr_Æl_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

481 
	`W_DO
(
	`_de°roy_mr_Æl_assoc
(
°id
, 
key
, 
num
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
, 
roŸ
));

482  
RCOK
;

483 
	}
}

488 
rc_t
 
	gss_m
::
	$föd_mr_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
,

489 * 
ñ
, 
smsize_t
& 
ñí
, 
boﬁ
& 
found
,

490 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

491 c⁄° 
Õid_t
& 
roŸ
)

493 
	`SM_PROLOGUE_RC
(
ss_m
::
föd_mr_assoc
, 
ö_x˘
, 
ªad_⁄ly
, 0);

494 
	`W_DO
(
	`_föd_mr_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
, 
roŸ
));

495  
RCOK
;

496 
	}
}

501 
rc_t
 
	gss_m
::
	$upd©e_mr_assoc
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
,

502 c⁄° 
vec_t
& 
ﬁd_ñ
, c⁄° vec_t& 
√w_ñ
, 
boﬁ
& 
found
,

503 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

504 c⁄° 
Õid_t
& 
roŸ
)

506 
	`SM_PROLOGUE_RC
(
ss_m
::
upd©e_mr_assoc
, 
ö_x˘
, 
ªad_wrôe
, 0);

507 
	`W_DO
(
	`_upd©e_mr_assoc
(
°id
, 
key
, 
ﬁd_ñ
, 
√w_ñ
, 
found
, 
bIgn‹eLocks
, 
bIgn‹eL©ches
, 
roŸ
));

508  
RCOK
;

509 
	}
}

511 #ifde‡
SM_HISTOGRAM


515 
rc_t
 
	gss_m
::
	$de°roy_Æl_hi°ogøms
()

517 
	`SM_PROLOGUE_RC
(
ss_m
::
add_∑πôi⁄
, 
nŸ_ö_x˘
, 
ªad_wrôe
, 0);

518 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

519 
	`W_DO
(
	`_de°roy_Æl_hi°ogøms
());

520  
RCOK
;

521 
	}
}

527 
rc_t
 
	gss_m
::
	$gë_ønge_m≠
(
°id_t
 
°id
, 
key_ønges_m≠
*& 
øngem≠
)

529 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_ønge_m≠
, 
ö_x˘
, 
ªad_wrôe
, 0);

530 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_RLOCK
(
_begö_x˘_muãx
));

531 
	`W_DO
(
	`_gë_ønge_m≠
(
°id
, 
øngem≠
));

532  
RCOK
;

533 
	}
}

538 
rc_t
 
	gss_m
::
	$gë_°‹e_öfo
(
°id_t
 
°id
, 
söfo_s
& 
söfo
)

540 
	`SM_PROLOGUE_RC
(
ss_m
::
gë_°‹e_öfo
, 
ö_x˘
, 
ªad_⁄ly
, 0);

541 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_RLOCK
(
_begö_x˘_muãx
));

542 
	`W_DO
(
	`_gë_°‹e_öfo
(
°id
, 
söfo
));

543  
RCOK
;

544 
	}
}

549 
rc_t
 
	gss_m
::
	$make_equÆ_∑πôi⁄s
(
°id_t
 
°id
, c⁄° 
vec_t
& 
möKey
,

550 c⁄° 
vec_t
& 
maxKey
, 
uöt
 
numP¨ts
)

552 
	`SM_PROLOGUE_RC
(
ss_m
::
make_equÆ_∑πôi⁄s
, 
ö_x˘
, 
ªad_wrôe
, 0);

553 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

554 
	`W_DO
(
	`_make_equÆ_∑πôi⁄s
(
°id
, 
möKey
, 
maxKey
, 
numP¨ts
));

555  
RCOK
;

556 
	}
}

561 
rc_t
 
	gss_m
::
	$add_∑πôi⁄_öô
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

563 
	`SM_PROLOGUE_RC
(
ss_m
::
add_∑πôi⁄_öô
, 
ö_x˘
, 
ªad_wrôe
, 0);

564 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

565 
	`W_DO
(
	`_add_∑πôi⁄_öô
(
°id
, 
key
, 
bIgn‹eL©ches
));

566  
RCOK
;

567 
	}
}

572 
rc_t
 
	gss_m
::
	$add_∑πôi⁄
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° 
boﬁ
 
bIgn‹eL©ches
,

573 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

575 
	`SM_PROLOGUE_RC
(
ss_m
::
add_∑πôi⁄
, 
nŸ_ö_x˘
, 
ªad_wrôe
, 0);

576 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

577 
	`W_DO
(
	`_add_∑πôi⁄
(
°id
, 
key
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
));

578  
RCOK
;

579 
	}
}

584 
rc_t
 
	gss_m
::
	$dñëe_∑πôi⁄
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

586 
	`SM_PROLOGUE_RC
(
ss_m
::
dñëe_∑πôi⁄
, 
nŸ_ö_x˘
, 
ªad_wrôe
, 0);

587 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

588 
	`W_DO
(
	`_dñëe_∑πôi⁄
(
°id
, 
key
, 
bIgn‹eL©ches
));

589  
RCOK
;

590 
	}
}

595 
rc_t
 
	gss_m
::
	$dñëe_∑πôi⁄
(
°id_t
 
°id
, 
Õid_t
& 
roŸ
, c⁄° 
boﬁ
 
bIgn‹eL©ches
)

597 
	`SM_PROLOGUE_RC
(
ss_m
::
dñëe_∑πôi⁄
, 
nŸ_ö_x˘
, 
ªad_wrôe
, 0);

598 
	`CRITICAL_SECTION
(
cs
, 
	`SM_VOL_WLOCK
(
_begö_x˘_muãx
));

599 
	`W_DO
(
	`_dñëe_∑πôi⁄
(
°id
, 
roŸ
, 
bIgn‹eL©ches
));

600  
RCOK
;

601 
	}
}

606 
rc_t
 
	gss_m
::
	$_¸óã_mr_ödex
(
vid_t
 
vid
,

607 
ndx_t
 
¡y≥
,

608 
°‹e_¥›îty_t
 
¥›îty
,

609 c⁄° * 
key_desc
,

610 
c⁄cuºícy_t
 
cc
,

611 
°id_t
& 
°id
,

612 
boﬁ
 c⁄° 
bIgn‹eL©ches


615 
	`FUNC
(
ss_m
::
_¸óã_mr_ödex
);

617 
	`DBG
(<<" vid " << 
vid
);

618 
uöt4_t
 
cou¡
 = 
max_keycomp
;

619 
key_ty≥_s
 
kcomp
[
max_keycomp
];

620 
Õid_t
 
roŸ
;

621 
Õid_t
 
subroŸ
;

624 
	`W_DO
(
key_ty≥_s
::
	`∑r£_key_ty≥
(
key_desc
, 
cou¡
, 
kcomp
));

626 
	`DBG
(<<"vid " << 
vid
);

627 
	`W_DO
(
io
->
	`¸óã_°‹e
(
vid
, 100 , 
	`_make_°‹e_Êag
(
¥›îty
), 
°id
));

628 
	`DBG
(<<" stid " << 
°id
);

638 
	`W_DO
(
lm
->
	`lock
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

640 if–(
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

641 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

642 (
cc
 !
t_cc_im
)

643 Ë 
	`RC
(
eBADCCLEVEL
);

645 
¡y≥
) {

646 
t_mrbåì
:

647 
t_uni_mrbåì
:

648 
t_mrbåì_l
:

649 
t_uni_mrbåì_l
:

650 
t_mrbåì_p
:

651 
t_uni_mrbåì_p
:

655 
	`W_DO
–
bt
->
	`¸óã
(
°id
, 
subroŸ
, 
kcomp
[0].
com¥es£d
 !0, 
bIgn‹eL©ches
) );

658 
	`W_DO
–
ø
->
	`¸óã
(
°id
, 
roŸ
, 
subroŸ
) );

663  
	`RC
(
eBADNDXTYPE
);

665 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100 ,

666 
¡y≥
,

667 
cc
,

668 
roŸ
.
∑ge
,

669 
cou¡
, 
kcomp
);

670 
	`W_DO
(
dú
->
	`ö£π
(
°id
, 
söfo
));

672  
RCOK
;

673 
	}
}

678 
rc_t
 
	gss_m
::
	$_¸óã_mr_ödex
(
vid_t
 
vid
,

679 
ndx_t
 
¡y≥
,

680 
°‹e_¥›îty_t
 
¥›îty
,

681 c⁄° * 
key_desc
,

682 
c⁄cuºícy_t
 
cc
,

683 
°id_t
& 
°id
,

684 
key_ønges_m≠
& 
ønges
,

685 c⁄° 
boﬁ
 
bIgn‹eL©ches


688 
	`FUNC
(
ss_m
::
_¸óã_mr_ödex
);

690 
	`DBG
(<<" vid " << 
vid
);

691 
uöt4_t
 
cou¡
 = 
max_keycomp
;

692 
key_ty≥_s
 
kcomp
[
max_keycomp
];

693 
Õid_t
 
roŸ
;

695 
	`W_DO
(
key_ty≥_s
::
	`∑r£_key_ty≥
(
key_desc
, 
cou¡
, 
kcomp
));

697 
	`DBG
(<<"vid " << 
vid
);

698 
	`W_DO
(
io
->
	`¸óã_°‹e
(
vid
, 100 , 
	`_make_°‹e_Êag
(
¥›îty
), 
°id
));

699 
	`DBG
(<<" stid " << 
°id
);

709 
	`W_DO
(
lm
->
	`lock
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

711 if–(
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

712 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

713 (
cc
 !
t_cc_im
)

714 Ë 
	`RC
(
eBADCCLEVEL
);

717 
ve˘‹
<
Õid_t
> 
roŸs
;

718 
boﬁ
 
isCom¥es£d
 = 
kcomp
[0].
com¥es£d
 != 0;

719 
uöt
 
i
=0; i< 
ønges
.
	`gëNumP¨tôi⁄s
(); i++) {

720 
Õid_t
 
subroŸ
;

721 
	`W_DO
(
bt
->
	`¸óã
(
°id
, 
subroŸ
, 
isCom¥es£d
, 
bIgn‹eL©ches
));

722 
roŸs
.
	`push_back
(
subroŸ
);

726 
ve˘‹
<
cvec_t
*> 
keys
;

727 
	`as£π
(0);

729 
ve˘‹
<
cvec_t
*> 
ªÆ_keys
;

731 
uöt
 
i
=0; i< 
keys
.
	`size
(); i++) {

732 
cvec_t
* 
ªÆ_key
;

734 
ªÆ_keys
.
	`push_back
(
ªÆ_key
);

738 
¡y≥
) {

739 
t_mrbåì
:

740 
t_uni_mrbåì
:

741 
t_mrbåì_l
:

742 
t_uni_mrbåì_l
:

743 
t_mrbåì_p
:

744 
t_uni_mrbåì_p
:

747 
	`W_DO
–
ø
->
	`¸óã
(
°id
, 
roŸ
, 
ªÆ_keys
, 
roŸs
) );

752  
	`RC
(
eBADNDXTYPE
);

754 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100 ,

755 
¡y≥
,

756 
cc
,

757 
roŸ
.
∑ge
,

758 
cou¡
, 
kcomp
);

759 
	`W_DO
(
dú
->
	`ö£π
(
°id
, 
söfo
));

761  
RCOK
;

762 
	}
}

767 
rc_t
 
	gss_m
::
	$_de°roy_mr_ödex
(c⁄° 
°id_t
& 
iid
)

769 
sdesc_t
* 
sd
;

770 
	`W_DO
(
dú
->
	`ac˚ss
(
iid
, 
sd
, 
EX
));

772 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

773 
sd
->
	`söfo
().
¡y≥
) {

774 
t_mrbåì
:

775 
t_uni_mrbåì
:

776 
t_mrbåì_l
:

777 
t_uni_mrbåì_l
:

778 
t_mrbåì_p
:

779 
t_uni_mrbåì_p
:

781 
	`W_DO
(
io
->
	`de°roy_°‹e
(
iid
));

785  
	`RC
(
eBADNDXTYPE
);

788 
	`W_DO
(
dú
->
	`ªmove
(
iid
));

789  
RCOK
;

790 
	}
}

795 
rc_t
 
	gss_m
::
	$_¥öt_mr_ödex
(c⁄° 
°id_t
& 
°id
)

797 
sdesc_t
* 
sd
;

798 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
));

800 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

801 i‡(
sd
->
	`söfo
().
nkc
 > 1) {

803 
	`Ârötf
(
°dîr
, "multi-part keysáreÇot supported");

804  
	`RC
(
eNOTIMPLEMENTED
);

806 
s‹t‹dî
::
keyty≥
 
k
 = s‹t‹dî::
	`c⁄vît
(
sd
->
	`söfo
().
kc
);

807 
ve˘‹
<
Õid_t
> 
pidVec
;

808 
uöt
 
i
 = 0;

809 
cvec_t
 
°¨t_key
;

810 
cvec_t
* 
key
;

811 
cvec_t
 
íd_key
;

812 
vÆue
;

814 
sd
->
	`söfo
().
¡y≥
) {

815 
t_mrbåì
:

816 
t_uni_mrbåì
:

817 
t_mrbåì_l
:

818 
t_uni_mrbåì_l
:

819 
t_mrbåì_p
:

820 
t_uni_mrbåì_p
:

822 
sd
->
	`∑πôi⁄s
().
	`gëAŒP¨tôi⁄s
(
pidVec
);

823 
i
 = 0; i < 
pidVec
.
	`size
(); i++) {

824 
cout
 << "P¨tôi⁄ " << 
i
 << 
ídl
;

825 
bt
->
	`¥öt
(
pidVec
[
i
], 
k
);

826 
sd
->
	`∑πôi⁄s
().
	`gëBound¨õs
(
pidVec
[
i
], 
°¨t_key
, 
íd_key
);

827 if(
°¨t_key
.
	`size
() != 0) {

828 
	`W_DO
(
bt
->
	`_uns¸ambÀ_key
(
key
, 
°¨t_key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

829 
key
->
	`c›y_to
(&
vÆue
, (value));

830 
cout
 << "Sèπ Key wa†" << 
vÆue
 << 
ídl
;

833 
cout
 << "Sèπ Key wa†" << 0 << 
ídl
;

835 
cout
 << 
ídl
;

841  
	`RC
(
eBADNDXTYPE
);

844  
RCOK
;

845 
	}
}

850 
rc_t
 
	gss_m
::
	$_¸óã_mr_assoc
(c⁄° 
°id_t
& 
°id
,

851 c⁄° 
vec_t
& 
key
,

852 
ñ_fûÀr
& 
ef
,

853 c⁄° 
boﬁ
 
bIgn‹eLocks
,

854 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

855 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
,

856 c⁄° 
Õid_t
& 
roŸ
)

861 
lock_mode_t
 
ödex_mode
 = 
NL
;

864 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

867 i‡(
bIgn‹eLocks
) {

868 
cc
 = 
t_cc_n⁄e
;

869 
ödex_mode
 = 
NL
;

872 
x˘_t
* 
xd
 = 
	`x˘
();

873 i‡(
xd
) {

874 
lock_mode_t
 
lock_mode
;

875 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

877 i‡(
lock_mode
 =
EX
) {

878 
cc
 = 
t_cc_n⁄e
;

879 } i‡(
lock_mode
 =
IX
 ||Üock_modê>
SIX
) {

882 
ödex_mode
 = 
IX
;

888 
sdesc_t
* 
sd
;

889 
cvec_t
* 
ªÆ_key
;

890 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
));

892 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

893 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

895 
boﬁ
 
is_unique
 = 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì
 ||

896 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_l
 ||

897 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_p
;

899 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

901 
Õid_t
 
subroŸ
;

902 if(
roŸ
 !
Õid_t
::
nuŒ
) {

903 
subroŸ
 = 
roŸ
;

905 
subroŸ
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

908 
sd
->
	`söfo
().
¡y≥
) {

909 
t_bad_ndx_t
:

910  
	`RC
(
eBADNDXTYPE
);

912 
t_mrbåì
:

913 
t_uni_mrbåì
:

915 
	`W_DO
(
bt
->
	`mr_ö£π
(
subroŸ
,

916 
is_unique
,

917 
cc
,

918 *
ªÆ_key
, 
ef
.
_ñ
, 50,

919 
bIgn‹eL©ches
));

922 
t_mrbåì_l
:

923 
t_uni_mrbåì_l
:

925 
	`W_DO
(
bt
->
	`mr_ö£π_l
(
subroŸ
,

926 
is_unique
,

927 
cc
,

928 *
ªÆ_key
, &
ef
,Éf.
_ñ_size
, 50,

929 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
));

932 
t_mrbåì_p
:

933 
t_uni_mrbåì_p
:

935 
	`W_DO
(
bt
->
	`mr_ö£π_p
(
subroŸ
,

936 
is_unique
,

937 
cc
,

938 *
ªÆ_key
, &
ef
,Éf.
_ñ_size
, 50,

939 
bIgn‹eL©ches
));

942 
t_πªe
:

943 
	`Ârötf
(
°dîr
, "rtrees indexes doÇot supportÅhis function");

944  
	`RC
(
eNOTIMPLEMENTED
);

947 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

950 #ifde‡
SM_HISTOGRAM


952 
d©a_ac˚s£s
[
°id
]->
	`öc_ac˚ss_cou¡
(
subroŸ
, *
ªÆ_key
);

955  
RCOK
;

956 
	}
}

961 
rc_t
 
	gss_m
::
	$_de°roy_mr_assoc
(c⁄° 
°id_t
 & 
°id
,

962 c⁄° 
vec_t
& 
key
,

963 c⁄° 
vec_t
& 
ñ
,

964 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

965 c⁄° 
Õid_t
& 
roŸ
)

968 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

971 
lock_mode_t
 
ödex_mode
 = 
NL
;

974 i‡(
bIgn‹eLocks
) {

975 
cc
 = 
t_cc_n⁄e
;

976 
ödex_mode
 = 
NL
;

981 
x˘_t
* 
xd
 = 
	`x˘
();

982 i‡(
xd
) {

983 
lock_mode_t
 
lock_mode
;

984 
	`W_DO
(
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
));

986 i‡(
lock_mode
 =
EX
) {

987 
cc
 = 
t_cc_n⁄e
;

988 } i‡(
lock_mode
 =
IX
 ||Üock_modê>
SIX
) {

991 
ödex_mode
 = 
IX
;

997 
	`DBG
(<<"");

999 
sdesc_t
* 
sd
;

1000 
cvec_t
* 
ªÆ_key
;

1001 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
));

1002 
	`DBG
(<<"");

1004 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1005 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

1007 
boﬁ
 
is_unique
 = 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì
 ||

1008 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_l
 ||

1009 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_p
;

1011 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1013 
Õid_t
 
subroŸ
;

1014 if(
roŸ
 !
Õid_t
::
nuŒ
) {

1015 
subroŸ
 = 
roŸ
;

1017 
subroŸ
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

1020 
sd
->
	`söfo
().
¡y≥
) {

1021 
t_bad_ndx_t
:

1022  
	`RC
(
eBADNDXTYPE
);

1024 
t_mrbåì
:

1025 
t_uni_mrbåì
:

1026 
t_mrbåì_l
:

1027 
t_uni_mrbåì_l
:

1028 
t_mrbåì_p
:

1029 
t_uni_mrbåì_p
:

1031 
	`W_DO
(
bt
->
	`mr_ªmove
(
subroŸ
,

1032 
is_unique
,

1033 
cc
, *
ªÆ_key
, 
ñ
, 
bIgn‹eL©ches
) );

1036 
t_πªe
:

1037 
	`Ârötf
(
°dîr
, "rtree indexes doÇot supportÅhis function");

1038  
	`RC
(
eNOTIMPLEMENTED
);

1040 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

1042 
	`DBG
(<<"");

1044 #ifde‡
SM_HISTOGRAM


1046 
d©a_ac˚s£s
[
°id
]->
	`öc_ac˚ss_cou¡
(
subroŸ
, *
ªÆ_key
);

1049  
RCOK
;

1050 
	}
}

1055 
rc_t
 
	gss_m
::
	$_de°roy_mr_Æl_assoc
(c⁄° 
°id_t
& 
°id
, c⁄° 
vec_t
& 
key
, & 
num
,

1056 c⁄° 
boﬁ
 
bIgn‹eLocks
, c⁄° boﬁ 
bIgn‹eL©ches
,

1057 c⁄° 
Õid_t
& 
roŸ
)

1059 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

1062 
lock_mode_t
 
ödex_mode
 = 
NL
;

1065 i‡(
bIgn‹eLocks
) {

1066 
cc
 = 
t_cc_n⁄e
;

1067 
ödex_mode
 = 
NL
;

1072 
x˘_t
* 
xd
 = 
	`x˘
();

1073 i‡(
xd
) {

1074 
lock_mode_t
 
lock_mode
;

1075 
	`W_DO
(
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
));

1077 i‡(
lock_mode
 =
EX
) {

1078 
cc
 = 
t_cc_n⁄e
;

1079 } i‡(
lock_mode
 =
IX
 ||Üock_modê>
SIX
) {

1082 
ödex_mode
 = 
IX
;

1088 
sdesc_t
* 
sd
;

1089 
cvec_t
* 
ªÆ_key
;

1090 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
));

1092 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1093 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

1095 
x˘_t
* 
xd
 = 
	`x˘
();

1096 i‡(
xd
) {

1097 
lock_mode_t
 
lock_mode
;

1098 
	`W_DO
(
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
));

1100 i‡(
lock_mode
 =
EX
Ë
cc
 = 
t_cc_n⁄e
;

1103 
boﬁ
 
is_unique
 = 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì
 ||

1104 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_l
 ||

1105 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_p
;

1107 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1109 
Õid_t
 
subroŸ
;

1110 if(
roŸ
 !
Õid_t
::
nuŒ
) {

1111 
subroŸ
 = 
roŸ
;

1113 
subroŸ
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

1116 
sd
->
	`söfo
().
¡y≥
) {

1117 
t_bad_ndx_t
:

1118  
	`RC
(
eBADNDXTYPE
);

1120 
t_mrbåì
:

1121 
t_uni_mrbåì
:

1122 
t_mrbåì_l
:

1123 
t_uni_mrbåì_l
:

1124 
t_mrbåì_p
:

1125 
t_uni_mrbåì_p
:

1127 
	`W_DO
(
bt
->
	`mr_ªmove_key
(
subroŸ
,

1128 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

1129 
is_unique
,

1130 
cc
, *
ªÆ_key
, 
num
, 
bIgn‹eL©ches
));

1133 
t_πªe
:

1134 
	`Ârötf
(
°dîr
, "rtree indexes doÇot supportÅhis function");

1135  
	`RC
(
eNOTIMPLEMENTED
);

1138 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

1141 #ifde‡
SM_HISTOGRAM


1143 
d©a_ac˚s£s
[
°id
]->
	`öc_ac˚ss_cou¡
(
subroŸ
, *
ªÆ_key
);

1146  
RCOK
;

1147 
	}
}

1152 
rc_t
 
	gss_m
::
	$_föd_mr_assoc
(c⁄° 
°id_t
& 
°id
,

1153 c⁄° 
vec_t
& 
key
,

1154 * 
ñ
,

1155 
smsize_t
& 
ñí
,

1156 
boﬁ
& 
found
,

1157 c⁄° 
boﬁ
 
bIgn‹eLocks
,

1158 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

1159 c⁄° 
Õid_t
& 
roŸ
)

1162 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

1165 
lock_mode_t
 
ödex_mode
 = 
NL
;

1169 i‡(
bIgn‹eLocks
) {

1170 
cc
 = 
t_cc_n⁄e
;

1171 
ödex_mode
 = 
NL
;

1176 
x˘_t
* 
xd
 = 
	`x˘
();

1177 i‡(
xd
) {

1178 
lock_mode_t
 
lock_mode
;

1179 
	`W_DO
(
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
,Årue));

1181 i‡(
lock_mode
 >
SH
) {

1182 
cc
 = 
t_cc_n⁄e
;

1183 } i‡(
lock_mode
 >
IS
) {

1188 
ödex_mode
 = 
IS
;

1194 
sdesc_t
* 
sd
;

1195 
cvec_t
* 
ªÆ_key
;

1196 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
));

1197 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1198 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

1200 
boﬁ
 
is_unique
 = 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì
 ||

1201 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_l
 ||

1202 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì_p
;

1204 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1206 
Õid_t
 
subroŸ
;

1207 if(
roŸ
 !
Õid_t
::
nuŒ
) {

1208 
subroŸ
 = 
roŸ
;

1210 
subroŸ
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

1213 
sd
->
	`söfo
().
¡y≥
) {

1214 
t_bad_ndx_t
:

1215  
	`RC
(
eBADNDXTYPE
);

1217 
t_mrbåì
:

1218 
t_uni_mrbåì
:

1219 
t_mrbåì_l
:

1220 
t_uni_mrbåì_l
:

1221 
t_mrbåì_p
:

1222 
t_uni_mrbåì_p
:

1224 
	`W_DO
(
bt
->
	`mr_lookup
(
subroŸ
,

1225 
is_unique
,

1226 
cc
,

1227 *
ªÆ_key
, 
ñ
, 
ñí
, 
found
, 
bIgn‹eL©ches
) );

1230 
t_πªe
:

1231 
	`Ârötf
(
°dîr
, "rtree indexes doÇot supportÅhis function");

1232  
	`RC
(
eNOTIMPLEMENTED
);

1235 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

1238 #ifde‡
SM_HISTOGRAM


1240 
d©a_ac˚s£s
[
°id
]->
	`öc_ac˚ss_cou¡
(
subroŸ
, *
ªÆ_key
);

1243  
RCOK
;

1244 
	}
}

1249 
rc_t
 
	gss_m
::
	$_upd©e_mr_assoc
(c⁄° 
°id_t
& 
°id
,

1250 c⁄° 
vec_t
& 
key
,

1251 c⁄° 
vec_t
& 
ﬁd_ñ
,

1252 c⁄° 
vec_t
& 
√w_ñ
,

1253 
boﬁ
& 
found
,

1254 c⁄° 
boﬁ
 
bIgn‹eLocks
,

1255 c⁄° 
boﬁ
 
bIgn‹eL©ches
,

1256 c⁄° 
Õid_t
& 
roŸ
)

1259 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

1262 
lock_mode_t
 
ödex_mode
 = 
NL
;

1266 i‡(
bIgn‹eLocks
) {

1267 
cc
 = 
t_cc_n⁄e
;

1268 
ödex_mode
 = 
NL
;

1273 
x˘_t
* 
xd
 = 
	`x˘
();

1274 i‡(
xd
) {

1275 
lock_mode_t
 
lock_mode
;

1276 
	`W_DO
(
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
,Årue));

1278 i‡(
lock_mode
 >
SH
) {

1279 
cc
 = 
t_cc_n⁄e
;

1280 } i‡(
lock_mode
 >
IS
) {

1285 
ödex_mode
 = 
IS
;

1291 
sdesc_t
* 
sd
;

1292 
cvec_t
* 
ªÆ_key
;

1293 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
));

1294 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1295 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

1297 
boﬁ
 
is_unique
 = 
sd
->
	`söfo
().
¡y≥
 =
t_uni_mrbåì
;

1299 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
, 
åue
));

1301 
Õid_t
 
subroŸ
;

1302 if(
roŸ
 !
Õid_t
::
nuŒ
) {

1303 
subroŸ
 = 
roŸ
;

1305 
subroŸ
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

1308 
sd
->
	`söfo
().
¡y≥
) {

1309 
t_bad_ndx_t
:

1310  
	`RC
(
eBADNDXTYPE
);

1314 
t_mrbåì
:

1315 
t_uni_mrbåì
:

1317 
	`W_DO
(
bt
->
	`mr_upd©e
(
subroŸ
,

1318 
is_unique
,

1319 
cc
,

1320 *
ªÆ_key
, 
ﬁd_ñ
, 
√w_ñ
,

1321 
found
, 
bIgn‹eL©ches
) );

1325 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

1328  
RCOK
;

1329 
	}
}

1331 #ifde‡
SM_HISTOGRAM


1332 
rc_t
 
	gss_m
::
	$_de°roy_Æl_hi°ogøms
()

1334 
m≠
< 
°id_t
, 
d©a_ac˚ss_hi°ogøm
* >::
ôî©‹
 
ôî
 = 
d©a_ac˚s£s
.
	`begö
();

1335 
ôî
 !
d©a_ac˚s£s
.
	`íd
();

1336 
ôî
++) {

1337 
dñëe
 
ôî
->
£c⁄d
;

1338 
ôî
->
£c⁄d
 = 0;

1340  
RCOK
;

1341 
	}
}

1344 
rc_t
 
	gss_m
::
	$_gë_ønge_m≠
(
°id_t
 
°id
, 
key_ønges_m≠
*& 
øngem≠
)

1346 
	`FUNC
(
ss_m
::
_gë_ønge_m≠
);

1348 
	`DBG
(<<" stid " << 
°id
);

1351 
sdesc_t
* 
sd
;

1352 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
SH
));

1354 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1356 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1358 
øngem≠
 = 
sd
->
	`gë_∑πôi⁄s_p
();

1359  (
RCOK
);

1360 
	}
}

1363 
rc_t
 
	gss_m
::
	$_gë_°‹e_öfo
(
°id_t
 
°id
, 
söfo_s
& 
söfo
)

1365 
	`FUNC
(
ss_m
::
_gë_°‹e_öfo
);

1367 
	`DBG
(<<" stid " << 
°id
);

1370 
sdesc_t
* 
sd
;

1371 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
SH
));

1373 
söfo
 = 
sd
->
	`söfo
();

1374  (
RCOK
);

1375 
	}
}

1377 
rc_t
 
	gss_m
::
	$_make_equÆ_∑πôi⁄s
(
°id_t
 
°id
, c⁄° 
vec_t
& 
möKey
,

1378 c⁄° 
vec_t
& 
maxKey
, 
uöt
 
numP¨ts
)

1383 
	`FUNC
(
ss_m
::
_make_equÆ_∑πôi⁄s
);

1385 
	`DBG
(<<" stid " << 
°id
);

1388 
sdesc_t
* 
sd
;

1389 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
));

1391 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1393 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1395 
boﬁ
 
isCom¥es£d
 = 
söfo
.
kc
[0].
com¥es£d
 != 0;

1399 
cvec_t
* 
ªÆ_key
;

1401 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
möKey
, möKey.
	`cou¡
(), 
sd
->
	`söfo
().
kc
));

1402 
uöt
 
möKey_size
 = 
ªÆ_key
->
	`size
();

1403 * 
möKey_c
 = (*Ë
	`mÆloc
(
möKey_size
);

1404 
ªÆ_key
->
	`c›y_to
(
möKey_c
, 
möKey_size
);

1406 
ªÆ_key
->
	`ª£t
();

1407 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
maxKey
, maxKey.
	`cou¡
(), 
sd
->
	`söfo
().
kc
));

1408 
uöt
 
maxKey_size
 = 
ªÆ_key
->
	`size
();

1409 * 
maxKey_c
 = (*Ë
	`mÆloc
(
maxKey_size
);

1410 
ªÆ_key
->
	`c›y_to
(
maxKey_c
, 
maxKey_size
);

1412 ** 
subP¨ts
 = (**Ë
	`mÆloc
(
numP¨ts
*(*));

1413 
uöt
 
∑πsCª©ed
 = 
key_ønges_m≠
::
	`di°ribuãS∑˚
(
möKey_c
, 
möKey_size
,

1414 
maxKey_c
, 
maxKey_size
,

1415 
numP¨ts
, 
subP¨ts
);

1418 
uöt
 
size
 = (
möKey_size
 < 
maxKey_size
) ? minKey_size : maxKey_size;

1419 
Õid_t
 
roŸ
;

1423 
uöt
 
i
=1; i<
∑πsCª©ed
; i++) {

1424 
ªÆ_key
->
	`ª£t
();

1425 
ªÆ_key
->
	`put
(
subP¨ts
[
i
], 
size
);

1430 
	`W_DO
(
bt
->
	`¸óã
(
°id
, 
roŸ
, 
isCom¥es£d
));

1431 
sd
->
	`∑πôi⁄s
().
	`addP¨tôi⁄
(*
ªÆ_key
, 
roŸ
);

1436 
uöt
 
i
=0; i<
∑πsCª©ed
; i++) {

1437 
dñëe
 
subP¨ts
[
i
];

1439 
dñëe
 
subP¨ts
;

1440 
dñëe
 
möKey_c
;

1441 
dñëe
 
maxKey_c
;

1444 
sd
->
	`∑πôi⁄s
().
	`¥ötP¨tôi⁄sInByãs
();

1481 
	`W_DO
–
ø
->
	`fûl_∑ge
(
sd
->
	`roŸ
(), sd->
	`∑πôi⁄s
()) );

1483 #ifde‡
SM_HISTOGRAM


1486 
d©a_ac˚s£s
[
°id
] = 
√w
 
	`d©a_ac˚ss_hi°ogøm
(
sd
->
	`∑πôi⁄s
(), 100, 7, 
Ál£
);

1489  
RCOK
;

1490 
	}
}

1492 
rc_t
 
	gss_m
::
	$_add_∑πôi⁄_öô
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
,

1493 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1496 
	`FUNC
(
ss_m
::
_add_∑πôi⁄_öô
);

1498 
	`DBG
(<<" stid " << 
°id
);

1500 
lock_mode_t
 
ödex_mode
 = 
NL
;

1502 i‡(
bIgn‹eL©ches
) {

1503 
ödex_mode
 = 
NL
;

1506 
x˘_t
* 
xd
 = 
	`x˘
();

1507 i‡(
xd
) {

1508 
lock_mode_t
 
lock_mode
;

1509 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

1510 i‡(!(
lock_mode
 =
IX
 ||Üock_modê>
SIX
)) {

1511 
ödex_mode
 = 
IX
;

1517 
sdesc_t
* 
sd
;

1518 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
) );

1520 
Õid_t
 
roŸ_√w
;

1521 
cvec_t
* 
ªÆ_key
;

1522 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1524 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1526 
sd
->
	`söfo
().
¡y≥
) {

1527 
t_mrbåì
:

1528 
t_uni_mrbåì
:

1529 
t_mrbåì_l
:

1530 
t_uni_mrbåì_l
:

1531 
t_mrbåì_p
:

1532 
t_uni_mrbåì_p
:

1534 
	`W_DO
(
bt
->
	`¸óã
(
°id
, 
roŸ_√w
, 
söfo
.
kc
[0].
com¥es£d
 !0, 
bIgn‹eL©ches
));

1535 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1537 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`addP¨tôi⁄
(*
ªÆ_key
, 
roŸ_√w
) );

1538 
	`W_DO
–
ø
->
	`add_∑πôi⁄
(
sd
->
	`roŸ
(), *
ªÆ_key
, 
roŸ_√w
) );

1543  
	`RC
(
eBADNDXTYPE
);

1546  
RCOK
;

1547 
	}
}

1549 
rc_t
 
	gss_m
::
	$_add_∑πôi⁄
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
, c⁄° 
boﬁ
 
bIgn‹eL©ches
,

1550 
RELOCATE_RECORD_CALLBACK_FUNC
 
ªloˇã_ˇŒback
)

1553 
x˘_auto_ab‹t_t
 
x˘_auto
;

1555 
	`FUNC
(
ss_m
::
_add_∑πôi⁄
);

1557 
	`DBG
(<<" stid " << 
°id
);

1559 
lock_mode_t
 
ödex_mode
 = 
NL
;

1562 i‡(
bIgn‹eL©ches
) {

1563 
ödex_mode
 = 
NL
;

1566 
x˘_t
* 
xd
 = 
	`x˘
();

1567 i‡(
xd
) {

1568 
lock_mode_t
 
lock_mode
;

1569 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

1570 i‡(!(
lock_mode
 =
IX
 ||Üock_modê>
SIX
)) {

1571 
ödex_mode
 = 
IX
;

1577 
sdesc_t
* 
sd
;

1578 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
) );

1580 
Õid_t
 
roŸ_ﬁd
;

1581 
Õid_t
 
roŸ_√w
;

1583 
cvec_t
* 
ªÆ_key
;

1585 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1587 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1589 
	`W_DO
(
bt
->
	`¸óã
(
°id
, 
roŸ_√w
, 
söfo
.
kc
[0].
com¥es£d
 !0, 
bIgn‹eL©ches
));

1591 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1593 
roŸ_ﬁd
 = 
sd
->
	`roŸ
(*
ªÆ_key
);

1596 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`addP¨tôi⁄
(*
ªÆ_key
, 
roŸ_√w
) );

1597 
	`W_DO
–
ø
->
	`add_∑πôi⁄
(
sd
->
	`roŸ
(), *
ªÆ_key
, 
roŸ_√w
) );

1599 
Õid_t
 
Àaf_ﬁd
;

1600 
Õid_t
 
Àaf_√w
;

1602 
sd
->
	`söfo
().
¡y≥
) {

1603 
t_mrbåì
:

1604 
t_uni_mrbåì
:

1606 
	`W_DO
(
bt
->
	`•lô_åì
(
roŸ_ﬁd
, 
roŸ_√w
, *
ªÆ_key
, 
Àaf_ﬁd
, 
Àaf_√w
, 
bIgn‹eL©ches
));

1610 
t_mrbåì_l
:

1611 
t_uni_mrbåì_l
:

1613 
	`W_DO
(
bt
->
	`•lô_åì
(
roŸ_ﬁd
, 
roŸ_√w
, *
ªÆ_key
, 
Àaf_ﬁd
, 
Àaf_√w
, 
bIgn‹eL©ches
));

1614 if(
Àaf_ﬁd
.
∑ge
 != 0) {

1615 
	`W_DO
(
bt
->
	`ªloˇã_ªcs_l
(
Àaf_ﬁd
, 
Àaf_√w
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
));

1619 
t_mrbåì_p
:

1620 
t_uni_mrbåì_p
:

1622 
	`W_DO
(
bt
->
	`•lô_åì
(
roŸ_ﬁd
, 
roŸ_√w
, *
ªÆ_key
, 
Àaf_ﬁd
, 
Àaf_√w
, 
bIgn‹eL©ches
));

1623 
	`W_DO
(
bt
->
	`ªloˇã_ªcs_p
(
roŸ_ﬁd
, 
roŸ_√w
, 
bIgn‹eL©ches
, 
ªloˇã_ˇŒback
));

1627  
	`RC
(
eBADNDXTYPE
);

1630 
	`W_DO
(
x˘_auto
.
	`commô
());

1632  
RCOK
;

1633 
	}
}

1635 
rc_t
 
	gss_m
::
	$_dñëe_∑πôi⁄
(
°id_t
 
°id
, c⁄° 
vec_t
& 
key
,

1636 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1638 
x˘_auto_ab‹t_t
 
x˘_auto
;

1640 
	`FUNC
(
ss_m
::
_dñëe_∑πôi⁄
);

1642 
	`DBG
(<<" stid " << 
°id
);

1644 
Õid_t
 
roŸ
;

1646 
Õid_t
 
roŸ1
;

1647 
Õid_t
 
roŸ2
;

1650 
vec_t
 
°¨t_key1
;

1651 
vec_t
 
°¨t_key2
;

1654 
sdesc_t
* 
sd
;

1655 
cvec_t
* 
ªÆ_key
;

1657 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
));

1658 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1660 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1663 
	`W_DO
(
bt
->
	`_s¸ambÀ_key
(
ªÆ_key
, 
key
, 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
));

1664 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`dñëeP¨tôi⁄ByKey
(*
ªÆ_key
, 
roŸ1
, 
roŸ2
, 
°¨t_key1
, 
°¨t_key2
) );

1666 
sd
->
	`söfo
().
¡y≥
) {

1667 
t_mrbåì
:

1668 
t_uni_mrbåì
:

1669 
t_mrbåì_l
:

1670 
t_uni_mrbåì_l
:

1673 
	`W_DO
–
bt
->
	`mîge_åìs
(
roŸ
, 
roŸ1
, 
roŸ2
, 
°¨t_key2
, 
Ál£
, 
bIgn‹eL©ches
) );

1676 
t_mrbåì_p
:

1677 
t_uni_mrbåì_p
:

1680 
	`W_DO
–
bt
->
	`mîge_åìs
(
roŸ
, 
roŸ1
, 
roŸ2
, 
°¨t_key2
, 
åue
, 
bIgn‹eL©ches
) );

1684  
	`RC
(
eBADNDXTYPE
);

1688 if–
roŸ
 !
roŸ1
) {

1689 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`upd©eRoŸ
(
°¨t_key1
, 
roŸ
) );

1693 
	`W_DO
–
ø
->
	`dñëe_∑πôi⁄
(
sd
->
	`roŸ
(), 
roŸ2
, 
roŸ1
, 
roŸ
) );

1695 
	`W_DO
(
x˘_auto
.
	`commô
());

1697  
RCOK
;

1698 
	}
}

1700 
rc_t
 
	gss_m
::
	$_dñëe_∑πôi⁄
(
°id_t
 
°id
, 
Õid_t
& 
roŸ2
,

1701 c⁄° 
boﬁ
 
bIgn‹eL©ches
)

1703 
x˘_auto_ab‹t_t
 
x˘_auto
;

1705 
	`FUNC
(
ss_m
::
_dñëe_∑πôi⁄
);

1707 
	`DBG
(<<" stid " << 
°id
);

1709 
Õid_t
 
roŸ
;

1711 
Õid_t
 
roŸ1
;

1714 
vec_t
 
°¨t_key1
;

1715 
vec_t
 
°¨t_key2
;

1718 
sdesc_t
* 
sd
;

1720 
	`W_DO
(
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
));

1721 
söfo_s
 
söfo
 = 
sd
->
	`söfo
();

1723 i‡(
söfo
.
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1726 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`dñëeP¨tôi⁄
(
roŸ1
, 
roŸ2
, 
°¨t_key1
, 
°¨t_key2
) );

1729 
sd
->
	`söfo
().
¡y≥
) {

1730 
t_mrbåì
:

1731 
t_uni_mrbåì
:

1732 
t_mrbåì_l
:

1733 
t_uni_mrbåì_l
:

1736 
	`W_DO
–
bt
->
	`mîge_åìs
(
roŸ
, 
roŸ1
, 
roŸ2
, 
°¨t_key2
, 
Ál£
, 
bIgn‹eL©ches
) );

1739 
t_mrbåì_p
:

1740 
t_uni_mrbåì_p
:

1743 
	`W_DO
–
bt
->
	`mîge_åìs
(
roŸ
, 
roŸ1
, 
roŸ2
, 
°¨t_key2
, 
åue
, 
bIgn‹eL©ches
) );

1747  
	`RC
(
eBADNDXTYPE
);

1751 if–
roŸ
 !
roŸ1
) {

1752 
	`W_DO
–
sd
->
	`∑πôi⁄s
().
	`upd©eRoŸ
(
°¨t_key1
, 
roŸ
) );

1756 
	`W_DO
–
ø
->
	`dñëe_∑πôi⁄
(
sd
->
	`roŸ
(), 
roŸ2
, 
roŸ1
, 
roŸ
) );

1758 
	`W_DO
(
x˘_auto
.
	`commô
());

1760  
RCOK
;

1761 
	}
}

1766 
rc_t


1767 
	gss_m
::
	$_¸óã_ödex
(

1768 
vid_t
 
vid
,

1769 
ndx_t
 
¡y≥
,

1770 
°‹e_¥›îty_t
 
¥›îty
,

1771 c⁄° * 
key_desc
,

1772 
c⁄cuºícy_t
 
cc
,

1773 
°id_t
& 
°id


1776 
	`FUNC
(
ss_m
::
_¸óã_ödex
);

1779 
	`DBG
(<<" vid " << 
vid
);

1781 
uöt4_t
 
cou¡
 = 
max_keycomp
;

1782 
key_ty≥_s
 
kcomp
[
max_keycomp
];

1783 
Õid_t
 
roŸ
;

1785 
	`W_DO
–
key_ty≥_s
::
	`∑r£_key_ty≥
(
key_desc
, 
cou¡
, 
kcomp
) );

1787 
	`DBG
(<<"vid " << 
vid
);

1788 
	`W_DO
–
io
->
	`¸óã_°‹e
(
vid
, 100 , 
	`_make_°‹e_Êag
(
¥›îty
), 
°id
) );

1789 
	`DBG
(<<" stid " << 
°id
);

1799 
	`W_DO
(
lm
->
	`lock
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1802 if–(
cc
 !
t_cc_n⁄e
Ë&& (c¯!
t_cc_fûe
) &&

1803 (
cc
 !
t_cc_kvl
Ë&& (c¯!
t_cc_modkvl
) &&

1804 (
cc
 !
t_cc_im
)

1805 Ë 
	`RC
(
eBADCCLEVEL
);

1807 
¡y≥
) {

1808 
t_båì
:

1809 
t_uni_båì
:

1812 
	`W_DO
–
bt
->
	`¸óã
(
°id
, 
roŸ
, 
kcomp
[0].
com¥es£d
 != 0) );

1816  
	`RC
(
eBADNDXTYPE
);

1820 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100 ,

1821 
¡y≥
,

1822 
cc
,

1823 
roŸ
.
∑ge
,

1824 
cou¡
, 
kcomp
);

1826 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100, 
¡y≥
, 
cc
, 
roŸ
.
∑ge
 ,
cou¡
, 
kcomp
);

1828 
	`W_DO
–
dú
->
	`ö£π
(
°id
, 
söfo
));

1830  
RCOK
;

1831 
	}
}

1836 
rc_t


1837 
	gss_m
::
	$_¸óã_md_ödex
(

1838 
vid_t
 
vid
,

1839 
ndx_t
 
¡y≥
,

1840 
°‹e_¥›îty_t
 
¥›îty
,

1841 
°id_t
& 
°id
,

1842 
öt2_t
 
dim


1845 
	`W_DO
–
io
->
	`¸óã_°‹e
(
vid
, 100 ,

1846 
	`_make_°‹e_Êag
(
¥›îty
), 
°id
) );

1848 
Õid_t
 
roŸ
;

1856 
	`W_DO
(
lm
->
	`lock
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
));

1858 
¡y≥
) {

1859 
t_πªe
:

1860 
	`W_DO
–
π
->
	`¸óã
(
°id
, 
roŸ
, 
dim
) );

1863  
	`RC
(
eBADNDXTYPE
);

1866 
söfo_s
 
	`söfo
(
°id
.
°‹e
, 
t_ödex
, 100 ,

1867 
¡y≥
, 
t_cc_n⁄e
,

1868 
roŸ
.
∑ge
,

1870 
	`W_DO
–
dú
->
	`ö£π
(
°id
, 
söfo
) );

1872  
RCOK
;

1873 
	}
}

1878 
rc_t


1879 
	gss_m
::
	$_de°roy_ödex
(c⁄° 
°id_t
& 
iid
)

1881 
sdesc_t
* 
sd
;

1882 
	`W_DO
–
dú
->
	`ac˚ss
(
iid
, 
sd
, 
EX
) );

1884 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1885 
sd
->
	`söfo
().
¡y≥
) {

1886 
t_båì
:

1887 
t_uni_båì
:

1888 
	`W_DO
–
io
->
	`de°roy_°‹e
(
iid
) );

1891  
	`RC
(
eBADNDXTYPE
);

1894 
	`W_DO
–
dú
->
	`ªmove
(
iid
) );

1895  
RCOK
;

1896 
	}
}

1898 
rc_t


1899 
	gss_m
::
	$_de°roy_md_ödex
(c⁄° 
°id_t
& 
iid
)

1901 
sdesc_t
* 
sd
;

1902 
	`W_DO
–
dú
->
	`ac˚ss
(
iid
, 
sd
, 
EX
) );

1904 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1905 
sd
->
	`söfo
().
¡y≥
) {

1906 
t_πªe
:

1907 
	`W_DO
–
io
->
	`de°roy_°‹e
(
iid
) );

1910  
	`RC
(
eBADNDXTYPE
);

1913 
	`W_DO
–
dú
->
	`ªmove
(
iid
) );

1914  
RCOK
;

1915 
	}
}

1921 
rc_t


1922 
	gss_m
::
	$_bulkld_ödex
(

1923 c⁄° 
°id_t
& 
°id
,

1924 
n§cs
,

1925 c⁄° 
°id_t
* 
sour˚
,

1926 
sm_du_°©s_t
& 
_°©s
,

1927 
boﬁ
 
s‹t_du∂iˇãs
,

1928 
boﬁ
 
Àxify_keys


1931 
sdesc_t
* 
sd
;

1932 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
 ) );

1934 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1935 
sd
->
	`söfo
().
¡y≥
) {

1936 
t_båì
:

1937 
t_uni_båì
:

1938 
	`DBG
(<<"bulkÜﬂdögÑoŸ " << 
sd
->
	`roŸ
());

1939 
	`W_DO
–
bt
->
	`bulk_lﬂd
(
sd
->
	`roŸ
(),

1940 
n§cs
,

1941 
sour˚
,

1942 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

1943 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

1944 (
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
,

1945 
_°©s
.
båì
,

1946 
s‹t_du∂iˇãs
,

1947 
Àxify_keys


1951  
	`RC
(
eBADNDXTYPE
);

1954 
°‹e_Êag_t
 
°
;

1955 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
°id
, 
°
) );

1956 
	`w_as£π3
(
°
 !
°_bad
);

1957 if(
°
 & (
°_tmp
|
°_ö£π_fûe
|
°_lﬂd_fûe
)) {

1958 
	`DBG
(<<"c⁄vîtög stid " << 
°id
 <<

1959 " from " << 
°
 << "Åo st_regular " );

1964 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
°id
, 
°_ªguœr
) );

1967  
RCOK
;

1968 
	}
}

1970 
rc_t


1971 
	gss_m
::
	$_bulkld_md_ödex
(

1972 c⁄° 
°id_t
& 
°id
,

1973 
n§cs
,

1974 c⁄° 
°id_t
* 
sour˚
,

1975 
sm_du_°©s_t
& 
_°©s
,

1976 
öt2_t
 
hff
,

1977 
öt2_t
 
hef
,

1978 
nbox_t
* 
univî£
)

1980 
sdesc_t
* 
sd
;

1981 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
) );

1983 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

1984 
sd
->
	`söfo
().
¡y≥
) {

1985 
t_πªe
:

1987 
πld_desc_t
 
	`desc
(
univî£
,
hff
,
hef
);

1988 
	`W_DO
–
π
->
	`bulk_lﬂd
(
sd
->
	`roŸ
(), 
n§cs
, 
sour˚
, 
desc
, 
_°©s
.
πªe
) );

1992  
	`RC
(
eBADNDXTYPE
);

1995 
°‹e_Êag_t
 
°
;

1996 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
°id
, 
°
) );

1997 if(
°
 & (
°_tmp
|
°_ö£π_fûe
|
°_lﬂd_fûe
)) {

2002 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
°id
, 
°_ªguœr
) );

2006  
RCOK
;

2007 
	}
}

2009 
rc_t


2010 
	gss_m
::
	$_bulkld_ödex
(

2011 c⁄° 
°id_t
& 
°id
,

2012 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

2013 
sm_du_°©s_t
& 
_°©s


2016 
sdesc_t
* 
sd
;

2017 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
) );

2019 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2020 
sd
->
	`söfo
().
¡y≥
) {

2021 
t_båì
:

2022 
t_uni_båì
:

2023 
	`W_DO
–
bt
->
	`bulk_lﬂd
(
sd
->
	`roŸ
(), 
s‹ãd_°ªam
,

2024 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

2025 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

2026 (
c⁄cuºícy_t
)
sd
->
	`söfo
().
cc
, 
_°©s
.
båì
) );

2029  
	`RC
(
eBADNDXTYPE
);

2032  
RCOK
;

2033 
	}
}

2035 
rc_t


2036 
	gss_m
::
	$_bulkld_md_ödex
(

2037 c⁄° 
°id_t
& 
°id
,

2038 
s‹t_°ªam_i
& 
s‹ãd_°ªam
,

2039 
sm_du_°©s_t
& 
_°©s
,

2040 
öt2_t
 
hff
,

2041 
öt2_t
 
hef
,

2042 
nbox_t
* 
univî£
)

2044 
sdesc_t
* 
sd
;

2045 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
EX
) );

2047 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2048 
sd
->
	`söfo
().
¡y≥
) {

2049 
t_πªe
:

2051 
πld_desc_t
 
	`desc
(
univî£
,
hff
,
hef
);

2052 
	`W_DO
–
π
->
	`bulk_lﬂd
(
sd
->
	`roŸ
(), 
s‹ãd_°ªam
, 
desc
, 
_°©s
.
πªe
) );

2056  
	`RC
(
eBADNDXTYPE
);

2059  
RCOK
;

2060 
	}
}

2065 
rc_t


2066 
	gss_m
::
	$_¥öt_ödex
(c⁄° 
°id_t
& 
°id
)

2068 
sdesc_t
* 
sd
;

2069 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
) );

2071 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2072 i‡(
sd
->
	`söfo
().
nkc
 > 1) {

2074 
	`Ârötf
(
°dîr
, "multi-part keysáreÇot supported");

2075  
	`RC
(
eNOTIMPLEMENTED
);

2077 
s‹t‹dî
::
keyty≥
 
k
 = s‹t‹dî::
	`c⁄vît
(
sd
->
	`söfo
().
kc
);

2078 
sd
->
	`söfo
().
¡y≥
) {

2079 
t_båì
:

2080 
t_uni_båì
:

2081 
bt
->
	`¥öt
(
sd
->
	`roŸ
(), 
k
);

2084  
	`RC
(
eBADNDXTYPE
);

2087  
RCOK
;

2088 
	}
}

2090 
rc_t


2091 
	gss_m
::
	$_¥öt_md_ödex
(
°id_t
 
°id
)

2093 
sdesc_t
* 
sd
;

2094 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
) );

2096 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2097 
sd
->
	`söfo
().
¡y≥
) {

2098 
t_πªe
:

2099 
	`W_DO
–
π
->
	`¥öt
(
sd
->
	`roŸ
()) );

2102  
	`RC
(
eBADNDXTYPE
);

2105  
RCOK
;

2106 
	}
}

2111 
rc_t


2112 
	gss_m
::
	$_¸óã_assoc
(

2113 c⁄° 
°id_t
& 
°id
,

2114 c⁄° 
vec_t
& 
key
,

2115 c⁄° 
vec_t
& 
ñ
,

2116 c⁄° 
boﬁ
 
bIgn‹eLocks
)

2120 
lock_mode_t
 
ödex_mode
 = 
NL
;

2123 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

2126 i‡(
bIgn‹eLocks
) {

2127 
cc
 = 
t_cc_n⁄e
;

2128 
ödex_mode
 = 
NL
;

2130 
x˘_t
* 
xd
 = 
	`x˘
();

2131 i‡(
xd
) {

2132 
lock_mode_t
 
lock_mode
;

2133 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

2135 i‡(
lock_mode
 =
EX
) {

2136 
cc
 = 
t_cc_n⁄e
;

2137 } i‡(
lock_mode
 =
IX
 ||Üock_modê>
SIX
) {

2140 
ödex_mode
 = 
IX
;

2145 
sdesc_t
* 
sd
;

2146 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
) );

2148 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2149 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

2151 
sd
->
	`söfo
().
¡y≥
) {

2152 
t_bad_ndx_t
:

2153  
	`RC
(
eBADNDXTYPE
);

2154 
t_båì
:

2155 
t_uni_båì
:

2156 
	`W_DO
–
bt
->
	`ö£π
(
sd
->
	`roŸ
(),

2157 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

2158 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

2159 
cc
,

2160 
key
, 
ñ
, 50) );

2162 
t_πªe
:

2163 
	`Ârötf
(
°dîr
,

2165  
	`RC
(
eNOTIMPLEMENTED
);

2167 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2170  
RCOK
;

2171 
	}
}

2176 
rc_t


2177 
	gss_m
::
	$_de°roy_assoc
(

2178 c⁄° 
°id_t
 & 
°id
,

2179 c⁄° 
vec_t
& 
key
,

2180 c⁄° 
vec_t
& 
ñ
,

2181 c⁄° 
boﬁ
 
bIgn‹eLocks
)

2183 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

2186 
lock_mode_t
 
ödex_mode
 = 
NL
;

2189 i‡(
bIgn‹eLocks
) {

2190 
cc
 = 
t_cc_n⁄e
;

2191 
ödex_mode
 = 
NL
;

2194 
x˘_t
* 
xd
 = 
	`x˘
();

2195 i‡(
xd
) {

2196 
lock_mode_t
 
lock_mode
;

2197 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

2199 i‡(
lock_mode
 =
EX
) {

2200 
cc
 = 
t_cc_n⁄e
;

2201 } i‡(
lock_mode
 =
IX
 ||Üock_modê>
SIX
) {

2204 
ödex_mode
 = 
IX
;

2209 
	`DBG
(<<"");

2211 
sdesc_t
* 
sd
;

2212 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
) );

2213 
	`DBG
(<<"");

2215 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2216 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

2218 
sd
->
	`söfo
().
¡y≥
) {

2219 
t_bad_ndx_t
:

2220  
	`RC
(
eBADNDXTYPE
);

2221 
t_båì
:

2222 
t_uni_båì
:

2223 
	`W_DO
–
bt
->
	`ªmove
(
sd
->
	`roŸ
(),

2224 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

2225 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

2226 
cc
, 
key
, 
ñ
) );

2228 
t_πªe
:

2229 
	`Ârötf
(
°dîr
,

2231  
	`RC
(
eNOTIMPLEMENTED
);

2233 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2235 
	`DBG
(<<"");

2236  
RCOK
;

2237 
	}
}

2242 
rc_t


2243 
	gss_m
::
	$_de°roy_Æl_assoc
(c⁄° 
°id_t
& 
°id
, c⁄° 
vec_t
& 
key
,

2244 & 
num


2247 
sdesc_t
* 
sd
;

2248 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IX
) );

2250 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2251 
c⁄cuºícy_t
 
cc
 = (c⁄cuºícy_t)
sd
->
	`söfo
().cc;

2253 
x˘_t
* 
xd
 = 
	`x˘
();

2254 i‡(
xd
) {

2255 
lock_mode_t
 
lock_mode
;

2256 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
) );

2258 i‡(
lock_mode
 =
EX
Ë
cc
 = 
t_cc_n⁄e
;

2260 
sd
->
	`söfo
().
¡y≥
) {

2261 
t_bad_ndx_t
:

2262  
	`RC
(
eBADNDXTYPE
);

2263 
t_båì
:

2264 
t_uni_båì
:

2265 
	`W_DO
–
bt
->
	`ªmove_key
(
sd
->
	`roŸ
(),

2266 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

2267 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

2268 
cc
, 
key
, 
num
) );

2270 
t_πªe
:

2271 
	`Ârötf
(
°dîr
,

2273  
	`RC
(
eNOTIMPLEMENTED
);

2275 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2278  
RCOK
;

2279 
	}
}

2284 
rc_t


2285 
	gss_m
::
	$_föd_assoc
(

2286 c⁄° 
°id_t
& 
°id
,

2287 c⁄° 
vec_t
& 
key
,

2288 * 
ñ
,

2289 
smsize_t
& 
ñí
,

2290 
boﬁ
& 
found
,

2291 c⁄° 
boﬁ
 
bIgn‹eLocks
)

2293 
c⁄cuºícy_t
 
cc
 = 
t_cc_bad
;

2296 
lock_mode_t
 
ödex_mode
 = 
NL
;

2300 i‡(
bIgn‹eLocks
) {

2301 
cc
 = 
t_cc_n⁄e
;

2302 
ödex_mode
 = 
NL
;

2305 
x˘_t
* 
xd
 = 
	`x˘
();

2306 i‡(
xd
) {

2307 
lock_mode_t
 
lock_mode
;

2308 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
lock_mode
, 
xd
->
	`tid
(), 
åue
,Årue) );

2310 i‡(
lock_mode
 >
SH
) {

2311 
cc
 = 
t_cc_n⁄e
;

2312 } i‡(
lock_mode
 >
IS
) {

2317 
ödex_mode
 = 
IS
;

2322 
sdesc_t
* 
sd
;

2323 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
ödex_mode
) );

2324 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2325 i‡(
cc
 =
t_cc_bad
 ) c¯(
c⁄cuºícy_t
)
sd
->
	`söfo
().cc;

2327 
sd
->
	`söfo
().
¡y≥
) {

2328 
t_bad_ndx_t
:

2329  
	`RC
(
eBADNDXTYPE
);

2330 
t_uni_båì
:

2331 
t_båì
:

2332 
	`W_DO
–
bt
->
	`lookup
(
sd
->
	`roŸ
(),

2333 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
,

2334 
sd
->
	`söfo
().
¡y≥
 =
t_uni_båì
,

2335 
cc
,

2336 
key
, 
ñ
, 
ñí
, 
found
) );

2339 
t_πªe
:

2340 
	`Ârötf
(
°dîr
,

2342  
	`RC
(
eNOTIMPLEMENTED
);

2344 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2347  
RCOK
;

2348 
	}
}

2355 
rc_t


2356 
	gss_m
::
	$_de°roy_md_assoc
(
°id_t
 
°id
, c⁄° 
nbox_t
& 
key
, c⁄° 
vec_t
& 
ñ
)

2358 
sdesc_t
* 
sd
;

2359 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IX
) );

2361 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2362 
sd
->
	`söfo
().
¡y≥
) {

2363 
t_bad_ndx_t
:

2364  
	`RC
(
eBADNDXTYPE
);

2365 
t_πªe
:

2366 
	`W_DO
–
π
->
	`ªmove
(
sd
->
	`roŸ
(), 
key
, 
ñ
) );

2368 
t_båì
:

2369 
t_uni_båì
:

2370  
	`RC
(
eBADNDXTYPE
);

2372 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2375  
RCOK
;

2376 
	}
}

2383 
rc_t


2384 
	gss_m
::
	$_¸óã_md_assoc
(
°id_t
 
°id
, c⁄° 
nbox_t
& 
key
, c⁄° 
vec_t
& 
ñ
)

2386 
sdesc_t
* 
sd
;

2387 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IX
) );

2389 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2390 
sd
->
	`söfo
().
¡y≥
) {

2391 
t_bad_ndx_t
:

2392  
	`RC
(
eBADNDXTYPE
);

2393 
t_πªe
:

2394 
	`W_DO
–
π
->
	`ö£π
(
sd
->
	`roŸ
(), 
key
, 
ñ
) );

2396 
t_båì
:

2397 
t_uni_båì
:

2398  
	`RC
(
eWRONGKEYTYPE
);

2400 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2403  
RCOK
;

2404 
	}
}

2409 
rc_t


2410 
	gss_m
::
	$_föd_md_assoc
(

2411 
°id_t
 
°id
,

2412 c⁄° 
nbox_t
& 
key
,

2413 * 
ñ
,

2414 
smsize_t
& 
ñí
,

2415 
boﬁ
& 
found
)

2417 
sdesc_t
* 
sd
;

2418 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
) );

2420 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2421 
sd
->
	`söfo
().
¡y≥
) {

2422 
t_bad_ndx_t
:

2423  
	`RC
(
eBADNDXTYPE
);

2424 
t_πªe
:

2426 
	`W_DO
–
π
->
	`lookup
(
sd
->
	`roŸ
(), 
key
, 
ñ
, 
ñí
, 
found
) );

2428 
t_båì
:

2429 
t_uni_båì
:

2430  
	`RC
(
eWRONGKEYTYPE
);

2433 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2436  
RCOK
;

2437 
	}
}

2442 
rc_t


2443 
	gss_m
::
	$_døw_πªe
(c⁄° 
°id_t
& 
°id
, 
o°ªam
 &
s
)

2445 
sdesc_t
* 
sd
;

2446 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
) );

2448 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2449 
sd
->
	`söfo
().
¡y≥
) {

2450 
t_bad_ndx_t
:

2451  
	`RC
(
eBADNDXTYPE
);

2452 
t_πªe
:

2453 
	`W_DO
–
π
->
	`døw
(
sd
->
	`roŸ
(), 
s
) );

2455 
t_båì
:

2456 
t_uni_båì
:

2457 
	`Ârötf
(
°dîr
,

2459  
	`RC
(
eNOTIMPLEMENTED
);

2462 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2465  
RCOK
;

2466 
	}
}

2468 
rc_t


2469 
	gss_m
::
	$_πªe_°©s
(c⁄° 
°id_t
& 
°id
, 
πªe_°©s_t
& 
°©
,

2470 
uöt2_t
 
size
, uöt2_t* 
ovp
, 
boﬁ
 
audô
)

2472 
sdesc_t
* 
sd
;

2473 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
IS
) );

2475 i‡(
sd
->
	`söfo
().
°y≥
 !
t_ödex
Ë 
	`RC
(
eBADSTORETYPE
);

2476 
sd
->
	`söfo
().
¡y≥
) {

2477 
t_bad_ndx_t
:

2478  
	`RC
(
eBADNDXTYPE
);

2479 
t_πªe
:

2480 
	`W_DO
–
π
->
	`°©s
(
sd
->
	`roŸ
(), 
°©
, 
size
, 
ovp
, 
audô
) );

2482 
t_båì
:

2483 
t_uni_båì
:

2484 
	`Ârötf
(
°dîr
,

2486  
	`RC
(
eNOTIMPLEMENTED
);

2489 
	`W_FATAL_MSG
(
eINTERNAL
, << "bad indexÅy≥ " << 
sd
->
	`söfo
().
¡y≥
 );

2492  
RCOK
;

2493 
	}
}

2499 
rc_t


2500 
	gss_m
::
	$_gë_°‹e_öfo
(

2501 c⁄° 
°id_t
& 
°id
,

2502 
sm_°‹e_öfo_t
& 
öfo


2505 
sdesc_t
* 
sd
;

2506 
	`W_DO
–
dú
->
	`ac˚ss
(
°id
, 
sd
, 
NL
) );

2508 c⁄° 
söfo_s
& 
s

sd
->
	`söfo
();

2510 
öfo
.
°‹e
 = 
s
.store;

2511 
öfo
.
°y≥
 = 
s
.stype;

2512 
öfo
.
¡y≥
 = 
s
.ntype;

2513 
öfo
.
cc
 = 
s
.cc;

2514 
öfo
.
eff
 = 
s
.eff;

2515 
öfo
.
œrge_°‹e
 = 
s
.large_store;

2516 
öfo
.
roŸ
 = 
s
.root;

2517 
öfo
.
nkc
 = 
s
.nkc;

2519 
sd
->
	`söfo
().
¡y≥
) {

2520 
t_båì
:

2521 
t_uni_båì
:

2523 
t_mrbåì
:

2524 
t_uni_mrbåì
:

2525 
t_mrbåì_l
:

2526 
t_uni_mrbåì_l
:

2527 
t_mrbåì_p
:

2528 
t_uni_mrbåì_p
:

2530 
	`W_DO
–
key_ty≥_s
::
	`gë_key_ty≥
(
öfo
.
keydes¸
,

2531 
öfo
.
keydes¸Àn
,

2532 
sd
->
	`söfo
().
nkc
, sd->söfo().
kc
 ));

2537  
RCOK
;

2538 
	}
}

	@src/sm/smsh/out_of_log_space.cpp

25 
	#SM_LEVEL
 1

	)

26 
	#SM_SOURCE


	)

27 
	#XCT_C


	)

28 
	~"sm_öt_1.h
"

29 
	~"e_îr‹_def_gí.h
"

31 
	~<sm_vas.h
>

34 
tid_t
 
	g∑n
;

35 
	gnˇŒs
 = 0;

37 
˛ass
 
ss_m
* 
sm
;

39 
w_rc_t
 
	$gë_¨chived_log_fûe
 (

40 c⁄° *
dú«me
,

41 
ss_m
::
∑πôi⁄_numbî_t
 
num
)

43 
	`Ârötf
(
°dîr
,

45 
dú«me
, 
num
);

46  
RCOK
;

47 
	}
}

49 
w_rc_t
 
	$out_of_log_•a˚
 (

50 
x˘_i
* ,

51 
x˘_t
 *& 
xd
,

52 
smÀvñ_0
::
fûeoff_t
 
cuº
,

53 
smÀvñ_0
::
fûeoff_t
 
thªsh
,

54 c⁄° *
dú«me


57 
w_rc_t
 
rc
;

58 
	`Ârötf
(
°dîr
,

60 (Ë
cuº
, (Ë
thªsh
, 
dú«me
);

62 
w_o°r°ªam
 
o
;

63 
o
 << 
xd
->
	`tid
(Ë<< 
ídl
;

64 
	`Ârötf
(
°dîr
, "ˇŒed wôh x˘ %s\n" , 
o
.
	`c_°r
());

67 
w_o°r°ªam
 
o
;

68 
sm_°©s_öfo_t
 
cuº
;

70 
	`W_DO
–
sm
->
	`g©hî_°©s
(
cuº
));

72 
o
 << 
cuº
 << 
íds
;

73 
	`Ârötf
(
°dîr
, "°©s: %s\n" , 
o
.
	`c_°r
());

75 
x˘_t
 *
	`ﬁdx˘
(
NULL
);

77 
w_o°r°ªam
 
o
;

78 
o
 << "A˘ivêx˘s: " << 
x˘_t
::
	`num_a˘ive_x˘s
();

80 
tid_t
 
ﬁd
 = 
x˘_t
::
	`ﬁde°_tid
();

81 
o
 << "Olde°Åønß˘i⁄: " << 
ﬁd
;

83 
x˘_t
 *
x
 = x˘_t::
	`look_up
(
ﬁd
);

84 if(
x
==
NULL
) {

85 
	`Ârötf
(
°dîr
, "CouldÇŸ föd %s\n", 
o
.
	`c_°r
());

86 
	`W_FATAL
(
fcINTERNAL
);

89 
o
 << " Fú°Ü¢: " << 
x
->
	`fú°_l¢
();

90 
o
 << " La°Ü¢: " << 
x
->
	`œ°_l¢
();

92 
	`Ârötf
(
°dîr
, "%s\n" , 
o
.
	`c_°r
());

94 
ﬁdx˘
 = 
x
;

96 
	`Ârötf
(
°dîr
, "MoveásideÜog file %sÅo %s\n", "XXX", "YYY");

98 #i‡
DEAD


99 
w_rc_t
 
rc
;

100 
xd
 = 
	`me
()->
	`x˘
();

101 if(
xd
) {

102 
	`CRITICAL_SECTION
(
cs
, 
oví
);

103 
nˇŒs
++;

104 if(
∑n
 !
tid_t
::
nuŒ
) {

105 
x˘_t
* 
xx
 = x˘_t::
	`look_up
(
∑n
);

106 if(!
xx
) {

108 
cout
 << "Nÿl⁄gîáb‹tögÅx " << 
∑n


109 << " (nˇŒ†" << 
nˇŒs
 << ")" <<
ídl
;

110 
∑n
 = 
tid_t
::
nuŒ
;

111 
nˇŒs
 = 0;

114 if(
∑n
 =
tid_t
::
nuŒ
) {

115 
cout
 << " Cuº=" << 
cuº
 << " Thªsh=" << 
thªsh
 <<
ídl
;

116 
cout
 << " Rëu∫ög E_USERABORT f‹ x˘ " << 
xd
->
	`tid
(Ë<< 
ídl
;

117 
∑n
 = 
xd
->
	`tid
();

118 
rc
 = 
	`RC
(
E_USERABORT
);

122 
	`me
()->
	`yõld
();

123 
xd
 = 0;

127  
rc
;

128 
	}
}

	@src/sm/smsh/random_kick.cpp

30 
	~"w_deföes.h
"

34 
	~<os_ty≥s.h
>

35 
	~<csig«l
>

36 
	~<c°dlib
>

37 
	~<io°ªam
>

38 
	~<sig«l.h
>

44 
øndom
();

45 
§™dom
();

46 *
öô°©e
(, *, 
size_t
);

47 *
£t°©e
(*);

51 
	gr£ed
=1;

52 
	gr°©e
[32]= {

64 
	$d‹™dom
(
mod
)

66 
ªs
 = 
	`øndom
();

68 if(
mod
==0) {

69 (Ë
	`£t°©e
((*)
r°©e
);

70 
	`§™dom
(
r£ed
);

71 } if(
mod
>0) {

72 
ªs
 %
mod
;

74  (Ë
ªs
;

75 
	}
}

78 
	$dõ
(

82 
cout
 << 
Êush
;

83 
	`exô
(158);

84 
	}
}

87 
	$maö
(

88 
ac
,

89 *
av
[]

92 i‡(
ac
 != 6) {

93 
˚º
 << "Usage: "

94 << 
av
[0]

96 << 
ídl
;

100 
	`sig«l
(
SIGUSR1
, 
SIG_IGN
);

101 
	`sig«l
(
SIGUSR2
, 
dõ
);

103 
pid
, 
sig
;

104 
max0
 = 
	`©oi
(
av
[3]);

105 
max1
 = 
	`©oi
(
av
[4]);

106 
max2
 = 
	`©oi
(
av
[5]);

107 
sig
 = 
	`©oi
(
av
[1]);

108 
pid
 = 
	`©oi
(
av
[2]);

110 
ˇãg‹y
=0, 
t
=0;

112 
pid_t
 
µ
 = 
	`gëµid
();

113 if(
µ
 == 1) {

114 
˚º
 << "øndom_kick:Ö¨íàwíàaway --Éxôög " << 
ídl
;

118 
ˇãg‹y
 = 
	`d‹™dom
(3);

120 
ˇãg‹y
) {

122 
t
=
	`d‹™dom
(
max0
);

125 
t
=
	`d‹™dom
(
max1
);

128 
t
=
	`d‹™dom
(
max2
);

131 
cout
 << "øndom_kick:Öid " << 
	`gëpid
(Ë<< " sÀï... " << 
t
 << 
ídl
;

132 if(
t
>0) {

133 
	`¶ìp
(
t
);

135 
cout
 << "øndom_kick: kû»" << 
pid
 << "," << 
sig
 << 
ídl
;

136 
	`kûl
(
pid
, 
sig
);

139 
	}
}

	@src/sm/smsh/shell.cpp

30 
	~"w_deföes.h
"

34 
	#SHELL_C


	)

37 
	~"shñl.h
"

39 
	~<c°dio
>

40 
	~<f°ªam
>

41 
	~<w_°r°ªam.h
>

43 
	~<°rögs.h
>

44 
	~<˘y≥.h
>

46 #ifde‡
__GNUG__


47 
	#IOS_FAIL
(
°ªam
Ë°ªam.
	`£t°©e
(
ios
::
Áûbô
)

	)

49 
	#IOS_FAIL
(
°ªam
Ë°ªam.
	`£t°©e
(
ios_ba£
::
Áûbô
)

	)

56 
__thªad
 
ønd48
* 
gíî©‹p
(
NULL
);

57 
__thªad
 * 
ªsu…ch¨buÂ
(
NULL
);

58 
__thªad
 
vec_t
 * 
ªsu…ve˝
(
NULL
);

59 
__thªad
 
s‹t_°ªam_i
* 
s‹tc⁄èöîp
(
NULL
);

61 
__thªad
 
	goutbuf
[(
ss_m
::
∑ge_sz
 * 4) > (1024 * 16) ?

62 (
ss_m
::
∑ge_sz
 * 4) : (1024 * 16) ];

63 
__thªad
 
w_o°r°ªam
 *
t˛ouç
(
NULL
);

65 
	gønd48
 &
	$gë_gíî©‹
() {

66 i‡(
gíî©‹p
 =
NULL
) {

67 
gíî©‹p
 = 
√w
 
ønd48
;

69  *
gíî©‹p
;

70 
	}
}

72 *
	$gë_ªsu…ch¨buf
() {

73 i‡(
ªsu…ch¨buÂ
 =
NULL
) {

74 
ªsu…ch¨buÂ
 = 
√w
 [100];

76  
ªsu…ch¨buÂ
;

77 
	}
}

79 
	gvec_t
 &
	$gë_ªsu…vec
() {

80 i‡(
ªsu…ve˝
 =
NULL
) {

81 
ªsu…ve˝
 = 
√w
 
vec_t
;

83  *
ªsu…ve˝
;

84 
	}
}

86 
s‹t_°ªam_i
 *
	$gë_s‹t_c⁄èöî
() {

87  
s‹tc⁄èöîp
;

88 
	}
}

90 
s‹t_°ªam_i
 *
	$ª∂a˚_s‹t_c⁄èöî
(

91 
s‹t_°ªam_i
 *
ª∂a˚mít
 ) {

92 i‡(
s‹tc⁄èöîp
 !
NULL
) {

93 
dñëe
 
s‹tc⁄èöîp
;

95 
s‹tc⁄èöîp
 = 
ª∂a˚mít
;

96  
s‹tc⁄èöîp
;

97 
	}
}

99 
	gw_o°r°ªam
 &
	$gë_t˛out
() {

100 i‡(
t˛ouç
 =
NULL
) {

101 
t˛ouç
 = 
√w
 
	`w_o°r°ªam
(
outbuf
, (outbuf));

103  *
t˛ouç
;

104 
	}
}

106 
	$˛ón_up_shñl
()

109 if(
gíî©‹p
 !
NULL
Ë
dñëe
 generatorp;

110 
gíî©‹p
 = 
NULL
;

113 if(
ªsu…ch¨buÂ
 !
NULL
Ë
dñëe
 []Ñesultcharbufp;

114 
ªsu…ch¨buÂ
 = 
NULL
;

117 if(
ªsu…ve˝
 !
NULL
Ë
dñëe
Ñesultvecp;

118 
ªsu…ve˝
 = 
NULL
;

121 if(
s‹tc⁄èöîp
 !
NULL
Ë
dñëe
 sortcontainerp;

122 
s‹tc⁄èöîp
 = 
NULL
;

125 if(
t˛ouç
 !
NULL
Ë
dñëe
Åcloutp;

126 
t˛ouç
 = 
NULL
;

127 
	}
}

130 #i‡
deföed
(
W_DEBUG
Ë|| deföed(
SSH_DUMPRC
)

135 #ifde‡
SSH_DUMPRC


136 
	#DEFAULT_DUMPRC
 
åue


	)

138 
	#DEFAULT_DUMPRC
 
Ál£


	)

140 
boﬁ
 
	gdum¥c
 = 
DEFAULT_DUMPRC
;

144 
	$cvt_°‹e_t
(
ss_m
::
°‹e_t
 
n
)

146 
n
) {

147 
ss_m
::
t_bad_°‹e_t
:

149 
ss_m
::
t_ödex
:

151 
ss_m
::
t_fûe
:

153 
ss_m
::
t_lgªc
:

157 
	}
}

159 
	$cvt_ndx_t
(
ss_m
::
ndx_t
 
n
)

161 
n
) {

162 
ss_m
::
t_båì
:

164 
ss_m
::
t_uni_båì
:

166 
ss_m
::
t_πªe
:

168 
ss_m
::
t_bad_ndx_t
:

172 
	}
}

174 
	$cvt_c⁄cuºícy_t
–
ss_m
::
c⁄cuºícy_t
 
cc
)

176 
cc
) {

177 
ss_m
::
t_cc_n⁄e
:

179 
ss_m
::
t_cc_ªc‹d
:

181 
ss_m
::
t_cc_∑ge
:

183 
ss_m
::
t_cc_fûe
:

185 
ss_m
::
t_cc_vﬁ
:

187 
ss_m
::
t_cc_kvl
:

189 
ss_m
::
t_cc_modkvl
:

191 
ss_m
::
t_cc_im
:

193 
ss_m
::
t_cc_≠≥nd
:

195 
ss_m
::
t_cc_bad
:

199 
	}
}

201 c⁄° *
	$check_com¥ess_Êag
(c⁄° *
kd
)

203 if(!
f‹˚_com¥ess
) {

204  
kd
;

206 *
_ªsu…
 = 
	`gë_ªsu…ch¨buf
();

207 
kd
[0]) {

209 
_ªsu…
[0] = 'B';

212 
_ªsu…
[0] = 'I';

215 
_ªsu…
[0] = 'U';

218 
_ªsu…
[0] = 'F';

221 
_ªsu…
[0] = 
kd
[0];

224 
	`mem˝y
(&
_ªsu…
[1], &
kd
[1], 
	`°æí
(kd));

225  
_ªsu…
;

226 
	}
}

229 
vid_t


230 
	$make_vid_‰om_lvid
(c⁄° * 
lv
)

233 i‡(!
	`°rchr
(
lv
, '.')) {

234 
vid_t
 
vid
;

235 
w_i°r°ªam
 
	`™⁄
(
lv
);

236 
™⁄
 >> 
vid
;

238  
vid
;

240 
uöt2_t
 
vid
;

241 
w_i°r°ªam
 
	`™⁄
(
lv
); 
™⁄
 >> 
vid
;

242 
°d
::
˚º
 << "TryögÅÿ¸óã vid from " << 
lv


243 << "Ñesu…=" << 
vid


244 << 
°d
::
ídl
;

245  
	`vid_t
(
vid
);

246 
	}
}

248 
	$t˛_sˇn_boﬁ
(c⁄° *
ªp
, 
boﬁ
 &
ªsu…
)

250 i‡(
	`°rˇ£cmp
(
ªp
, "true") == 0) {

251 
ªsu…
 = 
åue
;

252  
TCL_OK
;

255 i‡(
	`°rˇ£cmp
(
ªp
, "false") == 0) {

256 
ªsu…
 = 
Ál£
;

257  
TCL_OK
;

260  
TCL_ERROR
;

261 
	}
}

264 
	$t˛_sˇn_Êag
(c⁄° *
s
, 
boﬁ
 &
ªsu…
)

266 i‡(
	`°rˇ£cmp
(
s
, "⁄"Ë=0 || 
	`°rcmp
(s, "1") == 0

267 || 
	`°rˇ£cmp
(
s
, "yes") == 0) {

268 
ªsu…
 = 
åue
;

269  
TCL_OK
;

272 i‡(
	`°rˇ£cmp
(
s
, "off"Ë=0 || 
	`°rcmp
(s, "0") == 0

273 || 
	`°rˇ£cmp
(
s
, "no") == 0) {

274 
ªsu…
 = 
Ál£
;

275  
TCL_OK
;

279  
TCL_ERROR
;

280 
	}
}

283 
	gss_m
::
ndx_t
 
cvt2ndx_t
(c⁄° *
s
);

286 
	$cvt2lockid_t
(c⁄° *
°r
, 
lockid_t
 &
n
)

288 
°id_t
 
°id
;

289 
Õid_t
 
pid
;

290 
rid_t
 
rid
;

291 
kvl_t
 
kvl
;

292 
vid_t
 
vid
;

293 
extid_t
 
extid
;

294 
lockid_t
::
u£r1_t
 
u1
;

295 
lockid_t
::
u£r2_t
 
u2
;

296 
lockid_t
::
u£r3_t
 
u3
;

297 
lockid_t
::
u£r4_t
 
u4
;

299 *
°r
 && 
	`is•a˚
(*str)) str++;

301 
dummych¨
;

302 
Àn
 = 
	`°æí
(
°r
);

304 
w_i°r°ªam
 
	`ss
(
°r
, 
Àn
);

311 
°r
[0]) {

315 
ss
 >> 
dummych¨
;

318 
ss
 >> 
°id
;

321 
ss
 >> 
extid
;

324 
ss
 >> 
rid
;

327 
ss
 >> 
pid
;

330 
ss
 >> 
kvl
;

333 i‡(
Àn
 < 2) {

334 
	`IOS_FAIL
(
ss
);

337 
°r
[1]) {

339 
ss
 >> 
u1
;

342 
ss
 >> 
u2
;

345 
ss
 >> 
u3
;

348 
ss
 >> 
u4
;

351 
	`IOS_FAIL
(
ss
);

357 
ss
 >> 
vid
;

361 i‡(!
ss
) {

362 
˚º
 << "cvt2lockid_t: badÜockid -- " << 
°r
 << 
ídl
;

363 
	`ab‹t
();

367 
°r
[0]) {

369 
n
 = 
	`lockid_t
(
°id
);

372 
n
 = 
	`lockid_t
(
rid
);

375 
n
 = 
	`lockid_t
(
pid
);

378 
n
 = 
	`lockid_t
(
extid
);

381 
n
 = 
	`lockid_t
(
kvl
);

384 
°r
[1]) {

386 
n
 = 
	`lockid_t
(
u1
);

389 
n
 = 
	`lockid_t
(
u2
);

392 
n
 = 
	`lockid_t
(
u3
);

395 
n
 = 
	`lockid_t
(
u4
);

400 
n
 = 
	`lockid_t
(
vid
);

405 
	}
}

407 
boﬁ


408 
	$u£_logiˇl_id
(
T˛_I¡îp
*)

410  
Ál£
;

411 
	}
}

445 
	go°ªam
 &
	$f‹m©_±r
(
o°ªam
 &
o
, c⁄° *
±r
)

449 i‡(!
±r
)

450  
o
 << "0";

452  
o
 << 
±r
;

453 
	}
}

461 
	go°ªam
 &
	$f‹m©_±r_nuŒ
(
o°ªam
 &
o
, c⁄° *
±r
)

463 i‡(!
±r
)

464  
o
 << "NULL";

465  
	`f‹m©_±r
(
o
, 
±r
);

466 
	}
}

470 
	$ªad_±r
(
T˛_I¡îp
 *, c⁄° *
s
, *&
±r
)

472 *
t
;

473 
l
 = -1;

474 
boﬁ
 
ok
 = 
åue
;

478 
	`is•a˚
(*
s
)) s++;

480 
l
 = 
	`°πﬁl
(
s
, &
t
, 16);

483 
	`is•a˚
(*
t
))Å++;

486 
ok
 = !(
s
 =
t
 || *t != 0);

489 i‡(!
ok
)

490 
l
 = 
	`°πﬁl
(
s
, &
t
, 10);

493 
ok
 = !(
s
 =
t
 || *t != 0);

495 
±r
 = (*Ë(
ok
 ? 
l
 : 0);

497  
ok
 ? 0 : -1;

498 
	}
}

505 
	#READ_PTR
(
TYPE
) \

506 
	`ªad_±r
(
T˛_I¡îp
 *
ù
, c⁄° *
s
, 
TYPE
 *&
±r
) \

508  
	`ªad_±r
(
ù
, 
s
, (*&Ë
±r
); \

509 }

	)

511 
	$READ_PTR
(
x˘_t
)

512 
	$READ_PTR
(
sm_qu¨k_t
)

513 
	$READ_PTR
(
pö_i
)

514 
	$READ_PTR
(
sˇn_ödex_i
)

515 
	$READ_PTR
(
sˇn_fûe_i
)

516 
	$READ_PTR
(
≠≥nd_fûe_i
)

519 
vec_t
 &

520 
	$∑r£_vec
(c⁄° *
c
, 
Àn
)

522 
vec_t
 &
	`junk
(
	`gë_ªsu…vec
());

524 
smsize_t
 
i
;

526 
junk
.
	`ª£t
();

527 if(::
	`°∫cmp
(
c
, "zvec", 4)==0) {

528 
c
+=4;

529 
i
 = 
	`obje˘size
(
c
);

530 c⁄° 
zvec_t
 
	`i_zvec_tmp
(
i
);

531 
junk
.
	`£t
(
i_zvec_tmp
);

533  
junk
;

536 
junk
.
	`put
(
c
, 
Àn
);

537  
junk
;

538 
	}
}

541 
	$t_checkpoöt
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

543 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

544 
	`DO
(
sm
->
	`checkpoöt
());

545  
TCL_OK
;

546 
	}
}

549 
	$t_¶ìp
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

551 i‡(
	`check
(
ù
, "mûli£c⁄ds", 
ac
, 2)Ë 
TCL_ERROR
;

552 
timeout
 = 
	`©oi
(
av
[1]);

553 
	`me
()->
	`¶ìp
(
timeout
);

554  
TCL_OK
;

555 
	}
}

559 
	$t_lock_timeout
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

561 i‡(
	`check
(
ù
, "mûli£c⁄ds", 
ac
, 2)Ë 
TCL_ERROR
;

562 
timeout
 = 
	`©oi
(
av
[1]);

563 
	`me
()->
	`lock_timeout
(
timeout
);

564  
TCL_OK
;

565 
	}
}

568 
	$t_begö_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

570 i‡(
	`check
(
ù
, "[lockÅimeouàö ms]", 
ac
, 1, 2))

571  
TCL_ERROR
;

572 
timeout
=0;

573 i‡(
ac
 =2Ë
timeout
 = 
	`©oi
(
av
[1]);

576 
sm_°©s_öfo_t
 *
s
 = 
√w
 sm_stats_info_t;

577 
	`mem£t
(
s
, '\0', (
sm_°©s_öfo_t
));

578 if(
timeout
 > 0) {

579 
	`me
()->
	`lock_timeout
(
timeout
);

580 
	`DO
–
sm
->
	`begö_x˘
(
s
, 
WAIT_SPECIFIED_BY_THREAD
) );

583 
	`DO
–
sm
->
	`begö_x˘
(
s
) );

585  
TCL_OK
;

586 
	}
}

589 
	$t_commô_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

591 i‡(
	`check
(
ù
, "[œzy]", 
ac
, 1, 2)Ë 
TCL_ERROR
;

592 
boﬁ
 
œzy
 = 
Ál£
;

593 i‡(
ac
 =2Ë
œzy
 = (
	`°rcmp
(
av
[1], "lazy") == 0);

594 
sm_°©s_öfo_t
 *
s
=0;

595 
	`DO
–
sm
->
	`commô_x˘
(
s
, 
œzy
) );

599 if(
löked
.
ö°rumít_Êag
 && 
s
) {

600 
	`w_ª£t_°r°ªam
(
t˛out
);

601 
t˛out
 << *
s
 << 
íds
;

603 
dñëe
 
s
;

604  
TCL_OK
;

605 
	}
}

608 
	$t_chaö_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

610 i‡(
	`check
(
ù
, "[œzy]", 
ac
, 1, 2)Ë 
TCL_ERROR
;

611 
boﬁ
 
œzy
 = 
Ál£
;

612 i‡(
ac
 =2Ë
œzy
 = (
	`°rcmp
(
av
[1], "lazy") == 0);

617 
sm_°©s_öfo_t
 *
s
 = 
√w
 sm_stats_info_t;

618 
	`mem£t
(
s
, '\0', (
sm_°©s_öfo_t
));

619 
	`DO
–
sm
->
	`chaö_x˘
(
s
, 
œzy
) );

623 if(
löked
.
ö°rumít_Êag
 && 
s
) {

624 
	`w_ª£t_°r°ªam
(
t˛out
);

625 
t˛out
 << *
s
 << 
íds
;

627 
dñëe
 
s
;

628  
TCL_OK
;

629 
	}
}

632 
	$t_£t_co‹dö©‹
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

635 i‡(
	`check
(
ù
, "h™dÀ", 
ac
, 2)Ë 
TCL_ERROR
;

636 
£rvî_h™dÀ_t
 
	`h
(
av
[1]);

637 
	`DO
–
sm
->
	`£t_co‹dö©‹
(
h
));

638  
TCL_OK
;

639 
	}
}

642 
	$t_íãr2pc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

644 i‡(
	`check
(
ù
, "gtid_t", 
ac
, 2)Ë 
TCL_ERROR
;

645 
gtid_t
 
	`g
(
av
[1]);

646 
	`DO
–
sm
->
	`íãr_2pc
(
g
));

647  
TCL_OK
;

648 
	}
}

651 
	$t_ªcovî2pc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

653 i‡(
	`check
(
ù
, "gtid_t", 
ac
, 2)Ë 
TCL_ERROR
;

655 
gtid_t
 
	`g
(
av
[1]);

656 
tid_t
 
t
;

657 
	`DO
–
sm
->
	`ªcovî_2pc
(
g
, 
åue
, 
t
));

658 
	`w_ª£t_°r°ªam
(
t˛out
);

659 
t˛out
 << 
t
 << 
íds
;

660 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

661 
	`w_ª£t_°r°ªam
(
t˛out
);

662  
TCL_OK
;

663 
	}
}

666 
	$t_num_a˘ive
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

668 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

670 
num
 = 
ss_m
::
	`num_a˘ive_x˘s
();

671 
	`w_ª£t_°r°ªam
(
t˛out
);

672 
t˛out
 << 
num
 << 
íds
;

673 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

674 
	`w_ª£t_°r°ªam
(
t˛out
);

675  
TCL_OK
;

676 
	}
}

679 
	$t_num_¥ï¨ed
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

681 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

683 
numu
=0, 
num
=0;

684 
	`DO
–
sm
->
	`quîy_¥ï¨ed_x˘
(
num
));

685 
num
 +
numu
 ;

686 
	`w_ª£t_°r°ªam
(
t˛out
);

687 
t˛out
 << 
num
 << 
íds
;

688 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

689 
	`w_ª£t_°r°ªam
(
t˛out
);

690  
TCL_OK
;

691 
	}
}

694 
	$t_¥ï¨e_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

696 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

697 
sm_°©s_öfo_t
 *
s
=0;

698 
vŸe_t
 
v
;

699 
	`DO
–
sm
->
	`¥ï¨e_x˘
(
s
, 
v
));

703 if(
löked
.
ö°rumít_Êag
 && 
s
) {

704 
	`w_ª£t_°r°ªam
(
t˛out
);

705 
t˛out
 << *
s
 << 
íds
;

707 
dñëe
 
s
;

709 
	`w_ª£t_°r°ªam
(
t˛out
);

710 
t˛out
 << 
	`W_ENUM
(
v
Ë<< 
íds
;

711 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

712 
	`w_ª£t_°r°ªam
(
t˛out
);

713  
TCL_OK
;

714 
	}
}

717 
	$t_ab‹t_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

719 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

720 
sm_°©s_öfo_t
 *
s
=0;

721 
	`DO
–
sm
->
	`ab‹t_x˘
(
s
));

725 if(
löked
.
ö°rumít_Êag
 && 
s
) {

726 
	`w_ª£t_°r°ªam
(
t˛out
);

727 
t˛out
 << *
s
 << 
íds
;

729 
dñëe
 
s
;

730  
TCL_OK
;

731 
	}
}

734 
	$t_ßve_w‹k
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

736 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

737 
sm_ßve_poöt_t
 
•
;

738 
	`DO
–
sm
->
	`ßve_w‹k
(
•
) );

739 
	`w_ª£t_°r°ªam
(
t˛out
);

740 
t˛out
 << 
•
 << 
íds
;

741 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

742 
	`w_ª£t_°r°ªam
(
t˛out
);

743  
TCL_OK
;

744 
	}
}

747 
	$t_rﬁlback_w‹k
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

749 i‡(
	`check
(
ù
, "ßvïoöt", 
ac
, 2)Ë 
TCL_ERROR
;

750 
sm_ßve_poöt_t
 
•
;

752 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
•
;

753 
	`DO
–
sm
->
	`rﬁlback_w‹k
(
•
));

755  
TCL_OK
;

756 
	}
}

759 
	$t_›í_qu¨k
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

761 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

763 
sm_qu¨k_t
 *
qu¨k

√w
 sm_quark_t;

764 
	`DO
(
qu¨k
->
	`›í
());

765 
	`w_ª£t_°r°ªam
(
t˛out
);

766 
	`f‹m©_±r
(
t˛out
, 
qu¨k
Ë<< 
íds
;

767 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

768 
	`w_ª£t_°r°ªam
(
t˛out
);

769  
TCL_OK
;

770 
	}
}

773 
	$t_˛o£_qu¨k
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

775 i‡(
	`check
(
ù
, "˛o£_qu¨k qu¨k", 
ac
, 2, 2)Ë 
TCL_ERROR
;

777 
sm_qu¨k_t
 *
qu¨k
 = 0;

778 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
qu¨k
)Ë 
TCL_ERROR
;

780 
	`DO
(
qu¨k
->
	`˛o£
());

781 
dñëe
 
qu¨k
;

782  
TCL_OK
;

783 
	}
}

786 
	$t_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

788 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

790 
	`w_ª£t_°r°ªam
(
t˛out
);

791 
	`f‹m©_±r
(
t˛out
, 
	`me
()->
	`x˘
()Ë<< 
íds
;

792 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

795  
TCL_OK
;

796 
	}
}

799 
	$t_©èch_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

801 i‡(
	`check
(
ù
, "x˘", 
ac
, 2))

802  
TCL_ERROR
;

804 
x˘_t
 *
x
 = 0;

805 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
x
)) {

807  
TCL_ERROR
;

811 
	`me
()->
	`©èch_x˘
(
x
);

813  
TCL_OK
;

814 
	}
}

817 
	$t_dëach_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

819 i‡(
	`check
(
ù
, "x˘", 
ac
, 2))

820  
TCL_ERROR
;

822 
x˘_t
 *
x
 = 0;

823 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
x
)Ë 
TCL_ERROR
;

826 
	`me
()->
	`dëach_x˘
(
x
);

828  
TCL_OK
;

829 
	}
}

832 
	$t_°©e_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

834 i‡(
	`check
(
ù
, "x˘", 
ac
, 2))

835  
TCL_ERROR
;

837 
x˘_t
 *
x
 = 0;

838 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
x
)Ë 
TCL_ERROR
;

840 
ss_m
::
x˘_°©e_t
 
t
 = 
sm
->
	`°©e_x˘
(
x
);

842 
	`w_ª£t_°r°ªam
(
t˛out
);

843 
t
) {

844 
ss_m
::
x˘_°Æe
:

845 
t˛out
 << "x˘_°Æe" << 
íds
;

847 
ss_m
::
x˘_a˘ive
:

848 
t˛out
 << "x˘_a˘ive" << 
íds
;

850 
ss_m
::
x˘_¥ï¨ed
:

851 
t˛out
 << "x˘_¥ï¨ed" << 
íds
;

853 
ss_m
::
x˘_ab‹tög
:

854 
t˛out
 << "x˘_ab‹tög" << 
íds
;

856 
ss_m
::
x˘_chaöög
:

857 
t˛out
 << "x˘_chaöög" << 
íds
;

859 
ss_m
::
x˘_commôtög
:

860 
t˛out
 << "x˘_commôtög" << 
íds
;

862 
ss_m
::
x˘_‰ìög_•a˚
:

863 
t˛out
 << "x˘_‰ìög_•a˚" << 
íds
;

865 
ss_m
::
x˘_íded
:

866 
t˛out
 << "x˘_íded" << 
íds
;

869 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

870 
	`w_ª£t_°r°ªam
(
t˛out
);

871  
TCL_OK
;

872 
	}
}

875 
	$t_tid_to_x˘
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

877 i‡(
	`check
(
ù
, "x˘", 
ac
, 2))

878  
TCL_ERROR
;

880 
tid_t
 
t
;

881 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
t
;

883 
x˘_t
* 
x
 = 
sm
->
	`tid_to_x˘
(
t
);

884 
	`w_ª£t_°r°ªam
(
t˛out
);

885 
	`f‹m©_±r
(
t˛out
, 
x
Ë<< 
íds
;

886 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

887 
	`w_ª£t_°r°ªam
(
t˛out
);

888  
TCL_OK
;

889 
	}
}

891 
	$t_x˘_to_tid
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

893 i‡(
	`check
(
ù
, "x˘", 
ac
, 2))

894  
TCL_ERROR
;

896 
x˘_t
 *
x
 = 0;

897 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
x
)Ë 
TCL_ERROR
;

899 if(
x
) {

900 
tid_t
 
t
 = 
sm
->
	`x˘_to_tid
(
x
);

901 
	`w_ª£t_°r°ªam
(
t˛out
);

902 
t˛out
 << 
t
 << 
íds
;

903 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

904  
TCL_OK
;

906 
	`T˛_AµídResu…
(
ù
, "CannotÅake xct_to_tid ofÇull xct", 0);

907  
TCL_ERROR
;

909 
	}
}

911 "C" 
¥öt_Æl_œtches
();

913 
	$t_dump_œtches
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

915 i‡(
	`check
(
ù
, "", 
ac
, 1))

916  
TCL_ERROR
;

918 
	`¥öt_Æl_œtches
();

919  
TCL_OK
;

920 
	}
}

923 
	$t_dump_x˘s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

925 i‡(
	`check
(
ù
, "", 
ac
, 1))

926  
TCL_ERROR
;

928 
	`DO
–
sm
->
	`dump_x˘s
(
cout
) );

929  
TCL_OK
;

930 
	}
}

932 "C" 
˛ór_Æl_fögî¥öts
();

934 
	$t_ªöô_fögî¥öts
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

936 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

937 
	`˛ór_Æl_fögî¥öts
();

938  
TCL_OK
;

939 
	}
}

941 
	$t_f‹˚_buf„rs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

943 i‡(
	`check
(
ù
, "[Êush]", 
ac
, 1,2)Ë 
TCL_ERROR
;

944 
boﬁ
 
Êush
 = 
Ál£
;

945 i‡(
ac
 == 2) {

946 
Êush
 = 
åue
;

948 
	`DO
–
sm
->
	`f‹˚_buf„rs
(
Êush
) );

949  
TCL_OK
;

950 
	}
}

954 
	$t_f‹˚_vﬁ_hdr_buf„rs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

956 i‡(
	`check
(
ù
, "lvid", 
ac
, 2)Ë 
TCL_ERROR
;

958 i‡(
av
) {}

960 
vid_t
 
vid
;

961 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
vid
;

962 
	`DO
–
sm
->
	`f‹˚_vﬁ_hdr_buf„rs
(
vid
) );

963  
TCL_OK
;

964 
	}
}

968 
	$t_¢≠shŸ_buf„rs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

970 i‡(
	`check
(
ù
, "", 
ac
, 1))

971  
TCL_ERROR
;

973 i‡(
av
) {}

975 
u_öt
 
ndúty
, 
n˛ón
, 
n‰ì
, 
nfixed
;

976 
	`DO
–
sm
->
	`¢≠shŸ_buf„rs
(
ndúty
, 
n˛ón
, 
n‰ì
, 
nfixed
) );

978 
	`w_ª£t_°r°ªam
(
t˛out
);

979 
t˛out
 << "ndúty " << 
ndúty


980 << "Ç˛ó¿" << 
n˛ón


981 << "Ç‰ì " << 
n‰ì


982 << "Çfixed " << 
nfixed


983 << 
íds
;

985 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

986 
	`w_ª£t_°r°ªam
(
t˛out
);

987  
TCL_OK
;

988 
	}
}

991 
	$t_mem_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

993 i‡(
	`check
(
ù
, "[ª£t]", 
ac
, 1,2))

994  
TCL_ERROR
;

996 
boﬁ
 
ª£t
 = 
Ál£
;

997 i‡(
ac
 == 2) {

998 i‡(
	`°rcmp
(
av
[1], "reset") == 0) {

999 
ª£t
 = 
åue
;

1003 #i‡
DEAD


1004 
	`w_ª£t_°r°ªam
(
t˛out
);

1006 
size_t
 
amt
=0, 
num
=0, 
hiw©
;

1007 
	`w_sh‹e_Æloc_°©s
(
amt
, 
num
, 
hiw©
);

1008 
t˛out
 << 
amt
 << " bytesállocated in main heap in "

1009 << 
num


1010 << " cÆls, high w©î m¨k" << 
hiw©


1011 << 
íds
;

1013 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1014 
	`w_ª£t_°r°ªam
(
t˛out
);

1016  
TCL_OK
;

1017 
	}
}

1020 
	$t_g©hî_x˘_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1022 i‡(
	`check
(
ù
, "[ª£t]", 
ac
, 1,2))

1023  
TCL_ERROR
;

1025 
boﬁ
 
ª£t
 = 
Ál£
;

1026 i‡(
ac
 == 2) {

1027 i‡(
	`°rcmp
(
av
[1], "reset") == 0) {

1028 
ª£t
 = 
åue
;

1032 
sm_°©s_öfo_t
* 
°©s
 = 
√w
 sm_stats_info_t;

1033 
w_auto_dñëe_t
<
sm_°©s_öfo_t
> 
	`autodñ
(
°©s
);

1035 
sm_°©s_öfo_t
& 
öã∫Æ
 = *
°©s
;

1037 
	`DO
–
sm
->
	`g©hî_x˘_°©s
(
öã∫Æ
, 
ª£t
));

1039 
	`w_ª£t_°r°ªam
(
t˛out
);

1040 
t˛out
 << 
öã∫Æ
 << 
íds
;

1042 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1043 
	`w_ª£t_°r°ªam
(
t˛out
);

1044  
TCL_OK
;

1045 
	}
}

1048 
	$t_g©hî_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1050 i‡(
	`check
(
ù
, "[ª£t]", 
ac
, 1,2))

1051  
TCL_ERROR
;

1053 
boﬁ
 
ª£t
 = 
Ál£
;

1054 i‡(
ac
 == 2) {

1055 i‡(
	`°rcmp
(
av
[1], "reset") == 0) {

1056 
ª£t
 = 
åue
;

1060 
	`w_ª£t_°r°ªam
(
t˛out
);

1062 
sm_°©s_öfo_t
 
œ°_time
;

1063 
sm_°©s_öfo_t
 
cuº
;

1065 
sm_°©s_öfo_t
* 
°©s
 = 
√w
 sm_stats_info_t;

1066 
w_auto_dñëe_t
<
sm_°©s_öfo_t
> 
	`autodñ
(
°©s
);

1067 
sm_°©s_öfo_t
& 
diff
 = *
°©s
;

1070 
	`DO
–
sm
->
	`g©hî_°©s
(
cuº
));

1072 
diff
 = 
cuº
;

1074 
diff
 -
œ°_time
;

1075 if(
ª£t
) {

1077 
œ°_time
 = 
cuº
;

1079 
t˛out
 << 
diff
 << 
íds
;

1081 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1082 
	`w_ª£t_°r°ªam
(
t˛out
);

1083  
TCL_OK
;

1084 
	}
}

1086 
sm_c⁄fig_öfo_t
 
	gglobÆ_sm_c⁄fig_öfo
;

1089 
	$t_c⁄fig_öfo
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

1091 i‡(
	`check
(
ù
, "", 
ac
, 1))

1092  
TCL_ERROR
;

1095 
	`DO
–
sm
->
	`c⁄fig_öfo
(
globÆ_sm_c⁄fig_öfo
));

1097 
	`w_ª£t_°r°ªam
(
t˛out
);

1098 
t˛out
 << 
globÆ_sm_c⁄fig_öfo
 << 
íds
;

1099 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1100 
	`w_ª£t_°r°ªam
(
t˛out
);

1101  
TCL_OK
;

1102 
	}
}

1105 
	$t_£t_disk_dñay
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1107 i‡(
	`check
(
ù
, "mûli_£c", 
ac
, 2))

1108  
TCL_ERROR
;

1110 
uöt4_t
 
m£c
 = 
	`©oi
(
av
[1]);

1111 
	`DO
–
sm
->
	`£t_disk_dñay
(
m£c
));

1113  
TCL_OK
;

1114 
	}
}

1117 
	$t_°¨t_log_c‹ru±i⁄
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

1119 i‡(
	`check
(
ù
, "", 
ac
, 1))

1120  
TCL_ERROR
;

1122 
	`DO
–
sm
->
	`°¨t_log_c‹ru±i⁄
());

1124  
TCL_OK
;

1125 
	}
}

1128 
	$t_sync_log
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

1130 i‡(
	`check
(
ù
, "", 
ac
, 1))

1131  
TCL_ERROR
;

1133 
	`DO
–
sm
->
	`sync_log
());

1135  
TCL_OK
;

1136 
	}
}

1138 "C" 
check_disk
(c⁄° 
vid_t
 &
vid
);

1140 
	$t_check_vﬁume
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1142 i‡(
	`check
(
ù
, "vid", 
ac
, 2))

1143  
TCL_ERROR
;

1145 
vid_t
 
vid
;

1147 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
vid
;

1148 
w_o°r°ªam
 
junk
;

1149 
junk
 << "vid = " << 
vid
 << 
íds
;

1153 
	`check_disk
(
vid
);

1154 
	`w_ª£t_°r°ªam
(
t˛out
);

1156 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1157  
TCL_OK
;

1158 
	}
}

1161 
	$t_vﬁ_roŸ_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1163 i‡(
	`check
(
ù
, "vid", 
ac
, 2))

1164  
TCL_ERROR
;

1166 
vid_t
 
vid
;

1167 
°id_t
 
iid
;

1169 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
vid
;

1170 
	`DO
–
sm
->
	`vﬁ_roŸ_ödex
(
vid
, 
iid
));

1171 
	`w_ª£t_°r°ªam
(
t˛out
);

1172 
t˛out
 << 
iid
 << 
íds
;

1175 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1176  
TCL_OK
;

1177 
	}
}

1180 
	$t_gë_vﬁume_mëa_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1182 i‡(
	`check
(
ù
, "vid [t_cc_n⁄e|t_cc_vﬁume]", 
ac
, 2, 3)) {

1183  
TCL_ERROR
;

1187 
vid_t
 
vid
;

1188 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
vid
;

1190 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_n⁄e
;

1191 i‡(
ac
 > 2) {

1192 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[2]);

1195 
SmVﬁumeMëaSèts
 
vﬁumeSèts
;

1196 
	`DO
–
sm
->
	`gë_vﬁume_mëa_°©s
(
vid
, 
vﬁumeSèts
, 
cc
) );

1198 
	`w_ª£t_°r°ªam
(
t˛out
);

1199 
t˛out


1200 << "tŸÆ_∑ge†" << 
vﬁumeSèts
.
numPages
 << " "

1201 << "sy°m_∑ge†" << 
vﬁumeSèts
.
numSy°emPages
 << " "

1202 << "∑ges_rsvd_f‹_°‹e†" << 
vﬁumeSèts
.
numRe£rvedPages
 << " "

1203 << "∑ges_Æloc_to_°‹e†" << 
vﬁumeSèts
.
numAŒocPages
 << " "

1204 << "max_°‹e†" << 
vﬁumeSèts
.
numSt‹es
 << " "

1205 << "°‹es_Æloˇãd " << 
vﬁumeSèts
.
numAŒocSt‹es


1206 << 
íds
;

1207 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1208 
	`w_ª£t_°r°ªam
(
t˛out
);

1210  
TCL_OK
;

1211 
	}
}

1214 #ifde‡
EXPLICIT_TEMPLATE


1215 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	gSmFûeMëaSèts
>;

1216 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	gsm_°©s_öfo_t
>;

1219 
	$t_gë_fûe_mëa_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1221 c⁄° 
îrSåög
[] = "vid storeNumList [batch|dont_batch] [t_cc_none|t_cc_file]";

1223 i‡(
	`check
(
ù
, 
îrSåög
, 
ac
, 3, 4, 5)) {

1224  
TCL_ERROR
;

1228 
vid_t
 
vid
;

1229 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
vid
;

1231 
numFûes
;

1232 
TCL_SLIST
 **
li°EÀmíts
;

1233 i‡(
	`T˛_S∂ôLi°
(
ù
, 
av
[2], &
numFûes
, &
li°EÀmíts
Ë!
TCL_OK
) {

1234  
TCL_ERROR
;

1237 
SmFûeMëaSèts
* 
fûeSèts
 = 
√w
 SmFûeMëaSèts[
numFûes
];

1238 
w_auto_dñëe_t
<
SmFûeMëaSèts
> 
	`dñëeOnExô
(
fûeSèts
);

1240 
i
 = 0; i < 
numFûes
; ++i) {

1241 
¢um
;

1242 i‡(
	`T˛_GëI¡
(
ù
, 
li°EÀmíts
[
i
], &
¢um
Ë!
TCL_OK
) {

1243 
	`‰ì
(
li°EÀmíts
);

1244  
TCL_ERROR
;

1246 
fûeSèts
[
i
].
smÆlSnum
 = (
¢um_t
)
¢um
;

1248 
	`‰ì
(
li°EÀmíts
);

1250 
boﬁ
 
b©ch
 = 
Ál£
;

1251 i‡(
ac
 > 3) {

1252 i‡(!
	`°rcmp
(
av
[3], "batch")) {

1253 
b©ch
 = 
åue
;

1254 } i‡(!
	`°rcmp
(
av
[3], "dont_batch")) {

1255 
	`T˛_AµídResu…
(
ù
, 
îrSåög
, 0);

1256  
TCL_ERROR
;

1260 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_n⁄e
;

1261 i‡(
ac
 > 4) {

1262 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[4]);

1265 
	`DO
–
sm
->
	`gë_fûe_mëa_°©s
(
vid
, 
numFûes
, 
fûeSèts
, 
b©ch
, 
cc
) );

1267 
j
 = 0; j < 
numFûes
; ++j) {

1268 
	`w_ª£t_°r°ªam
(
t˛out
);

1269 
t˛out
 << 
fûeSèts
[
j
].
smÆlSnum
 << " "

1270 << 
fûeSèts
[
j
].
œrgeSnum
 << " {"

1271 << 
fûeSèts
[
j
].
smÆl
.
numRe£rvedPages
 << " "

1272 << 
fûeSèts
[
j
].
smÆl
.
numAŒocPages
 << "} {"

1273 << 
fûeSèts
[
j
].
œrge
.
numRe£rvedPages
 << " "

1274 << 
fûeSèts
[
j
].
œrge
.
numAŒocPages
 << "}"

1275 << 
íds
;

1277 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
t˛out
.
	`c_°r
());

1278 
	`w_ª£t_°r°ªam
(
t˛out
);

1281  
TCL_OK
;

1282 
	}
}

1285 
	$t_dump_buf„rs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

1287 i‡(
	`check
(
ù
, "", 
ac
, 1)Ë 
TCL_ERROR
;

1288 
	`DO
(
sm
->
	`dump_buf„rs
(
cout
));

1289  
TCL_OK
;

1290 
	}
}

1293 
	$t_gë_vﬁume_quŸa
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1295 i‡(
	`check
(
ù
, "vid", 
ac
, 2)Ë 
TCL_ERROR
;

1296 
smÀvñ_0
::
smksize_t
 
ˇ∑côy
, 
u£d
;

1297 
lvid_t
 
lvid
;

1298 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
lvid
;

1299 
	`DO
–
sm
->
	`gë_vﬁume_quŸa
(
lvid
, 
ˇ∑côy
, 
u£d
) );

1301 
	`w_ª£t_°r°ªam
(
t˛out
);

1302 
t˛out
 << 
ˇ∑côy
 << " " << 
u£d
 << 
íds
;

1303 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1304  
TCL_OK
;

1305 
	}
}

1308 
	$t_gë_devi˚_quŸa
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1310 i‡(
	`check
(
ù
, "devi˚", 
ac
, 2)Ë 
TCL_ERROR
;

1311 
smÀvñ_0
::
smksize_t
 
ˇ∑côy
, 
u£d
;

1312 
	`DO
–
sm
->
	`gë_devi˚_quŸa
(
av
[1], 
ˇ∑côy
, 
u£d
) );

1313 
	`w_ª£t_°r°ªam
(
t˛out
);

1314 
t˛out
 << 
ˇ∑côy
 << " " << 
u£d
 << 
íds
;

1315 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1316  
TCL_OK
;

1317 
	}
}

1320 
	$t_f‹m©_dev
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1322 i‡(
	`check
(
ù
, "devi˚ size_ö_KB 'f‹˚/nof‹˚'", 
ac
, 4))

1323  
TCL_ERROR
;

1324 
boﬁ
 
f‹˚
 = 
Ál£
;

1325 i‡(
av
[3] && 
	`°ªq
◊v[3], "f‹˚")Ë
f‹˚
 = 
åue
;

1326 
	`DO
–
sm
->
	`f‹m©_dev
(
av
[1], 
	`obje˘size
◊v[2]),
f‹˚
));

1327  
TCL_OK
;

1328 
	}
}

1331 
	$t_mou¡_dev
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1334 i‡(
	`check
(
ù
, "devi˚ [loˇl_lvid_f‹_vid]", 
ac
, 2, 3))

1335  
TCL_ERROR
;

1337 
u_öt
 
vﬁume_cou¡
=0;

1338 
devid_t
 
devid
;

1340 i‡(
ac
 == 3) {

1341 
	`DO
–
sm
->
	`mou¡_dev
(
av
[1], 
vﬁume_cou¡
, 
devid
, 
	`make_vid_‰om_lvid
(av[2])));

1344 
	`DO
–
sm
->
	`mou¡_dev
(
av
[1], 
vﬁume_cou¡
, 
devid
));

1346 
	`w_ª£t_°r°ªam
(
t˛out
);

1347 
t˛out
 << 
vﬁume_cou¡
 << 
íds
;

1348 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1349 
	`w_ª£t_°r°ªam
(
t˛out
);

1350  
TCL_OK
;

1351 
	}
}

1354 
	$t_dismou¡_dev
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1356 i‡(
	`check
(
ù
, "devi˚", 
ac
, 2))

1357  
TCL_ERROR
;

1359 i‡(
av
) {}

1361 
	`DO
–
sm
->
	`dismou¡_dev
(
av
[1]));

1362  
TCL_OK
;

1363 
	}
}

1366 
	$t_dismou¡_Æl
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1368 i‡(
	`check
(
ù
, "", 
ac
, 1))

1369  
TCL_ERROR
;

1371 i‡(
av
) {}

1373 
	`DO
–
sm
->
	`dismou¡_Æl
());

1374  
TCL_OK
;

1375 
	}
}

1378 
	$t_li°_devi˚s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1380 i‡(
	`check
(
ù
, "", 
ac
, 1))

1381  
TCL_ERROR
;

1383 i‡(
av
) {}

1385 
u_öt
 
cou¡
;

1386 c⁄° ** 
dev_li°
;

1387 
devid_t
* 
devid_li°
;

1388 
	`DO
–
sm
->
	`li°_devi˚s
(
dev_li°
, 
devid_li°
, 
cou¡
));

1391 
u_öt
 
i
 = 0; i < 
cou¡
; i++) {

1392 
	`w_ª£t_°r°ªam
(
t˛out
);

1393 
t˛out
 << 
dev_li°
[
i
] << " " << 
devid_li°
[i] << 
íds
;

1394 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
t˛out
.
	`c_°r
());

1395 
	`w_ª£t_°r°ªam
(
t˛out
);

1397 i‡(
cou¡
 > 0) {

1398 
dñëe
 [] 
dev_li°
;

1399 
dñëe
 [] 
devid_li°
;

1401  
TCL_OK
;

1402 
	}
}

1405 
	$t_li°_vﬁumes
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1407 i‡(
	`check
(
ù
, "devi˚", 
ac
, 2))

1408  
TCL_ERROR
;

1409 
u_öt
 
cou¡
;

1410 
lvid_t
* 
lvid_li°
;

1411 
	`DO
–
sm
->
	`li°_vﬁumes
(
av
[1], 
lvid_li°
, 
cou¡
));

1414 
u_öt
 
i
 = 0; i < 
cou¡
; i++) {

1415 
	`w_ª£t_°r°ªam
(
t˛out
);

1416 
t˛out
 << 
lvid_li°
[
i
] << 
íds
;

1417 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
t˛out
.
	`c_°r
());

1418 
	`w_ª£t_°r°ªam
(
t˛out
);

1420 i‡(
cou¡
 > 0Ë
dñëe
 [] 
lvid_li°
;

1421  
TCL_OK
;

1422 
	}
}

1426 
	$t_¸óã_vﬁ
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1428 i‡(
	`check
(
ù
, "devi˚Üvid quŸa_ö_KB ['skù_øw_öô']", 
ac
, 4, 5))

1429  
TCL_ERROR
;

1431 
lvid_t
 
lvid
;

1432 
w_i°r°ªam
 
	`™⁄
(
av
[2]); 
™⁄
 >> 
lvid
;

1433 
smsize_t
 
quŸa
 = 
	`obje˘size
(
av
[3]);

1435 
boﬁ
 
skù_øw_öô
 = 
Ál£
;

1436 i‡(
av
[4] && 
	`°ªq
◊v[4], "skù_øw_öô")Ë
skù_øw_öô
 = 
åue
;

1439 
	`DO
–
sm
->
	`¸óã_vﬁ
(
av
[1], 
lvid
, 
quŸa
, 
skù_øw_öô


1440 , 
	`make_vid_‰om_lvid
(
av
[2])

1443  
TCL_OK
;

1444 
	}
}

1447 
	$t_de°roy_vﬁ
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1449 i‡(
	`check
(
ù
, "lvid", 
ac
, 2))

1450  
TCL_ERROR
;

1452 
lvid_t
 
lvid
;

1453 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
lvid
;

1454 
	`DO
–
sm
->
	`de°roy_vﬁ
(
lvid
));

1455  
TCL_OK
;

1456 
	}
}

1460 
	$t_has_logiˇl_id_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *

1463 i‡(
	`check
(
ù
, "lvid", 
ac
, 2)Ë 
TCL_ERROR
;

1464 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_boﬁ
(
Ál£
), 0);

1465  
TCL_OK
;

1466 
	}
}

1469 
	$t_check_vﬁume_∑ge_ty≥s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1471 i‡(
	`check
(
ù
, "vid", 
ac
, 2)Ë 
TCL_ERROR
;

1472 
	`DBG
(<< 
av
[0] << " " <<áv[1]);

1474 
vid_t
 
vid
;

1475 
w_i°r°ªam
 
	`v
(
av
[1], 
	`°æí
(av[1]));

1476 
v
 >> 
vid
;

1477 
	`DO
–
sm
->
	`check_vﬁume_∑ge_ty≥s
(
vid
) );

1478  
TCL_OK
;

1479 
	}
}

1482 
	$t_gë_du_°©i°ics
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1485 i‡(
	`check
(
ù
, "vid|°id [¥ëty] [nﬂudô]", 
ac
, 2, 3, 4)Ë 
TCL_ERROR
;

1486 
sm_du_°©s_t
 
°©s
;

1488 
	`DBG
(<< 
av
[0] << " " <<áv[1]);

1490 
°©s
.
	`˛ór
();

1492 
boﬁ
 
¥ëty
 = 
Ál£
;

1493 
boﬁ
 
audô
 = 
åue
;

1494 i‡(
ac
 == 4) {

1495 i‡(
	`°rcmp
(
av
[3], "noaudit") == 0) {

1496 
audô
 = 
Ál£
;

1498 i‡(
	`°rcmp
(
av
[3], "pretty") == 0) {

1499 
¥ëty
 = 
åue
;

1502 i‡(
ac
 >= 3) {

1503 i‡(
	`°rcmp
(
av
[2], "pretty") == 0) {

1504 
¥ëty
 = 
åue
;

1506 i‡(
	`°rcmp
(
av
[2], "noaudit") == 0) {

1507 
audô
 = 
Ál£
;

1510 if–
ac
 < 2) {

1511 
	`T˛_AµídResu…
(
ù
, "need storage id or volume id", 0);

1512  
TCL_ERROR
;

1515 
TCL_AV
 * 
°r
 = 
av
[1];

1516 
Àn
 = 
	`°æí
(
av
[1]);

1519 
°id_t
 
°id
;

1520 
vid_t
 
vid
;

1522 
w_i°r°ªam
 
	`s
(
°r
, 
Àn
); 
s
 >> 
°id
;

1523 
w_i°r°ªam
 
	`v
(
°r
, 
Àn
); 
v
 >> 
vid
;

1525 i‡(
s
) {

1526 
	`DO
–
sm
->
	`gë_du_°©i°ics
(
°id
, 
°©s
, 
audô
) );

1527 } i‡(
v
) {

1528 
	`DO
–
sm
->
	`gë_du_°©i°ics
(
vid
, 
°©s
, 
audô
) );

1530 
˚º
 << "bad ID f‹ " << 
av
[0] << " -- " << 
°r
 << 
ídl
;

1531  
TCL_ERROR
;

1534 i‡(
¥ëty
Ë
°©s
.
	`¥öt
(
cout
, "du:");

1536 
	`w_ª£t_°r°ªam
(
t˛out
);

1537 
t˛out
 << 
°©s
 << 
íds
;

1538 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1539 
	`w_ª£t_°r°ªam
(
t˛out
);

1541  
TCL_OK
;

1542 
	}
}

1545 #i‚de‡
PURIFY


1546 
	#av


	)

1549 
	$t_purify_¥öt_°rög
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1550 #unde‡
av


1552 i‡(
	`check
(
ù
, "°rög", 
ac
, 2)) {

1553  
TCL_ERROR
;

1556 #ifde‡
PURIFY


1557 
	`purify_¥ötf
("%s\n", 
av
[1]);

1560  
TCL_OK
;

1561 
	}
}

1564 
t_£t_debug
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 ** 
	$W_IFTRACE
(
av
))

1566 i‡(
	`check
(
ù
, "[Êag_°rög]", 
ac
, 1, 2)Ë 
TCL_ERROR
;

1568 #ifde‡
W_TRACE


1573 
	`T˛_AµídResu…
(
ù
, 
_w_debug
.
	`Êags
(), 0);

1574 if(
ac
>1) {

1575 
_w_debug
.
	`£tÊags
(
av
[1]);

1578  
TCL_OK
;

1579 
	}
}

1582 
	$t_£t_°‹e_¥›îty
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1584 i‡(
	`check
(
ù
, "fidÖr›îty", 
ac
, 3))

1585  
TCL_ERROR
;

1587 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
 = 
	`cvt2°‹e_¥›îty
(
av
[2]);

1590 
°id_t
 
fid
;

1591 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

1592 
	`DO
–
sm
->
	`£t_°‹e_¥›îty
(
fid
, 
¥›îty
) );

1595  
TCL_OK
;

1596 
	}
}

1599 
	$t_gë_°‹e_¥›îty
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1601 i‡(
	`check
(
ù
, "fid", 
ac
, 2))

1602  
TCL_ERROR
;

1604 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
;

1607 
°id_t
 
fid
;

1608 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

1609 
	`DO
–
sm
->
	`gë_°‹e_¥›îty
(
fid
, 
¥›îty
) );

1612 
	`w_ª£t_°r°ªam
(
t˛out
);

1613 
t˛out
 << 
¥›îty
 << 
íds
;

1615 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1616 
	`w_ª£t_°r°ªam
(
t˛out
);

1617  
TCL_OK
;

1618 
	}
}

1621 
	$t_£t_lock_Àvñ
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1623 i‡(
	`check
(
ù
, "fûe|∑ge|ªc‹d", 
ac
, 2))

1624  
TCL_ERROR
;

1625 
ss_m
::
c⁄cuºícy_t
 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[1]);

1626 
sm
->
	`£t_x˘_lock_Àvñ
(
cc
);

1627  
TCL_OK
;

1628 
	}
}

1632 
	$t_gë_lock_Àvñ
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

1634 i‡(
	`check
(
ù
, "", 
ac
, 1))

1635  
TCL_ERROR
;

1636 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_bad
;

1637 
cc
 = 
sm
->
	`x˘_lock_Àvñ
();

1639 
	`w_ª£t_°r°ªam
(
t˛out
);

1640 
t˛out
 << 
	`cvt_c⁄cuºícy_t
(
cc
Ë<< 
íds
;

1641 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1642 
	`w_ª£t_°r°ªam
(
t˛out
);

1643  
TCL_OK
;

1644 
	}
}

1647 
	$t_¸óã_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1656 i‡(
	`check
(
ù
, "vidÇdxty≥ [\"tmp|ªguœr|lﬂd_fûe|ö£π_fûe\"] [keydes¸] [t_cc_n⁄e|t_cc_kvl|t_cc_modkvl|t_cc_im] [smÆl]", 
ac
, 3, 4, 5, 6, 7))

1657  
TCL_ERROR
;

1659 c⁄° *
keydes¸
="b*1000";

1661 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
 = ss_m::
t_ªguœr
;

1662 i‡(
ac
 > 3) {

1663 
¥›îty
 = 
	`cvt2°‹e_¥›îty
(
av
[3]);

1665 i‡(
ac
 > 4) {

1666 if(
	`cvt2ty≥
((
keydes¸
 = 
av
[4])Ë=
ã°_nosuch
) {

1667 
	`w_ª£t_°r°ªam
(
t˛out
);

1669 
t˛out
 << "E_WRONGKEYTYPE" << 
íds
;

1670 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1671 
	`w_ª£t_°r°ªam
(
t˛out
);

1672  
TCL_ERROR
;

1682 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_kvl
;

1683 
boﬁ
 
smÆl
 = 
Ál£
;

1684 i‡(
ac
 > 5) {

1685 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[5]);

1686 if(
cc
 =
ss_m
::
t_cc_bad
) {

1687 if(::
	`°rcmp
(
av
[5],"small")==0) {

1688 
cc
 = 
ss_m
::
t_cc_n⁄e
;

1689 
smÆl
 = 
åue
;

1693 i‡(
ac
 > 6) {

1694 if(::
	`°rcmp
(
av
[6],"small")!=0) {

1695 
	`T˛_AµídResu…
(
ù
,

1697  
TCL_ERROR
;

1699 
smÆl
 = 
åue
;

1702 if(
smÆl
) {

1703 
	`T˛_AµídResu…
(
ù
,

1706  
TCL_ERROR
;

1709 c⁄° *
kd
 = 
	`check_com¥ess_Êag
(
keydes¸
);

1710 
ss_m
::
ndx_t
 
ndx
 = 
	`cvt2ndx_t
(
av
[2]);

1713 
°id_t
 
°id
;

1714 
vid_t
 
vﬁid
 = 
	`vid_t
(
	`©oi
(
av
[1]));

1715 
	`DO
–
sm
->
	`¸óã_ödex
–
vﬁid
,

1716 
ndx
, 
¥›îty
, 
kd
, 
cc
,

1717 
°id
));

1718 
	`w_ª£t_°r°ªam
(
t˛out
);

1719 
t˛out
 << 
°id
 << 
íds
;

1722 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1723 
	`w_ª£t_°r°ªam
(
t˛out
);

1724  
TCL_OK
;

1725 
	}
}

1728 
	$t_de°roy_md_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1730 i‡(
	`check
(
ù
, "fid", 
ac
, 2))

1731  
TCL_ERROR
;

1734 
°id_t
 
fid
;

1735 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

1736 
	`DO
–
sm
->
	`de°roy_md_ödex
(
fid
) );

1739  
TCL_OK
;

1740 
	}
}

1742 
	$t_de°roy_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1744 i‡(
	`check
(
ù
, "fid", 
ac
, 2))

1745  
TCL_ERROR
;

1748 
°id_t
 
fid
;

1749 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

1750 
	`DO
–
sm
->
	`de°roy_ödex
(
fid
) );

1753  
TCL_OK
;

1754 
	}
}

1760 
rc_t


1761 
	$¥ï¨e_f‹_blkld
(
s‹t_°ªam_i
& 
s_°ªam
,

1762 
T˛_I¡îp
* 
ù
,

1763 
TCL_AV
 *
fid
,

1764 c⁄° * 
ty≥
,

1765 c⁄° * 
univî£
=
NULL
)

1767 
key_öfo_t
 
öfo
;

1768 
s‹t_∑rm_t
 
•
;

1770 
öfo
.
whîe
 = 
key_öfo_t
::
t_hdr
;

1772 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
ty≥
);

1774 
t
) {

1775 
ã°_bv
:

1777 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_b
;

1778 
öfo
.
Àn
 = 0;

1781 
ã°_b1
:

1783 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

1784 
öfo
.
Àn
 = ();

1787 
ã°_i1
:

1789 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i1
;

1790 
öfo
.
Àn
 = (
uöt1_t
);

1793 
ã°_i2
:

1795 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i2
;

1796 
öfo
.
Àn
 = (
uöt2_t
);

1799 
ã°_i4
:

1801 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i4
;

1802 
öfo
.
Àn
 = (
uöt4_t
);

1805 
ã°_i8
:

1808 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i8
;

1809 
öfo
.
Àn
 = (
w_ba£_t
::
öt8_t
);

1812 
ã°_u1
:

1814 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

1815 
öfo
.
Àn
 = (
uöt1_t
);

1818 
ã°_u2
:

1820 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u2
;

1821 
öfo
.
Àn
 = (
uöt2_t
);

1824 
ã°_u4
:

1826 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u4
;

1827 
öfo
.
Àn
 = (
uöt4_t
);

1830 
ã°_u8
:

1833 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u8
;

1834 
öfo
.
Àn
 = (
w_ba£_t
::
uöt8_t
);

1837 
ã°_f4
:

1839 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f4
;

1840 
öfo
.
Àn
 = (
f4_t
);

1843 
ã°_f8
:

1845 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f8
;

1846 
öfo
.
Àn
 = (
f8_t
);

1849 
ã°_•©ül
:

1852 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_•©ül
;

1853 i‡(
univî£
==
NULL
) {

1854 i‡(
	`check
(
ù
, "stid srcÅype [universe]", 1, 0))

1855  
	`RC
(
fcINTERNAL
);

1857 
nbox_t
 
	`univ
(
univî£
);

1858 
öfo
.
univî£
 = 
univ
;

1859 
öfo
.
Àn
 = 
univ
.
	`kÀn
();

1864 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

1868 
•
.
run_size
 = 3;

1869 
•
.
de°ru˘ive
 = 
åue
;

1870 
sˇn_fûe_i
* 
f_sˇn
 = 0;

1873 
°id_t
 
°id
;

1874 
w_i°r°ªam
 
	`™⁄
(
fid
); 
™⁄
 >> 
°id
;

1875 
•
.
vﬁ
 = 
°id
.vol;

1876 
f_sˇn
 = 
√w
 
	`sˇn_fûe_i
(
°id
, 
ss_m
::
t_cc_fûe
);

1879 
	`HANDLE_FSCAN_FAILURE
(
f_sˇn
);

1884 
s_°ªam
.
	`öô
(
öfo
, 
•
);

1885 
pö_i
* 
pö
;

1886 
boﬁ
 
eof
 = 
Ál£
;

1887 !
eof
) {

1888 
	`W_DO
(
f_sˇn
->
	`√xt
(
pö
, 0, 
eof
));

1889 i‡(!
eof
 && 
pö
->
	`pö√d
()) {

1890 
vec_t
 
	`key
(
pö
->
	`hdr
(),Öö->
	`hdr_size
()),

1891 
	`ñ
(
pö
->
	`body
(),Öö->
	`body_size
());

1893 if(
t
 =
ã°_•©ül
) {

1894 
nbox_t
 
k
;

1895 
k
.
	`byãs2box
((*)
pö
->
	`hdr
(),Öö->
	`hdr_size
());

1897 
	`DBG
(<<"hd∏sizêi†" << 
pö
->
	`hdr_size
());

1898 
dim
 = 
pö
->
	`hdr_size
() / (2 * ());

1899 c⁄° *
˝
 = 
pö
->
	`hdr
();

1900 
tmp
;

1901 
j
=0; j<
dim
; j++) {

1902 
	`mem˝y
(&
tmp
, 
˝
, ());

1903 
˝
 += ();

1904 
	`DBG
(<<"öt[" << 
j
 << "]" << 
tmp
);

1906 
	`DBG
(<<"key i†" << 
k
);

1907 
	`DBG
(<<"body i†" << (c⁄° *)(
pö
->
	`body
()));

1909 
	`W_DO
(
s_°ªam
.
	`put
(
key
, 
ñ
));

1913 
dñëe
 
f_sˇn
;

1915  
RCOK
;

1916 
	}
}

1919 
	$t_blkld_ndx
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

1923 
fú°_§c
 = 3;

1924 
°id_¨g
 = 1;

1925 i‡(
ac
 < 4) {

1926 
	`T˛_AµídResu…
(
ù
, "wrong #árgs; should be \"",

1929  
TCL_ERROR
;

1932 
n§cs
 = 
	`©oi
(
av
[2]);

1933 if(
n§cs
 < 1 ||Çsrcs > 10) {

1934 
	`T˛_AµídResu…
(
ù
, "Expected 1 ... 10 (arbitrary) sources", 0);

1935  
TCL_ERROR
;

1939 if(
n§cs
 < 
ac
-5) {

1940 
	`T˛_AµídResu…
(
ù
, "Too manyárgumentsÖrovided for "

1942  
TCL_ERROR
;

1944 if(
n§cs
 > 
ac
-3) {

1945 
	`T˛_AµídResu…
(
ù
, "NotÉnough sourcesárgumentsÖrovided for "

1947  
TCL_ERROR
;

1949 
ex˚ss_¨gumíts
 = 
ac
 - 3 - 
n§cs
;

1950 c⁄° *
ty≥¨g
 = 0, *
univî£¨g
 = 0;

1951 if(
ex˚ss_¨gumíts
 == 2) {

1952 
ty≥¨g
 = 
av
[
ac
-2];

1953 
univî£¨g
 = 
av
[
ac
-1];

1954 } if(
ex˚ss_¨gumíts
 == 1) {

1955 
ty≥¨g
 = 
av
[
ac
-1];

1956 } if(
ex˚ss_¨gumíts
 != 0) {

1957 
	`w_as£π1
(0);

1960 
sm_du_°©s_t
 
°©s
;

1962 i‡(
ex˚ss_¨gumíts
) {

1964 
s‹t_°ªam_i
 
s_°ªam
;

1966 if(
n§cs
!=1) {

1967 
	`T˛_AµídResu…
(
ù
, "BulkÜoad with sort_stream "

1970 i‡(
ex˚ss_¨gumíts
==1) {

1971 
	`DBG
(<<"prepare_for_blkld 1 " );

1972 
	`DO
–
	`¥ï¨e_f‹_blkld
(
s_°ªam
, 
ù
, 
av
[
fú°_§c
], 
ty≥¨g
) );

1974 
	`DBG
(<<"prepare_for_blkld 2 " );

1975 
	`DO
–
	`¥ï¨e_f‹_blkld
(
s_°ªam
, 
ù
, 
av
[
fú°_§c
], 
ty≥¨g
, 
univî£¨g
) );

1979 
°id_t
 
°id
;

1980 
w_i°r°ªam
 
	`™⁄
(
av
[
°id_¨g
]);

1981 
™⁄
 >> 
°id
;

1982 
	`DBG
(<<"bulkld_index 4 " );

1983 
	`DO
–
sm
->
	`bulkld_ödex
(
°id
, 
s_°ªam
, 
°©s
) );

1984 
	`DBG
(<<"bulkld_index 4 finished " );

1989 
°id_t
 
°id
;

1990 
°id_t
* 
§cs
 = 
√w
 stid_t[
n§cs
];

1991 
w_i°r°ªam
 
	`™⁄
(
av
[
°id_¨g
]);

1992 
™⁄
 >> 
°id
;

1993 
i
=0; i<
n§cs
; i++) {

1994 
w_i°r°ªam
 
	`™⁄2
(
av
[
fú°_§c
+
i
]);

1995 
™⁄2
 >> 
§cs
[
i
];

1997 
	`DBG
(<<"bulkld_index 6 " );

1998 
w_rc_t
 
rc
 = 
sm
->
	`bulkld_ödex
(
°id
, 
n§cs
, 
§cs
, 
°©s
);

1999 
dñëe
[] 
§cs
;

2000 
	`DO
(
rc
);

2003 
	`DBG
(<<"bulkld_indexÉnds OK " );

2006 
	`w_ª£t_°r°ªam
(
t˛out
);

2007 
t˛out
 << 
°©s
.
båì
 << 
íds
;

2008 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2009 
	`w_ª£t_°r°ªam
(
t˛out
);

2012  
TCL_OK
;

2014 
	}
}

2017 
	$t_blkld_md_ndx
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2019 i‡(
	`check
(
ù
, "°id sr¯h‡hêunivî£", 
ac
, 6))

2020  
TCL_ERROR
;

2022 
nbox_t
 
	`univ
(
av
[5]);

2024 
sm_du_°©s_t
 
°©s
;

2026 
s‹t_°ªam_i
 
s_°ªam
;

2028 c⁄° * 
ty≥
 = "spatial";

2030 
	`DO
–
	`¥ï¨e_f‹_blkld
(
s_°ªam
, 
ù
, 
av
[2], 
ty≥
,áv[5]) );

2033 
°id_t
 
°id
;

2034 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2035 
	`DO
–
sm
->
	`bulkld_md_ödex
(
°id
, 
s_°ªam
, 
°©s
,

2037 
	`©oi
(
av
[3]),átoi◊v[4]), &
univ
) );

2041 
	`w_ª£t_°r°ªam
(
t˛out
);

2042 
t˛out
 << 
°©s
.
πªe
 << 
íds
;

2043 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2044 
	`w_ª£t_°r°ªam
(
t˛out
);

2047  
TCL_OK
;

2048 
	}
}

2051 
	$t_¥öt_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2053 i‡(
	`check
(
ù
, "°id", 
ac
, 2))

2054  
TCL_ERROR
;

2057 
°id_t
 
°id
;

2058 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2059 
	`DO
–
sm
->
	`¥öt_ödex
(
°id
) );

2062  
TCL_OK
;

2063 
	}
}

2066 
	$t_¥öt_md_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2068 i‡(
	`check
(
ù
, "°id", 
ac
, 2))

2069  
TCL_ERROR
;

2072 
°id_t
 
°id
;

2073 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2074 
	`DO
–
sm
->
	`¥öt_md_ödex
(
°id
) );

2077  
TCL_OK
;

2078 
	}
}

2080 
	~<¸ash.h
>

2084 
t_¸ash
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 ** 
	$W_IFTRACE
(
av
))

2087 i‡(
	`check
(
ù
, "°∏cmd", 
ac
, 3))

2088  
TCL_ERROR
;

2090 
	`DBG
(<<"¸ash " << 
av
[1] << " " <<áv[2] );

2092 
	`Ârötf
(
°dîr
, "Tcl crash command : _exit(1)\n");

2093 
cout
 << 
Êush
;

2094 
	`_exô
(1);

2096  
TCL_OK
;

2097 
	}
}

2102 
˛ass
 
	gx˘_i
; cœs†
	gx˘_t
;

2105 
	$t_ª°¨t
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2107 i‡(
	`check
(
ù
, "˛ón:boﬁ", 
ac
, 1, 2))

2108  
TCL_ERROR
;

2110 
boﬁ
 
˛ón
 = 
Ál£
;

2111 if(
ac
==2) {

2113 
	`t˛_sˇn_boﬁ
(
av
[1], 
˛ón
);

2115 
sm
->
	`£t_shutdown_Êag
(
˛ón
);

2116 
dñëe
 
sm
;

2123 if(
log_w¨n_ˇŒback
) {

2124 
sm
 = 
√w
 
	`ss_m
(
out_of_log_•a˚
, 
gë_¨chived_log_fûe
);

2126 
sm
 = 
√w
 
	`ss_m
();

2128 
	`w_as£π1
(
sm
);

2130  
TCL_OK
;

2131 
	}
}

2135 
	$t_¸óã_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2137 i‡(
	`check
(
ù
, "vid [\"tmp|regular|load_file|insert_file\"] [cluster-page]",

2138 
ac
, 2, 3, 4))

2139  
TCL_ERROR
;

2141 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
 = ss_m::
t_ªguœr
;

2143 
shpid_t
 
˛u°î_∑ge
=0;

2144 i‡(
ac
 > 3) {

2145 
˛u°î_∑ge
 = 
	`©oi
(
av
[3]);

2147 i‡(
ac
 > 2) {

2148 
¥›îty
 = 
	`cvt2°‹e_¥›îty
(
av
[2]);

2152 
°id_t
 
°id
;

2153 
vﬁumeid
 = 
	`©oi
(
av
[1]);

2154 
	`DO
–
sm
->
	`¸óã_fûe
(
	`vid_t
(
vﬁumeid
), 
°id
, 
¥›îty
,

2155 
˛u°î_∑ge
) );

2157 
	`w_ª£t_°r°ªam
(
t˛out
);

2158 
t˛out
 << 
°id
 << 
íds
;

2161 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2162 
	`w_ª£t_°r°ªam
(
t˛out
);

2163  
TCL_OK
;

2164 
	}
}

2167 
	$t_de°roy_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2169 i‡(
	`check
(
ù
, "fid", 
ac
, 2))

2170  
TCL_ERROR
;

2173 
°id_t
 
fid
;

2174 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

2175 
	`DO
–
sm
->
	`de°roy_fûe
(
fid
) );

2178  
TCL_OK
;

2179 
	}
}

2182 
	$t_¸óã_sˇn
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2184 
	`FUNC
(
t_¸óã_sˇn
);

2185 i‡(
	`check
(
ù
, "°id cmp1 bound1 cmp2 bound2 [c⁄cuºícy_t] [keydes¸]", 
ac
, 6, 8))

2186  
TCL_ERROR
;

2188 
vec_t
 
t1
, 
t2
;

2189 
vec_t
* 
bound1
 = 0;

2190 
vec_t
* 
bound2
 = 0;

2191 
sˇn_ödex_i
::
cmp_t
 
c1
, 
c2
;

2194 
boﬁ
 
c⁄vît
=
Ál£
;

2195 
b1
, 
b2
;

2196 
w_ba£_t
::
öt8_t
 
bl1
, 
bl2
;

2198 
c1
 = 
	`cvt2cmp_t
(
av
[2]);

2199 
c2
 = 
	`cvt2cmp_t
(
av
[4]);

2200 i‡(
	`°ªq
(
av
[3], "pos_inf")) {

2201 
bound1
 = &
vec_t
::
pos_öf
;

2202 } i‡(
	`°ªq
(
av
[3], "neg_inf")) {

2203 
bound1
 = &
vec_t
::
√g_öf
;

2205 
c⁄vît
 = 
åue
;

2206 (
bound1
 = &
t1
)->
	`put
(
av
[3], 
	`°æí
(av[3]));

2209 i‡(
	`°ªq
(
av
[5], "pos_inf")) {

2210 
bound2
 = &
vec_t
::
pos_öf
;

2211 } i‡(
	`°ªq
(
av
[5], "neg_inf")) {

2212 
bound2
 = &
vec_t
::
√g_öf
;

2214 (
bound2
 = &
t2
)->
	`put
(
av
[5], 
	`°æí
(av[5]));

2215 
c⁄vît
 = 
åue
;

2218 i‡(
c⁄vît
 && (
ac
 > 7)) {

2219 c⁄° *
keydes¸
 = (c⁄° *)
av
[7];

2221 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
keydes¸
);

2222 i‡(
t
 =
ã°_nosuch
) {

2223 
	`T˛_AµídResu…
(
ù
,

2225  
TCL_ERROR
;

2228 
t
) {

2229 
ã°_i8
:

2230 
ã°_u8
: {

2235 
bl1
 = 
w_ba£_t
::
	`°πoi8
(
av
[3]);

2236 
t1
.
	`ª£t
();

2237 
t1
.
	`put
(&
bl1
, (
w_ba£_t
::
öt8_t
));

2240 
bl2
 = 
w_ba£_t
::
	`°πoi8
(
av
[5]);

2241 
t2
.
	`ª£t
();

2242 
t2
.
	`put
(&
bl2
, (
w_ba£_t
::
öt8_t
));

2246 
ã°_i4
:

2247 
ã°_u4
: {

2248 
b1
 = 
	`©oi
(
av
[3]);

2249 
t1
.
	`ª£t
();

2250 
t1
.
	`put
(&
b1
, ());

2251 
	`DBG
(<<"bound1 = " << 
b1
);

2253 
b2
 = 
	`©oi
(
av
[5]);

2254 
t2
.
	`ª£t
();

2255 
t2
.
	`put
(&
b2
, ());

2256 
	`DBG
(<<"bound2 = " << 
b2
);

2259 
ã°_bv
:

2260 
ã°_b1
:

2261 
ã°_b23
:

2264 
	`T˛_AµídResu…
(
ù
,

2266 
keydes¸
, 0);

2267  
TCL_ERROR
;

2271 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_kvl
;

2272 i‡(
ac
 == 7) {

2273 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[6]);

2275 
	`DBG
(<<"c1 = " << 
	`W_ENUM
(
c1
));

2276 
	`DBG
(<<"c2 = " << 
	`W_ENUM
(
c2
));

2277 
	`DBG
(<<"c¯" << 
	`W_ENUM
(
cc
));

2279 
sˇn_ödex_i
* 
s
;

2281 
°id_t
 
°id
;

2282 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2283 
s
 = 
√w
 
	`sˇn_ödex_i
(
°id
, 
c1
, *
bound1
, 
c2
, *
bound2
, 
Ál£
, 
cc
);

2285 i‡(!
s
) {

2286 
˚º
 << "Ouào‡mem‹y: fûê" << 
__FILE__


2287 << "Üöê" << 
__LINE__
 << 
ídl
;

2288 
	`W_FATAL
(
fcOUTOFMEMORY
);

2291 
	`w_ª£t_°r°ªam
(
t˛out
);

2292 
	`f‹m©_±r
(
t˛out
, 
s
Ë<< 
íds
;

2293 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2294 
	`w_ª£t_°r°ªam
(
t˛out
);

2295  
TCL_OK
;

2296 
	}
}

2299 
	$t_sˇn_√xt
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2301 i‡(
	`check
(
ù
, "sˇnid [keydes¸]", 
ac
, 2, 3))

2302  
TCL_ERROR
;

2304 
ty≥d_båì_ã°
 
t
 = 
ã°_bv
;

2305 i‡(
ac
 > 2) {

2306 
t
 = 
	`cvt2ty≥
(
av
[2]);

2309 
sˇn_ödex_i
 *
s
 = 0;

2310 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

2312 
smsize_t
 
kÀn
, 
ñí
;

2313 
kÀn
 = 
ñí
 = 0;

2314 
boﬁ
 
eof
;

2315 
	`DO
–
s
->
	`√xt
(
eof
) );

2316 i‡(
eof
) {

2317 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "eof");

2320 
	`DO
–
s
->
	`cuº
(0, 
kÀn
, 0, 
ñí
) );

2321 
	`w_as£π1
(
kÀn
 + 
ñí
 + 2 <
ss_m
::
∑ge_sz
);

2323 
vec_t
 
	`key
(
outbuf
, 
kÀn
);

2324 
vec_t
 
	`ñ
(
outbuf
 + 
kÀn
 + 1, 
ñí
);

2325 
	`DO
–
s
->
	`cuº
(&
key
, 
kÀn
, &
ñ
, 
ñí
) );

2327 
ty≥d_vÆue
 
v
;

2330 
outbuf
[
kÀn
] = outbuf[kÀ¿+ 1 + 
ñí
] = '\0';

2332 
boﬁ
 
d⁄e
 = 
Ál£
;

2333 
t
) {

2334 
ã°_bv
:

2335 
outbuf
[
kÀn
] = outbuf[kÀ¿+ 1 + 
ñí
] = '\0';

2336 
	`T˛_AµídResu…
(
ù
, 
outbuf
, " ", outbu‡+ 
kÀn
 + 1, 0);

2337 
d⁄e
 = 
åue
;

2339 
ã°_b1
:

2340 
c
[2];

2341 
c
[0] = 
outbuf
[0];

2342 
c
[1] = 0;

2343 
	`w_as£π3
(
kÀn
 == 1);

2344 
d⁄e
 = 
åue
;

2345 
	`T˛_AµídResu…
(
ù
, 
c
, " ", 
outbuf
 + 
kÀn
 + 1, 0);

2348 
ã°_i1
:

2349 
ã°_u1
:

2350 
ã°_i2
:

2351 
ã°_u2
:

2352 
ã°_i4
:

2353 
ã°_u4
:

2354 
ã°_i8
:

2355 
ã°_u8
:

2356 
ã°_f4
:

2357 
ã°_f8
:

2358 
	`mem˝y
(&
v
.
_u
, 
outbuf
, 
kÀn
);

2359 
v
.
_Àngth
 = 
kÀn
;

2361 
ã°_•©ül
:

2363 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

2366 
w_o°r°ªam_buf
 
	`tmp
(100);

2368 
t
) {

2369 
ã°_bv
:

2370 
ã°_b1
:

2374 
ã°_i1
:

2375 
tmp
 << ()
v
.
_u
.
i1_num
;

2377 
ã°_u1
:

2378 
tmp
 << ()
v
.
_u
.
u1_num
;

2381 
ã°_i2
:

2382 
tmp
 << 
v
.
_u
.
i2_num
;

2384 
ã°_u2
:

2385 
tmp
 << 
v
.
_u
.
u2_num
;

2388 
ã°_i4
:

2389 
tmp
 << 
v
.
_u
.
i4_num
;

2391 
ã°_u4
:

2392 
tmp
 << 
v
.
_u
.
u4_num
;

2395 
ã°_i8
:

2396 
tmp
 << 
v
.
_u
.
i8_num
;

2398 
ã°_u8
:

2399 
tmp
 << 
v
.
_u
.
u8_num
;

2402 
ã°_f4
:

2403 
tmp
 << 
v
.
_u
.
f4_num
;

2405 
ã°_f8
:

2406 
tmp
 << 
v
.
_u
.
f8_num
;

2409 
ã°_•©ül
:

2411 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

2413 if(!
d⁄e
) {

2414 
tmp
 << 
íds
;

2415 
	`T˛_AµídResu…
(
ù
, 
tmp
.
	`c_°r
(), " ", 
outbuf
 + 
kÀn
 + 1, 0);

2420  
TCL_OK
;

2421 
	}
}

2424 
	$t_de°roy_sˇn
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2427 i‡(
	`check
(
ù
, "sˇnid", 
ac
, 2, 3))

2428  
TCL_ERROR
;

2430 
sˇn_ödex_i
 *
	`s
(
NULL
);

2431 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

2433 
dñëe
 
s
;

2435  
TCL_OK
;

2436 
	}
}

2439 
	$t_¸óã_mu…i_ªcs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2441 i‡(
	`check
(
ù
, "fid hd∏Àn_höàd©®cou¡", 
ac
, 6))

2442  
TCL_ERROR
;

2444 
vec_t
 
hdr
, 
d©a
;

2445 
hdr
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

2446 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[4], 
	`°æí
(av[4])));

2448 
	`w_ª£t_°r°ªam
(
t˛out
);

2450 
i
;

2451 
cou¡
 = 
	`©oi
(
av
[5]);

2454 
°id_t
 
°id
;

2455 
rid_t
 
rid
;

2457 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2459 
°ime_t
 
	`°¨t
(°ime_t::
	`now
());

2460 
i
=0; i<
cou¡
; i++)

2461 
	`DO
–
sm
->
	`¸óã_ªc
(
°id
, 
hdr
, 
	`obje˘size
(
av
[3]), 
d©a
, 
rid
) );

2462 
söãrvÆ_t
 
	`dñè
(
°ime_t
::
	`now
(Ë- 
°¨t
);

2463 
˚º
 << "t_create_multi_recs: Write clockÅime = "

2464 << 
dñè
 << " sec⁄ds" << 
ídl
;

2466 
t˛out
 << "suc˚ss" << 
íds
;

2467 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2468 
	`w_ª£t_°r°ªam
(
t˛out
);

2469  
TCL_OK
;

2470 
	}
}

2473 
	$t_mu…i_fûe_≠≥nd
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2475 i‡(
	`check
(
ù
, "sˇ¿hd∏Àn_höàd©®cou¡", 
ac
, 6))

2476  
TCL_ERROR
;

2478 
≠≥nd_fûe_i
 *
s
 = 0;

2479 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

2481 
smsize_t
 
Àn_höt
 = 
	`obje˘size
(
av
[3]);

2483 
vec_t
 
hdr
, 
d©a
;

2484 
hdr
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

2485 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[4], 
	`°æí
(av[4])));

2487 
	`w_ª£t_°r°ªam
(
t˛out
);

2489 
i
;

2490 
cou¡
 = 
	`©oi
(
av
[5]);

2493 
rid_t
 
rid
;

2494 
°ime_t
 
	`°¨t
(°ime_t::
	`now
());

2495 
i
=0; i<
cou¡
; i++)

2496 
	`DO
–
s
->
	`¸óã_ªc
(
hdr
, 
Àn_höt
, 
d©a
, 
rid
) );

2497 
söãrvÆ_t
 
	`dñè
(
°ime_t
::
	`now
(Ë- 
°¨t
);

2498 i‡(
löked
.
vîbo£_Êag
) {

2499 
˚º
 << "t_multi_file_append: Write clockÅime = "

2500 << 
dñè
 << " sec⁄ds" << 
ídl
;

2503 
t˛out
 << "suc˚ss" << 
íds
;

2504 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2505 
	`w_ª£t_°r°ªam
(
t˛out
);

2506  
TCL_OK
;

2507 
	}
}

2510 
	$t_mu…i_fûe_upd©e
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2512 i‡(
	`check
(
ù
, "sˇ¿objsizê", 
ac
, 3))

2513  
TCL_ERROR
;

2515 
sˇn_fûe_i
 *
s
 = 0;

2516 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

2517 
sˇn_fûe_i
 &
sˇn
 = *
s
;

2519 
smsize_t
 
osize
 = 
	`obje˘size
(
av
[2]);

2521 
	`w_ª£t_°r°ªam
(
t˛out
);

2523 * 
d

√w
 [
osize
];

2524 
vec_t
 
	`d©a
(
d
, 
osize
);

2528 
w_rc_t
 
rc
;

2529 
boﬁ
 
eof
=
Ál£
;

2530 
pö_i
* 
pö
 = 0;

2532  !(
rc
=
sˇn
.
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof) {

2533 
	`w_as£π3
(
pö
);

2534 
	`DO
–
pö
->
	`upd©e_ªc
(0, 
d©a
) );

2536 
dñëe
[] 
d
;

2539 
t˛out
 << "suc˚ss" << 
íds
;

2540 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2541 
	`w_ª£t_°r°ªam
(
t˛out
);

2542  
TCL_OK
;

2543 
	}
}

2546 
	$t_¸óã_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2548 i‡(
	`check
(
ù
, "fid hd∏Àn_höàd©a", 
ac
, 5))

2549  
TCL_ERROR
;

2551 
vec_t
 
hdr
, 
d©a
;

2552 
hdr
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

2553 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[4], 
	`°æí
(av[4])));

2556 
°id_t
 
°id
;

2557 
rid_t
 
rid
;

2559 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

2560 
	`DBG
(<< 
av
[0] << " " <<áv[1] << " " <<áv[2] << " " <<áv[3] << " ");

2561 
	`DO
–
sm
->
	`¸óã_ªc
(
°id
, 
hdr
, 
	`obje˘size
(
av
[3]), 
d©a
, 
rid
) );

2562 
	`w_ª£t_°r°ªam
(
t˛out
);

2563 
t˛out
 << 
rid
 << 
íds
;

2565 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2566 
	`w_ª£t_°r°ªam
(
t˛out
);

2567  
TCL_OK
;

2568 
	}
}

2571 
	$t_de°roy_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2573 i‡(
	`check
(
ù
, "rid", 
ac
, 2))

2574  
TCL_ERROR
;

2578 
rid_t
 
rid
;

2580 
	`DBG
(<< 
av
[0] << " " <<áv[1]);

2581 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2582 
	`DO
–
sm
->
	`de°roy_ªc
(
rid
) );

2585 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "update success");

2586  
TCL_OK
;

2587 
	}
}

2590 
	$t_ªad_ªc_1
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[], 
boﬁ
 
dump_body_too
)

2592 i‡(
	`check
(
ù
, "rid sèπÜígth [num_pös]", 
ac
, 4, 5))

2593  
TCL_ERROR
;

2595 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

2596 
smsize_t
 
Àngth
 = 
	`obje˘size
(
av
[3]);

2597 
smsize_t
 
num_pös
;

2598 i‡(
ac
 == 5) {

2599 
num_pös
 = 
	`numobje˘s
(
av
[4]);

2601 
num_pös
 = 1;

2603 
pö_i
 
h™dÀ
;

2605 
	`w_ª£t_°r°ªam
(
t˛out
);

2608 
rid_t
 
rid
;

2609 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2611 
smsize_t
 
i
=1; i<
num_pös
; i++) {

2612 
	`W_IGNORE
(
h™dÀ
.
	`pö
(
rid
, 
°¨t
));

2613 
h™dÀ
.
	`u≈ö
();

2615 
	`DO
(
h™dÀ
.
	`pö
(
rid
, 
°¨t
));

2616 
t˛out
 << "rid=" << 
rid
 << " " << 
íds
;

2623 i‡(
Àngth
 == 0) {

2624 
Àngth
 = 
h™dÀ
.
	`body_size
();

2626 
t˛out
 << 
íds
;

2627 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2628 
	`w_ª£t_°r°ªam
(
t˛out
);

2630 
	`w_ª£t_°r°ªam
(
t˛out
);

2631 
t˛out
 << " size(h.b)=" << 
h™dÀ
.
	`hdr_size
() << "."

2632 << 
h™dÀ
.
	`body_size
(Ë<< " " << 
íds
;

2633 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2635 
	`w_ª£t_°r°ªam
(
t˛out
);

2636 
	`dump_pö_hdr
(
t˛out
, 
h™dÀ
);

2637 
t˛out
 << " " << 
íds
;

2638 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2639 
	`w_ª£t_°r°ªam
(
t˛out
);

2641 if(
dump_body_too
) {

2642 
	`w_ª£t_°r°ªam
(
t˛out
);

2643 
	`dump_pö_body
(
t˛out
, 
h™dÀ
, 
°¨t
, 
Àngth
, 
ù
);

2644 
t˛out
 << " " << 
íds
;

2645 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2646 
	`w_ª£t_°r°ªam
(
t˛out
);

2649  
TCL_OK
;

2650 
	}
}

2652 
	$t_ªad_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2654  
	`t_ªad_ªc_1
(
ù
, 
ac
, 
av
, 
åue
);

2655 
	}
}

2657 
	$t_ªad_hdr
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2659  
	`t_ªad_ªc_1
(
ù
, 
ac
, 
av
, 
Ál£
);

2660 
	}
}

2663 
	$t_¥öt_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2665 i‡(
	`check
(
ù
, "rid sèπÜígth", 
ac
, 4))

2666  
TCL_ERROR
;

2668 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

2669 
smsize_t
 
Àngth
 = 
	`obje˘size
(
av
[3]);

2670 
pö_i
 
h™dÀ
;

2673 
rid_t
 
rid
;

2674 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2676 
	`DO
(
h™dÀ
.
	`pö
(
rid
, 
°¨t
));

2677 i‡(
löked
.
vîbo£_Êag
) {

2678 
cout
 << "rid=" << 
rid
 << " ";

2682 i‡(
Àngth
 == 0) {

2683 
Àngth
 = 
h™dÀ
.
	`body_size
();

2686 i‡(
löked
.
vîbo£_Êag
) {

2687 
	`dump_pö_hdr
(
cout
, 
h™dÀ
);

2689 
	`w_ª£t_°r°ªam
(
t˛out
);

2690 
	`dump_pö_body
(
t˛out
, 
h™dÀ
, 
°¨t
, 
Àngth
, 0);

2691 i‡(
löked
.
vîbo£_Êag
) {

2692 
t˛out
 << 
íds
;

2693 
cout
 << 
t˛out
.
	`c_°r
();

2696  
TCL_OK
;

2697 
	}
}

2700 
	$t_ªad_ªc_body
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2702 i‡(
	`check
(
ù
, "rid [°¨à[Àngth]]", 
ac
, 2, 3, 4))

2703  
TCL_ERROR
;

2705 
smsize_t
 
°¨t
 = (
ac
 >3Ë? 
	`obje˘size
(
av
[2]) : 0;

2706 
smsize_t
 
Àngth
 = (
ac
 >4Ë? 
	`obje˘size
(
av
[3]) : 0;

2707 
pö_i
 
h™dÀ
;

2710 
rid_t
 
rid
;

2711 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2713 
	`DO
(
h™dÀ
.
	`pö
(
rid
, 
°¨t
));

2716 i‡(
Àngth
 == 0) {

2717 
Àngth
 = 
h™dÀ
.
	`body_size
();

2720 
smsize_t
 
off£t
 = (
°¨t
 - 
h™dÀ
.
	`°¨t_byã
());

2721 
smsize_t
 
°¨t_pos
 = 
°¨t
;

2722 
smsize_t
 
amou¡
;

2724 
	`T˛_Re£tResu…
(
ù
);

2726 
boﬁ
 
e‹
 = 
Ál£
;

2727 
Àngth
 > 0)

2729 
amou¡
 = 
	`MIN
(
Àngth
, 
h™dÀ
.
	`Àngth
(Ë- 
off£t
);

2731 
	`•rötf
(
outbuf
, "%.*s", ()
amou¡
, 
h™dÀ
.
	`body
(Ë+ 
off£t
);

2732 
	`T˛_AµídResu…
(
ù
, 
outbuf
, 0);

2734 
Àngth
 -
amou¡
;

2735 
°¨t_pos
 +
amou¡
;

2736 
off£t
 = 0;

2738 
	`DO
(
h™dÀ
.
	`√xt_byãs
(
e‹
));

2739 i‡(
e‹
) {

2743  
TCL_OK
;

2744 
	}
}

2747 
	$t_upd©e_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2749 i‡(
	`check
(
ù
, "rid sèπ d©a", 
ac
, 4))

2750  
TCL_ERROR
;

2752 
smsize_t
 
°¨t
;

2753 
vec_t
 
d©a
;

2755 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[3], 
	`°æí
(av[3])));

2756 
°¨t
 = 
	`obje˘size
(
av
[2]);

2759 
rid_t
 
rid
;

2761 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2762 
	`DO
–
sm
->
	`upd©e_ªc
(
rid
, 
°¨t
, 
d©a
) );

2765 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "update success");

2766  
TCL_OK
;

2767 
	}
}

2770 
	$t_upd©e_ªc_hdr
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2772 i‡(
	`check
(
ù
, "rid sèπ hdr", 
ac
, 4))

2773  
TCL_ERROR
;

2775 
smsize_t
 
°¨t
;

2776 
vec_t
 
hdr
;

2778 
hdr
.
	`£t
(
	`∑r£_vec
(
av
[3], 
	`°æí
(av[3])));

2779 
°¨t
 = 
	`obje˘size
(
av
[2]);

2782 
rid_t
 
rid
;

2784 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2785 
	`DO
–
sm
->
	`upd©e_ªc_hdr
(
rid
, 
°¨t
, 
hdr
) );

2788 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "update hdr success");

2789  
TCL_OK
;

2790 
	}
}

2793 
	$t_≠≥nd_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2795 i‡(
	`check
(
ù
, "rid d©a", 
ac
, 3))

2796  
TCL_ERROR
;

2798 
vec_t
 
d©a
;

2799 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

2802 
rid_t
 
rid
;

2803 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2804 
	`DO
–
sm
->
	`≠≥nd_ªc
(
rid
, 
d©a
) );

2807 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "append success");

2808  
TCL_OK
;

2809 
	}
}

2812 
	$t_åunˇã_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2814 i‡(
	`check
(
ù
, "ridámou¡", 
ac
, 3))

2815  
TCL_ERROR
;

2817 
smsize_t
 
amou¡
 = 
	`obje˘size
(
av
[2]);

2820 
rid_t
 
rid
;

2821 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
rid
;

2822 
	`DO
–
sm
->
	`åunˇã_ªc
(
rid
, 
amou¡
) );

2825 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "append success");

2826  
TCL_OK
;

2827 
	}
}

2830 
	$dump_pö_hdr
(

2831 
o°ªam
 &
out
,

2832 
pö_i
 &
h™dÀ


2835 
j
;

2836 *
outbuf
 = 
√w
 [
h™dÀ
.
	`hdr_size
()+1];

2841 
	`mem˝y
(
outbuf
, 
h™dÀ
.
	`hdr
(), h™dÀ.
	`hdr_size
());

2842 
outbuf
[
h™dÀ
.
	`hdr_size
()] = 0;

2844 
j
=
h™dÀ
.
	`hdr_size
()-1; j>=0; j--) {

2845 if(
outbuf
[
j
]!= '\0') ;

2847 if(
j
== -1) {

2848 
out
 << " hdr=zvec" << 
h™dÀ
.
	`hdr_size
() ;

2850 
out
 << " hdr=" << 
outbuf
 ;

2852 
dñëe
[] 
outbuf
;

2853 
	}
}

2858 
	$dump_pö_body
(

2859 
w_o°r°ªam
 &
out
,

2860 
pö_i
 &
h™dÀ
,

2861 
smsize_t
 
°¨t
,

2862 
smsize_t
 
Àngth
,

2863 
T˛_I¡îp
 * 
ù


2866 c⁄° 
buf_Àn
 = 
ss_m
::
∑ge_sz
 + 1;

2868 *
buf
 = 
√w
 [
buf_Àn
];

2869 i‡(!
buf
)

2870 
	`W_FATAL
(
fcOUTOFMEMORY
);

2871 
	`DBG
(<<"bu‡& " << &
buf
 );

2878 if(
°¨t
 =(
smsize_t
)-1) {

2879 
°¨t
 = 0;

2881 if(
Àngth
 == 0) {

2882 
Àngth
 = 
h™dÀ
.
	`body_size
();

2885 
smsize_t
 
i
 = 
°¨t
;

2886 
smsize_t
 
off£t
 = 
°¨t
-
h™dÀ
.
	`°¨t_byã
();

2887 
boﬁ
 
e‹
 = 
Ál£
;

2888 
i
 < 
Àngth
 && !
e‹
) {

2889 
smsize_t
 
h™dÀ_Àn
 = 
	`MIN
(
h™dÀ
.
	`Àngth
(), 
Àngth
);

2892 
width
 = 
h™dÀ_Àn
-
off£t
;

2896 i‡(
åue
 || 
löked
.
vîbo£_Êag
) {

2897 
out
 << "\nByãs:" << 
i
 << "-" << i+
h™dÀ_Àn
-
off£t
 << ": " ;

2898 if(
ù
) {

2899 
out
 << 
íds
;

2900 
	`T˛_AµídResu…
(
ù
, 
out
.
	`c_°r
(), 0);

2901 
	`w_ª£t_°r°ªam
(
out
);

2906 
j
;

2917 
	`w_as£π1
(
width
+1 < 
buf_Àn
);

2918 
	`DBG
(<<"width " << 
width
 );

2919 
	`mem£t
(
buf
, '\0', 
width
+1);

2920 
	`•rötf
(
buf
, "%.*s", 
width
, 
h™dÀ
.
	`body
()+
off£t
);

2921 
	`DBG
(<<"bu‡" << 
buf
 );

2922 
j
=
width
-1; j>=0; j--) {

2923 if(
buf
[
j
]!= '\0') {

2924 
	`DBG
(<<"byã # " << 
j
 <<

2925 " i†n⁄-zîo: " << (Ë
buf
[
j
] );

2929 if(
j
== -1) {

2930 
out
 << "zvec" << 
width
;

2932 
	`•rötf
(
buf
, "%.*s", 
width
, 
h™dÀ
.
	`body
()+
off£t
);

2933 
out
 << 
buf
;

2934 if(
ù
) {

2935 
out
 << 
íds
;

2936 
	`T˛_AµídResu…
(
ù
, 
buf
, 0);

2937 
	`DBG
(<<"bu‡" << 
buf
 );

2938 
	`w_ª£t_°r°ªam
(
out
);

2944 
i
 +
h™dÀ_Àn
-
off£t
;

2945 
off£t
 = 0;

2946 i‡(
i
 < 
Àngth
) {

2947 if(
h™dÀ
.
	`√xt_byãs
(
e‹
).
	`is_îr‹
()) {

2948 
˚º
 << "îr‹ i¿√xt_byãs" << 
ídl
;

2949 
dñëe
[] 
buf
;

2954 
dñëe
[] 
buf
;

2955 
	}
}

2958 
w_rc_t


2959 
	$dump_sˇn
(
sˇn_fûe_i
 &
sˇn
, 
o°ªam
 &
out
, 
DSCB
 
ˇŒback
, 
boﬁ
 
hex
)

2961 
w_rc_t
 
rc
;

2962 
boﬁ
 
eof
=
Ál£
;

2963 
pö_i
* 
pö
 = 0;

2964 c⁄° 
buf_unô
 = 1024;

2965 *
buf
 = 0;

2966 
buf_Àn
 = 0;

2968 
	`DBG
(<< " &sˇ¿"<< 
	`u_l⁄g
–(*)&
sˇn
) );

2970  !(
rc
=
sˇn
.
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof)

2972 
	`DBG
(

2973 << "Öö " << 
	`u_l⁄g
–(*)
pö
)

2974 << "Éo‡" << 
eof
 );

2975 if(
ˇŒback
) {

2976 (*
ˇŒback
)(*
pö
);

2978 i‡(
löked
.
vîbo£_Êag
) {

2979 
out
 << 
pö
->
	`rid
();

2980 if(
pö
->
	`hdr_size
() > 0) {

2981 if(
pö
->
	`hdr_size
() == ()) {

2982 
out
 << " hdr: " ;

2984 
m
;

2985 
	`mem˝y
(&
m
, 
pö
->
	`hdr
(), ());

2986 
out
 << 
m
;

2987 } if(
hex
) {

2988 
out
 << " hdr: " ;

2989 
qq
 = 0; qq < 
pö
->
	`hdr_size
(); qq++) {

2990 c⁄° *
xxx
 = 
pö
->
	`hdr
(Ë+ 
qq
;

2991 
cout
 << –(*
xxx
) ) << " ";

2994 
out
 << " hdr: " ;

2996 
out
 << 
pö
->
	`hdr
();

2999 
out
 << "(size=" << 
pö
->
	`hdr_size
() << ")" ;

3000 
out
 << " body: " ;

3002 
vec_t
 
w
;

3003 
boﬁ
 
eof
 = 
Ál£
;

3005 if(!
ˇŒback
)

3006 
j
 = 0; j < 
pö
->
	`body_size
();) {

3007 if(
pö
->
	`body_size
() > 0) {

3008 
w
.
	`ª£t
();

3012 i‡(()
pö
->
	`Àngth
(Ë>
buf_Àn
) {

3014 
	`w_as£π3
(
buf_Àn
 <= 8192);

3015 i‡(
buf
)

3016 
dñëe
[] 
buf
;

3018 
buf_Àn
 = (
pö
->
	`Àngth
(Ë+ 1 + 
buf_unô
-1) &

3019 ~(
buf_unô
 - 1);

3020 
buf
 = 
√w
 [
buf_Àn
];

3021 i‡(!
buf
)

3022 
	`W_FATAL
(
fcOUTOFMEMORY
);

3025 
w
.
	`put
(
pö
->
	`body
(),Öö->
	`Àngth
());

3026 
w
.
	`c›y_to
(
buf
, 
buf_Àn
);

3027 
buf
[
pö
->
	`Àngth
()] = '\0';

3028 i‡(
löked
.
vîbo£_Êag
) {

3029 #ifde‡
W_DEBUG


3030 if(
hex
) {

3031 
qq
 = 0; qq < 
pö
->
	`Àngth
(); qq++) {

3032 
cout
 << (
buf
[
qq
]) << " ";

3035 
out
 << 
buf
 ;

3038 
out
 << "÷ígth=" << 
pö
->
	`Àngth
() << ")"

3039 << "(size=" << 
pö
->
	`body_size
() << ")"

3040 << 
ídl
;

3042 
rc
 = 
pö
->
	`√xt_byãs
(
eof
);

3043 if(
rc
.
	`is_îr‹
()) ;

3044 
j
 +
pö
->
	`Àngth
();

3047 i‡(
löked
.
vîbo£_Êag
) {

3048 
out
 << "÷ígth=" << 
pö
->
	`Àngth
() << ")"

3049 << "(size=" << 
pö
->
	`body_size
() << ")"

3050 << 
ídl
;

3053 if(
eof
 || 
rc
.
	`is_îr‹
()) ;

3055 i‡(
löked
.
vîbo£_Êag
) {

3056 
out
 << 
ídl
;

3059 if(
pö
Ëpö->
	`u≈ö
();

3060 i‡(
buf
)

3061 
dñëe
[] 
buf
;

3062  
rc
;

3063 
	}
}

3067 
	$t_sˇn_ªcs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3069 i‡(
	`check
(
ù
, "fid [°¨t_rid]", 
ac
, 2, 3))

3070  
TCL_ERROR
;

3072 
rc_t
 
rc
;

3073 
sˇn_fûe_i
 *
sˇn
;

3076 
rid_t
 
rid
;

3077 
°id_t
 
fid
;

3079 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

3080 i‡(
ac
 == 3) {

3081 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
rid
;

3082 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
rid
);

3084 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
);

3085 
	`DBG
–<< " sˇ¿"<< 
	`u_l⁄g
(
sˇn
) );

3087 
	`DBG
(<< " sˇ¿"<< 
	`u_l⁄g
(
sˇn
Ë<< 
fid
);

3109 
	`TCL_HANDLE_FSCAN_FAILURE
(
sˇn
);

3110 
	`DBG
(<< " sˇ¿"<< 
	`u_l⁄g
(
sˇn
) );

3111 
	`w_as£π1
(
sˇn
 !
NULL
);

3112 
rc
 = 
	`dump_sˇn
(*
sˇn
, 
cout
);

3113 
dñëe
 
sˇn
;

3115 
	`DO
–
rc
 );

3117 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "scan success");

3118  
TCL_OK
;

3119 
	}
}

3122 
	$t_sˇn_rids
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3124 i‡(
	`check
(
ù
, "fid [°¨t_rid]", 
ac
, 2, 3))

3125  
TCL_ERROR
;

3127 
pö_i
* 
pö
;

3128 
boﬁ
 
eof
;

3129 
rc_t
 
rc
;

3130 
sˇn_fûe_i
 *
sˇn
 = 
NULL
;

3132 
	`T˛_Re£tResu…
(
ù
);

3134 
rid_t
 
rid
;

3135 
°id_t
 
fid
;

3137 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

3139 i‡(
ac
 == 3) {

3140 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
rid
;

3141 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
rid
);

3143 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
);

3145 
	`TCL_HANDLE_FSCAN_FAILURE
(
sˇn
);

3147  !(
rc
 = 
sˇn
->
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof ) {

3148 
	`w_ª£t_°r°ªam
(
t˛out
);

3149 
t˛out
 << 
pö
->
	`rid
(Ë<< 
íds
;

3150 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), " ", 0);

3151 
	`w_ª£t_°r°ªam
(
t˛out
);

3155 i‡(
sˇn
) {

3156 
dñëe
 
sˇn
;

3157 
sˇn
 = 
NULL
;

3160 
	`DO
–
rc
);

3162  
TCL_OK
;

3163 
	}
}

3166 
	$t_pö_¸óã
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

3168 i‡(
	`check
(
ù
, "", 
ac
, 1))

3169  
TCL_ERROR
;

3171 
pö_i
* 
p
 = 
√w
Öin_i;;

3172 i‡(!
p
) {

3173 
˚º
 << "Ouào‡mem‹y: fûê" << 
__FILE__


3174 << "Üöê" << 
__LINE__
 << 
ídl
;

3175 
	`W_FATAL
(
fcOUTOFMEMORY
);

3178 
	`w_ª£t_°r°ªam
(
t˛out
);

3179 
	`f‹m©_±r
(
t˛out
, 
p
Ë<< 
íds
;

3180 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3181 
	`w_ª£t_°r°ªam
(
t˛out
);

3182  
TCL_OK
;

3183 
	}
}

3186 
	$t_pö_de°roy
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3188 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3189  
TCL_ERROR
;

3191 
pö_i
 *
p
 = 0;

3192 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3194 i‡(
p
Ë
dñëe
Ö;

3196  
TCL_OK
;

3197 
	}
}

3200 
	$t_pö_pö
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3202 i‡(
	`check
(
ù
, "pöÑec_id sèπ [SH/EX]", 
ac
, 4,5))

3203  
TCL_ERROR
;

3205 
pö_i
 *
p
 = 0;

3206 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3208 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[3]);

3209 
lock_mode_t
 
lmode
 = 
w_ba£_t
::
SH
;

3211 i‡(
ac
 == 5) {

3212 i‡(
	`°rcmp
(
av
[4], "EX") == 0) {

3213 
lmode
 = 
w_ba£_t
::
EX
;

3218 
rid_t
 
rid
;

3219 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
rid
;

3221 
	`DO
(
p
->
	`pö
(
rid
, 
°¨t
, 
lmode
));

3223  
TCL_OK
;

3224 
	}
}

3227 
	$t_pö_u≈ö
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3229 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3230  
TCL_ERROR
;

3232 
pö_i
 *
p
 = 0;

3233 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3235 
p
->
	`u≈ö
();

3237  
TCL_OK
;

3238 
	}
}

3241 
	$t_pö_ªpö
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3243 i‡(
	`check
(
ù
, "pö [SH/EX]", 
ac
, 2,3))

3244  
TCL_ERROR
;

3246 
lock_mode_t
 
lmode
 = 
w_ba£_t
::
SH
;

3247 i‡(
ac
 == 3) {

3248 i‡(
	`°rcmp
(
av
[2], "EX") == 0) {

3249 
lmode
 = 
w_ba£_t
::
EX
;

3253 
pö_i
 *
p
 = 0;

3254 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3256 
	`DO
(
p
->
	`ªpö
(
lmode
));

3258  
TCL_OK
;

3259 
	}
}

3262 
	$t_pö_body
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3264 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3265  
TCL_ERROR
;

3267 
pö_i
 *
p
 = 0;

3268 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3270 
	`mem˝y
(
outbuf
, 
p
->
	`body
(),Ö->
	`Àngth
());

3271 
outbuf
[
p
->
	`Àngth
()] = '\0';

3273 
	`T˛_AµídResu…
(
ù
, 
outbuf
, 0);

3274  
TCL_OK
;

3275 
	}
}

3279 
	$t_pö_√xt_byãs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3281 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3282  
TCL_ERROR
;

3284 
pö_i
 *
p
 = 0;

3285 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3287 
boﬁ
 
eof
;

3288 
	`DO
(
p
->
	`√xt_byãs
(
eof
));

3290 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_Êag
(
eof
), 0);

3292  
TCL_OK
;

3293 
	}
}

3296 
	$t_∑ge_c⁄èöög
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3298 i‡(
	`check
(
ù
, "pö off£t", 
ac
, 3))

3299  
TCL_ERROR
;

3301 
pö_i
 *
p
 = 0;

3302 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3304 
smsize_t
 
off£t
 = 
	`°πﬁ
(
av
[2], 0, 0);

3305 
smsize_t
 
byã_ö_∑ge
;

3306 
Õid_t
 
∑ge
 = 
p
->
	`∑ge_c⁄èöög
(
off£t
, 
byã_ö_∑ge
);

3308 
	`w_ª£t_°r°ªam
(
t˛out
);

3309 
t˛out
 << 
∑ge
 <<
íds
;

3311 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3312 
	`w_ª£t_°r°ªam
(
t˛out
);

3314  
TCL_OK
;

3315 
	}
}

3318 
	$t_pö_hdr
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3320 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3321  
TCL_ERROR
;

3323 
pö_i
 *
p
 = 0;

3324 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3326 
	`mem˝y
(
outbuf
, 
p
->
	`hdr
(),Ö->
	`hdr_size
());

3327 
outbuf
[
p
->
	`hdr_size
()] = '\0';

3329 
	`T˛_AµídResu…
(
ù
, 
outbuf
, 0);

3331  
TCL_OK
;

3332 
	}
}

3335 
	$t_pö_pö√d
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3337 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3338  
TCL_ERROR
;

3340 
pö_i
 *
p
 = 0;

3341 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3343 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_Êag
(
p
->
	`pö√d
()), 0);

3345  
TCL_OK
;

3346 
	}
}

3349 
	$t_pö_œrge_im∂
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3351 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3352  
TCL_ERROR
;

3354 
pö_i
 *
p
 = 0;

3355 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3357 
j

p
->
	`œrge_im∂
();

3358 
	`w_ª£t_°r°ªam
(
t˛out
);

3359 
t˛out
 << 
j
 <<
íds
;

3360 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3361 
	`w_ª£t_°r°ªam
(
t˛out
);

3363  
TCL_OK
;

3364 
	}
}

3367 
	$t_pö_is_smÆl
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3369 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3370  
TCL_ERROR
;

3372 
pö_i
 *
p
 = 0;

3373 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3375 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_Êag
(
p
->
	`is_smÆl
()), 0);

3377  
TCL_OK
;

3378 
	}
}

3381 
	$t_pö_rid
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3383 i‡(
	`check
(
ù
, "pö", 
ac
, 2))

3384  
TCL_ERROR
;

3389 
pö_i
 *
p
 = 0;

3390 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3392 
	`w_ª£t_°r°ªam
(
t˛out
);

3394 
t˛out
 << 
p
->
	`rid
(Ë<< 
íds
;

3396 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3397 
	`w_ª£t_°r°ªam
(
t˛out
);

3399  
TCL_OK
;

3400 
	}
}

3403 
	$t_pö_≠≥nd_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3405 i‡(
	`check
(
ù
, "pö d©a", 
ac
, 3))

3406  
TCL_ERROR
;

3408 
vec_t
 
d©a
;

3409 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

3411 
pö_i
 *
p
 = 0;

3412 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3414 
	`DO
–
p
->
	`≠≥nd_ªc
(
d©a
) );

3416  
TCL_OK
;

3417 
	}
}

3420 
	$t_pö_upd©e_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3422 i‡(
	`check
(
ù
, "pö sèπ d©a", 
ac
, 4))

3423  
TCL_ERROR
;

3425 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

3426 
vec_t
 
d©a
;

3427 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[3], 
	`°æí
(av[3])));

3429 
pö_i
 *
p
 = 0;

3430 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3432 
	`DO
–
p
->
	`upd©e_ªc
(
°¨t
, 
d©a
) );

3434  
TCL_OK
;

3435 
	}
}

3438 
	$t_pö_upd©e_ªc_hdr
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3440 i‡(
	`check
(
ù
, "pö sèπ d©a", 
ac
, 4))

3441  
TCL_ERROR
;

3443 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

3444 
vec_t
 
d©a
;

3445 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[3], 
	`°æí
(av[3])));

3447 
pö_i
 *
p
 = 0;

3448 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3450 
	`DO
–
p
->
	`upd©e_ªc_hdr
(
°¨t
, 
d©a
) );

3452  
TCL_OK
;

3453 
	}
}

3456 
	$t_pö_åunˇã_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3458 i‡(
	`check
(
ù
, "pöámou¡", 
ac
, 3))

3459  
TCL_ERROR
;

3461 
smsize_t
 
amou¡
 = 
	`obje˘size
(
av
[2]);

3463 
pö_i
 *
p
 = 0;

3464 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
p
)Ë 
TCL_ERROR
;

3466 
	`DO
–
p
->
	`åunˇã_ªc
(
amou¡
) );

3468  
TCL_OK
;

3469 
	}
}

3472 
	$t_sˇn_fûe_¸óã
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3475 
ss_m
::
c⁄cuºícy_t
 
cc
;

3476 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[2]);

3478 
sˇn_fûe_i
* 
s
 = 
NULL
;

3481 i‡(
	`check
(
ù
, "fileid concurrency_t [prefetch(Boolean) [start_rid]]",

3482 
ac
, 3,4,5))

3483  
TCL_ERROR
;

3485 
°id_t
 
fid
;

3486 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

3488 i‡(
ac
 >= 4) {

3489 
rid_t
 
rid
;

3490 
boﬁ
 
¥e„tch
=
Ál£
;

3491 
w_i°r°ªam
 
	`™⁄3
(
av
[3]); 
™⁄3
 >> 
¥e„tch
;

3493 i‡(
ac
 > 4) {

3494 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
rid
;

3496 
s
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
rid
, 
cc
, 
¥e„tch
);

3498 if(
cc
 =
ss_m
::
t_cc_≠≥nd
) {

3499 
s
 = 
√w
 
	`≠≥nd_fûe_i
(
fid
);

3501 
s
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
cc
);

3504 i‡(!
s
) {

3505 
˚º
 << "Ouào‡mem‹y: fûê" << 
__FILE__


3506 << "Üöê" << 
__LINE__
 << 
ídl
;

3507 
	`W_FATAL
(
fcOUTOFMEMORY
);

3509 if(
s
->
	`îr‹_code
().
	`is_îr‹
()) {

3510 
w_rc_t
 
rc
 = 
	`RC
(
s
->
	`îr‹_code
().
	`îr_num
());

3511 
˚º
 << 
rc
 << 
ídl
;

3513 
	`TCL_HANDLE_FSCAN_FAILURE
(
s
);

3516 
	`w_ª£t_°r°ªam
(
t˛out
);

3517 
	`f‹m©_±r
(
t˛out
, 
s
Ë<< 
íds
;

3519 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3521 
	`w_ª£t_°r°ªam
(
t˛out
);

3522  
TCL_OK
;

3523 
	}
}

3526 
	$t_sˇn_fûe_de°roy
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3528 i‡(
	`check
(
ù
, "sˇn", 
ac
, 2))

3529  
TCL_ERROR
;

3531 
sˇn_fûe_i
 *
s
 = 0;

3532 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3534 i‡(
s
Ë
dñëe
 s;

3536  
TCL_OK
;

3537 
	}
}

3541 
	$t_sˇn_fûe_curs‹
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3543 i‡(
	`check
(
ù
, "sˇ¿", 
ac
, 2))

3544  
TCL_ERROR
;

3546 
sˇn_fûe_i
 *
s
 = 0;

3547 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3549 
pö_i
* 
p
;

3550 
boﬁ
 
eof
=
Ál£
;

3551 
s
->
	`curs‹
(
p
, 
eof
);

3552 i‡(
eof
Ë
p
 = 
NULL
;

3554 
	`w_ª£t_°r°ªam
(
t˛out
);

3555 
	`f‹m©_±r_nuŒ
(
t˛out
, 
p
Ë<< 
íds
;

3556 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3557 
	`w_ª£t_°r°ªam
(
t˛out
);

3559  
TCL_OK
;

3560 
	}
}

3563 
	$t_sˇn_fûe_√xt
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3565 i‡(
	`check
(
ù
, "sˇ¿°¨t", 
ac
, 3))

3566  
TCL_ERROR
;

3568 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

3569 
sˇn_fûe_i
 *
s
 = 0;

3570 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3572 
pö_i
* 
p
;

3573 
boﬁ
 
eof
=
Ál£
;

3574 
	`DO
(
s
->
	`√xt
(
p
, 
°¨t
, 
eof
));

3575 i‡(
eof
Ë
p
 = 
NULL
;

3577 
	`w_ª£t_°r°ªam
(
t˛out
);

3578 
	`f‹m©_±r_nuŒ
(
t˛out
, 
p
Ë<< 
íds
;

3579 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3580 
	`w_ª£t_°r°ªam
(
t˛out
);

3582  
TCL_OK
;

3583 
	}
}

3587 
	$t_sˇn_fûe_√xt_∑ge
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3589 i‡(
	`check
(
ù
, "sˇ¿°¨t", 
ac
, 3))

3590  
TCL_ERROR
;

3592 
smsize_t
 
°¨t
 = 
	`obje˘size
(
av
[2]);

3593 
sˇn_fûe_i
 *
s
 = 0;

3594 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3596 
pö_i
* 
p
;

3597 
boﬁ
 
eof
;

3598 
	`DO
(
s
->
	`√xt_∑ge
(
p
, 
°¨t
, 
eof
));

3599 i‡(
eof
Ë
p
 = 
NULL
;

3601 
	`w_ª£t_°r°ªam
(
t˛out
);

3602 
	`f‹m©_±r_nuŒ
(
t˛out
, 
p
Ë<< 
íds
;

3603 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3604 
	`w_ª£t_°r°ªam
(
t˛out
);

3606  
TCL_OK
;

3607 
	}
}

3611 
	$t_sˇn_fûe_föish
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3613 i‡(
	`check
(
ù
, "sˇn", 
ac
, 2))

3614  
TCL_ERROR
;

3616 
sˇn_fûe_i
 *
s
 = 0;

3617 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3619 
s
->
	`föish
();

3620  
TCL_OK
;

3621 
	}
}

3624 
	$t_sˇn_fûe_≠≥nd
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3626 i‡(
	`check
(
ù
, "sˇ¿hd∏Àn_höàd©a", 
ac
, 5))

3627  
TCL_ERROR
;

3629 
≠≥nd_fûe_i
 *
s
 = 0;

3630 i‡(
	`ªad_±r
(
ù
, 
av
[1], 
s
)Ë 
TCL_ERROR
;

3632 
vec_t
 
hdr
, 
d©a
;

3633 
hdr
.
	`£t
(
	`∑r£_vec
(
av
[2], 
	`°æí
(av[2])));

3634 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[4], 
	`°æí
(av[4])));

3636 
rid_t
 
rid
;

3638 
	`w_ª£t_°r°ªam
(
t˛out
);

3641 
	`DO
–
s
->
	`¸óã_ªc
(
hdr
, 
	`obje˘size
(
av
[3]), 
d©a
, 
rid
) );

3642 
t˛out
 << 
rid
 << 
íds
;

3644 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3645 
	`w_ª£t_°r°ªam
(
t˛out
);

3646  
TCL_OK
;

3647 
	}
}

3650 
	$t_¸óã_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3652 i‡(
	`check
(
ù
, "°id keyÉ»[keydes¸] [c⁄cuºícy]", 
ac
, 4, 5, 6))

3654  
TCL_ERROR
;

3656 
vec_t
 
key
, 
ñ
;

3657 
i
;

3658 
u
;

3660 
w_ba£_t
::
öt8_t
 
û
;

3661 
w_ba£_t
::
uöt8_t
 
ul
;

3663 
key
.
	`put
(
av
[2], 
	`°æí
(av[2]));

3664 
ñ
.
	`put
(
av
[3], 
	`°æí
(av[3]));

3666 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_kvl
;

3667 
rid_t
 
rid
;

3668 i‡(
ac
 == 6) {

3669 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[5]);

3670 if(
cc
 =
ss_m
::
t_cc_im
 ) {

3674 
w_i°r°ªam
 
	`™⁄2
(
av
[3]); 
™⁄2
 >> 
rid
;

3676 
ñ
.
	`ª£t
().
	`put
(&
rid
, (rid));

3680 i‡(
ac
 > 4) {

3681 c⁄° *
keydes¸
 = (c⁄° *)
av
[4];

3683 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
keydes¸
);

3684 i‡(
t
 =
ã°_nosuch
) {

3685 
	`T˛_AµídResu…
(
ù
,

3687  
TCL_ERROR
;

3690 
t
) {

3691 
ã°_i4
: {

3692 
i
 = 
	`°πﬁ
(
av
[2], 0, 0);

3693 
key
.
	`ª£t
();

3694 
key
.
	`put
(&
i
, ());

3697 
ã°_u4
: {

3698 
u
 = 
	`°πoul
(
av
[2], 0, 0);

3699 
key
.
	`ª£t
();

3700 
key
.
	`put
(&
u
, (u));

3704 
ã°_i8
: {

3705 
û
 = 
w_ba£_t
::
	`°πoi8
(
av
[2]);

3706 
key
.
	`ª£t
();

3707 
key
.
	`put
(&
i
, (
w_ba£_t
::
öt8_t
));

3709 
ã°_u8
: {

3710 
ul
 = 
w_ba£_t
::
	`°πou8
(
av
[2]);

3711 
key
.
	`ª£t
();

3712 
key
.
	`put
(&
u
, (
w_ba£_t
::
uöt8_t
));

3716 
ã°_bv
:

3717 
ã°_b1
:

3718 
ã°_b23
:

3722 
	`T˛_AµídResu…
(
ù
,

3724 
keydes¸
, 0);

3725  
TCL_ERROR
;

3730 
°id_t
 
°id
;

3731 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3732 
	`DO
–
sm
->
	`¸óã_assoc
(
°id
, 
key
, 
ñ
) );

3734  
TCL_OK
;

3735 
	}
}

3738 
	$t_de°roy_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3740 i‡(
	`check
(
ù
, "°id keyÉ»[keyty≥]", 
ac
, 4, 5))

3741  
TCL_ERROR
;

3743 
vec_t
 
key
, 
ñ
;

3745 
key
.
	`put
(
av
[2], 
	`°æí
(av[2]));

3746 
ñ
.
	`put
(
av
[3], 
	`°æí
(av[3]));

3748 
i
;

3749 
u
;

3751 i‡(
ac
 > 4) {

3752 c⁄° *
keydes¸
 = (c⁄° *)
av
[4];

3756 if(
keydes¸
[0] != 'b'

3757 && 
keydes¸
[0] != 'i'

3758 && 
keydes¸
[0] != 'u'

3760 
	`T˛_AµídResu…
(
ù
,

3762  
TCL_ERROR
;

3765 if–
keydes¸
[0] == 'i' ) {

3766 
i
 = 
	`©oi
(
av
[2]);

3767 
key
.
	`ª£t
();

3768 
key
.
	`put
(&
i
, ());

3769 } if–
keydes¸
[0] == 'u') {

3770 
u
 = 
	`°πoul
(
av
[2], 0, 0);

3771 
key
.
	`ª£t
();

3772 
key
.
	`put
(&
u
, (u));

3777 
°id_t
 
°id
;

3778 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3779 
	`DO
–
sm
->
	`de°roy_assoc
(
°id
, 
key
, 
ñ
) );

3782  
TCL_OK
;

3783 
	}
}

3785 
	$t_de°roy_Æl_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3787 i‡(
	`check
(
ù
, "°id key", 
ac
, 3))

3788  
TCL_ERROR
;

3790 
vec_t
 
key
;

3792 
key
.
	`put
(
av
[2], 
	`°æí
(av[2]));

3794 
num_ªmoved
;

3796 
°id_t
 
°id
;

3797 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3798 
	`DO
–
sm
->
	`de°roy_Æl_assoc
(
°id
, 
key
, 
num_ªmoved
) );

3801 
	`w_ª£t_°r°ªam
(
t˛out
);

3802 
t˛out
 << 
num_ªmoved
 << 
íds
;

3803 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3804 
	`w_ª£t_°r°ªam
(
t˛out
);

3805  
TCL_OK
;

3806 
	}
}

3809 
	$t_föd_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3811 i‡(
	`check
(
ù
, "°id key [keyty≥]", 
ac
, 3, 4))

3812  
TCL_ERROR
;

3814 
vec_t
 
key
;

3815 
boﬁ
 
found
;

3816 
key
.
	`put
(
av
[2], 
	`°æí
(av[2]));

3818 
i
;

3819 
u
;

3821 i‡(
ac
 > 3) {

3822 c⁄° *
keydes¸
 = (c⁄° *)
av
[3];

3826 if(
keydes¸
[0] != 'b'

3827 && 
keydes¸
[0] != 'i'

3828 && 
keydes¸
[0] != 'u'

3830 
	`T˛_AµídResu…
(
ù
,

3832  
TCL_ERROR
;

3835 if–
keydes¸
[0] == 'i' ) {

3836 
i
 = 
	`©oi
(
av
[2]);

3837 
key
.
	`ª£t
();

3838 
key
.
	`put
(&
i
, ());

3839 } if–
keydes¸
[0] == 'u') {

3840 
u
 = 
	`°πoul
(
av
[2], 0, 0);

3841 
key
.
	`ª£t
();

3842 
key
.
	`put
(&
u
, (u));

3845 
	#ELSIZE
 4044

	)

3846 *
ñ
 = 
√w
 [
ELSIZE
];

3847 
smsize_t
 
ñí
 = 
ELSIZE
-1;

3849 
w_rc_t
 
___rc
;

3852 
°id_t
 
°id
;

3853 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3854 
___rc
 = 
sm
->
	`föd_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
);

3856 i‡(
___rc
.
	`is_îr‹
()) {

3857 
	`w_ª£t_°r°ªam
(
t˛out
);

3858 
t˛out
 << 
___rc
 << 
íds
;

3859 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3860 
	`w_ª£t_°r°ªam
(
t˛out
);

3861 
dñëe
[] 
ñ
;

3862  
TCL_ERROR
;

3865 
ñ
[
ñí
] = '\0';

3866 i‡(
found
) {

3867 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
ñ
);

3868 
dñëe
[] 
ñ
;

3869  
TCL_OK
;

3872 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "not found");

3873 
dñëe
[] 
ñ
;

3874  
TCL_ERROR
;

3875 
	}
}

3878 
	$t_¸óã_md_ödex
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3880 i‡(
	`check
(
ù
, "vid dimÇdxtype [\"tmp|regular|load_file|insert_file\"] ",

3881 
ac
, 4, 5))

3882  
TCL_ERROR
;

3884 
öt2_t
 
dim
 = 
	`©oi
(
av
[2]);

3886 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
 = ss_m::
t_ªguœr
;

3887 i‡(
ac
 > 4) {

3888 
¥›îty
 = 
	`cvt2°‹e_¥›îty
(
av
[4]);

3891 
°id_t
 
°id
;

3892 
	`DO
–
sm
->
	`¸óã_md_ödex
(
	`©oi
(
av
[1]), 
	`cvt2ndx_t
(av[3]),

3893 
¥›îty
, 
°id
, 
dim
) );

3894 
	`w_ª£t_°r°ªam
(
t˛out
);

3895 
t˛out
 << 
°id
 << 
íds
;

3897 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3898 
	`w_ª£t_°r°ªam
(
t˛out
);

3899  
TCL_OK
;

3900 
	}
}

3903 
	$t_¸óã_md_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3905 i‡(
	`check
(
ù
, "°id boxÉl", 
ac
, 4))

3906  
TCL_ERROR
;

3908 
vec_t
 
ñ
;

3909 
nbox_t
 
	`key
(
av
[2]);

3911 
ñ
.
	`put
(
av
[3], 
	`°æí
(av[3]) + 1);

3913 
°id_t
 
°id
;

3914 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3915 
	`DO
–
sm
->
	`¸óã_md_assoc
(
°id
, 
key
, 
ñ
) );

3918  
TCL_OK
;

3919 
	}
}

3923 
	$t_föd_md_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3925 i‡(
	`check
(
ù
, "°id box", 
ac
, 3))

3926  
TCL_ERROR
;

3928 
nbox_t
 
	`key
(
av
[2]);

3929 
boﬁ
 
found
;

3931 
	#ELEN_
 80

	)

3932 
ñ
[
ELEN_
];

3933 
smsize_t
 
ñí
 = (Ë* 
ELEN_
;

3936 
°id_t
 
°id
;

3937 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3938 
	`DO
–
sm
->
	`föd_md_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
) );

3940 i‡(
found
) {

3941 
ñ
[
ñí
] = 0;

3942 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
ñ
);

3944  
TCL_OK
;

3945 
	}
}

3949 
	$t_de°roy_md_assoc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

3951 i‡(
	`check
(
ù
, "°id boxÉl", 
ac
, 4))

3952  
TCL_ERROR
;

3954 
vec_t
 
ñ
;

3955 
nbox_t
 
	`key
(
av
[2]);

3957 
ñ
.
	`put
(
av
[3], 
	`°æí
(av[3]) + 1);

3959 
°id_t
 
°id
;

3960 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3961 
	`DO
–
sm
->
	`de°roy_md_assoc
(
°id
, 
key
, 
ñ
) );

3964  
TCL_OK
;

3965 
	}
}

3967 
	$boxGí
(
nbox_t
* 
ª˘
[], 
numbî
, c⁄°Çbox_t& 
univî£
)

3969 
i
;

3970 
box
[4];

3971 
Àngth
, 
width
;

3973 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

3975 
i
 = 0; i < 
numbî
; i++) {

3977 
Àngth
 = 
width
 = 20;

3978 i‡(
Àngth
 > 10*
width
 || width > 10*length)

3979 
width
 = 
Àngth
 = (width +Üength)/2;

3980 
box
[0] = ((Ë(
gíî©‹
.
	`dønd
(Ë* (
univî£
.
	`side
(0Ë- 
Àngth
))

3981 + 
univî£
.
	`side
(0)) % universe.side(0)

3982 + 
univî£
.
	`bound
(0);

3983 
box
[1] = ((Ë(
gíî©‹
.
	`dønd
(Ë* (
univî£
.
	`side
(1Ë- 
width
))

3984 + 
univî£
.
	`side
(1)) % universe.side(1)

3985 + 
univî£
.
	`bound
(1);

3986 
box
[2] = box[0] + 
Àngth
;

3987 
box
[3] = box[1] + 
width
;

3988 
ª˘
[
i
] = 
√w
 
	`nbox_t
(2, 
box
);

3990 
	}
}

3997 
	sBoxMödî
 {

3998 íum { 
	mbox_cou¡
 = 50 };

4000 
boﬁ
 
	mhave_boxes
;

4001 
	m√xt
;

4003 
nbox_t
 *
	mbox
[
box_cou¡
];

4005 
BoxMödî
()

4006 : 
have_boxes
(
Ál£
),

4007 
√xt
(-1)

4009 
	mi
 = 0; i < 
	mbox_cou¡
; i++)

4010 
	mbox
[
i
] = 0;

4013 ~
BoxMödî
()

4015 
	mi
 = 0; i < 
	mbox_cou¡
; i++) {

4016 i‡(
	mbox
[
i
])

4017 
dñëe
 
	mbox
[
i
];

4018 
	mbox
[
i
] = 0;

4020 
	mhave_boxes
 = 
Ál£
;

4021 
	m√xt
 = -1;

4024 
nbox_t
 *
√xt_box
(c⁄°Çbox_à&
univî£
)

4026 i‡(++
	m√xt
 >
box_cou¡
) {

4027 
i
 = 0; 
	mi
 < 
	mbox_cou¡
; i++)

4028 
dñëe
 
	mbox
[
i
];

4029 
	m√xt
 = -1;

4030 
	mhave_boxes
 = 
Ál£
;

4033 i‡(!
	mhave_boxes
) {

4034 
boxGí
(
box
, 
box_cou¡
, 
univî£
);

4035 
	m√xt
 = 0;

4036 
	mhave_boxes
 = 
åue
;

4039  
	mbox
[
√xt
];

4044 
BoxMödî
 
	gboxes
;

4053 
	$t_√xt_box
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4055 if(
	`num_t˛_thªads_ru¬ög
() > 1) {

4056 
	`Ârötf
(
°dîr
, "t_next_box isÇotÅhread-safe\n");

4057 
	`w_as£π1
(0);

4059 
	`T˛_AµídResu…
(
ù
, "t_next_box isÇotÅhread-safe");

4060  
TCL_ERROR
;

4063 i‡(
	`check
(
ù
, "univî£", 
ac
, 2))

4064  
TCL_ERROR
;

4066 
nbox_t
 
	`univî£
(
av
[1]);

4067 
nbox_t
 *
box
 = 0;

4069 
box
 = 
boxes
.
	`√xt_box
(
univî£
);

4071 
	`T˛_AµídEÀmít
(
ù
, 
	`TCL_CVBUG
 (*
box
));

4073  
TCL_OK
;

4074 
	}
}

4078 
	$t_døw_πªe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4080 i‡(
	`check
(
ù
, "°id", 
ac
, 3))

4081  
TCL_ERROR
;

4083 
of°ªam
 
	`DøwFûe
(
av
[2]);

4084 i‡(!
DøwFûe
) {

4085 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

4086 
˚º
 << "C™'à›í døw fûe: " << 
av
[2] << ":" << 
ídl


4087 << 
e
 << 
ídl
;

4089  
TCL_ERROR
;

4093 
°id_t
 
°id
;

4094 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

4095 
	`DO
–
sm
->
	`døw_πªe
(
°id
, 
DøwFûe
) );

4097  
TCL_OK
;

4098 
	}
}

4101 
	$t_πªe_°©s
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4103 i‡(
	`check
(
ù
, "°id", 
ac
, 2))

4104  
TCL_ERROR
;

4105 
uöt2_t
 
Àvñ
 = 5;

4106 
uöt2_t
 
ovp
[5];

4107 
πªe_°©s_t
 
°©s
;

4110 
°id_t
 
°id
;

4111 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

4112 
	`DO
–
sm
->
	`πªe_°©s
(
°id
, 
°©s
, 
Àvñ
, 
ovp
) );

4115 i‡(
löked
.
vîbo£_Êag
) {

4116 
cout
 << "πªê°©: " << 
ídl
;

4117 
cout
 << 
°©s
 << 
ídl
;

4120 i‡(
löked
.
vîbo£_Êag
) {

4121 
cout
 << "overlapping stats: ";

4122 
uöt
 
i
=0; i<
°©s
.
Àvñ_˙t
; i++) {

4123 
cout
 << " (" << 
i
 << "Ë" << 
ovp
[i];

4125 
cout
 << 
ídl
;

4128  
TCL_OK
;

4129 
	}
}

4132 
	$t_πªe_sˇn
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4134 i‡(
	`check
(
ù
, "°id c⁄d box [c⁄cuºícy_t]", 
ac
, 4, 5))

4135  
TCL_ERROR
;

4137 
nbox_t
 
	`box
(
av
[3]);

4138 
nbox_t
::
sob_cmp_t
 
c⁄d
 = 
	`cvt2sob_cmp_t
(
av
[2]);

4139 
sˇn_π_i
* 
s
 = 
NULL
;

4141 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_∑ge
;

4142 i‡(
ac
 == 5) {

4143 
cc
 = 
	`cvt2c⁄cuºícy_t
(
av
[4]);

4147 
°id_t
 
°id
;

4148 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

4150 
s
 = 
√w
 
	`sˇn_π_i
(
°id
, 
c⁄d
, 
box
, 
cc
);

4152 i‡(!
s
) {

4153 
˚º
 << "Ouào‡mem‹y: fûê" << 
__FILE__


4154 << "Üöê" << 
__LINE__
 << 
ídl
;

4155 
	`W_FATAL
(
fcOUTOFMEMORY
);

4158 
boﬁ
 
eof
 = 
Ál£
;

4159 
tmp
[100];

4160 
smsize_t
 
ñí
 = 100;

4161 
nbox_t
 
	`ªt
(
box
);

4163 #ifde‡
SSH_VERBOSE


4164 i‡(
löked
.
vîbo£_Êag
) {

4165 
cout
 << "------- start of query ----------\n";

4166 
cout
 << "m©chögÑe˘†o‡" << 
av
[2]

4167 << " quîy f‹Ñe˘ (" << 
av
[3] << ")áre: \n";

4171 i‡–
s
->
	`√xt
(
ªt
, 
tmp
, 
ñí
, 
eof
).
	`is_îr‹
() ) {

4172 
dñëe
 
s
;  
TCL_ERROR
;

4174 !
eof
) {

4175 i‡(
löked
.
vîbo£_Êag
) {

4176 
ªt
.
	`¥öt
(
cout
, 4);

4177 #ifde‡
SSH_VERBOSE


4178 
tmp
[
ñí
] = 0;

4179 
cout
 << "\ãÀm " << 
tmp
 << 
ídl
;

4182 
ñí
 = 100;

4183 i‡–
s
->
	`√xt
(
ªt
, 
tmp
, 
ñí
, 
eof
).
	`is_îr‹
() ) {

4184 
dñëe
 
s
;  
TCL_ERROR
;

4188 #ifde‡
SSH_VERBOSE


4189 i‡(
löked
.
vîbo£_Êag
) {

4190 
cout
 << "--------Énd of query -----------\n";

4194 
dñëe
 
s
;

4195  
TCL_OK
;

4196 
	}
}

4200 
	$t_begö_s‹t_°ªam
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4203 c⁄° 
vid_¨g
=1;

4204 c⁄° 
runsize_¨g
=2;

4205 c⁄° 
ty≥_¨g
=3;

4206 c⁄° 
æí_¨g
=4;

4207 c⁄° 
di°ö˘_¨g
=5;

4208 c⁄° 
updown_¨g
=6;

4209 c⁄° 
univî£_¨g
=7;

4210 c⁄° 
dîived_¨g
=8;

4211 c⁄° *
ußge_°rög
 =

4215 i‡(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 
updown_¨g
+1, 
univî£_¨g
+1, 
dîived_¨g
+1))

4216  
TCL_ERROR
;

4218 
key_öfo_t
 
öfo
;

4219 
s‹t_∑rm_t
 
•
;

4221 
öfo
.
off£t
 = 0;

4222 
öfo
.
whîe
 = 
key_öfo_t
::
t_hdr
;

4224 
	`cvt2ty≥
(
av
[
ty≥_¨g
])) {

4225 
ã°_bv
:

4227 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_b
;

4228 
öfo
.
Àn
 = 0;

4230 
ã°_b1
:

4232 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

4233 
öfo
.
Àn
 = ();

4235 
ã°_i1
:

4237 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i1
;

4238 
öfo
.
Àn
 = (
öt1_t
);

4240 
ã°_i2
:

4242 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i2
;

4243 
öfo
.
Àn
 = (
öt2_t
);

4245 
ã°_i4
:

4247 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i4
;

4248 
öfo
.
Àn
 = (
öt4_t
);

4250 
ã°_i8
:

4253 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i8
;

4254 
öfo
.
Àn
 = (
w_ba£_t
::
öt8_t
);

4256 
ã°_u1
:

4258 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

4259 
öfo
.
Àn
 = (
uöt1_t
);

4261 
ã°_u2
:

4263 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u2
;

4264 
öfo
.
Àn
 = (
uöt2_t
);

4266 
ã°_u4
:

4268 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u4
;

4269 
öfo
.
Àn
 = (
uöt4_t
);

4271 
ã°_u8
:

4273 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u8
;

4274 
öfo
.
Àn
 = (
w_ba£_t
::
uöt8_t
);

4276 
ã°_f4
:

4278 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f4
;

4279 
öfo
.
Àn
 = (
f4_t
);

4281 
ã°_f8
:

4283 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f8
;

4284 
öfo
.
Àn
 = (
f8_t
);

4286 
ã°_•©ül
:

4288 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_•©ül
;

4289 
öfo
.
Àn
 = 0;

4290 i‡(
ac
<=8) {

4291 i‡(
	`check
(
ù
, 
ußge_°rög
, 9, 10)Ë 
TCL_ERROR
;

4295 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

4299 
•
.
run_size
 = 
	`©oi
(
av
[
runsize_¨g
]);

4300 
•
.
vﬁ
 = 
	`©oi
(
av
[
vid_¨g
]);

4302 i‡(
	`°rcmp
("n‹mÆ", 
av
[
di°ö˘_¨g
])) {

4303 
•
.
unique
 = !
	`°rcmp
("di°ö˘", 
av
[
di°ö˘_¨g
]);

4304 i‡(!
•
.
unique
) {

4305 i‡(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 0)Ë 
TCL_ERROR
;

4309 i‡(
	`°rcmp
("up", 
av
[
updown_¨g
])) {

4310 
•
.
as˚ndög
 = (
	`°rcmp
("down", 
av
[
updown_¨g
]) != 0);

4311 i‡(
•
.
as˚ndög
) {

4312 i‡(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 0)Ë 
TCL_ERROR
;

4316 i‡(
ac
>
univî£_¨g
) {

4317 
nbox_t
 
	`univ
(
av
[
univî£_¨g
]);

4318 
öfo
.
univî£
 = 
univ
;

4319 
öfo
.
Àn
 = 
univ
.
	`kÀn
();

4322 i‡(
ac
>
dîived_¨g
) {

4323 
öfo
.
dîived
 = (
	`©oi
(
av
[
dîived_¨g
]) != 0);

4326 
s‹t_°ªam_i
* 
ªs
 = 
	`ª∂a˚_s‹t_c⁄èöî
(

4327 
√w
 
	`s‹t_°ªam_i
(
öfo
, 
•
, 
	`©oi
(
av
[
æí_¨g
])));

4329 
	`w_as£π0
(
ªs
);

4330  
TCL_OK
;

4331 
	}
}

4334 
	$t_s‹t_°ªam_put
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4337 i‡(
	`check
(
ù
, "ty≥ key d©a", 
ac
, 4))

4338  
TCL_ERROR
;

4340 
s‹t_°ªam_i
* 
	`s‹t_c⁄èöî
(
	`gë_s‹t_c⁄èöî
());

4342 i‡(!
s‹t_c⁄èöî
)

4343  
TCL_ERROR
;

4345 
vec_t
 
key
, 
d©a
;

4347 
ty≥d_vÆue
 
v
;

4348 
	`cvt2ty≥d_vÆue
–
	`cvt2ty≥
(
av
[1]),áv[2], 
v
);

4350 
key
.
	`put
(&
v
.
_u
, v.
_Àngth
);

4352 
d©a
.
	`put
(
av
[3], 
	`°æí
(av[3]));

4354 
	`DO
–
s‹t_c⁄èöî
->
	`put
(
key
, 
d©a
) );

4355  
TCL_OK
;

4356 
	}
}

4359 
	$t_s‹t_°ªam_gë
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4361 i‡(
	`check
(
ù
, "√xàty≥", 
ac
, 3))

4362  
TCL_ERROR
;

4364 i‡(
	`°rcmp
(
av
[1],"next")) {

4365 i‡(
	`check
(
ù
, "√xt", 
ac
, 0))

4366  
TCL_ERROR
;

4369 
vec_t
 
key
, 
d©a
;

4370 
boﬁ
 
eof
 = 
åue
;

4371 
s‹t_°ªam_i
* 
	`s‹t_c⁄èöî
(
	`gë_s‹t_c⁄èöî
());

4373 i‡(
s‹t_c⁄èöî
) {

4374 
	`DO
–
s‹t_c⁄èöî
->
	`gë_√xt
(
key
, 
d©a
, 
eof
) );

4377 i‡(
eof
) {

4378 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "eof");

4379 (Ë
	`ª∂a˚_s‹t_c⁄èöî
(
NULL
);

4381 
ty≥d_vÆue
 
v
;

4383 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
av
[2]);

4384 
	`w_ª£t_°r°ªam
(
t˛out
);

4386 
t
) {

4387 
ã°_bv
:{

4388 * 
buf

√w
 [
key
.
	`size
()];

4389 
key
.
	`c›y_to
(
buf
, key.
	`size
());

4391 
t˛out
 << 
buf
;

4392 
dñëe
[] 
buf
;

4396 
ã°_•©ül
:

4397 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

4401 
key
.
	`c›y_to
((*)&
v
.
_u
, key.
	`size
());

4402 
v
.
_Àngth
 = 
key
.
	`size
();

4405  
t
 ) {

4406 
ã°_bv
:

4409 
ã°_b1
:

4410 
t˛out
 << 
v
.
_u
.
b1
;

4413 
ã°_i1
:

4414 
t˛out
 << ()
v
.
_u
.
i1_num
;

4417 
ã°_u1
:

4418 
t˛out
 << ()
v
.
_u
.
u1_num
 ;

4421 
ã°_i2
:

4422 
t˛out
 << 
v
.
_u
.
i2_num
 ;

4425 
ã°_u2
:

4426 
t˛out
 << 
v
.
_u
.
u2_num
 ;

4429 
ã°_i4
:

4430 
t˛out
 << 
v
.
_u
.
i4_num
 ;

4432 
ã°_u4
:

4433 
t˛out
 << 
v
.
_u
.
u4_num
 ;

4436 
ã°_i8
:

4437 
t˛out
 << 
v
.
_u
.
i8_num
 ;

4439 
ã°_u8
:

4440 
t˛out
 << 
v
.
_u
.
u8_num
 ;

4442 
ã°_f8
:

4443 
t˛out
 << 
v
.
_u
.
f8_num
 ;

4446 
ã°_f4
:

4447 
t˛out
 << 
v
.
_u
.
f4_num
 ;

4450 
ã°_•©ül
:

4452 
	`W_FATAL
(
fcNOTIMPLEMENTED
);

4456 * 
buf
 = 
√w
 [
d©a
.
	`size
()+1];

4457 
d©a
.
	`c›y_to
(
buf
, d©a.
	`size
());

4458 
buf
[
d©a
.
	`size
()] = '\0';

4460 
t˛out
 << " " << (*)&
buf
[0] ;

4461 
dñëe
[] 
buf
;

4463 
t˛out
 << 
íds
;

4464 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4465 
	`w_ª£t_°r°ªam
(
t˛out
);

4468  
TCL_OK
;

4469 
	}
}

4472 
	$t_s‹t_°ªam_íd
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4474 (Ë
	`ª∂a˚_s‹t_c⁄èöî
(
NULL
);

4477 i‡(
ù
 || 
ac
 || 
av
) {}

4478  
TCL_OK
;

4479 
	}
}

4484 
	$t_lök_to_ªmŸe_id
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4486 i‡(
	`check
(
ù
, "loˇl_vﬁumêªmŸe_id", 
ac
, 3))

4487  
TCL_ERROR
;

4490 
cout
 << "WARNING:Üök_to_ªmŸe_idÇŸ suµ‹ãd:Çÿlogiˇ»IDs" << 
ídl
;

4491 
	`w_ª£t_°r°ªam
(
t˛out
);

4492 
t˛out
 << 
av
[2] << 
íds
;

4494 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4495 
	`w_ª£t_°r°ªam
(
t˛out
);

4496  
TCL_OK
;

4497 
	}
}

4500 
	$t_c⁄vît_to_loˇl_id
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4502 i‡(
	`check
(
ù
, "ªmŸe_id", 
ac
, 2))

4503  
TCL_ERROR
;

4506 
cout
 << "WARNING: convert_to_local_idÇot supported:ÇoÜogical IDs"

4507 << 
ídl
;

4508 
	`w_ª£t_°r°ªam
(
t˛out
);

4509 
t˛out
 << 
av
[1] << 
íds
;

4511 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4512 
	`w_ª£t_°r°ªam
(
t˛out
);

4513  
TCL_OK
;

4514 
	}
}

4517 
	$t_lfid_of_Ãid
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4519 i‡(
	`check
(
ù
, "Ãid", 
ac
, 2))

4520  
TCL_ERROR
;

4523 
cout
 << "WARNING:Å_lfid_of_ÃidÇŸ suµ‹ãd:Üogiˇ»IDs" << 
ídl
;

4524 
	`w_ª£t_°r°ªam
(
t˛out
);

4525 
t˛out
 << 
av
[1] << 
íds
;

4527 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4528 
	`w_ª£t_°r°ªam
(
t˛out
);

4529  
TCL_OK
;

4530 
	}
}

4536 
	$t_lock
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4538 i‡(
	`check
(
ù
, "ítôy modê[duøti⁄ [timeout]]", 
ac
, 3, 4, 5) )

4539  
TCL_ERROR
;

4541 
rc_t
 
rc
;

4542 
lock_mode_t
 
mode
 = 
	`cvt2lock_mode
(
av
[2]);

4545 
lockid_t
 
n
;

4546 
	`cvt2lockid_t
(
av
[1], 
n
);

4548 i‡(
ac
 == 3) {

4549 
	`DO
–
sm
->
	`lock
(
n
, 
mode
) );

4551 
lock_duøti⁄_t
 
duøti⁄
 = 
	`cvt2lock_duøti⁄
(
av
[3]);

4552 i‡(
ac
 == 4) {

4553 
	`DO
–
sm
->
	`lock
(
n
, 
mode
, 
duøti⁄
) );

4555 
timeout
 = 
	`©oi
(
av
[4]);

4556 
	`DO
–
sm
->
	`lock
(
n
, 
mode
, 
duøti⁄
, 
timeout
) );

4560  
TCL_OK
;

4561 
	}
}

4564 
	$t_d⁄t_esˇœã
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4566 i‡(
	`check
(
ù
, "ítôy [\"d⁄tPassOnToDes˚nd™ts\"]", 
ac
, 2, 3))

4567  
TCL_ERROR
;

4569 
boﬁ
 
∑ssOnToDes˚nd™ts
 = 
åue
;

4570 
rc_t
 
rc
;

4572 i‡(
ac
 == 3) {

4573 i‡(
	`°rcmp
(
av
[2], "dontPassOnToDescendants")) {

4574 
	`T˛_AµídResu…
(
ù
, "œ°Ö¨amëî mu° bê\"d⁄tPassOnToDes˚nd™ts\",ÇŸ ", 
av
[2], 0);

4575  
TCL_ERROR
;

4577 
∑ssOnToDes˚nd™ts
 = 
Ál£
;

4582 
lockid_t
 
n
;

4583 
	`cvt2lockid_t
(
av
[1], 
n
);

4584 
	`DO
–
sm
->
	`d⁄t_esˇœã
(
n
, 
∑ssOnToDes˚nd™ts
) );

4587  
TCL_OK
;

4588 
	}
}

4591 
	$t_gë_esˇœti⁄_thªshﬁds
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

4593 i‡(
	`check
(
ù
, "", 
ac
, 1))

4594  
TCL_ERROR
;

4596 
öt4_t
 
toPage
 = 0;

4597 
öt4_t
 
toSt‹e
 = 0;

4598 
öt4_t
 
toVﬁume
 = 0;

4600 
	`DO
–
sm
->
	`gë_esˇœti⁄_thªshﬁds
(
toPage
, 
toSt‹e
, 
toVﬁume
) );

4602 i‡(
toPage
 =
smÀvñ_0
::
d⁄tEsˇœã
)

4603 
toPage
 = 0;

4604 i‡(
toSt‹e
 =
smÀvñ_0
::
d⁄tEsˇœã
)

4605 
toSt‹e
 = 0;

4606 i‡(
toVﬁume
 =
smÀvñ_0
::
d⁄tEsˇœã
)

4607 
toVﬁume
 = 0;

4609 
	`w_ª£t_°r°ªam
(
t˛out
);

4610 
t˛out
 << 
toPage
 << " " << 
toSt‹e
 << " " << 
toVﬁume
 << 
íds
;

4611 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4612 
	`w_ª£t_°r°ªam
(
t˛out
);

4613  
TCL_OK
;

4614 
	}
}

4616 
öt4_t


4617 
	$∑r£_esˇœti⁄_thªshﬁds
(c⁄° *
s
)

4619 
ªsu…
 = 
	`©oi
(
s
);

4621 i‡(
ªsu…
 == 0)

4622 
ªsu…
 = 
smÀvñ_0
::
d⁄tEsˇœã
;

4623 i‡(
ªsu…
 < 0)

4624 
ªsu…
 = 
smÀvñ_0
::
d⁄tModifyThªshﬁd
;

4626  
ªsu…
;

4627 
	}
}

4630 
	$t_£t_esˇœti⁄_thªshﬁds
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4632 
li°Argc
;

4633 
TCL_SLIST
 **
li°Argv
;

4634 c⁄° *
îrSåög
 =

4637 i‡(
	`check
(
ù
, 
îrSåög
, 
ac
, 2))

4638  
TCL_ERROR
;

4640 i‡(
	`T˛_S∂ôLi°
(
ù
, 
av
[1], &
li°Argc
, &
li°Argv
Ë!
TCL_OK
)

4641  
TCL_ERROR
;

4643 i‡(
li°Argc
 != 3) {

4644 
	`T˛_SëResu…
(
ù
, (*Ë
îrSåög
, 
TCL_STATIC
);

4645 
	`T˛_Fªe
–(*Ë
li°Argv
);

4646  
TCL_ERROR
;

4649 
öt4_t
 
toPage
 = 
	`∑r£_esˇœti⁄_thªshﬁds
(
li°Argv
[0]);

4650 
öt4_t
 
toSt‹e
 = 
	`∑r£_esˇœti⁄_thªshﬁds
(
li°Argv
[1]);

4651 
öt4_t
 
toVﬁume
 = 
	`∑r£_esˇœti⁄_thªshﬁds
(
li°Argv
[2]);

4653 
	`T˛_Fªe
–(*Ë
li°Argv
);

4655 
	`DO
–
sm
->
	`£t_esˇœti⁄_thªshﬁds
(
toPage
, 
toSt‹e
, 
toVﬁume
) );

4657  
TCL_OK
;

4658 
	}
}

4662 
	$t_lock_m™y
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4664 i‡(
	`check
(
ù
, "num_requestsÉntity mode [duration [timeout]]",

4665 
ac
, 4, 5, 6) )

4666  
TCL_ERROR
;

4668 
rc_t
 
rc
;

4669 
smsize_t
 
num_ªque°s
 = 
	`numobje˘s
(
av
[1]);

4670 
smsize_t
 
i
;

4671 
lock_mode_t
 
mode
 = 
	`cvt2lock_mode
(
av
[3]);

4674 
lockid_t
 
n
;

4675 
	`cvt2lockid_t
(
av
[2], 
n
);

4677 i‡(
ac
 == 4) {

4678 
i
 = 0; i < 
num_ªque°s
; i++)

4679 
	`DO
–
sm
->
	`lock
(
n
, 
mode
) );

4681 
lock_duøti⁄_t
 
duøti⁄
 = 
	`cvt2lock_duøti⁄
(
av
[4]);

4682 i‡(
ac
 == 5) {

4683 
i
 = 0; i < 
num_ªque°s
; i++)

4684 
	`DO
–
sm
->
	`lock
(
n
, 
mode
, 
duøti⁄
) );

4686 
timeout
 = 
	`©oi
(
av
[5]);

4687 
i
 = 0; i < 
num_ªque°s
; i++)

4688 
	`DO
–
sm
->
	`lock
(
n
, 
mode
, 
duøti⁄
, 
timeout
) );

4692  
TCL_OK
;

4693 
	}
}

4696 
	$t_u∆ock
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4698 i‡(
	`check
(
ù
, "ítôy", 
ac
, 2) )

4699  
TCL_ERROR
;

4701 
rc_t
 
rc
;

4704 
lockid_t
 
n
;

4705 
	`cvt2lockid_t
(
av
[1], 
n
);

4706 
	`DO
–
sm
->
	`u∆ock
(
n
) );

4708  
TCL_OK
;

4709 
	}
}

4711 "C" 
dum±hªads
();

4714 
	$t_dump_thªads
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

4716 i‡(
	`check
(
ù
, "", 
ac
, 1))

4717  
TCL_ERROR
;

4719 
	`dum±hªads
();

4721  
TCL_OK
;

4722 
	}
}

4725 
	$t_dump_hi°o
(
T˛_I¡îp
 *
ù
, 
ac
, 
TCL_AV
 *[])

4727 i‡(
	`check
(
ù
, "", 
ac
, 1))

4728  
TCL_ERROR
;

4730 
	`DO
(
sm
->
	`dump_hi°o
(
cout
, 
Ál£
));

4732  
TCL_OK
;

4733 
	}
}

4737 
	$t_dump_locks
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 *[])

4739 i‡(
	`check
(
ù
, "", 
ac
, 1))

4740  
TCL_ERROR
;

4742 
	`DO
–
sm
->
	`dump_locks
(
cout
) );

4743  
TCL_OK
;

4744 
	}
}

4747 
	$t_quîy_lock
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4749 i‡(
	`check
(
ù
, "ítôy", 
ac
, 2) )

4750  
TCL_ERROR
;

4752 
rc_t
 
rc
;

4753 
lock_mode_t
 
m
 = 
w_ba£_t
::
NL
;

4756 
lockid_t
 
n
;

4757 
	`cvt2lockid_t
(
av
[1], 
n
);

4758 
	`DO
–
sm
->
	`quîy_lock
(
n
, 
m
) );

4761 
	`T˛_AµídResu…
(
ù
, 
lock_ba£_t
::
mode_°r
[
m
], 0);

4762  
TCL_OK
;

4763 
	}
}

4766 
	$t_£t_lock_ˇche_íabÀ
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4768 i‡(
	`check
(
ù
, "íabÀ/dißbÀ)", 
ac
, 2) )

4769  
TCL_ERROR
;

4771 
boﬁ
 
íabÀ
;

4772 i‡(
	`°rcmp
(
av
[1], "enable") == 0) {

4773 
íabÀ
 = 
åue
;

4774 } i‡(
	`°rcmp
(
av
[1], "disable") == 0) {

4775 
íabÀ
 = 
Ál£
;

4777 
	`T˛_AµídResu…
(
ù
, "wrong firstárg, should beÉnable/disable", 0);

4778  
TCL_ERROR
;

4781 
	`DO
(
sm
->
	`£t_lock_ˇche_íabÀ
(
íabÀ
));

4782  
TCL_OK
;

4783 
	}
}

4786 
	$t_lock_ˇche_íabÀd
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4788 i‡(
	`check
(
ù
, "", 
ac
, 1) )

4789  
TCL_ERROR
;

4791 i‡(
av
) {}

4793 
boﬁ
 
íabÀd
;

4794 
	`DO
(
sm
->
	`lock_ˇche_íabÀd
(
íabÀd
));

4795 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_boﬁ
(
íabÀd
), 0);

4797  
TCL_OK
;

4798 
	}
}

4802 
	$t_¸óã_m™y_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4804 i‡(
	`check
(
ù
, "num_ªc†fid hd∏Àn_höàchunkd©®chunkcou¡", 
ac
, 7))

4805  
TCL_ERROR
;

4807 
smsize_t
 
num_ªcs
 = 
	`numobje˘s
(
av
[1]);

4808 
smsize_t
 
chunk_cou¡
 = 
	`obje˘size
(
av
[6]);

4809 
smsize_t
 
Àn_höt
 = 
	`obje˘size
(
av
[4]);

4810 
vec_t
 
hdr
, 
d©a
;

4811 
hdr
.
	`put
(
av
[3], 
	`°æí
(av[3]));

4812 
d©a
.
	`put
(
av
[5], 
	`°æí
(av[5]));

4816 
°id_t
 
°id
;

4817 
rid_t
 
rid
;

4819 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
°id
;

4820 
cout
 << "¸ótög " << 
num_ªcs
 << "Ñec‹d†ö " << 
°id


4821 << " wôh hdr_Àn" << 
hdr
.
	`size
() << " chunk_len= "

4822 << 
d©a
.
	`size
(Ë<< " i¿" << 
chunk_cou¡
 << " chunks."

4823 << 
ídl
;

4825 
uöt
 
i
 = 0; i < 
num_ªcs
; i++) {

4826 
	`DO
–
sm
->
	`¸óã_ªc
(
°id
, 
hdr
, 
Àn_höt
, 
d©a
, 
rid
) );

4827 
uöt
 
j
 = 1; j < 
chunk_cou¡
; j++) {

4828 
	`DO
–
sm
->
	`≠≥nd_ªc
(
rid
, 
d©a
));

4831 
	`w_ª£t_°r°ªam
(
t˛out
);

4832 
t˛out
 << 
rid
 << 
íds
;

4834 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

4835 
	`w_ª£t_°r°ªam
(
t˛out
);

4836  
TCL_OK
;

4837 
	}
}

4840 
	$t_upd©e_ªc_m™y
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4842 i‡(
	`check
(
ù
, "num_upd©e†rid sèπ d©a", 
ac
, 5))

4843  
TCL_ERROR
;

4845 
smsize_t
 
°¨t
;

4846 
vec_t
 
d©a
;

4847 
smsize_t
 
num_upd©es
 = 
	`numobje˘s
(
av
[1]);

4849 
d©a
.
	`£t
(
	`∑r£_vec
(
av
[4], 
	`°æí
(av[4])));

4850 
°¨t
 = 
	`obje˘size
(
av
[3]);

4853 
rid_t
 
rid
;

4855 
w_i°r°ªam
 
	`™⁄2
(
av
[2]); 
™⁄2
 >> 
rid
;

4856 
smsize_t
 
i
 = 0; i < 
num_upd©es
; i++) {

4857 
	`DO
–
sm
->
	`upd©e_ªc
(
rid
, 
°¨t
, 
d©a
) );

4861 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "update success");

4862  
TCL_OK
;

4863 
	}
}

4867 
	$t_lock_ªc‹d_blöd
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4869 i‡(
	`check
(
ù
, "num", 
ac
, 2))

4870  
TCL_ERROR
;

4872 c⁄° 
∑ge_ˇ∑côy
 = 20;

4873 
rid_t
 
rid
;

4874 
rid
.
pid
.
_°id
.
vﬁ
 = 999;

4875 
uöt4_t
 
n
;

4876 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
n
;

4878 
°ime_t
 
	`°¨t
(°ime_t::
	`now
());

4880 
uöt
 
i
 = 0; i < 
n
; i +
∑ge_ˇ∑côy
) {

4881 
rid
.
pid
.
∑ge
 = 
i
+1;

4882 
uöt
 
j
 = 
∑ge_ˇ∑côy
;

4883 i‡(
i
 + 
j
 >
n
) j =Ç - i;

4884 
j
--) {

4885 
rid
.
¶Ÿ
 = 
j
;

4886 
	`DO
–
sm
->
	`lock
(
rid
, 
w_ba£_t
::
EX
) );

4890 
söãrvÆ_t
 
	`dñè
(
°ime_t
::
	`now
(Ë- 
°¨t
);

4891 
˚º
 << "Timêtÿgë " << 
n
 << "ÑecordÜocks: "

4892 << 
dñè
 << " sec⁄ds" << 
ídl
;

4894  
TCL_OK
;

4895 
	}
}

4899 
	$t_ã°ög
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

4901 i‡(
	`check
(
ù
, "°id keyÅimes", 
ac
, 4))

4902  
TCL_ERROR
;

4904 
°id_t
 
°id
;

4905 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

4908 * 
key_Æign
 = 
	`°rdup
(
av
[2]);

4909 
	`w_as£π1
(
key_Æign
);

4911 
vec_t
 
key
;

4912 
key
.
	`£t
(
key_Æign
, 
	`°æí
(key_align));

4914 
times
 = 
	`©oi
(
av
[3]);

4916 
ñ
[80];

4917 
smsize_t
 
ñí
 = (
ñ
) - 1;

4919 
boﬁ
 
found
;

4920 
i
 = 0; i < 
times
; i++) {

4921 
	`DO
–
sm
->
	`föd_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
) );

4924 
	`‰ì
(
key_Æign
);

4925 
ñ
[
ñí
] = '\0';

4927 i‡(
found
) {

4928 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 
ñ
);

4929  
TCL_OK
;

4932 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "not found");

4933  
TCL_ERROR
;

4934 
	}
}

4936 
	~<vèbÀ.h
>

4937 
	~<°hªad_vèbÀ_íum.h
>

4938 
	~<sm_vèbÀ_íum.h
>

4940 
	$__¥ötô
(c⁄° *
wh©
, 
vèbÀ_t
 &
x
) {

4943 i‡(
löked
.
vîbo£_Êag
) {

4945 
cout
 << 
wh©
 <<

4946 " METHOD 1 - individuÆly:Ç=" << 
x
.
	`qu™t
(Ë<<
ídl
;

4947 
i
=0; i< 
x
.
	`qu™t
(); i++) {

4948 
vèbÀ_row_t
 & 
	`row
(
x
[
i
]);

4949 
cout
 << "------------- fú°=0,Üa°=" << 
row
.
	`qu™t
()

4951 <<
ídl
;

4952 
j
=0; j < 
row
.
	`qu™t
(); j++) {

4953 if(
	`°æí
(
row
[
j
]) > 0) {

4954 if(
	`°rcmp
(
row
[
j
], "0") != 0) {

4955 
cout
 << 
i
 << "." << 
j
 << ":" << 
row
[j]<< "|" << 
ídl
;

4960 
cout
 << 
ídl
;

4966 
	}
}

4969 
	$t_vt_thªad
(
T˛_I¡îp
* 
ù
, , 
TCL_AV
 * [])

4971 
vèbÀ_t
 
x
;

4972 
	`DO
(
ss_m
::
	`thªad_cﬁÀ˘
(
x
));

4973 
	`__¥ötô
("thªads", 
x
);

4975  
TCL_OK
;

4976 
	}
}

4979 
	$t_vt_°©s
(
T˛_I¡îp
* 
ù
, , 
TCL_AV
 * [])

4981 
	`T˛_AµídResu…
(
ù
, "vtable stats:Çot yet implemented", 0);

4982  
TCL_ERROR
;

4983 
	}
}

4986 
	$t_vt_x˘
(
T˛_I¡îp
* 
ù
, , 
TCL_AV
 * [])

4988 
vèbÀ_t
 
x
;

4989 
	`DO
(
ss_m
::
	`x˘_cﬁÀ˘
(
x
));

4991 
	`__¥ötô
("å™ß˘i⁄s/x˘", 
x
);

4993  
TCL_OK
;

4994 
	}
}

4997 
	$t_vt_bpoﬁ
(
T˛_I¡îp
* 
ù
, , 
TCL_AV
 * [])

4999 
vèbÀ_t
 
x
;

5000 
	`DO
(
ss_m
::
	`bp_cﬁÀ˘
(
x
));

5002 
	`__¥ötô
("buf„∏poﬁ", 
x
);

5004  
TCL_OK
;

5005 
	}
}

5008 
	$t_vt_lock
(
T˛_I¡îp
* 
ù
, , 
TCL_AV
 * [])

5010 
vèbÀ_t
 
x
;

5011 
	`DO
(
ss_m
::
	`lock_cﬁÀ˘
(
x
));

5013 
	`__¥ötô
("locks", 
x
);

5015  
TCL_OK
;

5016 
	}
}

5019 
	$t_°_°©s
(
T˛_I¡îp
 *, 
¨gc
, 
TCL_AV
 **)

5021 i‡(
¨gc
 != 1)

5022  
TCL_ERROR
;

5024 
°hªad_t
::
	`dump_°©s
(
cout
);

5025  
TCL_OK
;

5026 
	}
}

5029 
	$t_°_check_°ack
(
T˛_I¡îp
 *, 
¨gc
, 
TCL_AV
 **)

5031 i‡(
¨gc
 != 1)

5032  
TCL_ERROR
;

5034 
	`check_•
(
__FILE__
, 
__LINE__
);

5035  
TCL_OK
;

5036 
	}
}

5039 
	$t_°_rc
(
T˛_I¡îp
 *, 
¨gc
, 
TCL_AV
 **
¨gv
)

5041 i‡(
¨gc
 < 2)

5042  
TCL_ERROR
;

5045 
i
 = 1; i < 
¨gc
; i++) {

5046 
w_rc_t
 
e
 = 
	`w_rc_t
("îr‹", 0, 
	`©oi
(
¨gv
[
i
]));

5047 
cout
 << "RC(" << 
¨gv
[
i
] << "):" <<

5048 
ídl
 << 
e
 <<Éndl;

5051  
TCL_OK
;

5052 
	}
}

5056 
t_sm_sizeof
(
T˛_I¡îp
 *, 
¨gc
, 
TCL_AV
 **
¨gv
);

5059 
	scmd_t
 {

5060 c⁄° * 
	m«me
;

5061 
sm¥oc_t
* 
	mfunc
;

5068 
cmd_t
 
	gcmd
[] = {

5069 { "ã°ög", 
t_ã°ög
 },

5070 { "¶ìp", 
t_¶ìp
 },

5071 { "ã°_öt_båì", 
t_ã°_öt_båì
 },

5072 { "ã°_ty≥d_båì", 
t_ã°_ty≥d_båì
 },

5073 { "ã°_bulklﬂd_öt_båì", 
t_ã°_bulklﬂd_öt_båì
 },

5074 { "ã°_bulklﬂd_πªe", 
t_ã°_bulklﬂd_πªe
 },

5076 { "checkpoöt", 
t_checkpoöt
 },

5079 { "begö_x˘", 
t_begö_x˘
 },

5080 { "ab‹t_x˘", 
t_ab‹t_x˘
 },

5081 { "commô_x˘", 
t_commô_x˘
 },

5082 { "chaö_x˘", 
t_chaö_x˘
 },

5083 { "ßve_w‹k", 
t_ßve_w‹k
 },

5084 { "rﬁlback_w‹k", 
t_rﬁlback_w‹k
 },

5085 { "›í_qu¨k", 
t_›í_qu¨k
 },

5086 { "˛o£_qu¨k", 
t_˛o£_qu¨k
 },

5087 { "x˘", 
t_x˘
 },

5088 { "©èch_x˘", 
t_©èch_x˘
},

5089 { "dëach_x˘", 
t_dëach_x˘
},

5090 { "°©e_x˘", 
t_°©e_x˘
},

5091 { "dump_x˘s", 
t_dump_x˘s
},

5092 { "dump_œtches", 
t_dump_œtches
},

5093 { "x˘_to_tid", 
t_x˘_to_tid
},

5094 { "tid_to_x˘", 
t_tid_to_x˘
},

5095 { "¥ï¨e_x˘", 
t_¥ï¨e_x˘
},

5096 { "íãr2pc", 
t_íãr2pc
},

5097 { "£t_co‹dö©‹", 
t_£t_co‹dö©‹
},

5098 { "ªcovî2pc", 
t_ªcovî2pc
},

5099 { "num_¥ï¨ed", 
t_num_¥ï¨ed
},

5100 { "num_a˘ive", 
t_num_a˘ive
},

5101 { "lock_timeout", 
t_lock_timeout
},

5106 { "ªöô_fögî¥öts", 
t_ªöô_fögî¥öts
 },

5107 { "f‹˚_buf„rs", 
t_f‹˚_buf„rs
 },

5108 { "f‹˚_vﬁ_hdr_buf„rs", 
t_f‹˚_vﬁ_hdr_buf„rs
 },

5109 { "g©hî_°©s", 
t_g©hî_°©s
 },

5110 { "g©hî_x˘_°©s", 
t_g©hî_x˘_°©s
 },

5111 { "mem_°©s", 
t_mem_°©s
 },

5112 { "¢≠shŸ_buf„rs", 
t_¢≠shŸ_buf„rs
 },

5113 { "c⁄fig_öfo", 
t_c⁄fig_öfo
 },

5114 { "£t_disk_dñay", 
t_£t_disk_dñay
 },

5115 { "°¨t_log_c‹ru±i⁄", 
t_°¨t_log_c‹ru±i⁄
 },

5116 { "sync_log", 
t_sync_log
 },

5117 { "dump_buf„rs", 
t_dump_buf„rs
 },

5118 { "£t_°‹e_¥›îty", 
t_£t_°‹e_¥›îty
 },

5119 { "gë_°‹e_¥›îty", 
t_gë_°‹e_¥›îty
 },

5120 { "gë_lock_Àvñ", 
t_gë_lock_Àvñ
 },

5121 { "£t_lock_Àvñ", 
t_£t_lock_Àvñ
 },

5124 { "f‹m©_dev", 
t_f‹m©_dev
 },

5125 { "mou¡_dev", 
t_mou¡_dev
 },

5126 { "unmou¡_dev", 
t_dismou¡_dev
 },

5127 { "unmou¡_Æl", 
t_dismou¡_Æl
 },

5128 { "dismou¡_dev", 
t_dismou¡_dev
 },

5129 { "dismou¡_Æl", 
t_dismou¡_Æl
 },

5130 { "li°_devi˚s", 
t_li°_devi˚s
 },

5131 { "li°_vﬁumes", 
t_li°_vﬁumes
 },

5132 { "¸óã_vﬁ", 
t_¸óã_vﬁ
 },

5133 { "de°roy_vﬁ", 
t_de°roy_vﬁ
 },

5134 { "has_logiˇl_id_ödex", 
t_has_logiˇl_id_ödex
 },

5135 { "gë_vﬁume_quŸa", 
t_gë_vﬁume_quŸa
 },

5136 { "gë_devi˚_quŸa", 
t_gë_devi˚_quŸa
 },

5137 { "vﬁ_roŸ_ödex", 
t_vﬁ_roŸ_ödex
 },

5138 { "gë_vﬁume_mëa_°©s", 
t_gë_vﬁume_mëa_°©s
},

5139 { "gë_fûe_mëa_°©s", 
t_gë_fûe_mëa_°©s
},

5140 { "check_vﬁume", 
t_check_vﬁume
 },

5142 { "gë_du_°©i°ics", 
t_gë_du_°©i°ics
 },

5143 { "check_vﬁume_∑ge_ty≥s", 
t_check_vﬁume_∑ge_ty≥s
 },

5147 { "£t_debug", 
t_£t_debug
 },

5148 { "purify_¥öt_°rög", 
t_purify_¥öt_°rög
 },

5152 { "¸óã_ödex", 
t_¸óã_ödex
 },

5153 { "de°roy_ödex", 
t_de°roy_ödex
 },

5154 { "de°roy_md_ödex", 
t_de°roy_md_ödex
 },

5155 { "blkld_ndx", 
t_blkld_ndx
 },

5156 { "¸óã_assoc", 
t_¸óã_assoc
 },

5157 { "de°roy_Æl_assoc", 
t_de°roy_Æl_assoc
 },

5158 { "de°roy_assoc", 
t_de°roy_assoc
 },

5159 { "föd_assoc", 
t_föd_assoc
 },

5160 { "föd_assoc_ty≥d", 
t_föd_assoc_ty≥d
 },

5161 { "¥öt_ödex", 
t_¥öt_ödex
 },

5164 { "¸óã_md_ödex", 
t_¸óã_md_ödex
 },

5165 { "¸óã_md_assoc", 
t_¸óã_md_assoc
 },

5166 { "föd_md_assoc", 
t_föd_md_assoc
 },

5167 { "de°roy_md_assoc", 
t_de°roy_md_assoc
 },

5168 { "√xt_box", 
t_√xt_box
 },

5169 { "døw_πªe", 
t_døw_πªe
 },

5170 { "πªe_°©s", 
t_πªe_°©s
 },

5171 { "πªe_quîy", 
t_πªe_sˇn
 },

5172 { "blkld_md_ndx", 
t_blkld_md_ndx
 },

5173 { "s‹t_fûe", 
t_s‹t_fûe
 },

5174 { "com∑ª_ty≥d", 
t_com∑ª_ty≥d
 },

5175 { "¸óã_ty≥d_hdr_body_ªc", 
t_¸óã_ty≥d_hdr_body_ªc
 },

5176 { "¸óã_ty≥d_hdr_ªc", 
t_¸óã_ty≥d_hdr_ªc
 },

5177 { "gë_°‹e_öfo", 
t_gë_°‹e_öfo
 },

5178 { "sˇn_s‹ãd_ªcs", 
t_sˇn_s‹ãd_ªcs
 },

5179 { "¥öt_md_ödex", 
t_¥öt_md_ödex
 },

5181 { "begö_s‹t_°ªam", 
t_begö_s‹t_°ªam
 },

5182 { "s‹t_°ªam_put", 
t_s‹t_°ªam_put
 },

5183 { "s‹t_°ªam_gë", 
t_s‹t_°ªam_gë
 },

5184 { "s‹t_°ªam_íd", 
t_s‹t_°ªam_íd
 },

5189 { "¸óã_sˇn", 
t_¸óã_sˇn
 },

5190 { "sˇn_√xt", 
t_sˇn_√xt
 },

5191 { "de°roy_sˇn", 
t_de°roy_sˇn
 },

5195 { "¸óã_fûe", 
t_¸óã_fûe
 },

5196 { "de°roy_fûe", 
t_de°roy_fûe
 },

5197 { "¸óã_ªc", 
t_¸óã_ªc
 },

5198 { "¸óã_mu…i_ªcs", 
t_¸óã_mu…i_ªcs
 },

5199 { "mu…i_fûe_≠≥nd", 
t_mu…i_fûe_≠≥nd
 },

5200 { "mu…i_fûe_upd©e", 
t_mu…i_fûe_upd©e
 },

5201 { "de°roy_ªc", 
t_de°roy_ªc
 },

5202 { "ªad_ªc", 
t_ªad_ªc
 },

5203 { "ªad_hdr", 
t_ªad_hdr
 },

5204 { "¥öt_ªc", 
t_¥öt_ªc
 },

5205 { "ªad_ªc_body", 
t_ªad_ªc_body
 },

5206 { "upd©e_ªc", 
t_upd©e_ªc
 },

5207 { "upd©e_ªc_hdr", 
t_upd©e_ªc_hdr
 },

5208 { "≠≥nd_ªc", 
t_≠≥nd_ªc
 },

5209 { "åunˇã_ªc", 
t_åunˇã_ªc
 },

5210 { "sˇn_ªcs", 
t_sˇn_ªcs
 },

5211 { "sˇn_rids", 
t_sˇn_rids
 },

5214 { "pö_¸óã", 
t_pö_¸óã
 },

5215 { "pö_de°roy", 
t_pö_de°roy
 },

5216 { "pö_pö", 
t_pö_pö
 },

5217 { "pö_u≈ö", 
t_pö_u≈ö
 },

5218 { "pö_ªpö", 
t_pö_ªpö
 },

5219 { "pö_body", 
t_pö_body
 },

5220 { "pö_√xt_byãs", 
t_pö_√xt_byãs
 },

5221 { "pö_hdr", 
t_pö_hdr
 },

5222 { "pö_∑ge_c⁄èöög", 
t_∑ge_c⁄èöög
 },

5223 { "pö_pö√d", 
t_pö_pö√d
 },

5224 { "pö_is_smÆl", 
t_pö_is_smÆl
 },

5225 { "pö_œrge_im∂", 
t_pö_œrge_im∂
 },

5226 { "pö_rid", 
t_pö_rid
 },

5227 { "pö_≠≥nd_ªc", 
t_pö_≠≥nd_ªc
 },

5228 { "pö_upd©e_ªc", 
t_pö_upd©e_ªc
 },

5229 { "pö_upd©e_ªc_hdr", 
t_pö_upd©e_ªc_hdr
 },

5230 { "pö_åunˇã_ªc", 
t_pö_åunˇã_ªc
 },

5233 { "sˇn_fûe_¸óã", 
t_sˇn_fûe_¸óã
 },

5234 { "sˇn_fûe_de°roy", 
t_sˇn_fûe_de°roy
 },

5235 { "sˇn_fûe_√xt", 
t_sˇn_fûe_√xt
 },

5236 { "sˇn_fûe_curs‹", 
t_sˇn_fûe_curs‹
 },

5237 { "sˇn_fûe_√xt_∑ge", 
t_sˇn_fûe_√xt_∑ge
 },

5238 { "sˇn_fûe_föish", 
t_sˇn_fûe_föish
 },

5239 { "sˇn_fûe_≠≥nd", 
t_sˇn_fûe_≠≥nd
 },

5242 { "lök_to_ªmŸe_id", 
t_lök_to_ªmŸe_id
 },

5243 { "c⁄vît_to_loˇl_id", 
t_c⁄vît_to_loˇl_id
 },

5244 { "lfid_of_Ãid", 
t_lfid_of_Ãid
 },

5247 { "lock", 
t_lock
 },

5248 { "lock_m™y", 
t_lock_m™y
 },

5249 { "u∆ock", 
t_u∆ock
 },

5250 { "dump_locks", 
t_dump_locks
 },

5251 { "quîy_lock", 
t_quîy_lock
 },

5252 { "£t_lock_ˇche_íabÀ", 
t_£t_lock_ˇche_íabÀ
 },

5253 { "lock_ˇche_íabÀd", 
t_lock_ˇche_íabÀd
 },

5255 { "d⁄t_esˇœã", 
t_d⁄t_esˇœã
 },

5256 { "gë_esˇœti⁄_thªshﬁds", 
t_gë_esˇœti⁄_thªshﬁds
 },

5257 { "£t_esˇœti⁄_thªshﬁds", 
t_£t_esˇœti⁄_thªshﬁds
 },

5259 { "ª°¨t", 
t_ª°¨t
 },

5261 { "¸ash", 
t_¸ash
 },

5263 { "mu…ikey_s‹t_fûe", 
t_mu…ikey_s‹t_fûe
 },

5265 { "dump_thªads", 
t_dump_thªads
 },

5266 { "dump_hi°o", 
t_dump_hi°o
 },

5268 { "sizeof", 
t_sm_sizeof
 },

5276 { "¸óã_m™y_ªc", 
t_¸óã_m™y_ªc
 },

5277 { "upd©e_ªc_m™y", 
t_upd©e_ªc_m™y
 },

5278 { "lock_ªc‹d_blöd", 
t_lock_ªc‹d_blöd
 },

5283 
cmd_t
 
	gvèbÀ_cmd
[] = {

5284 { "thªad", 
t_vt_thªad
 },

5285 { "lock", 
t_vt_lock
 },

5286 { "bp", 
t_vt_bpoﬁ
 },

5287 { "x˘", 
t_vt_x˘
 },

5288 { "°©", 
t_vt_°©s
 },

5289 { "°©s", 
t_vt_°©s
 },

5295 
cmd_t
 
	g°hªad_cmd
[] = {

5296 { "check°ack", 
t_°_check_°ack
 },

5297 { "°©s", 
t_°_°©s
 },

5298 { "rc", 
t_°_rc
 },

5304 
	$cmd_cmp
(c⁄° * 
c1
, c⁄° * 
c2
)

5306 
cmd_t
& 
cmd1
 = *(cmd_t*Ë
c1
;

5307 
cmd_t
& 
cmd2
 = *(cmd_t*Ë
c2
;

5308  
	`°rcmp
(
cmd1
.
«me
, 
cmd2
.name);

5309 
	}
}

5311 #i‚de‡
numbîof


5312 
	#numbîof
(
x
Ë((xË/ (x[0]))

	)

5315 
	$di•©ch_öô
()

5317 
	`qs‹t
–(*)
°hªad_cmd
, 
	`numbîof
(°hªad_cmd), (
cmd_t
), 
cmd_cmp
);

5318 
	`qs‹t
–(*)
vèbÀ_cmd
, 
	`numbîof
(vèbÀ_cmd), (
cmd_t
), 
cmd_cmp
);

5319 
	`qs‹t
–(*)
cmd
, 
	`numbîof
(cmd), (
cmd_t
), 
cmd_cmp
);

5320 
	}
}

5324 
	$_di•©ch
(c⁄° 
cmd_t
 *
_cmd
,

5325 
size_t
 
sz
,

5326 c⁄° *
moduÀ
,

5327 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

5329 
ªt
 = 
TCL_OK
;

5330 
cmd_t
 
key
;

5332 
	`w_as£π3
(
ac
 >= 2);

5333 
key
.
«me
 = 
av
[1];

5334 
cmd_t
* 
found
 = (cmd_t*Ë
	`b£¨ch
((*)&
key
,

5335 (*)
_cmd
,

5336 
sz
/(
cmd_t
),

5337 (
cmd_t
), 
cmd_cmp
);

5338 i‡(
found
) {

5339 
SSH_CHECK_STACK
;

5340 
ªt
 = 
found
->
	`func
(
ù
, 
ac
 - 1, 
av
 + 1);

5341 
SSH_CHECK_STACK
;

5342  
ªt
;

5345 
	`w_ª£t_°r°ªam
(
t˛out
);

5346 
t˛out
 << 
__FILE__
 << ':' << 
__LINE__
 << 
íds
;

5347 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), " unknow¿", 
moduÀ
, "Ñoutine \"",

5348 
av
[1], "\"", 0);

5349 
	`w_ª£t_°r°ªam
(
t˛out
);

5350  
TCL_ERROR
;

5351 
	}
}

5353 "C" 
	$°_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
 *
t˛
, 
¨gc
, 
TCL_AV
 **
¨gv
)

5355  
	`_di•©ch
(
°hªad_cmd
, (sthread_cmd), "st",

5356 
t˛
, 
¨gc
, 
¨gv
);

5357 
	}
}

5360 
	$vèbÀ_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

5362  
	`_di•©ch
–
vèbÀ_cmd
, (vèbÀ_cmd), "vèbÀ", 
ù
, 
ac
, 
av
);

5363 
	}
}

5366 
	$sm_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

5368  
	`_di•©ch
–
cmd
, (cmd), "sm", 
ù
, 
ac
, 
av
);

5369 
	}
}

5372 
	$check_•
(c⁄° *
fûe
, 
löe
)

5374 if–
smthªad_t
::
	`me
()->
	`isSèckOK
(
fûe
, 
löe
Ë=
Ál£
)

5376 
	`W_FATAL
(
fcINTERNAL
);

5379 
	}
}

5381 
smsize_t


5382 
	$obje˘size
(c⁄° *
°r
)

5384  
	`°πoul
(
°r
,0,0);

5385 
	}
}

5387 
smsize_t


5388 
	$numobje˘s
(c⁄° *
°r
)

5390  
	`°πoul
(
°r
,0,0);

5391 
	}
}

5393 c⁄° 
	snda_t
 {

5394 c⁄° * 
«me
;

5395 
ss_m
::
ndx_t
 
ty≥
;

5396 } 
nda
[] = {

5397 { "båì", 
ss_m
::
t_båì
 },

5398 { "uni_båì", 
ss_m
::
t_uni_båì
 },

5399 { "πªe", 
ss_m
::
t_πªe
 },

5400 { 0, 
ss_m
::
t_bad_ndx_t
 }

5403 
	gss_m
::
ndx_t


5404 
	$cvt2ndx_t
(c⁄° *
s
)

5406 c⁄° 
nda_t
* 
p
 = 
nda
;Ö->
«me
;Ö++) {

5407 i‡(
	`°ªq
(
s
, 
p
->
«me
)ËÖ->
ty≥
;

5409  
sm
->
t_bad_ndx_t
;

5410 
	}
}

	@src/sm/smsh/shell.h

30 #i‚de‡
SHELL_H


31 
	#SHELL_H


	)

33 
	~"w_deföes.h
"

42 
	~<sm_vas.h
>

43 
	~"smsh.h
"

45 
	~"ønd48.h
"

46 
	~<c°rög
>

47 
	~"smsh_îr‹.h
"

48 #unde‡
EXTERN


49 
	~<t˛.h
>

50 
	~"t˛_w‹k¨ound.h
"

51 
	~"t˛_thªad.h
"

53 #ifde‡
PURIFY


54 
	~<purify.h
>

57 
usög
 
«me•a˚
 
	gssm_s‹t
;

58 
boﬁ
 
√ws‹t
;

59 
sm_c⁄fig_öfo_t
 
globÆ_sm_c⁄fig_öfo
;

60 
__thªad
 
ønd48
 
gíî©‹
;

62 
check_•
(const *, );

63 
	#SSH_CHECK_STACK
 
	`check_•
(
__FILE__
, 
__LINE__
)

	)

65 
	#SSH_VERBOSE


	)

67 
ss_m
* 
sm
;

69 
	tsm¥oc_t
(
	tT˛_I¡îp
* 
	tù
, 
	tac
, 
	tTCL_AV
 * 
	tav
[]);

70 c⁄° 
	gMAXRECLEN
 = 1000;

72 
	gw_ba£_t
::
	tuöt1_t
 uint1_t;

73 
	gw_ba£_t
::
	tuöt2_t
 uint2_t;

74 
	gw_ba£_t
::
	tuöt4_t
 uint4_t;

77 
	gw_ba£_t
::
	töt1_t
 int1_t;

78 
	gw_ba£_t
::
	töt2_t
 int2_t;

79 
	gw_ba£_t
::
	töt4_t
 int4_t;

82 
	gw_ba£_t
::
	tf4_t
 f4_t;

83 
	gw_ba£_t
::
	tf8_t
 f8_t;

89 
	sty≥d_vÆue
 {

90 
	m_Àngth
;

92 c⁄° *
	mbv
;

93 
	mb1
;

94 
	mw_ba£_t
::
uöt8_t
 
u8_num
;

95 
	mw_ba£_t
::
öt8_t
 
i8_num
;

96 
uöt4_t
 
	mu4_num
;

97 
öt4_t
 
	mi4_num
;

98 
uöt2_t
 
	mu2_num
;

99 
öt2_t
 
	mi2_num
;

100 
uöt1_t
 
	mu1_num
;

101 
öt1_t
 
	mi1_num
;

102 
f4_t
 
	mf4_num
;

103 
f8_t
 
	mf8_num
;

104 
	mpﬁyg⁄
[(
nbox_t
)];

105 } 
	m_u
;

108 
w_o°r°ªam
 &
gë_t˛out
();

110 
	#t˛out
 
	`gë_t˛out
()

	)

112 #i‡
deföed
(
W_DEBUG
Ë|| deföed(
SSH_DUMPRC
)

113 
boﬁ
 
dum¥c
;

114 
	#DUMPRC
(
a
Ëif(
dum¥c
Ë{ 
˚º
 <<á << 
ídl
; } 

	)

116 
	#DUMPRC
(
a
)

	)

119 #unde‡
DO


120 
	#DO
(
x
) \

122 
w_rc_t
 
___rc
 = 
x
; \

123 i‡(
___rc
.
	`is_îr‹
()) { \

124 
	`w_ª£t_°r°ªam
(
t˛out
); \

125 
	`DUMPRC
(
___rc
); \

126 
t˛out
 << 
	`smsh_îr_«me
(
___rc
.
	`îr_num
()Ë<< 
íds
; \

127 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0); \

128 
	`w_ª£t_°r°ªam
(
t˛out
); \

129  
TCL_ERROR
; \

131 }

	)

133 #unde‡
DO_GOTO


134 
	#DO_GOTO
(
x
) \

136 
w_rc_t
 
___rc
 = 
x
; \

137 i‡(
___rc
.
	`is_îr‹
()) { \

138 
	`w_ª£t_°r°ªam
(
t˛out
); \

139 
t˛out
 << 
	`smsh_îr_«me
(
___rc
.
	`îr_num
()Ë<< 
íds
; \

140 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0); \

141 
	`w_ª£t_°r°ªam
(
t˛out
); \

142 
Áûuª
; \

144 }

	)

146 
	#TCL_HANDLE_FSCAN_FAILURE
(
f_sˇn
) \

147 if((
f_sˇn
==0Ë|| (f_sˇn->
	`îr‹_code
().
	`is_îr‹
())) { \

148 
w_rc_t
 
îr
; \

149 if(
f_sˇn
 != 0) { \

150 
îr
 = 
	`RC
(
f_sˇn
->
	`îr‹_code
().
	`îr_num
()); \

151 
dñëe
 
f_sˇn
; f_scan =0; \

153 
îr
 = 
	`RC
(
fcOUTOFMEMORY
); \

155 
	`DO
(
îr
); \

156 }

	)

158 
	#HANDLE_FSCAN_FAILURE
(
f_sˇn
) \

159 if((
f_sˇn
==0Ë|| (f_sˇn->
	`îr‹_code
().
	`is_îr‹
())) { \

160 
w_rc_t
 
îr
; \

161 if(
f_sˇn
) { \

162 
îr
 = 
	`RC
(
f_sˇn
->
	`îr‹_code
().
	`îr_num
()); \

163 
dñëe
 
f_sˇn
; f_scan =0; \

164  
îr
; \

166  
	`RC
(
fcOUTOFMEMORY
); \

168 }

	)

170 "C" 
˛ón_up_shñl
();

171 
ønd48
 &
gë_gíî©‹
();

173 
smsize_t
 
obje˘size
(const *);

174 
smsize_t
 
numobje˘s
(const *);

176 
dump_pö_hdr
(
o°ªam
 &
out
, 
pö_i
 &
h™dÀ
);

177 
dump_pö_body
(
w_o°r°ªam
 &
out
, 
pö_i
 &
h™dÀ
,

178 
smsize_t
 
°¨t
, smsize_à
Àngth
, 
T˛_I¡îp
 *
ù
);

180 (*
	tDSCB
Ë(
	tpö_i
 &);

181 
w_rc_t
 
	`dump_sˇn
(
sˇn_fûe_i
 &
sˇn
, 
o°ªam
 &
out
,

182 
DSCB
 
ˇŒback
 = 
NULL
,

183 
boﬁ
 
hex
=
Ál£
);

184 
vec_t
 & 
	`∑r£_vec
(c⁄° *
c
, 
Àn
) ;

185 
vid_t
 
	`make_vid_‰om_lvid
(c⁄° * 
lv
);

186 
ss_m
::
ndx_t
 
	`cvt2ndx_t
(c⁄° *
s
);

187 
lockid_t
 
	`cvt2lockid_t
(c⁄° *
°r
);

188 
boﬁ
 
	`u£_logiˇl_id
(
T˛_I¡îp
* 
ù
);

189 c⁄° * 
	`check_com¥ess_Êag
(const *);

192 
ölöe
 c⁄° *
	$t˛_f‹m_Êag
(
Êag
)

194  
Êag
 ? "1" : "0";

195 
	}
}

197 
t˛_sˇn_Êag
(c⁄° *
s
, 
boﬁ
 &
Êag
);

199 
ölöe
 c⁄° *
	$t˛_f‹m_boﬁ
(
boﬁ
 
Êag
)

201  
Êag
 ? "TRUE" : "FALSE";

202 
	}
}

204 
t˛_sˇn_boﬁ
(c⁄° *
ªp
, 
boﬁ
 &
ªsu…
);

207 
ölöe
 

208 
	$°ªq
(c⁄° * 
s1
, c⁄° * 
s2
)

210  !
	`°rcmp
(
s1
, 
s2
);

211 
	}
}

215 #ifde‡
SSH_VERBOSE


216 
ölöe
 const *

217 
	$cvt2°rög
(
sˇn_ödex_i
::
cmp_t
 
i
)

219 
i
) {

220 
sˇn_ödex_i
::
gt
:  ">";

221 
sˇn_ödex_i
::
ge
:  ">=";

222 
sˇn_ödex_i
::
…
:  "<";

223 
sˇn_ödex_i
::
À
:  "<=";

224 
sˇn_ödex_i
::
eq
:  "==";

228 
	}
}

230 
ölöe
 
	gsˇn_ödex_i
::
cmp_t


231 
	$cvt2cmp_t
(c⁄° *
s
)

233 i‡(
	`°ªq
(
s
, ">")Ë 
sˇn_ödex_i
::
gt
;

234 i‡(
	`°ªq
(
s
, ">=")Ë 
sˇn_ödex_i
::
ge
;

235 i‡(
	`°ªq
(
s
, "<")Ë 
sˇn_ödex_i
::
…
;

236 i‡(
	`°ªq
(
s
, "<=")Ë 
sˇn_ödex_i
::
À
;

237 i‡(
	`°ªq
(
s
, "==")Ë 
sˇn_ödex_i
::
eq
;

238  
sˇn_ödex_i
::
bad_cmp_t
;

239 
	}
}

241 
ölöe
 
lock_mode_t


242 
	$cvt2lock_mode
(c⁄° *
s
)

244 
i
 = 
lock_ba£_t
::
MIN_MODE
; i <lock_ba£_t::
MAX_MODE
; i++) {

245 i‡(
	`°rcmp
(
s
, 
lock_ba£_t
::
mode_°r
[
i
]) == 0)

246  (
lock_mode_t
Ë
i
;

248 
˚º
 << "cvt2lock_mode: badÜock mode" << 
ídl
;

249 
	`W_FATAL
(
ss_m
::
eINTERNAL
);

250  
w_ba£_t
::
IS
;

251 
	}
}

253 
ölöe
 
lock_duøti⁄_t


254 
	$cvt2lock_duøti⁄
(c⁄° *
s
)

256 
i
 = 0; i < 
w_ba£_t
::
t_num_duøti⁄s
; i++) {

257 i‡(
	`°rcmp
(
s
, 
lock_ba£_t
::
duøti⁄_°r
[
i
]) == 0)

258  (
lock_duøti⁄_t
Ë
i
;

261 
˚º
 << "cvt2lock_duøti⁄: badÜock duøti⁄" << 
ídl
;

262 
	`W_FATAL
(
ss_m
::
eINTERNAL
);

263  
w_ba£_t
::
t_l⁄g
;

264 
	}
}

266 
ölöe
 
	gss_m
::
sm_°‹e_¥›îty_t


267 
	$cvt2°‹e_¥›îty
(c⁄° *
s
)

269 
ss_m
::
sm_°‹e_¥›îty_t
 
¥›
 = ss_m::
t_ªguœr
;

270 i‡(
	`°rcmp
(
s
, "tmp") == 0) {

271 
¥›
 = 
ss_m
::
t_ãmp‹¨y
;

272 } i‡(
	`°rcmp
(
s
, "regular") == 0) {

273 
¥›
 = 
ss_m
::
t_ªguœr
;

274 } i‡(
	`°rcmp
(
s
, "load_file") == 0) {

275 
¥›
 = 
ss_m
::
t_lﬂd_fûe
;

276 } i‡(
	`°rcmp
(
s
, "insert_file") == 0) {

277 
¥›
 = 
ss_m
::
t_ö£π_fûe
;

279 
˚º
 << "bad st‹ê¥›îty: " << 
s
 << 
ídl
;

280 
	`W_FATAL
(
ss_m
::
eINTERNAL
);

282  
¥›
;

283 
	}
}

285 
ölöe
 
	gnbox_t
::
sob_cmp_t


286 
	$cvt2sob_cmp_t
(c⁄° *
s
)

288 i‡(
	`°ªq
(
s
, "||")Ë 
nbox_t
::
t_ovîœp
;

289 i‡(
	`°ªq
(
s
, "/")Ë 
nbox_t
::
t_covî
;

290 i‡(
	`°ªq
(
s
, "==")Ë 
nbox_t
::
t_exa˘
;

291 i‡(
	`°ªq
(
s
, "<<")Ë 
nbox_t
::
t_öside
;

292  
nbox_t
::
t_bad
;

293 
	}
}

295 
ölöe
 
	gss_m
::
c⁄cuºícy_t


296 
	$cvt2c⁄cuºícy_t
(c⁄° *
s
)

298 i‡(
	`°ªq
(
s
, "t_cc_n⁄e")Ë 
ss_m
::
t_cc_n⁄e
;

299 i‡(
	`°ªq
(
s
, "t_cc_ªc‹d")Ë 
ss_m
::
t_cc_ªc‹d
;

300 i‡(
	`°ªq
(
s
, "t_cc_∑ge")Ë 
ss_m
::
t_cc_∑ge
;

301 i‡(
	`°ªq
(
s
, "t_cc_fûe")Ë 
ss_m
::
t_cc_fûe
;

302 i‡(
	`°ªq
(
s
, "t_cc_vﬁ")Ë 
ss_m
::
t_cc_vﬁ
;

303 i‡(
	`°ªq
(
s
, "t_cc_kvl")Ë 
ss_m
::
t_cc_kvl
;

304 i‡(
	`°ªq
(
s
, "t_cc_modkvl")Ë 
ss_m
::
t_cc_modkvl
;

305 i‡(
	`°ªq
(
s
, "t_cc_im")Ë 
ss_m
::
t_cc_im
;

306 i‡(
	`°ªq
(
s
, "t_cc_≠≥nd")Ë 
ss_m
::
t_cc_≠≥nd
;

307  
ss_m
::
t_cc_bad
;

308 
	}
}

310 
ölöe
 

311 
	$check
(
T˛_I¡îp
* 
ù
, c⁄° * 
s
, 
ac
, 
n1
, 
n2
 = 0, 
n3
 = 0,

312 
n4
 = 0, 
n5
 = 0)

314 
SSH_CHECK_STACK
;

315 i‡(
ac
 !
n1
 &&á¯!
n2
 &&á¯!
n3
 &&á¯!
n4
 &&á¯!
n5
) {

316 i‡(
s
[0]) {

317 
	`T˛_AµídResu…
(
ù
, "wr⁄g #árgs; should bê\"", 
s
,

320 
	`T˛_AµídResu…
(
ù
, "wrong #árgs,ÇoneÉxpected", 0);

325 
	}
}

327 
	ety≥d_båì_ã°
 {

328 
	mã°_nosuch
,

331 
	mã°_i1
, 
	mã°_i2
, 
	mã°_i4
, 
	mã°_i8
,

332 
	mã°_u1
, 
	mã°_u2
, 
	mã°_u4
, 
	mã°_u8
,

333 
	mã°_f4
, 
	mã°_f8
,

336 
	mã°_b1
, 
	mã°_b23
, 
	mã°_bv
, 
	mã°_bœrge
,

337 
	mã°_•©ül


343 
t_mu…ikey_s‹t_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

344 
t_ã°_bulklﬂd_öt_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

345 
t_ã°_bulklﬂd_πªe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

346 
t_ã°_öt_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

347 
t_ã°_ty≥d_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

348 
t_s‹t_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

349 
t_¸óã_ty≥d_hdr_body_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

350 
t_¸óã_ty≥d_hdr_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

351 
t_sˇn_s‹ãd_ªcs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

352 
t_com∑ª_ty≥d
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

353 
t_föd_assoc_ty≥d
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

354 
t_gë_°‹e_öfo
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

355 
ty≥d_båì_ã°
 
cvt2ty≥
(c⁄° *
s
);

356 c⁄° * 
cvtFROMty≥
(
ty≥d_båì_ã°
 
t
);

357 
cvt2ty≥d_vÆue
–
ty≥d_båì_ã°
 
t
,

358 c⁄° *
°rög
, 
ty≥d_vÆue
 &);

359 
check_key_ty≥
(
T˛_I¡îp
 *
ù
, 
ty≥d_båì_ã°
 
t
,

360 c⁄° *
giví
, c⁄° *
°id°rög
);

361 
ty≥d_båì_ã°
 
gë_key_ty≥
(
T˛_I¡îp
 *
ù
, c⁄° *
°id°rög
 );

362 c⁄° * 
cvt_c⁄cuºícy_t
–
ss_m
::
c⁄cuºícy_t
 
cc
);

363 c⁄° * 
cvt_ndx_t
–
ss_m
::
ndx_t
 
cc
);

364 c⁄° * 
cvt_°‹e_t
(
ss_m
::
°‹e_t
 
n
);

	@src/sm/smsh/shell2.cpp

30 
	~"w_deföes.h
"

34 
	~<c˘y≥
>

35 
	~"shñl.h
"

37 
	~<√w
>

39 #ifde‡
EXPLICIT_TEMPLATE


40 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gboﬁ
>;

43 
	#LARGEKEYSTRING
 (
ss_m
::
∑ge_sz
/3)

	)

44 
	#LARGESTRING
 
ss_m
::
∑ge_sz


	)

45 
	#STRINGMAX
 
LARGESTRING
+1

	)

49 
	$cvt2ty≥d_vÆue
(

51 
ty≥d_båì_ã°
 
t
,

52 c⁄° *
°rög
,

54 
ty≥d_vÆue
 &
_v


57 
t
) {

58 
ã°_bœrge
:

59 
ã°_b23
:

60 
ã°_bv
:

61 
_v
.
_u
.
bv
 = 
°rög
;

62 
_v
.
_Àngth
 = 
	`°æí
(_v.
_u
.
bv
);

65 
ã°_b1
:

66 
_v
.
_u
.
b1
 = *
°rög
;

67 
_v
.
_Àngth
 = ();

70 
ã°_i1
:

71 
_v
.
_u
.
i1_num
 = 
	`öt1_t
(
	`©oi
(
°rög
));

72 
_v
.
_Àngth
 = (
öt1_t
);

75 
ã°_i2
:

76 
_v
.
_u
.
i2_num
 = 
	`öt2_t
(
	`©oi
(
°rög
));

77 
_v
.
_Àngth
 = (
öt2_t
);

80 
ã°_i4
:

81 
_v
.
_u
.
i4_num
 = 
	`öt4_t
(
	`©oi
(
°rög
));

82 
_v
.
_Àngth
 = (
öt4_t
);

85 
ã°_i8
:

87 
_v
.
_u
.
i8_num
 = 
w_ba£_t
::
	`°πoi8
(
°rög
);

88 
_v
.
_Àngth
 = (
w_ba£_t
::
öt8_t
);

91 
ã°_u1
:

92 
_v
.
_u
.
u1_num
 = 
	`uöt1_t
(
	`©oi
(
°rög
));

93 
_v
.
_Àngth
 = (
uöt1_t
);

96 
ã°_u2
:

97 
_v
.
_u
.
u2_num
 = 
	`uöt2_t
(
	`©oi
(
°rög
));

98 
_v
.
_Àngth
 = (
uöt2_t
);

101 
ã°_u4
:

102 
_v
.
_u
.
u4_num
 = 
	`uöt4_t
(
	`©oi
(
°rög
));

103 
_v
.
_Àngth
 = (
uöt4_t
);

106 
ã°_u8
:

108 
_v
.
_u
.
u8_num
 = 
w_ba£_t
::
	`°πou8
(
°rög
);

109 
_v
.
_Àngth
 = (
w_ba£_t
::
uöt8_t
);

112 
ã°_f4
:

113 
_v
.
_u
.
f4_num
 = (
	`©of
(
°rög
));

114 
_v
.
_Àngth
 = (
f4_t
);

117 
ã°_f8
:

118 
_v
.
_u
.
f8_num
 = 
	`©of
(
°rög
);

119 
_v
.
_Àngth
 = (
f8_t
);

123 
˚º
 << "Unknow¿com∑ris⁄Åy≥ " << 
	`W_ENUM
(
t
Ë<< 
ídl
;

124 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

127 
	}
}

129 
ty≥d_båì_ã°
 
cvt2ty≥
(c⁄° *
s
);

147 
öt1_t
 *
	gvÆues_i1
 = 0;

148 
uöt1_t
 *
	gvÆues_u1
;

150 
öt2_t
 *
	gvÆues_i2
 = 0;

151 
uöt2_t
 *
	gvÆues_u2
;

153 
öt4_t
 *
	gvÆues_i4
 = 0;

154 
uöt4_t
 *
	gvÆues_u4
;

156 
	gw_ba£_t
::
öt8_t
 *
vÆues_i8
 = 0;

157 
	gw_ba£_t
::
uöt8_t
 *
vÆues_u8
;

159 
f4_t
 *
	gvÆues_f4
 = 0;

160 
f8_t
 *
	gvÆues_f8
 = 0;

161 **
	gvÆues_b
 = 0;

163 
	$u1_cmp
(c⁄° *
_p
, c⁄° *
_q
)

165 
uöt1_t
 *
p
 = &
vÆues_u1
[*(*)
_p
];

166 
uöt1_t
 *
q
 = &
vÆues_u1
[*(*)
_q
];

168 i‡(*
p
 < *
q
)  -1;

169 i‡(*
p
 > *
q
)  1;

171 
	}
}

172 
	$u2_cmp
(c⁄° *
_p
, c⁄° *
_q
)

174 
uöt2_t
 *
p
 = &
vÆues_u2
[*(*)
_p
];

175 
uöt2_t
 *
q
 = &
vÆues_u2
[*(*)
_q
];

177 i‡(*
p
 < *
q
)  -1;

178 i‡(*
p
 > *
q
)  1;

180 
	}
}

182 
	$u4_cmp
(c⁄° *
_p
, c⁄° *
_q
)

184 
uöt4_t
 *
p
 = &
vÆues_u4
[*(*)
_p
];

185 
uöt4_t
 *
q
 = &
vÆues_u4
[*(*)
_q
];

187 
	`DBG
(<<"p=" << *(
uöt4_t
 *)
p


188 <<"q=" << *(
uöt4_t
 *)
q


190 i‡(*
p
 < *
q
)  -1;

191 i‡(*
p
 > *
q
)  1;

193 
	}
}

195 
	$u8_cmp
(c⁄° *
_p
, c⁄° *
_q
)

197 
w_ba£_t
::
uöt8_t
 *
p
 = &
vÆues_u8
[*(*)
_p
];

198 
w_ba£_t
::
uöt8_t
 *
q
 = &
vÆues_u8
[*(*)
_q
];

200 
	`DBG
(<<"p=" << *(
w_ba£_t
::
uöt8_t
 *)
p


201 <<"q=" << *(
w_ba£_t
::
uöt8_t
 *)
q


203 i‡(*
p
 < *
q
)  -1;

204 i‡(*
p
 > *
q
)  1;

206 
	}
}

208 
	$i1_cmp
(c⁄° *
_p
, c⁄° *
_q
)

210 
öt1_t
 *
p
 = &
vÆues_i1
[*(*)
_p
];

211 
öt1_t
 *
q
 = &
vÆues_i1
[*(*)
_q
];

213 i‡(*
p
 < *
q
)  -1;

214 i‡(*
p
 > *
q
)  1;

216 
	}
}

218 
	$i2_cmp
(c⁄° *
_p
, c⁄° *
_q
)

220 
öt2_t
 *
p
 = &
vÆues_i2
[*(*)
_p
];

221 
öt2_t
 *
q
 = &
vÆues_i2
[*(*)
_q
];

223 i‡(*
p
 < *
q
)  -1;

224 i‡(*
p
 > *
q
)  1;

226 
	}
}

228 
	$i4_cmp
(c⁄° *
_p
, c⁄° *
_q
)

230 
öt4_t
 *
p
 = &
vÆues_i4
[*(*)
_p
];

231 
öt4_t
 *
q
 = &
vÆues_i4
[*(*)
_q
];

233 
	`DBG
(<<"p=" << *(
öt4_t
 *)
p


234 <<"q=" << *(
öt4_t
 *)
q


236 i‡(*
p
 < *
q
)  -1;

237 i‡(*
p
 > *
q
)  1;

239 
	}
}

241 
	$i8_cmp
(c⁄° *
_p
, c⁄° *
_q
)

243 
w_ba£_t
::
öt8_t
 *
p
 = &
vÆues_i8
[*(*)
_p
];

244 
w_ba£_t
::
öt8_t
 *
q
 = &
vÆues_i8
[*(*)
_q
];

246 
	`DBG
(<<"p=" << *(
w_ba£_t
::
öt8_t
 *)
p


247 <<"q=" << *(
w_ba£_t
::
öt8_t
 *)
q


249 i‡(*
p
 < *
q
)  -1;

250 i‡(*
p
 > *
q
)  1;

252 
	}
}

254 
	$f4_cmp
(c⁄° *
_p
, c⁄° *
_q
)

256 
f4_t
 *
p
 = &
vÆues_f4
[*(*)
_p
];

257 
f4_t
 *
q
 = &
vÆues_f4
[*(*)
_q
];

259 i‡(*
p
 < *
q
)  -1;

260 i‡(*
p
 > *
q
)  1;

262 
	}
}

264 
	$f8_cmp
(c⁄° *
_p
, c⁄° *
_q
)

266 
f8_t
 *
p
 = &
vÆues_f8
[*(*)
_p
];

267 
f8_t
 *
q
 = &
vÆues_f8
[*(*)
_q
];

269 i‡(*
p
 < *
q
)  -1;

270 i‡(*
p
 > *
q
)  1;

272 
	}
}

273 
	#LARGEKEYSTRING
 (
ss_m
::
∑ge_sz
/3)

	)

274 
	#LARGESTRING
 
ss_m
::
∑ge_sz


	)

275 
	#STRINGMAX
 
LARGESTRING
+1

	)

277 
	$Àx_cmp
(c⁄° *
_p
, c⁄° *
_q
, 
Àn
)

279 
	`w_as£π3
(
Àn
 >= 0);

281 
u_ch¨
 **
p
 = (u_ch¨ **)&
vÆues_b
[*(*)
_p
];

282 
u_ch¨
 **
q
 = (u_ch¨ **)&
vÆues_b
[*(*)
_q
];

285 c⁄° 
u_ch¨
 *
a
 = *(u_ch¨ **)
p
;

286 c⁄° 
u_ch¨
 *
b
 = *(u_ch¨ **)
q
;

288 
l1
 = 0, 
l2
 = 0;

289 { c⁄° 
u_ch¨
 *
µ
 = 
a
; *µ && (
l1
 < 
Àn
);Öp++,Ü1++) ; }

290 { c⁄° 
u_ch¨
 *
µ
 = 
b
; *µ && (
l2
 < 
Àn
);Öp++,Ü2++) ; }

291 
Àn
 = ()(
l1
>
l2
 ?Ü1 :Ü2);

293 #ifde‡
W_TRACE


295 
vec_t
 
	`tm∑
(
a
, (
l1
));

296 
vec_t
 
	`tmpb
(
b
, (
l2
));

297 
	`DBG
(<<"lex_cmp(_p = "

298 << *(*)
_p
 << ", _q="

299 << *(*)
_q
 << ",Üí=" << 
Àn


300 << ")\«=" << 
tm∑


301 << "\nb=" << 
tmpb
);

304 
diff
;

305 #ifde‡
W_TRACE


306 c⁄° 
u_ch¨
 *
°¨t
 = 
a
;

308 
Àn
-- > 0) {

309 i‡((
diff
 = *
a
 - *
b
)) {

310 
	`DBG
(<<"Àx_cm∞ªtu∫†" << 
diff


311 << " i¿ch¨ " << (
a
 - 
°¨t
));

312  
diff
;

314 
a
++; 
b
++;

316 
	`DBG
(<<"lex_cmpÑeturns 0 (SAME)");

318 
	}
}

320 
	$Àx_cmp1
(c⁄° *
p
, c⁄° *
q
)

322  
	`Àx_cmp
(
p
,
q
,1);

323 
	}
}

324 
	$Àx_cm∂¨ge
(c⁄° *
p
, c⁄° *
q
)

326  
	`Àx_cmp
(
p
,
q
,
LARGEKEYSTRING
);

327 
	}
}

328 
	$Àx_cmp23
(c⁄° *
p
, c⁄° *
q
)

330  
	`Àx_cmp
(
p
,
q
,23);

331 
	}
}

332 
	$Àx_cmpv
(c⁄° *
p
, c⁄° *
q
)

334  
	`Àx_cmp
(
p
,
q
,
LARGEKEYSTRING
);

335 
	}
}

337 *
	$make_¥öèbÀ
(
i
, 
limô
)

339 if(
i
 < 0) {

340 
i
 = 0-i;

342 if(
i
 > 
limô
) {

343 
i
 = i % 
limô
;

345 if(
i
 < 1) i=1;

347 
	`DBG
(<<"cho£Üígth " << 
i
);

348 *
s
 = 
√w
 [
i
+1];

349 
j
 = ()0;

350 
∫d
=0;

352 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

353 
s
[
i
] = '\0';

354 
i
-- > 0) {

355 !
	`iß um
(
j
)

358 
∫d
 = (
gíî©‹
.
	`ønd
() & 0x7f);

359 
j
 = ()
∫d
;

361 
s
[
i
] = 
j
;

364 
i
=0; i<()
	`°æí
(
s
); i++) {

365 
	`w_as£π3
(
	`iß um
(
s
[
i
]));

368 #ifde‡
W_TRACE


370 
vec_t
 
	`tmp
(
s
, 
	`°æí
(s));

371 
	`DBG
(<<"make_¥öèbÀ(" << 
i
 << "," << 
limô
 <<")=" << 
tmp
);

374 
	`w_as£π3
–()
	`°æí
(
s
Ë<
limô
);

375 
	`w_as£π3
–()
	`°æí
(
s
) > 0);

376  
s
;

377 
	}
}

379 
	$possibÀ
(Ë{ 
	}
}

380 
	$•ecül
(Ë{ 
	}
}

388 
	g_œ°°rög
[] = { 0xffffffff, 0x0 };

389 *
	gLASTSTRING
 = (*)&
_œ°°rög
;

392 
	$_t_ã°_ty≥d_båì
(

393 
T˛_I¡îp
* 
ù
,

394 
vid
,

395 
n
,

396 c⁄° *
_keyty≥
,

397 c⁄° *
cc°rög


401 
ss_m
::
c⁄cuºícy_t
 
buûd_cc
 = ss_m::
t_cc_kvl
;

402 if(
cc°rög
) {

403 
buûd_cc
 = 
	`cvt2c⁄cuºícy_t
(
cc°rög
);

405 
ss_m
::
c⁄cuºícy_t
 
cc
 = 
buûd_cc
;

407 c⁄° *
keyty≥
 = 
	`check_com¥ess_Êag
(
_keyty≥
);

409 
w_rc_t
 
rc
;

410 
	`FUNC
(
_t_ã°_ty≥d_båì
);

411 
	`DBG
(<<"ã°Åy≥d båì vid" << 
vid


412 << "Ç=" << 
n


413 << " _keyty≥=" << 
_keyty≥


414 << " keyty≥=" << 
keyty≥


416 *
key_buf„r
 =0;

418 
du∂iˇãs
 = 0;

419 
boﬁ
 
s‹t_is_°abÀ
 = 
åue
;

428 
	`as£π
(
n
 > 0);

430 c⁄° 
h
 = 0;

431 
low
 = 0 - 
h
;

432 
high
 = (
n
-1Ë- 
h
;

433 
zîo
 = 0;

434 
highm1
 = (
high
 - 1)>
low
?(high-1):Üow;

435 
highm2
 = (
high
 - 2)>
low
?(high-2):Üow;

436 
lowp1
 = (
low
 + 1)>
high
?(low+1): high;

437 
lowp2
 = (
low
 + 2)>
high
?(low+2): high;

439 
°id_t
 
°id
;

441 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
keyty≥
);

442 if(
t
 =
ã°_nosuch
) {

443 
	`T˛_AµídResu…
(
ù
, "Nÿã° f‹ keyÅy≥: ", 
keyty≥
, 0);

444  
TCL_ERROR
;

448 
i1
=0;

449 
i4
=0;

450 
w_ba£_t
::
öt8_t
 
i8
 = 0;

451 
i2
=0;

452 
f4
=0;

453 
f8
=0;

454 *
b
=0;

455 
vec_t
 
key
, 
ñ
;

456 
smsize_t
 
kÀn
=0;

470 
i
=0;

471 
smsize_t
 
ñí
 = (
i
);

477 
t
) {

478 
ã°_i1
:

479 
ã°_u1
:

480 
vÆues_i1
 = 
√w
 
öt1_t
[
n
];

481 
vÆues_u1
 = (
uöt1_t
 *Ë
vÆues_i1
;

483 
ã°_i2
:

484 
ã°_u2
:

485 
vÆues_i2
 = 
√w
 
öt2_t
[
n
];

486 
vÆues_u2
 = (
uöt2_t
 *Ë
vÆues_i2
;

488 
ã°_u4
:

489 
ã°_i4
:

490 
vÆues_i4
 = 
√w
 
öt4_t
[
n
];

491 
vÆues_u4
 = (
uöt4_t
 *Ë
vÆues_i4
;

493 
ã°_u8
:

494 
ã°_i8
:

495 
vÆues_i8
 = 
√w
 
w_ba£_t
::
öt8_t
[
n
];

496 
vÆues_u8
 = (
w_ba£_t
::
uöt8_t
 *Ë
vÆues_i8
;

498 
ã°_f4
:

499 
vÆues_f4
 = 
√w
 
f4_t
[
n
];

501 
ã°_f8
:

502 
vÆues_f8
 = 
√w
 
f8_t
[
n
];

504 
ã°_b1
:

505 
ã°_b23
:

506 
ã°_bœrge
:

507 
ã°_bv
: {

508 * 
	t˝
;

509 
vÆues_b
 = 
√w
 
˝
[
n
];

510 
key_buf„r
 = 
√w
 [
LARGEKEYSTRING
];

515 
ã°_•©ül
:

517 
	`w_as£π1
(0);

526 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

529 
j
;

530 
zîo
 = 
low
;

531 
j
 = 
low
; j <
high
; j++) {

535 
i
 = 
gíî©‹
.
	`ønd
() % 65535;

537 
	#MAKE_CHAR
(
i
Ë(()(i&0xff))

	)

538 
	#MAKE_SHORT
(
i
Ë(()i)

	)

539 
	#MAKE_INT
(
i
Ë(i)

	)

540 
	#MAKE_INT8
(
i
Ë(i)

	)

541 
	#MAKE_FLOAT
(
i
Ë(()ò* 1.0001)

	)

542 
	#MAKE_DOUBLE
(
i
Ë((()i*100000000Ë* 1.00001)

	)

543 
	#MAKE_STRING
(
i
,
limô
Ë
	`make_¥öèbÀ
(i,limô)

	)

545 
	#NORMALIZE
(
i
Ë(i-
low
)

	)

547 
	`DBG
(<<"j=" << 
j


548 << "Ç‹mÆized=" << 
	`NORMALIZE
(
j
)

549 << "Ñ™dom i=" << 
i


552 
	`w_as£π3
(
	`NORMALIZE
(
j
Ë>0 && NORMALIZE(jË<
n
);

553 
b
=0;

554 
t
) {

555 
ã°_u1
:

556 
ã°_i1
:

557 
i1
 = 
	`MAKE_CHAR
(
i
);

558 
vÆues_i1
[
	`NORMALIZE
(
j
)] = 
i1
;

559 i‡(
löked
.
vîbo£_Êag
) {

560 if(
t
 =
ã°_i1
) {

561 
˚º
 << 
vÆues_i1
[
	`NORMALIZE
(
j
)] << 
ídl
;

563 
˚º
 << 
vÆues_u1
[
	`NORMALIZE
(
j
)] << 
ídl
;

567 
ã°_u2
:

568 
ã°_i2
:

569 
i2
 = 
	`MAKE_SHORT
(
j
==
low
?0:
i
);

570 
vÆues_i2
[
	`NORMALIZE
(
j
)] = 
i2
;

571 i‡(
löked
.
vîbo£_Êag
) {

572 if(
t
 =
ã°_i2
) {

573 
˚º
 << 
vÆues_i2
[
	`NORMALIZE
(
j
)] << 
ídl
;

575 
˚º
 << 
vÆues_u2
[
	`NORMALIZE
(
j
)] << 
ídl
;

579 
ã°_u4
:

580 
ã°_i4
:

581 
i4
 = 
	`MAKE_INT
(
j
==
low
?0:
i
);

582 
vÆues_i4
[
	`NORMALIZE
(
j
)] = 
i4
;

583 i‡(
löked
.
vîbo£_Êag
) {

584 if(
t
 =
ã°_i4
) {

585 
˚º
 << 
vÆues_i4
[
	`NORMALIZE
(
j
)] << 
ídl
;

587 
˚º
 << 
vÆues_u4
[
	`NORMALIZE
(
j
)] << 
ídl
;

591 
ã°_u8
:

592 
ã°_i8
:

593 
i8
 = 
	`MAKE_INT8
(
j
==
low
?0:
i
);

594 
vÆues_i8
[
	`NORMALIZE
(
j
)] = 
i8
;

595 i‡(
löked
.
vîbo£_Êag
) {

596 if(
t
 =
ã°_i8
) {

597 
˚º
 << 
vÆues_i8
[
	`NORMALIZE
(
j
)] << 
ídl
;

599 
˚º
 << 
vÆues_u8
[
	`NORMALIZE
(
j
)] << 
ídl
;

603 
ã°_f4
:

604 
f4
 = (Ë
	`MAKE_FLOAT
(
j
==
low
?0:
i
);

605 
vÆues_f4
[
	`NORMALIZE
(
j
)] = 
f4
;

606 i‡(
löked
.
vîbo£_Êag
) {

607 
˚º
 << 
vÆues_f4
[
	`NORMALIZE
(
j
)] << 
ídl
;

610 
ã°_f8
:

611 
f8
 = 
	`MAKE_DOUBLE
(
j
==
low
?0:
i
);

612 
vÆues_f8
[
	`NORMALIZE
(
j
)] = 
f8
;

613 i‡(
löked
.
vîbo£_Êag
) {

614 
˚º
 << 
vÆues_f8
[
	`NORMALIZE
(
j
)] << 
ídl
;

617 
ã°_b1
:

618 
b
 = 
	`MAKE_STRING
(1, 1);

620 
ã°_b23
:

621 if(!
b
Ëb = 
	`MAKE_STRING
(23, 23);

623 
ã°_bœrge
:

624 
ã°_bv
: {

625 if(!
b
Ëb = 
	`MAKE_STRING
(
i
, 
LARGEKEYSTRING
-1);

626 
vÆues_b
[
	`NORMALIZE
(
j
)] = 
b
;

627 i‡(
löked
.
vîbo£_Êag
) {

628 
˚º
 << 
vÆues_b
[
	`NORMALIZE
(
j
)] << 
ídl
;

633 
ã°_•©ül
:

634 : 
	`w_as£π1
(0);

647 * 
s‹ãd
 = 
√w
 [
n
];

648 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_s‹ãd
(
s‹ãd
);

650 * 
ªvî£
 = 
√w
 [
n
];

651 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_ªvî£
(
ªvî£
);

653 
boﬁ
* 
du∂iˇãd
 = 
√w
 boﬁ[
n
];

656 
w_auto_dñëe_¨øy_t
<
boﬁ
> 
	`auto_dñ_dup
(
du∂iˇãd
);

659 
j
=0; j<
n
; j++) {

660 
s‹ãd
[
j
] = j;

661 
du∂iˇãd
[
j
]=
Ál£
;

663 (*
com∑r
)(const *, const *) = 0;

665 
t
) {

666 
ã°_u1
:

667 
com∑r
 = 
u1_cmp
;

669 
ã°_i1
:

670 
com∑r
 = 
i1_cmp
;

672 
ã°_u2
:

673 
com∑r
 = 
u2_cmp
;

675 
ã°_i2
:

676 
com∑r
 = 
i2_cmp
;

678 
ã°_u4
:

679 
com∑r
 = 
u4_cmp
;

681 
ã°_i4
:

682 
com∑r
 = 
i4_cmp
;

684 
ã°_u8
:

685 
com∑r
 = 
u8_cmp
;

687 
ã°_i8
:

688 
com∑r
 = 
i8_cmp
;

690 
ã°_f4
:

691 
com∑r
 = 
f4_cmp
;

693 
ã°_f8
:

694 
com∑r
 = 
f8_cmp
;

697 
ã°_b1
:

698 
ã°_b23
:

699 
ã°_bœrge
:

700 
ã°_bv
: {

701 if(
t
==
ã°_b1
) {

702 
com∑r
 = 
Àx_cmp1
;

704 if(
t
==
ã°_bœrge
) {

705 
com∑r
 = 
Àx_cm∂¨ge
;

707 if(
t
==
ã°_b23
) {

708 
com∑r
 = 
Àx_cmp23
;

710 
com∑r
 = 
Àx_cmpv
;

715 
ã°_•©ül
:

716 : 
	`w_as£π1
(0);

718 
	`qs‹t
(
s‹ãd
, 
n
, (), 
com∑r
);

726 
	`DBG
(<<"skipping 0");

727 
j
=1; j<
n
; j++) {

728 
Àn
=0;

729 
t
) {

730 
ã°_u1
:

731 
	`DBG
(<<"j=" << 
j


732 << " vÆues_u1[s‹ãd[j]] = " << (
u_ch¨
Ë
vÆues_u1
[
s‹ãd
[
j
]]

733 << " vÆues_u1[s‹ãd[j-1]] = " << (
u_ch¨
Ë
vÆues_u1
[
s‹ãd
[
j
-1]]

735 
	`w_as£π1
(
vÆues_u1
[
s‹ãd
[
j
]] >= values_u1[sorted[j-1]]);

736 if(
vÆues_u1
[
s‹ãd
[
j
]] == values_u1[sorted[j-1]]) {

737 
du∂iˇãd
[
j
-1] = 
åue
;

738 
du∂iˇãs
++;

742 
ã°_i1
:

743 
	`DBG
(<<"j=" << 
j


744 << " vÆues_i1[s‹ãd[j]] = " << (
u_ch¨
Ë
vÆues_i1
[
s‹ãd
[
j
]]

745 << " vÆues_i1[s‹ãd[j-1]] = " << (
u_ch¨
Ë
vÆues_i1
[
s‹ãd
[
j
-1]]

747 
	`w_as£π1
(
vÆues_i1
[
s‹ãd
[
j
]] >= values_i1[sorted[j-1]]);

748 if(
vÆues_i1
[
s‹ãd
[
j
]] == values_i1[sorted[j-1]]) {

749 
du∂iˇãd
[
j
-1] = 
åue
;

750 
du∂iˇãs
++;

754 
ã°_u2
:

755 
	`DBG
(<<"j=" << 
j


756 << " vÆues_u2[s‹ãd[j]] = " << 
vÆues_u2
[
s‹ãd
[
j
]]

757 << " vÆues_u2[s‹ãd[j-1]] = " << 
vÆues_u2
[
s‹ãd
[
j
-1]]

759 i‡(!(
vÆues_u2
[
s‹ãd
[
j
]] >
vÆues_i2
[sorted[j-1]])) {

760 &
u1
 = 
vÆues_u2
[
s‹ãd
[
j
]];

761 &
u2
 = 
vÆues_u2
[
s‹ãd
[
j
-1]];

762 
cout
 << "u1 " << 
u1
 << " u2 " << 
u2
 << 
ídl
;

763 
cout
 << "ORDERÉº j " << 
j
 << " s‹ãd[j] " << 
s‹ãd
[j]

764 << " s‹ãd[j-1] " << 
s‹ãd
[
j
-1]

765 << 
ídl
 << '\t'

766 << " vÆues_u2[s[j]] " << 
vÆues_u2
[
s‹ãd
[
j
]]

768 << " vÆues_u2[s[j-1]] " << 
vÆues_u2
[
s‹ãd
[
j
-1]]

769 << 
ídl
;

771 
	`w_as£π1
(
vÆues_u2
[
s‹ãd
[
j
]] >= values_u2[sorted[j-1]]);

772 i‡(
vÆues_u2
[
s‹ãd
[
j
]] == values_u2[sorted[j-1]]) {

773 
du∂iˇãd
[
j
-1] = 
åue
;

774 
du∂iˇãs
++;

778 
ã°_i2
:

779 
	`DBG
(<<"j=" << 
j


780 << " vÆues_i2[s‹ãd[j]] = " << 
vÆues_i2
[
s‹ãd
[
j
]]

781 << " vÆues_i2[s‹ãd[j-1]] = " << 
vÆues_i2
[
s‹ãd
[
j
-1]]

783 
	`w_as£π1
(
vÆues_i2
[
s‹ãd
[
j
]] >= values_i2[sorted[j-1]]);

784 if(
vÆues_i2
[
s‹ãd
[
j
]] == values_i2[sorted[j-1]]) {

785 
du∂iˇãd
[
j
-1] = 
åue
;

786 
du∂iˇãs
++;

790 
ã°_u4
:

791 
	`DBG
(<<"j=" << 
j


792 << " vÆues_u4[s‹ãd[j]] = " << 
vÆues_u4
[
s‹ãd
[
j
]]

793 << " vÆues_u4[s‹ãd[j-1]] = " << 
vÆues_u4
[
s‹ãd
[
j
-1]]

795 
	`w_as£π1
(
vÆues_u4
[
s‹ãd
[
j
]] >= values_u4[sorted[j-1]]);

796 if(
vÆues_u4
[
s‹ãd
[
j
]] == values_u4[sorted[j-1]]) {

797 
du∂iˇãs
++;

798 
du∂iˇãd
[
j
-1] = 
åue
;

802 
ã°_i4
:

803 
	`DBG
(<<"j=" << 
j


804 << " vÆues_i4[s‹ãd[j]] = " << 
vÆues_i4
[
s‹ãd
[
j
]]

805 << " vÆues_i4[s‹ãd[j-1]] = " << 
vÆues_i4
[
s‹ãd
[
j
-1]]

807 
	`w_as£π1
(
vÆues_i4
[
s‹ãd
[
j
]] >= values_i4[sorted[j-1]]);

808 if(
vÆues_i4
[
s‹ãd
[
j
]] == values_i4[sorted[j-1]]) {

809 
du∂iˇãs
++;

810 
du∂iˇãd
[
j
-1] = 
åue
;

814 
ã°_u8
:

815 
	`DBG
(<<"j=" << 
j


816 << " vÆues_u8[s‹ãd[j]] = " << 
vÆues_u8
[
s‹ãd
[
j
]]

817 << " vÆues_u8[s‹ãd[j-1]] = " << 
vÆues_u8
[
s‹ãd
[
j
-1]]

819 
	`w_as£π1
(
vÆues_u8
[
s‹ãd
[
j
]] >= values_u8[sorted[j-1]]);

820 if(
vÆues_u8
[
s‹ãd
[
j
]] == values_u8[sorted[j-1]]) {

821 
du∂iˇãs
++;

822 
du∂iˇãd
[
j
-1] = 
åue
;

826 
ã°_i8
:

827 
	`DBG
(<<"j=" << 
j


828 << " vÆues_i8[s‹ãd[j]] = " << 
vÆues_i8
[
s‹ãd
[
j
]]

829 << " vÆues_i8[s‹ãd[j-1]] = " << 
vÆues_i8
[
s‹ãd
[
j
-1]]

831 
	`w_as£π1
(
vÆues_i8
[
s‹ãd
[
j
]] >= values_i8[sorted[j-1]]);

832 if(
vÆues_i8
[
s‹ãd
[
j
]] == values_i8[sorted[j-1]]) {

833 
du∂iˇãs
++;

834 
du∂iˇãd
[
j
-1] = 
åue
;

838 
ã°_f4
:

839 
	`DBG
(<<"j=" << 
j


840 << " vÆues_f4[s‹ãd[j]] = " << 
vÆues_f4
[
s‹ãd
[
j
]]

841 << " vÆues_f4[s‹ãd[j-1]] = " << 
vÆues_f4
[
s‹ãd
[
j
-1]]

843 
	`w_as£π1
(
vÆues_f4
[
s‹ãd
[
j
]] >= values_f4[sorted[j-1]]);

844 if(
vÆues_f4
[
s‹ãd
[
j
]] == values_f4[sorted[j-1]]) {

845 
du∂iˇãd
[
j
-1]=
åue
;

846 
du∂iˇãs
++;

850 
ã°_f8
:

851 
	`DBG
(<<"j=" << 
j


852 << " vÆues_f8[s‹ãd[j]] = " << 
vÆues_f8
[
s‹ãd
[
j
]]

853 << " vÆues_f8[s‹ãd[j-1]] = " << 
vÆues_f8
[
s‹ãd
[
j
-1]]

855 
	`w_as£π1
(
vÆues_f8
[
s‹ãd
[
j
]] >= values_f8[sorted[j-1]]);

856 if(
vÆues_f8
[
s‹ãd
[
j
]] == values_f8[sorted[j-1]]) {

857 
du∂iˇãs
++;

858 
du∂iˇãd
[
j
-1]=
åue
;

862 
ã°_b1
:

863 
Àn
=1;

864 
ã°_b23
:

865 if(!
Àn
)Üen=23;

866 
ã°_bœrge
:

867 
ã°_bv
:

868 if(!
Àn
ËÀn=
LARGEKEYSTRING
;

870 #ifde‡
W_TRACE


872 
vec_t
 
	`tm∑
(
vÆues_b
[
s‹ãd
[
j
]],

873 
	`°æí
(
vÆues_b
[
s‹ãd
[
j
]]));

874 
vec_t
 
	`tmpb
(
vÆues_b
[
s‹ãd
[
j
-1]],

875 
	`°æí
(
vÆues_b
[
s‹ãd
[
j
-1]]));

876 
	`DBG
(<<"j=" << 
j


877 <<"Üí=" << 
Àn


879 << 
tm∑


881 << 
tmpb


885 
	`w_as£π1
–
	`Àx_cmp
(&
s‹ãd
[
j
], &s‹ãd[j-1], 
Àn
)>=0);

887 if(
	`Àx_cmp
(&
s‹ãd
[
j
],&s‹ãd[j-1], 
Àn
)==0) {

888 
du∂iˇãs
++;

889 
	`DBG
(<<"du∂iˇãd: " << 
j
-1);

890 
du∂iˇãd
[
j
-1]=
åue
;

892 if(
	`°rcmp
(
vÆues_b
[
s‹ãd
[
j
-1]],

893 
vÆues_b
[
s‹ãd
[
j
]]) == 0) {

894 
	`w_as£π1
("BAD LEX_CMP!");

899 
ã°_•©ül
:

900 : 
	`w_as£π1
(0);

908 if(
du∂iˇãd
[
j
-1] && 
s‹ãd
[j-1] > sorted[j]) {

909 
s‹t_is_°abÀ
 = 
Ál£
;

912 
	`DBG
(<<"S‹ài†°abÀ?: " << 
s‹t_is_°abÀ
);

913 ! 
s‹t_is_°abÀ
) {

916 
	`DBG
(<<"fixing sorted...");

917 
s‹t_is_°abÀ
 = 
åue
;

918 
j
=1; j<
n
; j++) {

919 if(
du∂iˇãd
[
j
-1] && 
s‹ãd
[j-1] > sorted[j]) {

920 
ãmp
 = 
s‹ãd
[
j
];

921 
s‹ãd
[
j
] = sorted[j-1];

922 
s‹ãd
[
j
-1] = 
ãmp
;

927 
	`DBG
(<<"INSERT-ORDER / SORT-ORDER (* if duplicated):");

928 
j
=0; j<
n
; j++) {

930 
t
) {

931 
ã°_u1
:

932 
ã°_i1
:

933 
	`DBG
–<< 
j
 << " : "

934 << ()((
u_ch¨
Ë
vÆues_i1
[
j
])

935 << " /\t" << 
s‹ãd
[
j
]

936 << " :\t" << ()((
u_ch¨
)(
vÆues_i1
[
s‹ãd
[
j
]]))

937 << (* )(
du∂iˇãd
[
j
]?"*":"")

941 
ã°_u2
:

942 
	`DBG
–<< 
j
 << " : " << 
vÆues_u2
[j]

943 << " /\t" << 
s‹ãd
[
j
]

944 << " :\t" << 
vÆues_u2
[
s‹ãd
[
j
]]

945 << (* )(
du∂iˇãd
[
j
]?"*":"")

948 
ã°_i2
:

949 
	`DBG
–<< 
j
 << " : " << 
vÆues_i2
[j]

950 << " /\t" << 
s‹ãd
[
j
]

951 << " :\t" << 
vÆues_i2
[
s‹ãd
[
j
]]

952 << (* )(
du∂iˇãd
[
j
]?"*":"")

956 
ã°_u4
:

957 
	`DBG
–<< 
j
 << " : " << 
vÆues_u4
[j]

958 << " /\t" << 
s‹ãd
[
j
]

959 << " :\t" << 
vÆues_u4
[
s‹ãd
[
j
]]

960 << (* )(
du∂iˇãd
[
j
]?"*":"")

964 
ã°_i4
:

965 
	`DBG
–<< 
j
 << " : " << 
vÆues_i4
[j]

966 << " /\t" << 
s‹ãd
[
j
]

967 << " :\t" << 
vÆues_i4
[
s‹ãd
[
j
]]

968 << (* )(
du∂iˇãd
[
j
]?"*":"")

972 
ã°_u8
:

973 
	`DBG
–<< 
j
 << " : " << 
vÆues_u8
[j]

974 << " /\t" << 
s‹ãd
[
j
]

975 << " :\t" << 
vÆues_u8
[
s‹ãd
[
j
]]

976 << (* )(
du∂iˇãd
[
j
]?"*":"")

980 
ã°_i8
:

981 
	`DBG
–<< 
j
 << " : " << 
vÆues_i8
[j]

982 << " /\t" << 
s‹ãd
[
j
]

983 << " :\t" << 
vÆues_i8
[
s‹ãd
[
j
]]

984 << (* )(
du∂iˇãd
[
j
]?"*":"")

988 
ã°_f4
:

989 
	`DBG
–<< 
j
 << " : " << 
vÆues_f4
[j]

990 << " /\t" << 
s‹ãd
[
j
]

991 << " :\t" << 
vÆues_f4
[
s‹ãd
[
j
]]

992 << (* )(
du∂iˇãd
[
j
]?"*":"")

996 
ã°_f8
:

997 
	`DBG
–<< 
j
 << " : " << 
vÆues_f8
[j]

998 << " /\t" << 
s‹ãd
[
j
]

999 << " :\t" << 
vÆues_f8
[
s‹ãd
[
j
]]

1000 << (* )(
du∂iˇãd
[
j
]?"*":"")

1004 
ã°_b1
:

1005 
ã°_b23
:

1006 
ã°_bœrge
:

1007 
ã°_bv
:

1008 #ifde‡
W_TRACE


1010 
vec_t
 
	`tm∑
(
vÆues_b
[
j
], 
	`°æí
(values_b[j]));

1011 
vec_t
 
	`tmpb
(
vÆues_b
[
s‹ãd
[
j
]],

1012 
	`°æí
(
vÆues_b
[
s‹ãd
[
j
]]));

1013 
	`DBG
–<< 
j
 << " : " << 
tm∑


1014 << " /\t" << 
s‹ãd
[
j
]

1015 << " :\t" << 
tmpb


1016 << (* )(
du∂iˇãd
[
j
]?"*":"")

1023 
ã°_•©ül
:

1024 : 
	`w_as£π1
(0);

1031 
j
=0; j<
n
; j++) {

1032 
ªvî£
[
s‹ãd
[
j
]] = j;

1035 
j
=0; j<
n
; j++) {

1036 
	`w_as£π3
(
s‹ãd
[
ªvî£
[
j
]] == j);

1039 i‡(
löked
.
vîbo£_Êag
) {

1040 
˚º
 <<" found " << 
du∂iˇãs
 << " duplicates inÅhe data set"

1041 << 
ídl
;

1043 
	`DBG
–<<" found " << 
du∂iˇãs
 << " duplicates inÅhe data set");

1050 
	`DO
–
sm
->
	`¸óã_ödex
(
vid
,

1051 (
du∂iˇãs
==0)?
sm
->
t_uni_båì
:sm->
t_båì
,

1052 
ss_m
::
t_ªguœr
, 
keyty≥
, 
buûd_cc
, 
°id
) );

1053 
	`DBG
(<<"¸óãd st‹ê" << 
°id
);

1063 
key
.
	`ª£t
();

1064 
t
) {

1065 
ã°_i1
:

1066 
ã°_u1
:

1067 
key
.
	`put
(&
i1
, (
kÀn
 = (i1)));

1070 
ã°_i2
:

1071 
ã°_u2
:

1072 
key
.
	`put
(&
i2
, (
kÀn
 = (i2)));

1075 
ã°_u4
:

1076 
ã°_i4
:

1077 
key
.
	`put
(&
i4
, (
kÀn
 = (i4)));

1080 
ã°_u8
:

1081 
ã°_i8
:

1082 
key
.
	`put
(&
i8
, (
kÀn
 = (i8)));

1085 
ã°_f4
:

1086 
key
.
	`put
(&
f4
, (
kÀn
 = (f4)));

1089 
ã°_f8
:

1090 
key
.
	`put
(&
f8
, (
kÀn
 = (f8)));

1093 
ã°_b23
:

1094 
ã°_bœrge
:

1095 
ã°_b1
:

1096 
ã°_bv
:

1101 
ã°_•©ül
:

1102 : 
	`w_as£π1
(0);

1104 
	`w_as£π1
(
key
.
	`size
(Ë=
kÀn
);

1107 
ñemvÆue
;

1108 
ñ
.
	`ª£t
();

1109 
ñ
.
	`put
((*)&
ñemvÆue
, (elemvalue));

1115 
j
=0;

1116 
i
 = 
low
; i <
high
 && !
rc
.
	`is_îr‹
(); i++, 
j
++) {

1118 
	`w_as£π3
(
	`NORMALIZE
(
i
Ë>0 && NORMALIZE(iË<
n
);

1119 
ñemvÆue
 = 
ªvî£
[
	`NORMALIZE
(
i
)];

1121 if(
vÆues_i1
Ë
i1
 = vÆues_i1[
	`NORMALIZE
(
i
)];

1122 if(
vÆues_i2
Ë
i2
 = vÆues_i2[
	`NORMALIZE
(
i
)];

1123 if(
vÆues_i4
Ë
i4
 = vÆues_i4[
	`NORMALIZE
(
i
)];

1124 if(
vÆues_i8
Ë
i8
 = vÆues_i8[
	`NORMALIZE
(
i
)];

1125 if(
vÆues_f4
Ë
f4
 = vÆues_f4[
	`NORMALIZE
(
i
)];

1126 if(
vÆues_f8
Ë
f8
 = vÆues_f8[
	`NORMALIZE
(
i
)];

1127 if(
vÆues_b
) {

1128 
b
 = 
vÆues_b
[
	`NORMALIZE
(
i
)];

1130 
	`w_as£π3
(
b
);

1131 
	`w_as£π3
(
	`iß um
(*
b
));

1133 
key
.
	`ª£t
().
	`put
(
b
, (
kÀn
 = 
	`°æí
(b)));

1134 
	`w_as£π3
(
key
.
	`size
(Ë< 
LARGEKEYSTRING
);

1135 
	`w_as£π3
(
kÀn
 < 
LARGEKEYSTRING
);

1136 
	`w_as£π3
(
kÀn
 =
key
.
	`size
());

1139 
	`DBG
–<< "ö£πög " << 
keyty≥
 <<

1140 " key[" << 
i
 << "] : "

1147 << 
b
 << ";"

1148 << "ÉÀm=" << 
ñemvÆue


1149 << 
ídl


1150 << " kÀ¿" << 
kÀn


1151 << " key.size()=" << 
key
.
	`size
()

1152 << "ÉÀ¿" << 
ñí


1153 << "Él.size()=" << 
ñ
.
	`size
()

1154 << 
ídl


1156 #ifde‡
W_DEBUG


1157 if(
vÆues_b
Ë
	`w_as£π3
(
	`iß um
(*
b
));

1159 i‡(
löked
.
vîbo£_Êag
) {

1160 
˚º
 << "ö£πög " << 
keyty≥
 <<

1161 " key[" << 
i
 << "] : "

1162 << (
u_ch¨
)
i1
 << ","

1163 << 
i2
 << ","

1164 << 
i4
 << ","

1165 << 
i8
 << ","

1166 << 
f4
 << ","

1167 << 
f8
 << ","

1168 << 
b
 << ";ÉÀm=" << 
ñemvÆue


1169 << 
ídl


1170 << " kÀ¿" << 
kÀn


1171 << " key.size()=" << 
key
.
	`size
()

1172 << "ÉÀ¿" << 
ñí


1173 << "Él.size()=" << 
ñ
.
	`size
() << " "

1174 << 
ídl
;

1176 
	`w_as£π3
(
key
.
	`size
() > 0);

1178 
rc
 = 
sm
->
	`¸óã_assoc
–
°id
, 
key
, 
ñ
);

1180 #i‡
W_DEBUG_LEVEL
 > 2

1181 i‡(
rc
.
	`ª£t
().
	`is_îr‹
()) {

1182 
˚º
 << "ö£πög " << 
keyty≥
 <<

1183 " key[" << 
i
 << "] : "

1184 << (
u_ch¨
)
i1
 << ","

1185 << 
i2
 << ","

1186 << 
i4
 << ","

1187 << 
i8
 << ","

1188 << 
f4
 << ","

1189 << 
f8
 << ","

1190 << 
b
 << ";ÉÀm=" << 
ñemvÆue


1191 << 
ídl


1192 << " kÀ¿" << 
kÀn


1193 << " key.size()=" << 
key
.
	`size
()

1194 << "ÉÀ¿" << 
ñí


1195 << "Él.size()=" << 
ñ
.
	`size
() << " "

1196 << 
ídl
;

1197 
˚º
 << "Dum∞o‡ödexá·î in£π:" << 
ídl
;

1198 
	`DO
–
sm
->
	`¥öt_ödex
(
°id
) );

1202 i‡(
rc
.
	`is_îr‹
()) {

1203 
˚º
 << 
	`RC_AUGMENT
(
rc
Ë<<
ídl
;

1210 
Áûuª
;

1213 
	`DBG
(<<"Insertions done.");

1214 i‡(
löked
.
vîbo£_Êag
) {

1215 
	`DO
–
sm
->
	`¥öt_ödex
(
°id
) );

1226 
fú°
=0, 
œ°
=0;

1229 
fú°_i1
=0, 
œ°_i1
=0;

1230 
fú°_i2
=0, 
œ°_i2
=0;

1231 
fú°_i4
=0, 
œ°_i4
=0;

1232 
w_ba£_t
::
öt8_t
 
fú°_i8
=0, 
œ°_i8
=0;

1233 
fú°_f4
=0.0, 
œ°_f4
=0.0;

1234 
fú°_f8
=0.0, 
œ°_f8
=0.0;

1235 c⁄° *
fú°_b
=0, *
œ°_b
=0;

1237 
vec_t
 
fú°_vec
;

1238 
vec_t
 
œ°_vec
;

1240 
sˇn_ödex_i
::
cmp_t
 
›1
, 
›2
;

1241 
œ°_ã°
=15;

1245 
Àn
=0;

1246 
t
) {

1247 
ã°_u1
:

1248 
ã°_i1
:

1249 
fú°_vec
.
	`put
(&
fú°_i1
, (first_i1));

1250 
œ°_vec
.
	`put
(&
œ°_i1
, (last_i1));

1253 
ã°_u2
:

1254 
ã°_i2
:

1255 
fú°_vec
.
	`put
(&
fú°_i2
, (first_i2));

1256 
œ°_vec
.
	`put
(&
œ°_i2
, (last_i2));

1258 
ã°_u4
:

1259 
ã°_i4
:

1260 
fú°_vec
.
	`put
(&
fú°_i4
, (first_i4));

1261 
œ°_vec
.
	`put
(&
œ°_i4
, (last_i4));

1263 
ã°_u8
:

1264 
ã°_i8
:

1265 
fú°_vec
.
	`put
(&
fú°_i8
, (first_i8));

1266 
œ°_vec
.
	`put
(&
œ°_i8
, (last_i8));

1268 
ã°_f4
:

1269 
fú°_vec
.
	`put
(&
fú°_f4
, (first_f4));

1270 
œ°_vec
.
	`put
(&
œ°_f4
, (last_f4));

1272 
ã°_f8
:

1273 
fú°_vec
.
	`put
(&
fú°_f8
, (first_f8));

1274 
œ°_vec
.
	`put
(&
œ°_f8
, (last_f8));

1277 
ã°_b1
:

1278 
Àn
 = 1;

1279 
	`w_as£π1
(
	`°æí
(
b
)==1);

1280 
ã°_b23
:

1281 if(
t
==
ã°_b23
) {

1282 
	`w_as£π1
(
	`°æí
(
b
)==23);

1284 
ã°_bœrge
:

1285 
ã°_bv
:

1286 
Àn
 = 
	`°æí
(
b
);

1287 
	`w_as£π1
(
Àn
 < 
LARGEKEYSTRING
);

1294 
fú°_vec
.
	`put
(
fú°_b
, 
Àn
);

1295 
œ°_vec
.
	`put
(
œ°_b
, 
Àn
);

1298 
ã°_•©ül
:

1299 : 
	`w_as£π1
(0);

1303 
	`w_as£π3
(
fú°_vec
.
	`size
(Ë=
kÀn
);

1304 
	`w_as£π3
(
œ°_vec
.
	`size
(Ë=
kÀn
);

1307 
bounds_£t
 = 0; bounds_£à<
œ°_ã°
; bounds_set++) {

1308 
	`DBG
(<<"bounds_£à" << 
bounds_£t
);

1309 
bounds_£t
) {

1311 
fú°
 = 
low
;

1312 
œ°
 = 
high
;

1315 
fú°
 = 
low
;

1316 
œ°
 = 
low
/2;

1319 
fú°
 = 
low
;

1320 
œ°
 = 
lowp1
;

1323 
fú°
 = 
low
;

1324 
œ°
 = 
lowp2
;

1327 
fú°
 = 
lowp1
;

1328 
œ°
 = 
lowp2
;

1331 
fú°
 = 
low
;

1332 
œ°
 = 
zîo
;

1338 
fú°
 = 
low
;

1339 
œ°
 = 
low
;

1343 
fú°
 = 
high
/2;

1344 
œ°
 = 
high
;

1347 
fú°
 = 
highm1
;

1348 
œ°
 = 
high
;

1351 
fú°
 = 
highm2
;

1352 
œ°
 = 
high
;

1355 
fú°
 = 
high
;

1356 
œ°
 = 
high
;

1359 
fú°
 = 
zîo
;

1360 
œ°
 = 
high
;

1363 
fú°
 = 
zîo
;

1364 
œ°
 = 
zîo
;

1368 
fú°
 = 
low
-1;

1369 
œ°
 = 
high
;

1372 
fú°
 = 
low
;

1374 
œ°
 = 
high
+1;

1378 
fú°
 = 
low
-10;

1380 
œ°
 = 
high
+100;

1383 
	`ab‹t
();

1388 
fú°
 > 
low
 && 
du∂iˇãd
[first-1] ) first--;

1389 
œ°
 < 
high
 && 
du∂iˇãd
[last])Üast++;

1391 i‡(
löked
.
vîbo£_Êag
) {

1392 
˚º
 << "SCAN# " <<
bounds_£t
 << 
ídl
;

1394 
	`DBG
(<< "SCAN# " <<
bounds_£t
 );

1395 
sˇn_ty≥
 = 0; scan_type <= 8; scan_type++) {

1396 
ex≥˘ed
 = 0;

1397 
cc
 = 
buûd_cc
;

1410 
sˇn_ty≥
) {

1412 
›1
 = 
sˇn_fûe_i
::
ge
;

1413 
›2
 = 
sˇn_fûe_i
::
À
;

1414 
ex≥˘ed
 = (
œ°
 - 
fú°
) + 1;

1415 if(
ex≥˘ed
 < 0)Éxpected = 0;

1418 
›1
 = 
sˇn_fûe_i
::
gt
;

1419 
›2
 = 
sˇn_fûe_i
::
À
;

1420 
ex≥˘ed
 = 
œ°
 - 
fú°
;

1421 if(
ex≥˘ed
 < 0)Éxpected = 0;

1424 
›1
 = 
sˇn_fûe_i
::
ge
;

1425 
›2
 = 
sˇn_fûe_i
::
…
;

1426 
ex≥˘ed
 = 
œ°
 - 
fú°
;

1427 if(
ex≥˘ed
 < 0)Éxpected = 0;

1430 
›1
 = 
sˇn_fûe_i
::
gt
;

1431 
›2
 = 
sˇn_fûe_i
::
…
;

1432 
ex≥˘ed
 = (
œ°
 - 
fú°
) - 1;

1433 if(
ex≥˘ed
 < 0)Éxpected = 0;

1436 
›1
 = 
sˇn_fûe_i
::
ge
;

1437 
›2
 = 
sˇn_fûe_i
::
eq
;

1438 
ex≥˘ed
 = (
œ°
 >
fú°
) ? 1 : 0;

1441 
›1
 = 
sˇn_fûe_i
::
gt
;

1442 
›2
 = 
sˇn_fûe_i
::
eq
;

1443 
ex≥˘ed
 = (
œ°
 > 
fú°
) ? 1 : 0;

1446 
›1
 = 
sˇn_fûe_i
::
eq
;

1447 
›2
 = 
sˇn_fûe_i
::
À
;

1448 
ex≥˘ed
 = (
œ°
 >
fú°
) ? 1 : 0;

1451 
›1
 = 
sˇn_fûe_i
::
eq
;

1452 
›2
 = 
sˇn_fûe_i
::
…
;

1453 
ex≥˘ed
 = (
œ°
 > 
fú°
) ? 1 : 0;

1456 
›1
 = 
sˇn_fûe_i
::
eq
;

1457 
›2
 = 
sˇn_fûe_i
::
eq
;

1458 
cc
 = 
ss_m
::
t_cc_kvl
;

1459 
ex≥˘ed
 = (
œ°
 =
fú°
) ? 1 : -1;

1464 
	`ab‹t
();

1466 if(
ex≥˘ed
 > 0) {

1467 
›1
) {

1468 
sˇn_fûe_i
::
ge
:

1469 if((
fú°
<
low
Ë&& 
›2
 !
sˇn_fûe_i
::
eq
)

1470 
ex≥˘ed
 -(
low
-
fú°
);

1472 
sˇn_fûe_i
::
gt
:

1474 
sˇn_fûe_i
::
eq
:

1475 if(
fú°
<
low
Ë
ex≥˘ed
 = 0;

1477 
sˇn_fûe_i
::
À
:

1478 
sˇn_fûe_i
::
…
:

1482 
›2
) {

1483 
sˇn_fûe_i
::
À
:

1484 if((
œ°
>
high
Ë&& 
›1
 !
sˇn_fûe_i
::
eq
)

1485 
ex≥˘ed
 -(
œ°
-
high
);

1487 
sˇn_fûe_i
::
…
:

1489 
sˇn_fûe_i
::
eq
:

1490 if(
œ°
>
high
Ë
ex≥˘ed
 = 0;

1492 
sˇn_fûe_i
::
ge
:

1493 
sˇn_fûe_i
::
gt
:

1499 i‡(
löked
.
vîbo£_Êag
) {

1500 
˚º
 << " scanning "

1501 << 
	`cvt2°rög
(
›1
Ë<<" " << 
fú°


1503 << 
	`cvt2°rög
(
›2
Ë<<" " << 
œ°
 <<
ídl
;

1504 
˚º
 << "Éx≥˘ " << 
ex≥˘ed
 << 
ídl
;

1506 
	`DBG
( << " scanning "

1507 << 
	`cvt2°rög
(
›1
Ë<<" " << 
fú°


1509 << 
	`cvt2°rög
(
›2
Ë<<" " << 
œ°


1510 << "Éx≥˘ " << 
ex≥˘ed
 );

1519 
fú°_adju°
 = (
fú°
 < 
low
)? -1 : 0;

1520 
fú°_ödex
 = (
fú°
 < 
low
)?Üow : first;

1521 
œ°_adju°
 = (
œ°
 > 
high
) ? 1 : 0;

1522 
œ°_ödex
 = (
œ°
 > 
high
) ? high :Üast;

1524 if(
fú°_adju°
 == 0) {

1525 
	`w_as£π3
(
	`NORMALIZE
(
fú°
Ë>0 && NORMALIZE(fú°Ë<
n
);

1527 if(
œ°_adju°
 == 0) {

1528 
	`w_as£π3
(
	`NORMALIZE
(
œ°
Ë>0 && NORMALIZE÷a°Ë<
n
);

1530 
t
) {

1531 
ã°_u1
:

1532 
ã°_i1
:

1533 
fú°_i1
 = 
fú°_adju°
 +

1534 
vÆues_i1
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1535 
œ°_i1
 =

1536 
vÆues_i1
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1537 + 
œ°_adju°
;

1538 i‡(
löked
.
vîbo£_Êag
) {

1539 
˚º
 << " valuesÑange: "

1540 << 
	`cvt2°rög
(
›1
) <<" "

1541 << (
u_ch¨
Ë
fú°_i1
 << " "

1542 << 
	`cvt2°rög
(
›2
) <<" "

1543 << (
u_ch¨
Ë
œ°_i1
 <<
ídl
;

1545 if(
fú°
 < 
low
 && 
t
 =
ã°_u1
) {

1548 
ex≥˘ed
 = -2;

1555 if(
fú°_i1
 >=

1556 
vÆues_i1
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1557 
ex≥˘ed
 = -2;

1559 if–
œ°_i1
 <=

1560 
vÆues_i1
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1561 
ex≥˘ed
 = -2;

1565 
ã°_u2
:

1566 
ã°_i2
:

1567 
fú°_i2
 = 
fú°_adju°
 +

1568 
vÆues_i2
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1569 
œ°_i2
 =

1570 
vÆues_i2
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1571 + 
œ°_adju°
;

1572 i‡(
löked
.
vîbo£_Êag
) {

1573 
˚º
 << " valuesÑange: "

1574 << 
	`cvt2°rög
(
›1
) <<" "

1575 << 
fú°_i2
 << " "

1576 << 
	`cvt2°rög
(
›2
) <<" "

1577 << 
œ°_i2
 <<
ídl
;

1579 if(
t
 =
ã°_u2
 && 
fú°
 < 
low
) {

1582 
ex≥˘ed
 = -2;

1589 if(
fú°_i2
 >=

1590 
vÆues_i2
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1591 
ex≥˘ed
 = -2;

1593 if–
œ°_i2
 <=

1594 
vÆues_i2
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1595 
ex≥˘ed
 = -2;

1599 
ã°_u4
:

1600 
ã°_i4
:

1601 
fú°_i4
 = 
fú°_adju°
 +

1602 
vÆues_i4
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1603 
œ°_i4
 =

1604 
vÆues_i4
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1605 + 
œ°_adju°
;

1606 i‡(
löked
.
vîbo£_Êag
) {

1607 
˚º
 << " valuesÑange: "

1608 << 
	`cvt2°rög
(
›1
) <<" "

1609 << 
fú°_i4
 << " "

1610 << 
	`cvt2°rög
(
›2
) <<" "

1611 << 
œ°_i4
 <<
ídl
;

1613 if(
fú°
 < 
low
 && 
t
 =
ã°_u4
) {

1616 
ex≥˘ed
 = -2;

1623 if(
fú°_i4
 >=

1624 
vÆues_i4
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1625 
ex≥˘ed
 = -2;

1627 if–
œ°_i4
 <=

1628 
vÆues_i4
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1629 
ex≥˘ed
 = -2;

1633 
ã°_u8
:

1634 
ã°_i8
:

1635 
fú°_i8
 = 
fú°_adju°
 +

1636 
vÆues_i8
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1637 
œ°_i8
 =

1638 
vÆues_i8
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1639 + 
œ°_adju°
;

1640 i‡(
löked
.
vîbo£_Êag
) {

1641 
˚º
 << " valuesÑange: "

1642 << 
	`cvt2°rög
(
›1
) <<" "

1643 << 
fú°_i8
 << " "

1644 << 
	`cvt2°rög
(
›2
) <<" "

1645 << 
œ°_i8
 <<
ídl
;

1647 if(
fú°
 < 
low
 && 
t
 =
ã°_u8
) {

1650 
ex≥˘ed
 = -2;

1657 if(
fú°_i8
 >=

1658 
vÆues_i8
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1659 
ex≥˘ed
 = -2;

1661 if–
œ°_i8
 <=

1662 
vÆues_i8
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1663 
ex≥˘ed
 = -2;

1667 
ã°_f4
:

1668 
fú°_f4
 = 
fú°_adju°
 +

1669 
vÆues_f4
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1670 
œ°_f4
 = 
vÆues_f4
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1671 + 
œ°_adju°
;

1672 i‡(
löked
.
vîbo£_Êag
) {

1673 
˚º
 << " valuesÑange: "

1674 << 
	`cvt2°rög
(
›1
) <<" "

1675 << 
fú°_f4
 << " "

1676 << 
	`cvt2°rög
(
›2
) <<" "

1677 << 
œ°_f4
 <<
ídl
;

1684 if(
fú°_f4
 >=

1685 
vÆues_f4
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1686 
ex≥˘ed
 = -2;

1688 if–
œ°_f4
 <=

1689 
vÆues_f4
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1690 
ex≥˘ed
 = -2;

1694 
ã°_f8
:

1695 
fú°_f8
 = 
fú°_adju°
 +

1696 
vÆues_f8
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]];

1697 
œ°_f8
 = 
vÆues_f8
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]]

1698 + 
œ°_adju°
;

1699 i‡(
löked
.
vîbo£_Êag
) {

1700 
˚º
 << " valuesÑange: "

1701 << 
	`cvt2°rög
(
›1
) <<" "

1702 << 
fú°_f8
 << " "

1703 << 
	`cvt2°rög
(
›2
) <<" "

1704 << 
œ°_f8
 <<
ídl
;

1711 if(
fú°_f8
 >=

1712 
vÆues_f8
[
s‹ãd
[
	`NORMALIZE
(
fú°_ödex
)]]) {

1713 
ex≥˘ed
 = -2;

1715 if–
œ°_f8
 <=

1716 
vÆues_f8
[
s‹ãd
[
	`NORMALIZE
(
œ°_ödex
)]] ) {

1717 
ex≥˘ed
 = -2;

1721 
ã°_b1
:

1722 
ã°_b23
:

1723 
ã°_bœrge
:

1724 
ã°_bv
:

1725 
fú°_b
 = 
fú°_adju°
 ? "" :

1726 
vÆues_b
[
s‹ãd
[
	`NORMALIZE
(
fú°
)]];

1727 #ifde‡
W_DEBUG


1728 
	`w_as£π3
(
fú°_b
);

1729 if(!
fú°_adju°
Ë
	`w_as£π3
(
	`iß um
(*
fú°_b
) );

1732 
œ°_b
 = 
œ°_adju°
? 
LASTSTRING
 :

1733 
vÆues_b
[
s‹ãd
[
	`NORMALIZE
(
œ°
)]];

1734 
	`w_as£π3
(
œ°_b
);

1736 if(
œ°
 > 
high
) {

1737 i‡(
löked
.
vîbo£_Êag
) {

1738 
˚º
 << " valuesÑange: "

1739 << 
	`cvt2°rög
(
›1
) <<" "

1740 << 
fú°_b
 << " "

1741 << 
	`cvt2°rög
(
›2
) <<" "

1742 << "<u≈röèbÀ:œ°+1>" <<
ídl
;

1744 
	`DBG
(<< " valuesÑange: "

1745 << 
	`cvt2°rög
(
›1
) <<" "

1746 << 
fú°_b
 << " "

1747 << 
	`cvt2°rög
(
›2
) <<" "

1750 i‡(
löked
.
vîbo£_Êag
) {

1751 
˚º
 << " valuesÑange: "

1752 << 
	`cvt2°rög
(
›1
) <<" "

1753 << 
fú°_b
 << " "

1754 << 
	`cvt2°rög
(
›2
) <<" "

1755 << 
œ°_b
 <<
ídl
;

1757 
	`DBG
(<< " valuesÑange: "

1758 << 
	`cvt2°rög
(
›1
) <<" "

1759 << 
fú°_b
 << " "

1760 << 
	`cvt2°rög
(
›2
) <<" "

1761 << 
œ°_b
 );

1766 if(
fú°_adju°
) {

1767 
	`w_as£π3
(
	`°æí
(
fú°_b
) == 0);

1769 
	`w_as£π3
(
	`°æí
(
fú°_b
) > 0);

1771 
fú°_vec
.
	`ª£t
().
	`put
(
fú°_b
, 
	`°æí
(first_b));

1773 
	`w_as£π3
(
	`°æí
(
œ°_b
) > 0);

1774 
œ°_vec
.
	`ª£t
().
	`put
(
œ°_b
, 
	`°æí
(last_b));

1776 if(
fú°
 < 
low
 && 
t
 =
ã°_b1
) {

1779 
ex≥˘ed
 = -2;

1788 
ã°_•©ül
:

1789 : 
	`w_as£π1
(0);

1798 
sˇn_•a˚
[(
sˇn_ödex_i
)];

1799 
sˇn_ödex_i
* 
sˇn
 = 0;

1801 
	`DBG
(<<"°id=" << 
°id
);

1802 
sˇn
 = 
	`√w
 (
sˇn_•a˚
Ë
	`sˇn_ödex_i
(
°id
,

1803 
›1
, 
fú°_vec
,

1804 
›2
, 
œ°_vec
, 
Ál£
, 
cc
);

1807 if(
sˇn
 !0 && sˇn->
	`îr‹_code
().
	`is_îr‹
()) {

1808 if(
ex≥˘ed
 < 0 ) {

1810 
sˇn
->~
	`sˇn_ödex_i
();

1814 
˚º
 << " unexpectedÉrror: " <<

1815 
sˇn
->
	`îr‹_code
()

1816 << 
ídl
;

1817 
	`w_as£π3
(0);

1823 
boﬁ
 
eof
=
Ál£
;

1825 
num_sˇ¬ed
 = 0;

1826 
tmp
=
fú°
;

1829 if(
fú°
<
low
) {

1830 
tmp
 = 
low
;

1832 if(
›1
 =
sˇn_fûe_i
::
gt
 ) {

1833 
du∂iˇãd
[
	`NORMALIZE
(
tmp
)]) {

1834 
	`DBG
(<<"ö¸emítög du∞°¨tögÖœ˚ " << 
tmp
);

1835 
tmp
++;

1836 if(
›2
 !
sˇn_fûe_i
::
eq
 ) {

1837 
ex≥˘ed
--;

1840 
	`DBG
(<<"ö¸emítög sèπögÖœ˚ beˇu£ GT " << 
tmp
);

1841 
tmp
++;

1846 if(
vÆues_b
) {

1847 
key
.
	`ª£t
().
	`put
(
key_buf„r
, 
LARGEKEYSTRING
);

1848 
kÀn
 = 
LARGEKEYSTRING
;

1852 
i
 = 
tmp
;

1853 (!(
rc
 = 
sˇn
->
	`√xt
(
eof
)).
	`is_îr‹
() && !eof) ;

1854 
i
++) {

1857 
ñemvÆue
=-99999;

1859 
ñ
.
	`ª£t
().
	`put
(&
ñemvÆue
, (elemvalue));

1862 
i1
 = 0; 
i2
 = 0; 
i4
 = 0; 
i8
 = 0; 
f4
 = -0.0; 
f8
 = -0.0;

1863 if(
key_buf„r
) {

1864 
	`mem£t
(
key_buf„r
, '\0', 
LARGEKEYSTRING
);

1867 
smsize_t
 
_kÀn
, 
_ñí
;

1868 
	`DO_GOTO
–
sˇn
->
	`cuº
(&
key
, 
_kÀn
, &
ñ
, 
_ñí
));

1870 if(
key_buf„r
Ë{ 
	`w_as£π3
(
_kÀn
 <
kÀn
); }

1871 { 
	`w_as£π3
(
_kÀn
 =
kÀn
); }

1873 
	`w_as£π3
(
_ñí
 =
ñí
);

1875 i‡(
löked
.
vîbo£_Êag
) {

1876 
˚º
 << "ªåõved iãm #" << 
i


1877 << "ÉÀmíà" << 
ñemvÆue


1880 
t
) {

1881 
ã°_u1
:

1882 
ã°_i1
:

1883 
˚º
 << (
u_ch¨
Ë
i1
 << 
ídl
;

1886 
ã°_u2
:

1887 
ã°_i2
:

1888 
˚º
 << 
i2
 << 
ídl
;

1891 
ã°_u4
:

1892 
˚º
 << (Ë
i4
 << 
ídl
;

1894 
ã°_i4
:

1895 
˚º
 << 
i4
 << 
ídl
;

1898 
ã°_u8
:

1899 
˚º
 << (
w_ba£_t
::
uöt8_t
Ë
i8
 << 
ídl
;

1901 
ã°_i8
:

1902 
˚º
 << 
i8
 << 
ídl
;

1905 
ã°_f4
:

1906 
˚º
 << 
f4
 << 
ídl
;

1909 
ã°_f8
:

1910 
˚º
 << 
f8
 << 
ídl
;

1913 
ã°_b1
:

1914 
ã°_b23
:

1915 
ã°_bœrge
:

1916 
ã°_bv
:

1917 
˚º
 << 
key_buf„r
 << 
ídl
;

1920 
ã°_•©ül
:

1921 : 
	`w_as£π1
(0);

1924 
num_sˇ¬ed
++;

1930 
	`DBG
(<<"ò" << 
i
 << "Ç " << 
n


1931 <<" NORMALIZE(iË" << 
	`NORMALIZE
(
i
)

1932 <<"ÉÀmvÆuê" << 
ñemvÆue


1935 
	#DONTCARE
 -999999

	)

1936 
wh©
=
i
;

1937 if(
›2
==
sˇn_fûe_i
::
eq
) {

1938 
fú°_œ°
 = (
œ°
 > 
high
 ? high :Üast) ;

1939  
fú°_œ°
 > 
low
 &&

1940 
du∂iˇãd
[
fú°_œ°
-1]) {

1941 
	`w_as£π3
(
fú°_œ°
 >= 1);

1942 
	`w_as£π3
(
fú°_œ°
 <
high
);

1943 
fú°_œ°
--;

1945 if(
wh©
 < 
fú°_œ°
) what = first_last;

1946 
i
 = 
wh©
;

1948 } if(
›1
==
sˇn_fûe_i
::
eq
) {

1950 
œ°_fú°
 = 
fú°
 < 
low
?Üow : first;

1951 
œ°_fú°
 < 
high
 &&

1952 
du∂iˇãd
[
œ°_fú°
]) {

1953 
œ°_fú°
++;

1955 if(
wh©
 > 
œ°_fú°
) what =Üast_first;

1957 
i
 = 
wh©
;

1959 if(
fú°
 >
low
 && 
œ°
 <
high
) {

1960 
	`w_as£π3
((
	`NORMALIZE
(
i
) >= 0)

1961 && (
	`NORMALIZE
(
i
Ë< 
n
));

1963 i‡(
löked
.
vîbo£_Êag
) {

1964 
˚º
<< 
bounds_£t


1966 << " i=" << 
i


1967 << "Üow=" << 
low


1968 << " high=" << 
high


1969 <<
ídl
;

1970 
˚º
 << "IN SCAN# " <<
bounds_£t


1972 << 
	`cvt2°rög
(
›1
Ë<<" " << 
fú°


1974 << 
	`cvt2°rög
(
›2
Ë<<" " << 
œ°


1975 << 
ídl
;

1977 
	`•ecül
();

1978 
	`w_as£π1
(
bounds_£t
 >= 14);

1979 
wh©
 = 
DONTCARE
;

1988 
s‹t_is_°abÀ
 = 
Ál£
;

1990 if(
wh©
 !
DONTCARE
 && 
ex≥˘ed
 != -2) {

1991 i‡(
ñemvÆue
 !
	`NORMALIZE
(
wh©
)) {

1992 if(
s‹t_is_°abÀ
) {

1993 
˚º
 << "WARNING!****BTREE SORT IS NOT STABLE" <<
ídl
;

1998 
f
 = 
wh©
;

1999 if(!
du∂iˇãd
[
f
]) f--;

2000 
du∂iˇãd
[
f
]) f--;

2001 
f
++;

2003 
	`w_as£π1
(
du∂iˇãd
[
f
]);

2004 
boﬁ
 
found
=
Ál£
;

2005 
du∂iˇãd
[
f
]) {

2006 if(
ñemvÆue
 =
	`NORMALIZE
(
f
)) {

2007 
	`DBG
(<<"ñemvÆuêfoundáà" << 
f
);

2008 
found
 = 
åue
;

2011 
f
++;

2013 if(
ñemvÆue
 =
	`NORMALIZE
(
f
)) {

2014 
	`DBG
(<<"ñemvÆuêfoundáà" << 
f
);

2015 
found
 = 
åue
;

2021 
	`w_as£π1
(
found
);

2031 
Àn
=0;

2032 
t
) {

2033 
ã°_i1
:

2034 
ã°_u1
:

2035 
	`DBG
(<<"i1=" <<(
u_ch¨
Ë
i1


2036 << "Éx≥˘ " << 
vÆues_i1
[
s‹ãd
[
ñemvÆue
]]);

2037 
	`w_as£π1
(
i1
 =
vÆues_i1
[
s‹ãd
[
ñemvÆue
]]);

2040 
ã°_i2
:

2041 
ã°_u2
:

2042 
	`DBG
(<<"i2=" <<
i2


2043 << "Éx≥˘ " << 
vÆues_i2
[
s‹ãd
[
ñemvÆue
]]);

2044 
	`w_as£π1
(
i2
 =
vÆues_i2
[
s‹ãd
[
ñemvÆue
]]);

2047 
ã°_u4
:

2048 
	`DBG
(<<"i4=" <<(Ë
i4


2050 << 
vÆues_u4
[
s‹ãd
[
ñemvÆue
]]);

2051 
	`w_as£π1
(
i4
 =
vÆues_i4
[
s‹ãd
[
ñemvÆue
]]);

2054 
ã°_i4
:

2055 
	`DBG
(<<"i4=" <<
i4


2057 << 
vÆues_i4
[
s‹ãd
[
ñemvÆue
]]);

2058 
	`w_as£π1
(
i4
 =
vÆues_i4
[
s‹ãd
[
ñemvÆue
]]);

2061 
ã°_u8
:

2062 
	`DBG
(<<"i8=" << (
w_ba£_t
::
uöt8_t
Ë
i8


2064 << 
vÆues_u8
[
s‹ãd
[
ñemvÆue
]]);

2065 
	`w_as£π1
(
i8
 =
vÆues_i8
[
s‹ãd
[
ñemvÆue
]]);

2068 
ã°_i8
:

2069 
	`DBG
(<<"i8=" <<
i8


2071 << 
vÆues_i8
[
s‹ãd
[
ñemvÆue
]]);

2072 
	`w_as£π1
(
i8
 =
vÆues_i8
[
s‹ãd
[
ñemvÆue
]]);

2075 
ã°_f4
:

2076 
	`DBG
(<<"f4=" <<
f4


2077 << "Éx≥˘ " << 
vÆues_f4
[
s‹ãd
[
ñemvÆue
]]);

2078 
	`w_as£π1
(
f4
 =
vÆues_f4
[
s‹ãd
[
ñemvÆue
]]);

2081 
ã°_f8
:

2082 
	`DBG
(<<"f8=" <<
f8


2083 << "Éx≥˘ " << 
vÆues_f8
[
s‹ãd
[
ñemvÆue
]]);

2084 
	`w_as£π1
(
f8
 =
vÆues_f8
[
s‹ãd
[
ñemvÆue
]]);

2087 
ã°_b1
:

2088 
Àn
=1;

2089 
ã°_b23
:

2090 if(!
Àn
)Üen=23;

2091 
ã°_bœrge
:

2092 
ã°_bv
:

2093 if(!
Àn
ËÀn=
LARGEKEYSTRING
;

2094 
	`DBG
(<<"b=" << 
key_buf„r


2095 << "Éx≥˘ " << 
vÆues_b
[
s‹ãd
[
ñemvÆue
]]);

2098 
ã°_•©ül
:

2099 : 
	`w_as£π1
(0);

2108 
	`DBG
(<<"Ñc" << 
rc
 << "Éof=" << 
eof
);

2109 
sˇn
->
	`föish
();

2110 
	`DO_GOTO
–
rc
 );

2112 if(
ex≥˘ed
>0) {

2113 
bound¨y
 ;

2114 
boﬁ
 
do_ö¸
=
Ál£
;

2115 if(
›1
==
sˇn_fûe_i
::
eq
) {

2116 
bound¨y
 = 
fú°
;

2118 
do_ö¸
 = 
åue
;

2119 } if(
›2
==
sˇn_fûe_i
::
eq
) {

2120 
bound¨y
 = 
œ°
;

2122 
do_ö¸
 = 
åue
;

2123 } if(
›2
==
sˇn_fûe_i
::
…
) {

2124 
bound¨y
 = (
œ°
>
high
)?high:last-1;

2130 
	`w_as£π3
(
›2
==
sˇn_fûe_i
::
À
);

2134 
bound¨y
 = (
œ°
>
high
)?high:last;

2135 
do_ö¸
 = 
åue
;

2137 if(
do_ö¸
) {

2140 
du∂iˇãd
[
	`NORMALIZE
(
bound¨y
)]) {

2141 
	`DBG
(<<"incrementing dup boundary "

2142 << 
bound¨y
);

2143 
bound¨y
++;

2144 
ex≥˘ed
++;

2149 
du∂iˇãd
[
	`NORMALIZE
(
bound¨y
)]

2150 && 
	`NORMALIZE
(
bound¨y
) > 0) {

2151 
	`DBG
(<<"decrementing dup boundary "

2152 << 
bound¨y
);

2153 
ex≥˘ed
--;

2154 
bound¨y
--;

2161 
bound¨y
++;

2163 
	`DBG
(<<"bound¨yÉnd†u∞© " << 
bound¨y
);

2165 if–
i
 < 
bound¨y
) {

2166 i‡(
löked
.
vîbo£_Êag
) {

2167 
˚º
 << "POSSIBLE PREMATURE EOF :Éo‡© " << 
i


2168 << "Éx≥˘edÉo‡© " << 
bound¨y
 << 
ídl
;

2169 
˚º
 << "IN SCAN# " <<
bounds_£t


2171 << 
	`cvt2°rög
(
›1
Ë<<" " << 
fú°


2173 << 
	`cvt2°rög
(
›2
Ë<<" " << 
œ°


2174 << 
ídl
;

2176 
	`possibÀ
();

2181 if–
ex≥˘ed
 >0 && 
num_sˇ¬ed
 !=Éxpected ) {

2182 i‡(
löked
.
vîbo£_Êag
) {

2183 
˚º


2184 << (*)(
du∂iˇãs
? "POSSIBLE " : "")

2186 << 
ex≥˘ed


2187 << " gŸ " << 
num_sˇ¬ed


2188 << " #du∂iˇãs" << 
du∂iˇãs


2189 << 
ídl
;

2190 
˚º
 << "IN SCAN# " <<
bounds_£t


2192 << 
	`cvt2°rög
(
›1
Ë<<" " << 
fú°


2194 << 
	`cvt2°rög
(
›2
Ë<<" " << 
œ°


2195 << 
ídl
;

2197 
	`possibÀ
();

2201 if(
ex≥˘ed
 == 0 ||

2202 (
du∂iˇãs
 =0 && 
ex≥˘ed
 >= 0)) {

2203 
	`w_as£π1
(
num_sˇ¬ed
 =
ex≥˘ed
);

2206 
sˇn
->~
	`sˇn_ödex_i
();

2212 
	`DBG
(<<"de°royög st‹ê" << 
°id
);

2213 
	`DO_GOTO
–
sm
->
	`de°roy_ödex
(
°id
) );

2216 if(
vÆues_i1
Ë{ 
dñëe
[] vÆues_i1; vÆues_i1=0; 
vÆues_u1
=0; }

2217 if(
vÆues_i2
Ë{ 
dñëe
[] vÆues_i2; vÆues_i2=0; 
vÆues_u2
=0; }

2218 if(
vÆues_i4
Ë{ 
dñëe
 [] vÆues_i4; vÆues_i4=0; 
vÆues_u4
=0; }

2219 if(
vÆues_i8
Ë{ 
dñëe
 [] vÆues_i8; vÆues_i8=0; 
vÆues_u8
=0; }

2220 if(
vÆues_f4
Ë{ 
dñëe
[] values_f4; values_f4=0; }

2221 if(
vÆues_f8
Ë{ 
dñëe
[] values_f8; values_f8=0; }

2222 if(
vÆues_b
) {

2223 
k
;

2224 
k
=0; k < 
n
; k++) {

2225 if(
vÆues_b
[
k
]Ë
dñëe
[] values_b[k];

2227 
dñëe
[] 
vÆues_b
; values_b=0;

2228 
dñëe
[] 
key_buf„r
;

2230  
TCL_OK
;

2232 
Áûuª
:

2233 
	`DBG
(<<"rc=" <<
rc
);

2234 if(
vÆues_i1
Ë{ 
dñëe
[] vÆues_i1; vÆues_i1=0; 
vÆues_u1
=0; }

2235 if(
vÆues_i2
Ë{ 
dñëe
[] vÆues_i2; vÆues_i2=0; 
vÆues_u2
=0; }

2236 if(
vÆues_i4
Ë{ 
dñëe
 [] vÆues_i4; vÆues_i4=0; 
vÆues_u4
=0; }

2237 if(
vÆues_i8
Ë{ 
dñëe
 [] vÆues_i8; vÆues_i8=0; 
vÆues_u8
=0; }

2238 if(
vÆues_f4
Ë{ 
dñëe
[] values_f4; values_f4=0; }

2239 if(
vÆues_f8
Ë{ 
dñëe
[] values_f8; values_f8=0; }

2240 if(
vÆues_b
) {

2241 
k
;

2242 
k
=0; k < 
n
; k++) {

2243 if(
vÆues_b
[
k
]Ë
dñëe
[] values_b[k];

2245 
dñëe
[] 
vÆues_b
; values_b=0;

2246 
dñëe
[] 
key_buf„r
;

2248  
TCL_ERROR
;

2249 
	}
}

2252 
	$t_ã°_öt_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2254 i‡(
	`check
(
ù
, "vidÇkeys", 
ac
, 3))

2255  
TCL_ERROR
;

2256 c⁄° 
n
 = 
	`©oi
(
av
[2]);

2257 
vid
 = 0;

2259 
vid
 = 
	`©oi
(
av
[1]);

2261 
e
;

2262 
e

	`_t_ã°_ty≥d_båì
(
ù
, 
vid
,

2263 
n
, "i4", 0);

2270 if–
e
 !
TCL_OK
) { É; }

2272  
e
;

2273 
	}
}

2276 
	$t_ã°_ty≥d_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2278 i‡(
	`check
(
ù
, "vidÇkey†ty≥ cc", 
ac
, 4, 5))

2279  
TCL_ERROR
;

2280 c⁄° 
n
 = 
	`©oi
(
av
[2]);

2281 
vid
 = 0;

2283 
vid
 = 
	`©oi
(
av
[1]);

2285  
	`_t_ã°_ty≥d_båì
(
ù
, 
vid
,

2286 
n
, 
av
[3],áv[4]);

2287 
	}
}

2290 
	$t_¸óã_ty≥d_hdr_body_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2297 i‡(
	`check
(
ù
, "fid hd∏ty≥Üí_höàd©®ty≥ [univî£]", 
ac
, 7, 8))

2298  
TCL_ERROR
;

2300 
fid_¨g
 = 1;

2301 
hdr_¨g
 = 2;

2302 
hdr_ty≥_¨g
 = 3;

2303 
Àn_höt_¨g
 = 4;

2304 
body_¨g
 = 5;

2305 
body_ty≥_¨g
 = 6;

2306 
univî£_¨g
 = 7;

2307 
ty≥d_båì_ã°
 
t
;

2308 
vec_t
 
hdr
, 
d©a
;

2309 
ty≥d_vÆue
 
vh
, 
vd
;

2310 
nbox_t
 
box
;

2312 c⁄° *
keydes¸
 = 
	`check_com¥ess_Êag
(
av
[
hdr_ty≥_¨g
]);

2313 
t
 = 
	`cvt2ty≥
(
keydes¸
);

2315 
t
) {

2316 
ã°_•©ül
:

2317 
box
.
	`put
(
av
[
hdr_¨g
]);

2318 if(
√ws‹t
) {

2319 
hdr
.
	`put
(
box
.
	`kvÆ
(), box.
	`kÀn
());

2321 
nbox_t
 
	`u
(
hdr_¨g
);

2322 if(
ac
 > 
univî£_¨g
) {

2323 
u
.
	`put
(
av
[
univî£_¨g
]);

2324 
hvÆ
 = 
box
.
	`hvÆue
(
u
);

2325 
hdr
.
	`put
(&
hvÆ
, (hval));

2327 
hdr
.
	`put
(
box
.
	`kvÆ
(), box.
	`kÀn
());

2332 
ã°_bv
:

2334 
hdr
.
	`put
(
av
[
hdr_¨g
], 
	`°æí
(av[hdr_arg])+1);

2337 
ã°_bœrge
:

2338 
˚º
 << "C™nŸ u£ bœrgêã° f‹ hdrs"<<
ídl
;

2339 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

2343 
	`cvt2ty≥d_vÆue
(
t
, 
av
[
hdr_¨g
], 
vh
);

2344 
hdr
.
	`put
(&
vh
.
_u
, vh.
_Àngth
);

2348 
nbox_t
 
box2
;

2350 *
°rbuf
 = 
√w
 [
STRINGMAX
];

2351 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
°rbuf
);

2353 
t
 = 
	`cvt2ty≥
(
av
[
body_ty≥_¨g
]);

2354 
t
) {

2355 
ã°_•©ül
:

2356 
box2
.
	`put
(
av
[
body_¨g
]);

2357 
d©a
.
	`put
(
box2
.
	`kvÆ
(), box2.
	`kÀn
());

2360 
ã°_bœrge
: {

2362 
size_t
 
s
 = 
	`°æí
(
av
[
body_¨g
]);

2363 
s
++;

2368 
	`mem£t
(
°rbuf
, 'Z', 
LARGESTRING
);

2369 
	`mem˝y
((
°rbuf
+
LARGESTRING
)-
s
, 
av
[
body_¨g
], s);

2370 
d©a
.
	`put
(
°rbuf
, 
LARGESTRING
);

2374 
ã°_b23
:

2375 
ã°_bv
:

2377 
d©a
.
	`put
(
av
[
body_¨g
], 
	`°æí
(av[body_arg])+1);

2381 
	`cvt2ty≥d_vÆue
(
t
, 
av
[
body_¨g
], 
vd
);

2382 
d©a
.
	`put
(&
vd
.
_u
, vd.
_Àngth
);

2387 
°id_t
 
°id
;

2388 
rid_t
 
rid
;

2390 
w_i°r°ªam
 
	`™⁄
(
av
[
fid_¨g
]);

2391 
™⁄
 >> 
°id
;

2392 
	`DO
–
sm
->
	`¸óã_ªc
(
°id
, 
hdr
,

2393 
	`obje˘size
(
av
[
Àn_höt_¨g
]), 
d©a
, 
rid
) );

2394 
	`w_ª£t_°r°ªam
(
t˛out
);

2395 
t˛out
 << 
rid
 << 
íds
;

2397 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2398 
	`w_ª£t_°r°ªam
(
t˛out
);

2399  
TCL_OK
;

2400 
	}
}

2403 
	$t_¸óã_ty≥d_hdr_ªc
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2408 i‡(
	`check
(
ù
, "fid hd∏Àn_höàd©®ty≥ [univî£]", 
ac
, 6, 7))

2409  
TCL_ERROR
;

2410 
fid_¨g
 = 1;

2411 
hdr_¨g
 = 2;

2412 
Àn_höt_¨g
 = 3;

2413 
body_¨g
 = 4;

2414 
body_ty≥_¨g
 = 5;

2415 
univî£_¨g
 = 6;

2418 
vec_t
 
hdr
, 
d©a
;

2421 
d©a
.
	`put
(
av
[
body_¨g
], 
	`°æí
(av[body_arg])+1);

2423 
ty≥d_vÆue
 
vh
;

2424 
nbox_t
 
box
;

2426 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
av
[
body_ty≥_¨g
]);

2428 
t
) {

2429 
ã°_•©ül
:

2430 
box
.
	`put
(
av
[
hdr_¨g
]);

2431 if(
√ws‹t
) {

2432 
hdr
.
	`put
(
box
.
	`kvÆ
(), box.
	`kÀn
());

2434 
nbox_t
 
	`u
(
hdr_¨g
);

2435 if(
ac
 > 
univî£_¨g
) {

2436 
u
.
	`put
(
av
[
univî£_¨g
]);

2437 
hvÆ
 = 
box
.
	`hvÆue
(
u
);

2438 
hdr
.
	`put
(&
hvÆ
, (hval));

2440 
hdr
.
	`put
(
box
.
	`kvÆ
(), box.
	`kÀn
());

2445 
ã°_bv
:

2447 
hdr
.
	`put
(
av
[
hdr_¨g
], 
	`°æí
(av[hdr_arg])+1);

2450 
ã°_bœrge
:

2451 
˚º
 << "******* SCRIPT ERROR ******" <<
ídl
;

2452 
˚º
 << "C™nŸ u£ bœrgêã° f‹ hdrs"<<
ídl
;

2453 
˚º
 << "***************************" <<
ídl
;

2454 
˚º
 << 
ídl
;

2455 
˚º
 << 
ídl
;

2456 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

2460 
	`cvt2ty≥d_vÆue
(
t
, 
av
[
hdr_¨g
], 
vh
);

2461 
hdr
.
	`put
(&
vh
.
_u
, vh.
_Àngth
);

2466 
°id_t
 
°id
;

2467 
rid_t
 
rid
;

2469 
w_i°r°ªam
 
	`™⁄
(
av
[
fid_¨g
]); 
™⁄
 >> 
°id
;

2470 
	`DO
–
sm
->
	`¸óã_ªc
(
°id
, 
hdr
,

2471 
	`obje˘size
(
av
[
Àn_höt_¨g
]), 
d©a
, 
rid
) );

2472 
	`w_ª£t_°r°ªam
(
t˛out
);

2473 
t˛out
 << 
rid
 << 
íds
;

2475 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2476 
	`w_ª£t_°r°ªam
(
t˛out
);

2477  
TCL_OK
;

2478 
	}
}

2481 
	$t_gë_°‹e_öfo
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2483 i‡(
	`check
(
ù
, "fid ", 
ac
, 2))

2484  
TCL_ERROR
;

2486 c⁄° *
°id°rög
 = 
av
[1];

2489 
sm_°‹e_öfo_t
 
	`öfo
(100);

2491 
°id_t
 
fid
;

2492 
w_i°r°ªam
 
	`™⁄
(
°id°rög
); 
™⁄
 >> 
fid
;

2493 
	`DO
(
sm
->
	`gë_°‹e_öfo
(
fid
, 
öfo
));

2495 
	`w_ª£t_°r°ªam
(
t˛out
);

2496 
t˛out


2497 << 
öfo
.
°‹e
 << " "

2498 << 
	`cvt_°‹e_t
((
ss_m
::
°‹e_t
)
öfo
.
°y≥
) << " "

2499 << 
	`cvt_ndx_t
((
ss_m
::
ndx_t
)
öfo
.
¡y≥
) << " "

2500 << 
	`cvt_c⁄cuºícy_t
((
ss_m
::
c⁄cuºícy_t
)
öfo
.
cc
) << " "

2501 << 
öfo
.
eff
 << " "

2502 << 
öfo
.
œrge_°‹e
 << " "

2503 << 
öfo
.
roŸ
 << " "

2504 << 
öfo
.
nkc
 << " "

2505 << 
öfo
.
keydes¸
 << 
íds
;

2506 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2507 
	`w_ª£t_°r°ªam
(
t˛out
);

2508  
TCL_OK
;

2509 
	}
}

2511 
ty≥d_båì_ã°


2512 
	$gë_key_ty≥
–
T˛_I¡îp
 *

2513 , c⁄° *
°id°rög
 )

2515 
ty≥d_båì_ã°
 
t°‹ed
;

2516 
w_rc_t
 
rc
;

2517 
sm_°‹e_öfo_t
 
	`öfo
(100);

2519 
°id_t
 
fid
;

2520 
w_i°r°ªam
 
	`™⁄
(
°id°rög
); 
™⁄
 >> 
fid
;

2521 
rc
 = 
sm
->
	`gë_°‹e_öfo
(
fid
, 
öfo
);

2523 i‡(
rc
.
	`is_îr‹
()) {

2524 
˚º
 << "gë_key_ty≥: " << 
rc
 << 
ídl
;

2525  
ã°_nosuch
;

2527 
t°‹ed
 = 
	`cvt2ty≥
(
öfo
.
keydes¸
);

2528  
t°‹ed
;

2529 
	}
}

2533 
	$check_key_ty≥
(

2534 
T˛_I¡îp
 *
ù
,

2535 
ty≥d_båì_ã°
 
t
,

2536 c⁄° *
giví
,

2537 c⁄° *
°id°rög


2540 
ty≥d_båì_ã°
 
°‹ed
;

2541 if((
°‹ed
=
	`gë_key_ty≥
(
ù
, 
°id°rög
)Ë!
t
) {

2542 
	`T˛_AµídResu…
(
ù
, "Wrong keyÅype: given ",

2543 
giví
, " index m©che†ty≥d_båì_ã° " , 
°‹ed
 , 0);

2544  
TCL_ERROR
;

2546  
TCL_OK
;

2547 
	}
}

2550 
	$t_sˇn_s‹ãd_ªcs
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2553 i‡(
	`check
(
ù
, "fid hdπy≥ d©©y≥ [univî£]", 
ac
, 4, 5))

2554  
TCL_ERROR
;

2557 
univî£_¨g
 = 4;

2558 
pö_i
* 
pö
;

2559 
boﬁ
 
eof
;

2560 
rc_t
 
rc
;

2561 
sˇn_fûe_i
* 
sˇn
;

2563 
ty≥d_båì_ã°
 
th
 = 
	`cvt2ty≥
(
av
[2]);

2564 
ty≥d_båì_ã°
 
tb
 = 
	`cvt2ty≥
(
av
[3]);

2567 
°id_t
 
fid
;

2568 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
fid
;

2569 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
ss_m
::
t_cc_fûe
);

2571 
	`TCL_HANDLE_FSCAN_FAILURE
(
sˇn
);

2573 *
°rbuf
 = 
√w
 [
STRINGMAX
];

2574 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
°rbuf
);

2576  !(
rc
=
sˇn
->
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof) {

2577 
	`DBG
(<<"Ñec‹d " << 
pö
->
	`rid
());

2579 
	`w_ª£t_°r°ªam
(
t˛out
);

2580 
th
) {

2581 
ã°_bv
:

2582 
t˛out
 << "(" << (*)
pö
->
	`hdr
() << ")";

2585 
ã°_b1
:

2586 
t˛out
 << "(" << *(*)
pö
->
	`hdr
() << ")";

2589 
ã°_i1
:

2590 
t˛out
 << "(" << ()(*(
öt1_t
*)
pö
->
	`hdr
()) << ")";

2592 
ã°_u1
:

2593 
t˛out
 << "(" << ()(*(
uöt1_t
*)
pö
->
	`hdr
()) << ")";

2596 
ã°_i2
:

2597 
t˛out
 << "(" << *(
öt2_t
*)
pö
->
	`hdr
() << ")";

2599 
ã°_u2
:

2600 
t˛out
 << "(" << *(
uöt2_t
*)
pö
->
	`hdr
() << ")";

2603 
ã°_i4
:

2604 
t˛out
 << "(" << *(
öt4_t
*)
pö
->
	`hdr
() << ")";

2606 
ã°_u4
:

2607 
t˛out
 << "(" << *(
uöt4_t
*)
pö
->
	`hdr
() << ")";

2610 
ã°_i8
:

2611 
t˛out
 << "(" << *(
w_ba£_t
::
öt8_t
*)
pö
->
	`hdr
() << ")";

2613 
ã°_u8
:

2614 
t˛out
 << "(" << *(
w_ba£_t
::
uöt8_t
*)
pö
->
	`hdr
() << ")";

2617 
ã°_f8
: {

2618 
w_ba£_t
::
f8_t
 
tmp
;

2619 
	`mem˝y
(&
tmp
, 
pö
->
	`hdr
(), (
w_ba£_t
::
f8_t
));

2620 
t˛out
 << "(" << 
tmp
 << ")";

2624 
ã°_f4
:

2625 
t˛out
 << "(" << (
f4_t
Ë*(f4_t*)
pö
->
	`hdr
() << ")";

2628 
ã°_•©ül
: {

2629 if(
√ws‹t
) {

2630 
hvÆue
;

2632 
nbox_t
 
	`key
(2);

2633 
nbox_t
 
	`u
(2);

2634 
u
.
	`put
(
av
[
univî£_¨g
]);

2635 
key
.
	`byãs2box
((*)
pö
->
	`hdr
(),Öö->
	`hdr_size
());

2636 
hvÆue
 = 
key
.
	`hvÆue
(
u
);

2637 
t˛out
 << "(hûbît=" << 
hvÆue
 << "):" << 
key
 ;

2640 
hvÆue
;

2641 
	`w_as£π3
(
pö
->
	`hdr_size
(Ë=(
hvÆue
));

2642 
	`mem˝y
(&
hvÆue
, 
pö
->
	`hdr
(),Öö->
	`hdr_size
());

2643 
t˛out
 << "(" << 
hvÆue
 << ")";

2649 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

2655 
	`mem£t
(
°rbuf
, 'Z', 
STRINGMAX
);

2657 i‡(
pö
->
	`is_smÆl
()) {

2658 
	`mem˝y
(
°rbuf
, 
pö
->
	`body
(),Öö->
	`body_size
());

2659 
°rbuf
[
pö
->
	`body_size
()] = '\0';

2660 } if(
tb
 !
ã°_bœrge
) {

2661 
	`mem˝y
(
°rbuf
, 
pö
->
	`body
(), 96);

2662 
	`mem˝y
(&
°rbuf
[96], "...", 3);

2663 
°rbuf
[99] = '\0';

2665 
tb
) {

2666 
ã°_bœrge
: {

2667 
i
=0;

2668 *
p
 = 
°rbuf
;

2669 *
p
 == 'Z') {

2670 
i
++;

2671 
p
++;

2672 if(
i
>(
pö
->
	`body_size
())) {

2673 *
p
 = '\0';

2677 
	`w_as£π3
(
pö
->
	`body_size
(Ë< 
STRINGMAX
 );

2678 
°rbuf
[
pö
->
	`body_size
()]= '\0';

2680 
t˛out
 << "(Z(" << (
p
-
°rbuf
) << "Åimes) "

2681 << (*)
p
 << ")";

2685 
ã°_b23
:

2686 
ã°_bv
:

2687 
t˛out
 << "(" << (*)
°rbuf
 << ")";

2690 
ã°_b1
:

2691 
t˛out
 << "(" << *(*)
°rbuf
 << ")";

2694 
ã°_i1
:

2695 
t˛out
 << "(" << ()(*(
uöt1_t
*)
°rbuf
) << ")";

2697 
ã°_u1
:

2698 
t˛out
 << "(" << ()(*(
uöt1_t
*)
°rbuf
) << ")";

2701 
ã°_i2
:

2702 
t˛out
 << "(" << *(
öt2_t
*)
°rbuf
 << ")";

2704 
ã°_u2
:

2705 
t˛out
 << "(" << *(
uöt2_t
*)
°rbuf
 << ")";

2708 
ã°_i4
:

2709 
t˛out
 << "(" << *(
öt4_t
*)
°rbuf
 << ")";

2711 
ã°_u4
:

2712 
t˛out
 << "(" << *(
uöt4_t
*)
°rbuf
 << ")";

2715 
ã°_i8
:

2716 
t˛out
 << "(" << *(
w_ba£_t
::
öt8_t
*)
°rbuf
 << ")";

2718 
ã°_u8
:

2719 
t˛out
 << "(" << *(
w_ba£_t
::
uöt8_t
*)
°rbuf
 << ")";

2722 
ã°_f8
:

2723 
t˛out
 << "(" << *(*)
°rbuf
 << ")";

2726 
ã°_f4
:

2727 
t˛out
 << "(" << *(*)
°rbuf
 << ")";

2730 
ã°_•©ül
:

2731 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

2735 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

2738 
t˛out
 << 
íds
;

2739 i‡(
löked
.
vîbo£_Êag
) {

2740 
cout
 << 
t˛out
.
	`c_°r
(Ë<<
ídl
;

2744 
dñëe
 
sˇn
;

2746 
	`DO
(
rc
);

2748 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "scan success");

2749  
TCL_OK
;

2750 
	}
}

2754 
	$t_s‹t_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2756 c⁄° 
fid_¨g
 =1;

2757 c⁄° 
vid_¨g
 =2;

2758 c⁄° 
runsize_¨g
 =3;

2759 c⁄° 
ty≥_¨g
 =4;

2760 c⁄° 
whîe_¨g
=5;

2761 c⁄° 
di°ö˘_¨g
 =6;

2762 c⁄° 
de°ru˘_¨g
=7;

2763 c⁄° 
¥›îty_¨g
=8;

2764 c⁄° 
univî£_¨g
=9;

2765 c⁄° 
dîived_¨g
=10;

2766 c⁄° *
ußge_°rög
 =

2771 i‡(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 
de°ru˘_¨g
+1, 
¥›îty_¨g
+1,

2772 
univî£_¨g
+1, 
dîived_¨g
+1))

2773  
TCL_ERROR
;

2775 
key_öfo_t
 
öfo
;

2777 
öfo
.
off£t
 = 0;

2778 
öfo
.
whîe
 = 
key_öfo_t
::
t_body
;

2779 
öfo
.
univî£
 = 0;

2781 
boﬁ
 
unique
 = 
Ál£
;

2782 i‡(
	`°rcmp
("n‹mÆ", 
av
[
di°ö˘_¨g
])) {

2783 i‡(
	`°rcmp
("di°ö˘", 
av
[
di°ö˘_¨g
])) {

2784 if(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 0)Ë 
TCL_ERROR
;

2786 
unique
 = 
åue
;

2790 
boﬁ
 
de°ru˘
 = 
åue
;

2791 i‡(
	`°rcmp
("de°ru˘", 
av
[
de°ru˘_¨g
])) {

2792 i‡(
	`°rcmp
("kìp", 
av
[
de°ru˘_¨g
])) {

2793 if(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 0)Ë 
TCL_ERROR
;

2795 
de°ru˘
 = 
Ál£
;

2799 i‡(
ac
 > 
dîived_¨g
) {

2800 
öfo
.
dîived
 = (
	`©oi
(
av
[
dîived_¨g
]) != 0);

2802 
öfo
.
dîived
 = 
Ál£
;

2805 
ss_m
::
°‹e_¥›îty_t
 
¥›îty
 = ss_m::
t_ªguœr
;

2806 i‡(
ac
 > 
¥›îty_¨g
) {

2807 
¥›îty
 = 
	`cvt2°‹e_¥›îty
(
av
[
¥›îty_¨g
]);

2810 i‡(
	`°rcmp
("hdr", 
av
[
whîe_¨g
]) == 0) {

2811 
öfo
.
whîe
 = 
key_öfo_t
::
t_hdr
;

2812 } i‡(
	`°rcmp
("body", 
av
[
whîe_¨g
]) ==0) {

2813 
öfo
.
whîe
 = 
key_öfo_t
::
t_body
;

2815 if(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 0)Ë 
TCL_ERROR
;

2818 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
av
[
ty≥_¨g
]);

2820 
nbox_t
 
	`bbox
(2);

2821 
t
) {

2822 
ã°_bv
:

2824 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_b
;

2825 
öfo
.
Àn
 = 0;

2828 
ã°_bœrge
:

2829 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_b
;

2830 
öfo
.
Àn
 = 
LARGESTRING
;

2833 
ã°_b23
:

2834 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_b
;

2835 
öfo
.
Àn
 = 23;

2838 
ã°_b1
:

2839 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

2840 
öfo
.
Àn
 = ();

2843 
ã°_u1
:

2845 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u1
;

2846 
öfo
.
Àn
 = (
uöt1_t
);

2849 
ã°_u2
:

2851 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u2
;

2852 
öfo
.
Àn
 = (
uöt2_t
);

2855 
ã°_u4
:

2857 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u4
;

2858 
öfo
.
Àn
 = (
uöt4_t
);

2861 
ã°_u8
:

2863 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_u8
;

2864 
öfo
.
Àn
 = (
w_ba£_t
::
uöt8_t
);

2868 
ã°_i1
:

2870 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i1
;

2871 
öfo
.
Àn
 = (
öt1_t
);

2874 
ã°_i2
:

2876 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i2
;

2877 
öfo
.
Àn
 = (
öt2_t
);

2880 
ã°_i4
:

2882 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i4
;

2883 
öfo
.
Àn
 = (
öt4_t
);

2886 
ã°_i8
:

2888 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_i8
;

2889 
öfo
.
Àn
 = (
w_ba£_t
::
öt8_t
);

2892 
ã°_f4
:

2894 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f4
;

2895 
öfo
.
Àn
 = (
f4_t
);

2898 
ã°_f8
:

2900 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_f8
;

2901 
öfo
.
Àn
 = (
f8_t
);

2904 
ã°_•©ül
:

2906 
öfo
.
ty≥
 = 
s‹t‹dî
::
kt_•©ül
;

2908 if(
ac
 > 
univî£_¨g
) {

2909 
bbox
.
	`put
(
av
[
univî£_¨g
]);

2911 
öfo
.
univî£
 = 
bbox
;

2912 
öfo
.
Àn
 = 
bbox
.
	`kÀn
();

2921 
öfo
.
e°_ª˛í
 = 
	`MAX
(öfo.
Àn
, 
ALIGNON
);

2924 
°id_t
 
ö_fid
;

2925 
w_i°r°ªam
 
	`™⁄
(
av
[
fid_¨g
]);

2926 
™⁄
 >> 
ö_fid
;

2927 
°id_t
 
out_fid
;

2929 
	`DO
–
sm
->
	`s‹t_fûe
(
ö_fid
,

2930 
	`©oi
(
av
[
vid_¨g
]), 
out_fid
, 
¥›îty
,

2931 
öfo
, 
	`©oi
(
av
[
runsize_¨g
]), 
åue
, 
unique
, 
de°ru˘
,

2932 
√ws‹t
) );

2933 
	`w_ª£t_°r°ªam
(
t˛out
);

2934 
t˛out
 << 
out_fid
 << 
íds
;

2936 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2937 
	`w_ª£t_°r°ªam
(
t˛out
);

2938  
TCL_OK
;

2939 
	}
}

2942 
	$t_com∑ª_ty≥d
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2946 i‡(
	`check
(
ù
, "ty≥ d©um d©um [univî£]", 
ac
, 4, 5))

2947  
TCL_ERROR
;

2949 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
av
[1]);

2950 
ty≥d_vÆue
 
v1
, 
v2
;

2951 
vec_t
 
d1
, 
d2
;

2952 
hvÆ1
, 
hvÆ2
;

2955 if(
t
 =
ã°_•©ül
) {

2956 
nbox_t
 
	`box1
(
av
[2]);

2957 
nbox_t
 
	`box2
(
av
[3]);

2958 i‡(
ac
 == 5) {

2959 
nbox_t
 
	`u
(
av
[4]);

2960 
hvÆ1
 = 
box1
.
	`hvÆue
(
u
);

2961 
˚º
 << 
__LINE__
 << " " << "puàhvÆuê" << 
hvÆ1
 <<
ídl
;

2962 
d1
.
	`put
(&
hvÆ1
, (hval1));

2964 
hvÆ2
 = 
box2
.
	`hvÆue
(
u
);

2965 
˚º
 << 
__LINE__
 << " " << "puàhvÆuê" << 
hvÆ2
 <<
ídl
;

2966 
d2
.
	`put
(&
hvÆ2
, (hval2));

2968 
d1
.
	`put
(
box1
.
	`kvÆ
(), box1.
	`kÀn
());

2969 
d2
.
	`put
(
box2
.
	`kvÆ
(), box2.
	`kÀn
());

2972 
	`cvt2ty≥d_vÆue
(
t
, 
av
[2], 
v1
);

2973 
d1
.
	`put
(&
v1
.
_u
, v1.
_Àngth
);

2975 
	`cvt2ty≥d_vÆue
(
t
, 
av
[3], 
v2
);

2976 
d2
.
	`put
(&
v2
.
_u
, v2.
_Àngth
);

2979 
	`w_ª£t_°r°ªam
(
t˛out
);

2980 
t˛out
 << (Ë
d1
.
	`cmp
(
d2
Ë<< 
íds
;

2981 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

2982 
	`w_ª£t_°r°ªam
(
t˛out
);

2983  
TCL_OK
;

2984 
	}
}

2987 
	$t_föd_assoc_ty≥d
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

2989 i‡(
	`check
(
ù
, "°id keyÅy≥", 
ac
, 4))

2990  
TCL_ERROR
;

2991 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
av
[3]);

2993 if(
	`check_key_ty≥
(
ù
, 
t
, 
av
[3],áv[1]Ë=
TCL_ERROR
)  TCL_ERROR;

2995 
ty≥d_vÆue
 
v1
;

2996 
vec_t
 
key
;

2998 if(
t
 =
ã°_•©ül
) {

3000 
	`W_FATAL
(
ss_m
::
eNOTIMPLEMENTED
);

3001 } if(
t
 =
ã°_bv
) {

3003 
key
.
	`put
(
av
[2], 
	`°æí
(av[2])+1);

3005 
	`cvt2ty≥d_vÆue
(
t
, 
av
[2], 
v1
);

3006 
key
.
	`put
(&
v1
.
_u
, v1.
_Àngth
);

3009 
boﬁ
 
found
;

3011 
	#ELSIZE
 4044

	)

3012 *
ñ
 = 
√w
 [
ELSIZE
];

3013 
smsize_t
 
ñí
 = 
ELSIZE
-1;

3015 
w_rc_t
 
___rc
;

3018 
°id_t
 
°id
;

3019 
w_i°r°ªam
 
	`™⁄
(
av
[1]); 
™⁄
 >> 
°id
;

3020 
___rc
 = 
sm
->
	`föd_assoc
(
°id
, 
key
, 
ñ
, 
ñí
, 
found
);

3022 i‡(
___rc
.
	`is_îr‹
()) {

3023 
	`w_ª£t_°r°ªam
(
t˛out
);

3024 
t˛out
 << 
___rc
 << 
íds
;

3025 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

3026 
	`w_ª£t_°r°ªam
(
t˛out
);

3027 
dñëe
[] 
ñ
;

3028  
TCL_ERROR
;

3031 
ñ
[
ñí
] = '\0';

3032 i‡(
found
) {

3033 
	`T˛_AµídEÀmít
(
ù
, 
ñ
);

3034 
dñëe
[] 
ñ
;

3035  
TCL_OK
;

3038 
	`T˛_AµídEÀmít
(
ù
, 
TCL_CVBUG
 "not found");

3039 
dñëe
[] 
ñ
;

3040  
TCL_ERROR
;

3041 
	}
}

3043 c⁄° 
	s«me2ty≥_t
 {

3044 c⁄° * 
	m«me
;

3045 
ty≥d_båì_ã°
 
	mty≥
;

3046 } 
	g«me2ty≥
[] = {

3047 { "i1", 
ã°_i1
 },

3048 { "I1", 
ã°_i1
 },

3049 { "u1", 
ã°_u1
 },

3050 { "U1", 
ã°_u1
 },

3052 { "i2", 
ã°_i2
 },

3053 { "I2", 
ã°_i2
 },

3054 { "u2", 
ã°_u2
 },

3055 { "U2", 
ã°_u2
 },

3057 { "i4", 
ã°_i4
 },

3058 { "I4", 
ã°_i4
 },

3059 { "u4", 
ã°_u4
 },

3060 { "U4", 
ã°_u4
 },

3062 { "i8", 
ã°_i8
 },

3063 { "I8", 
ã°_i8
 },

3064 { "u8", 
ã°_u8
 },

3065 { "U8", 
ã°_u8
 },

3067 { "f4", 
ã°_f4
 },

3068 { "F4", 
ã°_f4
 },

3069 { "f8", 
ã°_f8
 },

3070 { "F8", 
ã°_f8
 },

3072 { "b1", 
ã°_b1
 },

3073 { "B1", 
ã°_b1
 },

3074 { "b23",
ã°_b23
 },

3075 { "B23",
ã°_b23
 },

3077 { "bœrge",
ã°_bœrge
 },

3078 { "Bœrge",
ã°_bœrge
 },

3081 { "b*1000",
ã°_bv
 },

3082 { "B*1000",
ã°_bv
 },

3085 { "•©ül", 
ã°_•©ül
 },

3087 { 0, 
ã°_nosuch
 }

3090 
ty≥d_båì_ã°


3091 
	$cvt2ty≥
(c⁄° *
s
)

3093 c⁄° 
«me2ty≥_t
* 
p
 = 
«me2ty≥
;Ö->
«me
;Ö++) {

3094 i‡(
	`°ªq
(
s
, 
p
->
«me
)ËÖ->
ty≥
;

3096  
ã°_nosuch
;

3097 
	}
}

3100 
	$cvtFROMty≥
–
ty≥d_båì_ã°
 
t
)

3102 c⁄° 
«me2ty≥_t
* 
p
 = 
«me2ty≥
;Ö->
«me
;Ö++) {

3103 i‡(
p
->
ty≥
 =
t
ËÖ->
«me
;

3106 
	}
}

	@src/sm/smsh/sm_sizeof.cpp

30 
	~"w_deföes.h
"

34 
	~"shñl.h
"

35 
	~<io°ªam
>

37 
	~"∑ge_s.h
"

38 
	~"lock_x.h
"

40 
	#SM_SOURCE


	)

41 
	~"sm_öt_2.h
"

42 
	~"logªc.h
"

43 
	~"logdef_gí.˝p
"

47 
	~"∑ge.h
"

48 
	~"båì_p.h
"

52 
	#TYPE_INFO
(
ty≥
Ë{ #ty≥ , —y≥Ë}

	)

53 
	#SIZE_INFO
(
size
Ë{ #size, sizê}

	)

55 
	ssmsh_ty≥_öfo_t
 {

56 c⁄° *
	mty≥
;

57 
size_t
 
	msize
;

60 c⁄° 
smsh_ty≥_öfo_t
 
	gsmsh_ty≥_öfo
[] = {

61 
TYPE_INFO
(
rid_t
),

62 
TYPE_INFO
(
°id_t
),

63 
TYPE_INFO
(
sdesc_t
),

64 
TYPE_INFO
(
vec_t
),

65 
TYPE_INFO
(
cvec_t
),

66 
TYPE_INFO
(
vid_t
),

67 
TYPE_INFO
(
lvid_t
),

68 
TYPE_INFO
(
smthªad_t
),

69 
TYPE_INFO
(
°hªad_t
),

71 
TYPE_INFO
(
key_öfo_t
),

72 
TYPE_INFO
(
s‹t_keys_t
),

73 
TYPE_INFO
(
smsize_t
),

75 
TYPE_INFO
(
sm_du_°©s_t
),

76 
TYPE_INFO
(
SmVﬁumeMëaSèts
),

77 
TYPE_INFO
(
SmFûeMëaSèts
),

78 
TYPE_INFO
(
∑ge_s
),

79 
TYPE_INFO
(
∑ge_s
::
•a˚_t
),

80 
SIZE_INFO
(
∑ge_s
::
hdr_sz
),

81 
SIZE_INFO
(
∑ge_s
::
d©a_sz
),

82 
SIZE_INFO
(
∑ge_s
::
max_¶Ÿ
),

83 { "∑ge_s::off£tof÷¢1)", 
w_off£tof
(
∑ge_s
, 
l¢1
) },

84 { "∑ge_s::off£tof’id)", 
w_off£tof
(
∑ge_s
, 
pid
) },

85 { "∑ge_s::off£tof“ext)", 
w_off£tof
(
∑ge_s
, 
√xt
) },

86 { "∑ge_s::off£tof’ªv)", 
w_off£tof
(
∑ge_s
, 
¥ev
) },

87 { "∑ge_s::off£tof(•a˚)", 
w_off£tof
(
∑ge_s
, 
•a˚
) },

92 { "∑ge_s::off£tof”nd)", 
w_off£tof
(
∑ge_s
, 
íd
) },

93 { "∑ge_s::off£tof“¶Ÿs)", 
w_off£tof
(
∑ge_s
, 
n¶Ÿs
) },

94 { "∑ge_s::off£tof“vaˇ¡)", 
w_off£tof
(
∑ge_s
, 
nvaˇ¡
) },

95 { "∑ge_s::off£tof—ag)", 
w_off£tof
(
∑ge_s
, 
èg
) },

96 { "∑ge_s::off£tof(°‹e_Êags)", 
w_off£tof
(
∑ge_s
, 
_¥iv©e_°‹e_Êags
) },

97 { "∑ge_s::off£tof’age_Êags)", 
w_off£tof
(
∑ge_s
, 
∑ge_Êags
) },

98 { "∑ge_s::off£tof(d©a)", 
w_off£tof
(
∑ge_s
, 
d©a
) },

99 { "∑ge_s::off£tof‘e£rved_¶Ÿ)", 
w_off£tof
(
∑ge_s
, 
ª£rved_¶Ÿ
) },

100 { "∑ge_s::off£tof(¶Ÿ)", 
w_off£tof
(
∑ge_s
, 
¶Ÿ
) },

101 { "∑ge_s::off£tof÷¢2)", 
w_off£tof
(
∑ge_s
, 
l¢2
) },

102 
TYPE_INFO
(
ª˘ag_t
),

103 
TYPE_INFO
(
ªc‹d_t
),

104 { "ªc‹d_t::off£tof(öfo)", 
w_off£tof
(
ªc‹d_t
, 
öfo
) },

109 
TYPE_INFO
(
¢um_t
),

110 
TYPE_INFO
(
shpid_t
),

111 
TYPE_INFO
(
extid_t
),

112 
TYPE_INFO
(
shrid_t
),

113 
TYPE_INFO
(
tid_t
),

114 
TYPE_INFO
(
Õid_t
),

115 
TYPE_INFO
(
pö_i
),

121 #i‡!
deföed
(
FORCE_EGCS
Ë&& !deföed(
GCC_BROKEN_WARNINGS
Ë&& !deföed(
GCC_VER_3_WARNINGS
)

125 
TYPE_INFO
(
lock_ªque°_t
),

126 
TYPE_INFO
(
x˘_lock_öfo_t
),

133 
TYPE_INFO
(
sm_°©s_öfo_t
),

134 
TYPE_INFO
(
sm_c⁄fig_öfo_t
),

136 
TYPE_INFO
(
fûe_pg_°©s_t
),

137 
TYPE_INFO
(
lgd©a_pg_°©s_t
),

138 
TYPE_INFO
(
lgödex_pg_°©s_t
),

139 
TYPE_INFO
(
fûe_°©s_t
),

141 
TYPE_INFO
(
l¢_t
),

142 
TYPE_INFO
(
sˇn_ödex_i
),

143 
TYPE_INFO
(
sˇn_fûe_i
),

144 
TYPE_INFO
(
≠≥nd_fûe_i
),

145 
TYPE_INFO
(
sˇn_π_i
)

148 #ifde‡
USE_2PC


149 ,
TYPE_INFO
(
sm2pc_°©s_t
)

150 ,
TYPE_INFO
(
DódlockMsg
)

152 ,
TYPE_INFO
(
off_t
)

155 #i‚de‡
numbîof


156 
	#numbîof
(
x
Ë((x)/(x[0]))

	)

160 
	$t_sm_sizeof
(
T˛_I¡îp
 *, 
¨gc
, 
TCL_AV
 **
¨gv
)

162 
cout
 << "t_sizeof" << 
ídl
;

163 i‡(
¨gc
 < 1)

164  
TCL_ERROR
;

166 i‡(
¨gc
 == 1) {

167 
j
 = 0; j < 
	`numbîof
(
smsh_ty≥_öfo
); j++) {

168 c⁄° 
smsh_ty≥_öfo_t
 &
t
 = 
smsh_ty≥_öfo
[
j
];

170 
cout
 << "\tsizeof(" << 
t
.
ty≥
 << ") => "

171 << 
t
.
size
 << 
ídl
;

174  
TCL_OK
;

177 
i
 = 1; i < 
¨gc
; i++) {

178 c⁄° *
¨g
 = 
¨gv
[
i
];

179 c⁄° 
size_t
 
¨g_Àn
 = 
	`°æí
(
¨g
);

181 
j
 = 0; j < 
	`numbîof
(
smsh_ty≥_öfo
); j++) {

182 c⁄° 
smsh_ty≥_öfo_t
 &
t
 = 
smsh_ty≥_öfo
[
j
];

184 i‡(
	`°∫cmp
(
¨g
, 
t
.
ty≥
, 
¨g_Àn
) == 0)

185 
cout
 << "\tsizeof(" << 
t
.
ty≥
 << ") => "

186 << 
t
.
size
 << 
ídl
;

190  
TCL_OK
;

191 
	}
}

	@src/sm/smsh/smsh.cpp

30 
	~"w_deföes.h
"

51 
	~<c°dlib
>

52 
	~<˛imôs
>

53 
	~"w_°ªam.h
"

54 
	~<c°rög
>

55 
	~"w_debug.h
"

56 
	~"shñl.h
"

58 #i‚de‡
__GNU_LIBRARY__


59 
	#__GNU_LIBRARY__


	)

61 
	~"w_gë›t.h
"

65 #ifde‡
EXTERN


66 #unde‡
EXTERN


68 
	~<t˛.h
>

69 
	~"t˛_w‹k¨ound.h
"

70 
	~"t˛_thªad.h
"

71 
	~"smsh.h
"

72 
	~<°hªad_°©s.h
>

74 c⁄° * 
	gt˛_öô_cmd
 = 0;

76 
boﬁ
 
	gö°rumít
 = 
åue
;

77 
boﬁ
 
	gvîbo£
 = 
Ál£
;

78 
boﬁ
 
	gvîbo£2
 = 
Ál£
;

79 
boﬁ
 
	gf‹˚_com¥ess
 = 
Ál£
;

80 
boﬁ
 
	glog_w¨n_ˇŒback
 = 
Ál£
;

81 c⁄° * 
	gf_¨g
 = 
NULL
;

82 c⁄° *
	g¨gv0
 = 
NULL
;

83 
boﬁ
 
	göãø˘ive
 = 
Ál£
;

86 
löked_v¨s
 
	glöked
;

89 íum { 
	mSSH_MIN_ERROR
 = 50000,

90 
	mSSH_OS
,

91 
	mSSH_FAILURE
,

92 
	mSSH_COMMAND_LINE
,

93 
	mSSH_MAX_ERROR
};

95 c⁄° 
w_îr‹_öfo_t
 
	gsmsh_îr‹_li°
[]=

97 {
SSH_OS
, "operating systemÉrror"},

98 {
SSH_FAILURE
,"general smshÖrogram failure"},

99 {
SSH_COMMAND_LINE
,"problem with commandÜine"},

109 
	$¥öt_ußge
(
o°ªam
& 
îr_°ªam
, c⁄° * 
¥og_«me
,

110 
boﬁ
 
l⁄g_f‹m
, 
›ti⁄_group_t
& 
›ti⁄s
)

112 i‡(!
l⁄g_f‹m
) {

113 
îr_°ªam
 << "ußge: " << 
¥og_«me


116 << 
ídl
;

117 
›ti⁄s
.
	`¥öt_ußge
(
l⁄g_f‹m
, 
îr_°ªam
);

119 
îr_°ªam
 << "ußge: " << 
¥og_«me
 << 
ídl
;

120 
îr_°ªam
 << "switches:\n"

129 << "›ti⁄s:" << 
ídl
;

130 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
îr_°ªam
);

133 
	}
}

137 #i‚de‡
SOLARIS2


141 
	$maö
(
¨gc
, c⁄° ** 
¨gv
)

143 
¨gv0
 = 
¨gv
[0];

146 #i‡
	`deföed
(
W_TRACE
)

147 *
c
 = 
	`gëív
("DEBUG_FLAGS");

148 if(
c
!=
NULL
Ë
cout
 << "DEBUG_FLAGS =|" << c << "|" << 
ídl
;

149 
cout
 << "DEBUG_FLAGS i†nŸ së. " <<
ídl
;

150 
c
 = 
	`gëív
("DEBUG_FILE");

151 if(
c
!=
NULL
Ë
cout
 << "DEBUG_FILE =|" << c << "|" << 
ídl
;

152 
cout
 << "DEBUG_FILE i†nŸ së. " <<
ídl
;

154 c⁄° *
cc
 = 
_w_‚ame_debug__
;

155 if(
cc
!=
NULL
Ë
cout
 << "_w_‚ame_debug__ =|" << c¯<< "|" << 
ídl
;

156 
cout
 << "_w_‚ame_debug__ i†nŸ së. " <<
ídl
;

158 
cout
 << "DebuggögÇŸ c⁄figuªd." << 
ídl
;

162 
boﬁ
 
¥öt_°©s
 = 
Ál£
;

166 #i‚de‡
SOLARIS2


171 i‡(! (
w_îr‹_t
::
	`ö£π
(

173 
smsh_îr‹_li°
, 
SSH_MAX_ERROR
 - 
SSH_MIN_ERROR
 - 1))) {

174 
	`ab‹t
();

191 c⁄° * 
¥og_«me
 = 
	`°ºchr
(
¨gv
[0], '/');

192 i‡(
¥og_«me
 =
NULL
) {

193 
¥og_«me
 = 
¨gv
[0];

195 
¥og_«me
 += 1;

196 i‡(
¥og_«me
[0] == '\0') {

197 
¥og_«me
 = 
¨gv
[0];

209 
›ti⁄_group_t
 
	`›ti⁄s
(3);

210 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
("smsh"));

211 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
("server"));

212 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
(
¥og_«me
));

218 
›ti⁄_t
* 
smsh_libdú
;

219 
›ti⁄_t
* 
smsh_smshrc
;

220 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("smsh_libdú", "dúe˘‹yÇame", 
NULL
,

222 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
smsh_libdú
));

223 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("smsh_smshrc", "rc fileÇame", ".smshrc",

225 
Ál£
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
, 
smsh_smshrc
));

228 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

236 
rc_t
 
rc
;

238 
›t_fûe
[
ss_m
::
max_dev«me
+1];

239 
fûe_num
 = 0; fûe_num < 2 && !
rc
.
	`is_îr‹
(); file_num++) {

241 
w_o°r°ªam
 
îr_°ªam
;

242 c⁄° * 
c⁄fig
 = ".shoreconfig";

243 i‡(
fûe_num
 == 0) {

244 i‡(!
	`gëív
("HOME")) {

250 i‡((
›t_fûe
Ë<
	`°æí
(
	`gëív
("HOME")Ë+ såÀn("/"Ë+ såÀn(
c⁄fig
) + 1) {

251 
˚º
 << "Eº‹:Énvú⁄míàv¨übÀ $HOME i†toÿl⁄g" << 
ídl
;

252 
rc
 = 
	`RC
(
SSH_FAILURE
);

255 
	`°r˝y
(
›t_fûe
, 
	`gëív
("HOME"));

256 
	`°rˇt
(
›t_fûe
, "/");

257 
	`°rˇt
(
›t_fûe
, 
c⁄fig
);

259 
	`w_as£π3
(
fûe_num
 == 1);

260 
	`°r˝y
(
›t_fûe
, "./");

261 
	`°rˇt
(
›t_fûe
, 
c⁄fig
);

264 
›ti⁄_fûe_sˇn_t
 
	`›t_sˇn
(
›t_fûe
, &
›ti⁄s
);

265 
rc
 = 
›t_sˇn
.
	`sˇn
(
åue
, 
îr_°ªam
);

266 
îr_°ªam
 << 
íds
;

267 i‡(
rc
.
	`is_îr‹
()) {

269 i‡(
rc
.
	`îr_num
(Ë=
fcOS
) {

270 
rc
 = 
RCOK
;

274 
˚º
 << "Eº‹ i¿ªadög o±i⁄ fûe: " << 
›t_fûe
 << 
ídl
;

276 
˚º
 << "\t" << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

287 i‡(!
rc
.
	`is_îr‹
()) {

289 
w_o°r°ªam
 
îr_°ªam
;

290 
rc
 = 
›ti⁄s
.
	`∑r£_comm™d_löe
(
¨gv
, 
¨gc
, 2, &
îr_°ªam
);

291 
îr_°ªam
 << 
íds
;

292 i‡(
rc
.
	`is_îr‹
()) {

293 
˚º
 << "Eº‹ o¿comm™dÜöê" << 
ídl
;

294 
˚º
 << "\t" << 
w_îr‹_t
::
	`îr‹_°rög
(
rc
.
	`îr_num
()Ë<< 
ídl
;

295 
˚º
 << "\t" << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

296 
	`¥öt_ußge
(
˚º
, 
¥og_«me
, 
Ál£
, 
›ti⁄s
);

304 
›ti⁄
;

307 
boﬁ
 
vîbo£_›t
 = 
Ál£
;

308 (
›ti⁄
 = 
	`gë›t
(
¨gc
, (* c⁄°*Ë
¨gv
, "Cf:hLOsTvV")) != -1) {

309 
›ti⁄
) {

311 
boﬁ
 
logåa˚
;

312 
logåa˚
 = 
åue
;

316 
cout
 << "F‹˚ u£ o‡ﬁd s‹àim∂emíèti⁄." <<
ídl
;

317 
√ws‹t
 = 
Ál£
;

322 
f‹˚_com¥ess
 = 
åue
;

326 
¥öt_°©s
 = 
åue
;

330 
f_¨g
 = 
›èrg
;

335 
log_w¨n_ˇŒback
 = 
åue
;

340 
	`¥öt_ußge
(
˚º
, 
¥og_«me
, 
åue
, 
›ti⁄s
);

342 
	`W_IGNORE
(
rc
);

343 
d⁄e
;

346 
vîbo£_›t
 = 
åue
;

349 
vîbo£
 = 
åue
;

352 
˚º
 << "unknow¿Êag: " << 
›ti⁄
 << 
ídl
;

353 
rc
 = 
	`RC
(
SSH_COMMAND_LINE
);

357 i‡(
vîbo£_›t
) {

358 
›ti⁄s
.
	`¥öt_vÆues
(
Ál£
, 
˚º
);

366 i‡(!
rc
.
	`is_îr‹
()) {

368 
w_o°r°ªam
 
îr_°ªam
;

369 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

370 
îr_°ªam
 << 
íds
;

371 i‡(
rc
.
	`is_îr‹
()) {

372 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

373 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

374 
	`¥öt_ußge
(
˚º
, 
¥og_«me
, 
Ál£
, 
›ti⁄s
);

382 i‡(
rc
.
	`is_îr‹
()) {

384 
	`W_IGNORE
(
rc
);

385 
îr‹d⁄e
;

395 * 
mîged_¨gs
 = 
	`T˛_Mîge
(
¨gc
, (**Ë
¨gv
);

396 if(!
mîged_¨gs
) {

397 
˚º
 << "T˛_MîgêÁûed." <<
ídl
; 
	`exô
(1);

398 
îr‹d⁄e
;

403 
	`di•©ch_öô
();

410 
löked
.
sm_∑ge_sz
 = 
ss_m
::
∑ge_sz
;

411 
löked
.
sm_max_exts
 = 
ss_m
::
max_exts
;

412 
löked
.
sm_max_vﬁs
 = 
ss_m
::
max_vﬁs
;

413 
löked
.
sm_max_£rvîs
 = 
ss_m
::
max_£rvîs
;

414 
löked
.
sm_max_keycomp
 = 
ss_m
::
max_keycomp
;

415 
löked
.
sm_max_dú_ˇche
 = 
ss_m
::
max_dú_ˇche
;

416 
löked
.
sm_max_ªc_Àn
 = 
ss_m
::
max_ªc_Àn
;

417 
löked
.
sm_§vid_m≠_sz
 = 
ss_m
::
§vid_m≠_sz
;

418 
löked
.
vîbo£_Êag
 = 
vîbo£
?1:0;

419 
löked
.
vîbo£2_Êag
 = 
vîbo£2
?1:0;

420 
löked
.
ö°rumít_Êag
 = 
ö°rumít
?1:0;

421 
löked
.
com¥ess_Êag
 = 
f‹˚_com¥ess
?1:0;

422 
löked
.
log_w¨n_ˇŒback_Êag
 = 
log_w¨n_ˇŒback
?1:0;

425 
ây
 = 
	`ißây
(0);

426 
öãø˘ive
 = 
ây
 && 
f_¨g
;

431 
t˛_thªad_t
* 
t˛_thªad
 = 
NULL
;

432 
boﬁ
 
ok
 = 
åue
;

434 if(
ok
) {

435 i‡(
f_¨g
) {

436 
TCL_AV
 * 
av
[2];

437 
av
[0] = 
TCL_AV1
 "source";

438 
av
[1] = 
f_¨g
;

441 
˚º
 << 
__func__
 << " " << 
__LINE__
 << " " << 
__FILE__


442 << "Üibdú " << 
smsh_libdú
->
	`vÆue
()

443 << " msshr¯" << 
smsh_smshrc
->
	`vÆue
()

444 << 
ídl
;

446 
t˛_thªad
 = 
√w
 
	`t˛_thªad_t
(2, 
av
,

447 
smsh_libdú
->
	`vÆue
(),

448 
smsh_smshrc
->
	`vÆue
()

458 
t˛_thªad
 = 
√w
 
	`t˛_thªad_t
(0, 0,

459 
smsh_libdú
->
	`vÆue
(),

460 
smsh_smshrc
->
	`vÆue
()

463 
	`as£π
(
t˛_thªad
);

465 
	`Ârötf
(
°dîr
,

467 (c⁄° *)(
f_¨g
 ? "false" : "true"),

468 ((*)
t˛_thªad
),Å˛_thªad->
id
);

471 
	`W_COERCE
–
t˛_thªad
->
	`f‹k
() );

472 
	`W_COERCE
–
t˛_thªad
->
	`joö
() );

474 
	`Ârötf
(
°dîr
,

476 (c⁄° *)(
f_¨g
 ? "false" : "true"),

477 ((*)
t˛_thªad
),Å˛_thªad->
id
);

480 
dñëe
 
t˛_thªad
;

486 
	`T˛_FöÆize
();

489 #i‚de‡
SOLARIS2


493 if(
¥öt_°©s
)

495 
cout
 << "Thªad sèts" <<
ídl
;

496 
°hªad_t
::
	`dump_°©s
(
cout
);

497 
cout
 << 
ídl
;

502 #i‚de‡
SOLARIS2


507 
cout
 << 
Êush
;

509 
d⁄e
:

510 
	`˛ón_up_shñl
();

511 
	`Ârötf
(
°dîr
, "%dÅ˛Åhªad†øn\n", 
num_t˛_thªads_âl
);

514 
îr‹d⁄e
:

515 
	`˛ón_up_shñl
();

517 
	}
}

	@src/sm/smsh/smsh.h

30 #i‚de‡
SSH_H


31 
	#SSH_H


	)

33 
	~"w_deföes.h
"

37 
	#SSH_ERROR
(
îr
) \

39 
˚º
 << "sshÉº‹ (" << 
îr
 << "Ë© fûê" << 
__FILE__
\

40 << ",Üöê" << 
__LINE__
 << 
ídl
; \

41 
	`W_FATAL
(
fcINTERNAL
); \

42 }

	)

44 #unde‡
DO


46 
	#DO
(
x
) \

48 
îr
 = 
x
; \

49 i‡(
îr
Ë{ 
	`SSH_ERROR
(err); } \

50 } 0)

	)

52 
	#COMM_ERROR
(
îr
) \

53 
˚º
 << "communiˇti⁄Éº‹: codê" << (
îr
) \

54 << ", fûê" << 
__FILE__
 << ",Üöê" << 
__LINE__


	)

56 
	#COMM_FATAL
(
îr
Ë{ 
	`COMM_ERROR
”º); 
	`W_FATAL
(
fcINTERNAL
); }

	)

61 
rc_t
 
°›_comm
();

62 
rc_t
 
°¨t_comm
();

64 
	slöked_v¨s
 {

65 
	mw_ba£_t
::
uöt4_t
 
sm_∑ge_sz
;

66 
	mw_ba£_t
::
uöt4_t
 
sm_max_exts
;

67 
	mw_ba£_t
::
uöt4_t
 
sm_max_vﬁs
;

68 
	mw_ba£_t
::
uöt4_t
 
sm_max_£rvîs
;

69 
	mw_ba£_t
::
uöt4_t
 
sm_max_keycomp
;

70 
	mw_ba£_t
::
uöt4_t
 
sm_max_dú_ˇche
;

71 
	mw_ba£_t
::
uöt4_t
 
sm_max_ªc_Àn
;

72 
	mw_ba£_t
::
uöt4_t
 
sm_§vid_m≠_sz
;

73 
	mw_ba£_t
::
uöt4_t
 
vîbo£_Êag
;

74 
	mw_ba£_t
::
uöt4_t
 
vîbo£2_Êag
;

75 
	mw_ba£_t
::
uöt4_t
 
com¥ess_Êag
;

76 
	mw_ba£_t
::
uöt4_t
 
log_w¨n_ˇŒback_Êag
;

77 
	mw_ba£_t
::
uöt4_t
 
ö°rumít_Êag
;

79 
löked_v¨s
 
löked
;

81 
boﬁ
 
f‹˚_com¥ess
;

82 
boﬁ
 
log_w¨n_ˇŒback
;

83 
w_rc_t
 
out_of_log_•a˚
 (
x˘_i
*, 
x˘_t
*&, 
ss_m
::
fûeoff_t
,

84 
ss_m
::
fûeoff_t
, c⁄° *
logdú
);

85 
w_rc_t
 
gë_¨chived_log_fûe
 (c⁄° *, 
ss_m
::
∑πôi⁄_numbî_t
);

86 
di•©ch_öô
();

	@src/sm/smsh/smsh_error.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~"e_îr‹_def_gí.h
"

36 
	~"°_îr‹_def_gí.h
"

37 
	~"›t_îr‹_def_gí.h
"

38 
	~"fc_îr‹_def_gí.h
"

40 
	~"e_eöfo_bakw_gí.h
"

41 
	~"›t_eöfo_bakw_gí.h
"

42 
	~"°_eöfo_bakw_gí.h
"

43 
	~"fc_eöfo_bakw_gí.h
"

44 
	~<w_debug.h
>

45 
	~"smsh_îr‹.h
"

48 
	$smsh_îr_msg
(c⁄° *
°r
)

50 
	`FUNC
(
smsh_îr_msg
);

52  
w_îr‹_t
::
	`îr‹_°rög
(
	`smsh_îr_code
(
°r
));

53 
	}
}

56 
	$smsh_îr_code
(c⁄° *
x
)

58 
	`FUNC
(
smsh_îr_code
);

59 
w_îr‹_öfo_t
 *
v
;

60 
j
;

63 
	#LOOK
(
a
,
b
,
c
) \

64 
v
 = (
a
);\

65 
j
 = (
b
);\

66  (
v
 !0Ë&& 
j
++ <(
c
) ) {\

67 if(
	`°rcmp
(
v
->
îr°r
,
x
)==0) { \

68  
v
->
îr_num
;\

70 
v
++;\

71 }

	)

72 
	`LOOK
(
e_îr‹_öfo_bakw
,
E_ERRMIN
,
E_ERRMAX
);

73 
	`LOOK
(
°_îr‹_öfo_bakw
,
ST_ERRMIN
,
ST_ERRMAX
);

74 
	`LOOK
(
›t_îr‹_öfo_bakw
,
OPT_ERRMIN
,
OPT_ERRMAX
);

75 
	`LOOK
(
fc_îr‹_öfo_bakw
,
FC_ERRMIN
,
FC_ERRMAX
);

77 #unde‡
LOOK


78  
fcNOSUCHERROR
;

79 
	}
}

84 
	$smsh_îr_«me
(
x
)

86 
	`FUNC
(
smsh_îr_«me
);

88 
	`DBG
(<<"smsh_îr_«mêf‹ " << 
x
);

90 
w_îr‹_öfo_t
 *
v
;

91 
j
;

93 
	#LOOK
(
a
,
b
,
c
) \

94 
v
 = (
a
);\

95 
j
 = (
b
);\

96  (
v
 !0Ë&& 
j
++ <(
c
) ) {\

97 if(
x
 =
v
->
îr_num
) {\

98  
v
->
îr°r
;\

100 
v
++;\

101 }

	)

103 
	`LOOK
(
e_îr‹_öfo_bakw
,
E_ERRMIN
,
E_ERRMAX
);

104 
	`LOOK
(
°_îr‹_öfo_bakw
,
ST_ERRMIN
,
ST_ERRMAX
);

105 
	`LOOK
(
›t_îr‹_öfo_bakw
,
OPT_ERRMIN
,
OPT_ERRMAX
);

106 
	`LOOK
(
fc_îr‹_öfo_bakw
,
FC_ERRMIN
,
FC_ERRMAX
);

108 #unde‡
LOOK


111 
	}
}

	@src/sm/smsh/smsh_error.h

30 #i‚de‡
SSH_ERROR_H


31 
	#SSH_ERROR_H


	)

33 
	~"w_deföes.h
"

38 c⁄° *
smsh_îr_msg
(c⁄° *
°r
);

39 
smsh_îr_code
(c⁄° *
x
);

40 c⁄° *
smsh_îr_«me
(
x
);

	@src/sm/smsh/sort_funcs.cpp

32 
	~"w_deföes.h
"

43 
	~"shñl.h
"

44 
	~"s‹t_funcs.h
"

49 
	#TRACE_VERIFY
 0

	)

59 
w_rc_t


60 
	$com∑ª_ödex_fûe
(

61 
°id_t
 
idx
,

62 
°id_t
 
fid
,

63 
boﬁ
 
did_dìp_c›y
,

64 
n


67 
	`DBG
(<<"----------------Com∑ª_ödex_fûe, idx=" << 
idx
 << " file="

68 << 
fid
 << " dìp=" << 
did_dìp_c›y
);

69 
°rögbuf„r
[
MAXBV
];

70 
sˇn_ödex_i
 
	`sˇni
(
idx
, sˇn_ödex_i::
gt
, 
cvec_t
::
√g_öf
,

71 
sˇn_ödex_i
::
…
, 
cvec_t
::
pos_öf
,

72 
åue


74 
sˇn_fûe_i
 
	`sˇnf
(
fid
, 
ss_m
::
t_cc_fûe
);

76 
boﬁ
 
„of
;

77 
boﬁ
 
õof
;

78 
w_rc_t
 
rc
;

79 
pö_i
* 
pö
;

80 
vec_t
 
key
;

81 
smsize_t
 
kÀn
, 
ñí
;

82 
rid_t
 
rid
;

83 
i
=-1;

86  !(
rc
=
sˇni
.
	`√xt
(
õof
)).
	`is_îr‹
() && !ieof )

89 
i
++;

91 
rc
 = 
sˇnf
.
	`√xt
(
pö
, 0, 
„of
);

92 if(
rc
.
	`is_îr‹
()) {

93 
	`DBG
(<<"rc=" << 
rc
);

94  
	`RC_AUGMENT
(
rc
);

96 
	`w_as£π3
(!
„of
);

97 
kÀn
 = 
MAXBV
;

100 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
MAXBV
);

102 
vec_t
 
ñ
;

103 
ñí
 = (
rid
);

104 
ñ
.
	`put
(&
rid
, 
ñí
);

105 
rc
 = 
sˇni
.
	`cuº
(&
key
, 
kÀn
, &
ñ
, 
ñí
);

106 if(
rc
.
	`is_îr‹
()) {

107 
	`DBG
(<<"rc=" << 
rc
);

108  
	`RC_AUGMENT
(
rc
);

112 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
kÀn
);

114 
	`w_as£π3
(
ñí
 =(
rid
));

116 
	`DBG
(<< 
i
 <<": index keyÜength "

117 << 
kÀn
 << "É»Àngth " << 
ñí
 << "ÉlÙid=" << 
rid
);

118 
	`DBG
(<< 
i
 <<": fûê√xàrid i†" << 
pö
->
	`rid
());

121 
smsize_t
 
off£t
 = 
pö
->
	`body_size
(Ë- (
rid_t
);

123 
pö
->
	`°¨t_byã
()+pö->
	`Àngth
(Ë<
off£t
){

124 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

125 if(
rc
.
	`is_îr‹
()) {

126 
	`DBG
(<<"rc=" << 
rc
);

127  
	`RC_AUGMENT
(
rc
);

129 
	`w_as£π3
(!
„of
);

131 
off£t
 -
pö
->
	`°¨t_byã
();

133 
hdrkk
=0;

134 
	`mem˝y
(&
hdrkk
, 
pö
->
	`hdr
(), (hdrkk));

136 
boﬁ
 
ha¢okey
=0;

137 
	`mem˝y
(&
ha¢okey
, 
pö
->
	`hdr
()+(
hdrkk
), (hasnokey));

139 
rid_t
 
myrid
;

140 if(
off£t
 + (
rid_t
Ë> 
pö
->
	`Àngth
()) {

141 
smsize_t
 
amt
 = 
pö
->
	`Àngth
(Ë- 
off£t
;

142 
	`mem˝y
(&
myrid
, 
pö
->
	`body
(Ë+ 
off£t
, 
amt
);

143 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

144 if(
rc
.
	`is_îr‹
()) {

145 
	`DBG
(<<"rc=" << 
rc
);

146  
	`RC_AUGMENT
(
rc
);

148 
	`w_as£π3
(!
„of
);

149 
	`mem˝y
((*)(&
myrid
)+
amt
, 
pö
->
	`body
(), (
rid_t
) -ámt);

151 
	`mem˝y
(&
myrid
, 
pö
->
	`body
(Ë+ 
off£t
, (
rid_t
));

154 
	`DBG
(<< 
i
 <<": obje˘ " << 
rid


155 << " hd∏ha†vÆuê" << 
hdrkk


156 << " ha¢okey=" << 
ha¢okey


157 << " body c⁄èö†rid " << 
myrid
);

159 if(!
did_dìp_c›y
) {

163 if(
myrid
 !
rid
) {

164 if(!
ha¢okey
) {

165 
sˇn_ödex_i
* 
sˇn2
 = 
√w
 
	`sˇn_ödex_i
(
idx
,

166 
sˇn_ödex_i
::
eq
, 
key
,

167 
sˇn_ödex_i
::
eq
, 
key
,

168 
åue


171 
boﬁ
 
i2eof
;

172 
j
=0;

173 
w_rc_t
 
rc2
;

174  !(
rc2
=
sˇn2
->
	`√xt
(
i2eof
)).
	`is_îr‹
(Ë&& !i2eo‡Ë
j
++;

175 
˚º
 << "Mismatch !!! "

176 << " Fûêôem # " << 
i


177 <<":ÖöÑid " << 
pö
->
	`rid
()

178 << " ha¢okey = " << (
ha¢okey
)

179 << " key " << 
key


180 << " kÀ¿" << 
kÀn


181 << " du∂iˇã†o‡key = " << 
j
-1

182 << 
ídl


183 << " hd∏c⁄èö†vÆuê" << 
hdrkk


184 << 
ídl


185 << " body c⁄èö†rid " << 
myrid


186 << " whûêödex iãm c⁄èö†rid " << 
rid


187 << 
ídl
;

190 
	`DBG
(<<"OK f‹Ñid " << 
rid


191 << " keyÜígth " << 
kÀn
);

194 if(
TRACE_VERIFY
) {

195 
cout


196 << "CIF I:"<<
i
 << "/"<<
n


197 << "Öö->rid(Ë" << 
pö
->
	`rid
()

198 << " KÀn:"<<
kÀn


199 << " Erid:"<<
rid


200 << " H:("<<
hdrkk
 << "," << (
ha¢okey
Ë<< "Ëdìp="<<(
did_dìp_c›y
)

201 << " Brid:" << 
myrid


202 << 
ídl
;

206 
rc
 = 
sˇnf
.
	`√xt
(
pö
, 0, 
„of
);

207 
	`w_as£π3
(
õof
 && 
„of
);

208 if(
rc
.
	`is_îr‹
()) {

209 
	`DBG
(<<"rc=" << 
rc
);

210  
	`RC_AUGMENT
(
rc
);

212 
	`DBG
(<<"----------------Com∑ª_ödex_fûe, idx=" << 
idx
 << " file="

213 << 
fid
 << " dìp=" << 
did_dìp_c›y
 << " DONE; i="

214 << 
i
 << "Ç=" << 
n


216 
	`w_as£π1
(
i
+1==
n
);

217  
RCOK
;

218 
	}
}

225 
w_rc_t


226 
	$cou¡_nuŒs
(

227 
°id_t
 
idx
,

228 
ex≥˘ed_tŸÆ
,

229 
ex≥˘ed_nuŒs


232 
	`DBG
(<<" countÇulls ");

233 
boﬁ
 
õof
=
Ál£
;

234 
w_rc_t
 
rc
;

235 
vec_t
 
key
, 
ñ
;

236 
smsize_t
 
kÀn
, 
ñí
;

238 
n⁄nuŒs
=0, 
nuŒs
=0, 
tŸÆ
=0;

239 
°rögbuf„r
[
MAXBV
];

240 
°rögbuf„r2
[
MAXBV
];

242 
i
=0;

244 
sˇn_ödex_i
 
	`sˇni
(
idx
,

245 
sˇn_ödex_i
::
gt
, 
cvec_t
::
√g_öf
,

246 
sˇn_ödex_i
::
…
, 
cvec_t
::
pos_öf
,

247 
Ál£


249  !–
rc
 = 
sˇni
.
	`√xt
(
õof
)).
	`is_îr‹
() && !ieof ) {

250 
i
++;

251 
ñí
 = (
kÀn
 = 
MAXBV
);

252 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
MAXBV
);

253 
ñ
.
	`ª£t
().
	`put
(
°rögbuf„r2
, 
MAXBV
);

255 
rc
 = 
sˇni
.
	`cuº
(&
key
, 
kÀn
, &
ñ
, 
ñí
);

256 if(
rc
.
	`is_îr‹
()) {

257 
	`DBG
(<<"rc=" << 
rc
);

258  
	`RC_AUGMENT
(
rc
);

260 
	`w_as£π3
(
key
.
	`size
() != 0);

262 if(
rc
.
	`is_îr‹
()) {

263 
	`DBG
(<<"rc=" << 
rc
);

264  
	`RC_AUGMENT
(
rc
);

266 
	`w_as£π3
(
õof
);

267 
n⁄nuŒs
 = 
i
;

270 
i
=0;

272 
vec_t
 
nuŒvec
;

273 
sˇn_ödex_i
 
	`sˇni
(
idx
,

274 
sˇn_ödex_i
::
eq
, 
nuŒvec
,

275 
sˇn_ödex_i
::
eq
, 
nuŒvec
,

276 
åue


278  !–
rc
 = 
sˇni
.
	`√xt
(
õof
)).
	`is_îr‹
() && !ieof ) {

279 
i
++;

280 
ñí
 = (
kÀn
 = 
MAXBV
);

281 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
MAXBV
);

282 
ñ
.
	`ª£t
().
	`put
(
°rögbuf„r2
, 
MAXBV
);

284 
rc
 = 
sˇni
.
	`cuº
(&
key
, 
kÀn
, &
ñ
, 
ñí
);

285 if(
rc
.
	`is_îr‹
()) {

286 
	`DBG
(<<"rc=" << 
rc
);

287  
	`RC_AUGMENT
(
rc
);

289 
	`w_as£π3
(
key
.
	`size
() != 0);

291 if(
rc
.
	`is_îr‹
()) {

292 
	`DBG
(<<"rc=" << 
rc
);

293  
	`RC_AUGMENT
(
rc
);

295 
	`w_as£π3
(
õof
);

296 
nuŒs
=
i
;

299 
i
=0;

301 
vec_t
 
nuŒvec
;

302 
sˇn_ödex_i
 
	`sˇni
(
idx
,

303 
sˇn_ödex_i
::
gt
, 
cvec_t
::
√g_öf
,

304 
sˇn_ödex_i
::
…
, 
cvec_t
::
pos_öf
,

305 
åue


307  !–
rc
 = 
sˇni
.
	`√xt
(
õof
)).
	`is_îr‹
() && !ieof ) {

308 
i
++;

309 
ñí
 = (
kÀn
 = 
MAXBV
);

310 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
MAXBV
);

311 
ñ
.
	`ª£t
().
	`put
(
°rögbuf„r2
, 
MAXBV
);

312 
rc
 = 
sˇni
.
	`cuº
(&
key
, 
kÀn
, &
ñ
, 
ñí
);

313 if(
rc
.
	`is_îr‹
()) {

314 
	`DBG
(<<"rc=" << 
rc
);

315  
	`RC_AUGMENT
(
rc
);

317 
	`w_as£π3
(
key
.
	`size
() != 0);

319 if(
rc
.
	`is_îr‹
()) {

320 
	`DBG
(<<"rc=" << 
rc
);

321  
	`RC_AUGMENT
(
rc
);

323 
	`w_as£π3
(
õof
);

324 
tŸÆ
=
i
;

326 
	`DBG
(<<"cou¡ÇuŒ†found " << 
nuŒs
 << "ÇuŒs, " << 
n⁄nuŒs
 << "Çon-nulls "

327 << 
tŸÆ
 << "Åotal ");

328 
	`DBG
(<<"ex≥˘ed " << 
ex≥˘ed_nuŒs
 << "Çulls, "

329 << 
ex≥˘ed_tŸÆ
 << "Åotal ");

330 
	`w_as£π0
(
nuŒs
 + 
n⁄nuŒs
 =
tŸÆ
);

331 
	`w_as£π0
(
nuŒs
 =
ex≥˘ed_nuŒs
);

332 
	`w_as£π0
(
tŸÆ
 =
ex≥˘ed_tŸÆ
);

333  
RCOK
;

334 
	}
}

336 
w_rc_t


337 
	$cou¡_ªc‹ds
(

338 
°id_t
 
fid
,

339 
ex≥˘ed_tŸÆ


342 
	`W_DO
–
sm
->
	`f‹˚_buf„rs
(
Ál£
) );

344 
boﬁ
 
„of
=
Ál£
;

345 
w_rc_t
 
rc
;

346 
i
=0;

347 
pö_i
 *
pö
;

349 
sˇn_fûe_i
 
	`sˇnf
(
fid
, 
ss_m
::
t_cc_fûe
);

350  !(
rc
=
sˇnf
.
	`√xt
(
pö
, 0, 
„of
)).
	`is_îr‹
() && !feof ) {

351 
i
++;

352 
	`DBG
(<< "cou¡_ªc‹ds: " << 
i
 << "Ñid " << 
pö
->
	`rid
());

354 if(
rc
.
	`is_îr‹
()) {

355 
	`DBG
(<<"rc=" << 
rc
);

356  
	`RC_AUGMENT
(
rc
);

358 
	`w_as£π3
(
„of
);

360 
	`DBG
–<<"--------------- cou¡Ñec‹d†" << 
fid
 << " found " << 
i
 << " OK ");

361 if(
i
 !
ex≥˘ed_tŸÆ
) {

362 
˚º
 <<"i=" << 
i
 << "Éx≥˘ed " << 
ex≥˘ed_tŸÆ
 << 
ídl
 ;

363 
	`w_as£π0
(
i
 =
ex≥˘ed_tŸÆ
);

365  
RCOK
;

366 
	}
}

376 
w_rc_t


377 
	$dñëe_ödex_íåõs
(

378 
°id_t
 
idx
,

379 
°id_t
 
fid
,

380 
smsize_t
 
keyoff£t


383 
_°rögbuf„r
[
MAXBV
+
ALIGNON
];

384 *
°rögbuf„r
 = (*)
	`Æign
((
u_l⁄g
)
_°rögbuf„r
) ;

385 
sˇn_fûe_i
 
	`sˇnf
(
fid
, 
ss_m
::
t_cc_fûe
);

387 
boﬁ
 
„of
;

388 
w_rc_t
 
rc
;

389 
pö_i
* 
pö
;

390 
vec_t
 
key
, 
ñem
;

391 
smsize_t
 
kÀn
, 
ñí
;

392 
rid_t
 
rid
;

393 
i
=0;

395  !(
rc
=
sˇnf
.
	`√xt
(
pö
, 0, 
„of
)).
	`is_îr‹
() && !feof ) {

396 
i
++;

398 
smsize_t
 
ridoff£t
 = 
pö
->
	`body_size
(Ë- (
rid_t
);

399 
kÀn
 = 
ridoff£t
 - 
keyoff£t
;

400 
smsize_t
 
off£t
 = 
keyoff£t
;

402 
	`DBG
(<<" body sizê" << 
pö
->
	`body_size
()

403 << "Ñid off£à" << 
ridoff£t


404 << " key off£à" << 
keyoff£t


405 << " keyÜí " << 
kÀn


409 
pö
->
	`°¨t_byã
()+pö->
	`Àngth
(Ë<
off£t
){

410 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

411 if(
rc
.
	`is_îr‹
()) {

412 
	`DBG
(<<"rc=" << 
rc
);

413  
	`RC_AUGMENT
(
rc
);

415 
	`w_as£π3
(!
„of
);

417 
	`DBG
(<<"pö->°¨t_byã(Ë" << 
pö
->
	`°¨t_byã
());

418 
off£t
 -
pö
->
	`°¨t_byã
();

420 
smsize_t
 
amt
 = 
pö
->
	`Àngth
(Ë- 
off£t
;

421 
	`DBG
(<<"mem˝y(°rögbuf„r, body(Ë+ " <<
off£t
 << ", " << 
amt
 <<")");

422 
	`mem˝y
(
°rögbuf„r
, 
pö
->
	`body
(Ë+ 
off£t
, 
amt
);

424 if(
off£t
 + 
kÀn
 > 
pö
->
	`Àngth
()) {

425 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

426 if(
rc
.
	`is_îr‹
()) {

427 
	`DBG
(<<"rc=" << 
rc
);

428  
	`RC_AUGMENT
(
rc
);

430 
	`w_as£π3
(!
„of
);

431 
off£t
 = 0;

432 
	`DBG
(<<"mem˝y(°rögbuf„∏+" << 
amt


433 << ", body(), " << 
kÀn
-
amt
 <<")");

434 
	`mem˝y
(
°rögbuf„r
+
amt
, 
pö
->
	`body
(), 
kÀn
 -ámt);

437 
key
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
kÀn
);

438 
	`DBG
(<<"keyÉxåa˘ed from orig fûe: kÀn=" <<
kÀn
 << " key=" << 
key
);

440 
off£t
 = 
ridoff£t
;

443 
pö
->
	`°¨t_byã
()+pö->
	`Àngth
(Ë<
off£t
){

444 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

445 if(
rc
.
	`is_îr‹
()) {

446 
	`DBG
(<<"rc=" << 
rc
);

447  
	`RC_AUGMENT
(
rc
);

449 
	`w_as£π3
(!
„of
);

451 
off£t
 -
pö
->
	`°¨t_byã
();

453 if(
off£t
 + (
rid_t
Ë> 
pö
->
	`Àngth
()) {

454 
smsize_t
 
amt
 = 
pö
->
	`Àngth
(Ë- 
off£t
;

455 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

456 
	`mem˝y
(&
rid
, 
pö
->
	`body
(Ë+ 
off£t
, 
amt
);

457 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

458 if(
rc
.
	`is_îr‹
()) {

459 
	`DBG
(<<"rc=" << 
rc
);

460  
	`RC_AUGMENT
(
rc
);

462 
	`w_as£π3
(!
„of
);

463 
off£t
 = 0;

464 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

465 
	`mem˝y
((*)(&
rid
)+
amt
, 
pö
->
	`body
(), (
rid_t
) -ámt);

467 
	`DBG
(<<"c›y ouàrid sèπög from off£à" << 
off£t
);

468 
	`mem˝y
(&
rid
, 
pö
->
	`body
(Ë+ 
off£t
, (
rid_t
));

470 
	`w_as£π3
(
rid
 =
pö
->
	`rid
());

471 
	`DBG
(<<"ridÉxåa˘ed from orig fûe: " <<
rid
);

473 #ifde‡
W_TRACE


480 *
ñ
 = 
°rögbuf„r
+
kÀn
;

481 
ñí
 = 
MAXBV
;

482 
boﬁ
 
found
;

483 
	`DBG
(<<" START DEBUGGING NEW KEY " << 
key


484 << " f‹Ñid " << 
rid
);

486 
	`DBG
(<< " föd_asso¯" << 
key
 );

489 
rc
 = 
sm
->
	`föd_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
);

490 
	`DBG
(<<
rc
);

492 
ñem
.
	`ª£t
().
	`put
(
ñ
, 
ñí
);

493 
	`DBG
(<<"found=" << 
found
 << "ÉÀm = " << 
ñem
);

495 if(!
found
) {

496 
	`DBG
(<<"ERROR: NOT FOUND");

497 
˚º
 << "ERROR: Cannot find indexÉntry for " <<

498 
key
 << " " << 
rid
 <<
ídl
;

500 
	`W_DO
(
rc
);

502 if(
ñí
 !(
rid_t
)) {

503 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

504 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

506 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

514 
ñem
.
	`ª£t
().
	`put
(&
rid
, (
rid_t
));

516 
	`DBG
(<<"**** KEY LEN = " << 
kÀn
 << " f‹Ñid " <<
rid
);

518 
	`DBG
(<< "de°roy " << 
key
 << ","<<
ñem
);

519 
rc
 = 
sm
->
	`de°roy_assoc
(
idx
, 
key
, 
ñem
);

520 
	`DBG
(<< 
rc
);

521 
	`W_DO
(
rc
);

531 
	`DBG
(<< "föd " << 
key
);

532 
ñí
 = 
MAXBV
;

533 
rc
 = 
sm
->
	`föd_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
);

534 
	`DBG
(<< "á·î-dñëêföd checkÑëu∫†" << 
rc


535 << "ánd found=" << 
found
);

536 if(
found
) {

538 if(
ñí
 !(
rid_t
)) {

539 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

540 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

542 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

543 
	`DBG
(<<" found duplicate, butÉlems don't match: OK");

545 
˚º
 << "ERROR: found deleted key,elemÖr: "

546 << 
key
 << " " << 
rid
 <<
ídl
;

549 
	`W_DO
(
rc
);

551 
ñem
.
	`ª£t
().
	`put
(&
rid
, (rid));

552 
	`DBG
(<< "¸óã " << 
key
 << "ÉÀm" << 
ñem
 << "Ñid=" << 
rid
);

553 
	`W_DO
–
sm
->
	`¸óã_assoc
(
idx
, 
key
, 
ñem
) );

555 
	`DBG
(<<" DONE DEBUGGING THIS KEY " );

556 #ifde‡
W_TRACE


560 
	`DBG
(<< "föd " << 
key
);

561 
ñí
 = 
MAXBV
;

562 
	`W_DO
–
sm
->
	`föd_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
) );

563 if(!
found
) {

564 
˚º
 << "ERROR: can't find inserted key,elemÖr: "

565 << 
key
 << " " << 
rid
 <<
ídl
;

567 
	`DBG
(<< "de°roy " << 
key
);

568 
	`W_DO
–
sm
->
	`de°roy_assoc
(
idx
, 
key
, 
ñem
) );

569 
	`DBG
(<< "föd " << 
key
);

570 
ñí
 = 
MAXBV
;

571 
	`W_DO
–
sm
->
	`föd_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
) );

572 if(
found
) {

574 if(
ñí
 !(
rid_t
)) {

575 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

576 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

578 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

579 
	`DBG
(<<" found duplicate, butÉlems don't match: OK");

581 
˚º
 << "ERROR: found deleted key,elemÖr: "

582 << 
key
 << " " << 
rid
 <<
ídl
;

590 #ifde‡
W_TRACE


597 
sˇn_ödex_i
* 
sˇ≈
 = 
√w
 
	`sˇn_ödex_i
(
idx
,

598 
sˇn_ödex_i
::
gt
, 
cvec_t
::
√g_öf
,

599 
sˇn_ödex_i
::
…
, 
cvec_t
::
pos_öf
,

600 
åue


602 
dñëî
 
d4
;

603 
d4
.
	`£t
(
sˇ≈
);

604 
boﬁ
 
eof
=
Ál£
;

605 
i
 = 0; (!(
rc
 = 
sˇ≈
->
	`√xt
(
eof
)).
	`is_îr‹
() && !eof) ; i++) ;

606 if(
i
 > 0) {

607 
˚º
 << " ERROR: INDEX IS NOT EMPTY! c⁄èö†" << 
i


608 << "É¡rõ†" << 
ídl
;

609 
	`w_as£π3
(0);

612 if(
rc
.
	`is_îr‹
()) {

613 
	`DBG
(<<"rc=" << 
rc
);

614  
	`RC_AUGMENT
(
rc
);

616  
RCOK
;

617 
	}
}

620 
	$vîify_ödex
(
n
, 
°id_t
 
°id
, 
boﬁ
 
nuŒsok
, *
°rögbuf„r
,

621 
ty≥d_båì_ã°
 
t
, 
boﬁ
 
ªvî£
, 
h
, c⁄° 
vec_t
 &
zî€s
,

622 
ty≥d_vÆue
 &
k
)

626 
sˇn_ödex_i
* 
sˇ≈
 = 0;

627 
dñëî
 
d4
;

629 
sˇ≈
 = 
√w
 
	`sˇn_ödex_i
(
°id
,

630 
sˇn_ödex_i
::
gt
, 
cvec_t
::
√g_öf
,

631 
sˇn_ödex_i
::
…
, 
cvec_t
::
pos_öf
,

632 
åue


635 
	`DBG
(<<"d4.set scanp");

636 
d4
.
	`£t
(
sˇ≈
);

638 
	`DBG
(<<"---------------vîify_ödex: Sèπög index sˇ¿°‹ê" << 
°id
 );

639 
boﬁ
 
eof
;

640 
w_rc_t
 
rc
;

641 
i
;

642 
pö_i
 
h™dÀ
;

643 
vec_t
 
ödexkey
;

644 
vec_t
 
ödexñ
;

645 
smsize_t
 
kÀn
, 
ñí
;

646 
rid_t
 
ödex_rid
;

647 
rid_t
 
body_rid
;

649 
k
.
_u
.
i8_num
 = 0;

650 
i
 = 0; (!(
rc
 = 
sˇ≈
->
	`√xt
(
eof
)).
	`is_îr‹
() && !eof) ; i++)

656 
kÀn
 = 
k
.
_Àngth
;

657 if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

658 
ödexkey
.
	`ª£t
().
	`put
(
°rögbuf„r
, 
MAXBV
);

659 
k
.
_u
.
bv
 = 
°rögbuf„r
;

661 
ödexkey
.
	`ª£t
().
	`put
(&
k
.
_u
, 
kÀn
);

665 
ñí
 = (
ödex_rid
);

666 
ödexñ
.
	`put
(&
ödex_rid
, 
ñí
);

669 
	`W_IGNORE
–
sˇ≈
->
	`cuº
(&
ödexkey
, 
kÀn
, &
ödexñ
, 
ñí
));

671 
	`DBG
(<< 
i
 <<" :----------------");

672 
	`DBG
(<< 
i
 <<": kÀn=" << 
kÀn
 << " key" << 
ödexkey
);

673 
	`DBG
(<< 
i
 <<":ÉÀn=" << 
ñí
 << "ÉÀm‘id)=" << 
ödex_rid
);

675 if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

676 
	`w_as£π3
(
k
.
_u
.
bv
 =
°rögbuf„r
);

677 if(
nuŒsok
) {

678 
	`w_as£π1
(
kÀn
 < 
MAXBV
+1);

680 
	`w_as£π1
(
kÀn
 >1 && kÀ¿< 
MAXBV
+1);

683 if(
nuŒsok
) {

684 
	`w_as£π1
(
kÀn
 =
	`smsize_t
(
k
.
_Àngth
) ||

685 
kÀn
 == 0);

687 
	`w_as£π1
(
kÀn
 =
	`smsize_t
(
k
.
_Àngth
));

690 
	`w_as£π1
(
ñí
 =
	`smsize_t
((
rid_t
)));

696 
keysour˚
 = 0;

697 if(
kÀn
 > 0) {

698 
	`c⁄vît_back
(
k
, 
keysour˚
, 
t
, 
°rögbuf„r
);

699 
	`DBG
(<< 
i
 <<": index sˇ¿found key " << 
keysour˚
 << " obje˘ i†" << 
ödex_rid
 );

700 if(
ªvî£
) {

701 
	`w_as£π0
(0-
keysour˚
 =
i
 - 
h
);

703 
t
) {

704 
ã°_i1
:

705 
ã°_i2
:

706 
ã°_i4
:

707 
ã°_i8
:

708 
ã°_f4
:

709 
ã°_f8
:

714 
ã°_b1
:

715 
ã°_b23
:

716 
ã°_bœrge
:

717 
ã°_bv
:

718 
ã°_u1
:

719 
ã°_u2
:

720 
ã°_u4
:

721 
ã°_u8
:

726 
	`w_as£π1
(0);

731 
	`DBG
(<< 
i
 <<": index scan found NO key " );

737 
smsize_t
 
èû
=0;

739 
èû
 = (
rid_t
);

742 
	`W_IGNORE
(
h™dÀ
.
	`pö
(
ödex_rid
, 
zî€s
.
	`size
()));

744 
smsize_t
 
off£t
 = 
zî€s
.
	`size
(Ë- 
h™dÀ
.
	`°¨t_byã
();

745 
smsize_t
 
amt
 = 
h™dÀ
.
	`Àngth
(Ë- 
off£t
;

746 
smsize_t
 
l
 = 
kÀn
;

747 if(
kÀn
 == 0) {

751 
l
 = 
èû
;

754 
ty≥d_vÆue
 
bodykey
;

755 if(
kÀn
 == 0) {

756 
	`mem˝y
(
°rögbuf„r
, 
h™dÀ
.
	`body
()+
off£t
, 
amt
);

757 } if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

758 
	`mem˝y
(
°rögbuf„r
, 
h™dÀ
.
	`body
()+
off£t
, 
amt
);

759 
bodykey
.
_u
.
bv
 = 
°rögbuf„r
;

761 
	`mem˝y
(&
bodykey
.
_u
, 
h™dÀ
.
	`body
()+
off£t
, 
amt
);

763 
l
 -
amt
;

764 
boﬁ
 
eof
;

765 
	`W_IGNORE
(
h™dÀ
.
	`√xt_byãs
(
eof
));

770 
	`w_as£π1
(!
eof
);

771 if(
kÀn
 != 0) {

772 
	`w_as£π1
(
h™dÀ
.
	`Àngth
(Ë=
l
 + 
èû
);

774 if(
kÀn
 == 0) {

775 
	`mem˝y
(
°rögbuf„r
+
amt
, 
h™dÀ
.
	`body
(), 
l
);

776 } if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

778 
	`mem˝y
(
°rögbuf„r
+
amt
, 
h™dÀ
.
	`body
(), 
l
);

779 
bodykey
.
_u
.
bv
 = 
°rögbuf„r
;

782 
	`mem˝y
–(*)(&
bodykey
.
_u
)+
amt
, 
h™dÀ
.
	`body
(), 
l
);

785 
hdrkk
;

786 
	`mem˝y
–&
hdrkk
, 
h™dÀ
.
	`hdr
(), (hdrkk));

787 
boﬁ
 
ha¢okey
;

788 
	`mem˝y
(&
ha¢okey
, 
h™dÀ
.
	`hdr
()+(
hdrkk
), (hasnokey));

790 
	`DBG
(<< 
i
 <<": hd∏c⁄èö†öà" << 
hdrkk
 << " ha¢okey " << 
ha¢okey
);

792 
rid_t
 
body_rid
;

794 if(
kÀn
 == 0) {

795 
	`mem˝y
–&
body_rid
, 
°rögbuf„r
, 
èû
);

797 
	`mem˝y
–&
body_rid
, 
h™dÀ
.
	`body
()+
l
, 
èû
);

799 
	`DBG
(<< 
i
 <<":Ñid from index i†" <<
ödex_rid


800 << " oid i¿obje˘ i†" << 
body_rid
 );

801 if(
body_rid
 !
ödex_rid
) {

802 
˚º
 << "Mismatched OIDs "

803 << " index ha†" << 
ödex_rid


804 << " body ha†" << 
body_rid


805 << " hd∏ha†" << 
hdrkk


806 <<
ídl
;

809 
	`W_IGNORE
(
h™dÀ
.
	`√xt_byãs
(
eof
));

810 
	`w_as£π1
(
eof
);

812 if(
kÀn
 == 0) {

813 
	`DBG
(<< 
i
 <<": object contains NULL key ");

815 if(
TRACE_VERIFY
) {

816 
cout


817 << "VI I:"<<
i
 << "/"<<
n


819 << " Erid:"<<
ödex_rid


820 << " H:("<<
hdrkk
 << "," << (
ha¢okey
) << ")"

822 << " Brid:" << 
body_rid


823 << 
ídl
;

826 } if(
kÀn
>0) {

827 
bodyk
;

828 
	`c⁄vît_back
(
bodykey
, 
bodyk
, 
t
, 
°rögbuf„r
);

829 
	`DBG
(<< 
i
 <<": obje˘ c⁄èö†key " << 
bodyk
);

831 if(
bodyk
 !
keysour˚
) {

832 
˚º
 << "Mism©ched key, obje˘" <<
ídl
;

833 
˚º
 << "...ödex key i†" << 
keysour˚
 <<
ídl
;

834 
˚º
 << "...ödexÑid i†" << 
ödex_rid
 << 
ídl
;

835 
˚º
 << "...key i¿body i†" << 
bodyk
 <<
ídl
;

836 
˚º
 << "...key vÆuêö hd∏i†" << 
hdrkk
 <<
ídl
;

837 
˚º
 << "...bodyÑid i†" << 
body_rid
 <<
ídl
;

840 if(
TRACE_VERIFY
) {

841 
cout


842 << "VI I:"<<
i


843 << " K:"<<
keysour˚


844 << " Erid:"<<
ödex_rid


845 << " H:("<<
hdrkk
 << "," << (
ha¢okey
) << ")"

846 << " Bkey:" << 
bodyk


847 << " Brid:" << 
body_rid


848 << 
ídl
;

852 
	`DBG
(<<"sˇ¿.√xàyõld†" << 
rc
 << "Éof=" << 
eof
);

853 
	`w_as£π1
(!
rc
.
	`is_îr‹
());

855 if(
i
 !
n
) {

858 
	`w_as£π1
(0);

860 
	`DBG
(<<"----------------------------- sˇ¿o‡" << 
°id
 << " is finished");

863 
	}
}

879 
	$t_ã°_bulklﬂd_öt_båì
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

881 
boﬁ
 
unique_ˇ£
=
Ál£
;

887 i‡(
	`check
(
ù
, "vidÇkey†keyty≥ÇuŒok|nŸnuŒ", 
ac
, 5))

888  
TCL_ERROR
;

890 
nkeys_¨g
 = 2;

891 
vid_¨g
 = 1;

892 
ty≥_¨g
 = 3;

893 
nuŒ_¨g
 = 4;

895 
boﬁ
 
nuŒsok
=
Ál£
;

896 if(
	`°rcmp
(
av
[
nuŒ_¨g
], "nullok")==0) {

897 
nuŒsok
 = 
åue
;

898 } if(
	`°rcmp
(
av
[
nuŒ_¨g
], "notnull")==0) {

899 
nuŒsok
 = 
Ál£
;

901 
˚º
 << "Badárgumíà#" << 
nuŒ_¨g


903 << " gŸ " << 
av
[
nuŒ_¨g
]

904 <<
ídl
;

905  
TCL_ERROR
;

908 
runsize
 = 3;

912 
d©a_sz
 = 
globÆ_sm_c⁄fig_öfo
.
lg_ªc_∑ge_•a˚
;

914 *
g¨bage
 = 
√w
 [
d©a_sz
-1];

915 
	`mem£t
(
g¨bage
, '0', 
d©a_sz
 -1);

916 
w_auto_dñëe_¨øy_t
<> 
	`dñg¨bage
(
g¨bage
);

917 
vec_t
 
	`zî€s
(
g¨bage
, 
d©a_sz
-1);

919 
n
 = 
	`©oi
(
av
[
nkeys_¨g
]);

923 c⁄° 
boﬁ
 
ªvî£
 = 
Ál£
;

924 
°rögbuf„r
[
MAXBV
];

925 
ty≥d_vÆue
 
k
;

926 
vec_t
 
d©a
;

928 c⁄° *
ã°
=
av
[
ty≥_¨g
];

929 
ty≥d_båì_ã°
 
t
 = 
	`cvt2ty≥
(
ã°
);

938 
t
)

940 
ã°_bv
:

941 if(
n
 > 
MAXBV
-1) {

942 
˚º
 << "Can't do b*1000Åest with moreÅhan "

943 << 
MAXBV
-1 << "Ñec‹d†- s‹ry" << 
ídl
;

944  
TCL_ERROR
;

947 
ã°_•©ül
:

948 
ã°_nosuch
:

949 
ã°_b23
:

950 
ã°_bœrge
:

954 
ã°_b1
:

955 
ã°_i1
:

956 
ã°_u1
:

957 if(
n
 > (0x7f)) {

958 
cout
 << "Reducög #key vÆue†‰om " << 
n
 << "Åo " << (0x7f)

960 << 
ídl
;

961 
n
 = (0x7f);

965 
ã°_i2
:

966 
ã°_u2
:

967 if(
n
 > (0x7fff)) {

968 
cout
 << "Reducög #key vÆue†‰om " << 
n
 << "Åo " << (0x7fff)

970 << 
ídl
;

971 
n
 = (0x7fff);

975 
ã°_i4
:

976 
ã°_f4
:

977 
ã°_u4
:

978 if(
n
 > (0x7fffffff)) {

979 
cout
 << "Reducög #key vÆue†‰om " << 
n


982 << 
ídl
;

983 
n
 = (0x7fffffff);

987 
ã°_i8
:

988 
ã°_f8
:

989 
ã°_u8
:

992 c⁄° 
h
 = 
n
/2;

994 c⁄° * 
kd
 = 
	`check_com¥ess_Êag
(
ã°
);

995 
CSKF
 
lfunc
;

996 
gíîic_CSKF_cookõ
 
lfunc_cookõ
;

997 
lfunc_cookõ
.
off£t
 = 0;

998 
CF
 
cmpfunc
 = 
	`gëcmpfunc
(
t
, 
lfunc
,

999 
	`key_cookõ_t
(&
lfunc_cookõ
));

1001 
lfunc_cookõ
.
off£t
 = 
zî€s
.
	`size
();

1002 
lfunc_cookõ
.
ö_hdr
 = 
Ál£
;

1003 
k
.
_Àngth
 = 
lfunc_cookõ
.
Àngth
;

1005 
smsize_t
 
Àn_höt
 = 
k
.
_Àngth
 + 
zî€s
.
	`size
();

1006 
	`DBG
(<<"mö_ªc_sz/Àn_höà" << 
Àn_höt


1007 << " k._Àngth " << 
k
.
_Àngth


1008 << " zî€s.size(Ë" << 
zî€s
.
	`size
());

1011 
s‹t_keys_t
 
	`kl
(1);

1014 
bad
=0;

1016 if(
kl
.
	`£t_unique
(
unique_ˇ£
)Ë{ 
	`DBG
(<<""); 
bad
++; }

1017 if(
kl
.
	`£t_nuŒ_unique
(
unique_ˇ£
)Ë{ 
	`DBG
(<<""); 
bad
++; }

1018 if(
kl
.
	`£t_as˚ndög
()Ë{ 
	`DBG
(<<""); 
bad
++; }

1022 
kl
.
	`£t_°abÀ
(
Ál£
);

1025 if(
kl
.
	`£t_f‹_ödex
(
lfunc
, 
	`key_cookõ_t
(&
lfunc_cookõ
))) {

1026 
	`DBG
(<<""); 
bad
++; }

1027 if(
bad
>0) {

1028 
	`w_ª£t_°r°ªam
(
t˛out
);

1029 
t˛out
 << 
	`smsh_îr_«me
(
ss_m
::
eBADARGUMENT
Ë<< 
íds
;

1030 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1031 
	`w_ª£t_°r°ªam
(
t˛out
);

1032  
TCL_ERROR
;

1036 i‡((
t
 =
ã°_b1
)||— =
ã°_bv
)||— =
ã°_b23
)||— =
ã°_bœrge
)) {

1037 
kl
.
	`£t_s‹tkey_dîived
(0,

1038 
ã°CSKF
,

1039 (
key_cookõ_t
)
zî€s
.
	`size
(),

1040 
Ál£
,

1041 
åue
,

1042 
åue
,

1043 
cmpfunc


1045 } if(
nuŒsok
) {

1046 
kl
.
	`£t_s‹tkey_dîived
(0,

1047 
ã°CSKF
,

1048 (
key_cookõ_t
)
zî€s
.
	`size
(),

1049 
Ál£
,

1050 
Ál£
,

1051 
Ál£
,

1052 
cmpfunc


1055 
kl
.
	`£t_s‹tkey_fixed
(0,

1057 
zî€s
.
	`size
(), 
k
.
_Àngth
,

1058 
Ál£
,

1059 
Ál£
,

1060 
Ál£
,

1061 
cmpfunc


1065 
dñëî
 
d1
;

1066 
dñëî
 
d2
;

1068 
°id_t
 
°id
;

1069 
°id_t
 
fid
;

1070 
vid_t
 
vid
;

1072 
	`DO
–
sm
->
	`¸óã_ödex
(
	`©oi
(
av
[
vid_¨g
]),

1074 
sm
->
t_båì
,

1075 
ss_m
::
t_lﬂd_fûe
, 
kd
, ss_m::
t_cc_kvl
, 
°id


1077 
	`DBG
(<<"d1.£à" << 
°id
);

1078 
d1
.
	`£t
(
°id
);

1079 
	`DO
–
sm
->
	`¸óã_fûe
(
	`©oi
(
av
[
vid_¨g
]), 
fid
, 
ss_m
::
t_lﬂd_fûe
) );

1080 
	`DBG
(<<"d2.£à" << 
fid
);

1081 
d2
.
	`£t
(
fid
);

1082 
vid
 = 
°id
.
vﬁ
;

1084 
numnuŒs
=0;

1098 
i
;

1099 
rid_t
 
rid
;

1100 
i
 = 0; i < 
n
; i++) {

1101 
kk
 = 
i
 - 
h
;

1102 if(
ªvî£
Ë
kk
 = 0 - kk;

1104 
	`c⁄vît_to
(
kk
, 
k
, 
t
, 
°rögbuf„r
);

1106 
boﬁ
 
ha¢okey
=
Ál£
;

1108 if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

1109 
	`w_as£π3
(
k
.
_u
.
bv
 =
°rögbuf„r
);

1112 
d©a
.
	`ª£t
().
	`put
(
zî€s
);

1114 
	`DBG
(<< 
i
 << ": d©®c⁄èö†zve¯À¿" << 
d©a
.
	`size
());

1115 if(
nuŒsok
 && ((
i
 & 0x1)== 0x1)) {

1117 
	`DBG
(<<
i
 << ": NULL key");

1118 
ha¢okey
=
åue
;

1119 
numnuŒs
++;

1120 } if(
t
 =
ã°_bv
 ||Å =
ã°_b23
 ||Å =
ã°_bœrge
) {

1124 
w_o°r°ªam
 
s
;

1125 
s
 << "n" << 
k
.
_Àngth
;

1126 
	`°r˝y
(
°rögbuf„r
, 
s
.
	`c_°r
());

1129 
	`DBG
(<< 
i
 << ":...áµídög såög f‹Üígth " << 
k
.
_Àngth


1130 <<":" << 
k
.
_u
.
bv


1132 
d©a
.
	`put
(
k
.
_u
.
bv
, k.
_Àngth
);

1134 
	`DBG
(<< 
i
 << ":...áµídög key o‡Àngth " << 
k
.
_Àngth
);

1135 
d©a
.
	`put
(&
k
.
_u
, k.
_Àngth
);

1138 
vec_t
 
	`hdr
(&
kk
, (kk));

1139 
hdr
.
	`put
(&
ha¢okey
, (hasnokey));

1141 
	`DBG
(<< 
i
 << ":... hódî c⁄èö†" << 
kk


1142 << "ánd ha¢okey " << 
ha¢okey
);

1143 
	`DBG
(<< 
i
 << ":... body c⁄èö†(bef‹êoid i†addedË" << 
d©a
);

1147 
vec_t
 
	`oid
(&
rid
, (rid));

1148 
	`DO
–
sm
->
	`¸óã_ªc
–
fid
,

1149 
hdr
,

1150 
Àn_höt
,

1151 
d©a
,

1152 
rid
) );

1153 
	`DBG
(<< 
i
 << ":...Ñid " << 
rid


1154 << " hd∏(" << 
kk
 << ", ha¢okey " << 
ha¢okey
 << ")"

1156 << 
d©a
.
	`size
(Ë<< "+" << 
oid
.size() << ")"

1158 if(
TRACE_VERIFY
) {

1159 
cout


1160 <<"¸óãdÑe¯I: " << 
i
 << " : dîived from " << 
kk


1161 <<"Ñid i†" << 
rid


1162 <<" ha¢okey " << 
ha¢okey


1163 <<" sizêi†" << 
d©a
.
	`size
()

1164 << "+" << 
oid
.
	`size
()

1165 << 
ídl
;

1168 
	`DO
–
sm
->
	`≠≥nd_ªc
(
rid
, 
oid
) );

1171 
	`DO
(
	`cou¡_ªc‹ds
(
fid
, 
n
));

1176 
dñëî
 
d3
;

1177 
°id_t
 
ofid
;

1179 
	`DO
–
sm
->
	`¸óã_fûe
(
vid
, 
ofid
, 
ss_m
::
t_lﬂd_fûe
) );

1180 
	`DBG
(<<"d3.£à" << 
fid
);

1181 
d3
.
	`£t
(
ofid
);

1185 
	`DO
–
sm
->
	`s‹t_fûe
(

1186 
fid
,

1187 
ofid
,

1189 &
vid
,

1190 
kl
,

1191 
Àn_höt
,

1192 
runsize
,

1193 
runsize
*
ss_m
::
∑ge_sz
));

1194 
	`DBG
(<<"------------S‹àfûêo‡fid=" << 
fid
 << " i¡ÿouçuàfûê" << 
ofid
 << " done");

1196 
	`DO
(
	`cou¡_ªc‹ds
(
ofid
, 
n
));

1198 if((
t
 =
ã°_bv
Ë&& !
nuŒsok
) {

1203 
ck
 = 
	`check_fûe_is_s‹ãd
(
ofid
, 
kl
,

1204 ((
t
 =
ã°_bv
Ë&& !
nuŒsok
)

1206 if(
ck
) {

1207 
˚º
 << "check_fûe_is_s‹ãd faûed,Ñós⁄=" << 
ck
 <<
ídl
;

1208  
TCL_ERROR
;

1209 
	`DBG
(<<"Check output file done");

1211 
˚º
 << "check_fûe_is_s‹ãd OK" <<
ídl
;

1214 
ck
 = 
	`check_fûe_is_s‹ãd2
(
ofid
, 
kl
, 
n
, 
numnuŒs
, 
t
);

1215 
	`w_as£π0
(
ck
==0);

1219 
	`DBG
(<<"{------------BulkÜﬂd i¡ÿ" << 
°id
 << " from " << 
ofid
 << " started ...");

1220 
sm_du_°©s_t
 
°©s
;

1221 
	`DO
–
sm
->
	`bulkld_ödex
(
°id
, 1, &
ofid
, 
°©s
, 
Ál£
, false) );

1222 
	`DBG
(<<"------------BulkÜﬂd i¡ÿ" << 
°id
 << " from " << 
ofid
 << " DONE }");

1224 
	`DO
(
	`cou¡_nuŒs
(
°id
, 
n
, 
numnuŒs
));

1235 
	`vîify_ödex
(
n
, 
°id
, 
nuŒsok
, 
°rögbuf„r
, 
t
, 
ªvî£
, 
h
, 
zî€s
, 
k
);

1240 
	`DBG
(<<"--------------------------- com∑ª_ödex_fûê #" << 
n
);

1241 
w_rc_t
 
rc
 = 
	`com∑ª_ödex_fûe
(
°id
, 
ofid
, 
Ál£
, 
n
);

1242 
	`DBG
(<<"rc=" << 
rc
);

1243 
	`DO
(
rc
);

1251 
°id_t
 
ofid
;

1252 
dñëî
 
d3
;

1254 
	`DO
–
sm
->
	`¸óã_fûe
(
vid
, 
ofid
, 
ss_m
::
t_lﬂd_fûe
) );

1255 
	`DBG
(<<"d3.£à" << 
fid
);

1256 
d3
.
	`£t
(
ofid
);

1258 if(
kl
.
	`£t_f‹_fûe
(
åue
 ,Årue ,

1259 
Ál£
 )){

1260 
	`DBG
(<<"set_for_file deep, keep, carry_objÑeturnsÅrue");

1267 
	`DO
–
sm
->
	`s‹t_fûe
(
fid
,

1268 
ofid
,

1269 1, &
vid
,

1270 
kl
,

1271 
Àn_höt
,

1272 
runsize
,

1273 
runsize
*
ss_m
::
∑ge_sz
));

1275 
	`DBG
(<<"--------------Re-s‹àfûê" << 
fid
 << " i¡ÿouçuàfûê" << 
ofid
 << " done");

1278 
	`DBG
(<<" verify deep copy ");

1279 
w_rc_t
 
rc
 = 
	`com∑ª_ödex_fûe
(
°id
, 
ofid
, 
åue
, 
n
);

1280 
	`DBG
(<<"rc=" << 
rc
);

1281 
	`DO
(
rc
);

1286 
	`DBG
(<<"--------------- DñëêödexÉ¡rõ†idx=" << 
°id
);

1287 
w_rc_t
 
rc
 = 
	`dñëe_ödex_íåõs
(
°id
,

1288 
fid
,

1289 
zî€s
.
	`size
());

1290 
	`DBG
(<<"rc=" << 
rc
);

1291 
	`DO
(
rc
);

1294 
	`DBG
(<<"Leaving scope of d1, d2");

1297 
	`DBG
(<<"LEFT scope of d1, d2");

1298  
TCL_OK
;

1299 
	}
}

	@src/sm/smsh/sort_funcs.h

30 #i‚de‡
SORT_FUNCS_H


31 
	#SORT_FUNCS_H


	)

33 
	~"w_deföes.h
"

38 
	~<c˘y≥
>

39 
	~<umemcmp.h
>

41 
	#MAXBV
 0x7f

	)

42 
	smëad©a
 {

43 
ty≥d_båì_ã°
 
	mt
;

44 
smsize_t
 
	moff£t
;

45 
smsize_t
 
	mÀngth
;

46 
boﬁ
 
	mÆig√d
;

47 
boﬁ
 
	mfixed
;

48 
boﬁ
 
	mÀxico
;

49 
boﬁ
 
	mnuŒabÀ
;

50 
boﬁ
 
	mdîived
;

51 
NORET
 
mëad©a
(Ë: 
t
(
ã°_nosuch
),

52 
off£t
(0), 
Àngth
(0), 
Æig√d
(
Ál£
), 
fixed
(false),

53 
Àxico
(
Ál£
), 
nuŒabÀ
(Ál£), 
dîived
(false) {}

60 
nbox_t
 
univî£
;

62 
w_rc_t


63 
‹igöÆboxCSKF
(

64 c⁄° 
rid_t
& 
rid
,

65 c⁄° 
obje˘_t
& 
ö_obj
,

66 
key_cookõ_t
 
cookõ
,

67 
Á˘‹y_t
& 
öã∫Æ
,

68 
skey_t
* 
out


71 
w_rc_t


72 
gë_key_öfo
(

73 c⁄° 
rid_t
& ,

74 c⁄° 
obje˘_t
& ,

75 
key_cookõ_t
 ,

76 
Á˘‹y_t
& ,

77 
skey_t
*

80 
w_rc_t


81 
mhûbît
 (

82 c⁄° 
rid_t
& ,

83 c⁄° 
obje˘_t
& ,

84 
key_cookõ_t
 ,

85 
Á˘‹y_t
& ,

86 
skey_t
*

88 
w_rc_t


89 
⁄ehûbît
 (

90 c⁄° 
rid_t
& ,

91 c⁄° 
obje˘_t
& ,

92 
key_cookõ_t
 ,

93 
Á˘‹y_t
& ,

94 
skey_t
*

96 
w_rc_t


97 
l⁄ehûbît
 (

98 c⁄° 
rid_t
& ,

99 c⁄° 
obje˘_t
& ,

100 
key_cookõ_t
 ,

101 
Á˘‹y_t
& ,

102 
skey_t
*

106 
make_øndom_Æpha
(*
obje˘
, 
w_ba£_t
::
uöt4_t
 
Àngth
);

109 
make_øndom_box
(*
obje˘
, 
w_ba£_t
::
uöt4_t
 
Àngth
);

112 
check_fûe_is_s‹ãd
–
°id_t
 
fid
, 
s‹t_keys_t
&
kl
, 
boﬁ
 
do_com∑ª
);

114 
check_fûe_is_s‹ãd2
(
°id_t
 
fid
, 
s‹t_keys_t
&
kl
, 
n
, 
nuŒs
,

115 
ty≥d_båì_ã°
 
t
 );

117 ˛as†
	cdñëî
 {

118 
	m¥iv©e
:

119 
°id_t
 
fid
;

120 
sˇn_ödex_i
* 
	msˇ≈
;

121 
sˇn_π_i
* 
	msˇƒ
;

122 
	mpublic
:

123 
	$dñëî
(Ë: 
	`fid
(
°id_t
::
nuŒ
),

124 
	`sˇ≈
(0),

125 
	$sˇƒ
(0)

127 
	$dñëî
(
°id_t
& 
s
Ë: 
	`fid
(s),

128 
	`sˇ≈
(0),

129 
	$sˇƒ
(0)

130 {
	}
}

131 
	$£t
(
°id_t
&
s
Ë{ 
fid
 = s; 
	}
}

132 
	$£t
(
sˇn_ödex_i
* 
s
Ë{ 
sˇ≈
 = s; 
	}
}

133 
	$£t
(
sˇn_π_i
* 
s
Ë{ 
sˇƒ
 = s; 
	}
}

134 ~
dñëî
();

135 
dißrm
();

138 
CF
 
gëcmpfunc
(
ty≥d_båì_ã°
 
t
,

139 
CSKF
& 
Àxify_func
, 
key_cookõ_t
 
lfunc_cookõ
) ;

141 
c⁄vît_back
(
ty≥d_vÆue
 &
k
, & 
kk
, 
ty≥d_båì_ã°
 
t
, *
°rögbuf„r
 ) ;

143 
c⁄vît_to
(
kk
, 
ty≥d_vÆue
 &
k
, 
ty≥d_båì_ã°
 
t
, *
°rögbuf„r
 ) ;

145 
w_rc_t


146 
…e°CSKF
(

147 c⁄° 
rid_t
& 
rid
,

148 c⁄° 
obje˘_t
& 
ö_obj
,

149 
key_cookõ_t
 
k
,

150 
Á˘‹y_t
& 
öã∫Æ
,

151 
skey_t
* 
out


153 
w_rc_t


154 
ã°CSKF
(

155 c⁄° 
rid_t
& 
rid
,

156 c⁄° 
obje˘_t
& 
ö_obj
,

157 
key_cookõ_t
 
k
,

158 
Á˘‹y_t
& 
öã∫Æ
,

159 
skey_t
* 
out


	@src/sm/smsh/sort_funcs2.cpp

30 
	~"w_deföes.h
"

41 
	~"shñl.h
"

42 
	~"s‹t_funcs.h
"

45 
	gdu∂iˇã_vÆues
[4] = { -10, 17, 10, 20 };

46 c⁄° 
nbox_t
 
du∂iˇã_box
(2, 
du∂iˇã_vÆues
);

47 
	gnum_du∂iˇã_box
=0;

49 
	$°›
() {

50 
	}
}

61 
w_rc_t


62 
	$dñëe_πªe_íåõs
(

63 
°id_t
 
idx
,

64 
°id_t
 
fid
,

65 
smsize_t
 
keyoff£t


68 
°rögbuf„r
[
MAXBV
];

69 
sˇn_fûe_i
 
	`sˇnf
(
fid
, 
ss_m
::
t_cc_fûe
);

71 
boﬁ
 
nuŒfound
=
Ál£
;

72 
boﬁ
 
„of
;

73 
w_rc_t
 
rc
;

74 
pö_i
* 
pö
;

75 
nbox_t
 
key
;

76 
vec_t
 
ñem
;

77 
smsize_t
 
kÀn
, 
ñí
;

78 
rid_t
 
rid
;

79 
i
=0;

80  !(
rc
=
sˇnf
.
	`√xt
(
pö
, 0, 
„of
)).
	`is_îr‹
() && !feof ) {

81 
i
++;

83 
smsize_t
 
ridoff£t
 = 
pö
->
	`body_size
(Ë- (
rid_t
);

84 
kÀn
 = 
ridoff£t
 - 
keyoff£t
;

86 
smsize_t
 
off£t
 = 
keyoff£t
;

89 
pö
->
	`°¨t_byã
()+pö->
	`Àngth
(Ë<
off£t
){

90 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

91 if(
rc
.
	`is_îr‹
()) {

92 
	`DBG
(<<"rc=" << 
rc
);

93  
	`RC_AUGMENT
(
rc
);

95 
	`w_as£π3
(!
„of
);

97 
off£t
 -
pö
->
	`°¨t_byã
();

99 
smsize_t
 
amt
 = 
pö
->
	`Àngth
(Ë- 
off£t
;

100 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

101 
	`mem˝y
(&
°rögbuf„r
, 
pö
->
	`body
(Ë+ 
off£t
, 
amt
);

103 if(
off£t
 + 
kÀn
 > 
pö
->
	`Àngth
()) {

104 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

105 if(
rc
.
	`is_îr‹
()) {

106 
	`DBG
(<<"rc=" << 
rc
);

107  
	`RC_AUGMENT
(
rc
);

109 
	`w_as£π3
(!
„of
);

110 
off£t
 = 0;

111 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

112 
	`mem˝y
(
°rögbuf„r
+
amt
, 
pö
->
	`body
(), 
kÀn
 -ámt);

115 
key
.
	`nuŒify
();

116 
key
.
	`byãs2box
(
°rögbuf„r
, 
kÀn
);

118 
off£t
 = 
ridoff£t
;

121 
pö
->
	`°¨t_byã
()+pö->
	`Àngth
(Ë<
off£t
){

122 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

123 if(
rc
.
	`is_îr‹
()) {

124 
	`DBG
(<<"rc=" << 
rc
);

125  
	`RC_AUGMENT
(
rc
);

127 
	`w_as£π3
(!
„of
);

129 
off£t
 -
pö
->
	`°¨t_byã
();

131 if(
off£t
 + (
rid_t
Ë> 
pö
->
	`Àngth
()) {

132 
smsize_t
 
amt
 = 
pö
->
	`Àngth
(Ë- 
off£t
;

133 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

134 
	`mem˝y
(&
rid
, 
pö
->
	`body
(Ë+ 
off£t
, 
amt
);

135 
rc
 = 
pö
->
	`√xt_byãs
(
„of
);

136 if(
rc
.
	`is_îr‹
()) {

137 
	`DBG
(<<"rc=" << 
rc
);

138  
	`RC_AUGMENT
(
rc
);

140 
	`w_as£π3
(!
„of
);

141 
off£t
 = 0;

142 
	`DBG
(<<"off£t=" <<
off£t
 << "ámt=" << 
amt
);

143 
	`mem˝y
((*)(&
rid
)+
amt
, 
pö
->
	`body
(), (
rid_t
) -ámt);

145 
	`DBG
(<<"c›y ouàrid sèπög from off£à" << 
off£t
);

146 
	`mem˝y
(&
rid
, 
pö
->
	`body
(Ë+ 
off£t
, (
rid_t
));

148 
	`w_as£π3
(
rid
 =
pö
->
	`rid
());

150 #ifde‡
W_TRACE


158 *
ñ
 = 
°rögbuf„r
+
kÀn
;

159 
ñí
 = 
MAXBV
;

160 
boﬁ
 
found
;

161 
	`DBG
(<<" START DEBUGGING NEW KEY " << 
key


162 << " f‹Ñid " << 
rid
);

164 
	`DBG
(<< " föd_asso¯" << 
key
 );

167 
found
 = 
Ál£
;

168 
rc
 = 
sm
->
	`föd_md_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
);

169 
	`DBG
(<<
rc
);

170 
	`W_DO
(
rc
);

172 
ñem
.
	`ª£t
().
	`put
(
ñ
, 
ñí
);

173 
	`DBG
(<<"found=" << 
found
 << "ÉÀm = " << 
ñem
);

175 
boﬁ
 
skù
=
Ál£
;

176 if(!
found
) {

177 if((
key
.
	`kÀn
(Ë=0Ë&& 
nuŒfound
) {

179 
skù
 = 
åue
;

181 
˚º
 << "ERROR: Cannot find indexÉntry for " <<

182 
key
 << " " << 
rid
 <<
ídl
;

183 
	`°›
();

184 
	`W_DO
(
rc
);

187 if(
key
.
	`kÀn
() == 0) {

188 
nuŒfound
 = 
åue
;

190 if(
skù
) {

191 
	`DBG
(<<"SKIPPING");

195 if(
ñí
 !(
rid_t
)) {

196 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

197 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

199 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

207 
ñem
.
	`ª£t
().
	`put
(&
rid
, (
rid_t
));

209 
	`DBG
(<<"**** KEY LEN = " << 
kÀn
 << " f‹Ñid " <<
rid
);

211 
	`DBG
(<< "DESTROY " << 
key
 << ","<<
ñem
);

212 
rc
 = 
sm
->
	`de°roy_md_assoc
(
idx
, 
key
, 
ñem
);

213 
	`DBG
(<< 
rc
);

214 
	`W_DO
(
rc
);

217 #ifde‡
W_TRACE


218 if(
_w_debug
.
	`Êag_⁄
(("s‹t_funcs2.˝p"),
__FILE__
)) {

219 
cout
 << "PRINT INDEX AFTER REMOVAL of key,elem "

220 << 
key


221 << "," << 
ñem


222 << 
ídl
;

223 
	`W_DO
–
sm
->
	`¥öt_md_ödex
(
idx
) );

228 
boﬁ
 
wr⁄g_ñem
 = 
Ál£
;

230 
	`DBG
(<< "FIND AFTER DESTROYED " << 
key
);

231 
ñí
 = 
MAXBV
;

232 
rc
 = 
sm
->
	`föd_md_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
);

233 
	`DBG
(<< "á·î-dñëêföd checkÑëu∫†" << 
rc


234 << "ánd found=" << 
found
);

235 if(
found
) {

237 if(
ñí
 !(
rid_t
)) {

238 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

239 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

241 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

242 
wr⁄g_ñem
 = 
åue
;

243 
	`DBG
(<<" found duplicate, butÉlems don't match: OK");

245 
˚º
 << "ERROR: found deleted key,elemÖr: "

246 << 
key
 << " " << 
rid
 <<
ídl
;

249 
	`W_DO
(
rc
);

251 if(!
wr⁄g_ñem
) {

253 
ñem
.
	`ª£t
().
	`put
(&
rid
, (rid));

254 
	`DBG
(<< "REINSERT " << 
key
 << "ÉÀm" << 
ñem
 << "Ñid=" << 
rid
);

255 
	`W_DO
–
sm
->
	`¸óã_md_assoc
(
idx
, 
key
, 
ñem
) );

257 #ifde‡
W_TRACE


262 
	`DBG
(<< "FIND AFTER REINSERT " << 
key
);

263 
ñí
 = 
MAXBV
;

264 
	`W_DO
–
sm
->
	`föd_md_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
) );

265 if(!
found
) {

266 
˚º
 << "ERROR: can't find inserted key,elemÖr: "

267 << 
key
 << " " << 
rid
 <<
ídl
;

269 
	`DBG
(<< "RE-DESTROY " << 
key
);

270 
	`W_DO
–
sm
->
	`de°roy_md_assoc
(
idx
, 
key
, 
ñem
) );

271 
	`DBG
(<< "FIND AFTER RE-DESTROY " << 
key
);

272 
ñí
 = 
MAXBV
;

273 
	`W_DO
–
sm
->
	`föd_md_assoc
(
idx
, 
key
, 
ñ
, 
ñí
, 
found
) );

274 if(
found
) {

276 if(
ñí
 !(
rid_t
)) {

277 
˚º
 << 
__LINE__
 << " ERROR: wrongÉlemÜength -Éxpected " <<

278 (
rid_t
Ë<< " gŸ " <<
ñí
 <<
ídl
;

280 if(
	`umemcmp
(&
rid
, 
ñ
, 
ñí
)) {

281 
	`DBG
(<<" found duplicate, butÉlems don't match: OK");

283 
˚º
 << "ERROR: found deleted key,elemÖr: "

284 << 
key
 << " " << 
rid
 <<
ídl
;

288 
	`DBG
(<< "was wrongÉlem, so we cannotÑe-insert -- just go on");

292 
	`DBG
(<<"DONE WITH KEY " << 
key
);

293 #ifde‡
W_TRACE


299 
sˇn_π_i
* 
sˇ≈
 = 
√w
 
	`sˇn_π_i
(
idx
,

300 
nbox_t
::
t_ovîœp
,

301 
univî£
,

302 
åue


304 
boﬁ
 
eof
;

305 
nbox_t
 
k
;

306 * 
e
=0;

307 
smsize_t
 
ñí
=0;

308 
i
 = 0;

309 (!(
rc
 = 
sˇ≈
->
	`√xt
(
k
,
e
,
ñí
,
eof
)).
	`is_îr‹
(Ë&& !eofË; 
i
++) ;

310 if(
i
 > 0) {

311 
˚º
 << " ERROR: RTREE IS NOT EMPTY! c⁄èö†" << 
i


312 << "É¡rõ†" << 
ídl
;

313 
	`w_as£π3
(0);

315 
dñëe
 
sˇ≈
;

317 if(
rc
.
	`is_îr‹
()) {

318 
	`DBG
(<<"rc=" << 
rc
);

319  
	`RC_AUGMENT
(
rc
);

321  
RCOK
;

322 
	}
}

324 
w_rc_t


325 
	$ã°_sˇƒt
(

326 
n
,

327 
nbox_t
::
sob_cmp_t
 
›
,

328 c⁄° 
nbox_t
& 
thekey
,

329 
boﬁ
 
nuŒsok
,

330 
°id_t
& 
°id
,

331 * 
°rögbuf„r
,

332 
vec_t
& 
zî€s
,

333 
boﬁ
 
vîbo£


337 
sˇn_π_i
* 
sˇ≈
 = 0;

338 
dñëî
 
d4
;

341 
sˇ≈
 = 
√w
 
	`sˇn_π_i
(
°id
,

342 
›
,

343 
thekey
,

344 
nuŒsok


347 
	`DBG
(<<"d4.set scanp");

348 
d4
.
	`£t
(
sˇ≈
);

350 
	`DBG
(<<"SèπögÑåì sˇ¿wôh o≥øt‹ " << 
	`W_ENUM
(
›
)

351 << "ÇuŒsok=" << 
nuŒsok
);

352 
w_rc_t
 
rc
;

353 
i
;

354 
pö_i
 
h™dÀ
;

355 
rid_t
 
rid
;

356 
nbox_t
 
key
;

357 
smsize_t
 
ñí
;

358 * 
ñ
 = 
°rögbuf„r
;

359 
boﬁ
 
eof
;

361 
ñí
 = (
rid
);

363 
i
 = 0; (!(
rc
 = 
sˇ≈
->
	`√xt
(
key
, 
ñ
, 
ñí
, 
eof
)).
	`is_îr‹
() && !eof) ; i++) {

365 
	`w_as£π1
(
ñí
 =
	`smsize_t
((
rid_t
)));

366 
	`mem˝y
(&
rid
, 
ñ
, 
ñí
);

368 
	`DBG
(<<"obje˘ i†" << 
rid
 );

373 
kk
 = 0;

374 
kÀn
 = 0;

377 if(
key
.
	`dimísi⁄
() == 0) {

379 
	`DBG
(<<"πªêsˇ¿found NULL key @i=" << 
i
);

380 
kÀn
 = 0;

381 } if(
key
 =
du∂iˇã_box
) {

382 
	`DBG
(<<"πªêsˇ¿found DUPLICATE_BOX key @i=" << 
i
);

383 
kÀn
 = 
key
.
	`kÀn
();

385 
kk
 = 
key
.
	`bound
(0);

386 
	`DBG
(<<"πªêsˇ¿found key kk=" << 
kk
 << " @i=" << 
i
);

387 
	`w_as£π3
(
key
.
	`side
(1)==10);

388 
kÀn
 = 
key
.
	`kÀn
();

394 
smsize_t
 
èû
=0;

396 
èû
 = (
rid_t
);

397 
	`W_DO
(
h™dÀ
.
	`pö
(
rid
, 
zî€s
.
	`size
()));

398 
	`DBG
(<<"Pönög " << 
rid
 << " size=" << 
zî€s
.
	`size
());

400 
smsize_t
 
off£t
 = 
zî€s
.
	`size
(Ë- 
h™dÀ
.
	`°¨t_byã
();

402 
	`DBG
(<<"key off£t=" << 
off£t
);

404 
smsize_t
 
amt
 = 
h™dÀ
.
	`Àngth
(Ë- 
off£t
;

406 
	`DBG
(<<"amt=" << 
amt
);

408 
smsize_t
 
l
 = 
kÀn
;

409 if(
kÀn
 == 0) {

413 
l
 = 
èû
;

415 
	`DBG
(<<"l=" << 
l
);

417 
ty≥d_vÆue
 
bodykey
;

418 if(
kÀn
 == 0) {

421 
	`mem˝y
(
°rögbuf„r
, 
h™dÀ
.
	`body
()+
off£t
, 
amt
);

425 
	`mem˝y
(&
bodykey
.
_u
, 
h™dÀ
.
	`body
()+
off£t
, 
amt
);

426 
	`DBG
(<<"c›õd " << 
amt
 << " from body+offsetÅo bodykey._u");

428 
l
 -
amt
;

429 
boﬁ
 
eof
;

430 
	`W_DO
(
h™dÀ
.
	`√xt_byãs
(
eof
));

431 
	`w_as£π1
(!
eof
);

433 if(
kÀn
 != 0) {

435 
	`w_as£π1
(
h™dÀ
.
	`Àngth
(Ë=
l
 + 
èû
);

437 if(
kÀn
 == 0) {

438 
	`DBG
(<<"mem˝yámt=" << 
l
 << " from 2ndÖage of body ");

439 
	`mem˝y
(
°rögbuf„r
+
amt
, 
h™dÀ
.
	`body
(), 
l
);

441 
	`DBG
(<<"mem˝yámt=" << 
l
 << " from 2ndÖage of body ");

442 
	`mem˝y
–((*)(&
bodykey
.
_u
))+
amt
, 
h™dÀ
.
	`body
(), 
l
);

446 
rid_t
 
oid
;

447 if(
kÀn
 == 0) {

449 
	`mem˝y
–&
oid
, 
°rögbuf„r
, 
èû
);

452 
	`mem˝y
–&
oid
, 
h™dÀ
.
	`body
()+
l
, 
èû
);

454 if(
oid
 !
rid
) {

455 
	`DBG
(<<"MISMATCHÜ = " << 
l
 << "Åaû=" << 
èû
);

456 { 
q
=0; q<
èû
; q++) {

457 
	`DBG
(<<"h™dÀ.body(Ë+ " << 
l
 << " +" << 
q
 << "=" <<

458 –*(*)(
h™dÀ
.
	`body
()+
l
+
q
)));

461 
	`DBG
(<<"h™dÀ.hdr_size()=" << 
h™dÀ
.
	`hdr_size
());

462 
q
=0; q<
h™dÀ
.
	`hdr_size
(); q++) {

463 
	`DBG
(<<"h™dÀ.hdr(Ë+ " << 
q
 << "=" <<

464 –*(*)(
h™dÀ
.
	`hdr
()+
q
)));

466 
˚º
 << "Mismatched OIDs "

467 << " index ha†" << 
rid


468 << " body ha†" << 
oid


469 <<
ídl
;

470 
	`°›
();

473 
	`W_DO
(
h™dÀ
.
	`√xt_byãs
(
eof
));

474 
	`w_as£π1
(
eof
);

476 if(
kÀn
 == 0) {

477 if(
vîbo£
) {

479 
˚º
 << "NULL key, obje˘ id i†" << 
rid
 << 
ídl
;

482 } if(
kÀn
>0) {

483 
bodyk
;

484 
	`c⁄vît_back
(
bodykey
, 
bodyk
, 
ã°_•©ül
, 
°rögbuf„r
);

485 
	`DBG
(<<"obje˘ c⁄èö†key " << 
bodyk
);

487 if(
bodyk
 =
kk
) {

489 if(
vîbo£
) {

491 
˚º
 << "M©ched key, obje˘ id i†" << 
rid
 << 
ídl
;

494 } if(
bodyk
 =
du∂iˇã_vÆues
[0]) {

496 if(
vîbo£
) {

498 
˚º
 << "Du∂iˇã key, obje˘ id i†" << 
rid
 << 
ídl
;

502 
˚º
 << "Mism©ched key, obje˘" <<
ídl
;

503 
˚º
 << "...ödex key i†" << 
kk
 <<
ídl
;

505 
˚º
 << "...obje˘ id i†" << 
rid
 << 
ídl
;

507 
˚º
 << "...key i¿body i†" << 
bodyk
 <<
ídl
;

508 
	`°›
();

512 if(
vîbo£
) {

513 
cout
 << "*******************************" <<
ídl
;

514 
cout
 << " SCANNED " << 
i
 << " OK f‹ o≥øt‹ " << 
	`W_ENUM
(
›
)

515 << "ÇuŒsok = " << 
nuŒsok


516 <<
ídl
;

517 
›
) {

518 
nbox_t
::
t_exa˘
:

519 
cout
 << "Å_exa˘" <<
ídl
;

521 
nbox_t
::
t_ovîœp
:

522 
cout
 << "Å_ovîœp" <<
ídl
;

524 
nbox_t
::
t_covî
:

525 
cout
 << "Å_covî" <<
ídl
;

527 
nbox_t
::
t_öside
:

528 
cout
 << "Å_öside" <<
ídl
;

531 
nbox_t
::
t_bad
:

532 
cout
 << "Å_bad" <<
ídl
;

536 
cout
 << " KEY=" << 
thekey
 <<
ídl
;

539 if(
i
 !
n
) {

540 
˚º
 << "*** ERROR :Éx≥˘ed sˇ¿tÿªtu∫ " << 
n


541 << " buàgŸ " << 
i


542 << 
ídl
;

543 
	`°›
();

545 if(
vîbo£
) {

546 
˚º
 << "*******************************" <<
ídl
;

549 
	`DBG
(<<"sˇ¿.√xàyõld†" << 
rc
 << "Éof=" << 
eof
);

550 
	`W_DO
–
rc
 );

551 
	`DBG
(<<"sˇ¿i†föished,Ç" << 
n
);

554  
RCOK
;

555 
	}
}

571 
	$t_ã°_bulklﬂd_πªe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

573 i‡(
	`check
(
ù
, "vidÇkey†nuŒok|nŸnuŒ", 
ac
, 4))

574  
TCL_ERROR
;

576 
nkeys_¨g
 = 2;

577 
vid_¨g
 = 1;

578 
nuŒ_¨g
 = 3;

582 
num_du∂iˇã_box
 = 0;

584 
boﬁ
 
nuŒsok
=
Ál£
;

585 if(
	`°rcmp
(
av
[
nuŒ_¨g
], "nullok")==0) {

586 
nuŒsok
 = 
åue
;

587 } if(
	`°rcmp
(
av
[
nuŒ_¨g
], "notnull")==0) {

588 
nuŒsok
 = 
Ál£
;

590 
˚º
 << "Badárgumíà#" << 
nuŒ_¨g


592 << " gŸ " << 
av
[
nuŒ_¨g
]

593 <<
ídl
;

594  
TCL_ERROR
;

597 
runsize
 = 3;

600 
d©a_sz
 = 
globÆ_sm_c⁄fig_öfo
.
lg_ªc_∑ge_•a˚
;

601 
∑ge_sz
 = 
globÆ_sm_c⁄fig_öfo
.
∑ge_size
;

602 *
g¨bage
 = 
√w
 [
d©a_sz
-1];

603 
	`mem£t
(
g¨bage
, '0', 
d©a_sz
 -1);

604 
w_auto_dñëe_¨øy_t
<> 
	`dñg¨bage
(
g¨bage
);

605 
vec_t
 
	`zî€s
(
g¨bage
, 
d©a_sz
-1);

606 
vec_t
 
d©a
;

608 
n
 = 
	`©oi
(
av
[
nkeys_¨g
]);

610 c⁄° 
h
 = 
n
/2;

611 c⁄° 
boﬁ
 
ªvî£
 = 
Ál£
;

612 
°rögbuf„r
[
MAXBV
];

613 
ty≥d_vÆue
 
k
;

614 
vec_t
 
hdr
;

616 
ty≥d_båì_ã°
 
t
 = 
ã°_•©ül
;

618 
CSKF
 
cskfunc
;

619 
gíîic_CSKF_cookõ
 
func_cookõ
;

620 
CF
 
cmpfunc
 = 
	`gëcmpfunc
(
t
,
cskfunc
, 
	`key_cookõ_t
(&
func_cookõ
));

622 
func_cookõ
.
off£t
 = 
zî€s
.
	`size
();

623 
k
.
_Àngth
 = 
func_cookõ
.
Àngth
;

624 
smsize_t
 
Àn_höt
 = 
k
.
_Àngth
 + 
zî€s
.
	`size
();

626 
s‹t_keys_t
 
	`kl
(1);

629 
bad
=0;

636 if(
kl
.
	`£t_unique
(
Ál£
)Ë{ 
	`DBG
(<<""); 
bad
++; }

637 if(
kl
.
	`£t_nuŒ_unique
(
Ál£
)Ë{ 
	`DBG
(<<""); 
bad
++; }

638 if(
kl
.
	`£t_as˚ndög
()Ë{ 
	`DBG
(<<""); 
bad
++; }

640 if(
kl
.
	`£t_f‹_ödex
(
cskfunc
, 
	`key_cookõ_t
(&
func_cookõ
)))

641 { 
	`DBG
(<<""); 
bad
++; }

642 if(
bad
>0) {

643 
	`w_ª£t_°r°ªam
(
t˛out
);

644 
t˛out
 << 
	`smsh_îr_«me
(
ss_m
::
eBADARGUMENT
Ë<< 
íds
;

645 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

646 
	`w_ª£t_°r°ªam
(
t˛out
);

647  
TCL_ERROR
;

654 if(
nuŒsok
) {

655 
kl
.
	`£t_s‹tkey_dîived
(0,

656 
⁄ehûbît
,

657 (
key_cookõ_t
)
zî€s
.
	`size
(),

658 
Ál£
,

659 
åue
,

660 
Ál£
,

661 
cmpfunc


664 
kl
.
	`£t_s‹tkey_fixed
(0,

666 
zî€s
.
	`size
(), 
k
.
_Àngth
,

667 
Ál£
,

668 
åue
,

669 
Ál£
,

670 
cmpfunc


674 
dñëî
 
d1
;

675 
dñëî
 
d2
;

677 
°id_t
 
°id
;

678 
°id_t
 
fid
;

679 
vid_t
 
vid
;

681 
	`DO
–
sm
->
	`¸óã_md_ödex
(

682 
	`©oi
(
av
[
vid_¨g
]),

683 
sm
->
t_πªe
,

684 
ss_m
::
t_lﬂd_fûe
,

685 
°id


687 
	`DBG
(<<"d1.£à" << 
°id
);

688 
d1
.
	`£t
(
°id
);

689 
	`DO
–
sm
->
	`¸óã_fûe
(
	`©oi
(
av
[
vid_¨g
]), 
fid
, 
ss_m
::
t_lﬂd_fûe
) );

690 
	`DBG
(<<"d2.£à" << 
fid
);

691 
d2
.
	`£t
(
fid
);

692 
vid
 = 
°id
.
vﬁ
;

694 
numnuŒs
 = 0;

695 
univî£
.
	`nuŒify
();

696 
œ°
=0;

699 
ªc‹d_numbî
=1;

700 
i
;

701 
rid_t
 
rid
;

702 
i
 = 0; i < 
n
; i++) {

703 
kk
 = 
i
 - 
h
;

705 if(
ªvî£
Ë
kk
 = 0 - kk;

708 
vÆues
[4];

709 
vÆues
[0] = 
kk
;

710 
vÆues
[1] = 
kk
;

711 
vÆues
[2] = 
kk
 + 
œ°
;

712 
vÆues
[3] = 
kk
 + 10;

713 
œ°
 = 
kk
;

714 
nbox_t
 
	`box
(2, 
vÆues
);

716 if(
i
 == 2 || i == 4 || i == 6) {

717 
box
 = 
du∂iˇã_box
;

718 
num_du∂iˇã_box
++;

720 
box
.
	`ˇn⁄ize
();

721 
univî£
 +
box
;

723 
d©a
.
	`ª£t
().
	`put
(
zî€s
);

724 
	`DBG
(<<"D©®c⁄èö†zve¯o‡À¿" << 
d©a
.
	`size
());

726 if(
nuŒsok
 && ((
i
 & 0x1)== 0x1)) {

728 
numnuŒs
++;

729 
	`DBG
(<<" (PLUS NULL KEY)NULL# " << 
numnuŒs
);

730 #ifde‡
W_TRACE


731 if(
_w_debug
.
	`Êag_⁄
(("s‹t_funcs2.˝p"),
__FILE__
)) {

732 
cout
 <<

733 
ªc‹d_numbî
 <<

735 << 
numnuŒs
 << 
ídl
 ;

739 
	`DBG
(<<" PLUS key o‡Àngth " << 
box
.
	`kÀn
());

740 
d©a
.
	`put
(
box
.
	`kvÆ
(), box.
	`kÀn
());

745 
func_cookõ
.
Àngth
 = 
box
.
	`kÀn
();

747 #ifde‡
W_TRACE


748 if(
_w_debug
.
	`Êag_⁄
(("s‹t_funcs2.˝p"),
__FILE__
)) {

750 
cout
 << "KEY BOX = " << " hvalue is " <<

751 
box
.
	`hvÆue
(
univî£
Ë<<
ídl
;

752 
box
.
	`¥öt
(
cout
, 0 );

756 
vec_t
 
	`oid
(&
rid
, (rid));

757 
	`DO
–
sm
->
	`¸óã_ªc
–
fid
,

758 
hdr
,

759 
Àn_höt
,

760 
d©a
,

761 
rid
) );

762 
	`DBG
(<<"¸óãdÑec: vÆue=" << 
kk


763 <<" oid i†" << 
rid


764 <<" sizêi†" << 
d©a
.
	`size
()

765 << "+" << 
oid
.
	`size
()

768 
	`DO
–
sm
->
	`≠≥nd_ªc
(
rid
, 
oid
) );

770 
ªc‹d_numbî
++;

776 
°id_t
 
ofid
;

777 
dñëî
 
d3
;

780 
	`DO
–
sm
->
	`¸óã_fûe
(
vid
, 
ofid
, 
ss_m
::
t_lﬂd_fûe


782 
	`DBG
(<<"d3.£à" << 
fid
);

783 
d3
.
	`£t
(
ofid
);

788 
	`DO
–
sm
->
	`s‹t_fûe
–
fid
, 
ofid
,

789 1, &
vid
,

790 
kl
,

791 
Àn_höt
,

792 
runsize
,

793 
runsize
*
∑ge_sz
));

795 
	`DBG
(<<"Sort file done");

797 #ifde‡
W_TRACE


798 if(
_w_debug
.
	`Êag_⁄
(("s‹t_funcs2.˝p"),
__FILE__
) ) {

800 
w_rc_t
 
rc
;

802 
cout
 << "SCAN OF SORT'†INPUT FILE" <<
ídl
;

803 
sˇn_fûe_i
 *
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
);

804 
rc
 = 
	`dump_sˇn
(*
sˇn
, 
cout
, 
NULL
, 
åue
);

805 if(
rc
.
	`is_îr‹
()Ë
cout
 << "ªtu∫†rc=" <<Ñ¯<<
ídl
;

806 
dñëe
 
sˇn
;

809 
cout
 << "SCAN OF SORT'†OUTPUT FILE" <<
ídl
;

810 
sˇn_fûe_i
 *
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
ofid
);

811 
rc
 = 
	`dump_sˇn
(*
sˇn
, 
cout
, 
NULL
, 
åue
);

812 if(
rc
.
	`is_îr‹
()Ë
cout
 << "ªtu∫†rc=" <<Ñ¯<<
ídl
;

813 
dñëe
 
sˇn
;

818 
sm_du_°©s_t
 
°©s
;

820 
w_rc_t
 
rc
 = 
sm
->
	`bulkld_md_ödex
(
°id
, 1, &
ofid
, 
°©s
);

821 if(
rc
.
	`is_îr‹
()) {

822 if(
rc
.
	`îr_num
(Ë=
ss_m
::
eDUPLICATE
) {

823 
˚º
 << "BULK LOAD DONE: uniqueÉntries== "

824 << 
°©s
.
πªe
.
unique_˙t


826 << 
°©s
.
πªe
.
íåy_˙t


827 <<
ídl
;

829 
	`DO
(
rc
);

831 if(
löked
.
vîbo£_Êag
) {

832 
cout
 << "BULK LOAD DONE: uniqueÉntries== "

833 << 
°©s
.
πªe
.
unique_˙t


835 << 
°©s
.
πªe
.
íåy_˙t


836 <<
ídl
;

839 
	`DBG
(<<"BulkÜoad done");

841 #ifde‡
W_TRACE


842 if(
_w_debug
.
	`Êag_⁄
(("s‹t_funcs2.˝p"),
__FILE__
)) {

843 
cout
 << "PRINT RTREE AFTER BULK LOAD" << 
ídl
;

844 
	`DO
–
sm
->
	`¥öt_md_ödex
(
°id
) );

856 
	`DO
(
	`ã°_sˇƒt
(

857 
num_du∂iˇã_box
, 
nbox_t
::
t_exa˘
, 
du∂iˇã_box
, 
Ál£
,

858 
°id
,

859 
°rögbuf„r
, 
zî€s
,

860 
löked
.
vîbo£_Êag
));

861 
	`DO
(
	`ã°_sˇƒt
(

862 
num_du∂iˇã_box
, 
nbox_t
::
t_exa˘
, 
du∂iˇã_box
, 
åue
,

863 
°id
,

864 
°rögbuf„r
, 
zî€s
,

865 
löked
.
vîbo£_Êag
));

869 
	`DO
(
	`ã°_sˇƒt
(

870 
numnuŒs
, 
nbox_t
::
t_exa˘
,Çbox_t::
NuŒ
, 
åue
,

871 
°id
,

872 
°rögbuf„r
, 
zî€s
,

873 
löked
.
vîbo£_Êag
));

874 
	`DO
(
	`ã°_sˇƒt
(

875 0, 
nbox_t
::
t_exa˘
,Çbox_t::
NuŒ
, 
Ál£
,

876 
°id
,

877 
°rögbuf„r
, 
zî€s
,

878 
löked
.
vîbo£_Êag
));

883 
	`DO
(
	`ã°_sˇƒt
(

884 
n
, 
nbox_t
::
t_ovîœp
, 
univî£
, 
åue
,

885 
°id
,

886 
°rögbuf„r
, 
zî€s
,

887 
löked
.
vîbo£_Êag
));

888 
	`DO
(
	`ã°_sˇƒt
(

889 (
n
-
numnuŒs
), 
nbox_t
::
t_ovîœp
, 
univî£
, 
Ál£
,

890 
°id
,

891 
°rögbuf„r
, 
zî€s
,

892 
löked
.
vîbo£_Êag
));

896 
	`DO
(
	`ã°_sˇƒt
(

897 
numnuŒs
, 
nbox_t
::
t_covî
,Çbox_t::
NuŒ
, 
åue
,

898 
°id
,

899 
°rögbuf„r
, 
zî€s
,

900 
löked
.
vîbo£_Êag
));

901 
	`DO
(
	`ã°_sˇƒt
(

902 0, 
nbox_t
::
t_covî
,Çbox_t::
NuŒ
, 
Ál£
,

903 
°id
,

904 
°rögbuf„r
, 
zî€s
,

905 
löked
.
vîbo£_Êag
));

909 
	`DO
(
	`ã°_sˇƒt
(

910 (
n
-
numnuŒs
), 
nbox_t
::
t_covî
, 
univî£
, 
Ál£
,

911 
°id
,

912 
°rögbuf„r
, 
zî€s
,

913 
löked
.
vîbo£_Êag
));

914 
	`DO
(
	`ã°_sˇƒt
(

915 
n
, 
nbox_t
::
t_covî
, 
univî£
, 
åue
,

916 
°id
,

917 
°rögbuf„r
, 
zî€s
,

918 
löked
.
vîbo£_Êag
));

922 
	`DO
(
	`ã°_sˇƒt
(

923 
n
, 
nbox_t
::
t_öside
,Çbox_t::
NuŒ
, 
åue
,

924 
°id
,

925 
°rögbuf„r
, 
zî€s
,

926 
löked
.
vîbo£_Êag
));

932 
	`DO
(
	`ã°_sˇƒt
(

933 (
n
-
numnuŒs
), 
nbox_t
::
t_öside
,Çbox_t::
NuŒ
, 
Ál£
,

934 
°id
,

935 
°rögbuf„r
, 
zî€s
,

936 
löked
.
vîbo£_Êag
));

942 
w_rc_t
 
rc
 = 
	`dñëe_πªe_íåõs
(
°id
,

943 
fid
,

944 
zî€s
.
	`size
());

945 
	`DBG
(<<"rc=" << 
rc
);

946 
	`DO
(
rc
);

949 
	`DBG
(<<"Leaving scope of d1, d2");

952 
	`DBG
(<<"LEFT scope of d1, d2");

953  
TCL_OK
;

954 
	}
}

	@src/sm/smsh/sort_funcs3.cpp

30 
	~"w_deföes.h
"

41 
	~"shñl.h
"

42 
	~"s‹t_funcs.h
"

44 
	~<√w
>

49 
boﬁ
 
	g√ws‹t
 = 
åue
 ;

51 c⁄° 
	glowî_Æpha
 = 0x61;

52 c⁄° 
	guµî_Æpha
 = 0x7a;

55 #ifde‡
EXPLICIT_TEMPLATE


56 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<const *>;

59 
nbox_t
 
univî£
(2);

61 
w_rc_t


62 
gë_key_öfo
(

63 c⁄° 
rid_t
& 
W_IFDEBUG3
(
W_IFTRACE
(
rid
)),

64 c⁄° 
obje˘_t
& 
obj_ö
,

65 
key_cookõ_t
 
cookõ
,

66 
Á˘‹y_t
& ,

67 
skey_t
* 
key


70 
	gk
 = 
cookõ
.
make_öt
();

71 
DBG
(<<"gë_key_öfÿf‹ key " << 
k
);

72 
mëad©a
* 
	gmëa
 = (mëad©®*)
obj_ö
.
hdr
(0);

75 
w_as£π1
(
mëa
[
k
].
nuŒabÀ
 || !mëa[k].
fixed
);

77 
DBG
(<<"gë_key_öfÿf‹ key†" << 
k
 << " offset="

78 << 
mëa
[
k
].
off£t
 << "Üígth=" << mëa[k].
Àngth
 );

80 
√w
(
key
Ë
skey_t
(
obj_ö
, 
mëa
[
k
].
off£t
, mëa[k].
Àngth
, 
Ál£
);

81 #i‡
W_DEBUG_LEVEL
 > 2

84 #unde‡
DBG


85 
	#DBG
(
x
Ë
cout
 x << 
ídl
;

	)

86 
DBG
(

87 << "KEY " << 
k
 << " METADATA ARE: "

88 << " off£t=" << 
mëa
[
k
].
off£t


89 << "Üígth=" << 
mëa
[
k
].
Àngth


92 
DBG
–<< 
rid
 << " body ("

93 << (
obj_ö
.
body_size
(Ë- 
mëa
[
k
].
off£t
)

95 *
	gobje˘
 = (*)
obj_ö
.
body
(
mëa
[
k
].
off£t
);

97 if(
	gmëa
[
k
].
	gÀngth
 > 0) {

98 
	gmëa
[
k
].
	gt
) {

99 
	gã°_bv
:

100 
ã°_bœrge
:

101 
ã°_b23
:

102 
ã°_b1
: {

103 
l
 = 
mëa
[
k
].
Àngth
;

104 *
	gp
 = 
obje˘
;

105 if(
	gl
 > 1) {

106 if(
°æí
(
p
) > 256) {

107 *
	gp
 ='E'Ë
p
++;

109 if(
	gp
-
	gobje˘
 > 0) {

110 
DBG
(<<" E(" <<()(
p
-
obje˘
) <<"Åimes)" <<Ö);

112 *
	gp
) {

113 
w_as£π3
(*
p
 <
uµî_Æpha
 && *∞>
lowî_Æpha
);

114 
	gp
++;

116 
DBG
–<< 
obje˘
);

120 
w_as£π3
(*
p
 <
uµî_Æpha
 && *∞>
lowî_Æpha
);

121 
DBG
–<< *
obje˘
);

125 
	gã°_i1
: {

126 
w_ba£_t
::
öt1_t
 
i
;

127 
mem˝y
(&
i
, 
obje˘
, 1);

128 
DBG
–<< (
i
));

130 
	gã°_u1
: {

131 
w_ba£_t
::
uöt1_t
 
i
;

132 
mem˝y
(&
i
, 
obje˘
, 1);

133 
DBG
–<< (
i
));

135 
	gã°_i2
: {

136 
w_ba£_t
::
öt2_t
 
i
;

137 
mem˝y
(&
i
, 
obje˘
, 2);

138 
DBG
–<< 
i
);

140 
	gã°_u2
: {

141 
w_ba£_t
::
uöt2_t
 
i
;

142 
mem˝y
(&
i
, 
obje˘
, 2);

143 
DBG
–<< 
i
);

145 
	gã°_i4
: {

146 
w_ba£_t
::
öt4_t
 
i
;

147 
mem˝y
(&
i
, 
obje˘
, 4);

148 
DBG
–<< 
i
);

150 
	gã°_u4
: {

151 
w_ba£_t
::
uöt4_t
 
i
;

152 
mem˝y
(&
i
, 
obje˘
, 4);

153 
DBG
–<< 
i
);

155 
	gã°_i8
: {

156 
w_ba£_t
::
öt8_t
 
i
;

157 
mem˝y
(&
i
, 
obje˘
, 8);

158 
DBG
–<< 
i
);

160 
	gã°_u8
: {

161 
w_ba£_t
::
uöt8_t
 
i
;

162 
mem˝y
(&
i
, 
obje˘
, 8);

163 
DBG
–<< 
i
);

165 
	gã°_f4
: {

166 
w_ba£_t
::
f4_t
 
i
;

167 
mem˝y
(&
i
, 
obje˘
, 4);

168 
DBG
–<< 
i
);

170 
	gã°_f8
: {

171 
w_ba£_t
::
f8_t
 
i
;

172 
mem˝y
(&
i
, 
obje˘
, 8);

173 
DBG
–<< 
i
);

176 
w_as£π1
(0);

180 #unde‡
DBG


181 
	#DBG
(
x
Ë
	`DBG1
(x)

	)

184  
	gRCOK
;

187 
w_rc_t


188 
hûbît
(

189 c⁄° 
rid_t
& 
W_IFTRACE
(
rid
),

190 c⁄° 
obje˘_t
& 
obj_ö
,

191 
key_cookõ_t
 
cookõ
,

192 
Á˘‹y_t
& 
öã∫Æ
,

193 
skey_t
* 
key


196 
mëad©a
* 
	gmëa
 = (mëad©®*)(
cookõ
.
make_±r
());

197 
smsize_t
 
	gÀngth
 = 
mëa
->
Àngth
;

198 
smsize_t
 
	goff
 = 
mëa
->
off£t
;

200 if(
	gobj_ö
.
body_size
(Ë!
obj_ö
.
c⁄tig_body_size
()) {

202 
Àngth
 = 
obj_ö
.
body_size
(Ë- 
off
 - (
rid_t
);

204 
smsize_t
 
	gªsu…Àn
 = 0;

206 
	ghvÆue
=0;

208 if(
	gÀngth
) {

209 
nbox_t
 
box
(2);

210 if(
	gÀngth
 < 
smsize_t
(
box
.
kÀn
()) ) {

211  
RC
(
ss_m
::
eBADLENGTH
);

213 
	gÀngth
 = 
smsize_t
(
box
.
kÀn
());

216 
DBG
(<<"gë boxáàoff£à" << 
off
 << " wôhÜígth " << 
Àngth
);

218 *
	gtmp
 = 
√w
 [
Àngth
];

219 if(!
	gtmp
Ë 
RC
(
ss_m
::
eOUTOFMEMORY
);

220 
vec_t
 
bx
(
tmp
,
Àngth
);

221 
rc_t
 
	grc
 = 
obj_ö
.
c›y_out
(
Ál£
 , 
off
, 
Àngth
, 
bx
);

222 if(
	grc
.
is_îr‹
()) {

223 
	gdñëe
[] 
	gtmp
;

224 
DBG
(<<"gŸÉº‹ " << 
rc
);

225  
	grc
;

228 
	gbox
.
byãs2box
(
tmp
, 
Àngth
);

229 
	gdñëe
[] 
	gtmp
;

231 
	ghvÆue
 = 
box
.
hvÆue
(
univî£
);

232 
DBG
(<<"hûbît: hvÆuêf‹Ñid " << 
rid
 << " =" << 
hvÆue


233 << " ba£d o¿box " << 
box


234 << "ánd univî£ " << 
univî£


238 *
	gc
 = 
öã∫Æ
.
Ælocfunc
(
ªsu…Àn
);

239 
mem˝y
(
c
, &
hvÆue
, (hvalue));

241 
√w
(
key
Ë
skey_t
(
c
, 0, (
hvÆue
), 
öã∫Æ
);

243 
√w
(
key
Ë
skey_t
(0, 0, 0, *
Á˘‹y_t
::
n⁄e
);

246  
	gRCOK
;

254 
w_rc_t


255 
	$mhûbît
 (

256 c⁄° 
rid_t
& 
rid
,

257 c⁄° 
obje˘_t
& 
obj_ö
,

258 
key_cookõ_t
 
cookõ
,

259 
Á˘‹y_t
& 
öã∫Æ
,

260 
skey_t
* 
key


263 
mëad©a
* 
_mëa
 = (mëad©a*)
obj_ö
.
	`hdr
(0);;

264 
mëad©a
* 
mëa
 = &
_mëa
[
cookõ
.
	`make_öt
()];

266 
key_cookõ_t
 
	`¨g
(
mëa
);

268  
	`hûbît
(
rid
, 
obj_ö
, 
¨g
, 
öã∫Æ
, 
key
);

269 
	}
}

273 
w_rc_t


274 
	$l⁄ehûbît
 (

275 c⁄° 
rid_t
& ,

276 c⁄° 
obje˘_t
& 
obj_ö
,

277 
key_cookõ_t
 
cookõ
,

278 
Á˘‹y_t
& 
öã∫Æ
,

279 
skey_t
* 
key


282 
rid_t
 
dummy
;

283  
	`⁄ehûbît
(
dummy
, 
obj_ö
, 
cookõ
, 
öã∫Æ
, 
key
);

284 
	}
}

286 
w_rc_t


287 
	$⁄ehûbît
 (

288 c⁄° 
rid_t
& 
rid
,

289 c⁄° 
obje˘_t
& 
obj_ö
,

290 
key_cookõ_t
 
cookõ
,

291 
Á˘‹y_t
& 
öã∫Æ
,

292 
skey_t
* 
key


295 
mëad©a
 
mëa
;

296 
mëa
.
off£t
 = 
cookõ
.
	`make_smsize_t
();

297 
mëa
.
Àngth
 = (
nbox_t
);

299 
key_cookõ_t
 
	`¨g
(&
mëa
);

301  
	`hûbît
(
rid
, 
obj_ö
, 
¨g
, 
öã∫Æ
, 
key
);

302 
	}
}

306 
make_øndom_box
(*
obje˘
, 
w_ba£_t
::
uöt4_t
 
	$W_IFDEBUG1
(
Àngth
))

308 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

309 
¨øy
[2 * 2];

311 
	`w_as£π1
(
Àngth
 =(
¨øy
));

312 
i
=0; i<4; i++) {

313 
x
 = 
w_ba£_t
::
	`öt4_t
(
gíî©‹
.
	`ønd
());

314 if(
x
 < 0) x = 0 - x;

315 
x
 = x % 10000;

316 
¨øy
[
i
] = 
x
;

318 
nbox_t
 
	`box
(2);

319 
box
.
	`byãs2box
–(c⁄° *)&
¨øy
[0], ((array)));

320 
box
.
	`ˇn⁄ize
();

321 
univî£
 +
box
;

322 
	`mem˝y
(
obje˘
, 
box
.
	`kvÆ
(), box.
	`kÀn
());

323 
	`DBG
(<<"make_øndom_boxÑëu∫†" << 
box


324 << "; hvÆue=" << 
box
.
	`hvÆue
(
univî£
)

325 << "; univî£=" << 
univî£


327 
	}
}

336 
	$make_øndom_Æpha
(*
obje˘
, 
w_ba£_t
::
uöt4_t
 
Àngth
)

338 
	`FUNC
(
make_øndom_Æpha
);

339 c⁄° *
o
 = 
obje˘
;

341 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

342 
w_ba£_t
::
uöt1_t
 
j
,
n
;

343 
i
=0; i<
Àngth
; i++) {

344 
j
 = 0;

345 
j
 < 
lowî_Æpha
 || j > 
uµî_Æpha
) {

346 
n
 = 
w_ba£_t
::
	`uöt1_t
(
gíî©‹
.
	`ønd
());

347 
j
 = 
n
 & 0x7f;

349 if((
j
 >
lowî_Æpha
Ë&& (j <
uµî_Æpha
)) {

350 *
obje˘
++ = 
j
;

352 *
obje˘
++ = 'x';

357 if(
Àngth
 > 1) {

358 
obje˘
 = 
c⁄°_ˇ°
<*>(
o
);

359 *(
obje˘
+
Àngth
-1) = '\0';

361 #i‡
W_DEBUG_LEVEL
 > 2

362 if(
Àngth
 == 1) {

363 
	`DBG
(<<"make_øndom_Æph®" << 
Àngth
 << "Örodu˚†" << *
o
 );

364 
	`w_as£π3
(*
o
 <
uµî_Æpha
 && *ÿ>
lowî_Æpha
);

366 
	`DBG
(<<"make_øndom_Æph®" << 
Àngth
 << "Örodu˚†" << 
o
 );

367 { c⁄° *
p
 = 
o
;

368 *
p
) {

369 
	`w_as£π3
(*
p
 <
uµî_Æpha
 && *∞>
lowî_Æpha
);

370 
p
++;

375 
	}
}

389 
	$check_fûe_is_s‹ãd
–
°id_t
 
fid
, 
s‹t_keys_t
&
kl
, 
boﬁ
 
do_com∑ª
)

391 
	#STRINGMAX
 
ss_m
::
∑ge_sz


	)

392 
pö_i
* 
pö
;

393 
boﬁ
 
eof
;

394 
rc_t
 
rc
;

395 
sˇn_fûe_i
* 
sˇn
;

397 
nkeys
 = 
kl
.
	`nkeys
();

398 
k
;

408 
boﬁ
 
bad
 = 
Ál£
;

409 
n⁄_fixed
 =0;

410 if((
kl
.
	`Àxify_ödex_key
()!=
s‹t_keys_t
::
noCSKF
Ë&& !kl.
	`is_f‹_ödex
()) {

411 
bad
 = 
åue
;

412 } if(!
kl
.
	`is_f‹_ödex
()Ë
k
=0; k<
nkeys
; k++) {

414 if(
kl
.
	`is_fixed
(
k
Ë&& kl.
	`is_Æig√d
(k)) ;

415 
n⁄_fixed
++;

416 if–
k
 !
nkeys
-1) {

418 
bad
 = 
åue
;

422 if(
bad
) {

427 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
ss_m
::
t_cc_fûe
);

429 *
°rbuf
 = 
√w
 [
STRINGMAX
];

430 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
°rbuf
);

432 *
ﬁdÀngths
 = 
√w
 [
nkeys
];

433 c⁄° * 
	tch¨p
;

434 
ch¨p
 *
ﬁdkeys
 = 
√w
 ch¨p[
nkeys
];

435 
w_auto_dñëe_¨øy_t
<> 
	`autodñ2
(
ﬁdÀngths
);

436 
w_auto_dñëe_¨øy_t
<c⁄° *> 
	`autodñ3
(
ﬁdkeys
);

437 
ch¨p
 *
keys
 = 
√w
 ch¨p[
nkeys
];

438 *
Àngths
 = 
√w
 [
nkeys
];

439 
w_auto_dñëe_¨øy_t
<> 
	`autodñ4
(
Àngths
);

440 
w_auto_dñëe_¨øy_t
<c⁄° *> 
	`autodñ5
(
keys
);

442 
boﬁ
 
fú°
 = 
åue
;

444  !(
rc
=
sˇn
->
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof) {

445 
	`DBG
(<<" sˇ¿ªc‹d " << 
pö
->
	`rid
());

450 
myoff£t
= 0;

451 
k
=0; k<
nkeys
; k++) {

452 if(
kl
.
	`ö_hdr
(
k
Ë|| kl.
	`is_f‹_ödex
()) {

453 
keys
[
k
] = 
pö
->
	`hdr
(Ë+ 
myoff£t
;

454 
	`DBG
(<<"key i†" << 
keys
[
k
]);

455 } i‡(
pö
->
	`is_smÆl
()) {

456 
keys
[
k
] = 
pö
->
	`body
(Ë+ 
kl
.
	`off£t
(k);

457 
	`DBG
(<<"key i†" << 
keys
[
k
]);

460 
˚º
 << "ˇn'àcheckÜ¨gêobje˘†yë "<<
ídl
;

461 
dñëe
 
sˇn
;

464 i‡–
kl
.
	`is_fixed
(
k
) ) {

465 
	`DBG
(<<"");

466 
Àngths
[
k
] = 
kl
.
	`Àngth
(k);

468 if(
kl
.
	`ö_hdr
(
k
Ë|| kl.
	`is_f‹_ödex
()) {

469 
Àngths
[
k
] = 
pö
->
	`hdr_size
() ;

470 
q
=
k
-1; q>=0; q--) {

471 
Àngths
[
k
] -Àngths[
q
];

473 
	`DBG
–<< "k=" <<
k


474 <<"Üígths[k]=" << 
Àngths
[
k
]

475 << " hd∏sizê" << 
pö
->
	`hdr_size
()

478 
Àngths
[
k
] = 
pö
->
	`body_size
()-
kl
.
	`off£t
(k) ;

479 
	`DBG
–<< "k=" <<
k


480 <<"Üígths[k]=" << 
Àngths
[
k
]

481 << " body sizê" << 
pö
->
	`body_size
()

484 if(
kl
.
	`is_fixed
(
k
Ë&& 
Àngths
[k]!=0) {

485 if(
Àngths
[
k
] < (
kl
.
	`Àngth
(k))) {

486 
	`DBG
(<<" Actual keyÜengthÅoo short "

487 << "Éx≥˘ed " << (
kl
.
	`Àngth
(
k
))

488 << " found " << 
Àngths
[
k
]);

489 
	`w_as£π3
(0);

491 
Àngths
[
k
] = 
kl
.
	`Àngth
(k);

494 
myoff£t
 +
Àngths
[
k
];

497 if(
do_com∑ª
 && !
fú°
) {

498 
j
=0;

502 
k
=0; k<
nkeys
; k++) {

503 if(
ﬁdÀngths
[
k
] =0 || 
Àngths
[k] == 0) {

504 
j
 = 
ﬁdÀngths
[
k
] - 
Àngths
[k];

506 
	`DBG
(<<" keycmp oldlen=" <<

507 
ﬁdÀngths
[
k
] << "ÇewÀn" << 
Àngths
[k]);

508 
j
(*
kl
.
	`keycmp
(
k
))(

509 
ﬁdÀngths
[
k
], 
ﬁdkeys
[k],

510 
Àngths
[
k
], 
keys
[k]

512 
	`DBG
(<<" keycm∞" << " oldÑec‹d wôh " << 
pö
->
	`rid
()

513 << " yõld†" << 
j
);

515 if(
j
==0) {

522 if(
kl
.
	`is_unique
()) {

523 
	`w_as£π3
(
j
 != 0);

524 if(
j
==0) {

525 
dñëe
 
sˇn
;

529 if(
kl
.
	`is_as˚ndög
()) {

530 
	`w_as£π3
(
j
 <= 0);

531 if(
j
>0) {

532 
dñëe
 
sˇn
;

536 
	`w_as£π3
(
j
 >= 0);

537 if(
j
<0) {

538 
dñëe
 
sˇn
;

545 
	`mem£t
(
°rbuf
, 'Z', 
STRINGMAX
);

547 *
de°
 = 
°rbuf
;

548 
k
=0; k<
nkeys
; k++) {

549 
	`w_as£π1
(
de°
 - 
°rbuf
 < 
STRINGMAX
);

550 
ﬁdkeys
[
k
] = 
de°
;

551 
ﬁdÀngths
[
k
] = 
Àngths
[k];

552 
	`mem˝y
(
de°
, 
keys
[
k
], 
Àngths
[k]);

553 
de°
 +
Àngths
[
k
];

554 
	`DBG
(<<"C›õd key :Üígth[k]=" << 
ﬁdÀngths
[
k
]);

556 if(!
do_com∑ª
) {

560 
fú°
 = 
Ál£
;

564 
dñëe
 
sˇn
;

566 
	}
}

574 
check_fûe_is_s‹ãd2
(
°id_t
 
fid
,

575 
s‹t_keys_t
&
kl
,

576 
W_IFTRACE
(
n
),

577 
numnuŒs
,

578 
ty≥d_båì_ã°
 
t
 )

580 
boﬁ
 
u£_unsig√d
(
Ál£
);

581 
	gt
)

583 
	gã°_bœrge
:

584 
ã°_b23
:

585 
ã°_bv
:

586 
ã°_b1
:

587 
ã°_u1
:

588 
ã°_u2
:

589 
ã°_u4
:

590 
ã°_u8
:

591 
u£_unsig√d
 = 
åue
;

596 
	#STRINGMAX
 
ss_m
::
∑ge_sz


	)

597 
pö_i
* 
	gpö
;

598 
boﬁ
 
	geof
;

599 
rc_t
 
	grc
;

600 
sˇn_fûe_i
* 
	gsˇn
;

602 
DBG
(<<"check_fûe_is_s‹ãd2 " << 
fid


603 << "Ç " << 
n


604 << "ÇumnuŒ†" << 
numnuŒs
);

606 
	gsˇn
 = 
√w
 
sˇn_fûe_i
(
fid
, 
ss_m
::
t_cc_fûe
);

608 
	gj
=0;

609 
	g¥i‹key
=0;

610 
	gnumnuŒs
++;

611  !(
	grc
=
sˇn
->
√xt
(
pö
, 0, 
eof
)).
is_îr‹
() ) {

612 if(
	geof
) ;

614 
	gj
++;

615 
DBG
(<< 
j
 << "--- sˇ¿ªc‹d " << j << "Ñid=" << 
pö
->
rid
());

620 
rid_t
 
	g‹id
;

621 
mem˝y
(&
‹id
, 
pö
->
body
(), (orid));

622 
DBG
(<<"Öö->body f‹ " << 
pö
->
rid
(Ë<< " c⁄èö†" << 
‹id
);

624 
pö_i
 
	gh™dÀ
;

625 
W_IGNORE
(
h™dÀ
.
pö
(
‹id
, 0));

632 
	gthiskey
;

633 
mem˝y
(&
thiskey
, 
h™dÀ
.
hdr
(), (thiskey));

634 
boﬁ
 
	gha¢okey
;

635 
mem˝y
(&
ha¢okey
, 
h™dÀ
.
hdr
()+(
thiskey
), (hasnokey));

637 
DBG
(<<" hd∏f‹ " << 
h™dÀ
.
rid
()

638 << " c⁄èö†vÆuê(" << 
thiskey


639 << "," << (
ha¢okey
) << ")"

640 << " j " << 
j


641 << "ÇumnuŒ†" << 
numnuŒs


644 if(
	gj
 > 
	gnumnuŒs
) {

647 if(
	gkl
.
is_as˚ndög
()) {

648 if(
	g¥i‹key
 > 
	gthiskey
) {

649 
boﬁ
 
bad
(
åue
);

650 if(
	gu£_unsig√d
) {

651 if((
	g¥i‹key
Ë<(
thiskey
)) {

652 
bad
 = 
Ál£
;

655 if(
	gbad
) {

656 if(
	gu£_unsig√d
) {

657 
DBG
(<<"ás˚ndög buà¥i‹key=" << (
¥i‹key
)

658 << "Åhiskey=" << (
thiskey
)

659 << " u£_unsig√d " << 
u£_unsig√d


662 
DBG
(<<"ás˚ndög buà¥i‹key=" << 
¥i‹key


663 << "Åhiskey=" << 
thiskey


664 << " u£_unsig√d " << 
u£_unsig√d


667 
dñëe
 
	gsˇn
;

672 if(
	g¥i‹key
 < 
	gthiskey
) {

673 
boﬁ
 
bad
(
åue
);

674 if(
	gu£_unsig√d
) {

675 if((
	g¥i‹key
Ë>(
thiskey
)) {

676 
bad
 = 
Ál£
;

679 if(
	gbad
) {

680 if(
	gu£_unsig√d
) {

681 
DBG
(<<"ÇŸás˚ndög buà¥i‹key=" << (
¥i‹key
)

682 << "Åhiskey=" << (
thiskey
)

683 << " u£_unsig√d " << 
u£_unsig√d


686 
DBG
(<<"ÇŸás˚ndög buà¥i‹key=" << 
¥i‹key


687 << "Åhiskey=" << 
thiskey


688 << " u£_unsig√d " << 
u£_unsig√d


691 
dñëe
 
	gsˇn
;

697 
	g¥i‹key
 = 
thiskey
;

700 
w_as£π1
(
eof
);

702 
dñëe
 
	gsˇn
;

703 
DBG
(<<"---------------check_fûe_is_s‹ãd2 " << 
fid
 << " OK , found " << 
j
);

709 
	gdñëî
::
	$dißrm
()

711 
fid
 = 
°id_t
::
nuŒ
;

712 
sˇ≈
=0;

713 
sˇƒ
=0;

714 
	}
}

716 
	gdñëî
::~
	$dñëî
()

718 if(
fid
 !
°id_t
::
nuŒ
) {

719 
	`DBG
(<<"De°royög fûê" << 
fid
);

720 
w_rc_t
 
rc
 = 
sm
->
	`de°roy_fûe
(
fid
);

721 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë=
ss_m
::
eBADSTORETYPE
) {

722 
	`DBG
(<<"Tryágaö: de°royög index " << 
fid
);

723 
rc
 = 
sm
->
	`de°roy_ödex
(
fid
);

725 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
(Ë=
ss_m
::
eBADNDXTYPE
) {

726 
	`DBG
(<<"Tryágaö: de°royögÑåì " << 
fid
);

727 
rc
 = 
sm
->
	`de°roy_md_ödex
(
fid
);

729 if(
rc
.
	`is_îr‹
()Ë
˚º
 << "Eº‹ÅryögÅÿde°roy fûê" <<Ñ¯<<
ídl
;

731 if(
sˇ≈
) {

732 
	`DBG
(<<"Deleting scanÖ");

733 
dñëe
 
sˇ≈
;

735 if(
sˇƒ
) {

736 
	`DBG
(<<"Deleting scanÑ");

737 
dñëe
 
sˇƒ
;

739 
	}
}

768 ˛as†
	cboxÁ˘‹y
 : 
public
 
Á˘‹y_t


770 
public
:

771 
‰ìfunc
(c⁄° *
p
, 
smsize_t
 
	$W_IFDEBUG1
(
s
)) {

772 
nbox_t
 *
b
 = (nbox_à*)
p
;

776 
	`w_as£π1
(
s
 =
	`smsize_t
(
b
->
	`kÀn
()));

778 
dñëe
 [] 
b
;

780 * 
	$Ælocfunc
(
smsize_t
 
numbî
) {

781 
	`w_as£π1
(
numbî
 == 1);

782  (*)
√w
 
nbox_t
[
numbî
];

783 
	}
}

784 
smsize_t
 
	$sz
(Ëc⁄° {  (
nbox_t
); 
	}
}

787 
boxÁ˘‹y
 
	gbox_Á˘‹y
;

789 
w_rc_t


790 
‹igöÆboxCSKF
(

791 c⁄° 
rid_t
&

792 #ifde‡
W_TRACE


793 
rid


796 c⁄° 
obje˘_t
& 
obj_ö
,

797 
key_cookõ_t
 
cookõ
,

798 
Á˘‹y_t
& ,

799 
skey_t
* 
out


802 
	ggíîic_CSKF_cookõ
& 
	gK
 = *(
gíîic_CSKF_cookõ
*)(
cookõ
.
make_±r
());

804 
smsize_t
 
	gÀngth
 = 
K
.
Àngth
;

807 
smsize_t
 
	goff£t
 = 
K
.
off£t
;

809 if(
	goff£t
 + 
	gÀngth
 + (
	grid_t
Ë> 
	gobj_ö
.
body_size
()) {

811 
	gÀngth
 = 0;

814 if(
	gÀngth
>0) {

815 *
	gc
 = 
box_Á˘‹y
.
Ælocfunc
(1);

816 
nbox_t
* 
	gbox
 = (nbox_à*)
c
;

818 if(
	gobj_ö
.
body_size
(Ë=
obj_ö
.
c⁄tig_body_size
()) {

820 
box
->
byãs2box
((*)
obj_ö
.
body
(
off£t
), 
Àngth
);

824 *
	gtmp
 = 
√w
 [
Àngth
];

825 if(!
	gtmp
Ë 
RC
(
ss_m
::
eOUTOFMEMORY
);

826 
vec_t
 
v
(
tmp
, 
Àngth
);

827 
w_rc_t
 
	grc
 = 
obj_ö
.
c›y_out
(
Ál£
, 
off£t
, 
Àngth
, 
v
);

829 if(
	grc
.
is_îr‹
()) {

830 
	gdñëe
[] 
	gtmp
;

831  
	grc
;

833 
	gbox
->
byãs2box
(
tmp
, 
Àngth
);

834 
	gdñëe
[] 
	gtmp
;

836 
DBG
(<<" origöÆ box f‹Ñec‹d " << 
rid
 << " i†" << *
box
);

842 c⁄° *
	gb
 = 
box
->
kvÆ
();

843 
smsize_t
 
	goff
 = smsize_t((c⁄° *)
b
 - (c⁄° *)
c
);

844 
√w
(
out
Ë
skey_t
(
c
, 
off
, 
box
->
kÀn
(), 
box_Á˘‹y
);

846 
√w
(
out
Ë
skey_t
(0, 0, 0, *
Á˘‹y_t
::
n⁄e
);

849  
	gRCOK
;

853 
w_rc_t


854 
	$vbl°rögCSKF
(

855 c⁄° 
rid_t
& ,

856 c⁄° 
obje˘_t
& 
obj_ö
,

857 
key_cookõ_t
 
cookõ
,

858 
Á˘‹y_t
& ,

859 
skey_t
* 
out


862 
gíîic_CSKF_cookõ
& 
K
 = *(gíîic_CSKF_cookõ*)(
cookõ
.
	`make_±r
());

864 
smsize_t
 
Àngth
 = 0;

867 
smsize_t
 
off£t
 = 
K
.offset;

868 
Àngth
 = 
obj_ö
.
	`body_size
(Ë- 
off£t
 - (
rid_t
);

869 
	`√w
(
out
Ë
	`skey_t
(
obj_ö
, 
off£t
, 
Àngth
, 
Ál£
);

870  
RCOK
;

871 
	}
}

873 
CF


874 
	$gëcmpfunc
(
ty≥d_båì_ã°
 
t
,

875 
CSKF
& 
gë_s‹t_key_func
,

876 
key_cookõ_t
 
lfunc_cookõ


879 
gíîic_CSKF_cookõ
 *
g
 = (gíîic_CSKF_cookõ *Ë(
lfunc_cookõ
.
	`make_±r
());

880 
gë_s‹t_key_func
 = 
s‹t_keys_t
::
gíîic_CSKF
;

885 
t
) {

886 
ã°_bv
:

887 
ã°_bœrge
:

888 
g
->
func
 = 
s‹t_keys_t
::
noLEXFUNC
;

889 
g
->
Àngth
(
MAXBV
);

890 
gë_s‹t_key_func
 = 
vbl°rögCSKF
;

891  
s‹t_keys_t
::
°rög_cmp
;

893 
ã°_b23
:

894 
g
->
func
 = 
s‹t_keys_t
::
noLEXFUNC
;

895 
g
->
Àngth
= 23;

896  
s‹t_keys_t
::
°rög_cmp
;

898 
ã°_b1
:

899 
g
->
func
 = 
s‹t_keys_t
::
noLEXFUNC
;

900 
g
->
Àngth
 = (
w_ba£_t
::
uöt1_t
);

901  
s‹t_keys_t
::
°rög_cmp
;

903 
ã°_u1
:

904 
g
->
func
 = 
s‹t_keys_t
::
u1_Àx
;

905 
g
->
Àngth
 = (
w_ba£_t
::
uöt1_t
);

906  
s‹t_keys_t
::
uöt1_cmp
;

908 
ã°_i1
:

909 
g
->
func
 = 
s‹t_keys_t
::
i1_Àx
;

910 
g
->
Àngth
 = (
w_ba£_t
::
öt1_t
);

911  
s‹t_keys_t
::
öt1_cmp
;

913 
ã°_u2
:

914 
g
->
func
 = 
s‹t_keys_t
::
u2_Àx
;

915 
g
->
Àngth
 = (
w_ba£_t
::
uöt2_t
);

916 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
uöt2_t
)) == g->offset);

917  
s‹t_keys_t
::
uöt2_cmp
;

919 
ã°_i2
:

920 
g
->
func
 = 
s‹t_keys_t
::
i2_Àx
;

921 
g
->
Àngth
 = (
w_ba£_t
::
öt2_t
);

922 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
öt2_t
)) == g->offset);

923  
s‹t_keys_t
::
öt2_cmp
;

925 
ã°_u4
:

926 
g
->
func
 = 
s‹t_keys_t
::
u4_Àx
;

927 
g
->
Àngth
 = (
w_ba£_t
::
uöt4_t
);

928 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
uöt4_t
)) == g->offset);

929  
s‹t_keys_t
::
uöt4_cmp
;

931 
ã°_•©ül
:

932 
gë_s‹t_key_func
 = 
‹igöÆboxCSKF
;

933 
g
->
func
 = 
s‹t_keys_t
::
i4_Àx
;

934 
g
->
Àngth
 = (
w_ba£_t
::
öt4_t
);

935  
s‹t_keys_t
::
öt4_cmp
;

937 
ã°_i4
:

938 
g
->
func
 = 
s‹t_keys_t
::
i4_Àx
;

939 
g
->
Àngth
 = (
w_ba£_t
::
öt4_t
);

940 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
öt4_t
)) == g->offset);

941  
s‹t_keys_t
::
öt4_cmp
;

943 
ã°_u8
:

944 
g
->
func
 = 
s‹t_keys_t
::
u8_Àx
;

945 
g
->
Àngth
 = (
w_ba£_t
::
uöt8_t
);

946 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
uöt8_t
)) == g->offset);

947  
s‹t_keys_t
::
uöt8_cmp
;

949 
ã°_i8
:

950 
g
->
func
 = 
s‹t_keys_t
::
i8_Àx
;

951 
g
->
Àngth
 = (
w_ba£_t
::
öt8_t
);

952 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
öt8_t
)) == g->offset);

953  
s‹t_keys_t
::
öt8_cmp
;

955 
ã°_f4
:

956 
g
->
func
 = 
s‹t_keys_t
::
f4_Àx
;

957 
g
->
Àngth
 = (
w_ba£_t
::
f4_t
);

958 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
f4_t
)) == g->offset);

959  
s‹t_keys_t
::
f4_cmp
;

961 
ã°_f8
:

962 
g
->
func
 = 
s‹t_keys_t
::
f8_Àx
;

963 
g
->
Àngth
 = (
w_ba£_t
::
f8_t
);

964 
	`w_as£π1
(
	`Æign⁄
(
g
->
off£t
,(
w_ba£_t
::
f8_t
)) == g->offset);

965  
s‹t_keys_t
::
f8_cmp
;

968 
˚º
 << "swôch --Åe°Åy≥ÇŸ suµ‹ãd : " << (Ë
t
 <<
ídl
;

969 
	`w_as£π3
(0);

971 
	`w_as£π1
(0);

973 
	}
}

982 
	$c⁄vît_to
(
kk
, 
ty≥d_vÆue
 &
k
, 
ty≥d_båì_ã°
 
t
, *
°rögbuf„r
 )

984 
	`DBG
(<<"c⁄vît_to("<<
kk
<<"Ëà" << 
t
);

985 
t
) {

986 
ã°_bv
:

987 
ã°_bœrge
:

988 
ã°_b23
: {

989 
k
.
_u
.
bv
 = 
°rögbuf„r
;

990 
	`w_as£π1
(
kk
 < 
MAXBV
-1);

991 
Àn
 = 
kk
;

992 
c
 = 'p';

993 if(
kk
 < 0) {

994 
Àn
 = 0-
kk
;

995 
	`w_as£π1
(
Àn
 < 
MAXBV
-1);

996 
c
 = 'n';

998 if(
Àn
 == 0) {

999 
Àn
++;

1000 
c
 = 'o';

1002 
	`mem£t
(
°rögbuf„r
, 
c
, 
Àn
);

1003 
°rögbuf„r
[
Àn
] = '\0';

1004 
k
.
_Àngth
 = 
Àn
+1;

1007 
ã°_b1
:

1008 
k
.
_u
.
b1
 = 
w_ba£_t
::
	`uöt1_t
(
kk
);

1010 
ã°_u1
:

1011 
k
.
_u
.
u1_num
 = 
w_ba£_t
::
	`uöt1_t
(
kk
);

1013 
ã°_i1
:

1014 
k
.
_u
.
i1_num
 = 
w_ba£_t
::
	`öt1_t
(
kk
);

1016 
ã°_u2
:

1017 
k
.
_u
.
u2_num
 = 
w_ba£_t
::
	`uöt2_t
(
kk
);

1019 
ã°_i2
:

1020 
k
.
_u
.
i2_num
 = 
w_ba£_t
::
	`öt2_t
(
kk
);

1022 
ã°_u4
:

1023 
k
.
_u
.
u4_num
 = 
w_ba£_t
::
	`uöt4_t
(
kk
);

1025 
ã°_•©ül
:

1026 
ã°_i4
:

1027 
k
.
_u
.
i4_num
 = 
w_ba£_t
::
	`öt4_t
(
kk
);

1028 
	`DBG
(<<"c⁄vît_to("<<
kk
<<"Ëyõld†" << 
k
.
_u
.
i4_num
);

1030 
ã°_u8
:

1031 
k
.
_u
.
u8_num
 = 
w_ba£_t
::
	`uöt8_t
(
kk
);

1033 
ã°_i8
:

1034 
k
.
_u
.
i8_num
 = 
w_ba£_t
::
	`öt8_t
(
kk
);

1036 
ã°_f4
:

1037 
k
.
_u
.
f4_num
 = 
w_ba£_t
::
	`f4_t
(
kk
);

1039 
ã°_f8
:

1040 
k
.
_u
.
f8_num
 = 
w_ba£_t
::
	`f8_t
(
kk
);

1043 
˚º
 << "swôch" <<
ídl
;

1044 
	`w_as£π3
(0);

1046 
	}
}

1049 
c⁄vît_back
(
ty≥d_vÆue
 &
k
, & 
kk
, 
ty≥d_båì_ã°
 
t
, * 
	$W_IFDEBUG1
(
°rögbuf„r
) )

1051 
t
) {

1052 
ã°_b23
:

1053 
ã°_bœrge
:

1054 
ã°_bv
: {

1055 c⁄° *
p
 = 
k
.
_u
.
bv
;

1056 
	`w_as£π1
(
k
.
_u
.
bv
 =
°rögbuf„r
);

1057 
n
=0;

1058 *
p
 == 'o') {Ö++; }

1059 *
p
 ='n'Ë{ 
n
--;Ö++; }

1060 *
p
 ='p'Ë{ 
n
++;Ö++; }

1062 
	`w_as£π1
(
p
 > 
k
.
_u
.
bv
);

1063 
kk
 = 
n
;

1064 if(
n
 == 0) {

1065 
k
.
_Àngth
 = 2;

1066 } if(
n
 < 0) {

1067 
k
.
_Àngth
 = (0-
n
)+1;

1069 
k
.
_Àngth
 = 
n
+1;

1073 
ã°_b1
:

1074 
kk
 = (
k
.
_u
.
b1
);

1076 
ã°_u1
:

1077 
kk
 = (
k
.
_u
.
u1_num
);

1079 
ã°_i1
:

1080 
kk
 = (
k
.
_u
.
i1_num
);

1082 
ã°_u2
:

1083 
kk
 = (
k
.
_u
.
u2_num
);

1085 
ã°_i2
:

1086 
kk
 = (
k
.
_u
.
i2_num
);

1088 
ã°_u4
:

1089 
kk
 = (
k
.
_u
.
u4_num
);

1091 
ã°_•©ül
:

1092 
ã°_i4
:

1093 
kk
 = (
k
.
_u
.
i4_num
);

1095 
ã°_u8
:

1096 
kk
 = (
k
.
_u
.
u8_num
);

1098 
ã°_i8
:

1099 
kk
 = (
k
.
_u
.
i8_num
);

1101 
ã°_f4
:

1102 
kk
 = (
k
.
_u
.
f4_num
);

1104 
ã°_f8
:

1105 
kk
 = (
k
.
_u
.
f8_num
);

1108 
˚º
 << "swôch" <<
ídl
;

1109 
	`w_as£π3
(0);

1111 
	}
}

1114 
w_rc_t


1115 
	$…e°CSKF
(

1116 c⁄° 
rid_t
& ,

1117 c⁄° 
obje˘_t
& 
obj_ö
,

1118 
key_cookõ_t
 
k
,

1119 
Á˘‹y_t
& ,

1120 
skey_t
* 
key


1123 
smsize_t
 
z
 = 
k
.
	`make_smsize_t
() ;

1126 
smsize_t
 
Àngth
 = 
obj_ö
.
	`body_size
(Ë- 
z
 - (
rid_t
);

1127 
	`√w
(
key
Ë
	`skey_t
(
obj_ö
, 
z
, 
Àngth
, 
Ál£
);

1128  
RCOK
;

1129 
	}
}

1131 
w_rc_t


1132 
	$ã°CSKF
(

1133 c⁄° 
rid_t
& ,

1134 c⁄° 
obje˘_t
& 
obj_ö
,

1135 
key_cookõ_t
 
k
,

1136 
Á˘‹y_t
& ,

1137 
skey_t
* 
key


1140 
smsize_t
 
z
 = 
k
.
	`make_smsize_t
();

1143 
smsize_t
 
Àngth
 = 
obj_ö
.
	`body_size
(Ë- 
z
 - (
rid_t
);

1144 
	`√w
(
key
Ë
	`skey_t
(
obj_ö
, 
z
, 
Àngth
, 
Ál£
);

1145  
RCOK
;

1146 
	}
}

	@src/sm/smsh/sort_funcs4.cpp

30 
	~"w_deföes.h
"

41 
	~"shñl.h
"

42 
	~"s‹t_funcs.h
"

43 
	~<√w
>

45 "C" 
boﬁ
 
s‹t_is_ö°rumíãd
();

49 
	go°ªam
 &

50 
	g›î©‹
<<(
	go°ªam
 &
	go
, c⁄° 
	gmëad©a
 &
	gm
)

52 
	go


53 << "mëad©®{ã° " << 
cvtFROMty≥
(
m
.
t
)

54 << " off£à" << 
	gm
.
	goff£t


55 << "Üí " << 
	gm
.
	gÀngth


56 << "álig√d " << 
	gm
.
	gÆig√d


57 << " fixed " << 
	gm
.
	gfixed


58 << "Üexicÿ" << 
	gm
.
	gÀxico


59 << "ÇuŒabÀ " << 
	gm
.
	gnuŒabÀ


60 << " dîived " << 
	gm
.
	gdîived


62  
	go
;

65 
	$¥öt_mu…ikey_s‹t_fûe_DSCB
(
pö_i
 &
pö
)

67 if(!
pö
.
	`pö√d
()) {

68 
cout
 << "N⁄e" << 
ídl
;

71 
cout
 << "\t ";

72 
smsize_t
 
mëad©a_size
 = 
pö
.
	`hdr_size
();

73 
nkeys
 = (
mëad©a_size
 / (
mëad©a
));

74 
mëad©a
 *
m
 = (mëad©®*)
pö
.
	`hdr
();

77 
k
=0; k < 
nkeys
; k++) {

78 
cout
 << 
m
[
k
] << 
ídl
;

82 
k
=0; k < 
nkeys
; k++) {

83 
ty≥d_båì_ã°
 
t
 = 
m
[
k
].t;

85 if(
m
[
k
].
Àngth
 == 0) {

86 
cout
 << "NULL";

88 
t
) {

89 
ã°_nosuch
: {

90 
cout
 << "Çosuch" << 
ídl
;

93 
ã°_•©ül
: {

94 
	`w_as£π1
(
m
[
k
].
Àxico
 =
Ál£
);

95 
	`w_as£π1
(
m
[
k
].
Æig√d
 =
åue
);

96 
	`w_as£π1
(
m
[
k
].
dîived
 =
åue
);

97 
cout
 << " spatial, derived,ÇotÖrinted" ;

100 
ã°_bv
:

101 
ã°_bœrge
:

102 
cout
 << " variable-length byte, may crossÖage boundaries,ÇotÖrinted" ;

104 
ã°_b23
:

105 
	`w_as£π1
(
m
[
k
].
Àngth
 == 23);

106 
cout
 << " <b23ÇotÖrinted>" ;

108 
ã°_b1
:

109 
	`w_as£π1
(
m
[
k
].
Àngth
 == 1);

110 
cout
 << " <b1ÇotÖrinted>" ;

113 
ã°_u1
:

115 
	`w_as£π1
(
m
[
k
].
Àngth
 == 1);

116 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

117 
w_ba£_t
::
uöt1_t
 
i
;

118 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

119 
cout
 << ()
i
;

124 
ã°_i1
:

126 
	`w_as£π1
(
m
[
k
].
Àngth
 == 1);

127 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

128 
w_ba£_t
::
öt1_t
 
i
;

129 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

130 
cout
 << ()
i
;

134 
ã°_u2
: {

135 
	`w_as£π1
(
m
[
k
].
Àngth
 == 2);

136 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

137 
w_ba£_t
::
uöt2_t
 
i
;

138 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

139 
cout
 << (Ë
i
;

143 
ã°_i2
: {

144 
	`w_as£π1
(
m
[
k
].
Àngth
 == 2);

145 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

146 
w_ba£_t
::
öt2_t
 
i
;

147 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

148 
cout
 << 
i
;

152 
ã°_u4
:

154 
	`w_as£π1
(
m
[
k
].
Àngth
 == 4);

155 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

156 
w_ba£_t
::
uöt4_t
 
i
;

157 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

158 
cout
 << 
i
;

162 
ã°_i4
:

164 
	`w_as£π1
(
m
[
k
].
Àngth
 == 4);

165 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

166 
w_ba£_t
::
öt4_t
 
i
;

167 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

168 
cout
 << 
i
;

172 
ã°_u8
:

174 
	`w_as£π1
(
m
[
k
].
Àngth
 == 8);

175 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

176 
w_ba£_t
::
uöt8_t
 
i
;

177 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

178 
cout
 << 
i
;

182 
ã°_i8
:

184 
	`w_as£π1
(
m
[
k
].
Àngth
 == 8);

185 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

186 
w_ba£_t
::
öt8_t
 
i
;

187 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

188 
cout
 << 
i
;

192 
ã°_f4
: {

193 
	`w_as£π1
(
m
[
k
].
Àngth
 == ());

194 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

195 
i
;

196 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

197 
cout
 << 
i
;

201 
ã°_f8
: {

202 
	`w_as£π1
(
m
[
k
].
Àngth
 == ());

203 
	`w_as£π1
(
m
[
k
].
off£t
 + m[k].
Àngth
 <
pö
.
	`Àngth
());

204 
i
;

205 
	`mem˝y
(&
i
, 
pö
.
	`body
()+
m
[
k
].
off£t
, m[k].
Àngth
);

206 
cout
 << 
i
;

210 
cout
 << "\t ";

214 
	}
}

216 #ifde‡
EXPLICIT_TEMPLATE


217 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gmëad©a
>;

218 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<>;

219 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gCF
>;

220 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gCSKF
>;

221 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	gs‹t_keys_t
>;

224 
w_rc_t


225 
	$c›yMOF
 (

226 c⁄° 
rid_t
& ,

227 c⁄° 
obje˘_t
& 
obj_ö
,

228 
key_cookõ_t
 ,

230 
obje˘_t
* 
obj_out


236 
smsize_t
 
bÀngth
 = 
obj_ö
.
	`body_size
();

237 
smsize_t
 
hÀngth
 = 
obj_ö
.
	`hdr_size
();

239 
Á˘‹y_t
& 
f
 = *Á˘‹y_t::
˝p_ve˘‹
;

240 * 
h
=0;

241 * 
b
=0;

242 if(
hÀngth
) {

243 
h
 = 
f
.
	`Ælocfunc
(
hÀngth
);

244 
vec_t
 
	`hdr
(
h
, 
hÀngth
);

245 
	`W_DO
(
obj_ö
.
	`c›y_out
(
åue
 , 0, 
hÀngth
, 
hdr
));

247 if(
bÀngth
) {

248 
b
 = 
f
.
	`Ælocfunc
(
bÀngth
);

249 
vec_t
 
	`body
(
b
, 
bÀngth
);

250 
	`W_DO
(
obj_ö
.
	`c›y_out
(
Ál£
, 0, 
bÀngth
, 
body
));

252 
	`√w
 (
obj_out
Ë
	`obje˘_t
(
h
, 
hÀngth
, 
f
, 
b
, 
bÀngth
, f);

253  
RCOK
;

254 
	}
}

256 
w_rc_t


257 
	$c›yUMOF
 (

258 c⁄° 
rid_t
& ,

259 c⁄° 
obje˘_t
& 
obj_ö
,

260 
key_cookõ_t
 ,

262 
obje˘_t
* 
obj_out


265 
	`√w
 (
obj_out
Ë
	`obje˘_t
(
obj_ö
);

266  
RCOK
;

267 
	}
}

274 
	$check_mu…ikey_fûe
–
°id_t
 
fid
, 
s‹t_keys_t
&
kl
, 
boﬁ
 
do_com∑ª
)

276 
	#STRINGMAX
 
ss_m
::
∑ge_sz


	)

277 
pö_i
* 
pö
;

278 
boﬁ
 
eof
;

279 
rc_t
 
rc
;

280 
sˇn_fûe_i
* 
sˇn
;

281 
com∑ris⁄s
=0;

282 
ƒec‹ds
=0;

283 
nuŒs
=0;

285 
nkeys
 = 
kl
.
	`nkeys
();

286 
k
;

288 
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
, 
ss_m
::
t_cc_fûe
);

290 *
°rbuf
 = 
√w
 [
STRINGMAX
];

291 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
°rbuf
);

293 *
ﬁdÀngths
 = 
√w
 [
nkeys
];

294 c⁄° * 
	tch¨p
;

295 
ch¨p
 *
ﬁdkeys
 = 
√w
 ch¨p[
nkeys
];

296 
w_auto_dñëe_¨øy_t
<> 
	`autodñ2
(
ﬁdÀngths
);

297 
w_auto_dñëe_¨øy_t
<c⁄° *> 
	`autodñ3
(
ﬁdkeys
);

298 
ch¨p
 *
keys
 = 
√w
 ch¨p[
nkeys
];

299 *
Àngths
 = 
√w
 [
nkeys
];

300 
w_auto_dñëe_¨øy_t
<> 
	`autodñ4
(
Àngths
);

301 
w_auto_dñëe_¨øy_t
<c⁄° *> 
	`autodñ5
(
keys
);

303 
boﬁ
 
fú°
 = 
åue
;

305  !(
rc
=
sˇn
->
	`√xt
(
pö
, 0, 
eof
)).
	`is_îr‹
() && !eof) {

306 
ƒec‹ds
++;

307 
mëad©a
 *
mëa
;

308 #ifde‡
W_DEBUG


309 
smsize_t
 
mëad©a_size
 = (
mëad©a
Ë* 
nkeys
;

310 
	`w_as£π3
(
pö
->
	`hdr_size
(Ë=
mëad©a_size
);

312 
mëa
 = (
mëad©a
 *)
pö
->
	`hdr
();

314 
	`DBG
(<<" sˇ¿ªc‹d " << 
pö
->
	`rid
());

315 
nbox_t
 
	`box
(2);

320 
myoff£t
= 0;

321 
k
=0; k<
nkeys
; k++) {

322 
myoff£t
 +
mëa
[
k
].
off£t
;

323 
keys
[
k
] = 
pö
->
	`body
(Ë+ 
mëa
[k].
off£t
;

324 if(
pö
->
	`is_smÆl
()) {

325 
	`DBG
(<<"key " << 
k
 << " i†" << 
keys
[k]

326 << "Üígth " << 
mëa
[
k
].
Àngth
);

329 
˚º
 <<"key " << 
k
 << " i†" << 
keys
[k]

330 << "Üígth " << 
mëa
[
k
].
Àngth
 << 
ídl
;

331 
	`W_FATAL_MSG
(
fcNOTIMPLEMENTED
,

332 << "ˇn'àcheckÜ¨gêobje˘†yë "<<
ídl


334 
dñëe
 
sˇn
;

337 
Àngths
[
k
] = 
mëa
[k].
Àngth
;

338 
myoff£t
 +
Àngths
[
k
];

341 if(
do_com∑ª
 && !
fú°
) {

342 
j
=0;

346 
k
=0; k<
nkeys
; k++) {

347 
	`DBG
(<<" keycmp oldlen=" <<

348 
ﬁdÀngths
[
k
] << "ÇewÀn" << 
Àngths
[k]);

349 if(
ﬁdÀngths
[
k
] =0 || 
Àngths
[k] == 0) {

350 
j
 = 
ﬁdÀngths
[
k
] - 
Àngths
[k];

353 
com∑ris⁄s
++;

355 i‡(
mëa
[
k
].
t
 =
ã°_•©ül
) {

356 
nbox_t
 
	`box1
(2), 
	`box2
(2);

357 
box2
.
	`byãs2box
(
keys
[
k
], box2.
	`kÀn
());

358 
	`DBG
(<<"√w key i†" << 
box2
);

359 
hvÆue2
 = 
box2
.
	`hvÆue
(
univî£
);

360 
	`DBG
(<< " hvÆuêi†" << 
hvÆue2


361 << " wôh univî£ " << 
univî£


364 
hvÆue1
;

365 
	`w_as£π1
(
ﬁdÀngths
[
k
] =(
hvÆue1
));

366 
	`mem˝y
(&
hvÆue1
, 
ﬁdkeys
[
k
], 
ﬁdÀngths
[k]);

368 
j
(*
kl
.
	`keycmp
(
k
))(

369 (
hvÆue1
), &hvalue1,

370 (
hvÆue2
), &hvalue2

373 
j
(*
kl
.
	`keycmp
(
k
))(

374 
ﬁdÀngths
[
k
], 
ﬁdkeys
[k],

375 
Àngths
[
k
], 
keys
[k]

378 
com∑ris⁄s
++;

379 
	`DBG
(<<" keycm∞ key " << 
k
 << " oldÑec‹d wôh " << 
pö
->
	`rid
()

380 << " yõld†" << 
j
);

383 if(
j
==0) {

384 
	`DBG
(<<"compareÇext key");

387 
	`DBG
(<<"SkipÑest of keys: key "

388 << 
k


389 << " com∑ris⁄ i†" << 
j


394 if(
kl
.
	`is_unique
()) {

395 
	`w_as£π1
(
j
 != 0);

396 if(
j
==0) {

397 
dñëe
 
sˇn
;

401 if(
kl
.
	`is_as˚ndög
()) {

402 
	`w_as£π1
(
j
 <= 0);

403 if(
j
>0) {

404 
dñëe
 
sˇn
;

408 
	`w_as£π1
(
j
 >= 0);

409 if(
j
<0) {

410 
dñëe
 
sˇn
;

417 
	`mem£t
(
°rbuf
, 'Z', 
STRINGMAX
);

419 *
de°
 = 
°rbuf
;

420 
k
=0; k<
nkeys
; k++) {

421 
	`w_as£π1
(
de°
 - 
°rbuf
 < 
STRINGMAX
);

422 
ﬁdkeys
[
k
] = 
de°
;

423 
ﬁdÀngths
[
k
] = 
Àngths
[k];

424 i‡(
mëa
[
k
].
t
 =
ã°_•©ül
) {

425 
nbox_t
 
	`box
(2);

426 
box
.
	`byãs2box
(
keys
[
k
], box.
	`kÀn
());

427 
hvÆue
 = 
box
.
	`hvÆue
(
univî£
);

428 
	`DBG
(<<"ßvög hvÆuê" << 
hvÆue
 << " f‹ box " << 
box
);

429 
	`w_as£π1
(
Àngths
[
k
] =(
hvÆue
));

430 
	`mem˝y
(
de°
, &
hvÆue
, 
Àngths
[
k
]);

432 
	`mem˝y
(
de°
, 
keys
[
k
], 
Àngths
[k]);

434 
de°
 +
Àngths
[
k
];

435 
	`DBG
(<<"C›õd key :Üígth[k]=" << 
ﬁdÀngths
[
k
]);

436 if(
Àngths
[
k
] =0Ë
nuŒs
++;

438 if(!
do_com∑ª
) {

442 
fú°
 = 
Ál£
;

446 
cout
 << "check_multikey_file did "

447 << 
com∑ris⁄s
 << " key comparisons for "

448 << 
ƒec‹ds
 << "Ñecords ("

449 << 
nuŒs
 << "ÇuŒÑec‹ds)" << 
ídl
 <<Éndl;

450 
dñëe
 
sˇn
;

452 
	}
}

459 
	$t_mu…ikey_s‹t_fûe
(
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

461 
cou¡_bv_obje˘s
 =0;

463 
	`FUNC
(
t_mu…ikey_s‹t_fûe
);

464 c⁄° 
vid_¨g
 =1;

465 c⁄° 
ƒecs_¨g
 =2;

466 c⁄° 
runsize_¨g
 =3;

467 c⁄° 
up_¨g
 =4;

468 c⁄° 
uniq_¨g
 =5;

469 c⁄° 
ouçut_¨g
 =6;

470 c⁄° 
kìp_¨g
 = 7;

471 c⁄° 
dìp_¨g
 = 8;

472 c⁄° 
ˇºy_¨g
 = 9;

473 c⁄° 
nkeys_¨g
 =10;

474 c⁄° 
ty≥_¨g
 =11;

475 c⁄° 
©r_¨g
 =12;

476 
fûe_Àngth
 = 0;

479 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

485 c⁄° *
ußge_°rög
 =

490 i‡(
	`check
(
ù
, 
ußge_°rög
, 
ac
, 
©r_¨g
+1,

491 
©r_¨g
+3,átr_arg+5,átr_arg+7,átr_arg+9)) {

492 
˚º
<< "a¯" << 
ac
 <<
ídl
;

493 
˚º
<< "w™à" << 
©r_¨g
+1 << "..." <<áå_¨g+8 <<
ídl
;

494  
TCL_ERROR
;

501 
°id_t
 
fid
;

502 
vﬁumeid
 = 
	`©oi
(
av
[
vid_¨g
]);

507 
ƒecs
 = 
	`©oi
(
av
[
ƒecs_¨g
]);

508 
runsize
 = 
	`©oi
(
av
[
runsize_¨g
]);

513 
boﬁ
 
as˚ndög
 = 
åue
;

514 if(
	`°rcmp
(
av
[
up_¨g
],"down")==0) {

515 
as˚ndög
 = 
Ál£
;

516 } if(
	`°rcmp
(
av
[
up_¨g
],"up")==0) {

517 
as˚ndög
 = 
åue
;

519 
˚º
 << 
av
[
up_¨g
] << ":" << 
ídl
;

520 
˚º
 << "badárgumíà" << 
up_¨g
 << " [up|down]" <<
ídl
;

521  
TCL_ERROR
;

527 
boﬁ
 
uniq
 = 
Ál£
;

528 if(
	`°rcmp
(
av
[
uniq_¨g
],"uniq")==0) {

529 
uniq
 = 
åue
;

530 } if(
	`°rcmp
(
av
[
uniq_¨g
],"dupok")==0) {

531 
uniq
 = 
Ál£
;

533 
˚º
 << 
av
[
uniq_¨g
] << ":" << 
ídl
;

534 
˚º
 << "badárgumíà" << 
uniq_¨g
 << " [uniq|dupok]" <<
ídl
;

535  
TCL_ERROR
;

541 
boﬁ
 
ödex_ouçut
 = 
Ál£
;

542 if(
	`°rcmp
(
av
[
ouçut_¨g
],"index")==0) {

543 
ödex_ouçut
 = 
åue
;

544 } if(
	`°rcmp
(
av
[
ouçut_¨g
],"file")==0) {

545 
ödex_ouçut
 = 
Ál£
;

547 
˚º
 << 
av
[
ouçut_¨g
] << ":" << 
ídl
;

548 
˚º
 << "badárgumíà" << 
ouçut_¨g
 << " [ödex|fûe]" <<
ídl
;

549  
TCL_ERROR
;

555 
boﬁ
 
kìp_‹ig
 = 
Ál£
;

556 if(
	`°rcmp
(
av
[
kìp_¨g
],"keep")==0) {

557 
kìp_‹ig
 = 
åue
;

558 } if(
	`°rcmp
(
av
[
kìp_¨g
],"nokeep")==0) {

559 
kìp_‹ig
 = 
Ál£
;

561 
˚º
 << 
av
[
kìp_¨g
] << ":" << 
ídl
;

562 
˚º
 << "badárgumíà" << 
kìp_¨g
 << " [kìp|nokìp]" <<
ídl
;

563  
TCL_ERROR
;

568 
boﬁ
 
dìp_c›y
 = 
Ál£
;

569 if(
	`°rcmp
(
av
[
dìp_¨g
],"deep")==0) {

570 
dìp_c›y
 = 
åue
;

571 } if(
	`°rcmp
(
av
[
dìp_¨g
],"shallow")==0) {

572 
dìp_c›y
 = 
Ál£
;

574 
˚º
 << 
av
[
dìp_¨g
] << ":" << 
ídl
;

575 
˚º
 << "badárgumíà" << 
dìp_¨g
 << " [dìp|shÆlow]" <<
ídl
;

576  
TCL_ERROR
;

582 
boﬁ
 
ˇºy_obj
 = 
Ál£
;

583 if(
	`°rcmp
(
av
[
ˇºy_¨g
],"carry")==0) {

584 
ˇºy_obj
 = 
åue
;

585 } if(
	`°rcmp
(
av
[
ˇºy_¨g
],"nocarry")==0) {

586 
ˇºy_obj
 = 
Ál£
;

588 
˚º
 << 
av
[
ˇºy_¨g
] << ":" << 
ídl
;

589 
˚º
 << "badárgumíà" << 
ˇºy_¨g
 << " [ˇºy|noˇºy]" <<
ídl
;

590  
TCL_ERROR
;

596 
nkeys
 = 
	`©oi
(
av
[
nkeys_¨g
]);

599 c⁄° 
max_keys_h™dÀd
 = 5;

600 
boﬁ
 
make_fixed
[
max_keys_h™dÀd
];

601 
boﬁ
 
make_Æig√d
[
max_keys_h™dÀd
];

602 
boﬁ
 
make_nuŒabÀ
[
max_keys_h™dÀd
];

603 
boﬁ
 
make_dîived
[
max_keys_h™dÀd
];

604 
ty≥d_båì_ã°
 
t
[
max_keys_h™dÀd
];

605 
CF
 *
keycmp
 = 
√w
 CF[
nkeys
];

606 
w_auto_dñëe_¨øy_t
<
CF
> 
	`auto_dñ5
(
keycmp
);

608 
CSKF
 *
dîive_func
 = 
√w
 CSKF[
max_keys_h™dÀd
];

609 
w_auto_dñëe_¨øy_t
<
CSKF
> 
	`auto_dñ6
(
dîive_func
);

612 
univî£
.
	`nuŒify
();

614 
k
;

615 
k
 = 
max_keys_h™dÀd
-1; k>=0; k--) {

616 
make_fixed
[
k
] =

617 (
make_Æig√d
[
k
] =

618 (
make_nuŒabÀ
[
k
] =

619 (
make_dîived
[
k
] = 
Ál£
)));

621 
t
[
k
] = 
ã°_nosuch
;

622 
dîive_func
[
k
] = 
s‹t_keys_t
::
noCSKF
;

624 
k
 = 
nkeys
-1; k>=0; k--) {

628 
¨g
 = 
ty≥_¨g
 + (
k
*2);

629 if(
ac
 < 
¨g
+1) {

630 
˚º
 << "NŸÉnoughárgumít†f‹ key " << 
k
 <<
ídl
;

631  
TCL_ERROR
;

633 
t
[
k
] = 
	`cvt2ty≥
(
av
[
¨g
]);

639 
¨g
 = 
©r_¨g
 + (
k
*2);

640 if(
ac
 < 
¨g
+1) {

641 
˚º
 << "NŸÉnoughárgumít†f‹ key " << 
k
 <<
ídl
;

642  
TCL_ERROR
;

644 
TCL_AV
 *
˝
 = 
av
[
¨g
];

645 *
˝
) {

646 *
˝
++) {

648 
	`DBG
(<<"makêFIXED key " << 
k
);

649 
make_fixed
[
k
] = 
åue
;

655 
	`DBG
(<<"makêVARIABLE-lo¯key " << 
k
);

656 
make_fixed
[
k
] = 
Ál£
;

659 
	`DBG
(<<"makêNULL key " << 
k
);

660 
make_nuŒabÀ
[
k
] =
åue
;

664 
	`DBG
(<<"makêDERIVED key " << 
k
);

665 
make_dîived
[
k
] =
åue
;

668 
	`DBG
(<<"makêALIGNED key " << 
k
);

669 
make_Æig√d
[
k
] = 
åue
;

672 
˚º
 <<"Unrecognized keyÜocationáttribute for key "

673 << 
k
 << ":" << *
˝
 << 
ídl
;

674  
TCL_ERROR
;

676 if(
t
[
k
] =
ã°_•©ül
) {

677 
make_dîived
[
k
] =
åue
;

680 if(
make_nuŒabÀ
[
k
]Ë
make_fixed
[k]=
Ál£
;

684 
boﬁ
 
found
=
Ál£
;

685 
k
 = 
nkeys
-1; k>=0; k--) {

686 if(
make_fixed
[
k
]) {

687 
found
 = 
åue
;

688 
	`DBG
(<<"FIXED " << 
k
 );

690 if(
found
) {

691 
˚º
 << "**********************************************"

692 <<
ídl
;

693 
˚º
 <<"Test doesÇot support variable (V orÇot F) key "

694 << " bef‹ê®fixed key " << 
ídl
;

695  
TCL_ERROR
;

697 
	`DBG
(<<"NOT FIXED " << 
k
 );

702 
s‹t_keys_t
 
	`kl
(
nkeys
);

704 
gíîic_CSKF_cookõ
 
g
;

705 
CSKF
 
cskfunc
;

706 
k
 = 0; k < 
nkeys
; k++) {

707 
keycmp
[
k
] = 
	`gëcmpfunc
(
t
[k], 
cskfunc
, 
	`key_cookõ_t
(&
g
));

709 if(
ödex_ouçut
) {

710 if(
nkeys
 > 1) {

711 
˚º
 << "Mu…i-key indexe†¨ênŸ suµ‹ãd" <<
ídl
;

712  
TCL_ERROR
;

715 if(
kl
.
	`£t_f‹_ödex
(
cskfunc
, 
	`key_cookõ_t
(&
g
))) {

716 
	`w_ª£t_°r°ªam
(
t˛out
);

717 
t˛out
 << 
	`smsh_îr_«me
(
ss_m
::
eBADARGUMENT
Ë<< 
íds
;

718 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

719 
	`w_ª£t_°r°ªam
(
t˛out
);

720  
TCL_ERROR
;

722 
kìp_‹ig
 = 
åue
;

734 
	`DO
–
sm
->
	`¸óã_fûe
(
	`vid_t
(
vﬁumeid
), 
fid
, 
ss_m
::
t_lﬂd_fûe
));

735 
dñëî
 
	`d1
(
fid
);

737 
nuŒs
=0, 
smÆlkeys
=0;

738 
smsize_t
 
tŸÆ_Àngth
=0;

739 
smsize_t
 
mëad©a_size
 = (
mëad©a
Ë* 
nkeys
;

740 
mëad©a
 *
mëa
 = 0;

741 
mëa
 = 
√w
 
mëad©a
[
nkeys
];

742 
w_auto_dñëe_¨øy_t
<
mëad©a
> 
	`auto_dñ7
(
mëa
);

745 
j
=0;

746 
k
 = 0; k < 
nkeys
; k++) {

747 
mëa
[
j
++].
t
 =Å[
k
];

749 c⁄° 
smsize_t
 
max_tŸÆ_Àngth
 = 3 * 
ss_m
::
∑ge_sz
;

757 * 
obje˘_ba£
 = 
√w
 [
max_tŸÆ_Àngth
];

758 * 
obje˘
 = 
obje˘_ba£
;

759 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ8
(
obje˘_ba£
);

761 
	`mem£t
(
obje˘_ba£
, '\0', 
max_tŸÆ_Àngth
);

766 
w_ba£_t
::
uöt1_t
 
ui1
;

767 
w_ba£_t
::
öt1_t
 
i1
;

768 
w_ba£_t
::
uöt2_t
 
ui2
;

769 
w_ba£_t
::
öt2_t
 
i2
;

770 
w_ba£_t
::
uöt4_t
 
ui4
;

771 
w_ba£_t
::
öt4_t
 
i4
;

772 
w_ba£_t
::
uöt8_t
 
ui8
;

773 
w_ba£_t
::
öt8_t
 
i8
;

774 
f4
;

775 
f8
;

776 } 
d©um
;

778 
n⁄_unique_ö_a_row
=0;

779 
j
=0; j < 
ƒecs
; j++) {

780 
smsize_t
 
off£t
 = 0;

781 
obje˘
 = 
obje˘_ba£
;

787 
boﬁ
 
¸óã_√w_vÆue
 =

788 
uniq


789 || 
j
 < 1

790 || 
n⁄_unique_ö_a_row
 < 
ƒecs
/2

791 #ifde‡
ARCH_LP64


792 || ((
gíî©‹
.
	`ønd
() & 0xa0b000d01000300) != 0);

794 || ((
gíî©‹
.
	`ønd
() & 0xd1000300) != 0);

797 if–
¸óã_√w_vÆue
 ) {

798 
n⁄_unique_ö_a_row
++;

800 
n⁄_unique_ö_a_row
 = 0;

801 
cout


803 << " j=" << 
j


804 << " uniq=" << 
uniq


805 << "Ç⁄_unique_ö_a_row=" << 
n⁄_unique_ö_a_row


806 << "Çªcs/2=" << 
ƒecs
/2

807 << 
ídl
;

810 
k
 = 0; k < 
nkeys
; k++) {

811 
smsize_t
 
Àngth
 = 0;

812 
smsize_t
 
dÀngth
 = 0;

813 
smsize_t
 
buff
 = 0;

814 if(
make_Æig√d
[
k
]) {

817 if(
off£t
 & 0x7) {

818 
buff
 = 
off£t
 + 8;

819 
buff
 &= ~0x7;

820 
buff
 -
off£t
;

822 } if(!
make_fixed
[
k
]) {

823 if(
cou¡_bv_obje˘s
 > 5) {

826 
buff
 = 
cou¡_bv_obje˘s
 * 5;

828 
buff
 = 
	`smsize_t
(
gíî©‹
.
	`ønd
() & 0x8);

831 
	`DBG
(<<"buf‡sizê" << 
buff
);

832 
off£t
 +
buff
;

833 
	`mem£t
(
obje˘
, 'z', 
buff
);

834 
obje˘
 +
buff
;

841 if(
j
 > 0 && 
make_fixed
[
k
]) {

842 
	`w_as£π1
(
mëa
[
k
].
off£t
 == offset);

843 
	`DBG
(<<"off£t=" << 
off£t
);

845 
mëa
[
k
].
off£t
 = offset;

846 
	`DBG
(<<"off£t=" << 
off£t
);

848 
mëa
[
k
].
fixed
 = 
make_fixed
[k];

849 
mëa
[
k
].
Æig√d
 = 
make_Æig√d
[k];

850 
mëa
[
k
].
nuŒabÀ
 = 
make_nuŒabÀ
[k];

852 
ty≥d_båì_ã°
 
t
 = 
mëa
[
k
].t;

854 i‡(0 && 
löked
.
vîbo£_Êag
) {

855 
cout
 << "Key " << 
k
 << "át offset in body: "

856 << 
off£t
 << " " << 
ídl
;

860 if(
¸óã_√w_vÆue
 || (
k
+1 =
nkeys
)

862 || 
t
 =
ã°_•©ül


863 || 
t
 =
ã°_bv


864 || 
t
 =
ã°_bœrge


865 || 
t
 =
ã°_b23


866 || 
t
 =
ã°_b1


869 
t
) {

870 
ã°_•©ül
: {

871 
nbox_t
 
	`box2
(2);

872 
Àngth
 = 
box2
.
	`kÀn
();

873 
	`make_øndom_box
(
obje˘
, 
Àngth
);

874 
mëa
[
k
].
Àxico
 = 
Ál£
;

875 
mëa
[
k
].
Æig√d
 = 
åue
;

876 
mëa
[
k
].
dîived
 = 
åue
;

877 
dîive_func
[
k
] = 
mhûbît
;

878 
	`w_as£π3
(
make_dîived
[
k
]);

882 
ã°_bv
:

883 
ã°_bœrge
:

889 if(
make_fixed
[
k
]) {

890 
Àngth
 = 
	`smsize_t
(::
	`gëpid
()) & 0x7f;

893 
Àngth
 =

894 
	`smsize_t
(
gíî©‹
.
	`ønd
()

898 if(
Àngth
 =0 && !
make_nuŒabÀ
[
k
])Üength = 1;

911 
	`©omic_öc
(
cou¡_bv_obje˘s
);

913 
c
 = 
cou¡_bv_obje˘s
;

914 
c
 %= 10;

915 
cou¡_bv_obje˘s
 = 
c
;

918 if–!
kl
.
	`is_f‹_ödex
(Ë&& !
make_fixed
[
k
] &&

919 (
cou¡_bv_obje˘s
 > 5)) {

923 
smsize_t
 
œ°_Àngth
 = 
Àngth
;

924 
smsize_t
 
add_Àngth
 = 2 * 
ss_m
::
∑ge_sz
 + 1;

925 
	`w_as£π1
(
off£t
 + 
add_Àngth
 + 
œ°_Àngth


926 < 
max_tŸÆ_Àngth
);

927 
	`mem£t
(
obje˘
, 'E', 
add_Àngth
);

928 
	`make_øndom_Æpha
(
obje˘
+
add_Àngth
, 
œ°_Àngth
);

929 
Àngth
 = 
add_Àngth
 + 
œ°_Àngth
;

932 
	`make_øndom_Æpha
(
obje˘
, 
Àngth
);

934 
mëa
[
k
].
Àxico
 = 
åue
;

935 
mëa
[
k
].
Æig√d
 = 
åue
;

938 
ã°_b23
:

940 
Àngth
 = 23;

941 
	`make_øndom_Æpha
(
obje˘
, 
Àngth
);

942 
mëa
[
k
].
Àxico
 = 
åue
;

943 
mëa
[
k
].
Æig√d
 = 
åue
;

946 
ã°_b1
:

947 
smÆlkeys
++;

949 
Àngth
 = 1;

950 
	`make_øndom_Æpha
(
obje˘
, 
Àngth
);

951 
mëa
[
k
].
Àxico
 = 
åue
;

952 
mëa
[
k
].
Æig√d
 = 
åue
;

955 
ã°_u1
:

956 
smÆlkeys
++;

958 
d©um
.
ui1

w_ba£_t
::
	`uöt1_t
(
gíî©‹
.
	`ønd
() & 0xff);

961 
ã°_i1
:

962 
smÆlkeys
++;

964 
d©um
.
i1

w_ba£_t
::
	`öt1_t
(
gíî©‹
.
	`ønd
() & 0xff);

967 
ã°_u2
:

969 
d©um
.
ui2

w_ba£_t
::
	`uöt2_t
(
gíî©‹
.
	`ønd
() & 0xffff);

972 
ã°_i2
:

974 
d©um
.
i2

w_ba£_t
::
	`öt2_t
(
gíî©‹
.
	`ønd
() & 0xffff);

977 
ã°_u4
:

979 
d©um
.
ui4

w_ba£_t
::
	`uöt4_t
(

980 
gíî©‹
.
	`ønd
() & 0xffffffff);

983 
ã°_i4
:

985 
d©um
.
i4

w_ba£_t
::
	`öt4_t
(

986 
gíî©‹
.
	`ønd
() & 0xffffffff);

989 
ã°_u8
:

990 
d©um
.
ui8

w_ba£_t
::
	`uöt8_t
(
gíî©‹
.
	`ønd
());

993 
ã°_i8
:

994 
d©um
.
i8

w_ba£_t
::
	`öt8_t
(
gíî©‹
.
	`ønd
());

997 
ã°_f4
:

999 
d©um
.
f4
 = (
gíî©‹
.
	`dønd
());

1002 
ã°_f8
:

1004 
d©um
.
f8
 = (
gíî©‹
.
	`dønd
());

1008 
˚º
 << "swôch" <<
ídl
;

1009 
	`w_as£π3
(0);

1012 
Àngth
 = 
mëa
[
k
].length;

1016 
t
) {

1017 
ã°_•©ül
:

1019 
dÀngth
 = ();

1021 
ã°_bv
:

1022 
ã°_bœrge
:

1023 
ã°_b23
:

1024 
ã°_b1
:

1025 
dÀngth
 = 
Àngth
;

1029 
ã°_u1
:

1030 
dÀngth
 = 
Àngth
 = 1;

1031 
	`mem˝y
(
obje˘
, &
d©um
.
ui1
, 
Àngth
);

1033 
ã°_i1
:

1034 
dÀngth
 = 
Àngth
 = 1;

1035 
	`mem˝y
(
obje˘
, &
d©um
.
i1
, 
Àngth
);

1038 
ã°_u2
:

1039 
dÀngth
 = 
Àngth
 = 2;

1040 
	`mem˝y
(
obje˘
, &
d©um
.
ui2
, 
Àngth
);

1042 
ã°_i2
:

1043 
dÀngth
 = 
Àngth
 = 2;

1044 
	`mem˝y
(
obje˘
, &
d©um
.
i2
, 
Àngth
);

1047 
ã°_u4
:

1048 
dÀngth
 = 
Àngth
 = 4;

1049 
	`mem˝y
(
obje˘
, &
d©um
.
ui4
, 
Àngth
);

1051 
ã°_i4
:

1052 
dÀngth
 = 
Àngth
 = 4;

1053 
	`mem˝y
(
obje˘
, &
d©um
.
i4
, 
Àngth
);

1056 
ã°_u8
:

1057 
dÀngth
 = 
Àngth
 = 8;

1058 
	`mem˝y
(
obje˘
, &
d©um
.
ui8
, 
Àngth
);

1060 
ã°_i8
:

1061 
dÀngth
 = 
Àngth
 = 8;

1062 
	`mem˝y
(
obje˘
, &
d©um
.
i8
, 
Àngth
);

1065 
ã°_f4
:

1066 
dÀngth
 = 
Àngth
 = 4;

1067 
	`mem˝y
(
obje˘
, &
d©um
.
f4
, 
Àngth
);

1070 
ã°_f8
:

1071 
dÀngth

Àngth
 = 8;

1072 
	`mem˝y
(
obje˘
, &
d©um
.
f8
, 
Àngth
);

1076 
	`w_as£π3
(0);

1081 if(
j
 > 0 && 
make_fixed
[
k
] && !
make_nuŒabÀ
[k]) {

1082 
	`w_as£π1
(
mëa
[
k
].
Àngth
 =
dÀngth
);

1084 
	`DBG
(<<"£àÀngthÅÿ" << 
dÀngth
);

1085 
mëa
[
k
].
Àngth
 = 
dÀngth
;

1087 if(
make_nuŒabÀ
[
k
] && (
cou¡_bv_obje˘s
 <= 4)

1088 && (
j
 !
ƒecs
-1)

1099 
xxx
 = (
gíî©‹
.
	`ønd
());

1100 if(
xxx
 & 0x00600200) {

1101 
	`DBG
(<<"forcing NULL");

1102 
nuŒs
++;

1103 
mëa
[
k
].
Àngth
 = 0;

1104 
Àngth
 = 0;

1105 
dÀngth
 = 0;

1109 
off£t
 +
Àngth
;

1110 
obje˘
 +
Àngth
;

1111 if(
off£t
 > 
max_tŸÆ_Àngth
) {

1112 
˚º
 << "ex˚eded maxÜígth" <<
ídl
;

1113 
	`w_as£π3
(0);

1115 
tŸÆ_Àngth
 = 
off£t
;

1120 
vec_t
 
	`hdr
(
mëa
, 
mëad©a_size
);

1121 
vec_t
 
	`d©a
(
obje˘_ba£
, 
tŸÆ_Àngth
);

1123 
rid_t
 
rid
;

1124 
	`DBG
–<< "¸óã_ªc: sizeof(mëa)=" << 
mëad©a_size
);

1125 
	`DBG
–<< "ÅŸÆÜígth=" << 
tŸÆ_Àngth
 );

1126 i‡(0 && 
löked
.
vîbo£_Êag
) {

1127 
cout
 << "¸óãÑec:ÅŸÆ_Àngth =" << 
tŸÆ_Àngth
 <<
ídl
;

1129 
fûe_Àngth
 +
tŸÆ_Àngth
;

1132 
kk
=0; kk<
nkeys
; kk++) {

1133 
	`DBG
(<< 
ídl
 << "Key off£àö obje˘ i†" << 
mëa
[
kk
].
off£t


1135 *
o
 = 
obje˘_ba£
 + 
mëa
[
kk
].
off£t
;

1136 if(
mëa
[
kk
].
Àngth
 == 0) {

1137 
	`DBG
(<<"NULL");

1138 } 
mëa
[
kk
].
t
) {

1139 
ã°_•©ül
: {

1140 
nbox_t
 
	`b
(2);

1141 
	`w_as£π3
(
b
.
	`kÀn
() < ((b)));

1142 
b
.
	`byãs2box
((c⁄° *)
o
, (b.
	`kÀn
()));

1143 
	`DBG
(<<" BOX(" << 
b
 <<" ) hvÆue=" << b.
	`hvÆue
(
univî£
) );

1147 
ã°_bv
:

1148 
ã°_bœrge
:

1149 
ã°_b23
:

1150 
ã°_b1
: {

1151 *
p
 = 
o
;

1152 if(
	`°æí
(
p
) > 1000) {

1153 *
p
 == 'E')Ö++;

1155 if(
p
-
o
 > 0) {

1156 
	`DBG
(<<" E(" <<()(
p
-
o
) <<"Åimes)" <<Ö);

1158 
Àn
 = 
mëa
[
kk
].
Àngth
;

1159 
i
=0; i < 
Àn
; i++) {

1160 
	`DBG
(<<
p
[
i
]);

1165 
ã°_i1
: {

1166 
w_ba£_t
::
öt1_t
 
i
;

1167 
	`mem˝y
(&
i
, 
o
, 1);

1168 
	`DBG
(<<(
i
));

1170 
ã°_u1
: {

1171 
w_ba£_t
::
uöt1_t
 
i
;

1172 
	`mem˝y
(&
i
, 
o
, 1);

1173 
	`DBG
(<<(
i
));

1175 
ã°_i2
: {

1176 
w_ba£_t
::
öt2_t
 
i
;

1177 
	`mem˝y
(&
i
, 
o
, 2);

1178 
	`DBG
(<<
i
);

1180 
ã°_u2
: {

1181 
w_ba£_t
::
uöt2_t
 
i
;

1182 
	`mem˝y
(&
i
, 
o
, 2);

1183 
	`DBG
(<<
i
);

1185 
ã°_i4
: {

1186 
w_ba£_t
::
öt4_t
 
i
;

1187 
	`mem˝y
(&
i
, 
o
, 4);

1188 
	`DBG
(<<
i
);

1190 
ã°_u4
: {

1191 
w_ba£_t
::
uöt4_t
 
i
;

1192 
	`mem˝y
(&
i
, 
o
, 4);

1193 
	`DBG
(<<
i
);

1195 
ã°_i8
: {

1196 
w_ba£_t
::
öt8_t
 
i
;

1197 
	`mem˝y
(&
i
, 
o
, 8);

1198 
	`DBG
(<<
i
);

1200 
ã°_u8
: {

1201 
w_ba£_t
::
uöt8_t
 
i
;

1202 
	`mem˝y
(&
i
, 
o
, 8);

1203 
	`DBG
(<<
i
);

1205 
ã°_f4
: {

1206 
w_ba£_t
::
f4_t
 
i
;

1207 
	`mem˝y
(&
i
, 
o
, 4);

1208 
	`DBG
(<<
i
);

1210 
ã°_f8
: {

1211 
w_ba£_t
::
f8_t
 
i
;

1212 
	`mem˝y
(&
i
, 
o
, 8);

1213 
	`DBG
(<<
i
);

1216 
	`w_as£π1
(0);

1221 
	`DO
–
sm
->
	`¸óã_ªc
(
fid
, 
hdr
, 10, 
d©a
, 
rid
) );

1222 
	`DBG
–<< "Ñid=" << 
rid
 << 
ídl
);

1225 
mëad©a
 *
m
 = (mëad©®*)
hdr
.
	`±r
(0);

1226 
boﬁ
 
is_fixed
 = 
åue
;

1227 
k
 = 0; k < 
nkeys
; k++) {

1228 
is_fixed
 = is_fixed && 
m
[
k
].
fixed
;

1230 if(! 
is_fixed
 ) {

1231 
cout
 << 
rid
 << " METADATA: " << 
ídl
;

1232 } if(
j
==0) {

1233 
cout
 << "ALL RECS METADATA: " << 
ídl
;

1235 if(
j
 =0 || !
is_fixed
) {

1236 
k
 = 0; k < 
nkeys
; k++) {

1237 
cout
 << 
m
[
k
] << 
ídl
;

1242 
	`mem£t
(
obje˘_ba£
, '\0', 
tŸÆ_Àngth
);

1244 
	`DBG
–<< "D⁄ê¸ótög " << 
ƒecs
 << "Ñecords " );

1248 
k
 = 0; k < 
nkeys
; k++) {

1249 if(
make_fixed
[
k
]) {

1250 
kl
.
	`£t_s‹tkey_fixed
(
k
,

1251 
mëa
[
k
].
off£t
, mëa[k].
Àngth
,

1252 
Ál£
,

1253 
mëa
[
k
].
Æig√d
,

1254 
mëa
[
k
].
Àxico
,

1255 
keycmp
[
k
]

1257 } if(
dîive_func
[
k
] =
s‹t_keys_t
::
noCSKF
) {

1260 
kl
.
	`£t_s‹tkey_dîived
(
k
,

1261 
gë_key_öfo
,

1262 
	`key_cookõ_t
(
k
),

1263 
Ál£
,

1264 
mëa
[
k
].
Æig√d
,

1265 
mëa
[
k
].
Àxico
,

1266 
keycmp
[
k
]

1274 
kl
.
	`£t_s‹tkey_dîived
(
k
,

1275 
dîive_func
[
k
],

1276 
	`key_cookõ_t
(
k
),

1277 
Ál£
,

1278 
mëa
[
k
].
Æig√d
,

1279 
mëa
[
k
].
Àxico
,

1280 
keycmp
[
k
]

1289 if(!
ödex_ouçut
) {

1290 if(
kl
.
	`£t_f‹_fûe
(
dìp_c›y
, 
kìp_‹ig
, 
ˇºy_obj
)) {

1291 
˚º
 << "ProbÀm wôh së_f‹_fûe" <<
ídl
;

1292  
TCL_ERROR
;

1295 
kl
.
	`£t_°abÀ
(
åue
);

1297 if(
kl
.
	`£t_obje˘_m¨shÆ
(
c›yMOF
, 
s‹t_keys_t
::
noUMOF
, 
key_cookõ_t
::
nuŒ
))

1299 
˚º
 << "ProbÀm wôh së_obje˘_m¨shÆ" <<
ídl
;

1300  
TCL_ERROR
;

1304 
w_rc_t
 
rc
;

1305 i‡(
löked
.
vîbo£_Êag
) {

1309 
cout
 << "**************** INPUT FILE *******************" <<
ídl
;

1311 
sˇn_fûe_i
 *
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
fid
);

1312 
rc
 = 
	`dump_sˇn
(*
sˇn
, 
cout
, 
¥öt_mu…ikey_s‹t_fûe_DSCB
);

1313 if(
rc
.
	`is_îr‹
()Ë
cout
 << "ªtu∫†rc=" <<Ñ¯<<
ídl
;

1314 
dñëe
 
sˇn
;

1322 
cout
 << "tŸÆ fûêd©®=" << 
fûe_Àngth
 <<
ídl
;

1324 
cout
 << "**************** END INPUT FILE *******************" <<
ídl
;

1330 
°id_t
 
ofid
;

1332 
vﬁumeid
 = 
	`©oi
(
av
[
vid_¨g
]);

1333 
	`DO
–
sm
->
	`¸óã_fûe
(
	`vid_t
(
vﬁumeid
), 
ofid
, 
ss_m
::
t_lﬂd_fûe


1336 
dñëî
 
	`d2
(
ofid
);

1338 c⁄° 
mö_ªc_sz
 = (
mëad©a
);

1339 
vid_t
 
	`vid
(
vﬁumeid
);

1342 
sm_°©s_öfo_t
* 
°©s
 = 
√w
 sm_stats_info_t;

1343 
w_auto_dñëe_t
<
sm_°©s_öfo_t
> 
	`autodñ
(
°©s
);

1345 
sm_°©s_öfo_t
& 
öã∫Æ
 = *
°©s
;

1346 
	`DO
–
sm
->
	`g©hî_x˘_°©s
(
öã∫Æ
, 
åue
));

1348 if(
kl
.
	`£t_as˚ndög
(
as˚ndög
)) {

1349 
cout
 << "C™nŸ sëás˚ndögÅÿ" << 
as˚ndög
 <<
ídl
;

1350  
TCL_ERROR
;

1352 if(
kl
.
	`£t_unique
(
uniq
)) {

1353 
cout
 << "C™nŸ së uniqÅÿ" << 
uniq
 <<
ídl
;

1354  
TCL_ERROR
;

1356 if(
kl
.
	`£t_nuŒ_unique
(
uniq
)) {

1357 
cout
 << "C™nŸ sëÇuŒs_uniqÅÿ" << 
uniq
 <<
ídl
;

1358  
TCL_ERROR
;

1360 if(
kl
.
	`£t_dìp_c›y
(
dìp_c›y
)) {

1361 
cout
 << "C™nŸ së dìp_c›yÅÿ" << 
dìp_c›y
 <<
ídl
;

1362  
TCL_ERROR
;

1364 if(
kl
.
	`£t_kìp_‹ig
(
kìp_‹ig
)) {

1365 
cout
 << "C™nŸ së kìp_‹igÅÿ" << 
kìp_‹ig
 <<
ídl
;

1366  
TCL_ERROR
;

1370 
rc
 = 
sm
->
	`s‹t_fûe
(

1371 
fid
,

1372 
ofid
,

1374 &
vid
,

1375 
kl
 ,

1376 
mö_ªc_sz
 ,

1377 
runsize
 ,

1378 
runsize
*
ss_m
::
∑ge_sz


1382 if(
rc
.
	`is_îr‹
()) {

1383 if(
rc
.
	`îr_num
(Ë=
ss_m
::
eBADARGUMENT
) {

1385 
˚º
 << "Badárgumíàtÿmu…i-key s‹t_fûe: " << 
rc
 <<
ídl
;

1387 
˚º
 << "U√x≥˘edÉº‹ from s‹t_fûe: " << 
rc
 <<
ídl
;

1389 
	`w_ª£t_°r°ªam
(
t˛out
);

1390 
t˛out
 << 
	`smsh_îr_«me
(
rc
.
	`îr_num
()Ë<< 
íds
;

1391 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1392 
	`w_ª£t_°r°ªam
(
t˛out
);

1393  
TCL_ERROR
;

1400 if(!
kìp_‹ig
Ë
d1
.
	`dißrm
();

1402 
fck
 = 
	`check_mu…ikey_fûe
(
ofid
, 
kl
, 
åue
);

1404 
	`Ârötf
(
°dîr
, "check_mu…ikey_fûêªtu∫†%d\n", 
fck
);

1406 
fck
) {

1409 
	`T˛_AµídResu…
(
ù
, "Cannot check file", 0);

1416 
˚º
 << "ÁûedÑós⁄ = " << 
fck
 <<
ídl
 << 
Êushl
;

1418 
	`T˛_AµídResu…
(
ù
, "File check failed ", 0);

1421 i‡(
löked
.
vîbo£_Êag
) {

1422 
cout
 << "Check fûêsuc˚eded" <<
ídl
;

1426 i‡(
löked
.
vîbo£_Êag
 || 
fck
 > 1) {

1430 
cout
 << "**************** OUTPUT FILE *******************" <<
ídl
;

1431 
sˇn_fûe_i
 *
sˇn
 = 
√w
 
	`sˇn_fûe_i
(
ofid
);

1432 
rc
 = 
	`dump_sˇn
(*
sˇn
, 
cout
, 
¥öt_mu…ikey_s‹t_fûe_DSCB
, 
åue
);

1433 if(
rc
.
	`is_îr‹
()Ë
cout
 << "ªtu∫†rc=" <<Ñ¯<<
ídl
;

1434 
dñëe
 
sˇn
;

1435 
cout
 << "**************** END OUTPUT FILE *******************" <<
ídl
;

1438 
sm_°©s_öfo_t
* 
°©s
 = 
√w
 sm_stats_info_t;

1439 
w_auto_dñëe_t
<
sm_°©s_öfo_t
> 
	`autodñ
(
°©s
);

1441 
sm_°©s_öfo_t
& 
öã∫Æ
 = *
°©s
;

1442 
	`DO
–
sm
->
	`g©hî_x˘_°©s
(
öã∫Æ
, 
Ál£
));

1446 if(
öã∫Æ
.
sm
.
s‹t_du∂iˇãs
 > 0) {

1451 if(!
uniq
) {

1452 
˚º
 << "duplicatesÑemoved ("

1453 << 
öã∫Æ
.
sm
.
s‹t_du∂iˇãs


1454 << "); uniqárgÇŸ giví" <<
ídl
;

1455 
	`w_as£π1
(0);

1457 if(
nuŒs
 <=1 && 
smÆlkeys
 ==0 ) {

1458 
˚º
 << "duplicatesÑemoved ("

1459 << 
öã∫Æ
.
sm
.
s‹t_du∂iˇãs


1460 << "ËnuŒs" << 
nuŒs


1461 << " NEEDS h™d-checkög" <<
ídl
;

1465 if(
	`s‹t_is_ö°rumíãd
()) {

1468 if((
öã∫Æ
.
sm
.
s‹t_ªcs_¸óãd
Ë!
ƒecs
) {

1469 if(!
uniq
) {

1470 
˚º
 << "recs_created = "

1471 << 
öã∫Æ
.
sm
.
s‹t_ªcs_¸óãd


1472 << ";Éx≥˘ed " << 
ƒecs
 << 
ídl
;

1473 
	`w_as£π1
(0);

1481 if(
fck
>1) {

1482  
TCL_ERROR
;

1484 
	`T˛_AµídResu…
(
ù
, 
t˛out
.
	`c_°r
(), 0);

1485 
	`w_ª£t_°r°ªam
(
t˛out
);

1486  
TCL_OK
;

1488 
	}
}

	@src/sm/smsh/tcl_thread.cpp

30 
	~"w_deföes.h
"

34 
	#TCL_THREAD_C


	)

36 #ifde‡
__GNUG__


37 #¥agm®
im∂emíèti⁄


41 "C" 
dum±hªads
();

44 
	~<°rögs.h
>

45 
	~"shñl.h
"

46 
	~<¸ash.h
>

48 
boﬁ
 
debug
(
Ál£
);

50 #ifde‡
EXPLICIT_TEMPLATE


51 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gt˛_thªad_t
, 
	gqueue_ba£d_block_lock_t
>;

52 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gt˛_thªad_t
, 
	gqueue_ba£d_block_lock_t
>;

57 c⁄° *
	gTCL_EXIT_ERROR_STRING
 = "!@#EXIT#@!";

59 c⁄° * 
	gLogiˇl_id_Êag_t˛
 = "Use_logical_id";

60 
T˛_I¡îp
* 
globÆ_ù
 (
NULL
);

62 
	gt˛_thªad_t
::
thªad_cou¡
 = 0;

63 
	gt˛_thªad_t
::
thªad_f‹ked
 = 0;

64 
	gt˛_thªad_t
::
thªad_joöed
 = 0;

65 * 
	gt˛_thªad_t
::
öãr_thªad_comm_buf„r
 = 0;

67 
ss_m
* 
	gsm
 = 0;

69 "C" 
vèbÀ_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

70 "C" 
sm_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[]);

71 "C" 
°_di•©ch
(
Clõ¡D©a
, 
T˛_I¡îp
 *, , 
TCL_AV
 **);

73 c⁄° * 
t˛_öô_cmd
;

74 
num_t˛_thªads
(0);

75  
num_t˛_thªads_âl
(0);

76 "C" 
	$num_t˛_thªads_ru¬ög
(Ë{  
num_t˛_thªads
; 
	}
}

79 
queue_ba£d_block_lock_t
 
t˛_thªad_t
::
thªad_muãx
;

81 
	gw_li°_t
<
	gt˛_thªad_t
, 
	gqueue_ba£d_block_lock_t
>

82 
	gt˛_thªad_t
::
thªad¶i°
(
W_LIST_ARG
(
t˛_thªad_t
, 
lök
), &t˛_thªad_t::
thªad_muãx
);

84 
˛ass
 
	gx˘_i
;

87 "C" 
t˛_as£π_Áûed
();

88 
	$t˛_as£π_Áûed
(Ë{
	}
}

91 
t_debugÊags
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 ** 
	$W_IFTRACE
(
av
))

93 i‡(
ac
 != 2 &&ác != 1) {

94 
	`T˛_AµídResu…
(
ù
, "usage: debugflags [arg]", 0);

95  
TCL_ERROR
;

97 #ifde‡
W_TRACE


98 *
f
;

99 
f
 = 
	`gëív
("DEBUG_FILE");

100 if(
ac
>1) {

101 if(
	`°rcmp
(
av
[1],"off")==0) {

102 
av
[1] = (*)"";

104 
_w_debug
.
	`£tÊags
(
av
[1]);

106 
	`T˛_AµídResu…
(
ù
, 
_w_debug
.
	`Êags
(), 0);

108 if(
f
) {

109 
	`T˛_AµídResu…
(
ù
, "NB: wrôã¿tÿfûe: ",
f
,".", 0);

112  
TCL_OK
;

113 
	}
}

115 
	$t_as£π
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

117 i‡(
ac
 != 2) {

118 
	`T˛_AµídResu…
(
ù
, "usage:ássert [arg]", 0);

119  
TCL_ERROR
;

121 
boo
 = 0;

122 
ªs
 = 
	`T˛_Ex¥Boﬁón
(
ù
, 
av
[1], &
boo
);

123 if(
ªs
 =
TCL_OK
 && 
boo
==0) {

126 
	`t˛_as£π_Áûed
();

128 
	`T˛_AµídResu…
(
ù
, 
	`t˛_f‹m_Êag
(
boo
), 0);

129 
cout
 << 
Êush
;

130  
ªs
;

131 
	}
}

135 
	$t_timeofday
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * [])

137 i‡(
ac
 > 1) {

138 
	`T˛_AµídResu…
(
ù
, "usage:Åimeofday", 0);

139  
TCL_ERROR
;

142 
°ime_t
 
now
 = stime_t::
	`now
();

144 
w_o°r°ªam_buf
 
	`Ÿmp
(100);

146 
	`W_FORM2
(
Ÿmp
, ("%d %d", 
now
.
	`£cs
(),Çow.
	`u£cs
()));

147 
Ÿmp
 << 
íds
;

148 
	`T˛_AµídResu…
(
ù
, 
Ÿmp
.
	`c_°r
(), 0);

150  
TCL_OK
;

151 
	}
}

154 #i‡!
deföed
(
USE_SSMTEST
)

155 
	#av


	)

158 
	$t_debugöfo
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

159 #i‡!
	`deföed
(
USE_SSMTEST
)

160 #unde‡
av


163 i‡(
ac
 != 4) {

164 
	`T˛_AµídResu…
(
ù
, "usage: debuginfo category v1 v2", 0);

165  
TCL_ERROR
;

167 #i‡
	`deföed
(
USE_SSMTEST
)

168 c⁄° *
v1
 = 
av
[2];

169 
v2
 = 
	`©oi
(
av
[3]);

170 
debugöfo_íum
 
d
 = 
debug_dñay
;

181 if(
	`°rcmp
(
av
[1], "delay")==0) {

183 
d
 = 
debug_dñay
;

184 } if(
	`°rcmp
(
av
[1], "crash")==0) {

186 
d
 = 
debug_¸ash
;

187 } if(
	`°rcmp
(
av
[1], "none")==0) {

188 
v1
 = "none";

189 
v2
 = 0;

190 
	`£tdebugöfo
(
debug_dñay
, 
v1
, 
v2
);

191 
d
 = 
debug_¸ash
;

193 
	`£tdebugöfo
(
d
, 
v1
, 
v2
);

194  
TCL_OK
;

196 
	`T˛_AµídResu…
(
ù
, "USE_SSMTESTÇot configured", 0);

197  
TCL_ERROR
;

199 
	}
}

202 
	$t_wrôe_øndom
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

204 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

205 i‡(
ac
 != 2) {

206 
	`T˛_AµídResu…
(
ù
, "usage: write_random filename", 0);

207  
TCL_ERROR
;

209 if(
ac
 == 2) {

210 
of°ªam
 
	`f
(
av
[1], 
ios
::
out
);

211 if(!
f
) {

212 
˚º
 << "C™nŸ wrôêtÿfûê" << 
av
[1] << 
ídl
;

216 
unsig√d48_t
 
£ed
 = 
gíî©‹
.
_°©e
;

217 
	`out
(
f
,
£ed
);

219 
f
.
	`˛o£
();

221  
TCL_OK
;

222 
	}
}

225 
	$t_ªad_øndom
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

227 i‡(
ac
 != 2) {

228 
	`T˛_AµídResu…
(
ù
, "usage:Ñead_random filename", 0);

229  
TCL_ERROR
;

231 if(
ac
 == 2) {

232 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

233 
if°ªam
 
	`f
(
av
[1]);

234 if(!
f
) {

235 
˚º
 << "C™nŸÑód fûê" << 
av
[1] << 
ídl
;

239 
	`ö
(
f
,
gíî©‹
.
_°©e
);

241 
f
.
	`˛o£
();

243  
TCL_OK
;

244 
	}
}

247 
	$t_øndom
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

249 i‡(
ac
 > 2) {

250 
	`T˛_AµídResu…
(
ù
, "usage:Ñandom [modulus]", 0);

251  
TCL_ERROR
;

253 
mod
=0;

254 if(
ac
 == 2) {

255 
mod
 = 
	`©oi
(
av
[1]);

257 
mod
 = -1;

259 
ønd48
& 
	`gíî©‹
(
	`gë_gíî©‹
());

260 
ªs
 = 
gíî©‹
.
	`ønd
();

261 if(
mod
==0) {

263 
gíî©‹
.
	`£ed
(0);

264 } if(
mod
>0) {

265 
ªs
 %
mod
;

268 
w_o°r°ªam_buf
 
	`Ÿmp
(40);

269 
	`W_FORM2
(
Ÿmp
, ("%#d",
ªs
));

270 
Ÿmp
 << 
íds
;

271 
	`T˛_AµídResu…
(
ù
, 
Ÿmp
.
	`c_°r
(), 0);

274  
TCL_OK
;

275 
	}
}

278 
	$t_f‹k_thªad
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

281 i‡(
ac
 < 3) {

282 
	`T˛_AµídResu…
(
ù
, "ußge: ", 
av
[0], "Örocárgs", 0);

283  
TCL_ERROR
;

286 * 
ﬁd_ªsu…
 = 
	`°rdup
(
	`T˛_GëSåögResu…
(
ù
));

287 
	`w_as£π1
(
ﬁd_ªsu…
);

289 
t˛_thªad_t
* 
p
 = 0;

295 
	`w_as£π1
(
ac
 - 1 > 0);

297 
T˛_DSåög
* 
¥ocs
 = 
√w
 Tcl_DString;

298 
T˛_DSåög
* 
v¨s
 = 
√w
 Tcl_DString;

299 
	`gøb_¥ocs
(
ù
, 
¥ocs
);

300 
	`gøb_v¨s
(
ù
, 
v¨s
);

301 
p
 = 
√w
 
	`t˛_thªad_t
(
ac
 - 1, 
av
 + 1, 
v¨s
, 
¥ocs
);

306 i‡(!
p
) {

307 
	`T˛_AµídResu…
(
ù
, "cannot createÅhread", 0);

308  
TCL_ERROR
;

311 
rc_t
 
e
 = 
p
->
	`f‹k
();

312 i‡(
e
.
	`is_îr‹
()) {

313 
dñëe
 
p
;

314 
	`T˛_AµídResu…
(
ù
, "cannnot startÅhread", 0);

315  
TCL_ERROR
;

318 
	`CRITICAL_SECTION
(
cs
, 
t˛_thªad_t
::
thªad_muãx
);

319 
t˛_thªad_t
::
thªad_f‹ked
++;

325 
	`T˛_SëResu…
(
ù
, 
ﬁd_ªsu…
, 
TCL_VOLATILE
);

326 
	`‰ì
 (
ﬁd_ªsu…
);

328 
w_o°r°ªam_buf
 
	`s
(20);

329 
s
 << 
p
->
id
 << 
íds
;

330 
	`T˛_AµídResu…
(
ù
, 
s
.
	`c_°r
(), 0);

332  
TCL_OK
;

333 
	}
}

386 ˛as†
	cb¨rõr_t
 {

387 
¥iv©e
:

388 
±hªad_b¨rõr_t
 *
_b¨
;

389 *
_«me
;

390 
public
:

391 
w_lök_t
 
_lök
;

392 
boﬁ
 
	$has_«me
(c⁄° *
nm
) const

394  
	`°rcmp
(
nm
, 
_«me
) == 0;

396 
	`waô
();

397 
	$dëach
() {

399 
_lök
.
	`dëach
();

400 
	}
}

401 
NORET
 
b¨rõr_t
(c⁄° *
nm
, 
n
) ;

402 
NORET
 ~
b¨rõr_t
() ;

404 
queue_ba£d_lock_t
 
	gb¨rõr_muãx
;

405 
	gw_li°_t
<
	gb¨rõr_t
, 
	gqueue_ba£d_lock_t
> 
b¨rõrs
(

406 
W_LIST_ARG
(
b¨rõr_t
, 
_lök
), &
b¨rõr_muãx
);

408 
NORET
 
	gb¨rõr_t
::
	$b¨rõr_t
(c⁄° *
nm
, 
n
) :

409 
	`_b¨
(
NULL
), 
	$_«me
(
NULL
)

411 
_«me
 = 
	`°rdup
(
nm
);

412 
_b¨
 = 
√w
 
±hªad_b¨rõr_t
;

413 
	`DO_PTHREAD
(
	`±hªad_b¨rõr_öô
(
_b¨
, 0, 
n
));

414 
	`CRITICAL_SECTION
(
cs
, &
b¨rõr_muãx
);

415 
b¨rõrs
.
	`push
(
this
);

417 
	}
}

418 
NORET
 
	gb¨rõr_t
::~
	$b¨rõr_t
()

420 ::
	`‰ì
(
_«me
);

421 
_«me
 = 
NULL
;

423 
	`CRITICAL_SECTION
(
cs
, &
b¨rõr_muãx
);

424 
	`dëach
();

426 
	`DO_PTHREAD
(
	`±hªad_b¨rõr_de°roy
(
_b¨
));

427 
dñëe
 
_b¨
;

428 
_b¨
 = 
NULL
;

429 
	}
}

430 
	gb¨rõr_t
::
	$waô
()

432 
	`DO_PTHREAD_BARRIER
(
	`±hªad_b¨rõr_waô
(
_b¨
));

433 
	}
}

435 
	$ªmove_Æl_b¨rõrs
() {

436 
b¨rõr_t
 *
b
 = 
NULL
;

442 
	`CRITICAL_SECTION
(
cs
, &
b¨rõr_muãx
);

443 
w_li°_i
<
b¨rõr_t
, 
queue_ba£d_lock_t
> 
	`ôî
(
b¨rõrs
);

444 
b
 = 
ôî
.
	`√xt
();

446 if(
b
) {

447 
dñëe
 
b
;

449 } 
b
);

450 
	}
}

452 
b¨rõr_t
 *
	$föd_b¨rõr
(c⁄° *
«me
)

454 
	`CRITICAL_SECTION
(
cs
, &
b¨rõr_muãx
);

455 
w_li°_i
<
b¨rõr_t
, 
queue_ba£d_lock_t
> 
	`ôî
(
b¨rõrs
);

456 
b¨rõr_t
 *
b
 = 
NULL
;

457  (
b
 = 
ôî
.
	`√xt
() ) ) {

458 if(
b
->
	`has_«me
(
«me
))  b;

460  
NULL
;

461 
	}
}

464 
	$t_deföe_«med_sync
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

466 i‡(
	`check
(
ù
, "«mênumbî-of-thªads", 
ac
, 3, 3))

467  
TCL_ERROR
;

469 
n
 = 
	`©oi
(
av
[2]);

470 
b¨rõr_t
 *
b
 = 
NULL
;

471 if(
n
 > 0) {

472 
b
 = 
√w
 
	`b¨rõr_t
(
av
[1], 
n
);

474 if(!
b
) {

475 
	`T˛_AµídResu…
(
ù
, "CouldÇŸ cª©ed b¨rõ∏", 
av
[1],

476 " f‹ ", 
av
[2], "Åhreads.", 0);

477  
TCL_ERROR
;

479  
TCL_OK
;

480 
	}
}

483 
	$t_undef_«med_sync
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

485 i‡(
	`check
(
ù
, "«mê[sûít] ", 
ac
, 2, 3))

486  
TCL_ERROR
;

488 
boﬁ
 
sûít
 = 
Ál£
;

489 if(
ac
 > 2) {

490 if(
	`°rcmp
(
av
[2], "sûít")==0Ë
sûít
=
åue
;

492 
b¨rõr_t
 *
b
 = 
	`föd_b¨rõr
(
av
[1]);

493 if(!
b
 && !
sûít
) {

494 
	`T˛_AµídResu…
(
ù
, "CouldÇŸ föd b¨rõ∏", 
av
[1], 0);

495  
TCL_ERROR
;

497 if(
b
) {

498 
dñëe
 
b
;

500  
TCL_OK
;

501 
	}
}

504 
	$t_«med_sync
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

506 i‡(
	`check
(
ù
, "«mê[commíàf‹ debuggög]", 
ac
, 2, 3))

507  
TCL_ERROR
;

509 c⁄° *
commít
 = "";

510 i‡(
ac
 > 2) {

511 
commít
 = 
av
[2];

514 if(
commít
 && 0Ë
	`Ârötf
(
°dîr
,"shutÅhe compiler up\n") ;

517 
b¨rõr_t
 *
b
 = 
	`föd_b¨rõr
(
av
[1]);

518 if(!
b
) {

519 
	`T˛_AµídResu…
(
ù
, "CouldÇŸ föd b¨rõ∏", 
av
[1], 0);

520  
TCL_ERROR
;

524 
b
->
	`waô
();

526  
TCL_OK
;

527 
	}
}

530 
	$t_sync
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

532 i‡(
	`check
(
ù
, "[commíàf‹ debuggög]", 
ac
, 1, 2))

533  
TCL_ERROR
;

535 c⁄° *
commít
 = "";

536 i‡(
ac
 > 1) {

537 
commít
 = 
av
[1];

540 if(
commít
 && 0Ë
	`Ârötf
(
°dîr
,"shutÅhe compiler up\n") ;

542 ((
t˛_thªad_t
 *)
°hªad_t
::
	`me
())->
	`sync
();

544  
TCL_OK
;

545 
	}
}

548 
	$t_sync_thªad
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

550 i‡(
ac
 == 1) {

551 
	`T˛_AµídResu…
(
ù
, "ußge: ", 
av
[0],

553  
TCL_ERROR
;

556 
u_l⁄g
 *
ids
 = 
√w
 u_l⁄g[
ac
-1];

557 
i
 = 1; i < 
ac
; i++) {

558 
ids
[
i
-1] = 
	`°πﬁ
(
av
[i], 0, 10);

560 
t˛_thªad_t
::
	`sync_Ÿhîs
(
ac
-1, 
ids
);

561 
dñëe
 [] 
ids
;

563  
TCL_OK
;

564 
	}
}

567 
	$t_joö_thªad
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

569 i‡(
ac
 == 1) {

570 
	`T˛_AµídResu…
(
ù
, "ußge: ", 
av
[0],

572  
TCL_ERROR
;

575 
i
 = 1; i < 
ac
; i++) {

576 
t˛_thªad_t
::
	`joö
(
	`°πﬁ
(
av
[
i
], 0, 10));

578 
	`CRITICAL_SECTION
(
cs
, 
t˛_thªad_t
::
thªad_muãx
);

579 
t˛_thªad_t
::
thªad_joöed
++;

583  
TCL_OK
;

584 
	}
}

587 
	$t_yõld
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

589 i‡(
ac
 != 1) {

590 
	`T˛_AµídResu…
(
ù
, "ußge: ", 
av
[0], 0);

591  
TCL_ERROR
;

594 
	`me
()->
	`yõld
();

596  
TCL_OK
;

597 
	}
}

600 
	$t_lök_to_öãr_thªad_comm_buf„r
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
,

601 
ac
, 
TCL_AV
 * 
av
[])

603 i‡(
ac
 != 2) {

604 
	`T˛_AµídResu…
(
ù
, "ußge: ", 
av
[0], "variable", 0);

605  
TCL_ERROR
;

608  
	`T˛_LökV¨
(
ù
, 
av
[1], (*)&
t˛_thªad_t
::
öãr_thªad_comm_buf„r
, 
TCL_LINK_STRING
);

611 
	}
}

614 
	$t_exô
(
Clõ¡D©a
, 
T˛_I¡îp
 *
ù
, 
ac
, 
TCL_AV
 * 
av
[])

616 
e
 = (
ac
 =2 ? 
	`©oi
(
av
[1]) : 0);

617 
cout
 << 
Êush
;

619 
	`Ârötf
(
°dîr
,

621 
	`Ârötf
(
°dîr
,

623 
e
);

624 
	`Ârötf
(
°dîr
,

627 i‡(
e
 == 0) {

628 
	`T˛_SëResu…
(
ù
, 
TCL_SETRES
 
TCL_EXIT_ERROR_STRING
, 
TCL_STATIC
);

629  
TCL_ERROR
;

631 
	`_exô
(
e
);

633  
TCL_ERROR
;

634 
	}
}

645 
	$t_time
(
Clõ¡D©a
, 
T˛_I¡îp
 *
öãΩ
,
¨gc
, 
TCL_AV
 **
¨gv
)

647 
cou¡
, 
i
, 
ªsu…
;

648 
°ime_t
 
°¨t
, 
°›
;

650 i‡(
¨gc
 == 2) {

651 
cou¡
 = 1;

652 } i‡(
¨gc
 == 3) {

653 i‡(
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
cou¡
Ë!
TCL_OK
) {

654  
TCL_ERROR
;

657 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

658 " comm™d ?cou¡?\"", (*Ë
NULL
);

659  
TCL_ERROR
;

661 
°¨t
 = 
°ime_t
::
	`now
();

663 
i
 = 
cou¡
 ; i > 0; i--) {

664 
ªsu…
 = 
	`T˛_EvÆ
(
öãΩ
, 
TCL_CVBUG
 
¨gv
[1]);

665 i‡(
ªsu…
 !
TCL_OK
) {

666 i‡(
ªsu…
 =
TCL_ERROR
) {

667 
w_o°r°ªam_buf
 
	`msg°r
(60);

668 
	`W_FORM2
(
msg°r
, ("\n (\"time\" bodyÜine %d)",

669 
öãΩ
->
îr‹Löe
));

670 
msg°r
 << 
íds
;

671 
	`T˛_AddEº‹Info
(
öãΩ
, 
TCL_CVBUG
 
msg°r
.
	`c_°r
());

673  
ªsu…
;

677 
°›
 = 
°ime_t
::
	`now
();

679 
	`T˛_Re£tResu…
(
öãΩ
);

681 
w_o°r°ªam_buf
 
	`s
(128);

683 i‡(
cou¡
 > 0) {

684 
söãrvÆ_t
 
	`timePî
(
°›
 - 
°¨t
);

685 
s
 << 
timePî
 << " seconds";

687 i‡(
cou¡
 > 1) {

688 
söãrvÆ_t
 
	`timeEach
(
timePî
 / 
cou¡
);;

689 
s
 << " (" << 
timeEach
 << " secondsÖer iteration)";

692 
s
 << "0 iterations";

693 
s
 << 
íds
;

695 
	`T˛_AµídResu…
(
öãΩ
, 
s
.
	`c_°r
(), 0);

697  
TCL_OK
;

698 
	}
}

701 
	$t_≥cho
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

703 
i
 = 1; i < 
ac
; i++) {

704 
cout
 << ((
i
 > 1Ë? " " : ""Ë<< 
av
[i];

705 #ifde‡
PURIFY


706 if(
	`purify_is_ru¬ög
()) {

707 if(
i
>1Ë
	`purify_¥ötf
(" ");

708 
	`purify_¥ötf
(
av
[
i
]);

711 
	`T˛_AµídResu…
(
ù
, (
i
 > 1Ë? " " : "", 
av
[i], 0);

713 #ifde‡
PURIFY


714 if(
	`purify_is_ru¬ög
()Ë{ 
	`purify_¥ötf
("\n"); }

716 
cout
 << 
ídl
 << 
Êush
;

718  
TCL_OK
;

719 
	}
}

723 
	$t_echo
(
Clõ¡D©a
, 
T˛_I¡îp
* 
ù
, 
ac
, 
TCL_AV
 * 
av
[])

725 
i
 = 1; i < 
ac
; i++) {

726 
cout
 << ((
i
 > 1Ë? " " : ""Ë<< 
av
[i];

727 
	`T˛_AµídResu…
(
ù
, (
i
 > 1Ë? " " : "", 
av
[i], 0);

729 
cout
 << 
ídl
 << 
Êush
;

731  
TCL_OK
;

732 
	}
}

754 *
	$ß„_°πok
(*
s
, c⁄° *
dñim
, *&
sˇ≈oöt
)

756 *
sˇn
;

757 *
tok
;

758 c⁄° *
dsˇn
;

760 i‡(
s
 =
NULL
 && 
sˇ≈oöt
 == NULL)

761 (
NULL
);

762 i‡(
s
 !
NULL
)

763 
sˇn
 = 
s
;

765 
sˇn
 = 
sˇ≈oöt
;

770 ; *
sˇn
 != '\0'; scan++) {

771 
dsˇn
 = 
dñim
; *dscan != '\0'; dscan++)

772 i‡(*
sˇn
 =*
dsˇn
)

774 i‡(*
dsˇn
 == '\0')

777 i‡(*
sˇn
 == '\0') {

778 
sˇ≈oöt
 = 
NULL
;

779 (
NULL
);

782 
tok
 = 
sˇn
;

787 ; *
sˇn
 != '\0'; scan++) {

788 
dsˇn
 = 
dñim
; *dscan != '\0';)

789 i‡(*
sˇn
 =*
dsˇn
++) {

790 
sˇ≈oöt
 = 
sˇn
+1;

791 *
sˇn
 = '\0';

792 (
tok
);

799 
sˇ≈oöt
 = 
NULL
;

800 (
tok
);

801 
	}
}

804 
	$gøb_v¨s
(
T˛_I¡îp
* 
pù
, 
T˛_DSåög
 *
v¨s
)

807 
	`w_as£π1
(
°hªad_t
::
	`me
()->
	`isSèckFømeOK
(0));

808 
îr
 = 
	`T˛_EvÆ
(
pù
, 
TCL_CVBUG
 "info vars");

809 i‡(
îr
 !
TCL_OK
) {

810 
	`w_as£π1
(0);

812 if(
debug
) {

813 
˚º


814 << 
__LINE__


815 << "{ infÿv¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
pù
)

816 << "}" << 
ídl
 <<Éndl;

820 *
ªsu…
 = 
	`°rdup
(
	`T˛_GëSåögResu…
(
pù
));

821 
	`w_as£π1
(
ªsu…
);

822 if(
debug
Ë{ 
˚º
 << 
__LINE__
 << "{ gøb_v¨†Ñëu∫†" << 
ªsu…


823 << " }" << 
ídl
 <<Éndl; }

825 
	`T˛_DSåögInô
(
v¨s
);

828 *
c⁄ãxt
 = 0;

829 *
p
 = 
	`ß„_°πok
(
ªsu…
, " ", 
c⁄ãxt
);

831 c⁄° *
¨øy_£t_cmd
 = "array set ";

832 c⁄° *
£t_cmd
 = "set ";

833 c⁄° *
bœnk
 = " ";

834 c⁄° *
em±y
 = "\"\"";

835 c⁄° *
°¨éi°
 = "{";

836 c⁄° *
ídli°
 = "}";

837 c⁄° *
∆
 = "\n";

839 
p
) {

840 
TCL_GETX
 * 
v
 = 
	`T˛_GëV¨
(
pù
, 
p
, 
TCL_GLOBAL_ONLY
);

842 i‡(
v
) {

843 
	`T˛_DSåögAµíd
(
v¨s
, 
£t_cmd
, 
	`°æí
(set_cmd));

844 
	`T˛_DSåögAµíd
(
v¨s
, 
p
, 
	`°æí
(p));

845 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

846 
	`T˛_DSåögAµíd
(
v¨s
, 
°¨éi°
, 1);

847 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

849 if(
debug
) {

850 
˚º
 << 
__LINE__


851 << "Ö " << 
p


852 << " v " << 
v


853 << 
ídl


854 << " vÜí " << 
	`°æí
(
v
Ë<< 
ídl
;

857 if(
	`°æí
(
v
) == 0) {

858 
	`T˛_DSåögAµíd
(
v¨s
, 
em±y
, 
	`°æí
(empty));

861 
	`T˛_DSåögAµíd
(
v¨s
, 
v
, 
	`°æí
(v));

863 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

864 
	`T˛_DSåögAµíd
(
v¨s
, 
ídli°
, 1);

865 
	`T˛_DSåögAµíd
(
v¨s
, 
∆
, 1);

869 i‡(
	`°rcmp
(
p
,"env")) {

873 
	`T˛_V¨EvÆ
(
pù
, "¨øy gë ", 
p
, 0);

874 *
§
 = 
	`°rdup
(
	`T˛_GëSåögResu…
(
pù
));

875 
	`T˛_DSåögAµíd
(
v¨s
, 
¨øy_£t_cmd
, 
	`°æí
(array_set_cmd));

876 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

877 
	`T˛_DSåögAµíd
(
v¨s
, 
p
, 
	`°æí
(p));

878 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

879 
	`T˛_DSåögAµíd
(
v¨s
, 
°¨éi°
, 1);

880 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

881 if(
debug
) {

882 
˚º
 << 
__LINE__


883 << "Ö " << 
p


884 << " s∏" << 
§


885 << 
ídl


887 << 
	`°æí
(
§
)

888 << 
ídl
;

890 
	`T˛_DSåögAµíd
(
v¨s
, 
§
, 
	`°æí
(sr));

891 
	`T˛_DSåögAµíd
(
v¨s
, 
bœnk
, 1);

892 
	`T˛_DSåögAµíd
(
v¨s
, 
ídli°
, 1);

893 
	`T˛_DSåögAµíd
(
v¨s
, 
∆
, 1);

894 
	`‰ì
(
§
);

896 
p
 = 
	`ß„_°πok
(0, " ", 
c⁄ãxt
);

899 if(
debug
Ë{ 
˚º
 << 
__LINE__
 << " { grab_varsÑeturns "

900 << 
	`T˛_DSåögVÆue
(
v¨s
Ë<< "}" << 
ídl
 <<Éndl; }

901 
	`‰ì
(
ªsu…
);

903 
	`w_as£π1
(
°hªad_t
::
	`me
()->
	`isSèckFømeOK
(0));

904 
	}
}

906 
	$gøb_¥ocs
(
T˛_I¡îp
* 
pù
, 
T˛_DSåög
 *
buf
)

909 
	`w_as£π1
(
°hªad_t
::
	`me
()->
	`isSèckFømeOK
(0));

910 
	`T˛_DSåögInô
(
buf
);

912 
îr
 = 
	`T˛_EvÆ
(
pù
, 
TCL_CVBUG
 "infoÖrocs");

913 i‡(
îr
 !
TCL_OK
) {

914 
	`w_as£π1
(0);

917 * 
¥ocs
 = 
	`°rdup
(
	`T˛_GëSåögResu…
(
pù
));

919 if(
debug
Ë{ 
˚º
 << "{gøb_¥oc†" << 
¥ocs
 << "}" << 
ídl
 <<Éndl; }

920 i‡(*
¥ocs
) {

921 *
c⁄ãxt
 = 0;

922 
	`w_as£π1
(
¥ocs
);

924 * 
p
 = 
	`ß„_°πok
(
¥ocs
, " ", 
c⁄ãxt
);

925 
p
;Ö = 
	`ß„_°πok
(0, " ", 
c⁄ãxt
))

927 
löe
[1000];

929 
	`T˛_DSåögAµíd
(
buf
, "proc ", -1);

930 
	`T˛_DSåögAµíd
(
buf
, 
p
, -1);

932 
w_o°r°ªam
 
	`s
(
löe
, (line));

933 
s
 << "öfÿ¨g†" << 
p
 << 
íds
;

934 
	`T˛_EvÆ
(
pù
, 
TCL_CVBUG
 
s
.
	`c_°r
());

935 
	`T˛_DSåögAµíd
(
buf
, " { ", -1);

936 
	`T˛_DSåögAµíd
(
buf
, 
	`T˛_GëSåögResu…
(
pù
), -1);

937 
	`T˛_DSåögAµíd
(
buf
, " } ", -1);

940 
w_o°r°ªam
 
	`s
(
löe
, (line));

941 
s
 << "öfÿbody " << 
p
 << 
íds
;

942 
	`T˛_EvÆ
(
pù
, 
TCL_CVBUG
 
s
.
	`c_°r
());

943 
	`T˛_DSåögAµíd
(
buf
, " { ", -1);

944 
	`T˛_DSåögAµíd
(
buf
, 
	`T˛_GëSåögResu…
(
pù
), -1);

945 
p
 = 
	`T˛_DSåögAµíd
(
buf
, " } \n", -1);

946 
	`as£π
(
p
);

947 
	`as£π
(
	`T˛_Comm™dCom∂ëe
(
p
));

949 
	`as£π
(
îr
 =
TCL_OK
);

953 
	`‰ì
(
¥ocs
);

954 if(
debug
Ë{ 
˚º
 << "gøb_¥oc†ªtu∫†" << 
	`T˛_DSåögVÆue
(
buf
Ë<< 
ídl
 <<Éndl; }

955 
	`T˛_Re£tResu…
(
pù
);

957 
	`w_as£π1
(
°hªad_t
::
	`me
()->
	`isSèckFømeOK
(0));

958 
	}
}

960 
	$¸óã_°dcmd
(
T˛_I¡îp
* 
ù
)

962 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "debugÊags", 
t_debugÊags
, 0, 0);

963 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "__as£π", 
t_as£π
, 0, 0);

964 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "timeofday", 
t_timeofday
, 0, 0);

965 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "øndom", 
t_øndom
, 0, 0);

966 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "ªad_øndom", 
t_ªad_øndom
, 0, 0);

967 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "wrôe_øndom", 
t_wrôe_øndom
, 0, 0);

968 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "debugöfo", 
t_debugöfo
, 0, 0);

970 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "f‹k_thªad", 
t_f‹k_thªad
, 0, 0);

971 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "joö_thªad", 
t_joö_thªad
, 0, 0);

973 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "sync", 
t_sync
, 0, 0);

974 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "sync_thªad", 
t_sync_thªad
, 0, 0);

977 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "deföe_«med_sync", 
t_deföe_«med_sync
, 0, 0);

978 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "undef_«med_sync", 
t_undef_«med_sync
, 0, 0);

979 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "«med_sync", 
t_«med_sync
, 0, 0);

981 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "«med_sync_thªad", 
t_«med_sync
, 0, 0);

983 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "yõld", 
t_yõld
, 0, 0);

985 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "lök_to_öãr_thªad_comm_buf„r", 
t_lök_to_öãr_thªad_comm_buf„r
, 0, 0);

986 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "echo", 
t_echo
, 0, 0);

987 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "≥cho", 
t_≥cho
, 0, 0);

990 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "exô", 
t_exô
, 0, 0);

991 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "time", 
t_time
, 0, 0);

992 
	}
}

994 ˛as†
	c__sh¨ed
 {

995 
public
:

996 
löe
[1000];

997 
°dö_hdl
;

998 
löe_numbî
;

1000 
	$__sh¨ed
–
fd
Ë: 
	$°dö_hdl
(
fd
)

1001 { 
löe
[0] = '\0'; 
löe_numbî
=0;}

1003 
w_rc_t
 
	`ªad
();

1004 
	}
};

1006 
w_rc_t
 
	g__sh¨ed
::
	$ªad
()

1008 
cö
.
	`gëlöe
(
löe
, (line) - 2);

1009 
löe_numbî
++;

1010  
RCOK
;

1011 
	}
}

1013 
	$¥o˚ss_°dö
(
T˛_I¡îp
* 
ù
)

1015 
	`FUNC
(
¥o˚ss_°dö
);

1017 
∑πül
 = 0;

1018 
T˛_DSåög
 
buf
;

1019 
	`T˛_DSåögInô
(&
buf
);

1020 c⁄° 
ây
 = 
	`ißây
(0);

1021 
__sh¨ed
 
	`sh¨ed
(0);

1024 
cö
.
	`˛ór
();

1025 i‡(
ây
) {

1026 
TCL_GETX
 * 
¥om±
 =

1027 
	`T˛_GëV¨
(
ù
, 
	`TCL_CVBUG
 (
∑πül
 ? "tcl_prompt2" :

1028 "t˛_¥om±1"), 
TCL_GLOBAL_ONLY
);

1029 i‡(! 
¥om±
) {

1030 i‡(! 
∑πül
Ë
cout
 << "% " << 
Êush
;

1032 i‡(
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 
¥om±
Ë!
TCL_OK
) {

1033 
˚º
 << 
	`T˛_GëSåögResu…
(
ù
Ë<< 
ídl
;

1034 
	`T˛_AddEº‹Info
(
ù
,

1035 
TCL_CVBUG
 "\n (scriptÅhat generatesÖrompt)");

1036 i‡(! 
∑πül
Ë
cout
 << "% " << 
Êush
;

1038 ::
	`fÊush
(
°dout
);

1043 
	`W_COERCE
(
sh¨ed
.
	`ªad
());

1044 
	`DBG
(<< "stdin isÑeady");

1048 
sh¨ed
.
	`ªad
();

1051 
sh¨ed
.
löe
[(shared.line)-2] = '\0';

1052 
	`°rˇt
(
sh¨ed
.
löe
, "\n");

1053 i‡–!
cö
) {

1054 i‡(! 
∑πül
) {

1055 
	`DBGTHRD
("bªak: !cö && !∑πül" << 
sh¨ed
.
löe
);

1058 
sh¨ed
.
löe
[0] = '\0';

1060 * 
cmd
 = 
	`T˛_DSåögAµíd
(&
buf
, 
sh¨ed
.
löe
, -1);

1061 
	`DBGTHRD
("¥o˚ss_°dö:Üöêi†" << 
sh¨ed
.
löe


1062 << "ˇŒög Comm™dCom∂ëêf‹ " << 
cmd
);

1063 i‡(
sh¨ed
.
löe
[0] && ! 
	`T˛_Comm™dCom∂ëe
(
cmd
)) {

1064 
	`DBG
(<< "isÖartial");

1065 
∑πül
 = 1;

1069 
	`DBGTHRD
("¥o˚ss_°dö: com∂ëe:Ñec‹dándÉvÆ:" << 
cmd
);

1070 
∑πül
 = 0;

1071 
ªsu…
 = 
	`T˛_Rec‹dAndEvÆ
(
ù
, 
cmd
, 0);

1072 
	`DBGTHRD
("T˛_Rec‹dAndEvÆÑëu∫s:" << 
ªsu…
);

1073 
	`T˛_DSåögFªe
(&
buf
);

1074 i‡(
ªsu…
 =
TCL_OK
) {

1075 
	`DBGTHRD
("TCL_OK:" << 
	`T˛_GëSåögResu…
(
ù
));

1076 
TCL_GETX
 *
r
 = 
	`T˛_GëSåögResu…
(
ù
);

1077 i‡(*
r
) {

1078 
cout
 << 
r
<< 
ídl
;

1081 
TCL_GETX
 *
r
 = 
	`T˛_GëSåögResu…
(
ù
);

1082 i‡(
ªsu…
 =
TCL_ERROR
 && !
	`°rcmp
(
r
, 
TCL_EXIT_ERROR_STRING
)) {

1083 
	`DBGTHRD
("TCL_ERROR:" << 
r
);

1086 
˚º
 << "process_stdin(): Error";

1087 i‡(
ªsu…
 !
TCL_ERROR
Ë
˚º
 << " " <<Ñesult;

1088 i‡(*
r
Ë{ 
˚º
 << ": " <<Ñ; }

1089 
˚º
 << 
ídl
;

1093 
	}
}

1096 
	$c›y_öãΩ
(
T˛_I¡îp
 *
ù
, 
T˛_DSåög
 *
v¨s
, T˛_DSåög *
¥ocs
)

1098 if(
t˛_öô_cmd
) {

1099 
ªsu…
 = 
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 
t˛_öô_cmd
);

1101 i‡(
ªsu…
 !
TCL_OK
) {

1102 
˚º
 << "tcl_thread_t(): ErrorÉvaluating command:"

1103 << 
t˛_öô_cmd
 <<
ídl
 ;

1104 i‡(
ªsu…
 !
TCL_ERROR
Ë
˚º
 << " " <<Ñesult;

1105 
TCL_GETX
 *
r
 = 
	`T˛_GëSåögResu…
(
ù
);

1106 i‡(*
r
Ë
˚º
 << ": " <<Ñ;

1107 
˚º
 << 
ídl
;

1108 
	`w_as£π3
(0);;

1117 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "vèbÀ", 
vèbÀ_di•©ch
, 0, 0);

1118 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "sm", 
sm_di•©ch
, 0, 0);

1119 
	`T˛_Cª©eComm™d
(
ù
, 
TCL_CVBUG
 "°", 
°_di•©ch
, 0, 0);

1121 
	`¸óã_°dcmd
(
ù
);

1123 if(
v¨s
) {

1125 
îr
 = 
	`T˛_EvÆ
(
ù
, 
	`T˛_DSåögVÆue
(
v¨s
));

1126 i‡(
îr
 !
TCL_OK
) {

1127 
˚º
 << 
__LINE__


1128 << " { së v¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
ù
)

1129 << "}" << 
ídl
 <<Éndl;

1132 if(
¥ocs
) {

1134 
îr
 = 
	`T˛_EvÆ
(
ù
, 
	`T˛_DSåögVÆue
(
¥ocs
));

1135 i‡(
îr
 !
TCL_OK
) {

1136 
˚º
 << 
__LINE__


1137 << " { së v¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
ù
)

1138 << "}" << 
ídl
 <<Éndl;

1141 
	`T˛_Re£tResu…
(
ù
);

1143 if(
debug
) {

1144 
îr
 = 
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 "info vars");

1145 i‡(
îr
 !
TCL_OK
) {

1146 
	`w_as£π1
(0);

1148 
˚º


1149 << 
__LINE__


1150 << " { infÿv¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
ù
)

1151 << "}" << 
ídl
 <<Éndl;

1154 
	}
}

1156 
	gt˛_thªad_t
::
	$run
()

1159 
	`CRITICAL_SECTION
(
cs
, 
thªad_muãx
);

1161 
	`öôülize
();

1162 
	`c›y_öãΩ
(
ù
, 
∑ª¡_v¨s
, 
∑ª¡_¥ocs
);

1163 if(
debug
) {

1164 
îr
 = 
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 "info vars");

1165 i‡(
îr
 !
TCL_OK
) {

1166 
	`w_as£π1
(0);

1168 if(
debug
) {

1169 
˚º
 << 
__LINE__
 << "Åhªad: " << 
	`«me
()

1170 << "{ infÿv¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
ù
)

1171 << "}" << 
ídl
 <<Éndl;

1175 if(
is_maö_thªad
)

1177 
	`w_as£π1
(
∑ª¡_v¨s
 ==
NULL
);

1178 
	`w_as£π1
(
∑ª¡_¥ocs
 ==
NULL
);

1185 
	`w_as£π0
(
thªad_cou¡
 == 1);

1186 i‡(
thªad_cou¡
 == 1)

1188 
	`as£π
(
sm
 == 0);

1190 if(
log_w¨n_ˇŒback
) {

1191 
sm
 = 
√w
 
	`ss_m
(
out_of_log_•a˚
, 
gë_¨chived_log_fûe
);

1193 
sm
 = 
√w
 
	`ss_m
();

1195 i‡(! 
sm
) {

1196 
˚º
 << 
__FILE__
 << ':' << 
__LINE__


1197 << " ouào‡mem‹y" << 
ídl
;

1198 
cs
.
	`exô
();

1199 
	`W_FATAL
(
fcOUTOFMEMORY
);

1201 
	`W_COERCE
–
sm
->
	`c⁄fig_öfo
(
globÆ_sm_c⁄fig_öfo
));

1204 
	`w_as£π1
(0);

1209 
	`w_as£π1
(
∑ª¡_v¨s
 !
NULL
);

1210 
	`w_as£π1
(
∑ª¡_¥ocs
 !
NULL
);

1214 
	`T˛_DSåögFªe
(
∑ª¡_v¨s
);

1215 
	`T˛_DSåögFªe
(
∑ª¡_¥ocs
);

1216 
dñëe
 
∑ª¡_v¨s
;

1217 
dñëe
 
∑ª¡_¥ocs
;

1221 i‡(
¨gs
)

1231 
ªsu…
 = 
	`T˛_EvÆ
(
ù
, 
¨gs
);

1232 i‡(
ªsu…
 !
TCL_OK
) {

1233 
˚º
 << "Eº‹ i¿t˛Åhªadáà" << 
__LINE__


1234 << " i¿" << 
__FILE__


1235 << "\¿¨gs: " << 
¨gs


1236 << "\¿ªsu…: " << 
	`T˛_GëSåögResu…
(
ù
Ë<< 
ídl
;

1237 
˚º
 << "comm™d: " << 
¨gs
 <<
ídl
;

1239 
SSH_CHECK_STACK
;

1241 if(
debug
) {

1242 
îr
 = 
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 "info vars");

1243 i‡(
îr
 !
TCL_OK
) {

1244 
	`w_as£π1
(0);

1246 if(
debug
) {

1247 
˚º
 << 
__LINE__


1248 << "{ infÿv¨†ªtu∫†" << 
	`T˛_GëSåögResu…
(
ù
)

1249 << "}" << 
ídl
 <<Éndl;

1258 
	`w_as£π1
(
is_maö_thªad
);

1259 
	`¥o˚ss_°dö
(
ù
);

1262 i‡(
	`x˘
(Ë!
NULL
)

1264 
˚º
 << "DyögÅhªad i†ru¬ögáÅønß˘i⁄:áb‹tög ..." << 
ídl
;

1265 
w_rc_t
 
rc
 = 
sm
->
	`ab‹t_x˘
();

1266 if(
rc
.
	`is_îr‹
()) {

1267 
˚º
 << "C™nŸáb‹àtx : " << 
rc
 << 
ídl
;

1268 if(
rc
.
	`îr_num
(Ë=
ss_m
::
eTWOTHREAD
) {

1269 
	`me
()->
	`dëach_x˘
(
	`x˘
());

1272 
˚º
 << "Tønß˘i⁄áb‹àcom∂ëe" << 
ídl
;

1276 #i‡
USE_BARRIER


1281 
	`CRITICAL_SECTION
(
c¶ock
, 
lock
);

1282 
hasExôed
 = 
åue
;

1283 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
quõs˚d
));

1287 if(
is_maö_thªad
) {

1288 
	`CRITICAL_SECTION
(
cs
, 
thªad_muãx
);

1293 i‡(
thªad_cou¡
 == 1) {

1295 
dñëe
 
sm
;

1296 
sm
 = 0;

1298 
	`Ârötf
(
°dîr
, " AAAKÅhread count %d forked %d joined %d\n",

1299 
thªad_cou¡
, 
thªad_f‹ked
, 
thªad_joöed
);

1300 
	`w_as£π1
(
thªad_cou¡
 == 1);

1301 
	`w_as£π1
(
thªad_f‹ked
 =
thªad_joöed
);

1304 if(
is_maö_thªad
) {

1305 
	`ªmove_Æl_b¨rõrs
();

1311 
	`unöôülize
();

1312 
	}
}

1314 
	gt˛_thªad_t
::
	$joö
(
id
)

1316 
t˛_thªad_t
 *
r
 = 
	`föd
(
id
);

1317 i‡(
r
) {

1318 
w_rc_t
 
rc
 = 
r
->
	`joö
();

1319 if(
rc
.
	`is_îr‹
()) {

1320 
	`w_ª£t_°r°ªam
(
t˛out
);

1321 
t˛out
 << 
rc
 << 
ídl
;

1322 
	`Ârötf
(
°dîr
, "\nJoinÇotállowed because: %s\nFixÅhe script!\n",

1323 
t˛out
.
	`c_°r
());

1325 
dñëe
 
r
;

1327 
	}
}

1329 
	gt˛_thªad_t
::
	$sync_Ÿhîs
(
n
, 
id
[])

1331 
t˛_thªad_t
 **
Ÿhîs
 = 
√w
Å˛_thªad_à*[
n
];

1332 
i
=0; i < 
n
; i++) {

1333 
Ÿhîs
[
i
] = 
	`föd
(
id
[i]);

1335 
	`sync_thªads
(
n
, 
Ÿhîs
);

1336 
dñëe
[] 
Ÿhîs
;

1337 
	}
}

1339 
	gt˛_thªad_t
::
	$sync_thªads
(
n
, 
t˛_thªad_t
 *
t
[])

1341 #i‡
USE_BARRIER


1343 
boﬁ
 *
acquúed
 = 
√w
 boﬁ[
n
];

1346 
i
=0; i < 
n
; i++) {

1347 
t˛_thªad_t
 *
r
 = 
t
[
i
];

1348 #i‡
USE_BARRIER


1350 
acquúed
[
i
] = 
Ál£
;

1352 if(
r
) {

1353 #i‡
USE_BARRIER


1354 
	`DO_PTHREAD_BARRIER
(
	`±hªad_b¨rõr_waô
(&
r
->
myb¨rõr
));

1356 
	`CRITICAL_SECTION
(
c¶ock
, 
r
->
lock
);

1357 i‡(
r
->
	`°©us
(Ë!r->
t_defun˘
) {

1358 
acquúed
[
i
]=
åue
;

1359 !(
r
->
isWaôög
 ||Ñ->
hasExôed
)) {

1360 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
r
->
quõs˚d
, &r->
lock
));

1362 
r
->
isWaôög
 = 
Ál£
;

1367 #i‡
USE_BARRIER


1369 
i
=0; i < 
n
; i++) {

1370 
t˛_thªad_t
 *
r
 = 
t
[
i
];

1371 if(
r
) {

1372 
	`CRITICAL_SECTION
(
c¶ock
, 
r
->
lock
);

1373 i‡(
r
->
	`°©us
(Ë!r->
t_defun˘
) {

1374 
r
->
ˇnPro˚ed
 = 
åue
;

1375 
ªs
 = 
	`±hªad_c⁄d_sig«l
(&
r
->
¥o˚ed
);

1376 if(
ªs
) {

1377 
	`W_FATAL_MSG
(
fcINTERNAL
,

1379 << 
ªs
);

1381 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
r
->
lock
));

1382 } if(
acquúed
[
i
]) {

1384 
	`DO_PTHREAD
–
	`±hªad_muãx_u∆ock
(&
r
->
lock
) );

1388 
i
=0; i < 
n
; i++Ë
t
[i] = 
NULL
;

1389 
	}
}

1391 
	gt˛_thªad_t
::
	$sync_Ÿhî
(
id
)

1393 
t˛_thªad_t
 *
r
 = 
	`föd
(
id
);

1394 if(
r
) {

1395 #i‡
USE_BARRIER


1396 
	`DO_PTHREAD_BARRIER
(
	`±hªad_b¨rõr_waô
(&
r
->
myb¨rõr
));

1398 
	`CRITICAL_SECTION
(
cs
, 
r
->
lock
);

1399 i‡(
r
->
	`°©us
(Ë!r->
t_defun˘
) {

1400 !(
r
->
isWaôög
 ||Ñ->
hasExôed
)) {

1401 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
r
->
quõs˚d
, &r->
lock
));

1403 
r
->
isWaôög
 = 
Ál£
;

1404 
r
->
ˇnPro˚ed
 = 
åue
;

1405 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
r
->
¥o˚ed
));

1409 
	}
}

1411 
	gt˛_thªad_t
::
	$sync
()

1413 #i‡
USE_BARRIER


1414 
	`DO_PTHREAD_BARRIER
(
	`±hªad_b¨rõr_waô
(&
myb¨rõr
));

1416 
	`CRITICAL_SECTION
(
cs
, 
lock
);

1417 
isWaôög
 = 
åue
;

1418 
	`DO_PTHREAD
–
	`±hªad_c⁄d_sig«l
(&
quõs˚d
) );

1419 !
ˇnPro˚ed
) {

1420 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
¥o˚ed
, &
lock
));

1422 
ˇnPro˚ed
 = 
Ál£
;

1424 
	}
}

1427 
	gt˛_thªad_t
::
	$£t_¨gs
(

1428 
TCL_AV
 * 
av
[]

1432 
Àn
;

1433 
i
;

1434 
i
 = 0, 
Àn
 = 0; i < 
ac
; i++)

1435 
Àn
 +
	`°æí
(
av
[
i
]) + 1;

1441 i‡(
Àn
) {

1442 if(
¨gs
Ë{ ::
	`‰ì
◊rgs);árgs=
NULL
; }

1444 
¨gs
 = (*)::
	`mÆloc
(
Àn
+10);

1445 
	`w_as£π1
(
¨gs
);

1447 
¨gs
[0] = '\0';

1448 
i
 = 0; i < 
ac
; i++) {

1449 
	`°rˇt
(
¨gs
, 
av
[
i
]);

1450 
	`°rˇt
(
¨gs
, " ");

1459 
	`w_as£π1
(
	`°æí
(
¨gs
Ë<
Àn
);

1461 
	}
}

1464 
	gt˛_thªad_t
::
	$t˛_thªad_t
(

1465 
_ac
,

1466 
TCL_AV
 * 
av
[],

1467 c⁄° * 
_libdú
,

1468 c⁄° * 
_rcfûe


1469 Ë: 
	`smthªad_t
(
t_ªguœr
,

1470 "maö-t˛_thªad", 
WAIT_FOREVER
, 
°hªad_t
::
deÁu…_°ack
 * 2),

1471 #i‡
USE_BARRIER


1473 
	`isWaôög
(
Ál£
),

1474 
	`ˇnPro˚ed
(
Ál£
),

1475 
	`hasExôed
(
Ál£
),

1477 
	`lib_dú
(
_libdú
),

1478 
	`rcfûe
(
_rcfûe
),

1479 
	`¨gs
(0),

1480 
	`ac
(
_ac
),

1481 
	`ù
(0),

1488 
	`is_maö_thªad
(
åue
),

1489 
	`∑ª¡_v¨s
(0),

1490 
	$∑ª¡_¥ocs
(0)

1492 
	`©omic_öc
(
num_t˛_thªads
);

1493 
	`©omic_öc
(
num_t˛_thªads_âl
);

1503 
w_o°r°ªam_buf
 
	`o
(40);

1504 
	`W_FORM2
(
o
,("t˛_thªad(%d)-MAIN", 
id
));

1505 
o
 << 
íds
;

1506 
	`ª«me
(
o
.
	`c_°r
());

1508 
	`£t_¨gs
(
av
);

1509 
	`w_as£π1
(
ù
==0);

1511 
	`CRITICAL_SECTION
 (
cs
, 
thªad_muãx
);

1514 ++
thªad_cou¡
;

1515 
	`w_as£π0
(
thªad_cou¡
 == 1);

1516 
thªad¶i°
.
	`push
(
this
);

1519 #i‡
USE_BARRIER


1520 
	`DO_PTHREAD
(
	`±hªad_b¨rõr_öô
(&
myb¨rõr
, 
NULL
, 2));

1522 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
quõs˚d
, 
NULL
));

1523 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
¥o˚ed
, 
NULL
));

1524 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
lock
, 
NULL
));

1526 
	}
}

1529 
	gt˛_thªad_t
::
	$t˛_thªad_t
(

1530 
_ac
,

1531 
TCL_AV
 * 
av
[],

1532 
T˛_DSåög
* 
_∑ª¡_v¨s
,

1533 
T˛_DSåög
* 
_∑ª¡_¥ocs


1534 Ë: 
	`smthªad_t
(
t_ªguœr
,

1535 "t˛_thªad", 
WAIT_FOREVER
, 
°hªad_t
::
deÁu…_°ack
 * 2),

1536 #i‡
USE_BARRIER


1538 
	`isWaôög
(
Ál£
),

1539 
	`ˇnPro˚ed
(
Ál£
),

1540 
	`hasExôed
(
Ál£
),

1542 
	`lib_dú
(0),

1543 
	`rcfûe
(0),

1544 
	`¨gs
(0),

1545 
	`ac
(
_ac
),

1546 
	`ù
(0),

1553 
	`is_maö_thªad
(
Ál£
),

1554 
	`∑ª¡_v¨s
(
_∑ª¡_v¨s
),

1555 
	$∑ª¡_¥ocs
(
_∑ª¡_¥ocs
)

1557 
	`©omic_öc
(
num_t˛_thªads
);

1558 
	`©omic_öc
(
num_t˛_thªads_âl
);

1561 
w_o°r°ªam_buf
 
	`o
(40);

1562 
	`W_FORM2
(
o
,("t˛_thªad(%d)-f‹ked", 
id
));

1563 
o
 << 
íds
;

1564 
	`ª«me
(
o
.
	`c_°r
());

1566 
	`£t_¨gs
(
av
);

1567 
	`w_as£π1
(
ù
==0);

1570 
	`CRITICAL_SECTION
 (
cs
, 
thªad_muãx
);

1573 ++
thªad_cou¡
;

1574 
	`w_as£π0
(
thªad_cou¡
 > 1);

1575 
thªad¶i°
.
	`push
(
this
);

1579 #i‡
USE_BARRIER


1580 
	`DO_PTHREAD
(
	`±hªad_b¨rõr_öô
(&
myb¨rõr
, 
NULL
, 2));

1582 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
quõs˚d
, 
NULL
));

1583 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
¥o˚ed
, 
NULL
));

1584 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
lock
, 
NULL
));

1586 
	}
}

1588 
	gt˛_thªad_t
::~
	$t˛_thªad_t
()

1590 
	`©omic_dec
(
num_t˛_thªads
);

1592 
	`w_as£π1
(
ù
==
NULL
);

1595 if(
¨gs
) {

1596 ::
	`‰ì
(
¨gs
);

1597 
¨gs
=0;

1601 
	`CRITICAL_SECTION
 (
cs
, 
thªad_muãx
);

1602 --
thªad_cou¡
 ;

1603 
	`w_as£π0
(
thªad_cou¡
 >= 0);

1604 if(
is_maö_thªad
Ë
	`w_as£π0
(
thªad_cou¡
 == 0);

1605 
lök
.
	`dëach
();

1607 #i‡
USE_BARRIER


1608 
	`DO_PTHREAD
(
	`±hªad_b¨rõr_de°roy
(&
myb¨rõr
));

1610 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
quõs˚d
));

1611 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
¥o˚ed
));

1612 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
lock
));

1614 
	}
}

1616 
boﬁ
 
ö°rumít
;

1617 
boﬁ
 
vîbo£
;

1618 
boﬁ
 
vîbo£2
;

1619 
boﬁ
 
f‹˚_com¥ess
;

1620 
boﬁ
 
log_w¨n_ˇŒback
;

1624 
	gt˛_thªad_t
::
	$unöôülize
()

1626 i‡(
ù
) {

1627 
	`T˛_DñëeI¡îp
(
ù
);

1628 
ù
 = 0;

1631 
	`˛ón_up_shñl
();

1632 
	}
}

1634 
	gt˛_thªad_t
::
	$öôülize
(

1641 
globÆ_ù
 =

1642 
ù
 = 
	`T˛_Cª©eI¡îp
();

1644 i‡(!
ù
)

1645 
	`W_FATAL
(
fcOUTOFMEMORY
);

1647 if(!
lib_dú
) ;

1651 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 
Logiˇl_id_Êag_t˛
,

1652 
TCL_CVBUG
 
	`t˛_f‹m_Êag
(0), 
TCL_GLOBAL_ONLY
);

1654 
w_o°r°ªam_buf
 
	`s
(
ss_m
::
max_dev«me
 + 1);

1655 
s
 << 
lib_dú
 << "/smsh.t˛" << 
íds
;

1656 i‡(
	`T˛_EvÆFûe
(
ù
, 
TCL_CVBUG
 
s
.
	`c_°r
()Ë!
TCL_OK
) {

1657 
˚º
 << 
__FILE__
 << ':' << 
__LINE__
 << ':'

1658 << "Éº‹ i¿\"" << 
s
.
	`c_°r
(Ë<< "\" s¸ùt" << 
ídl
;

1659 
˚º
 << 
	`T˛_GëSåögResu…
(
ù
Ë<< 
ídl
;

1660 
	`W_FATAL
(
fcINTERNAL
);

1663 
	`¸óã_°dcmd
(
ù
);

1667 
T˛_DSåög
 
buf
;

1668 * 
rcfûíame
 = 
	`T˛_TûdeSub°
(
ù
, 
rcfûe
, &
buf
);

1669 i‡(
rcfûíame
) {

1670 
FILE
* 
f
;

1671 
f
 = 
	`f›í
(
rcfûíame
, "r");

1672 i‡(
f
) {

1673 i‡(
	`T˛_EvÆFûe
(
ù
, 
rcfûíame
Ë!
TCL_OK
) {

1674 
˚º
 << 
	`T˛_GëSåögResu…
(
ù
)<< 
ídl
;

1675 
	`w_as£π1
(0);

1678 
	`f˛o£
(
f
);

1680 
˚º
 << "WARNING: couldÇot openÑc file: "

1681 << 
rcfûíame
 << 
ídl
;

1684 
	`T˛_DSåögFªe
(&
buf
);

1687 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "log_warn_callback_flag",

1688 
TCL_SETV2
 
	`t˛_f‹m_Êag
(
log_w¨n_ˇŒback
), 
TCL_GLOBAL_ONLY
);

1691 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "compress_flag",

1692 
TCL_SETV2
 
	`t˛_f‹m_Êag
(
f‹˚_com¥ess
), 
TCL_GLOBAL_ONLY
);

1694 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "instrument_flag",

1695 
TCL_SETV2
 
	`t˛_f‹m_Êag
(
ö°rumít
), 
TCL_GLOBAL_ONLY
);

1697 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "verbose_flag",

1698 
TCL_SETV2
 
	`t˛_f‹m_Êag
(
vîbo£
), 
TCL_GLOBAL_ONLY
);

1699 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "verbose2_flag",

1700 
TCL_SETV2
 
	`t˛_f‹m_Êag
(
vîbo£2
), 
TCL_GLOBAL_ONLY
);

1704 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "¨gv", 
¨gs
, 
TCL_GLOBAL_ONLY
);

1706 
w_o°r°ªam_buf
 
	`Ÿmp
(100);

1707 
Ÿmp
 << 
ac
 << 
íds
;

1708 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "¨gc", 
Ÿmp
.
	`c_°r
(), 
TCL_GLOBAL_ONLY
);

1713 c⁄° *
f_¨g
 = (
ac
 > 0)? 
av
[1] : 
¨gv0
;

1714 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "¨gv0", TCL_CVBUG 
f_¨g
, 
TCL_GLOBAL_ONLY
);

1718 
	`T˛_SëV¨
(
ù
, 
TCL_CVBUG
 "tcl_interactive",

1719 
	`TCL_CVBUG
 (
	`t˛_f‹m_Êag
(
öãø˘ive
)), 
TCL_GLOBAL_ONLY
);

1722 if(
debug
)

1724 
T˛_DSåög
* 
¥ocs
 = 
√w
 Tcl_DString;

1725 
T˛_DSåög
* 
v¨s
 = 
√w
 Tcl_DString;

1726 
	`gøb_v¨s
(
ù
, 
v¨s
);

1727 
	`gøb_¥ocs
(
ù
, 
¥ocs
);

1728 
	`T˛_DSåögFªe
(
¥ocs
);

1729 
	`T˛_DSåögFªe
(
v¨s
);

1730 
dñëe
 
¥ocs
;

1731 
dñëe
 
v¨s
;

1732 
°d
::
˚º
 << " INITIALIZE CHECK OK" << 
ídl
;

1733 
	`T˛_EvÆ
(
ù
, 
TCL_CVBUG
 "interpÑecursionlimit");

1734 
°d
::
˚º
 << "Ñecursionlimit "

1735 << 
	`T˛_GëSåögResu…
(
ù
)

1736 << 
ídl
;

1740 (Ë
	`T˛_LökV¨
(
ù
,

1741 
TCL_CVBUG
 "sm_∑ge_sz", (*)&
löked
.
sm_∑ge_sz
, 
TCL_LINK_INT
);

1742 (Ë
	`T˛_LökV¨
(
ù
,

1743 
TCL_CVBUG
 "sm_max_exts", (*)&
löked
.
sm_max_exts
, 
TCL_LINK_INT
);

1744 (Ë
	`T˛_LökV¨
(
ù
,

1745 
TCL_CVBUG
 "sm_max_vﬁs", (*)&
löked
.
sm_max_vﬁs
, 
TCL_LINK_INT
);

1746 (Ë
	`T˛_LökV¨
(
ù
,

1747 
TCL_CVBUG
 "sm_max_£rvîs", (*)&
löked
.
sm_max_£rvîs
, 
TCL_LINK_INT
);

1748 (Ë
	`T˛_LökV¨
(
ù
,

1749 
TCL_CVBUG
 "sm_max_keycomp", (*)&
löked
.
sm_max_keycomp
, 
TCL_LINK_INT
);

1750 (Ë
	`T˛_LökV¨
(
ù
,

1751 
TCL_CVBUG
 "sm_max_dú_ˇche", (*)&
löked
.
sm_max_dú_ˇche
, 
TCL_LINK_INT
);

1752 (Ë
	`T˛_LökV¨
(
ù
,

1753 
TCL_CVBUG
 "sm_max_ªc_Àn", (*)&
löked
.
sm_max_ªc_Àn
, 
TCL_LINK_INT
);

1754 (Ë
	`T˛_LökV¨
(
ù
,

1755 
TCL_CVBUG
 "sm_§vid_m≠_sz", (*)&
löked
.
sm_§vid_m≠_sz
, 
TCL_LINK_INT
);

1757 (Ë
	`T˛_LökV¨
(
ù
,

1758 
TCL_CVBUG
 "ö°rumít_Êag", (*)&
löked
.
ö°rumít_Êag
, 
TCL_LINK_INT
);

1759 (Ë
	`T˛_LökV¨
(
ù
,

1760 
TCL_CVBUG
 "vîbo£_Êag", (*)&
löked
.
vîbo£_Êag
, 
TCL_LINK_INT
);

1761 (Ë
	`T˛_LökV¨
(
ù
,

1762 
TCL_CVBUG
 "vîbo£2_Êag", (*)&
löked
.
vîbo£2_Êag
, 
TCL_LINK_INT
);

1763 (Ë
	`T˛_LökV¨
(
ù
,

1764 
TCL_CVBUG
 "com¥ess_Êag", (*)&
löked
.
com¥ess_Êag
, 
TCL_LINK_INT
);

1765 (Ë
	`T˛_LökV¨
(
ù
,

1766 
TCL_CVBUG
 "log_warn_callback_flag",

1767 (*)&
löked
.
log_w¨n_ˇŒback_Êag
, 
TCL_LINK_INT
);

1775 
	}
}

1777 
t˛_thªad_t
 *
	gt˛_thªad_t
::
	$föd
(
id
)

1779 
	`CRITICAL_SECTION
(
cs
, 
thªad_muãx
);

1780 
w_li°_i
<
t˛_thªad_t
, 
queue_ba£d_block_lock_t
> 
	`i
(
thªad¶i°
);

1781 
t˛_thªad_t
 *
r
;

1782 (
r
 = 
i
.
	`√xt
()Ë&& (r->
id
 != id))

1784  
r
;

1785 
	}
}

	@src/sm/smsh/tcl_thread.h

30 #i‚de‡
TCL_THREAD_H


31 
	#TCL_THREAD_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


41 
	~"t˛_w‹k¨ound.h
"

43 
	~"ma˝thªad_b¨rõr.h
"

45 "C" 
num_t˛_thªads_ru¬ög
();

46 
boﬁ
 
öãø˘ive
;

47 c⁄° *
¨gv0
;

48 
boﬁ
 
debug
;

49 
T˛_I¡îp
* 
globÆ_ù
;

50 
˛ass
 
	gss_m
;

51 
ss_m
* 
sm
;

52 
t_co_ªtúe
(
T˛_I¡îp
* , , 
TCL_AV
 *[]);

54 
˛ass
 
	gb¨rõr_t
;

55 ˛as†
	ct˛_thªad_t
 : 
public
 
smthªad_t
 {

56 
public
:

57 
NORET
 
t˛_thªad_t
(

58 
ac
,

59 
TCL_AV
 * 
av
[],

60 c⁄° * 
libdú∑th
,

61 c⁄° * 
rcfûíame


63 
NORET
 
t˛_thªad_t
(

64 
ac
,

65 
TCL_AV
 * 
av
[],

66 
T˛_DSåög
* 
∑ª¡_v¨s
,

67 
T˛_DSåög
* 
∑ª¡_¥ocs


69 
	mNORET
 ~
t˛_thªad_t
();

71 
T˛_I¡îp
* 
	$gë_ù
(Ë{  
ù
; }

73 
w_li°_t
<
t˛_thªad_t
, 
queue_ba£d_block_lock_t
> 
thªad¶i°
;

74 
w_lök_t
 
lök
;

76 
	#USE_BARRIER
 1

	)

77 #i‡
USE_BARRIER


78 
±hªad_b¨rõr_t
 
myb¨rõr
;

80 vﬁ©ûê
boﬁ
 
isWaôög
;

81 vﬁ©ûê
boﬁ
 
ˇnPro˚ed
;

82 vﬁ©ûê
boﬁ
 
hasExôed
;

83 
±hªad_c⁄d_t
 
quõs˚d
;

84 
±hªad_c⁄d_t
 
¥o˚ed
;

85 
±hªad_muãx_t
 
lock
;

89 
	`sync_Ÿhî
(
id
);

90 
	`sync_Ÿhîs
(
n
, 
id
[]);

91 
	`sync_thªads
(
n
, 
t˛_thªad_t
 *[]);

92 
	`joö
(
id
);

93 
w_rc_t
 
	$joö
(Ë{  
this
->
smthªad_t
::
	`joö
(); 
	}
}

95 
sync
();

96 
«med_sync
(
b¨rõr_t
 *
b
);

102 * 
	göãr_thªad_comm_buf„r
;

104 
	g¥Ÿe˘ed
:

105 
vútuÆ
 
run
();

107 
	g¥Ÿe˘ed
:

108 c⁄° * 
lib_dú
;

109 c⁄° * 
	grcfûe
;

110 * 
	g¨gs
;

111 
	gac
;

112 
T˛_I¡îp
* 
	gù
;

113 
boﬁ
 
	gis_maö_thªad
;

114 
T˛_DSåög
 * 
	g∑ª¡_v¨s
;

115 
T˛_DSåög
 * 
	g∑ª¡_¥ocs
;

116 
t˛_thªad_t
 *
föd
(
id
);

117 
	gpublic
:

118 
queue_ba£d_block_lock_t
 
thªad_muãx
;

124 
	gthªad_cou¡
;

125 
	gthªad_f‹ked
;

126 
	gthªad_joöed
;

127 
	gpublic
:

128 
boﬁ
 
Ælow_ªmŸe_comm™d
;

130 
	g¥iv©e
:

131 
t˛_thªad_t
(constÅcl_thread_t&);

132 
	gt˛_thªad_t
& 
	g›î©‹
=(c⁄° 
t˛_thªad_t
&);

133 
£t_¨gs
(
TCL_AV
 * 
av
[]);

135 
öôülize
();

136 
unöôülize
();

139 
gøb_¥ocs
(
T˛_I¡îp
* 
pù
, 
T˛_DSåög
 *
buf
);

140 
gøb_v¨s
(
T˛_I¡îp
* 
pù
, 
T˛_DSåög
 *
buf
);

143 
	gw_li°_i
<
	tt˛_thªad_t
, 
	tqueue_ba£d_block_lock_t
> 
	tt˛_thªad_t_li°_i
;

145 
num_t˛_thªads_âl
;

	@src/sm/smsh/tcl_workaround.h

1 #i‚de‡
TCL_WORKAROUND_H


2 
	#TCL_WORKAROUND_H


	)

4 
	~"w_deföes.h
"

42 
	#W_TCL_VER
(
maj‹
,
mö‹
Ë((maj‹ << 16Ë+ (mö‹))

	)

44 
	#W_THIS_TCL_VER
 
	`W_TCL_VER
(
TCL_MAJOR_VERSION
, 
TCL_MINOR_VERSION
)

	)

48 
	#_TCL_CVBUG
 (*)

	)

50 #i‡
W_THIS_TCL_VER
 >
W_TCL_VER
(8,4)

51 
	#TCL_CVBUG


	)

52 
	#TCL_AV
 c⁄°

	)

53 
	#TCL_AV1


	)

54 
	#TCL_SETV2


	)

55 
	#TCL_SETRES
 
_TCL_CVBUG


	)

56 
	#TCL_SLIST
 c⁄°

	)

57 
	#TCL_GETX
 c⁄°

	)

59 
	#TCL_CVBUG
 
_TCL_CVBUG


	)

60 
	#TCL_AV


	)

61 
	#TCL_AV1
 
TCL_CVBUG


	)

62 
	#TCL_SETV2
 
TCL_CVBUG


	)

63 
	#TCL_SETRES
 
TCL_CVBUG


	)

64 
	#TCL_SLIST


	)

65 
	#TCL_GETX


	)

	@src/sm/smstats.cpp

30 
	~"w_deföes.h
"

34 
	~"sm_öt_0.h
"

35 
	~"bf.h
"

38 
	~"sm°©s.h
"

39 
	~"sm_°©s_t_öc_gí.˝p
"

40 
	~"sm_°©s_t_dec_gí.˝p
"

41 
	~"sm_°©s_t_out_gí.˝p
"

42 
	~"bf_hèb_°©s_t_öc_gí.˝p
"

43 
	~"bf_hèb_°©s_t_dec_gí.˝p
"

44 
	~"bf_hèb_°©s_t_out_gí.˝p
"

47 c⁄° *
	gsm_°©s_t
 ::
°©_«mes
[] = {

48 
	~"bf_hèb_°©s_t_msg_gí.h
"

49 
	~"sm_°©s_t_msg_gí.h
"

53 
	gbf_hèb_°©s_t
::
	$compuã
()

57 
smÀvñ_0
::
bf
->
	`hèb_°©s
(*
this
);

59 
w_ba£_t
::
ba£_Êﬂt_t
 *
avg
 = &
bf_hèb_ö£π_avg_åõs
;

60 
w_ba£_t
::
ba£_°©_t
 *
a
 = &
bf_hèb_ö£πi⁄s
;

61 
w_ba£_t
::
ba£_°©_t
 *
b
 = &
bf_hèb_¶Ÿs_åõd
;

62 if(*
a
 > 0) {

63 *
avg
 = *
b
 /(
w_ba£_t
::
ba£_Êﬂt_t
Ë(*
a
);

65 *
avg
 = 0.0;

69 
w_ba£_t
::
ba£_Êﬂt_t
 *
avg
 = &
bf_hèb_lookup_avg_¥obes
;

70 
w_ba£_t
::
ba£_°©_t
 *
a
 = &
bf_hèb_lookups
;

71 
w_ba£_t
::
ba£_°©_t
 *
b
 = &
bf_hèb_¥obes
;

72 if(*
a
 > 0) {

73 *
avg
 = *
b
 /(
w_ba£_t
::
ba£_Êﬂt_t
Ë(*
a
);

75 *
avg
 = 0.0;

78 
	}
}

80 
	gsm_°©s_t
::
	$compuã
()

82 if(
√ed_vﬁ_lock_r
 > 0) {

83 
x
 = (
awaô_vﬁ_lock_r
);

84 
x
 *= 100;

85 
x
 /(
√ed_vﬁ_lock_r
);

86 
awaô_vﬁ_lock_r_p˘
 = 
w_ba£_t
::
	`ba£_°©_t
(
x
);

89 if(
√ed_vﬁ_lock_w
 > 0) {

90 
y
 = (
awaô_vﬁ_lock_w
);

91 
y
 *= 100;

92 
y
 /(
√ed_vﬁ_lock_w
);

93 
awaô_vﬁ_lock_w_p˘
 = 
w_ba£_t
::
	`ba£_°©_t
(
y
);

96 
	}
}

98 
	gsm_°©s_öfo_t
 &
	g›î©‹
+=(
sm_°©s_öfo_t
 &
s
, c⁄° sm_°©s_öfo_à&
	gt
)

100 
	gs
.
	gsm
 +
t
.
sm
;

101  
	gs
;

104 
	gsm_°©s_öfo_t
 &
	g›î©‹
-=(
sm_°©s_öfo_t
 &
s
, c⁄° sm_°©s_öfo_à&
	gt
)

106 
	gs
.
	gsm
 -
t
.
sm
;

107  
	gs
;

111 
	gsm_°©s_öfo_t
 &
	g›î©‹
-=(
sm_°©s_öfo_t
 &
s
, c⁄° sm_°©s_öfo_à&
	gt
);

117 
«me•a˚
 
	gloˇl_ns
 {

118 
sm_°©s_öfo_t
 
	g_globÆ_°©s_
;

119 
queue_ba£d_block_lock_t
 
	g_globÆ_°©s_muãx
;

122 
	gsmÀvñ_0
::
	$add_to_globÆ_°©s
(c⁄° 
sm_°©s_öfo_t
 &
‰om
)

124 
	`CRITICAL_SECTION
(
cs
, 
loˇl_ns
::
_globÆ_°©s_muãx
);

125 
loˇl_ns
::
_globÆ_°©s_
 +
‰om
;

126 
	}
}

128 
	gsmÀvñ_0
::
	$add_‰om_globÆ_°©s
(
sm_°©s_öfo_t
 &
to
)

130 
	`CRITICAL_SECTION
(
cs
, 
loˇl_ns
::
_globÆ_°©s_muãx
);

131 
to
 +
loˇl_ns
::
_globÆ_°©s_
;

132 
	}
}

	@src/sm/smstats.h

30 #i‚de‡
SMSTATS_H


31 
	#SMSTATS_H


	)

33 
	~"w_deföes.h
"

126 ˛as†
	csm_°©s_t
 {

127 
	mpublic
:

128 
compuã
();

129 
	~"sm_°©s_t_°ru˘_gí.h
"

139 ˛as†
	cbf_hèb_°©s_t
 {

140 
	mpublic
:

141 
compuã
();

142 
	~"bf_hèb_°©s_t_°ru˘_gí.h
"

154 ˛as†
	csm_°©s_öfo_t
 {

155 
	mpublic
:

156 
bf_hèb_°©s_t
 
bfht
;

157 
sm_°©s_t
 
	msm
;

158 
	$compuã
() {

159 
bfht
.
	`compuã
();

160 
sm
.
	`compuã
();

162 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
sm_°©s_öfo_t
& 
s
);

163 
	$sm_°©s_öfo_t
() {

164 
	`mem£t
(
this
, '\0',  (*this));

165 
	}
}

168 
sm_°©s_öfo_t
 &
›î©‹
+=(sm_°©s_öfo_à&
s
, c⁄° sm_°©s_öfo_à&
t
);

169 
sm_°©s_öfo_t
 &
›î©‹
-=(sm_°©s_öfo_à&
s
, c⁄° sm_°©s_öfo_à&
t
);

179 
	ssm_c⁄fig_öfo_t
 {

184 
u_l⁄g
 
	m∑ge_size
;

186 
u_l⁄g
 
	mmax_smÆl_ªc
;

190 
u_l⁄g
 
	mlg_ªc_∑ge_•a˚
;

192 
u_l⁄g
 
	mbuf„r_poﬁ_size
;

195 
u_l⁄g
 
	mmax_båì_íåy_size
;

197 
u_l⁄g
 
	mexts_⁄_∑ge
;

201 
u_l⁄g
 
	m∑ges_≥r_ext
;

207 
boﬁ
 
	mmu…i_thªaded_x˘
;

214 
boﬁ
 
	mloggög
;

216 
‰õnd
 
	mo°ªam
& 
	m›î©‹
<<(o°ªam&, c⁄° 
	msm_c⁄fig_öfo_t
& 
	ms
);

	@src/sm/smthread.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SMTHREAD_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


63 
	~<sm_öt_1.h
>

66 
	~<w_°r°ªam.h
>

68 #i‡
W_DEBUG_LEVEL
 > 1

69 "C" 
°›hîe
();

70 
	$°›hîe
()

72 
	}
}

73 
	#CHECKRCUNCHECKED
(
x
Ëif((x).
	`is_unchecked
()Ë{ 
	`°›hîe
(); }

	)

75 
	#CHECKRCUNCHECKED
(
x
)

	)

78 
	gSmthªadFunc
::~
	$SmthªadFunc
()

80 
	}
}

88 
©omic_thªad_m≠_t
 
Æl_fögî¥öts
;

91 
	$˛ór_Æl_fögî¥öts
()

96 
smthªad_t
::
	`öô_fögî¥öt_m≠
() ;

97 
	}
}

102 
smthªad_t
::
tcb_t
::
	$¸óã_TL_°©s
() {

103 
_TL_°©s
 = 
√w
 
sm_°©s_öfo_t
;

105 
	`˛ór_TL_°©s
();

106 
	}
}

111 
smthªad_t
::
tcb_t
::
	$de°roy_TL_°©s
() {

112 if(
_TL_°©s
) {

114 
smÀvñ_0
::
	`add_to_globÆ_°©s
(
	`TL_°©s
());

115 
dñëe
 
_TL_°©s
;

116 
_TL_°©s
 = 
NULL
;

118 
	}
}

120 c⁄° 
uöt4_t
 
eERRMIN
 = 
smÀvñ_0
::eERRMIN;

121 c⁄° 
uöt4_t
 
	geERRMAX
 = 
smÀvñ_0
::
eERRMAX
;

123 
smthªad_öô_t
 
	gsmthªad_öô
;

125 
	gsmthªad_öô_t
::
cou¡
 = 0;

129 
	gsmthªad_öô_t
::
	$smthªad_öô_t
()

131 
	}
}

138 
smthªad_öô_t
::~
	$smthªad_öô_t
()

140 
	}
}

179 
smthªad_t
::
	$no_x˘
(
x˘_t
 *
x
)

181 
	`w_as£π3
(
x
);

182 
	`w_as£π3
(
x
 =
	`tcb
().
x˘
 ||Åcb().x˘==
NULL
);

189 if(
	`tcb
().
x˘
 =
x
 && x->
	`is_ö°rumíãd
())

194 
sm_°©s_öfo_t
 &
s
 = 
x
->
	`°©s_ªf
();

204 
s
 +
	`TL_°©s
();

210 
	`tcb
().
	`˛ór_TL_°©s
();

214 
	`DBG
(<<"no_x˘: id=" << 
	`me
()->
id
);

215 
x
->
	`°ash
(

216 
	`tcb
().
_lock_hõørchy
,

217 
	`tcb
().
_sdesc_ˇche
,

218 
	`tcb
().
_x˘_log
);

219 
	}
}

222 
	gsmthªad_t
::
tcb_t
::
	$˛ór_TL_°©s
()

225 
smÀvñ_0
::
	`add_to_globÆ_°©s
(
	`TL_°©s
());

226 
	`mem£t
(&
	`TL_°©s
(),0, (
sm_°©s_öfo_t
));

227 
	}
}

238 
	gsmthªad_t
::
	$add_‰om_TL_°©s
(
sm_°©s_öfo_t
 &
w
) const

240 c⁄° 
sm_°©s_öfo_t
 &
x
 = 
_tcb
.
	`TL_°©s_c⁄°
();

241 
w
 +
x
;

242 
	}
}

248 
	gsmthªad_t
::
	$√w_x˘
(
x˘_t
 *
x
)

250 
	`w_as£π1
(
x
);

255 
	`DBG
(<<"√w_x˘: id=" << 
	`me
()->
id
);

256 
x
->
	`°ól
(

257 
	`tcb
().
_lock_hõørchy
,

258 
	`tcb
().
_sdesc_ˇche
,

259 
	`tcb
().
_x˘_log
);

260 
	}
}

264 
	gsmthªad_t
::
	$Æloc_sdesc_ˇche
()

266 
	`tcb
().
_sdesc_ˇche
 = 
x˘_t
::
	`√w_sdesc_ˇche_t
();

267 
	}
}

269 
	gsmthªad_t
::
	$‰ì_sdesc_ˇche
()

271 
x˘_t
::
	`dñëe_sdesc_ˇche_t
(
	`tcb
().
_sdesc_ˇche
);

272 
	`tcb
().
_sdesc_ˇche
 = 0;

273 
	}
}

282 
	gsmthªad_t
::
	$smthªad_t
(

283 
°_¥oc_t
* 
f
,

284 * 
¨g
,

285 
¥i‹ôy_t
 
¥i‹ôy
,

286 c⁄° * 
«me
,

287 
timeout_ö_ms
 
lockto
,

288 
°ack_size
)

289 : 
	`°hªad_t
(
¥i‹ôy
, 
«me
, 
°ack_size
),

290 
	`_¥oc
(
f
),

291 
	`_¨g
(
¨g
),

292 
	$_gí_log_w¨nögs
(
åue
)

296 
u£r
 = (*)&
smthªad_öô
;

298 
	`lock_timeout
(
lockto
);

299 if(
lockto
 > 
WAIT_NOT_USED
Ë
	`_öôülize_fögî¥öt
();

300 
	}
}

305 
	gsmthªad_t
::
	$smthªad_t
(

306 
¥i‹ôy_t
 
¥i‹ôy
,

307 c⁄° * 
«me
,

308 
timeout_ö_ms
 
lockto
,

309 
°ack_size


311 : 
	`°hªad_t
(
¥i‹ôy
, 
«me
, 
°ack_size
),

312 
	`_¥oc
(0),

313 
	`_¨g
(0),

314 
	$_gí_log_w¨nögs
(
åue
)

318 
u£r
 =(*Ë&
smthªad_öô
;

319 
	`lock_timeout
(
lockto
);

320 if(
lockto
 > 
WAIT_NOT_USED
Ë
	`_öôülize_fögî¥öt
();

321 
	}
}

323 
	gsmthªad_t
::
	$_öôülize_fögî¥öt
()

325 #i‡
DEBUG_FINGERPRINTS


326 
åõs
=0;

327 c⁄° 
åylimô
 = 50;

328 
boﬁ
 
bad
=
åue
;

329  (
bad
 = 
	`_åy_öôülize_fögî¥öt
()) )

331 
	`_unöôülize_fögî¥öt
();

332 if(++
åõs
 > 
åylimô
) {

333 
	`Ârötf
(
°dîr
,

335 
åõs
, 
Æl_fögî¥öts
.
	`num_bôs_£t
(),áŒ_fögî¥öts.
	`num_bôs
());

339 if(
Æl_fögî¥öts
.
	`is_fuŒ
()) {

340 
	`Ârötf
(
°dîr
,

343 
	`W_FATAL
(
smÀvñ_0
::
eTHREADMAPFULL
);

347 (Ë
	`_åy_öôülize_fögî¥öt
();

349 
	}
}

352 
boﬁ
 
	gsmthªad_t
::
	$_åy_öôülize_fögî¥öt
()

360  
i
=0; i < 
FINGER_BITS
; i++) {

361 
ªåy
:

362 
rvÆ
 = 
	`∫g
()->
	`øndn
(
©omic_thªad_m≠_t
::
BITS
);

363 
j
=0; j < 
i
; j++) {

364 if(
rvÆ
 =
_fögî¥öt
[
j
])

365 
ªåy
;

367 
_fögî¥öt
[
i
] = 
rvÆ
;

371 
i
=0; i < 
FINGER_BITS
; i++) {

372 
_fögî¥öt_m≠
.
	`£t_bô
(
_fögî¥öt
[
i
]);

375 #i‚de‡
PROHIBIT_FALSE_POSITIVES


376  
Ál£
;

390 
Æl_fögî¥öts
.
	`lock_f‹_wrôe
();

391 
©omic_thªad_m≠_t
 
_tmp
;

392 
boﬁ
 
fú°_time
 = 
Æl_fögî¥öts
.
	`is_em±y
();

394 
m©ches
 = 
_fögî¥öt_m≠
.
	`w‹ds_ovîœp
(
_tmp
, 
Æl_fögî¥öts
);

395 
boﬁ
 
n⁄unique
 = (
m©ches
 =
_fögî¥öt_m≠
.
	`num_w‹ds
());

396 
boﬁ
 
Áûuª
 = (
n⁄unique
 && !
fú°_time
);

398 if(!
Áûuª
) {

399 
Æl_fögî¥öts
.
	`c›y
(
_tmp
);

401 
Æl_fögî¥öts
.
	`u∆ock_wrôî
();

403 if(
Áûuª
) {

405 
this
->
_tcb
.
_TL_°©s
->
sm
.
n⁄unique_fögî¥öts
++;

411 
this
->
_tcb
.
_TL_°©s
->
sm
.
unique_fögî¥öts
++;

414 
	#DEBUG_DEADLOCK
 0

	)

415 #i‡
DEBUG_DEADLOCK


417 
a
=
_fögî¥öt
[0];

418 
b
=
_fögî¥öt
[1];

419 
c
=
_fögî¥öt
[2];

421 
w_o°r°ªam
 
s
;

423 
s
 << "all_fingerprints " ;

424 
Æl_fögî¥öts
.
	`¥öt
(
s
);

425 
s
 << 
ídl
;

427 
s
 << "num_bôs_£à" << 
Æl_fögî¥öts
.
	`num_bôs_£t
(Ë<< 
ídl
;

429 if(
Æl_fögî¥öts
.
	`is_fuŒ
()) {

430 
s
 << " FULL! " << 
ídl
;

432 
s


433 << "m©ches=" << 
m©ches


434 << "Çum_w‹ds()=" << 
Æl_fögî¥öts
.
	`num_w‹ds
()

435 << "Ç⁄unique=" << 
n⁄unique


436 << " fú°_time=" << 
fú°_time


437 << " faûuª=" << 
Áûuª
 << 
ídl
;

439 
s
 << "_fingerprint_map " ;

440 
_fögî¥öt_m≠
.
	`¥öt
(
s
) ;

441 
s
 << 
ídl
;

443 
	`Ârötf
(
°dîr
,

444 "%†------ fögî¥öà%d.%d.%d\n", 
s
.
	`c_°r
(), 
a
,
b
,
c
);

448  
Áûuª
;

450 
	}
}

453 
	gsmthªad_t
::
	$öô_fögî¥öt_m≠
()

455 
Æl_fögî¥öts
.
	`lock_f‹_wrôe
();

456 
Æl_fögî¥öts
.
	`˛ór
();

457 
Æl_fögî¥öts
.
	`u∆ock_wrôî
();

458 
	}
}

459 
	gsmthªad_t
::
	$_unöôülize_fögî¥öt
()

461 
_fögî¥öt_m≠
.
	`˛ór
();

462 
	}
}

471 
w_rc_t


472 
	gsmthªad_t
::
	$joö
(
timeout_ö_ms
 
timeout
)

474 
w_rc_t
 
rc
 = 
this
->
°hªad_t
::
	`joö
(
timeout
);

476 if(
	`tcb
().
x˘
 !
NULL
) {

477  
	`RC
(
smÀvñ_0
::
eINTRANS
);

479 if(
	`tcb
().
pö_cou¡
 != 0)

481  
	`RC
(
smÀvñ_0
::
ePINACTIVE
);

483 
x˘_t
::
	`dñëe_lock_hõørchy
(
	`tcb
().
_lock_hõørchy
);

484 if–
	`tcb
().
_sdesc_ˇche
 != 0 ) {

485 
	`Ârötf
(
°dîr
, "non-null _sdesc_cache on join\n");

486  
	`RC
(
smÀvñ_0
::
eINTRANS
);

488 
x˘_t
::
	`dñëe_x˘_log_t
(
	`tcb
().
_x˘_log
);

490  
rc
;

491 
	}
}

500 
	gsmthªad_t
::~
	$smthªad_t
()

502 
u£r
 = 
NULL
;

504 if(
	`lock_timeout
(Ë> 
WAIT_NOT_USED
) {

505 
	`_unöôülize_fögî¥öt
();

507 
	`w_as£π2
–
	`tcb
().
x˘
 =
NULL
);;

508 
	`w_as£π2
–
	`tcb
().
pö_cou¡
 == 0);

509 
	`w_as£π2
–
	`tcb
().
_lock_hõørchy
 == 0 );

510 
	`w_as£π2
–
	`tcb
().
_sdesc_ˇche
 == 0 );

511 
	`w_as£π2
–
	`tcb
().
_x˘_log
 == 0 );

512 
	}
}

514 
	gsmthªad_t
::
	$¥ï¨e_to_block
()

516 
_unblocked
 = 
Ál£
;

517 
	}
}

525 
	gw_rc_t
::
îrcode_t
 
smthªad_t
::
_smthªad_block
(

526 
timeout_ö_ms
 
timeout
,

527 c⁄° * c⁄° 
	$W_IFDEBUG9
(
block«me
))

529 
_waôög
 = 
åue
;

531 
w_rc_t
::
îrcode_t
 
rvÆ
 = 
°hªad_t
::
	`block
(
timeout
);

532 
_waôög
 = 
Ál£
;

533  
rvÆ
;

534 
	}
}

536 
w_rc_t
 
	gsmthªad_t
::
	$_smthªad_unblock
(
w_rc_t
::
îrcode_t
 
e
)

539 
	`w_as£π1
(
	`me
(Ë!
this
);

542 if(!
_waôög
) {

543  
	`RC
(
smÀvñ_0
::
eNOTBLOCKED
);

546  
this
->
°hªad_t
::
	`unblock
(
e
);

547 
	}
}

551 
	gw_rc_t
::
îrcode_t
 
smthªad_t
::
	$smthªad_block
(
timeout_ö_ms
 
timeout
,

552 c⁄° * c⁄° 
ˇŒî
,

555  
	`_smthªad_block
(
timeout
, 
ˇŒî
);

556 
	}
}

558 
w_rc_t
 
	gsmthªad_t
::
	$smthªad_unblock
(
w_rc_t
::
îrcode_t
 
e
)

560  
	`_smthªad_unblock
(
e
);

561 
	}
}

564 
	gsmthªad_t
::
	$bef‹e_run
() {

565 
°hªad_t
::
	`bef‹e_run
();

566 
œtch_t
::
	`⁄_thªad_öô
(
this
);

567 
	}
}

568 
	gsmthªad_t
::
	$a·î_run
() {

569 
œtch_t
::
	`⁄_thªad_de°roy
(
this
);

570 
°hªad_t
::
	`a·î_run
();

571 
	}
}

573 
smthªad_t
*

574 
	gsmthªad_t
::
	$dy«mic_ˇ°_to_smthªad
()

576 if(
u£r
 =(*)&
smthªad_öô
Ë 
this
;

577  
NULL
;

578 
	}
}

581 c⁄° 
smthªad_t
*

582 
	gsmthªad_t
::
	$dy«mic_ˇ°_to_c⁄°_smthªad
() const

584 if(
u£r
 =(*)&
smthªad_öô
Ë 
this
;

585  
NULL
;

586 
	}
}

589 ˛as†
	cSñe˘SmthªadsFunc
 : 
public
 
ThªadFunc


591 
public
:

592 
	$Sñe˘SmthªadsFunc
(
SmthªadFunc
& 
func
Ë: 
	$f
(
func
) {};

593 
	$›î©‹
()(c⁄° 
°hªad_t
& 
thªad
) {

594 i‡(c⁄° 
smthªad_t
* 
smthªad
 = 
thªad
.
	`dy«mic_ˇ°_to_c⁄°_smthªad
())

596 
	`f
(*
smthªad
);

598 
	}
}

599 
	g¥iv©e
:

600 
SmthªadFunc
& 
f
;

604 
	gsmthªad_t
::
	$f‹_óch_smthªad
(
SmthªadFunc
& 
f
)

607 
Sñe˘SmthªadsFunc
 
	`g
(
f
);

608 
	`f‹_óch_thªad
(
g
);

609 
	}
}

613 
	gsmthªad_t
::
	$©èch_x˘
(
x˘_t
* 
x
)

618 if(
	`tcb
().
x˘
 !
NULL
) {

619 
	`W_FATAL
(
smÀvñ_0
::
eTWOTRANS
);

622 
	`tcb
().
x˘
 = 
x
;

623 
x
->
	`©èch_thªad
();

626 
	}
}

630 
	gsmthªad_t
::
	$dëach_x˘
(
x˘_t
* 
x
)

635 if(
	`tcb
().
x˘
 =
NULL
) {

636 
	`W_FATAL
(
smÀvñ_0
::
eNOTRANS
);

639 
	`DBGTHRD
(<<"detach: ");

644 
x
->
	`dëach_thªad
();

645 
	`tcb
().
x˘
 = 
NULL
;

646 
	}
}

649 
	gsmthªad_t
::
	$_dump
(
o°ªam
 &
o
) const

651 
°hªad_t
 *
t
 = (°hªad_à*)
this
;

652 
t
->
°hªad_t
::
	`_dump
(
o
);

654 
o
 << "smthªad_t: " << (*)(
	`is_ö_sm
()?"in sm ":"");

655 if(
	`tcb
().
x˘
) {

656 
o
 << "x˘ " << 
	`tcb
().
x˘
->
	`tid
(Ë<< 
ídl
;

662 
o
 << 
ídl
;

663 
	}
}

667 ˛as†
	cPrötBlockedThªad
 : 
public
 
ThªadFunc


669 
public
:

670 
	$PrötBlockedThªad
(
o°ªam
& 
o
Ë: 
	$out
(
o
) {};

671 ~
	$PrötBlockedThªad
(Ë{
	}
};

672 
	$›î©‹
()(c⁄° 
°hªad_t
& 
thªad
)

674 i‡(
thªad
.
	`°©us
(Ë=
°hªad_t
::
t_blocked
) {

675 
out
 << "*******" << 
ídl
;

676 
thªad
.
	`_dump
(
out
);

678 
	}
};

679 
	g¥iv©e
:

680 
o°ªam
& 
out
;

684 
	$DumpBlockedThªads
(
o°ªam
& 
o
)

686 
PrötBlockedThªad
 
	`f
(
o
);

687 
°hªad_t
::
	`f‹_óch_thªad
(
f
);

688 
	}
}

	@src/sm/smthread.h

53 #i‚de‡
SMTHREAD_H


54 
	#SMTHREAD_H


	)

56 
	~"w_deföes.h
"

64 #i‚de‡
W_H


65 
	~<w.h
>

67 #i‚de‡
SM_BASE_H


68 
	~<sm_ba£.h
>

70 #i‚de‡
STHREAD_H


71 
	~<°hªad.h
>

73 
	~<w_bôve˘‹.h
>

85 
	e•ecül_timeout_ö_ms_t
 {

86 
	mWAIT_FOREVER
 = 
°hªad_t
::
WAIT_FOREVER
,

87 
	mWAIT_IMMEDIATE
 = 
°hªad_t
::
WAIT_IMMEDIATE
,

88 
	mWAIT_SPECIFIED_BY_XCT
 = 
°hªad_t
::
WAIT_SPECIFIED_BY_XCT
,

89 
	mWAIT_SPECIFIED_BY_THREAD
 = 
°hªad_t
::
WAIT_SPECIFIED_BY_THREAD


92 
	g°hªad_t
::
	ttimeout_ö_ms
Åimeout_in_ms;

94 
˛ass
 
	gx˘_t
;

95 
˛ass
 
	gx˘_log_t
;

96 
˛ass
 
	gsdesc_ˇche_t
;

97 
˛ass
 
	glockid_t
;

99 #ifde‡
__GNUG__


100 #¥agm®
öãrÁ˚


103 
˛ass
 
	gsmthªad_t
;

109 ˛as†
	cSmthªadFunc
 {

110 
	mpublic
:

111 
vútuÆ
 ~
SmthªadFunc
();

113 
vútuÆ
 
	$›î©‹
()(c⁄° 
smthªad_t
& 
smthªad
) = 0;

118 íum { 
FINGER_BITS
=3 };

119 
w_bôve˘‹_t
<256> 
	tsm_thªad_m≠_t
;

138 ˛as†
	c©omic_thªad_m≠_t
 : 
public
 
sm_thªad_m≠_t
 {

139 
¥iv©e
:

140 
muèbÀ
 
§wlock_t
 
_m≠_lock
;

141 
public
:

142 
boﬁ
 
	$has_ªadî
() const {

143  
_m≠_lock
.
	`has_ªadî
();

145 
boﬁ
 
	$has_wrôî
() const {

146  
_m≠_lock
.
	`has_wrôî
();

147 
	}
}

148 
	$lock_f‹_ªad
() const {

149 
_m≠_lock
.
	`acquúe_ªad
();

150 
	}
}

151 
	$lock_f‹_wrôe
() {

152 
_m≠_lock
.
	`acquúe_wrôe
();

153 
	}
}

154 
	$u∆ock_ªadî
() const{

155 
	`w_as£π2
(
_m≠_lock
.
	`has_ªadî
());

156 
_m≠_lock
.
	`ªÀa£_ªad
();

157 
	}
}

158 
	$u∆ock_wrôî
() {

159 
	`w_as£π2
(
_m≠_lock
.
	`has_wrôî
());

160 
_m≠_lock
.
	`ªÀa£_wrôe
();

161 
	}
}

162 
	$©omic_thªad_m≠_t
 () {

163 
	`w_as£π1
(
_m≠_lock
.
	`has_ªadî
(Ë=
Ál£
);

164 
	`w_as£π1
(
_m≠_lock
.
	`has_wrôî
(Ë=
Ál£
);

165 
	}
}

166 ~
	$©omic_thªad_m≠_t
 () {

167 
	`w_as£π1
(
_m≠_lock
.
	`has_ªadî
(Ë=
Ál£
);

168 
	`w_as£π1
(
_m≠_lock
.
	`has_wrôî
(Ë=
Ál£
);

169 
	}
}

171 
	g©omic_thªad_m≠_t
 &
	g›î©‹
=(c⁄° 
©omic_thªad_m≠_t
 &
Ÿhî
) {

174 #i‡
W_DEBUG_LEVEL
 > 0

175 
boﬁ
 
X
=
_m≠_lock
.
has_ªadî
();

176 
boﬁ
 
	gY
=
_m≠_lock
.
has_wrôî
();

178 
c›y
(
Ÿhî
);

179 #i‡
W_DEBUG_LEVEL
 > 0

180 
w_as£π1
(
_m≠_lock
.
has_ªadî
(Ë=
X
);

181 
w_as£π1
(
_m≠_lock
.
has_wrôî
(Ë=
Y
);

183  *
	gthis
;

189 
	t°_¥oc_t
(*);

191 
˛ass
 
	gsm_°©s_öfo_t
;

218 ˛as†
	csmthªad_t
 : 
public
 
°hªad_t
 {

219 
‰õnd
 
˛ass
 
smthªad_öô_t
;

220 
	stcb_t
 {

221 
x˘_t
* 
	mx˘
;

222 
	mpö_cou¡
;

223 
	m¥ev_pö_cou¡
;

224 
timeout_ö_ms
 
	mlock_timeout
;

225 
boﬁ
 
	m_ö_sm
;

226 #ifde‡
ARCH_LP64


230 
fûl1
 
	m_fûl1
;

231 
fûl2
 
	m_fûl2
;

234 
sdesc_ˇche_t
 *
	m_sdesc_ˇche
;

235 
lockid_t
 *
	m_lock_hõørchy
;

236 
x˘_log_t
* 
	m_x˘_log
;

237 
sm_°©s_öfo_t
* 
	m_TL_°©s
;

240 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_me1
;

242 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_me2
;

244 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_me3
;

250 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_1thªad_x˘_me
;

255 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_1thªad_log_me
;

260 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_x˘_t_me_node
;

265 
	mqueue_ba£d_lock_t
::
ext_qnode
 
_xli°_muãx_node
;

270 
	mqueue_ba£d_block_lock_t
::
ext_qnode
 
_log_me_node
;

275 
uöt4_t
 
	t‹döÆ_numbî_t
;

276 
‹döÆ_numbî_t
 
	m__‹döÆ
;

280 
	m__më¨ecs
;

281 
	m__më¨ecs_ö
;

287 
	m_kc_buf_doubÀ
[
smÀvñ_0
::
∑ge_sz
/()];

288 
cvec_t
 
	m_kc_vec
;

290 
	m_∑ge_check_m≠
[
SM_PAGESIZE
];

292 
	m_kc_buf_doubÀ_d
[
smÀvñ_0
::
∑ge_sz
/()];

293 
cvec_t
 
	m_kc_vec_d
;

296 
¸óã_TL_°©s
();

297 
˛ór_TL_°©s
();

298 
de°roy_TL_°©s
();

299 
ölöe
 
	msm_°©s_öfo_t
& 
TL_°©s
(Ë{  *
	m_TL_°©s
;}

300 
ölöe
 c⁄° 
	msm_°©s_öfo_t
& 
TL_°©s_c⁄°
() const {

301  *
	m_TL_°©s
; }

303 
tcb_t
() :

304 
x˘
(0),

305 
pö_cou¡
(0),

306 
¥ev_pö_cou¡
(0),

307 
lock_timeout
(
WAIT_FOREVER
),

308 
_ö_sm
(
Ál£
),

309 
_sdesc_ˇche
(0),

310 
_lock_hõørchy
(0),

311 
_x˘_log
(0),

312 
_TL_°©s
(0),

313 
__‹döÆ
(0),

314 
__më¨ecs
(0),

315 
__më¨ecs_ö
(0)

317 
	m_me1
.
	m_hñd
 = 
NULL
; ;

318 
	m_me2
.
	m_hñd
 = 
NULL
; ;

319 
	m_me3
.
	m_hñd
 = 
NULL
; ;

321 
	m_1thªad_x˘_me
.
	m_hñd
 = 
NULL
; ;

322 
	m_1thªad_log_me
.
	m_hñd
 = 
NULL
; ;

323 
	m_x˘_t_me_node
.
	m_hñd
 = 
NULL
; ;

324 
	m_xli°_muãx_node
.
	m_hñd
 = 
NULL
; ;

325 
	m_log_me_node
.
	m_hñd
 = 
NULL
; ;

327 
¸óã_TL_°©s
();

329 ~
tcb_t
(Ë{ 
de°roy_TL_°©s
(); }

332 
tcb_t
 
	g_tcb
;

333 
°_¥oc_t
* c⁄° 
	g_¥oc
;

334 * c⁄° 
	g_¨g
;

336 
boﬁ
 
_åy_öôülize_fögî¥öt
();

337 
_öôülize_fögî¥öt
();

338 
_unöôülize_fögî¥öt
();

339 
	g_fögî¥öt
[
FINGER_BITS
];

340 
©omic_thªad_m≠_t
 
	g_fögî¥öt_m≠
;

342 
	gpublic
:

343 c⁄° 
©omic_thªad_m≠_t
& 
	$gë_fögî¥öt_m≠
() const

344 {  
_fögî¥öt_m≠
; 
	}
}

346 
	gpublic
:

359 
NORET
 
smthªad_t
(

360 
°_¥oc_t
* 
f
,

361 * 
¨g
,

362 
¥i‹ôy_t
 
¥i‹ôy
 = 
t_ªguœr
,

363 c⁄° * 
«me
 = 0,

364 
timeout_ö_ms
 
lockto
 = 
WAIT_FOREVER
,

365 
°ack_size
 = 
deÁu…_°ack
);

374 
NORET
 
smthªad_t
(

375 
¥i‹ôy_t
 
¥i‹ôy
 = 
t_ªguœr
,

376 c⁄° * 
«me
 = 0,

377 
timeout_ö_ms
 
lockto
 = 
WAIT_FOREVER
,

378 
°ack_size
 = 
deÁu…_°ack


392 
w_rc_t
 
joö
(
timeout_ö_ms
 
timeout
 = 
WAIT_FOREVER
);

394 
	gNORET
 ~
smthªad_t
();

398 
öô_fögî¥öt_m≠
();

402 
vútuÆ
 
bef‹e_run
();

405 
vútuÆ
 
run
() = 0;

408 
vútuÆ
 
a·î_run
();

410 
vútuÆ
 
smthªad_t
* 
dy«mic_ˇ°_to_smthªad
();

411 
vútuÆ
 c⁄° 
smthªad_t
* 
	$dy«mic_ˇ°_to_c⁄°_smthªad
() const;

418 
	eSmThªadTy≥s
 {
smThªadTy≥
 = 1, 
smLa°ThªadTy≥
};

424 
vútuÆ
 
	$thªad_ty≥
(Ë{  
smThªadTy≥
; 
	}
}

435 
f‹_óch_smthªad
(
SmthªadFunc
& 
f
);

449 
©èch_x˘
(
x˘_t
* 
x
);

461 
dëach_x˘
(
x˘_t
* 
x
);

464 
ölöe


465 
timeout_ö_ms
 
	$lock_timeout
() {

466  
	`tcb
().
lock_timeout
;

467 
	}
}

486 
ölöe


487 
	$lock_timeout
(
timeout_ö_ms
 
i
) {

488 
	`tcb
().
lock_timeout
 = 
i
;

489 
	}
}

492 
ölöe


493 
x˘_t
* 
	$x˘
(Ë{  
	`tcb
().
x˘
; 
	}
}

496 
ölöe


497 
x˘_t
* 
	$x˘
(Ëc⁄° {  
	`tcb
().
x˘
; 
	}
}

503 
smthªad_t
* 
	$me
(Ë{  (
smthªad_t
*Ë
°hªad_t
::
	`me
(); 
	}
}

506 
ölöe
 
	gsm_°©s_öfo_t
& 
	$TL_°©s
() {

507  
	`tcb
().
	`TL_°©s
(); 
	}
}

510 
	$add_‰om_TL_°©s
(
sm_°©s_öfo_t
 &
w
) const;

519 
	#GET_TSTAT
(
x
Ë
	`me
()->
	`TL_°©s
().
sm
.
	)
x

524 
	#INC_TSTAT
(
x
Ë
	`me
()->
	`TL_°©s
().
sm
.x++

	)

530 
	#INC_TSTAT_BFHT
(
x
Ë
	`me
()->
	`TL_°©s
().
bfht
.
bf_hèb
 #x++

	)

535 
	#ADD_TSTAT
(
x
,
y
Ë
	`me
()->
	`TL_°©s
().
sm
.x +(y)

	)

540 
	#SET_TSTAT
(
x
,
y
Ë
	`me
()->
	`TL_°©s
().
sm
.x = (y)

	)

550 
	`m¨k_pö_cou¡
();

551 
	`check_pö_cou¡
(
ch™ge
);

552 
	`check_a˘uÆ_pö_cou¡
(
a˘uÆ
) ;

553 
	`ö¸_pö_cou¡
(
amou¡
) ;

554 
	`pö_cou¡
() ;

560 
ölöe


561 
	$ö_sm
(
boﬁ
 
ö
Ë{ 
	`tcb
().
_ö_sm
 = in; 
	}
}

562 
ölöe


563 
boﬁ
 
	$is_ö_sm
(Ëc⁄° {  
	`tcb
().
_ö_sm
; 
	}
}

565 
√w_x˘
(
x˘_t
 *);

566 
no_x˘
(
x˘_t
 *);

568 
ölöe


569 
x˘_log_t
* 
	$x˘_log
(Ë{  
	`tcb
().
_x˘_log
; 
	}
}

570 
ölöe


571 
lockid_t
 * 
	$lock_hõørchy
(Ë{  
	`tcb
().
_lock_hõørchy
; 
	}
}

573 
ölöe


574 
sdesc_ˇche_t
 * 
	$sdesc_ˇche
(Ë{  
	`tcb
().
_sdesc_ˇche
; 
	}
}

576 
Æloc_sdesc_ˇche
();

577 
‰ì_sdesc_ˇche
();

579 
vútuÆ
 
	$_dump
(
o°ªam
 &) const;

580 
	`cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

581 
vútuÆ
 
	`vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
& 
t
);

582 
	`vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
& 
t
);

591 
w_rc_t
::
îrcode_t
 
	`smthªad_block
(
timeout_ö_ms
 
WAIT_FOREVER
,

592 c⁄° * c⁄° 
ˇŒî
 = 0,

593 c⁄° * 
id
 = 0);

594 
w_rc_t
 
	`smthªad_unblock
(w_rc_t::
îrcode_t
 
e
);

596 
¥iv©e
:

597 
w_rc_t
::
îrcode_t
 
	`_smthªad_block
–
timeout_ö_ms
 
WAIT_FOREVER
,

598 c⁄° * c⁄° 
why
 =0);

599 
w_rc_t
 
	`_smthªad_unblock
(w_rc_t::
îrcode_t
 
e
);

600 
public
:

601 
	`¥ï¨e_to_block
();

605 
boﬁ
 
	$gíî©e_log_w¨nögs
()c⁄°{ 
_gí_log_w¨nögs
;
	}
}

608 
	$£t_gíî©e_log_w¨nögs
(
boﬁ
 
b
){
_gí_log_w¨nögs
=b;
	}
}

612 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_me3
(Ë{  
	`tcb
().
_me3
; 
	}
}

613 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_me2
(Ë{  
	`tcb
().
_me2
; 
	}
}

614 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_me1
(Ë{  
	`tcb
().
_me1
; 
	}
}

615 
	gqueue_ba£d_block_lock_t
::
ext_qnode
& 
	$gë_log_me_node
() {

616  
	`tcb
().
_log_me_node
;
	}
}

617 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_xli°_muãx_node
() {

618  
	`tcb
().
_xli°_muãx_node
;
	}
}

619 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_1thªad_log_me
() {

620  
	`tcb
().
_1thªad_log_me
;
	}
}

621 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_1thªad_x˘_me
() {

622  
	`tcb
().
_1thªad_x˘_me
;
	}
}

623 
	gqueue_ba£d_lock_t
::
ext_qnode
& 
	$gë_x˘_t_me_node
() {

624  
	`tcb
().
_x˘_t_me_node
;
	}
}

625 
	gtcb_t
::
‹döÆ_numbî_t
 & 
	$gë__‹döÆ
(Ë{  
	`tcb
().
__‹döÆ
; 
	}
}

626 & 
	$gë___më¨ecs
() {

627  
	`tcb
().
__më¨ecs
; 
	}
}

628 & 
	$gë___më¨ecs_ö
() {

629  
	`tcb
().
__më¨ecs_ö
; 
	}
}

630 * 
	$gë_kc_buf
(
boﬁ
 
u£_dúbuf
 = 
Ál£
) {

631 if(
u£_dúbuf
) {

632  (*)&(
	`tcb
().
_kc_buf_doubÀ_d
[0]);

634  (*)&(
	`tcb
().
_kc_buf_doubÀ
[0]);

636 
	}
}

637 
cvec_t
* 
	$gë_kc_vec
(
boﬁ
 
u£_dúbuf
 = 
Ál£
) {

638 if(
u£_dúbuf
) {

639  &(
	`tcb
().
_kc_vec_d
);

641  &(
	`tcb
().
_kc_vec
);

643 
	}
}

644 * 
	$gë_∑ge_check_m≠
() {

645  &(
	`tcb
().
_∑ge_check_m≠
[0]); 
	}
}

646 
	g¥iv©e
:

649 vﬁ©ûê
boﬁ
 
_unblocked
;

650 
boﬁ
 
	g_waôög
;

652 
boﬁ
 
	g_gí_log_w¨nögs
;

654 
ölöe


655 
	gtcb_t
 &
	$tcb
(Ë{  
_tcb
; 
	}
}

657 
ölöe


658 c⁄° 
	gtcb_t
 &
	$tcb
(Ëc⁄° {  
_tcb
; 
	}
}

662 ˛as†
	csmthªad_öô_t
 {

663 
	mpublic
:

664 
NORET
 
smthªad_öô_t
();

665 
	mNORET
 ~
smthªad_öô_t
();

666 
	m¥iv©e
:

667 
cou¡
;

675 
ölöe
 
smthªad_t
*

676 
	$me
()

678  
smthªad_t
::
	`me
();

679 
	}
}

682 
ölöe
 
x˘_t
*

683 
	$x˘
()

685  
	`me
()->
	`x˘
();

686 
	}
}

689 
ölöe
 

690 
	gsmthªad_t
::
	$m¨k_pö_cou¡
()

692 
	`tcb
().
¥ev_pö_cou¡
 =Åcb().
pö_cou¡
;

693 
	}
}

695 
ölöe
 

696 
	gsmthªad_t
::
check_pö_cou¡
(
	$W_IFDEBUG4
(
ch™ge
))

698 #i‡
W_DEBUG_LEVEL
 > 3

699 
diff
 = 
	`tcb
().
pö_cou¡
 -Åcb().
¥ev_pö_cou¡
;

700 i‡(
ch™ge
 >= 0) {

701 
	`w_as£π4
(
diff
 <
ch™ge
);

703 
	`w_as£π4
(
diff
 >
ch™ge
);

706 
	}
}

708 
ölöe
 

709 
	gsmthªad_t
::
check_a˘uÆ_pö_cou¡
(
	$W_IFDEBUG3
(
a˘uÆ
))

711 
	`w_as£π3
(
	`tcb
().
pö_cou¡
 =
a˘uÆ
);

712 
	}
}

715 
ölöe
 

716 
	gsmthªad_t
::
	$ö¸_pö_cou¡
(
amou¡
)

718 
	`tcb
().
pö_cou¡
 +
amou¡
;

719 
	}
}

721 
ölöe
 

722 
	gsmthªad_t
::
	$pö_cou¡
()

724  
	`tcb
().
pö_cou¡
;

725 
	}
}

728 
DumpBlockedThªads
(
o°ªam
& 
o
);

733 #ifde‡
DBGTHRD


734 #unde‡
DBGTHRD


736 
	#DBGTHRD
(
¨g
Ë
	`DBG
(<< "Åh." << 
smthªad_t
::
	`me
()->
id
 << " "árg)

	)

737 #ifde‡
W_TRACE


741 #unde‡
FUNC


742 
	#FUNC
(
‚
)\

743 dÿ{ c⁄°* 
‚ame
 = 
__func__
; \

744 
	`DBGTHRD
(<< 
‚ame
);} 0)

	)

	@src/sm/sort.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#SORT_C


	)

60 #ifde‡
__GNUG__


61 #¥agm®
im∂emíèti⁄
 "sort_s.h"

62 #¥agm®
im∂emíèti⁄
 "sort.h"

66 
	~"sm_öt_4.h
"

68 #ifde‡
OLDSORT_COMPATIBILITY


70 
	~"lgªc.h
"

71 
	~"sm.h
"

73 
	gssm_s‹t
::
	tkey_öfo_t
 key_info_t;

74 
	gssm_s‹t
::
	ts‹t_∑rm_t
 sort_parm_t;

75 
	gssm_s‹t
::
	ts‹t_keys_t
 sort_keys_t;

77 #ifde‡
EXPLICIT_TEMPLATE


78 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	göt2_t
>;

79 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	grid_t
>;

80 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	grun_sˇn_t
>;

83 "C" 
boﬁ
 
s‹t_is_ö°rumíãd
();

84 
boﬁ
 
	$s‹t_is_ö°rumíãd
()

86 #ifde‡
INSTRUMENT_SORT


87  
åue
;

89  
Ál£
;

91 
	}
}

92 #ifde‡
INSTRUMENT_SORT


94 
	#INC_TSTAT_SORT
(
x
Ë
	`INC_TSTAT
(x)

	)

95 
	#ADD_TSTAT_SORT
(
x
, 
y
Ë
	`ADD_TSTAT
(x, y)

	)

96 
	#GET_TSTAT_SORT
(
x
Ë
	`GET_TSTAT
(x)

	)

97 
	#SET_TSTAT_SORT
(
x
, 
y
Ë
	`SET_TSTAT
(x, y)

	)

101 
	#INC_TSTAT_SORT
(
x
)

	)

102 
	#ADD_TSTAT_SORT
(
x
, 
y
)

	)

103 
	#GET_TSTAT_SORT
(
x
Ë0

	)

104 
	#SET_TSTAT_SORT
(
x
, 
y
)

	)

108 #ifde‡
INSTRUMENT_SORT


112 
ölöe
 

113 
ªc‹d_mÆloc
(* 
W_IFTRACE
(
p
), 
smsize_t
 
amt
)

115 
ba£_°©_t
 
	ga
 = ba£_°©_t(
amt
);

116 
INC_TSTAT_SORT
(
s‹t_mÆlocs
);

117 
ADD_TSTAT_SORT
(
s‹t_mÆloc_byãs
, ()(
a
));

118 
ADD_TSTAT_SORT
(
s‹t_mÆloc_cuº
, ()(
a
));

119 
ba£_°©_t
 
	gm
 = 
GET_TSTAT_SORT
(
s‹t_mÆloc_max
);

120 if(
	gm
 < 
	ga
Ë{ 
SET_TSTAT_SORT
(
s‹t_mÆloc_max
, ()(
a
)); }

123 
ba£_°©_t
 
	gc
 = 
GET_TSTAT_SORT
(
s‹t_mÆloc_cuº
);

124 
	gm
 = 
GET_TSTAT_SORT
(
s‹t_mÆloc_hiw©
);

125 if(
	gc
 > 
	gm
) {

127 
SET_TSTAT_SORT
(
s‹t_mÆloc_hiw©
, ()(
c
));

129 
DBG
(<<"ªc‹d_mÆlo¯" << 
p
 << " sizê" << 
amt
);

132 
ölöe
 

133 
ªc‹d_‰ì
(* 
W_IFTRACE
(
p
), 
smsize_t
 
amt
)

135 if(
	gamt
) {

137 
ba£_°©_t
 
	gc
 = 
GET_TSTAT_SORT
(
s‹t_mÆloc_cuº
);

138 
	gc
 -
ba£_°©_t
(
amt
);

139 
SET_TSTAT_SORT
(
s‹t_mÆloc_cuº
, ()(
c
));

141 
DBG
(<<"ªc‹d_‰ì " << 
p
 << " sizê" << 
amt
);

146 
ölöe
 

147 
	$ªc‹d_mÆloc
(*, 
smsize_t
 )

149 
	}
}

151 
ölöe
 

152 
	$ªc‹d_‰ì
(*, 
smsize_t
 )

154 
	}
}

161 
	ss‹t_key_t
 {

162 * 
	mvÆ
;

163 * 
	mªc
;

164 
uöt2_t
 
	mkÀn
;

165 
uöt2_t
 
	mæí
;

167 
NORET
 
s‹t_key_t
() {

168 
	mvÆ
 = 
ªc
 = 0;

169 
	mkÀn
 = 
æí
 = 0;

171 
	mNORET
 ~
s‹t_key_t
() {

172 
ªc‹d_‰ì
(
vÆ
, 0);

173 
	mdñëe
[] 
	mvÆ
;

174 
ªc‹d_‰ì
(
ªc
, 0);

175 
	mdñëe
[] 
	mªc
;

180 
	sfûe_s‹t_key_t
 {

181 c⁄° * 
	mvÆ
;

182 c⁄° * 
	mªc
;

183 
uöt2_t
 
	mkÀn
;

184 
uöt2_t
 
	mæí
;

185 * 
	mhdr
;

186 
uöt4_t
 
	mbÀn
;

187 
uöt2_t
 
	mhÀn
;

189 
NORET
 
fûe_s‹t_key_t
() {

190 
	mhdr
 = 0;

191 
	mkÀn
 = 
hÀn
 = 
æí
 = 0;

192 
	mbÀn
 = 0;

193 
	mvÆ
 = 0;

194 
	mªc
 = 0;

196 
	mNORET
 ~
fûe_s‹t_key_t
() {

197 
ªc‹d_‰ì
(
hdr
, 0);

198 
	mdñëe
[] 
	mhdr
;

205 
	ss‹t_desc_t
 {

206 
°id_t
 
	mtmp_fid
;

207 
sdesc_t
* 
	msdesc
;

209 ** 
	mkeys
;

210 ** 
	mfkeys
;

211 
uöt
 
	mªc_cou¡
;

212 
uöt
 
	mmax_ªc_˙t
;

214 
uöt
 
	muniq_cou¡
;

216 
rid_t
* 
	mrun_li°
;

217 
uöt2_t
 
	mmax_li°_sz
;

218 
uöt2_t
 
	mrun_cou¡
;

220 
uöt
 
	mnum_∑ges
;

221 
uöt
 
	mtŸÆ_ªc
;

223 
PFC
 
	mcomp
;

224 
rid_t
 
	mœ°_m¨kî
;

225 
rid_t
 
	mœ°_rid
;

227 
NORET
 
s‹t_desc_t
();

228 
	mNORET
 ~
s‹t_desc_t
();

230 
‰ì_•a˚
() {

231 
uöt
 
	mtŸÆ
 = 
tŸÆ_ªc
 < 
max_ªc_˙t
 ?Åotal_rec : max_rec_cnt;

232 i‡(
	mkeys
) {

233 
uöt
 
	mi
=0; i<
	mtŸÆ
; i++) {

234 
ªc‹d_‰ì
(
keys
[
i
], (
s‹t_key_t
));

235 
dñëe
 ((
s‹t_key_t
*Ë
keys
[
i
]);

237 
ªc‹d_‰ì
(
keys
, 
max_ªc_˙t
*(*));

238 
	mdñëe
 [] 
	mkeys
; key†0; 
	mmax_ªc_˙t
 = 0;

240 i‡(
	mfkeys
) {

241 
uöt
 
	mi
=0; i<
	mtŸÆ
; i++) {

242 
ªc‹d_‰ì
(
fkeys
[
i
], (
fûe_s‹t_key_t
));

243 
dñëe
 ((
fûe_s‹t_key_t
*Ë
fkeys
[
i
]);

245 
ªc‹d_‰ì
(
fkeys
, 
max_ªc_˙t
*(*));

246 
	mdñëe
 [] 
	mfkeys
; fkey†0; 
	mmax_ªc_˙t
 = 0;

248 
	muniq_cou¡
 = 0;

255 
_uöt1_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

256 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

258 
w_as£π9
(
kÀn1
 =
kÀn2
);

259  (* (
	gw_ba£_t
::
uöt1_t
*Ë
kvÆ2
Ë- (* (
w_ba£_t
::uöt1_t*Ë
kvÆ1
);

263 
_uöt2_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

264 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

266 
w_as£π9
(
kÀn1
 =
kÀn2
);

267  (* (
	gw_ba£_t
::
uöt2_t
*Ë
kvÆ2
Ë- (* (
w_ba£_t
::uöt2_t*Ë
kvÆ1
);

271 
_uöt4_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

272 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

274 
w_as£π9
(
kÀn1
 =
kÀn2
);

276 
boﬁ
 
	gªt
 = (* (
w_ba£_t
::
uöt4_t
*Ë
kvÆ2
Ë< (* (w_ba£_t::uöt4_t*Ë
kvÆ1
);

277  
	gªt
? -1 :

278 ((* (
w_ba£_t
::
uöt4_t
*Ë
kvÆ2
Ë=(* (w_ba£_t::uöt4_t*Ë
kvÆ1
))? 0:

283 
_öt1_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

284 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

286 
w_as£π9
(
kÀn1
 =
kÀn2
);

287  (* (
	gw_ba£_t
::
öt1_t
*Ë
kvÆ2
Ë- (* (
w_ba£_t
::öt1_t*Ë
kvÆ1
);

292 
_öt2_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

293 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

295 
w_as£π9
(
kÀn1
 =
kÀn2
);

296  (* (
	gw_ba£_t
::
öt2_t
*Ë
kvÆ2
Ë- (* (
w_ba£_t
::öt2_t*Ë
kvÆ1
);

301 
_öt4_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

302 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

304 
w_as£π9
(
kÀn1
 =
kÀn2
);

307 
boﬁ
 
	gªt
 = ((* (
w_ba£_t
::
öt4_t
*Ë
kvÆ2
Ë< (* (w_ba£_t::öt4_t*Ë
kvÆ1
));

308  
	gªt
? -1 : ((* (
w_ba£_t
::
öt4_t
*Ë
kvÆ2
Ë=(* (w_ba£_t::öt4_t*Ë
kvÆ1
))?

314 
_Êﬂt_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

315 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

317 
w_as£π9
(
kÀn1
 =
kÀn2
);

320 
boﬁ
 
	gªs
 = (* (
w_ba£_t
::
f4_t
*Ë
kvÆ2
Ë< (* (w_ba£_t::f4_t*Ë
kvÆ1
);

321  
	gªs
 ? -1 : (

322 ((* (
w_ba£_t
::
f4_t
*Ë
kvÆ1
Ë=(* (w_ba£_t::f4_t*Ë
kvÆ2
))

327 
_doubÀ_rcmp
(
uöt4_t
 
W_IFDEBUG9
(
kÀn1
), c⁄° * 
kvÆ1
,

328 
uöt4_t
 
W_IFDEBUG9
(
kÀn2
), c⁄° * 
kvÆ2
)

330 
w_as£π9
(
kÀn1
 =
kÀn2
);

331 
	gw_ba£_t
::
f8_t
 
d1
, 
	gd2
;

333 
mem˝y
(&
d2
, 
kvÆ1
, (
w_ba£_t
::
f8_t
));

334 
mem˝y
(&
d1
, 
kvÆ2
, (
w_ba£_t
::
f8_t
));

335 
ADD_TSTAT_SORT
(
s‹t_mem˝y_˙t
,2);

336 
ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 2*(
w_ba£_t
::
f8_t
));

338 
boﬁ
 
	gªt
 = 
d1
 < 
d2
;

339  
	gªt
 ? -1 : (
d1
 =
d2
) ? 0 : 1;

344 
	$_°rög_rcmp
(
uöt4_t
 
kÀn1
, c⁄° * 
kvÆ1
, uöt4_à
kÀn2
, c⁄° * 
kvÆ2
)

346 * 
p2
 = (*Ë
kvÆ1
;

347 * 
p1
 = (*Ë
kvÆ2
;

348 
ªsu…
 = 0;

349 
uöt4_t
 
i
 = 
kÀn2
 < 
kÀn1
 ? klen2 : klen1;

350 
i
 > 0 && ! (
ªsu…
 = *
p1
 - *
p2
);

351 
i
--, 
p1
++, 
p2
++) ;

352  
ªsu…
 ?Ñesu… : 
kÀn2
 - 
kÀn1
;

353 
	}
}

355 
nbox_t
 
_univî£_
(2);

356 
nbox_t
 
_box_
(2);

362 
	$_•©ül_cmp
(
uöt4_t
 
kÀn1
, c⁄° * 
kvÆ1
, uöt4_à
kÀn2
,

363 c⁄° * 
kvÆ2
)

365 
nbox_t
 
	`_univî£_
(2);

366 
	`w_as£π9
(
kÀn1
 =
kÀn2
);

368 
nbox_t
 
	`box1
((*)
kvÆ1
, ()
kÀn1
),

369 
	`box2
((*)
kvÆ2
, ()
kÀn2
);

371  (
box1
.
	`hcmp
(
box2
, 
_univî£_
));

372 
	}
}

373 
	$_•©ül_rcmp
(
uöt4_t
 
kÀn1
, c⁄° * 
kvÆ1
, uöt4_à
kÀn2
,

374 c⁄° * 
kvÆ2
)

376 
	`w_as£π9
(
kÀn1
 =
kÀn2
);

378 
nbox_t
 
	`box1
((*)
kvÆ1
, ()
kÀn1
),

379 
	`box2
((*)
kvÆ2
, ()
kÀn2
);

381  (
box2
.
	`hvÆue
(
_univî£_
Ë- 
box1
.hvalue(_universe_));

383 
	}
}

388 
PFC


389 
	gs‹t_°ªam_i
::
	$gë_cmp_func
(
key_öfo_t
::
key_ty≥_t
 
ty≥
, 
boﬁ
 
up
)

391 i‡(
up
) {

392 
ty≥
) {

394 
s‹t‹dî
::
kt_f4
:

395  
s‹t_keys_t
::
f4_cmp
;

397 
s‹t‹dî
::
kt_f8
:

398  
s‹t_keys_t
::
f8_cmp
;

401 
s‹t‹dî
::
kt_b
:

402  
s‹t_keys_t
::
°rög_cmp
;

405 
s‹t‹dî
::
kt_•©ül
:

406  
_•©ül_cmp
;

410 
s‹t‹dî
::
kt_u1
:

411  
s‹t_keys_t
::
uöt1_cmp
;

413 
s‹t‹dî
::
kt_u2
:

414  
s‹t_keys_t
::
uöt2_cmp
;

416 
s‹t‹dî
::
kt_u4
:

417  
s‹t_keys_t
::
uöt4_cmp
;

419 
s‹t‹dî
::
kt_u8
:

420  
s‹t_keys_t
::
uöt8_cmp
;

422 
s‹t‹dî
::
kt_i1
:

423  
s‹t_keys_t
::
öt1_cmp
;

425 
s‹t‹dî
::
kt_i2
:

426  
s‹t_keys_t
::
öt2_cmp
;

429 
s‹t‹dî
::
kt_i4
:

431  
s‹t_keys_t
::
öt4_cmp
;

433 
s‹t‹dî
::
kt_i8
:

434  
s‹t_keys_t
::
öt8_cmp
;

437 
ty≥
) {

439 
s‹t‹dî
::
kt_f4
:

440  
_Êﬂt_rcmp
;

442 
s‹t‹dî
::
kt_f8
:

443  
_doubÀ_rcmp
;

446 
s‹t‹dî
::
kt_b
:

447  
_°rög_rcmp
;

449 
s‹t‹dî
::
kt_•©ül
:

450  
_•©ül_rcmp
;

455 
s‹t‹dî
::
kt_u1
:

456  
_uöt1_rcmp
;

458 
s‹t‹dî
::
kt_u2
:

459  
_uöt2_rcmp
;

461 
s‹t‹dî
::
kt_u4
:

462  
_uöt4_rcmp
;

464 
s‹t‹dî
::
kt_i1
:

465  
_öt1_rcmp
;

467 
s‹t‹dî
::
kt_i2
:

468  
_öt2_rcmp
;

471 
s‹t‹dî
::
kt_i4
:

473  
_öt4_rcmp
;

476 
	}
}

479 c⁄° 
	g_m¨kî_
 = 
mö_öt4
;

481 
	gs‹t_desc_t
::
	$s‹t_desc_t
()

483 
ªc_cou¡
 = 
num_∑ges
 = 
tŸÆ_ªc
 = 
uniq_cou¡
 = 0;

484 
run_cou¡
 = 0;

485 
max_li°_sz
 = 20;

486 
run_li°
 = 
√w
 
rid_t
[
max_li°_sz
];

488 
	`ªc‹d_mÆloc
(
run_li°
, 
max_li°_sz
*(
rid_t
));

490 
max_ªc_˙t
 = 0;

491 
keys
 = 0;

492 
fkeys
 = 0;

493 
œ°_rid
 = 
œ°_m¨kî
 = 
rid_t
::
nuŒ
;

494 
tmp_fid
 = 
°id_t
::
nuŒ
;

495 
	}
}

497 
	gs‹t_desc_t
::~
	$s‹t_desc_t
()

499 i‡(
run_li°
) {

500 
	`ªc‹d_‰ì
(
run_li°
, 0);

501 
dñëe
 [] 
run_li°
;

503 
	`‰ì_•a˚
();

504 
	}
}

506 
NORET


507 
	grun_sˇn_t
::
	$run_sˇn_t
()

509 
eof
 = 
åue
;

510 
sögÀ
 = 
Ál£
;

511 
¶Ÿ
 = 
i
 = 0;

512 
Â
 = 0;

513 
	}
}

515 
NORET


516 
	grun_sˇn_t
::~
	$run_sˇn_t
()

518 i‡(
Â
) {

519 
	`ªc‹d_‰ì
(
Â
, 0);

520 
dñëe
 [] 
Â
;

522 
	}
}

524 
rc_t


525 
	grun_sˇn_t
::
	$öô
(
rid_t
& 
begö
, 
PFC
 
c
, c⁄° 
key_öfo_t
& 
k
, 
boﬁ
 
unique
=
Ál£
)

527 
i
 = 0;

528 
pid
 = 
begö
.pid;

529 
¶Ÿ
 = 
begö
.slot - 1;

530 
cmp
 = 
c
;

531 
köfo
 = 
k
;

532 
eof
 = 
Ál£
;

534 
	`DBG
(<<"öôÑun_sˇ¿rid=" << 
begö
);

539 
_unique
 = 
unique
;

540 
toggÀ_ba£
 = 2;

542 
Â
 = 
√w
 
fûe_p
[
toggÀ_ba£
];

543 
	`ªc‹d_mÆloc
(
Â
, (
fûe_p
));

546 
	`W_DO
–
Â
[0].
	`fix
(
pid
, 
LATCH_SH
) );

547 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

548 
	`W_DO
–
	`√xt
(
eof
) );

550 i‡(
unique
) {

551 
	`W_DO
–
ss_m
::
SSM
->
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

552 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

553 i‡(
eof
) {

554 
sögÀ
 = 
åue
; 
eof
 = 
Ál£
;

556 
sögÀ
 = 
Ál£
;

557 
	`W_DO
–
Â
[1].
	`fix
(
pid
, 
LATCH_SH
) );

558 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

562  
RCOK
;

563 
	}
}

565 
rc_t


566 
	grun_sˇn_t
::
	$cuºít
(c⁄° 
ªc‹d_t
*& 
ªc
)

568 i‡(
eof
Ë{ 
ªc
 = 
NULL
; }

570 
ªc
 = 
cur_ªc
;

571 
	`w_as£π1
(
Â
->
	`is_fixed
());

581  
RCOK
;

582 
	}
}

584 
rc_t


585 
	grun_sˇn_t
::
	$√xt
(
boﬁ
& 
íd
)

587 
íd
 = 
Ál£
;

588 i‡(
eof
Ë{ 
íd
 = 
åue
;  
RCOK
; }

599 
¶Ÿ
 = 
Â
[
i
].
	`√xt_¶Ÿ
(slot);

600 i‡(
¶Ÿ
==0) {

601 
	`DBGTHRD
(<<"newÖage");

602 
cur_ªc
 = 
NULL
;

603 i‡(
_unique
) {

605 i‡(
sögÀ
Ë{ 
eof
 = 
åue
; 
íd
 =Årue;  
RCOK
; }

606 
	`W_DO
–
ss_m
::
SSM
->
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

607 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

608 i‡(
eof
Ë{ 
sögÀ
 = 
åue
;Éo‡
Ál£
; }

610 
	`W_DO
–
Â
[
i
].
	`fix
(
pid
, 
LATCH_SH
) );

611 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

616 
i
 = (i+1)%
toggÀ_ba£
;

618 
	`W_DO
–
ss_m
::
SSM
->
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

619 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

620 i‡(
eof
Ë{ 
íd
 = 
åue
;  
RCOK
; }

621 
i
 = (i+1)%
toggÀ_ba£
;

622 
	`W_DO
–
Â
[
i
].
	`fix
(
pid
, 
LATCH_SH
) );

623 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

625 
¶Ÿ
 = 
Â
[
i
].
	`√xt_¶Ÿ
(0);

635 
	`W_DO
(
Â
[
i
].
	`gë_ªc
(
¶Ÿ
, 
cur_ªc
));

637 
	`w_as£π1
(
cur_ªc
);

638 
	`w_as£π1
(
Â
[
i
].
	`is_fixed
());

640 i‡–
cur_ªc
->
	`body_size
()==()

641 && *(*)
cur_ªc
->
	`body
(Ë=
_m¨kî_


642 && 
cur_ªc
->
	`hdr_size
()==0 ) {

643 
íd
 = 
eof
 = 
åue
;

644 
Â
[
i
].
	`unfix
();

645 
cur_ªc
 = 
NULL
;

648  
RCOK
;

649 
	}
}

651 
boﬁ


652 
	g›î©‹
>(
	grun_sˇn_t
& 
	gs1
,Ñun_sˇn_t& 
	gs2
)

655 
w_as£π1
(
s1
.
cur_ªc
 && 
s2
.cur_rec);

657 
	gÀn1
, 
	gÀn2
;

658 i‡(
	gs1
.
	gköfo
.
	gÀn
==0 && (
s1
.
köfo
.
ty≥
)==(
key_öfo_t
::
t_°rög
)) {

660 
Àn1
 = 
s1
.
cur_ªc
->
hdr_size
(),

661 
	gÀn2
 = 
s2
.
cur_ªc
->
hdr_size
();

663 
	gÀn1
 = 
Àn2
 = ()
s1
.
köfo
.
Àn
;

666 
INC_TSTAT_SORT
(
s‹t_keycmp_˙t
);

667  (
	gs1
.
cmp
(
Àn1
, 
s1
.
cur_ªc
->
hdr
(), 
Àn2
, 
s2
.cur_rec->hdr()) > 0);

673 
boﬁ
 
	$du∂iˇã_ªc
(c⁄° 
ªc‹d_t
* 
ªc1
, c⁄°Ñec‹d_t* 
ªc2
)

677 i‡(
ªc1
->
	`body_size
(Ë!
ªc2
->body_size() ||

678 
ªc1
->
	`hdr_size
(Ë!
ªc2
->hdr_size())

679  
Ál£
;

681 i‡(
ªc1
->
	`body_size
()>0 &&

682 
	`memcmp
(
ªc1
->
	`body
(), 
ªc2
->body(), (Ïec1->
	`body_size
()))

683  
Ál£
;

685 i‡(
ªc1
->
	`hdr_size
()>0 &&

686 
	`memcmp
(
ªc1
->
	`hdr
(), 
ªc2
->hdr(),Ñec1->
	`hdr_size
()))

687  
Ál£
;

689 
	`INC_TSTAT_SORT
(
s‹t_du∂iˇãs
);

690  
åue
;

691 
	}
}

697 
ölöe
 
uöt
 
	$ªc_size
(c⁄° 
ªc‹d_t
* 
r
)

701  (
r
->
èg
.
Êags
 & 
t_smÆl
Ë? (Ï->
	`body_size
() :

702 ((
r
->
èg
.
Êags
 & 
t_œrge_0
) ?

703 (
lg_èg_chunks_s
):

704 ()((
lg_èg_ödúe˘_s
))

713 
	}
}

715 
PFC
 
	g_loˇl_cmp
;

718 
	$qs‹t_cmp
(c⁄° * 
k1
, c⁄° * 
k2
)

720 
	`INC_TSTAT_SORT
(
s‹t_keycmp_˙t
);

721  
	`_loˇl_cmp
–((
s‹t_key_t
*)
k1
)->
kÀn
,

722 ((
s‹t_key_t
*)
k1
)->
vÆ
,

723 ((
s‹t_key_t
*)
k2
)->
kÀn
,

724 ((
s‹t_key_t
*)
k2
)->
vÆ
 );

725 
	}
}

728 
	$fqs‹t_cmp
(c⁄° * 
k1
, c⁄° * 
k2
)

730 
	`INC_TSTAT_SORT
(
s‹t_keycmp_˙t
);

731  
	`_loˇl_cmp
–((
fûe_s‹t_key_t
*)
k1
)->
kÀn
,

732 ((
fûe_s‹t_key_t
*)
k1
)->
vÆ
,

733 ((
fûe_s‹t_key_t
*)
k2
)->
kÀn
,

734 ((
fûe_s‹t_key_t
*)
k2
)->
vÆ
 );

735 
	}
}

738 
	$¸óã_hóp
(
öt2_t
 
hóp
[], 
hóp_size
, 
num_runs
,

739 
run_sˇn_t
 
sc
[])

741 
r
;

742 
s
, 
k
;

743 
wö√r
;

744 
tmp
;

746 
s
=0; s<
hóp_size
; 
hóp
[s++] = heap_size) ;

747 
r
 = 0, 
k
 = 
hóp_size
 >> 1;Ñ < heap_size;Ñ+=2, k++) {

748 i‡(
r
 < 
num_runs
 - 1) {

749 i‡(
sc
[
r
] > sc[r+1])

750 
hóp
[
k
] = 
r
, 
wö√r
 =Ñ+1;

752 
hóp
[
k
] = 
r
+1, 
wö√r
 =Ñ;

755 
hóp
[
k
] = -1;

756 
wö√r
 = (
r
>=
num_runs
)? -1 :Ñ;

759 
s
 = 
k
 >> 1;; s >>= 1) {

760 i‡(
hóp
[
s
] =
hóp_size
) {

761 
hóp
[
s
] = 
wö√r
; ;

764 i‡(
wö√r
 < 0)

765 
wö√r
 = 
hóp
[
s
], heap[s] = -1;

766 i‡(
sc
[
wö√r
] > sc[
hóp
[
s
]]) {

767 
tmp
 = 
wö√r
; wö√∏
hóp
[
s
]; heap[s] =Åmp;

772 
	}
}

775 
	$hóp_t›
(
öt2_t
 
hóp
[], 
hóp_size
, 
wö√r
, 
run_sˇn_t
 
sc
[])

777 
s
;

778 
r
;

780 
s
 = (
hóp_size
 + 
wö√r
) >> 1; s > 0; s >>= 1) {

781 i‡((
r
 = 
hóp
[
s
]) < 0)

783 i‡(
sc
[
wö√r
].
	`is_eof
())

784 
hóp
[
s
] = -1, 
wö√r
 = 
r
;

785 i‡(
sc
[
wö√r
] > sc[
r
])

786 
hóp
[
s
] = 
wö√r
, wö√∏
r
;

788  (
wö√r
);

789 
	}
}

794 
rc_t


795 
	gs‹t_°ªam_i
::
	$ªmove_du∂iˇãs
()

797 
pos
=0, 
¥ev
=0;

798 
sd
->
uniq_cou¡
 = 0;

800 i‡(!(
sd
->
œ°_rid
==
rid_t
::
nuŒ
)) {

802 
fûe_p
 
tmp
;

803 c⁄° 
ªc‹d_t
* 
_r
;

804 
	`DBGTHRD
(<<"sort_stream_i:remove_duplicates");

805 
	`W_DO
–
fi
->
	`loˇã_∑ge
(
sd
->
œ°_rid
, 
tmp
, 
LATCH_SH
) );

806 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

807 
	`W_COERCE
–
tmp
.
	`gë_ªc
(
sd
->
œ°_rid
.
¶Ÿ
, 
_r
) );

809 
smsize_t
 
hÀn
 = 
_r
->
	`hdr_size
();

810 
smsize_t
 
æí
 = 
_r
->
	`body_size
();

812 i‡(
_r
->
	`is_smÆl
()) {

814 i‡(
_fûe_s‹t
) {

815 
pos
<
sd
->
ªc_cou¡
) {

816 
fûe_s‹t_key_t
* 
fk
 = (fûe_s‹t_key_t*)
sd
->
fkeys
[
pos
];

817 i‡(
fk
->
hÀn
==()hÀ¿&& fk->
æí
==()rlen) {

818 i‡(
hÀn
>0 &&

819 
	`memcmp
((*)
fk
->
hdr
+fk->
kÀn
,

820 
_r
->
	`hdr
()+
fk
->
kÀn
, 
hÀn
-fk->klen))

822 i‡(
æí
>0 && 
	`memcmp
(
fk
->
ªc
, 
_r
->
	`body
(), ()rlen))

824 
pos
++;

828 
pos
<
sd
->
ªc_cou¡
) {

829 
s‹t_key_t
* 
k
 = (s‹t_key_t*)
sd
->
keys
[
pos
];

830 i‡(
k
->
kÀn
==()
hÀn
 && k->
æí
==()rlen) {

831 i‡(
hÀn
>0 && 
	`memcmp
(
k
->
vÆ
, 
_r
->
	`hdr
(), hlen))

833 i‡(
æí
>0 && 
	`memcmp
(
k
->
ªc
, 
_r
->
	`body
(), ()rlen))

835 
pos
++;

841 i‡(
pos
>=
sd
->
ªc_cou¡
) {

843  
RCOK
;

846 
¥ev
 = 
pos
++;

847 
sd
->
uniq_cou¡
++;

851 
pos
 = 1;

852 
sd
->
uniq_cou¡
++;

856 i‡(
_fûe_s‹t
) {

857 
pos
<
sd
->
ªc_cou¡
) {

858 
fûe_s‹t_key_t
 *
fk1
 = (fûe_s‹t_key_t*)
sd
->
fkeys
[
pos
],

859 *
fk2
 = (
fûe_s‹t_key_t
*)
sd
->
fkeys
[
pos
-1];

860 i‡(
fk1
->
hÀn
 =
fk2
->hÀ¿&& fk1->
æí
 == fk2->rlen) {

861 i‡(
fk1
->
hÀn
>0 &&

862 
	`memcmp
((*)
fk1
->
hdr
+fk1->
kÀn
, (*)
fk2
->hdr+fk2->klen,

863 
fk1
->
hÀn
 - fk1->
kÀn
))

865 i‡(
fk1
->
æí
>0 && 
	`memcmp
(fk1->
ªc
, 
fk2
->rec, fk1->rlen))

867 
pos
++;

871 
pos
<
sd
->
ªc_cou¡
) {

872 
s‹t_key_t
 *
k1
 = (s‹t_key_t*)
sd
->
keys
[
pos
],

873 *
k2
 = (
s‹t_key_t
*)
sd
->
keys
[
pos
-1];

874 i‡(
k1
->
kÀn
 =
k2
->kÀ¿&& k1->
æí
 == k2->rlen) {

875 i‡(
k1
->
kÀn
>0 && 
	`memcmp
(k1->
vÆ
, 
k2
->val, k1->klen))

877 i‡(
k1
->
æí
>0 && 
	`memcmp
(k1->
ªc
, 
k2
->rec, k1->rlen))

879 
pos
++;

883 i‡(
pos
>=
sd
->
ªc_cou¡
) ;

886 i‡(
_fûe_s‹t
) {

888 *
tmp
 = 
sd
->
fkeys
[sd->
uniq_cou¡
-1];

889 
sd
->
fkeys
[sd->
uniq_cou¡
-1] = sd->fkeys[
¥ev
];

890 
sd
->
fkeys
[
¥ev
] = 
tmp
;

893 * 
tmp
 = 
sd
->
keys
[sd->
uniq_cou¡
-1];

894 
sd
->
keys
[sd->
uniq_cou¡
-1] = sd->keys[
¥ev
];

895 
sd
->
keys
[
¥ev
] = 
tmp
;

897 
sd
->
uniq_cou¡
++;

898 
¥ev
 = 
pos
++;

900 i‡(
¥ev
) {

901 i‡(
_fûe_s‹t
) {

903 *
tmp
 = 
sd
->
fkeys
[sd->
uniq_cou¡
-1];

904 
sd
->
fkeys
[sd->
uniq_cou¡
-1] = sd->fkeys[
¥ev
];

905 
sd
->
fkeys
[
¥ev
] = 
tmp
;

908 * 
tmp
 = 
sd
->
keys
[sd->
uniq_cou¡
-1];

909 
sd
->
keys
[sd->
uniq_cou¡
-1] = sd->keys[
¥ev
];

910 
sd
->
keys
[
¥ev
] = 
tmp
;

914  
RCOK
;

915 
	}
}

920 
ölöe
 
ªcÊags_t


921 
	$lgªc_ty≥
(
uöt2_t
 
ªc_sz
)

923 i‡(
ªc_sz
==(
lg_èg_chunks_s
))

924  
t_œrge_0
;

925 i‡(
ªc_sz
==(
lg_èg_ödúe˘_s
))

926  
t_œrge_1
;

928 
	`W_FATAL
(
fcINTERNAL
);

929  
t_badÊag
;

930 
	}
}

934 
QuickS‹t
(* 
a
[], 
˙t
, (*
com∑r
)(const *, const *) )

938 c⁄° 
MAXSTACKDEPTH
 = 30;

939 c⁄° 
LIMIT
 = 10;

940 
øndx
 = 1;

942 
	sqs_°ack_ôem
 {

943 
l
, 
r
;

945 
qs_°ack_ôem
 
°ack
[
MAXSTACKDEPTH
];

949 
•
 = 0;

950 
l
, 
r
;

951 * 
tmp
;

952 
i
, 
j
;

953 * 
pivŸ
;

955 
l
 = 0, 
r
 = 
˙t
 - 1; ; ) {

956 i‡(
r
 - 
l
 < 
LIMIT
) {

957 i‡(
•
-- <= 0) ;

958 
l
 = 
°ack
[
•
].l, 
r
 = stack[sp].r;

961 
øndx
 = (randx * 1103515245 + 12345) & 0x7fffffff;

962 
øndx
 %(
r
-
l
);

963 
pivŸ
 = 
a
[
l
 + 
øndx
];

964 
i
 = 
l
, 
j
 = 
r
; i <= j; ) {

965 
	`com∑r
(
a
[
i
], 
pivŸ
) < 0) i++;

966 
	`com∑r
(
pivŸ
, 
a
[
j
]) < 0) j--;

967 i‡(
i
 < 
j
Ë{ 
tmp
=
a
[i];á[i]=a[j];á[j]=tmp; }

968 i‡(
i
 <
j
) i++, j--;

971 i‡(
j
 - 
l
 < 
r
 - 
i
) {

972 i‡(
i
 < 
r
) {

973 if(
•
 >
MAXSTACKDEPTH
) {

974 
îr‹
;

976 
°ack
[
•
].
l
 = 
i
, sèck[•++].
r
 =Ñ;

978 
r
 = 
j
;

980 i‡(
l
 < 
j
) {

981 if(
•
 >
MAXSTACKDEPTH
) {

982 
îr‹
;

984 
°ack
[
•
].
l
 =Ü, sèck[•++].
r
 = 
j
;

986 
l
 = 
i
;

990 
i
 = 1; i < 
˙t
; 
a
[
j
+1] = 
pivŸ
, i++)

991 
j
 = 
i
 - 1, 
pivŸ
 = 
a
[i];

992 
j
 >0 && (
	`com∑r
(
pivŸ
, 
a
[j]) < 0);

993 
a
[
j
+1] =á[j], j--) ;

997 
îr‹
:

999 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1000 << "QuickS‹t: sèckÅoÿsmÆl" <<
ídl
;

1001 
	`W_FATAL
(
fcOUTOFMEMORY
);

1002 
	}
}

1008 
rc_t


1009 
	gs‹t_°ªam_i
::
	$Êush_run
()

1011 
i
;

1012 i‡(
sd
->
ªc_cou¡
==0Ë 
RCOK
;

1014 i‡(
sd
->
tmp_fid
==
°id_t
::
nuŒ
) {

1016 i‡(
_⁄˚
) {

1017 
	`W_DO
–
SSM
->
	`_¸óã_fûe
(
•
.
vﬁ
, 
sd
->
tmp_fid
, 
_¥›îty
) );

1018 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

1020 
	`W_DO
–
SSM
->
	`_¸óã_fûe
(
•
.
vﬁ
, 
sd
->
tmp_fid
, 
t_ãmp‹¨y
) );

1021 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

1025 
	`W_COERCE
–
dú
->
	`ac˚ss
(
sd
->
tmp_fid
, sd->
sdesc
, 
NL
) );

1026 
	`w_as£π1
(
sd
->
sdesc
);

1028 
fûe_p
 
œ°_∑ge
;

1030 
rid_t
 
rid
, 
fú°
;

1033 
_loˇl_cmp
 = 
sd
->
comp
;

1034 
_univî£_
 = 
ki
.
univî£
;

1036 i‡(
_fûe_s‹t
) {

1037 
	`QuickS‹t
(
sd
->
fkeys
, sd->
ªc_cou¡
, 
fqs‹t_cmp
);

1039 
	`QuickS‹t
(
sd
->
keys
, sd->
ªc_cou¡
, 
qs‹t_cmp
);

1040 i‡(
ki
.
Àn
==0 && (ki.
ty≥
)!=(
key_öfo_t
::
t_°rög
)) {

1041 
ki
.
Àn
 = ((
fûe_s‹t_key_t
*)
sd
->
keys
[0])->
kÀn
;

1046 i‡(
•
.
unique
) {

1047 
	`W_DO
 ( 
	`ªmove_du∂iˇãs
() );

1048 i‡(
sd
->
uniq_cou¡
==0Ë 
RCOK
;

1052 
cou¡
 = 
•
.
unique
 ? 
sd
->
uniq_cou¡
 : sd->
ªc_cou¡
;

1053 i‡(
_fûe_s‹t
) {

1054 
i
=0; i<
cou¡
; i++) {

1055 c⁄° 
fûe_s‹t_key_t
* 
k
 = (fûe_s‹t_key_t*Ë
sd
->
fkeys
[
i
];

1056 
vec_t
 
hdr
, 
	`d©a
(
k
->
ªc
, k->
æí
);

1057 i‡(
_⁄˚
) {

1058 
hdr
.
	`put
((*)
k
->hdr+k->
kÀn
, k->
hÀn
-k->klen);

1059 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
(

1060 
œ°_∑ge
,

1061 
k
->
æí
,

1062 
hdr
, 
d©a
,

1063 *
sd
->
sdesc
, 
rid
) );

1065 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1066 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1068 
hdr
.
	`put
(
k
->hdr, k->
hÀn
);

1069 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
–
œ°_∑ge
, 
k
->
æí
,

1070 
hdr
, 
d©a
, *
sd
->
sdesc
, 
rid
) );

1071 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1072 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1074 i‡(
k
->
bÀn
 > k->
æí
) {

1078 
	`W_DO
–
fi
->
	`upd©e_ª˘ag
(
rid
, 
k
->
bÀn
, 
	`lgªc_ty≥
(k->
æí
)) );

1080 i‡(
rid
.
¶Ÿ
 =1Ë++
sd
->
num_∑ges
;

1081 i‡(
i
 =0Ë
fú°
 = 
rid
;

1084 
i
=0; i<
cou¡
; i++) {

1085 c⁄° 
s‹t_key_t
* 
k
 = (s‹t_key_t*Ë
sd
->
keys
[
i
];

1086 
vec_t
 
	`hdr
(
k
->
vÆ
, k->
kÀn
), 
	`d©a
(k->
ªc
, k->
æí
);

1087 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
–
œ°_∑ge
, 
k
->
æí
,

1088 
hdr
, 
d©a
, *
sd
->
sdesc
, 
rid
) );

1090 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1091 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1092 i‡(
rid
.
¶Ÿ
 =1Ë++
sd
->
num_∑ges
;

1093 i‡(
i
 =0Ë
fú°
 = 
rid
;

1096 
sd
->
œ°_rid
 = 
rid
;

1098 i‡(!
_⁄˚
) {

1100 
vec_t
 
hdr
, 
	`d©a
((*)&
_m¨kî_
, ());

1101 
	`W_DO
–
fi
->
	`¸óã_ªc_©_íd
(

1102 
œ°_∑ge
, (),

1103 
hdr
, 
d©a
, *
sd
->
sdesc
, 
rid
) );

1104 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1105 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1108 
sd
->
œ°_m¨kî
 = 
rid
;

1109 
sd
->
tŸÆ_ªc
 +sd->
ªc_cou¡
;

1112 i‡(
sd
->
run_cou¡
 =sd->
max_li°_sz
) {

1114 
rid_t
* 
tmp
 = 
√w
Ñid_t[
sd
->
max_li°_sz
<<1];

1115 
	`ªc‹d_mÆloc
(
tmp
, (
sd
->
max_li°_sz
 << 1)*(
rid_t
));

1117 
	`mem˝y
(
tmp
, 
sd
->
run_li°
, sd->
run_cou¡
*(
rid
));

1118 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1119 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
run_cou¡
 * (
rid
));

1121 
	`ªc‹d_‰ì
(
sd
->
run_li°
, 0);

1122 
dñëe
 [] 
sd
->
run_li°
;

1123 
sd
->
run_li°
 = 
tmp
;

1124 
sd
->
max_li°_sz
 <<= 1;

1126 
sd
->
run_li°
[sd->
run_cou¡
++] = 
fú°
;

1129 
sd
->
ªc_cou¡
 = 0;

1130 
buf_•a˚
.
	`ª£t
();

1131  
RCOK
;

1132 
	}
}

1134 
rc_t


1135 
	gs‹t_°ªam_i
::
	$Êush_⁄e_ªc
(c⁄° 
ªc‹d_t
 *
ªc
, 
rid_t
& 
rid
,

1136 c⁄° 
°id_t
&

1137 , 
fûe_p
& 
œ°_∑ge
,

1138 
boﬁ
 
to_föÆ_fûe


1142 
uöt
 
æí
 = 
	`ªc_size
(
ªc
);

1143 
vec_t
 
	`hdr
(
ªc
->hdr(),Ñec->
	`hdr_size
()),

1144 
	`d©a
(
ªc
->
	`body
(), ()
æí
);

1146 
	`W_DO
–
fi
->
	`¸óã_ªc_©_íd
(

1147 
œ°_∑ge
, 
æí
, 
hdr
, 
d©a
,

1148 *
sd
->
sdesc
, 
rid
) );

1150 if(
to_föÆ_fûe
) {

1151 
	`INC_TSTAT_SORT
(
s‹t_ªcs_¸óãd
);

1152 
	`ADD_TSTAT_SORT
(
s‹t_ªc_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1154 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1155 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1157 i‡(!(
ªc
->
èg
.
Êags
 & 
t_smÆl
)) {

1159 
	`W_DO
–
fi
->
	`upd©e_ª˘ag
(
rid
, 
ªc
->
èg
.
body_Àn
,Ñec->èg.
Êags
) );

1162  
RCOK
;

1163 
	}
}

1165 
rc_t


1166 
	gs‹t_°ªam_i
::
	$mîge
(
boﬁ
 
skù_œ°_∑ss
=
Ál£
)

1168 
uöt4_t
 
i
, 
j
, 
k
;

1169 
boﬁ
 
to_föÆ_fûe
 = 
Ál£
;

1173 
i
 = 
•
.
run_size
-1, 
hóp_size
 = 1; i>0; heap_size <<= 1, i>>=1) ;

1174 
öt2_t
* 
m_hóp
 = 
√w
 i¡2_t[
hóp_size
];

1175 
	`ªc‹d_mÆloc
(
m_hóp
, 
hóp_size
*(
öt2_t
));

1176 
	`w_as£π1
(
m_hóp
);

1177 
w_auto_dñëe_¨øy_t
<
öt2_t
> 
	`auto_dñ_hóp
(
m_hóp
);

1179 
num_runs
 = 
sd
->
run_cou¡
;

1180 
	`SET_TSTAT_SORT
(
s‹t_runs
, 
num_runs
);

1182 i‡(
sd
->
run_cou¡
<=1Ë 
RCOK
;

1184 
uöt4_t
 
out_∑πs
 = 
sd
->
run_cou¡
;

1185 
ö_∑πs
 = 0;

1186 
num_∑s£s
 = 1;

1187 
i
=
•
.
run_size
; i<
sd
->
run_cou¡
; i*=•.run_size, 
num_∑s£s
++) ;

1189 
uöt4_t
 
ö_li°_˙t
 = 0, 
out_li°_˙t
 = 
sd
->
run_cou¡
;

1190 
°id_t
& 
out_fûe
 = 
sd
->
tmp_fid
;

1191 
rid_t
 *
out_li°
 = 
sd
->
run_li°
,

1192 *
li°_buf
 = 
√w
 
rid_t
[
out_li°_˙t
+1],

1193 *
ö_li°
 = 
li°_buf
;

1194 
	`ªc‹d_mÆloc
(
li°_buf
, (
out_li°_˙t
+1)*(
rid_t
));

1196 
	`w_as£π1
(
li°_buf
);

1197 
w_auto_dñëe_¨øy_t
<
rid_t
> 
	`auto_dñ_li°
(
li°_buf
);

1199 
	`SET_TSTAT_SORT
(
s‹t_¡≠es
, 
out_∑πs
);

1201 
i
=0; 
out_∑πs
>1; i++) {

1203 #ifde‡
COMMENT


1204 
	`DBG
(<< "PHASE(1)? " << 
i


1205 << " skù_œ°_∑ss=" << 
skù_œ°_∑ss


1206 << " out_∑πs=" << 
out_∑πs
);

1209 
ö_∑πs
 = 
out_∑πs
;

1210 
out_∑πs
 = (
ö_∑πs
 - 1Ë/ 
•
.
run_size
 + 1;

1212 { 
rid_t
* 
tmp
 = 
ö_li°
; in_li° = 
out_li°
, out_list =Åmp; }

1213 
ö_li°_˙t
 = 
out_li°_˙t
;

1214 
out_li°_˙t
 = 0;

1215 
°id_t
 
ö_fûe
 = 
out_fûe
;

1216 
boﬁ
 
œ°_∑ss
 = (
out_∑πs
==1);

1218 i‡(
skù_œ°_∑ss
 && 
œ°_∑ss
) {

1219 i‡(
sd
->
run_li°
 !
ö_li°
) {

1221 
	`mem˝y
(
sd
->
run_li°
, 
ö_li°
, ()
ö_li°_˙t
*(
rid_t
));

1222 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1223 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, (
ö_li°_˙t
 * (
rid_t
)));

1225 
num_runs
 = 
ö_∑πs
;

1226 
sd
->
tmp_fid
 = 
ö_fûe
;

1227  
RCOK
;

1230 i‡(
œ°_∑ss
) {

1233 
	`W_DO
–
SSM
->
	`_¸óã_fûe
(
•
.
vﬁ
, 
out_fûe
, sp.
¥›îty
) );

1234 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

1235 
to_föÆ_fûe
 = 
åue
;

1238 
	`W_DO
–
SSM
->
	`_¸óã_fûe
(
•
.
vﬁ
, 
out_fûe
, 
t_ãmp‹¨y
) );

1239 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

1240 
to_föÆ_fûe
 = 
Ál£
;

1244 
	`W_COERCE
–
dú
->
	`ac˚ss
(
out_fûe
, 
sd
->
sdesc
, 
NL
) );

1245 
	`w_as£π1
(
sd
->
sdesc
);

1246 
fûe_p
 
œ°_∑ge
;

1248 
b
;

1250 #ifde‡
COMMENT


1251 
	`DBG
(<< "out_∑πs" << 
out_∑πs


1252 << " b = " << 
b


1253 << " in_∑πs=" << 
ö_∑πs
);

1256 
j
=
b
=0; j<
out_∑πs
; j++, b+=
•
.
run_size
) {

1259 
num_runs
 = (
j
==
out_∑πs
-1Ë? (
ö_∑πs
-
b
Ë: 
•
.
run_size
;

1261 
	`INC_TSTAT_SORT
(
s‹t_pha£s
);

1263 #ifde‡
COMMENT


1264 
	`DBG
(<< "bef‹ê¸ótög HEAP o‡" << 
num_runs


1266 << 
bf
->
	`≈ages
()

1270 
run_sˇn_t
* 
rs
 = 
√w
Ñun_sˇn_t[
num_runs
];

1271 
	`ªc‹d_mÆloc
(
rs
, 
num_runs
*(
run_sˇn_t
));

1272 
	`w_as£π1
(
rs
);

1273 
w_auto_dñëe_¨øy_t
<
run_sˇn_t
> 
	`auto_dñ_run
(
rs
);

1274 
k
 = 0; k<
num_runs
; k++) {

1275 
	`W_DO
–
rs
[
k
].
	`öô
(
ö_li°
[
b
+k], 
sd
->
comp
, 
ki
, 
•
.
unique
) );

1276 
	`DBG
(<<"run[" << 
k
 << "].fú°Ñid=" << 
rs
[k].
	`∑ge
());

1279 #ifde‡
COMMENT


1280 
	`DBG
(<< "öô'd HEAP o‡" << 
num_runs
 << "runs, bp.npages="

1281 << 
bf
->
	`≈ages
()

1285 i‡(
num_runs
 =1Ë
m_hóp
[0] = 0;

1287 
k
 = 
num_runs
-1, 
hóp_size
 = 1; k > 0;

1288 
hóp_size
 <<1, 
k
 >>= 1) ;

1289 
	`¸óã_hóp
(
m_hóp
, 
hóp_size
, 
num_runs
, 
rs
);

1292 
boﬁ
 
_eof
, 
√w_∑π
 = 
åue
;

1293 
rid_t
 
rid
;

1294 c⁄° 
ªc‹d_t
 *
ªc
 = 0, *
_ﬁd_ªc
 = 0;

1295 
boﬁ
 
fú°_ªc
 = 
åue
;

1297 
uöt2_t
 
_r
;

1298 
hóp_t›_cou¡
=0;

1299 
_r
 = 
m_hóp
[0]; 
num_runs
 > 1;

1300 
_r
 = 
	`hóp_t›
(
m_hóp
, 
hóp_size
, _r, 
rs
))

1302 ++
hóp_t›_cou¡
;

1303 
	`W_DO
–
rs
[
_r
].
	`cuºít
(
ªc
) );

1304 i‡(
•
.
unique
) {

1305 i‡(
fú°_ªc
) {

1306 
_ﬁd_ªc
 = 
ªc
;

1307 
fú°_ªc
 = 
Ál£
;

1309 
	`W_DO
(
	`Êush_⁄e_ªc
(
_ﬁd_ªc
, 
rid
, 
out_fûe
, 
œ°_∑ge
,

1310 
to_föÆ_fûe
));

1311 
_ﬁd_ªc
 = 
ªc
;

1312 i‡(
√w_∑π
) {

1313 
out_li°
[
out_li°_˙t
++] = 
rid
;

1314 
√w_∑π
 = 
Ál£
;

1318 
	`W_DO
–
	`Êush_⁄e_ªc
(
ªc
, 
rid
, 
out_fûe
, 
œ°_∑ge
,

1319 
to_föÆ_fûe
) );

1320 i‡(
√w_∑π
) {

1321 
out_li°
[
out_li°_˙t
++] = 
rid
;

1322 
√w_∑π
 = 
Ál£
;

1325 
	`W_DO
–
rs
[
_r
].
	`√xt
(
_eof
) );

1326 i‡(
_eof
Ë--
num_runs
;

1328 
	`DBG
(<<"PuŒed of‡hóp: " << 
hóp_t›_cou¡
 );

1330 
èû_of_run
=0;

1332 
èû_of_run
++;

1333 
	`W_DO
–
rs
[
_r
].
	`cuºít
(
ªc
) );

1334 i‡(
•
.
unique
) {

1335 i‡(
fú°_ªc
) {

1336 
_ﬁd_ªc
 = 
ªc
;

1337 
fú°_ªc
 = 
Ál£
;

1339 
	`W_DO
(
	`Êush_⁄e_ªc
(
_ﬁd_ªc
, 
rid
, 
out_fûe
, 
œ°_∑ge
,

1340 
to_föÆ_fûe
));

1341 
_ﬁd_ªc
 = 
ªc
;

1342 i‡(
√w_∑π
) {

1343 
out_li°
[
out_li°_˙t
++] = 
rid
;

1344 
√w_∑π
 = 
Ál£
;

1348 
	`W_DO
–
	`Êush_⁄e_ªc
(
ªc
, 
rid
, 
out_fûe
, 
œ°_∑ge
,

1349 
to_föÆ_fûe
) );

1351 i‡(
√w_∑π
) {

1352 
out_li°
[
out_li°_˙t
++] = 
rid
;

1353 
√w_∑π
 = 
Ál£
;

1357 
	`W_DO
–
rs
[
_r
].
	`√xt
(
_eof
) );

1359 } !
_eof
);

1360 
	`DBG
(<<"èû o‡ru¿" << 
èû_of_run
);

1362 i‡(
•
.
unique
) {

1363 
	`W_DO
–
	`Êush_⁄e_ªc
(
_ﬁd_ªc
, 
rid
, 
out_fûe
, 
œ°_∑ge
,

1364 
to_föÆ_fûe
) );

1365 i‡(
√w_∑π
) {

1366 
out_li°
[
out_li°_˙t
++] = 
rid
;

1367 
√w_∑π
 = 
Ál£
;

1370 i‡(!
œ°_∑ss
) {

1372 
vec_t
 
hdr
, 
	`d©a
((*)&
_m¨kî_
, ());

1373 
	`W_DO
–
fi
->
	`¸óã_ªc_©_íd
(

1374 
œ°_∑ge
, (), 
hdr
, 
d©a
,

1375 *
sd
->
sdesc
, 
rid
) );

1377 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

1378 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
d©a
.size());

1382 
	`DBGTHRD
(<<"abouàtÿde°roy " << 
ö_fûe
);

1383 
	`W_DO
 ( 
SSM
->
	`_de°roy_fûe
(
ö_fûe
) );

1386  
RCOK
;

1387 
	}
}

1389 
NORET


1390 
	gs‹t_°ªam_i
::
	$s‹t_°ªam_i
(Ë: 
	`x˘_dïídít_t
(
	$x˘
())

1392 
_fûe_s‹t
 = 
s‹ãd
 = 
eof
 = 
Ál£
;

1393 
em±y
 = 
åue
;

1394 
hóp
=0;

1395 
sc
=0;

1396 
sd
 = 
√w
 
s‹t_desc_t
;

1397 
	`ªc‹d_mÆloc
(
sd
, (
s‹t_desc_t
));

1398 
_⁄˚
 = 
Ál£
;

1399 
	`ªgi°î_me
();

1400 
	}
}

1402 
NORET


1403 
	gs‹t_°ªam_i
::
	$s‹t_°ªam_i
(c⁄° 
key_öfo_t
& 
k
, c⁄° 
s‹t_∑rm_t
& 
s
,

1404 
uöt
 
e°_ªc_sz
Ë: 
	`x˘_dïídít_t
(
	$x˘
())

1407 
_fûe_s‹t
 = 
s‹ãd
 = 
eof
 = 
Ál£
;

1408 
em±y
 = 
åue
;

1409 
hóp
=0;

1410 
sc
=0;

1412 
sd
 = 
√w
 
s‹t_desc_t
;

1413 
	`ªc‹d_mÆloc
(
sd
, (
s‹t_desc_t
));

1414 
ki
 = 
k
;

1415 
•
 = 
s
;

1417 
•
.
run_size
 = (sp.run_size<3) ? 3 : sp.run_size;

1418 i‡(
e°_ªc_sz
==0) {

1420 
e°_ªc_sz
 = (
k
.
e°_ª˛í
 ? k.est_reclen : 20);

1424 
sd
->
max_ªc_˙t
 = (
uöt
Ë(
fûe_p
::
d©a_sz
 /

1426 
	`Æign
((
ª˘ag_t
)Ë+álign(
e°_ªc_sz
)

1434 +(
∑ge_s
::
¶Ÿ_t
)

1436 * 
•
.
run_size
);

1437 #ifde‡
W_TRACE


1438 if(
sd
->
max_ªc_˙t
 <= 0) {

1439 
˚º


1440 << " fûe_p::d©a_sz " << 
fûe_p
::
d©a_sz


1441 << 
ídl


1442 << " sizeof‘e˘ag_tË" << (
ª˘ag_t
)

1443 << 
ídl


1444 << " ALIGNON " << 
ALIGNON


1445 << 
ídl


1446 << "É°_ªc_sz " << 
e°_ªc_sz


1447 << 
ídl


1448 << " sizeof’age_s::¶Ÿ_tË" << (
∑ge_s
::
¶Ÿ_t
)

1449 << 
ídl


1450 << " sp.run_sizê" << 
•
.
run_size


1451 << 
ídl
;

1452 
˚º
 << "álign(sizeof(rectag_t)+ALIGNON+est_rec_sz) "

1453 << 
	`Æign
((
ª˘ag_t
)+
ALIGNON
+
e°_ªc_sz
)

1454 << 
ídl


1456 << (
	`Æign
((
ª˘ag_t
)+
ALIGNON
+
e°_ªc_sz
)

1457 +(
∑ge_s
::
¶Ÿ_t
))

1458 << 
ídl
;

1461 
	`w_as£π1
(
sd
->
max_ªc_˙t
 > 0);

1463 
sd
->
comp
 = 
	`gë_cmp_func
(
ki
.
ty≥
, 
•
.
as˚ndög
);

1464 
_⁄˚
 = 
Ál£
;

1465 
	`ªgi°î_me
();

1466 
	}
}

1468 
NORET


1469 
	gs‹t_°ªam_i
::~
	$s‹t_°ªam_i
()

1471 i‡(
hóp
) {

1472 
	`ªc‹d_‰ì
(
hóp
, 0);

1473 
dñëe
 [] 
hóp
;

1475 i‡(
sc
) {

1476 
	`ªc‹d_‰ì
(
sc
, 0);

1477 
dñëe
 [] 
sc
;

1479 i‡(
sd
) {

1480 i‡(
sd
->
tmp_fid
!=
°id_t
::
nuŒ
) {

1481 
	`DBGTHRD
(<<"abouàtÿde°roy " << 
sd
->
tmp_fid
);

1482 
	`W_IGNORE
 ( 
SSM
->
	`_de°roy_fûe
(
sd
->
tmp_fid
) );

1484 
	`ªc‹d_‰ì
(
sd
, 0);

1485 
dñëe
 
sd
;

1487 
	}
}

1490 
	gs‹t_°ªam_i
::
	$föish
()

1492 i‡(
hóp
) {

1493 
	`ªc‹d_‰ì
(
hóp
, 0);

1494 
dñëe
 [] 
hóp
; heap = 0;

1496 i‡(
sc
) {

1497 
	`ªc‹d_‰ì
(
sc
, 0);

1498 
dñëe
 [] 
sc
; sc = 0;

1500 i‡(
sd
) {

1501 i‡(
sd
->
tmp_fid
!=
°id_t
::
nuŒ
) {

1502 i‡(
	`x˘
()) {

1503 
	`DBGTHRD
(<<"abouàtÿde°roy " << 
sd
->
tmp_fid
);

1504 
	`W_COERCE
 ( 
SSM
->
	`_de°roy_fûe
(
sd
->
tmp_fid
) );

1507 
	`ªc‹d_‰ì
(
sd
, 0);

1508 
dñëe
 
sd
;

1509 
sd
 = 0;

1511 
	}
}

1514 
	gs‹t_°ªam_i
::
	$x˘_°©e_ch™ged
(

1515 
x˘_°©e_t
 ,

1516 
x˘_°©e_t
 
√w_°©e
)

1518 i‡(
√w_°©e
 =
x˘_ab‹tög
 ||Çew_°©ê=
x˘_commôtög
) {

1519 
	`föish
();

1521 
	}
}

1524 
	gs‹t_°ªam_i
::
	$öô
(c⁄° 
key_öfo_t
& 
k
, c⁄° 
s‹t_∑rm_t
& 
s
, 
uöt
 
e°_ªc_sz
)

1526 
_fûe_s‹t
 = 
s‹ãd
 = 
eof
 = 
Ál£
;

1527 
ki
 = 
k
;

1528 
•
 = 
s
;

1530 
•
.
run_size
 = (sp.run_size<3) ? 3 : sp.run_size;

1532 i‡(!
e°_ªc_sz
) {

1534 
e°_ªc_sz
 = 20;

1537 
sd
->
max_ªc_˙t
 = (
uöt
Ë(
fûe_p
::
d©a_sz
 /

1538 (
	`Æign
((
ª˘ag_t
)+
e°_ªc_sz
)+(
∑ge_s
::
¶Ÿ_t
))

1539 * 
•
.
run_size
);

1543 i‡(
sd
->
keys
) {

1544 
i
=0; i < 
sd
->
ªc_cou¡
; i++) {

1545 
	`ªc‹d_‰ì
(
sd
->
keys
[
i
], (
s‹t_key_t
));

1546 
	`dñëe
 ((
s‹t_key_t
*Ë
sd
->
keys
[
i
]);

1549 
i
=
sd
->
ªc_cou¡
; i < sd->
max_ªc_˙t
; i++) {

1550 
	`w_as£π2
(
sd
->
keys
[
i
] =
NULL
);

1552 
	`ªc‹d_‰ì
(
sd
->
keys
, (sd->
max_ªc_˙t
 * (
s‹t_key_t
*)));

1553 
dñëe
 [] 
sd
->
keys
;

1554 
sd
->
keys
 = 0;

1559 i‡(
sd
->
fkeys
) {

1560 
i
=0; i<
sd
->
ªc_cou¡
; i++) {

1561 
	`ªc‹d_‰ì
(
sd
->
fkeys
[
i
], (
fûe_s‹t_key_t
));

1562 
	`dñëe
 ((
fûe_s‹t_key_t
*Ë
sd
->
fkeys
[
i
]);

1565 
i
=
sd
->
ªc_cou¡
; i < sd->
max_ªc_˙t
; i++) {

1566 
	`w_as£π2
(
sd
->
fkeys
[
i
] =
NULL
);

1568 
	`ªc‹d_‰ì
(
sd
->
fkeys
, (sd->
max_ªc_˙t
 * (
fûe_s‹t_key_t
*)));

1569 
dñëe
 [] 
sd
->
fkeys
;

1570 
sd
->
fkeys
 = 0;

1573 
sd
->
ªc_cou¡
 = 0;

1575 
sd
->
comp
 = 
	`gë_cmp_func
(
ki
.
ty≥
, 
•
.
as˚ndög
);

1577 i‡(
sc
) {

1578 
	`ªc‹d_‰ì
(
sc
, 0);

1579 
dñëe
 [] 
sc
; sc = 0;

1582 i‡(
sd
->
tmp_fid
!=
°id_t
::
nuŒ
) {

1583 
	`W_COERCE
–
SSM
->
	`_de°roy_fûe
(
sd
->
tmp_fid
) );

1584 
sd
->
tmp_fid
 = 
°id_t
::
nuŒ
;

1587 
_fûe_s‹t
 = 
Ál£
;

1588 
	}
}

1590 
rc_t


1591 
	gs‹t_°ªam_i
::
	$put
(c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñem
)

1593 
	`SM_PROLOGUE_RC
(
s‹t_°ªam_i
::
put
, 
ö_x˘
, 
ªad_wrôe
, 0);

1594 
	`w_as£π1
(!
_fûe_s‹t
);

1596 i‡(
sd
->
ªc_cou¡
 >sd->
max_ªc_˙t
) {

1598 
	`W_DO
 ( 
	`Êush_run
() );

1601 i‡(!
sd
->
keys
) {

1602 
sd
->
keys
 = 
√w
 * [sd->
max_ªc_˙t
];

1603 
	`ªc‹d_mÆloc
(
sd
->
keys
, (*Ë* sd->
max_ªc_˙t
);

1604 
	`w_as£π1
(
sd
->
keys
);

1605 
	`mem£t
(
sd
->
keys
, 0, sd->
max_ªc_˙t
*(*));

1606 
	`DBG
(<<"Æloˇãdánd zî€d key†" << (*)
sd
->
keys


1607 << "Ñec_˙à" << 
sd
->
ªc_cou¡


1608 << " max_ªc_˙à" << 
sd
->
max_ªc_˙t


1609 << " sizê" << ((*Ë* 
sd
->
max_ªc_˙t
) );

1610 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1611 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
max_ªc_˙t
 * (*));

1614 
s‹t_key_t
* 
k
 = (s‹t_key_t*Ë
sd
->
keys
[sd->
ªc_cou¡
];

1615 
	`DBG
(<<"exi°ög key†" << (*)(
sd
->
keys
)

1616 << " max_ªc_˙à" << 
sd
->
max_ªc_˙t
 );

1617 i‡(!
k
) {

1618 
k
 = 
√w
 
s‹t_key_t
;

1619 
	`ªc‹d_mÆloc
(
k
, (
s‹t_key_t
));

1620 
sd
->
keys
[sd->
ªc_cou¡
] = (*Ë
k
;

1622 i‡(
k
->
vÆ
) {

1624 
	`ªc‹d_‰ì
(
k
->
vÆ
, k->
kÀn
);

1625 
dñëe
 [] 
k
->
vÆ
;

1626 
k
->
kÀn
 = 0;

1628 i‡(
k
->
ªc
) {

1630 
	`ªc‹d_‰ì
(
k
->
ªc
, k->
æí
);

1631 
dñëe
 [] 
k
->
ªc
;

1632 
k
->
æí
 = 0;

1637 
k
->
vÆ
 = 
√w
 [
key
.
	`size
()];

1638 
	`ªc‹d_mÆloc
(
k
->
vÆ
, 
key
.
	`size
());

1639 
key
.
	`c›y_to
(
k
->
vÆ
, key.
	`size
());

1640 
k
->
kÀn
 = 
key
.
	`size
();

1643 
k
->
æí
 = 
ñem
.
	`size
();

1644 
k
->
ªc
 = 
√w
 [k->
æí
];

1645 
	`ªc‹d_mÆloc
(
k
->
ªc
, k->
æí
);

1646 
ñem
.
	`c›y_to
(
k
->
ªc
, k->
æí
);

1648 
sd
->
ªc_cou¡
++;

1650 i‡(
em±y
Ëem±y = 
Ál£
;

1652  
RCOK
;

1653 
	}
}

1655 
rc_t


1656 
	gs‹t_°ªam_i
::
	$fûe_put
(c⁄° 
cvec_t
& 
key
, c⁄° * 
ªc
, 
uöt
 
æí
,

1657 
uöt
 
hÀn
, c⁄° 
ª˘ag_t
* 
èg
)

1659 
	`w_as£π1
(
_fûe_s‹t
);

1661 i‡(
sd
->
ªc_cou¡
 >sd->
max_ªc_˙t
) {

1663 i‡(
_⁄˚
) {

1664 i‡(
sd
->
fkeys
) {

1665 ** 
√w_keys
 = 
√w
 * [
sd
->
max_ªc_˙t
<<1];

1666 
	`ªc‹d_mÆloc
(
√w_keys
, (
sd
->
max_ªc_˙t
<<1) * (*));

1667 
	`mem˝y
(
√w_keys
, 
sd
->
fkeys
, sd->
max_ªc_˙t
*(*));

1668 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1669 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
max_ªc_˙t
 * (*));

1671 
	`mem£t
(&
√w_keys
[
sd
->
max_ªc_˙t
], 0, sd->max_rec_cnt*(*));

1672 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1673 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
max_ªc_˙t
 * (*));

1676 
	`mem£t
(
sd
->
fkeys
, 0, sd->
max_ªc_˙t
*(*));

1677 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1678 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
max_ªc_˙t
 * (*));

1680 
	`ªc‹d_‰ì
(
sd
->
fkeys
, 0);

1681 
dñëe
 [] 
sd
->
fkeys
;

1682 
sd
->
fkeys
 = 
√w_keys
;

1684 
sd
->
max_ªc_˙t
 <<= 1;

1687 
	`W_DO
 ( 
	`Êush_run
() );

1691 i‡(!
sd
->
fkeys
) {

1692 
sd
->
fkeys
 = 
√w
 * [sd->
max_ªc_˙t
];

1693 
	`ªc‹d_mÆloc
(
sd
->
fkeys
, (sd->
max_ªc_˙t
) * (*));

1694 
	`w_as£π1
(
sd
->
fkeys
);

1695 
	`mem£t
(
sd
->
fkeys
, 0, sd->
max_ªc_˙t
*(*));

1696 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1697 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
sd
->
max_ªc_˙t
 * (*));

1700 
fûe_s‹t_key_t
* 
k
 = (fûe_s‹t_key_t*Ë
sd
->
fkeys
[sd->
ªc_cou¡
];

1701 i‡(!
k
) {

1702 
k
 = 
√w
 
fûe_s‹t_key_t
;

1703 
	`ªc‹d_mÆloc
(
k
, (
fûe_s‹t_key_t
));

1704 
sd
->
fkeys
[sd->
ªc_cou¡
] = (*Ë
k
;

1706 i‡(
k
->
hdr
) {

1707 
	`ªc‹d_‰ì
(
k
->
hdr
, 0);

1708 
dñëe
 [] 
k
->
hdr
;

1713 
k
->
hdr
 = 
√w
 [
key
.
	`size
()];

1714 
	`ªc‹d_mÆloc
(
k
->
hdr
, 
key
.
	`size
());

1715 
key
.
	`c›y_to
((*)
k
->
hdr
, key.
	`size
());

1716 
k
->
vÆ
 = k->
hdr
;

1717 
k
->
kÀn
 = k->
hÀn
 = 
key
.
	`size
();

1719 i‡(!
ki
.
dîived
 && ki.
Àn
 > 0) {

1721 
k
->
kÀn
 -
hÀn
;

1725 
k
->
ªc
 = (*)Ñec;

1726 
k
->
æí
 =Ñlen;

1727 i‡(
èg
 && !—ag->
Êags
 & 
t_smÆl
))

1728 
k
->
bÀn
 = 
èg
->
body_Àn
;

1730 
k
->
bÀn
 = 
æí
;

1732 
sd
->
ªc_cou¡
++;

1733 i‡(
em±y
Ëem±y = 
Ál£
;

1735  
RCOK
;

1736 
	}
}

1738 
rc_t


1739 
	gs‹t_°ªam_i
::
	$gë_√xt
(
vec_t
& 
key
, vec_t& 
ñem
, 
boﬁ
& 
íd
)

1741 
fûl4
 
fûÀr
;

1742 
	`W_DO
–
	`fûe_gë_√xt
(
key
, 
ñem
, 
fûÀr
.
u4
, 
íd
) );

1744  
RCOK
;

1745 
	}
}

1748 
rc_t


1749 
	gs‹t_°ªam_i
::
	$fûe_gë_√xt
(
vec_t
& 
key
, vec_t& 
ñem
, 
uöt4_t
& 
bÀn
, 
boﬁ
& 
íd
)

1751 
íd
 = 
eof
;

1752 i‡(
eof
) {

1753 
	`föish
();

1754  
RCOK
;

1757 i‡(!
s‹ãd
) {

1759 
	`W_DO
 ( 
	`Êush_run
() );

1762 
sd
->
	`‰ì_•a˚
();

1765 
	`W_DO
 ( 
	`mîge
(
åue
) );

1767 
s‹ãd
 = 
åue
;

1769 i‡(
num_runs
==0) {

1770 
íd
 = 
eof
 = 
åue
;

1771 
	`föish
();

1772  
RCOK
;

1776 i‡(
sc
) {

1777 
	`ªc‹d_‰ì
(
sc
, 0);

1778 
dñëe
 [] 
sc
;

1780 
sc
 = 
√w
 
run_sˇn_t
[
num_runs
];

1781 
	`ªc‹d_mÆloc
(
sc
, 
num_runs
* (
run_sˇn_t
));

1783 
uöt4_t
 
k
;

1784 
k
 = 0; k<
num_runs
; k++) {

1785 
	`W_DO
–
sc
[
k
].
	`öô
(
sd
->
run_li°
[k], sd->
comp
, 
ki
, 
•
.
unique
) );

1788 
k
 = 
num_runs
-1, 
hóp_size
 = 1; k > 0; heap_size <<= 1, k >>= 1) ;

1789 i‡(
hóp
) {

1790 
	`ªc‹d_‰ì
(
hóp
, 0);

1791 
dñëe
 [] 
hóp
;

1793 
hóp
 = 
√w
 
öt2_t
[
hóp_size
];

1794 
	`ªc‹d_mÆloc
(
hóp
, 
hóp_size
* (
öt2_t
));

1796 i‡(
num_runs
 == 1) {

1797 
r
 = 
hóp
[0] = 0;

1799 
	`¸óã_hóp
(
hóp
, 
hóp_size
, 
num_runs
, 
sc
);

1800 
r
 = 
hóp
[0];

1801 
r
 = 
	`hóp_t›
(
hóp
, 
hóp_size
,Ñ, 
sc
);

1804 
ﬁd_ªc
 = 0;

1808 c⁄° 
ªc‹d_t
 *
ªc
;

1809 
boﬁ
 
∑π_eof
;

1811 
	`W_DO
 ( 
sc
[
r
].
	`cuºít
(
ªc
) );

1821 i‡(
•
.
unique
) {

1822 i‡(
ﬁd_ªc
) {

1823 
boﬁ
 
ßme
 = 
	`du∂iˇã_ªc
(
ﬁd_ªc
, 
ªc
);

1824 
ßme
 && 
num_runs
>1)

1826 
ﬁd_ªc
 = 
ªc
;

1827 
	`W_DO
 ( 
sc
[
r
].
	`√xt
(
∑π_eof
) );

1829 
r
 = 
	`hóp_t›
(
hóp
, 
hóp_size
,Ñ, 
sc
);

1830 i‡(
∑π_eof
)

1832 
num_runs
--;

1834 
	`W_DO
 ( 
sc
[
r
].
	`cuºít
(
ªc
) );

1835 
ßme
 = 
	`du∂iˇã_ªc
(
ﬁd_ªc
, 
ªc
);

1838 i‡(
ßme
)

1842 
ﬁd_ªc
 = 
ªc
;

1843 
	`W_DO
 ( 
sc
[
r
].
	`cuºít
(
ªc
) );

1844 i‡(!
	`du∂iˇã_ªc
(
ﬁd_ªc
, 
ªc
))

1846 
	`W_DO
 ( 
sc
[
r
].
	`√xt
(
∑π_eof
) );

1847 i‡(
∑π_eof
) {

1849 
íd
 = 
eof
 = 
åue
;

1850 
	`föish
();

1851  
RCOK
;

1856 
ﬁd_ªc
 = 
ªc
;

1860 
key
.
	`put
(
ªc
->
	`hdr
(),Ñec->
	`hdr_size
());

1861 
ñem
.
	`put
(
ªc
->
	`body
(), 
	`ªc_size
(rec));

1863 i‡(
_fûe_s‹t
Ë{ 
bÀn
 = 
ªc
->
	`body_size
(); }

1866 
	`W_DO
 ( 
sc
[
r
].
	`√xt
(
∑π_eof
) );

1868 i‡(
num_runs
>1)

1869 
r
 = 
	`hóp_t›
(
hóp
, 
hóp_size
,Ñ, 
sc
);

1871 i‡(
∑π_eof
) {

1872 i‡(--
num_runs
 < 1) {

1873 
eof
 = 
åue
;

1877  
RCOK
;

1878 
	}
}

1883 
rc_t


1884 
	$_c›y_out_œrge_obj
(

1885 c⁄° 
ªc‹d_t
* 
ªc
,

1886 * 
d©a
,

1887 
uöt4_t
 
°¨t
,

1888 
uöt4_t
 
Àn
,

1889 c⁄° 
fûe_p
& 
hdr_∑ge
)

1891 
Õid_t
 
d©a_pid
;

1892 
lgd©a_p
 
∑ge
;

1893 * 
buf_±r
 = (*Ë
d©a
;

1894 
uöt4_t
 
°¨t_byã
, 
√w_°¨t
 = 
°¨t
, 
ønge
, 
À·
 = 
Àn
, 
off£t
;

1896 
	`w_as£π1
(!
ªc
->
	`is_smÆl
());

1898 
À·
>0) {

1899 
d©a_pid
 = 
ªc
->
	`pid_c⁄èöög
(
√w_°¨t
, 
°¨t_byã
, 
hdr_∑ge
);

1900 
off£t
 = 
√w_°¨t
-
°¨t_byã
;

1901 
ønge
 = 
	`MIN
(
lgd©a_p
::
d©a_sz
-
off£t
, 
ªc
->
	`body_size
()-
√w_°¨t
);

1902 
ønge
 = 
	`MIN
(
À·
,Ñange);

1903 
	`W_DO
–
∑ge
.
	`fix
(
d©a_pid
, 
LATCH_SH
) );

1904 
	`INC_TSTAT_SORT
(
s‹t_lg_∑ge_fixes
);

1906 
	`mem˝y
(
buf_±r
, (*Ë
∑ge
.
	`tu∂e_addr
(0)+
off£t
, ()
ønge
);

1907 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

1908 #ifde‡
INSTRUMENT_SORT


1909 
ba£_°©_t
 
r
 = 
	`ba£_°©_t
(
ønge
);

1911 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, ()(
r
));

1913 
buf_±r
 +
ønge
;

1914 
√w_°¨t
 +
ønge
;

1915 
À·
 -
ønge
;

1918 
	`w_as£π1
(
À·
==0);

1920  
RCOK
;

1921 
	}
}

1924 
rc_t


1925 
	gss_m
::
	$_s‹t_fûe
(c⁄° 
°id_t
& 
fid
, 
vid_t
 
vid
, stid_t& 
sfid
,

1926 
sm_°‹e_¥›îty_t
 
¥›îty
,

1927 c⁄° 
key_öfo_t
& 
key_öfo
, 
run_size
,

1928 
boﬁ
 
as˚ndög
,

1929 
boﬁ
 
unique
, boﬁ 
de°ru˘ive


1933 
i
, 
j
;

1935 i‡(
run_size
 < 3)Ñun_size = 3;

1937 
	`SET_TSTAT_SORT
(
s‹t_run_size
, 
run_size
);

1940 
s‹t_∑rm_t
 
•
;

1941 
•
.
as˚ndög
 =áscending;

1942 
•
.
unique
 = unique;

1943 
•
.
vﬁ
 = 
vid
;

1944 
•
.
¥›îty
 =Öroperty;

1945 
•
.
de°ru˘ive
 = destructive;

1947 
boﬁ
 
œrge_obj
 = 
Ál£
;

1948 
°id_t
 
lg_fid
;

1949 
sdesc_t
* 
sdesc
;

1950 
rid_t
 
rid
;

1951 i‡(!
•
.
de°ru˘ive
) {

1955 
	`W_DO
 ( 
	`_¸óã_fûe
(
vid
, 
lg_fid
, 
¥›îty
) );

1956 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

1957 
	`W_COERCE
–
dú
->
	`ac˚ss
(
lg_fid
, 
sdesc
, 
NL
) );

1958 
	`w_as£π1
(
sdesc
);

1961 
fûe_p
 
œ°_lg_∑ge
;

1963 
key_öfo_t
 
köfo
 = 
key_öfo
;

1964 
boﬁ
 
Á°_•©ül
 = (
köfo
.
ty≥
==
s‹t‹dî
::
kt_•©ül
 && !
•
.
unique
);

1965 i‡(
Á°_•©ül
) {

1968 
köfo
.
ty≥
 = 
s‹t‹dî
::
kt_i4
;

1969 
köfo
.
Àn
 = ();

1972 
	`w_as£π1
((
köfo
.
Àn
>0) ||

1973 (
köfo
.
Àn
==0 && (köfo.
ty≥
)==(
key_öfo_t
::
t_°rög
)));

1975 
Õid_t
 
pid
, 
fú°_pid
;

1976 
	`W_DO
–
fi
->
	`fú°_∑ge
(
fid
, 
pid
, 
NULL
 ) );

1977 
fú°_pid
 = 
pid
;

1982 
boﬁ
 
eof
 = 
Ál£
;

1983 
SmFûeMëaSèts
 
fûe_°©s
;

1984 
fûe_°©s
.
smÆlSnum
 = 
fid
.
°‹e
;

1986 
	`W_DO
(
io
->
	`gë_fûe_mëa_°©s
(
fid
.
vﬁ
, 1, &
fûe_°©s
));

1988 
pcou¡
 = (
fûe_°©s
.
smÆl
.
numAŒocPages
);

1991 
boﬁ
 
⁄˚
 = (
pcou¡
<=
run_size
);

1992 i‡(
⁄˚
Ë
run_size
 = 
pcou¡
;

1994 
	`SET_TSTAT_SORT
(
s‹t_run_size
, 
run_size
);

1997 
•
.
run_size
 =Ñun_size;

1998 
s‹t_°ªam_i
 
	`s‹t_°ªam
(
köfo
, 
•
);

2000 i‡(
⁄˚
) {

2001 
s‹t_°ªam
.
	`£t_fûe_s‹t_⁄˚
(
¥›îty
);

2003 
s‹t_°ªam
.
	`£t_fûe_s‹t
();

2010 
pid
 = 
fú°_pid
;

2012 
fûe_p
* 
Â
 = 
√w
 fûe_p[
pcou¡
];

2013 
	`ªc‹d_mÆloc
(
Â
, 
pcou¡
* (
fûe_p
));

2014 
w_auto_dñëe_¨øy_t
<
fûe_p
> 
	`auto_dñ_Â
(
Â
);

2016 
eof
 = 
Ál£
; !Éof; ) {

2017 
i
=0; i<
run_size
 && !
eof
; i++) {

2018 
	`W_DO
–
Â
[
i
].
	`fix
(
pid
, 
LATCH_SH
) );

2019 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

2020 
j
 = 
Â
[
i
].
	`√xt_¶Ÿ
(0); j; j = fp[i].next_slot(j)) {

2024 c⁄° 
ªc‹d_t
* 
r
;

2025 
	`W_COERCE
–
Â
[
i
].
	`gë_ªc
(
j
, 
r
) );

2027 c⁄° *
kvÆ
, *
hdr
, *
ªc
;

2028 
uöt
 
æí
, 
hÀn
, 
kÀn
 = 
key_öfo
.
Àn
;

2030 
hdr
 = 
r
->
	`hdr
();

2031 
hÀn
 = 
r
->
	`hdr_size
();

2033 i‡(!
r
->
	`is_smÆl
()) {

2036 
œrge_obj
 = 
åue
;

2037 i‡(
•
.
de°ru˘ive
) {

2038 
ªc
 = 
r
->
	`body
();

2039 
æí
 = 
	`ªc_size
(
r
);

2042 
æí
 = (
uöt
Ë
r
->
	`body_size
();

2045 * 
buf
 = 
√w
 [
æí
];

2046 
	`ªc‹d_mÆloc
(
buf
, 
æí
);

2047 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_buf
(
buf
);

2048 
	`W_DO
–
	`_c›y_out_œrge_obj
(
r
, 
buf
, 0, 
æí
, 
Â
[
i
]) );

2050 
vec_t
 
b_hdr
, 
	`b_ªc
(
buf
, 
æí
);

2052 
	`W_COERCE
–
dú
->
	`ac˚ss
(
lg_fid
, 
sdesc
, 
NL
) );

2053 
	`w_as£π1
(
sdesc
);

2054 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
–
œ°_lg_∑ge
,

2055 
æí
, 
b_hdr
, 
b_ªc
, *
sdesc
, 
rid
) );

2056 
	`INC_TSTAT_SORT
(
s‹t_ªcs_¸óãd
);

2057 
	`ADD_TSTAT_SORT
(
s‹t_ªc_byãs
, 
b_hdr
.
	`size
(Ë+ 
b_ªc
.size());

2059 
fûe_p
 
tmp
;

2060 
	`W_DO
–
fi
->
	`loˇã_∑ge
(
rid
, 
tmp
, 
LATCH_SH
) );

2061 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

2062 c⁄° 
ªc‹d_t
* 
ƒ
;

2063 
	`W_COERCE
–
tmp
.
	`gë_ªc
(
rid
.
¶Ÿ
, 
ƒ
) );

2065 
æí
 = 
	`ªc_size
(
ƒ
);

2066 * 
nbuf
 = 
s‹t_°ªam
.
buf_•a˚
.
	`Æloc
(
æí
);

2067 
	`mem˝y
(
nbuf
, 
ƒ
->
	`body
(), 
æí
);

2068 
	`INC_TSTAT_SORT
(
s‹t_mem˝y_˙t
);

2069 
	`ADD_TSTAT_SORT
(
s‹t_mem˝y_byãs
, 
æí
);

2070 
ªc
 = 
nbuf
;

2073 i‡(
key_öfo
.
whîe
==
key_öfo_t
::
t_hdr
) {

2074 
kvÆ
 = (*)
hdr
 + 
key_öfo
.
off£t
;

2075 i‡(
key_öfo
.
Àn
 == 0)

2078 
kÀn
 = 
hÀn
;

2082 * 
buf
 = 
s‹t_°ªam
.
buf_•a˚
.
	`Æloc
(
key_öfo
.
Àn
);

2083 
	`W_DO
–
	`_c›y_out_œrge_obj
(
r
, 
buf
, 
key_öfo
.
off£t
,

2084 
key_öfo
.
Àn
, 
Â
[
i
]) );

2085 
kvÆ
 = 
buf
;

2088 
ªc
 = 
r
->
	`body
();

2089 
æí
 = 
	`ªc_size
(
r
);

2090 
kvÆ
 = (*Ë((
key_öfo
.
whîe
==
key_öfo_t
::
t_hdr
)

2091 ? 
hdr
 : 
ªc
Ë+ 
key_öfo
.
off£t
;

2095 
cvec_t
 
key
;

2096 
hvÆue
;

2097 i‡(
Á°_•©ül
) {

2100 
_box_
.
	`byãs2box
((c⁄° *)
kvÆ
, ()
key_öfo
.
Àn
);

2101 
hvÆue
 = 
_box_
.
	`hvÆue
(
key_öfo
.
univî£
);

2102 
key
.
	`put
(&
hvÆue
, ());

2104 
key
.
	`put
(
kvÆ
, ()
kÀn
);

2111 i‡(
hÀn
>0 && !
key_öfo
.
dîived
 && key_öfo.
Àn
 > 0) {

2112 
key
.
	`put
(
hdr
, 
hÀn
);

2115 
	`W_DO
 ( 
s‹t_°ªam
.
	`fûe_put
(
key
, 
ªc
, 
æí
, 
hÀn
, &
r
->
èg
) );

2118 
	`W_DO
–
fi
->
	`√xt_∑ge
(
pid
, 
eof
, 
NULL
 ) );

2119 
	`INC_TSTAT_SORT
(
s‹t_∑ge_fixes
);

2123 
	`W_DO
 ( 
s‹t_°ªam
.
	`Êush_run
() );

2124 
	`INC_TSTAT_SORT
(
s‹t_runs
);

2128 
œ°_lg_∑ge
.
	`unfix
();

2131 i‡(
⁄˚
) {

2133 
sfid
 = 
s‹t_°ªam
.
sd
->
tmp_fid
;

2134 
s‹t_°ªam
.
sd
->
tmp_fid
 = 
°id_t
::
nuŒ
;

2136 i‡(
sfid
 =
°id_t
::
nuŒ
) {

2138 
	`W_DO
 ( 
	`_¸óã_fûe
(
vid
, 
sfid
, 
¥›îty
) );

2139 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

2143 
	`W_DO
 ( 
	`_¸óã_fûe
(
vid
, 
sfid
, 
¥›îty
) );

2144 
	`INC_TSTAT_SORT
(
s‹t_fûes_¸óãd
);

2146 
fûe_p
 
œ°_∑ge
;

2148 i‡(!
s‹t_°ªam
.
	`is_em±y
()) {

2149 
size_t
 
tmp_Àn
 = 1000;

2150 * 
tmp_buf
 = 
√w
 [
tmp_Àn
];

2151 
	`ªc‹d_mÆloc
(
tmp_buf
, 
tmp_Àn
);

2153 i‡(!
tmp_buf
)

2154 
	`W_FATAL
(
fcOUTOFMEMORY
);

2155 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ_buf
(
tmp_buf
);

2157 
boﬁ
 
eof
;

2158 
uöt4_t
 
bÀn
;

2159 
vec_t
 
key
, 
hdr
, 
ªc
;

2160 
	`W_DO
 ( 
s‹t_°ªam
.
	`fûe_gë_√xt
(
key
, 
ªc
, 
bÀn
, 
eof
) );

2162 
uöt
 
off£t
 = 
köfo
.
Àn
;

2164 
	`W_COERCE
–
dú
->
	`ac˚ss
(
sfid
, 
sdesc
, 
NL
) );

2165 
	`w_as£π1
(
sdesc
);

2167 !
eof
) {

2175 i‡(
key
.
	`size
(Ë> 
tmp_Àn
) {

2177 
size_t
 
√w_Àn
 = 
tmp_Àn
 > 1024*512

2178 ? 
key
.
	`size
() + 1024

2179 : 
tmp_Àn
 * 2;

2180 *
√w_buf
 = 
√w
 [
√w_Àn
];

2181 i‡(!
√w_buf
)

2182 
	`W_FATAL
(
fcOUTOFMEMORY
);

2184 
	`ªc‹d_mÆloc
(
√w_buf
, 
√w_Àn
 - 
tmp_Àn
);

2185 
	`ªc‹d_‰ì
(
tmp_buf
, 0);

2186 
dñëe
 [] 
tmp_buf
;

2187 
tmp_buf
 = 
√w_buf
;

2188 
tmp_Àn
 = 
√w_Àn
;

2189 
auto_dñ_buf
.
	`£t
(
tmp_buf
);

2192 
uöt
 
hÀn
;

2194 i‡((
hÀn
=(
uöt
)(
key
.
	`size
()-
off£t
))>0 ) {

2195 
key
.
	`c›y_to
(
tmp_buf
, key.
	`size
());

2197 i‡(
hÀn
>0) {

2198 
hdr
.
	`put
(
tmp_buf
+
off£t
, 
hÀn
);

2200 
	`W_DO
 ( 
fi
->
	`¸óã_ªc_©_íd
(

2201 
œ°_∑ge
,

2202 
ªc
.
	`size
(), 
hdr
,Ñec,

2203 *
sdesc
, 
rid
) );

2204 
	`INC_TSTAT_SORT
(
s‹t_tmpfûe_˙t
);

2205 
	`ADD_TSTAT_SORT
(
s‹t_tmpfûe_byãs
, 
hdr
.
	`size
(Ë+ 
ªc
.size());

2207 i‡(
bÀn
>
ªc
.
	`size
()) {

2211 
	`W_DO
–
fi
->
	`upd©e_ª˘ag
(

2212 
rid
, 
bÀn
, 
	`lgªc_ty≥
(
ªc
.
	`size
())) );

2214 
key
.
	`ª£t
();

2215 
hdr
.
	`ª£t
();

2216 
ªc
.
	`ª£t
();

2217 
	`W_DO
 ( 
s‹t_°ªam
.
	`fûe_gë_√xt
(
key
, 
ªc
, 
bÀn
, 
eof
) );

2223 i‡(
•
.
de°ru˘ive
) {

2224 i‡(
œrge_obj
) {

2225 
	`W_DO
 ( 
	`_de°roy_n_sw≠_fûe
(
fid
, 
sfid
) );

2227 
	`W_DO
 ( 
	`_de°roy_fûe
(
fid
) );

2230 i‡(
œrge_obj
) {

2231 
	`W_DO
 ( 
	`_de°roy_n_sw≠_fûe
(
lg_fid
, 
sfid
) );

2233 
	`W_DO
 ( 
	`_de°roy_fûe
(
lg_fid
) );

2237  
RCOK
;

2238 
	}
}

2240 
rc_t


2241 
	gss_m
::
	$s‹t_fûe
(c⁄° 
°id_t
& 
fid
,

2242 
vid_t
 
vid
,

2243 
°id_t
& 
sfid
,

2244 
sm_°‹e_¥›îty_t
 
¥›îty
,

2245 c⁄° 
key_öfo_t
& 
key_öfo
,

2247 
run_size
,

2248 
boﬁ
 
as˚ndög
,

2249 
boﬁ
 
unique
,

2250 
boﬁ
 
de°ru˘ive
,

2251 
boﬁ
 
u£_√w_s‹t


2255 if(
u£_√w_s‹t
) {

2258 
run_size
++;

2259  
ss_m
::
	`√w_s‹t_fûe
(
fid
, 
vid
, 
sfid
, 
¥›îty
,

2260 
key_öfo
, 
run_size
, 
as˚ndög
,

2261 
unique
, 
de°ru˘ive
);

2264 
	`SM_PROLOGUE_RC
(
ss_m
::
s‹t_fûe
, 
ö_x˘
, 
ªad_wrôe
, 0);

2265 
	`W_DO
(
	`_s‹t_fûe
(
fid
, 
vid
, 
sfid
, 
¥›îty
, 
key_öfo
, 
run_size
,

2266 
as˚ndög
, 
unique
, 
de°ru˘ive
));

2267  
RCOK
;

2268 
	}
}

	@src/sm/sort.h

53 #i‚de‡
SORT_H


54 
	#SORT_H


	)

56 
	~"w_deföes.h
"

66 #unde‡
INSTRUMENT_SORT


67 "C" 
boﬁ
 
s‹t_is_ö°rumítd
();

69 
	~<Àxify.h
>

70 
	~<s‹t_s.h
>

72 #ifde‡
__GNUG__


73 #¥agm®
öãrÁ˚


77 
	gs‹t_desc_t
;

78 
˛ass
 
	grun_sˇn_t
;

360 
	ss_chunk
 {

362 * 
	md©a
;

363 
s_chunk
* 
	m√xt
;

365 
NORET
 
s_chunk
(Ë{ 
	md©a
 = 0; 
	m√xt
 = 0; };

366 
NORET
 
s_chunk
(
w_ba£_t
::
uöt4_t
 
size
, s_chunk* 
èû
) {

367 
	md©a
 = 
√w
 [
size
];

368 
	m√xt
 = 
èû
;

370 
	mNORET
 ~
s_chunk
(Ë{ 
	mdñëe
 [] 
	md©a
; };

373 ˛as†
	cchunk_mgr_t
 {

375 
	m¥iv©e
:

376 
s_chunk
* 
hód
;

378 
	$_‰ì_Æl
() {

379 
s_chunk
* 
cuº
;

380 
hód
) {

381 
cuº
 = 
hód
;

382 
hód
 = hód->
√xt
;

383 
dñëe
 
cuº
;

387 
public
:

389 
NORET
 
	$chunk_mgr_t
(Ë{ 
hód
 = 0; 
	}
};

390 
	gNORET
 ~
	$chunk_mgr_t
(Ë{ 
	`_‰ì_Æl
(); 
	}
};

392 
	$ª£t
(Ë{ 
	`_‰ì_Æl
(); 
hód
 = 0; 
	}
};

394 * 
	$Æloc
(
w_ba£_t
::
uöt4_t
 
size
) {

395 
s_chunk
* 
cuº
 = 
√w
 
	`s_chunk
(
size
, 
hód
);

396 
hód
 = 
cuº
;

397  (*Ë
cuº
->
d©a
;

398 
	}
};

402 
	#PROTOTYPE
(
_∑rms
Ë
	)
_parms

404 #i‚de‡
PFCDEFINED


406 
	#PFCDEFINED


	)

407 (*
	tPFC
Ë
	tPROTOTYPE
((
	tw_ba£_t
::
	tuöt4_t
 
	tkLí1
,

408 c⁄° * 
	tkvÆ1
, 
	tw_ba£_t
::
	tuöt4_t
 
	tkLí2
, c⁄° * 
	tkvÆ2
));

429 
˛ass
 
s‹t_°ªam_i
 : 
public
 
smÀvñ_t›
,Öubli¯
x˘_dïídít_t


431 
ssm_s‹t
::
	tkey_öfo_t
 key_info_t;

432 
ssm_s‹t
::
	ts‹t_∑rm_t
 sort_parm_t;

433 
ssm_s‹t
::
	ts‹t_keys_t
 sort_keys_t;

434 
‰õnd
 
˛ass
 
ss_m
;

436 
public
:

440 
NORET
 
	`s‹t_°ªam_i
();

449 
NORET
 
	`s‹t_°ªam_i
(c⁄° 
key_öfo_t
& 
k
,

450 c⁄° 
s‹t_∑rm_t
& 
s
, 
uöt
 
e°_ªc_sz
=0);

452 
NORET
 ~
	`s‹t_°ªam_i
();

460 
PFC
 
	`gë_cmp_func
(
key_öfo_t
::
key_ty≥_t
 
ty≥
, 
boﬁ
 
up
);

470 
	`öô
(c⁄° 
key_öfo_t
& 
k
, c⁄° 
s‹t_∑rm_t
& 
s
, 
uöt
 
e°_ªc_sz
=0);

473 
	`föish
();

482 
rc_t
 
	`put
(c⁄° 
cvec_t
& 
key
, c⁄° cvec_t& 
ñem
);

492 
rc_t
 
	`gë_√xt
(
vec_t
& 
key
, vec_t& 
ñem
, 
boﬁ
& 
eof
) ;

495 
boﬁ
 
	`is_em±y
(Ëc⁄° {  
em±y
; }

498 
boﬁ
 
	`is_s‹ãd
(Ëc⁄° {  
s‹ãd
; }

500 
¥iv©e
:

501 
	`£t_fûe_s‹t
(Ë{ 
_fûe_s‹t
 = 
åue
; 
_⁄˚
 = 
Ál£
; }

502 
	`£t_fûe_s‹t_⁄˚
(
sm_°‹e_¥›îty_t
 
¥›
)

504 
_fûe_s‹t
 = 
åue
; 
_⁄˚
 =Årue;

505 
_¥›îty
 = 
¥›
;

507 
rc_t
 
	`fûe_put
(c⁄° 
cvec_t
& 
key
, c⁄° * 
ªc
, 
uöt
 
æí
,

508 
uöt
 
hÀn
, c⁄° 
ª˘ag_t
* 
èg
);

510 
rc_t
 
	`fûe_gë_√xt
(
vec_t
& 
key
, vec_t& 
ñem
,

511 
w_ba£_t
::
uöt4_t
& 
bÀn
, 
boﬁ
& 
eof
) ;

513 
rc_t
 
	`Êush_run
();

515 
rc_t
 
	`Êush_⁄e_ªc
(c⁄° 
ªc‹d_t
 *
ªc
, 
rid_t
& 
rid
,

516 c⁄° 
°id_t
& 
out_fid
, 
fûe_p
& 
œ°_∑ge
,

517 
boﬁ
 
to_föÆ_fûe
);

519 
rc_t
 
	`ªmove_du∂iˇãs
();

520 
rc_t
 
	`mîge
(
boﬁ
 
skù_œ°_∑ss
);

522 
	`x˘_°©e_ch™ged
–
x˘_°©e_t
 
ﬁd_°©e
, x˘_°©e_à
√w_°©e
);

524 
key_öfo_t
 
ki
;

525 
s‹t_∑rm_t
 
•
;

526 
s‹t_desc_t
* 
sd
;

528 
boﬁ
 
s‹ãd
;

529 
boﬁ
 
eof
;

530 
boﬁ
 
em±y
;

531 c⁄° 
ªc‹d_t
* 
ﬁd_ªc
;

533 
boﬁ
 
_fûe_s‹t
;

535 
öt2_t
* 
hóp
;

536 
hóp_size
;

537 
run_sˇn_t
* 
sc
;

538 
w_ba£_t
::
uöt4_t
 
num_runs
;

539 
r
;

541 
chunk_mgr_t
 
buf_•a˚
;

544 
boﬁ
 
_⁄˚
;

545 
sm_°‹e_¥›îty_t
 
_¥›îty
;

546 
	}
};

548 
˛ass
 
	gfûe_p
;

554 ˛as†
	crun_sˇn_t
 {

555 
	mssm_s‹t
::
	tkey_öfo_t
 key_info_t;

556 
	mssm_s‹t
::
	ts‹t_∑rm_t
 sort_parm_t;

558 
Õid_t
 
	mpid
;

559 
fûe_p
* 
	mÂ
;

560 
öt2_t
 
	mi
;

561 
öt2_t
 
	m¶Ÿ
;

562 
ªc‹d_t
* 
	mcur_ªc
;

563 
boﬁ
 
	meof
;

564 
key_öfo_t
 
	mköfo
;

565 
öt2_t
 
	mtoggÀ_ba£
;

566 
boﬁ
 
	msögÀ
;

567 
boﬁ
 
	m_unique
;

569 
	mpublic
:

570 
PFC
 
cmp
;

572 
NORET
 
run_sˇn_t
();

573 
	mNORET
 ~
run_sˇn_t
();

575 
rc_t
 
öô
(
rid_t
& 
begö
, 
PFC
 
c
, c⁄° 
key_öfo_t
& 
k
, 
boﬁ
 
unique
);

576 
rc_t
 
cuºít
(c⁄° 
ªc‹d_t
*& 
ªc
);

577 
rc_t
 
√xt
(
boﬁ
& 
eof
);

579 
boﬁ
 
	$is_eof
(Ë{  
eof
; }

581 
‰õnd
 
boﬁ
 
›î©‹
>(
run_sˇn_t
& 
s1
,Ñun_sˇn_t& 
s2
);

582 
‰õnd
 
boﬁ
 
›î©‹
<(
run_sˇn_t
& 
s1
,Ñun_sˇn_t& 
s2
);

584 c⁄° 
Õid_t
& 
	$∑ge
(Ëc⁄° {  
pid
; 
	}
}

	@src/sm/sort_s.h

53 #i‚de‡
SORT_S_H


54 
	#SORT_S_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


65 
˛ass
 
	gfûe_p
;

66 
˛ass
 
	gªc‹d_t
;

68 
	#OLDSORT_COMPATIBILITY


	)

71 
«me•a˚
 
	gssm_s‹t
 {

80 
	skey_öfo_t
 {

81 
	gs‹t‹dî
::
	tkeyty≥
 
	tkey_ty≥_t
;

85 
	edummy_t
 { 
	gt_ch¨
=
s‹t‹dî
::
kt_u1
,

86 
	gt_öt
=
s‹t‹dî
::
kt_i4
,

87 
	gt_Êﬂt
=
s‹t‹dî
::
kt_f4
,

88 
	gt_°rög
=
s‹t‹dî
::
kt_b
,

89 
	gt_•©ül
=
s‹t‹dî
::
kt_•©ül
};

92 
key_ty≥_t
 
	gty≥
;

94 
nbox_t
 
	gunivî£
;

101 
boﬁ
 
	gdîived
;

110 
	ewhîe_t
 { 
	gt_hdr
 = 0, 
	gt_body
 };

112 
whîe_t
 
	gwhîe
;

114 
	gw_ba£_t
::
uöt4_t
 
off£t
;

116 
	gw_ba£_t
::
uöt4_t
 
Àn
;

118 
	gw_ba£_t
::
uöt4_t
 
e°_ª˛í
;

120 
key_öfo_t
() {

121 
	gty≥
 = 
s‹t‹dî
::
kt_i4
;

122 
	gwhîe
 = 
t_body
;

123 
	gdîived
 = 
Ál£
;

124 
	goff£t
 = 0;

125 
	gÀn
 = ();

126 
	ge°_ª˛í
 = 0;

137 
	ss‹t_∑rm_t
 {

139 
uöt2_t
 
	grun_size
;

141 
vid_t
 
	gvﬁ
;

143 
boﬁ
 
	gunique
;

145 
boﬁ
 
	gas˚ndög
;

147 
boﬁ
 
	gde°ru˘ive
;

150 
	gsmÀvñ_3
::
sm_°‹e_¥›îty_t
 
¥›îty
;

152 
s‹t_∑rm_t
(Ë: 
run_size
(10), 
unique
(
Ál£
), 
as˚ndög
(
åue
),

153 
de°ru˘ive
(
Ál£
),

154 
¥›îty
(
smÀvñ_3
::
t_ªguœr
) {}

171 ˛as†
	ckey_cookõ_t
 {

172 * 
	gc
;

174 
	gpublic
:

175 
ex∂icô
 
key_cookõ_t
 (Ë: 
c
(
NULL
) { }

178 
ex∂icô
 
key_cookõ_t
 (
i
) {

179 uni⁄ { 
_i
; *
	gv
; } 
	g_pun
 = {
i
};

180 
	gc
 = 
_pun
.
v
;

183 
ex∂icô
 
key_cookõ_t
 (*
v
):
c
(v) { }

186 
make_öt
(Ëc⁄° {  
›î©‹
 (); }

189 
make_smsize_t
(Ëc⁄° {  
›î©‹
 
smsize_t
(); }

192 *
make_±r
(Ëc⁄° {  
	gc
; }

194 
key_cookõ_t
 
	gnuŒ
;

196 
	g¥iv©e
:

197 
›î©‹
 () const {

198 uni⁄ { *
v
; 
	g_i
; } 
	g_pun
 = {
c
};

199  
	g_pun
.
	g_i
;

202 
›î©‹
 
smsize_t
 () const {

203 uni⁄ { *
	gv
; 
	g_i
; } 
	g_pun
 = {
c
};

204 
smsize_t
 
	gt
 = 
_pun
.
_i
 & 0xffffffff;

205 #ifde‡
ARCH_LP64


206 
w_as£π1
((
_pun
.
_i
 & 0xffffffff00000000) == 0);

208  
	gt
;

233 ˛as†
	cÁ˘‹y_t


238 
	gpublic
:

239 
Á˘‹y_t
();

240 
vútuÆ
 
	gNORET
 ~
Á˘‹y_t
();

242 
vútuÆ
 * 
Ælocfunc
(
smsize_t
)=0;

243 
vútuÆ
 
‰ìfunc
(c⁄° *, 
smsize_t
)=0;

246 
Á˘‹y_t
* 
	gn⁄e
;

249 
Á˘‹y_t
* 
	g˝p_ve˘‹
;

251 
‰ìfunc
(
vec_t
&
v
) {

252 
	gi
=
v
.
cou¡
()-1; i>=0; i--) {

253 
DBG
(<<"‰ìfuncVEC’å=" << (*)
v
.
±r
(
i
Ë<< "Üí=" << v.
Àn
(i));

254 
‰ìfunc
((*)
v
.
±r
(
i
), v.
Àn
(i));

260 
ölöe
 
	gÁ˘‹y_t
::
	$Á˘‹y_t
(Ë{
	}
}

261 
ölöe
 
NORET
 
Á˘‹y_t
::~
	$Á˘‹y_t
(Ë{
	}
}

268 ˛as†
	ckey_loˇti⁄_t


270 
public
:

272 
boﬁ
 
_ö_hdr
;

274 
smsize_t
 
	g_off
;

276 
smsize_t
 
	g_Àngth
;

278 
key_loˇti⁄_t
(Ë: 
_ö_hdr
(
Ál£
), 
_off
(0), 
_Àngth
(0) {}

280 
key_loˇti⁄_t
(c⁄° key_loˇti⁄_à&
ﬁd
) :

281 
_ö_hdr
(
ﬁd
._in_hdr),

282 
_off
(
ﬁd
._off), 
_Àngth
(old._length) {}

285 
boﬁ
 
is_ö_hdr
(Ëc⁄° {  
	g_ö_hdr
; }

288 
˛ass
 
	gskey_t
;

312 ˛as†
	cobje˘_t
 : 
public
 
smÀvñ_t›


314 
‰õnd
 
˛ass
 
skey_t
;

315 c⁄° 
	gobje˘_t
& 
	gn⁄e
;

316 
	g¥Ÿe˘ed
:

317 
_c⁄°ru˘
(
fûe_p
&, 
¶Ÿid_t
);

318 
_c⁄°ru˘
(

319 c⁄° *
hdr
, 
smsize_t
 
hdæí
, 
Á˘‹y_t
 *,

320 c⁄° *
body
, 
smsize_t
 
bodyÀn
, 
Á˘‹y_t
 *);

322 
_ª∂a˚
(c⁄° 
obje˘_t
&);

323 
NORET
 
obje˘_t
();

324 
	gpublic
:

325 
NORET
 
obje˘_t
(c⁄° obje˘_t&
o
)

327 
_vÆid
(
Ál£
),

328 
_ö_bp
(
Ál£
),

329 
_ªc
(0),

330 
_Â
(0),

331 
_hdrÁ˘
(
Á˘‹y_t
::
n⁄e
),

332 
_hdæí
(0),

333 
_hdrbuf
(0),

334 
_bodyÁ˘
(
Á˘‹y_t
::
n⁄e
),

335 
_bodyÀn
(0),

336 
_bodybuf
(0)

337 { 
_ª∂a˚
(
o
); }

339 
NORET
 
obje˘_t
(

340 c⁄° *
hdr
,

341 
smsize_t
 
hdæí
,

342 
Á˘‹y_t
& 
hf
,

343 c⁄° *
body
,

344 
smsize_t
 
bodyÀn
,

345 
Á˘‹y_t
& 
bf
)

347 
_vÆid
(
Ál£
),

348 
_ö_bp
(
Ál£
),

349 
_ªc
(0),

350 
_Â
(0),

351 
_hdrÁ˘
(&
hf
),

352 
_hdæí
(
hdæí
),

353 
_hdrbuf
(
hdr
),

354 
_bodyÁ˘
(&
bf
),

355 
_bodyÀn
(
bodyÀn
),

356 
_bodybuf
(
body
)

359 
	gNORET
 ~
obje˘_t
();

361 
boﬁ
 
is_vÆid
(Ëc⁄° {  
	g_vÆid
; }

362 
boﬁ
 
is_ö_buf„r_poﬁ
(Ëc⁄° {  
is_vÆid
(Ë&& 
	g_ö_bp
; }

363 
smsize_t
 
hdr_size
(Ëc⁄° {  
	g_hdæí
; }

364 
smsize_t
 
body_size
(Ëc⁄° {  
	g_bodyÀn
; }

366 c⁄° *
hdr
(
smsize_t
 
off£t
) const;

367 c⁄° *
body
(
smsize_t
 
off£t
) const;

368 
‰ì•a˚
();

369 
as£π_nobuf„rs
() const;

370 
smsize_t
 
c⁄tig_body_size
() const;

372 
w_rc_t
 
c›y_out
(

373 
boﬁ
 
ö_hdr
,

374 
smsize_t
 
off£t
,

375 
smsize_t
 
Àngth
,

376 
vec_t
&
de°
) const;

379 
	g¥iv©e
:

380 
boﬁ
 
_vÆid
;

381 
boﬁ
 
	g_ö_bp
;

384 
ªc‹d_t
* 
	g_ªc
;

385 
fûe_p
* 
	g_Â
;

388 
Á˘‹y_t
* 
	g_hdrÁ˘
;

389 
smsize_t
 
	g_hdæí
;

390 c⁄° * 
	g_hdrbuf
;

392 
Á˘‹y_t
* 
	g_bodyÁ˘
;

393 
smsize_t
 
	g_bodyÀn
;

394 c⁄° * 
	g_bodybuf
;

396 
	g¥Ÿe˘ed
:

397 
_ßve_pö_cou¡
;

399 
_ˇŒback_¥ﬁogue
() const {

400 #i‡
W_DEBUG_LEVEL
 > 2

405 *
	gßve_pö_cou¡
 = (*)&
_ßve_pö_cou¡
;

406 *
	gßve_pö_cou¡
 = 
me
()->
pö_cou¡
();

407 
w_as£π3
(
_ßve_pö_cou¡
 == 0);

408 
me
()->
check_pö_cou¡
(0);

409 
me
()->
ö_sm
(
Ál£
);

412 
_ˇŒback_ïûogue
() const {

413 #i‡
W_DEBUG_LEVEL
 > 2

417 
me
()->
check_a˘uÆ_pö_cou¡
(
_ßve_pö_cou¡
);

418 
me
()->
ö_sm
(
åue
);

421 
_övÆid©e
() {

422 
	g_vÆid
=
Ál£
;

423 
	g_ö_bp
=
Ál£
;

424 
	g_ªc
 = 0;

425 
	g_Â
=0;

426 
	g_hdrÁ˘
=
Á˘‹y_t
::
n⁄e
;

427 
	g_hdæí
=0;

428 
	g_hdrbuf
=0;

429 
	g_bodyÁ˘
=
Á˘‹y_t
::
n⁄e
;

430 
	g_bodyÀn
=0;

431 
	g_bodybuf
=0;

432 
	g_ßve_pö_cou¡
=0;

436 
˛ass
 
	grun_mgr
;

502 ˛as†
	cskey_t


505 
‰õnd
 
˛ass
 
	gssm_s‹t
::
run_mgr
;

506 
	gpublic
:

513 
NORET
 
skey_t
(

514 c⁄° 
obje˘_t
& 
o
,

515 
smsize_t
 
off£t
,

516 
smsize_t
 
Àn
,

517 
boﬁ
 
ö_hdr
)

519 : 
_vÆid
(
åue
), 
_ö_obj
(true),

520 
_Àngth
(
Àn
),

521 
_obj
(&
o
), 
_off£t
(
off£t
),

522 
_ö_hdr
(
ö_hdr
),

523 
_Á˘
(
Á˘‹y_t
::
n⁄e
), 
_buf
(0)

532 
NORET
 
skey_t
(

533 *
buf
,

534 
smsize_t
 
off£t
,

535 
smsize_t
 
Àn
,

536 
Á˘‹y_t
& 
f


538 : 
_vÆid
(
åue
), 
_ö_obj
(
Ál£
),

539 
_Àngth
(
Àn
),

540 
_obj
(&
obje˘_t
::
n⁄e
),

541 
_off£t
(
off£t
),

542 
_ö_hdr
(
Ál£
),

543 
_Á˘
(&
f
), 
_buf
(
buf
)

547 
	gNORET
 ~
skey_t
() {}

550 
smsize_t
 
size
(Ëc⁄° {  
	g_Àngth
; }

553 
boﬁ
 
is_vÆid
(Ëc⁄° {  
	g_vÆid
; }

556 
boﬁ
 
is_ö_obj
(Ëc⁄° {  
is_vÆid
(Ë&& 
	g_ö_obj
; }

562 
boﬁ
 
c⁄si°ít_wôh_obje˘
(c⁄° 
obje˘_t
&
o
 ) const {

563  ((
	g_obj
 =&
o
Ë|| !
_ö_obj
); }

566 
boﬁ
 
is_ö_hdr
(Ëc⁄° {  
is_ö_obj
(Ë&& 
	g_ö_hdr
; }

569 c⁄° *
±r
(
smsize_t
 
off£t
) const;

572 
‰ì•a˚
();

575 
as£π_nobuf„rs
()const;

578 
smsize_t
 
c⁄tig_Àngth
() const;

581 
w_rc_t
 
c›y_out
(
vec_t
&
de°
) const;

583 
	g¥iv©e
:

584 
boﬁ
 
_vÆid
;

585 
boﬁ
 
	g_ö_obj
;

586 
smsize_t
 
	g_Àngth
;

587 
	g¥Ÿe˘ed
:

589 c⁄° 
obje˘_t
* 
_obj
;

590 
smsize_t
 
	g_off£t
;

591 
	g¥iv©e
:

592 
boﬁ
 
_ö_hdr
;

594 
Á˘‹y_t
* 
	g_Á˘
;

595 c⁄° * 
	g_buf
;

597 
	g¥Ÿe˘ed
:

598 
_övÆid©e
();

599 
NORET
 
skey_t
() :

600 
_vÆid
(
Ál£
), 
_ö_obj
(Ál£), 
_Àngth
(0),

601 
_obj
(&
obje˘_t
::
n⁄e
),

602 
_off£t
(0), 
_ö_hdr
(
Ál£
),

603 
_Á˘
(
Á˘‹y_t
::
n⁄e
), 
_buf
(0)

605 
_c⁄°ru˘
(

606 c⁄° 
obje˘_t
 *
o
, 
smsize_t
 
off
, smsize_à
l
, 
boﬁ
 
h
) {

607 
	g_vÆid
 = 
åue
;

608 
	g_ö_obj
 = 
åue
;

609 
	g_obj
 = 
o
;

610 
	g_off£t
 = 
off
;

611 
	g_Àngth
 = 
l
;

612 
	g_ö_hdr
 = 
h
;

613 
	g_Á˘
 = 
Á˘‹y_t
::
n⁄e
;

615 
_c⁄°ru˘
(

616 c⁄° *
buf
, 
smsize_t
 
off
, smsize_à
l
, 
Á˘‹y_t
* 
f
) {

617 
	g_vÆid
 = 
åue
;

618 
	g_obj
 = 0;

619 
	g_ö_obj
 = 
Ál£
;

620 
	g_off£t
 = 
off
;

621 
	g_Àngth
 = 
l
;

622 
	g_Á˘
 = 
f
;

623 
	g_buf
 = 
buf
;

625 
_ª∂a˚
(c⁄° 
skey_t
&);

626 
_ª∂a˚_ªœtive_to_obj
(c⁄° 
obje˘_t
 &, c⁄° 
skey_t
&);

663 
	$w_rc_t
 (*
	tCSKF
)(

664 c⁄° 
	trid_t
& 
	trid
,

665 c⁄° 
	tobje˘_t
& 
	tö_obj
,

666 
	tkey_cookõ_t
 
	tcookõ
,

667 
	tÁ˘‹y_t
& 
	tf
,

668 
	tskey_t
* 
	tout


707 
	$w_rc_t
 (*
	tMOF
)(

708 c⁄° 
	trid_t
& 
	trid
,

709 c⁄° 
	tobje˘_t
& 
	tobj_ö
,

710 
	tkey_cookõ_t
 
	tcookõ
,

712 
	tobje˘_t
* 
	tobj_out


755 
	$w_rc_t
 (*
	tUMOF
)(

756 c⁄° 
	trid_t
& 
	trid
,

757 c⁄° 
	tobje˘_t
& 
	tobj_ö
,

758 
	tkey_cookõ_t
 
	tcookõ
,

759 
	tobje˘_t
* 
	tobj_out


778 (*
	tCF
) (

779 
	tw_ba£_t
::
	tuöt4_t
 
	tÀngth1
,

780 c⁄° * 
	tkey1
,

781 
	tw_ba£_t
::
	tuöt4_t
 
	tÀngth2
,

782 c⁄° * 
	tkey2


801 
	$w_rc_t
 (*
	tLEXFUNC
Ë(c⁄° *
	tsour˚
, 
	tsmsize_t
 
	tÀn
, *
	tsök
);

828 
	sgíîic_CSKF_cookõ


831 
LEXFUNC
 
func
;

833 
boﬁ
 
ö_hdr
;

835 
smsize_t
 
off£t
;

837 
smsize_t
 
Àngth
;

838 
	}
};

854 ˛as†
	cs‹t_keys_t


856 
	gpublic
:

857 
ssm_s‹t
::
	tLEXFUNC
 LEXFUNC;

867 
w_rc_t
 
noLEXFUNC
 (c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

887 
w_rc_t
 
noCSKF
(

888 c⁄° 
rid_t
& 
rid
,

889 c⁄° 
obje˘_t
& 
obj
,

890 
key_cookõ_t
 
cookõ
,

891 
Á˘‹y_t
& 
f
,

892 
skey_t
* 
out


912 
w_rc_t
 
gíîic_CSKF
(

913 c⁄° 
rid_t
& 
rid
,

914 c⁄° 
obje˘_t
& 
ö_obj
,

915 
key_cookõ_t
 
cookõ
,

916 
Á˘‹y_t
& 
f
,

917 
skey_t
* 
out


930 
w_rc_t
 
noMOF
 (

931 c⁄° 
rid_t
& ,

932 c⁄° 
obje˘_t
& ,

933 
key_cookõ_t
 ,

934 
obje˘_t
*

947 
w_rc_t
 
noUMOF
 (

948 c⁄° 
rid_t
& ,

949 c⁄° 
obje˘_t
& ,

950 
key_cookõ_t
 ,

951 
obje˘_t
*

959 
°rög_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

960 
w_ba£_t
::
uöt4_t
 , const *);

961 
uöt8_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

962 
w_ba£_t
::
uöt4_t
 , const * );

963 
öt8_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

964 
w_ba£_t
::
uöt4_t
 , const * );

965 
uöt4_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

966 
w_ba£_t
::
uöt4_t
 , const * );

967 
öt4_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

968 
w_ba£_t
::
uöt4_t
 , const * );

969 
uöt2_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

970 
w_ba£_t
::
uöt4_t
 , const * );

971 
öt2_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

972 
w_ba£_t
::
uöt4_t
 , const * );

973 
uöt1_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

974 
w_ba£_t
::
uöt4_t
 , const * );

975 
öt1_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

976 
w_ba£_t
::
uöt4_t
 , const * );

977 
f4_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

978 
w_ba£_t
::
uöt4_t
 , const * );

979 
f8_cmp
(
w_ba£_t
::
uöt4_t
 , const * ,

980 
w_ba£_t
::
uöt4_t
 , const * );

982 
	gpublic
:

987 
w_rc_t
 
f8_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

988 
w_rc_t
 
f4_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

989 
w_rc_t
 
u8_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

990 
w_rc_t
 
i8_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

991 
w_rc_t
 
u4_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

992 
w_rc_t
 
i4_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

993 
w_rc_t
 
u2_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

994 
w_rc_t
 
i2_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

995 
w_rc_t
 
u1_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

996 
w_rc_t
 
i1_Àx
(c⁄° *
sour˚
, 
smsize_t
 
Àn
, *
sök
);

1000 
	g¥iv©e
:

1006 ˛as†
	ckey_mëa_t
 {

1007 
public
:

1011 
CF
 
_cb_keycmp
;

1012 
CSKF
 
	g_cb_keyöfo
;

1013 
key_cookõ_t
 
	g_cookõ
;

1014 
	gw_ba£_t
::
öt1_t
 
_mask
;

1015 
fûl1
 
	g_dummy1
;

1016 
fûl2
 
	g_dummy2
;

1017 
key_mëa_t
(Ë: 
_cb_keycmp
(0), 
_cb_keyöfo
(0),

1018 
_cookõ
(0),

1019 
_mask
(
t_n⁄e
) {}

1020 
key_mëa_t
(c⁄° key_mëa_à&
ﬁd
) :

1021 
_cb_keycmp
(
ﬁd
._cb_keycmp),

1022 
_cb_keyöfo
(
ﬁd
._cb_keyinfo),

1023 
_cookõ
(
ﬁd
._cookie),

1024 
_mask
(
ﬁd
._mask) {}

1026 
	g_nkeys
;

1027 
	g_•a˚s
;

1028 
key_mëa_t
* 
	g_mëa
;

1029 
key_loˇti⁄_t
* 
	g_locs
;

1030 
boﬁ
 
	g_°abÀ
;

1031 
boﬁ
 
	g_f‹_ödex
;

1032 
boﬁ
 
	g_ªmove_dups
;

1033 
boﬁ
 
	g_ªmove_dup_nuŒs
;

1034 
boﬁ
 
	g_as˚ndög
;

1035 
boﬁ
 
	g_dìp_c›y
;

1036 
boﬁ
 
	g_kìp_‹ig_fûe
;

1037 
boﬁ
 
	g_ˇºy_obj
;

1039 
CSKF
 
	g_cb_Àxify_ödex_key
;

1040 
key_cookõ_t
 
	g_cb_Àxify_ödex_key_cookõ
;

1042 
MOF
 
	g_cb_m¨shÆ
;

1043 
UMOF
 
	g_cb_unm¨shÆ
;

1044 
key_cookõ_t
 
	g_cb_m¨shÆ_cookõ
;

1046 
_grow
(
i
);

1048 
_¥ï
(
key
);

1049 
_£t_loc
(
key
, 
smsize_t
 
off
, smsize_à
Àn
) {

1050 
	gkey_loˇti⁄_t
 &
	gt
 = 
_locs
[
key
];

1051 
	gt
.
	g_off
 = 
off
;

1052 
	gt
.
	g_Àngth
 = 
Àn
;

1054 
_£t_mask
(
key
,

1055 
boﬁ
 
fixed
,

1056 
boﬁ
 
Æig√d
,

1057 
boﬁ
 
Àxico
,

1058 
boﬁ
 
ö_hódî
,

1059 
CSKF
 
gfunc
,

1060 
CF
 
cfunc
,

1061 
key_cookõ_t
 
cookõ


1063 
	gkey_mëa_t
 &
	gt
 = 
_mëa
[
key
];

1064 if(
	gÆig√d
Ë
	gt
.
	g_mask
 |
t_Æig√d
;

1065 
	gt
.
	g_mask
 &~
t_Æig√d
;

1066 if(
	gfixed
Ë
	gt
.
	g_mask
 |
t_fixed
;

1067 
	gt
.
	g_mask
 &~
t_fixed
;

1068 if(
	gÀxico
Ë
	gt
.
	g_mask
 |
t_Àxico
;

1069 
	gt
.
	g_mask
 &~
t_Àxico
;

1070 if(
	gö_hódî
Ë
	gt
.
	g_mask
 |
s‹t_keys_t
::
t_hdr
;

1071 
	gt
.
	g_mask
 &~
s‹t_keys_t
::
t_hdr
;

1072 
	gt
.
	g_cb_keycmp
 = 
cfunc
;

1073 
	gt
.
	g_cb_keyöfo
 = 
gfunc
;

1074 
w_as£π3
(
cfunc
);

1075 if–! 
	gfixed
) {

1076 
w_as£π3
(
gfunc
);

1078 
	gt
.
	g_cookõ
 = 
cookõ
;

1081 
_c›y
(c⁄° 
s‹t_keys_t
 &
ﬁd
);

1103 
	emask
 { 
	gt_n⁄e
 = 0x0,

1104 
	gt_fixed
 = 0x1,

1105 
	gt_Æig√d
 =0x2,

1106 
	gt_Àxico
=0x4,

1107 
	gt_hdr
 = 0x40

1110 
	gpublic
:

1112 
NORET
 
s‹t_keys_t
(
nkeys
);

1114 
	gNORET
 ~
s‹t_keys_t
() {

1115 
	gdñëe
[] 
	g_mëa
;

1116 
	gdñëe
[] 
	g_locs
;

1120 
NORET
 
s‹t_keys_t
(c⁄° s‹t_keys_à&
ﬁd
);

1123 
nkeys
(Ëc⁄° {  
	g_nkeys
; }

1147 
£t_f‹_ödex
() {

1148 
	g_kìp_‹ig_fûe
 = 
åue
;

1149 
	g_dìp_c›y
 = 
Ál£
;

1150 
	g_f‹_ödex
 = 
åue
;

1151 if(
	g_nkeys
 > 1) {

1155 
	g_cb_Àxify_ödex_key
 = 
s‹t_keys_t
::
noCSKF
;

1156 
	g_cb_Àxify_ödex_key_cookõ
 = 
key_cookõ_t
(0);

1187 
£t_f‹_ödex
(
CSKF
 
lfunc
, 
key_cookõ_t
 
ck
) {

1188 
£t_f‹_ödex
();

1189 if(!
	glfunc
Ëlfun¯
s‹t_keys_t
::
noCSKF
;

1190 
	g_cb_Àxify_ödex_key
 = 
lfunc
;

1191 
	g_cb_Àxify_ödex_key_cookõ
 = 
ck
;

1196 
boﬁ
 
is_f‹_ödex
(Ëc⁄° {  
	g_f‹_ödex
; }

1199 
boﬁ
 
is_f‹_fûe
(Ëc⁄° {  !
	g_f‹_ödex
; }

1202 
boﬁ
 
is_°abÀ
(Ëc⁄° {  
	g_°abÀ
; }

1205 
£t_°abÀ
(
boﬁ
 
vÆ
Ë{ 
	g_°abÀ
 = val; }

1208 
CSKF
 
Àxify_ödex_key
(Ëc⁄° {  
	g_cb_Àxify_ödex_key
; }

1211 
key_cookõ_t
 
Àxify_ödex_key_cookõ
(Ëc⁄° {  
	g_cb_Àxify_ödex_key_cookõ
; }

1230 
£t_f‹_fûe
(
boﬁ
 
dìpc›y
, boﬁ 
kìp‹ig
, boﬁ 
ˇºy_obj
) {

1231 
	g_f‹_ödex
 = 
Ál£
;

1232 (Ë
£t_ˇºy_obj
(
ˇºy_obj
);

1233 (Ë
£t_dìp_c›y
(
dìpc›y
);

1234  
£t_kìp_‹ig
(
kìp‹ig
);

1247 
£t_obje˘_m¨shÆ
–
MOF
 
m¨shÆ
, 
UMOF
 
unm¨shÆ
, 
key_cookõ_t
 
c
) {

1248 
	g_cb_m¨shÆ
 = 
m¨shÆ
;

1249 
	g_cb_unm¨shÆ
 = 
unm¨shÆ
;

1250 
	g_cb_m¨shÆ_cookõ
 = 
c
;

1255 
MOF
 
m¨shÆ_func
(Ëc⁄° {  
	g_cb_m¨shÆ
; }

1257 
UMOF
 
unm¨shÆ_func
(Ëc⁄° {  
	g_cb_unm¨shÆ
; }

1260 
key_cookõ_t
 
m¨shÆ_cookõ
(Ëc⁄° {  
	g_cb_m¨shÆ_cookõ
; }

1263 
boﬁ
 
is_as˚ndög
(Ëc⁄° {  
	g_as˚ndög
; }

1266 
£t_as˚ndög
–
boﬁ
 
vÆue
 = 
åue
Ë{ 
_as˚ndög
 = value;  0; }

1273 
boﬁ
 
is_unique
(Ëc⁄° {  
	g_ªmove_dups
; }

1277 
£t_unique
–
boﬁ
 
vÆue
 = 
åue
Ë{ 
_ªmove_dups
 = value;  0; }

1284 
boﬁ
 
nuŒ_unique
(Ëc⁄° {  
	g_ªmove_dup_nuŒs
; }

1288 
£t_nuŒ_unique
–
boﬁ
 
vÆue
 = 
åue
Ë{ 
_ªmove_dup_nuŒs
 = value;

1296 
boﬁ
 
ˇºy_obj
(Ëc⁄° {  
	g_ˇºy_obj
; }

1309 
£t_ˇºy_obj
(
boﬁ
 
vÆue
 = 
åue
) {

1310  
_ˇºy_obj
 = 
vÆue
;

1317 
boﬁ
 
dìp_c›y
(Ëc⁄° {  
	g_dìp_c›y
; }

1328 
£t_dìp_c›y
(
boﬁ
 
vÆue
 = 
åue
 ) {

1329 
_dìp_c›y
 = 
vÆue
;

1338 
boﬁ
 
kìp_‹ig
(Ëc⁄° {  
	g_kìp_‹ig_fûe
; }

1345 
£t_kìp_‹ig
(
boﬁ
 
vÆue
 = 
åue
 ) {

1346 if(
vÆue
 && !
_dìp_c›y
)  1;

1347 
	g_kìp_‹ig_fûe
 = 
vÆue
;

1375 
£t_s‹tkey_fixed
(

1376 
keyödex
,

1377 
smsize_t
 
off
,

1378 
smsize_t
 
Àn
,

1379 
boﬁ
 
ö_hódî
,

1380 
boﬁ
 
Æig√d
,

1381 
boﬁ
 
Àxico
,

1382 
CF
 
cfunc


1410 
£t_s‹tkey_dîived
(

1411 
keyödex
,

1412 
CSKF
 
gfunc
,

1413 
key_cookõ_t
 
cookõ
,

1414 
boﬁ
 
ö_hódî
,

1415 
boﬁ
 
Æig√d
,

1416 
boﬁ
 
Àxico
,

1417 
CF
 
cfunc


1425 
	gkey_loˇti⁄_t
& 
gë_loˇti⁄
(
i
Ë{  
	g_locs
[i]; }

1432 
smsize_t
 
off£t
(
i
) const {

1433  
	g_locs
[
i
].
	g_off
;

1440 
smsize_t
 
Àngth
(
i
) const {

1441  
	g_locs
[
i
].
	g_Àngth
;

1448 
CSKF
 
key¸óã
(
i
) const {

1449  
	g_mëa
[
i
].
	g_cb_keyöfo
;

1457 
key_cookõ_t
 
cookõ
(
i
) const {

1458  
	g_mëa
[
i
].
	g_cookõ
;

1466 
CF
 
keycmp
(
i
) const {

1467  
	g_mëa
[
i
].
	g_cb_keycmp
;

1471 
boﬁ
 
is_Àxico
(
i
) const {

1472  (
	g_mëa
[
i
].
	g_mask
 & 
	gt_Àxico
)?
	gåue
:
Ál£
;

1475 
boﬁ
 
is_fixed
(
i
) const {

1476  (
	g_mëa
[
i
].
	g_mask
 & 
	gt_fixed
)?
	gåue
:
Ál£
;

1479 
boﬁ
 
is_Æig√d
(
i
) const {

1480  (
	g_mëa
[
i
].
	g_mask
 & 
	gt_Æig√d
)?
	gåue
:
Ál£
;

1483 
boﬁ
 
ö_hdr
(
i
) const {

1484  (
	g_mëa
[
i
].
	g_mask
 & 
	gt_hdr
)?
	gåue
:
Ál£
;

1490 
ölöe
 

1491 
	gssm_s‹t
::
s‹t_keys_t
::
	$_grow
(
i
)

1495 
key_loˇti⁄_t
* 
tmp
 = 
√w
 key_loˇti⁄_t[
_•a˚s
 + 
i
];

1496 if(!
tmp
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

1497 if(
_locs
) {

1498 
	`mem˝y
(
tmp
, 
_locs
, 
	`nkeys
(Ë* (
key_loˇti⁄_t
));

1499 
dñëe
[] 
_locs
;

1501 
_locs
 = 
tmp
;

1504 
key_mëa_t
* 
tmp
 = 
√w
 key_mëa_t[
_•a˚s
 + 
i
];

1505 if(!
tmp
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

1506 if(
_mëa
) {

1507 
	`mem˝y
(
tmp
, 
_mëa
, 
	`nkeys
(Ë* (
key_mëa_t
));

1508 
dñëe
[] 
_mëa
;

1510 
_mëa
 = 
tmp
;

1512 
_•a˚s
 +
i
;

1514 
	}
}

1515 
ölöe
 
NORET


1516 
	gssm_s‹t
::
s‹t_keys_t
::
	$s‹t_keys_t
(
nkeys
):

1517 
	`_nkeys
(0),

1518 
	`_•a˚s
(0),

1519 
	`_mëa
(0),

1520 
	`_locs
(0),

1521 
	`_°abÀ
(
Ál£
), 
	`_f‹_ödex
(false),

1522 
	`_ªmove_dups
(
Ál£
), 
	`_ªmove_dup_nuŒs
(false),

1523 
	`_as˚ndög
(
åue
), 
	`_dìp_c›y
(
Ál£
), 
	`_kìp_‹ig_fûe
(false),

1524 
	`_ˇºy_obj
(
Ál£
),

1525 
	`_cb_Àxify_ödex_key
(
s‹t_keys_t
::
noCSKF
),

1526 
	`_cb_Àxify_ödex_key_cookõ
(0),

1527 
	`_cb_m¨shÆ
(
s‹t_keys_t
::
noMOF
),

1528 
	`_cb_unm¨shÆ
(
s‹t_keys_t
::
noUMOF
),

1529 
	$_cb_m¨shÆ_cookõ
(0)

1531 
	`_grow
(
nkeys
);

1532 
	}
}

1534 
ölöe
 

1535 
	gssm_s‹t
::
s‹t_keys_t
::
	$_¥ï
(
key
)

1537 if(
key
 >
_•a˚s
) {

1538 
	`_grow
(5);

1540 if(
key
 >
_nkeys
) {

1542 
_nkeys
 = 
key
+1;

1544 
	}
}

1546 
ölöe
 

1547 
	gssm_s‹t
::
s‹t_keys_t
::
	$_c›y
(c⁄° 
s‹t_keys_t
 &
ﬁd
)

1549 
	`_¥ï
(
ﬁd
.
	`nkeys
()-1);

1550 
i
;

1551 
i
=0; i< 
ﬁd
.
	`nkeys
(); i++) {

1552 
_locs
[
i
] = 
ﬁd
._locs[i];

1553 
_mëa
[
i
] = 
ﬁd
._meta[i];

1555 
	`w_as£π3
(
	`nkeys
(Ë=
ﬁd
.nkeys());

1556 
	`w_as£π3
(
_•a˚s
 >
ﬁd
._spaces);

1557 
i
=0; i< 
ﬁd
.
	`nkeys
(); i++) {

1558 
	`w_as£π3
(
_mëa
[
i
].
_mask
 =
ﬁd
._meta[i]._mask);

1560 
	}
}

1562 
ölöe
 
NORET


1563 
	gssm_s‹t
::
s‹t_keys_t
::
	$s‹t_keys_t
(c⁄° 
s‹t_keys_t
 &
ﬁd
) :

1564 
	`_nkeys
(0), 
	`_•a˚s
(0),

1565 
	`_mëa
(0), 
	$_locs
(0)

1567 
	`_c›y
(
ﬁd
);

1568 
	}
}

1570 
ölöe
 

1571 
	gssm_s‹t
::
s‹t_keys_t
::
	$£t_s‹tkey_fixed
(

1572 
key
,

1573 
smsize_t
 
off
,

1574 
smsize_t
 
Àn
,

1575 
boﬁ
 
ö_hódî
,

1576 
boﬁ
 
Æig√d
,

1577 
boﬁ
 
Àxico
,

1578 
CF
 
cfunc


1581 if(
	`is_f‹_ödex
(Ë&& 
key
 > 0) {

1584 
	`_¥ï
(
key
);

1585 
	`_£t_mask
(
key
, 
åue
, 
Æig√d
, 
Àxico
,

1586 
ö_hódî
, 
noCSKF
, 
cfunc
, 
key_cookõ_t
::
nuŒ
);

1587 
	`_£t_loc
(
key
, 
off
, 
Àn
);

1589 
	}
}

1591 
ölöe
 

1592 
	gssm_s‹t
::
s‹t_keys_t
::
	$£t_s‹tkey_dîived
(

1593 
key
,

1594 
CSKF
 
gfunc
,

1595 
key_cookõ_t
 
cookõ
,

1596 
boﬁ
 
ö_hódî
,

1597 
boﬁ
 
Æig√d
,

1598 
boﬁ
 
Àxico
,

1599 
CF
 
cfunc


1602 if(
	`is_f‹_ödex
(Ë&& 
key
 > 0) {

1605 
	`_¥ï
(
key
);

1606 
	`_£t_mask
(
key
, 
Ál£
, 
Æig√d
, 
Àxico
,

1607 
ö_hódî
,

1608 
gfunc
, 
cfunc
,

1609 
cookõ
);

1611 
	}
}

	@src/sm/sysdefs.h

30 #i‚de‡
SYSDEFS_H


31 
	#SYSDEFS_H


	)

33 
	~"w_deföes.h
"

37 
	~<c°ddef
>

38 
	~<c°dlib
>

39 
	~<c°rög
>

41 
	~<˛imôs
>

42 #ifde‡
Dec°©i⁄


43 
	~<sy£¡.h
>

46 
	~<w_°ªam.h
>

48 
	~<w.h
>

49 
	~<°hªad.h
>

	@src/sm/tests/create_rec.cpp

30 
	~"w_deföes.h
"

39 
	~<w_°ªam.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<ˇs£π
>

42 
	~"sm_vas.h
"

43 
	~"w_gë›t.h
"

44 
ss_m
* 
	gssm
 = 0;

47 
w_rc_t
 
	trc_t
;

50 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

51 c⁄° * 
¥og_ty≥
,

52 & 
¨gc
, ** 
¨gv
);

55 
	sfûe_öfo_t
 {

56 c⁄° * 
	mkey
;

57 
°id_t
 
	mfid
;

58 
rid_t
 
	mfú°_rid
;

59 
	mnum_ªc
;

60 
	mªc_size
;

62 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

64 
	go°ªam
 &

65 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

67 
	go
 << "key " << 
	göfo
.
	gkey


68 << " fid " << 
	göfo
.
	gfid


69 << " fú°_rid " << 
	göfo
.
	gfú°_rid


70 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


71 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

72  
	go
;

76 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

81 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

83 
˚º
 << "Ußge: cª©e_ª¯[-h] [-i] [›ti⁄s]" << 
ídl
;

84 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêo‡ªc‹ds" << 
ídl
;

85 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

86 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

87 
	}
}

90 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

91 
_¨gc
;

92 **
	m_¨gv
;

94 c⁄° *
	m_devi˚_«me
;

95 
smsize_t
 
	m_quŸa
;

96 
	m_num_ªc
;

97 
smsize_t
 
	m_ªc_size
;

98 
lvid_t
 
	m_lvid
;

99 
rid_t
 
	m_°¨t_rid
;

100 
°id_t
 
	m_fid
;

101 
boﬁ
 
	m_öôülize_devi˚
;

102 
›ti⁄_group_t
* 
	m_›ti⁄s
;

103 
vid_t
 
	m_vid
;

104 
	mpublic
:

105 
ªtvÆ
;

107 
	$smthªad_u£r_t
(
ac
, **
av
)

108 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

109 
	`_¨gc
(
ac
), 
	`_¨gv
(
av
),

110 
	`_devi˚_«me
(
NULL
),

111 
	`_quŸa
(0),

112 
	`_num_ªc
(0),

113 
	`_ªc_size
(0),

114 
	`_öôülize_devi˚
(
Ál£
),

115 
	`_›ti⁄s
(
NULL
),

116 
	`_vid
(1),

117 
	$ªtvÆ
(0) { }

119 ~
	$smthªad_u£r_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

121 
run
();

124 
w_rc_t
 
h™dÀ_›ti⁄s
();

125 
w_rc_t
 
föd_fûe_öfo
();

126 
w_rc_t
 
¸óã_the_fûe
();

127 
w_rc_t
 
sˇn_the_fûe
();

128 
w_rc_t
 
sˇn_the_roŸ_ödex
();

129 
w_rc_t
 
do_w‹k
();

130 
w_rc_t
 
do_öô
();

131 
w_rc_t
 
no_öô
();

138 
w_rc_t


139 
	gsmthªad_u£r_t
::
	$föd_fûe_öfo
()

141 
fûe_öfo_t
 
öfo
;

142 
	`W_DO
(
ssm
->
	`begö_x˘
());

144 
boﬁ
 
found
;

145 
°id_t
 
_roŸ_iid
;

146 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

148 
smsize_t
 
öfo_Àn
 = (
öfo
);

149 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

150 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

151 
key_vec_tmp
,

152 &
öfo
, 
öfo_Àn
, 
found
));

153 i‡(!
found
) {

154 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

155  
	`RC
(
fcASSERT
);

157 
˚º
 << " foundássoc "

158 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

161 
	`W_DO
(
ssm
->
	`commô_x˘
());

163 
_°¨t_rid
 = 
öfo
.
fú°_rid
;

164 
_fid
 = 
öfo
.
fid
;

165 
_ªc_size
 = 
öfo
.
ªc_size
;

166 
_num_ªc
 = 
öfo
.
num_ªc
;

167  
RCOK
;

168 
	}
}

179 
rc_t


180 
	gsmthªad_u£r_t
::
	$¸óã_the_fûe
()

182 
fûe_öfo_t
 
öfo
;

186 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


187 << "Ñec‹d†o‡sizê" << 
_ªc_size
 << 
ídl
;

188 
	`W_DO
(
ssm
->
	`begö_x˘
());

191 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

192 
rid_t
 
rid
;

194 
_ªc_size
 -
	`Æign
(());

199 * 
dummy
 = 
√w
 [
_ªc_size
];

200 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

201 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

203 
j
=0; j < 
_num_ªc
; j++)

206 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

207 
o
 << "Rec‹dÇumbî " << 
j
 << 
íds
;

208 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

211 
i
 = 
j
;

212 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

213 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

214 
_ªc_size
, 
d©a
, 
rid
));

215 
cout
 << "Cª©ögÑe¯" << 
j
 << 
ídl
;

216 i‡(
j
 == 0) {

217 
öfo
.
fú°_rid
 = 
rid
;

220 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
öfo
.
fú°_rid
 << 
ídl
;

221 
dñëe
 [] 
dummy
;

222 
öfo
.
num_ªc
 = 
_num_ªc
;

223 
öfo
.
ªc_size
 = 
_ªc_size
;

227 
°id_t
 
_roŸ_iid
;

228 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

230 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

231 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

232 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

233 
key_vec_tmp
,

234 
öfo_vec_tmp
));

235 
˚º
 << "Creatingássoc "

236 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

237 
	`W_DO
(
ssm
->
	`commô_x˘
());

238  
RCOK
;

239 
	}
}

241 
rc_t


242 
	gsmthªad_u£r_t
::
	$sˇn_the_roŸ_ödex
()

244 
	`W_DO
(
ssm
->
	`begö_x˘
());

245 
°id_t
 
_roŸ_iid
;

246 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

247 
cout
 << "Sˇ¬ög index " << 
_roŸ_iid
 << 
ídl
;

248 
sˇn_ödex_i
 
	`sˇn
(
_roŸ_iid
,

249 
sˇn_ödex_i
::
ge
, 
vec_t
::
√g_öf
,

250 
sˇn_ödex_i
::
À
, 
vec_t
::
pos_öf
, 
Ál£
,

251 
ss_m
::
t_cc_kvl
);

252 
boﬁ
 
	`eof
(
Ál£
);

253 
	`i
(0);

254 
smsize_t
 
	`kÀn
(0);

255 
smsize_t
 
	`ñí
(0);

256 
	#MAXKEYSIZE
 100

	)

257 * 
keybuf
[
MAXKEYSIZE
];

258 
fûe_öfo_t
 
öfo
;

261 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
eof
);

262 if(
rc
.
	`is_îr‹
()) {

263 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

264 
ªtvÆ
 = 
rc
.
	`îr_num
();

265  
rc
;

267 if(
eof
) ;

270 
	`W_DO
(
sˇn
.
	`cuº
(
NULL
, 
kÀn
, NULL, 
ñí
));

272 
vec_t
 
	`key
(
keybuf
, 
kÀn
);

273 
vec_t
 
	`ñem
(&
öfo
, 
ñí
);

275 
	`W_DO
(
sˇn
.
	`cuº
(&
key
, 
kÀn
, &
ñem
, 
ñí
));

277 
cout
 << "Key " << 
keybuf
 << 
ídl
;

278 
cout
 << "Value "

279 << " { fid " << 
öfo
.
fid


280 << " fú°_rid " << 
öfo
.
fú°_rid


281 << " #ª¯" << 
öfo
.
num_ªc


282 << "Ñe¯sizê" << 
öfo
.
ªc_size
 << " }"

283 << 
ídl
;

284 
i
++;

285 } !
eof
);

286 
	`W_DO
(
ssm
->
	`commô_x˘
());

287  
RCOK
;

288 
	}
}

290 
rc_t


291 
	gsmthªad_u£r_t
::
	$sˇn_the_fûe
()

293 
cout
 << "Sˇ¬ög fûê" << 
_fid
 << 
ídl
;

294 
	`W_DO
(
ssm
->
	`begö_x˘
());

296 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

297 
pö_i
* 
	`curs‹
(
NULL
);

298 
boﬁ
 
	`eof
(
Ál£
);

299 
	`i
(0);

302 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

303 if(
rc
.
	`is_îr‹
()) {

304 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

305 
ªtvÆ
 = 
rc
.
	`îr_num
();

306  
rc
;

308 if(
eof
) ;

310 
cout
 << "Rec‹d " << 
i
 << "/" << 
_num_ªc


311 << " Rid " << 
curs‹
->
	`rid
(Ë<< 
ídl
;

312 
vec_t
 
	`hódî
 (
curs‹
->
	`hdr
(), curs‹->
	`hdr_size
());

313 
hdrc⁄ã¡s
;

314 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

315 
cout
 << "Rec‹d hd∏" << 
hdrc⁄ã¡s
 << 
ídl
;

317 c⁄° *
body
 = 
curs‹
->
	`body
();

318 
	`w_as£π1
(
curs‹
->
	`body_size
(Ë=
_ªc_size
);

319 
cout
 << "Rec‹d body " << 
body
 << 
ídl
;

320 
i
++;

321 } !
eof
);

322 
	`w_as£π1
(
i
 =
_num_ªc
);

324 
	`W_DO
(
ssm
->
	`commô_x˘
());

325  
RCOK
;

326 
	}
}

328 
rc_t


329 
	gsmthªad_u£r_t
::
	$do_öô
()

331 
cout
 << "-i: Inôülizê" << 
ídl
;

334 
devid_t
 
devid
;

335 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


336 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

337 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

339 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

341 
u_öt
 
vﬁ_˙t
;

342 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

344 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


345 << " vﬁumêcou¡ " << 
vﬁ_˙t


346 << " devi˚ " << 
devid


347 << 
ídl
;

351 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

352 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

353 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

356 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

357 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

359 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

360 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

364 
	`W_DO
(
	`¸óã_the_fûe
());

365  
RCOK
;

366 
	}
}

368 
rc_t


369 
	gsmthªad_u£r_t
::
	$no_öô
()

371 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

373 
devid_t
 
devid
;

374 
u_öt
 
vﬁ_˙t
;

375 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

376 i‡(
rc
.
	`is_îr‹
()) {

377 
˚º
 << "Error: couldÇot mount device: "

378 << 
_devi˚_«me
 << 
ídl
;

379 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

380 << 
ídl
;

381  
rc
;

385 
lvid_t
* 
lvid_li°
;

386 
u_öt
 
lvid_˙t
;

387 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

388 i‡(
lvid_˙t
 == 0) {

389 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

390 
	`exô
(1);

392 
_lvid
 = 
lvid_li°
[0];

393 
dñëe
 [] 
lvid_li°
;

395 
	`W_COERCE
(
	`föd_fûe_öfo
());

396 
	`W_COERCE
(
	`sˇn_the_roŸ_ödex
());

397 
	`W_DO
(
	`sˇn_the_fûe
());

398  
RCOK
;

399 
	}
}

401 
rc_t


402 
	gsmthªad_u£r_t
::
	$do_w‹k
()

404 i‡(
_öôülize_devi˚
Ë
	`W_DO
(
	`do_öô
());

405 
	`W_DO
(
	`no_öô
());

406  
RCOK
;

407 
	}
}

413 
w_rc_t
 
	gsmthªad_u£r_t
::
	$h™dÀ_›ti⁄s
()

415 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

416 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

417 
›ti⁄_t
* 
›t_num_ªc
 = 0;

419 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

429 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

431 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

432 if(!
_›ti⁄s
) {

433 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

434 
ídl
;

435 
ªtvÆ
 = 1;

436  
	`RC
(
fcINTERNAL
);

438 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

440 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

441 
NULL
, "device containg volume holding fileÅo scan",

442 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

443 
›t_devi˚_«me
));

445 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

447 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

448 
›t_devi˚_quŸa
));

451 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

453 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

454 
›t_num_ªc
));

457 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

459 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

461 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

462 i‡(
rc
.
	`is_îr‹
()) {

463 
	`ußge
(
›ti⁄s
);

464 
ªtvÆ
 = 1;

465  
rc
;

467 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

470 
›ti⁄
;

471 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hi")) != -1) {

472 
›ti⁄
) {

474 
_öôülize_devi˚
 = 
åue
;

478 
	`ußge
(
›ti⁄s
);

482 
	`ußge
(
›ti⁄s
);

483 
ªtvÆ
 = 1;

484  
	`RC
(
fcNOTIMPLEMENTED
);

489 
cout
 << "Checking forÑequired options...";

491 
w_o°r°ªam
 
îr_°ªam
;

492 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

493 i‡(
rc
.
	`is_îr‹
()) {

494 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

495 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

496  
rc
;

498 
cout
 << "O±i⁄†OK; vÆue†¨e: { " << 
ídl
;

499 
›ti⁄s
.
	`¥öt_vÆues
(
Ál£
, 
cout
);

500 
cout
 << "}ÉndÜi° o‡›ti⁄†vÆues. " << 
ídl
;

504 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

505 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

506 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

508  
RCOK
;

509 
	}
}

511 
	gsmthªad_u£r_t
::
	$run
()

513 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

514 if(
rc
.
	`is_îr‹
()) {

515 
ªtvÆ
 = 1;

520 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

521 
ssm
 = 
√w
 
	`ss_m
();

522 i‡(!
ssm
) {

523 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

524 
ªtvÆ
 = 1;

528 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

530 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

531 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

532 
_ªc_size
 = 
c⁄fig_öfo
.
max_smÆl_ªc
;

536 
rc
 = 
	`do_w‹k
();

538 i‡(
rc
.
	`is_îr‹
()) {

539 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

540 
˚º
 << 
rc
 << 
ídl
;

541 
dñëe
 
ssm
;

542 
rc
 = 
RCOK
;

544 
ªtvÆ
 = 1;

545 if(
rc
.
	`is_îr‹
())

546 
	`W_COERCE
(
rc
);

550 
sm_°©s_öfo_t
 
°©s
;

551 
	`W_COERCE
(
ss_m
::
	`g©hî_°©s
(
°©s
));

552 
cout
 << " SM Sèti°ic†: " << 
ídl


553 << 
°©s
 << 
ídl
;

556 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

557 
dñëe
 
ssm
;

559 
cout
 << "Föished!" << 
ídl
;

562 
	}
}

566 
	$maö
(
¨gc
, * 
¨gv
[])

568 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

569 i‡(!
smtu
)

570 
	`W_FATAL
(
fcOUTOFMEMORY
);

572 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

573 if(
e
.
	`is_îr‹
()) {

574 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

577 
e
 = 
smtu
->
	`joö
();

578 if(
e
.
	`is_îr‹
()) {

579 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

583 
rv
 = 
smtu
->
ªtvÆ
;

584 
dñëe
 
smtu
;

586  
rv
;

587 
	}
}

	@src/sm/tests/file_scan.cpp

30 
	~"w_deföes.h
"

38 
	~<w_°ªam.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<ˇs£π
>

43 
	~"sm_vas.h
"

45 
	~"w_gë›t.h
"

46 
cmdlöe_num_ªc
(-1);

47 
num_ªc
(0);

49 
ss_m
* 
	gssm
 = 0;

52 
w_rc_t
 
	trc_t
;

55 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

56 c⁄° * 
¥og_ty≥
,

57 & 
¨gc
, ** 
¨gv
);

59 
	sfûe_öfo_t
 {

60 c⁄° * 
	mkey
;

61 
°id_t
 
	mfid
;

62 
rid_t
 
	mfú°_rid
;

63 
	mnum_ªc
;

64 
	mªc_size
;

66 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

68 
	go°ªam
 &

69 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

71 
	go
 << "key " << 
	göfo
.
	gkey


72 << " fid " << 
	göfo
.
	gfid


73 << " fú°_rid " << 
	göfo
.
	gfú°_rid


74 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


75 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

76  
	go
;

80 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

85 
w_rc_t


86 
	$föd_fûe_öfo
(
vid_t
 
vid
, 
°id_t
 
roŸ_iid
, 
fûe_öfo_t
 &
öfo
)

89 
	`W_DO
(
ssm
->
	`begö_x˘
());

91 
boﬁ
 
found
;

93 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
vid
, 
roŸ_iid
));

95 
smsize_t
 
öfo_Àn
 = (
öfo
);

96 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

97 
	`W_DO
(
ss_m
::
	`föd_assoc
(
roŸ_iid
,

98 
key_vec_tmp
,

99 &
öfo
, 
öfo_Àn
, 
found
));

100 i‡(!
found
) {

101 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

102  
	`RC
(
fcASSERT
);

104 
˚º
 << 
__LINE__
 << " foundássoc "

105 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

108 
	`W_DO
(
ssm
->
	`commô_x˘
());

110  
RCOK
;

112 
	}
}

120 
rc_t


121 
	$£tup_devi˚_™d_vﬁume
(c⁄° * 
devi˚_«me
, 
boﬁ
 
öô_devi˚
,

122 
smksize_t
 
quŸa
, 
lvid_t
& 
lvid
, 
num_ªc
,

123 
smsize_t
 
ªc_size
,

124 
°id_t
& 
fid
,

125 
rid_t
& 
fú°_rid


128 
devid_t
 
devid
;

129 
u_öt
 
vﬁ_˙t
;

130 
rc_t
 
rc
;

132 
°id_t
 
roŸ_iid
;

133 
fûe_öfo_t
 
öfo
;

135 
vid_t
 
	`vid
(1);

136 i‡(
öô_devi˚
) {

137 
cout
 << "F‹m©tög devi˚: " << 
devi˚_«me


138 << " wôhá " << 
quŸa
 << "KB quŸ®..." << 
ídl
;

139 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
devi˚_«me
, 
quŸa
, 
åue
));

141 
cout
 << "Mou¡ög devi˚: " << 
devi˚_«me
 << 
ídl
;

143 
	`W_DO
(
ssm
->
	`mou¡_dev
(
devi˚_«me
, 
vﬁ_˙t
, 
devid
));

145 
cout
 << "Mou¡ed devi˚: " << 
devi˚_«me


146 << " vﬁumêcou¡ " << 
vﬁ_˙t


147 << " devi˚ " << 
devid


148 << 
ídl
;

152 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

153 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
lvid
));

154 
cout
 << "Gíî©edÜvid " << 
lvid
 << 
ídl
;

157 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

158 
cout
 << " wôhá " << 
quŸa
 << "KB quŸ®..." << 
ídl
;

159 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
vid
 << 
ídl
;

160 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
devi˚_«me
, 
lvid
, 
quŸa
, 
Ál£
, 
vid
));

161 
cout
 << "Cª©ed " << 
vid
 << 
ídl
;

164 
cout
 << "Cª©ögá fûêwôh " << 
num_ªc


165 << "Ñec‹d†o‡sizê" << 
ªc_size
 << 
ídl
;

166 
	`W_DO
(
ssm
->
	`begö_x˘
());

168 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

169 
rid_t
 
rid
;

173 * 
dummy
 = 
√w
 [
ªc_size
];

174 
	`mem£t
(
dummy
, '\0', 
ªc_size
);

175 
vec_t
 
	`d©a
(
dummy
, 
ªc_size
);

177 
i
 = 0; i < 
num_ªc
; i++) {

178 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));;

179 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

180 
ªc_size
, 
d©a
, 
rid
));

181 i‡(
i
 == 0) {

182 
öfo
.
fú°_rid
 = 
rid
;

185 
dñëe
 [] 
dummy
;

186 
öfo
.
num_ªc
 =Çum_rec;

187 
öfo
.
ªc_size
 =Ñec_size;

191 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
vid
, 
roŸ_iid
));

193 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

194 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

195 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
roŸ_iid
,

196 
key_vec_tmp
,

197 
öfo_vec_tmp
));

198 
˚º
 << 
__LINE__
 << " Creatingássoc "

199 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

200 
	`W_DO
(
ssm
->
	`commô_x˘
());

203 
cout
 << "UsögáÃódyÉxi°ög devi˚: " << 
devi˚_«me
 << 
ídl
;

205 
rc
 = 
ssm
->
	`mou¡_dev
(
devi˚_«me
, 
vﬁ_˙t
, 
devid
);

206 i‡(
rc
.
	`is_îr‹
()) {

207 
˚º
 << "Eº‹: couldÇŸ mou¡ devi˚: " << 
devi˚_«me
 << 
ídl
;

208 
˚º
 << " Did you f‹gëÅÿru¿thê£rvî wôh -òthêfú°Åime?" << 
ídl
;

209  
rc
;

213 
lvid_t
* 
lvid_li°
;

214 
u_öt
 
lvid_˙t
;

215 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

216 i‡(
lvid_˙t
 == 0) {

217 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

218 
	`exô
(1);

220 
lvid
 = 
lvid_li°
[0];

221 
dñëe
 [] 
lvid_li°
;

225 
fûe_öfo_t
 
öfo2
;

226 
	`W_COERCE
(
	`föd_fûe_öfo
(
vid
, 
roŸ_iid
, 
öfo2
 ));

228 if(
öô_devi˚
)

230 if(
öfo
.
fú°_rid
 !
öfo2
.first_rid) {

231 
˚º
 << "fú°_rid : " << 
öfo
.
fú°_rid


232 << " st‹ed infÿha†" << 
öfo2
.
fú°_rid
 << 
ídl
;

233  
	`RC
(
fcASSERT
);

235 if(
öfo
.
fid
 !
öfo2
.fid) {

236 
˚º
 << "fid : " << 
öfo
.
fid


237 << " st‹ed infÿha†" << 
öfo2
.
fid
 << 
ídl
;

238  
	`RC
(
fcASSERT
);

241 
fú°_rid
 = 
öfo2
.first_rid;

242 
fid
 = 
öfo2
.fid;

244  
RCOK
;

245 
	}
}

249 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

251 
˚º
 << "Ußge: sîvî [-h] [-i] -»r|‡[›ti⁄s]" << 
ídl
;

252 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêwôhÇª¯ªc‹ds" << 
ídl
;

253 
˚º
 << " -»lock gønuœrôyÑ‘ec‹dË‹ f(ûe)" << 
ídl
;

254 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

255 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

256 
	}
}

258 
	$sˇn_i_sˇn
(c⁄° 
°id_t
& 
fid
, 
num_ªc
,

259 
ss_m
::
c⁄cuºícy_t
 
cc
)

261 
cout
 << "°¨tög sˇn_òo‡" << 
num_ªc
 << "Ñec‹ds" << 
ídl
;

262 
sˇn_fûe_i
 
	`sˇn
(
fid
, 
cc
);

263 
pö_i
* 
h™dÀ
;

264 
boﬁ
 
eof
 = 
Ál£
;

265 
i
 = 0;

267 
	`W_COERCE
(
sˇn
.
	`√xt
(
h™dÀ
, 0, 
eof
));

268 if(
eof
) ;

270 
	`w_as£π1
(
h™dÀ
->
	`pö√d
());

271 c⁄° *
hdr
 =
h™dÀ
->
	`hdr
();

272 
smsize_t
 
hdrsize
=
h™dÀ
->
	`hdr_size
();

274 
vec_t
 
	`ªf
(
hdr
, 
hdrsize
);;

275 
ªfi
;

276 
ªf
.
	`c›y_to
(&
ªfi
,  (refi));

278 
	`w_as£π1
(
ªfi
 =
i
);

285 
i
++;

287 
	`as£π
(
i
 =
num_ªc
);

288 
cout
 << "sˇn_òsˇ¿com∂ëe" << 
ídl
;

289 
	}
}

293 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

294 
¨gc
;

295 **
	m¨gv
;

296 
	mpublic
:

297 
ªtvÆ
;

299 
	$smthªad_u£r_t
(
ac
, **
av
)

300 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

301 
	`¨gc
(
ac
), 
	`¨gv
(
av
), 
	$ªtvÆ
(0) { }

302 ~
	$smthªad_u£r_t
(Ë{
	}
}

303 
run
();

307 
	gsmthªad_u£r_t
::
	$run
()

309 
rc_t
 
rc
;

312 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

313 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

314 
›ti⁄_t
* 
›t_num_ªc
 = 0;

315 
›ti⁄_t
* 
›t_ªc_size
 = 0;

317 
cout
 << "¥o˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

318 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

319 
›ti⁄_group_t
 
	`›ti⁄s
(
›ti⁄_Àvñ_˙t
);

321 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

322 
NULL
, "device containg volume holding fileÅo scan",

323 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

324 
›t_devi˚_«me
));

326 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

328 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

329 
›t_devi˚_quŸa
));

331 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

332 
NULL
, "number ofÑecords in file",

333 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

334 
›t_num_ªc
));

336 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("rec_size", "# > 0",

338 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

339 
›t_ªc_size
));

342 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

344 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
¨gc
, 
¨gv
);

345 i‡(
rc
.
	`is_îr‹
()) {

346 
	`ußge
(
›ti⁄s
);

347 
ªtvÆ
 = 1;

353 
boﬁ
 
öô_devi˚
 = 
Ál£
;

354 
›ti⁄
;

355 * 
sˇn_ty≥
 = 0;

356 c⁄° * 
lock_gøn
 = "f";

357 (
›ti⁄
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:hil:")) != -1) {

358 
›ti⁄
) {

360 
cmdlöe_num_ªc
 = 
	`°πﬁ
(
›èrg
, 0, 0);

363 
	`ußge
(
›ti⁄s
);

367 i‡(
öô_devi˚
) {

368 
˚º
 << "Eº‹ o∆y o√ -ò∑ømëîáŒowed" << 
ídl
;

369 
	`ußge
(
›ti⁄s
);

370 
ªtvÆ
 = 1;

374 
öô_devi˚
 = 
åue
;

379 
lock_gøn
 = 
›èrg
;

380 i‡(
lock_gøn
[0] != 'r' &&

381 
lock_gøn
[0] != 'f' ) {

382 
˚º
 << "lock gønuœrôy o±i⁄ (-lËmu° bê⁄êo‡r,f" << 
ídl
;

383 
ªtvÆ
 = 1;

389 
	`ußge
(
›ti⁄s
);

390 
ªtvÆ
 = 1;

396 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

397 
ssm
 = 
√w
 
	`ss_m
();

398 i‡(!
ssm
) {

399 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

400 
ªtvÆ
 = 1;

404 
lvid_t
 
lvid
;

405 
smksize_t
 
quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

406 
num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

407 
smsize_t
 
ªc_size
 = 
	`°πﬁ
(
›t_ªc_size
->
	`vÆue
(), 0, 0);

408 
rid_t
 
°¨t_rid
;

409 
°id_t
 
fid
;

411 if(
cmdlöe_num_ªc
 > 
num_ªc
) {

412 
cout
 << "ÇumÑe¯o‡" << 
cmdlöe_num_ªc


413 << " ovîride†c⁄fig o±i⁄ÇumÑe¯o‡" << 
num_ªc


414 << 
ídl
;

415 
num_ªc
 = 
cmdlöe_num_ªc
;

418 
cout
 << "NUM RECORDS " << 
num_ªc
 << 
ídl
;

420 
rc
 = 
	`£tup_devi˚_™d_vﬁume
(
›t_devi˚_«me
->
	`vÆue
(),

421 
öô_devi˚
, 
quŸa
, 
lvid
, 
num_ªc
, 
ªc_size
, 
fid
, 
°¨t_rid
);

423 i‡(
rc
.
	`is_îr‹
()) {

424 
˚º
 << "couldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

425 
˚º
 << 
rc
 << 
ídl
;

426 
dñëe
 
ssm
;

427 
rc
 = 
RCOK
;

429 
ªtvÆ
 = 1;

430 if(
rc
.
	`is_îr‹
())

431 
	`W_COERCE
(
rc
);

435 i‡(
sˇn_ty≥
) {

436 
cout
 << "lock gønuœrôy = " << 
lock_gøn
 << 
ídl
;

437 
	`W_COERCE
(
ssm
->
	`begö_x˘
());

438 
sˇn_ty≥
[0]) {

440 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_fûe
;

441 i‡(
lock_gøn
[0] == 'r') {

442 
cc
 = 
ss_m
::
t_cc_ªc‹d
;

444 
	`sˇn_i_sˇn
(
fid
, 
num_ªc
, 
cc
);

449 
	`W_COERCE
(
ssm
->
	`commô_x˘
());

452 
sm_°©s_öfo_t
* 
°©s
 = 
√w
 sm_stats_info_t;

453 
w_auto_dñëe_t
<
sm_°©s_öfo_t
> 
	`autodñ
(
°©s
);

455 
	`W_COERCE
–
ssm
->
	`g©hî_°©s
(*
°©s
));

457 
cout
 << *
°©s
 << 
ídl
;

460 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

461 
dñëe
 
ssm
;

463 
cout
 << "Föished!" << 
ídl
;

466 
	}
}

469 
	$maö
(
¨gc
, * 
¨gv
[])

471 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

472 i‡(!
smtu
)

473 
	`W_FATAL
(
fcOUTOFMEMORY
);

475 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

476 if(
e
.
	`is_îr‹
()) {

477 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

480 
e
 = 
smtu
->
	`joö
();

481 if(
e
.
	`is_îr‹
()) {

482 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

486 
rv
 = 
smtu
->
ªtvÆ
;

487 
dñëe
 
smtu
;

489  
rv
;

490 
	}
}

	@src/sm/tests/file_scan_many.cpp

30 
	~"w_deföes.h
"

38 
	~<w_°ªam.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<ˇs£π
>

42 
	~"sm_vas.h
"

43 
	~"w_gë›t.h
"

45 
ss_m
* 
	gssm
 = 0;

46 
boﬁ
 
debug
(
Ál£
);

47 
vid_t
 
vid
(10);

50 
w_rc_t
 
	trc_t
;

53 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

54 c⁄° * 
¥og_ty≥
,

55 & 
¨gc
, ** 
¨gv
);

57 
	sfûe_öfo_t
 {

58 
fûe_öfo_t
(Ë: 
num_ªc
(0), 
ªc_size
(0), 
≠≥nd_⁄ly
(
Ál£
)

60 
mem£t
(
key
, 0, 120);

62 
°id_t
 
	mfid
;

63 
rid_t
 
	mfú°_rid
;

64 
	mnum_ªc
;

65 
	mªc_size
;

66 
boﬁ
 
	m≠≥nd_⁄ly
;

67 
fûl1
 
	m_fûl1
;

68 
fûl2
 
	m_fûl2
;

69 
	mkey
[120];

72 
	go°ªam
 &

73 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

75 
	go
 << "key " << 
	göfo
.
	gkey


76 << " fid " << 
	göfo
.
	gfid


77 << " fú°_rid " << 
	göfo
.
	gfú°_rid


78 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


79 << "Ñec_sizê" << 
	göfo
.
	gªc_size


80 << "áµíd-⁄ly " << 
	göfo
.
	g≠≥nd_⁄ly
 ;

81  
	go
;

84 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

87 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

90 
˚º
 << "Ußge: sîvî [-h] [-i] [›ti⁄s]" << 
ídl
;

91 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêwôhÇª¯ªc‹ds" << 
ídl
;

92 
˚º
 << " -¿<#ªc‹ds>" << 
ídl
;

93 
˚º
 << " -A såi˘-≠≥nd" << 
ídl
;

94 
˚º
 << " -dÖröàªc‹d id†found" << 
ídl
;

95 
˚º
 << " -hÖröàthi†mesßge" << 
ídl
;

96 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

97 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

98 
	}
}

101 
	~<°rögs.h
>

104 ˛as†
	csmthªad_maö_t
 : 
public
 
smthªad_t


106 
¨gc
;

107 **
	m¨gv
;

108 
	mpublic
:

109 
ªtvÆ
;

110 
	m¥Ÿe˘ed
:

111 *
key
;

112 
boﬁ
 
	m≠≥nd_⁄ly
;

113 
fûl1
 
	mdummy1
;

114 
vid_t
 
	mvid
;

115 
w_rc_t
 
föd_fûe_öfo
(
vid_t
 
vid
, 
°id_t
 
roŸ_iid
, 
fûe_öfo_t
 &
öfo
);

117 *
	$make
(
_id
, ) {

118 c⁄° 
SZ
=120;

119 
key
 = 
√w
 [
SZ
];

120 
	`bzîo
(
key
, 
SZ
);

123 
	`•rötf
(
key
, "SCANFILE %d.", 
_id
);

124  
key
;

126 
public
:

127 
	`smthªad_maö_t
(
ac
, **
av
, c⁄° *
«me
="smthread_main_t" )

128 : 
	`smthªad_t
(
t_ªguœr
, 
«me
),

129 
	`¨gc
(
ac
), 
	`¨gv
(
av
), 
	`ªtvÆ
(0), 
	`key
(0),

130 
	$≠≥nd_⁄ly
(
Ál£
)

131 { 
	}
}

132 ~
	$smthªad_maö_t
(Ë{ 
dñëe
[] 
key
; 
	}
}

134 
rc_t
 
£tup_devi˚_™d_vﬁume
(

135 c⁄° * 
devi˚_«me
, 
boﬁ
 
öô_devi˚
,

136 
smksize_t
 
quŸa


138 
run
();

140 
smthªad_maö_t
 * 
	tthªad±r
;

145 ˛as†
	csmthªad_¸ót‹_t
 : 
public
 
smthªad_maö_t


147 
num_ªc
;

148 
	mªc_size
;

149 
	mi
;

150 
	mpublic
:

151 
	$smthªad_¸ót‹_t
(c⁄° 
vid_t
 &
v
, 
_id
, 
n
, 
sz
) :

152 
	`smthªad_maö_t
(0,0, "smthread_creator_t"),

153 
	`num_ªc
(
n
Ë, 
	`ªc_size
(
sz
), 
	$i
(
_id
)

155 
key
 = 
	`make
(
_id
, 
n
);

156 
vid
 = 
v
;

159 ~
	$smthªad_¸ót‹_t
()

161 
	}
}

162 
run
();

165 ˛as†
	csmthªad_sˇ¬î_t
 : 
public
 
smthªad_maö_t


167 
num_ªc
;

168 
	mªc_size
;

170 
sˇn_i_sˇn
(c⁄° 
°id_t
& 
fid
, 
num_ªc
, 
ss_m
::
c⁄cuºícy_t
 
cc
);

171 
	mpublic
:

172 
	$smthªad_sˇ¬î_t
(

173 c⁄° 
vid_t
 &
v
, 
_id
, 
n
, 
sz
) :

174 
	`smthªad_maö_t
(0,0, "smthread_scanner_t"),

175 
	`num_ªc
(
n
),

176 
	$ªc_size
(
sz
)

177 { 
vid
 = 
v
;

178 
key
 = 
	`make
(
_id
, 
n
);

180 ~
	$smthªad_sˇ¬î_t
(Ë{ 
	}
}

181 
run
();

187 
w_rc_t


188 
	gsmthªad_maö_t
::
	$föd_fûe_öfo
(

189 
vid_t
 
_vid
,

190 
°id_t
 
roŸ_iid
,

191 
fûe_öfo_t
 &
öfo


195 
	`W_DO
(
ssm
->
	`begö_x˘
());

196 
boﬁ
 
found
;

197 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
roŸ_iid
));

200 
smsize_t
 
öfo_Àn
 = (
öfo
);

201 c⁄° 
vec_t
 
	`key_vec_tmp
(
key
, 
	`°æí
(key));

202 
	`W_DO
(
ss_m
::
	`föd_assoc
(
roŸ_iid
, 
key_vec_tmp
,

203 &
öfo
, 
öfo_Àn
, 
found
));

204 i‡(!
found
) {

205 
˚º
 << "No file information found,Üooking for "

206 << 
key


207 << "Üvid" << 
_vid


208 << "ÑoŸ_iid" << 
roŸ_iid


209 <<
ídl
;

210  
	`RC
(
fcASSERT
);

212 
cout
 << " foundássoc "

213 << 
key
 << " --> " << 
öfo
 << 
ídl
;

216 
	`W_DO
(
ssm
->
	`commô_x˘
());

218  
RCOK
;

220 
	}
}

228 
rc_t


229 
	gsmthªad_maö_t
:: 
	$£tup_devi˚_™d_vﬁume
(c⁄° * 
devi˚_«me
,

230 
boﬁ
 
öô_devi˚
,

231 
smksize_t
 
quŸa


234 
devid_t
 
devid
;

235 
u_öt
 
vﬁ_˙t
;

236 
rc_t
 
rc
;

238 
vid
 = 10;

240 
fûe_öfo_t
 
öfo
;

242 i‡(
öô_devi˚
)

244 
cout
 << "F‹m©tög devi˚: " << 
devi˚_«me


245 << " wôhá " << 
quŸa
 << "KB quŸ®..." << 
ídl
;

246 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
devi˚_«me
, 
quŸa
, 
åue
));

248 
cout
 << "Mou¡ög devi˚: " << 
devi˚_«me
 << 
ídl
;

250 
	`W_DO
(
ssm
->
	`mou¡_dev
(
devi˚_«me
, 
vﬁ_˙t
, 
devid
));

252 
cout
 << "Mou¡ed devi˚: " << 
devi˚_«me


253 << " vﬁumêcou¡ " << 
vﬁ_˙t


254 << " devi˚ " << 
devid


255 << 
ídl
;

259 
lvid_t
 
lvid
;

260 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

261 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
lvid
));

262 
cout
 << "Gíî©edÜvid " << 
lvid
 << 
ídl
;

265 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

266 
cout
 << " wôhá " << 
quŸa
 << "KB quŸ®..." << 
ídl
;

267 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
vid
 << 
ídl
;

268 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
devi˚_«me
, 
lvid
, 
quŸa
, 
Ál£
, 
vid
));

269 
cout
 << "Cª©ed vid " << 
vid
 << 
ídl
;

271 #i‡
USE_LID


272 
cout
 << "Addög LID index" << 
ídl
;

274 
	`W_DO
(
ssm
->
	`add_logiˇl_id_ödex
(
lvid
, 0, 0));

279 
cout
 << "UsögáÃódyÉxi°ög devi˚: " << 
devi˚_«me
 << 
ídl
;

281 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
devi˚_«me
, 
vﬁ_˙t
, 
devid
, 
vid
);

282 i‡(
rc
.
	`is_îr‹
()) {

283 
˚º
 << "Eº‹: couldÇŸ mou¡ devi˚: " << 
devi˚_«me
 << 
ídl
;

284 
˚º


285 << " Did you f‹gëÅÿru¿thê£rvî wôh -òthêfú°Åime?" << 
ídl
;

286  
rc
;

290 
lvid_t
* 
lvid_li°
;

291 
u_öt
 
lvid_˙t
;

292 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

293 i‡(
lvid_˙t
 == 0) {

294 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

295 ::
	`exô
(1);

297 
cout
 << "Device has volumes:" ;

298 
i
=0; i < 
lvid_˙t
; i++) {

299 
cout
 << 
lvid_li°
[
i
] << " " ;

301 
cout
 << 
ídl
;

303 
	`W_DO
(
ss_m
::
	`lvid_to_vid
(
lvid_li°
[0], 
vid
));

304 
dñëe
 [] 
lvid_li°
;

307  
RCOK
;

308 
	}
}

310 
	gsmthªad_maö_t
::
	$run
()

312 
rc_t
 
rc
;

315 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

316 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

317 
›ti⁄_t
* 
›t_num_ªc
 = 0;

318 
›ti⁄_t
* 
›t_ªc_size
 = 0;

320 
cout
 << "¥o˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

321 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

322 
›ti⁄_group_t
 
	`›ti⁄s
(
›ti⁄_Àvñ_˙t
);

324 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

325 
NULL
, "device containg volume holding fileÅo scan",

326 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

327 
›t_devi˚_«me
));

329 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

331 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

332 
›t_devi˚_quŸa
));

334 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

335 
NULL
, "number ofÑecords in file",

336 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

337 
›t_num_ªc
));

339 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("rec_size", "# > 0",

341 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

342 
›t_ªc_size
));

345 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

347 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
¨gc
, 
¨gv
);

348 i‡(
rc
.
	`is_îr‹
()) {

349 
	`ußge
(
›ti⁄s
);

350 
ªtvÆ
 = 1;

354 
	`cmdlöe_ƒec‹ds
(-1);

355 
	`ƒec‹ds
(0);

358 
boﬁ
 
öô_devi˚
 = 
Ál£
;

359 
›ti⁄
;

360 
	`¡hªads
(1);

361 (
›ti⁄
 = 
	`gë›t
(
¨gc
, 
¨gv
, "Adn:hit:")) != -1) {

362 
›ti⁄
) {

364 
≠≥nd_⁄ly
 = 
åue
;

367 
debug
 = 
åue
;

370 
cmdlöe_ƒec‹ds
 = 
	`°πﬁ
(
›èrg
, 0, 0);

373 
	`ußge
(
›ti⁄s
);

374 
ªtvÆ
 = 1;

379 i‡(
öô_devi˚
) {

380 
˚º
 << "Eº‹ o∆y o√ -ò∑ømëîáŒowed" << 
ídl
;

381 
	`ußge
(
›ti⁄s
);

382 
ªtvÆ
 = 1;

386 
öô_devi˚
 = 
åue
;

390 
¡hªads
 = 
	`°πﬁ
(
›èrg
, 0, 0);

393 
	`ußge
(
›ti⁄s
);

394 
ªtvÆ
 = 1;

400 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

401 
ssm
 = 
√w
 
	`ss_m
();

402 i‡(!
ssm
) {

403 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

404 
ªtvÆ
 = 1;

408 
smksize_t
 
quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

409 
ƒec‹ds
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

410 
smsize_t
 
ªc_size
 = 
	`°πﬁ
(
›t_ªc_size
->
	`vÆue
(), 0, 0);

411 
rid_t
 
°¨t_rid
;

412 
°id_t
 
fid
;

414 if(
cmdlöe_ƒec‹ds
 > 0) {

415 
cout
 << "ÇumÑe¯o‡" << 
cmdlöe_ƒec‹ds


416 << " ovîride†c⁄fig o±i⁄ÇumÑe¯o‡" << 
ƒec‹ds


417 << 
ídl
;

418 
ƒec‹ds
 = 
cmdlöe_ƒec‹ds
;

421 
rc
 = 
	`£tup_devi˚_™d_vﬁume
(
›t_devi˚_«me
->
	`vÆue
(),

422 
öô_devi˚
, 
quŸa
);

424 i‡(
rc
.
	`is_îr‹
()) {

425 
˚º
 << "couldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

426 
˚º
 << 
rc
 << 
ídl
;

427 
dñëe
 
ssm
;

428 
rc
 = 
RCOK
;

430 
ªtvÆ
 = 1;

431 if(
rc
.
	`is_îr‹
())

432 
	`W_COERCE
(
rc
);

436 
cout
 << "************ vid " << 
vid
 << 
ídl
;

437 
cout
 << "************ NTHREADS " << 
¡hªads
 << 
ídl
;

440 
thªad±r
 * 
subthªads
 = 
√w
Åhªad±∏[
¡hªads
];

441 if(
öô_devi˚
) {

442 
i
=0; i<
¡hªads
; i ++)

444 
ƒecs
 = 
ƒec‹ds
/(
i
?i:1) +1;

445 
subthªads
[
i
] =

446 
√w
 
	`smthªad_¸ót‹_t
(
vid
, 
i
, 
ƒecs
, 
ªc_size
);

447 #i‡0 && 
	`deföed
(
USING_VALGRIND
)

448 if(
RUNNING_ON_VALGRIND
)

450 
	`check_deföed√ss
(
subthªads
[
i
], (
smthªad_¸ót‹_t
));

451 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

456 
i
=0; i<
¡hªads
; i ++)

458 
ƒecs
 = 
ƒec‹ds
/(
i
?i:1) +1;

459 
subthªads
[
i
] =

460 
√w
 
	`smthªad_sˇ¬î_t
(
vid
, 
i
, 
ƒecs
, 
ªc_size
);

463 
i
=0; i<
¡hªads
; i ++)

465 
subthªads
[
i
]->
	`f‹k
();

467 
i
=0; i<
¡hªads
; i ++)

469 
subthªads
[
i
]->
	`joö
();

471 
i
=0; i<
¡hªads
; i ++)

473 
dñëe
 
subthªads
[
i
];

475 
dñëe
[] 
subthªads
;

477 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

478 
dñëe
 
ssm
;

480 
cout
 << "*******************************************" << 
ídl
;

481 
cout
 << "Föished!Ñëu∫ vÆue=" << 
ªtvÆ
 << 
ídl
;

482 
cout
 << "*******************************************" << 
ídl
;

483 
	}
}

485 
	#START
 1

	)

487 
	gsmthªad_¸ót‹_t
::
	$run
()

489 
cout
 << "Cª©ed cª©‹ wôh key " << 
key
 << 
ídl
;

491 
fûe_öfo_t
 
öfo
;

492 
	`°r˝y
(
öfo
.
key
, key);

495 
cout
 << "Cª©ögá fûêwôh " << 
num_ªc


496 << "Ñec‹d†o‡sizê" << 
ªc_size


497 << " vid " << 
vid


498 << 
ídl
;

499 
	`W_COERCE
(
ssm
->
	`begö_x˘
());

501 
	`W_COERCE
(
ssm
->
	`¸óã_fûe
(
vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

502 
rid_t
 
rid
;

504 * 
dummy
 = 
√w
 [
ªc_size
];

505 
	`mem£t
(
dummy
, '\0', 
ªc_size
);

506 
vec_t
 
	`d©a
(
dummy
, 
ªc_size
);

507 if(
≠≥nd_⁄ly
)

509 
öfo
.
≠≥nd_⁄ly
=
åue
;

510 
≠≥nd_fûe_i
 
	`ôî
(
öfo
.
fid
);

511 
j
 = 
START
; j <
num_ªc
; j++) {

512 c⁄° 
vec_t
 
	`hdr
(&
j
, (j));;

513 
ôî
.
	`¸óã_ªc
(
hdr
, 
ªc_size
, 
d©a
, 
rid
);

514 i‡(
j
 =
START
) {

515 
öfo
.
fú°_rid
 = 
rid
;

521 
j
 = 
START
; j <
num_ªc
; j++) {

522 c⁄° 
vec_t
 
	`hdr
(&
j
, (j));;

523 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

524 
ªc_size
, 
d©a
, 
rid
));

525 i‡(
j
 =
START
) {

526 
öfo
.
fú°_rid
 = 
rid
;

530 
dñëe
 [] 
dummy
;

531 
öfo
.
num_ªc
 =Çum_rec;

532 
öfo
.
ªc_size
 =Ñec_size;

534 
°id_t
 
roŸ_iid
;

537 
cout
 << "ˇŒög vﬁ_roŸ_idÜvid" << 
vid
 << 
ídl
;

538 
	`W_COERCE
(
ss_m
::
	`vﬁ_roŸ_ödex
(
vid
, 
roŸ_iid
));

540 c⁄° 
vec_t
 
	`key_vec_tmp
(
key
, 
	`°æí
(key));

541 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

542 #i‡1 && 
	`deföed
(
USING_VALGRIND
)

545 if(
RUNNING_ON_VALGRIND
)

547 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

548 
	`check_deföed√ss
(
key
, 
	`°æí
(key));

549 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

550 
	`check_deföed√ss
(&
öfo
, (info));

551 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

554 
	`W_COERCE
(
ss_m
::
	`¸óã_assoc
(
roŸ_iid
,

555 
key_vec_tmp
,

556 
öfo_vec_tmp
));

557 
cout
 << " Creatingássoc "

558 << 
key
 << " --> " << 
öfo
 << 
ídl
;

559 
	`W_COERCE
(
ssm
->
	`commô_x˘
());

562 
fûe_öfo_t
 
öfo2
;

563 
	`W_COERCE
(
	`föd_fûe_öfo
(
vid
, 
roŸ_iid
, 
öfo2
 ));

566 if(
öfo
.
fú°_rid
 !
öfo2
.first_rid) {

567 
˚º
 << "fú°_rid : " << 
öfo
.
fú°_rid


568 << " st‹ed infÿha†" << 
öfo2
.
fú°_rid
 << 
ídl
;

569 
	`W_COERCE
–
	`RC
(
fcASSERT
) );

571 if(
öfo
.
fid
 !
öfo2
.fid) {

572 
˚º
 << "fid : " << 
öfo
.
fid


573 << " st‹ed infÿha†" << 
öfo2
.
fid
 << 
ídl
;

574 
	`W_COERCE
–
	`RC
(
fcASSERT
) );

576 if(
öfo
.
≠≥nd_⁄ly
 !
öfo2
.append_only) {

577 
˚º
 << "≠≥nd_⁄ly : " << 
öfo
.
≠≥nd_⁄ly


578 << " st‹ed infÿha†" << 
öfo2
.
≠≥nd_⁄ly
 << 
ídl
;

579 
	`W_COERCE
–
	`RC
(
fcASSERT
) );

582 
cout
 << "********** D⁄ê¸ótög fûê" << 
öfo
.
fid
 << 
ídl
;

583 
thªad±r
 
subthªad
 =

584 
√w
 
	`smthªad_sˇ¬î_t
(
vid
, 
i
, 
num_ªc
, 
ªc_size
);

585 
subthªad
->
	`f‹k
();

586 
subthªad
->
	`joö
();

587 
dñëe
 
subthªad
;

588 
	}
}

590 
	gsmthªad_sˇ¬î_t
::
	$run
()

592 
cout
 << "********** Created scanner for key "

593 << 
key


594 << 
ídl
;

596 
°id_t
 
roŸ_iid
;

599 
	`W_COERCE
(
ss_m
::
	`vﬁ_roŸ_ödex
(
vid
, 
roŸ_iid
));

601 
fûe_öfo_t
 
öfo2
;

602 
	`W_COERCE
(
	`föd_fûe_öfo
(
vid
, 
roŸ_iid
, 
öfo2
 ));

604 
≠≥nd_⁄ly
 = 
öfo2
.append_only;

605 
rid_t
 
fú°_rid
 = 
öfo2
.first_rid;

606 
°id_t
 
fid
 = 
öfo2
.fid;

607 
num_ªc
 = 
öfo2
.num_rec;

609 
cout
 << "********** Sèπög sˇ¬ög fûê" << 
fid
 << 
ídl
;

612 
	`W_COERCE
(
ssm
->
	`begö_x˘
());

613 
ss_m
::
c⁄cuºícy_t
 
cc
 = ss_m::
t_cc_fûe
;

614 
this
->
	`sˇn_i_sˇn
(
fid
, 
num_ªc
, 
cc
);

615 
	`W_COERCE
(
ssm
->
	`commô_x˘
());

617 
	}
}

619 
	gsmthªad_sˇ¬î_t
::
	$sˇn_i_sˇn
(c⁄° 
°id_t
& 
fid
, 
num_ªcs
,

620 
ss_m
::
c⁄cuºícy_t
 
cc
)

622 
cout
 << "starting scan_i of "

623 << 
fid
 << ", "

624 << 
num_ªcs
 << "Ñec‹ds" << 
ídl
;

625 
sˇn_fûe_i
 
	`sˇn
(
fid
, 
cc
);

627 
w_rc_t
 
rc
 = 
sˇn
.
	`îr‹_code
();

628 if(
rc
.
	`is_îr‹
()) {

629 
˚º
 << "CouldÇŸ cª©êsˇn_òwôh fid " << 
fid


630 << "Éº‹ i†" << 
rc


631 << 
ídl
;

632 ::
	`exô
(1);

634 
pö_i
 *
h™dÀ
;

635 
boﬁ
 
eof
 = 
Ál£
;

636 
i
 = 
START
;

638 
w_rc_t
 
rc
;

639 
rc
 = 
sˇn
.
	`îr‹_code
();

640 if(
rc
.
	`is_îr‹
()) {

641 
˚º
 << "CouldÇŸ cª©êsˇn_òwôh fid " << 
fid


642 << "Éº‹ i†" << 
rc


643 << 
ídl
;

644 ::
	`exô
(1);

646 
	`w_as£π1
(
sˇn
.
	`îr‹_code
().
	`is_îr‹
(Ë=
Ál£
);

648 
rc
 = 
sˇn
.
	`√xt
(
h™dÀ
, 0, 
eof
);

649 if(
rc
.
	`is_îr‹
()) {

650 
	`W_COERCE
(
rc
);

653 if(
debug
) {

654 
cout
 << " sˇ¬ed i " << 
i
 << ": "

655 << 
sˇn
.
cuº_rid


656 << "Éof=" << 
eof


657 << 
ídl
;

659 if(
eof
) ;

661 
	`w_as£π1
(
h™dÀ
->
	`pö√d
());

662 c⁄° *
hdr
 =
h™dÀ
->
	`hdr
();

663 
smsize_t
 
hdrsize
=
h™dÀ
->
	`hdr_size
();

665 
vec_t
 
	`ªf
(
hdr
, 
hdrsize
);

666 
ªfi
;

667 
ªf
.
	`c›y_to
(&
ªfi
,  (refi));

669 if(
debug
) {

670 
cout
 << " header contains "

671 << 
ªfi
 << 
ídl
;

674 if(
≠≥nd_⁄ly
) {

677 
	`w_as£π1
(
ªfi
 =
i
);

684 
i
++;

686 
cout
 << "sˇn_òsˇ¿com∂ëe, i=" << 
i


687 << "Çum_ª¯ex≥˘ed =" << 
num_ªcs


688 << 
ídl
;

689 
	`as£π
(
i
-
START
 =
num_ªcs
);

690 
	}
}

693 
	$lid_sˇn
(c⁄° 
vid_t
& 
lvid
, c⁄° 
rid_t
& 
°¨t_rid
, 
num_ªc
)

695 
cout
 << "°¨tögÜid sˇ¿o‡" << 
num_ªc
 << "Ñec‹ds" << 
ídl
;

696 
rid_t
 
rid
 = 
°¨t_rid
;

697 
pö_i
 
pö
;

698 
i
;

699 
i
 = 0, 
rid
 = 
°¨t_rid
; i < 
num_ªc
; i++,Ñid.
	`ö¸emít
(1)) {

700 
	`W_COERCE
(
pö
.
	`pö
(
lvid
, 
rid
, 0));

702 
	`as£π
(
i
 =
num_ªc
);

703 
cout
 << "lid sˇ¿com∂ëe" << 
ídl
;

704 
	}
}

709 
	$maö
(
¨gc
, * 
¨gv
[])

711 
smthªad_maö_t
 *
smtu
 = 
√w
 
	`smthªad_maö_t
(
¨gc
, 
¨gv
);

712 i‡(!
smtu
)

713 
	`W_FATAL
(
fcOUTOFMEMORY
);

715 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

716 if(
e
.
	`is_îr‹
()) {

717 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

720 
e
 = 
smtu
->
	`joö
();

721 if(
e
.
	`is_îr‹
()) {

722 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

726 
rv
 = 
smtu
->
ªtvÆ
;

727 
dñëe
 
smtu
;

729  
rv
;

730 
	}
}

	@src/sm/tests/htab.cpp

29 
	#SM_SOURCE


	)

30 
	#HTAB_UNIT_TEST_C


	)

32 
	~"w.h
"

33 
w_rc_t
 
	trc_t
;

34 
	tuöt2_t
;

36 
	~"sm_öt_4.h
"

37 
	~"bf_c‹e.h
"

38 
	~"w_gë›t.h
"

39 
	~"ønd48.h
"

41 
boﬁ
 
debug
(
Ál£
);

42 
boﬁ
 
R™dom
(
Ál£
);

43 
boﬁ
 
R™dom_uniq
(
Ál£
);

44 
åõs
(10);

45 
sig√d48_t
 
∑gebound
(1000);

46 
uöt2_t
 
vﬁ
(1);

47 
uöt
 
°‹íum
(5);

48 
uöt
 
bufkb
(1024);

49 
uöt4_t
 
≈gwrôîs
(1);

51 
uöt4_t
 
	gnbuÂages
 = 0;

53 
ußge
(
W_UNUSED
(
¨gc
), *c⁄° *
¨gv
)

56 
	g˚º
 << "ußge: " << 
	g¨gv
[0]

57 << " -b <buÂoﬁsz i¿KB> : deÁu…=" << (
	gbufkb
)

58 << 
	gídl


59 << " -w <#∑gewrôîs> : deÁu…=" << (
	g≈gwrôîs
)

60 << 
	gídl


61 << " -v <vﬁume#> : deÁu…" << (
	gvﬁ
)

62 << 
	gídl


63 << " -†<°‹e#> : deÁu…=" << (
	g°‹íum
)

64 << 
	gídl


66 << (c⁄° *)(
	gR™dom
?"true":"false")

67 << 
ídl


69 << (c⁄° *)(
R™dom_uniq
?"true":"false")

70 << 
ídl


71 << " -∞<∑ge#Üimô> : deÁu…=" << (
∑gebound
)

72 << 
ídl


73 << " -¿<#Årõs> : deÁu…=" << 
åõs


74 << 
ídl


76 << (c⁄° *)(
debug
?"true":"false")

77 << 
ídl
;

80 
˛ass
 
	gbfcb_t
;

86 ˛as†
	chèb_ã°î
 : 
public
 
smthªad_t


88 íum { 
Zîo
, 
	mInô
, 
	mIn£πed
, 
	mEvi˘ed
, 
	mRëu∫ed
, 
	mRemoved
 } 
	tSètus
;

96 
bf_m
 * 
	g_bfm
;

97 
	g_åõs
;

98 
sig√d48_t
 
	g_∑gebound
;

99 
uöt2_t
 
	g_vﬁ
;

100 
uöt
 
	g_°‹e
;

101 
bf_c‹e_m
 *
	gc‹e
;

103 
	g¥Ÿe˘ed
:

104 
	spidöfo


106 
Õid_t
 
pid
;

107 
Õid_t
 
	gªtu∫ed
;

108 
Sètus
 
	g°©us
;

109 
	gcou¡
;

110 
	gcou¡_ªmoves
;

111 
	gö£πs
;

112 
	gevi˘s
;

114 
pidöfo
(Ë: 
°©us
(
Zîo
),
cou¡
(0),
cou¡_ªmoves
(0),

115 
ö£πs
(0), 
evi˘s
(0) {}

116 
‰õnd
 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	gpidöfo
 &
	göfo
);

118 
‰õnd
 
	go°ªam
 & 
	g›î©‹
<< (o°ªam &
	go
, c⁄° 
	gpidöfo
 &
	göfo
);

119 
	g¥iv©e
:

121 
Õid_t
 *
_i2pid
;

122 
pidöfo
 *
	g_pid2öfo
;

124 
	gbf_c‹e_m
::
T°©s
 
S
;

126 
	gpublic
:

127 
	$hèb_ã°î
(
i
, 
sig√d48_t
 
pb
, 
uöt2_t
 
v
, 
uöt
 
s
) :

128 
	`_bfm
(
NULL
),

129 
	`_åõs
(
i
),

130 
	`_∑gebound
(
pb
),

131 
	`_vﬁ
(
v
), 
	$_°‹e
(
s
)

134 
•a˚_√eded
 = 
bf_m
::
	`mem_√eded
(
nbuÂages
);

138 *
shmba£
;

139 
w_rc_t
 
e
;

140 #ifde‡
HAVE_HUGETLBFS


142 
e
 = 
smthªad_t
::
	`£t_hugëlbfs_∑th
(
HUGETLBFS_PATH
);

144 
e
 = 
smthªad_t
::
	`£t_bufsize
(
•a˚_√eded
, 
shmba£
);

146 i‡(
e
.
	`is_îr‹
()) {

147 
	`W_COERCE
(
e
);

149 
	`w_as£π1
(
	`is_Æig√d
(
shmba£
));

150 
bf_m
 *
_bfm
 = 
√w
 
	`bf_m
(
nbuÂages
, 
shmba£
, 
≈gwrôîs
);

152 i‡(! 
_bfm
) {

153 
	`W_FATAL
(
fcOUTOFMEMORY
);

157 
_pid2öfo
 = 
√w
 
pidöfo
[(
pb
)];

158 
_i2pid
 = 
√w
 
Õid_t
[
i
];

159 
c‹e
 = 
_bfm
->
_c‹e
;

160 
	`mem£t
(&
S
, '\0', (S));

161 
	}
}

162 ~
	$hèb_ã°î
()

165 
	}
}

167 
run
();

168 
run_ö£πs
();

169 
run_lookups
();

170 
run_ªmoves
();

171 
˛ónup
();

172 
	gpidöfo
 & 
	$pid2öfo
(c⁄° 
Õid_t
 &
p
Ë{  
_pid2öfo
[p.
∑ge
]; 
	}
}

173 
	gpidöfo
 &
	$i2öfo
(
i
Ë{  
	`pid2öfo
(
	`i2pid
(i)); 
	}
}

174 
	gÕid_t
 &
	$i2pid
(
i
Ë{  
_i2pid
[i]; 
	}
}

176 
boﬁ
 
	$was_ªtu∫ed
(
Õid_t
 &
p
)

178 
i
=0; i < 
_åõs
; i++)

180 if(
_pid2öfo
[
i
].
ªtu∫ed
 =
p
Ë 
åue
;

182  
Ál£
;

183 
	}
}

185 
¥öt°©s
(
o°ªam
 &
o
, 
boﬁ
 
föÆ
=
Ál£
);

186 
	$¥öt_bf_fûl
(
o°ªam
 &
o
) const;

188 
	}
};

191 
	ghèb_ã°î
::
	$¥öt_bf_fûl
(
o°ªam
 &
o
) const

193 
‰ames
, 
¶Ÿs
;

194 
	`hèb_cou¡
(
c‹e
, 
‰ames
, 
¶Ÿs
);

196 
o
 << "BPoﬁ HTabÀ sèt†∑π2: #buf„r†" << 
‰ames


197 << " #¶Ÿ†" << 
¶Ÿs


198 << " " << (
¶Ÿs
*100.0)/()
‰ames


200 << 
ídl
;

201 
	}
}

204 
	ghèb_ã°î
::
	$¥öt°©s
(
o°ªam
 &
o
, 
boﬁ
 
föÆ
)

206 if(
föÆ
Ë
o
 << "FINAL ";

208 
o
 << "NEW hèb sèts:" << 
ídl
;

210 
	#D
(
x
Ëif(
S
.
bf_hèb_
##x > 0Ë
o
 << S.bf_hèb_##x << " " << #x << 
ídl
;

	)

211 if(!
föÆ
)

213 
	`D
(
ö£πi⁄s
);

214 
	`D
(
ísuªs
);

215 
	`D
(
cuckﬁds
);

216 
	`D
(
¶ow_ö£πs
);

217 
	`D
(
¶Ÿs_åõd
);

218 
	`D
(
¥obes
);

219 
	`D
(
h¨sh_¥obes
);

220 
	`D
(
¥obe_em±y
);

221 
	`D
(
hash_cﬁlisi⁄s
);

222 
	`D
(
h¨sh_lookups
);

223 
	`D
(
lookups
);

224 
	`D
(
lookups_Áûed
);

225 
	`D
(
ªmoves
);

226 
	`D
(
max_limô
);

227 
	`D
(
limô_ex˚eds
);

229 #unde‡
D


230 
	#D
(
x
Ëif(
S
.x > 0Ë
o
 << #x << " " << S.x << 
ídl
;

	)

233 
_bfm
->
	`hèb_°©s
(
S
);

234 
S
.
	`compuã
();

236 
	`D
(
bf_hèb_ö£πi⁄s
);

238 
	`D
(
bf_hèb_¶ow_ö£πs
);

239 
	`D
(
bf_hèb_¥obe_em±y
);

241 
	`D
(
bf_hèb_h¨sh_lookups
);

242 
	`D
(
bf_hèb_lookups
);

243 
	`D
(
bf_hèb_lookups_Áûed
);

244 
	`D
(
bf_hèb_ªmoves
);

246 #unde‡
D


248 
	`¥öt_bf_fûl
(
o
);

249 
	}
}

251 
	ghèb_ã°î
::
	$˛ónup
()

253 
	`run_ªmoves
();

254 
dñëe
[] 
_pid2öfo
;

255 
dñëe
[] 
_i2pid
;

257 
dñëe
 
_bfm
;

258 
_bfm
=0;

259 
	}
}

261 
	ghèb_ã°î
::
	$run
()

263 
sig√d48_t
 
	`pgnum
(0);

267 
i
=0; i < 
_åõs
; i++)

269 
pidöfo
 &
öfo
 = 
	`i2öfo
(
i
);

270 
	`w_as£π0
(
öfo
.
°©us
 =
Zîo
);

272 
i
=0; i < 
_åõs
; i++)

274 if(
R™dom
) {

279 
pgnum
 = 
	`∫g
()->
	`øndn
(
_∑gebound
);

281 if(
R™dom_uniq
) {

283 
j
(
_∑gebound
);

284 
j
-- > 0)

286 
pidöfo
 &
öfo
 = 
_pid2öfo
[
pgnum
];

288 if(
öfo
.
°©us
 =
Zîo
) ;

290 
pgnum
 = 
	`∫g
()->
	`øndn
(
_∑gebound
);

292 if(
j
 == 0) {

293 
˚º
 << " CouldÇŸ cª©êuniquêøndom së " << 
ídl
;

294 
	`exô
 (-1);

298 
pidöfo
 &
öfo
 = 
_pid2öfo
[
pgnum
];

299 if(
öfo
.
°©us
 !
Zîo
)

300 if(
debug
) {

302 
cout
 << "ÑandomÖroduced duplicate "

303 << 
öfo
.
pid


304 << 
ídl
;

310 
pgnum
 = 
i
 % 
_∑gebound
;

314 
	#START
 0

	)

316 
pgnum
 +
START
;

318 
Õid_t
 
	`p
(
_vﬁ
, 
_°‹e
, 
pgnum
);

319 
pidöfo
 &
öfo
 = 
	`pid2öfo
(
p
);

322 if(
öfo
.
°©us
 !
Zîo
Ëif(
debug
)

325 
cout
 << 
__LINE__


326 << " dëe˘ed du∂iˇã " << 
p


327 << "áàödex " << 
i


329 << 
ídl
;

330 
	`w_as£π1
(
öfo
.
°©us
 =
Inô
);

331 
	`w_as£π1
(
öfo
.
pid
 =
p
);

332 
	`w_as£π1
(
öfo
.
cou¡
 > 0);

335 
_i2pid
[
i
] = 
p
;

336 
öfo
.
pid
 = 
p
;

337 
öfo
.
cou¡
 ++;

339 
öfo
.
°©us
 = 
Inô
;

340 
öfo
.
ö£πs
 = info.
evi˘s
 = 0;

342 if(
debug
Ë
cout
 << 
p
 << 
ídl
;

347 if(
debug
 || 
R™dom_uniq
Ë
i
=0; i < 
_åõs
; i++)

349 
pidöfo
 &
öfo
=
_pid2öfo
[
_i2pid
[
i
].
∑ge
];

350 if(
R™dom_uniq
Ë
	`w_as£π0
((
öfo
.
pid
.
∑ge
Ë=
i
 || info.pid.page == 0);

352 if(
öfo
.
cou¡
 > 1) {

353 
cout
 << 
öfo
.
pid
 << " duplicated; count= "

354 << 
öfo
.
cou¡
 << 
ídl
;

358 if(
R™dom_uniq
) {

359 
cout
 << "vîifõdÇÿdups" << 
ídl
;

363 
	`run_ö£πs
();

364 
	`run_lookups
();

370 
	`evi˘ed
(0), 
	`ªtu∫ed
(0), 
	`ö£πed
(0), 
	`öôed
(0), 
	`ªmoved
(0);

371 
i
=0; i < 
_åõs
; i++)

373 
pidöfo
 &
öfo
 = 
	`i2öfo
(
i
);

374 if(
öfo
.
°©us
 =
Inô
Ë
öôed
++;

375 if(
öfo
.
°©us
 =
In£πed
Ë
ö£πed
++;

376 if(
öfo
.
°©us
 =
Rëu∫ed
Ë
ªtu∫ed
++;

377 if(
öfo
.
°©us
 =
Evi˘ed
Ë
evi˘ed
++;

378 if(
öfo
.
°©us
 =
Removed
Ë
ªmoved
++;

380 
u«ccou¡ed
 = 
_åõs
 - (
öôed
 + 
ö£πed
+ 
ªtu∫ed
 + 
evi˘ed


381 + 
ªmoved
);

382 
cout
 << "Remaöög Inô " << 
öôed


383 << " In£πed " << 
ö£πed


384 << " Evi˘ed " << 
evi˘ed


385 << " Rëu∫ed " << 
ªtu∫ed


386 << " Removed " << 
ªmoved


387 << " U«ccou¡ed " << 
u«ccou¡ed


388 << 
ídl
;

391 
	`¥öt°©s
(
cout
, 
åue
);

392 
	`˛ónup
();

393 
	}
}

395 
	ghèb_ã°î
::
	$run_ö£πs
()

397 
i
=0; i < 
_åõs
; i++)

399 
pidöfo
 &
öfo
 = 
	`i2öfo
(
i
);

401 
Õid_t
 
pid
 = 
öfo
.pid;

402 if(
öfo
.
°©us
 =
In£πed
)

403 if(
debug
) {

404 
cout


405 << "i=" << 
i


406 << "Öid=" << 
pid


408 << 
ídl
;

410 
cout
 << " #ö£π†" << 
öfo
.
ö£πs


411 << " #evi˘†" << 
öfo
.
evi˘s


412 << " cou¡ " << 
öfo
.
cou¡


413 << 
ídl
;

416 
	`¶Ÿs
(0);

417 
	`‰ames
(0);

418 if(
debug
)

420 
	`hèb_cou¡
(
c‹e
, 
‰ames
, 
¶Ÿs
);

421 
cout
 << "bef‹êhèb_ö£π:\à‰ame†=" << 
‰ames


422 << " slŸ†ö u£ " << 
¶Ÿs
 <<
ídl
;;

425 
bfcb_t
 *
p
 = 
	`hèb_ö£π
(
c‹e
, 
pid
, 
S
);

427 if(
p
)

429 if(
debug
) {

430 
cout
 << "Possible move: :Öid= "

431 << 
pid


433 << 
p
->
	`pid
()

434 << 
ídl
;

436 
	`¥öt°©s
(
cout
);

439 
öfo
.
ªtu∫ed
 = 
p
->
	`pid
();

441 
pidöfo
 &
öfo_ªtu∫ed
 = 
	`pid2öfo
(
p
->
	`pid
());

442 
öfo_ªtu∫ed
.
°©us
 = 
Rëu∫ed
;

443 
öfo_ªtu∫ed
.
evi˘s
++ ;

447 
p
->
	`zîo_pö_˙t
();

449 
öfo
.
°©us
 = 
In£πed
;

450 
öfo
.
ö£πs
++;

451 if(
debug
) {

452 if(
i
 % 10Ë
cout
 << "." ;

453 
cout
 << 
i
 << 
ídl
;

455 
bfcb_t
 *
p2
 = 
	`hèb_lookup
(
c‹e
, 
pid
, 
S
);

456 if(!
p2
) {

457 
˚º
 << " C™nŸ föd ju°-ö£πedÖagê" << 
pid
 << 
ídl
;

458 
	`¥öt°©s
(
˚º
);

459 
	`w_as£π1
(0);

465 
p2
->
	`zîo_pö_˙t
();

467 
	`w_as£π1
(
p2
->
	`pid
(Ë=
pid
);

469 if(
debug
) {

470 
¶Ÿs2
;

471 
	`hèb_cou¡
(
c‹e
, 
‰ames
, 
¶Ÿs2
);

472 if(
¶Ÿs2
 < 
¶Ÿs
)

474 
cout
 << "htab_insertÑeduced #Éntries in use:\t frames ="

475 << 
‰ames
 << " slŸ†ö u£ " << 
¶Ÿs2
 <<
ídl
;

481 if(
debug
) {

482 
cout
 <<
ídl
 << "á·î in£πi⁄†: " <<Éndl; 
	`¥öt°©s
(cout);

484 
	}
}

486 
	ghèb_ã°î
::
	$run_lookups
()

488 
i
=0; i < 
_åõs
; i++)

490 
pidöfo
 &
öfo
 = 
	`i2öfo
(
i
);

491 
Õid_t
 
pid
=
öfo
.pid;

492 
bfcb_t
 *
p
 = 
	`hèb_lookup
(
c‹e
, 
pid
, 
S
);

493 if(!
p
) {

494 if(
öfo
.
°©us
 !
Rëu∫ed
)

506 if(
debug
) {

507 
cout
 << 
pid
 << " wasÉvicted; "

508 << " sètu†" << 
öfo
.
°©us


509 << " was_ªtu∫ed = " << 
	`was_ªtu∫ed
(
pid
)

510 << 
ídl
;

512 
öfo
.
°©us
 = 
Evi˘ed
;

513 
öfo
.
evi˘s
++;

517 if(
debug
) {

518 
cout
 <<
ídl
 << "á·îÜookup†: " <<Éndl; 
	`¥öt°©s
(cout);

520 
	}
}

522 
	ghèb_ã°î
::
	$run_ªmoves
()

524 
i
=0; i < 
_åõs
; i++)

526 
pidöfo
 &
öfo
 = 
	`i2öfo
(
i
);

527 
Õid_t
 
pid
=
öfo
.pid;

528 if(
öfo
.
cou¡_ªmoves
 == 0)

531  
	`hèb_ªmove
(
c‹e
, 
pid
, 
S
);

532 
öfo
.
°©us
 = 
Removed
;

535 
öfo
.
cou¡_ªmoves
++;

538 if(
debug
) {

539 
cout
 << 
ídl
 << "á·îÑemove†: " <<Éndl; 
	`¥öt°©s
(cout);

540 
cout
 << 
ídl
;

542 
	}
}

544 
	~<±hªad.h
>

546 
	$maö
 (
¨gc
, *c⁄° 
¨gv
[])

549 c⁄° 
∑ge_sz
 = 
SM_PAGESIZE
;

551 
›ti⁄
;

552 (
›ti⁄
 = 
	`gë›t
(
¨gc
, 
¨gv
, "b:dFn:p:rRs:Tv:w:")) != -1) {

553 
›ti⁄
) {

555 
R™dom_uniq
 = 
åue
;

556 
R™dom
 = 
åue
;

559 
R™dom
 = 
åue
;

562 
debug
 = 
åue
;

565 
bufkb
 = 
	`°πﬁ
(
›èrg
, 0, 0);

568 
≈gwrôîs
 = 
	`°πﬁ
(
›èrg
, 0, 0);

571 
vﬁ
 = 
	`©oi
(
›èrg
);

574 
°‹íum
 = 
	`©oi
(
›èrg
);

577 
∑gebound
 = 
	`°πﬁ
(
›èrg
, 0, 0);

580 
åõs
 = 
	`©oi
(
›èrg
);

583 
	`ußge
(
¨gc
, 
¨gv
);

589 if(
R™dom_uniq
 && (
åõs
 > 
∑gebound
)) {

592 
˚º
 << "F‹ " << 
åõs


594 << (
∑gebound
Ë<< ". Usög " << 
åõs
 << 
ídl
;

595 
∑gebound
 = 
åõs
;

598 
nbuÂages
 = (
bufkb
 * 1024 - 1Ë/ 
∑ge_sz
 + 1;

599 i‡(
nbuÂages
 < 10) {

600 
˚º
 << 
îr‹_¥io
 << "ERROR: buffer size ("

601 << 
bufkb


602 << "-KBËi†toÿsmÆl" << 
Êushl
;

603 
˚º
 << 
îr‹_¥io
 << "áàÀa° " << 10 * 
∑ge_sz
 / 1024

604 << "-KB i†√eded" << 
Êushl
;

605 
	`W_FATAL
(
fcOUTOFMEMORY
);

607 #i‡
DEAD


608 
•a˚_√eded
 = 
bf_m
::
	`mem_√eded
(
nbuÂages
);

612 *
shmba£
;

613 
w_rc_t
 
e
;

614 #ifde‡
HAVE_HUGETLBFS


616 
e
 = 
smthªad_t
::
	`£t_hugëlbfs_∑th
(
HUGETLBFS_PATH
);

619 
e
 = 
smthªad_t
::
	`£t_bufsize
(
•a˚_√eded
, 
shmba£
);

620 i‡(
e
.
	`is_îr‹
()) {

621 
	`W_COERCE
(
e
);

623 
	`w_as£π1
(
	`is_Æig√d
(
shmba£
));

627 
bf_m
 *
bf
 = 
√w
 
	`bf_m
(
nbuÂages
, 
shmba£
, 
≈gwrôîs
);

629 i‡(! 
bf
) {

630 
	`W_FATAL
(
fcOUTOFMEMORY
);

638 
œtch_t
::
	`⁄_thªad_öô
(
	`me
());

640 
cout
 <<"creatingÅests with "

641 << 
åõs
 << "Åries, "

642 << 
∑gebound
 << " upper bound onÖages, "

643 << " vﬁumê" << 
vﬁ


644 << ", st‹ê" << 
°‹íum


646 << 
ídl
;

647 
hèb_ã°î
 
	`™⁄
(
åõs
, 
∑gebound
, 
vﬁ
, 
°‹íum
);

648 
™⁄
.
	`f‹k
();

649 
™⁄
.
	`joö
();

652 
œtch_t
::
	`⁄_thªad_de°roy
(
	`me
());

654 
	}
}

	@src/sm/tests/init_config_options.cpp

30 
	~"w_deföes.h
"

40 
	~<w_°ªam.h
>

41 
	~<c°rög
>

47 
	~"w.h
"

48 
	~"›ti⁄.h
"

49 
	~<w_°r°ªam.h
>

66 
w_rc_t


67 
	$öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

68 c⁄° * 
¥og_ty≥
,

69 & 
¨gc
, ** 
¨gv
)

72 
w_rc_t
 
rc
;

75 * 
¥og_«me
 = 
	`°ºchr
(
¨gv
[0], '/');

76 i‡(
¥og_«me
 =
NULL
) {

77 
¥og_«me
 = 
¨gv
[0];

79 
¥og_«me
 += 1;

80 i‡(
¥og_«me
[0] == '\0') {

81 
¥og_«me
 = 
¨gv
[0];

85 
	`W_DO
(
›ti⁄s
.
	`add_˛ass_Àvñ
("example"));

86 
	`W_DO
(
›ti⁄s
.
	`add_˛ass_Àvñ
(
¥og_ty≥
));

87 
	`W_DO
(
›ti⁄s
.
	`add_˛ass_Àvñ
(
¥og_«me
));

91 
w_o°r°ªam
 
îr_°ªam
;

92 c⁄° * 
›t_fûe
 = "EXAMPLE_SHORECONFIG";

93 
›ti⁄_fûe_sˇn_t
 
	`›t_sˇn
(
›t_fûe
, &
›ti⁄s
);

97 
rc
 = 
›t_sˇn
.
	`sˇn
(
åue
 , 
îr_°ªam
,Årue);

98 i‡(
rc
.
	`is_îr‹
()) {

99 
˚º
 << "Eº‹ i¿ªadög o±i⁄ fûe: " << 
›t_fûe
 << 
ídl
;

100 
˚º
 << "\t" << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

101  
rc
;

106 i‡(!
rc
.
	`is_îr‹
()) {

108 
w_o°r°ªam
 
îr_°ªam
;

109 
rc
 = 
›ti⁄s
.
	`∑r£_comm™d_löe
((c⁄° **)
¨gv
,

110 
¨gc
, 2, &
îr_°ªam
);

111 
îr_°ªam
 << 
íds
;

112 i‡(
rc
.
	`is_îr‹
()) {

113 
˚º
 << "Eº‹ o¿Comm™dÜöê" << 
ídl
;

114 
˚º
 << "\t" << 
w_îr‹_t
::
	`îr‹_°rög
(
rc
.
	`îr_num
()Ë<< 
ídl
;

115 
˚º
 << "\t" << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

116  
rc
;

122 
w_o°r°ªam
 
îr_°ªam
;

123 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

124 i‡(
rc
.
	`is_îr‹
()) {

125 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

126 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

127  
rc
;

131  
RCOK
;

132 
	}
}

	@src/sm/tests/lock_cache_test.cpp

30 
	~"w_deföes.h
"

35 
	~<w_°ªam.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<ˇs£π
>

38 
	~"sm_vas.h
"

39 
	#SM_SOURCE


	)

40 ˛as†
	clock_ªque°_t
 {};

41 
	~"lock_ˇche.h
"

46 
vid_t
 
vﬁ
(1000);

47 
°id_t
 
°‹
(
vﬁ
,900);

48 
Õid_t
 
∑ge
(
°‹
, 50);

49 
rid_t
 
ªc
(
∑ge
, 6);

50 
extid_t
 
	g_exã¡
;

51 
	glockid_t
::
	tu£r1_t
 user1_t;

52 
	glockid_t
::
	tu£r2_t
 user2_t;

53 
	glockid_t
::
	tu£r3_t
 user3_t;

54 
	glockid_t
::
	tu£r4_t
 user4_t;

55 
u£r1_t
 
u1
(1);

56 
u£r2_t
 
u2
(
u1
.u1, 2);

57 
u£r3_t
 
u3
(
u1
.u1, 
u2
.u2, 3);

58 
u£r4_t
 
u4
(
u1
.u1, 
u2
.u2, 
u3
.u3, 4);

61 
	$dump
(
lockid_t
 &
l
)

63 
cout
 << "Lock:Ü•a˚ " << 
l
.
	`l•a˚
(Ë<< 
ídl
;

64 
cout
 << "\àvid(Ë" << 
l
.
	`vid
(Ë<< 
ídl
;

66 
°id_t
 
°‹
;

67 
l
.
	`exåa˘_°id
(
°‹
);

68 
cout
 << "\à°‹e(Ë" << 
l
.
	`°‹e
(Ë<< "(" << 
°‹
 << ")" << 
ídl
;

71 
Õid_t
 
∑ge
;

72 
l
.
	`exåa˘_Õid
(
∑ge
);

73 
cout
 << "\à∑ge(Ë" << 
l
.
	`∑ge
(Ë<< "(" << 
∑ge
 << ")" << 
ídl
;

75 
rid_t
 
ªc
;

76 
l
.
	`exåa˘_rid
(
ªc
);

77 
cout
 << "\à¶Ÿ(Ë" << 
l
.
	`¶Ÿ
(Ë<< "(" << 
ªc
 << ")" << 
ídl
;

79 
extid_t
 
exã¡
;

80 
l
.
	`exåa˘_exã¡
(
exã¡
);

81 
cout
 << "\àexã¡(Ë" << 
l
.
	`exã¡
(Ë<< "(" << 
exã¡
 << ")" << 
ídl
;

83 
u£r1_t
 
u1
;

84 
l
.
	`exåa˘_u£r1
(
u1
);

85 
cout
 << "\àu1(Ë" << 
l
.
	`u1
(Ë<< "(" << 
u1
 << ")" << 
ídl
;

87 
u£r2_t
 
u2
;

88 
l
.
	`exåa˘_u£r2
(
u2
);

89 
cout
 << "\àu2(Ë" << 
l
.
	`u2
(Ë<< "(" << 
u2
 << ")" << 
ídl
;

91 
u£r3_t
 
u3
;

92 
l
.
	`exåa˘_u£r3
(
u3
);

93 
cout
 << "\àu3(Ë" << 
l
.
	`u3
(Ë<< "(" << 
u3
 << ")" << 
ídl
;

95 
u£r4_t
 
u4
;

96 
l
.
	`exåa˘_u£r4
(
u4
);

97 
cout
 << "\àu4(Ë" << 
l
.
	`u4
(Ë<< "(" << 
u4
 << ")" << 
ídl
;

98 
	}
}

100 
	glock_ˇche_t
<5,10> 
	gC
;

103 
	$ã°ô
(
lockid_t
 &
l
, 
löe
)

105 
lock_ˇche_ñem_t
 
vi˘im
;

106 
vi˘im
.
	`˛ór
();

107 
boﬁ
 
evi˘ed
 = 
C
.
	`put
 (
l
, 
SH
, 
NULL
, 
vi˘im
);

108 
cout
 << "{" << 
ídl
;

109 
cout
 << "\tIn£πed " << 
l
 << "áàlöê" << 
löe
 << 
ídl
;

110 
cout
 << "\tEvi˘ed " << 
evi˘ed
 << 
ídl
;

111 if(
evi˘ed
) {

112 
cout
 << "\t\àVi˘im " ; 
vi˘im
.
	`dump
(); couà<< 
ídl
;

114 
cout
 << "\tDum∞©Üöê" << 
löe
 << 
ídl
; 
C
.
	`dump
();

116 
lock_ˇche_ñem_t
 *
¥obed
 = 
C
.
	`¥obe
(
l
,Ü.
	`l•a˚
());

117 
	`w_as£π0
(
¥obed
 !
NULL
);

118 
lock_ˇche_ñem_t
 *
£¨ched
 = 
C
.
	`£¨ch
(
l
);

119 if(
£¨ched
 !
¥obed
) {

120 
cout
 << "NŸ found, cﬁlisi⁄ wôh "; 
¥obed
->
	`dump
(); couà<< 
ídl
;

124 
found
 = (
£¨ched
 !
NULL
);

140 
	`w_as£π0
–(!
found
 && !
evi˘ed
Ë=
Ál£
);

142 if(!
found
) {

144 
	`w_as£π0
(
vi˘im
.
lock_id
 =
l
);

146 if(
found
 && 
evi˘ed
) {

148 
cout
 << "Now com∑˘..." << 
ídl
;

149 
boﬁ
 
evi˘ed2
;

150 
C
.
	`com∑˘
(
vi˘im
.
lock_id
);

151 
cout
 << "\tDum∞a·î com∑˘ " << 
ídl
; 
C
.
	`dump
();

152 
lock_ˇche_ñem_t
 
vi˘im2
;

153 if(
vi˘im
.
lock_id
 =
l
) {

154 
cout
 << "TryÅÿªö£π vi˘imá·îÉvi˘i⁄. " << 
ídl
;

155 
evi˘ed2
 = 
C
.
	`put
(
vi˘im
.
lock_id
, 
SH
, 
NULL
, 
vi˘im2
);

157 
cout
 << "Tryágaöá·îÉvi˘i⁄. " << 
ídl
;

158 
evi˘ed2
 = 
C
.
	`put
(
l
, 
SH
, 
NULL
, 
vi˘im2
);

160 
cout
 << "\tThi†timêevi˘ed " << 
evi˘ed2
 << 
ídl
;

161 if(
evi˘ed2
) {

162 
cout
 << "\t\àThi†vi˘im " ; 
vi˘im2
.
	`dump
(); couà<< 
ídl
;

164 
cout
 << "\tDum∞a·îÑeö£π " << 
ídl
; 
C
.
	`dump
();

169 if(
l
.
	`l•a˚
(Ë<
lockid_t
::
t_∑ge
) {

170 
lockid_t
 
	`™˚°‹
(
l
);

171 
k
 = 
l
.
	`l•a˚
();

172 
k
 < 
lockid_t
::
t_∑ge
; )

174 
k
++;

175 
™˚°‹
.
	`åunˇã
(
lockid_t
::
	`«me_•a˚_t
(
k
));

176 
lock_ˇche_ñem_t
 *
p
 = 
C
.
	`£¨ch
(
™˚°‹
);

177 
	`w_as£π0
(
p
 =
NULL
);

182 
cout
 << "}" << 
ídl
;

183 
	}
}

187 
	$maö
(, * [])

189 
_exã¡
.
vﬁ
 = vol;

190 
_exã¡
.
ext
 = 33;

192 c⁄° *
keybuf
 = "Admiral Richard E. Byrd";

193 c⁄° *
ñembuf
= "Most ofÅhe confusion inÅhe world comes fromÇot knowing howÜittle weÇeed.";

194 
vec_t
 
	`key
(
keybuf
, 
	`°æí
(keybuf));

195 
vec_t
 
	`ñem
(
ñembuf
, 
	`°æí
(elembuf));

197 
cout
 << "Sour˚s: " << 
ídl


198 << "\àvﬁ " << 
vﬁ
 << 
ídl


199 << "\à°‹ê" << 
°‹
 << 
ídl


200 << "\à∑gê" << 
∑ge
 << 
ídl


201 << "\àª¯" << 
ªc
 << 
ídl


202 << "\àexã¡ " << 
_exã¡
 << 
ídl


203 << "\àu1 " << 
u1
 << 
ídl


204 << "\àu2 " << 
u2
 << 
ídl


205 << "\àu3 " << 
u3
 << 
ídl


206 << "\àu4 " << 
u4
 << 
ídl


209 
lockid_t
 
	`lvﬁ
(
vﬁ
);

210 
lockid_t
 
	`l°‹
(
°‹
);

211 
lockid_t
 
	`Õage
(
∑ge
);

212 
lockid_t
 
	`Ãec
(
ªc
);

213 
lockid_t
 
	`lx
(
_exã¡
);

214 
lockid_t
 
	`l1
(
u1
);

215 
lockid_t
 
	`l2
(
u2
);

216 
lockid_t
 
	`l3
(
u3
);

217 
lockid_t
 
	`l4
(
u4
);

219 
	`ã°ô
(
lvﬁ
, 
__LINE__
);

220 
	`ã°ô
(
l°‹
, 
__LINE__
);

221 
	`ã°ô
(
Õage
, 
__LINE__
);

222 
	`ã°ô
(
Ãec
, 
__LINE__
);

223 
	`ã°ô
(
lx
, 
__LINE__
);

224 
	`ã°ô
(
l1
, 
__LINE__
);

225 
	`ã°ô
(
l2
, 
__LINE__
);

226 
	`ã°ô
(
l3
, 
__LINE__
);

227 
	`ã°ô
(
l4
, 
__LINE__
);

229 
C
.
	`com∑˘
();

230 
cout
 << "Dum∞a·î com∑˘ögáŒáàlöê" << 
__LINE__
 << 
ídl
;

231 
C
.
	`dump
();

232 
	}
}

	@src/sm/tests/lockid_test.cpp

30 
	~"w_deföes.h
"

34 
	~<w_°ªam.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<ˇs£π
>

37 
	~"sm_vas.h
"

42 
vid_t
 
vﬁ
(1000);

43 
°id_t
 
°‹
(
vﬁ
,900);

44 
Õid_t
 
∑ge
(
°‹
, 50);

45 
rid_t
 
ªc
(
∑ge
, 6);

46 
extid_t
 
	g_exã¡
;

47 
kvl_t
 
	gkvl
;

48 
	glockid_t
::
	tu£r1_t
 user1_t;

49 
	glockid_t
::
	tu£r2_t
 user2_t;

50 
	glockid_t
::
	tu£r3_t
 user3_t;

51 
	glockid_t
::
	tu£r4_t
 user4_t;

52 
u£r1_t
 
u1
(1);

53 
u£r2_t
 
u2
(
u1
.u1, 2);

54 
u£r3_t
 
u3
(
u1
.u1, 
u2
.u2, 3);

55 
u£r4_t
 
u4
(
u1
.u1, 
u2
.u2, 
u3
.u3, 4);

58 
	$dump
(
lockid_t
 &
l
)

60 
cout
 << "Lock:Ü•a˚ " << 
l
.
	`l•a˚
(Ë<< 
ídl
;

61 
cout
 << "\àvid()=" << 
l
.
	`vid
(Ë<< 
ídl
;

63 
°id_t
 
°‹
;

64 
l
.
	`exåa˘_°id
(
°‹
);

65 
cout
 << "\à°‹e()=" << 
l
.
	`°‹e
(Ë<< " stid_t=(" << 
°‹
 << ")" << 
ídl
;

68 
Õid_t
 
∑ge
;

69 
l
.
	`exåa˘_Õid
(
∑ge
);

70 
cout
 << "\à∑ge()=" << 
l
.
	`∑ge
(Ë<< " (Õid_t=" << 
∑ge
 << ")" << 
ídl
;

72 
rid_t
 
ªc
;

73 
l
.
	`exåa˘_rid
(
ªc
);

74 
cout
 << "\à¶Ÿ()=" << 
l
.
	`¶Ÿ
(Ë<< " (rid_t=" << 
ªc
 << ")" << 
ídl
;

76 
extid_t
 
exã¡
;

77 
l
.
	`exåa˘_exã¡
(
exã¡
);

78 
cout
 << "\àexã¡()=" << 
l
.
	`exã¡
(Ë<< " (extid_t=" << 
exã¡
 << ")" << 
ídl
;

83 
kvl_t
 
kvl
;

84 
l
.
	`exåa˘_kvl
(
kvl
);

85 
cout
 << "\àkvl" << "(" << 
kvl
 << ")" << 
ídl
;

88 
u£r1_t
 
u1
;

89 
l
.
	`exåa˘_u£r1
(
u1
);

90 
cout
 << "\àu1()=" << 
l
.
	`u1
(Ë<< " u£r1_t=(" << 
u1
 << ")" << 
ídl
;

92 
u£r2_t
 
u2
;

93 
l
.
	`exåa˘_u£r2
(
u2
);

94 
cout
 << "\àu2()=" << 
l
.
	`u2
(Ë<< " (u£r2_t=" << 
u2
 << ")" << 
ídl
;

96 
u£r3_t
 
u3
;

97 
l
.
	`exåa˘_u£r3
(
u3
);

98 
cout
 << "\àu3()=" << 
l
.
	`u3
(Ë<< " ( u£r3_t=" << 
u3
 << ")" << 
ídl
;

100 
u£r4_t
 
u4
;

101 
l
.
	`exåa˘_u£r4
(
u4
);

102 
cout
 << "\àu4()=" << 
l
.
	`u4
(Ë<< " ( u£r4_t=" << 
u4
 << ")" << 
ídl
;

107 
cout
 << "hex/de¯dum∞- b" << 
ídl
;

108 
u_ch¨
 *
p
 = (u_ch¨ *)&
l
;

109 
i
=0; i < ((
l
)); i++) {

110 
cout
 << 
i
 << ":" << ::
hex
 << (*
p
)

111 << "/" << ::
dec
 << (*
p
) << " " ;

112 
p
++;

114 
cout
 << 
ídl
;

117 
cout
 << "hex/de¯dum∞- s" << 
ídl
;

118 
uöt2_t
 *
p
 = (uöt2_à*)&
l
;

119 
i
=0; i < ((
l
)/(
uöt2_t
)); i++) {

120 
cout
 << 
i
 << ":" << ::
hex
 << (*
p
)

121 << "/" << ::
dec
 << (*
p
) << " ";

122 
p
++;

124 
cout
 << 
ídl
;

127 
cout
 << "hex/de¯dum∞- w" << 
ídl
;

128 
u_öt
 *
p
 = (u_öà*)&
l
;

129 
i
=0; i < ((
l
)/(
uöt_t
)); i++) {

130 
cout
 << 
i
 << ":" << ::
hex
 << (*
p
)

131 << "/" << ::
dec
 << (*
p
) << " ";

132 
p
++;

134 
cout
 << 
ídl
;

137 
	}
}

140 
	$maö
(, * [])

142 
_exã¡
.
vﬁ
 = vol;

143 
_exã¡
.
ext
 = 33;

145 c⁄° *
keybuf
 = "Admiral Richard E. Byrd";

146 c⁄° *
ñembuf
= "Most ofÅhe confusion inÅhe world comes fromÇot knowing howÜittle weÇeed.";

147 
vec_t
 
	`key
(
keybuf
, 
	`°æí
(keybuf));

148 
vec_t
 
	`ñem
(
ñembuf
, 
	`°æí
(elembuf));

149 
kvl
.
	`£t
(
°‹
, 
key
, 
ñem
);

151 
cout
 << "Sour˚s: " << 
ídl


152 << "\àvﬁ " << 
vﬁ
 << 
ídl


153 << "\à°‹ê" << 
°‹
 << 
ídl


154 << "\à∑gê" << 
∑ge
 << 
ídl


155 << "\àª¯" << 
ªc
 << 
ídl


159 << "\àkv»" << 
kvl
 << 
ídl


161 << "\àexã¡ " << 
_exã¡
 << 
ídl


162 << "\àu1 " << 
u1
 << 
ídl


163 << "\àu2 " << 
u2
 << 
ídl


164 << "\àu3 " << 
u3
 << 
ídl


165 << "\àu4 " << 
u4
 << 
ídl


169 
lockid_t
 
	`l
(
vﬁ
);

170 
cout
 << "{ Vﬁumêlock " << 
l
 << 
ídl
;

171 
	`dump
(
l
);

172 
cout
 << "}" << 
ídl
;

175 
lockid_t
 
	`l
(
°‹
);

176 
cout
 << "St‹êlock " << 
l
 << 
ídl
;

177 
	`dump
(
l
);

178 
cout
 << "}" << 
ídl
;

181 
lockid_t
 
	`l
(
∑ge
);

182 
cout
 << "Pagêlock " << 
l
 << 
ídl
;

183 
	`dump
(
l
);

184 
cout
 << "}" << 
ídl
;

187 
lockid_t
 
	`l
(
ªc
);

188 
cout
 << "Rec‹dÜock " << 
l
 << 
ídl
;

189 
	`dump
(
l
);

190 
cout
 << "}" << 
ídl
;

196 
lockid_t
 
	`l
(
kvl
);

197 
cout
 << "Kv»lock " << 
l
 << 
ídl
;

198 
cout
 << "}" << 
ídl
;

202 
lockid_t
 
	`l
(
_exã¡
);

203 
cout
 << "Exã¡Üock " << 
l
 << 
ídl
;

204 
	`dump
(
l
);

205 
cout
 << "}" << 
ídl
;

208 
lockid_t
 
	`l
(
u1
);

209 
cout
 << "U£∏1Üock " << 
l
 << 
ídl
;

210 
	`dump
(
l
);

211 
cout
 << "}" << 
ídl
;

214 
lockid_t
 
	`l
(
u2
);

215 
cout
 << "U£∏2Üock " << 
l
 << 
ídl
;

216 
	`dump
(
l
);

217 
cout
 << "}" << 
ídl
;

220 
lockid_t
 
	`l
(
u3
);

221 
cout
 << "U£∏3Üock " << 
l
 << 
ídl
;

222 
	`dump
(
l
);

223 
cout
 << "}" << 
ídl
;

226 
lockid_t
 
	`l
(
u4
);

227 
cout
 << "U£∏4Üock " << 
l
 << 
ídl
;

228 
	`dump
(
l
);

229 
cout
 << "}" << 
ídl
;

231 
	}
}

	@src/sm/tests/log_exceed.cpp

30 
	~"w_deföes.h
"

38 
	~<w_°ªam.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<ˇs£π
>

41 
	~"w_gë›t.h
"

42 
	#SM_LEVEL
 1

	)

43 
	#SM_SOURCE


	)

44 
	#XCT_C


	)

45 
	~"sm_öt_1.h
"

46 
	~"sm_vas.h
"

48 
ss_m
* 
	gssm
 = 0;

50 
w_rc_t
 
out_of_log_•a˚
 (
x˘_i
*, 
x˘_t
*&, 
ss_m
::
fûeoff_t
,

51 
ss_m
::
fûeoff_t
,

52 c⁄° *
logfûe


55 
w_rc_t
 
gë_¨chived_log_fûe
 (c⁄° *
logfûe
, 
ss_m
::
∑πôi⁄_numbî_t
);

58 
w_rc_t
 
	trc_t
;

61 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

62 c⁄° * 
¥og_ty≥
,

63 & 
¨gc
, ** 
¨gv
);

66 
	sfûe_öfo_t
 {

67 c⁄° * 
	mkey
;

68 
°id_t
 
	mfid
;

69 
rid_t
 
	mfú°_rid
;

70 
	mnum_ªc
;

71 
	mªc_size
;

73 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

75 
	go°ªam
 &

76 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

78 
	go
 << "key " << 
	göfo
.
	gkey


79 << " fid " << 
	göfo
.
	gfid


80 << " fú°_rid " << 
	göfo
.
	gfú°_rid


81 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


82 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

83  
	go
;

87 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

92 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

94 
˚º
 << "Ußge:Üog_ex˚ed [-h] [›ti⁄s]" << 
ídl
;

95 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

96 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

97 
	}
}

100 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

101 
_¨gc
;

102 **
	m_¨gv
;

104 c⁄° *
	m_devi˚_«me
;

105 
smsize_t
 
	m_quŸa
;

106 
	m_num_ªc
;

107 
smsize_t
 
	m_ªc_size
;

108 
lvid_t
 
	m_lvid
;

109 
rid_t
 
	m_°¨t_rid
;

110 
°id_t
 
	m_fid
;

111 
boﬁ
 
	m_öôülize_devi˚
;

112 
›ti⁄_group_t
* 
	m_›ti⁄s
;

113 
vid_t
 
	m_vid
;

114 
	mpublic
:

115 
ªtvÆ
;

117 
	$smthªad_u£r_t
(
ac
, **
av
)

118 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

119 
	`_¨gc
(
ac
), 
	`_¨gv
(
av
),

120 
	`_devi˚_«me
(
NULL
),

121 
	`_quŸa
(0),

122 
	`_num_ªc
(0),

123 
	`_ªc_size
(0),

124 
	`_öôülize_devi˚
(
åue
),

125 
	`_›ti⁄s
(
NULL
),

126 
	`_vid
(1),

127 
	$ªtvÆ
(0) { }

129 ~
	$smthªad_u£r_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

131 
run
();

134 
w_rc_t
 
h™dÀ_›ti⁄s
();

135 
w_rc_t
 
föd_fûe_öfo
();

136 
w_rc_t
 
¸óã_the_fûe
();

137 
w_rc_t
 
sˇn_the_fûe
();

138 
w_rc_t
 
sˇn_the_roŸ_ödex
();

139 
w_rc_t
 
do_w‹k
();

140 
w_rc_t
 
do_öô
();

141 
w_rc_t
 
no_öô
();

148 
w_rc_t


149 
	gsmthªad_u£r_t
::
	$föd_fûe_öfo
()

151 
fûe_öfo_t
 
öfo
;

152 
	`W_DO
(
ssm
->
	`begö_x˘
());

154 
boﬁ
 
found
;

155 
°id_t
 
_roŸ_iid
;

156 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

158 
smsize_t
 
öfo_Àn
 = (
öfo
);

159 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

160 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

161 
key_vec_tmp
,

162 &
öfo
, 
öfo_Àn
, 
found
));

163 i‡(!
found
) {

164 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

165  
	`RC
(
fcASSERT
);

167 
˚º
 << " foundássoc "

168 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

171 
	`W_DO
(
ssm
->
	`commô_x˘
());

173 
_°¨t_rid
 = 
öfo
.
fú°_rid
;

174 
_fid
 = 
öfo
.
fid
;

175 
_ªc_size
 = 
öfo
.
ªc_size
;

176 
_num_ªc
 = 
öfo
.
num_ªc
;

177  
RCOK
;

178 
	}
}

189 
rc_t


190 
	gsmthªad_u£r_t
::
	$¸óã_the_fûe
()

192 
fûe_öfo_t
 
öfo
;

196 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


197 << "Ñec‹d†o‡sizê" << 
_ªc_size
 << 
ídl
;

198 
	`W_DO
(
ssm
->
	`begö_x˘
());

201 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

202 
rid_t
 
rid
;

204 
_ªc_size
 -
	`Æign
(());

209 * 
dummy
 = 
√w
 [
_ªc_size
];

210 * 
dummy2
 = 
√w
 [
_ªc_size
];

211 * 
dummy3
 = 
√w
 [
_ªc_size
];

212 * 
dummy4
 = 
√w
 [
_ªc_size
];

213 
	`mem£t
(
dummy
, '\1', 
_ªc_size
);

214 
	`mem£t
(
dummy2
, '\2', 
_ªc_size
);

215 
	`mem£t
(
dummy3
, '\3', 
_ªc_size
);

216 
	`mem£t
(
dummy4
, '\4', 
_ªc_size
);

217 
smsize_t
 
i
=0; i < 
_ªc_size
; i++) {

218 
dummy2
[
i
] = ()(i%8);

219 
dummy3
[
i
] = (
dummy2
[i] + 1)%8;

220 
dummy4
[
i
] = (
dummy2
[i] - 1)%8;

223 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

224 
vec_t
 
	`d©a2
(
dummy2
, 
_ªc_size
);

225 
vec_t
 
	`d©a3
(
dummy3
, 
_ªc_size
);

226 
vec_t
 
	`d©a4
(
dummy4
, 
_ªc_size
);

228 
j
=0; j < 
_num_ªc
; j++)

231 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

232 
o
 << "Rec‹dÇumbî " << 
j
 << 
íds
;

233 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

236 
i
 = 
j
;

237 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

238 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

239 
_ªc_size
, 
d©a
, 
rid
));

240 
cout
 << "Cª©ögÑe¯" << 
j
 << 
ídl
;

244 
i
=0; i < 200; i++) {

245 
	`W_DO
(
ssm
->
	`upd©e_ªc
(
rid
, 0 , 
d©a2
));

246 
	`W_DO
(
ssm
->
	`upd©e_ªc
(
rid
, 0 , 
d©a3
));

247 
	`W_DO
(
ssm
->
	`upd©e_ªc
(
rid
, 0 , 
d©a4
));

249 i‡(
j
 == 0) {

250 
öfo
.
fú°_rid
 = 
rid
;

253 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
öfo
.
fú°_rid
 << 
ídl
;

254 
dñëe
 [] 
dummy
;

255 
dñëe
 [] 
dummy2
;

256 
dñëe
 [] 
dummy3
;

257 
dñëe
 [] 
dummy4
;

258 
öfo
.
num_ªc
 = 
_num_ªc
;

259 
öfo
.
ªc_size
 = 
_ªc_size
;

263 
°id_t
 
_roŸ_iid
;

264 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

266 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

267 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

268 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

269 
key_vec_tmp
,

270 
öfo_vec_tmp
));

271 
	`W_DO
(
ssm
->
	`commô_x˘
());

272  
RCOK
;

273 
	}
}

275 
rc_t


276 
	gsmthªad_u£r_t
::
	$sˇn_the_roŸ_ödex
()

278 
	`W_DO
(
ssm
->
	`begö_x˘
());

279 
°id_t
 
_roŸ_iid
;

280 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

281 
cout
 << "Sˇ¬ög index " << 
_roŸ_iid
 << 
ídl
;

282 
sˇn_ödex_i
 
	`sˇn
(
_roŸ_iid
,

283 
sˇn_ödex_i
::
ge
, 
vec_t
::
√g_öf
,

284 
sˇn_ödex_i
::
À
, 
vec_t
::
pos_öf
, 
Ál£
,

285 
ss_m
::
t_cc_kvl
);

286 
boﬁ
 
	`eof
(
Ál£
);

287 
	`i
(0);

288 
smsize_t
 
	`kÀn
(0);

289 
smsize_t
 
	`ñí
(0);

290 
	#MAXKEYSIZE
 100

	)

291 * 
keybuf
[
MAXKEYSIZE
];

292 
fûe_öfo_t
 
öfo
;

295 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
eof
);

296 if(
rc
.
	`is_îr‹
()) {

297 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

298 
ªtvÆ
 = 
rc
.
	`îr_num
();

299  
rc
;

301 if(
eof
) ;

304 
	`W_DO
(
sˇn
.
	`cuº
(
NULL
, 
kÀn
, NULL, 
ñí
));

306 
vec_t
 
	`key
(
keybuf
, 
kÀn
);

307 
vec_t
 
	`ñem
(&
öfo
, 
ñí
);

309 
	`W_DO
(
sˇn
.
	`cuº
(&
key
, 
kÀn
, &
ñem
, 
ñí
));

311 
cout
 << "Key " << 
keybuf
 << 
ídl
;

312 
cout
 << "Value "

313 << " { fid " << 
öfo
.
fid


314 << " fú°_rid " << 
öfo
.
fú°_rid


315 << " #ª¯" << 
öfo
.
num_ªc


316 << "Ñe¯sizê" << 
öfo
.
ªc_size
 << " }"

317 << 
ídl
;

318 
i
++;

319 } !
eof
);

320 
	`W_DO
(
ssm
->
	`commô_x˘
());

321  
RCOK
;

322 
	}
}

324 
rc_t


325 
	gsmthªad_u£r_t
::
	$sˇn_the_fûe
()

327 
cout
 << "Sˇ¬ög fûê" << 
_fid
 << 
ídl
;

328 
	`W_DO
(
ssm
->
	`begö_x˘
());

330 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

331 
pö_i
* 
	`curs‹
(
NULL
);

332 
boﬁ
 
	`eof
(
Ál£
);

333 
	`i
(0);

336 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

337 if(
rc
.
	`is_îr‹
()) {

338 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

339 
ªtvÆ
 = 
rc
.
	`îr_num
();

340  
rc
;

342 if(
eof
) ;

344 
cout
 << "Rec‹d " << 
i
 << "/" << 
_num_ªc


345 << " Rid " << 
curs‹
->
	`rid
(Ë<< 
ídl
;

346 
vec_t
 
	`hódî
 (
curs‹
->
	`hdr
(), curs‹->
	`hdr_size
());

347 
hdrc⁄ã¡s
;

348 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

349 
cout
 << "Rec‹d hd∏" << 
hdrc⁄ã¡s
 << 
ídl
;

351 c⁄° *
body
 = 
curs‹
->
	`body
();

352 
	`w_as£π1
(
curs‹
->
	`body_size
(Ë=
_ªc_size
);

353 
cout
 << "Rec‹d body " << 
body
 << 
ídl
;

354 
i
++;

355 } !
eof
);

356 
	`w_as£π1
(
i
 =
_num_ªc
);

358 
	`W_DO
(
ssm
->
	`commô_x˘
());

359  
RCOK
;

360 
	}
}

362 
rc_t


363 
	gsmthªad_u£r_t
::
	$do_öô
()

365 
cout
 << "-i: Inôülizê" << 
ídl
;

368 
devid_t
 
devid
;

369 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


370 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

371 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

373 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

375 
u_öt
 
vﬁ_˙t
;

376 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

378 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


379 << " vﬁumêcou¡ " << 
vﬁ_˙t


380 << " devi˚ " << 
devid


381 << 
ídl
;

385 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

386 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

387 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

390 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

391 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

393 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

394 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

398 
	`W_DO
(
	`¸óã_the_fûe
());

399  
RCOK
;

400 
	}
}

402 
rc_t


403 
	gsmthªad_u£r_t
::
	$no_öô
()

405 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

407 
devid_t
 
devid
;

408 
u_öt
 
vﬁ_˙t
;

409 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

410 i‡(
rc
.
	`is_îr‹
()) {

411 
˚º
 << "Error: couldÇot mount device: "

412 << 
_devi˚_«me
 << 
ídl
;

413 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

414 << 
ídl
;

415  
rc
;

419 
lvid_t
* 
lvid_li°
;

420 
u_öt
 
lvid_˙t
;

421 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

422 i‡(
lvid_˙t
 == 0) {

423 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

424 
	`exô
(1);

426 
_lvid
 = 
lvid_li°
[0];

427 
dñëe
 [] 
lvid_li°
;

429 
	`W_DO
(
	`föd_fûe_öfo
());

430 
	`W_DO
(
	`sˇn_the_roŸ_ödex
());

431 
	`W_DO
(
	`sˇn_the_fûe
());

432  
RCOK
;

433 
	}
}

435 
rc_t


436 
	gsmthªad_u£r_t
::
	$do_w‹k
()

438 i‡(
_öôülize_devi˚
Ë
	`W_DO
(
	`do_öô
());

439 
	`W_DO
(
	`no_öô
());

440  
RCOK
;

441 
	}
}

447 
›ti⁄_t
 *
logdú
(
NULL
);

448 
w_rc_t
 
	gsmthªad_u£r_t
::
	$h™dÀ_›ti⁄s
()

450 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

451 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

452 
›ti⁄_t
* 
›t_num_ªc
 = 0;

454 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

464 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

466 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

467 if(!
_›ti⁄s
) {

468 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

469 
ídl
;

470 
ªtvÆ
 = 1;

471  
	`RC
(
fcINTERNAL
);

473 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

475 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

476 
NULL
, "device containg volume holding fileÅo scan",

477 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

478 
›t_devi˚_«me
));

480 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

482 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

483 
›t_devi˚_quŸa
));

486 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

488 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

489 
›t_num_ªc
));

492 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

494 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

496 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

497 i‡(
rc
.
	`is_îr‹
()) {

498 
	`ußge
(
›ti⁄s
);

499 
ªtvÆ
 = 1;

500  
rc
;

502 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

505 
›ti⁄
;

506 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hi")) != -1) {

507 
›ti⁄
) {

509 
	`ußge
(
›ti⁄s
);

513 
	`ußge
(
›ti⁄s
);

514 
ªtvÆ
 = 1;

515  
	`RC
(
fcNOTIMPLEMENTED
);

520 
cout
 << "Checking forÑequired options...";

522 
w_o°r°ªam
 
îr_°ªam
;

523 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

524 i‡(
rc
.
	`is_îr‹
()) {

525 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

526 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

527  
rc
;

529 
cout
 << "OK " << 
ídl
;

533 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

534 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

535 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

537 if(
logdú
==
NULL
) {

538 
	`W_DO
(
›ti⁄s
.
	`lookup
("sm_logdú", 
Ál£
, 
logdú
));

539 
	`Ârötf
(
°dout
, "FoundÜogdú %s\n", 
logdú
->
	`vÆue
());

542  
RCOK
;

543 
	}
}

545 
	gsmthªad_u£r_t
::
	$run
()

547 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

548 if(
rc
.
	`is_îr‹
()) {

549 
ªtvÆ
 = 1;

554 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

555 
ssm
 = 
√w
 
	`ss_m
(
out_of_log_•a˚
, 
gë_¨chived_log_fûe
);

556 i‡(!
ssm
) {

557 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

558 
ªtvÆ
 = 1;

562 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

564 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

565 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

566 
_ªc_size
 = 
c⁄fig_öfo
.
max_smÆl_ªc
;

570 
rc
 = 
	`do_w‹k
();

572 i‡(
rc
.
	`is_îr‹
()) {

573 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

574 
˚º
 << 
rc
 << 
ídl
;

576 
w_o°r°ªam
 
o
;

577 
sm_°©s_öfo_t
 
cuº
;

579 
rc
 = 
ssm
->
	`g©hî_°©s
(
cuº
);

581 
o
 << 
cuº
.
sm
.
ab‹t_x˘_˙t
<< 
íds
;

582 
	`Ârötf
(
°dout
, "log_ex˚ed sèts:áb‹t_x˘_˙à%s\n" , 
o
.
	`c_°r
());

584 
dñëe
 
ssm
;

585 
rc
 = 
RCOK
;

587 
ªtvÆ
 = 0;

588 if(
rc
.
	`is_îr‹
())

589 
	`W_COERCE
(
rc
);

595 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

596 
dñëe
 
ssm
;

598 
cout
 << "Föished!" << 
ídl
;

601 
	}
}

605 
	$maö
(
¨gc
, * 
¨gv
[])

607 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

608 i‡(!
smtu
)

609 
	`W_FATAL
(
fcOUTOFMEMORY
);

611 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

612 if(
e
.
	`is_îr‹
()) {

613 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

616 
e
 = 
smtu
->
	`joö
();

617 if(
e
.
	`is_îr‹
()) {

618 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

622 
rv
 = 
smtu
->
ªtvÆ
;

623 
dñëe
 
smtu
;

625  
rv
;

626 
	}
}

628 
	~<os_öãrÁ˚.h
>

630 
	$dump
()

633 
os_dúít_t
 *
dd
 = 
NULL
;

634 
os_dú_t
 
ldú
 = 
	`os_›ídú
(
logdú
->
	`vÆue
());

635 if(!
ldú
) {

636 
	`Ârötf
(
°dout
, "CouldÇŸ o≥¿dúe˘‹y %s\n", 
logdú
->
	`vÆue
());

639 
	`Ârötf
(
°dout
, "---------------------- %†{\n", 
logdú
->
	`vÆue
());

640 (
dd
 = 
	`os_ªaddú
(
ldú
)))

642 
	`Ârötf
(
°dout
, "%s\n", 
dd
->
d_«me
);

644 
	`os_˛o£dú
(
ldú
);

645 
	`Ârötf
(
°dout
, "---------------------- %†}\n", 
logdú
->
	`vÆue
());

646 
	}
}

649 
w_rc_t
 
	$gë_¨chived_log_fûe
 (

650 c⁄° *
fûíame
,

651 
ss_m
::
∑πôi⁄_numbî_t
 
num
)

653 
	`Ârötf
(
°dout
,

655 
fûíame
, 
num


657 
	`dump
();

659 
w_rc_t
 
rc
;

661 
O
[
smÀvñ_0
::
max_dev«me
<<1];

662 
	`°rˇt
(
O
, 
fûíame
);

663 
	`°rˇt
(
O
, ".bak");

665 
N
[
smÀvñ_0
::
max_dev«me
<<1];

666 
	`°rˇt
(
N
, 
fûíame
);

668 
e
 = ::
	`ª«me
(
O
, 
N
);

669 if(
e
 != 0)

671 
	`Ârötf
(
°dout
, "CouldÇot move %sÅo %s:Érror : %d %s\n",

672 
O
, 
N
, 
e
, 
	`°ªº‹
(
î∫o
));

673 
rc
 = 
	`RC2
(
smÀvñ_0
::
eOUTOFLOGSPACE
, 
î∫o
);

675 
	`dump
();

676 
	`Ârötf
(
°dout
, "recovered ... OK!\n\n");

677 
	`Ârötf
(
°dout
,

679 
	`Ârötf
(
°dout
,

681 
	`Ârötf
(
°dout
,

683  
rc
;

684 
	}
}

686 
w_rc_t
 
	$out_of_log_•a˚
 (

687 
x˘_i
* 
ôî
,

688 
x˘_t
 *& 
xd
,

689 
smÀvñ_0
::
fûeoff_t
 
cuº
,

690 
smÀvñ_0
::
fûeoff_t
 
thªsh
,

691 c⁄° *
fûíame


694 
ˇŒs
=0;

696 
ˇŒs
++;

698 
w_rc_t
 
rc
;

699 
	`Ârötf
(
°dout
, "\n**************************************** %d\n", 
ˇŒs
);

700 
	`dump
();

702 
	`Ârötf
(
°dout
,

704 (Ë
cuº
, (Ë
thªsh
, 
fûíame
);

706 
w_o°r°ªam
 
o
;

707 
o
 << 
xd
->
	`tid
(Ë<< 
ídl
;

708 
	`Ârötf
(
°dout
, "ˇŒed wôh x˘ %s\n" , 
o
.
	`c_°r
());

711 
xd
->
	`log_w¨n_dißbÀ
();

712 
ôî
->
	`√vî_möd
();

715 
w_o°r°ªam
 
o
;

716 
sm_°©s_öfo_t
 
cuº
;

718 
	`W_DO
–
ssm
->
	`g©hî_°©s
(
cuº
));

720 
o
 << 
cuº
.
sm
.
log_byãs_gíî©ed
 << 
íds
;

721 
	`Ârötf
(
°dout
, "°©s:Üog_byãs_gíî©ed %s\n" , 
o
.
	`c_°r
());

723 
x˘_t
 *
	`ﬁdx˘
(
NULL
);

724 
l¢_t
 
èrgë
;

726 
w_o°r°ªam
 
o
;

727 
o
 << "A˘ivêx˘s: " << 
x˘_t
::
	`num_a˘ive_x˘s
() << " ";

729 
tid_t
 
ﬁd
 = 
x˘_t
::
	`ﬁde°_tid
();

730 
o
 << "Olde°Åønß˘i⁄: " << 
ﬁd
;

732 
x˘_t
 *
x
 = x˘_t::
	`look_up
(
ﬁd
);

733 if(
x
==
NULL
) {

734 
	`Ârötf
(
°dout
, "CouldÇŸ föd %s\n", 
o
.
	`c_°r
());

735 
	`W_FATAL
(
fcINTERNAL
);

738 
èrgë
 = 
x
->
	`fú°_l¢
();

739 
o
 << " Fú°Ü¢: " << 
x
->
	`fú°_l¢
();

740 
o
 << " La°Ü¢: " << 
x
->
	`œ°_l¢
();

742 
	`Ârötf
(
°dout
, "%s\n" , 
o
.
	`c_°r
());

744 
ﬁdx˘
 = 
x
;

747 if(
ˇŒs
 > 3) {

749 
tid_t
 
ab‹ãd_tid
;

750 if(
ab‹ãd_tid
 =
xd
->
	`tid
()) {

751 
w_o°r°ªam
 
o
;

752 
o
 << 
ab‹ãd_tid
 << 
ídl
;

753 
	`Ârötf
(
°dout
,

755 
o
.
	`c_°r
(), 
ˇŒs
);

756 
	`W_FATAL
(
smÀvñ_0
::
eINTERNAL
);

758 
ab‹ãd_tid
 = 
xd
->
	`tid
();

759 
	`Ârötf
(
°dout
, "\n\n******************************** ABORTING\n\n");

760  
	`RC
(
smÀvñ_0
::
eUSERABORT
);

763 
	`Ârötf
(
°dout
, "\n\n******************************** ARCHIVING \n\n");

764 
	`Ârötf
(
°dout
, "MoveásideÜog fileÜog.%dÅoÜog.%d.bak\n",

765 
èrgë
.
	`fûe
(),Åarget.file());

766 
O
[
smÀvñ_0
::
max_dev«me
<<1];

767 
	`°rˇt
(
O
, 
fûíame
);

768 
N
[
smÀvñ_0
::
max_dev«me
<<1];

769 
	`°rˇt
(
N
, 
fûíame
);

770 
	`°rˇt
(
N
, ".bak");

772 
e
 = ::
	`ª«me
(
O
, 
N
);

773 if(
e
 != 0) {

774 
	`Ârötf
(
°dout
, "CouldÇot move %sÅo %s:Érror : %d %s\n",

775 
O
, 
N
, 
e
, 
	`°ªº‹
(
î∫o
));

776 if(
î∫o
 =
ENOENT
) {

777 
	`Ârötf
(
°dout
, "IgnoredÉrror.\n\n");

778  
RCOK
;

780 
	`Ârötf
(
°dout
, "ReturningÉOUTOFLOGSPACE.\n\n");

781 
rc
 = 
	`RC2
(
smÀvñ_0
::
eOUTOFLOGSPACE
, 
î∫o
);

783 
	`dump
();

784 
	`Ârötf
(
°dout
, "archived ... OK\n\n");

785 
	`W_COERCE
(
ss_m
::
	`log_fûe_was_¨chived
(
fûíame
));

787  
rc
;

788 
	}
}

	@src/sm/tests/mrbtrees_test.cpp

30 
	~"w_deföes.h
"

39 
	~<w_°ªam.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<ˇs£π
>

43 
	~"sm_vas.h
"

44 
	~"w_gë›t.h
"

45 
	~"°›w©ch.h
"

46 
	~<ve˘‹
>

48 
ss_m
* 
	gssm
 = 0;

51 
w_rc_t
 
	trc_t
;

54 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

55 c⁄° * 
¥og_ty≥
,

56 & 
¨gc
, ** 
¨gv
);

59 
	sfûe_öfo_t
 {

60 
°id_t
 
	mfid
;

61 
rid_t
 
	mfú°_rid
;

62 
rid_t
 
	mœ°_rid
;

63 
	mnum_ªc
;

64 
	mªc_size
;

65 
boﬁ
 
	m≠≥nd_⁄ly
;

66 c⁄° * 
	mkey
;

68 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

70 
	go°ªam
 & 
	g›î©‹
 << (o°ªam &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

72 
	go
 << "key " << 
	göfo
.
	gkey


73 << " fid " << 
	göfo
.
	gfid


74 << " fú°_rid " << 
	göfo
.
	gfú°_rid


75 << "Üa°_rid " << 
	göfo
.
	gœ°_rid


76 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


77 << "Ñec_sizê" << 
	göfo
.
	gªc_size


78 << "áµíd-⁄ly " << 
	göfo
.
	g≠≥nd_⁄ly
 ;

79  
	go
;

82 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

84 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

87 
˚º
 << "Ußge: sîvî [-h] [-i] [-t] [-n] [-s] [-r] [-d] [-p] [-o] [›ti⁄s]" << 
ídl
;

88 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûê- deÁu… fÆ£" << 
ídl
;

89 
˚º
 << " -hÖröàthi†mesßge" << 
ídl
;

90 
˚º
 << " -à<whichÅe° - sì bñow f‹ o±i⁄s> - deÁu… 0" << 
ídl
;

91 
˚º
 << " -¿<#∑πôi⁄s> - f‹Åe° 6 - deÁu… 10" << 
ídl
;

92 
˚º
 << " -†<#sˇns> - deÁu… 0" << 
ídl
;

93 
˚º
 << " -∏<ªc‹d size> - deÁu… 100" << 
ídl
;

94 
˚º
 << " -d ign‹êlock†- deÁu… fÆ£" << 
ídl
;

95 
˚º
 << " -∞ign‹êœtche†- deÁu… fÆ£" << 
ídl
;

96 
˚º
 << " -ÿ<whichÖÕ design> - deÁu…ÖÕ-ªguœr/mrbä‹m" << 
ídl
;

98 
˚º
 << " \tTESTS" << 
ídl
;

99 
˚º
 << " \t0ËMRBåì wôh sögÀÖ¨tôi⁄!" << 
ídl
;

100 
˚º
 << " \t1ËAddög inôÆÖ¨tôi⁄†tÿMRBåì!" << 
ídl
;

101 
˚º
 << " \t2ËCª©ê®∑πôi⁄á·îÅhêsomêassoc†¨ê¸óãd i¿MRBåì. ThíáddÇewássocs" << 
ídl
;

102 
˚º
 << " \t3ËSèπ wôhá sögÀÖ¨tôi⁄. In£πÑec‹ds. Thí s∂ôánd mîgêåì†o‡thêßmêheight." << 
ídl
;

103 
˚º
 << " \t4ËMîgê∑πôi⁄†whíÑoŸ1.Àvñ >ÑoŸ2.Àvñ i¿MRBåì." << 
ídl
;

104 
˚º
 << " \t5ËMîgê∑πôi⁄†whíÑoŸ1.Àvñ <ÑoŸ2.Àvñ i¿MRBåì." << 
ídl
;

105 
˚º
 << " \t6ËMakêequÆ inôü»∑πôi⁄s. Thí in£πÅhêªc‹ds." << 
ídl
;

107 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

108 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

109 
	}
}

112 
	gñ_fûÀr_uã°
 : 
public
 
ñ_fûÀr
 {

113 
j
;

114 
°id_t
 
	g_fid
;

115 
smsize_t
 
	g_ªc_size
;

116 
rid_t
 
	grid
;

117 
rc_t
 
fûl_ñ
(
vec_t
& 
ñ
, c⁄° 
Õid_t
& 
Àaf
);

121 
rc_t
 
	gñ_fûÀr_uã°
::
	$fûl_ñ
(
vec_t
& 
ñ
, c⁄° 
Õid_t
& 
Àaf
)

123 
cout
 << "Cª©ögÑec‹d " << 
j
 << 
ídl
;

125 * 
dummy
 = 
√w
 [
_ªc_size
];

126 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

127 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

129 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

130 
o
 << 
j
 << 
íds
;

131 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

135 
i
 = 
j
;

136 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

138 
rc_t
 
rc
 = 
ss_m
::
	`föd_∑ge_™d_¸óã_mrbt_ªc
(
_fid
, 
Àaf
, 
hdr
, 
_ªc_size
, 
d©a
, 
rid
, 
Ál£
, false);

139 
cout
 << "Ñid: " << 
rid
 << 
ídl
;

141 
ñ
.
	`put
((*)(&
rid
), (
rid_t
));

143  
rc
;

144 
	}
}

147 ˛as†
	csmthªad_maö_t
 : 
public
 
smthªad_t
 {

148 
public
:

149 
_¨gc
;

150 **
	m_¨gv
;

152 c⁄° *
	m_devi˚_«me
;

153 
smsize_t
 
	m_quŸa
;

154 
	m_num_ªc
;

155 
smsize_t
 
	m_ªc_size
;

156 
lvid_t
 
	m_lvid
;

157 
rid_t
 
	m_fú°_rid
;

158 
rid_t
 
	m_œ°_rid
;

159 
°id_t
 
	m_fid
;

160 
°id_t
 
	m_ödex_id
;

161 
boﬁ
 
	m_öôülize_devi˚
;

162 
›ti⁄_group_t
* 
	m_›ti⁄s
;

163 
vid_t
 
	m_vid
;

164 
	m_ã°_no
;

165 
	m_num_∑πs
;

166 
	m_sˇn_fûe
;

167 
boﬁ
 
	m_bIgn‹eLocks
;

168 
boﬁ
 
	m_bIgn‹eL©ches
;

169 
	m_design_no
;

171 
	mªtvÆ
;

173 
smthªad_maö_t
(
ac
, **
av
, c⁄° * 
«me
="smthread_main_t")

174 : 
smthªad_t
(
t_ªguœr
, 
«me
),

175 
_¨gc
(
ac
), 
_¨gv
(
av
),

176 
_devi˚_«me
(
NULL
),

177 
_quŸa
(0),

178 
_num_ªc
(1000),

179 
_ªc_size
(100),

180 
_öôülize_devi˚
(
Ál£
),

181 
_›ti⁄s
(
NULL
),

182 
_vid
(1),

183 
_ã°_no
(0),

184 
_num_∑πs
(10),

185 
_sˇn_fûe
(0),

186 
_bIgn‹eLocks
(
Ál£
),

187 
_bIgn‹eL©ches
(
Ál£
),

188 
_design_no
(1),

189 
	$ªtvÆ
(0) { }

191 ~
	$smthªad_maö_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

193 
run
();

196 
w_rc_t
 
h™dÀ_›ti⁄s
();

197 
w_rc_t
 
föd_fûe_öfo
();

198 
w_rc_t
 
¸óã_the_fûe
();

199 
w_rc_t
 
¸óã_the_ödex
();

201 
w_rc_t
 
mr_ödex_ã°0
();

202 
w_rc_t
 
mr_ödex_ã°1
();

203 
w_rc_t
 
mr_ödex_ã°2
();

204 
w_rc_t
 
mr_ödex_ã°3
();

205 
w_rc_t
 
mr_ödex_ã°4
();

206 
w_rc_t
 
mr_ödex_ã°5
();

207 
w_rc_t
 
mr_ödex_ã°6
();

208 
w_rc_t
 
mr_ödex_ã°7
();

210 
w_rc_t
 
¥öt_the_ödex
();

211 
w_rc_t
 
¥öt_upd©ed_rids
(
ve˘‹
<
rid_t
>& 
ﬁd_rids
, ve˘‹<rid_t>& 
√w_rids
);

213 
w_rc_t
 
do_w‹k
();

214 
w_rc_t
 
do_öô
();

215 
w_rc_t
 
no_öô
();

219 
smthªad_maö_t
 * 
	tthªad±r
;

222 ˛as†
	csmthªad_¸ót‹_t
 : 
public
 
smthªad_maö_t


224 
_°¨t_key
;

225 
	m_íd_key
;

226 
	mpublic
:

227 
	$smthªad_¸ót‹_t
(
num_ªc
, 
ªc_size
, 
boﬁ
 
bIgn‹eLocks
, boﬁ 
bIgn‹eL©ches
,

228 
design_no
, 
°¨t_key
, 
íd_key
, 
°id_t
 
°id
, 
ã°_no
)

229 : 
	`smthªad_maö_t
(0,0, "smthread_creator_t"),

230 
	`_°¨t_key
(
°¨t_key
), 
	$_íd_key
(
íd_key
)

232 
_num_ªc
 = 
num_ªc
;

233 
_ªc_size
 = 
ªc_size
;

234 
_bIgn‹eLocks
 = 
bIgn‹eLocks
;

235 
_bIgn‹eL©ches
 = 
bIgn‹eL©ches
;

236 
_design_no
 = 
design_no
;

237 
_ödex_id
 = 
°id
;

238 
_ã°_no
 = 
ã°_no
;

241 ~
	$smthªad_¸ót‹_t
(Ë{
	}
}

246 
w_rc_t
 
fûl_the_fûe_ªguœr
();

247 
w_rc_t
 
fûl_the_fûe_n⁄_ªguœr
();

250 
w_rc_t
 
fûl_the_fûe_ªguœr_bl
();

251 
w_rc_t
 
fûl_the_fûe_n⁄_ªguœr_bl
();

253 
run
();

259 ˛as†
	csmthªad_sˇ¬î_t
 : 
public
 
smthªad_maö_t


261 
_°¨t_key
;

262 
	m_íd_key
;

263 
	mpublic
:

264 
smthªad_sˇ¬î_t
(
°id_t
 
°id
, 
sˇn_fûe
,

265 
boﬁ
 
bIgn‹eL©ches
,

266 
°¨t_key
 = -1, 
íd_key
 = -1)

267 : 
smthªad_maö_t
(0,0, "smthread_scanner_t"),

268 
_°¨t_key
(
°¨t_key
), 
	$_íd_key
(
íd_key
)

270 
_ödex_id
 = 
°id
;

271 
_sˇn_fûe
 = 
sˇn_fûe
;

272 
_bIgn‹eL©ches
 = 
bIgn‹eL©ches
;

275 ~
	$smthªad_sˇ¬î_t
(Ë{ 
	}
}

278 
w_rc_t
 
sˇn_the_fûe
();

279 
w_rc_t
 
sˇn_the_ödex
();

281 
run
();

284 
	gsmthªad_¸ót‹_t
::
	$run
()

286 
rc_t
 
rc
 = 
	`föd_fûe_öfo
();

288 if(!
rc
.
	`is_îr‹
()) {

289 if(
_design_no
 == 0) {

290 if(
_ã°_no
 == 7) {

291 
rc
 = 
	`fûl_the_fûe_ªguœr_bl
();

294 
cout
 << "Thi†ã° i†nŸ suµ‹ãd f‹Åhi†desig¿›ti⁄ yë!" << 
ídl
;

295 
rc
 = 
	`RC
(
fcASSERT
);

298 if(
_design_no
 == 1) {

299 
rc
 = 
	`fûl_the_fûe_ªguœr
();

301 
rc
 = 
	`fûl_the_fûe_n⁄_ªguœr
();

305 i‡(
rc
.
	`is_îr‹
()) {

306 
˚º
 << "CouldÇŸ cª©êthêªc‹d†duêto: " << 
ídl
;

307 
˚º
 << 
rc
 << 
ídl
;

308 
rc
 = 
RCOK
;

310 if(
rc
.
	`is_îr‹
())

311 
	`W_COERCE
(
rc
);

315 
	}
}

317 
	gsmthªad_sˇ¬î_t
::
	$run
()

320 
rc_t
 
rc
 = 
	`föd_fûe_öfo
();

322 if(!
rc
.
	`is_îr‹
()) {

324 
hóp_sˇn_cuºít
 = 0;

325 
hóp_sˇn_tŸÆ
 = 0;

326 
i
=0; !
rc
.
	`is_îr‹
(Ë&& i<
_sˇn_fûe
; i++) {

327 
°›w©ch_t
 
timî
;

328 
rc
 = 
	`sˇn_the_fûe
();

329 
hóp_sˇn_cuºít
 = 
timî
.
	`time
();

330 
hóp_sˇn_tŸÆ
 +
hóp_sˇn_cuºít
;

332 
cout
 << "Avg fûêsˇn: " << (
hóp_sˇn_tŸÆ
/
_sˇn_fûe
Ë<< 
ídl
;

334 i‡(
rc
.
	`is_îr‹
()) {

335 
˚º
 << "Eº‹ i¿fûêsˇ¿duêto: " << 
ídl
;

336 
˚º
 << 
rc
 << 
ídl
;

337 
rc
 = 
RCOK
;

339 if(
rc
.
	`is_îr‹
())

340 
	`W_COERCE
(
rc
);

344 
ödex_sˇn_cuºít
 = 0;

345 
ödex_sˇn_tŸÆ
 = 0;

346 
i
=0; !
rc
.
	`is_îr‹
(Ë&& i<
_sˇn_fûe
; i++) {

347 
°›w©ch_t
 
timî
;

348 
rc
 = 
	`sˇn_the_ödex
();

349 
ödex_sˇn_cuºít
 = 
timî
.
	`time
();

350 
ödex_sˇn_tŸÆ
 +
ödex_sˇn_cuºít
;

352 
cout
 << "Avg index sˇn: " << (
ödex_sˇn_tŸÆ
/
_sˇn_fûe
Ë<< 
ídl
;

354 i‡(
rc
.
	`is_îr‹
()) {

355 
˚º
 << "Eº‹ i¿ödex sˇ¿duêto: " << 
ídl
;

356 
˚º
 << 
rc
 << 
ídl
;

357 
rc
 = 
RCOK
;

359 if(
rc
.
	`is_îr‹
())

360 
	`W_COERCE
(
rc
);

363 
˚º
 << "CouldÇŸÖîf‹m sˇ¿duêto: " << 
ídl
;

364 
˚º
 << 
rc
 << 
ídl
;

365 
rc
 = 
RCOK
;

367 if(
rc
.
	`is_îr‹
())

368 
	`W_COERCE
(
rc
);

372 
	}
}

375 
rc_t
 
	gsmthªad_maö_t
::
	$föd_fûe_öfo
()

377 
fûe_öfo_t
 
öfo
;

378 
	`W_DO
(
ssm
->
	`begö_x˘
());

380 
boﬁ
 
found
;

381 
°id_t
 
_roŸ_iid
;

382 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

384 
smsize_t
 
öfo_Àn
 = (
öfo
);

385 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

386 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

387 
key_vec_tmp
,

388 &
öfo
, 
öfo_Àn
, 
found
));

389 i‡(!
found
) {

390 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

391  
	`RC
(
fcASSERT
);

393 
˚º
 << " foundássoc "

394 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

397 
	`W_DO
(
ssm
->
	`commô_x˘
());

399 
_fú°_rid
 = 
öfo
.
fú°_rid
;

400 
_œ°_rid
 = 
öfo
.
œ°_rid
;

401 
_fid
 = 
öfo
.
fid
;

402 
_ªc_size
 = 
öfo
.
ªc_size
;

403 
_num_ªc
 = 
öfo
.
num_ªc
;

404  
RCOK
;

405 
	}
}

408 
rc_t
 
	gsmthªad_maö_t
::
	$¸óã_the_fûe
()

410 
fûe_öfo_t
 
öfo
;

414 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


415 << "Ñec‹d†o‡sizê" << 
_ªc_size
 << 
ídl
;

416 
	`W_DO
(
ssm
->
	`begö_x˘
());

419 if(
_design_no
 < 2) {

420 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

422 
	`W_DO
(
ssm
->
	`¸óã_mrbt_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

425 
_ªc_size
 -
	`Æign
(());

427 
öfo
.
num_ªc
 = 
_num_ªc
;

428 
öfo
.
ªc_size
 = 
_ªc_size
;

432 
°id_t
 
_roŸ_iid
;

433 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

435 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

436 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

437 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

438 
key_vec_tmp
,

439 
öfo_vec_tmp
));

440 
˚º
 << "Creatingássoc "

441 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

442 
	`W_DO
(
ssm
->
	`commô_x˘
());

443  
RCOK
;

444 
	}
}

447 
rc_t
 
	gsmthªad_maö_t
::
	$¸óã_the_ödex
() {

448 if(
_design_no
 == 0) {

449 
	`W_DO
(
ssm
->
	`¸óã_ödex
(
_vid
, 
smÀvñ_0
::
t_båì
, 
smÀvñ_3
::
t_ªguœr
,

450 "i4", 
smÀvñ_0
::
t_cc_kvl
, 
_ödex_id
));

452 if(
_design_no
 == 1) {

453 
	`W_DO
(
ssm
->
	`¸óã_mr_ödex
(
_vid
, 
smÀvñ_0
::
t_mrbåì
, 
smÀvñ_3
::
t_ªguœr
,

454 "i4", 
smÀvñ_0
::
t_cc_kvl
, 
_ödex_id
, 
Ál£
));

455 } if(
_design_no
 == 2) {

456 
	`W_DO
(
ssm
->
	`¸óã_mr_ödex
(
_vid
, 
smÀvñ_0
::
t_mrbåì_p
, 
smÀvñ_3
::
t_ªguœr
,

457 "i4", 
smÀvñ_0
::
t_cc_kvl
, 
_ödex_id
, 
Ál£
));

458 } if(
_design_no
 == 3) {

459 
	`W_DO
(
ssm
->
	`¸óã_mr_ödex
(
_vid
, 
smÀvñ_0
::
t_mrbåì_l
, 
smÀvñ_3
::
t_ªguœr
,

460 "i4", 
smÀvñ_0
::
t_cc_kvl
, 
_ödex_id
, 
Ál£
));

462 
cout
 << "Wr⁄g desig¿›ti⁄!" << 
ídl
;

463  
	`RC
(
fcASSERT
);

465  
RCOK
;

466 
	}
}

469 
rc_t
 
	gsmthªad_¸ót‹_t
::
	$fûl_the_fûe_ªguœr
()

471 
num_ö£πed
 = 1;

473 
	`W_DO
(
ssm
->
	`begö_x˘
());

475 * 
dummy
 = 
√w
 [
_ªc_size
];

476 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

477 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

478 
rid_t
 
rid
;

479 
j
=
_°¨t_key
; j <
_íd_key
; j++, 
num_ö£πed
++) {

480 if–
j
 =
_íd_key
 && (_íd_key !
_num_ªc
 || 
_ã°_no
 != 2)) {

485 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

486 
o
 << 
j
 << 
íds
;

487 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

490 
i
 = 
j
;

491 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

492 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
_fid
, 
hdr
, 
_ªc_size
, 
d©a
, 
rid
, 
_bIgn‹eLocks
));

493 
cout
 << "Cª©edÑe¯" << 
j
 << "Ñid:" << 
rid
 << 
ídl
;

494 i‡(
j
 == 0) {

495 
_fú°_rid
 = 
rid
;

496 if(
_ã°_no
 == 2) {

499 } if(
j
 =
_num_ªc
) {

500 
_œ°_rid
 = 
rid
;

503 
ñ_fûÀr_uã°
 
eg
;

504 
vec_t
 
	`key
(&
i
, (i));

505 
vec_t
 
	`ñ
((*)(&
rid
), (
rid_t
));

506 
eg
.
_ñ
.
	`put
(
ñ
);

507 
	`W_DO
(
ssm
->
	`¸óã_mr_assoc
(
_ödex_id
, 
key
, 
eg
, 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
));

508 
cout
 << "Cª©edásso¯" << 
j
 << 
ídl
;

512 if(
num_ö£πed
 >= 20000) {

513 
	`W_DO
(
ssm
->
	`commô_x˘
());

514 
num_ö£πed
 = 0;

515 
	`W_DO
(
ssm
->
	`begö_x˘
());

518 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
_fú°_rid
 << " La°Ñid " << 
_œ°_rid
 << 
ídl
;

519 
dñëe
 [] 
dummy
;

521 
	`W_DO
(
ssm
->
	`commô_x˘
());

522  
RCOK
;

523 
	}
}

526 
rc_t
 
	gsmthªad_¸ót‹_t
::
	$fûl_the_fûe_n⁄_ªguœr
()

528 
num_ö£πed
 = 0;

530 
cout
 << "¸ótögássoc†ö index " << 
_ödex_id
 << " from fûê" << 
_fid
 << 
ídl
;

531 
cout
 << "Key bound¨õs: [" << 
_°¨t_key
 << ", " << 
_íd_key
 << "]" << 
ídl
;

533 
	`W_DO
(
ssm
->
	`begö_x˘
());

535 
i
 = 
_°¨t_key
;

538 if(
i
 =0 && 
_ã°_no
 == 2) {

539 
i
++;

542 
ñ_fûÀr_uã°
 
eg
;

543 
eg
.
_fid
 = _fid;

544 
eg
.
_ªc_size
 = _rec_size;

545 
eg
.
_ñ_size
 = (
rid_t
);

546 
j
 = 
i
;

547 
vec_t
 
	`key
(&
j
, (j));

548 
eg
.
j
 = 
i
;

549 
	`W_DO
(
ssm
->
	`¸óã_mr_assoc
(
_ödex_id
, 
key
, 
eg
, 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

550 
i
++;

554 
num_ö£πed
++;

555 if(
num_ö£πed
 >= 20000) {

556 
	`W_DO
(
ssm
->
	`commô_x˘
());

557 
num_ö£πed
 = 0;

558 
	`W_DO
(
ssm
->
	`begö_x˘
());

561 } 
i
 < 
_íd_key
);

563 
	`W_DO
(
ssm
->
	`commô_x˘
());

565  
RCOK
;

566 
	}
}

575 
rc_t
 
	gsmthªad_¸ót‹_t
::
	$fûl_the_fûe_ªguœr_bl
()

577 
num_ö£πed
 = 1;

579 
	`W_DO
(
ssm
->
	`begö_x˘
());

581 * 
dummy
 = 
√w
 [
_ªc_size
];

582 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

583 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

584 
rid_t
 
rid
;

585 
j
=
_°¨t_key
; j <
_íd_key
; j++, 
num_ö£πed
++) {

586 if–
j
 =
_íd_key
 && (_íd_key !
_num_ªc
 || 
_ã°_no
 != 2)) {

591 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

592 
o
 << 
j
 << 
íds
;

593 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

596 
i
 = 
j
;

597 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

598 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
_fid
, 
hdr
, 
_ªc_size
, 
d©a
, 
rid
, 
_bIgn‹eLocks
));

599 
cout
 << "Cª©edÑe¯" << 
j
 << "Ñid:" << 
rid
 << 
ídl
;

600 i‡(
j
 == 0) {

601 
_fú°_rid
 = 
rid
;

602 if(
_ã°_no
 == 2) {

605 } if(
j
 =
_num_ªc
) {

606 
_œ°_rid
 = 
rid
;

612 if(
num_ö£πed
 >= 20000) {

613 
	`W_DO
(
ssm
->
	`commô_x˘
());

614 
num_ö£πed
 = 0;

615 
	`W_DO
(
ssm
->
	`begö_x˘
());

618 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
_fú°_rid
 << " La°Ñid " << 
_œ°_rid
 << 
ídl
;

619 
dñëe
 [] 
dummy
;

621 
	`W_DO
(
ssm
->
	`commô_x˘
());

624 
	`W_DO
(
ssm
->
	`begö_x˘
());

626 
sm_du_°©s_t
 
bl_°©s
;

627 
	`W_DO
(
ssm
->
	`bulkld_ödex
(
_ödex_id
, 
_fid
, 
bl_°©s
));

629 
	`W_DO
(
ssm
->
	`commô_x˘
());

631  
RCOK
;

632 
	}
}

635 
rc_t
 
	gsmthªad_¸ót‹_t
::
	$fûl_the_fûe_n⁄_ªguœr_bl
()

638  
RCOK
;

639 
	}
}

642 
rc_t
 
	gsmthªad_maö_t
::
¥öt_upd©ed_rids
(
ve˘‹
<
rid_t
>& 
ﬁd_rids
, ve˘‹<rid_t>& 
√w_rids
)

644 
	gcout
 << 
	gídl
;

645 
	gcout
 << "OldÑids\tNewÑids" << 
	gídl
;

646 
uöt
 
	gi
=0; i<
	gﬁd_rids
.
size
(); i++) {

647 
	gcout
 << 
	gﬁd_rids
[
i
] << "\t" << 
	g√w_rids
[i] << 
	gídl
;

649  
	gRCOK
;

655 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°0
()

657 
cout
 << 
ídl
;

658 
cout
 << " ------- TEST0 -------" << 
ídl
;

659 
cout
 << "Tÿã° MRBåì wôh sögÀÖ¨tôi⁄!" << 
ídl
;

660 
cout
 << 
ídl
;

662 
cout
 << "Cª©ög mu…òroŸed båì index." << 
ídl
;

663 
	`W_DO
(
ssm
->
	`begö_x˘
());

664 
	`W_DO
(
	`¸óã_the_ödex
());

665 
	`W_DO
(
ssm
->
	`commô_x˘
());

668 
thªad±r
 
¸ót‹_thªad
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

669 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

670 
_design_no
, 0, 
_num_ªc
, 
_ödex_id
, 0);

671 
¸ót‹_thªad
->
	`f‹k
();

672 
¸ót‹_thªad
->
	`joö
();

673 
dñëe
 
¸ót‹_thªad
;

675 
	`W_DO
(
	`¥öt_the_ödex
());

677  
RCOK
;

678 
	}
}

680 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°1
()

682 
cout
 << 
ídl
;

683 
cout
 << " ------- TEST1 -------" << 
ídl
;

684 
cout
 << "Tÿã°áddög inôÆÖ¨tôi⁄†tÿMRBåì!" << 
ídl
;

685 
cout
 << 
ídl
;

687 
cout
 << "Cª©ög mu…òroŸed båì index." << 
ídl
;

688 
	`W_DO
(
ssm
->
	`begö_x˘
());

689 
	`W_DO
(
	`¸óã_the_ödex
());

690 
	`W_DO
(
ssm
->
	`commô_x˘
());

692 
	`W_DO
(
ssm
->
	`begö_x˘
());

693 
key1
 = (Ë(0.7 * 
_num_ªc
);

694 
vec_t
 
	`key_vec1
(&
key1
, (key1));

695 
cout
 << "add_∑πôi⁄_öô: stid = " << 
_ödex_id
 << ", key = " << 
key1
 << 
ídl
;

696 
	`W_DO
(
ssm
->
	`add_∑πôi⁄_öô
(
_ödex_id
, 
key_vec1
, 
Ál£
));

697 
	`W_DO
(
ssm
->
	`commô_x˘
());

699 
	`W_DO
(
ssm
->
	`begö_x˘
());

700 
key2
 = (Ë(0.5 * 
_num_ªc
);

701 
vec_t
 
	`key_vec2
(&
key2
, (key2));

702 
cout
 << "add_∑πôi⁄_öô: stid = " << 
_ödex_id
 << ", key = " << 
key2
 << 
ídl
;

703 
	`W_DO
(
ssm
->
	`add_∑πôi⁄_öô
(
_ödex_id
, 
key_vec2
, 
Ál£
));

704 
	`W_DO
(
ssm
->
	`commô_x˘
());

708 
thªad±r
 
¸ót‹_thªad1
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

709 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

710 
_design_no
, 0, 
key2
, 
_ödex_id
, 1);

711 
thªad±r
 
¸ót‹_thªad2
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

712 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

713 
_design_no
, 
key2
, 
key1
, 
_ödex_id
, 1);

714 
thªad±r
 
¸ót‹_thªad3
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

715 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

716 
_design_no
, 
key1
, 
_num_ªc
, 
_ödex_id
, 1);

717 
¸ót‹_thªad1
->
	`f‹k
();

718 
¸ót‹_thªad2
->
	`f‹k
();

719 
¸ót‹_thªad3
->
	`f‹k
();

720 
¸ót‹_thªad1
->
	`joö
();

721 
¸ót‹_thªad2
->
	`joö
();

722 
¸ót‹_thªad3
->
	`joö
();

723 
dñëe
 
¸ót‹_thªad1
;

724 
dñëe
 
¸ót‹_thªad2
;

725 
dñëe
 
¸ót‹_thªad3
;

727 
	`W_DO
(
	`¥öt_the_ödex
());

729  
RCOK
;

730 
	}
}

732 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°2
()

734 
cout
 << 
ídl
;

735 
cout
 << " ------- TEST2 -------" << 
ídl
;

736 
cout
 << "Cª©ê®∑πôi⁄á·îÅhêsomêassoc†¨ê¸óãd i¿MRBåì" << 
ídl
;

737 
cout
 << "ThíáddÇewássocs" << 
ídl
;

738 
cout
 << 
ídl
;

740 
cout
 << "Cª©ög mu…òroŸed båì index." << 
ídl
;

741 
	`W_DO
(
ssm
->
	`begö_x˘
());

742 
	`W_DO
(
	`¸óã_the_ödex
());

743 
	`W_DO
(
ssm
->
	`commô_x˘
());

746 
thªad±r
 
¸ót‹_thªad
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

747 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

748 
_design_no
, 0, 
_num_ªc
, 
_ödex_id
, 2);

749 
¸ót‹_thªad
->
	`f‹k
();

750 
¸ót‹_thªad
->
	`joö
();

751 
dñëe
 
¸ót‹_thªad
;

753 
	`W_DO
(
	`¥öt_the_ödex
());

755 
key
 = (Ë(0.7 * 
_num_ªc
);

756 
vec_t
 
	`key_vec
(&
key
, (key));

757 
cout
 << "add_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key
 << 
ídl
;

758 
	`W_DO
(
ssm
->
	`add_∑πôi⁄
(
_ödex_id
, 
key_vec
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

760 
	`W_DO
(
	`¥öt_the_ödex
());

763 
	`W_DO
(
ssm
->
	`begö_x˘
());

764 
cout
 << "ssm->¸óã_mr_assoc" << 
ídl
;

765 
ñ_fûÀr_uã°
 
eg
;

766 
eg
.
_fid
 = _fid;

767 
eg
.
_ªc_size
 = _rec_size;

768 
√w_key
 = 
_num_ªc
;

769 
eg
.
j
 = 
√w_key
;

770 
vec_t
 
	`√w_key_vec
((*)(&
√w_key
), (new_key));

771 
cout
 << "Rec‹d key " << 
√w_key
 << 
ídl
;

772 
cout
 << "key sizê" << 
√w_key_vec
.
	`size
(Ë<< 
ídl
;

773 
eg
.
_ñ_size
 = (
rid_t
);

774 if(
_design_no
 == 1) {

775 
eg
.
_ñ
.
	`£t
((*)(&
_œ°_rid
), (
rid_t
));

777 
	`W_DO
(
ssm
->
	`¸óã_mr_assoc
(
_ödex_id
, 
√w_key_vec
, 
eg
, 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

778 
cout
 << "ssm->¸óã_mr_assoc" << 
ídl
;

779 
√w_key2
 = 0;

780 
eg
.
j
 = 
√w_key
;

781 
vec_t
 
	`√w_key_vec2
((*)(&
√w_key2
), (new_key2));

782 
cout
 << "Rec‹d key " << 
√w_key2
 << 
ídl
;

783 
cout
 << "key sizê" << 
√w_key_vec2
.
	`size
(Ë<< 
ídl
;

784 if(
_design_no
 == 1) {

785 
eg
.
_ñ
.
	`£t
((*)(&
_fú°_rid
), (
rid_t
));

787 
	`W_DO
(
ssm
->
	`¸óã_mr_assoc
(
_ödex_id
, 
√w_key_vec2
, 
eg
, 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

788 
	`W_DO
(
ssm
->
	`commô_x˘
());

790 
	`W_DO
(
	`¥öt_the_ödex
());

792  
RCOK
;

793 
	}
}

795 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°3
()

797 
cout
 << 
ídl
;

798 
cout
 << " ------- TEST3 -------" << 
ídl
;

799 
cout
 << "Te°†•lô/mîgê›î©i⁄s" << 
ídl
;

800 
cout
 << 
ídl
;

802 
cout
 << "Cª©ög mu…òroŸed båì index." << 
ídl
;

803 
	`W_DO
(
ssm
->
	`begö_x˘
());

804 
	`W_DO
(
	`¸óã_the_ödex
());

805 
	`W_DO
(
ssm
->
	`commô_x˘
());

808 
thªad±r
 
¸ót‹_thªad
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

809 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

810 
_design_no
, 0, 
_num_ªc
, 
_ödex_id
, 3);

811 
¸ót‹_thªad
->
	`f‹k
();

812 
¸ót‹_thªad
->
	`joö
();

813 
dñëe
 
¸ót‹_thªad
;

815 
	`W_DO
(
	`¥öt_the_ödex
());

817 
key1
 = (Ë(0.2 * 
_num_ªc
);

818 
vec_t
 
	`key1_vec
(&
key1
, (key1));

819 
cout
 << "add_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key1
 << 
ídl
;

820 
	`W_DO
(
ssm
->
	`add_∑πôi⁄
(
_ödex_id
, 
key1_vec
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

822 
	`W_DO
(
	`¥öt_the_ödex
());

824 
key2
 = (Ë(0.4 * 
_num_ªc
);

825 
vec_t
 
	`key2_vec
(&
key2
, (key2));

826 
cout
 << "add_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key2
 << 
ídl
;

827 
	`W_DO
(
ssm
->
	`add_∑πôi⁄
(
_ödex_id
, 
key2_vec
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

829 
	`W_DO
(
	`¥öt_the_ödex
());

831 
key3
 = (Ë(0.6 * 
_num_ªc
);

832 
vec_t
 
	`key3_vec
(&
key3
, (key3));

833 
cout
 << "add_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key3
 << 
ídl
;

834 
	`W_DO
(
ssm
->
	`add_∑πôi⁄
(
_ödex_id
, 
key3_vec
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

836 
	`W_DO
(
	`¥öt_the_ödex
());

838 
key4
 = (Ë(0.8 * 
_num_ªc
);

839 
vec_t
 
	`key4_vec
(&
key4
, (key4));

840 
cout
 << "add_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key4
 << 
ídl
;

841 
	`W_DO
(
ssm
->
	`add_∑πôi⁄
(
_ödex_id
, 
key4_vec
, 
_bIgn‹eL©ches
, &
¥öt_upd©ed_rids
));

843 
	`W_DO
(
	`¥öt_the_ödex
());

845 
cout
 << "dñëe_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key1
 << 
ídl
;

846 
	`W_DO
(
ssm
->
	`dñëe_∑πôi⁄
(
_ödex_id
, 
key1_vec
, 
_bIgn‹eL©ches
));

848 
	`W_DO
(
	`¥öt_the_ödex
());

850 
key5
 = (Ë(0.7 * 
_num_ªc
);

851 
vec_t
 
	`key5_vec
(&
key5
, (key5));

852 
cout
 << "dñëe_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key5
 << 
ídl
;

853 
	`W_DO
(
ssm
->
	`dñëe_∑πôi⁄
(
_ödex_id
, 
key5_vec
, 
_bIgn‹eL©ches
));

855 
	`W_DO
(
	`¥öt_the_ödex
());

857 
key6
 = (Ë(0.5 * 
_num_ªc
);

858 
vec_t
 
	`key6_vec
(&
key6
, (key6));

859 
cout
 << "dñëe_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key6
 << 
ídl
;

860 
	`W_DO
(
ssm
->
	`dñëe_∑πôi⁄
(
_ödex_id
, 
key6_vec
, 
_bIgn‹eL©ches
));

862 
	`W_DO
(
	`¥öt_the_ödex
());

864  
RCOK
;

865 
	}
}

867 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°4
()

869 
cout
 << 
ídl
;

870 
cout
 << " ------- TEST4 -------" << 
ídl
;

871 
cout
 << " 1. Add inôü»∑πôi⁄†" << 
ídl
;

872 
cout
 << "Tÿã° mîgê∑πôi⁄†whíÑoŸ1,Àvñ >ÑoŸ2.Àvñ i¿MRBåì!" << 
ídl
;

873 
cout
 << 
ídl
;

876 
	`W_DO
(
	`mr_ödex_ã°1
());

878 
key
 = (Ë(0.6 * 
_num_ªc
);

879 
vec_t
 
	`key_vec
(&
key
, (key));

880 
cout
 << "dñëe_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key
 << 
ídl
;

881 
	`W_DO
(
ssm
->
	`dñëe_∑πôi⁄
(
_ödex_id
, 
key_vec
, 
_bIgn‹eL©ches
));

883 
	`W_DO
(
	`¥öt_the_ödex
());

885  
RCOK
;

886 
	}
}

888 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°5
()

890 
cout
 << 
ídl
;

891 
cout
 << " ------- TEST5 -------" << 
ídl
;

892 
cout
 << " 1. Add inôü»∑πôi⁄†" << 
ídl
;

893 
cout
 << "Tÿã° mîgê∑πôi⁄†whíÑoŸ1,Àvñ <ÑoŸ2.Àvñ i¿MRBåì!" << 
ídl
;

894 
cout
 << 
ídl
;

897 
	`W_DO
(
	`mr_ödex_ã°1
());

899 
key
 = (Ë(0.8 * 
_num_ªc
);

900 
vec_t
 
	`key_vec
(&
key
, (key));

901 
cout
 << "dñëe_∑πôi⁄: stid = " << 
_ödex_id
 << ", key = " << 
key
 << 
ídl
;

902 
	`W_DO
(
ssm
->
	`dñëe_∑πôi⁄
(
_ödex_id
, 
key_vec
, 
_bIgn‹eL©ches
));

904 
	`W_DO
(
	`¥öt_the_ödex
());

906  
RCOK
;

907 
	}
}

909 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°6
()

911 
cout
 << 
ídl
;

912 
cout
 << " ------- TEST6 -------" << 
ídl
;

913 
cout
 << "Te° makêequÆÖ¨tôi⁄s!" << 
ídl
;

914 
cout
 << 
ídl
;

916 
key_ønges_m≠
 
ønges
;

917 
mö_key
 = 0;

918 
vec_t
 
	`mö_key_vec
((*)(&
mö_key
), (min_key));

919 
max_key
 = 
_num_ªc
;

920 
vec_t
 
	`max_key_vec
((*)(&
max_key
), (max_key));

922 
cout
 << "Cª©ög mu…òroŸed båì index." << 
ídl
;

923 
	`W_DO
(
ssm
->
	`begö_x˘
());

924 
	`W_DO
(
	`¸óã_the_ödex
());

925 
	`W_DO
(
ssm
->
	`commô_x˘
());

927 
cout
 << "MakêequÆ inôü»∑πôi⁄s." << 
ídl
;

928 
cout
 << "mö_key: " << 
mö_key
 << " max_key: " << 
max_key
 << "Ö¨tôi⁄s: " << 
_num_∑πs
 << 
ídl
;

929 
	`W_DO
(
ssm
->
	`begö_x˘
());

930 
	`W_DO
(
ssm
->
	`make_equÆ_∑πôi⁄s
(
_ödex_id
, 
mö_key_vec
, 
max_key_vec
, 
_num_∑πs
));

931 
	`W_DO
(
ssm
->
	`commô_x˘
());

934 
diff
 = (
max_key
 - 
mö_key
Ë/ 
_num_∑πs
;

935 
cuºít_°¨t
 = 
mö_key
;

936 
thªad±r
 * 
subthªads
 = 
√w
Åhªad±∏[
_num_∑πs
];

937 
i
=0; i<
_num_∑πs
; i ++) {

938 
cout
 << "Thªad: " << 
i
 << 
ídl
;

939 
subthªads
[
i
] = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

940 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

941 
_design_no
, 
cuºít_°¨t
, cuºít_°¨t+
diff
, 
_ödex_id
, 6);

942 
cuºít_°¨t
 +
diff
;

944 
i
=0; i<
_num_∑πs
; i ++) {

945 
subthªads
[
i
]->
	`f‹k
();

947 
i
=0; i<
_num_∑πs
; i ++) {

948 
subthªads
[
i
]->
	`joö
();

950 
i
=0; i<
_num_∑πs
; i ++) {

951 
dñëe
 
subthªads
[
i
];

953 
dñëe
[] 
subthªads
;

955 
	`W_DO
(
	`¥öt_the_ödex
());

957  
RCOK
;

958 
	}
}

960 
rc_t
 
	gsmthªad_maö_t
::
	$mr_ödex_ã°7
()

962 
cout
 << 
ídl
;

963 
cout
 << " ------- TEST7 -------" << 
ídl
;

964 
cout
 << "Tÿã° bulkÜﬂdög! SögÀÅhªaded vîsi⁄." << 
ídl
;

965 
cout
 << 
ídl
;

967 
cout
 << "Cª©ög c⁄víti⁄Æ båì index." << 
ídl
;

968 
	`W_DO
(
ssm
->
	`begö_x˘
());

969 
	`W_DO
(
	`¸óã_the_ödex
());

970 
	`W_DO
(
ssm
->
	`commô_x˘
());

973 
thªad±r
 
¸ót‹_thªad
 = 
√w
 
	`smthªad_¸ót‹_t
(
_num_ªc
, 
_ªc_size
,

974 
_bIgn‹eLocks
, 
_bIgn‹eL©ches
,

975 
_design_no
, 0, 
_num_ªc
, 
_ödex_id
, 7);

976 
¸ót‹_thªad
->
	`f‹k
();

977 
¸ót‹_thªad
->
	`joö
();

978 
dñëe
 
¸ót‹_thªad
;

980 
	`W_DO
(
	`¥öt_the_ödex
());

982  
RCOK
;

983 
	}
}

986 
rc_t
 
	gsmthªad_maö_t
::
	$¥öt_the_ödex
()

988 
cout
 << "¥ötögÅhêm∏ödex from st‹ê" << 
_ödex_id
 << 
ídl
;

989 
	`W_DO
(
ssm
->
	`begö_x˘
());

990 if(
_design_no
 == 0) {

991 
	`W_DO
(
ssm
->
	`¥öt_ödex
(
_ödex_id
));

993 
	`W_DO
(
ssm
->
	`¥öt_mr_ödex
(
_ödex_id
));

995 
	`W_DO
(
ssm
->
	`commô_x˘
());

996  
RCOK
;

997 
	}
}

1000 
rc_t
 
	gsmthªad_sˇ¬î_t
::
	$sˇn_the_fûe
()

1002 
cout
 << "Sˇ¬ög fûê" << 
_fid
 << 
ídl
;

1003 
	`W_DO
(
ssm
->
	`begö_x˘
());

1005 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

1006 
pö_i
* 
	`curs‹
(
NULL
);

1007 
boﬁ
 
	`eof
(
Ál£
);

1008 
	`i
(0);

1011 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

1012 if(
rc
.
	`is_îr‹
()) {

1013 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

1014 
ªtvÆ
 = 
rc
.
	`îr_num
();

1015  
rc
;

1017 if(
eof
) ;

1019 
cout
 << "Rec‹d " << 
i
 << "/" << 
_num_ªc


1020 << " Rid " << 
curs‹
->
	`rid
(Ë<< 
ídl
;

1021 
vec_t
 
	`hódî
 (
curs‹
->
	`hdr
(), curs‹->
	`hdr_size
());

1022 
hdrc⁄ã¡s
;

1023 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

1024 
cout
 << "Rec‹d hd∏" << 
hdrc⁄ã¡s
 << 
ídl
;

1025 c⁄° *
body
 = 
curs‹
->
	`body
();

1026 
cout
 << "Rec‹d body " << 
body
 << 
ídl
;

1027 
cout
 << "Rec‹d body sizê" << 
curs‹
->
	`body_size
(Ë<< 
ídl
;

1028 
i
++;

1029 } !
eof
);

1031 
	`W_DO
(
ssm
->
	`commô_x˘
());

1032  
RCOK
;

1033 
	}
}

1036 
rc_t
 
	gsmthªad_sˇ¬î_t
::
	$sˇn_the_ödex
()

1038 
	`W_DO
(
ssm
->
	`begö_x˘
());

1039 
cout
 << "Sˇ¬ög index " << 
_ödex_id
 << 
ídl
;

1040 
sˇn_ödex_i
 
	`sˇn
(
_ödex_id
,

1041 
sˇn_ödex_i
::
ge
, 
vec_t
::
√g_öf
,

1042 
sˇn_ödex_i
::
À
, 
vec_t
::
pos_öf
, 
Ál£
,

1043 
ss_m
::
t_cc_kvl
);

1044 
boﬁ
 
	`eof
(
Ál£
);

1045 
	`i
(0);

1046 
smsize_t
 
	`kÀn
(0);

1047 
smsize_t
 
	`ñí
(0);

1048 
	#MAXKEYSIZE
 100

	)

1049 * 
keybuf
[
MAXKEYSIZE
];

1050 
fûe_öfo_t
 
öfo
;

1051 
rid_t
 
rid
;

1054 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
eof
);

1055 if(
rc
.
	`is_îr‹
()) {

1056 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

1057 
ªtvÆ
 = 
rc
.
	`îr_num
();

1058  
rc
;

1060 if(
eof
) ;

1063 
	`W_DO
(
sˇn
.
	`cuº
(
NULL
, 
kÀn
, NULL, 
ñí
));

1065 
vec_t
 
	`key
(
keybuf
, 
kÀn
);

1066 
vec_t
 
	`ñem
(&
rid
, 
ñí
);

1068 
	`W_DO
(
sˇn
.
	`cuº
(&
key
, 
kÀn
, &
ñem
, 
ñí
));

1070 
cout
 << "Key " << *(*Ë
keybuf
 << 
ídl
;

1071 
cout
 << "VÆuê" << 
rid
 << 
ídl
;

1072 
i
++;

1073 } !
eof
);

1074 
	`W_DO
(
ssm
->
	`commô_x˘
());

1075  
RCOK
;

1076 
	}
}

1079 
rc_t
 
	gsmthªad_maö_t
::
	$do_öô
()

1081 
cout
 << "-i: Inôülizê" << 
ídl
;

1084 
devid_t
 
devid
;

1085 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


1086 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

1087 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

1089 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

1091 
u_öt
 
vﬁ_˙t
;

1092 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

1094 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


1095 << " vﬁumêcou¡ " << 
vﬁ_˙t


1096 << " devi˚ " << 
devid


1097 << 
ídl
;

1101 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

1102 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

1103 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

1106 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

1107 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

1109 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

1110 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

1114 
	`W_DO
(
	`¸óã_the_fûe
());

1115  
RCOK
;

1116 
	}
}

1119 
rc_t
 
	gsmthªad_maö_t
::
	$no_öô
()

1121 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

1123 
devid_t
 
devid
;

1124 
u_öt
 
vﬁ_˙t
;

1125 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

1126 i‡(
rc
.
	`is_îr‹
()) {

1127 
˚º
 << "Error: couldÇot mount device: "

1128 << 
_devi˚_«me
 << 
ídl
;

1129 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

1130 << 
ídl
;

1131  
rc
;

1135 
lvid_t
* 
lvid_li°
;

1136 
u_öt
 
lvid_˙t
;

1137 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

1138 i‡(
lvid_˙t
 == 0) {

1139 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

1140 
	`exô
(1);

1142 
_lvid
 = 
lvid_li°
[0];

1143 
dñëe
 [] 
lvid_li°
;

1145 
	`W_COERCE
(
	`föd_fûe_öfo
());

1146 
_ã°_no
) {

1148 
	`W_DO
(
	`mr_ödex_ã°0
());

1151 
	`W_DO
(
	`mr_ödex_ã°1
());

1154 
	`W_DO
(
	`mr_ödex_ã°2
());

1157 
	`W_DO
(
	`mr_ödex_ã°3
());

1160 
	`W_DO
(
	`mr_ödex_ã°4
());

1163 
	`W_DO
(
	`mr_ödex_ã°5
());

1166 
	`W_DO
(
	`mr_ödex_ã°6
());

1169 
	`W_DO
(
	`mr_ödex_ã°7
());

1174 if(
_sˇn_fûe
 > 0) {

1175 
thªad±r
 
sˇ¬î_thªad
 = 
√w
 
	`smthªad_sˇ¬î_t
(
_ödex_id
, 
_sˇn_fûe
,

1176 
_bIgn‹eL©ches
,

1177 0, 
_num_ªc
);

1178 
sˇ¬î_thªad
->
	`f‹k
();

1179 
sˇ¬î_thªad
->
	`joö
();

1180 
dñëe
 
sˇ¬î_thªad
;

1183  
RCOK
;

1184 
	}
}

1186 
rc_t
 
	gsmthªad_maö_t
::
	$do_w‹k
()

1188 i‡(
_öôülize_devi˚
) {

1189 
	`W_DO
(
	`do_öô
());

1191 
	`W_DO
(
	`no_öô
());

1192  
RCOK
;

1193 
	}
}

1199 
w_rc_t
 
	gsmthªad_maö_t
::
	$h™dÀ_›ti⁄s
()

1201 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

1202 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

1203 
›ti⁄_t
* 
›t_num_ªc
 = 0;

1205 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

1215 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

1217 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

1218 if(!
_›ti⁄s
) {

1219 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

1220 
ídl
;

1221 
ªtvÆ
 = 1;

1222  
	`RC
(
fcINTERNAL
);

1224 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

1226 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

1227 
NULL
, "device containg volume holding fileÅo scan",

1228 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

1229 
›t_devi˚_«me
));

1231 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

1233 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

1234 
›t_devi˚_quŸa
));

1237 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

1239 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

1240 
›t_num_ªc
));

1243 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

1245 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

1247 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

1248 i‡(
rc
.
	`is_îr‹
()) {

1249 
	`ußge
(
›ti⁄s
);

1250 
ªtvÆ
 = 1;

1251  
rc
;

1253 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

1256 
›ti⁄
;

1257 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hit:n:s:r:dpo:")) != -1) {

1258 
›ti⁄
) {

1260 
_öôülize_devi˚
 = 
åue
;

1264 
_sˇn_fûe
 = 
	`©oi
(
›èrg
);

1268 
	`ußge
(
›ti⁄s
);

1272 
_ã°_no
 = 
	`©oi
(
›èrg
);

1276 
_num_∑πs
 = 
	`©oi
(
›èrg
);

1280 
_ªc_size
 = 
	`©oi
(
›èrg
);

1284 
_bIgn‹eLocks
 = 
åue
;

1288 
_bIgn‹eL©ches
 = 
åue
;

1292 
_design_no
 = 
	`©oi
(
›èrg
);;

1296 
	`ußge
(
›ti⁄s
);

1297 
ªtvÆ
 = 1;

1298  
	`RC
(
fcNOTIMPLEMENTED
);

1304 
cout
 << "Checking forÑequired options...";

1306 
w_o°r°ªam
 
îr_°ªam
;

1307 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

1308 i‡(
rc
.
	`is_îr‹
()) {

1309 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

1310 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

1311  
rc
;

1313 
cout
 << "O±i⁄†OK; vÆue†¨e: { " << 
ídl
;

1314 
›ti⁄s
.
	`¥öt_vÆues
(
Ál£
, 
cout
);

1315 
cout
 << "}ÉndÜi° o‡›ti⁄†vÆues. " << 
ídl
;

1319 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

1320 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

1321 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

1324 
cout
 << "DESIGN: " << 
_design_no
 << 
ídl


1325 << "TEST: " << 
_ã°_no
 << 
ídl


1326 << "_num_ªc: " << 
_num_ªc
 << 
ídl


1327 << "_ªc_size: " << 
_ªc_size
 << 
ídl


1328 << " _öôülize_devi˚: " << 
_öôülize_devi˚
 << 
ídl


1329 << "_num_∑πs: " << 
_num_∑πs
 << 
ídl


1330 << "_sˇn_fûe: " << 
_sˇn_fûe
 << 
ídl


1331 << "_bIgn‹eLocks: " << 
_bIgn‹eLocks
 << 
ídl


1332 << "_bIgn‹eL©ches: " << 
_bIgn‹eL©ches
 << 
ídl
;

1334  
RCOK
;

1335 
	}
}

1337 
	gsmthªad_maö_t
::
	$run
()

1339 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

1340 if(
rc
.
	`is_îr‹
()) {

1341 
ªtvÆ
 = 1;

1346 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

1347 
ssm
 = 
√w
 
	`ss_m
();

1348 i‡(!
ssm
) {

1349 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

1350 
ªtvÆ
 = 1;

1354 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

1356 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

1357 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

1362 
rc
 = 
	`do_w‹k
();

1364 
sm_°©s_öfo_t
 
°©s
;

1365 
	`W_COERCE
(
ss_m
::
	`g©hî_°©s
(
°©s
));

1366 
cout
 << " SM Sèti°ic†: " << 
ídl


1367 << 
°©s
 << 
ídl
;

1369 i‡(
rc
.
	`is_îr‹
()) {

1370 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

1371 
˚º
 << 
rc
 << 
ídl
;

1372 
dñëe
 
ssm
;

1373 
rc
 = 
RCOK
;

1375 
ªtvÆ
 = 1;

1376 if(
rc
.
	`is_îr‹
())

1377 
	`W_COERCE
(
rc
);

1382 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

1383 
dñëe
 
ssm
;

1385 
cout
 << "Föished!" << 
ídl
;

1388 
	}
}

1390 
	$maö
(
¨gc
, * 
¨gv
[])

1392 
smthªad_maö_t
 *
smtu
 = 
√w
 
	`smthªad_maö_t
(
¨gc
, 
¨gv
);

1393 i‡(!
smtu
)

1394 
	`W_FATAL
(
fcOUTOFMEMORY
);

1396 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

1397 if(
e
.
	`is_îr‹
()) {

1398 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

1401 
e
 = 
smtu
->
	`joö
();

1402 if(
e
.
	`is_îr‹
()) {

1403 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

1407 
rv
 = 
smtu
->
ªtvÆ
;

1408 
dñëe
 
smtu
;

1410  
rv
;

1411 
	}
}

	@src/sm/tests/rtree_example.cpp

30 
	~"w_deföes.h
"

39 
	~<w_°ªam.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<ˇs£π
>

42 
	~"sm_vas.h
"

43 
	~"w_gë›t.h
"

44 
ss_m
* 
	gssm
 = 0;

47 
w_rc_t
 
	trc_t
;

50 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

51 c⁄° * 
¥og_ty≥
,

52 & 
¨gc
, ** 
¨gv
);

55 
	sfûe_öfo_t
 {

56 c⁄° * 
	mkey
;

57 
°id_t
 
	mfid
;

58 
rid_t
 
	mfú°_rid
;

59 
	mnum_ªc
;

60 
	mªc_size
;

62 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

64 
	go°ªam
 &

65 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

67 
	go
 << "key " << 
	göfo
.
	gkey


68 << " fid " << 
	göfo
.
	gfid


69 << " fú°_rid " << 
	göfo
.
	gfú°_rid


70 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


71 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

72  
	go
;

76 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

81 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

83 
˚º
 << "Ußge:Ñåì_exam∂ê[-h] [-i] [›ti⁄s]" << 
ídl
;

84 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêo‡ªc‹ds" << 
ídl
;

85 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

86 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

87 
	}
}

90 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

91 
_¨gc
;

92 **
	m_¨gv
;

94 c⁄° *
	m_devi˚_«me
;

95 
smsize_t
 
	m_quŸa
;

96 
	m_num_ªc
;

97 
smsize_t
 
	m_ªc_size
;

98 
lvid_t
 
	m_lvid
;

99 
rid_t
 
	m_°¨t_rid
;

100 
°id_t
 
	m_fid
;

101 
boﬁ
 
	m_öôülize_devi˚
;

102 
›ti⁄_group_t
* 
	m_›ti⁄s
;

103 
vid_t
 
	m_vid
;

104 
	mpublic
:

105 
ªtvÆ
;

107 
	$smthªad_u£r_t
(
ac
, **
av
)

108 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

109 
	`_¨gc
(
ac
), 
	`_¨gv
(
av
),

110 
	`_devi˚_«me
(
NULL
),

111 
	`_quŸa
(0),

112 
	`_num_ªc
(0),

113 
	`_ªc_size
(0),

114 
	`_öôülize_devi˚
(
Ál£
),

115 
	`_›ti⁄s
(
NULL
),

116 
	`_vid
(1),

117 
	$ªtvÆ
(0) { }

119 ~
	$smthªad_u£r_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

121 
run
();

124 
w_rc_t
 
h™dÀ_›ti⁄s
();

125 
w_rc_t
 
föd_fûe_öfo
();

126 
w_rc_t
 
¸óã_the_fûe
();

127 
w_rc_t
 
¸óã_the_πªe
(
°id_t
 &
iid
, 
nbox_t
 &);

129 
w_rc_t
 
¸óã_πªe_íåy
(
°id_t
 
iid
, 
rid_t
 &
rid
,

130 
nbox_t
 &
univî£
,

131 
kk
, 
œ°
);

132 
w_rc_t
 
sˇn_the_πªe
(
°id_t
 &
iid
, 
nbox_t
 &);

133 
w_rc_t
 
do_w‹k
();

134 
w_rc_t
 
do_öô
();

135 
w_rc_t
 
no_öô
();

139 
w_rc_t


140 
	gsmthªad_u£r_t
::
	$¸óã_πªe_íåy
(
°id_t
 
iid
, 
rid_t
 &
rid
,

141 
nbox_t
 &
univî£
,

142 
kk
, 
œ°
)

144 
vec_t
 
ñ
;

148 
vec_t
 
	`oid
(&
rid
, (rid));

151 
vÆues
[4];

152 
vÆues
[0] = 
kk
;

153 
vÆues
[1] = 
kk
;

154 
vÆues
[2] = 
kk
 + 
œ°
;

155 
vÆues
[3] = 
kk
 + 10;

156 
œ°
 = 
kk
;

158 
nbox_t
 
	`box
(2, 
vÆues
);

159 
box
.
	`ˇn⁄ize
();

160 
univî£
 +
box
;

161 
ñ
.
	`ª£t
().
	`put
(&
rid
, (rid));

163 
	`W_DO
(
ssm
->
	`¸óã_md_assoc
(
iid
, 
box
, 
ñ
));

165  
RCOK
;

166 
	}
}

168 
rc_t


169 
	gsmthªad_u£r_t
::
	$¸óã_the_πªe
(
°id_t
 &
iid
, 
nbox_t
 &
univî£
)

171 
	`W_DO
(
ssm
->
	`begö_x˘
());

173 
	`W_DO
–
ssm
->
	`¸óã_md_ödex
(
_vid
,

174 
ssm
->
t_πªe
,

175 
ss_m
::
t_lﬂd_fûe
,

176 
iid


178 
cout
 << "Sˇ¬ög fûê" << 
_fid


179 << "Åÿp›uœã index " << 
iid


180 << 
ídl
;

182 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

183 
pö_i
* 
	`curs‹
(
NULL
);

184 
boﬁ
 
	`eof
(
Ál£
);

185 
	`i
(0);

186 
œ°
=0;

188 
univî£
.
	`nuŒify
();

190 c⁄° 
n
 = 100;

192 c⁄° 
h
 = 
n
/2;

194 
kk
 = 
i
 - 
h
;

195 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

196 if(
rc
.
	`is_îr‹
()) {

197 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

198 
ªtvÆ
 = 
rc
.
	`îr_num
();

199  
rc
;

201 if(
eof
) ;

203 
rid_t
 
rid
 = 
curs‹
->
	`rid
();

204 
cout
 << "¸óã box f‹Ñid " << 
rid


205 << " kk = " << 
kk
 << 
ídl
;

206 
	`W_DO
(
	`¸óã_πªe_íåy
(
iid
, 
rid
,

207 
univî£
, 
kk
, 
œ°
));

208 
i
++;

209 } !
eof
);

210 
	`w_as£π1
(
i
 =
_num_ªc
);

212 
	`W_DO
(
ssm
->
	`commô_x˘
());

214  
RCOK
;

215 
	}
}

217 
rc_t


218 
	gsmthªad_u£r_t
::
	$sˇn_the_πªe
(
°id_t
 &
iid
, 
nbox_t
 &
univî£
)

220 
	`W_DO
(
ssm
->
	`begö_x˘
());

222 
sˇn_π_i
 
	`sˇn
(
iid
, 
nbox_t
::
t_ovîœp
, 
univî£
, 
åue
);

223 
boﬁ
 
	`eof
(
Ál£
);

224 
	`i
(0);

225 
e
[1000];

226 
smsize_t
 
	`ñí
((
e
));

227 
nbox_t
 
	`k
(2);

228 
w_rc_t
 
rc
;

229 
i
 = 0;

230 (!(
rc
 = 
sˇn
.
	`√xt
(
k
,
e
,
ñí
,
eof
)).
	`is_îr‹
() && !eof) ;

231 
i
++)

233 
vec_t
 
	`v
(
e
,
ñí
);

234 
rid_t
 
rid
;

235 
v
.
	`c›y_to
(&
rid
, (rid));

236 
cout
 << "box " << 
k


237 << "Ñid " << 
rid
 << 
ídl
;

240 
cout


241 << " De°royög index " << 
iid


242 << 
ídl
;

243 
	`W_DO
(
ssm
->
	`de°roy_md_ödex
(
iid
));

244 
	`W_DO
(
ssm
->
	`commô_x˘
());

245  
RCOK
;

246 
	}
}

251 
w_rc_t


252 
	gsmthªad_u£r_t
::
	$föd_fûe_öfo
()

254 
fûe_öfo_t
 
öfo
;

255 
	`W_DO
(
ssm
->
	`begö_x˘
());

257 
boﬁ
 
found
;

258 
°id_t
 
_roŸ_iid
;

259 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

261 
smsize_t
 
öfo_Àn
 = (
öfo
);

262 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

263 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

264 
key_vec_tmp
,

265 &
öfo
, 
öfo_Àn
, 
found
));

266 i‡(!
found
) {

267 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

268  
	`RC
(
fcASSERT
);

270 
˚º
 << " foundássoc "

271 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

274 
	`W_DO
(
ssm
->
	`commô_x˘
());

276 
_°¨t_rid
 = 
öfo
.
fú°_rid
;

277 
_fid
 = 
öfo
.
fid
;

278 
_ªc_size
 = 
öfo
.
ªc_size
;

279 
_num_ªc
 = 
öfo
.
num_ªc
;

280  
RCOK
;

281 
	}
}

292 
rc_t


293 
	gsmthªad_u£r_t
::
	$¸óã_the_fûe
()

295 
fûe_öfo_t
 
öfo
;

299 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


300 << "Ñec‹d†" << 
_ªc_size
 << 
ídl
;

301 
	`W_DO
(
ssm
->
	`begö_x˘
());

304 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

305 
rid_t
 
rid
;

307 
_ªc_size
 -
	`Æign
(());

312 * 
dummy
 = 
√w
 [
_ªc_size
];

313 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

314 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

316 
j
=0; j < 
_num_ªc
; j++)

319 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

320 
o
 << "Rec‹dÇumbî " << 
j
 << 
íds
;

321 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

324 
i
 = 
j
;

325 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

326 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

327 
_ªc_size
, 
d©a
, 
rid
));

328 
cout
 << "Cª©edÑe¯" << 
j
 << "Ñid " << 
rid
 << 
ídl
;

329 i‡(
j
 == 0) {

330 
öfo
.
fú°_rid
 = 
rid
;

333 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
öfo
.
fú°_rid
 << 
ídl
;

334 
dñëe
 [] 
dummy
;

335 
öfo
.
num_ªc
 = 
_num_ªc
;

336 
öfo
.
ªc_size
 = 
_ªc_size
;

340 
°id_t
 
_roŸ_iid
;

341 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

343 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

344 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

345 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

346 
key_vec_tmp
,

347 
öfo_vec_tmp
));

348 
˚º
 << "Creatingássoc "

349 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

350 
	`W_DO
(
ssm
->
	`commô_x˘
());

351  
RCOK
;

352 
	}
}

354 
rc_t


355 
	gsmthªad_u£r_t
::
	$do_öô
()

357 
cout
 << "-i: Inôülizê" << 
ídl
;

360 
devid_t
 
devid
;

361 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


362 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

363 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

365 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

367 
u_öt
 
vﬁ_˙t
;

368 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

370 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


371 << " vﬁumêcou¡ " << 
vﬁ_˙t


372 << " devi˚ " << 
devid


373 << 
ídl
;

377 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

378 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

379 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

382 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

383 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

385 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

386 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

390 
	`W_DO
(
	`¸óã_the_fûe
());

391 
	`W_DO
(
	`föd_fûe_öfo
());

392 
°id_t
 
iid
;

393 
nbox_t
 
	`univî£
(2);

394 
	`W_DO
(
	`¸óã_the_πªe
(
iid
, 
univî£
));

395 
	`W_DO
(
	`sˇn_the_πªe
(
iid
, 
univî£
));

396  
RCOK
;

397 
	}
}

399 
rc_t


400 
	gsmthªad_u£r_t
::
	$no_öô
()

402 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

404 
devid_t
 
devid
;

405 
u_öt
 
vﬁ_˙t
;

406 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

407 i‡(
rc
.
	`is_îr‹
()) {

408 
˚º
 << "Error: couldÇot mount device: "

409 << 
_devi˚_«me
 << 
ídl
;

410 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

411 << 
ídl
;

412  
rc
;

416 
lvid_t
* 
lvid_li°
;

417 
u_öt
 
lvid_˙t
;

418 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

419 i‡(
lvid_˙t
 == 0) {

420 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

421 
	`exô
(1);

423 
_lvid
 = 
lvid_li°
[0];

424 
dñëe
 [] 
lvid_li°
;

426 
	`W_COERCE
(
	`föd_fûe_öfo
());

427 
°id_t
 
iid
;

428 
nbox_t
 
	`univî£
(2);

429 
	`W_COERCE
(
	`¸óã_the_πªe
(
iid
, 
univî£
));

430 
	`W_COERCE
(
	`sˇn_the_πªe
(
iid
, 
univî£
));

431  
RCOK
;

432 
	}
}

434 
rc_t


435 
	gsmthªad_u£r_t
::
	$do_w‹k
()

437 i‡(
_öôülize_devi˚
Ë
	`W_DO
(
	`do_öô
());

438 
	`W_DO
(
	`no_öô
());

439  
RCOK
;

440 
	}
}

446 
w_rc_t
 
	gsmthªad_u£r_t
::
	$h™dÀ_›ti⁄s
()

448 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

449 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

450 
›ti⁄_t
* 
›t_num_ªc
 = 0;

452 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

462 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

464 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

465 if(!
_›ti⁄s
) {

466 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

467 
ídl
;

468 
ªtvÆ
 = 1;

469  
	`RC
(
fcINTERNAL
);

471 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

473 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

474 
NULL
, "device containg volume holding fileÅo scan",

475 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

476 
›t_devi˚_«me
));

478 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

480 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

481 
›t_devi˚_quŸa
));

484 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

486 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

487 
›t_num_ªc
));

490 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

492 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

494 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

495 i‡(
rc
.
	`is_îr‹
()) {

496 
	`ußge
(
›ti⁄s
);

497 
ªtvÆ
 = 1;

498  
rc
;

500 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

503 
›ti⁄
;

504 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hi")) != -1) {

505 
›ti⁄
) {

507 
_öôülize_devi˚
 = 
åue
;

511 
	`ußge
(
›ti⁄s
);

515 
	`ußge
(
›ti⁄s
);

516 
ªtvÆ
 = 1;

517  
	`RC
(
fcNOTIMPLEMENTED
);

522 
cout
 << "Checking forÑequired options...";

524 
w_o°r°ªam
 
îr_°ªam
;

525 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

526 i‡(
rc
.
	`is_îr‹
()) {

527 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

528 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

529  
rc
;

531 
cout
 << "OK " << 
ídl
;

535 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

536 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

537 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

539  
RCOK
;

540 
	}
}

542 
	gsmthªad_u£r_t
::
	$run
()

544 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

545 if(
rc
.
	`is_îr‹
()) {

546 
ªtvÆ
 = 1;

551 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

552 
ssm
 = 
√w
 
	`ss_m
();

553 i‡(!
ssm
) {

554 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

555 
ªtvÆ
 = 1;

559 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

561 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

562 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

563 
_ªc_size
 = 
c⁄fig_öfo
.
max_smÆl_ªc
;

567 
rc
 = 
	`do_w‹k
();

569 i‡(
rc
.
	`is_îr‹
()) {

570 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

571 
˚º
 << 
rc
 << 
ídl
;

572 
dñëe
 
ssm
;

573 
rc
 = 
RCOK
;

575 
ªtvÆ
 = 1;

576 if(
rc
.
	`is_îr‹
())

577 
	`W_COERCE
(
rc
);

583 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

584 
dñëe
 
ssm
;

586 
cout
 << "Föished!" << 
ídl
;

589 
	}
}

593 
	$maö
(
¨gc
, * 
¨gv
[])

595 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

596 i‡(!
smtu
)

597 
	`W_FATAL
(
fcOUTOFMEMORY
);

599 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

600 if(
e
.
	`is_îr‹
()) {

601 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

604 
e
 = 
smtu
->
	`joö
();

605 if(
e
.
	`is_îr‹
()) {

606 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

610 
rv
 = 
smtu
->
ªtvÆ
;

611 
dñëe
 
smtu
;

613  
rv
;

614 
	}
}

	@src/sm/tests/sort_stream.cpp

30 
	~"w_deföes.h
"

39 
	~<w_°ªam.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<ˇs£π
>

42 
	~"sm_vas.h
"

43 
	~"w_gë›t.h
"

44 
ss_m
* 
	gssm
 = 0;

47 
w_rc_t
 
	trc_t
;

50 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

51 c⁄° * 
¥og_ty≥
,

52 & 
¨gc
, ** 
¨gv
);

55 
	sfûe_öfo_t
 {

56 c⁄° * 
	mkey
;

57 
°id_t
 
	mfid
;

58 
rid_t
 
	mfú°_rid
;

59 
	mnum_ªc
;

60 
	mªc_size
;

62 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

64 
	go°ªam
 &

65 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

67 
	go
 << "key " << 
	göfo
.
	gkey


68 << " fid " << 
	göfo
.
	gfid


69 << " fú°_rid " << 
	göfo
.
	gfú°_rid


70 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


71 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

72  
	go
;

76 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

81 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

83 
˚º
 << "Ußge: s‹t_°ªam [-h] [-i] [›ti⁄s]" << 
ídl
;

84 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêo‡ªc‹ds" << 
ídl
;

85 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

86 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

87 
	}
}

90 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

91 
_¨gc
;

92 **
	m_¨gv
;

94 c⁄° *
	m_devi˚_«me
;

95 
smsize_t
 
	m_quŸa
;

96 
	m_num_ªc
;

97 
smsize_t
 
	m_ªc_size
;

98 
lvid_t
 
	m_lvid
;

99 
rid_t
 
	m_°¨t_rid
;

100 
°id_t
 
	m_fid
;

101 
boﬁ
 
	m_öôülize_devi˚
;

102 
›ti⁄_group_t
* 
	m_›ti⁄s
;

103 
vid_t
 
	m_vid
;

104 
	mpublic
:

105 
ªtvÆ
;

107 
	$smthªad_u£r_t
(
ac
, **
av
)

108 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

109 
	`_¨gc
(
ac
), 
	`_¨gv
(
av
),

110 
	`_devi˚_«me
(
NULL
),

111 
	`_quŸa
(0),

112 
	`_num_ªc
(0),

113 
	`_ªc_size
(0),

114 
	`_öôülize_devi˚
(
Ál£
),

115 
	`_›ti⁄s
(
NULL
),

116 
	`_vid
(1),

117 
	$ªtvÆ
(0) { }

119 ~
	$smthªad_u£r_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

121 
run
();

124 
w_rc_t
 
h™dÀ_›ti⁄s
();

125 
w_rc_t
 
föd_fûe_öfo
();

126 
w_rc_t
 
¸óã_the_fûe
();

127 
w_rc_t
 
demo_s‹t_°ªam
();

128 
w_rc_t
 
sˇn_the_roŸ_ödex
();

129 
w_rc_t
 
do_w‹k
();

130 
w_rc_t
 
do_öô
();

131 
w_rc_t
 
no_öô
();

138 
w_rc_t


139 
	gsmthªad_u£r_t
::
	$föd_fûe_öfo
()

141 
fûe_öfo_t
 
öfo
;

142 
	`W_DO
(
ssm
->
	`begö_x˘
());

144 
boﬁ
 
found
;

145 
°id_t
 
_roŸ_iid
;

146 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

148 
smsize_t
 
öfo_Àn
 = (
öfo
);

149 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

150 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

151 
key_vec_tmp
,

152 &
öfo
, 
öfo_Àn
, 
found
));

153 i‡(!
found
) {

154 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

155  
	`RC
(
fcASSERT
);

157 
˚º
 << " foundássoc "

158 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

161 
	`W_DO
(
ssm
->
	`commô_x˘
());

163 
_°¨t_rid
 = 
öfo
.
fú°_rid
;

164 
_fid
 = 
öfo
.
fid
;

165 
_ªc_size
 = 
öfo
.
ªc_size
;

166 
_num_ªc
 = 
öfo
.
num_ªc
;

167  
RCOK
;

168 
	}
}

179 
rc_t


180 
	gsmthªad_u£r_t
::
	$¸óã_the_fûe
()

182 
fûe_öfo_t
 
öfo
;

186 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


187 << "Ñec‹d†o‡sizê" << 
_ªc_size
 << 
ídl
;

188 
	`W_DO
(
ssm
->
	`begö_x˘
());

191 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

192 
rid_t
 
rid
;

194 
_ªc_size
 -
	`Æign
(());

199 * 
dummy
 = 
√w
 [
_ªc_size
];

200 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

201 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

203 
j
=0; j < 
_num_ªc
; j++)

206 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

207 
o
 << "Rec‹dÇumbî " << 
j
 << 
íds
;

208 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

213 
w_ba£_t
::
öt4_t
 
i
 = 
j
;

214 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

216 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

217 
_ªc_size
, 
d©a
, 
rid
));

218 
cout
 << "Cª©ögÑe¯" << 
j
 << 
ídl
;

219 i‡(
j
 == 0) {

220 
öfo
.
fú°_rid
 = 
rid
;

223 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
öfo
.
fú°_rid
 << 
ídl
;

224 
dñëe
 [] 
dummy
;

225 
öfo
.
num_ªc
 = 
_num_ªc
;

226 
öfo
.
ªc_size
 = 
_ªc_size
;

230 
°id_t
 
_roŸ_iid
;

231 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

233 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

234 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

235 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

236 
key_vec_tmp
,

237 
öfo_vec_tmp
));

238 
˚º
 << "Creatingássoc "

239 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

240 
	`W_DO
(
ssm
->
	`commô_x˘
());

241  
RCOK
;

242 
	}
}

244 
rc_t


245 
	gsmthªad_u£r_t
::
	$sˇn_the_roŸ_ödex
()

247 
	`W_DO
(
ssm
->
	`begö_x˘
());

248 
°id_t
 
_roŸ_iid
;

249 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

250 
cout
 << "Sˇ¬ög index " << 
_roŸ_iid
 << 
ídl
;

251 
sˇn_ödex_i
 
	`sˇn
(
_roŸ_iid
,

252 
sˇn_ödex_i
::
ge
, 
vec_t
::
√g_öf
,

253 
sˇn_ödex_i
::
À
, 
vec_t
::
pos_öf
, 
Ál£
,

254 
ss_m
::
t_cc_kvl
);

255 
boﬁ
 
	`eof
(
Ál£
);

256 
	`i
(0);

257 
smsize_t
 
	`kÀn
(0);

258 
smsize_t
 
	`ñí
(0);

259 
	#MAXKEYSIZE
 100

	)

260 * 
keybuf
[
MAXKEYSIZE
];

261 
fûe_öfo_t
 
öfo
;

264 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
eof
);

265 if(
rc
.
	`is_îr‹
()) {

266 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

267 
ªtvÆ
 = 
rc
.
	`îr_num
();

268  
rc
;

270 if(
eof
) ;

273 
	`W_DO
(
sˇn
.
	`cuº
(
NULL
, 
kÀn
, NULL, 
ñí
));

275 
vec_t
 
	`key
(
keybuf
, 
kÀn
);

276 
vec_t
 
	`ñem
(&
öfo
, 
ñí
);

278 
	`W_DO
(
sˇn
.
	`cuº
(&
key
, 
kÀn
, &
ñem
, 
ñí
));

280 
cout
 << "Key " << 
keybuf
 << 
ídl
;

281 
cout
 << "Value "

282 << " { fid " << 
öfo
.
fid


283 << " fú°_rid " << 
öfo
.
fú°_rid


284 << " #ª¯" << 
öfo
.
num_ªc


285 << "Ñe¯sizê" << 
öfo
.
ªc_size
 << " }"

286 << 
ídl
;

287 
i
++;

288 } !
eof
);

289 
	`W_DO
(
ssm
->
	`commô_x˘
());

290  
RCOK
;

291 
	}
}

293 
w_rc_t


294 
	gsmthªad_u£r_t
::
	$demo_s‹t_°ªam
()

299 
w_ba£_t
::
öt4_t
 
hdrc⁄ã¡s
;

302 
usög
 
ssm_s‹t
::
key_öfo_t
 ;

304 
key_öfo_t
 
köfo
;

305 
köfo
.
ty≥
 = 
s‹t‹dî
::
kt_i4
;

306 
köfo
.
dîived
 = 
Ál£
;

307 
köfo
.
whîe
 = 
key_öfo_t
::
t_hdr
;

308 
köfo
.
off£t
 = 0;

309 
köfo
.
Àn
 = (
hdrc⁄ã¡s
);

310 
köfo
.
e°_ª˛í
 = 
_ªc_size
;

313 
usög
 
ssm_s‹t
::
s‹t_∑rm_t
 ;

315 
s‹t_∑rm_t
 
behav
;

316 
behav
.
run_size
 = 10;

317 
behav
.
vﬁ
 = 
_vid
;

318 
behav
.
unique
 = 
Ál£
;

319 
behav
.
as˚ndög
 = 
Ál£
;

320 
behav
.
de°ru˘ive
 = 
Ál£
;

322 
behav
.
¥›îty
 = 
ss_m
::
t_ãmp‹¨y
;

324 
s‹t_°ªam_i
 
	`°ªam
(
köfo
, 
behav
, 
_ªc_size
);

325 
	`w_as£π1
(
°ªam
.
	`is_s‹ãd
()==
Ál£
);

328 
	`W_DO
(
ssm
->
	`begö_x˘
());

330 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

331 
pö_i
* 
	`curs‹
(
NULL
);

332 
boﬁ
 
	`eof
(
Ál£
);

333 
	`i
(0);

336 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

337 if(
rc
.
	`is_îr‹
()) {

338 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

339 
ªtvÆ
 = 
rc
.
	`îr_num
();

340  
rc
;

342 if(
eof
) ;

344 
vec_t
 
	`hódî
 (
curs‹
->
	`hdr
(), curs‹->
	`hdr_size
());

345 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

346 
cout
 << "Rec‹d hd∏" << 
hdrc⁄ã¡s
 << 
ídl
;

348 
rid_t
 
rid
 = 
curs‹
->
	`rid
();

349 
vec_t
 
	`ñem
 (&
rid
, (rid));

351 
°ªam
.
	`put
(
hódî
, 
ñem
);

352 
i
++;

353 } !
eof
);

354 
	`w_as£π1
(
i
 =
_num_ªc
);

355 
	`W_DO
(
ssm
->
	`commô_x˘
());

358 
	`w_as£π1
(
°ªam
.
	`is_s‹ãd
()==
Ál£
);

361 
	`W_DO
(
ssm
->
	`begö_x˘
());

362 
i
--;

363 
eof
 = 
Ál£
;

365 
vec_t
 
hódî
;

366 
vec_t
 
ñem
;

367 
	`W_DO
(
°ªam
.
	`gë_√xt
(
hódî
, 
ñem
, 
eof
));

368 if(
eof
) ;

370 
	`w_as£π1
(
°ªam
.
	`is_s‹ãd
()==
åue
);

371 
	`w_as£π1
(
°ªam
.
	`is_em±y
()==
Ál£
);

372 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

374 
rid_t
 
rid
;

375 
ñem
.
	`c›y_to
(&
rid
, (rid));

377 
	`w_as£π1
(
i
 =
hdrc⁄ã¡s
);

379 
cout
 << "ò" << 
hdrc⁄ã¡s
 << "Ñid " << 
rid
 << 
ídl
;

380 
i
--;

381 } !
eof
);

382 
	`W_DO
(
ssm
->
	`commô_x˘
());

383 
	`w_as£π1
(
°ªam
.
	`is_em±y
()==
Ál£
);

384 
	`w_as£π1
(
°ªam
.
	`is_s‹ãd
()==
åue
);

385  
RCOK
;

386 
	}
}

388 
rc_t


389 
	gsmthªad_u£r_t
::
	$do_öô
()

391 
cout
 << "-i: Inôülizê" << 
ídl
;

394 
devid_t
 
devid
;

395 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


396 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

397 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

399 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

401 
u_öt
 
vﬁ_˙t
;

402 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

404 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


405 << " vﬁumêcou¡ " << 
vﬁ_˙t


406 << " devi˚ " << 
devid


407 << 
ídl
;

411 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

412 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

413 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

416 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

417 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

419 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

420 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

424 
	`W_DO
(
	`¸óã_the_fûe
());

425 
	`W_DO
(
	`föd_fûe_öfo
());

426 
	`W_DO
(
	`demo_s‹t_°ªam
());

427  
RCOK
;

428 
	}
}

430 
rc_t


431 
	gsmthªad_u£r_t
::
	$no_öô
()

433 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

435 
devid_t
 
devid
;

436 
u_öt
 
vﬁ_˙t
;

437 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

438 i‡(
rc
.
	`is_îr‹
()) {

439 
˚º
 << "Error: couldÇot mount device: "

440 << 
_devi˚_«me
 << 
ídl
;

441 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

442 << 
ídl
;

443  
rc
;

447 
lvid_t
* 
lvid_li°
;

448 
u_öt
 
lvid_˙t
;

449 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

450 i‡(
lvid_˙t
 == 0) {

451 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

452 
	`exô
(1);

454 
_lvid
 = 
lvid_li°
[0];

455 
dñëe
 [] 
lvid_li°
;

457 
	`W_COERCE
(
	`föd_fûe_öfo
());

458 
	`W_COERCE
(
	`sˇn_the_roŸ_ödex
());

459 
	`W_DO
(
	`demo_s‹t_°ªam
());

460  
RCOK
;

461 
	}
}

463 
rc_t


464 
	gsmthªad_u£r_t
::
	$do_w‹k
()

466 i‡(
_öôülize_devi˚
Ë
	`W_DO
(
	`do_öô
());

467 
	`W_DO
(
	`no_öô
());

468  
RCOK
;

469 
	}
}

475 
w_rc_t
 
	gsmthªad_u£r_t
::
	$h™dÀ_›ti⁄s
()

477 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

478 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

479 
›ti⁄_t
* 
›t_num_ªc
 = 0;

481 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

491 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

493 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

494 if(!
_›ti⁄s
) {

495 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

496 
ídl
;

497 
ªtvÆ
 = 1;

498  
	`RC
(
fcINTERNAL
);

500 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

502 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

503 
NULL
, "device containg volume holding fileÅo scan",

504 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

505 
›t_devi˚_«me
));

507 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

509 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

510 
›t_devi˚_quŸa
));

513 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

515 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

516 
›t_num_ªc
));

519 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

521 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

523 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

524 i‡(
rc
.
	`is_îr‹
()) {

525 
	`ußge
(
›ti⁄s
);

526 
ªtvÆ
 = 1;

527  
rc
;

529 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

532 
›ti⁄
;

533 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hi")) != -1) {

534 
›ti⁄
) {

536 
_öôülize_devi˚
 = 
åue
;

540 
	`ußge
(
›ti⁄s
);

544 
	`ußge
(
›ti⁄s
);

545 
ªtvÆ
 = 1;

546  
	`RC
(
fcNOTIMPLEMENTED
);

551 
cout
 << "Checking forÑequired options...";

553 
w_o°r°ªam
 
îr_°ªam
;

554 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

555 i‡(
rc
.
	`is_îr‹
()) {

556 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

557 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

558  
rc
;

560 
cout
 << "OK " << 
ídl
;

564 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

565 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

566 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

568  
RCOK
;

569 
	}
}

571 
	gsmthªad_u£r_t
::
	$run
()

573 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

574 if(
rc
.
	`is_îr‹
()) {

575 
ªtvÆ
 = 1;

580 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

581 
ssm
 = 
√w
 
	`ss_m
();

582 i‡(!
ssm
) {

583 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

584 
ªtvÆ
 = 1;

588 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

590 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

591 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

592 
_ªc_size
 = 
c⁄fig_öfo
.
max_smÆl_ªc
;

596 
rc
 = 
	`do_w‹k
();

598 i‡(
rc
.
	`is_îr‹
()) {

599 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

600 
˚º
 << 
rc
 << 
ídl
;

601 
dñëe
 
ssm
;

602 
rc
 = 
RCOK
;

604 
ªtvÆ
 = 1;

605 if(
rc
.
	`is_îr‹
())

606 
	`W_COERCE
(
rc
);

612 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

613 
dñëe
 
ssm
;

615 
cout
 << "Föished!" << 
ídl
;

618 
	}
}

622 
	$maö
(
¨gc
, * 
¨gv
[])

624 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

625 i‡(!
smtu
)

626 
	`W_FATAL
(
fcOUTOFMEMORY
);

628 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

629 if(
e
.
	`is_îr‹
()) {

630 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

633 
e
 = 
smtu
->
	`joö
();

634 if(
e
.
	`is_îr‹
()) {

635 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

639 
rv
 = 
smtu
->
ªtvÆ
;

640 
dñëe
 
smtu
;

642  
rv
;

643 
	}
}

	@src/sm/tests/startstop.cpp

34 
	~"sm_vas.h
"

42 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

43 
¨gc
;

44 **
	m¨gv
;

45 
	mpublic
:

46 
ªtvÆ
;

48 
	$smthªad_u£r_t
(
ac
, **
av
)

49 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

50 
	`¨gc
(
ac
), 
	`¨gv
(
av
), 
	$ªtvÆ
(0) { }

51 ~
	$smthªad_u£r_t
(Ë{
	}
}

52 
	$run
() {

53 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

54 
ss_m
* 
ssm
 = 
√w
 
	`ss_m
();

55 i‡(!
ssm
) {

56 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

57 
ªtvÆ
 = 1;

67 
dñëe
 
ssm
;

68 
ssm
 = 
NULL
;

69 
	}
}

74 
	$maö
(
¨gc
, * 
¨gv
[])

79 
›ti⁄_group_t
 
	`›ti⁄s
(3);

80 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
("startstop"));

81 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
("server"));

82 
	`W_COERCE
(
›ti⁄s
.
	`add_˛ass_Àvñ
(
¨gv
[0]));

85 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

93 
w_o°r°ªam
 
îr_°ªam
;

94 c⁄° * 
›t_fûe
 = "EXAMPLE_SHORECONFIG";

95 
›ti⁄_fûe_sˇn_t
 
	`›t_sˇn
(
›t_fûe
, &
›ti⁄s
);

99 
w_rc_t
 
rc
 = 
›t_sˇn
.
	`sˇn
(
åue
 , 
îr_°ªam
,Årue);

100 i‡(
rc
.
	`is_îr‹
()) {

101 
˚º
 << "Eº‹ i¿ªadög o±i⁄ fûe: " << 
›t_fûe
 << 
ídl
;

102 
˚º
 << "\t" << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

108 
w_o°r°ªam
 
îr_°ªam
;

109 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

110 i‡(
rc
.
	`is_îr‹
()) {

111 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

112 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

118 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

119 i‡(!
smtu
)

120 
	`W_FATAL
(
fcOUTOFMEMORY
);

122 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

123 if(
e
.
	`is_îr‹
()) {

124 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

127 
e
 = 
smtu
->
	`joö
();

128 if(
e
.
	`is_îr‹
()) {

129 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

132 
rv
 = 
smtu
->
ªtvÆ
;

133 
dñëe
 
smtu
;

134  
rv
;

135 
	}
}

	@src/sm/tests/stopwatch.h

24 #i‚de‡
__UTIL_STOPWATCH_H


25 
	#__UTIL_STOPWATCH_H


	)

27 
	~<sys/time.h
>

34 ˛as†
	c°›w©ch_t
 {

35 
	m¥iv©e
:

36 
timevÆ
 
tv
;

37 
	mm¨k
;

38 
	mpublic
:

39 
	$°›w©ch_t
() {

40 
	`ª£t
();

42 
	$time_us
() {

43 
ﬁd_m¨k
 = 
m¨k
;

44 
	`ª£t
();

45  
m¨k
 - 
ﬁd_m¨k
;

46 
	}
}

47 
	$time_ms
() {

48  (()(
	`time_us
()*1e-3));

49 
	}
}

50 
	$time
() {

51  (()(
	`time_us
()*1e-6));

52 
	}
}

53 
	$now
() {

54 
	`gëtimeofday
(&
tv
, 
NULL
);

55  
tv
.
tv_u£c
 +Åv.
tv_£c
*1000000ll;

56 
	}
}

57 
	$ª£t
() {

58 
m¨k
 = 
	`now
();

59 
	}
}

	@src/sm/tests/vtable_example.cpp

30 
	~"w_deföes.h
"

39 
	~<w_°ªam.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<ˇs£π
>

42 
	~"sm_vas.h
"

43 
	~"w_gë›t.h
"

44 
ss_m
* 
	gssm
 = 0;

47 
w_rc_t
 
	trc_t
;

50 
w_rc_t
 
öô_c⁄fig_›ti⁄s
(
›ti⁄_group_t
& 
›ti⁄s
,

51 c⁄° * 
¥og_ty≥
,

52 & 
¨gc
, ** 
¨gv
);

55 
	sfûe_öfo_t
 {

56 c⁄° * 
	mkey
;

57 
°id_t
 
	mfid
;

58 
rid_t
 
	mfú°_rid
;

59 
	mnum_ªc
;

60 
	mªc_size
;

62 c⁄° * 
	gfûe_öfo_t
::
key
 = "SCANFILE";

64 
	go°ªam
 &

65 
	g›î©‹
 << (
	go°ªam
 &
	go
, c⁄° 
	gfûe_öfo_t
 &
	göfo
)

67 
	go
 << "key " << 
	göfo
.
	gkey


68 << " fid " << 
	göfo
.
	gfid


69 << " fú°_rid " << 
	göfo
.
	gfú°_rid


70 << "Çum_ª¯" << 
	göfo
.
	gnum_ªc


71 << "Ñec_sizê" << 
	göfo
.
	gªc_size
 ;

72  
	go
;

76 
	gsmÀvñ_0
::
	tsmksize_t
 smksize_t;

81 
	$ußge
(
›ti⁄_group_t
& 
›ti⁄s
)

83 
˚º
 << "Ußge: cª©e_ª¯[-h] [-i] [›ti⁄s]" << 
ídl
;

84 
˚º
 << " -òöôülizêdevi˚/vﬁumê™d cª©êfûêo‡ªc‹ds" << 
ídl
;

85 
˚º
 << "VÆid o±i⁄†¨e: " << 
ídl
;

86 
›ti⁄s
.
	`¥öt_ußge
(
åue
, 
˚º
);

87 
	}
}

90 ˛as†
	csmthªad_u£r_t
 : 
public
 
smthªad_t
 {

91 
_¨gc
;

92 **
	m_¨gv
;

94 c⁄° *
	m_devi˚_«me
;

95 
smsize_t
 
	m_quŸa
;

96 
	m_num_ªc
;

97 
smsize_t
 
	m_ªc_size
;

98 
lvid_t
 
	m_lvid
;

99 
rid_t
 
	m_°¨t_rid
;

100 
°id_t
 
	m_fid
;

101 
boﬁ
 
	m_öôülize_devi˚
;

102 
›ti⁄_group_t
* 
	m_›ti⁄s
;

103 
vid_t
 
	m_vid
;

104 
	mpublic
:

105 
ªtvÆ
;

107 
	$smthªad_u£r_t
(
ac
, **
av
)

108 : 
	`smthªad_t
(
t_ªguœr
, "smthread_user_t"),

109 
	`_¨gc
(
ac
), 
	`_¨gv
(
av
),

110 
	`_devi˚_«me
(
NULL
),

111 
	`_quŸa
(0),

112 
	`_num_ªc
(0),

113 
	`_ªc_size
(0),

114 
	`_öôülize_devi˚
(
Ál£
),

115 
	`_›ti⁄s
(
NULL
),

116 
	`_vid
(1),

117 
	$ªtvÆ
(0) { }

119 ~
	$smthªad_u£r_t
(Ë{ if(
_›ti⁄s
Ë
dñëe
 _›ti⁄s; 
	}
}

121 
run
();

124 
w_rc_t
 
h™dÀ_›ti⁄s
();

125 
w_rc_t
 
föd_fûe_öfo
();

126 
w_rc_t
 
¸óã_the_fûe
();

127 
w_rc_t
 
sˇn_the_fûe
();

128 
w_rc_t
 
sˇn_the_roŸ_ödex
();

129 
w_rc_t
 
do_w‹k
();

130 
w_rc_t
 
do_öô
();

131 
w_rc_t
 
no_öô
();

132 
w_rc_t
 
vèbÀ_locks
();

133 
w_rc_t
 
vèbÀ_thªads
();

134 
w_rc_t
 
vèbÀ_x˘s
();

141 
w_rc_t


142 
	gsmthªad_u£r_t
::
	$föd_fûe_öfo
()

144 
fûe_öfo_t
 
öfo
;

145 
	`W_DO
(
ssm
->
	`begö_x˘
());

147 
boﬁ
 
found
;

148 
°id_t
 
_roŸ_iid
;

149 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

151 
smsize_t
 
öfo_Àn
 = (
öfo
);

152 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

153 
	`W_DO
(
ss_m
::
	`föd_assoc
(
_roŸ_iid
,

154 
key_vec_tmp
,

155 &
öfo
, 
öfo_Àn
, 
found
));

156 i‡(!
found
) {

157 
˚º
 << "Nÿfûêöf‹m©i⁄ found" <<
ídl
;

158  
	`RC
(
fcASSERT
);

160 
˚º
 << " foundássoc "

161 << 
fûe_öfo_t
::
key
 << " --> " << 
öfo
 << 
ídl
;

164 
	`W_DO
(
ssm
->
	`commô_x˘
());

166 
_°¨t_rid
 = 
öfo
.
fú°_rid
;

167 
_fid
 = 
öfo
.
fid
;

168 
_ªc_size
 = 
öfo
.
ªc_size
;

169 
_num_ªc
 = 
öfo
.
num_ªc
;

170  
RCOK
;

171 
	}
}

182 
rc_t


183 
	gsmthªad_u£r_t
::
	$¸óã_the_fûe
()

185 
fûe_öfo_t
 
öfo
;

189 
cout
 << "Cª©ögá fûêwôh " << 
_num_ªc


190 << "Ñec‹d†o‡sizê" << 
_ªc_size
 << 
ídl
;

191 
	`W_DO
(
ssm
->
	`begö_x˘
());

194 
	`W_DO
(
ssm
->
	`¸óã_fûe
(
_vid
, 
öfo
.
fid
, 
smÀvñ_3
::
t_ªguœr
));

195 
rid_t
 
rid
;

197 
_ªc_size
 -
	`Æign
(());

202 * 
dummy
 = 
√w
 [
_ªc_size
];

203 
	`mem£t
(
dummy
, '\0', 
_ªc_size
);

204 
vec_t
 
	`d©a
(
dummy
, 
_ªc_size
);

206 
j
=0; j < 
_num_ªc
; j++)

209 
w_o°r°ªam
 
	`o
(
dummy
, 
_ªc_size
);

210 
o
 << "Rec‹dÇumbî " << 
j
 << 
íds
;

211 
	`w_as£π1
(
o
.
	`c_°r
(Ë=
dummy
);

214 
i
 = 
j
;

215 c⁄° 
vec_t
 
	`hdr
(&
i
, (i));

216 
	`W_COERCE
(
ssm
->
	`¸óã_ªc
(
öfo
.
fid
, 
hdr
,

217 
_ªc_size
, 
d©a
, 
rid
));

218 i‡(
j
 == 0) {

219 
öfo
.
fú°_rid
 = 
rid
;

222 
cout
 << "Cª©edáŒ. Fú°Ñid " << 
öfo
.
fú°_rid
 << 
ídl
;

223 
dñëe
 [] 
dummy
;

224 
öfo
.
num_ªc
 = 
_num_ªc
;

225 
öfo
.
ªc_size
 = 
_ªc_size
;

229 
°id_t
 
_roŸ_iid
;

230 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

232 c⁄° 
vec_t
 
	`key_vec_tmp
(
fûe_öfo_t
::
key
, 
	`°æí
(file_info_t::key));

233 c⁄° 
vec_t
 
	`öfo_vec_tmp
(&
öfo
, (info));

234 
	`W_DO
(
ss_m
::
	`¸óã_assoc
(
_roŸ_iid
,

235 
key_vec_tmp
,

236 
öfo_vec_tmp
));

237 
	`W_DO
(
	`vèbÀ_locks
());

238 
	`W_DO
(
	`vèbÀ_x˘s
());

239 
	`W_DO
(
	`vèbÀ_thªads
());

241 
	`W_DO
(
ssm
->
	`commô_x˘
());

242  
RCOK
;

243 
	}
}

245 
rc_t


246 
	gsmthªad_u£r_t
::
	$sˇn_the_roŸ_ödex
()

248 
	`W_DO
(
ssm
->
	`begö_x˘
());

249 
°id_t
 
_roŸ_iid
;

250 
	`W_DO
(
ss_m
::
	`vﬁ_roŸ_ödex
(
_vid
, 
_roŸ_iid
));

251 
cout
 << "Sˇ¬ög index " << 
_roŸ_iid
 << 
ídl
;

252 
sˇn_ödex_i
 
	`sˇn
(
_roŸ_iid
,

253 
sˇn_ödex_i
::
ge
, 
vec_t
::
√g_öf
,

254 
sˇn_ödex_i
::
À
, 
vec_t
::
pos_öf
, 
Ál£
,

255 
ss_m
::
t_cc_kvl
);

256 
boﬁ
 
	`eof
(
Ál£
);

257 
	`i
(0);

258 
smsize_t
 
	`kÀn
(0);

259 
smsize_t
 
	`ñí
(0);

260 
	#MAXKEYSIZE
 100

	)

261 * 
keybuf
[
MAXKEYSIZE
];

262 
fûe_öfo_t
 
öfo
;

265 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
eof
);

266 if(
rc
.
	`is_îr‹
()) {

267 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

268 
ªtvÆ
 = 
rc
.
	`îr_num
();

269  
rc
;

271 if(
eof
) ;

274 
	`W_DO
(
sˇn
.
	`cuº
(
NULL
, 
kÀn
, NULL, 
ñí
));

276 
vec_t
 
	`key
(
keybuf
, 
kÀn
);

277 
vec_t
 
	`ñem
(&
öfo
, 
ñí
);

279 
	`W_DO
(
sˇn
.
	`cuº
(&
key
, 
kÀn
, &
ñem
, 
ñí
));

281 
cout
 << "Key " << 
keybuf
 << 
ídl
;

282 
cout
 << "Value "

283 << " { fid " << 
öfo
.
fid


284 << " fú°_rid " << 
öfo
.
fú°_rid


285 << " #ª¯" << 
öfo
.
num_ªc


286 << "Ñe¯sizê" << 
öfo
.
ªc_size
 << " }"

287 << 
ídl
;

288 
i
++;

289 } !
eof
);

290 
	`W_DO
(
ssm
->
	`commô_x˘
());

291  
RCOK
;

292 
	}
}

294 
rc_t


295 
	gsmthªad_u£r_t
::
	$sˇn_the_fûe
()

297 
cout
 << "Sˇ¬ög fûê" << 
_fid
 << 
ídl
;

298 
	`W_DO
(
ssm
->
	`begö_x˘
());

300 
sˇn_fûe_i
 
	`sˇn
(
_fid
);

301 
pö_i
* 
	`curs‹
(
NULL
);

302 
boﬁ
 
	`eof
(
Ál£
);

303 
	`i
(0);

306 
w_rc_t
 
rc
 = 
sˇn
.
	`√xt
(
curs‹
, 0, 
eof
);

307 if(
rc
.
	`is_îr‹
()) {

308 
˚º
 << "Eº‹ gëtögÇext: " << 
rc
 << 
ídl
;

309 
ªtvÆ
 = 
rc
.
	`îr_num
();

310  
rc
;

312 if(
eof
) ;

314 
vec_t
 
	`hódî
 (
curs‹
->
	`hdr
(), curs‹->
	`hdr_size
());

315 
hdrc⁄ã¡s
;

316 
hódî
.
	`c›y_to
(&
hdrc⁄ã¡s
, (hdrcontents));

318 
	`w_as£π1
(
curs‹
->
	`body_size
(Ë=
_ªc_size
);

319 
i
++;

320 } !
eof
);

321 
	`w_as£π1
(
i
 =
_num_ªc
);

323 
	`W_DO
(
	`vèbÀ_locks
());

324 
	`W_DO
(
	`vèbÀ_x˘s
());

325 
	`W_DO
(
	`vèbÀ_thªads
());

327 
	`W_DO
(
ssm
->
	`commô_x˘
());

328  
RCOK
;

329 
	}
}

331 
rc_t


332 
	gsmthªad_u£r_t
::
	$do_öô
()

334 
cout
 << "-i: Inôülizê" << 
ídl
;

337 
devid_t
 
devid
;

338 
cout
 << "F‹m©tög devi˚: " << 
_devi˚_«me


339 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

340 
	`W_DO
(
ssm
->
	`f‹m©_dev
(
_devi˚_«me
, 
_quŸa
, 
åue
));

342 
cout
 << "Mou¡ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

344 
u_öt
 
vﬁ_˙t
;

345 
	`W_DO
(
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
));

347 
cout
 << "Mou¡ed devi˚: " << 
_devi˚_«me


348 << " vﬁumêcou¡ " << 
vﬁ_˙t


349 << " devi˚ " << 
devid


350 << 
ídl
;

354 
cout
 << "Gíî©ögÇewÜvid: " << 
ídl
;

355 
	`W_DO
(
ssm
->
	`gíî©e_√w_lvid
(
_lvid
));

356 
cout
 << "Gíî©edÜvid " << 
_lvid
 << 
ídl
;

359 
cout
 << "Cª©ögáÇew vﬁumê⁄Åhêdevi˚" << 
ídl
;

360 
cout
 << " wôhá " << 
_quŸa
 << "KB quŸ®..." << 
ídl
;

362 
	`W_DO
(
ssm
->
	`¸óã_vﬁ
(
_devi˚_«me
, 
_lvid
, 
_quŸa
, 
Ál£
, 
_vid
));

363 
cout
 << " wôhÜoˇ»h™dÀ’hy†vﬁidË" << 
_vid
 << 
ídl
;

367 
	`W_DO
(
	`¸óã_the_fûe
());

368  
RCOK
;

369 
	}
}

371 
rc_t


372 
	gsmthªad_u£r_t
::
	$no_öô
()

374 
cout
 << "UsögáÃódy-exi°ög devi˚: " << 
_devi˚_«me
 << 
ídl
;

376 
devid_t
 
devid
;

377 
u_öt
 
vﬁ_˙t
;

378 
w_rc_t
 
rc
 = 
ssm
->
	`mou¡_dev
(
_devi˚_«me
, 
vﬁ_˙t
, 
devid
);

379 i‡(
rc
.
	`is_îr‹
()) {

380 
˚º
 << "Error: couldÇot mount device: "

381 << 
_devi˚_«me
 << 
ídl
;

382 
˚º
 << " Did you forgetÅoÑunÅhe server with -i?"

383 << 
ídl
;

384  
rc
;

388 
lvid_t
* 
lvid_li°
;

389 
u_öt
 
lvid_˙t
;

390 
	`W_DO
(
ssm
->
	`li°_vﬁumes
(
_devi˚_«me
, 
lvid_li°
, 
lvid_˙t
));

391 i‡(
lvid_˙t
 == 0) {

392 
˚º
 << "Eº‹, devi˚ ha†nÿvﬁumes" << 
ídl
;

393 
	`exô
(1);

395 
_lvid
 = 
lvid_li°
[0];

396 
dñëe
 [] 
lvid_li°
;

398 
	`W_COERCE
(
	`föd_fûe_öfo
());

399 
	`W_COERCE
(
	`sˇn_the_roŸ_ödex
());

400 
	`W_DO
(
	`sˇn_the_fûe
());

401  
RCOK
;

402 
	}
}

404 
rc_t


405 
	gsmthªad_u£r_t
::
	$do_w‹k
()

407 i‡(
_öôülize_devi˚
Ë
	`W_DO
(
	`do_öô
());

408 
	`W_DO
(
	`no_öô
());

410  
RCOK
;

411 
	}
}

417 
w_rc_t
 
	gsmthªad_u£r_t
::
	$h™dÀ_›ti⁄s
()

419 
›ti⁄_t
* 
›t_devi˚_«me
 = 0;

420 
›ti⁄_t
* 
›t_devi˚_quŸa
 = 0;

421 
›ti⁄_t
* 
›t_num_ªc
 = 0;

423 
cout
 << "Pro˚ssög c⁄figuøti⁄ o±i⁄†..." << 
ídl
;

433 c⁄° 
›ti⁄_Àvñ_˙t
 = 3;

435 
_›ti⁄s
 = 
√w
 
	`›ti⁄_group_t
 (
›ti⁄_Àvñ_˙t
);

436 if(!
_›ti⁄s
) {

437 
˚º
 << "Out of memory: couldÇotállocate from heap." <<

438 
ídl
;

439 
ªtvÆ
 = 1;

440  
	`RC
(
fcINTERNAL
);

442 
›ti⁄_group_t
 &
	`›ti⁄s
(*
_›ti⁄s
);

444 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_name", "device/fileÇame",

445 
NULL
, "device containg volume holding fileÅo scan",

446 
åue
, 
›ti⁄_t
::
£t_vÆue_ch¨°r
,

447 
›t_devi˚_«me
));

449 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("device_quota", "# > 1000",

451 
Ál£
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

452 
›t_devi˚_quŸa
));

455 
	`W_COERCE
(
›ti⁄s
.
	`add_›ti⁄
("num_rec", "# > 0",

457 
åue
, 
›ti⁄_t
::
£t_vÆue_l⁄g
,

458 
›t_num_ªc
));

461 
	`W_COERCE
(
ss_m
::
	`£tup_›ti⁄s
(&
›ti⁄s
));

463 
cout
 << "Födög c⁄figuøti⁄ o±i⁄ sëtögs." << 
ídl
;

465 
w_rc_t
 
rc
 = 
	`öô_c⁄fig_›ti⁄s
(
›ti⁄s
, "£rvî", 
_¨gc
, 
_¨gv
);

466 i‡(
rc
.
	`is_îr‹
()) {

467 
	`ußge
(
›ti⁄s
);

468 
ªtvÆ
 = 1;

469  
rc
;

471 
cout
 << "Pro˚ssög comm™dÜöe." << 
ídl
;

474 
›ti⁄
;

475 (
›ti⁄
 = 
	`gë›t
(
_¨gc
, 
_¨gv
, "hi")) != -1) {

476 
›ti⁄
) {

478 
_öôülize_devi˚
 = 
åue
;

482 
	`ußge
(
›ti⁄s
);

486 
	`ußge
(
›ti⁄s
);

487 
ªtvÆ
 = 1;

488  
	`RC
(
fcNOTIMPLEMENTED
);

493 
cout
 << "Checking forÑequired options...";

495 
w_o°r°ªam
 
îr_°ªam
;

496 
w_rc_t
 
rc
 = 
›ti⁄s
.
	`check_ªquúed
(&
îr_°ªam
);

497 i‡(
rc
.
	`is_îr‹
()) {

498 
˚º
 << "The£Ñequúed o±i⁄†¨ênŸ së:" << 
ídl
;

499 
˚º
 << 
îr_°ªam
.
	`c_°r
(Ë<< 
ídl
;

500  
rc
;

502 
cout
 << "OK " << 
ídl
;

506 
_devi˚_«me
 = 
›t_devi˚_«me
->
	`vÆue
();

507 
_quŸa
 = 
	`°πﬁ
(
›t_devi˚_quŸa
->
	`vÆue
(), 0, 0);

508 
_num_ªc
 = 
	`°πﬁ
(
›t_num_ªc
->
	`vÆue
(), 0, 0);

510  
RCOK
;

511 
	}
}

513 
	gsmthªad_u£r_t
::
	$run
()

515 
w_rc_t
 
rc
 = 
	`h™dÀ_›ti⁄s
();

516 if(
rc
.
	`is_îr‹
()) {

517 
ªtvÆ
 = 1;

522 
cout
 << "Sèπög SSMándÖîf‹mögÑecovîy ..." << 
ídl
;

523 
ssm
 = 
√w
 
	`ss_m
();

524 i‡(!
ssm
) {

525 
˚º
 << "Eº‹: Ouào‡mem‹y f‹ ss_m" << 
ídl
;

526 
ªtvÆ
 = 1;

530 
cout
 << "Gëtög SSM c⁄fig infÿf‹Ñec‹d sizê..." << 
ídl
;

532 
sm_c⁄fig_öfo_t
 
c⁄fig_öfo
;

533 
	`W_COERCE
(
ss_m
::
	`c⁄fig_öfo
(
c⁄fig_öfo
));

534 
_ªc_size
 = 
c⁄fig_öfo
.
max_smÆl_ªc
;

538 
rc
 = 
	`do_w‹k
();

540 i‡(
rc
.
	`is_îr‹
()) {

541 
˚º
 << "CouldÇŸ së u∞devi˚/vﬁumêduêto: " << 
ídl
;

542 
˚º
 << 
rc
 << 
ídl
;

543 
dñëe
 
ssm
;

544 
rc
 = 
RCOK
;

546 
ªtvÆ
 = 1;

547 if(
rc
.
	`is_îr‹
())

548 
	`W_COERCE
(
rc
);

554 
cout
 << "\nShuâög dow¿SSM ..." << 
ídl
;

555 
dñëe
 
ssm
;

557 
cout
 << "Föished!" << 
ídl
;

560 
	}
}

562 
w_rc_t


563 
	gsmthªad_u£r_t
::
	$vèbÀ_locks
()

565 
vèbÀ_t
 
vt
;

566 
	`W_DO
(
ss_m
::
	`lock_cﬁÀ˘
(
vt
));

567 
w_o°r°ªam
 
o
;

568 
vt
.
›î©‹
<<(
o
);

569 
	`Ârötf
(
°dîr
, "Lock†%s\n", 
o
.
	`c_°r
());

570  
RCOK
;

571 
	}
}

573 
w_rc_t


574 
	gsmthªad_u£r_t
::
	$vèbÀ_x˘s
()

576 
vèbÀ_t
 
vt
;

577 
	`W_DO
(
ss_m
::
	`x˘_cﬁÀ˘
(
vt
));

578 
w_o°r°ªam
 
o
;

579 
vt
.
›î©‹
<<(
o
);

580 
	`Ârötf
(
°dîr
, "Tønß˘i⁄†%s\n", 
o
.
	`c_°r
());

581  
RCOK
;

582 
	}
}

584 
w_rc_t


585 
	gsmthªad_u£r_t
::
	$vèbÀ_thªads
()

587 
vèbÀ_t
 
vt
;

588 
	`W_DO
(
ss_m
::
	`thªad_cﬁÀ˘
(
vt
));

589 
w_o°r°ªam
 
o
;

590 
vt
.
›î©‹
<<(
o
);

591 
	`Ârötf
(
°dîr
, "Tønß˘i⁄†%s\n", 
o
.
	`c_°r
());

592  
RCOK
;

593 
	}
}

598 
	$maö
(
¨gc
, * 
¨gv
[])

600 
smthªad_u£r_t
 *
smtu
 = 
√w
 
	`smthªad_u£r_t
(
¨gc
, 
¨gv
);

601 i‡(!
smtu
)

602 
	`W_FATAL
(
fcOUTOFMEMORY
);

604 
w_rc_t
 
e
 = 
smtu
->
	`f‹k
();

605 if(
e
.
	`is_îr‹
()) {

606 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

609 
e
 = 
smtu
->
	`joö
();

610 if(
e
.
	`is_îr‹
()) {

611 
˚º
 << "îr‹ f‹kögÅhªad: " << 
e
 <<
ídl
;

615 
rv
 = 
smtu
->
ªtvÆ
;

616 
dñëe
 
smtu
;

618  
rv
;

619 
	}
}

	@src/sm/undo_gen.cpp

31 
	~"w_deföes.h
"

36 
	gt_commít
 :

37 ((
commít_log
 *Ë
this
)->
undo
(
∑ge
);

39 
	gt_com≥nßã
 :

40 
W_FATAL
(
eINTERNAL
);

42 
	gt_skù
 :

43 
W_FATAL
(
eINTERNAL
);

45 
	gt_chk±_begö
 :

46 
W_FATAL
(
eINTERNAL
);

48 
	gt_chk±_bf_èb
 :

49 
W_FATAL
(
eINTERNAL
);

51 
	gt_chk±_x˘_èb
 :

52 
W_FATAL
(
eINTERNAL
);

54 
	gt_chk±_dev_èb
 :

55 
W_FATAL
(
eINTERNAL
);

57 
	gt_chk±_íd
 :

58 
W_FATAL
(
eINTERNAL
);

60 
	gt_mou¡_vﬁ
 :

61 
W_FATAL
(
eINTERNAL
);

63 
	gt_dismou¡_vﬁ
 :

64 
W_FATAL
(
eINTERNAL
);

66 
	gt_x˘_ab‹t
 :

67 
W_FATAL
(
eINTERNAL
);

69 
	gt_x˘_‰ìög_•a˚
 :

70 
W_FATAL
(
eINTERNAL
);

72 
	gt_x˘_íd
 :

73 
W_FATAL
(
eINTERNAL
);

75 
	gt_x˘_¥ï¨e_°
 :

76 
W_FATAL
(
eINTERNAL
);

78 
	gt_x˘_¥ï¨e_lk
 :

79 
W_FATAL
(
eINTERNAL
);

81 
	gt_x˘_¥ï¨e_Æk
 :

82 
W_FATAL
(
eINTERNAL
);

84 
	gt_x˘_¥ï¨e_°‹es
 :

85 
W_FATAL
(
eINTERNAL
);

87 
	gt_x˘_¥ï¨e_fi
 :

88 
W_FATAL
(
eINTERNAL
);

90 
	gt_Æloc_fûe_∑ge
 :

91 ((
Æloc_fûe_∑ge_log
 *Ë
this
)->
undo
(
∑ge
);

93 
	gt_Æloc_∑ges_ö_ext
 :

94 ((
Æloc_∑ges_ö_ext_log
 *Ë
this
)->
undo
(
∑ge
);

96 
	gt_‰ì_∑ges_ö_ext
 :

97 ((
‰ì_∑ges_ö_ext_log
 *Ë
this
)->
undo
(
∑ge
);

99 
	gt_¸óã_ext_li°
 :

100 
W_FATAL
(
eINTERNAL
);

102 
	gt_‰ì_ext_li°
 :

103 
W_FATAL
(
eINTERNAL
);

105 
	gt_£t_ext_√xt
 :

106 
W_FATAL
(
eINTERNAL
);

108 
	gt_°‹e_›î©i⁄
 :

109 ((
°‹e_›î©i⁄_log
 *Ë
this
)->
undo
(
∑ge
);

111 
	gt_∑ge_lök
 :

112 ((
∑ge_lök_log
 *Ë
this
)->
undo
(
∑ge
);

114 
	gt_∑ge_ö£π
 :

115 ((
∑ge_ö£π_log
 *Ë
this
)->
undo
(
∑ge
);

117 
	gt_∑ge_ªmove
 :

118 ((
∑ge_ªmove_log
 *Ë
this
)->
undo
(
∑ge
);

120 
	gt_∑ge_f‹m©
 :

121 ((
∑ge_f‹m©_log
 *Ë
this
)->
undo
(
∑ge
);

123 
	gt_∑ge_m¨k
 :

124 ((
∑ge_m¨k_log
 *Ë
this
)->
undo
(
∑ge
);

126 
	gt_∑ge_ª˛aim
 :

127 ((
∑ge_ª˛aim_log
 *Ë
this
)->
undo
(
∑ge
);

129 
	gt_∑ge_shi·
 :

130 ((
∑ge_shi·_log
 *Ë
this
)->
undo
(
∑ge
);

132 
	gt_∑ge_•li˚
 :

133 ((
∑ge_•li˚_log
 *Ë
this
)->
undo
(
∑ge
);

135 
	gt_∑ge_•li˚z
 :

136 ((
∑ge_•li˚z_log
 *Ë
this
)->
undo
(
∑ge
);

138 
	gt_∑ge_£t_byã
 :

139 ((
∑ge_£t_byã_log
 *Ë
this
)->
undo
(
∑ge
);

141 
	gt_∑ge_image
 :

142 
W_FATAL
(
eINTERNAL
);

144 
	gt_båì_purge
 :

145 ((
båì_purge_log
 *Ë
this
)->
undo
(
∑ge
);

147 
	gt_båì_ö£π
 :

148 ((
båì_ö£π_log
 *Ë
this
)->
undo
(
∑ge
);

150 
	gt_båì_ªmove
 :

151 ((
båì_ªmove_log
 *Ë
this
)->
undo
(
∑ge
);

153 
	gt_πªe_ö£π
 :

154 ((
πªe_ö£π_log
 *Ë
this
)->
undo
(
∑ge
);

156 
	gt_πªe_ªmove
 :

157 ((
πªe_ªmove_log
 *Ë
this
)->
undo
(
∑ge
);

	@src/sm/vol.cpp

53 
	~"w_deföes.h
"

57 
	#SM_SOURCE


	)

58 
	#VOL_C


	)

59 #ifde‡
__GNUG__


60 #¥agm®
im∂emíèti⁄


64 
	~<w_°ªam.h
>

65 
	~<sys/ty≥s.h
>

66 
	~"sm_öt_1.h
"

67 
	~<exã¡.h
>

68 
	~<vﬁ.h
>

69 
	~"sm_du_°©s.h
"

70 
	~<¸ash.h
>

71 
	~<∑ge_h.h
>

72 
	~<°‹e_œtch_m™agî.h
>

74 
	~<sm_vèbÀ_íum.h
>

75 
	~"°_îr‹_íum_gí.h
"

77 #ifde‡
EXPLICIT_TEMPLATE


78 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_t
<
	g∑ge_s
>;

79 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gexéök_t
>;

80 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	g°node_t
>;

81 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gext_log_öfo_t
>;

86 "C" 
	$vﬁ°›hîe
()

88 
	}
}

96 c⁄° 
£˘‹_size
 = 512;

105 
	gexéök_t
::
	$exéök_t
(Ë: 
	`√xt
(0), 
	`¥ev
(0), 
	`ow√r
(0),

106 
	$pbuckëm≠
(
w_ba£_t
::
uöt4_max
)

117 
	`w_as£π9
(
	`w_off£tof
(
exéök_t
, 
√xt
Ë=(
pm≠
));

120 
	`w_as£π9
((
pm≠
)/2 == ((pmap)+1)/2);

121 
	}
}

123 
ölöe
 
•a˚_buckë_t


124 
	gexéök_t
::
	$gë_∑ge_buckë
(
pgödex
) const

127 
uöt4_t
 
shi·width
 = (
pgödex
 * 
•a˚_buckë_size_ö_bôs
);

129 
	`DBG
(<<"gë_∑ge_buckë: shi·width " << 
shi·width
);

130 
	`DBG
(<<"gë_∑ge_buckë: mask " << 
•a˚_buckë_mask
);

131 
	`DBG
(<<"gë_∑ge_buckë:Öbuckëm≠ " << (
pbuckëm≠
));

133 
uöt4_t
 
ªsu…
 = (
pbuckëm≠
 >> 
shi·width
Ë& 
•a˚_buckë_mask
;

134 
	`DBG
(<<"gë_∑ge_buckë:Ñesu… " << 
ªsu…
);

136  
	`•a˚_buckë_t
(
ªsu…
);

137 
	}
}

153 
ölöe
 

154 
	gexéök_p
::
	$£t_byã
(
¶Ÿid_t
 
idx
,

155 
u_ch¨
 
bôs
, 
∑ge_p
::
logiˇl_›î©i⁄
 
›
)

160 
	`W_COERCE
(
∑ge_p
::
	`£t_byã
(
idx
 * (
exéök_t
), 
bôs
, 
›
));

161 
	}
}

164 
ölöe
 

165 
	gexéök_p
::
	$£t_byãs
(
¶Ÿid_t
 
idx
,

166 
smsize_t
 
off£t
,

167 
smsize_t
 
cou¡
,

168 c⁄° 
u_ch¨
 *
bôs
,

169 
∑ge_p
::
logiˇl_›î©i⁄
 
›


175 
smsize_t
 
i
 = 0; i < 
cou¡
; i++) {

176 
	`W_COERCE
(
∑ge_p
::
	`£t_byã
(
idx
 * (
exéök_t
Ë+ 
off£t
 + 
i
,

177 
bôs
[
i
], 
›
));

179 
	}
}

189 
rc_t


190 
	gexéök_p
::
	$f‹m©
(

191 c⁄° 
Õid_t
& 
pid
,

192 
èg_t
 
èg
,

193 
uöt4_t
 
Êags
,

194 
°‹e_Êag_t
 
°‹e_Êags
)

196 
	`w_as£π9
(
èg
 =
t_exéök_p
);

198 
exéök_t
* 
löks
 = 
√w
Éxéök_t[
max
];

199 
w_auto_dñëe_¨øy_t
<
exéök_t
> 
	`auto_dñ
(
löks
);

201 
	`mem£t
(
löks
, 0, 
max
 * (
exéök_t
) );

202 
vec_t
 
vec
;

203 
vec
.
	`put
(
löks
, 
max
 * (
exéök_t
));

206 
	`W_DO
(
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
));

207 
	`W_DO
(
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
vec
, 
Ál£
 ) );

210 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
vec
);

211  
rc
;

212 
	}
}

213 
	$MAKEPAGECODE
(
exéök_p
, 
∑ge_p
)

223 
rc_t


224 
°node_p
::
	$f‹m©
(c⁄° 
Õid_t
& 
pid
, 
èg_t
 
èg
,

225 
uöt4_t
 
Êags
, 
°‹e_Êag_t
 
°‹e_Êags
)

227 
	`w_as£π9
(
èg
 =
t_°node_p
);

229 
°node_t
* 
°node
 = 
√w
 säode_t[
max
];

230 
w_auto_dñëe_¨øy_t
<
°node_t
> 
	`auto_dñ
(
°node
);

231 
	`mem£t
(
°node
, 0, 
max
 * (
°node_t
));

233 
vec_t
 
vec
;

234 
vec
.
	`put
(
°node
, 
max
 * (
°node_t
));

237 
	`W_DO
(
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
Êags
, 
°‹e_Êags
) );

238 
	`W_DO
(
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
vec
, 
Ál£
 ) );

241 
rc_t
 
rc
 = 
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
vec
);

242  
rc
;

243 
	}
}

244 
	$MAKEPAGECODE
(
°node_p
, 
∑ge_p
)

247 
o°ªam
& 
›î©‹
<<(o°ªam &
o
, c⁄° 
exéök_t
 &
e
)

249 
o
 << "Çum_£t:" << 
e
.
	`num_£t
()

250 << " ow√r:" << 
e
.
ow√r


251 << "Öªv:" << 
e
.
¥ev


252 << "Çext:" << 
e
.
√xt
 ;

253  
o
;

254 
	}
}

308 
ölöe
 

309 
	gexéök_i
::
	$upd©e_pm≠
(
exäum_t
 
idx
,

310 c⁄° 
Pm≠
 &
pm≠
,

311 
∑ge_p
::
logiˇl_›î©i⁄
 
how
)

313 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

315 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_tË(
idx
 % 
exéök_p
::
max
);

316 
	`DBGTHRD
(<<"upd©e_pm≠Éxã¡ " << 
idx
 << "Öm≠=" << 
pm≠


317 << " how" << (
how
));

318 
_∑ge
.
	`£t_byãs
(
¶Ÿ
, 0, 
pm≠
.
	`size
(),Öm≠.
bôs
, 
how
);

319 
	}
}

325 
ölöe
 

326 
	gexéök_i
::
	$upd©e_pbuckëm≠
(
exäum_t
 
idx
,

327 
uöt4_t
 
m≠
,

328 
∑ge_p
::
logiˇl_›î©i⁄
 
how
)

331 
boﬁ
 
was_dúty
 = 
_∑ge
.
	`is_dúty
();

332 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

334 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_tË(
idx
 % 
exéök_p
::
max
);

335 
	`DBGTHRD
(<<"update_pbucketmapÉxtent "

336 << 
idx
 << " m≠=" << (
m≠
)

337 << " how" << (
how
));

338 
_∑ge
.
	`£t_byãs
(
¶Ÿ
,

339 
	`w_off£tof
(
exéök_t
, 
pbuckëm≠
), (
m≠
),

340 (
uöt1_t
 *)&
m≠
, 
how
);

353 
_∑ge
.
	`ª∑ú_ªc_l¢
(
was_dúty
, 
l¢_t
::
nuŒ
);

354 
	}
}

364 
	gexéök_i
::
	$unfix
()

366 if(
_∑ge
.
	`is_fixed
()) {

367 
_∑ge
.
	`unfix
();

369 
	}
}

378 
boﬁ


379 
	gexéök_i
::
	$⁄_ßme_∑ge
(
exäum_t
 
ext1
,Éxäum_à
ext2
) const

381 
	`w_as£π9
(
ext1
);

382 
	`w_as£π9
(
ext2
);

383  (
ext1
 / (
exéök_p
::
max
)Ë=(
ext2
 /Éxtlink_p::max);

384 
	}
}

403 
rc_t


404 
	gexéök_i
::
	$gë
(
exäum_t
 
idx
, 
exéök_t
* &
ªs
)

406 c⁄° 
exéök_t
 *
hack
 = 
ªs
;

407 
w_rc_t
 
e
 = 
	`gë
(
idx
, 
hack
);

408 
ªs
 = (
exéök_t
 *Ë
hack
;

409  
e
;

410 
	}
}

413 
Õid_t


414 
	gexéök_i
::
	$gë_pid
(
exäum_t
 
idx
) const {

415 
	`w_as£π9
(
idx
);

416 
Õid_t
 
pid
 = 
_roŸ
;

417 
pid
.
∑ge
 +
idx
 / (
exéök_p
::
max
);

418  
pid
;

419 
	}
}

421 
rc_t


422 
	gexéök_i
::
	$gë
(
exäum_t
 
idx
, c⁄° 
exéök_t
* &
ªs
)

424 
Õid_t
 
pid
 = 
	`gë_pid
(
idx
);

431 
	`W_COERCE
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

433 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_t)(
idx
%(
exéök_p
::
max
));

434 
ªs
 = &
_∑ge
.
	`gë
(
¶Ÿ
);

437 
	`w_as£π9
(
ªs
->
√xt
 !
idx
);

438  
RCOK
;

439 
	}
}

441 
rc_t


442 
	gexéök_i
::
	$gë_c›y
(
exäum_t
 
idx
, 
exéök_t
 &
ªs
)

444 c⁄° 
exéök_t
 *
x
;

445 
	`W_DO
(
	`gë
(
idx
, 
x
));

446 
ªs
 = *
x
;

447 
	`w_as£π9
(
ªs
.
√xt
 !
idx
);

448  
RCOK
;

449 
	}
}

459 
rc_t


460 
	gexéök_i
::
	$fix_EX
(
exäum_t
 
idx
)

462 
	`w_as£π9
(
idx
);

463 
Õid_t
 
pid
 = 
_roŸ
;

464 
pid
.
∑ge
 +
idx
 / (
exéök_p
::
max
);

466 
	`DBGTHRD
(<<"exéök_i::fix_EX(" << 
idx
 << ")" );

468 
	`W_COERCE
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

470  
RCOK
;

471 
	}
}

481 
rc_t


482 
	gexéök_i
::
	$put
(
exäum_t
 
idx
, c⁄° 
exéök_t
& 
e
)

484 
	`FUNC
(
exéök_i
::
put
);

486 
	`w_as£π9
(
idx
);

487 #i‡
W_DEBUG_LEVEL
 > 3

488 
Pm≠
 
pm≠
;

489 
e
.
	`gëm≠
(
pm≠
);

490 
	`DBGTHRD
(<<"abovêgëm≠ f‹Éxà" <<
idx
);

491 
	`w_as£π9
(
e
.
ow√r
 || 
pm≠
.
	`is_em±y
());

494 
Õid_t
 
pid
 = 
_roŸ
;

495 
pid
.
∑ge
 +
idx
 / (
exéök_p
::
max
);

497 
	`DBGTHRD
(<<"exéök_i::put–exäum " << 
idx
 << " )É =" << 
e
 );

498 
	`w_as£π9
(
e
.
√xt
 !
idx
);

500 
	`W_COERCE
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

502 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_t)(
idx
 % (
exéök_p
::
max
));

503 
	`DBGTHRD
(<<"exéök_i::puàöÖagê" <<
pid
 << " slŸ " << 
¶Ÿ
 );

504 
	`DBG
(<<"just beforeÉxtlink_p::put; sizeof(extlink_t)"

505 << (
exéök_t
)

506 << "Åime†idx " << 
idx


507 << " = " << 
idx
* (
exéök_t
));

508 
_∑ge
.
	`put
(
¶Ÿ
, 
e
);

510  
RCOK
;

511 
	}
}

522 
rc_t


523 
	gexéök_i
::
	$£t_pm≠_bôs
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
)

525 
	`DBGTHRD
(<<"£t_pm≠_bô†f‹Éxã¡ " << 
idx


526 << " bôs" << 
pm≠
);

527 
	`w_as£π9
(
idx
);

528 
uöt4_t
 
poff
 = 
_roŸ
.
∑ge
 + 
idx
 / 
exéök_p
::
max
;

530 
_id
.
vﬁ
 = 
_roŸ
.
	`vﬁ
();

531 
_id
.
ext
 = 
idx
;

533 
Õid_t
 
pid
 = 
_roŸ
;

534 
pid
.
∑ge
 = 
poff
;

535 
	`W_COERCE
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

536 
	`w_as£π3
–
_∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
 );

538 
	`w_as£π9
(!
pm≠
.
	`is_em±y
());

546 
	`upd©e_pm≠
(
idx
, 
pm≠
, 
∑ge_p
::
l_‹
);

547 
	`W_DO
–
	`log_Æloc_∑ges_ö_ext
(
_∑ge
, 
¢um
, 
idx
, 
pm≠
) );

549  
RCOK
;

550 
	}
}

560 
rc_t


561 
	gexéök_i
::
	$˛r_pm≠_bô
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, 
bô
)

563 
Pm≠
 
pm≠
;

564 
pm≠
.
	`£t
(
bô
);

565 
	`W_DO
–
	`˛r_pm≠_bôs
(
¢um
, 
idx
, 
pm≠
) );

567  
RCOK
;

568 
	}
}

578 
rc_t


579 
	gexéök_i
::
	$˛r_pm≠_bôs
(
¢um_t
 
¢um
, 
exäum_t
 
idx
, c⁄° 
Pm≠
& 
pm≠
)

581 
	`DBGTHRD
(<<"˛r_pm≠_bô†f‹Éxã¡ " << 
idx
 << " bôs" << 
pm≠
);

582 
	`w_as£π9
(
idx
);

583 
uöt4_t
 
poff
 = 
_roŸ
.
∑ge
 + 
idx
 / 
exéök_p
::
max
;

585 
_id
.
vﬁ
 = 
_roŸ
.
	`vﬁ
();

586 
_id
.
ext
 = 
idx
;

588 
Õid_t
 
pid
 = 
_roŸ
;

589 
pid
.
∑ge
 = 
poff
;

591 
	`W_COERCE
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

592 
	`w_as£π9
–
_∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
 );

594 
	`w_as£π9
(!
pm≠
.
	`is_em±y
());

596 
	`upd©e_pm≠
(
idx
, 
pm≠
, 
∑ge_p
::
l_nŸ
);

597 
	`W_DO
–
	`log_‰ì_∑ges_ö_ext
(
_∑ge
, 
¢um
, 
idx
, 
pm≠
) );

599  
RCOK
;

600 
	}
}

610 
rc_t


611 
	gexéök_i
::
	$£t_√xt
(
exäum_t
 
ext
,Éxäum_à
√w_√xt
, 
boﬁ
 
log_ô
)

613 
	`w_as£π9
(
ext
);

614 
	`w_as£π9
(
√w_√xt
);

615 
exéök_t
 
lök
;

618 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

619 
	`W_DO
–
	`gë_c›y
(
ext
, 
lök
) );

620 
lök
.
√xt
 = 
√w_√xt
;

621 
	`W_DO
–
	`put
(
ext
, 
lök
) );

624 i‡(
log_ô
) {

625 
	`W_DO
–
	`log_£t_ext_√xt
(
_∑ge
, 
ext
, 
√w_√xt
) );

628  
RCOK
;

629 
	}
}

645 
w_rc_t
 
	g°node_i
::
	$gë
(
¢um_t
 
idx
, c⁄° 
°node_t
 *&
°nodï
)

647 
	`w_as£π9
(
idx
);

648 
Õid_t
 
pid
 = 
_roŸ
;

649 
pid
.
∑ge
 +
idx
 / (
°node_p
::
max
);

650 
	`W_DO
–
_∑ge
.
	`fix
(
pid
, 
LATCH_SH
) );

651 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_t)(
idx
 % (
°node_p
::
max
));

652 
°nodï
 = &
_∑ge
.
	`gë
(
¶Ÿ
);

653  
RCOK
;

654 
	}
}

657 
w_rc_t
 
	g°node_i
::
	$gë
(
¢um_t
 
idx
, 
°node_t
 &
°node
)

659 c⁄° 
°node_t
 *
°
;

661 
	`W_DO
(
	`gë
(
idx
, 
°
));

663 
°node
 = *
°
;

664  
RCOK
;

665 
	}
}

674 
w_rc_t


675 
	g°node_i
::
	$put
(
¢um_t
 
idx
, c⁄° 
°node_t
& 
°node
)

677 
Õid_t
 
pid
 = 
_roŸ
;

678 
pid
.
∑ge
 +
idx
 / (
°node_p
::
max
);

679 
	`W_DO
(
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
));

680 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_tË(
idx
 % (
°node_p
::
max
));

681  
_∑ge
.
	`put
(
¶Ÿ
, 
°node
);

682 
	}
}

692 
w_rc_t


693 
	g°node_i
::
	$°‹e_›î©i⁄
(c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
)

695 
	`w_as£π9
(
∑øm
.
	`¢um
());

696 
Õid_t
 
pid
 = 
_roŸ
;

697 
pid
.
∑ge
 +
∑øm
.
	`¢um
(Ë/ (
°node_p
::
max
);

698 
	`W_DO
–
_∑ge
.
	`fix
(
pid
, 
LATCH_EX
) );

700 
°‹e_›î©i⁄_∑øm
 
	`√w_∑øm
(
∑øm
);

701 
°node_t
& 
°node
 = 
_∑ge
.
	`ôem
(
∑øm
.
	`¢um
(Ë% (
°node_p
::
max
));

703 
∑øm
.
	`›
()) {

704 
t_dñëe_°‹e
:

706 
°node
.
hód
 = 0;

707 
°node
.
eff
 = 0;

708 
°node
.
Êags
 = 
°_bad
;

709 
°node
.
dñëög
 = 
t_nŸ_dñëög_°‹e
;

712 
t_¸óã_°‹e
:

714 
	`w_as£π1
(
°node
.
hód
 == 0);

716 
°node
.
hód
 = 0;

717 
°node
.
eff
 = 
∑øm
.
	`eff
();

718 
°node
.
Êags
 = 
∑øm
.
	`√w_°‹e_Êags
();

719 
°node
.
dñëög
 = 
t_nŸ_dñëög_°‹e
;

722 
t_£t_dñëög
:

724 
	`w_as£π9
(
°node
.
dñëög
 !
∑øm
.
	`√w_dñëög_vÆue
());

725 
	`w_as£π9
(
∑øm
.
	`ﬁd_dñëög_vÆue
(Ë=
t_unknown_dñëög


726 || 
°node
.
dñëög
 =
∑øm
.
	`ﬁd_dñëög_vÆue
());

728 
√w_∑øm
.
	`£t_ﬁd_dñëög_vÆue
((
°‹e_›î©i⁄_∑øm
::
°‹e_dñëög_t
)
°node
.
dñëög
);

730 
°node
.
dñëög
 = 
∑øm
.
	`√w_dñëög_vÆue
();

733 
t_£t_°‹e_Êags
:

735 i‡(
°node
.
Êags
 =
∑øm
.
	`√w_°‹e_Êags
()) {

740 
	`DBG
(<<"store flagsálready set");

741  
RCOK
;

743 
	`w_as£π9
(
∑øm
.
	`ﬁd_°‹e_Êags
(Ë=
°_bad


744 || 
°node
.
Êags
 =
∑øm
.
	`ﬁd_°‹e_Êags
());

746 
√w_∑øm
.
	`£t_ﬁd_°‹e_Êags
(

747 (
°‹e_›î©i⁄_∑øm
::
°‹e_Êag_t
)
°node
.
Êags
);

749 
°node
.
Êags
 = 
∑øm
.
	`√w_°‹e_Êags
();

751 
	`w_as£π9
(
°node
.
Êags
 !
°_bad
);

754 
t_£t_fú°_ext
:

756 
	`w_as£π9
(
°node
.
hód
 == 0);

757 
	`w_as£π9
(
∑øm
.
	`fú°_ext
());

759 
°node
.
hód
 = 
∑øm
.
	`fú°_ext
();

764 
	`W_DO
–
	`log_°‹e_›î©i⁄
(
_∑ge
, 
√w_∑øm
) );

766  
RCOK
;

767 
	}
}

771 
	gvﬁ_t
::
ext_ˇche_t
::
	$îa£
(
ˇche
::
ôî©‹
 
pos
) {

772 
	`INC_TSTAT
(
vﬁ_ªsv_ˇche_îa£
);

773 
	`w_as£π1
(
pos
 !
	`íd
());

774 
¢um_t
 
¢um
 = 
pos
->snum;

775 
_ˇche
.
	`îa£
(
pos
);

776 if(
	`cou¡
(
¢um
Ë> 0Ë
_cou¡s
[snum]--;

777 
	}
}

780 
	gvﬁ_t
::
ext_ˇche_t
::
	$ö£π
(
¢um_t
 
¢um
, 
exäum_t
 
ext
)

782 
	`INC_TSTAT
(
vﬁ_ªsv_ˇche_ö£π
);

783 
ext_öfo
 
	`ei
(
¢um
, 
ext
);

784 
ˇche_ôî©‹
 
lo
 = 
_ˇche
.
	`lowî_bound
(
ei
);

785 
_ˇche
.
	`ö£π
(
lo
, 
ei
);

786 
_cou¡s
[
ei
.
¢um
]++;

787 #i‡
W_DEBUG_LEVEL
 > 4

788 
	`DBGTHRD
(

789 << " in£π " << 
¢um


790 << "-Éxà" << 
ext


791 << " cou¡s" << 
_cou¡s
[
¢um
]

794 
	}
}

798 
	gvﬁ_t
::
ext_ˇche_t
::
	$îa£
(
¢um_t
 
¢um
, 
exäum_t
 
ext
)

800 
	`INC_TSTAT
(
vﬁ_ªsv_ˇche_îa£
);

801 
ext_öfo
 
	`ei
(
¢um
, 
ext
);

802 &
cou¡
 = 
_cou¡s
[
¢um
];

803 
cou¡
 -
_ˇche
.
	`îa£
(
ei
);

804 
	`w_as£π1
(
cou¡
 >= 0);

805 #i‡
W_DEBUG_LEVEL
 > 4

806 
	`DBGTHRD
(

807 << "Éø£ " << 
¢um


808 << "-Éxà" << 
ext


809 << " cou¡ " << 
cou¡


812 
	}
}

815 
	gvﬁ_t
::
ext_ˇche_t
::
	$îa£_Æl
(
¢um_t
 
¢um
)

817 if(
_cou¡s
[
¢um
] > 0)

819 
°d
::
ve˘‹
<
exäum_t
> 
_tmp
;

820 
_tmp
.
	`ª£rve
(100);

821 
ˇche
::
ôî©‹
 
i
 = 
	`lowî_bound
(
¢um
) ;

822 
i
 !
	`íd
()) {

823 if(
i
->
¢um
 =¢umË
_tmp
.
	`push_back
(i->
ext
);

824 
i
 ++;

826 
j
=0; j < 
_tmp
.
	`size
(); j++)

828 
	`INC_TSTAT
(
vﬁ_ªsv_ˇche_îa£
);

829 
	`îa£
(
¢um
, 
_tmp
[
j
]);

833 
	}
}

837 
w_rc_t


838 
	gvﬁ_t
::
	$¥ime_ˇche
(
¢um_t
 
¢um
)

840 
	`INC_TSTAT
(
vﬁ_ˇche_¥imes
);

841 
exäum_t
 
ext
;

842 
°node_t
 
°node
;

844 
°node_i
 
	`°
(
_•id
);

845 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

847 
ext
 = 
°node
.
hód
;

855 c⁄° 
eff
=100;

856 
i
=0;

857  
ext
 )

859 
	`w_as£π1
(
	`_is_vÆid_ext
(
ext
));

861 
exéök_i
 
	`ei
(
_ïid
);

862 c⁄° 
exéök_t
* 
lök
;

863 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lök
));

864 
	`w_as£π1
(
lök
->
ow√r
);

867 
n‰ì
 = 
lök
->
	`num_˛r
(Ë* 
eff
/100;

868 if(
n‰ì
 > 0) {

870 if(++
i
 < 
EXT_CACHE_SIZE
Ë
	`hi°o_ext_ˇche_upd©e
(
ext
, 
¢um
);

877 
_‰ì_ext_ˇche
.
	`ö£π
(
¢um
, 
ext
);

880 
exäum_t
 
√xt
 = 
lök
->next;

881 if(
√xt
) {

882 
	`W_DO
(
ei
.
	`gë
((
ext
 = 
√xt
), 
lök
));

885 
	`∑ge_ˇche_upd©e
(
¢um
, 
ext
);

886 
ext
=0;

892 
s1
, 
s2
, 
m1
, 
m2
;

893 
_‰ì_ext_ˇche
.
	`gë_sizes
(
s1
, 
m1
, 
s2
, 
m2
 );

896 
	`Ârötf
(
°dîr
,

898 (Ë
_œ°_∑ge_ˇche
.
	`max_size
(),

899 (Ë
_œ°_∑ge_ˇche
.
	`size
());

901 
	`Ârötf
(
°dîr
,

903 
m1
, 
s1
);

904 
	`Ârötf
(
°dîr
,

906 
m2
, 
s2
);

907 
	`Ârötf
(
°dîr
,

909 
EXT_CACHE_SIZE
,

910 ()
_hi°o_ext_ˇche
.
	`size
());

912  
RCOK
;

913 
	}
}

917 
	gvﬁ_t
::
	$max_exã¡s_⁄_∑ge
()

919  
exéök_p
::
max
;

920 
	}
}

929 
rc_t


930 
	gvﬁ_t
::
	$num_‰ì_exts
(
exäum_t
& 
n‰ì
)

932 
exéök_i
 
	`ei
(
_ïid
);

933 
n‰ì
 = 0;

934 
uöt
 
i
 = 
_hdr_exts
; i < 
_num_exts
; i++) {

935 c⁄° 
exéök_t
* 
ï
;

936 
	`W_DO
(
ei
.
	`gë
(
i
, 
ï
));

937 i‡(
ï
->
ow√r
 == 0) {

938 ++
n‰ì
;

941  
RCOK
;

942 
	}
}

953 
rc_t


954 
	gvﬁ_t
::
	$num_u£d_exts
(
exäum_t
& 
nu£d
)

956 
exäum_t
 
n‰ì
;

957 
	`W_DO
–
	`num_‰ì_exts
(
n‰ì
) );

958 
nu£d
 = 
_num_exts
 - 
n‰ì
;

959 #i‡
W_DEBUG_LEVEL
 > 2

961 
exéök_i
 
	`ei
(
_ïid
);

962 
exäum_t
 
_nu£d
 = 
_hdr_exts
;

963 
uöt
 
i
 = 
_hdr_exts
; i < 
_num_exts
; i++) {

964 c⁄° 
exéök_t
* 
ï
;

965 
	`W_DO
(
ei
.
	`gë
(
i
, 
ï
));

966 i‡(
ï
->
ow√r
 != 0) {

967 ++
_nu£d
;

970 
	`w_as£π1
(
nu£d
 =
_nu£d
);

972  
RCOK
;

973 
	}
}

984 
rc_t


985 
	gvﬁ_t
::
	$sync
()

987 
smthªad_t
* 
t
 = 
	`me
();

988 
	`W_COERCE_MSG
(
t
->
	`fsync
(
_unix_fd
), << "vﬁumêid=" << 
	`vid
());

989  
RCOK
;

990 
	}
}

1003 
rc_t


1004 
	gvﬁ_t
::
	$check_øw_devi˚
(c⁄° * 
dev«me
, 
boﬁ
& 
øw
)

1006 
w_rc_t
 
e
;

1007 
fd
;

1009 
øw
 = 
Ál£
;

1013 
e
 = 
	`me
()->
	`›í
(
dev«me
, 
smthªad_t
::
OPEN_RDONLY
, 0, 
fd
);

1015 i‡(!
e
.
	`is_îr‹
()) {

1016 
e
 = 
	`me
()->
	`fi§aw
(
fd
, 
øw
);

1017 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

1020  
e
;

1021 
	}
}

1032 
rc_t


1033 
	gvﬁ_t
::
	$mou¡
(c⁄° * 
dev«me
, 
vid_t
 
vid
)

1035 i‡(
_unix_fd
 >0Ë 
	`RC
(
eALREADYMOUNTED
);

1040 
	`w_as£π1
(
	`°æí
(
dev«me
Ë< (
_dev«me
));

1041 
	`°r˝y
(
_dev«me
, 
dev«me
);

1046 
	`W_DO
(
	`check_øw_devi˚
(
dev«me
, 
_is_øw
));

1048 
w_rc_t
 
e
;

1049 
›í_Êags
 = 
smthªad_t
::
OPEN_RDWR
;

1051 *
s
 = 
	`gëív
("SM_VOL_RAW");

1052 i‡(
s
 && s[0] && 
	`©oi
(s) > 0)

1053 
›í_Êags
 |
smthªad_t
::
OPEN_RAW
;

1054 i‡(
s
 && s[0] && 
	`©oi
(s) == 0)

1055 
›í_Êags
 &~
smthªad_t
::
OPEN_RAW
;

1057 
e
 = 
	`me
()->
	`›í
(
dev«me
, 
›í_Êags
, 0666, 
_unix_fd
);

1058 i‡(
e
.
	`is_îr‹
()) {

1059 
_unix_fd
 = -1;

1060  
e
;

1066 
vﬁhdr_t
 
vhdr
;

1068 
rc_t
 
rc
 = 
	`ªad_vhdr
(
_dev«me
, 
vhdr
);

1069 i‡(
rc
.
	`is_îr‹
()) {

1070 
	`W_COERCE_MSG
(
	`me
()->
	`˛o£
(
_unix_fd
), << "vﬁumêid=" << 
vid
);

1071 
_unix_fd
 = -1;

1072  
	`RC_AUGMENT
(
rc
);

1075 i‡–
smÀvñ_0
::
log
 ) {

1078 
	`w_as£π9
(
vhdr
.
	`ext_size
(Ë=
ext_sz
);

1083 
_vid
 = 
vid
;

1084 
_hi°o_ext_ˇche
.
	`˛ór
();

1086 #i‡
W_DEBUG_LEVEL
 > 4

1087 
w_o°r°ªam_buf
 
	`sbuf
(64);

1088 
sbuf
 << "vﬁ(vid=" << (Ë
_vid
.
vﬁ
 << ")" << 
íds
;

1092 
_lvid
 = 
vhdr
.
	`lvid
();

1093 
_num_exts
 = 
vhdr
.
	`num_exts
();

1094 
_ïid
 = 
	`Õid_t
(
vid
, 0, 
vhdr
.
	`ïid
());

1095 
_•id
 = 
	`Õid_t
(
vid
, 0, 
vhdr
.
	`•id
());

1096 
_hdr_exts
 = 
vhdr
.
	`hdr_exts
();

1097 
_hdr_∑ges
 = 
vhdr
.
	`hdr_∑ges
();

1099 
_mö_‰ì_ext_num
 = 
_hdr_exts
;

1100 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

1102 
	`W_COERCE
–
bf
->
	`íabÀ_background_Êushög
(
_vid
));

1104  
RCOK
;

1105 
	}
}

1116 
rc_t


1117 
	gvﬁ_t
::
	$dismou¡
(
boﬁ
 
Êush
)

1120 
°‹e_œtches
.
	`de°roy_œtches
(
_vid
);

1122 
	`INC_TSTAT
(
vﬁ_ˇche_˛órs
);

1123 
_‰ì_ext_ˇche
.
	`shutdown
();

1128 
	`w_as£π1
(
_unix_fd
 >= 0);

1129 
	`W_COERCE_MSG
–
Êush
 ?

1130 
bf
->
	`f‹˚_vﬁume
(
_vid
, 
åue
) :

1131 
bf
->
	`disˇrd_vﬁume
(
_vid
), << "vﬁumêid=" << 
	`vid
() );

1132 
	`W_COERCE_MSG
–
bf
->
	`dißbÀ_background_Êushög
(
_vid
), << "vﬁumêid=" << 
	`vid
());

1137 
w_rc_t
 
e
;

1138 
e
 = 
	`me
()->
	`˛o£
(
_unix_fd
);

1139 i‡(
e
.
	`is_îr‹
())

1140  
e
;

1142 
_unix_fd
 = -1;

1144  
RCOK
;

1145 
	}
}

1159 
rc_t


1160 
	gvﬁ_t
::
	$check_disk
()

1162 
	`FUNC
(
vﬁ_t
::
check_disk
);

1163 
vﬁhdr_t
 
vhdr
;

1164 
	`W_DO
–
	`ªad_vhdr
(
_dev«me
, 
vhdr
));

1165 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io
 << "vol_t::check_disk()\n";

1166 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1167 << "\tvﬁid : " << 
vhdr
.
	`lvid
(Ë<< 
Êushl
;

1168 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1169 << "\äum_ext† : " << 
vhdr
.
	`num_exts
(Ë<< 
Êushl
;

1170 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1171 << "\ãxt_sizê : " << 
vhdr
.
	`ext_size
(Ë<< 
Êushl
;

1172 
smÀvñ_0
::
îæog
->
˛og
 << 
debug_¥io


1173 << "\thdr_∑ge† : " << 
vhdr
.
	`hdr_∑ges
(Ë<< 
Êushl
;

1176 
°node_i
 
	`°
(
_•id
);

1177 
exéök_i
 
	`ei
(
_ïid
);

1178 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1179 << "\t°‹ê <°©us>:Éxã¡-li°" << "." << 
ídl
;

1180 
exäum_t
 
i
 = 1; i < 
_num_exts
; i++) {

1181 
°node_t
 
°node
;

1182 
	`W_DO
(
°
.
	`gë
(
i
, 
°node
));

1183 c⁄° *
dñim
="[ ";

1184 i‡(
°node
.
hód
) {

1185 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1186 << "\t°‹ê" << 
i
 << "\àÊag†" << 
°node
.
Êags
;

1187 if(
°node
.
dñëög
) {

1188 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1191 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io


1194 c⁄° 
exéök_t
 *
lök_p
;

1195 
¢um_t
 
j
 = 
°node
.
hód
; j; ){

1196 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << 
dñim
 << 
j
;

1197 
	`W_DO
(
ei
.
	`gë
(
j
, 
lök_p
));

1198 
j
 = 
lök_p
->
√xt
;

1199 
dñim
=", ";

1201 
smÀvñ_0
::
îæog
->
˛og
 << 
öfo_¥io
 << " ]" << 
Êushl
;

1205  
RCOK
;

1206 
	}
}

1218 
rc_t


1219 
	gvﬁ_t
::
	$fú°_ext
(
¢um_t
 
¢um
, 
exäum_t
 &
ªsu…
)

1221 
°node_t
 
°node
;

1223 
°node_i
 
	`°
(
_•id
);

1224 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

1226 
ªsu…
 = 
°node
.
hód
;

1229 #i‡
W_DEBUG_LEVEL
 > 4

1230 if(
ªsu…
) {

1231 
exéök_i
 
	`ei
(
_ïid
);

1232 
exéök_t
 
lök
;

1233 
	`W_COERCE
(
ei
.
	`gë_c›y
(
ªsu…
, 
lök
));

1234 
	`w_as£π9
(
lök
.
¥ev
 == 0);

1235 
	`w_as£π9
(
lök
.
ow√r
 =
¢um
);

1238 
	`DBG
(<<"Store hasÇoÉxtents");

1241  
RCOK
;

1242 
	}
}

1254 
	gvﬁ_t
::
	$fûl_Á˘‹
(
¢um_t
 
¢um
)

1256 
°node_i
 
	`°
(
_•id
);

1257 c⁄° 
°node_t
 *
°node
;

1258 
	`W_COERCE
(
°
.
	`gë
(
¢um
, 
°node
));

1259  
°node
->
eff
;

1260 
	}
}

1276 
rc_t


1277 
	gvﬁ_t
::
	$Æloc_∑ges_ö_ext
(

1278 
Æloc_∑ge_fûãr_t
 *
fûãr
,

1279 
boﬁ
 
≠≥nd_⁄ly
,

1280 
exäum_t
 
ext
,

1281 
eff
,

1282 
¢um_t
 
¢um
,

1283 
˙t
,

1284 
Õid_t
 
pids
[],

1285 & 
Æloˇãd
,

1286 & 
ªmaöög
,

1287 
boﬁ
& 
is_œ°
,

1288 
boﬁ
 
may_ªÆloc
,

1289 
lock_mode_t
 
desúed_lock_mode


1292 
	`FUNC
(
vﬁ_t
::
Æloc_∑ges_ö_ext
);

1296 
	`w_as£π1
(
eff
 >= 0 &&Éff <= 100);

1297 
	`w_as£π1
(
	`_is_vÆid_ext
(
ext
));

1298 
	`w_as£π1
(
˙t
 > 0);

1300 
lockid_t
* 
«me
 = 0;

1302 
	`INC_TSTAT
(
Æloc_∑ge_ö_ext
);

1304 
Æloˇãd
 = 0;

1310 
extid_t
 
extid
;

1311 
extid
.
vﬁ
 = 
_vid
;

1312 
extid
.
ext
 =Éxt;

1315 
w_rc_t
 
rc
 = 
lm
->
	`lock
(
extid
, 
IX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
, 0, 0, &
«me
);

1325 if(
rc
.
	`is_îr‹
()) {

1326 
	`w_as£π1
(
Æloˇãd
 == 0);

1327 if(
rc
.
	`îr_num
(Ë=
eLOCKTIMEOUT
) {

1328 
	`INC_TSTAT
(
vﬁ_lock_nﬂŒoc
);

1329 
ªmaöög
 = 1;

1330 
is_œ°
 = 0;

1331  
RCOK
;

1333  
rc
.
	`ª£t
();

1341 
exéök_i
 
	`ei
(
_ïid
);

1342 
exéök_t
 
lök
;

1343 
exéök_t
 
bôs_Æloˇãd
;

1346 
	`W_DO
(
ei
.
	`gë_c›y
(
ext
, 
lök
));

1347 
	`w_as£π1
(
	`is_Æloc_ext_of
(
ext
,
¢um
));

1348 
	`w_as£π1
(
lök
.
ow√r
 =
¢um
);

1349 #i‡
W_DEBUG_LEVEL
 > 0

1350 
Pm≠
 
check_pm≠
;

1351 
lök
.
	`gëm≠
(
check_pm≠
);

1354 
n‰ì
 = 
lök
.
	`num_˛r
(Ë* 
eff
/100;

1355 
ªmaöög
 = 
n‰ì
;

1357 
is_œ°
 = (
lök
.
√xt
 == 0);

1359 
	`DBG
(<<"exã¡ " << 
ext
 << "Éf‡" << 
eff
 <<"Ç‰ì " << 
n‰ì
);

1361 
	`w_as£π1
(
Æloˇãd
 == 0);

1362 i‡(
n‰ì
 > 0) {

1366 i‡(
n‰ì
 > 
˙t
)Çfree = cnt;

1367 
shpid_t
 
ba£
 = 
	`ext2pid
(
ext
);

1368 
°¨t
;

1369 if(
≠≥nd_⁄ly
) {

1370 
°¨t
 = 
lök
.
	`œ°_£t
(0);

1372 
°¨t
 = -1;

1374 
i
 = 0; i < 
n‰ì
; i++, 
Æloˇãd
++) {

1376 
lock_mode_t
 
m
;

1395 ++
°¨t
;

1396 
°¨t
 = (°¨à>
ext_sz
 ? -1 : 
lök
.
	`fú°_˛r
(start));

1397 i‡(
°¨t
 < 0) ;

1399 
pids
[
i
].
_°id
 = 
	`°id_t
(
_vid
, 
¢um
);

1400 
pids
[
i
].
∑ge
 = 
ba£
 + 
°¨t
;

1420 if(
may_ªÆloc
) {

1422 
w_rc_t
 
rc
 = 
vﬁ_io_sh¨ed
::
	`io_lock_f‹˚
(
pids
[
i
], 
EX
,

1423 
t_ö°™t
, 
WAIT_IMMEDIATE
);

1424 if(
rc
.
	`is_îr‹
()){

1426 
m
 = 
EX
;

1430 
m
 = 
NL
;

1452 
	`DBG
(<<"vol_t::alloc_pages_in_ext:ÜockingÖage "

1453 << 
pids
[
i
] << " i¿modê" << (
desúed_lock_mode
));

1454 
w_rc_t
 
rc
 = 
vﬁ_io_sh¨ed
::
	`io_lock_f‹˚
(

1455 
pids
[
i
], 
desúed_lock_mode
,

1456 
t_l⁄g
, 
WAIT_IMMEDIATE
,

1457 &
m
);

1458 if(
rc
.
	`is_îr‹
()){

1460 
	`DBG
(<<"skùpög:Öri‹ mode=" << (
m
)

1461 << "rc=" <<
rc
 );

1462 
m
 = 
EX
;

1467 if(
m
 !
NL
) {

1468 
	`DBG
(<<"skùpög:Öri‹ mode=" << (
m
));

1473 
	`w_as£π1
(
m
 =
NL
);

1476 if(! 
fûãr
->
	`ac˚±
(
pids
[
i
])) {

1477 
	`w_as£π1
(
fûãr
->
	`ac˚±ed
()==
Ál£
);

1478 
fûãr
->
	`check
();

1479 
m
 = 
EX
;

1482 
	`w_as£π1
(
fûãr
->
	`ac˚±ed
()==
åue
);

1483 
fûãr
->
	`check
();

1485 } 
m
 !
NL
);

1487 i‡(
°¨t
 < 0) ;

1490 
	`DBGTHRD
–<< "áŒoˇtögÖagê" << 
pids
[
i
] );

1491 
lök
.
	`£t
(
°¨t
);

1492 
bôs_Æloˇãd
.
	`£t
(
°¨t
);

1495 i‡(
Æloˇãd
 > 0) {

1497 
Pm≠
 
tmp
;

1498 
bôs_Æloˇãd
.
	`gëm≠
(
tmp
);

1500 #i‡
W_DEBUG_LEVEL
 > 0

1501 
i
=0; i < 
tmp
.
	`size
(); i++) {

1502 if(
tmp
.
	`is_£t
(
i
)) {

1503 
	`w_as£π1
(
check_pm≠
.
	`is_˛ór
(
i
));

1505 if(
check_pm≠
.
	`is_£t
(
i
)) {

1506 
	`w_as£π1
(
tmp
.
	`is_˛ór
(
i
));

1510 
	`DBGTHRD
–<< " sëtög bô†" << 
tmp
 << " i¿exà" << 
ext


1511 << " snum " << 
¢um
);

1512 
	`W_DO
–
ei
.
	`£t_pm≠_bôs
(
¢um
, 
ext
, 
tmp
) );

1515 
«me
->
	`£t_ext_has_∑ge_Æloc
(
åue
);

1519 
	`w_as£π2
(
	`is_Æloc_ext_of
(
ext
, 
¢um
));

1521 
	`x˘
()->
	`£t_Ælo˚d
();

1522 
ªmaöög
 -
Æloˇãd
;

1524 
	`W_IFDEBUG1
(if(
Æloˇãd
 =1Ë
	`w_as£π1
(
fûãr
->
	`ac˚±ed
());)

1525  
RCOK
;

1526 
	}
}

1575 
rc_t


1576 
	gvﬁ_t
::
	$ªcovî_∑ges_ö_ext
(
¢um_t
 
¢um
, 
exäum_t
 
ext
, c⁄° 
Pm≠
& 
pm≠
, 
boﬁ
 
is_Æloc
)

1578 
exéök_i
 
	`ei
(
_ïid
);

1580 
extid_t
 
extid
;

1581 
extid
.
vﬁ
 = 
_vid
;

1582 
extid
.
ext
 =Éxt;

1583 
lockid_t
* 
«me
 = 0;

1586 
	`W_DO
–
lm
->
	`lock
(
extid
, 
IX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
, 0, 0, &
«me
) );

1588 
	`DBGTHRD
(<<"ªcovî_∑ges_ö_exà" << 
ext


1589 << " m≠=" << 
pm≠


1590 << " is_Æloc=" << 
is_Æloc
);

1592 i‡(
is_Æloc
) {

1593 
	`W_COERCE
–
ei
.
	`£t_pm≠_bôs
(
¢um
, 
ext
, 
pm≠
) );

1594 i‡(
«me
)

1595 
«me
->
	`£t_ext_has_∑ge_Æloc
(
åue
);

1598 
	`W_COERCE
(
ei
.
	`˛r_pm≠_bôs
(
¢um
, 
ext
, 
pm≠
) );

1599 
exéök_t
 
lök
;

1600 
	`W_COERCE
–
ei
.
	`gë_c›y
(
ext
, 
lök
) );

1601 i‡(
«me
 && 
lök
.
	`num_£t
() == 0)

1602 
«me
->
	`£t_ext_has_∑ge_Æloc
(
Ál£
);

1605  
RCOK
;

1606 
	}
}

1617 
rc_t


1618 
	gvﬁ_t
::
	$°‹e_›î©i⁄
(c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
)

1620 
°node_i
 
	`si
(
_•id
);

1621 
	`W_DO
–
si
.
	`°‹e_›î©i⁄
(
∑øm
) );

1622  
RCOK
;

1623 
	}
}

1637 
rc_t


1638 
	gvﬁ_t
::
	$‰ì_°‹es_durög_ªcovîy
(
°‹e_dñëög_t
 
ty≥ToRecovî
)

1640 
	`w_as£π9
(
	`ö_ªcovîy
());

1642 
°node_i
 
	`si
(
_•id
);

1643 
°node_t
 
°node
;

1644 
i
 = 0;

1645 
°id_t
 
°id
;

1646 
°id
.
vﬁ
 = 
_vid
;

1648 
	`is_vÆid_°‹e
(++
i
)) {

1649 
	`W_DO
(
si
.
	`gë
(
i
, 
°node
));

1650 i‡(
°node
.
dñëög
 =
ty≥ToRecovî
) {

1651 
lock_mode_t
 
m
 = 
NL
;

1653 
°id
.
°‹e
 = 
i
;

1654 
	`W_DO
–
lm
->
	`quîy
(
°id
, 
m
) );

1655 i‡(
m
 =
NL
) {

1656 
	`W_DO
–
	`‰ì_°‹e_a·î_x˘
(
i
) );

1662  
RCOK
;

1663 
	}
}

1676 
rc_t


1677 
	gvﬁ_t
::
	$‰ì_exts_durög_ªcovîy
()

1679 
	`w_as£π9
(
	`ö_ªcovîy
());

1681 
exäum_t
 
i
 = 0;

1682 
	`_is_vÆid_ext
(++
i
)) {

1683 
¢um_t
 
_dummy
=0;

1684 
	`W_DO
–
	`‰ì_ext_a·î_x˘
(
i
, 
_dummy
) );

1687  
RCOK
;

1688 
	}
}

1698 
rc_t


1699 
	gvﬁ_t
::
	$‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
, 
boﬁ
 
check_membîshù
)

1701 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
);

1702 
off£t
 = (
pid
.
∑ge
 % 
ext_sz
);

1711 
	`W_DO
(
vﬁ_io_sh¨ed
::
	`io_lock_f‹˚
(
pid
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
));

1713 if(
check_membîshù
) {

1719 
¢um_t
 
s
 = 
pid
.
	`°‹e
();

1720 
	`w_as£π1
(
s
);

1721 i‡–! 
	`_is_vÆid_∑ge_of
(
pid
, 
s
) ) {

1722 
	`DBGTHRD
(<<"åyögÅÿ‰ì u«ŒoˇãdÖagê" << 
pid
);

1723 
	`w_as£π1
(0);

1724  
	`RC
(
eBADPID
);

1728 
extid_t
 
extid
;

1729 
extid
.
vﬁ
 = 
pid
.
_°id
.vol;

1730 
extid
.
ext
 =Éxt;

1731 
lockid_t
* 
«me
 = 0;

1733 
	`W_DO
(
lm
->
	`lock
(
extid
, 
IX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
, 0, 0, &
«me
));

1735 
exéök_i
 
	`ei
(
_ïid
);

1736 
exéök_t
 
lök
;

1737 
	`W_DO
(
ei
.
	`gë_c›y
(
ext
, 
lök
));

1738 
	`w_as£π1
(
lök
.
ow√r
 =
pid
.
	`°‹e
());

1739 
	`w_as£π1
(
lök
.
	`is_£t
(
off£t
));

1741 
	`W_DO
–
ei
.
	`˛r_pm≠_bô
(
pid
.
	`°‹e
(), 
ext
, 
off£t
) );

1742 i‡(
lök
.
	`num_£t
() == 1) {

1744 
	`DBG
(<<"‰ìögÜa°ÖagêöÉxã¡:Çamêi†now " << *
«me
);

1745 
«me
->
	`£t_ext_has_∑ge_Æloc
(
Ál£
);

1746 
	`DBG
(<<"«mêi†now " << *
«me
);

1749 
	`DBGTHRD
(<<"‰ìdÖid " <<
pid
);

1750  
RCOK
;

1751 
	}
}

1766 
rc_t


1767 
	gvﬁ_t
::
	$√xt_∑ge
(
Õid_t
& 
pid
, 
boﬁ
* 
Æloˇãd
)

1769 
	`FUNC
(
vﬁ_t
::
√xt_∑ge
);

1770 #ifde‡
W_TRACE


1771 
Õid_t
 
ßve_pid
 = 
pid
;

1773 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
);

1774 
off£t
 = (
pid
.
∑ge
 % 
ext_sz
);

1776 
exéök_i
 
	`ei
(
_ïid
);

1777 c⁄° 
exéök_t
 *
lökp
;

1778 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

1781 
	`w_as£π1
(
lökp
->
ow√r
 =
pid
.
	`°‹e
());

1782 
	`w_as£π1
(
lökp
->
	`is_£t
(
off£t
Ë|| 
Æloˇãd
);

1789 i‡(++
off£t
 >
ext_sz
) {

1790 
off£t
 = 0;

1791 i‡(
lökp
->
√xt
) {

1792 
	`W_DO
(
ei
.
	`gë
(
ext
 = 
lökp
->
√xt
,Üinkp));

1794 
pid
 = 
Õid_t
::
nuŒ
;

1795  
	`RC
(
eEOF
);

1798 } 
lökp
->
	`is_˛r
(
off£t
Ë&& !
Æloˇãd
);

1800 
pid
.
∑ge
 = 
ext
 * 
ext_sz
 + 
off£t
;

1801 #i‡
W_DEBUG_LEVEL
 > 4

1803 
Pm≠
 
pm≠
;

1804 
lökp
->
	`gëm≠
(
pm≠
);

1805 
	`DBG
(<<"öÇext_∑ge, computögáŒoˇãd,Öm≠ = " << 
pm≠
);

1808 i‡(
Æloˇãd
Ë*Æloˇãd = 
lökp
->
	`is_£t
(
off£t
);

1810 
	`DBG
(<< "√xt_∑gêa·î " << 
ßve_pid
 << " i†" << 
pid


1811 << " is-Æloˇãd " << 
lökp
->
	`is_£t
(
off£t
) );

1812  
RCOK
;

1813 
	}
}

1823 
rc_t


1824 
	gvﬁ_t
::
	$√xt_∑ge_wôh_•a˚
(
Õid_t
& 
pid
, 
•a˚_buckë_t
 
√eded
)

1826 
	`FUNC
(
vﬁ_t
::
√xt_∑ge_wôh_•a˚
);

1827 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
);

1828 
off£t
 = (
pid
.
∑ge
 % 
ext_sz
);

1830 
exéök_i
 
	`ei
(
_ïid
);

1831 c⁄° 
exéök_t
 *
lökp
;

1832 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

1835 
	`w_as£π1
(
lökp
->
ow√r
 =
pid
.
	`°‹e
());

1836 
	`w_as£π1
(
lökp
->
	`is_£t
(
off£t
));

1838 
	`DBG
(<< "FödÇexà∑gêa·î " << 
pid
 << ";Çeed bucket "

1839 << (
√eded
));

1843 
Õid_t
 
fú°_fô
 =Üpid_t::
nuŒ
;

1844 
•a˚_buckë_t
 
b
;

1846 
	`DBG
(<<"ext=" << 
ext
 << " off£à" << 
off£t
);

1847 i‡(++
off£t
 >
ext_sz
) {

1851 
off£t
 = 0;

1852 
exäum_t
 
nxt
 = 
lökp
->
√xt
;

1853 
	`DBG
(<< 
ext
 << " ->Çexà=" << 
nxt
);

1854 i‡(
nxt
) {

1855 
	`DBG
(<<"fú°_fô=" << 
fú°_fô
);

1856 if–
exéök_p
::
	`⁄_ßme_∑ge
(
ext
, 
nxt
Ë|| !
fú°_fô
.
∑ge
) {

1857 
	`W_DO
(
ei
.
	`gë
(
ext
 = 
lökp
->
√xt
,Üinkp));

1860 
pid
 = 
fú°_fô
;

1861 
	`DBG
(<< "√xàexàpg buàhavêfú° fô: " << 
pid
);

1862  
RCOK
;

1865 
	`DBG
(<< "nÿm‹êexã¡s, fú°_fô i†" << 
fú°_fô
);

1867 
pid
 = 
fú°_fô
;

1868  
fú°_fô
.
∑ge
 ? 
RCOK
 : 
	`RC
(
eEOF
);

1873 if–!
lökp
->
	`is_˛r
(
off£t
) ) {

1876 
b
 = 
lökp
->
	`gë_∑ge_buckë
(
off£t
);

1880 
	`DBG
(<<" off£à" << 
off£t
 <<

1881 " i†Æloˇãd, i¿ext.buckë=" << (
b
));

1882 if(
b
 =
√eded
){

1884 
pid
.
∑ge
 = 
ext
 * 
ext_sz
 + 
off£t
;

1885 
	`DBG
(<< "exa˘ m©ch " << 
pid
);

1886  
RCOK
;

1888 if(
b
 > 
√eded
 && !
fú°_fô
.
∑ge
) {

1889 
fú°_fô
 = 
	`Õid_t
(
pid
.
	`°id
(), 
ext
*
ext_sz
 + 
off£t
);

1890 
	`DBG
(<<"£àfú° fôÅÿ" << 
fú°_fô


1891 << " wôh buckë " << (
b
));

1893 #i‡
W_DEBUG_LEVEL
 > 5

1895 
Õid_t
 
Õid
 = 
pid
;

1896 
Õid
.
∑ge
 = 
ext
 * 
ext_sz
 + 
off£t
;

1897 
∑ge_p
 
∑ge
;

1898 
	`w_as£π9
(!
∑ge
.
	`is_fixed
());

1899 
°‹e_Êag_t
 
sf
 = 
°_bad
;

1900 
	`W_DO
–
∑ge
.
	`fix
(
Õid
, 
∑ge_p
::
t_™y_p
, 
LATCH_SH
, 0, 
sf
));

1902 
	`DBG
–<<"∑ge.ußbÀ_•a˚=" << 
∑ge
.
	`ußbÀ_•a˚
()

1903 <<"Öage.buckë=" << (
∑ge
.
	`buckë
()) );

1904 if–
∑ge
.
	`buckë
(Ë< 
b
) {

1908 
	`DBGTHRD
( << "extent bucket info is high ");

1910 if–
∑ge
.
	`buckë
(Ë> 
b
) {

1913 
smÀvñ_0
::
îæog
->
˛og
 << 
w¨nög_¥io


1923 
	`W_FATAL
(
eINTERNAL
);

1926  
	`RC
(
eINTERNAL
);

1927 
	}
}

1941 
rc_t


1942 
	gvﬁ_t
::
	$föd_‰ì_exts
(

1943 
uöt
 
˙t
,

1944 
exäum_t
 
exts
[],

1945 & 
found
,

1946 
exäum_t
 
fú°_ext
)

1948 
	`FUNC
(
vﬁ_t
::
föd_‰ì_exts
);

1949 
exéök_i
 
	`ei
(
_ïid
);

1950 
extid_t
 
extid
;

1951 
extid
.
vﬁ
 = 
_vid
;

1952 
	`DBGTHRD
(<<"föd_‰ì_exts(˙t="<<
˙t
<<", fú°_ext="<<
fú°_ext
<<")");

1958 i‡(
fú°_ext
 == 0) {

1959 
fú°_ext
 = 
_mö_‰ì_ext_num
;

1960 } if–
fú°_ext
 >
_num_exts
) {

1961  
	`RC
(
eINVALIDHINT
);

1974 
extid
.
ext
 = 
w_ba£_t
::
uöt4_max
;

1976 
boﬁ
 
Ælo˚d_mö_‰ì_ext
 = 
Ál£
;

1977 
boﬁ
 
∑s£d_zîo
 = 
Ál£
;

1978 
uöt
 
ext
 = 
fú°_ext
;

1979 
	`DBGTHRD
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num


1980 << " sèπögÜo› wôhÉxã¡ " << 
ext
);

1981 
uöt
 
i
;

1982 
i
 = 0; i < 
˙t
; ++i) {

2004 
exéök_t
 
lök
;

2005 
	`W_DO
–
ei
.
	`gë_c›y
(
ext
, 
lök
) );

2006 
	`DBG
–<< "Éxà=" << 
ext
 << ", ow√r=" << 
lök
.
ow√r


2007 << ", mytid=" << 
	`x˘
()->
	`tid
() );

2009 i‡(
ext
 =
_mö_‰ì_ext_num
) {

2010 
Ælo˚d_mö_‰ì_ext
 = 
åue
;

2013 i‡(
lök
.
ow√r
 == 0) {

2014 
extid
.
ext
 =Éxt;

2015 
lock_mode_t
 
m
 = 
NL
;

2016 
	`W_DO
–
lm
->
	`quîy
(
extid
, 
m
) );

2017 i‡(
m
 =
NL
) {

2019 
	`DBG
–<< "found " << 
ext
 );

2024 i‡(++
ext
 >
_num_exts
) {

2025 
ext
 = 
_hdr_exts
;

2026 
∑s£d_zîo
 = 
åue
;

2028 } !
∑s£d_zîo
 || 
ext
 < 
fú°_ext
);

2030 i‡(
∑s£d_zîo
 && 
ext
 >
fú°_ext
) {

2031 
found
 = 
i
;

2032 
	`DBGTHRD
( << " find_free_exts :ÑeturningÉOUTOFSPACE @Üine "

2033 << "Ñeque°ed #Éxã¡†" << 
˙t


2034 << " found #Éxã¡†" << 
i
);

2035 
	`W_RETURN_RC_MSG
(
eOUTOFSPACE
, << "vﬁumêid = " << 
_vid
);

2043 
	`W_DO
–
lm
->
	`lock
(
extid
, 
IX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
) );

2045 
	`DBG
(<<"GŸÅhêlock f‹ " << 
ext
);

2050 c⁄° 
exéök_t
 *
Õ
;

2051 
	`W_DO
(
ei
.
	`gë
(
ext
, 
Õ
));

2052 
	`w_as£π1
–! 
Õ
->
ow√r
);

2055 
exts
[
i
] = 
ext
;

2057 
found
 = 
i
;

2059 i‡(
Ælo˚d_mö_‰ì_ext
) {

2060 
exäum_t
 
√w_mö_‰ì_ext_num
 = 
exts
[
i
 - 1] + 1;

2061 i‡(
√w_mö_‰ì_ext_num
 < 
_num_exts
) {

2062 
_mö_‰ì_ext_num
 = 
√w_mö_‰ì_ext_num
;

2063 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

2065 
_mö_‰ì_ext_num
 = 
_hdr_exts
;

2066 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

2070 
	`w_as£π9
(
	`_is_vÆid_ext
(
_mö_‰ì_ext_num
));

2072  
RCOK
;

2073 
	}
}

2098 
rc_t


2099 
	gvﬁ_t
::
	$Æloc_exts
(

2100 
¢um_t
 
¢um
,

2101 
exäum_t
 
¥ev
,

2102 
˙t
,

2103 c⁄° 
exäum_t
 
exts
[])

2105 
	`FUNC
(
vﬁ_t
::
Æloc_exts
);

2107 
	`W_DO
–
	`_≠≥nd_ext_li°
(
¢um
, 
¥ev
, 
˙t
, 
exts
) );

2109 
	`SSMTEST
("extent.3");

2110 i‡(
¥ev
 == 0) {

2111 
	`DBG
–<< " fú°Éxã¡ i¿°‹ê" << 
exts
[0] );

2113 
	`W_DO
–
	`£t_°‹e_fú°_ext
(
¢um
, 
exts
[0]) );

2115 #i‡
W_DEBUG_LEVEL
 > 2

2116 
	`DBGTHRD
(

2117 << "áŒoc_ext†tÿ" << 
¢um


2118 << " c¡" << 
˙t
 << "; " );

2119 
j
=0; j < 
˙t
; j++) {

2120 
	`DBGTHRD
–<< 
exts
[
j
] << " ");

2123 
	`ADD_TSTAT
(
vﬁ_Æloc_exts
, 
˙t
);

2125  
RCOK
;

2126 
	}
}

2135 
rc_t


2136 
	gvﬁ_t
::
	$upd©e_ext_hi°o
(c⁄° 
Õid_t
& 
pid
, 
•a˚_buckë_t
 
buckë
)

2138 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

2140 
exéök_i
 
	`ei
(
_ïid
);

2141 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
.
∑ge
 );

2142 
	`w_as£π1
(
	`_is_vÆid_ext
(
ext
));

2143 
exäum_t
 
which
 = (
pid
.
∑ge
 % 
ext_sz
);

2144 
	`W_DO
(
ei
.
	`upd©e_hi°o
(
ext
, 
which
, 
buckë
));

2145  
RCOK
;

2146 
	}
}

2148 
rc_t


2149 
	gexéök_i
::
	$upd©e_hi°o
(
exäum_t
 
ext
, 
off£t
, 
•a˚_buckë_t
 
buckë
)

2151 
	`W_DO
(
	`fix_EX
(
ext
));

2153 
¶Ÿid_t
 
¶Ÿ
 = (¶Ÿid_t)(
ext
%(
exéök_p
::
max
));

2154 c⁄° 
exéök_t
* 
lök
 = &
_∑ge
.
	`gë
(
¶Ÿ
);

2156 
	`w_as£π1
(
lök
->
ow√r
);

2161 
•a˚_buckë_t
 
b
 = 
lök
->
	`gë_∑ge_buckë
(
off£t
);

2162 if(
b
 =
buckë
) {

2163 
	`INC_TSTAT
(
fm_ext_touch_n›
);

2164 
	`vﬁ°›hîe
();

2165  
RCOK
;

2169 
uöt4_t
 
m≠
 = 
lök
->
pbuckëm≠
;

2174 
	`w_as£π3
((
buckë
 & 
•a˚_buckë_mask
)==bucket);

2176 
uöt4_t
 
shi·width
 = (
off£t
 * 
•a˚_buckë_size_ö_bôs
);

2177 
uöt4_t
 
bôs
 = 
buckë
 << 
shi·width
;

2178 
uöt4_t
 
mask
 = 
•a˚_buckë_mask
 << 
shi·width
;

2180 
m≠
 &~
mask
;

2181 
m≠
 |
bôs
;

2182 
	`DBGTHRD
(<<"£t_∑ge_buckë f‹ off£t’idË" << 
off£t


2183 << "Åÿ" << (
buckë
)

2184 << " oldm≠" << (
lök
->
pbuckëm≠
)

2185 << "Çewm≠" << (
m≠
) );

2188 
	`upd©e_pbuckëm≠
(
ext
, 
m≠
, 
∑ge_p
::
l_£t
);

2189 
	`INC_TSTAT
(
fm_ext_touch
);

2191 #i‡
W_DEBUG_LEVEL
 > 4

2192 
m≠
 = 
lök
->
pbuckëm≠
;

2193 
	`DBGTHRD
(<<"a·î upd©e_pbuckëm≠, iàlook†likêthis: " << (
m≠
));

2196  
RCOK
;

2197 
	}
}

2208 
rc_t
 
	gvﬁ_t
::
	$√xt_ext
(
exäum_t
 
ext
,Éxäum_à&
ªsu…
)

2210 
exéök_i
 
	`ei
(
_ïid
);

2211 
	`w_as£π1
(
	`_is_vÆid_ext
(
ext
));

2212 c⁄° 
exéök_t
* 
lök
;

2213 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lök
));

2214 
	`w_as£π1
(
lök
->
ow√r
);

2215 
ªsu…
 = 
lök
->
√xt
;

2216  
RCOK
;

2217 
	}
}

2229 
rc_t
 
	gvﬁ_t
::
	$dump_exts
(
o°ªam
 &
o
, 
exäum_t
 
°¨t
,Éxäum_à
íd
)

2231 i‡(!
	`_is_vÆid_ext
(
°¨t
))

2232 
°¨t
 = 
_num_exts
 - 1;

2233 i‡(
°¨t
 == 0)

2234 
°¨t
 = 1;

2236 i‡(
íd
 == 0)

2237 
íd
 = 
_num_exts
 - 1;

2238 i‡(!
	`_is_vÆid_ext
(
íd
))

2239 
íd
 = 
_num_exts
 - 1;

2241 
exéök_i
 
	`ei
(
_ïid
);

2242 
exäum_t
 
i
 = 
°¨t
 / 5 * 5; i <
íd
; i++) {

2243 i‡(
i
 % 5 == 0)

2245 
	`W_FORM2
(
o
, ("%5d:", 
i
));

2248 i‡(
i
 < 
°¨t
) {

2249 
o
 << " ";

2251 c⁄° 
exéök_t
* 
lök
;

2252 
	`W_DO
–
ei
.
	`gë
(
i
, 
lök
) );

2253 
Pm≠
 
theM≠
;

2254 
lök
->
	`gëm≠
(
theM≠
);

2255 
	`W_FORM2
(
o
,("%5d<%5d %5d>", 
lök
->
ow√r
,Üök->
¥ev
,Üök->
√xt
));

2256 
o
 << 
theM≠
 << "#";

2259 i‡(
i
 % 5 == 4)

2260 
o
 << 
ídl
;

2263 i‡(
íd
 % 5 != 4)

2264 
o
 << 
ídl
;

2266  
RCOK
;

2267 
	}
}

2278 
rc_t
 
	gvﬁ_t
::
	$dump_°‹es
(
o°ªam
 &
o
, 
°¨t
, 
íd
)

2280 i‡(!
	`is_vÆid_°‹e
(
°¨t
))

2281 
°¨t
 = 
_num_exts
 - 1;

2282 i‡(
°¨t
 == 0)

2283 
°¨t
 = 1;

2285 i‡(
íd
 == 0)

2286 
íd
 = 
_num_exts
 - 1;

2287 i‡(!
	`is_vÆid_°‹e
(
íd
))

2288 
íd
 = 
_num_exts
 - 1;

2290 
°node_i
 
	`si
(
_•id
);

2291 
i
 = 
°¨t
; i <
íd
; i++) {

2292 c⁄° 
°node_t
 *
_°node
;

2293 
	`W_DO
(
si
.
	`gë
(
i
, 
_°node
));

2294 c⁄° 
°node_t
 &
°node
 = *
_°node
;

2295 
	`W_FORM
(
o
)("°node_t(%5dË{hód=%-5dÉff=%3d%%", 
i
, 
°node
.
hód
, säode.
eff
);

2296 
o
 << " dñëög=" << (
°‹e_dñëög_t
)
°node
.
dñëög
 << '=' << stnode.deleting

2297 << " fœgs=" << (
°‹e_Êag_t
)
°node
.
Êags
 << '=' << stnode.flags << "}\n";

2300  
RCOK
;

2301 
	}
}

2311 
rc_t


2312 
	gvﬁ_t
::
	$föd_‰ì_°‹e
(
¢um_t
& 
¢um
)

2314 
¢um
 = 0;

2315 
°node_i
 
	`°
(
_•id
);

2317 
°id_t
 
°id
;

2318 
°id
.
vﬁ
 = 
_vid
;

2319 
°id
.
°‹e
 = 0;

2326 
	`W_DO
–
vﬁ_io_sh¨ed
::
	`io_lock_f‹˚
(

2327 
_vid
, 
IX
, 
t_l⁄g
, 
WAIT_SPECIFIED_BY_XCT
) );

2329 
uöt
 
i
 = 1; i < 
_num_exts
; i++) {

2330 c⁄° 
°node_t
 *
_°node
;

2331 
	`W_DO
(
°
.
	`gë
(
i
, 
_°node
));

2332 c⁄° 
°node_t
 &
°node
 = *
_°node
;

2333 i‡(
°node
.
hód
 == 0) {

2334 
°id
.
°‹e
 = 
i
;

2342 
w_rc_t
 
rc
 = 
lm
->
	`lock_f‹˚
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

2343 i‡(
rc
.
	`is_îr‹
()) {

2346 
¢um
 = 
i
;

2347  
RCOK
;

2351 
	`DBGTHRD
(

2353 << 
__LINE__
 );

2354 
	`W_RETURN_RC_MSG
(
eOUTOFSPACE
, << "vﬁumêid = " << 
_vid
);

2355 
	}
}

2368 
rc_t


2369 
	gvﬁ_t
::
	$£t_°‹e_Êags
(
¢um_t
 
¢um
, 
°‹e_Êag_t
 
Êags
, 
boﬁ
 
sync_vﬁume
)

2371 
	`w_as£π2
(
Êags
 & 
°_ªguœr


2372 || 
Êags
 & 
°_tmp


2373 || 
Êags
 & 
°_ö£π_fûe
);

2375 i‡(
¢um
 =0 || !
	`is_vÆid_°‹e
(snum)) {

2376 
	`DBG
(<<"set_store_flags: BADSTID");

2377  
	`RC
(
eBADSTID
);

2380 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_£t_°‹e_Êags
, 
Êags
);

2381 
	`W_DO
–
	`°‹e_›î©i⁄
(
∑øm
) );

2383 i‡(
Êags
 & 
°_ªguœr
) {

2392 
	`W_DO
–
bf
->
	`f‹˚_°‹e
(
	`°id_t
(
	`vid
(), 
¢um
), 
åue
) );

2393 i‡(
sync_vﬁume
 ) {

2394 
	`W_DO
–
	`sync
() );

2398  
RCOK
;

2399 
	}
}

2409 
rc_t


2410 
	gvﬁ_t
::
	$gë_°‹e_Êags
(
¢um_t
 
¢um
, 
°‹e_Êag_t
& 
Êags
)

2412 i‡(!
	`is_vÆid_°‹e
(
¢um
)) {

2413 
	`DBG
(<<"get_store_flags: BADSTID");

2414  
	`RC
(
eBADSTID
);

2417 i‡(
¢um
 == 0) {

2418 
Êags
 = 
smÀvñ_0
::
°_bad
;

2419  
RCOK
;

2422 
°node_i
 
	`°
(
_•id
);

2423 
°node_t
 
°node
;

2424 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

2432 i‡(!
°node
.
hód
 && !
	`ö_ªcovîy
()) {

2433 
	`DBG
(<<"get_store_flags: BADSTID");

2434  
	`RC
(
eBADSTID
);

2437 
Êags
 = (
°‹e_Êag_t
)
°node
.flags;

2439  
RCOK
;

2440 
	}
}

2451 
rc_t


2452 
	gvﬁ_t
::
	$Æloc_°‹e
(
¢um_t
 
¢um
, 
eff
, 
°‹e_Êag_t
 
Êags
)

2454 
	`w_as£π9
(
Êags
 & 
°_ªguœr


2455 || 
Êags
 & 
°_tmp


2456 || 
Êags
 & 
°_ö£π_fûe
);

2458 i‡(!
	`is_vÆid_°‹e
(
¢um
)) {

2459 
	`DBG
(<<"alloc_store: BADSTID");

2460  
	`RC
(
eBADSTID
);

2463 i‡(
eff
 < 20 ||Éff > 100)

2464 
eff
 = 100;

2466 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_¸óã_°‹e
, 
Êags
, 
eff
);

2467 
	`W_DO
–
	`°‹e_›î©i⁄
(
∑øm
) );

2469  
RCOK
;

2470 
	}
}

2481 
rc_t


2482 
	gvﬁ_t
::
	$£t_°‹e_fú°_ext
(
¢um_t
 
¢um
, 
exäum_t
 
hód
)

2484 i‡(!
	`is_vÆid_°‹e
(
¢um
)) {

2485 
	`DBG
(<<"set_store_first_ext: BADSTID");

2486  
	`RC
(
eBADSTID
);

2489 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_£t_fú°_ext
, 
hód
);

2490 
	`W_DO
–
	`°‹e_›î©i⁄
(
∑øm
) );

2492  
RCOK
;

2493 
	}
}

2507 
rc_t


2508 
	gvﬁ_t
::
	$‰ì_°‹e
(
¢um_t
 
¢um
, 
boﬁ
 
acquúe_lock
)

2510 
°node_i
 
	`°
(
_•id
);

2511 
°node_t
 
°node
;

2512 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

2514 i‡(
°node
.
hód
) {

2515 
	`w_as£π9
(!
°node
.
dñëög
);

2517 
°id_t
 
°id
;

2518 
°id
.
vﬁ
 = 
_vid
;

2519 
°id
.
°‹e
 = 
¢um
;

2521 i‡(
acquúe_lock
) {

2523 
	`W_COERCE
–
lm
->
	`lock_f‹˚
(
°id
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
) );

2525 #i‡
W_DEBUG_LEVEL
 > 4

2527 
lockid_t
 
	`lockid
(
°id
);

2528 
lock_mode_t
 
m
 = 
NL
;

2529 
	`W_COERCE
–
lm
->
	`quîy
(
lockid
, 
m
) );

2530 
	`w_as£π9
(
m
 !
EX
 && m !
IX
 && m !
SIX
);

2534 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_£t_dñëög
, 
t_dñëög_°‹e
);

2535 
	`W_DO
–
°
.
	`°‹e_›î©i⁄
(
∑øm
) );

2537 
x˘_t
* 
xd
 = 
	`x˘
();

2538 
	`w_as£π9
(
xd
);

2540 
xd
->
	`AddSt‹eToFªe
(
°id
);

2542 
	`SSMTEST
("store.1");

2545 
_‰ì_ext_ˇche
.
	`îa£_Æl
(
¢um
);

2546  
RCOK
;

2547 
	}
}

2561 
rc_t


2562 
	gvﬁ_t
::
	$‰ì_°‹e_a·î_x˘
(
¢um_t
 
¢um
)

2564 
exäum_t
 
hód
 = 0;

2567 
°node_i
 
	`°
(
_•id
);

2568 
°node_t
 
°node
;

2569 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

2578 i‡(
°node
.
dñëög
 =
t_nŸ_dñëög_°‹e
)

2579  
RCOK
;

2581 
hód
 = 
°node
.head;

2582 
	`w_as£π9
(
hód
);

2588 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_£t_dñëög
, 
t_°‹e_‰ìög_exts
);

2589 
	`W_DO
–
°
.
	`°‹e_›î©i⁄
(
∑øm
) );

2593 
	`W_DO
–
	`_‰ì_ext_li°
(
hód
, 
¢um
) );

2595 
°‹e_›î©i⁄_∑øm
 
	`∑øm
(
¢um
, 
t_dñëe_°‹e
);

2596 
	`W_DO
–
	`°‹e_›î©i⁄
(
∑øm
) );

2598 
_‰ì_ext_ˇche
.
	`îa£_Æl
(
¢um
);

2600  
RCOK
;

2601 
	}
}

2616 
exéök_i
*

2617 
	$pick_ei
(
exäum_t
 
ext
,Éxäum_t* 
exts
, 
exéök_i
** 
exéöks
,Éxäum_à
num_ext_∑ges
,Éxéök_i& 
ei
)

2619 i‡(
ext
 == 0)

2622 
exäum_t
 
i
 = 0; i < 
num_ext_∑ges
; i++) {

2623 i‡(
ei
.
	`⁄_ßme_∑ge
(
ext
, 
exts
[
i
])) {

2624  
exéöks
[
i
];

2627 
	`W_FATAL
(
fcINTERNAL
);

2629 
	}
}

2652 
rc_t


2653 
	gvﬁ_t
::
	$‰ì_ext_a·î_x˘
(
exäum_t
 
ext
, 
¢um_t
& 
ﬁd_ow√r
)

2655 
	`FUNC
(
vﬁ_t
::
‰ì_ext_a·î_x˘
);

2656 
	`w_as£π9
(
ext
);

2658 
exäum_t
 
√xt_ext
 = 0;

2659 
exäum_t
 
¥ev_ext
 = 0;

2660 
exéök_t
 
lök
;

2663 
exéök_i
 
	`ei
(
_ïid
);

2665 
	`W_DO
–
ei
.
	`gë_c›y
(
ext
, 
lök
) );

2666 i‡–
lök
.
ow√r
 == 0) {

2667 
	`DBG
(<<"exà" << 
ext
 << "álready freed");

2668  
RCOK
;

2670 i‡(
lök
.
	`num_£t
() != 0) {

2671 
	`DBG
(<<"exà" << 
ext
 << "ÇotÑeally freeable");

2672  
RCOK
;

2674 i‡(
lök
.
¥ev
 == 0) {

2675 
°node_i
 
	`°
(
_•id
);

2676 
°node_t
 
°node
;

2677 
	`W_DO
(
°
.
	`gë
(
lök
.
ow√r
, 
°node
));

2679 i‡(
°node
.
hód
 =
ext
) {

2680 
	`DBG
(<<"exà" << 
ext
 << " first in store --Çot freed");

2681  
RCOK
;

2684 
	`DBGTHRD
–<< "‰ìögÉxã¡ " << 
ext


2685 << " from st‹ê" << 
lök
.
ow√r


2686 << "’ªv=" << 
lök
.
¥ev


2687 << ",Çext=" << 
lök
.
√xt
 << ")" );

2690 
√xt_ext
 = 
lök
.
√xt
;

2691 
¥ev_ext
 = 
lök
.
¥ev
;

2692 
ﬁd_ow√r
 = 
lök
.
ow√r
;

2694 #i‡
W_DEBUG_LEVEL
 > 4

2695 
extid_t
 
extid
;

2696 
extid
.
vﬁ
 = 
_vid
;

2697 
extid
.
ext
 =Éxt;

2699 
	`W_COERCE
–
lm
->
	`lock
(
extid
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
) );

2700 
	`w_as£π9
(
lök
.
	`num_£t
() == 0);

2704 i‡(
ext
 < 
_mö_‰ì_ext_num
) {

2705 
_mö_‰ì_ext_num
 = 
ext
;

2706 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

2711 
exéök_i
 
	`ei1
(
_ïid
);

2712 
exéök_i
 
	`ei2
(
_ïid
);

2713 
exéök_i
 
	`ei3
(
_ïid
);

2715 
exéök_i
* 
ei_p
 = 0;

2716 
exéök_i
* 
¥ev_ei_p
 = 0;

2717 
exéök_i
* 
√xt_ei_p
 = 0;

2719 
exäum_t
 
exts
[3] = {
¥ev_ext
, 
ext
, 
√xt_ext
};

2720 
exéök_i
* 
exéöks
[3] = {&
ei1
, &
ei2
, &
ei3
};

2723 
i
;

2724 
i
 = 0; i < 2; i++) {

2725 
j
 = 
i
+1; j <= 2; j++) {

2726 i‡(
exts
[
i
] >Éxts[
j
]) {

2727 
exäum_t
 
t
 = 
exts
[
i
];

2728 
exts
[
i
] =Éxts[
j
];

2729 
exts
[
j
] = 
t
;

2735 
num_ext_∑ges
 = 0;

2736 
i
 = 0; i <= 2; i++) {

2737 i‡(
exts
[
i
]) {

2738 
exts
[
num_ext_∑ges
++] =Éxts[
i
];

2741 
	`w_as£π9
(
num_ext_∑ges
 > 0);

2744 
num_unique_ext_∑ges
 = 1;

2745 
i
 = 1; i < 
num_ext_∑ges
; i++) {

2746 i‡(!
ei1
.
	`⁄_ßme_∑ge
(
exts
[
num_unique_ext_∑ges
 - 1],Éxts[
i
]))

2748 
exts
[
num_unique_ext_∑ges
++] =Éxts[
i
];

2753 
i
 = 0; i < 
num_unique_ext_∑ges
; i++) {

2754 
	`W_DO
–
exéöks
[
i
]->
	`fix_EX
(
exts
[i]) );

2758 
ei_p
 = 
	`pick_ei
(
ext
, 
exts
, 
exéöks
, 
num_unique_ext_∑ges
, 
ei1
);

2759 
	`w_as£π9
(
ei_p
);

2760 
√xt_ei_p
 = 
	`pick_ei
(
√xt_ext
, 
exts
, 
exéöks
,

2761 
num_unique_ext_∑ges
, 
ei1
);

2762 
¥ev_ei_p
 = 
	`pick_ei
(
¥ev_ext
, 
exts
, 
exéöks
,

2763 
num_unique_ext_∑ges
, 
ei1
);

2766 
	`W_DO
–
ei_p
->
	`gë_c›y
(
ext
, 
lök
) );

2767 i‡(
lök
.
√xt
 =
√xt_ext
 &&Üök.
¥ev
 =
¥ev_ext
) {

2770 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
ON
);

2772 
l¢_t
 
™ch‹
;

2773 
x˘_t
* 
xd
 = 
	`x˘
();

2774 
	`w_as£π9
(
xd
);

2775 
check_com≥nßãd_›_√°ög
 
	`cc⁄
(
xd
, 
__LINE__
, 
__FILE__
);

2776 
™ch‹
 = 
xd
->
	`™ch‹
();

2778 
lök
.
	`˛øŒ
();

2779 
lök
.
ow√r
 = 0;

2780 
lök
.
√xt
 = 0;

2781 
lök
.
¥ev
 = 0;

2782 
	`X_DO
–
ei_p
->
	`put
(
ext
, 
lök
), 
™ch‹
 );

2784 
	`INC_TSTAT
(
vﬁ_‰ì_exts
);

2787 
	`hi°o_ext_ˇche_upd©e
(
ext
, 0);

2789 i‡(
¥ev_ext
) {

2790 
	`X_DO
–
¥ev_ei_p
->
	`gë_c›y
(
¥ev_ext
, 
lök
), 
™ch‹
 );

2791 
	`w_as£π1
(
lök
.
√xt
 =
ext
);

2794 i‡(
lök
.
√xt
 =
ext
) {

2795 
lök
.
√xt
 = 
√xt_ext
;

2796 
	`X_DO
–
¥ev_ei_p
->
	`put
(
¥ev_ext
, 
lök
), 
™ch‹
 );

2800 i‡(
√xt_ext
) {

2801 
	`X_DO
–
√xt_ei_p
->
	`gë_c›y
(
√xt_ext
, 
lök
), 
™ch‹
 );

2802 
	`w_as£π1
(
lök
.
¥ev
 =
ext
);

2803 
lök
.
¥ev
 = 
¥ev_ext
;

2804 
	`X_DO
–
√xt_ei_p
->
	`put
(
√xt_ext
, 
lök
), 
™ch‹
 );

2807 
xd
->
	`com≥nßã
(
™ch‹
,
Ál£
 
	`LOG_COMMENT_USE
("vol.1"));

2809  
RCOK
;

2815 
√xt_ext
 = 
lök
.
√xt
;

2816 
¥ev_ext
 = 
lök
.
¥ev
;

2823  
RCOK
;

2824 
	}
}

2846 
rc_t


2847 
	gvﬁ_t
::
	$_‰ì_ext_li°
(
exäum_t
 
ext
, 
¢um_t
 
¢um
)

2849 
	`DBG
(<<"_‰ì_ext_li° (Éxt=" << 
ext
 << " snum=" <<
¢um
 <<")");

2851 
	`w_as£π1
(
ext
 > 0);

2852 
	`w_as£π1
(
¢um
 > 0);

2854 
exéök_i
 
	`ei
(
_ïid
);

2855 
exäum_t
 
cou¡
 = 0;

2856 
exäum_t
 
hód
 = 
ext
;

2858 
extid_t
 
extid
;

2859 
extid
.
vﬁ
 = 
_vid
;

2861 
exéök_t
 
lök
;

2870 
ext
) {

2871 
extid
.
ext
 =Éxt;

2872 
	`W_DO
–
ei
.
	`gë_c›y
(
ext
, 
lök
) );

2874 
	`w_as£π2
(
lök
.
ow√r
 =
¢um
);

2876 
	`W_DO
–
lm
->
	`lock
(
extid
, 
EX
, 
t_l⁄g
, 
WAIT_IMMEDIATE
) );

2878 
cou¡
++;

2880 i‡(
ext
 < 
_mö_‰ì_ext_num
) {

2881 
_mö_‰ì_ext_num
 = 
ext
;

2882 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

2885 i‡(!
lök
.
√xt
 || !
ei
.
	`⁄_ßme_∑ge
(
ext
,Üink.next)) {

2887 
	`W_DO
–
	`‰ì_exts_⁄_ßme_∑ge
(
hód
, 
¢um
, 
cou¡
) );

2888 
cou¡
 = 0;

2889 
hód
 = 
lök
.
√xt
;

2892 
ext
 = 
lök
.
√xt
;

2895  
RCOK
;

2896 
	}
}

2916 
rc_t


2917 
	gvﬁ_t
::
	$‰ì_exts_⁄_ßme_∑ge
(
exäum_t
 
hód
, 
¢um_t
 
¢um
,Éxäum_à
cou¡
)

2919 
	`DBG
(<< "‰ì_exts_⁄_ßme_∑gê hód=" << 
hód


2920 << " snum=" << 
¢um


2921 << " cou¡=" << 
cou¡
);

2922 
exéök_i
 
	`ei
(
_ïid
);

2923 
exéök_t
 
lök
;

2924 
exäum_t
 
myCou¡
 = 0;

2925 
exäum_t
 
ext
 = 
hód
;

2927 
°id_t
 
°id
;

2928 
°id
.
vﬁ
 = 
_vid
;

2929 
°id
.
°‹e
 = 
¢um
;

2932 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

2934 
ext
) {

2935 
myCou¡
++;

2937 
	`W_DO
–
ei
.
	`gë_c›y
(
ext
, 
lök
) );

2938 
	`w_as£π9
(
lök
.
ow√r
 =
¢um
);

2940 
lök
.
ow√r
 = 0;

2941 
lök
.
¥ev
 = 0;

2942 
lök
.
	`˛øŒ
();

2943 
	`DBG
(<<" fªedÉxà" << 
ext
);

2944 
	`W_DO
–
ei
.
	`put
(
ext
, 
lök
) );

2947 
	`hi°o_ext_ˇche_upd©e
(
ext
, 0);

2949 i‡(
ext
 < 
_mö_‰ì_ext_num
) {

2950 
_mö_‰ì_ext_num
 = 
ext
;

2951 
	`DBG
(<<"_mö_‰ì_ext_num=" << 
_mö_‰ì_ext_num
);

2953 
	`DBG
(<<"lök.√xt=" << 
lök
.
√xt


2954 << "Éxt" << 
ext
);

2956 i‡(!
lök
.
√xt
 || !
ei
.
	`⁄_ßme_∑ge
(
ext
,Üink.next))

2959 
ext
 = 
lök
.
√xt
;

2963 
	`w_as£π1
(
myCou¡
 =
cou¡
);

2965 
	`W_DO
–
	`log_‰ì_ext_li°
(
ei
.
	`∑ge
(), 
°id
, 
hód
, 
cou¡
) );

2967  
RCOK
;

2968 
	}
}

2982 
rc_t


2983 
	gvﬁ_t
::
	$£t_ext_√xt
(
exäum_t
 
ext
,Éxäum_à
√w_√xt
)

2985 
	`w_as£π1
(
	`ö_ªcovîy
());

2987 
exéök_i
 
	`ei
(
_ïid
);

2988 
	`W_DO
–
ei
.
	`£t_√xt
(
ext
, 
√w_√xt
 ) );

2989  
RCOK
;

2990 
	}
}

3007 
rc_t


3008 
	gvﬁ_t
::
	$_≠≥nd_ext_li°
(
¢um_t
 
¢um
, 
exäum_t
 
¥ev
,Éxäum_à
cou¡
,

3009 c⁄° 
exäum_t
* 
li°
)

3011 
exéök_i
 
	`ei
(
_ïid
);

3012 
exéök_i
 
	`¥ev_ei
(
_ïid
);

3013 
exéök_t
 
¥ev_lök
;

3014 
exäum_t
 
√xt
 = 0;

3016 
	`w_as£π1
(
cou¡
 > 0);

3018 
exäum_t
 
num_⁄_cur_∑ge
 = 1;

3019 
exäum_t
 
fú°_ext_⁄_∑ge
 = 
cou¡
;

3020 
fú°_ext_⁄_∑ge
--) {

3021 i‡(
fú°_ext_⁄_∑ge
 == 0 ||

3022 !
ei
.
	`⁄_ßme_∑ge
(
li°
[
fú°_ext_⁄_∑ge
],

3023 
li°
[
fú°_ext_⁄_∑ge
 - 1])) {

3024 i‡(
fú°_ext_⁄_∑ge
 =0 && 
¥ev
 != 0) {

3026 i‡(
¥ev
 < 
li°
[0]) {

3027 
	`W_DO
–
¥ev_ei
.
	`fix_EX
(
¥ev
) );

3028 
	`W_DO
–
ei
.
	`fix_EX
(
li°
[0]) );

3030 
	`W_DO
–
ei
.
	`fix_EX
(
li°
[0]) );

3031 
	`W_DO
–
¥ev_ei
.
	`fix_EX
(
¥ev
) );

3034 
	`W_DO
(
¥ev_ei
.
	`gë_c›y
(
¥ev
, 
¥ev_lök
));

3035 i‡(
¥ev_lök
.
√xt
 == 0) {

3038 
ei
.
	`unfix
();

3039 
¥ev_lök
.
√xt
 != 0) {

3040 
¥ev
 = 
¥ev_lök
.
√xt
;

3041 
	`W_DO
(
¥ev_ei
.
	`gë_c›y
(
¥ev
, 
¥ev_lök
));

3043 
¥ev_ei
.
	`unfix
();

3048 
	`W_DO
–
	`¸óã_ext_li°_⁄_ßme_∑ge
(
¢um
,

3049 
fú°_ext_⁄_∑ge
 =0 ? 
¥ev
 : 
li°
[first_ext_on_page - 1],

3050 
√xt
, 
num_⁄_cur_∑ge
, &
li°
[
fú°_ext_⁄_∑ge
]) );

3052 i‡(
fú°_ext_⁄_∑ge
 =0 && 
¥ev
 != 0 &&

3053 !
ei
.
	`⁄_ßme_∑ge
(
¥ev
, 
li°
[0])) {

3058 #i‡
W_DEBUG_LEVEL
 > 4

3059 
exéök_t
 
lök
;

3060 
	`W_DO
–
¥ev_ei
.
	`gë_c›y
(
¥ev
, 
lök
) );

3061 
	`w_as£π9
–
lök
.
√xt
 == 0 );

3063 
	`W_DO
–
¥ev_ei
.
	`£t_√xt
(
¥ev
, 
li°
[0] ) );

3066 
num_⁄_cur_∑ge
 = 1;

3067 
√xt
 = 
li°
[
fú°_ext_⁄_∑ge
];

3069 
num_⁄_cur_∑ge
++;

3072  
RCOK
;

3073 
	}
}

3085 
rc_t


3086 
	gvﬁ_t
::
	$¸óã_ext_li°_⁄_ßme_∑ge
(

3087 
¢um_t
 
¢um
,

3088 
exäum_t
 
¥ev
,

3089 
exäum_t
 
√xt
,

3090 
exäum_t
 
cou¡
,

3091 c⁄° 
exäum_t
* 
li°
)

3093 
exéök_i
 
	`ei
(
_ïid
);

3094 
exéök_t
 
lök
;

3096 
°id_t
 
°id
;

3097 
°id
.
vﬁ
 = 
_vid
;

3098 
°id
.
°‹e
 = 
¢um
;

3101 
x˘_log_swôch_t
 
	`toggÀ
(
smÀvñ_0
::
OFF
);

3103 
exäum_t
 
i
 = 0; i < 
cou¡
; i++) {

3104 
	`W_DO
–
ei
.
	`gë_c›y
(
li°
[
i
], 
lök
) );

3106 
	`w_as£π9
(
lök
.
ow√r
 == 0);

3107 
	`w_as£π9
(
lök
.
¥ev
 == 0);

3108 
	`w_as£π9
(
lök
.
	`num_£t
() == 0);

3110 
lök
.
ow√r
 = 
¢um
;

3111 
lök
.
¥ev
 = (
i
 =0Ë?Öªv : 
li°
[i - 1];

3112 
lök
.
√xt
 = (
i
 =
cou¡
 - 1Ë?Çexà: 
li°
[i + 1];

3113 
lök
.
	`˛øŒ
();

3115 
	`W_DO
–
ei
.
	`put
(
li°
[
i
], 
lök
) );

3118 
	`hi°o_ext_ˇche_upd©e
(
li°
[
i
], 
¢um
);

3121 i‡(
¥ev
 && 
ei
.
	`⁄_ßme_∑ge
’ªv, 
li°
[0])) {

3122 #i‡
W_DEBUG_LEVEL
 > 4

3123 
exéök_t
 
¥ev_lök
;

3124 
	`W_DO
–
ei
.
	`gë_c›y
(
¥ev
, 
¥ev_lök
) );

3125 
	`w_as£π9
–
¥ev_lök
.
√xt
 == 0 );

3127 
	`W_DO
–
ei
.
	`£t_√xt
(
¥ev
, 
li°
[0], 
Ál£
 ) );

3131 
	`W_DO
–
	`log_¸óã_ext_li°
(
ei
.
	`∑ge
(), 
°id
, 
¥ev
, 
√xt
, 
cou¡
, 
li°
) );

3133  
RCOK
;

3134 
	}
}

3144 
¢um_t


3145 
	gvﬁ_t
::
	$max_°‹e_id_ö_u£
() const

3147 
¢um_t
 
¢um
 = 
_num_exts
;

3149 
°node_i
 
	`°
(
_•id
);

3150 --
¢um
 > 0) {

3151 c⁄° 
°node_t
 *
_°node
;

3152 
	`W_COERCE
(
°
.
	`gë
(
¢um
, 
_°node
));

3153 c⁄° 
°node_t
 &
°node
 = *
_°node
;

3154 i‡(
°node
.
hód
 != 0) {

3158  
¢um
;

3159 
	}
}

3172 
rc_t


3173 
	gvﬁ_t
::
	$gë_vﬁume_mëa_°©s
(
SmVﬁumeMëaSèts
& 
vﬁume_°©s
)

3175 
vﬁume_°©s
.
numSt‹es
 = 
_num_exts
;

3178 
°node_i
 
	`°
(
_•id
);

3179 
¢um_t
 
¢um
 = 1; snum < 
_num_exts
; ++snum) {

3180 c⁄° 
°node_t
 *
_°node
;

3181 
	`W_DO
(
°
.
	`gë
(
¢um
, 
_°node
));

3182 c⁄° 
°node_t
 &
°node
 = *
_°node
;

3183 i‡(
°node
.
hód
 != 0) {

3184 ++
vﬁume_°©s
.
numAŒocSt‹es
;

3189 
vﬁume_°©s
.
numPages
 = 
_num_exts
 * 
ext_sz
;

3190 
vﬁume_°©s
.
numSy°emPages
 = 
_hdr_exts
 * 
ext_sz
;

3193 
exéök_i
 
	`ei
(
_ïid
);

3194 c⁄° 
exéök_t
* 
lök
;

3195 
exäum_t
 
exäum
 = 1;Éxäum < 
_num_exts
; ++extnum) {

3196 
	`W_DO
–
ei
.
	`gë
(
exäum
, 
lök
) );

3197 i‡(
lök
->
ow√r
 != 0) {

3198 
vﬁume_°©s
.
	`In¸emítPages
(
ext_sz
, 
lök
->
	`num_£t
());

3203  
RCOK
;

3204 
	}
}

3218 
rc_t


3219 
	gvﬁ_t
::
	$gë_fûe_mëa_°©s
(
uöt4_t
 
num_fûes
, 
SmFûeMëaSèts
* 
fûe_°©s
)

3221 
uöt4_t
 
i
 = 0; i < 
num_fûes
; ++i) {

3222 
	`W_DO
–
	`gë_°‹e_mëa_°©s
(
fûe_°©s
[
i
].
smÆlSnum
, fûe_°©s[i].
smÆl
) );

3223 i‡(
fûe_°©s
[
i
].
œrgeSnum
) {

3224 
	`W_DO
–
	`gë_°‹e_mëa_°©s
(
fûe_°©s
[
i
].
œrgeSnum
, fûe_°©s[i].
œrge
) );

3227  
RCOK
;

3228 
	}
}

3243 
rc_t


3244 
	gvﬁ_t
::
	$gë_fûe_mëa_°©s_b©ch
(
uöt4_t
 
max_°‹e
, 
SmSt‹eMëaSèts
** 
m≠pög
)

3246 
exéök_i
 
	`ei
(
_ïid
);

3247 c⁄° 
exéök_t
* 
lök
;

3249 
exäum_t
 
exäum
 = 1;Éxäum < 
_num_exts
; ++extnum) {

3250 
	`W_DO
–
ei
.
	`gë
(
exäum
, 
lök
) );

3251 i‡(
lök
->
ow√r
 != 0) {

3252 i‡(
lök
->
ow√r
 < 
max_°‹e
 && 
m≠pög
[link->owner]) {

3253 
m≠pög
[
lök
->
ow√r
]->
	`In¸emítPages
(
ext_sz
,Üök->
	`num_£t
());

3257  
RCOK
;

3258 
	}
}

3270 
rc_t


3271 
	gvﬁ_t
::
	$gë_°‹e_mëa_°©s
(
¢um_t
 
¢um
, 
SmSt‹eMëaSèts
& 
°‹e_°©s
)

3273 
exäum_t
 
exäum
 = 0;

3277 
°node_i
 
	`°
(
_•id
);

3278 c⁄° 
°node_t
 *
_°node
;

3279 
	`W_DO
(
°
.
	`gë
(
¢um
, 
_°node
));

3280 c⁄° 
°node_t
 &
°node
 = *
_°node
;

3281 i‡(
°node
.
hód
 == 0) {

3282 
	`DBG
(<<"get_store_meta_stats: BADSTID");

3283  
	`RC
(
eBADSTID
);

3285 
exäum
 = 
°node
.
hód
;

3290 
exéök_i
 
	`ei
(
_ïid
);

3291 c⁄° 
exéök_t
* 
lök
;

3292 
exäum
 != 0) {

3293 
	`W_DO
–
ei
.
	`gë
(
exäum
, 
lök
) );

3294 i‡(
lök
->
ow√r
 !
¢um
 ) {

3295  
	`RC
(
eRETRY
);

3297 
°‹e_°©s
.
	`In¸emítPages
(
ext_sz
, 
lök
->
	`num_£t
());

3298 
exäum
 = 
lök
->
√xt
;

3302  
RCOK
;

3303 
	}
}

3316 
rc_t


3317 
	gvﬁ_t
::
	$check_°‹e_∑ge
(c⁄° 
Õid_t
 &
pid
, 
∑ge_p
::
èg_t
 
èg
)

3319 
∑ge_p
 
∑ge
;

3320 
°‹e_Êag_t
 
sf
=
°_em±y
;

3321 
	`W_DO
–
∑ge
.
	`fix
(
pid
, 
∑ge_p
::
t_™y_p
, 
LATCH_SH
, 0, 
sf
));

3322 
∑ge_p
::
èg_t
 
t
 = 
∑ge
.
	`èg
();

3323 
∑ge
.
	`unfix
();

3325 #i‡
W_DEBUG_LEVEL
 > 1

3327 if(
	`x˘
()) {

3328 
lock_mode_t
 
m
;

3329 
w_rc_t
 
e
 = 
lm
->
	`quîy
(
pid
, 
m
, 
	`x˘
()->
	`tid
());

3330 
	`DBG
(<< "check_°‹e_∑gê" << 
pid


3331 << "Åag " << 
t


3332 << "Éx≥˘ed " << 
èg


3333 << "Üock " << 
m
);

3336 
îr‹
=0;

3337 
t
)

3339 
∑ge_p
::
t_exéök_p
:

3340 
∑ge_p
::
t_°node_p
:

3341 
∑ge_p
::
t_båì_p
:

3342 
∑ge_p
::
t_πªe_p
:

3343 
∑ge_p
::
t_fûe_p
:

3344 
∑ge_p
::
t_fûe_mrbt_p
:

3345 
∑ge_p
::
t_ønges_p
:

3346 i‡(
t
 !
èg
Ë
îr‹
++;

3349 
∑ge_p
::
t_lgd©a_p
:

3350 
∑ge_p
::
t_lgödex_p
:

3352 (
èg
 !
∑ge_p
::
t_lgd©a_p
)

3354 (
èg
 !
∑ge_p
::
t_lgödex_p
)

3356 
îr‹
++;

3361 
îr‹
++;

3365 if(
îr‹
) {

3366 
	`W_FATAL_MSG
(
eINTERNAL
,

3367 << " u√x≥˘edÖagêèg " << 
t


3368 << "Éx≥˘ed " << 
èg


3369 << " o¿∑gê" << 
pid


3372  
RCOK
;

3373 
	}
}

3375 
rc_t


3376 
	gvﬁ_t
::
	$check_°‹e_∑ges
(
¢um_t
 
¢um
, 
∑ge_p
::
èg_t
 
èg
)

3379 if(
¢um
 > 0) {

3380 
boﬁ
 
	`Æloc
(
Ál£
);

3381 
Õid_t
 
pid
;

3382 
	`W_DO
(
	`fú°_∑ge
(
¢um
, 
pid
, &
Æloc
));

3384 
Æloc
) {

3385 
	`DBG
(<<"check_°‹e_∑ge†°‹ê" << 
¢um
 << "Åag " << 
èg


3386 << "Öid " << 
pid
);

3387 
	`W_DO
(
	`check_°‹e_∑ge
(
pid
, 
èg
));

3388 
	`W_DO
(
	`√xt_∑ge
(
pid
, &
Æloc
));

3392 
i
;

3393 
i

_ïid
.
∑ge
; i < 
_•id
.page; i++) {

3394 
Õid_t
 
	`pid
(
	`vid
(), 
¢um
, 
i
);

3395 
	`DBG
(<<"check_°‹e_∑ge†°‹ê" << 
¢um
 << "Åag " << 
èg


3396 << "Öid " << 
pid
);

3397 
	`W_DO
(
	`check_°‹e_∑ge
(
pid
, 
∑ge_p
::
t_exéök_p
));

3400 
i

_•id
.
∑ge
; i < 
_hdr_∑ges
; i++) {

3401 
Õid_t
 
	`pid
(
	`vid
(), 
¢um
, 
i
);

3402 
	`DBG
(<<"check_°‹e_∑ge†°‹ê" << 
¢um
 << "Åag " << 
èg


3403 << "Öid " << 
pid
);

3404 
	`W_DO
(
	`check_°‹e_∑ge
(
pid
, 
∑ge_p
::
t_°node_p
));

3407 
	`DBG
(<<"check_°‹e_∑ge†°‹ê" << 
¢um
 << " DONE");

3408  
RCOK
;

3409 
	}
}

3422 
rc_t


3423 
	gvﬁ_t
::
	$fú°_∑ge
(
¢um_t
 
¢um
, 
Õid_t
& 
pid
, 
boﬁ
* 
Æloˇãd
)

3425 
pid
 =Öid.
nuŒ
;

3427 
°node_t
 
°node
;

3429 
°node_i
 
	`°
(
_•id
);

3430 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

3433 i‡(!
°node
.
hód
) {

3434 
	`DBG
(<<"first_page: BADSTID");

3435  
	`RC
(
eBADSTID
);

3438 
pid
.
_°id
 = 
	`°id_t
(
_vid
, 
¢um
);

3440 
exéök_i
 
	`ei
(
_ïid
);

3441 
exäum_t
 
ext
 = 
°node
.
hód
;

3442 c⁄° 
exéök_t
* 
lök
;

3443 
fú°
 = -1;

3445  (
fú°
 < 0Ë&& (
ext
 != 0) ) {

3446 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lök
));

3447 i‡(
Æloˇãd
) {

3450 
fú°
 = 0;

3451 
pid
.
∑ge
 = 
ext
 * 
ext_sz
 ;

3452 *
Æloˇãd
 = 
lök
->
	`is_£t
(
fú°
);

3453  
RCOK
;

3457 
fú°
 = 
lök
->
	`fú°_£t
(0);

3458 i‡(
fú°
 >= 0) {

3459 
pid
.
∑ge
 = 
ext
 * 
ext_sz
 + 
fú°
;

3460  
RCOK
;

3463 
ext
 = 
lök
->
√xt
;

3465  
	`RC
(
eEOF
);

3466 
	}
}

3478 
rc_t


3479 
	gvﬁ_t
::
	$œ°_Æloˇãd_∑ge
–
¢um_t
 
¢um
, 
Õid_t
& 
pid
)

3481 
pid
 =Öid.
nuŒ
;

3482 
exéök_i
 
	`ei
(
_ïid
);

3488 c⁄° 
exéök_t
* 
lökp
;

3489 
exäum_t
 
ext
 = 
	`∑ge_ˇche_föd
(
¢um
, 
ei
, 
lökp
);

3491 
shpid_t
 
∑ge
 = 0;

3492 
exäum_t
 
°¨tög_ext
 = 
ext
;

3493 
∑ss
=0;Öass < 2;Öass++)

3495 
boﬁ
 
°¨ãd_©_hód
;

3496 if–(
°¨ãd_©_hód
 = !
ext
) )

3500 
°node_t
 
°node
;

3502 
°node_i
 
	`°
(
_•id
);

3503 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

3506 i‡–! 
°node
.
hód
) {

3507 
	`DBG
(<<"last_page: BADSTID");

3508  
	`RC
(
eBADSTID
);

3510 
ext
 = 
°node
.
hód
;

3512 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

3515 
shpid_t
 
∑ge
 = 0;

3516 
exäum_t
 
√xt
;

3520  (
√xt
=
lökp
->√xtË&&Çexà!
°¨tög_ext
 ) {

3521 
	`W_DO
(
ei
.
	`gë
((
ext
=
√xt
), 
lökp
));

3523 
i
 = 
lökp
->
	`œ°_£t
(
ext_sz
 - 1);

3524 if(
i
 >0Ë
∑ge
 = 
ext
 * 
ext_sz
 + i;

3527 if(
∑ge
) ;

3528 if(
°¨ãd_©_hód
) ;

3530 
	`w_as£π2
(
∑ss
==0);

3534 
ext
 = 0;

3537 i‡(!
∑ge
Ë 
	`RC
(
eEOF
);

3541 
	`∑ge_ˇche_upd©e
(
¢um
, 
ext
);

3543 
pid
.
_°id
 = 
	`°id_t
(
_vid
, 
¢um
);

3544 
pid
.
∑ge
 =Öage;

3546  
RCOK
;

3547 
	}
}

3561 
rc_t


3562 
	gvﬁ_t
::
	$œ°_ª£rved_∑ge
(
¢um_t
 
¢um
, 
Õid_t
& 
pid
, 
boﬁ
 &
Æloˇãd
)

3564 
exéök_i
 
	`ei
(
_ïid
);

3565 c⁄° 
exéök_t
* 
	`lökp
(
NULL
);

3566 
exäum_t
 
	`ext
(0);

3568 
	`W_DO
(
	`_œ°_exã¡
(
¢um
, 
ext
, 
ei
, 
lökp
));

3570 
pid
 =Öid.
nuŒ
;

3572 
shpid_t
 
∑ge
 = 0;

3573 
i
 = 
lökp
->
	`œ°_£t
(
ext_sz
 - 1);

3576 if(
i
 < 0) {

3577 
Æloˇãd
 = 
Ál£
;

3578 
i
 = 
ext_sz
-1;

3581 
Æloˇãd
 = 
åue
;

3584 
∑ge
 = 
ext
 * 
ext_sz
 + 
i
;

3585 
pid
.
_°id
 = 
	`°id_t
(
_vid
, 
¢um
);

3586 
pid
.
∑ge
 =Öage;

3588  
RCOK
;

3589 
	}
}

3601 
rc_t


3602 
	gvﬁ_t
::
	$_œ°_exã¡
(
¢um_t
 
¢um
, 
exäum_t
 &
ext
,

3603 
exéök_i
 &
ei
, c⁄° 
exéök_t
 * &
lökp
)

3609 
ext
 = 
	`∑ge_ˇche_föd
(
¢um
, 
ei
, 
lökp
);

3611 if(!
ext
) {

3614 
°node_t
 
°node
;

3616 
°node_i
 
	`°
(
_•id
);

3617 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

3620 i‡–! 
°node
.
hód
) {

3621 
	`DBG
(<<"last_page: BADSTID");

3622  
	`RC
(
eBADSTID
);

3624 
ext
 = 
°node
.
hód
;

3626 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

3627 
	`INC_TSTAT
(
vﬁ_œ°_exã¡_£¨ch
);

3630 
exäum_t
 
°¨t
 = 
ext
;

3631 
exäum_t
 
√xt
;

3632 
i
;

3633 
i
=0; (
√xt
=
lökp
->next); i++ ) {

3635 
	`W_DO
(
ei
.
	`gë
((
ext
=
√xt
), 
lökp
));

3638 
	`ADD_TSTAT
(
vﬁ_œ°_exã¡_£¨ch_co°
, 
i
);

3639 i‡(
ext
 !
°¨t
)

3640 
	`∑ge_ˇche_upd©e
(
¢um
, 
ext
);

3642  
RCOK
;

3643 
	}
}

3652 
rc_t


3653 
	gvﬁ_t
::
	$œ°_exã¡
(
¢um_t
 
‚um
, 
exäum_t
 &
ext
, 
boﬁ
 *
em±y
 )

3655 
exéök_i
 
	`ei
(
_ïid
);

3656 c⁄° 
exéök_t
* 
	`lökp
(
NULL
);

3658 
	`W_DO
(
	`_œ°_exã¡
(
‚um
, 
ext
, 
ei
, 
lökp
));

3659 if(
em±y
)

3661 
i
 = 
lökp
->
	`œ°_£t
(
ext_sz
 - 1);

3663 *
em±y
 = (
i
 < 0);

3665  
RCOK
;

3666 
	}
}

3677 
rc_t


3678 
	gvﬁ_t
::
	$num_∑ges
(
¢um_t
 
¢um
, 
uöt4_t
& 
˙t
)

3680 
˙t
 = 0;

3681 
°node_t
 
°node
;

3683 
°node_i
 
	`°
(
_•id
);

3684 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

3687 i‡–! 
°node
.
hód
) {

3688 
	`DBG
(<<"num_pages: BADSTID");

3689  
	`RC
(
eBADSTID
);

3692 
exéök_i
 
	`ei
(
_ïid
);

3693 
exäum_t
 
ext
 = 
°node
.
hód
;

3694 c⁄° 
exéök_t
* 
lökp
;

3695 
ext
) {

3696 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

3697 
˙t
 +
lökp
->
	`num_£t
();

3698 
ext
 = 
lökp
->
√xt
;

3701  
RCOK
;

3702 
	}
}

3714 
rc_t


3715 
	gvﬁ_t
::
	$num_exts
(
¢um_t
 
¢um
, 
exäum_t
& 
˙t
)

3717 
˙t
 = 0;

3718 
°node_t
 
°node
;

3720 
°node_i
 
	`°
(
_•id
);

3721 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

3724 i‡–! 
°node
.
hód
) {

3725 
	`DBG
(<<"num_exts: BADSTID");

3726  
	`RC
(
eBADSTID
);

3729 
exéök_i
 
	`ei
(
_ïid
);

3730 
exäum_t
 
ext
 = 
°node
.
hód
;

3731 c⁄° 
exéök_t
* 
lökp
;

3732 
ext
) {

3733 
	`W_DO
(
ei
.
	`gë
(
ext
, 
lökp
));

3734 ++
˙t
;

3735 
ext
 = 
lökp
->
√xt
;

3738  
RCOK
;

3739 
	}
}

3748 
boﬁ
 
	gvﬁ_t
::
	$_is_vÆid_∑ge_of
(c⁄° 
Õid_t
 &
pid
, 
¢um_t
 
s
) const

3750 i‡–! 
	`is_vÆid_∑ge_num
(
pid
) ) {

3751  
Ál£
;

3753  
	`_is_Æloc_∑ge_of
(
pid
, 
s
);

3754 
	}
}

3765 
boﬁ
 
	gvﬁ_t
::
	$is_Æloc_ext_of
(
exäum_t
 
e
, 
¢um_t
 
s
) const

3767 
	`w_as£π9
(
	`_is_vÆid_ext
(
e
));

3769 
exéök_i
 
	`ei
(
_ïid
);

3770 c⁄° 
exéök_t
* 
lökp
;

3771 
	`W_COERCE
(
ei
.
	`gë
(
e
, 
lökp
));

3772  (
lökp
->
ow√r
 =
s
);

3773 
	}
}

3784 
boﬁ
 
	gvﬁ_t
::
	$is_Æloc_°‹e
(
¢um_t
 
f
) const

3786 
°node_i
 
	`°
(
_•id
);

3787 c⁄° 
°node_t
 *
°node
;

3788 
	`W_COERCE
(
°
.
	`gë
(
f
, 
°node
));

3789  (
°node
->
hód
 != 0);

3790 
	}
}

3802 
exäum_t


3803 
	gvﬁ_t
::
	$∑ge_ˇche_föd
(
¢um_t
 
¢um
,

3804 
exéök_i
 &
ei
,

3805 c⁄° 
exéök_t
 * &
lökp


3808 
	`INC_TSTAT
(
vﬁ_œ°_∑ge_ˇche_föd
);

3810 
exäum_t
 
ªsu…
=0;

3813 
ªsu…
 = 
_œ°_∑ge_ˇche
[
¢um
];

3815 if(
ªsu…
) {

3817 
w_rc_t
 
rc
 = 
ei
.
	`gë
(
ªsu…
, 
lökp
);

3819 if(
rc
.
	`is_îr‹
(Ë|| (
lökp
->
ow√r
 !
¢um
))

3823 
ªsu…
 = 0;

3824 
	`∑ge_ˇche_upd©e
(
¢um
, 
ªsu…
);

3827 if(
ªsu…
) {

3828 
	`INC_TSTAT
(
vﬁ_œ°_∑ge_ˇche_föd_hô
);

3830  
ªsu…
;

3831 
	}
}

3834 
	gvﬁ_t
::
	$∑ge_ˇche_upd©e
(
¢um_t
 
¢um
, 
exäum_t
 
e
) const

3836 
	`INC_TSTAT
(
vﬁ_œ°_∑ge_ˇche_upd©e
);

3838 
_œ°_∑ge_ˇche
[
¢um
]=
e
;

3839 
	}
}

3852 
	gvﬁ_t
::
hi°o_exã¡_ˇche
::
ôî©‹


3853 
vﬁ_t
::
	$hi°o_ext_ˇche_föd
(
exäum_t
 
ext
) const

3855 
	`INC_TSTAT
(
vﬁ_hi°o_ext_ˇche_föd
);

3856 
hi°o_exã¡_ˇche
::
ôî©‹
 
íd
 = 
_hi°o_ext_ˇche
.
	`íd
();

3857 
hi°o_exã¡_ˇche
::
ôî©‹
 
ô
 = 
_hi°o_ext_ˇche
.
	`begö
();

3858 
ô
 !
íd
; ++it) {

3859 if(
ô
->
fú°
 =
ext
) {

3860 
ext2°‹e_íåy
 
tmp
 = *
ô
;

3861 
_hi°o_ext_ˇche
.
	`îa£
(
ô
);

3862 
_hi°o_ext_ˇche
.
	`push_‰⁄t
(
tmp
);

3863 
	`INC_TSTAT
(
vﬁ_hi°o_ext_ˇche_föd_hô
);

3864  
_hi°o_ext_ˇche
.
	`begö
();

3867  
íd
;

3868 
	}
}

3870 
	gvﬁ_t
::
	$hi°o_ext_ˇche_îa£
(
¢um_t
 
s
) const

3872 
hi°o_exã¡_ˇche
::
ôî©‹
 
íd
 = 
_hi°o_ext_ˇche
.
	`íd
();

3873 
agaö
:

3874 
hi°o_exã¡_ˇche
::
ôî©‹
 
ô
 = 
_hi°o_ext_ˇche
.
	`begö
();

3875 
ô
 !
íd
; ++it)

3877 if(
ô
->
£c⁄d
 =
s
) {

3878 
_hi°o_ext_ˇche
.
	`îa£
(
ô
);

3879 
agaö
;

3882 
	}
}

3884 
	gvﬁ_t
::
	$hi°o_ext_ˇche_upd©e
(
exäum_t
 
ext
, 
¢um_t
 
s
) const

3886 
	`INC_TSTAT
(
vﬁ_hi°o_ext_ˇche_upd©e
);

3887 
hi°o_exã¡_ˇche
::
ôî©‹
 
ô
 = 
	`hi°o_ext_ˇche_föd
(
ext
);

3888 if(
ô
 =
_hi°o_ext_ˇche
.
	`íd
()) {

3889 
_hi°o_ext_ˇche
.
	`push_‰⁄t
(
°d
::
	`make_∑ú
(
ext
, 
s
));

3890 if(
_hi°o_ext_ˇche
.
	`size
(Ë> 
EXT_CACHE_SIZE
)

3891 
_hi°o_ext_ˇche
.
	`p›_back
();

3894 
ô
->
£c⁄d
 = 
s
;

3896 
	}
}

3908 
boﬁ
 
	gvﬁ_t
::
	$_is_Æloc_∑ge_of
(

3909 c⁄° 
Õid_t
& 
pid
,

3910 
¢um_t
 
s
,

3911 
boﬁ
 
u£_ˇche


3914 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
);

3915 
exéök_i
 
	`ei
(
_ïid
);

3916 c⁄° 
exéök_t
* 
lökp
;

3930 
u£_ˇche
 = 
Ál£
;

3931 if(
u£_ˇche
) {

3932 
hi°o_exã¡_ˇche
::
ôî©‹
 
ô
 = 
	`hi°o_ext_ˇche_föd
(
ext
);

3937 if(
ô
 !
_hi°o_ext_ˇche
.
	`íd
()) {

3938 
boﬁ
 
ªsu…
 = 
ô
->
£c⁄d
 =
s
;

3939 
	`DBGTHRD
(<<" is_Æloc_∑ge_of(" << 
pid
 << ", "<< 
s
 << ")="

3940 << (
ªsu…
)

3945 
boﬁ
 
ªsu…2
 = 
	`_is_Æloc_∑ge_of
(
pid
, 
s
, 
Ál£
);

3946 
	`w_as£π0
(
ªsu…
 =
ªsu…2
);

3948  
ªsu…
;

3960 
	`W_COERCE
(
ei
.
	`gë
(
ext
, 
lökp
));

3962 
shpid_t
 
ba£_pid
 = 
	`ext2pid
(
ext
);

3964 
boﬁ
 
ªsu…
 = (
lökp
->
ow√r
==
s
Ë&&Üökp->
	`is_£t
((
pid
.
∑ge
 - 
ba£_pid
));

3965 
	`DBGTHRD
(<<" is_Æloc_∑ge_of(" << 
pid
 << ", "<< 
s
 << ")="

3966 << (
ªsu…
));

3967  
ªsu…
;

3968 
	}
}

3977 
boﬁ
 
	gvﬁ_t
::
	$is_Æloc_∑ge
(c⁄° 
Õid_t
& 
pid
) const

3979 
exäum_t
 
ext
 = 
	`pid2ext
(
pid
);

3980 
exéök_i
 
	`ei
(
_ïid
);

3981 c⁄° 
exéök_t
* 
lökp
;

3984 
	`W_COERCE
(
ei
.
	`gë
(
ext
, 
lökp
));

3986  
lökp
->
	`is_£t
((
pid
.
∑ge
 - 
	`ext2pid
(
ext
)));

3987 
	}
}

4001 
	gvﬁ_t
::
	$Áke_disk_œãncy
(
°¨t
)

4003 
dñè
 = 
	`gëhπime
(Ë- 
°¨t
;

4004 if(!
_≠∂y_Áke_disk_œãncy
)

4006 
dñè
 = 
_Áke_disk_œãncy
 - delta;

4007 if(
dñè
 <= 0)

4009 
max
= 99999999;

4010 if(
dñè
 > 
max
) delta = max;

4012 
time•ec
 
ªq
, 
ªm
;

4013 
ªq
.
tv_£c
 = 0;

4014 
	`w_as£π0
(
dñè
 > 0);

4015 
	`w_as£π0
(
dñè
 <
max
);

4016 
ªq
.
tv_n£c
 = 
dñè
;

4017 
	`«no¶ìp
(&
ªq
, &
ªm
) != 0)

4019 i‡(
î∫o
 !
EINTR
) ;

4020 
ªq
 = 
ªm
;

4022 
	}
}

4026 
	gvﬁ_t
::
	$íabÀ_Áke_disk_œãncy
()

4028 
_≠∂y_Áke_disk_œãncy
 = 
åue
;

4029 
	}
}

4032 
	gvﬁ_t
::
	$dißbÀ_Áke_disk_œãncy
()

4034 
_≠∂y_Áke_disk_œãncy
 = 
Ál£
;

4035 
	}
}

4037 
boﬁ


4038 
	gvﬁ_t
::
	$£t_Áke_disk_œãncy
(c⁄° 
adñay
)

4040 i‡(
adñay
<0) {

4041  (
Ál£
);

4043 
_Áke_disk_œãncy
 = 
adñay
;

4044  (
åue
);

4045 
	}
}

4057 
rc_t


4058 
	gvﬁ_t
::
	$ªad_∑ge
(
shpid_t
 
≤um
, 
∑ge_s
& 
∑ge
)

4060 
	`w_as£π1
(
≤um
 > 0 &&Önum < (
shpid_t
)(
_num_exts
 * 
ext_sz
));

4061 
fûeoff_t
 
off£t
 = 
	`fûeoff_t
(
≤um
Ë* (
∑ge
);

4063 
smthªad_t
* 
t
 = 
	`me
();

4065 #i‡
ZERO_INIT


4077 
	`mem£t
(&
∑ge
, '\0', (page));

4079 
°¨t
 = 
	`gëhπime
();

4081 
w_rc_t
 
îr
 = 
t
->
	`¥ód
(
_unix_fd
, (*Ë&
∑ge
, ’age), 
off£t
);

4082 if(
îr
.
	`îr_num
(Ë=
°hªad_t
::
°SHORTIO
 &&Éº.
	`sys_îr_num
() == 0) {

4084 
	`mem£t
(&
∑ge
, 0, (page));

4086 
	`W_COERCE_MSG
(
îr
, << "vﬁumêid=" << 
	`vid
()

4087 << "Éº_num " << 
îr
.
	`îr_num
()

4088 << " sys_îr_num " << 
îr
.
	`sys_îr_num
()

4092 
	`Áke_disk_œãncy
(
°¨t
);

4105 
	`INC_TSTAT
(
vﬁ_ªads
);

4107  
RCOK
;

4108 
	}
}

4120 
rc_t


4121 
	gvﬁ_t
::
	$wrôe_∑ge
(
shpid_t
 
≤um
, 
∑ge_s
& 
∑ge
)

4123  
	`wrôe_m™y_∑ges
(
≤um
, &
∑ge
, 1);

4124 
	}
}

4135 
rc_t


4136 
	gvﬁ_t
::
	$wrôe_m™y_∑ges
(
shpid_t
 
≤um
, c⁄° 
∑ge_s
* c⁄° 
∑ges
, 
˙t
)

4138 
	`w_as£π1
(
≤um
 > 0 &&Önum < (
shpid_t
)(
_num_exts
 * 
ext_sz
));

4139 
	`w_as£π1
(
˙t
 > 0 && c¡ <
max_m™y_∑ges
);

4140 
fûeoff_t
 
off£t
 = 
	`fûeoff_t
(
≤um
Ë* (
∑ge_s
);

4142 
smthªad_t
* 
t
 = 
	`me
();

4144 
°¨t
 = 
	`gëhπime
();

4147 
	`W_COERCE_MSG
(
t
->
	`pwrôe
(
_unix_fd
, 
∑ges
, (
∑ge_s
)*
˙t
, 
off£t
), << "vﬁumêid=" << 
	`vid
());

4149 
	`Áke_disk_œãncy
(
°¨t
);

4150 
	`ADD_TSTAT
(
vﬁ_blks_wrôãn
, 
˙t
);

4151 
	`INC_TSTAT
(
vﬁ_wrôes
);

4153  
RCOK
;

4154 
	}
}

4156 c⁄° * 
	gvﬁ_t
::
¥ﬁog
[] = {

4169 
rc_t


4170 
	gvﬁ_t
::
	$f‹m©_dev
(

4171 c⁄° * 
dev«me
,

4172 
shpid_t
 
num_∑ges
,

4173 
boﬁ
 
f‹˚
)

4175 
	`FUNC
(
vﬁ_t
::
f‹m©_dev
);

4178 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

4180 
	`DBG
–<< "f‹m©ög devi˚ " << 
dev«me
);

4181 
Êags
 = 
smthªad_t
::
OPEN_CREATE
 | smthªad_t::
OPEN_RDWR


4182 | (
f‹˚
 ? 
smthªad_t
::
OPEN_TRUNC
 : smthªad_t::
OPEN_EXCL
);

4183 
fd
;

4184 
w_rc_t
 
e
;

4185 
e
 = 
	`me
()->
	`›í
(
dev«me
, 
Êags
, 0666, 
fd
);

4186 i‡(
e
.
	`is_îr‹
())

4187  
e
;

4189 
exäum_t
 
num_exts
 = (
num_∑ges
 - 1Ë/ 
ext_sz
 + 1;

4191 
vﬁhdr_t
 
vhdr
;

4192 
vhdr
.
	`£t_f‹m©_vîsi⁄
(
vﬁume_f‹m©_vîsi⁄
);

4193 
vhdr
.
	`£t_devi˚_quŸa_KB
(
num_∑ges
*(
∑ge_sz
/1024));

4194 
vhdr
.
	`£t_ext_size
(0);

4195 
vhdr
.
	`£t_num_exts
(
num_exts
);

4196 
vhdr
.
	`£t_hdr_exts
(0);

4197 
vhdr
.
	`£t_hdr_∑ges
(0);

4198 
vhdr
.
	`£t_ïid
(0);

4199 
vhdr
.
	`£t_•id
(0);

4200 
vhdr
.
	`£t_∑ge_sz
(
∑ge_sz
);

4203 
boﬁ
 
øw
;

4204 
rc_t
 
rc
 = 
	`me
()->
	`fi§aw
(
fd
, 
øw
);

4205 i‡(
rc
.
	`is_îr‹
()) {

4206 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4207  
	`RC_AUGMENT
(
rc
);

4209 
rc
 = 
	`wrôe_vhdr
(
fd
, 
vhdr
, 
øw
);

4210 i‡(
rc
.
	`is_îr‹
()) {

4211 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4212  
	`RC_AUGMENT
(
rc
);

4215 
	`W_COERCE_MSG
(
	`me
()->
	`˛o£
(
fd
), << "devi˚Çame=" << 
dev«me
);

4217  
RCOK
;

4218 
	}
}

4232 
boﬁ
 
∑ge_check_íabÀd
;

4233 
rc_t


4234 
	gvﬁ_t
::
	$f‹m©_vﬁ
(

4235 c⁄° * 
dev«me
,

4236 
lvid_t
 
lvid
,

4237 
shpid_t
 
num_∑ges
,

4238 
boﬁ
 
skù_øw_öô
)

4240 
	`FUNC
(
vﬁ_t
::
f‹m©_vﬁ
);

4246 
x˘_log_swôch_t
 
	`log_off
(
OFF
);

4248 #i‡
W_DEBUG_LEVEL
 > 2

4253 
	sdißbÀ_∑ge_checkög
 {

4254 
	`dißbÀ_∑ge_checkög
(Ë{ 
∑ge_check_íabÀd
 = 
Ál£
; }

4255 ~
	`dißbÀ_∑ge_checkög
(Ë{ 
∑ge_check_íabÀd
 = 
åue
; }

4256 } 
dpc
;

4262 
vﬁhdr_t
 
vhdr
;

4263 
	`W_DO
(
	`ªad_vhdr
(
dev«me
, 
vhdr
));

4264 i‡(
vhdr
.
	`lvid
(Ë=
lvid
Ë 
	`RC
(
eVOLEXISTS
);

4265 i‡(
vhdr
.
	`lvid
(Ë!
lvid_t
::
nuŒ
Ë 
	`RC
(
eDEVICEVOLFULL
);

4268 
exäum_t
 
quŸa_∑ges
 = (exäum_tË(
vhdr
.
	`devi˚_quŸa_KB
()/(
∑ge_sz
/1024));

4270 i‡(
num_∑ges
 > 
quŸa_∑ges
) {

4271  
	`RC
(
eVOLTOOLARGE
);

4277 
boﬁ
 
øw
;

4278 
rc_t
 
rc
 = 
	`check_øw_devi˚
(
dev«me
, 
øw
);

4279 i‡(
rc
.
	`is_îr‹
()) {

4280  
	`RC_AUGMENT
(
rc
);

4284 
	`DBG
–<< "f‹m©ög vﬁumê" << 
lvid
 << " <"

4285 << 
dev«me
 << ">" );

4286 
Êags
 = 
smthªad_t
::
OPEN_RDWR
;

4287 i‡(!
øw
Ë
Êags
 |
smthªad_t
::
OPEN_TRUNC
;

4288 
fd
;

4289 
rc
 = 
	`me
()->
	`›í
(
dev«me
, 
Êags
, 0666, 
fd
);

4290 i‡(
rc
.
	`is_îr‹
())

4291  
rc
;

4302 
exäum_t
 
num_exts
 = (
num_∑ges
Ë/ 
ext_sz
;

4303 
shpid_t
 
ext_∑ges
 = (
num_exts
 - 1Ë/ 
exéök_p
::
max
 + 1;

4305 
shpid_t
 
°node_∑ges
 = (
num_exts
 - 1Ë/ 
°node_p
::
max
 + 1;

4309 
shpid_t
 
hdr_∑ges
 = 
ext_∑ges
 + 
°node_∑ges
 + 1;

4311 
exäum_t
 
hdr_exts
 = (
hdr_∑ges
 - 1Ë/ 
ext_sz
 + 1;

4318 
Õid_t
 
pid
;

4319 
Õid_t
 
ïid
, 
•id
;

4320 
ïid
 = 
•id
 = 
pid
;

4321 
ïid
.
∑ge
 = 1;

4322 
•id
.
∑ge
 = 
ïid
.∑gê+ 
ext_∑ges
;

4327 
vhdr
.
	`£t_f‹m©_vîsi⁄
(
vﬁume_f‹m©_vîsi⁄
);

4328 
vhdr
.
	`£t_lvid
(
lvid
);

4329 
vhdr
.
	`£t_ext_size
(
ext_sz
);

4330 
vhdr
.
	`£t_num_exts
(
num_exts
);

4331 
vhdr
.
	`£t_hdr_exts
(
hdr_exts
);

4332 
vhdr
.
	`£t_hdr_∑ges
(
hdr_∑ges
);

4333 
vhdr
.
	`£t_ïid
(
ïid
.
∑ge
);

4334 
vhdr
.
	`£t_•id
(
•id
.
∑ge
);

4335 
vhdr
.
	`£t_∑ge_sz
(
∑ge_sz
);

4340 
rc
 = 
	`wrôe_vhdr
(
fd
, 
vhdr
, 
øw
);

4341 i‡(
rc
.
	`is_îr‹
()) {

4342 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4343  
	`RC_AUGMENT
(
rc
);

4352 
rc
 = 
	`me
()->
	`l£ek
(
fd
, (
∑ge_s
), 
°hªad_t
::
SEEK_AT_SET
);

4353 i‡(
rc
.
	`is_îr‹
()) {

4354 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4355  
rc
;

4359 
∑ge_s
* 
buf
 = 
√w
Öage_s;

4360 i‡(! 
buf
Ë 
	`RC
(
eOUTOFMEMORY
);

4361 
w_auto_dñëe_t
<
∑ge_s
> 
	`auto_dñ
(
buf
);

4362 #i‡
ZERO_INIT


4366 
	`mem£t
(((*)
buf
), '\0', (
∑ge_s
));

4373 
	`DBG
(<<" f‹m©tögÉxã¡Ñegi⁄ f‹ " << 
num_exts
 << "Éxtents");

4374 
exéök_p
 
	`ï
(
buf
, 
°_ªguœr
);

4375 
exäum_t
 
i
;

4376 
exéök_t
 
lök
;

4377 
i
 = 0; i < 
num_exts
; i +
ï
.
max
, ++
ïid
.
∑ge
) {

4378 
	`W_COERCE
–
ï
.
	`f‹m©
(
ïid
,

4379 
exéök_p
::
t_exéök_p
,

4380 
ï
.
t_vúgö
, 
°_ªguœr


4383 
	`w_as£π9
(
ï
.
max
 <
w_ba£_t
::
öt2_max
);

4384 
¶Ÿid_t
 
j
;

4385 
j
 = 0; 
	`exäum_t
(jË< 
ï
.
max
; j++) {

4386 
lök
.
	`˛øŒ
();

4387 i‡(
	`exäum_t
(
j
Ë+ 
i
 < 
hdr_exts
) {

4388 i‡((
lök
.
√xt
 = 
	`exäum_t
(
j
Ë+ 
i
 + 1Ë=
hdr_exts
)

4389 
lök
.
√xt
 = 0;

4390 
lök
.
ow√r
 = 0;

4391 
lök
.
	`£èŒ
();

4393 
ï
.
	`put
(
j
, 
lök
);

4395 
j
 = 0; 
	`exäum_t
(jË< 
ï
.
max
; j++) {

4396 
lök
 = 
ï
.
	`gë
(
j
);

4397 
	`w_as£π1
(
lök
.
ow√r
 == 0);

4398 i‡(
	`exäum_t
(
j
Ë+ 
i
 < 
hdr_exts
) {

4399 
	`w_as£π1
(
lök
.
√xt
 =((
	`exäum_t
(
j
Ë+ 
i
 + 1

4400 =
hdr_exts
) ?

4401 0 : 
	`exäum_t
(
j
Ë+ 
i
 + 1));

4402 
	`w_as£π1
(
lök
.
	`fú°_˛r
(0) == -1);

4404 
	`w_as£π1
(
lök
.
√xt
 == 0);

4407 
∑ge_s
& 
∑ge
 = 
ï
.
	`≥rsi°ít_∑π
();

4408 
	`w_as£π9
(
buf
 =&
∑ge
);

4410 
rc
 = 
	`me
()->
	`wrôe
(
fd
, &
∑ge
, (page));

4411 i‡(
rc
.
	`is_îr‹
()) {

4412 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4413  
rc
;

4417 
	`DBG
(<<" done formattingÉxtentÑegion");

4423 
°node_p
 
	`Â
(
buf
, 
°_ªguœr
);

4424 
exäum_t
 
i
;

4425 
	`DBG
(<<" f‹m©tög st‹ênodêªgi⁄ f‹ " << 
num_exts
<< " stores");

4426 
i
 = 0; i < 
num_exts
; i +
Â
.
max
, 
•id
.
∑ge
++) {

4427 
	`DBGTHRD
(<<"");

4428 
	`W_COERCE
–
Â
.
	`f‹m©
(
•id
,

4429 
°node_p
::
t_°node_p
,

4430 
Â
.
t_vúgö
, 
°_ªguœr
));

4431 
	`w_as£π9
(
Â
.
max
 <
w_ba£_t
::
öt2_max
);

4432 
¶Ÿid_t
 
j
 = 0; j < 
Â
.
max
; j++) {

4433 
°node_t
 
°node
;

4434 
°node
.
hód
 = 0;

4435 
°node
.
eff
 = 0;

4436 
°node
.
Êags
 = 0;

4437 
°node
.
dñëög
 = 0;

4438 
	`W_DO
(
Â
.
	`put
(
j
, 
°node
));

4440 
∑ge_s
& 
∑ge
 = 
Â
.
	`≥rsi°ít_∑π
();

4441 
rc
 = 
	`me
()->
	`wrôe
(
fd
, &
∑ge
, (page));

4442 i‡(
rc
.
	`is_îr‹
()) {

4443 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4444  
rc
;

4448 
	`DBG
(<<" done formatting storeÇodeÑegion");

4456 i‡(
øw
) {

4460 c⁄° 
ext_byãs
 = 
∑ge_sz
 * 
ext_sz
;

4461 * 
cbuf
 = 
√w
 [
ext_byãs
];

4462 
	`w_as£π1
(
cbuf
);

4463 
w_auto_dñëe_¨øy_t
<> 
	`auto_dñ
(
cbuf
);

4464 
	`mem£t
(
cbuf
, 0, 
ext_byãs
);

4466 
	`DBG
(<<"Ñaw device: zeroing...");

4473 
fûeoff_t
 
cuº_off
=0;

4474 
rc
 = 
	`me
()->
	`l£ek
(
fd
, 0L, 
°hªad_t
::
SEEK_AT_CUR
, 
cuº_off
);

4475 i‡(
rc
.
	`is_îr‹
()) {

4476 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4477  
rc
;

4479 
c⁄sumed
 = 
	`CAST
(, (
cuº_off
 % 
ext_byãs
));

4480 
À·ovî
 = 
ext_byãs
 - 
c⁄sumed
;

4481 
	`w_as£π9
–(
À·ovî
 % 
∑ge_sz
) == 0);

4482 
rc
 = 
	`me
()->
	`wrôe
(
fd
, 
cbuf
, 
À·ovî
);

4483 i‡(
rc
.
	`is_îr‹
()) {

4484 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4485  
rc
;

4488 
	`W_COERCE
(
	`me
()->
	`l£ek
(
fd
, 0L, 
°hªad_t
::
SEEK_AT_CUR
, 
cuº_off
));

4489 
	`w_as£π9
–(
cuº_off
 % 
ext_byãs
) == 0);

4494 i‡(
skù_øw_öô
) {

4495 
	`DBG
–<< "skùpög zîo-ög o‡øw devi˚: " << 
dev«me
 );

4498 
	`DBG
–<< "zîo-ög o‡øw devi˚: " << 
dev«me
 << " ..." );

4500 
cuº_off
 <

4501 
	`fûeoff_t
((fûeoff_t(
∑ge_sz
Ë* 
ext_sz
Ë* 
num_exts
)) {

4502 
rc
 = 
	`me
()->
	`wrôe
(
fd
, 
cbuf
, 
ext_byãs
);

4503 i‡(
rc
.
	`is_îr‹
()) {

4504 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4505  
rc
;

4507 
cuº_off
 +
ext_byãs
;

4509 
	`w_as£π9
(
cuº_off
 ==

4510 
	`fûeoff_t
((fûeoff_t(
∑ge_sz
Ë* 
ext_sz
Ë* 
num_exts
));

4511 
	`DBG
–<< "föished zîo-ög o‡øw devi˚: " << 
dev«me
);

4515 #ifde‡
WANT_HUGE_FILES


4528 
fûeoff_t
 
whîe
 = 
	`fûeoff_t
((
∑ge_s
)Ë* 
ext_sz
 * 
num_exts
 - 1;

4530 
	`DBG
(<<"f‹m©_vﬁ:Çum_∑ges" << 
num_∑ges
);

4531 
	`DBG
(<<"f‹m©_vﬁ: sìkögÅÿoff£à" << 
whîe
 << "Åo writeÜastÖage " );

4532 
rc
 = 
	`me
()->
	`pwrôe
(
fd
, "", 1, 
whîe
);

4533 i‡(
rc
.
	`is_îr‹
()) {

4534 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4535  
rc
;

4540 
	`W_COERCE
(
	`me
()->
	`˛o£
(
fd
));

4542  
RCOK
;

4543 
	}
}

4552 
rc_t


4553 
	gvﬁ_t
::
	$wrôe_vhdr
(
fd
, 
vﬁhdr_t
& 
vhdr
, 
boﬁ
 
øw_devi˚
)

4569 
	`W_IFDEBUG1
(i‡(
øw_devi˚
Ë
	`w_as£π1
(
∑ge_sz
 >= 1024);)

4574 c⁄° 
tmpsz
 = 
∑ge_sz
/2;

4575 * 
tmp
 = 
√w
 [
tmpsz
];

4576 if(!
tmp
) {

4577  
	`RC
(
eOUTOFMEMORY
);

4579 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
tmp
);

4580 
i
;

4581 
i
 = 0; i < 
tmpsz
; i++Ë
tmp
[i] = '\0';

4586 
w_o°r°ªam
 
	`s
(
tmp
, 
tmpsz
);

4587 i‡(!
s
) {

4589  
	`RC
(
eOS
);

4591 
s
.
	`£ekp
(0, 
ios
::
beg
);

4592 i‡(!
s
) {

4593  
	`RC
(
eOS
);

4597 
i
 = 0;

4598 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`f‹m©_vîsi⁄
(Ë<< 
ídl
;

4599 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`devi˚_quŸa_KB
(Ë<< 
ídl
;

4600 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`lvid
(Ë<< 
ídl
;

4601 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`ext_size
(Ë<< 
ídl
;

4602 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`num_exts
(Ë<< 
ídl
;

4603 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`hdr_exts
(Ë<< 
ídl
;

4604 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`hdr_∑ges
(Ë<< 
ídl
;

4605 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`ïid
(Ë<< 
ídl
;

4606 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`•id
(Ë<< 
ídl
;

4607 
s
 << 
¥ﬁog
[
i
++] << 
vhdr
.
	`∑ge_sz
(Ë<< 
ídl
;

4608 i‡(!
s
) {

4609  
	`RC
(
eOS
);

4612 i‡(!
øw_devi˚
) {

4616 
	`W_DO
(
	`me
()->
	`pwrôe
(
fd
, 
tmp
, 
tmpsz
, 0));

4622 
	`W_DO
(
	`me
()->
	`pwrôe
(
fd
, 
tmp
, 
tmpsz
, 
£˘‹_size
));

4624  
RCOK
;

4625 
	}
}

4636 
rc_t


4637 
	gvﬁ_t
::
	$ªad_vhdr
(
fd
, 
vﬁhdr_t
& 
vhdr
)

4642 c⁄° 
tmpsz
 = 
∑ge_sz
/2;

4643 * 
tmp
 = 
√w
 [
tmpsz
];

4644 if(!
tmp
) {

4645  
	`RC
(
eOUTOFMEMORY
);

4647 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
tmp
);

4650 
	`mem£t
(
tmp
, 0, 
tmpsz
);

4655 
	`W_DO
(
	`me
()->
	`¥ód
(
fd
, 
tmp
, 
tmpsz
, 
£˘‹_size
));

4660 
w_i°r°ªam
 
	`s
(
tmp
, 
tmpsz
);

4661 
s
.
	`£ekg
(0, 
ios
::
beg
);

4662 i‡(!
s
) {

4664  
	`RC
(
eOS
);

4670 
buf
[80];

4671 
uöt4_t
 
ãmp
;

4672 
i
 = 0;

4673 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
;

4674 
vhdr
.
	`£t_f‹m©_vîsi⁄
(
ãmp
);

4675 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
;

4676 
vhdr
.
	`£t_devi˚_quŸa_KB
(
ãmp
);

4678 
lvid_t
 
t
;

4679 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
t
; 
vhdr
.
	`£t_lvid
(t);

4681 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_ext_size
(temp);

4682 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_num_exts
(temp);

4683 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_hdr_exts
(temp);

4684 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_hdr_∑ges
(temp);

4685 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_ïid
(temp);

4686 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_•id
(temp);

4687 
s
.
	`ªad
(
buf
, 
	`°æí
(
¥ﬁog
[
i
++])Ë>> 
ãmp
; 
vhdr
.
	`£t_∑ge_sz
(temp);

4689 i‡–!
s
 || 
vhdr
.
	`∑ge_sz
(Ë!
∑ge_sz
 ||

4690 
vhdr
.
	`f‹m©_vîsi⁄
(Ë!
vﬁume_f‹m©_vîsi⁄
 ) {

4692 
cout
 << "Vﬁumêf‹m© bad:" << 
ídl
;

4693 
cout
 << "vîsi⁄ " << 
vhdr
.
	`f‹m©_vîsi⁄
(Ë<< 
ídl
;

4694 
cout
 << "Éx≥˘ed " << 
vﬁume_f‹m©_vîsi⁄
 << 
ídl
;

4695 
cout
 << "∑gêsizê" << 
vhdr
.
	`∑ge_sz
(Ë<< 
ídl
;

4696 
cout
 << "Éx≥˘ed " << 
∑ge_sz
 << 
ídl
;

4698 
cout
 << "Othî: " << 
ídl
;

4699 
cout
 << "exàsizê" << 
vhdr
.
	`ext_size
(Ë<< 
ídl
;

4700 
cout
 << "#Éxã¡†" << 
vhdr
.
	`num_exts
(Ë<< 
ídl
;

4701 
cout
 << "# hd∏exã¡†" << 
vhdr
.
	`hdr_exts
(Ë<< 
ídl
;

4702 
cout
 << "# hd∏∑ge†" << 
vhdr
.
	`hdr_∑ges
(Ë<< 
ídl
;

4703 
cout
 << "1°Épid " << 
vhdr
.
	`ïid
(Ë<< 
ídl
;

4704 
cout
 << "1° spid " << 
vhdr
.
	`•id
(Ë<< 
ídl
;

4706 
cout
 << "Buf„r: " << 
ídl
;

4707 
cout
 << 
buf
 << 
ídl
;

4709 i‡(
smÀvñ_0
::
log
) {

4710  
	`RC
(
eBADFORMAT
);

4716  
RCOK
;

4717 
	}
}

4728 
rc_t


4729 
	gvﬁ_t
::
	$ªad_vhdr
(c⁄° * 
dev«me
, 
vﬁhdr_t
& 
vhdr
)

4731 
w_rc_t
 
e
;

4732 
fd
;

4734 
e
 = 
	`me
()->
	`›í
(
dev«me
, 
smthªad_t
::
OPEN_RDONLY
, 0, 
fd
);

4735 i‡(
e
.
	`is_îr‹
())

4736  
e
;

4738 
e
 = 
	`ªad_vhdr
(
fd
, 
vhdr
);

4740 
	`W_IGNORE
(
	`me
()->
	`˛o£
(
fd
));

4742 i‡(
e
.
	`is_îr‹
()) {

4743 
	`W_DO_MSG
(
e
, << "devi˚Çame=" << 
dev«me
);

4746  
RCOK
;

4747 
	}
}

4755 
rc_t
 
	gvﬁ_t
::
	$gë_du_°©i°ics
(
vﬁume_hdr_°©s_t
& 
°
, 
boﬁ
 
audô
)

4757 
vﬁume_hdr_°©s_t
 
√w_°©s
;

4758 
uöt4_t
 
u«Œoc_ext_˙t
;

4759 
uöt4_t
 
Æloc_ext_˙t
;

4760 
	`W_DO
(
	`num_‰ì_exts
(
u«Œoc_ext_˙t
) );

4761 
	`W_DO
(
	`num_u£d_exts
(
Æloc_ext_˙t
) );

4762 
√w_°©s
.
u«Œoc_ext_˙t
 = () unalloc_ext_cnt;

4763 
√w_°©s
.
Æloc_ext_˙t
 = ()álloc_ext_cnt;

4764 
√w_°©s
.
Æloc_ext_˙t
 -
_hdr_exts
;

4765 
√w_°©s
.
hdr_ext_˙t
 = 
_hdr_exts
;

4766 
√w_°©s
.
exã¡_size
 = 
ext_sz
;

4768 i‡(
audô
) {

4769 i‡(!(
√w_°©s
.
Æloc_ext_˙t
 +Çew_°©s.
hdr_ext_˙t
 +

4770 
√w_°©s
.
u«Œoc_ext_˙t
 =
_num_exts
)) {

4772 
	`W_FATAL
(
eINTERNAL
);

4774 
	`W_DO
(
√w_°©s
.
	`audô
());

4776 
°
.
	`add
(
√w_°©s
);

4777  
RCOK
;

4778 
	}
}

4781 
	gvﬁ_t
::
	$acquúe_muãx
(
vﬁ_t
::
lock_°©e
* 
_me
, 
boﬁ
 
f‹_wrôe
)

4783 
	`as£π_muãx_nŸmöe
(
_me
);

4784 if(
f‹_wrôe
) {

4785 
	`INC_TSTAT
(
√ed_vﬁ_lock_w
);

4786 if(
_muãx
.
	`©ãm±_wrôe
() ) {

4789 
	`INC_TSTAT
(
awaô_vﬁ_lock_w
);

4790 
_muãx
.
	`acquúe_wrôe
();

4792 
	`INC_TSTAT
(
√ed_vﬁ_lock_r
);

4793 if(
_muãx
.
	`©ãm±_ªad
() ) {

4796 
	`INC_TSTAT
(
awaô_vﬁ_lock_r
);

4797 
_muãx
.
	`acquúe_ªad
();

4799 
	`as£π_muãx_möe
(
_me
);

4800 
	}
}

4814 
rc_t


4815 
	gvﬁ_t
::
	$öô_hi°o
(
°‹e_hi°o_t
* 
h
, 
¢um_t
 
¢um
,

4816 
pgöfo_t
 *
∑ges
, & 
num∑ges
)

4818 
	`w_as£π1
(
¢um
 > 0);

4820 
exäum_t
 
ext
=0;

4822 
°node_i
 
	`°
(
_•id
);

4823 
°node_t
 
°node
;

4824 
	`W_DO
(
°
.
	`gë
(
¢um
, 
°node
));

4826 
ext
 = 
°node
.
hód
;

4828 
n
=0;

4830 if(
ext
) {

4831 
exéök_i
 
	`ei
(
_ïid
);

4832 
extid_t
 
extid
;

4833 c⁄° 
exéök_t
*
lök
;

4835 
extid
.
vﬁ
 = 
_vid
;

4837 
ext
) {

4838 
extid
.
ext
 =Éxt;

4839 
	`W_DO
–
ei
.
	`gë
(
ext
, 
lök
) );

4841 if(
lök
->
ow√r
 !
¢um
) {

4843 
num∑ges
 = 
n
;

4844 
	`vﬁ°›hîe
();

4845 
	`w_as£π1
(0);

4846  
	`RC
(
ePAGECHANGED
);

4848 
shpid_t
 
ba£_∑ge
 = 
ext
 * 
ext_sz
;

4849 
	`DBG
(<< "ba£Öagê" << 
ba£_∑ge
);

4855 
Pm≠
 
∑gem≠
;

4856 
lök
->
	`gëm≠
(
∑gem≠
);

4858 
i
=0; i < 
smÀvñ_0
::
ext_sz
; i++) {

4860 if(
∑gem≠
.
	`is_˛ór
(
i
)) ;

4862 
•a˚_buckë_t
 
b
 = 
lök
->
	`gë_∑ge_buckë
(
i
);

4863 
	`DBG
(<< "ba£_∑gê+ " << 
i
 <<

4864 " i†ö buckë " << (
b
));

4865 
h
->
	`ö¸
(
b
);

4866 if(
n
 < 
num∑ges
) {

4868 
∑ges
[
n
++].
	`£t_buckë
(
ba£_∑ge
+
i
, 
b
);

4871 
ext
 = 
lök
->
√xt
;

4874 
num∑ges
 = 
n
;

4875  
RCOK
;

4876 
	}
}

	@src/sm/vol.h

53 #i‚de‡
VOL_H


54 
	#VOL_H


	)

56 
	~"w_deföes.h
"

60 #ifde‡
__GNUG__


61 #¥agm®
öãrÁ˚


64 
	~<li°
>

65 
	~<exã¡.h
>

68 
	gvﬁume_hdr_°©s_t
;

69 
˛ass
 
	g°‹e_hi°o_t
;

70 
˛ass
 
	gpgöfo_t
;

72 ˛as†
	cvﬁhdr_t
 {

76 
	mw_ba£_t
::
uöt4_t
 
_f‹m©_vîsi⁄
;

77 
sm_diskaddr_t
 
	m_devi˚_quŸa_KB
;

78 
lvid_t
 
	m_lvid
;

79 
exäum_t
 
	m_ext_size
;

80 
shpid_t
 
	m_ïid
;

81 
shpid_t
 
	m_•id
;

82 
exäum_t
 
	m_num_exts
;

83 
exäum_t
 
	m_hdr_exts
;

84 
shpid_t
 
	m_hdr_∑ges
;

87 
	mw_ba£_t
::
uöt4_t
 
_∑ge_sz
;

88 
	mpublic
:

89 
w_ba£_t
::
uöt4_t
 
	$f‹m©_vîsi⁄
() const {

90  
_f‹m©_vîsi⁄
; }

91 
	$£t_f‹m©_vîsi⁄
(
uöt
 
v
) {

92 
_f‹m©_vîsi⁄
 = 
v
; 
	}
}

94 
sm_diskaddr_t
 
	$devi˚_quŸa_KB
() const {

95  
_devi˚_quŸa_KB
; 
	}
}

96 
	$£t_devi˚_quŸa_KB
(
sm_diskaddr_t
 
q
) {

97 
_devi˚_quŸa_KB
 = 
q
; 
	}
}

99 c⁄° 
	glvid_t
& 
	$lvid
(Ëc⁄° {  
_lvid
; 
	}
}

100 
	$£t_lvid
(c⁄° 
lvid_t
 &
l
) {

101 
_lvid
 = 
l
; 
	}
}

103 
exäum_t
 
	$ext_size
(Ëc⁄° {  
_ext_size
; 
	}
}

104 
	$£t_ext_size
(
exäum_t
 
e
Ë{ 
_ext_size
Û; 
	}
}

106 c⁄° 
	gshpid_t
& 
	$ïid
(Ëc⁄° {  
_ïid
; 
	}
}

107 
	$£t_ïid
(c⁄° 
shpid_t
& 
p
) {

108 
_ïid
 = 
p
; 
	}
}

110 c⁄° 
	gshpid_t
& 
	$•id
(Ëc⁄° {  
_•id
; 
	}
}

111 
	$£t_•id
(c⁄° 
shpid_t
& 
p
) {

112 
_•id
 = 
p
; 
	}
}

114 
exäum_t
 
	$num_exts
(Ëc⁄° {  
_num_exts
; 
	}
}

115 
	$£t_num_exts
(
exäum_t
 
n
Ë{ 
_num_exts
 =Ç; 
	}
}

117 
exäum_t
 
	$hdr_exts
(Ëc⁄° {  
_hdr_exts
; 
	}
}

118 
	$£t_hdr_exts
(
exäum_t
 
n
Ë{ 
_hdr_exts
 =Ç; 
	}
}

120 
exäum_t
 
	$hdr_∑ges
(Ëc⁄° {  
_hdr_∑ges
; 
	}
}

121 
	$£t_hdr_∑ges
(
shpid_t
 
n
Ë{ 
_hdr_∑ges
 =Ç; 
	}
}

123 
	gw_ba£_t
::
uöt4_t
 
	$∑ge_sz
(Ëc⁄° {  
_∑ge_sz
; 
	}
}

124 
	$£t_∑ge_sz
(
w_ba£_t
::
uöt4_t
 
n
Ë{ 
_∑ge_sz
 =Ç; 
	}
}

131 
	~<ve˘‹
>

132 
	~<£t
>

133 
	~<m≠
>

135 ˛as†
	cvﬁ_t
 : 
public
 
smÀvñ_1


137 
public
:

139 
mcs_rwlock
 
	tVﬁumeLock
;

140 * 
	tlock_°©e
;

142 
NORET
 
vﬁ_t
(c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
 = 
Ál£
,

143 c⁄° 
Áke_disk_œãncy
 = 0);

144 
	mNORET
 ~
vﬁ_t
();

146 
max_exã¡s_⁄_∑ge
();

148 
rc_t
 
mou¡
(c⁄° * 
dev«me
, 
vid_t
 
vid
);

149 
rc_t
 
dismou¡
(
boﬁ
 
Êush
 = 
åue
);

150 
rc_t
 
check_disk
();

151 
rc_t
 
check_°‹e_∑ges
(
¢um_t
 
¢um
, 
∑ge_p
::
èg_t
 
èg
);

152 
rc_t
 
check_°‹e_∑ge
(c⁄° 
Õid_t
 &
pid
, 
∑ge_p
::
èg_t
 
èg
);

154 c⁄° * 
	$dev«me
() const;

155 
vid_t
 
	$vid
() const ;

156 
lvid_t
 
	$lvid
() const ;

157 
exäum_t
 
	$ext_size
() const;

158 
exäum_t
 
	$num_exts
() const;

159 
exäum_t
 
	$pid2ext
(c⁄° 
Õid_t
& 
pid
) const;

161 
public
:

162 
	`fûl_Á˘‹
(
¢um_t
 
‚um
);

164 
boﬁ
 
	$is_vÆid_∑ge_num
(c⁄° 
Õid_t
& 
p
) const;

165 
boﬁ
 
	$is_vÆid_°‹e
(
¢um_t
 
f
) const;

166 
boﬁ
 
	$is_Æloc_ext_of
(
exäum_t
 
e
, 
¢um_t
 
s
)const;

167 
boﬁ
 
	$is_Æloc_∑ge
(c⁄° 
Õid_t
& 
p
) const;

168 
boﬁ
 
	$is_Æloc_∑ge_of
(c⁄° 
Õid_t
& 
p
, 
¢um_t
 
s
) const {

169  
	`_is_Æloc_∑ge_of
(
p
, 
s
);

173 
boﬁ
 
	$is_vÆid_∑ge_of
(c⁄° 
Õid_t
& 
p
, 
¢um_t
 
s
) const {

174  
	`_is_vÆid_∑ge_of
(
p
,
s
);

175 
	}
}

176 
	g¥iv©e
:

177 
boﬁ
 
	$_is_Æloc_∑ge_of
(c⁄° 
Õid_t
& 
p
, 
¢um_t
 
s
,

178 
boﬁ
 
u£_ˇche
=
åue
) const ;

179 
boﬁ
 
	$_is_vÆid_∑ge_of
(c⁄° 
Õid_t
& 
p
, 
¢um_t
 
s
) const;

181 
public
:

182 
boﬁ
 
	$is_Æloc_°‹e
(
¢um_t
 
f
) const;

184 
rc_t
 
	`wrôe_∑ge
(
shpid_t
 
∑ge
, 
∑ge_s
& 
buf
);

186 
rc_t
 
	`wrôe_m™y_∑ges
(

187 
shpid_t
 
fú°_∑ge
,

188 c⁄° 
∑ge_s
* 
buf
,

189 
˙t
);

191 
rc_t
 
	`ªad_∑ge
(

192 
shpid_t
 
∑ge
,

193 
∑ge_s
& 
buf
);

195 
rc_t
 
	`Æloc_∑ges_ö_ext
(

196 
Æloc_∑ge_fûãr_t
 *
fûãr
,

197 
boﬁ
 
≠≥nd_⁄ly
,

198 
exäum_t
 
ext
,

199 
eff
,

200 
¢um_t
 
‚um
,

201 
˙t
,

202 
Õid_t
 
pids
[],

203 & 
Æloˇãd
,

204 & 
ªmaöög
,

205 
boﬁ
& 
is_œ°
,

206 
boﬁ
 
may_ªÆloc
 = 
Ál£
,

207 
lock_mode_t
 
desúed_lock_mode
 = 
IX
 );

209 
rc_t
 
	`ªcovî_∑ges_ö_ext
(

210 
¢um_t
 
¢um
,

211 
exäum_t
 
ext
,

212 c⁄° 
Pm≠
& 
pm≠
,

213 
boﬁ
 
is_Æloc
);

215 
rc_t
 
	`°‹e_›î©i⁄
(c⁄° 
°‹e_›î©i⁄_∑øm
& 
∑øm
);

216 
rc_t
 
	`‰ì_°‹es_durög_ªcovîy
(
°‹e_dñëög_t
 
ty≥ToRecovî
);

217 
rc_t
 
	`‰ì_exts_durög_ªcovîy
();

218 
rc_t
 
	`‰ì_∑ge
(c⁄° 
Õid_t
& 
pid
, 
boﬁ
 
check_°‹e_membîshù
);

219 
rc_t
 
	`föd_‰ì_exts
(

220 
uöt
 
˙t
,

221 
exäum_t
 
exts
[],

222 & 
found
,

223 
exäum_t
 
fú°_ext
 = 0);

224 
rc_t
 
	`num_‰ì_exts
(
w_ba£_t
::
uöt4_t
& 
˙t
);

225 
rc_t
 
	`num_u£d_exts
(
w_ba£_t
::
uöt4_t
& 
˙t
);

227 
rc_t
 
	`Æloc_exts
(

228 
¢um_t
 
num
,

229 
exäum_t
 
¥ev
,

230 
˙t
,

231 c⁄° 
exäum_t
 
exts
[]);

234 
rc_t
 
	`upd©e_ext_hi°o
(c⁄° 
Õid_t
& 
pid
, 
•a˚_buckë_t
 
b
);

235 
rc_t
 
	`√xt_ext
(
exäum_t
 
ext
,Éxäum_à&
ªs
);

236 
rc_t
 
	`dump_exts
(
o°ªam
 &, 
exäum_t
 
°¨t
,Éxäum_à
íd
);

237 
rc_t
 
	`dump_°‹es
(
o°ªam
 &, 
°¨t
, 
íd
);

239 
rc_t
 
	`föd_‰ì_°‹e
(
¢um_t
& 
‚um
);

240 
rc_t
 
	`Æloc_°‹e
(

241 
¢um_t
 
‚um
,

242 
eff
,

243 
°‹e_Êag_t
 
Êags
);

244 
rc_t
 
	`£t_°‹e_fú°_ext
(

245 
¢um_t
 
‚um
,

246 
exäum_t
 
hód
);

248 
rc_t
 
	`£t_°‹e_Êags
(

249 
¢um_t
 
‚um
,

250 
°‹e_Êag_t
 
Êags
,

251 
boﬁ
 
sync_vﬁume
);

252 
rc_t
 
	`gë_°‹e_Êags
(

253 
¢um_t
 
‚um
,

254 
°‹e_Êag_t
& 
Êags
);

255 
rc_t
 
	`‰ì_°‹e
(

256 
¢um_t
 
‚um
,

257 
boﬁ
 
acquúe_lock
);

258 
rc_t
 
	`‰ì_°‹e_a·î_x˘
(
¢um_t
 
¢um
);

259 
rc_t
 
	`‰ì_ext_a·î_x˘
(
exäum_t
 
ext
, 
¢um_t
&);

262 
rc_t
 
	`£t_ext_√xt
(

263 
exäum_t
 
ext
,

264 
exäum_t
 
√w_√xt
);

266 
rc_t
 
	`fú°_ext
(
¢um_t
 
‚um
, 
exäum_t
 &
ªsu…
);

267 
¥iv©e
:

268 
boﬁ
 
	$_is_vÆid_ext
(
exäum_t
 
e
) const;

270 
rc_t
 
	`_‰ì_ext_li°
(

271 
exäum_t
 
hód
,

272 
¢um_t
 
¢um
);

273 
rc_t
 
	`_≠≥nd_ext_li°
(

274 
¢um_t
 
¢um
,

275 
exäum_t
 
¥ev
,

276 
exäum_t
 
cou¡
,

277 c⁄° 
exäum_t
* 
li°
);

278 
public
:

279 
rc_t
 
	`‰ì_exts_⁄_ßme_∑ge
(

280 
exäum_t
 
ext
,

281 
¢um_t
 
¢um
,

282 
exäum_t
 
cou¡
);

283 
rc_t
 
	`¸óã_ext_li°_⁄_ßme_∑ge
(

284 
¢um_t
 
¢um
,

285 
exäum_t
 
¥ev
,

286 
exäum_t
 
√xt
,

287 
exäum_t
 
cou¡
,

288 c⁄° 
exäum_t
* 
li°
);

290 
public
:

291 
rc_t
 
	`öô_hi°o
(

292 
°‹e_hi°o_t
* 
h
,

293 
¢um_t
 
¢um
,

294 
pgöfo_t
* 
∑ges
,

295 & 
num∑ges
);

297 
¢um_t
 
	$max_°‹e_id_ö_u£
() const;

303 
rc_t
 
	`gë_vﬁume_mëa_°©s
(

304 
SmVﬁumeMëaSèts
& 
vﬁume_°©s
);

306 
rc_t
 
	`gë_fûe_mëa_°©s
(

307 
w_ba£_t
::
uöt4_t
 
num_fûes
,

308 
SmFûeMëaSèts
* 
fûe_°©s
);

310 
rc_t
 
	`gë_fûe_mëa_°©s_b©ch
(

311 
w_ba£_t
::
uöt4_t
 
max_°‹e
,

312 
SmSt‹eMëaSèts
** 
m≠pög
);

314 
rc_t
 
	`gë_°‹e_mëa_°©s
(

315 
¢um_t
 
¢um
,

316 
SmSt‹eMëaSèts
& 
°‹eSèts
);

323 
rc_t
 
	`fú°_∑ge
(

324 
¢um_t
 
‚um
,

325 
Õid_t
& 
pid
,

326 
boﬁ
* 
Æloˇãd
 = 
NULL
);

328 
rc_t
 
	`œ°_Æloˇãd_∑ge
(

329 
¢um_t
 
‚um
,

330 
Õid_t
& 
pid


332 
rc_t
 
	`œ°_ª£rved_∑ge
(

333 
¢um_t
 
‚um
,

334 
Õid_t
& 
pid
,

335 
boﬁ
 &
Æloˇãd
);

337 
rc_t
 
	`œ°_exã¡
(

338 
¢um_t
 
‚um
,

339 
exäum_t
& 
ext
,

340 
boﬁ
* 
is_em±y
=
NULL


343 
¥iv©e
:

345 
rc_t
 
	`_œ°_exã¡
(

346 
¢um_t
 
‚um
,

347 
exäum_t
& 
ext
,

348 
exéök_i
 &
ei
,

349 c⁄° 
exéök_t
 * &
lökp


351 
public
:

353 
rc_t
 
	`√xt_∑ge
(

354 
Õid_t
& 
pid
,

355 
boﬁ
* 
Æloˇãd
 = 
NULL
);

358 
rc_t
 
	`√xt_∑ge_wôh_•a˚
(
Õid_t
& 
pid
,

359 
•a˚_buckë_t
 
√eded
);

361 
rc_t
 
	`num_∑ges
(
¢um_t
 
‚um
, 
w_ba£_t
::
uöt4_t
& 
˙t
);

362 
rc_t
 
	`num_exts
(
¢um_t
 
‚um
, 
w_ba£_t
::
uöt4_t
& 
˙t
);

363 
boﬁ
 
	$is_øw
(Ë{  
_is_øw
; 
	}
};

365 
rc_t
 
sync
();

368 
rc_t
 
f‹m©_dev
(

369 c⁄° * 
dev«me
,

370 
shpid_t
 
num_∑ges
,

371 
boﬁ
 
f‹˚
);

373 
rc_t
 
f‹m©_vﬁ
(

374 c⁄° * 
dev«me
,

375 
lvid_t
 
lvid
,

376 
shpid_t
 
num_∑ges
,

377 
boﬁ
 
skù_øw_öô
);

379 
rc_t
 
ªad_vhdr
(c⁄° * 
dev«me
, 
vﬁhdr_t
& 
vhdr
);

380 
rc_t
 
ªad_vhdr
(
fd
, 
vﬁhdr_t
& 
vhdr
);

382 
rc_t
 
wrôe_vhdr
(

383 
fd
,

384 
vﬁhdr_t
& 
vhdr
,

385 
boﬁ
 
øw_devi˚
);

387 
rc_t
 
check_øw_devi˚
(

388 c⁄° * 
dev«me
,

389 
boﬁ
& 
øw
);

394 
rc_t
 
gë_du_°©i°ics
(

395 
vﬁume_hdr_°©s_t
&,

396 
boﬁ
 
audô
);

398 
	$as£π_muãx_möe
(
lock_°©e
 *Ë{
	}
}

399 
	$as£π_muãx_nŸmöe
(
lock_°©e
 *Ë{
	}
}

402 
acquúe_muãx
(
lock_°©e
* 
me
, 
boﬁ
 
f‹_wrôe
);

403 
	gVﬁumeLock
& 
	$vﬁ_muãx
(Ëc⁄° {  
_muãx
; 
	}
}

406 
íabÀ_Áke_disk_œãncy
();

407 
dißbÀ_Áke_disk_œãncy
();

408 
boﬁ
 
£t_Áke_disk_œãncy
(c⁄° 
adñay
);

409 
Áke_disk_œãncy
(
°¨t
);

411 
	g¥iv©e
:

412 
_dev«me
[
max_dev«me
];

413 
	g_unix_fd
;

414 
vid_t
 
	g_vid
;

415 
lvid_t
 
	g_lvid
;

416 
exäum_t
 
	g_num_exts
;

417 
uöt
 
	g_hdr_exts
;

418 
uöt
 
	g_hdr_∑ges
;

419 
exäum_t
 
	g_mö_‰ì_ext_num
;

420 
Õid_t
 
	g_ïid
;

421 
Õid_t
 
	g_•id
;

422 
	g_∑ge_sz
;

423 
boﬁ
 
	g_is_øw
;

425 
muèbÀ
 
VﬁumeLock
 
	g_muãx
;

428 
boﬁ
 
	g_≠∂y_Áke_disk_œãncy
;

429 
	g_Áke_disk_œãncy
;

432 
shpid_t
 
ext2pid
(
exäum_t
 
e
);

433 
	gpublic
:

434 
exäum_t
 
pid2ext
(
shpid_t
 
p
);

435 
	g¥iv©e
:

443 
°d
::
	t∑ú
<
	texäum_t
, 
	t¢um_t
> 
	text2°‹e_íåy
;

444 
	g°d
::
	tli°
<
	text2°‹e_íåy
 > 
	thi°o_exã¡_ˇche
;

445 íum { 
	gEXT_CACHE_SIZE
=16 };

446 
muèbÀ
 
hi°o_exã¡_ˇche
 
	g_hi°o_ext_ˇche
;

447 
	ghi°o_exã¡_ˇche
::
ôî©‹
 
	$hi°o_ext_ˇche_föd
(
exäum_t
 
ext
) const;

448 
	$hi°o_ext_ˇche_upd©e
(

449 
exäum_t
 
ext
, 
¢um_t
 
s
) const;

450 
	$hi°o_ext_ˇche_îa£
(
¢um_t
 
s
) const;

459 
°d
::
	tm≠
<
	t¢um_t
, 
	texäum_t
> 
	t∑ge_ˇche
;

460 
muèbÀ
 
∑ge_ˇche
 
_œ°_∑ge_ˇche
;

461 
exäum_t
 
	$∑ge_ˇche_föd
(

462 
¢um_t
 
¢um
,

463 
exéök_i
 &
ei
,

464 c⁄° 
exéök_t
 * &
lökp


466 
	$∑ge_ˇche_upd©e
(
¢um_t
 
¢um
, 
exäum_t
 
e
) const ;

467 
¥iv©e
:

468 
boﬁ
 
	$_∑ge_ˇche_föd
(
¢um_t
 
s
) const {

469  ( 
_œ°_∑ge_ˇche
[
s
] != 0);

470 
	}
}

472 
	gpublic
:

489 ˛as†
	cext_ˇche_t


491 
	sext_öfo
 {

492 
¢um_t
 
¢um
;

493 
exäum_t
 
	gext
;

494 
ext_öfo
(
¢um_t
 
s
, 
exäum_t
 
e
Ë: 
¢um
(s), 
ext
(e) { }

496 
boﬁ
 
	g›î©‹
 <(
ext_öfo
 c⁄° &
	gŸhî
) const {

497 
com∑ª_¢um_t
 
	gcomp
;

498 if(
comp
(
¢um
, 
Ÿhî
.¢um)Ë 
	gåue
;

499 if(
comp
(
Ÿhî
.
¢um
, snum)Ë 
	gÁl£
;

500  
	gext
 < 
	gŸhî
.ext;

503 
	g°d
::
	tm≠
<
	t¢um_t
, , 
	tcom∑ª_¢um_t
> 
	tcou¡_m≠
;

504 
	g°d
::
	t£t
<
	text_öfo
> 
	tˇche
;

505 
	gpublic
:

506 
ˇche
::
	tôî©‹
 
	tˇche_ôî©‹
;

508 
	g¥iv©e
:

509 
ˇche
 
_ˇche
;

510 
cou¡_m≠
 
	g_cou¡s
;

513 
	gpublic
:

514 
ˇche
::
ôî©‹
 
lowî_bound
(
¢um_t
 
¢um
Ë{  
_ˇche
.lower_bound(

515 (
ext_öfo
(
¢um
, 0))) ;}

516 
	gˇche
::
ôî©‹
 
íd
(Ë{  
_ˇche
.end(); }

517 
cou¡
(
¢um_t
 
¢um
Ë{  
	g_cou¡s
[snum]; }

518 
îa£
(
ˇche
::
ôî©‹
 
pos
);

519 
ö£π
(
¢um_t
 
¢um
, 
exäum_t
 
ext
) ;

520 
îa£
(
¢um_t
 
¢um
, 
exäum_t
 
ext
);

521 
îa£_Æl
(
¢um_t
 
¢um
) ;

522 
shutdown
(Ë{ 
	g_ˇche
.
˛ór
(); 
	g_cou¡s
.clear(); }

523 
gë_sizes
(&
ˇchesz
, &
ˇchemx
, &
˙tsz
, &
˙tmx
) const

524 { 
	gˇchesz
 = 
_ˇche
.
size
(); 
	gˇchemx
 = _ˇche.
max_size
();

525 
	g˙tsz
 = 
_cou¡s
.
size
(); 
	g˙tmx
 = _cou¡s.
max_size
(); }

528 
	g¥iv©e
:

529 
ext_ˇche_t
 
_‰ì_ext_ˇche
;

530 
	gpublic
:

531 
	$shutdown
(Ë{ 
_‰ì_ext_ˇche
.
	`shutdown
();

532 
_œ°_∑ge_ˇche
.
	`˛ór
();

533 
_hi°o_ext_ˇche
.
	`˛ór
();

534 
	}
}

535 
	$shutdown
(
¢um_t
 
s
) {

536 
_‰ì_ext_ˇche
.
	`îa£_Æl
(
s
);

537 
_œ°_∑ge_ˇche
.
	`îa£
(
s
);

538 
	`hi°o_ext_ˇche_îa£
(
s
);

539 
	}
}

551 
boﬁ
 
	$is_¥imed
(
¢um_t
 
s
) const {

552  
	`_∑ge_ˇche_föd
(
s
); 
	}
}

554 
w_rc_t
 
¥ime_ˇche
(
¢um_t
 
s
);

557 
	gext_ˇche_t
& 
	$‰ì_ext_ˇche
(Ë{  
_‰ì_ext_ˇche
; 
	}
}

560 c⁄° * 
	g¥ﬁog
[];

579 
ölöe
 
	gvﬁ_t
::
	$vﬁ_t
(c⁄° 
boﬁ
 
≠∂y_Áke_io_œãncy
, c⁄° 
Áke_disk_œãncy
)

580 : 
	`_unix_fd
(-1), 
	`_mö_‰ì_ext_num
(1),

581 
	`_≠∂y_Áke_disk_œãncy
(
≠∂y_Áke_io_œãncy
),

582 
	$_Áke_disk_œãncy
(
Áke_disk_œãncy
)

583 {
	}
}

585 
ölöe
 
	gvﬁ_t
::~
	$vﬁ_t
() {

586 
	`shutdown
();

587 
	`w_as£π1
(
_unix_fd
 == -1);

588 
	}
}

590 
ölöe
 c⁄° * 
	gvﬁ_t
::
	$dev«me
() const

592  
_dev«me
;

593 
	}
}

602 
ölöe
 
exäum_t
 
	gvﬁ_t
::
	$pid2ext
(
shpid_t
 
p
)

605  (
exäum_t
Ë(
p
 / 
ext_sz
);

606 
	}
}

608 
ölöe
 
shpid_t
 
	gvﬁ_t
::
	$ext2pid
(
exäum_t
 
ext
)

612 
shpid_t
 
tmp
 = 
ext
;

613  
tmp
 * 
ext_sz
;

614 
	}
}

616 
ölöe
 
exäum_t
 
	gvﬁ_t
::
	$pid2ext
(c⁄° 
Õid_t
& 
pid
) const

618 
	`w_as£π3
(
pid
.
	`vﬁ
(Ë=
_vid
);

619  
	`pid2ext
(
pid
.
∑ge
);

620 
	}
}

622 
ölöe
 
vid_t
 
	gvﬁ_t
::
	$vid
() const

624  
_vid
;

625 
	}
}

627 
ölöe
 
lvid_t
 
	gvﬁ_t
::
	$lvid
() const

629  
_lvid
;

630 
	}
}

632 
ölöe
 
exäum_t
 
	gvﬁ_t
::
	$ext_size
() const

634  
ext_sz
;

635 
	}
}

637 
ölöe
 
exäum_t
 
	gvﬁ_t
::
	$num_exts
() const

639  (
exäum_t
Ë
_num_exts
;

640 
	}
}

642 
ölöe
 
boﬁ
 
	gvﬁ_t
::
	$_is_vÆid_ext
(
exäum_t
 
e
) const

644  (
e
 < 
_num_exts
);

645 
	}
}

647 
ölöe
 
boﬁ
 
	gvﬁ_t
::
	$is_vÆid_∑ge_num
(c⁄° 
Õid_t
& 
p
) const

649  ((()–
_num_exts
Ë* 
ext_sz
Ë> 
p
.
∑ge
);

650 
	}
}

652 
ölöe
 
boﬁ
 
	gvﬁ_t
::
	$is_vÆid_°‹e
(
¢um_t
 
f
) const

659  (
f
 < 
_num_exts
 );

660 
	}
}

	@src/sm/vtable_sm.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#VTABLE_SM_C


	)

37 #ifde‡
__GNUG__


38 
˛ass
 
	g¥ﬁogue_rc_t
;

39 #¥agm®
im∂emíèti⁄
 "sm.h"

40 #¥agm®
im∂emíèti⁄
 "prologue.h"

41 #¥agm®
im∂emíèti⁄
 "sm_base.h"

44 
	~"w.h
"

45 
	~"›ti⁄.h
"

46 
	~"sm_öt_4.h
"

47 
	~"pö.h
"

48 
	~"chk±.h
"

49 
	~"lgªc.h
"

50 
	~"sm.h
"

51 
	~"sm_vèbÀ_íum.h
"

52 
	~"¥ﬁogue.h
"

53 
	~"devi˚.h
"

54 
	~"vﬁ.h
"

55 
	~"¸ash.h
"

56 
	~"ª°¨t.h
"

57 
	~"hi°o.h
"

59 
	~"≠p_suµ‹t.h
"

75 
rc_t


76 
	gss_m
::
	$x˘_cﬁÀ˘
–
vèbÀ_t
 & 
ªs
, 
boﬁ
 
«mes_too
)

78 if(
x˘_t
::
	`cﬁÀ˘
(
ªs
, 
«mes_too
Ë=0Ë 
RCOK
;

79  
	`RC
(
eOUTOFMEMORY
);

80 
	}
}

81 
rc_t


82 
	gss_m
::
	$lock_cﬁÀ˘
–
vèbÀ_t
& 
ªs
, 
boﬁ
 
«mes_too
)

84 if(
lm
->
	`cﬁÀ˘
(
ªs
, 
«mes_too
)==0Ë 
RCOK
;

85  
	`RC
(
eOUTOFMEMORY
);

86 
	}
}

87 
rc_t


88 
	gss_m
::
	$bp_cﬁÀ˘
–
vèbÀ_t
 & 
ªs
, 
boﬁ
 
«mes_too
)

90 if(
bf
->
	`cﬁÀ˘
(
ªs
, 
«mes_too
)==0Ë 
RCOK
;

91  
	`RC
(
eOUTOFMEMORY
);

92 
	}
}

103 
rc_t


104 
	gss_m
::
	$thªad_cﬁÀ˘
–
vèbÀ_t
 & 
ªs
, 
boﬁ
 
«mes_too
)

110 if(
smthªad_t
::
	`cﬁÀ˘
(
ªs
, 
«mes_too
)==0Ë 
RCOK
;

111  
	`RC
(
eOUTOFMEMORY
);

112 
	}
}

	@src/sm/vtable_smthread.cpp

30 
	~"w_deföes.h
"

33 
	#SM_SOURCE


	)

34 
	#SMTHREAD_C


	)

35 
	~<w.h
>

36 
	~<sm_öt_1.h
>

37 
	~<°hªad_vèbÀ_íum.h
>

38 
	~<sm_vèbÀ_íum.h
>

39 
	~"smthªad.h
"

41 c⁄° *
	gsmthªad_vèbÀ_©å_«mes
[] = {

49 
	~"°hªad_°©s_msg_gí.h
"

58 
vèbÀ_«mes_öô_t
 
«mes_öô
(
smthªad_œ°
,

59 
smthªad_vèbÀ_©å_«mes
);

62 
	gsmthªad_t
::
	$cﬁÀ˘
(
vèbÀ_t
 &
v
, 
boﬁ
 
«mes_too
)

65 
num_thªads
=100;

66 if(
v
.
	`öô
(
num_thªads
, 
smthªad_œ°
, 
«mes_öô
.
	`max_size
()))  -1;

68 if(
«mes_too
Ë
num_thªads
++;

70 
vèbÀ_func
<
smthªad_t
> 
	`f
(
v
);

72 if(
«mes_too
Ë
f
.
	`ö£π_«mes
();

74 ˛as†
	cNŸhögAdded
 : 
public
 
SmthªadFunc


76 
vèbÀ_func
<
smthªad_t
> &
_f
;

77 
_max
;

78 
_soÁr
;

79 
public
:

80 
	`NŸhögAdded
(
vèbÀ_func
<
smthªad_t
> &
f
, 
maxx
Ë: 
	`_f
(f),

81 
	`_max
(
maxx
), 
	`_soÁr
(0) {}

82 ~
	`NŸhögAdded
(){}

84 
	`›î©‹
()(c⁄° 
smthªad_t
& 
smthªad
) {

85 if(
_soÁr
++ < 
_max
Ë
	`_f
(
smthªad
);

88 
	}
} 
F
(
f
, 
num_thªads
);

90 
	gsmthªad_t
::
f‹_óch_smthªad
(
F
);

96 
	gsmthªad_t
::
	$vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
& 
t
)

98 
«mes_öô
.
	`cﬁÀ˘_«mes
(
t
);

99 
	}
}

102 
	gsmthªad_t
::
	$vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
& 
t
)

104 
°hªad_t
::
	`vèbÀ_cﬁÀ˘
(
t
);

106 
t
.
	`£t_°rög
(
smthªad_«me_©å
, 
	`«me
());

107 
t
.
	`£t_öt
(
smthªad_thªad_ty≥_©å
, 
	`thªad_ty≥
());

108 
t
.
	`£t_öt
(
smthªad_pö_cou¡_©å
, 
	`pö_cou¡
());

109 
t
.
	`£t_öt
(
smthªad_is_ö_sm_©å
, 
	`is_ö_sm
());

110 if(
	`tcb
().
x˘
) {

111 
w_o°r°ªam
 
o
;

112 
o
 << 
	`tcb
().
x˘
->
	`tid
(Ë<< 
íds
;

113 
t
.
	`£t_°rög
(
smthªad_tid_©å
, 
o
.
	`c_°r
());

115 
t
.
	`£t_°rög
(
smthªad_tid_©å
, "");

117 
	}
}

	@src/sm/vtable_xct.cpp

30 
	~"w_deföes.h
"

34 
	#SM_SOURCE


	)

35 
	#XCT_C


	)

37 #ifde‡
__GNUG__


38 #¥agm®
im∂emíèti⁄
 "xct.h"

41 
	~<√w
>

42 
	~"sm_öt_1.h
"

43 
	~"és.h
"

45 
	~"sm_esˇœti⁄.h
"

46 
	~"lock_x.h
"

47 
	~"x˘_dïídít.h
"

48 
	~"chk±_£rül.h
"

50 
	~<vèbÀ.h
>

51 
	~<sm_vèbÀ_íum.h
>

53 #ifde‡
__GNUG__


54 
ãm∂©e
 
˛ass
 
	gvèbÀ_func
<
	gx˘_t
>;

57 c⁄° *
	gx˘_vèbÀ_©å_«mes
[] = {

66 
vèbÀ_«mes_öô_t
 
«mes_öô
(
x˘_œ°
, 
x˘_vèbÀ_©å_«mes
);

69 
	gx˘_t
::
	$cﬁÀ˘
–
vèbÀ_t
& 
v
, 
boﬁ
 
«mes_too
)

71 
chk±_£rül_m
::
	`chk±_acquúe
();

72 
n
=
	`num_a˘ive_x˘s
();

74 if(
«mes_too
Ë
n
++;

78 if(
v
.
	`öô
(
n
, 
x˘_œ°
, 
«mes_öô
.
	`max_size
())) {

79 
chk±_£rül_m
::
	`chk±_ªÀa£
();

82 
vèbÀ_func
<
x˘_t
> 
	`f
(
v
);

83 if(
«mes_too
Ë
f
.
	`ö£π_«mes
();

86 
x˘_i
 
i
;

87 
x˘_t
* 
xd
 = 
i
.
	`√xt
()) {

88 
	`f
(*
xd
);

91 
chk±_£rül_m
::
	`chk±_ªÀa£
();

93 
	}
}

96 
	gx˘_t
::
	$vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &
t
)

99 
t
.
	`£t_öt
(
x˘_¡hªads_©å
, 
	`num_thªads
());

102 if(
	`is_exã∫2pc
()) {

103 
w_o°r°ªam
 
s
;

104 
s
 << *
	`gtid
(Ë<< 
íds
;

105 
t
.
	`£t_°rög
(
x˘_gtid_©å
, 
s
.
	`c_°r
());

107 
t
.
	`£t_°rög
(
x˘_gtid_©å
, "");

111 
w_o°r°ªam
 
o
;

112 
o
 << 
	`tid
(Ë<< 
íds
;

113 
t
.
	`£t_°rög
(
x˘_tid_©å
, 
o
.
	`c_°r
());

118 
w_o°r°ªam
 
o
;

119 
o
 << 
	`°©e
(Ë<< 
íds
;

120 
t
.
	`£t_°rög
(
x˘_°©e_©å
, 
o
.
	`c_°r
());

124 if(
	`°©e
(Ë=
x˘_¥ï¨ed
) {

125 
w_o°r°ªam
 
s
;

126 
s
 << 
	`gë_co‹dö©‹
(Ë<< 
íds
;

127 
t
.
	`£t_°rög
(
x˘_co‹dö©‹_©å
, 
s
.
	`c_°r
());

129 
t
.
	`£t_°rög
(
x˘_co‹dö©‹_©å
, "");

133 
t
.
	`£t_°rög
(
x˘_f‹˚d_ªad⁄ly_©å
,

134 (
	`f‹˚d_ªad⁄ly
()?"true":"false"));

135 
	}
}

138 
	gx˘_t
::
	$vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
)

140 
«mes_öô
.
	`cﬁÀ˘_«mes
(
t
);

141 
	}
}

	@src/sm/xct.cpp

54 
	~"w_deföes.h
"

58 
	#SM_SOURCE


	)

59 
	#XCT_C


	)

61 
	~<√w
>

62 
	#SM_LEVEL
 0

	)

63 
	~"sm_öt_1.h
"

65 
	~"sdesc.h
"

66 
	~"block_Æloc.h
"

67 
	~"és.h
"

69 
	~"lock.h
"

70 
	~<sm_öt_4.h
>

71 
	~"x˘_dïídít.h
"

72 
	~"x˘.h
"

73 
	~"logªc.h
"

74 
	~"sdesc.h
"

75 
	~"lock_x.h
"

76 
	~"sm_esˇœti⁄.h
"

77 
	~"chk±_£rül.h
"

78 
	~<w_°r°ªam.h
>

80 
	~<sm.h
>

81 
	~"és.h
"

82 
	~<s°ªam
>

83 
	~"¸ash.h
"

84 
	~"chk±.h
"

86 #ifde‡
EXPLICIT_TEMPLATE


87 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gx˘_t
, 
	gqueue_ba£d_lock_t
>;

88 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gx˘_t
, 
	gqueue_ba£d_lock_t
>;

89 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	gx˘_dïídít_t
,
	gqueue_ba£d_lock_t
>;

90 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	gx˘_dïídít_t
,
	gqueue_ba£d_lock_t
>;

91 
ãm∂©e
 
˛ass
 
	gw_keyed_li°_t
<
	gx˘_t
, 
	gqueue_ba£d_lock_t
, 
	gtid_t
>;

92 
ãm∂©e
 
˛ass
 
	gw_des˚nd_li°_t
<
	gx˘_t
, 
	gqueue_ba£d_lock_t
, 
	gtid_t
>;

93 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	g°id_li°_ñem_t
, 
	gqueue_ba£d_lock_t
>;

94 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	g°id_li°_ñem_t
, 
	gqueue_ba£d_lock_t
>;

95 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	glock_mode_t
>;

96 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	glockid_t
>;

97 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	g°id_t
>;

102 
	#DBGX
(
¨g
Ë
	`DBG
(<<"Åh."<<
	`me
()->
id
 << " " << "gtid. " << 
	`gtid
(Ë¨g)

	)

104 
	#UNDO_FUDGE_FACTOR
(
nbyãs
Ë(3*“byãs))

	)

106 #ifde‡
W_TRACE


107 "C" 
debugÊags
(const *);

109 
	$debugÊags
(c⁄° *
a
)

111 
_w_debug
.
	`£tÊags
(
a
);

112 
	}
}

115 
SPECIALIZE_CS
(
x˘_t
, 
_dummy
, (_dummy=0),

116 
_muãx
->
acquúe_1thªad_x˘_muãx
(),

117 
_muãx
->
ªÀa£_1thªad_x˘_muãx
());

169 íum { 
	mNODE_DELETED
=-2, 
	mNODE_LEFT
=-1, 
	mNODE_ACTIVE
, 
	mNODE_HEAD
 };

171 
	sx˘_lök
 {

172 
x˘_lök
* 
	m_√xt
;

173 
tid_t
 
	m_tid
;

174 
x˘_t
* 
	m_ow√r
;

175 
	m_node_°©e
;

176 
boﬁ
 
	m_Áke
;

177 
x˘_lök
 vﬁ©ûe* 
vthis
(Ë{  
	mthis
; }

178 
x˘_lök
(
x˘_t
* 
ow√r
, 
boﬁ
 
Áke
=
Ál£
)

179 : 
_√xt
(0), 
_ow√r
(
ow√r
), 
_node_°©e
(
NODE_ACTIVE
), 
_Áke
(
Áke
)

182 
ˇs_°©e
(
ex≥˘ed
, 
to_assign
) {

183  
©omic_ˇs_32
((*Ë&
_node_°©e
, 
ex≥˘ed
, 
to_assign
);

185 
x˘_lök
* 
_ª˛aim_™d_√xt
(x˘_lök* 
£¡öñ
);

188 
	sx˘_li°
 {

189 
x˘_li°
();

190 ~
x˘_li°
();

191 
ö£π
(
x˘_lök
* 
xd
);

192 
ö£π_exi°ög_unß„
(
x˘_t
* 
xd
);

193 
ªmove
(
x˘_lök
* 
xd
);

194 
tid_t
 
ﬁde°_tid
(Ë{  
™ch‹
()->
	m_tid
.
√xt
(); }

196 
x˘_lök
 
	m_™ch‹
;

197 
x˘_lök
* vﬁ©ûê
	m_èû
;

199 
x˘_lök
* 
sw≠_èû
(x˘_lök* 
xd
) {

200  (
	mx˘_lök
*Ë
©omic_sw≠_±r
(&
_èû
, 
xd
);

202 
x˘_lök
* 
ˇs_èû
(x˘_lök* 
ﬁd_èû
, x˘_lök* 
√w_èû
) {

203  (
	mx˘_lök
*Ë
©omic_ˇs_±r
(&
_èû
, 
ﬁd_èû
, 
√w_èû
);

206 
x˘_lök
* 
™ch‹
(Ë{  &
	m_™ch‹
; }

207 } 
	g_xli°
;

209 
	gx˘_i
::
maybe_lock
::
	$maybe_lock
(
boﬁ
 
Æªady_locked
)

210 : 
	$_Æªady_locked
(
Æªady_locked
)

212 if(!
_Æªady_locked
)

213 
chk±_£rül_m
::
	`chk±_acquúe
();

214 
	}
}

216 
	gx˘_i
::
maybe_lock
::~
	$maybe_lock
() {

217 if(!
_Æªady_locked
)

218 
chk±_£rül_m
::
	`chk±_ªÀa£
();

219 
	}
}

228 
	gx˘_i
::
	$x˘_i
(
boﬁ
 
Æªady_locked
)

229 : 
	`_lock
(
Æªady_locked
)

230 , 
	`_íd_xd
(*&
_xli°
.
_èû
)

231 , 
	`_cur_xd
(
_íd_xd
? 
_xli°
.
	$™ch‹
() : 0)

233 
	}
}

234 
x˘_i
::~
	$x˘_i
() {

235 
	}
}

237 
x˘_t
* 
x˘_i
::
	$√xt
(
boﬁ
 
ˇn_dñëe
) {

258 
_cur_xd
 !
_íd_xd
) {

259 
x˘_lök
* 
n
;

260  !(
n
=
_cur_xd
->
	`vthis
()->
_√xt
) ) ;

261 if(
NODE_LEFT
 =
n
->
	`vthis
()->
_node_°©e
) {

262 if(
ˇn_dñëe
) {

263 i‡(
n
 =*&
_xli°
.
_èû
) {

264 
	`w_as£π1
(
n
 =
_íd_xd
);

265 i‡(
_xli°
.
	`™ch‹
()->
_√xt
 =
n
)

266 
_xli°
.
	`™ch‹
()->
_√xt
 = 0;

267 
_cur_xd
 = 
_íd_xd
 = 
_xli°
.
_èû
 = 0;

272 
_cur_xd
->
_√xt
 = 
n
->_next;

273 
dñëe
 
n
;

278 
_cur_xd
 = 
n
;

283 
_cur_xd
 = 
n
;

284  
n
->
_ow√r
;

288 
	}
}

290 
x˘_t
* 
	gx˘_i
::
	$îa£_™d_√xt
() {

292 if(
_cur_xd
 =
_íd_xd
)

295 
x˘_lök
* 
ﬁd_xd
 = 
_cur_xd
;

296 i‡(
ﬁd_xd
->
_ow√r
) {

297 
ﬁd_xd
->
_ow√r
->
_xlök
 = 0;

298 
ﬁd_xd
->
_ow√r
 = 0;

300 
x˘_t
* 
n
 = 
	`√xt
(
åue
);

301 i‡(
ﬁd_xd
->
_node_°©e
 =
NODE_HEAD
) {

302 
x˘_lök
* 
™ch‹
 = 
_xli°
.
	`™ch‹
();

303 i‡(
_cur_xd
) {

304 
™ch‹
->
_tid
 = 
_cur_xd
->_tid;

305 
_cur_xd
->
_node_°©e
 = 
NODE_HEAD
;

307 
™ch‹
->
_√xt
 = 
_cur_xd
;

308 
dñëe
 
ﬁd_xd
;

311 
ﬁd_xd
->
_node_°©e
 = 
NODE_LEFT
;

313  
n
;

314 
	}
}

318 
	$¥ëty_¥öt
(
o°ªam
 &
out
, 
x˘_li°
 const* ) {

319 
x˘_lök
* 
cur
 = &
_xli°
.
_™ch‹
;

320 
out
 << "[™ch‹: " << 
cur
->
_tid
 << "] ";

321  (
cur
=cur->
_√xt
) ) {

322 
out
 << 
cur
->
_tid
;

323 if(
cur
->
_node_°©e
 =
NODE_LEFT
)

324 
out
 << "*";

325 if(
cur
->
_node_°©e
 =
NODE_HEAD
)

326 
out
 << "(H)";

328 
out
 << " ";

330 
	}
}

331 
	~<s°ªam
>

333 
	$db_¥ëty_¥öt
(
x˘_li°
 c⁄°* 
ªc
, , const* ) {

334 
°rög°ªam
 
out
;

335 
°rög
 
°r
;

336 
out
.
	`°r
("");

337 
	`¥ëty_¥öt
(
out
, 
ªc
);

338 
°r
 = 
out
.
	`°r
();

339  
°r
.
	`c_°r
();

340 
	}
}

342 
	gx˘_li°
::
	$x˘_li°
()

343 : 
	`_™ch‹
(0, 
åue
)

344 , 
	$_èû
(0)

346 
_™ch‹
.
_tid
 = 
tid_t
::
nuŒ
.
	`√xt
();

347 
	}
}

349 
	gx˘_li°
::~
	$x˘_li°
() {

350 
	`w_as£π1
(0 =
_™ch‹
.
_√xt
);

351 
	}
}

356 
	gx˘_li°
::
	$ö£π
(
x˘_lök
* 
xd
) {

357 
xd
->
_tid
 = 
tid_t
::
nuŒ
;

358 
xd
->
_√xt
 = 0;

359 
xd
->
_node_°©e
 = 
NODE_ACTIVE
;

360 
	`memb¨_¥odu˚r
();

361 
x˘_lök
* 
¥ed
 = 
	`sw≠_èû
(
xd
);

362 if(
¥ed
) {

364  
¥ed
->
	`vthis
()->
_tid
.
	`övÆid
() ) { }

365 
xd
->
_tid
 = 
¥ed
->_tid.
	`√xt
();

366 
	`memb¨_¥odu˚r
();

367 
¥ed
->
_√xt
 = 
xd
;

371 
xd
->
_tid
 = 
_™ch‹
._tid;

372 
xd
->
_node_°©e
 = 
NODE_HEAD
;

373 
	`memb¨_¥odu˚r
();

374 
_™ch‹
.
_√xt
 = 
xd
;

376 
	}
}

378 
	gx˘_li°
::
	$ö£π_exi°ög_unß„
(
x˘_t
* 
ow√r
) {

384 
x˘_lök
* 
_xlök
 = 
ow√r
->_xlök = 
√w
 
	`x˘_lök
(owner);

385 
tid_t
 
t
 = 
_xlök
->
_tid
 = 
ow√r
->
	`tid
();

386 
	`w_as£π1
(
nŸ
 
t
.
	`övÆid
());

387 
	`w_as£π1
(
smÀvñ_0
::
›î©ög_mode
 =smÀvñ_0::
t_ö_™Æysis
);

389 if(
_èû
) {

390 if(
t
 < 
_èû
->
_tid
) {

392 if(
t
 < 
_™ch‹
.
_tid
) {

394 
_™ch‹
.
_tid
 = 
t
;

395 
_xlök
->
_√xt
 = 
_™ch‹
._next;

396 
_™ch‹
.
_√xt
 = 
_xlök
;

397 
_xlök
->
_node_°©e
 = 
NODE_HEAD
;

398 
_xlök
->
_√xt
->
_node_°©e
 = 
NODE_ACTIVE
;

402 
x˘_lök
* 
xd
 = &
_™ch‹
;

404 
x˘_lök
* 
√xt
 = 
xd
->
_√xt
;

405 if(
t
 < 
√xt
->
_tid
)

407 
xd
=
√xt
;

409 
	`w_as£π1
(
t
 !
xd
->
_tid
);

410 
_xlök
->
_√xt
 = 
xd
->_next;

411 
xd
->
_√xt
 = 
_xlök
;

412 
_xlök
->
_node_°©e
 = 
NODE_ACTIVE
;

417 
_xlök
->
_√xt
 = 
NULL
;

418 
_èû
 = _èû->
_√xt
 = 
_xlök
;

419 
_xlök
->
_node_°©e
 = 
NODE_ACTIVE
;

424 
_™ch‹
.
_tid
 = 
t
;

425 
_xlök
->
_√xt
 = 
NULL
;

426 
_èû
 = 
_™ch‹
.
_√xt
 = 
_xlök
;

427 
_xlök
->
_node_°©e
 = 
NODE_HEAD
;

429 
	}
}

431 
	gx˘_li°
::
	$ªmove
(
x˘_lök
* 
xd
) {

432 i‡(
nŸ
 
xd
)

435 
x˘_lök
* 
√xt
;

436 if(
xd
->
_ow√r
) {

437 
xd
->
_ow√r
->
_xlök
 = 0;

438 
xd
->
_ow√r
 = 0;

458 
√xt
 = 
xd
->
	`vthis
()->
_√xt
;

459 if(
√xt
) {

460 
ª˛aim
:

462 if(
NODE_LEFT
 =
√xt
->
	`vthis
()->
_node_°©e
) {

464 
x˘_lök
* 
a·î_√xt
 = 
√xt
->
	`vthis
()->
_√xt
;

465 if(
a·î_√xt
) {

467 
xd
->
_√xt
 = 
a·î_√xt
;

468 
	`memb¨_¥odu˚r
();

469 
dñëe
 
√xt
;

470 
√xt
 = 
a·î_√xt
;

471 
ª˛aim
;

480 
s
 = 
xd
->
	`ˇs_°©e
(
NODE_ACTIVE
, 
NODE_LEFT
);

481 if(
NODE_ACTIVE
 !
s
) {

483 if(
√xt
) {

485 
	`w_as£π1
(
NODE_HEAD
 =
s
);

486 
h™doff
:

487 
_™ch‹
.
_tid
 = 
√xt
->_tid;

488 
_™ch‹
.
_√xt
 = 
√xt
;

489 
	`memb¨_íãr
();

490 
dñëe
 
xd
;

491 
xd
 = 
√xt
;

492 
s2
 = 
xd
->
	`ˇs_°©e
(
NODE_ACTIVE
, 
NODE_HEAD
);

493 if(
NODE_ACTIVE
 !
s2
) {

495 
	`w_as£π1
(
NODE_LEFT
 =
s2
);

496 
√xt
 = 
xd
->
	`vthis
()->
_√xt
;

497 if(
√xt
) {

499 
h™doff
;

503 
˛ór_queue
;

510 
˛ór_queue
:

514 
_™ch‹
.
_tid
 = 
xd
->_tid.
	`√xt
();

515 
_™ch‹
.
_√xt
 = 0;

516 
	`memb¨_¥odu˚r
();

517 if(
xd
 =*&
_èû
 && xd =
	`ˇs_èû
(xd, 0)) {

519 
dñëe
 
xd
;

523  !(
√xt
=
xd
->
	`vthis
()->
_√xt
) ) ;

526 
_™ch‹
.
_√xt
 = 
√xt
;

527 
h™doff
;

532 
	}
}

540 
	#USE_OBJECT_CACHE_FOR_XCT_IMPL
 1

	)

542 #i‡
USE_BLOCK_ALLOC_FOR_XCT_IMPL


543 
DECLARE_TLS
(
block_Æloc
<
x˘_t
>, 
x˘_poﬁ
);

544 
DECLARE_TLS
(
block_Æloc
<
x˘_t
::
x˘_c‹e
>, 
c‹e_poﬁ
);

545 
	#NEW_XCT
 
	`√w
 (*
x˘_poﬁ
Ë
x˘_t


	)

546 
	#DELETE_XCT
(
xd
Ë
x˘_poﬁ
->
	`de°roy_obje˘
(xd)

	)

547 
	#NEW_CORE
 
	`√w
 (*
c‹e_poﬁ
Ë
x˘_c‹e


	)

548 
	#DELETE_CORE
(
c
Ë
c‹e_poﬁ
->
	`de°roy_obje˘
(c)

	)

550 #ñi‡
USE_OBJECT_CACHE_FOR_XCT_IMPL


551 
	#COMMA2
 
COMMA


	)

552 
DECLARE_TLS
(
PROTECT
(
obje˘_ˇche
<
x˘_t
, PROTECT(
obje˘_ˇche_öôülizög_Á˘‹y
<x˘_t>)>), 
x˘_poﬁ
);

553 
DECLARE_TLS
(
PROTECT
(
obje˘_ˇche
<
x˘_t
::
x˘_c‹e
, PROTECT(
obje˘_ˇche_öôülizög_Á˘‹y
<x˘_t::x˘_c‹e>)>), 
c‹e_poﬁ
);

554 
	#NEW_XCT
 
x˘_poﬁ
->
acquúe


	)

555 
	#DELETE_XCT
(
xd
Ë
x˘_poﬁ
->
	`ªÀa£
(xd)

	)

556 
	#NEW_CORE
 
c‹e_poﬁ
->
acquúe


	)

557 
	#DELETE_CORE
(
c
Ë
c‹e_poﬁ
->
	`ªÀa£
(c)

	)

560 
	#NEW_XCT
 
√w
 
x˘_t


	)

561 
	#DELETE_XCT
(
xd
Ë
dñëe
 
	)
xd

562 
	#NEW_CORE
 
√w
 
x˘_c‹e


	)

563 
	#DELETE_CORE
(
c
Ë
dñëe
 
	)
c

566 
x˘_t
*

567 
	gx˘_t
::
	$√w_x˘
(

568 
sm_°©s_öfo_t
* 
°©s
,

569 
timeout_ö_ms
 
timeout
)

571 
x˘_c‹e
* 
c‹e
 = 
	`NEW_CORE
(
tid_t
::
nuŒ
, 
x˘_a˘ive
, 
timeout
);

572 
x˘_t
* 
xd
 = 
	`NEW_XCT
(
c‹e
, 
°©s
, 
	`l¢_t
(),Üsn_t());

573 
	`me
()->
	`©èch_x˘
(
xd
);

574  
xd
;

575 
	}
}

577 
x˘_t
*

578 
	gx˘_t
::
	$√w_x˘
(c⁄° 
tid_t
& 
t
, 
°©e_t
 
s
, c⁄° 
l¢_t
& 
œ°_l¢
,

579 c⁄° 
l¢_t
& 
undo_nxt
, 
timeout_ö_ms
 
timeout
)

587 
	`w_as£π1
(
›î©ög_mode
 =
t_ö_™Æysis
);

588 
	`w_as£π1
(
nŸ
 
t
.
	`övÆid
());

589 
x˘_c‹e
* 
c‹e
 = 
	`NEW_CORE
(
t
, 
s
, 
timeout
);

590 
x˘_t
* 
xd
 = 
	`NEW_XCT
(
c‹e
, (
sm_°©s_öfo_t
*)0, 
œ°_l¢
, 
undo_nxt
);

593 
	`w_as£π1
(
	`me
()->
	`x˘
() == 0);

594  
xd
;

595 
	}
}

598 
	gx˘_t
::
	$de°roy_x˘
(
x˘_t
* 
xd
)

600 
x˘_c‹e
* 
c‹e
 = 
xd
->
_c‹e
;

601 
	`DELETE_XCT
(
xd
);

602 
	`DELETE_CORE
(
c‹e
);

603 
	}
}

605 
boﬁ
 
	gñr_íabÀd
 = 
Ál£
;

608 
	gx˘_t
::
	$£t_ñr_íabÀd
(
boﬁ
 
íabÀ
) {

609 
ñr_íabÀd
 = 
íabÀ
;

610 
	}
}

612 #i‡
W_DEBUG_LEVEL
 > 2

614 "C" 
	$dumpX˘
(c⁄° 
x˘_t
 *
x
Ë{ if(xË{ 
cout
 << *x <<
ídl
;} 
	}
}

617 ˛as†
	cPrötSmthªadById
 : 
public
 
SmthªadFunc


619 
public
:

620 
	$PrötSmthªadById
(
o°ªam
& 
out
, 
i
 ) : 
	`o
(out), 
	$_i
(0) {

621 
_i
 = 
°hªad_ba£_t
::
	`id_t
(
i
);

623 
	$›î©‹
()(c⁄° 
smthªad_t
& 
smthªad
);

624 
¥iv©e
:

625 
o°ªam
& 
o
;

626 
°hªad_ba£_t
::
id_t
 
_i
;

627 
	}
};

628 
	gPrötSmthªadById
::
	$›î©‹
()(c⁄° 
smthªad_t
& 
smthªad
)

630 i‡(
smthªad
.
id
 =
_i
) {

631 
o
 << "--------------------" << 
ídl
 << 
smthªad
;

633 
	}
}

637 
	$dumpThªadById
(
i
) {

638 
PrötSmthªadById
 
	`f
(
cout
, 
i
);

639 
smthªad_t
::
	`f‹_óch_smthªad
(
f
);

640 
	}
}

649 
x˘_t
::
	$˛ónup
(
boﬁ
 
di•o£_¥ï¨ed
)

651 
≈ª∑ªd
 = 0;

652 
x˘_t
* 
√xt
;

658 
x˘_i
 
i
;

659 
x˘_t
* 
xd
=
i
.
	`√xt
(); xd; xd=
√xt
) {

660 
xd
->
	`°©e
()) {

661 
x˘_a˘ive
: {

662 
	`me
()->
	`©èch_x˘
(
xd
);

670 
√xt
 = 
i
.
	`îa£_™d_√xt
();

671 i‡(
shutdown_˛ón
) {

672 
	`W_COERCE
–
xd
->
	`ab‹t
() );

674 
	`W_COERCE
–
xd
->
	`di•o£
() );

676 
	`DELETE_XCT
(
xd
);

680 
x˘_‰ìög_•a˚
:

681 
x˘_íded
: {

682 
√xt
 = 
i
.
	`îa£_™d_√xt
();

683 
	`DBG
(<< 
xd
->
	`tid
() <<"deleting "

684 << " w/ sèã=" << 
xd
->
	`°©e
() );

685 
	`DELETE_XCT
(
xd
);

689 
x˘_¥ï¨ed
: {

690 if(
di•o£_¥ï¨ed
) {

691 
	`me
()->
	`©èch_x˘
(
xd
);

692 
√xt
 = 
i
.
	`îa£_™d_√xt
();

693 
	`W_COERCE
–
xd
->
	`di•o£
() );

694 
	`DELETE_XCT
(
xd
);

696 
	`DBG
(<< 
xd
->
	`tid
() <<"keep --Örepared ");

697 
≈ª∑ªd
++;

698 
√xt
 = 
i
.
	`√xt
(
åue
);

704 
	`DBG
(<< 
xd
->
	`tid
() <<"skipping "

705 << " w/ sèã=" << 
xd
->
	`°©e
() );

706 
√xt
 = 
i
.
	`√xt
(
åue
);

713  
≈ª∑ªd
;

714 
	}
}

727 
w_ba£_t
::
uöt4_t


728 
x˘_t
::
	$num_a˘ive_x˘s
()

730 
w_ba£_t
::
uöt4_t
 
num
 = 0;

731 
x˘_i
 
ô
; it.
	`√xt
(); 
num
++) { }

732  
num
;

733 
	}
}

744 
x˘_t
*

745 
x˘_t
::
	$look_up
(c⁄° 
tid_t
& 
tid
)

747 
x˘_t
* 
xd
;

748 
x˘_i
 
	`ôî
(
åue
);

750 (
xd
 = 
ôî
.
	`√xt
()Ë&& xd->
	`tid
(Ë< 
tid
);

751  (
xd
 && xd->
	`tid
(Ë=
tid
)? xd : 0;

752 
	}
}

754 
x˘_lock_öfo_t
*

755 
x˘_t
::
	$lock_öfo
() const {

756  
_c‹e
->
_lock_öfo
;

757 
	}
}

759 
timeout_ö_ms


760 
x˘_t
::
	$timeout_c
() const {

761  
_c‹e
->
_timeout
;

762 
	}
}

764 
tid_t


765 
x˘_t
::
	$tid
() const

767  
	`lock_öfo
()->
	`tid
();

768 
	}
}

777 
tid_t


778 
x˘_t
::
	$ﬁde°_tid
()

780  
_xli°
.
	`ﬁde°_tid
();

781 
	}
}

784 
rc_t


785 
x˘_t
::
	$ab‹t
(
boﬁ
 
ßve_°©s_°ru˘uª
 )

787 if(
	`is_ö°rumíãd
(Ë&& !
ßve_°©s_°ru˘uª
) {

788 
dñëe
 
__°©s
;

789 
__°©s
 = 0;

791  
	`_ab‹t
();

792 
	}
}

802 
rc_t


803 
x˘_t
::
	$ªcovî2pc
(c⁄° 
gtid_t
 &
g
,

804 
boﬁ
 ,

805 
x˘_t
 *&
xd
)

807 
x˘_i
 
i
;

808 (
xd
 = 
i
.
	`√xt
())) {

809 if–
xd
->
	`°©e
(Ë=
x˘_¥ï¨ed
 ) {

810 if(
xd
->
	`gtid
() &&

811 *(
xd
->
	`gtid
()Ë=
g
) {

814  
RCOK
;

818  
	`RC
(
eNOSUCHPTRANS
);

819 
	}
}

829 
rc_t


830 
x˘_t
::
	$quîy_¥ï¨ed
(
li°_Àn
, 
gtid_t
 
li°
[])

832 
x˘_i
 
ôî
;

833 
i
=0;

834 
x˘_t
 *
xd
;

835 (
xd
 = 
ôî
.
	`√xt
())) {

836 if–
xd
->
	`°©e
(Ë=
x˘_¥ï¨ed
 ) {

837 if(
xd
->
	`gtid
()) {

838 if(
i
 < 
li°_Àn
) {

839 
li°
[
i
++]=*(
xd
->
	`gtid
());

841  
	`RC
(
fcFULL
);

848  
RCOK
;

849 
	}
}

858 
rc_t


859 
x˘_t
::
	$quîy_¥ï¨ed
(&
numtids
)

861 
x˘_i
 
ôî
;

862 
numtids
=0;

863 
x˘_t
 *
xd
;

864 (
xd
 = 
ôî
.
	`√xt
())) {

865 if–
xd
->
	`°©e
(Ë=
x˘_¥ï¨ed
 ) {

866 
numtids
++;

869  
RCOK
;

870 
	}
}

873 
x˘_t
::
	$num_thªads
()

875  
_c‹e
->
_thªads_©èched
;

876 
	}
}

878 #i‡
CHECK_NESTING_VARIABLES


881 
check_com≥nßãd_›_√°ög
::
	$acquúe_1thªad_log_dïth
(
x˘_t
* 
xd
, 
dÊt
)

885 if(
xd
->
	`num_thªads
(Ë> 1Ë 
dÊt
;

886  
xd
->
	`acquúe_1thªad_log_dïth
();

887 
	}
}

890 
x˘_t
::
	$com≥nßãd_›_dïth
() const

892  
_ö_com≥nßãd_›
;

893 
	}
}

896 
check_com≥nßãd_›_√°ög
::
	$com≥nßãd_›_dïth
(
x˘_t
* 
xd
, 
dÊt
)

900 if(
xd
->
	`num_thªads
(Ë> 1Ë 
dÊt
;

901  
xd
->
	`com≥nßãd_›_dïth
();

902 
	}
}

907 
auto_ªÀa£_™ch‹_t
::~
	$auto_ªÀa£_™ch‹_t
()

909 if(
_xd
Ë_xd->
	`ªÀa£_™ch‹
(
_™d_com≥nßã
 
	`LOG_COMMENT_USE
("autorel"));

910 
	}
}

913 
x˘_t
::
	$f‹˚_n⁄blockög
()

915 
	`lock_öfo
()->
	`£t_n⁄blockög
();

916 
	}
}

918 
rc_t


919 
x˘_t
::
	$commô
(
boﬁ
 
œzy
,
l¢_t
* 
∂a°l¢
)

926  
	`_commô
(
t_n‹mÆ
 | (
œzy
 ? 
t_œzy
 :Å_n‹mÆ), 
∂a°l¢
);

927 
	}
}

930 
rc_t


931 
x˘_t
::
	$chaö
(
boﬁ
 
œzy
)

933 
	`w_as£π9
(
	`⁄e_thªad_©èched
());

934  
	`_commô
(
t_chaö
 | (
œzy
 ? 
t_œzy
 :Å_chain));

935 
	}
}

938 
boﬁ


939 
x˘_t
::
	$lock_ˇche_íabÀd
()

941 
boﬁ
 vﬁ©ûe* 
ªsu…
 = &
_c‹e
->
_lock_ˇche_íabÀ
;

942  *
ªsu…
;

943 
	}
}

945 
boﬁ


946 
x˘_t
::
	$£t_lock_ˇche_íabÀ
(
boﬁ
 
íabÀ
)

948 
boﬁ
 
ªsu…
;

949 
	`memb¨_exô
();

950 
ªsu…
 = 
	`©omic_sw≠_8
((*Ë&
_c‹e
->
_lock_ˇche_íabÀ
, 
íabÀ
);

951 
	`memb¨_íãr
();

952  
ªsu…
;

953 
	}
}

955 
sdesc_ˇche_t
*

956 
x˘_t
::
	$√w_sdesc_ˇche_t
()

961 
sdesc_ˇche_t
* 
_sdesc_ˇche
 = 
√w
 sdesc_cache_t;

962 i‡(!
_sdesc_ˇche
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

963  
_sdesc_ˇche
;

964 
	}
}

967 
x˘_t
::
	$dñëe_sdesc_ˇche_t
(
sdesc_ˇche_t
* &
sdc
)

969 
dñëe
 
sdc
;

970 
sdc
 = 
NULL
;

971 
	}
}

973 
x˘_log_t
*

974 
x˘_t
::
	$√w_x˘_log_t
()

976 
x˘_log_t
* 
l
 = 
√w
 xct_log_t;

977 i‡(!
l
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

978  
l
;

979 
	}
}

982 
x˘_t
::
	$dñëe_x˘_log_t
(
x˘_log_t
* &
l
)

984 
dñëe
 
l
;

985 
l
 = 
NULL
;

986 
	}
}

988 
lockid_t
*

989 
x˘_t
::
	$√w_lock_hõørchy
()

991 
lockid_t
* 
l
 = 
√w
Üockid_à[lockid_t::
NUMLEVELS
];

992 i‡(!
l
Ë
	`W_FATAL
(
eOUTOFMEMORY
);

993  
l
;

994 
	}
}

997 
x˘_t
::
	$dñëe_lock_hõørchy
(
lockid_t
* &
l
)

999 
dñëe
 [] 
l
;

1000 
l
 = 
NULL
;

1001 
	}
}

1003 
sdesc_ˇche_t
*

1004 
x˘_t
::
	$sdesc_ˇche
() const

1006  
	`me
()->
	`sdesc_ˇche
();

1007 
	}
}

1016 
x˘_t
::
	$°ól
(
lockid_t
*&
l
, 
sdesc_ˇche_t
*&
s
, 
x˘_log_t
*&
x
)

1019 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1021 if–!
l
 ) {

1022 
l
 = 
	`√w_lock_hõørchy
();

1027 if–!
s
 ) {

1028 
°d
::
	`sw≠
(
s
, 
__ßved_sdesc_ˇche_t
);

1030 if–!
s
 ) {

1031 
s
 = 
	`√w_sdesc_ˇche_t
();

1034 if–!
x
 ) {

1035 
x
 = 
	`√w_x˘_log_t
();

1039 
	}
}

1049 
x˘_t
::
	$°ash
(
lockid_t
*& , 
sdesc_ˇche_t
*& 
s
, 
x˘_log_t
*& )

1052 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1055 if(
__ßved_sdesc_ow√r
) {

1056 if(
__ßved_sdesc_ˇche_t
) {

1057 
	`DBGX
(<<"°ash: dñëê" << 
s
);

1058 
dñëe
 
s
;

1060 { 
__ßved_sdesc_ˇche_t
 = 
s
;}

1061 
s
 = 0;

1065 
	}
}

1069 
rc_t


1070 
x˘_t
::
	$check_lock_tŸÆs
(
√x
, 
nix
, 
nsix
, 
√xã¡s
) const

1072 
num_EX
, 
num_IX
, 
num_SIX
, 
num_exã¡s
;

1073 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
–
num_EX
, 
num_IX
, 
num_SIX
, 
num_exã¡s
));

1074 if–
√x
 !
num_EX
 || 
nix
 !
num_IX
 || 
nsix
 !
num_SIX
) {

1085 
	`w_as£π1
(
√x
 <
num_EX
);

1087 if(
√xã¡s
 !
num_exã¡s
) {

1088 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1089 << "FATAL: " <<
ídl


1090 << "√xã¡†logged i¿x˘_¥ï¨e_fi_log:" << 
√xã¡s
 <<
ídl


1092 << "x˘_¥ï¨e_lk_logánd x˘_¥ï¨e_Æk_log†: " << 
num_exã¡s


1093 << 
ídl
;

1094 
lm
->
	`dump
(
smÀvñ_0
::
îæog
->
˛og
);

1095 
	`W_FATAL
(
eINTERNAL
);

1097 
	`w_as£π1
(
√xã¡s
 =
num_exã¡s
);

1099  
RCOK
;

1100 
	}
}

1102 
rc_t


1103 
x˘_t
::
	$obèö_locks
(
lock_mode_t
 
mode
, 
num
, c⁄° 
lockid_t
 *
locks
)

1107 
sm_esˇœti⁄_t
 
SAVE
;

1109 #i‡
W_DEBUG_LEVEL
 > 2

1110 
b_EX
, 
b_IX
, 
b_SIX
, 
b_exã¡s
;

1111 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
b_EX
, 
b_IX
, 
b_SIX
, 
b_exã¡s
));

1112 
	`DBG
(<< 
b_EX
 << "+" << 
b_IX
 << "+" << 
b_SIX
 << "+" << 
b_exã¡s
);

1115 
i
;

1116 
rc_t
 
rc
;

1118 
i
=0; i<
num
; i++) {

1119 
	`DBG
(<<"ObèöögÜock : " << 
locks
[
i
] << " i¿modê" << (
mode
));

1120 #i‡
W_DEBUG_LEVEL
 > 2

1121 
bb_EX
, 
bb_IX
, 
bb_SIX
, 
bb_exã¡s
;

1122 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
bb_EX
, 
bb_IX
, 
bb_SIX
, 
bb_exã¡s
));

1123 
	`DBG
(<< 
bb_EX
 << "+" << 
bb_IX
 << "+" << 
bb_SIX
 << "+" << 
bb_exã¡s
);

1126 
rc
 =
lm
->
	`lock
(
locks
[
i
], 
mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

1127 if(
rc
.
	`is_îr‹
()) {

1128 
lm
->
	`dump
(
smÀvñ_0
::
îæog
->
˛og
);

1129 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1130 << "ˇn'àobèöÜock " <<
rc
 <<
ídl
;

1131 
	`W_FATAL
(
eINTERNAL
);

1134 
a_EX
, 
a_IX
, 
a_SIX
, 
a_exã¡s
;

1135 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
a_EX
, 
a_IX
, 
a_SIX
, 
a_exã¡s
));

1136 
	`DBG
(<< 
a_EX
 << "+" << 
a_IX
 << "+" << 
a_SIX
 << "+" << 
a_exã¡s
);

1137 
mode
) {

1138 
EX
:

1139 
	`w_as£π9
((
bb_EX
 + 1Ë=(
a_EX
));

1141 
IX
:

1142 
SIX
:

1143 
	`w_as£π9
((
bb_IX
 + 1Ë=(
a_IX
));

1152  
RCOK
;

1153 
	}
}

1155 
rc_t


1156 
x˘_t
::
	$obèö_⁄e_lock
(
lock_mode_t
 
mode
, c⁄° 
lockid_t
 &
lock
)

1160 
	`DBG
(<<"Obèöög 1Üock : " << 
lock
 << " i¿modê" << (
mode
));

1162 
sm_esˇœti⁄_t
 
SAVE
;

1163 
rc_t
 
rc
;

1164 #i‡
W_DEBUG_LEVEL
 > 2

1165 
b_EX
, 
b_IX
, 
b_SIX
, 
b_exã¡s
;

1166 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
b_EX
, 
b_IX
, 
b_SIX
, 
b_exã¡s
));

1167 
	`DBG
(<< 
b_EX
 << "+" << 
b_IX
 << "+" << 
b_SIX
 << "+" << 
b_exã¡s
);

1169 
rc
 = 
lm
->
	`lock
(
lock
, 
mode
, 
t_l⁄g
, 
WAIT_IMMEDIATE
);

1170 if(
rc
.
	`is_îr‹
()) {

1171 
lm
->
	`dump
(
smÀvñ_0
::
îæog
->
˛og
);

1172 
smÀvñ_0
::
îæog
->
˛og
 << 
Áèl_¥io


1173 << "ˇn'àobèöÜock " <<
rc
 <<
ídl
;

1174 
	`W_FATAL
(
eINTERNAL
);

1176 #i‡
W_DEBUG_LEVEL
 > 2

1178 
a_EX
, 
a_IX
, 
a_SIX
, 
a_exã¡s
;

1179 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
a_EX
, 
a_IX
, 
a_SIX
, 
a_exã¡s
));

1180 
	`DBG
(<< 
a_EX
 << "+" << 
a_IX
 << "+" << 
a_SIX
 << "+" << 
a_exã¡s
);

1183 if(
b_EX
 + 
b_IX
 + 
b_SIX
 =
a_EX
 + 
a_IX
 + 
a_SIX
) {

1184 
	`DBG
(<<"DIDN'T GET LOCK " << 
lock
 << " i¿modê" << (
mode
));

1186 
mode
) {

1187 
EX
:

1188 
	`w_as£π9
((
b_EX
 + 1Ë=(
a_EX
));

1190 
IX
:

1191 
	`w_as£π9
((
b_IX
 + 1Ë=(
a_IX
));

1193 
SIX
:

1194 
	`w_as£π9
((
b_SIX
 + 1Ë=(
a_SIX
));

1202  
RCOK
;

1203 
	}
}

1205 
NORET


1206 
sm_esˇœti⁄_t
::
	$sm_esˇœti⁄_t
–
öt4_t
 
p
, i¡4_à
s
, i¡4_à
v
)

1208 
	`w_as£π9
(
	`me
()->
	`x˘
());

1209 
	`me
()->
	`x˘
()->
	`GëEsˇœti⁄Thªshﬁds
(
_p
, 
_s
, 
_v
);

1210 
	`me
()->
	`x˘
()->
	`SëEsˇœti⁄Thªshﬁds
(
p
, 
s
, 
v
);

1211 
	}
}

1212 
NORET


1213 
sm_esˇœti⁄_t
::~
	$sm_esˇœti⁄_t
()

1215 
	`w_as£π9
(
	`me
()->
	`x˘
());

1216 
	`me
()->
	`x˘
()->
	`SëEsˇœti⁄Thªshﬁds
(
_p
, 
_s
, 
_v
);

1217 
	}
}

1222 
smÀvñ_0
::
swôch_t


1223 
x˘_t
::
	$£t_log_°©e
(
swôch_t
 
s
)

1225 
x˘_log_t
 *
möe
 = 
	`me
()->
	`x˘_log
();

1227 
swôch_t
 
ﬁd
 = (
möe
->
	`x˘_log_is_off
()? 
OFF
: 
ON
);

1229 if(
s
==
OFF
Ë
möe
->
	`£t_x˘_log_off
();

1231 
möe
->
	`£t_x˘_log_⁄
();

1233  
ﬁd
;

1234 
	}
}

1237 
x˘_t
::
	$ª°‹e_log_°©e
(
swôch_t
 
s
)

1239 (Ë
	`£t_log_°©e
(
s
);

1240 
	}
}

1243 #w¨nög 
Assumes
 
ˇŒî
 
hﬁds
 
chk±_£rül_m
. 
Seg
 
Áu…
 
Ÿhîwi£


1244 
tid_t


1245 
x˘_t
::
	$younge°_tid
()

1247 
x˘_i
 
	`ô
(
åue
);

1248 
x˘_lök
* 
who
;

1249 if(
ô
.
_íd_xd
) {

1250 
tid_t
 
tid
;

1251  
ô
.
_íd_xd
->
	`vthis
()->
_tid
.
	`övÆid
() ) { }

1252 
who
 = 
ô
.
_íd_xd
;

1255 
who
 = 
_xli°
.
	`™ch‹
();

1257  
who
->
_tid
;

1258 
	}
}

1262 
x˘_t
::
	$f‹˚_ªad⁄ly
()

1264 
	`acquúe_1thªad_x˘_muãx
();

1265 
_c‹e
->
_f‹˚d_ªad⁄ly
 = 
åue
;

1266 
	`ªÀa£_1thªad_x˘_muãx
();

1267 
	}
}

1269 
smÀvñ_0
::
fûeoff_t


1270 
x˘_t
::
	$gë_log_•a˚_u£d
() const

1272  
_log_byãs_u£d


1273 + 
_log_byãs_ªady


1274 + 
_log_byãs_rsvd
;

1275 
	}
}

1277 
rc_t


1278 
x˘_t
::
	$waô_f‹_log_•a˚
(
fûeoff_t
 
amt
) {

1279 
rc_t
 
rc
 = 
RCOK
;

1280 if(
log
) {

1281 
fûeoff_t
 
°ûl_√eded
 = 
amt
;

1283 if(
log
->
	`ª£rve_•a˚
(
°ûl_√eded
)) {

1284 
°ûl_√eded
 = 0;

1287 
timeout_ö_ms
 
timeout
 = 
	`fú°_l¢
().
	`vÆid
()? 100 : 
WAIT_FOREVER
;

1288 
	`Ârötf
(
°dîr
, "%s:%d: first_lsn().valid()? %dÅimeout=%d\n",

1289 
__FILE__
, 
__LINE__
, 
	`fú°_l¢
().
	`vÆid
(), 
timeout
);

1290 
rc
 = 
log
->
	`waô_f‹_•a˚
(
°ûl_√eded
, 
timeout
);

1291 if(
rc
.
	`is_îr‹
()) {

1297 
_log_byãs_ªady
 +
amt
 - 
°ûl_√eded
;

1299  
rc
;

1300 
	}
}

1303 
x˘_t
::
	$dump
(
o°ªam
 &
out
)

1305 
out
 << "xct_t: "

1306 << 
	`num_a˘ive_x˘s
() << "Åransactions"

1307 << 
ídl
;

1308 
x˘_i
 
i
;

1309 
x˘_t
* 
xd
;

1310 (
xd
 = 
i
.
	`√xt
())) {

1311 
out
 << "********************" << 
ídl
;

1312 
out
 << *
xd
 << 
ídl
;

1314 
	}
}

1317 
x˘_t
::
	$£t_timeout
(
timeout_ö_ms
 
t
)

1319 
_c‹e
->
_timeout
 = 
t
;

1320 
	}
}

1322 
w_rc_t


1323 
x˘_log_w¨n_check_t
::
	$check
(
x˘_t
 *& 
_vi˘im
)

1340 
	`DBG
(<<"gíî©e_log_w¨nög†" << 
	`me
()->
	`gíî©e_log_w¨nögs
());

1344 i‡(
	`me
()->
	`gíî©e_log_w¨nögs
() &&

1345 
smÀvñ_0
::
log
 &&

1346 
smÀvñ_0
::
log_w¨n_åiggî
 > 0)

1348 
_vi˘im
 = 
NULL
;

1349 
	`w_as£π1
(
smÀvñ_1
::
log
 !
NULL
);

1352 
smÀvñ_0
::
fûeoff_t
 
À·
 = 
smÀvñ_1
::
log
->
	`•a˚_À·
() ;

1353 
	`DBG
(<<"À· " << 
À·
 << "Åriggî " << 
smÀvñ_0
::
log_w¨n_åiggî
);

1355 if–
À·
 < 
smÀvñ_0
::
log_w¨n_åiggî
 )

1358 
log
->
	`Êush
÷og->
	`cuº_l¢
());

1360 if–
À·
 < 
smÀvñ_0
::
log_w¨n_åiggî
 )

1362 if(
log_w¨n_ˇŒback
) {

1363 
x˘_t
 *
v
 = 
	`x˘
();

1366 if(
v
 && v->
	`log_w¨n_is_⁄
()) {

1367 
x˘_i
 
	`i
(
åue
);

1368 
l¢_t
 
l
 = 
smÀvñ_1
::
log
->
	`globÆ_mö_l¢
();

1369 
buf
[
max_dev«me
];

1370 
log_m
::
	`make_log_«me
(
l
.
	`fûe
(), 
buf
, 
max_dev«me
);

1371 
w_rc_t
 
rc
 = (*
log_w¨n_ˇŒback
)(

1372 &
i
,

1373 
v
,

1374 
À·
,

1375 
smÀvñ_0
::
log_w¨n_åiggî
,

1376 
buf


1378 if(
rc
.
	`is_îr‹
(Ë&& (rc.
	`îr_num
(Ë=
eUSERABORT
)) {

1379 
_vi˘im
 = 
v
;

1381  
rc
;

1384  
	`RC
(
eLOGSPACEWARN
);

1388  
RCOK
;

1389 
	}
}

1391 
	slock_öfo_±r
 {

1392 
x˘_lock_öfo_t
* 
_±r
;

1394 
lock_öfo_±r
(Ë: 
_±r
(0) { }

1396 
sw≠
(
x˘_lock_öfo_t
* &
±r
) {

1397 if(!
_±r
)

1398 
_±r
 = 
√w
 
x˘_lock_öfo_t
;

1399 
°d
::
sw≠
(
_±r
, 
±r
);

1402 ~
lock_öfo_±r
(Ë{ 
dñëe
 
_±r
; }

1405 
DECLARE_TLS
(
lock_öfo_±r
, 
agít_lock_öfo
);

1414 
	go°ªam
&

1415 
	g›î©‹
<<(
	go°ªam
& 
	go
, c⁄° 
	gx˘_t
& 
	gx
)

1417 
	go
 << "tid="<< 
	gx
.
tid
();

1419 
	go
 << " global_tid=";

1420 i‡(
	gx
.
	g_c‹e
->
	g_globÆ_tid
) {

1421 
	go
 << *
	gx
.
	g_c‹e
->
	g_globÆ_tid
;

1423 
	go
 << "<NONE>";

1426 
	go
 << 
	gídl
 << " sèã=" << 
	gx
.
°©e
(Ë<< "Çum_thªads=" << x.
	g_c‹e
->
	g_thªads_©èched
 <<Éndl << " ";

1428 
	go
 << " defaultTimeout=";

1429 
¥öt_timeout
(
o
, 
x
.
timeout_c
());

1430 
	go
 << " fú°_l¢=" << 
	gx
.
	g_fú°_l¢
 << "Üa°_l¢=" << x.
	g_œ°_l¢
 << 
	gídl
 << " ";

1432 
	go
 << "Çum_°‹esToFªe=" << 
	gx
.
	g_c‹e
->
	g_°‹esToFªe
.
num_membîs
()

1433 << "Çum_lﬂdSt‹es=" << 
	gx
.
	g_c‹e
->
	g_lﬂdSt‹es
.
num_membîs
(Ë<< 
	gídl
 << " ";

1435 
	go
 << " in_com≥nßãd_›=" << 
	gx
.
	g_ö_com≥nßãd_›
 << "ánch‹=" << x.
	g_™ch‹
;

1437 if(
	gx
.
lock_öfo
()) {

1438 
	go
 << *
	gx
.
lock_öfo
();

1441  
	go
;

1444 #i‡
USE_BLOCK_ALLOC_FOR_LOGREC


1445 
DECLARE_TLS
(
block_Æloc
<
logªc_t
>, 
logªc_poﬁ
);

1448 
	gx˘_t
::
	$joö_xli°
() {

1449 
	`w_as£π1
(!
_xlök
);

1450 
_xlök
 = 
√w
 
	`x˘_lök
(
this
);

1451 
_xli°
.
	`ö£π
(
_xlök
);

1452 
_c‹e
->
_lock_öfo
->
	`£t_tid
(
_xlök
->
_tid
);

1453 
	}
}

1455 
rc_t


1456 
	gx˘_t
::
	$_x˘_íded
(
x˘_íd_ty≥
 
ty≥
) {

1457 
rc_t
 
rc
;

1458 
chk±_£rül_m
::
	`åx_acquúe
();

1459 
	`ch™ge_°©e
(
x˘_íded
);

1460 if(
ty≥
 =
x˘_íd_commô
)

1461 
rc
 = 
	`log_x˘_íd
();

1462 if(
ty≥
 =
x˘_íd_ab‹t
)

1463 
rc
 = 
	`log_x˘_ab‹t
();

1464 
chk±_£rül_m
::
	`åx_ªÀa£
();

1465  
rc
;

1466 
	}
}

1471 
	gx˘_t
::
x˘_c‹e
::
	$x˘_c‹e
()

1473 
	`_lock_öfo
(0),

1474 
	`_°‹esToFªe
(
°id_li°_ñem_t
::
	`lök_off£t
(), &
_1thªad_x˘
),

1475 
	`_lﬂdSt‹es
(
°id_li°_ñem_t
::
	`lök_off£t
(), &
_1thªad_x˘
)

1477 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_waôîs_muãx
, 
NULL
));

1478 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_waôîs_c⁄d
, 
NULL
));

1479 
	}
}

1481 
	gx˘_t
::
x˘_c‹e
::
	$öô
(
tid_t
 c⁄° &
t
, 
°©e_t
 
s
, 
timeout_ö_ms
 
timeout
)

1483 
_timeout
 = 
timeout
;

1484 
_w¨n_⁄
 = 
åue
;

1485 
agít_lock_öfo
->
	`sw≠
(
_lock_öfo
);

1486 
_lock_ˇche_íabÀ
 = 
åue
;

1487 
_upd©ög_›î©i⁄s
 = 0;

1488 
_thªads_©èched
 = 0;

1489 
_°©e
 = 
s
;

1490 
_f‹˚d_ªad⁄ly
 = 
Ál£
;

1491 
_vŸe
 = 
vŸe_bad
;

1492 
_globÆ_tid
 = 0;

1493 
_co‹d_h™dÀ
 = 0;

1494 
_ªad_⁄ly
 = 
Ál£
;

1495 
_x˘_íded
 = 0;

1497 
_lock_öfo
->
	`öô
(
t
, 
	`c⁄vît
(
cc_Æg
) );

1498 
	`w_as£π1
(
t
 =
_lock_öfo
->
	`tid
());

1500 
	`INC_TSTAT
(
begö_x˘_˙t
);

1501 
	}
}

1511 
	gx˘_t
::
	$x˘_t
()

1513 
	`_dïídít_li°
(
	`W_LIST_ARG
(
x˘_dïídít_t
, 
_lök
), 0 )

1515 #i‡
USE_BLOCK_ALLOC_FOR_LOGREC


1516 
_log_buf
 = 
	`√w
 (*
logªc_poﬁ
Ë
logªc_t
;

1518 
_log_buf
 = 
√w
 
logªc_t
;

1521 #i‡
ZERO_INIT


1522 
	`mem£t
(
_log_buf
, '\0', (
logªc_t
));

1525 i‡(!
_log_buf
) {

1526 
	`W_FATAL
(
eOUTOFMEMORY
);

1528 
	}
}

1530 
	gx˘_t
::
	$öô
(
x˘_c‹e
* 
c‹e
, 
sm_°©s_öfo_t
* 
°©s
,

1531 c⁄° 
l¢_t
& 
œ°_l¢
, c⁄°Ü¢_t& 
undo_nxt
)

1533 
_xlök
 = 0;

1534 
__°©s
 = 
°©s
;

1535 
__ßved_sdesc_ˇche_t
 = 0;

1536 
__ßved_sdesc_ow√r
 = !
	`me
()->
	`sdesc_ˇche
();

1537 
_œ°_l¢
 = 
œ°_l¢
;

1538 
_undo_nxt
 = 
undo_nxt
;

1539 
_log_byãs_rsvd
 = 0;

1540 
_log_byãs_ªady
 = 0;

1541 
_log_byãs_u£d
 = 0;

1542 
_rﬁlög_back
 = 
Ál£
;

1543 
_ö_com≥nßãd_›
 = 0;

1544 
_œ°_log
 = 0;

1545 
_c‹e
 = 
c‹e
;

1546 
_fú°_l¢
 = 
_œ°_l¢
 = 
_undo_nxt
 = 
l¢_t
::
nuŒ
;

1547 
_rﬁlög_back
 = 
Ál£
;

1549 
	`w_as£π1
(
	`tid
(Ë=
c‹e
->
_lock_öfo
->tid());

1550 
	`SëDeÁu…Esˇœti⁄Thªshﬁds
();

1552 i‡(
	`timeout_c
(Ë=
WAIT_SPECIFIED_BY_THREAD
) {

1554 
	`£t_timeout
(
	`me
()->
	`lock_timeout
());

1556 
	`w_as£π9
(
	`timeout_c
(Ë>0 ||Åimeout_c(Ë=
WAIT_FOREVER
);

1558 
x˘_lock_öfo_t
* 
li
 = 
	`lock_öfo
();

1559 if(
li
->
_¶i_íabÀd
)

1560 
°d
::
	`sw≠
(
__ßved_sdesc_ˇche_t
, 
li
->
_¶i_sdesc_ˇche
);

1562 if(
	`tid
().
	`övÆid
())

1563 
	`joö_xli°
();

1565 
_xli°
.
	`ö£π_exi°ög_unß„
(
this
);

1566 
	}
}

1568 
	gx˘_t
::
x˘_c‹e
::~
	$x˘_c‹e
()

1570 
dñëe
 
_globÆ_tid
;

1571 
dñëe
 
_co‹d_h™dÀ
;

1572 
	}
}

1574 
	gx˘_t
::
x˘_c‹e
::
	$ª£t
() {

1575 
	`w_as£π3
(
_°©e
 =
x˘_íded
);

1576 
_lock_öfo
->
	`ª£t
();

1577 
agít_lock_öfo
->
	`sw≠
(
_lock_öfo
);

1578 
	}
}

1589 
	gx˘_t
::~
	$x˘_t
()

1591 
	`FUNC
(
x˘_t
::~xct_t);

1592 #i‡
USE_BLOCK_ALLOC_FOR_LOGREC


1593 
logªc_poﬁ
->
	`de°roy_obje˘
(
_log_buf
);

1595 
dñëe
 
_log_buf
;

1598 if(
__ßved_sdesc_ˇche_t
) {

1599 
dñëe
 
__ßved_sdesc_ˇche_t
;

1603 
	}
}

1606 
	gx˘_t
::
	$ª£t
() {

1607 
	`DBGX
–<< "Énded: _log_byãs_rsvd " << 
_log_byãs_rsvd


1608 << " _log_byãs_ªady " << 
_log_byãs_ªady


1609 << " _log_byãs_u£d " << 
_log_byãs_u£d


1612 
	`w_as£π9
(
__°©s
 == 0);

1614 
	`_ã¨down
(
Ál£
);

1615 
	`w_as£π3
(
_ö_com≥nßãd_›
==0);

1617 i‡(
shutdown_˛ón
) {

1618 
	`w_as£π1
(
	`me
()->
	`x˘
() == 0);

1621 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

1623 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

1626 
_dïídít_li°
.
	`p›
()) ;

1629 
	`me
()->
	`no_x˘
(
this
);

1632 
x˘_lock_öfo_t
* 
li
 = 
	`lock_öfo
();

1633 if(
__ßved_sdesc_ˇche_t
 && 
li
->
_¶i_íabÀd
) {

1634 
__ßved_sdesc_ˇche_t
->
	`öhîô_Æl
();

1635 
°d
::
	`sw≠
(
__ßved_sdesc_ˇche_t
, 
li
->
_¶i_sdesc_ˇche
);

1637 if(
__ßved_sdesc_ˇche_t
) {

1638 
dñëe
 
__ßved_sdesc_ˇche_t
;

1639 
__ßved_sdesc_ˇche_t
=0;

1641 
	}
}

1645 
	gx˘_t
::
	$_ã¨down
(
boﬁ
 
is_chaöög
) {

1646 if(
is_chaöög
) {

1647 
	`joö_xli°
();

1650 
	`DBGX
–<< " commô: _log_byãs_rsvd " << 
_log_byãs_rsvd


1651 << " _log_byãs_ªady " << 
_log_byãs_ªady


1652 << " _log_byãs_u£d " << 
_log_byãs_u£d


1654 if(
À·ovîs
 = 
_log_byãs_rsvd
 + 
_log_byãs_ªady
) {

1655 
	`w_as£π2
(
smÀvñ_0
::
log
);

1656 
smÀvñ_0
::
log
->
	`ªÀa£_•a˚
(
À·ovîs
);

1658 
_log_byãs_rsvd
 = 
_log_byãs_ªady
 = 
_log_byãs_u£d
 = 0;

1660 
	}
}

1673 
	gx˘_t
::
	$£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &
h
)

1675 
	`DBGX
(<<"£t_co‹d f‹Åid " << 
	`tid
()

1676 << " h™dÀ i†" << 
h
);

1680 if(!
_c‹e
->
_co‹d_h™dÀ
) {

1681 
_c‹e
->
_co‹d_h™dÀ
 = 
√w
 
£rvî_h™dÀ_t
;

1682 if(!
_c‹e
->
_co‹d_h™dÀ
) {

1683 
	`W_FATAL
(
eOUTOFMEMORY
);

1687 *
_c‹e
->
_co‹d_h™dÀ
 = 
h
;

1688 
	}
}

1690 c⁄° 
	g£rvî_h™dÀ_t
 &

1691 
	gx˘_t
::
	$gë_co‹dö©‹
() const

1694  *
_c‹e
->
_co‹d_h™dÀ
;

1695 
	}
}

1706 
	gx˘_t
::
	$ch™ge_°©e
(
°©e_t
 
√w_°©e
)

1708 
	`FUNC
(
x˘_t
::
ch™ge_°©e
);

1709 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

1711 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

1712 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1714 
	`w_as£π2
(
_c‹e
->
_°©e
 !
√w_°©e
);

1715 
	`w_as£π2
((
√w_°©e
 > 
_c‹e
->
_°©e
) ||

1716 (
_c‹e
->
_°©e
 =
x˘_chaöög
 && 
√w_°©e
 =
x˘_a˘ive
));

1718 
°©e_t
 
ﬁd_°©e
 = 
_c‹e
->
_°©e
;

1719 
_c‹e
->
_°©e
 = 
√w_°©e
;

1721 
w_li°_i
<
x˘_dïídít_t
,
queue_ba£d_lock_t
> 
	`i
(
_dïídít_li°
);

1722 
x˘_dïídít_t
* 
d
;

1723 (
d
 = 
i
.
	`√xt
())) {

1724 
d
->
	`x˘_°©e_ch™ged
(
ﬁd_°©e
, 
√w_°©e
);

1726 if(
√w_°©e
 =
x˘_íded
)

1727 
_xli°
.
	`ªmove
(
_xlök
);

1728 
	}
}

1733 
	gx˘_t
::
	$log_w¨n_dißbÀ
()

1735 
_c‹e
->
_w¨n_⁄
 = 
åue
;

1736 
	}
}

1739 
	gx˘_t
::
	$log_w¨n_ªsume
()

1741 
_c‹e
->
_w¨n_⁄
 = 
Ál£
;

1742 
	}
}

1744 
boﬁ


1745 
	gx˘_t
::
	$log_w¨n_is_⁄
() const

1747  
_c‹e
->
_w¨n_⁄
;

1748 
	}
}

1752 
	gx˘_t
::
	$©èch_upd©e_thªad
()

1754 
	`w_as£π2
(
_c‹e
->
_upd©ög_›î©i⁄s
 >= 0);

1755 
	`©omic_öc
(
_c‹e
->
_upd©ög_›î©i⁄s
);

1756 
	}
}

1758 
	gx˘_t
::
	$dëach_upd©e_thªad
()

1760 
	`©omic_dec
(
_c‹e
->
_upd©ög_›î©i⁄s
);

1761 
	`w_as£π2
(
_c‹e
->
_upd©ög_›î©i⁄s
 >= 0);

1762 
	}
}

1765 
	gx˘_t
::
	$upd©e_thªads
() const

1767  
_c‹e
->
_upd©ög_›î©i⁄s
;

1768 
	}
}

1778 
rc_t


1779 
	gx˘_t
::
	$add_dïídít
(
x˘_dïídít_t
* 
dïídít
)

1781 
	`FUNC
(
x˘_t
::
add_dïídít
);

1782 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

1783 
	`w_as£π9
(
dïídít
->
_lök
.
	`membî_of
() == 0);

1785 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1786 
_dïídít_li°
.
	`push
(
dïídít
);

1787 
dïídít
->
	`x˘_°©e_ch™ged
(
_c‹e
->
_°©e
, _core->_state);

1788  
RCOK
;

1789 
	}
}

1790 
rc_t


1791 
	gx˘_t
::
	$ªmove_dïídít
(
x˘_dïídít_t
* 
dïídít
)

1793 
	`FUNC
(
x˘_t
::
ªmove_dïídít
);

1794 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

1795 
	`w_as£π9
(
dïídít
->
_lök
.
	`membî_of
() != 0);

1797 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1798 
dïídít
->
_lök
.
	`dëach
();

1799  
RCOK
;

1800 
	}
}

1813 
boﬁ


1814 
	gx˘_t
::
	$föd_dïídít
(
x˘_dïídít_t
* 
±r
)

1816 
	`FUNC
(
x˘_t
::
föd_dïídít
);

1817 
x˘_dïídít_t
 *
d
;

1818 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

1819 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
());

1820 
w_li°_i
<
x˘_dïídít_t
,
queue_ba£d_lock_t
> 
	`ôî
(
_dïídít_li°
);

1821 (
d
=
ôî
.
	`√xt
())) {

1822 if(
d
 =
±r
) {

1823  
åue
;

1826  
Ál£
;

1827 
	}
}

1844 
rc_t


1845 
	gx˘_t
::
	$¥ï¨e
()

1850 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

1852 if(
	`lock_öfo
(Ë&&Üock_öfo()->
	`ö_qu¨k_sc›e
()) {

1853  
	`RC
(
eINQUARK
);

1858 
	`W_DO
–
	`C⁄vîtAŒLﬂdSt‹esToReguœrSt‹es
() );

1860 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_a˘ive
);

1863 
_c‹e
->
_vŸe
 = 
vŸe_ab‹t
;

1865 
_c‹e
->
_ªad_⁄ly
 = (
_fú°_l¢
 =
l¢_t
::
nuŒ
);

1867 if(
_c‹e
->
_ªad_⁄ly
 || 
	`f‹˚d_ªad⁄ly
()) {

1868 
_c‹e
->
_vŸe
 = 
vŸe_ªad⁄ly
;

1870 #i‡
W_DEBUG_LEVEL
 > 5

1878 if(!
	`f‹˚d_ªad⁄ly
()) {

1879 
tŸÆ_EX
, 
tŸÆ_IX
, 
tŸÆ_SIX
, 
num_exã¡s
;

1880 
	`W_DO
(
	`lock_öfo
()->
	`gë_lock_tŸÆs
(
tŸÆ_EX
, 
tŸÆ_IX
, 
tŸÆ_SIX
, 
num_exã¡s
));

1881 if(
tŸÆ_EX
 != 0) {

1882 
cout


1883 << "WARNING: " << 
tŸÆ_EX


1886 << 
ídl
;

1894 
	`ch™ge_°©e
(
x˘_¥ï¨ed
);

1897 
	`INC_TSTAT
(
s_¥ï¨ed
);

1898  
RCOK
;

1900 #i‡
X_LOG_COMMENT_ON


1902 
w_o°r°ªam
 
s
;

1903 
s
 << "prepare ";

1904 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

1912 if(
	`is_exã∫2pc
() ) {

1913 
	`DBGX
(<<"loggögÖª∑ª beˇu£É2pc=" << 
	`is_exã∫2pc
());

1914 
	`W_DO
(
	`log_¥ï¨ed
());

1928 
	`ch™ge_°©e
(
x˘_¥ï¨ed
);

1929 
	`INC_TSTAT
(
¥ï¨e_x˘_˙t
);

1931 
_c‹e
->
_vŸe
 = 
vŸe_commô
;

1932  
RCOK
;

1933 
	}
}

1949 
rc_t


1950 
	gx˘_t
::
	$log_¥ï¨ed
(
boﬁ
 
ö_chk±
)

1952 
	`FUNC
(
x˘_t
::
log_¥ï¨ed
);

1953 
	`w_as£π1
(
_c‹e
->
_°©e
 =(
ö_chk±
?
x˘_¥ï¨ed
:
x˘_a˘ive
));

1955 
w_rc_t
 
rc
;

1957 if–!
ö_chk±
) {

1959 
chk±_£rül_m
::
	`åx_acquúe
();

1963 
	`SSMTEST
("prepare.unfinished.0");

1965 
tŸÆ_EX
, 
tŸÆ_IX
, 
tŸÆ_SIX
, 
num_exã¡s
;

1966 if–! 
_c‹e
->
_co‹d_h™dÀ
 ) {

1967  
	`RC
(
eNOHANDLE
);

1969 
rc
 = 
	`log_x˘_¥ï¨e_°
(
_c‹e
->
_globÆ_tid
, *_c‹e->
_co‹d_h™dÀ
);

1970 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

1972 
	`SSMTEST
("prepare.unfinished.1");

1975 
rc
 = 
	`lock_öfo
()->

1976 
	`gë_lock_tŸÆs
(
tŸÆ_EX
, 
tŸÆ_IX
, 
tŸÆ_SIX
, 
num_exã¡s
);

1977 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

1991 
i
;

2011 
i
 = 
tŸÆ_EX
;

2013 i‡(
i
 < 
¥ï¨e_lock_t
::
max_locks_logged
) {

2018 
lockid_t
* 
•a˚_l
 = 
√w
Üockid_t[
i
];

2019 
w_auto_dñëe_¨øy_t
<
lockid_t
> 
	`auto_dñ_l
(
•a˚_l
);

2021 
rc
 = 
	`lock_öfo
()-> 
	`gë_locks
(
EX
, 
i
, 
•a˚_l
);

2022 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2024 
	`SSMTEST
("prepare.unfinished.2");

2026 
rc
 = 
	`log_x˘_¥ï¨e_lk
–
i
, 
EX
, 
•a˚_l
);

2027 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2034 
lockid_t
* 
•a˚_l
 = 
√w
Üockid_t[
i
];

2035 
w_auto_dñëe_¨øy_t
<
lockid_t
> 
	`auto_dñ_l
(
•a˚_l
);

2037 
rc
 = 
	`lock_öfo
()-> 
	`gë_locks
(
EX
, 
i
, 
•a˚_l
);

2038 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2046 
i
 = 
¥ï¨e_lock_t
::
max_locks_logged
;

2047 
j
=
tŸÆ_EX
, 
k
=0;

2048 
i
 < 
tŸÆ_EX
) {

2049 
rc
 = 
	`log_x˘_¥ï¨e_lk
(
¥ï¨e_lock_t
::
max_locks_logged
, 
EX
, &
•a˚_l
[
k
]);

2050 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2051 
i
 +
¥ï¨e_lock_t
::
max_locks_logged
;

2052 
k
 +
¥ï¨e_lock_t
::
max_locks_logged
;

2053 
j
 -
¥ï¨e_lock_t
::
max_locks_logged
;

2055 
	`SSMTEST
("prepare.unfinished.3");

2058 
rc
 = 
	`log_x˘_¥ï¨e_lk
(
j
, 
EX
, &
•a˚_l
[
k
]);

2059 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2064 
i
 = 
num_exã¡s
;

2065 
lockid_t
* 
•a˚_l
 = 
√w
Üockid_t[
i
];

2066 
lock_mode_t
* 
•a˚_m
 = 
√w
Üock_mode_t[
i
];

2068 
w_auto_dñëe_¨øy_t
<
lockid_t
> 
	`auto_dñ_l
(
•a˚_l
);

2069 
w_auto_dñëe_¨øy_t
<
lock_mode_t
> 
	`auto_dñ_m
(
•a˚_m
);

2071 
rc
 = 
	`lock_öfo
()-> 
	`gë_locks
(
NL
, 
i
, 
•a˚_l
, 
•a˚_m
, 
åue
);

2072 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2074 
	`SSMTEST
("prepare.unfinished.4");

2075 
limô
 = 
¥ï¨e_Æl_lock_t
::
max_locks_logged
;

2076 
k
=0;

2077 
i
 >
limô
) {

2078 
rc
 = 
	`log_x˘_¥ï¨e_Æk
(
limô
, &
•a˚_l
[
k
], &
•a˚_m
[k]);

2079 i‡(
rc
.
	`is_îr‹
()) {

2080 
	`RC_AUGMENT
(
rc
);

2081 
d⁄e
;

2083 
i
 -
limô
;

2084 
k
 +
limô
;

2086 i‡(
i
 > 0) {

2087 
rc
 = 
	`log_x˘_¥ï¨e_Æk
(
i
, &
•a˚_l
[
k
], &
•a˚_m
[k]);

2088 i‡(
rc
.
	`is_îr‹
()) {

2089 
	`RC_AUGMENT
(
rc
);

2090 
d⁄e
;

2096 
	`W_DO
–
	`Pª∑ªLogAŒSt‹esToFªe
() );

2098 
	`SSMTEST
("prepare.unfinished.5");

2100 
rc
 = 
	`log_x˘_¥ï¨e_fi
(
tŸÆ_EX
, 
tŸÆ_IX
, 
tŸÆ_SIX
, 
num_exã¡s
,

2101 
this
->
	`fú°_l¢
());

2102 i‡(
rc
.
	`is_îr‹
()Ë{ 
	`RC_AUGMENT
‘c); 
d⁄e
; }

2104 
d⁄e
:

2108 if–!
ö_chk±
) {

2109 
	`_sync_logbuf
();

2112 
chk±_£rül_m
::
	`åx_ªÀa£
();

2114  
rc
;

2115 
	}
}

2129 
rc_t


2130 
	gx˘_t
::
	$_commô
(
uöt4_t
 
Êags
,
l¢_t
* 
∂a°l¢
)

2132 
	`DBGX
–<< " commô: _log_byãs_rsvd " << 
_log_byãs_rsvd


2133 << " _log_byãs_ªady " << 
_log_byãs_ªady


2134 << " _log_byãs_u£d " << 
_log_byãs_u£d


2137 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

2139 if(
	`is_exã∫2pc
()) {

2140 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_¥ï¨ed
);

2142 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_a˘ive
 || _c‹e->_°©ê=
x˘_¥ï¨ed
);

2145 if(
	`lock_öfo
(Ë&&Üock_öfo()->
	`ö_qu¨k_sc›e
()) {

2146  
	`RC
(
eINQUARK
);

2149 
	`w_as£π1
(1 =
	`©omic_öc_nv
(
_c‹e
->
_x˘_íded
));

2151 
	`W_DO
–
	`C⁄vîtAŒLﬂdSt‹esToReguœrSt‹es
() );

2153 
	`SSMTEST
("commit.1");

2155 
	`ch™ge_°©e
(
Êags
 & 
x˘_t
::
t_chaö
 ? 
x˘_chaöög
 : 
x˘_commôtög
);

2157 
	`SSMTEST
("commit.2");

2159 i‡(
_œ°_l¢
.
	`vÆid
(Ë|| !
smÀvñ_1
::
log
) {

2173 
chk±_£rül_m
::
	`åx_acquúe
();

2176 
	`W_DO
(
	`check_⁄e_thªad_©èched
());

2183 
	`ch™ge_°©e
(
x˘_‰ìög_•a˚
);

2184 
rc_t
 
rc
 = 
	`log_x˘_‰ìög_•a˚
();

2185 
	`SSMTEST
("commit.3");

2186 
chk±_£rül_m
::
	`åx_ªÀa£
();

2188 
	`W_DO
(
rc
);

2193 i‡(
ñr_íabÀd
 && ! (
Êags
 & 
x˘_t
::
t_chaö
)) {

2194 #i‡
X_LOG_COMMENT_ON


2196 
w_o°r°ªam
 
s
;

2197 
s
 << "unlock_duration, freesÉxtents ";

2198 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2201 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
, 
Ál£
) );

2204 i‡(!(
Êags
 & 
x˘_t
::
t_œzy
) ) {

2205 
	`_sync_logbuf
();

2208 
	`_sync_logbuf
(
Ál£
);

2212 i‡(
∂a°l¢
 !
NULL
Ë*∂a°l¢ = 
_œ°_l¢
;

2214 #i‡
X_LOG_COMMENT_ON


2216 
w_o°r°ªam
 
s
;

2217 
s
 << "FreeAllStores... ";

2218 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2226 
	`FªeAŒSt‹esToFªe
();

2232 i‡(!
ñr_íabÀd
 && ! (
Êags
 & 
x˘_t
::
t_chaö
)) {

2233 #i‡
X_LOG_COMMENT_ON


2235 
w_o°r°ªam
 
s
;

2236 
s
 << "unlock_duration, freesÉxtents ";

2237 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2240 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
, 
Ál£
) );

2246 
	`W_DO
(
	`_x˘_íded
(
x˘_íd_commô
));

2249 
	`W_COERCE
(
	`_x˘_íded
(
x˘_íd_nﬁog
));

2255 i‡(! (
Êags
 & 
x˘_t
::
t_chaö
)) {

2256 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
,Årue) );

2260 
	`me
()->
	`dëach_x˘
(
this
);

2261 
	`INC_TSTAT
(
commô_x˘_˙t
);

2268 i‡(
Êags
 & 
x˘_t
::
t_chaö
) {

2269 #i‡
X_LOG_COMMENT_ON


2271 
w_o°r°ªam
 
s
;

2272 
s
 << "chaining... ";

2273 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2279 
	`_ã¨down
(
åue
);

2280 
_fú°_l¢
 = 
_œ°_l¢
 = 
_undo_nxt
 = 
l¢_t
::
nuŒ
;

2281 
_c‹e
->
_x˘_íded
 = 0;

2282 
_œ°_log
 = 0;

2283 
_c‹e
->
_lock_ˇche_íabÀ
 = 
åue
;

2286 
	`w_as£π3
–
_ö_com≥nßãd_›
==0 );

2288 
	`me
()->
	`©èch_x˘
(
this
);

2289 
	`INC_TSTAT
(
begö_x˘_˙t
);

2290 
_c‹e
->
_°©e
 = 
x˘_chaöög
;

2293 
	`ch™ge_°©e
(
x˘_a˘ive
);

2296  
RCOK
;

2297 
	}
}

2307 
rc_t


2308 
	gx˘_t
::
	$_ab‹t
()

2314 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

2315 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_a˘ive
 || _c‹e->_°©ê=
x˘_¥ï¨ed
);

2316 
	`w_as£π1
(1 =
	`©omic_öc_nv
(
_c‹e
->
_x˘_íded
));

2317 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_a˘ive
 || _c‹e->_°©ê=
x˘_¥ï¨ed
);

2319 
	`ch™ge_°©e
(
x˘_ab‹tög
);

2320 #i‡
X_LOG_COMMENT_ON


2322 
w_o°r°ªam
 
s
;

2323 
s
 << "aborting... ";

2324 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2331 
	`CÀ¨AŒLﬂdSt‹es
();

2333 
	`W_DO
–
	`rﬁlback
(
l¢_t
::
nuŒ
) );

2335 i‡(
_œ°_l¢
.
	`vÆid
()) {

2345 #i‡
X_LOG_COMMENT_ON


2347 
w_o°r°ªam
 
s
;

2348 
s
 << "rolled back ";

2349 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2353 
chk±_£rül_m
::
	`åx_acquúe
();

2354 
	`ch™ge_°©e
(
x˘_‰ìög_•a˚
);

2355 
rc_t
 
rc
 = 
	`log_x˘_‰ìög_•a˚
();

2356 
chk±_£rül_m
::
	`åx_ªÀa£
();

2358 
	`W_DO
(
rc
);

2360 
	`_sync_logbuf
();

2361 #i‡
X_LOG_COMMENT_ON


2363 
w_o°r°ªam
 
s
;

2364 
s
 << "FreeAllStoresToFree ";

2365 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2373 
	`FªeAŒSt‹esToFªe
();

2375 #i‡
X_LOG_COMMENT_ON


2377 
w_o°r°ªam
 
s
;

2378 
s
 << "unlock_duration, freesÉxtents ";

2379 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

2385 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
, 
Ál£
) );

2391 
	`W_DO
(
	`_x˘_íded
(
x˘_íd_ab‹t
));

2394 
	`W_COERCE
(
	`_x˘_íded
(
x˘_íd_nﬁog
));

2399 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
,Årue) );

2402 
	`me
()->
	`dëach_x˘
(
this
);

2403 
	`INC_TSTAT
(
ab‹t_x˘_˙t
);

2404  
RCOK
;

2405 
	}
}

2416 
rc_t


2417 
	gx˘_t
::
	$íãr2pc
(c⁄° 
gtid_t
 &
g
)

2419 
	`W_DO
(
	`check_⁄e_thªad_©èched
());

2420 
	`w_as£π1
(
_c‹e
->
_°©e
 =
x˘_a˘ive
);

2422 if(
	`is_exã∫2pc
()) {

2423  
	`RC
(
eEXTERN2PCTHREAD
);

2425 
_c‹e
->
_globÆ_tid
 = 
√w
 
gtid_t
;

2426 if(!
_c‹e
->
_globÆ_tid
) {

2427 
	`W_FATAL
(
eOUTOFMEMORY
);

2429 
	`DBGX
(<<"íã2p¯f‹Åid " << 
	`tid
()

2430 << " globÆÅid i†" << 
g
);

2431 *
_c‹e
->
_globÆ_tid
 = 
g
;

2433  
RCOK
;

2434 
	}
}

2444 
rc_t


2445 
	gx˘_t
::
	$ßve_poöt
(
l¢_t
& 
l¢
)

2449 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

2451 
l¢
 = 
_œ°_l¢
;

2452  
RCOK
;

2453 
	}
}

2465 
rc_t


2466 
	gx˘_t
::
	$di•o£
()

2468 
dñëe
 
__°©s
;

2469 
__°©s
 = 0;

2471 
	`W_DO
(
	`check_⁄e_thªad_©èched
());

2472 
	`W_COERCE
–
lm
->
	`u∆ock_duøti⁄
(
t_l⁄g
, 
åue
,Årue) );

2473 
	`CÀ¨AŒSt‹esToFªe
();

2474 
	`CÀ¨AŒLﬂdSt‹es
();

2475 
_c‹e
->
_°©e
 = 
x˘_íded
;

2476 
	`me
()->
	`dëach_x˘
(
this
);

2477 
_xli°
.
	`ªmove
(
this
->
_xlök
);

2478  
RCOK
;

2479 
	}
}

2489 
w_rc_t


2490 
	gx˘_t
::
	$_Êush_logbuf
()

2492 
	`DBGX
–<< " _Êush_logbuf: _log_byãs_rsvd " << 
_log_byãs_rsvd


2493 << " _log_byãs_ªady " << 
_log_byãs_ªady


2494 << " _log_byãs_u£d " << 
_log_byãs_u£d
);

2497 #ifde‡
CFG_SHORE_DORA


2498 
	`acquúe_1thªad_log_muãx
();

2501 
	`w_as£π2
(
	`is_1thªad_log_muãx_möe
(Ë|| 
	`⁄e_thªad_©èched
());

2503 i‡(
_œ°_log
) {

2505 
	`DBGX
 ( << " x˘_t::_Êush_logbu‡" << 
_œ°_l¢
);

2508 
_œ°_log
->
	`fûl_x˘_©å
(
	`tid
(), 
_œ°_l¢
);

2514 
	`DBGX
( << " "

2515 << ((*)(
	`°©e
()==
x˘_ab‹tög
)?"RB":"FW")

2516 << "áµroxÜ¢:" << 
log
->
	`cuº_l¢
()

2517 << "Ñec:" << *
_œ°_log


2518 << " size:" << 
_œ°_log
->
	`Àngth
()

2519 << "Öªvl¢:" << 
_œ°_log
->
	`¥ev
()

2522 
	`LOGTRACE
–<< 
	`£tiosÊags
(
ios
::
right
Ë<< 
_œ°_l¢


2523 << 
	`ª£tiosÊags
(
ios
::
right
Ë<< " I: " << *
_œ°_log


2525 if(
log
) {

2526 
logªc_t
* 
l
 = 
_œ°_log
;

2527 
_œ°_log
 = 0;

2528 
	`W_DO
–
log
->
	`ö£π
(*
l
, &
_œ°_l¢
) );

2547 if(
smÀvñ_0
::
›î©ög_mode
 =
t_f‹w¨d_¥o˚ssög
) {

2548 
byãs_u£d
 = 
l
->
	`Àngth
();

2549 if(
_rﬁlög_back
 || 
	`°©e
(Ë!
x˘_a˘ive
) {

2550 #i‡
USE_LOG_RESERVATIONS


2551 
	`w_as£π0
(
_log_byãs_rsvd
 >
byãs_u£d
);

2552 
_log_byãs_rsvd
 -
byãs_u£d
;

2554 if(
_log_byãs_rsvd
 >
byãs_u£d
) {

2555 
_log_byãs_rsvd
 -
byãs_u£d
;

2557 if(
_log_byãs_ªady
 >
byãs_u£d
) {

2558 
_log_byãs_ªady
 -
byãs_u£d
;

2561 
w_o°r°ªam
 
åoubÀ
;

2562 
åoubÀ
 << "LogÑe£rv©i⁄†dißbÀd." << 
ídl
;

2563 
åoubÀ
 << "Åid " << 
	`tid
()

2564 << " sèã " << 
	`°©e
()

2565 << "_log_byãs_ªady " << 
_log_byãs_ªady


2566 << "_log_byãs_rsvd " << 
_log_byãs_rsvd


2567 << " byãs_u£d " << 
byãs_u£d


2568 << 
ídl
;

2569 
	`Ârötf
(
°dîr
, "%s\n", 
åoubÀ
.
	`c_°r
());

2575 
to_ª£rve
 = 
	`UNDO_FUDGE_FACTOR
(
byãs_u£d
);

2576 
	`w_as£π0
(
_log_byãs_ªady
 >
byãs_u£d
 + 
to_ª£rve
);

2577 
_log_byãs_ªady
 -
byãs_u£d
 + 
to_ª£rve
;

2578 
_log_byãs_rsvd
 +
to_ª£rve
;

2580 
_log_byãs_u£d
 +
byãs_u£d
;

2585 i‡–! 
_fú°_l¢
.
	`vÆid
())

2586 
_fú°_l¢
 = 
_œ°_l¢
;

2588 
_undo_nxt
 = (

2589 
l
->
	`is_undﬂbÀ_˛r
(Ë? 
_œ°_l¢
 :

2590 
l
->
	`is_˝¢
(Ë?Ü->
	`undo_nxt
(Ë: 
_œ°_l¢
);

2594  
RCOK
;

2595 
	}
}

2607 
w_rc_t


2608 
	gx˘_t
::
	$_sync_logbuf
(
boﬁ
 
block
)

2610  (
log
?Üog->
	`Êush
(
_œ°_l¢
,
block
Ë: 
RCOK
);

2611 
	}
}

2630 
rc_t


2631 
	gx˘_t
::
	$gë_logbuf
(
logªc_t
*& 
ªt
, 
∑ge_p
 c⁄°* 
p
)

2634 
	`acquúe_1thªad_log_muãx
();

2635 
ªt
 = 0;

2637 
	`INC_TSTAT
(
gë_logbuf
);

2641 
	`w_as£π1
(!
_œ°_log
);

2668 
u_öt
 c⁄° 
MIN_BYTES_READY
 = 2*(
logªc_t
) +

2669 
	`UNDO_FUDGE_FACTOR
((
logªc_t
));

2670 
u_öt
 c⁄° 
MIN_BYTES_RSVD
 = (
logªc_t
);

2671 if(!
_rﬁlög_back
 && 
_c‹e
->
_°©e
 =
x˘_a˘ive


2672 && 
_log_byãs_ªady
 < 
MIN_BYTES_READY
) {

2673 
fûeoff_t
 
√eded
 = 
MIN_BYTES_READY
;

2674 if(!
log
->
	`ª£rve_•a˚
(
√eded
)) {

2683 
	`INC_TSTAT
(
log_fuŒ
);

2684 
boﬁ
 
bad√ws
=
Ál£
;

2685 if(
_fú°_l¢
.
	`vÆid
(Ë&& _fú°_l¢.
	`hi
() ==

2686 
log
->
	`globÆ_mö_l¢
().
	`hi
()) {

2687 
	`INC_TSTAT
(
log_fuŒ_ﬁd_x˘
);

2688 
bad√ws
 = 
åue
;

2691 
Õid_t
 c⁄°* 
pid
 = 
p
? &p->
	`pid
() : 0;

2692 if(!
bad√ws
 && !
bf
->
	`f‹˚_my_dúty_ﬁd_∑ges
(
pid
)) {

2720 
	`INC_TSTAT
(
log_fuŒ_ﬁd_∑ge
);

2721 
bad√ws
 = 
åue
;

2724 if(!
bad√ws
) {

2730 
chk±_£rül_m
::
	`åx_acquúe
();

2731 
chk±_£rül_m
::
	`åx_ªÀa£
();

2733 
queue_ba£d_block_lock_t
 
emîgícy_log_Êush_muãx
;

2734 
	`CRITICAL_SECTION
(
cs
, 
emîgícy_log_Êush_muãx
);

2735 
åõs_À·
=3;Åries_left > 0;Åries_left--) {

2736 if(
åõs_À·
 == 1) {

2738 
l¢_t
 
èrgë
 = 
log_m
::
	`fú°_l¢
(
log
->
	`globÆ_mö_l¢
().
	`hi
()+1);

2739 
w_rc_t
 
rc
 = 
bf
->
	`f‹˚_u¡û_l¢
(
èrgë
, 
Ál£
);

2741 if(
rc
.
	`is_îr‹
()) {

2742 
	`INC_TSTAT
(
log_fuŒ_giveup
);

2743 
	`Ârötf
(
°dîr
, "LogÑecovery failed\n");

2744 #i‡
W_DEBUG_LEVEL
 > 0

2745 
	`dump_Æl_sm_°©s
();

2746 
	`dump_Æl_sm_°©s
();

2748 
	`ªÀa£_1thªad_log_muãx
();

2749 if(
rc
.
	`îr_num
(Ë=
eBPFORCEFAILED
)

2750  
	`RC
(
eOUTOFLOGSPACE
);

2751  
rc
;

2756 
chk±
->
	`wakeup_™d_èke
();

2757 
	`W_IGNORE
(
log
->
	`waô_f‹_•a˚
(
√eded
, 100));

2758 if(!
√eded
) {

2759 if(
åõs_À·
 > 1) {

2760 
	`INC_TSTAT
(
log_fuŒ_waô
);

2763 
	`INC_TSTAT
(
log_fuŒ_f‹˚
);

2765 
suc˚ss
;

2771 if(!
log
->
	`ª£rve_•a˚
(
√eded
)) {

2773 
log
->
	`ªÀa£_•a˚
(
MIN_BYTES_READY
 - 
√eded
);

2776 
°rög°ªam
 
tmp
;

2777 
tmp
 << "LogÅoÿfuŒ. me=" << 
	`me
()->
id


2778 << "Öthªad=" << 
	`±hªad_£lf
()

2779 << ": mö_chk±_ªc_l¢=" << 
log
->
	`mö_chk±_ªc_l¢
()

2780 << ", cuº_l¢=" << 
log
->
	`cuº_l¢
()

2783 << "; s∑˚Üe· " << 
log
->
	`•a˚_À·
()

2784 << 
ídl
;

2785 
	`Ârötf
(
°dîr
, "%s\n", 
tmp
.
	`°r
().
	`c_°r
());

2786 
	`INC_TSTAT
(
log_fuŒ_giveup
);

2787 
bad√ws
 = 
åue
;

2791 if(
bad√ws
) {

2792 
	`ªÀa£_1thªad_log_muãx
();

2793  
	`RC
(
eOUTOFLOGSPACE
);

2796 
suc˚ss
:

2797 
_log_byãs_ªady
 +
MIN_BYTES_READY
;

2798 
	`DBGX
–<< " gë_logbuf: _log_byãs_rsvd " << 
_log_byãs_rsvd


2799 << " _log_byãs_ªady " << 
_log_byãs_ªady


2800 << " _log_byãs_u£d " << 
_log_byãs_u£d


2810 if(!
_rﬁlög_back
 && 
_c‹e
->
_°©e
 =
x˘_a˘ive


2811 && 
_log_byãs_rsvd
 < 
MIN_BYTES_RSVD
) {

2812 
_log_byãs_ªady
 -
MIN_BYTES_RSVD
;

2813 
_log_byãs_rsvd
 +
MIN_BYTES_RSVD
;

2816 
	`DBGX
–<< " gë_logbuf: _log_byãs_rsvd " << 
_log_byãs_rsvd


2817 << " _log_byãs_ªady " << 
_log_byãs_ªady


2818 << " _log_byãs_u£d " << 
_log_byãs_u£d


2820 
ªt
 = 
_œ°_log
 = 
_log_buf
;

2823 
	`w_as£π3
(
	`is_1thªad_log_muãx_möe
());

2825  
RCOK
;

2826 
	}
}

2829 
rc_t


2830 
	gx˘_t
::
	$give_logbuf
(
logªc_t
* 
l
, c⁄° 
∑ge_p
 *
∑ge
)

2832 
	`FUNC
(
x˘_t
::
give_logbuf
);

2833 
	`DBGX
(<<"_œ°_log c⁄èös: " << *
l
 );

2836 
	`w_as£π2
(
	`is_1thªad_log_muãx_möe
());

2838 
	`w_as£π1
(
l
 =
_œ°_log
);

2847 
∑ge_p
 
œ°_mod_∑ge
;

2849 if(
∑ge
 !(
∑ge_p
 *)0) {

2851 
	`w_as£π1
(
∑ge
->
	`œtch_mode
(Ë=
LATCH_NLX
 ||

2852 
∑ge
->
	`œtch_mode
(Ë=
LATCH_EX
);

2854 
œ°_mod_∑ge
 = *
∑ge
;

2856 i‡(
l
->
	`shpid
())

2869 if(
l
->
	`ty≥
(Ë!
logªc_t
::
t_Æloc_fûe_∑ge
) {

2870 
	`W_FATAL
(
eINTERNAL
);

2874 
	`w_as£π1
(
l
->
	`èg
() == 0);

2877 
	`w_as£π2
(
	`is_1thªad_log_muãx_möe
());

2879 if(
œ°_mod_∑ge
.
	`is_fixed
()) {

2880 
	`w_as£π2
(
l
->
	`èg
()!=0);

2881 
	`w_as£π2
(
œ°_mod_∑ge
.
	`œtch_mode
(Ë=
LATCH_NLX
 ||

2882 
œ°_mod_∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

2884 
	`w_as£π2
(
l
->
	`èg
()==0);

2885 
	`w_as£π3
(
œ°_mod_∑ge
.
	`œtch_mode
(Ë=
LATCH_NL
);

2888 
rc_t
 
rc
 = 
	`_Êush_logbuf
();

2891 if(
rc
.
	`is_îr‹
())

2892 
d⁄e
;

2894 if(
œ°_mod_∑ge
.
	`is_fixed
() ) {

2895 
	`w_as£π2
(
œ°_mod_∑ge
.
	`œtch_mode
(Ë=
LATCH_NLX
 ||

2896 
œ°_mod_∑ge
.
	`œtch_mode
(Ë=
LATCH_EX
);

2899 
œ°_mod_∑ge
.
	`£t_l¢s
(
_œ°_l¢
);

2900 
œ°_mod_∑ge
.
	`unfix_dúty
();

2901 
	`w_as£π1
(
œ°_mod_∑ge
.
	`check_l¢_öv¨ü¡
());

2904 
d⁄e
:

2905 
	`ªÀa£_1thªad_log_muãx
();

2907  
rc
;

2908 
	}
}

2920 
	gx˘_t
::
	$ªÀa£_™ch‹
–
boﬁ
 
™d_com≥nßã
 
ADD_LOG_COMMENT_SIG
 )

2922 
	`FUNC
(
x˘_t
::
ªÀa£_™ch‹
);

2924 #i‡
X_LOG_COMMENT_ON


2925 if(
™d_com≥nßã
) {

2926 
w_o°r°ªam
 
s
;

2927 
s
 << "release_anchorát "

2928 << 
debugmsg
;

2929 
	`W_COERCE
(
	`log_commít
(
s
.
	`c_°r
()));

2932 
	`w_as£π3
(
	`is_1thªad_log_muãx_möe
());

2933 
	`DBGX
(

2935 << " i¿com≥nßãd op==" << 
_ö_com≥nßãd_›


2940 
	`w_as£π3
(
_ö_com≥nßãd_›
>0);

2942 if(
_ö_com≥nßãd_›
 == 1) {

2953 if(
™d_com≥nßã
 && (
_™ch‹
 !
l¢_t
::
nuŒ
)) {

2954 
	`VOIDSSMTEST
("compensate");

2955 if(
_œ°_log
) {

2956 i‡–
_œ°_log
->
	`is_˝¢
()) {

2957 
	`DBGX
(<<"already compensated");

2958 
	`w_as£π3
(
_™ch‹
 =
_œ°_log
->
	`undo_nxt
());

2960 
	`DBGX
(<<"SETTINGánch‹:" << 
_™ch‹
);

2961 
	`w_as£π3
(
_™ch‹
 <
_œ°_l¢
);

2962 
_œ°_log
->
	`£t_˛r
(
_™ch‹
);

2965 
	`DBGX
(<<"nÿ_œ°_log:" << 
_™ch‹
);

2967 if–
log
 &&

2968 !
log
->
	`com≥nßã
(
_œ°_l¢
, 
_™ch‹
).
	`is_îr‹
()) {

2970 
	`INC_TSTAT
(
com≥nßã_ö_log
);

2981 
boﬁ
 
was_rﬁlög_back
 = 
_rﬁlög_back
;

2982 
_rﬁlög_back
 = 
åue
;

2983 
	`W_COERCE
(
	`log_com≥nßã
(
_™ch‹
));

2984 
_rﬁlög_back
 = 
was_rﬁlög_back
;

2985 
	`INC_TSTAT
(
com≥nßã_ªc‹ds
);

2990 
_™ch‹
 = 
l¢_t
::
nuŒ
;

2994 
_ö_com≥nßãd_›
 -- ;

2996 
	`DBGX
(

2997 << " ouàcom≥nßãd op=" << 
_ö_com≥nßãd_›


3001 
	`ªÀa£_1thªad_log_muãx
();

3002 
	}
}

3018 c⁄° 
	gl¢_t
&

3019 
	gx˘_t
::
	$™ch‹
(
boﬁ
 
gøbô
)

3022 
	`acquúe_1thªad_log_muãx
();

3023 
_ö_com≥nßãd_›
 ++;

3025 
	`INC_TSTAT
(
™ch‹s
);

3026 
	`DBGX
(

3028 << " i¿com≥nßãd op==" << 
_ö_com≥nßãd_›


3032 if(
_ö_com≥nßãd_›
 =1 && 
gøbô
) {

3034 
	`w_as£π3
(
_™ch‹
 =
l¢_t
::
nuŒ
);

3035 
_™ch‹
 = 
_œ°_l¢
;

3036 
	`DBGX
–<< "ánch‹ =" << 
_™ch‹
);

3038 
	`DBGX
–<< "ánch‹Ñëu∫†" << 
_œ°_l¢
 );

3040  
_œ°_l¢
;

3041 
	}
}

3053 
	gx˘_t
::
	$com≥nßã_undo
(c⁄° 
l¢_t
& 
l¢
)

3055 
	`DBGX
–<< " com≥nßã_undÿ(" << 
l¢
 << "Ë-- sèã=" << 
	`°©e
());

3057 
	`acquúe_1thªad_log_muãx
();

3058 
	`w_as£π3
(
_ö_com≥nßãd_›
);

3061 
	`_com≥nßã
(
l¢
, 
_œ°_log
?_œ°_log->
	`is_undﬂbÀ_˛r
(Ë: 
Ál£
);

3063 
	`ªÀa£_1thªad_log_muãx
();

3064 
	}
}

3076 
	gx˘_t
::
	$com≥nßã
(c⁄° 
l¢_t
& 
l¢
, 
boﬁ
 
undﬂbÀ
 
ADD_LOG_COMMENT_SIG
)

3078 
	`DBGX
–<< " com≥nßã(" << 
l¢
 << "Ë-- sèã=" << 
	`°©e
());

3081 
	`w_as£π3
(
	`is_1thªad_log_muãx_möe
());

3083 
	`_com≥nßã
(
l¢
, 
undﬂbÀ
);

3085 
	`w_as£π3
(
	`is_1thªad_log_muãx_möe
());

3086 
	`ªÀa£_™ch‹
(
åue
 
ADD_LOG_COMMENT_USE
);

3087 
	}
}

3117 
	gx˘_t
::
	$_com≥nßã
(c⁄° 
l¢_t
& 
l¢
, 
boﬁ
 
undﬂbÀ
)

3119 
	`DBGX
–<< "_com≥nßã(" << 
l¢
 << "Ë-- sèã=" << 
	`°©e
());

3121 
boﬁ
 
d⁄e
 = 
Ál£
;

3122 i‡–
_œ°_log
 ) {

3137 
	`w_as£π3
(
l¢
 <
_œ°_l¢
);

3138 
_œ°_log
->
	`£t_˛r
(
l¢
);

3139 
	`INC_TSTAT
(
com≥nßã_ö_x˘
);

3140 
d⁄e
 = 
åue
;

3150 if–
l¢
 >
_œ°_l¢
) {

3151 
	`INC_TSTAT
(
com≥nßã_skù≥d
);

3153 if–
log
 && (! 
undﬂbÀ
Ë&& (
l¢
 < 
_œ°_l¢
)) {

3154 if(!
log
->
	`com≥nßã
(
_œ°_l¢
, 
l¢
).
	`is_îr‹
()) {

3155 
	`INC_TSTAT
(
com≥nßã_ö_log
);

3156 
d⁄e
 = 
åue
;

3160 
	`w_as£π3
(
	`is_1thªad_log_muãx_möe
());

3162 if–!
d⁄e
 && (
l¢
 < 
_œ°_l¢
) ) {

3174 
boﬁ
 
was_rﬁlög_back
 = 
_rﬁlög_back
;

3175 
_rﬁlög_back
 = 
åue
;

3176 
	`W_COERCE
(
	`log_com≥nßã
(
l¢
));

3177 
_rﬁlög_back
 = 
was_rﬁlög_back
;

3178 
	`INC_TSTAT
(
com≥nßã_ªc‹ds
);

3180 
	}
}

3191 
rc_t


3192 
	gx˘_t
::
	$rﬁlback
(c⁄° 
l¢_t
 &
ßve_±
)

3194 
	`FUNC
(
x˘_t
::
rﬁlback
);

3196 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

3198 if(!
log
) {

3199 
ss_m
::
îæog
->
˛og
 << 
emîg_¥io


3201 << 
Êushl
;

3202  
	`RC
(
eNOABORT
);

3205 
w_rc_t
 
rc
;

3206 
logªc_t
* 
buf
 =0;

3209 
	`acquúe_1thªad_log_muãx
();

3211 if(
_ö_com≥nßãd_›
 > 0) {

3212 
	`w_as£π3
(
ßve_±
 >
_™ch‹
);

3214 
	`w_as£π3
(
_™ch‹
 =
l¢_t
::
nuŒ
);

3217 
	`DBGX
–<< " i¿com≥nßãd o∞dïth " << 
_ö_com≥nßãd_›


3218 << " save_± " << 
ßve_±
 << "ánch‹ " << 
_™ch‹
);

3219 
_ö_com≥nßãd_›
++;

3222 
	`w_as£π0
(!
_rﬁlög_back
);

3223 
_rﬁlög_back
 = 
åue
;

3225 
l¢_t
 
nxt
 = 
_undo_nxt
;

3227 
	`LOGTRACE
–<< "ab‹àbegö†© " << 
nxt
);

3231 
logªc_t
* 
__c›y__buf
 = 
√w
Üogrec_t;

3232 if(! 
__c›y__buf
Ë{ 
	`W_FATAL
(
eOUTOFMEMORY
); }

3233 
w_auto_dñëe_t
<
logªc_t
> 
	`auto_dñ
(
__c›y__buf
);

3234 
logªc_t
& 
r
 = *
__c›y__buf
;

3236 
ßve_±
 < 
nxt
) {

3237 
rc
 = 
log
->
	`„tch
(
nxt
, 
buf
, 0);

3238 if(
rc
.
	`is_îr‹
(Ë&&Ñc.
	`îr_num
()==
eEOF
) {

3239 
	`DBGX
(<< " fetchÑeturns EOF" );

3240 
log
->
	`ªÀa£
();

3241 
d⁄e
;

3244 
logªc_t
& 
ãmp
 = *
buf
;

3245 
	`w_as£π3
(!
ãmp
.
	`is_skù
());

3250 
	`mem˝y
(
__c›y__buf
, &
ãmp
,Åemp.
	`Àngth
());

3251 
log
->
	`ªÀa£
();

3254 i‡(
r
.
	`is_undo
()) {

3258 
	`LOGTRACE
–<< 
	`£tiosÊags
(
ios
::
right
Ë<< 
nxt


3259 << 
	`ª£tiosÊags
(
ios
::
right
Ë<< " U: " << 
r


3262 #i‡
W_DEBUG_LEVEL
 > 2

3263 
u_öt
 
was_rsvd
 = 
_log_byãs_rsvd
;

3265 
Õid_t
 
pid
 = 
r
.
	`c⁄°ru˘_pid
();

3266 
∑ge_p
 
∑ge
;

3268 i‡(! 
r
.
	`is_logiˇl
()) {

3269 
°‹e_Êag_t
 
°‹e_Êags
 = 
°_bad
;

3270 
	#TMP_NOFLAG
 0

	)

3271 
rc
 = 
∑ge
.
	`fix
(
pid
, 
∑ge_p
::
t_™y_p
, 
LATCH_EX
,

3272 
TMP_NOFLAG
, 
°‹e_Êags
);

3273 if(
rc
.
	`is_îr‹
()) {

3274 
d⁄e
;

3276 
	`w_as£π1
(
∑ge
.
	`pid
(Ë=
pid
);

3280 
r
.
	`undo
(
∑ge
.
	`is_fixed
() ? &page : 0);

3282 #i‡
W_DEBUG_LEVEL
 > 2

3283 if(
was_rsvd
 - 
_log_byãs_rsvd
 > 
r
.
	`Àngth
()) {

3284 
	`LOGTRACE
(<< "Üí=" << 
r
.
	`Àngth
() << " B= " <<

3285 (
was_rsvd
 - 
_log_byãs_rsvd
));

3288 if(
r
.
	`is_˝¢
()) {

3289 
	`LOGTRACE
–<< " com≥nßtögÅÿ" << 
r
.
	`undo_nxt
() );

3290 
nxt
 = 
r
.
	`undo_nxt
();

3292 
	`LOGTRACE
–<< " undoögÅÿ" << 
r
.
	`¥ev
() );

3293 
nxt
 = 
r
.
	`¥ev
();

3296 } i‡(
r
.
	`is_˝¢
()) {

3297 
	`LOGTRACE
–<< 
	`£tiosÊags
(
ios
::
right
Ë<< 
nxt


3298 << 
	`ª£tiosÊags
(
ios
::
right
Ë<< " U: " << 
r


3299 << " com≥nßtögÅo" << 
r
.
	`undo_nxt
() );

3300 
nxt
 = 
r
.
	`undo_nxt
();

3304 
	`LOGTRACE
–<< 
	`£tiosÊags
(
ios
::
right
Ë<< 
nxt


3305 << 
	`ª£tiosÊags
(
ios
::
right
Ë<< " U: " << 
r


3306 << " skùpögÅÿ" << 
r
.
	`¥ev
());

3307 
nxt
 = 
r
.
	`¥ev
();

3316 
_undo_nxt
 = 
nxt
;

3318 
d⁄e
:

3320 
	`DBGX
–<< "ÀavögÑﬁlback: com≥nßãd o∞" << 
_ö_com≥nßãd_›
);

3321 
_ö_com≥nßãd_›
 --;

3322 
_rﬁlög_back
 = 
Ál£
;

3323 
	`w_as£π3
(
_™ch‹
 =
l¢_t
::
nuŒ
 ||

3324 
_™ch‹
 =
ßve_±
);

3325 
	`ªÀa£_1thªad_log_muãx
();

3327 if(
ßve_±
 !
l¢_t
::
nuŒ
) {

3328 
	`INC_TSTAT
(
rﬁlback_ßvït_˙t
);

3331  
rc
;

3332 
	}
}

3334 
	gx˘_t
::
	$AddSt‹eToFªe
(c⁄° 
°id_t
& 
°id
)

3336 
	`FUNC
(
x
);

3337 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3338 
_c‹e
->
_°‹esToFªe
.
	`push
(
√w
 
	`°id_li°_ñem_t
(
°id
));

3339 
	}
}

3341 
	gx˘_t
::
	$AddLﬂdSt‹e
(c⁄° 
°id_t
& 
°id
)

3343 
	`FUNC
(
x
);

3344 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3345 
_c‹e
->
_lﬂdSt‹es
.
	`push
(
√w
 
	`°id_li°_ñem_t
(
°id
));

3346 
	}
}

3357 
	gx˘_t
::
	$CÀ¨AŒSt‹esToFªe
()

3359 
	`w_as£π2
(
	`⁄e_thªad_©èched
());

3360 
°id_li°_ñem_t
* 
s
 = 0;

3361 (
s
 = 
_c‹e
->
_°‹esToFªe
.
	`p›
())) {

3362 
dñëe
 
s
;

3365 
	`w_as£π3
(
_c‹e
->
_°‹esToFªe
.
	`is_em±y
());

3366 
	}
}

3377 
	gx˘_t
::
	$FªeAŒSt‹esToFªe
()

3379 
	`w_as£π2
(
	`⁄e_thªad_©èched
());

3380 
°id_li°_ñem_t
* 
s
 = 0;

3381 (
s
 = 
_c‹e
->
_°‹esToFªe
.
	`p›
())) {

3382 
	`W_COERCE
–
io
->
	`‰ì_°‹e_a·î_x˘
(
s
->
°id
) );

3383 
dñëe
 
s
;

3385 
	}
}

3392 
	gx˘_t
::
	$num_exã¡s_m¨ked_f‹_dñëi⁄
(
ba£_°©_t
 &
num
)

3394 
	`FUNC
(
x˘_t
::
num_exã¡s_m¨ked_f‹_dñëi⁄
);

3395 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3396 
°id_li°_ñem_t
* 
s
 = 0;

3397 
num
 = 0;

3398 
SmSt‹eMëaSèts
 
_°©s
;

3399 
ba£_°©_t
 
j
;

3401 
w_li°_i
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
	`i
(
_c‹e
->
_°‹esToFªe
);

3402 (
s
 = 
i
.
	`√xt
())) {

3403 
_°©s
.
	`CÀ¨
();

3404 
	`W_COERCE
–
io
->
	`gë_°‹e_mëa_°©s
(
s
->
°id
, 
_°©s
) );

3405 
j
 = 
_°©s
.
numRe£rvedPages
;

3406 
	`w_as£π3
((
j
 % 
ss_m
::
ext_sz
) == 0);

3407 
j
 /
ss_m
::
ext_sz
;

3408 
num
 +
j
;

3410 
	}
}

3412 
rc_t


3413 
	gx˘_t
::
	$Pª∑ªLogAŒSt‹esToFªe
()

3416 
	`w_as£π1
(
	`⁄e_thªad_©èched
());

3418 
°id_t
* 
°ids
 = 
√w
 stid_t[
¥ï¨e_°‹es_to_‰ì_t
::
max
];

3419 
w_auto_dñëe_¨øy_t
<
°id_t
> 
	`auto_dñ_°ids
(
°ids
);

3421 
°id_li°_ñem_t
* 
e
;

3422 
uöt4_t
 
num
 = 0;

3424 
w_li°_i
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
	`i
(
_c‹e
->
_°‹esToFªe
);

3425 (
e
 = 
i
.
	`√xt
())) {

3426 
°ids
[
num
++] = 
e
->
°id
;

3427 i‡(
num
 >
¥ï¨e_°‹es_to_‰ì_t
::
max
) {

3428 
	`W_DO
–
	`log_x˘_¥ï¨e_°‹es
(
num
, 
°ids
) );

3429 
num
 = 0;

3433 i‡(
num
 > 0) {

3434 
	`W_DO
–
	`log_x˘_¥ï¨e_°‹es
(
num
, 
°ids
) );

3437  
RCOK
;

3438 
	}
}

3442 
	gx˘_t
::
	$DumpSt‹esToFªe
()

3444 
°id_li°_ñem_t
* 
e
;

3445 
w_li°_i
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
	`i
(
_c‹e
->
_°‹esToFªe
);

3447 
	`FUNC
(
x˘_t
::
DumpSt‹esToFªe
);

3448 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3449 
cout
 << "list of storesÅo free";

3450 (
e
 = 
i
.
	`√xt
())) {

3451 
cout
 << " <- " << 
e
->
°id
;

3453 
cout
 << 
ídl
;

3454 
	}
}

3460 ˛as†
	cVﬁidC¡
 {

3461 
	m¥iv©e
:

3462 
unique_vﬁs
;

3463 
	mvﬁ_m≠
[
x˘_t
::
max_vﬁs
];

3464 
¢um_t
 
	mvﬁ_˙ts
[
x˘_t
::
max_vﬁs
];

3465 
	mpublic
:

3466 
	$VﬁidC¡
(Ë: 
	$unique_vﬁs
(0) {};

3467 
	$Lookup
(
vﬁ
)

3469 
i
 = 0; i < 
unique_vﬁs
; i++)

3470 i‡(
vﬁ_m≠
[
i
] =
vﬁ
)

3471  
i
;

3473 
	`w_as£π9
(
unique_vﬁs
 < 
x˘_t
::
max_vﬁs
);

3474 
vﬁ_m≠
[
unique_vﬁs
] = 
vﬁ
;

3475 
vﬁ_˙ts
[
unique_vﬁs
] = 0;

3476  
unique_vﬁs
++;

3477 
	}
};

3478 
	$In¸emít
(
vﬁ
)

3480  ++
vﬁ_˙ts
[
	`Lookup
(
vﬁ
)];

3481 
	}
};

3482 
	$De¸emít
(
vﬁ
)

3484 
	`w_as£π9
(
vﬁ_˙ts
[
	`Lookup
(
vﬁ
)]);

3485  --
vﬁ_˙ts
[
	`Lookup
(
vﬁ
)];

3486 
	}
};

3487 #i‡
W_DEBUG_LEVEL
 > 2

3488 ~
	$VﬁidC¡
()

3490 
i
 = 0; i < 
unique_vﬁs
; i ++)

3491 
	`w_as£π9
(
vﬁ_˙ts
[
i
] == 0);

3492 
	}
};

3496 
rc_t


3497 
	gx˘_t
::
	$C⁄vîtAŒLﬂdSt‹esToReguœrSt‹es
()

3500 #i‡
X_LOG_COMMENT_ON


3502 vﬁ©ûê
uniq
=0;

3503 vﬁ©ûê
œ°_uniq
=0;

3504 
nv
 = 
	`©omic_öc_nv
(
uniq
);

3507 
	`w_as£π1
(
œ°_uniq
 !
nv
);

3508 *&
œ°_uniq
 = 
nv
;

3514 
w_o°r°ªam
 
s
;

3515 
s
 << "C⁄vîtAŒLﬂdSt‹e†uniq=" << 
uniq


3516 << " x˘ sèã " << 
_°©e


3517 << " x˘Énded " << 
_x˘_íded


3518 << "Åid " << 
	`tid
()

3519 << "Åhªad " << 
	`me
()->
id
;

3520 
	`W_DO
(
	`log_commít
(
s
.
	`c_°r
()));

3524 
	`w_as£π2
(
	`⁄e_thªad_©èched
());

3525 
°id_li°_ñem_t
* 
s
 = 0;

3526 
VﬁidC¡
 
˙t
;

3529 
w_li°_i
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
	`i
(
_c‹e
->
_lﬂdSt‹es
);

3531 (
s
 = 
i
.
	`√xt
())) {

3532 
˙t
.
	`In¸emít
(
s
->
°id
.
vﬁ
);

3536 (
s
 = 
_c‹e
->
_lﬂdSt‹es
.
	`p›
())) {

3537 
boﬁ
 
sync_vﬁume
 = (
˙t
.
	`De¸emít
(
s
->
°id
.
vﬁ
) == 0);

3538 
°‹e_Êag_t
 
f
;

3539 
	`W_DO
–
io
->
	`gë_°‹e_Êags
(
s
->
°id
, 
f
));

3542 if(
f
 !
°_ªguœr
) {

3543 
	`W_DO
–
io
->
	`£t_°‹e_Êags
(
s
->
°id
, 
°_ªguœr
, 
sync_vﬁume
) );

3545 
dñëe
 
s
;

3548 
	`w_as£π3
(
_c‹e
->
_lﬂdSt‹es
.
	`is_em±y
());

3550  
RCOK
;

3551 
	}
}

3555 
	gx˘_t
::
	$CÀ¨AŒLﬂdSt‹es
()

3557 
	`w_as£π2
(
	`⁄e_thªad_©èched
());

3558 
°id_li°_ñem_t
* 
s
 = 0;

3559 (
s
 = 
_c‹e
->
_lﬂdSt‹es
.
	`p›
())) {

3560 
dñëe
 
s
;

3563 
	`w_as£π3
(
_c‹e
->
_lﬂdSt‹es
.
	`is_em±y
());

3564 
	}
}

3566 
	gsmÀvñ_0
::
c⁄cuºícy_t


3567 
x˘_t
::
	$gë_lock_Àvñ
()

3569 
	`FUNC
(
x˘_t
::
gë_lock_Àvñ
);

3570 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3571 
smÀvñ_0
::
c⁄cuºícy_t
 
l
 = 
t_cc_bad
;

3572 
l
 = 
	`c⁄vît
(
	`lock_öfo
()->
	`lock_Àvñ
());

3573  
l
;

3574 
	}
}

3577 
	gx˘_t
::
	$lock_Àvñ
(
c⁄cuºícy_t
 
l
)

3579 
	`FUNC
(
x˘_t
::
lock_Àvñ
);

3580 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3581 
lockid_t
::
«me_•a˚_t
 
n
 = 
	`c⁄vît
(
l
);

3582 if(
n
 !
lockid_t
::
t_bad
) {

3583 
	`lock_öfo
()->
	`£t_lock_Àvñ
(
n
);

3585 
	}
}

3588 
	gx˘_t
::
	$©èch_thªad
()

3590 
	`FUNC
(
x˘_t
::
©èch_thªad
);

3591 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3593 
	`w_as£π2
(
	`is_1thªad_x˘_muãx_möe
());

3594 
¡
=
	`©omic_öc_nv
(
_c‹e
->
_thªads_©èched
);

3595 if(
¡
 > 1) {

3596 
	`INC_TSTAT
(
m∂_©èch_˙t
);

3598 
	`w_as£π2
(
_c‹e
->
_thªads_©èched
 >=0);

3599 
	`w_as£π2
(
	`is_1thªad_x˘_muãx_möe
());

3600 
	`me
()->
	`√w_x˘
(
this
);

3601 
	`w_as£π2
(
	`is_1thªad_x˘_muãx_möe
());

3602 
	}
}

3606 
	gx˘_t
::
	$dëach_thªad
()

3608 
	`FUNC
(
x˘_t
::
dëach_thªad
);

3609 
	`CRITICAL_SECTION
(
x˘°ru˘uª
, *
this
);

3610 
	`w_as£π3
(
	`is_1thªad_x˘_muãx_möe
());

3612 
	`©omic_dec
(
_c‹e
->
_thªads_©èched
);

3613 
	`w_as£π2
(
_c‹e
->
_thªads_©èched
 >=0);

3614 
	`me
()->
	`no_x˘
(
this
);

3615 
	}
}

3617 
w_rc_t


3618 
	gx˘_t
::
	$lockblock
(
timeout_ö_ms
 
timeout
)

3624 
	`CRITICAL_SECTION
(
bcs
, 
_c‹e
->
_waôîs_muãx
);

3625 
w_rc_t
 
rc
;

3626 if(
	`num_thªads
() > 1) {

3627 
	`DBGX
(<<"blocking on condn variable");

3631 
x˘_lock_öfo_t
* 
the_xlöfo
 = 
	`lock_öfo
();

3632 if(! 
the_xlöfo
->
	`waôög_ªque°
()) {

3634  
RCOK
;

3639 if(
timeout
 =
WAIT_IMMEDIATE
Ë 
	`RC
(
°hªad_t
::
°TIMEOUT
);

3640 if(
timeout
 =
WAIT_FOREVER
) {

3641 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_c‹e
->
_waôîs_c⁄d
, &_c‹e->
_waôîs_muãx
));

3643 
time•ec
 
whí
;

3644 
°hªad_t
::
	`timeout_to_time•ec
(
timeout
, 
whí
);

3645 
	`DO_PTHREAD_TIMED
(
	`±hªad_c⁄d_timedwaô
(&
_c‹e
->
_waôîs_c⁄d
, &_c‹e->
_waôîs_muãx
, &
whí
));

3648 
	`DBGX
(<<"not blocked on cond'n variable");

3650 if(
rc
.
	`is_îr‹
()) {

3651  
	`RC_AUGMENT
(
rc
);

3653  
rc
;

3654 
	}
}

3657 
	gx˘_t
::
	$lockunblock
()

3663 
	`CRITICAL_SECTION
(
bcs
, 
_c‹e
->
_waôîs_muãx
);

3664 if(
	`num_thªads
() > 1) {

3665 
	`DBGX
(<<"signalling waiters on cond'n variable");

3666 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
_c‹e
->
_waôîs_c⁄d
));

3667 
	`DBGX
(<<"signalling cond'n variable done");

3669 
	}
}

3678 
rc_t


3679 
	gx˘_t
::
	$check_⁄e_thªad_©èched
() const

3681 if(
	`⁄e_thªad_©èched
()Ë 
RCOK
;

3682  
	`RC
(
eTWOTHREAD
);

3683 
	}
}

3685 
boﬁ


3686 
	gx˘_t
::
	$⁄e_thªad_©èched
() const

3689 if–
_c‹e
->
_thªads_©èched
 > 1) {

3690 
chk±_£rül_m
::
	`åx_acquúe
();

3691 if–
_c‹e
->
_thªads_©èched
 > 1) {

3692 
chk±_£rül_m
::
	`åx_ªÀa£
();

3693 #i‡
W_DEBUG_LEVEL
 > 2

3694 
	`Ârötf
(
°dîr
,

3697 
_c‹e
->
_thªads_©èched
,

3699 
	`tid
().
	`gë_hi
(),Åid().
	`gë_lo
()

3702  
Ál£
;

3704 
chk±_£rül_m
::
	`åx_ªÀa£
();

3706  
åue
;

3707 
	}
}

3709 
boﬁ


3710 
	gx˘_t
::
	$is_1thªad_log_muãx_möe
() const

3712  
_1thªad_log
.
	`is_möe
(&
	`me
()->
	`gë_1thªad_log_me
());

3713 
	}
}

3714 
boﬁ


3715 
	gx˘_t
::
	$is_1thªad_x˘_muãx_möe
() const

3717  
_c‹e
->
_1thªad_x˘
.
	`is_möe
(&
	`me
()->
	`gë_1thªad_x˘_me
());

3718 
	}
}

3720 "C" 
x˘°›hîe
(
c
);

3721 
	$x˘°›hîe
() {

3722 
	}
}

3725 
	gx˘_t
::
	$acquúe_1thªad_log_muãx
()

3735 
	`w_as£π1
(
	`is_1thªad_x˘_muãx_möe
(Ë=
Ál£
);

3737 if(
	`is_1thªad_log_muãx_möe
()) {

3738 
	`DBGX
–<< " du∂iˇãácquúêlog muãx: " << 
_ö_com≥nßãd_›
);

3739 
	`w_as£π0
(
_ö_com≥nßãd_›
 > 0);

3740 
	`öc_acquúe_1thªad_log_dïth
();

3746 
boﬁ
 
was_c⁄ãnded
 = 
_1thªad_log
.
	`acquúe
(&
	`me
()->
	`gë_1thªad_log_me
());

3747 if(
was_c⁄ãnded
)

3748 
	`INC_TSTAT
(
awaô_1thªad_log
);

3749 
	`INC_TSTAT
(
acquúe_1thªad_log
);

3751 
	`DBGX
–<< "ácquúedÜog muãx: " << 
_ö_com≥nßãd_›
);

3752 
	`w_as£π0
(
_ö_com≥nßãd_›
 == 0);

3754 
	`öc_acquúe_1thªad_log_dïth
();

3755 
	}
}

3759 
	gx˘_t
::
	$acquúe_1thªad_x˘_muãx
() const

3763 
	`DBGX
( << "ácquire xct mutex");

3764 if(
	`is_1thªad_x˘_muãx_möe
()) {

3765 
	`DBGX
(<< "already mine");

3771 
boﬁ
 
was_c⁄ãnded
 = 
_c‹e
->
_1thªad_x˘
.
	`acquúe
(&
	`me
()->
	`gë_1thªad_x˘_me
());

3772 if(
was_c⁄ãnded
)

3773 
	`INC_TSTAT
(
awaô_1thªad_x˘
);

3774 
	`DBGX
( << "ácquireD xct mutex");

3775 
	`w_as£π2
(
	`is_1thªad_x˘_muãx_möe
());

3776 
	}
}

3779 
	gx˘_t
::
	$ªÀa£_1thªad_x˘_muãx
() const

3781 
	`DBGX
( << "Ñelease xct mutex");

3782 
	`w_as£π3
(
	`is_1thªad_x˘_muãx_möe
());

3783 
_c‹e
->
_1thªad_x˘
.
	`ªÀa£
(
	`me
()->
	`gë_1thªad_x˘_me
());

3784 
	`DBGX
( << "ÑeleaseD xct mutex");

3785 
	`w_as£π2
(!
	`is_1thªad_x˘_muãx_möe
());

3786 
	}
}

3789 
	gx˘_t
::
	$ªÀa£_1thªad_log_muãx
()

3791 
	`w_as£π2
(
	`is_1thªad_log_muãx_möe
());

3793 
	`dec_acquúe_1thªad_log_dïth
();

3795 
	`DBGX
( << " maybeÑeleaseÜog mutex: in_compensated_op = "

3796 << 
_ö_com≥nßãd_›
 << " holds xct_mutex_1=="

3800 if(
_ö_com≥nßãd_›
==0 ) {

3801 
_1thªad_log
.
	`ªÀa£
(
	`me
()->
	`gë_1thªad_log_me
());

3803 
	`DBGX
( << " in compensated operation: can'tÑeleaseÜog mutex");

3805 
	}
}

3808 
	go°ªam
 &

3809 
	gx˘_t
::
	$dump_locks
(
o°ªam
 &
out
) const

3811  
	`lock_öfo
()->
	`dump_locks
(
out
);

3812 
	}
}

3815 
	gsmÀvñ_0
::
swôch_t


3816 
x˘_t
::
	$£t_log_°©e
(
swôch_t
 
s
, 
boﬁ
 &)

3818 
x˘_log_t
 *
möe
 = 
	`me
()->
	`x˘_log
();

3819 
swôch_t
 
ﬁd
 = (
möe
->
	`x˘_log_is_off
()? 
OFF
: 
ON
);

3820 if(
s
==
OFF
Ë
möe
->
	`£t_x˘_log_off
();

3821 
möe
->
	`£t_x˘_log_⁄
();

3822  
ﬁd
;

3823 
	}
}

3826 
	gx˘_t
::
	$ª°‹e_log_°©e
(
swôch_t
 
s
, 
boﬁ
 
n
 )

3828 (Ë
	`£t_log_°©e
(
s
, 
n
);

3829 
	}
}

3832 
	glockid_t
::
«me_•a˚_t


3833 
x˘_t
::
	$c⁄vît
(
c⁄cuºícy_t
 
cc
)

3835 
cc
) {

3836 
t_cc_ªc‹d
:

3837  
lockid_t
::
t_ªc‹d
;

3839 
t_cc_∑ge
:

3840  
lockid_t
::
t_∑ge
;

3842 
t_cc_fûe
:

3843  
lockid_t
::
t_°‹e
;

3845 
t_cc_vﬁ
:

3846  
lockid_t
::
t_vﬁ
;

3848 
t_cc_kvl
:

3849 
t_cc_im
:

3850 
t_cc_modkvl
:

3851 
t_cc_bad
:

3852 
t_cc_n⁄e
:

3853 
t_cc_≠≥nd
:

3854  
lockid_t
::
t_bad
;

3856  
lockid_t
::
t_bad
;

3857 
	}
}

3859 
	gsmÀvñ_0
::
c⁄cuºícy_t


3860 
x˘_t
::
	$c⁄vît
(
lockid_t
::
«me_•a˚_t
 
n
)

3862 
n
) {

3864 
lockid_t
::
t_bad
:

3865 
lockid_t
::
t_kvl
:

3866 
lockid_t
::
t_exã¡
:

3869 
lockid_t
::
t_vﬁ
:

3870  
t_cc_vﬁ
;

3872 
lockid_t
::
t_°‹e
:

3873  
t_cc_fûe
;

3875 
lockid_t
::
t_∑ge
:

3876  
t_cc_∑ge
;

3878 
lockid_t
::
t_ªc‹d
:

3879  
t_cc_ªc‹d
;

3881 
	`W_FATAL
(
eINTERNAL
);

3882  
t_cc_bad
;

3883 
	}
}

3885 
NORET


3886 
	gx˘_dïídít_t
::
	$x˘_dïídít_t
(
x˘_t
* 
xd
Ë: 
	`_xd
(xd), 
	$_ªgi°îed
(
Ál£
)

3888 
	}
}

3891 
	gx˘_dïídít_t
::
	$ªgi°î_me
() {

3894 
x˘_t
* 
xd
 = 
_xd
;

3895 i‡(
xd
) {

3896 
	`W_COERCE
–
xd
->
	`add_dïídít
(
this
) );

3898 
_ªgi°îed
 = 
åue
;

3899 
	}
}

3901 
NORET


3902 
	gx˘_dïídít_t
::~
	$x˘_dïídít_t
()

3904 
	`w_as£π2
(
_ªgi°îed
);

3907 i‡(
_lök
.
	`membî_of
(Ë!
NULL
) {

3908 
	`w_as£π1
(
_xd
);

3910 
	`W_COERCE
(
_xd
->
	`ªmove_dïídít
(
this
));

3912 
	}
}

	@src/sm/xct.h

53 #i‚de‡
XCT_H


54 
	#XCT_H


	)

56 
	~"w_deföes.h
"

59 
	~"x˘_dïídít.h
"

63 #ifde‡
__GNUG__


64 #¥agm®
öãrÁ˚


67 #i‡
W_DEBUG_LEVEL
 > 4

72 
	#X_LOG_COMMENT_ON
 1

	)

73 
	#ADD_LOG_COMMENT_SIG
 ,c⁄° *
debugmsg


	)

74 
	#ADD_LOaG_COMMENT_USE
 ,
debugmsg


	)

75 
	#LOG_COMMENT_USE
(
x
Ë,
	)
x

79 
	#X_LOG_COMMENT_ON
 0

	)

80 
	#ADD_LOG_COMMENT_SIG


	)

81 
	#ADD_LOG_COMMENT_USE


	)

82 
	#LOG_COMMENT_USE
(
x
)

	)

85 
	~"block_Æloc.h
"

87 
˛ass
 
	gx˘_dïídít_t
;

95 ˛as†
	cx˘_log_t
 : 
public
 
smÀvñ_1
 {

96 
¥iv©e
:

98 
boﬁ
 
_x˘_log_off
;

99 
	mpublic
:

100 
NORET
 
	$x˘_log_t
(): 
	$_x˘_log_off
(
Ál£
) {};

101 
boﬁ
 
	$x˘_log_is_off
(Ë{  
_x˘_log_off
; 
	}
}

102 
	$£t_x˘_log_off
(Ë{ 
_x˘_log_off
 = 
åue
; 
	}
}

103 
	$£t_x˘_log_⁄
(Ë{ 
_x˘_log_off
 = 
Ál£
; 
	}
}

107 
˛ass
 
	glockid_t
;

108 
˛ass
 
	gsdesc_ˇche_t
;

109 
˛ass
 
	gx˘_i
;

110 
˛ass
 
	gª°¨t_m
;

111 
˛ass
 
	glock_m
;

112 
˛ass
 
	glock_c‹e_m
;

113 
˛ass
 
	glock_ªque°_t
;

114 
˛ass
 
	gx˘_log_swôch_t
;

115 
˛ass
 
	gx˘_lock_öfo_t
;

116 
˛ass
 
	gx˘_¥ï¨e_Æk_log
;

117 
˛ass
 
	gx˘_¥ï¨e_fi_log
;

118 
˛ass
 
	gx˘_¥ï¨e_lk_log
;

119 
˛ass
 
	gsm_qu¨k_t
;

120 
˛ass
 
	gsmthªad_t
;

121 
˛ass
 
	gx˘_li°
;

122 
˛ass
 
	gx˘_lök
;

124 
˛ass
 
	glogªc_t
;

125 
˛ass
 
	g∑ge_p
;

127 ˛as†
	c°id_li°_ñem_t
 {

128 
	mpublic
:

129 
°id_t
 
°id
;

130 
w_lök_t
 
	m_lök
;

132 
	$°id_li°_ñem_t
(c⁄° 
°id_t
& 
theStid
)

133 : 
	$°id
(
theStid
)

135 ~
	$°id_li°_ñem_t
()

137 i‡(
_lök
.
	`membî_of
(Ë!
NULL
)

138 
_lök
.
	`dëach
();

139 
	}
}

140 
	gw_ba£_t
::
uöt4_t
 
	$lök_off£t
()

142  
	`W_LIST_ARG
(
°id_li°_ñem_t
, 
_lök
);

143 
	}
}

155 ˛as†
	cx˘_t
 : 
public
 
smÀvñ_1
 {

157 #i‡
USE_BLOCK_ALLOC_FOR_LOGREC


158 
‰õnd
 
˛ass
 
block_Æloc
<
x˘_t
>;

160 
‰õnd
 
˛ass
 
	mx˘_i
;

161 
‰õnd
 
	mx˘_li°
;

162 
‰õnd
 
˛ass
 
	msmthªad_t
;

163 
‰õnd
 
˛ass
 
	mª°¨t_m
;

164 
‰õnd
 
˛ass
 
	mlock_m
;

165 
‰õnd
 
˛ass
 
	mlock_c‹e_m
;

166 
‰õnd
 
˛ass
 
	mlock_ªque°_t
;

167 
‰õnd
 
˛ass
 
	mx˘_log_swôch_t
;

168 
‰õnd
 
˛ass
 
	mx˘_¥ï¨e_Æk_log
;

169 
‰õnd
 
˛ass
 
	mx˘_¥ï¨e_fi_log
;

170 
‰õnd
 
˛ass
 
	mx˘_¥ï¨e_lk_log
;

171 
‰õnd
 
˛ass
 
	msm_qu¨k_t
;

172 
‰õnd
 
˛ass
 
	mx˘_lock_öfo_t
;

173 
‰õnd
 
˛ass
 
	mobje˘_ˇche_öôülizög_Á˘‹y
<
	mx˘_t
>;

175 
	m¥Ÿe˘ed
:

176 
	ecommô_t
 { 
t_n‹mÆ
 = 0, 
	mt_œzy
 = 1, 
	mt_chaö
 = 2 };

180 
	gpublic
:

181 
x˘_°©e_t
 
	t°©e_t
;

184 
x˘_t
* 
√w_x˘
(

185 
sm_°©s_öfo_t
* 
°©s
 = 0,

186 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_THREAD
);

189 
x˘_t
* 
√w_x˘
(

190 c⁄° 
tid_t
& 
tid
,

191 
°©e_t
 
s
,

192 c⁄° 
l¢_t
& 
œ°_l¢
,

193 c⁄° 
l¢_t
& 
undo_nxt
,

194 
timeout_ö_ms
 
timeout
 = 
WAIT_SPECIFIED_BY_THREAD
);

196 
de°roy_x˘
(
x˘_t
* 
xd
);

198 
£t_ñr_íabÀd
(
boﬁ
 
íabÀ
);

200 
	gx˘_c‹e
;

201 
	g¥iv©e
:

202 
NORET
 
x˘_t
();

203 
öô
(

204 
x˘_c‹e
* 
c‹e
,

205 
sm_°©s_öfo_t
* 
°©s
,

206 c⁄° 
l¢_t
& 
œ°_l¢
,

207 c⁄° 
l¢_t
& 
undo_nxt
);

208 
	gNORET
 ~
x˘_t
();

209 
ª£t
();

211 
	gpublic
:

213 
‰õnd
 
o°ªam
& 
›î©‹
<<(o°ªam&, c⁄° 
	gx˘_t
&);

215 
cﬁÀ˘
(
vèbÀ_t
&, 
boﬁ
 
«mes_too
);

216 
vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &);

217 
vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &);

219 
°©e_t
 
	$°©e
() const;

220 
	`£t_timeout
(
timeout_ö_ms
 
t
) ;

222 
timeout_ö_ms
 
	$timeout_c
() const;

227 
public
:

228 
	`f‹˚_ªad⁄ly
();

229 
boﬁ
 
	$f‹˚d_ªad⁄ly
() const;

231 
vŸe_t
 
	$vŸe
() const;

232 
boﬁ
 
	$is_exã∫2pc
() const;

233 
rc_t
 
	`íãr2pc
(c⁄° 
gtid_t
 &
g
);

234 c⁄° 
gtid_t
* 
	$gtid
() const;

235 c⁄° 
£rvî_h™dÀ_t
& 
	$gë_co‹dö©‹
()const;

236 
	`£t_co‹dö©‹
(c⁄° 
£rvî_h™dÀ_t
 &);

237 
rc_t
 
	`ªcovî2pc
(c⁄° 
gtid_t
 &
g
,

238 
boﬁ
 
mayblock
, 
x˘_t
 *&);

239 
rc_t
 
	`quîy_¥ï¨ed
(&
numtids
);

240 
rc_t
 
	`quîy_¥ï¨ed
(
numtids
, 
gtid_t
 
l
[]);

242 
rc_t
 
	`¥ï¨e
();

243 
rc_t
 
	`log_¥ï¨ed
(
boﬁ
 
ö_chk±
=
Ál£
);

248 
public
:

249 
	`dump
(
o°ªam
 &
o
);

250 
	`˛ónup
(
boﬁ
 
di•o£_¥ï¨ed
=
Ál£
);

254 
boﬁ
 
	$is_ö°rumíãd
() {

255  (
__°©s
 != 0);

256 
	}
}

257 
	$give_°©s
(
sm_°©s_öfo_t
* 
s
) {

258 
	`w_as£π1
(
__°©s
 == 0);

259 
__°©s
 = 
s
;

260 
	}
}

261 
	$˛ór_°©s
() {

262 
	`mem£t
(
__°©s
,0, (*__stats));

263 
	}
}

264 
sm_°©s_öfo_t
* 
	$°ól_°©s
() {

265 
sm_°©s_öfo_t
*
s
 = 
__°©s
;

266 
__°©s
 = 0;

267  
s
;

268 
	}
}

269 c⁄° 
	gsm_°©s_öfo_t
& 
	$c⁄°_°©s_ªf
(Ë{  *
__°©s
; 
	}
}

270 
rc_t
 
commô
(
boﬁ
 
œzy
 = 
Ál£
, 
l¢_t
* 
∂a°l¢
=
NULL
);

271 
rc_t
 
rﬁlback
(c⁄° 
l¢_t
 &
ßve_±
);

272 
rc_t
 
ßve_poöt
(
l¢_t
& 
l¢
);

273 
rc_t
 
chaö
(
boﬁ
 
œzy
 = 
Ál£
);

274 
rc_t
 
ab‹t
(
boﬁ
 
ßve_°©s
 = 
Ál£
);

277 
	g¥Ÿe˘ed
:

278 
sm_°©s_öfo_t
& 
	$°©s_ªf
(Ë{  *
__°©s
; 
	}
}

279 
rc_t
 
di•o£
();

280 
ch™ge_°©e
(
°©e_t
 
√w_°©e
);

281 
£t_fú°_l¢
(c⁄° 
l¢_t
 &) ;

282 
£t_œ°_l¢
(c⁄° 
l¢_t
 &) ;

283 
£t_undo_nxt
(c⁄° 
l¢_t
 &) ;

286 
	gpublic
:

289 c⁄° 
l¢_t
& 
	$œ°_l¢
() const;

290 c⁄° 
l¢_t
& 
	$fú°_l¢
() const;

291 c⁄° 
l¢_t
& 
	$undo_nxt
() const;

292 
boﬁ
 
	$is_ªad_⁄ly_soÁr
() const;

293 c⁄° 
logªc_t
* 
	$œ°_log
() const;

294 
fûeoff_t
 
	$gë_log_•a˚_u£d
() const;

295 
rc_t
 
	`waô_f‹_log_•a˚
(
fûeoff_t
 
amt
);

298 
x˘_t
* 
	`look_up
(c⁄° 
tid_t
& 
tid
);

299 
tid_t
 
	`ﬁde°_tid
();

300 
tid_t
 
	`younge°_tid
();

303 
w_ba£_t
::
uöt4_t
 
	`num_a˘ive_x˘s
();

307 c⁄° 
l¢_t
& 
	`™ch‹
(
boﬁ
 
gøbô
 = 
åue
);

308 
	`ªÀa£_™ch‹
(
boﬁ
 
com≥nßã


309 
ADD_LOG_COMMENT_SIG


311 
	$com≥nßãd_›_dïth
() const ;

324 
	$°¨t_¸ô
(Ë{ (Ë
	`™ch‹
(
Ál£
); 
	}
}

330 
	$°›_¸ô
(Ë{(Ë
	`ªÀa£_™ch‹
(
Ál£


331 
	`LOG_COMMENT_USE
–"°›¸ô"));
	}
}

334 
com≥nßã
(c⁄° 
l¢_t
&,

335 
boﬁ
 
undﬂbÀ


336 
ADD_LOG_COMMENT_SIG


339 
com≥nßã_undo
(c⁄° 
l¢_t
&);

347 
log_w¨n_dißbÀ
();

348 
log_w¨n_ªsume
();

349 
boﬁ
 
	$log_w¨n_is_⁄
() const;

353 
public
:

355 
rc_t
 
	`add_dïídít
(
x˘_dïídít_t
* 
dïídít
);

356 
rc_t
 
	`ªmove_dïídít
(
x˘_dïídít_t
* 
dïídít
);

357 
boﬁ
 
	`föd_dïídít
(
x˘_dïídít_t
* 
dïídít
);

362 
boﬁ
 
	$is_log_⁄
() const;

363 
rc_t
 
	`gë_logbuf
(
logªc_t
*&, c⁄° 
∑ge_p
 *
p
 = 0);

364 
rc_t
 
	`give_logbuf
(
logªc_t
*, c⁄° 
∑ge_p
 *
p
 = 0);

369 
	`AddSt‹eToFªe
(c⁄° 
°id_t
& 
°id
);

370 
	`AddLﬂdSt‹e
(c⁄° 
°id_t
& 
°id
);

372 
	$£t_Ælo˚d
(Ë{ 
	}
}

374 
num_exã¡s_m¨ked_f‹_dñëi⁄
(

375 
ba£_°©_t
 &
num
);

376 
	gpublic
:

378 
GëEsˇœti⁄Thªshﬁds
(

379 
w_ba£_t
::
öt4_t
 &
toPage
,

380 
w_ba£_t
::
öt4_t
 &
toSt‹e
,

381 
w_ba£_t
::
öt4_t
 &
toVﬁume
);

382 
SëEsˇœti⁄Thªshﬁds
(

383 
w_ba£_t
::
öt4_t
 
toPage
,

384 
w_ba£_t
::
öt4_t
 
toSt‹e
,

385 
w_ba£_t
::
öt4_t
 
toVﬁume
);

386 
boﬁ
 
£t_lock_ˇche_íabÀ
(boﬁ 
íabÀ
);

387 
boﬁ
 
lock_ˇche_íabÀd
();

389 
	g¥Ÿe˘ed
:

394 
lockid_t
* 
√w_lock_hõørchy
();

395 
dñëe_lock_hõørchy
(
lockid_t
* &
l
);

396 
sdesc_ˇche_t
* 
√w_sdesc_ˇche_t
();

397 
dñëe_sdesc_ˇche_t
(
sdesc_ˇche_t
* &
sdc
);

398 
x˘_log_t
* 
√w_x˘_log_t
();

399 
dñëe_x˘_log_t
(
x˘_log_t
* &
l
);

400 
°ól
(
lockid_t
*&, 
sdesc_ˇche_t
*&, 
x˘_log_t
*&);

401 
°ash
(
lockid_t
*&, 
sdesc_ˇche_t
*&, 
x˘_log_t
*&);

403 
©èch_thªad
();

404 
dëach_thªad
();

408 
lockid_t
* 
	$lock_öfo_hõørchy
() const {

409  
	`me
()->
	`lock_hõørchy
();

410 
	}
}

411 
	gpublic
:

413 
sdesc_ˇche_t
* 
	$sdesc_ˇche
() const;

415 
¥Ÿe˘ed
:

418 
swôch_t
 
	`£t_log_°©e
(swôch_à
s
);

420 
	`ª°‹e_log_°©e
(
swôch_t
 
s
);

423 
public
:

424 
c⁄cuºícy_t
 
	`gë_lock_Àvñ
();

425 
	`lock_Àvñ
(
c⁄cuºícy_t
 
l
);

427 
	`num_thªads
();

428 
rc_t
 
	$check_⁄e_thªad_©èched
() const;

429 
	`©èch_upd©e_thªad
();

430 
	`dëach_upd©e_thªad
();

431 
	$upd©e_thªads
() const;

433 
¥Ÿe˘ed
:

435 
w_rc_t
 
	`lockblock
(
timeout_ö_ms
 
timeout
);

436 
	`lockunblock
();

437 c⁄° 
w_ba£_t
::
öt4_t
* 
	`GëEsˇœti⁄ThªshﬁdsAºay
();

439 
rc_t
 
	$check_lock_tŸÆs
(
√x
,

440 
nix
, 
nsix
, ) const;

441 
rc_t
 
	`obèö_locks
(
lock_mode_t
 
mode
,

442 
∆ks
, c⁄° 
lockid_t
 *
l
);

443 
rc_t
 
	`obèö_⁄e_lock
(
lock_mode_t
 
mode
,

444 c⁄° 
lockid_t
 &
l
);

446 
x˘_lock_öfo_t
* 
	$lock_öfo
() const;

448 
public
:

462 
	`f‹˚_n⁄blockög
();

468 
¥Ÿe˘ed
:

469 
x˘_lök
* 
_xlök
;

470 
	`joö_xli°
();

471 
	ex˘_íd_ty≥
 { 
x˘_íd_nﬁog
, 
x˘_íd_commô
, 
x˘_íd_ab‹t
 
	}
};

472 
rc_t
 
_x˘_íded
(
x˘_íd_ty≥
 
ty≥
);

474 
	g¥iv©e
:

475 
sm_°©s_öfo_t
* 
__°©s
;

476 
sdesc_ˇche_t
* 
	g__ßved_sdesc_ˇche_t
;

477 
boﬁ
 
	g__ßved_sdesc_ow√r
;

479 
	gpublic
:

480 
	$acquúe_1thªad_x˘_muãx
() const;

481 
	$ªÀa£_1thªad_x˘_muãx
() const;

482 
boﬁ
 
	$is_1thªad_log_muãx_möe
() const;

485 
¥iv©e
:

486 
	`acquúe_1thªad_log_muãx
();

487 
	`ªÀa£_1thªad_log_muãx
();

488 
	$as£π_1thªad_log_muãx_‰ì
()const;

489 
¥iv©e
:

490 
boﬁ
 
	$is_1thªad_x˘_muãx_möe
() const;

491 
	$as£π_1thªad_x˘_muãx_‰ì
()const;

493 
rc_t
 
	`_ab‹t
();

494 
rc_t
 
	`_commô
(
w_ba£_t
::
uöt4_t
 
Êags
,

495 
l¢_t
* 
∂a°l¢
=
NULL
);

497 
¥Ÿe˘ed
:

499 
swôch_t
 
	`£t_log_°©e
(swôch_à
s
, 
boﬁ
 &
√°ed
);

500 
	`ª°‹e_log_°©e
(
swôch_t
 
s
, 
boﬁ
 
√°ed
);

502 
¥iv©e
:

503 
boﬁ
 
	$⁄e_thªad_©èched
() const;

505 
	`_com≥nßã
(c⁄° 
l¢_t
&, 
boﬁ
 
undﬂbÀ
 = 
Ál£
);

507 
w_ba£_t
::
öt4_t
 
esˇœti⁄Thªshﬁds
[
lockid_t
::
NUMLEVELS
-1];

508 
public
:

509 
	`SëDeÁu…Esˇœti⁄Thªshﬁds
();

511 
	`CÀ¨AŒSt‹esToFªe
();

512 
	`FªeAŒSt‹esToFªe
();

513 
rc_t
 
	`Pª∑ªLogAŒSt‹esToFªe
();

514 
	`DumpSt‹esToFªe
();

515 
rc_t
 
	`C⁄vîtAŒLﬂdSt‹esToReguœrSt‹es
();

516 
	`CÀ¨AŒLﬂdSt‹es
();

518 
o°ªam
 & 
	$dump_locks
(
o°ªam
 &) const;

521 
¥iv©e
:

527 
	`x˘_°©s
(

528 
u_l⁄g
& 
begös
,

529 
u_l⁄g
& 
commôs
,

530 
u_l⁄g
& 
ab‹ts
,

531 
boﬁ
 
ª£t
);

533 
w_rc_t
 
	`_Êush_logbuf
();

534 
w_rc_t
 
	`_sync_logbuf
(
boﬁ
 
block
=
åue
);

535 
	`_ã¨down
(
boﬁ
 
is_chaöög
);

537 
public
:

549 
	sx˘_c‹e


551 
	`öô
(
tid_t
 c⁄° &
t
, 
°©e_t
 
s
, 
timeout_ö_ms
 
timeout
);

552 
	`ª£t
();

553 
	`x˘_c‹e
();

554 ~
	`x˘_c‹e
();

557 
timeout_ö_ms
 
_timeout
;

558 
boﬁ
 
_w¨n_⁄
;

559 
x˘_lock_öfo_t
* 
_lock_öfo
;

569 
boﬁ
 
_lock_ˇche_íabÀ
;

574 
queue_ba£d_lock_t
 
_1thªad_x˘
;

578 vﬁ©ûê
_upd©ög_›î©i⁄s
;

581 vﬁ©ûê
_thªads_©èched
;

584 
±hªad_c⁄d_t
 
_waôîs_c⁄d
;

585 
muèbÀ
 
±hªad_muãx_t
 
_waôîs_muãx
;

587 
°©e_t
 
_°©e
;

588 
boﬁ
 
_f‹˚d_ªad⁄ly
;

589 
vŸe_t
 
_vŸe
;

590 
gtid_t
 * 
_globÆ_tid
;

591 
£rvî_h™dÀ_t
* 
_co‹d_h™dÀ
;

592 
boﬁ
 
_ªad_⁄ly
;

598 
w_li°_t
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
_°‹esToFªe
;

604 
w_li°_t
<
°id_li°_ñem_t
,
queue_ba£d_lock_t
> 
_lﬂdSt‹es
;

606 vﬁ©ûê
_x˘_íded
;

607 
	}
};

609 
	g¥iv©e
:

616 
muèbÀ
 
queue_ba£d_lock_t
 
_1thªad_log
;

618 
l¢_t
 
	g_fú°_l¢
;

619 
l¢_t
 
	g_œ°_l¢
;

620 
l¢_t
 
	g_undo_nxt
;

624 
	gw_li°_t
<
	gx˘_dïídít_t
,
	gqueue_ba£d_lock_t
> 
	g_dïídít_li°
;

629 
	glockid_t
::
«me_•a˚_t
 
c⁄vît
(
c⁄cuºícy_t
 
cc
);

630 
c⁄cuºícy_t
 
c⁄vît
(
lockid_t
::
«me_•a˚_t
 
n
);

635 
logªc_t
* 
	g_œ°_log
;

636 
logªc_t
* 
	g_log_buf
;

641 
fûeoff_t
 
	g_log_byãs_rsvd
;

642 
fûeoff_t
 
	g_log_byãs_ªady
;

643 
fûeoff_t
 
	g_log_byãs_u£d
;

644 
boﬁ
 
	g_rﬁlög_back
;

647 #i‡
CHECK_NESTING_VARIABLES


649 vﬁ©ûê
	g_acquúe_1thªad_log_dïth
;

650 
	gpublic
:

651 
	$öc_acquúe_1thªad_log_dïth
(Ë{ 
_acquúe_1thªad_log_dïth
 ++; 
	}
}

652 
	$dec_acquúe_1thªad_log_dïth
(Ë{ -- 
_acquúe_1thªad_log_dïth
; 
	}
}

653 
	$acquúe_1thªad_log_dïth
() const { 

654 
_acquúe_1thªad_log_dïth
; 
	}
}

656 
	gpublic
:

657 
	$öc_acquúe_1thªad_log_dïth
(Ë{ 
	}
}

658 
	$dec_acquúe_1thªad_log_dïth
(Ë{ 
	}
}

659 
	$acquúe_1thªad_log_dïth
(Ëc⁄° {  0; 
	}
}

661 
	g¥iv©e
:

663 vﬁ©ûê
_ö_com≥nßãd_›
;

666 
l¢_t
 
	g_™ch‹
;

669 
x˘_c‹e
* 
	g_c‹e
;

671 
	gpublic
:

672 
tid_t
 
	$tid
() const;

673 
	}
};

676 ˛as†
	cauto_ªÀa£_™ch‹_t
 {

677 
	m¥iv©e
:

678 
x˘_t
* 
_xd
;

679 
l¢_t
 
	m_™ch‹
;

680 
boﬁ
 
	m_™d_com≥nßã
;

681 
	m_löe
;

683 
›î©‹
 
l¢_t
 c⁄°&(Ëc⁄° {  
	m_™ch‹
; }

684 
	gpublic
:

686 
	$auto_ªÀa£_™ch‹_t
(
boﬁ
 
™d_com≥nßã
, 
löe
)

687 : 
	`_xd
(
	`x˘
()), 
	`_™d_com≥nßã
(
™d_com≥nßã
), 
	$_löe
(
löe
)

689 if(
_xd
)

690 
_™ch‹
 = 
_xd
->
	`™ch‹
(
_™d_com≥nßã
);

691 
	}
}

692 
	$com≥nßã
() {

693 if(
_xd
)

694 
_xd
->
	`com≥nßã
(
_™ch‹
, 
Ál£


695 
	`LOG_COMMENT_USE
("auto_release_anchor_t")

697 
_xd
 = 0;

698 
	}
}

699 ~
auto_ªÀa£_™ch‹_t
();

706 #i‡
X_LOG_COMMENT_ON


707 
	#X_DO1
(
x
,
™ch‹
,
löe
) \

709 
w_rc_t
 
__e
 = (
x
); \

710 i‡(
__e
.
	`is_îr‹
()) { \

711 
	`w_as£π3
(
	`x˘
()); \

712 
	`W_COERCE
(
	`x˘
()->
	`rﬁlback
(
™ch‹
)); \

713 
	`x˘
()->
	`ªÀa£_™ch‹
(
åue
, 
löe
 ); \

714  
	`RC_AUGMENT
(
__e
); \

716 }

	)

717 
	#to_°rög
(
x
Ë#x

	)

718 
	#X_DO
(
x
,
™ch‹
Ë
	`X_DO1
(x,™ch‹, 
	`to_°rög
(x))

	)

722 
	#X_DO
(
x
,
™ch‹
) \

724 
w_rc_t
 
__e
 = (
x
); \

725 i‡(
__e
.
	`is_îr‹
()) { \

726 
	`w_as£π3
(
	`x˘
()); \

727 
	`W_COERCE
(
	`x˘
()->
	`rﬁlback
(
™ch‹
)); \

728 
	`x˘
()->
	`ªÀa£_™ch‹
(
åue
); \

729  
	`RC_AUGMENT
(
__e
); \

731 }

	)

735 ˛as†
	cx˘_log_swôch_t
 : 
public
 
smÀvñ_0
 {

743 
swôch_t
 
ﬁd_°©e
;

744 
	mpublic
:

746 
NORET
 
	$x˘_log_swôch_t
(
swôch_t
 
s
Ë: 
	$ﬁd_°©e
(
OFF
)

748 if(
smÀvñ_1
::
log
) {

749 
	`INC_TSTAT
(
log_swôches
);

750 i‡(
	`x˘
()) {

751 
ﬁd_°©e
 = 
	`x˘
()->
	`£t_log_°©e
(
s
);

756 
NORET


757 ~
	$x˘_log_swôch_t
() {

758 if(
smÀvñ_1
::
log
) {

759 i‡(
	`x˘
()) {

760 
	`x˘
()->
	`ª°‹e_log_°©e
(
ﬁd_°©e
);

763 
	}
}

767 
ölöe


768 
boﬁ
 
	gx˘_t
::
	$is_log_⁄
() const {

769  (
	`me
()->
	`x˘_log
()->
	`x˘_log_is_off
(Ë=
Ál£
);

770 
	}
}

776 ˛as†
	cx˘_auto_ab‹t_t
 : 
public
 
smÀvñ_1
 {

777 
public
:

778 
	$x˘_auto_ab‹t_t
(Ë: 
	`_x˘
(
x˘_t
::
	$√w_x˘
()) {}

779 ~
	$x˘_auto_ab‹t_t
() {

780 
_x˘
->
	`°©e
()) {

781 
smÀvñ_1
::
x˘_íded
:

784 
smÀvñ_1
::
x˘_a˘ive
:

785 
	`W_COERCE
(
_x˘
->
	`ab‹t
());

788 
	`W_FATAL
(
eINTERNAL
);

790 
x˘_t
::
	`de°roy_x˘
(
_x˘
);

791 
	}
}

792 
rc_t
 
	$commô
() {

795 
	`W_DO
(
_x˘
->
	`commô
());

796  
RCOK
;

797 
	}
}

798 
rc_t
 
	$ab‹t
(Ë{
	`W_DO
(
_x˘
->
	`ab‹t
());  
RCOK
;
	}
}

800 
	g¥iv©e
:

801 
x˘_t
* 
_x˘
;

811 
	sx˘_i
 {

812 
	smaybe_lock
 {

813 
boﬁ
 
	m_Æªady_locked
;

814 
maybe_lock
(
boﬁ
 
Æªady_locked
);

815 ~
maybe_lock
();

817 
maybe_lock
 
	m_lock
;

818 
x˘_lök
* 
	m_íd_xd
;

819 
x˘_lök
* 
	m_cur_xd
;

820 
x˘_i
(
boﬁ
 
Æªady_locked
=
Ál£
);

821 ~
x˘_i
();

822 
x˘_t
* 
√xt
(
boﬁ
 
ˇn_dñëe
=
Ál£
);

823 
x˘_t
* 
îa£_™d_√xt
();

824 
	m¥iv©e
:

826 
x˘_i
(const xct_i&);

827 
	mx˘_i
& 
	m›î©‹
=(c⁄° 
x˘_i
&);

832 
ölöe


833 
	gx˘_t
::
°©e_t


834 
x˘_t
::
	$°©e
() const

836  
_c‹e
->
_°©e
;

837 
	}
}

840 
ölöe


841 
boﬁ


842 
	g›î©‹
>(c⁄° 
	gx˘_t
& 
	gx1
, c⁄° x˘_t& 
	gx2
)

844  (
	gx1
.
tid
(Ë> 
	gx2
.tid());

847 
ölöe
 

848 
	gx˘_t
::
	$SëEsˇœti⁄Thªshﬁds
(
w_ba£_t
::
öt4_t
 
toPage
,

849 
w_ba£_t
::
öt4_t
 
toSt‹e
,

850 
w_ba£_t
::
öt4_t
 
toVﬁume
)

852 i‡(
toPage
 !
d⁄tModifyThªshﬁd
)

853 
esˇœti⁄Thªshﬁds
[2] = 
toPage
;

855 i‡(
toSt‹e
 !
d⁄tModifyThªshﬁd
)

856 
esˇœti⁄Thªshﬁds
[1] = 
toSt‹e
;

858 i‡(
toVﬁume
 !
d⁄tModifyThªshﬁd
)

859 
esˇœti⁄Thªshﬁds
[0] = 
toVﬁume
;

860 
	}
}

862 
ölöe
 

863 
	gx˘_t
::
	$SëDeÁu…Esˇœti⁄Thªshﬁds
()

865 
	`SëEsˇœti⁄Thªshﬁds
(
smÀvñ_0
::
deÁu…LockEsˇœãToPageThªshﬁd
,

866 
smÀvñ_0
::
deÁu…LockEsˇœãToSt‹eThªshﬁd
,

867 
smÀvñ_0
::
deÁu…LockEsˇœãToVﬁumeThªshﬁd
);

868 
	}
}

870 
ölöe
 

871 
	gx˘_t
::
	$GëEsˇœti⁄Thªshﬁds
(
w_ba£_t
::
öt4_t
 &
toPage
,

872 
w_ba£_t
::
öt4_t
 &
toSt‹e
,

873 
w_ba£_t
::
öt4_t
 &
toVﬁume
)

875 
toPage
 = 
esˇœti⁄Thªshﬁds
[2];

876 
toSt‹e
 = 
esˇœti⁄Thªshﬁds
[1];

877 
toVﬁume
 = 
esˇœti⁄Thªshﬁds
[0];

878 
	}
}

880 
ölöe
 c⁄° 
	gw_ba£_t
::
öt4_t
 *

881 
x˘_t
::
	$GëEsˇœti⁄ThªshﬁdsAºay
()

883  
esˇœti⁄Thªshﬁds
;

884 
	}
}

886 
ölöe


887 
	gx˘_t
::
vŸe_t


888 
x˘_t
::
	$vŸe
() const

890  
_c‹e
->
_vŸe
;

891 
	}
}

893 
ölöe


894 c⁄° 
	gl¢_t
&

895 
	gx˘_t
::
	$œ°_l¢
() const

897  
_œ°_l¢
;

898 
	}
}

900 
ölöe


902 
	gx˘_t
::
	$£t_œ°_l¢
–c⁄° 
l¢_t
&
l
)

904 
_œ°_l¢
 = 
l
;

905 
	}
}

907 
ölöe


908 c⁄° 
	gl¢_t
&

909 
	gx˘_t
::
	$fú°_l¢
() const

911  
_fú°_l¢
;

912 
	}
}

914 
ölöe


916 
	gx˘_t
::
	$£t_fú°_l¢
(c⁄° 
l¢_t
 &
l
)

918 
_fú°_l¢
 = 
l
;

919 
	}
}

921 
ölöe


922 c⁄° 
	gl¢_t
&

923 
	gx˘_t
::
	$undo_nxt
() const

925  
_undo_nxt
;

926 
	}
}

928 
ölöe


930 
	gx˘_t
::
	$£t_undo_nxt
(c⁄° 
l¢_t
 &
l
)

932 
_undo_nxt
 = 
l
;

933 
	}
}

935 
ölöe


936 
boﬁ
 
	gx˘_t
::
	$is_ªad_⁄ly_soÁr
() const

938  (
_fú°_l¢
 =
l¢_t
::
nuŒ
);

939 
	}
}

941 
ölöe


942 c⁄° 
logªc_t
*

943 
	gx˘_t
::
	$œ°_log
() const

945  
_œ°_log
;

946 
	}
}

948 
ölöe


949 
boﬁ


950 
	gx˘_t
::
	$f‹˚d_ªad⁄ly
() const

952  
_c‹e
->
_f‹˚d_ªad⁄ly
;

953 
	}
}

964 
ölöe
 
boﬁ


965 
	gx˘_t
::
	$is_exã∫2pc
()

969  
_c‹e
->
_globÆ_tid
 != 0;

970 
	}
}

973 
ölöe


974 c⁄° 
gtid_t
*

975 
	gx˘_t
::
	$gtid
() const

977  
_c‹e
->
_globÆ_tid
;

978 
	}
}

	@src/sm/xct_dependent.h

30 #i‚de‡
XCT_DEPENDENT_H


31 
	#XCT_DEPENDENT_H


	)

33 
	~"w_deföes.h
"

37 
˛ass
 
	gx˘_t
;

39 ˛as†
	cx˘_dïídít_t
 {

40 
	mpublic
:

41 
vútuÆ
 
NORET
 ~
x˘_dïídít_t
();

43 
vútuÆ
 
x˘_°©e_ch™ged
(

44 
smÀvñ_1
::
x˘_°©e_t
 
ﬁd_°©e
,

45 
smÀvñ_1
::
x˘_°©e_t
 
√w_°©e
) = 0;

47 
x˘_t
* 
	$xd
(Ëc⁄° {  
_xd
; }

48 
¥Ÿe˘ed
:

49 
NORET
 
	`x˘_dïídít_t
(
x˘_t
* 
xd
);

58 
	`ªgi°î_me
();

59 
¥iv©e
:

60 
‰õnd
 
˛ass
 
x˘_t
;

64 
x˘_t
 * 
_xd
;

65 
w_lök_t
 
_lök
;

66 
boﬁ
 
_ªgi°îed
;

67 
	}
};

	@src/sm/zkeyed.cpp

53 
	~"w_deföes.h
"

60 
	#MAXPFX
 
	`max_num_íåõs
()

	)

68 
	#MAX_PREFIX_LEVEL
 10

	)

70 
	#SM_SOURCE


	)

71 
	#ZKEYED_C


	)

72 
	~<sm_öt_1.h
>

73 #ifde‡
__GNUG__


74 #¥agm®
im∂emíèti⁄


77 
	~<zkeyed.h
>

79 
	$MAKEPAGECODE
(
zkeyed_p
, 
∑ge_p
)

82 
max_¥efix_Àvñ
 = 
MAX_PREFIX_LEVEL
;

95 
rc_t


96 
zkeyed_p
::
	$shi·
(
¶Ÿid_t
 
idx
, 
zkeyed_p
* 
rsib
, 
boﬁ
 
com¥es£d
)

98 
	`FUNC
(
zkeyed_p
::
shi·
);

99 
	`w_as£π1
(
idx
 >0 && idx < 
	`ƒecs
());

101 
n
 = 
	`ƒecs
(Ë- 
idx
;

103 
	`DBG
(<<"zkeyed_p::SHIFT "

104 << " (com¥es£d=" << 
com¥es£d


105 << "Ë‰omÖagê" << 
	`pid
().
∑ge
 << " idx " << 
idx


106 << " #ªc†" << 
n


109 
°¨t_sim∂e_move
=0;

110 
rc_t
 
rc
;

112 if(
com¥es£d
) {

120 if(
idx
 > 0)

122 c⁄° * 
junk
;

123 
pxl
;

124 
pxp
;

125 
junkÀn
;

126 
cvec_t
 
key
;

127 
	`W_DO
(
this
->
	`ªc
(
idx
, 
pxl
, 
pxp
, 
key
, 
junk
, 
junkÀn
));

128 if(
pxl
>0) {

129 
cvec_t
 
aux
;

130 
aux
.
	`put
(
junk
,
junkÀn
);

132 
	`DBG
(<<"Shi· : fú°Ñe¯ha†" << 
pxp
 << "ÖrefixÖarts");

133 
	`W_COERCE
(
rsib
->
	`ö£π
(
key
, 
aux
, 0));

134 
°¨t_sim∂e_move
 ++;

143 c⁄° 
tmp_chunk_size
 = 20;

144 
vec_t
 *
ç
 = 
√w
 vec_t[
tmp_chunk_size
];

145 i‡(!
ç
)

146  
	`RC
(
fcOUTOFMEMORY
);

147 
w_auto_dñëe_¨øy_t
<
vec_t
> 
	`ad_ç
(
ç
);

149 
i
 = 
°¨t_sim∂e_move
; i < 
n
 && (! 
rc
.
	`is_îr‹
()); ) {

150 
j
;

153 
j
 = 0; j < 
tmp_chunk_size
 && 
i
 < 
n
; j++, i++) {

154 
ç
[
j
].
	`£t
(
∑ge_p
::
	`tu∂e_addr
(1 + 
idx
 + 
i
),

155 
∑ge_p
::
	`tu∂e_size
(1 + 
idx
 + 
i
));

160 
rc
 = 
rsib
->
	`ö£π_ex∑nd
(1 + 
i
 - 
j
, j, 
ç
);

162 i‡(! 
rc
.
	`is_îr‹
()) {

163 
	`DBG
(<<"Removög " << 
n
 << " slŸ†°¨tög wôh " << 1+
idx


164 << " fromÖagê" << 
	`pid
().
∑ge
);

165 
rc
 = 
	`ªmove_com¥ess
(1 + 
idx
, 
n
);

167 
	`DBG
(<< "Öagê" << 
	`pid
().
∑ge
 << " ha†" << 
	`ƒecs
() << " slots");

168 
	`DBG
(<< "Öagê" << 
rsib
->
	`pid
().
∑ge
 << " ha†" <<Ñsib->
	`ƒecs
()

171  
rc
.
	`ª£t
();

173 
	}
}

186 
rc_t


187 
	gzkeyed_p
::
	$shi·
(
¶Ÿid_t
 
idx
, slŸid_à
idx_de°
, 
zkeyed_p
* 
rsib
, 
boﬁ
 
com¥es£d
)

189 
	`FUNC
(
zkeyed_p
::
shi·
);

190 
	`w_as£π1
(
idx
 >0 && idx < 
	`ƒecs
());

192 
n
 = 
	`ƒecs
(Ë- 
idx
;

194 
	`DBG
(<<"zkeyed_p::SHIFT "

195 << " (com¥es£d=" << 
com¥es£d


196 << "Ë‰omÖagê" << 
	`pid
().
∑ge
 << " idx " << 
idx


197 << " #ªc†" << 
n


200 
°¨t_sim∂e_move
=0;

201 
rc_t
 
rc
;

203 if(
com¥es£d
) {

211 if(
idx
 > 0)

213 c⁄° * 
junk
;

214 
pxl
;

215 
pxp
;

216 
junkÀn
;

217 
cvec_t
 
key
;

218 
	`W_DO
(
this
->
	`ªc
(
idx
, 
pxl
, 
pxp
, 
key
, 
junk
, 
junkÀn
));

219 if(
pxl
>0) {

220 
cvec_t
 
aux
;

221 
aux
.
	`put
(
junk
,
junkÀn
);

223 
	`DBG
(<<"Shi· : fú°Ñe¯ha†" << 
pxp
 << "ÖrefixÖarts");

224 
	`W_COERCE
(
rsib
->
	`ö£π
(
key
, 
aux
, 0));

225 
°¨t_sim∂e_move
 ++;

234 c⁄° 
tmp_chunk_size
 = 20;

235 
vec_t
 *
ç
 = 
√w
 vec_t[
tmp_chunk_size
];

236 i‡(!
ç
)

237  
	`RC
(
fcOUTOFMEMORY
);

238 
w_auto_dñëe_¨øy_t
<
vec_t
> 
	`ad_ç
(
ç
);

240 
i
 = 
°¨t_sim∂e_move
, 
k
 = 
idx_de°
; i < 
n
 && (! 
rc
.
	`is_îr‹
()); ) {

241 
j
;

244 
j
 = 0; j < 
tmp_chunk_size
 && 
i
 < 
n
; j++, i++, 
k
++) {

245 
ç
[
j
].
	`£t
(
∑ge_p
::
	`tu∂e_addr
(1 + 
idx
 + 
i
),

246 
∑ge_p
::
	`tu∂e_size
(1 + 
idx
 + 
i
));

251 
rc
 = 
rsib
->
	`ö£π_ex∑nd
(1 + 
k
 - 
j
, j, 
ç
);

253 i‡(! 
rc
.
	`is_îr‹
()) {

254 
	`DBG
(<<"Removög " << 
n
 << " slŸ†°¨tög wôh " << 1+
idx


255 << " fromÖagê" << 
	`pid
().
∑ge
);

256 
rc
 = 
	`ªmove_com¥ess
(1 + 
idx
, 
n
);

258 
	`DBG
(<< "Öagê" << 
	`pid
().
∑ge
 << " ha†" << 
	`ƒecs
() << " slots");

259 
	`DBG
(<< "Öagê" << 
rsib
->
	`pid
().
∑ge
 << " ha†" <<Ñsib->
	`ƒecs
()

262  
rc
.
	`ª£t
();

264 
	}
}

274 
rc_t


275 
	gzkeyed_p
::
	$£t_hdr
(c⁄° 
cvec_t
& 
d©a
)

277 
	`W_DO
–
∑ge_p
::
	`ovîwrôe
(0, 0, 
d©a
) );

278  
RCOK
;

279 
	}
}

292 
rc_t


293 
	gzkeyed_p
::
	$ö£π
(

294 c⁄° 
cvec_t
& 
key
,

295 c⁄° 
cvec_t
& 
aux
,

296 
¶Ÿid_t
 
idx
,

297 
boﬁ
 
do_ô
,

298 
boﬁ
 
com¥ess


301 
	`FUNC
(
zkeyed_p
::
ö£π
);

302 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

303 
vec_t
 
v
;

304 
	`DBG
(<<"zkeyed_p::INSERTÖid " << 
	`pid
().
∑ge
 << " idx " << 
idx


305 << " do_ô=" << 
do_ô
 << " com¥ess=" << 
com¥ess
);

306 #ifde‡
W_TRACE


307 if(
com¥ess
 && 
do_ô
) {

308 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ö£π",
__FILE__
)) {

309 
_w_debug
.
˛og
 << 
__LINE__
 << " " << 
__FILE__


311 << " i¿∑gê" << 
	`pid
().
∑ge
 << 
ídl
;

312 
_w_debug
.
˛og
 << 
key
;

313 
_w_debug
.
˛og
 << 
__LINE__
 << " " << 
__FILE__


314 << " AUX BEFORE INSERT " << 
ídl
;

315 
_w_debug
.
˛og
 << 
aux
;

316 
_w_debug
.
˛og
 << 
Êushl
;

321 
öt2_t
 
∂í
 = 0;

322 
thi•xp
 = 0;

323 
boﬁ
 
åy_com¥ess
 = 
com¥ess
;

325 
v
.
	`put
(&
∂í
, (plen));

326 
öt2_t
 
kÀn
 = 
key
.
	`size
();

327 
v
.
	`put
(&
kÀn
, (klen));

329 if(
åy_com¥ess
 && !
do_ô
) {

339 c⁄° * 
junk
;

340 
pxl
;

341 
pxp
;

342 
junkÀn
;

343 
cvec_t
 
nxtkey
;

345 if(
idx
+1 < 
	`ƒecs
()) {

346 
	`W_COERCE
(
this
->
	`ªc
(
idx
+1, 
pxl
, 
pxp
, 
nxtkey
, 
junk
, 
junkÀn
));

347 
v
.
	`put
(
junk
,
junkÀn
);

349 
	`W_DO
(
∑ge_p
::
	`ö£π_ex∑nd
(
idx
+1, 1, &
v
, 
Ál£
 ,false ));

350  
RCOK
;

371 
boﬁ
 
d⁄e
 = 
Ál£
;

372 if–
åy_com¥ess
 && 
idx
>0 ) {

373 
size_t
 
comm⁄_size
;

377 c⁄° *
junk
;

378 
junkÀn
;

379 
cvec_t
 
¥evkey
;

380 
¥evpxl
;

381 
¥evpxp
;

383 
	`w_as£π3
(
idx
>0);

384 
	`W_DO
(
this
->
	`ªc
–
idx
-1,
¥evpxl
, 
¥evpxp
, 
¥evkey
,
junk
,
junkÀn
));

385 #ifde‡
W_TRACE


386 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ö£π",
__FILE__
)) {

387 
	`dump
(
idx
-1, 
__LINE__
," PREV BEFORE INSERT ");

391 
comm⁄_size
 = 
key
.
	`size
();

402 if–
key
.
	`cmp
(
¥evkey
, &
comm⁄_size
) == 0) {

404 
comm⁄_size
 = 
key
.
	`size
();

406 
	`DBG
(<<"comm⁄ sizê" << 
comm⁄_size
);

408 if(
¥evpxp
 < ()
max_¥efix_Àvñ
) {

412 if((
comm⁄_size
 > (
∂í
) ) &&

419 (
comm⁄_size
 > (
key
.
	`size
()>>3)) ) {

420 
	`INC_TSTAT
(
bt_pcom¥ess
);

421 
	`w_as£π1
(
idx
 != 0);

424 
cvec_t
 
¥efix
;

425 
cvec_t
 
ª°
;

426 
key
.
	`•lô
(
comm⁄_size
, 
¥efix
, 
ª°
);

428 
∂í
 = 
comm⁄_size
;

429 
	`DBG
(<<"£à¥efixÜí = " << 
∂í
);

430 
	`DBG
(<<"puà¥efix.ª°, size" << 
ª°
.
	`size
());

431 
v
.
	`put
(
ª°
);

432 
thi•xp
 = 
¥evpxp
 + 1;

433 
d⁄e
 = 
åue
;

437 if(
d⁄e
) {

439 
	`w_as£π3
(
∂í
 != 0);

441 
	`w_as£π3
(
∂í
 == 0);

442 
v
.
	`put
(
key
);

443 
	`DBG
(<<"puàkey, size" << 
key
.
	`size
());

447 
	`DBG
(<<"comm⁄ÖªfixÜí = " << 
∂í
);

448 
	`DBG
(<<"puàaux, size" << 
aux
.
	`size
());

451 
v
.
	`put
(
aux
);

462 
d⁄e
 = 
Ál£
;

469 if(
åy_com¥ess
 && (
idx
+1 < 
	`ƒecs
())) {

475 
size_t
 
comm⁄_size
;

476 c⁄° *
junk
;

477 
junkÀn
;

478 
cvec_t
 
√xtkey
;

479 
√xçxl
;

480 
√xçxp
;

486 
	`W_DO
(
this
->
	`ªc
(
idx
, 
√xçxl
, 
√xçxp
, 
√xtkey
,
junk
,
junkÀn
));

487 
	`DBG
(<<"idx " << 
idx


488 << "Çexçx»" << 
√xçxl


489 << "Çexçx∞" << 
√xçxp


490 << "Çextkey.size(Ë" << 
√xtkey
.
	`size
()

491 << " junkÀ¿" << 
junkÀn


493 #ifde‡
W_TRACE


494 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ö£π",
__FILE__
)) {

495 
	`dump
(
idx
, 
__LINE__
," NEXT BEFORE INSERT ");

499 if(
key
.
	`cmp
(
√xtkey
, &
comm⁄_size
) == 0) {

501 
comm⁄_size
 = 
key
.
	`size
();

503 
boﬁ
 
ex∑nd_√xt
 = 
Ál£
;

504 
boﬁ
 
com¥ess_√xt
 = 
Ál£
;

506 
	`DBG
(<<"comm⁄ sizê" << 
comm⁄_size
);

507 if–(
thi•xp
 + 1 >()
max_¥efix_Àvñ
)

508 || !
åy_com¥ess
) {

516 
comm⁄_size
 = 0;

517 
	`DBG
(<<"");

519 if–(
comm⁄_size
 < (
√xtkey
.
	`size
()>>3)) ||

520 (
comm⁄_size
 <(
uöt2_t
))

524 
comm⁄_size
 = 0;

525 
	`DBG
(<<"");

528 if(()
comm⁄_size
 < 
√xçxl
 ) {

533 
ex∑nd_√xt
 = 
åue
;

534 
	`DBG
(<<"");

535 } if(()
comm⁄_size
 > 
√xçxl
 ) {

542 
com¥ess_√xt
 = 
åue
;

543 
	`DBG
(<<"");

545 
	`w_as£π3
(()
comm⁄_size
 =
√xçxl
 );

549 
	`DBG
(<<"");

551 
	`DBG
(<<"comm⁄ sizê" << 
comm⁄_size
);

553 if(
ex∑nd_√xt
) {

561 
	`W_DO
(
	`ªwrôe
(
idx
, 
comm⁄_size
));

562 } if(
com¥ess_√xt
) {

574 
	`INC_TSTAT
(
bt_pcom¥ess
);

576 if–()
comm⁄_size
 <
∂í
) {

596 
	`W_DO
(
	`ªwrôe
(
idx
, 
comm⁄_size
));

599 
uöt2_t
 
√xtkÀn
 = 
√xtkey
.
	`size
();

600 
uöt2_t
 
thiskeyÀn
 = 
key
.
	`size
();

602 
cvec_t
 
v1
;

603 
cvec_t
 
fú°∑π
;

605 
¶Ÿ_Àngth_t
 
off£t
 = ((
uöt2_t
) + (uint2_t) +

606 
comm⁄_size
 - 
∂í
);

613 
	`DBG
(<<"•lôtög ve˘‹áàoff£à" << 
off£t
);

614 
	`w_as£π3
(
off£t
 > (
uöt2_t
)*2);

616 
v
.
	`•lô
(
off£t
, 
fú°∑π
, 
v1
);

617 #i‡
W_DEBUG_LEVEL
 > 2

619 
cvec_t
 
_dummy
;

620 
size_t
 
Àn
;

621 
_dummy
.
	`put
(
fú°∑π
);

622 
_dummy
.
	`put
(
v1
);

623 
	`w_as£π1
(
_dummy
.
	`cmp
(
v
, &
Àn
) == 0);

630 
cvec_t
 
v2
;

631 
off£t
 = ((
uöt2_t
) + (uint2_t) +

632 
comm⁄_size
 - 
√xçxl
);

634 
uöt2_t
 
√xçÀn
 = 
comm⁄_size
;

635 
v2
.
	`ª£t
().
	`put
(&
√xçÀn
, (nextplen));

636 
v2
.
	`put
(&
√xtkÀn
, (nextklen));

645 
	`DBG
(<<"•lôtög slŸ " << 
idx
+1 << " intoÅwoát offset "

646 << 
off£t
 << "ÇextkÀn=" << 
√xtkÀn
 );

647 
	`W_DO
(
∑ge_p
::
	`•lô_¶Ÿ
(
idx
+1, 
off£t
, 
v1
, 
v2
));

648 
	`DBG
(<<" split done.");

650 
vec_t
 
	`keyÀn
(&
thiskeyÀn
, (thiskeylen));

655 
	`DBG
(<<"ovîwrôög slŸ " << 
idx
+1

656 << "áàoff£à" << (
uöt2_t
)

657 << " wôh ve¯"<< 
keyÀn
.
	`size
()

658 << " vÆuê"<< 
thiskeyÀn


660 
	`W_COERCE
(
∑ge_p
::
	`ovîwrôe
(
idx
+1, (
uöt2_t
), 
keyÀn
));

662 
d⁄e
 = 
åue
;

666 if(!
d⁄e
) {

668 
	`W_DO
–
∑ge_p
::
	`ö£π_ex∑nd
(
idx
 + 1, 1, &
v
, 
do_ô
, do_it) );

671 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

673 
	`DBG
(<<"");

674 #ifde‡
W_TRACE


675 if(
com¥ess
 && 
do_ô
) {

676 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ö£π",
__FILE__
)) {

677 if(
idx
>0) {

678 
	`dump
(
idx
-1, 
__LINE__
," PREV AFTER INSERT ");

681 
	`w_as£π3
(
idx
 < 
	`ƒecs
());

682 
	`dump
(
idx
, 
__LINE__
," THIS AFTER INSERT ");

684 if(
idx
+1 < 
	`ƒecs
()) {

685 
	`dump
(
idx
+1, 
__LINE__
," NEXT AFTER INSERT ");

690  
RCOK
;

691 
	}
}

704 
rc_t


705 
	gzkeyed_p
::
	$ªwrôe
(

706 
¶Ÿid_t
 
idx
,

707 
¥efix_Àn


710 
	`FUNC
(
zkeyed_p
::
ªwrôe
);

712 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

713 
	`DBG
(<<"zkeyed_p::rewriteÖid "

714 << 
	`pid
().
∑ge
 << " idx " << 
idx


715 << " usögÖfxÜí " << 
¥efix_Àn


718 c⁄° *
junk
;

719 
junkÀn
;

720 
cvec_t
 
thiskey
;

721 
thi•xl
;

722 
thi•xp
;

724 if(
idx
 == 0) {

725 
	`w_as£π3
(
¥efix_Àn
 == 0);

728 
	`W_DO
(
this
->
	`ªc
–
idx
, 
thi•xl
, 
thi•xp
, 
thiskey
,
junk
,
junkÀn
));

729 
¶Ÿid_t
 
¶Ÿ
 = 
idx
+1;

732 #i‡
W_DEBUG_LEVEL
 > 2

733 *
ßvebuf
 = 
√w
 [
smÀvñ_0
::
∑ge_sz
];

734 i‡(!
ßvebuf
Ë
	`W_FATAL
(
fcOUTOFMEMORY
);

735 
w_auto_dñëe_¨øy_t
<> 
	`ad_ßvebuf
(
ßvebuf
);

736 
size_t
 
ßvesize
;

738 
ßvesize
 = 
thiskey
.
	`c›y_to
(
ßvebuf
,Åhiskey.
	`size
());

740 
	`dump
(
idx
, 
__LINE__
," BEFORE REWRITE ");

746 
cvec_t
 
junkvec
;

747 
cvec_t
 
ª°
;

748 
cvec_t
 
v
;

751 
cvec_t
 
vpx
;

752 
uöt2_t
 
∂í
 = 
¥efix_Àn
;

753 
vpx
.
	`put
(&
∂í
, (plen));

755 if(
¥efix_Àn
 > 
thi•xl
) {

760 
	`W_DO
(
∑ge_p
::
	`cut
(
¶Ÿ
, (
uöt2_t
)*2, 
¥efix_Àn
 - 
thi•xl
));

761 
	`W_COERCE
(
∑ge_p
::
	`ovîwrôe
(
¶Ÿ
 , 0, 
vpx
));

762 } i‡(
¥efix_Àn
 < 
thi•xl
) {

767 
	`DBG
(<<"•lôtög ve¯© " << 
¥efix_Àn
);

768 
thiskey
.
	`•lô
(
¥efix_Àn
, 
junkvec
, 
ª°
);

770 
	`DBG
(<<"•lôtögÑe°áà" << 
thi•xl
);

771 
ª°
.
	`•lô
(
thi•xl
, 
v
, 
junkvec
);

773 
	`w_as£π3
(()
v
.
	`size
(Ë=
thi•xl
 - 
¥efix_Àn
);

779 
	`w_as£π1
(
v
.
	`size
(Ë< (
smÀvñ_0
::
∑ge_sz
>>1));

783 *
ßve
 = 
√w
 [
v
.
	`size
()];

784 
w_auto_dñëe_¨øy_t
<> 
	`autodñ
(
ßve
);

785 
size_t
 
ßvesz
;

786 
ßvesz
 = 
v
.
	`c›y_to
(
ßve
, v.
	`size
());

788 
v
.
	`ª£t
().
	`put
(
ßve
, 
ßvesz
);

790 
	`DBG
(<<"∑°ög i¿" << 
v
.
	`size
() << " bytes");

791 
	`W_DO
(
∑ge_p
::
	`∑°e
(
¶Ÿ
, (
uöt2_t
)*2, 
v
));

793 
	`DBG
(<<"tŸÆ slŸ sizê" << 
∑ge_p
::
	`tu∂e_size
(
¶Ÿ
));

794 
	`DBG
(<<"ovîwrôêpx»vÆuê" << 
thi•xl
 << " wôh " << 
∂í
);

795 
	`W_COERCE
(
∑ge_p
::
	`ovîwrôe
(
¶Ÿ
 , 0, 
vpx
));

799 
	`w_as£π3
(
¥efix_Àn
 =
thi•xl
);

800 
	`DBG
(<<"rewriteÇotÇecessary");

803 #i‡
W_DEBUG_LEVEL
 > 2

805 
	`dump
(
idx
, 
__LINE__
," AFTER REWRITE ");

807 
thiskey
.
	`ª£t
();

808 
	`W_DO
(
this
->
	`ªc
–
idx
,

809 
thi•xl
, 
thi•xp
, 
thiskey
,
junk
,
junkÀn
));

811 
	`w_as£π3
(
¥efix_Àn
 =
thi•xl
);

812 if(
¥efix_Àn
 == 0) {

813 
	`w_as£π3
(
thi•xp
 == 0);

816 
	`w_as£π3
(
thiskey
.
	`cmp
(
ßvebuf
, 
ßvesize
)==0);

819 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

820  
RCOK
;

821 
	}
}

831 
rc_t


832 
	gzkeyed_p
::
	$ªmove
(
¶Ÿid_t
 
idx
, 
boﬁ
 
com¥ess
)

834 
	`FUNC
(
zkeyed_p
::
ªmove
);

835 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

844 
	`DBG
(<<"zkeyed_p::REMOVEÖid " << 
	`pid
().
∑ge


845 << " idx " << 
idx


846 << " com¥es†" << 
com¥ess


849 #ifde‡
W_TRACE


850 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

851 
	`dump
(
idx
, 
__LINE__
," THIS BEFORE REMOVE ");

855 
¶Ÿid_t
 
this_¶Ÿ
 = 
idx
 + 1;

856 
¶Ÿid_t
 
√xt_ªc
 = 
idx
 + 1;

858 
boﬁ
 
ex∑nd_√xt
 = 
Ál£
;

859 
boﬁ
 
com¥ess_√xt
 = 
Ál£
;

861 
boﬁ
 
åy_com¥ess
 = (
com¥ess
 && (
max_¥efix_Àvñ
 > 0));

862 
boﬁ
 
d⁄e
 = 
Ál£
;

863 
¶Ÿid_t
 
this_ªc
 = 
idx
;

864 
size_t
 
comm⁄_size
 = 0;

869 if(
åy_com¥ess
 && (
√xt_ªc
 < 
	`ƒecs
())) {

879 
¶Ÿid_t
 
¥ev_ªc
 = 
idx
-1;

881 c⁄° *
junk
;

882 
junkÀn
;

883 
cvec_t
 
√xtkey
;

884 
√xçxl
;

885 
√xçxp
;

887 
	`W_DO
(
this
->
	`ªc
(
√xt_ªc
, 
√xçxl
, 
√xçxp
, 
√xtkey
, 
junk
, 
junkÀn
));

888 #ifde‡
W_TRACE


889 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

890 
	`dump
(
√xt_ªc
, 
__LINE__
," NEXT BEFORE REMOVE ");

894 if(
√xçxl
 > 0) {

897 if(
this_ªc
 == 0) {

901 
comm⁄_size
 = 0;

902 
	`DBG
(<<"");

907 
cvec_t
 
¥evkey
;

908 
¥evpxl
;

909 
¥evpxp
;

910 
	`W_DO
(
this
->
	`ªc
(
¥ev_ªc
,

911 
¥evpxl
, 
¥evpxp
, 
¥evkey
, 
junk
, 
junkÀn
));

912 #ifde‡
W_TRACE


913 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

914 
	`dump
(
¥ev_ªc
, 
__LINE__
," PREV BEFORE REMOVE ");

917 
boﬁ
 
åy_com¥ess
 = 
max_¥efix_Àvñ
 > 0;

919 if–(
¥evpxp
 + 1 >()
max_¥efix_Àvñ
)

920 || !
åy_com¥ess
) {

921 
comm⁄_size
 = 0;

929 
	`DBG
(<<"");

930 } if(
√xtkey
.
	`cmp
(
¥evkey
, &
comm⁄_size
) == 0) {

932 
comm⁄_size
 = 
¥evkey
.
	`size
();

933 
	`DBG
(<<"");

935 
	`DBG
(<<"comm⁄ sizê" << 
comm⁄_size
);

937 if–(
comm⁄_size
 < (
√xtkey
.
	`size
()>>3)) ||

938 (
comm⁄_size
 <(
uöt2_t
))

944 
comm⁄_size
 = 0;

945 
	`DBG
(<<"");

948 if(()
comm⁄_size
 < 
√xçxl
 ) {

956 
	`DBG
(<<"");

957 
ex∑nd_√xt
 = 
åue
;

958 } if(()
comm⁄_size
 > 
√xçxl
 ) {

962 
	`DBG
(<<"");

963 
com¥ess_√xt
 = 
åue
;

968 
	`DBG
(<<"");

969 
	`w_as£π3
(()
comm⁄_size
 =
√xçxl
 );

971 
	`DBG
(<<"comm⁄ sizê" << 
comm⁄_size
);

973 if(
ex∑nd_√xt
) {

978 
cvec_t
 
thiskey
;

979 
thi•xl
;

980 
thi•xp
;

981 
	`W_DO
(
this
->
	`ªc
(
this_ªc
,

982 
thi•xl
, 
thi•xp
, 
thiskey
, 
junk
, 
junkÀn
));

983 
	`DBG
(<<"idx " << 
this_ªc


984 << "Åhi•x»" << 
thi•xl


985 << "Åhi•x∞" << 
thi•xp


986 << "Åhiskey.size(Ë" << 
thiskey
.
	`size
()

987 << " junkÀ¿" << 
junkÀn


989 if–(()
comm⁄_size
 >
thi•xl
)

991 (
√xçxl
 >
thi•xl
)

999 
	`DBG
(<<"EXPANDÇext: ");

1000 
uöt2_t
 
√xtkeyÀngth
 = 
√xtkey
.
	`size
();

1001 
off1
, 
off2
;

1008 
off2
 = (
öt2_t
) + (int2_t);

1009 
off1
 = 
off2
 + (
√xçxl
 - 
thi•xl
);

1010 
	`DBG
(<<"mîge_¶Ÿs: " << 
this_¶Ÿ
 << ","

1011 << 
off1
 << "," << 
off2
 );

1012 
	`W_DO
(
∑ge_p
::
	`mîge_¶Ÿs
(
this_¶Ÿ
, 
off1
, 
off2
));

1020 
vec_t
 
	`keyÀn
(&
√xtkeyÀngth
, (nextkeylength));

1022 
	`DBG
(<<"ovî_wrôe: " << 
this_¶Ÿ
 << ","

1023 << (
uöt2_t
Ë<< "," << 
√xtkeyÀngth
 );

1024 
	`W_DO
(
∑ge_p
::
	`ovîwrôe
(
this_¶Ÿ
, (
uöt2_t
), 
keyÀn
));

1026 
d⁄e
 = 
åue
;

1027 
ex∑nd_√xt
 = 
Ál£
;

1040 
	`DBG
(<<"EXPANDÇext: comm⁄_size" << 
comm⁄_size
);

1042 } if(
com¥ess_√xt
) {

1050 
	`INC_TSTAT
(
bt_pcom¥ess
);

1051 
	`DBG
(<<"COMPRESSÇext: comm⁄_size" << 
comm⁄_size
);

1055 if(!
d⁄e
) {

1058 #ifde‡
W_TRACE


1059 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

1060 if(
idx
>0) {

1061 
	`dump
(
idx
-1, 
__LINE__
," PREV BEFORE REMOVE_COMPRESS ");

1063 
	`dump
(
idx
, 
__LINE__
," THIS BEFORE REMOVE_COMPRESS ");

1064 if(
idx
+1 < 
	`ƒecs
()) {

1065 
	`dump
(
idx
+1, 
__LINE__
," NEXT BEFORE REMOVE_COMPRESS ");

1069 
	`W_DO
–
∑ge_p
::
	`ªmove_com¥ess
(
this_¶Ÿ
, 1) );

1072 if(
com¥ess_√xt
 || 
ex∑nd_√xt
) {

1077 
√xt_ªc
 -= 1;

1078 
	`w_as£π3
(
√xt_ªc
 =
idx
);

1079 
	`w_as£π3
(
√xt_ªc
 < 
	`ƒecs
());

1080 
	`DBG
(<<"ªwrôögÇexàª¯wôh comm⁄_size" <<
comm⁄_size
);

1081 
	`W_DO
(
	`ªwrôe
(
√xt_ªc
, 
comm⁄_size
));

1083 #ifde‡
W_TRACE


1084 if(
√xt_ªc
 < 
	`ƒecs
()) {

1085 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

1086 
	`dump
(
√xt_ªc
, 
__LINE__
," NEXT AFTER REWRITE ");

1092 
	`W_IFDEBUG3
–
	`W_COERCE
(
	`check
()) );

1093  
RCOK
;

1094 
	}
}

1105 
rc_t


1106 
	gzkeyed_p
::
	$f‹m©
(

1107 c⁄° 
Õid_t
& ,

1108 
èg_t
 ,

1109 
uöt4_t
 ,

1110 
°‹e_Êag_t


1117 
	`w_as£π1
(
eINTERNAL
);

1118  
RCOK
;

1119 
	}
}

1130 
rc_t


1131 
	gzkeyed_p
::
	$f‹m©
(

1132 c⁄° 
Õid_t
& 
pid
,

1133 
èg_t
 
èg
,

1134 
uöt4_t
 
∑ge_Êags
,

1135 
°‹e_Êag_t
 
°‹e_Êags
,

1136 c⁄° 
cvec_t
& 
hdr
)

1138 
	`w_as£π3
(
èg
 =
t_båì_p
 ||

1139 
èg
 =
t_zkeyed_p
);

1142 
	`W_DO
–
∑ge_p
::
	`_f‹m©
(
pid
, 
èg
, 
∑ge_Êags
, 
°‹e_Êags
) );

1144 
	`W_COERCE
–
∑ge_p
::
	`ö£π_ex∑nd
(0, 1, &
hdr
, 
Ál£
 ) );

1147 
	`W_DO
(
	`log_∑ge_f‹m©
(*
this
, 0, 1, &
hdr
));

1148  
RCOK
;

1149 
	}
}

1154 
rc_t


1155 
	gzkeyed_p
::
	$ªc
(

1156 
¶Ÿid_t
 
idx
,

1157 
cvec_t
& 
key
,

1158 c⁄° *& 
aux
,

1159 & 
auxÀn
) const

1161 
pxl
, 
pxp
;

1162 
w_rc_t
 
rc
 = 
	`ªc
(
idx
, 
pxl
, 
pxp
, 
key
, 
aux
, 
auxÀn
);

1163 
	`w_as£π3
((
smsize_t
Ë
pxp
 <
MAXPFX
);

1164  
rc
;

1165 
	}
}

1168 
	spxöfo_t
 {

1169 c⁄° *
	mpfx
;

1170 
	mpxxl
;

1171 
	m°æ
;

1173 
	mu£
;

1176 #ifde‡
EXPLICIT_TEMPLATE


1177 
ãm∂©e
 
˛ass
 
	gw_auto_dñëe_¨øy_t
<
	gpxöfo_t
>;

1181 
rc_t


1182 
	gzkeyed_p
::
	$ªc
(

1183 
¶Ÿid_t
 
idx
,

1184 & 
¥efix_Àn
,

1185 & 
¥efix_∑πs
,

1186 
cvec_t
& 
key
,

1187 c⁄° *& 
aux
,

1188 & 
auxÀn
) const

1190 
	`FUNC
(
zkeyed_p
::
ªc
);

1191 c⁄° * 
ba£
 = (*Ë
∑ge_p
::
	`tu∂e_addr
(
idx
 + 1);

1192 c⁄° * 
p
 = 
ba£
;

1193 
¥efix_Àn
 = 0;

1194 
¥efix_∑πs
 = 0;

1208 
pxl
 = (Ë(* (
öt2_t
*Ë
p
);

1209 
p
 +(
öt2_t
);

1212 if(
idx
 == 0) {

1213 #i‡
W_DEBUG_LEVEL
 > 2

1214 if(
pxl
!=0) {

1215 
	`DBG
–<< "PAGE'†FIRST TUPLE HAS COMPRESSION!" << 
pxl
);

1218 
	`w_as£π1
(
pxl
 == 0);

1221 
l
 = (Ë(* (
öt2_t
*Ë
p
);

1222 
p
 +(
öt2_t
);

1224 if(
pxl
==0) {

1225 
	`w_as£π3
–()
∑ge_p
::
	`tu∂e_size
(
idx
+1Ë>
l
);

1227 if(
pxl
>0) {

1228 
pxöfo_t
 *
¥efixes
 = 
√w
Öxöfo_t[
MAXPFX
+1];

1229 
w_auto_dñëe_¨øy_t
<
pxöfo_t
> 
	`autodñ
(
¥efixes
);

1241 
_kl
 = 
l
;

1242 
_pxl
 = 
pxl
;

1243 c⁄° * 
_pfx
 = 
p
;

1244 
i
=0;

1245 
boﬁ
 
kìp_goög
 = 
åue
;

1247 
kìp_goög
) {

1248 
	`DBG
(<<"Pªfix " << -
i


1249 << " _pxl:" << 
_pxl


1250 << "Éx∑nded:" << 
_kl


1251 << " _°æ " << 
_kl
 - 
_pxl


1253 
¥efixes
[
i
].
pxxl
 = 
_pxl
;

1254 
¥efixes
[
i
].
°æ
 = 
_kl
 - 
_pxl
;

1255 
¥efixes
[
i
].
u£
 = 
l
 - 
¥efix_Àn
 -Öªfixes[i].
pxxl
;

1256 
¥efixes
[
i
].
u£
 = (prefixes[i].use <0)? 0:Örefixes[i].use;

1257 
¥efixes
[
i
].
pfx
 = 
_pfx
;

1258 
	`DBG
(<<"U£ " << 
¥efixes
[
i
].
u£
);

1260 
¥efix_Àn
 +
¥efixes
[
i
].
u£
;

1262 
kìp_goög
 = (
¥efixes
[
i
].
pxxl
 > 0);

1264 if(
kìp_goög
) {

1265 
i
++;

1266 
	`w_as£π1
(
i
 <
idx
);

1267 
_pfx
 = (c⁄° *Ë
∑ge_p
::
	`tu∂e_addr
((
idx
-
i
)+1);

1268 
_pxl
 = (Ë(* (
öt2_t
*Ë
_pfx
);

1269 
_pfx
 +(
öt2_t
);

1270 
_kl
 = (Ë(* (
öt2_t
*Ë
_pfx
);

1271 
_pfx
 +(
öt2_t
);

1274 
¥efix_∑πs
 = 
i
;

1275 
	`w_as£π3
(
¥efix_Àn
 =
l
);

1277 
¥efix_Àn
 = 0;

1278 
i
 > 0) {

1279 if(
¥efixes
[
i
].
u£
 > 0) {

1281 
key
.
	`put
(
¥efixes
[
i
].
pfx
,Öªfixes[i].
u£
);

1282 
¥efix_Àn
 +
¥efixes
[
i
].
u£
;

1285 
i
--;

1288 
	`w_as£π3
(
¥efix_Àn
 =
pxl
);

1290 
	`DBG
(<<"ÅŸÆÖªfixÜí " << 
¥efix_Àn
);

1291 
	`DBG
(<<"ÅŸÆ key sizêsÿÁ∏" << 
key
.
	`size
());

1293 
l
 -
¥efix_Àn
;

1294 
key
.
	`put
(
p
, 
l
);

1298 
p
 +
l
;

1299 
aux
 = 
p
;

1300 
auxÀn
 = 
∑ge_p
::
	`tu∂e_size
(
idx
 + 1Ë- (
p
 - 
ba£
);

1302 if((Ë
	`GET_TSTAT
(
bt_∂max
Ë< 
¥efix_∑πs
)

1303 
	`SET_TSTAT
(
bt_∂max
,
¥efix_∑πs
);

1327  
RCOK
;

1328 
	}
}

1334 
	gzkeyed_p
::
	$ªc_ex∑nded_size
(
¶Ÿid_t
 
idx
) const

1336 c⁄° * 
junk
;

1337 
pxl
;

1338 
pxp
;

1339 
junkÀn
;

1340 
cvec_t
 
key
;

1341 
	`W_COERCE
(
this
->
	`ªc
(
idx
, 
pxl
, 
pxp
, 
key
, 
junk
, 
junkÀn
));

1342  
	`ªc_size
(
idx
Ë+ 
pxl
;

1343 
	}
}

1346 
	gzkeyed_p
::
dump
(
¶Ÿid_t
 
W_IFTRACE
(
idx
),

1347 
W_IFTRACE
(
löe
),

1348 c⁄° *
	$W_IFTRACE
(
°rög
)) const

1350 #ifde‡
W_TRACE


1351 c⁄° *
junk
;

1352 
junkÀn
;

1353 
cvec_t
 
key
;

1354 
pxl
;

1355 
pxp
;

1357 
w_rc_t
 
rc
 = 
this
->
	`ªc
(
idx
, 
pxl
, 
pxp
, 
key
, 
junk
, 
junkÀn
);

1358 if(
rc
.
	`is_îr‹
()) {

1359 
	`DBG
(<<"rc" << 
rc
);

1362 
	`DBG
(<<"idx " << 
idx


1363 << "Öx»" << 
pxl


1364 << "Öx∞" << 
pxp


1365 << " key.size(Ë" << 
key
.
	`size
()

1366 << " junkÀ¿" << 
junkÀn


1368 if(
_w_debug
.
	`Êag_⁄
("zkeyed_p::ªmove",
__FILE__
)) {

1369 
_w_debug
.
˛og
 << 
löe
 << " " << 
__FILE__


1370 << 
°rög


1371 << "Öagê" << 
	`pid
().
∑ge


1372 << "Ñec‹d " << 
idx


1373 << 
key


1374 << 
ídl
;

1375 
_w_debug
.
˛og
 << 
__LINE__
 << " " << 
__FILE__


1376 << " junkÀ¿" << 
junkÀn


1377 << 
Êushl
;

1380 
	}
}

	@src/sm/zkeyed.h

30 #i‚de‡
ZKEYED_H


31 
	#ZKEYED_H


	)

33 
	~"w_deföes.h
"

37 #ifde‡
__GNUG__


38 #¥agm®
öãrÁ˚


44 ˛as†
	czkeyed_p
 : 
public
 
∑ge_p
 {

45 
public
:

47 
rc_t
 
lök_up
(

48 
shpid_t
 
√w_¥ev
,

49 
shpid_t
 
√w_√xt


52 
rc_t
 
f‹m©
(

53 c⁄° 
Õid_t
& 
pid
,

54 
èg_t
 
èg
,

55 
w_ba£_t
::
uöt4_t
 
Êags
,

56 
°‹e_Êag_t
 
°‹e_Êags
,

57 c⁄° 
cvec_t
& 
hdr


60 
rc_t
 
ö£π
(

61 c⁄° 
cvec_t
& 
key
,

62 c⁄° 
cvec_t
& 
aux
,

63 
¶Ÿid_t
 
¶Ÿ
,

64 
boﬁ
 
do_ô
=
åue
,

65 
boﬁ
 
com¥ess
=
Ál£


68 
rc_t
 
ªwrôe
(
¶Ÿid_t
 
¶Ÿ
, 
pxl
);

69 
rc_t
 
ªmove
(
¶Ÿid_t
 
¶Ÿ
, 
boﬁ
 
com¥ess
=
Ál£
);

70 
rc_t
 
shi·
(
¶Ÿid_t
 
¢um
, 
zkeyed_p
* 
rsib
, 
boﬁ
 
cm¥s
=
Ál£
);

72 
rc_t
 
shi·
(
¶Ÿid_t
 
¢um
, slŸid_à
¢um_de°
, 
zkeyed_p
* 
rsib
, 
boﬁ
 
cm¥s
=
Ál£
);

77 
rc_t
 
	$ªc
(

78 
¶Ÿid_t
 
idx
,

79 
cvec_t
& 
key
,

80 c⁄° *& 
aux
,

81 & 
auxÀn


83 
rc_t
 
	$ªc
(

84 
¶Ÿid_t
 
idx
,

85 & 
¥efix_Àn
,

86 & 
¥efix_∑πs
,

87 
cvec_t
& 
key
,

88 c⁄° *& 
aux
,

89 & 
auxÀn


92 
¥Ÿe˘ed
:

94 
	`MAKEPAGE
(
zkeyed_p
, 
∑ge_p
, 1);

96 
	$ªc_size
(
¶Ÿid_t
 
idx
) const;

97 
	$ªc_ex∑nded_size
(
¶Ÿid_t
 
idx
) const;

98 
	$ƒecs
() const;

99 
rc_t
 
	`£t_hdr
(c⁄° 
cvec_t
& 
d©a
);

100 c⁄° * 
	$gë_hdr
() const {

101 
	`w_as£π3
(
	`gë_°‹e_Êags
(Ë!
°_tmp
);

102  
∑ge_p
::
	`tu∂e_addr
(0);

105 
¥iv©e
:

107 * 
	`tu∂e_addr
();

108 
	`tu∂e_size
();

109 
‰õnd
 
˛ass
 
∑ge_lök_log
;

111 
smsize_t
 
	$mö_íåy_size
() const;

112 
smsize_t
 
	$max_num_íåõs
() const;

114 
	$dump
(
¶Ÿid_t
 
idx
,

115 
löe
,

116 c⁄° *
°rög
) const;

117 
	}
};

122 
ölöe


123 
smsize_t


124 
	gzkeyed_p
::
	$mö_íåy_size
()const

135  (
¶Ÿ_t
Ë+ 
	`Æign
(2+ 1 + 2*(
uöt2_t
));

136 
	}
}

141 
ölöe


142 
smsize_t


143 
	gzkeyed_p
::
	$max_num_íåõs
() const

145  (
smsize_t
)(
d©a_sz
/
	`mö_íåy_size
());

146 
	}
}

151 
ölöe
 
	gzkeyed_p
::
	$ªc_size
(
¶Ÿid_t
 
idx
) const

153  
∑ge_p
::
	`tu∂e_size
(
idx
 + 1);

154 
	}
}

160 
ölöe
 
	gzkeyed_p
::
	$ƒecs
() const

162  
	`n¶Ÿs
() - 1;

163 
	}
}

168 
ölöe
 
rc_t


169 
	gzkeyed_p
::
	$lök_up
(
shpid_t
 
√w_¥ev
, shpid_à
√w_√xt
)

171  
∑ge_p
::
	`lök_up
(
√w_¥ev
, 
√w_√xt
);

172 
	}
}

	@src/sthread/auto_release.h

53 #i‚de‡
AUTO_RELEASE_H


54 
	#AUTO_RELEASE_H


	)

56 
	~"w_deföes.h
"

79 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cauto_ªÀa£_t
 {

80 
	mpublic
:

81 
NORET
 
	$auto_ªÀa£_t
(
T
& 
t
)

82 : 
	$obj
(
t
) {};

83 
NORET
 ~
	$auto_ªÀa£_t
() {

84 
obj
.
	`ªÀa£
();

85 
	}
}

86 
	g¥iv©e
:

87 
T
& 
obj
;

95 
	gãm∂©e
<>

96 
˛ass
 
	gauto_ªÀa£_t
<
	gw_±hªad_lock_t
>

98 
	gpublic
:

100 
NORET
 
auto_ªÀa£_t
(
w_±hªad_lock_t
& 
t
, w_±hªad_lock_t::
ext_qnode
* 
me
)

101 : 
obj
(
t
), 
_me
(
me
) { }

102 
	gNORET
 ~
auto_ªÀa£_t
() {

103 
	gobj
.
ªÀa£
(
_me
);

105 
	g¥iv©e
:

106 
w_±hªad_lock_t
& 
obj
;

107 
	gw_±hªad_lock_t
::
ext_qnode
* 
_me
;

114 
	gãm∂©e
<>

115 
˛ass
 
	gauto_ªÀa£_t
<
	g±hªad_muãx_t
>

117 
	gpublic
:

119 
NORET
 
auto_ªÀa£_t
(
±hªad_muãx_t
* 
t
Ë: 
obj
(t) {}

120 
exô
(Ë{ if(
obj
Ë
±hªad_muãx_u∆ock
(obj); 
	gobj
=
NULL
; }

121 
	gNORET
 ~
auto_ªÀa£_t
(Ë{ 
exô
(); }

122 
	g¥iv©e
:

123 
±hªad_muãx_t
* 
obj
;

139 
	gãm∂©e
<
˛ass
 
	gT
>

140 ˛as†
	cauto_ªÀa£_r_t
 {

141 
	mpublic
:

142 
NORET
 
	$auto_ªÀa£_r_t
(
T
& 
t
)

143 : 
	$obj
(
t
) { }

144 
NORET
 ~
	$auto_ªÀa£_r_t
() {

145 
obj
.
	`ªÀa£_ªad
();

146 
	}
}

147 
	g¥iv©e
:

148 
T
& 
obj
;

164 
	gãm∂©e
<
˛ass
 
	gT
>

165 ˛as†
	cauto_ªÀa£_w_t


167 
	mpublic
:

168 
NORET
 
	$auto_ªÀa£_w_t
(
T
& 
t
)

169 : 
	$obj
(
t
) { }

170 
NORET
 ~
	$auto_ªÀa£_w_t
() {

171 
obj
.
	`ªÀa£_wrôe
();

172 
	}
}

173 
	g¥iv©e
:

174 
T
& 
obj
;

	@src/sthread/io.cpp

53 
	~"w_deföes.h
"

72 
	#IO_C


	)

74 
	~<w.h
>

75 
	~<w_debug.h
>

76 
	~<w_°ªam.h
>

77 
	~<c°dlib
>

78 
	~<c°rög
>

79 
	~<sys/time.h
>

80 
	~<sys/waô.h
>

81 
	~<√w
>

82 
	~<sys/°©.h
>

83 
	~<sys/mm™.h
>

84 
	~<w_rußge.h
>

85 #i‡
HAVE_HUGETLBFS


86 
	~<f˙é.h
>

88 
	~"°hªad.h
"

89 
	~"°hªad_°©s.h
"

90 
	~<sdisk.h
>

91 
	~<sdisk_unix.h
>

93 #i‡
deföed
(
HUGEPAGESIZE
) && (HUGEPAGESIZE == 0)

94 #unde‡
HUGEPAGESIZE


97 
˛ass
 
°hªad_°©s
 
SthªadSèts
;

99 
sdisk_t
 **
	g°hªad_t
::
_disks
 = 0;

100 
	g°hªad_t
::
›í_max
 = 0;

101 
	g°hªad_t
::
›í_cou¡
 = 0;

103 
queue_ba£d_lock_t
 
	g¥Ÿe˘FDs
;

105 
	g°hªad_t
:: 
_disk_buf„r_dißlignmít
(0);

106 
size_t
 
	g°hªad_t
:: 
_disk_buf„r_size
(0);

107 * 
	g°hªad_t
:: 
_disk_buf„r
 (
NULL
);

109 
	g°hªad_t
::
	$do_unm≠
()

115 #ifde‡
WITHOUT_MMAP


116 ::
	`‰ì
–
_disk_buf„r
 - 
_disk_buf„r_dißlignmít
 );

117 
_disk_buf„r
 = 
NULL
;

118 
_disk_buf„r_dißlignmít
 = 0;

123 
	`Ârötf
(
°dîr
, "%d: munmap disalignment %dáddr %p, size %lu\n",

124 
__LINE__
,

125 
_disk_buf„r_dißlignmít
,

126 –
_disk_buf„r
 - 
_disk_buf„r_dißlignmít
),

127 
_disk_buf„r_size
);

130 
îr
 =

131 
	`munm≠
–
_disk_buf„r
 - 
_disk_buf„r_dißlignmít
, 
_disk_buf„r_size
);

133 if(
îr
) {

134 
˚º
 << "munm≠Ñëu∫†" << 
îr


135 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

136 << 
ídl
;

137 
	`w_as£π1
(!
îr
);

140 
_disk_buf„r
 = 
NULL
;

141 
_disk_buf„r_size
 = 0;

142 
_disk_buf„r_dißlignmít
 = 0;

144  
îr
;

145 
	}
}

147 
	g°hªad_t
::
Æign_f‹_sm
(
size_t
 
	$W_IFDEBUG1
(
ªque°ed_size
))

149 * 
_disk_buf„r2
 = (*)
	`Æign⁄
–
_disk_buf„r
, 
SM_PAGESIZE
);

150 if–
_disk_buf„r2
 !
_disk_buf„r
)

153 
_disk_buf„r_dißlignmít
 = ( 
_disk_buf„r2
 - 
_disk_buf„r
);

154 
	`w_as£π1
–
_disk_buf„r_dißlignmít
 < 
SM_PAGESIZE
);

155 
	`w_as£π1
–
_disk_buf„r_size
 - 
_disk_buf„r_dißlignmít


156 >
ªque°ed_size
);

158 
_disk_buf„r
 = 
_disk_buf„r2
;

161 
	}
}

163 
	g°hªad_t
::
	$gë_max_∑ge_size
(
sy°em_∑ge_size
)

165 
max_∑ge_size
 = 0;

166 #ifde‡
HAVE_GETPAGESIZES


168 
√Àm
 = 
	`gë∑gesizes
(
NULL
, 0);

169 if(
√Àm
 >= 0) {

170 
size_t
 *
∑gesize
 = 
√w
 size_t[
√Àm
];

171 
îr
 = 
	`gë∑gesizes
 (
∑gesize
, 
√Àm
);

172 if(
îr
 >= 0) {

173 
i
=0; i < 
√Àm
; i++) {

174 i‡–
∑gesize
[
i
] > 
max_∑ge_size
) {

175 
max_∑ge_size
 = 
∑gesize
[
i
];

179 
˚º
 << "gë∑gesizes’agesize, " << 
√Àm
 << ") failed. "

180 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

181 << 
ídl
;

183 
dñëe
[] 
∑gesize
;

185 
˚º
 << "getpagesizes(NULL,0) failed. "

186 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

187 << 
ídl
;

191 
max_∑ge_size
 = 
sy°em_∑ge_size
;

199  
max_∑ge_size
;

200 
	}
}

202 
	g°hªad_t
::
Æign_bufsize
(
size_t
 
size
, 
W_IFDEBUG1
(
sy°em_∑ge_size
),

203 
max_∑ge_size
)

211 
w_as£π1
(
Æign⁄
(
max_∑ge_size
, 
sy°em_∑ge_size
) == max_page_size);

219 
	g_disk_buf„r_size
 = 
Æign⁄
(
size
, 
max_∑ge_size
);

220 
w_as£π1
(
_disk_buf„r_size
 >
size
);

223 
w_as£π1
(
size_t
(
Æign⁄
(
_disk_buf„r_size
, 
max_∑ge_size
))

224 =
_disk_buf„r_size
);

225 
w_as£π1
(
size_t
(
Æign⁄
(
_disk_buf„r_size
, 
sy°em_∑ge_size
))

226 =
_disk_buf„r_size
);

229 #i‡
deföed
(
HUGEPAGESIZE
) && (HUGEPAGESIZE > 0)

230 
	$˛ór
(*
buf_°¨t
, 
size_t
 
ªque°ed_size
)

233 
size_t
 
ªque°ed_huge_∑ges
 = 
ªque°ed_size
 / (
HUGEPAGESIZE
*1024);

234 
size_t
 
ªque°ed_∑ges
 = 
ªque°ed_size
 / 
SM_PAGESIZE
;

235 
size_t
 
j
=0; j < 
ªque°ed_∑ges
; j++) {

236 
size_t
 
i
=0; i < 
SM_PAGESIZE
; i++) {

237 
size_t
 
off£t
 = 
j
*
SM_PAGESIZE
 + 
i
;

238 
size_t
 
hugïagíum
 = 
off£t
 / (
HUGEPAGESIZE
*1024);

239 
size_t
 
hugïageoff£t
 = 
off£t
 - (
hugïagíum
 *

240 (
HUGEPAGESIZE
*1024));

241 
x
 = 
buf_°¨t
[
off£t
];

244 if((
i
Ë< 0Ë
	`Ârötf
(
°dîr
, "0x%d 0x%x, 0x%x, 0x%x", 
x
,

245 (
hugïagíum
), (
hugïageoff£t
), (
ªque°ed_huge_∑ges
));

249 #i‡
W_DEBUG_LEVEL
 > 4

250 
	`Ârötf
(
°dîr
, "clearing %ld bytes startingát %p\n",

251 
ªque°ed_size
, 
buf_°¨t
);

253 
	`mem£t
(
buf_°¨t
, 0, 
ªque°ed_size
);

254 
	}
}

256 
	$˛ór
(*, 
size_t
 )

258 
	}
}

262 
w_rc_t
 
	g°hªad_t
::
	$£t_bufsize_n‹mÆ
(

263 
size_t
 
size
, *&
buf_°¨t
 , 
sy°em_∑ge_size
)

265 
size_t
 
ªque°ed_size
 = 
size
;

275 
max_∑ge_size
 = 
	`gë_max_∑ge_size
(
sy°em_∑ge_size
);

276 
	`w_as£π1
(
sy°em_∑ge_size
 <
max_∑ge_size
);

277 
Æign_∑ge_size
 = (
SM_PAGESIZE
 > 
max_∑ge_size
)? SM_PAGESIZE : max_page_size;

284 
	`fd
(-1);

301 
Êags1
 = 
MAP_PRIVATE
;

302 
size_t
 
exåa_Æign
 = 
Æign_∑ge_size
;

303 
size_t
 
Æign_¨g
 = 0;

305 #i‡
HAVE_DECL_MAP_ANONYMOUS
==1

306 
Êags1
 |
MAP_ANONYMOUS
;

307 #ñi‡
HAVE_DECL_MAP_ANON
==1

308 
Êags1
 |
MAP_ANON
;

312 #i‡
HAVE_DECL_MAP_NORESERVE
==1

313 
Êags1
 |
MAP_NORESERVE
;

316 #i‡
HAVE_DECL_MAP_ALIGN
==1

317 
Êags1
 |
MAP_ALIGN
;

318 
exåa_Æign
 = 0;

319 
Æign_¨g
 = 
Æign_∑ge_size
;

325 
size
 +
exåa_Æign
;

326 
	`Æign_bufsize
(
size
, 
sy°em_∑ge_size
, 
Æign_∑ge_size
);

338 
î∫o
 = 0;

339 
_disk_buf„r
 = (*Ë
	`mm≠
((*)
Æign_¨g
, 
_disk_buf„r_size
,

340 
PROT_NONE
,

341 
Êags1
,

342 
fd
,

346 i‡(
_disk_buf„r
 =
MAP_FAILED
) {

347 
˚º


348 << 
__LINE__
 << " "

349 << "mm≠ (size=" << 
_disk_buf„r_size


350 << " = " << (
_disk_buf„r_size
/1024)

351 << " KB )Ñëu∫†" << (
_disk_buf„r
)

352 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

353 << " fœg†" << 
Êags1


354 << " fd " << 
fd


355 << 
ídl
;

356  
	`RC
(
fcMMAPFAILED
);

358 #i‡
W_DEBUG_LEVEL
 > 4

361 
˚º


362 << 
__LINE__
 << " "

363 << "mm≠ SUCCESS! (size=" << 
_disk_buf„r_size


364 << " = " << (
_disk_buf„r_size
/1024)

365 << " KB )Ñëu∫†" << (
_disk_buf„r
)

366 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

367 << " fœg†" << 
Êags1


368 << " fd " << 
fd


369 << 
ídl
;

379 
_disk_buf„r
 = (*)
	`Æign⁄
(_disk_buf„r, 
Æign_∑ge_size
);

380 
	`Æign⁄
(
ªque°ed_size
, 
sy°em_∑ge_size
);

381 i‡(
	`m¥Ÿe˘
(
_disk_buf„r
, 
ªque°ed_size
, 
PROT_READ
|
PROT_WRITE
)) {

382 
˚º


383 << 
__LINE__
 << " "

384 << "m¥Ÿe˘ (addr=" << (
_disk_buf„r
)

385 << ", size=" << 
ªque°ed_size
 << ")Ñeturns -1;"

386 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

387 << 
ídl
;

388 
	`do_unm≠
();

389  
	`RC
(
fcMMAPFAILED
);

392 #ifde‡
HAVE_MEMCNTL


393 
mem˙é_mha
 
öfo
;

394 
öfo
.
mha_cmd
 = 
MHA_MAPSIZE_VA
;

395 
öfo
.
mha_Êags
 = 0;

396 
öfo
.
mha_∑gesize
 = 
max_∑ge_size
;

398 if(
	`mem˙é
(
_disk_buf„r
, 
ªque°ed_size
, 
MC_HAT_ADVISE
, (*)&
öfo
, 0, 0) < 0)

401 
˚º
 << "memcntlÑeturns -1;"

402 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

403 << "Ñeque°ed sizê" << 
max_∑ge_size
 << 
ídl
;

407 
	`Æign_f‹_sm
(
ªque°ed_size
);

408 
buf_°¨t
 = 
_disk_buf„r
;

409 
	`˛ór
(
buf_°¨t
, 
ªque°ed_size
);

410  
RCOK
;

411 
	}
}

413 #ifde‡
WITHOUT_MMAP


414 
w_rc_t


415 
	g°hªad_t
::
	$£t_bufsize_memÆign
(
size_t
 
size
, *&
buf_°¨t
 ,

416 
sy°em_∑ge_size
)

418 
size_t
 
ªque°ed_size
 = 
size
;

426 
max_∑ge_size
 = 
sy°em_∑ge_size
;

428 
	`Æign_bufsize
(
size
, 
sy°em_∑ge_size
, 
max_∑ge_size
);

430 
	`w_as£π1
(
_disk_buf„r
 =
NULL
);

432 #ifde‡
HAVE_POSIX_MEMALIGN


433 *
addr
;

434 
e
 = 
	`posix_memÆign
(&
addr
, 
SM_PAGESIZE
, 
size
);

435 i‡(
e
 == 0) {

436 
_disk_buf„r
 = (*)
addr
;

438 
_disk_buf„r
 = 0;

440 #ñi‡ 
HAVE_MEMALIGN


441 
_disk_buf„r
 = (*)
	`memÆign
(
SM_PAGESIZE
, 
size
);

442 #ñi‡ 
HAVE_VALLOC


443 
size
 +
SM_PAGESIZE
;

444 
_disk_buf„r
 = 
	`vÆloc
(
size
);

446 
size
 +
SM_PAGESIZE
;

447 
_disk_buf„r
 = 
	`mÆloc
(
size
);

449 i‡(
_disk_buf„r
 == 0) {

450 
˚º


451 << 
__LINE__
 << " "

452 << "couldÇŸáŒoˇã mem‹y (Æignmít=" << 
SM_PAGESIZE


453 << "," << 
size
 << ")Ñeturns -error;"

454 << "Éºnÿi†" << 
	`°ªº‹
(
î∫o
)

455 << 
ídl
;

456  
	`RC
(
fcINTERNAL
);

458 
	`Æign_f‹_sm
(
ªque°ed_size
);

459 
buf_°¨t
 = 
_disk_buf„r
;

460 
	`˛ór
(
buf_°¨t
, 
ªque°ed_size
);

461  
RCOK
;

462 
	}
}

465 #ifde‡
HAVE_HUGETLBFS


467 #i‡
HUGEPAGESIZE
>0

469 #îr‹ 
You
 
have
 
c⁄figuªd
 
to
 
u£
 
hugëlbfs
 
but
 
you
 havê
no
 
hugïagesize


470 #îr‹ 
Look
 
Hugïagesize
 
ö
 /
¥oc
/
memöfo


473 c⁄° *
hugefs_∑th
(
NULL
);

474 
w_rc_t


475 
	g°hªad_t
::
	$£t_hugëlbfs_∑th
(c⁄° *
wh©
)

477 if(
	`°rcmp
(
wh©
, "NULL")==0) {

479 
hugefs_∑th
 = 
NULL
;

480  
RCOK
;

485 
°©
 
°©buf
;

486 
e
=
	`°©
(
wh©
, &
°©buf
);

487 if(
e
) {

488 
	`Ârötf
(
°dîr
, "CouldÇŸ sèà\"%s\"\n", 
wh©
);

489 
fd
 = ::
	`›í
(
wh©
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
);

490 i‡(
fd
 < 0) {

491 
	`Ârötf
(
°dîr
, "CouldÇŸ cª©ê\"%s\"\n", 
wh©
);

492  
	`RC
(
°BADPATH
);

494 
˚º
 << " cª©ed " << 
wh©
 << 
ídl
;

497 
hugefs_∑th
 = 
wh©
;

499  
RCOK
;

500 
	}
}

502 
w_rc_t


503 
	g°hªad_t
::
	$£t_bufsize_huge
(

504 
size_t
 
size
,

505 *&
buf_°¨t
 ,

506 
sy°em_∑ge_size
)

508 
size_t
 
ªque°ed_size
 = 
size
;

516 
max_∑ge_size
 = 1024 * 
HUGEPAGESIZE
;

519 
	`w_as£π1
(
sy°em_∑ge_size
 <
max_∑ge_size
);

530 if(
hugefs_∑th
 =
NULL
)

532 
	`Ârötf
(
°dîr
, "∑th i†%s\n", 
hugefs_∑th
);

533 
	`Ârötf
(
°dîr
,

535  
	`RC
(
fcMMAPFAILED
);

537 
fd
 = ::
	`›í
(
hugefs_∑th
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
);

538 i‡(
fd
 < 0) {

539 
˚º
 << " couldÇŸ o≥¿" << 
hugefs_∑th
 << 
ídl
;

540  
	`RC
(
fcMMAPFAILED
);

558 
Êags
 =

559 
MAP_PRIVATE
;

563 #i‡
HAVE_DECL_MAP_ALIGN
==1

564 
Êags
 |
MAP_ALIGN
;

565 
	`Ârötf
(
°dîr
, "%d:áddög fœg 0x%x %s\n", 
__LINE__
,

566 
MAP_ALIGN
, "MAP_ALIGN");

573 
size
 +
SM_PAGESIZE
;

575 
	`Æign_bufsize
(
size
, 
sy°em_∑ge_size
, 
max_∑ge_size
);

583 
	`w_as£π1
(
_disk_buf„r
 =
NULL
);

585 
î∫o
 = 0;

587 
_disk_buf„r
 = (*Ë
	`mm≠
(0, 
_disk_buf„r_size
,

588 (
PROT_READ
 | 
PROT_WRITE
),

589 
Êags
,

590 
fd
,

594 i‡(
_disk_buf„r
 =
MAP_FAILED
) {

595 
˚º


596 << 
__LINE__
 << " "

597 << "mm≠ (size=" << 
_disk_buf„r_size
 << ")Ñeturns "

598 << (
_disk_buf„r
)

599 << "Éºnÿi†" << 
î∫o
 << " " << 
	`°ªº‹
(errno)

600 << "ÖrŸ " << (
PROT_READ
 | 
PROT_WRITE
)

601 << " fœg†" << 
Êags


602 << " fd " << 
fd


603 << 
ídl
;

604 
	`˛o£
(
fd
);

605  
	`RC
(
fcMMAPFAILED
);

607 #i‡
W_DEBUG_LEVEL
 > 4

610 
	`Ârötf
(
°dîr
,

612 
__LINE__
,

613 
_disk_buf„r_size
,

614 
_disk_buf„r_size
/1024,

615 
_disk_buf„r
, 
î∫o
, 
	`°ªº‹
(errno),

616 (
PROT_READ
 | 
PROT_WRITE
),

617 
Êags
, 
fd
);

618 
	`Ârötf
(
°dîr
,

620 
__LINE__
,

621 
_disk_buf„r_size
,

622 
_disk_buf„r_size
/1024,

623 (
ªque°ed_size
),

624 (
ªque°ed_size
/1024),

625 (
_disk_buf„r_size
-
ªque°ed_size
) );

631 
	`Æign_f‹_sm
(
ªque°ed_size
);

632 
buf_°¨t
 = 
_disk_buf„r
;

633 
	`˛ór
(
buf_°¨t
, 
ªque°ed_size
);

634  
RCOK
;

635 
	}
}

685 
w_rc_t


686 
	g°hªad_t
::
£t_bufsize
(
size_t
 
size
, *&
buf_°¨t
 ,

687 
boﬁ


688 #ifde‡
HAVE_HUGETLBFS


690 
u£_n‹mÆ_if_huge_Áûs


694 i‡(
	g_disk_buf„r
 && 
	gsize
 == 0) {

695 
do_unm≠
();

696  
	gRCOK
;

699 i‡(
	g_disk_buf„r
) {

700 
	g˚º
 << "Can'tÑe-allocate disk buffer without disabling"

701 << 
	gídl
;

702  
RC
(
fcINTERNAL
);

705 
	gbuf_°¨t
 = 0;

707 
	gsy°em_∑ge_size
 = 
sysc⁄f
(
_SC_PAGESIZE
);

709 #ifde‡
WITHOUT_MMAP


712  
£t_bufsize_memÆign
(
size
, 
buf_°¨t
, 
sy°em_∑ge_size
);

715 #ifde‡
HAVE_HUGETLBFS


722 if(
	ghugefs_∑th
 !
NULL
) {

723 
w_rc_t
 
rc
 = 
£t_bufsize_huge
(
size
, 
buf_°¨t
, 
sy°em_∑ge_size
);

724 if–!
	grc
.
is_îr‹
() ) {

725 #i‡
W_DEBUG_LEVEL
 > 10

726 
	gcout
 << "Usög hugëlbf†sizê" << 
	gsize


727 << " sy°em_∑ge_sizê" << 
	gsy°em_∑ge_size


728 << "Ö©h " << 
	ghugefs_∑th
 << ". " << 
	gídl
;

730  
	grc
;

732 if(!
	gu£_n‹mÆ_if_huge_Áûs
)

734  
	grc
;

737 
	g˚º
 << "Skùpög hugëlbf†suêtÿmm≠ faûuª: " << 
	grc
 << 
	gídl
;

739 
	gcout
 << "Skùpög hugëlbf†ba£d o¿u£∏›ti⁄. " << 
	gídl
;

742  
£t_bufsize_n‹mÆ
(
size
, 
buf_°¨t
, 
sy°em_∑ge_size
);

747 
	g°hªad_t
::
	$£t_bufsize
(
size_t
 
size
)

749 
w_rc_t
 
e
;

750 *
°¨t
;

752 if(
size
==0Ë{ 
	`do_unm≠
();  
NULL
; }

754 
e
 = 
	`£t_bufsize
(
size
, 
°¨t
);

756 i‡(
e
.
	`is_îr‹
()) {

757 
˚º
 << "Hiddí Faûuª: së_bufsize(" << 
size
 << "):"

758 << 
ídl
 << 
e
 <<Éndl;

763 i‡(
size
 == 0)

764 
°¨t
 = 0;

766  
°¨t
;

767 
	}
}

770 
w_rc_t


771 
	g°hªad_t
::
	$›í
(c⁄° * 
∑th
, 
Êags
, 
mode
, &
ªt_fd
)

773 
w_rc_t
 
e
;

774 
sdisk_t
 *
dp
;

777 
ªt_fd
 = -1;

779 
boﬁ
 
›í_loˇl
 = 
åue
;

781 
	`CRITICAL_SECTION
(
cs
, 
¥Ÿe˘FDs
);

783 i‡(
›í_cou¡
 >
›í_max
) {

794 
√w_max
 = 
›í_max
 + 64;

795 
sdisk_t
 **
√w_disks
 = 
√w
 sdisk_à*[
√w_max
];

797 i‡(!
√w_disks
) {

798  
	`RC
(
fcOUTOFMEMORY
);

800 
disk
;

801 
disk
 = 0; disk < 
›í_cou¡
; disk++)

802 
√w_disks
[
disk
] = 
_disks
[disk];

803 ; 
disk
 < 
√w_max
; disk++)

804 
√w_disks
[
disk
] = 0;

805 
sdisk_t
 **
tmp
 = 
_disks
;

806 
_disks
 = 
√w_disks
;

807 
›í_max
 = 
√w_max
;

808 
dñëe
 [] 
tmp
;

812 
disk
;

813 
disk
 = 0; disk < 
›í_max
; disk++)

814 i‡(!
_disks
[
disk
])

816 i‡(
disk
 =
›í_max
) {

817  
	`RC
(
°INTERNAL
);

823 i‡(
›í_loˇl
) {

824 
e
 = 
sdisk_unix_t
::
	`make
(
∑th
, 
Êags
, 
mode
, 
dp
);

828 i‡(
e
.
	`is_îr‹
()) {

829  
e
;

832 
_disks
[
disk
] = 
dp
;

833 
›í_cou¡
++;

835 
ªt_fd
 = 
fd_ba£
 + 
disk
;

837  
RCOK
;

838 
	}
}

848 
w_rc_t
 
	g°hªad_t
::
	$˛o£
(
fd
)

850 
fd
 -
fd_ba£
;

851 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

852  
	`RC
(
°BADFD
);

854 
w_rc_t
 
e
;

857 
e
 = 
_disks
[
fd
]->
	`sync
();

858 i‡(
e
.
	`is_îr‹
())

859  
e
;

861 
e
 = 
_disks
[
fd
]->
	`˛o£
();

862 i‡(
e
.
	`is_îr‹
())

863  
e
;

865 
sdisk_t
 *
togo
;

867 
	`CRITICAL_SECTION
(
cs
, 
¥Ÿe˘FDs
);

868 
togo
 = 
_disks
[
fd
];

869 
_disks
[
fd
] = 0;

870 
›í_cou¡
--;

872 
dñëe
 
togo
;

874  
e
;

875 
	}
}

901 
w_rc_t
 
	g°hªad_t
::
	$ªad
(
fd
, * 
buf
, 
n
)

903 
fd
 -
fd_ba£
;

904 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

905  
	`RC
(
°BADFD
);

907 
	`INC_STH_STATS
(
ªad
);

909 
d⁄e
 = 0;

910 
w_rc_t
 
e
;

912 
e
 = 
_disks
[
fd
]->
	`ªad
(
buf
, 
n
, 
d⁄e
);

913 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
n
)

914 
e
 = 
	`RC
(
°SHORTIO
);

916  
e
;

917 
	}
}

920 
w_rc_t
 
	g°hªad_t
::
	$wrôe
(
fd
, c⁄° * 
buf
, 
n
)

922 
fd
 -
fd_ba£
;

923 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

924  
	`RC
(
°BADFD
);

926 
	`INC_STH_STATS
(
wrôe
);

928 
d⁄e
 = 0;

929 
w_rc_t
 
e
;

931 
e
 = 
_disks
[
fd
]->
	`wrôe
(
buf
, 
n
, 
d⁄e
);

932 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
n
)

933 
e
 = 
	`RC
(
°SHORTIO
);

935  
e
;

936 
	}
}

939 
w_rc_t
 
	g°hªad_t
::
	$ªadv
(
fd
, c⁄° 
iovec_t
 *
iov
, 
size_t
 
iov˙t
)

941 
fd
 -
fd_ba£
;

942 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

943  
	`RC
(
°BADFD
);

945 
	`INC_STH_STATS
(
ªadv
);

947 
d⁄e
 = 0;

948 
tŸÆ
 = 0;

949 
w_rc_t
 
e
;

951 
tŸÆ
 = 
sdisk_t
::
	`vsize
(
iov
, 
iov˙t
);

953 
e
 = 
_disks
[
fd
]->
	`ªadv
(
iov
, 
iov˙t
, 
d⁄e
);

954 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
tŸÆ
)

955 
e
 = 
	`RC
(
°SHORTIO
);

957  
e
;

958 
	}
}

961 
w_rc_t
 
	g°hªad_t
::
	$wrôev
(
fd
, c⁄° 
iovec_t
 *
iov
, 
size_t
 
iov˙t
)

963 
fd
 -
fd_ba£
;

964 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

965  
	`RC
(
°BADFD
);

967 
	`INC_STH_STATS
(
wrôev
);

969 
d⁄e
 = 0;

970 
tŸÆ
 = 0;

971 
w_rc_t
 
e
;

973 
tŸÆ
 = 
sdisk_t
::
	`vsize
(
iov
, 
iov˙t
);

975 
e
 = 
_disks
[
fd
]->
	`wrôev
(
iov
, 
iov˙t
, 
d⁄e
);

976 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
tŸÆ
)

977 
e
 = 
	`RC
(
°SHORTIO
);

979  
e
;

980 
	}
}

983 
w_rc_t
 
	g°hªad_t
::
	$¥ód
(
fd
, *
buf
, 
n
, 
fûeoff_t
 
pos
)

985 
fd
 -
fd_ba£
;

986 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

987  
	`RC
(
°BADFD
);

989 
	`INC_STH_STATS
(
ªad
);

991 
d⁄e
 = 0;

992 
w_rc_t
 
e
;

994 
î∫o
 = 0;

995 
e
 = 
_disks
[
fd
]->
	`¥ód
(
buf
, 
n
, 
pos
, 
d⁄e
);

996 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
n
) {

997 
e
 = 
	`RC2
(
°SHORTIO
, 
d⁄e
);

1000  
e
;

1001 
	}
}

1004 
w_rc_t
 
	g°hªad_t
::
	$pwrôe
(
fd
, c⁄° *
buf
, 
n
, 
fûeoff_t
 
pos
)

1006 
fd
 -
fd_ba£
;

1007 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

1008  
	`RC
(
°BADFD
);

1010 
	`INC_STH_STATS
(
wrôe
);

1012 
d⁄e
 = 0;

1013 
w_rc_t
 
e
;

1015 
e
 = 
_disks
[
fd
]->
	`pwrôe
(
buf
, 
n
, 
pos
, 
d⁄e
);

1016 i‡(!
e
.
	`is_îr‹
(Ë&& 
d⁄e
 !
n
)

1017 
e
 = 
	`RC
(
°SHORTIO
);

1019  
e
;

1020 
	}
}

1023 
w_rc_t
 
	g°hªad_t
::
	$fsync
(
fd
)

1025 
fd
 -
fd_ba£
;

1026 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

1027  
	`RC
(
°BADFD
);

1029 
w_rc_t
 
e
;

1030 
	`INC_STH_STATS
(
sync
);

1032 
e
 = 
_disks
[
fd
]->
	`sync
();

1034  
e
;

1035 
	}
}

1037 
w_rc_t
 
	g°hªad_t
::
	$·runˇã
(
fd
, 
fûeoff_t
 
n
)

1039 
fd
 -
fd_ba£
;

1040 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

1041  
	`RC
(
°BADFD
);

1043 
w_rc_t
 
e
;

1044 
	`INC_STH_STATS
(
åunˇã
);

1046 
e
 = 
_disks
[
fd
]->
	`åunˇã
(
n
);

1048  
e
;

1049 
	}
}

1052 
w_rc_t
 
	g°hªad_t
::
	$l£ek
(
fd
, 
fûeoff_t
 
pos
, 
whí˚
, fûeoff_t& 
ªt
)

1054 
fd
 -
fd_ba£
;

1055 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

1056  
	`RC
(
°BADFD
);

1058 
w_rc_t
 
e
;

1060 
e
 = 
_disks
[
fd
]->
	`£ek
(
pos
, 
whí˚
, 
ªt
);

1062  
e
;

1063 
	}
}

1066 
w_rc_t
 
	g°hªad_t
::
	$l£ek
(
fd
, 
fûeoff_t
 
off£t
, 
whí˚
)

1068 
fûeoff_t
 
de°
;

1069 
w_rc_t
 
e
;

1071 
e
 = 
°hªad_t
::
	`l£ek
(
fd
, 
off£t
, 
whí˚
, 
de°
);

1072 i‡(!
e
.
	`is_îr‹
(Ë&& 
whí˚
 =
SEEK_AT_SET
 && 
de°
 !
off£t
)

1073 
e
 = 
	`RC
(
°SHORTSEEK
);

1075  
e
;

1076 
	}
}

1079 
w_rc_t
 
	g°hªad_t
::
	$f°©
(
fd
, 
fûe°©_t
 &
°
)

1081 
fd
 -
fd_ba£
;

1082 i‡(
fd
 < 0 || fd >()
›í_max
 || !
_disks
[fd])

1083  
	`RC
(
°BADFD
);

1085 
w_rc_t
 
e
;

1087 
e
 = 
_disks
[
fd
]->
	`°©
(
°
);

1089  
e
;

1090 
	}
}

1092 
w_rc_t
 
	g°hªad_t
::
	$fi§aw
(
fd
, 
boﬁ
 &
isRaw
)

1094 
fûe°©_t
 
°
;

1096 
isRaw
 = 
Ál£
;

1098 
	`W_DO
(
	`f°©
(
fd
, 
°
));

1100 
isRaw
 = 
°
.
is_devi˚
 ;

1101  
RCOK
;

1102 
	}
}

1105 
	g°hªad_t
::
	$dump_io
(
o°ªam
 &
s
)

1107 
s
 << "I/O:";

1108 
s
 << " o≥n_max=" << (
›í_max
);

1109 
s
 << " o≥n_cou¡=" << 
›í_cou¡
;

1110 
s
 << 
ídl
;

1111 
	}
}

1113 "C" 
	$dump_io
()

1115 
°hªad_t
::
	`dump_io
(
cout
);

1116 
cout
 << 
Êush
;

1117 
	}
}

	@src/sthread/macpthread_barrier.h

34 #ifde‡
__APPLE__


36 #i‚de‡
PTHREAD_BARRIER_H_


37 
	#PTHREAD_BARRIER_H_


	)

39 
	~<±hªad.h
>

40 
	~<î∫o.h
>

42 
	t±hªad_b¨rõøâr_t
;

45 
±hªad_muãx_t
 
	mmuãx
;

46 
±hªad_c⁄d_t
 
	mc⁄d
;

47 
	mcou¡
;

48 
	måùCou¡
;

49 } 
	t±hªad_b¨rõr_t
;

52 
	$±hªad_b¨rõr_öô
(
±hªad_b¨rõr_t
 *
b¨rõr
, c⁄° 
±hªad_b¨rõøâr_t
 *
©å
, 
cou¡
)

54 if(
cou¡
 == 0)

56 
î∫o
 = 
EINVAL
;

59 if(
	`±hªad_muãx_öô
(&
b¨rõr
->
muãx
, 0) < 0)

63 if(
	`±hªad_c⁄d_öô
(&
b¨rõr
->
c⁄d
, 0) < 0)

65 
	`±hªad_muãx_de°roy
(&
b¨rõr
->
muãx
);

68 
b¨rõr
->
åùCou¡
 = 
cou¡
;

69 
b¨rõr
->
cou¡
 = 0;

72 
	}
}

74 
	$±hªad_b¨rõr_de°roy
(
±hªad_b¨rõr_t
 *
b¨rõr
)

76 
	`±hªad_c⁄d_de°roy
(&
b¨rõr
->
c⁄d
);

77 
	`±hªad_muãx_de°roy
(&
b¨rõr
->
muãx
);

79 
	}
}

81 
	$±hªad_b¨rõr_waô
(
±hªad_b¨rõr_t
 *
b¨rõr
)

83 
	`±hªad_muãx_lock
(&
b¨rõr
->
muãx
);

84 ++(
b¨rõr
->
cou¡
);

85 if(
b¨rõr
->
cou¡
 >b¨rõr->
åùCou¡
)

87 
b¨rõr
->
cou¡
 = 0;

88 
	`±hªad_c⁄d_brﬂdˇ°
(&
b¨rõr
->
c⁄d
);

89 
	`±hªad_muãx_u∆ock
(&
b¨rõr
->
muãx
);

94 
	`±hªad_c⁄d_waô
(&
b¨rõr
->
c⁄d
, &(b¨rõr->
muãx
));

95 
	`±hªad_muãx_u∆ock
(&
b¨rõr
->
muãx
);

98 
	}
}

	@src/sthread/mcs_lock.h

1 #i‚de‡
MCS_LOCK_H


2 
	#MCS_LOCK_H


	)

43 
	smcs_lock
 {

44 
	mqnode
;

45 
	sqnode
 {

46 
qnode
* 
	m_√xt
;

47 
	m_waôög
;

48 
	m_∑ddög
;

50 
qnode
 vﬁ©ûe* 
vthis
(Ë{  
	mthis
; }

52 
	sext_qnode
 {

53 
qnode
 
	m_node
;

54 
›î©‹
 
	mqnode
*(Ë{  &
	m_node
; }

55 
mcs_lock
* 
	m_hñd
;

57 
	#MCS_EXT_QNODE_INITIALIZER
 {{0,
Ál£
,0},0}

	)

58 
qnode
* vﬁ©ûê
	m_èû
;

59 
mcs_lock
(Ë: 
_èû
(
NULL
) { }

66 
•ö_⁄_waôög
(
qnode
* 
me
);

70 
boﬁ
 
©ãm±
(
ext_qnode
* 
me
) {

71 if(
©ãm±
((
qnode
*Ë
me
)) {

72 
	mme
->
	m_hñd
 = 
this
;

73  
	måue
;

75  
	mÁl£
;

77 
boﬁ
 
©ãm±
(
qnode
* 
me
) {

78 
	mme
->
	m_√xt
 = 
NULL
;

79 
	mme
->
	m_waôög
 = 
åue
;

80 
memb¨_¥odu˚r
();

81 
qnode
* 
	m¥ed
 = (qnode*Ë
©omic_ˇs_±r
(&
_èû
, 0, (*Ë
me
);

83 if(
	m¥ed
)

84  
	mÁl£
;

85 
memb¨_íãr
();

86  
	måue
;

89 * 
acquúe
(
ext_qnode
* 
me
) {

90 
	mme
->
	m_hñd
 = 
this
;

91  
acquúe
((
qnode
*Ë
me
);

93 * 
acquúe
(
qnode
* 
me
) {

94  
__unß„_íd_acquúe
(
me
, 
__unß„_begö_acquúe
(me));

97 
qnode
* 
__unß„_begö_acquúe
(qnode* 
me
) {

98 
	mme
->
	m_√xt
 = 
NULL
;

99 
	mme
->
	m_waôög
 = 
åue
;

100 
memb¨_¥odu˚r
();

101 
qnode
* 
	m¥ed
 = (qnode*Ë
©omic_sw≠_±r
(&
_èû
, (*Ë
me
);

102 if(
	m¥ed
) {

103 
	m¥ed
->
	m_√xt
 = 
me
;

105  
	m¥ed
;

107 * 
__unß„_íd_acquúe
(
qnode
* 
me
, qnode* 
¥ed
) {

108 if(
	m¥ed
) {

109 
•ö_⁄_waôög
(
me
);

111 
memb¨_íãr
();

112  (*Ë
	m¥ed
;

120 
qnode
* 
•ö_⁄_√xt
(qnode* 
me
);

122 
ªÀa£
(
ext_qnode
 *
me
) {

124 
	mme
->
	m_hñd
 = 0; 
ªÀa£
((
qnode
*Ë
me
);

126 
ªÀa£
(
ext_qnode
 &
me
) {Ñelease(&me); }

127 
ªÀa£
(
qnode
 &
me
) {Ñelease(&me); }

128 
ªÀa£
(
qnode
* 
me
) {

130 
memb¨_exô
();

132 
qnode
* 
	m√xt
;

133 if(!(
	m√xt
=
me
->
_√xt
)) {

134 if(
me
 =
_èû
 && mê=(
qnode
*)

135 
©omic_ˇs_±r
(&
_èû
, (*Ë
me
, 
NULL
))

137 
	m√xt
 = 
•ö_⁄_√xt
(
me
);

139 
	m√xt
->
	m_waôög
 = 
Ál£
;

142 
boﬁ
 
is_möe
(
ext_qnode
* 
me
Ë{  
	mme
->
	m_hñd
 =
this
; }

	@src/sthread/no-inline.cpp

25 
	~"w_deföes.h
"

26 
	~<w.h
>

27 
	~"©omic_ãm∂©es.h
"

29 
	~"mcs_lock.h
"

30 
	~"°hªad.h
"

31 
	~"§wlock.h
"

33 
	gmcs_lock
::
	$•ö_⁄_waôög
(
qnode
* 
me
) {

34 
me
->
	`vthis
()->
_waôög
) ;

35 
	}
}

37 
	gmcs_lock
::
qnode
* 
mcs_lock
::
	$•ö_⁄_√xt
(
qnode
* 
me
) {

38 
qnode
* 
√xt
;

39 !(
√xt
=
me
->
	`vthis
()->
_√xt
)) ;

40  
√xt
;

41 
	}
}

44 
	gmcs_rwlock
::
	$_•ö_⁄_wrôî
()

46 
	`has_wrôî
()) ;

48 
	}
}

50 
	gmcs_rwlock
::
	$_•ö_⁄_ªadîs
()

52 
	`has_ªadî
()) ;

54 
	}
}

56 
	gocc_rwlock
::
	$acquúe_ªad
()

58 
cou¡
 = 
	`©omic_add_32_nv
(&
_a˘ive_cou¡
, 
READER
);

59 
cou¡
 & 
WRITER
) {

61 
cou¡
 = 
	`©omic_add_32_nv
(&
_a˘ive_cou¡
, -
READER
);

63 
	`CRITICAL_SECTION
(
cs
, 
_ªad_wrôe_muãx
);

66 if(
cou¡
 =
WRITER
)

67 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_wrôe_c⁄d
));

69 *&
_a˘ive_cou¡
 & 
WRITER
) {

70 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_ªad_c⁄d
, &
_ªad_wrôe_muãx
));

73 
cou¡
 = 
	`©omic_add_32_nv
(&
_a˘ive_cou¡
, 
READER
);

75 
	`memb¨_íãr
();

76 
	}
}

78 
	gocc_rwlock
::
	$acquúe_wrôe
()

81 
	`CRITICAL_SECTION
(
cs
, 
_ªad_wrôe_muãx
);

82 *&
_a˘ive_cou¡
 & 
WRITER
) {

83 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_ªad_c⁄d
, &
_ªad_wrôe_muãx
));

87 
cou¡
 = 
	`©omic_add_32_nv
(&
_a˘ive_cou¡
, 
WRITER
);

88 
	`w_as£π1
(
cou¡
 & 
WRITER
);

91 
cou¡
 !
WRITER
) {

92 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_wrôe_c⁄d
, &
_ªad_wrôe_muãx
));

93 
cou¡
 = *&
_a˘ive_cou¡
;

95 
	}
}

97 
	gèès_lock
::
	$•ö
(Ë{ *&(
_hﬁdî
.
h™dÀ
)Ë; 
	}
}

	@src/sthread/os_fcntl.h

30 #i‚de‡
OS_FCNTL_H


31 
	#OS_FCNTL_H


	)

33 
	~"w_deföes.h
"

45 #i‡
HAVE_FCNTL_H


46 
	~<f˙é.h
>

48 
	~<sys/f˙é.h
>

	@src/sthread/os_interface.h

30 #i‚de‡
OS_INTERFACE_H


31 
	#OS_INTERFACE_H


	)

33 
	~"w_deföes.h
"

63 #i‚de‡
os_›í


64 
	#os_›í
(
p
,
f
,
m
Ë
	`›í
’,f,m)

	)

67 #i‚de‡
os_˛o£


68 
	#os_˛o£
(
d
Ë
	`˛o£
(d)

	)

71 
	#os_ªad
(
d
,
b
,
c
Ë
	`ªad
(d,b,c)

	)

72 
	#os_wrôe
(
d
,
b
,
c
Ë
	`wrôe
(d,b,c)

	)

73 
	#os_ªadv
(
d
,
v
,
c
Ë
	`ªadv
(d,v,c)

	)

74 
	#os_wrôev
(
d
,
v
,
c
Ë
	`wrôev
(d,v,c)

	)

75 
	#os_¥ód
(
d
,
b
,
c
,
p
Ë
	`¥ód
(d,b,c,p)

	)

76 
	#os_pwrôe
(
d
,
b
,
c
,
p
Ë
	`pwrôe
(d,b,c,p)

	)

78 #i‚de‡
os_l£ek


79 
	#os_l£ek
(
d
,
o
,
w
Ë
	`l£ek
(d,o,w)

	)

82 #i‚de‡
os_f°©


83 
	#os_f°©
(
d
,
s
Ë
	`f°©
(d,s)

	)

86 #i‚de‡
os_°©


87 
	#os_°©
(
f
,
s
Ë
	`°©
(f,s)

	)

90 #i‚de‡
os_·runˇã


91 
	#os_·runˇã
(
d
,
s
Ë
	`·runˇã
(d,s)

	)

94 #i‚de‡
os_åunˇã


95 
	#os_åunˇã
(
f
,
s
Ë
	`åunˇã
(f,s)

	)

97 #i‚de‡
os_fsync


98 
	#os_fsync
(
d
Ë
	`fsync
(d)

	)

100 #i‚de‡
os_lockf


101 
	#os_lockf
(
d
,
f
,
s
Ë
	`lockf
(d,f,s)

	)

104 #i‚de‡
HAVE_OS_STAT_T


105 
°©
 
	tos_°©_t
;

107 #unde‡
HAVE_OS_STAT_T


111 
	#os_›ídú
(
f
Ë
	`›ídú
(f)

	)

112 
	#os_˛o£dú
(
d
Ë
	`˛o£dú
(d)

	)

120 #i‚de‡
os_ªaddú


121 
	#os_ªaddú
(
d
Ë
	`ªaddú
(d)

	)

124 #i‚de‡
HAVE_OS_DIRENT_T


125 
dúít
 
	tos_dúít_t
;

127 #unde‡
HAVE_OS_DIRENT_T


130 #i‡
HAVE_DIRENT_H


132 
	~<dúít.h
>

134 
	gDIR
;

137 
DIR
 *
	tos_dú_t
;

140 
	#os_gëæimô
(
l
,
r
Ë
	`gëæimô
÷,r)

	)

141 
	#os_£ålimô
(
l
,
r
Ë
	`£ålimô
÷,r)

	)

143 
æimô
 
	tos_æimô_t
;

	@src/sthread/sdisk.cpp

53 
	~"w_deföes.h
"

70 
	~<w.h
>

71 
	~<sdisk.h
>

73 
	~<°hªad.h
>

76 c⁄° 
	g°SHORTSEEK
 = 
°hªad_ba£_t
::
°SHORTSEEK
;

79 
	gsdisk_ba£_t
::
	$vsize
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
)

81 
tŸÆ
 = 0;

83 
i
 = 0; i < 
iov˙t
; i++)

84 
tŸÆ
 +
iov
[
i
].
iov_Àn
;

86  
tŸÆ
;

87 
	}
}

90 
	gsdisk_t
::
	$modeBôs
(
mode
)

92  
mode
 & 
MODE_FLAGS
;

93 
	}
}

97 
boﬁ
 
	gsdisk_t
::
	$hasMode
(
mode
, 
w™ãd
)

99 
mode
 = 
	`modeBôs
(mode);

100  
mode
 =
w™ãd
;

101 
	}
}

104 
boﬁ
 
	gsdisk_t
::
	$hasO±i⁄
(
mode
, 
w™ãd
)

106 
mode
 &
OPTION_FLAGS
;

107  (
mode
 & 
w™ãd
) == wanted;

108 
	}
}

115 
w_rc_t
 
	gsdisk_t
::
	$ªadv
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
å™s„ªd
)

117 
d⁄e
 = 0;

118 
n
;

119 
i
;

120 
w_rc_t
 
e
;

122 
i
 = 0; i < 
iov˙t
; i++) {

123 
e
 = 
	`ªad
(
iov
[
i
].
iov_ba£
, iov[i].
iov_Àn
, 
n
);

124 i‡(
e
.
	`is_îr‹
())

126 
d⁄e
 +
n
;

127 i‡(
	`size_t
(
n
Ë!
iov
[
i
].
iov_Àn
)

131 
å™s„ªd
 = 
d⁄e
;

133  
e
;

134 
	}
}

137 
w_rc_t
 
	gsdisk_t
::
	$wrôev
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
å™s„ªd
)

139 
d⁄e
 = 0;

140 
n
;

141 
i
;

142 
w_rc_t
 
e
;

144 
i
 = 0; i < 
iov˙t
; i++) {

145 
e
 = 
	`wrôe
(
iov
[
i
].
iov_ba£
, iov[i].
iov_Àn
, 
n
);

146 i‡(
e
.
	`is_îr‹
())

148 
d⁄e
 +
n
;

149 i‡(
	`size_t
(
n
Ë!
iov
[
i
].
iov_Àn
)

153 
å™s„ªd
 = 
d⁄e
;

155  
e
;

156 
	}
}

165 
w_rc_t
 
	gsdisk_t
::
	$¥ód
(*
buf
, 
size
, 
fûeoff_t
 
pos
,

166 &
å™s„ªd
)

169  
	`RC
(
fcNOTIMPLEMENTED
);

171 
fûeoff_t
 
was
;

172 
fûeoff_t
 
√wpos
;

173 
n
;

174 
w_rc_t
 
e
;

175 
w_rc_t
 
es
;

177 
	`W_DO
(
	`£ek
(0, 
SEEK_AT_CUR
, 
was
));

179 i‡(
pos
 !
was
) {

180 
	`W_DO
(
	`£ek
(
pos
, 
SEEK_AT_SET
, 
√wpos
));

181 i‡(
√wpos
 !
pos
) {

182 
es
 = 
	`£ek
(
was
, 
SEEK_AT_SET
, 
√wpos
);

183 i‡(
es
.
	`is_îr‹
())

184 
˚º
 << "Warning:ÖreadÑeposition failed!"

185 << 
ídl
 << 
e
 <<Éndl;

186  
	`RC
(
°SHORTSEEK
);

190 
e
 = 
	`ªad
(
buf
, 
size
, 
n
);

192 
es
 = 
	`£ek
(
was
, 
SEEK_AT_SET
, 
√wpos
);

194 i‡(
es
.
	`is_îr‹
(Ë|| 
√wpos
 !
was
)

195 
˚º
 << "Warning:ÖreadÑeposition failed!"

196 << 
ídl
 << 
e
 <<Éndl;

198 
å™s„ªd
 = 
n
;

200  
e
;

201 
	}
}

203 
w_rc_t
 
	gsdisk_t
::
	$pwrôe
(c⁄° *
buf
, 
size
, 
fûeoff_t
 
pos
,

204 &
å™s„ªd
)

207  
	`RC
(
fcNOTIMPLEMENTED
);

209 
fûeoff_t
 
was
;

210 
fûeoff_t
 
√wpos
;

211 
n
;

212 
w_rc_t
 
e
;

213 
w_rc_t
 
es
;

215 
	`W_DO
(
	`£ek
(0, 
SEEK_AT_CUR
, 
was
));

217 i‡(
pos
 !
was
) {

218 
	`W_DO
(
	`£ek
(
pos
, 
SEEK_AT_SET
, 
√wpos
));

219 i‡(
√wpos
 !
pos
) {

220 
es
 = 
	`£ek
(
was
, 
SEEK_AT_SET
, 
√wpos
);

221 i‡(
es
.
	`is_îr‹
())

222 
˚º
 << "Warning:ÖwriteÑeposition failed!"

223 << 
ídl
 << 
e
 <<Éndl;

224  
	`RC
(
°SHORTSEEK
);

228 
e
 = 
	`wrôe
(
buf
, 
size
, 
n
);

230 
es
 = 
	`£ek
(
was
, 
SEEK_AT_SET
, 
√wpos
);

232 i‡(
es
.
	`is_îr‹
(Ë|| 
√wpos
 !
was
)

233 
˚º
 << "Warning:ÖwriteÑeposition failed!"

234 << 
ídl
 << 
e
 <<Éndl;

236 
å™s„ªd
 = 
n
;

238  
e
;

239 
	}
}

243 
w_rc_t
 
	gsdisk_t
::
	$sync
()

245  
RCOK
;

246 
	}
}

249 
w_rc_t
 
	gsdisk_t
::
	$°©
(
fûe°©_t
 &)

251  
	`RC
(
fcNOTIMPLEMENTED
);

252 
	}
}

	@src/sthread/sdisk.h

53 #i‚de‡
SDISK_H


54 
	#SDISK_H


	)

56 
	~"w_deföes.h
"

73 ˛as†
	csdisk_ba£_t
 {

74 
	mpublic
:

76 
	siovec_t
 {

77 *
iov_ba£
;

78 
size_t
 
	miov_Àn
;

80 
iovec_t
(*
ba£
 = 0, 
Àn
 = 0)

81 : 
iov_ba£
(
ba£
), 
iov_Àn
(
Àn
) { }

85 #i‡!
deföed
(
LARGEFILE_AWARE
Ë&& !
	$deföed
(
ARCH_LP64
)

88 
w_ba£_t
::
	töt4_t
 
	tfûeoff_t
;

90 
w_ba£_t
::
	töt8_t
 
	tfûeoff_t
;

93 
	sfûe°©_t
 {

94 
fûeoff_t
 
°_size
;

95 
fûeoff_t
 
°_fûe_id
;

96 
°_devi˚_id
;

97 
°_block_size
;

98 
boﬁ
 
is_fûe
;

99 
boﬁ
 
is_dú
;

100 
boﬁ
 
is_devi˚
;

102 
	`fûe°©_t
(Ë: 
	`°_size
(0),

103 
	`°_fûe_id
(0), 
	`°_devi˚_id
(0), 
	`°_block_size
(0),

104 
	`is_fûe
(
Ál£
), 
	`is_dú
(false),

105 
	`is_devi˚
(
Ál£
)

107 
	}
};

112 
	gOPEN_RDONLY
=0,

113 
	gOPEN_WRONLY
=0x1,

114 
	gOPEN_RDWR
=0x2,

115 
	gMODE_FLAGS
=0x3,

118 
	gOPEN_TRUNC
=0x10,

119 
	gOPEN_EXCL
=0x20,

120 
	gOPEN_CREATE
=0x40,

121 
	gOPEN_SYNC
=0x80,

122 
	gOPEN_APPEND
=0x100,

123 
	gOPEN_RAW
=0x200,

124 
	gOPTION_FLAGS
=0x3f0

129 
	gSEEK_AT_SET
=0,

130 
	gSEEK_AT_CUR
=1,

131 
	gSEEK_AT_END
=2

135 
vsize
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
);

141 ˛as†
	csdisk_t
 : 
public
 
sdisk_ba£_t
 {

142 
¥Ÿe˘ed
:

143 
	$sdisk_t
() { }

146 
	`modeBôs
(
mode
);

147 
boﬁ
 
	`hasMode
(
mode
, 
w™ãd
);

148 
boﬁ
 
	`hasO±i⁄
(
mode
, 
w™ãd
);

150 
public
:

151 
vútuÆ
 ~
	$sdisk_t
(Ë{ 
	}
}

153 
vútuÆ
 
w_rc_t
 
›í
(c⁄° *
«me
, 
Êags
, 
mode
) = 0;

154 
vútuÆ
 
w_rc_t
 
˛o£
() = 0;

156 
vútuÆ
 
w_rc_t
 
ªad
(*
buf
, 
cou¡
, &
d⁄e
) = 0;

157 
vútuÆ
 
w_rc_t
 
wrôe
(c⁄° *
buf
, 
cou¡
, &
d⁄e
) = 0;

159 
vútuÆ
 
w_rc_t
 
ªadv
(c⁄° 
iovec_t
 *
iov
, 
ioc
, &
d⁄e
);

160 
vútuÆ
 
w_rc_t
 
wrôev
(c⁄° 
iovec_t
 *
iov
, 
ioc
, &
d⁄e
);

162 
vútuÆ
 
w_rc_t
 
¥ód
(*
buf
, 
cou¡
, 
fûeoff_t
 
pos
, &
d⁄e
);

163 
vútuÆ
 
w_rc_t
 
pwrôe
(c⁄° *
buf
, 
cou¡
,

164 
fûeoff_t
 
pos
, &
d⁄e
);

166 
vútuÆ
 
w_rc_t
 
£ek
(
fûeoff_t
 
pos
, 
‹igö
, fûeoff_à&
√wpos
) = 0;

168 
vútuÆ
 
w_rc_t
 
åunˇã
(
fûeoff_t
 
size
) = 0;

169 
vútuÆ
 
w_rc_t
 
sync
();

171 
vútuÆ
 
w_rc_t
 
°©
(
fûe°©_t
 &stat);

	@src/sthread/sdisk_unix.cpp

53 
	~"w_deföes.h
"

69 #i‡
deföed
(
löux
Ë&& !deföed(
_GNU_SOURCE
)

75 
	#_GNU_SOURCE


	)

78 
	~<w.h
>

79 
	~<°hªad.h
>

80 
	~<sdisk.h
>

81 
	~<sdisk_unix.h
>

83 #ifde‡
EXPENSIVE_STATS


84 
	~<°ime.h
>

87 
	~<°hªad_°©s.h
>

88 
˛ass
 
°hªad_°©s
 
SthªadSèts
;

90 
	~"os_f˙é.h
"

91 
	~<˚ºno
>

92 
	~<sys/°©.h
>

94 
	~<sys/uio.h
>

96 
	#HAVE_IO_VECTOR


	)

101 
	~<os_öãrÁ˚.h
>

104 c⁄° 
	g°BADFD
 = 
°hªad_ba£_t
::
°BADFD
;

105 c⁄° 
	g°INVAL
 = 
°hªad_ba£_t
::
°INVAL
;

108 
	gsdisk_unix_t
::
	$c⁄vît_Êags
(
sÊags
)

110 
Êags
 = 0;

113 
	`modeBôs
(
sÊags
)) {

114 
OPEN_RDWR
:

115 
Êags
 |
O_RDWR
;

117 
OPEN_WRONLY
:

118 
Êags
 |
O_WRONLY
;

120 
OPEN_RDONLY
:

121 
Êags
 |
O_RDONLY
;

127 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_CREATE
))

128 
Êags
 |
O_CREAT
;

129 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_TRUNC
))

130 
Êags
 |
O_TRUNC
;

131 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_EXCL
))

132 
Êags
 |
O_EXCL
;

133 #ifde‡
O_SYNC


134 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_SYNC
))

135 
Êags
 |
O_SYNC
;

137 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_APPEND
))

138 
Êags
 |
O_APPEND
;

139 #ifde‡
O_DIRECT


154 i‡(
	`hasO±i⁄
(
sÊags
, 
OPEN_RAW
))

155 
Êags
 |
O_DIRECT
;

158  
Êags
;

159 
	}
}

162 
	gsdisk_unix_t
::~
	$sdisk_unix_t
()

164 i‡(
_fd
 !
FD_NONE
)

165 
	`W_COERCE
(
	`˛o£
());

166 
	}
}

169 
w_rc_t
 
	gsdisk_unix_t
::
	$make
(c⁄° *
«me
, 
Êags
, 
mode
,

170 
sdisk_t
 *&
disk
)

172 
sdisk_unix_t
 *
ud
;

173 
w_rc_t
 
e
;

175 
disk
 = 0;

177 
ud
 = 
√w
 
	`sdisk_unix_t
(
«me
);

178 i‡(!
ud
)

179  
	`RC
(
fcOUTOFMEMORY
);

181 
e
 = 
ud
->
	`›í
(
«me
, 
Êags
, 
mode
);

182 i‡(
e
.
	`is_îr‹
()) {

183 
dñëe
 
ud
;

184  
e
;

187 
disk
 = 
ud
;

188  
RCOK
;

189 
	}
}

192 
w_rc_t
 
	gsdisk_unix_t
::
	$›í
(c⁄° *
«me
, 
Êags
, 
mode
)

194 i‡(
_fd
 !
FD_NONE
)

195  
	`RC
(
°BADFD
);

197 
_fd
 = ::
	`os_›í
(
«me
, 
	`c⁄vît_Êags
(
Êags
), 
mode
);

198 
_Êags
 = 
Êags
;

199 i‡(
_fd
 == -1) {

200 
w_rc_t
 
rc
 = 
	`RC
(
fcOS
);

201 
	`RC_APPEND_MSG
(
rc
, << "Of„ndög fûe: " << 
«me
);

202  
rc
;

205  
RCOK
;

206 
	}
}

208 
w_rc_t
 
	gsdisk_unix_t
::
	$˛o£
()

210 i‡(
_fd
 =
FD_NONE
)

211  
	`RC
(
°BADFD
);

213 
n
;

215 
n
 = ::
	`os_˛o£
(
_fd
);

216 i‡(
n
 == -1)

217  
	`RC
(
fcOS
);

219 
_fd
 = 
FD_NONE
;

220  
RCOK
;

221 
	}
}

226 
w_rc_t
 
	gsdisk_unix_t
::
	$ªad
(*
buf
, 
cou¡
, &
d⁄e
)

228 i‡(
_fd
 =
FD_NONE
)

229  
	`RC
(
°BADFD
);

231 
n
;

233 
	`INC_STH_STATS
(
num_io
);

235 
n
 = ::
	`os_ªad
(
_fd
, 
buf
, 
cou¡
);

236 i‡(
n
 == -1)

237  
	`RC
(
fcOS
);

239 
d⁄e
 = 
n
;

241  
RCOK
;

242 
	}
}

244 
w_rc_t
 
	gsdisk_unix_t
::
	$wrôe
(c⁄° *
buf
, 
cou¡
, &
d⁄e
)

246 i‡(
_fd
 =
FD_NONE
)

247  
	`RC
(
°BADFD
);

249 
n
;

251 
	`INC_STH_STATS
(
num_io
);

253 
n
 = ::
	`os_wrôe
(
_fd
, 
buf
, 
cou¡
);

254 i‡(
n
 == -1)

255  
	`RC
(
fcOS
);

257 #i‡
	`deföed
(
USING_VALGRIND
)

258 if(
RUNNING_ON_VALGRIND
)

260 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

264 
d⁄e
 = 
n
;

266  
RCOK
;

267 
	}
}

269 #ifde‡
HAVE_IO_VECTOR


270 
w_rc_t
 
	gsdisk_unix_t
::
	$ªadv
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
d⁄e
)

272 i‡(
_fd
 =
FD_NONE
)

273  
	`RC
(
°BADFD
);

275 
n
;

277 
	`INC_STH_STATS
(
num_io
);

279 #ifde‡
IOVEC_MISMATCH


281 
iovec
 
_iov
[
°hªad_t
::
iovec_max
];

282 
i
 = 0; i < 
iov˙t
; i++) {

283 
_iov
[
i
].
iov_ba£
 = (*Ë
iov
[i].iov_base;

284 
_iov
[
i
].
iov_Àn
 = 
iov
[i].iov_len;

286 
n
 = ::
	`os_ªadv
(
_fd
, 
_iov
, 
iov˙t
);

289 
n
 = ::
	`os_ªadv
(
_fd
, (c⁄° 
iovec
 *)
iov
, 
iov˙t
);

291 i‡(
n
 == -1)

292  
	`RC
(
fcOS
);

294 
d⁄e
 = 
n
;

296  
RCOK
;

297 
	}
}

299 
w_rc_t
 
	gsdisk_unix_t
::
	$wrôev
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
d⁄e
)

301 i‡(
_fd
 =
FD_NONE
)

302  
	`RC
(
°BADFD
);

304 
n
;

306 
	`INC_STH_STATS
(
num_io
);

308 #ifde‡
IOVEC_MISMATCH


310 
iovec
 
_iov
[
°hªad_t
::
iovec_max
];

311 
i
 = 0; i < 
iov˙t
; i++) {

312 
_iov
[
i
].
iov_ba£
 = (*Ë
iov
[i].iov_base;

313 
_iov
[
i
].
iov_Àn
 = 
iov
[i].iov_len;

315 
n
 = ::
	`os_wrôev
(
_fd
, 
_iov
, 
iov˙t
);

318 
n
 = ::
	`os_wrôev
(
_fd
, (c⁄° 
iovec
 *)
iov
, 
iov˙t
);

320 i‡(
n
 == -1)

321  
	`RC
(
fcOS
);

323 #i‡
	`deföed
(
USING_VALGRIND
)

324 if(
RUNNING_ON_VALGRIND
)

326 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

330 
d⁄e
 = 
n
;

332  
RCOK
;

333 
	}
}

336 
w_rc_t
 
	gsdisk_unix_t
::
	$¥ód
(*
buf
, 
cou¡
, 
fûeoff_t
 
pos
, &
d⁄e
)

338 i‡(
_fd
 =
FD_NONE
)

339  
	`RC
(
°BADFD
);

341 
n
;

343 
	`INC_STH_STATS
(
num_io
);

345 
n
 = ::
	`os_¥ód
(
_fd
, 
buf
, 
cou¡
, 
pos
);

346 i‡(
n
 == -1)

347  
	`RC
(
fcOS
);

349 
d⁄e
 = 
n
;

351  
RCOK
;

352 
	}
}

355 
w_rc_t
 
	gsdisk_unix_t
::
	$pwrôe
(c⁄° *
buf
, 
cou¡
, 
fûeoff_t
 
pos
,

356 &
d⁄e
)

358 i‡(
_fd
 =
FD_NONE
)

359  
	`RC
(
°BADFD
);

361 
n
;

363 
	`INC_STH_STATS
(
num_io
);

365 
n
 = ::
	`os_pwrôe
(
_fd
, 
buf
, 
cou¡
, 
pos
);

366 i‡(
n
 == -1)

367  
	`RC
(
fcOS
);

368 #i‡
	`deföed
(
USING_VALGRIND
)

369 if(
RUNNING_ON_VALGRIND
)

371 
	`check_vÆgröd_îr‹s
(
__LINE__
, 
__FILE__
);

375 
d⁄e
 = 
n
;

377  
RCOK
;

378 
	}
}

380 
w_rc_t
 
	gsdisk_unix_t
::
	$£ek
(
fûeoff_t
 
pos
, 
‹igö
, fûeoff_à&
√wpos
)

382 i‡(
_fd
 =
FD_NONE
)

383  
	`RC
(
°BADFD
);

385 
‹igö
) {

386 
SEEK_AT_SET
:

387 
‹igö
 = 
SEEK_SET
;

389 
SEEK_AT_CUR
:

390 
‹igö
 = 
SEEK_CUR
;

392 
SEEK_AT_END
:

393 
‹igö
 = 
SEEK_END
;

397 
fûeoff_t
 
l
=0;

398 
l
 = ::
	`os_l£ek
(
_fd
, 
pos
, 
‹igö
);

399 i‡(
l
 == -1)

400  
	`RC
(
fcOS
);

402 
√wpos
 = 
l
;

404  
RCOK
;

405 
	}
}

407 
w_rc_t
 
	gsdisk_unix_t
::
	$åunˇã
(
fûeoff_t
 
size
)

409 i‡(
_fd
 =
FD_NONE
)

410  
	`RC
(
°BADFD
);

411 
	`INC_STH_STATS
(
num_io
);

412 
n
 = ::
	`os_·runˇã
(
_fd
, 
size
);

413  (
n
 =-1Ë? 
	`RC
(
fcOS
Ë: 
RCOK
;

414 
	}
}

416 
w_rc_t
 
	gsdisk_unix_t
::
	$sync
()

418 i‡(
_fd
 =
FD_NONE
)

419  
	`RC
(
°BADFD
);

420 i‡(
	`modeBôs
(
_Êags
Ë=
OPEN_RDONLY
)

421  
RCOK
;

423 
	`INC_STH_STATS
(
num_io
);

424 
n
 = 
	`os_fsync
(
_fd
);

427 i‡(
n
 =-1 && (
î∫o
 =
EBADF
 ||Éºnÿ=
EINVAL
))

428 
n
 = 0;

430  (
n
 =-1Ë? 
	`RC
(
fcOS
Ë: 
RCOK
;

431 
	}
}

434 
w_rc_t
 
	gsdisk_unix_t
::
	$°©
(
fûe°©_t
 &
°
)

436 i‡(
_fd
 =
FD_NONE
)

437  
	`RC
(
°BADFD
);

439 
os_°©_t
 
sys
;

440 
n
 = 
	`os_f°©
(
_fd
, &
sys
);

441 i‡(
n
 == -1)

442  
	`RC
(
fcOS
);

444 
°
.
°_size
 = 
sys
.st_size;

445 #ifde‡
HAVE_STRUCT_STAT_ST_BLKSIZE


446 
°
.
°_block_size
 = 
sys
.
°_blksize
;

448 
°
.
°_block_size
 = 512;

451 
°
.
°_devi˚_id
 = 
sys
.
°_dev
;

452 
°
.
°_fûe_id
 = 
sys
.
°_öo
;

454 
mode
 = (
sys
.
°_mode
 & 
S_IFMT
);

455 
°
.
is_fûe
 = (
mode
 =
S_IFREG
);

456 
°
.
is_dú
 = (
mode
 =
S_IFDIR
);

457 #ifde‡
S_IFBLK


458 
°
.
is_devi˚
 = (
mode
 =
S_IFBLK
);

460 
°
.
is_devi˚
 = 
Ál£
;

462 
°
.
is_devi˚
 = st.is_devi˚ || (
mode
 =
S_IFCHR
);

464  
RCOK
;

465 
	}
}

	@src/sthread/sdisk_unix.h

30 #i‚de‡
SDISK_UNIX_H


31 
	#SDISK_UNIX_H


	)

33 
	~"w_deföes.h
"

49 ˛as†
	csdisk_unix_t
 : 
public
 
sdisk_t
 {

50 
_fd
;

51 
	m_Êags
;

52 
	m_∑th
[256];

54 íum { 
	mFD_NONE
 = -1 };

57 
	$sdisk_unix_t
(c⁄° *
∑th
Ë: 
	$_fd
(
FD_NONE
)

59 
	`°∫˝y
(&
_∑th
[0], 
∑th
, 255);

60 
_∑th
[255] = '0';

61 
	}
}

63 
	gpublic
:

64 
w_rc_t
 
make
(c⁄° *
«me
,

65 
Êags
, 
mode
,

66 
sdisk_t
 *&
disk
);

67 ~
sdisk_unix_t
();

69 c⁄° * 
	$∑th
(Ëc⁄° {  &
_∑th
[0]; 
	}
}

70 
	$fd
(Ëc⁄° {  
_fd
; 
	}
}

71 
w_rc_t
 
›í
(c⁄° *
«me
, 
Êags
, 
mode
);

72 
w_rc_t
 
˛o£
();

74 
w_rc_t
 
ªad
(*
buf
, 
cou¡
, &
d⁄e
);

75 
w_rc_t
 
wrôe
(c⁄° *
buf
, 
cou¡
, &
d⁄e
);

77 
w_rc_t
 
ªadv
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
d⁄e
);

78 
w_rc_t
 
wrôev
(c⁄° 
iovec_t
 *
iov
, 
iov˙t
, &
d⁄e
);

80 
w_rc_t
 
¥ód
(*
buf
, 
cou¡
, 
fûeoff_t
 
pos
, &
d⁄e
);

81 
w_rc_t
 
pwrôe
(c⁄° *
buf
, 
cou¡
, 
fûeoff_t
 
pos
, &
d⁄e
);

83 
w_rc_t
 
£ek
(
fûeoff_t
 
pos
, 
‹igö
, fûeoff_à&
√wpos
);

85 
w_rc_t
 
åunˇã
(
fûeoff_t
 
size
);

87 
w_rc_t
 
sync
();

89 
w_rc_t
 
°©
(
fûe°©_t
 &
°
);

92 
c⁄vît_Êags
();

	@src/sthread/srwlock.cpp

54 
	~"w_deföes.h
"

58 
	~<w.h
>

59 
	~<w_debug.h
>

60 
	~<°hªad.h
>

67 
	gmcs_rwlock
::
	$_add_whí_wrôî_Àaves
(
dñè
)

70 
	`_•ö_⁄_wrôî
();

71 
	`©omic_add_32
(&
_hﬁdîs
, 
dñè
);

73 
	}
}

75 
boﬁ
 
	gmcs_rwlock
::
	$©ãm±_ªad
()

77 
ﬁd_vÆue
 = *&
_hﬁdîs
;

78 if(
ﬁd_vÆue
 & 
WRITER
 ||

79 
ﬁd_vÆue
 !
	`©omic_ˇs_32
(&
_hﬁdîs
, old_vÆue, old_vÆue+
READER
))

80  
Ál£
;

82 
	`memb¨_íãr
();

83  
åue
;

84 
	}
}

86 
	gmcs_rwlock
::
	$acquúe_ªad
()

91 if(!
	`©ãm±_ªad
()) {

97 
	`CRITICAL_SECTION
(
cs
, (
∑ª¡_lock
*Ë
this
);

98 
	`_add_whí_wrôî_Àaves
(
READER
);

100 
	`memb¨_íãr
();

102 
	}
}

104 
	gmcs_rwlock
::
	$ªÀa£_ªad
()

106 
	`w_as£π2
(
	`has_ªadî
());

107 
	`memb¨_exô
();

109 
	`©omic_add_32
(&
_hﬁdîs
, -
READER
);

110 
	}
}

112 
boﬁ
 
	gmcs_rwlock
::
	$_©ãm±_wrôe
(
ex≥˘ed
)

125 
ext_qnode
 
me
 = 
QUEUE_EXT_QNODE_INITIALIZER
;

126 if(*&
_hﬁdîs
 !
ex≥˘ed
 || !
	`©ãm±
(&
me
))

127  
Ál£
;

131 
boﬁ
 
ªsu…
 = (
ex≥˘ed
 =
	`©omic_ˇs_32
(&
_hﬁdîs
,Éx≥˘ed, 
WRITER
));

132 
	`ªÀa£
(
me
);

133 
	`memb¨_íãr
();

134  
ªsu…
;

135 
	}
}

137 
boﬁ
 
	gmcs_rwlock
::
	$©ãm±_wrôe
()

139 if(!
	`_©ãm±_wrôe
(0))

140  
Ál£
;

143  
åue
;

144 
	}
}

146 
	gmcs_rwlock
::
	$acquúe_wrôe
()

155 
	`CRITICAL_SECTION
(
cs
, (
∑ª¡_lock
*Ë
this
);

156 
	`_add_whí_wrôî_Àaves
(
WRITER
);

157 
	`w_as£π1
(
	`has_wrôî
());

160 if(
	`has_ªadî
()Ë
	`_•ö_⁄_ªadîs
();

163 
	`memb¨_íãr
();

164 
	}
}

166 
	gmcs_rwlock
::
	$ªÀa£_wrôe
() {

167 
	`memb¨_exô
();

168 
	`w_as£π1
(*&
_hﬁdîs
 =
WRITER
);

169 *&
_hﬁdîs
 = 0;

170 
	}
}

172 
boﬁ
 
	gmcs_rwlock
::
	$©ãm±_upgøde
()

174 
	`w_as£π1
(
	`has_ªadî
());

175  
	`_©ãm±_wrôe
(
READER
);

176 
	}
}

178 
	gmcs_rwlock
::
	$downgøde
()

180 
	`memb¨_exô
();

181 
	`w_as£π1
(*&
_hﬁdîs
 =
WRITER
);

182 *&
_hﬁdîs
 = 
READER
;

183 
	`memb¨_íãr
();

184 
	}
}

	@src/sthread/srwlock.h

74 #i‚de‡
SRWLOCK_H


75 
	#SRWLOCK_H


	)

77 
˛ass
 
	gmcs_rwlock
;

78 
mcs_rwlock
 
	t§wlock_t
;

91 ˛as†
	cmcs_rwlock
 : 
¥Ÿe˘ed
 
queue_ba£d_lock_t


93 
queue_ba£d_lock_t
 
	t∑ª¡_lock
;

110 vﬁ©ûê
	m_hﬁdîs
;

112 
boﬁ
 
	m_is_∂p
;

113 
boﬁ
 
	m_is_ªadî
;

115 
	mpublic
:

116 
	erwmode_t
 { 
NONE
=0, 
	mWRITER
=0x1, 
	mREADER
=0x2 };

117 
	$mcs_rwlock
(Ë: 
	`_hﬁdîs
(0), 
	`_is_∂p
(
Ál£
), 
	$_is_ªadî
(
Ál£
Ë{ 
	}
}

118 ~
	$mcs_rwlock
(Ë{
	}
}

121 
rwmode_t
 
	$mode
(Ëc⁄° { 
hﬁdîs
 = *&
_hﬁdîs
;

122  (
hﬁdîs
 =
WRITER
)? WRITER : (hﬁdî†> 0Ë? 
READER
 : 
NONE
; 
	}
}

125 
boﬁ
 
	$is_locked
(Ëc⁄° {  (!
_is_∂p
 && (*&
_hﬁdîs
)==0)?
Ál£
:
åue
; 
	}
}

128 
	$num_hﬁdîs
(Ëc⁄° { 
hﬁdîs
 = *&
_hﬁdîs
;

129  (
hﬁdîs
 =
WRITER
 || 
_is_∂p
Ë? 1 : hﬁdîs/2; 
	}
}

132 
boﬁ
 
	$has_ªadî
(Ëc⁄° {  !
_is_∂p
 && (*&
_hﬁdîs
 & ~
WRITER
); 
	}
}

134 
boﬁ
 
	$has_wrôî
(Ëc⁄° {  !
_is_∂p
 && (*&
_hﬁdîs
 & 
WRITER
); 
	}
}

137 
	$£t_∂p
(
boﬁ
 
is_ªadî
Ë{ 
_is_∂p
 = 
åue
; 
_is_ªadî
 = is_ªadî; 
	}
}

138 
	$un£t_∂p
(Ë{ 
_is_∂p
 = 
Ál£
; 
	}
}

139 
boﬁ
 
	$is_∂p
(Ë{  
_is_∂p
; 
	}
}

140 
boﬁ
 
	$is_ªadî
(Ë{  
_is_ªadî
; 
	}
}

143 
boﬁ
 
©ãm±_ªad
();

145 
acquúe_ªad
();

147 
ªÀa£_ªad
();

150 
boﬁ
 
©ãm±_wrôe
();

152 
acquúe_wrôe
();

154 
ªÀa£_wrôe
();

156 
boﬁ
 
©ãm±_upgøde
();

158 
downgøde
();

160 
	g¥iv©e
:

161 
_•ö_⁄_wrôî
();

162 
_•ö_⁄_ªadîs
();

163 
boﬁ
 
_©ãm±_wrôe
(
ex≥˘ed
);

164 
_add_whí_wrôî_Àaves
(
dñè
);

	@src/sthread/st_einfo_bakw_gen.h

1 #i‚de‡
ST_EINFO_BAKW_GEN_H


2 
	#ST_EINFO_BAKW_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	g°_îr‹_öfo_bakw
[] = {

38 { 
ST_TIMEOUT
, "ST_TIMEOUT" },

39 { 
ST_BADPATH
, "ST_BADPATH" },

40 { 
ST_BADFD
, "ST_BADFD" },

41 { 
ST_BADADDR
, "ST_BADADDR" },

42 { 
ST_INVAL
, "ST_INVAL" },

43 { 
ST_INUSE
, "ST_INUSE" },

44 { 
ST_SHORTIO
, "ST_SHORTIO" },

45 { 
ST_SHORTSEEK
, "ST_SHORTSEEK" },

	@src/sthread/st_einfo_gen.h

1 #i‚de‡
ST_EINFO_GEN_H


2 
	#ST_EINFO_GEN_H


	)

34 
	~"w_deföes.h
"

37 
w_îr‹_öfo_t
 
	g°hªad_ba£_t
::
îr‹_öfo
[] = {

38 { 
°TIMEOUT
 , "Timed out waiting forÑesource"},

39 { 
°BADPATH
 , "PathÇame cannot be stat()ed"},

40 { 
°BADFD
 , "Bad file descriptor for I/O operation, seek, or close"},

41 { 
°BADADDR
 , "Bad offset in shared memory segment"},

42 { 
°INVAL
 , "InvalidárgumentÅoÅhread I/O operation"},

43 { 
°INUSE
 , "Resource in use"},

44 { 
°SHORTIO
 , "Short I/O"},

45 { 
°SHORTSEEK
 , "Short Seek"},

49 
	g°hªad_ba£_t
::
	$öô_îr‹codes
() {

50 i‡(!(
w_îr‹_t
::
	`ö£π
(

51 "Sh‹êThªads", 
°hªad_ba£_t
::
îr‹_öfo
,

52 
°ERRMAX
 - 
°ERRMIN
 +1)) ) {

53 
	`W_FATAL
(
fcINTERNAL
);

55 
	}
}

	@src/sthread/st_errmsg_gen.h

1 #i‚de‡
ST_ERRMSG_GEN_H


2 
	#ST_ERRMSG_GEN_H


	)

34 
	~"w_deföes.h
"

37 * 
	g°_îrmsg
[] = {

49 c⁄° 
	g°_msg_size
 = 7;

	@src/sthread/st_error_def_gen.h

1 #i‚de‡
ST_ERROR_DEF_GEN_H


2 
	#ST_ERROR_DEF_GEN_H


	)

34 
	~"w_deföes.h
"

37 
	#ST_TIMEOUT
 0x40000

	)

38 
	#ST_BADPATH
 0x40001

	)

39 
	#ST_BADFD
 0x40002

	)

40 
	#ST_BADADDR
 0x40003

	)

41 
	#ST_INVAL
 0x40004

	)

42 
	#ST_INUSE
 0x40005

	)

43 
	#ST_SHORTIO
 0x40006

	)

44 
	#ST_SHORTSEEK
 0x40007

	)

45 
	#ST_OK
 0x0

	)

46 
	#ST_ERRMIN
 0x40000

	)

47 
	#ST_ERRMAX
 0x40007

	)

	@src/sthread/st_error_enum_gen.h

1 #i‚de‡
ST_ERROR_ENUM_GEN_H


2 
	#ST_ERROR_ENUM_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	m°TIMEOUT
 = 0x40000,

39 
	m°BADPATH
 = 0x40001,

40 
	m°BADFD
 = 0x40002,

41 
	m°BADADDR
 = 0x40003,

42 
	m°INVAL
 = 0x40004,

43 
	m°INUSE
 = 0x40005,

44 
	m°SHORTIO
 = 0x40006,

45 
	m°SHORTSEEK
 = 0x40007,

46 
	m°OK
 = 0x0,

47 
	m°ERRMIN
 = 0x40000,

48 
	m°ERRMAX
 = 0x40007

	@src/sthread/stcore_pthread.h

30 #i‚de‡
STCORE_PTHREAD_H


31 
	#STCORE_PTHREAD_H


	)

33 
	~"w_deföes.h
"

50 
	~<±hªad.h
>

51 #ifde‡
HAVE_SEMAPHORE_H


52 
	~<£m≠h‹e.h
>

56 
	s°hªad_c‹e_t
 {

57 
	mis_vúgö
;

58 (*
	m°¨t_¥oc
)(*);

59 *
	m°¨t_¨g
;

60 
	m°ack_size
;

61 *
	m°hªad
;

62 
±hªad_t
 
	m±hªad
;

63 
±hªad_t
 
	m¸ót‹
;

65 } 
	t°hªad_c‹e_t
;

68 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	g°hªad_c‹e_t
 &
	gc‹e
);

70 
°hªad_c‹e_öô
(
°hªad_c‹e_t
* 
t
,

71 (*
¥oc
)(*), *
¨g
,

72 
°ack_size
);

74 
	`°hªad_c‹e_exô
(
°hªad_c‹e_t
 *
t
, 
boﬁ
 &
joöed
);

	@src/sthread/sthread.cpp

55 
	~"w_deföes.h
"

78 
	~<w.h
>

80 
	~<w_debug.h
>

81 
	~<w_°ªam.h
>

82 
	~<c°dlib
>

83 
	~<sched.h
>

84 
	~<c°rög
>

86 #ifde‡
__SUNPRO_CC


87 
	~<sys/time.h
>

89 
	~<˘ime
>

92 
	~<sys/waô.h
>

93 
	~<√w
>

95 
	~<sys/°©.h
>

96 
	~<w_rußge.h
>

97 
	~"és.h
"

99 #ifde‡
__GNUC__


100 #¥agm®
im∂emíèti⁄
 "sthread.h"

103 
	~"°hªad.h
"

104 
	~"°hªad_°©s.h
"

105 
	~"°c‹e_±hªad.h
"

107 #ifde‡
PURIFY


108 
	~<purify.h
>

111 #ifde‡
EXPLICIT_TEMPLATE


112 
ãm∂©e
 
˛ass
 
	gw_li°_t
<
	g°hªad_t
, 
	gqueue_ba£d_lock_t
>;

113 
ãm∂©e
 
˛ass
 
	gw_li°_i
<
	g°hªad_t
, 
	gqueue_ba£d_lock_t
>;

114 
ãm∂©e
 
˛ass
 
	gw_des˚nd_li°_t
<
	g°hªad_t
, 
	gqueue_ba£d_lock_t
, sthªad_t::
¥i‹ôy_t
>;

115 
ãm∂©e
 
˛ass
 
	gw_keyed_li°_t
<
	g°hªad_t
, 
	gqueue_ba£d_lock_t
, sthªad_t::
¥i‹ôy_t
>;

118 
˛ass
 
°hªad_°©s
 
	gSthªadSèts
;

121 
	~"°_eöfo_gí.h
"

123 "C" 
dum±hªads
();

124 "C" 
thªad°©s
();

148 ˛as†
	c°hªad_öô_t
 : 
public
 
°hªad_ba£_t
 {

149 
public
:

150 
NORET
 
°hªad_öô_t
();

151 
do_öô
();

152 
	mNORET
 ~
°hªad_öô_t
();

153 
	m¥iv©e
:

154 
uöt4_t
 
öôülized
;

155 
w_±hªad_lock_t
 
	möô_muãx
;

158 
°hªad_öô_t
 
	g°hªad_öô
;

160 
	gw_ba£_t
::
uöt4_t
 
°hªad_öô_t
::
öôülized
 = 0;

161 
w_±hªad_lock_t
 
	g°hªad_öô_t
::
öô_muãx
;

162 
	gw_ba£_t
::
öt8_t
 
°hªad_t
::
max_os_fûe_size
;

164 
boﬁ
 
	g°hªad_t
::
	$isSèckOK
(const * , ) const

169  
åue
;

170 
	}
}

174 
	g°hªad_t
::
	$check_Æl_°acks
(c⁄° *
fûe
, 
löe
)

176 
°hªad_li°_i
 
	`i
(*
_˛ass_li°
);

177 
c‹ru±
 = 0;

179 
i
.
	`√xt
()) {

180 i‡(! 
i
.
	`cuº
()->
	`isSèckOK
(
fûe
, 
löe
))

181 
c‹ru±
++;

184 i‡(
c‹ru±
 > 0) {

185 
˚º
 << "°hªad_t::check_Æl: " << 
c‹ru±


186 << "Åhªad sècks, dõög" << 
ídl
;

187 
	`W_FATAL
(
fcINTERNAL
);

189 
	}
}

196 "C" 
	$°ackovîÊowed
(Ë{
	}
}

198 
boﬁ
 
°hªad_t
::
	$isSèckFømeOK
(
size_t
 
size
)

200 
boﬁ
 
ok
;

201 *
°ack_t›
 = &
ok
;

202 *
_°ack_t›
 = &
ok
 - 
size
;

204 
	`w_as£π1
(
this
->
_d™gî
 <Åhis->
_°¨t_‰ame
);

205 *
absﬁuã_bŸtom
 = (*)((*)
_°¨t_‰ame
 - 
_°ack_size
);

207 if–
°ack_t›
 < 
_d™gî
) {

208 if–
°ack_t›
 <
absﬁuã_bŸtom
) {

209 
	`Ârötf
(
°dîr
,

213 (Ë
size
, 
_°ack_t›
, 
absﬁuã_bŸtom
, 
_d™gî
, 
_°¨t_‰ame
,

214 (Ë
_°ack_size
);

216 
	`Ârötf
(
°dîr
,

220 
absﬁuã_bŸtom
, (Ë
size
, 
_°ack_t›
, 
_d™gî
, 
_°¨t_‰ame
,

221 (Ë
_°ack_size
);

223  
Ál£
;

226  
åue
;

227 
	}
}

238 
°hªad_t
* sthªad_t::
_maö_thªad
 = 0;

239 c⁄° 
	gw_ba£_t
::
uöt4_t
 
MAIN_THREAD_ID
(1);

240 
	gw_ba£_t
::
uöt4_t
 
°hªad_t
::
_√xt_id
 = 
MAIN_THREAD_ID
;

241 
°hªad_li°_t
* 
	g°hªad_t
::
_˛ass_li°
 = 0;

243 #ifde‡
LOCKHACK


244 
±hªad_muãx_t
 
	g°hªad_t
::
_˛ass_li°_lock
 = 
PTHREAD_MUTEX_INITIALIZER
;

246 
queue_ba£d_lock_t
 
	g°hªad_t
::
_˛ass_li°_lock
;

249 
°ime_t
 
	g°hªad_t
::
boŸ_time
 = stime_t::
now
();

257 
	g°hªad_t
* &°hªad_t::
	$me_lvÆ
() {

262 
__thªad
 
°hªad_t
* 
	`_me
(
NULL
);

263  
_me
;

264 
	}
}

274 
w_rc_t
 
	g°hªad_t
::
	$cﬁd_°¨tup
()

277 
_˛ass_li°
 = 
√w
 
	`°hªad_li°_t
(
	`W_LIST_ARG
(
°hªad_t
, 
_˛ass_lök
),

278 &
_˛ass_li°_lock
);

279 i‡(
_˛ass_li°
 == 0)

280 
	`W_FATAL
(
fcOUTOFMEMORY
);

283 
timevÆ
 
now
;

284 
	`gëtimeofday
(&
now
, 
NULL
);

287 ::
	`§™d
(
now
.
tv_u£c
);

292 
°hªad_maö_t
 *
maö
 = 
√w
 sthread_main_t;

293 i‡(!
maö
)

294 
	`W_FATAL
(
fcOUTOFMEMORY
);

295 
	`me_lvÆ
(Ë
_maö_thªad
 = 
maö
;

296 
	`W_COERCE
–
maö
->
	`f‹k
() );

298 i‡(
	`me
(Ë!
maö
)

299 
	`W_FATAL
(
°INTERNAL
);

301 #i‡
	`deföed
(
PURIFY
)

303 
	`purify_«me_thªad
(
	`me
()->
	`«me
());

306  
RCOK
;

307 
	}
}

316 
w_rc_t
 
	g°hªad_t
::
	$shutdown
()

318 i‡(
	`me
(Ë!
_maö_thªad
) {

319 
˚º
 << "°hªad_t::shutdown():ÇŸ maöÅhªad!" << 
ídl
;

320  
	`RC
(
°INTERNAL
);

323  
RCOK
;

324 
	}
}

335 
	g°hªad_maö_t
::
	$°hªad_maö_t
()

336 : 
	`°hªad_t
(
t_ªguœr
, "main_thread", 0)

342 
	}
}

352 
	g°hªad_maö_t
::
	$run
()

354 
	}
}

365 
w_rc_t
 
°hªad_t
::
	$£t_¥i‹ôy
(
¥i‹ôy_t
 
¥i‹ôy
)

367 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

368 
_¥i‹ôy
 = 
¥i‹ôy
;

371 i‡(
_¥i‹ôy
 <
mö_¥i‹ôy
) _priority = min_priority;

372 i‡(
_¥i‹ôy
 > 
max_¥i‹ôy
) _priority = max_priority;

374 i‡(
_°©us
 =
t_ªady
) {

375 
˚º
 << "sthread_t::set_priority() :- "

376 << "ˇ¬Ÿ ch™gê¥i‹ôy o‡ªadyÅhªad" << 
ídl
;

377 
	`W_FATAL
(
°INTERNAL
);

380  
RCOK
;

381 
	}
}

391 
	g°hªad_t
::
	$¶ìp
(
timeout_ö_ms
 
timeout
, c⁄° *
ªas⁄
)

393 
ªas⁄
 = (reason && *reason) ?Ñeason : "sleep";

400 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

401 
_¶ìpög
 = 
åue
;

402 (Ë
	`_block
(
timeout
, 
ªas⁄
, 
this
);

403 
_¶ìpög
 = 
Ál£
;

404 
	}
}

412 
	g°hªad_t
::
	$wakeup
()

414 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

415 if(
_¶ìpög
Ë
	`_unblock
(
°OK
);

416 
	}
}

424 
w_rc_t


425 
	g°hªad_t
::
	$joö
(
timeout_ö_ms
 )

427 
w_rc_t
 
rc
;

429 
	`CRITICAL_SECTION
(
cs
, 
_°¨t_ãrmö©e_lock
);

434 i‡(!
_f‹ked
) {

435 
rc
 = 
	`RC
(
°OS
);

438 
cs
.
	`exô
();

442 
	#TRACE_START_TERM
 0

	)

443 #i‡
TRACE_START_TERM


444 { 
w_o°r°ªam
 
o
;

445 
o
 << *
this
 << 
ídl
;

446 
	`Ârötf
(
°dîr
,

448 (Ë
	`±hªad_£lf
() ,

449 
	`«me
(), 
o
.
	`c_°r
()

451 
	`fÊush
(
°dîr
);

454 
	`°hªad_c‹e_exô
(
_c‹e
, 
_ãrmö©ed
);

456 #i‡
TRACE_START_TERM


457 { 
w_o°r°ªam
 
o
;

458 
o
 << *
this
 << 
ídl
;

459 
	`Ârötf
(
°dîr
,

461 (Ë
	`±hªad_£lf
() ,

462 
	`«me
(), 
o
.
	`c_°r
()

464 
	`fÊush
(
°dîr
);

466 
	`DBGTHRD
(<< "Joö o¿" << 
	`«me
() << " successful");

471  
rc
;

472 
	}
}

481 
w_rc_t
 
	g°hªad_t
::
	$f‹k
()

484 
°hªad_öô_t
::
	`do_öô
();

485 
	`CRITICAL_SECTION
(
cs
, 
_°¨t_ãrmö©e_lock
);

487 i‡(
_f‹ked
)

488  
	`RC
(
°OS
);

491 if(
this
 !
_maö_thªad
)

493 
	`±hªad_muãx_lock
(&
_˛ass_li°_lock
);

494 
_˛ass_li°
->
	`≠≥nd
(
this
);

495 
	`±hªad_muãx_u∆ock
(&
_˛ass_li°_lock
);

499 
_f‹ked
 = 
åue
;

500 if(
this
 =
_maö_thªad
) {

502 
	`CRITICAL_SECTION
(
cs_thªad
, 
_waô_lock
);

503 
_°©us
 = 
t_ru¬ög
;

506 
	`DO_PTHREAD
–
	`±hªad_c⁄d_sig«l
(
_°¨t_c⁄d
) );

510 { 
w_o°r°ªam
 
o
;

511 
o
 << *
this
 << 
ídl
;

512 
	`Ârötf
(
°dîr
, "me: %#lx Forked: %s : %s\n",

513 (Ë
	`±hªad_£lf
() ,

514 (c⁄° *)(
	`«me
()?name():"anonymous"),

515 
o
.
	`c_°r
()

517 
	`fÊush
(
°dîr
);

521  
RCOK
;

522 
	}
}

525 
	s__∫g_öô
 {

526 
uöt32_t
 
	t¨øy
[
w_ønd
::
R
];

527 
uöt32_t
 c⁄° 
	tc⁄°_¨øy
[
w_ønd
::
R
];

528 
¨øy
 
	m_w
;

530 
__∫g_öô
() {

531 
	mi
=0; i < 
	mw_ønd
::
R
; i++)

532 
	m_w
[
i
] = ::
ønd
();

534 
	mc⁄°_¨øy
 &
gë
(Ë{  
	m_w
; }

544 
	g°hªad_t
::
	$°hªad_t
(
¥i‹ôy_t
 
¥
,

545 c⁄° *
nm
,

546 
°ack_size
)

547 : 
	`°hªad_«med_ba£_t
(
nm
),

548 
	`u£r
(0),

549 
	`id
(
_√xt_id
++),

550 
	`_°¨t_ãrmö©e_lock
(
√w
 
±hªad_muãx_t
),

551 
	`_°¨t_c⁄d
(
√w
 
±hªad_c⁄d_t
),

552 
	`_¶ìpög
(
Ál£
),

553 
	`_f‹ked
(
Ál£
),

554 
	`_ãrmö©ed
(
Ál£
),

555 
	`_unblock_Êag
(
Ál£
),

556 
	`_c‹e
(0),

557 
	`_°©us
(
t_vúgö
),

558 
	`_¥i‹ôy
(
¥
),

559 
	`_∫g
(
	`__∫g_öô
().
	$gë
())

561 if(!
_°¨t_ãrmö©e_lock
 || !
_°¨t_c⁄d
 )

562 
	`W_FATAL
(
fcOUTOFMEMORY
);

564 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(
_°¨t_c⁄d
, 
NULL
));

565 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(
_°¨t_ãrmö©e_lock
, 
NULL
));

567 
_c‹e
 = 
√w
 
°hªad_c‹e_t
;

568 i‡(!
_c‹e
)

569 
	`W_FATAL
(
fcOUTOFMEMORY
);

570 
_c‹e
->
°hªad
 = (*)
this
;

576 i‡(
_¥i‹ôy
 > 
max_¥i‹ôy
)

577 
_¥i‹ôy
 = 
max_¥i‹ôy
;

578 i‡(
_¥i‹ôy
 <
mö_¥i‹ôy
)

579 
_¥i‹ôy
 = 
mö_¥i‹ôy
;

584 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_waô_lock
, 
NULL
));

585 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_waô_c⁄d
, 
NULL
));

597 i‡(
	`°hªad_c‹e_öô
(
_c‹e
, 
__°¨t
, 
this
, 
°ack_size
) == -1) {

598 
˚º
 << "°hªad_t: c™nŸ inôülizêthªad c‹e" << 
ídl
;

599 
	`W_FATAL
(
°INTERNAL
);

602 #i‡
TRACE_START_TERM


603 { 
w_o°r°ªam
 
o
;

604 
o
 << *
this
 << 
ídl
;

605 
	`Ârötf
(
°dîr
, "me: %#lx Constructed: %s : %s\n",

606 (Ë
	`±hªad_£lf
() ,

607 (c⁄° *)(
	`«me
()?name():"anonymous"),

608 
o
.
	`c_°r
()

610 
	`fÊush
(
°dîr
);

623 
	}
}

634 
	g°hªad_t
::~
	$°hªad_t
()

642 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

651 
	`w_as£π1
(
_°©us
 =
t_vúgö


652 || 
_°©us
 =
t_defun˘


653 || 
_°©us
 =
t_blocked


656 i‡(
_lök
.
	`membî_of
()) {

657 
	`W_FORM2
(
˚º
,("sthread_t(%#lx): \"%s\": destroyingáÅhread onáÜist!",

658 ()
this
, 
	`«me
()));

661 #i‡
TRACE_START_TERM


662 { 
w_o°r°ªam
 
o
;

663 
o
 << *
this
 << 
ídl
;

664 
	`Ârötf
(
°dîr
,

666 (Ë
	`±hªad_£lf
() ,

667 
	`«me
(), 
o
.
	`c_°r
()

669 
	`fÊush
(
°dîr
);

672 
	`°hªad_c‹e_exô
(
_c‹e
, 
_ãrmö©ed
);

674 
dñëe
 
_c‹e
;

675 
_c‹e
 = 0;

677 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(
_°¨t_c⁄d
));

678 
dñëe
 
_°¨t_c⁄d
;

679 
_°¨t_c⁄d
 = 0;

681 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(
_°¨t_ãrmö©e_lock
));

682 
dñëe
 
_°¨t_ãrmö©e_lock
;

683 
_°¨t_ãrmö©e_lock
 = 0;

685 
	}
}

687 #i‚de‡
PTHREAD_STACK_MIN


691 
size_t
 
	$gë_±hªad_°ack_mö
()

693 
size_t
 
	`gŸô
(0);

694 if(!
gŸô
) {

695 
gŸô
 = 
	`sysc⁄f
(
_SC_THREAD_STACK_MIN
);

696 if(!
gŸô
) {

697 c⁄° *
îrmsg
 =

700 
	`W_FATAL_MSG
(
fcINTERNAL
, << 
îrmsg
);

702 
	`w_as£π1
(
gŸô
 > 0);

704  
gŸô
;

705 
	}
}

711 
	g°hªad_t
::
	$__°¨t
(*
¨g
)

713 
°hªad_t
* 
t
 = (°hªad_t*Ë
¨g
;

714 
	`me_lvÆ
(Ë
t
;

715 
t
->
_°¨t_‰ame
 = &t;

717 #i‚de‡
PTHREAD_STACK_MIN


718 
size_t
 
PTHREAD_STACK_MIN
 = 
	`gë_±hªad_°ack_mö
();

721 #i‡
HAVE_PTHREAD_ATTR_GETSTACKSIZE


722 
±hªad_©å_t
 
©å
;

723 
size_t
 
sz
=0;

724 
e
 = 
	`±hªad_©å_öô
(&
©å
);

725 if(
e
) {

726 
	`Ârötf
(
°dîr
,"C™nŸ inôÖthªad_©åÉ=%d\n", 
e
);

727 ::
	`exô
(1);

731 
e
 = 
	`±hªad_©å_gë°acksize
–&
©å
, &
sz
);

732 if(
e
 || 
sz
==0) {

733 #i‡
HAVE_PTHREAD_ATTR_GETSTACK


734 *
	`voidp
(
NULL
);

735 
e
 = 
	`±hªad_©å_gë°ack
–&
©å
, &
voidp
, &
sz
);

736 if(
e
 || 
sz
 == 0)

739 #i‡
W_DEBUG_LEVEL
 > 2

740 
	`Ârötf
(
°dîr
,"Cannot getÖthread stack sizeÉ=%d, sz=%lld\n",

741 
e
, ()
sz
);

743 
sz
 = 
PTHREAD_STACK_MIN
;

747 
	#GUARD
 8192*4

	)

748 if(
sz
 < 
GUARD
) {

750 #i‚de‡
PTHREAD_STACK_MIN_SUBSTITUTE


754 
	#PTHREAD_STACK_MIN_SUBSTITUTE
 0x100000

	)

756 
sz
 = 
PTHREAD_STACK_MIN_SUBSTITUTE
;

757 #i‡
W_DEBUG_LEVEL
 > 2

758 
	`Ârötf
(
°dîr
,"usög %ŒdÅemp‹¨ûy\n", ()
sz
);

761 
t
->
_°ack_size
 = 
sz
;

767 
sz
 -
GUARD
;

768 
t
->
_d™gî
 = (*)((*È->
_°¨t_‰ame
 - 
sz
);

771 
	`w_as£π1
(
t
->
_d™gî
 <Å->
_°¨t_‰ame
);

772 
	`w_as£π1
(
t
->
_°ack_size
 > 0);

774 
t
->
	`_°¨t
();

775 
	}
}

783 
	g°hªad_t
::
	$_°¨t
()

785 
és_åicks
::
és_m™agî
::
	`thªad_öô
();

786 
	`w_as£π1
(
	`me
(Ë=
this
);

789 
	`w_as£π1
(
	`isSèckFømeOK
(0));

791 
	`CRITICAL_SECTION
(
cs
, 
_°¨t_ãrmö©e_lock
);

792 !
_f‹ked
) {

793 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(
_°¨t_c⁄d
, 
_°¨t_ãrmö©e_lock
));

795 
	`CRITICAL_SECTION
(
cs_thªad
, 
_waô_lock
);

796 
_°©us
 = 
t_ru¬ög
;

799 #i‡
	`deföed
(
PURIFY
)

802 
	`purify_«me_thªad
(
	`«me
());

807 
	`w_as£π1
(
	`me
(Ë=
this
);

808 #ifde‡
STHREAD_CXX_EXCEPTION


812 
åy
 {

813 
	`bef‹e_run
();

814 
	`run
();

815 
	`a·î_run
();

817 
	`ˇtch
 (...) {

818 
˚º
 << 
ídl


819 << "°hªad_t(id = " << 
id
 << "Çamê" << 
	`«me
()

821 << 
ídl


822 << 
ídl
;

825 
	`bef‹e_run
();

826 
	`run
();

827 
	`a·î_run
();

833 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

834 
	`w_as£π3
(
	`me
(Ë=
this
);

835 
_°©us
 = 
t_defun˘
;

836 
_lök
.
	`dëach
();

839 
	`±hªad_muãx_lock
(&
_˛ass_li°_lock
);

840 
_˛ass_lök
.
	`dëach
();

841 
	`±hªad_muãx_u∆ock
(&
_˛ass_li°_lock
);

844 
	`w_as£π3
(
this
 =
	`me
());

847 
	`w_as£π1
(
_°©us
 =
t_defun˘
);

849 
	`DBGTHRD
(<< 
	`«me
() << "Åerminating");

850 
és_åicks
::
és_m™agî
::
	`thªad_föi
();

851 
	`DBGTHRD
(<< 
	`«me
() << "Öthread_exiting");

852 
	`±hªad_exô
(0);

855 
	`W_FATAL
(
°INTERNAL
);

856 
	}
}

870 
w_rc_t


871 
	g°hªad_t
::
	$block
(

872 
±hªad_muãx_t
 &
lock
,

873 
timeout_ö_ms
 
timeout
,

874 
°hªad_li°_t
* 
li°
,

875 c⁄° * c⁄° 
ˇŒî
,

876 c⁄° * 
id
)

878 
w_rc_t
::
îrcode_t
 
r˚
 = 
	`_block
(&
lock
, 
timeout
, 
li°
, 
ˇŒî
, 
id
);

879 if(
r˚
Ë 
	`RC
(rce);

880  
RCOK
;

881 
	}
}

883 
	gw_rc_t
::
îrcode_t


884 
°hªad_t
::
	$block
(
öt4_t
 
timeout
 )

886  
	`_block
(
NULL
, 
timeout
);

887 
	}
}

889 
	gw_rc_t
::
îrcode_t


890 
°hªad_t
::
	$_block
(

891 
±hªad_muãx_t
 *
lock
,

892 
timeout_ö_ms
 
timeout
,

893 
°hªad_li°_t
* 
li°
,

894 c⁄° * c⁄° 
ˇŒî
,

895 c⁄° * 
id
)

897 
w_rc_t
::
îrcode_t
 
	`r˚
(
°OK
);

898 
°hªad_t
* 
£lf
 = 
	`me
();

900 
	`CRITICAL_SECTION
(
cs
, 
£lf
->
_waô_lock
);

905 
	`w_as£π3
(
£lf
->
_lök
.
	`membî_of
() == 0);

906 i‡(
li°
) {

907 
li°
->
	`put_ö_‹dî
(
£lf
);

910 if(
lock
) {

912 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(
lock
));

914 
r˚
 = 
	`_block
(
timeout
, 
ˇŒî
, 
id
);

916 if(
r˚
 =
°TIMEOUT
) {

917 if(
lock
) {

918 
	`CRITICAL_SECTION
(
ouãr_cs
, &
lock
);

920 
	`CRITICAL_SECTION
(
cs
, 
£lf
->
_waô_lock
);

921 
£lf
->
_lök
.
	`dëach
();

923 
	`CRITICAL_SECTION
(
cs
, 
£lf
->
_waô_lock
);

924 
£lf
->
_lök
.
	`dëach
();

928  
r˚
;

929 
	}
}

931 
	g°hªad_t
::
	$timeout_to_time•ec
(
timeout_ö_ms
 
timeout
, 
time•ec
 &
whí
)

933 
	`w_as£π1
(
timeout
 !
WAIT_IMMEDIATE
);

934 
	`w_as£π1
(
timeout
 !
°hªad_t
::
WAIT_FOREVER
);

935 if(
timeout
 > 0) {

936 
timevÆ
 
now
;

939 
	`gëtimeofday
(&
now
, 
NULL
);

940 
whí
.
tv_£c
 = 
now
.tv_£¯+ 
timeout
/1000;

941 
whí
.
tv_n£c
 = 
now
.
tv_u£c
*1000 + 100000*(
timeout
%1000);

942 if(
whí
.
tv_n£c
 >= 1000*1000*1000) {

943 
whí
.
tv_£c
++;

944 
whí
.
tv_n£c
 -= 1000*1000*1000;

947 
	}
}

949 
	gw_rc_t
::
îrcode_t


950 
°hªad_t
::
	$_block
(

951 
timeout_ö_ms
 
timeout
,

962 
°hªad_t
* 
£lf
 = 
	`me
();

963 
	`w_as£π1
(
timeout
 !
WAIT_IMMEDIATE
);

968 
°©us_t
 
ﬁd_°©us
 = 
£lf
->
_°©us
;

969 
£lf
->
_°©us
 = 
t_blocked
;

971 
îr‹
 = 0;

972 
£lf
->
_unblock_Êag
 = 
Ál£
;

973 if(
timeout
 > 0) {

974 
time•ec
 
whí
;

975 
	`timeout_to_time•ec
(
timeout
, 
whí
);

980 !
îr‹
 && !
£lf
->
_unblock_Êag
) {

981 
îr‹
 = 
	`±hªad_c⁄d_timedwaô
(&
£lf
->
_waô_c⁄d
,

982 &
£lf
->
_waô_lock
, &
whí
);

983 
	`w_as£π1
(
îr‹
 =
ETIMEDOUT
 ||Érror == 0);

985 if(!
îr‹
) ;

990 
	`w_as£π1
(
timeout
 =
°hªad_t
::
WAIT_FOREVER
);

994 !
îr‹
 && !
£lf
->
_unblock_Êag
)

996 
îr‹
 = 
	`±hªad_c⁄d_waô
(&
£lf
->
_waô_c⁄d
, &£lf->
_waô_lock
);

999 
îr‹
) {

1000 
ETIMEDOUT
:

1002 
	`W_COERCE
(
£lf
->
	`_unblock
(
°TIMEOUT
));

1009 
£lf
->
_°©us
 = 
ﬁd_°©us
;

1010 #ifde‡
SM_THREAD_SAFE_ERRORS


1011 if(
£lf
->
_rc
.
	`is_îr‹
()) {

1012 
£lf
->
_rc
->
	`˛aim
();

1013 
w_rc_t
 
	`rc
(
£lf
->
_r˚
);

1014 
£lf
->
_rc
 = 
RCOK
;

1015  
rc
;

1017  
RCOK
;

1019  
£lf
->
_r˚
;

1022 
£lf
->
_°©us
 = 
ﬁd_°©us
;

1023  
°hªad_t
::
°OS
;

1025 
	}
}

1036 
w_rc_t


1037 
	g°hªad_t
::
	$unblock
(
w_rc_t
::
îrcode_t
 
e
)

1039 
	`CRITICAL_SECTION
(
cs
, 
_waô_lock
);

1046 
_lök
.
	`dëach
();

1047  
	`_unblock
(
e
);

1049 
	}
}

1052 
w_rc_t


1053 
	g°hªad_t
::
	$_unblock
(
w_rc_t
::
îrcode_t
 
e
)

1055 
_°©us
 = 
t_ªady
;

1060 i‡(
e
)

1061 
_r˚
 = 
e
;

1063 
_r˚
 = 
°OK
;

1068 
_unblock_Êag
 = 
åue
;

1069 
	`memb¨_¥odu˚r
();

1070 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_waô_c⁄d
));

1071 
_°©us
 = 
t_ru¬ög
;

1073  
RCOK
;

1074 
	}
}

1087 
	g°hªad_t
::
	$yõld
()

1089 
	#USE_YIELD


	)

1090 #ifde‡
USE_YIELD


1091 
°hªad_t
* 
£lf
 = 
	`me
();

1092 
	`CRITICAL_SECTION
(
cs
, 
£lf
->
_waô_lock
);

1093 
	`w_as£π3
(
£lf
->
_°©us
 =
t_ru¬ög
);

1094 
£lf
->
_°©us
 = 
t_ªady
;

1095 
cs
.
	`∑u£
();

1096 
	`sched_yõld
();

1097 
cs
.
	`ªsume
();

1098 
£lf
->
_°©us
 = 
t_ru¬ög
;

1100 
	}
}

1103 
	g°hªad_t
::
	$dum∑Œ
(c⁄° *
°r
, 
o°ªam
 &
o
)

1105 i‡(
°r
)

1106 
o
 << 
°r
 << ": " << 
ídl
;

1108 
	`dum∑Œ
(
o
);

1109 
	}
}

1111 
	g°hªad_t
::
	$dum∑Œ
(
o°ªam
 &
o
)

1116 
	`±hªad_muãx_lock
(&
_˛ass_li°_lock
);

1117 
°hªad_li°_i
 
	`i
(*
_˛ass_li°
);

1119 
i
.
	`√xt
()) {

1120 
o
 << "******* ";

1121 i‡(
	`me
(Ë=
i
.
	`cuº
())

1122 
o
 << " --->ME<---- ";

1123 
o
 << 
ídl
;

1125 
i
.
	`cuº
()->
	`_dump
(
o
);

1127 
	`±hªad_muãx_u∆ock
(&
_˛ass_li°_lock
);

1128 
	}
}

1132 
	g°hªad_t
::
	$_dump
(
o°ªam
 &
o
) const

1134 
o
 << *
this
 << 
ídl
;

1135 
	}
}

1142 
	$¥öt_time
(
o°ªam
 &
o
, c⁄° 
söãrvÆ_t
 &
ªÆ
,

1143 c⁄° 
söãrvÆ_t
 &
u£r
, c⁄° söãrvÆ_à&
kî√l
)

1145 
söãrvÆ_t
 
	`tŸÆ
(
u£r
 + 
kî√l
);

1146 
p˝u
 = (()
tŸÆ
 / ()
ªÆ
) * 100.0;

1147 
p˝u2
 = (()
u£r
 / ()
ªÆ
) * 100.0;

1149 
o
 << "\t" << "ªÆ: " << 
ªÆ


1150 << 
ídl
;

1151 
o
 << "\tcpu:"

1152 << " kî√l: " << 
kî√l


1153 << " u£r: " << 
u£r


1154 << "ÅŸÆ: " << 
tŸÆ


1155 << 
ídl
;

1156 
o
 << "\t%CPU:"

1157 << " " << 
	`£çªcisi⁄
(3Ë<< 
p˝u


1158 << " %u£r: " << 
	`£çªcisi⁄
(2Ë<< 
p˝u2
;

1159 
o


1160 << 
ídl
;

1161 
	}
}

1163 
	g°hªad_t
::
	$dump_°©s
(
o°ªam
 &
o
)

1165 
o
 << 
SthªadSèts
;

1170 
rußge
 
ru
;

1171 
n
;

1173 
°ime_t
 
	`now
(stime_t::now());

1174 
n
 = 
	`gërußge
(
RUSAGE_SELF
, &
ru
);

1175 i‡(
n
 == -1) {

1176 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

1177 
˚º
 << "gërußge(ËÁûs:" << 
ídl
 << 
e
 <<Éndl;

1181 
söãrvÆ_t
 
	`ªÆ
(
now
 - 
boŸ_time
);

1182 
söãrvÆ_t
 
	`kî√l
(
ru
.
ru_°ime
);

1183 
söãrvÆ_t
 
	`u£r
(
ru
.
ru_utime
);

1188 
söãrvÆ_t
 
œ°_ªÆ
;

1189 
söãrvÆ_t
 
œ°_kî√l
;

1190 
söãrvÆ_t
 
œ°_u£r
;

1191 
boﬁ
 
œ°_vÆid
 = 
Ál£
;

1193 
o
 << "TIME:" << 
ídl
;

1194 
	`¥öt_time
(
o
, 
ªÆ
, 
u£r
, 
kî√l
);

1195 i‡(
œ°_vÆid
) {

1196 
söãrvÆ_t
 
	`r
(
ªÆ
 - 
œ°_ªÆ
);

1197 
söãrvÆ_t
 
	`u
(
u£r
 - 
œ°_u£r
);

1198 
söãrvÆ_t
 
	`k
(
kî√l
 - 
œ°_kî√l
);

1199 
o
 << "RECENT:" << 
ídl
;

1200 
	`¥öt_time
(
o
, 
r
, 
u
, 
k
);

1203 
œ°_vÆid
 = 
åue
;

1205 
œ°_kî√l
 = 
kî√l
;

1206 
œ°_u£r
 = 
u£r
;

1207 
œ°_ªÆ
 = 
ªÆ
;

1209 
o
 << 
ídl
;

1210 
	}
}

1212 
	g°hªad_t
::
	$ª£t_°©s
()

1214 
SthªadSèts
.
	`˛ór
();

1215 
	}
}

1218 c⁄° *
	g°hªad_t
::
°©us_°rögs
[] = {

1227 c⁄° *
	g°hªad_t
::
¥i‹ôy_°rögs
[]= {

1235 
	go°ªam
& 
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	g°hªad_t
 &
	gt
)

1237  
	gt
.
¥öt
(
o
);

1246 
	go°ªam
 &
	g°hªad_t
::
	$¥öt
(
o°ªam
 &
o
) const

1248 
o
 << "thªad id = " << 
id
 ;

1250 i‡(
	`«me
()) {

1251 
o
 << ",Çamê" << 
	`«me
() ?Çame() : "anonymous";

1254 
o


1255 << ",ádd∏" << (*Ë
this


1256 << ", c‹ê" << (*Ë
_c‹e
 << 
ídl
;

1257 
o


1258 << "¥i‹ôy = " << 
°hªad_t
::
¥i‹ôy_°rögs
[
	`¥i‹ôy
()]

1259 << ", sètu†" << 
°hªad_t
::
°©us_°rögs
[
	`°©us
()];

1260 
o
 << 
ídl
;

1262 i‡(
u£r
)

1263 
o
 << "u£∏" << 
u£r
 << 
ídl
;

1265 i‡((
	`°©us
(Ë!
t_defun˘
Ë&& !
	`isSèckOK
(
__FILE__
,
__LINE__
))

1267 
˚º
 << "*** w¨nög: Thªad sèck ovîÊow ***" << 
ídl
;

1270  
o
;

1271 
	}
}

1282 
	g°hªad_t
::
	$f‹_óch_thªad
(
ThªadFunc
& 
f
)

1287 
	`±hªad_muãx_lock
(&
_˛ass_li°_lock
);

1289 
°hªad_li°_i
 
	`i
(*
_˛ass_li°
);

1291 
i
.
	`√xt
()) {

1292 
	`f
(*
i
.
	`cuº
());

1294 
	`±hªad_muãx_u∆ock
(&
_˛ass_li°_lock
);

1295 
	}
}

1297 
	$¥öt_timeout
(
o°ªam
& 
o
, c⁄° 
°hªad_ba£_t
::
timeout_ö_ms
 
timeout
)

1299 i‡(
timeout
 > 0) {

1300 
o
 << 
timeout
;

1301 } i‡(
timeout
 >= -5) {

1302 c⁄° * 
«mes
[] = {"WAIT_IMMEDIATE",

1308 
o
 << 
«mes
[-
timeout
];

1310 
o
 << "UNKNOWN_TIMEOUT_VALUE(" << 
timeout
 << ")";

1312 
	}
}

1314 
	gocc_rwlock
::
	$occ_rwlock
()

1315 : 
	$_a˘ive_cou¡
(0)

1317 
_wrôe_lock
.
_lock
 = 
_ªad_lock
._lock = 
this
;

1318 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_ªad_wrôe_muãx
, 
NULL
));

1319 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_ªad_c⁄d
, 
NULL
));

1320 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_wrôe_c⁄d
, 
NULL
));

1321 
	}
}

1323 
	gocc_rwlock
::~
	$occ_rwlock
()

1325 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
_ªad_wrôe_muãx
));

1326 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_ªad_c⁄d
));

1327 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
_wrôe_c⁄d
));

1328 
_wrôe_lock
.
_lock
 = 
_ªad_lock
._lock = 
NULL
;

1329 
	}
}

1331 
	gocc_rwlock
::
	$ªÀa£_ªad
()

1333 
	`memb¨_exô
();

1334 
	`w_as£π1
(
READER
 <(Ë
_a˘ive_cou¡
);

1335 
cou¡
 = 
	`©omic_add_32_nv
(&
_a˘ive_cou¡
, -
READER
);

1336 if(
cou¡
 =
WRITER
) {

1338 
	`CRITICAL_SECTION
(
cs
, 
_ªad_wrôe_muãx
);

1339 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_wrôe_c⁄d
));

1341 
	}
}

1343 
	gocc_rwlock
::
	$ªÀa£_wrôe
()

1345 
	`w_as£π9
(
_a˘ive_cou¡
 & 
WRITER
);

1346 
	`CRITICAL_SECTION
(
cs
, 
_ªad_wrôe_muãx
);

1347 
	`©omic_add_32
(&
_a˘ive_cou¡
, -
WRITER
);

1348 
	`DO_PTHREAD
(
	`±hªad_c⁄d_brﬂdˇ°
(&
_ªad_c⁄d
));

1349 
	}
}

1353 
	g°hªad_«me_t
::
	$°hªad_«me_t
()

1355 
	`mem£t
(
_«me
, '\0', (_name));

1356 
	}
}

1358 
	g°hªad_«me_t
::~
	$°hªad_«me_t
()

1360 
	}
}

1363 
°hªad_«me_t
::
	$ª«me
(

1366 c⁄° * 
n1
,

1367 c⁄° * 
n2
,

1368 c⁄° * 
n3
)

1370 c⁄° 
sz
 = (
_«me
) - 1;

1371 
size_t
 
Àn
 = 0;

1372 
_«me
[0] = '\0';

1373 i‡(
n1
) {

1374 #i‡
W_DEBUG_LEVEL
 > 2

1375 
Àn
 = 
	`°æí
(
n1
);

1376 if(
n2
Ë
Àn
 +
	`°æí
(n2);

1377 if(
n3
Ë
Àn
 +
	`°æí
(n3);

1378 
Àn
++;

1379 if(
Àn
>(
_«me
)) {

1380 
˚º
 << "WARNING--ÇameÅooÜong for sthread_named_t: "

1381 << 
n1
 << 
n2
 << 
n3
;

1386 
	`°∫˝y
(
_«me
, 
n1
, 
sz
);

1387 
Àn
 = 
	`°æí
(
_«me
);

1388 i‡(
n2
 && ()
Àn
 < 
sz
) {

1389 
	`°∫ˇt
(
_«me
, 
n2
, 
sz
 - 
Àn
);

1390 
Àn
 = 
	`°æí
(
_«me
);

1391 i‡(
n3
 && ()
Àn
 < 
sz
)

1392 
	`°∫ˇt
(
_«me
, 
n3
, 
sz
 - 
Àn
);

1395 
_«me
[
sz
] = '\0';

1397 
	}
}

1400 
	g°hªad_«med_ba£_t
::
	$u¬ame
()

1402 
	`ª«me
(0,0,0);

1403 
	}
}

1406 
	g°hªad_«med_ba£_t
::
	$ª«me
(

1409 c⁄° * 
n1
,

1410 c⁄° * 
n2
,

1411 c⁄° * 
n3
)

1413 
_«me
.
	`ª«me
(
n1
,
n2
,
n3
);

1414 
	}
}

1416 
	g°hªad_«med_ba£_t
::~
	$°hªad_«med_ba£_t
()

1418 
	`u¬ame
();

1419 
	}
}

1425 #i‡
LATCH_CAN_BLOCK_LONG


1433 
	#NOLOCK
 (
queue_ba£d_lock_t
 *)
NULL


	)

1435 
NORET


1436 
	g°hªad_¥i‹ôy_li°_t
::
	$°hªad_¥i‹ôy_li°_t
()

1437 : 
w_des˚nd_li°_t
<
°hªad_t
, 
queue_ba£d_lock_t
, sthªad_t::
¥i‹ôy_t
>

1438 (
	`W_KEYED_ARG
(
°hªad_t
, 
_¥i‹ôy
, 
_lök
), 
NOLOCK
 )

1440 
	}
}

1444 
smthªad_t
* 
	g°hªad_t
::
	$dy«mic_ˇ°_to_smthªad
()

1447 
	}
}

1450 c⁄° 
smthªad_t
* 
	g°hªad_t
::
	$dy«mic_ˇ°_to_c⁄°_smthªad
() const

1453 
	}
}

1464 
	$dum±hªads
()

1466 
°hªad_t
::
	`dum∑Œ
("dum±hªads()", 
˚º
);

1467 
°hªad_t
::
	`dump_io
(
˚º
);

1469 
	}
}

1471 
	$thªad°©s
()

1473 
°hªad_t
::
	`dump_°©s
(
˚º
);

1474 
	}
}

1478 
	$gë_œrge_fûe_size
(
w_ba£_t
::
öt8_t
 &
max_os_fûe_size
)

1484 
os_æimô_t
 
r
;

1485 
n
;

1487 
n
 = 
	`os_gëæimô
(
RLIMIT_FSIZE
, &
r
);

1488 i‡(
n
 == -1) {

1489 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

1490 
˚º
 << "gëæimô(RLIMIT_FSIZE):" << 
ídl
 << 
e
 <<Éndl;

1491 
	`W_COERCE
(
e
);

1493 i‡(
r
.
æim_cur
 <Ñ.
æim_max
) {

1494 
r
.
æim_cur
 =Ñ.
æim_max
;

1495 
n
 = 
	`os_£ålimô
(
RLIMIT_FSIZE
, &
r
);

1496 i‡(
n
 == -1) {

1497 
w_rc_t
 
e
 = 
	`RC
(
fcOS
);

1498 
˚º
 << "£ålimô(RLIMIT_FSIZE, " << 
r
.
æim_cur


1499 << "):" << 
ídl
 << 
e
 <<Éndl;

1500 
˚º
 << 
e
 << 
ídl
;

1501 
	`W_FATAL
(
fcINTERNAL
);

1504 
max_os_fûe_size
 = 
w_ba£_t
::
	`öt8_t
(
r
.
æim_cur
);

1510 i‡(
max_os_fûe_size
 < 0) {

1511 
max_os_fûe_size
 = 
w_ba£_t
::
	`uöt8_t
(
r
.
æim_cur
) >> 1;

1512 
	`w_as£π1
–
max_os_fûe_size
 > 0);

1514 
	}
}

1529 
	~"°hªad_vèbÀ_íum.h
"

1534 
	g°hªad_t
::
	$öôülize_°hªads_∑ckage
()

1535 { 
°hªad_öô_t
::
	`do_öô
(); 
	}
}

1537 
NORET


1538 
	g°hªad_öô_t
::
	$°hªad_öô_t
(Ë{ 
	}
}

1541 
°hªad_öô_t
::
	$do_öô
()

1544 i‡(
°hªad_öô_t
::
öôülized
 == 0)

1546 
	`CRITICAL_SECTION
(
cs
, 
öô_muãx
);

1549 i‡(
°hªad_öô_t
::
öôülized
 == 0)

1551 
°hªad_öô_t
::
öôülized
 ++;

1553 
	`gë_œrge_fûe_size
(
°hªad_t
::
max_os_fûe_size
);

1558 i‡(! 
w_îr‹_t
::
	`ö£π
(

1560 
îr‹_öfo
,

1561 (
îr‹_öfo
) / (error_info[0]))) {

1563 
˚º
 << "sthread_init_t::do_init: "

1564 << " c™nŸÑegi°îÉº‹ code" << 
ídl
;

1566 
	`W_FATAL
(
°INTERNAL
);

1569 
	`W_COERCE
(
°hªad_t
::
	`cﬁd_°¨tup
());

1572 
	}
}

1583 
NORET


1584 
	g°hªad_öô_t
::~
	$°hªad_öô_t
()

1586 
	`CRITICAL_SECTION
(
cs
, 
öô_muãx
);

1590 
	`w_as£π1
 (
°hªad_öô_t
::
öôülized
 <= 1) ;

1591 i‡(--
°hªad_öô_t
::
öôülized
 == 0)

1594 
	`W_COERCE
(
°hªad_t
::
	`shutdown
());

1600 
°hªad_t
::
_maö_thªad
->
_°©us
 = sthªad_t::
t_defun˘
;

1602 
dñëe
 
°hªad_t
::
_maö_thªad
;

1603 
°hªad_t
::
_maö_thªad
 = 0;

1605 
dñëe
 
°hªad_t
::
_˛ass_li°
;

1606 
°hªad_t
::
_˛ass_li°
 = 0;

1608 
	}
}

1610 
±hªad_t
 
	g°hªad_t
::
	$my£lf
(Ë{  
_c‹e
->
±hªad
; 
	}
}

	@src/sthread/sthread.h

86 #i‚de‡
STHREAD_H


87 
	#STHREAD_H


	)

89 
	~"w_deföes.h
"

90 
	~"w_rc.h
"

91 
	~"©omic_ãm∂©es.h
"

92 
	~"°ime.h
"

93 
	~"gëhπime.h
"

94 
	~<vèbÀ.h
>

95 
	~<w_li°.h
>

96 
	~"w_ønd.h
"

99 
	~<±hªad.h
>

101 
˛ass
 
	g°hªad_t
;

102 
˛ass
 
	gsmthªad_t
;

105 #ifde‡
__GNUC__


106 #¥agm®
öãrÁ˚


109 #i‚de‡
SDISK_H


110 
	~<sdisk.h
>

113 
	#LOCKHACK


	)

115 
˛ass
 
	gvèbÀ_row_t
;

116 
˛ass
 
	gvèbÀ_t
;

118 
	g°hªad_c‹e_t
;

120 "C" 
dum±hªads
();

125 ˛as†
	c°hªad_ba£_t
 : 
public
 
w_ba£_t
 {

126 
public
:

128 
	tw_thªad_id_t
;

129 
w_thªad_id_t
 
	tid_t
;

159 
	etimeout_t
 {

160 
	mWAIT_IMMEDIATE
 = 0,

161 
	mWAIT_FOREVER
 = -1,

162 
	mWAIT_SPECIFIED_BY_THREAD
 = -4,

163 
	mWAIT_SPECIFIED_BY_XCT
 = -5,

164 
	mWAIT_NOT_USED
 = -6

176 
öt4_t
 
	ttimeout_ö_ms
;

179 c⁄° 
	gw_îr‹_t
::
öfo_t
 
îr‹_öfo
[];

180 
öô_îr‹codes
();

182 
	~"°_îr‹_íum_gí.h
"

185 
	g°OS
 = 
fcOS
,

186 
	g°INTERNAL
 = 
fcINTERNAL
,

187 
	g°NOTIMPLEMENTED
 = 
fcNOTIMPLEMENTED


191 
	gsdisk_ba£_t
::
	tfûeoff_t
 fileoff_t;

192 
	gsdisk_ba£_t
::
	tfûe°©_t
 filestat_t;

193 
	gsdisk_ba£_t
::
	tiovec_t
 iovec_t;

197 íum { 
	giovec_max
 = 8 };

200 
	gOPEN_RDWR
 = 
sdisk_ba£_t
::
OPEN_RDWR
,

201 
	gOPEN_RDONLY
 = 
sdisk_ba£_t
::
OPEN_RDONLY
,

202 
	gOPEN_WRONLY
 = 
sdisk_ba£_t
::
OPEN_WRONLY
,

204 
	gOPEN_SYNC
 = 
sdisk_ba£_t
::
OPEN_SYNC
,

205 
	gOPEN_TRUNC
 = 
sdisk_ba£_t
::
OPEN_TRUNC
,

206 
	gOPEN_CREATE
 = 
sdisk_ba£_t
::
OPEN_CREATE
,

207 
	gOPEN_EXCL
 = 
sdisk_ba£_t
::
OPEN_EXCL
,

208 
	gOPEN_APPEND
 = 
sdisk_ba£_t
::
OPEN_APPEND
,

209 
	gOPEN_RAW
 = 
sdisk_ba£_t
::
OPEN_RAW


212 
	gSEEK_AT_SET
 = 
sdisk_ba£_t
::
SEEK_AT_SET
,

213 
	gSEEK_AT_CUR
 = 
sdisk_ba£_t
::
SEEK_AT_CUR
,

214 
	gSEEK_AT_END
 = 
sdisk_ba£_t
::
SEEK_AT_END


220 ˛as†
	c°hªad_«me_t
 {

221 
	mpublic
:

222 íum { 
NAME_ARRAY
 = 64 };

224 
	g_«me
[
NAME_ARRAY
];

226 
°hªad_«me_t
();

227 ~
°hªad_«me_t
();

229 
ª«me
(c⁄° *
n1
, c⁄° *
n2
=0, c⁄° *
n3
=0);

232 ˛as†
	c°hªad_«med_ba£_t
: 
public
 
°hªad_ba£_t


234 
public
:

235 
NORET
 
°hªad_«med_ba£_t
(

236 c⁄° * 
n1
 = 0,

237 c⁄° * 
n2
 = 0,

238 c⁄° * 
n3
 = 0);

239 
	mNORET
 ~
°hªad_«med_ba£_t
();

241 
ª«me
(

242 c⁄° * 
n1
,

243 c⁄° * 
n2
 = 0,

244 c⁄° * 
n3
 = 0);

246 c⁄° * 
	$«me
() const;

247 
	`u¬ame
();

249 
¥iv©e
:

250 
°hªad_«me_t
 
_«me
;

253 
ölöe
 
NORET


254 
°hªad_«med_ba£_t
::
	$°hªad_«med_ba£_t
(

255 c⁄° * 
n1
,

256 c⁄° * 
n2
,

257 c⁄° * 
n3
)

259 
	`ª«me
(
n1
, 
n2
, 
n3
);

261 
	}
}

263 
ölöe
 const *

264 
	g°hªad_«med_ba£_t
::
	$«me
() const

266  
_«me
._name;

267 
	}
}

269 
˛ass
 
	g°hªad_maö_t
;

277 ˛as†
	cThªadFunc


279 
	mpublic
:

280 
vútuÆ
 
	$›î©‹
()(c⁄° 
°hªad_t
& 
thªad
) = 0;

281 
vútuÆ
 
NORET
 ~
	$ThªadFunc
() {}

282 
	}
};

285 
˛ass
 
	g°hªad_öô_t
;

286 
	#LATCH_CAN_BLOCK_LONG
 0

	)

287 #i‡
LATCH_CAN_BLOCK_LONG


288 
˛ass
 
	g°hªad_¥i‹ôy_li°_t
;

290 
˛ass
 
	g°hªad_maö_t
;

294 
	~"os_öãrÁ˚.h
"

310 
	sèès_lock
 {

312 íum { 
	mNOBODY
=0 };

314 
±hªad_t
 
	mh™dÀ
;

315 #unde‡
CASFUNC


316 #i‡
SIZEOF_PTHREAD_T
==4

317 
	#CASFUNC
 
©omic_ˇs_32


	)

318 
	mbôs
;

319 #ñi‡
SIZEOF_PTHREAD_T
==8

320 
	#CASFUNC
 
©omic_ˇs_64


	)

321 
uöt64_t
 
	mbôs
;

322 #ñi‡
SIZEOF_PTHREAD_T
==0

323 #îr‹ 
C⁄figuøti⁄
 
could
 
nŸ
 
dëîmöe
 
size
 
of
 
±hªad_t
. 
Fix
 
c⁄figuª
.
ac
.

325 #îr‹ 
C⁄figuøti⁄
 
dëîmöed
 
size
 
of
 
±hªad_t
 
is
 
u√x≥˘ed
. 
Fix
 
°hªad
.
h
.

327 } 
	thﬁdî_ty≥_t
;

328 vﬁ©ûê
hﬁdî_ty≥_t
 
	m_hﬁdî
;

331 
èès_lock
(Ë{ 
	m_hﬁdî
.
	mbôs
=
NOBODY
; }

333 
	m¥iv©e
:

336 
•ö
();

338 
	mpublic
:

340 
boﬁ
 
åy_lock
()

342 
hﬁdî_ty≥_t
 
tid
 = { 
±hªad_£lf
() };

343 
boﬁ
 
	msuc˚ss
 = 
Ál£
;

344 
	mﬁd_hﬁdî
 =

345 
CASFUNC
(&
_hﬁdî
.
bôs
, 
NOBODY
, 
tid
.bits);

346 if(
	mﬁd_hﬁdî
 =
NOBODY
) {

347 
memb¨_íãr
();

348 
	msuc˚ss
 = 
åue
;

351  
	msuc˚ss
;

355 
acquúe
() {

356 
w_as£π1
(!
is_möe
());

357 
hﬁdî_ty≥_t
 
	mtid
 = { 
±hªad_£lf
() };

359 
•ö
();

361 
CASFUNC
(&
_hﬁdî
.
bôs
, 
NOBODY
, 
tid
.bits));

362 
memb¨_íãr
();

363 
w_as£π1
(
is_möe
());

367 
ªÀa£
() {

368 
memb¨_exô
();

369 
w_as£π1
(
is_möe
());

370 
	m_hﬁdî
.
	mbôs

NOBODY
;

372 
memb¨_íãr
();

373 
w_as£π1
(!
is_möe
());

378 
boﬁ
 
is_möe
() const { 

379 
±hªad_equÆ
(
_hﬁdî
.
h™dÀ
, 
±hªad_£lf
()Ë? 
	måue
 : 
Ál£
; }

380 #unde‡
CASFUNC


407 
	sw_±hªad_lock_t


410 
	sext_qnode
 {

411 
w_±hªad_lock_t
* 
	m_hñd
;

415 
	#PTHREAD_EXT_QNODE_INITIALIZER
 { 0 }

	)

417 
ext_qnode
 vﬁ©ûe* 
	text_qnode_±r
;

420 
	m¥iv©e
:

421 
±hªad_muãx_t
 
_muãx
;

423 
w_±hªad_lock_t
 * 
	m_hﬁdî
;

425 
	mpublic
:

426 
w_±hªad_lock_t
(Ë:
_hﬁdî
(0Ë{ 
±hªad_muãx_öô
(&
_muãx
, 0); }

428 ~
w_±hªad_lock_t
(Ë{ 
w_as£π1
(!
_hﬁdî
); 
±hªad_muãx_de°roy
(&
_muãx
);}

431 
boﬁ
 
©ãm±
(
ext_qnode
* 
me
) {

432 if(
©ãm±
–*
me
)) {

433 
	mme
->
	m_hñd
 = 
this
;

434 
	m_hﬁdî
 = 
this
;

435  
	måue
;

437  
	mÁl£
;

440 
	m¥iv©e
:

442 
boﬁ
 
©ãm±
(
ext_qnode
 & 
me
) {

443 
w_as£π1
(!
is_möe
(&
me
));

444 
w_as£π0
–
me
.
_hñd
 == 0 );

446  
±hªad_muãx_åylock
(&
_muãx
) == 0;

449 
	mpublic
:

451 * 
acquúe
(
ext_qnode
* 
me
) {

452 
w_as£π1
(!
is_möe
(
me
));

453 
w_as£π1
–
me
->
_hñd
 == 0 );

455 
±hªad_muãx_lock
(&
_muãx
);

456 
	mme
->
	m_hñd
 = 
this
;

457 
	m_hﬁdî
 = 
this
;

459 
memb¨_íãr
();

460 
w_as£π1
(
is_möe
(
me
));

466 
ªÀa£
(
ext_qnode
 &
me
) {Ñelease(&me); }

469 
ªÀa£
(
ext_qnode_±r
 
me
) {

471 
w_as£π1
–
_hﬁdî
 =
me
->
_hñd
 );

472 
w_as£π1
(
me
->
_hñd
 =
this
);

473 
	mme
->
	m_hñd
 = 0;

474 
	m_hﬁdî
 = 0;

475 
±hªad_muãx_u∆ock
(&
_muãx
);

476 #i‡
W_DEBUG_LEVEL
 > 0

478 
memb¨_íãr
();

479 
w_±hªad_lock_t
 *
	mh
 = 
_hﬁdî
;

480 
w_±hªad_lock_t
 *
	mm
 = 
me
->
_hñd
;

481 
w_as£π1
–(
h
==
NULL
 && 
m
==NULL)

482 || (
h
 !
m
) );

497 
boﬁ
 
is_möe
(
ext_qnode
* 
me
) const {

498 if–
	mme
->
	m_hñd
 =
this
 ) {

500 
w_as£π1
–
_hﬁdî
 =
me
->
_hñd
 );

501  
	måue
;

503  
	mÁl£
;

521 #unde‡
USE_PTHREAD_MUTEX


542 
w_±hªad_lock_t
 
	tqueue_ba£d_block_lock_t
;

543 
	#QUEUE_BLOCK_EXT_QNODE_INITIALIZER
 
PTHREAD_EXT_QNODE_INITIALIZER


	)

545 #ifde‡
USE_PTHREAD_MUTEX


546 
w_±hªad_lock_t
 
	tqueue_ba£d_•ö_lock_t
;

547 
	#QUEUE_SPIN_EXT_QNODE_INITIALIZER
 
PTHREAD_EXT_QNODE_INITIALIZER


	)

548 
w_±hªad_lock_t
 
	tqueue_ba£d_lock_t
;

549 
	#QUEUE_EXT_QNODE_INITIALIZER
 
PTHREAD_EXT_QNODE_INITIALIZER


	)

551 
	~<mcs_lock.h
>

552 
mcs_lock
 
	tqueue_ba£d_•ö_lock_t
;

553 
	#QUEUE_SPIN_EXT_QNODE_INITIALIZER
 
MCS_EXT_QNODE_INITIALIZER


	)

554 
mcs_lock
 
	tqueue_ba£d_lock_t
;

555 
	#QUEUE_EXT_QNODE_INITIALIZER
 
MCS_EXT_QNODE_INITIALIZER


	)

558 #i‚de‡
SRWLOCK_H


559 
	~<§wlock.h
>

580 
	socc_rwlock
 {

581 
occ_rwlock
();

582 ~
occ_rwlock
();

584 
acquúe_ªad
();

586 
ªÀa£_ªad
();

588 
acquúe_wrôe
();

590 
ªÀa£_wrôe
();

594 
	socc_æock
 {

595 
occ_rwlock
* 
	m_lock
;

596 
acquúe
(Ë{ 
	m_lock
->
acquúe_ªad
(); }

597 
ªÀa£
(Ë{ 
	m_lock
->
ªÀa£_ªad
(); }

600 
	socc_wlock
 {

601 
occ_rwlock
* 
	m_lock
;

602 
acquúe
(Ë{ 
	m_lock
->
acquúe_wrôe
(); }

603 
ªÀa£
(Ë{ 
	m_lock
->
ªÀa£_wrôe
(); }

607 
occ_æock
 *
ªad_lock
(Ë{  &
	m_ªad_lock
; }

609 
occ_wlock
 *
wrôe_lock
(Ë{  &
	m_wrôe_lock
; }

611 
	m¥iv©e
:

612 íum { 
WRITER
=1, 
	mREADER
=2 };

613 vﬁ©ûê
	m_a˘ive_cou¡
;

614 
occ_æock
 
	m_ªad_lock
;

615 
occ_wlock
 
	m_wrôe_lock
;

617 
±hªad_muãx_t
 
	m_ªad_wrôe_muãx
;

618 
±hªad_c⁄d_t
 
	m_ªad_c⁄d
;

619 
±hªad_c⁄d_t
 
	m_wrôe_c⁄d
;

622 #ifde‡
LOCKHACK


623 
	gw_li°_t
<
	t°hªad_t
, 
	t±hªad_muãx_t
> 
	t°hªad_li°_t
;

624 
	gw_li°_i
<
	t°hªad_t
, 
	t±hªad_muãx_t
> 
	t°hªad_li°_i
;

626 
	gw_li°_t
<
	t°hªad_t
, 
	tqueue_ba£d_lock_t
> 
	t°hªad_li°_t
;

627 
	gw_li°_i
<
	t°hªad_t
, 
	tqueue_ba£d_lock_t
> 
	t°hªad_li°_i
;

647 ˛as†
	c°hªad_t
 : 
public
 
°hªad_«med_ba£_t


649 
‰õnd
 
˛ass
 
°hªad_öô_t
;

650 
‰õnd
 
˛ass
 
	m°hªad_maö_t
;

651 #i‡
LATCH_CAN_BLOCK_LONG


652 
‰õnd
 
˛ass
 
	m°hªad_¥i‹ôy_li°_t
;

655 
‰õnd
 
˛ass
 
	mœtch_t
;

658 
	mpublic
:

659 
öôülize_°hªads_∑ckage
();

661 
	e°©us_t
 {

662 
	mt_defun˘
,

663 
	mt_vúgö
,

664 
	mt_ªady
,

665 
	mt_ru¬ög
,

666 
	mt_blocked
,

667 
	mt_boŸ


669 c⁄° *
	g°©us_°rögs
[];

671 
	e¥i‹ôy_t
 {

672 
	gt_time_¸ôiˇl
 = 1,

673 
	gt_ªguœr
 = 0,

674 
	gmax_¥i‹ôy
 = 
t_time_¸ôiˇl
,

675 
	gmö_¥i‹ôy
 = 
t_ªguœr


677 c⁄° *
	g¥i‹ôy_°rögs
[];

680 íum { 
	gdeÁu…_°ack
 = 64*1024 };

685 * 
	gu£r
;

686 c⁄° 
id_t
 
	gid
;

690 
	gw_ba£_t
::
öt8_t
 
max_os_fûe_size
;

692 
	g¥iv©e
:

695 
w_rc_t
::
îrcode_t
 
_block
(

696 
timeout_ö_ms
 
timeout
 = 
WAIT_FOREVER
,

697 c⁄° * c⁄° 
ˇŒî
 = 0,

698 c⁄° * 
id
 = 0);

700 
	gw_rc_t
::
îrcode_t
 
_block
(

701 
±hªad_muãx_t
 *
lock
,

702 
timeout_ö_ms
 
timeout
 = 
WAIT_FOREVER
,

703 
°hªad_li°_t
* 
li°
 = 0,

704 c⁄° * c⁄° 
ˇŒî
 = 0,

705 c⁄° * 
id
 = 0);

707 
w_rc_t
 
_unblock
(w_rc_t::
îrcode_t
 
e
);

709 
	gpublic
:

710 
timeout_to_time•ec
(
timeout_ö_ms
 
timeout
,

711 
time•ec
 &
whí
);

712 
w_rc_t
 
unblock
(w_rc_t::
îrcode_t
 
e
);

713 
w_rc_t
 
block
(

714 
±hªad_muãx_t
 &
lock
,

715 
timeout_ö_ms
 
timeout
 = 
WAIT_FOREVER
,

716 
°hªad_li°_t
* 
li°
 = 0,

717 c⁄° * c⁄° 
ˇŒî
 = 0,

718 c⁄° * 
id
 = 0);

719 
	gw_rc_t
::
îrcode_t
 
block
(
öt4_t
 
timeout
 = 
WAIT_FOREVER
);

721 
vútuÆ
 
	$_dump
(
o°ªam
 &) const;

724 
	`dum∑Œ
(c⁄° *, 
o°ªam
 &);

725 
	`dum∑Œ
(
o°ªam
 &);

727 
	`dump_io
(
o°ªam
 &);

728 
	`dump_evít
(
o°ªam
 &);

730 
	`dump_°©s
(
o°ªam
 &);

731 
	`ª£t_°©s
();

735 
vútuÆ
 
	`vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
 &);

737 
	`vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &);

742 
	`cﬁÀ˘
(
vèbÀ_t
&
v
, 
boﬁ
 
©å_«mes_too
=
åue
);

745 
	`föd_°ack
(*
addªss
);

746 
	`f‹_óch_thªad
(
ThªadFunc
& 
f
);

749 
	`check_Æl_°acks
(c⁄° *
fûe
 = "",

750 
löe
 = 0);

751 
boﬁ
 
	`isSèckOK
(c⁄° *
fûe
 = "", 
löe
 = 0) const;

754 
boﬁ
 
	`isSèckFømeOK
(
size_t
 
size
 = 0);

756 
w_rc_t
 
	`£t_¥i‹ôy
(
¥i‹ôy_t
 
¥i‹ôy
);

757 
¥i‹ôy_t
 
	$¥i‹ôy
() const;

758 
°©us_t
 
	$°©us
() const;

760 
¥iv©e
:

762 #ifde‡
WITHOUT_MMAP


763 
w_rc_t
 
	`£t_bufsize_memÆign
(
size_t
 
size
,

764 *&
buf_°¨t
 , 
sy°em_∑ge_size
);

766 #ifde‡
HAVE_HUGETLBFS


767 
public
:

769 
w_rc_t
 
	`£t_hugëlbfs_∑th
(c⁄° *
∑th
);

770 
¥iv©e
:

771 
w_rc_t
 
	`£t_bufsize_huge
(
size_t
 
size
,

772 *&
buf_°¨t
 , 
sy°em_∑ge_size
);

774 
w_rc_t
 
	`£t_bufsize_n‹mÆ
(
size_t
 
size
,

775 *&
buf_°¨t
 , 
sy°em_∑ge_size
);

776 
	`Æign_bufsize
(
size_t
 
size
, 
sy°em_∑ge_size
,

777 
max_∑ge_size
);

778 
	`gë_max_∑ge_size
(
sy°em_∑ge_size
);

779 
	`Æign_f‹_sm
(
size_t
 
ªque°ed_size
);

781 
public
:

782 
	`do_unm≠
();

786 * 
	`£t_bufsize
(
size_t
 
size
);

787 
w_rc_t
 
	`£t_bufsize
(
size_t
 
size
, *&
buf_°¨t
 ,

788 
boﬁ
 
u£_n‹mÆ_if_huge_Áûs
=
Ál£
);

790 
w_rc_t
 
	`›í
(

791 c⁄° * 
∑th
,

792 
Êags
,

793 
mode
,

794 & 
fd
);

795 
w_rc_t
 
	`˛o£
(
fd
);

796 
w_rc_t
 
	`ªad
(

797 
fd
,

798 * 
buf
,

799 
n
);

800 
w_rc_t
 
	`wrôe
(

801 
fd
,

802 c⁄° * 
buf
,

803 
n
);

804 
w_rc_t
 
	`ªadv
(

805 
fd
,

806 c⁄° 
iovec_t
* 
iov
,

807 
size_t
 
iov˙t
);

808 
w_rc_t
 
	`wrôev
(

809 
fd
,

810 c⁄° 
iovec_t
* 
iov
,

811 
size_t
 
iov˙t
);

813 
w_rc_t
 
	`¥ód
(
fd
, *
buf
, 
n
, 
fûeoff_t
 
pos
);

814 
w_rc_t
 
	`pwrôe
(
fd
, c⁄° *
buf
, 
n
,

815 
fûeoff_t
 
pos
);

816 
w_rc_t
 
	`l£ek
(

817 
fd
,

818 
fûeoff_t
 
off£t
,

819 
whí˚
,

820 
fûeoff_t
& 
ªt
);

822 
w_rc_t
 
	`l£ek
(

823 
fd
,

824 
fûeoff_t
 
off£t
,

825 
whí˚
);

826 
w_rc_t
 
	`fsync
(
fd
);

827 
w_rc_t
 
	`·runˇã
(
fd
, 
fûeoff_t
 
sz
);

828 
w_rc_t
 
	`f°©
(
fd
, 
fûe°©_t
 &
sb
);

829 
w_rc_t
 
	`fi§aw
(
fd
, 
boﬁ
 &
øw
);

836 
°hªad_t
* &
	`me_lvÆ
() ;

838 
°hªad_t
* 
	$me
(Ë{  
	`me_lvÆ
(); 
	}
}

840 
±hªad_t
 
my£lf
();

841 
w_ønd
 *
	$és_∫g
(Ë{  &
	`me
()->
_∫g
; 
	}
}

842 
w_ønd
 *
	$∫g
(Ë{  &
_∫g
; 
	}
}

844 
	$ønd
(Ë{  
	`és_∫g
()->
	`ønd
(); 
	}
}

845 
	$dønd
(Ë{ 
	`és_∫g
()->
	`dønd
(); 
	}
}

846 
	$øndn
(
max
) {

847  
	`és_∫g
()->
	`øndn
(
max
);

848 
	}
}

851 
	$øndn
(
lo
, 
hi
) {

852  
	`és_∫g
()->
	`øndn
(
lo
, 
hi
);

853 
	}
}

858 
¶ìp
(
timeout_ö_ms
 
timeout
 = 
WAIT_IMMEDIATE
,

859 c⁄° *
ªas⁄
 = 0);

860 
wakeup
();

863 
w_rc_t
 
joö
(
timeout_ö_ms
 
timeout
 = 
WAIT_FOREVER
);

866 
w_rc_t
 
f‹k
();

869 
yõld
();

870 
	go°ªam
 &
	$¥öt
(
o°ªam
 &) const;

873 
vútuÆ
 ~
	`°hªad_t
();

878 
vútuÆ
 
smthªad_t
* 
	`dy«mic_ˇ°_to_smthªad
();

879 
vútuÆ
 c⁄° 
smthªad_t
* 
	$dy«mic_ˇ°_to_c⁄°_smthªad
() const;

881 
¥Ÿe˘ed
:

882 
	`°hªad_t
(

883 
¥i‹ôy_t
 
¥i‹ôy
 = 
t_ªguœr
,

884 c⁄° *
«me
 = 0,

885 
°ack_size
 = 
deÁu…_°ack
);

887 
vútuÆ
 
	$bef‹e_run
(Ë{ 
	}
}

888 
vútuÆ
 
run
() = 0;

889 
vútuÆ
 
	$a·î_run
(Ë{ 
	}
}

891 
	g¥iv©e
:

894 íum { 
fd_ba£
 = 4000 };

895 * 
	g_°¨t_‰ame
;

896 * 
	g_d™gî
;

897 
size_t
 
	g_°ack_size
;

899 
±hªad_muãx_t
 
	g_waô_lock
;

901 
±hªad_c⁄d_t
 
	g_waô_c⁄d
;

903 
±hªad_muãx_t
* 
	g_°¨t_ãrmö©e_lock
;

904 
±hªad_c⁄d_t
 * 
	g_°¨t_c⁄d
;

906 vﬁ©ûê
boﬁ
 
	g_¶ìpög
;

907 vﬁ©ûê
boﬁ
 
	g_f‹ked
;

908 
boﬁ
 
	g_ãrmö©ed
;

910 vﬁ©ûê
boﬁ
 
	g_unblock_Êag
;

912 
fûl4
 
	g_dummy4vÆgröd
;

914 
°hªad_c‹e_t
 * 
	g_c‹e
;

915 vﬁ©ûê
°©us_t
 
	g_°©us
;

916 
¥i‹ôy_t
 
	g_¥i‹ôy
;

917 
	gw_rc_t
::
îrcode_t
 
_r˚
;

919 
w_lök_t
 
	g_lök
;

921 
w_lök_t
 
	g_˛ass_lök
;

923 
w_ønd
 
	g_∫g
;

926 
°hªad_li°_t
* 
	g_˛ass_li°
;

928 #ifde‡
LOCKHACK


929 
±hªad_muãx_t
 
	g_˛ass_li°_lock
;

931 
queue_ba£d_lock_t
 
	g_˛ass_li°_lock
;

938 
sdisk_t
 **
	g_disks
;

939 
	g›í_max
;

940 
	g›í_cou¡
;

943 
__°¨t
(*
¨g_thªad
);

944 
_°¨t
();

948 
w_rc_t
 
cﬁd_°¨tup
();

949 
w_rc_t
 
shutdown
();

950 
°ime_t
 
	gboŸ_time
;

951 
°hªad_t
* 
	g_maö_thªad
;

952 
uöt4_t
 
	g_√xt_id
;

954 
	g¥iv©e
:

955 
_disk_buf„r_dißlignmít
;

956 
size_t
 
	g_disk_buf„r_size
;

957 * 
	g_disk_buf„r
;

960 
o°ªam
 &
›î©‹
<<(o°ªam &
o
, c⁄° 
°hªad_t
 &
t
);

962 
¥öt_timeout
(
o°ªam
& 
o
, c⁄° 
°hªad_ba£_t
::
timeout_ö_ms
 
timeout
);

973 ˛as†
	c°hªad_maö_t
 : 
public
 
°hªad_t
 {

974 
‰õnd
 
˛ass
 
°hªad_t
;

976 
	m¥Ÿe˘ed
:

977 
NORET
 
°hªad_maö_t
();

978 
vútuÆ
 
run
();

984 #i‡
LATCH_CAN_BLOCK_LONG


990 
˛ass
 
	g°hªad_¥i‹ôy_li°_t


991 : 
public
 
w_des˚nd_li°_t
<
°hªad_t
, 
	gqueue_ba£d_lock_t
, 
	g°hªad_t
::
¥i‹ôy_t
> {

992 
public
:

993 
NORET
 
°hªad_¥i‹ôy_li°_t
();

995 
	gNORET
 ~
°hªad_¥i‹ôy_li°_t
() {};

996 
	g¥iv©e
:

998 
NORET
 
°hªad_¥i‹ôy_li°_t
(

999 c⁄° 
°hªad_¥i‹ôy_li°_t
&);

1000 
	g°hªad_¥i‹ôy_li°_t
& 
	g›î©‹
=(c⁄° 
°hªad_¥i‹ôy_li°_t
&);

1005 
	#MUTEX_ACQUIRE
(
muãx
Ë
	`W_COERCE
((muãx).
	`acquúe
())

	)

1006 
	#MUTEX_RELEASE
(
muãx
Ë(muãx).
	`ªÀa£
()

	)

1007 
	#MUTEX_IS_MINE
(
muãx
Ë(muãx).
	`is_möe
()

	)

1025 
	#CRITICAL_SECTION
(
«me
, 
lock
Ë
¸ôiˇl_£˘i⁄
<
	`__ty≥of__
÷ock)&> 
	`«me
÷ock)

	)

1027 
	gãm∂©e
<
˛ass
 
	gLock
>

1028 
	g¸ôiˇl_£˘i⁄
;

1039 
	gãm∂©e
<
˛ass
 
	gLock
>

1040 
	g¸ôiˇl_£˘i⁄
<
	gLock
*&> : 
¸ôiˇl_£˘i⁄
<
Lock
&> {

1041 
¸ôiˇl_£˘i⁄
<
Lock
*&>(Lock* 
muãx
) : critical_section<Lock&>(*mutex) { }

1069 
	#SPECIALIZE_CS
(
Lock
,
Exåa
,
ExåaInô
,
Acquúe
,
Rñó£
) \

1070 
ãm∂©e
<> 
¸ôiˇl_£˘i⁄
<
Lock
&> { \

1071 
	`¸ôiˇl_£˘i⁄
(
Lock
 &
muãx
) \

1072 : 
	`_muãx
(&
muãx
) \

1073 { 
ExåaInô
; 
Acquúe
; } \

1074 ~
	`¸ôiˇl_£˘i⁄
() { \

1075 if(
_muãx
) \

1076 
Rñó£
; \

1077 
_muãx
 = 
NULL
; \

1079 
	`∑u£
(Ë{ 
Rñó£
; } \

1080 
	`ªsume
(Ë{ 
Acquúe
; }\

1081 
	`exô
(Ë{ 
Rñó£
; 
_muãx
 = 
NULL
; } \

1082 
Lock
 &
	`h™d_off
() { \

1083 
Lock
* 
rvÆ
 = 
_muãx
; \

1084 
_muãx
 = 
NULL
; \

1085  *
rvÆ
; \

1087 
¥iv©e
: \

1088 
Lock
* 
_muãx
; \

1089 
Exåa
; \

1090 
›î©‹
=(
¸ôiˇl_£˘i⁄
 const &); \

1091 
	`¸ôiˇl_£˘i⁄
(
¸ôiˇl_£˘i⁄
 const &); \

1092 }

	)

1097 
SPECIALIZE_CS
(
±hªad_muãx_t
, 
_dummy
, (_dummy=0),

1098 
±hªad_muãx_lock
(
_muãx
), 
±hªad_muãx_u∆ock
(_mutex));

1103 
SPECIALIZE_CS
(
èès_lock
, 
_dummy
, (_dummy=0),

1104 
_muãx
->
acquúe
(), _muãx->
ªÀa£
());

1108 
SPECIALIZE_CS
(
w_±hªad_lock_t
, w_±hªad_lock_t::
ext_qnode
 
_me
, (_me.
_hñd
=0),

1109 
_muãx
->
acquúe
(&
_me
), _muãx->
ªÀa£
(&_me));

1111 #i‚de‡
USE_PTHREAD_MUTEX


1112 
SPECIALIZE_CS
(
mcs_lock
, mcs_lock::
ext_qnode
 
_me
, (_me.
_hñd
=0),

1113 
_muãx
->
acquúe
(&
_me
), _muãx->
ªÀa£
(&_me));

1116 
SPECIALIZE_CS
(
occ_rwlock
::
occ_æock
, 
_dummy
, (_dummy=0),

1117 
_muãx
->
acquúe
(), _muãx->
ªÀa£
());

1119 
SPECIALIZE_CS
(
occ_rwlock
::
occ_wlock
, 
_dummy
, (_dummy=0),

1120 
_muãx
->
acquúe
(), _muãx->
ªÀa£
());

1124 
ölöe
 
	g°hªad_t
::
¥i‹ôy_t


1125 
°hªad_t
::
	$¥i‹ôy
() const

1127  
_¥i‹ôy
;

1128 
	}
}

1130 
ölöe
 
	g°hªad_t
::
°©us_t


1131 
°hªad_t
::
	$°©us
() const

1133  
_°©us
;

1134 
	}
}

1136 
	~<w_°r°ªam.h
>

1138 
	~<°rög.h
>

1140 
	#DO_PTHREAD_BARRIER
(
x
) \

1141 { 
ªs
 = 
x
; \

1142 if(
ªs
 &&Ñe†!
PTHREAD_BARRIER_SERIAL_THREAD
) { \

1143 
w_o°r°ªam
 
S
; \

1144 
S
 << "U√x≥˘edÑesu… from " << #x << " " << 
ªs
 << " "; \

1145 
buf
[100]; \

1146 (Ë
	`°ªº‹_r
(
ªs
, &
buf
[0], (buf)); \

1147 
S
 << 
buf
 << 
íds
; \

1148 
	`W_FATAL_MSG
(
fcINTERNAL
, << 
S
.
	`c_°r
()); \

1150 }

	)

1151 
	#DO_PTHREAD
(
x
) \

1152 { 
ªs
 = 
x
; \

1153 if(
ªs
) { \

1154 
w_o°r°ªam
 
S
; \

1155 
S
 << "U√x≥˘edÑesu… from " << #x << " " << 
ªs
 << " "; \

1156 
buf
[100]; \

1157 (Ë
	`°ªº‹_r
(
ªs
, &
buf
[0], (buf)); \

1158 
S
 << 
buf
 << 
íds
; \

1159 
	`W_FATAL_MSG
(
fcINTERNAL
, << 
S
.
	`c_°r
()); \

1161 }

	)

1162 
	#DO_PTHREAD_TIMED
(
x
) \

1163 { 
ªs
 = 
x
; \

1164 if(
ªs
 &&Ñe†!
ETIMEDOUT
) { \

1165 
	`W_FATAL_MSG
(
fcINTERNAL
, \

1166 <<"U√x≥˘edÑesu… from " << #x << " " << 
ªs
); \

1168 }

	)

	@src/sthread/sthread_core_pthread.cpp

53 
	~"w_deföes.h
"

71 
	~<w.h
>

72 
	~"°hªad.h
"

73 
	~<w_°ªam.h
>

74 
	~<±hªad.h
>

75 
	~"°c‹e_±hªad.h
"

79 
	#USER_STACK_SIZE
 (
°hªad_t
::
deÁu…_°ack
)

	)

80 
	#DEFAULT_STACK_SIZE
 (
USER_STACK_SIZE
)

	)

83 #i‚de‡
HAVE_SEMAPHORE_H


88 
	$£m_öô
(
°hªad_c‹e_t
::
£m_t
 *
£m
, , 
cou¡
)

93 
£m
->
cou¡
 = count;

94 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
£m
->
lock
, 
NULL
));

95 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
£m
->
wake
, 
NULL
));

98 
	}
}

100 
	$£m_de°roy
(
°hªad_c‹e_t
::
£m_t
 *
£m
)

102 
	`DO_PTHREAD
(
	`±hªad_muãx_de°roy
(&
£m
->
lock
));

103 
	`DO_PTHREAD
(
	`±hªad_c⁄d_de°roy
(&
£m
->
wake
));

104 
	}
}

106 
ölöe
 
	$£m_po°
(
°hªad_c‹e_t
::
£m_t
 *
£m
)

108 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
£m
->
lock
));

109 
£m
->
cou¡
++;

110 i‡(
£m
->
cou¡
 > 0)

111 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
£m
->
wake
));

112 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
£m
->
lock
));

113 
	}
}

115 
ölöe
 
	$£m_waô
(
°hªad_c‹e_t
::
£m_t
 *
£m
)

117 
	`DO_PTHREAD
(
	`±hªad_muãx_lock
(&
£m
->
lock
));

118 
£m
->
cou¡
 <= 0)

119 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
£m
->
wake
, &£m->
lock
));

120 
£m
->
cou¡
--;

121 
	`DO_PTHREAD
(
	`±hªad_muãx_u∆ock
(&
£m
->
lock
));

122 
	}
}

128 "C" *
±hªad_c‹e_°¨t
(*
_¨g
);

129 *
	$±hªad_c‹e_°¨t
(*
_¨g
)

131 
°hªad_c‹e_t
 *
me
 = (°hªad_c‹e_à*Ë
_¨g
;

135 
me
->
is_vúgö
 = 0;

136 (
me
->
°¨t_¥oc
)(me->
°¨t_¨g
);

138 
	}
}

141 
°hªad_c‹e_öô
(
°hªad_c‹e_t
 *
c‹e
,

142 (*
¥oc
)(*), *
¨g
,

143 
°ack_size
)

145 
n
;

148 i‡(
°ack_size
 > 0 && stack_size < 1024)

151 
c‹e
->
is_vúgö
 = 1;

152 
c‹e
->
°¨t_¥oc
 = 
¥oc
;

153 
c‹e
->
°¨t_¨g
 = 
¨g
;

154 
c‹e
->
°ack_size
 = stack_size;

156 i‡(
°ack_size
 > 0) {

158 
n
 = 
	`±hªad_¸óã
(&
c‹e
->
±hªad
, 
NULL
, 
±hªad_c‹e_°¨t
, core);

159 i‡(
n
 == -1) {

160 
w_rc_t
 
e

	`RC
(
fcOS
);

166 
˚º
 << "±hªad_¸óã():" << 
ídl
 << 
e
 <<Éndl;

169 
c‹e
->
¸ót‹
 = 
	`±hªad_£lf
();

183 
c‹e
->
is_vúgö
 = 0;

184 
c‹e
->
±hªad
 = 
	`±hªad_£lf
();

185 
c‹e
->
¸ót‹
 = c‹e->
±hªad
;

188 
	}
}

193 
	$°hªad_c‹e_exô
(
°hªad_c‹e_t
* 
c‹e
, 
boﬁ
 &
joöed
)

195 *
joö_vÆue
=
NULL
;

196 if(
joöed
) {

202 i‡(
c‹e
->
°ack_size
 > 0) {

203 
ªs
 = 
	`±hªad_joö
(
c‹e
->
±hªad
, &
joö_vÆue
);

204 if(
ªs
) {

205 c⁄° *
msg
="";

206 
ªs
) {

207 
EINVAL
:

208 
msg
 = "Notá joinableÅhread: EINVAL";

210 
ESRCH
:

211 
msg
 = "No suchÅhread: ESRCH";

213 
EDEADLK
:

214 
msg
 = "Joining with self: EDEADLK";

219 if(
ªs
) {

220 
w_o°r°ªam
 
o
;

221 
o
 << "sthread_core_exit:"

223 << 
msg
 << " core is : ";

225 
o
 << *
c‹e
 << 
ídl
;

227 
	`W_FATAL_MSG
(
fcINTERNAL
, << 
o
.
	`c_°r
(Ë<< 
ídl
);

232 
joöed
 = 
åue
;

233 
	}
}

235 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	g°hªad_c‹e_t
 &
	gc‹e
)

237 
	go
 << "core: ";

238 i‡(
	gc‹e
.
	g°ack_size
 == 0)

239 
W_FORM
(
o
)("[ systemÅhread %#lx creator %#lx ]",

240 (Ë
	gc‹e
.
	g±hªad
,

241 (Ë
	gc‹e
.
	g¸ót‹


244 
W_FORM
(
o
)("[Åhread %#lx creator %#lx ] size=%d",

245 (Ë
	gc‹e
.
	g±hªad
,

246 (Ë
	gc‹e
.
	g¸ót‹
,

247 
	gc‹e
.
	g°ack_size
);

248 i‡(
	gc‹e
.
	gis_vúgö
)

249 
	go
 << ", virgin-core";

250  
	go
;

	@src/sthread/sthread_stats.cpp

30 
	~"w_deföes.h
"

35 
	~"°hªad_°©s.h
"

36 
	~"°hªad_°©s_öc_gí.˝p
"

44 c⁄° *
	g°hªad_°©s
::
°©_«mes
[] = {

45 
	~"°hªad_°©s_msg_gí.h
"

51 
	go°ªam
 &
	g›î©‹
 <<(o°ªam &
	go
, c⁄° 
	g°hªad_°©s
 &
	gs
)

53 
	go
 << "STHREAD STATS:" << 
	gídl
;

55 
	go
 << "I/O:" << 
	gídl


56 << " cou¡: " << 
	gs
.
	gnum_io


57 << 
	gídl
;

59 
	go
 << "\åód: " << 
	gs
.
	gªad


60 << " wrôe: " << 
	gs
.
	gwrôe


61 << " sync: " << 
	gs
.
	gsync


62 << "Årunc: " << 
	gs
.
	gåunˇã
 << 
	gídl
;

64 i‡(
	gs
.
	gwrôev
) {

65 
	go
 << "\twrôev: " << 
	gs
.
	gwrôev
;

66 
	go
 << 
	gídl
;

69  
	go
;

	@src/sthread/sthread_stats.h

53 #i‚de‡
STHREAD_STATS_H


54 
	#STHREAD_STATS_H


	)

56 
	~"w_deföes.h
"

60 
	~<w_°©.h
>

76 ˛as†
	c°hªad_°©s
 {

77 
	mpublic
:

78 
	~"°hªad_°©s_°ru˘_gí.h
"

80 
	$°hªad_°©s
() {

84 
	`mem£t
(
this
,'\0', (*this));

86 ~
	$°hªad_°©s
(){ 
	}
}

88 
	$˛ór
() {

89 
	`mem£t
((*)
this
, '\0', (*this));

90 
	}
}

93 
o°ªam
 &
›î©‹
<<(o°ªam &, c⁄° 
°hªad_°©s
 &
°©s
);

95 
˛ass
 
°hªad_°©s
 
SthªadSèts
;

97 
	#STH_STATS
(
x
Ë
SthªadSèts
.
	)
x

98 
	#INC_STH_STATS
(
x
Ë
	`©omic_öc
(
SthªadSèts
.x);

	)

99 
	#SET_STH_STATS
(
x
Ë
SthªadSèts
.x = (
y
);

	)

	@src/sthread/sthread_stats_collect_enum_gen.h

1 #i‚de‡
STHREAD_STATS_COLLECT_ENUM_GEN_H


2 
	#STHREAD_STATS_COLLECT_ENUM_GEN_H


	)

36 
	gVT_num_io
,

37 
	gVT_ªad
,

38 
	gVT_wrôe
,

39 
	gVT_sync
,

40 
	gVT_åunˇã
,

41 
	gVT_wrôev
,

42 
	gVT_ªadv
,

	@src/sthread/sthread_stats_collect_gen.cpp

1 #i‚de‡
STHREAD_STATS_COLLECT_GEN_CPP


2 
	#STHREAD_STATS_COLLECT_GEN_CPP


	)

36 
	gt
.
£t_ba£
(
VT_num_io
, 
TMP_GET_STAT
(
num_io
));

37 
	gt
.
£t_ba£
(
VT_ªad
, 
TMP_GET_STAT
(
ªad
));

38 
	gt
.
£t_ba£
(
VT_wrôe
, 
TMP_GET_STAT
(
wrôe
));

39 
	gt
.
£t_ba£
(
VT_sync
, 
TMP_GET_STAT
(
sync
));

40 
	gt
.
£t_ba£
(
VT_åunˇã
, 
TMP_GET_STAT
(
åunˇã
));

41 
	gt
.
£t_ba£
(
VT_wrôev
, 
TMP_GET_STAT
(
wrôev
));

42 
	gt
.
£t_ba£
(
VT_ªadv
, 
TMP_GET_STAT
(
ªadv
));

	@src/sthread/sthread_stats_dec_gen.cpp

1 #i‚de‡
STHREAD_STATS_DEC_GEN_CPP


2 
	#STHREAD_STATS_DEC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	g°hªad_°©s
 &

39 
	g›î©‹
-=(
°hªad_°©s
 &
s
,c⁄° 
	g°hªad_°©s
 &
	gt
)

41 
	gs
.
	gnum_io
 -
t
.
num_io
;

42 
	gs
.
	gªad
 -
t
.
ªad
;

43 
	gs
.
	gwrôe
 -
t
.
wrôe
;

44 
	gs
.
	gsync
 -
t
.
sync
;

45 
	gs
.
	gåunˇã
 -
t
.
åunˇã
;

46 
	gs
.
	gwrôev
 -
t
.
wrôev
;

47 
	gs
.
	gªadv
 -
t
.
ªadv
;

48  
	gs
;

	@src/sthread/sthread_stats_inc_gen.cpp

1 #i‚de‡
STHREAD_STATS_INC_GEN_CPP


2 
	#STHREAD_STATS_INC_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	g°hªad_°©s
 &

39 
	g›î©‹
+=(
°hªad_°©s
 &
s
,c⁄° 
	g°hªad_°©s
 &
	gt
)

41 
	gs
.
	gnum_io
 +
t
.
num_io
;

42 
	gs
.
	gªad
 +
t
.
ªad
;

43 
	gs
.
	gwrôe
 +
t
.
wrôe
;

44 
	gs
.
	gsync
 +
t
.
sync
;

45 
	gs
.
	gåunˇã
 +
t
.
åunˇã
;

46 
	gs
.
	gwrôev
 +
t
.
wrôev
;

47 
	gs
.
	gªadv
 +
t
.
ªadv
;

48  
	gs
;

	@src/sthread/sthread_stats_msg_gen.h

1 #i‚de‡
STHREAD_STATS_MSG_GEN_H


2 
	#STHREAD_STATS_MSG_GEN_H


	)

	@src/sthread/sthread_stats_out_gen.cpp

1 #i‚de‡
STHREAD_STATS_OUT_GEN_CPP


2 
	#STHREAD_STATS_OUT_GEN_CPP


	)

34 
	~"w_deföes.h
"

38 
	go°ªam
 &

39 
	g›î©‹
<<(
	go°ªam
 &
	go
,c⁄° 
	g°hªad_°©s
 &
	gt
)

41 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "num_iÿ" << 
	gt
.
	gnum_io
 << 
	gídl
;

42 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "ªad " << 
	gt
.
	gªad
 << 
	gídl
;

43 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "wrôê" << 
	gt
.
	gwrôe
 << 
	gídl
;

44 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "syn¯" << 
	gt
.
	gsync
 << 
	gídl
;

45 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "åunˇã " << 
	gt
.
	gåunˇã
 << 
	gídl
;

46 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "wrôev " << 
	gt
.
	gwrôev
 << 
	gídl
;

47 
	go
 << 
£tw
(
W_°hªad_°©s
Ë<< "ªadv " << 
	gt
.
	gªadv
 << 
	gídl
;

48  
	go
;

	@src/sthread/sthread_stats_struct_gen.h

1 #i‚de‡
STHREAD_STATS_STRUCT_GEN_H


2 
	#STHREAD_STATS_STRUCT_GEN_H


	)

34 
	~"w_deföes.h
"

38 
	gw_ba£_t
::
ba£_°©_t
 
num_io
;

39 
	gw_ba£_t
::
ba£_°©_t
 
ªad
;

40 
	gw_ba£_t
::
ba£_°©_t
 
wrôe
;

41 
	gw_ba£_t
::
ba£_°©_t
 
sync
;

42 
	gw_ba£_t
::
ba£_°©_t
 
åunˇã
;

43 
	gw_ba£_t
::
ba£_°©_t
 
wrôev
;

44 
	gw_ba£_t
::
ba£_°©_t
 
ªadv
;

45 
	gpublic
:

46 
‰õnd
 
o°ªam
 &

47 
›î©‹
<<(
o°ªam
 &
o
,c⁄° 
	g°hªad_°©s
 &
	gt
);

48 
	gpublic
:

49 
‰õnd
 
°hªad_°©s
 &

50 
›î©‹
+=(
°hªad_°©s
 &
s
,c⁄° 
	g°hªad_°©s
 &
	gt
);

51 
	gpublic
:

52 
‰õnd
 
°hªad_°©s
 &

53 
›î©‹
-=(
°hªad_°©s
 &
s
,c⁄° 
	g°hªad_°©s
 &
	gt
);

54 c⁄° *
	g°©_«mes
[];

55 c⁄° *
	g°©_ty≥s
;

56 
	#W_°hªad_°©s
 8 + 2

	)

	@src/sthread/sthread_vtable_enum.h

30 #i‚de‡
STHREAD_VTABLE_ENUM_H


31 
	#STHREAD_VTABLE_ENUM_H


	)

33 
	~"w_deföes.h
"

37 
	~<vèbÀ.h
>

47 
	e°hªad_vèbÀ_©å_ödex
 {

49 
	m°hªad_id_©å
,

50 
	m°hªad_«me_©å
,

51 
	m°hªad_°©us_©å
,

53 
	~"°hªad_°©s_cﬁÀ˘_íum_gí.h
"

56 
	m°hªad_œ°


59 c⁄° *
°hªad_vèbÀ_©å_«mes
[];

	@src/sthread/tests/except.cpp

30 
	~"w_deföes.h
"

34 
	~<io°ªam
>

35 
	~<w_°r°ªam.h
>

37 
	~<ˇs£π
>

38 
	~<w_gë›t.h
>

40 
	~<w.h
>

41 
	~<°hªad.h
>

43 ˛as†
	cMyEx˚±i⁄
 {

44 
	mpublic
:

45 
îr‹
;

47 
	$MyEx˚±i⁄
(
îr
 = 0Ë: 
	$îr‹
(
îr
) { }

48 
	$MyEx˚±i⁄
(
w_rc_t
 
e
Ë: 
	`îr‹
”.
	$îr_num
()Ë{ 
	}
}

50 
o°ªam
 &
	$¥öt
(
o°ªam
 &
o
) const {

51  
o
 << "MyEx˚±i⁄”º‹ = " << 
îr‹
 << ")";

52 
	}
}

55 
	go°ªam
 &
	g›î©‹
<<(o°ªam &
	go
, c⁄° 
	gMyEx˚±i⁄
 &
	ge
)

57  
	ge
.
¥öt
(
o
);

60 ˛as†
	cex˚±_thªad_t
 : 
public
 
°hªad_t
 {

61 
public
:

62 
ex˚±_thªad_t
(
fid
, 
boﬁ
 
do_ˇtch
);

63 
	m¥Ÿe˘ed
:

64 
run
();

65 
	m¥iv©e
:

66 
id
;

67 
boﬁ
 
	mdo_ˇtch
;

68 
Ne°Ex˚±
(
cou¡
);

69 
_run
();

73 
	gex˚±_thªad_t
::
	$ex˚±_thªad_t
(
fid
, 
boﬁ
 
_do_ˇtch
)

74 : 
	`id
(
fid
),

75 
	$do_ˇtch
(
_do_ˇtch
)

77 
w_o°r°ªam_buf
 
	`s
(40);

78 
s
 << "ex˚±[" << 
id
 << "]" << 
íds
;

79 
	`ª«me
(
s
.
	`c_°r
());

80 
	}
}

83 
	gNumThªads
 = 4;

84 
	gNumEx˚±i⁄s
 = 4;

85 
boﬁ
 
	gvîbo£
 = 
Ál£
;

86 
	eex˚±_a˘i⁄
 { 
	mx_n⁄e
, 
	mx_Æl
, 
	mx_Æã∫©e
 };

87 
ex˚±_a˘i⁄
 
	gxa˘i⁄
 = 
x_n⁄e
;

89 
∑r£_¨gs
(, **);

91 *
	gack
;

92 
°hªad_t
 **
	gw‹kî
;

94 
	$h¨ve°
(
thªads
)

96 
i
;

98 
i
 = 0; i < 
thªads
; ++i) {

99 
	`W_COERCE
(
w‹kî
[
i
]->
	`joö
());

100 i‡(
vîbo£
)

101 
cout
 << "Föished: " << 
ídl
 << *
w‹kî
[
i
] <<Éndl;

103 i‡(
ack
[
i
])

104 
cout
 << "thªad " << 
i
 << "ácknowÀded" << 
ídl
;

106 
cout
 << "thªad " << 
i
 << "ÇÿacknowÀdge" << 
ídl
;

108 
dñëe
 
w‹kî
[
i
];

110 
	}
}

112 
	$maö
(
¨gc
, **
¨gv
)

114 
i
;

116 i‡(
	`∑r£_¨gs
(
¨gc
, 
¨gv
) == -1)

119 
ack
 = 
√w
 [
NumThªads
];

120 i‡(!
ack
)

121 
	`W_FATAL
(
fcOUTOFMEMORY
);

122 
w‹kî
 = 
√w
 
°hªad_t
 *[
NumThªads
];

123 i‡(!
w‹kî
)

124 
	`W_FATAL
(
fcOUTOFMEMORY
);

126 
i
=0; i < 
NumThªads
; ++i) {

127 
boﬁ
 
do_ˇtch
 = (
xa˘i⁄
 !
x_n⁄e
);

128 i‡(
xa˘i⁄
 =
x_Æã∫©e
 && (
i
 % 2) == 0)

129 
do_ˇtch
 = 
Ál£
;

131 
ack
[
i
] = 0;

132 
w‹kî
[
i
] = 
√w
 
	`ex˚±_thªad_t
(i, 
do_ˇtch
);

133 i‡(!
w‹kî
[
i
])

134 
	`W_FATAL
(
fcOUTOFMEMORY
);

135 
	`W_COERCE
(
w‹kî
[
i
]->
	`f‹k
());

138 
	`h¨ve°
(
NumThªads
);

140 
dñëe
 [] 
w‹kî
;

141 
dñëe
 [] 
ack
;

144 
	}
}

147 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

149 
c
;

150 
îr‹s
 = 0;

152 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t:vxX")Ë!
EOF
) {

153 
c
) {

155 
NumThªads
 = 
	`©oi
(
›èrg
);

158 
vîbo£
 = 
åue
;

161 
xa˘i⁄
 = 
x_Æã∫©e
;

164 
xa˘i⁄
 = 
x_Æl
;

167 
îr‹s
++;

171 i‡(
îr‹s
) {

172 
˚º
 << "ußge: " << 
¨gv
[0]

177 << 
ídl
;

179  
îr‹s
 ? -1 : 
›töd
;

180 
	}
}

185 
	gex˚±_thªad_t
::
	$Ne°Ex˚±
(
cou¡
)

187 
	`yõld
();

188 i‡(
cou¡
 == 0) {

189 
throw
 
	`MyEx˚±i⁄
(
cou¡
);

191 
	`w_as£π1
(0);

194 
åy
 {

195 
	`Ne°Ex˚±
(
cou¡
 - 1);

197 
	`ˇtch
 (
MyEx˚±i⁄
 
x
) {

198 
cout
 << "CaughàEx˚±i⁄ " << 
x
 << " from " << 
id
 << 
ídl
;

199 
	`yõld
();

200 
throw
 
	`MyEx˚±i⁄
(
cou¡
);

202 
	}
}

204 
	gex˚±_thªad_t
::
	$run
()

206 i‡(
do_ˇtch
) {

207 
åy
 {

208 
	`_run
();

210 
	`ˇtch
 (...) {

211 
˚º
 << 
	`«me
() << ":ÅhreadÑun() catchesÉxception"

212 << 
ídl
;

216 
	`_run
();

217 
	}
}

219 
	gex˚±_thªad_t
::
	$_run
()

221 
ªsu…
;

222 
r1
, 
r2
, 
r3
, 
r4
, 
r5
, 
r6
, 
r7
, 
r8
, 
r9
, 
r10
, 
r11
, 
r12
, 
r13
,

223 
r14
, 
r15
, 
r16
, 
r17
, 
r18
, 
r19
, 
r20
, 
r21
, 
r22
, 
r23
, 
r24
, 
r25
,

224 
r26
, 
r27
, 
r28
, 
r29
, 
r30
, 
r31
;

226 
r1
 = 
id
;

227 
r2
 = 
id
;

228 
r3
 = 
id
;

229 
r4
 = 
id
;

230 
r5
 = 
id
;

231 
r6
 = 
id
;

232 
r7
 = 
id
;

233 
r8
 = 
id
;

234 
r9
 = 
id
;

235 
r10
 = 
id
;

236 
r11
 = 
id
;

237 
r12
 = 
id
;

238 
r13
 = 
id
;

239 
r14
 = 
id
;

240 
r15

id
;

241 
r16

id
;

242 
r17

id
;

243 
r18

id
;

244 
r19

id
;

245 
r20
 = 
id
;

246 
r21
 = 
id
;

247 
r22
 = 
id
;

248 
r23
 = 
id
;

249 
r24
 = 
id
;

250 
r25
 = 
id
;

251 
r26
 = 
id
;

252 
r27
 = 
id
;

253 
r28
 = 
id
;

254 
r29
 = 
id
;

255 
r30
 = 
id
;

256 
r31
 = 
id
;

258 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

259 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

260 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

262 
cout
 << "Hñlo, w‹ld from " << 
id


263 << ",Ñesu… = " << 
ªsu…


264 << ", check = " << 31 * 
id
 << 
ídl
 << 
Êush
;

266 
åy
 {

267 
	`Ne°Ex˚±
(
NumEx˚±i⁄s
);

269 
	`ˇtch
 (...) {

270 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

271 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

272 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

273 
cout
 << "CATCH, w‹ld from " << 
id


274 << ",Ñesu… = " << 
ªsu…


275 << ", check = " << 31 * 
id
 << 
ídl
;

276 
°hªad_t
::
	`yõld
();

277 
throw
;

280 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

281 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

282 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

283 
cout
 << "Hñlo, w‹ld from " << 
id


284 << ",Ñesu… = " << 
ªsu…


285 << ", check = " << 31 * 
id
 << 
ídl
;

286 
°hªad_t
::
	`yõld
();

287 
ack
[
id
] = 1;

288 
	}
}

	@src/sthread/tests/ioperf.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<w_debug.h
>

36 
	~<ønd48.h
>

37 
	~<os_ty≥s.h
>

38 
	~<os_f˙é.h
>

39 
	~<ˇs£π
>

40 
	~<˘ime
>

42 
	~<sys/uio.h
>

43 
	~<sys/°©.h
>

44 
	~<sys/time.h
>

45 
	~<sys/uio.h
>

46 
	~<io°ªam
>

47 
	~<w_rußge.h
>

48 
	~<w.h
>

49 
	~<°hªad.h
>

50 
	~<°hªad_°©s.h
>

51 
	~<w_gë›t.h
>

53 
	#SECTOR_SIZE
 512

	)

54 
	#BUFSIZE
 1024

	)

56 * 
	gbuf
 = 0;

57 
boﬁ
 
	gu£_øndom
 = 
Ál£
;

58 
boﬁ
 
	gøw_io
 = 
Ál£
;

59 
boﬁ
 
	gsync_io
 = 
Ál£
;

61 
__thªad
 
ønd48
 
	ggíî©‹
;

63 ˛as†
	cio_thªad_t
 : 
public
 
°hªad_t
 {

64 
public
:

66 
io_thªad_t
(

67 
rw_Êag
,

68 
boﬁ
 
check_Êag
,

69 c⁄° * 
fûe
,

70 
size_t
 
block_size
,

71 
block_˙t
,

72 * 
buf


75 ~
io_thªad_t
();

76 
ªwöd
(
i
);

77 
boﬁ
 
	$îr‹
(Ëc⁄° {  
_îr‹
;}

79 
¥Ÿe˘ed
:

81 
vútuÆ
 
	`run
();

83 
¥iv©e
:

85 
_rw_Êag
;

86 
boﬁ
 
_check_Êag
;

87 c⁄° * 
_‚ame
;

88 
size_t
 
_block_size
;

89 
_block_˙t
;

90 * 
_buf
;

91 
boﬁ
 
_is_•ecül
;

92 
_nblocks
;

93 
_fd
;

94 
fûeoff_t
 
_off£t
;

95 
boﬁ
 
_îr‹
;

96 
_tŸÆ_byãs
;

97 
	}
};

99 
	gio_thªad_t
::
	$io_thªad_t
(

100 
rw_Êag
,

101 
boﬁ
 
check_Êag
,

102 c⁄° * 
fûe
,

103 
size_t
 
block_size
,

104 
block_˙t
,

105 * 
buf


108 
	`°hªad_t
(
t_ªguœr
, "io_thread"),

109 
	`_rw_Êag
(
rw_Êag
),

110 
	`_check_Êag
(
check_Êag
),

111 
	`_‚ame
(
fûe
),

112 
	`_block_size
(
block_size
), 
	`_block_˙t
(
block_˙t
),

113 
	`_buf
(
buf
),

114 
	`_is_•ecül
(
Ál£
),

115 
	`_off£t
(0),

116 
	`_îr‹
(
Ál£
),

117 
	$_tŸÆ_byãs
(0)

119 
	}
}

121 
	gio_thªad_t
::~
	$io_thªad_t
()

123 
	}
}

126 
io_thªad_t
::
	$ªwöd
( )

128 
	`DBGTHRD
(<<"rewind " );

130 
w_rc_t
 
rc
;

131 
fûeoff_t
 
off
 = 0;

135 i‡(
_is_•ecül
)

136 
off
 = 2 * 
SECTOR_SIZE
;

139 
rc
 = 
°hªad_t
::
	`l£ek
(
_fd
, 
off
, 
SEEK_AT_SET
);

140 i‡(
rc
.
	`is_îr‹
()) {

141 
˚º
 << "l£ek:" << 
ídl
 << 
rc
 <<Éndl;

142 
	`W_COERCE
(
rc
);

146 
_off£t
 = 0;

148 
	}
}

151 
	gio_thªad_t
::
	$run
()

153 
°ime_t
 
timeBegö
;

154 
°ime_t
 
timeEnd
;

155 c⁄° * 
›_«me
 = 0;

156 
w_rc_t
 
rc
;

158 
	`DBGTHRD
(<<"io_thread_t::run");

161 
rc
 = 
	`›í
(
_‚ame
, 
OPEN_RDONLY
, 0, 
_fd
);

162 i‡(!
rc
.
	`is_îr‹
()) {

163 
fûe°©_t
 
°buf
;

164 
	`W_COERCE
(
	`f°©
(
_fd
, 
°buf
));

165 
_is_•ecül
 = 
°buf
.
is_devi˚
;

167 i‡(
_is_•ecül
) {

169 
_nblocks
 = (
°buf
.
°_size
 - (2 * 
SECTOR_SIZE
)Ë/ 
_block_size
;

172 
_nblocks
 = (()
°buf
.
°_size
Ë/ 
_block_size
;

175 i‡(
_nblocks
 < 
_block_˙t
) {

176 
˚º
 << "W¨nög: fûê" << 
_‚ame
 << " ha†⁄ly " << 
_nblocks


177 << " block†o‡sizê" << 
_block_size
 << "." <<
ídl
;

178 
˚º
 << "Wû»havêtÿª-ªad fûêtÿªad " << 
_block_˙t


179 << " blocks." << 
ídl
;

181 
	`W_COERCE
(
	`˛o£
(
_fd
));

182 
_fd
 = -1;

184 i‡(
_rw_Êag
 != 'r') {

187 
_nblocks
 = 
_block_˙t
;

190 
	`DBGTHRD
(<<"io_thread_t::run");

192 
oÊag
 = 0;

195 if(
_rw_Êag
 == 'r'){

196 
›_«me
 = "read";

197 
oÊag
 |
OPEN_RDONLY
;

199 if(
_rw_Êag
 == 'w') {

200 
›_«me
 = "write";

201 
oÊag
 |
OPEN_RDWR
;

203 if(
_rw_Êag
 == 'b') {

204 
›_«me
 = "read/write";

205 
oÊag
 |
OPEN_RDWR
;

208 
˚º
 << "öã∫ÆÉº‹áà" << 
__LINE__
 << 
ídl
;

210 i‡(
øw_io
)

211 
oÊag
 |
OPEN_RAW
;

212 i‡(
sync_io
)

213 
oÊag
 |
OPEN_SYNC
;

216 i‡(!
_is_•ecül
) {

217 
oÊag
 |
OPEN_CREATE
;

220 
rc
 = 
°hªad_t
::
	`›í
(
_‚ame
, 
oÊag
, 0666, 
_fd
);

221 if(
rc
.
	`is_îr‹
()){

222 
˚º
 << "›í:" << 
ídl
 << 
rc
 <<Éndl;

223 
	`W_COERCE
(
rc
);

226 
	`DBGTHRD
(<<"io_thread_t::run");

230 
this
->
	`ªwöd
(-1);

232 
cout
 << "°¨tög: " << 
_block_˙t
 << " "

233 << 
›_«me
 << " op†o‡" << 
_block_size


234 << " byã†óch." << 
ídl
;

236 
timeBegö
 = 
°ime_t
::
	`now
();

238 
i
=0;

239 
	`DBGTHRD
(<<"_block_˙t" << 
_block_˙t


240 << " i=" << 
i
);

242 
i
 = 0; i < 
_block_˙t
; i++) {

244 
	`DBGTHRD
(

245 << " i=" << 
i


246 << " byãs=" << 
_tŸÆ_byãs


247 << " block_size=" << 
_block_size


248 << " off£t" << 
_off£t


249 << "Üe·" << (
_block_˙t
 - 
i
)

252 
˚º


253 << " i=" << 
i


254 << " byãs=" << 
_tŸÆ_byãs


255 << " block_size=" << 
_block_size


256 << " off£t" << 
_off£t


257 << "Üe·" << (
_block_˙t
 - 
i
)

258 << 
ídl
;

261 i‡((
_rw_Êag
 == 'r') || (_rw_flag == 'b') ) {

262 if(
i
 % 
_nblocks
 == (_nblocks-1) ) {

263 
this
->
	`ªwöd
(
i
);

267 
rc
 = 
°hªad_t
::
	`l£ek
(
_fd
, 
_off£t
, 
SEEK_AT_SET
);

268 i‡(
rc
.
	`is_îr‹
()) {

269 
˚º
 << "l£ek:" << 
ídl
 << 
rc
 <<Éndl;

270 
_îr‹
 = 
åue
;

271 
	`W_COERCE
(
rc
);

274 if(
_check_Êag
){

279 if(
_block_size
 > (
off_t
)) {

280 
	`mem˝y
(
_buf
, &
_off£t
, (_offset));

285 i‡(
_rw_Êag
 == 'r' || _rw_flag == 'b') {

286 
rc
 = 
°hªad_t
::
	`ªad
(
_fd
, 
_buf
, 
_block_size
);

287 i‡(
rc
.
	`is_îr‹
()) {

288 
˚º
 << "ªad:" << 
ídl
 << 
rc
 <<Éndl;

289 
_îr‹
 = 
åue
;

290 
	`W_COERCE
(
rc
);

293 if(
_check_Êag
){

294 
off_t
 
check
;

295 
	`mem˝y
(&
check
, 
_buf
, (
_off£t
));

296 if(
check
 !
_off£t
) {

297 
˚º
 << "ªad check:Éx≥˘ed " << 
_off£t


298 << " gŸ " << 
check
 <<
ídl
;

302 i‡(
_rw_Êag
 == 'w' || _rw_flag == 'b') {

303 
rc
 = 
°hªad_t
::
	`wrôe
(
_fd
, 
_buf
, 
_block_size
);

304 i‡(
rc
.
	`is_îr‹
()) {

305 
˚º
 << "wrôe:" << 
ídl
 << 
rc
 <<Éndl;

306 
_îr‹
 = 
åue
;

307 
	`W_COERCE
(
rc
);

310 if(
u£_øndom
) {

311 
_off£t
 = (
off_t
Ë
gíî©‹
.
	`ønd
(Ë% 
_nblocks
;

312 
_off£t
 *
_block_size
;

314 
_off£t
 +
_block_size
;

316 
_tŸÆ_byãs
 +
_block_size
;

319 
timeEnd
 = 
°ime_t
::
	`now
();

321 i‡(
_rw_Êag
 == 'w' || _rw_flag == 'b') {

322 
	`W_COERCE
–
°hªad_t
::
	`fsync
(
_fd
) );

327 
cout
 << "finished I/O: "

328 << 
_block_˙t
 << " "

329 << 
›_«me
 << " op†o‡" << 
_block_size


331 << 
_tŸÆ_byãs
 << " bytesÅotal. "

332 << 
ídl
;

334 i‡(
_rw_Êag
 == 'b') {

335 
_block_˙t
 <<= 1;

338 
söãrvÆ_t
 
	`dñè
(
timeEnd
 - 
timeBegö
);

340 
cout
 << "TŸÆÅime: " << 
dñè
 << 
ídl
;

342 
f
 = (
_block_size
*
_block_˙t
Ë/ ()((
°ime_t
)
dñè
);

343 i‡(
f
 > 1024*1024)

344 
cout
 << "MB/£c: " << 
f
 / (1024*1024);

345 i‡(
f
 > 1024)

346 
cout
 << "KB/£c: " << 
f
 / 1024;

348 
cout
 << "byãs/£c: " << 
f
;

349 
cout
 << 
ídl
;

351 
	`W_COERCE
–
°hªad_t
::
	`˛o£
(
_fd
) );

352 
	`DBGTHRD
(<<"io_thread_t::runÉnding" );

353 
	}
}

356 
	$maö
(
¨gc
, ** 
¨gv
)

358 
	`FUNC
(
maö
);

359 
	`DBGTHRD
(<<"this is main");

361 
size_t
 
block_size
 = 8192;

362 
block_˙t
 = 1024;

363 
boﬁ
 
check_Êag
 = 
Ál£
;

364 
îr‹s
 = 0;

365 c⁄° * 
‚ame
 = 0;

366 
rw_Êag
 = 'r';

368 
c
;

369 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "dlks:n:¸wbRZS")Ë!
EOF
) {

370 
c
) {

372 
block_size
 = 
	`©oi
(
›èrg
);

375 
block_˙t
 = 
	`©oi
(
›èrg
);

378 
check_Êag
 = 
åue
;

381 
u£_øndom
 = 
åue
;

386 
rw_Êag
 = 
c
;

389 
øw_io
 = 
åue
;

392 
sync_io
 = 
åue
;

395 
îr‹s
++;

399 i‡(
›töd
 < 
¨gc
)

400 
‚ame
 = 
¨gv
[
›töd
];

402 
îr‹s
++;

404 i‡(
îr‹s
) {

405 
˚º
 << "Ußge: " << 
¨gv
[0]

412 << 
ídl
;

416 i‡(
u£_øndom
)

417 
gíî©‹
.
	`£ed
(
block_˙t
);

419 
w_rc_t
 
e
;

420 #ifde‡
HAVE_HUGETLBFS


421 
e
 = 
°hªad_t
::
	`£t_hugëlbfs_∑th
(
HUGETLBFS_PATH
);

422 i‡(
e
.
	`is_îr‹
()Ë
	`W_COERCE
(e);

424 * 
buf
 = 0;

425 
e
 = 
°hªad_t
::
	`£t_bufsize
(
block_size
, 
buf
);

426 i‡(
e
.
	`is_îr‹
()Ë
	`W_COERCE
(e);

429 
	`DBGTHRD
(<<"set_bufsize done");

432 
io_thªad_t
 
	`thr
(
rw_Êag
, 
check_Êag
, 
‚ame
, 
block_size
, 
block_˙t
, 
buf
);

434 
	`DBGTHRD
(<<"before fork");

435 
	`W_COERCE
–
thr
.
	`f‹k
() );

436 #i‡
W_DEBUG_LEVEL
 > 2

437 
˚º
 << "awaôög iÿthªad ... " << 
ídl
;

439 
	`W_COERCE
–
thr
.
	`joö
() );

440 
	`DBGTHRD
(<<"afterÅhr.wait");

442 i‡(!
thr
.
	`îr‹
()) {

443 
°hªad_t
::
	`dump_°©s
(
cout
);

446 
	`W_COERCE
(
°hªad_t
::
	`£t_bufsize
(0, 
buf
));

449 
	}
}

	@src/sthread/tests/mmap.cpp

30 
	~"w_deföes.h
"

35 
	~<w.h
>

36 
	~<°hªad.h
>

39 * 
	$åym≠
(

40 *
buf
,

41 
size_t
 
size


44 #ifde‡
HAVE_HUGETLBFS


45 
w_rc_t
 
e
;

46 
e
 = 
°hªad_t
::
	`£t_hugëlbfs_∑th
(
HUGETLBFS_PATH
);

47 i‡(
e
.
	`is_îr‹
()Ë
	`W_COERCE
(e);

49 
w_rc_t
 
rc
 = 
°hªad_t
::
	`£t_bufsize
(
size
, 
buf
, 
Ál£
);

50 if(
rc
.
	`is_îr‹
()) {

51 
˚º
 << "Te° faûed wôh sizê" << 
size


52 << " :Ñc" << 
rc


53 << 
ídl
;

54 
	`w_as£π1
(!
rc
.
	`is_îr‹
());

55  
NULL
;

57  
buf
;

58 
	}
}

60 
	$ã°_wrôe
(*
b
, 
size_t
 
s
)

65 
num∑ges
 = 
s
/
SM_PAGESIZE
;

66 
öt•î∑ge
 = 
SM_PAGESIZE
/();

67 
p
=0;Ö< 
num∑ges
;Ö++)

69 
i
=0; i< 
öt•î∑ge
; i++)

71 
off
 = 
p
*
SM_PAGESIZE
 + 
i
*();

72 *
èrgë
 = (*)(
b
+
off
);

73 *
èrgë
 = 0;

76 
˚º
 << "ã°_wrôêsize" << 
s
 << " suc˚ss" << 
ídl
;

77 
	}
}

79 
	$ã°
(
size_t
 
öput_size
)

82 
cout
 << "öpuàsizê" << (
öput_size
Ë<< 
ídl
;

83 *
b1
 = 
	`åym≠
(0, 
öput_size
);

84 if(
b1
) {

86 
	`ã°_wrôe
(
b1
, 
öput_size
);

87 
îr
 = 
°hªad_t
::
	`do_unm≠
();

88 
	`w_as£π0
(!
îr
);

96 
	}
}

99 
	#num
 7

	)

100 
	$maö
()

102 
size_t
 
sizes
[
num
] =

104 
	#MB
 1024*1024

	)

105 256*
MB
,

106 512*
MB
,

107 11*
MB
,

108 1*
MB
,

110 700*
MB
,

115 
e
=0;

117 
i
=0; i < 
num
; i++)

119 
cout
 << "-------------------------------------" << 
sizes
[
i
] << 
ídl
;

120 
e
 +
	`ã°
(
sizes
[
i
]);

122  
e
;

123 
	}
}

	@src/sthread/tests/pthread_test.cpp

30 
	~"w_deföes.h
"

37 
	~<±hªad.h
>

38 
	~<io°ªam
>

39 
	~<w_deföes.h
>

40 
	~<w.h
>

41 
	~<°hªad.h
>

43 
	~<limôs.h
>

45 
	~<uni°d.h
>

47 
	~"ma˝thªad_b¨rõr.h
"

49 
±hªad_b¨rõr_t
 
	gb
;

51 ˛as†
	csim∂e_thªad_t
 : 
public
 
°hªad_t
 {

52 
public
:

53 
	$sim∂e_thªad_t
() {};

54 
¥Ÿe˘ed
:

55 
	`run
();

56 
¥iv©e
:

57 
	}
};

59 
	~<io°ªam
>

60 
	~<s°ªam
>

61 
	~<w_°r°ªam.h
>

63 
__thªad
 
°rög°ªam
 *
_ß„_io
(
NULL
);

64 
	$ß„_io_öô
()

66 i‡(
_ß„_io
==
NULL
Ë_ß„_iÿ
√w
 
°rög°ªam
;

67 
	}
}

69 
	#SAFE_IO
(
XXXX
Ë{ 
	`ß„_io_öô
(); \

70 *
_ß„_io
 << 
XXXX
; \

71 
	`Ârötf
(
°dout
, 
_ß„_io
->
	`°r
().
	`c_°r
()); }

	)

73 
	gsim∂e_thªad_t
::
	$run
()

75 
	`SAFE_IO
–"IDs" << 
ídl


76 << "thªadÖå " << ::
hex
 << 
w_ba£_t
::
	`uöt8_t
(
this
Ë<< 
ídl


77 << "£l‡" << 
w_ba£_t
::
	`uöt8_t
(
	`±hªad_£lf
()Ë<< 
ídl


78 << "°hªad_t::id " << ::
dec
 << 
w_ba£_t
::
	`uöt8_t
(
this
->
id
Ë<< 
ídl


79 << 
ídl
 << 
Êush


81 
	`±hªad_b¨rõr_waô
(&
b
);

82 
	}
}

84 #unde‡
RUNTIMEMAX


85 #ifde‡
RUNTIMEMAX


86 * 
	$dummy
(*Ë{ 
NULL
;
	}
}

90 
	$maö
()

94 
èès_lock
 
lock
;

95 
cout
 << "Sizes: " << 
ídl
;

96 
cout
 << "±hªad_t: " << (
±hªad_t
Ë<< 
ídl
;

97 
cout
 << "lock._hﬁdî: " << (
lock
.
_hﬁdî
Ë<< 
ídl
;

98 
cout
 << "lock._hﬁdî.bôs: " << (
lock
.
_hﬁdî
.
bôs
Ë<< 
ídl
;

99 
	`w_as£π1
((
lock
.
_hﬁdî
.
h™dÀ
Ë=÷ock._hﬁdî.
bôs
));

100 
cout
 << 
ídl
;

102 
thªads
 = 2;

112 
m
;

113 
cout
 << "_POSIX_VERSION/_SC_VERSION ----------------------------- " <<
ídl
;

114 #ifde‡
_POSIX_VERSION


115 
cout
 << "POSIX_VERSION " << 
_POSIX_VERSION
 << 
ídl
;

117 #ifde‡
_SC_VERSION


118 
m
 = 
	`sysc⁄f
(
_SC_VERSION
);

119 
cout
 << "sysconf: _SC_VERSION " <<

120 
_SC_VERSION
 << 
ídl
;

123 
cout
 << "_POSIX2_VERSION/_SC_2_VERSION ----------------------------- " <<
ídl
;

124 #ifde‡
_POSIX2_VERSION


125 
cout
 << "POSIX2_VERSION " << 
_POSIX2_VERSION
 << 
ídl
;

127 #ifde‡
_SC_2_VERSION


128 
m
 = 
	`sysc⁄f
(
_SC_2_VERSION
);

129 
cout
 << "sysconf: _SC_2_VERSION " <<

130 
_SC_2_VERSION
 << 
ídl
;

133 
cout
 << "_XOPEN_VERSION/_SC_XOPEN_VERSION ----------------------------- " <<
ídl
;

134 #ifde‡
_XOPEN_VERSION


135 
cout
 << "XOPEN_VERSION " << 
_XOPEN_VERSION
 << 
ídl
;

137 #ifde‡
_SC_XOPEN_VERSION


138 
m
 = 
	`sysc⁄f
(
_SC_XOPEN_VERSION
);

139 
cout
 << "sysconf: _SC_XOPEN_VERSION " <<

140 
_SC_XOPEN_VERSION
 << 
ídl
;

143 
cout
 << "_POSIX_THREADS/_SC_THREADS ----------------------------- " <<
ídl
;

144 #ifde‡
_POSIX_THREADS


145 
cout
 << "_POSIX_THREADS " << 
_POSIX_THREADS
 << 
ídl
;

147 #ifde‡
_SC_THREADS


148 
m
 = 
	`sysc⁄f
(
_SC_THREADS
);

149 
cout
 << "sysconf: _SC_THREADS " <<

150 
_SC_THREADS
 << 
ídl
;

153 
cout
 << "_POSIX_THREAD_ATTR_STACKSIZE/_SC_THREAD_ATTR_STACKSIZE ----------------------------- " <<
ídl
;

154 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


155 
cout
 << "POSIX_THREAD_ATTR_STACKSIZE " << 
_POSIX_THREAD_ATTR_STACKSIZE
 << 
ídl
;

157 #ifde‡
_SC_THREAD_ATTR_STACKSIZE


158 
m
 = 
	`sysc⁄f
(
_SC_THREAD_ATTR_STACKSIZE
);

159 
cout
 << "sysconf: _SC_THREAD_ATTR_STACKSIZE " <<

160 
_SC_THREAD_ATTR_STACKSIZE
 << 
ídl
;

163 
cout
 << "_POSIX_THREAD_ATTR_STACKADDR/_SC_THREAD_ATTR_STACKADDR ----------------------------- " <<
ídl
;

164 #ifde‡
_POSIX_THREAD_ATTR_STACKADDR


165 
cout
 << "POSIX_THREAD_ATTR_STACKADDR " << 
_POSIX_THREAD_ATTR_STACKADDR
 << 
ídl
;

167 #ifde‡
_SC_THREAD_ATTR_STACKADDR


168 
m
 = 
	`sysc⁄f
(
_SC_THREAD_ATTR_STACKADDR
);

169 
cout
 << "sysconf: _SC_THREAD_ATTR_STACKADDR " <<

170 
_SC_THREAD_ATTR_STACKADDR
 << 
ídl
;

173 #ifde‡
_POSIX_BARRIERS


174 
cout
 << "POSIX_BARRIERS " << 
_POSIX_BARRIERS
 << 
ídl
;

176 #ifde‡
_POSIX_READER_WRITER_LOCKS


177 
cout
 << "POSIX_READER_WRITER_LOCKS " << 
_POSIX_READER_WRITER_LOCKS
 << 
ídl
;

180 #ifde‡
_POSIX_THREAD_THREADS_MAX


181 
cout
 << "POSIX_THREAD_THREADS_MAX " << 
_POSIX_THREAD_THREADS_MAX
 << 
ídl
;

184 #ifde‡
PTHREAD_THREADS_MAX


185 
thªads
 = 
PTHREADS_MAX
;

186 
cout
 << "limits.h: maximumÖthreadsÖerÖrocess is " <<

187 
thªads
 << 
ídl
;

189 
cout


191 << 
ídl
;

193 #ifde‡
_SC_THREAD_THREADS_MAX


194 
m
 = 
	`sysc⁄f
(
_SC_THREAD_THREADS_MAX
);

195 
cout
 << "limits.h: maximumÖthreadsÖerÖrocess is " <<

196 
m
 << 
ídl
;

197 
thªads
 = (
m
);

199 
cout


201 << 
ídl
;

206 #ifde‡
RUNTIMEMAX


207 
thªads
=0;

208 
åue
) {

209 
thªads
++;

211 
±hªad_t
 
thr
;

212 
e

	`±hªad_¸óã
(&
thr
, 
NULL
, 
dummy
, NULL);

213 if(
e
!=0) {

214 if(
e
==
EAGAIN
) {

215 
cout
 << "ru¡ime: maximumÖthªad†" << 
thªads
 << 
ídl
;

218 
	`≥º‹
("perror ");

219 
cout
 << "ERROR " << 
e
 << 
ídl
;

220 
cout
 << "thªad†" << 
thªads
 << 
ídl
;

228 
thªads
=2;

230 
	`±hªad_b¨rõr_öô
(&
b
, 
NULL
, 
thªads
+1);

231 
°hªad_t
 **
t
 = 
√w
 sthªad_à*[
thªads
];

233 
i
 = 0; i < 
thªads
; i++)

234 
t
[
i
] = 
√w
 
	`sim∂e_thªad_t
();

236 
i
 = 0; i < 
thªads
; i++)

237 
	`w_as£π1
(
t
[
i
] !
NULL
);

239 
i
 = 0; i < 
thªads
; i++)

240 
t
[
i
]->
	`f‹k
();

246 c⁄° *
¥om±
 = "Hitány key ";

247 
	`SAFE_IO
(

248 
¥om±
 << 
ídl
 << 
Êush
;

250 
buf
[1000];

251 
cö
 >> 
buf
;

254 
	`±hªad_b¨rõr_waô
(&
b
);

256 
i
 = 0; i < 
thªads
; i++)

257 
t
[
i
]->
	`joö
();

259 
	`±hªad_b¨rõr_de°roy
(&
b
);

262 
	}
}

	@src/sthread/tests/thread1.cpp

30 
	~"w_deföes.h
"

34 
	~<w_debug.h
>

35 
	~<c°dlib
>

36 
	~<ˇs£π
>

37 
	~<˘ime
>

39 
	~<w.h
>

40 
	~<°hªad.h
>

41 
	~<°hªad_°©s.h
>

42 
	~<w_gë›t.h
>

43 
	~<io°ªam
>

44 
	~<w_°r°ªam.h
>

47 
	#DeÁu…NumThªads
 8

	)

49 
	#DeÁu…P⁄gTimes
 10000

	)

50 
	#LoˇlMsgP⁄gTimes
 1000000

	)

51 
	#RemŸeMsgP⁄gTimes
 100000

	)

53 
	#OUT
 { 
w_o°r°ªam
 
_out
; 
	)
_out

54 
	#FLUSHOUT
 \

55 
	`Ârötf
(
°dout
, "%s", 
_out
.
	`c_°r
()); \

56 
	`fÊush
(
°dout
); \

57 
	`w_ª£t_°r°ªam
(
_out
); }

	)

59 
boﬁ
 
	gDumpInThªads
 = 
Ál£
;

61 ˛as†
	cw‹kî_thªad_t
 : 
public
 
°hªad_t
 {

62 
public
:

63 
w‹kî_thªad_t
(
id
);

64 
	m¥Ÿe˘ed
:

65 
vútuÆ
 
run
();

66 
	m¥iv©e
:

67 
w‹k_id
;

71 
˛ass
 
	gp⁄g_thªad_t
;

73 
	spög_p⁄g_t
 {

74 
	mwho£ShŸ
;

75 
±hªad_muãx_t
 
	mtheBÆl
;

76 
±hªad_c⁄d_t
 
	m∑ddÀ
[2];

78 
p⁄g_thªad_t
 *
	mpög
;

79 
p⁄g_thªad_t
 *
	mp⁄g
;

81 
pög_p⁄g_t
(Ë: 
who£ShŸ
(0), 
pög
(0), 
p⁄g
(0) {

82 
DO_PTHREAD
(
±hªad_muãx_öô
(&
theBÆl
, 
NULL
));

83 
DO_PTHREAD
(
±hªad_c⁄d_öô
(&
∑ddÀ
[0], 
NULL
));

84 
DO_PTHREAD
(
±hªad_c⁄d_öô
(&
∑ddÀ
[1], 
NULL
));

89 ˛as†
	cwaô_f‹_t
 {

90 
±hªad_muãx_t
 
	m_lock
;

91 
±hªad_c⁄d_t
 
	m_d⁄e
;

93 
	mex≥˘ed
;

94 
	mhave
;

96 
	mpublic
:

97 
	$waô_f‹_t
(
ex≥˘ög
Ë: 
	`ex≥˘ed
”x≥˘ög), 
	$have
(0) {

98 
	`DO_PTHREAD
(
	`±hªad_muãx_öô
(&
_lock
, 
NULL
));

99 
	`DO_PTHREAD
(
	`±hªad_c⁄d_öô
(&
_d⁄e
, 
NULL
));

101 
	`waô
();

102 
	`d⁄e
();

103 
	}
};

106 ˛as†
	cp⁄g_thªad_t
 : 
public
 
°hªad_t
 {

107 
public
:

108 
p⁄g_thªad_t
(
pög_p⁄g_t
 &
game
, 
_id
, 
waô_f‹_t
 &
nŸe
);

110 
	m¥Ÿe˘ed
:

111 
run
();

113 
	m¥iv©e
:

114 
pög_p⁄g_t
 &
game
;

115 
	mid
;

116 
	mwaô_f‹_t
 &
	mnŸe
;

120 ˛as†
	ctimî_thªad_t
 : 
public
 
°hªad_t
 {

121 
public
:

122 
timî_thªad_t
();

124 
	m¥Ÿe˘ed
:

125 
run
();

129 ˛as†
	covîÊow_thªad_t
 : 
public
 
°hªad_t
 {

130 
public
:

131 
	$ovîÊow_thªad_t
(Ë: 
	`°hªad_t
(
t_ªguœr
, "overflow")

134 
¥Ÿe˘ed
:

135 
	`run
();

136 
	`ªcur£
(
ovîÊow
, *
•0
, *
œ°
);

138 íum { 
ovîÊowFømeSize
 = 8192 
	}
};

141 ˛as†
	cîr‹_thªad_t
 : 
public
 
°hªad_t
 {

142 
public
:

143 
	$îr‹_thªad_t
(Ë: 
	`°hªad_t
(
t_ªguœr
, "error")

146 
¥Ÿe˘ed
:

147 
	`run
();

148 
	}
};

151 
msgP⁄gFunc
(*);

152 
ªmŸeP⁄gFunc
(*);

156 
	gNumThªads
 = 
DeÁu…NumThªads
;

157 
	gP⁄gTimes
 = 
DeÁu…P⁄gTimes
;

158 
	gSÀïTime
 = 10000;

159 
	gP⁄gGames
 = 1;

160 
	gSèckOvîÊow
 = 0xa00110;

162 
boﬁ
 
	gDumpThªads
 = 
Ál£
;

163 
boﬁ
 
	gTe°As£π
 = 
Ál£
;

164 
boﬁ
 
	gTe°F©Æ
 = 
Ál£
;

165 
boﬁ
 
	gTe°Eº‹InThªad
 = 
åue
;

166 
boﬁ
 
	gvîbo£
 = 
åue
;

168 
w‹kî_thªad_t
 **
	gw‹kî
;

169 *
	gack
;

172 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

174 
îr‹s
 = 0;

175 
c
;

177 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "a‚:p:s:g:o:xXdDTv")Ë!
EOF
) {

178 
c
) {

180 
NumThªads
 = 
	`©oi
(
›èrg
);

183 
P⁄gTimes
 = 
	`©oi
(
›èrg
);

186 
SÀïTime
 = 
	`©oi
(
›èrg
);

189 
P⁄gGames
 = 
	`©oi
(
›èrg
);

192 
SèckOvîÊow
 = 
	`©oi
(
›èrg
);

195 
DumpThªads
 = 
åue
;

198 
DumpInThªads
 = 
åue
;

201 
Te°As£π
 = 
åue
;

204 
Te°F©Æ
 = 
åue
;

207 
Te°Eº‹InThªad
 = 
åue
;

210 
vîbo£
 = 
åue
;

213 
îr‹s
++;

217 i‡(
îr‹s
) {

218 
˚º


220 << 
¨gv
[0]

229 << 
ídl
;

232  
îr‹s
 ? -1 : 
›töd
;

233 
	}
}

236 
	$∂ayP⁄g
()

238 
OUT
 << "∂ayP⁄g" << 
ídl
; 
FLUSHOUT
;

240 
i
;

241 
°ime_t
 
°¨tTime
, 
ídTime
;

242 
pög_p⁄g_t
 *
games
;

244 
games
 = 
√w
 
pög_p⁄g_t
[
P⁄gGames
];

245 i‡(!
games
)

246 
	`W_FATAL
(
fcOUTOFMEMORY
);

248 
waô_f‹_t
 
	`imd⁄e
(
P⁄gGames
 * 2);

250 
i
 = 0; i < 
P⁄gGames
; i++) {

252 
games
[
i
].
p⁄g
 = 
√w
 
	`p⁄g_thªad_t
(games[i], 1, 
imd⁄e
);

253 
	`w_as£π1
(
games
[
i
].
p⁄g
);

255 
games
[
i
].
pög
 = 
√w
 
	`p⁄g_thªad_t
(games[i], 0, 
imd⁄e
);

256 
	`w_as£π1
(
games
[
i
].
pög
);

258 
OUT
 << "f‹kögÖ⁄g " << 
i
 << 
ídl
; 
FLUSHOUT
;

259 
	`W_COERCE
(
games
[
i
].
p⁄g
->
	`f‹k
());

260 
OUT
 << "f‹kögÖög " << 
i
 << 
ídl
; 
FLUSHOUT
;

261 
	`W_COERCE
(
games
[
i
].
pög
->
	`f‹k
());

265 
°¨tTime
 = 
°ime_t
::
	`now
();

266 
OUT
 << "waôög " << 
ídl
; 
FLUSHOUT
;

267 
imd⁄e
.
	`waô
();

268 
ídTime
 = 
°ime_t
::
	`now
();

269 
OUT
 << "d⁄ê" << 
ídl
; 
FLUSHOUT
;

271 
OUT
 << (
söãrvÆ_t
)((
ídTime
-
°¨tTime
Ë/ (
P⁄gGames
*
P⁄gTimes
))

272 << "ÖîÖög." << 
ídl
;

273 
FLUSHOUT
;

276 
i
 = 0; i < 
P⁄gGames
; i++) {

277 
	`W_COERCE
(
games
[
i
].
p⁄g
->
	`joö
());

278 i‡(
DumpThªads
) {

279 
OUT
 << "P⁄g Thªad D⁄e:" << 
ídl


280 << *
games
[
i
].
p⁄g
 << 
ídl
;

281 
FLUSHOUT
;

283 
dñëe
 
games
[
i
].
p⁄g
;

284 
games
[
i
].
p⁄g
 = 0;

286 
	`W_COERCE
(
games
[
i
].
pög
->
	`joö
());

287 i‡(
DumpThªads
) {

288 
OUT
 << "Pög Thªad D⁄e:" << 
ídl


289 << *
games
[
i
].
pög
 << 
ídl
;

290 
FLUSHOUT
;

292 
dñëe
 
games
[
i
].
pög
;

293 
games
[
i
].
pög
 = 0;

295 
dñëe
 [] 
games
;

296 
	}
}

298 
	$doEº‹Te°s
()

300 i‡(
Te°As£π
) {

301 
OUT
 << 
ídl
 << "** Generatingánássertion failure." <<Éndl;

302 
FLUSHOUT
;

303 
	`w_as£π1
(
Ál£
);

306 i‡(
Te°F©Æ
) {

307 
OUT
 << 
ídl
 << "** Generatingá fatalÉrror." <<Éndl;

308 
FLUSHOUT
;

309 
	`W_FATAL
(
fcINTERNAL
);

311 
	}
}

313 
	$maö
(
¨gc
, * 
¨gv
[])

315 
i
;

317 
√xt_¨g
 = 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

318 i‡(
√xt_¨g
 < 0)

321 i‡(
NumThªads
) {

322 
ack
 = 
√w
 [
NumThªads
];

323 i‡(!
ack
)

324 
	`W_FATAL
(
fcOUTOFMEMORY
);

326 
w‹kî
 = 
√w
 
w‹kî_thªad_t
 *[
NumThªads
];

327 i‡(!
w‹kî
)

328 
	`W_FATAL
(
fcOUTOFMEMORY
);

331 
i
=0; i<
NumThªads
; ++i) {

332 
OUT
 << "¸ótög i" << 
i
 << 
ídl
; 
FLUSHOUT
;

333 
ack
[
i
] = 0;

334 
w‹kî
[
i
] = 
√w
 
	`w‹kî_thªad_t
(i);

335 
	`w_as£π1
(
w‹kî
[
i
]);

336 
	`W_COERCE
(
w‹kî
[
i
]->
	`f‹k
());

337 
OUT
 << "f‹ked i" << 
i
 << 
ídl
; 
FLUSHOUT
;

340 i‡(
DumpThªads
) {

341 
OUT
 << "";

342 
°hªad_t
::
	`dum∑Œ
("dump", 
_out
);

343 
FLUSHOUT
;

346 ::
	`u¶ìp
(2);

348 
i
=0; i<
NumThªads
; ++i) {

349 
OUT
 << "joöög i" << 
i
 << 
ídl
; 
FLUSHOUT
;

351 
	`W_COERCE
–
w‹kî
[
i
]->
	`joö
() );

352 
	`w_as£π0
(
ack
[
i
]);

353 i‡(
DumpThªads
) {

354 
OUT
 << "Thread Done:"

355 << 
ídl
 << *
w‹kî
[
i
] <<Éndl;

356 
FLUSHOUT
;

358 
OUT
 << "dñëögÅhªad i" << 
i
 << 
ídl
; 
FLUSHOUT
;

359 
dñëe
 
w‹kî
[
i
];

360 
w‹kî
[
i
] = 0;

363 
dñëe
 [] 
w‹kî
;

364 
dñëe
 [] 
ack
;

367 ::
	`u¶ìp
(2);

369 i‡(
P⁄gTimes
 || 
P⁄gGames
)

370 
	`∂ayP⁄g
();

372 ::
	`u¶ìp
(2);

374 i‡(
SÀïTime
) {

375 
OUT
 << "SÀïTimê" << 
SÀïTime
 << 
ídl
; 
FLUSHOUT
;

376 
timî_thªad_t
* 
timî_thªad
 = 
√w
Åimer_thread_t;

377 
	`w_as£π0
(
timî_thªad
);

378 
	`W_COERCE
–
timî_thªad
->
	`f‹k
() );

379 
OUT
 << "TimîÅhªad f‹ked " << 
ídl
; 
FLUSHOUT
;

380 
	`W_COERCE
–
timî_thªad
->
	`joö
() );

381 
OUT
 << "TimîÅhªad joöed " << 
ídl
; 
FLUSHOUT
;

382 i‡(
DumpThªads
) {

383 
OUT
 << "Timî Thªad D⁄e:" << 
ídl


384 << *
timî_thªad
 << 
ídl
;

385 
FLUSHOUT
;

387 
dñëe
 
timî_thªad
;

390 i‡(
SèckOvîÊow
) {

391 
ovîÊow_thªad_t
 *
ovîÊow
 = 
√w
 overflow_thread_t;

392 
	`w_as£π0
(
ovîÊow
);

393 
OUT
 << "f‹kög ovîÊow_thªad_à" << 
ídl
; 
FLUSHOUT
;

394 
	`W_COERCE
(
ovîÊow
->
	`f‹k
());

395 
	`W_COERCE
(
ovîÊow
->
	`joö
());

396 
dñëe
 
ovîÊow
;

399 i‡(
Te°As£π
 || 
Te°F©Æ
) {

400 i‡(
Te°Eº‹InThªad
) {

401 
îr‹_thªad_t
 *
îr‹
 = 
√w
Érror_thread_t;

402 i‡(!
îr‹
) {

403 
	`W_FATAL
(
fcOUTOFMEMORY
);

405 
OUT
 << "f‹kögÉº‹_thªad_à" << 
ídl
; 
FLUSHOUT
;

406 
	`W_COERCE
(
îr‹
->
	`f‹k
());

407 
	`W_COERCE
(
îr‹
->
	`joö
());

408 
dñëe
 
îr‹
;

411 
OUT
 << "Eº‹†ã°ög i¿maöÅhªad" << 
ídl
;

412 
FLUSHOUT
;

413 
	`doEº‹Te°s
();

417 i‡(
vîbo£
) {

418 
°hªad_t
::
	`dump_°©s
(
cout
);

422 
	}
}

426 
	gw‹kî_thªad_t
::
	$w‹kî_thªad_t
(
_id
)

427 : 
	$w‹k_id
(
_id
)

429 
w_o°r°ªam_buf
 
	`s
(40);

430 
s
 << "w‹kî[" << 
_id
 << "]" << 
íds
;

431 
	`ª«me
(
s
.
	`c_°r
());

432 
	}
}

434 
	gw‹kî_thªad_t
::
	$run
()

436 
OUT
 << "Hñlo, w‹ld from " << 
w‹k_id
 << 
ídl
;

437 if(
	`isSèckOK
(
__FILE__
, 
__LINE__
)) {

438 
_out
 << " sèck i†ok " << 
w‹k_id
 << 
ídl
;

440 
FLUSHOUT
;

442 
ack
[
w‹k_id
] = 1;

444 
OUT
 << *
this
 << 
ídl
;

445 
_out
 << "Good-bye, w‹ld from " << 
w‹k_id
 << 
ídl
;

446 
FLUSHOUT
;

447 
	}
}

450 
	gp⁄g_thªad_t
::
	$p⁄g_thªad_t
(
pög_p⁄g_t
 &
which_game
,

451 
_id
,

452 
waô_f‹_t
 &
nŸify_me
)

453 : 
	`game
(
which_game
), 
	`id
(
_id
), 
	$nŸe
(
nŸify_me
)

455 
w_o°r°ªam_buf
 
	`s
(128);

456 
	`W_FORM2
(
s
,("p⁄g[%d]", 
id
));

457 
s
 << 
íds
;

458 
	`ª«me
(
s
.
	`c_°r
());

459 
	}
}

462 
	gp⁄g_thªad_t
::
	$run
()

464 
i
;

465 
£lf
 = 
id
;

468 
	`CRITICAL_SECTION
(
cs
, 
game
.
theBÆl
);

469 
i
=0; i<
P⁄gTimes
; ++i){

470 
game
.
who£ShŸ
 !
£lf
){

471 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
game
.
∑ddÀ
[
£lf
], &game.
theBÆl
));

473 
game
.
who£ShŸ
 = 1-
£lf
;

474 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
game
.
∑ddÀ
[1-
£lf
]));

480 
nŸe
.
	`d⁄e
();

482 i‡(
DumpInThªads
) {

483 
OUT
 << *
this
 << 
ídl
;

484 
FLUSHOUT
;

486 
	}
}

489 
	gtimî_thªad_t
::
	$timî_thªad_t
()

490 : 
	`°hªad_t
(
t_ªguœr
, "timer")

492 
	}
}

495 
	gtimî_thªad_t
::
	$run
()

497 
OUT
 << "timeThread goingÅo sleep ";

498 
	`W_FORM2
(
_out
,("f‹ %d ms\n", 
SÀïTime
));

500 
°hªad_t
::
	`¶ìp
(
SÀïTime
);

501 
_out
 << "timeThªadáwakíedánd dõ" << 
ídl
;

502 i‡(
DumpInThªads
) {

503 
_out
 << *
this
 << 
ídl
;

505 
FLUSHOUT
;

506 
	}
}

513 
	govîÊow_thªad_t
::
	$ªcur£
(
ovîÊow
, *
•0
, *
œ°
)

517 
⁄_°ack
[
ovîÊowFømeSize
];

518 #ifde‡
PURIFY


519 
	`mem£t
(
⁄_°ack
, '\0', 
ovîÊowFømeSize
);

522 
œ°
 =Üast;

524 
i
;

526 
i
 = 
⁄_°ack
[0];

529 
i
 = 0; i < 10; i++)

530 
	`yõld
();

532 
±rdiff_t
 
dïth
 = (*Ë
•0
 - 
⁄_°ack
;

533 i‡(
dïth
 < 0)

534 
dïth
 = -depth;

536 
OUT
 << "Recur£Åÿ" << 
dïth
 << 
ídl
 << 
Êush
;

537 
FLUSHOUT
;

539 i‡(()
dïth
 < 
ovîÊow
) {

540 
boﬁ
 
ok
 = 
	`isSèckFømeOK
(
ovîÊowFømeSize
);

541 i‡(!
ok
) {

542 
OUT
 << "wûl_ovîÊow say†yóh!" << 
ídl
;

543 
FLUSHOUT
;

547 
	`ªcur£
(
ovîÊow
, 
•0
, 
⁄_°ack
);

549 
	}
}

552 
	govîÊow_thªad_t
::
	$run
()

554 #i‡0 && 
	`deföed
(
__GNUG__
)

557 
⁄_°ack
[
SèckOvîÊow
];

558 
i
;

560 
i
 = 
⁄_°ack
[0];

563 
i
 = 0; i < 100; i++)

564 
	`yõld
();

566 
•0
;

567 
	`ªcur£
(
SèckOvîÊow
, &
•0
, &sp0);

569 
	}
}

572 
	gîr‹_thªad_t
::
	$run
()

574 
OUT
 << "Eº‹ Te°ög Thªad Ru¬ög" << 
ídl
;

575 
FLUSHOUT
;

576 
	`doEº‹Te°s
();

577 
	}
}

580 
	gwaô_f‹_t
::
	$waô
()

582 
	`CRITICAL_SECTION
(
cs
, 
_lock
);

583 
have
 < 
ex≥˘ed
) {

584 
	`DO_PTHREAD
(
	`±hªad_c⁄d_waô
(&
_d⁄e
, &
_lock
));

586 
	}
}

588 
	gwaô_f‹_t
::
	$d⁄e
()

590 
	`CRITICAL_SECTION
(
cs
, 
_lock
);

591 
have
++;

592 i‡(
have
 >
ex≥˘ed
) {

593 
	`DO_PTHREAD
(
	`±hªad_c⁄d_sig«l
(&
_d⁄e
));

595 
	}
}

	@src/sthread/tests/thread2.cpp

30 
	~"w_deföes.h
"

34 
	~<w.h
>

35 
	~<os_ty≥s.h
>

36 
	~<os_f˙é.h
>

38 
	~<°hªad.h
>

39 
	~<°hªad_°©s.h
>

40 
	~<°hªad_vèbÀ_íum.h
>

41 
	~<w_gë›t.h
>

42 
	~<io°ªam
>

43 
	~<w_°r°ªam.h
>

45 #i‚de‡
IO_DIR


46 
	#IO_DIR
 "/v¨/tmp"

	)

50 ˛as†
	cio_thªad_t
 : 
public
 
°hªad_t
 {

51 
public
:

52 
io_thªad_t
(
i
, *
bf
);

54 
	m¥Ÿe˘ed
:

55 
run
();

57 
	m¥iv©e
:

58 
idx
;

59 *
	mbuf
;

63 ˛as†
	c˝u_thªad_t
 : 
public
 
°hªad_t
 {

64 
public
:

65 
˝u_thªad_t
(
i
);

67 
	m¥Ÿe˘ed
:

68 
run
();

70 
	m¥iv©e
:

71 
idx
;

76 
io_thªad_t
 **
	gioThªad
;

77 
˝u_thªad_t
 **
	g˝uThªad
;

79 
	gNumIOs
 = 100;

80 
	gNumThªads
 = 5;

81 
	gBufSize
 = 1024;

82 
	gvec_size
 = 0;

83 
boﬁ
 
	gøw_io
 = 
Ál£
;

84 
boﬁ
 
	gsync_io
 = 
åue
;

85 
boﬁ
 
	ghi°ogøms
 = 
Ál£
;

86 
boﬁ
 
	gvîbo£
 = 
Ál£
;

88 c⁄° * 
	gio_dú
 = 
IO_DIR
;

91 
	$make_vec
(*
buf
, 
size
, 
vec_size
,

92 
°hªad_t
::
iovec_t
 *
vec
, c⁄° 
iovec_max
)

94 
¶Ÿ
 = 0;

97 i‡(
vec_size
 == 0)

98 
vec_size
 = 
size
;

100 
size
 > 
vec_size
 && 
¶Ÿ
 < 
iovec_max
-1) {

101 
vec
[
¶Ÿ
].
iov_Àn
 = 
vec_size
;

102 
vec
[
¶Ÿ
].
iov_ba£
 = 
buf
;

103 
buf
 +
vec_size
;

104 
size
 -
vec_size
;

105 
¶Ÿ
++;

107 i‡(
size
) {

108 
vec
[
¶Ÿ
].
iov_Àn
 = 
size
;

109 
vec
[
¶Ÿ
].
iov_ba£
 = 
buf
;

110 
¶Ÿ
++;

113  
¶Ÿ
;

114 
	}
}

118 
	gio_thªad_t
::
	$io_thªad_t
(
i
, *
bf
)

120 
	`°hªad_t
(
t_ªguœr
),

121 
	`idx
(
i
),

122 
	$buf
(
bf
)

124 
w_o°r°ªam_buf
 
	`s
(40);

126 
s
 << "io[" << 
idx
 << "]" << 
íds
;

127 
	`ª«me
(
s
.
	`c_°r
());

128 
	}
}

131 
	gio_thªad_t
::
	$run
()

133 
cout
 << 
	`«me
() << ": started: "

134 << 
NumIOs
 << " I/Os "

135 << 
ídl
;

137 
w_o°r°ªam_buf
 
	`f
(40);

139 
f
 << 
io_dú
 << '/' << "°hªad." << 
	`gëpid
(Ë<< '.' << 
idx
 << 
íds
;

140 c⁄° *
‚ame
 = 
f
.
	`c_°r
();

142 
fd
;

143 
w_rc_t
 
rc
;

144 
Êags
 = 
OPEN_RDWR
 | 
OPEN_CREATE
;

146 i‡(
øw_io
)

147 
Êags
 |
OPEN_RAW
;

148 i‡(
sync_io
)

149 
Êags
 |
OPEN_SYNC
;

151 
rc
 = 
°hªad_t
::
	`›í
(
‚ame
, 
Êags
, 0666, 
fd
);

152 i‡(
rc
.
	`is_îr‹
()) {

153 
˚º
 << "›í " << 
‚ame
 << ":" << 
ídl
 << 
rc
 <<Éndl;

154 
	`W_COERCE
(
rc
);

157 
i
;

158 
i
 = 0; i < 
NumIOs
; i++) {

159 
°hªad_t
::
iovec_t
 
vec
[
iovec_max
];

160 
˙t
;

161 
j
 = 0; j < 
BufSize
; j++)

162 
buf
[
j
] = (Ë
i
;

164 
˙t
 = 
	`make_vec
(
buf
, 
BufSize
, 
vec_size
, 
vec
, 
iovec_max
);

167 
rc
 = 
°hªad_t
::
	`wrôev
(
fd
, 
vec
, 
˙t
);

168 i‡(
rc
.
	`is_îr‹
()) {

169 
˚º
 << "wrôe:" << 
ídl
 << 
rc
 <<Éndl;

170 
	`W_COERCE
(
rc
);

176 
rc
 = 
°hªad_t
::
	`l£ek
(
fd
, 0, 
SEEK_AT_SET
);

177 i‡(
rc
.
	`is_îr‹
()) {

178 
˚º
 << "l£ek:" << 
ídl
 << 
rc
 <<Éndl;

179 
	`W_COERCE
(
rc
);

183 
i
 = 0; i < 
NumIOs
; i++) {

184 
rc
 = 
°hªad_t
::
	`ªad
(
fd
, 
buf
, 
BufSize
);

185 i‡(
rc
.
	`is_îr‹
()) {

186 
˚º
 << "ªad:" << 
ídl
 << 
rc
 <<Éndl;

187 
	`W_COERCE
(
rc
);

189 
j
 = 0; j < 
BufSize
; j++) {

190 i‡(()
buf
[
j
] !()
i
) {

191 
cout
 << 
	`«me
() << ":Ñead bad data";

192 
	`W_FORM2
(
cout
,(" (page %dÉxpected %d got %d\n",

193 
i
, i, 
buf
[
j
]));

194 
	`W_FATAL
(
fcINTERNAL
);

200 
	`W_COERCE
–
°hªad_t
::
	`fsync
(
fd
) );

202 
	`W_COERCE
–
°hªad_t
::
	`˛o£
(
fd
) );

205 (Ë::
	`u∆ök
(
‚ame
);

206 
	}
}

208 
	$¥öt_hi°ogøms
(
o°ªam
 &
o
)

210 
vèbÀ_t
 
t
;

211 i‡(
°hªad_t
::
	`cﬁÀ˘
(
t
, 
åue
)<0)

212 
o
 << "THREADS:Éº‹" << 
ídl
;

214 
o
 << "THREAD " <<
ídl
;

215 
t
.
›î©‹
<<(
o
);

218 
o
 << "-----------------" << 
ídl
;

220 
	}
}

223 
	$maö
(
¨gc
, **
¨gv
)

225 
c
;

226 
îr‹s
 = 0;

227 c⁄° *
s
;

229 
s
 = 
	`gëív
("TMPDIR");

230 i‡(
s
 && *s)

231 
io_dú
 = 
s
;

233 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "i:n:b:t:d:klvV:hRS")Ë!
EOF
) {

234 
c
) {

237 
NumIOs
 = 
	`©oi
(
›èrg
);

240 
BufSize
 = 
	`©oi
(
›èrg
);

243 
NumThªads
 = 
	`©oi
(
›èrg
);

246 
io_dú
 = 
›èrg
;

249 
øw_io
 = 
åue
;

252 
sync_io
 = 
Ál£
;

255 
vec_size
 = 
	`©oi
(
›èrg
);

258 
vîbo£
 = 
åue
;

261 
hi°ogøms
 = 
åue
;

264 
îr‹s
++;

268 i‡(
îr‹s
) {

269 
˚º
 << "usage: "

270 << 
¨gv
[0]

277 << 
ídl
;

282 
w_rc_t
 
e
;

283 #ifde‡
HAVE_HUGETLBFS


284 
e
 = 
°hªad_t
::
	`£t_hugëlbfs_∑th
(
HUGETLBFS_PATH
);

285 i‡(
e
.
	`is_îr‹
()Ë
	`W_COERCE
(e);

287 *
buf
;

288 
e
 = 
°hªad_t
::
	`£t_bufsize
(
BufSize
 * 
NumThªads
, 
buf
);

289 
	`W_COERCE
(
e
);

290 
	`w_as£π1
(
buf
 != 0);

292 
cout
 << "Num Thªad†" << 
NumThªads
 << 
ídl
;

294 
ioThªad
 = 
√w
 
io_thªad_t
 *[
NumThªads
];

295 i‡(!
ioThªad
)

296 
	`W_FATAL
(
fcOUTOFMEMORY
);

298 
i
;

299 
i
 = 0; i < 
NumThªads
; i++) {

300 
ioThªad
[
i
] = 
√w
 
	`io_thªad_t
(i, 
buf
 + i*
BufSize
);

301 i‡(!
ioThªad
[
i
])

302 
	`W_FATAL
(
fcOUTOFMEMORY
);

306 
i
 = 0; i < 
NumThªads
; i++)

307 
	`W_COERCE
(
ioThªad
[
i
]->
	`f‹k
());

310 i‡(
hi°ogøms
)

311 
	`¥öt_hi°ogøms
(
cout
);

313 
i
 = 0; i < 
NumThªads
; i++)

314 
	`W_COERCE
–
ioThªad
[
i
]->
	`joö
() );

317 
i
 = 0; i < 
NumThªads
; i++Ë
dñëe
 
ioThªad
[i];

318 
dñëe
 [] 
ioThªad
;

319 
°hªad_t
::
	`dump_°©s
(
cout
);

320 
	`W_COERCE
(
°hªad_t
::
	`£t_bufsize
(0, 
buf
));

322 
	}
}

	@src/sthread/tests/thread3.cpp

30 
	~"w_deföes.h
"

39 
	~<ˇs£π
>

40 
	~<w_gë›t.h
>

42 
	~<w.h
>

43 
	~<°hªad.h
>

45 
	~<io°ªam
>

46 
	~<s°ªam
>

47 
	~<iom™ù
>

49 
__thªad
 
°rög°ªam
 *
_ß„_io
(
NULL
);

50 
	$ß„_io_öô
()

52 i‡(
_ß„_io
==
NULL
Ë_ß„_iÿ
√w
 
°rög°ªam
;

53 
	}
}

55 
	#SAFE_IO
(
XXXX
Ë{ 
	`ß„_io_öô
(); \

56 *
_ß„_io
 << 
XXXX
; \

57 
	`Ârötf
(
°dout
, 
_ß„_io
->
	`°r
().
	`c_°r
()); }

	)

59 ˛as†
	cÊﬂt_thªad_t
 : 
public
 
°hªad_t
 {

60 
public
:

61 
Êﬂt_thªad_t
(
fid
);

62 
	m¥Ÿe˘ed
:

63 
vútuÆ
 
run
();

64 
	m¥iv©e
:

65 
id
;

68 ˛as†
	cöt_thªad_t
 : 
public
 
°hªad_t
 {

69 
public
:

70 
öt_thªad_t
(
fid
);

71 
	m¥Ÿe˘ed
:

72 
vútuÆ
 
run
();

73 
	m¥iv©e
:

74 
id
;

77 
	gÊﬂt_thªad_t
::
	$Êﬂt_thªad_t
(
fid
)

78 : 
	$id
(
fid
)

80 
w_o°r°ªam_buf
 
	`s
(40);

81 
s
 << "Êﬂt[" << 
id
 << "]" << 
íds
;

82 
	`ª«me
(
s
.
	`c_°r
());

83 
	}
}

86 
	göt_thªad_t
::
	$öt_thªad_t
(
fid
)

87 : 
	$id
(
fid
)

89 
w_o°r°ªam_buf
 
	`s
(40);

90 
s
 << "öt[" << 
id
 << "]" << 
íds
;

91 
	`ª«me
(
s
.
	`c_°r
());

92 
	}
}

95 
	gNumFlﬂtThªads
 = 4;

96 
	gNumI¡Thªads
 = 4;

97 
boﬁ
 
	gmix_ô_up
 = 
Ál£
;

98 
boﬁ
 
	gvîbo£
 = 
Ál£
;

100 
∑r£_¨gs
(, **);

102 *
	gack
;

103 
°hªad_t
 **
	gw‹kî
;

105 
	$h¨ve°
(
thªads
)

107 
i
;

109 
i
=0; i < 
thªads
; ++i){

110 
	`W_COERCE
–
w‹kî
[
i
]->
	`joö
() );

111 i‡(
vîbo£
) {

112 
	`SAFE_IO
–"Föished: " << 
ídl
 << *
w‹kî
[
i
] <<Éndl);

115 
	`w_as£π1
(
ack
[
i
]);

116 
dñëe
 
w‹kî
[
i
];

118 
	}
}

120 
	$maö
(
¨gc
, **
¨gv
)

122 
i
;

123 
thªads
;

125 i‡(
	`∑r£_¨gs
(
¨gc
, 
¨gv
) == -1)

128 i‡(
mix_ô_up
)

129 
thªads
 = 
NumFlﬂtThªads
 + 
NumI¡Thªads
;

131 
thªads
 = 
NumFlﬂtThªads
 > 
NumI¡Thªads
 ?

132 
NumFlﬂtThªads
 : 
NumI¡Thªads
;

134 
ack
 = 
√w
 [
thªads
];

135 i‡(!
ack
)

136 
	`W_FATAL
(
fcOUTOFMEMORY
);

137 
w‹kî
 = 
√w
 
°hªad_t
 *[
thªads
];

138 i‡(!
w‹kî
)

139 
	`W_FATAL
(
fcOUTOFMEMORY
);

141 
i
=0; i<
NumI¡Thªads
; ++i) {

142 
ack
[
i
] = 0;

143 
w‹kî
[
i
] = 
√w
 
	`öt_thªad_t
(i);

144 
	`w_as£π1
(
w‹kî
[
i
]);

145 
	`W_COERCE
–
w‹kî
[
i
]->
	`f‹k
() );

148 i‡(!
mix_ô_up
)

149 
	`h¨ve°
(
NumI¡Thªads
);

151 
ba£
 = 
mix_ô_up
 ? 
NumI¡Thªads
 : 0;

153 
i
=
ba£
 ; i < ba£ + 
NumFlﬂtThªads
; ++i){

154 
ack
[
i
] = 0;

155 
w‹kî
[
i
] = 
√w
 
	`Êﬂt_thªad_t
(i);

156 
	`w_as£π1
(
w‹kî
[
i
]);

157 
	`W_COERCE
–
w‹kî
[
i
]->
	`f‹k
() );

159 
	`h¨ve°
(
mix_ô_up
 ? 
thªads
 : 
NumFlﬂtThªads
);

161 
dñëe
 [] 
w‹kî
;

162 
dñëe
 [] 
ack
;

165 
	}
}

168 
	$∑r£_¨gs
(
¨gc
, **
¨gv
)

170 
c
;

171 
îr‹s
 = 0;

173 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "i:f:mv")Ë!
EOF
) {

174 
c
) {

176 
NumI¡Thªads
 = 
	`©oi
(
›èrg
);

179 
NumFlﬂtThªads
 = 
	`©oi
(
›èrg
);

182 
mix_ô_up
 = 
åue
;

185 
vîbo£
 = 
åue
;

188 
îr‹s
++;

192 i‡(
îr‹s
) {

193 
˚º
 << "ußge: " << 
¨gv
[0]

198 << 
ídl
;

200  
îr‹s
 ? -1 : 
›töd
;

201 
	}
}

204 
	gÊﬂt_thªad_t
::
	$run
()

206 
ªsu…
;

207 
r1
, 
r2
, 
r3
, 
r4
, 
r5
, 
r6
, 
r7
, 
r8
, 
r9
, 
r10
, 
r11
, 
r12
, 
r13
,

208 
r14
, 
r15
, 
r16
, 
r17
, 
r18
, 
r19
, 
r20
, 
r21
, 
r22
, 
r23
, 
r24
, 
r25
,

209 
r26
, 
r27
, 
r28
, 
r29
, 
r30
, 
r31
;

211 
r1
 = (Ë
id
;

212 
r2
 = (Ë
id
;

213 
r3
 = (Ë
id
;

214 
r4
 = (Ë
id
;

215 
r5
 = (Ë
id
;

216 
r6
 = (Ë
id
;

217 
r7
 = (Ë
id
;

218 
r8
 = (Ë
id
;

219 
r9
 = (Ë
id
;

220 
r10
 = (Ë
id
;

221 
r11
 = (Ë
id
;

222 
r12
 = (Ë
id
;

223 
r13
 = (Ë
id
;

224 
r14
 = (Ë
id
;

225 
r15
(Ë
id
;

226 
r16
(Ë
id
;

227 
r17
(Ë
id
;

228 
r18
(Ë
id
;

229 
r19
(Ë
id
;

230 
r20
 = (Ë
id
;

231 
r21
 = (Ë
id
;

232 
r22
 = (Ë
id
;

233 
r23
 = (Ë
id
;

234 
r24
 = (Ë
id
;

235 
r25
 = (Ë
id
;

236 
r26
 = (Ë
id
;

237 
r27
 = (Ë
id
;

238 
r28
 = (Ë
id
;

239 
r29
 = (Ë
id
;

240 
r30
 = (Ë
id
;

241 
r31
 = (Ë
id
;

243 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

244 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

245 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

247 
	`SAFE_IO
 ( "Hñlo, w‹ld from " << 
id


249 << 
	`£çªcisi⁄
(6Ë<< 
	`£tiosÊags
(
ios
::
fixed
)

250 << 
ªsu…
 << 
	`ª£tiosÊags
(
ios
::
fixed
)

251 << ", check = " << 31 * 
id
 << 
ídl


253 
°hªad_t
::
	`yõld
();

255 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

256 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

257 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

259 
	`SAFE_IO
–"Hñlo, w‹ld from " << 
id


260 << ",Ñesu… = " << 
	`£çªcisi⁄
(6Ë<< 
	`£tiosÊags
(
ios
::
fixed
)

261 << 
ªsu…
 << 
	`ª£tiosÊags
(
ios
::
fixed
)

262 << ", check = " << 31 * 
id
 << 
ídl
;)

264 
°hªad_t
::
	`yõld
();

265 
ack
[
id
] = 1;

266 
	}
}

268 
	göt_thªad_t
::
	$run
()

270 
ªsu…
;

271 
r1
, 
r2
, 
r3
, 
r4
, 
r5
, 
r6
, 
r7
, 
r8
, 
r9
, 
r10
, 
r11
, 
r12
, 
r13
,

272 
r14
, 
r15
, 
r16
, 
r17
, 
r18
, 
r19
, 
r20
, 
r21
, 
r22
, 
r23
, 
r24
, 
r25
,

273 
r26
, 
r27
, 
r28
, 
r29
, 
r30
, 
r31
;

275 
r1
 = 
id
;

276 
r2
 = 
id
;

277 
r3
 = 
id
;

278 
r4
 = 
id
;

279 
r5
 = 
id
;

280 
r6
 = 
id
;

281 
r7
 = 
id
;

282 
r8
 = 
id
;

283 
r9
 = 
id
;

284 
r10
 = 
id
;

285 
r11
 = 
id
;

286 
r12
 = 
id
;

287 
r13
 = 
id
;

288 
r14
 = 
id
;

289 
r15

id
;

290 
r16

id
;

291 
r17

id
;

292 
r18

id
;

293 
r19

id
;

294 
r20
 = 
id
;

295 
r21
 = 
id
;

296 
r22
 = 
id
;

297 
r23
 = 
id
;

298 
r24
 = 
id
;

299 
r25
 = 
id
;

300 
r26
 = 
id
;

301 
r27
 = 
id
;

302 
r28
 = 
id
;

303 
r29
 = 
id
;

304 
r30
 = 
id
;

305 
r31
 = 
id
;

307 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

308 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

309 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

311 
	`SAFE_IO
–"Hñlo, w‹ld from " << 
id


312 << ",Ñesu… = " << 
ªsu…


313 << ", check = " << 31 * 
id
 << 
ídl
;)

314 
°hªad_t
::
	`yõld
();

316 
ªsu…
 = 
r1
+ 
r2
+ 
r3
+ 
r4
+ 
r5
+ 
r6
+ 
r7
+ 
r8
+ 
r9
+ 
r10
+ 
r11
+ 
r12
+ 
r13
+

317 
r14
+ 
r15
+ 
r16
+ 
r17
+ 
r18
+ 
r19
+ 
r20
+ 
r21
+ 
r22
+ 
r23
+ 
r24
+ 
r25
+

318 
r26
+ 
r27
+ 
r28
+ 
r29
+ 
r30
+ 
r31
;

319 
	`SAFE_IO
–"Hñlo, w‹ld from " << 
id


320 << ",Ñesu… = " << 
ªsu…


321 << ", check = " << 31 * 
id
 << 
ídl
;)

322 
°hªad_t
::
	`yõld
();

323 
ack
[
id
] = 1;

324 
	}
}

	@src/sthread/tests/thread4.cpp

30 
	~"w_deföes.h
"

34 
	~<c°dlib
>

35 
	~<˘ime
>

37 
	~<w.h
>

38 
	~<°hªad.h
>

40 
	~<io°ªam
>

41 
	~<s°ªam
>

42 
	~<w_°r°ªam.h
>

44 
__thªad
 
°rög°ªam
 *
_ß„_io
(
NULL
);

45 
	$ß„_io_öô
()

47 i‡(
_ß„_io
==
NULL
Ë_ß„_iÿ
√w
 
°rög°ªam
;

48 
	}
}

49 
	$ß„_io_föi
()

51 i‡(
_ß„_io
!=
NULL
Ë
dñëe
 _safe_io; _safe_io=NULL;

52 
	}
}

54 
	#SAFE_IO
(
XXXX
Ë{ 
	`ß„_io_öô
(); \

55 *
_ß„_io
 << 
XXXX
; \

56 
	`Ârötf
(
°dout
, 
_ß„_io
->
	`°r
().
	`c_°r
()); }

	)

58 ˛as†
	ctimî_thªad_t
 : 
public
 
°hªad_t
 {

59 
public
:

60 
timî_thªad_t
(
ms
);

62 
	m¥Ÿe˘ed
:

63 
vútuÆ
 
run
();

65 
	m¥iv©e
:

66 
_ms
;

69 
	gdeÁu…_timeout
[] = {

73 
boﬁ
 
	gvîbo£
 = 
Ál£
;

76 
	$maö
(
¨gc
, **
¨gv
)

78 
timeouts
;

79 *
timeout
;

81 i‡(
¨gc
 > 1 && 
	`°rcmp
(
¨gv
[1], "-v") == 0) {

82 
vîbo£
 = 
åue
;

83 
¨gc
--;

84 
¨gv
++;

86 i‡(
¨gc
 > 1) {

87 
timeouts
 = 
¨gc
 - 1;

88 
timeout
 = 
√w
 [
timeouts
];

89 
i
 = 1; i < 
¨gc
; i++)

90 
timeout
[
i
-1] = 
	`©oi
(
¨gv
[i]);

93 
timeouts
 = (
deÁu…_timeout
) /(default_timeout[0]);

94 
timeout
 = 
deÁu…_timeout
;

97 
timî_thªad_t
 **
timî_thªad
 = 
√w
Åimî_thªad_à*[
timeouts
];

99 
i
;

100 
i
 = 0; i < 
timeouts
; i++) {

101 
timî_thªad
[
i
] = 
√w
 
	`timî_thªad_t
(
timeout
[i]);

102 
	`w_as£π1
(
timî_thªad
[
i
]);

103 
	`W_COERCE
(
timî_thªad
[
i
]->
	`f‹k
());

106 
i
 = 0; i < 
timeouts
; i++) {

107 
	`W_COERCE
–
timî_thªad
[
i
]->
	`joö
());

108 
dñëe
 
timî_thªad
[
i
];

111 
dñëe
 [] 
timî_thªad
;

112 i‡(
timeout
 !
deÁu…_timeout
)

113 
dñëe
 [] 
timeout
;

115 i‡(
vîbo£
)

116 
°hªad_t
::
	`dump_°©s
(
cout
);

118 
dñëe
 
_ß„_io
; _ß„_iÿ
NULL
;

120 
	}
}

124 
	gtimî_thªad_t
::
	$timî_thªad_t
(
ms
)

125 : 
	`°hªad_t
(
t_ªguœr
),

126 
	$_ms
(
ms
)

128 
w_o°r°ªam_buf
 
	`s
(40);

129 
s
 << "timî_thªad(" << 
ms
 << ')' << 
íds
;

130 
	`ª«me
(
s
.
	`c_°r
());

131 
	}
}

133 
	gtimî_thªad_t
::
	$run
()

135 
°ime_t
 
°¨t
, 
°›
;

137 
	`SAFE_IO
–"[" << 
	`£tw
(2Ë<< 
	`£tfûl
('0'Ë<< 
id


138 << "] goögÅÿ¶ì∞f‹ " << 
_ms
 << "ms" << 
ídl
;)

140 i‡(
vîbo£
)

141 
°¨t
 = 
°ime_t
::
	`now
();

143 
°hªad_t
::
	`¶ìp
(
_ms
);

145 i‡(
vîbo£
)

146 
°›
 = 
°ime_t
::
	`now
();

148 
	`SAFE_IO
(

149 "[" << 
	`£tw
(2Ë<< 
	`£tfûl
('0'Ë<< 
id


150 << "] wokêu∞a·î " << 
_ms
 << "ms";

152 i‡(
vîbo£
Ë
	`SAFE_IO
(

153 "; mósuªd " << (
söãrvÆ_t
)(
°›
-
°¨t
)

155 
cout
 << 
ídl
;

157 
	`ß„_io_föi
();

158 
	}
}

	@src/sthread/vtable_sthread.cpp

30 
	~"w_deföes.h
"

39 
	~<w.h
>

40 
	~<w_debug.h
>

41 
	~<w_°ªam.h
>

42 
	~<c°dlib
>

43 
	~<c°rög
>

44 
	~"°hªad.h
"

45 
	~"°hªad_°©s.h
"

46 
	~"°hªad_vèbÀ_íum.h
"

49 #ifde‡
EXPLICIT_TEMPLATE


50 
ãm∂©e
 
˛ass
 
	gvèbÀ_func
<
	g°hªad_t
>;

53 c⁄° *
	g°hªad_vèbÀ_©å_«mes
[] =

58 
	~"°hªad_°©s_msg_gí.h
"

62 
vèbÀ_«mes_öô_t
 
«mes_öô
(
°hªad_œ°
, 
°hªad_vèbÀ_©å_«mes
);

65 
	g°hªad_t
::
	$cﬁÀ˘
(
vèbÀ_t
 &
v
, 
boﬁ
 
«mes_too
)

68 
	`±hªad_muãx_lock
(&
_˛ass_li°_lock
);

71 
¡
=0;

73 
°hªad_li°_i
 
	`i
(*
_˛ass_li°
);

74 
i
.
	`√xt
()Ë{ 
¡
++; }

77 if(
«mes_too
Ë
¡
 ++;

81 if(
v
.
	`öô
(
¡
, 
°hªad_œ°
, 
«mes_öô
.
	`max_size
()))  -1;

83 
vèbÀ_func
<
°hªad_t
> 
	`f
(
v
);

88 if(
«mes_too
Ë
f
.
	`ö£π_«mes
();

93 
°hªad_li°_i
 
	`i
(*
_˛ass_li°
);

94 
i
.
	`√xt
()) {

96 
	`f
(*
i
.
	`cuº
());

101 
	`±hªad_muãx_u∆ock
(&
_˛ass_li°_lock
);

104 
	}
}

106 
	~<w_°r°ªam.h
>

118 
	g°hªad_t
::
	$vèbÀ_cﬁÀ˘
(
vèbÀ_row_t
& 
t
)

122 
t
.
	`£t_öt
(
°hªad_id_©å
, 
id
);

123 
t
.
	`£t_°rög
(
°hªad_«me_©å
, 
	`«me
() );

124 
t
.
	`£t_°rög
(
°hªad_°©us_©å
, 
°hªad_t
::
°©us_°rögs
[
	`°©us
()]);

127 
	#TMP_GET_STAT
(
x
Ë
SthªadSèts
.
	)
x

128 
	~"°hªad_°©s_cﬁÀ˘_gí.˝p
"

129 
	}
}

132 
	g°hªad_t
::
	$vèbÀ_cﬁÀ˘_«mes
(
vèbÀ_row_t
 &
t
)

134 
«mes_öô
.
	`cﬁÀ˘_«mes
(
t
);

135 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/regex.h

20 #i‚de‡
_REGEX_H


21 
	#_REGEX_H
 1

	)

23 
	~<sys/ty≥s.h
>

24 
	~<gnu/›ti⁄-groups.h
>

27 #ifde‡
__˝lu•lus


35 
	ts_ªg_t
;

36 
	ta˘ive_ªg_t
;

43 
	tªg_sy¡ax_t
;

45 #ifde‡
__USE_GNU


48 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

53 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

59 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

73 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

81 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

85 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

89 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

93 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

97 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

102 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

106 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

110 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

115 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

119 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

123 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

127 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

133 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

137 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

141 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

145 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

153 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

158 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

161 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


164 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

169 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

173 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

177 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

185 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

187 #ifde‡
__USE_GNU


192 
	#RE_SYNTAX_EMACS
 0

	)

194 
	#RE_SYNTAX_AWK
 \

195 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

196 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

197 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

198 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

199 | 
RE_CHAR_CLASSES
 \

200 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

202 
	#RE_SYNTAX_GNU_AWK
 \

203 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

204 | 
RE_INVALID_INTERVAL_ORD
) \

205 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

206 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

208 
	#RE_SYNTAX_POSIX_AWK
 \

209 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

210 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

211 | 
RE_INVALID_INTERVAL_ORD
)

	)

213 
	#RE_SYNTAX_GREP
 \

214 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

215 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

216 | 
RE_NEWLINE_ALT
)

	)

218 
	#RE_SYNTAX_EGREP
 \

219 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

220 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

221 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

222 | 
RE_NO_BK_VBAR
)

	)

224 
	#RE_SYNTAX_POSIX_EGREP
 \

225 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

226 | 
RE_INVALID_INTERVAL_ORD
)

	)

229 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

231 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

234 
	#_RE_SYNTAX_POSIX_COMMON
 \

235 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

236 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

238 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


239 
	#RE_SYNTAX_POSIX_BASIC
 \

240 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

242 
	#RE_SYNTAX_POSIX_BASIC
 \

243 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
)

	)

249 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

250 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

252 
	#RE_SYNTAX_POSIX_EXTENDED
 \

253 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

254 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

255 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

256 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

260 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

261 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

262 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

263 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

264 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

270 #ifde‡
RE_DUP_MAX


271 #unde‡
RE_DUP_MAX


274 
	#RE_DUP_MAX
 (0x7fff)

	)

282 
	#REG_EXTENDED
 1

	)

286 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

291 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

295 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

305 
	#REG_NOTBOL
 1

	)

308 
	#REG_NOTEOL
 (1 << 1)

	)

310 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


313 
	#REG_STARTEND
 (1 << 2)

	)

321 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


322 
	gREG_ENOSYS
 = -1,

325 
	gREG_NOERROR
 = 0,

326 
	gREG_NOMATCH
,

330 
	gREG_BADPAT
,

331 
	gREG_ECOLLATE
,

332 
	gREG_ECTYPE
,

333 
	gREG_EESCAPE
,

334 
	gREG_ESUBREG
,

335 
	gREG_EBRACK
,

336 
	gREG_EPAREN
,

337 
	gREG_EBRACE
,

338 
	gREG_BADBR
,

339 
	gREG_ERANGE
,

340 
	gREG_ESPACE
,

341 
	gREG_BADRPT
,

344 
	gREG_EEND
,

345 
	gREG_ESIZE
,

346 
	gREG_ERPAREN


347 } 
	tªg_îrcode_t
;

355 #i‚de‡
RE_TRANSLATE_TYPE


356 
	#__RE_TRANSLATE_TYPE
 *

	)

357 #ifde‡
__USE_GNU


358 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

362 #ifde‡
__USE_GNU


363 
	#__REPB_PREFIX
(
«me
Ë
	)
name

365 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

368 
	sª_∑âîn_buf„r


373 *
__REPB_PREFIX
(
buf„r
);

376 
__REPB_PREFIX
(
Æloˇãd
);

379 
__REPB_PREFIX
(
u£d
);

382 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

387 *
__REPB_PREFIX
(
Á°m≠
);

393 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

396 
size_t
 
	gª_nsub
;

402 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

408 #ifde‡
__USE_GNU


409 
	#REGS_UNALLOCATED
 0

	)

410 
	#REGS_REALLOCATE
 1

	)

411 
	#REGS_FIXED
 2

	)

413 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

417 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

421 
__REPB_PREFIX
(
no_sub
) : 1;

425 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

428 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

431 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

434 
ª_∑âîn_buf„r
 
	tªgex_t
;

437 
	tªgoff_t
;

440 #ifde‡
__USE_GNU


443 
	sª_ªgi°îs


445 
	gnum_ªgs
;

446 
ªgoff_t
 *
	g°¨t
;

447 
ªgoff_t
 *
	gíd
;

454 #i‚de‡
RE_NREGS


455 
	#RE_NREGS
 30

	)

465 
ªgoff_t
 
	grm_so
;

466 
ªgoff_t
 
	grm_eo
;

467 } 
	tªgm©ch_t
;

471 #ifde‡
__USE_GNU


474 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

484 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

485 
ª_∑âîn_buf„r
 *
__buf„r
);

491 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

499 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

500 
__Àngth
, 
__°¨t
, 
__ønge
,

501 
ª_ªgi°îs
 *
__ªgs
);

506 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

507 c⁄° *
__°rög1
, 
__Àngth1
,

508 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

509 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

514 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

515 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

519 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

520 c⁄° *
__°rög1
, 
__Àngth1
,

521 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

522 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

537 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

538 
ª_ªgi°îs
 *
__ªgs
,

539 
__num_ªgs
,

540 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

543 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

544 #i‚de‡
_CRAY


546 *
ª_comp
 (const *);

547 
ª_exec
 (const *);

553 #i‚de‡
__ª°ri˘


554 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

555 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


556 
	#__ª°ri˘
 
ª°ri˘


	)

558 
	#__ª°ri˘


	)

563 #i‚de‡
__ª°ri˘_¨r


564 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

565 && !
deföed
 
	g__GNUG__


566 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

568 
	#__ª°ri˘_¨r


	)

573 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

574 c⁄° *
__ª°ri˘
 
__∑âîn
,

575 
__cÊags
);

577 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

578 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

579 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

580 
__eÊags
);

582 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

583 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

585 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

588 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/spawn.h

19 #i‚def 
_SPAWN_H


20 
	#_SPAWN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sched.h
>

24 
	#__√ed_sig£t_t


	)

25 
	~<sig«l.h
>

26 
	~<sys/ty≥s.h
>

32 
	m__Êags
;

33 
pid_t
 
	m__pgΩ
;

34 
sig£t_t
 
	m__sd
;

35 
sig£t_t
 
	m__ss
;

36 
sched_∑øm
 
	m__•
;

37 
	m__pﬁicy
;

38 
	m__∑d
[16];

39 } 
	tposix_•aw«âr_t
;

46 
	m__Æloˇãd
;

47 
	m__u£d
;

48 
__•awn_a˘i⁄
 *
	m__a˘i⁄s
;

49 
	m__∑d
[16];

50 } 
	tposix_•awn_fûe_a˘i⁄s_t
;

54 
	#POSIX_SPAWN_RESETIDS
 0x01

	)

55 
	#POSIX_SPAWN_SETPGROUP
 0x02

	)

56 
	#POSIX_SPAWN_SETSIGDEF
 0x04

	)

57 
	#POSIX_SPAWN_SETSIGMASK
 0x08

	)

58 
	#POSIX_SPAWN_SETSCHEDPARAM
 0x10

	)

59 
	#POSIX_SPAWN_SETSCHEDULER
 0x20

	)

60 #ifde‡
__USE_GNU


61 
	#POSIX_SPAWN_USEVFORK
 0x40

	)

65 
__BEGIN_DECLS


72 
posix_•awn
 (
pid_t
 *
__ª°ri˘
 
__pid
,

73 c⁄° *
__ª°ri˘
 
__∑th
,

74 c⁄° 
posix_•awn_fûe_a˘i⁄s_t
 *
__ª°ri˘


75 
__fûe_a˘i⁄s
,

76 c⁄° 
posix_•aw«âr_t
 *
__ª°ri˘
 
__©åp
,

77 *c⁄° 
__¨gv
[
__ª°ri˘_¨r
],

78 *c⁄° 
__ívp
[
__ª°ri˘_¨r
]);

84 
posix_•aw≈
 (
pid_t
 *
__pid
, c⁄° *
__fûe
,

85 c⁄° 
posix_•awn_fûe_a˘i⁄s_t
 *
__fûe_a˘i⁄s
,

86 c⁄° 
posix_•aw«âr_t
 *
__©åp
,

87 *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[]);

91 
	$posix_•aw«âr_öô
 (
posix_•aw«âr_t
 *
__©å
Ë
__THROW
;

94 
	$posix_•aw«âr_de°roy
 (
posix_•aw«âr_t
 *
__©å
Ë
__THROW
;

98 
	$posix_•aw«âr_gësigdeÁu…
 (c⁄° 
posix_•aw«âr_t
 *

99 
__ª°ri˘
 
__©å
,

100 
sig£t_t
 *
__ª°ri˘
 
__sigdeÁu…
)

101 
__THROW
;

104 
	$posix_•aw«âr_£tsigdeÁu…
 (
posix_•aw«âr_t
 *
__ª°ri˘
 
__©å
,

105 c⁄° 
sig£t_t
 *
__ª°ri˘


106 
__sigdeÁu…
)

107 
__THROW
;

110 
	$posix_•aw«âr_gësigmask
 (c⁄° 
posix_•aw«âr_t
 *
__ª°ri˘


111 
__©å
,

112 
sig£t_t
 *
__ª°ri˘
 
__sigmask
Ë
__THROW
;

115 
	$posix_•aw«âr_£tsigmask
 (
posix_•aw«âr_t
 *
__ª°ri˘
 
__©å
,

116 c⁄° 
sig£t_t
 *
__ª°ri˘
 
__sigmask
)

117 
__THROW
;

120 
	$posix_•aw«âr_gëÊags
 (c⁄° 
posix_•aw«âr_t
 *
__ª°ri˘


121 
__©å
,

122 *
__ª°ri˘
 
__Êags
Ë
__THROW
;

125 
	$posix_•aw«âr_£tÊags
 (
posix_•aw«âr_t
 *
_©å
,

126 
__Êags
Ë
__THROW
;

129 
	$posix_•aw«âr_gëpgroup
 (c⁄° 
posix_•aw«âr_t
 *
__ª°ri˘


130 
__©å
, 
pid_t
 *
__ª°ri˘
 
__pgroup
)

131 
__THROW
;

134 
	$posix_•aw«âr_£çgroup
 (
posix_•aw«âr_t
 *
__©å
,

135 
pid_t
 
__pgroup
Ë
__THROW
;

138 
	$posix_•aw«âr_gëschedpﬁicy
 (c⁄° 
posix_•aw«âr_t
 *

139 
__ª°ri˘
 
__©å
,

140 *
__ª°ri˘
 
__schedpﬁicy
)

141 
__THROW
;

144 
	$posix_•aw«âr_£tschedpﬁicy
 (
posix_•aw«âr_t
 *
__©å
,

145 
__schedpﬁicy
Ë
__THROW
;

148 
	$posix_•aw«âr_gësched∑øm
 (c⁄° 
posix_•aw«âr_t
 *

149 
__ª°ri˘
 
__©å
,

150 
sched_∑øm
 *
__ª°ri˘


151 
__sched∑øm
Ë
__THROW
;

154 
	$posix_•aw«âr_£tsched∑øm
 (
posix_•aw«âr_t
 *
__ª°ri˘
 
__©å
,

155 c⁄° 
sched_∑øm
 *

156 
__ª°ri˘
 
__sched∑øm
Ë
__THROW
;

160 
	$posix_•awn_fûe_a˘i⁄s_öô
 (
posix_•awn_fûe_a˘i⁄s_t
 *

161 
__fûe_a˘i⁄s
Ë
__THROW
;

164 
	$posix_•awn_fûe_a˘i⁄s_de°roy
 (
posix_•awn_fûe_a˘i⁄s_t
 *

165 
__fûe_a˘i⁄s
Ë
__THROW
;

169 
	$posix_•awn_fûe_a˘i⁄s_add›í
 (
posix_•awn_fûe_a˘i⁄s_t
 *

170 
__ª°ri˘
 
__fûe_a˘i⁄s
,

171 
__fd
,

172 c⁄° *
__ª°ri˘
 
__∑th
,

173 
__oÊag
, 
mode_t
 
__mode
)

174 
__THROW
;

178 
	$posix_•awn_fûe_a˘i⁄s_add˛o£
 (
posix_•awn_fûe_a˘i⁄s_t
 *

179 
__fûe_a˘i⁄s
, 
__fd
)

180 
__THROW
;

184 
	$posix_•awn_fûe_a˘i⁄s_adddup2
 (
posix_•awn_fûe_a˘i⁄s_t
 *

185 
__fûe_a˘i⁄s
,

186 
__fd
, 
__√wfd
Ë
__THROW
;

188 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/valgrind/valgrind.h

73 #i‚de‡
__VALGRIND_H


74 
	#__VALGRIND_H


	)

91 
	#__VALGRIND_MAJOR__
 3

	)

92 
	#__VALGRIND_MINOR__
 10

	)

95 
	~<°d¨g.h
>

111 #unde‡
PLAT_x86_d¨wö


112 #unde‡
PLAT_amd64_d¨wö


113 #unde‡
PLAT_x86_wö32


114 #unde‡
PLAT_amd64_wö64


115 #unde‡
PLAT_x86_löux


116 #unde‡
PLAT_amd64_löux


117 #unde‡
PLAT_µc32_löux


118 #unde‡
PLAT_µc64be_löux


119 #unde‡
PLAT_µc64À_löux


120 #unde‡
PLAT_¨m_löux


121 #unde‡
PLAT_¨m64_löux


122 #unde‡
PLAT_s390x_löux


123 #unde‡
PLAT_mùs32_löux


124 #unde‡
PLAT_mùs64_löux


127 #i‡
deföed
(
__APPLE__
Ë&& deföed(
__i386__
)

128 
	#PLAT_x86_d¨wö
 1

	)

129 #ñi‡
deföed
(
__APPLE__
Ë&& deföed(
__x86_64__
)

130 
	#PLAT_amd64_d¨wö
 1

	)

131 #ñi‡(
deföed
(
__MINGW32__
Ë&& !deföed(
__MINGW64__
)) \

132 || 
deföed
(
__CYGWIN32__
) \

133 || (
deföed
(
_WIN32
Ë&& 
	$deföed
(
_M_IX86
))

134 
	#PLAT_x86_wö32
 1

	)

135 #ñi‡
	`deföed
(
__MINGW64__
) \

136 || (
	`deföed
(
_WIN64
Ë&& 
	$deföed
(
_M_X64
))

137 
	#PLAT_amd64_wö64
 1

	)

138 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__i386__
)

139 
	#PLAT_x86_löux
 1

	)

140 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__x86_64__
)

141 
	#PLAT_amd64_löux
 1

	)

142 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__powîpc__
Ë&& !deföed(
__powîpc64__
)

143 
	#PLAT_µc32_löux
 1

	)

144 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__powîpc__
Ë&& deföed(
__powîpc64__
Ë&& 
_CALL_ELF
 != 2

146 
	#PLAT_µc64be_löux
 1

	)

147 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__powîpc__
Ë&& deföed(
__powîpc64__
Ë&& 
_CALL_ELF
 == 2

149 
	#PLAT_µc64À_löux
 1

	)

150 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__¨m__
Ë&& !deföed(
__Ørch64__
)

151 
	#PLAT_¨m_löux
 1

	)

152 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__Ørch64__
Ë&& !deföed(
__¨m__
)

153 
	#PLAT_¨m64_löux
 1

	)

154 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__s390__
Ë&& deföed(
__s390x__
)

155 
	#PLAT_s390x_löux
 1

	)

156 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__mùs__
Ë&& (
__mùs
==64)

157 
	#PLAT_mùs64_löux
 1

	)

158 #ñi‡
	`deföed
(
__löux__
Ë&& deföed(
__mùs__
Ë&& (
__mùs
!=64)

159 
	#PLAT_mùs32_löux
 1

	)

163 #i‡!
	`deföed
(
NVALGRIND
)

164 
	#NVALGRIND
 1

	)

187 
	#VALGRIND_DO_CLIENT_REQUEST
(
_zzq_ævÆ
, 
_zzq_deÁu…
, \

188 
_zzq_ªque°
, 
_zzq_¨g1
, 
_zzq_¨g2
, \

189 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

190 dÿ{ (
_zzq_ævÆ
Ë
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
((
_zzq_deÁu…
), \

191 (
_zzq_ªque°
), (
_zzq_¨g1
), (
_zzq_¨g2
), \

192 (
_zzq_¨g3
), (
_zzq_¨g4
), (
_zzq_¨g5
)); 
	}
} 0)

	)

194 
	#VALGRIND_DO_CLIENT_REQUEST_STMT
(
_zzq_ªque°
, 
_zzq_¨g1
, \

195 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

196 dÿ{ (Ë
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0, \

197 (
_zzq_ªque°
), (
_zzq_¨g1
), (
_zzq_¨g2
), \

198 (
_zzq_¨g3
), (
_zzq_¨g4
), (
_zzq_¨g5
)); } 0)

	)

200 #i‡
deföed
(
NVALGRIND
)

205 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

206 
_zzq_deÁu…
, 
_zzq_ªque°
, \

207 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

208 (
_zzq_deÁu…
)

	)

249 #i‡
deföed
(
PLAT_x86_löux
Ë|| deföed(
PLAT_x86_d¨wö
) \

250 || (
deföed
(
PLAT_x86_wö32
Ë&& 
	$deföed
(
__GNUC__
))

254 
ƒaddr
;

256 
	tOrigFn
;

258 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

260 "rﬁ»$29, %%edò;Ñﬁ»$19, %%edi\n\t"

	)

262 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

263 
_zzq_deÁu…
, 
_zzq_ªque°
, \

264 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

265 
__exãnsi⁄__
 \

266 ({vﬁ©ûê
_zzq_¨gs
[6]; \

267 vﬁ©ûê
_zzq_ªsu…
; \

268 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

269 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

270 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

271 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

272 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

273 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

274 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

277 : "=d" (
_zzq_ªsu…
) \

278 : "a" (&
_zzq_¨gs
[0]), "0" (
_zzq_deÁu…
) \

281 
_zzq_ªsu…
; \

282 
	}
})

	)

284 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

285 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

286 vﬁ©ûê
__addr
; \

287 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

290 : "˜" (
__addr
) \

294 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

295 }

	)

297 
	#VALGRIND_CALL_NOREDIR_EAX
 \

298 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

300 "xchg»%%edx,%%edx\n\t"

	)

302 
	#VALGRIND_VEX_INJECT_IR
() \

304 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

308 } 0)

	)

314 #i‡
deföed
(
PLAT_x86_wö32
Ë&& !deföed(
__GNUC__
)

318 
	mƒaddr
;

320 
	tOrigFn
;

322 #i‡
deföed
(
_MSC_VER
)

324 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

325 
__asm
 
rﬁ
 
edi
, 3 __asmÑolÉdi, 13 \

326 
__asm
 
rﬁ
 
edi
, 29 __asmÑﬁÉdi, 19

	)

328 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

329 
_zzq_deÁu…
, 
_zzq_ªque°
, \

330 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

331 
	`vÆgröd_do_˛õ¡_ªque°_ex¥
((
uöçå_t
)(
_zzq_deÁu…
), \

332 (
uöçå_t
)(
_zzq_ªque°
), (uöçå_t)(
_zzq_¨g1
), \

333 (
uöçå_t
)(
_zzq_¨g2
), (uöçå_t)(
_zzq_¨g3
), \

334 (
uöçå_t
)(
_zzq_¨g4
), (uöçå_t)(
_zzq_¨g5
))

	)

336 
__ölöe
 
uöçå_t


337 
	$vÆgröd_do_˛õ¡_ªque°_ex¥
(
uöçå_t
 
_zzq_deÁu…
, uöçå_à
_zzq_ªque°
,

338 
uöçå_t
 
_zzq_¨g1
, uöçå_à
_zzq_¨g2
,

339 
uöçå_t
 
_zzq_¨g3
, uöçå_à
_zzq_¨g4
,

340 
uöçå_t
 
_zzq_¨g5
)

342 vﬁ©ûê
uöçå_t
 
_zzq_¨gs
[6];

343 vﬁ©ûê
_zzq_ªsu…
;

344 
_zzq_¨gs
[0] = (
uöçå_t
)(
_zzq_ªque°
);

345 
_zzq_¨gs
[1] = (
uöçå_t
)(
_zzq_¨g1
);

346 
_zzq_¨gs
[2] = (
uöçå_t
)(
_zzq_¨g2
);

347 
_zzq_¨gs
[3] = (
uöçå_t
)(
_zzq_¨g3
);

348 
_zzq_¨gs
[4] = (
uöçå_t
)(
_zzq_¨g4
);

349 
_zzq_¨gs
[5] = (
uöçå_t
)(
_zzq_¨g5
);

350 
__asm
 { __asm 
Àa
 
óx
, 
_zzq_¨gs
 __asm 
mov
 
edx
, 
_zzq_deÁu…


351 
__SPECIAL_INSTRUCTION_PREAMBLE


353 
__asm
 
xchg
 
ebx
,ebx

354 
__asm
 
mov
 
_zzq_ªsu…
, 
edx


356  
_zzq_ªsu…
;

357 
	}
}

359 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

360 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

361 vﬁ©ûê
__addr
; \

362 
__asm
 { 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

364 
__asm
 
xchg
 
ecx
,ecx \

365 
__asm
 
mov
 
__addr
, 
óx
 \

367 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

368 }

	)

370 
	#VALGRIND_CALL_NOREDIR_EAX
 
ERROR


	)

372 
	#VALGRIND_VEX_INJECT_IR
() \

374 
__asm
 { 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

375 
__asm
 
xchg
 
edi
,edi \

377 } 0)

	)

380 #îr‹ 
Unsuµ‹ãd
 
compûî
.

387 #i‡
deföed
(
PLAT_amd64_löux
Ë|| deföed(
PLAT_amd64_d¨wö
) \

388 || (
deföed
(
PLAT_amd64_wö64
Ë&& 
	$deföed
(
__GNUC__
))

392 
ƒaddr
;

394 
	tOrigFn
;

396 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

398 "rﬁq $61, %%rdò;Ñﬁq $51, %%rdi\n\t"

	)

400 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

401 
_zzq_deÁu…
, 
_zzq_ªque°
, \

402 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

403 
__exãnsi⁄__
 \

404 ({ vﬁ©ûê
_zzq_¨gs
[6]; \

405 vﬁ©ûê
_zzq_ªsu…
; \

406 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

407 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

408 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

409 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

410 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

411 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

412 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

415 : "=d" (
_zzq_ªsu…
) \

416 : "a" (&
_zzq_¨gs
[0]), "0" (
_zzq_deÁu…
) \

419 
_zzq_ªsu…
; \

420 
	}
})

	)

422 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

423 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

424 vﬁ©ûê
__addr
; \

425 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

428 : "˜" (
__addr
) \

432 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

433 }

	)

435 
	#VALGRIND_CALL_NOREDIR_RAX
 \

436 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

438 "xchgq %%rdx,%%rdx\n\t"

	)

440 
	#VALGRIND_VEX_INJECT_IR
() \

442 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

446 } 0)

	)

452 #i‡
deföed
(
PLAT_amd64_wö64
Ë&& !deföed(
__GNUC__
)

454 #îr‹ 
Unsuµ‹ãd
 
compûî
.

460 #i‡
deföed
(
PLAT_µc32_löux
)

464 
	mƒaddr
;

466 
	tOrigFn
;

468 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

470 "æwöm 0,0,29,0,31 ;Ñlwöm 0,0,19,0,31\n\t"

	)

472 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

473 
_zzq_deÁu…
, 
_zzq_ªque°
, \

474 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

476 
__exãnsi⁄__
 \

477 ({ 
_zzq_¨gs
[6]; \

478 
_zzq_ªsu…
; \

479 * 
_zzq_±r
; \

480 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

481 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

482 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

483 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

484 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

485 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

486 
_zzq_±r
 = 
_zzq_¨gs
; \

487 
__asm__
 volatile("mr 3,%1\n\t" \

489 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

493 : "=b" (
_zzq_ªsu…
) \

494 : "b" (
_zzq_deÁu…
), "b" (
_zzq_±r
) \

496 
_zzq_ªsu…
; \

497 })

	)

499 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

500 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

501 
__addr
; \

502 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

506 : "=b" (
__addr
) \

510 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

511 }

	)

513 
	#VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

514 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

516 "‹ 3,3,3\n\t"

	)

518 
	#VALGRIND_VEX_INJECT_IR
() \

520 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

523 } 0)

	)

529 #i‡
deföed
(
PLAT_µc64be_löux
)

533 
	mƒaddr
;

534 
	mr2
;

536 
	tOrigFn
;

538 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

540 "rŸldò0,0,61 ;ÑŸldò0,0,51\n\t"

	)

542 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

543 
_zzq_deÁu…
, 
_zzq_ªque°
, \

544 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

546 
__exãnsi⁄__
 \

547 ({ 
_zzq_¨gs
[6]; \

548 
_zzq_ªsu…
; \

549 * 
_zzq_±r
; \

550 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

551 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

552 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

553 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

554 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

555 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

556 
_zzq_±r
 = 
_zzq_¨gs
; \

557 
__asm__
 volatile("mr 3,%1\n\t" \

559 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

563 : "=b" (
_zzq_ªsu…
) \

564 : "b" (
_zzq_deÁu…
), "b" (
_zzq_±r
) \

566 
_zzq_ªsu…
; \

567 })

	)

569 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

570 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

571 
__addr
; \

572 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

576 : "=b" (
__addr
) \

580 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

581 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

585 : "=b" (
__addr
) \

589 
_zzq_‹ig
->
r2
 = 
__addr
; \

590 }

	)

592 
	#VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

593 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

595 "‹ 3,3,3\n\t"

	)

597 
	#VALGRIND_VEX_INJECT_IR
() \

599 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

602 } 0)

	)

606 #i‡
deföed
(
PLAT_µc64À_löux
)

610 
	mƒaddr
;

611 
	mr2
;

613 
	tOrigFn
;

615 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

617 "rŸldò0,0,61 ;ÑŸldò0,0,51\n\t"

	)

619 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

620 
_zzq_deÁu…
, 
_zzq_ªque°
, \

621 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

623 
__exãnsi⁄__
 \

624 ({ 
_zzq_¨gs
[6]; \

625 
_zzq_ªsu…
; \

626 * 
_zzq_±r
; \

627 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

628 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

629 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

630 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

631 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

632 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

633 
_zzq_±r
 = 
_zzq_¨gs
; \

634 
__asm__
 volatile("mr 3,%1\n\t" \

636 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

640 : "=b" (
_zzq_ªsu…
) \

641 : "b" (
_zzq_deÁu…
), "b" (
_zzq_±r
) \

643 
_zzq_ªsu…
; \

644 })

	)

646 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

647 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

648 
__addr
; \

649 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

653 : "=b" (
__addr
) \

657 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

658 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

662 : "=b" (
__addr
) \

666 
_zzq_‹ig
->
r2
 = 
__addr
; \

667 }

	)

669 
	#VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

670 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

672 "‹ 3,3,3\n\t"

	)

674 
	#VALGRIND_VEX_INJECT_IR
() \

676 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

679 } 0)

	)

685 #i‡
deföed
(
PLAT_¨m_löux
)

689 
	mƒaddr
;

691 
	tOrigFn
;

693 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

695 "movÑ12,Ñ12,Ñ‹ #29 ; movÑ12,Ñ12,Ñ‹ #19 \n\t"

	)

697 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

698 
_zzq_deÁu…
, 
_zzq_ªque°
, \

699 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

701 
__exãnsi⁄__
 \

702 ({vﬁ©ûê
_zzq_¨gs
[6]; \

703 vﬁ©ûê
_zzq_ªsu…
; \

704 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

705 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

706 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

707 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

708 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

709 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

710 
__asm__
 volatile("movÑ3, %1\n\t" \

712 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

716 : "Ù" (
_zzq_ªsu…
) \

717 : "r" (
_zzq_deÁu…
), "r" (&
_zzq_¨gs
[0]) \

719 
_zzq_ªsu…
; \

720 })

	)

722 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

723 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

724 
__addr
; \

725 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

729 : "Ù" (
__addr
) \

733 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

734 }

	)

736 
	#VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

737 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

739 "‹∏r12,Ñ12,Ñ12\n\t"

	)

741 
	#VALGRIND_VEX_INJECT_IR
() \

743 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

747 } 0)

	)

753 #i‡
deföed
(
PLAT_¨m64_löux
)

757 
	mƒaddr
;

759 
	tOrigFn
;

761 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

763 "r‹ x12, x12, #51 ;Ñ‹ x12, x12, #61 \n\t"

	)

765 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

766 
_zzq_deÁu…
, 
_zzq_ªque°
, \

767 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

769 
__exãnsi⁄__
 \

770 ({vﬁ©ûê
_zzq_¨gs
[6]; \

771 vﬁ©ûê
_zzq_ªsu…
; \

772 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

773 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

774 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

775 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

776 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

777 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

778 
__asm__
 volatile("mov x3, %1\n\t" \

780 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

784 : "Ù" (
_zzq_ªsu…
) \

785 : "r" (
_zzq_deÁu…
), "r" (&
_zzq_¨gs
[0]) \

787 
_zzq_ªsu…
; \

788 })

	)

790 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

791 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

792 
__addr
; \

793 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

797 : "Ù" (
__addr
) \

801 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

802 }

	)

804 
	#VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

805 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

807 "‹∏x12, x12, x12\n\t"

	)

809 
	#VALGRIND_VEX_INJECT_IR
() \

811 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

815 } 0)

	)

821 #i‡
deföed
(
PLAT_s390x_löux
)

825 
	mƒaddr
;

827 
	tOrigFn
;

833 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

837 "Ã 3,3\n\t"

	)

839 
	#__CLIENT_REQUEST_CODE
 "Ã 2,2\n\t"

	)

840 
	#__GET_NR_CONTEXT_CODE
 "Ã 3,3\n\t"

	)

841 
	#__CALL_NO_REDIR_CODE
 "Ã 4,4\n\t"

	)

842 
	#__VEX_INJECT_IR_CODE
 "Ã 5,5\n\t"

	)

844 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

845 
_zzq_deÁu…
, 
_zzq_ªque°
, \

846 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

847 
__exãnsi⁄__
 \

848 ({vﬁ©ûê
_zzq_¨gs
[6]; \

849 vﬁ©ûê
_zzq_ªsu…
; \

850 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

851 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

852 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

853 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

854 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

855 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

856 
__asm__
 volatile( \

860 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

861 
__CLIENT_REQUEST_CODE
 \

864 : "=d" (
_zzq_ªsu…
) \

865 : "a" (&
_zzq_¨gs
[0]), "0" (
_zzq_deÁu…
) \

868 
_zzq_ªsu…
; \

869 })

	)

871 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

872 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

873 vﬁ©ûê
__addr
; \

874 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

875 
__GET_NR_CONTEXT_CODE
 \

877 : "˜" (
__addr
) \

881 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

882 }

	)

884 
	#VALGRIND_CALL_NOREDIR_R1
 \

885 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

886 
__CALL_NO_REDIR_CODE


	)

888 
	#VALGRIND_VEX_INJECT_IR
() \

890 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

891 
__VEX_INJECT_IR_CODE
); \

892 } 0)

	)

898 #i‡
deföed
(
PLAT_mùs32_löux
)

902 
	mƒaddr
;

904 
	tOrigFn
;

910 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

914 "§»$0, $0, 19\n\t"

	)

916 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

917 
_zzq_deÁu…
, 
_zzq_ªque°
, \

918 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

919 
__exãnsi⁄__
 \

920 ({ vﬁ©ûê
_zzq_¨gs
[6]; \

921 vﬁ©ûê
_zzq_ªsu…
; \

922 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

923 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

924 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

925 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

926 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

927 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

928 
__asm__
 volatile("move $11, %1\n\t" \

930 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

934 : "Ù" (
_zzq_ªsu…
) \

935 : "r" (
_zzq_deÁu…
), "r" (&
_zzq_¨gs
[0]) \

937 
_zzq_ªsu…
; \

938 })

	)

940 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

941 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

942 vﬁ©ûê
__addr
; \

943 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

947 : "Ù" (
__addr
) \

951 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

952 }

	)

954 
	#VALGRIND_CALL_NOREDIR_T9
 \

955 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

957 "‹ $15, $15, $15\n\t"

	)

959 
	#VALGRIND_VEX_INJECT_IR
() \

961 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

964 } 0)

	)

971 #i‡
deföed
(
PLAT_mùs64_löux
)

975 
	mƒaddr
;

977 
	tOrigFn
;

983 
	#__SPECIAL_INSTRUCTION_PREAMBLE
 \

985 "d¶»$0,$0,29 ; d¶»$0,$0,19\n\t"

	)

987 
	#VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

988 
_zzq_deÁu…
, 
_zzq_ªque°
, \

989 
_zzq_¨g1
, 
_zzq_¨g2
, 
_zzq_¨g3
, 
_zzq_¨g4
, 
_zzq_¨g5
) \

990 
__exãnsi⁄__
 \

991 ({ vﬁ©ûê
_zzq_¨gs
[6]; \

992 vﬁ©ûê
_zzq_ªsu…
; \

993 
_zzq_¨gs
[0] = ()(
_zzq_ªque°
); \

994 
_zzq_¨gs
[1] = ()(
_zzq_¨g1
); \

995 
_zzq_¨gs
[2] = ()(
_zzq_¨g2
); \

996 
_zzq_¨gs
[3] = ()(
_zzq_¨g3
); \

997 
_zzq_¨gs
[4] = ()(
_zzq_¨g4
); \

998 
_zzq_¨gs
[5] = ()(
_zzq_¨g5
); \

999 
__asm__
 volatile("move $11, %1\n\t" \

1001 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

1005 : "Ù" (
_zzq_ªsu…
) \

1006 : "r" (
_zzq_deÁu…
), "r" (&
_zzq_¨gs
[0]) \

1008 
_zzq_ªsu…
; \

1009 })

	)

1011 
	#VALGRIND_GET_NR_CONTEXT
(
_zzq_ævÆ
) \

1012 { vﬁ©ûê
OrigFn
* 
_zzq_‹ig
 = &(
_zzq_ævÆ
); \

1013 vﬁ©ûê
__addr
; \

1014 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

1018 : "Ù" (
__addr
) \

1021 
_zzq_‹ig
->
ƒaddr
 = 
__addr
; \

1022 }

	)

1024 
	#VALGRIND_CALL_NOREDIR_T9
 \

1025 
__SPECIAL_INSTRUCTION_PREAMBLE
 \

1027 "‹ $15, $15, $15\n\t"

	)

1029 
	#VALGRIND_VEX_INJECT_IR
() \

1031 
__asm__
 vﬁ©ûe(
__SPECIAL_INSTRUCTION_PREAMBLE
 \

1034 } 0)

	)

1074 
	#VG_CONCAT4
(
_Ø
,
_bb
,
_cc
,
_dd
Ë_Ø##_bb##_cc##
	)
_dd

1076 
	#I_WRAP_SONAME_FNNAME_ZU
(
s⁄ame
,
‚«me
) \

1077 
	`VG_CONCAT4
(
_vgw00000ZU_
,
s⁄ame
,
_
,
‚«me
)

	)

1079 
	#I_WRAP_SONAME_FNNAME_ZZ
(
s⁄ame
,
‚«me
) \

1080 
	`VG_CONCAT4
(
_vgw00000ZZ_
,
s⁄ame
,
_
,
‚«me
)

	)

1086 
	#VALGRIND_GET_ORIG_FN
(
_lvÆ
Ë
	`VALGRIND_GET_NR_CONTEXT
(_lvÆ)

	)

1094 
	#I_REPLACE_SONAME_FNNAME_ZU
(
s⁄ame
,
‚«me
) \

1095 
	`VG_CONCAT4
(
_vgr00000ZU_
,
s⁄ame
,
_
,
‚«me
)

	)

1097 
	#I_REPLACE_SONAME_FNNAME_ZZ
(
s⁄ame
,
‚«me
) \

1098 
	`VG_CONCAT4
(
_vgr00000ZZ_
,
s⁄ame
,
_
,
‚«me
)

	)

1103 
	#CALL_FN_v_v
(
‚±r
) \

1104 dÿ{ vﬁ©ûê
_junk
; \

1105 
	`CALL_FN_W_v
(
_junk
,
‚±r
); } 0)

	)

1107 
	#CALL_FN_v_W
(
‚±r
, 
¨g1
) \

1108 dÿ{ vﬁ©ûê
_junk
; \

1109 
	`CALL_FN_W_W
(
_junk
,
‚±r
,
¨g1
); } 0)

	)

1111 
	#CALL_FN_v_WW
(
‚±r
, 
¨g1
,
¨g2
) \

1112 dÿ{ vﬁ©ûê
_junk
; \

1113 
	`CALL_FN_W_WW
(
_junk
,
‚±r
,
¨g1
,
¨g2
); } 0)

	)

1115 
	#CALL_FN_v_WWW
(
‚±r
, 
¨g1
,
¨g2
,
¨g3
) \

1116 dÿ{ vﬁ©ûê
_junk
; \

1117 
	`CALL_FN_W_WWW
(
_junk
,
‚±r
,
¨g1
,
¨g2
,
¨g3
); } 0)

	)

1119 
	#CALL_FN_v_WWWW
(
‚±r
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

1120 dÿ{ vﬁ©ûê
_junk
; \

1121 
	`CALL_FN_W_WWWW
(
_junk
,
‚±r
,
¨g1
,
¨g2
,
¨g3
,
¨g4
); } 0)

	)

1123 
	#CALL_FN_v_5W
(
‚±r
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

1124 dÿ{ vﬁ©ûê
_junk
; \

1125 
	`CALL_FN_W_5W
(
_junk
,
‚±r
,
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
); } 0)

	)

1127 
	#CALL_FN_v_6W
(
‚±r
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

1128 dÿ{ vﬁ©ûê
_junk
; \

1129 
	`CALL_FN_W_6W
(
_junk
,
‚±r
,
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
); } 0)

	)

1131 
	#CALL_FN_v_7W
(
‚±r
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
,
¨g7
) \

1132 dÿ{ vﬁ©ûê
_junk
; \

1133 
	`CALL_FN_W_7W
(
_junk
,
‚±r
,
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
,
¨g7
); } 0)

	)

1137 #i‡
deföed
(
PLAT_x86_löux
Ë|| deföed(
PLAT_x86_d¨wö
)

1141 
	#__CALLER_SAVED_REGS
 "ecx", "edx"

	)

1148 
	#VALGRIND_ALIGN_STACK
 \

1150 "™d»$0xfffffff0,%%e•\n\t"

	)

1151 
	#VALGRIND_RESTORE_STACK
 \

1152 "mov»%%edi,%%e•\n\t"

	)

1157 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

1159 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1160 vﬁ©ûê
_¨gvec
[1]; \

1161 vﬁ©ûê
_ªs
; \

1162 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1163 
__asm__
 volatile( \

1164 
VALGRIND_ALIGN_STACK
 \

1166 
VALGRIND_CALL_NOREDIR_EAX
 \

1167 
VALGRIND_RESTORE_STACK
 \

1168 : "˜" (
_ªs
) \

1169 : "a" (&
_¨gvec
[0]) \

1170 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1172 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1173 } 0)

	)

1175 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

1177 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1178 vﬁ©ûê
_¨gvec
[2]; \

1179 vﬁ©ûê
_ªs
; \

1180 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1181 
_¨gvec
[1] = ()(
¨g1
); \

1182 
__asm__
 volatile( \

1183 
VALGRIND_ALIGN_STACK
 \

1187 
VALGRIND_CALL_NOREDIR_EAX
 \

1188 
VALGRIND_RESTORE_STACK
 \

1189 : "˜" (
_ªs
) \

1190 : "a" (&
_¨gvec
[0]) \

1191 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1193 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1194 } 0)

	)

1196 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

1198 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1199 vﬁ©ûê
_¨gvec
[3]; \

1200 vﬁ©ûê
_ªs
; \

1201 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1202 
_¨gvec
[1] = ()(
¨g1
); \

1203 
_¨gvec
[2] = ()(
¨g2
); \

1204 
__asm__
 volatile( \

1205 
VALGRIND_ALIGN_STACK
 \

1210 
VALGRIND_CALL_NOREDIR_EAX
 \

1211 
VALGRIND_RESTORE_STACK
 \

1212 : "˜" (
_ªs
) \

1213 : "a" (&
_¨gvec
[0]) \

1214 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1216 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1217 } 0)

	)

1219 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

1221 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1222 vﬁ©ûê
_¨gvec
[4]; \

1223 vﬁ©ûê
_ªs
; \

1224 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1225 
_¨gvec
[1] = ()(
¨g1
); \

1226 
_¨gvec
[2] = ()(
¨g2
); \

1227 
_¨gvec
[3] = ()(
¨g3
); \

1228 
__asm__
 volatile( \

1229 
VALGRIND_ALIGN_STACK
 \

1235 
VALGRIND_CALL_NOREDIR_EAX
 \

1236 
VALGRIND_RESTORE_STACK
 \

1237 : "˜" (
_ªs
) \

1238 : "a" (&
_¨gvec
[0]) \

1239 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1241 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1242 } 0)

	)

1244 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

1246 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1247 vﬁ©ûê
_¨gvec
[5]; \

1248 vﬁ©ûê
_ªs
; \

1249 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1250 
_¨gvec
[1] = ()(
¨g1
); \

1251 
_¨gvec
[2] = ()(
¨g2
); \

1252 
_¨gvec
[3] = ()(
¨g3
); \

1253 
_¨gvec
[4] = ()(
¨g4
); \

1254 
__asm__
 volatile( \

1255 
VALGRIND_ALIGN_STACK
 \

1261 
VALGRIND_CALL_NOREDIR_EAX
 \

1262 
VALGRIND_RESTORE_STACK
 \

1263 : "˜" (
_ªs
) \

1264 : "a" (&
_¨gvec
[0]) \

1265 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1267 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1268 } 0)

	)

1270 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

1272 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1273 vﬁ©ûê
_¨gvec
[6]; \

1274 vﬁ©ûê
_ªs
; \

1275 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1276 
_¨gvec
[1] = ()(
¨g1
); \

1277 
_¨gvec
[2] = ()(
¨g2
); \

1278 
_¨gvec
[3] = ()(
¨g3
); \

1279 
_¨gvec
[4] = ()(
¨g4
); \

1280 
_¨gvec
[5] = ()(
¨g5
); \

1281 
__asm__
 volatile( \

1282 
VALGRIND_ALIGN_STACK
 \

1290 
VALGRIND_CALL_NOREDIR_EAX
 \

1291 
VALGRIND_RESTORE_STACK
 \

1292 : "˜" (
_ªs
) \

1293 : "a" (&
_¨gvec
[0]) \

1294 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1296 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1297 } 0)

	)

1299 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

1301 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1302 vﬁ©ûê
_¨gvec
[7]; \

1303 vﬁ©ûê
_ªs
; \

1304 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1305 
_¨gvec
[1] = ()(
¨g1
); \

1306 
_¨gvec
[2] = ()(
¨g2
); \

1307 
_¨gvec
[3] = ()(
¨g3
); \

1308 
_¨gvec
[4] = ()(
¨g4
); \

1309 
_¨gvec
[5] = ()(
¨g5
); \

1310 
_¨gvec
[6] = ()(
¨g6
); \

1311 
__asm__
 volatile( \

1312 
VALGRIND_ALIGN_STACK
 \

1321 
VALGRIND_CALL_NOREDIR_EAX
 \

1322 
VALGRIND_RESTORE_STACK
 \

1323 : "˜" (
_ªs
) \

1324 : "a" (&
_¨gvec
[0]) \

1325 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1327 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1328 } 0)

	)

1330 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1331 
¨g7
) \

1333 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1334 vﬁ©ûê
_¨gvec
[8]; \

1335 vﬁ©ûê
_ªs
; \

1336 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1337 
_¨gvec
[1] = ()(
¨g1
); \

1338 
_¨gvec
[2] = ()(
¨g2
); \

1339 
_¨gvec
[3] = ()(
¨g3
); \

1340 
_¨gvec
[4] = ()(
¨g4
); \

1341 
_¨gvec
[5] = ()(
¨g5
); \

1342 
_¨gvec
[6] = ()(
¨g6
); \

1343 
_¨gvec
[7] = ()(
¨g7
); \

1344 
__asm__
 volatile( \

1345 
VALGRIND_ALIGN_STACK
 \

1355 
VALGRIND_CALL_NOREDIR_EAX
 \

1356 
VALGRIND_RESTORE_STACK
 \

1357 : "˜" (
_ªs
) \

1358 : "a" (&
_¨gvec
[0]) \

1359 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1361 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1362 } 0)

	)

1364 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1365 
¨g7
,
¨g8
) \

1367 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1368 vﬁ©ûê
_¨gvec
[9]; \

1369 vﬁ©ûê
_ªs
; \

1370 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1371 
_¨gvec
[1] = ()(
¨g1
); \

1372 
_¨gvec
[2] = ()(
¨g2
); \

1373 
_¨gvec
[3] = ()(
¨g3
); \

1374 
_¨gvec
[4] = ()(
¨g4
); \

1375 
_¨gvec
[5] = ()(
¨g5
); \

1376 
_¨gvec
[6] = ()(
¨g6
); \

1377 
_¨gvec
[7] = ()(
¨g7
); \

1378 
_¨gvec
[8] = ()(
¨g8
); \

1379 
__asm__
 volatile( \

1380 
VALGRIND_ALIGN_STACK
 \

1390 
VALGRIND_CALL_NOREDIR_EAX
 \

1391 
VALGRIND_RESTORE_STACK
 \

1392 : "˜" (
_ªs
) \

1393 : "a" (&
_¨gvec
[0]) \

1394 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1396 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1397 } 0)

	)

1399 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1400 
¨g7
,
¨g8
,
¨g9
) \

1402 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1403 vﬁ©ûê
_¨gvec
[10]; \

1404 vﬁ©ûê
_ªs
; \

1405 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1406 
_¨gvec
[1] = ()(
¨g1
); \

1407 
_¨gvec
[2] = ()(
¨g2
); \

1408 
_¨gvec
[3] = ()(
¨g3
); \

1409 
_¨gvec
[4] = ()(
¨g4
); \

1410 
_¨gvec
[5] = ()(
¨g5
); \

1411 
_¨gvec
[6] = ()(
¨g6
); \

1412 
_¨gvec
[7] = ()(
¨g7
); \

1413 
_¨gvec
[8] = ()(
¨g8
); \

1414 
_¨gvec
[9] = ()(
¨g9
); \

1415 
__asm__
 volatile( \

1416 
VALGRIND_ALIGN_STACK
 \

1428 
VALGRIND_CALL_NOREDIR_EAX
 \

1429 
VALGRIND_RESTORE_STACK
 \

1430 : "˜" (
_ªs
) \

1431 : "a" (&
_¨gvec
[0]) \

1432 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1434 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1435 } 0)

	)

1437 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1438 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

1440 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1441 vﬁ©ûê
_¨gvec
[11]; \

1442 vﬁ©ûê
_ªs
; \

1443 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1444 
_¨gvec
[1] = ()(
¨g1
); \

1445 
_¨gvec
[2] = ()(
¨g2
); \

1446 
_¨gvec
[3] = ()(
¨g3
); \

1447 
_¨gvec
[4] = ()(
¨g4
); \

1448 
_¨gvec
[5] = ()(
¨g5
); \

1449 
_¨gvec
[6] = ()(
¨g6
); \

1450 
_¨gvec
[7] = ()(
¨g7
); \

1451 
_¨gvec
[8] = ()(
¨g8
); \

1452 
_¨gvec
[9] = ()(
¨g9
); \

1453 
_¨gvec
[10] = ()(
¨g10
); \

1454 
__asm__
 volatile( \

1455 
VALGRIND_ALIGN_STACK
 \

1468 
VALGRIND_CALL_NOREDIR_EAX
 \

1469 
VALGRIND_RESTORE_STACK
 \

1470 : "˜" (
_ªs
) \

1471 : "a" (&
_¨gvec
[0]) \

1472 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1474 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1475 } 0)

	)

1477 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

1478 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

1479 
¨g11
) \

1481 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1482 vﬁ©ûê
_¨gvec
[12]; \

1483 vﬁ©ûê
_ªs
; \

1484 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1485 
_¨gvec
[1] = ()(
¨g1
); \

1486 
_¨gvec
[2] = ()(
¨g2
); \

1487 
_¨gvec
[3] = ()(
¨g3
); \

1488 
_¨gvec
[4] = ()(
¨g4
); \

1489 
_¨gvec
[5] = ()(
¨g5
); \

1490 
_¨gvec
[6] = ()(
¨g6
); \

1491 
_¨gvec
[7] = ()(
¨g7
); \

1492 
_¨gvec
[8] = ()(
¨g8
); \

1493 
_¨gvec
[9] = ()(
¨g9
); \

1494 
_¨gvec
[10] = ()(
¨g10
); \

1495 
_¨gvec
[11] = ()(
¨g11
); \

1496 
__asm__
 volatile( \

1497 
VALGRIND_ALIGN_STACK
 \

1511 
VALGRIND_CALL_NOREDIR_EAX
 \

1512 
VALGRIND_RESTORE_STACK
 \

1513 : "˜" (
_ªs
) \

1514 : "a" (&
_¨gvec
[0]) \

1515 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1517 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1518 } 0)

	)

1520 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

1521 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

1522 
¨g11
,
¨g12
) \

1524 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1525 vﬁ©ûê
_¨gvec
[13]; \

1526 vﬁ©ûê
_ªs
; \

1527 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1528 
_¨gvec
[1] = ()(
¨g1
); \

1529 
_¨gvec
[2] = ()(
¨g2
); \

1530 
_¨gvec
[3] = ()(
¨g3
); \

1531 
_¨gvec
[4] = ()(
¨g4
); \

1532 
_¨gvec
[5] = ()(
¨g5
); \

1533 
_¨gvec
[6] = ()(
¨g6
); \

1534 
_¨gvec
[7] = ()(
¨g7
); \

1535 
_¨gvec
[8] = ()(
¨g8
); \

1536 
_¨gvec
[9] = ()(
¨g9
); \

1537 
_¨gvec
[10] = ()(
¨g10
); \

1538 
_¨gvec
[11] = ()(
¨g11
); \

1539 
_¨gvec
[12] = ()(
¨g12
); \

1540 
__asm__
 volatile( \

1541 
VALGRIND_ALIGN_STACK
 \

1555 
VALGRIND_CALL_NOREDIR_EAX
 \

1556 
VALGRIND_RESTORE_STACK
 \

1557 : "˜" (
_ªs
) \

1558 : "a" (&
_¨gvec
[0]) \

1559 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "edi" \

1561 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1562 } 0)

	)

1568 #i‡
deföed
(
PLAT_amd64_löux
Ë|| deföed(
PLAT_amd64_d¨wö
)

1573 
	#__CALLER_SAVED_REGS
 "rcx", "rdx", "rsi", \

1574 "rdi", "r8", "r9", "r10", "r11"

	)

1630 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__GCC_HAVE_DWARF2_CFI_ASM
)

1631 
	#__FRAME_POINTER
 \

1632 ,"r"(
	`__buûtö_dw¨f_cÁ
())

	)

1633 
	#VALGRIND_CFI_PROLOGUE
 \

1637 ".cfi_def_cÁÑbp, 0\n\t"

	)

1638 
	#VALGRIND_CFI_EPILOGUE
 \

1640 ".cfi_ª°‹e_°©e\n\t"

	)

1642 
	#__FRAME_POINTER


	)

1643 
	#VALGRIND_CFI_PROLOGUE


	)

1644 
	#VALGRIND_CFI_EPILOGUE


	)

1652 
	#VALGRIND_ALIGN_STACK
 \

1654 "™dq $0xfffffffffffffff0,%%r•\n\t"

	)

1655 
	#VALGRIND_RESTORE_STACK
 \

1656 "movq %%r14,%%r•\n\t"

	)

1682 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

1684 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1685 vﬁ©ûê
_¨gvec
[1]; \

1686 vﬁ©ûê
_ªs
; \

1687 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1688 
__asm__
 volatile( \

1689 
VALGRIND_CFI_PROLOGUE
 \

1690 
VALGRIND_ALIGN_STACK
 \

1693 
VALGRIND_CALL_NOREDIR_RAX
 \

1694 
VALGRIND_RESTORE_STACK
 \

1695 
VALGRIND_CFI_EPILOGUE
 \

1696 : "˜" (
_ªs
) \

1697 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1698 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1700 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1701 } 0)

	)

1703 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

1705 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1706 vﬁ©ûê
_¨gvec
[2]; \

1707 vﬁ©ûê
_ªs
; \

1708 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1709 
_¨gvec
[1] = ()(
¨g1
); \

1710 
__asm__
 volatile( \

1711 
VALGRIND_CFI_PROLOGUE
 \

1712 
VALGRIND_ALIGN_STACK
 \

1716 
VALGRIND_CALL_NOREDIR_RAX
 \

1717 
VALGRIND_RESTORE_STACK
 \

1718 
VALGRIND_CFI_EPILOGUE
 \

1719 : "˜" (
_ªs
) \

1720 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1721 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1723 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1724 } 0)

	)

1726 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

1728 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1729 vﬁ©ûê
_¨gvec
[3]; \

1730 vﬁ©ûê
_ªs
; \

1731 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1732 
_¨gvec
[1] = ()(
¨g1
); \

1733 
_¨gvec
[2] = ()(
¨g2
); \

1734 
__asm__
 volatile( \

1735 
VALGRIND_CFI_PROLOGUE
 \

1736 
VALGRIND_ALIGN_STACK
 \

1741 
VALGRIND_CALL_NOREDIR_RAX
 \

1742 
VALGRIND_RESTORE_STACK
 \

1743 
VALGRIND_CFI_EPILOGUE
 \

1744 : "˜" (
_ªs
) \

1745 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1746 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1748 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1749 } 0)

	)

1751 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

1753 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1754 vﬁ©ûê
_¨gvec
[4]; \

1755 vﬁ©ûê
_ªs
; \

1756 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1757 
_¨gvec
[1] = ()(
¨g1
); \

1758 
_¨gvec
[2] = ()(
¨g2
); \

1759 
_¨gvec
[3] = ()(
¨g3
); \

1760 
__asm__
 volatile( \

1761 
VALGRIND_CFI_PROLOGUE
 \

1762 
VALGRIND_ALIGN_STACK
 \

1768 
VALGRIND_CALL_NOREDIR_RAX
 \

1769 
VALGRIND_RESTORE_STACK
 \

1770 
VALGRIND_CFI_EPILOGUE
 \

1771 : "˜" (
_ªs
) \

1772 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1773 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1775 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1776 } 0)

	)

1778 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

1780 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1781 vﬁ©ûê
_¨gvec
[5]; \

1782 vﬁ©ûê
_ªs
; \

1783 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1784 
_¨gvec
[1] = ()(
¨g1
); \

1785 
_¨gvec
[2] = ()(
¨g2
); \

1786 
_¨gvec
[3] = ()(
¨g3
); \

1787 
_¨gvec
[4] = ()(
¨g4
); \

1788 
__asm__
 volatile( \

1789 
VALGRIND_CFI_PROLOGUE
 \

1790 
VALGRIND_ALIGN_STACK
 \

1797 
VALGRIND_CALL_NOREDIR_RAX
 \

1798 
VALGRIND_RESTORE_STACK
 \

1799 
VALGRIND_CFI_EPILOGUE
 \

1800 : "˜" (
_ªs
) \

1801 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1802 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1804 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1805 } 0)

	)

1807 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

1809 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1810 vﬁ©ûê
_¨gvec
[6]; \

1811 vﬁ©ûê
_ªs
; \

1812 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1813 
_¨gvec
[1] = ()(
¨g1
); \

1814 
_¨gvec
[2] = ()(
¨g2
); \

1815 
_¨gvec
[3] = ()(
¨g3
); \

1816 
_¨gvec
[4] = ()(
¨g4
); \

1817 
_¨gvec
[5] = ()(
¨g5
); \

1818 
__asm__
 volatile( \

1819 
VALGRIND_CFI_PROLOGUE
 \

1820 
VALGRIND_ALIGN_STACK
 \

1828 
VALGRIND_CALL_NOREDIR_RAX
 \

1829 
VALGRIND_RESTORE_STACK
 \

1830 
VALGRIND_CFI_EPILOGUE
 \

1831 : "˜" (
_ªs
) \

1832 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1833 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1835 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1836 } 0)

	)

1838 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

1840 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1841 vﬁ©ûê
_¨gvec
[7]; \

1842 vﬁ©ûê
_ªs
; \

1843 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1844 
_¨gvec
[1] = ()(
¨g1
); \

1845 
_¨gvec
[2] = ()(
¨g2
); \

1846 
_¨gvec
[3] = ()(
¨g3
); \

1847 
_¨gvec
[4] = ()(
¨g4
); \

1848 
_¨gvec
[5] = ()(
¨g5
); \

1849 
_¨gvec
[6] = ()(
¨g6
); \

1850 
__asm__
 volatile( \

1851 
VALGRIND_CFI_PROLOGUE
 \

1852 
VALGRIND_ALIGN_STACK
 \

1861 
VALGRIND_CALL_NOREDIR_RAX
 \

1862 
VALGRIND_RESTORE_STACK
 \

1863 
VALGRIND_CFI_EPILOGUE
 \

1864 : "˜" (
_ªs
) \

1865 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1866 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1868 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1869 } 0)

	)

1871 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1872 
¨g7
) \

1874 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1875 vﬁ©ûê
_¨gvec
[8]; \

1876 vﬁ©ûê
_ªs
; \

1877 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1878 
_¨gvec
[1] = ()(
¨g1
); \

1879 
_¨gvec
[2] = ()(
¨g2
); \

1880 
_¨gvec
[3] = ()(
¨g3
); \

1881 
_¨gvec
[4] = ()(
¨g4
); \

1882 
_¨gvec
[5] = ()(
¨g5
); \

1883 
_¨gvec
[6] = ()(
¨g6
); \

1884 
_¨gvec
[7] = ()(
¨g7
); \

1885 
__asm__
 volatile( \

1886 
VALGRIND_CFI_PROLOGUE
 \

1887 
VALGRIND_ALIGN_STACK
 \

1897 
VALGRIND_CALL_NOREDIR_RAX
 \

1898 
VALGRIND_RESTORE_STACK
 \

1899 
VALGRIND_CFI_EPILOGUE
 \

1900 : "˜" (
_ªs
) \

1901 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1902 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1904 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1905 } 0)

	)

1907 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1908 
¨g7
,
¨g8
) \

1910 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1911 vﬁ©ûê
_¨gvec
[9]; \

1912 vﬁ©ûê
_ªs
; \

1913 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1914 
_¨gvec
[1] = ()(
¨g1
); \

1915 
_¨gvec
[2] = ()(
¨g2
); \

1916 
_¨gvec
[3] = ()(
¨g3
); \

1917 
_¨gvec
[4] = ()(
¨g4
); \

1918 
_¨gvec
[5] = ()(
¨g5
); \

1919 
_¨gvec
[6] = ()(
¨g6
); \

1920 
_¨gvec
[7] = ()(
¨g7
); \

1921 
_¨gvec
[8] = ()(
¨g8
); \

1922 
__asm__
 volatile( \

1923 
VALGRIND_CFI_PROLOGUE
 \

1924 
VALGRIND_ALIGN_STACK
 \

1935 
VALGRIND_CALL_NOREDIR_RAX
 \

1936 
VALGRIND_RESTORE_STACK
 \

1937 
VALGRIND_CFI_EPILOGUE
 \

1938 : "˜" (
_ªs
) \

1939 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1940 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1942 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1943 } 0)

	)

1945 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1946 
¨g7
,
¨g8
,
¨g9
) \

1948 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1949 vﬁ©ûê
_¨gvec
[10]; \

1950 vﬁ©ûê
_ªs
; \

1951 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1952 
_¨gvec
[1] = ()(
¨g1
); \

1953 
_¨gvec
[2] = ()(
¨g2
); \

1954 
_¨gvec
[3] = ()(
¨g3
); \

1955 
_¨gvec
[4] = ()(
¨g4
); \

1956 
_¨gvec
[5] = ()(
¨g5
); \

1957 
_¨gvec
[6] = ()(
¨g6
); \

1958 
_¨gvec
[7] = ()(
¨g7
); \

1959 
_¨gvec
[8] = ()(
¨g8
); \

1960 
_¨gvec
[9] = ()(
¨g9
); \

1961 
__asm__
 volatile( \

1962 
VALGRIND_CFI_PROLOGUE
 \

1963 
VALGRIND_ALIGN_STACK
 \

1975 
VALGRIND_CALL_NOREDIR_RAX
 \

1976 
VALGRIND_RESTORE_STACK
 \

1977 
VALGRIND_CFI_EPILOGUE
 \

1978 : "˜" (
_ªs
) \

1979 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

1980 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

1982 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

1983 } 0)

	)

1985 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

1986 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

1988 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

1989 vﬁ©ûê
_¨gvec
[11]; \

1990 vﬁ©ûê
_ªs
; \

1991 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

1992 
_¨gvec
[1] = ()(
¨g1
); \

1993 
_¨gvec
[2] = ()(
¨g2
); \

1994 
_¨gvec
[3] = ()(
¨g3
); \

1995 
_¨gvec
[4] = ()(
¨g4
); \

1996 
_¨gvec
[5] = ()(
¨g5
); \

1997 
_¨gvec
[6] = ()(
¨g6
); \

1998 
_¨gvec
[7] = ()(
¨g7
); \

1999 
_¨gvec
[8] = ()(
¨g8
); \

2000 
_¨gvec
[9] = ()(
¨g9
); \

2001 
_¨gvec
[10] = ()(
¨g10
); \

2002 
__asm__
 volatile( \

2003 
VALGRIND_CFI_PROLOGUE
 \

2004 
VALGRIND_ALIGN_STACK
 \

2017 
VALGRIND_CALL_NOREDIR_RAX
 \

2018 
VALGRIND_RESTORE_STACK
 \

2019 
VALGRIND_CFI_EPILOGUE
 \

2020 : "˜" (
_ªs
) \

2021 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

2022 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

2024 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2025 } 0)

	)

2027 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2028 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
) \

2030 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2031 vﬁ©ûê
_¨gvec
[12]; \

2032 vﬁ©ûê
_ªs
; \

2033 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2034 
_¨gvec
[1] = ()(
¨g1
); \

2035 
_¨gvec
[2] = ()(
¨g2
); \

2036 
_¨gvec
[3] = ()(
¨g3
); \

2037 
_¨gvec
[4] = ()(
¨g4
); \

2038 
_¨gvec
[5] = ()(
¨g5
); \

2039 
_¨gvec
[6] = ()(
¨g6
); \

2040 
_¨gvec
[7] = ()(
¨g7
); \

2041 
_¨gvec
[8] = ()(
¨g8
); \

2042 
_¨gvec
[9] = ()(
¨g9
); \

2043 
_¨gvec
[10] = ()(
¨g10
); \

2044 
_¨gvec
[11] = ()(
¨g11
); \

2045 
__asm__
 volatile( \

2046 
VALGRIND_CFI_PROLOGUE
 \

2047 
VALGRIND_ALIGN_STACK
 \

2061 
VALGRIND_CALL_NOREDIR_RAX
 \

2062 
VALGRIND_RESTORE_STACK
 \

2063 
VALGRIND_CFI_EPILOGUE
 \

2064 : "˜" (
_ªs
) \

2065 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

2066 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

2068 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2069 } 0)

	)

2071 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2072 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
,
¨g12
) \

2074 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2075 vﬁ©ûê
_¨gvec
[13]; \

2076 vﬁ©ûê
_ªs
; \

2077 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2078 
_¨gvec
[1] = ()(
¨g1
); \

2079 
_¨gvec
[2] = ()(
¨g2
); \

2080 
_¨gvec
[3] = ()(
¨g3
); \

2081 
_¨gvec
[4] = ()(
¨g4
); \

2082 
_¨gvec
[5] = ()(
¨g5
); \

2083 
_¨gvec
[6] = ()(
¨g6
); \

2084 
_¨gvec
[7] = ()(
¨g7
); \

2085 
_¨gvec
[8] = ()(
¨g8
); \

2086 
_¨gvec
[9] = ()(
¨g9
); \

2087 
_¨gvec
[10] = ()(
¨g10
); \

2088 
_¨gvec
[11] = ()(
¨g11
); \

2089 
_¨gvec
[12] = ()(
¨g12
); \

2090 
__asm__
 volatile( \

2091 
VALGRIND_CFI_PROLOGUE
 \

2092 
VALGRIND_ALIGN_STACK
 \

2107 
VALGRIND_CALL_NOREDIR_RAX
 \

2108 
VALGRIND_RESTORE_STACK
 \

2109 
VALGRIND_CFI_EPILOGUE
 \

2110 : "˜" (
_ªs
) \

2111 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

2112 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r14", "r15" \

2114 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2115 } 0)

	)

2121 #i‡
deföed
(
PLAT_µc32_löux
)

2147 
	#__CALLER_SAVED_REGS
 \

2151 "r11", "r12", "r13"

	)

2158 
	#VALGRIND_ALIGN_STACK
 \

2160 "æwöm 1,1,0,0,27\n\t"

	)

2161 
	#VALGRIND_RESTORE_STACK
 \

2162 "m∏1,28\n\t"

	)

2167 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

2169 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2170 vﬁ©ûê
_¨gvec
[1]; \

2171 vﬁ©ûê
_ªs
; \

2172 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2173 
__asm__
 volatile( \

2174 
VALGRIND_ALIGN_STACK
 \

2177 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2178 
VALGRIND_RESTORE_STACK
 \

2180 : "Ù" (
_ªs
) \

2181 : "r" (&
_¨gvec
[0]) \

2182 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2184 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2185 } 0)

	)

2187 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

2189 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2190 vﬁ©ûê
_¨gvec
[2]; \

2191 vﬁ©ûê
_ªs
; \

2192 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2193 
_¨gvec
[1] = ()
¨g1
; \

2194 
__asm__
 volatile( \

2195 
VALGRIND_ALIGN_STACK
 \

2199 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2200 
VALGRIND_RESTORE_STACK
 \

2202 : "Ù" (
_ªs
) \

2203 : "r" (&
_¨gvec
[0]) \

2204 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2206 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2207 } 0)

	)

2209 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

2211 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2212 vﬁ©ûê
_¨gvec
[3]; \

2213 vﬁ©ûê
_ªs
; \

2214 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2215 
_¨gvec
[1] = ()
¨g1
; \

2216 
_¨gvec
[2] = ()
¨g2
; \

2217 
__asm__
 volatile( \

2218 
VALGRIND_ALIGN_STACK
 \

2223 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2224 
VALGRIND_RESTORE_STACK
 \

2226 : "Ù" (
_ªs
) \

2227 : "r" (&
_¨gvec
[0]) \

2228 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2230 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2231 } 0)

	)

2233 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

2235 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2236 vﬁ©ûê
_¨gvec
[4]; \

2237 vﬁ©ûê
_ªs
; \

2238 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2239 
_¨gvec
[1] = ()
¨g1
; \

2240 
_¨gvec
[2] = ()
¨g2
; \

2241 
_¨gvec
[3] = ()
¨g3
; \

2242 
__asm__
 volatile( \

2243 
VALGRIND_ALIGN_STACK
 \

2249 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2250 
VALGRIND_RESTORE_STACK
 \

2252 : "Ù" (
_ªs
) \

2253 : "r" (&
_¨gvec
[0]) \

2254 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2256 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2257 } 0)

	)

2259 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

2261 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2262 vﬁ©ûê
_¨gvec
[5]; \

2263 vﬁ©ûê
_ªs
; \

2264 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2265 
_¨gvec
[1] = ()
¨g1
; \

2266 
_¨gvec
[2] = ()
¨g2
; \

2267 
_¨gvec
[3] = ()
¨g3
; \

2268 
_¨gvec
[4] = ()
¨g4
; \

2269 
__asm__
 volatile( \

2270 
VALGRIND_ALIGN_STACK
 \

2277 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2278 
VALGRIND_RESTORE_STACK
 \

2280 : "Ù" (
_ªs
) \

2281 : "r" (&
_¨gvec
[0]) \

2282 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2284 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2285 } 0)

	)

2287 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

2289 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2290 vﬁ©ûê
_¨gvec
[6]; \

2291 vﬁ©ûê
_ªs
; \

2292 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2293 
_¨gvec
[1] = ()
¨g1
; \

2294 
_¨gvec
[2] = ()
¨g2
; \

2295 
_¨gvec
[3] = ()
¨g3
; \

2296 
_¨gvec
[4] = ()
¨g4
; \

2297 
_¨gvec
[5] = ()
¨g5
; \

2298 
__asm__
 volatile( \

2299 
VALGRIND_ALIGN_STACK
 \

2307 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2308 
VALGRIND_RESTORE_STACK
 \

2310 : "Ù" (
_ªs
) \

2311 : "r" (&
_¨gvec
[0]) \

2312 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2314 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2315 } 0)

	)

2317 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

2319 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2320 vﬁ©ûê
_¨gvec
[7]; \

2321 vﬁ©ûê
_ªs
; \

2322 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2323 
_¨gvec
[1] = ()
¨g1
; \

2324 
_¨gvec
[2] = ()
¨g2
; \

2325 
_¨gvec
[3] = ()
¨g3
; \

2326 
_¨gvec
[4] = ()
¨g4
; \

2327 
_¨gvec
[5] = ()
¨g5
; \

2328 
_¨gvec
[6] = ()
¨g6
; \

2329 
__asm__
 volatile( \

2330 
VALGRIND_ALIGN_STACK
 \

2339 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2340 
VALGRIND_RESTORE_STACK
 \

2342 : "Ù" (
_ªs
) \

2343 : "r" (&
_¨gvec
[0]) \

2344 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2346 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2347 } 0)

	)

2349 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2350 
¨g7
) \

2352 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2353 vﬁ©ûê
_¨gvec
[8]; \

2354 vﬁ©ûê
_ªs
; \

2355 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2356 
_¨gvec
[1] = ()
¨g1
; \

2357 
_¨gvec
[2] = ()
¨g2
; \

2358 
_¨gvec
[3] = ()
¨g3
; \

2359 
_¨gvec
[4] = ()
¨g4
; \

2360 
_¨gvec
[5] = ()
¨g5
; \

2361 
_¨gvec
[6] = ()
¨g6
; \

2362 
_¨gvec
[7] = ()
¨g7
; \

2363 
__asm__
 volatile( \

2364 
VALGRIND_ALIGN_STACK
 \

2374 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2375 
VALGRIND_RESTORE_STACK
 \

2377 : "Ù" (
_ªs
) \

2378 : "r" (&
_¨gvec
[0]) \

2379 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2381 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2382 } 0)

	)

2384 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2385 
¨g7
,
¨g8
) \

2387 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2388 vﬁ©ûê
_¨gvec
[9]; \

2389 vﬁ©ûê
_ªs
; \

2390 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2391 
_¨gvec
[1] = ()
¨g1
; \

2392 
_¨gvec
[2] = ()
¨g2
; \

2393 
_¨gvec
[3] = ()
¨g3
; \

2394 
_¨gvec
[4] = ()
¨g4
; \

2395 
_¨gvec
[5] = ()
¨g5
; \

2396 
_¨gvec
[6] = ()
¨g6
; \

2397 
_¨gvec
[7] = ()
¨g7
; \

2398 
_¨gvec
[8] = ()
¨g8
; \

2399 
__asm__
 volatile( \

2400 
VALGRIND_ALIGN_STACK
 \

2411 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2412 
VALGRIND_RESTORE_STACK
 \

2414 : "Ù" (
_ªs
) \

2415 : "r" (&
_¨gvec
[0]) \

2416 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2418 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2419 } 0)

	)

2421 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2422 
¨g7
,
¨g8
,
¨g9
) \

2424 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2425 vﬁ©ûê
_¨gvec
[10]; \

2426 vﬁ©ûê
_ªs
; \

2427 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2428 
_¨gvec
[1] = ()
¨g1
; \

2429 
_¨gvec
[2] = ()
¨g2
; \

2430 
_¨gvec
[3] = ()
¨g3
; \

2431 
_¨gvec
[4] = ()
¨g4
; \

2432 
_¨gvec
[5] = ()
¨g5
; \

2433 
_¨gvec
[6] = ()
¨g6
; \

2434 
_¨gvec
[7] = ()
¨g7
; \

2435 
_¨gvec
[8] = ()
¨g8
; \

2436 
_¨gvec
[9] = ()
¨g9
; \

2437 
__asm__
 volatile( \

2438 
VALGRIND_ALIGN_STACK
 \

2454 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2455 
VALGRIND_RESTORE_STACK
 \

2457 : "Ù" (
_ªs
) \

2458 : "r" (&
_¨gvec
[0]) \

2459 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2461 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2462 } 0)

	)

2464 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2465 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

2467 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2468 vﬁ©ûê
_¨gvec
[11]; \

2469 vﬁ©ûê
_ªs
; \

2470 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2471 
_¨gvec
[1] = ()
¨g1
; \

2472 
_¨gvec
[2] = ()
¨g2
; \

2473 
_¨gvec
[3] = ()
¨g3
; \

2474 
_¨gvec
[4] = ()
¨g4
; \

2475 
_¨gvec
[5] = ()
¨g5
; \

2476 
_¨gvec
[6] = ()
¨g6
; \

2477 
_¨gvec
[7] = ()
¨g7
; \

2478 
_¨gvec
[8] = ()
¨g8
; \

2479 
_¨gvec
[9] = ()
¨g9
; \

2480 
_¨gvec
[10] = ()
¨g10
; \

2481 
__asm__
 volatile( \

2482 
VALGRIND_ALIGN_STACK
 \

2501 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2502 
VALGRIND_RESTORE_STACK
 \

2504 : "Ù" (
_ªs
) \

2505 : "r" (&
_¨gvec
[0]) \

2506 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2508 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2509 } 0)

	)

2511 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2512 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
) \

2514 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2515 vﬁ©ûê
_¨gvec
[12]; \

2516 vﬁ©ûê
_ªs
; \

2517 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2518 
_¨gvec
[1] = ()
¨g1
; \

2519 
_¨gvec
[2] = ()
¨g2
; \

2520 
_¨gvec
[3] = ()
¨g3
; \

2521 
_¨gvec
[4] = ()
¨g4
; \

2522 
_¨gvec
[5] = ()
¨g5
; \

2523 
_¨gvec
[6] = ()
¨g6
; \

2524 
_¨gvec
[7] = ()
¨g7
; \

2525 
_¨gvec
[8] = ()
¨g8
; \

2526 
_¨gvec
[9] = ()
¨g9
; \

2527 
_¨gvec
[10] = ()
¨g10
; \

2528 
_¨gvec
[11] = ()
¨g11
; \

2529 
__asm__
 volatile( \

2530 
VALGRIND_ALIGN_STACK
 \

2552 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2553 
VALGRIND_RESTORE_STACK
 \

2555 : "Ù" (
_ªs
) \

2556 : "r" (&
_¨gvec
[0]) \

2557 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2559 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2560 } 0)

	)

2562 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2563 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
,
¨g12
) \

2565 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2566 vﬁ©ûê
_¨gvec
[13]; \

2567 vﬁ©ûê
_ªs
; \

2568 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

2569 
_¨gvec
[1] = ()
¨g1
; \

2570 
_¨gvec
[2] = ()
¨g2
; \

2571 
_¨gvec
[3] = ()
¨g3
; \

2572 
_¨gvec
[4] = ()
¨g4
; \

2573 
_¨gvec
[5] = ()
¨g5
; \

2574 
_¨gvec
[6] = ()
¨g6
; \

2575 
_¨gvec
[7] = ()
¨g7
; \

2576 
_¨gvec
[8] = ()
¨g8
; \

2577 
_¨gvec
[9] = ()
¨g9
; \

2578 
_¨gvec
[10] = ()
¨g10
; \

2579 
_¨gvec
[11] = ()
¨g11
; \

2580 
_¨gvec
[12] = ()
¨g12
; \

2581 
__asm__
 volatile( \

2582 
VALGRIND_ALIGN_STACK
 \

2607 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2608 
VALGRIND_RESTORE_STACK
 \

2610 : "Ù" (
_ªs
) \

2611 : "r" (&
_¨gvec
[0]) \

2612 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2614 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2615 } 0)

	)

2621 #i‡
deföed
(
PLAT_µc64be_löux
)

2626 
	#__CALLER_SAVED_REGS
 \

2630 "r11", "r12", "r13"

	)

2637 
	#VALGRIND_ALIGN_STACK
 \

2639 "ædi¸ 1,1,0,59\n\t"

	)

2640 
	#VALGRIND_RESTORE_STACK
 \

2641 "m∏1,28\n\t"

	)

2646 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

2648 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2649 vﬁ©ûê
_¨gvec
[3+0]; \

2650 vﬁ©ûê
_ªs
; \

2652 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2653 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2654 
__asm__
 volatile( \

2655 
VALGRIND_ALIGN_STACK
 \

2660 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2664 
VALGRIND_RESTORE_STACK
 \

2665 : "Ù" (
_ªs
) \

2666 : "r" (&
_¨gvec
[2]) \

2667 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2669 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2670 } 0)

	)

2672 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

2674 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2675 vﬁ©ûê
_¨gvec
[3+1]; \

2676 vﬁ©ûê
_ªs
; \

2678 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2679 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2680 
_¨gvec
[2+1] = ()
¨g1
; \

2681 
__asm__
 volatile( \

2682 
VALGRIND_ALIGN_STACK
 \

2688 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2692 
VALGRIND_RESTORE_STACK
 \

2693 : "Ù" (
_ªs
) \

2694 : "r" (&
_¨gvec
[2]) \

2695 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2697 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2698 } 0)

	)

2700 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

2702 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2703 vﬁ©ûê
_¨gvec
[3+2]; \

2704 vﬁ©ûê
_ªs
; \

2706 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2707 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2708 
_¨gvec
[2+1] = ()
¨g1
; \

2709 
_¨gvec
[2+2] = ()
¨g2
; \

2710 
__asm__
 volatile( \

2711 
VALGRIND_ALIGN_STACK
 \

2718 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2722 
VALGRIND_RESTORE_STACK
 \

2723 : "Ù" (
_ªs
) \

2724 : "r" (&
_¨gvec
[2]) \

2725 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2727 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2728 } 0)

	)

2730 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

2732 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2733 vﬁ©ûê
_¨gvec
[3+3]; \

2734 vﬁ©ûê
_ªs
; \

2736 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2737 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2738 
_¨gvec
[2+1] = ()
¨g1
; \

2739 
_¨gvec
[2+2] = ()
¨g2
; \

2740 
_¨gvec
[2+3] = ()
¨g3
; \

2741 
__asm__
 volatile( \

2742 
VALGRIND_ALIGN_STACK
 \

2750 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2754 
VALGRIND_RESTORE_STACK
 \

2755 : "Ù" (
_ªs
) \

2756 : "r" (&
_¨gvec
[2]) \

2757 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2759 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2760 } 0)

	)

2762 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

2764 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2765 vﬁ©ûê
_¨gvec
[3+4]; \

2766 vﬁ©ûê
_ªs
; \

2768 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2769 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2770 
_¨gvec
[2+1] = ()
¨g1
; \

2771 
_¨gvec
[2+2] = ()
¨g2
; \

2772 
_¨gvec
[2+3] = ()
¨g3
; \

2773 
_¨gvec
[2+4] = ()
¨g4
; \

2774 
__asm__
 volatile( \

2775 
VALGRIND_ALIGN_STACK
 \

2784 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2788 
VALGRIND_RESTORE_STACK
 \

2789 : "Ù" (
_ªs
) \

2790 : "r" (&
_¨gvec
[2]) \

2791 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2793 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2794 } 0)

	)

2796 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

2798 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2799 vﬁ©ûê
_¨gvec
[3+5]; \

2800 vﬁ©ûê
_ªs
; \

2802 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2803 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2804 
_¨gvec
[2+1] = ()
¨g1
; \

2805 
_¨gvec
[2+2] = ()
¨g2
; \

2806 
_¨gvec
[2+3] = ()
¨g3
; \

2807 
_¨gvec
[2+4] = ()
¨g4
; \

2808 
_¨gvec
[2+5] = ()
¨g5
; \

2809 
__asm__
 volatile( \

2810 
VALGRIND_ALIGN_STACK
 \

2820 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2824 
VALGRIND_RESTORE_STACK
 \

2825 : "Ù" (
_ªs
) \

2826 : "r" (&
_¨gvec
[2]) \

2827 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2829 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2830 } 0)

	)

2832 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

2834 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2835 vﬁ©ûê
_¨gvec
[3+6]; \

2836 vﬁ©ûê
_ªs
; \

2838 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2839 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2840 
_¨gvec
[2+1] = ()
¨g1
; \

2841 
_¨gvec
[2+2] = ()
¨g2
; \

2842 
_¨gvec
[2+3] = ()
¨g3
; \

2843 
_¨gvec
[2+4] = ()
¨g4
; \

2844 
_¨gvec
[2+5] = ()
¨g5
; \

2845 
_¨gvec
[2+6] = ()
¨g6
; \

2846 
__asm__
 volatile( \

2847 
VALGRIND_ALIGN_STACK
 \

2858 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2862 
VALGRIND_RESTORE_STACK
 \

2863 : "Ù" (
_ªs
) \

2864 : "r" (&
_¨gvec
[2]) \

2865 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2867 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2868 } 0)

	)

2870 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2871 
¨g7
) \

2873 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2874 vﬁ©ûê
_¨gvec
[3+7]; \

2875 vﬁ©ûê
_ªs
; \

2877 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2878 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2879 
_¨gvec
[2+1] = ()
¨g1
; \

2880 
_¨gvec
[2+2] = ()
¨g2
; \

2881 
_¨gvec
[2+3] = ()
¨g3
; \

2882 
_¨gvec
[2+4] = ()
¨g4
; \

2883 
_¨gvec
[2+5] = ()
¨g5
; \

2884 
_¨gvec
[2+6] = ()
¨g6
; \

2885 
_¨gvec
[2+7] = ()
¨g7
; \

2886 
__asm__
 volatile( \

2887 
VALGRIND_ALIGN_STACK
 \

2899 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2903 
VALGRIND_RESTORE_STACK
 \

2904 : "Ù" (
_ªs
) \

2905 : "r" (&
_¨gvec
[2]) \

2906 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2908 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2909 } 0)

	)

2911 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2912 
¨g7
,
¨g8
) \

2914 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2915 vﬁ©ûê
_¨gvec
[3+8]; \

2916 vﬁ©ûê
_ªs
; \

2918 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2919 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2920 
_¨gvec
[2+1] = ()
¨g1
; \

2921 
_¨gvec
[2+2] = ()
¨g2
; \

2922 
_¨gvec
[2+3] = ()
¨g3
; \

2923 
_¨gvec
[2+4] = ()
¨g4
; \

2924 
_¨gvec
[2+5] = ()
¨g5
; \

2925 
_¨gvec
[2+6] = ()
¨g6
; \

2926 
_¨gvec
[2+7] = ()
¨g7
; \

2927 
_¨gvec
[2+8] = ()
¨g8
; \

2928 
__asm__
 volatile( \

2929 
VALGRIND_ALIGN_STACK
 \

2942 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2946 
VALGRIND_RESTORE_STACK
 \

2947 : "Ù" (
_ªs
) \

2948 : "r" (&
_¨gvec
[2]) \

2949 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

2951 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

2952 } 0)

	)

2954 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

2955 
¨g7
,
¨g8
,
¨g9
) \

2957 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

2958 vﬁ©ûê
_¨gvec
[3+9]; \

2959 vﬁ©ûê
_ªs
; \

2961 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

2962 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

2963 
_¨gvec
[2+1] = ()
¨g1
; \

2964 
_¨gvec
[2+2] = ()
¨g2
; \

2965 
_¨gvec
[2+3] = ()
¨g3
; \

2966 
_¨gvec
[2+4] = ()
¨g4
; \

2967 
_¨gvec
[2+5] = ()
¨g5
; \

2968 
_¨gvec
[2+6] = ()
¨g6
; \

2969 
_¨gvec
[2+7] = ()
¨g7
; \

2970 
_¨gvec
[2+8] = ()
¨g8
; \

2971 
_¨gvec
[2+9] = ()
¨g9
; \

2972 
__asm__
 volatile( \

2973 
VALGRIND_ALIGN_STACK
 \

2991 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

2995 
VALGRIND_RESTORE_STACK
 \

2996 : "Ù" (
_ªs
) \

2997 : "r" (&
_¨gvec
[2]) \

2998 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3000 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3001 } 0)

	)

3003 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3004 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

3006 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3007 vﬁ©ûê
_¨gvec
[3+10]; \

3008 vﬁ©ûê
_ªs
; \

3010 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3011 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3012 
_¨gvec
[2+1] = ()
¨g1
; \

3013 
_¨gvec
[2+2] = ()
¨g2
; \

3014 
_¨gvec
[2+3] = ()
¨g3
; \

3015 
_¨gvec
[2+4] = ()
¨g4
; \

3016 
_¨gvec
[2+5] = ()
¨g5
; \

3017 
_¨gvec
[2+6] = ()
¨g6
; \

3018 
_¨gvec
[2+7] = ()
¨g7
; \

3019 
_¨gvec
[2+8] = ()
¨g8
; \

3020 
_¨gvec
[2+9] = ()
¨g9
; \

3021 
_¨gvec
[2+10] = ()
¨g10
; \

3022 
__asm__
 volatile( \

3023 
VALGRIND_ALIGN_STACK
 \

3044 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

3048 
VALGRIND_RESTORE_STACK
 \

3049 : "Ù" (
_ªs
) \

3050 : "r" (&
_¨gvec
[2]) \

3051 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3053 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3054 } 0)

	)

3056 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3057 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
) \

3059 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3060 vﬁ©ûê
_¨gvec
[3+11]; \

3061 vﬁ©ûê
_ªs
; \

3063 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3064 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3065 
_¨gvec
[2+1] = ()
¨g1
; \

3066 
_¨gvec
[2+2] = ()
¨g2
; \

3067 
_¨gvec
[2+3] = ()
¨g3
; \

3068 
_¨gvec
[2+4] = ()
¨g4
; \

3069 
_¨gvec
[2+5] = ()
¨g5
; \

3070 
_¨gvec
[2+6] = ()
¨g6
; \

3071 
_¨gvec
[2+7] = ()
¨g7
; \

3072 
_¨gvec
[2+8] = ()
¨g8
; \

3073 
_¨gvec
[2+9] = ()
¨g9
; \

3074 
_¨gvec
[2+10] = ()
¨g10
; \

3075 
_¨gvec
[2+11] = ()
¨g11
; \

3076 
__asm__
 volatile( \

3077 
VALGRIND_ALIGN_STACK
 \

3101 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

3105 
VALGRIND_RESTORE_STACK
 \

3106 : "Ù" (
_ªs
) \

3107 : "r" (&
_¨gvec
[2]) \

3108 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3110 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3111 } 0)

	)

3113 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3114 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
,
¨g12
) \

3116 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3117 vﬁ©ûê
_¨gvec
[3+12]; \

3118 vﬁ©ûê
_ªs
; \

3120 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3121 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3122 
_¨gvec
[2+1] = ()
¨g1
; \

3123 
_¨gvec
[2+2] = ()
¨g2
; \

3124 
_¨gvec
[2+3] = ()
¨g3
; \

3125 
_¨gvec
[2+4] = ()
¨g4
; \

3126 
_¨gvec
[2+5] = ()
¨g5
; \

3127 
_¨gvec
[2+6] = ()
¨g6
; \

3128 
_¨gvec
[2+7] = ()
¨g7
; \

3129 
_¨gvec
[2+8] = ()
¨g8
; \

3130 
_¨gvec
[2+9] = ()
¨g9
; \

3131 
_¨gvec
[2+10] = ()
¨g10
; \

3132 
_¨gvec
[2+11] = ()
¨g11
; \

3133 
_¨gvec
[2+12] = ()
¨g12
; \

3134 
__asm__
 volatile( \

3135 
VALGRIND_ALIGN_STACK
 \

3162 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11
 \

3166 
VALGRIND_RESTORE_STACK
 \

3167 : "Ù" (
_ªs
) \

3168 : "r" (&
_¨gvec
[2]) \

3169 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3171 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3172 } 0)

	)

3177 #i‡
deföed
(
PLAT_µc64À_löux
)

3182 
	#__CALLER_SAVED_REGS
 \

3186 "r11", "r12", "r13"

	)

3193 
	#VALGRIND_ALIGN_STACK
 \

3195 "ædi¸ 1,1,0,59\n\t"

	)

3196 
	#VALGRIND_RESTORE_STACK
 \

3197 "m∏1,28\n\t"

	)

3202 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

3204 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3205 vﬁ©ûê
_¨gvec
[3+0]; \

3206 vﬁ©ûê
_ªs
; \

3208 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3209 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3210 
__asm__
 volatile( \

3211 
VALGRIND_ALIGN_STACK
 \

3216 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3220 
VALGRIND_RESTORE_STACK
 \

3221 : "Ù" (
_ªs
) \

3222 : "r" (&
_¨gvec
[2]) \

3223 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3225 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3226 } 0)

	)

3228 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

3230 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3231 vﬁ©ûê
_¨gvec
[3+1]; \

3232 vﬁ©ûê
_ªs
; \

3234 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3235 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3236 
_¨gvec
[2+1] = ()
¨g1
; \

3237 
__asm__
 volatile( \

3238 
VALGRIND_ALIGN_STACK
 \

3244 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3248 
VALGRIND_RESTORE_STACK
 \

3249 : "Ù" (
_ªs
) \

3250 : "r" (&
_¨gvec
[2]) \

3251 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3253 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3254 } 0)

	)

3256 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

3258 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3259 vﬁ©ûê
_¨gvec
[3+2]; \

3260 vﬁ©ûê
_ªs
; \

3262 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3263 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3264 
_¨gvec
[2+1] = ()
¨g1
; \

3265 
_¨gvec
[2+2] = ()
¨g2
; \

3266 
__asm__
 volatile( \

3267 
VALGRIND_ALIGN_STACK
 \

3274 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3278 
VALGRIND_RESTORE_STACK
 \

3279 : "Ù" (
_ªs
) \

3280 : "r" (&
_¨gvec
[2]) \

3281 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3283 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3284 } 0)

	)

3286 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

3288 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3289 vﬁ©ûê
_¨gvec
[3+3]; \

3290 vﬁ©ûê
_ªs
; \

3292 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3293 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3294 
_¨gvec
[2+1] = ()
¨g1
; \

3295 
_¨gvec
[2+2] = ()
¨g2
; \

3296 
_¨gvec
[2+3] = ()
¨g3
; \

3297 
__asm__
 volatile( \

3298 
VALGRIND_ALIGN_STACK
 \

3306 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3310 
VALGRIND_RESTORE_STACK
 \

3311 : "Ù" (
_ªs
) \

3312 : "r" (&
_¨gvec
[2]) \

3313 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3315 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3316 } 0)

	)

3318 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

3320 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3321 vﬁ©ûê
_¨gvec
[3+4]; \

3322 vﬁ©ûê
_ªs
; \

3324 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3325 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3326 
_¨gvec
[2+1] = ()
¨g1
; \

3327 
_¨gvec
[2+2] = ()
¨g2
; \

3328 
_¨gvec
[2+3] = ()
¨g3
; \

3329 
_¨gvec
[2+4] = ()
¨g4
; \

3330 
__asm__
 volatile( \

3331 
VALGRIND_ALIGN_STACK
 \

3340 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3344 
VALGRIND_RESTORE_STACK
 \

3345 : "Ù" (
_ªs
) \

3346 : "r" (&
_¨gvec
[2]) \

3347 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3349 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3350 } 0)

	)

3352 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

3354 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3355 vﬁ©ûê
_¨gvec
[3+5]; \

3356 vﬁ©ûê
_ªs
; \

3358 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3359 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3360 
_¨gvec
[2+1] = ()
¨g1
; \

3361 
_¨gvec
[2+2] = ()
¨g2
; \

3362 
_¨gvec
[2+3] = ()
¨g3
; \

3363 
_¨gvec
[2+4] = ()
¨g4
; \

3364 
_¨gvec
[2+5] = ()
¨g5
; \

3365 
__asm__
 volatile( \

3366 
VALGRIND_ALIGN_STACK
 \

3376 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3380 
VALGRIND_RESTORE_STACK
 \

3381 : "Ù" (
_ªs
) \

3382 : "r" (&
_¨gvec
[2]) \

3383 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3385 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3386 } 0)

	)

3388 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

3390 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3391 vﬁ©ûê
_¨gvec
[3+6]; \

3392 vﬁ©ûê
_ªs
; \

3394 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3395 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3396 
_¨gvec
[2+1] = ()
¨g1
; \

3397 
_¨gvec
[2+2] = ()
¨g2
; \

3398 
_¨gvec
[2+3] = ()
¨g3
; \

3399 
_¨gvec
[2+4] = ()
¨g4
; \

3400 
_¨gvec
[2+5] = ()
¨g5
; \

3401 
_¨gvec
[2+6] = ()
¨g6
; \

3402 
__asm__
 volatile( \

3403 
VALGRIND_ALIGN_STACK
 \

3414 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3418 
VALGRIND_RESTORE_STACK
 \

3419 : "Ù" (
_ªs
) \

3420 : "r" (&
_¨gvec
[2]) \

3421 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3423 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3424 } 0)

	)

3426 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3427 
¨g7
) \

3429 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3430 vﬁ©ûê
_¨gvec
[3+7]; \

3431 vﬁ©ûê
_ªs
; \

3433 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3434 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3435 
_¨gvec
[2+1] = ()
¨g1
; \

3436 
_¨gvec
[2+2] = ()
¨g2
; \

3437 
_¨gvec
[2+3] = ()
¨g3
; \

3438 
_¨gvec
[2+4] = ()
¨g4
; \

3439 
_¨gvec
[2+5] = ()
¨g5
; \

3440 
_¨gvec
[2+6] = ()
¨g6
; \

3441 
_¨gvec
[2+7] = ()
¨g7
; \

3442 
__asm__
 volatile( \

3443 
VALGRIND_ALIGN_STACK
 \

3455 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3459 
VALGRIND_RESTORE_STACK
 \

3460 : "Ù" (
_ªs
) \

3461 : "r" (&
_¨gvec
[2]) \

3462 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3464 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3465 } 0)

	)

3467 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3468 
¨g7
,
¨g8
) \

3470 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3471 vﬁ©ûê
_¨gvec
[3+8]; \

3472 vﬁ©ûê
_ªs
; \

3474 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3475 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3476 
_¨gvec
[2+1] = ()
¨g1
; \

3477 
_¨gvec
[2+2] = ()
¨g2
; \

3478 
_¨gvec
[2+3] = ()
¨g3
; \

3479 
_¨gvec
[2+4] = ()
¨g4
; \

3480 
_¨gvec
[2+5] = ()
¨g5
; \

3481 
_¨gvec
[2+6] = ()
¨g6
; \

3482 
_¨gvec
[2+7] = ()
¨g7
; \

3483 
_¨gvec
[2+8] = ()
¨g8
; \

3484 
__asm__
 volatile( \

3485 
VALGRIND_ALIGN_STACK
 \

3498 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3502 
VALGRIND_RESTORE_STACK
 \

3503 : "Ù" (
_ªs
) \

3504 : "r" (&
_¨gvec
[2]) \

3505 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3507 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3508 } 0)

	)

3510 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3511 
¨g7
,
¨g8
,
¨g9
) \

3513 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3514 vﬁ©ûê
_¨gvec
[3+9]; \

3515 vﬁ©ûê
_ªs
; \

3517 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3518 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3519 
_¨gvec
[2+1] = ()
¨g1
; \

3520 
_¨gvec
[2+2] = ()
¨g2
; \

3521 
_¨gvec
[2+3] = ()
¨g3
; \

3522 
_¨gvec
[2+4] = ()
¨g4
; \

3523 
_¨gvec
[2+5] = ()
¨g5
; \

3524 
_¨gvec
[2+6] = ()
¨g6
; \

3525 
_¨gvec
[2+7] = ()
¨g7
; \

3526 
_¨gvec
[2+8] = ()
¨g8
; \

3527 
_¨gvec
[2+9] = ()
¨g9
; \

3528 
__asm__
 volatile( \

3529 
VALGRIND_ALIGN_STACK
 \

3547 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3551 
VALGRIND_RESTORE_STACK
 \

3552 : "Ù" (
_ªs
) \

3553 : "r" (&
_¨gvec
[2]) \

3554 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3556 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3557 } 0)

	)

3559 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3560 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

3562 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3563 vﬁ©ûê
_¨gvec
[3+10]; \

3564 vﬁ©ûê
_ªs
; \

3566 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3567 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3568 
_¨gvec
[2+1] = ()
¨g1
; \

3569 
_¨gvec
[2+2] = ()
¨g2
; \

3570 
_¨gvec
[2+3] = ()
¨g3
; \

3571 
_¨gvec
[2+4] = ()
¨g4
; \

3572 
_¨gvec
[2+5] = ()
¨g5
; \

3573 
_¨gvec
[2+6] = ()
¨g6
; \

3574 
_¨gvec
[2+7] = ()
¨g7
; \

3575 
_¨gvec
[2+8] = ()
¨g8
; \

3576 
_¨gvec
[2+9] = ()
¨g9
; \

3577 
_¨gvec
[2+10] = ()
¨g10
; \

3578 
__asm__
 volatile( \

3579 
VALGRIND_ALIGN_STACK
 \

3600 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3604 
VALGRIND_RESTORE_STACK
 \

3605 : "Ù" (
_ªs
) \

3606 : "r" (&
_¨gvec
[2]) \

3607 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3609 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3610 } 0)

	)

3612 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3613 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
) \

3615 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3616 vﬁ©ûê
_¨gvec
[3+11]; \

3617 vﬁ©ûê
_ªs
; \

3619 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3620 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3621 
_¨gvec
[2+1] = ()
¨g1
; \

3622 
_¨gvec
[2+2] = ()
¨g2
; \

3623 
_¨gvec
[2+3] = ()
¨g3
; \

3624 
_¨gvec
[2+4] = ()
¨g4
; \

3625 
_¨gvec
[2+5] = ()
¨g5
; \

3626 
_¨gvec
[2+6] = ()
¨g6
; \

3627 
_¨gvec
[2+7] = ()
¨g7
; \

3628 
_¨gvec
[2+8] = ()
¨g8
; \

3629 
_¨gvec
[2+9] = ()
¨g9
; \

3630 
_¨gvec
[2+10] = ()
¨g10
; \

3631 
_¨gvec
[2+11] = ()
¨g11
; \

3632 
__asm__
 volatile( \

3633 
VALGRIND_ALIGN_STACK
 \

3657 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3661 
VALGRIND_RESTORE_STACK
 \

3662 : "Ù" (
_ªs
) \

3663 : "r" (&
_¨gvec
[2]) \

3664 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3666 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3667 } 0)

	)

3669 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3670 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
,
¨g12
) \

3672 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3673 vﬁ©ûê
_¨gvec
[3+12]; \

3674 vﬁ©ûê
_ªs
; \

3676 
_¨gvec
[1] = ()
_‹ig
.
r2
; \

3677 
_¨gvec
[2] = ()
_‹ig
.
ƒaddr
; \

3678 
_¨gvec
[2+1] = ()
¨g1
; \

3679 
_¨gvec
[2+2] = ()
¨g2
; \

3680 
_¨gvec
[2+3] = ()
¨g3
; \

3681 
_¨gvec
[2+4] = ()
¨g4
; \

3682 
_¨gvec
[2+5] = ()
¨g5
; \

3683 
_¨gvec
[2+6] = ()
¨g6
; \

3684 
_¨gvec
[2+7] = ()
¨g7
; \

3685 
_¨gvec
[2+8] = ()
¨g8
; \

3686 
_¨gvec
[2+9] = ()
¨g9
; \

3687 
_¨gvec
[2+10] = ()
¨g10
; \

3688 
_¨gvec
[2+11] = ()
¨g11
; \

3689 
_¨gvec
[2+12] = ()
¨g12
; \

3690 
__asm__
 volatile( \

3691 
VALGRIND_ALIGN_STACK
 \

3718 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12
 \

3722 
VALGRIND_RESTORE_STACK
 \

3723 : "Ù" (
_ªs
) \

3724 : "r" (&
_¨gvec
[2]) \

3725 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r28" \

3727 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3728 } 0)

	)

3734 #i‡
deföed
(
PLAT_¨m_löux
)

3737 
	#__CALLER_SAVED_REGS
 "r0", "r1", "r2", "r3","r4","r14"

	)

3752 
	#VALGRIND_ALIGN_STACK
 \

3756 "mov sp,Ñ4\n\t"

	)

3757 
	#VALGRIND_RESTORE_STACK
 \

3758 "mov sp,Ñ10\n\t"

	)

3763 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

3765 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3766 vﬁ©ûê
_¨gvec
[1]; \

3767 vﬁ©ûê
_ªs
; \

3768 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3769 
__asm__
 volatile( \

3770 
VALGRIND_ALIGN_STACK
 \

3772 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3773 
VALGRIND_RESTORE_STACK
 \

3775 : "Ù" (
_ªs
) \

3776 : "0" (&
_¨gvec
[0]) \

3777 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3779 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3780 } 0)

	)

3782 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

3784 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3785 vﬁ©ûê
_¨gvec
[2]; \

3786 vﬁ©ûê
_ªs
; \

3787 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3788 
_¨gvec
[1] = ()(
¨g1
); \

3789 
__asm__
 volatile( \

3790 
VALGRIND_ALIGN_STACK
 \

3793 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3794 
VALGRIND_RESTORE_STACK
 \

3796 : "Ù" (
_ªs
) \

3797 : "0" (&
_¨gvec
[0]) \

3798 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3800 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3801 } 0)

	)

3803 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

3805 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3806 vﬁ©ûê
_¨gvec
[3]; \

3807 vﬁ©ûê
_ªs
; \

3808 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3809 
_¨gvec
[1] = ()(
¨g1
); \

3810 
_¨gvec
[2] = ()(
¨g2
); \

3811 
__asm__
 volatile( \

3812 
VALGRIND_ALIGN_STACK
 \

3816 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3817 
VALGRIND_RESTORE_STACK
 \

3819 : "Ù" (
_ªs
) \

3820 : "0" (&
_¨gvec
[0]) \

3821 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3823 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3824 } 0)

	)

3826 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

3828 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3829 vﬁ©ûê
_¨gvec
[4]; \

3830 vﬁ©ûê
_ªs
; \

3831 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3832 
_¨gvec
[1] = ()(
¨g1
); \

3833 
_¨gvec
[2] = ()(
¨g2
); \

3834 
_¨gvec
[3] = ()(
¨g3
); \

3835 
__asm__
 volatile( \

3836 
VALGRIND_ALIGN_STACK
 \

3841 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3842 
VALGRIND_RESTORE_STACK
 \

3844 : "Ù" (
_ªs
) \

3845 : "0" (&
_¨gvec
[0]) \

3846 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3848 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3849 } 0)

	)

3851 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

3853 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3854 vﬁ©ûê
_¨gvec
[5]; \

3855 vﬁ©ûê
_ªs
; \

3856 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3857 
_¨gvec
[1] = ()(
¨g1
); \

3858 
_¨gvec
[2] = ()(
¨g2
); \

3859 
_¨gvec
[3] = ()(
¨g3
); \

3860 
_¨gvec
[4] = ()(
¨g4
); \

3861 
__asm__
 volatile( \

3862 
VALGRIND_ALIGN_STACK
 \

3868 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3869 
VALGRIND_RESTORE_STACK
 \

3871 : "Ù" (
_ªs
) \

3872 : "0" (&
_¨gvec
[0]) \

3873 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3875 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3876 } 0)

	)

3878 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

3880 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3881 vﬁ©ûê
_¨gvec
[6]; \

3882 vﬁ©ûê
_ªs
; \

3883 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3884 
_¨gvec
[1] = ()(
¨g1
); \

3885 
_¨gvec
[2] = ()(
¨g2
); \

3886 
_¨gvec
[3] = ()(
¨g3
); \

3887 
_¨gvec
[4] = ()(
¨g4
); \

3888 
_¨gvec
[5] = ()(
¨g5
); \

3889 
__asm__
 volatile( \

3890 
VALGRIND_ALIGN_STACK
 \

3899 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3900 
VALGRIND_RESTORE_STACK
 \

3902 : "Ù" (
_ªs
) \

3903 : "0" (&
_¨gvec
[0]) \

3904 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3906 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3907 } 0)

	)

3909 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

3911 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3912 vﬁ©ûê
_¨gvec
[7]; \

3913 vﬁ©ûê
_ªs
; \

3914 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3915 
_¨gvec
[1] = ()(
¨g1
); \

3916 
_¨gvec
[2] = ()(
¨g2
); \

3917 
_¨gvec
[3] = ()(
¨g3
); \

3918 
_¨gvec
[4] = ()(
¨g4
); \

3919 
_¨gvec
[5] = ()(
¨g5
); \

3920 
_¨gvec
[6] = ()(
¨g6
); \

3921 
__asm__
 volatile( \

3922 
VALGRIND_ALIGN_STACK
 \

3931 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3932 
VALGRIND_RESTORE_STACK
 \

3934 : "Ù" (
_ªs
) \

3935 : "0" (&
_¨gvec
[0]) \

3936 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3938 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3939 } 0)

	)

3941 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3942 
¨g7
) \

3944 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3945 vﬁ©ûê
_¨gvec
[8]; \

3946 vﬁ©ûê
_ªs
; \

3947 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3948 
_¨gvec
[1] = ()(
¨g1
); \

3949 
_¨gvec
[2] = ()(
¨g2
); \

3950 
_¨gvec
[3] = ()(
¨g3
); \

3951 
_¨gvec
[4] = ()(
¨g4
); \

3952 
_¨gvec
[5] = ()(
¨g5
); \

3953 
_¨gvec
[6] = ()(
¨g6
); \

3954 
_¨gvec
[7] = ()(
¨g7
); \

3955 
__asm__
 volatile( \

3956 
VALGRIND_ALIGN_STACK
 \

3967 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

3968 
VALGRIND_RESTORE_STACK
 \

3970 : "Ù" (
_ªs
) \

3971 : "0" (&
_¨gvec
[0]) \

3972 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

3974 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

3975 } 0)

	)

3977 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

3978 
¨g7
,
¨g8
) \

3980 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

3981 vﬁ©ûê
_¨gvec
[9]; \

3982 vﬁ©ûê
_ªs
; \

3983 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

3984 
_¨gvec
[1] = ()(
¨g1
); \

3985 
_¨gvec
[2] = ()(
¨g2
); \

3986 
_¨gvec
[3] = ()(
¨g3
); \

3987 
_¨gvec
[4] = ()(
¨g4
); \

3988 
_¨gvec
[5] = ()(
¨g5
); \

3989 
_¨gvec
[6] = ()(
¨g6
); \

3990 
_¨gvec
[7] = ()(
¨g7
); \

3991 
_¨gvec
[8] = ()(
¨g8
); \

3992 
__asm__
 volatile( \

3993 
VALGRIND_ALIGN_STACK
 \

4004 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

4005 
VALGRIND_RESTORE_STACK
 \

4007 : "Ù" (
_ªs
) \

4008 : "0" (&
_¨gvec
[0]) \

4009 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

4011 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4012 } 0)

	)

4014 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4015 
¨g7
,
¨g8
,
¨g9
) \

4017 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4018 vﬁ©ûê
_¨gvec
[10]; \

4019 vﬁ©ûê
_ªs
; \

4020 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4021 
_¨gvec
[1] = ()(
¨g1
); \

4022 
_¨gvec
[2] = ()(
¨g2
); \

4023 
_¨gvec
[3] = ()(
¨g3
); \

4024 
_¨gvec
[4] = ()(
¨g4
); \

4025 
_¨gvec
[5] = ()(
¨g5
); \

4026 
_¨gvec
[6] = ()(
¨g6
); \

4027 
_¨gvec
[7] = ()(
¨g7
); \

4028 
_¨gvec
[8] = ()(
¨g8
); \

4029 
_¨gvec
[9] = ()(
¨g9
); \

4030 
__asm__
 volatile( \

4031 
VALGRIND_ALIGN_STACK
 \

4044 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

4045 
VALGRIND_RESTORE_STACK
 \

4047 : "Ù" (
_ªs
) \

4048 : "0" (&
_¨gvec
[0]) \

4049 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

4051 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4052 } 0)

	)

4054 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4055 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

4057 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4058 vﬁ©ûê
_¨gvec
[11]; \

4059 vﬁ©ûê
_ªs
; \

4060 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4061 
_¨gvec
[1] = ()(
¨g1
); \

4062 
_¨gvec
[2] = ()(
¨g2
); \

4063 
_¨gvec
[3] = ()(
¨g3
); \

4064 
_¨gvec
[4] = ()(
¨g4
); \

4065 
_¨gvec
[5] = ()(
¨g5
); \

4066 
_¨gvec
[6] = ()(
¨g6
); \

4067 
_¨gvec
[7] = ()(
¨g7
); \

4068 
_¨gvec
[8] = ()(
¨g8
); \

4069 
_¨gvec
[9] = ()(
¨g9
); \

4070 
_¨gvec
[10] = ()(
¨g10
); \

4071 
__asm__
 volatile( \

4072 
VALGRIND_ALIGN_STACK
 \

4086 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

4087 
VALGRIND_RESTORE_STACK
 \

4089 : "Ù" (
_ªs
) \

4090 : "0" (&
_¨gvec
[0]) \

4091 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

4093 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4094 } 0)

	)

4096 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

4097 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

4098 
¨g11
) \

4100 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4101 vﬁ©ûê
_¨gvec
[12]; \

4102 vﬁ©ûê
_ªs
; \

4103 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4104 
_¨gvec
[1] = ()(
¨g1
); \

4105 
_¨gvec
[2] = ()(
¨g2
); \

4106 
_¨gvec
[3] = ()(
¨g3
); \

4107 
_¨gvec
[4] = ()(
¨g4
); \

4108 
_¨gvec
[5] = ()(
¨g5
); \

4109 
_¨gvec
[6] = ()(
¨g6
); \

4110 
_¨gvec
[7] = ()(
¨g7
); \

4111 
_¨gvec
[8] = ()(
¨g8
); \

4112 
_¨gvec
[9] = ()(
¨g9
); \

4113 
_¨gvec
[10] = ()(
¨g10
); \

4114 
_¨gvec
[11] = ()(
¨g11
); \

4115 
__asm__
 volatile( \

4116 
VALGRIND_ALIGN_STACK
 \

4132 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

4133 
VALGRIND_RESTORE_STACK
 \

4135 : "Ù" (
_ªs
) \

4136 : "0" (&
_¨gvec
[0]) \

4137 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

4139 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4140 } 0)

	)

4142 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

4143 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

4144 
¨g11
,
¨g12
) \

4146 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4147 vﬁ©ûê
_¨gvec
[13]; \

4148 vﬁ©ûê
_ªs
; \

4149 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4150 
_¨gvec
[1] = ()(
¨g1
); \

4151 
_¨gvec
[2] = ()(
¨g2
); \

4152 
_¨gvec
[3] = ()(
¨g3
); \

4153 
_¨gvec
[4] = ()(
¨g4
); \

4154 
_¨gvec
[5] = ()(
¨g5
); \

4155 
_¨gvec
[6] = ()(
¨g6
); \

4156 
_¨gvec
[7] = ()(
¨g7
); \

4157 
_¨gvec
[8] = ()(
¨g8
); \

4158 
_¨gvec
[9] = ()(
¨g9
); \

4159 
_¨gvec
[10] = ()(
¨g10
); \

4160 
_¨gvec
[11] = ()(
¨g11
); \

4161 
_¨gvec
[12] = ()(
¨g12
); \

4162 
__asm__
 volatile( \

4163 
VALGRIND_ALIGN_STACK
 \

4179 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4
 \

4180 
VALGRIND_RESTORE_STACK
 \

4182 : "Ù" (
_ªs
) \

4183 : "0" (&
_¨gvec
[0]) \

4184 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "r10" \

4186 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4187 } 0)

	)

4193 #i‡
deföed
(
PLAT_¨m64_löux
)

4196 
	#__CALLER_SAVED_REGS
 \

4203 "v26", "v27", "v28", "v29", "v30", "v31"

	)

4207 
	#VALGRIND_ALIGN_STACK
 \

4209 "bi¯•, x21, #15\n\t"

	)

4210 
	#VALGRIND_RESTORE_STACK
 \

4211 "mov sp, x21\n\t"

	)

4216 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

4218 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4219 vﬁ©ûê
_¨gvec
[1]; \

4220 vﬁ©ûê
_ªs
; \

4221 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4222 
__asm__
 volatile( \

4223 
VALGRIND_ALIGN_STACK
 \

4225 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4226 
VALGRIND_RESTORE_STACK
 \

4228 : "Ù" (
_ªs
) \

4229 : "0" (&
_¨gvec
[0]) \

4230 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4232 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4233 } 0)

	)

4235 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

4237 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4238 vﬁ©ûê
_¨gvec
[2]; \

4239 vﬁ©ûê
_ªs
; \

4240 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4241 
_¨gvec
[1] = ()(
¨g1
); \

4242 
__asm__
 volatile( \

4243 
VALGRIND_ALIGN_STACK
 \

4246 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4247 
VALGRIND_RESTORE_STACK
 \

4249 : "Ù" (
_ªs
) \

4250 : "0" (&
_¨gvec
[0]) \

4251 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4253 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4254 } 0)

	)

4256 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

4258 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4259 vﬁ©ûê
_¨gvec
[3]; \

4260 vﬁ©ûê
_ªs
; \

4261 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4262 
_¨gvec
[1] = ()(
¨g1
); \

4263 
_¨gvec
[2] = ()(
¨g2
); \

4264 
__asm__
 volatile( \

4265 
VALGRIND_ALIGN_STACK
 \

4269 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4270 
VALGRIND_RESTORE_STACK
 \

4272 : "Ù" (
_ªs
) \

4273 : "0" (&
_¨gvec
[0]) \

4274 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4276 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4277 } 0)

	)

4279 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

4281 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4282 vﬁ©ûê
_¨gvec
[4]; \

4283 vﬁ©ûê
_ªs
; \

4284 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4285 
_¨gvec
[1] = ()(
¨g1
); \

4286 
_¨gvec
[2] = ()(
¨g2
); \

4287 
_¨gvec
[3] = ()(
¨g3
); \

4288 
__asm__
 volatile( \

4289 
VALGRIND_ALIGN_STACK
 \

4294 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4295 
VALGRIND_RESTORE_STACK
 \

4297 : "Ù" (
_ªs
) \

4298 : "0" (&
_¨gvec
[0]) \

4299 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4301 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4302 } 0)

	)

4304 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

4306 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4307 vﬁ©ûê
_¨gvec
[5]; \

4308 vﬁ©ûê
_ªs
; \

4309 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4310 
_¨gvec
[1] = ()(
¨g1
); \

4311 
_¨gvec
[2] = ()(
¨g2
); \

4312 
_¨gvec
[3] = ()(
¨g3
); \

4313 
_¨gvec
[4] = ()(
¨g4
); \

4314 
__asm__
 volatile( \

4315 
VALGRIND_ALIGN_STACK
 \

4321 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4322 
VALGRIND_RESTORE_STACK
 \

4324 : "Ù" (
_ªs
) \

4325 : "0" (&
_¨gvec
[0]) \

4326 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4328 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4329 } 0)

	)

4331 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

4333 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4334 vﬁ©ûê
_¨gvec
[6]; \

4335 vﬁ©ûê
_ªs
; \

4336 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4337 
_¨gvec
[1] = ()(
¨g1
); \

4338 
_¨gvec
[2] = ()(
¨g2
); \

4339 
_¨gvec
[3] = ()(
¨g3
); \

4340 
_¨gvec
[4] = ()(
¨g4
); \

4341 
_¨gvec
[5] = ()(
¨g5
); \

4342 
__asm__
 volatile( \

4343 
VALGRIND_ALIGN_STACK
 \

4350 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4351 
VALGRIND_RESTORE_STACK
 \

4353 : "Ù" (
_ªs
) \

4354 : "0" (&
_¨gvec
[0]) \

4355 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4357 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4358 } 0)

	)

4360 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

4362 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4363 vﬁ©ûê
_¨gvec
[7]; \

4364 vﬁ©ûê
_ªs
; \

4365 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4366 
_¨gvec
[1] = ()(
¨g1
); \

4367 
_¨gvec
[2] = ()(
¨g2
); \

4368 
_¨gvec
[3] = ()(
¨g3
); \

4369 
_¨gvec
[4] = ()(
¨g4
); \

4370 
_¨gvec
[5] = ()(
¨g5
); \

4371 
_¨gvec
[6] = ()(
¨g6
); \

4372 
__asm__
 volatile( \

4373 
VALGRIND_ALIGN_STACK
 \

4381 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4382 
VALGRIND_RESTORE_STACK
 \

4384 : "Ù" (
_ªs
) \

4385 : "0" (&
_¨gvec
[0]) \

4386 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4388 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4389 } 0)

	)

4391 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4392 
¨g7
) \

4394 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4395 vﬁ©ûê
_¨gvec
[8]; \

4396 vﬁ©ûê
_ªs
; \

4397 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4398 
_¨gvec
[1] = ()(
¨g1
); \

4399 
_¨gvec
[2] = ()(
¨g2
); \

4400 
_¨gvec
[3] = ()(
¨g3
); \

4401 
_¨gvec
[4] = ()(
¨g4
); \

4402 
_¨gvec
[5] = ()(
¨g5
); \

4403 
_¨gvec
[6] = ()(
¨g6
); \

4404 
_¨gvec
[7] = ()(
¨g7
); \

4405 
__asm__
 volatile( \

4406 
VALGRIND_ALIGN_STACK
 \

4415 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4416 
VALGRIND_RESTORE_STACK
 \

4418 : "Ù" (
_ªs
) \

4419 : "0" (&
_¨gvec
[0]) \

4420 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4422 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4423 } 0)

	)

4425 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4426 
¨g7
,
¨g8
) \

4428 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4429 vﬁ©ûê
_¨gvec
[9]; \

4430 vﬁ©ûê
_ªs
; \

4431 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4432 
_¨gvec
[1] = ()(
¨g1
); \

4433 
_¨gvec
[2] = ()(
¨g2
); \

4434 
_¨gvec
[3] = ()(
¨g3
); \

4435 
_¨gvec
[4] = ()(
¨g4
); \

4436 
_¨gvec
[5] = ()(
¨g5
); \

4437 
_¨gvec
[6] = ()(
¨g6
); \

4438 
_¨gvec
[7] = ()(
¨g7
); \

4439 
_¨gvec
[8] = ()(
¨g8
); \

4440 
__asm__
 volatile( \

4441 
VALGRIND_ALIGN_STACK
 \

4451 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4452 
VALGRIND_RESTORE_STACK
 \

4454 : "Ù" (
_ªs
) \

4455 : "0" (&
_¨gvec
[0]) \

4456 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4458 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4459 } 0)

	)

4461 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4462 
¨g7
,
¨g8
,
¨g9
) \

4464 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4465 vﬁ©ûê
_¨gvec
[10]; \

4466 vﬁ©ûê
_ªs
; \

4467 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4468 
_¨gvec
[1] = ()(
¨g1
); \

4469 
_¨gvec
[2] = ()(
¨g2
); \

4470 
_¨gvec
[3] = ()(
¨g3
); \

4471 
_¨gvec
[4] = ()(
¨g4
); \

4472 
_¨gvec
[5] = ()(
¨g5
); \

4473 
_¨gvec
[6] = ()(
¨g6
); \

4474 
_¨gvec
[7] = ()(
¨g7
); \

4475 
_¨gvec
[8] = ()(
¨g8
); \

4476 
_¨gvec
[9] = ()(
¨g9
); \

4477 
__asm__
 volatile( \

4478 
VALGRIND_ALIGN_STACK
 \

4491 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4492 
VALGRIND_RESTORE_STACK
 \

4494 : "Ù" (
_ªs
) \

4495 : "0" (&
_¨gvec
[0]) \

4496 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4498 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4499 } 0)

	)

4501 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4502 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

4504 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4505 vﬁ©ûê
_¨gvec
[11]; \

4506 vﬁ©ûê
_ªs
; \

4507 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4508 
_¨gvec
[1] = ()(
¨g1
); \

4509 
_¨gvec
[2] = ()(
¨g2
); \

4510 
_¨gvec
[3] = ()(
¨g3
); \

4511 
_¨gvec
[4] = ()(
¨g4
); \

4512 
_¨gvec
[5] = ()(
¨g5
); \

4513 
_¨gvec
[6] = ()(
¨g6
); \

4514 
_¨gvec
[7] = ()(
¨g7
); \

4515 
_¨gvec
[8] = ()(
¨g8
); \

4516 
_¨gvec
[9] = ()(
¨g9
); \

4517 
_¨gvec
[10] = ()(
¨g10
); \

4518 
__asm__
 volatile( \

4519 
VALGRIND_ALIGN_STACK
 \

4534 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4535 
VALGRIND_RESTORE_STACK
 \

4537 : "Ù" (
_ªs
) \

4538 : "0" (&
_¨gvec
[0]) \

4539 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4541 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4542 } 0)

	)

4544 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4545 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
) \

4547 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4548 vﬁ©ûê
_¨gvec
[12]; \

4549 vﬁ©ûê
_ªs
; \

4550 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4551 
_¨gvec
[1] = ()(
¨g1
); \

4552 
_¨gvec
[2] = ()(
¨g2
); \

4553 
_¨gvec
[3] = ()(
¨g3
); \

4554 
_¨gvec
[4] = ()(
¨g4
); \

4555 
_¨gvec
[5] = ()(
¨g5
); \

4556 
_¨gvec
[6] = ()(
¨g6
); \

4557 
_¨gvec
[7] = ()(
¨g7
); \

4558 
_¨gvec
[8] = ()(
¨g8
); \

4559 
_¨gvec
[9] = ()(
¨g9
); \

4560 
_¨gvec
[10] = ()(
¨g10
); \

4561 
_¨gvec
[11] = ()(
¨g11
); \

4562 
__asm__
 volatile( \

4563 
VALGRIND_ALIGN_STACK
 \

4580 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4581 
VALGRIND_RESTORE_STACK
 \

4583 : "Ù" (
_ªs
) \

4584 : "0" (&
_¨gvec
[0]) \

4585 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4587 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4588 } 0)

	)

4590 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

4591 
¨g7
,
¨g8
,
¨g9
,
¨g10
,
¨g11
, \

4592 
¨g12
) \

4594 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4595 vﬁ©ûê
_¨gvec
[13]; \

4596 vﬁ©ûê
_ªs
; \

4597 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4598 
_¨gvec
[1] = ()(
¨g1
); \

4599 
_¨gvec
[2] = ()(
¨g2
); \

4600 
_¨gvec
[3] = ()(
¨g3
); \

4601 
_¨gvec
[4] = ()(
¨g4
); \

4602 
_¨gvec
[5] = ()(
¨g5
); \

4603 
_¨gvec
[6] = ()(
¨g6
); \

4604 
_¨gvec
[7] = ()(
¨g7
); \

4605 
_¨gvec
[8] = ()(
¨g8
); \

4606 
_¨gvec
[9] = ()(
¨g9
); \

4607 
_¨gvec
[10] = ()(
¨g10
); \

4608 
_¨gvec
[11] = ()(
¨g11
); \

4609 
_¨gvec
[12] = ()(
¨g12
); \

4610 
__asm__
 volatile( \

4611 
VALGRIND_ALIGN_STACK
 \

4630 
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8
 \

4631 
VALGRIND_RESTORE_STACK
 \

4633 : "Ù" (
_ªs
) \

4634 : "0" (&
_¨gvec
[0]) \

4635 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
, "x21" \

4637 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4638 } 0)

	)

4644 #i‡
deföed
(
PLAT_s390x_löux
)

4650 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__GCC_HAVE_DWARF2_CFI_ASM
)

4651 
	#__FRAME_POINTER
 \

4652 ,"d"(
	`__buûtö_dw¨f_cÁ
())

	)

4653 
	#VALGRIND_CFI_PROLOGUE
 \

4658 ".cfi_def_cÁÑ11, 0\n\t"

	)

4659 
	#VALGRIND_CFI_EPILOGUE
 \

4661 ".cfi_ª°‹e_°©e\n\t"

	)

4663 
	#__FRAME_POINTER


	)

4664 
	#VALGRIND_CFI_PROLOGUE
 \

4665 "lg∏1,%1\n\t"

	)

4666 
	#VALGRIND_CFI_EPILOGUE


	)

4678 
	#__CALLER_SAVED_REGS
 "0","1","2","3","4","5","14", \

4679 "f0","f1","f2","f3","f4","f5","f6","f7"

	)

4690 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

4692 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4693 vﬁ©ûê
_¨gvec
[1]; \

4694 vﬁ©ûê
_ªs
; \

4695 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4696 
__asm__
 volatile( \

4697 
VALGRIND_CFI_PROLOGUE
 \

4700 
VALGRIND_CALL_NOREDIR_R1
 \

4703 
VALGRIND_CFI_EPILOGUE
 \

4704 : "=d" (
_ªs
) \

4705 : "d" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4706 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"7" \

4708 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4709 } 0)

	)

4712 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

4714 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4715 vﬁ©ûê
_¨gvec
[2]; \

4716 vﬁ©ûê
_ªs
; \

4717 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4718 
_¨gvec
[1] = ()
¨g1
; \

4719 
__asm__
 volatile( \

4720 
VALGRIND_CFI_PROLOGUE
 \

4724 
VALGRIND_CALL_NOREDIR_R1
 \

4727 
VALGRIND_CFI_EPILOGUE
 \

4728 : "=d" (
_ªs
) \

4729 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4730 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"7" \

4732 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4733 } 0)

	)

4735 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
) \

4737 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4738 vﬁ©ûê
_¨gvec
[3]; \

4739 vﬁ©ûê
_ªs
; \

4740 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4741 
_¨gvec
[1] = ()
¨g1
; \

4742 
_¨gvec
[2] = ()
¨g2
; \

4743 
__asm__
 volatile( \

4744 
VALGRIND_CFI_PROLOGUE
 \

4749 
VALGRIND_CALL_NOREDIR_R1
 \

4752 
VALGRIND_CFI_EPILOGUE
 \

4753 : "=d" (
_ªs
) \

4754 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4755 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"7" \

4757 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4758 } 0)

	)

4760 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
) \

4762 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4763 vﬁ©ûê
_¨gvec
[4]; \

4764 vﬁ©ûê
_ªs
; \

4765 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4766 
_¨gvec
[1] = ()
¨g1
; \

4767 
_¨gvec
[2] = ()
¨g2
; \

4768 
_¨gvec
[3] = ()
¨g3
; \

4769 
__asm__
 volatile( \

4770 
VALGRIND_CFI_PROLOGUE
 \

4776 
VALGRIND_CALL_NOREDIR_R1
 \

4779 
VALGRIND_CFI_EPILOGUE
 \

4780 : "=d" (
_ªs
) \

4781 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4782 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"7" \

4784 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4785 } 0)

	)

4787 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
) \

4789 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4790 vﬁ©ûê
_¨gvec
[5]; \

4791 vﬁ©ûê
_ªs
; \

4792 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4793 
_¨gvec
[1] = ()
¨g1
; \

4794 
_¨gvec
[2] = ()
¨g2
; \

4795 
_¨gvec
[3] = ()
¨g3
; \

4796 
_¨gvec
[4] = ()
¨g4
; \

4797 
__asm__
 volatile( \

4798 
VALGRIND_CFI_PROLOGUE
 \

4805 
VALGRIND_CALL_NOREDIR_R1
 \

4808 
VALGRIND_CFI_EPILOGUE
 \

4809 : "=d" (
_ªs
) \

4810 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4811 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"7" \

4813 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4814 } 0)

	)

4816 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
) \

4818 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4819 vﬁ©ûê
_¨gvec
[6]; \

4820 vﬁ©ûê
_ªs
; \

4821 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4822 
_¨gvec
[1] = ()
¨g1
; \

4823 
_¨gvec
[2] = ()
¨g2
; \

4824 
_¨gvec
[3] = ()
¨g3
; \

4825 
_¨gvec
[4] = ()
¨g4
; \

4826 
_¨gvec
[5] = ()
¨g5
; \

4827 
__asm__
 volatile( \

4828 
VALGRIND_CFI_PROLOGUE
 \

4836 
VALGRIND_CALL_NOREDIR_R1
 \

4839 
VALGRIND_CFI_EPILOGUE
 \

4840 : "=d" (
_ªs
) \

4841 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4842 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

4844 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4845 } 0)

	)

4847 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

4848 
¨g6
) \

4850 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4851 vﬁ©ûê
_¨gvec
[7]; \

4852 vﬁ©ûê
_ªs
; \

4853 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4854 
_¨gvec
[1] = ()
¨g1
; \

4855 
_¨gvec
[2] = ()
¨g2
; \

4856 
_¨gvec
[3] = ()
¨g3
; \

4857 
_¨gvec
[4] = ()
¨g4
; \

4858 
_¨gvec
[5] = ()
¨g5
; \

4859 
_¨gvec
[6] = ()
¨g6
; \

4860 
__asm__
 volatile( \

4861 
VALGRIND_CFI_PROLOGUE
 \

4870 
VALGRIND_CALL_NOREDIR_R1
 \

4873 
VALGRIND_CFI_EPILOGUE
 \

4874 : "=d" (
_ªs
) \

4875 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4876 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

4878 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4879 } 0)

	)

4881 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

4882 
¨g6
, 
¨g7
) \

4884 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4885 vﬁ©ûê
_¨gvec
[8]; \

4886 vﬁ©ûê
_ªs
; \

4887 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4888 
_¨gvec
[1] = ()
¨g1
; \

4889 
_¨gvec
[2] = ()
¨g2
; \

4890 
_¨gvec
[3] = ()
¨g3
; \

4891 
_¨gvec
[4] = ()
¨g4
; \

4892 
_¨gvec
[5] = ()
¨g5
; \

4893 
_¨gvec
[6] = ()
¨g6
; \

4894 
_¨gvec
[7] = ()
¨g7
; \

4895 
__asm__
 volatile( \

4896 
VALGRIND_CFI_PROLOGUE
 \

4906 
VALGRIND_CALL_NOREDIR_R1
 \

4909 
VALGRIND_CFI_EPILOGUE
 \

4910 : "=d" (
_ªs
) \

4911 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4912 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

4914 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4915 } 0)

	)

4917 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

4918 
¨g6
, 
¨g7
 ,
¨g8
) \

4920 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4921 vﬁ©ûê
_¨gvec
[9]; \

4922 vﬁ©ûê
_ªs
; \

4923 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4924 
_¨gvec
[1] = ()
¨g1
; \

4925 
_¨gvec
[2] = ()
¨g2
; \

4926 
_¨gvec
[3] = ()
¨g3
; \

4927 
_¨gvec
[4] = ()
¨g4
; \

4928 
_¨gvec
[5] = ()
¨g5
; \

4929 
_¨gvec
[6] = ()
¨g6
; \

4930 
_¨gvec
[7] = ()
¨g7
; \

4931 
_¨gvec
[8] = ()
¨g8
; \

4932 
__asm__
 volatile( \

4933 
VALGRIND_CFI_PROLOGUE
 \

4944 
VALGRIND_CALL_NOREDIR_R1
 \

4947 
VALGRIND_CFI_EPILOGUE
 \

4948 : "=d" (
_ªs
) \

4949 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4950 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

4952 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4953 } 0)

	)

4955 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

4956 
¨g6
, 
¨g7
 ,
¨g8
, 
¨g9
) \

4958 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4959 vﬁ©ûê
_¨gvec
[10]; \

4960 vﬁ©ûê
_ªs
; \

4961 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

4962 
_¨gvec
[1] = ()
¨g1
; \

4963 
_¨gvec
[2] = ()
¨g2
; \

4964 
_¨gvec
[3] = ()
¨g3
; \

4965 
_¨gvec
[4] = ()
¨g4
; \

4966 
_¨gvec
[5] = ()
¨g5
; \

4967 
_¨gvec
[6] = ()
¨g6
; \

4968 
_¨gvec
[7] = ()
¨g7
; \

4969 
_¨gvec
[8] = ()
¨g8
; \

4970 
_¨gvec
[9] = ()
¨g9
; \

4971 
__asm__
 volatile( \

4972 
VALGRIND_CFI_PROLOGUE
 \

4984 
VALGRIND_CALL_NOREDIR_R1
 \

4987 
VALGRIND_CFI_EPILOGUE
 \

4988 : "=d" (
_ªs
) \

4989 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

4990 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

4992 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

4993 } 0)

	)

4995 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

4996 
¨g6
, 
¨g7
 ,
¨g8
, 
¨g9
, 
¨g10
) \

4998 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

4999 vﬁ©ûê
_¨gvec
[11]; \

5000 vﬁ©ûê
_ªs
; \

5001 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5002 
_¨gvec
[1] = ()
¨g1
; \

5003 
_¨gvec
[2] = ()
¨g2
; \

5004 
_¨gvec
[3] = ()
¨g3
; \

5005 
_¨gvec
[4] = ()
¨g4
; \

5006 
_¨gvec
[5] = ()
¨g5
; \

5007 
_¨gvec
[6] = ()
¨g6
; \

5008 
_¨gvec
[7] = ()
¨g7
; \

5009 
_¨gvec
[8] = ()
¨g8
; \

5010 
_¨gvec
[9] = ()
¨g9
; \

5011 
_¨gvec
[10] = ()
¨g10
; \

5012 
__asm__
 volatile( \

5013 
VALGRIND_CFI_PROLOGUE
 \

5026 
VALGRIND_CALL_NOREDIR_R1
 \

5029 
VALGRIND_CFI_EPILOGUE
 \

5030 : "=d" (
_ªs
) \

5031 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

5032 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

5034 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5035 } 0)

	)

5037 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

5038 
¨g6
, 
¨g7
 ,
¨g8
, 
¨g9
, 
¨g10
, 
¨g11
) \

5040 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5041 vﬁ©ûê
_¨gvec
[12]; \

5042 vﬁ©ûê
_ªs
; \

5043 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5044 
_¨gvec
[1] = ()
¨g1
; \

5045 
_¨gvec
[2] = ()
¨g2
; \

5046 
_¨gvec
[3] = ()
¨g3
; \

5047 
_¨gvec
[4] = ()
¨g4
; \

5048 
_¨gvec
[5] = ()
¨g5
; \

5049 
_¨gvec
[6] = ()
¨g6
; \

5050 
_¨gvec
[7] = ()
¨g7
; \

5051 
_¨gvec
[8] = ()
¨g8
; \

5052 
_¨gvec
[9] = ()
¨g9
; \

5053 
_¨gvec
[10] = ()
¨g10
; \

5054 
_¨gvec
[11] = ()
¨g11
; \

5055 
__asm__
 volatile( \

5056 
VALGRIND_CFI_PROLOGUE
 \

5070 
VALGRIND_CALL_NOREDIR_R1
 \

5073 
VALGRIND_CFI_EPILOGUE
 \

5074 : "=d" (
_ªs
) \

5075 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

5076 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

5078 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5079 } 0)

	)

5081 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
, \

5082 
¨g6
, 
¨g7
 ,
¨g8
, 
¨g9
, 
¨g10
, 
¨g11
, 
¨g12
)\

5084 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5085 vﬁ©ûê
_¨gvec
[13]; \

5086 vﬁ©ûê
_ªs
; \

5087 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5088 
_¨gvec
[1] = ()
¨g1
; \

5089 
_¨gvec
[2] = ()
¨g2
; \

5090 
_¨gvec
[3] = ()
¨g3
; \

5091 
_¨gvec
[4] = ()
¨g4
; \

5092 
_¨gvec
[5] = ()
¨g5
; \

5093 
_¨gvec
[6] = ()
¨g6
; \

5094 
_¨gvec
[7] = ()
¨g7
; \

5095 
_¨gvec
[8] = ()
¨g8
; \

5096 
_¨gvec
[9] = ()
¨g9
; \

5097 
_¨gvec
[10] = ()
¨g10
; \

5098 
_¨gvec
[11] = ()
¨g11
; \

5099 
_¨gvec
[12] = ()
¨g12
; \

5100 
__asm__
 volatile( \

5101 
VALGRIND_CFI_PROLOGUE
 \

5116 
VALGRIND_CALL_NOREDIR_R1
 \

5119 
VALGRIND_CFI_EPILOGUE
 \

5120 : "=d" (
_ªs
) \

5121 : "a" (&
_¨gvec
[0]Ë
__FRAME_POINTER
 \

5122 : "cc", "mem‹y", 
__CALLER_SAVED_REGS
,"6","7" \

5124 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5125 } 0)

	)

5132 #i‡
deföed
(
PLAT_mùs32_löux
)

5135 
	#__CALLER_SAVED_REGS
 "$2", "$3", "$4", "$5", "$6", \

5137 "$25", "$31"

	)

5142 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

5144 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5145 vﬁ©ûê
_¨gvec
[1]; \

5146 vﬁ©ûê
_ªs
; \

5147 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5148 
__asm__
 volatile( \

5154 
VALGRIND_CALL_NOREDIR_T9
 \

5160 : "Ù" (
_ªs
) \

5161 : "0" (&
_¨gvec
[0]) \

5162 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5164 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5165 } 0)

	)

5167 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

5169 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5170 vﬁ©ûê
_¨gvec
[2]; \

5171 vﬁ©ûê
_ªs
; \

5172 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5173 
_¨gvec
[1] = ()(
¨g1
); \

5174 
__asm__
 volatile( \

5181 
VALGRIND_CALL_NOREDIR_T9
 \

5187 : "Ù" (
_ªs
) \

5188 : "0" (&
_¨gvec
[0]) \

5189 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5191 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5192 } 0)

	)

5194 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

5196 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5197 vﬁ©ûê
_¨gvec
[3]; \

5198 vﬁ©ûê
_ªs
; \

5199 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5200 
_¨gvec
[1] = ()(
¨g1
); \

5201 
_¨gvec
[2] = ()(
¨g2
); \

5202 
__asm__
 volatile( \

5210 
VALGRIND_CALL_NOREDIR_T9
 \

5216 : "Ù" (
_ªs
) \

5217 : "0" (&
_¨gvec
[0]) \

5218 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5220 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5221 } 0)

	)

5223 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

5225 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5226 vﬁ©ûê
_¨gvec
[4]; \

5227 vﬁ©ûê
_ªs
; \

5228 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5229 
_¨gvec
[1] = ()(
¨g1
); \

5230 
_¨gvec
[2] = ()(
¨g2
); \

5231 
_¨gvec
[3] = ()(
¨g3
); \

5232 
__asm__
 volatile( \

5241 
VALGRIND_CALL_NOREDIR_T9
 \

5247 : "Ù" (
_ªs
) \

5248 : "0" (&
_¨gvec
[0]) \

5249 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5251 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5252 } 0)

	)

5254 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

5256 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5257 vﬁ©ûê
_¨gvec
[5]; \

5258 vﬁ©ûê
_ªs
; \

5259 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5260 
_¨gvec
[1] = ()(
¨g1
); \

5261 
_¨gvec
[2] = ()(
¨g2
); \

5262 
_¨gvec
[3] = ()(
¨g3
); \

5263 
_¨gvec
[4] = ()(
¨g4
); \

5264 
__asm__
 volatile( \

5274 
VALGRIND_CALL_NOREDIR_T9
 \

5280 : "Ù" (
_ªs
) \

5281 : "0" (&
_¨gvec
[0]) \

5282 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5284 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5285 } 0)

	)

5287 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

5289 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5290 vﬁ©ûê
_¨gvec
[6]; \

5291 vﬁ©ûê
_ªs
; \

5292 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5293 
_¨gvec
[1] = ()(
¨g1
); \

5294 
_¨gvec
[2] = ()(
¨g2
); \

5295 
_¨gvec
[3] = ()(
¨g3
); \

5296 
_¨gvec
[4] = ()(
¨g4
); \

5297 
_¨gvec
[5] = ()(
¨g5
); \

5298 
__asm__
 volatile( \

5310 
VALGRIND_CALL_NOREDIR_T9
 \

5316 : "Ù" (
_ªs
) \

5317 : "0" (&
_¨gvec
[0]) \

5318 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5320 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5321 } 0)

	)

5322 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

5324 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5325 vﬁ©ûê
_¨gvec
[7]; \

5326 vﬁ©ûê
_ªs
; \

5327 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5328 
_¨gvec
[1] = ()(
¨g1
); \

5329 
_¨gvec
[2] = ()(
¨g2
); \

5330 
_¨gvec
[3] = ()(
¨g3
); \

5331 
_¨gvec
[4] = ()(
¨g4
); \

5332 
_¨gvec
[5] = ()(
¨g5
); \

5333 
_¨gvec
[6] = ()(
¨g6
); \

5334 
__asm__
 volatile( \

5349 
VALGRIND_CALL_NOREDIR_T9
 \

5355 : "Ù" (
_ªs
) \

5356 : "0" (&
_¨gvec
[0]) \

5357 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5359 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5360 } 0)

	)

5362 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5363 
¨g7
) \

5365 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5366 vﬁ©ûê
_¨gvec
[8]; \

5367 vﬁ©ûê
_ªs
; \

5368 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5369 
_¨gvec
[1] = ()(
¨g1
); \

5370 
_¨gvec
[2] = ()(
¨g2
); \

5371 
_¨gvec
[3] = ()(
¨g3
); \

5372 
_¨gvec
[4] = ()(
¨g4
); \

5373 
_¨gvec
[5] = ()(
¨g5
); \

5374 
_¨gvec
[6] = ()(
¨g6
); \

5375 
_¨gvec
[7] = ()(
¨g7
); \

5376 
__asm__
 volatile( \

5392 
VALGRIND_CALL_NOREDIR_T9
 \

5398 : "Ù" (
_ªs
) \

5399 : "0" (&
_¨gvec
[0]) \

5400 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5402 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5403 } 0)

	)

5405 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5406 
¨g7
,
¨g8
) \

5408 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5409 vﬁ©ûê
_¨gvec
[9]; \

5410 vﬁ©ûê
_ªs
; \

5411 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5412 
_¨gvec
[1] = ()(
¨g1
); \

5413 
_¨gvec
[2] = ()(
¨g2
); \

5414 
_¨gvec
[3] = ()(
¨g3
); \

5415 
_¨gvec
[4] = ()(
¨g4
); \

5416 
_¨gvec
[5] = ()(
¨g5
); \

5417 
_¨gvec
[6] = ()(
¨g6
); \

5418 
_¨gvec
[7] = ()(
¨g7
); \

5419 
_¨gvec
[8] = ()(
¨g8
); \

5420 
__asm__
 volatile( \

5438 
VALGRIND_CALL_NOREDIR_T9
 \

5444 : "Ù" (
_ªs
) \

5445 : "0" (&
_¨gvec
[0]) \

5446 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5448 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5449 } 0)

	)

5451 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5452 
¨g7
,
¨g8
,
¨g9
) \

5454 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5455 vﬁ©ûê
_¨gvec
[10]; \

5456 vﬁ©ûê
_ªs
; \

5457 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5458 
_¨gvec
[1] = ()(
¨g1
); \

5459 
_¨gvec
[2] = ()(
¨g2
); \

5460 
_¨gvec
[3] = ()(
¨g3
); \

5461 
_¨gvec
[4] = ()(
¨g4
); \

5462 
_¨gvec
[5] = ()(
¨g5
); \

5463 
_¨gvec
[6] = ()(
¨g6
); \

5464 
_¨gvec
[7] = ()(
¨g7
); \

5465 
_¨gvec
[8] = ()(
¨g8
); \

5466 
_¨gvec
[9] = ()(
¨g9
); \

5467 
__asm__
 volatile( \

5487 
VALGRIND_CALL_NOREDIR_T9
 \

5493 : "Ù" (
_ªs
) \

5494 : "0" (&
_¨gvec
[0]) \

5495 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5497 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5498 } 0)

	)

5500 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5501 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

5503 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5504 vﬁ©ûê
_¨gvec
[11]; \

5505 vﬁ©ûê
_ªs
; \

5506 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5507 
_¨gvec
[1] = ()(
¨g1
); \

5508 
_¨gvec
[2] = ()(
¨g2
); \

5509 
_¨gvec
[3] = ()(
¨g3
); \

5510 
_¨gvec
[4] = ()(
¨g4
); \

5511 
_¨gvec
[5] = ()(
¨g5
); \

5512 
_¨gvec
[6] = ()(
¨g6
); \

5513 
_¨gvec
[7] = ()(
¨g7
); \

5514 
_¨gvec
[8] = ()(
¨g8
); \

5515 
_¨gvec
[9] = ()(
¨g9
); \

5516 
_¨gvec
[10] = ()(
¨g10
); \

5517 
__asm__
 volatile( \

5539 
VALGRIND_CALL_NOREDIR_T9
 \

5545 : "Ù" (
_ªs
) \

5546 : "0" (&
_¨gvec
[0]) \

5547 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5549 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5550 } 0)

	)

5552 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

5553 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

5554 
¨g11
) \

5556 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5557 vﬁ©ûê
_¨gvec
[12]; \

5558 vﬁ©ûê
_ªs
; \

5559 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5560 
_¨gvec
[1] = ()(
¨g1
); \

5561 
_¨gvec
[2] = ()(
¨g2
); \

5562 
_¨gvec
[3] = ()(
¨g3
); \

5563 
_¨gvec
[4] = ()(
¨g4
); \

5564 
_¨gvec
[5] = ()(
¨g5
); \

5565 
_¨gvec
[6] = ()(
¨g6
); \

5566 
_¨gvec
[7] = ()(
¨g7
); \

5567 
_¨gvec
[8] = ()(
¨g8
); \

5568 
_¨gvec
[9] = ()(
¨g9
); \

5569 
_¨gvec
[10] = ()(
¨g10
); \

5570 
_¨gvec
[11] = ()(
¨g11
); \

5571 
__asm__
 volatile( \

5595 
VALGRIND_CALL_NOREDIR_T9
 \

5601 : "Ù" (
_ªs
) \

5602 : "0" (&
_¨gvec
[0]) \

5603 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5605 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5606 } 0)

	)

5608 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

5609 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

5610 
¨g11
,
¨g12
) \

5612 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5613 vﬁ©ûê
_¨gvec
[13]; \

5614 vﬁ©ûê
_ªs
; \

5615 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5616 
_¨gvec
[1] = ()(
¨g1
); \

5617 
_¨gvec
[2] = ()(
¨g2
); \

5618 
_¨gvec
[3] = ()(
¨g3
); \

5619 
_¨gvec
[4] = ()(
¨g4
); \

5620 
_¨gvec
[5] = ()(
¨g5
); \

5621 
_¨gvec
[6] = ()(
¨g6
); \

5622 
_¨gvec
[7] = ()(
¨g7
); \

5623 
_¨gvec
[8] = ()(
¨g8
); \

5624 
_¨gvec
[9] = ()(
¨g9
); \

5625 
_¨gvec
[10] = ()(
¨g10
); \

5626 
_¨gvec
[11] = ()(
¨g11
); \

5627 
_¨gvec
[12] = ()(
¨g12
); \

5628 
__asm__
 volatile( \

5654 
VALGRIND_CALL_NOREDIR_T9
 \

5660 : "Ù" (
_ªs
) \

5661 : "r" (&
_¨gvec
[0]) \

5662 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5664 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5665 } 0)

	)

5671 #i‡
deföed
(
PLAT_mùs64_löux
)

5674 
	#__CALLER_SAVED_REGS
 "$2", "$3", "$4", "$5", "$6", \

5676 "$25", "$31"

	)

5681 
	#CALL_FN_W_v
(
lvÆ
, 
‹ig
) \

5683 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5684 vﬁ©ûê
_¨gvec
[1]; \

5685 vﬁ©ûê
_ªs
; \

5686 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5687 
__asm__
 volatile( \

5689 
VALGRIND_CALL_NOREDIR_T9
 \

5691 : "Ù" (
_ªs
) \

5692 : "0" (&
_¨gvec
[0]) \

5693 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5695 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5696 } 0)

	)

5698 
	#CALL_FN_W_W
(
lvÆ
, 
‹ig
, 
¨g1
) \

5700 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5701 vﬁ©ûê
_¨gvec
[2]; \

5702 vﬁ©ûê
_ªs
; \

5703 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5704 
_¨gvec
[1] = ()(
¨g1
); \

5705 
__asm__
 volatile( \

5708 
VALGRIND_CALL_NOREDIR_T9
 \

5710 : "Ù" (
_ªs
) \

5711 : "r" (&
_¨gvec
[0]) \

5712 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5714 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5715 } 0)

	)

5717 
	#CALL_FN_W_WW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
) \

5719 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5720 vﬁ©ûê
_¨gvec
[3]; \

5721 vﬁ©ûê
_ªs
; \

5722 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5723 
_¨gvec
[1] = ()(
¨g1
); \

5724 
_¨gvec
[2] = ()(
¨g2
); \

5725 
__asm__
 volatile( \

5729 
VALGRIND_CALL_NOREDIR_T9
 \

5731 : "Ù" (
_ªs
) \

5732 : "r" (&
_¨gvec
[0]) \

5733 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5735 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5736 } 0)

	)

5738 
	#CALL_FN_W_WWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
) \

5740 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5741 vﬁ©ûê
_¨gvec
[4]; \

5742 vﬁ©ûê
_ªs
; \

5743 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5744 
_¨gvec
[1] = ()(
¨g1
); \

5745 
_¨gvec
[2] = ()(
¨g2
); \

5746 
_¨gvec
[3] = ()(
¨g3
); \

5747 
__asm__
 volatile( \

5752 
VALGRIND_CALL_NOREDIR_T9
 \

5754 : "Ù" (
_ªs
) \

5755 : "r" (&
_¨gvec
[0]) \

5756 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5758 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5759 } 0)

	)

5761 
	#CALL_FN_W_WWWW
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
) \

5763 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5764 vﬁ©ûê
_¨gvec
[5]; \

5765 vﬁ©ûê
_ªs
; \

5766 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5767 
_¨gvec
[1] = ()(
¨g1
); \

5768 
_¨gvec
[2] = ()(
¨g2
); \

5769 
_¨gvec
[3] = ()(
¨g3
); \

5770 
_¨gvec
[4] = ()(
¨g4
); \

5771 
__asm__
 volatile( \

5777 
VALGRIND_CALL_NOREDIR_T9
 \

5779 : "Ù" (
_ªs
) \

5780 : "r" (&
_¨gvec
[0]) \

5781 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5783 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5784 } 0)

	)

5786 
	#CALL_FN_W_5W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
) \

5788 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5789 vﬁ©ûê
_¨gvec
[6]; \

5790 vﬁ©ûê
_ªs
; \

5791 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5792 
_¨gvec
[1] = ()(
¨g1
); \

5793 
_¨gvec
[2] = ()(
¨g2
); \

5794 
_¨gvec
[3] = ()(
¨g3
); \

5795 
_¨gvec
[4] = ()(
¨g4
); \

5796 
_¨gvec
[5] = ()(
¨g5
); \

5797 
__asm__
 volatile( \

5804 
VALGRIND_CALL_NOREDIR_T9
 \

5806 : "Ù" (
_ªs
) \

5807 : "r" (&
_¨gvec
[0]) \

5808 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5810 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5811 } 0)

	)

5813 
	#CALL_FN_W_6W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
) \

5815 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5816 vﬁ©ûê
_¨gvec
[7]; \

5817 vﬁ©ûê
_ªs
; \

5818 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5819 
_¨gvec
[1] = ()(
¨g1
); \

5820 
_¨gvec
[2] = ()(
¨g2
); \

5821 
_¨gvec
[3] = ()(
¨g3
); \

5822 
_¨gvec
[4] = ()(
¨g4
); \

5823 
_¨gvec
[5] = ()(
¨g5
); \

5824 
_¨gvec
[6] = ()(
¨g6
); \

5825 
__asm__
 volatile( \

5833 
VALGRIND_CALL_NOREDIR_T9
 \

5835 : "Ù" (
_ªs
) \

5836 : "r" (&
_¨gvec
[0]) \

5837 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5839 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5840 } 0)

	)

5842 
	#CALL_FN_W_7W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5843 
¨g7
) \

5845 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5846 vﬁ©ûê
_¨gvec
[8]; \

5847 vﬁ©ûê
_ªs
; \

5848 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5849 
_¨gvec
[1] = ()(
¨g1
); \

5850 
_¨gvec
[2] = ()(
¨g2
); \

5851 
_¨gvec
[3] = ()(
¨g3
); \

5852 
_¨gvec
[4] = ()(
¨g4
); \

5853 
_¨gvec
[5] = ()(
¨g5
); \

5854 
_¨gvec
[6] = ()(
¨g6
); \

5855 
_¨gvec
[7] = ()(
¨g7
); \

5856 
__asm__
 volatile( \

5865 
VALGRIND_CALL_NOREDIR_T9
 \

5867 : "Ù" (
_ªs
) \

5868 : "r" (&
_¨gvec
[0]) \

5869 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5871 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5872 } 0)

	)

5874 
	#CALL_FN_W_8W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5875 
¨g7
,
¨g8
) \

5877 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5878 vﬁ©ûê
_¨gvec
[9]; \

5879 vﬁ©ûê
_ªs
; \

5880 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5881 
_¨gvec
[1] = ()(
¨g1
); \

5882 
_¨gvec
[2] = ()(
¨g2
); \

5883 
_¨gvec
[3] = ()(
¨g3
); \

5884 
_¨gvec
[4] = ()(
¨g4
); \

5885 
_¨gvec
[5] = ()(
¨g5
); \

5886 
_¨gvec
[6] = ()(
¨g6
); \

5887 
_¨gvec
[7] = ()(
¨g7
); \

5888 
_¨gvec
[8] = ()(
¨g8
); \

5889 
__asm__
 volatile( \

5899 
VALGRIND_CALL_NOREDIR_T9
 \

5901 : "Ù" (
_ªs
) \

5902 : "r" (&
_¨gvec
[0]) \

5903 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5905 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5906 } 0)

	)

5908 
	#CALL_FN_W_9W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5909 
¨g7
,
¨g8
,
¨g9
) \

5911 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5912 vﬁ©ûê
_¨gvec
[10]; \

5913 vﬁ©ûê
_ªs
; \

5914 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5915 
_¨gvec
[1] = ()(
¨g1
); \

5916 
_¨gvec
[2] = ()(
¨g2
); \

5917 
_¨gvec
[3] = ()(
¨g3
); \

5918 
_¨gvec
[4] = ()(
¨g4
); \

5919 
_¨gvec
[5] = ()(
¨g5
); \

5920 
_¨gvec
[6] = ()(
¨g6
); \

5921 
_¨gvec
[7] = ()(
¨g7
); \

5922 
_¨gvec
[8] = ()(
¨g8
); \

5923 
_¨gvec
[9] = ()(
¨g9
); \

5924 
__asm__
 volatile( \

5937 
VALGRIND_CALL_NOREDIR_T9
 \

5940 : "Ù" (
_ªs
) \

5941 : "r" (&
_¨gvec
[0]) \

5942 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5944 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5945 } 0)

	)

5947 
	#CALL_FN_W_10W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
,
¨g6
, \

5948 
¨g7
,
¨g8
,
¨g9
,
¨g10
) \

5950 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5951 vﬁ©ûê
_¨gvec
[11]; \

5952 vﬁ©ûê
_ªs
; \

5953 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5954 
_¨gvec
[1] = ()(
¨g1
); \

5955 
_¨gvec
[2] = ()(
¨g2
); \

5956 
_¨gvec
[3] = ()(
¨g3
); \

5957 
_¨gvec
[4] = ()(
¨g4
); \

5958 
_¨gvec
[5] = ()(
¨g5
); \

5959 
_¨gvec
[6] = ()(
¨g6
); \

5960 
_¨gvec
[7] = ()(
¨g7
); \

5961 
_¨gvec
[8] = ()(
¨g8
); \

5962 
_¨gvec
[9] = ()(
¨g9
); \

5963 
_¨gvec
[10] = ()(
¨g10
); \

5964 
__asm__
 volatile( \

5979 
VALGRIND_CALL_NOREDIR_T9
 \

5982 : "Ù" (
_ªs
) \

5983 : "r" (&
_¨gvec
[0]) \

5984 : "mem‹y", 
__CALLER_SAVED_REGS
 \

5986 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

5987 } 0)

	)

5989 
	#CALL_FN_W_11W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

5990 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

5991 
¨g11
) \

5993 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

5994 vﬁ©ûê
_¨gvec
[12]; \

5995 vﬁ©ûê
_ªs
; \

5996 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

5997 
_¨gvec
[1] = ()(
¨g1
); \

5998 
_¨gvec
[2] = ()(
¨g2
); \

5999 
_¨gvec
[3] = ()(
¨g3
); \

6000 
_¨gvec
[4] = ()(
¨g4
); \

6001 
_¨gvec
[5] = ()(
¨g5
); \

6002 
_¨gvec
[6] = ()(
¨g6
); \

6003 
_¨gvec
[7] = ()(
¨g7
); \

6004 
_¨gvec
[8] = ()(
¨g8
); \

6005 
_¨gvec
[9] = ()(
¨g9
); \

6006 
_¨gvec
[10] = ()(
¨g10
); \

6007 
_¨gvec
[11] = ()(
¨g11
); \

6008 
__asm__
 volatile( \

6025 
VALGRIND_CALL_NOREDIR_T9
 \

6028 : "Ù" (
_ªs
) \

6029 : "r" (&
_¨gvec
[0]) \

6030 : "mem‹y", 
__CALLER_SAVED_REGS
 \

6032 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

6033 } 0)

	)

6035 
	#CALL_FN_W_12W
(
lvÆ
, 
‹ig
, 
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
, \

6036 
¨g6
,
¨g7
,
¨g8
,
¨g9
,
¨g10
, \

6037 
¨g11
,
¨g12
) \

6039 vﬁ©ûê
OrigFn
 
_‹ig
 = (
‹ig
); \

6040 vﬁ©ûê
_¨gvec
[13]; \

6041 vﬁ©ûê
_ªs
; \

6042 
_¨gvec
[0] = ()
_‹ig
.
ƒaddr
; \

6043 
_¨gvec
[1] = ()(
¨g1
); \

6044 
_¨gvec
[2] = ()(
¨g2
); \

6045 
_¨gvec
[3] = ()(
¨g3
); \

6046 
_¨gvec
[4] = ()(
¨g4
); \

6047 
_¨gvec
[5] = ()(
¨g5
); \

6048 
_¨gvec
[6] = ()(
¨g6
); \

6049 
_¨gvec
[7] = ()(
¨g7
); \

6050 
_¨gvec
[8] = ()(
¨g8
); \

6051 
_¨gvec
[9] = ()(
¨g9
); \

6052 
_¨gvec
[10] = ()(
¨g10
); \

6053 
_¨gvec
[11] = ()(
¨g11
); \

6054 
_¨gvec
[12] = ()(
¨g12
); \

6055 
__asm__
 volatile( \

6074 
VALGRIND_CALL_NOREDIR_T9
 \

6077 : "Ù" (
_ªs
) \

6078 : "r" (&
_¨gvec
[0]) \

6079 : "mem‹y", 
__CALLER_SAVED_REGS
 \

6081 
lvÆ
 = (
	`__ty≥of__
÷vÆ)Ë
_ªs
; \

6082 } 0)

	)

6102 
	#VG_USERREQ_TOOL_BASE
(
a
,
b
) \

6103 (()(((
a
)&0xffË<< 24 | ((
b
)&0xffË<< 16))

	)

6104 
	#VG_IS_TOOL_USERREQ
(
a
, 
b
, 
v
) \

6105 (
	`VG_USERREQ_TOOL_BASE
(
a
,
b
Ë=((
v
Ë& 0xffff0000))

	)

6112 íum { 
	mVG_USERREQ__RUNNING_ON_VALGRIND
 = 0x1001,

6113 
	mVG_USERREQ__DISCARD_TRANSLATIONS
 = 0x1002,

6120 
	mVG_USERREQ__CLIENT_CALL0
 = 0x1101,

6121 
	mVG_USERREQ__CLIENT_CALL1
 = 0x1102,

6122 
	mVG_USERREQ__CLIENT_CALL2
 = 0x1103,

6123 
	mVG_USERREQ__CLIENT_CALL3
 = 0x1104,

6128 
	mVG_USERREQ__COUNT_ERRORS
 = 0x1201,

6132 
	mVG_USERREQ__GDB_MONITOR_COMMAND
 = 0x1202,

6136 
	mVG_USERREQ__MALLOCLIKE_BLOCK
 = 0x1301,

6137 
	mVG_USERREQ__RESIZEINPLACE_BLOCK
 = 0x130b,

6138 
	mVG_USERREQ__FREELIKE_BLOCK
 = 0x1302,

6140 
	mVG_USERREQ__CREATE_MEMPOOL
 = 0x1303,

6141 
	mVG_USERREQ__DESTROY_MEMPOOL
 = 0x1304,

6142 
	mVG_USERREQ__MEMPOOL_ALLOC
 = 0x1305,

6143 
	mVG_USERREQ__MEMPOOL_FREE
 = 0x1306,

6144 
	mVG_USERREQ__MEMPOOL_TRIM
 = 0x1307,

6145 
	mVG_USERREQ__MOVE_MEMPOOL
 = 0x1308,

6146 
	mVG_USERREQ__MEMPOOL_CHANGE
 = 0x1309,

6147 
	mVG_USERREQ__MEMPOOL_EXISTS
 = 0x130a,

6156 
	mVG_USERREQ__PRINTF
 = 0x1401,

6157 
	mVG_USERREQ__PRINTF_BACKTRACE
 = 0x1402,

6159 
	mVG_USERREQ__PRINTF_VALIST_BY_REF
 = 0x1403,

6160 
	mVG_USERREQ__PRINTF_BACKTRACE_VALIST_BY_REF
 = 0x1404,

6163 
	mVG_USERREQ__STACK_REGISTER
 = 0x1501,

6164 
	mVG_USERREQ__STACK_DEREGISTER
 = 0x1502,

6165 
	mVG_USERREQ__STACK_CHANGE
 = 0x1503,

6168 
	mVG_USERREQ__LOAD_PDB_DEBUGINFO
 = 0x1601,

6171 
	mVG_USERREQ__MAP_IP_TO_SRCLOC
 = 0x1701,

6178 
	mVG_USERREQ__CHANGE_ERR_DISABLEMENT
 = 0x1801,

6181 
	mVG_USERREQ__VEX_INIT_FOR_IRI
 = 0x1901

6182 } 
	tVg_Clõ¡Reque°
;

6184 #i‡!
deföed
(
__GNUC__
)

6185 
	#__exãnsi⁄__


	)

6193 
	#RUNNING_ON_VALGRIND
 \

6194 ()
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0 , \

6195 
VG_USERREQ__RUNNING_ON_VALGRIND
, \

6197 

	)

6203 
	#VALGRIND_DISCARD_TRANSLATIONS
(
_qzz_addr
,
_qzz_Àn
) \

6204 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__DISCARD_TRANSLATIONS
, \

6205 
_qzz_addr
, 
_qzz_Àn
, 0, 0, 0)

	)

6213 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__INTEL_COMPILER
Ë&& !deföed(
_MSC_VER
)

6216 
	$VALGRIND_PRINTF
(c⁄° *
f‹m©
, ...)

6217 
	`__©åibuã__
((
	`f‹m©
(
__¥ötf__
, 1, 2), 
__unu£d__
));

6220 #i‡
	`deföed
(
_MSC_VER
)

6221 
__ölöe


6223 
	$VALGRIND_PRINTF
(c⁄° *
f‹m©
, ...)

6225 #i‡
	`deföed
(
NVALGRIND
)

6228 #i‡
	`deföed
(
_MSC_VER
Ë|| deföed(
__MINGW64__
)

6229 
uöçå_t
 
_qzz_ªs
;

6231 
_qzz_ªs
;

6233 
va_li°
 
v¨gs
;

6234 
	`va_°¨t
(
v¨gs
, 
f‹m©
);

6235 #i‡
	`deföed
(
_MSC_VER
Ë|| deföed(
__MINGW64__
)

6236 
_qzz_ªs
 = 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0,

6237 
VG_USERREQ__PRINTF_VALIST_BY_REF
,

6238 (
uöçå_t
)
f‹m©
,

6239 (
uöçå_t
)&
v¨gs
,

6242 
_qzz_ªs
 = 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0,

6243 
VG_USERREQ__PRINTF_VALIST_BY_REF
,

6244 ()
f‹m©
,

6245 ()&
v¨gs
,

6248 
	`va_íd
(
v¨gs
);

6249  ()
_qzz_ªs
;

6251 
	}
}

6253 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__INTEL_COMPILER
Ë&& !deföed(
_MSC_VER
)

6254 
	$VALGRIND_PRINTF_BACKTRACE
(c⁄° *
f‹m©
, ...)

6255 
	`__©åibuã__
((
	`f‹m©
(
__¥ötf__
, 1, 2), 
__unu£d__
));

6258 #i‡
	`deföed
(
_MSC_VER
)

6259 
__ölöe


6261 
	$VALGRIND_PRINTF_BACKTRACE
(c⁄° *
f‹m©
, ...)

6263 #i‡
	`deföed
(
NVALGRIND
)

6266 #i‡
	`deföed
(
_MSC_VER
Ë|| deföed(
__MINGW64__
)

6267 
uöçå_t
 
_qzz_ªs
;

6269 
_qzz_ªs
;

6271 
va_li°
 
v¨gs
;

6272 
	`va_°¨t
(
v¨gs
, 
f‹m©
);

6273 #i‡
	`deföed
(
_MSC_VER
Ë|| deföed(
__MINGW64__
)

6274 
_qzz_ªs
 = 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0,

6275 
VG_USERREQ__PRINTF_BACKTRACE_VALIST_BY_REF
,

6276 (
uöçå_t
)
f‹m©
,

6277 (
uöçå_t
)&
v¨gs
,

6280 
_qzz_ªs
 = 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0,

6281 
VG_USERREQ__PRINTF_BACKTRACE_VALIST_BY_REF
,

6282 ()
f‹m©
,

6283 ()&
v¨gs
,

6286 
	`va_íd
(
v¨gs
);

6287  ()
_qzz_ªs
;

6289 
	}
}

6315 
	#VALGRIND_NON_SIMD_CALL0
(
_qyy_‚
) \

6316 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0 , \

6317 
VG_USERREQ__CLIENT_CALL0
, \

6318 
_qyy_‚
, \

6319 0, 0, 0, 0)

	)

6321 
	#VALGRIND_NON_SIMD_CALL1
(
_qyy_‚
, 
_qyy_¨g1
) \

6322 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0 , \

6323 
VG_USERREQ__CLIENT_CALL1
, \

6324 
_qyy_‚
, \

6325 
_qyy_¨g1
, 0, 0, 0)

	)

6327 
	#VALGRIND_NON_SIMD_CALL2
(
_qyy_‚
, 
_qyy_¨g1
, 
_qyy_¨g2
) \

6328 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0 , \

6329 
VG_USERREQ__CLIENT_CALL2
, \

6330 
_qyy_‚
, \

6331 
_qyy_¨g1
, 
_qyy_¨g2
, 0, 0)

	)

6333 
	#VALGRIND_NON_SIMD_CALL3
(
_qyy_‚
, 
_qyy_¨g1
, 
_qyy_¨g2
, 
_qyy_¨g3
) \

6334 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0 , \

6335 
VG_USERREQ__CLIENT_CALL3
, \

6336 
_qyy_‚
, \

6337 
_qyy_¨g1
, 
_qyy_¨g2
, \

6338 
_qyy_¨g3
, 0)

	)

6344 
	#VALGRIND_COUNT_ERRORS
 \

6345 ()
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
( \

6347 
VG_USERREQ__COUNT_ERRORS
, \

6348 0, 0, 0, 0, 0)

	)

6451 
	#VALGRIND_MALLOCLIKE_BLOCK
(
addr
, 
sizeB
, 
rzB
, 
is_zî€d
) \

6452 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MALLOCLIKE_BLOCK
, \

6453 
addr
, 
sizeB
, 
rzB
, 
is_zî€d
, 0)

	)

6458 
	#VALGRIND_RESIZEINPLACE_BLOCK
(
addr
, 
ﬁdSizeB
, 
√wSizeB
, 
rzB
) \

6459 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__RESIZEINPLACE_BLOCK
, \

6460 
addr
, 
ﬁdSizeB
, 
√wSizeB
, 
rzB
, 0)

	)

6465 
	#VALGRIND_FREELIKE_BLOCK
(
addr
, 
rzB
) \

6466 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__FREELIKE_BLOCK
, \

6467 
addr
, 
rzB
, 0, 0, 0)

	)

6470 
	#VALGRIND_CREATE_MEMPOOL
(
poﬁ
, 
rzB
, 
is_zî€d
) \

6471 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__CREATE_MEMPOOL
, \

6472 
poﬁ
, 
rzB
, 
is_zî€d
, 0, 0)

	)

6475 
	#VALGRIND_DESTROY_MEMPOOL
(
poﬁ
) \

6476 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__DESTROY_MEMPOOL
, \

6477 
poﬁ
, 0, 0, 0, 0)

	)

6480 
	#VALGRIND_MEMPOOL_ALLOC
(
poﬁ
, 
addr
, 
size
) \

6481 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MEMPOOL_ALLOC
, \

6482 
poﬁ
, 
addr
, 
size
, 0, 0)

	)

6485 
	#VALGRIND_MEMPOOL_FREE
(
poﬁ
, 
addr
) \

6486 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MEMPOOL_FREE
, \

6487 
poﬁ
, 
addr
, 0, 0, 0)

	)

6490 
	#VALGRIND_MEMPOOL_TRIM
(
poﬁ
, 
addr
, 
size
) \

6491 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MEMPOOL_TRIM
, \

6492 
poﬁ
, 
addr
, 
size
, 0, 0)

	)

6495 
	#VALGRIND_MOVE_MEMPOOL
(
poﬁA
, 
poﬁB
) \

6496 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MOVE_MEMPOOL
, \

6497 
poﬁA
, 
poﬁB
, 0, 0, 0)

	)

6500 
	#VALGRIND_MEMPOOL_CHANGE
(
poﬁ
, 
addrA
, 
addrB
, 
size
) \

6501 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__MEMPOOL_CHANGE
, \

6502 
poﬁ
, 
addrA
, 
addrB
, 
size
, 0)

	)

6505 
	#VALGRIND_MEMPOOL_EXISTS
(
poﬁ
) \

6506 ()
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0, \

6507 
VG_USERREQ__MEMPOOL_EXISTS
, \

6508 
poﬁ
, 0, 0, 0, 0)

	)

6513 
	#VALGRIND_STACK_REGISTER
(
°¨t
, 
íd
) \

6514 ()
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0, \

6515 
VG_USERREQ__STACK_REGISTER
, \

6516 
°¨t
, 
íd
, 0, 0, 0)

	)

6520 
	#VALGRIND_STACK_DEREGISTER
(
id
) \

6521 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__STACK_DEREGISTER
, \

6522 
id
, 0, 0, 0, 0)

	)

6527 
	#VALGRIND_STACK_CHANGE
(
id
, 
°¨t
, 
íd
) \

6528 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__STACK_CHANGE
, \

6529 
id
, 
°¨t
, 
íd
, 0, 0)

	)

6532 
	#VALGRIND_LOAD_PDB_DEBUGINFO
(
fd
, 
±r
, 
tŸÆ_size
, 
dñè
) \

6533 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__LOAD_PDB_DEBUGINFO
, \

6534 
fd
, 
±r
, 
tŸÆ_size
, 
dñè
, 0)

	)

6540 
	#VALGRIND_MAP_IP_TO_SRCLOC
(
addr
, 
buf64
) \

6541 ()
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0, \

6542 
VG_USERREQ__MAP_IP_TO_SRCLOC
, \

6543 
addr
, 
buf64
, 0, 0, 0)

	)

6553 
	#VALGRIND_DISABLE_ERROR_REPORTING
 \

6554 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__CHANGE_ERR_DISABLEMENT
, \

6555 1, 0, 0, 0, 0)

	)

6559 
	#VALGRIND_ENABLE_ERROR_REPORTING
 \

6560 
	`VALGRIND_DO_CLIENT_REQUEST_STMT
(
VG_USERREQ__CHANGE_ERR_DISABLEMENT
, \

6561 -1, 0, 0, 0, 0)

	)

6568 
	#VALGRIND_MONITOR_COMMAND
(
comm™d
) \

6569 
	`VALGRIND_DO_CLIENT_REQUEST_EXPR
(0, 
VG_USERREQ__GDB_MONITOR_COMMAND
, \

6570 
comm™d
, 0, 0, 0, 0)

	)

6573 #unde‡
PLAT_x86_d¨wö


6574 #unde‡
PLAT_amd64_d¨wö


6575 #unde‡
PLAT_x86_wö32


6576 #unde‡
PLAT_amd64_wö64


6577 #unde‡
PLAT_x86_löux


6578 #unde‡
PLAT_amd64_löux


6579 #unde‡
PLAT_µc32_löux


6580 #unde‡
PLAT_µc64be_löux


6581 #unde‡
PLAT_µc64À_löux


6582 #unde‡
PLAT_¨m_löux


6583 #unde‡
PLAT_s390x_löux


6584 #unde‡
PLAT_mùs32_löux


6585 #unde‡
PLAT_mùs64_löux


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
450
10507
config/shore-config.h
src/api.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/asm_linkage.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/stack.h
src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/trap.h
src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h
src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h
src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h
src/atomic_ops/atomic_ops.h
src/atomic_ops/atomic_ops_builtin.h
src/atomic_ops/atomic_ops_impl.h
src/atomic_ops/empty.cpp
src/common/basics.cpp
src/common/basics.h
src/common/bitmap.cpp
src/common/bitmap.h
src/common/devid_t.cpp
src/common/devid_t.h
src/common/hostname.h
src/common/kvl_t.cpp
src/common/kvl_t.h
src/common/latch.cpp
src/common/latch.h
src/common/lid_t.cpp
src/common/lid_t.h
src/common/lsn.cpp
src/common/lsn.h
src/common/opt_einfo_bakw_gen.h
src/common/opt_einfo_gen.h
src/common/opt_errmsg_gen.h
src/common/opt_error_def_gen.h
src/common/option.cpp
src/common/option.h
src/common/regcomp.cpp
src/common/regcomp_i.h
src/common/regerror.cpp
src/common/regerror_i.h
src/common/regex.h
src/common/regex2.h
src/common/regex_cclass.h
src/common/regex_cname.h
src/common/regex_engine.cpp
src/common/regex_engine_i.h
src/common/regex_posix.cpp
src/common/regex_posix.h
src/common/regex_utils.h
src/common/regexec.cpp
src/common/regfree.cpp
src/common/sm_vas.h
src/common/stid_t.cpp
src/common/stid_t.h
src/common/store_latch_manager.cpp
src/common/store_latch_manager.h
src/common/tests/bitmap.cpp
src/common/tests/errcodes.cpp
src/common/tests/kvl.cpp
src/common/tests/latch1.cpp
src/common/tests/lsns.cpp
src/common/tests/mapp.cpp
src/common/tests/opaque.cpp
src/common/tests/vectors.cpp
src/common/tid_t.cpp
src/common/tid_t.h
src/common/umemcmp.h
src/common/vec_mkchunk.cpp
src/common/vec_t.cpp
src/common/vec_t.h
src/common/vid_t.cpp
src/common/vid_t.h
src/common/w_opaque.h
src/fc/atomic_class_pool.h
src/fc/atomic_container.h
src/fc/atomic_templates.h
src/fc/block_alloc.cpp
src/fc/block_alloc.h
src/fc/common_tmpl.cpp
src/fc/cpu_info.cpp
src/fc/cpu_info.h
src/fc/dynarray.cpp
src/fc/dynarray.h
src/fc/errlog.cpp
src/fc/errlog.h
src/fc/errlog_s.h
src/fc/fc-noinline.cpp
src/fc/fc_einfo_bakw_gen.h
src/fc/fc_einfo_gen.h
src/fc/fc_errmsg_gen.h
src/fc/fc_error_def_gen.h
src/fc/fc_error_enum_gen.h
src/fc/gethrtime.cpp
src/fc/gethrtime.h
src/fc/largefile_aware.h
src/fc/mem_block.cpp
src/fc/mem_block.h
src/fc/nbox.cpp
src/fc/nbox.h
src/fc/os_types.h
src/fc/rand48.cpp
src/fc/rand48.h
src/fc/stime.cpp
src/fc/stime.h
src/fc/tests/basic_sizes.cpp
src/fc/tests/bitvector.cpp
src/fc/tests/box.cpp
src/fc/tests/container.cpp
src/fc/tests/cuckoo.cpp
src/fc/tests/darray.cpp
src/fc/tests/errlogtest.cpp
src/fc/tests/findprime.cpp
src/fc/tests/findsizes.cpp
src/fc/tests/hash1.cpp
src/fc/tests/hash2.cpp
src/fc/tests/heap.cpp
src/fc/tests/io.cpp
src/fc/tests/list1.cpp
src/fc/tests/list2.cpp
src/fc/tests/list3.cpp
src/fc/tests/memblock.cpp
src/fc/tests/ntime.cpp
src/fc/tests/rand.cpp
src/fc/tests/random.cpp
src/fc/tests/rc.cpp
src/fc/tests/ss.cpp
src/fc/tests/stats.cpp
src/fc/tests/stats2.cpp
src/fc/tests/test_me.h
src/fc/tests/test_stat.cpp
src/fc/tests/test_stat.h
src/fc/tests/test_stat_collect_enum_gen.h
src/fc/tests/test_stat_collect_gen.cpp
src/fc/tests/test_stat_dec_gen.cpp
src/fc/tests/test_stat_inc_gen.cpp
src/fc/tests/test_stat_msg_gen.h
src/fc/tests/test_stat_out_gen.cpp
src/fc/tests/test_stat_struct_gen.h
src/fc/tls.cpp
src/fc/tls.h
src/fc/valgrind_help.cpp
src/fc/valgrind_help.h
src/fc/vtable.cpp
src/fc/vtable.h
src/fc/w.h
src/fc/w_autodel.h
src/fc/w_base.cpp
src/fc/w_base.h
src/fc/w_bitmap.cpp
src/fc/w_bitmap.h
src/fc/w_bitvector.h
src/fc/w_compat_strstream.cpp
src/fc/w_compat_strstream.h
src/fc/w_debug.cpp
src/fc/w_debug.h
src/fc/w_defines.h
src/fc/w_error.cpp
src/fc/w_error.h
src/fc/w_findprime.cpp
src/fc/w_findprime.h
src/fc/w_form.cpp
src/fc/w_getopt.cpp
src/fc/w_getopt.h
src/fc/w_gettimeofday.h
src/fc/w_hash.h
src/fc/w_hashing.h
src/fc/w_heap.h
src/fc/w_input.cpp
src/fc/w_list.h
src/fc/w_listm.cpp
src/fc/w_minmax.h
src/fc/w_rand.cpp
src/fc/w_rand.h
src/fc/w_rc.cpp
src/fc/w_rc.h
src/fc/w_rusage.h
src/fc/w_stat.h
src/fc/w_stream.h
src/fc/w_strstream.h
src/fc/w_temp_alloc.cpp
src/fc/w_temp_alloc.h
src/fc/w_workaround.h
src/internal.h
src/mainpage.h
src/references.h
src/sm/app_support.h
src/sm/bf.cpp
src/sm/bf.h
src/sm/bf_core.cpp
src/sm/bf_core.h
src/sm/bf_htab.cpp
src/sm/bf_htab.h
src/sm/bf_htab_stats_t_collect_enum_gen.h
src/sm/bf_htab_stats_t_collect_gen.cpp
src/sm/bf_htab_stats_t_dec_gen.cpp
src/sm/bf_htab_stats_t_inc_gen.cpp
src/sm/bf_htab_stats_t_msg_gen.h
src/sm/bf_htab_stats_t_out_gen.cpp
src/sm/bf_htab_stats_t_struct_gen.h
src/sm/bf_htab_test.cpp
src/sm/bf_prefetch.cpp
src/sm/bf_prefetch.h
src/sm/bf_s.h
src/sm/bf_transit_bucket.h
src/sm/btcursor.cpp
src/sm/btcursor.h
src/sm/btree.cpp
src/sm/btree.h
src/sm/btree_bl.cpp
src/sm/btree_impl.cpp
src/sm/btree_impl.h
src/sm/btree_latch_manager.cpp
src/sm/btree_latch_manager.h
src/sm/btree_p.cpp
src/sm/btree_p.h
src/sm/chkpt.cpp
src/sm/chkpt.h
src/sm/chkpt_serial.cpp
src/sm/chkpt_serial.h
src/sm/common_templates.cpp
src/sm/crash.cpp
src/sm/crash.h
src/sm/data_access_histogram.cpp
src/sm/data_access_histogram.h
src/sm/device.cpp
src/sm/device.h
src/sm/dir.cpp
src/sm/dir.h
src/sm/e_einfo_bakw_gen.h
src/sm/e_einfo_gen.h
src/sm/e_errmsg_gen.h
src/sm/e_error_def_gen.h
src/sm/e_error_enum_gen.h
src/sm/extent.h
src/sm/file.cpp
src/sm/file.h
src/sm/file_s.h
src/sm/histo.cpp
src/sm/histo.h
src/sm/key_ranges_map.cpp
src/sm/key_ranges_map.h
src/sm/keyed.cpp
src/sm/keyed.h
src/sm/lexify.cpp
src/sm/lexify.h
src/sm/lgrec.cpp
src/sm/lgrec.h
src/sm/lid.cpp
src/sm/lid.h
src/sm/lock.cpp
src/sm/lock.h
src/sm/lock_cache.h
src/sm/lock_core.cpp
src/sm/lock_core.h
src/sm/lock_s.h
src/sm/lock_s_inline.h
src/sm/lock_x.h
src/sm/log.cpp
src/sm/log.h
src/sm/log_core.cpp
src/sm/log_core.h
src/sm/logdef_gen.cpp
src/sm/logfunc_gen.h
src/sm/logrec.cpp
src/sm/logrec.h
src/sm/logstr_gen.cpp
src/sm/logstub.cpp
src/sm/logstub_gen.cpp
src/sm/logtype_gen.h
src/sm/newsort.cpp
src/sm/page.cpp
src/sm/page.h
src/sm/page_alias.h
src/sm/page_h.h
src/sm/page_s.h
src/sm/partition.cpp
src/sm/partition.h
src/sm/pin.cpp
src/sm/pin.h
src/sm/pmap.cpp
src/sm/pmap.h
src/sm/prologue.h
src/sm/ranges_p.cpp
src/sm/ranges_p.h
src/sm/redo_gen.cpp
src/sm/restart.cpp
src/sm/restart.h
src/sm/restart_s.h
src/sm/rtree.cpp
src/sm/rtree.h
src/sm/rtree_p.h
src/sm/scan.cpp
src/sm/scan.h
src/sm/sdesc.h
src/sm/sm-no-inline.cpp
src/sm/sm.cpp
src/sm/sm.h
src/sm/sm_base.h
src/sm/sm_du_stats.cpp
src/sm/sm_du_stats.h
src/sm/sm_escalation.h
src/sm/sm_int_0.h
src/sm/sm_int_1.h
src/sm/sm_int_2.h
src/sm/sm_int_3.h
src/sm/sm_int_4.h
src/sm/sm_io.cpp
src/sm/sm_io.h
src/sm/sm_s.cpp
src/sm/sm_s.h
src/sm/sm_stats_t_collect_enum_gen.h
src/sm/sm_stats_t_collect_gen.cpp
src/sm/sm_stats_t_dec_gen.cpp
src/sm/sm_stats_t_inc_gen.cpp
src/sm/sm_stats_t_msg_gen.h
src/sm/sm_stats_t_out_gen.cpp
src/sm/sm_stats_t_struct_gen.h
src/sm/sm_vtable_enum.h
src/sm/smfile.cpp
src/sm/smindex.cpp
src/sm/smsh/out_of_log_space.cpp
src/sm/smsh/random_kick.cpp
src/sm/smsh/shell.cpp
src/sm/smsh/shell.h
src/sm/smsh/shell2.cpp
src/sm/smsh/sm_sizeof.cpp
src/sm/smsh/smsh.cpp
src/sm/smsh/smsh.h
src/sm/smsh/smsh_error.cpp
src/sm/smsh/smsh_error.h
src/sm/smsh/sort_funcs.cpp
src/sm/smsh/sort_funcs.h
src/sm/smsh/sort_funcs2.cpp
src/sm/smsh/sort_funcs3.cpp
src/sm/smsh/sort_funcs4.cpp
src/sm/smsh/tcl_thread.cpp
src/sm/smsh/tcl_thread.h
src/sm/smsh/tcl_workaround.h
src/sm/smstats.cpp
src/sm/smstats.h
src/sm/smthread.cpp
src/sm/smthread.h
src/sm/sort.cpp
src/sm/sort.h
src/sm/sort_s.h
src/sm/sysdefs.h
src/sm/tests/create_rec.cpp
src/sm/tests/file_scan.cpp
src/sm/tests/file_scan_many.cpp
src/sm/tests/htab.cpp
src/sm/tests/init_config_options.cpp
src/sm/tests/lock_cache_test.cpp
src/sm/tests/lockid_test.cpp
src/sm/tests/log_exceed.cpp
src/sm/tests/mrbtrees_test.cpp
src/sm/tests/rtree_example.cpp
src/sm/tests/sort_stream.cpp
src/sm/tests/startstop.cpp
src/sm/tests/stopwatch.h
src/sm/tests/vtable_example.cpp
src/sm/undo_gen.cpp
src/sm/vol.cpp
src/sm/vol.h
src/sm/vtable_sm.cpp
src/sm/vtable_smthread.cpp
src/sm/vtable_xct.cpp
src/sm/xct.cpp
src/sm/xct.h
src/sm/xct_dependent.h
src/sm/zkeyed.cpp
src/sm/zkeyed.h
src/sthread/auto_release.h
src/sthread/io.cpp
src/sthread/macpthread_barrier.h
src/sthread/mcs_lock.h
src/sthread/no-inline.cpp
src/sthread/os_fcntl.h
src/sthread/os_interface.h
src/sthread/sdisk.cpp
src/sthread/sdisk.h
src/sthread/sdisk_unix.cpp
src/sthread/sdisk_unix.h
src/sthread/srwlock.cpp
src/sthread/srwlock.h
src/sthread/st_einfo_bakw_gen.h
src/sthread/st_einfo_gen.h
src/sthread/st_errmsg_gen.h
src/sthread/st_error_def_gen.h
src/sthread/st_error_enum_gen.h
src/sthread/stcore_pthread.h
src/sthread/sthread.cpp
src/sthread/sthread.h
src/sthread/sthread_core_pthread.cpp
src/sthread/sthread_stats.cpp
src/sthread/sthread_stats.h
src/sthread/sthread_stats_collect_enum_gen.h
src/sthread/sthread_stats_collect_gen.cpp
src/sthread/sthread_stats_dec_gen.cpp
src/sthread/sthread_stats_inc_gen.cpp
src/sthread/sthread_stats_msg_gen.h
src/sthread/sthread_stats_out_gen.cpp
src/sthread/sthread_stats_struct_gen.h
src/sthread/sthread_vtable_enum.h
src/sthread/tests/except.cpp
src/sthread/tests/ioperf.cpp
src/sthread/tests/mmap.cpp
src/sthread/tests/pthread_test.cpp
src/sthread/tests/thread1.cpp
src/sthread/tests/thread2.cpp
src/sthread/tests/thread3.cpp
src/sthread/tests/thread4.cpp
src/sthread/vtable_sthread.cpp
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/regex.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/spawn.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/valgrind/valgrind.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
